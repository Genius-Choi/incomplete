[
    {
        "line": 2,
        "fullcodeline": "text = b\"GET /test HTTP/1.1\\r\\n\" b\"transfer-encoding: chunked\\r\\n\\r\\n\""
    },
    {
        "line": 5,
        "fullcodeline": "assert msg.chunked"
    },
    {
        "line": 6,
        "fullcodeline": "assert not payload.is_eof()"
    },
    {
        "line": 7,
        "fullcodeline": "assert isinstance(payload, streams.StreamReader)"
    },
    {
        "line": 9,
        "fullcodeline": "parser.feed_data(b\"4\\r\\ndata\\r\\n4\\r\\nline\\r\\n0\\r\\n\\r\\n\")"
    },
    {
        "line": 11,
        "fullcodeline": "assert b\"dataline\" == b\"\".join(d for d in payload._buffer)"
    },
    {
        "line": 12,
        "fullcodeline": "assert [4, 8] == payload._http_chunk_splits"
    },
    {
        "line": 13,
        "fullcodeline": "assert payload.is_eof()"
    },
    {
        "line": 3,
        "fullcodeline": "msg, payload = parser.feed_data(text)[0][0]"
    }
]