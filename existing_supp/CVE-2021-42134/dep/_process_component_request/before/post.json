[
    {
        "line": 29,
        "fullcodeline": "component = UnicornView.create("
    },
    {
        "line": 36,
        "fullcodeline": "original_data = copy.deepcopy(component_request.data)"
    },
    {
        "line": 41,
        "fullcodeline": "component.hydrate()"
    },
    {
        "line": 43,
        "fullcodeline": "validate_all_fields = False"
    },
    {
        "line": 44,
        "fullcodeline": "is_reset_called = False"
    },
    {
        "line": 45,
        "fullcodeline": "is_refresh_called = False"
    },
    {
        "line": 46,
        "fullcodeline": "return_data = None"
    },
    {
        "line": 47,
        "fullcodeline": "partials = []"
    },
    {
        "line": 72,
        "fullcodeline": "component.complete()"
    },
    {
        "line": 75,
        "fullcodeline": "component_request.data = orjson.loads(component.get_frontend_context_variables())"
    },
    {
        "line": 78,
        "fullcodeline": "updated_data = component_request.data"
    },
    {
        "line": 93,
        "fullcodeline": "rendered_component = component.render()"
    },
    {
        "line": 94,
        "fullcodeline": "component.rendered(rendered_component)"
    },
    {
        "line": 103,
        "fullcodeline": "partial_doms = []"
    },
    {
        "line": 146,
        "fullcodeline": "res = {"
    },
    {
        "line": 189,
        "fullcodeline": "parent_component = component.parent"
    },
    {
        "line": 39,
        "fullcodeline": "for (property_name, property_value) in component_request.data.items():"
    },
    {
        "line": 49,
        "fullcodeline": "for action in component_request.action_queue:"
    },
    {
        "line": 80,
        "fullcodeline": "if not is_reset_called:"
    },
    {
        "line": 105,
        "fullcodeline": "if partials and all(partials):"
    },
    {
        "line": 99,
        "fullcodeline": "cache.set(component.component_cache_key, get_cacheable_component(component))"
    },
    {
        "line": 106,
        "fullcodeline": "soup = BeautifulSoup(rendered_component, features=\"html.parser\")"
    },
    {
        "line": 155,
        "fullcodeline": "res.update({\"partials\": partial_doms})"
    },
    {
        "line": 157,
        "fullcodeline": "hash = generate_checksum(rendered_component)"
    },
    {
        "line": 167,
        "fullcodeline": "soup = BeautifulSoup(rendered_component, features=\"html.parser\")"
    },
    {
        "line": 168,
        "fullcodeline": "rendered_component = str(get_root_element(soup))"
    },
    {
        "line": 170,
        "fullcodeline": "res.update("
    },
    {
        "line": 175,
        "fullcodeline": "res.update("
    },
    {
        "line": 193,
        "fullcodeline": "parent_frontend_context_variables = loads("
    },
    {
        "line": 196,
        "fullcodeline": "parent_checksum = generate_checksum(dumps(parent_frontend_context_variables))"
    },
    {
        "line": 198,
        "fullcodeline": "parent = {"
    },
    {
        "line": 223,
        "fullcodeline": "res.update({\"parent\": parent})"
    },
    {
        "line": 40,
        "fullcodeline": "set_property_from_data(component, property_name, property_value)"
    },
    {
        "line": 81,
        "fullcodeline": "if not is_refresh_called:"
    },
    {
        "line": 108,
        "fullcodeline": "for partial in partials:"
    },
    {
        "line": 151,
        "fullcodeline": "\"checksum\": generate_checksum(orjson.dumps(component_request.data)),"
    },
    {
        "line": 160,
        "fullcodeline": "component_request.hash == hash"
    },
    {
        "line": 203,
        "fullcodeline": "if not partial_doms:"
    },
    {
        "line": 55,
        "fullcodeline": "if action.action_type == \"syncInput\":"
    },
    {
        "line": 82,
        "fullcodeline": "updated_data = {}"
    },
    {
        "line": 89,
        "fullcodeline": "component.validate()"
    },
    {
        "line": 91,
        "fullcodeline": "component.validate(model_names=list(updated_data.keys()))"
    },
    {
        "line": 101,
        "fullcodeline": "logger.warning(e)"
    },
    {
        "line": 161,
        "fullcodeline": "and (not return_data or not return_data.value)"
    },
    {
        "line": 164,
        "fullcodeline": "raise RenderNotModified()"
    },
    {
        "line": 171,
        "fullcodeline": "{\"dom\": rendered_component, \"hash\": hash,}"
    },
    {
        "line": 176,
        "fullcodeline": "{\"return\": return_data.get_data(),}"
    },
    {
        "line": 180,
        "fullcodeline": "res.update("
    },
    {
        "line": 185,
        "fullcodeline": "res.update("
    },
    {
        "line": 194,
        "fullcodeline": "parent_component.get_frontend_context_variables()"
    },
    {
        "line": 204,
        "fullcodeline": "parent_dom = parent_component.render()"
    },
    {
        "line": 205,
        "fullcodeline": "component.parent_rendered(parent_dom)"
    },
    {
        "line": 215,
        "fullcodeline": "parent.update("
    },
    {
        "line": 51,
        "fullcodeline": "partials.append(action.partial)"
    },
    {
        "line": 53,
        "fullcodeline": "partials = action.partials"
    },
    {
        "line": 56,
        "fullcodeline": "sync_input.handle(component_request, component, action.payload)"
    },
    {
        "line": 84,
        "fullcodeline": "for key, value in original_data.items():"
    },
    {
        "line": 109,
        "fullcodeline": "partial_found = False"
    },
    {
        "line": 110,
        "fullcodeline": "only_id = False"
    },
    {
        "line": 111,
        "fullcodeline": "only_key = False"
    },
    {
        "line": 113,
        "fullcodeline": "target = partial.get(\"target\")"
    },
    {
        "line": 127,
        "fullcodeline": "assert target, \"Partial target is required\""
    },
    {
        "line": 57,
        "fullcodeline": "elif action.action_type == \"callMethod\":"
    },
    {
        "line": 115,
        "fullcodeline": "if not target:"
    },
    {
        "line": 121,
        "fullcodeline": "if not target:"
    },
    {
        "line": 129,
        "fullcodeline": "if not only_id:"
    },
    {
        "line": 139,
        "fullcodeline": "if not partial_found and not only_key:"
    },
    {
        "line": 181,
        "fullcodeline": "{\"redirect\": return_data.redirect,}"
    },
    {
        "line": 186,
        "fullcodeline": "{\"poll\": return_data.poll,}"
    },
    {
        "line": 208,
        "fullcodeline": "cache.set("
    },
    {
        "line": 216,
        "fullcodeline": "{"
    },
    {
        "line": 66,
        "fullcodeline": "is_refresh_called = is_refresh_called | _is_refresh_called"
    },
    {
        "line": 67,
        "fullcodeline": "is_reset_called = is_reset_called | _is_reset_called"
    },
    {
        "line": 68,
        "fullcodeline": "validate_all_fields = validate_all_fields | _validate_all_fields"
    },
    {
        "line": 70,
        "fullcodeline": "raise UnicornViewError(f\"Unknown action_type '{action.action_type}'\")"
    },
    {
        "line": 116,
        "fullcodeline": "target = partial.get(\"key\")"
    },
    {
        "line": 122,
        "fullcodeline": "target = partial.get(\"id\")"
    },
    {
        "line": 210,
        "fullcodeline": "get_cacheable_component(parent_component),"
    },
    {
        "line": 58,
        "fullcodeline": "("
    },
    {
        "line": 85,
        "fullcodeline": "if value != component_request.data.get(key):"
    },
    {
        "line": 130,
        "fullcodeline": "for element in soup.find_all():"
    },
    {
        "line": 140,
        "fullcodeline": "for element in soup.find_all():"
    },
    {
        "line": 213,
        "fullcodeline": "logger.warning(e)"
    },
    {
        "line": 64,
        "fullcodeline": ") = call_method.handle(component_request, component, action.payload)"
    },
    {
        "line": 86,
        "fullcodeline": "updated_data[key] = component_request.data.get(key)"
    },
    {
        "line": 119,
        "fullcodeline": "only_key = True"
    },
    {
        "line": 125,
        "fullcodeline": "only_id = True"
    },
    {
        "line": 132,
        "fullcodeline": "\"unicorn:key\" in element.attrs"
    },
    {
        "line": 141,
        "fullcodeline": "if \"id\" in element.attrs and element.attrs[\"id\"] == target:"
    },
    {
        "line": 133,
        "fullcodeline": "and element.attrs[\"unicorn:key\"] == target"
    },
    {
        "line": 135,
        "fullcodeline": "partial_doms.append({\"key\": target, \"dom\": str(element)})"
    },
    {
        "line": 136,
        "fullcodeline": "partial_found = True"
    },
    {
        "line": 142,
        "fullcodeline": "partial_doms.append({\"id\": target, \"dom\": str(element)})"
    },
    {
        "line": 143,
        "fullcodeline": "partial_found = True"
    }
]