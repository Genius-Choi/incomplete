[
    {
        "line": 23,
        "fullcodeline": "memset(&cai, 0, sizeof(cai));"
    },
    {
        "line": 24,
        "fullcodeline": "memset(&ied, 0, sizeof(ied));"
    },
    {
        "line": 25,
        "fullcodeline": "memset(&pds, 0, sizeof(pds));"
    },
    {
        "line": 27,
        "fullcodeline": "tmpstr = ast_strdupa(data);"
    },
    {
        "line": 28,
        "fullcodeline": "parse_dial_string(tmpstr, &pds);"
    },
    {
        "line": 39,
        "fullcodeline": "ast_debug(1, \"peer: %s, username: %s, password: %s, context: %s\\n\","
    },
    {
        "line": 42,
        "fullcodeline": "callno = find_callno_locked(0, 0, &sin, NEW_FORCE, cai.sockfd, 0);"
    },
    {
        "line": 48,
        "fullcodeline": "ast_string_field_set(iaxs[callno], dproot, data);"
    },
    {
        "line": 49,
        "fullcodeline": "iaxs[callno]->capability = IAX_CAPABILITY_FULLBANDWIDTH;"
    },
    {
        "line": 51,
        "fullcodeline": "iax_ie_append_short(&ied, IAX_IE_VERSION, IAX_PROTO_VERSION);"
    },
    {
        "line": 52,
        "fullcodeline": "iax_ie_append_str(&ied, IAX_IE_CALLED_NUMBER, \"TBD\");"
    },
    {
        "line": 60,
        "fullcodeline": "iax_ie_append_int(&ied, IAX_IE_FORMAT, IAX_CAPABILITY_FULLBANDWIDTH);"
    },
    {
        "line": 61,
        "fullcodeline": "iax_ie_append_int(&ied, IAX_IE_CAPABILITY, IAX_CAPABILITY_FULLBANDWIDTH);"
    },
    {
        "line": 68,
        "fullcodeline": "send_command(iaxs[callno], AST_FRAME_IAX, IAX_COMMAND_NEW, 0, ied.buf, ied.pos, -1);"
    },
    {
        "line": 11,
        "fullcodeline": "for (x=0; x<IAX_MAX_CALLS; x++) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (ast_strlen_zero(pds.peer)) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (create_addr(pds.peer, NULL, &sin, &cai))"
    },
    {
        "line": 43,
        "fullcodeline": "if (callno < 1) {"
    },
    {
        "line": 31,
        "fullcodeline": "ast_log(LOG_WARNING, \"No peer provided in the IAX2 dial string '%s'\\n\", data);"
    },
    {
        "line": 44,
        "fullcodeline": "ast_log(LOG_WARNING, \"Unable to create call\\n\");"
    },
    {
        "line": 57,
        "fullcodeline": "iax_ie_append_str(&ied, IAX_IE_CALLED_CONTEXT, pds.exten);"
    },
    {
        "line": 59,
        "fullcodeline": "iax_ie_append_str(&ied, IAX_IE_USERNAME, pds.username);"
    },
    {
        "line": 64,
        "fullcodeline": "ast_string_field_set(iaxs[callno], secret, pds.password);"
    },
    {
        "line": 66,
        "fullcodeline": "ast_string_field_set(iaxs[callno], outkey, pds.key);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!ast_mutex_trylock(&iaxsl[x])) {"
    },
    {
        "line": 32,
        "fullcodeline": "return -1;"
    },
    {
        "line": 37,
        "fullcodeline": "return -1;"
    },
    {
        "line": 45,
        "fullcodeline": "return -1;"
    },
    {
        "line": 17,
        "fullcodeline": "ast_mutex_unlock(&iaxsl[x]);"
    },
    {
        "line": 15,
        "fullcodeline": "if (iaxs[x] && !strcasecmp(data, iaxs[x]->dproot))"
    }
]