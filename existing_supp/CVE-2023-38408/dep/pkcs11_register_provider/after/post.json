[
    {
        "line": 5,
        "fullcodeline": "int nkeys, need_finalize = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "int ret = -1;"
    },
    {
        "line": 7,
        "fullcodeline": "struct pkcs11_provider *p = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "void *handle = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "CK_FUNCTION_LIST *f = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "*providerp = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "p = xcalloc(1, sizeof(*p));"
    },
    {
        "line": 36,
        "fullcodeline": "p->name = xstrdup(provider_id);"
    },
    {
        "line": 37,
        "fullcodeline": "p->handle = handle;"
    },
    {
        "line": 44,
        "fullcodeline": "p->function_list = f;"
    },
    {
        "line": 50,
        "fullcodeline": "need_finalize = 1;"
    },
    {
        "line": 58,
        "fullcodeline": "debug(\"provider %s: manufacturerID <%s> cryptokiVersion %d.%d\""
    },
    {
        "line": 76,
        "fullcodeline": "p->slotlist = xcalloc(p->nslots, sizeof(CK_SLOT_ID));"
    },
    {
        "line": 83,
        "fullcodeline": "p->slotinfo = xcalloc(p->nslots, sizeof(struct pkcs11_slotinfo));"
    },
    {
        "line": 84,
        "fullcodeline": "p->valid = 1;"
    },
    {
        "line": 85,
        "fullcodeline": "nkeys = 0;"
    },
    {
        "line": 134,
        "fullcodeline": "*providerp = p;"
    },
    {
        "line": 136,
        "fullcodeline": "TAILQ_INSERT_TAIL(&pkcs11_providers, p, next);"
    },
    {
        "line": 137,
        "fullcodeline": "p->refcount++;\t/* add to provider list */"
    },
    {
        "line": 15,
        "fullcodeline": "if (providerp == NULL)"
    },
    {
        "line": 19,
        "fullcodeline": "if (keyp != NULL)"
    },
    {
        "line": 21,
        "fullcodeline": "if (labelsp != NULL)"
    },
    {
        "line": 24,
        "fullcodeline": "if (pkcs11_provider_lookup(provider_id) != NULL) {"
    },
    {
        "line": 29,
        "fullcodeline": "if ((handle = dlopen(provider_id, RTLD_NOW)) == NULL) {"
    },
    {
        "line": 33,
        "fullcodeline": "if ((getfunctionlist = dlsym(handle, \"C_GetFunctionList\")) == NULL)"
    },
    {
        "line": 39,
        "fullcodeline": "if ((rv = (*getfunctionlist)(&f)) != CKR_OK) {"
    },
    {
        "line": 45,
        "fullcodeline": "if ((rv = f->C_Initialize(NULL)) != CKR_OK) {"
    },
    {
        "line": 51,
        "fullcodeline": "if ((rv = f->C_GetInfo(&p->info)) != CKR_OK) {"
    },
    {
        "line": 67,
        "fullcodeline": "if ((rv = f->C_GetSlotList(CK_TRUE, NULL, &p->nslots)) != CKR_OK) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (p->nslots == 0) {"
    },
    {
        "line": 77,
        "fullcodeline": "if ((rv = f->C_GetSlotList(CK_TRUE, p->slotlist, &p->nslots))"
    },
    {
        "line": 86,
        "fullcodeline": "for (i = 0; i < p->nslots; i++) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (need_finalize && (rv = f->C_Finalize(NULL)) != CKR_OK)"
    },
    {
        "line": 152,
        "fullcodeline": "if (ret > 0)"
    },
    {
        "line": 20,
        "fullcodeline": "*keyp = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "*labelsp = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "debug_f(\"provider already registered: %s\", provider_id);"
    },
    {
        "line": 30,
        "fullcodeline": "error(\"dlopen %s failed: %s\", provider_id, dlerror());"
    },
    {
        "line": 34,
        "fullcodeline": "fatal(\"dlsym(C_GetFunctionList) failed: %s\", dlerror());"
    },
    {
        "line": 40,
        "fullcodeline": "error(\"C_GetFunctionList for provider %s failed: %lu\","
    },
    {
        "line": 46,
        "fullcodeline": "error(\"C_Initialize for provider %s failed: %lu\","
    },
    {
        "line": 52,
        "fullcodeline": "error(\"C_GetInfo for provider %s failed: %lu\","
    },
    {
        "line": 68,
        "fullcodeline": "error(\"C_GetSlotList failed: %lu\", rv);"
    },
    {
        "line": 72,
        "fullcodeline": "debug_f(\"provider %s returned no slots\", provider_id);"
    },
    {
        "line": 73,
        "fullcodeline": "ret = -SSH_PKCS11_ERR_NO_SLOTS;"
    },
    {
        "line": 79,
        "fullcodeline": "error(\"C_GetSlotList for provider %s failed: %lu\","
    },
    {
        "line": 99,
        "fullcodeline": "rmspace(token->label, sizeof(token->label));"
    },
    {
        "line": 100,
        "fullcodeline": "rmspace(token->manufacturerID, sizeof(token->manufacturerID));"
    },
    {
        "line": 101,
        "fullcodeline": "rmspace(token->model, sizeof(token->model));"
    },
    {
        "line": 102,
        "fullcodeline": "rmspace(token->serialNumber, sizeof(token->serialNumber));"
    },
    {
        "line": 103,
        "fullcodeline": "debug(\"provider %s slot %lu: label <%s> manufacturerID <%s> \""
    },
    {
        "line": 115,
        "fullcodeline": "pkcs11_fetch_keys(p, i, keyp, labelsp, &nkeys);"
    },
    {
        "line": 116,
        "fullcodeline": "pkcs11_fetch_certs(p, i, keyp, labelsp, &nkeys);"
    },
    {
        "line": 142,
        "fullcodeline": "error(\"C_Finalize for provider %s failed: %lu\","
    },
    {
        "line": 145,
        "fullcodeline": "free(p->name);"
    },
    {
        "line": 146,
        "fullcodeline": "free(p->slotlist);"
    },
    {
        "line": 147,
        "fullcodeline": "free(p->slotinfo);"
    },
    {
        "line": 148,
        "fullcodeline": "free(p);"
    },
    {
        "line": 151,
        "fullcodeline": "dlclose(handle);"
    },
    {
        "line": 153,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 88,
        "fullcodeline": "if ((rv = f->C_GetTokenInfo(p->slotlist[i], token))"
    },
    {
        "line": 94,
        "fullcodeline": "if ((token->flags & CKF_TOKEN_INITIALIZED) == 0) {"
    },
    {
        "line": 105,
        "fullcodeline": "provider_id, (unsigned long)i,"
    },
    {
        "line": 112,
        "fullcodeline": "if ((ret = pkcs11_open_session(p, i, pin, user)) != 0 ||"
    },
    {
        "line": 117,
        "fullcodeline": "if (nkeys == 0 && !p->slotinfo[i].logged_in &&"
    },
    {
        "line": 90,
        "fullcodeline": "error(\"C_GetTokenInfo for provider %s slot %lu \""
    },
    {
        "line": 95,
        "fullcodeline": "debug2_f(\"ignoring uninitialised token in \""
    },
    {
        "line": 113,
        "fullcodeline": "keyp == NULL)"
    },
    {
        "line": 128,
        "fullcodeline": "pkcs11_fetch_keys(p, i, keyp, labelsp, &nkeys);"
    },
    {
        "line": 129,
        "fullcodeline": "pkcs11_fetch_certs(p, i, keyp, labelsp, &nkeys);"
    },
    {
        "line": 91,
        "fullcodeline": "\"failed: %lu\", provider_id, (u_long)i, rv);"
    },
    {
        "line": 96,
        "fullcodeline": "\"provider %s slot %lu\", provider_id, (u_long)i);"
    },
    {
        "line": 123,
        "fullcodeline": "if (pkcs11_login_slot(p, &p->slotinfo[i],"
    },
    {
        "line": 125,
        "fullcodeline": "error(\"login failed\");"
    }
]