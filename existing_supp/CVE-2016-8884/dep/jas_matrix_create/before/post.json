[
    {
        "line": 9,
        "fullcodeline": "matrix->flags_ = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "matrix->numrows_ = numrows;"
    },
    {
        "line": 11,
        "fullcodeline": "matrix->numcols_ = numcols;"
    },
    {
        "line": 12,
        "fullcodeline": "matrix->rows_ = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "matrix->maxrows_ = numrows;"
    },
    {
        "line": 14,
        "fullcodeline": "matrix->data_ = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "matrix->datasize_ = numrows * numcols;"
    },
    {
        "line": 41,
        "fullcodeline": "matrix->xstart_ = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "matrix->ystart_ = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "matrix->xend_ = matrix->numcols_;"
    },
    {
        "line": 44,
        "fullcodeline": "matrix->yend_ = matrix->numrows_;"
    },
    {
        "line": 6,
        "fullcodeline": "if (!(matrix = jas_malloc(sizeof(jas_matrix_t)))) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (matrix->maxrows_ > 0) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (matrix->datasize_ > 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "for (i = 0; i < numrows; ++i) {"
    },
    {
        "line": 37,
        "fullcodeline": "for (i = 0; i < matrix->datasize_; ++i) {"
    },
    {
        "line": 34,
        "fullcodeline": "matrix->rows_[i] = &matrix->data_[i * matrix->numcols_];"
    },
    {
        "line": 38,
        "fullcodeline": "matrix->data_[i] = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "if (!(matrix->rows_ = jas_alloc2(matrix->maxrows_,"
    },
    {
        "line": 26,
        "fullcodeline": "if (!(matrix->data_ = jas_alloc2(matrix->datasize_,"
    },
    {
        "line": 20,
        "fullcodeline": "jas_matrix_destroy(matrix);"
    },
    {
        "line": 28,
        "fullcodeline": "jas_matrix_destroy(matrix);"
    }
]