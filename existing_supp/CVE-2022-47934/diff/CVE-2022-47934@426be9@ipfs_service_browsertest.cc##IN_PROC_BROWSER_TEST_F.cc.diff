--- before
+++ after
@@ -1,25 +1,31 @@
-IN_PROC_BROWSER_TEST_F(IpfsServiceBrowserTest, CanLoadIPFSImageFromIPFS) {
+IN_PROC_BROWSER_TEST_F(IpfsServiceBrowserTest, CannotLoadIframeFromHTTP) {
+  browser()->profile()->GetPrefs()->SetInteger(
+      kIPFSResolveMethod,
+      static_cast<int>(ipfs::IPFSResolveMethodTypes::IPFS_ASK));
+
   ResetTestServer(
       base::BindRepeating(&IpfsServiceBrowserTest::HandleEmbeddedSrvrRequest,
                           base::Unretained(this)));
   SetIPFSDefaultGatewayForTest(GetURL("b.com", "/"));
-  ASSERT_TRUE(ui_test_utils::NavigateToURL(
-      browser(),
-      GURL("ipfs://Qmc2JTQo4iXf24g98otZmGFQq176eQ2Cdbb88qA5ToMEvC")));
+  ASSERT_TRUE(
+      ui_test_utils::NavigateToURL(browser(), GetURL("b.com", "/iframe.html")));
   content::WebContents* contents =
       browser()->tab_strip_model()->GetActiveWebContents();
-  auto loaded = EvalJs(
-      contents,
-      "let img = document.createElement('img');"
-      "img.src ="
-      "  'ipfs://dbafybeiemxf5abjwjbikoz4mc3a3dla6ual3jsgpdr4cjr3oz3evfyavhwq';"
-      "img.onload = function () {"
-      "  window.domAutomationController.send(true);"
-      "};"
-      "img.onerror = function() {"
-      "  window.domAutomationController.send(true);"
-      "};",
-      content::EXECUTE_SCRIPT_USE_MANUAL_REPLY);
-  ASSERT_TRUE(loaded.error.empty());
-  EXPECT_EQ(base::Value(true), loaded.value);
+
+  int child_index = 0;
+  while (auto* child_frame =
+             ChildFrameAt(contents->GetMainFrame(), child_index++)) {
+    auto location =
+        EvalJs(child_frame,
+               "const timer = setInterval(function () {"
+               "  if (document.readyState == 'complete') {"
+               "    clearInterval(timer);"
+               "    window.domAutomationController.send(window.location.href);"
+               "  }"
+               "}, 100);",
+               content::EXECUTE_SCRIPT_USE_MANUAL_REPLY);
+
+    ASSERT_TRUE(location.error.empty());
+    EXPECT_EQ(base::Value("chrome-error://chromewebdata/"), location.value);
+  }
 }
