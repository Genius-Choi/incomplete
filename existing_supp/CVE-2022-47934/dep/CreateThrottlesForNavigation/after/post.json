[
    {
        "line": 3,
        "fullcodeline": "std::vector<std::unique_ptr<content::NavigationThrottle>> throttles ="
    },
    {
        "line": 7,
        "fullcodeline": "std::unique_ptr<content::NavigationThrottle> ntp_shows_navigation_throttle ="
    },
    {
        "line": 18,
        "fullcodeline": "content::BrowserContext* context ="
    },
    {
        "line": 53,
        "fullcodeline": "std::unique_ptr<content::NavigationThrottle>"
    },
    {
        "line": 4,
        "fullcodeline": "ChromeContentBrowserClient::CreateThrottlesForNavigation(handle);"
    },
    {
        "line": 8,
        "fullcodeline": "NewTabShowsNavigationThrottle::MaybeCreateThrottleFor(handle);"
    },
    {
        "line": 19,
        "fullcodeline": "handle->GetWebContents()->GetBrowserContext();"
    },
    {
        "line": 55,
        "fullcodeline": "decentralized_dns::DecentralizedDnsNavigationThrottle::"
    },
    {
        "line": 61,
        "fullcodeline": "if (std::unique_ptr<"
    },
    {
        "line": 73,
        "fullcodeline": "if (std::unique_ptr<content::NavigationThrottle>"
    },
    {
        "line": 10,
        "fullcodeline": "throttles.push_back(std::move(ntp_shows_navigation_throttle));"
    },
    {
        "line": 56,
        "fullcodeline": "MaybeCreateThrottleFor(handle, g_browser_process->local_state(),"
    },
    {
        "line": 57,
        "fullcodeline": "g_browser_process->GetApplicationLocale());"
    },
    {
        "line": 59,
        "fullcodeline": "throttles.push_back(std::move(decentralized_dns_navigation_throttle));"
    },
    {
        "line": 63,
        "fullcodeline": "brave_shields::DomainBlockNavigationThrottle::MaybeCreateThrottleFor("
    },
    {
        "line": 71,
        "fullcodeline": "throttles.push_back(std::move(domain_block_navigation_throttle));"
    },
    {
        "line": 74,
        "fullcodeline": "reduce_language_navigation_throttle = brave_shields::"
    },
    {
        "line": 78,
        "fullcodeline": "throttles.push_back(std::move(reduce_language_navigation_throttle));"
    },
    {
        "line": 81,
        "fullcodeline": "if (auto debounce_throttle ="
    },
    {
        "line": 85,
        "fullcodeline": "throttles.push_back(std::move(debounce_throttle));"
    },
    {
        "line": 64,
        "fullcodeline": "handle, g_brave_browser_process->ad_block_service(),"
    },
    {
        "line": 65,
        "fullcodeline": "g_brave_browser_process->ad_block_service()"
    },
    {
        "line": 67,
        "fullcodeline": "EphemeralStorageServiceFactory::GetForContext(context),"
    },
    {
        "line": 68,
        "fullcodeline": "HostContentSettingsMapFactory::GetForProfile("
    },
    {
        "line": 70,
        "fullcodeline": "g_browser_process->GetApplicationLocale()))"
    },
    {
        "line": 76,
        "fullcodeline": "handle, HostContentSettingsMapFactory::GetForProfile("
    },
    {
        "line": 82,
        "fullcodeline": "debounce::DebounceNavigationThrottle::MaybeCreateThrottleFor("
    },
    {
        "line": 69,
        "fullcodeline": "Profile::FromBrowserContext(context)),"
    },
    {
        "line": 77,
        "fullcodeline": "Profile::FromBrowserContext(context))))"
    },
    {
        "line": 84,
        "fullcodeline": "debounce::DebounceServiceFactory::GetForBrowserContext(context)))"
    }
]