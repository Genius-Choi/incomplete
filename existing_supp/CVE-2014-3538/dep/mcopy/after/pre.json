[
    {
        "line": 8,
        "fullcodeline": "if (indir == 0) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (offset >= nbytes) {"
    },
    {
        "line": 109,
        "fullcodeline": "(void)memcpy(p, s + offset, nbytes);"
    },
    {
        "line": 115,
        "fullcodeline": "if (nbytes < sizeof(*p))"
    },
    {
        "line": 104,
        "fullcodeline": "if (nbytes - offset < sizeof(*p))"
    },
    {
        "line": 105,
        "fullcodeline": "nbytes = nbytes - offset;"
    },
    {
        "line": 101,
        "fullcodeline": "(void)memset(p, '\\0', sizeof(*p));"
    },
    {
        "line": 107,
        "fullcodeline": "nbytes = sizeof(*p);"
    },
    {
        "line": 116,
        "fullcodeline": "(void)memset(((char *)(void *)p) + nbytes, '\\0',"
    },
    {
        "line": 12,
        "fullcodeline": "ms->search.s_len = nbytes - offset;"
    },
    {
        "line": 13,
        "fullcodeline": "ms->search.offset = offset;"
    },
    {
        "line": 117,
        "fullcodeline": "sizeof(*p) - nbytes);"
    },
    {
        "line": 67,
        "fullcodeline": "const unsigned char *src = s + offset;"
    },
    {
        "line": 68,
        "fullcodeline": "const unsigned char *esrc = s + nbytes;"
    },
    {
        "line": 69,
        "fullcodeline": "char *dst = p->s;"
    },
    {
        "line": 70,
        "fullcodeline": "char *edst = &p->s[sizeof(p->s) - 1];"
    },
    {
        "line": 24,
        "fullcodeline": "if (s == NULL) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (m->str_flags & REGEX_LINE_COUNT) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (bytecnt == 0)"
    },
    {
        "line": 40,
        "fullcodeline": "if (bytecnt > nbytes)"
    },
    {
        "line": 51,
        "fullcodeline": "lines--, b++) {"
    },
    {
        "line": 60,
        "fullcodeline": "ms->search.s_len = last - buf;"
    },
    {
        "line": 72,
        "fullcodeline": "if (type == FILE_BESTRING16)"
    },
    {
        "line": 76,
        "fullcodeline": "if (offset >= nbytes)"
    },
    {
        "line": 78,
        "fullcodeline": "for (/*EMPTY*/; src < esrc; src += 2, dst++) {"
    },
    {
        "line": 31,
        "fullcodeline": "linecnt = m->str_range;"
    },
    {
        "line": 32,
        "fullcodeline": "bytecnt = linecnt * 80;"
    },
    {
        "line": 39,
        "fullcodeline": "bytecnt = 8192;"
    },
    {
        "line": 73,
        "fullcodeline": "src++;"
    },
    {
        "line": 35,
        "fullcodeline": "bytecnt = m->str_range;"
    },
    {
        "line": 79,
        "fullcodeline": "if (dst < edst)"
    },
    {
        "line": 83,
        "fullcodeline": "if (*dst == '\\0') {"
    },
    {
        "line": 80,
        "fullcodeline": "*dst = *src;"
    },
    {
        "line": 85,
        "fullcodeline": "*(src - 1) != '\\0' :"
    },
    {
        "line": 86,
        "fullcodeline": "*(src + 1) != '\\0')"
    },
    {
        "line": 87,
        "fullcodeline": "*dst = ' ';"
    }
]