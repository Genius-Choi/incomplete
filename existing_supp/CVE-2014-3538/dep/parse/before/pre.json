[
    {
        "line": 9,
        "fullcodeline": "const char *l = line;"
    },
    {
        "line": 15,
        "fullcodeline": "cont_level = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "m->lineno = CAST(uint32_t, lineno);"
    },
    {
        "line": 97,
        "fullcodeline": "m->offset = (uint32_t)strtoul(l, &t, 0);"
    },
    {
        "line": 101,
        "fullcodeline": "l = t;"
    },
    {
        "line": 255,
        "fullcodeline": "m->mask_op = 0;"
    },
    {
        "line": 263,
        "fullcodeline": "m->str_range = 0;"
    },
    {
        "line": 264,
        "fullcodeline": "m->str_flags = m->type == FILE_PSTRING ? PSTRING_1_LE : 0;"
    },
    {
        "line": 20,
        "fullcodeline": "while (*l == '>') {"
    },
    {
        "line": 30,
        "fullcodeline": "if (cont_level != 0) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (*l == '&') {  /* m->cont_level == 0 checked below. */"
    },
    {
        "line": 80,
        "fullcodeline": "if (*l == '(') {"
    },
    {
        "line": 98,
        "fullcodeline": "if (l == t)"
    },
    {
        "line": 103,
        "fullcodeline": "if (m->flag & INDIR) {"
    },
    {
        "line": 201,
        "fullcodeline": "if (*l == 'u') {"
    },
    {
        "line": 241,
        "fullcodeline": "if (m->type == FILE_INVALID) {"
    },
    {
        "line": 246,
        "fullcodeline": "if (m->type == FILE_INVALID) {"
    },
    {
        "line": 256,
        "fullcodeline": "if (*l == '~') {"
    },
    {
        "line": 433,
        "fullcodeline": "if (l[0] == '\\b') {"
    },
    {
        "line": 453,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK) {"
    },
    {
        "line": 458,
        "fullcodeline": "if (action == FILE_CHECK) {"
    },
    {
        "line": 21,
        "fullcodeline": "++l;\t\t/* step over */"
    },
    {
        "line": 22,
        "fullcodeline": "cont_level++;"
    },
    {
        "line": 39,
        "fullcodeline": "m = &me->mp[me->cont_count - 1];"
    },
    {
        "line": 40,
        "fullcodeline": "diff = (int32_t)cont_level - (int32_t)m->cont_level;"
    },
    {
        "line": 56,
        "fullcodeline": "m = &me->mp[me->cont_count++];"
    },
    {
        "line": 58,
        "fullcodeline": "m->cont_level = cont_level;"
    },
    {
        "line": 77,
        "fullcodeline": "++l;            /* step over */"
    },
    {
        "line": 78,
        "fullcodeline": "m->flag |= OFFADD;"
    },
    {
        "line": 81,
        "fullcodeline": "++l;\t\t/* step over */"
    },
    {
        "line": 82,
        "fullcodeline": "m->flag |= INDIR;"
    },
    {
        "line": 92,
        "fullcodeline": "if (m->cont_level == 0 && (m->flag & (OFFADD | INDIROFFADD)))"
    },
    {
        "line": 104,
        "fullcodeline": "m->in_type = FILE_LONG;"
    },
    {
        "line": 105,
        "fullcodeline": "m->in_offset = 0;"
    },
    {
        "line": 161,
        "fullcodeline": "m->in_op = 0;"
    },
    {
        "line": 207,
        "fullcodeline": "m->type = get_type(type_tbl, l + 1, &l);"
    },
    {
        "line": 243,
        "fullcodeline": "m->type = get_type(special_tbl, l, &l);"
    },
    {
        "line": 261,
        "fullcodeline": "++l;"
    },
    {
        "line": 265,
        "fullcodeline": "if ((op = get_op(*l)) != -1) {"
    },
    {
        "line": 382,
        "fullcodeline": "m->reln = *l;"
    },
    {
        "line": 383,
        "fullcodeline": "++l;"
    },
    {
        "line": 397,
        "fullcodeline": "m->reln = *l;"
    },
    {
        "line": 398,
        "fullcodeline": "++l;"
    },
    {
        "line": 405,
        "fullcodeline": "m->reln = *l;"
    },
    {
        "line": 406,
        "fullcodeline": "++l;"
    },
    {
        "line": 409,
        "fullcodeline": "m->reln = '=';\t/* the default relation */"
    },
    {
        "line": 420,
        "fullcodeline": "if (m->reln != 'x' && getvalue(ms, m, &l, action))"
    },
    {
        "line": 434,
        "fullcodeline": "++l;"
    },
    {
        "line": 435,
        "fullcodeline": "m->flag |= NOSPACE;"
    },
    {
        "line": 441,
        "fullcodeline": "for (i = 0; (m->desc[i++] = *l++) != '\\0' && i < sizeof(m->desc); )"
    },
    {
        "line": 444,
        "fullcodeline": "m->desc[sizeof(m->desc) - 1] = '\\0';"
    },
    {
        "line": 31,
        "fullcodeline": "if (me->mp == NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (me->cont_count == 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (me->cont_count == me->max_count) {"
    },
    {
        "line": 57,
        "fullcodeline": "(void)memset(m, 0, sizeof(*m));"
    },
    {
        "line": 60,
        "fullcodeline": "static const size_t len = sizeof(*m) * ALLOC_CHUNK;"
    },
    {
        "line": 70,
        "fullcodeline": "m->factor_op = FILE_FACTOR_OP_NONE;"
    },
    {
        "line": 71,
        "fullcodeline": "m->cont_level = 0;"
    },
    {
        "line": 83,
        "fullcodeline": "if (m->flag & OFFADD)"
    },
    {
        "line": 86,
        "fullcodeline": "if (*l == '&') {  /* m->cont_level == 0 checked below */"
    },
    {
        "line": 93,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 99,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 109,
        "fullcodeline": "if (*l == '.') {"
    },
    {
        "line": 162,
        "fullcodeline": "if (*l == '~') {"
    },
    {
        "line": 170,
        "fullcodeline": "if (*l == '(') {"
    },
    {
        "line": 182,
        "fullcodeline": "if (*l++ != ')' ||"
    },
    {
        "line": 208,
        "fullcodeline": "if (m->type == FILE_INVALID) {"
    },
    {
        "line": 216,
        "fullcodeline": "if (m->type != FILE_INVALID)"
    },
    {
        "line": 225,
        "fullcodeline": "m->type = get_type(type_tbl, l, &l);"
    },
    {
        "line": 247,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 249,
        "fullcodeline": "return -1;"
    },
    {
        "line": 384,
        "fullcodeline": "if (*l == '=') {"
    },
    {
        "line": 399,
        "fullcodeline": "if (*l == '=') {"
    },
    {
        "line": 421,
        "fullcodeline": "return -1;"
    },
    {
        "line": 445,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 32,
        "fullcodeline": "file_magerror(ms, \"No current entry for continuation\");"
    },
    {
        "line": 42,
        "fullcodeline": "file_magwarn(ms, \"New continuation level %u is more \""
    },
    {
        "line": 47,
        "fullcodeline": "size_t cnt = me->max_count + ALLOC_CHUNK;"
    },
    {
        "line": 53,
        "fullcodeline": "me->mp = m = nm;"
    },
    {
        "line": 69,
        "fullcodeline": "(void)memset(m, 0, sizeof(*m));"
    },
    {
        "line": 84,
        "fullcodeline": "m->flag = (m->flag & ~OFFADD) | INDIROFFADD;"
    },
    {
        "line": 87,
        "fullcodeline": "++l;            /* step over */"
    },
    {
        "line": 88,
        "fullcodeline": "m->flag |= OFFADD;"
    },
    {
        "line": 94,
        "fullcodeline": "file_magwarn(ms, \"relative offset at level 0\");"
    },
    {
        "line": 100,
        "fullcodeline": "file_magwarn(ms, \"offset `%s' invalid\", l);"
    },
    {
        "line": 110,
        "fullcodeline": "l++;"
    },
    {
        "line": 158,
        "fullcodeline": "l++;"
    },
    {
        "line": 163,
        "fullcodeline": "m->in_op |= FILE_OPINVERSE;"
    },
    {
        "line": 164,
        "fullcodeline": "l++;"
    },
    {
        "line": 166,
        "fullcodeline": "if ((op = get_op(*l)) != -1) {"
    },
    {
        "line": 167,
        "fullcodeline": "m->in_op |= op;"
    },
    {
        "line": 168,
        "fullcodeline": "l++;"
    },
    {
        "line": 171,
        "fullcodeline": "m->in_op |= FILE_OPINDIRECT;"
    },
    {
        "line": 172,
        "fullcodeline": "l++;"
    },
    {
        "line": 174,
        "fullcodeline": "if (isdigit((unsigned char)*l) || *l == '-') {"
    },
    {
        "line": 175,
        "fullcodeline": "m->in_offset = (int32_t)strtol(l, &t, 0);"
    },
    {
        "line": 180,
        "fullcodeline": "l = t;"
    },
    {
        "line": 183,
        "fullcodeline": "((m->in_op & FILE_OPINDIRECT) && *l++ != ')'))"
    },
    {
        "line": 213,
        "fullcodeline": "m->type = get_standard_integer_type(l, &l);"
    },
    {
        "line": 217,
        "fullcodeline": "m->flag |= UNSIGNED;"
    },
    {
        "line": 226,
        "fullcodeline": "if (m->type == FILE_INVALID) {"
    },
    {
        "line": 257,
        "fullcodeline": "if (!IS_STRING(m->type))"
    },
    {
        "line": 258,
        "fullcodeline": "m->mask_op |= FILE_OPINVERSE;"
    },
    {
        "line": 266,
        "fullcodeline": "if (!IS_STRING(m->type)) {"
    },
    {
        "line": 268,
        "fullcodeline": "++l;"
    },
    {
        "line": 269,
        "fullcodeline": "m->mask_op |= op;"
    },
    {
        "line": 270,
        "fullcodeline": "val = (uint64_t)strtoull(l, &t, 0);"
    },
    {
        "line": 271,
        "fullcodeline": "l = t;"
    },
    {
        "line": 272,
        "fullcodeline": "m->num_mask = file_signextend(ms, m, val);"
    },
    {
        "line": 273,
        "fullcodeline": "eatsize(&l);"
    },
    {
        "line": 390,
        "fullcodeline": "++l;"
    },
    {
        "line": 401,
        "fullcodeline": "++l;"
    },
    {
        "line": 410,
        "fullcodeline": "if (*l == 'x' && ((isascii((unsigned char)l[1]) &&"
    },
    {
        "line": 412,
        "fullcodeline": "m->reln = *l;"
    },
    {
        "line": 413,
        "fullcodeline": "++l;"
    },
    {
        "line": 446,
        "fullcodeline": "file_magwarn(ms, \"description `%s' truncated\", m->desc);"
    },
    {
        "line": 454,
        "fullcodeline": "if (check_format(ms, m) == -1)"
    },
    {
        "line": 33,
        "fullcodeline": "return -1;"
    },
    {
        "line": 37,
        "fullcodeline": "return -1;"
    },
    {
        "line": 54,
        "fullcodeline": "me->max_count = CAST(uint32_t, cnt);"
    },
    {
        "line": 176,
        "fullcodeline": "if (l == t)"
    },
    {
        "line": 184,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 385,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK) {"
    },
    {
        "line": 411,
        "fullcodeline": "isspace((unsigned char)l[1])) || !l[1])) {"
    },
    {
        "line": 436,
        "fullcodeline": "} else if ((l[0] == '\\\\') && (l[1] == 'b')) {"
    },
    {
        "line": 437,
        "fullcodeline": "++l;"
    },
    {
        "line": 438,
        "fullcodeline": "++l;"
    },
    {
        "line": 439,
        "fullcodeline": "m->flag |= NOSPACE;"
    },
    {
        "line": 455,
        "fullcodeline": "return -1;"
    },
    {
        "line": 65,
        "fullcodeline": "return -1;"
    },
    {
        "line": 113,
        "fullcodeline": "m->in_type = FILE_LELONG;"
    },
    {
        "line": 116,
        "fullcodeline": "m->in_type = FILE_BELONG;"
    },
    {
        "line": 119,
        "fullcodeline": "m->in_type = FILE_MELONG;"
    },
    {
        "line": 123,
        "fullcodeline": "m->in_type = FILE_LESHORT;"
    },
    {
        "line": 127,
        "fullcodeline": "m->in_type = FILE_BESHORT;"
    },
    {
        "line": 133,
        "fullcodeline": "m->in_type = FILE_BYTE;"
    },
    {
        "line": 138,
        "fullcodeline": "m->in_type = FILE_LEDOUBLE;"
    },
    {
        "line": 143,
        "fullcodeline": "m->in_type = FILE_BEDOUBLE;"
    },
    {
        "line": 146,
        "fullcodeline": "m->in_type = FILE_LEID3;"
    },
    {
        "line": 149,
        "fullcodeline": "m->in_type = FILE_BEID3;"
    },
    {
        "line": 185,
        "fullcodeline": "file_magwarn(ms,"
    },
    {
        "line": 232,
        "fullcodeline": "if (*l == 'd')"
    },
    {
        "line": 259,
        "fullcodeline": "else if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 275,
        "fullcodeline": "else if (op == FILE_OPDIVIDE) {"
    },
    {
        "line": 50,
        "fullcodeline": "file_oomem(ms, sizeof(*nm) * cnt);"
    },
    {
        "line": 51,
        "fullcodeline": "return -1;"
    },
    {
        "line": 152,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 177,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 233,
        "fullcodeline": "m->type = get_standard_integer_type(l, &l);"
    },
    {
        "line": 260,
        "fullcodeline": "file_magwarn(ms, \"'~' invalid for string types\");"
    },
    {
        "line": 276,
        "fullcodeline": "int have_range = 0;"
    },
    {
        "line": 388,
        "fullcodeline": "return -1;"
    },
    {
        "line": 153,
        "fullcodeline": "file_magwarn(ms,"
    },
    {
        "line": 178,
        "fullcodeline": "file_magwarn(ms,"
    },
    {
        "line": 277,
        "fullcodeline": "while (!isspace((unsigned char)*++l)) {"
    },
    {
        "line": 364,
        "fullcodeline": "if (string_modifier_check(ms, m) == -1)"
    },
    {
        "line": 368,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 370,
        "fullcodeline": "return -1;"
    },
    {
        "line": 234,
        "fullcodeline": "else if (*l == 's' && !isalpha((unsigned char)l[1])) {"
    },
    {
        "line": 235,
        "fullcodeline": "m->type = FILE_STRING;"
    },
    {
        "line": 236,
        "fullcodeline": "++l;"
    },
    {
        "line": 365,
        "fullcodeline": "return -1;"
    },
    {
        "line": 287,
        "fullcodeline": "have_range = 1;"
    },
    {
        "line": 288,
        "fullcodeline": "m->str_range = CAST(uint32_t,"
    },
    {
        "line": 293,
        "fullcodeline": "l = t - 1;"
    },
    {
        "line": 296,
        "fullcodeline": "m->str_flags |="
    },
    {
        "line": 300,
        "fullcodeline": "m->str_flags |="
    },
    {
        "line": 304,
        "fullcodeline": "m->str_flags |= STRING_IGNORE_LOWERCASE;"
    },
    {
        "line": 307,
        "fullcodeline": "m->str_flags |= STRING_IGNORE_UPPERCASE;"
    },
    {
        "line": 310,
        "fullcodeline": "m->str_flags |= REGEX_OFFSET_START;"
    },
    {
        "line": 313,
        "fullcodeline": "m->str_flags |= STRING_BINTEST;"
    },
    {
        "line": 316,
        "fullcodeline": "m->str_flags |= STRING_TEXTTEST;"
    },
    {
        "line": 319,
        "fullcodeline": "m->str_flags |= STRING_TRIM;"
    },
    {
        "line": 324,
        "fullcodeline": "m->str_flags = (m->str_flags & ~PSTRING_LEN) | PSTRING_1_LE;"
    },
    {
        "line": 329,
        "fullcodeline": "m->str_flags = (m->str_flags & ~PSTRING_LEN) | PSTRING_2_BE;"
    },
    {
        "line": 334,
        "fullcodeline": "m->str_flags = (m->str_flags & ~PSTRING_LEN) | PSTRING_2_LE;"
    },
    {
        "line": 339,
        "fullcodeline": "m->str_flags = (m->str_flags & ~PSTRING_LEN) | PSTRING_4_BE;"
    },
    {
        "line": 344,
        "fullcodeline": "m->str_flags = (m->str_flags & ~PSTRING_LEN) | PSTRING_4_LE;"
    },
    {
        "line": 349,
        "fullcodeline": "m->str_flags |= PSTRING_LENGTH_INCLUDES_ITSELF;"
    },
    {
        "line": 360,
        "fullcodeline": "if (l[1] == '/' &&"
    },
    {
        "line": 361,
        "fullcodeline": "!isspace((unsigned char)l[2]))"
    },
    {
        "line": 362,
        "fullcodeline": "l++;"
    },
    {
        "line": 290,
        "fullcodeline": "if (m->str_range == 0)"
    },
    {
        "line": 322,
        "fullcodeline": "if (m->type != FILE_PSTRING)"
    },
    {
        "line": 327,
        "fullcodeline": "if (m->type != FILE_PSTRING)"
    },
    {
        "line": 332,
        "fullcodeline": "if (m->type != FILE_PSTRING)"
    },
    {
        "line": 337,
        "fullcodeline": "if (m->type != FILE_PSTRING)"
    },
    {
        "line": 342,
        "fullcodeline": "if (m->type != FILE_PSTRING)"
    },
    {
        "line": 347,
        "fullcodeline": "if (m->type != FILE_PSTRING)"
    },
    {
        "line": 353,
        "fullcodeline": "if (ms->flags & MAGIC_CHECK)"
    },
    {
        "line": 357,
        "fullcodeline": "return -1;"
    },
    {
        "line": 284,
        "fullcodeline": "(ms->flags & MAGIC_CHECK))"
    },
    {
        "line": 285,
        "fullcodeline": "file_magwarn(ms,"
    },
    {
        "line": 289,
        "fullcodeline": "strtoul(l, &t, 0));"
    },
    {
        "line": 291,
        "fullcodeline": "file_magwarn(ms,"
    }
]