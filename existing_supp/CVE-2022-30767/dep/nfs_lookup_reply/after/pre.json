[
    {
        "line": 5,
        "fullcodeline": "debug(\"%s\\n\", __func__);"
    },
    {
        "line": 7,
        "fullcodeline": "memcpy(&rpc_pkt.u.data[0], pkt, len);"
    },
    {
        "line": 9,
        "fullcodeline": "if (ntohl(rpc_pkt.u.reply.id) > rpc_id)"
    },
    {
        "line": 14,
        "fullcodeline": "if (rpc_pkt.u.reply.rstatus  ||"
    },
    {
        "line": 10,
        "fullcodeline": "return -NFS_RPC_ERR;"
    },
    {
        "line": 18,
        "fullcodeline": "switch (ntohl(rpc_pkt.u.reply.astatus)) {"
    },
    {
        "line": 55,
        "fullcodeline": "return -1;"
    },
    {
        "line": 63,
        "fullcodeline": "filefh3_length = ntohl(rpc_pkt.u.reply.data[1]);"
    },
    {
        "line": 64,
        "fullcodeline": "if (filefh3_length > NFS3_FHSIZE)"
    },
    {
        "line": 11,
        "fullcodeline": "else if (ntohl(rpc_pkt.u.reply.id) < rpc_id)"
    },
    {
        "line": 23,
        "fullcodeline": "switch (ntohl(rpc_pkt.u.reply.data[0])) {"
    },
    {
        "line": 52,
        "fullcodeline": "ntohl(rpc_pkt.u.reply.astatus));"
    },
    {
        "line": 59,
        "fullcodeline": "if (((uchar *)&(rpc_pkt.u.reply.data[0]) - (uchar *)(&rpc_pkt) + NFS_FHSIZE) > len)"
    },
    {
        "line": 60,
        "fullcodeline": "return -NFS_RPC_DROP;"
    },
    {
        "line": 65,
        "fullcodeline": "filefh3_length  = NFS3_FHSIZE;"
    },
    {
        "line": 12,
        "fullcodeline": "return -NFS_RPC_DROP;"
    },
    {
        "line": 66,
        "fullcodeline": "if (((uchar *)&(rpc_pkt.u.reply.data[0]) - (uchar *)(&rpc_pkt) + filefh3_length) > len)"
    },
    {
        "line": 67,
        "fullcodeline": "return -NFS_RPC_DROP;"
    },
    {
        "line": 29,
        "fullcodeline": "ntohl(rpc_pkt.u.reply.data[0]),"
    },
    {
        "line": 30,
        "fullcodeline": "ntohl(rpc_pkt.u.reply.data[1]));"
    },
    {
        "line": 33,
        "fullcodeline": "supported_nfs_versions &= ~NFSV2_FLAG;"
    },
    {
        "line": 34,
        "fullcodeline": "return -NFS_RPC_PROG_MISMATCH;"
    },
    {
        "line": 41,
        "fullcodeline": "ntohl(rpc_pkt.u.reply.data[0]),"
    },
    {
        "line": 42,
        "fullcodeline": "ntohl(rpc_pkt.u.reply.data[1]));"
    },
    {
        "line": 27,
        "fullcodeline": "(supported_nfs_versions & NFSV2_FLAG) ?"
    }
]