[
    {
        "line": 27,
        "fullcodeline": "rb_secure(2);"
    },
    {
        "line": 48,
        "fullcodeline": "ptr = dlopen(clib, cflag);"
    },
    {
        "line": 63,
        "fullcodeline": "fiddle_handle->ptr = ptr;"
    },
    {
        "line": 64,
        "fullcodeline": "fiddle_handle->open = 1;"
    },
    {
        "line": 65,
        "fullcodeline": "fiddle_handle->enable_close = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "switch( rb_scan_args(argc, argv, \"02\", &lib, &flag) ){"
    },
    {
        "line": 54,
        "fullcodeline": "if( !ptr ){"
    },
    {
        "line": 60,
        "fullcodeline": "if( fiddle_handle->ptr && fiddle_handle->open && fiddle_handle->enable_close ){"
    },
    {
        "line": 67,
        "fullcodeline": "if( rb_block_given_p() ){"
    },
    {
        "line": 12,
        "fullcodeline": "clib = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "cflag = RTLD_LAZY | RTLD_GLOBAL;"
    },
    {
        "line": 16,
        "fullcodeline": "clib = NIL_P(lib) ? NULL : StringValuePtr(lib);"
    },
    {
        "line": 17,
        "fullcodeline": "cflag = RTLD_LAZY | RTLD_GLOBAL;"
    },
    {
        "line": 20,
        "fullcodeline": "clib = NIL_P(lib) ? NULL : StringValuePtr(lib);"
    },
    {
        "line": 21,
        "fullcodeline": "cflag = NUM2INT(flag);"
    },
    {
        "line": 24,
        "fullcodeline": "rb_bug(\"rb_fiddle_handle_new\");"
    },
    {
        "line": 55,
        "fullcodeline": "err = dlerror();"
    },
    {
        "line": 56,
        "fullcodeline": "rb_raise(rb_eFiddleError, \"%s\", err);"
    },
    {
        "line": 61,
        "fullcodeline": "dlclose(fiddle_handle->ptr);"
    },
    {
        "line": 68,
        "fullcodeline": "rb_ensure(rb_yield, self, rb_fiddle_handle_close, self);"
    }
]