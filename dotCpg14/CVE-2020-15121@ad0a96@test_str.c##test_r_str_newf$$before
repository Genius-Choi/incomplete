[33mval[0m [36mres452[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_r_str_newf" {  
"111669149697" [label = <(METHOD,test_r_str_newf)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,void)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	char *a = r_str_newf (&quot;hello&quot;);
	mu_assert_s...,{
	char *a = r_str_newf (&quot;hello&quot;);
	mu_assert_s...)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,char* a: char*)<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,*a = r_str_newf (&quot;hello&quot;))<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,a,*a = r_str_newf (&quot;hello&quot;))<SUB>2</SUB>> ]
"30064771073" [label = <(r_str_newf,r_str_newf (&quot;hello&quot;))<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;hello&quot;,r_str_newf (&quot;hello&quot;))<SUB>2</SUB>> ]
"30064771074" [label = <(mu_assert_streq,mu_assert_streq (a, &quot;hello&quot;, &quot;oops&quot;))<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,a,mu_assert_streq (a, &quot;hello&quot;, &quot;oops&quot;))<SUB>3</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;hello&quot;,mu_assert_streq (a, &quot;hello&quot;, &quot;oops&quot;))<SUB>3</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;oops&quot;,mu_assert_streq (a, &quot;hello&quot;, &quot;oops&quot;))<SUB>3</SUB>> ]
"30064771075" [label = <(free,free (a))<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,a,free (a))<SUB>4</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,a = r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,a,a = r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>6</SUB>> ]
"30064771077" [label = <(r_str_newf,r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>6</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;%s/%s&quot;,r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>6</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;hello&quot;,r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>6</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;world&quot;,r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>6</SUB>> ]
"30064771078" [label = <(mu_assert_streq,mu_assert_streq (a, &quot;hello/world&quot;, &quot;oops&quot;))<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,a,mu_assert_streq (a, &quot;hello/world&quot;, &quot;oops&quot;))<SUB>7</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;hello/world&quot;,mu_assert_streq (a, &quot;hello/world&quot;, &quot;oops&quot;))<SUB>7</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;oops&quot;,mu_assert_streq (a, &quot;hello/world&quot;, &quot;oops&quot;))<SUB>7</SUB>> ]
"30064771079" [label = <(free,free (a))<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,a,free (a))<SUB>8</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,a = r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,a,a = r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>10</SUB>> ]
"30064771081" [label = <(r_str_newf,r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>10</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;%s/%s&quot;,r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>10</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;hello&quot;,r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>10</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;world&quot;,r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;))<SUB>10</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,a = r_str_appendf (a, &quot;..%s/%s&quot;, &quot;cow&quot;, &quot;low&quot;))<SUB>11</SUB>> ]
"68719476743" [label = <(IDENTIFIER,a,a = r_str_appendf (a, &quot;..%s/%s&quot;, &quot;cow&quot;, &quot;low&quot;))<SUB>11</SUB>> ]
"30064771083" [label = <(r_str_appendf,r_str_appendf (a, &quot;..%s/%s&quot;, &quot;cow&quot;, &quot;low&quot;))<SUB>11</SUB>> ]
"68719476744" [label = <(IDENTIFIER,a,r_str_appendf (a, &quot;..%s/%s&quot;, &quot;cow&quot;, &quot;low&quot;))<SUB>11</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;..%s/%s&quot;,r_str_appendf (a, &quot;..%s/%s&quot;, &quot;cow&quot;, &quot;low&quot;))<SUB>11</SUB>> ]
"90194313228" [label = <(LITERAL,&quot;cow&quot;,r_str_appendf (a, &quot;..%s/%s&quot;, &quot;cow&quot;, &quot;low&quot;))<SUB>11</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;low&quot;,r_str_appendf (a, &quot;..%s/%s&quot;, &quot;cow&quot;, &quot;low&quot;))<SUB>11</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,a = r_str_appendf (a, &quot;PWN&quot;))<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,a,a = r_str_appendf (a, &quot;PWN&quot;))<SUB>12</SUB>> ]
"30064771085" [label = <(r_str_appendf,r_str_appendf (a, &quot;PWN&quot;))<SUB>12</SUB>> ]
"68719476746" [label = <(IDENTIFIER,a,r_str_appendf (a, &quot;PWN&quot;))<SUB>12</SUB>> ]
"90194313230" [label = <(LITERAL,&quot;PWN&quot;,r_str_appendf (a, &quot;PWN&quot;))<SUB>12</SUB>> ]
"30064771086" [label = <(mu_assert_streq,mu_assert_streq (a, &quot;hello/world..cow/lowPWN&quot;, ...)<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,a,mu_assert_streq (a, &quot;hello/world..cow/lowPWN&quot;, ...)<SUB>13</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;hello/world..cow/lowPWN&quot;,mu_assert_streq (a, &quot;hello/world..cow/lowPWN&quot;, ...)<SUB>13</SUB>> ]
"90194313232" [label = <(LITERAL,&quot;oops&quot;,mu_assert_streq (a, &quot;hello/world..cow/lowPWN&quot;, ...)<SUB>13</SUB>> ]
"30064771087" [label = <(free,free (a))<SUB>14</SUB>> ]
"68719476748" [label = <(IDENTIFIER,a,free (a))<SUB>14</SUB>> ]
"68719476749" [label = <(IDENTIFIER,mu_end,{
	char *a = r_str_newf (&quot;hello&quot;);
	mu_assert_s...)<SUB>15</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,bool)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "68719476749"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "90194313218"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "90194313219"  [ label = "AST: "] 
  "30064771077" -> "90194313220"  [ label = "AST: "] 
  "30064771077" -> "90194313221"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "90194313222"  [ label = "AST: "] 
  "30064771078" -> "90194313223"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "90194313224"  [ label = "AST: "] 
  "30064771081" -> "90194313225"  [ label = "AST: "] 
  "30064771081" -> "90194313226"  [ label = "AST: "] 
  "30064771082" -> "68719476743"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476744"  [ label = "AST: "] 
  "30064771083" -> "90194313227"  [ label = "AST: "] 
  "30064771083" -> "90194313228"  [ label = "AST: "] 
  "30064771083" -> "90194313229"  [ label = "AST: "] 
  "30064771084" -> "68719476745"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476746"  [ label = "AST: "] 
  "30064771085" -> "90194313230"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "30064771086" -> "90194313231"  [ label = "AST: "] 
  "30064771086" -> "90194313232"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771081"  [ label = "CFG: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771085"  [ label = "CFG: "] 
  "30064771084" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771087" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "115964116992" -> "128849018880"  [ label = "DDG: "] 
  "30064771072" -> "128849018880"  [ label = "DDG: r_str_newf (&quot;hello&quot;)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: *a = r_str_newf (&quot;hello&quot;)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: mu_assert_streq (a, &quot;hello&quot;, &quot;oops&quot;)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: mu_assert_streq (a, &quot;hello/world&quot;, &quot;oops&quot;)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: a = r_str_newf (&quot;%s/%s&quot;, &quot;hello&quot;, &quot;world&quot;)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: r_str_appendf (a, &quot;..%s/%s&quot;, &quot;cow&quot;, &quot;low&quot;)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: a = r_str_appendf (a, &quot;..%s/%s&quot;, &quot;cow&quot;, &quot;low&quot;)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: r_str_appendf (a, &quot;PWN&quot;)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: a = r_str_appendf (a, &quot;PWN&quot;)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: mu_assert_streq (a, &quot;hello/world..cow/lowPWN&quot;, &quot;oops&quot;)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: a"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: &quot;hello&quot;"] 
  "30064771077" -> "30064771076"  [ label = "DDG: &quot;%s/%s&quot;"] 
  "30064771077" -> "30064771076"  [ label = "DDG: &quot;hello&quot;"] 
  "30064771077" -> "30064771076"  [ label = "DDG: &quot;world&quot;"] 
  "30064771081" -> "30064771080"  [ label = "DDG: &quot;%s/%s&quot;"] 
  "30064771081" -> "30064771080"  [ label = "DDG: &quot;hello&quot;"] 
  "30064771081" -> "30064771080"  [ label = "DDG: &quot;world&quot;"] 
  "30064771083" -> "30064771082"  [ label = "DDG: a"] 
  "30064771083" -> "30064771082"  [ label = "DDG: &quot;..%s/%s&quot;"] 
  "30064771083" -> "30064771082"  [ label = "DDG: &quot;cow&quot;"] 
  "30064771083" -> "30064771082"  [ label = "DDG: &quot;low&quot;"] 
  "30064771085" -> "30064771084"  [ label = "DDG: a"] 
  "30064771085" -> "30064771084"  [ label = "DDG: &quot;PWN&quot;"] 
  "111669149697" -> "68719476749"  [ label = "DDG: "] 
  "30064771072" -> "30064771074"  [ label = "DDG: a"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: a"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771076" -> "30064771078"  [ label = "DDG: a"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771078" -> "30064771079"  [ label = "DDG: a"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771084" -> "30064771086"  [ label = "DDG: a"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771086" -> "30064771087"  [ label = "DDG: a"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771080" -> "30064771083"  [ label = "DDG: a"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771082" -> "30064771085"  [ label = "DDG: a"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
}
"""
)
