[33mval[0m [36mres160[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "SpatialMaxPoolWithArgMaxHelper" {  
"111669149698" [label = <(METHOD,SpatialMaxPoolWithArgMaxHelper)<SUB>1</SUB>> ]
"115964116999" [label = <(PARAM,OpKernelContext* context)<SUB>2</SUB>> ]
"115964117000" [label = <(PARAM,Tensor* output)<SUB>2</SUB>> ]
"115964116997" [label = <(PARAM,Tensor* output_arg_max)<SUB>2</SUB>> ]
"115964116996" [label = <(PARAM,Tensor* input_backprop)<SUB>3</SUB>> ]
"115964117001" [label = <(PARAM,const Tensor&amp; tensor_in)<SUB>3</SUB>> ]
"115964116998" [label = <(PARAM,const Tensor&amp; out_backprop)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,const PoolParameters&amp; params)<SUB>4</SUB>> ]
"115964116995" [label = <(PARAM,const bool include_batch_in_index)<SUB>4</SUB>> ]
"25769803798" [label = <(BLOCK,{
  if (input_backprop != nullptr) {
    OP_REQ...,{
  if (input_backprop != nullptr) {
    OP_REQ...)<SUB>4</SUB>> ]
"47244640268" [label = <(CONTROL_STRUCTURE,IF,if (input_backprop != nullptr))<SUB>5</SUB>> ]
"30064771226" [label = <(&lt;operator&gt;.notEquals,input_backprop != nullptr)<SUB>5</SUB>> ]
"68719476922" [label = <(IDENTIFIER,input_backprop,input_backprop != nullptr)<SUB>5</SUB>> ]
"90194313230" [label = <(LITERAL,nullptr,input_backprop != nullptr)<SUB>5</SUB>> ]
"25769803799" [label = <(BLOCK,{
    OP_REQUIRES(
        context, include_bat...,{
    OP_REQUIRES(
        context, include_bat...)<SUB>5</SUB>> ]
"30064771227" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, include_batch_in_...)<SUB>6</SUB>> ]
"68719476923" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, include_batch_in_...)<SUB>7</SUB>> ]
"68719476924" [label = <(IDENTIFIER,include_batch_in_index,OP_REQUIRES(
        context, include_batch_in_...)<SUB>7</SUB>> ]
"30064771228" [label = <(Internal,errors::Internal(
            &quot;SpatialMaxPoolWi...)<SUB>8</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;SpatialMaxPoolWithArgMaxHelper requires includ...,errors::Internal(
            &quot;SpatialMaxPoolWi...)<SUB>9</SUB>> ]
"30064771229" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, (std::is_same&lt;Tar...)<SUB>11</SUB>> ]
"68719476925" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, (std::is_same&lt;Tar...)<SUB>12</SUB>> ]
"30064771230" [label = <(&lt;operator&gt;.fieldAccess,std::is_same&lt;Targmax, int64&gt;::value)<SUB>12</SUB>> ]
"30064771231" [label = <(&lt;operator&gt;.fieldAccess,std::is_same&lt;Targmax, int64&gt;)<SUB>12</SUB>> ]
"68719476926" [label = <(IDENTIFIER,std,OP_REQUIRES(
        context, (std::is_same&lt;Tar...)<SUB>12</SUB>> ]
"68719476927" [label = <(IDENTIFIER,is_same&lt;Targmax, int64&gt;,OP_REQUIRES(
        context, (std::is_same&lt;Tar...)<SUB>12</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,value,value)<SUB>12</SUB>> ]
"30064771232" [label = <(Internal,errors::Internal(&quot;SpatialMaxPoolWithArgMaxHelpe...)<SUB>13</SUB>> ]
"90194313232" [label = <(LITERAL,&quot;SpatialMaxPoolWithArgMaxHelper requires Targma...,errors::Internal(&quot;SpatialMaxPoolWithArgMaxHelpe...)<SUB>13</SUB>> ]
"47244640269" [label = <(CONTROL_STRUCTURE,IF,if (tensor_in.NumElements() == 0 || output-&gt;NumElements() == 0))<SUB>16</SUB>> ]
"30064771233" [label = <(&lt;operator&gt;.logicalOr,tensor_in.NumElements() == 0 || output-&gt;NumElem...)<SUB>16</SUB>> ]
"30064771234" [label = <(&lt;operator&gt;.equals,tensor_in.NumElements() == 0)<SUB>16</SUB>> ]
"30064771235" [label = <(NumElements,tensor_in.NumElements())<SUB>16</SUB>> ]
"68719476928" [label = <(IDENTIFIER,tensor_in,tensor_in.NumElements())<SUB>16</SUB>> ]
"90194313233" [label = <(LITERAL,0,tensor_in.NumElements() == 0)<SUB>16</SUB>> ]
"30064771236" [label = <(&lt;operator&gt;.equals,output-&gt;NumElements() == 0)<SUB>16</SUB>> ]
"30064771237" [label = <(NumElements,output-&gt;NumElements())<SUB>16</SUB>> ]
"68719476929" [label = <(IDENTIFIER,output,output-&gt;NumElements())<SUB>16</SUB>> ]
"90194313234" [label = <(LITERAL,0,output-&gt;NumElements() == 0)<SUB>16</SUB>> ]
"25769803800" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>> ]
"146028888064" [label = <(RETURN,return;,return;)<SUB>16</SUB>> ]
"171798691841" [label = <(TYPE_DECL,ConstEigenMatrixMap)<SUB>19</SUB>> ]
"171798691842" [label = <(TYPE_DECL,EigenMatrixMap)<SUB>21</SUB>> ]
"171798691843" [label = <(TYPE_DECL,EigenIndexMatrixMap)<SUB>23</SUB>> ]
"94489280558" [label = <(LOCAL,ConstEigenMatrixMap in_mat: ConstEigenMatrixMap)<SUB>25</SUB>> ]
"30064771238" [label = <(in_mat,in_mat(
      tensor_in.flat&lt;T&gt;().data(), param...)<SUB>25</SUB>> ]
"30064771239" [label = <(data,tensor_in.flat&lt;T&gt;().data())<SUB>26</SUB>> ]
"30064771240" [label = <(flat&lt;T&gt;,tensor_in.flat&lt;T&gt;())<SUB>26</SUB>> ]
"68719476930" [label = <(IDENTIFIER,tensor_in,tensor_in.flat&lt;T&gt;())<SUB>26</SUB>> ]
"30064771241" [label = <(&lt;operator&gt;.fieldAccess,params.depth)<SUB>26</SUB>> ]
"68719476931" [label = <(IDENTIFIER,params,in_mat(
      tensor_in.flat&lt;T&gt;().data(), param...)<SUB>26</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,depth,depth)<SUB>26</SUB>> ]
"30064771242" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_cols * params.tensor_in_rows *...)<SUB>27</SUB>> ]
"30064771243" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_cols * params.tensor_in_rows)<SUB>27</SUB>> ]
"30064771244" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_cols)<SUB>27</SUB>> ]
"68719476932" [label = <(IDENTIFIER,params,params.tensor_in_cols * params.tensor_in_rows)<SUB>27</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,tensor_in_cols,tensor_in_cols)<SUB>27</SUB>> ]
"30064771245" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_rows)<SUB>27</SUB>> ]
"68719476933" [label = <(IDENTIFIER,params,params.tensor_in_cols * params.tensor_in_rows)<SUB>27</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,tensor_in_rows,tensor_in_rows)<SUB>27</SUB>> ]
"30064771246" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_batch)<SUB>27</SUB>> ]
"68719476934" [label = <(IDENTIFIER,params,params.tensor_in_cols * params.tensor_in_rows *...)<SUB>27</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,tensor_in_batch,tensor_in_batch)<SUB>27</SUB>> ]
"94489280556" [label = <(LOCAL,EigenMatrixMap out_mat: EigenMatrixMap)<SUB>28</SUB>> ]
"30064771247" [label = <(out_mat,out_mat(
      output-&gt;flat&lt;T&gt;().data(), params...)<SUB>28</SUB>> ]
"30064771248" [label = <(data,output-&gt;flat&lt;T&gt;().data())<SUB>29</SUB>> ]
"30064771249" [label = <(flat&lt;T&gt;,output-&gt;flat&lt;T&gt;())<SUB>29</SUB>> ]
"68719476935" [label = <(IDENTIFIER,output,output-&gt;flat&lt;T&gt;())<SUB>29</SUB>> ]
"30064771250" [label = <(&lt;operator&gt;.fieldAccess,params.depth)<SUB>29</SUB>> ]
"68719476936" [label = <(IDENTIFIER,params,out_mat(
      output-&gt;flat&lt;T&gt;().data(), params...)<SUB>29</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,depth,depth)<SUB>29</SUB>> ]
"30064771251" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height * params.t...)<SUB>30</SUB>> ]
"30064771252" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height)<SUB>30</SUB>> ]
"30064771253" [label = <(&lt;operator&gt;.fieldAccess,params.out_width)<SUB>30</SUB>> ]
"68719476937" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>30</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,out_width,out_width)<SUB>30</SUB>> ]
"30064771254" [label = <(&lt;operator&gt;.fieldAccess,params.out_height)<SUB>30</SUB>> ]
"68719476938" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>30</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,out_height,out_height)<SUB>30</SUB>> ]
"30064771255" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_batch)<SUB>30</SUB>> ]
"68719476939" [label = <(IDENTIFIER,params,params.out_width * params.out_height * params.t...)<SUB>30</SUB>> ]
"55834574868" [label = <(FIELD_IDENTIFIER,tensor_in_batch,tensor_in_batch)<SUB>30</SUB>> ]
"94489280557" [label = <(LOCAL,EigenIndexMatrixMap out_arg_max_mat: EigenIndexMatrixMap)<SUB>31</SUB>> ]
"30064771256" [label = <(out_arg_max_mat,out_arg_max_mat(
      output_arg_max-&gt;flat&lt;Tar...)<SUB>31</SUB>> ]
"30064771257" [label = <(data,output_arg_max-&gt;flat&lt;Targmax&gt;().data())<SUB>32</SUB>> ]
"30064771258" [label = <(flat&lt;Targmax&gt;,output_arg_max-&gt;flat&lt;Targmax&gt;())<SUB>32</SUB>> ]
"68719476940" [label = <(IDENTIFIER,output_arg_max,output_arg_max-&gt;flat&lt;Targmax&gt;())<SUB>32</SUB>> ]
"30064771259" [label = <(&lt;operator&gt;.fieldAccess,params.depth)<SUB>32</SUB>> ]
"68719476941" [label = <(IDENTIFIER,params,out_arg_max_mat(
      output_arg_max-&gt;flat&lt;Tar...)<SUB>32</SUB>> ]
"55834574869" [label = <(FIELD_IDENTIFIER,depth,depth)<SUB>32</SUB>> ]
"30064771260" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height * params.t...)<SUB>33</SUB>> ]
"30064771261" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height)<SUB>33</SUB>> ]
"30064771262" [label = <(&lt;operator&gt;.fieldAccess,params.out_width)<SUB>33</SUB>> ]
"68719476942" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>33</SUB>> ]
"55834574870" [label = <(FIELD_IDENTIFIER,out_width,out_width)<SUB>33</SUB>> ]
"30064771263" [label = <(&lt;operator&gt;.fieldAccess,params.out_height)<SUB>33</SUB>> ]
"68719476943" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>33</SUB>> ]
"55834574871" [label = <(FIELD_IDENTIFIER,out_height,out_height)<SUB>33</SUB>> ]
"30064771264" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_batch)<SUB>33</SUB>> ]
"68719476944" [label = <(IDENTIFIER,params,params.out_width * params.out_height * params.t...)<SUB>33</SUB>> ]
"55834574872" [label = <(FIELD_IDENTIFIER,tensor_in_batch,tensor_in_batch)<SUB>33</SUB>> ]
"94489280559" [label = <(LOCAL,constDeviceBase.CpuWorkerThreads&amp; worker_threads: DeviceBase.CpuWorkerThreads&amp;)<SUB>35</SUB>> ]
"30064771265" [label = <(&lt;operator&gt;.assignment,&amp; worker_threads =
      *(context-&gt;device()-&gt;t...)<SUB>35</SUB>> ]
"68719476945" [label = <(IDENTIFIER,worker_threads,&amp; worker_threads =
      *(context-&gt;device()-&gt;t...)<SUB>35</SUB>> ]
"30064771266" [label = <(&lt;operator&gt;.indirection,*(context-&gt;device()-&gt;tensorflow_cpu_worker_thre...)<SUB>36</SUB>> ]
"30064771267" [label = <(tensorflow_cpu_worker_threads,context-&gt;device()-&gt;tensorflow_cpu_worker_threads())<SUB>36</SUB>> ]
"30064771268" [label = <(device,context-&gt;device())<SUB>36</SUB>> ]
"68719476946" [label = <(IDENTIFIER,context,context-&gt;device())<SUB>36</SUB>> ]
"94489280560" [label = <(LOCAL,auto shard: auto)<SUB>48</SUB>> ]
"30064771269" [label = <(&lt;operator&gt;.assignment,shard = [&amp;params, &amp;in_mat, &amp;out_mat, &amp;out_arg_m...)<SUB>48</SUB>> ]
"68719476947" [label = <(IDENTIFIER,shard,shard = [&amp;params, &amp;in_mat, &amp;out_mat, &amp;out_arg_m...)<SUB>48</SUB>> ]
"124554051584" [label = <(METHOD_REF,[&amp;params, &amp;in_mat, &amp;out_mat, &amp;out_arg_max_mat, ...,shard = [&amp;params, &amp;in_mat, &amp;out_mat, &amp;out_arg_m...)<SUB>48</SUB>> ]
"94489280561" [label = <(LOCAL,const int64_t shard_cost: int64_t)<SUB>149</SUB>> ]
"30064771270" [label = <(&lt;operator&gt;.assignment,shard_cost = params.tensor_in_rows * params.ten...)<SUB>149</SUB>> ]
"68719476948" [label = <(IDENTIFIER,shard_cost,shard_cost = params.tensor_in_rows * params.ten...)<SUB>149</SUB>> ]
"30064771271" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_rows * params.tensor_in_cols *...)<SUB>149</SUB>> ]
"30064771272" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_rows * params.tensor_in_cols *...)<SUB>149</SUB>> ]
"30064771273" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_rows * params.tensor_in_cols *...)<SUB>149</SUB>> ]
"30064771274" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_rows * params.tensor_in_cols)<SUB>149</SUB>> ]
"30064771275" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_rows)<SUB>149</SUB>> ]
"68719476949" [label = <(IDENTIFIER,params,params.tensor_in_rows * params.tensor_in_cols)<SUB>149</SUB>> ]
"55834574873" [label = <(FIELD_IDENTIFIER,tensor_in_rows,tensor_in_rows)<SUB>149</SUB>> ]
"30064771276" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_cols)<SUB>149</SUB>> ]
"68719476950" [label = <(IDENTIFIER,params,params.tensor_in_rows * params.tensor_in_cols)<SUB>149</SUB>> ]
"55834574874" [label = <(FIELD_IDENTIFIER,tensor_in_cols,tensor_in_cols)<SUB>149</SUB>> ]
"30064771277" [label = <(&lt;operator&gt;.fieldAccess,params.depth)<SUB>150</SUB>> ]
"68719476951" [label = <(IDENTIFIER,params,params.tensor_in_rows * params.tensor_in_cols *...)<SUB>150</SUB>> ]
"55834574875" [label = <(FIELD_IDENTIFIER,depth,depth)<SUB>150</SUB>> ]
"30064771278" [label = <(&lt;operator&gt;.fieldAccess,params.window_rows)<SUB>150</SUB>> ]
"68719476952" [label = <(IDENTIFIER,params,params.tensor_in_rows * params.tensor_in_cols *...)<SUB>150</SUB>> ]
"55834574876" [label = <(FIELD_IDENTIFIER,window_rows,window_rows)<SUB>150</SUB>> ]
"30064771279" [label = <(&lt;operator&gt;.fieldAccess,params.window_cols)<SUB>151</SUB>> ]
"68719476953" [label = <(IDENTIFIER,params,params.tensor_in_rows * params.tensor_in_cols *...)<SUB>151</SUB>> ]
"55834574877" [label = <(FIELD_IDENTIFIER,window_cols,window_cols)<SUB>151</SUB>> ]
"30064771280" [label = <(Shard,Shard(worker_threads.num_threads, worker_thread...)<SUB>152</SUB>> ]
"30064771281" [label = <(&lt;operator&gt;.fieldAccess,worker_threads.num_threads)<SUB>152</SUB>> ]
"68719476954" [label = <(IDENTIFIER,worker_threads,Shard(worker_threads.num_threads, worker_thread...)<SUB>152</SUB>> ]
"55834574878" [label = <(FIELD_IDENTIFIER,num_threads,num_threads)<SUB>152</SUB>> ]
"30064771282" [label = <(&lt;operator&gt;.fieldAccess,worker_threads.workers)<SUB>152</SUB>> ]
"68719476955" [label = <(IDENTIFIER,worker_threads,Shard(worker_threads.num_threads, worker_thread...)<SUB>152</SUB>> ]
"55834574879" [label = <(FIELD_IDENTIFIER,workers,workers)<SUB>152</SUB>> ]
"30064771283" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_batch)<SUB>153</SUB>> ]
"68719476956" [label = <(IDENTIFIER,params,Shard(worker_threads.num_threads, worker_thread...)<SUB>153</SUB>> ]
"55834574880" [label = <(FIELD_IDENTIFIER,tensor_in_batch,tensor_in_batch)<SUB>153</SUB>> ]
"68719476957" [label = <(IDENTIFIER,shard_cost,Shard(worker_threads.num_threads, worker_thread...)<SUB>153</SUB>> ]
"68719476958" [label = <(IDENTIFIER,shard,Shard(worker_threads.num_threads, worker_thread...)<SUB>153</SUB>> ]
"133143986177" [label = <(MODIFIER,STATIC)> ]
"128849018881" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149698" -> "115964116999"  [ label = "AST: "] 
  "111669149698" -> "115964117000"  [ label = "AST: "] 
  "111669149698" -> "115964116997"  [ label = "AST: "] 
  "111669149698" -> "115964116996"  [ label = "AST: "] 
  "111669149698" -> "115964117001"  [ label = "AST: "] 
  "111669149698" -> "115964116998"  [ label = "AST: "] 
  "111669149698" -> "115964116994"  [ label = "AST: "] 
  "111669149698" -> "115964116995"  [ label = "AST: "] 
  "111669149698" -> "25769803798"  [ label = "AST: "] 
  "111669149698" -> "133143986177"  [ label = "AST: "] 
  "111669149698" -> "128849018881"  [ label = "AST: "] 
  "25769803798" -> "47244640268"  [ label = "AST: "] 
  "25769803798" -> "47244640269"  [ label = "AST: "] 
  "25769803798" -> "171798691841"  [ label = "AST: "] 
  "25769803798" -> "171798691842"  [ label = "AST: "] 
  "25769803798" -> "171798691843"  [ label = "AST: "] 
  "25769803798" -> "94489280558"  [ label = "AST: "] 
  "25769803798" -> "30064771238"  [ label = "AST: "] 
  "25769803798" -> "94489280556"  [ label = "AST: "] 
  "25769803798" -> "30064771247"  [ label = "AST: "] 
  "25769803798" -> "94489280557"  [ label = "AST: "] 
  "25769803798" -> "30064771256"  [ label = "AST: "] 
  "25769803798" -> "94489280559"  [ label = "AST: "] 
  "25769803798" -> "30064771265"  [ label = "AST: "] 
  "25769803798" -> "94489280560"  [ label = "AST: "] 
  "25769803798" -> "30064771269"  [ label = "AST: "] 
  "25769803798" -> "94489280561"  [ label = "AST: "] 
  "25769803798" -> "30064771270"  [ label = "AST: "] 
  "25769803798" -> "30064771280"  [ label = "AST: "] 
  "47244640268" -> "30064771226"  [ label = "AST: "] 
  "47244640268" -> "25769803799"  [ label = "AST: "] 
  "30064771226" -> "68719476922"  [ label = "AST: "] 
  "30064771226" -> "90194313230"  [ label = "AST: "] 
  "25769803799" -> "30064771227"  [ label = "AST: "] 
  "25769803799" -> "30064771229"  [ label = "AST: "] 
  "30064771227" -> "68719476923"  [ label = "AST: "] 
  "30064771227" -> "68719476924"  [ label = "AST: "] 
  "30064771227" -> "30064771228"  [ label = "AST: "] 
  "30064771228" -> "90194313231"  [ label = "AST: "] 
  "30064771229" -> "68719476925"  [ label = "AST: "] 
  "30064771229" -> "30064771230"  [ label = "AST: "] 
  "30064771229" -> "30064771232"  [ label = "AST: "] 
  "30064771230" -> "30064771231"  [ label = "AST: "] 
  "30064771230" -> "55834574860"  [ label = "AST: "] 
  "30064771231" -> "68719476926"  [ label = "AST: "] 
  "30064771231" -> "68719476927"  [ label = "AST: "] 
  "30064771232" -> "90194313232"  [ label = "AST: "] 
  "47244640269" -> "30064771233"  [ label = "AST: "] 
  "47244640269" -> "25769803800"  [ label = "AST: "] 
  "30064771233" -> "30064771234"  [ label = "AST: "] 
  "30064771233" -> "30064771236"  [ label = "AST: "] 
  "30064771234" -> "30064771235"  [ label = "AST: "] 
  "30064771234" -> "90194313233"  [ label = "AST: "] 
  "30064771235" -> "68719476928"  [ label = "AST: "] 
  "30064771236" -> "30064771237"  [ label = "AST: "] 
  "30064771236" -> "90194313234"  [ label = "AST: "] 
  "30064771237" -> "68719476929"  [ label = "AST: "] 
  "25769803800" -> "146028888064"  [ label = "AST: "] 
  "30064771238" -> "30064771239"  [ label = "AST: "] 
  "30064771238" -> "30064771241"  [ label = "AST: "] 
  "30064771238" -> "30064771242"  [ label = "AST: "] 
  "30064771239" -> "30064771240"  [ label = "AST: "] 
  "30064771240" -> "68719476930"  [ label = "AST: "] 
  "30064771241" -> "68719476931"  [ label = "AST: "] 
  "30064771241" -> "55834574861"  [ label = "AST: "] 
  "30064771242" -> "30064771243"  [ label = "AST: "] 
  "30064771242" -> "30064771246"  [ label = "AST: "] 
  "30064771243" -> "30064771244"  [ label = "AST: "] 
  "30064771243" -> "30064771245"  [ label = "AST: "] 
  "30064771244" -> "68719476932"  [ label = "AST: "] 
  "30064771244" -> "55834574862"  [ label = "AST: "] 
  "30064771245" -> "68719476933"  [ label = "AST: "] 
  "30064771245" -> "55834574863"  [ label = "AST: "] 
  "30064771246" -> "68719476934"  [ label = "AST: "] 
  "30064771246" -> "55834574864"  [ label = "AST: "] 
  "30064771247" -> "30064771248"  [ label = "AST: "] 
  "30064771247" -> "30064771250"  [ label = "AST: "] 
  "30064771247" -> "30064771251"  [ label = "AST: "] 
  "30064771248" -> "30064771249"  [ label = "AST: "] 
  "30064771249" -> "68719476935"  [ label = "AST: "] 
  "30064771250" -> "68719476936"  [ label = "AST: "] 
  "30064771250" -> "55834574865"  [ label = "AST: "] 
  "30064771251" -> "30064771252"  [ label = "AST: "] 
  "30064771251" -> "30064771255"  [ label = "AST: "] 
  "30064771252" -> "30064771253"  [ label = "AST: "] 
  "30064771252" -> "30064771254"  [ label = "AST: "] 
  "30064771253" -> "68719476937"  [ label = "AST: "] 
  "30064771253" -> "55834574866"  [ label = "AST: "] 
  "30064771254" -> "68719476938"  [ label = "AST: "] 
  "30064771254" -> "55834574867"  [ label = "AST: "] 
  "30064771255" -> "68719476939"  [ label = "AST: "] 
  "30064771255" -> "55834574868"  [ label = "AST: "] 
  "30064771256" -> "30064771257"  [ label = "AST: "] 
  "30064771256" -> "30064771259"  [ label = "AST: "] 
  "30064771256" -> "30064771260"  [ label = "AST: "] 
  "30064771257" -> "30064771258"  [ label = "AST: "] 
  "30064771258" -> "68719476940"  [ label = "AST: "] 
  "30064771259" -> "68719476941"  [ label = "AST: "] 
  "30064771259" -> "55834574869"  [ label = "AST: "] 
  "30064771260" -> "30064771261"  [ label = "AST: "] 
  "30064771260" -> "30064771264"  [ label = "AST: "] 
  "30064771261" -> "30064771262"  [ label = "AST: "] 
  "30064771261" -> "30064771263"  [ label = "AST: "] 
  "30064771262" -> "68719476942"  [ label = "AST: "] 
  "30064771262" -> "55834574870"  [ label = "AST: "] 
  "30064771263" -> "68719476943"  [ label = "AST: "] 
  "30064771263" -> "55834574871"  [ label = "AST: "] 
  "30064771264" -> "68719476944"  [ label = "AST: "] 
  "30064771264" -> "55834574872"  [ label = "AST: "] 
  "30064771265" -> "68719476945"  [ label = "AST: "] 
  "30064771265" -> "30064771266"  [ label = "AST: "] 
  "30064771266" -> "30064771267"  [ label = "AST: "] 
  "30064771267" -> "30064771268"  [ label = "AST: "] 
  "30064771268" -> "68719476946"  [ label = "AST: "] 
  "30064771269" -> "68719476947"  [ label = "AST: "] 
  "30064771269" -> "124554051584"  [ label = "AST: "] 
  "30064771270" -> "68719476948"  [ label = "AST: "] 
  "30064771270" -> "30064771271"  [ label = "AST: "] 
  "30064771271" -> "30064771272"  [ label = "AST: "] 
  "30064771271" -> "30064771279"  [ label = "AST: "] 
  "30064771272" -> "30064771273"  [ label = "AST: "] 
  "30064771272" -> "30064771278"  [ label = "AST: "] 
  "30064771273" -> "30064771274"  [ label = "AST: "] 
  "30064771273" -> "30064771277"  [ label = "AST: "] 
  "30064771274" -> "30064771275"  [ label = "AST: "] 
  "30064771274" -> "30064771276"  [ label = "AST: "] 
  "30064771275" -> "68719476949"  [ label = "AST: "] 
  "30064771275" -> "55834574873"  [ label = "AST: "] 
  "30064771276" -> "68719476950"  [ label = "AST: "] 
  "30064771276" -> "55834574874"  [ label = "AST: "] 
  "30064771277" -> "68719476951"  [ label = "AST: "] 
  "30064771277" -> "55834574875"  [ label = "AST: "] 
  "30064771278" -> "68719476952"  [ label = "AST: "] 
  "30064771278" -> "55834574876"  [ label = "AST: "] 
  "30064771279" -> "68719476953"  [ label = "AST: "] 
  "30064771279" -> "55834574877"  [ label = "AST: "] 
  "30064771280" -> "30064771281"  [ label = "AST: "] 
  "30064771280" -> "30064771282"  [ label = "AST: "] 
  "30064771280" -> "30064771283"  [ label = "AST: "] 
  "30064771280" -> "68719476957"  [ label = "AST: "] 
  "30064771280" -> "68719476958"  [ label = "AST: "] 
  "30064771281" -> "68719476954"  [ label = "AST: "] 
  "30064771281" -> "55834574878"  [ label = "AST: "] 
  "30064771282" -> "68719476955"  [ label = "AST: "] 
  "30064771282" -> "55834574879"  [ label = "AST: "] 
  "30064771283" -> "68719476956"  [ label = "AST: "] 
  "30064771283" -> "55834574880"  [ label = "AST: "] 
  "30064771238" -> "30064771249"  [ label = "CFG: "] 
  "30064771247" -> "30064771258"  [ label = "CFG: "] 
  "30064771256" -> "30064771268"  [ label = "CFG: "] 
  "30064771265" -> "124554051584"  [ label = "CFG: "] 
  "30064771269" -> "55834574873"  [ label = "CFG: "] 
  "30064771270" -> "55834574878"  [ label = "CFG: "] 
  "30064771280" -> "128849018881"  [ label = "CFG: "] 
  "30064771226" -> "30064771228"  [ label = "CFG: "] 
  "30064771226" -> "30064771235"  [ label = "CFG: "] 
  "30064771233" -> "146028888064"  [ label = "CFG: "] 
  "30064771233" -> "30064771240"  [ label = "CFG: "] 
  "30064771239" -> "55834574861"  [ label = "CFG: "] 
  "30064771241" -> "55834574862"  [ label = "CFG: "] 
  "30064771242" -> "30064771238"  [ label = "CFG: "] 
  "30064771248" -> "55834574865"  [ label = "CFG: "] 
  "30064771250" -> "55834574866"  [ label = "CFG: "] 
  "30064771251" -> "30064771247"  [ label = "CFG: "] 
  "30064771257" -> "55834574869"  [ label = "CFG: "] 
  "30064771259" -> "55834574870"  [ label = "CFG: "] 
  "30064771260" -> "30064771256"  [ label = "CFG: "] 
  "30064771266" -> "30064771265"  [ label = "CFG: "] 
  "124554051584" -> "30064771269"  [ label = "CFG: "] 
  "30064771271" -> "30064771270"  [ label = "CFG: "] 
  "30064771281" -> "55834574879"  [ label = "CFG: "] 
  "30064771282" -> "55834574880"  [ label = "CFG: "] 
  "30064771283" -> "30064771280"  [ label = "CFG: "] 
  "30064771227" -> "30064771231"  [ label = "CFG: "] 
  "30064771229" -> "30064771235"  [ label = "CFG: "] 
  "30064771234" -> "30064771233"  [ label = "CFG: "] 
  "30064771234" -> "30064771237"  [ label = "CFG: "] 
  "30064771236" -> "30064771233"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "CFG: "] 
  "30064771240" -> "30064771239"  [ label = "CFG: "] 
  "55834574861" -> "30064771241"  [ label = "CFG: "] 
  "30064771243" -> "55834574864"  [ label = "CFG: "] 
  "30064771246" -> "30064771242"  [ label = "CFG: "] 
  "30064771249" -> "30064771248"  [ label = "CFG: "] 
  "55834574865" -> "30064771250"  [ label = "CFG: "] 
  "30064771252" -> "55834574868"  [ label = "CFG: "] 
  "30064771255" -> "30064771251"  [ label = "CFG: "] 
  "30064771258" -> "30064771257"  [ label = "CFG: "] 
  "55834574869" -> "30064771259"  [ label = "CFG: "] 
  "30064771261" -> "55834574872"  [ label = "CFG: "] 
  "30064771264" -> "30064771260"  [ label = "CFG: "] 
  "30064771267" -> "30064771266"  [ label = "CFG: "] 
  "30064771272" -> "55834574877"  [ label = "CFG: "] 
  "30064771279" -> "30064771271"  [ label = "CFG: "] 
  "55834574878" -> "30064771281"  [ label = "CFG: "] 
  "55834574879" -> "30064771282"  [ label = "CFG: "] 
  "55834574880" -> "30064771283"  [ label = "CFG: "] 
  "30064771228" -> "30064771227"  [ label = "CFG: "] 
  "30064771230" -> "30064771232"  [ label = "CFG: "] 
  "30064771232" -> "30064771229"  [ label = "CFG: "] 
  "30064771235" -> "30064771234"  [ label = "CFG: "] 
  "30064771237" -> "30064771236"  [ label = "CFG: "] 
  "30064771244" -> "55834574863"  [ label = "CFG: "] 
  "30064771245" -> "30064771243"  [ label = "CFG: "] 
  "55834574864" -> "30064771246"  [ label = "CFG: "] 
  "30064771253" -> "55834574867"  [ label = "CFG: "] 
  "30064771254" -> "30064771252"  [ label = "CFG: "] 
  "55834574868" -> "30064771255"  [ label = "CFG: "] 
  "30064771262" -> "55834574871"  [ label = "CFG: "] 
  "30064771263" -> "30064771261"  [ label = "CFG: "] 
  "55834574872" -> "30064771264"  [ label = "CFG: "] 
  "30064771268" -> "30064771267"  [ label = "CFG: "] 
  "30064771273" -> "55834574876"  [ label = "CFG: "] 
  "30064771278" -> "30064771272"  [ label = "CFG: "] 
  "55834574877" -> "30064771279"  [ label = "CFG: "] 
  "30064771231" -> "55834574860"  [ label = "CFG: "] 
  "55834574860" -> "30064771230"  [ label = "CFG: "] 
  "55834574862" -> "30064771244"  [ label = "CFG: "] 
  "55834574863" -> "30064771245"  [ label = "CFG: "] 
  "55834574866" -> "30064771253"  [ label = "CFG: "] 
  "55834574867" -> "30064771254"  [ label = "CFG: "] 
  "55834574870" -> "30064771262"  [ label = "CFG: "] 
  "55834574871" -> "30064771263"  [ label = "CFG: "] 
  "30064771274" -> "55834574875"  [ label = "CFG: "] 
  "30064771277" -> "30064771273"  [ label = "CFG: "] 
  "55834574876" -> "30064771278"  [ label = "CFG: "] 
  "30064771275" -> "55834574874"  [ label = "CFG: "] 
  "30064771276" -> "30064771274"  [ label = "CFG: "] 
  "55834574875" -> "30064771277"  [ label = "CFG: "] 
  "55834574873" -> "30064771275"  [ label = "CFG: "] 
  "55834574874" -> "30064771276"  [ label = "CFG: "] 
  "111669149698" -> "30064771226"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116999" -> "128849018881"  [ label = "DDG: context"] 
  "115964117000" -> "128849018881"  [ label = "DDG: output"] 
  "115964116997" -> "128849018881"  [ label = "DDG: output_arg_max"] 
  "115964116998" -> "128849018881"  [ label = "DDG: out_backprop"] 
  "115964116994" -> "128849018881"  [ label = "DDG: params"] 
  "115964116995" -> "128849018881"  [ label = "DDG: include_batch_in_index"] 
  "30064771226" -> "128849018881"  [ label = "DDG: input_backprop"] 
  "30064771226" -> "128849018881"  [ label = "DDG: input_backprop != nullptr"] 
  "30064771227" -> "128849018881"  [ label = "DDG: include_batch_in_index"] 
  "30064771227" -> "128849018881"  [ label = "DDG: errors::Internal(
            &quot;SpatialMaxPoolWithArgMaxHelper requires include_batch_in_index &quot;
            &quot;to be True when input_backprop != nullptr&quot;)"] 
  "30064771227" -> "128849018881"  [ label = "DDG: OP_REQUIRES(
        context, include_batch_in_index,
        errors::Internal(
            &quot;SpatialMaxPoolWithArgMaxHelper requires include_batch_in_index &quot;
            &quot;to be True when input_backprop != nullptr&quot;))"] 
  "30064771229" -> "128849018881"  [ label = "DDG: context"] 
  "30064771229" -> "128849018881"  [ label = "DDG: std::is_same&lt;Targmax, int64&gt;::value"] 
  "30064771229" -> "128849018881"  [ label = "DDG: errors::Internal(&quot;SpatialMaxPoolWithArgMaxHelper requires Targmax &quot;
                         &quot;to be int64 when input_backprop != nullptr&quot;)"] 
  "30064771229" -> "128849018881"  [ label = "DDG: OP_REQUIRES(
        context, (std::is_same&lt;Targmax, int64&gt;::value),
        errors::Internal(&quot;SpatialMaxPoolWithArgMaxHelper requires Targmax &quot;
                         &quot;to be int64 when input_backprop != nullptr&quot;))"] 
  "30064771235" -> "128849018881"  [ label = "DDG: tensor_in"] 
  "30064771234" -> "128849018881"  [ label = "DDG: tensor_in.NumElements()"] 
  "30064771233" -> "128849018881"  [ label = "DDG: tensor_in.NumElements() == 0"] 
  "30064771237" -> "128849018881"  [ label = "DDG: output"] 
  "30064771236" -> "128849018881"  [ label = "DDG: output-&gt;NumElements()"] 
  "30064771233" -> "128849018881"  [ label = "DDG: output-&gt;NumElements() == 0"] 
  "30064771233" -> "128849018881"  [ label = "DDG: tensor_in.NumElements() == 0 || output-&gt;NumElements() == 0"] 
  "111669149698" -> "115964116999"  [ label = "DDG: "] 
  "111669149698" -> "115964117000"  [ label = "DDG: "] 
  "111669149698" -> "115964116997"  [ label = "DDG: "] 
  "111669149698" -> "115964116996"  [ label = "DDG: "] 
  "111669149698" -> "115964117001"  [ label = "DDG: "] 
  "111669149698" -> "115964116998"  [ label = "DDG: "] 
  "111669149698" -> "115964116994"  [ label = "DDG: "] 
  "111669149698" -> "115964116995"  [ label = "DDG: "] 
  "111669149698" -> "30064771269"  [ label = "DDG: "] 
  "30064771271" -> "30064771270"  [ label = "DDG: params.tensor_in_rows * params.tensor_in_cols *
                             params.depth * params.window_rows"] 
  "30064771271" -> "30064771270"  [ label = "DDG: params.window_cols"] 
  "30064771239" -> "30064771238"  [ label = "DDG: tensor_in.flat&lt;T&gt;()"] 
  "115964116994" -> "30064771238"  [ label = "DDG: params"] 
  "30064771242" -> "30064771238"  [ label = "DDG: params.tensor_in_cols * params.tensor_in_rows"] 
  "30064771242" -> "30064771238"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771248" -> "30064771247"  [ label = "DDG: output-&gt;flat&lt;T&gt;()"] 
  "115964116994" -> "30064771247"  [ label = "DDG: params"] 
  "30064771238" -> "30064771247"  [ label = "DDG: params.depth"] 
  "30064771251" -> "30064771247"  [ label = "DDG: params.out_width * params.out_height"] 
  "30064771251" -> "30064771247"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771257" -> "30064771256"  [ label = "DDG: output_arg_max-&gt;flat&lt;Targmax&gt;()"] 
  "115964116994" -> "30064771256"  [ label = "DDG: params"] 
  "30064771247" -> "30064771256"  [ label = "DDG: params.depth"] 
  "30064771260" -> "30064771256"  [ label = "DDG: params.out_width * params.out_height"] 
  "30064771260" -> "30064771256"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771265" -> "30064771280"  [ label = "DDG: worker_threads"] 
  "115964116994" -> "30064771280"  [ label = "DDG: params"] 
  "30064771260" -> "30064771280"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771270" -> "30064771280"  [ label = "DDG: shard_cost"] 
  "111669149698" -> "30064771280"  [ label = "DDG: "] 
  "30064771269" -> "30064771280"  [ label = "DDG: shard"] 
  "115964116996" -> "30064771226"  [ label = "DDG: input_backprop"] 
  "111669149698" -> "30064771226"  [ label = "DDG: "] 
  "30064771234" -> "30064771233"  [ label = "DDG: tensor_in.NumElements()"] 
  "30064771234" -> "30064771233"  [ label = "DDG: 0"] 
  "30064771236" -> "30064771233"  [ label = "DDG: output-&gt;NumElements()"] 
  "30064771236" -> "30064771233"  [ label = "DDG: 0"] 
  "111669149698" -> "146028888064"  [ label = "DDG: "] 
  "30064771240" -> "30064771239"  [ label = "DDG: tensor_in"] 
  "30064771243" -> "30064771242"  [ label = "DDG: params.tensor_in_cols"] 
  "30064771243" -> "30064771242"  [ label = "DDG: params.tensor_in_rows"] 
  "115964116994" -> "30064771242"  [ label = "DDG: params"] 
  "30064771249" -> "30064771248"  [ label = "DDG: output"] 
  "30064771252" -> "30064771251"  [ label = "DDG: params.out_width"] 
  "30064771252" -> "30064771251"  [ label = "DDG: params.out_height"] 
  "115964116994" -> "30064771251"  [ label = "DDG: params"] 
  "30064771242" -> "30064771251"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771258" -> "30064771257"  [ label = "DDG: output_arg_max"] 
  "30064771261" -> "30064771260"  [ label = "DDG: params.out_width"] 
  "30064771261" -> "30064771260"  [ label = "DDG: params.out_height"] 
  "115964116994" -> "30064771260"  [ label = "DDG: params"] 
  "30064771251" -> "30064771260"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771272" -> "30064771271"  [ label = "DDG: params.tensor_in_rows * params.tensor_in_cols *
                             params.depth"] 
  "30064771272" -> "30064771271"  [ label = "DDG: params.window_rows"] 
  "115964116994" -> "30064771271"  [ label = "DDG: params"] 
  "115964116999" -> "30064771227"  [ label = "DDG: context"] 
  "111669149698" -> "30064771227"  [ label = "DDG: "] 
  "115964116995" -> "30064771227"  [ label = "DDG: include_batch_in_index"] 
  "30064771228" -> "30064771227"  [ label = "DDG: &quot;SpatialMaxPoolWithArgMaxHelper requires include_batch_in_index &quot;
            &quot;to be True when input_backprop != nullptr&quot;"] 
  "30064771227" -> "30064771229"  [ label = "DDG: context"] 
  "111669149698" -> "30064771229"  [ label = "DDG: "] 
  "30064771232" -> "30064771229"  [ label = "DDG: &quot;SpatialMaxPoolWithArgMaxHelper requires Targmax &quot;
                         &quot;to be int64 when input_backprop != nullptr&quot;"] 
  "30064771235" -> "30064771234"  [ label = "DDG: tensor_in"] 
  "111669149698" -> "30064771234"  [ label = "DDG: "] 
  "30064771237" -> "30064771236"  [ label = "DDG: output"] 
  "111669149698" -> "30064771236"  [ label = "DDG: "] 
  "30064771235" -> "30064771240"  [ label = "DDG: tensor_in"] 
  "111669149698" -> "30064771240"  [ label = "DDG: "] 
  "115964116994" -> "30064771243"  [ label = "DDG: params"] 
  "115964117000" -> "30064771249"  [ label = "DDG: output"] 
  "30064771237" -> "30064771249"  [ label = "DDG: output"] 
  "111669149698" -> "30064771249"  [ label = "DDG: "] 
  "115964116994" -> "30064771252"  [ label = "DDG: params"] 
  "115964116997" -> "30064771258"  [ label = "DDG: output_arg_max"] 
  "111669149698" -> "30064771258"  [ label = "DDG: "] 
  "115964116994" -> "30064771261"  [ label = "DDG: params"] 
  "30064771252" -> "30064771261"  [ label = "DDG: params.out_width"] 
  "30064771252" -> "30064771261"  [ label = "DDG: params.out_height"] 
  "30064771268" -> "30064771267"  [ label = "DDG: context"] 
  "30064771273" -> "30064771272"  [ label = "DDG: params.tensor_in_rows * params.tensor_in_cols"] 
  "30064771273" -> "30064771272"  [ label = "DDG: params.depth"] 
  "115964116994" -> "30064771272"  [ label = "DDG: params"] 
  "111669149698" -> "30064771228"  [ label = "DDG: "] 
  "111669149698" -> "30064771232"  [ label = "DDG: "] 
  "115964117001" -> "30064771235"  [ label = "DDG: tensor_in"] 
  "111669149698" -> "30064771235"  [ label = "DDG: "] 
  "115964117000" -> "30064771237"  [ label = "DDG: output"] 
  "111669149698" -> "30064771237"  [ label = "DDG: "] 
  "115964116999" -> "30064771268"  [ label = "DDG: context"] 
  "30064771229" -> "30064771268"  [ label = "DDG: context"] 
  "111669149698" -> "30064771268"  [ label = "DDG: "] 
  "30064771274" -> "30064771273"  [ label = "DDG: params.tensor_in_rows"] 
  "30064771274" -> "30064771273"  [ label = "DDG: params.tensor_in_cols"] 
  "115964116994" -> "30064771273"  [ label = "DDG: params"] 
  "30064771256" -> "30064771273"  [ label = "DDG: params.depth"] 
  "115964116994" -> "30064771274"  [ label = "DDG: params"] 
  "30064771243" -> "30064771274"  [ label = "DDG: params.tensor_in_rows"] 
  "30064771243" -> "30064771274"  [ label = "DDG: params.tensor_in_cols"] 
  "30064771226" -> "55834574860"  [ label = "CDG: "] 
  "30064771226" -> "30064771232"  [ label = "CDG: "] 
  "30064771226" -> "30064771231"  [ label = "CDG: "] 
  "30064771226" -> "30064771228"  [ label = "CDG: "] 
  "30064771226" -> "30064771227"  [ label = "CDG: "] 
  "30064771226" -> "30064771230"  [ label = "CDG: "] 
  "30064771226" -> "30064771229"  [ label = "CDG: "] 
  "30064771233" -> "55834574878"  [ label = "CDG: "] 
  "30064771233" -> "55834574877"  [ label = "CDG: "] 
  "30064771233" -> "55834574880"  [ label = "CDG: "] 
  "30064771233" -> "55834574879"  [ label = "CDG: "] 
  "30064771233" -> "55834574874"  [ label = "CDG: "] 
  "30064771233" -> "55834574873"  [ label = "CDG: "] 
  "30064771233" -> "30064771283"  [ label = "CDG: "] 
  "30064771233" -> "55834574876"  [ label = "CDG: "] 
  "30064771233" -> "55834574875"  [ label = "CDG: "] 
  "30064771233" -> "55834574870"  [ label = "CDG: "] 
  "30064771233" -> "30064771280"  [ label = "CDG: "] 
  "30064771233" -> "55834574869"  [ label = "CDG: "] 
  "30064771233" -> "30064771279"  [ label = "CDG: "] 
  "30064771233" -> "55834574872"  [ label = "CDG: "] 
  "30064771233" -> "30064771282"  [ label = "CDG: "] 
  "30064771233" -> "55834574871"  [ label = "CDG: "] 
  "30064771233" -> "30064771281"  [ label = "CDG: "] 
  "30064771233" -> "55834574866"  [ label = "CDG: "] 
  "30064771233" -> "30064771276"  [ label = "CDG: "] 
  "30064771233" -> "55834574865"  [ label = "CDG: "] 
  "30064771233" -> "30064771275"  [ label = "CDG: "] 
  "30064771233" -> "55834574868"  [ label = "CDG: "] 
  "30064771233" -> "30064771278"  [ label = "CDG: "] 
  "30064771233" -> "55834574867"  [ label = "CDG: "] 
  "30064771233" -> "30064771277"  [ label = "CDG: "] 
  "30064771233" -> "55834574862"  [ label = "CDG: "] 
  "30064771233" -> "30064771272"  [ label = "CDG: "] 
  "30064771233" -> "55834574861"  [ label = "CDG: "] 
  "30064771233" -> "30064771271"  [ label = "CDG: "] 
  "30064771233" -> "55834574864"  [ label = "CDG: "] 
  "30064771233" -> "30064771274"  [ label = "CDG: "] 
  "30064771233" -> "55834574863"  [ label = "CDG: "] 
  "30064771233" -> "30064771273"  [ label = "CDG: "] 
  "30064771233" -> "30064771268"  [ label = "CDG: "] 
  "30064771233" -> "30064771267"  [ label = "CDG: "] 
  "30064771233" -> "30064771270"  [ label = "CDG: "] 
  "30064771233" -> "30064771269"  [ label = "CDG: "] 
  "30064771233" -> "30064771264"  [ label = "CDG: "] 
  "30064771233" -> "30064771263"  [ label = "CDG: "] 
  "30064771233" -> "30064771266"  [ label = "CDG: "] 
  "30064771233" -> "30064771265"  [ label = "CDG: "] 
  "30064771233" -> "30064771260"  [ label = "CDG: "] 
  "30064771233" -> "30064771259"  [ label = "CDG: "] 
  "30064771233" -> "30064771262"  [ label = "CDG: "] 
  "30064771233" -> "30064771261"  [ label = "CDG: "] 
  "30064771233" -> "30064771256"  [ label = "CDG: "] 
  "30064771233" -> "30064771255"  [ label = "CDG: "] 
  "30064771233" -> "30064771258"  [ label = "CDG: "] 
  "30064771233" -> "30064771257"  [ label = "CDG: "] 
  "30064771233" -> "30064771252"  [ label = "CDG: "] 
  "30064771233" -> "30064771251"  [ label = "CDG: "] 
  "30064771233" -> "30064771254"  [ label = "CDG: "] 
  "30064771233" -> "30064771253"  [ label = "CDG: "] 
  "30064771233" -> "30064771248"  [ label = "CDG: "] 
  "30064771233" -> "30064771247"  [ label = "CDG: "] 
  "30064771233" -> "30064771250"  [ label = "CDG: "] 
  "30064771233" -> "30064771249"  [ label = "CDG: "] 
  "30064771233" -> "30064771244"  [ label = "CDG: "] 
  "30064771233" -> "30064771243"  [ label = "CDG: "] 
  "30064771233" -> "30064771246"  [ label = "CDG: "] 
  "30064771233" -> "30064771245"  [ label = "CDG: "] 
  "30064771233" -> "30064771240"  [ label = "CDG: "] 
  "30064771233" -> "30064771239"  [ label = "CDG: "] 
  "30064771233" -> "124554051584"  [ label = "CDG: "] 
  "30064771233" -> "30064771242"  [ label = "CDG: "] 
  "30064771233" -> "30064771241"  [ label = "CDG: "] 
  "30064771233" -> "146028888064"  [ label = "CDG: "] 
  "30064771233" -> "30064771238"  [ label = "CDG: "] 
  "30064771234" -> "30064771236"  [ label = "CDG: "] 
  "30064771234" -> "30064771237"  [ label = "CDG: "] 
}
"""
)
