[33mval[0m [36mres589[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "sixel_allocator_calloc" {  
"111669149697" [label = <(METHOD,sixel_allocator_calloc)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,sixel_allocator_t   /* in */ *allocator)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,size_t              /* in */ nelm)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,size_t              /* in */ elsize)<SUB>4</SUB>> ]
"25769803777" [label = <(BLOCK,{
    size_t n;

    /* precondition */
    ass...,{
    size_t n;

    /* precondition */
    ass...)<SUB>5</SUB>> ]
"94489280512" [label = <(LOCAL,size_t n: size_t)<SUB>6</SUB>> ]
"30064771072" [label = <(assert,assert(allocator))<SUB>9</SUB>> ]
"68719476736" [label = <(IDENTIFIER,allocator,assert(allocator))<SUB>9</SUB>> ]
"30064771073" [label = <(assert,assert(allocator-&gt;fn_calloc))<SUB>10</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.indirectFieldAccess,allocator-&gt;fn_calloc)<SUB>10</SUB>> ]
"68719476737" [label = <(IDENTIFIER,allocator,assert(allocator-&gt;fn_calloc))<SUB>10</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,fn_calloc,fn_calloc)<SUB>10</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,n = nelm * elsize)<SUB>12</SUB>> ]
"68719476738" [label = <(IDENTIFIER,n,n = nelm * elsize)<SUB>12</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.multiplication,nelm * elsize)<SUB>12</SUB>> ]
"68719476739" [label = <(IDENTIFIER,nelm,nelm * elsize)<SUB>12</SUB>> ]
"68719476740" [label = <(IDENTIFIER,elsize,nelm * elsize)<SUB>12</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (n == 0))<SUB>14</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.equals,n == 0)<SUB>14</SUB>> ]
"68719476741" [label = <(IDENTIFIER,n,n == 0)<SUB>14</SUB>> ]
"90194313216" [label = <(LITERAL,0,n == 0)<SUB>14</SUB>> ]
"25769803778" [label = <(BLOCK,{
        sixel_helper_set_additional_message(
...,{
        sixel_helper_set_additional_message(
...)<SUB>14</SUB>> ]
"30064771078" [label = <(sixel_helper_set_additional_message,sixel_helper_set_additional_message(
          ...)<SUB>15</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;sixel_allocator_malloc: called with n == 0&quot;,sixel_helper_set_additional_message(
          ...)<SUB>16</SUB>> ]
"146028888064" [label = <(RETURN,return NULL;,return NULL;)<SUB>17</SUB>> ]
"68719476742" [label = <(IDENTIFIER,NULL,return NULL;)<SUB>17</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (n &gt; SIXEL_ALLOCATE_BYTES_MAX))<SUB>20</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.greaterThan,n &gt; SIXEL_ALLOCATE_BYTES_MAX)<SUB>20</SUB>> ]
"68719476743" [label = <(IDENTIFIER,n,n &gt; SIXEL_ALLOCATE_BYTES_MAX)<SUB>20</SUB>> ]
"68719476744" [label = <(IDENTIFIER,SIXEL_ALLOCATE_BYTES_MAX,n &gt; SIXEL_ALLOCATE_BYTES_MAX)<SUB>20</SUB>> ]
"25769803779" [label = <(BLOCK,{
        return NULL;
    },{
        return NULL;
    })<SUB>20</SUB>> ]
"146028888065" [label = <(RETURN,return NULL;,return NULL;)<SUB>21</SUB>> ]
"68719476745" [label = <(IDENTIFIER,NULL,return NULL;)<SUB>21</SUB>> ]
"146028888066" [label = <(RETURN,return allocator-&gt;fn_calloc(nelm, elsize);,return allocator-&gt;fn_calloc(nelm, elsize);)<SUB>24</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.pointerCall,allocator-&gt;fn_calloc(nelm, elsize))<SUB>24</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.indirectFieldAccess,allocator-&gt;fn_calloc)<SUB>24</SUB>> ]
"68719476746" [label = <(IDENTIFIER,allocator,allocator-&gt;fn_calloc(nelm, elsize))<SUB>24</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,fn_calloc,fn_calloc)<SUB>24</SUB>> ]
"68719476747" [label = <(IDENTIFIER,nelm,allocator-&gt;fn_calloc(nelm, elsize))<SUB>24</SUB>> ]
"68719476748" [label = <(IDENTIFIER,elsize,allocator-&gt;fn_calloc(nelm, elsize))<SUB>24</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "146028888066"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "55834574848"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "47244640256" -> "30064771077"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "90194313216"  [ label = "AST: "] 
  "25769803778" -> "30064771078"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "30064771078" -> "90194313217"  [ label = "AST: "] 
  "146028888064" -> "68719476742"  [ label = "AST: "] 
  "47244640257" -> "30064771079"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "68719476745"  [ label = "AST: "] 
  "146028888066" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "68719476747"  [ label = "AST: "] 
  "30064771080" -> "68719476748"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "55834574849"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "CFG: "] 
  "30064771073" -> "30064771076"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "146028888065"  [ label = "CFG: "] 
  "30064771079" -> "55834574849"  [ label = "CFG: "] 
  "30064771080" -> "146028888066"  [ label = "CFG: "] 
  "55834574848" -> "30064771074"  [ label = "CFG: "] 
  "30064771078" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "55834574849" -> "30064771081"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: allocator"] 
  "30064771072" -> "128849018880"  [ label = "DDG: assert(allocator)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: allocator-&gt;fn_calloc"] 
  "30064771073" -> "128849018880"  [ label = "DDG: assert(allocator-&gt;fn_calloc)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: nelm"] 
  "30064771076" -> "128849018880"  [ label = "DDG: elsize"] 
  "30064771075" -> "128849018880"  [ label = "DDG: nelm * elsize"] 
  "30064771075" -> "128849018880"  [ label = "DDG: n = nelm * elsize"] 
  "30064771077" -> "128849018880"  [ label = "DDG: n"] 
  "30064771077" -> "128849018880"  [ label = "DDG: n == 0"] 
  "30064771078" -> "128849018880"  [ label = "DDG: sixel_helper_set_additional_message(
            &quot;sixel_allocator_malloc: called with n == 0&quot;)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: SIXEL_ALLOCATE_BYTES_MAX"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: nelm"] 
  "30064771076" -> "30064771075"  [ label = "DDG: elsize"] 
  "30064771080" -> "146028888066"  [ label = "DDG: allocator-&gt;fn_calloc(nelm, elsize)"] 
  "115964116992" -> "30064771072"  [ label = "DDG: allocator"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771072" -> "30064771073"  [ label = "DDG: allocator"] 
  "115964116993" -> "30064771076"  [ label = "DDG: nelm"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "115964116994" -> "30064771076"  [ label = "DDG: elsize"] 
  "30064771075" -> "30064771077"  [ label = "DDG: n"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "68719476742" -> "146028888064"  [ label = "DDG: NULL"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771077" -> "30064771079"  [ label = "DDG: n"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "68719476745" -> "146028888065"  [ label = "DDG: NULL"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "30064771076" -> "30064771080"  [ label = "DDG: nelm"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771076" -> "30064771080"  [ label = "DDG: elsize"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "111669149697" -> "68719476742"  [ label = "DDG: "] 
  "111669149697" -> "68719476745"  [ label = "DDG: "] 
  "30064771077" -> "146028888064"  [ label = "CDG: "] 
  "30064771077" -> "30064771079"  [ label = "CDG: "] 
  "30064771077" -> "30064771078"  [ label = "CDG: "] 
  "30064771079" -> "55834574849"  [ label = "CDG: "] 
  "30064771079" -> "146028888066"  [ label = "CDG: "] 
  "30064771079" -> "146028888065"  [ label = "CDG: "] 
  "30064771079" -> "30064771081"  [ label = "CDG: "] 
  "30064771079" -> "30064771080"  [ label = "CDG: "] 
}
"""
)
