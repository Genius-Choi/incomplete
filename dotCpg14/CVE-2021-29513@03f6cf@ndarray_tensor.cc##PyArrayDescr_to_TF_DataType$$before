[33mval[0m [36mres1023[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "PyArrayDescr_to_TF_DataType" {  
"111669149697" [label = <(METHOD,PyArrayDescr_to_TF_DataType)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,PyArray_Descr* descr)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,TF_DataType* out_tf_datatype)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
  PyObject* key;
  PyObject* value;
  Py_ssiz...,{
  PyObject* key;
  PyObject* value;
  Py_ssiz...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,PyObject* key: PyObject*)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,PyObject* value: PyObject*)<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,Py_ssize_t pos: Py_ssize_t)<SUB>5</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,pos = 0)<SUB>5</SUB>> ]
"68719476736" [label = <(IDENTIFIER,pos,pos = 0)<SUB>5</SUB>> ]
"90194313216" [label = <(LITERAL,0,pos = 0)<SUB>5</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (PyDict_Next(descr-&gt;fields, &amp;pos, &amp;key, &amp;value)))<SUB>6</SUB>> ]
"30064771073" [label = <(PyDict_Next,PyDict_Next(descr-&gt;fields, &amp;pos, &amp;key, &amp;value))<SUB>6</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.indirectFieldAccess,descr-&gt;fields)<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,descr,PyDict_Next(descr-&gt;fields, &amp;pos, &amp;key, &amp;value))<SUB>6</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,fields,fields)<SUB>6</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.addressOf,&amp;pos)<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,pos,PyDict_Next(descr-&gt;fields, &amp;pos, &amp;key, &amp;value))<SUB>6</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.addressOf,&amp;key)<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,key,PyDict_Next(descr-&gt;fields, &amp;pos, &amp;key, &amp;value))<SUB>6</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.addressOf,&amp;value)<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,value,PyDict_Next(descr-&gt;fields, &amp;pos, &amp;key, &amp;value))<SUB>6</SUB>> ]
"25769803778" [label = <(BLOCK,{
    // In Python 3, the keys of numpy custom ...,{
    // In Python 3, the keys of numpy custom ...)<SUB>6</SUB>> ]
"94489280515" [label = <(LOCAL,const char* key_string: char*)<SUB>9</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,* key_string =
        PyBytes_Check(key) ? PyB...)<SUB>9</SUB>> ]
"68719476741" [label = <(IDENTIFIER,key_string,* key_string =
        PyBytes_Check(key) ? PyB...)<SUB>9</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.conditional,PyBytes_Check(key) ? PyBytes_AsString(key)
    ...)<SUB>10</SUB>> ]
"30064771080" [label = <(PyBytes_Check,PyBytes_Check(key))<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,key,PyBytes_Check(key))<SUB>10</SUB>> ]
"30064771081" [label = <(PyBytes_AsString,PyBytes_AsString(key))<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,key,PyBytes_AsString(key))<SUB>10</SUB>> ]
"30064771082" [label = <(PyBytes_AsString,PyBytes_AsString(PyUnicode_AsASCIIString(key)))<SUB>11</SUB>> ]
"30064771083" [label = <(PyUnicode_AsASCIIString,PyUnicode_AsASCIIString(key))<SUB>11</SUB>> ]
"68719476744" [label = <(IDENTIFIER,key,PyUnicode_AsASCIIString(key))<SUB>11</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (!key_string))<SUB>12</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.logicalNot,!key_string)<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,key_string,!key_string)<SUB>12</SUB>> ]
"25769803779" [label = <(BLOCK,{
      return errors::Internal(&quot;Corrupt numpy ...,{
      return errors::Internal(&quot;Corrupt numpy ...)<SUB>12</SUB>> ]
"146028888064" [label = <(RETURN,return errors::Internal(&quot;Corrupt numpy type des...,return errors::Internal(&quot;Corrupt numpy type des...)<SUB>13</SUB>> ]
"30064771085" [label = <(Internal,errors::Internal(&quot;Corrupt numpy type descriptor&quot;))<SUB>13</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;Corrupt numpy type descriptor&quot;,errors::Internal(&quot;Corrupt numpy type descriptor&quot;))<SUB>13</SUB>> ]
"94489280516" [label = <(LOCAL,tensorflow.string key: tensorflow.string)<SUB>15</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,key = key_string)<SUB>15</SUB>> ]
"68719476746" [label = <(IDENTIFIER,key,key = key_string)<SUB>15</SUB>> ]
"68719476747" [label = <(IDENTIFIER,key_string,key = key_string)<SUB>15</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (key == &quot;quint8&quot;))<SUB>20</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.equals,key == &quot;quint8&quot;)<SUB>20</SUB>> ]
"68719476748" [label = <(IDENTIFIER,key,key == &quot;quint8&quot;)<SUB>20</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;quint8&quot;,key == &quot;quint8&quot;)<SUB>20</SUB>> ]
"25769803780" [label = <(BLOCK,{
      *out_tf_datatype = TF_QUINT8;
    },{
      *out_tf_datatype = TF_QUINT8;
    })<SUB>20</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assignment,*out_tf_datatype = TF_QUINT8)<SUB>21</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.indirection,*out_tf_datatype)<SUB>21</SUB>> ]
"68719476749" [label = <(IDENTIFIER,out_tf_datatype,*out_tf_datatype = TF_QUINT8)<SUB>21</SUB>> ]
"68719476750" [label = <(IDENTIFIER,TF_QUINT8,*out_tf_datatype = TF_QUINT8)<SUB>21</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>22</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (key == &quot;qint8&quot;))<SUB>22</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.equals,key == &quot;qint8&quot;)<SUB>22</SUB>> ]
"68719476751" [label = <(IDENTIFIER,key,key == &quot;qint8&quot;)<SUB>22</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;qint8&quot;,key == &quot;qint8&quot;)<SUB>22</SUB>> ]
"25769803782" [label = <(BLOCK,{
      *out_tf_datatype = TF_QINT8;
    },{
      *out_tf_datatype = TF_QINT8;
    })<SUB>22</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,*out_tf_datatype = TF_QINT8)<SUB>23</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.indirection,*out_tf_datatype)<SUB>23</SUB>> ]
"68719476752" [label = <(IDENTIFIER,out_tf_datatype,*out_tf_datatype = TF_QINT8)<SUB>23</SUB>> ]
"68719476753" [label = <(IDENTIFIER,TF_QINT8,*out_tf_datatype = TF_QINT8)<SUB>23</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>24</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (key == &quot;qint16&quot;))<SUB>24</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.equals,key == &quot;qint16&quot;)<SUB>24</SUB>> ]
"68719476754" [label = <(IDENTIFIER,key,key == &quot;qint16&quot;)<SUB>24</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;qint16&quot;,key == &quot;qint16&quot;)<SUB>24</SUB>> ]
"25769803784" [label = <(BLOCK,{
      *out_tf_datatype = TF_QINT16;
    },{
      *out_tf_datatype = TF_QINT16;
    })<SUB>24</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,*out_tf_datatype = TF_QINT16)<SUB>25</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.indirection,*out_tf_datatype)<SUB>25</SUB>> ]
"68719476755" [label = <(IDENTIFIER,out_tf_datatype,*out_tf_datatype = TF_QINT16)<SUB>25</SUB>> ]
"68719476756" [label = <(IDENTIFIER,TF_QINT16,*out_tf_datatype = TF_QINT16)<SUB>25</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>26</SUB>> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,IF,if (key == &quot;quint16&quot;))<SUB>26</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.equals,key == &quot;quint16&quot;)<SUB>26</SUB>> ]
"68719476757" [label = <(IDENTIFIER,key,key == &quot;quint16&quot;)<SUB>26</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;quint16&quot;,key == &quot;quint16&quot;)<SUB>26</SUB>> ]
"25769803786" [label = <(BLOCK,{
      *out_tf_datatype = TF_QUINT16;
    },{
      *out_tf_datatype = TF_QUINT16;
    })<SUB>26</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,*out_tf_datatype = TF_QUINT16)<SUB>27</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.indirection,*out_tf_datatype)<SUB>27</SUB>> ]
"68719476758" [label = <(IDENTIFIER,out_tf_datatype,*out_tf_datatype = TF_QUINT16)<SUB>27</SUB>> ]
"68719476759" [label = <(IDENTIFIER,TF_QUINT16,*out_tf_datatype = TF_QUINT16)<SUB>27</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>28</SUB>> ]
"25769803787" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,IF,if (key == &quot;qint32&quot;))<SUB>28</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.equals,key == &quot;qint32&quot;)<SUB>28</SUB>> ]
"68719476760" [label = <(IDENTIFIER,key,key == &quot;qint32&quot;)<SUB>28</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;qint32&quot;,key == &quot;qint32&quot;)<SUB>28</SUB>> ]
"25769803788" [label = <(BLOCK,{
      *out_tf_datatype = TF_QINT32;
    },{
      *out_tf_datatype = TF_QINT32;
    })<SUB>28</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.assignment,*out_tf_datatype = TF_QINT32)<SUB>29</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.indirection,*out_tf_datatype)<SUB>29</SUB>> ]
"68719476761" [label = <(IDENTIFIER,out_tf_datatype,*out_tf_datatype = TF_QINT32)<SUB>29</SUB>> ]
"68719476762" [label = <(IDENTIFIER,TF_QINT32,*out_tf_datatype = TF_QINT32)<SUB>29</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>30</SUB>> ]
"25769803789" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>> ]
"47244640268" [label = <(CONTROL_STRUCTURE,IF,if (key == &quot;resource&quot;))<SUB>30</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.equals,key == &quot;resource&quot;)<SUB>30</SUB>> ]
"68719476763" [label = <(IDENTIFIER,key,key == &quot;resource&quot;)<SUB>30</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;resource&quot;,key == &quot;resource&quot;)<SUB>30</SUB>> ]
"25769803790" [label = <(BLOCK,{
      *out_tf_datatype = TF_RESOURCE;
    },{
      *out_tf_datatype = TF_RESOURCE;
    })<SUB>30</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,*out_tf_datatype = TF_RESOURCE)<SUB>31</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.indirection,*out_tf_datatype)<SUB>31</SUB>> ]
"68719476764" [label = <(IDENTIFIER,out_tf_datatype,*out_tf_datatype = TF_RESOURCE)<SUB>31</SUB>> ]
"68719476765" [label = <(IDENTIFIER,TF_RESOURCE,*out_tf_datatype = TF_RESOURCE)<SUB>31</SUB>> ]
"47244640269" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>32</SUB>> ]
"25769803791" [label = <(BLOCK,{
      return errors::Internal(&quot;Unsupported nu...,{
      return errors::Internal(&quot;Unsupported nu...)<SUB>32</SUB>> ]
"146028888065" [label = <(RETURN,return errors::Internal(&quot;Unsupported numpy data...,return errors::Internal(&quot;Unsupported numpy data...)<SUB>33</SUB>> ]
"30064771105" [label = <(Internal,errors::Internal(&quot;Unsupported numpy data type&quot;))<SUB>33</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;Unsupported numpy data type&quot;,errors::Internal(&quot;Unsupported numpy data type&quot;))<SUB>33</SUB>> ]
"146028888066" [label = <(RETURN,return Status::OK();,return Status::OK();)<SUB>35</SUB>> ]
"30064771106" [label = <(OK,Status::OK())<SUB>35</SUB>> ]
"146028888067" [label = <(RETURN,return errors::Internal(&quot;Unsupported numpy data...,return errors::Internal(&quot;Unsupported numpy data...)<SUB>37</SUB>> ]
"30064771107" [label = <(Internal,errors::Internal(&quot;Unsupported numpy data type&quot;))<SUB>37</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;Unsupported numpy data type&quot;,errors::Internal(&quot;Unsupported numpy data type&quot;))<SUB>37</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888067"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "30064771073"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "30064771075"  [ label = "AST: "] 
  "30064771073" -> "30064771076"  [ label = "AST: "] 
  "30064771073" -> "30064771077"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "55834574848"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "25769803778" -> "94489280515"  [ label = "AST: "] 
  "25769803778" -> "30064771078"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "94489280516"  [ label = "AST: "] 
  "25769803778" -> "30064771086"  [ label = "AST: "] 
  "25769803778" -> "47244640258"  [ label = "AST: "] 
  "25769803778" -> "146028888066"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "30064771081"  [ label = "AST: "] 
  "30064771079" -> "30064771082"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476744"  [ label = "AST: "] 
  "47244640257" -> "30064771084"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771084" -> "68719476745"  [ label = "AST: "] 
  "25769803779" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "90194313217"  [ label = "AST: "] 
  "30064771086" -> "68719476746"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "47244640258" -> "30064771087"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "90194313218"  [ label = "AST: "] 
  "25769803780" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "68719476750"  [ label = "AST: "] 
  "30064771089" -> "68719476749"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "47244640260"  [ label = "AST: "] 
  "47244640260" -> "30064771090"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "47244640260" -> "47244640261"  [ label = "AST: "] 
  "30064771090" -> "68719476751"  [ label = "AST: "] 
  "30064771090" -> "90194313219"  [ label = "AST: "] 
  "25769803782" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "68719476753"  [ label = "AST: "] 
  "30064771092" -> "68719476752"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "47244640262"  [ label = "AST: "] 
  "47244640262" -> "30064771093"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "47244640262" -> "47244640263"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "30064771093" -> "90194313220"  [ label = "AST: "] 
  "25769803784" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "68719476756"  [ label = "AST: "] 
  "30064771095" -> "68719476755"  [ label = "AST: "] 
  "47244640263" -> "25769803785"  [ label = "AST: "] 
  "25769803785" -> "47244640264"  [ label = "AST: "] 
  "47244640264" -> "30064771096"  [ label = "AST: "] 
  "47244640264" -> "25769803786"  [ label = "AST: "] 
  "47244640264" -> "47244640265"  [ label = "AST: "] 
  "30064771096" -> "68719476757"  [ label = "AST: "] 
  "30064771096" -> "90194313221"  [ label = "AST: "] 
  "25769803786" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "68719476759"  [ label = "AST: "] 
  "30064771098" -> "68719476758"  [ label = "AST: "] 
  "47244640265" -> "25769803787"  [ label = "AST: "] 
  "25769803787" -> "47244640266"  [ label = "AST: "] 
  "47244640266" -> "30064771099"  [ label = "AST: "] 
  "47244640266" -> "25769803788"  [ label = "AST: "] 
  "47244640266" -> "47244640267"  [ label = "AST: "] 
  "30064771099" -> "68719476760"  [ label = "AST: "] 
  "30064771099" -> "90194313222"  [ label = "AST: "] 
  "25769803788" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "68719476762"  [ label = "AST: "] 
  "30064771101" -> "68719476761"  [ label = "AST: "] 
  "47244640267" -> "25769803789"  [ label = "AST: "] 
  "25769803789" -> "47244640268"  [ label = "AST: "] 
  "47244640268" -> "30064771102"  [ label = "AST: "] 
  "47244640268" -> "25769803790"  [ label = "AST: "] 
  "47244640268" -> "47244640269"  [ label = "AST: "] 
  "30064771102" -> "68719476763"  [ label = "AST: "] 
  "30064771102" -> "90194313223"  [ label = "AST: "] 
  "25769803790" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "68719476765"  [ label = "AST: "] 
  "30064771104" -> "68719476764"  [ label = "AST: "] 
  "47244640269" -> "25769803791"  [ label = "AST: "] 
  "25769803791" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "90194313224"  [ label = "AST: "] 
  "146028888066" -> "30064771106"  [ label = "AST: "] 
  "146028888067" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "90194313225"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771080"  [ label = "CFG: "] 
  "30064771073" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "146028888067"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771073"  [ label = "CFG: "] 
  "30064771078" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "55834574848" -> "30064771074"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771084" -> "30064771086"  [ label = "CFG: "] 
  "30064771087" -> "30064771089"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771106" -> "146028888066"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771081" -> "30064771079"  [ label = "CFG: "] 
  "30064771082" -> "30064771079"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771088" -> "30064771106"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "146028888064"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771090" -> "30064771092"  [ label = "CFG: "] 
  "30064771090" -> "30064771093"  [ label = "CFG: "] 
  "30064771091" -> "30064771106"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771095"  [ label = "CFG: "] 
  "30064771093" -> "30064771096"  [ label = "CFG: "] 
  "30064771094" -> "30064771106"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771096" -> "30064771098"  [ label = "CFG: "] 
  "30064771096" -> "30064771099"  [ label = "CFG: "] 
  "30064771097" -> "30064771106"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771099" -> "30064771101"  [ label = "CFG: "] 
  "30064771099" -> "30064771102"  [ label = "CFG: "] 
  "30064771100" -> "30064771106"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771102" -> "30064771104"  [ label = "CFG: "] 
  "30064771102" -> "30064771105"  [ label = "CFG: "] 
  "30064771103" -> "30064771106"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771105" -> "146028888065"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: descr"] 
  "115964116993" -> "128849018880"  [ label = "DDG: out_tf_datatype"] 
  "30064771072" -> "128849018880"  [ label = "DDG: pos"] 
  "30064771072" -> "128849018880"  [ label = "DDG: pos = 0"] 
  "30064771073" -> "128849018880"  [ label = "DDG: descr-&gt;fields"] 
  "30064771073" -> "128849018880"  [ label = "DDG: &amp;pos"] 
  "30064771073" -> "128849018880"  [ label = "DDG: &amp;key"] 
  "30064771073" -> "128849018880"  [ label = "DDG: &amp;value"] 
  "30064771073" -> "128849018880"  [ label = "DDG: PyDict_Next(descr-&gt;fields, &amp;pos, &amp;key, &amp;value)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: PyBytes_Check(key)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: key"] 
  "30064771082" -> "128849018880"  [ label = "DDG: PyUnicode_AsASCIIString(key)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: PyBytes_AsString(PyUnicode_AsASCIIString(key))"] 
  "30064771081" -> "128849018880"  [ label = "DDG: key"] 
  "30064771079" -> "128849018880"  [ label = "DDG: PyBytes_AsString(key)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: PyBytes_Check(key) ? PyBytes_AsString(key)
                           : PyBytes_AsString(PyUnicode_AsASCIIString(key))"] 
  "30064771078" -> "128849018880"  [ label = "DDG: * key_string =
        PyBytes_Check(key) ? PyBytes_AsString(key)
                           : PyBytes_AsString(PyUnicode_AsASCIIString(key))"] 
  "30064771084" -> "128849018880"  [ label = "DDG: key_string"] 
  "30064771084" -> "128849018880"  [ label = "DDG: !key_string"] 
  "30064771085" -> "128849018880"  [ label = "DDG: errors::Internal(&quot;Corrupt numpy type descriptor&quot;)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: TF_QINT32"] 
  "30064771088" -> "128849018880"  [ label = "DDG: TF_QUINT8"] 
  "30064771103" -> "128849018880"  [ label = "DDG: TF_RESOURCE"] 
  "30064771091" -> "128849018880"  [ label = "DDG: TF_QINT8"] 
  "30064771094" -> "128849018880"  [ label = "DDG: TF_QINT16"] 
  "30064771097" -> "128849018880"  [ label = "DDG: TF_QUINT16"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771107" -> "146028888067"  [ label = "DDG: errors::Internal(&quot;Unsupported numpy data type&quot;)"] 
  "115964116992" -> "30064771073"  [ label = "DDG: descr"] 
  "30064771072" -> "30064771073"  [ label = "DDG: pos"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771081" -> "30064771078"  [ label = "DDG: key"] 
  "30064771082" -> "30064771078"  [ label = "DDG: PyUnicode_AsASCIIString(key)"] 
  "30064771084" -> "30064771086"  [ label = "DDG: key_string"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771106" -> "146028888066"  [ label = "DDG: Status::OK()"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771081" -> "30064771079"  [ label = "DDG: key"] 
  "30064771082" -> "30064771079"  [ label = "DDG: PyUnicode_AsASCIIString(key)"] 
  "30064771078" -> "30064771084"  [ label = "DDG: key_string"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771085" -> "146028888064"  [ label = "DDG: errors::Internal(&quot;Corrupt numpy type descriptor&quot;)"] 
  "30064771073" -> "30064771087"  [ label = "DDG: &amp;key"] 
  "30064771086" -> "30064771087"  [ label = "DDG: key"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771073" -> "30064771080"  [ label = "DDG: &amp;key"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771073" -> "30064771081"  [ label = "DDG: &amp;key"] 
  "30064771080" -> "30064771081"  [ label = "DDG: key"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: key"] 
  "30064771073" -> "30064771083"  [ label = "DDG: &amp;key"] 
  "30064771080" -> "30064771083"  [ label = "DDG: key"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771073" -> "30064771090"  [ label = "DDG: &amp;key"] 
  "30064771087" -> "30064771090"  [ label = "DDG: key"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771073" -> "30064771093"  [ label = "DDG: &amp;key"] 
  "30064771090" -> "30064771093"  [ label = "DDG: key"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771073" -> "30064771096"  [ label = "DDG: &amp;key"] 
  "30064771093" -> "30064771096"  [ label = "DDG: key"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771073" -> "30064771099"  [ label = "DDG: &amp;key"] 
  "30064771096" -> "30064771099"  [ label = "DDG: key"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771073" -> "30064771102"  [ label = "DDG: &amp;key"] 
  "30064771099" -> "30064771102"  [ label = "DDG: key"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771105" -> "146028888065"  [ label = "DDG: errors::Internal(&quot;Unsupported numpy data type&quot;)"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771073" -> "30064771107"  [ label = "CDG: "] 
  "30064771073" -> "30064771078"  [ label = "CDG: "] 
  "30064771073" -> "30064771079"  [ label = "CDG: "] 
  "30064771073" -> "30064771080"  [ label = "CDG: "] 
  "30064771073" -> "30064771084"  [ label = "CDG: "] 
  "30064771073" -> "146028888067"  [ label = "CDG: "] 
  "30064771084" -> "30064771087"  [ label = "CDG: "] 
  "30064771084" -> "30064771085"  [ label = "CDG: "] 
  "30064771084" -> "30064771086"  [ label = "CDG: "] 
  "30064771084" -> "146028888064"  [ label = "CDG: "] 
  "30064771087" -> "30064771106"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771087" -> "30064771088"  [ label = "CDG: "] 
  "30064771087" -> "146028888066"  [ label = "CDG: "] 
  "30064771080" -> "30064771081"  [ label = "CDG: "] 
  "30064771080" -> "30064771082"  [ label = "CDG: "] 
  "30064771080" -> "30064771083"  [ label = "CDG: "] 
  "30064771090" -> "30064771106"  [ label = "CDG: "] 
  "30064771090" -> "30064771093"  [ label = "CDG: "] 
  "30064771090" -> "30064771091"  [ label = "CDG: "] 
  "30064771090" -> "30064771092"  [ label = "CDG: "] 
  "30064771090" -> "146028888066"  [ label = "CDG: "] 
  "30064771093" -> "30064771106"  [ label = "CDG: "] 
  "30064771093" -> "30064771095"  [ label = "CDG: "] 
  "30064771093" -> "30064771096"  [ label = "CDG: "] 
  "30064771093" -> "30064771094"  [ label = "CDG: "] 
  "30064771093" -> "146028888066"  [ label = "CDG: "] 
  "30064771096" -> "30064771106"  [ label = "CDG: "] 
  "30064771096" -> "30064771097"  [ label = "CDG: "] 
  "30064771096" -> "30064771098"  [ label = "CDG: "] 
  "30064771096" -> "30064771099"  [ label = "CDG: "] 
  "30064771096" -> "146028888066"  [ label = "CDG: "] 
  "30064771099" -> "30064771106"  [ label = "CDG: "] 
  "30064771099" -> "30064771101"  [ label = "CDG: "] 
  "30064771099" -> "30064771102"  [ label = "CDG: "] 
  "30064771099" -> "30064771100"  [ label = "CDG: "] 
  "30064771099" -> "146028888066"  [ label = "CDG: "] 
  "30064771102" -> "30064771105"  [ label = "CDG: "] 
  "30064771102" -> "30064771106"  [ label = "CDG: "] 
  "30064771102" -> "30064771103"  [ label = "CDG: "] 
  "30064771102" -> "30064771104"  [ label = "CDG: "] 
  "30064771102" -> "146028888065"  [ label = "CDG: "] 
  "30064771102" -> "146028888066"  [ label = "CDG: "] 
}
"""
)
