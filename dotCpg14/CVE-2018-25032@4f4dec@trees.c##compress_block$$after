[33mval[0m [36mres1655[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "compress_block" {  
"111669149697" [label = <(METHOD,compress_block)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,deflate_state *s;)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,const ct_data *ltree;)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,const ct_data *dtree;)<SUB>4</SUB>> ]
"25769803777" [label = <(BLOCK,{
    unsigned dist;      /* distance of matche...,{
    unsigned dist;      /* distance of matche...)<SUB>5</SUB>> ]
"94489280512" [label = <(LOCAL,unsigned dist: unsigned)<SUB>6</SUB>> ]
"94489280513" [label = <(LOCAL,int lc: int)<SUB>7</SUB>> ]
"94489280514" [label = <(LOCAL,unsigned sx: unsigned)<SUB>8</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,sx = 0)<SUB>8</SUB>> ]
"68719476736" [label = <(IDENTIFIER,sx,sx = 0)<SUB>8</SUB>> ]
"90194313216" [label = <(LITERAL,0,sx = 0)<SUB>8</SUB>> ]
"94489280515" [label = <(LOCAL,unsigned code: unsigned)<SUB>9</SUB>> ]
"94489280516" [label = <(LOCAL,int extra: int)<SUB>10</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (s-&gt;sym_next != 0))<SUB>12</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.notEquals,s-&gt;sym_next != 0)<SUB>12</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;sym_next)<SUB>12</SUB>> ]
"68719476737" [label = <(IDENTIFIER,s,s-&gt;sym_next != 0)<SUB>12</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,sym_next,sym_next)<SUB>12</SUB>> ]
"90194313217" [label = <(LITERAL,0,s-&gt;sym_next != 0)<SUB>12</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,DO,do {
        dist = s-&gt;sym_buf[sx++] &amp; 0xff;
        dist += (unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff) &lt;&lt; 8;
        lc = s-&gt;sym_buf[sx++];
        if (dist == 0) {
            send_code(s, lc, ltree); /* send a literal byte */
            Tracecv(isgraph(lc), (stderr,&quot; '%c' &quot;, lc));
        } else {
            /* Here, lc is the match length - MIN_MATCH */
            code = _length_code[lc];
            send_code(s, code+LITERALS+1, ltree); /* send the length code */
            extra = extra_lbits[code];
            if (extra != 0) {
                lc -= base_length[code];
                send_bits(s, lc, extra);       /* send the extra length bits */
            }
            dist--; /* dist is now the match distance - 1 */
            code = d_code(dist);
            Assert (code &lt; D_CODES, &quot;bad d_code&quot;);

            send_code(s, code, dtree);       /* send the distance code */
            extra = extra_dbits[code];
            if (extra != 0) {
                dist -= (unsigned)b...)<SUB>12</SUB>> ]
"25769803779" [label = <(BLOCK,{
        dist = s-&gt;sym_buf[sx++] &amp; 0xff;
     ...,{
        dist = s-&gt;sym_buf[sx++] &amp; 0xff;
     ...)<SUB>12</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,dist = s-&gt;sym_buf[sx++] &amp; 0xff)<SUB>13</SUB>> ]
"68719476738" [label = <(IDENTIFIER,dist,dist = s-&gt;sym_buf[sx++] &amp; 0xff)<SUB>13</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.and,s-&gt;sym_buf[sx++] &amp; 0xff)<SUB>13</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.indirectIndexAccess,s-&gt;sym_buf[sx++])<SUB>13</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;sym_buf)<SUB>13</SUB>> ]
"68719476739" [label = <(IDENTIFIER,s,s-&gt;sym_buf[sx++] &amp; 0xff)<SUB>13</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,sym_buf,sym_buf)<SUB>13</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.postIncrement,sx++)<SUB>13</SUB>> ]
"68719476740" [label = <(IDENTIFIER,sx,sx++)<SUB>13</SUB>> ]
"90194313218" [label = <(LITERAL,0xff,s-&gt;sym_buf[sx++] &amp; 0xff)<SUB>13</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignmentPlus,dist += (unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff) &lt;&lt; 8)<SUB>14</SUB>> ]
"68719476741" [label = <(IDENTIFIER,dist,dist += (unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff) &lt;&lt; 8)<SUB>14</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.shiftLeft,(unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff) &lt;&lt; 8)<SUB>14</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.cast,(unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff))<SUB>14</SUB>> ]
"184683593729" [label = <(UNKNOWN,unsigned,unsigned)<SUB>14</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.and,s-&gt;sym_buf[sx++] &amp; 0xff)<SUB>14</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.indirectIndexAccess,s-&gt;sym_buf[sx++])<SUB>14</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;sym_buf)<SUB>14</SUB>> ]
"68719476742" [label = <(IDENTIFIER,s,s-&gt;sym_buf[sx++] &amp; 0xff)<SUB>14</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,sym_buf,sym_buf)<SUB>14</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.postIncrement,sx++)<SUB>14</SUB>> ]
"68719476743" [label = <(IDENTIFIER,sx,sx++)<SUB>14</SUB>> ]
"90194313219" [label = <(LITERAL,0xff,s-&gt;sym_buf[sx++] &amp; 0xff)<SUB>14</SUB>> ]
"90194313220" [label = <(LITERAL,8,(unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff) &lt;&lt; 8)<SUB>14</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,lc = s-&gt;sym_buf[sx++])<SUB>15</SUB>> ]
"68719476744" [label = <(IDENTIFIER,lc,lc = s-&gt;sym_buf[sx++])<SUB>15</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.indirectIndexAccess,s-&gt;sym_buf[sx++])<SUB>15</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;sym_buf)<SUB>15</SUB>> ]
"68719476745" [label = <(IDENTIFIER,s,lc = s-&gt;sym_buf[sx++])<SUB>15</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,sym_buf,sym_buf)<SUB>15</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.postIncrement,sx++)<SUB>15</SUB>> ]
"68719476746" [label = <(IDENTIFIER,sx,sx++)<SUB>15</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (dist == 0))<SUB>16</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.equals,dist == 0)<SUB>16</SUB>> ]
"68719476747" [label = <(IDENTIFIER,dist,dist == 0)<SUB>16</SUB>> ]
"90194313221" [label = <(LITERAL,0,dist == 0)<SUB>16</SUB>> ]
"25769803780" [label = <(BLOCK,{
            send_code(s, lc, ltree); /* send ...,{
            send_code(s, lc, ltree); /* send ...)<SUB>16</SUB>> ]
"30064771092" [label = <(send_code,send_code(s, lc, ltree))<SUB>17</SUB>> ]
"68719476748" [label = <(IDENTIFIER,s,send_code(s, lc, ltree))<SUB>17</SUB>> ]
"68719476749" [label = <(IDENTIFIER,lc,send_code(s, lc, ltree))<SUB>17</SUB>> ]
"68719476750" [label = <(IDENTIFIER,ltree,send_code(s, lc, ltree))<SUB>17</SUB>> ]
"30064771093" [label = <(Tracecv,Tracecv(isgraph(lc), (stderr,&quot; '%c' &quot;, lc)))<SUB>18</SUB>> ]
"30064771094" [label = <(isgraph,isgraph(lc))<SUB>18</SUB>> ]
"68719476751" [label = <(IDENTIFIER,lc,isgraph(lc))<SUB>18</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.bracketedPrimary,(stderr,&quot; '%c' &quot;, lc))<SUB>18</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.expressionList,stderr,&quot; '%c' &quot;, lc)<SUB>18</SUB>> ]
"68719476752" [label = <(IDENTIFIER,stderr,stderr,&quot; '%c' &quot;, lc)<SUB>18</SUB>> ]
"90194313222" [label = <(LITERAL,&quot; '%c' &quot;,stderr,&quot; '%c' &quot;, lc)<SUB>18</SUB>> ]
"68719476753" [label = <(IDENTIFIER,lc,stderr,&quot; '%c' &quot;, lc)<SUB>18</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>19</SUB>> ]
"25769803781" [label = <(BLOCK,{
            /* Here, lc is the match length -...,{
            /* Here, lc is the match length -...)<SUB>19</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,code = _length_code[lc])<SUB>21</SUB>> ]
"68719476754" [label = <(IDENTIFIER,code,code = _length_code[lc])<SUB>21</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.indirectIndexAccess,_length_code[lc])<SUB>21</SUB>> ]
"68719476755" [label = <(IDENTIFIER,_length_code,code = _length_code[lc])<SUB>21</SUB>> ]
"68719476756" [label = <(IDENTIFIER,lc,code = _length_code[lc])<SUB>21</SUB>> ]
"30064771099" [label = <(send_code,send_code(s, code+LITERALS+1, ltree))<SUB>22</SUB>> ]
"68719476757" [label = <(IDENTIFIER,s,send_code(s, code+LITERALS+1, ltree))<SUB>22</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.addition,code+LITERALS+1)<SUB>22</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.addition,code+LITERALS)<SUB>22</SUB>> ]
"68719476758" [label = <(IDENTIFIER,code,code+LITERALS)<SUB>22</SUB>> ]
"68719476759" [label = <(IDENTIFIER,LITERALS,code+LITERALS)<SUB>22</SUB>> ]
"90194313223" [label = <(LITERAL,1,code+LITERALS+1)<SUB>22</SUB>> ]
"68719476760" [label = <(IDENTIFIER,ltree,send_code(s, code+LITERALS+1, ltree))<SUB>22</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,extra = extra_lbits[code])<SUB>23</SUB>> ]
"68719476761" [label = <(IDENTIFIER,extra,extra = extra_lbits[code])<SUB>23</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.indirectIndexAccess,extra_lbits[code])<SUB>23</SUB>> ]
"68719476762" [label = <(IDENTIFIER,extra_lbits,extra = extra_lbits[code])<SUB>23</SUB>> ]
"68719476763" [label = <(IDENTIFIER,code,extra = extra_lbits[code])<SUB>23</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (extra != 0))<SUB>24</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.notEquals,extra != 0)<SUB>24</SUB>> ]
"68719476764" [label = <(IDENTIFIER,extra,extra != 0)<SUB>24</SUB>> ]
"90194313224" [label = <(LITERAL,0,extra != 0)<SUB>24</SUB>> ]
"25769803782" [label = <(BLOCK,{
                lc -= base_length[code];
    ...,{
                lc -= base_length[code];
    ...)<SUB>24</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.assignmentMinus,lc -= base_length[code])<SUB>25</SUB>> ]
"68719476765" [label = <(IDENTIFIER,lc,lc -= base_length[code])<SUB>25</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.indirectIndexAccess,base_length[code])<SUB>25</SUB>> ]
"68719476766" [label = <(IDENTIFIER,base_length,lc -= base_length[code])<SUB>25</SUB>> ]
"68719476767" [label = <(IDENTIFIER,code,lc -= base_length[code])<SUB>25</SUB>> ]
"30064771107" [label = <(send_bits,send_bits(s, lc, extra))<SUB>26</SUB>> ]
"68719476768" [label = <(IDENTIFIER,s,send_bits(s, lc, extra))<SUB>26</SUB>> ]
"68719476769" [label = <(IDENTIFIER,lc,send_bits(s, lc, extra))<SUB>26</SUB>> ]
"68719476770" [label = <(IDENTIFIER,extra,send_bits(s, lc, extra))<SUB>26</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.postDecrement,dist--)<SUB>28</SUB>> ]
"68719476771" [label = <(IDENTIFIER,dist,dist--)<SUB>28</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.assignment,code = d_code(dist))<SUB>29</SUB>> ]
"68719476772" [label = <(IDENTIFIER,code,code = d_code(dist))<SUB>29</SUB>> ]
"30064771110" [label = <(d_code,d_code(dist))<SUB>29</SUB>> ]
"68719476773" [label = <(IDENTIFIER,dist,d_code(dist))<SUB>29</SUB>> ]
"30064771111" [label = <(Assert,Assert (code &lt; D_CODES, &quot;bad d_code&quot;))<SUB>30</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.lessThan,code &lt; D_CODES)<SUB>30</SUB>> ]
"68719476774" [label = <(IDENTIFIER,code,code &lt; D_CODES)<SUB>30</SUB>> ]
"68719476775" [label = <(IDENTIFIER,D_CODES,code &lt; D_CODES)<SUB>30</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;bad d_code&quot;,Assert (code &lt; D_CODES, &quot;bad d_code&quot;))<SUB>30</SUB>> ]
"30064771113" [label = <(send_code,send_code(s, code, dtree))<SUB>32</SUB>> ]
"68719476776" [label = <(IDENTIFIER,s,send_code(s, code, dtree))<SUB>32</SUB>> ]
"68719476777" [label = <(IDENTIFIER,code,send_code(s, code, dtree))<SUB>32</SUB>> ]
"68719476778" [label = <(IDENTIFIER,dtree,send_code(s, code, dtree))<SUB>32</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.assignment,extra = extra_dbits[code])<SUB>33</SUB>> ]
"68719476779" [label = <(IDENTIFIER,extra,extra = extra_dbits[code])<SUB>33</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.indirectIndexAccess,extra_dbits[code])<SUB>33</SUB>> ]
"68719476780" [label = <(IDENTIFIER,extra_dbits,extra = extra_dbits[code])<SUB>33</SUB>> ]
"68719476781" [label = <(IDENTIFIER,code,extra = extra_dbits[code])<SUB>33</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (extra != 0))<SUB>34</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.notEquals,extra != 0)<SUB>34</SUB>> ]
"68719476782" [label = <(IDENTIFIER,extra,extra != 0)<SUB>34</SUB>> ]
"90194313226" [label = <(LITERAL,0,extra != 0)<SUB>34</SUB>> ]
"25769803783" [label = <(BLOCK,{
                dist -= (unsigned)base_dist[c...,{
                dist -= (unsigned)base_dist[c...)<SUB>34</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignmentMinus,dist -= (unsigned)base_dist[code])<SUB>35</SUB>> ]
"68719476783" [label = <(IDENTIFIER,dist,dist -= (unsigned)base_dist[code])<SUB>35</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.cast,(unsigned)base_dist[code])<SUB>35</SUB>> ]
"184683593730" [label = <(UNKNOWN,unsigned,unsigned)<SUB>35</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.indirectIndexAccess,base_dist[code])<SUB>35</SUB>> ]
"68719476784" [label = <(IDENTIFIER,base_dist,(unsigned)base_dist[code])<SUB>35</SUB>> ]
"68719476785" [label = <(IDENTIFIER,code,(unsigned)base_dist[code])<SUB>35</SUB>> ]
"30064771120" [label = <(send_bits,send_bits(s, dist, extra))<SUB>36</SUB>> ]
"68719476786" [label = <(IDENTIFIER,s,send_bits(s, dist, extra))<SUB>36</SUB>> ]
"68719476787" [label = <(IDENTIFIER,dist,send_bits(s, dist, extra))<SUB>36</SUB>> ]
"68719476788" [label = <(IDENTIFIER,extra,send_bits(s, dist, extra))<SUB>36</SUB>> ]
"30064771121" [label = <(Assert,Assert(s-&gt;pending &lt; s-&gt;lit_bufsize + sx, &quot;pendi...)<SUB>41</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.lessThan,s-&gt;pending &lt; s-&gt;lit_bufsize + sx)<SUB>41</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;pending)<SUB>41</SUB>> ]
"68719476789" [label = <(IDENTIFIER,s,s-&gt;pending &lt; s-&gt;lit_bufsize + sx)<SUB>41</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,pending,pending)<SUB>41</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.addition,s-&gt;lit_bufsize + sx)<SUB>41</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;lit_bufsize)<SUB>41</SUB>> ]
"68719476790" [label = <(IDENTIFIER,s,s-&gt;lit_bufsize + sx)<SUB>41</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,lit_bufsize,lit_bufsize)<SUB>41</SUB>> ]
"68719476791" [label = <(IDENTIFIER,sx,s-&gt;lit_bufsize + sx)<SUB>41</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;pendingBuf overflow&quot;,Assert(s-&gt;pending &lt; s-&gt;lit_bufsize + sx, &quot;pendi...)<SUB>41</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.lessThan,sx &lt; s-&gt;sym_next)<SUB>43</SUB>> ]
"68719476792" [label = <(IDENTIFIER,sx,sx &lt; s-&gt;sym_next)<SUB>43</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;sym_next)<SUB>43</SUB>> ]
"68719476793" [label = <(IDENTIFIER,s,sx &lt; s-&gt;sym_next)<SUB>43</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,sym_next,sym_next)<SUB>43</SUB>> ]
"30064771128" [label = <(send_code,send_code(s, END_BLOCK, ltree))<SUB>45</SUB>> ]
"68719476794" [label = <(IDENTIFIER,s,send_code(s, END_BLOCK, ltree))<SUB>45</SUB>> ]
"68719476795" [label = <(IDENTIFIER,END_BLOCK,send_code(s, END_BLOCK, ltree))<SUB>45</SUB>> ]
"68719476796" [label = <(IDENTIFIER,ltree,send_code(s, END_BLOCK, ltree))<SUB>45</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771128"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "30064771073"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "55834574848"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "30064771126"  [ label = "AST: "] 
  "25769803779" -> "30064771075"  [ label = "AST: "] 
  "25769803779" -> "30064771080"  [ label = "AST: "] 
  "25769803779" -> "30064771087"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "25769803779" -> "30064771121"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "90194313218"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "55834574849"  [ label = "AST: "] 
  "30064771079" -> "68719476740"  [ label = "AST: "] 
  "30064771080" -> "68719476741"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "90194313220"  [ label = "AST: "] 
  "30064771082" -> "184683593729"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "90194313219"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "68719476742"  [ label = "AST: "] 
  "30064771085" -> "55834574850"  [ label = "AST: "] 
  "30064771086" -> "68719476743"  [ label = "AST: "] 
  "30064771087" -> "68719476744"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "68719476745"  [ label = "AST: "] 
  "30064771089" -> "55834574851"  [ label = "AST: "] 
  "30064771090" -> "68719476746"  [ label = "AST: "] 
  "47244640258" -> "30064771091"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "30064771091" -> "68719476747"  [ label = "AST: "] 
  "30064771091" -> "90194313221"  [ label = "AST: "] 
  "25769803780" -> "30064771092"  [ label = "AST: "] 
  "25769803780" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "68719476748"  [ label = "AST: "] 
  "30064771092" -> "68719476749"  [ label = "AST: "] 
  "30064771092" -> "68719476750"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "68719476751"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476752"  [ label = "AST: "] 
  "30064771096" -> "90194313222"  [ label = "AST: "] 
  "30064771096" -> "68719476753"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771097"  [ label = "AST: "] 
  "25769803781" -> "30064771099"  [ label = "AST: "] 
  "25769803781" -> "30064771102"  [ label = "AST: "] 
  "25769803781" -> "47244640260"  [ label = "AST: "] 
  "25769803781" -> "30064771108"  [ label = "AST: "] 
  "25769803781" -> "30064771109"  [ label = "AST: "] 
  "25769803781" -> "30064771111"  [ label = "AST: "] 
  "25769803781" -> "30064771113"  [ label = "AST: "] 
  "25769803781" -> "30064771114"  [ label = "AST: "] 
  "25769803781" -> "47244640261"  [ label = "AST: "] 
  "30064771097" -> "68719476754"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476755"  [ label = "AST: "] 
  "30064771098" -> "68719476756"  [ label = "AST: "] 
  "30064771099" -> "68719476757"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "68719476760"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "90194313223"  [ label = "AST: "] 
  "30064771101" -> "68719476758"  [ label = "AST: "] 
  "30064771101" -> "68719476759"  [ label = "AST: "] 
  "30064771102" -> "68719476761"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476762"  [ label = "AST: "] 
  "30064771103" -> "68719476763"  [ label = "AST: "] 
  "47244640260" -> "30064771104"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771104" -> "68719476764"  [ label = "AST: "] 
  "30064771104" -> "90194313224"  [ label = "AST: "] 
  "25769803782" -> "30064771105"  [ label = "AST: "] 
  "25769803782" -> "30064771107"  [ label = "AST: "] 
  "30064771105" -> "68719476765"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "68719476766"  [ label = "AST: "] 
  "30064771106" -> "68719476767"  [ label = "AST: "] 
  "30064771107" -> "68719476768"  [ label = "AST: "] 
  "30064771107" -> "68719476769"  [ label = "AST: "] 
  "30064771107" -> "68719476770"  [ label = "AST: "] 
  "30064771108" -> "68719476771"  [ label = "AST: "] 
  "30064771109" -> "68719476772"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "68719476773"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "90194313225"  [ label = "AST: "] 
  "30064771112" -> "68719476774"  [ label = "AST: "] 
  "30064771112" -> "68719476775"  [ label = "AST: "] 
  "30064771113" -> "68719476776"  [ label = "AST: "] 
  "30064771113" -> "68719476777"  [ label = "AST: "] 
  "30064771113" -> "68719476778"  [ label = "AST: "] 
  "30064771114" -> "68719476779"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771115" -> "68719476780"  [ label = "AST: "] 
  "30064771115" -> "68719476781"  [ label = "AST: "] 
  "47244640261" -> "30064771116"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "30064771116" -> "68719476782"  [ label = "AST: "] 
  "30064771116" -> "90194313226"  [ label = "AST: "] 
  "25769803783" -> "30064771117"  [ label = "AST: "] 
  "25769803783" -> "30064771120"  [ label = "AST: "] 
  "30064771117" -> "68719476783"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771118" -> "184683593730"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "68719476784"  [ label = "AST: "] 
  "30064771119" -> "68719476785"  [ label = "AST: "] 
  "30064771120" -> "68719476786"  [ label = "AST: "] 
  "30064771120" -> "68719476787"  [ label = "AST: "] 
  "30064771120" -> "68719476788"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "90194313227"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771122" -> "30064771124"  [ label = "AST: "] 
  "30064771123" -> "68719476789"  [ label = "AST: "] 
  "30064771123" -> "55834574852"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "68719476791"  [ label = "AST: "] 
  "30064771125" -> "68719476790"  [ label = "AST: "] 
  "30064771125" -> "55834574853"  [ label = "AST: "] 
  "30064771126" -> "68719476792"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "68719476793"  [ label = "AST: "] 
  "30064771127" -> "55834574854"  [ label = "AST: "] 
  "30064771128" -> "68719476794"  [ label = "AST: "] 
  "30064771128" -> "68719476795"  [ label = "AST: "] 
  "30064771128" -> "68719476796"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "CFG: "] 
  "30064771128" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "55834574849"  [ label = "CFG: "] 
  "30064771073" -> "30064771128"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "55834574848" -> "30064771074"  [ label = "CFG: "] 
  "30064771126" -> "55834574849"  [ label = "CFG: "] 
  "30064771126" -> "30064771128"  [ label = "CFG: "] 
  "30064771075" -> "184683593729"  [ label = "CFG: "] 
  "30064771080" -> "55834574851"  [ label = "CFG: "] 
  "30064771087" -> "30064771091"  [ label = "CFG: "] 
  "30064771121" -> "55834574854"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771091" -> "30064771098"  [ label = "CFG: "] 
  "30064771122" -> "30064771121"  [ label = "CFG: "] 
  "55834574854" -> "30064771127"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771094"  [ label = "CFG: "] 
  "30064771093" -> "55834574852"  [ label = "CFG: "] 
  "30064771123" -> "55834574853"  [ label = "CFG: "] 
  "30064771124" -> "30064771122"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771077"  [ label = "CFG: "] 
  "184683593729" -> "55834574850"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "55834574851" -> "30064771089"  [ label = "CFG: "] 
  "30064771094" -> "30064771096"  [ label = "CFG: "] 
  "30064771095" -> "30064771093"  [ label = "CFG: "] 
  "30064771097" -> "30064771101"  [ label = "CFG: "] 
  "30064771099" -> "30064771103"  [ label = "CFG: "] 
  "30064771102" -> "30064771104"  [ label = "CFG: "] 
  "30064771108" -> "30064771110"  [ label = "CFG: "] 
  "30064771109" -> "30064771112"  [ label = "CFG: "] 
  "30064771111" -> "30064771113"  [ label = "CFG: "] 
  "30064771113" -> "30064771115"  [ label = "CFG: "] 
  "30064771114" -> "30064771116"  [ label = "CFG: "] 
  "55834574852" -> "30064771123"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "55834574849" -> "30064771078"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771104" -> "30064771106"  [ label = "CFG: "] 
  "30064771104" -> "30064771108"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771116" -> "184683593730"  [ label = "CFG: "] 
  "30064771116" -> "55834574852"  [ label = "CFG: "] 
  "55834574853" -> "30064771125"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771084"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771105" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "30064771117" -> "30064771120"  [ label = "CFG: "] 
  "30064771120" -> "55834574852"  [ label = "CFG: "] 
  "55834574850" -> "30064771085"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "30064771118" -> "30064771117"  [ label = "CFG: "] 
  "184683593730" -> "30064771119"  [ label = "CFG: "] 
  "30064771119" -> "30064771118"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "115964116994" -> "128849018880"  [ label = "DDG: dtree"] 
  "30064771072" -> "128849018880"  [ label = "DDG: sx"] 
  "30064771072" -> "128849018880"  [ label = "DDG: sx = 0"] 
  "30064771073" -> "128849018880"  [ label = "DDG: s-&gt;sym_next"] 
  "30064771073" -> "128849018880"  [ label = "DDG: s-&gt;sym_next != 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: dist = s-&gt;sym_buf[sx++] &amp; 0xff"] 
  "30064771082" -> "128849018880"  [ label = "DDG: s-&gt;sym_buf[sx++] &amp; 0xff"] 
  "30064771081" -> "128849018880"  [ label = "DDG: (unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: (unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff) &lt;&lt; 8"] 
  "30064771080" -> "128849018880"  [ label = "DDG: dist += (unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff) &lt;&lt; 8"] 
  "30064771087" -> "128849018880"  [ label = "DDG: lc"] 
  "30064771087" -> "128849018880"  [ label = "DDG: s-&gt;sym_buf[sx++]"] 
  "30064771087" -> "128849018880"  [ label = "DDG: lc = s-&gt;sym_buf[sx++]"] 
  "30064771091" -> "128849018880"  [ label = "DDG: dist"] 
  "30064771091" -> "128849018880"  [ label = "DDG: dist == 0"] 
  "30064771097" -> "128849018880"  [ label = "DDG: _length_code[lc]"] 
  "30064771097" -> "128849018880"  [ label = "DDG: code = _length_code[lc]"] 
  "30064771100" -> "128849018880"  [ label = "DDG: code+LITERALS"] 
  "30064771099" -> "128849018880"  [ label = "DDG: code+LITERALS+1"] 
  "30064771099" -> "128849018880"  [ label = "DDG: send_code(s, code+LITERALS+1, ltree)"] 
  "30064771102" -> "128849018880"  [ label = "DDG: extra_lbits[code]"] 
  "30064771102" -> "128849018880"  [ label = "DDG: extra = extra_lbits[code]"] 
  "30064771105" -> "128849018880"  [ label = "DDG: base_length[code]"] 
  "30064771105" -> "128849018880"  [ label = "DDG: lc -= base_length[code]"] 
  "30064771107" -> "128849018880"  [ label = "DDG: lc"] 
  "30064771107" -> "128849018880"  [ label = "DDG: send_bits(s, lc, extra)"] 
  "30064771108" -> "128849018880"  [ label = "DDG: dist--"] 
  "30064771110" -> "128849018880"  [ label = "DDG: dist"] 
  "30064771109" -> "128849018880"  [ label = "DDG: d_code(dist)"] 
  "30064771109" -> "128849018880"  [ label = "DDG: code = d_code(dist)"] 
  "30064771111" -> "128849018880"  [ label = "DDG: code &lt; D_CODES"] 
  "30064771111" -> "128849018880"  [ label = "DDG: Assert (code &lt; D_CODES, &quot;bad d_code&quot;)"] 
  "30064771113" -> "128849018880"  [ label = "DDG: code"] 
  "30064771113" -> "128849018880"  [ label = "DDG: dtree"] 
  "30064771113" -> "128849018880"  [ label = "DDG: send_code(s, code, dtree)"] 
  "30064771114" -> "128849018880"  [ label = "DDG: extra_dbits[code]"] 
  "30064771114" -> "128849018880"  [ label = "DDG: extra = extra_dbits[code]"] 
  "30064771116" -> "128849018880"  [ label = "DDG: extra"] 
  "30064771116" -> "128849018880"  [ label = "DDG: extra != 0"] 
  "30064771118" -> "128849018880"  [ label = "DDG: base_dist[code]"] 
  "30064771117" -> "128849018880"  [ label = "DDG: (unsigned)base_dist[code]"] 
  "30064771117" -> "128849018880"  [ label = "DDG: dist -= (unsigned)base_dist[code]"] 
  "30064771120" -> "128849018880"  [ label = "DDG: dist"] 
  "30064771120" -> "128849018880"  [ label = "DDG: extra"] 
  "30064771120" -> "128849018880"  [ label = "DDG: send_bits(s, dist, extra)"] 
  "30064771092" -> "128849018880"  [ label = "DDG: send_code(s, lc, ltree)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: isgraph(lc)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: lc"] 
  "30064771095" -> "128849018880"  [ label = "DDG: stderr,&quot; '%c' &quot;, lc"] 
  "30064771093" -> "128849018880"  [ label = "DDG: (stderr,&quot; '%c' &quot;, lc)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: Tracecv(isgraph(lc), (stderr,&quot; '%c' &quot;, lc))"] 
  "30064771122" -> "128849018880"  [ label = "DDG: s-&gt;pending"] 
  "30064771124" -> "128849018880"  [ label = "DDG: s-&gt;lit_bufsize"] 
  "30064771122" -> "128849018880"  [ label = "DDG: s-&gt;lit_bufsize + sx"] 
  "30064771121" -> "128849018880"  [ label = "DDG: s-&gt;pending &lt; s-&gt;lit_bufsize + sx"] 
  "30064771121" -> "128849018880"  [ label = "DDG: Assert(s-&gt;pending &lt; s-&gt;lit_bufsize + sx, &quot;pendingBuf overflow&quot;)"] 
  "30064771126" -> "128849018880"  [ label = "DDG: sx"] 
  "30064771126" -> "128849018880"  [ label = "DDG: s-&gt;sym_next"] 
  "30064771126" -> "128849018880"  [ label = "DDG: sx &lt; s-&gt;sym_next"] 
  "30064771128" -> "128849018880"  [ label = "DDG: s"] 
  "30064771128" -> "128849018880"  [ label = "DDG: ltree"] 
  "30064771128" -> "128849018880"  [ label = "DDG: send_code(s, END_BLOCK, ltree)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: stderr"] 
  "30064771128" -> "128849018880"  [ label = "DDG: END_BLOCK"] 
  "30064771101" -> "128849018880"  [ label = "DDG: LITERALS"] 
  "30064771112" -> "128849018880"  [ label = "DDG: D_CODES"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "115964116992" -> "30064771128"  [ label = "DDG: s"] 
  "30064771073" -> "30064771128"  [ label = "DDG: s-&gt;sym_next"] 
  "30064771113" -> "30064771128"  [ label = "DDG: s"] 
  "30064771120" -> "30064771128"  [ label = "DDG: s"] 
  "30064771092" -> "30064771128"  [ label = "DDG: s"] 
  "30064771122" -> "30064771128"  [ label = "DDG: s-&gt;pending"] 
  "30064771126" -> "30064771128"  [ label = "DDG: s-&gt;sym_next"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "115964116993" -> "30064771128"  [ label = "DDG: ltree"] 
  "30064771099" -> "30064771128"  [ label = "DDG: ltree"] 
  "30064771092" -> "30064771128"  [ label = "DDG: ltree"] 
  "115964116992" -> "30064771073"  [ label = "DDG: s"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: s-&gt;sym_buf[sx++]"] 
  "30064771076" -> "30064771075"  [ label = "DDG: 0xff"] 
  "30064771081" -> "30064771080"  [ label = "DDG: (unsigned)(s-&gt;sym_buf[sx++] &amp; 0xff)"] 
  "30064771081" -> "30064771080"  [ label = "DDG: 8"] 
  "30064771083" -> "30064771087"  [ label = "DDG: s-&gt;sym_buf[sx++]"] 
  "111669149697" -> "30064771126"  [ label = "DDG: "] 
  "30064771090" -> "30064771126"  [ label = "DDG: sx"] 
  "30064771073" -> "30064771126"  [ label = "DDG: s-&gt;sym_next"] 
  "30064771113" -> "30064771126"  [ label = "DDG: s"] 
  "30064771120" -> "30064771126"  [ label = "DDG: s"] 
  "30064771092" -> "30064771126"  [ label = "DDG: s"] 
  "30064771075" -> "30064771080"  [ label = "DDG: dist"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771122" -> "30064771121"  [ label = "DDG: s-&gt;pending"] 
  "30064771122" -> "30064771121"  [ label = "DDG: s-&gt;lit_bufsize + sx"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771083" -> "30064771076"  [ label = "DDG: s-&gt;sym_buf[sx++]"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771083" -> "30064771081"  [ label = "DDG: s-&gt;sym_buf[sx++]"] 
  "30064771083" -> "30064771081"  [ label = "DDG: 0xff"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771080" -> "30064771091"  [ label = "DDG: dist"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771113" -> "30064771122"  [ label = "DDG: s"] 
  "30064771120" -> "30064771122"  [ label = "DDG: s"] 
  "30064771092" -> "30064771122"  [ label = "DDG: s"] 
  "30064771090" -> "30064771122"  [ label = "DDG: sx"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: s-&gt;sym_buf[sx++]"] 
  "30064771083" -> "30064771082"  [ label = "DDG: 0xff"] 
  "30064771086" -> "30064771090"  [ label = "DDG: sx"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "115964116992" -> "30064771092"  [ label = "DDG: s"] 
  "30064771073" -> "30064771092"  [ label = "DDG: s-&gt;sym_next"] 
  "30064771113" -> "30064771092"  [ label = "DDG: s"] 
  "30064771120" -> "30064771092"  [ label = "DDG: s"] 
  "30064771122" -> "30064771092"  [ label = "DDG: s-&gt;pending"] 
  "30064771126" -> "30064771092"  [ label = "DDG: s-&gt;sym_next"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771087" -> "30064771092"  [ label = "DDG: lc"] 
  "115964116993" -> "30064771092"  [ label = "DDG: ltree"] 
  "30064771099" -> "30064771092"  [ label = "DDG: ltree"] 
  "30064771094" -> "30064771093"  [ label = "DDG: lc"] 
  "30064771095" -> "30064771093"  [ label = "DDG: stderr,&quot; '%c' &quot;, lc"] 
  "30064771110" -> "30064771109"  [ label = "DDG: dist"] 
  "30064771113" -> "30064771124"  [ label = "DDG: s"] 
  "30064771120" -> "30064771124"  [ label = "DDG: s"] 
  "30064771092" -> "30064771124"  [ label = "DDG: s"] 
  "30064771090" -> "30064771124"  [ label = "DDG: sx"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771072" -> "30064771079"  [ label = "DDG: sx"] 
  "30064771126" -> "30064771079"  [ label = "DDG: sx"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771076" -> "30064771083"  [ label = "DDG: s-&gt;sym_buf[sx++]"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771092" -> "30064771094"  [ label = "DDG: lc"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771096" -> "30064771095"  [ label = "DDG: stderr"] 
  "30064771096" -> "30064771095"  [ label = "DDG: &quot; '%c' &quot;"] 
  "30064771096" -> "30064771095"  [ label = "DDG: lc"] 
  "115964116992" -> "30064771099"  [ label = "DDG: s"] 
  "30064771073" -> "30064771099"  [ label = "DDG: s-&gt;sym_next"] 
  "30064771113" -> "30064771099"  [ label = "DDG: s"] 
  "30064771120" -> "30064771099"  [ label = "DDG: s"] 
  "30064771092" -> "30064771099"  [ label = "DDG: s"] 
  "30064771122" -> "30064771099"  [ label = "DDG: s-&gt;pending"] 
  "30064771126" -> "30064771099"  [ label = "DDG: s-&gt;sym_next"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771097" -> "30064771099"  [ label = "DDG: code"] 
  "115964116993" -> "30064771099"  [ label = "DDG: ltree"] 
  "30064771092" -> "30064771099"  [ label = "DDG: ltree"] 
  "30064771091" -> "30064771108"  [ label = "DDG: dist"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771112" -> "30064771111"  [ label = "DDG: code"] 
  "30064771112" -> "30064771111"  [ label = "DDG: D_CODES"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771073" -> "30064771113"  [ label = "DDG: s-&gt;sym_next"] 
  "30064771099" -> "30064771113"  [ label = "DDG: s"] 
  "30064771107" -> "30064771113"  [ label = "DDG: s"] 
  "30064771122" -> "30064771113"  [ label = "DDG: s-&gt;pending"] 
  "30064771126" -> "30064771113"  [ label = "DDG: s-&gt;sym_next"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771120" -> "30064771113"  [ label = "DDG: s"] 
  "30064771092" -> "30064771113"  [ label = "DDG: s"] 
  "30064771112" -> "30064771113"  [ label = "DDG: code"] 
  "115964116994" -> "30064771113"  [ label = "DDG: dtree"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771094" -> "30064771096"  [ label = "DDG: lc"] 
  "30064771097" -> "30064771100"  [ label = "DDG: code"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771102" -> "30064771104"  [ label = "DDG: extra"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771108" -> "30064771110"  [ label = "DDG: dist"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771109" -> "30064771112"  [ label = "DDG: code"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771114" -> "30064771116"  [ label = "DDG: extra"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771079" -> "30064771086"  [ label = "DDG: sx"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771097" -> "30064771101"  [ label = "DDG: code"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771087" -> "30064771105"  [ label = "DDG: lc"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771073" -> "30064771107"  [ label = "DDG: s-&gt;sym_next"] 
  "30064771099" -> "30064771107"  [ label = "DDG: s"] 
  "30064771122" -> "30064771107"  [ label = "DDG: s-&gt;pending"] 
  "30064771126" -> "30064771107"  [ label = "DDG: s-&gt;sym_next"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771113" -> "30064771107"  [ label = "DDG: s"] 
  "30064771120" -> "30064771107"  [ label = "DDG: s"] 
  "30064771092" -> "30064771107"  [ label = "DDG: s"] 
  "30064771105" -> "30064771107"  [ label = "DDG: lc"] 
  "30064771104" -> "30064771107"  [ label = "DDG: extra"] 
  "30064771110" -> "30064771117"  [ label = "DDG: dist"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771073" -> "30064771120"  [ label = "DDG: s-&gt;sym_next"] 
  "30064771113" -> "30064771120"  [ label = "DDG: s"] 
  "30064771122" -> "30064771120"  [ label = "DDG: s-&gt;pending"] 
  "30064771126" -> "30064771120"  [ label = "DDG: s-&gt;sym_next"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771092" -> "30064771120"  [ label = "DDG: s"] 
  "30064771117" -> "30064771120"  [ label = "DDG: dist"] 
  "30064771116" -> "30064771120"  [ label = "DDG: extra"] 
  "30064771073" -> "55834574854"  [ label = "CDG: "] 
  "30064771073" -> "55834574853"  [ label = "CDG: "] 
  "30064771073" -> "55834574852"  [ label = "CDG: "] 
  "30064771073" -> "55834574851"  [ label = "CDG: "] 
  "30064771073" -> "55834574850"  [ label = "CDG: "] 
  "30064771073" -> "55834574849"  [ label = "CDG: "] 
  "30064771073" -> "30064771127"  [ label = "CDG: "] 
  "30064771073" -> "30064771126"  [ label = "CDG: "] 
  "30064771073" -> "30064771125"  [ label = "CDG: "] 
  "30064771073" -> "30064771124"  [ label = "CDG: "] 
  "30064771073" -> "30064771123"  [ label = "CDG: "] 
  "30064771073" -> "30064771122"  [ label = "CDG: "] 
  "30064771073" -> "30064771121"  [ label = "CDG: "] 
  "30064771073" -> "184683593729"  [ label = "CDG: "] 
  "30064771073" -> "30064771087"  [ label = "CDG: "] 
  "30064771073" -> "30064771086"  [ label = "CDG: "] 
  "30064771073" -> "30064771085"  [ label = "CDG: "] 
  "30064771073" -> "30064771084"  [ label = "CDG: "] 
  "30064771073" -> "30064771083"  [ label = "CDG: "] 
  "30064771073" -> "30064771082"  [ label = "CDG: "] 
  "30064771073" -> "30064771081"  [ label = "CDG: "] 
  "30064771073" -> "30064771080"  [ label = "CDG: "] 
  "30064771073" -> "30064771079"  [ label = "CDG: "] 
  "30064771073" -> "30064771078"  [ label = "CDG: "] 
  "30064771073" -> "30064771077"  [ label = "CDG: "] 
  "30064771073" -> "30064771076"  [ label = "CDG: "] 
  "30064771073" -> "30064771075"  [ label = "CDG: "] 
  "30064771073" -> "30064771091"  [ label = "CDG: "] 
  "30064771073" -> "30064771090"  [ label = "CDG: "] 
  "30064771073" -> "30064771089"  [ label = "CDG: "] 
  "30064771073" -> "30064771088"  [ label = "CDG: "] 
  "30064771126" -> "55834574854"  [ label = "CDG: "] 
  "30064771126" -> "55834574853"  [ label = "CDG: "] 
  "30064771126" -> "55834574852"  [ label = "CDG: "] 
  "30064771126" -> "55834574851"  [ label = "CDG: "] 
  "30064771126" -> "55834574850"  [ label = "CDG: "] 
  "30064771126" -> "55834574849"  [ label = "CDG: "] 
  "30064771126" -> "30064771127"  [ label = "CDG: "] 
  "30064771126" -> "30064771126"  [ label = "CDG: "] 
  "30064771126" -> "30064771125"  [ label = "CDG: "] 
  "30064771126" -> "30064771124"  [ label = "CDG: "] 
  "30064771126" -> "30064771123"  [ label = "CDG: "] 
  "30064771126" -> "30064771122"  [ label = "CDG: "] 
  "30064771126" -> "30064771121"  [ label = "CDG: "] 
  "30064771126" -> "184683593729"  [ label = "CDG: "] 
  "30064771126" -> "30064771087"  [ label = "CDG: "] 
  "30064771126" -> "30064771086"  [ label = "CDG: "] 
  "30064771126" -> "30064771085"  [ label = "CDG: "] 
  "30064771126" -> "30064771084"  [ label = "CDG: "] 
  "30064771126" -> "30064771083"  [ label = "CDG: "] 
  "30064771126" -> "30064771082"  [ label = "CDG: "] 
  "30064771126" -> "30064771081"  [ label = "CDG: "] 
  "30064771126" -> "30064771080"  [ label = "CDG: "] 
  "30064771126" -> "30064771079"  [ label = "CDG: "] 
  "30064771126" -> "30064771078"  [ label = "CDG: "] 
  "30064771126" -> "30064771077"  [ label = "CDG: "] 
  "30064771126" -> "30064771076"  [ label = "CDG: "] 
  "30064771126" -> "30064771075"  [ label = "CDG: "] 
  "30064771126" -> "30064771091"  [ label = "CDG: "] 
  "30064771126" -> "30064771090"  [ label = "CDG: "] 
  "30064771126" -> "30064771089"  [ label = "CDG: "] 
  "30064771126" -> "30064771088"  [ label = "CDG: "] 
  "30064771091" -> "30064771116"  [ label = "CDG: "] 
  "30064771091" -> "30064771115"  [ label = "CDG: "] 
  "30064771091" -> "30064771114"  [ label = "CDG: "] 
  "30064771091" -> "30064771113"  [ label = "CDG: "] 
  "30064771091" -> "30064771112"  [ label = "CDG: "] 
  "30064771091" -> "30064771111"  [ label = "CDG: "] 
  "30064771091" -> "30064771110"  [ label = "CDG: "] 
  "30064771091" -> "30064771109"  [ label = "CDG: "] 
  "30064771091" -> "30064771108"  [ label = "CDG: "] 
  "30064771091" -> "30064771104"  [ label = "CDG: "] 
  "30064771091" -> "30064771103"  [ label = "CDG: "] 
  "30064771091" -> "30064771102"  [ label = "CDG: "] 
  "30064771091" -> "30064771101"  [ label = "CDG: "] 
  "30064771091" -> "30064771100"  [ label = "CDG: "] 
  "30064771091" -> "30064771099"  [ label = "CDG: "] 
  "30064771091" -> "30064771098"  [ label = "CDG: "] 
  "30064771091" -> "30064771097"  [ label = "CDG: "] 
  "30064771091" -> "30064771096"  [ label = "CDG: "] 
  "30064771091" -> "30064771095"  [ label = "CDG: "] 
  "30064771091" -> "30064771094"  [ label = "CDG: "] 
  "30064771091" -> "30064771093"  [ label = "CDG: "] 
  "30064771091" -> "30064771092"  [ label = "CDG: "] 
  "30064771104" -> "30064771107"  [ label = "CDG: "] 
  "30064771104" -> "30064771106"  [ label = "CDG: "] 
  "30064771104" -> "30064771105"  [ label = "CDG: "] 
  "30064771116" -> "30064771120"  [ label = "CDG: "] 
  "30064771116" -> "184683593730"  [ label = "CDG: "] 
  "30064771116" -> "30064771119"  [ label = "CDG: "] 
  "30064771116" -> "30064771118"  [ label = "CDG: "] 
  "30064771116" -> "30064771117"  [ label = "CDG: "] 
}
"""
)
