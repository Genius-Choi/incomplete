[33mval[0m [36mres1010[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "sealHexSEK" {  
"111669149697" [label = <(METHOD,sealHexSEK)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,int *errStatus)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,char *errString)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,uint8_t *encrypted_sek)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,uint64_t *enc_len)<SUB>2</SUB>> ]
"115964116996" [label = <(PARAM,char *sek_hex)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
    CALL_ONCE
    LOG_INFO(__FUNCTION__);
   ...,{
    CALL_ONCE
    LOG_INFO(__FUNCTION__);
   ...)<SUB>2</SUB>> ]
"30064771072" [label = <(CHECK_STATE,CHECK_STATE(sek_hex))<SUB>8</SUB>> ]
"68719476736" [label = <(IDENTIFIER,sek_hex,CHECK_STATE(sek_hex))<SUB>8</SUB>> ]
"30064771073" [label = <(CHECK_STATE,CHECK_STATE(strnlen(sek_hex, 33) == 32))<SUB>9</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.equals,strnlen(sek_hex, 33) == 32)<SUB>9</SUB>> ]
"30064771075" [label = <(strnlen,strnlen(sek_hex, 33))<SUB>9</SUB>> ]
"68719476737" [label = <(IDENTIFIER,sek_hex,strnlen(sek_hex, 33))<SUB>9</SUB>> ]
"90194313216" [label = <(LITERAL,33,strnlen(sek_hex, 33))<SUB>9</SUB>> ]
"90194313217" [label = <(LITERAL,32,strnlen(sek_hex, 33) == 32)<SUB>9</SUB>> ]
"94489280512" [label = <(LOCAL,uint64_t plaintextLen: uint64_t)<SUB>12</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,plaintextLen = strlen(sek_hex) + 1)<SUB>12</SUB>> ]
"68719476738" [label = <(IDENTIFIER,plaintextLen,plaintextLen = strlen(sek_hex) + 1)<SUB>12</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.addition,strlen(sek_hex) + 1)<SUB>12</SUB>> ]
"30064771078" [label = <(strlen,strlen(sek_hex))<SUB>12</SUB>> ]
"68719476739" [label = <(IDENTIFIER,sek_hex,strlen(sek_hex))<SUB>12</SUB>> ]
"90194313218" [label = <(LITERAL,1,strlen(sek_hex) + 1)<SUB>12</SUB>> ]
"94489280513" [label = <(LOCAL,uint64_t sealedLen: uint64_t)<SUB>14</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,sealedLen = sgx_calc_sealed_data_size(0, plaint...)<SUB>14</SUB>> ]
"68719476740" [label = <(IDENTIFIER,sealedLen,sealedLen = sgx_calc_sealed_data_size(0, plaint...)<SUB>14</SUB>> ]
"30064771080" [label = <(sgx_calc_sealed_data_size,sgx_calc_sealed_data_size(0, plaintextLen))<SUB>14</SUB>> ]
"90194313219" [label = <(LITERAL,0,sgx_calc_sealed_data_size(0, plaintextLen))<SUB>14</SUB>> ]
"68719476741" [label = <(IDENTIFIER,plaintextLen,sgx_calc_sealed_data_size(0, plaintextLen))<SUB>14</SUB>> ]
"94489280514" [label = <(LOCAL,sgx_attributes_t attribute_mask: sgx_attributes_t)<SUB>16</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,attribute_mask.flags = 0xfffffffffffffff3)<SUB>17</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.fieldAccess,attribute_mask.flags)<SUB>17</SUB>> ]
"68719476742" [label = <(IDENTIFIER,attribute_mask,attribute_mask.flags = 0xfffffffffffffff3)<SUB>17</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>17</SUB>> ]
"90194313220" [label = <(LITERAL,0xfffffffffffffff3,attribute_mask.flags = 0xfffffffffffffff3)<SUB>17</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,attribute_mask.xfrm = 0x0)<SUB>18</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.fieldAccess,attribute_mask.xfrm)<SUB>18</SUB>> ]
"68719476743" [label = <(IDENTIFIER,attribute_mask,attribute_mask.xfrm = 0x0)<SUB>18</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,xfrm,xfrm)<SUB>18</SUB>> ]
"90194313221" [label = <(LITERAL,0x0,attribute_mask.xfrm = 0x0)<SUB>18</SUB>> ]
"94489280515" [label = <(LOCAL,sgx_misc_select_t misc: sgx_misc_select_t)<SUB>19</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,misc = 0xF0000000)<SUB>19</SUB>> ]
"68719476744" [label = <(IDENTIFIER,misc,misc = 0xF0000000)<SUB>19</SUB>> ]
"90194313222" [label = <(LITERAL,0xF0000000,misc = 0xF0000000)<SUB>19</SUB>> ]
"94489280516" [label = <(LOCAL,sgx_status_t status: sgx_status_t)<SUB>21</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,status = sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLA...)<SUB>21</SUB>> ]
"68719476745" [label = <(IDENTIFIER,status,status = sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLA...)<SUB>21</SUB>> ]
"30064771087" [label = <(sgx_seal_data_ex,sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attri...)<SUB>21</SUB>> ]
"68719476746" [label = <(IDENTIFIER,SGX_KEYPOLICY_MRENCLAVE,sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attri...)<SUB>21</SUB>> ]
"68719476747" [label = <(IDENTIFIER,attribute_mask,sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attri...)<SUB>21</SUB>> ]
"68719476748" [label = <(IDENTIFIER,misc,sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attri...)<SUB>21</SUB>> ]
"90194313223" [label = <(LITERAL,0,sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attri...)<SUB>21</SUB>> ]
"68719476749" [label = <(IDENTIFIER,NULL,sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attri...)<SUB>21</SUB>> ]
"68719476750" [label = <(IDENTIFIER,plaintextLen,sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attri...)<SUB>21</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.cast,(uint8_t *) sek_hex)<SUB>21</SUB>> ]
"184683593728" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>21</SUB>> ]
"68719476751" [label = <(IDENTIFIER,sek_hex,(uint8_t *) sek_hex)<SUB>21</SUB>> ]
"68719476752" [label = <(IDENTIFIER,sealedLen,sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attri...)<SUB>21</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.cast,(sgx_sealed_data_t *) encrypted_sek)<SUB>22</SUB>> ]
"184683593729" [label = <(UNKNOWN,sgx_sealed_data_t *,sgx_sealed_data_t *)<SUB>22</SUB>> ]
"68719476753" [label = <(IDENTIFIER,encrypted_sek,(sgx_sealed_data_t *) encrypted_sek)<SUB>22</SUB>> ]
"30064771090" [label = <(CHECK_STATUS,CHECK_STATUS(&quot;seal SEK failed after SEK generat...)<SUB>23</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;seal SEK failed after SEK generation&quot;,CHECK_STATUS(&quot;seal SEK failed after SEK generat...)<SUB>23</SUB>> ]
"94489280517" [label = <(LOCAL,uint64_t encrypt_text_length: uint64_t)<SUB>25</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,encrypt_text_length = sgx_get_encrypt_txt_len((...)<SUB>25</SUB>> ]
"68719476754" [label = <(IDENTIFIER,encrypt_text_length,encrypt_text_length = sgx_get_encrypt_txt_len((...)<SUB>25</SUB>> ]
"30064771092" [label = <(sgx_get_encrypt_txt_len,sgx_get_encrypt_txt_len((const sgx_sealed_data_...)<SUB>25</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.cast,(const sgx_sealed_data_t *)encrypted_sek)<SUB>25</SUB>> ]
"184683593730" [label = <(UNKNOWN,const sgx_sealed_data_t *,const sgx_sealed_data_t *)<SUB>25</SUB>> ]
"68719476755" [label = <(IDENTIFIER,encrypted_sek,(const sgx_sealed_data_t *)encrypted_sek)<SUB>25</SUB>> ]
"30064771094" [label = <(CHECK_STATE,CHECK_STATE(encrypt_text_length = plaintextLen))<SUB>27</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assignment,encrypt_text_length = plaintextLen)<SUB>27</SUB>> ]
"68719476756" [label = <(IDENTIFIER,encrypt_text_length,encrypt_text_length = plaintextLen)<SUB>27</SUB>> ]
"68719476757" [label = <(IDENTIFIER,plaintextLen,encrypt_text_length = plaintextLen)<SUB>27</SUB>> ]
"30064771096" [label = <(SAFE_CHAR_BUF,SAFE_CHAR_BUF(unsealedKey, BUF_LEN))<SUB>30</SUB>> ]
"68719476758" [label = <(IDENTIFIER,unsealedKey,SAFE_CHAR_BUF(unsealedKey, BUF_LEN))<SUB>30</SUB>> ]
"68719476759" [label = <(IDENTIFIER,BUF_LEN,SAFE_CHAR_BUF(unsealedKey, BUF_LEN))<SUB>30</SUB>> ]
"94489280518" [label = <(LOCAL,uint32_t decLen: uint32_t)<SUB>31</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,decLen = BUF_LEN)<SUB>31</SUB>> ]
"68719476760" [label = <(IDENTIFIER,decLen,decLen = BUF_LEN)<SUB>31</SUB>> ]
"68719476761" [label = <(IDENTIFIER,BUF_LEN,decLen = BUF_LEN)<SUB>31</SUB>> ]
"94489280519" [label = <(LOCAL,uint64_t add_text_length: uint64_t)<SUB>33</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,add_text_length = sgx_get_add_mac_txt_len((cons...)<SUB>33</SUB>> ]
"68719476762" [label = <(IDENTIFIER,add_text_length,add_text_length = sgx_get_add_mac_txt_len((cons...)<SUB>33</SUB>> ]
"30064771099" [label = <(sgx_get_add_mac_txt_len,sgx_get_add_mac_txt_len((const sgx_sealed_data_...)<SUB>33</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.cast,(const sgx_sealed_data_t *)encrypted_sek)<SUB>33</SUB>> ]
"184683593731" [label = <(UNKNOWN,const sgx_sealed_data_t *,const sgx_sealed_data_t *)<SUB>33</SUB>> ]
"68719476763" [label = <(IDENTIFIER,encrypted_sek,(const sgx_sealed_data_t *)encrypted_sek)<SUB>33</SUB>> ]
"30064771101" [label = <(CHECK_STATE,CHECK_STATE(add_text_length == 0))<SUB>34</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.equals,add_text_length == 0)<SUB>34</SUB>> ]
"68719476764" [label = <(IDENTIFIER,add_text_length,add_text_length == 0)<SUB>34</SUB>> ]
"90194313225" [label = <(LITERAL,0,add_text_length == 0)<SUB>34</SUB>> ]
"30064771103" [label = <(CHECK_STATE,CHECK_STATE(sgx_is_within_enclave(encrypted_sek...)<SUB>35</SUB>> ]
"30064771104" [label = <(sgx_is_within_enclave,sgx_is_within_enclave(encrypted_sek,sizeof(sgx_...)<SUB>35</SUB>> ]
"68719476765" [label = <(IDENTIFIER,encrypted_sek,sgx_is_within_enclave(encrypted_sek,sizeof(sgx_...)<SUB>35</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.sizeOf,sizeof(sgx_sealed_data_t))<SUB>35</SUB>> ]
"68719476766" [label = <(IDENTIFIER,sgx_sealed_data_t,sizeof(sgx_sealed_data_t))<SUB>35</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.assignment,status = sgx_unseal_data((const sgx_sealed_data...)<SUB>36</SUB>> ]
"68719476767" [label = <(IDENTIFIER,status,status = sgx_unseal_data((const sgx_sealed_data...)<SUB>36</SUB>> ]
"30064771107" [label = <(sgx_unseal_data,sgx_unseal_data((const sgx_sealed_data_t *)encr...)<SUB>36</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.cast,(const sgx_sealed_data_t *)encrypted_sek)<SUB>36</SUB>> ]
"184683593732" [label = <(UNKNOWN,const sgx_sealed_data_t *,const sgx_sealed_data_t *)<SUB>36</SUB>> ]
"68719476768" [label = <(IDENTIFIER,encrypted_sek,(const sgx_sealed_data_t *)encrypted_sek)<SUB>36</SUB>> ]
"68719476769" [label = <(IDENTIFIER,NULL,sgx_unseal_data((const sgx_sealed_data_t *)encr...)<SUB>36</SUB>> ]
"68719476770" [label = <(IDENTIFIER,NULL,sgx_unseal_data((const sgx_sealed_data_t *)encr...)<SUB>36</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.cast,(uint8_t *) unsealedKey)<SUB>37</SUB>> ]
"184683593733" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>37</SUB>> ]
"68719476771" [label = <(IDENTIFIER,unsealedKey,(uint8_t *) unsealedKey)<SUB>37</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.addressOf,&amp;decLen)<SUB>37</SUB>> ]
"68719476772" [label = <(IDENTIFIER,decLen,sgx_unseal_data((const sgx_sealed_data_t *)encr...)<SUB>37</SUB>> ]
"30064771111" [label = <(CHECK_STATUS,CHECK_STATUS(&quot;seal/unseal SEK failed after SEK ...)<SUB>39</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;seal/unseal SEK failed after SEK generation in...,CHECK_STATUS(&quot;seal/unseal SEK failed after SEK ...)<SUB>39</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.assignment,*enc_len = sealedLen)<SUB>40</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.indirection,*enc_len)<SUB>40</SUB>> ]
"68719476773" [label = <(IDENTIFIER,enc_len,*enc_len = sealedLen)<SUB>40</SUB>> ]
"68719476774" [label = <(IDENTIFIER,sealedLen,*enc_len = sealedLen)<SUB>40</SUB>> ]
"68719476775" [label = <(IDENTIFIER,SET_SUCCESS,{
    CALL_ONCE
    LOG_INFO(__FUNCTION__);
   ...)<SUB>42</SUB>> ]
"81604378624" [label = <(JUMP_TARGET,clean)<SUB>43</SUB>> ]
"30064771114" [label = <(LOG_INFO,LOG_INFO(__FUNCTION__ ))<SUB>44</SUB>> ]
"68719476776" [label = <(IDENTIFIER,__FUNCTION__,LOG_INFO(__FUNCTION__ ))<SUB>44</SUB>> ]
"30064771115" [label = <(LOG_INFO,LOG_INFO(&quot;SGX call completed&quot;))<SUB>45</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;SGX call completed&quot;,LOG_INFO(&quot;SGX call completed&quot;))<SUB>45</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "25769803777" -> "30064771094"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771097"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771098"  [ label = "AST: "] 
  "25769803777" -> "30064771101"  [ label = "AST: "] 
  "25769803777" -> "30064771103"  [ label = "AST: "] 
  "25769803777" -> "30064771106"  [ label = "AST: "] 
  "25769803777" -> "30064771111"  [ label = "AST: "] 
  "25769803777" -> "30064771112"  [ label = "AST: "] 
  "25769803777" -> "68719476775"  [ label = "AST: "] 
  "25769803777" -> "81604378624"  [ label = "AST: "] 
  "25769803777" -> "30064771114"  [ label = "AST: "] 
  "25769803777" -> "30064771115"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771075" -> "68719476737"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476739"  [ label = "AST: "] 
  "30064771079" -> "68719476740"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "90194313219"  [ label = "AST: "] 
  "30064771080" -> "68719476741"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "90194313220"  [ label = "AST: "] 
  "30064771082" -> "68719476742"  [ label = "AST: "] 
  "30064771082" -> "55834574848"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "90194313221"  [ label = "AST: "] 
  "30064771084" -> "68719476743"  [ label = "AST: "] 
  "30064771084" -> "55834574849"  [ label = "AST: "] 
  "30064771085" -> "68719476744"  [ label = "AST: "] 
  "30064771085" -> "90194313222"  [ label = "AST: "] 
  "30064771086" -> "68719476745"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476746"  [ label = "AST: "] 
  "30064771087" -> "68719476747"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "90194313223"  [ label = "AST: "] 
  "30064771087" -> "68719476749"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "68719476752"  [ label = "AST: "] 
  "30064771087" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "184683593728"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771089" -> "184683593729"  [ label = "AST: "] 
  "30064771089" -> "68719476753"  [ label = "AST: "] 
  "30064771090" -> "90194313224"  [ label = "AST: "] 
  "30064771091" -> "68719476754"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "184683593730"  [ label = "AST: "] 
  "30064771093" -> "68719476755"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476756"  [ label = "AST: "] 
  "30064771095" -> "68719476757"  [ label = "AST: "] 
  "30064771096" -> "68719476758"  [ label = "AST: "] 
  "30064771096" -> "68719476759"  [ label = "AST: "] 
  "30064771097" -> "68719476760"  [ label = "AST: "] 
  "30064771097" -> "68719476761"  [ label = "AST: "] 
  "30064771098" -> "68719476762"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "184683593731"  [ label = "AST: "] 
  "30064771100" -> "68719476763"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "68719476764"  [ label = "AST: "] 
  "30064771102" -> "90194313225"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476765"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476766"  [ label = "AST: "] 
  "30064771106" -> "68719476767"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "68719476769"  [ label = "AST: "] 
  "30064771107" -> "68719476770"  [ label = "AST: "] 
  "30064771107" -> "30064771109"  [ label = "AST: "] 
  "30064771107" -> "30064771110"  [ label = "AST: "] 
  "30064771108" -> "184683593732"  [ label = "AST: "] 
  "30064771108" -> "68719476768"  [ label = "AST: "] 
  "30064771109" -> "184683593733"  [ label = "AST: "] 
  "30064771109" -> "68719476771"  [ label = "AST: "] 
  "30064771110" -> "68719476772"  [ label = "AST: "] 
  "30064771111" -> "90194313226"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771112" -> "68719476774"  [ label = "AST: "] 
  "30064771113" -> "68719476773"  [ label = "AST: "] 
  "30064771114" -> "68719476776"  [ label = "AST: "] 
  "30064771115" -> "90194313227"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771073" -> "30064771078"  [ label = "CFG: "] 
  "30064771076" -> "30064771080"  [ label = "CFG: "] 
  "30064771079" -> "55834574848"  [ label = "CFG: "] 
  "30064771081" -> "55834574849"  [ label = "CFG: "] 
  "30064771083" -> "30064771085"  [ label = "CFG: "] 
  "30064771085" -> "184683593728"  [ label = "CFG: "] 
  "30064771086" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "184683593730"  [ label = "CFG: "] 
  "30064771091" -> "30064771095"  [ label = "CFG: "] 
  "30064771094" -> "30064771096"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771097" -> "184683593731"  [ label = "CFG: "] 
  "30064771098" -> "30064771102"  [ label = "CFG: "] 
  "30064771101" -> "30064771105"  [ label = "CFG: "] 
  "30064771103" -> "184683593732"  [ label = "CFG: "] 
  "30064771106" -> "30064771111"  [ label = "CFG: "] 
  "30064771111" -> "30064771113"  [ label = "CFG: "] 
  "30064771112" -> "30064771114"  [ label = "CFG: "] 
  "30064771114" -> "30064771115"  [ label = "CFG: "] 
  "30064771115" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "55834574848" -> "30064771082"  [ label = "CFG: "] 
  "55834574849" -> "30064771084"  [ label = "CFG: "] 
  "30064771088" -> "184683593729"  [ label = "CFG: "] 
  "30064771089" -> "30064771087"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771108" -> "184683593733"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "30064771110" -> "30064771107"  [ label = "CFG: "] 
  "184683593728" -> "30064771088"  [ label = "CFG: "] 
  "184683593729" -> "30064771089"  [ label = "CFG: "] 
  "184683593730" -> "30064771093"  [ label = "CFG: "] 
  "184683593731" -> "30064771100"  [ label = "CFG: "] 
  "184683593732" -> "30064771108"  [ label = "CFG: "] 
  "184683593733" -> "30064771109"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "115964116992" -> "128849018880"  [ label = "DDG: errStatus"] 
  "115964116993" -> "128849018880"  [ label = "DDG: errString"] 
  "115964116995" -> "128849018880"  [ label = "DDG: enc_len"] 
  "30064771072" -> "128849018880"  [ label = "DDG: CHECK_STATE(sek_hex)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: strnlen(sek_hex, 33)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: strnlen(sek_hex, 33) == 32"] 
  "30064771073" -> "128849018880"  [ label = "DDG: CHECK_STATE(strnlen(sek_hex, 33) == 32)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: strlen(sek_hex)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: strlen(sek_hex) + 1"] 
  "30064771076" -> "128849018880"  [ label = "DDG: plaintextLen = strlen(sek_hex) + 1"] 
  "30064771079" -> "128849018880"  [ label = "DDG: sgx_calc_sealed_data_size(0, plaintextLen)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: sealedLen = sgx_calc_sealed_data_size(0, plaintextLen)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: attribute_mask.flags = 0xfffffffffffffff3"] 
  "30064771083" -> "128849018880"  [ label = "DDG: attribute_mask.xfrm = 0x0"] 
  "30064771085" -> "128849018880"  [ label = "DDG: misc = 0xF0000000"] 
  "30064771087" -> "128849018880"  [ label = "DDG: attribute_mask"] 
  "30064771087" -> "128849018880"  [ label = "DDG: misc"] 
  "30064771088" -> "128849018880"  [ label = "DDG: sek_hex"] 
  "30064771087" -> "128849018880"  [ label = "DDG: (uint8_t *) sek_hex"] 
  "30064771087" -> "128849018880"  [ label = "DDG: (sgx_sealed_data_t *) encrypted_sek"] 
  "30064771086" -> "128849018880"  [ label = "DDG: sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attribute_mask, misc, 0, NULL, plaintextLen, (uint8_t *) sek_hex, sealedLen,
                                           (sgx_sealed_data_t *) encrypted_sek)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: status = sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attribute_mask, misc, 0, NULL, plaintextLen, (uint8_t *) sek_hex, sealedLen,
                                           (sgx_sealed_data_t *) encrypted_sek)"] 
  "30064771090" -> "128849018880"  [ label = "DDG: CHECK_STATUS(&quot;seal SEK failed after SEK generation&quot;)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: sgx_get_encrypt_txt_len((const sgx_sealed_data_t *)encrypted_sek)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: encrypt_text_length = sgx_get_encrypt_txt_len((const sgx_sealed_data_t *)encrypted_sek)"] 
  "30064771095" -> "128849018880"  [ label = "DDG: encrypt_text_length"] 
  "30064771095" -> "128849018880"  [ label = "DDG: plaintextLen"] 
  "30064771094" -> "128849018880"  [ label = "DDG: encrypt_text_length = plaintextLen"] 
  "30064771094" -> "128849018880"  [ label = "DDG: CHECK_STATE(encrypt_text_length = plaintextLen)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: SAFE_CHAR_BUF(unsealedKey, BUF_LEN)"] 
  "30064771097" -> "128849018880"  [ label = "DDG: decLen"] 
  "30064771097" -> "128849018880"  [ label = "DDG: BUF_LEN"] 
  "30064771097" -> "128849018880"  [ label = "DDG: decLen = BUF_LEN"] 
  "30064771098" -> "128849018880"  [ label = "DDG: sgx_get_add_mac_txt_len((const sgx_sealed_data_t *)encrypted_sek)"] 
  "30064771098" -> "128849018880"  [ label = "DDG: add_text_length = sgx_get_add_mac_txt_len((const sgx_sealed_data_t *)encrypted_sek)"] 
  "30064771102" -> "128849018880"  [ label = "DDG: add_text_length"] 
  "30064771101" -> "128849018880"  [ label = "DDG: add_text_length == 0"] 
  "30064771101" -> "128849018880"  [ label = "DDG: CHECK_STATE(add_text_length == 0)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: sgx_is_within_enclave(encrypted_sek,sizeof(sgx_sealed_data_t))"] 
  "30064771103" -> "128849018880"  [ label = "DDG: CHECK_STATE(sgx_is_within_enclave(encrypted_sek,sizeof(sgx_sealed_data_t)))"] 
  "30064771106" -> "128849018880"  [ label = "DDG: status"] 
  "30064771108" -> "128849018880"  [ label = "DDG: encrypted_sek"] 
  "30064771107" -> "128849018880"  [ label = "DDG: (const sgx_sealed_data_t *)encrypted_sek"] 
  "30064771107" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771109" -> "128849018880"  [ label = "DDG: unsealedKey"] 
  "30064771107" -> "128849018880"  [ label = "DDG: (uint8_t *) unsealedKey"] 
  "30064771107" -> "128849018880"  [ label = "DDG: &amp;decLen"] 
  "30064771106" -> "128849018880"  [ label = "DDG: sgx_unseal_data((const sgx_sealed_data_t *)encrypted_sek, NULL, NULL,
                             (uint8_t *) unsealedKey, &amp;decLen )"] 
  "30064771106" -> "128849018880"  [ label = "DDG: status = sgx_unseal_data((const sgx_sealed_data_t *)encrypted_sek, NULL, NULL,
                             (uint8_t *) unsealedKey, &amp;decLen )"] 
  "30064771111" -> "128849018880"  [ label = "DDG: CHECK_STATUS(&quot;seal/unseal SEK failed after SEK generation in unseal&quot;)"] 
  "30064771112" -> "128849018880"  [ label = "DDG: *enc_len"] 
  "30064771112" -> "128849018880"  [ label = "DDG: sealedLen"] 
  "30064771112" -> "128849018880"  [ label = "DDG: *enc_len = sealedLen"] 
  "30064771114" -> "128849018880"  [ label = "DDG: LOG_INFO(__FUNCTION__ )"] 
  "30064771115" -> "128849018880"  [ label = "DDG: LOG_INFO(&quot;SGX call completed&quot;)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: SGX_KEYPOLICY_MRENCLAVE"] 
  "30064771114" -> "128849018880"  [ label = "DDG: __FUNCTION__"] 
  "30064771105" -> "128849018880"  [ label = "DDG: sgx_sealed_data_t"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "30064771078" -> "30064771076"  [ label = "DDG: sek_hex"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: 0"] 
  "30064771080" -> "30064771079"  [ label = "DDG: plaintextLen"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771087" -> "30064771086"  [ label = "DDG: NULL"] 
  "30064771087" -> "30064771086"  [ label = "DDG: (uint8_t *) sek_hex"] 
  "30064771087" -> "30064771086"  [ label = "DDG: misc"] 
  "30064771087" -> "30064771086"  [ label = "DDG: sealedLen"] 
  "30064771087" -> "30064771086"  [ label = "DDG: (sgx_sealed_data_t *) encrypted_sek"] 
  "30064771087" -> "30064771086"  [ label = "DDG: attribute_mask"] 
  "30064771087" -> "30064771086"  [ label = "DDG: plaintextLen"] 
  "30064771087" -> "30064771086"  [ label = "DDG: 0"] 
  "30064771087" -> "30064771086"  [ label = "DDG: SGX_KEYPOLICY_MRENCLAVE"] 
  "30064771092" -> "30064771091"  [ label = "DDG: (const sgx_sealed_data_t *)encrypted_sek"] 
  "30064771096" -> "30064771097"  [ label = "DDG: BUF_LEN"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771099" -> "30064771098"  [ label = "DDG: (const sgx_sealed_data_t *)encrypted_sek"] 
  "30064771107" -> "30064771106"  [ label = "DDG: &amp;decLen"] 
  "30064771107" -> "30064771106"  [ label = "DDG: (uint8_t *) unsealedKey"] 
  "30064771107" -> "30064771106"  [ label = "DDG: (const sgx_sealed_data_t *)encrypted_sek"] 
  "30064771107" -> "30064771106"  [ label = "DDG: NULL"] 
  "30064771087" -> "30064771112"  [ label = "DDG: sealedLen"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "111669149697" -> "68719476775"  [ label = "DDG: "] 
  "115964116996" -> "30064771072"  [ label = "DDG: sek_hex"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: strnlen(sek_hex, 33)"] 
  "30064771074" -> "30064771073"  [ label = "DDG: 32"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771095" -> "30064771094"  [ label = "DDG: encrypt_text_length"] 
  "30064771087" -> "30064771094"  [ label = "DDG: plaintextLen"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771102" -> "30064771101"  [ label = "DDG: add_text_length"] 
  "30064771102" -> "30064771101"  [ label = "DDG: 0"] 
  "30064771104" -> "30064771103"  [ label = "DDG: encrypted_sek"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: sek_hex"] 
  "30064771075" -> "30064771074"  [ label = "DDG: 33"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: sek_hex"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771076" -> "30064771080"  [ label = "DDG: plaintextLen"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771081" -> "30064771087"  [ label = "DDG: attribute_mask.flags"] 
  "30064771083" -> "30064771087"  [ label = "DDG: attribute_mask.xfrm"] 
  "30064771085" -> "30064771087"  [ label = "DDG: misc"] 
  "30064771080" -> "30064771087"  [ label = "DDG: plaintextLen"] 
  "30064771078" -> "30064771087"  [ label = "DDG: sek_hex"] 
  "30064771079" -> "30064771087"  [ label = "DDG: sealedLen"] 
  "115964116994" -> "30064771087"  [ label = "DDG: encrypted_sek"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "115964116994" -> "30064771092"  [ label = "DDG: encrypted_sek"] 
  "30064771087" -> "30064771095"  [ label = "DDG: plaintextLen"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "115964116994" -> "30064771099"  [ label = "DDG: encrypted_sek"] 
  "30064771098" -> "30064771102"  [ label = "DDG: add_text_length"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "115964116994" -> "30064771104"  [ label = "DDG: encrypted_sek"] 
  "30064771104" -> "30064771107"  [ label = "DDG: encrypted_sek"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771087" -> "30064771107"  [ label = "DDG: NULL"] 
  "30064771096" -> "30064771107"  [ label = "DDG: unsealedKey"] 
  "30064771097" -> "30064771107"  [ label = "DDG: decLen"] 
  "30064771072" -> "30064771075"  [ label = "DDG: sek_hex"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771075" -> "30064771078"  [ label = "DDG: sek_hex"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771078" -> "30064771088"  [ label = "DDG: sek_hex"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "115964116994" -> "30064771089"  [ label = "DDG: encrypted_sek"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "115964116994" -> "30064771093"  [ label = "DDG: encrypted_sek"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "115964116994" -> "30064771100"  [ label = "DDG: encrypted_sek"] 
  "30064771104" -> "30064771108"  [ label = "DDG: encrypted_sek"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771096" -> "30064771109"  [ label = "DDG: unsealedKey"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
}
"""
)
