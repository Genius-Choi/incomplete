[33mval[0m [36mres1199[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "Create" {  
"111669149697" [label = <(METHOD,Create)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const CudnnHandle&amp; cudnn)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,int num_layers)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,int hidden_size)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,int input_size)<SUB>2</SUB>> ]
"115964116996" [label = <(PARAM,int cell_size)<SUB>3</SUB>> ]
"115964116997" [label = <(PARAM,int batch_size)<SUB>3</SUB>> ]
"115964116998" [label = <(PARAM,cudnnRNNInputMode_t input_mode)<SUB>3</SUB>> ]
"115964116999" [label = <(PARAM,cudnnDirectionMode_t direction_mode)<SUB>4</SUB>> ]
"115964117000" [label = <(PARAM,cudnnRNNMode_t rnn_mode)<SUB>4</SUB>> ]
"115964117001" [label = <(PARAM,cudnnDataType_t data_type)<SUB>5</SUB>> ]
"115964117002" [label = <(PARAM,cudnnDataType_t compute_type)<SUB>5</SUB>> ]
"115964117003" [label = <(PARAM,const dnn::AlgorithmConfig&amp; algorithm_config)<SUB>6</SUB>> ]
"115964117004" [label = <(PARAM,float dropout)<SUB>6</SUB>> ]
"115964117005" [label = <(PARAM,uint64_t seed)<SUB>7</SUB>> ]
"115964117006" [label = <(PARAM,ScratchAllocator* state_allocator)<SUB>7</SUB>> ]
"115964117007" [label = <(PARAM,bool use_padded_io)<SUB>7</SUB>> ]
"25769803777" [label = <(BLOCK,{
    TF_ASSIGN_OR_RETURN(
        CudnnDropout...,{
    TF_ASSIGN_OR_RETURN(
        CudnnDropout...)<SUB>7</SUB>> ]
"94489280512" [label = <(LOCAL,gpu.RnnDescriptor rnn_desc: gpu.RnnDescriptor)<SUB>12</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,rnn_desc = CreateRnnDescriptor())<SUB>12</SUB>> ]
"68719476736" [label = <(IDENTIFIER,rnn_desc,rnn_desc = CreateRnnDescriptor())<SUB>12</SUB>> ]
"30064771073" [label = <(CreateRnnDescriptor,CreateRnnDescriptor())<SUB>12</SUB>> ]
"94489280513" [label = <(LOCAL,cudnnRNNAlgo_t rnn_algo: cudnnRNNAlgo_t)<SUB>13</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,rnn_algo = ToCudnnRNNAlgo(algorithm_config.algo...)<SUB>13</SUB>> ]
"68719476737" [label = <(IDENTIFIER,rnn_algo,rnn_algo = ToCudnnRNNAlgo(algorithm_config.algo...)<SUB>13</SUB>> ]
"30064771075" [label = <(ToCudnnRNNAlgo,ToCudnnRNNAlgo(algorithm_config.algorithm()))<SUB>13</SUB>> ]
"30064771076" [label = <(algorithm,algorithm_config.algorithm())<SUB>13</SUB>> ]
"68719476738" [label = <(IDENTIFIER,algorithm_config,algorithm_config.algorithm())<SUB>13</SUB>> ]
"94489280514" [label = <(LOCAL,auto proj_size: auto)<SUB>16</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,proj_size = hidden_size)<SUB>16</SUB>> ]
"68719476739" [label = <(IDENTIFIER,proj_size,proj_size = hidden_size)<SUB>16</SUB>> ]
"68719476740" [label = <(IDENTIFIER,hidden_size,proj_size = hidden_size)<SUB>16</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,hidden_size = std::max(hidden_size, cell_size))<SUB>17</SUB>> ]
"68719476741" [label = <(IDENTIFIER,hidden_size,hidden_size = std::max(hidden_size, cell_size))<SUB>17</SUB>> ]
"30064771079" [label = <(max,std::max(hidden_size, cell_size))<SUB>17</SUB>> ]
"68719476742" [label = <(IDENTIFIER,hidden_size,std::max(hidden_size, cell_size))<SUB>17</SUB>> ]
"68719476743" [label = <(IDENTIFIER,cell_size,std::max(hidden_size, cell_size))<SUB>17</SUB>> ]
"94489280515" [label = <(LOCAL,bool allow_tensor_ops: bool)<SUB>27</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,allow_tensor_ops = data_type == CUDNN_DATA_HALF)<SUB>27</SUB>> ]
"68719476744" [label = <(IDENTIFIER,allow_tensor_ops,allow_tensor_ops = data_type == CUDNN_DATA_HALF)<SUB>27</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.equals,data_type == CUDNN_DATA_HALF)<SUB>27</SUB>> ]
"68719476745" [label = <(IDENTIFIER,data_type,data_type == CUDNN_DATA_HALF)<SUB>27</SUB>> ]
"68719476746" [label = <(IDENTIFIER,CUDNN_DATA_HALF,data_type == CUDNN_DATA_HALF)<SUB>27</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (data_type == CUDNN_DATA_FLOAT))<SUB>28</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.equals,data_type == CUDNN_DATA_FLOAT)<SUB>28</SUB>> ]
"68719476747" [label = <(IDENTIFIER,data_type,data_type == CUDNN_DATA_FLOAT)<SUB>28</SUB>> ]
"68719476748" [label = <(IDENTIFIER,CUDNN_DATA_FLOAT,data_type == CUDNN_DATA_FLOAT)<SUB>28</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,allow_tensor_ops = tsl::tensor_float_32_executi...)<SUB>29</SUB>> ]
"68719476749" [label = <(IDENTIFIER,allow_tensor_ops,allow_tensor_ops = tsl::tensor_float_32_executi...)<SUB>29</SUB>> ]
"30064771084" [label = <(tensor_float_32_execution_enabled,tsl::tensor_float_32_execution_enabled())<SUB>29</SUB>> ]
"94489280516" [label = <(LOCAL,bool use_tensor_ops: bool)<SUB>30</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,use_tensor_ops =
        algorithm_config.algor...)<SUB>30</SUB>> ]
"68719476750" [label = <(IDENTIFIER,use_tensor_ops,use_tensor_ops =
        algorithm_config.algor...)<SUB>30</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.conditional,algorithm_config.algorithm().has_value()
      ...)<SUB>31</SUB>> ]
"30064771087" [label = <(has_value,algorithm_config.algorithm().has_value())<SUB>31</SUB>> ]
"30064771088" [label = <(algorithm,algorithm_config.algorithm())<SUB>31</SUB>> ]
"68719476751" [label = <(IDENTIFIER,algorithm_config,algorithm_config.algorithm())<SUB>31</SUB>> ]
"30064771089" [label = <(tensor_ops_enabled,algorithm_config.algorithm()-&gt;tensor_ops_enabled())<SUB>32</SUB>> ]
"30064771090" [label = <(algorithm,algorithm_config.algorithm())<SUB>32</SUB>> ]
"68719476752" [label = <(IDENTIFIER,algorithm_config,algorithm_config.algorithm())<SUB>32</SUB>> ]
"68719476753" [label = <(IDENTIFIER,allow_tensor_ops,algorithm_config.algorithm().has_value()
      ...)<SUB>33</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (use_tensor_ops &amp;&amp; !allow_tensor_ops))<SUB>34</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.logicalAnd,use_tensor_ops &amp;&amp; !allow_tensor_ops)<SUB>34</SUB>> ]
"68719476754" [label = <(IDENTIFIER,use_tensor_ops,use_tensor_ops &amp;&amp; !allow_tensor_ops)<SUB>34</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.logicalNot,!allow_tensor_ops)<SUB>34</SUB>> ]
"68719476755" [label = <(IDENTIFIER,allow_tensor_ops,!allow_tensor_ops)<SUB>34</SUB>> ]
"25769803779" [label = <(BLOCK,{
      return tsl::Status(tsl::error::INVALID_...,{
      return tsl::Status(tsl::error::INVALID_...)<SUB>34</SUB>> ]
"146028888064" [label = <(RETURN,return tsl::Status(tsl::error::INVALID_ARGUMENT...,return tsl::Status(tsl::error::INVALID_ARGUMENT...)<SUB>35</SUB>> ]
"30064771093" [label = <(Status,tsl::Status(tsl::error::INVALID_ARGUMENT,
     ...)<SUB>35</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.fieldAccess,tsl::error::INVALID_ARGUMENT)<SUB>35</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.fieldAccess,tsl::error)<SUB>35</SUB>> ]
"68719476756" [label = <(IDENTIFIER,tsl,tsl::Status(tsl::error::INVALID_ARGUMENT,
     ...)<SUB>35</SUB>> ]
"68719476757" [label = <(IDENTIFIER,error,tsl::Status(tsl::error::INVALID_ARGUMENT,
     ...)<SUB>35</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>35</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Algo requests disallowed tensor op evaluation.&quot;,tsl::Status(tsl::error::INVALID_ARGUMENT,
     ...)<SUB>36</SUB>> ]
"94489280517" [label = <(LOCAL,cudnnMathType_t math_type: cudnnMathType_t)<SUB>43</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,math_type =
        use_tensor_ops ? CUDNN_TENS...)<SUB>43</SUB>> ]
"68719476758" [label = <(IDENTIFIER,math_type,math_type =
        use_tensor_ops ? CUDNN_TENS...)<SUB>43</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.conditional,use_tensor_ops ? CUDNN_TENSOR_OP_MATH : CUDNN_D...)<SUB>44</SUB>> ]
"68719476759" [label = <(IDENTIFIER,use_tensor_ops,use_tensor_ops ? CUDNN_TENSOR_OP_MATH : CUDNN_D...)<SUB>44</SUB>> ]
"68719476760" [label = <(IDENTIFIER,CUDNN_TENSOR_OP_MATH,use_tensor_ops ? CUDNN_TENSOR_OP_MATH : CUDNN_D...)<SUB>44</SUB>> ]
"68719476761" [label = <(IDENTIFIER,CUDNN_DEFAULT_MATH,use_tensor_ops ? CUDNN_TENSOR_OP_MATH : CUDNN_D...)<SUB>44</SUB>> ]
"30064771098" [label = <(RETURN_IF_CUDNN_ERROR,RETURN_IF_CUDNN_ERROR(cudnnSetRNNDescriptor_v6(...)<SUB>63</SUB>> ]
"30064771099" [label = <(cudnnSetRNNDescriptor_v6,cudnnSetRNNDescriptor_v6(
        cudnn.handle(...)<SUB>63</SUB>> ]
"30064771100" [label = <(handle,cudnn.handle())<SUB>64</SUB>> ]
"68719476762" [label = <(IDENTIFIER,cudnn,cudnn.handle())<SUB>64</SUB>> ]
"30064771101" [label = <(get,rnn_desc.get())<SUB>64</SUB>> ]
"68719476763" [label = <(IDENTIFIER,rnn_desc,rnn_desc.get())<SUB>64</SUB>> ]
"68719476764" [label = <(IDENTIFIER,hidden_size,cudnnSetRNNDescriptor_v6(
        cudnn.handle(...)<SUB>65</SUB>> ]
"68719476765" [label = <(IDENTIFIER,num_layers,cudnnSetRNNDescriptor_v6(
        cudnn.handle(...)<SUB>65</SUB>> ]
"30064771102" [label = <(handle,dropout_desc.handle())<SUB>66</SUB>> ]
"68719476766" [label = <(IDENTIFIER,dropout_desc,dropout_desc.handle())<SUB>66</SUB>> ]
"68719476767" [label = <(IDENTIFIER,input_mode,cudnnSetRNNDescriptor_v6(
        cudnn.handle(...)<SUB>66</SUB>> ]
"68719476768" [label = <(IDENTIFIER,direction_mode,cudnnSetRNNDescriptor_v6(
        cudnn.handle(...)<SUB>67</SUB>> ]
"68719476769" [label = <(IDENTIFIER,rnn_mode,cudnnSetRNNDescriptor_v6(
        cudnn.handle(...)<SUB>67</SUB>> ]
"68719476770" [label = <(IDENTIFIER,rnn_algo,cudnnSetRNNDescriptor_v6(
        cudnn.handle(...)<SUB>67</SUB>> ]
"68719476771" [label = <(IDENTIFIER,compute_type,cudnnSetRNNDescriptor_v6(
        cudnn.handle(...)<SUB>68</SUB>> ]
"30064771103" [label = <(CHECK_CUDNN_OK,CHECK_CUDNN_OK(cudnnSetRNNMatrixMathType(rnn_de...)<SUB>69</SUB>> ]
"30064771104" [label = <(cudnnSetRNNMatrixMathType,cudnnSetRNNMatrixMathType(rnn_desc.get(), math_...)<SUB>69</SUB>> ]
"30064771105" [label = <(get,rnn_desc.get())<SUB>69</SUB>> ]
"68719476772" [label = <(IDENTIFIER,rnn_desc,rnn_desc.get())<SUB>69</SUB>> ]
"68719476773" [label = <(IDENTIFIER,math_type,cudnnSetRNNMatrixMathType(rnn_desc.get(), math_...)<SUB>69</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (proj_size &lt; hidden_size))<SUB>71</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.lessThan,proj_size &lt; hidden_size)<SUB>71</SUB>> ]
"68719476774" [label = <(IDENTIFIER,proj_size,proj_size &lt; hidden_size)<SUB>71</SUB>> ]
"68719476775" [label = <(IDENTIFIER,hidden_size,proj_size &lt; hidden_size)<SUB>71</SUB>> ]
"25769803780" [label = <(BLOCK,{
      RETURN_IF_CUDNN_ERROR(cudnnSetRNNProjec...,{
      RETURN_IF_CUDNN_ERROR(cudnnSetRNNProjec...)<SUB>71</SUB>> ]
"30064771107" [label = <(RETURN_IF_CUDNN_ERROR,RETURN_IF_CUDNN_ERROR(cudnnSetRNNProjectionLaye...)<SUB>72</SUB>> ]
"30064771108" [label = <(cudnnSetRNNProjectionLayers,cudnnSetRNNProjectionLayers(
          cudnn.ha...)<SUB>72</SUB>> ]
"30064771109" [label = <(handle,cudnn.handle())<SUB>73</SUB>> ]
"68719476776" [label = <(IDENTIFIER,cudnn,cudnn.handle())<SUB>73</SUB>> ]
"30064771110" [label = <(get,rnn_desc.get())<SUB>73</SUB>> ]
"68719476777" [label = <(IDENTIFIER,rnn_desc,rnn_desc.get())<SUB>73</SUB>> ]
"68719476778" [label = <(IDENTIFIER,proj_size,cudnnSetRNNProjectionLayers(
          cudnn.ha...)<SUB>74</SUB>> ]
"90194313217" [label = <(LITERAL,0,cudnnSetRNNProjectionLayers(
          cudnn.ha...)<SUB>74</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (use_padded_io))<SUB>80</SUB>> ]
"68719476779" [label = <(IDENTIFIER,use_padded_io,if (use_padded_io))<SUB>80</SUB>> ]
"25769803781" [label = <(BLOCK,{
      RETURN_IF_CUDNN_ERROR(
          cudnnS...,{
      RETURN_IF_CUDNN_ERROR(
          cudnnS...)<SUB>80</SUB>> ]
"30064771111" [label = <(RETURN_IF_CUDNN_ERROR,RETURN_IF_CUDNN_ERROR(
          cudnnSetRNNPad...)<SUB>81</SUB>> ]
"30064771112" [label = <(cudnnSetRNNPaddingMode,cudnnSetRNNPaddingMode(rnn_desc.get(), CUDNN_RN...)<SUB>82</SUB>> ]
"30064771113" [label = <(get,rnn_desc.get())<SUB>82</SUB>> ]
"68719476780" [label = <(IDENTIFIER,rnn_desc,rnn_desc.get())<SUB>82</SUB>> ]
"68719476781" [label = <(IDENTIFIER,CUDNN_RNN_PADDED_IO_ENABLED,cudnnSetRNNPaddingMode(rnn_desc.get(), CUDNN_RN...)<SUB>82</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.greaterThan,tsl::StatusOr&lt;PersistentRnnPlan&gt; rnn_plan_wrapper)<SUB>86</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.lessThan,tsl::StatusOr&lt;PersistentRnnPlan)<SUB>86</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.fieldAccess,tsl::StatusOr)<SUB>86</SUB>> ]
"68719476782" [label = <(IDENTIFIER,tsl,tsl::StatusOr&lt;PersistentRnnPlan)<SUB>86</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,StatusOr,StatusOr)<SUB>86</SUB>> ]
"68719476783" [label = <(IDENTIFIER,PersistentRnnPlan,tsl::StatusOr&lt;PersistentRnnPlan)<SUB>86</SUB>> ]
"68719476784" [label = <(IDENTIFIER,rnn_plan_wrapper,tsl::StatusOr&lt;PersistentRnnPlan&gt; rnn_plan_wrapper)<SUB>86</SUB>> ]
"94489280518" [label = <(LOCAL,PersistentRnnPlan rnn_plan: PersistentRnnPlan)<SUB>87</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (rnn_algo == CUDNN_RNN_ALGO_PERSIST_DYNAMIC))<SUB>88</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.equals,rnn_algo == CUDNN_RNN_ALGO_PERSIST_DYNAMIC)<SUB>88</SUB>> ]
"68719476785" [label = <(IDENTIFIER,rnn_algo,rnn_algo == CUDNN_RNN_ALGO_PERSIST_DYNAMIC)<SUB>88</SUB>> ]
"68719476786" [label = <(IDENTIFIER,CUDNN_RNN_ALGO_PERSIST_DYNAMIC,rnn_algo == CUDNN_RNN_ALGO_PERSIST_DYNAMIC)<SUB>88</SUB>> ]
"25769803782" [label = <(BLOCK,{
      CHECK_GE(batch_size, 0);
      rnn_plan...,{
      CHECK_GE(batch_size, 0);
      rnn_plan...)<SUB>88</SUB>> ]
"30064771118" [label = <(CHECK_GE,CHECK_GE(batch_size, 0))<SUB>89</SUB>> ]
"68719476787" [label = <(IDENTIFIER,batch_size,CHECK_GE(batch_size, 0))<SUB>89</SUB>> ]
"90194313218" [label = <(LITERAL,0,CHECK_GE(batch_size, 0))<SUB>89</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.assignment,rnn_plan_wrapper =
          CreatePersistentRn...)<SUB>90</SUB>> ]
"68719476788" [label = <(IDENTIFIER,rnn_plan_wrapper,rnn_plan_wrapper =
          CreatePersistentRn...)<SUB>90</SUB>> ]
"30064771120" [label = <(CreatePersistentRnnPlan,CreatePersistentRnnPlan(rnn_desc.get(), batch_s...)<SUB>91</SUB>> ]
"30064771121" [label = <(get,rnn_desc.get())<SUB>91</SUB>> ]
"68719476789" [label = <(IDENTIFIER,rnn_desc,rnn_desc.get())<SUB>91</SUB>> ]
"68719476790" [label = <(IDENTIFIER,batch_size,CreatePersistentRnnPlan(rnn_desc.get(), batch_s...)<SUB>91</SUB>> ]
"68719476791" [label = <(IDENTIFIER,data_type,CreatePersistentRnnPlan(rnn_desc.get(), batch_s...)<SUB>91</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (!rnn_plan_wrapper.ok()))<SUB>92</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.logicalNot,!rnn_plan_wrapper.ok())<SUB>92</SUB>> ]
"30064771123" [label = <(ok,rnn_plan_wrapper.ok())<SUB>92</SUB>> ]
"68719476792" [label = <(IDENTIFIER,rnn_plan_wrapper,rnn_plan_wrapper.ok())<SUB>92</SUB>> ]
"25769803783" [label = <(BLOCK,{
        return tsl::StatusOr&lt;CudnnRnnDescript...,{
        return tsl::StatusOr&lt;CudnnRnnDescript...)<SUB>92</SUB>> ]
"146028888065" [label = <(RETURN,return tsl::StatusOr&lt;CudnnRnnDescriptor&gt;(rnn_pl...,return tsl::StatusOr&lt;CudnnRnnDescriptor&gt;(rnn_pl...)<SUB>93</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.greaterThan,tsl::StatusOr&lt;CudnnRnnDescriptor&gt;(rnn_plan_wrap...)<SUB>93</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.lessThan,tsl::StatusOr&lt;CudnnRnnDescriptor)<SUB>93</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.fieldAccess,tsl::StatusOr)<SUB>93</SUB>> ]
"68719476793" [label = <(IDENTIFIER,tsl,tsl::StatusOr&lt;CudnnRnnDescriptor)<SUB>93</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,StatusOr,StatusOr)<SUB>93</SUB>> ]
"68719476794" [label = <(IDENTIFIER,CudnnRnnDescriptor,tsl::StatusOr&lt;CudnnRnnDescriptor)<SUB>93</SUB>> ]
"30064771127" [label = <(status,rnn_plan_wrapper.status())<SUB>93</SUB>> ]
"68719476795" [label = <(IDENTIFIER,rnn_plan_wrapper,rnn_plan_wrapper.status())<SUB>93</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>94</SUB>> ]
"25769803784" [label = <(BLOCK,{
        rnn_plan = std::move(rnn_plan_wrapper...,{
        rnn_plan = std::move(rnn_plan_wrapper...)<SUB>94</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.assignment,rnn_plan = std::move(rnn_plan_wrapper).value())<SUB>95</SUB>> ]
"68719476796" [label = <(IDENTIFIER,rnn_plan,rnn_plan = std::move(rnn_plan_wrapper).value())<SUB>95</SUB>> ]
"30064771129" [label = <(value,std::move(rnn_plan_wrapper).value())<SUB>95</SUB>> ]
"30064771130" [label = <(move,std::move(rnn_plan_wrapper))<SUB>95</SUB>> ]
"68719476797" [label = <(IDENTIFIER,rnn_plan_wrapper,std::move(rnn_plan_wrapper))<SUB>95</SUB>> ]
"30064771131" [label = <(RETURN_IF_CUDNN_ERROR,RETURN_IF_CUDNN_ERROR(
            cudnnSetPers...)<SUB>96</SUB>> ]
"30064771132" [label = <(cudnnSetPersistentRNNPlan,cudnnSetPersistentRNNPlan(rnn_desc.get(), rnn_p...)<SUB>97</SUB>> ]
"30064771133" [label = <(get,rnn_desc.get())<SUB>97</SUB>> ]
"68719476798" [label = <(IDENTIFIER,rnn_desc,rnn_desc.get())<SUB>97</SUB>> ]
"30064771134" [label = <(get,rnn_plan.get())<SUB>97</SUB>> ]
"68719476799" [label = <(IDENTIFIER,rnn_plan,rnn_plan.get())<SUB>97</SUB>> ]
"146028888066" [label = <(RETURN,return CudnnRnnDescriptor(cudnn, std::move(rnn_...,return CudnnRnnDescriptor(cudnn, std::move(rnn_...)<SUB>110</SUB>> ]
"30064771135" [label = <(CudnnRnnDescriptor,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>110</SUB>> ]
"68719476800" [label = <(IDENTIFIER,cudnn,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>110</SUB>> ]
"30064771136" [label = <(move,std::move(rnn_desc))<SUB>110</SUB>> ]
"68719476801" [label = <(IDENTIFIER,rnn_desc,std::move(rnn_desc))<SUB>110</SUB>> ]
"30064771137" [label = <(move,std::move(rnn_plan))<SUB>110</SUB>> ]
"68719476802" [label = <(IDENTIFIER,rnn_plan,std::move(rnn_plan))<SUB>110</SUB>> ]
"68719476803" [label = <(IDENTIFIER,num_layers,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>111</SUB>> ]
"68719476804" [label = <(IDENTIFIER,hidden_size,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>111</SUB>> ]
"68719476805" [label = <(IDENTIFIER,input_size,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>111</SUB>> ]
"68719476806" [label = <(IDENTIFIER,cell_size,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>111</SUB>> ]
"68719476807" [label = <(IDENTIFIER,batch_size,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>112</SUB>> ]
"68719476808" [label = <(IDENTIFIER,input_mode,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>112</SUB>> ]
"68719476809" [label = <(IDENTIFIER,direction_mode,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>112</SUB>> ]
"68719476810" [label = <(IDENTIFIER,rnn_mode,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>112</SUB>> ]
"68719476811" [label = <(IDENTIFIER,data_type,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>113</SUB>> ]
"68719476812" [label = <(IDENTIFIER,compute_type,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>113</SUB>> ]
"68719476813" [label = <(IDENTIFIER,algorithm_config,CudnnRnnDescriptor(cudnn, std::move(rnn_desc), ...)<SUB>113</SUB>> ]
"30064771138" [label = <(move,std::move(dropout_desc))<SUB>114</SUB>> ]
"68719476814" [label = <(IDENTIFIER,dropout_desc,std::move(dropout_desc))<SUB>114</SUB>> ]
"30064771139" [label = <(move,std::move(params_desc))<SUB>114</SUB>> ]
"68719476815" [label = <(IDENTIFIER,params_desc,std::move(params_desc))<SUB>114</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,StatusOr&lt;CudnnRnnDescriptor&gt;)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "115964116998"  [ label = "AST: "] 
  "111669149697" -> "115964116999"  [ label = "AST: "] 
  "111669149697" -> "115964117000"  [ label = "AST: "] 
  "111669149697" -> "115964117001"  [ label = "AST: "] 
  "111669149697" -> "115964117002"  [ label = "AST: "] 
  "111669149697" -> "115964117003"  [ label = "AST: "] 
  "111669149697" -> "115964117004"  [ label = "AST: "] 
  "111669149697" -> "115964117005"  [ label = "AST: "] 
  "111669149697" -> "115964117006"  [ label = "AST: "] 
  "111669149697" -> "115964117007"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "30064771098"  [ label = "AST: "] 
  "25769803777" -> "30064771103"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "30064771114"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "146028888066"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "47244640256" -> "30064771082"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "30064771082" -> "68719476748"  [ label = "AST: "] 
  "25769803778" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476749"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "30064771089"  [ label = "AST: "] 
  "30064771086" -> "68719476753"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476752"  [ label = "AST: "] 
  "47244640257" -> "30064771091"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771091" -> "68719476754"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476755"  [ label = "AST: "] 
  "25769803779" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "90194313216"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "55834574848"  [ label = "AST: "] 
  "30064771095" -> "68719476756"  [ label = "AST: "] 
  "30064771095" -> "68719476757"  [ label = "AST: "] 
  "30064771096" -> "68719476758"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476759"  [ label = "AST: "] 
  "30064771097" -> "68719476760"  [ label = "AST: "] 
  "30064771097" -> "68719476761"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "30064771101"  [ label = "AST: "] 
  "30064771099" -> "68719476764"  [ label = "AST: "] 
  "30064771099" -> "68719476765"  [ label = "AST: "] 
  "30064771099" -> "30064771102"  [ label = "AST: "] 
  "30064771099" -> "68719476767"  [ label = "AST: "] 
  "30064771099" -> "68719476768"  [ label = "AST: "] 
  "30064771099" -> "68719476769"  [ label = "AST: "] 
  "30064771099" -> "68719476770"  [ label = "AST: "] 
  "30064771099" -> "68719476771"  [ label = "AST: "] 
  "30064771100" -> "68719476762"  [ label = "AST: "] 
  "30064771101" -> "68719476763"  [ label = "AST: "] 
  "30064771102" -> "68719476766"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "68719476773"  [ label = "AST: "] 
  "30064771105" -> "68719476772"  [ label = "AST: "] 
  "47244640258" -> "30064771106"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771106" -> "68719476774"  [ label = "AST: "] 
  "30064771106" -> "68719476775"  [ label = "AST: "] 
  "25769803780" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771108" -> "30064771110"  [ label = "AST: "] 
  "30064771108" -> "68719476778"  [ label = "AST: "] 
  "30064771108" -> "90194313217"  [ label = "AST: "] 
  "30064771109" -> "68719476776"  [ label = "AST: "] 
  "30064771110" -> "68719476777"  [ label = "AST: "] 
  "47244640259" -> "68719476779"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771112" -> "68719476781"  [ label = "AST: "] 
  "30064771113" -> "68719476780"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771114" -> "68719476784"  [ label = "AST: "] 
  "30064771115" -> "30064771116"  [ label = "AST: "] 
  "30064771115" -> "68719476783"  [ label = "AST: "] 
  "30064771116" -> "68719476782"  [ label = "AST: "] 
  "30064771116" -> "55834574849"  [ label = "AST: "] 
  "47244640260" -> "30064771117"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771117" -> "68719476785"  [ label = "AST: "] 
  "30064771117" -> "68719476786"  [ label = "AST: "] 
  "25769803782" -> "30064771118"  [ label = "AST: "] 
  "25769803782" -> "30064771119"  [ label = "AST: "] 
  "25769803782" -> "47244640261"  [ label = "AST: "] 
  "30064771118" -> "68719476787"  [ label = "AST: "] 
  "30064771118" -> "90194313218"  [ label = "AST: "] 
  "30064771119" -> "68719476788"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "68719476790"  [ label = "AST: "] 
  "30064771120" -> "68719476791"  [ label = "AST: "] 
  "30064771121" -> "68719476789"  [ label = "AST: "] 
  "47244640261" -> "30064771122"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "47244640261" -> "47244640262"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "68719476792"  [ label = "AST: "] 
  "25769803783" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771124"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "30064771127"  [ label = "AST: "] 
  "30064771125" -> "30064771126"  [ label = "AST: "] 
  "30064771125" -> "68719476794"  [ label = "AST: "] 
  "30064771126" -> "68719476793"  [ label = "AST: "] 
  "30064771126" -> "55834574850"  [ label = "AST: "] 
  "30064771127" -> "68719476795"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "25769803784" -> "30064771128"  [ label = "AST: "] 
  "25769803784" -> "30064771131"  [ label = "AST: "] 
  "30064771128" -> "68719476796"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "68719476797"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771132" -> "30064771134"  [ label = "AST: "] 
  "30064771133" -> "68719476798"  [ label = "AST: "] 
  "30064771134" -> "68719476799"  [ label = "AST: "] 
  "146028888066" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "68719476800"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771135" -> "30064771137"  [ label = "AST: "] 
  "30064771135" -> "68719476803"  [ label = "AST: "] 
  "30064771135" -> "68719476804"  [ label = "AST: "] 
  "30064771135" -> "68719476805"  [ label = "AST: "] 
  "30064771135" -> "68719476806"  [ label = "AST: "] 
  "30064771135" -> "68719476807"  [ label = "AST: "] 
  "30064771135" -> "68719476808"  [ label = "AST: "] 
  "30064771135" -> "68719476809"  [ label = "AST: "] 
  "30064771135" -> "68719476810"  [ label = "AST: "] 
  "30064771135" -> "68719476811"  [ label = "AST: "] 
  "30064771135" -> "68719476812"  [ label = "AST: "] 
  "30064771135" -> "68719476813"  [ label = "AST: "] 
  "30064771135" -> "30064771138"  [ label = "AST: "] 
  "30064771135" -> "30064771139"  [ label = "AST: "] 
  "30064771136" -> "68719476801"  [ label = "AST: "] 
  "30064771137" -> "68719476802"  [ label = "AST: "] 
  "30064771138" -> "68719476814"  [ label = "AST: "] 
  "30064771139" -> "68719476815"  [ label = "AST: "] 
  "30064771072" -> "30064771076"  [ label = "CFG: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771078" -> "30064771081"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771091"  [ label = "CFG: "] 
  "30064771085" -> "30064771092"  [ label = "CFG: "] 
  "30064771096" -> "30064771100"  [ label = "CFG: "] 
  "30064771098" -> "30064771105"  [ label = "CFG: "] 
  "30064771103" -> "30064771106"  [ label = "CFG: "] 
  "30064771114" -> "30064771117"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771082" -> "30064771088"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771091" -> "30064771095"  [ label = "CFG: "] 
  "30064771091" -> "30064771097"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771106" -> "68719476779"  [ label = "CFG: "] 
  "30064771106" -> "30064771109"  [ label = "CFG: "] 
  "68719476779" -> "30064771113"  [ label = "CFG: "] 
  "68719476779" -> "55834574849"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771117" -> "30064771118"  [ label = "CFG: "] 
  "30064771117" -> "30064771136"  [ label = "CFG: "] 
  "30064771135" -> "146028888066"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771083" -> "30064771088"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "30064771086"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771101" -> "30064771102"  [ label = "CFG: "] 
  "30064771102" -> "30064771099"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771107" -> "68719476779"  [ label = "CFG: "] 
  "30064771111" -> "55834574849"  [ label = "CFG: "] 
  "30064771116" -> "30064771115"  [ label = "CFG: "] 
  "30064771118" -> "30064771121"  [ label = "CFG: "] 
  "30064771119" -> "30064771123"  [ label = "CFG: "] 
  "30064771136" -> "30064771137"  [ label = "CFG: "] 
  "30064771137" -> "30064771138"  [ label = "CFG: "] 
  "30064771138" -> "30064771139"  [ label = "CFG: "] 
  "30064771139" -> "30064771135"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771093" -> "146028888064"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "55834574849" -> "30064771116"  [ label = "CFG: "] 
  "30064771120" -> "30064771119"  [ label = "CFG: "] 
  "30064771122" -> "55834574850"  [ label = "CFG: "] 
  "30064771122" -> "30064771130"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "30064771110" -> "30064771108"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771123" -> "30064771122"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771095" -> "55834574848"  [ label = "CFG: "] 
  "55834574848" -> "30064771094"  [ label = "CFG: "] 
  "30064771124" -> "146028888065"  [ label = "CFG: "] 
  "30064771128" -> "30064771133"  [ label = "CFG: "] 
  "30064771131" -> "30064771136"  [ label = "CFG: "] 
  "30064771125" -> "30064771127"  [ label = "CFG: "] 
  "30064771127" -> "30064771124"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "30064771126" -> "30064771125"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "30064771134" -> "30064771132"  [ label = "CFG: "] 
  "55834574850" -> "30064771126"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: cudnn"] 
  "115964116993" -> "128849018880"  [ label = "DDG: num_layers"] 
  "115964116995" -> "128849018880"  [ label = "DDG: input_size"] 
  "115964116997" -> "128849018880"  [ label = "DDG: batch_size"] 
  "115964116998" -> "128849018880"  [ label = "DDG: input_mode"] 
  "115964116999" -> "128849018880"  [ label = "DDG: direction_mode"] 
  "115964117000" -> "128849018880"  [ label = "DDG: rnn_mode"] 
  "115964117002" -> "128849018880"  [ label = "DDG: compute_type"] 
  "115964117004" -> "128849018880"  [ label = "DDG: dropout"] 
  "115964117005" -> "128849018880"  [ label = "DDG: seed"] 
  "115964117006" -> "128849018880"  [ label = "DDG: state_allocator"] 
  "115964117007" -> "128849018880"  [ label = "DDG: use_padded_io"] 
  "30064771072" -> "128849018880"  [ label = "DDG: rnn_desc"] 
  "30064771072" -> "128849018880"  [ label = "DDG: CreateRnnDescriptor()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: rnn_desc = CreateRnnDescriptor()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: rnn_algo"] 
  "30064771074" -> "128849018880"  [ label = "DDG: ToCudnnRNNAlgo(algorithm_config.algorithm())"] 
  "30064771074" -> "128849018880"  [ label = "DDG: rnn_algo = ToCudnnRNNAlgo(algorithm_config.algorithm())"] 
  "30064771077" -> "128849018880"  [ label = "DDG: proj_size"] 
  "30064771077" -> "128849018880"  [ label = "DDG: proj_size = hidden_size"] 
  "30064771078" -> "128849018880"  [ label = "DDG: hidden_size"] 
  "30064771079" -> "128849018880"  [ label = "DDG: cell_size"] 
  "30064771078" -> "128849018880"  [ label = "DDG: std::max(hidden_size, cell_size)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: hidden_size = std::max(hidden_size, cell_size)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: data_type == CUDNN_DATA_HALF"] 
  "30064771080" -> "128849018880"  [ label = "DDG: allow_tensor_ops = data_type == CUDNN_DATA_HALF"] 
  "30064771082" -> "128849018880"  [ label = "DDG: data_type"] 
  "30064771082" -> "128849018880"  [ label = "DDG: data_type == CUDNN_DATA_FLOAT"] 
  "30064771083" -> "128849018880"  [ label = "DDG: tsl::tensor_float_32_execution_enabled()"] 
  "30064771083" -> "128849018880"  [ label = "DDG: allow_tensor_ops = tsl::tensor_float_32_execution_enabled()"] 
  "30064771088" -> "128849018880"  [ label = "DDG: algorithm_config"] 
  "30064771087" -> "128849018880"  [ label = "DDG: algorithm_config.algorithm()"] 
  "30064771086" -> "128849018880"  [ label = "DDG: algorithm_config.algorithm().has_value()"] 
  "30064771086" -> "128849018880"  [ label = "DDG: allow_tensor_ops"] 
  "30064771090" -> "128849018880"  [ label = "DDG: algorithm_config"] 
  "30064771089" -> "128849018880"  [ label = "DDG: algorithm_config.algorithm()"] 
  "30064771086" -> "128849018880"  [ label = "DDG: algorithm_config.algorithm()-&gt;tensor_ops_enabled()"] 
  "30064771085" -> "128849018880"  [ label = "DDG: algorithm_config.algorithm().has_value()
            ? algorithm_config.algorithm()-&gt;tensor_ops_enabled()
            : allow_tensor_ops"] 
  "30064771085" -> "128849018880"  [ label = "DDG: use_tensor_ops =
        algorithm_config.algorithm().has_value()
            ? algorithm_config.algorithm()-&gt;tensor_ops_enabled()
            : allow_tensor_ops"] 
  "30064771091" -> "128849018880"  [ label = "DDG: use_tensor_ops"] 
  "30064771092" -> "128849018880"  [ label = "DDG: allow_tensor_ops"] 
  "30064771091" -> "128849018880"  [ label = "DDG: !allow_tensor_ops"] 
  "30064771091" -> "128849018880"  [ label = "DDG: use_tensor_ops &amp;&amp; !allow_tensor_ops"] 
  "30064771093" -> "128849018880"  [ label = "DDG: tsl::error::INVALID_ARGUMENT"] 
  "30064771093" -> "128849018880"  [ label = "DDG: tsl::Status(tsl::error::INVALID_ARGUMENT,
                         &quot;Algo requests disallowed tensor op evaluation.&quot;)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: CUDNN_DATA_FLOAT"] 
  "30064771097" -> "128849018880"  [ label = "DDG: CUDNN_TENSOR_OP_MATH"] 
  "30064771112" -> "128849018880"  [ label = "DDG: CUDNN_RNN_PADDED_IO_ENABLED"] 
  "30064771115" -> "128849018880"  [ label = "DDG: PersistentRnnPlan"] 
  "30064771117" -> "128849018880"  [ label = "DDG: CUDNN_RNN_ALGO_PERSIST_DYNAMIC"] 
  "30064771081" -> "128849018880"  [ label = "DDG: CUDNN_DATA_HALF"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "115964116998"  [ label = "DDG: "] 
  "111669149697" -> "115964116999"  [ label = "DDG: "] 
  "111669149697" -> "115964117000"  [ label = "DDG: "] 
  "111669149697" -> "115964117001"  [ label = "DDG: "] 
  "111669149697" -> "115964117002"  [ label = "DDG: "] 
  "111669149697" -> "115964117003"  [ label = "DDG: "] 
  "111669149697" -> "115964117004"  [ label = "DDG: "] 
  "111669149697" -> "115964117005"  [ label = "DDG: "] 
  "111669149697" -> "115964117006"  [ label = "DDG: "] 
  "111669149697" -> "115964117007"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: algorithm_config.algorithm()"] 
  "115964116994" -> "30064771077"  [ label = "DDG: hidden_size"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: hidden_size"] 
  "30064771079" -> "30064771078"  [ label = "DDG: cell_size"] 
  "30064771081" -> "30064771080"  [ label = "DDG: data_type"] 
  "30064771081" -> "30064771080"  [ label = "DDG: CUDNN_DATA_HALF"] 
  "30064771089" -> "30064771085"  [ label = "DDG: algorithm_config.algorithm()"] 
  "30064771080" -> "30064771085"  [ label = "DDG: allow_tensor_ops"] 
  "30064771083" -> "30064771085"  [ label = "DDG: allow_tensor_ops"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771135" -> "146028888066"  [ label = "DDG: CudnnRnnDescriptor(cudnn, std::move(rnn_desc), std::move(rnn_plan),
                              num_layers, hidden_size, input_size, cell_size,
                              batch_size, input_mode, direction_mode, rnn_mode,
                              data_type, compute_type, algorithm_config,
                              std::move(dropout_desc), std::move(params_desc))"] 
  "30064771099" -> "30064771098"  [ label = "DDG: rnn_algo"] 
  "30064771099" -> "30064771098"  [ label = "DDG: cudnn.handle()"] 
  "30064771099" -> "30064771098"  [ label = "DDG: input_mode"] 
  "30064771099" -> "30064771098"  [ label = "DDG: compute_type"] 
  "30064771099" -> "30064771098"  [ label = "DDG: dropout_desc.handle()"] 
  "30064771099" -> "30064771098"  [ label = "DDG: num_layers"] 
  "30064771099" -> "30064771098"  [ label = "DDG: rnn_desc.get()"] 
  "30064771099" -> "30064771098"  [ label = "DDG: direction_mode"] 
  "30064771099" -> "30064771098"  [ label = "DDG: hidden_size"] 
  "30064771099" -> "30064771098"  [ label = "DDG: rnn_mode"] 
  "30064771104" -> "30064771103"  [ label = "DDG: rnn_desc.get()"] 
  "30064771104" -> "30064771103"  [ label = "DDG: math_type"] 
  "111669149697" -> "68719476779"  [ label = "DDG: "] 
  "30064771115" -> "30064771114"  [ label = "DDG: tsl::StatusOr"] 
  "30064771115" -> "30064771114"  [ label = "DDG: PersistentRnnPlan"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: algorithm_config"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "115964116994" -> "30064771079"  [ label = "DDG: hidden_size"] 
  "115964116996" -> "30064771079"  [ label = "DDG: cell_size"] 
  "115964117001" -> "30064771081"  [ label = "DDG: data_type"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771081" -> "30064771082"  [ label = "DDG: data_type"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771089" -> "30064771086"  [ label = "DDG: algorithm_config.algorithm()"] 
  "30064771080" -> "30064771086"  [ label = "DDG: allow_tensor_ops"] 
  "30064771083" -> "30064771086"  [ label = "DDG: allow_tensor_ops"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771085" -> "30064771091"  [ label = "DDG: use_tensor_ops"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771092" -> "30064771091"  [ label = "DDG: allow_tensor_ops"] 
  "30064771093" -> "146028888064"  [ label = "DDG: tsl::Status(tsl::error::INVALID_ARGUMENT,
                         &quot;Algo requests disallowed tensor op evaluation.&quot;)"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771100" -> "30064771099"  [ label = "DDG: cudnn"] 
  "30064771101" -> "30064771099"  [ label = "DDG: rnn_desc"] 
  "30064771078" -> "30064771099"  [ label = "DDG: hidden_size"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "115964116993" -> "30064771099"  [ label = "DDG: num_layers"] 
  "30064771102" -> "30064771099"  [ label = "DDG: dropout_desc"] 
  "115964116998" -> "30064771099"  [ label = "DDG: input_mode"] 
  "115964116999" -> "30064771099"  [ label = "DDG: direction_mode"] 
  "115964117000" -> "30064771099"  [ label = "DDG: rnn_mode"] 
  "30064771074" -> "30064771099"  [ label = "DDG: rnn_algo"] 
  "115964117002" -> "30064771099"  [ label = "DDG: compute_type"] 
  "30064771105" -> "30064771104"  [ label = "DDG: rnn_desc"] 
  "30064771096" -> "30064771104"  [ label = "DDG: math_type"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771077" -> "30064771106"  [ label = "DDG: proj_size"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771099" -> "30064771106"  [ label = "DDG: hidden_size"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771099" -> "30064771117"  [ label = "DDG: rnn_algo"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771120" -> "30064771119"  [ label = "DDG: rnn_desc.get()"] 
  "30064771120" -> "30064771119"  [ label = "DDG: batch_size"] 
  "30064771120" -> "30064771119"  [ label = "DDG: data_type"] 
  "30064771100" -> "30064771135"  [ label = "DDG: cudnn"] 
  "30064771109" -> "30064771135"  [ label = "DDG: cudnn"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771136" -> "30064771135"  [ label = "DDG: rnn_desc"] 
  "30064771137" -> "30064771135"  [ label = "DDG: rnn_plan"] 
  "30064771099" -> "30064771135"  [ label = "DDG: num_layers"] 
  "30064771106" -> "30064771135"  [ label = "DDG: hidden_size"] 
  "115964116995" -> "30064771135"  [ label = "DDG: input_size"] 
  "30064771079" -> "30064771135"  [ label = "DDG: cell_size"] 
  "115964116997" -> "30064771135"  [ label = "DDG: batch_size"] 
  "30064771120" -> "30064771135"  [ label = "DDG: batch_size"] 
  "30064771099" -> "30064771135"  [ label = "DDG: input_mode"] 
  "30064771099" -> "30064771135"  [ label = "DDG: direction_mode"] 
  "30064771099" -> "30064771135"  [ label = "DDG: rnn_mode"] 
  "30064771082" -> "30064771135"  [ label = "DDG: data_type"] 
  "30064771120" -> "30064771135"  [ label = "DDG: data_type"] 
  "30064771099" -> "30064771135"  [ label = "DDG: compute_type"] 
  "30064771088" -> "30064771135"  [ label = "DDG: algorithm_config"] 
  "30064771090" -> "30064771135"  [ label = "DDG: algorithm_config"] 
  "30064771138" -> "30064771135"  [ label = "DDG: dropout_desc"] 
  "30064771139" -> "30064771135"  [ label = "DDG: params_desc"] 
  "115964117003" -> "30064771076"  [ label = "DDG: algorithm_config"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: algorithm_config"] 
  "30064771090" -> "30064771089"  [ label = "DDG: algorithm_config"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771080" -> "30064771092"  [ label = "DDG: allow_tensor_ops"] 
  "30064771083" -> "30064771092"  [ label = "DDG: allow_tensor_ops"] 
  "115964116992" -> "30064771100"  [ label = "DDG: cudnn"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771072" -> "30064771101"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771101" -> "30064771105"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771108" -> "30064771107"  [ label = "DDG: cudnn.handle()"] 
  "30064771108" -> "30064771107"  [ label = "DDG: rnn_desc.get()"] 
  "30064771108" -> "30064771107"  [ label = "DDG: proj_size"] 
  "30064771108" -> "30064771107"  [ label = "DDG: 0"] 
  "30064771112" -> "30064771111"  [ label = "DDG: rnn_desc.get()"] 
  "30064771112" -> "30064771111"  [ label = "DDG: CUDNN_RNN_PADDED_IO_ENABLED"] 
  "115964116997" -> "30064771118"  [ label = "DDG: batch_size"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "30064771105" -> "30064771136"  [ label = "DDG: rnn_desc"] 
  "30064771110" -> "30064771136"  [ label = "DDG: rnn_desc"] 
  "30064771113" -> "30064771136"  [ label = "DDG: rnn_desc"] 
  "30064771133" -> "30064771136"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771134" -> "30064771137"  [ label = "DDG: rnn_plan"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771102" -> "30064771138"  [ label = "DDG: dropout_desc"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771076" -> "30064771088"  [ label = "DDG: algorithm_config"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771088" -> "30064771090"  [ label = "DDG: algorithm_config"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771109" -> "30064771108"  [ label = "DDG: cudnn"] 
  "30064771110" -> "30064771108"  [ label = "DDG: rnn_desc"] 
  "30064771106" -> "30064771108"  [ label = "DDG: proj_size"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771113" -> "30064771112"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771121" -> "30064771120"  [ label = "DDG: rnn_desc"] 
  "30064771118" -> "30064771120"  [ label = "DDG: batch_size"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771082" -> "30064771120"  [ label = "DDG: data_type"] 
  "30064771123" -> "30064771122"  [ label = "DDG: rnn_plan_wrapper"] 
  "30064771124" -> "146028888065"  [ label = "DDG: tsl::StatusOr&lt;CudnnRnnDescriptor&gt;(rnn_plan_wrapper.status())"] 
  "30064771100" -> "30064771109"  [ label = "DDG: cudnn"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771105" -> "30064771110"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771105" -> "30064771113"  [ label = "DDG: rnn_desc"] 
  "30064771110" -> "30064771113"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771105" -> "30064771121"  [ label = "DDG: rnn_desc"] 
  "30064771110" -> "30064771121"  [ label = "DDG: rnn_desc"] 
  "30064771113" -> "30064771121"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771119" -> "30064771123"  [ label = "DDG: rnn_plan_wrapper"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: std::move(rnn_plan_wrapper)"] 
  "30064771125" -> "30064771124"  [ label = "DDG: tsl::StatusOr"] 
  "30064771125" -> "30064771124"  [ label = "DDG: CudnnRnnDescriptor"] 
  "30064771127" -> "30064771124"  [ label = "DDG: rnn_plan_wrapper"] 
  "30064771132" -> "30064771131"  [ label = "DDG: rnn_desc.get()"] 
  "30064771132" -> "30064771131"  [ label = "DDG: rnn_plan.get()"] 
  "30064771115" -> "30064771125"  [ label = "DDG: tsl::StatusOr"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771123" -> "30064771127"  [ label = "DDG: rnn_plan_wrapper"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771130" -> "30064771129"  [ label = "DDG: rnn_plan_wrapper"] 
  "30064771133" -> "30064771132"  [ label = "DDG: rnn_desc"] 
  "30064771134" -> "30064771132"  [ label = "DDG: rnn_plan"] 
  "30064771123" -> "30064771130"  [ label = "DDG: rnn_plan_wrapper"] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "30064771121" -> "30064771133"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "30064771128" -> "30064771134"  [ label = "DDG: rnn_plan"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771082" -> "30064771083"  [ label = "CDG: "] 
  "30064771082" -> "30064771084"  [ label = "CDG: "] 
  "30064771091" -> "30064771093"  [ label = "CDG: "] 
  "30064771091" -> "30064771095"  [ label = "CDG: "] 
  "30064771091" -> "30064771094"  [ label = "CDG: "] 
  "30064771091" -> "30064771097"  [ label = "CDG: "] 
  "30064771091" -> "30064771096"  [ label = "CDG: "] 
  "30064771091" -> "30064771099"  [ label = "CDG: "] 
  "30064771091" -> "30064771098"  [ label = "CDG: "] 
  "30064771091" -> "30064771101"  [ label = "CDG: "] 
  "30064771091" -> "30064771100"  [ label = "CDG: "] 
  "30064771091" -> "30064771103"  [ label = "CDG: "] 
  "30064771091" -> "30064771102"  [ label = "CDG: "] 
  "30064771091" -> "30064771105"  [ label = "CDG: "] 
  "30064771091" -> "30064771104"  [ label = "CDG: "] 
  "30064771091" -> "30064771106"  [ label = "CDG: "] 
  "30064771091" -> "30064771115"  [ label = "CDG: "] 
  "30064771091" -> "30064771114"  [ label = "CDG: "] 
  "30064771091" -> "30064771117"  [ label = "CDG: "] 
  "30064771091" -> "30064771116"  [ label = "CDG: "] 
  "30064771091" -> "68719476779"  [ label = "CDG: "] 
  "30064771091" -> "146028888064"  [ label = "CDG: "] 
  "30064771091" -> "55834574849"  [ label = "CDG: "] 
  "30064771091" -> "55834574848"  [ label = "CDG: "] 
  "30064771106" -> "30064771107"  [ label = "CDG: "] 
  "30064771106" -> "30064771109"  [ label = "CDG: "] 
  "30064771106" -> "30064771108"  [ label = "CDG: "] 
  "30064771106" -> "30064771110"  [ label = "CDG: "] 
  "68719476779" -> "30064771111"  [ label = "CDG: "] 
  "68719476779" -> "30064771113"  [ label = "CDG: "] 
  "68719476779" -> "30064771112"  [ label = "CDG: "] 
  "30064771117" -> "30064771119"  [ label = "CDG: "] 
  "30064771117" -> "30064771118"  [ label = "CDG: "] 
  "30064771117" -> "30064771121"  [ label = "CDG: "] 
  "30064771117" -> "30064771120"  [ label = "CDG: "] 
  "30064771117" -> "30064771123"  [ label = "CDG: "] 
  "30064771117" -> "30064771122"  [ label = "CDG: "] 
  "30064771117" -> "30064771135"  [ label = "CDG: "] 
  "30064771117" -> "30064771137"  [ label = "CDG: "] 
  "30064771117" -> "30064771136"  [ label = "CDG: "] 
  "30064771117" -> "30064771139"  [ label = "CDG: "] 
  "30064771117" -> "30064771138"  [ label = "CDG: "] 
  "30064771117" -> "146028888066"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771122" -> "30064771125"  [ label = "CDG: "] 
  "30064771122" -> "30064771124"  [ label = "CDG: "] 
  "30064771122" -> "30064771127"  [ label = "CDG: "] 
  "30064771122" -> "30064771126"  [ label = "CDG: "] 
  "30064771122" -> "30064771129"  [ label = "CDG: "] 
  "30064771122" -> "30064771128"  [ label = "CDG: "] 
  "30064771122" -> "30064771131"  [ label = "CDG: "] 
  "30064771122" -> "30064771130"  [ label = "CDG: "] 
  "30064771122" -> "30064771133"  [ label = "CDG: "] 
  "30064771122" -> "30064771132"  [ label = "CDG: "] 
  "30064771122" -> "30064771135"  [ label = "CDG: "] 
  "30064771122" -> "30064771134"  [ label = "CDG: "] 
  "30064771122" -> "30064771137"  [ label = "CDG: "] 
  "30064771122" -> "30064771136"  [ label = "CDG: "] 
  "30064771122" -> "30064771139"  [ label = "CDG: "] 
  "30064771122" -> "30064771138"  [ label = "CDG: "] 
  "30064771122" -> "146028888066"  [ label = "CDG: "] 
  "30064771122" -> "146028888065"  [ label = "CDG: "] 
  "30064771122" -> "55834574850"  [ label = "CDG: "] 
}
"""
)
