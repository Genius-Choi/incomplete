[33mval[0m [36mres497[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "__Pyx_Raise" {  
"111669149697" [label = <(METHOD,__Pyx_Raise)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,PyObject *type)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,PyObject *value)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,PyObject *tb)<SUB>1</SUB>> ]
"115964116995" [label = <(PARAM,PyObject *cause)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    PyObject* owned_instance = NULL;
    if (...,{
    PyObject* owned_instance = NULL;
    if (...)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,PyObject* owned_instance: PyObject*)<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,* owned_instance = NULL)<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,owned_instance,* owned_instance = NULL)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,NULL,* owned_instance = NULL)<SUB>2</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (tb == Py_None))<SUB>3</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.equals,tb == Py_None)<SUB>3</SUB>> ]
"68719476738" [label = <(IDENTIFIER,tb,tb == Py_None)<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,Py_None,tb == Py_None)<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,{
        tb = 0;
    },{
        tb = 0;
    })<SUB>3</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,tb = 0)<SUB>4</SUB>> ]
"68719476740" [label = <(IDENTIFIER,tb,tb = 0)<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,0,tb = 0)<SUB>4</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>5</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (tb &amp;&amp; !PyTraceBack_Check(tb)))<SUB>5</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.logicalAnd,tb &amp;&amp; !PyTraceBack_Check(tb))<SUB>5</SUB>> ]
"68719476741" [label = <(IDENTIFIER,tb,tb &amp;&amp; !PyTraceBack_Check(tb))<SUB>5</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.logicalNot,!PyTraceBack_Check(tb))<SUB>5</SUB>> ]
"30064771077" [label = <(PyTraceBack_Check,PyTraceBack_Check(tb))<SUB>5</SUB>> ]
"68719476742" [label = <(IDENTIFIER,tb,PyTraceBack_Check(tb))<SUB>5</SUB>> ]
"25769803780" [label = <(BLOCK,{
        PyErr_SetString(PyExc_TypeError,
    ...,{
        PyErr_SetString(PyExc_TypeError,
    ...)<SUB>5</SUB>> ]
"30064771078" [label = <(PyErr_SetString,PyErr_SetString(PyExc_TypeError,
            &quot;r...)<SUB>6</SUB>> ]
"68719476743" [label = <(IDENTIFIER,PyExc_TypeError,PyErr_SetString(PyExc_TypeError,
            &quot;r...)<SUB>6</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;raise: arg 3 must be a traceback or None&quot;,PyErr_SetString(PyExc_TypeError,
            &quot;r...)<SUB>7</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,GOTO,goto bad;)<SUB>8</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (value == Py_None))<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.equals,value == Py_None)<SUB>10</SUB>> ]
"68719476744" [label = <(IDENTIFIER,value,value == Py_None)<SUB>10</SUB>> ]
"68719476745" [label = <(IDENTIFIER,Py_None,value == Py_None)<SUB>10</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,value = 0)<SUB>11</SUB>> ]
"68719476746" [label = <(IDENTIFIER,value,value = 0)<SUB>11</SUB>> ]
"90194313218" [label = <(LITERAL,0,value = 0)<SUB>11</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (PyExceptionInstance_Check(type)))<SUB>12</SUB>> ]
"30064771081" [label = <(PyExceptionInstance_Check,PyExceptionInstance_Check(type))<SUB>12</SUB>> ]
"68719476747" [label = <(IDENTIFIER,type,PyExceptionInstance_Check(type))<SUB>12</SUB>> ]
"25769803782" [label = <(BLOCK,{
        if (value) {
            PyErr_SetStr...,{
        if (value) {
            PyErr_SetStr...)<SUB>12</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (value))<SUB>13</SUB>> ]
"68719476748" [label = <(IDENTIFIER,value,if (value))<SUB>13</SUB>> ]
"25769803783" [label = <(BLOCK,{
            PyErr_SetString(PyExc_TypeError,
...,{
            PyErr_SetString(PyExc_TypeError,
...)<SUB>13</SUB>> ]
"30064771082" [label = <(PyErr_SetString,PyErr_SetString(PyExc_TypeError,
              ...)<SUB>14</SUB>> ]
"68719476749" [label = <(IDENTIFIER,PyExc_TypeError,PyErr_SetString(PyExc_TypeError,
              ...)<SUB>14</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;instance exception may not have a separate value&quot;,PyErr_SetString(PyExc_TypeError,
              ...)<SUB>15</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,GOTO,goto bad;)<SUB>16</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,value = type)<SUB>18</SUB>> ]
"68719476750" [label = <(IDENTIFIER,value,value = type)<SUB>18</SUB>> ]
"68719476751" [label = <(IDENTIFIER,type,value = type)<SUB>18</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,type = (PyObject*) Py_TYPE(value))<SUB>19</SUB>> ]
"68719476752" [label = <(IDENTIFIER,type,type = (PyObject*) Py_TYPE(value))<SUB>19</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.cast,(PyObject*) Py_TYPE(value))<SUB>19</SUB>> ]
"184683593728" [label = <(UNKNOWN,PyObject*,PyObject*)<SUB>19</SUB>> ]
"30064771086" [label = <(Py_TYPE,Py_TYPE(value))<SUB>19</SUB>> ]
"68719476753" [label = <(IDENTIFIER,value,Py_TYPE(value))<SUB>19</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>20</SUB>> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,IF,if (PyExceptionClass_Check(type)))<SUB>20</SUB>> ]
"30064771087" [label = <(PyExceptionClass_Check,PyExceptionClass_Check(type))<SUB>20</SUB>> ]
"68719476754" [label = <(IDENTIFIER,type,PyExceptionClass_Check(type))<SUB>20</SUB>> ]
"25769803785" [label = <(BLOCK,{
        PyObject *instance_class = NULL;
    ...,{
        PyObject *instance_class = NULL;
    ...)<SUB>20</SUB>> ]
"94489280513" [label = <(LOCAL,PyObject* instance_class: PyObject*)<SUB>21</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assignment,*instance_class = NULL)<SUB>21</SUB>> ]
"68719476755" [label = <(IDENTIFIER,instance_class,*instance_class = NULL)<SUB>21</SUB>> ]
"68719476756" [label = <(IDENTIFIER,NULL,*instance_class = NULL)<SUB>21</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,IF,if (value &amp;&amp; PyExceptionInstance_Check(value)))<SUB>22</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.logicalAnd,value &amp;&amp; PyExceptionInstance_Check(value))<SUB>22</SUB>> ]
"68719476757" [label = <(IDENTIFIER,value,value &amp;&amp; PyExceptionInstance_Check(value))<SUB>22</SUB>> ]
"30064771090" [label = <(PyExceptionInstance_Check,PyExceptionInstance_Check(value))<SUB>22</SUB>> ]
"68719476758" [label = <(IDENTIFIER,value,PyExceptionInstance_Check(value))<SUB>22</SUB>> ]
"25769803786" [label = <(BLOCK,{
            instance_class = (PyObject*) Py_T...,{
            instance_class = (PyObject*) Py_T...)<SUB>22</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,instance_class = (PyObject*) Py_TYPE(value))<SUB>23</SUB>> ]
"68719476759" [label = <(IDENTIFIER,instance_class,instance_class = (PyObject*) Py_TYPE(value))<SUB>23</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.cast,(PyObject*) Py_TYPE(value))<SUB>23</SUB>> ]
"184683593729" [label = <(UNKNOWN,PyObject*,PyObject*)<SUB>23</SUB>> ]
"30064771093" [label = <(Py_TYPE,Py_TYPE(value))<SUB>23</SUB>> ]
"68719476760" [label = <(IDENTIFIER,value,Py_TYPE(value))<SUB>23</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,IF,if (instance_class != type))<SUB>24</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.notEquals,instance_class != type)<SUB>24</SUB>> ]
"68719476761" [label = <(IDENTIFIER,instance_class,instance_class != type)<SUB>24</SUB>> ]
"68719476762" [label = <(IDENTIFIER,type,instance_class != type)<SUB>24</SUB>> ]
"25769803787" [label = <(BLOCK,{
                int is_subclass = PyObject_Is...,{
                int is_subclass = PyObject_Is...)<SUB>24</SUB>> ]
"94489280514" [label = <(LOCAL,int is_subclass: int)<SUB>25</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assignment,is_subclass = PyObject_IsSubclass(instance_clas...)<SUB>25</SUB>> ]
"68719476763" [label = <(IDENTIFIER,is_subclass,is_subclass = PyObject_IsSubclass(instance_clas...)<SUB>25</SUB>> ]
"30064771096" [label = <(PyObject_IsSubclass,PyObject_IsSubclass(instance_class, type))<SUB>25</SUB>> ]
"68719476764" [label = <(IDENTIFIER,instance_class,PyObject_IsSubclass(instance_class, type))<SUB>25</SUB>> ]
"68719476765" [label = <(IDENTIFIER,type,PyObject_IsSubclass(instance_class, type))<SUB>25</SUB>> ]
"47244640268" [label = <(CONTROL_STRUCTURE,IF,if (!is_subclass))<SUB>26</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.logicalNot,!is_subclass)<SUB>26</SUB>> ]
"68719476766" [label = <(IDENTIFIER,is_subclass,!is_subclass)<SUB>26</SUB>> ]
"25769803788" [label = <(BLOCK,{
                    instance_class = NULL;
  ...,{
                    instance_class = NULL;
  ...)<SUB>26</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,instance_class = NULL)<SUB>27</SUB>> ]
"68719476767" [label = <(IDENTIFIER,instance_class,instance_class = NULL)<SUB>27</SUB>> ]
"68719476768" [label = <(IDENTIFIER,NULL,instance_class = NULL)<SUB>27</SUB>> ]
"47244640269" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>28</SUB>> ]
"25769803789" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>> ]
"47244640270" [label = <(CONTROL_STRUCTURE,IF,if (unlikely(is_subclass == -1)))<SUB>28</SUB>> ]
"30064771099" [label = <(unlikely,unlikely(is_subclass == -1))<SUB>28</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.equals,is_subclass == -1)<SUB>28</SUB>> ]
"68719476769" [label = <(IDENTIFIER,is_subclass,is_subclass == -1)<SUB>28</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.minus,-1)<SUB>28</SUB>> ]
"90194313220" [label = <(LITERAL,1,-1)<SUB>28</SUB>> ]
"25769803790" [label = <(BLOCK,{
                    goto bad;
                },{
                    goto bad;
                })<SUB>28</SUB>> ]
"47244640271" [label = <(CONTROL_STRUCTURE,GOTO,goto bad;)<SUB>29</SUB>> ]
"47244640272" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>30</SUB>> ]
"25769803791" [label = <(BLOCK,{
                    type = instance_class;
  ...,{
                    type = instance_class;
  ...)<SUB>30</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,type = instance_class)<SUB>31</SUB>> ]
"68719476770" [label = <(IDENTIFIER,type,type = instance_class)<SUB>31</SUB>> ]
"68719476771" [label = <(IDENTIFIER,instance_class,type = instance_class)<SUB>31</SUB>> ]
"47244640273" [label = <(CONTROL_STRUCTURE,IF,if (!instance_class))<SUB>35</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.logicalNot,!instance_class)<SUB>35</SUB>> ]
"68719476772" [label = <(IDENTIFIER,instance_class,!instance_class)<SUB>35</SUB>> ]
"25769803792" [label = <(BLOCK,{
            PyObject *args;
            if (!...,{
            PyObject *args;
            if (!...)<SUB>35</SUB>> ]
"94489280515" [label = <(LOCAL,PyObject* args: PyObject*)<SUB>36</SUB>> ]
"47244640274" [label = <(CONTROL_STRUCTURE,IF,if (!value))<SUB>37</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.logicalNot,!value)<SUB>37</SUB>> ]
"68719476773" [label = <(IDENTIFIER,value,!value)<SUB>37</SUB>> ]
"25769803793" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.assignment,args = PyTuple_New(0))<SUB>38</SUB>> ]
"68719476774" [label = <(IDENTIFIER,args,args = PyTuple_New(0))<SUB>38</SUB>> ]
"30064771106" [label = <(PyTuple_New,PyTuple_New(0))<SUB>38</SUB>> ]
"90194313221" [label = <(LITERAL,0,PyTuple_New(0))<SUB>38</SUB>> ]
"47244640275" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>39</SUB>> ]
"25769803794" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>> ]
"47244640276" [label = <(CONTROL_STRUCTURE,IF,if (PyTuple_Check(value)))<SUB>39</SUB>> ]
"30064771107" [label = <(PyTuple_Check,PyTuple_Check(value))<SUB>39</SUB>> ]
"68719476775" [label = <(IDENTIFIER,value,PyTuple_Check(value))<SUB>39</SUB>> ]
"25769803795" [label = <(BLOCK,{
                Py_INCREF(value);
           ...,{
                Py_INCREF(value);
           ...)<SUB>39</SUB>> ]
"30064771108" [label = <(Py_INCREF,Py_INCREF(value))<SUB>40</SUB>> ]
"68719476776" [label = <(IDENTIFIER,value,Py_INCREF(value))<SUB>40</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.assignment,args = value)<SUB>41</SUB>> ]
"68719476777" [label = <(IDENTIFIER,args,args = value)<SUB>41</SUB>> ]
"68719476778" [label = <(IDENTIFIER,value,args = value)<SUB>41</SUB>> ]
"47244640277" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>43</SUB>> ]
"25769803796" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.assignment,args = PyTuple_Pack(1, value))<SUB>43</SUB>> ]
"68719476779" [label = <(IDENTIFIER,args,args = PyTuple_Pack(1, value))<SUB>43</SUB>> ]
"30064771111" [label = <(PyTuple_Pack,PyTuple_Pack(1, value))<SUB>43</SUB>> ]
"90194313222" [label = <(LITERAL,1,PyTuple_Pack(1, value))<SUB>43</SUB>> ]
"68719476780" [label = <(IDENTIFIER,value,PyTuple_Pack(1, value))<SUB>43</SUB>> ]
"47244640278" [label = <(CONTROL_STRUCTURE,IF,if (!args))<SUB>44</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.logicalNot,!args)<SUB>44</SUB>> ]
"68719476781" [label = <(IDENTIFIER,args,!args)<SUB>44</SUB>> ]
"25769803797" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>> ]
"47244640279" [label = <(CONTROL_STRUCTURE,GOTO,goto bad;)<SUB>45</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.assignment,owned_instance = PyObject_Call(type, args, NULL))<SUB>46</SUB>> ]
"68719476782" [label = <(IDENTIFIER,owned_instance,owned_instance = PyObject_Call(type, args, NULL))<SUB>46</SUB>> ]
"30064771114" [label = <(PyObject_Call,PyObject_Call(type, args, NULL))<SUB>46</SUB>> ]
"68719476783" [label = <(IDENTIFIER,type,PyObject_Call(type, args, NULL))<SUB>46</SUB>> ]
"68719476784" [label = <(IDENTIFIER,args,PyObject_Call(type, args, NULL))<SUB>46</SUB>> ]
"68719476785" [label = <(IDENTIFIER,NULL,PyObject_Call(type, args, NULL))<SUB>46</SUB>> ]
"30064771115" [label = <(Py_DECREF,Py_DECREF(args))<SUB>47</SUB>> ]
"68719476786" [label = <(IDENTIFIER,args,Py_DECREF(args))<SUB>47</SUB>> ]
"47244640280" [label = <(CONTROL_STRUCTURE,IF,if (!owned_instance))<SUB>48</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.logicalNot,!owned_instance)<SUB>48</SUB>> ]
"68719476787" [label = <(IDENTIFIER,owned_instance,!owned_instance)<SUB>48</SUB>> ]
"25769803798" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>> ]
"47244640281" [label = <(CONTROL_STRUCTURE,GOTO,goto bad;)<SUB>49</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,value = owned_instance)<SUB>50</SUB>> ]
"68719476788" [label = <(IDENTIFIER,value,value = owned_instance)<SUB>50</SUB>> ]
"68719476789" [label = <(IDENTIFIER,owned_instance,value = owned_instance)<SUB>50</SUB>> ]
"47244640282" [label = <(CONTROL_STRUCTURE,IF,if (!PyExceptionInstance_Check(value)))<SUB>51</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.logicalNot,!PyExceptionInstance_Check(value))<SUB>51</SUB>> ]
"30064771119" [label = <(PyExceptionInstance_Check,PyExceptionInstance_Check(value))<SUB>51</SUB>> ]
"68719476790" [label = <(IDENTIFIER,value,PyExceptionInstance_Check(value))<SUB>51</SUB>> ]
"25769803799" [label = <(BLOCK,{
                PyErr_Format(PyExc_TypeError,...,{
                PyErr_Format(PyExc_TypeError,...)<SUB>51</SUB>> ]
"30064771120" [label = <(PyErr_Format,PyErr_Format(PyExc_TypeError,
                 ...)<SUB>52</SUB>> ]
"68719476791" [label = <(IDENTIFIER,PyExc_TypeError,PyErr_Format(PyExc_TypeError,
                 ...)<SUB>52</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;calling %R should have returned an instance of...,PyErr_Format(PyExc_TypeError,
                 ...)<SUB>53</SUB>> ]
"68719476792" [label = <(IDENTIFIER,type,PyErr_Format(PyExc_TypeError,
                 ...)<SUB>55</SUB>> ]
"30064771121" [label = <(Py_TYPE,Py_TYPE(value))<SUB>55</SUB>> ]
"68719476793" [label = <(IDENTIFIER,value,Py_TYPE(value))<SUB>55</SUB>> ]
"47244640283" [label = <(CONTROL_STRUCTURE,GOTO,goto bad;)<SUB>56</SUB>> ]
"47244640284" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>59</SUB>> ]
"25769803800" [label = <(BLOCK,{
        PyErr_SetString(PyExc_TypeError,
    ...,{
        PyErr_SetString(PyExc_TypeError,
    ...)<SUB>59</SUB>> ]
"30064771122" [label = <(PyErr_SetString,PyErr_SetString(PyExc_TypeError,
            &quot;r...)<SUB>60</SUB>> ]
"68719476794" [label = <(IDENTIFIER,PyExc_TypeError,PyErr_SetString(PyExc_TypeError,
            &quot;r...)<SUB>60</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;raise: exception class must be a subclass of B...,PyErr_SetString(PyExc_TypeError,
            &quot;r...)<SUB>61</SUB>> ]
"47244640285" [label = <(CONTROL_STRUCTURE,GOTO,goto bad;)<SUB>62</SUB>> ]
"47244640286" [label = <(CONTROL_STRUCTURE,IF,if (cause))<SUB>64</SUB>> ]
"68719476795" [label = <(IDENTIFIER,cause,if (cause))<SUB>64</SUB>> ]
"25769803801" [label = <(BLOCK,{
        PyObject *fixed_cause;
        if (ca...,{
        PyObject *fixed_cause;
        if (ca...)<SUB>64</SUB>> ]
"94489280516" [label = <(LOCAL,PyObject* fixed_cause: PyObject*)<SUB>65</SUB>> ]
"47244640287" [label = <(CONTROL_STRUCTURE,IF,if (cause == Py_None))<SUB>66</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.equals,cause == Py_None)<SUB>66</SUB>> ]
"68719476796" [label = <(IDENTIFIER,cause,cause == Py_None)<SUB>66</SUB>> ]
"68719476797" [label = <(IDENTIFIER,Py_None,cause == Py_None)<SUB>66</SUB>> ]
"25769803802" [label = <(BLOCK,{
            fixed_cause = NULL;
        },{
            fixed_cause = NULL;
        })<SUB>66</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assignment,fixed_cause = NULL)<SUB>67</SUB>> ]
"68719476798" [label = <(IDENTIFIER,fixed_cause,fixed_cause = NULL)<SUB>67</SUB>> ]
"68719476799" [label = <(IDENTIFIER,NULL,fixed_cause = NULL)<SUB>67</SUB>> ]
"47244640288" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>68</SUB>> ]
"25769803803" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>68</SUB>> ]
"47244640289" [label = <(CONTROL_STRUCTURE,IF,if (PyExceptionClass_Check(cause)))<SUB>68</SUB>> ]
"30064771125" [label = <(PyExceptionClass_Check,PyExceptionClass_Check(cause))<SUB>68</SUB>> ]
"68719476800" [label = <(IDENTIFIER,cause,PyExceptionClass_Check(cause))<SUB>68</SUB>> ]
"25769803804" [label = <(BLOCK,{
            fixed_cause = PyObject_CallObject...,{
            fixed_cause = PyObject_CallObject...)<SUB>68</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.assignment,fixed_cause = PyObject_CallObject(cause, NULL))<SUB>69</SUB>> ]
"68719476801" [label = <(IDENTIFIER,fixed_cause,fixed_cause = PyObject_CallObject(cause, NULL))<SUB>69</SUB>> ]
"30064771127" [label = <(PyObject_CallObject,PyObject_CallObject(cause, NULL))<SUB>69</SUB>> ]
"68719476802" [label = <(IDENTIFIER,cause,PyObject_CallObject(cause, NULL))<SUB>69</SUB>> ]
"68719476803" [label = <(IDENTIFIER,NULL,PyObject_CallObject(cause, NULL))<SUB>69</SUB>> ]
"47244640290" [label = <(CONTROL_STRUCTURE,IF,if (fixed_cause == NULL))<SUB>70</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.equals,fixed_cause == NULL)<SUB>70</SUB>> ]
"68719476804" [label = <(IDENTIFIER,fixed_cause,fixed_cause == NULL)<SUB>70</SUB>> ]
"68719476805" [label = <(IDENTIFIER,NULL,fixed_cause == NULL)<SUB>70</SUB>> ]
"25769803805" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>71</SUB>> ]
"47244640291" [label = <(CONTROL_STRUCTURE,GOTO,goto bad;)<SUB>71</SUB>> ]
"47244640292" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>72</SUB>> ]
"25769803806" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>72</SUB>> ]
"47244640293" [label = <(CONTROL_STRUCTURE,IF,if (PyExceptionInstance_Check(cause)))<SUB>72</SUB>> ]
"30064771129" [label = <(PyExceptionInstance_Check,PyExceptionInstance_Check(cause))<SUB>72</SUB>> ]
"68719476806" [label = <(IDENTIFIER,cause,PyExceptionInstance_Check(cause))<SUB>72</SUB>> ]
"25769803807" [label = <(BLOCK,{
            fixed_cause = cause;
            ...,{
            fixed_cause = cause;
            ...)<SUB>72</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.assignment,fixed_cause = cause)<SUB>73</SUB>> ]
"68719476807" [label = <(IDENTIFIER,fixed_cause,fixed_cause = cause)<SUB>73</SUB>> ]
"68719476808" [label = <(IDENTIFIER,cause,fixed_cause = cause)<SUB>73</SUB>> ]
"30064771131" [label = <(Py_INCREF,Py_INCREF(fixed_cause))<SUB>74</SUB>> ]
"68719476809" [label = <(IDENTIFIER,fixed_cause,Py_INCREF(fixed_cause))<SUB>74</SUB>> ]
"47244640294" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>75</SUB>> ]
"25769803808" [label = <(BLOCK,{
            PyErr_SetString(PyExc_TypeError,
...,{
            PyErr_SetString(PyExc_TypeError,
...)<SUB>75</SUB>> ]
"30064771132" [label = <(PyErr_SetString,PyErr_SetString(PyExc_TypeError,
              ...)<SUB>76</SUB>> ]
"68719476810" [label = <(IDENTIFIER,PyExc_TypeError,PyErr_SetString(PyExc_TypeError,
              ...)<SUB>76</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;exception causes must derive from &quot;
          ...,PyErr_SetString(PyExc_TypeError,
              ...)<SUB>77</SUB>> ]
"47244640295" [label = <(CONTROL_STRUCTURE,GOTO,goto bad;)<SUB>79</SUB>> ]
"30064771133" [label = <(PyException_SetCause,PyException_SetCause(value, fixed_cause))<SUB>81</SUB>> ]
"68719476811" [label = <(IDENTIFIER,value,PyException_SetCause(value, fixed_cause))<SUB>81</SUB>> ]
"68719476812" [label = <(IDENTIFIER,fixed_cause,PyException_SetCause(value, fixed_cause))<SUB>81</SUB>> ]
"30064771134" [label = <(PyErr_SetObject,PyErr_SetObject(type, value))<SUB>83</SUB>> ]
"68719476813" [label = <(IDENTIFIER,type,PyErr_SetObject(type, value))<SUB>83</SUB>> ]
"68719476814" [label = <(IDENTIFIER,value,PyErr_SetObject(type, value))<SUB>83</SUB>> ]
"47244640296" [label = <(CONTROL_STRUCTURE,IF,if (tb))<SUB>84</SUB>> ]
"68719476815" [label = <(IDENTIFIER,tb,if (tb))<SUB>84</SUB>> ]
"25769803809" [label = <(BLOCK,{
#if CYTHON_COMPILING_IN_PYPY
        PyObject...,{
#if CYTHON_COMPILING_IN_PYPY
        PyObject...)<SUB>84</SUB>> ]
"94489280517" [label = <(LOCAL,PyThreadState* tstate: PyThreadState*)<SUB>92</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.assignment,*tstate = __Pyx_PyThreadState_Current)<SUB>92</SUB>> ]
"68719476816" [label = <(IDENTIFIER,tstate,*tstate = __Pyx_PyThreadState_Current)<SUB>92</SUB>> ]
"68719476817" [label = <(IDENTIFIER,__Pyx_PyThreadState_Current,*tstate = __Pyx_PyThreadState_Current)<SUB>92</SUB>> ]
"94489280518" [label = <(LOCAL,PyObject* tmp_tb: PyObject*)<SUB>93</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.assignment,* tmp_tb = tstate-&gt;curexc_traceback)<SUB>93</SUB>> ]
"68719476818" [label = <(IDENTIFIER,tmp_tb,* tmp_tb = tstate-&gt;curexc_traceback)<SUB>93</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.indirectFieldAccess,tstate-&gt;curexc_traceback)<SUB>93</SUB>> ]
"68719476819" [label = <(IDENTIFIER,tstate,* tmp_tb = tstate-&gt;curexc_traceback)<SUB>93</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,curexc_traceback,curexc_traceback)<SUB>93</SUB>> ]
"47244640297" [label = <(CONTROL_STRUCTURE,IF,if (tb != tmp_tb))<SUB>94</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.notEquals,tb != tmp_tb)<SUB>94</SUB>> ]
"68719476820" [label = <(IDENTIFIER,tb,tb != tmp_tb)<SUB>94</SUB>> ]
"68719476821" [label = <(IDENTIFIER,tmp_tb,tb != tmp_tb)<SUB>94</SUB>> ]
"25769803810" [label = <(BLOCK,{
            Py_INCREF(tb);
            tstate...,{
            Py_INCREF(tb);
            tstate...)<SUB>94</SUB>> ]
"30064771139" [label = <(Py_INCREF,Py_INCREF(tb))<SUB>95</SUB>> ]
"68719476822" [label = <(IDENTIFIER,tb,Py_INCREF(tb))<SUB>95</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.assignment,tstate-&gt;curexc_traceback = tb)<SUB>96</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.indirectFieldAccess,tstate-&gt;curexc_traceback)<SUB>96</SUB>> ]
"68719476823" [label = <(IDENTIFIER,tstate,tstate-&gt;curexc_traceback = tb)<SUB>96</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,curexc_traceback,curexc_traceback)<SUB>96</SUB>> ]
"68719476824" [label = <(IDENTIFIER,tb,tstate-&gt;curexc_traceback = tb)<SUB>96</SUB>> ]
"30064771142" [label = <(Py_XDECREF,Py_XDECREF(tmp_tb))<SUB>97</SUB>> ]
"68719476825" [label = <(IDENTIFIER,tmp_tb,Py_XDECREF(tmp_tb))<SUB>97</SUB>> ]
"81604378624" [label = <(JUMP_TARGET,bad)<SUB>101</SUB>> ]
"30064771143" [label = <(Py_XDECREF,Py_XDECREF(owned_instance))<SUB>102</SUB>> ]
"68719476826" [label = <(IDENTIFIER,owned_instance,Py_XDECREF(owned_instance))<SUB>102</SUB>> ]
"146028888064" [label = <(RETURN,return;,return;)<SUB>103</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "47244640286"  [ label = "AST: "] 
  "25769803777" -> "30064771134"  [ label = "AST: "] 
  "25769803777" -> "47244640296"  [ label = "AST: "] 
  "25769803777" -> "81604378624"  [ label = "AST: "] 
  "25769803777" -> "30064771143"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "47244640256" -> "30064771073"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640257"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "68719476739"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771075"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "25769803780" -> "30064771078"  [ label = "AST: "] 
  "25769803780" -> "47244640259"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "90194313217"  [ label = "AST: "] 
  "47244640260" -> "30064771079"  [ label = "AST: "] 
  "47244640260" -> "25769803781"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "25769803781" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "30064771080" -> "90194313218"  [ label = "AST: "] 
  "47244640261" -> "30064771081"  [ label = "AST: "] 
  "47244640261" -> "25769803782"  [ label = "AST: "] 
  "47244640261" -> "47244640264"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "25769803782" -> "47244640262"  [ label = "AST: "] 
  "25769803782" -> "30064771083"  [ label = "AST: "] 
  "25769803782" -> "30064771084"  [ label = "AST: "] 
  "47244640262" -> "68719476748"  [ label = "AST: "] 
  "47244640262" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "30064771082"  [ label = "AST: "] 
  "25769803783" -> "47244640263"  [ label = "AST: "] 
  "30064771082" -> "68719476749"  [ label = "AST: "] 
  "30064771082" -> "90194313219"  [ label = "AST: "] 
  "30064771083" -> "68719476750"  [ label = "AST: "] 
  "30064771083" -> "68719476751"  [ label = "AST: "] 
  "30064771084" -> "68719476752"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "184683593728"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476753"  [ label = "AST: "] 
  "47244640264" -> "25769803784"  [ label = "AST: "] 
  "25769803784" -> "47244640265"  [ label = "AST: "] 
  "47244640265" -> "30064771087"  [ label = "AST: "] 
  "47244640265" -> "25769803785"  [ label = "AST: "] 
  "47244640265" -> "47244640284"  [ label = "AST: "] 
  "30064771087" -> "68719476754"  [ label = "AST: "] 
  "25769803785" -> "94489280513"  [ label = "AST: "] 
  "25769803785" -> "30064771088"  [ label = "AST: "] 
  "25769803785" -> "47244640266"  [ label = "AST: "] 
  "25769803785" -> "47244640273"  [ label = "AST: "] 
  "30064771088" -> "68719476755"  [ label = "AST: "] 
  "30064771088" -> "68719476756"  [ label = "AST: "] 
  "47244640266" -> "30064771089"  [ label = "AST: "] 
  "47244640266" -> "25769803786"  [ label = "AST: "] 
  "30064771089" -> "68719476757"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476758"  [ label = "AST: "] 
  "25769803786" -> "30064771091"  [ label = "AST: "] 
  "25769803786" -> "47244640267"  [ label = "AST: "] 
  "30064771091" -> "68719476759"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "184683593729"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476760"  [ label = "AST: "] 
  "47244640267" -> "30064771094"  [ label = "AST: "] 
  "47244640267" -> "25769803787"  [ label = "AST: "] 
  "30064771094" -> "68719476761"  [ label = "AST: "] 
  "30064771094" -> "68719476762"  [ label = "AST: "] 
  "25769803787" -> "94489280514"  [ label = "AST: "] 
  "25769803787" -> "30064771095"  [ label = "AST: "] 
  "25769803787" -> "47244640268"  [ label = "AST: "] 
  "30064771095" -> "68719476763"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476764"  [ label = "AST: "] 
  "30064771096" -> "68719476765"  [ label = "AST: "] 
  "47244640268" -> "30064771097"  [ label = "AST: "] 
  "47244640268" -> "25769803788"  [ label = "AST: "] 
  "47244640268" -> "47244640269"  [ label = "AST: "] 
  "30064771097" -> "68719476766"  [ label = "AST: "] 
  "25769803788" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476767"  [ label = "AST: "] 
  "30064771098" -> "68719476768"  [ label = "AST: "] 
  "47244640269" -> "25769803789"  [ label = "AST: "] 
  "25769803789" -> "47244640270"  [ label = "AST: "] 
  "47244640270" -> "30064771099"  [ label = "AST: "] 
  "47244640270" -> "25769803790"  [ label = "AST: "] 
  "47244640270" -> "47244640272"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476769"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "90194313220"  [ label = "AST: "] 
  "25769803790" -> "47244640271"  [ label = "AST: "] 
  "47244640272" -> "25769803791"  [ label = "AST: "] 
  "25769803791" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "68719476770"  [ label = "AST: "] 
  "30064771102" -> "68719476771"  [ label = "AST: "] 
  "47244640273" -> "30064771103"  [ label = "AST: "] 
  "47244640273" -> "25769803792"  [ label = "AST: "] 
  "30064771103" -> "68719476772"  [ label = "AST: "] 
  "25769803792" -> "94489280515"  [ label = "AST: "] 
  "25769803792" -> "47244640274"  [ label = "AST: "] 
  "25769803792" -> "47244640278"  [ label = "AST: "] 
  "25769803792" -> "30064771113"  [ label = "AST: "] 
  "25769803792" -> "30064771115"  [ label = "AST: "] 
  "25769803792" -> "47244640280"  [ label = "AST: "] 
  "25769803792" -> "30064771117"  [ label = "AST: "] 
  "25769803792" -> "47244640282"  [ label = "AST: "] 
  "47244640274" -> "30064771104"  [ label = "AST: "] 
  "47244640274" -> "25769803793"  [ label = "AST: "] 
  "47244640274" -> "47244640275"  [ label = "AST: "] 
  "30064771104" -> "68719476773"  [ label = "AST: "] 
  "25769803793" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476774"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "90194313221"  [ label = "AST: "] 
  "47244640275" -> "25769803794"  [ label = "AST: "] 
  "25769803794" -> "47244640276"  [ label = "AST: "] 
  "47244640276" -> "30064771107"  [ label = "AST: "] 
  "47244640276" -> "25769803795"  [ label = "AST: "] 
  "47244640276" -> "47244640277"  [ label = "AST: "] 
  "30064771107" -> "68719476775"  [ label = "AST: "] 
  "25769803795" -> "30064771108"  [ label = "AST: "] 
  "25769803795" -> "30064771109"  [ label = "AST: "] 
  "30064771108" -> "68719476776"  [ label = "AST: "] 
  "30064771109" -> "68719476777"  [ label = "AST: "] 
  "30064771109" -> "68719476778"  [ label = "AST: "] 
  "47244640277" -> "25769803796"  [ label = "AST: "] 
  "25769803796" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "68719476779"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "90194313222"  [ label = "AST: "] 
  "30064771111" -> "68719476780"  [ label = "AST: "] 
  "47244640278" -> "30064771112"  [ label = "AST: "] 
  "47244640278" -> "25769803797"  [ label = "AST: "] 
  "30064771112" -> "68719476781"  [ label = "AST: "] 
  "25769803797" -> "47244640279"  [ label = "AST: "] 
  "30064771113" -> "68719476782"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771114" -> "68719476783"  [ label = "AST: "] 
  "30064771114" -> "68719476784"  [ label = "AST: "] 
  "30064771114" -> "68719476785"  [ label = "AST: "] 
  "30064771115" -> "68719476786"  [ label = "AST: "] 
  "47244640280" -> "30064771116"  [ label = "AST: "] 
  "47244640280" -> "25769803798"  [ label = "AST: "] 
  "30064771116" -> "68719476787"  [ label = "AST: "] 
  "25769803798" -> "47244640281"  [ label = "AST: "] 
  "30064771117" -> "68719476788"  [ label = "AST: "] 
  "30064771117" -> "68719476789"  [ label = "AST: "] 
  "47244640282" -> "30064771118"  [ label = "AST: "] 
  "47244640282" -> "25769803799"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "68719476790"  [ label = "AST: "] 
  "25769803799" -> "30064771120"  [ label = "AST: "] 
  "25769803799" -> "47244640283"  [ label = "AST: "] 
  "30064771120" -> "68719476791"  [ label = "AST: "] 
  "30064771120" -> "90194313223"  [ label = "AST: "] 
  "30064771120" -> "68719476792"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771121" -> "68719476793"  [ label = "AST: "] 
  "47244640284" -> "25769803800"  [ label = "AST: "] 
  "25769803800" -> "30064771122"  [ label = "AST: "] 
  "25769803800" -> "47244640285"  [ label = "AST: "] 
  "30064771122" -> "68719476794"  [ label = "AST: "] 
  "30064771122" -> "90194313224"  [ label = "AST: "] 
  "47244640286" -> "68719476795"  [ label = "AST: "] 
  "47244640286" -> "25769803801"  [ label = "AST: "] 
  "25769803801" -> "94489280516"  [ label = "AST: "] 
  "25769803801" -> "47244640287"  [ label = "AST: "] 
  "25769803801" -> "30064771133"  [ label = "AST: "] 
  "47244640287" -> "30064771123"  [ label = "AST: "] 
  "47244640287" -> "25769803802"  [ label = "AST: "] 
  "47244640287" -> "47244640288"  [ label = "AST: "] 
  "30064771123" -> "68719476796"  [ label = "AST: "] 
  "30064771123" -> "68719476797"  [ label = "AST: "] 
  "25769803802" -> "30064771124"  [ label = "AST: "] 
  "30064771124" -> "68719476798"  [ label = "AST: "] 
  "30064771124" -> "68719476799"  [ label = "AST: "] 
  "47244640288" -> "25769803803"  [ label = "AST: "] 
  "25769803803" -> "47244640289"  [ label = "AST: "] 
  "47244640289" -> "30064771125"  [ label = "AST: "] 
  "47244640289" -> "25769803804"  [ label = "AST: "] 
  "47244640289" -> "47244640292"  [ label = "AST: "] 
  "30064771125" -> "68719476800"  [ label = "AST: "] 
  "25769803804" -> "30064771126"  [ label = "AST: "] 
  "25769803804" -> "47244640290"  [ label = "AST: "] 
  "30064771126" -> "68719476801"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "68719476802"  [ label = "AST: "] 
  "30064771127" -> "68719476803"  [ label = "AST: "] 
  "47244640290" -> "30064771128"  [ label = "AST: "] 
  "47244640290" -> "25769803805"  [ label = "AST: "] 
  "30064771128" -> "68719476804"  [ label = "AST: "] 
  "30064771128" -> "68719476805"  [ label = "AST: "] 
  "25769803805" -> "47244640291"  [ label = "AST: "] 
  "47244640292" -> "25769803806"  [ label = "AST: "] 
  "25769803806" -> "47244640293"  [ label = "AST: "] 
  "47244640293" -> "30064771129"  [ label = "AST: "] 
  "47244640293" -> "25769803807"  [ label = "AST: "] 
  "47244640293" -> "47244640294"  [ label = "AST: "] 
  "30064771129" -> "68719476806"  [ label = "AST: "] 
  "25769803807" -> "30064771130"  [ label = "AST: "] 
  "25769803807" -> "30064771131"  [ label = "AST: "] 
  "30064771130" -> "68719476807"  [ label = "AST: "] 
  "30064771130" -> "68719476808"  [ label = "AST: "] 
  "30064771131" -> "68719476809"  [ label = "AST: "] 
  "47244640294" -> "25769803808"  [ label = "AST: "] 
  "25769803808" -> "30064771132"  [ label = "AST: "] 
  "25769803808" -> "47244640295"  [ label = "AST: "] 
  "30064771132" -> "68719476810"  [ label = "AST: "] 
  "30064771132" -> "90194313225"  [ label = "AST: "] 
  "30064771133" -> "68719476811"  [ label = "AST: "] 
  "30064771133" -> "68719476812"  [ label = "AST: "] 
  "30064771134" -> "68719476813"  [ label = "AST: "] 
  "30064771134" -> "68719476814"  [ label = "AST: "] 
  "47244640296" -> "68719476815"  [ label = "AST: "] 
  "47244640296" -> "25769803809"  [ label = "AST: "] 
  "25769803809" -> "94489280517"  [ label = "AST: "] 
  "25769803809" -> "30064771135"  [ label = "AST: "] 
  "25769803809" -> "94489280518"  [ label = "AST: "] 
  "25769803809" -> "30064771136"  [ label = "AST: "] 
  "25769803809" -> "47244640297"  [ label = "AST: "] 
  "30064771135" -> "68719476816"  [ label = "AST: "] 
  "30064771135" -> "68719476817"  [ label = "AST: "] 
  "30064771136" -> "68719476818"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771137" -> "68719476819"  [ label = "AST: "] 
  "30064771137" -> "55834574848"  [ label = "AST: "] 
  "47244640297" -> "30064771138"  [ label = "AST: "] 
  "47244640297" -> "25769803810"  [ label = "AST: "] 
  "30064771138" -> "68719476820"  [ label = "AST: "] 
  "30064771138" -> "68719476821"  [ label = "AST: "] 
  "25769803810" -> "30064771139"  [ label = "AST: "] 
  "25769803810" -> "30064771140"  [ label = "AST: "] 
  "25769803810" -> "30064771142"  [ label = "AST: "] 
  "30064771139" -> "68719476822"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771140" -> "68719476824"  [ label = "AST: "] 
  "30064771141" -> "68719476823"  [ label = "AST: "] 
  "30064771141" -> "55834574849"  [ label = "AST: "] 
  "30064771142" -> "68719476825"  [ label = "AST: "] 
  "30064771143" -> "68719476826"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771134" -> "68719476815"  [ label = "CFG: "] 
  "30064771143" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771073" -> "30064771075"  [ label = "CFG: "] 
  "30064771073" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771079" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "68719476748"  [ label = "CFG: "] 
  "30064771081" -> "30064771087"  [ label = "CFG: "] 
  "68719476795" -> "30064771123"  [ label = "CFG: "] 
  "68719476795" -> "30064771134"  [ label = "CFG: "] 
  "68719476815" -> "30064771135"  [ label = "CFG: "] 
  "68719476815" -> "30064771143"  [ label = "CFG: "] 
  "30064771074" -> "30064771079"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771083" -> "184683593728"  [ label = "CFG: "] 
  "30064771084" -> "68719476795"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "30064771135" -> "55834574848"  [ label = "CFG: "] 
  "30064771136" -> "30064771138"  [ label = "CFG: "] 
  "68719476748" -> "30064771082"  [ label = "CFG: "] 
  "68719476748" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771123" -> "30064771124"  [ label = "CFG: "] 
  "30064771123" -> "30064771125"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "30064771138" -> "30064771139"  [ label = "CFG: "] 
  "30064771138" -> "30064771143"  [ label = "CFG: "] 
  "30064771075" -> "30064771078"  [ label = "CFG: "] 
  "30064771075" -> "30064771079"  [ label = "CFG: "] 
  "30064771082" -> "30064771143"  [ label = "CFG: "] 
  "184683593728" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771087" -> "30064771122"  [ label = "CFG: "] 
  "30064771124" -> "30064771133"  [ label = "CFG: "] 
  "55834574848" -> "30064771137"  [ label = "CFG: "] 
  "30064771139" -> "55834574849"  [ label = "CFG: "] 
  "30064771140" -> "30064771142"  [ label = "CFG: "] 
  "30064771142" -> "30064771143"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771078" -> "30064771143"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771088" -> "30064771090"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771089" -> "184683593729"  [ label = "CFG: "] 
  "30064771089" -> "30064771103"  [ label = "CFG: "] 
  "30064771103" -> "68719476795"  [ label = "CFG: "] 
  "30064771103" -> "30064771104"  [ label = "CFG: "] 
  "30064771122" -> "30064771143"  [ label = "CFG: "] 
  "30064771125" -> "30064771127"  [ label = "CFG: "] 
  "30064771125" -> "30064771129"  [ label = "CFG: "] 
  "55834574849" -> "30064771141"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771091" -> "30064771094"  [ label = "CFG: "] 
  "30064771113" -> "30064771115"  [ label = "CFG: "] 
  "30064771115" -> "30064771116"  [ label = "CFG: "] 
  "30064771117" -> "30064771119"  [ label = "CFG: "] 
  "30064771126" -> "30064771128"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "30064771096"  [ label = "CFG: "] 
  "30064771094" -> "30064771103"  [ label = "CFG: "] 
  "30064771104" -> "30064771106"  [ label = "CFG: "] 
  "30064771104" -> "30064771107"  [ label = "CFG: "] 
  "30064771112" -> "30064771143"  [ label = "CFG: "] 
  "30064771112" -> "30064771114"  [ label = "CFG: "] 
  "30064771114" -> "30064771113"  [ label = "CFG: "] 
  "30064771116" -> "30064771143"  [ label = "CFG: "] 
  "30064771116" -> "30064771117"  [ label = "CFG: "] 
  "30064771118" -> "68719476795"  [ label = "CFG: "] 
  "30064771118" -> "30064771121"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771128" -> "30064771143"  [ label = "CFG: "] 
  "30064771128" -> "30064771133"  [ label = "CFG: "] 
  "184683593729" -> "30064771093"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "30064771097"  [ label = "CFG: "] 
  "30064771105" -> "30064771112"  [ label = "CFG: "] 
  "30064771119" -> "30064771118"  [ label = "CFG: "] 
  "30064771120" -> "30064771143"  [ label = "CFG: "] 
  "30064771129" -> "30064771130"  [ label = "CFG: "] 
  "30064771129" -> "30064771132"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771097" -> "30064771101"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771130" -> "30064771131"  [ label = "CFG: "] 
  "30064771131" -> "30064771133"  [ label = "CFG: "] 
  "30064771098" -> "30064771103"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "30064771107" -> "30064771111"  [ label = "CFG: "] 
  "30064771132" -> "30064771143"  [ label = "CFG: "] 
  "30064771108" -> "30064771109"  [ label = "CFG: "] 
  "30064771109" -> "30064771112"  [ label = "CFG: "] 
  "30064771099" -> "30064771143"  [ label = "CFG: "] 
  "30064771099" -> "30064771102"  [ label = "CFG: "] 
  "30064771110" -> "30064771112"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: type"] 
  "115964116993" -> "128849018880"  [ label = "DDG: value"] 
  "115964116995" -> "128849018880"  [ label = "DDG: cause"] 
  "30064771072" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771072" -> "128849018880"  [ label = "DDG: * owned_instance = NULL"] 
  "30064771073" -> "128849018880"  [ label = "DDG: Py_None"] 
  "30064771073" -> "128849018880"  [ label = "DDG: tb == Py_None"] 
  "30064771075" -> "128849018880"  [ label = "DDG: tb"] 
  "30064771076" -> "128849018880"  [ label = "DDG: PyTraceBack_Check(tb)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: !PyTraceBack_Check(tb)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: tb &amp;&amp; !PyTraceBack_Check(tb)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: PyExc_TypeError"] 
  "30064771078" -> "128849018880"  [ label = "DDG: PyErr_SetString(PyExc_TypeError,
            &quot;raise: arg 3 must be a traceback or None&quot;)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: tb"] 
  "30064771074" -> "128849018880"  [ label = "DDG: tb = 0"] 
  "30064771079" -> "128849018880"  [ label = "DDG: value"] 
  "30064771079" -> "128849018880"  [ label = "DDG: Py_None"] 
  "30064771079" -> "128849018880"  [ label = "DDG: value == Py_None"] 
  "30064771080" -> "128849018880"  [ label = "DDG: value"] 
  "30064771080" -> "128849018880"  [ label = "DDG: value = 0"] 
  "30064771081" -> "128849018880"  [ label = "DDG: type"] 
  "30064771081" -> "128849018880"  [ label = "DDG: PyExceptionInstance_Check(type)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: type"] 
  "30064771087" -> "128849018880"  [ label = "DDG: PyExceptionClass_Check(type)"] 
  "30064771122" -> "128849018880"  [ label = "DDG: PyExc_TypeError"] 
  "30064771122" -> "128849018880"  [ label = "DDG: PyErr_SetString(PyExc_TypeError,
            &quot;raise: exception class must be a subclass of BaseException&quot;)"] 
  "30064771088" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771088" -> "128849018880"  [ label = "DDG: *instance_class = NULL"] 
  "30064771089" -> "128849018880"  [ label = "DDG: value"] 
  "30064771089" -> "128849018880"  [ label = "DDG: PyExceptionInstance_Check(value)"] 
  "30064771089" -> "128849018880"  [ label = "DDG: value &amp;&amp; PyExceptionInstance_Check(value)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: value"] 
  "30064771092" -> "128849018880"  [ label = "DDG: Py_TYPE(value)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: (PyObject*) Py_TYPE(value)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: instance_class = (PyObject*) Py_TYPE(value)"] 
  "30064771094" -> "128849018880"  [ label = "DDG: type"] 
  "30064771094" -> "128849018880"  [ label = "DDG: instance_class != type"] 
  "30064771096" -> "128849018880"  [ label = "DDG: instance_class"] 
  "30064771096" -> "128849018880"  [ label = "DDG: type"] 
  "30064771095" -> "128849018880"  [ label = "DDG: PyObject_IsSubclass(instance_class, type)"] 
  "30064771095" -> "128849018880"  [ label = "DDG: is_subclass = PyObject_IsSubclass(instance_class, type)"] 
  "30064771097" -> "128849018880"  [ label = "DDG: is_subclass"] 
  "30064771097" -> "128849018880"  [ label = "DDG: !is_subclass"] 
  "30064771100" -> "128849018880"  [ label = "DDG: is_subclass"] 
  "30064771100" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771099" -> "128849018880"  [ label = "DDG: is_subclass == -1"] 
  "30064771099" -> "128849018880"  [ label = "DDG: unlikely(is_subclass == -1)"] 
  "30064771102" -> "128849018880"  [ label = "DDG: type"] 
  "30064771102" -> "128849018880"  [ label = "DDG: type = instance_class"] 
  "30064771098" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771098" -> "128849018880"  [ label = "DDG: instance_class = NULL"] 
  "30064771103" -> "128849018880"  [ label = "DDG: instance_class"] 
  "30064771103" -> "128849018880"  [ label = "DDG: !instance_class"] 
  "30064771104" -> "128849018880"  [ label = "DDG: value"] 
  "30064771104" -> "128849018880"  [ label = "DDG: !value"] 
  "30064771107" -> "128849018880"  [ label = "DDG: PyTuple_Check(value)"] 
  "30064771111" -> "128849018880"  [ label = "DDG: value"] 
  "30064771110" -> "128849018880"  [ label = "DDG: PyTuple_Pack(1, value)"] 
  "30064771110" -> "128849018880"  [ label = "DDG: args = PyTuple_Pack(1, value)"] 
  "30064771108" -> "128849018880"  [ label = "DDG: Py_INCREF(value)"] 
  "30064771109" -> "128849018880"  [ label = "DDG: value"] 
  "30064771109" -> "128849018880"  [ label = "DDG: args = value"] 
  "30064771105" -> "128849018880"  [ label = "DDG: PyTuple_New(0)"] 
  "30064771105" -> "128849018880"  [ label = "DDG: args = PyTuple_New(0)"] 
  "30064771112" -> "128849018880"  [ label = "DDG: args"] 
  "30064771112" -> "128849018880"  [ label = "DDG: !args"] 
  "30064771114" -> "128849018880"  [ label = "DDG: type"] 
  "30064771114" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771113" -> "128849018880"  [ label = "DDG: PyObject_Call(type, args, NULL)"] 
  "30064771113" -> "128849018880"  [ label = "DDG: owned_instance = PyObject_Call(type, args, NULL)"] 
  "30064771115" -> "128849018880"  [ label = "DDG: args"] 
  "30064771115" -> "128849018880"  [ label = "DDG: Py_DECREF(args)"] 
  "30064771116" -> "128849018880"  [ label = "DDG: !owned_instance"] 
  "30064771117" -> "128849018880"  [ label = "DDG: value = owned_instance"] 
  "30064771119" -> "128849018880"  [ label = "DDG: value"] 
  "30064771118" -> "128849018880"  [ label = "DDG: PyExceptionInstance_Check(value)"] 
  "30064771118" -> "128849018880"  [ label = "DDG: !PyExceptionInstance_Check(value)"] 
  "30064771120" -> "128849018880"  [ label = "DDG: PyExc_TypeError"] 
  "30064771120" -> "128849018880"  [ label = "DDG: type"] 
  "30064771121" -> "128849018880"  [ label = "DDG: value"] 
  "30064771120" -> "128849018880"  [ label = "DDG: Py_TYPE(value)"] 
  "30064771120" -> "128849018880"  [ label = "DDG: PyErr_Format(PyExc_TypeError,
                             &quot;calling %R should have returned an instance of &quot;
                             &quot;BaseException, not %R&quot;,
                             type, Py_TYPE(value))"] 
  "30064771083" -> "128849018880"  [ label = "DDG: value = type"] 
  "30064771084" -> "128849018880"  [ label = "DDG: type"] 
  "30064771086" -> "128849018880"  [ label = "DDG: value"] 
  "30064771085" -> "128849018880"  [ label = "DDG: Py_TYPE(value)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: (PyObject*) Py_TYPE(value)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: type = (PyObject*) Py_TYPE(value)"] 
  "30064771123" -> "128849018880"  [ label = "DDG: cause"] 
  "30064771123" -> "128849018880"  [ label = "DDG: Py_None"] 
  "30064771123" -> "128849018880"  [ label = "DDG: cause == Py_None"] 
  "30064771125" -> "128849018880"  [ label = "DDG: PyExceptionClass_Check(cause)"] 
  "30064771129" -> "128849018880"  [ label = "DDG: cause"] 
  "30064771129" -> "128849018880"  [ label = "DDG: PyExceptionInstance_Check(cause)"] 
  "30064771132" -> "128849018880"  [ label = "DDG: PyExc_TypeError"] 
  "30064771132" -> "128849018880"  [ label = "DDG: PyErr_SetString(PyExc_TypeError,
                            &quot;exception causes must derive from &quot;
                            &quot;BaseException&quot;)"] 
  "30064771130" -> "128849018880"  [ label = "DDG: cause"] 
  "30064771130" -> "128849018880"  [ label = "DDG: fixed_cause = cause"] 
  "30064771131" -> "128849018880"  [ label = "DDG: Py_INCREF(fixed_cause)"] 
  "30064771127" -> "128849018880"  [ label = "DDG: cause"] 
  "30064771126" -> "128849018880"  [ label = "DDG: PyObject_CallObject(cause, NULL)"] 
  "30064771126" -> "128849018880"  [ label = "DDG: fixed_cause = PyObject_CallObject(cause, NULL)"] 
  "30064771128" -> "128849018880"  [ label = "DDG: fixed_cause"] 
  "30064771128" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771128" -> "128849018880"  [ label = "DDG: fixed_cause == NULL"] 
  "30064771124" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771124" -> "128849018880"  [ label = "DDG: fixed_cause = NULL"] 
  "30064771133" -> "128849018880"  [ label = "DDG: fixed_cause"] 
  "30064771133" -> "128849018880"  [ label = "DDG: PyException_SetCause(value, fixed_cause)"] 
  "30064771134" -> "128849018880"  [ label = "DDG: type"] 
  "30064771134" -> "128849018880"  [ label = "DDG: value"] 
  "30064771134" -> "128849018880"  [ label = "DDG: PyErr_SetObject(type, value)"] 
  "30064771135" -> "128849018880"  [ label = "DDG: tstate"] 
  "30064771135" -> "128849018880"  [ label = "DDG: *tstate = __Pyx_PyThreadState_Current"] 
  "30064771136" -> "128849018880"  [ label = "DDG: tstate-&gt;curexc_traceback"] 
  "30064771136" -> "128849018880"  [ label = "DDG: * tmp_tb = tstate-&gt;curexc_traceback"] 
  "30064771138" -> "128849018880"  [ label = "DDG: tb"] 
  "30064771138" -> "128849018880"  [ label = "DDG: tmp_tb"] 
  "30064771138" -> "128849018880"  [ label = "DDG: tb != tmp_tb"] 
  "30064771139" -> "128849018880"  [ label = "DDG: Py_INCREF(tb)"] 
  "30064771140" -> "128849018880"  [ label = "DDG: tstate-&gt;curexc_traceback"] 
  "30064771140" -> "128849018880"  [ label = "DDG: tb"] 
  "30064771140" -> "128849018880"  [ label = "DDG: tstate-&gt;curexc_traceback = tb"] 
  "30064771142" -> "128849018880"  [ label = "DDG: tmp_tb"] 
  "30064771142" -> "128849018880"  [ label = "DDG: Py_XDECREF(tmp_tb)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: PyExc_TypeError"] 
  "30064771082" -> "128849018880"  [ label = "DDG: PyErr_SetString(PyExc_TypeError,
                &quot;instance exception may not have a separate value&quot;)"] 
  "30064771143" -> "128849018880"  [ label = "DDG: owned_instance"] 
  "30064771143" -> "128849018880"  [ label = "DDG: Py_XDECREF(owned_instance)"] 
  "30064771135" -> "128849018880"  [ label = "DDG: __Pyx_PyThreadState_Current"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "111669149697" -> "68719476795"  [ label = "DDG: "] 
  "30064771087" -> "30064771134"  [ label = "DDG: type"] 
  "30064771094" -> "30064771134"  [ label = "DDG: type"] 
  "30064771096" -> "30064771134"  [ label = "DDG: type"] 
  "30064771102" -> "30064771134"  [ label = "DDG: type"] 
  "30064771114" -> "30064771134"  [ label = "DDG: type"] 
  "30064771084" -> "30064771134"  [ label = "DDG: type"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771089" -> "30064771134"  [ label = "DDG: value"] 
  "30064771093" -> "30064771134"  [ label = "DDG: value"] 
  "30064771119" -> "30064771134"  [ label = "DDG: value"] 
  "30064771086" -> "30064771134"  [ label = "DDG: value"] 
  "30064771133" -> "30064771134"  [ label = "DDG: value"] 
  "111669149697" -> "68719476815"  [ label = "DDG: "] 
  "30064771072" -> "30064771143"  [ label = "DDG: owned_instance"] 
  "30064771116" -> "30064771143"  [ label = "DDG: owned_instance"] 
  "111669149697" -> "30064771143"  [ label = "DDG: "] 
  "115964116994" -> "30064771073"  [ label = "DDG: tb"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116993" -> "30064771079"  [ label = "DDG: value"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771073" -> "30064771079"  [ label = "DDG: Py_None"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "115964116992" -> "30064771081"  [ label = "DDG: type"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771081" -> "30064771083"  [ label = "DDG: type"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771086" -> "30064771084"  [ label = "DDG: value"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771135" -> "30064771136"  [ label = "DDG: tstate"] 
  "111669149697" -> "68719476748"  [ label = "DDG: "] 
  "30064771089" -> "30064771133"  [ label = "DDG: value"] 
  "30064771093" -> "30064771133"  [ label = "DDG: value"] 
  "30064771119" -> "30064771133"  [ label = "DDG: value"] 
  "30064771086" -> "30064771133"  [ label = "DDG: value"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "30064771131" -> "30064771133"  [ label = "DDG: fixed_cause"] 
  "30064771128" -> "30064771133"  [ label = "DDG: fixed_cause"] 
  "30064771124" -> "30064771133"  [ label = "DDG: fixed_cause"] 
  "30064771086" -> "30064771085"  [ label = "DDG: value"] 
  "115964116995" -> "30064771123"  [ label = "DDG: cause"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771079" -> "30064771123"  [ label = "DDG: Py_None"] 
  "30064771114" -> "30064771124"  [ label = "DDG: NULL"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771075" -> "30064771138"  [ label = "DDG: tb"] 
  "30064771074" -> "30064771138"  [ label = "DDG: tb"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771136" -> "30064771138"  [ label = "DDG: tmp_tb"] 
  "30064771139" -> "30064771140"  [ label = "DDG: tb"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771073" -> "30064771075"  [ label = "DDG: tb"] 
  "30064771077" -> "30064771075"  [ label = "DDG: tb"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: PyTraceBack_Check(tb)"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771083" -> "30064771086"  [ label = "DDG: value"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771081" -> "30064771087"  [ label = "DDG: type"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771138" -> "30064771139"  [ label = "DDG: tb"] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771138" -> "30064771142"  [ label = "DDG: tmp_tb"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: tb"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771073" -> "30064771077"  [ label = "DDG: tb"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771079" -> "30064771089"  [ label = "DDG: value"] 
  "30064771080" -> "30064771089"  [ label = "DDG: value"] 
  "30064771090" -> "30064771089"  [ label = "DDG: value"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771093" -> "30064771091"  [ label = "DDG: value"] 
  "30064771088" -> "30064771103"  [ label = "DDG: instance_class"] 
  "30064771094" -> "30064771103"  [ label = "DDG: instance_class"] 
  "30064771098" -> "30064771103"  [ label = "DDG: instance_class"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771096" -> "30064771103"  [ label = "DDG: instance_class"] 
  "30064771114" -> "30064771113"  [ label = "DDG: type"] 
  "30064771114" -> "30064771113"  [ label = "DDG: args"] 
  "30064771114" -> "30064771113"  [ label = "DDG: NULL"] 
  "30064771116" -> "30064771117"  [ label = "DDG: owned_instance"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771123" -> "30064771125"  [ label = "DDG: cause"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771127" -> "30064771126"  [ label = "DDG: cause"] 
  "30064771127" -> "30064771126"  [ label = "DDG: NULL"] 
  "30064771079" -> "30064771090"  [ label = "DDG: value"] 
  "30064771080" -> "30064771090"  [ label = "DDG: value"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771114" -> "30064771115"  [ label = "DDG: args"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: value"] 
  "30064771091" -> "30064771094"  [ label = "DDG: instance_class"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771087" -> "30064771094"  [ label = "DDG: type"] 
  "30064771096" -> "30064771095"  [ label = "DDG: instance_class"] 
  "30064771096" -> "30064771095"  [ label = "DDG: type"] 
  "30064771089" -> "30064771104"  [ label = "DDG: value"] 
  "30064771093" -> "30064771104"  [ label = "DDG: value"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771106" -> "30064771105"  [ label = "DDG: 0"] 
  "30064771110" -> "30064771112"  [ label = "DDG: args"] 
  "30064771109" -> "30064771112"  [ label = "DDG: args"] 
  "30064771105" -> "30064771112"  [ label = "DDG: args"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771087" -> "30064771114"  [ label = "DDG: type"] 
  "30064771094" -> "30064771114"  [ label = "DDG: type"] 
  "30064771096" -> "30064771114"  [ label = "DDG: type"] 
  "30064771102" -> "30064771114"  [ label = "DDG: type"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771112" -> "30064771114"  [ label = "DDG: args"] 
  "30064771113" -> "30064771116"  [ label = "DDG: owned_instance"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771119" -> "30064771118"  [ label = "DDG: value"] 
  "30064771125" -> "30064771127"  [ label = "DDG: cause"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771114" -> "30064771127"  [ label = "DDG: NULL"] 
  "30064771126" -> "30064771128"  [ label = "DDG: fixed_cause"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771127" -> "30064771128"  [ label = "DDG: NULL"] 
  "30064771089" -> "30064771093"  [ label = "DDG: value"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771117" -> "30064771119"  [ label = "DDG: value"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771114" -> "30064771120"  [ label = "DDG: type"] 
  "30064771121" -> "30064771120"  [ label = "DDG: value"] 
  "30064771125" -> "30064771129"  [ label = "DDG: cause"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "30064771129" -> "30064771130"  [ label = "DDG: cause"] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "30064771094" -> "30064771096"  [ label = "DDG: instance_class"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771094" -> "30064771096"  [ label = "DDG: type"] 
  "30064771095" -> "30064771097"  [ label = "DDG: is_subclass"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771119" -> "30064771121"  [ label = "DDG: value"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771130" -> "30064771131"  [ label = "DDG: fixed_cause"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771104" -> "30064771107"  [ label = "DDG: value"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771108" -> "30064771109"  [ label = "DDG: value"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "111669149697" -> "30064771132"  [ label = "DDG: "] 
  "30064771107" -> "30064771108"  [ label = "DDG: value"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771111" -> "30064771110"  [ label = "DDG: 1"] 
  "30064771111" -> "30064771110"  [ label = "DDG: value"] 
  "30064771100" -> "30064771099"  [ label = "DDG: is_subclass"] 
  "30064771100" -> "30064771099"  [ label = "DDG: -1"] 
  "30064771097" -> "30064771100"  [ label = "DDG: is_subclass"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: 1"] 
  "30064771096" -> "30064771102"  [ label = "DDG: instance_class"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771107" -> "30064771111"  [ label = "DDG: value"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771073" -> "30064771075"  [ label = "CDG: "] 
  "30064771073" -> "30064771074"  [ label = "CDG: "] 
  "30064771073" -> "30064771079"  [ label = "CDG: "] 
  "30064771073" -> "30064771081"  [ label = "CDG: "] 
  "30064771073" -> "30064771077"  [ label = "CDG: "] 
  "30064771073" -> "30064771076"  [ label = "CDG: "] 
  "30064771079" -> "30064771080"  [ label = "CDG: "] 
  "30064771081" -> "30064771087"  [ label = "CDG: "] 
  "30064771081" -> "68719476748"  [ label = "CDG: "] 
  "68719476795" -> "68719476815"  [ label = "CDG: "] 
  "68719476795" -> "30064771123"  [ label = "CDG: "] 
  "68719476795" -> "30064771134"  [ label = "CDG: "] 
  "68719476815" -> "55834574848"  [ label = "CDG: "] 
  "68719476815" -> "30064771135"  [ label = "CDG: "] 
  "68719476815" -> "30064771137"  [ label = "CDG: "] 
  "68719476815" -> "30064771136"  [ label = "CDG: "] 
  "68719476815" -> "30064771138"  [ label = "CDG: "] 
  "68719476748" -> "30064771086"  [ label = "CDG: "] 
  "68719476748" -> "30064771083"  [ label = "CDG: "] 
  "68719476748" -> "30064771082"  [ label = "CDG: "] 
  "68719476748" -> "30064771085"  [ label = "CDG: "] 
  "68719476748" -> "30064771084"  [ label = "CDG: "] 
  "68719476748" -> "68719476795"  [ label = "CDG: "] 
  "68719476748" -> "184683593728"  [ label = "CDG: "] 
  "30064771123" -> "68719476815"  [ label = "CDG: "] 
  "30064771123" -> "30064771125"  [ label = "CDG: "] 
  "30064771123" -> "30064771124"  [ label = "CDG: "] 
  "30064771123" -> "30064771133"  [ label = "CDG: "] 
  "30064771123" -> "30064771134"  [ label = "CDG: "] 
  "30064771138" -> "55834574849"  [ label = "CDG: "] 
  "30064771138" -> "30064771139"  [ label = "CDG: "] 
  "30064771138" -> "30064771141"  [ label = "CDG: "] 
  "30064771138" -> "30064771140"  [ label = "CDG: "] 
  "30064771138" -> "30064771142"  [ label = "CDG: "] 
  "30064771075" -> "30064771079"  [ label = "CDG: "] 
  "30064771075" -> "30064771078"  [ label = "CDG: "] 
  "30064771075" -> "30064771081"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771088"  [ label = "CDG: "] 
  "30064771087" -> "30064771122"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771089" -> "30064771091"  [ label = "CDG: "] 
  "30064771089" -> "30064771093"  [ label = "CDG: "] 
  "30064771089" -> "30064771092"  [ label = "CDG: "] 
  "30064771089" -> "30064771094"  [ label = "CDG: "] 
  "30064771089" -> "30064771103"  [ label = "CDG: "] 
  "30064771089" -> "184683593729"  [ label = "CDG: "] 
  "30064771103" -> "30064771104"  [ label = "CDG: "] 
  "30064771103" -> "30064771112"  [ label = "CDG: "] 
  "30064771103" -> "68719476795"  [ label = "CDG: "] 
  "30064771125" -> "30064771127"  [ label = "CDG: "] 
  "30064771125" -> "30064771126"  [ label = "CDG: "] 
  "30064771125" -> "30064771129"  [ label = "CDG: "] 
  "30064771125" -> "30064771128"  [ label = "CDG: "] 
  "30064771094" -> "30064771095"  [ label = "CDG: "] 
  "30064771094" -> "30064771097"  [ label = "CDG: "] 
  "30064771094" -> "30064771096"  [ label = "CDG: "] 
  "30064771094" -> "30064771103"  [ label = "CDG: "] 
  "30064771104" -> "30064771105"  [ label = "CDG: "] 
  "30064771104" -> "30064771107"  [ label = "CDG: "] 
  "30064771104" -> "30064771106"  [ label = "CDG: "] 
  "30064771112" -> "30064771113"  [ label = "CDG: "] 
  "30064771112" -> "30064771115"  [ label = "CDG: "] 
  "30064771112" -> "30064771114"  [ label = "CDG: "] 
  "30064771112" -> "30064771116"  [ label = "CDG: "] 
  "30064771116" -> "30064771117"  [ label = "CDG: "] 
  "30064771116" -> "30064771119"  [ label = "CDG: "] 
  "30064771116" -> "30064771118"  [ label = "CDG: "] 
  "30064771118" -> "68719476795"  [ label = "CDG: "] 
  "30064771118" -> "30064771121"  [ label = "CDG: "] 
  "30064771118" -> "30064771120"  [ label = "CDG: "] 
  "30064771128" -> "68719476815"  [ label = "CDG: "] 
  "30064771128" -> "30064771133"  [ label = "CDG: "] 
  "30064771128" -> "30064771134"  [ label = "CDG: "] 
  "30064771129" -> "68719476815"  [ label = "CDG: "] 
  "30064771129" -> "30064771131"  [ label = "CDG: "] 
  "30064771129" -> "30064771130"  [ label = "CDG: "] 
  "30064771129" -> "30064771133"  [ label = "CDG: "] 
  "30064771129" -> "30064771132"  [ label = "CDG: "] 
  "30064771129" -> "30064771134"  [ label = "CDG: "] 
  "30064771097" -> "30064771099"  [ label = "CDG: "] 
  "30064771097" -> "30064771098"  [ label = "CDG: "] 
  "30064771097" -> "30064771101"  [ label = "CDG: "] 
  "30064771097" -> "30064771100"  [ label = "CDG: "] 
  "30064771097" -> "30064771103"  [ label = "CDG: "] 
  "30064771107" -> "30064771109"  [ label = "CDG: "] 
  "30064771107" -> "30064771108"  [ label = "CDG: "] 
  "30064771107" -> "30064771111"  [ label = "CDG: "] 
  "30064771107" -> "30064771110"  [ label = "CDG: "] 
  "30064771099" -> "30064771103"  [ label = "CDG: "] 
  "30064771099" -> "30064771102"  [ label = "CDG: "] 
}
"""
)
