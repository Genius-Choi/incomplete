[33mval[0m [36mres921[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "DoCompute" {  
"111669149697" [label = <(METHOD,DoCompute)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,OpKernelContext* c)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    core::RefCountPtr&lt;Var&gt; v;
    OP_REQUIRES...,{
    core::RefCountPtr&lt;Var&gt; v;
    OP_REQUIRES...)<SUB>1</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.greaterThan,core::RefCountPtr&lt;Var&gt; v)<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.lessThan,core::RefCountPtr&lt;Var)<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.fieldAccess,core::RefCountPtr)<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,core,core::RefCountPtr&lt;Var)<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,RefCountPtr,RefCountPtr)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,Var,core::RefCountPtr&lt;Var)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,v,core::RefCountPtr&lt;Var&gt; v)<SUB>2</SUB>> ]
"30064771075" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(c, LookupResource(c, HandleFromI...)<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,c,OP_REQUIRES_OK(c, LookupResource(c, HandleFromI...)<SUB>3</SUB>> ]
"30064771076" [label = <(LookupResource,LookupResource(c, HandleFromInput(c, 0), &amp;v))<SUB>3</SUB>> ]
"68719476740" [label = <(IDENTIFIER,c,LookupResource(c, HandleFromInput(c, 0), &amp;v))<SUB>3</SUB>> ]
"30064771077" [label = <(HandleFromInput,HandleFromInput(c, 0))<SUB>3</SUB>> ]
"68719476741" [label = <(IDENTIFIER,c,HandleFromInput(c, 0))<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,0,HandleFromInput(c, 0))<SUB>3</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.addressOf,&amp;v)<SUB>3</SUB>> ]
"68719476742" [label = <(IDENTIFIER,v,LookupResource(c, HandleFromInput(c, 0), &amp;v))<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,Tensor* params: Tensor*)<SUB>4</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,* params = v-&gt;tensor())<SUB>4</SUB>> ]
"68719476743" [label = <(IDENTIFIER,params,* params = v-&gt;tensor())<SUB>4</SUB>> ]
"30064771080" [label = <(tensor,v-&gt;tensor())<SUB>4</SUB>> ]
"68719476744" [label = <(IDENTIFIER,v,v-&gt;tensor())<SUB>4</SUB>> ]
"94489280513" [label = <(LOCAL,const Tensor&amp; indices: Tensor&amp;)<SUB>5</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,&amp; indices = c-&gt;input(1))<SUB>5</SUB>> ]
"68719476745" [label = <(IDENTIFIER,indices,&amp; indices = c-&gt;input(1))<SUB>5</SUB>> ]
"30064771082" [label = <(input,c-&gt;input(1))<SUB>5</SUB>> ]
"68719476746" [label = <(IDENTIFIER,c,c-&gt;input(1))<SUB>5</SUB>> ]
"90194313217" [label = <(LITERAL,1,c-&gt;input(1))<SUB>5</SUB>> ]
"94489280514" [label = <(LOCAL,const Tensor&amp; updates: Tensor&amp;)<SUB>6</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,&amp; updates = c-&gt;input(2))<SUB>6</SUB>> ]
"68719476747" [label = <(IDENTIFIER,updates,&amp; updates = c-&gt;input(2))<SUB>6</SUB>> ]
"30064771084" [label = <(input,c-&gt;input(2))<SUB>6</SUB>> ]
"68719476748" [label = <(IDENTIFIER,c,c-&gt;input(2))<SUB>6</SUB>> ]
"90194313218" [label = <(LITERAL,2,c-&gt;input(2))<SUB>6</SUB>> ]
"30064771085" [label = <(OP_REQUIRES,OP_REQUIRES(c,
                updates.dims() =...)<SUB>9</SUB>> ]
"68719476749" [label = <(IDENTIFIER,c,OP_REQUIRES(c,
                updates.dims() =...)<SUB>9</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.logicalOr,updates.dims() == 0 ||
                    upda...)<SUB>10</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.equals,updates.dims() == 0)<SUB>10</SUB>> ]
"30064771088" [label = <(dims,updates.dims())<SUB>10</SUB>> ]
"68719476750" [label = <(IDENTIFIER,updates,updates.dims())<SUB>10</SUB>> ]
"90194313219" [label = <(LITERAL,0,updates.dims() == 0)<SUB>10</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.equals,updates.dims() == indices.dims() + params-&gt;dims...)<SUB>11</SUB>> ]
"30064771090" [label = <(dims,updates.dims())<SUB>11</SUB>> ]
"68719476751" [label = <(IDENTIFIER,updates,updates.dims())<SUB>11</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.subtraction,indices.dims() + params-&gt;dims() - 1)<SUB>11</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.addition,indices.dims() + params-&gt;dims())<SUB>11</SUB>> ]
"30064771093" [label = <(dims,indices.dims())<SUB>11</SUB>> ]
"68719476752" [label = <(IDENTIFIER,indices,indices.dims())<SUB>11</SUB>> ]
"30064771094" [label = <(dims,params-&gt;dims())<SUB>11</SUB>> ]
"68719476753" [label = <(IDENTIFIER,params,params-&gt;dims())<SUB>11</SUB>> ]
"90194313220" [label = <(LITERAL,1,indices.dims() + params-&gt;dims() - 1)<SUB>11</SUB>> ]
"30064771095" [label = <(InvalidArgument,errors::InvalidArgument(
                    &quot;M...)<SUB>12</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;Must have updates.shape = indices.shape + &quot;
  ...,errors::InvalidArgument(
                    &quot;M...)<SUB>13</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;updates.shape &quot;,errors::InvalidArgument(
                    &quot;M...)<SUB>15</SUB>> ]
"30064771096" [label = <(DebugString,updates.shape().DebugString())<SUB>15</SUB>> ]
"30064771097" [label = <(shape,updates.shape())<SUB>15</SUB>> ]
"68719476754" [label = <(IDENTIFIER,updates,updates.shape())<SUB>15</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;, indices.shape &quot;,errors::InvalidArgument(
                    &quot;M...)<SUB>16</SUB>> ]
"30064771098" [label = <(DebugString,indices.shape().DebugString())<SUB>16</SUB>> ]
"30064771099" [label = <(shape,indices.shape())<SUB>16</SUB>> ]
"68719476755" [label = <(IDENTIFIER,indices,indices.shape())<SUB>16</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;, params.shape &quot;,errors::InvalidArgument(
                    &quot;M...)<SUB>17</SUB>> ]
"30064771100" [label = <(DebugString,params-&gt;shape().DebugString())<SUB>17</SUB>> ]
"30064771101" [label = <(shape,params-&gt;shape())<SUB>17</SUB>> ]
"68719476756" [label = <(IDENTIFIER,params,params-&gt;shape())<SUB>17</SUB>> ]
"94489280515" [label = <(LOCAL,const int64_t N_big: int64_t)<SUB>20</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,N_big = indices.NumElements())<SUB>20</SUB>> ]
"68719476757" [label = <(IDENTIFIER,N_big,N_big = indices.NumElements())<SUB>20</SUB>> ]
"30064771103" [label = <(NumElements,indices.NumElements())<SUB>20</SUB>> ]
"68719476758" [label = <(IDENTIFIER,indices,indices.NumElements())<SUB>20</SUB>> ]
"30064771104" [label = <(OP_REQUIRES,OP_REQUIRES(
        c, N_big &lt;= std::numeric_l...)<SUB>21</SUB>> ]
"68719476759" [label = <(IDENTIFIER,c,OP_REQUIRES(
        c, N_big &lt;= std::numeric_l...)<SUB>22</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.greaterThan,N_big &lt;= std::numeric_limits&lt;Index&gt;::max())<SUB>22</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.lessThan,N_big &lt;= std::numeric_limits&lt;Index)<SUB>22</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.lessEqualsThan,N_big &lt;= std::numeric_limits)<SUB>22</SUB>> ]
"68719476760" [label = <(IDENTIFIER,N_big,N_big &lt;= std::numeric_limits)<SUB>22</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>22</SUB>> ]
"68719476761" [label = <(IDENTIFIER,std,N_big &lt;= std::numeric_limits)<SUB>22</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>22</SUB>> ]
"68719476762" [label = <(IDENTIFIER,Index,N_big &lt;= std::numeric_limits&lt;Index)<SUB>22</SUB>> ]
"30064771109" [label = <(max,::max())<SUB>22</SUB>> ]
"30064771110" [label = <(InvalidArgument,errors::InvalidArgument(&quot;indices has too many e...)<SUB>23</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;indices has too many elements for &quot;,errors::InvalidArgument(&quot;indices has too many e...)<SUB>23</SUB>> ]
"30064771111" [label = <(DataTypeString,DataTypeString(DataTypeToEnum&lt;Index&gt;::v()))<SUB>24</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.greaterThan,DataTypeToEnum&lt;Index&gt;::v())<SUB>24</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.lessThan,DataTypeToEnum&lt;Index)<SUB>24</SUB>> ]
"68719476763" [label = <(IDENTIFIER,DataTypeToEnum,DataTypeToEnum&lt;Index)<SUB>24</SUB>> ]
"68719476764" [label = <(IDENTIFIER,Index,DataTypeToEnum&lt;Index)<SUB>24</SUB>> ]
"30064771114" [label = <(v,::v())<SUB>24</SUB>> ]
"90194313226" [label = <(LITERAL,&quot; indexing: &quot;,errors::InvalidArgument(&quot;indices has too many e...)<SUB>25</SUB>> ]
"68719476765" [label = <(IDENTIFIER,N_big,errors::InvalidArgument(&quot;indices has too many e...)<SUB>25</SUB>> ]
"90194313227" [label = <(LITERAL,&quot; &gt; &quot;,errors::InvalidArgument(&quot;indices has too many e...)<SUB>25</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;Index&gt;::max())<SUB>26</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;Index)<SUB>26</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>26</SUB>> ]
"68719476766" [label = <(IDENTIFIER,std,std::numeric_limits&lt;Index)<SUB>26</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>26</SUB>> ]
"68719476767" [label = <(IDENTIFIER,Index,std::numeric_limits&lt;Index)<SUB>26</SUB>> ]
"30064771118" [label = <(max,::max())<SUB>26</SUB>> ]
"94489280516" [label = <(LOCAL,const Index N: Index)<SUB>27</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.assignment,N = static_cast&lt;Index&gt;(N_big))<SUB>27</SUB>> ]
"68719476768" [label = <(IDENTIFIER,N,N = static_cast&lt;Index&gt;(N_big))<SUB>27</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.cast,static_cast&lt;Index&gt;(N_big))<SUB>27</SUB>> ]
"184683593728" [label = <(UNKNOWN,Index,Index)<SUB>27</SUB>> ]
"68719476769" [label = <(IDENTIFIER,N_big,static_cast&lt;Index&gt;(N_big))<SUB>27</SUB>> ]
"30064771121" [label = <(OP_REQUIRES,OP_REQUIRES(
        c, params-&gt;dim_size(0) &lt;= ...)<SUB>28</SUB>> ]
"68719476770" [label = <(IDENTIFIER,c,OP_REQUIRES(
        c, params-&gt;dim_size(0) &lt;= ...)<SUB>29</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.greaterThan,params-&gt;dim_size(0) &lt;= std::numeric_limits&lt;Inde...)<SUB>29</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.lessThan,params-&gt;dim_size(0) &lt;= std::numeric_limits&lt;Index)<SUB>29</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.lessEqualsThan,params-&gt;dim_size(0) &lt;= std::numeric_limits)<SUB>29</SUB>> ]
"30064771125" [label = <(dim_size,params-&gt;dim_size(0))<SUB>29</SUB>> ]
"68719476771" [label = <(IDENTIFIER,params,params-&gt;dim_size(0))<SUB>29</SUB>> ]
"90194313228" [label = <(LITERAL,0,params-&gt;dim_size(0))<SUB>29</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>29</SUB>> ]
"68719476772" [label = <(IDENTIFIER,std,params-&gt;dim_size(0) &lt;= std::numeric_limits)<SUB>29</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>29</SUB>> ]
"68719476773" [label = <(IDENTIFIER,Index,params-&gt;dim_size(0) &lt;= std::numeric_limits&lt;Index)<SUB>29</SUB>> ]
"30064771127" [label = <(max,::max())<SUB>29</SUB>> ]
"30064771128" [label = <(InvalidArgument,errors::InvalidArgument(&quot;params.shape[0] too la...)<SUB>30</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;params.shape[0] too large for &quot;,errors::InvalidArgument(&quot;params.shape[0] too la...)<SUB>30</SUB>> ]
"30064771129" [label = <(DataTypeString,DataTypeString(DataTypeToEnum&lt;Index&gt;::v()))<SUB>31</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.greaterThan,DataTypeToEnum&lt;Index&gt;::v())<SUB>31</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.lessThan,DataTypeToEnum&lt;Index)<SUB>31</SUB>> ]
"68719476774" [label = <(IDENTIFIER,DataTypeToEnum,DataTypeToEnum&lt;Index)<SUB>31</SUB>> ]
"68719476775" [label = <(IDENTIFIER,Index,DataTypeToEnum&lt;Index)<SUB>31</SUB>> ]
"30064771132" [label = <(v,::v())<SUB>31</SUB>> ]
"90194313230" [label = <(LITERAL,&quot; indexing: &quot;,errors::InvalidArgument(&quot;params.shape[0] too la...)<SUB>32</SUB>> ]
"30064771133" [label = <(dim_size,params-&gt;dim_size(0))<SUB>32</SUB>> ]
"68719476776" [label = <(IDENTIFIER,params,params-&gt;dim_size(0))<SUB>32</SUB>> ]
"90194313231" [label = <(LITERAL,0,params-&gt;dim_size(0))<SUB>32</SUB>> ]
"90194313232" [label = <(LITERAL,&quot; &gt; &quot;,errors::InvalidArgument(&quot;params.shape[0] too la...)<SUB>32</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;Index&gt;::max())<SUB>33</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;Index)<SUB>33</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>33</SUB>> ]
"68719476777" [label = <(IDENTIFIER,std,std::numeric_limits&lt;Index)<SUB>33</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>33</SUB>> ]
"68719476778" [label = <(IDENTIFIER,Index,std::numeric_limits&lt;Index)<SUB>33</SUB>> ]
"30064771137" [label = <(max,::max())<SUB>33</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (N &gt; 0))<SUB>35</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.greaterThan,N &gt; 0)<SUB>35</SUB>> ]
"68719476779" [label = <(IDENTIFIER,N,N &gt; 0)<SUB>35</SUB>> ]
"90194313233" [label = <(LITERAL,0,N &gt; 0)<SUB>35</SUB>> ]
"25769803778" [label = <(BLOCK,{
      auto indices_flat = indices.flat&lt;Index&gt;...,{
      auto indices_flat = indices.flat&lt;Index&gt;...)<SUB>35</SUB>> ]
"94489280517" [label = <(LOCAL,auto indices_flat: auto)<SUB>36</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.assignment,indices_flat = indices.flat&lt;Index&gt;())<SUB>36</SUB>> ]
"68719476780" [label = <(IDENTIFIER,indices_flat,indices_flat = indices.flat&lt;Index&gt;())<SUB>36</SUB>> ]
"30064771140" [label = <(flat&lt;Index&gt;,indices.flat&lt;Index&gt;())<SUB>36</SUB>> ]
"68719476781" [label = <(IDENTIFIER,indices,indices.flat&lt;Index&gt;())<SUB>36</SUB>> ]
"94489280518" [label = <(LOCAL,auto params_flat: auto)<SUB>37</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.assignment,params_flat = params-&gt;flat_outer_dims&lt;T&gt;())<SUB>37</SUB>> ]
"68719476782" [label = <(IDENTIFIER,params_flat,params_flat = params-&gt;flat_outer_dims&lt;T&gt;())<SUB>37</SUB>> ]
"30064771142" [label = <(flat_outer_dims&lt;T&gt;,params-&gt;flat_outer_dims&lt;T&gt;())<SUB>37</SUB>> ]
"68719476783" [label = <(IDENTIFIER,params,params-&gt;flat_outer_dims&lt;T&gt;())<SUB>37</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (TensorShapeUtils::IsScalar(updates.shape())))<SUB>38</SUB>> ]
"30064771143" [label = <(IsScalar,TensorShapeUtils::IsScalar(updates.shape()))<SUB>38</SUB>> ]
"30064771144" [label = <(shape,updates.shape())<SUB>38</SUB>> ]
"68719476784" [label = <(IDENTIFIER,updates,updates.shape())<SUB>38</SUB>> ]
"25769803779" [label = <(BLOCK,{
        const auto update = updates.scalar&lt;T&gt;...,{
        const auto update = updates.scalar&lt;T&gt;...)<SUB>38</SUB>> ]
"94489280519" [label = <(LOCAL,const auto update: auto)<SUB>39</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.assignment,update = updates.scalar&lt;T&gt;())<SUB>39</SUB>> ]
"68719476785" [label = <(IDENTIFIER,update,update = updates.scalar&lt;T&gt;())<SUB>39</SUB>> ]
"30064771146" [label = <(scalar&lt;T&gt;,updates.scalar&lt;T&gt;())<SUB>39</SUB>> ]
"68719476786" [label = <(IDENTIFIER,updates,updates.scalar&lt;T&gt;())<SUB>39</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.expressionList,functor::ScatterScalarFunctor&lt;Device, T, Index,...)<SUB>41</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.lessThan,functor::ScatterScalarFunctor&lt;Device)<SUB>41</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.fieldAccess,functor::ScatterScalarFunctor)<SUB>41</SUB>> ]
"68719476787" [label = <(IDENTIFIER,functor,functor::ScatterScalarFunctor&lt;Device)<SUB>41</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,ScatterScalarFunctor,ScatterScalarFunctor)<SUB>41</SUB>> ]
"68719476788" [label = <(IDENTIFIER,Device,functor::ScatterScalarFunctor&lt;Device)<SUB>41</SUB>> ]
"68719476789" [label = <(IDENTIFIER,T,functor::ScatterScalarFunctor&lt;Device, T, Index,...)<SUB>41</SUB>> ]
"68719476790" [label = <(IDENTIFIER,Index,functor::ScatterScalarFunctor&lt;Device, T, Index,...)<SUB>41</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.greaterThan,op&gt; functor)<SUB>41</SUB>> ]
"68719476791" [label = <(IDENTIFIER,op,op&gt; functor)<SUB>41</SUB>> ]
"68719476792" [label = <(IDENTIFIER,functor,op&gt; functor)<SUB>41</SUB>> ]
"94489280520" [label = <(LOCAL,const Index bad_i: Index)<SUB>42</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.assignment,bad_i = functor(c, c-&gt;template eigen_device&lt;Dev...)<SUB>42</SUB>> ]
"68719476793" [label = <(IDENTIFIER,bad_i,bad_i = functor(c, c-&gt;template eigen_device&lt;Dev...)<SUB>42</SUB>> ]
"30064771152" [label = <(functor,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>42</SUB>> ]
"68719476794" [label = <(IDENTIFIER,c,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>42</SUB>> ]
"30064771153" [label = <(eigen_device&lt;Device&gt;,c-&gt;template eigen_device&lt;Device&gt;())<SUB>42</SUB>> ]
"68719476795" [label = <(IDENTIFIER,c,c-&gt;template eigen_device&lt;Device&gt;())<SUB>42</SUB>> ]
"68719476796" [label = <(IDENTIFIER,params_flat,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>43</SUB>> ]
"68719476797" [label = <(IDENTIFIER,update,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>43</SUB>> ]
"68719476798" [label = <(IDENTIFIER,indices_flat,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>43</SUB>> ]
"30064771154" [label = <(OP_REQUIRES,OP_REQUIRES(c, bad_i &lt; 0,
                    e...)<SUB>44</SUB>> ]
"68719476799" [label = <(IDENTIFIER,c,OP_REQUIRES(c, bad_i &lt; 0,
                    e...)<SUB>44</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.lessThan,bad_i &lt; 0)<SUB>44</SUB>> ]
"68719476800" [label = <(IDENTIFIER,bad_i,bad_i &lt; 0)<SUB>44</SUB>> ]
"90194313234" [label = <(LITERAL,0,bad_i &lt; 0)<SUB>44</SUB>> ]
"30064771156" [label = <(InvalidArgument,errors::InvalidArgument(
                      ...)<SUB>45</SUB>> ]
"90194313235" [label = <(LITERAL,&quot;indices&quot;,errors::InvalidArgument(
                      ...)<SUB>46</SUB>> ]
"30064771157" [label = <(SliceDebugString,SliceDebugString(indices.shape(), bad_i))<SUB>46</SUB>> ]
"30064771158" [label = <(shape,indices.shape())<SUB>46</SUB>> ]
"68719476801" [label = <(IDENTIFIER,indices,indices.shape())<SUB>46</SUB>> ]
"68719476802" [label = <(IDENTIFIER,bad_i,SliceDebugString(indices.shape(), bad_i))<SUB>46</SUB>> ]
"90194313236" [label = <(LITERAL,&quot; = &quot;,errors::InvalidArgument(
                      ...)<SUB>47</SUB>> ]
"30064771159" [label = <(indices_flat,indices_flat(bad_i))<SUB>47</SUB>> ]
"68719476803" [label = <(IDENTIFIER,bad_i,indices_flat(bad_i))<SUB>47</SUB>> ]
"90194313237" [label = <(LITERAL,&quot; is not in [0, &quot;,errors::InvalidArgument(
                      ...)<SUB>47</SUB>> ]
"30064771160" [label = <(dim_size,params-&gt;dim_size(0))<SUB>48</SUB>> ]
"68719476804" [label = <(IDENTIFIER,params,params-&gt;dim_size(0))<SUB>48</SUB>> ]
"90194313238" [label = <(LITERAL,0,params-&gt;dim_size(0))<SUB>48</SUB>> ]
"90194313239" [label = <(LITERAL,&quot;)&quot;,errors::InvalidArgument(
                      ...)<SUB>48</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>49</SUB>> ]
"25769803780" [label = <(BLOCK,{
        int64_t num_updates = updates.NumElem...,{
        int64_t num_updates = updates.NumElem...)<SUB>49</SUB>> ]
"94489280521" [label = <(LOCAL,int64_t num_updates: int64_t)<SUB>50</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.assignment,num_updates = updates.NumElements())<SUB>50</SUB>> ]
"68719476805" [label = <(IDENTIFIER,num_updates,num_updates = updates.NumElements())<SUB>50</SUB>> ]
"30064771162" [label = <(NumElements,updates.NumElements())<SUB>50</SUB>> ]
"68719476806" [label = <(IDENTIFIER,updates,updates.NumElements())<SUB>50</SUB>> ]
"30064771163" [label = <(OP_REQUIRES,OP_REQUIRES(
            c, TensorShapeUtils::S...)<SUB>51</SUB>> ]
"68719476807" [label = <(IDENTIFIER,c,OP_REQUIRES(
            c, TensorShapeUtils::S...)<SUB>52</SUB>> ]
"30064771164" [label = <(StartsWith,TensorShapeUtils::StartsWith(updates.shape(), i...)<SUB>52</SUB>> ]
"30064771165" [label = <(shape,updates.shape())<SUB>52</SUB>> ]
"68719476808" [label = <(IDENTIFIER,updates,updates.shape())<SUB>52</SUB>> ]
"30064771166" [label = <(shape,indices.shape())<SUB>52</SUB>> ]
"68719476809" [label = <(IDENTIFIER,indices,indices.shape())<SUB>52</SUB>> ]
"30064771167" [label = <(InvalidArgument,errors::InvalidArgument(
                &quot;The s...)<SUB>53</SUB>> ]
"90194313240" [label = <(LITERAL,&quot;The shape of indices (&quot;,errors::InvalidArgument(
                &quot;The s...)<SUB>54</SUB>> ]
"30064771168" [label = <(DebugString,indices.shape().DebugString())<SUB>54</SUB>> ]
"30064771169" [label = <(shape,indices.shape())<SUB>54</SUB>> ]
"68719476810" [label = <(IDENTIFIER,indices,indices.shape())<SUB>54</SUB>> ]
"90194313241" [label = <(LITERAL,&quot;) must be a prefix of the shape of updates (&quot;,errors::InvalidArgument(
                &quot;The s...)<SUB>55</SUB>> ]
"30064771170" [label = <(DebugString,updates.shape().DebugString())<SUB>56</SUB>> ]
"30064771171" [label = <(shape,updates.shape())<SUB>56</SUB>> ]
"68719476811" [label = <(IDENTIFIER,updates,updates.shape())<SUB>56</SUB>> ]
"90194313242" [label = <(LITERAL,&quot;)&quot;,errors::InvalidArgument(
                &quot;The s...)<SUB>56</SUB>> ]
"94489280522" [label = <(LOCAL,auto updates_flat: auto)<SUB>57</SUB>> ]
"30064771172" [label = <(&lt;operator&gt;.assignment,updates_flat = updates.shaped&lt;T, 2&gt;({N, num_upd...)<SUB>57</SUB>> ]
"68719476812" [label = <(IDENTIFIER,updates_flat,updates_flat = updates.shaped&lt;T, 2&gt;({N, num_upd...)<SUB>57</SUB>> ]
"30064771173" [label = <(shaped&lt;T, 2&gt;,updates.shaped&lt;T, 2&gt;({N, num_updates / N}))<SUB>57</SUB>> ]
"68719476813" [label = <(IDENTIFIER,updates,updates.shaped&lt;T, 2&gt;({N, num_updates / N}))<SUB>57</SUB>> ]
"30064771174" [label = <(&lt;operator&gt;.arrayInitializer,{N, num_updates / N})<SUB>57</SUB>> ]
"68719476814" [label = <(IDENTIFIER,N,{N, num_updates / N})<SUB>57</SUB>> ]
"30064771175" [label = <(&lt;operator&gt;.division,num_updates / N)<SUB>57</SUB>> ]
"68719476815" [label = <(IDENTIFIER,num_updates,num_updates / N)<SUB>57</SUB>> ]
"68719476816" [label = <(IDENTIFIER,N,num_updates / N)<SUB>57</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;.expressionList,functor::ScatterFunctor&lt;Device, T, Index, op&gt; f...)<SUB>59</SUB>> ]
"30064771177" [label = <(&lt;operator&gt;.lessThan,functor::ScatterFunctor&lt;Device)<SUB>59</SUB>> ]
"30064771178" [label = <(&lt;operator&gt;.fieldAccess,functor::ScatterFunctor)<SUB>59</SUB>> ]
"68719476817" [label = <(IDENTIFIER,functor,functor::ScatterFunctor&lt;Device)<SUB>59</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,ScatterFunctor,ScatterFunctor)<SUB>59</SUB>> ]
"68719476818" [label = <(IDENTIFIER,Device,functor::ScatterFunctor&lt;Device)<SUB>59</SUB>> ]
"68719476819" [label = <(IDENTIFIER,T,functor::ScatterFunctor&lt;Device, T, Index, op&gt; f...)<SUB>59</SUB>> ]
"68719476820" [label = <(IDENTIFIER,Index,functor::ScatterFunctor&lt;Device, T, Index, op&gt; f...)<SUB>59</SUB>> ]
"30064771179" [label = <(&lt;operator&gt;.greaterThan,op&gt; functor)<SUB>59</SUB>> ]
"68719476821" [label = <(IDENTIFIER,op,op&gt; functor)<SUB>59</SUB>> ]
"68719476822" [label = <(IDENTIFIER,functor,op&gt; functor)<SUB>59</SUB>> ]
"94489280523" [label = <(LOCAL,const Index bad_i: Index)<SUB>60</SUB>> ]
"30064771180" [label = <(&lt;operator&gt;.assignment,bad_i = functor(c, c-&gt;template eigen_device&lt;Dev...)<SUB>60</SUB>> ]
"68719476823" [label = <(IDENTIFIER,bad_i,bad_i = functor(c, c-&gt;template eigen_device&lt;Dev...)<SUB>60</SUB>> ]
"30064771181" [label = <(functor,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>60</SUB>> ]
"68719476824" [label = <(IDENTIFIER,c,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>60</SUB>> ]
"30064771182" [label = <(eigen_device&lt;Device&gt;,c-&gt;template eigen_device&lt;Device&gt;())<SUB>60</SUB>> ]
"68719476825" [label = <(IDENTIFIER,c,c-&gt;template eigen_device&lt;Device&gt;())<SUB>60</SUB>> ]
"68719476826" [label = <(IDENTIFIER,params_flat,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>61</SUB>> ]
"68719476827" [label = <(IDENTIFIER,updates_flat,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>61</SUB>> ]
"68719476828" [label = <(IDENTIFIER,indices_flat,functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
...)<SUB>61</SUB>> ]
"30064771183" [label = <(OP_REQUIRES,OP_REQUIRES(c, bad_i &lt; 0,
                    e...)<SUB>62</SUB>> ]
"68719476829" [label = <(IDENTIFIER,c,OP_REQUIRES(c, bad_i &lt; 0,
                    e...)<SUB>62</SUB>> ]
"30064771184" [label = <(&lt;operator&gt;.lessThan,bad_i &lt; 0)<SUB>62</SUB>> ]
"68719476830" [label = <(IDENTIFIER,bad_i,bad_i &lt; 0)<SUB>62</SUB>> ]
"90194313243" [label = <(LITERAL,0,bad_i &lt; 0)<SUB>62</SUB>> ]
"30064771185" [label = <(InvalidArgument,errors::InvalidArgument(
                      ...)<SUB>63</SUB>> ]
"90194313244" [label = <(LITERAL,&quot;indices&quot;,errors::InvalidArgument(
                      ...)<SUB>64</SUB>> ]
"30064771186" [label = <(SliceDebugString,SliceDebugString(indices.shape(), bad_i))<SUB>64</SUB>> ]
"30064771187" [label = <(shape,indices.shape())<SUB>64</SUB>> ]
"68719476831" [label = <(IDENTIFIER,indices,indices.shape())<SUB>64</SUB>> ]
"68719476832" [label = <(IDENTIFIER,bad_i,SliceDebugString(indices.shape(), bad_i))<SUB>64</SUB>> ]
"90194313245" [label = <(LITERAL,&quot; = &quot;,errors::InvalidArgument(
                      ...)<SUB>65</SUB>> ]
"30064771188" [label = <(indices_flat,indices_flat(bad_i))<SUB>65</SUB>> ]
"68719476833" [label = <(IDENTIFIER,bad_i,indices_flat(bad_i))<SUB>65</SUB>> ]
"90194313246" [label = <(LITERAL,&quot; is not in [0, &quot;,errors::InvalidArgument(
                      ...)<SUB>65</SUB>> ]
"30064771189" [label = <(dim_size,params-&gt;dim_size(0))<SUB>66</SUB>> ]
"68719476834" [label = <(IDENTIFIER,params,params-&gt;dim_size(0))<SUB>66</SUB>> ]
"90194313247" [label = <(LITERAL,0,params-&gt;dim_size(0))<SUB>66</SUB>> ]
"90194313248" [label = <(LITERAL,&quot;)&quot;,errors::InvalidArgument(
                      ...)<SUB>66</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771102"  [ label = "AST: "] 
  "25769803777" -> "30064771104"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771119"  [ label = "AST: "] 
  "25769803777" -> "30064771121"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476736"  [ label = "AST: "] 
  "30064771074" -> "55834574848"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "90194313216"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "90194313217"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476748"  [ label = "AST: "] 
  "30064771084" -> "90194313218"  [ label = "AST: "] 
  "30064771085" -> "68719476749"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "30064771095"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "30064771089"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "90194313219"  [ label = "AST: "] 
  "30064771088" -> "68719476750"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "68719476751"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "90194313220"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "68719476752"  [ label = "AST: "] 
  "30064771094" -> "68719476753"  [ label = "AST: "] 
  "30064771095" -> "90194313221"  [ label = "AST: "] 
  "30064771095" -> "90194313222"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "90194313223"  [ label = "AST: "] 
  "30064771095" -> "30064771098"  [ label = "AST: "] 
  "30064771095" -> "90194313224"  [ label = "AST: "] 
  "30064771095" -> "30064771100"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476754"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476755"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "68719476756"  [ label = "AST: "] 
  "30064771102" -> "68719476757"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476758"  [ label = "AST: "] 
  "30064771104" -> "68719476759"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "30064771110"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "30064771109"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "68719476762"  [ label = "AST: "] 
  "30064771107" -> "68719476760"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "68719476761"  [ label = "AST: "] 
  "30064771108" -> "55834574849"  [ label = "AST: "] 
  "30064771110" -> "90194313225"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771110" -> "90194313226"  [ label = "AST: "] 
  "30064771110" -> "68719476765"  [ label = "AST: "] 
  "30064771110" -> "90194313227"  [ label = "AST: "] 
  "30064771110" -> "30064771115"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771112" -> "30064771114"  [ label = "AST: "] 
  "30064771113" -> "68719476763"  [ label = "AST: "] 
  "30064771113" -> "68719476764"  [ label = "AST: "] 
  "30064771115" -> "30064771116"  [ label = "AST: "] 
  "30064771115" -> "30064771118"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771116" -> "68719476767"  [ label = "AST: "] 
  "30064771117" -> "68719476766"  [ label = "AST: "] 
  "30064771117" -> "55834574850"  [ label = "AST: "] 
  "30064771119" -> "68719476768"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771120" -> "184683593728"  [ label = "AST: "] 
  "30064771120" -> "68719476769"  [ label = "AST: "] 
  "30064771121" -> "68719476770"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "30064771128"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771122" -> "30064771127"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771123" -> "68719476773"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "30064771126"  [ label = "AST: "] 
  "30064771125" -> "68719476771"  [ label = "AST: "] 
  "30064771125" -> "90194313228"  [ label = "AST: "] 
  "30064771126" -> "68719476772"  [ label = "AST: "] 
  "30064771126" -> "55834574851"  [ label = "AST: "] 
  "30064771128" -> "90194313229"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771128" -> "90194313230"  [ label = "AST: "] 
  "30064771128" -> "30064771133"  [ label = "AST: "] 
  "30064771128" -> "90194313232"  [ label = "AST: "] 
  "30064771128" -> "30064771134"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771130" -> "30064771132"  [ label = "AST: "] 
  "30064771131" -> "68719476774"  [ label = "AST: "] 
  "30064771131" -> "68719476775"  [ label = "AST: "] 
  "30064771133" -> "68719476776"  [ label = "AST: "] 
  "30064771133" -> "90194313231"  [ label = "AST: "] 
  "30064771134" -> "30064771135"  [ label = "AST: "] 
  "30064771134" -> "30064771137"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771135" -> "68719476778"  [ label = "AST: "] 
  "30064771136" -> "68719476777"  [ label = "AST: "] 
  "30064771136" -> "55834574852"  [ label = "AST: "] 
  "47244640256" -> "30064771138"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771138" -> "68719476779"  [ label = "AST: "] 
  "30064771138" -> "90194313233"  [ label = "AST: "] 
  "25769803778" -> "94489280517"  [ label = "AST: "] 
  "25769803778" -> "30064771139"  [ label = "AST: "] 
  "25769803778" -> "94489280518"  [ label = "AST: "] 
  "25769803778" -> "30064771141"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "30064771139" -> "68719476780"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771140" -> "68719476781"  [ label = "AST: "] 
  "30064771141" -> "68719476782"  [ label = "AST: "] 
  "30064771141" -> "30064771142"  [ label = "AST: "] 
  "30064771142" -> "68719476783"  [ label = "AST: "] 
  "47244640257" -> "30064771143"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "47244640258"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771144" -> "68719476784"  [ label = "AST: "] 
  "25769803779" -> "94489280519"  [ label = "AST: "] 
  "25769803779" -> "30064771145"  [ label = "AST: "] 
  "25769803779" -> "30064771147"  [ label = "AST: "] 
  "25769803779" -> "94489280520"  [ label = "AST: "] 
  "25769803779" -> "30064771151"  [ label = "AST: "] 
  "25769803779" -> "30064771154"  [ label = "AST: "] 
  "30064771145" -> "68719476785"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771146" -> "68719476786"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771147" -> "68719476789"  [ label = "AST: "] 
  "30064771147" -> "68719476790"  [ label = "AST: "] 
  "30064771147" -> "30064771150"  [ label = "AST: "] 
  "30064771148" -> "30064771149"  [ label = "AST: "] 
  "30064771148" -> "68719476788"  [ label = "AST: "] 
  "30064771149" -> "68719476787"  [ label = "AST: "] 
  "30064771149" -> "55834574853"  [ label = "AST: "] 
  "30064771150" -> "68719476791"  [ label = "AST: "] 
  "30064771150" -> "68719476792"  [ label = "AST: "] 
  "30064771151" -> "68719476793"  [ label = "AST: "] 
  "30064771151" -> "30064771152"  [ label = "AST: "] 
  "30064771152" -> "68719476794"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771152" -> "68719476796"  [ label = "AST: "] 
  "30064771152" -> "68719476797"  [ label = "AST: "] 
  "30064771152" -> "68719476798"  [ label = "AST: "] 
  "30064771153" -> "68719476795"  [ label = "AST: "] 
  "30064771154" -> "68719476799"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771154" -> "30064771156"  [ label = "AST: "] 
  "30064771155" -> "68719476800"  [ label = "AST: "] 
  "30064771155" -> "90194313234"  [ label = "AST: "] 
  "30064771156" -> "90194313235"  [ label = "AST: "] 
  "30064771156" -> "30064771157"  [ label = "AST: "] 
  "30064771156" -> "90194313236"  [ label = "AST: "] 
  "30064771156" -> "30064771159"  [ label = "AST: "] 
  "30064771156" -> "90194313237"  [ label = "AST: "] 
  "30064771156" -> "30064771160"  [ label = "AST: "] 
  "30064771156" -> "90194313239"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771157" -> "68719476802"  [ label = "AST: "] 
  "30064771158" -> "68719476801"  [ label = "AST: "] 
  "30064771159" -> "68719476803"  [ label = "AST: "] 
  "30064771160" -> "68719476804"  [ label = "AST: "] 
  "30064771160" -> "90194313238"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "94489280521"  [ label = "AST: "] 
  "25769803780" -> "30064771161"  [ label = "AST: "] 
  "25769803780" -> "30064771163"  [ label = "AST: "] 
  "25769803780" -> "94489280522"  [ label = "AST: "] 
  "25769803780" -> "30064771172"  [ label = "AST: "] 
  "25769803780" -> "30064771176"  [ label = "AST: "] 
  "25769803780" -> "94489280523"  [ label = "AST: "] 
  "25769803780" -> "30064771180"  [ label = "AST: "] 
  "25769803780" -> "30064771183"  [ label = "AST: "] 
  "30064771161" -> "68719476805"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771162" -> "68719476806"  [ label = "AST: "] 
  "30064771163" -> "68719476807"  [ label = "AST: "] 
  "30064771163" -> "30064771164"  [ label = "AST: "] 
  "30064771163" -> "30064771167"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771164" -> "30064771166"  [ label = "AST: "] 
  "30064771165" -> "68719476808"  [ label = "AST: "] 
  "30064771166" -> "68719476809"  [ label = "AST: "] 
  "30064771167" -> "90194313240"  [ label = "AST: "] 
  "30064771167" -> "30064771168"  [ label = "AST: "] 
  "30064771167" -> "90194313241"  [ label = "AST: "] 
  "30064771167" -> "30064771170"  [ label = "AST: "] 
  "30064771167" -> "90194313242"  [ label = "AST: "] 
  "30064771168" -> "30064771169"  [ label = "AST: "] 
  "30064771169" -> "68719476810"  [ label = "AST: "] 
  "30064771170" -> "30064771171"  [ label = "AST: "] 
  "30064771171" -> "68719476811"  [ label = "AST: "] 
  "30064771172" -> "68719476812"  [ label = "AST: "] 
  "30064771172" -> "30064771173"  [ label = "AST: "] 
  "30064771173" -> "68719476813"  [ label = "AST: "] 
  "30064771173" -> "30064771174"  [ label = "AST: "] 
  "30064771174" -> "68719476814"  [ label = "AST: "] 
  "30064771174" -> "30064771175"  [ label = "AST: "] 
  "30064771175" -> "68719476815"  [ label = "AST: "] 
  "30064771175" -> "68719476816"  [ label = "AST: "] 
  "30064771176" -> "30064771177"  [ label = "AST: "] 
  "30064771176" -> "68719476819"  [ label = "AST: "] 
  "30064771176" -> "68719476820"  [ label = "AST: "] 
  "30064771176" -> "30064771179"  [ label = "AST: "] 
  "30064771177" -> "30064771178"  [ label = "AST: "] 
  "30064771177" -> "68719476818"  [ label = "AST: "] 
  "30064771178" -> "68719476817"  [ label = "AST: "] 
  "30064771178" -> "55834574854"  [ label = "AST: "] 
  "30064771179" -> "68719476821"  [ label = "AST: "] 
  "30064771179" -> "68719476822"  [ label = "AST: "] 
  "30064771180" -> "68719476823"  [ label = "AST: "] 
  "30064771180" -> "30064771181"  [ label = "AST: "] 
  "30064771181" -> "68719476824"  [ label = "AST: "] 
  "30064771181" -> "30064771182"  [ label = "AST: "] 
  "30064771181" -> "68719476826"  [ label = "AST: "] 
  "30064771181" -> "68719476827"  [ label = "AST: "] 
  "30064771181" -> "68719476828"  [ label = "AST: "] 
  "30064771182" -> "68719476825"  [ label = "AST: "] 
  "30064771183" -> "68719476829"  [ label = "AST: "] 
  "30064771183" -> "30064771184"  [ label = "AST: "] 
  "30064771183" -> "30064771185"  [ label = "AST: "] 
  "30064771184" -> "68719476830"  [ label = "AST: "] 
  "30064771184" -> "90194313243"  [ label = "AST: "] 
  "30064771185" -> "90194313244"  [ label = "AST: "] 
  "30064771185" -> "30064771186"  [ label = "AST: "] 
  "30064771185" -> "90194313245"  [ label = "AST: "] 
  "30064771185" -> "30064771188"  [ label = "AST: "] 
  "30064771185" -> "90194313246"  [ label = "AST: "] 
  "30064771185" -> "30064771189"  [ label = "AST: "] 
  "30064771185" -> "90194313248"  [ label = "AST: "] 
  "30064771186" -> "30064771187"  [ label = "AST: "] 
  "30064771186" -> "68719476832"  [ label = "AST: "] 
  "30064771187" -> "68719476831"  [ label = "AST: "] 
  "30064771188" -> "68719476833"  [ label = "AST: "] 
  "30064771189" -> "68719476834"  [ label = "AST: "] 
  "30064771189" -> "90194313247"  [ label = "AST: "] 
  "30064771072" -> "30064771077"  [ label = "CFG: "] 
  "30064771075" -> "30064771080"  [ label = "CFG: "] 
  "30064771079" -> "30064771082"  [ label = "CFG: "] 
  "30064771081" -> "30064771084"  [ label = "CFG: "] 
  "30064771083" -> "30064771088"  [ label = "CFG: "] 
  "30064771085" -> "30064771103"  [ label = "CFG: "] 
  "30064771102" -> "55834574849"  [ label = "CFG: "] 
  "30064771104" -> "184683593728"  [ label = "CFG: "] 
  "30064771119" -> "30064771125"  [ label = "CFG: "] 
  "30064771121" -> "30064771138"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771086" -> "30064771097"  [ label = "CFG: "] 
  "30064771095" -> "30064771085"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771105" -> "30064771113"  [ label = "CFG: "] 
  "30064771110" -> "30064771104"  [ label = "CFG: "] 
  "30064771120" -> "30064771119"  [ label = "CFG: "] 
  "30064771122" -> "30064771131"  [ label = "CFG: "] 
  "30064771128" -> "30064771121"  [ label = "CFG: "] 
  "30064771138" -> "128849018880"  [ label = "CFG: "] 
  "30064771138" -> "30064771140"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771076"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771089" -> "30064771086"  [ label = "CFG: "] 
  "30064771096" -> "30064771099"  [ label = "CFG: "] 
  "30064771098" -> "30064771101"  [ label = "CFG: "] 
  "30064771100" -> "30064771095"  [ label = "CFG: "] 
  "30064771106" -> "30064771109"  [ label = "CFG: "] 
  "30064771109" -> "30064771105"  [ label = "CFG: "] 
  "30064771111" -> "55834574850"  [ label = "CFG: "] 
  "30064771115" -> "30064771110"  [ label = "CFG: "] 
  "184683593728" -> "30064771120"  [ label = "CFG: "] 
  "30064771123" -> "30064771127"  [ label = "CFG: "] 
  "30064771127" -> "30064771122"  [ label = "CFG: "] 
  "30064771129" -> "30064771133"  [ label = "CFG: "] 
  "30064771133" -> "55834574852"  [ label = "CFG: "] 
  "30064771134" -> "30064771128"  [ label = "CFG: "] 
  "30064771139" -> "30064771142"  [ label = "CFG: "] 
  "30064771141" -> "30064771144"  [ label = "CFG: "] 
  "55834574848" -> "30064771074"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771093"  [ label = "CFG: "] 
  "30064771091" -> "30064771089"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771116" -> "30064771118"  [ label = "CFG: "] 
  "30064771118" -> "30064771115"  [ label = "CFG: "] 
  "30064771124" -> "30064771123"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "30064771135" -> "30064771137"  [ label = "CFG: "] 
  "30064771137" -> "30064771134"  [ label = "CFG: "] 
  "30064771140" -> "30064771139"  [ label = "CFG: "] 
  "30064771142" -> "30064771141"  [ label = "CFG: "] 
  "30064771143" -> "30064771146"  [ label = "CFG: "] 
  "30064771143" -> "30064771162"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771114" -> "30064771112"  [ label = "CFG: "] 
  "30064771117" -> "30064771116"  [ label = "CFG: "] 
  "30064771125" -> "55834574851"  [ label = "CFG: "] 
  "30064771126" -> "30064771124"  [ label = "CFG: "] 
  "30064771131" -> "30064771132"  [ label = "CFG: "] 
  "30064771132" -> "30064771130"  [ label = "CFG: "] 
  "30064771136" -> "30064771135"  [ label = "CFG: "] 
  "30064771144" -> "30064771143"  [ label = "CFG: "] 
  "30064771145" -> "55834574853"  [ label = "CFG: "] 
  "30064771147" -> "30064771153"  [ label = "CFG: "] 
  "30064771151" -> "30064771155"  [ label = "CFG: "] 
  "30064771154" -> "128849018880"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771094" -> "30064771092"  [ label = "CFG: "] 
  "55834574849" -> "30064771108"  [ label = "CFG: "] 
  "55834574850" -> "30064771117"  [ label = "CFG: "] 
  "55834574851" -> "30064771126"  [ label = "CFG: "] 
  "55834574852" -> "30064771136"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771148" -> "30064771150"  [ label = "CFG: "] 
  "30064771150" -> "30064771147"  [ label = "CFG: "] 
  "30064771152" -> "30064771151"  [ label = "CFG: "] 
  "30064771155" -> "30064771158"  [ label = "CFG: "] 
  "30064771156" -> "30064771154"  [ label = "CFG: "] 
  "30064771161" -> "30064771165"  [ label = "CFG: "] 
  "30064771163" -> "30064771175"  [ label = "CFG: "] 
  "30064771172" -> "55834574854"  [ label = "CFG: "] 
  "30064771176" -> "30064771182"  [ label = "CFG: "] 
  "30064771180" -> "30064771184"  [ label = "CFG: "] 
  "30064771183" -> "128849018880"  [ label = "CFG: "] 
  "30064771149" -> "30064771148"  [ label = "CFG: "] 
  "30064771153" -> "30064771152"  [ label = "CFG: "] 
  "30064771157" -> "30064771159"  [ label = "CFG: "] 
  "30064771159" -> "30064771160"  [ label = "CFG: "] 
  "30064771160" -> "30064771156"  [ label = "CFG: "] 
  "30064771162" -> "30064771161"  [ label = "CFG: "] 
  "30064771164" -> "30064771169"  [ label = "CFG: "] 
  "30064771167" -> "30064771163"  [ label = "CFG: "] 
  "30064771173" -> "30064771172"  [ label = "CFG: "] 
  "30064771177" -> "30064771179"  [ label = "CFG: "] 
  "30064771179" -> "30064771176"  [ label = "CFG: "] 
  "30064771181" -> "30064771180"  [ label = "CFG: "] 
  "30064771184" -> "30064771187"  [ label = "CFG: "] 
  "30064771185" -> "30064771183"  [ label = "CFG: "] 
  "55834574853" -> "30064771149"  [ label = "CFG: "] 
  "30064771158" -> "30064771157"  [ label = "CFG: "] 
  "30064771165" -> "30064771166"  [ label = "CFG: "] 
  "30064771166" -> "30064771164"  [ label = "CFG: "] 
  "30064771168" -> "30064771171"  [ label = "CFG: "] 
  "30064771170" -> "30064771167"  [ label = "CFG: "] 
  "30064771174" -> "30064771173"  [ label = "CFG: "] 
  "30064771178" -> "30064771177"  [ label = "CFG: "] 
  "30064771182" -> "30064771181"  [ label = "CFG: "] 
  "30064771186" -> "30064771188"  [ label = "CFG: "] 
  "30064771188" -> "30064771189"  [ label = "CFG: "] 
  "30064771189" -> "30064771185"  [ label = "CFG: "] 
  "30064771169" -> "30064771168"  [ label = "CFG: "] 
  "30064771171" -> "30064771170"  [ label = "CFG: "] 
  "30064771175" -> "30064771174"  [ label = "CFG: "] 
  "55834574854" -> "30064771178"  [ label = "CFG: "] 
  "30064771187" -> "30064771186"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "30064771073" -> "128849018880"  [ label = "DDG: core::RefCountPtr"] 
  "30064771072" -> "128849018880"  [ label = "DDG: core::RefCountPtr&lt;Var"] 
  "30064771072" -> "128849018880"  [ label = "DDG: core::RefCountPtr&lt;Var&gt; v"] 
  "30064771076" -> "128849018880"  [ label = "DDG: HandleFromInput(c, 0)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: &amp;v"] 
  "30064771075" -> "128849018880"  [ label = "DDG: LookupResource(c, HandleFromInput(c, 0), &amp;v)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(c, LookupResource(c, HandleFromInput(c, 0), &amp;v))"] 
  "30064771080" -> "128849018880"  [ label = "DDG: v"] 
  "30064771079" -> "128849018880"  [ label = "DDG: v-&gt;tensor()"] 
  "30064771079" -> "128849018880"  [ label = "DDG: * params = v-&gt;tensor()"] 
  "30064771081" -> "128849018880"  [ label = "DDG: c-&gt;input(1)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: &amp; indices = c-&gt;input(1)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: c-&gt;input(2)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: &amp; updates = c-&gt;input(2)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: updates.dims()"] 
  "30064771086" -> "128849018880"  [ label = "DDG: updates.dims() == 0"] 
  "30064771089" -> "128849018880"  [ label = "DDG: updates.dims()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: indices.dims()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: params-&gt;dims()"] 
  "30064771091" -> "128849018880"  [ label = "DDG: indices.dims() + params-&gt;dims()"] 
  "30064771089" -> "128849018880"  [ label = "DDG: indices.dims() + params-&gt;dims() - 1"] 
  "30064771086" -> "128849018880"  [ label = "DDG: updates.dims() == indices.dims() + params-&gt;dims() - 1"] 
  "30064771085" -> "128849018880"  [ label = "DDG: updates.dims() == 0 ||
                    updates.dims() == indices.dims() + params-&gt;dims() - 1"] 
  "30064771095" -> "128849018880"  [ label = "DDG: updates.shape().DebugString()"] 
  "30064771095" -> "128849018880"  [ label = "DDG: indices.shape().DebugString()"] 
  "30064771100" -> "128849018880"  [ label = "DDG: params-&gt;shape()"] 
  "30064771095" -> "128849018880"  [ label = "DDG: params-&gt;shape().DebugString()"] 
  "30064771085" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                    &quot;Must have updates.shape = indices.shape + &quot;
                    &quot;params.shape[1:] or updates.shape = [], got &quot;,
                    &quot;updates.shape &quot;, updates.shape().DebugString(),
                    &quot;, indices.shape &quot;, indices.shape().DebugString(),
                    &quot;, params.shape &quot;, params-&gt;shape().DebugString())"] 
  "30064771085" -> "128849018880"  [ label = "DDG: OP_REQUIRES(c,
                updates.dims() == 0 ||
                    updates.dims() == indices.dims() + params-&gt;dims() - 1,
                errors::InvalidArgument(
                    &quot;Must have updates.shape = indices.shape + &quot;
                    &quot;params.shape[1:] or updates.shape = [], got &quot;,
                    &quot;updates.shape &quot;, updates.shape().DebugString(),
                    &quot;, indices.shape &quot;, indices.shape().DebugString(),
                    &quot;, params.shape &quot;, params-&gt;shape().DebugString()))"] 
  "30064771102" -> "128849018880"  [ label = "DDG: indices.NumElements()"] 
  "30064771102" -> "128849018880"  [ label = "DDG: N_big = indices.NumElements()"] 
  "30064771106" -> "128849018880"  [ label = "DDG: N_big &lt;= std::numeric_limits"] 
  "30064771105" -> "128849018880"  [ label = "DDG: N_big &lt;= std::numeric_limits&lt;Index"] 
  "30064771104" -> "128849018880"  [ label = "DDG: N_big &lt;= std::numeric_limits&lt;Index&gt;::max()"] 
  "30064771104" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;indices has too many elements for &quot;,
                                DataTypeString(DataTypeToEnum&lt;Index&gt;::v()),
                                &quot; indexing: &quot;, N_big, &quot; &gt; &quot;,
                                std::numeric_limits&lt;Index&gt;::max())"] 
  "30064771104" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
        c, N_big &lt;= std::numeric_limits&lt;Index&gt;::max(),
        errors::InvalidArgument(&quot;indices has too many elements for &quot;,
                                DataTypeString(DataTypeToEnum&lt;Index&gt;::v()),
                                &quot; indexing: &quot;, N_big, &quot; &gt; &quot;,
                                std::numeric_limits&lt;Index&gt;::max()))"] 
  "30064771120" -> "128849018880"  [ label = "DDG: N_big"] 
  "30064771119" -> "128849018880"  [ label = "DDG: static_cast&lt;Index&gt;(N_big)"] 
  "30064771119" -> "128849018880"  [ label = "DDG: N = static_cast&lt;Index&gt;(N_big)"] 
  "30064771123" -> "128849018880"  [ label = "DDG: params-&gt;dim_size(0) &lt;= std::numeric_limits"] 
  "30064771122" -> "128849018880"  [ label = "DDG: params-&gt;dim_size(0) &lt;= std::numeric_limits&lt;Index"] 
  "30064771121" -> "128849018880"  [ label = "DDG: params-&gt;dim_size(0) &lt;= std::numeric_limits&lt;Index&gt;::max()"] 
  "30064771131" -> "128849018880"  [ label = "DDG: DataTypeToEnum"] 
  "30064771130" -> "128849018880"  [ label = "DDG: DataTypeToEnum&lt;Index"] 
  "30064771130" -> "128849018880"  [ label = "DDG: ::v()"] 
  "30064771129" -> "128849018880"  [ label = "DDG: DataTypeToEnum&lt;Index&gt;::v()"] 
  "30064771128" -> "128849018880"  [ label = "DDG: DataTypeString(DataTypeToEnum&lt;Index&gt;::v())"] 
  "30064771135" -> "128849018880"  [ label = "DDG: std::numeric_limits"] 
  "30064771134" -> "128849018880"  [ label = "DDG: std::numeric_limits&lt;Index"] 
  "30064771134" -> "128849018880"  [ label = "DDG: ::max()"] 
  "30064771128" -> "128849018880"  [ label = "DDG: std::numeric_limits&lt;Index&gt;::max()"] 
  "30064771121" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;params.shape[0] too large for &quot;,
                                DataTypeString(DataTypeToEnum&lt;Index&gt;::v()),
                                &quot; indexing: &quot;, params-&gt;dim_size(0), &quot; &gt; &quot;,
                                std::numeric_limits&lt;Index&gt;::max())"] 
  "30064771121" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
        c, params-&gt;dim_size(0) &lt;= std::numeric_limits&lt;Index&gt;::max(),
        errors::InvalidArgument(&quot;params.shape[0] too large for &quot;,
                                DataTypeString(DataTypeToEnum&lt;Index&gt;::v()),
                                &quot; indexing: &quot;, params-&gt;dim_size(0), &quot; &gt; &quot;,
                                std::numeric_limits&lt;Index&gt;::max()))"] 
  "30064771138" -> "128849018880"  [ label = "DDG: N"] 
  "30064771138" -> "128849018880"  [ label = "DDG: N &gt; 0"] 
  "30064771139" -> "128849018880"  [ label = "DDG: indices.flat&lt;Index&gt;()"] 
  "30064771139" -> "128849018880"  [ label = "DDG: indices_flat = indices.flat&lt;Index&gt;()"] 
  "30064771141" -> "128849018880"  [ label = "DDG: params-&gt;flat_outer_dims&lt;T&gt;()"] 
  "30064771141" -> "128849018880"  [ label = "DDG: params_flat = params-&gt;flat_outer_dims&lt;T&gt;()"] 
  "30064771143" -> "128849018880"  [ label = "DDG: updates.shape()"] 
  "30064771143" -> "128849018880"  [ label = "DDG: TensorShapeUtils::IsScalar(updates.shape())"] 
  "30064771146" -> "128849018880"  [ label = "DDG: updates"] 
  "30064771145" -> "128849018880"  [ label = "DDG: updates.scalar&lt;T&gt;()"] 
  "30064771145" -> "128849018880"  [ label = "DDG: update = updates.scalar&lt;T&gt;()"] 
  "30064771148" -> "128849018880"  [ label = "DDG: Device"] 
  "30064771147" -> "128849018880"  [ label = "DDG: functor::ScatterScalarFunctor&lt;Device"] 
  "30064771147" -> "128849018880"  [ label = "DDG: T"] 
  "30064771147" -> "128849018880"  [ label = "DDG: Index"] 
  "30064771150" -> "128849018880"  [ label = "DDG: op"] 
  "30064771150" -> "128849018880"  [ label = "DDG: functor"] 
  "30064771147" -> "128849018880"  [ label = "DDG: op&gt; functor"] 
  "30064771147" -> "128849018880"  [ label = "DDG: functor::ScatterScalarFunctor&lt;Device, T, Index, op&gt; functor"] 
  "30064771152" -> "128849018880"  [ label = "DDG: c-&gt;template eigen_device&lt;Device&gt;()"] 
  "30064771152" -> "128849018880"  [ label = "DDG: params_flat"] 
  "30064771152" -> "128849018880"  [ label = "DDG: update"] 
  "30064771152" -> "128849018880"  [ label = "DDG: indices_flat"] 
  "30064771151" -> "128849018880"  [ label = "DDG: functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
                                    params_flat, update, indices_flat)"] 
  "30064771151" -> "128849018880"  [ label = "DDG: bad_i = functor(c, c-&gt;template eigen_device&lt;Device&gt;(),
                                    params_flat, update, indices_flat)"] 
  "30064771154" -> "128849018880"  [ label = "DDG: c"] 
  "30064771154" -> "128849018880"  [ label = "DDG: bad_i &lt; 0"] 
  "30064771158" -> "128849018880"  [ label = "DDG: indices"] 
  "30064771157" -> "128849018880"  [ label = "DDG: indices.shape()"] 
  "30064771156" -> "128849018880"  [ label = "DDG: SliceDebugString(indices.shape(), bad_i)"] 
  "30064771159" -> "128849018880"  [ label = "DDG: bad_i"] 
  "30064771156" -> "128849018880"  [ label = "DDG: indices_flat(bad_i)"] 
  "30064771160" -> "128849018880"  [ label = "DDG: params"] 
  "30064771156" -> "128849018880"  [ label = "DDG: params-&gt;dim_size(0)"] 
  "30064771154" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                        &quot;indices&quot;, SliceDebugString(indices.shape(), bad_i),
                        &quot; = &quot;, indices_flat(bad_i), &quot; is not in [0, &quot;,
                        params-&gt;dim_size(0), &quot;)&quot;)"] 
  "30064771154" -> "128849018880"  [ label = "DDG: OP_REQUIRES(c, bad_i &lt; 0,
                    errors::InvalidArgument(
                        &quot;indices&quot;, SliceDebugString(indices.shape(), bad_i),
                        &quot; = &quot;, indices_flat(bad_i), &quot; is not in [0, &quot;,
                        params-&gt;dim_size(0), &quot;)&quot;))"] 
  "30064771073" -> "128849018880"  [ label = "DDG: Var"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: v"] 
  "30064771082" -> "30064771081"  [ label = "DDG: c"] 
  "30064771082" -> "30064771081"  [ label = "DDG: 1"] 
  "30064771084" -> "30064771083"  [ label = "DDG: c"] 
  "30064771084" -> "30064771083"  [ label = "DDG: 2"] 
  "30064771103" -> "30064771102"  [ label = "DDG: indices"] 
  "30064771110" -> "30064771119"  [ label = "DDG: N_big"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: core::RefCountPtr"] 
  "30064771073" -> "30064771072"  [ label = "DDG: Var"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: c"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: HandleFromInput(c, 0)"] 
  "30064771076" -> "30064771075"  [ label = "DDG: &amp;v"] 
  "30064771084" -> "30064771085"  [ label = "DDG: c"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: updates.dims() == 0"] 
  "30064771086" -> "30064771085"  [ label = "DDG: updates.dims() == indices.dims() + params-&gt;dims() - 1"] 
  "30064771095" -> "30064771085"  [ label = "DDG: &quot;, params.shape &quot;"] 
  "30064771095" -> "30064771085"  [ label = "DDG: &quot;, indices.shape &quot;"] 
  "30064771095" -> "30064771085"  [ label = "DDG: &quot;updates.shape &quot;"] 
  "30064771095" -> "30064771085"  [ label = "DDG: indices.shape().DebugString()"] 
  "30064771095" -> "30064771085"  [ label = "DDG: &quot;Must have updates.shape = indices.shape + &quot;
                    &quot;params.shape[1:] or updates.shape = [], got &quot;"] 
  "30064771095" -> "30064771085"  [ label = "DDG: updates.shape().DebugString()"] 
  "30064771095" -> "30064771085"  [ label = "DDG: params-&gt;shape().DebugString()"] 
  "30064771085" -> "30064771104"  [ label = "DDG: c"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771105" -> "30064771104"  [ label = "DDG: N_big &lt;= std::numeric_limits&lt;Index"] 
  "30064771105" -> "30064771104"  [ label = "DDG: ::max()"] 
  "30064771110" -> "30064771104"  [ label = "DDG: std::numeric_limits&lt;Index&gt;::max()"] 
  "30064771110" -> "30064771104"  [ label = "DDG: &quot; &gt; &quot;"] 
  "30064771110" -> "30064771104"  [ label = "DDG: N_big"] 
  "30064771110" -> "30064771104"  [ label = "DDG: &quot; indexing: &quot;"] 
  "30064771110" -> "30064771104"  [ label = "DDG: DataTypeString(DataTypeToEnum&lt;Index&gt;::v())"] 
  "30064771110" -> "30064771104"  [ label = "DDG: &quot;indices has too many elements for &quot;"] 
  "30064771104" -> "30064771121"  [ label = "DDG: c"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771122" -> "30064771121"  [ label = "DDG: params-&gt;dim_size(0) &lt;= std::numeric_limits&lt;Index"] 
  "30064771122" -> "30064771121"  [ label = "DDG: ::max()"] 
  "30064771128" -> "30064771121"  [ label = "DDG: &quot;params.shape[0] too large for &quot;"] 
  "30064771128" -> "30064771121"  [ label = "DDG: &quot; &gt; &quot;"] 
  "30064771128" -> "30064771121"  [ label = "DDG: std::numeric_limits&lt;Index&gt;::max()"] 
  "30064771128" -> "30064771121"  [ label = "DDG: &quot; indexing: &quot;"] 
  "30064771128" -> "30064771121"  [ label = "DDG: params-&gt;dim_size(0)"] 
  "30064771128" -> "30064771121"  [ label = "DDG: DataTypeString(DataTypeToEnum&lt;Index&gt;::v())"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: c"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: 0"] 
  "30064771072" -> "30064771076"  [ label = "DDG: v"] 
  "30064771072" -> "30064771080"  [ label = "DDG: v"] 
  "30064771076" -> "30064771080"  [ label = "DDG: &amp;v"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771075" -> "30064771082"  [ label = "DDG: c"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771082" -> "30064771084"  [ label = "DDG: c"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771087" -> "30064771086"  [ label = "DDG: updates.dims()"] 
  "30064771087" -> "30064771086"  [ label = "DDG: 0"] 
  "30064771089" -> "30064771086"  [ label = "DDG: updates.dims()"] 
  "30064771089" -> "30064771086"  [ label = "DDG: indices.dims() + params-&gt;dims() - 1"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771096" -> "30064771095"  [ label = "DDG: updates.shape()"] 
  "30064771098" -> "30064771095"  [ label = "DDG: indices.shape()"] 
  "30064771100" -> "30064771095"  [ label = "DDG: params-&gt;shape()"] 
  "30064771099" -> "30064771103"  [ label = "DDG: indices"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771106" -> "30064771105"  [ label = "DDG: N_big &lt;= std::numeric_limits"] 
  "30064771106" -> "30064771105"  [ label = "DDG: Index"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771111" -> "30064771110"  [ label = "DDG: DataTypeToEnum&lt;Index&gt;::v()"] 
  "30064771107" -> "30064771110"  [ label = "DDG: N_big"] 
  "30064771115" -> "30064771110"  [ label = "DDG: std::numeric_limits&lt;Index"] 
  "30064771115" -> "30064771110"  [ label = "DDG: ::max()"] 
  "30064771110" -> "30064771120"  [ label = "DDG: N_big"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771123" -> "30064771122"  [ label = "DDG: params-&gt;dim_size(0) &lt;= std::numeric_limits"] 
  "30064771123" -> "30064771122"  [ label = "DDG: Index"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: DataTypeToEnum&lt;Index&gt;::v()"] 
  "30064771133" -> "30064771128"  [ label = "DDG: params"] 
  "30064771133" -> "30064771128"  [ label = "DDG: 0"] 
  "30064771134" -> "30064771128"  [ label = "DDG: std::numeric_limits&lt;Index"] 
  "30064771134" -> "30064771128"  [ label = "DDG: ::max()"] 
  "30064771119" -> "30064771138"  [ label = "DDG: N"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771140" -> "30064771139"  [ label = "DDG: indices"] 
  "30064771142" -> "30064771141"  [ label = "DDG: params"] 
  "115964116992" -> "30064771077"  [ label = "DDG: c"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771090" -> "30064771089"  [ label = "DDG: updates"] 
  "30064771091" -> "30064771089"  [ label = "DDG: indices.dims() + params-&gt;dims()"] 
  "30064771091" -> "30064771089"  [ label = "DDG: 1"] 
  "30064771097" -> "30064771096"  [ label = "DDG: updates"] 
  "30064771099" -> "30064771098"  [ label = "DDG: indices"] 
  "30064771101" -> "30064771100"  [ label = "DDG: params"] 
  "30064771107" -> "30064771106"  [ label = "DDG: N_big"] 
  "30064771107" -> "30064771106"  [ label = "DDG: std::numeric_limits"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771112" -> "30064771111"  [ label = "DDG: DataTypeToEnum&lt;Index"] 
  "30064771112" -> "30064771111"  [ label = "DDG: ::v()"] 
  "30064771116" -> "30064771115"  [ label = "DDG: std::numeric_limits"] 
  "30064771116" -> "30064771115"  [ label = "DDG: Index"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771124" -> "30064771123"  [ label = "DDG: params-&gt;dim_size(0)"] 
  "30064771124" -> "30064771123"  [ label = "DDG: std::numeric_limits"] 
  "30064771116" -> "30064771123"  [ label = "DDG: Index"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771130" -> "30064771129"  [ label = "DDG: DataTypeToEnum&lt;Index"] 
  "30064771130" -> "30064771129"  [ label = "DDG: ::v()"] 
  "30064771125" -> "30064771133"  [ label = "DDG: params"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "30064771135" -> "30064771134"  [ label = "DDG: std::numeric_limits"] 
  "30064771135" -> "30064771134"  [ label = "DDG: Index"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771083" -> "30064771088"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771088" -> "30064771090"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771093" -> "30064771091"  [ label = "DDG: indices"] 
  "30064771094" -> "30064771091"  [ label = "DDG: params"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771088" -> "30064771097"  [ label = "DDG: updates"] 
  "30064771090" -> "30064771097"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771081" -> "30064771099"  [ label = "DDG: indices"] 
  "30064771093" -> "30064771099"  [ label = "DDG: indices"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771079" -> "30064771101"  [ label = "DDG: params"] 
  "30064771094" -> "30064771101"  [ label = "DDG: params"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771102" -> "30064771107"  [ label = "DDG: N_big"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771113" -> "30064771112"  [ label = "DDG: DataTypeToEnum"] 
  "30064771113" -> "30064771112"  [ label = "DDG: Index"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771107" -> "30064771116"  [ label = "DDG: std::numeric_limits"] 
  "30064771113" -> "30064771116"  [ label = "DDG: Index"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771125" -> "30064771124"  [ label = "DDG: params"] 
  "30064771125" -> "30064771124"  [ label = "DDG: 0"] 
  "30064771116" -> "30064771124"  [ label = "DDG: std::numeric_limits"] 
  "30064771131" -> "30064771130"  [ label = "DDG: DataTypeToEnum"] 
  "30064771131" -> "30064771130"  [ label = "DDG: Index"] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "30064771124" -> "30064771135"  [ label = "DDG: std::numeric_limits"] 
  "30064771131" -> "30064771135"  [ label = "DDG: Index"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771103" -> "30064771140"  [ label = "DDG: indices"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771133" -> "30064771142"  [ label = "DDG: params"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "30064771144" -> "30064771143"  [ label = "DDG: updates"] 
  "30064771146" -> "30064771145"  [ label = "DDG: updates"] 
  "30064771152" -> "30064771151"  [ label = "DDG: indices_flat"] 
  "30064771152" -> "30064771151"  [ label = "DDG: c-&gt;template eigen_device&lt;Device&gt;()"] 
  "30064771152" -> "30064771151"  [ label = "DDG: params_flat"] 
  "30064771152" -> "30064771151"  [ label = "DDG: update"] 
  "30064771152" -> "30064771151"  [ label = "DDG: c"] 
  "30064771093" -> "30064771092"  [ label = "DDG: indices"] 
  "30064771094" -> "30064771092"  [ label = "DDG: params"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771106" -> "30064771113"  [ label = "DDG: Index"] 
  "30064771101" -> "30064771125"  [ label = "DDG: params"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771113" -> "30064771131"  [ label = "DDG: DataTypeToEnum"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771123" -> "30064771131"  [ label = "DDG: Index"] 
  "30064771097" -> "30064771144"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "30064771148" -> "30064771147"  [ label = "DDG: functor::ScatterScalarFunctor"] 
  "30064771148" -> "30064771147"  [ label = "DDG: Device"] 
  "111669149697" -> "30064771147"  [ label = "DDG: "] 
  "30064771135" -> "30064771147"  [ label = "DDG: Index"] 
  "30064771150" -> "30064771147"  [ label = "DDG: op"] 
  "30064771150" -> "30064771147"  [ label = "DDG: functor"] 
  "30064771152" -> "30064771154"  [ label = "DDG: c"] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "30064771155" -> "30064771154"  [ label = "DDG: bad_i"] 
  "30064771155" -> "30064771154"  [ label = "DDG: 0"] 
  "30064771156" -> "30064771154"  [ label = "DDG: &quot;)&quot;"] 
  "30064771156" -> "30064771154"  [ label = "DDG: indices_flat(bad_i)"] 
  "30064771156" -> "30064771154"  [ label = "DDG: &quot; is not in [0, &quot;"] 
  "30064771156" -> "30064771154"  [ label = "DDG: params-&gt;dim_size(0)"] 
  "30064771156" -> "30064771154"  [ label = "DDG: &quot; = &quot;"] 
  "30064771156" -> "30064771154"  [ label = "DDG: &quot;indices&quot;"] 
  "30064771156" -> "30064771154"  [ label = "DDG: SliceDebugString(indices.shape(), bad_i)"] 
  "30064771162" -> "30064771161"  [ label = "DDG: updates"] 
  "30064771173" -> "30064771172"  [ label = "DDG: updates"] 
  "30064771173" -> "30064771172"  [ label = "DDG: {N, num_updates / N}"] 
  "30064771181" -> "30064771180"  [ label = "DDG: updates_flat"] 
  "30064771181" -> "30064771180"  [ label = "DDG: c"] 
  "30064771181" -> "30064771180"  [ label = "DDG: indices_flat"] 
  "30064771181" -> "30064771180"  [ label = "DDG: c-&gt;template eigen_device&lt;Device&gt;()"] 
  "30064771181" -> "30064771180"  [ label = "DDG: params_flat"] 
  "30064771081" -> "30064771093"  [ label = "DDG: indices"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771079" -> "30064771094"  [ label = "DDG: params"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771144" -> "30064771146"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "111669149697" -> "30064771148"  [ label = "DDG: "] 
  "111669149697" -> "30064771150"  [ label = "DDG: "] 
  "30064771148" -> "30064771150"  [ label = "DDG: functor::ScatterScalarFunctor"] 
  "30064771153" -> "30064771152"  [ label = "DDG: c"] 
  "111669149697" -> "30064771152"  [ label = "DDG: "] 
  "30064771141" -> "30064771152"  [ label = "DDG: params_flat"] 
  "30064771145" -> "30064771152"  [ label = "DDG: update"] 
  "30064771139" -> "30064771152"  [ label = "DDG: indices_flat"] 
  "30064771151" -> "30064771155"  [ label = "DDG: bad_i"] 
  "111669149697" -> "30064771155"  [ label = "DDG: "] 
  "111669149697" -> "30064771156"  [ label = "DDG: "] 
  "30064771157" -> "30064771156"  [ label = "DDG: indices.shape()"] 
  "30064771157" -> "30064771156"  [ label = "DDG: bad_i"] 
  "30064771159" -> "30064771156"  [ label = "DDG: bad_i"] 
  "30064771160" -> "30064771156"  [ label = "DDG: params"] 
  "30064771160" -> "30064771156"  [ label = "DDG: 0"] 
  "30064771121" -> "30064771163"  [ label = "DDG: c"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "30064771164" -> "30064771163"  [ label = "DDG: updates.shape()"] 
  "30064771164" -> "30064771163"  [ label = "DDG: indices.shape()"] 
  "30064771167" -> "30064771163"  [ label = "DDG: updates.shape().DebugString()"] 
  "30064771167" -> "30064771163"  [ label = "DDG: &quot;)&quot;"] 
  "30064771167" -> "30064771163"  [ label = "DDG: indices.shape().DebugString()"] 
  "30064771167" -> "30064771163"  [ label = "DDG: &quot;) must be a prefix of the shape of updates (&quot;"] 
  "30064771167" -> "30064771163"  [ label = "DDG: &quot;The shape of indices (&quot;"] 
  "30064771177" -> "30064771176"  [ label = "DDG: functor::ScatterFunctor"] 
  "30064771177" -> "30064771176"  [ label = "DDG: Device"] 
  "111669149697" -> "30064771176"  [ label = "DDG: "] 
  "30064771135" -> "30064771176"  [ label = "DDG: Index"] 
  "30064771179" -> "30064771176"  [ label = "DDG: op"] 
  "30064771179" -> "30064771176"  [ label = "DDG: functor"] 
  "30064771181" -> "30064771183"  [ label = "DDG: c"] 
  "111669149697" -> "30064771183"  [ label = "DDG: "] 
  "30064771184" -> "30064771183"  [ label = "DDG: bad_i"] 
  "30064771184" -> "30064771183"  [ label = "DDG: 0"] 
  "30064771185" -> "30064771183"  [ label = "DDG: &quot;indices&quot;"] 
  "30064771185" -> "30064771183"  [ label = "DDG: indices_flat(bad_i)"] 
  "30064771185" -> "30064771183"  [ label = "DDG: &quot; = &quot;"] 
  "30064771185" -> "30064771183"  [ label = "DDG: &quot;)&quot;"] 
  "30064771185" -> "30064771183"  [ label = "DDG: SliceDebugString(indices.shape(), bad_i)"] 
  "30064771185" -> "30064771183"  [ label = "DDG: &quot; is not in [0, &quot;"] 
  "30064771185" -> "30064771183"  [ label = "DDG: params-&gt;dim_size(0)"] 
  "30064771121" -> "30064771153"  [ label = "DDG: c"] 
  "111669149697" -> "30064771153"  [ label = "DDG: "] 
  "30064771158" -> "30064771157"  [ label = "DDG: indices"] 
  "30064771155" -> "30064771157"  [ label = "DDG: bad_i"] 
  "111669149697" -> "30064771157"  [ label = "DDG: "] 
  "30064771157" -> "30064771159"  [ label = "DDG: bad_i"] 
  "111669149697" -> "30064771159"  [ label = "DDG: "] 
  "30064771142" -> "30064771160"  [ label = "DDG: params"] 
  "111669149697" -> "30064771160"  [ label = "DDG: "] 
  "30064771144" -> "30064771162"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771162"  [ label = "DDG: "] 
  "30064771165" -> "30064771164"  [ label = "DDG: updates"] 
  "30064771166" -> "30064771164"  [ label = "DDG: indices"] 
  "111669149697" -> "30064771167"  [ label = "DDG: "] 
  "30064771168" -> "30064771167"  [ label = "DDG: indices.shape()"] 
  "30064771170" -> "30064771167"  [ label = "DDG: updates.shape()"] 
  "30064771171" -> "30064771173"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771173"  [ label = "DDG: "] 
  "30064771174" -> "30064771173"  [ label = "DDG: N"] 
  "30064771174" -> "30064771173"  [ label = "DDG: num_updates / N"] 
  "111669149697" -> "30064771177"  [ label = "DDG: "] 
  "111669149697" -> "30064771179"  [ label = "DDG: "] 
  "30064771177" -> "30064771179"  [ label = "DDG: functor::ScatterFunctor"] 
  "30064771182" -> "30064771181"  [ label = "DDG: c"] 
  "111669149697" -> "30064771181"  [ label = "DDG: "] 
  "30064771141" -> "30064771181"  [ label = "DDG: params_flat"] 
  "30064771172" -> "30064771181"  [ label = "DDG: updates_flat"] 
  "30064771139" -> "30064771181"  [ label = "DDG: indices_flat"] 
  "30064771180" -> "30064771184"  [ label = "DDG: bad_i"] 
  "111669149697" -> "30064771184"  [ label = "DDG: "] 
  "111669149697" -> "30064771185"  [ label = "DDG: "] 
  "30064771186" -> "30064771185"  [ label = "DDG: indices.shape()"] 
  "30064771186" -> "30064771185"  [ label = "DDG: bad_i"] 
  "30064771188" -> "30064771185"  [ label = "DDG: bad_i"] 
  "30064771189" -> "30064771185"  [ label = "DDG: params"] 
  "30064771189" -> "30064771185"  [ label = "DDG: 0"] 
  "30064771140" -> "30064771158"  [ label = "DDG: indices"] 
  "111669149697" -> "30064771158"  [ label = "DDG: "] 
  "30064771162" -> "30064771165"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771165"  [ label = "DDG: "] 
  "30064771140" -> "30064771166"  [ label = "DDG: indices"] 
  "111669149697" -> "30064771166"  [ label = "DDG: "] 
  "30064771169" -> "30064771168"  [ label = "DDG: indices"] 
  "30064771171" -> "30064771170"  [ label = "DDG: updates"] 
  "30064771175" -> "30064771174"  [ label = "DDG: N"] 
  "111669149697" -> "30064771174"  [ label = "DDG: "] 
  "30064771175" -> "30064771174"  [ label = "DDG: num_updates"] 
  "30064771163" -> "30064771182"  [ label = "DDG: c"] 
  "111669149697" -> "30064771182"  [ label = "DDG: "] 
  "30064771187" -> "30064771186"  [ label = "DDG: indices"] 
  "30064771184" -> "30064771186"  [ label = "DDG: bad_i"] 
  "111669149697" -> "30064771186"  [ label = "DDG: "] 
  "30064771186" -> "30064771188"  [ label = "DDG: bad_i"] 
  "111669149697" -> "30064771188"  [ label = "DDG: "] 
  "30064771142" -> "30064771189"  [ label = "DDG: params"] 
  "111669149697" -> "30064771189"  [ label = "DDG: "] 
  "30064771166" -> "30064771169"  [ label = "DDG: indices"] 
  "111669149697" -> "30064771169"  [ label = "DDG: "] 
  "30064771165" -> "30064771171"  [ label = "DDG: updates"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "30064771161" -> "30064771175"  [ label = "DDG: num_updates"] 
  "111669149697" -> "30064771175"  [ label = "DDG: "] 
  "30064771138" -> "30064771175"  [ label = "DDG: N"] 
  "30064771169" -> "30064771187"  [ label = "DDG: indices"] 
  "111669149697" -> "30064771187"  [ label = "DDG: "] 
  "30064771138" -> "30064771143"  [ label = "CDG: "] 
  "30064771138" -> "30064771144"  [ label = "CDG: "] 
  "30064771138" -> "30064771141"  [ label = "CDG: "] 
  "30064771138" -> "30064771142"  [ label = "CDG: "] 
  "30064771138" -> "30064771139"  [ label = "CDG: "] 
  "30064771138" -> "30064771140"  [ label = "CDG: "] 
  "30064771087" -> "30064771093"  [ label = "CDG: "] 
  "30064771087" -> "30064771094"  [ label = "CDG: "] 
  "30064771087" -> "30064771091"  [ label = "CDG: "] 
  "30064771087" -> "30064771092"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771143" -> "30064771147"  [ label = "CDG: "] 
  "30064771143" -> "30064771148"  [ label = "CDG: "] 
  "30064771143" -> "30064771145"  [ label = "CDG: "] 
  "30064771143" -> "30064771146"  [ label = "CDG: "] 
  "30064771143" -> "55834574853"  [ label = "CDG: "] 
  "30064771143" -> "55834574854"  [ label = "CDG: "] 
  "30064771143" -> "30064771189"  [ label = "CDG: "] 
  "30064771143" -> "30064771187"  [ label = "CDG: "] 
  "30064771143" -> "30064771188"  [ label = "CDG: "] 
  "30064771143" -> "30064771185"  [ label = "CDG: "] 
  "30064771143" -> "30064771186"  [ label = "CDG: "] 
  "30064771143" -> "30064771183"  [ label = "CDG: "] 
  "30064771143" -> "30064771184"  [ label = "CDG: "] 
  "30064771143" -> "30064771181"  [ label = "CDG: "] 
  "30064771143" -> "30064771182"  [ label = "CDG: "] 
  "30064771143" -> "30064771163"  [ label = "CDG: "] 
  "30064771143" -> "30064771164"  [ label = "CDG: "] 
  "30064771143" -> "30064771161"  [ label = "CDG: "] 
  "30064771143" -> "30064771162"  [ label = "CDG: "] 
  "30064771143" -> "30064771159"  [ label = "CDG: "] 
  "30064771143" -> "30064771160"  [ label = "CDG: "] 
  "30064771143" -> "30064771157"  [ label = "CDG: "] 
  "30064771143" -> "30064771158"  [ label = "CDG: "] 
  "30064771143" -> "30064771155"  [ label = "CDG: "] 
  "30064771143" -> "30064771156"  [ label = "CDG: "] 
  "30064771143" -> "30064771153"  [ label = "CDG: "] 
  "30064771143" -> "30064771154"  [ label = "CDG: "] 
  "30064771143" -> "30064771151"  [ label = "CDG: "] 
  "30064771143" -> "30064771152"  [ label = "CDG: "] 
  "30064771143" -> "30064771149"  [ label = "CDG: "] 
  "30064771143" -> "30064771150"  [ label = "CDG: "] 
  "30064771143" -> "30064771179"  [ label = "CDG: "] 
  "30064771143" -> "30064771180"  [ label = "CDG: "] 
  "30064771143" -> "30064771177"  [ label = "CDG: "] 
  "30064771143" -> "30064771178"  [ label = "CDG: "] 
  "30064771143" -> "30064771175"  [ label = "CDG: "] 
  "30064771143" -> "30064771176"  [ label = "CDG: "] 
  "30064771143" -> "30064771173"  [ label = "CDG: "] 
  "30064771143" -> "30064771174"  [ label = "CDG: "] 
  "30064771143" -> "30064771171"  [ label = "CDG: "] 
  "30064771143" -> "30064771172"  [ label = "CDG: "] 
  "30064771143" -> "30064771169"  [ label = "CDG: "] 
  "30064771143" -> "30064771170"  [ label = "CDG: "] 
  "30064771143" -> "30064771167"  [ label = "CDG: "] 
  "30064771143" -> "30064771168"  [ label = "CDG: "] 
  "30064771143" -> "30064771165"  [ label = "CDG: "] 
  "30064771143" -> "30064771166"  [ label = "CDG: "] 
}
"""
)
