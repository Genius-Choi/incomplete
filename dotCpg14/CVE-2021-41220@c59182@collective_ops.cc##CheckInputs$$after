[33mval[0m [36mres368[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "CheckInputs" {  
"111669149697" [label = <(METHOD,CheckInputs)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,Tensor group_size_t)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,Tensor group_key_t)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    if (group_size_t.dims() &gt; 0) {
      retu...,{
    if (group_size_t.dims() &gt; 0) {
      retu...)<SUB>1</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (group_size_t.dims() &gt; 0))<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.greaterThan,group_size_t.dims() &gt; 0)<SUB>2</SUB>> ]
"30064771073" [label = <(dims,group_size_t.dims())<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,group_size_t,group_size_t.dims())<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,0,group_size_t.dims() &gt; 0)<SUB>2</SUB>> ]
"25769803778" [label = <(BLOCK,{
      return errors::InvalidArgument(
       ...,{
      return errors::InvalidArgument(
       ...)<SUB>2</SUB>> ]
"146028888064" [label = <(RETURN,return errors::InvalidArgument(
          &quot;Unex...,return errors::InvalidArgument(
          &quot;Unex...)<SUB>3</SUB>> ]
"30064771074" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;Unexpected ...)<SUB>3</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;Unexpected dimensions on input group_size. &quot;
 ...,errors::InvalidArgument(
          &quot;Unexpected ...)<SUB>4</SUB>> ]
"30064771075" [label = <(DebugString,group_size_t.shape().DebugString())<SUB>6</SUB>> ]
"30064771076" [label = <(shape,group_size_t.shape())<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,group_size_t,group_size_t.shape())<SUB>6</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (group_key_t.dims() &gt; 0))<SUB>8</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.greaterThan,group_key_t.dims() &gt; 0)<SUB>8</SUB>> ]
"30064771078" [label = <(dims,group_key_t.dims())<SUB>8</SUB>> ]
"68719476738" [label = <(IDENTIFIER,group_key_t,group_key_t.dims())<SUB>8</SUB>> ]
"90194313218" [label = <(LITERAL,0,group_key_t.dims() &gt; 0)<SUB>8</SUB>> ]
"25769803779" [label = <(BLOCK,{
      return errors::InvalidArgument(
       ...,{
      return errors::InvalidArgument(
       ...)<SUB>8</SUB>> ]
"146028888065" [label = <(RETURN,return errors::InvalidArgument(
          &quot;Unex...,return errors::InvalidArgument(
          &quot;Unex...)<SUB>9</SUB>> ]
"30064771079" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;Unexpected ...)<SUB>9</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;Unexpected dimensions on input group_key, got &quot;,errors::InvalidArgument(
          &quot;Unexpected ...)<SUB>10</SUB>> ]
"30064771080" [label = <(DebugString,group_key_t.shape().DebugString())<SUB>11</SUB>> ]
"30064771081" [label = <(shape,group_key_t.shape())<SUB>11</SUB>> ]
"68719476739" [label = <(IDENTIFIER,group_key_t,group_key_t.shape())<SUB>11</SUB>> ]
"94489280512" [label = <(LOCAL,auto group_size: auto)<SUB>14</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,group_size = group_size_t.unaligned_flat&lt;int32&gt;...)<SUB>14</SUB>> ]
"68719476740" [label = <(IDENTIFIER,group_size,group_size = group_size_t.unaligned_flat&lt;int32&gt;...)<SUB>14</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;(),group_size_t.unaligned_flat&lt;int32&gt;()(0))<SUB>14</SUB>> ]
"30064771084" [label = <(unaligned_flat&lt;int32&gt;,group_size_t.unaligned_flat&lt;int32&gt;())<SUB>14</SUB>> ]
"68719476741" [label = <(IDENTIFIER,group_size_t,group_size_t.unaligned_flat&lt;int32&gt;())<SUB>14</SUB>> ]
"90194313220" [label = <(LITERAL,0,group_size_t.unaligned_flat&lt;int32&gt;()(0))<SUB>14</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (group_size &lt;= 0))<SUB>15</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.lessEqualsThan,group_size &lt;= 0)<SUB>15</SUB>> ]
"68719476742" [label = <(IDENTIFIER,group_size,group_size &lt;= 0)<SUB>15</SUB>> ]
"90194313221" [label = <(LITERAL,0,group_size &lt;= 0)<SUB>15</SUB>> ]
"25769803780" [label = <(BLOCK,{
      return errors::InvalidArgument(
       ...,{
      return errors::InvalidArgument(
       ...)<SUB>15</SUB>> ]
"146028888066" [label = <(RETURN,return errors::InvalidArgument(
          &quot;grou...,return errors::InvalidArgument(
          &quot;grou...)<SUB>16</SUB>> ]
"30064771086" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;group_size ...)<SUB>16</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;group_size must be positive integer but got &quot;,errors::InvalidArgument(
          &quot;group_size ...)<SUB>17</SUB>> ]
"68719476743" [label = <(IDENTIFIER,group_size,errors::InvalidArgument(
          &quot;group_size ...)<SUB>17</SUB>> ]
"146028888067" [label = <(RETURN,return Status::OK();,return Status::OK();)<SUB>19</SUB>> ]
"30064771087" [label = <(OK,Status::OK())<SUB>19</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "146028888067"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476737"  [ label = "AST: "] 
  "47244640257" -> "30064771077"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476738"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476739"  [ label = "AST: "] 
  "30064771082" -> "68719476740"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "90194313220"  [ label = "AST: "] 
  "30064771084" -> "68719476741"  [ label = "AST: "] 
  "47244640258" -> "30064771085"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771085" -> "68719476742"  [ label = "AST: "] 
  "30064771085" -> "90194313221"  [ label = "AST: "] 
  "25769803780" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "90194313222"  [ label = "AST: "] 
  "30064771086" -> "68719476743"  [ label = "AST: "] 
  "146028888067" -> "30064771087"  [ label = "AST: "] 
  "30064771082" -> "30064771085"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771076"  [ label = "CFG: "] 
  "30064771072" -> "30064771078"  [ label = "CFG: "] 
  "30064771077" -> "30064771081"  [ label = "CFG: "] 
  "30064771077" -> "30064771084"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771087"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771087" -> "146028888067"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "146028888064"  [ label = "CFG: "] 
  "30064771079" -> "146028888065"  [ label = "CFG: "] 
  "30064771086" -> "146028888066"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: group_key_t"] 
  "30064771072" -> "128849018880"  [ label = "DDG: group_size_t.dims()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: group_size_t.dims() &gt; 0"] 
  "30064771076" -> "128849018880"  [ label = "DDG: group_size_t"] 
  "30064771075" -> "128849018880"  [ label = "DDG: group_size_t.shape()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: group_size_t.shape().DebugString()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
          &quot;Unexpected dimensions on input group_size. &quot;
          &quot;It shoulbe a scalar, got tensor with shape &quot;,
          group_size_t.shape().DebugString())"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: group_size_t.unaligned_flat&lt;int32&gt;()"] 
  "30064771083" -> "30064771082"  [ label = "DDG: 0"] 
  "30064771087" -> "146028888067"  [ label = "DDG: Status::OK()"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: group_size_t"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771074" -> "146028888064"  [ label = "DDG: errors::InvalidArgument(
          &quot;Unexpected dimensions on input group_size. &quot;
          &quot;It shoulbe a scalar, got tensor with shape &quot;,
          group_size_t.shape().DebugString())"] 
  "30064771078" -> "30064771077"  [ label = "DDG: group_key_t"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771079" -> "146028888065"  [ label = "DDG: errors::InvalidArgument(
          &quot;Unexpected dimensions on input group_key, got &quot;,
          group_key_t.shape().DebugString())"] 
  "30064771084" -> "30064771083"  [ label = "DDG: group_size_t"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771082" -> "30064771085"  [ label = "DDG: group_size"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771086" -> "146028888066"  [ label = "DDG: errors::InvalidArgument(
          &quot;group_size must be positive integer but got &quot;, group_size)"] 
  "115964116992" -> "30064771073"  [ label = "DDG: group_size_t"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116993" -> "30064771078"  [ label = "DDG: group_key_t"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771073" -> "30064771084"  [ label = "DDG: group_size_t"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: group_size_t.shape()"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: group_key_t.shape()"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771085" -> "30064771086"  [ label = "DDG: group_size"] 
  "30064771076" -> "30064771075"  [ label = "DDG: group_size_t"] 
  "30064771081" -> "30064771080"  [ label = "DDG: group_key_t"] 
  "30064771073" -> "30064771076"  [ label = "DDG: group_size_t"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771078" -> "30064771081"  [ label = "DDG: group_key_t"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771072" -> "30064771078"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771077" -> "30064771083"  [ label = "CDG: "] 
  "30064771077" -> "30064771082"  [ label = "CDG: "] 
  "30064771077" -> "30064771085"  [ label = "CDG: "] 
  "30064771077" -> "30064771084"  [ label = "CDG: "] 
  "30064771077" -> "30064771079"  [ label = "CDG: "] 
  "30064771077" -> "146028888065"  [ label = "CDG: "] 
  "30064771077" -> "30064771081"  [ label = "CDG: "] 
  "30064771077" -> "30064771080"  [ label = "CDG: "] 
  "30064771085" -> "30064771087"  [ label = "CDG: "] 
  "30064771085" -> "30064771086"  [ label = "CDG: "] 
  "30064771085" -> "146028888066"  [ label = "CDG: "] 
  "30064771085" -> "146028888067"  [ label = "CDG: "] 
}
"""
)
