[33mval[0m [36mres1203[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "safe_send" {  
"111669149697" [label = <(METHOD,safe_send)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const void* buf)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,size_t len)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,bool hickup)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    off_t offset = 0;
    const char* ptr = b...,{
    off_t offset = 0;
    const char* ptr = b...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,off_t offset: off_t)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,offset = 0)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,offset,offset = 0)<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,0,offset = 0)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,const char* ptr: char*)<SUB>4</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,* ptr = buf)<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,ptr,* ptr = buf)<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,buf,* ptr = buf)<SUB>4</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,DO,do {
        size_t num_bytes = len - offset;
        if (hickup) {
            if (num_bytes &gt; 1024) {
                num_bytes = (rand() % 1023) + 1;
            }
        }

        ssize_t nw = write(sock, ptr + offset, num_bytes);
        if (nw == -1) {
            if (errno != EINTR) {
                fprintf(stderr, &quot;Failed to write: %s\n&quot;, strerror(errno));
                abort();
            }
        } else {
            if (hickup) {
                usleep(100);
            }
            offset += nw;
        }
    } while (offset &lt; len);)<SUB>20</SUB>> ]
"25769803778" [label = <(BLOCK,{
        size_t num_bytes = len - offset;
    ...,{
        size_t num_bytes = len - offset;
    ...)<SUB>20</SUB>> ]
"94489280514" [label = <(LOCAL,size_t num_bytes: size_t)<SUB>21</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,num_bytes = len - offset)<SUB>21</SUB>> ]
"68719476739" [label = <(IDENTIFIER,num_bytes,num_bytes = len - offset)<SUB>21</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.subtraction,len - offset)<SUB>21</SUB>> ]
"68719476740" [label = <(IDENTIFIER,len,len - offset)<SUB>21</SUB>> ]
"68719476741" [label = <(IDENTIFIER,offset,len - offset)<SUB>21</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (hickup))<SUB>22</SUB>> ]
"68719476742" [label = <(IDENTIFIER,hickup,if (hickup))<SUB>22</SUB>> ]
"25769803779" [label = <(BLOCK,{
            if (num_bytes &gt; 1024) {
         ...,{
            if (num_bytes &gt; 1024) {
         ...)<SUB>22</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (num_bytes &gt; 1024))<SUB>23</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.greaterThan,num_bytes &gt; 1024)<SUB>23</SUB>> ]
"68719476743" [label = <(IDENTIFIER,num_bytes,num_bytes &gt; 1024)<SUB>23</SUB>> ]
"90194313217" [label = <(LITERAL,1024,num_bytes &gt; 1024)<SUB>23</SUB>> ]
"25769803780" [label = <(BLOCK,{
                num_bytes = (rand() % 1023) +...,{
                num_bytes = (rand() % 1023) +...)<SUB>23</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,num_bytes = (rand() % 1023) + 1)<SUB>24</SUB>> ]
"68719476744" [label = <(IDENTIFIER,num_bytes,num_bytes = (rand() % 1023) + 1)<SUB>24</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.addition,(rand() % 1023) + 1)<SUB>24</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.modulo,rand() % 1023)<SUB>24</SUB>> ]
"30064771080" [label = <(rand,rand())<SUB>24</SUB>> ]
"90194313218" [label = <(LITERAL,1023,rand() % 1023)<SUB>24</SUB>> ]
"90194313219" [label = <(LITERAL,1,(rand() % 1023) + 1)<SUB>24</SUB>> ]
"94489280515" [label = <(LOCAL,ssize_t nw: ssize_t)<SUB>28</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,nw = write(sock, ptr + offset, num_bytes))<SUB>28</SUB>> ]
"68719476745" [label = <(IDENTIFIER,nw,nw = write(sock, ptr + offset, num_bytes))<SUB>28</SUB>> ]
"30064771082" [label = <(write,write(sock, ptr + offset, num_bytes))<SUB>28</SUB>> ]
"68719476746" [label = <(IDENTIFIER,sock,write(sock, ptr + offset, num_bytes))<SUB>28</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.addition,ptr + offset)<SUB>28</SUB>> ]
"68719476747" [label = <(IDENTIFIER,ptr,ptr + offset)<SUB>28</SUB>> ]
"68719476748" [label = <(IDENTIFIER,offset,ptr + offset)<SUB>28</SUB>> ]
"68719476749" [label = <(IDENTIFIER,num_bytes,write(sock, ptr + offset, num_bytes))<SUB>28</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (nw == -1))<SUB>29</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.equals,nw == -1)<SUB>29</SUB>> ]
"68719476750" [label = <(IDENTIFIER,nw,nw == -1)<SUB>29</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.minus,-1)<SUB>29</SUB>> ]
"90194313220" [label = <(LITERAL,1,-1)<SUB>29</SUB>> ]
"25769803781" [label = <(BLOCK,{
            if (errno != EINTR) {
           ...,{
            if (errno != EINTR) {
           ...)<SUB>29</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (errno != EINTR))<SUB>30</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.notEquals,errno != EINTR)<SUB>30</SUB>> ]
"68719476751" [label = <(IDENTIFIER,errno,errno != EINTR)<SUB>30</SUB>> ]
"68719476752" [label = <(IDENTIFIER,EINTR,errno != EINTR)<SUB>30</SUB>> ]
"25769803782" [label = <(BLOCK,{
                fprintf(stderr, &quot;Failed to wr...,{
                fprintf(stderr, &quot;Failed to wr...)<SUB>30</SUB>> ]
"30064771087" [label = <(fprintf,fprintf(stderr, &quot;Failed to write: %s\n&quot;, strerr...)<SUB>31</SUB>> ]
"68719476753" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;Failed to write: %s\n&quot;, strerr...)<SUB>31</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;Failed to write: %s\n&quot;,fprintf(stderr, &quot;Failed to write: %s\n&quot;, strerr...)<SUB>31</SUB>> ]
"30064771088" [label = <(strerror,strerror(errno))<SUB>31</SUB>> ]
"68719476754" [label = <(IDENTIFIER,errno,strerror(errno))<SUB>31</SUB>> ]
"30064771089" [label = <(abort,abort())<SUB>32</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>34</SUB>> ]
"25769803783" [label = <(BLOCK,{
            if (hickup) {
                usl...,{
            if (hickup) {
                usl...)<SUB>34</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (hickup))<SUB>35</SUB>> ]
"68719476755" [label = <(IDENTIFIER,hickup,if (hickup))<SUB>35</SUB>> ]
"25769803784" [label = <(BLOCK,{
                usleep(100);
            },{
                usleep(100);
            })<SUB>35</SUB>> ]
"30064771090" [label = <(usleep,usleep(100))<SUB>36</SUB>> ]
"90194313222" [label = <(LITERAL,100,usleep(100))<SUB>36</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignmentPlus,offset += nw)<SUB>38</SUB>> ]
"68719476756" [label = <(IDENTIFIER,offset,offset += nw)<SUB>38</SUB>> ]
"68719476757" [label = <(IDENTIFIER,nw,offset += nw)<SUB>38</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.lessThan,offset &lt; len)<SUB>40</SUB>> ]
"68719476758" [label = <(IDENTIFIER,offset,offset &lt; len)<SUB>40</SUB>> ]
"68719476759" [label = <(IDENTIFIER,len,offset &lt; len)<SUB>40</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "30064771092"  [ label = "AST: "] 
  "25769803778" -> "94489280514"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "94489280515"  [ label = "AST: "] 
  "25769803778" -> "30064771081"  [ label = "AST: "] 
  "25769803778" -> "47244640259"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "47244640257" -> "68719476742"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771076"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771076" -> "68719476743"  [ label = "AST: "] 
  "30064771076" -> "90194313217"  [ label = "AST: "] 
  "25769803780" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476744"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "90194313219"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "90194313218"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476749"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "47244640259" -> "30064771084"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "47244640259" -> "47244640261"  [ label = "AST: "] 
  "30064771084" -> "68719476750"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "90194313220"  [ label = "AST: "] 
  "25769803781" -> "47244640260"  [ label = "AST: "] 
  "47244640260" -> "30064771086"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771086" -> "68719476751"  [ label = "AST: "] 
  "30064771086" -> "68719476752"  [ label = "AST: "] 
  "25769803782" -> "30064771087"  [ label = "AST: "] 
  "25769803782" -> "30064771089"  [ label = "AST: "] 
  "30064771087" -> "68719476753"  [ label = "AST: "] 
  "30064771087" -> "90194313221"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476754"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "47244640262"  [ label = "AST: "] 
  "25769803783" -> "30064771091"  [ label = "AST: "] 
  "47244640262" -> "68719476755"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "25769803784" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "90194313222"  [ label = "AST: "] 
  "30064771091" -> "68719476756"  [ label = "AST: "] 
  "30064771091" -> "68719476757"  [ label = "AST: "] 
  "30064771092" -> "68719476758"  [ label = "AST: "] 
  "30064771092" -> "68719476759"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771073" -> "30064771075"  [ label = "CFG: "] 
  "30064771092" -> "128849018880"  [ label = "CFG: "] 
  "30064771092" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "68719476742"  [ label = "CFG: "] 
  "30064771081" -> "30064771085"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "68719476742" -> "30064771076"  [ label = "CFG: "] 
  "68719476742" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "68719476755"  [ label = "CFG: "] 
  "30064771084" -> "30064771086"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771076" -> "30064771080"  [ label = "CFG: "] 
  "30064771076" -> "30064771083"  [ label = "CFG: "] 
  "30064771086" -> "30064771092"  [ label = "CFG: "] 
  "30064771086" -> "30064771088"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771077" -> "30064771083"  [ label = "CFG: "] 
  "30064771087" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "30064771092"  [ label = "CFG: "] 
  "68719476755" -> "30064771090"  [ label = "CFG: "] 
  "68719476755" -> "30064771091"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "115964116994" -> "128849018880"  [ label = "DDG: hickup"] 
  "30064771072" -> "128849018880"  [ label = "DDG: offset = 0"] 
  "30064771073" -> "128849018880"  [ label = "DDG: buf"] 
  "30064771073" -> "128849018880"  [ label = "DDG: * ptr = buf"] 
  "30064771074" -> "128849018880"  [ label = "DDG: len - offset"] 
  "30064771074" -> "128849018880"  [ label = "DDG: num_bytes = len - offset"] 
  "30064771076" -> "128849018880"  [ label = "DDG: num_bytes &gt; 1024"] 
  "30064771079" -> "128849018880"  [ label = "DDG: rand()"] 
  "30064771078" -> "128849018880"  [ label = "DDG: rand() % 1023"] 
  "30064771077" -> "128849018880"  [ label = "DDG: (rand() % 1023) + 1"] 
  "30064771077" -> "128849018880"  [ label = "DDG: num_bytes = (rand() % 1023) + 1"] 
  "30064771083" -> "128849018880"  [ label = "DDG: ptr"] 
  "30064771082" -> "128849018880"  [ label = "DDG: ptr + offset"] 
  "30064771082" -> "128849018880"  [ label = "DDG: num_bytes"] 
  "30064771081" -> "128849018880"  [ label = "DDG: write(sock, ptr + offset, num_bytes)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: nw = write(sock, ptr + offset, num_bytes)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: nw"] 
  "30064771084" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771084" -> "128849018880"  [ label = "DDG: nw == -1"] 
  "30064771090" -> "128849018880"  [ label = "DDG: usleep(100)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: nw"] 
  "30064771091" -> "128849018880"  [ label = "DDG: offset += nw"] 
  "30064771086" -> "128849018880"  [ label = "DDG: errno"] 
  "30064771086" -> "128849018880"  [ label = "DDG: errno != EINTR"] 
  "30064771088" -> "128849018880"  [ label = "DDG: errno"] 
  "30064771087" -> "128849018880"  [ label = "DDG: strerror(errno)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;Failed to write: %s\n&quot;, strerror(errno))"] 
  "30064771092" -> "128849018880"  [ label = "DDG: offset"] 
  "30064771092" -> "128849018880"  [ label = "DDG: len"] 
  "30064771092" -> "128849018880"  [ label = "DDG: offset &lt; len"] 
  "30064771087" -> "128849018880"  [ label = "DDG: stderr"] 
  "30064771082" -> "128849018880"  [ label = "DDG: sock"] 
  "30064771086" -> "128849018880"  [ label = "DDG: EINTR"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: buf"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: len"] 
  "30064771075" -> "30064771074"  [ label = "DDG: offset"] 
  "30064771082" -> "30064771081"  [ label = "DDG: sock"] 
  "30064771082" -> "30064771081"  [ label = "DDG: ptr + offset"] 
  "30064771082" -> "30064771081"  [ label = "DDG: num_bytes"] 
  "30064771091" -> "30064771092"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771075" -> "30064771092"  [ label = "DDG: offset"] 
  "30064771075" -> "30064771092"  [ label = "DDG: len"] 
  "111669149697" -> "68719476742"  [ label = "DDG: "] 
  "115964116993" -> "30064771075"  [ label = "DDG: len"] 
  "30064771092" -> "30064771075"  [ label = "DDG: len"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771072" -> "30064771075"  [ label = "DDG: offset"] 
  "30064771092" -> "30064771075"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771073" -> "30064771082"  [ label = "DDG: ptr"] 
  "30064771075" -> "30064771082"  [ label = "DDG: offset"] 
  "30064771074" -> "30064771082"  [ label = "DDG: num_bytes"] 
  "30064771076" -> "30064771082"  [ label = "DDG: num_bytes"] 
  "30064771077" -> "30064771082"  [ label = "DDG: num_bytes"] 
  "30064771081" -> "30064771084"  [ label = "DDG: nw"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: 1"] 
  "30064771073" -> "30064771083"  [ label = "DDG: ptr"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771075" -> "30064771083"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771084" -> "30064771091"  [ label = "DDG: nw"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771074" -> "30064771076"  [ label = "DDG: num_bytes"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771079" -> "30064771077"  [ label = "DDG: rand()"] 
  "30064771079" -> "30064771077"  [ label = "DDG: 1023"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771088" -> "30064771086"  [ label = "DDG: errno"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "111669149697" -> "68719476755"  [ label = "DDG: "] 
  "30064771075" -> "30064771091"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: errno"] 
  "30064771079" -> "30064771078"  [ label = "DDG: rand()"] 
  "30064771079" -> "30064771078"  [ label = "DDG: 1023"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771086" -> "30064771088"  [ label = "DDG: errno"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771092" -> "30064771075"  [ label = "CDG: "] 
  "30064771092" -> "30064771074"  [ label = "CDG: "] 
  "30064771092" -> "30064771084"  [ label = "CDG: "] 
  "30064771092" -> "30064771083"  [ label = "CDG: "] 
  "30064771092" -> "30064771085"  [ label = "CDG: "] 
  "30064771092" -> "30064771082"  [ label = "CDG: "] 
  "30064771092" -> "30064771081"  [ label = "CDG: "] 
  "30064771092" -> "30064771092"  [ label = "CDG: "] 
  "30064771092" -> "68719476742"  [ label = "CDG: "] 
  "68719476742" -> "30064771076"  [ label = "CDG: "] 
  "30064771084" -> "68719476755"  [ label = "CDG: "] 
  "30064771084" -> "30064771086"  [ label = "CDG: "] 
  "30064771084" -> "30064771091"  [ label = "CDG: "] 
  "30064771076" -> "30064771078"  [ label = "CDG: "] 
  "30064771076" -> "30064771077"  [ label = "CDG: "] 
  "30064771076" -> "30064771080"  [ label = "CDG: "] 
  "30064771076" -> "30064771079"  [ label = "CDG: "] 
  "30064771086" -> "30064771088"  [ label = "CDG: "] 
  "30064771086" -> "30064771087"  [ label = "CDG: "] 
  "30064771086" -> "30064771089"  [ label = "CDG: "] 
  "68719476755" -> "30064771090"  [ label = "CDG: "] 
}
"""
)
