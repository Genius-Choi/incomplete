[33mval[0m [36mres1870[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "check_reg_sane_offset" {  
"111669149697" [label = <(METHOD,check_reg_sane_offset)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,struct bpf_verifier_env *env)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const struct bpf_reg_state *reg)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,enum bpf_reg_type type)<SUB>3</SUB>> ]
"25769803777" [label = <(BLOCK,{
	bool known = tnum_is_const(reg-&gt;var_off);
	s...,{
	bool known = tnum_is_const(reg-&gt;var_off);
	s...)<SUB>4</SUB>> ]
"94489280512" [label = <(LOCAL,bool known: bool)<SUB>5</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,known = tnum_is_const(reg-&gt;var_off))<SUB>5</SUB>> ]
"68719476736" [label = <(IDENTIFIER,known,known = tnum_is_const(reg-&gt;var_off))<SUB>5</SUB>> ]
"30064771073" [label = <(tnum_is_const,tnum_is_const(reg-&gt;var_off))<SUB>5</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.indirectFieldAccess,reg-&gt;var_off)<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,reg,tnum_is_const(reg-&gt;var_off))<SUB>5</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,var_off,var_off)<SUB>5</SUB>> ]
"94489280513" [label = <(LOCAL,s64 val: s64)<SUB>6</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,val = reg-&gt;var_off.value)<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,val,val = reg-&gt;var_off.value)<SUB>6</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,reg-&gt;var_off.value)<SUB>6</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.indirectFieldAccess,reg-&gt;var_off)<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,reg,val = reg-&gt;var_off.value)<SUB>6</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,var_off,var_off)<SUB>6</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6</SUB>> ]
"94489280514" [label = <(LOCAL,s64 smin: s64)<SUB>7</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,smin = reg-&gt;smin_value)<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,smin,smin = reg-&gt;smin_value)<SUB>7</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indirectFieldAccess,reg-&gt;smin_value)<SUB>7</SUB>> ]
"68719476741" [label = <(IDENTIFIER,reg,smin = reg-&gt;smin_value)<SUB>7</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,smin_value,smin_value)<SUB>7</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (known &amp;&amp; (val &gt;= BPF_MAX_VAR_OFF || val &lt;= -BPF_MAX_VAR_OFF)))<SUB>9</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.logicalAnd,known &amp;&amp; (val &gt;= BPF_MAX_VAR_OFF || val &lt;= -BPF...)<SUB>9</SUB>> ]
"68719476742" [label = <(IDENTIFIER,known,known &amp;&amp; (val &gt;= BPF_MAX_VAR_OFF || val &lt;= -BPF...)<SUB>9</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.logicalOr,val &gt;= BPF_MAX_VAR_OFF || val &lt;= -BPF_MAX_VAR_OFF)<SUB>9</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.greaterEqualsThan,val &gt;= BPF_MAX_VAR_OFF)<SUB>9</SUB>> ]
"68719476743" [label = <(IDENTIFIER,val,val &gt;= BPF_MAX_VAR_OFF)<SUB>9</SUB>> ]
"68719476744" [label = <(IDENTIFIER,BPF_MAX_VAR_OFF,val &gt;= BPF_MAX_VAR_OFF)<SUB>9</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.lessEqualsThan,val &lt;= -BPF_MAX_VAR_OFF)<SUB>9</SUB>> ]
"68719476745" [label = <(IDENTIFIER,val,val &lt;= -BPF_MAX_VAR_OFF)<SUB>9</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.minus,-BPF_MAX_VAR_OFF)<SUB>9</SUB>> ]
"68719476746" [label = <(IDENTIFIER,BPF_MAX_VAR_OFF,-BPF_MAX_VAR_OFF)<SUB>9</SUB>> ]
"25769803778" [label = <(BLOCK,{
		verbose(env, &quot;math between %s pointer and %...,{
		verbose(env, &quot;math between %s pointer and %...)<SUB>9</SUB>> ]
"30064771085" [label = <(verbose,verbose(env, &quot;math between %s pointer and %lld ...)<SUB>10</SUB>> ]
"68719476747" [label = <(IDENTIFIER,env,verbose(env, &quot;math between %s pointer and %lld ...)<SUB>10</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;math between %s pointer and %lld is not allowe...,verbose(env, &quot;math between %s pointer and %lld ...)<SUB>10</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indirectIndexAccess,reg_type_str[type])<SUB>11</SUB>> ]
"68719476748" [label = <(IDENTIFIER,reg_type_str,verbose(env, &quot;math between %s pointer and %lld ...)<SUB>11</SUB>> ]
"68719476749" [label = <(IDENTIFIER,type,verbose(env, &quot;math between %s pointer and %lld ...)<SUB>11</SUB>> ]
"68719476750" [label = <(IDENTIFIER,val,verbose(env, &quot;math between %s pointer and %lld ...)<SUB>11</SUB>> ]
"146028888064" [label = <(RETURN,return false;,return false;)<SUB>12</SUB>> ]
"68719476751" [label = <(IDENTIFIER,false,return false;)<SUB>12</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (reg-&gt;off &gt;= BPF_MAX_VAR_OFF || reg-&gt;off &lt;= -BPF_MAX_VAR_OFF))<SUB>15</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.logicalOr,reg-&gt;off &gt;= BPF_MAX_VAR_OFF || reg-&gt;off &lt;= -BPF...)<SUB>15</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.greaterEqualsThan,reg-&gt;off &gt;= BPF_MAX_VAR_OFF)<SUB>15</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.indirectFieldAccess,reg-&gt;off)<SUB>15</SUB>> ]
"68719476752" [label = <(IDENTIFIER,reg,reg-&gt;off &gt;= BPF_MAX_VAR_OFF)<SUB>15</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,off,off)<SUB>15</SUB>> ]
"68719476753" [label = <(IDENTIFIER,BPF_MAX_VAR_OFF,reg-&gt;off &gt;= BPF_MAX_VAR_OFF)<SUB>15</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.lessEqualsThan,reg-&gt;off &lt;= -BPF_MAX_VAR_OFF)<SUB>15</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.indirectFieldAccess,reg-&gt;off)<SUB>15</SUB>> ]
"68719476754" [label = <(IDENTIFIER,reg,reg-&gt;off &lt;= -BPF_MAX_VAR_OFF)<SUB>15</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,off,off)<SUB>15</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.minus,-BPF_MAX_VAR_OFF)<SUB>15</SUB>> ]
"68719476755" [label = <(IDENTIFIER,BPF_MAX_VAR_OFF,-BPF_MAX_VAR_OFF)<SUB>15</SUB>> ]
"25769803779" [label = <(BLOCK,{
		verbose(env, &quot;%s pointer offset %d is not a...,{
		verbose(env, &quot;%s pointer offset %d is not a...)<SUB>15</SUB>> ]
"30064771093" [label = <(verbose,verbose(env, &quot;%s pointer offset %d is not allow...)<SUB>16</SUB>> ]
"68719476756" [label = <(IDENTIFIER,env,verbose(env, &quot;%s pointer offset %d is not allow...)<SUB>16</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;%s pointer offset %d is not allowed\n&quot;,verbose(env, &quot;%s pointer offset %d is not allow...)<SUB>16</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.indirectIndexAccess,reg_type_str[type])<SUB>17</SUB>> ]
"68719476757" [label = <(IDENTIFIER,reg_type_str,verbose(env, &quot;%s pointer offset %d is not allow...)<SUB>17</SUB>> ]
"68719476758" [label = <(IDENTIFIER,type,verbose(env, &quot;%s pointer offset %d is not allow...)<SUB>17</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.indirectFieldAccess,reg-&gt;off)<SUB>17</SUB>> ]
"68719476759" [label = <(IDENTIFIER,reg,verbose(env, &quot;%s pointer offset %d is not allow...)<SUB>17</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,off,off)<SUB>17</SUB>> ]
"146028888065" [label = <(RETURN,return false;,return false;)<SUB>18</SUB>> ]
"68719476760" [label = <(IDENTIFIER,false,return false;)<SUB>18</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (smin == S64_MIN))<SUB>21</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.equals,smin == S64_MIN)<SUB>21</SUB>> ]
"68719476761" [label = <(IDENTIFIER,smin,smin == S64_MIN)<SUB>21</SUB>> ]
"68719476762" [label = <(IDENTIFIER,S64_MIN,smin == S64_MIN)<SUB>21</SUB>> ]
"25769803780" [label = <(BLOCK,{
		verbose(env, &quot;math between %s pointer and r...,{
		verbose(env, &quot;math between %s pointer and r...)<SUB>21</SUB>> ]
"30064771097" [label = <(verbose,verbose(env, &quot;math between %s pointer and regis...)<SUB>22</SUB>> ]
"68719476763" [label = <(IDENTIFIER,env,verbose(env, &quot;math between %s pointer and regis...)<SUB>22</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;math between %s pointer and register with unbo...,verbose(env, &quot;math between %s pointer and regis...)<SUB>22</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.indirectIndexAccess,reg_type_str[type])<SUB>23</SUB>> ]
"68719476764" [label = <(IDENTIFIER,reg_type_str,verbose(env, &quot;math between %s pointer and regis...)<SUB>23</SUB>> ]
"68719476765" [label = <(IDENTIFIER,type,verbose(env, &quot;math between %s pointer and regis...)<SUB>23</SUB>> ]
"146028888066" [label = <(RETURN,return false;,return false;)<SUB>24</SUB>> ]
"68719476766" [label = <(IDENTIFIER,false,return false;)<SUB>24</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (smin &gt;= BPF_MAX_VAR_OFF || smin &lt;= -BPF_MAX_VAR_OFF))<SUB>27</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.logicalOr,smin &gt;= BPF_MAX_VAR_OFF || smin &lt;= -BPF_MAX_VAR...)<SUB>27</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.greaterEqualsThan,smin &gt;= BPF_MAX_VAR_OFF)<SUB>27</SUB>> ]
"68719476767" [label = <(IDENTIFIER,smin,smin &gt;= BPF_MAX_VAR_OFF)<SUB>27</SUB>> ]
"68719476768" [label = <(IDENTIFIER,BPF_MAX_VAR_OFF,smin &gt;= BPF_MAX_VAR_OFF)<SUB>27</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.lessEqualsThan,smin &lt;= -BPF_MAX_VAR_OFF)<SUB>27</SUB>> ]
"68719476769" [label = <(IDENTIFIER,smin,smin &lt;= -BPF_MAX_VAR_OFF)<SUB>27</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.minus,-BPF_MAX_VAR_OFF)<SUB>27</SUB>> ]
"68719476770" [label = <(IDENTIFIER,BPF_MAX_VAR_OFF,-BPF_MAX_VAR_OFF)<SUB>27</SUB>> ]
"25769803781" [label = <(BLOCK,{
		verbose(env, &quot;value %lld makes %s pointer b...,{
		verbose(env, &quot;value %lld makes %s pointer b...)<SUB>27</SUB>> ]
"30064771103" [label = <(verbose,verbose(env, &quot;value %lld makes %s pointer be ou...)<SUB>28</SUB>> ]
"68719476771" [label = <(IDENTIFIER,env,verbose(env, &quot;value %lld makes %s pointer be ou...)<SUB>28</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;value %lld makes %s pointer be out of bounds\n&quot;,verbose(env, &quot;value %lld makes %s pointer be ou...)<SUB>28</SUB>> ]
"68719476772" [label = <(IDENTIFIER,smin,verbose(env, &quot;value %lld makes %s pointer be ou...)<SUB>29</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.indirectIndexAccess,reg_type_str[type])<SUB>29</SUB>> ]
"68719476773" [label = <(IDENTIFIER,reg_type_str,verbose(env, &quot;value %lld makes %s pointer be ou...)<SUB>29</SUB>> ]
"68719476774" [label = <(IDENTIFIER,type,verbose(env, &quot;value %lld makes %s pointer be ou...)<SUB>29</SUB>> ]
"146028888067" [label = <(RETURN,return false;,return false;)<SUB>30</SUB>> ]
"68719476775" [label = <(IDENTIFIER,false,return false;)<SUB>30</SUB>> ]
"146028888068" [label = <(RETURN,return true;,return true;)<SUB>33</SUB>> ]
"68719476776" [label = <(IDENTIFIER,true,return true;)<SUB>33</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,bool)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "146028888068"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "55834574848"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "55834574850"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "30064771077" -> "55834574849"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771079" -> "55834574851"  [ label = "AST: "] 
  "47244640256" -> "30064771080"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476743"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "25769803778" -> "30064771085"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "30064771085" -> "68719476747"  [ label = "AST: "] 
  "30064771085" -> "90194313216"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771086" -> "68719476748"  [ label = "AST: "] 
  "30064771086" -> "68719476749"  [ label = "AST: "] 
  "146028888064" -> "68719476751"  [ label = "AST: "] 
  "47244640257" -> "30064771087"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "30064771090"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "30064771089" -> "68719476752"  [ label = "AST: "] 
  "30064771089" -> "55834574852"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "68719476754"  [ label = "AST: "] 
  "30064771091" -> "55834574853"  [ label = "AST: "] 
  "30064771092" -> "68719476755"  [ label = "AST: "] 
  "25769803779" -> "30064771093"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "30064771093" -> "68719476756"  [ label = "AST: "] 
  "30064771093" -> "90194313217"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "68719476757"  [ label = "AST: "] 
  "30064771094" -> "68719476758"  [ label = "AST: "] 
  "30064771095" -> "68719476759"  [ label = "AST: "] 
  "30064771095" -> "55834574854"  [ label = "AST: "] 
  "146028888065" -> "68719476760"  [ label = "AST: "] 
  "47244640258" -> "30064771096"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771096" -> "68719476761"  [ label = "AST: "] 
  "30064771096" -> "68719476762"  [ label = "AST: "] 
  "25769803780" -> "30064771097"  [ label = "AST: "] 
  "25769803780" -> "146028888066"  [ label = "AST: "] 
  "30064771097" -> "68719476763"  [ label = "AST: "] 
  "30064771097" -> "90194313218"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476764"  [ label = "AST: "] 
  "30064771098" -> "68719476765"  [ label = "AST: "] 
  "146028888066" -> "68719476766"  [ label = "AST: "] 
  "47244640259" -> "30064771099"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "68719476767"  [ label = "AST: "] 
  "30064771100" -> "68719476768"  [ label = "AST: "] 
  "30064771101" -> "68719476769"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "68719476770"  [ label = "AST: "] 
  "25769803781" -> "30064771103"  [ label = "AST: "] 
  "25769803781" -> "146028888067"  [ label = "AST: "] 
  "30064771103" -> "68719476771"  [ label = "AST: "] 
  "30064771103" -> "90194313219"  [ label = "AST: "] 
  "30064771103" -> "68719476772"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476773"  [ label = "AST: "] 
  "30064771104" -> "68719476774"  [ label = "AST: "] 
  "146028888067" -> "68719476775"  [ label = "AST: "] 
  "146028888068" -> "68719476776"  [ label = "AST: "] 
  "30064771072" -> "55834574849"  [ label = "CFG: "] 
  "30064771075" -> "55834574851"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771078" -> "30064771082"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771080" -> "30064771086"  [ label = "CFG: "] 
  "30064771080" -> "55834574852"  [ label = "CFG: "] 
  "30064771087" -> "30064771094"  [ label = "CFG: "] 
  "30064771087" -> "30064771096"  [ label = "CFG: "] 
  "30064771096" -> "30064771098"  [ label = "CFG: "] 
  "30064771096" -> "30064771100"  [ label = "CFG: "] 
  "30064771099" -> "30064771104"  [ label = "CFG: "] 
  "30064771099" -> "146028888068"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771076"  [ label = "CFG: "] 
  "55834574851" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771085" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771088" -> "55834574853"  [ label = "CFG: "] 
  "30064771090" -> "30064771087"  [ label = "CFG: "] 
  "30064771093" -> "146028888065"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771097" -> "146028888066"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771100" -> "30064771102"  [ label = "CFG: "] 
  "30064771101" -> "30064771099"  [ label = "CFG: "] 
  "30064771103" -> "146028888067"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "55834574848" -> "30064771074"  [ label = "CFG: "] 
  "55834574849" -> "30064771077"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771083" -> "30064771081"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771092" -> "30064771090"  [ label = "CFG: "] 
  "30064771094" -> "55834574854"  [ label = "CFG: "] 
  "30064771095" -> "30064771093"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "55834574852" -> "30064771089"  [ label = "CFG: "] 
  "55834574853" -> "30064771091"  [ label = "CFG: "] 
  "55834574854" -> "30064771095"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: reg"] 
  "115964116994" -> "128849018880"  [ label = "DDG: type"] 
  "30064771073" -> "128849018880"  [ label = "DDG: reg-&gt;var_off"] 
  "30064771072" -> "128849018880"  [ label = "DDG: tnum_is_const(reg-&gt;var_off)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: known = tnum_is_const(reg-&gt;var_off)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: reg-&gt;var_off.value"] 
  "30064771075" -> "128849018880"  [ label = "DDG: val = reg-&gt;var_off.value"] 
  "30064771078" -> "128849018880"  [ label = "DDG: smin"] 
  "30064771078" -> "128849018880"  [ label = "DDG: reg-&gt;smin_value"] 
  "30064771078" -> "128849018880"  [ label = "DDG: smin = reg-&gt;smin_value"] 
  "30064771080" -> "128849018880"  [ label = "DDG: known"] 
  "30064771082" -> "128849018880"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "30064771081" -> "128849018880"  [ label = "DDG: val &gt;= BPF_MAX_VAR_OFF"] 
  "30064771084" -> "128849018880"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "30064771083" -> "128849018880"  [ label = "DDG: -BPF_MAX_VAR_OFF"] 
  "30064771081" -> "128849018880"  [ label = "DDG: val &lt;= -BPF_MAX_VAR_OFF"] 
  "30064771080" -> "128849018880"  [ label = "DDG: val &gt;= BPF_MAX_VAR_OFF || val &lt;= -BPF_MAX_VAR_OFF"] 
  "30064771080" -> "128849018880"  [ label = "DDG: known &amp;&amp; (val &gt;= BPF_MAX_VAR_OFF || val &lt;= -BPF_MAX_VAR_OFF)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: env"] 
  "30064771085" -> "128849018880"  [ label = "DDG: reg_type_str[type]"] 
  "30064771085" -> "128849018880"  [ label = "DDG: val"] 
  "30064771085" -> "128849018880"  [ label = "DDG: verbose(env, &quot;math between %s pointer and %lld is not allowed\n&quot;,
			reg_type_str[type], val)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: S64_MIN"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: reg-&gt;var_off"] 
  "115964116993" -> "30064771078"  [ label = "DDG: reg"] 
  "68719476776" -> "146028888068"  [ label = "DDG: true"] 
  "111669149697" -> "146028888068"  [ label = "DDG: "] 
  "111669149697" -> "68719476776"  [ label = "DDG: "] 
  "115964116993" -> "30064771073"  [ label = "DDG: reg"] 
  "30064771072" -> "30064771080"  [ label = "DDG: known"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: val &gt;= BPF_MAX_VAR_OFF"] 
  "30064771081" -> "30064771080"  [ label = "DDG: val &lt;= -BPF_MAX_VAR_OFF"] 
  "68719476751" -> "146028888064"  [ label = "DDG: false"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: reg-&gt;off"] 
  "30064771088" -> "30064771087"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "30064771090" -> "30064771087"  [ label = "DDG: reg-&gt;off"] 
  "30064771090" -> "30064771087"  [ label = "DDG: -BPF_MAX_VAR_OFF"] 
  "68719476760" -> "146028888065"  [ label = "DDG: false"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "30064771078" -> "30064771096"  [ label = "DDG: smin"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "68719476766" -> "146028888066"  [ label = "DDG: false"] 
  "111669149697" -> "146028888066"  [ label = "DDG: "] 
  "30064771100" -> "30064771099"  [ label = "DDG: smin"] 
  "30064771100" -> "30064771099"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "30064771101" -> "30064771099"  [ label = "DDG: smin"] 
  "30064771101" -> "30064771099"  [ label = "DDG: -BPF_MAX_VAR_OFF"] 
  "68719476775" -> "146028888067"  [ label = "DDG: false"] 
  "111669149697" -> "146028888067"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: val"] 
  "30064771082" -> "30064771081"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "30064771083" -> "30064771081"  [ label = "DDG: val"] 
  "30064771083" -> "30064771081"  [ label = "DDG: -BPF_MAX_VAR_OFF"] 
  "115964116992" -> "30064771085"  [ label = "DDG: env"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771075" -> "30064771085"  [ label = "DDG: val"] 
  "30064771082" -> "30064771085"  [ label = "DDG: val"] 
  "30064771083" -> "30064771085"  [ label = "DDG: val"] 
  "111669149697" -> "68719476751"  [ label = "DDG: "] 
  "115964116993" -> "30064771088"  [ label = "DDG: reg"] 
  "30064771082" -> "30064771088"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "30064771084" -> "30064771088"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "115964116993" -> "30064771090"  [ label = "DDG: reg"] 
  "30064771088" -> "30064771090"  [ label = "DDG: reg-&gt;off"] 
  "30064771092" -> "30064771090"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "115964116992" -> "30064771093"  [ label = "DDG: env"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "115964116993" -> "30064771093"  [ label = "DDG: reg"] 
  "30064771088" -> "30064771093"  [ label = "DDG: reg-&gt;off"] 
  "30064771090" -> "30064771093"  [ label = "DDG: reg-&gt;off"] 
  "111669149697" -> "68719476760"  [ label = "DDG: "] 
  "115964116992" -> "30064771097"  [ label = "DDG: env"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "111669149697" -> "68719476766"  [ label = "DDG: "] 
  "30064771096" -> "30064771100"  [ label = "DDG: smin"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771088" -> "30064771100"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "30064771092" -> "30064771100"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "30064771100" -> "30064771101"  [ label = "DDG: smin"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771102" -> "30064771101"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "115964116992" -> "30064771103"  [ label = "DDG: env"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771100" -> "30064771103"  [ label = "DDG: smin"] 
  "30064771101" -> "30064771103"  [ label = "DDG: smin"] 
  "111669149697" -> "68719476775"  [ label = "DDG: "] 
  "30064771075" -> "30064771082"  [ label = "DDG: val"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771082" -> "30064771083"  [ label = "DDG: val"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771084" -> "30064771083"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "30064771088" -> "30064771092"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771100" -> "30064771102"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771082" -> "30064771084"  [ label = "DDG: BPF_MAX_VAR_OFF"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771080" -> "30064771085"  [ label = "CDG: "] 
  "30064771080" -> "30064771086"  [ label = "CDG: "] 
  "30064771080" -> "30064771087"  [ label = "CDG: "] 
  "30064771080" -> "30064771088"  [ label = "CDG: "] 
  "30064771080" -> "30064771089"  [ label = "CDG: "] 
  "30064771080" -> "146028888064"  [ label = "CDG: "] 
  "30064771080" -> "55834574852"  [ label = "CDG: "] 
  "30064771087" -> "30064771093"  [ label = "CDG: "] 
  "30064771087" -> "30064771094"  [ label = "CDG: "] 
  "30064771087" -> "30064771095"  [ label = "CDG: "] 
  "30064771087" -> "30064771096"  [ label = "CDG: "] 
  "30064771087" -> "146028888065"  [ label = "CDG: "] 
  "30064771087" -> "55834574854"  [ label = "CDG: "] 
  "30064771096" -> "30064771098"  [ label = "CDG: "] 
  "30064771096" -> "30064771099"  [ label = "CDG: "] 
  "30064771096" -> "30064771100"  [ label = "CDG: "] 
  "30064771096" -> "30064771097"  [ label = "CDG: "] 
  "30064771096" -> "146028888066"  [ label = "CDG: "] 
  "30064771099" -> "30064771103"  [ label = "CDG: "] 
  "30064771099" -> "30064771104"  [ label = "CDG: "] 
  "30064771099" -> "146028888068"  [ label = "CDG: "] 
  "30064771099" -> "146028888067"  [ label = "CDG: "] 
  "30064771088" -> "30064771090"  [ label = "CDG: "] 
  "30064771088" -> "30064771091"  [ label = "CDG: "] 
  "30064771088" -> "30064771092"  [ label = "CDG: "] 
  "30064771088" -> "55834574853"  [ label = "CDG: "] 
  "30064771100" -> "30064771101"  [ label = "CDG: "] 
  "30064771100" -> "30064771102"  [ label = "CDG: "] 
  "30064771082" -> "30064771083"  [ label = "CDG: "] 
  "30064771082" -> "30064771084"  [ label = "CDG: "] 
}
"""
)
