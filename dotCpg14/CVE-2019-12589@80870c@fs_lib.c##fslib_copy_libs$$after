[33mval[0m [36mres871[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "fslib_copy_libs" {  
"111669149697" [label = <(METHOD,fslib_copy_libs)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const char *full_path)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	assert(full_path);
	if (arg_debug || arg_deb...,{
	assert(full_path);
	if (arg_debug || arg_deb...)<SUB>1</SUB>> ]
"30064771072" [label = <(assert,assert(full_path))<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,full_path,assert(full_path))<SUB>2</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (arg_debug || arg_debug_private_lib))<SUB>3</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.logicalOr,arg_debug || arg_debug_private_lib)<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,arg_debug,arg_debug || arg_debug_private_lib)<SUB>3</SUB>> ]
"68719476738" [label = <(IDENTIFIER,arg_debug_private_lib,arg_debug || arg_debug_private_lib)<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>> ]
"30064771074" [label = <(printf,printf(&quot;    fslib_copy_libs %s\n&quot;, full_path))<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;    fslib_copy_libs %s\n&quot;,printf(&quot;    fslib_copy_libs %s\n&quot;, full_path))<SUB>4</SUB>> ]
"68719476739" [label = <(IDENTIFIER,full_path,printf(&quot;    fslib_copy_libs %s\n&quot;, full_path))<SUB>4</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (access(full_path, R_OK)))<SUB>8</SUB>> ]
"30064771075" [label = <(access,access(full_path, R_OK))<SUB>8</SUB>> ]
"68719476740" [label = <(IDENTIFIER,full_path,access(full_path, R_OK))<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,R_OK,access(full_path, R_OK))<SUB>8</SUB>> ]
"25769803779" [label = <(BLOCK,{
		if (arg_debug || arg_debug_private_lib)
			...,{
		if (arg_debug || arg_debug_private_lib)
			...)<SUB>8</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (arg_debug || arg_debug_private_lib))<SUB>9</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.logicalOr,arg_debug || arg_debug_private_lib)<SUB>9</SUB>> ]
"68719476742" [label = <(IDENTIFIER,arg_debug,arg_debug || arg_debug_private_lib)<SUB>9</SUB>> ]
"68719476743" [label = <(IDENTIFIER,arg_debug_private_lib,arg_debug || arg_debug_private_lib)<SUB>9</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>> ]
"30064771077" [label = <(printf,printf(&quot;cannot find %s for private-lib, skippin...)<SUB>10</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;cannot find %s for private-lib, skipping...\n&quot;,printf(&quot;cannot find %s for private-lib, skippin...)<SUB>10</SUB>> ]
"68719476744" [label = <(IDENTIFIER,full_path,printf(&quot;cannot find %s for private-lib, skippin...)<SUB>10</SUB>> ]
"146028888064" [label = <(RETURN,return;,return;)<SUB>11</SUB>> ]
"30064771078" [label = <(unlink,unlink(RUN_LIB_FILE))<SUB>15</SUB>> ]
"68719476745" [label = <(IDENTIFIER,RUN_LIB_FILE,unlink(RUN_LIB_FILE))<SUB>15</SUB>> ]
"30064771079" [label = <(create_empty_file_as_root,create_empty_file_as_root(RUN_LIB_FILE, 0644))<SUB>16</SUB>> ]
"68719476746" [label = <(IDENTIFIER,RUN_LIB_FILE,create_empty_file_as_root(RUN_LIB_FILE, 0644))<SUB>16</SUB>> ]
"90194313218" [label = <(LITERAL,0644,create_empty_file_as_root(RUN_LIB_FILE, 0644))<SUB>16</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (chown(RUN_LIB_FILE, getuid(), getgid())))<SUB>17</SUB>> ]
"30064771080" [label = <(chown,chown(RUN_LIB_FILE, getuid(), getgid()))<SUB>17</SUB>> ]
"68719476747" [label = <(IDENTIFIER,RUN_LIB_FILE,chown(RUN_LIB_FILE, getuid(), getgid()))<SUB>17</SUB>> ]
"30064771081" [label = <(getuid,getuid())<SUB>17</SUB>> ]
"30064771082" [label = <(getgid,getgid())<SUB>17</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>> ]
"30064771083" [label = <(errExit,errExit(&quot;chown&quot;))<SUB>18</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;chown&quot;,errExit(&quot;chown&quot;))<SUB>18</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (arg_debug || arg_debug_private_lib))<SUB>21</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.logicalOr,arg_debug || arg_debug_private_lib)<SUB>21</SUB>> ]
"68719476748" [label = <(IDENTIFIER,arg_debug,arg_debug || arg_debug_private_lib)<SUB>21</SUB>> ]
"68719476749" [label = <(IDENTIFIER,arg_debug_private_lib,arg_debug || arg_debug_private_lib)<SUB>21</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>> ]
"30064771085" [label = <(printf,printf(&quot;    running fldd %s\n&quot;, full_path))<SUB>22</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;    running fldd %s\n&quot;,printf(&quot;    running fldd %s\n&quot;, full_path))<SUB>22</SUB>> ]
"68719476750" [label = <(IDENTIFIER,full_path,printf(&quot;    running fldd %s\n&quot;, full_path))<SUB>22</SUB>> ]
"30064771086" [label = <(sbox_run,sbox_run(SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_N...)<SUB>23</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.or,SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_NONE)<SUB>23</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.or,SBOX_USER | SBOX_SECCOMP)<SUB>23</SUB>> ]
"68719476751" [label = <(IDENTIFIER,SBOX_USER,SBOX_USER | SBOX_SECCOMP)<SUB>23</SUB>> ]
"68719476752" [label = <(IDENTIFIER,SBOX_SECCOMP,SBOX_USER | SBOX_SECCOMP)<SUB>23</SUB>> ]
"68719476753" [label = <(IDENTIFIER,SBOX_CAPS_NONE,SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_NONE)<SUB>23</SUB>> ]
"90194313221" [label = <(LITERAL,3,sbox_run(SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_N...)<SUB>23</SUB>> ]
"68719476754" [label = <(IDENTIFIER,PATH_FLDD,sbox_run(SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_N...)<SUB>23</SUB>> ]
"68719476755" [label = <(IDENTIFIER,full_path,sbox_run(SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_N...)<SUB>23</SUB>> ]
"68719476756" [label = <(IDENTIFIER,RUN_LIB_FILE,sbox_run(SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_N...)<SUB>23</SUB>> ]
"94489280512" [label = <(LOCAL,FILE* fp: FILE*)<SUB>26</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,*fp = fopen(RUN_LIB_FILE, &quot;r&quot;))<SUB>26</SUB>> ]
"68719476757" [label = <(IDENTIFIER,fp,*fp = fopen(RUN_LIB_FILE, &quot;r&quot;))<SUB>26</SUB>> ]
"30064771090" [label = <(fopen,fopen(RUN_LIB_FILE, &quot;r&quot;))<SUB>26</SUB>> ]
"68719476758" [label = <(IDENTIFIER,RUN_LIB_FILE,fopen(RUN_LIB_FILE, &quot;r&quot;))<SUB>26</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;r&quot;,fopen(RUN_LIB_FILE, &quot;r&quot;))<SUB>26</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (!fp))<SUB>27</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.logicalNot,!fp)<SUB>27</SUB>> ]
"68719476759" [label = <(IDENTIFIER,fp,!fp)<SUB>27</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>> ]
"30064771092" [label = <(errExit,errExit(&quot;fopen&quot;))<SUB>28</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;fopen&quot;,errExit(&quot;fopen&quot;))<SUB>28</SUB>> ]
"94489280513" [label = <(LOCAL,char[MAXBUF] buf: char[MAXBUF])<SUB>30</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,buf[MAXBUF])<SUB>30</SUB>> ]
"68719476760" [label = <(IDENTIFIER,buf,buf[MAXBUF])<SUB>30</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.alloc,buf[MAXBUF])<SUB>30</SUB>> ]
"68719476761" [label = <(IDENTIFIER,MAXBUF,buf[MAXBUF])<SUB>30</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,WHILE,while (fgets(buf, MAXBUF, fp)))<SUB>31</SUB>> ]
"30064771095" [label = <(fgets,fgets(buf, MAXBUF, fp))<SUB>31</SUB>> ]
"68719476762" [label = <(IDENTIFIER,buf,fgets(buf, MAXBUF, fp))<SUB>31</SUB>> ]
"68719476763" [label = <(IDENTIFIER,MAXBUF,fgets(buf, MAXBUF, fp))<SUB>31</SUB>> ]
"68719476764" [label = <(IDENTIFIER,fp,fgets(buf, MAXBUF, fp))<SUB>31</SUB>> ]
"25769803784" [label = <(BLOCK,{
		// remove \n
		char *ptr = strchr(buf, '\n'...,{
		// remove \n
		char *ptr = strchr(buf, '\n'...)<SUB>31</SUB>> ]
"94489280514" [label = <(LOCAL,char* ptr: char*)<SUB>33</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,*ptr = strchr(buf, '\n'))<SUB>33</SUB>> ]
"68719476765" [label = <(IDENTIFIER,ptr,*ptr = strchr(buf, '\n'))<SUB>33</SUB>> ]
"30064771097" [label = <(strchr,strchr(buf, '\n'))<SUB>33</SUB>> ]
"68719476766" [label = <(IDENTIFIER,buf,strchr(buf, '\n'))<SUB>33</SUB>> ]
"90194313224" [label = <(LITERAL,'\n',strchr(buf, '\n'))<SUB>33</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (ptr))<SUB>34</SUB>> ]
"68719476767" [label = <(IDENTIFIER,ptr,if (ptr))<SUB>34</SUB>> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,*ptr = '\0')<SUB>35</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.indirection,*ptr)<SUB>35</SUB>> ]
"68719476768" [label = <(IDENTIFIER,ptr,*ptr = '\0')<SUB>35</SUB>> ]
"90194313225" [label = <(LITERAL,'\0',*ptr = '\0')<SUB>35</SUB>> ]
"30064771100" [label = <(fslib_duplicate,fslib_duplicate(buf))<SUB>36</SUB>> ]
"68719476769" [label = <(IDENTIFIER,buf,fslib_duplicate(buf))<SUB>36</SUB>> ]
"30064771101" [label = <(fclose,fclose(fp))<SUB>38</SUB>> ]
"68719476770" [label = <(IDENTIFIER,fp,fclose(fp))<SUB>38</SUB>> ]
"30064771102" [label = <(unlink,unlink(RUN_LIB_FILE))<SUB>39</SUB>> ]
"68719476771" [label = <(IDENTIFIER,RUN_LIB_FILE,unlink(RUN_LIB_FILE))<SUB>39</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771089"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "25769803777" -> "30064771101"  [ label = "AST: "] 
  "25769803777" -> "30064771102"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "47244640256" -> "30064771073"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "47244640257" -> "30064771075"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "25769803779" -> "146028888064"  [ label = "AST: "] 
  "47244640258" -> "30064771076"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771076" -> "68719476743"  [ label = "AST: "] 
  "25769803780" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "90194313217"  [ label = "AST: "] 
  "30064771077" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "68719476745"  [ label = "AST: "] 
  "30064771079" -> "68719476746"  [ label = "AST: "] 
  "30064771079" -> "90194313218"  [ label = "AST: "] 
  "47244640259" -> "30064771080"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771080" -> "68719476747"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "30064771082"  [ label = "AST: "] 
  "25769803781" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "90194313219"  [ label = "AST: "] 
  "47244640260" -> "30064771084"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771084" -> "68719476748"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "25769803782" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "90194313220"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "90194313221"  [ label = "AST: "] 
  "30064771086" -> "68719476754"  [ label = "AST: "] 
  "30064771086" -> "68719476755"  [ label = "AST: "] 
  "30064771086" -> "68719476756"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "68719476753"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771088" -> "68719476752"  [ label = "AST: "] 
  "30064771089" -> "68719476757"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476758"  [ label = "AST: "] 
  "30064771090" -> "90194313222"  [ label = "AST: "] 
  "47244640261" -> "30064771091"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "30064771091" -> "68719476759"  [ label = "AST: "] 
  "25769803783" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "90194313223"  [ label = "AST: "] 
  "30064771093" -> "68719476760"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476761"  [ label = "AST: "] 
  "47244640262" -> "30064771095"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "30064771095" -> "68719476762"  [ label = "AST: "] 
  "30064771095" -> "68719476763"  [ label = "AST: "] 
  "30064771095" -> "68719476764"  [ label = "AST: "] 
  "25769803784" -> "94489280514"  [ label = "AST: "] 
  "25769803784" -> "30064771096"  [ label = "AST: "] 
  "25769803784" -> "47244640263"  [ label = "AST: "] 
  "25769803784" -> "30064771100"  [ label = "AST: "] 
  "30064771096" -> "68719476765"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476766"  [ label = "AST: "] 
  "30064771097" -> "90194313224"  [ label = "AST: "] 
  "47244640263" -> "68719476767"  [ label = "AST: "] 
  "47244640263" -> "25769803785"  [ label = "AST: "] 
  "25769803785" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "90194313225"  [ label = "AST: "] 
  "30064771099" -> "68719476768"  [ label = "AST: "] 
  "30064771100" -> "68719476769"  [ label = "AST: "] 
  "30064771101" -> "68719476770"  [ label = "AST: "] 
  "30064771102" -> "68719476771"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771081"  [ label = "CFG: "] 
  "30064771086" -> "30064771090"  [ label = "CFG: "] 
  "30064771089" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771095"  [ label = "CFG: "] 
  "30064771101" -> "30064771102"  [ label = "CFG: "] 
  "30064771102" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771073" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771075" -> "30064771078"  [ label = "CFG: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771080" -> "30064771084"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771084" -> "30064771088"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771091" -> "30064771094"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771095" -> "30064771097"  [ label = "CFG: "] 
  "30064771095" -> "30064771101"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771085" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771092" -> "30064771094"  [ label = "CFG: "] 
  "30064771096" -> "68719476767"  [ label = "CFG: "] 
  "30064771100" -> "30064771095"  [ label = "CFG: "] 
  "30064771076" -> "146028888064"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "68719476767" -> "30064771099"  [ label = "CFG: "] 
  "68719476767" -> "30064771100"  [ label = "CFG: "] 
  "30064771077" -> "146028888064"  [ label = "CFG: "] 
  "30064771098" -> "30064771100"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: assert(full_path)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: printf(&quot;    fslib_copy_libs %s\n&quot;, full_path)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: full_path"] 
  "30064771075" -> "128849018880"  [ label = "DDG: access(full_path, R_OK)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: arg_debug"] 
  "30064771076" -> "128849018880"  [ label = "DDG: arg_debug_private_lib"] 
  "30064771076" -> "128849018880"  [ label = "DDG: arg_debug || arg_debug_private_lib"] 
  "30064771077" -> "128849018880"  [ label = "DDG: full_path"] 
  "30064771077" -> "128849018880"  [ label = "DDG: printf(&quot;cannot find %s for private-lib, skipping...\n&quot;, full_path)"] 
  "30064771088" -> "128849018880"  [ label = "DDG: SBOX_SECCOMP"] 
  "30064771075" -> "128849018880"  [ label = "DDG: R_OK"] 
  "30064771087" -> "128849018880"  [ label = "DDG: SBOX_CAPS_NONE"] 
  "30064771086" -> "128849018880"  [ label = "DDG: PATH_FLDD"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771090" -> "30064771089"  [ label = "DDG: RUN_LIB_FILE"] 
  "30064771090" -> "30064771089"  [ label = "DDG: &quot;r&quot;"] 
  "30064771094" -> "30064771093"  [ label = "DDG: MAXBUF"] 
  "115964116992" -> "30064771072"  [ label = "DDG: full_path"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771078" -> "30064771079"  [ label = "DDG: RUN_LIB_FILE"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771087" -> "30064771086"  [ label = "DDG: SBOX_USER | SBOX_SECCOMP"] 
  "30064771087" -> "30064771086"  [ label = "DDG: SBOX_CAPS_NONE"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771075" -> "30064771086"  [ label = "DDG: full_path"] 
  "30064771085" -> "30064771086"  [ label = "DDG: full_path"] 
  "30064771080" -> "30064771086"  [ label = "DDG: RUN_LIB_FILE"] 
  "30064771095" -> "30064771101"  [ label = "DDG: fp"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771090" -> "30064771102"  [ label = "DDG: RUN_LIB_FILE"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771072" -> "30064771075"  [ label = "DDG: full_path"] 
  "30064771074" -> "30064771075"  [ label = "DDG: full_path"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771079" -> "30064771080"  [ label = "DDG: RUN_LIB_FILE"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771073" -> "30064771084"  [ label = "DDG: arg_debug"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771073" -> "30064771084"  [ label = "DDG: arg_debug_private_lib"] 
  "30064771088" -> "30064771087"  [ label = "DDG: SBOX_USER"] 
  "30064771088" -> "30064771087"  [ label = "DDG: SBOX_SECCOMP"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771086" -> "30064771090"  [ label = "DDG: RUN_LIB_FILE"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771089" -> "30064771091"  [ label = "DDG: fp"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771093" -> "30064771095"  [ label = "DDG: buf"] 
  "30064771100" -> "30064771095"  [ label = "DDG: buf"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771094" -> "30064771095"  [ label = "DDG: MAXBUF"] 
  "30064771091" -> "30064771095"  [ label = "DDG: fp"] 
  "30064771097" -> "30064771096"  [ label = "DDG: buf"] 
  "30064771097" -> "30064771096"  [ label = "DDG: '\n'"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771072" -> "30064771074"  [ label = "DDG: full_path"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771075" -> "30064771085"  [ label = "DDG: full_path"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "111669149697" -> "68719476767"  [ label = "DDG: "] 
  "30064771097" -> "30064771100"  [ label = "DDG: buf"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771073" -> "30064771076"  [ label = "DDG: arg_debug"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771073" -> "30064771076"  [ label = "DDG: arg_debug_private_lib"] 
  "30064771095" -> "30064771097"  [ label = "DDG: buf"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: full_path"] 
  "30064771073" -> "30064771074"  [ label = "CDG: "] 
  "30064771075" -> "30064771101"  [ label = "CDG: "] 
  "30064771075" -> "30064771102"  [ label = "CDG: "] 
  "30064771075" -> "30064771091"  [ label = "CDG: "] 
  "30064771075" -> "30064771090"  [ label = "CDG: "] 
  "30064771075" -> "30064771093"  [ label = "CDG: "] 
  "30064771075" -> "30064771095"  [ label = "CDG: "] 
  "30064771075" -> "30064771094"  [ label = "CDG: "] 
  "30064771075" -> "30064771082"  [ label = "CDG: "] 
  "30064771075" -> "30064771084"  [ label = "CDG: "] 
  "30064771075" -> "30064771087"  [ label = "CDG: "] 
  "30064771075" -> "30064771086"  [ label = "CDG: "] 
  "30064771075" -> "30064771089"  [ label = "CDG: "] 
  "30064771075" -> "30064771088"  [ label = "CDG: "] 
  "30064771075" -> "30064771076"  [ label = "CDG: "] 
  "30064771075" -> "30064771079"  [ label = "CDG: "] 
  "30064771075" -> "30064771078"  [ label = "CDG: "] 
  "30064771075" -> "30064771081"  [ label = "CDG: "] 
  "30064771075" -> "30064771080"  [ label = "CDG: "] 
  "30064771075" -> "146028888064"  [ label = "CDG: "] 
  "30064771080" -> "30064771083"  [ label = "CDG: "] 
  "30064771084" -> "30064771085"  [ label = "CDG: "] 
  "30064771091" -> "30064771092"  [ label = "CDG: "] 
  "30064771095" -> "30064771100"  [ label = "CDG: "] 
  "30064771095" -> "30064771095"  [ label = "CDG: "] 
  "30064771095" -> "30064771097"  [ label = "CDG: "] 
  "30064771095" -> "30064771096"  [ label = "CDG: "] 
  "30064771095" -> "68719476767"  [ label = "CDG: "] 
  "30064771076" -> "30064771077"  [ label = "CDG: "] 
  "68719476767" -> "30064771099"  [ label = "CDG: "] 
  "68719476767" -> "30064771098"  [ label = "CDG: "] 
}
"""
)
