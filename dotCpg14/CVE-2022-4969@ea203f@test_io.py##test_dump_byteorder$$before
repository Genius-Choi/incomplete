[33mval[0m [36mres1971[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_dump_byteorder" {  
"111669149697" [label = <(METHOD,test_dump_byteorder)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,self = RaggedArray.from_nested([[0x0109, 0x0208...)<SUB>2</SUB>> ]
"68719476742" [label = <(IDENTIFIER,self,self = RaggedArray.from_nested([[0x0109, 0x0208...)<SUB>2</SUB>> ]
"30064771078" [label = <(from_nested,RaggedArray.from_nested([[0x0109, 0x0208, 0x030...)<SUB>2</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,RaggedArray.from_nested)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,RaggedArray,RaggedArray.from_nested([[0x0109, 0x0208, 0x030...)<SUB>2</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,from_nested,from_nested)<SUB>2</SUB>> ]
"68719476741" [label = <(IDENTIFIER,RaggedArray,RaggedArray.from_nested([[0x0109, 0x0208, 0x030...)<SUB>2</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.listLiteral,[[0x0109, 0x0208, 0x0307]])<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.listLiteral,[0x0109, 0x0208, 0x0307])<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,0x0109,[0x0109, 0x0208, 0x0307])<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,0x0208,[0x0109, 0x0208, 0x0307])<SUB>2</SUB>> ]
"90194313218" [label = <(LITERAL,0x0307,[0x0109, 0x0208, 0x0307])<SUB>2</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,np.uint16)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,np,RaggedArray.from_nested([[0x0109, 0x0208, 0x030...)<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,uint16,uint16)<SUB>2</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,bin = list(tmp0 = self.astype(tmp1 = self.dtype...)<SUB>4</SUB>> ]
"68719476754" [label = <(IDENTIFIER,bin,bin = list(tmp0 = self.astype(tmp1 = self.dtype...)<SUB>4</SUB>> ]
"30064771090" [label = <(list,list(tmp0 = self.astype(tmp1 = self.dtype
tmp1....)<SUB>4</SUB>> ]
"68719476753" [label = <(IDENTIFIER,list,list(tmp0 = self.astype(tmp1 = self.dtype
tmp1....)<SUB>4</SUB>> ]
"25769803779" [label = <(BLOCK,tmp0 = self.astype(tmp1 = self.dtype
tmp1.newby...,tmp0 = self.astype(tmp1 = self.dtype
tmp1.newby...)<SUB>4</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,tmp0 = self.astype(tmp1 = self.dtype
tmp1.newby...)<SUB>4</SUB>> ]
"68719476750" [label = <(IDENTIFIER,tmp0,tmp0 = self.astype(tmp1 = self.dtype
tmp1.newby...)<SUB>4</SUB>> ]
"30064771086" [label = <(astype,self.astype(tmp1 = self.dtype
tmp1.newbyteorder...)<SUB>4</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.fieldAccess,self.astype)<SUB>4</SUB>> ]
"68719476748" [label = <(IDENTIFIER,self,self.astype(tmp1 = self.dtype
tmp1.newbyteorder...)<SUB>4</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,astype,astype)<SUB>4</SUB>> ]
"68719476749" [label = <(IDENTIFIER,self,self.astype(tmp1 = self.dtype
tmp1.newbyteorder...)<SUB>4</SUB>> ]
"25769803778" [label = <(BLOCK,tmp1 = self.dtype
tmp1.newbyteorder(&quot;&gt;&quot;),tmp1 = self.dtype
tmp1.newbyteorder(&quot;&gt;&quot;))<SUB>4</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,tmp1 = self.dtype)<SUB>4</SUB>> ]
"68719476745" [label = <(IDENTIFIER,tmp1,tmp1 = self.dtype)<SUB>4</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,self.dtype)<SUB>4</SUB>> ]
"68719476744" [label = <(IDENTIFIER,self,tmp1 = self.dtype)<SUB>4</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,dtype,dtype)<SUB>4</SUB>> ]
"30064771084" [label = <(newbyteorder,tmp1.newbyteorder(&quot;&gt;&quot;))<SUB>4</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.fieldAccess,tmp1.newbyteorder)<SUB>4</SUB>> ]
"68719476746" [label = <(IDENTIFIER,tmp1,tmp1.newbyteorder(&quot;&gt;&quot;))<SUB>4</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,newbyteorder,newbyteorder)<SUB>4</SUB>> ]
"68719476747" [label = <(IDENTIFIER,tmp1,tmp1.newbyteorder(&quot;&gt;&quot;))<SUB>4</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;&gt;&quot;,tmp1.newbyteorder(&quot;&gt;&quot;))<SUB>4</SUB>> ]
"30064771089" [label = <(dumps,tmp0.dumps(ldtype = np.uint8))<SUB>4</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,tmp0.dumps)<SUB>4</SUB>> ]
"68719476751" [label = <(IDENTIFIER,tmp0,tmp0.dumps(ldtype = np.uint8))<SUB>4</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,dumps,dumps)<SUB>4</SUB>> ]
"68719476752" [label = <(IDENTIFIER,tmp0,tmp0.dumps(ldtype = np.uint8))<SUB>4</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.fieldAccess,np.uint8)<SUB>4</SUB>> ]
"68719476743" [label = <(IDENTIFIER,np,tmp0.dumps(ldtype = np.uint8))<SUB>4</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,uint8,uint8)<SUB>4</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assert,assert bin == [3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.equals,bin == [3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"68719476755" [label = <(IDENTIFIER,bin,bin == [3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.listLiteral,[3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"90194313220" [label = <(LITERAL,3,[3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"90194313221" [label = <(LITERAL,1,[3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"90194313222" [label = <(LITERAL,9,[3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"90194313223" [label = <(LITERAL,2,[3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"90194313224" [label = <(LITERAL,8,[3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"90194313225" [label = <(LITERAL,3,[3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"90194313226" [label = <(LITERAL,7,[3, 1, 9, 2, 8, 3, 7])<SUB>5</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.assignment,bin = list(tmp2 = self.astype(tmp3 = self.dtype...)<SUB>7</SUB>> ]
"68719476767" [label = <(IDENTIFIER,bin,bin = list(tmp2 = self.astype(tmp3 = self.dtype...)<SUB>7</SUB>> ]
"30064771105" [label = <(list,list(tmp2 = self.astype(tmp3 = self.dtype
tmp3....)<SUB>7</SUB>> ]
"68719476766" [label = <(IDENTIFIER,list,list(tmp2 = self.astype(tmp3 = self.dtype
tmp3....)<SUB>7</SUB>> ]
"25769803781" [label = <(BLOCK,tmp2 = self.astype(tmp3 = self.dtype
tmp3.newby...,tmp2 = self.astype(tmp3 = self.dtype
tmp3.newby...)<SUB>7</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,tmp2 = self.astype(tmp3 = self.dtype
tmp3.newby...)<SUB>7</SUB>> ]
"68719476763" [label = <(IDENTIFIER,tmp2,tmp2 = self.astype(tmp3 = self.dtype
tmp3.newby...)<SUB>7</SUB>> ]
"30064771101" [label = <(astype,self.astype(tmp3 = self.dtype
tmp3.newbyteorder...)<SUB>7</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.fieldAccess,self.astype)<SUB>7</SUB>> ]
"68719476761" [label = <(IDENTIFIER,self,self.astype(tmp3 = self.dtype
tmp3.newbyteorder...)<SUB>7</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,astype,astype)<SUB>7</SUB>> ]
"68719476762" [label = <(IDENTIFIER,self,self.astype(tmp3 = self.dtype
tmp3.newbyteorder...)<SUB>7</SUB>> ]
"25769803780" [label = <(BLOCK,tmp3 = self.dtype
tmp3.newbyteorder(&quot;&lt;&quot;),tmp3 = self.dtype
tmp3.newbyteorder(&quot;&lt;&quot;))<SUB>7</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,tmp3 = self.dtype)<SUB>7</SUB>> ]
"68719476758" [label = <(IDENTIFIER,tmp3,tmp3 = self.dtype)<SUB>7</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.fieldAccess,self.dtype)<SUB>7</SUB>> ]
"68719476757" [label = <(IDENTIFIER,self,tmp3 = self.dtype)<SUB>7</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,dtype,dtype)<SUB>7</SUB>> ]
"30064771099" [label = <(newbyteorder,tmp3.newbyteorder(&quot;&lt;&quot;))<SUB>7</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.fieldAccess,tmp3.newbyteorder)<SUB>7</SUB>> ]
"68719476759" [label = <(IDENTIFIER,tmp3,tmp3.newbyteorder(&quot;&lt;&quot;))<SUB>7</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,newbyteorder,newbyteorder)<SUB>7</SUB>> ]
"68719476760" [label = <(IDENTIFIER,tmp3,tmp3.newbyteorder(&quot;&lt;&quot;))<SUB>7</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;&lt;&quot;,tmp3.newbyteorder(&quot;&lt;&quot;))<SUB>7</SUB>> ]
"30064771104" [label = <(dumps,tmp2.dumps(ldtype = np.uint8))<SUB>7</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.fieldAccess,tmp2.dumps)<SUB>7</SUB>> ]
"68719476764" [label = <(IDENTIFIER,tmp2,tmp2.dumps(ldtype = np.uint8))<SUB>7</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,dumps,dumps)<SUB>7</SUB>> ]
"68719476765" [label = <(IDENTIFIER,tmp2,tmp2.dumps(ldtype = np.uint8))<SUB>7</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.fieldAccess,np.uint8)<SUB>7</SUB>> ]
"68719476756" [label = <(IDENTIFIER,np,tmp2.dumps(ldtype = np.uint8))<SUB>7</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,uint8,uint8)<SUB>7</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.assert,assert bin == [3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.equals,bin == [3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"68719476768" [label = <(IDENTIFIER,bin,bin == [3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.listLiteral,[3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"90194313228" [label = <(LITERAL,3,[3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"90194313229" [label = <(LITERAL,9,[3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"90194313230" [label = <(LITERAL,1,[3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"90194313231" [label = <(LITERAL,8,[3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"90194313232" [label = <(LITERAL,2,[3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"90194313233" [label = <(LITERAL,7,[3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"90194313234" [label = <(LITERAL,3,[3, 9, 1, 8, 2, 7, 3])<SUB>8</SUB>> ]
"94489280515" [label = <(LOCAL,np: ANY)<SUB>2</SUB>> ]
"94489280517" [label = <(LOCAL,RaggedArray: ANY)<SUB>2</SUB>> ]
"94489280519" [label = <(LOCAL,self: ANY)<SUB>2</SUB>> ]
"94489280520" [label = <(LOCAL,tmp1: dtype.&lt;returnValue&gt;.&lt;member&gt;(dtype))<SUB>4</SUB>> ]
"94489280521" [label = <(LOCAL,tmp0: ANY)<SUB>4</SUB>> ]
"94489280522" [label = <(LOCAL,list: ANY)<SUB>4</SUB>> ]
"94489280523" [label = <(LOCAL,bin: __builtin.list&lt;meta&gt;.&lt;returnValue&gt;)<SUB>4</SUB>> ]
"94489280524" [label = <(LOCAL,tmp3: dtype.&lt;returnValue&gt;.&lt;member&gt;(dtype))<SUB>7</SUB>> ]
"94489280525" [label = <(LOCAL,tmp2: ANY)<SUB>7</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771094"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771106"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771109"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "94489280525"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771075"  [ label = "AST: "] 
  "30064771078" -> "30064771076"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "55834574849"  [ label = "AST: "] 
  "30064771075" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "90194313218"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "55834574848"  [ label = "AST: "] 
  "30064771091" -> "68719476754"  [ label = "AST: "] 
  "30064771091" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476753"  [ label = "AST: "] 
  "30064771090" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "30064771087"  [ label = "AST: "] 
  "25769803779" -> "30064771089"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "68719476749"  [ label = "AST: "] 
  "30064771086" -> "25769803778"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "55834574853"  [ label = "AST: "] 
  "25769803778" -> "30064771082"  [ label = "AST: "] 
  "25769803778" -> "30064771084"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "55834574851"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771084" -> "68719476747"  [ label = "AST: "] 
  "30064771084" -> "90194313219"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "30064771083" -> "55834574852"  [ label = "AST: "] 
  "30064771089" -> "30064771088"  [ label = "AST: "] 
  "30064771089" -> "68719476752"  [ label = "AST: "] 
  "30064771089" -> "30064771080"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771088" -> "55834574854"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "55834574850"  [ label = "AST: "] 
  "30064771094" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476755"  [ label = "AST: "] 
  "30064771093" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "90194313220"  [ label = "AST: "] 
  "30064771092" -> "90194313221"  [ label = "AST: "] 
  "30064771092" -> "90194313222"  [ label = "AST: "] 
  "30064771092" -> "90194313223"  [ label = "AST: "] 
  "30064771092" -> "90194313224"  [ label = "AST: "] 
  "30064771092" -> "90194313225"  [ label = "AST: "] 
  "30064771092" -> "90194313226"  [ label = "AST: "] 
  "30064771106" -> "68719476767"  [ label = "AST: "] 
  "30064771106" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476766"  [ label = "AST: "] 
  "30064771105" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771102"  [ label = "AST: "] 
  "25769803781" -> "30064771104"  [ label = "AST: "] 
  "30064771102" -> "68719476763"  [ label = "AST: "] 
  "30064771102" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "30064771100"  [ label = "AST: "] 
  "30064771101" -> "68719476762"  [ label = "AST: "] 
  "30064771101" -> "25769803780"  [ label = "AST: "] 
  "30064771100" -> "68719476761"  [ label = "AST: "] 
  "30064771100" -> "55834574858"  [ label = "AST: "] 
  "25769803780" -> "30064771097"  [ label = "AST: "] 
  "25769803780" -> "30064771099"  [ label = "AST: "] 
  "30064771097" -> "68719476758"  [ label = "AST: "] 
  "30064771097" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476757"  [ label = "AST: "] 
  "30064771096" -> "55834574856"  [ label = "AST: "] 
  "30064771099" -> "30064771098"  [ label = "AST: "] 
  "30064771099" -> "68719476760"  [ label = "AST: "] 
  "30064771099" -> "90194313227"  [ label = "AST: "] 
  "30064771098" -> "68719476759"  [ label = "AST: "] 
  "30064771098" -> "55834574857"  [ label = "AST: "] 
  "30064771104" -> "30064771103"  [ label = "AST: "] 
  "30064771104" -> "68719476765"  [ label = "AST: "] 
  "30064771104" -> "30064771095"  [ label = "AST: "] 
  "30064771103" -> "68719476764"  [ label = "AST: "] 
  "30064771103" -> "55834574859"  [ label = "AST: "] 
  "30064771095" -> "68719476756"  [ label = "AST: "] 
  "30064771095" -> "55834574855"  [ label = "AST: "] 
  "30064771109" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "68719476768"  [ label = "AST: "] 
  "30064771108" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "90194313228"  [ label = "AST: "] 
  "30064771107" -> "90194313229"  [ label = "AST: "] 
  "30064771107" -> "90194313230"  [ label = "AST: "] 
  "30064771107" -> "90194313231"  [ label = "AST: "] 
  "30064771107" -> "90194313232"  [ label = "AST: "] 
  "30064771107" -> "90194313233"  [ label = "AST: "] 
  "30064771107" -> "90194313234"  [ label = "AST: "] 
  "30064771079" -> "55834574853"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771094" -> "55834574858"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771109" -> "128849018881"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771105" -> "30064771106"  [ label = "CFG: "] 
  "30064771108" -> "30064771109"  [ label = "CFG: "] 
  "30064771077" -> "30064771074"  [ label = "CFG: "] 
  "30064771075" -> "55834574848"  [ label = "CFG: "] 
  "30064771076" -> "30064771078"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "55834574849" -> "30064771077"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "55834574848" -> "30064771076"  [ label = "CFG: "] 
  "30064771087" -> "55834574854"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771102" -> "55834574859"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771088" -> "55834574850"  [ label = "CFG: "] 
  "30064771080" -> "30064771089"  [ label = "CFG: "] 
  "30064771101" -> "30064771102"  [ label = "CFG: "] 
  "30064771103" -> "55834574855"  [ label = "CFG: "] 
  "30064771095" -> "30064771104"  [ label = "CFG: "] 
  "30064771085" -> "55834574851"  [ label = "CFG: "] 
  "55834574854" -> "30064771088"  [ label = "CFG: "] 
  "55834574850" -> "30064771080"  [ label = "CFG: "] 
  "30064771100" -> "55834574856"  [ label = "CFG: "] 
  "55834574859" -> "30064771103"  [ label = "CFG: "] 
  "55834574855" -> "30064771095"  [ label = "CFG: "] 
  "55834574853" -> "30064771085"  [ label = "CFG: "] 
  "30064771082" -> "55834574852"  [ label = "CFG: "] 
  "30064771084" -> "30064771086"  [ label = "CFG: "] 
  "55834574858" -> "30064771100"  [ label = "CFG: "] 
  "30064771097" -> "55834574857"  [ label = "CFG: "] 
  "30064771099" -> "30064771101"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "55834574851" -> "30064771081"  [ label = "CFG: "] 
  "55834574852" -> "30064771083"  [ label = "CFG: "] 
  "55834574856" -> "30064771096"  [ label = "CFG: "] 
  "55834574857" -> "30064771098"  [ label = "CFG: "] 
  "111669149697" -> "55834574849"  [ label = "CFG: "] 
  "30064771078" -> "128849018881"  [ label = "DDG: RaggedArray"] 
  "30064771075" -> "128849018881"  [ label = "DDG: [0x0109, 0x0208, 0x0307]"] 
  "30064771078" -> "128849018881"  [ label = "DDG: [[0x0109, 0x0208, 0x0307]]"] 
  "30064771078" -> "128849018881"  [ label = "DDG: np.uint16"] 
  "30064771079" -> "128849018881"  [ label = "DDG: RaggedArray.from_nested([[0x0109, 0x0208, 0x0307]], dtype = np.uint16)"] 
  "30064771079" -> "128849018881"  [ label = "DDG: self = RaggedArray.from_nested([[0x0109, 0x0208, 0x0307]], dtype = np.uint16)"] 
  "30064771082" -> "128849018881"  [ label = "DDG: tmp1 = self.dtype"] 
  "30064771084" -> "128849018881"  [ label = "DDG: tmp1"] 
  "30064771084" -> "128849018881"  [ label = "DDG: tmp1.newbyteorder(&quot;&gt;&quot;)"] 
  "30064771087" -> "128849018881"  [ label = "DDG: self.astype(tmp1 = self.dtype
tmp1.newbyteorder(&quot;&gt;&quot;))"] 
  "30064771087" -> "128849018881"  [ label = "DDG: tmp0 = self.astype(tmp1 = self.dtype
tmp1.newbyteorder(&quot;&gt;&quot;))"] 
  "30064771089" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771089" -> "128849018881"  [ label = "DDG: tmp0.dumps(ldtype = np.uint8)"] 
  "30064771091" -> "128849018881"  [ label = "DDG: list(tmp0 = self.astype(tmp1 = self.dtype
tmp1.newbyteorder(&quot;&gt;&quot;))
tmp0.dumps(ldtype = np.uint8))"] 
  "30064771091" -> "128849018881"  [ label = "DDG: bin = list(tmp0 = self.astype(tmp1 = self.dtype
tmp1.newbyteorder(&quot;&gt;&quot;))
tmp0.dumps(ldtype = np.uint8))"] 
  "30064771093" -> "128849018881"  [ label = "DDG: [3, 1, 9, 2, 8, 3, 7]"] 
  "30064771094" -> "128849018881"  [ label = "DDG: bin == [3, 1, 9, 2, 8, 3, 7]"] 
  "30064771094" -> "128849018881"  [ label = "DDG: assert bin == [3, 1, 9, 2, 8, 3, 7]"] 
  "30064771101" -> "128849018881"  [ label = "DDG: self"] 
  "30064771097" -> "128849018881"  [ label = "DDG: tmp3 = self.dtype"] 
  "30064771099" -> "128849018881"  [ label = "DDG: tmp3"] 
  "30064771099" -> "128849018881"  [ label = "DDG: tmp3.newbyteorder(&quot;&lt;&quot;)"] 
  "30064771102" -> "128849018881"  [ label = "DDG: self.astype(tmp3 = self.dtype
tmp3.newbyteorder(&quot;&lt;&quot;))"] 
  "30064771102" -> "128849018881"  [ label = "DDG: tmp2 = self.astype(tmp3 = self.dtype
tmp3.newbyteorder(&quot;&lt;&quot;))"] 
  "30064771104" -> "128849018881"  [ label = "DDG: tmp2"] 
  "30064771104" -> "128849018881"  [ label = "DDG: np.uint8"] 
  "30064771104" -> "128849018881"  [ label = "DDG: tmp2.dumps(ldtype = np.uint8)"] 
  "30064771106" -> "128849018881"  [ label = "DDG: list(tmp2 = self.astype(tmp3 = self.dtype
tmp3.newbyteorder(&quot;&lt;&quot;))
tmp2.dumps(ldtype = np.uint8))"] 
  "30064771106" -> "128849018881"  [ label = "DDG: bin = list(tmp2 = self.astype(tmp3 = self.dtype
tmp3.newbyteorder(&quot;&lt;&quot;))
tmp2.dumps(ldtype = np.uint8))"] 
  "30064771108" -> "128849018881"  [ label = "DDG: bin"] 
  "30064771108" -> "128849018881"  [ label = "DDG: [3, 9, 1, 8, 2, 7, 3]"] 
  "30064771109" -> "128849018881"  [ label = "DDG: bin == [3, 9, 1, 8, 2, 7, 3]"] 
  "30064771109" -> "128849018881"  [ label = "DDG: assert bin == [3, 9, 1, 8, 2, 7, 3]"] 
  "30064771078" -> "30064771079"  [ label = "DDG: RaggedArray"] 
  "30064771078" -> "30064771079"  [ label = "DDG: [[0x0109, 0x0208, 0x0307]]"] 
  "30064771078" -> "30064771079"  [ label = "DDG: np.uint16"] 
  "30064771090" -> "30064771091"  [ label = "DDG: tmp0 = self.astype(tmp1 = self.dtype
tmp1.newbyteorder(&quot;&gt;&quot;))
tmp0.dumps(ldtype = np.uint8)"] 
  "30064771090" -> "30064771091"  [ label = "DDG: "] 
  "30064771105" -> "30064771106"  [ label = "DDG: tmp2 = self.astype(tmp3 = self.dtype
tmp3.newbyteorder(&quot;&lt;&quot;))
tmp2.dumps(ldtype = np.uint8)"] 
  "30064771105" -> "30064771106"  [ label = "DDG: "] 
  "30064771093" -> "30064771094"  [ label = "DDG: bin"] 
  "30064771093" -> "30064771094"  [ label = "DDG: [3, 1, 9, 2, 8, 3, 7]"] 
  "30064771108" -> "30064771109"  [ label = "DDG: bin"] 
  "30064771108" -> "30064771109"  [ label = "DDG: [3, 9, 1, 8, 2, 7, 3]"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771075" -> "30064771078"  [ label = "DDG: [0x0109, 0x0208, 0x0307]"] 
  "30064771073" -> "68719476753"  [ label = "DDG: list"] 
  "111669149697" -> "68719476753"  [ label = "DDG: "] 
  "30064771089" -> "30064771090"  [ label = "DDG: tmp0.dumps(ldtype = np.uint8)"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771091" -> "30064771093"  [ label = "DDG: bin"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771092" -> "30064771093"  [ label = "DDG: 3"] 
  "30064771092" -> "30064771093"  [ label = "DDG: 1"] 
  "30064771092" -> "30064771093"  [ label = "DDG: 8"] 
  "30064771092" -> "30064771093"  [ label = "DDG: 2"] 
  "30064771092" -> "30064771093"  [ label = "DDG: 7"] 
  "30064771092" -> "30064771093"  [ label = "DDG: 9"] 
  "111669149697" -> "68719476766"  [ label = "DDG: "] 
  "30064771104" -> "30064771105"  [ label = "DDG: tmp2.dumps(ldtype = np.uint8)"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771106" -> "30064771108"  [ label = "DDG: bin"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771107" -> "30064771108"  [ label = "DDG: 7"] 
  "30064771107" -> "30064771108"  [ label = "DDG: 9"] 
  "30064771107" -> "30064771108"  [ label = "DDG: 1"] 
  "30064771107" -> "30064771108"  [ label = "DDG: 2"] 
  "30064771107" -> "30064771108"  [ label = "DDG: 3"] 
  "30064771107" -> "30064771108"  [ label = "DDG: 8"] 
  "30064771074" -> "30064771075"  [ label = "DDG: 0x0109"] 
  "30064771074" -> "30064771075"  [ label = "DDG: 0x0208"] 
  "30064771074" -> "30064771075"  [ label = "DDG: 0x0307"] 
  "30064771086" -> "30064771087"  [ label = "DDG: self"] 
  "30064771086" -> "30064771087"  [ label = "DDG: tmp1 = self.dtype
tmp1.newbyteorder(&quot;&gt;&quot;)"] 
  "30064771086" -> "30064771087"  [ label = "DDG: "] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771101" -> "30064771102"  [ label = "DDG: self"] 
  "30064771101" -> "30064771102"  [ label = "DDG: tmp3 = self.dtype
tmp3.newbyteorder(&quot;&lt;&quot;)"] 
  "30064771101" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771087" -> "30064771089"  [ label = "DDG: tmp0"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771102" -> "30064771104"  [ label = "DDG: tmp2"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771089" -> "30064771104"  [ label = "DDG: np.uint8"] 
  "30064771079" -> "30064771086"  [ label = "DDG: self"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771084" -> "30064771086"  [ label = "DDG: tmp1.newbyteorder(&quot;&gt;&quot;)"] 
  "30064771086" -> "30064771101"  [ label = "DDG: self"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771099" -> "30064771101"  [ label = "DDG: tmp3.newbyteorder(&quot;&lt;&quot;)"] 
  "30064771079" -> "30064771082"  [ label = "DDG: self"] 
  "30064771086" -> "30064771097"  [ label = "DDG: self"] 
  "30064771082" -> "30064771084"  [ label = "DDG: tmp1"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771097" -> "30064771099"  [ label = "DDG: tmp3"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
}
"""
)
