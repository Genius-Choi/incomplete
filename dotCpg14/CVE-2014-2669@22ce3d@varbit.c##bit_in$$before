[33mval[0m [36mres485[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "bit_in" {  
"111669149697" [label = <(METHOD,bit_in)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,PG_FUNCTION_ARGS)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	char	   *input_string = PG_GETARG_CSTRING(0)...,{
	char	   *input_string = PG_GETARG_CSTRING(0)...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,char* input_string: char*)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,*input_string = PG_GETARG_CSTRING(0))<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,input_string,*input_string = PG_GETARG_CSTRING(0))<SUB>3</SUB>> ]
"30064771073" [label = <(PG_GETARG_CSTRING,PG_GETARG_CSTRING(0))<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,0,PG_GETARG_CSTRING(0))<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,int32 atttypmod: int32)<SUB>8</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,atttypmod = PG_GETARG_INT32(2))<SUB>8</SUB>> ]
"68719476737" [label = <(IDENTIFIER,atttypmod,atttypmod = PG_GETARG_INT32(2))<SUB>8</SUB>> ]
"30064771075" [label = <(PG_GETARG_INT32,PG_GETARG_INT32(2))<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,2,PG_GETARG_INT32(2))<SUB>8</SUB>> ]
"94489280514" [label = <(LOCAL,VarBit* result: VarBit*)<SUB>9</SUB>> ]
"94489280515" [label = <(LOCAL,char* sp: char*)<SUB>10</SUB>> ]
"94489280516" [label = <(LOCAL,bits8* r: bits8*)<SUB>11</SUB>> ]
"94489280517" [label = <(LOCAL,int len: int)<SUB>12</SUB>> ]
"94489280518" [label = <(LOCAL,int bitlen: int)<SUB>13</SUB>> ]
"94489280519" [label = <(LOCAL,int slen: int)<SUB>14</SUB>> ]
"94489280520" [label = <(LOCAL,bool bit_not_hex: bool)<SUB>15</SUB>> ]
"94489280521" [label = <(LOCAL,int bc: int)<SUB>16</SUB>> ]
"94489280522" [label = <(LOCAL,bits8 x: bits8)<SUB>17</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,x = 0)<SUB>17</SUB>> ]
"68719476738" [label = <(IDENTIFIER,x,x = 0)<SUB>17</SUB>> ]
"90194313218" [label = <(LITERAL,0,x = 0)<SUB>17</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (input_string[0] == 'b' || input_string[0] == 'B'))<SUB>20</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.logicalOr,input_string[0] == 'b' || input_string[0] == 'B')<SUB>20</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.equals,input_string[0] == 'b')<SUB>20</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indirectIndexAccess,input_string[0])<SUB>20</SUB>> ]
"68719476739" [label = <(IDENTIFIER,input_string,input_string[0] == 'b')<SUB>20</SUB>> ]
"90194313219" [label = <(LITERAL,0,input_string[0] == 'b')<SUB>20</SUB>> ]
"90194313220" [label = <(LITERAL,'b',input_string[0] == 'b')<SUB>20</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.equals,input_string[0] == 'B')<SUB>20</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.indirectIndexAccess,input_string[0])<SUB>20</SUB>> ]
"68719476740" [label = <(IDENTIFIER,input_string,input_string[0] == 'B')<SUB>20</SUB>> ]
"90194313221" [label = <(LITERAL,0,input_string[0] == 'B')<SUB>20</SUB>> ]
"90194313222" [label = <(LITERAL,'B',input_string[0] == 'B')<SUB>20</SUB>> ]
"25769803778" [label = <(BLOCK,{
		bit_not_hex = true;
		sp = input_string + 1...,{
		bit_not_hex = true;
		sp = input_string + 1...)<SUB>21</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,bit_not_hex = true)<SUB>22</SUB>> ]
"68719476741" [label = <(IDENTIFIER,bit_not_hex,bit_not_hex = true)<SUB>22</SUB>> ]
"68719476742" [label = <(IDENTIFIER,true,bit_not_hex = true)<SUB>22</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,sp = input_string + 1)<SUB>23</SUB>> ]
"68719476743" [label = <(IDENTIFIER,sp,sp = input_string + 1)<SUB>23</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.addition,input_string + 1)<SUB>23</SUB>> ]
"68719476744" [label = <(IDENTIFIER,input_string,input_string + 1)<SUB>23</SUB>> ]
"90194313223" [label = <(LITERAL,1,input_string + 1)<SUB>23</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>25</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (input_string[0] == 'x' || input_string[0] == 'X'))<SUB>25</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.logicalOr,input_string[0] == 'x' || input_string[0] == 'X')<SUB>25</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.equals,input_string[0] == 'x')<SUB>25</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.indirectIndexAccess,input_string[0])<SUB>25</SUB>> ]
"68719476745" [label = <(IDENTIFIER,input_string,input_string[0] == 'x')<SUB>25</SUB>> ]
"90194313224" [label = <(LITERAL,0,input_string[0] == 'x')<SUB>25</SUB>> ]
"90194313225" [label = <(LITERAL,'x',input_string[0] == 'x')<SUB>25</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.equals,input_string[0] == 'X')<SUB>25</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.indirectIndexAccess,input_string[0])<SUB>25</SUB>> ]
"68719476746" [label = <(IDENTIFIER,input_string,input_string[0] == 'X')<SUB>25</SUB>> ]
"90194313226" [label = <(LITERAL,0,input_string[0] == 'X')<SUB>25</SUB>> ]
"90194313227" [label = <(LITERAL,'X',input_string[0] == 'X')<SUB>25</SUB>> ]
"25769803780" [label = <(BLOCK,{
		bit_not_hex = false;
		sp = input_string + ...,{
		bit_not_hex = false;
		sp = input_string + ...)<SUB>26</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,bit_not_hex = false)<SUB>27</SUB>> ]
"68719476747" [label = <(IDENTIFIER,bit_not_hex,bit_not_hex = false)<SUB>27</SUB>> ]
"68719476748" [label = <(IDENTIFIER,false,bit_not_hex = false)<SUB>27</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,sp = input_string + 1)<SUB>28</SUB>> ]
"68719476749" [label = <(IDENTIFIER,sp,sp = input_string + 1)<SUB>28</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.addition,input_string + 1)<SUB>28</SUB>> ]
"68719476750" [label = <(IDENTIFIER,input_string,input_string + 1)<SUB>28</SUB>> ]
"90194313228" [label = <(LITERAL,1,input_string + 1)<SUB>28</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>31</SUB>> ]
"25769803781" [label = <(BLOCK,{
		/*
		 * Otherwise it's binary.  This allows...,{
		/*
		 * Otherwise it's binary.  This allows...)<SUB>31</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,bit_not_hex = true)<SUB>36</SUB>> ]
"68719476751" [label = <(IDENTIFIER,bit_not_hex,bit_not_hex = true)<SUB>36</SUB>> ]
"68719476752" [label = <(IDENTIFIER,true,bit_not_hex = true)<SUB>36</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,sp = input_string)<SUB>37</SUB>> ]
"68719476753" [label = <(IDENTIFIER,sp,sp = input_string)<SUB>37</SUB>> ]
"68719476754" [label = <(IDENTIFIER,input_string,sp = input_string)<SUB>37</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assignment,slen = strlen(sp))<SUB>40</SUB>> ]
"68719476755" [label = <(IDENTIFIER,slen,slen = strlen(sp))<SUB>40</SUB>> ]
"30064771096" [label = <(strlen,strlen(sp))<SUB>40</SUB>> ]
"68719476756" [label = <(IDENTIFIER,sp,strlen(sp))<SUB>40</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (bit_not_hex))<SUB>42</SUB>> ]
"68719476757" [label = <(IDENTIFIER,bit_not_hex,if (bit_not_hex))<SUB>42</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,bitlen = slen)<SUB>43</SUB>> ]
"68719476758" [label = <(IDENTIFIER,bitlen,bitlen = slen)<SUB>43</SUB>> ]
"68719476759" [label = <(IDENTIFIER,slen,bitlen = slen)<SUB>43</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>45</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,bitlen = slen * 4)<SUB>45</SUB>> ]
"68719476760" [label = <(IDENTIFIER,bitlen,bitlen = slen * 4)<SUB>45</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.multiplication,slen * 4)<SUB>45</SUB>> ]
"68719476761" [label = <(IDENTIFIER,slen,slen * 4)<SUB>45</SUB>> ]
"90194313229" [label = <(LITERAL,4,slen * 4)<SUB>45</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (atttypmod &lt;= 0))<SUB>51</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.lessEqualsThan,atttypmod &lt;= 0)<SUB>51</SUB>> ]
"68719476762" [label = <(IDENTIFIER,atttypmod,atttypmod &lt;= 0)<SUB>51</SUB>> ]
"90194313230" [label = <(LITERAL,0,atttypmod &lt;= 0)<SUB>51</SUB>> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.assignment,atttypmod = bitlen)<SUB>52</SUB>> ]
"68719476763" [label = <(IDENTIFIER,atttypmod,atttypmod = bitlen)<SUB>52</SUB>> ]
"68719476764" [label = <(IDENTIFIER,bitlen,atttypmod = bitlen)<SUB>52</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>53</SUB>> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,IF,if (bitlen != atttypmod))<SUB>53</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.notEquals,bitlen != atttypmod)<SUB>53</SUB>> ]
"68719476765" [label = <(IDENTIFIER,bitlen,bitlen != atttypmod)<SUB>53</SUB>> ]
"68719476766" [label = <(IDENTIFIER,atttypmod,bitlen != atttypmod)<SUB>53</SUB>> ]
"25769803786" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>54</SUB>> ]
"30064771103" [label = <(ereport,ereport(ERROR,
				(errcode(ERRCODE_STRING_DATA...)<SUB>54</SUB>> ]
"68719476767" [label = <(IDENTIFIER,ERROR,ereport(ERROR,
				(errcode(ERRCODE_STRING_DATA...)<SUB>54</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.bracketedPrimary,(errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH),
...)<SUB>55</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.expressionList,errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH),
	...)<SUB>55</SUB>> ]
"30064771106" [label = <(errcode,errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH))<SUB>55</SUB>> ]
"68719476768" [label = <(IDENTIFIER,ERRCODE_STRING_DATA_LENGTH_MISMATCH,errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH))<SUB>55</SUB>> ]
"30064771107" [label = <(errmsg,errmsg(&quot;bit string length %d does not match typ...)<SUB>56</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;bit string length %d does not match type bit(%d)&quot;,errmsg(&quot;bit string length %d does not match typ...)<SUB>56</SUB>> ]
"68719476769" [label = <(IDENTIFIER,bitlen,errmsg(&quot;bit string length %d does not match typ...)<SUB>57</SUB>> ]
"68719476770" [label = <(IDENTIFIER,atttypmod,errmsg(&quot;bit string length %d does not match typ...)<SUB>57</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.assignment,len = VARBITTOTALLEN(atttypmod))<SUB>59</SUB>> ]
"68719476771" [label = <(IDENTIFIER,len,len = VARBITTOTALLEN(atttypmod))<SUB>59</SUB>> ]
"30064771109" [label = <(VARBITTOTALLEN,VARBITTOTALLEN(atttypmod))<SUB>59</SUB>> ]
"68719476772" [label = <(IDENTIFIER,atttypmod,VARBITTOTALLEN(atttypmod))<SUB>59</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.assignment,result = (VarBit *) palloc0(len))<SUB>61</SUB>> ]
"68719476773" [label = <(IDENTIFIER,result,result = (VarBit *) palloc0(len))<SUB>61</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.cast,(VarBit *) palloc0(len))<SUB>61</SUB>> ]
"184683593728" [label = <(UNKNOWN,VarBit *,VarBit *)<SUB>61</SUB>> ]
"30064771112" [label = <(palloc0,palloc0(len))<SUB>61</SUB>> ]
"68719476774" [label = <(IDENTIFIER,len,palloc0(len))<SUB>61</SUB>> ]
"30064771113" [label = <(SET_VARSIZE,SET_VARSIZE(result, len))<SUB>62</SUB>> ]
"68719476775" [label = <(IDENTIFIER,result,SET_VARSIZE(result, len))<SUB>62</SUB>> ]
"68719476776" [label = <(IDENTIFIER,len,SET_VARSIZE(result, len))<SUB>62</SUB>> ]
"94489280523" [label = <(LOCAL,VARBITLEN : VARBITLEN)<SUB>63</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.assignment,(result) = atttypmod)<SUB>63</SUB>> ]
"68719476777" [label = <(IDENTIFIER,,(result) = atttypmod)> ]
"68719476778" [label = <(IDENTIFIER,atttypmod,(result) = atttypmod)<SUB>63</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.assignment,r = VARBITS(result))<SUB>65</SUB>> ]
"68719476779" [label = <(IDENTIFIER,r,r = VARBITS(result))<SUB>65</SUB>> ]
"30064771116" [label = <(VARBITS,VARBITS(result))<SUB>65</SUB>> ]
"68719476780" [label = <(IDENTIFIER,result,VARBITS(result))<SUB>65</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,IF,if (bit_not_hex))<SUB>66</SUB>> ]
"68719476781" [label = <(IDENTIFIER,bit_not_hex,if (bit_not_hex))<SUB>66</SUB>> ]
"25769803787" [label = <(BLOCK,{
		/* Parse the bit representation of the stri...,{
		/* Parse the bit representation of the stri...)<SUB>67</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,x = HIGHBIT)<SUB>70</SUB>> ]
"68719476782" [label = <(IDENTIFIER,x,x = HIGHBIT)<SUB>70</SUB>> ]
"68719476783" [label = <(IDENTIFIER,HIGHBIT,x = HIGHBIT)<SUB>70</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,FOR,for (;*sp;sp++))<SUB>71</SUB>> ]
"25769803788" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>71</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>71</SUB>> ]
"68719476784" [label = <(IDENTIFIER,sp,for (;*sp;sp++))<SUB>71</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.postIncrement,sp++)<SUB>71</SUB>> ]
"68719476785" [label = <(IDENTIFIER,sp,sp++)<SUB>71</SUB>> ]
"25769803789" [label = <(BLOCK,{
			if (*sp == '1')
				*r |= x;
			else if (*...,{
			if (*sp == '1')
				*r |= x;
			else if (*...)<SUB>72</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,IF,if (*sp == '1'))<SUB>73</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.equals,*sp == '1')<SUB>73</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>73</SUB>> ]
"68719476786" [label = <(IDENTIFIER,sp,*sp == '1')<SUB>73</SUB>> ]
"90194313232" [label = <(LITERAL,'1',*sp == '1')<SUB>73</SUB>> ]
"25769803790" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>74</SUB>> ]
"30064771122" [label = <(&lt;operators&gt;.assignmentOr,*r |= x)<SUB>74</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.indirection,*r)<SUB>74</SUB>> ]
"68719476787" [label = <(IDENTIFIER,r,*r |= x)<SUB>74</SUB>> ]
"68719476788" [label = <(IDENTIFIER,x,*r |= x)<SUB>74</SUB>> ]
"47244640268" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>75</SUB>> ]
"25769803791" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>> ]
"47244640269" [label = <(CONTROL_STRUCTURE,IF,if (*sp != '0'))<SUB>75</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.notEquals,*sp != '0')<SUB>75</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>75</SUB>> ]
"68719476789" [label = <(IDENTIFIER,sp,*sp != '0')<SUB>75</SUB>> ]
"90194313233" [label = <(LITERAL,'0',*sp != '0')<SUB>75</SUB>> ]
"25769803792" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>76</SUB>> ]
"30064771126" [label = <(ereport,ereport(ERROR,
						(errcode(ERRCODE_INVALID_T...)<SUB>76</SUB>> ]
"68719476790" [label = <(IDENTIFIER,ERROR,ereport(ERROR,
						(errcode(ERRCODE_INVALID_T...)<SUB>76</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.bracketedPrimary,(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
...)<SUB>77</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.expressionList,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
	...)<SUB>77</SUB>> ]
"30064771129" [label = <(errcode,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION))<SUB>77</SUB>> ]
"68719476791" [label = <(IDENTIFIER,ERRCODE_INVALID_TEXT_REPRESENTATION,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION))<SUB>77</SUB>> ]
"30064771130" [label = <(errmsg,errmsg(&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,
		...)<SUB>78</SUB>> ]
"90194313234" [label = <(LITERAL,&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,errmsg(&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,
		...)<SUB>78</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>79</SUB>> ]
"68719476792" [label = <(IDENTIFIER,sp,errmsg(&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,
		...)<SUB>79</SUB>> ]
"30064771132" [label = <(&lt;operators&gt;.assignmentArithmeticShiftRight,x &gt;&gt;= 1)<SUB>81</SUB>> ]
"68719476793" [label = <(IDENTIFIER,x,x &gt;&gt;= 1)<SUB>81</SUB>> ]
"90194313235" [label = <(LITERAL,1,x &gt;&gt;= 1)<SUB>81</SUB>> ]
"47244640270" [label = <(CONTROL_STRUCTURE,IF,if (x == 0))<SUB>82</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.equals,x == 0)<SUB>82</SUB>> ]
"68719476794" [label = <(IDENTIFIER,x,x == 0)<SUB>82</SUB>> ]
"90194313236" [label = <(LITERAL,0,x == 0)<SUB>82</SUB>> ]
"25769803793" [label = <(BLOCK,{
				x = HIGHBIT;
				r++;
			},{
				x = HIGHBIT;
				r++;
			})<SUB>83</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.assignment,x = HIGHBIT)<SUB>84</SUB>> ]
"68719476795" [label = <(IDENTIFIER,x,x = HIGHBIT)<SUB>84</SUB>> ]
"68719476796" [label = <(IDENTIFIER,HIGHBIT,x = HIGHBIT)<SUB>84</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.postIncrement,r++)<SUB>85</SUB>> ]
"68719476797" [label = <(IDENTIFIER,r,r++)<SUB>85</SUB>> ]
"47244640271" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>90</SUB>> ]
"25769803794" [label = <(BLOCK,{
		/* Parse the hex representation of the stri...,{
		/* Parse the hex representation of the stri...)<SUB>90</SUB>> ]
"47244640272" [label = <(CONTROL_STRUCTURE,FOR,for (bc = 0;*sp;sp++))<SUB>92</SUB>> ]
"25769803795" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>92</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.assignment,bc = 0)<SUB>92</SUB>> ]
"68719476798" [label = <(IDENTIFIER,bc,bc = 0)<SUB>92</SUB>> ]
"90194313237" [label = <(LITERAL,0,bc = 0)<SUB>92</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>92</SUB>> ]
"68719476799" [label = <(IDENTIFIER,sp,for (bc = 0;*sp;sp++))<SUB>92</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.postIncrement,sp++)<SUB>92</SUB>> ]
"68719476800" [label = <(IDENTIFIER,sp,sp++)<SUB>92</SUB>> ]
"25769803796" [label = <(BLOCK,{
			if (*sp &gt;= '0' &amp;&amp; *sp &lt;= '9')
				x = (bit...,{
			if (*sp &gt;= '0' &amp;&amp; *sp &lt;= '9')
				x = (bit...)<SUB>93</SUB>> ]
"47244640273" [label = <(CONTROL_STRUCTURE,IF,if (*sp &gt;= '0' &amp;&amp; *sp &lt;= '9'))<SUB>94</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.logicalAnd,*sp &gt;= '0' &amp;&amp; *sp &lt;= '9')<SUB>94</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.greaterEqualsThan,*sp &gt;= '0')<SUB>94</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>94</SUB>> ]
"68719476801" [label = <(IDENTIFIER,sp,*sp &gt;= '0')<SUB>94</SUB>> ]
"90194313238" [label = <(LITERAL,'0',*sp &gt;= '0')<SUB>94</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.lessEqualsThan,*sp &lt;= '9')<SUB>94</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>94</SUB>> ]
"68719476802" [label = <(IDENTIFIER,sp,*sp &lt;= '9')<SUB>94</SUB>> ]
"90194313239" [label = <(LITERAL,'9',*sp &lt;= '9')<SUB>94</SUB>> ]
"25769803797" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>95</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.assignment,x = (bits8) (*sp - '0'))<SUB>95</SUB>> ]
"68719476803" [label = <(IDENTIFIER,x,x = (bits8) (*sp - '0'))<SUB>95</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.pointerCall,(bits8) (*sp - '0'))<SUB>95</SUB>> ]
"68719476804" [label = <(IDENTIFIER,bits8,(bits8) (*sp - '0'))<SUB>95</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.subtraction,*sp - '0')<SUB>95</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>95</SUB>> ]
"68719476805" [label = <(IDENTIFIER,sp,*sp - '0')<SUB>95</SUB>> ]
"90194313240" [label = <(LITERAL,'0',*sp - '0')<SUB>95</SUB>> ]
"47244640274" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>96</SUB>> ]
"25769803798" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>96</SUB>> ]
"47244640275" [label = <(CONTROL_STRUCTURE,IF,if (*sp &gt;= 'A' &amp;&amp; *sp &lt;= 'F'))<SUB>96</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.logicalAnd,*sp &gt;= 'A' &amp;&amp; *sp &lt;= 'F')<SUB>96</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.greaterEqualsThan,*sp &gt;= 'A')<SUB>96</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>96</SUB>> ]
"68719476806" [label = <(IDENTIFIER,sp,*sp &gt;= 'A')<SUB>96</SUB>> ]
"90194313241" [label = <(LITERAL,'A',*sp &gt;= 'A')<SUB>96</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.lessEqualsThan,*sp &lt;= 'F')<SUB>96</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>96</SUB>> ]
"68719476807" [label = <(IDENTIFIER,sp,*sp &lt;= 'F')<SUB>96</SUB>> ]
"90194313242" [label = <(LITERAL,'F',*sp &lt;= 'F')<SUB>96</SUB>> ]
"25769803799" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>97</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.assignment,x = (bits8) (*sp - 'A') + 10)<SUB>97</SUB>> ]
"68719476808" [label = <(IDENTIFIER,x,x = (bits8) (*sp - 'A') + 10)<SUB>97</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.addition,(bits8) (*sp - 'A') + 10)<SUB>97</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.pointerCall,(bits8) (*sp - 'A'))<SUB>97</SUB>> ]
"68719476809" [label = <(IDENTIFIER,bits8,(bits8) (*sp - 'A'))<SUB>97</SUB>> ]
"30064771156" [label = <(&lt;operator&gt;.subtraction,*sp - 'A')<SUB>97</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>97</SUB>> ]
"68719476810" [label = <(IDENTIFIER,sp,*sp - 'A')<SUB>97</SUB>> ]
"90194313243" [label = <(LITERAL,'A',*sp - 'A')<SUB>97</SUB>> ]
"90194313244" [label = <(LITERAL,10,(bits8) (*sp - 'A') + 10)<SUB>97</SUB>> ]
"47244640276" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>98</SUB>> ]
"25769803800" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>98</SUB>> ]
"47244640277" [label = <(CONTROL_STRUCTURE,IF,if (*sp &gt;= 'a' &amp;&amp; *sp &lt;= 'f'))<SUB>98</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.logicalAnd,*sp &gt;= 'a' &amp;&amp; *sp &lt;= 'f')<SUB>98</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.greaterEqualsThan,*sp &gt;= 'a')<SUB>98</SUB>> ]
"30064771160" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>98</SUB>> ]
"68719476811" [label = <(IDENTIFIER,sp,*sp &gt;= 'a')<SUB>98</SUB>> ]
"90194313245" [label = <(LITERAL,'a',*sp &gt;= 'a')<SUB>98</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.lessEqualsThan,*sp &lt;= 'f')<SUB>98</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>98</SUB>> ]
"68719476812" [label = <(IDENTIFIER,sp,*sp &lt;= 'f')<SUB>98</SUB>> ]
"90194313246" [label = <(LITERAL,'f',*sp &lt;= 'f')<SUB>98</SUB>> ]
"25769803801" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>99</SUB>> ]
"30064771163" [label = <(&lt;operator&gt;.assignment,x = (bits8) (*sp - 'a') + 10)<SUB>99</SUB>> ]
"68719476813" [label = <(IDENTIFIER,x,x = (bits8) (*sp - 'a') + 10)<SUB>99</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.addition,(bits8) (*sp - 'a') + 10)<SUB>99</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.pointerCall,(bits8) (*sp - 'a'))<SUB>99</SUB>> ]
"68719476814" [label = <(IDENTIFIER,bits8,(bits8) (*sp - 'a'))<SUB>99</SUB>> ]
"30064771166" [label = <(&lt;operator&gt;.subtraction,*sp - 'a')<SUB>99</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>99</SUB>> ]
"68719476815" [label = <(IDENTIFIER,sp,*sp - 'a')<SUB>99</SUB>> ]
"90194313247" [label = <(LITERAL,'a',*sp - 'a')<SUB>99</SUB>> ]
"90194313248" [label = <(LITERAL,10,(bits8) (*sp - 'a') + 10)<SUB>99</SUB>> ]
"47244640278" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>101</SUB>> ]
"25769803802" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>101</SUB>> ]
"30064771168" [label = <(ereport,ereport(ERROR,
						(errcode(ERRCODE_INVALID_T...)<SUB>101</SUB>> ]
"68719476816" [label = <(IDENTIFIER,ERROR,ereport(ERROR,
						(errcode(ERRCODE_INVALID_T...)<SUB>101</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.bracketedPrimary,(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
...)<SUB>102</SUB>> ]
"30064771170" [label = <(&lt;operator&gt;.expressionList,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
	...)<SUB>102</SUB>> ]
"30064771171" [label = <(errcode,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION))<SUB>102</SUB>> ]
"68719476817" [label = <(IDENTIFIER,ERRCODE_INVALID_TEXT_REPRESENTATION,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION))<SUB>102</SUB>> ]
"30064771172" [label = <(errmsg,errmsg(&quot;\&quot;%c\&quot; is not a valid hexadecimal digit...)<SUB>103</SUB>> ]
"90194313249" [label = <(LITERAL,&quot;\&quot;%c\&quot; is not a valid hexadecimal digit&quot;,errmsg(&quot;\&quot;%c\&quot; is not a valid hexadecimal digit...)<SUB>103</SUB>> ]
"30064771173" [label = <(&lt;operator&gt;.indirection,*sp)<SUB>104</SUB>> ]
"68719476818" [label = <(IDENTIFIER,sp,errmsg(&quot;\&quot;%c\&quot; is not a valid hexadecimal digit...)<SUB>104</SUB>> ]
"47244640279" [label = <(CONTROL_STRUCTURE,IF,if (bc))<SUB>106</SUB>> ]
"68719476819" [label = <(IDENTIFIER,bc,if (bc))<SUB>106</SUB>> ]
"25769803803" [label = <(BLOCK,{
				*r++ |= x;
				bc = 0;
			},{
				*r++ |= x;
				bc = 0;
			})<SUB>107</SUB>> ]
"30064771174" [label = <(&lt;operators&gt;.assignmentOr,*r++ |= x)<SUB>108</SUB>> ]
"30064771175" [label = <(&lt;operator&gt;.indirection,*r++)<SUB>108</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;.postIncrement,r++)<SUB>108</SUB>> ]
"68719476820" [label = <(IDENTIFIER,r,r++)<SUB>108</SUB>> ]
"68719476821" [label = <(IDENTIFIER,x,*r++ |= x)<SUB>108</SUB>> ]
"30064771177" [label = <(&lt;operator&gt;.assignment,bc = 0)<SUB>109</SUB>> ]
"68719476822" [label = <(IDENTIFIER,bc,bc = 0)<SUB>109</SUB>> ]
"90194313250" [label = <(LITERAL,0,bc = 0)<SUB>109</SUB>> ]
"47244640280" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>112</SUB>> ]
"25769803804" [label = <(BLOCK,{
				*r = x &lt;&lt; 4;
				bc = 1;
			},{
				*r = x &lt;&lt; 4;
				bc = 1;
			})<SUB>112</SUB>> ]
"30064771178" [label = <(&lt;operator&gt;.assignment,*r = x &lt;&lt; 4)<SUB>113</SUB>> ]
"30064771179" [label = <(&lt;operator&gt;.indirection,*r)<SUB>113</SUB>> ]
"68719476823" [label = <(IDENTIFIER,r,*r = x &lt;&lt; 4)<SUB>113</SUB>> ]
"30064771180" [label = <(&lt;operator&gt;.shiftLeft,x &lt;&lt; 4)<SUB>113</SUB>> ]
"68719476824" [label = <(IDENTIFIER,x,x &lt;&lt; 4)<SUB>113</SUB>> ]
"90194313251" [label = <(LITERAL,4,x &lt;&lt; 4)<SUB>113</SUB>> ]
"30064771181" [label = <(&lt;operator&gt;.assignment,bc = 1)<SUB>114</SUB>> ]
"68719476825" [label = <(IDENTIFIER,bc,bc = 1)<SUB>114</SUB>> ]
"90194313252" [label = <(LITERAL,1,bc = 1)<SUB>114</SUB>> ]
"30064771182" [label = <(PG_RETURN_VARBIT_P,PG_RETURN_VARBIT_P(result))<SUB>119</SUB>> ]
"68719476826" [label = <(IDENTIFIER,result,PG_RETURN_VARBIT_P(result))<SUB>119</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "25769803777" -> "30064771108"  [ label = "AST: "] 
  "25769803777" -> "30064771110"  [ label = "AST: "] 
  "25769803777" -> "30064771113"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "30064771114"  [ label = "AST: "] 
  "25769803777" -> "30064771115"  [ label = "AST: "] 
  "25769803777" -> "47244640265"  [ label = "AST: "] 
  "25769803777" -> "30064771182"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "90194313218"  [ label = "AST: "] 
  "47244640256" -> "30064771077"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640257"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "30064771080"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "90194313220"  [ label = "AST: "] 
  "30064771079" -> "68719476739"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "90194313222"  [ label = "AST: "] 
  "30064771081" -> "68719476740"  [ label = "AST: "] 
  "30064771081" -> "90194313221"  [ label = "AST: "] 
  "25769803778" -> "30064771082"  [ label = "AST: "] 
  "25769803778" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476741"  [ label = "AST: "] 
  "30064771082" -> "68719476742"  [ label = "AST: "] 
  "30064771083" -> "68719476743"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476744"  [ label = "AST: "] 
  "30064771084" -> "90194313223"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771085"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "30064771088"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "90194313225"  [ label = "AST: "] 
  "30064771087" -> "68719476745"  [ label = "AST: "] 
  "30064771087" -> "90194313224"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "90194313227"  [ label = "AST: "] 
  "30064771089" -> "68719476746"  [ label = "AST: "] 
  "30064771089" -> "90194313226"  [ label = "AST: "] 
  "25769803780" -> "30064771090"  [ label = "AST: "] 
  "25769803780" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "68719476747"  [ label = "AST: "] 
  "30064771090" -> "68719476748"  [ label = "AST: "] 
  "30064771091" -> "68719476749"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476750"  [ label = "AST: "] 
  "30064771092" -> "90194313228"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771093"  [ label = "AST: "] 
  "25769803781" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "68719476751"  [ label = "AST: "] 
  "30064771093" -> "68719476752"  [ label = "AST: "] 
  "30064771094" -> "68719476753"  [ label = "AST: "] 
  "30064771094" -> "68719476754"  [ label = "AST: "] 
  "30064771095" -> "68719476755"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476756"  [ label = "AST: "] 
  "47244640260" -> "68719476757"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "47244640260" -> "47244640261"  [ label = "AST: "] 
  "25769803782" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476758"  [ label = "AST: "] 
  "30064771097" -> "68719476759"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476760"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476761"  [ label = "AST: "] 
  "30064771099" -> "90194313229"  [ label = "AST: "] 
  "47244640262" -> "30064771100"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "47244640262" -> "47244640263"  [ label = "AST: "] 
  "30064771100" -> "68719476762"  [ label = "AST: "] 
  "30064771100" -> "90194313230"  [ label = "AST: "] 
  "25769803784" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "68719476763"  [ label = "AST: "] 
  "30064771101" -> "68719476764"  [ label = "AST: "] 
  "47244640263" -> "25769803785"  [ label = "AST: "] 
  "25769803785" -> "47244640264"  [ label = "AST: "] 
  "47244640264" -> "30064771102"  [ label = "AST: "] 
  "47244640264" -> "25769803786"  [ label = "AST: "] 
  "30064771102" -> "68719476765"  [ label = "AST: "] 
  "30064771102" -> "68719476766"  [ label = "AST: "] 
  "25769803786" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476767"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "68719476768"  [ label = "AST: "] 
  "30064771107" -> "90194313231"  [ label = "AST: "] 
  "30064771107" -> "68719476769"  [ label = "AST: "] 
  "30064771107" -> "68719476770"  [ label = "AST: "] 
  "30064771108" -> "68719476771"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "68719476772"  [ label = "AST: "] 
  "30064771110" -> "68719476773"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "184683593728"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "68719476774"  [ label = "AST: "] 
  "30064771113" -> "68719476775"  [ label = "AST: "] 
  "30064771113" -> "68719476776"  [ label = "AST: "] 
  "30064771114" -> "68719476777"  [ label = "AST: "] 
  "30064771114" -> "68719476778"  [ label = "AST: "] 
  "30064771115" -> "68719476779"  [ label = "AST: "] 
  "30064771115" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "68719476780"  [ label = "AST: "] 
  "47244640265" -> "68719476781"  [ label = "AST: "] 
  "47244640265" -> "25769803787"  [ label = "AST: "] 
  "47244640265" -> "47244640271"  [ label = "AST: "] 
  "25769803787" -> "30064771117"  [ label = "AST: "] 
  "25769803787" -> "47244640266"  [ label = "AST: "] 
  "30064771117" -> "68719476782"  [ label = "AST: "] 
  "30064771117" -> "68719476783"  [ label = "AST: "] 
  "47244640266" -> "25769803788"  [ label = "AST: "] 
  "47244640266" -> "30064771118"  [ label = "AST: "] 
  "47244640266" -> "30064771119"  [ label = "AST: "] 
  "47244640266" -> "25769803789"  [ label = "AST: "] 
  "30064771118" -> "68719476784"  [ label = "AST: "] 
  "30064771119" -> "68719476785"  [ label = "AST: "] 
  "25769803789" -> "47244640267"  [ label = "AST: "] 
  "25769803789" -> "30064771132"  [ label = "AST: "] 
  "25769803789" -> "47244640270"  [ label = "AST: "] 
  "47244640267" -> "30064771120"  [ label = "AST: "] 
  "47244640267" -> "25769803790"  [ label = "AST: "] 
  "47244640267" -> "47244640268"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "90194313232"  [ label = "AST: "] 
  "30064771121" -> "68719476786"  [ label = "AST: "] 
  "25769803790" -> "30064771122"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771122" -> "68719476788"  [ label = "AST: "] 
  "30064771123" -> "68719476787"  [ label = "AST: "] 
  "47244640268" -> "25769803791"  [ label = "AST: "] 
  "25769803791" -> "47244640269"  [ label = "AST: "] 
  "47244640269" -> "30064771124"  [ label = "AST: "] 
  "47244640269" -> "25769803792"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "90194313233"  [ label = "AST: "] 
  "30064771125" -> "68719476789"  [ label = "AST: "] 
  "25769803792" -> "30064771126"  [ label = "AST: "] 
  "30064771126" -> "68719476790"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771128" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "68719476791"  [ label = "AST: "] 
  "30064771130" -> "90194313234"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "68719476792"  [ label = "AST: "] 
  "30064771132" -> "68719476793"  [ label = "AST: "] 
  "30064771132" -> "90194313235"  [ label = "AST: "] 
  "47244640270" -> "30064771133"  [ label = "AST: "] 
  "47244640270" -> "25769803793"  [ label = "AST: "] 
  "30064771133" -> "68719476794"  [ label = "AST: "] 
  "30064771133" -> "90194313236"  [ label = "AST: "] 
  "25769803793" -> "30064771134"  [ label = "AST: "] 
  "25769803793" -> "30064771135"  [ label = "AST: "] 
  "30064771134" -> "68719476795"  [ label = "AST: "] 
  "30064771134" -> "68719476796"  [ label = "AST: "] 
  "30064771135" -> "68719476797"  [ label = "AST: "] 
  "47244640271" -> "25769803794"  [ label = "AST: "] 
  "25769803794" -> "47244640272"  [ label = "AST: "] 
  "47244640272" -> "25769803795"  [ label = "AST: "] 
  "47244640272" -> "30064771137"  [ label = "AST: "] 
  "47244640272" -> "30064771138"  [ label = "AST: "] 
  "47244640272" -> "25769803796"  [ label = "AST: "] 
  "25769803795" -> "30064771136"  [ label = "AST: "] 
  "30064771136" -> "68719476798"  [ label = "AST: "] 
  "30064771136" -> "90194313237"  [ label = "AST: "] 
  "30064771137" -> "68719476799"  [ label = "AST: "] 
  "30064771138" -> "68719476800"  [ label = "AST: "] 
  "25769803796" -> "47244640273"  [ label = "AST: "] 
  "25769803796" -> "47244640279"  [ label = "AST: "] 
  "47244640273" -> "30064771139"  [ label = "AST: "] 
  "47244640273" -> "25769803797"  [ label = "AST: "] 
  "47244640273" -> "47244640274"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771139" -> "30064771142"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771140" -> "90194313238"  [ label = "AST: "] 
  "30064771141" -> "68719476801"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771142" -> "90194313239"  [ label = "AST: "] 
  "30064771143" -> "68719476802"  [ label = "AST: "] 
  "25769803797" -> "30064771144"  [ label = "AST: "] 
  "30064771144" -> "68719476803"  [ label = "AST: "] 
  "30064771144" -> "30064771145"  [ label = "AST: "] 
  "30064771145" -> "68719476804"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771146" -> "30064771147"  [ label = "AST: "] 
  "30064771146" -> "90194313240"  [ label = "AST: "] 
  "30064771147" -> "68719476805"  [ label = "AST: "] 
  "47244640274" -> "25769803798"  [ label = "AST: "] 
  "25769803798" -> "47244640275"  [ label = "AST: "] 
  "47244640275" -> "30064771148"  [ label = "AST: "] 
  "47244640275" -> "25769803799"  [ label = "AST: "] 
  "47244640275" -> "47244640276"  [ label = "AST: "] 
  "30064771148" -> "30064771149"  [ label = "AST: "] 
  "30064771148" -> "30064771151"  [ label = "AST: "] 
  "30064771149" -> "30064771150"  [ label = "AST: "] 
  "30064771149" -> "90194313241"  [ label = "AST: "] 
  "30064771150" -> "68719476806"  [ label = "AST: "] 
  "30064771151" -> "30064771152"  [ label = "AST: "] 
  "30064771151" -> "90194313242"  [ label = "AST: "] 
  "30064771152" -> "68719476807"  [ label = "AST: "] 
  "25769803799" -> "30064771153"  [ label = "AST: "] 
  "30064771153" -> "68719476808"  [ label = "AST: "] 
  "30064771153" -> "30064771154"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771154" -> "90194313244"  [ label = "AST: "] 
  "30064771155" -> "68719476809"  [ label = "AST: "] 
  "30064771155" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "30064771157"  [ label = "AST: "] 
  "30064771156" -> "90194313243"  [ label = "AST: "] 
  "30064771157" -> "68719476810"  [ label = "AST: "] 
  "47244640276" -> "25769803800"  [ label = "AST: "] 
  "25769803800" -> "47244640277"  [ label = "AST: "] 
  "47244640277" -> "30064771158"  [ label = "AST: "] 
  "47244640277" -> "25769803801"  [ label = "AST: "] 
  "47244640277" -> "47244640278"  [ label = "AST: "] 
  "30064771158" -> "30064771159"  [ label = "AST: "] 
  "30064771158" -> "30064771161"  [ label = "AST: "] 
  "30064771159" -> "30064771160"  [ label = "AST: "] 
  "30064771159" -> "90194313245"  [ label = "AST: "] 
  "30064771160" -> "68719476811"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "90194313246"  [ label = "AST: "] 
  "30064771162" -> "68719476812"  [ label = "AST: "] 
  "25769803801" -> "30064771163"  [ label = "AST: "] 
  "30064771163" -> "68719476813"  [ label = "AST: "] 
  "30064771163" -> "30064771164"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771164" -> "90194313248"  [ label = "AST: "] 
  "30064771165" -> "68719476814"  [ label = "AST: "] 
  "30064771165" -> "30064771166"  [ label = "AST: "] 
  "30064771166" -> "30064771167"  [ label = "AST: "] 
  "30064771166" -> "90194313247"  [ label = "AST: "] 
  "30064771167" -> "68719476815"  [ label = "AST: "] 
  "47244640278" -> "25769803802"  [ label = "AST: "] 
  "25769803802" -> "30064771168"  [ label = "AST: "] 
  "30064771168" -> "68719476816"  [ label = "AST: "] 
  "30064771168" -> "30064771169"  [ label = "AST: "] 
  "30064771169" -> "30064771170"  [ label = "AST: "] 
  "30064771170" -> "30064771171"  [ label = "AST: "] 
  "30064771170" -> "30064771172"  [ label = "AST: "] 
  "30064771171" -> "68719476817"  [ label = "AST: "] 
  "30064771172" -> "90194313249"  [ label = "AST: "] 
  "30064771172" -> "30064771173"  [ label = "AST: "] 
  "30064771173" -> "68719476818"  [ label = "AST: "] 
  "47244640279" -> "68719476819"  [ label = "AST: "] 
  "47244640279" -> "25769803803"  [ label = "AST: "] 
  "47244640279" -> "47244640280"  [ label = "AST: "] 
  "25769803803" -> "30064771174"  [ label = "AST: "] 
  "25769803803" -> "30064771177"  [ label = "AST: "] 
  "30064771174" -> "30064771175"  [ label = "AST: "] 
  "30064771174" -> "68719476821"  [ label = "AST: "] 
  "30064771175" -> "30064771176"  [ label = "AST: "] 
  "30064771176" -> "68719476820"  [ label = "AST: "] 
  "30064771177" -> "68719476822"  [ label = "AST: "] 
  "30064771177" -> "90194313250"  [ label = "AST: "] 
  "47244640280" -> "25769803804"  [ label = "AST: "] 
  "25769803804" -> "30064771178"  [ label = "AST: "] 
  "25769803804" -> "30064771181"  [ label = "AST: "] 
  "30064771178" -> "30064771179"  [ label = "AST: "] 
  "30064771178" -> "30064771180"  [ label = "AST: "] 
  "30064771179" -> "68719476823"  [ label = "AST: "] 
  "30064771180" -> "68719476824"  [ label = "AST: "] 
  "30064771180" -> "90194313251"  [ label = "AST: "] 
  "30064771181" -> "68719476825"  [ label = "AST: "] 
  "30064771181" -> "90194313252"  [ label = "AST: "] 
  "30064771182" -> "68719476826"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771095" -> "68719476757"  [ label = "CFG: "] 
  "30064771108" -> "184683593728"  [ label = "CFG: "] 
  "30064771110" -> "30064771113"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771114" -> "30064771116"  [ label = "CFG: "] 
  "30064771115" -> "68719476781"  [ label = "CFG: "] 
  "30064771182" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771082"  [ label = "CFG: "] 
  "30064771077" -> "30064771087"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "68719476757" -> "30064771097"  [ label = "CFG: "] 
  "68719476757" -> "30064771099"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771100" -> "30064771102"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771116" -> "30064771115"  [ label = "CFG: "] 
  "68719476781" -> "30064771117"  [ label = "CFG: "] 
  "68719476781" -> "30064771136"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771078" -> "30064771081"  [ label = "CFG: "] 
  "30064771080" -> "30064771077"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771083" -> "30064771096"  [ label = "CFG: "] 
  "30064771097" -> "30064771100"  [ label = "CFG: "] 
  "30064771101" -> "30064771109"  [ label = "CFG: "] 
  "184683593728" -> "30064771112"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771117" -> "30064771118"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771098" -> "30064771100"  [ label = "CFG: "] 
  "30064771118" -> "30064771121"  [ label = "CFG: "] 
  "30064771118" -> "30064771182"  [ label = "CFG: "] 
  "30064771119" -> "30064771118"  [ label = "CFG: "] 
  "30064771085" -> "30064771090"  [ label = "CFG: "] 
  "30064771085" -> "30064771093"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771102" -> "30064771106"  [ label = "CFG: "] 
  "30064771102" -> "30064771109"  [ label = "CFG: "] 
  "30064771132" -> "30064771133"  [ label = "CFG: "] 
  "30064771137" -> "30064771141"  [ label = "CFG: "] 
  "30064771137" -> "30064771182"  [ label = "CFG: "] 
  "30064771138" -> "30064771137"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771086" -> "30064771089"  [ label = "CFG: "] 
  "30064771088" -> "30064771085"  [ label = "CFG: "] 
  "30064771090" -> "30064771092"  [ label = "CFG: "] 
  "30064771091" -> "30064771096"  [ label = "CFG: "] 
  "30064771103" -> "30064771109"  [ label = "CFG: "] 
  "30064771120" -> "30064771123"  [ label = "CFG: "] 
  "30064771120" -> "30064771125"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "30064771133" -> "30064771119"  [ label = "CFG: "] 
  "30064771136" -> "30064771137"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771094" -> "30064771096"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771122" -> "30064771132"  [ label = "CFG: "] 
  "30064771134" -> "30064771135"  [ label = "CFG: "] 
  "30064771135" -> "30064771119"  [ label = "CFG: "] 
  "30064771139" -> "30064771147"  [ label = "CFG: "] 
  "30064771139" -> "30064771150"  [ label = "CFG: "] 
  "68719476819" -> "30064771176"  [ label = "CFG: "] 
  "68719476819" -> "30064771179"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771123" -> "30064771122"  [ label = "CFG: "] 
  "30064771140" -> "30064771139"  [ label = "CFG: "] 
  "30064771140" -> "30064771143"  [ label = "CFG: "] 
  "30064771142" -> "30064771139"  [ label = "CFG: "] 
  "30064771144" -> "68719476819"  [ label = "CFG: "] 
  "30064771174" -> "30064771177"  [ label = "CFG: "] 
  "30064771177" -> "30064771138"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "30064771105"  [ label = "CFG: "] 
  "30064771124" -> "30064771129"  [ label = "CFG: "] 
  "30064771124" -> "30064771132"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "30064771143" -> "30064771142"  [ label = "CFG: "] 
  "30064771145" -> "30064771144"  [ label = "CFG: "] 
  "30064771175" -> "30064771174"  [ label = "CFG: "] 
  "30064771178" -> "30064771181"  [ label = "CFG: "] 
  "30064771181" -> "30064771138"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771126" -> "30064771132"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771148" -> "30064771157"  [ label = "CFG: "] 
  "30064771148" -> "30064771160"  [ label = "CFG: "] 
  "30064771176" -> "30064771175"  [ label = "CFG: "] 
  "30064771179" -> "30064771180"  [ label = "CFG: "] 
  "30064771180" -> "30064771178"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771147" -> "30064771146"  [ label = "CFG: "] 
  "30064771149" -> "30064771148"  [ label = "CFG: "] 
  "30064771149" -> "30064771152"  [ label = "CFG: "] 
  "30064771151" -> "30064771148"  [ label = "CFG: "] 
  "30064771153" -> "68719476819"  [ label = "CFG: "] 
  "30064771128" -> "30064771127"  [ label = "CFG: "] 
  "30064771150" -> "30064771149"  [ label = "CFG: "] 
  "30064771152" -> "30064771151"  [ label = "CFG: "] 
  "30064771154" -> "30064771153"  [ label = "CFG: "] 
  "30064771129" -> "30064771131"  [ label = "CFG: "] 
  "30064771130" -> "30064771128"  [ label = "CFG: "] 
  "30064771155" -> "30064771154"  [ label = "CFG: "] 
  "30064771158" -> "30064771167"  [ label = "CFG: "] 
  "30064771158" -> "30064771171"  [ label = "CFG: "] 
  "30064771131" -> "30064771130"  [ label = "CFG: "] 
  "30064771156" -> "30064771155"  [ label = "CFG: "] 
  "30064771159" -> "30064771158"  [ label = "CFG: "] 
  "30064771159" -> "30064771162"  [ label = "CFG: "] 
  "30064771161" -> "30064771158"  [ label = "CFG: "] 
  "30064771163" -> "68719476819"  [ label = "CFG: "] 
  "30064771157" -> "30064771156"  [ label = "CFG: "] 
  "30064771160" -> "30064771159"  [ label = "CFG: "] 
  "30064771162" -> "30064771161"  [ label = "CFG: "] 
  "30064771164" -> "30064771163"  [ label = "CFG: "] 
  "30064771168" -> "68719476819"  [ label = "CFG: "] 
  "30064771165" -> "30064771164"  [ label = "CFG: "] 
  "30064771169" -> "30064771168"  [ label = "CFG: "] 
  "30064771166" -> "30064771165"  [ label = "CFG: "] 
  "30064771170" -> "30064771169"  [ label = "CFG: "] 
  "30064771167" -> "30064771166"  [ label = "CFG: "] 
  "30064771171" -> "30064771173"  [ label = "CFG: "] 
  "30064771172" -> "30064771170"  [ label = "CFG: "] 
  "30064771173" -> "30064771172"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "115964116992" -> "128849018880"  [ label = "DDG: PG_FUNCTION_ARGS"] 
  "30064771072" -> "128849018880"  [ label = "DDG: PG_GETARG_CSTRING(0)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: *input_string = PG_GETARG_CSTRING(0)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: PG_GETARG_INT32(2)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: atttypmod = PG_GETARG_INT32(2)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: x"] 
  "30064771076" -> "128849018880"  [ label = "DDG: x = 0"] 
  "30064771078" -> "128849018880"  [ label = "DDG: input_string[0]"] 
  "30064771077" -> "128849018880"  [ label = "DDG: input_string[0] == 'b'"] 
  "30064771080" -> "128849018880"  [ label = "DDG: input_string[0]"] 
  "30064771077" -> "128849018880"  [ label = "DDG: input_string[0] == 'B'"] 
  "30064771077" -> "128849018880"  [ label = "DDG: input_string[0] == 'b' || input_string[0] == 'B'"] 
  "30064771086" -> "128849018880"  [ label = "DDG: input_string[0]"] 
  "30064771085" -> "128849018880"  [ label = "DDG: input_string[0] == 'x'"] 
  "30064771088" -> "128849018880"  [ label = "DDG: input_string[0]"] 
  "30064771085" -> "128849018880"  [ label = "DDG: input_string[0] == 'X'"] 
  "30064771085" -> "128849018880"  [ label = "DDG: input_string[0] == 'x' || input_string[0] == 'X'"] 
  "30064771093" -> "128849018880"  [ label = "DDG: bit_not_hex"] 
  "30064771093" -> "128849018880"  [ label = "DDG: true"] 
  "30064771093" -> "128849018880"  [ label = "DDG: bit_not_hex = true"] 
  "30064771094" -> "128849018880"  [ label = "DDG: input_string"] 
  "30064771094" -> "128849018880"  [ label = "DDG: sp = input_string"] 
  "30064771090" -> "128849018880"  [ label = "DDG: bit_not_hex"] 
  "30064771090" -> "128849018880"  [ label = "DDG: bit_not_hex = false"] 
  "30064771092" -> "128849018880"  [ label = "DDG: input_string"] 
  "30064771091" -> "128849018880"  [ label = "DDG: input_string + 1"] 
  "30064771091" -> "128849018880"  [ label = "DDG: sp = input_string + 1"] 
  "30064771082" -> "128849018880"  [ label = "DDG: bit_not_hex"] 
  "30064771082" -> "128849018880"  [ label = "DDG: true"] 
  "30064771082" -> "128849018880"  [ label = "DDG: bit_not_hex = true"] 
  "30064771084" -> "128849018880"  [ label = "DDG: input_string"] 
  "30064771083" -> "128849018880"  [ label = "DDG: input_string + 1"] 
  "30064771083" -> "128849018880"  [ label = "DDG: sp = input_string + 1"] 
  "30064771096" -> "128849018880"  [ label = "DDG: sp"] 
  "30064771095" -> "128849018880"  [ label = "DDG: strlen(sp)"] 
  "30064771095" -> "128849018880"  [ label = "DDG: slen = strlen(sp)"] 
  "30064771099" -> "128849018880"  [ label = "DDG: slen"] 
  "30064771098" -> "128849018880"  [ label = "DDG: slen * 4"] 
  "30064771098" -> "128849018880"  [ label = "DDG: bitlen = slen * 4"] 
  "30064771097" -> "128849018880"  [ label = "DDG: slen"] 
  "30064771097" -> "128849018880"  [ label = "DDG: bitlen = slen"] 
  "30064771100" -> "128849018880"  [ label = "DDG: atttypmod &lt;= 0"] 
  "30064771102" -> "128849018880"  [ label = "DDG: bitlen"] 
  "30064771102" -> "128849018880"  [ label = "DDG: bitlen != atttypmod"] 
  "30064771103" -> "128849018880"  [ label = "DDG: ERROR"] 
  "30064771105" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH)"] 
  "30064771107" -> "128849018880"  [ label = "DDG: bitlen"] 
  "30064771105" -> "128849018880"  [ label = "DDG: errmsg(&quot;bit string length %d does not match type bit(%d)&quot;,
						bitlen, atttypmod)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH),
				 errmsg(&quot;bit string length %d does not match type bit(%d)&quot;,
						bitlen, atttypmod)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: (errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH),
				 errmsg(&quot;bit string length %d does not match type bit(%d)&quot;,
						bitlen, atttypmod))"] 
  "30064771103" -> "128849018880"  [ label = "DDG: ereport(ERROR,
				(errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH),
				 errmsg(&quot;bit string length %d does not match type bit(%d)&quot;,
						bitlen, atttypmod)))"] 
  "30064771101" -> "128849018880"  [ label = "DDG: bitlen"] 
  "30064771101" -> "128849018880"  [ label = "DDG: atttypmod = bitlen"] 
  "30064771108" -> "128849018880"  [ label = "DDG: VARBITTOTALLEN(atttypmod)"] 
  "30064771108" -> "128849018880"  [ label = "DDG: len = VARBITTOTALLEN(atttypmod)"] 
  "30064771111" -> "128849018880"  [ label = "DDG: palloc0(len)"] 
  "30064771110" -> "128849018880"  [ label = "DDG: (VarBit *) palloc0(len)"] 
  "30064771110" -> "128849018880"  [ label = "DDG: result = (VarBit *) palloc0(len)"] 
  "30064771113" -> "128849018880"  [ label = "DDG: len"] 
  "30064771113" -> "128849018880"  [ label = "DDG: SET_VARSIZE(result, len)"] 
  "30064771114" -> "128849018880"  [ label = "DDG: atttypmod"] 
  "30064771114" -> "128849018880"  [ label = "DDG: (result) = atttypmod"] 
  "30064771115" -> "128849018880"  [ label = "DDG: r"] 
  "30064771115" -> "128849018880"  [ label = "DDG: VARBITS(result)"] 
  "30064771115" -> "128849018880"  [ label = "DDG: r = VARBITS(result)"] 
  "30064771136" -> "128849018880"  [ label = "DDG: bc"] 
  "30064771136" -> "128849018880"  [ label = "DDG: bc = 0"] 
  "30064771139" -> "128849018880"  [ label = "DDG: *sp &gt;= '0'"] 
  "30064771139" -> "128849018880"  [ label = "DDG: *sp &lt;= '9'"] 
  "30064771139" -> "128849018880"  [ label = "DDG: *sp &gt;= '0' &amp;&amp; *sp &lt;= '9'"] 
  "30064771148" -> "128849018880"  [ label = "DDG: *sp &gt;= 'A'"] 
  "30064771148" -> "128849018880"  [ label = "DDG: *sp &lt;= 'F'"] 
  "30064771148" -> "128849018880"  [ label = "DDG: *sp &gt;= 'A' &amp;&amp; *sp &lt;= 'F'"] 
  "30064771158" -> "128849018880"  [ label = "DDG: *sp &gt;= 'a'"] 
  "30064771158" -> "128849018880"  [ label = "DDG: *sp &lt;= 'f'"] 
  "30064771158" -> "128849018880"  [ label = "DDG: *sp &gt;= 'a' &amp;&amp; *sp &lt;= 'f'"] 
  "30064771168" -> "128849018880"  [ label = "DDG: ERROR"] 
  "30064771171" -> "128849018880"  [ label = "DDG: ERRCODE_INVALID_TEXT_REPRESENTATION"] 
  "30064771170" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION)"] 
  "30064771172" -> "128849018880"  [ label = "DDG: *sp"] 
  "30064771170" -> "128849018880"  [ label = "DDG: errmsg(&quot;\&quot;%c\&quot; is not a valid hexadecimal digit&quot;,
								*sp)"] 
  "30064771169" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
						 errmsg(&quot;\&quot;%c\&quot; is not a valid hexadecimal digit&quot;,
								*sp)"] 
  "30064771168" -> "128849018880"  [ label = "DDG: (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
						 errmsg(&quot;\&quot;%c\&quot; is not a valid hexadecimal digit&quot;,
								*sp))"] 
  "30064771168" -> "128849018880"  [ label = "DDG: ereport(ERROR,
						(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
						 errmsg(&quot;\&quot;%c\&quot; is not a valid hexadecimal digit&quot;,
								*sp)))"] 
  "30064771166" -> "128849018880"  [ label = "DDG: *sp"] 
  "30064771165" -> "128849018880"  [ label = "DDG: *sp - 'a'"] 
  "30064771164" -> "128849018880"  [ label = "DDG: (bits8) (*sp - 'a')"] 
  "30064771163" -> "128849018880"  [ label = "DDG: (bits8) (*sp - 'a') + 10"] 
  "30064771163" -> "128849018880"  [ label = "DDG: x = (bits8) (*sp - 'a') + 10"] 
  "30064771156" -> "128849018880"  [ label = "DDG: *sp"] 
  "30064771155" -> "128849018880"  [ label = "DDG: *sp - 'A'"] 
  "30064771154" -> "128849018880"  [ label = "DDG: (bits8) (*sp - 'A')"] 
  "30064771153" -> "128849018880"  [ label = "DDG: (bits8) (*sp - 'A') + 10"] 
  "30064771153" -> "128849018880"  [ label = "DDG: x = (bits8) (*sp - 'A') + 10"] 
  "30064771146" -> "128849018880"  [ label = "DDG: *sp"] 
  "30064771145" -> "128849018880"  [ label = "DDG: *sp - '0'"] 
  "30064771144" -> "128849018880"  [ label = "DDG: (bits8) (*sp - '0')"] 
  "30064771144" -> "128849018880"  [ label = "DDG: x = (bits8) (*sp - '0')"] 
  "30064771178" -> "128849018880"  [ label = "DDG: *r"] 
  "30064771180" -> "128849018880"  [ label = "DDG: x"] 
  "30064771178" -> "128849018880"  [ label = "DDG: x &lt;&lt; 4"] 
  "30064771178" -> "128849018880"  [ label = "DDG: *r = x &lt;&lt; 4"] 
  "30064771181" -> "128849018880"  [ label = "DDG: bc"] 
  "30064771181" -> "128849018880"  [ label = "DDG: bc = 1"] 
  "30064771176" -> "128849018880"  [ label = "DDG: r"] 
  "30064771174" -> "128849018880"  [ label = "DDG: *r++"] 
  "30064771174" -> "128849018880"  [ label = "DDG: x"] 
  "30064771177" -> "128849018880"  [ label = "DDG: bc"] 
  "30064771177" -> "128849018880"  [ label = "DDG: bc = 0"] 
  "30064771138" -> "128849018880"  [ label = "DDG: sp"] 
  "30064771138" -> "128849018880"  [ label = "DDG: sp++"] 
  "30064771117" -> "128849018880"  [ label = "DDG: x"] 
  "30064771117" -> "128849018880"  [ label = "DDG: HIGHBIT"] 
  "30064771117" -> "128849018880"  [ label = "DDG: x = HIGHBIT"] 
  "30064771182" -> "128849018880"  [ label = "DDG: result"] 
  "30064771182" -> "128849018880"  [ label = "DDG: PG_RETURN_VARBIT_P(result)"] 
  "30064771120" -> "128849018880"  [ label = "DDG: *sp"] 
  "30064771120" -> "128849018880"  [ label = "DDG: *sp == '1'"] 
  "30064771124" -> "128849018880"  [ label = "DDG: *sp"] 
  "30064771124" -> "128849018880"  [ label = "DDG: *sp != '0'"] 
  "30064771126" -> "128849018880"  [ label = "DDG: ERROR"] 
  "30064771129" -> "128849018880"  [ label = "DDG: ERRCODE_INVALID_TEXT_REPRESENTATION"] 
  "30064771128" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION)"] 
  "30064771130" -> "128849018880"  [ label = "DDG: *sp"] 
  "30064771128" -> "128849018880"  [ label = "DDG: errmsg(&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,
								*sp)"] 
  "30064771127" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
						 errmsg(&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,
								*sp)"] 
  "30064771126" -> "128849018880"  [ label = "DDG: (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
						 errmsg(&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,
								*sp))"] 
  "30064771126" -> "128849018880"  [ label = "DDG: ereport(ERROR,
						(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
						 errmsg(&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,
								*sp)))"] 
  "30064771122" -> "128849018880"  [ label = "DDG: *r"] 
  "30064771133" -> "128849018880"  [ label = "DDG: x"] 
  "30064771133" -> "128849018880"  [ label = "DDG: x == 0"] 
  "30064771134" -> "128849018880"  [ label = "DDG: x"] 
  "30064771134" -> "128849018880"  [ label = "DDG: HIGHBIT"] 
  "30064771134" -> "128849018880"  [ label = "DDG: x = HIGHBIT"] 
  "30064771135" -> "128849018880"  [ label = "DDG: r"] 
  "30064771135" -> "128849018880"  [ label = "DDG: r++"] 
  "30064771119" -> "128849018880"  [ label = "DDG: sp"] 
  "30064771119" -> "128849018880"  [ label = "DDG: sp++"] 
  "30064771114" -> "128849018880"  [ label = "DDG: "] 
  "30064771090" -> "128849018880"  [ label = "DDG: false"] 
  "30064771106" -> "128849018880"  [ label = "DDG: ERRCODE_STRING_DATA_LENGTH_MISMATCH"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: 0"] 
  "30064771075" -> "30064771074"  [ label = "DDG: 2"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771096" -> "30064771095"  [ label = "DDG: sp"] 
  "30064771109" -> "30064771108"  [ label = "DDG: atttypmod"] 
  "30064771112" -> "30064771110"  [ label = "DDG: len"] 
  "30064771109" -> "30064771114"  [ label = "DDG: atttypmod"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771116" -> "30064771115"  [ label = "DDG: result"] 
  "111669149697" -> "68719476757"  [ label = "DDG: "] 
  "30064771110" -> "30064771113"  [ label = "DDG: result"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771112" -> "30064771113"  [ label = "DDG: len"] 
  "111669149697" -> "68719476781"  [ label = "DDG: "] 
  "30064771116" -> "30064771182"  [ label = "DDG: result"] 
  "111669149697" -> "30064771182"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: input_string[0]"] 
  "30064771078" -> "30064771077"  [ label = "DDG: 'b'"] 
  "30064771080" -> "30064771077"  [ label = "DDG: input_string[0]"] 
  "30064771080" -> "30064771077"  [ label = "DDG: 'B'"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771072" -> "30064771083"  [ label = "DDG: input_string"] 
  "30064771078" -> "30064771083"  [ label = "DDG: input_string[0]"] 
  "30064771080" -> "30064771083"  [ label = "DDG: input_string[0]"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771094" -> "30064771096"  [ label = "DDG: sp"] 
  "30064771091" -> "30064771096"  [ label = "DDG: sp"] 
  "30064771083" -> "30064771096"  [ label = "DDG: sp"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771095" -> "30064771097"  [ label = "DDG: slen"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771074" -> "30064771100"  [ label = "DDG: atttypmod"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771098" -> "30064771101"  [ label = "DDG: bitlen"] 
  "30064771097" -> "30064771101"  [ label = "DDG: bitlen"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771102" -> "30064771109"  [ label = "DDG: atttypmod"] 
  "30064771107" -> "30064771109"  [ label = "DDG: atttypmod"] 
  "30064771101" -> "30064771109"  [ label = "DDG: atttypmod"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771112" -> "30064771111"  [ label = "DDG: len"] 
  "30064771113" -> "30064771116"  [ label = "DDG: result"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771072" -> "30064771078"  [ label = "DDG: input_string"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771072" -> "30064771080"  [ label = "DDG: input_string"] 
  "30064771078" -> "30064771080"  [ label = "DDG: input_string[0]"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771099" -> "30064771098"  [ label = "DDG: slen"] 
  "30064771099" -> "30064771098"  [ label = "DDG: 4"] 
  "30064771108" -> "30064771112"  [ label = "DDG: len"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771072" -> "30064771084"  [ label = "DDG: input_string"] 
  "30064771078" -> "30064771084"  [ label = "DDG: input_string[0]"] 
  "30064771080" -> "30064771084"  [ label = "DDG: input_string[0]"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771096" -> "30064771119"  [ label = "DDG: sp"] 
  "30064771120" -> "30064771119"  [ label = "DDG: *sp"] 
  "30064771124" -> "30064771119"  [ label = "DDG: *sp"] 
  "30064771130" -> "30064771119"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: input_string[0]"] 
  "30064771086" -> "30064771085"  [ label = "DDG: 'x'"] 
  "30064771088" -> "30064771085"  [ label = "DDG: input_string[0]"] 
  "30064771088" -> "30064771085"  [ label = "DDG: 'X'"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771072" -> "30064771091"  [ label = "DDG: input_string"] 
  "30064771086" -> "30064771091"  [ label = "DDG: input_string[0]"] 
  "30064771088" -> "30064771091"  [ label = "DDG: input_string[0]"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771095" -> "30064771099"  [ label = "DDG: slen"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771098" -> "30064771102"  [ label = "DDG: bitlen"] 
  "30064771097" -> "30064771102"  [ label = "DDG: bitlen"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771100" -> "30064771102"  [ label = "DDG: atttypmod"] 
  "30064771117" -> "30064771132"  [ label = "DDG: x"] 
  "30064771133" -> "30064771132"  [ label = "DDG: x"] 
  "30064771134" -> "30064771132"  [ label = "DDG: x"] 
  "111669149697" -> "30064771132"  [ label = "DDG: "] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771096" -> "30064771138"  [ label = "DDG: sp"] 
  "30064771172" -> "30064771138"  [ label = "DDG: *sp"] 
  "30064771166" -> "30064771138"  [ label = "DDG: *sp"] 
  "30064771156" -> "30064771138"  [ label = "DDG: *sp"] 
  "30064771146" -> "30064771138"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771072" -> "30064771086"  [ label = "DDG: input_string"] 
  "30064771078" -> "30064771086"  [ label = "DDG: input_string[0]"] 
  "30064771080" -> "30064771086"  [ label = "DDG: input_string[0]"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771072" -> "30064771088"  [ label = "DDG: input_string"] 
  "30064771086" -> "30064771088"  [ label = "DDG: input_string[0]"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771072" -> "30064771094"  [ label = "DDG: input_string"] 
  "30064771086" -> "30064771094"  [ label = "DDG: input_string[0]"] 
  "30064771088" -> "30064771094"  [ label = "DDG: input_string[0]"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771104" -> "30064771103"  [ label = "DDG: errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH),
				 errmsg(&quot;bit string length %d does not match type bit(%d)&quot;,
						bitlen, atttypmod)"] 
  "30064771124" -> "30064771120"  [ label = "DDG: *sp"] 
  "30064771130" -> "30064771120"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771132" -> "30064771133"  [ label = "DDG: x"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "111669149697" -> "68719476819"  [ label = "DDG: "] 
  "30064771072" -> "30064771092"  [ label = "DDG: input_string"] 
  "30064771086" -> "30064771092"  [ label = "DDG: input_string[0]"] 
  "30064771088" -> "30064771092"  [ label = "DDG: input_string[0]"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771105" -> "30064771104"  [ label = "DDG: errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH)"] 
  "30064771105" -> "30064771104"  [ label = "DDG: errmsg(&quot;bit string length %d does not match type bit(%d)&quot;,
						bitlen, atttypmod)"] 
  "30064771117" -> "30064771122"  [ label = "DDG: x"] 
  "30064771133" -> "30064771122"  [ label = "DDG: x"] 
  "30064771134" -> "30064771122"  [ label = "DDG: x"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771115" -> "30064771135"  [ label = "DDG: r"] 
  "30064771122" -> "30064771135"  [ label = "DDG: *r"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771140" -> "30064771139"  [ label = "DDG: *sp"] 
  "30064771140" -> "30064771139"  [ label = "DDG: '0'"] 
  "30064771142" -> "30064771139"  [ label = "DDG: *sp"] 
  "30064771142" -> "30064771139"  [ label = "DDG: '9'"] 
  "30064771145" -> "30064771144"  [ label = "DDG: *sp - '0'"] 
  "111669149697" -> "30064771177"  [ label = "DDG: "] 
  "30064771106" -> "30064771105"  [ label = "DDG: ERRCODE_STRING_DATA_LENGTH_MISMATCH"] 
  "30064771107" -> "30064771105"  [ label = "DDG: &quot;bit string length %d does not match type bit(%d)&quot;"] 
  "30064771107" -> "30064771105"  [ label = "DDG: bitlen"] 
  "30064771107" -> "30064771105"  [ label = "DDG: atttypmod"] 
  "30064771172" -> "30064771140"  [ label = "DDG: *sp"] 
  "30064771166" -> "30064771140"  [ label = "DDG: *sp"] 
  "30064771156" -> "30064771140"  [ label = "DDG: *sp"] 
  "30064771146" -> "30064771140"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771140" -> "30064771142"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "30064771076" -> "30064771174"  [ label = "DDG: x"] 
  "30064771163" -> "30064771174"  [ label = "DDG: x"] 
  "30064771153" -> "30064771174"  [ label = "DDG: x"] 
  "30064771144" -> "30064771174"  [ label = "DDG: x"] 
  "30064771180" -> "30064771174"  [ label = "DDG: x"] 
  "111669149697" -> "30064771174"  [ label = "DDG: "] 
  "30064771180" -> "30064771178"  [ label = "DDG: x"] 
  "30064771180" -> "30064771178"  [ label = "DDG: 4"] 
  "111669149697" -> "30064771181"  [ label = "DDG: "] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771102" -> "30064771107"  [ label = "DDG: bitlen"] 
  "30064771102" -> "30064771107"  [ label = "DDG: atttypmod"] 
  "30064771120" -> "30064771124"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "111669149697" -> "68719476804"  [ label = "DDG: "] 
  "30064771146" -> "30064771145"  [ label = "DDG: *sp"] 
  "30064771146" -> "30064771145"  [ label = "DDG: '0'"] 
  "30064771103" -> "30064771126"  [ label = "DDG: ERROR"] 
  "111669149697" -> "30064771126"  [ label = "DDG: "] 
  "30064771127" -> "30064771126"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
						 errmsg(&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,
								*sp)"] 
  "30064771140" -> "30064771146"  [ label = "DDG: *sp"] 
  "30064771142" -> "30064771146"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771149" -> "30064771148"  [ label = "DDG: *sp"] 
  "30064771149" -> "30064771148"  [ label = "DDG: 'A'"] 
  "30064771151" -> "30064771148"  [ label = "DDG: *sp"] 
  "30064771151" -> "30064771148"  [ label = "DDG: 'F'"] 
  "30064771155" -> "30064771153"  [ label = "DDG: *sp - 'A'"] 
  "111669149697" -> "30064771153"  [ label = "DDG: "] 
  "30064771115" -> "30064771176"  [ label = "DDG: r"] 
  "30064771178" -> "30064771176"  [ label = "DDG: *r"] 
  "111669149697" -> "30064771176"  [ label = "DDG: "] 
  "30064771076" -> "30064771180"  [ label = "DDG: x"] 
  "30064771163" -> "30064771180"  [ label = "DDG: x"] 
  "30064771153" -> "30064771180"  [ label = "DDG: x"] 
  "30064771144" -> "30064771180"  [ label = "DDG: x"] 
  "111669149697" -> "30064771180"  [ label = "DDG: "] 
  "30064771128" -> "30064771127"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION)"] 
  "30064771128" -> "30064771127"  [ label = "DDG: errmsg(&quot;\&quot;%c\&quot; is not a valid binary digit&quot;,
								*sp)"] 
  "30064771140" -> "30064771149"  [ label = "DDG: *sp"] 
  "30064771142" -> "30064771149"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771149"  [ label = "DDG: "] 
  "30064771149" -> "30064771151"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: ERRCODE_INVALID_TEXT_REPRESENTATION"] 
  "30064771130" -> "30064771128"  [ label = "DDG: &quot;\&quot;%c\&quot; is not a valid binary digit&quot;"] 
  "30064771130" -> "30064771128"  [ label = "DDG: *sp"] 
  "30064771155" -> "30064771154"  [ label = "DDG: *sp - 'A'"] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "30064771124" -> "30064771130"  [ label = "DDG: *sp"] 
  "111669149697" -> "68719476809"  [ label = "DDG: "] 
  "30064771156" -> "30064771155"  [ label = "DDG: *sp"] 
  "30064771156" -> "30064771155"  [ label = "DDG: 'A'"] 
  "30064771159" -> "30064771158"  [ label = "DDG: *sp"] 
  "30064771159" -> "30064771158"  [ label = "DDG: 'a'"] 
  "30064771161" -> "30064771158"  [ label = "DDG: *sp"] 
  "30064771161" -> "30064771158"  [ label = "DDG: 'f'"] 
  "30064771165" -> "30064771163"  [ label = "DDG: *sp - 'a'"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "30064771149" -> "30064771156"  [ label = "DDG: *sp"] 
  "30064771151" -> "30064771156"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771156"  [ label = "DDG: "] 
  "30064771149" -> "30064771159"  [ label = "DDG: *sp"] 
  "30064771151" -> "30064771159"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771159"  [ label = "DDG: "] 
  "30064771159" -> "30064771161"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771161"  [ label = "DDG: "] 
  "30064771165" -> "30064771164"  [ label = "DDG: *sp - 'a'"] 
  "111669149697" -> "30064771164"  [ label = "DDG: "] 
  "30064771103" -> "30064771168"  [ label = "DDG: ERROR"] 
  "111669149697" -> "30064771168"  [ label = "DDG: "] 
  "30064771169" -> "30064771168"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
						 errmsg(&quot;\&quot;%c\&quot; is not a valid hexadecimal digit&quot;,
								*sp)"] 
  "111669149697" -> "68719476814"  [ label = "DDG: "] 
  "30064771166" -> "30064771165"  [ label = "DDG: *sp"] 
  "30064771166" -> "30064771165"  [ label = "DDG: 'a'"] 
  "30064771170" -> "30064771169"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION)"] 
  "30064771170" -> "30064771169"  [ label = "DDG: errmsg(&quot;\&quot;%c\&quot; is not a valid hexadecimal digit&quot;,
								*sp)"] 
  "30064771159" -> "30064771166"  [ label = "DDG: *sp"] 
  "30064771161" -> "30064771166"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771166"  [ label = "DDG: "] 
  "30064771171" -> "30064771170"  [ label = "DDG: ERRCODE_INVALID_TEXT_REPRESENTATION"] 
  "30064771172" -> "30064771170"  [ label = "DDG: &quot;\&quot;%c\&quot; is not a valid hexadecimal digit&quot;"] 
  "30064771172" -> "30064771170"  [ label = "DDG: *sp"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "111669149697" -> "30064771172"  [ label = "DDG: "] 
  "30064771159" -> "30064771172"  [ label = "DDG: *sp"] 
  "30064771161" -> "30064771172"  [ label = "DDG: *sp"] 
  "30064771077" -> "30064771082"  [ label = "CDG: "] 
  "30064771077" -> "30064771083"  [ label = "CDG: "] 
  "30064771077" -> "30064771084"  [ label = "CDG: "] 
  "30064771077" -> "30064771085"  [ label = "CDG: "] 
  "30064771077" -> "30064771086"  [ label = "CDG: "] 
  "30064771077" -> "30064771087"  [ label = "CDG: "] 
  "68719476757" -> "30064771098"  [ label = "CDG: "] 
  "68719476757" -> "30064771099"  [ label = "CDG: "] 
  "68719476757" -> "30064771097"  [ label = "CDG: "] 
  "30064771100" -> "30064771101"  [ label = "CDG: "] 
  "30064771100" -> "30064771102"  [ label = "CDG: "] 
  "68719476781" -> "30064771117"  [ label = "CDG: "] 
  "68719476781" -> "30064771118"  [ label = "CDG: "] 
  "68719476781" -> "30064771136"  [ label = "CDG: "] 
  "68719476781" -> "30064771137"  [ label = "CDG: "] 
  "30064771078" -> "30064771080"  [ label = "CDG: "] 
  "30064771078" -> "30064771081"  [ label = "CDG: "] 
  "30064771118" -> "30064771118"  [ label = "CDG: "] 
  "30064771118" -> "30064771119"  [ label = "CDG: "] 
  "30064771118" -> "30064771120"  [ label = "CDG: "] 
  "30064771118" -> "30064771121"  [ label = "CDG: "] 
  "30064771118" -> "30064771132"  [ label = "CDG: "] 
  "30064771118" -> "30064771133"  [ label = "CDG: "] 
  "30064771085" -> "30064771090"  [ label = "CDG: "] 
  "30064771085" -> "30064771091"  [ label = "CDG: "] 
  "30064771085" -> "30064771092"  [ label = "CDG: "] 
  "30064771085" -> "30064771093"  [ label = "CDG: "] 
  "30064771085" -> "30064771094"  [ label = "CDG: "] 
  "30064771102" -> "30064771106"  [ label = "CDG: "] 
  "30064771102" -> "30064771107"  [ label = "CDG: "] 
  "30064771102" -> "30064771103"  [ label = "CDG: "] 
  "30064771102" -> "30064771104"  [ label = "CDG: "] 
  "30064771102" -> "30064771105"  [ label = "CDG: "] 
  "30064771137" -> "30064771138"  [ label = "CDG: "] 
  "30064771137" -> "30064771139"  [ label = "CDG: "] 
  "30064771137" -> "30064771140"  [ label = "CDG: "] 
  "30064771137" -> "30064771141"  [ label = "CDG: "] 
  "30064771137" -> "30064771137"  [ label = "CDG: "] 
  "30064771137" -> "68719476819"  [ label = "CDG: "] 
  "30064771086" -> "30064771088"  [ label = "CDG: "] 
  "30064771086" -> "30064771089"  [ label = "CDG: "] 
  "30064771120" -> "30064771122"  [ label = "CDG: "] 
  "30064771120" -> "30064771123"  [ label = "CDG: "] 
  "30064771120" -> "30064771124"  [ label = "CDG: "] 
  "30064771120" -> "30064771125"  [ label = "CDG: "] 
  "30064771133" -> "30064771134"  [ label = "CDG: "] 
  "30064771133" -> "30064771135"  [ label = "CDG: "] 
  "30064771139" -> "30064771146"  [ label = "CDG: "] 
  "30064771139" -> "30064771147"  [ label = "CDG: "] 
  "30064771139" -> "30064771148"  [ label = "CDG: "] 
  "30064771139" -> "30064771149"  [ label = "CDG: "] 
  "30064771139" -> "30064771144"  [ label = "CDG: "] 
  "30064771139" -> "30064771145"  [ label = "CDG: "] 
  "30064771139" -> "30064771150"  [ label = "CDG: "] 
  "68719476819" -> "30064771178"  [ label = "CDG: "] 
  "68719476819" -> "30064771179"  [ label = "CDG: "] 
  "68719476819" -> "30064771180"  [ label = "CDG: "] 
  "68719476819" -> "30064771181"  [ label = "CDG: "] 
  "68719476819" -> "30064771174"  [ label = "CDG: "] 
  "68719476819" -> "30064771175"  [ label = "CDG: "] 
  "68719476819" -> "30064771176"  [ label = "CDG: "] 
  "68719476819" -> "30064771177"  [ label = "CDG: "] 
  "30064771140" -> "30064771142"  [ label = "CDG: "] 
  "30064771140" -> "30064771143"  [ label = "CDG: "] 
  "30064771124" -> "30064771130"  [ label = "CDG: "] 
  "30064771124" -> "30064771131"  [ label = "CDG: "] 
  "30064771124" -> "30064771126"  [ label = "CDG: "] 
  "30064771124" -> "30064771127"  [ label = "CDG: "] 
  "30064771124" -> "30064771128"  [ label = "CDG: "] 
  "30064771124" -> "30064771129"  [ label = "CDG: "] 
  "30064771148" -> "30064771154"  [ label = "CDG: "] 
  "30064771148" -> "30064771155"  [ label = "CDG: "] 
  "30064771148" -> "30064771156"  [ label = "CDG: "] 
  "30064771148" -> "30064771157"  [ label = "CDG: "] 
  "30064771148" -> "30064771153"  [ label = "CDG: "] 
  "30064771148" -> "30064771158"  [ label = "CDG: "] 
  "30064771148" -> "30064771159"  [ label = "CDG: "] 
  "30064771148" -> "30064771160"  [ label = "CDG: "] 
  "30064771149" -> "30064771151"  [ label = "CDG: "] 
  "30064771149" -> "30064771152"  [ label = "CDG: "] 
  "30064771158" -> "30064771163"  [ label = "CDG: "] 
  "30064771158" -> "30064771164"  [ label = "CDG: "] 
  "30064771158" -> "30064771165"  [ label = "CDG: "] 
  "30064771158" -> "30064771170"  [ label = "CDG: "] 
  "30064771158" -> "30064771171"  [ label = "CDG: "] 
  "30064771158" -> "30064771172"  [ label = "CDG: "] 
  "30064771158" -> "30064771173"  [ label = "CDG: "] 
  "30064771158" -> "30064771166"  [ label = "CDG: "] 
  "30064771158" -> "30064771167"  [ label = "CDG: "] 
  "30064771158" -> "30064771168"  [ label = "CDG: "] 
  "30064771158" -> "30064771169"  [ label = "CDG: "] 
  "30064771159" -> "30064771162"  [ label = "CDG: "] 
  "30064771159" -> "30064771161"  [ label = "CDG: "] 
}
"""
)
