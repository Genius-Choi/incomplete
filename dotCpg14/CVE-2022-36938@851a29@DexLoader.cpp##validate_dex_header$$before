[33mval[0m [36mres1789[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "validate_dex_header" {  
"111669149697" [label = <(METHOD,validate_dex_header)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const dex_header* dh)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,size_t dexsize)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,int support_dex_version)<SUB>3</SUB>> ]
"25769803777" [label = <(BLOCK,{
  bool supported = false;
  switch (support_d...,{
  bool supported = false;
  switch (support_d...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,bool supported: bool)<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,supported = false)<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,supported,supported = false)<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,false,supported = false)<SUB>4</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,SWITCH,switch(support_dex_version))<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,support_dex_version,switch(support_dex_version))<SUB>5</SUB>> ]
"25769803778" [label = <(BLOCK,{
  case 38:
    supported = supported ||
     ...,{
  case 38:
    supported = supported ||
     ...)<SUB>5</SUB>> ]
"81604378624" [label = <(JUMP_TARGET,case)<SUB>6</SUB>> ]
"90194313217" [label = <(LITERAL,38,{
  case 38:
    supported = supported ||
     ...)<SUB>6</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,supported = supported ||
                !memcm...)<SUB>7</SUB>> ]
"68719476738" [label = <(IDENTIFIER,supported,supported = supported ||
                !memcm...)<SUB>7</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.logicalOr,supported ||
                !memcmp(dh-&gt;magic,...)<SUB>7</SUB>> ]
"68719476739" [label = <(IDENTIFIER,supported,supported ||
                !memcmp(dh-&gt;magic,...)<SUB>7</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.logicalNot,!memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, siz...)<SUB>8</SUB>> ]
"30064771076" [label = <(memcmp,memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, size...)<SUB>8</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;magic)<SUB>8</SUB>> ]
"68719476740" [label = <(IDENTIFIER,dh,memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, size...)<SUB>8</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,magic,magic)<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,DEX_HEADER_DEXMAGIC_V38,memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, size...)<SUB>8</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.sizeOf,sizeof(dh-&gt;magic))<SUB>8</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;magic)<SUB>8</SUB>> ]
"68719476742" [label = <(IDENTIFIER,dh,sizeof(dh-&gt;magic))<SUB>8</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,magic,magic)<SUB>8</SUB>> ]
"68719476743" [label = <(IDENTIFIER,FALLTHROUGH_INTENDED,{
  case 38:
    supported = supported ||
     ...)<SUB>9</SUB>> ]
"81604378625" [label = <(JUMP_TARGET,case)<SUB>10</SUB>> ]
"90194313218" [label = <(LITERAL,37,{
  case 38:
    supported = supported ||
     ...)<SUB>10</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,supported = supported ||
                !memcm...)<SUB>11</SUB>> ]
"68719476744" [label = <(IDENTIFIER,supported,supported = supported ||
                !memcm...)<SUB>11</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.logicalOr,supported ||
                !memcmp(dh-&gt;magic,...)<SUB>11</SUB>> ]
"68719476745" [label = <(IDENTIFIER,supported,supported ||
                !memcmp(dh-&gt;magic,...)<SUB>11</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.logicalNot,!memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, siz...)<SUB>12</SUB>> ]
"30064771083" [label = <(memcmp,memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, size...)<SUB>12</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;magic)<SUB>12</SUB>> ]
"68719476746" [label = <(IDENTIFIER,dh,memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, size...)<SUB>12</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,magic,magic)<SUB>12</SUB>> ]
"68719476747" [label = <(IDENTIFIER,DEX_HEADER_DEXMAGIC_V37,memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, size...)<SUB>12</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.sizeOf,sizeof(dh-&gt;magic))<SUB>12</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;magic)<SUB>12</SUB>> ]
"68719476748" [label = <(IDENTIFIER,dh,sizeof(dh-&gt;magic))<SUB>12</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,magic,magic)<SUB>12</SUB>> ]
"68719476749" [label = <(IDENTIFIER,FALLTHROUGH_INTENDED,{
  case 38:
    supported = supported ||
     ...)<SUB>13</SUB>> ]
"81604378626" [label = <(JUMP_TARGET,case)<SUB>14</SUB>> ]
"90194313219" [label = <(LITERAL,35,{
  case 38:
    supported = supported ||
     ...)<SUB>14</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,supported = supported ||
                !memcm...)<SUB>15</SUB>> ]
"68719476750" [label = <(IDENTIFIER,supported,supported = supported ||
                !memcm...)<SUB>15</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.logicalOr,supported ||
                !memcmp(dh-&gt;magic,...)<SUB>15</SUB>> ]
"68719476751" [label = <(IDENTIFIER,supported,supported ||
                !memcmp(dh-&gt;magic,...)<SUB>15</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.logicalNot,!memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, siz...)<SUB>16</SUB>> ]
"30064771090" [label = <(memcmp,memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, size...)<SUB>16</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;magic)<SUB>16</SUB>> ]
"68719476752" [label = <(IDENTIFIER,dh,memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, size...)<SUB>16</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,magic,magic)<SUB>16</SUB>> ]
"68719476753" [label = <(IDENTIFIER,DEX_HEADER_DEXMAGIC_V35,memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, size...)<SUB>16</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.sizeOf,sizeof(dh-&gt;magic))<SUB>16</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;magic)<SUB>16</SUB>> ]
"68719476754" [label = <(IDENTIFIER,dh,sizeof(dh-&gt;magic))<SUB>16</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,magic,magic)<SUB>16</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,BREAK,break;)<SUB>17</SUB>> ]
"81604378627" [label = <(JUMP_TARGET,default)<SUB>18</SUB>> ]
"30064771094" [label = <(not_reached_log,not_reached_log(&quot;Unrecognized support_dex_versi...)<SUB>19</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;Unrecognized support_dex_version %d\n&quot;,not_reached_log(&quot;Unrecognized support_dex_versi...)<SUB>19</SUB>> ]
"68719476755" [label = <(IDENTIFIER,support_dex_version,not_reached_log(&quot;Unrecognized support_dex_versi...)<SUB>20</SUB>> ]
"30064771095" [label = <(always_assert_log,always_assert_log(supported, &quot;Bad dex magic %s ...)<SUB>22</SUB>> ]
"68719476756" [label = <(IDENTIFIER,supported,always_assert_log(supported, &quot;Bad dex magic %s ...)<SUB>22</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;Bad dex magic %s for support_dex_version %d\n&quot;,always_assert_log(supported, &quot;Bad dex magic %s ...)<SUB>22</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;magic)<SUB>23</SUB>> ]
"68719476757" [label = <(IDENTIFIER,dh,always_assert_log(supported, &quot;Bad dex magic %s ...)<SUB>23</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,magic,magic)<SUB>23</SUB>> ]
"68719476758" [label = <(IDENTIFIER,support_dex_version,always_assert_log(supported, &quot;Bad dex magic %s ...)<SUB>23</SUB>> ]
"30064771097" [label = <(always_assert_log,always_assert_log(
      dh-&gt;file_size == dexsi...)<SUB>24</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.equals,dh-&gt;file_size == dexsize)<SUB>25</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;file_size)<SUB>25</SUB>> ]
"68719476759" [label = <(IDENTIFIER,dh,dh-&gt;file_size == dexsize)<SUB>25</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,file_size,file_size)<SUB>25</SUB>> ]
"68719476760" [label = <(IDENTIFIER,dexsize,dh-&gt;file_size == dexsize)<SUB>25</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;Reported size in header (%zu) does not match f...,always_assert_log(
      dh-&gt;file_size == dexsi...)<SUB>26</SUB>> ]
"68719476761" [label = <(IDENTIFIER,dexsize,always_assert_log(
      dh-&gt;file_size == dexsi...)<SUB>27</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;file_size)<SUB>28</SUB>> ]
"68719476762" [label = <(IDENTIFIER,dh,always_assert_log(
      dh-&gt;file_size == dexsi...)<SUB>28</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,file_size,file_size)<SUB>28</SUB>> ]
"94489280513" [label = <(LOCAL,auto off: auto)<SUB>29</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.assignment,off = (uint64_t)dh-&gt;class_defs_off)<SUB>29</SUB>> ]
"68719476763" [label = <(IDENTIFIER,off,off = (uint64_t)dh-&gt;class_defs_off)<SUB>29</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.cast,(uint64_t)dh-&gt;class_defs_off)<SUB>29</SUB>> ]
"184683593728" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>29</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;class_defs_off)<SUB>29</SUB>> ]
"68719476764" [label = <(IDENTIFIER,dh,(uint64_t)dh-&gt;class_defs_off)<SUB>29</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,class_defs_off,class_defs_off)<SUB>29</SUB>> ]
"94489280514" [label = <(LOCAL,auto limit: auto)<SUB>30</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.assignment,limit = off + dh-&gt;class_defs_size * sizeof(dex_...)<SUB>30</SUB>> ]
"68719476765" [label = <(IDENTIFIER,limit,limit = off + dh-&gt;class_defs_size * sizeof(dex_...)<SUB>30</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.addition,off + dh-&gt;class_defs_size * sizeof(dex_class_def))<SUB>30</SUB>> ]
"68719476766" [label = <(IDENTIFIER,off,off + dh-&gt;class_defs_size * sizeof(dex_class_def))<SUB>30</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.multiplication,dh-&gt;class_defs_size * sizeof(dex_class_def))<SUB>30</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.indirectFieldAccess,dh-&gt;class_defs_size)<SUB>30</SUB>> ]
"68719476767" [label = <(IDENTIFIER,dh,dh-&gt;class_defs_size * sizeof(dex_class_def))<SUB>30</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,class_defs_size,class_defs_size)<SUB>30</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.sizeOf,sizeof(dex_class_def))<SUB>30</SUB>> ]
"68719476768" [label = <(IDENTIFIER,dex_class_def,sizeof(dex_class_def))<SUB>30</SUB>> ]
"30064771109" [label = <(always_assert_log,always_assert_log(off &lt; dexsize, &quot;class_defs_of...)<SUB>31</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.lessThan,off &lt; dexsize)<SUB>31</SUB>> ]
"68719476769" [label = <(IDENTIFIER,off,off &lt; dexsize)<SUB>31</SUB>> ]
"68719476770" [label = <(IDENTIFIER,dexsize,off &lt; dexsize)<SUB>31</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;class_defs_off out of range&quot;,always_assert_log(off &lt; dexsize, &quot;class_defs_of...)<SUB>31</SUB>> ]
"30064771111" [label = <(always_assert_log,always_assert_log(limit &lt;= dexsize, &quot;invalid cl...)<SUB>32</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.lessEqualsThan,limit &lt;= dexsize)<SUB>32</SUB>> ]
"68719476771" [label = <(IDENTIFIER,limit,limit &lt;= dexsize)<SUB>32</SUB>> ]
"68719476772" [label = <(IDENTIFIER,dexsize,limit &lt;= dexsize)<SUB>32</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;invalid class_defs_size&quot;,always_assert_log(limit &lt;= dexsize, &quot;invalid cl...)<SUB>32</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "30064771097"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771101"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771104"  [ label = "AST: "] 
  "25769803777" -> "30064771109"  [ label = "AST: "] 
  "25769803777" -> "30064771111"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "68719476737"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "81604378624"  [ label = "AST: "] 
  "25769803778" -> "90194313217"  [ label = "AST: "] 
  "25769803778" -> "30064771073"  [ label = "AST: "] 
  "25769803778" -> "68719476743"  [ label = "AST: "] 
  "25769803778" -> "81604378625"  [ label = "AST: "] 
  "25769803778" -> "90194313218"  [ label = "AST: "] 
  "25769803778" -> "30064771080"  [ label = "AST: "] 
  "25769803778" -> "68719476749"  [ label = "AST: "] 
  "25769803778" -> "81604378626"  [ label = "AST: "] 
  "25769803778" -> "90194313219"  [ label = "AST: "] 
  "25769803778" -> "30064771087"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "81604378627"  [ label = "AST: "] 
  "25769803778" -> "30064771094"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771076" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "55834574848"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "55834574849"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "30064771084" -> "55834574850"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476748"  [ label = "AST: "] 
  "30064771086" -> "55834574851"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "68719476753"  [ label = "AST: "] 
  "30064771090" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "68719476752"  [ label = "AST: "] 
  "30064771091" -> "55834574852"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "30064771093" -> "55834574853"  [ label = "AST: "] 
  "30064771094" -> "90194313220"  [ label = "AST: "] 
  "30064771094" -> "68719476755"  [ label = "AST: "] 
  "30064771095" -> "68719476756"  [ label = "AST: "] 
  "30064771095" -> "90194313221"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "68719476758"  [ label = "AST: "] 
  "30064771096" -> "68719476757"  [ label = "AST: "] 
  "30064771096" -> "55834574854"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "90194313222"  [ label = "AST: "] 
  "30064771097" -> "68719476761"  [ label = "AST: "] 
  "30064771097" -> "30064771100"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "68719476760"  [ label = "AST: "] 
  "30064771099" -> "68719476759"  [ label = "AST: "] 
  "30064771099" -> "55834574855"  [ label = "AST: "] 
  "30064771100" -> "68719476762"  [ label = "AST: "] 
  "30064771100" -> "55834574856"  [ label = "AST: "] 
  "30064771101" -> "68719476763"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "184683593728"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476764"  [ label = "AST: "] 
  "30064771103" -> "55834574857"  [ label = "AST: "] 
  "30064771104" -> "68719476765"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476766"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "68719476767"  [ label = "AST: "] 
  "30064771107" -> "55834574858"  [ label = "AST: "] 
  "30064771108" -> "68719476768"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771109" -> "90194313223"  [ label = "AST: "] 
  "30064771110" -> "68719476769"  [ label = "AST: "] 
  "30064771110" -> "68719476770"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "90194313224"  [ label = "AST: "] 
  "30064771112" -> "68719476771"  [ label = "AST: "] 
  "30064771112" -> "68719476772"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "CFG: "] 
  "30064771095" -> "55834574855"  [ label = "CFG: "] 
  "30064771097" -> "184683593728"  [ label = "CFG: "] 
  "30064771101" -> "55834574858"  [ label = "CFG: "] 
  "30064771104" -> "30064771110"  [ label = "CFG: "] 
  "30064771109" -> "30064771112"  [ label = "CFG: "] 
  "30064771111" -> "128849018880"  [ label = "CFG: "] 
  "68719476737" -> "30064771074"  [ label = "CFG: "] 
  "68719476737" -> "55834574848"  [ label = "CFG: "] 
  "68719476737" -> "30064771081"  [ label = "CFG: "] 
  "68719476737" -> "55834574850"  [ label = "CFG: "] 
  "68719476737" -> "30064771088"  [ label = "CFG: "] 
  "68719476737" -> "55834574852"  [ label = "CFG: "] 
  "68719476737" -> "30064771094"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771098" -> "55834574856"  [ label = "CFG: "] 
  "30064771100" -> "30064771097"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771073" -> "30064771081"  [ label = "CFG: "] 
  "30064771073" -> "55834574850"  [ label = "CFG: "] 
  "30064771080" -> "30064771088"  [ label = "CFG: "] 
  "30064771080" -> "55834574852"  [ label = "CFG: "] 
  "30064771087" -> "55834574854"  [ label = "CFG: "] 
  "30064771094" -> "55834574854"  [ label = "CFG: "] 
  "55834574854" -> "30064771096"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "55834574856" -> "30064771100"  [ label = "CFG: "] 
  "184683593728" -> "55834574857"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "55834574855" -> "30064771099"  [ label = "CFG: "] 
  "55834574857" -> "30064771103"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "30064771108" -> "30064771106"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "55834574858" -> "30064771107"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771077" -> "55834574849"  [ label = "CFG: "] 
  "30064771078" -> "30064771076"  [ label = "CFG: "] 
  "30064771084" -> "55834574851"  [ label = "CFG: "] 
  "30064771085" -> "30064771083"  [ label = "CFG: "] 
  "30064771091" -> "55834574853"  [ label = "CFG: "] 
  "30064771092" -> "30064771090"  [ label = "CFG: "] 
  "55834574848" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "55834574850" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "55834574852" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "55834574849" -> "30064771079"  [ label = "CFG: "] 
  "55834574851" -> "30064771086"  [ label = "CFG: "] 
  "55834574853" -> "30064771093"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "115964116992" -> "128849018880"  [ label = "DDG: dh"] 
  "30064771072" -> "128849018880"  [ label = "DDG: supported = false"] 
  "30064771094" -> "128849018880"  [ label = "DDG: not_reached_log(&quot;Unrecognized support_dex_version %d\n&quot;,
                    support_dex_version)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, sizeof(dh-&gt;magic))"] 
  "30064771074" -> "128849018880"  [ label = "DDG: !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, sizeof(dh-&gt;magic))"] 
  "30064771073" -> "128849018880"  [ label = "DDG: supported ||
                !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, sizeof(dh-&gt;magic))"] 
  "30064771073" -> "128849018880"  [ label = "DDG: supported = supported ||
                !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, sizeof(dh-&gt;magic))"] 
  "30064771082" -> "128849018880"  [ label = "DDG: memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, sizeof(dh-&gt;magic))"] 
  "30064771081" -> "128849018880"  [ label = "DDG: !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, sizeof(dh-&gt;magic))"] 
  "30064771080" -> "128849018880"  [ label = "DDG: supported ||
                !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, sizeof(dh-&gt;magic))"] 
  "30064771080" -> "128849018880"  [ label = "DDG: supported = supported ||
                !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, sizeof(dh-&gt;magic))"] 
  "30064771089" -> "128849018880"  [ label = "DDG: memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, sizeof(dh-&gt;magic))"] 
  "30064771088" -> "128849018880"  [ label = "DDG: !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, sizeof(dh-&gt;magic))"] 
  "30064771087" -> "128849018880"  [ label = "DDG: supported ||
                !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, sizeof(dh-&gt;magic))"] 
  "30064771087" -> "128849018880"  [ label = "DDG: supported = supported ||
                !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, sizeof(dh-&gt;magic))"] 
  "30064771095" -> "128849018880"  [ label = "DDG: supported"] 
  "30064771095" -> "128849018880"  [ label = "DDG: dh-&gt;magic"] 
  "30064771095" -> "128849018880"  [ label = "DDG: support_dex_version"] 
  "30064771095" -> "128849018880"  [ label = "DDG: always_assert_log(supported, &quot;Bad dex magic %s for support_dex_version %d\n&quot;,
                    dh-&gt;magic, support_dex_version)"] 
  "30064771097" -> "128849018880"  [ label = "DDG: dh-&gt;file_size == dexsize"] 
  "30064771097" -> "128849018880"  [ label = "DDG: dh-&gt;file_size"] 
  "30064771097" -> "128849018880"  [ label = "DDG: always_assert_log(
      dh-&gt;file_size == dexsize,
      &quot;Reported size in header (%zu) does not match file size (%u)\n&quot;,
      dexsize,
      dh-&gt;file_size)"] 
  "30064771102" -> "128849018880"  [ label = "DDG: dh-&gt;class_defs_off"] 
  "30064771101" -> "128849018880"  [ label = "DDG: (uint64_t)dh-&gt;class_defs_off"] 
  "30064771101" -> "128849018880"  [ label = "DDG: off = (uint64_t)dh-&gt;class_defs_off"] 
  "30064771106" -> "128849018880"  [ label = "DDG: dh-&gt;class_defs_size"] 
  "30064771105" -> "128849018880"  [ label = "DDG: dh-&gt;class_defs_size * sizeof(dex_class_def)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: off + dh-&gt;class_defs_size * sizeof(dex_class_def)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: limit = off + dh-&gt;class_defs_size * sizeof(dex_class_def)"] 
  "30064771110" -> "128849018880"  [ label = "DDG: off"] 
  "30064771109" -> "128849018880"  [ label = "DDG: off &lt; dexsize"] 
  "30064771109" -> "128849018880"  [ label = "DDG: always_assert_log(off &lt; dexsize, &quot;class_defs_off out of range&quot;)"] 
  "30064771112" -> "128849018880"  [ label = "DDG: limit"] 
  "30064771112" -> "128849018880"  [ label = "DDG: dexsize"] 
  "30064771111" -> "128849018880"  [ label = "DDG: limit &lt;= dexsize"] 
  "30064771111" -> "128849018880"  [ label = "DDG: always_assert_log(limit &lt;= dexsize, &quot;invalid class_defs_size&quot;)"] 
  "30064771090" -> "128849018880"  [ label = "DDG: DEX_HEADER_DEXMAGIC_V35"] 
  "30064771108" -> "128849018880"  [ label = "DDG: dex_class_def"] 
  "30064771076" -> "128849018880"  [ label = "DDG: DEX_HEADER_DEXMAGIC_V38"] 
  "30064771083" -> "128849018880"  [ label = "DDG: DEX_HEADER_DEXMAGIC_V37"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "115964116992" -> "30064771101"  [ label = "DDG: dh"] 
  "30064771101" -> "30064771104"  [ label = "DDG: off"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771106" -> "30064771104"  [ label = "DDG: dh-&gt;class_defs_size"] 
  "111669149697" -> "68719476737"  [ label = "DDG: "] 
  "30064771072" -> "30064771095"  [ label = "DDG: supported"] 
  "30064771087" -> "30064771095"  [ label = "DDG: supported"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "115964116992" -> "30064771095"  [ label = "DDG: dh"] 
  "30064771076" -> "30064771095"  [ label = "DDG: dh-&gt;magic"] 
  "30064771083" -> "30064771095"  [ label = "DDG: dh-&gt;magic"] 
  "30064771090" -> "30064771095"  [ label = "DDG: dh-&gt;magic"] 
  "115964116994" -> "30064771095"  [ label = "DDG: support_dex_version"] 
  "30064771094" -> "30064771095"  [ label = "DDG: support_dex_version"] 
  "30064771098" -> "30064771097"  [ label = "DDG: dh-&gt;file_size"] 
  "30064771098" -> "30064771097"  [ label = "DDG: dexsize"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "115964116992" -> "30064771097"  [ label = "DDG: dh"] 
  "30064771110" -> "30064771109"  [ label = "DDG: off"] 
  "30064771110" -> "30064771109"  [ label = "DDG: dexsize"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771112" -> "30064771111"  [ label = "DDG: limit"] 
  "30064771112" -> "30064771111"  [ label = "DDG: dexsize"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "111669149697" -> "90194313217"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: supported"] 
  "30064771074" -> "30064771073"  [ label = "DDG: !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, sizeof(dh-&gt;magic))"] 
  "111669149697" -> "68719476743"  [ label = "DDG: "] 
  "111669149697" -> "90194313218"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: supported"] 
  "30064771081" -> "30064771080"  [ label = "DDG: !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, sizeof(dh-&gt;magic))"] 
  "111669149697" -> "68719476749"  [ label = "DDG: "] 
  "111669149697" -> "90194313219"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: supported"] 
  "30064771088" -> "30064771087"  [ label = "DDG: !memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, sizeof(dh-&gt;magic))"] 
  "115964116992" -> "30064771098"  [ label = "DDG: dh"] 
  "115964116993" -> "30064771098"  [ label = "DDG: dexsize"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "115964116992" -> "30064771102"  [ label = "DDG: dh"] 
  "30064771101" -> "30064771105"  [ label = "DDG: off"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771106" -> "30064771105"  [ label = "DDG: dh-&gt;class_defs_size"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771101" -> "30064771110"  [ label = "DDG: off"] 
  "30064771097" -> "30064771110"  [ label = "DDG: dexsize"] 
  "30064771104" -> "30064771112"  [ label = "DDG: limit"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771110" -> "30064771112"  [ label = "DDG: dexsize"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "115964116994" -> "30064771094"  [ label = "DDG: support_dex_version"] 
  "115964116992" -> "30064771106"  [ label = "DDG: dh"] 
  "30064771072" -> "30064771074"  [ label = "DDG: supported"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V38, sizeof(dh-&gt;magic))"] 
  "30064771072" -> "30064771081"  [ label = "DDG: supported"] 
  "30064771073" -> "30064771081"  [ label = "DDG: supported"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V37, sizeof(dh-&gt;magic))"] 
  "30064771072" -> "30064771088"  [ label = "DDG: supported"] 
  "30064771080" -> "30064771088"  [ label = "DDG: supported"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771089" -> "30064771088"  [ label = "DDG: memcmp(dh-&gt;magic, DEX_HEADER_DEXMAGIC_V35, sizeof(dh-&gt;magic))"] 
  "30064771076" -> "30064771075"  [ label = "DDG: dh-&gt;magic"] 
  "30064771076" -> "30064771075"  [ label = "DDG: DEX_HEADER_DEXMAGIC_V38"] 
  "30064771083" -> "30064771082"  [ label = "DDG: dh-&gt;magic"] 
  "30064771083" -> "30064771082"  [ label = "DDG: DEX_HEADER_DEXMAGIC_V37"] 
  "30064771090" -> "30064771089"  [ label = "DDG: dh-&gt;magic"] 
  "30064771090" -> "30064771089"  [ label = "DDG: DEX_HEADER_DEXMAGIC_V35"] 
  "115964116992" -> "30064771076"  [ label = "DDG: dh"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "115964116992" -> "30064771083"  [ label = "DDG: dh"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "115964116992" -> "30064771090"  [ label = "DDG: dh"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "68719476737" -> "30064771094"  [ label = "CDG: "] 
  "68719476737" -> "30064771087"  [ label = "CDG: "] 
  "68719476737" -> "30064771088"  [ label = "CDG: "] 
  "68719476737" -> "30064771081"  [ label = "CDG: "] 
  "68719476737" -> "30064771080"  [ label = "CDG: "] 
  "68719476737" -> "30064771073"  [ label = "CDG: "] 
  "68719476737" -> "30064771074"  [ label = "CDG: "] 
  "68719476737" -> "30064771093"  [ label = "CDG: "] 
  "68719476737" -> "30064771091"  [ label = "CDG: "] 
  "68719476737" -> "30064771092"  [ label = "CDG: "] 
  "68719476737" -> "30064771089"  [ label = "CDG: "] 
  "68719476737" -> "30064771090"  [ label = "CDG: "] 
  "68719476737" -> "55834574853"  [ label = "CDG: "] 
  "68719476737" -> "55834574852"  [ label = "CDG: "] 
  "68719476737" -> "30064771085"  [ label = "CDG: "] 
  "68719476737" -> "30064771086"  [ label = "CDG: "] 
  "68719476737" -> "30064771083"  [ label = "CDG: "] 
  "68719476737" -> "30064771084"  [ label = "CDG: "] 
  "68719476737" -> "30064771082"  [ label = "CDG: "] 
  "68719476737" -> "55834574851"  [ label = "CDG: "] 
  "68719476737" -> "55834574850"  [ label = "CDG: "] 
  "68719476737" -> "30064771079"  [ label = "CDG: "] 
  "68719476737" -> "30064771077"  [ label = "CDG: "] 
  "68719476737" -> "30064771078"  [ label = "CDG: "] 
  "68719476737" -> "30064771075"  [ label = "CDG: "] 
  "68719476737" -> "30064771076"  [ label = "CDG: "] 
  "68719476737" -> "55834574849"  [ label = "CDG: "] 
  "68719476737" -> "55834574848"  [ label = "CDG: "] 
}
"""
)
