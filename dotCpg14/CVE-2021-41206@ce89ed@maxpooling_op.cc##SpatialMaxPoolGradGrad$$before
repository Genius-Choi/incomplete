[33mval[0m [36mres1216[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "SpatialMaxPoolGradGrad" {  
"111669149698" [label = <(METHOD,SpatialMaxPoolGradGrad)<SUB>1</SUB>> ]
"115964116995" [label = <(PARAM,OpKernelContext* context)<SUB>1</SUB>> ]
"115964116996" [label = <(PARAM,Tensor* bottom_diff)<SUB>1</SUB>> ]
"115964116997" [label = <(PARAM,const Tensor&amp; tensor_in)<SUB>2</SUB>> ]
"115964116998" [label = <(PARAM,const Tensor&amp; tensor_out)<SUB>2</SUB>> ]
"115964116999" [label = <(PARAM,const Tensor&amp; top_diff)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,const PoolParameters&amp; params)<SUB>4</SUB>> ]
"115964117000" [label = <(PARAM,const Padding&amp; padding)<SUB>5</SUB>> ]
"25769803792" [label = <(BLOCK,{
    typedef Eigen::Map&lt;const Eigen::Matrix&lt;T,...,{
    typedef Eigen::Map&lt;const Eigen::Matrix&lt;T,...)<SUB>5</SUB>> ]
"171798691841" [label = <(TYPE_DECL,ConstEigenMatrixMap)<SUB>7</SUB>> ]
"171798691842" [label = <(TYPE_DECL,EigenMatrixMap)<SUB>9</SUB>> ]
"94489280543" [label = <(LOCAL,ConstEigenMatrixMap in_mat: ConstEigenMatrixMap)<SUB>11</SUB>> ]
"30064771164" [label = <(in_mat,in_mat(
        tensor_in.flat&lt;T&gt;().data(), par...)<SUB>11</SUB>> ]
"30064771165" [label = <(data,tensor_in.flat&lt;T&gt;().data())<SUB>12</SUB>> ]
"30064771166" [label = <(flat&lt;T&gt;,tensor_in.flat&lt;T&gt;())<SUB>12</SUB>> ]
"68719476850" [label = <(IDENTIFIER,tensor_in,tensor_in.flat&lt;T&gt;())<SUB>12</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.fieldAccess,params.depth)<SUB>12</SUB>> ]
"68719476851" [label = <(IDENTIFIER,params,in_mat(
        tensor_in.flat&lt;T&gt;().data(), par...)<SUB>12</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,depth,depth)<SUB>12</SUB>> ]
"30064771168" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_cols * params.tensor_in_rows *...)<SUB>13</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_cols * params.tensor_in_rows)<SUB>13</SUB>> ]
"30064771170" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_cols)<SUB>13</SUB>> ]
"68719476852" [label = <(IDENTIFIER,params,params.tensor_in_cols * params.tensor_in_rows)<SUB>13</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,tensor_in_cols,tensor_in_cols)<SUB>13</SUB>> ]
"30064771171" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_rows)<SUB>13</SUB>> ]
"68719476853" [label = <(IDENTIFIER,params,params.tensor_in_cols * params.tensor_in_rows)<SUB>13</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,tensor_in_rows,tensor_in_rows)<SUB>13</SUB>> ]
"30064771172" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_batch)<SUB>13</SUB>> ]
"68719476854" [label = <(IDENTIFIER,params,params.tensor_in_cols * params.tensor_in_rows *...)<SUB>13</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,tensor_in_batch,tensor_in_batch)<SUB>13</SUB>> ]
"94489280542" [label = <(LOCAL,ConstEigenMatrixMap out_mat: ConstEigenMatrixMap)<SUB>14</SUB>> ]
"30064771173" [label = <(out_mat,out_mat(
        tensor_out.flat&lt;T&gt;().data(), p...)<SUB>14</SUB>> ]
"30064771174" [label = <(data,tensor_out.flat&lt;T&gt;().data())<SUB>15</SUB>> ]
"30064771175" [label = <(flat&lt;T&gt;,tensor_out.flat&lt;T&gt;())<SUB>15</SUB>> ]
"68719476855" [label = <(IDENTIFIER,tensor_out,tensor_out.flat&lt;T&gt;())<SUB>15</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;.fieldAccess,params.depth)<SUB>15</SUB>> ]
"68719476856" [label = <(IDENTIFIER,params,out_mat(
        tensor_out.flat&lt;T&gt;().data(), p...)<SUB>15</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,depth,depth)<SUB>15</SUB>> ]
"30064771177" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height * params.t...)<SUB>16</SUB>> ]
"30064771178" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height)<SUB>16</SUB>> ]
"30064771179" [label = <(&lt;operator&gt;.fieldAccess,params.out_width)<SUB>16</SUB>> ]
"68719476857" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>16</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,out_width,out_width)<SUB>16</SUB>> ]
"30064771180" [label = <(&lt;operator&gt;.fieldAccess,params.out_height)<SUB>16</SUB>> ]
"68719476858" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>16</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,out_height,out_height)<SUB>16</SUB>> ]
"30064771181" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_batch)<SUB>16</SUB>> ]
"68719476859" [label = <(IDENTIFIER,params,params.out_width * params.out_height * params.t...)<SUB>16</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,tensor_in_batch,tensor_in_batch)<SUB>16</SUB>> ]
"94489280544" [label = <(LOCAL,ConstEigenMatrixMap top_diff_mat: ConstEigenMatrixMap)<SUB>17</SUB>> ]
"30064771182" [label = <(top_diff_mat,top_diff_mat(
        top_diff.flat&lt;T&gt;().data()...)<SUB>17</SUB>> ]
"30064771183" [label = <(data,top_diff.flat&lt;T&gt;().data())<SUB>18</SUB>> ]
"30064771184" [label = <(flat&lt;T&gt;,top_diff.flat&lt;T&gt;())<SUB>18</SUB>> ]
"68719476860" [label = <(IDENTIFIER,top_diff,top_diff.flat&lt;T&gt;())<SUB>18</SUB>> ]
"30064771185" [label = <(&lt;operator&gt;.fieldAccess,params.depth)<SUB>18</SUB>> ]
"68719476861" [label = <(IDENTIFIER,params,top_diff_mat(
        top_diff.flat&lt;T&gt;().data()...)<SUB>18</SUB>> ]
"55834574868" [label = <(FIELD_IDENTIFIER,depth,depth)<SUB>18</SUB>> ]
"30064771186" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_cols * params.tensor_in_rows *...)<SUB>19</SUB>> ]
"30064771187" [label = <(&lt;operator&gt;.multiplication,params.tensor_in_cols * params.tensor_in_rows)<SUB>19</SUB>> ]
"30064771188" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_cols)<SUB>19</SUB>> ]
"68719476862" [label = <(IDENTIFIER,params,params.tensor_in_cols * params.tensor_in_rows)<SUB>19</SUB>> ]
"55834574869" [label = <(FIELD_IDENTIFIER,tensor_in_cols,tensor_in_cols)<SUB>19</SUB>> ]
"30064771189" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_rows)<SUB>19</SUB>> ]
"68719476863" [label = <(IDENTIFIER,params,params.tensor_in_cols * params.tensor_in_rows)<SUB>19</SUB>> ]
"55834574870" [label = <(FIELD_IDENTIFIER,tensor_in_rows,tensor_in_rows)<SUB>19</SUB>> ]
"30064771190" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_batch)<SUB>19</SUB>> ]
"68719476864" [label = <(IDENTIFIER,params,params.tensor_in_cols * params.tensor_in_rows *...)<SUB>19</SUB>> ]
"55834574871" [label = <(FIELD_IDENTIFIER,tensor_in_batch,tensor_in_batch)<SUB>19</SUB>> ]
"94489280541" [label = <(LOCAL,EigenMatrixMap bottom_diff_mat: EigenMatrixMap)<SUB>20</SUB>> ]
"30064771191" [label = <(bottom_diff_mat,bottom_diff_mat(
        bottom_diff-&gt;flat&lt;T&gt;()...)<SUB>20</SUB>> ]
"30064771192" [label = <(data,bottom_diff-&gt;flat&lt;T&gt;().data())<SUB>21</SUB>> ]
"30064771193" [label = <(flat&lt;T&gt;,bottom_diff-&gt;flat&lt;T&gt;())<SUB>21</SUB>> ]
"68719476865" [label = <(IDENTIFIER,bottom_diff,bottom_diff-&gt;flat&lt;T&gt;())<SUB>21</SUB>> ]
"30064771194" [label = <(&lt;operator&gt;.fieldAccess,params.depth)<SUB>21</SUB>> ]
"68719476866" [label = <(IDENTIFIER,params,bottom_diff_mat(
        bottom_diff-&gt;flat&lt;T&gt;()...)<SUB>21</SUB>> ]
"55834574872" [label = <(FIELD_IDENTIFIER,depth,depth)<SUB>21</SUB>> ]
"30064771195" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height * params.t...)<SUB>22</SUB>> ]
"30064771196" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height)<SUB>22</SUB>> ]
"30064771197" [label = <(&lt;operator&gt;.fieldAccess,params.out_width)<SUB>22</SUB>> ]
"68719476867" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>22</SUB>> ]
"55834574873" [label = <(FIELD_IDENTIFIER,out_width,out_width)<SUB>22</SUB>> ]
"30064771198" [label = <(&lt;operator&gt;.fieldAccess,params.out_height)<SUB>22</SUB>> ]
"68719476868" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>22</SUB>> ]
"55834574874" [label = <(FIELD_IDENTIFIER,out_height,out_height)<SUB>22</SUB>> ]
"30064771199" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_batch)<SUB>22</SUB>> ]
"68719476869" [label = <(IDENTIFIER,params,params.out_width * params.out_height * params.t...)<SUB>22</SUB>> ]
"55834574875" [label = <(FIELD_IDENTIFIER,tensor_in_batch,tensor_in_batch)<SUB>22</SUB>> ]
"94489280545" [label = <(LOCAL,constDeviceBase.CpuWorkerThreads&amp; worker_threads: DeviceBase.CpuWorkerThreads&amp;)<SUB>24</SUB>> ]
"30064771200" [label = <(&lt;operator&gt;.assignment,&amp; worker_threads =
        *(context-&gt;device()-...)<SUB>24</SUB>> ]
"68719476870" [label = <(IDENTIFIER,worker_threads,&amp; worker_threads =
        *(context-&gt;device()-...)<SUB>24</SUB>> ]
"30064771201" [label = <(&lt;operator&gt;.indirection,*(context-&gt;device()-&gt;tensorflow_cpu_worker_thre...)<SUB>25</SUB>> ]
"30064771202" [label = <(tensorflow_cpu_worker_threads,context-&gt;device()-&gt;tensorflow_cpu_worker_threads())<SUB>25</SUB>> ]
"30064771203" [label = <(device,context-&gt;device())<SUB>25</SUB>> ]
"68719476871" [label = <(IDENTIFIER,context,context-&gt;device())<SUB>25</SUB>> ]
"94489280546" [label = <(LOCAL,auto shard: auto)<SUB>44</SUB>> ]
"30064771204" [label = <(&lt;operator&gt;.assignment,shard = [&amp;params, &amp;in_mat, &amp;out_mat, &amp;top_diff_...)<SUB>44</SUB>> ]
"68719476872" [label = <(IDENTIFIER,shard,shard = [&amp;params, &amp;in_mat, &amp;out_mat, &amp;top_diff_...)<SUB>44</SUB>> ]
"124554051584" [label = <(METHOD_REF,[&amp;params, &amp;in_mat, &amp;out_mat, &amp;top_diff_mat, &amp;bo...,shard = [&amp;params, &amp;in_mat, &amp;out_mat, &amp;top_diff_...)<SUB>44</SUB>> ]
"94489280547" [label = <(LOCAL,const int64_t shard_cost: int64_t)<SUB>100</SUB>> ]
"30064771205" [label = <(&lt;operator&gt;.assignment,shard_cost = params.out_width * params.out_heig...)<SUB>100</SUB>> ]
"68719476873" [label = <(IDENTIFIER,shard_cost,shard_cost = params.out_width * params.out_heig...)<SUB>100</SUB>> ]
"30064771206" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height *
        ...)<SUB>100</SUB>> ]
"30064771207" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height *
        ...)<SUB>100</SUB>> ]
"30064771208" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height *
        ...)<SUB>100</SUB>> ]
"30064771209" [label = <(&lt;operator&gt;.multiplication,params.out_width * params.out_height)<SUB>100</SUB>> ]
"30064771210" [label = <(&lt;operator&gt;.fieldAccess,params.out_width)<SUB>100</SUB>> ]
"68719476874" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>100</SUB>> ]
"55834574876" [label = <(FIELD_IDENTIFIER,out_width,out_width)<SUB>100</SUB>> ]
"30064771211" [label = <(&lt;operator&gt;.fieldAccess,params.out_height)<SUB>100</SUB>> ]
"68719476875" [label = <(IDENTIFIER,params,params.out_width * params.out_height)<SUB>100</SUB>> ]
"55834574877" [label = <(FIELD_IDENTIFIER,out_height,out_height)<SUB>100</SUB>> ]
"30064771212" [label = <(&lt;operator&gt;.fieldAccess,params.depth)<SUB>101</SUB>> ]
"68719476876" [label = <(IDENTIFIER,params,params.out_width * params.out_height *
        ...)<SUB>101</SUB>> ]
"55834574878" [label = <(FIELD_IDENTIFIER,depth,depth)<SUB>101</SUB>> ]
"30064771213" [label = <(&lt;operator&gt;.fieldAccess,params.window_rows)<SUB>101</SUB>> ]
"68719476877" [label = <(IDENTIFIER,params,params.out_width * params.out_height *
        ...)<SUB>101</SUB>> ]
"55834574879" [label = <(FIELD_IDENTIFIER,window_rows,window_rows)<SUB>101</SUB>> ]
"30064771214" [label = <(&lt;operator&gt;.fieldAccess,params.window_cols)<SUB>102</SUB>> ]
"68719476878" [label = <(IDENTIFIER,params,params.out_width * params.out_height *
        ...)<SUB>102</SUB>> ]
"55834574880" [label = <(FIELD_IDENTIFIER,window_cols,window_cols)<SUB>102</SUB>> ]
"30064771215" [label = <(Shard,Shard(worker_threads.num_threads, worker_thread...)<SUB>103</SUB>> ]
"30064771216" [label = <(&lt;operator&gt;.fieldAccess,worker_threads.num_threads)<SUB>103</SUB>> ]
"68719476879" [label = <(IDENTIFIER,worker_threads,Shard(worker_threads.num_threads, worker_thread...)<SUB>103</SUB>> ]
"55834574881" [label = <(FIELD_IDENTIFIER,num_threads,num_threads)<SUB>103</SUB>> ]
"30064771217" [label = <(&lt;operator&gt;.fieldAccess,worker_threads.workers)<SUB>103</SUB>> ]
"68719476880" [label = <(IDENTIFIER,worker_threads,Shard(worker_threads.num_threads, worker_thread...)<SUB>103</SUB>> ]
"55834574882" [label = <(FIELD_IDENTIFIER,workers,workers)<SUB>103</SUB>> ]
"30064771218" [label = <(&lt;operator&gt;.fieldAccess,params.tensor_in_batch)<SUB>104</SUB>> ]
"68719476881" [label = <(IDENTIFIER,params,Shard(worker_threads.num_threads, worker_thread...)<SUB>104</SUB>> ]
"55834574883" [label = <(FIELD_IDENTIFIER,tensor_in_batch,tensor_in_batch)<SUB>104</SUB>> ]
"68719476882" [label = <(IDENTIFIER,shard_cost,Shard(worker_threads.num_threads, worker_thread...)<SUB>104</SUB>> ]
"68719476883" [label = <(IDENTIFIER,shard,Shard(worker_threads.num_threads, worker_thread...)<SUB>104</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149698" -> "115964116995"  [ label = "AST: "] 
  "111669149698" -> "115964116996"  [ label = "AST: "] 
  "111669149698" -> "115964116997"  [ label = "AST: "] 
  "111669149698" -> "115964116998"  [ label = "AST: "] 
  "111669149698" -> "115964116999"  [ label = "AST: "] 
  "111669149698" -> "115964116994"  [ label = "AST: "] 
  "111669149698" -> "115964117000"  [ label = "AST: "] 
  "111669149698" -> "25769803792"  [ label = "AST: "] 
  "111669149698" -> "128849018881"  [ label = "AST: "] 
  "25769803792" -> "171798691841"  [ label = "AST: "] 
  "25769803792" -> "171798691842"  [ label = "AST: "] 
  "25769803792" -> "94489280543"  [ label = "AST: "] 
  "25769803792" -> "30064771164"  [ label = "AST: "] 
  "25769803792" -> "94489280542"  [ label = "AST: "] 
  "25769803792" -> "30064771173"  [ label = "AST: "] 
  "25769803792" -> "94489280544"  [ label = "AST: "] 
  "25769803792" -> "30064771182"  [ label = "AST: "] 
  "25769803792" -> "94489280541"  [ label = "AST: "] 
  "25769803792" -> "30064771191"  [ label = "AST: "] 
  "25769803792" -> "94489280545"  [ label = "AST: "] 
  "25769803792" -> "30064771200"  [ label = "AST: "] 
  "25769803792" -> "94489280546"  [ label = "AST: "] 
  "25769803792" -> "30064771204"  [ label = "AST: "] 
  "25769803792" -> "94489280547"  [ label = "AST: "] 
  "25769803792" -> "30064771205"  [ label = "AST: "] 
  "25769803792" -> "30064771215"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771164" -> "30064771167"  [ label = "AST: "] 
  "30064771164" -> "30064771168"  [ label = "AST: "] 
  "30064771165" -> "30064771166"  [ label = "AST: "] 
  "30064771166" -> "68719476850"  [ label = "AST: "] 
  "30064771167" -> "68719476851"  [ label = "AST: "] 
  "30064771167" -> "55834574860"  [ label = "AST: "] 
  "30064771168" -> "30064771169"  [ label = "AST: "] 
  "30064771168" -> "30064771172"  [ label = "AST: "] 
  "30064771169" -> "30064771170"  [ label = "AST: "] 
  "30064771169" -> "30064771171"  [ label = "AST: "] 
  "30064771170" -> "68719476852"  [ label = "AST: "] 
  "30064771170" -> "55834574861"  [ label = "AST: "] 
  "30064771171" -> "68719476853"  [ label = "AST: "] 
  "30064771171" -> "55834574862"  [ label = "AST: "] 
  "30064771172" -> "68719476854"  [ label = "AST: "] 
  "30064771172" -> "55834574863"  [ label = "AST: "] 
  "30064771173" -> "30064771174"  [ label = "AST: "] 
  "30064771173" -> "30064771176"  [ label = "AST: "] 
  "30064771173" -> "30064771177"  [ label = "AST: "] 
  "30064771174" -> "30064771175"  [ label = "AST: "] 
  "30064771175" -> "68719476855"  [ label = "AST: "] 
  "30064771176" -> "68719476856"  [ label = "AST: "] 
  "30064771176" -> "55834574864"  [ label = "AST: "] 
  "30064771177" -> "30064771178"  [ label = "AST: "] 
  "30064771177" -> "30064771181"  [ label = "AST: "] 
  "30064771178" -> "30064771179"  [ label = "AST: "] 
  "30064771178" -> "30064771180"  [ label = "AST: "] 
  "30064771179" -> "68719476857"  [ label = "AST: "] 
  "30064771179" -> "55834574865"  [ label = "AST: "] 
  "30064771180" -> "68719476858"  [ label = "AST: "] 
  "30064771180" -> "55834574866"  [ label = "AST: "] 
  "30064771181" -> "68719476859"  [ label = "AST: "] 
  "30064771181" -> "55834574867"  [ label = "AST: "] 
  "30064771182" -> "30064771183"  [ label = "AST: "] 
  "30064771182" -> "30064771185"  [ label = "AST: "] 
  "30064771182" -> "30064771186"  [ label = "AST: "] 
  "30064771183" -> "30064771184"  [ label = "AST: "] 
  "30064771184" -> "68719476860"  [ label = "AST: "] 
  "30064771185" -> "68719476861"  [ label = "AST: "] 
  "30064771185" -> "55834574868"  [ label = "AST: "] 
  "30064771186" -> "30064771187"  [ label = "AST: "] 
  "30064771186" -> "30064771190"  [ label = "AST: "] 
  "30064771187" -> "30064771188"  [ label = "AST: "] 
  "30064771187" -> "30064771189"  [ label = "AST: "] 
  "30064771188" -> "68719476862"  [ label = "AST: "] 
  "30064771188" -> "55834574869"  [ label = "AST: "] 
  "30064771189" -> "68719476863"  [ label = "AST: "] 
  "30064771189" -> "55834574870"  [ label = "AST: "] 
  "30064771190" -> "68719476864"  [ label = "AST: "] 
  "30064771190" -> "55834574871"  [ label = "AST: "] 
  "30064771191" -> "30064771192"  [ label = "AST: "] 
  "30064771191" -> "30064771194"  [ label = "AST: "] 
  "30064771191" -> "30064771195"  [ label = "AST: "] 
  "30064771192" -> "30064771193"  [ label = "AST: "] 
  "30064771193" -> "68719476865"  [ label = "AST: "] 
  "30064771194" -> "68719476866"  [ label = "AST: "] 
  "30064771194" -> "55834574872"  [ label = "AST: "] 
  "30064771195" -> "30064771196"  [ label = "AST: "] 
  "30064771195" -> "30064771199"  [ label = "AST: "] 
  "30064771196" -> "30064771197"  [ label = "AST: "] 
  "30064771196" -> "30064771198"  [ label = "AST: "] 
  "30064771197" -> "68719476867"  [ label = "AST: "] 
  "30064771197" -> "55834574873"  [ label = "AST: "] 
  "30064771198" -> "68719476868"  [ label = "AST: "] 
  "30064771198" -> "55834574874"  [ label = "AST: "] 
  "30064771199" -> "68719476869"  [ label = "AST: "] 
  "30064771199" -> "55834574875"  [ label = "AST: "] 
  "30064771200" -> "68719476870"  [ label = "AST: "] 
  "30064771200" -> "30064771201"  [ label = "AST: "] 
  "30064771201" -> "30064771202"  [ label = "AST: "] 
  "30064771202" -> "30064771203"  [ label = "AST: "] 
  "30064771203" -> "68719476871"  [ label = "AST: "] 
  "30064771204" -> "68719476872"  [ label = "AST: "] 
  "30064771204" -> "124554051584"  [ label = "AST: "] 
  "30064771205" -> "68719476873"  [ label = "AST: "] 
  "30064771205" -> "30064771206"  [ label = "AST: "] 
  "30064771206" -> "30064771207"  [ label = "AST: "] 
  "30064771206" -> "30064771214"  [ label = "AST: "] 
  "30064771207" -> "30064771208"  [ label = "AST: "] 
  "30064771207" -> "30064771213"  [ label = "AST: "] 
  "30064771208" -> "30064771209"  [ label = "AST: "] 
  "30064771208" -> "30064771212"  [ label = "AST: "] 
  "30064771209" -> "30064771210"  [ label = "AST: "] 
  "30064771209" -> "30064771211"  [ label = "AST: "] 
  "30064771210" -> "68719476874"  [ label = "AST: "] 
  "30064771210" -> "55834574876"  [ label = "AST: "] 
  "30064771211" -> "68719476875"  [ label = "AST: "] 
  "30064771211" -> "55834574877"  [ label = "AST: "] 
  "30064771212" -> "68719476876"  [ label = "AST: "] 
  "30064771212" -> "55834574878"  [ label = "AST: "] 
  "30064771213" -> "68719476877"  [ label = "AST: "] 
  "30064771213" -> "55834574879"  [ label = "AST: "] 
  "30064771214" -> "68719476878"  [ label = "AST: "] 
  "30064771214" -> "55834574880"  [ label = "AST: "] 
  "30064771215" -> "30064771216"  [ label = "AST: "] 
  "30064771215" -> "30064771217"  [ label = "AST: "] 
  "30064771215" -> "30064771218"  [ label = "AST: "] 
  "30064771215" -> "68719476882"  [ label = "AST: "] 
  "30064771215" -> "68719476883"  [ label = "AST: "] 
  "30064771216" -> "68719476879"  [ label = "AST: "] 
  "30064771216" -> "55834574881"  [ label = "AST: "] 
  "30064771217" -> "68719476880"  [ label = "AST: "] 
  "30064771217" -> "55834574882"  [ label = "AST: "] 
  "30064771218" -> "68719476881"  [ label = "AST: "] 
  "30064771218" -> "55834574883"  [ label = "AST: "] 
  "30064771164" -> "30064771175"  [ label = "CFG: "] 
  "30064771173" -> "30064771184"  [ label = "CFG: "] 
  "30064771182" -> "30064771193"  [ label = "CFG: "] 
  "30064771191" -> "30064771203"  [ label = "CFG: "] 
  "30064771200" -> "124554051584"  [ label = "CFG: "] 
  "30064771204" -> "55834574876"  [ label = "CFG: "] 
  "30064771205" -> "55834574881"  [ label = "CFG: "] 
  "30064771215" -> "128849018881"  [ label = "CFG: "] 
  "30064771165" -> "55834574860"  [ label = "CFG: "] 
  "30064771167" -> "55834574861"  [ label = "CFG: "] 
  "30064771168" -> "30064771164"  [ label = "CFG: "] 
  "30064771174" -> "55834574864"  [ label = "CFG: "] 
  "30064771176" -> "55834574865"  [ label = "CFG: "] 
  "30064771177" -> "30064771173"  [ label = "CFG: "] 
  "30064771183" -> "55834574868"  [ label = "CFG: "] 
  "30064771185" -> "55834574869"  [ label = "CFG: "] 
  "30064771186" -> "30064771182"  [ label = "CFG: "] 
  "30064771192" -> "55834574872"  [ label = "CFG: "] 
  "30064771194" -> "55834574873"  [ label = "CFG: "] 
  "30064771195" -> "30064771191"  [ label = "CFG: "] 
  "30064771201" -> "30064771200"  [ label = "CFG: "] 
  "124554051584" -> "30064771204"  [ label = "CFG: "] 
  "30064771206" -> "30064771205"  [ label = "CFG: "] 
  "30064771216" -> "55834574882"  [ label = "CFG: "] 
  "30064771217" -> "55834574883"  [ label = "CFG: "] 
  "30064771218" -> "30064771215"  [ label = "CFG: "] 
  "30064771166" -> "30064771165"  [ label = "CFG: "] 
  "55834574860" -> "30064771167"  [ label = "CFG: "] 
  "30064771169" -> "55834574863"  [ label = "CFG: "] 
  "30064771172" -> "30064771168"  [ label = "CFG: "] 
  "30064771175" -> "30064771174"  [ label = "CFG: "] 
  "55834574864" -> "30064771176"  [ label = "CFG: "] 
  "30064771178" -> "55834574867"  [ label = "CFG: "] 
  "30064771181" -> "30064771177"  [ label = "CFG: "] 
  "30064771184" -> "30064771183"  [ label = "CFG: "] 
  "55834574868" -> "30064771185"  [ label = "CFG: "] 
  "30064771187" -> "55834574871"  [ label = "CFG: "] 
  "30064771190" -> "30064771186"  [ label = "CFG: "] 
  "30064771193" -> "30064771192"  [ label = "CFG: "] 
  "55834574872" -> "30064771194"  [ label = "CFG: "] 
  "30064771196" -> "55834574875"  [ label = "CFG: "] 
  "30064771199" -> "30064771195"  [ label = "CFG: "] 
  "30064771202" -> "30064771201"  [ label = "CFG: "] 
  "30064771207" -> "55834574880"  [ label = "CFG: "] 
  "30064771214" -> "30064771206"  [ label = "CFG: "] 
  "55834574881" -> "30064771216"  [ label = "CFG: "] 
  "55834574882" -> "30064771217"  [ label = "CFG: "] 
  "55834574883" -> "30064771218"  [ label = "CFG: "] 
  "30064771170" -> "55834574862"  [ label = "CFG: "] 
  "30064771171" -> "30064771169"  [ label = "CFG: "] 
  "55834574863" -> "30064771172"  [ label = "CFG: "] 
  "30064771179" -> "55834574866"  [ label = "CFG: "] 
  "30064771180" -> "30064771178"  [ label = "CFG: "] 
  "55834574867" -> "30064771181"  [ label = "CFG: "] 
  "30064771188" -> "55834574870"  [ label = "CFG: "] 
  "30064771189" -> "30064771187"  [ label = "CFG: "] 
  "55834574871" -> "30064771190"  [ label = "CFG: "] 
  "30064771197" -> "55834574874"  [ label = "CFG: "] 
  "30064771198" -> "30064771196"  [ label = "CFG: "] 
  "55834574875" -> "30064771199"  [ label = "CFG: "] 
  "30064771203" -> "30064771202"  [ label = "CFG: "] 
  "30064771208" -> "55834574879"  [ label = "CFG: "] 
  "30064771213" -> "30064771207"  [ label = "CFG: "] 
  "55834574880" -> "30064771214"  [ label = "CFG: "] 
  "55834574861" -> "30064771170"  [ label = "CFG: "] 
  "55834574862" -> "30064771171"  [ label = "CFG: "] 
  "55834574865" -> "30064771179"  [ label = "CFG: "] 
  "55834574866" -> "30064771180"  [ label = "CFG: "] 
  "55834574869" -> "30064771188"  [ label = "CFG: "] 
  "55834574870" -> "30064771189"  [ label = "CFG: "] 
  "55834574873" -> "30064771197"  [ label = "CFG: "] 
  "55834574874" -> "30064771198"  [ label = "CFG: "] 
  "30064771209" -> "55834574878"  [ label = "CFG: "] 
  "30064771212" -> "30064771208"  [ label = "CFG: "] 
  "55834574879" -> "30064771213"  [ label = "CFG: "] 
  "30064771210" -> "55834574877"  [ label = "CFG: "] 
  "30064771211" -> "30064771209"  [ label = "CFG: "] 
  "55834574878" -> "30064771212"  [ label = "CFG: "] 
  "55834574876" -> "30064771210"  [ label = "CFG: "] 
  "55834574877" -> "30064771211"  [ label = "CFG: "] 
  "111669149698" -> "30064771166"  [ label = "CFG: "] 
  "115964116994" -> "128849018881"  [ label = "DDG: params"] 
  "115964117000" -> "128849018881"  [ label = "DDG: padding"] 
  "30064771166" -> "128849018881"  [ label = "DDG: tensor_in"] 
  "30064771165" -> "128849018881"  [ label = "DDG: tensor_in.flat&lt;T&gt;()"] 
  "30064771164" -> "128849018881"  [ label = "DDG: tensor_in.flat&lt;T&gt;().data()"] 
  "30064771164" -> "128849018881"  [ label = "DDG: in_mat(
        tensor_in.flat&lt;T&gt;().data(), params.depth,
        params.tensor_in_cols * params.tensor_in_rows * params.tensor_in_batch)"] 
  "30064771175" -> "128849018881"  [ label = "DDG: tensor_out"] 
  "30064771174" -> "128849018881"  [ label = "DDG: tensor_out.flat&lt;T&gt;()"] 
  "30064771173" -> "128849018881"  [ label = "DDG: tensor_out.flat&lt;T&gt;().data()"] 
  "30064771173" -> "128849018881"  [ label = "DDG: out_mat(
        tensor_out.flat&lt;T&gt;().data(), params.depth,
        params.out_width * params.out_height * params.tensor_in_batch)"] 
  "30064771184" -> "128849018881"  [ label = "DDG: top_diff"] 
  "30064771183" -> "128849018881"  [ label = "DDG: top_diff.flat&lt;T&gt;()"] 
  "30064771182" -> "128849018881"  [ label = "DDG: top_diff.flat&lt;T&gt;().data()"] 
  "30064771187" -> "128849018881"  [ label = "DDG: params.tensor_in_cols"] 
  "30064771187" -> "128849018881"  [ label = "DDG: params.tensor_in_rows"] 
  "30064771186" -> "128849018881"  [ label = "DDG: params.tensor_in_cols * params.tensor_in_rows"] 
  "30064771182" -> "128849018881"  [ label = "DDG: params.tensor_in_cols * params.tensor_in_rows * params.tensor_in_batch"] 
  "30064771182" -> "128849018881"  [ label = "DDG: top_diff_mat(
        top_diff.flat&lt;T&gt;().data(), params.depth,
        params.tensor_in_cols * params.tensor_in_rows * params.tensor_in_batch)"] 
  "30064771193" -> "128849018881"  [ label = "DDG: bottom_diff"] 
  "30064771192" -> "128849018881"  [ label = "DDG: bottom_diff-&gt;flat&lt;T&gt;()"] 
  "30064771191" -> "128849018881"  [ label = "DDG: bottom_diff-&gt;flat&lt;T&gt;().data()"] 
  "30064771191" -> "128849018881"  [ label = "DDG: params.out_width * params.out_height * params.tensor_in_batch"] 
  "30064771191" -> "128849018881"  [ label = "DDG: bottom_diff_mat(
        bottom_diff-&gt;flat&lt;T&gt;().data(), params.depth,
        params.out_width * params.out_height * params.tensor_in_batch)"] 
  "30064771200" -> "128849018881"  [ label = "DDG: worker_threads"] 
  "30064771203" -> "128849018881"  [ label = "DDG: context"] 
  "30064771202" -> "128849018881"  [ label = "DDG: context-&gt;device()"] 
  "30064771200" -> "128849018881"  [ label = "DDG: *(context-&gt;device()-&gt;tensorflow_cpu_worker_threads())"] 
  "30064771200" -> "128849018881"  [ label = "DDG: &amp; worker_threads =
        *(context-&gt;device()-&gt;tensorflow_cpu_worker_threads())"] 
  "30064771204" -> "128849018881"  [ label = "DDG: shard = [&amp;params, &amp;in_mat, &amp;out_mat, &amp;top_diff_mat, &amp;bottom_diff_mat](
                     int64_t start, int64_t limit) {
      const int32_t depth = params.depth;
      const int32_t in_rows = params.tensor_in_rows;
      const int32_t in_cols = params.tensor_in_cols;
      const int32_t pad_top = params.pad_top;
      const int32_t pad_left = params.pad_left;
      const int32_t window_rows = params.window_rows;
      const int32_t window_cols = params.window_cols;
      const int32_t row_stride = params.row_stride;
      const int32_t col_stride = params.col_stride;
      const int32_t out_height = params.out_height;
      const int32_t out_width = params.out_width;

      {
        // Initializes the output grad backprop tensor with 0.
        const int32_t output_image_size = out_height * out_width * params.depth;
        EigenMatrixMap bottom_diff_shard(
            bottom_diff_mat.data() + start * output_image_size, 1,
            (limit - start) * output_image_size);
     ..."] 
  "30064771209" -> "128849018881"  [ label = "DDG: params.out_width"] 
  "30064771209" -> "128849018881"  [ label = "DDG: params.out_height"] 
  "30064771208" -> "128849018881"  [ label = "DDG: params.out_width * params.out_height"] 
  "30064771208" -> "128849018881"  [ label = "DDG: params.depth"] 
  "30064771207" -> "128849018881"  [ label = "DDG: params.out_width * params.out_height *
                               params.depth"] 
  "30064771207" -> "128849018881"  [ label = "DDG: params.window_rows"] 
  "30064771206" -> "128849018881"  [ label = "DDG: params.out_width * params.out_height *
                               params.depth * params.window_rows"] 
  "30064771206" -> "128849018881"  [ label = "DDG: params.window_cols"] 
  "30064771205" -> "128849018881"  [ label = "DDG: params.out_width * params.out_height *
                               params.depth * params.window_rows *
                               params.window_cols"] 
  "30064771205" -> "128849018881"  [ label = "DDG: shard_cost = params.out_width * params.out_height *
                               params.depth * params.window_rows *
                               params.window_cols"] 
  "30064771215" -> "128849018881"  [ label = "DDG: worker_threads.num_threads"] 
  "30064771215" -> "128849018881"  [ label = "DDG: worker_threads.workers"] 
  "30064771215" -> "128849018881"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771215" -> "128849018881"  [ label = "DDG: shard_cost"] 
  "30064771215" -> "128849018881"  [ label = "DDG: shard"] 
  "30064771215" -> "128849018881"  [ label = "DDG: Shard(worker_threads.num_threads, worker_threads.workers,
          params.tensor_in_batch, shard_cost, shard)"] 
  "111669149698" -> "115964116995"  [ label = "DDG: "] 
  "111669149698" -> "115964116996"  [ label = "DDG: "] 
  "111669149698" -> "115964116997"  [ label = "DDG: "] 
  "111669149698" -> "115964116998"  [ label = "DDG: "] 
  "111669149698" -> "115964116999"  [ label = "DDG: "] 
  "111669149698" -> "115964116994"  [ label = "DDG: "] 
  "111669149698" -> "115964117000"  [ label = "DDG: "] 
  "111669149698" -> "30064771204"  [ label = "DDG: "] 
  "30064771206" -> "30064771205"  [ label = "DDG: params.out_width * params.out_height *
                               params.depth * params.window_rows"] 
  "30064771206" -> "30064771205"  [ label = "DDG: params.window_cols"] 
  "30064771165" -> "30064771164"  [ label = "DDG: tensor_in.flat&lt;T&gt;()"] 
  "115964116994" -> "30064771164"  [ label = "DDG: params"] 
  "30064771168" -> "30064771164"  [ label = "DDG: params.tensor_in_cols * params.tensor_in_rows"] 
  "30064771168" -> "30064771164"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771174" -> "30064771173"  [ label = "DDG: tensor_out.flat&lt;T&gt;()"] 
  "115964116994" -> "30064771173"  [ label = "DDG: params"] 
  "30064771164" -> "30064771173"  [ label = "DDG: params.depth"] 
  "30064771177" -> "30064771173"  [ label = "DDG: params.out_width * params.out_height"] 
  "30064771177" -> "30064771173"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771183" -> "30064771182"  [ label = "DDG: top_diff.flat&lt;T&gt;()"] 
  "115964116994" -> "30064771182"  [ label = "DDG: params"] 
  "30064771173" -> "30064771182"  [ label = "DDG: params.depth"] 
  "30064771186" -> "30064771182"  [ label = "DDG: params.tensor_in_cols * params.tensor_in_rows"] 
  "30064771186" -> "30064771182"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771192" -> "30064771191"  [ label = "DDG: bottom_diff-&gt;flat&lt;T&gt;()"] 
  "115964116994" -> "30064771191"  [ label = "DDG: params"] 
  "30064771182" -> "30064771191"  [ label = "DDG: params.depth"] 
  "30064771195" -> "30064771191"  [ label = "DDG: params.out_width * params.out_height"] 
  "30064771195" -> "30064771191"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771200" -> "30064771215"  [ label = "DDG: worker_threads"] 
  "115964116994" -> "30064771215"  [ label = "DDG: params"] 
  "30064771195" -> "30064771215"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771205" -> "30064771215"  [ label = "DDG: shard_cost"] 
  "111669149698" -> "30064771215"  [ label = "DDG: "] 
  "30064771204" -> "30064771215"  [ label = "DDG: shard"] 
  "30064771166" -> "30064771165"  [ label = "DDG: tensor_in"] 
  "30064771169" -> "30064771168"  [ label = "DDG: params.tensor_in_cols"] 
  "30064771169" -> "30064771168"  [ label = "DDG: params.tensor_in_rows"] 
  "115964116994" -> "30064771168"  [ label = "DDG: params"] 
  "30064771175" -> "30064771174"  [ label = "DDG: tensor_out"] 
  "30064771178" -> "30064771177"  [ label = "DDG: params.out_width"] 
  "30064771178" -> "30064771177"  [ label = "DDG: params.out_height"] 
  "115964116994" -> "30064771177"  [ label = "DDG: params"] 
  "30064771168" -> "30064771177"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771184" -> "30064771183"  [ label = "DDG: top_diff"] 
  "30064771187" -> "30064771186"  [ label = "DDG: params.tensor_in_cols"] 
  "30064771187" -> "30064771186"  [ label = "DDG: params.tensor_in_rows"] 
  "115964116994" -> "30064771186"  [ label = "DDG: params"] 
  "30064771177" -> "30064771186"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771193" -> "30064771192"  [ label = "DDG: bottom_diff"] 
  "30064771196" -> "30064771195"  [ label = "DDG: params.out_width"] 
  "30064771196" -> "30064771195"  [ label = "DDG: params.out_height"] 
  "115964116994" -> "30064771195"  [ label = "DDG: params"] 
  "30064771186" -> "30064771195"  [ label = "DDG: params.tensor_in_batch"] 
  "30064771207" -> "30064771206"  [ label = "DDG: params.out_width * params.out_height *
                               params.depth"] 
  "30064771207" -> "30064771206"  [ label = "DDG: params.window_rows"] 
  "115964116994" -> "30064771206"  [ label = "DDG: params"] 
  "115964116997" -> "30064771166"  [ label = "DDG: tensor_in"] 
  "111669149698" -> "30064771166"  [ label = "DDG: "] 
  "115964116994" -> "30064771169"  [ label = "DDG: params"] 
  "115964116998" -> "30064771175"  [ label = "DDG: tensor_out"] 
  "111669149698" -> "30064771175"  [ label = "DDG: "] 
  "115964116994" -> "30064771178"  [ label = "DDG: params"] 
  "115964116999" -> "30064771184"  [ label = "DDG: top_diff"] 
  "111669149698" -> "30064771184"  [ label = "DDG: "] 
  "115964116994" -> "30064771187"  [ label = "DDG: params"] 
  "30064771169" -> "30064771187"  [ label = "DDG: params.tensor_in_cols"] 
  "30064771169" -> "30064771187"  [ label = "DDG: params.tensor_in_rows"] 
  "115964116996" -> "30064771193"  [ label = "DDG: bottom_diff"] 
  "111669149698" -> "30064771193"  [ label = "DDG: "] 
  "115964116994" -> "30064771196"  [ label = "DDG: params"] 
  "30064771178" -> "30064771196"  [ label = "DDG: params.out_width"] 
  "30064771178" -> "30064771196"  [ label = "DDG: params.out_height"] 
  "30064771203" -> "30064771202"  [ label = "DDG: context"] 
  "30064771208" -> "30064771207"  [ label = "DDG: params.out_width * params.out_height"] 
  "30064771208" -> "30064771207"  [ label = "DDG: params.depth"] 
  "115964116994" -> "30064771207"  [ label = "DDG: params"] 
  "115964116995" -> "30064771203"  [ label = "DDG: context"] 
  "111669149698" -> "30064771203"  [ label = "DDG: "] 
  "30064771209" -> "30064771208"  [ label = "DDG: params.out_width"] 
  "30064771209" -> "30064771208"  [ label = "DDG: params.out_height"] 
  "115964116994" -> "30064771208"  [ label = "DDG: params"] 
  "30064771191" -> "30064771208"  [ label = "DDG: params.depth"] 
  "115964116994" -> "30064771209"  [ label = "DDG: params"] 
  "30064771196" -> "30064771209"  [ label = "DDG: params.out_width"] 
  "30064771196" -> "30064771209"  [ label = "DDG: params.out_height"] 
}
"""
)
