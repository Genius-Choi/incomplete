[33mval[0m [36mres714[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "seq_buf_alloc" {  
"111669149697" [label = <(METHOD,seq_buf_alloc)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,unsigned long size)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	if (unlikely(size &gt; MAX_RW_COUNT))
		return ...,{
	if (unlikely(size &gt; MAX_RW_COUNT))
		return ...)<SUB>2</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (unlikely(size &gt; MAX_RW_COUNT)))<SUB>3</SUB>> ]
"30064771072" [label = <(unlikely,unlikely(size &gt; MAX_RW_COUNT))<SUB>3</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.greaterThan,size &gt; MAX_RW_COUNT)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,size,size &gt; MAX_RW_COUNT)<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,MAX_RW_COUNT,size &gt; MAX_RW_COUNT)<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>> ]
"146028888064" [label = <(RETURN,return NULL;,return NULL;)<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,NULL,return NULL;)<SUB>4</SUB>> ]
"146028888065" [label = <(RETURN,return kvmalloc(size, GFP_KERNEL_ACCOUNT);,return kvmalloc(size, GFP_KERNEL_ACCOUNT);)<SUB>6</SUB>> ]
"30064771074" [label = <(kvmalloc,kvmalloc(size, GFP_KERNEL_ACCOUNT))<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,size,kvmalloc(size, GFP_KERNEL_ACCOUNT))<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,GFP_KERNEL_ACCOUNT,kvmalloc(size, GFP_KERNEL_ACCOUNT))<SUB>6</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,void*)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "68719476738"  [ label = "AST: "] 
  "146028888065" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "146028888064"  [ label = "CFG: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "146028888065"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771073" -> "128849018880"  [ label = "DDG: size"] 
  "30064771072" -> "128849018880"  [ label = "DDG: size &gt; MAX_RW_COUNT"] 
  "30064771072" -> "128849018880"  [ label = "DDG: unlikely(size &gt; MAX_RW_COUNT)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: MAX_RW_COUNT"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771074" -> "146028888065"  [ label = "DDG: kvmalloc(size, GFP_KERNEL_ACCOUNT)"] 
  "30064771073" -> "30064771072"  [ label = "DDG: size"] 
  "30064771073" -> "30064771072"  [ label = "DDG: MAX_RW_COUNT"] 
  "68719476738" -> "146028888064"  [ label = "DDG: NULL"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771073" -> "30064771074"  [ label = "DDG: size"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: size"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "68719476738"  [ label = "DDG: "] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771072" -> "146028888065"  [ label = "CDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
}
"""
)
