[33mval[0m [36mres797[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "ValidateInputs" {  
"111669149697" [label = <(METHOD,ValidateInputs)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const Tensor *a_indices)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const Tensor *a_values)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,const Tensor *a_shape)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,const Tensor *b)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
  if (!TensorShapeUtils::IsMatrix(a_indices-&gt;...,{
  if (!TensorShapeUtils::IsMatrix(a_indices-&gt;...)<SUB>2</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!TensorShapeUtils::IsMatrix(a_indices-&gt;shape())))<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.logicalNot,!TensorShapeUtils::IsMatrix(a_indices-&gt;shape()))<SUB>3</SUB>> ]
"30064771073" [label = <(IsMatrix,TensorShapeUtils::IsMatrix(a_indices-&gt;shape()))<SUB>3</SUB>> ]
"30064771074" [label = <(shape,a_indices-&gt;shape())<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,a_indices,a_indices-&gt;shape())<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,{
    return errors::InvalidArgument(
        &quot;...,{
    return errors::InvalidArgument(
        &quot;...)<SUB>3</SUB>> ]
"146028888064" [label = <(RETURN,return errors::InvalidArgument(
        &quot;Input ...,return errors::InvalidArgument(
        &quot;Input ...)<SUB>4</SUB>> ]
"30064771075" [label = <(InvalidArgument,errors::InvalidArgument(
        &quot;Input a_indic...)<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Input a_indices should be a matrix but receive...,errors::InvalidArgument(
        &quot;Input a_indic...)<SUB>5</SUB>> ]
"30064771076" [label = <(DebugString,a_indices-&gt;shape().DebugString())<SUB>6</SUB>> ]
"30064771077" [label = <(shape,a_indices-&gt;shape())<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,a_indices,a_indices-&gt;shape())<SUB>6</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (!TensorShapeUtils::IsVector(a_values-&gt;shape()) ||
      !TensorShapeUtils::IsVector(a_shape-&gt;shape())))<SUB>8</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.logicalOr,!TensorShapeUtils::IsVector(a_values-&gt;shape()) ...)<SUB>8</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.logicalNot,!TensorShapeUtils::IsVector(a_values-&gt;shape()))<SUB>8</SUB>> ]
"30064771080" [label = <(IsVector,TensorShapeUtils::IsVector(a_values-&gt;shape()))<SUB>8</SUB>> ]
"30064771081" [label = <(shape,a_values-&gt;shape())<SUB>8</SUB>> ]
"68719476738" [label = <(IDENTIFIER,a_values,a_values-&gt;shape())<SUB>8</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.logicalNot,!TensorShapeUtils::IsVector(a_shape-&gt;shape()))<SUB>9</SUB>> ]
"30064771083" [label = <(IsVector,TensorShapeUtils::IsVector(a_shape-&gt;shape()))<SUB>9</SUB>> ]
"30064771084" [label = <(shape,a_shape-&gt;shape())<SUB>9</SUB>> ]
"68719476739" [label = <(IDENTIFIER,a_shape,a_shape-&gt;shape())<SUB>9</SUB>> ]
"25769803779" [label = <(BLOCK,{
    return errors::InvalidArgument(
        &quot;...,{
    return errors::InvalidArgument(
        &quot;...)<SUB>9</SUB>> ]
"146028888065" [label = <(RETURN,return errors::InvalidArgument(
        &quot;Inputs...,return errors::InvalidArgument(
        &quot;Inputs...)<SUB>10</SUB>> ]
"30064771085" [label = <(InvalidArgument,errors::InvalidArgument(
        &quot;Inputs a_valu...)<SUB>10</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;Inputs a_values and a_shape should be vectors ...,errors::InvalidArgument(
        &quot;Inputs a_valu...)<SUB>11</SUB>> ]
"30064771086" [label = <(DebugString,a_values-&gt;shape().DebugString())<SUB>13</SUB>> ]
"30064771087" [label = <(shape,a_values-&gt;shape())<SUB>13</SUB>> ]
"68719476740" [label = <(IDENTIFIER,a_values,a_values-&gt;shape())<SUB>13</SUB>> ]
"90194313218" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(
        &quot;Inputs a_valu...)<SUB>13</SUB>> ]
"30064771088" [label = <(DebugString,a_shape-&gt;shape().DebugString())<SUB>14</SUB>> ]
"30064771089" [label = <(shape,a_shape-&gt;shape())<SUB>14</SUB>> ]
"68719476741" [label = <(IDENTIFIER,a_shape,a_shape-&gt;shape())<SUB>14</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (a_shape-&gt;NumElements() != b-&gt;dims()))<SUB>16</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.notEquals,a_shape-&gt;NumElements() != b-&gt;dims())<SUB>16</SUB>> ]
"30064771091" [label = <(NumElements,a_shape-&gt;NumElements())<SUB>16</SUB>> ]
"68719476742" [label = <(IDENTIFIER,a_shape,a_shape-&gt;NumElements())<SUB>16</SUB>> ]
"30064771092" [label = <(dims,b-&gt;dims())<SUB>16</SUB>> ]
"68719476743" [label = <(IDENTIFIER,b,b-&gt;dims())<SUB>16</SUB>> ]
"25769803780" [label = <(BLOCK,{
    return errors::InvalidArgument(
        &quot;...,{
    return errors::InvalidArgument(
        &quot;...)<SUB>16</SUB>> ]
"146028888066" [label = <(RETURN,return errors::InvalidArgument(
        &quot;Two op...,return errors::InvalidArgument(
        &quot;Two op...)<SUB>17</SUB>> ]
"30064771093" [label = <(InvalidArgument,errors::InvalidArgument(
        &quot;Two operands ...)<SUB>17</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;Two operands have different ranks; received: &quot;,errors::InvalidArgument(
        &quot;Two operands ...)<SUB>18</SUB>> ]
"30064771094" [label = <(NumElements,a_shape-&gt;NumElements())<SUB>18</SUB>> ]
"68719476744" [label = <(IDENTIFIER,a_shape,a_shape-&gt;NumElements())<SUB>18</SUB>> ]
"90194313220" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(
        &quot;Two operands ...)<SUB>19</SUB>> ]
"30064771095" [label = <(dims,b-&gt;dims())<SUB>19</SUB>> ]
"68719476745" [label = <(IDENTIFIER,b,b-&gt;dims())<SUB>19</SUB>> ]
"94489280512" [label = <(LOCAL,const auto a_shape_flat: auto)<SUB>21</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,a_shape_flat = a_shape-&gt;flat&lt;Index&gt;())<SUB>21</SUB>> ]
"68719476746" [label = <(IDENTIFIER,a_shape_flat,a_shape_flat = a_shape-&gt;flat&lt;Index&gt;())<SUB>21</SUB>> ]
"30064771097" [label = <(flat&lt;Index&gt;,a_shape-&gt;flat&lt;Index&gt;())<SUB>21</SUB>> ]
"68719476747" [label = <(IDENTIFIER,a_shape,a_shape-&gt;flat&lt;Index&gt;())<SUB>21</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; b-&gt;dims();++i))<SUB>22</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>> ]
"94489280513" [label = <(LOCAL,int i: int)<SUB>22</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>22</SUB>> ]
"68719476748" [label = <(IDENTIFIER,i,i = 0)<SUB>22</SUB>> ]
"90194313221" [label = <(LITERAL,0,i = 0)<SUB>22</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.lessThan,i &lt; b-&gt;dims())<SUB>22</SUB>> ]
"68719476749" [label = <(IDENTIFIER,i,i &lt; b-&gt;dims())<SUB>22</SUB>> ]
"30064771100" [label = <(dims,b-&gt;dims())<SUB>22</SUB>> ]
"68719476750" [label = <(IDENTIFIER,b,b-&gt;dims())<SUB>22</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>22</SUB>> ]
"68719476751" [label = <(IDENTIFIER,i,++i)<SUB>22</SUB>> ]
"25769803782" [label = <(BLOCK,{
    if (a_shape_flat(i) != b-&gt;dim_size(i)) {
...,{
    if (a_shape_flat(i) != b-&gt;dim_size(i)) {
...)<SUB>22</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (a_shape_flat(i) != b-&gt;dim_size(i)))<SUB>23</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.notEquals,a_shape_flat(i) != b-&gt;dim_size(i))<SUB>23</SUB>> ]
"30064771103" [label = <(a_shape_flat,a_shape_flat(i))<SUB>23</SUB>> ]
"68719476752" [label = <(IDENTIFIER,i,a_shape_flat(i))<SUB>23</SUB>> ]
"30064771104" [label = <(dim_size,b-&gt;dim_size(i))<SUB>23</SUB>> ]
"68719476753" [label = <(IDENTIFIER,b,b-&gt;dim_size(i))<SUB>23</SUB>> ]
"68719476754" [label = <(IDENTIFIER,i,b-&gt;dim_size(i))<SUB>23</SUB>> ]
"25769803783" [label = <(BLOCK,{
      return errors::InvalidArgument(
       ...,{
      return errors::InvalidArgument(
       ...)<SUB>23</SUB>> ]
"146028888067" [label = <(RETURN,return errors::InvalidArgument(
          &quot;Dime...,return errors::InvalidArgument(
          &quot;Dime...)<SUB>24</SUB>> ]
"30064771105" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;Dimension &quot;...)<SUB>24</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;Dimension &quot;,errors::InvalidArgument(
          &quot;Dimension &quot;...)<SUB>25</SUB>> ]
"68719476755" [label = <(IDENTIFIER,i,errors::InvalidArgument(
          &quot;Dimension &quot;...)<SUB>25</SUB>> ]
"90194313223" [label = <(LITERAL,&quot; does not equal (no broadcasting is supported)...,errors::InvalidArgument(
          &quot;Dimension &quot;...)<SUB>26</SUB>> ]
"30064771106" [label = <(a_shape_flat,a_shape_flat(i))<SUB>27</SUB>> ]
"68719476756" [label = <(IDENTIFIER,i,a_shape_flat(i))<SUB>27</SUB>> ]
"90194313224" [label = <(LITERAL,&quot; vs dense side &quot;,errors::InvalidArgument(
          &quot;Dimension &quot;...)<SUB>27</SUB>> ]
"30064771107" [label = <(dim_size,b-&gt;dim_size(i))<SUB>27</SUB>> ]
"68719476757" [label = <(IDENTIFIER,b,b-&gt;dim_size(i))<SUB>27</SUB>> ]
"68719476758" [label = <(IDENTIFIER,i,b-&gt;dim_size(i))<SUB>27</SUB>> ]
"146028888068" [label = <(RETURN,return Status::OK();,return Status::OK();)<SUB>30</SUB>> ]
"30064771108" [label = <(OK,Status::OK())<SUB>30</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "146028888068"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476736"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476737"  [ label = "AST: "] 
  "47244640257" -> "30064771078"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771082"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476738"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476739"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "90194313217"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "90194313218"  [ label = "AST: "] 
  "30064771085" -> "30064771088"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476740"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476741"  [ label = "AST: "] 
  "47244640258" -> "30064771090"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "68719476742"  [ label = "AST: "] 
  "30064771092" -> "68719476743"  [ label = "AST: "] 
  "25769803780" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "90194313219"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "90194313220"  [ label = "AST: "] 
  "30064771093" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "68719476744"  [ label = "AST: "] 
  "30064771095" -> "68719476745"  [ label = "AST: "] 
  "30064771096" -> "68719476746"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476747"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "47244640259" -> "30064771099"  [ label = "AST: "] 
  "47244640259" -> "30064771101"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "25769803781" -> "94489280513"  [ label = "AST: "] 
  "25769803781" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476748"  [ label = "AST: "] 
  "30064771098" -> "90194313221"  [ label = "AST: "] 
  "30064771099" -> "68719476749"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476750"  [ label = "AST: "] 
  "30064771101" -> "68719476751"  [ label = "AST: "] 
  "25769803782" -> "47244640260"  [ label = "AST: "] 
  "47244640260" -> "30064771102"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "68719476752"  [ label = "AST: "] 
  "30064771104" -> "68719476753"  [ label = "AST: "] 
  "30064771104" -> "68719476754"  [ label = "AST: "] 
  "25769803783" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "90194313222"  [ label = "AST: "] 
  "30064771105" -> "68719476755"  [ label = "AST: "] 
  "30064771105" -> "90194313223"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "90194313224"  [ label = "AST: "] 
  "30064771105" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "68719476756"  [ label = "AST: "] 
  "30064771107" -> "68719476757"  [ label = "AST: "] 
  "30064771107" -> "68719476758"  [ label = "AST: "] 
  "146028888068" -> "30064771108"  [ label = "AST: "] 
  "30064771096" -> "30064771098"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771077"  [ label = "CFG: "] 
  "30064771072" -> "30064771081"  [ label = "CFG: "] 
  "30064771078" -> "30064771087"  [ label = "CFG: "] 
  "30064771078" -> "30064771091"  [ label = "CFG: "] 
  "30064771090" -> "30064771094"  [ label = "CFG: "] 
  "30064771090" -> "30064771097"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771099" -> "30064771108"  [ label = "CFG: "] 
  "30064771099" -> "30064771103"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771108" -> "146028888068"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771079" -> "30064771084"  [ label = "CFG: "] 
  "30064771082" -> "30064771078"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771092" -> "30064771090"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771098" -> "30064771100"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771075" -> "146028888064"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "146028888065"  [ label = "CFG: "] 
  "30064771093" -> "146028888066"  [ label = "CFG: "] 
  "30064771102" -> "30064771106"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771086" -> "30064771089"  [ label = "CFG: "] 
  "30064771088" -> "30064771085"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771095" -> "30064771093"  [ label = "CFG: "] 
  "30064771103" -> "30064771104"  [ label = "CFG: "] 
  "30064771104" -> "30064771102"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771105" -> "146028888067"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "30064771105"  [ label = "CFG: "] 
  "111669149697" -> "30064771074"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: a_values"] 
  "115964116994" -> "128849018880"  [ label = "DDG: a_shape"] 
  "115964116995" -> "128849018880"  [ label = "DDG: b"] 
  "30064771072" -> "128849018880"  [ label = "DDG: TensorShapeUtils::IsMatrix(a_indices-&gt;shape())"] 
  "30064771072" -> "128849018880"  [ label = "DDG: !TensorShapeUtils::IsMatrix(a_indices-&gt;shape())"] 
  "30064771077" -> "128849018880"  [ label = "DDG: a_indices"] 
  "30064771076" -> "128849018880"  [ label = "DDG: a_indices-&gt;shape()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: a_indices-&gt;shape().DebugString()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
        &quot;Input a_indices should be a matrix but received shape: &quot;,
        a_indices-&gt;shape().DebugString())"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "30064771097" -> "30064771096"  [ label = "DDG: a_shape"] 
  "30064771108" -> "146028888068"  [ label = "DDG: Status::OK()"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: a_indices-&gt;shape()"] 
  "30064771075" -> "146028888064"  [ label = "DDG: errors::InvalidArgument(
        &quot;Input a_indices should be a matrix but received shape: &quot;,
        a_indices-&gt;shape().DebugString())"] 
  "30064771079" -> "30064771078"  [ label = "DDG: TensorShapeUtils::IsVector(a_values-&gt;shape())"] 
  "30064771082" -> "30064771078"  [ label = "DDG: TensorShapeUtils::IsVector(a_shape-&gt;shape())"] 
  "30064771085" -> "146028888065"  [ label = "DDG: errors::InvalidArgument(
        &quot;Inputs a_values and a_shape should be vectors &quot;
        &quot;but received shapes: &quot;,
        a_values-&gt;shape().DebugString(), &quot; and &quot;,
        a_shape-&gt;shape().DebugString())"] 
  "30064771091" -> "30064771090"  [ label = "DDG: a_shape"] 
  "30064771092" -> "30064771090"  [ label = "DDG: b"] 
  "30064771093" -> "146028888066"  [ label = "DDG: errors::InvalidArgument(
        &quot;Two operands have different ranks; received: &quot;, a_shape-&gt;NumElements(),
        &quot; and &quot;, b-&gt;dims())"] 
  "30064771091" -> "30064771097"  [ label = "DDG: a_shape"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771098" -> "30064771099"  [ label = "DDG: i"] 
  "30064771101" -> "30064771099"  [ label = "DDG: i"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771100" -> "30064771099"  [ label = "DDG: b"] 
  "30064771104" -> "30064771101"  [ label = "DDG: i"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: a_indices"] 
  "30064771080" -> "30064771079"  [ label = "DDG: a_values-&gt;shape()"] 
  "30064771083" -> "30064771082"  [ label = "DDG: a_shape-&gt;shape()"] 
  "115964116994" -> "30064771091"  [ label = "DDG: a_shape"] 
  "30064771084" -> "30064771091"  [ label = "DDG: a_shape"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "115964116995" -> "30064771092"  [ label = "DDG: b"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771092" -> "30064771100"  [ label = "DDG: b"] 
  "30064771104" -> "30064771100"  [ label = "DDG: b"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "115964116992" -> "30064771074"  [ label = "DDG: a_indices"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: a_indices-&gt;shape()"] 
  "30064771081" -> "30064771080"  [ label = "DDG: a_values"] 
  "30064771084" -> "30064771083"  [ label = "DDG: a_shape"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: a_values-&gt;shape()"] 
  "30064771088" -> "30064771085"  [ label = "DDG: a_shape-&gt;shape()"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771094" -> "30064771093"  [ label = "DDG: a_shape"] 
  "30064771095" -> "30064771093"  [ label = "DDG: b"] 
  "30064771103" -> "30064771102"  [ label = "DDG: i"] 
  "30064771104" -> "30064771102"  [ label = "DDG: b"] 
  "30064771104" -> "30064771102"  [ label = "DDG: i"] 
  "30064771105" -> "146028888067"  [ label = "DDG: errors::InvalidArgument(
          &quot;Dimension &quot;, i,
          &quot; does not equal (no broadcasting is supported): sparse side &quot;,
          a_shape_flat(i), &quot; vs dense side &quot;, b-&gt;dim_size(i))"] 
  "30064771077" -> "30064771076"  [ label = "DDG: a_indices"] 
  "115964116993" -> "30064771081"  [ label = "DDG: a_values"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "115964116994" -> "30064771084"  [ label = "DDG: a_shape"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771087" -> "30064771086"  [ label = "DDG: a_values"] 
  "30064771089" -> "30064771088"  [ label = "DDG: a_shape"] 
  "30064771091" -> "30064771094"  [ label = "DDG: a_shape"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771092" -> "30064771095"  [ label = "DDG: b"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771099" -> "30064771103"  [ label = "DDG: i"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771100" -> "30064771104"  [ label = "DDG: b"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771103" -> "30064771104"  [ label = "DDG: i"] 
  "30064771074" -> "30064771077"  [ label = "DDG: a_indices"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771081" -> "30064771087"  [ label = "DDG: a_values"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "115964116994" -> "30064771089"  [ label = "DDG: a_shape"] 
  "30064771084" -> "30064771089"  [ label = "DDG: a_shape"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771107" -> "30064771105"  [ label = "DDG: i"] 
  "30064771106" -> "30064771105"  [ label = "DDG: i"] 
  "30064771107" -> "30064771105"  [ label = "DDG: b"] 
  "30064771104" -> "30064771106"  [ label = "DDG: i"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771104" -> "30064771107"  [ label = "DDG: b"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771106" -> "30064771107"  [ label = "DDG: i"] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
  "30064771072" -> "30064771081"  [ label = "CDG: "] 
  "30064771072" -> "30064771080"  [ label = "CDG: "] 
  "30064771072" -> "30064771079"  [ label = "CDG: "] 
  "30064771072" -> "30064771078"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771078" -> "146028888065"  [ label = "CDG: "] 
  "30064771078" -> "30064771092"  [ label = "CDG: "] 
  "30064771078" -> "30064771091"  [ label = "CDG: "] 
  "30064771078" -> "30064771090"  [ label = "CDG: "] 
  "30064771078" -> "30064771089"  [ label = "CDG: "] 
  "30064771078" -> "30064771088"  [ label = "CDG: "] 
  "30064771078" -> "30064771087"  [ label = "CDG: "] 
  "30064771078" -> "30064771086"  [ label = "CDG: "] 
  "30064771078" -> "30064771085"  [ label = "CDG: "] 
  "30064771090" -> "146028888066"  [ label = "CDG: "] 
  "30064771090" -> "30064771100"  [ label = "CDG: "] 
  "30064771090" -> "30064771099"  [ label = "CDG: "] 
  "30064771090" -> "30064771098"  [ label = "CDG: "] 
  "30064771090" -> "30064771097"  [ label = "CDG: "] 
  "30064771090" -> "30064771096"  [ label = "CDG: "] 
  "30064771090" -> "30064771095"  [ label = "CDG: "] 
  "30064771090" -> "30064771094"  [ label = "CDG: "] 
  "30064771090" -> "30064771093"  [ label = "CDG: "] 
  "30064771099" -> "146028888068"  [ label = "CDG: "] 
  "30064771099" -> "30064771108"  [ label = "CDG: "] 
  "30064771099" -> "30064771104"  [ label = "CDG: "] 
  "30064771099" -> "30064771103"  [ label = "CDG: "] 
  "30064771099" -> "30064771102"  [ label = "CDG: "] 
  "30064771079" -> "30064771084"  [ label = "CDG: "] 
  "30064771079" -> "30064771083"  [ label = "CDG: "] 
  "30064771079" -> "30064771082"  [ label = "CDG: "] 
  "30064771102" -> "146028888067"  [ label = "CDG: "] 
  "30064771102" -> "30064771107"  [ label = "CDG: "] 
  "30064771102" -> "30064771106"  [ label = "CDG: "] 
  "30064771102" -> "30064771105"  [ label = "CDG: "] 
  "30064771102" -> "30064771101"  [ label = "CDG: "] 
  "30064771102" -> "30064771100"  [ label = "CDG: "] 
  "30064771102" -> "30064771099"  [ label = "CDG: "] 
}
"""
)
