[33mval[0m [36mres102[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "EvalHybridPerChannel" {  
"111669149697" [label = <(METHOD,EvalHybridPerChannel)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,TfLiteContext* context)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,TfLiteNode* node)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,TfLiteConvParams* params)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,OpData* data)<SUB>2</SUB>> ]
"115964116996" [label = <(PARAM,const TfLiteTensor* input)<SUB>3</SUB>> ]
"115964116997" [label = <(PARAM,const TfLiteTensor* filter)<SUB>4</SUB>> ]
"115964116998" [label = <(PARAM,const TfLiteTensor* bias)<SUB>5</SUB>> ]
"115964116999" [label = <(PARAM,TfLiteTensor* im2col)<SUB>6</SUB>> ]
"115964117000" [label = <(PARAM,TfLiteTensor* output)<SUB>6</SUB>> ]
"25769803777" [label = <(BLOCK,{
  float output_activation_min, output_activat...,{
  float output_activation_min, output_activat...)<SUB>6</SUB>> ]
"94489280512" [label = <(LOCAL,float output_activation_min: float)<SUB>7</SUB>> ]
"94489280513" [label = <(LOCAL,float output_activation_max: float)<SUB>7</SUB>> ]
"30064771072" [label = <(CalculateActivationRange,CalculateActivationRange(params-&gt;activation, &amp;o...)<SUB>8</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;activation)<SUB>8</SUB>> ]
"68719476736" [label = <(IDENTIFIER,params,CalculateActivationRange(params-&gt;activation, &amp;o...)<SUB>8</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,activation,activation)<SUB>8</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.addressOf,&amp;output_activation_min)<SUB>8</SUB>> ]
"68719476737" [label = <(IDENTIFIER,output_activation_min,CalculateActivationRange(params-&gt;activation, &amp;o...)<SUB>8</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.addressOf,&amp;output_activation_max)<SUB>9</SUB>> ]
"68719476738" [label = <(IDENTIFIER,output_activation_max,CalculateActivationRange(params-&gt;activation, &amp;o...)<SUB>9</SUB>> ]
"94489280514" [label = <(LOCAL,const int batch_size: int)<SUB>11</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,batch_size = SizeOfDimension(input, 0))<SUB>11</SUB>> ]
"68719476739" [label = <(IDENTIFIER,batch_size,batch_size = SizeOfDimension(input, 0))<SUB>11</SUB>> ]
"30064771077" [label = <(SizeOfDimension,SizeOfDimension(input, 0))<SUB>11</SUB>> ]
"68719476740" [label = <(IDENTIFIER,input,SizeOfDimension(input, 0))<SUB>11</SUB>> ]
"90194313216" [label = <(LITERAL,0,SizeOfDimension(input, 0))<SUB>11</SUB>> ]
"30064771078" [label = <(TF_LITE_ENSURE,TF_LITE_ENSURE(context, batch_size != 0))<SUB>12</SUB>> ]
"68719476741" [label = <(IDENTIFIER,context,TF_LITE_ENSURE(context, batch_size != 0))<SUB>12</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.notEquals,batch_size != 0)<SUB>12</SUB>> ]
"68719476742" [label = <(IDENTIFIER,batch_size,batch_size != 0)<SUB>12</SUB>> ]
"90194313217" [label = <(LITERAL,0,batch_size != 0)<SUB>12</SUB>> ]
"94489280515" [label = <(LOCAL,const int input_size: int)<SUB>13</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,input_size = NumElements(input) / batch_size)<SUB>13</SUB>> ]
"68719476743" [label = <(IDENTIFIER,input_size,input_size = NumElements(input) / batch_size)<SUB>13</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.division,NumElements(input) / batch_size)<SUB>13</SUB>> ]
"30064771082" [label = <(NumElements,NumElements(input))<SUB>13</SUB>> ]
"68719476744" [label = <(IDENTIFIER,input,NumElements(input))<SUB>13</SUB>> ]
"68719476745" [label = <(IDENTIFIER,batch_size,NumElements(input) / batch_size)<SUB>13</SUB>> ]
"94489280516" [label = <(LOCAL,TfLiteTensor* quantized_input_tensor: TfLiteTensor*)<SUB>14</SUB>> ]
"30064771083" [label = <(TF_LITE_ENSURE_OK,TF_LITE_ENSURE_OK(context,
                    ...)<SUB>15</SUB>> ]
"68719476746" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_OK(context,
                    ...)<SUB>15</SUB>> ]
"30064771084" [label = <(GetTemporarySafe,GetTemporarySafe(context, node, data-&gt;input_qua...)<SUB>16</SUB>> ]
"68719476747" [label = <(IDENTIFIER,context,GetTemporarySafe(context, node, data-&gt;input_qua...)<SUB>16</SUB>> ]
"68719476748" [label = <(IDENTIFIER,node,GetTemporarySafe(context, node, data-&gt;input_qua...)<SUB>16</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;input_quantized_index)<SUB>16</SUB>> ]
"68719476749" [label = <(IDENTIFIER,data,GetTemporarySafe(context, node, data-&gt;input_qua...)<SUB>16</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,input_quantized_index,input_quantized_index)<SUB>16</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.addressOf,&amp;quantized_input_tensor)<SUB>17</SUB>> ]
"68719476750" [label = <(IDENTIFIER,quantized_input_tensor,GetTemporarySafe(context, node, data-&gt;input_qua...)<SUB>17</SUB>> ]
"94489280517" [label = <(LOCAL,int8_t* quantized_input_ptr_batch: int8_t*)<SUB>18</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,* quantized_input_ptr_batch =
      GetTensorDa...)<SUB>18</SUB>> ]
"68719476751" [label = <(IDENTIFIER,quantized_input_ptr_batch,* quantized_input_ptr_batch =
      GetTensorDa...)<SUB>18</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int8_t&gt;(quantized_input_tensor))<SUB>19</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int8_t)<SUB>19</SUB>> ]
"68719476752" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int8_t)<SUB>19</SUB>> ]
"68719476753" [label = <(IDENTIFIER,int8_t,GetTensorData&lt;int8_t)<SUB>19</SUB>> ]
"68719476754" [label = <(IDENTIFIER,quantized_input_tensor,GetTensorData&lt;int8_t&gt;(quantized_input_tensor))<SUB>19</SUB>> ]
"94489280518" [label = <(LOCAL,TfLiteTensor* scaling_factors_tensor: TfLiteTensor*)<SUB>20</SUB>> ]
"30064771090" [label = <(TF_LITE_ENSURE_OK,TF_LITE_ENSURE_OK(context,
                    ...)<SUB>21</SUB>> ]
"68719476755" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_OK(context,
                    ...)<SUB>21</SUB>> ]
"30064771091" [label = <(GetTemporarySafe,GetTemporarySafe(context, node, data-&gt;scaling_f...)<SUB>22</SUB>> ]
"68719476756" [label = <(IDENTIFIER,context,GetTemporarySafe(context, node, data-&gt;scaling_f...)<SUB>22</SUB>> ]
"68719476757" [label = <(IDENTIFIER,node,GetTemporarySafe(context, node, data-&gt;scaling_f...)<SUB>22</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;scaling_factors_index)<SUB>22</SUB>> ]
"68719476758" [label = <(IDENTIFIER,data,GetTemporarySafe(context, node, data-&gt;scaling_f...)<SUB>22</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,scaling_factors_index,scaling_factors_index)<SUB>22</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.addressOf,&amp;scaling_factors_tensor)<SUB>23</SUB>> ]
"68719476759" [label = <(IDENTIFIER,scaling_factors_tensor,GetTemporarySafe(context, node, data-&gt;scaling_f...)<SUB>23</SUB>> ]
"94489280519" [label = <(LOCAL,float* scaling_factors_ptr: float*)<SUB>24</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,* scaling_factors_ptr = GetTensorData&lt;float&gt;(sc...)<SUB>24</SUB>> ]
"68719476760" [label = <(IDENTIFIER,scaling_factors_ptr,* scaling_factors_ptr = GetTensorData&lt;float&gt;(sc...)<SUB>24</SUB>> ]
"30064771095" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(scaling_factors_tensor))<SUB>24</SUB>> ]
"68719476761" [label = <(IDENTIFIER,scaling_factors_tensor,GetTensorData&lt;float&gt;(scaling_factors_tensor))<SUB>24</SUB>> ]
"94489280520" [label = <(LOCAL,TfLiteTensor* input_offset_tensor: TfLiteTensor*)<SUB>25</SUB>> ]
"30064771096" [label = <(TF_LITE_ENSURE_OK,TF_LITE_ENSURE_OK(context,
                    ...)<SUB>26</SUB>> ]
"68719476762" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_OK(context,
                    ...)<SUB>26</SUB>> ]
"30064771097" [label = <(GetTemporarySafe,GetTemporarySafe(context, node, data-&gt;input_off...)<SUB>27</SUB>> ]
"68719476763" [label = <(IDENTIFIER,context,GetTemporarySafe(context, node, data-&gt;input_off...)<SUB>27</SUB>> ]
"68719476764" [label = <(IDENTIFIER,node,GetTemporarySafe(context, node, data-&gt;input_off...)<SUB>27</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;input_offset_index)<SUB>27</SUB>> ]
"68719476765" [label = <(IDENTIFIER,data,GetTemporarySafe(context, node, data-&gt;input_off...)<SUB>27</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,input_offset_index,input_offset_index)<SUB>27</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.addressOf,&amp;input_offset_tensor)<SUB>28</SUB>> ]
"68719476766" [label = <(IDENTIFIER,input_offset_tensor,GetTemporarySafe(context, node, data-&gt;input_off...)<SUB>28</SUB>> ]
"94489280521" [label = <(LOCAL,int32_t* input_offset_ptr: int32_t*)<SUB>29</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.assignment,* input_offset_ptr = GetTensorData&lt;int32_t&gt;(inp...)<SUB>29</SUB>> ]
"68719476767" [label = <(IDENTIFIER,input_offset_ptr,* input_offset_ptr = GetTensorData&lt;int32_t&gt;(inp...)<SUB>29</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int32_t&gt;(input_offset_tensor))<SUB>29</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int32_t)<SUB>29</SUB>> ]
"68719476768" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int32_t)<SUB>29</SUB>> ]
"68719476769" [label = <(IDENTIFIER,int32_t,GetTensorData&lt;int32_t)<SUB>29</SUB>> ]
"68719476770" [label = <(IDENTIFIER,input_offset_tensor,GetTensorData&lt;int32_t&gt;(input_offset_tensor))<SUB>29</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (int b = 0;b &lt; batch_size;++b))<SUB>31</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>> ]
"94489280522" [label = <(LOCAL,int b: int)<SUB>31</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,b = 0)<SUB>31</SUB>> ]
"68719476771" [label = <(IDENTIFIER,b,b = 0)<SUB>31</SUB>> ]
"90194313218" [label = <(LITERAL,0,b = 0)<SUB>31</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.lessThan,b &lt; batch_size)<SUB>31</SUB>> ]
"68719476772" [label = <(IDENTIFIER,b,b &lt; batch_size)<SUB>31</SUB>> ]
"68719476773" [label = <(IDENTIFIER,batch_size,b &lt; batch_size)<SUB>31</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.preIncrement,++b)<SUB>31</SUB>> ]
"68719476774" [label = <(IDENTIFIER,b,++b)<SUB>31</SUB>> ]
"25769803779" [label = <(BLOCK,{
    const int offset = b * input_size;
    te...,{
    const int offset = b * input_size;
    te...)<SUB>31</SUB>> ]
"94489280523" [label = <(LOCAL,const int offset: int)<SUB>32</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.assignment,offset = b * input_size)<SUB>32</SUB>> ]
"68719476775" [label = <(IDENTIFIER,offset,offset = b * input_size)<SUB>32</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.multiplication,b * input_size)<SUB>32</SUB>> ]
"68719476776" [label = <(IDENTIFIER,b,b * input_size)<SUB>32</SUB>> ]
"68719476777" [label = <(IDENTIFIER,input_size,b * input_size)<SUB>32</SUB>> ]
"30064771108" [label = <(AsymmetricQuantizeFloats,tensor_utils::AsymmetricQuantizeFloats(
       ...)<SUB>33</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.addition,GetTensorData&lt;float&gt;(input) + offset)<SUB>34</SUB>> ]
"30064771110" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(input))<SUB>34</SUB>> ]
"68719476778" [label = <(IDENTIFIER,input,GetTensorData&lt;float&gt;(input))<SUB>34</SUB>> ]
"68719476779" [label = <(IDENTIFIER,offset,GetTensorData&lt;float&gt;(input) + offset)<SUB>34</SUB>> ]
"68719476780" [label = <(IDENTIFIER,input_size,tensor_utils::AsymmetricQuantizeFloats(
       ...)<SUB>34</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.addition,quantized_input_ptr_batch + offset)<SUB>35</SUB>> ]
"68719476781" [label = <(IDENTIFIER,quantized_input_ptr_batch,quantized_input_ptr_batch + offset)<SUB>35</SUB>> ]
"68719476782" [label = <(IDENTIFIER,offset,quantized_input_ptr_batch + offset)<SUB>35</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.addressOf,&amp;scaling_factors_ptr[b])<SUB>35</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.indirectIndexAccess,scaling_factors_ptr[b])<SUB>35</SUB>> ]
"68719476783" [label = <(IDENTIFIER,scaling_factors_ptr,tensor_utils::AsymmetricQuantizeFloats(
       ...)<SUB>35</SUB>> ]
"68719476784" [label = <(IDENTIFIER,b,tensor_utils::AsymmetricQuantizeFloats(
       ...)<SUB>35</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.addressOf,&amp;input_offset_ptr[b])<SUB>36</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.indirectIndexAccess,input_offset_ptr[b])<SUB>36</SUB>> ]
"68719476785" [label = <(IDENTIFIER,input_offset_ptr,tensor_utils::AsymmetricQuantizeFloats(
       ...)<SUB>36</SUB>> ]
"68719476786" [label = <(IDENTIFIER,b,tensor_utils::AsymmetricQuantizeFloats(
       ...)<SUB>36</SUB>> ]
"94489280524" [label = <(LOCAL,int8_t* im2col_ptr: int8_t*)<SUB>39</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.assignment,* im2col_ptr = nullptr)<SUB>39</SUB>> ]
"68719476787" [label = <(IDENTIFIER,im2col_ptr,* im2col_ptr = nullptr)<SUB>39</SUB>> ]
"90194313219" [label = <(LITERAL,nullptr,* im2col_ptr = nullptr)<SUB>39</SUB>> ]
"94489280525" [label = <(LOCAL,int8_t* filter_ptr: int8_t*)<SUB>40</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,* filter_ptr = nullptr)<SUB>40</SUB>> ]
"68719476788" [label = <(IDENTIFIER,filter_ptr,* filter_ptr = nullptr)<SUB>40</SUB>> ]
"90194313220" [label = <(LITERAL,nullptr,* filter_ptr = nullptr)<SUB>40</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (im2col != nullptr))<SUB>41</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.notEquals,im2col != nullptr)<SUB>41</SUB>> ]
"68719476789" [label = <(IDENTIFIER,im2col,im2col != nullptr)<SUB>41</SUB>> ]
"90194313221" [label = <(LITERAL,nullptr,im2col != nullptr)<SUB>41</SUB>> ]
"25769803780" [label = <(BLOCK,{
    im2col_ptr = im2col-&gt;data.int8;
  },{
    im2col_ptr = im2col-&gt;data.int8;
  })<SUB>41</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.assignment,im2col_ptr = im2col-&gt;data.int8)<SUB>42</SUB>> ]
"68719476790" [label = <(IDENTIFIER,im2col_ptr,im2col_ptr = im2col-&gt;data.int8)<SUB>42</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.fieldAccess,im2col-&gt;data.int8)<SUB>42</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.indirectFieldAccess,im2col-&gt;data)<SUB>42</SUB>> ]
"68719476791" [label = <(IDENTIFIER,im2col,im2col_ptr = im2col-&gt;data.int8)<SUB>42</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,data,data)<SUB>42</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,int8,int8)<SUB>42</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.assignment,filter_ptr = filter-&gt;data.int8)<SUB>44</SUB>> ]
"68719476792" [label = <(IDENTIFIER,filter_ptr,filter_ptr = filter-&gt;data.int8)<SUB>44</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.fieldAccess,filter-&gt;data.int8)<SUB>44</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.indirectFieldAccess,filter-&gt;data)<SUB>44</SUB>> ]
"68719476793" [label = <(IDENTIFIER,filter,filter_ptr = filter-&gt;data.int8)<SUB>44</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,data,data)<SUB>44</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,int8,int8)<SUB>44</SUB>> ]
"94489280526" [label = <(LOCAL,const auto* affine_quantization: auto*)<SUB>45</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.assignment,* affine_quantization =
      reinterpret_cast&lt;...)<SUB>45</SUB>> ]
"68719476794" [label = <(IDENTIFIER,affine_quantization,* affine_quantization =
      reinterpret_cast&lt;...)<SUB>45</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;TfLiteAffineQuantization*&gt;(fil...)<SUB>46</SUB>> ]
"184683593728" [label = <(UNKNOWN,TfLiteAffineQuantization*,TfLiteAffineQuantization*)<SUB>46</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.fieldAccess,filter-&gt;quantization.params)<SUB>46</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.indirectFieldAccess,filter-&gt;quantization)<SUB>46</SUB>> ]
"68719476795" [label = <(IDENTIFIER,filter,reinterpret_cast&lt;TfLiteAffineQuantization*&gt;(fil...)<SUB>46</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,quantization,quantization)<SUB>46</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,params,params)<SUB>46</SUB>> ]
"94489280527" [label = <(LOCAL,KernelType effective_kernel_type: KernelType)<SUB>48</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.assignment,effective_kernel_type = kernel_type)<SUB>48</SUB>> ]
"68719476796" [label = <(IDENTIFIER,effective_kernel_type,effective_kernel_type = kernel_type)<SUB>48</SUB>> ]
"68719476797" [label = <(IDENTIFIER,kernel_type,effective_kernel_type = kernel_type)<SUB>48</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (data-&gt;im2col_oversized))<SUB>52</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;im2col_oversized)<SUB>52</SUB>> ]
"68719476798" [label = <(IDENTIFIER,data,if (data-&gt;im2col_oversized))<SUB>52</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,im2col_oversized,im2col_oversized)<SUB>52</SUB>> ]
"25769803781" [label = <(BLOCK,{
    effective_kernel_type = kReference;
  },{
    effective_kernel_type = kReference;
  })<SUB>52</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.assignment,effective_kernel_type = kReference)<SUB>53</SUB>> ]
"68719476799" [label = <(IDENTIFIER,effective_kernel_type,effective_kernel_type = kReference)<SUB>53</SUB>> ]
"68719476800" [label = <(IDENTIFIER,kReference,effective_kernel_type = kReference)<SUB>53</SUB>> ]
"94489280528" [label = <(LOCAL,ConvParams op_params: ConvParams)<SUB>56</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.assignment,op_params.padding_type = PaddingType::kSame)<SUB>57</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.fieldAccess,op_params.padding_type)<SUB>57</SUB>> ]
"68719476801" [label = <(IDENTIFIER,op_params,op_params.padding_type = PaddingType::kSame)<SUB>57</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,padding_type,padding_type)<SUB>57</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.fieldAccess,PaddingType::kSame)<SUB>57</SUB>> ]
"68719476802" [label = <(IDENTIFIER,PaddingType,op_params.padding_type = PaddingType::kSame)<SUB>57</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,kSame,kSame)<SUB>57</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.assignment,op_params.padding_values.width = data-&gt;padding....)<SUB>58</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.fieldAccess,op_params.padding_values.width)<SUB>58</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.fieldAccess,op_params.padding_values)<SUB>58</SUB>> ]
"68719476803" [label = <(IDENTIFIER,op_params,op_params.padding_values.width = data-&gt;padding....)<SUB>58</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,padding_values,padding_values)<SUB>58</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,width,width)<SUB>58</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.fieldAccess,data-&gt;padding.width)<SUB>58</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;padding)<SUB>58</SUB>> ]
"68719476804" [label = <(IDENTIFIER,data,op_params.padding_values.width = data-&gt;padding....)<SUB>58</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,padding,padding)<SUB>58</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,width,width)<SUB>58</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.assignment,op_params.padding_values.height = data-&gt;padding...)<SUB>59</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.fieldAccess,op_params.padding_values.height)<SUB>59</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.fieldAccess,op_params.padding_values)<SUB>59</SUB>> ]
"68719476805" [label = <(IDENTIFIER,op_params,op_params.padding_values.height = data-&gt;padding...)<SUB>59</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,padding_values,padding_values)<SUB>59</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,height,height)<SUB>59</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.fieldAccess,data-&gt;padding.height)<SUB>59</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;padding)<SUB>59</SUB>> ]
"68719476806" [label = <(IDENTIFIER,data,op_params.padding_values.height = data-&gt;padding...)<SUB>59</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,padding,padding)<SUB>59</SUB>> ]
"55834574868" [label = <(FIELD_IDENTIFIER,height,height)<SUB>59</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.assignment,op_params.dilation_width_factor = params-&gt;dilat...)<SUB>60</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.fieldAccess,op_params.dilation_width_factor)<SUB>60</SUB>> ]
"68719476807" [label = <(IDENTIFIER,op_params,op_params.dilation_width_factor = params-&gt;dilat...)<SUB>60</SUB>> ]
"55834574869" [label = <(FIELD_IDENTIFIER,dilation_width_factor,dilation_width_factor)<SUB>60</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;dilation_width_factor)<SUB>60</SUB>> ]
"68719476808" [label = <(IDENTIFIER,params,op_params.dilation_width_factor = params-&gt;dilat...)<SUB>60</SUB>> ]
"55834574870" [label = <(FIELD_IDENTIFIER,dilation_width_factor,dilation_width_factor)<SUB>60</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.assignment,op_params.dilation_height_factor = params-&gt;dila...)<SUB>61</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.fieldAccess,op_params.dilation_height_factor)<SUB>61</SUB>> ]
"68719476809" [label = <(IDENTIFIER,op_params,op_params.dilation_height_factor = params-&gt;dila...)<SUB>61</SUB>> ]
"55834574871" [label = <(FIELD_IDENTIFIER,dilation_height_factor,dilation_height_factor)<SUB>61</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;dilation_height_factor)<SUB>61</SUB>> ]
"68719476810" [label = <(IDENTIFIER,params,op_params.dilation_height_factor = params-&gt;dila...)<SUB>61</SUB>> ]
"55834574872" [label = <(FIELD_IDENTIFIER,dilation_height_factor,dilation_height_factor)<SUB>61</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.assignment,op_params.stride_width = params-&gt;stride_width)<SUB>62</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.fieldAccess,op_params.stride_width)<SUB>62</SUB>> ]
"68719476811" [label = <(IDENTIFIER,op_params,op_params.stride_width = params-&gt;stride_width)<SUB>62</SUB>> ]
"55834574873" [label = <(FIELD_IDENTIFIER,stride_width,stride_width)<SUB>62</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;stride_width)<SUB>62</SUB>> ]
"68719476812" [label = <(IDENTIFIER,params,op_params.stride_width = params-&gt;stride_width)<SUB>62</SUB>> ]
"55834574874" [label = <(FIELD_IDENTIFIER,stride_width,stride_width)<SUB>62</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.assignment,op_params.stride_height = params-&gt;stride_height)<SUB>63</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.fieldAccess,op_params.stride_height)<SUB>63</SUB>> ]
"68719476813" [label = <(IDENTIFIER,op_params,op_params.stride_height = params-&gt;stride_height)<SUB>63</SUB>> ]
"55834574875" [label = <(FIELD_IDENTIFIER,stride_height,stride_height)<SUB>63</SUB>> ]
"30064771156" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;stride_height)<SUB>63</SUB>> ]
"68719476814" [label = <(IDENTIFIER,params,op_params.stride_height = params-&gt;stride_height)<SUB>63</SUB>> ]
"55834574876" [label = <(FIELD_IDENTIFIER,stride_height,stride_height)<SUB>63</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.assignment,op_params.float_activation_min = output_activat...)<SUB>64</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.fieldAccess,op_params.float_activation_min)<SUB>64</SUB>> ]
"68719476815" [label = <(IDENTIFIER,op_params,op_params.float_activation_min = output_activat...)<SUB>64</SUB>> ]
"55834574877" [label = <(FIELD_IDENTIFIER,float_activation_min,float_activation_min)<SUB>64</SUB>> ]
"68719476816" [label = <(IDENTIFIER,output_activation_min,op_params.float_activation_min = output_activat...)<SUB>64</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.assignment,op_params.float_activation_max = output_activat...)<SUB>65</SUB>> ]
"30064771160" [label = <(&lt;operator&gt;.fieldAccess,op_params.float_activation_max)<SUB>65</SUB>> ]
"68719476817" [label = <(IDENTIFIER,op_params,op_params.float_activation_max = output_activat...)<SUB>65</SUB>> ]
"55834574878" [label = <(FIELD_IDENTIFIER,float_activation_max,float_activation_max)<SUB>65</SUB>> ]
"68719476818" [label = <(IDENTIFIER,output_activation_max,op_params.float_activation_max = output_activat...)<SUB>65</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,SWITCH,switch(effective_kernel_type))<SUB>66</SUB>> ]
"68719476819" [label = <(IDENTIFIER,effective_kernel_type,switch(effective_kernel_type))<SUB>66</SUB>> ]
"25769803782" [label = <(BLOCK,{
    case kReference:
      reference_ops::Hyb...,{
    case kReference:
      reference_ops::Hyb...)<SUB>66</SUB>> ]
"81604378624" [label = <(JUMP_TARGET,case)<SUB>67</SUB>> ]
"68719476820" [label = <(IDENTIFIER,kReference,{
    case kReference:
      reference_ops::Hyb...)<SUB>67</SUB>> ]
"30064771161" [label = <(HybridConvPerChannel,reference_ops::HybridConvPerChannel(
          ...)<SUB>68</SUB>> ]
"68719476821" [label = <(IDENTIFIER,op_params,reference_ops::HybridConvPerChannel(
          ...)<SUB>69</SUB>> ]
"68719476822" [label = <(IDENTIFIER,scaling_factors_ptr,reference_ops::HybridConvPerChannel(
          ...)<SUB>69</SUB>> ]
"30064771162" [label = <(GetTensorShape,GetTensorShape(input))<SUB>69</SUB>> ]
"68719476823" [label = <(IDENTIFIER,input,GetTensorShape(input))<SUB>69</SUB>> ]
"68719476824" [label = <(IDENTIFIER,quantized_input_ptr_batch,reference_ops::HybridConvPerChannel(
          ...)<SUB>70</SUB>> ]
"30064771163" [label = <(GetTensorShape,GetTensorShape(filter))<SUB>70</SUB>> ]
"68719476825" [label = <(IDENTIFIER,filter,GetTensorShape(filter))<SUB>70</SUB>> ]
"68719476826" [label = <(IDENTIFIER,filter_ptr,reference_ops::HybridConvPerChannel(
          ...)<SUB>70</SUB>> ]
"30064771164" [label = <(GetTensorShape,GetTensorShape(bias))<SUB>71</SUB>> ]
"68719476827" [label = <(IDENTIFIER,bias,GetTensorShape(bias))<SUB>71</SUB>> ]
"30064771165" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(bias))<SUB>71</SUB>> ]
"68719476828" [label = <(IDENTIFIER,bias,GetTensorData&lt;float&gt;(bias))<SUB>71</SUB>> ]
"30064771166" [label = <(GetTensorShape,GetTensorShape(output))<SUB>72</SUB>> ]
"68719476829" [label = <(IDENTIFIER,output,GetTensorShape(output))<SUB>72</SUB>> ]
"30064771167" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(output))<SUB>72</SUB>> ]
"68719476830" [label = <(IDENTIFIER,output,GetTensorData&lt;float&gt;(output))<SUB>72</SUB>> ]
"30064771168" [label = <(GetTensorShape,GetTensorShape(im2col))<SUB>73</SUB>> ]
"68719476831" [label = <(IDENTIFIER,im2col,GetTensorShape(im2col))<SUB>73</SUB>> ]
"68719476832" [label = <(IDENTIFIER,im2col_ptr,reference_ops::HybridConvPerChannel(
          ...)<SUB>73</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.indirectFieldAccess,affine_quantization-&gt;scale-&gt;data)<SUB>73</SUB>> ]
"30064771170" [label = <(&lt;operator&gt;.indirectFieldAccess,affine_quantization-&gt;scale)<SUB>73</SUB>> ]
"68719476833" [label = <(IDENTIFIER,affine_quantization,reference_ops::HybridConvPerChannel(
          ...)<SUB>73</SUB>> ]
"55834574879" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>73</SUB>> ]
"55834574880" [label = <(FIELD_IDENTIFIER,data,data)<SUB>73</SUB>> ]
"68719476834" [label = <(IDENTIFIER,input_offset_ptr,reference_ops::HybridConvPerChannel(
          ...)<SUB>74</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,BREAK,break;)<SUB>75</SUB>> ]
"81604378625" [label = <(JUMP_TARGET,case)<SUB>76</SUB>> ]
"68719476835" [label = <(IDENTIFIER,kGenericOptimized,{
    case kReference:
      reference_ops::Hyb...)<SUB>76</SUB>> ]
"81604378626" [label = <(JUMP_TARGET,case)<SUB>77</SUB>> ]
"68719476836" [label = <(IDENTIFIER,kMultithreadOptimized,{
    case kReference:
      reference_ops::Hyb...)<SUB>77</SUB>> ]
"81604378627" [label = <(JUMP_TARGET,case)<SUB>78</SUB>> ]
"68719476837" [label = <(IDENTIFIER,kCblasOptimized,{
    case kReference:
      reference_ops::Hyb...)<SUB>78</SUB>> ]
"25769803783" [label = <(BLOCK,{
      TfLiteTensor* row_sums;
      TF_LITE_E...,{
      TfLiteTensor* row_sums;
      TF_LITE_E...)<SUB>78</SUB>> ]
"94489280529" [label = <(LOCAL,TfLiteTensor* row_sums: TfLiteTensor*)<SUB>79</SUB>> ]
"30064771171" [label = <(TF_LITE_ENSURE_OK,TF_LITE_ENSURE_OK(
          context,
         ...)<SUB>80</SUB>> ]
"68719476838" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_OK(
          context,
         ...)<SUB>81</SUB>> ]
"30064771172" [label = <(GetTemporarySafe,GetTemporarySafe(context, node, data-&gt;row_sums_...)<SUB>82</SUB>> ]
"68719476839" [label = <(IDENTIFIER,context,GetTemporarySafe(context, node, data-&gt;row_sums_...)<SUB>82</SUB>> ]
"68719476840" [label = <(IDENTIFIER,node,GetTemporarySafe(context, node, data-&gt;row_sums_...)<SUB>82</SUB>> ]
"30064771173" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;row_sums_index)<SUB>82</SUB>> ]
"68719476841" [label = <(IDENTIFIER,data,GetTemporarySafe(context, node, data-&gt;row_sums_...)<SUB>82</SUB>> ]
"55834574881" [label = <(FIELD_IDENTIFIER,row_sums_index,row_sums_index)<SUB>82</SUB>> ]
"30064771174" [label = <(&lt;operator&gt;.addressOf,&amp;row_sums)<SUB>82</SUB>> ]
"68719476842" [label = <(IDENTIFIER,row_sums,GetTemporarySafe(context, node, data-&gt;row_sums_...)<SUB>82</SUB>> ]
"94489280530" [label = <(LOCAL,TfLiteTensor* scratch: TfLiteTensor*)<SUB>83</SUB>> ]
"30064771175" [label = <(TF_LITE_ENSURE_OK,TF_LITE_ENSURE_OK(
          context,
         ...)<SUB>84</SUB>> ]
"68719476843" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_OK(
          context,
         ...)<SUB>85</SUB>> ]
"30064771176" [label = <(GetTemporarySafe,GetTemporarySafe(context, node, data-&gt;accum_scr...)<SUB>86</SUB>> ]
"68719476844" [label = <(IDENTIFIER,context,GetTemporarySafe(context, node, data-&gt;accum_scr...)<SUB>86</SUB>> ]
"68719476845" [label = <(IDENTIFIER,node,GetTemporarySafe(context, node, data-&gt;accum_scr...)<SUB>86</SUB>> ]
"30064771177" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;accum_scratch_index)<SUB>86</SUB>> ]
"68719476846" [label = <(IDENTIFIER,data,GetTemporarySafe(context, node, data-&gt;accum_scr...)<SUB>86</SUB>> ]
"55834574882" [label = <(FIELD_IDENTIFIER,accum_scratch_index,accum_scratch_index)<SUB>86</SUB>> ]
"30064771178" [label = <(&lt;operator&gt;.addressOf,&amp;scratch)<SUB>86</SUB>> ]
"68719476847" [label = <(IDENTIFIER,scratch,GetTemporarySafe(context, node, data-&gt;accum_scr...)<SUB>86</SUB>> ]
"30064771179" [label = <(HybridConvPerChannel,optimized_ops::HybridConvPerChannel(
          ...)<SUB>87</SUB>> ]
"68719476848" [label = <(IDENTIFIER,op_params,optimized_ops::HybridConvPerChannel(
          ...)<SUB>88</SUB>> ]
"68719476849" [label = <(IDENTIFIER,scaling_factors_ptr,optimized_ops::HybridConvPerChannel(
          ...)<SUB>88</SUB>> ]
"30064771180" [label = <(GetTensorShape,GetTensorShape(input))<SUB>88</SUB>> ]
"68719476850" [label = <(IDENTIFIER,input,GetTensorShape(input))<SUB>88</SUB>> ]
"68719476851" [label = <(IDENTIFIER,quantized_input_ptr_batch,optimized_ops::HybridConvPerChannel(
          ...)<SUB>89</SUB>> ]
"30064771181" [label = <(GetTensorShape,GetTensorShape(filter))<SUB>89</SUB>> ]
"68719476852" [label = <(IDENTIFIER,filter,GetTensorShape(filter))<SUB>89</SUB>> ]
"68719476853" [label = <(IDENTIFIER,filter_ptr,optimized_ops::HybridConvPerChannel(
          ...)<SUB>89</SUB>> ]
"30064771182" [label = <(GetTensorShape,GetTensorShape(bias))<SUB>90</SUB>> ]
"68719476854" [label = <(IDENTIFIER,bias,GetTensorShape(bias))<SUB>90</SUB>> ]
"30064771183" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(bias))<SUB>90</SUB>> ]
"68719476855" [label = <(IDENTIFIER,bias,GetTensorData&lt;float&gt;(bias))<SUB>90</SUB>> ]
"30064771184" [label = <(GetTensorShape,GetTensorShape(output))<SUB>91</SUB>> ]
"68719476856" [label = <(IDENTIFIER,output,GetTensorShape(output))<SUB>91</SUB>> ]
"30064771185" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(output))<SUB>91</SUB>> ]
"68719476857" [label = <(IDENTIFIER,output,GetTensorData&lt;float&gt;(output))<SUB>91</SUB>> ]
"30064771186" [label = <(GetTensorShape,GetTensorShape(im2col))<SUB>92</SUB>> ]
"68719476858" [label = <(IDENTIFIER,im2col,GetTensorShape(im2col))<SUB>92</SUB>> ]
"68719476859" [label = <(IDENTIFIER,im2col_ptr,optimized_ops::HybridConvPerChannel(
          ...)<SUB>92</SUB>> ]
"30064771187" [label = <(&lt;operator&gt;.indirectFieldAccess,affine_quantization-&gt;scale-&gt;data)<SUB>92</SUB>> ]
"30064771188" [label = <(&lt;operator&gt;.indirectFieldAccess,affine_quantization-&gt;scale)<SUB>92</SUB>> ]
"68719476860" [label = <(IDENTIFIER,affine_quantization,optimized_ops::HybridConvPerChannel(
          ...)<SUB>92</SUB>> ]
"55834574883" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>92</SUB>> ]
"55834574884" [label = <(FIELD_IDENTIFIER,data,data)<SUB>92</SUB>> ]
"68719476861" [label = <(IDENTIFIER,input_offset_ptr,optimized_ops::HybridConvPerChannel(
          ...)<SUB>93</SUB>> ]
"30064771189" [label = <(GetTensorShape,GetTensorShape(scratch))<SUB>93</SUB>> ]
"68719476862" [label = <(IDENTIFIER,scratch,GetTensorShape(scratch))<SUB>93</SUB>> ]
"30064771190" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int32&gt;(scratch))<SUB>94</SUB>> ]
"30064771191" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int32)<SUB>94</SUB>> ]
"68719476863" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int32)<SUB>94</SUB>> ]
"68719476864" [label = <(IDENTIFIER,int32,GetTensorData&lt;int32)<SUB>94</SUB>> ]
"68719476865" [label = <(IDENTIFIER,scratch,GetTensorData&lt;int32&gt;(scratch))<SUB>94</SUB>> ]
"30064771192" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int32_t&gt;(row_sums))<SUB>94</SUB>> ]
"30064771193" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int32_t)<SUB>94</SUB>> ]
"68719476866" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int32_t)<SUB>94</SUB>> ]
"68719476867" [label = <(IDENTIFIER,int32_t,GetTensorData&lt;int32_t)<SUB>94</SUB>> ]
"68719476868" [label = <(IDENTIFIER,row_sums,GetTensorData&lt;int32_t&gt;(row_sums))<SUB>94</SUB>> ]
"30064771194" [label = <(&lt;operator&gt;.addressOf,&amp;data-&gt;compute_hybrid_row_sums)<SUB>95</SUB>> ]
"30064771195" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;compute_hybrid_row_sums)<SUB>95</SUB>> ]
"68719476869" [label = <(IDENTIFIER,data,optimized_ops::HybridConvPerChannel(
          ...)<SUB>95</SUB>> ]
"55834574885" [label = <(FIELD_IDENTIFIER,compute_hybrid_row_sums,compute_hybrid_row_sums)<SUB>95</SUB>> ]
"30064771196" [label = <(GetFromContext,CpuBackendContext::GetFromContext(context))<SUB>96</SUB>> ]
"68719476870" [label = <(IDENTIFIER,context,CpuBackendContext::GetFromContext(context))<SUB>96</SUB>> ]
"30064771197" [label = <(&lt;operator&gt;.assignment,data-&gt;compute_hybrid_row_sums = false)<SUB>97</SUB>> ]
"30064771198" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;compute_hybrid_row_sums)<SUB>97</SUB>> ]
"68719476871" [label = <(IDENTIFIER,data,data-&gt;compute_hybrid_row_sums = false)<SUB>97</SUB>> ]
"55834574886" [label = <(FIELD_IDENTIFIER,compute_hybrid_row_sums,compute_hybrid_row_sums)<SUB>97</SUB>> ]
"90194313222" [label = <(LITERAL,false,data-&gt;compute_hybrid_row_sums = false)<SUB>97</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,BREAK,break;)<SUB>98</SUB>> ]
"146028888064" [label = <(RETURN,return kTfLiteOk;,return kTfLiteOk;)<SUB>102</SUB>> ]
"68719476872" [label = <(IDENTIFIER,kTfLiteOk,return kTfLiteOk;)<SUB>102</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,TfLiteStatus)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "115964116998"  [ label = "AST: "] 
  "111669149697" -> "115964116999"  [ label = "AST: "] 
  "111669149697" -> "115964117000"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771094"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "30064771100"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "30064771116"  [ label = "AST: "] 
  "25769803777" -> "94489280525"  [ label = "AST: "] 
  "25769803777" -> "30064771117"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "30064771122"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "30064771125"  [ label = "AST: "] 
  "25769803777" -> "94489280527"  [ label = "AST: "] 
  "25769803777" -> "30064771129"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "94489280528"  [ label = "AST: "] 
  "25769803777" -> "30064771132"  [ label = "AST: "] 
  "25769803777" -> "30064771135"  [ label = "AST: "] 
  "25769803777" -> "30064771140"  [ label = "AST: "] 
  "25769803777" -> "30064771145"  [ label = "AST: "] 
  "25769803777" -> "30064771148"  [ label = "AST: "] 
  "25769803777" -> "30064771151"  [ label = "AST: "] 
  "25769803777" -> "30064771154"  [ label = "AST: "] 
  "25769803777" -> "30064771157"  [ label = "AST: "] 
  "25769803777" -> "30064771159"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "90194313216"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "90194313217"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476747"  [ label = "AST: "] 
  "30064771084" -> "68719476748"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "68719476749"  [ label = "AST: "] 
  "30064771085" -> "55834574849"  [ label = "AST: "] 
  "30064771086" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "68719476751"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "68719476754"  [ label = "AST: "] 
  "30064771089" -> "68719476752"  [ label = "AST: "] 
  "30064771089" -> "68719476753"  [ label = "AST: "] 
  "30064771090" -> "68719476755"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476756"  [ label = "AST: "] 
  "30064771091" -> "68719476757"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "68719476758"  [ label = "AST: "] 
  "30064771092" -> "55834574850"  [ label = "AST: "] 
  "30064771093" -> "68719476759"  [ label = "AST: "] 
  "30064771094" -> "68719476760"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476761"  [ label = "AST: "] 
  "30064771096" -> "68719476762"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476763"  [ label = "AST: "] 
  "30064771097" -> "68719476764"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "68719476765"  [ label = "AST: "] 
  "30064771098" -> "55834574851"  [ label = "AST: "] 
  "30064771099" -> "68719476766"  [ label = "AST: "] 
  "30064771100" -> "68719476767"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "68719476770"  [ label = "AST: "] 
  "30064771102" -> "68719476768"  [ label = "AST: "] 
  "30064771102" -> "68719476769"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "30064771104"  [ label = "AST: "] 
  "47244640256" -> "30064771105"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "25769803778" -> "94489280522"  [ label = "AST: "] 
  "25769803778" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476771"  [ label = "AST: "] 
  "30064771103" -> "90194313218"  [ label = "AST: "] 
  "30064771104" -> "68719476772"  [ label = "AST: "] 
  "30064771104" -> "68719476773"  [ label = "AST: "] 
  "30064771105" -> "68719476774"  [ label = "AST: "] 
  "25769803779" -> "94489280523"  [ label = "AST: "] 
  "25769803779" -> "30064771106"  [ label = "AST: "] 
  "25769803779" -> "30064771108"  [ label = "AST: "] 
  "30064771106" -> "68719476775"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "68719476776"  [ label = "AST: "] 
  "30064771107" -> "68719476777"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771108" -> "68719476780"  [ label = "AST: "] 
  "30064771108" -> "30064771111"  [ label = "AST: "] 
  "30064771108" -> "30064771112"  [ label = "AST: "] 
  "30064771108" -> "30064771114"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771109" -> "68719476779"  [ label = "AST: "] 
  "30064771110" -> "68719476778"  [ label = "AST: "] 
  "30064771111" -> "68719476781"  [ label = "AST: "] 
  "30064771111" -> "68719476782"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476783"  [ label = "AST: "] 
  "30064771113" -> "68719476784"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771115" -> "68719476785"  [ label = "AST: "] 
  "30064771115" -> "68719476786"  [ label = "AST: "] 
  "30064771116" -> "68719476787"  [ label = "AST: "] 
  "30064771116" -> "90194313219"  [ label = "AST: "] 
  "30064771117" -> "68719476788"  [ label = "AST: "] 
  "30064771117" -> "90194313220"  [ label = "AST: "] 
  "47244640257" -> "30064771118"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "30064771118" -> "68719476789"  [ label = "AST: "] 
  "30064771118" -> "90194313221"  [ label = "AST: "] 
  "25769803780" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "68719476790"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "55834574853"  [ label = "AST: "] 
  "30064771121" -> "68719476791"  [ label = "AST: "] 
  "30064771121" -> "55834574852"  [ label = "AST: "] 
  "30064771122" -> "68719476792"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771123" -> "55834574855"  [ label = "AST: "] 
  "30064771124" -> "68719476793"  [ label = "AST: "] 
  "30064771124" -> "55834574854"  [ label = "AST: "] 
  "30064771125" -> "68719476794"  [ label = "AST: "] 
  "30064771125" -> "30064771126"  [ label = "AST: "] 
  "30064771126" -> "184683593728"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771127" -> "55834574857"  [ label = "AST: "] 
  "30064771128" -> "68719476795"  [ label = "AST: "] 
  "30064771128" -> "55834574856"  [ label = "AST: "] 
  "30064771129" -> "68719476796"  [ label = "AST: "] 
  "30064771129" -> "68719476797"  [ label = "AST: "] 
  "47244640258" -> "30064771130"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "30064771130" -> "68719476798"  [ label = "AST: "] 
  "30064771130" -> "55834574858"  [ label = "AST: "] 
  "25769803781" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "68719476799"  [ label = "AST: "] 
  "30064771131" -> "68719476800"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771132" -> "30064771134"  [ label = "AST: "] 
  "30064771133" -> "68719476801"  [ label = "AST: "] 
  "30064771133" -> "55834574859"  [ label = "AST: "] 
  "30064771134" -> "68719476802"  [ label = "AST: "] 
  "30064771134" -> "55834574860"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771135" -> "30064771138"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771136" -> "55834574862"  [ label = "AST: "] 
  "30064771137" -> "68719476803"  [ label = "AST: "] 
  "30064771137" -> "55834574861"  [ label = "AST: "] 
  "30064771138" -> "30064771139"  [ label = "AST: "] 
  "30064771138" -> "55834574864"  [ label = "AST: "] 
  "30064771139" -> "68719476804"  [ label = "AST: "] 
  "30064771139" -> "55834574863"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771140" -> "30064771143"  [ label = "AST: "] 
  "30064771141" -> "30064771142"  [ label = "AST: "] 
  "30064771141" -> "55834574866"  [ label = "AST: "] 
  "30064771142" -> "68719476805"  [ label = "AST: "] 
  "30064771142" -> "55834574865"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771143" -> "55834574868"  [ label = "AST: "] 
  "30064771144" -> "68719476806"  [ label = "AST: "] 
  "30064771144" -> "55834574867"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771145" -> "30064771147"  [ label = "AST: "] 
  "30064771146" -> "68719476807"  [ label = "AST: "] 
  "30064771146" -> "55834574869"  [ label = "AST: "] 
  "30064771147" -> "68719476808"  [ label = "AST: "] 
  "30064771147" -> "55834574870"  [ label = "AST: "] 
  "30064771148" -> "30064771149"  [ label = "AST: "] 
  "30064771148" -> "30064771150"  [ label = "AST: "] 
  "30064771149" -> "68719476809"  [ label = "AST: "] 
  "30064771149" -> "55834574871"  [ label = "AST: "] 
  "30064771150" -> "68719476810"  [ label = "AST: "] 
  "30064771150" -> "55834574872"  [ label = "AST: "] 
  "30064771151" -> "30064771152"  [ label = "AST: "] 
  "30064771151" -> "30064771153"  [ label = "AST: "] 
  "30064771152" -> "68719476811"  [ label = "AST: "] 
  "30064771152" -> "55834574873"  [ label = "AST: "] 
  "30064771153" -> "68719476812"  [ label = "AST: "] 
  "30064771153" -> "55834574874"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771154" -> "30064771156"  [ label = "AST: "] 
  "30064771155" -> "68719476813"  [ label = "AST: "] 
  "30064771155" -> "55834574875"  [ label = "AST: "] 
  "30064771156" -> "68719476814"  [ label = "AST: "] 
  "30064771156" -> "55834574876"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771157" -> "68719476816"  [ label = "AST: "] 
  "30064771158" -> "68719476815"  [ label = "AST: "] 
  "30064771158" -> "55834574877"  [ label = "AST: "] 
  "30064771159" -> "30064771160"  [ label = "AST: "] 
  "30064771159" -> "68719476818"  [ label = "AST: "] 
  "30064771160" -> "68719476817"  [ label = "AST: "] 
  "30064771160" -> "55834574878"  [ label = "AST: "] 
  "47244640259" -> "68719476819"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "81604378624"  [ label = "AST: "] 
  "25769803782" -> "68719476820"  [ label = "AST: "] 
  "25769803782" -> "30064771161"  [ label = "AST: "] 
  "25769803782" -> "47244640260"  [ label = "AST: "] 
  "25769803782" -> "81604378625"  [ label = "AST: "] 
  "25769803782" -> "68719476835"  [ label = "AST: "] 
  "25769803782" -> "81604378626"  [ label = "AST: "] 
  "25769803782" -> "68719476836"  [ label = "AST: "] 
  "25769803782" -> "81604378627"  [ label = "AST: "] 
  "25769803782" -> "68719476837"  [ label = "AST: "] 
  "25769803782" -> "25769803783"  [ label = "AST: "] 
  "30064771161" -> "68719476821"  [ label = "AST: "] 
  "30064771161" -> "68719476822"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "68719476824"  [ label = "AST: "] 
  "30064771161" -> "30064771163"  [ label = "AST: "] 
  "30064771161" -> "68719476826"  [ label = "AST: "] 
  "30064771161" -> "30064771164"  [ label = "AST: "] 
  "30064771161" -> "30064771165"  [ label = "AST: "] 
  "30064771161" -> "30064771166"  [ label = "AST: "] 
  "30064771161" -> "30064771167"  [ label = "AST: "] 
  "30064771161" -> "30064771168"  [ label = "AST: "] 
  "30064771161" -> "68719476832"  [ label = "AST: "] 
  "30064771161" -> "30064771169"  [ label = "AST: "] 
  "30064771161" -> "68719476834"  [ label = "AST: "] 
  "30064771162" -> "68719476823"  [ label = "AST: "] 
  "30064771163" -> "68719476825"  [ label = "AST: "] 
  "30064771164" -> "68719476827"  [ label = "AST: "] 
  "30064771165" -> "68719476828"  [ label = "AST: "] 
  "30064771166" -> "68719476829"  [ label = "AST: "] 
  "30064771167" -> "68719476830"  [ label = "AST: "] 
  "30064771168" -> "68719476831"  [ label = "AST: "] 
  "30064771169" -> "30064771170"  [ label = "AST: "] 
  "30064771169" -> "55834574880"  [ label = "AST: "] 
  "30064771170" -> "68719476833"  [ label = "AST: "] 
  "30064771170" -> "55834574879"  [ label = "AST: "] 
  "25769803783" -> "94489280529"  [ label = "AST: "] 
  "25769803783" -> "30064771171"  [ label = "AST: "] 
  "25769803783" -> "94489280530"  [ label = "AST: "] 
  "25769803783" -> "30064771175"  [ label = "AST: "] 
  "25769803783" -> "30064771179"  [ label = "AST: "] 
  "25769803783" -> "30064771197"  [ label = "AST: "] 
  "25769803783" -> "47244640261"  [ label = "AST: "] 
  "30064771171" -> "68719476838"  [ label = "AST: "] 
  "30064771171" -> "30064771172"  [ label = "AST: "] 
  "30064771172" -> "68719476839"  [ label = "AST: "] 
  "30064771172" -> "68719476840"  [ label = "AST: "] 
  "30064771172" -> "30064771173"  [ label = "AST: "] 
  "30064771172" -> "30064771174"  [ label = "AST: "] 
  "30064771173" -> "68719476841"  [ label = "AST: "] 
  "30064771173" -> "55834574881"  [ label = "AST: "] 
  "30064771174" -> "68719476842"  [ label = "AST: "] 
  "30064771175" -> "68719476843"  [ label = "AST: "] 
  "30064771175" -> "30064771176"  [ label = "AST: "] 
  "30064771176" -> "68719476844"  [ label = "AST: "] 
  "30064771176" -> "68719476845"  [ label = "AST: "] 
  "30064771176" -> "30064771177"  [ label = "AST: "] 
  "30064771176" -> "30064771178"  [ label = "AST: "] 
  "30064771177" -> "68719476846"  [ label = "AST: "] 
  "30064771177" -> "55834574882"  [ label = "AST: "] 
  "30064771178" -> "68719476847"  [ label = "AST: "] 
  "30064771179" -> "68719476848"  [ label = "AST: "] 
  "30064771179" -> "68719476849"  [ label = "AST: "] 
  "30064771179" -> "30064771180"  [ label = "AST: "] 
  "30064771179" -> "68719476851"  [ label = "AST: "] 
  "30064771179" -> "30064771181"  [ label = "AST: "] 
  "30064771179" -> "68719476853"  [ label = "AST: "] 
  "30064771179" -> "30064771182"  [ label = "AST: "] 
  "30064771179" -> "30064771183"  [ label = "AST: "] 
  "30064771179" -> "30064771184"  [ label = "AST: "] 
  "30064771179" -> "30064771185"  [ label = "AST: "] 
  "30064771179" -> "30064771186"  [ label = "AST: "] 
  "30064771179" -> "68719476859"  [ label = "AST: "] 
  "30064771179" -> "30064771187"  [ label = "AST: "] 
  "30064771179" -> "68719476861"  [ label = "AST: "] 
  "30064771179" -> "30064771189"  [ label = "AST: "] 
  "30064771179" -> "30064771190"  [ label = "AST: "] 
  "30064771179" -> "30064771192"  [ label = "AST: "] 
  "30064771179" -> "30064771194"  [ label = "AST: "] 
  "30064771179" -> "30064771196"  [ label = "AST: "] 
  "30064771180" -> "68719476850"  [ label = "AST: "] 
  "30064771181" -> "68719476852"  [ label = "AST: "] 
  "30064771182" -> "68719476854"  [ label = "AST: "] 
  "30064771183" -> "68719476855"  [ label = "AST: "] 
  "30064771184" -> "68719476856"  [ label = "AST: "] 
  "30064771185" -> "68719476857"  [ label = "AST: "] 
  "30064771186" -> "68719476858"  [ label = "AST: "] 
  "30064771187" -> "30064771188"  [ label = "AST: "] 
  "30064771187" -> "55834574884"  [ label = "AST: "] 
  "30064771188" -> "68719476860"  [ label = "AST: "] 
  "30064771188" -> "55834574883"  [ label = "AST: "] 
  "30064771189" -> "68719476862"  [ label = "AST: "] 
  "30064771190" -> "30064771191"  [ label = "AST: "] 
  "30064771190" -> "68719476865"  [ label = "AST: "] 
  "30064771191" -> "68719476863"  [ label = "AST: "] 
  "30064771191" -> "68719476864"  [ label = "AST: "] 
  "30064771192" -> "30064771193"  [ label = "AST: "] 
  "30064771192" -> "68719476868"  [ label = "AST: "] 
  "30064771193" -> "68719476866"  [ label = "AST: "] 
  "30064771193" -> "68719476867"  [ label = "AST: "] 
  "30064771194" -> "30064771195"  [ label = "AST: "] 
  "30064771195" -> "68719476869"  [ label = "AST: "] 
  "30064771195" -> "55834574885"  [ label = "AST: "] 
  "30064771196" -> "68719476870"  [ label = "AST: "] 
  "30064771197" -> "30064771198"  [ label = "AST: "] 
  "30064771197" -> "90194313222"  [ label = "AST: "] 
  "30064771198" -> "68719476871"  [ label = "AST: "] 
  "30064771198" -> "55834574886"  [ label = "AST: "] 
  "146028888064" -> "68719476872"  [ label = "AST: "] 
  "30064771072" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771078" -> "30064771082"  [ label = "CFG: "] 
  "30064771080" -> "55834574849"  [ label = "CFG: "] 
  "30064771083" -> "30064771089"  [ label = "CFG: "] 
  "30064771087" -> "55834574850"  [ label = "CFG: "] 
  "30064771090" -> "30064771095"  [ label = "CFG: "] 
  "30064771094" -> "55834574851"  [ label = "CFG: "] 
  "30064771096" -> "30064771102"  [ label = "CFG: "] 
  "30064771100" -> "30064771103"  [ label = "CFG: "] 
  "30064771116" -> "30064771117"  [ label = "CFG: "] 
  "30064771117" -> "30064771118"  [ label = "CFG: "] 
  "30064771122" -> "184683593728"  [ label = "CFG: "] 
  "30064771125" -> "30064771129"  [ label = "CFG: "] 
  "30064771129" -> "55834574858"  [ label = "CFG: "] 
  "30064771132" -> "55834574861"  [ label = "CFG: "] 
  "30064771135" -> "55834574865"  [ label = "CFG: "] 
  "30064771140" -> "55834574869"  [ label = "CFG: "] 
  "30064771145" -> "55834574871"  [ label = "CFG: "] 
  "30064771148" -> "55834574873"  [ label = "CFG: "] 
  "30064771151" -> "55834574875"  [ label = "CFG: "] 
  "30064771154" -> "55834574877"  [ label = "CFG: "] 
  "30064771157" -> "55834574878"  [ label = "CFG: "] 
  "30064771159" -> "68719476819"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771072"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771104" -> "30064771107"  [ label = "CFG: "] 
  "30064771104" -> "30064771116"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771118" -> "55834574852"  [ label = "CFG: "] 
  "30064771118" -> "55834574854"  [ label = "CFG: "] 
  "30064771123" -> "30064771122"  [ label = "CFG: "] 
  "30064771126" -> "30064771125"  [ label = "CFG: "] 
  "30064771130" -> "30064771131"  [ label = "CFG: "] 
  "30064771130" -> "55834574859"  [ label = "CFG: "] 
  "30064771133" -> "55834574860"  [ label = "CFG: "] 
  "30064771134" -> "30064771132"  [ label = "CFG: "] 
  "30064771136" -> "55834574863"  [ label = "CFG: "] 
  "30064771138" -> "30064771135"  [ label = "CFG: "] 
  "30064771141" -> "55834574867"  [ label = "CFG: "] 
  "30064771143" -> "30064771140"  [ label = "CFG: "] 
  "30064771146" -> "55834574870"  [ label = "CFG: "] 
  "30064771147" -> "30064771145"  [ label = "CFG: "] 
  "30064771149" -> "55834574872"  [ label = "CFG: "] 
  "30064771150" -> "30064771148"  [ label = "CFG: "] 
  "30064771152" -> "55834574874"  [ label = "CFG: "] 
  "30064771153" -> "30064771151"  [ label = "CFG: "] 
  "30064771155" -> "55834574876"  [ label = "CFG: "] 
  "30064771156" -> "30064771154"  [ label = "CFG: "] 
  "30064771158" -> "30064771157"  [ label = "CFG: "] 
  "30064771160" -> "30064771159"  [ label = "CFG: "] 
  "68719476819" -> "30064771162"  [ label = "CFG: "] 
  "68719476819" -> "55834574881"  [ label = "CFG: "] 
  "68719476819" -> "146028888064"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771084"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771093" -> "30064771091"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771099" -> "30064771097"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771103" -> "30064771104"  [ label = "CFG: "] 
  "30064771106" -> "30064771110"  [ label = "CFG: "] 
  "30064771108" -> "30064771105"  [ label = "CFG: "] 
  "30064771119" -> "55834574854"  [ label = "CFG: "] 
  "30064771124" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771123"  [ label = "CFG: "] 
  "184683593728" -> "55834574856"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "55834574858" -> "30064771130"  [ label = "CFG: "] 
  "30064771131" -> "55834574859"  [ label = "CFG: "] 
  "55834574859" -> "30064771133"  [ label = "CFG: "] 
  "55834574860" -> "30064771134"  [ label = "CFG: "] 
  "30064771137" -> "55834574862"  [ label = "CFG: "] 
  "55834574862" -> "30064771136"  [ label = "CFG: "] 
  "30064771139" -> "55834574864"  [ label = "CFG: "] 
  "55834574864" -> "30064771138"  [ label = "CFG: "] 
  "30064771142" -> "55834574866"  [ label = "CFG: "] 
  "55834574866" -> "30064771141"  [ label = "CFG: "] 
  "30064771144" -> "55834574868"  [ label = "CFG: "] 
  "55834574868" -> "30064771143"  [ label = "CFG: "] 
  "55834574869" -> "30064771146"  [ label = "CFG: "] 
  "55834574870" -> "30064771147"  [ label = "CFG: "] 
  "55834574871" -> "30064771149"  [ label = "CFG: "] 
  "55834574872" -> "30064771150"  [ label = "CFG: "] 
  "55834574873" -> "30064771152"  [ label = "CFG: "] 
  "55834574874" -> "30064771153"  [ label = "CFG: "] 
  "55834574875" -> "30064771155"  [ label = "CFG: "] 
  "55834574876" -> "30064771156"  [ label = "CFG: "] 
  "55834574877" -> "30064771158"  [ label = "CFG: "] 
  "55834574878" -> "30064771160"  [ label = "CFG: "] 
  "30064771161" -> "146028888064"  [ label = "CFG: "] 
  "55834574849" -> "30064771085"  [ label = "CFG: "] 
  "55834574850" -> "30064771092"  [ label = "CFG: "] 
  "55834574851" -> "30064771098"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771109" -> "30064771111"  [ label = "CFG: "] 
  "30064771111" -> "30064771113"  [ label = "CFG: "] 
  "30064771112" -> "30064771115"  [ label = "CFG: "] 
  "30064771114" -> "30064771108"  [ label = "CFG: "] 
  "30064771120" -> "30064771119"  [ label = "CFG: "] 
  "55834574854" -> "30064771124"  [ label = "CFG: "] 
  "30064771128" -> "55834574857"  [ label = "CFG: "] 
  "55834574857" -> "30064771127"  [ label = "CFG: "] 
  "55834574861" -> "30064771137"  [ label = "CFG: "] 
  "55834574863" -> "30064771139"  [ label = "CFG: "] 
  "55834574865" -> "30064771142"  [ label = "CFG: "] 
  "55834574867" -> "30064771144"  [ label = "CFG: "] 
  "30064771162" -> "30064771163"  [ label = "CFG: "] 
  "30064771163" -> "30064771164"  [ label = "CFG: "] 
  "30064771164" -> "30064771165"  [ label = "CFG: "] 
  "30064771165" -> "30064771166"  [ label = "CFG: "] 
  "30064771166" -> "30064771167"  [ label = "CFG: "] 
  "30064771167" -> "30064771168"  [ label = "CFG: "] 
  "30064771168" -> "55834574879"  [ label = "CFG: "] 
  "30064771169" -> "30064771161"  [ label = "CFG: "] 
  "30064771171" -> "55834574882"  [ label = "CFG: "] 
  "30064771175" -> "30064771180"  [ label = "CFG: "] 
  "30064771179" -> "55834574886"  [ label = "CFG: "] 
  "30064771197" -> "146028888064"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771121" -> "55834574853"  [ label = "CFG: "] 
  "55834574853" -> "30064771120"  [ label = "CFG: "] 
  "55834574856" -> "30064771128"  [ label = "CFG: "] 
  "30064771170" -> "55834574880"  [ label = "CFG: "] 
  "55834574880" -> "30064771169"  [ label = "CFG: "] 
  "30064771172" -> "30064771171"  [ label = "CFG: "] 
  "30064771176" -> "30064771175"  [ label = "CFG: "] 
  "30064771180" -> "30064771181"  [ label = "CFG: "] 
  "30064771181" -> "30064771182"  [ label = "CFG: "] 
  "30064771182" -> "30064771183"  [ label = "CFG: "] 
  "30064771183" -> "30064771184"  [ label = "CFG: "] 
  "30064771184" -> "30064771185"  [ label = "CFG: "] 
  "30064771185" -> "30064771186"  [ label = "CFG: "] 
  "30064771186" -> "55834574883"  [ label = "CFG: "] 
  "30064771187" -> "30064771189"  [ label = "CFG: "] 
  "30064771189" -> "30064771191"  [ label = "CFG: "] 
  "30064771190" -> "30064771193"  [ label = "CFG: "] 
  "30064771192" -> "55834574885"  [ label = "CFG: "] 
  "30064771194" -> "30064771196"  [ label = "CFG: "] 
  "30064771196" -> "30064771179"  [ label = "CFG: "] 
  "30064771198" -> "30064771197"  [ label = "CFG: "] 
  "55834574852" -> "30064771121"  [ label = "CFG: "] 
  "55834574879" -> "30064771170"  [ label = "CFG: "] 
  "30064771173" -> "30064771174"  [ label = "CFG: "] 
  "30064771174" -> "30064771172"  [ label = "CFG: "] 
  "30064771177" -> "30064771178"  [ label = "CFG: "] 
  "30064771178" -> "30064771176"  [ label = "CFG: "] 
  "30064771188" -> "55834574884"  [ label = "CFG: "] 
  "55834574884" -> "30064771187"  [ label = "CFG: "] 
  "30064771191" -> "30064771190"  [ label = "CFG: "] 
  "30064771193" -> "30064771192"  [ label = "CFG: "] 
  "30064771195" -> "30064771194"  [ label = "CFG: "] 
  "55834574886" -> "30064771198"  [ label = "CFG: "] 
  "55834574881" -> "30064771173"  [ label = "CFG: "] 
  "55834574882" -> "30064771177"  [ label = "CFG: "] 
  "55834574883" -> "30064771188"  [ label = "CFG: "] 
  "55834574885" -> "30064771195"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116994" -> "128849018880"  [ label = "DDG: params"] 
  "115964116995" -> "128849018880"  [ label = "DDG: data"] 
  "115964116997" -> "128849018880"  [ label = "DDG: filter"] 
  "115964116998" -> "128849018880"  [ label = "DDG: bias"] 
  "115964117000" -> "128849018880"  [ label = "DDG: output"] 
  "30064771072" -> "128849018880"  [ label = "DDG: params-&gt;activation"] 
  "30064771072" -> "128849018880"  [ label = "DDG: &amp;output_activation_min"] 
  "30064771072" -> "128849018880"  [ label = "DDG: &amp;output_activation_max"] 
  "30064771072" -> "128849018880"  [ label = "DDG: CalculateActivationRange(params-&gt;activation, &amp;output_activation_min,
                           &amp;output_activation_max)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: SizeOfDimension(input, 0)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: batch_size = SizeOfDimension(input, 0)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: batch_size != 0"] 
  "30064771078" -> "128849018880"  [ label = "DDG: TF_LITE_ENSURE(context, batch_size != 0)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: input_size"] 
  "30064771082" -> "128849018880"  [ label = "DDG: input"] 
  "30064771081" -> "128849018880"  [ label = "DDG: NumElements(input)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: NumElements(input) / batch_size"] 
  "30064771080" -> "128849018880"  [ label = "DDG: input_size = NumElements(input) / batch_size"] 
  "30064771084" -> "128849018880"  [ label = "DDG: data-&gt;input_quantized_index"] 
  "30064771084" -> "128849018880"  [ label = "DDG: &amp;quantized_input_tensor"] 
  "30064771083" -> "128849018880"  [ label = "DDG: GetTemporarySafe(context, node, data-&gt;input_quantized_index,
                                     &amp;quantized_input_tensor)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data-&gt;input_quantized_index,
                                     &amp;quantized_input_tensor))"] 
  "30064771087" -> "128849018880"  [ label = "DDG: quantized_input_ptr_batch"] 
  "30064771088" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int8_t"] 
  "30064771088" -> "128849018880"  [ label = "DDG: quantized_input_tensor"] 
  "30064771087" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int8_t&gt;(quantized_input_tensor)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: * quantized_input_ptr_batch =
      GetTensorData&lt;int8_t&gt;(quantized_input_tensor)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: data-&gt;scaling_factors_index"] 
  "30064771091" -> "128849018880"  [ label = "DDG: &amp;scaling_factors_tensor"] 
  "30064771090" -> "128849018880"  [ label = "DDG: GetTemporarySafe(context, node, data-&gt;scaling_factors_index,
                                     &amp;scaling_factors_tensor)"] 
  "30064771090" -> "128849018880"  [ label = "DDG: TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data-&gt;scaling_factors_index,
                                     &amp;scaling_factors_tensor))"] 
  "30064771094" -> "128849018880"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771095" -> "128849018880"  [ label = "DDG: scaling_factors_tensor"] 
  "30064771094" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(scaling_factors_tensor)"] 
  "30064771094" -> "128849018880"  [ label = "DDG: * scaling_factors_ptr = GetTensorData&lt;float&gt;(scaling_factors_tensor)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: context"] 
  "30064771097" -> "128849018880"  [ label = "DDG: node"] 
  "30064771097" -> "128849018880"  [ label = "DDG: data-&gt;input_offset_index"] 
  "30064771097" -> "128849018880"  [ label = "DDG: &amp;input_offset_tensor"] 
  "30064771096" -> "128849018880"  [ label = "DDG: GetTemporarySafe(context, node, data-&gt;input_offset_index,
                                     &amp;input_offset_tensor)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data-&gt;input_offset_index,
                                     &amp;input_offset_tensor))"] 
  "30064771100" -> "128849018880"  [ label = "DDG: input_offset_ptr"] 
  "30064771102" -> "128849018880"  [ label = "DDG: GetTensorData"] 
  "30064771102" -> "128849018880"  [ label = "DDG: int32_t"] 
  "30064771101" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32_t"] 
  "30064771101" -> "128849018880"  [ label = "DDG: input_offset_tensor"] 
  "30064771100" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32_t&gt;(input_offset_tensor)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: * input_offset_ptr = GetTensorData&lt;int32_t&gt;(input_offset_tensor)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: b = 0"] 
  "30064771104" -> "128849018880"  [ label = "DDG: b"] 
  "30064771104" -> "128849018880"  [ label = "DDG: batch_size"] 
  "30064771104" -> "128849018880"  [ label = "DDG: b &lt; batch_size"] 
  "30064771116" -> "128849018880"  [ label = "DDG: im2col_ptr"] 
  "30064771116" -> "128849018880"  [ label = "DDG: * im2col_ptr = nullptr"] 
  "30064771117" -> "128849018880"  [ label = "DDG: * filter_ptr = nullptr"] 
  "30064771118" -> "128849018880"  [ label = "DDG: im2col"] 
  "30064771118" -> "128849018880"  [ label = "DDG: im2col != nullptr"] 
  "30064771119" -> "128849018880"  [ label = "DDG: im2col_ptr"] 
  "30064771119" -> "128849018880"  [ label = "DDG: im2col-&gt;data.int8"] 
  "30064771119" -> "128849018880"  [ label = "DDG: im2col_ptr = im2col-&gt;data.int8"] 
  "30064771122" -> "128849018880"  [ label = "DDG: filter_ptr"] 
  "30064771122" -> "128849018880"  [ label = "DDG: filter-&gt;data.int8"] 
  "30064771122" -> "128849018880"  [ label = "DDG: filter_ptr = filter-&gt;data.int8"] 
  "30064771125" -> "128849018880"  [ label = "DDG: affine_quantization"] 
  "30064771126" -> "128849018880"  [ label = "DDG: filter-&gt;quantization.params"] 
  "30064771125" -> "128849018880"  [ label = "DDG: reinterpret_cast&lt;TfLiteAffineQuantization*&gt;(filter-&gt;quantization.params)"] 
  "30064771125" -> "128849018880"  [ label = "DDG: * affine_quantization =
      reinterpret_cast&lt;TfLiteAffineQuantization*&gt;(filter-&gt;quantization.params)"] 
  "30064771129" -> "128849018880"  [ label = "DDG: effective_kernel_type"] 
  "30064771129" -> "128849018880"  [ label = "DDG: effective_kernel_type = kernel_type"] 
  "30064771131" -> "128849018880"  [ label = "DDG: effective_kernel_type"] 
  "30064771131" -> "128849018880"  [ label = "DDG: effective_kernel_type = kReference"] 
  "30064771132" -> "128849018880"  [ label = "DDG: op_params.padding_type"] 
  "30064771132" -> "128849018880"  [ label = "DDG: PaddingType::kSame"] 
  "30064771132" -> "128849018880"  [ label = "DDG: op_params.padding_type = PaddingType::kSame"] 
  "30064771135" -> "128849018880"  [ label = "DDG: op_params.padding_values.width"] 
  "30064771135" -> "128849018880"  [ label = "DDG: data-&gt;padding.width"] 
  "30064771135" -> "128849018880"  [ label = "DDG: op_params.padding_values.width = data-&gt;padding.width"] 
  "30064771140" -> "128849018880"  [ label = "DDG: op_params.padding_values.height"] 
  "30064771140" -> "128849018880"  [ label = "DDG: data-&gt;padding.height"] 
  "30064771140" -> "128849018880"  [ label = "DDG: op_params.padding_values.height = data-&gt;padding.height"] 
  "30064771145" -> "128849018880"  [ label = "DDG: op_params.dilation_width_factor"] 
  "30064771145" -> "128849018880"  [ label = "DDG: params-&gt;dilation_width_factor"] 
  "30064771145" -> "128849018880"  [ label = "DDG: op_params.dilation_width_factor = params-&gt;dilation_width_factor"] 
  "30064771148" -> "128849018880"  [ label = "DDG: op_params.dilation_height_factor"] 
  "30064771148" -> "128849018880"  [ label = "DDG: params-&gt;dilation_height_factor"] 
  "30064771148" -> "128849018880"  [ label = "DDG: op_params.dilation_height_factor = params-&gt;dilation_height_factor"] 
  "30064771151" -> "128849018880"  [ label = "DDG: op_params.stride_width"] 
  "30064771151" -> "128849018880"  [ label = "DDG: params-&gt;stride_width"] 
  "30064771151" -> "128849018880"  [ label = "DDG: op_params.stride_width = params-&gt;stride_width"] 
  "30064771154" -> "128849018880"  [ label = "DDG: op_params.stride_height"] 
  "30064771154" -> "128849018880"  [ label = "DDG: params-&gt;stride_height"] 
  "30064771154" -> "128849018880"  [ label = "DDG: op_params.stride_height = params-&gt;stride_height"] 
  "30064771157" -> "128849018880"  [ label = "DDG: op_params.float_activation_min"] 
  "30064771157" -> "128849018880"  [ label = "DDG: output_activation_min"] 
  "30064771157" -> "128849018880"  [ label = "DDG: op_params.float_activation_min = output_activation_min"] 
  "30064771159" -> "128849018880"  [ label = "DDG: op_params.float_activation_max"] 
  "30064771159" -> "128849018880"  [ label = "DDG: output_activation_max"] 
  "30064771159" -> "128849018880"  [ label = "DDG: op_params.float_activation_max = output_activation_max"] 
  "30064771172" -> "128849018880"  [ label = "DDG: data-&gt;row_sums_index"] 
  "30064771172" -> "128849018880"  [ label = "DDG: &amp;row_sums"] 
  "30064771171" -> "128849018880"  [ label = "DDG: GetTemporarySafe(context, node, data-&gt;row_sums_index, &amp;row_sums)"] 
  "30064771171" -> "128849018880"  [ label = "DDG: TF_LITE_ENSURE_OK(
          context,
          GetTemporarySafe(context, node, data-&gt;row_sums_index, &amp;row_sums))"] 
  "30064771176" -> "128849018880"  [ label = "DDG: node"] 
  "30064771176" -> "128849018880"  [ label = "DDG: data-&gt;accum_scratch_index"] 
  "30064771176" -> "128849018880"  [ label = "DDG: &amp;scratch"] 
  "30064771175" -> "128849018880"  [ label = "DDG: GetTemporarySafe(context, node, data-&gt;accum_scratch_index, &amp;scratch)"] 
  "30064771175" -> "128849018880"  [ label = "DDG: TF_LITE_ENSURE_OK(
          context,
          GetTemporarySafe(context, node, data-&gt;accum_scratch_index, &amp;scratch))"] 
  "30064771179" -> "128849018880"  [ label = "DDG: op_params"] 
  "30064771179" -> "128849018880"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771180" -> "128849018880"  [ label = "DDG: input"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorShape(input)"] 
  "30064771179" -> "128849018880"  [ label = "DDG: quantized_input_ptr_batch"] 
  "30064771181" -> "128849018880"  [ label = "DDG: filter"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorShape(filter)"] 
  "30064771179" -> "128849018880"  [ label = "DDG: filter_ptr"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorShape(bias)"] 
  "30064771183" -> "128849018880"  [ label = "DDG: bias"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(bias)"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorShape(output)"] 
  "30064771185" -> "128849018880"  [ label = "DDG: output"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(output)"] 
  "30064771186" -> "128849018880"  [ label = "DDG: im2col"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorShape(im2col)"] 
  "30064771179" -> "128849018880"  [ label = "DDG: im2col_ptr"] 
  "30064771179" -> "128849018880"  [ label = "DDG: affine_quantization-&gt;scale-&gt;data"] 
  "30064771179" -> "128849018880"  [ label = "DDG: input_offset_ptr"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorShape(scratch)"] 
  "30064771190" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32"] 
  "30064771190" -> "128849018880"  [ label = "DDG: scratch"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32&gt;(scratch)"] 
  "30064771193" -> "128849018880"  [ label = "DDG: GetTensorData"] 
  "30064771193" -> "128849018880"  [ label = "DDG: int32_t"] 
  "30064771192" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32_t"] 
  "30064771192" -> "128849018880"  [ label = "DDG: row_sums"] 
  "30064771179" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32_t&gt;(row_sums)"] 
  "30064771179" -> "128849018880"  [ label = "DDG: &amp;data-&gt;compute_hybrid_row_sums"] 
  "30064771196" -> "128849018880"  [ label = "DDG: context"] 
  "30064771179" -> "128849018880"  [ label = "DDG: CpuBackendContext::GetFromContext(context)"] 
  "30064771179" -> "128849018880"  [ label = "DDG: optimized_ops::HybridConvPerChannel(
          op_params, scaling_factors_ptr, GetTensorShape(input),
          quantized_input_ptr_batch, GetTensorShape(filter), filter_ptr,
          GetTensorShape(bias), GetTensorData&lt;float&gt;(bias),
          GetTensorShape(output), GetTensorData&lt;float&gt;(output),
          GetTensorShape(im2col), im2col_ptr, affine_quantization-&gt;scale-&gt;data,
          input_offset_ptr, GetTensorShape(scratch),
          GetTensorData&lt;int32&gt;(scratch), GetTensorData&lt;int32_t&gt;(row_sums),
          &amp;data-&gt;compute_hybrid_row_sums,
          CpuBackendContext::GetFromContext(context))"] 
  "30064771197" -> "128849018880"  [ label = "DDG: data-&gt;compute_hybrid_row_sums"] 
  "30064771197" -> "128849018880"  [ label = "DDG: data-&gt;compute_hybrid_row_sums = false"] 
  "30064771161" -> "128849018880"  [ label = "DDG: op_params"] 
  "30064771161" -> "128849018880"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771162" -> "128849018880"  [ label = "DDG: input"] 
  "30064771161" -> "128849018880"  [ label = "DDG: GetTensorShape(input)"] 
  "30064771161" -> "128849018880"  [ label = "DDG: quantized_input_ptr_batch"] 
  "30064771163" -> "128849018880"  [ label = "DDG: filter"] 
  "30064771161" -> "128849018880"  [ label = "DDG: GetTensorShape(filter)"] 
  "30064771161" -> "128849018880"  [ label = "DDG: filter_ptr"] 
  "30064771161" -> "128849018880"  [ label = "DDG: GetTensorShape(bias)"] 
  "30064771165" -> "128849018880"  [ label = "DDG: bias"] 
  "30064771161" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(bias)"] 
  "30064771161" -> "128849018880"  [ label = "DDG: GetTensorShape(output)"] 
  "30064771167" -> "128849018880"  [ label = "DDG: output"] 
  "30064771161" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(output)"] 
  "30064771168" -> "128849018880"  [ label = "DDG: im2col"] 
  "30064771161" -> "128849018880"  [ label = "DDG: GetTensorShape(im2col)"] 
  "30064771161" -> "128849018880"  [ label = "DDG: im2col_ptr"] 
  "30064771161" -> "128849018880"  [ label = "DDG: affine_quantization-&gt;scale-&gt;data"] 
  "30064771161" -> "128849018880"  [ label = "DDG: input_offset_ptr"] 
  "30064771161" -> "128849018880"  [ label = "DDG: reference_ops::HybridConvPerChannel(
          op_params, scaling_factors_ptr, GetTensorShape(input),
          quantized_input_ptr_batch, GetTensorShape(filter), filter_ptr,
          GetTensorShape(bias), GetTensorData&lt;float&gt;(bias),
          GetTensorShape(output), GetTensorData&lt;float&gt;(output),
          GetTensorShape(im2col), im2col_ptr, affine_quantization-&gt;scale-&gt;data,
          input_offset_ptr)"] 
  "30064771106" -> "128849018880"  [ label = "DDG: b * input_size"] 
  "30064771106" -> "128849018880"  [ label = "DDG: offset = b * input_size"] 
  "30064771110" -> "128849018880"  [ label = "DDG: input"] 
  "30064771109" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(input)"] 
  "30064771108" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(input) + offset"] 
  "30064771108" -> "128849018880"  [ label = "DDG: input_size"] 
  "30064771111" -> "128849018880"  [ label = "DDG: quantized_input_ptr_batch"] 
  "30064771111" -> "128849018880"  [ label = "DDG: offset"] 
  "30064771108" -> "128849018880"  [ label = "DDG: quantized_input_ptr_batch + offset"] 
  "30064771108" -> "128849018880"  [ label = "DDG: &amp;scaling_factors_ptr[b]"] 
  "30064771108" -> "128849018880"  [ label = "DDG: &amp;input_offset_ptr[b]"] 
  "30064771108" -> "128849018880"  [ label = "DDG: tensor_utils::AsymmetricQuantizeFloats(
        GetTensorData&lt;float&gt;(input) + offset, input_size,
        quantized_input_ptr_batch + offset, &amp;scaling_factors_ptr[b],
        &amp;input_offset_ptr[b])"] 
  "30064771105" -> "128849018880"  [ label = "DDG: ++b"] 
  "30064771129" -> "128849018880"  [ label = "DDG: kernel_type"] 
  "30064771089" -> "128849018880"  [ label = "DDG: int8_t"] 
  "30064771191" -> "128849018880"  [ label = "DDG: int32"] 
  "30064771131" -> "128849018880"  [ label = "DDG: kReference"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "115964116998"  [ label = "DDG: "] 
  "111669149697" -> "115964116999"  [ label = "DDG: "] 
  "111669149697" -> "115964117000"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: input"] 
  "30064771077" -> "30064771076"  [ label = "DDG: 0"] 
  "30064771081" -> "30064771080"  [ label = "DDG: NumElements(input)"] 
  "30064771081" -> "30064771080"  [ label = "DDG: batch_size"] 
  "30064771088" -> "30064771087"  [ label = "DDG: GetTensorData&lt;int8_t"] 
  "30064771088" -> "30064771087"  [ label = "DDG: quantized_input_tensor"] 
  "30064771095" -> "30064771094"  [ label = "DDG: scaling_factors_tensor"] 
  "30064771101" -> "30064771100"  [ label = "DDG: GetTensorData&lt;int32_t"] 
  "30064771101" -> "30064771100"  [ label = "DDG: input_offset_tensor"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "115964116994" -> "30064771145"  [ label = "DDG: params"] 
  "115964116994" -> "30064771148"  [ label = "DDG: params"] 
  "115964116994" -> "30064771151"  [ label = "DDG: params"] 
  "115964116994" -> "30064771154"  [ label = "DDG: params"] 
  "30064771072" -> "30064771157"  [ label = "DDG: &amp;output_activation_min"] 
  "111669149697" -> "30064771157"  [ label = "DDG: "] 
  "30064771072" -> "30064771159"  [ label = "DDG: &amp;output_activation_max"] 
  "111669149697" -> "30064771159"  [ label = "DDG: "] 
  "68719476872" -> "146028888064"  [ label = "DDG: kTfLiteOk"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "115964116994" -> "30064771072"  [ label = "DDG: params"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "115964116992" -> "30064771078"  [ label = "DDG: context"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: batch_size"] 
  "30064771079" -> "30064771078"  [ label = "DDG: 0"] 
  "30064771084" -> "30064771083"  [ label = "DDG: context"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771084" -> "30064771083"  [ label = "DDG: node"] 
  "30064771084" -> "30064771083"  [ label = "DDG: data-&gt;input_quantized_index"] 
  "30064771084" -> "30064771083"  [ label = "DDG: &amp;quantized_input_tensor"] 
  "30064771091" -> "30064771090"  [ label = "DDG: context"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771091" -> "30064771090"  [ label = "DDG: node"] 
  "30064771091" -> "30064771090"  [ label = "DDG: data-&gt;scaling_factors_index"] 
  "30064771091" -> "30064771090"  [ label = "DDG: &amp;scaling_factors_tensor"] 
  "30064771097" -> "30064771096"  [ label = "DDG: context"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771097" -> "30064771096"  [ label = "DDG: node"] 
  "30064771097" -> "30064771096"  [ label = "DDG: data-&gt;input_offset_index"] 
  "30064771097" -> "30064771096"  [ label = "DDG: &amp;input_offset_tensor"] 
  "111669149697" -> "68719476819"  [ label = "DDG: "] 
  "111669149697" -> "68719476872"  [ label = "DDG: "] 
  "115964116996" -> "30064771077"  [ label = "DDG: input"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771076" -> "30064771079"  [ label = "DDG: batch_size"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: input"] 
  "30064771079" -> "30064771081"  [ label = "DDG: batch_size"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771078" -> "30064771084"  [ label = "DDG: context"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "115964116993" -> "30064771084"  [ label = "DDG: node"] 
  "115964116995" -> "30064771084"  [ label = "DDG: data"] 
  "30064771089" -> "30064771088"  [ label = "DDG: GetTensorData"] 
  "30064771089" -> "30064771088"  [ label = "DDG: int8_t"] 
  "30064771084" -> "30064771088"  [ label = "DDG: &amp;quantized_input_tensor"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771083" -> "30064771091"  [ label = "DDG: context"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771084" -> "30064771091"  [ label = "DDG: node"] 
  "115964116995" -> "30064771091"  [ label = "DDG: data"] 
  "30064771091" -> "30064771095"  [ label = "DDG: &amp;scaling_factors_tensor"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771090" -> "30064771097"  [ label = "DDG: context"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771091" -> "30064771097"  [ label = "DDG: node"] 
  "115964116995" -> "30064771097"  [ label = "DDG: data"] 
  "30064771102" -> "30064771101"  [ label = "DDG: GetTensorData"] 
  "30064771102" -> "30064771101"  [ label = "DDG: int32_t"] 
  "30064771097" -> "30064771101"  [ label = "DDG: &amp;input_offset_tensor"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771103" -> "30064771104"  [ label = "DDG: b"] 
  "30064771105" -> "30064771104"  [ label = "DDG: b"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771081" -> "30064771104"  [ label = "DDG: batch_size"] 
  "30064771107" -> "30064771105"  [ label = "DDG: b"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771107" -> "30064771106"  [ label = "DDG: b"] 
  "30064771107" -> "30064771106"  [ label = "DDG: input_size"] 
  "115964116999" -> "30064771118"  [ label = "DDG: im2col"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "111669149697" -> "68719476820"  [ label = "DDG: "] 
  "111669149697" -> "68719476835"  [ label = "DDG: "] 
  "111669149697" -> "68719476836"  [ label = "DDG: "] 
  "111669149697" -> "68719476837"  [ label = "DDG: "] 
  "30064771077" -> "30064771082"  [ label = "DDG: input"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771089" -> "30064771102"  [ label = "DDG: GetTensorData"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771110" -> "30064771108"  [ label = "DDG: input"] 
  "30064771106" -> "30064771108"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771107" -> "30064771108"  [ label = "DDG: input_size"] 
  "30064771087" -> "30064771108"  [ label = "DDG: quantized_input_ptr_batch"] 
  "30064771094" -> "30064771108"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771100" -> "30064771108"  [ label = "DDG: input_offset_ptr"] 
  "30064771132" -> "30064771161"  [ label = "DDG: op_params.padding_type"] 
  "30064771145" -> "30064771161"  [ label = "DDG: op_params.dilation_width_factor"] 
  "30064771148" -> "30064771161"  [ label = "DDG: op_params.dilation_height_factor"] 
  "30064771151" -> "30064771161"  [ label = "DDG: op_params.stride_width"] 
  "30064771154" -> "30064771161"  [ label = "DDG: op_params.stride_height"] 
  "30064771157" -> "30064771161"  [ label = "DDG: op_params.float_activation_min"] 
  "30064771159" -> "30064771161"  [ label = "DDG: op_params.float_activation_max"] 
  "111669149697" -> "30064771161"  [ label = "DDG: "] 
  "30064771094" -> "30064771161"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771108" -> "30064771161"  [ label = "DDG: &amp;scaling_factors_ptr[b]"] 
  "30064771162" -> "30064771161"  [ label = "DDG: input"] 
  "30064771087" -> "30064771161"  [ label = "DDG: quantized_input_ptr_batch"] 
  "30064771163" -> "30064771161"  [ label = "DDG: filter"] 
  "30064771122" -> "30064771161"  [ label = "DDG: filter_ptr"] 
  "30064771164" -> "30064771161"  [ label = "DDG: bias"] 
  "30064771165" -> "30064771161"  [ label = "DDG: bias"] 
  "30064771166" -> "30064771161"  [ label = "DDG: output"] 
  "30064771167" -> "30064771161"  [ label = "DDG: output"] 
  "30064771168" -> "30064771161"  [ label = "DDG: im2col"] 
  "30064771116" -> "30064771161"  [ label = "DDG: im2col_ptr"] 
  "30064771119" -> "30064771161"  [ label = "DDG: im2col_ptr"] 
  "30064771100" -> "30064771161"  [ label = "DDG: input_offset_ptr"] 
  "30064771108" -> "30064771161"  [ label = "DDG: &amp;input_offset_ptr[b]"] 
  "111669149697" -> "30064771197"  [ label = "DDG: "] 
  "30064771104" -> "30064771107"  [ label = "DDG: b"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771080" -> "30064771107"  [ label = "DDG: input_size"] 
  "30064771108" -> "30064771107"  [ label = "DDG: input_size"] 
  "30064771110" -> "30064771109"  [ label = "DDG: input"] 
  "30064771106" -> "30064771109"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771087" -> "30064771111"  [ label = "DDG: quantized_input_ptr_batch"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771106" -> "30064771111"  [ label = "DDG: offset"] 
  "30064771082" -> "30064771162"  [ label = "DDG: input"] 
  "30064771110" -> "30064771162"  [ label = "DDG: input"] 
  "111669149697" -> "30064771162"  [ label = "DDG: "] 
  "115964116997" -> "30064771163"  [ label = "DDG: filter"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "115964116998" -> "30064771164"  [ label = "DDG: bias"] 
  "111669149697" -> "30064771164"  [ label = "DDG: "] 
  "30064771164" -> "30064771165"  [ label = "DDG: bias"] 
  "111669149697" -> "30064771165"  [ label = "DDG: "] 
  "115964117000" -> "30064771166"  [ label = "DDG: output"] 
  "111669149697" -> "30064771166"  [ label = "DDG: "] 
  "30064771166" -> "30064771167"  [ label = "DDG: output"] 
  "111669149697" -> "30064771167"  [ label = "DDG: "] 
  "30064771118" -> "30064771168"  [ label = "DDG: im2col"] 
  "111669149697" -> "30064771168"  [ label = "DDG: "] 
  "30064771172" -> "30064771171"  [ label = "DDG: context"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "30064771172" -> "30064771171"  [ label = "DDG: node"] 
  "30064771172" -> "30064771171"  [ label = "DDG: data-&gt;row_sums_index"] 
  "30064771172" -> "30064771171"  [ label = "DDG: &amp;row_sums"] 
  "30064771176" -> "30064771175"  [ label = "DDG: context"] 
  "111669149697" -> "30064771175"  [ label = "DDG: "] 
  "30064771176" -> "30064771175"  [ label = "DDG: node"] 
  "30064771176" -> "30064771175"  [ label = "DDG: data-&gt;accum_scratch_index"] 
  "30064771176" -> "30064771175"  [ label = "DDG: &amp;scratch"] 
  "30064771132" -> "30064771179"  [ label = "DDG: op_params.padding_type"] 
  "30064771145" -> "30064771179"  [ label = "DDG: op_params.dilation_width_factor"] 
  "30064771148" -> "30064771179"  [ label = "DDG: op_params.dilation_height_factor"] 
  "30064771151" -> "30064771179"  [ label = "DDG: op_params.stride_width"] 
  "30064771154" -> "30064771179"  [ label = "DDG: op_params.stride_height"] 
  "30064771157" -> "30064771179"  [ label = "DDG: op_params.float_activation_min"] 
  "30064771159" -> "30064771179"  [ label = "DDG: op_params.float_activation_max"] 
  "111669149697" -> "30064771179"  [ label = "DDG: "] 
  "30064771094" -> "30064771179"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771108" -> "30064771179"  [ label = "DDG: &amp;scaling_factors_ptr[b]"] 
  "30064771180" -> "30064771179"  [ label = "DDG: input"] 
  "30064771087" -> "30064771179"  [ label = "DDG: quantized_input_ptr_batch"] 
  "30064771181" -> "30064771179"  [ label = "DDG: filter"] 
  "30064771122" -> "30064771179"  [ label = "DDG: filter_ptr"] 
  "30064771182" -> "30064771179"  [ label = "DDG: bias"] 
  "30064771183" -> "30064771179"  [ label = "DDG: bias"] 
  "30064771184" -> "30064771179"  [ label = "DDG: output"] 
  "30064771185" -> "30064771179"  [ label = "DDG: output"] 
  "30064771186" -> "30064771179"  [ label = "DDG: im2col"] 
  "30064771116" -> "30064771179"  [ label = "DDG: im2col_ptr"] 
  "30064771119" -> "30064771179"  [ label = "DDG: im2col_ptr"] 
  "30064771100" -> "30064771179"  [ label = "DDG: input_offset_ptr"] 
  "30064771108" -> "30064771179"  [ label = "DDG: &amp;input_offset_ptr[b]"] 
  "30064771189" -> "30064771179"  [ label = "DDG: scratch"] 
  "30064771190" -> "30064771179"  [ label = "DDG: GetTensorData&lt;int32"] 
  "30064771190" -> "30064771179"  [ label = "DDG: scratch"] 
  "30064771192" -> "30064771179"  [ label = "DDG: GetTensorData&lt;int32_t"] 
  "30064771192" -> "30064771179"  [ label = "DDG: row_sums"] 
  "115964116995" -> "30064771179"  [ label = "DDG: data"] 
  "30064771196" -> "30064771179"  [ label = "DDG: context"] 
  "30064771082" -> "30064771110"  [ label = "DDG: input"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771096" -> "30064771172"  [ label = "DDG: context"] 
  "111669149697" -> "30064771172"  [ label = "DDG: "] 
  "30064771097" -> "30064771172"  [ label = "DDG: node"] 
  "115964116995" -> "30064771172"  [ label = "DDG: data"] 
  "30064771171" -> "30064771176"  [ label = "DDG: context"] 
  "111669149697" -> "30064771176"  [ label = "DDG: "] 
  "30064771172" -> "30064771176"  [ label = "DDG: node"] 
  "115964116995" -> "30064771176"  [ label = "DDG: data"] 
  "30064771082" -> "30064771180"  [ label = "DDG: input"] 
  "30064771110" -> "30064771180"  [ label = "DDG: input"] 
  "111669149697" -> "30064771180"  [ label = "DDG: "] 
  "115964116997" -> "30064771181"  [ label = "DDG: filter"] 
  "111669149697" -> "30064771181"  [ label = "DDG: "] 
  "115964116998" -> "30064771182"  [ label = "DDG: bias"] 
  "111669149697" -> "30064771182"  [ label = "DDG: "] 
  "30064771182" -> "30064771183"  [ label = "DDG: bias"] 
  "111669149697" -> "30064771183"  [ label = "DDG: "] 
  "115964117000" -> "30064771184"  [ label = "DDG: output"] 
  "111669149697" -> "30064771184"  [ label = "DDG: "] 
  "30064771184" -> "30064771185"  [ label = "DDG: output"] 
  "111669149697" -> "30064771185"  [ label = "DDG: "] 
  "30064771118" -> "30064771186"  [ label = "DDG: im2col"] 
  "111669149697" -> "30064771186"  [ label = "DDG: "] 
  "30064771176" -> "30064771189"  [ label = "DDG: &amp;scratch"] 
  "111669149697" -> "30064771189"  [ label = "DDG: "] 
  "30064771191" -> "30064771190"  [ label = "DDG: GetTensorData"] 
  "30064771191" -> "30064771190"  [ label = "DDG: int32"] 
  "30064771176" -> "30064771190"  [ label = "DDG: &amp;scratch"] 
  "30064771189" -> "30064771190"  [ label = "DDG: scratch"] 
  "111669149697" -> "30064771190"  [ label = "DDG: "] 
  "30064771193" -> "30064771192"  [ label = "DDG: GetTensorData"] 
  "30064771193" -> "30064771192"  [ label = "DDG: int32_t"] 
  "30064771172" -> "30064771192"  [ label = "DDG: &amp;row_sums"] 
  "111669149697" -> "30064771192"  [ label = "DDG: "] 
  "30064771175" -> "30064771196"  [ label = "DDG: context"] 
  "111669149697" -> "30064771196"  [ label = "DDG: "] 
  "30064771102" -> "30064771191"  [ label = "DDG: GetTensorData"] 
  "111669149697" -> "30064771191"  [ label = "DDG: "] 
  "30064771191" -> "30064771193"  [ label = "DDG: GetTensorData"] 
  "111669149697" -> "30064771193"  [ label = "DDG: "] 
  "30064771102" -> "30064771193"  [ label = "DDG: int32_t"] 
  "30064771104" -> "30064771112"  [ label = "CDG: "] 
  "30064771104" -> "30064771111"  [ label = "CDG: "] 
  "30064771104" -> "30064771110"  [ label = "CDG: "] 
  "30064771104" -> "30064771109"  [ label = "CDG: "] 
  "30064771104" -> "30064771108"  [ label = "CDG: "] 
  "30064771104" -> "30064771107"  [ label = "CDG: "] 
  "30064771104" -> "30064771106"  [ label = "CDG: "] 
  "30064771104" -> "30064771105"  [ label = "CDG: "] 
  "30064771104" -> "30064771104"  [ label = "CDG: "] 
  "30064771104" -> "30064771115"  [ label = "CDG: "] 
  "30064771104" -> "30064771114"  [ label = "CDG: "] 
  "30064771104" -> "30064771113"  [ label = "CDG: "] 
  "30064771118" -> "30064771121"  [ label = "CDG: "] 
  "30064771118" -> "30064771120"  [ label = "CDG: "] 
  "30064771118" -> "30064771119"  [ label = "CDG: "] 
  "30064771118" -> "55834574853"  [ label = "CDG: "] 
  "30064771118" -> "55834574852"  [ label = "CDG: "] 
  "30064771130" -> "30064771131"  [ label = "CDG: "] 
  "68719476819" -> "55834574886"  [ label = "CDG: "] 
  "68719476819" -> "55834574885"  [ label = "CDG: "] 
  "68719476819" -> "55834574884"  [ label = "CDG: "] 
  "68719476819" -> "55834574883"  [ label = "CDG: "] 
  "68719476819" -> "55834574882"  [ label = "CDG: "] 
  "68719476819" -> "55834574881"  [ label = "CDG: "] 
  "68719476819" -> "55834574880"  [ label = "CDG: "] 
  "68719476819" -> "55834574879"  [ label = "CDG: "] 
  "68719476819" -> "30064771176"  [ label = "CDG: "] 
  "68719476819" -> "30064771175"  [ label = "CDG: "] 
  "68719476819" -> "30064771174"  [ label = "CDG: "] 
  "68719476819" -> "30064771173"  [ label = "CDG: "] 
  "68719476819" -> "30064771172"  [ label = "CDG: "] 
  "68719476819" -> "30064771171"  [ label = "CDG: "] 
  "68719476819" -> "30064771170"  [ label = "CDG: "] 
  "68719476819" -> "30064771169"  [ label = "CDG: "] 
  "68719476819" -> "30064771168"  [ label = "CDG: "] 
  "68719476819" -> "30064771167"  [ label = "CDG: "] 
  "68719476819" -> "30064771166"  [ label = "CDG: "] 
  "68719476819" -> "30064771165"  [ label = "CDG: "] 
  "68719476819" -> "30064771164"  [ label = "CDG: "] 
  "68719476819" -> "30064771163"  [ label = "CDG: "] 
  "68719476819" -> "30064771162"  [ label = "CDG: "] 
  "68719476819" -> "30064771161"  [ label = "CDG: "] 
  "68719476819" -> "30064771192"  [ label = "CDG: "] 
  "68719476819" -> "30064771191"  [ label = "CDG: "] 
  "68719476819" -> "30064771190"  [ label = "CDG: "] 
  "68719476819" -> "30064771189"  [ label = "CDG: "] 
  "68719476819" -> "30064771188"  [ label = "CDG: "] 
  "68719476819" -> "30064771187"  [ label = "CDG: "] 
  "68719476819" -> "30064771186"  [ label = "CDG: "] 
  "68719476819" -> "30064771185"  [ label = "CDG: "] 
  "68719476819" -> "30064771184"  [ label = "CDG: "] 
  "68719476819" -> "30064771183"  [ label = "CDG: "] 
  "68719476819" -> "30064771182"  [ label = "CDG: "] 
  "68719476819" -> "30064771181"  [ label = "CDG: "] 
  "68719476819" -> "30064771180"  [ label = "CDG: "] 
  "68719476819" -> "30064771179"  [ label = "CDG: "] 
  "68719476819" -> "30064771178"  [ label = "CDG: "] 
  "68719476819" -> "30064771177"  [ label = "CDG: "] 
  "68719476819" -> "30064771198"  [ label = "CDG: "] 
  "68719476819" -> "30064771197"  [ label = "CDG: "] 
  "68719476819" -> "30064771196"  [ label = "CDG: "] 
  "68719476819" -> "30064771195"  [ label = "CDG: "] 
  "68719476819" -> "30064771194"  [ label = "CDG: "] 
  "68719476819" -> "30064771193"  [ label = "CDG: "] 
}
"""
)
