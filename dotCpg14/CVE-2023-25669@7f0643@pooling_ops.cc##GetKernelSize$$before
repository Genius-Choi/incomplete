[33mval[0m [36mres616[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "GetKernelSize" {  
"111669149697" [label = <(METHOD,GetKernelSize)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,XlaOpKernelContext* ctx)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    if (ctx-&gt;num_inputs() == 1) {
      retur...,{
    if (ctx-&gt;num_inputs() == 1) {
      retur...)<SUB>1</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (ctx-&gt;num_inputs() == 1))<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.equals,ctx-&gt;num_inputs() == 1)<SUB>2</SUB>> ]
"30064771073" [label = <(num_inputs,ctx-&gt;num_inputs())<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,ctx,ctx-&gt;num_inputs())<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,1,ctx-&gt;num_inputs() == 1)<SUB>2</SUB>> ]
"25769803778" [label = <(BLOCK,{
      return ksize_;
    },{
      return ksize_;
    })<SUB>2</SUB>> ]
"146028888064" [label = <(RETURN,return ksize_;,return ksize_;)<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,ksize_,return ksize_;)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,const TensorShape ksize_shape: TensorShape)<SUB>5</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,ksize_shape = ctx-&gt;InputShape(1))<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,ksize_shape,ksize_shape = ctx-&gt;InputShape(1))<SUB>5</SUB>> ]
"30064771075" [label = <(InputShape,ctx-&gt;InputShape(1))<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,ctx,ctx-&gt;InputShape(1))<SUB>5</SUB>> ]
"90194313217" [label = <(LITERAL,1,ctx-&gt;InputShape(1))<SUB>5</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (!TensorShapeUtils::IsVector(ksize_shape)))<SUB>7</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.logicalNot,!TensorShapeUtils::IsVector(ksize_shape))<SUB>7</SUB>> ]
"30064771077" [label = <(IsVector,TensorShapeUtils::IsVector(ksize_shape))<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,ksize_shape,TensorShapeUtils::IsVector(ksize_shape))<SUB>7</SUB>> ]
"25769803779" [label = <(BLOCK,{
      return errors::InvalidArgument(&quot;ksize m...,{
      return errors::InvalidArgument(&quot;ksize m...)<SUB>7</SUB>> ]
"146028888065" [label = <(RETURN,return errors::InvalidArgument(&quot;ksize must be a...,return errors::InvalidArgument(&quot;ksize must be a...)<SUB>8</SUB>> ]
"30064771078" [label = <(InvalidArgument,errors::InvalidArgument(&quot;ksize must be a vector...)<SUB>8</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;ksize must be a vector, not shape &quot;,errors::InvalidArgument(&quot;ksize must be a vector...)<SUB>8</SUB>> ]
"30064771079" [label = <(DebugString,ksize_shape.DebugString())<SUB>9</SUB>> ]
"68719476741" [label = <(IDENTIFIER,ksize_shape,ksize_shape.DebugString())<SUB>9</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (ksize_shape.num_elements() != num_dims()))<SUB>11</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.notEquals,ksize_shape.num_elements() != num_dims())<SUB>11</SUB>> ]
"30064771081" [label = <(num_elements,ksize_shape.num_elements())<SUB>11</SUB>> ]
"68719476742" [label = <(IDENTIFIER,ksize_shape,ksize_shape.num_elements())<SUB>11</SUB>> ]
"30064771082" [label = <(num_dims,num_dims())<SUB>11</SUB>> ]
"25769803780" [label = <(BLOCK,{
      return errors::InvalidArgument(
       ...,{
      return errors::InvalidArgument(
       ...)<SUB>11</SUB>> ]
"146028888066" [label = <(RETURN,return errors::InvalidArgument(
          &quot;Slid...,return errors::InvalidArgument(
          &quot;Slid...)<SUB>12</SUB>> ]
"30064771083" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;Sliding win...)<SUB>12</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;Sliding window ksize field must &quot;
          &quot;s...,errors::InvalidArgument(
          &quot;Sliding win...)<SUB>13</SUB>> ]
"30064771084" [label = <(num_dims,num_dims())<SUB>15</SUB>> ]
"90194313220" [label = <(LITERAL,&quot; dimensions&quot;,errors::InvalidArgument(
          &quot;Sliding win...)<SUB>15</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;int64_t&gt; ksize)<SUB>17</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;int64_t)<SUB>17</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>17</SUB>> ]
"68719476743" [label = <(IDENTIFIER,std,std::vector&lt;int64_t)<SUB>17</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>17</SUB>> ]
"68719476744" [label = <(IDENTIFIER,int64_t,std::vector&lt;int64_t)<SUB>17</SUB>> ]
"68719476745" [label = <(IDENTIFIER,ksize,std::vector&lt;int64_t&gt; ksize)<SUB>17</SUB>> ]
"94489280513" [label = <(LOCAL,auto status: auto)<SUB>18</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assignment,status = ctx-&gt;ConstantInputAsIntVector(1, &amp;ksize))<SUB>18</SUB>> ]
"68719476746" [label = <(IDENTIFIER,status,status = ctx-&gt;ConstantInputAsIntVector(1, &amp;ksize))<SUB>18</SUB>> ]
"30064771089" [label = <(ConstantInputAsIntVector,ctx-&gt;ConstantInputAsIntVector(1, &amp;ksize))<SUB>18</SUB>> ]
"68719476747" [label = <(IDENTIFIER,ctx,ctx-&gt;ConstantInputAsIntVector(1, &amp;ksize))<SUB>18</SUB>> ]
"90194313221" [label = <(LITERAL,1,ctx-&gt;ConstantInputAsIntVector(1, &amp;ksize))<SUB>18</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.addressOf,&amp;ksize)<SUB>18</SUB>> ]
"68719476748" [label = <(IDENTIFIER,ksize,ctx-&gt;ConstantInputAsIntVector(1, &amp;ksize))<SUB>18</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (!status.ok()))<SUB>19</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.logicalNot,!status.ok())<SUB>19</SUB>> ]
"30064771092" [label = <(ok,status.ok())<SUB>19</SUB>> ]
"68719476749" [label = <(IDENTIFIER,status,status.ok())<SUB>19</SUB>> ]
"25769803781" [label = <(BLOCK,{
      return status;
    },{
      return status;
    })<SUB>19</SUB>> ]
"146028888067" [label = <(RETURN,return status;,return status;)<SUB>20</SUB>> ]
"68719476750" [label = <(IDENTIFIER,status,return status;)<SUB>20</SUB>> ]
"146028888068" [label = <(RETURN,return ksize;,return ksize;)<SUB>22</SUB>> ]
"68719476751" [label = <(IDENTIFIER,ksize,return ksize;)<SUB>22</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,StatusOr&lt;std.vector&lt;int64_t&gt;&gt;)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771088"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "146028888068"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "47244640257" -> "30064771076"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "47244640258" -> "30064771080"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "68719476742"  [ label = "AST: "] 
  "25769803780" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "90194313219"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "90194313220"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "68719476745"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "68719476744"  [ label = "AST: "] 
  "30064771087" -> "68719476743"  [ label = "AST: "] 
  "30064771087" -> "55834574848"  [ label = "AST: "] 
  "30064771088" -> "68719476746"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476747"  [ label = "AST: "] 
  "30064771089" -> "90194313221"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476748"  [ label = "AST: "] 
  "47244640259" -> "30064771091"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476749"  [ label = "AST: "] 
  "25769803781" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "68719476750"  [ label = "AST: "] 
  "146028888068" -> "68719476751"  [ label = "AST: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771085" -> "30064771090"  [ label = "CFG: "] 
  "30064771088" -> "30064771092"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "146028888064"  [ label = "CFG: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771076" -> "30064771081"  [ label = "CFG: "] 
  "30064771080" -> "30064771084"  [ label = "CFG: "] 
  "30064771080" -> "55834574848"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771091" -> "146028888067"  [ label = "CFG: "] 
  "30064771091" -> "146028888068"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771080"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771078" -> "146028888065"  [ label = "CFG: "] 
  "30064771083" -> "146028888066"  [ label = "CFG: "] 
  "55834574848" -> "30064771087"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771073" -> "128849018880"  [ label = "DDG: ctx"] 
  "30064771072" -> "128849018880"  [ label = "DDG: ctx-&gt;num_inputs()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: ctx-&gt;num_inputs() == 1"] 
  "30064771086" -> "128849018880"  [ label = "DDG: int64_t"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: ctx"] 
  "30064771075" -> "30064771074"  [ label = "DDG: 1"] 
  "30064771089" -> "30064771088"  [ label = "DDG: ctx"] 
  "30064771089" -> "30064771088"  [ label = "DDG: 1"] 
  "30064771089" -> "30064771088"  [ label = "DDG: &amp;ksize"] 
  "68719476751" -> "146028888068"  [ label = "DDG: ksize"] 
  "30064771086" -> "30064771085"  [ label = "DDG: std::vector"] 
  "30064771086" -> "30064771085"  [ label = "DDG: int64_t"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771085" -> "68719476751"  [ label = "DDG: ksize"] 
  "30064771089" -> "68719476751"  [ label = "DDG: &amp;ksize"] 
  "111669149697" -> "68719476751"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: ctx"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "68719476737" -> "146028888064"  [ label = "DDG: ksize_"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771073" -> "30064771075"  [ label = "DDG: ctx"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: ksize_shape"] 
  "30064771078" -> "146028888065"  [ label = "DDG: errors::InvalidArgument(&quot;ksize must be a vector, not shape &quot;,
                                     ksize_shape.DebugString())"] 
  "30064771081" -> "30064771080"  [ label = "DDG: ksize_shape"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771083" -> "146028888066"  [ label = "DDG: errors::InvalidArgument(
          &quot;Sliding window ksize field must &quot;
          &quot;specify &quot;,
          num_dims(), &quot; dimensions&quot;)"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771075" -> "30064771089"  [ label = "DDG: ctx"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771085" -> "30064771089"  [ label = "DDG: ksize"] 
  "30064771092" -> "30064771091"  [ label = "DDG: status"] 
  "68719476750" -> "146028888067"  [ label = "DDG: status"] 
  "115964116992" -> "30064771073"  [ label = "DDG: ctx"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "68719476737"  [ label = "DDG: "] 
  "30064771074" -> "30064771077"  [ label = "DDG: ksize_shape"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771077" -> "30064771081"  [ label = "DDG: ksize_shape"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771088" -> "30064771092"  [ label = "DDG: status"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771092" -> "68719476750"  [ label = "DDG: status"] 
  "111669149697" -> "68719476750"  [ label = "DDG: "] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: ksize_shape"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771077" -> "30064771079"  [ label = "DDG: ksize_shape"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771076" -> "30064771081"  [ label = "CDG: "] 
  "30064771076" -> "30064771082"  [ label = "CDG: "] 
  "30064771076" -> "30064771079"  [ label = "CDG: "] 
  "30064771076" -> "30064771080"  [ label = "CDG: "] 
  "30064771076" -> "146028888065"  [ label = "CDG: "] 
  "30064771076" -> "30064771078"  [ label = "CDG: "] 
  "30064771080" -> "30064771091"  [ label = "CDG: "] 
  "30064771080" -> "30064771092"  [ label = "CDG: "] 
  "30064771080" -> "30064771089"  [ label = "CDG: "] 
  "30064771080" -> "30064771090"  [ label = "CDG: "] 
  "30064771080" -> "30064771087"  [ label = "CDG: "] 
  "30064771080" -> "30064771088"  [ label = "CDG: "] 
  "30064771080" -> "30064771085"  [ label = "CDG: "] 
  "30064771080" -> "30064771086"  [ label = "CDG: "] 
  "30064771080" -> "30064771083"  [ label = "CDG: "] 
  "30064771080" -> "30064771084"  [ label = "CDG: "] 
  "30064771080" -> "146028888066"  [ label = "CDG: "] 
  "30064771080" -> "55834574848"  [ label = "CDG: "] 
  "30064771091" -> "146028888068"  [ label = "CDG: "] 
  "30064771091" -> "146028888067"  [ label = "CDG: "] 
}
"""
)
