[33mval[0m [36mres1663[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "chunk_new_with_alloc_size" {  
"111669149697" [label = <(METHOD,chunk_new_with_alloc_size)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,size_t alloc)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
  chunk_t *ch;
  ch = tor_malloc(alloc);
  ch...,{
  chunk_t *ch;
  ch = tor_malloc(alloc);
  ch...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,chunk_t* ch: chunk_t*)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,ch = tor_malloc(alloc))<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,ch,ch = tor_malloc(alloc))<SUB>4</SUB>> ]
"30064771073" [label = <(tor_malloc,tor_malloc(alloc))<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,alloc,tor_malloc(alloc))<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,ch-&gt;next = NULL)<SUB>5</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.indirectFieldAccess,ch-&gt;next)<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,ch,ch-&gt;next = NULL)<SUB>5</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,next,next)<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,NULL,ch-&gt;next = NULL)<SUB>5</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,ch-&gt;datalen = 0)<SUB>6</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.indirectFieldAccess,ch-&gt;datalen)<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,ch,ch-&gt;datalen = 0)<SUB>6</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,datalen,datalen)<SUB>6</SUB>> ]
"90194313216" [label = <(LITERAL,0,ch-&gt;datalen = 0)<SUB>6</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,ch-&gt;memlen = CHUNK_SIZE_WITH_ALLOC(alloc))<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indirectFieldAccess,ch-&gt;memlen)<SUB>10</SUB>> ]
"68719476741" [label = <(IDENTIFIER,ch,ch-&gt;memlen = CHUNK_SIZE_WITH_ALLOC(alloc))<SUB>10</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,memlen,memlen)<SUB>10</SUB>> ]
"30064771080" [label = <(CHUNK_SIZE_WITH_ALLOC,CHUNK_SIZE_WITH_ALLOC(alloc))<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,alloc,CHUNK_SIZE_WITH_ALLOC(alloc))<SUB>10</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignmentPlus,total_bytes_allocated_in_chunks += alloc)<SUB>11</SUB>> ]
"68719476743" [label = <(IDENTIFIER,total_bytes_allocated_in_chunks,total_bytes_allocated_in_chunks += alloc)<SUB>11</SUB>> ]
"68719476744" [label = <(IDENTIFIER,alloc,total_bytes_allocated_in_chunks += alloc)<SUB>11</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,ch-&gt;data = &amp;ch-&gt;mem[0])<SUB>12</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.indirectFieldAccess,ch-&gt;data)<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,ch,ch-&gt;data = &amp;ch-&gt;mem[0])<SUB>12</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,data,data)<SUB>12</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.addressOf,&amp;ch-&gt;mem[0])<SUB>12</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.indirectIndexAccess,ch-&gt;mem[0])<SUB>12</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indirectFieldAccess,ch-&gt;mem)<SUB>12</SUB>> ]
"68719476746" [label = <(IDENTIFIER,ch,ch-&gt;data = &amp;ch-&gt;mem[0])<SUB>12</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,mem,mem)<SUB>12</SUB>> ]
"90194313217" [label = <(LITERAL,0,ch-&gt;data = &amp;ch-&gt;mem[0])<SUB>12</SUB>> ]
"30064771087" [label = <(CHUNK_SET_SENTINEL,CHUNK_SET_SENTINEL(ch, alloc))<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,ch,CHUNK_SET_SENTINEL(ch, alloc))<SUB>13</SUB>> ]
"68719476748" [label = <(IDENTIFIER,alloc,CHUNK_SET_SENTINEL(ch, alloc))<SUB>13</SUB>> ]
"146028888064" [label = <(RETURN,return ch;,return ch;)<SUB>14</SUB>> ]
"68719476749" [label = <(IDENTIFIER,ch,return ch;)<SUB>14</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "55834574848"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "90194313216"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "55834574849"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771079" -> "55834574850"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "55834574851"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "90194313217"  [ label = "AST: "] 
  "30064771086" -> "68719476746"  [ label = "AST: "] 
  "30064771086" -> "55834574852"  [ label = "AST: "] 
  "30064771087" -> "68719476747"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "146028888064" -> "68719476749"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "CFG: "] 
  "30064771074" -> "55834574849"  [ label = "CFG: "] 
  "30064771076" -> "55834574850"  [ label = "CFG: "] 
  "30064771078" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "55834574851"  [ label = "CFG: "] 
  "30064771082" -> "30064771087"  [ label = "CFG: "] 
  "30064771087" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771078"  [ label = "CFG: "] 
  "30064771083" -> "55834574852"  [ label = "CFG: "] 
  "30064771084" -> "30064771082"  [ label = "CFG: "] 
  "55834574848" -> "30064771075"  [ label = "CFG: "] 
  "55834574849" -> "30064771077"  [ label = "CFG: "] 
  "55834574850" -> "30064771079"  [ label = "CFG: "] 
  "55834574851" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "55834574852" -> "30064771086"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: tor_malloc(alloc)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: ch = tor_malloc(alloc)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: ch-&gt;next"] 
  "30064771074" -> "128849018880"  [ label = "DDG: ch-&gt;next = NULL"] 
  "30064771076" -> "128849018880"  [ label = "DDG: ch-&gt;datalen"] 
  "30064771076" -> "128849018880"  [ label = "DDG: ch-&gt;datalen = 0"] 
  "30064771078" -> "128849018880"  [ label = "DDG: ch-&gt;memlen"] 
  "30064771078" -> "128849018880"  [ label = "DDG: CHUNK_SIZE_WITH_ALLOC(alloc)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: ch-&gt;memlen = CHUNK_SIZE_WITH_ALLOC(alloc)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: total_bytes_allocated_in_chunks += alloc"] 
  "30064771082" -> "128849018880"  [ label = "DDG: ch-&gt;data"] 
  "30064771082" -> "128849018880"  [ label = "DDG: &amp;ch-&gt;mem[0]"] 
  "30064771082" -> "128849018880"  [ label = "DDG: ch-&gt;data = &amp;ch-&gt;mem[0]"] 
  "30064771087" -> "128849018880"  [ label = "DDG: ch"] 
  "30064771087" -> "128849018880"  [ label = "DDG: alloc"] 
  "30064771087" -> "128849018880"  [ label = "DDG: CHUNK_SET_SENTINEL(ch, alloc)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: total_bytes_allocated_in_chunks"] 
  "30064771074" -> "128849018880"  [ label = "DDG: NULL"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: alloc"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771080" -> "30064771078"  [ label = "DDG: alloc"] 
  "30064771080" -> "30064771081"  [ label = "DDG: alloc"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "68719476749" -> "146028888064"  [ label = "DDG: ch"] 
  "30064771072" -> "30064771087"  [ label = "DDG: ch"] 
  "30064771074" -> "30064771087"  [ label = "DDG: ch-&gt;next"] 
  "30064771076" -> "30064771087"  [ label = "DDG: ch-&gt;datalen"] 
  "30064771078" -> "30064771087"  [ label = "DDG: ch-&gt;memlen"] 
  "30064771082" -> "30064771087"  [ label = "DDG: ch-&gt;data"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771080" -> "30064771087"  [ label = "DDG: alloc"] 
  "30064771087" -> "68719476749"  [ label = "DDG: ch"] 
  "30064771082" -> "68719476749"  [ label = "DDG: ch-&gt;data"] 
  "30064771078" -> "68719476749"  [ label = "DDG: ch-&gt;memlen"] 
  "30064771076" -> "68719476749"  [ label = "DDG: ch-&gt;datalen"] 
  "30064771074" -> "68719476749"  [ label = "DDG: ch-&gt;next"] 
  "111669149697" -> "68719476749"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: alloc"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771073" -> "30064771080"  [ label = "DDG: alloc"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
}
"""
)
