[33mval[0m [36mres1066[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "ExtractAndCheckRnnForward" {  
"111669149697" [label = <(METHOD,ExtractAndCheckRnnForward)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const CudnnRnnDescriptor&amp; rnn_desc)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,const CudnnRnnSequenceTensorDescriptor&amp; input_desc)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,const DeviceMemory&lt;T&gt;&amp; input_data)<SUB>4</SUB>> ]
"115964116995" [label = <(PARAM,const CudnnRnnStateTensorDescriptor&amp; input_h_desc)<SUB>5</SUB>> ]
"115964116996" [label = <(PARAM,const DeviceMemory&lt;T&gt;&amp; input_h_data)<SUB>6</SUB>> ]
"115964116997" [label = <(PARAM,const CudnnRnnStateTensorDescriptor&amp; input_c_desc)<SUB>7</SUB>> ]
"115964116998" [label = <(PARAM,const DeviceMemory&lt;T&gt;&amp; input_c_data)<SUB>8</SUB>> ]
"115964116999" [label = <(PARAM,const DeviceMemory&lt;T&gt;&amp; params)<SUB>8</SUB>> ]
"115964117000" [label = <(PARAM,const CudnnRnnSequenceTensorDescriptor&amp; output_desc)<SUB>9</SUB>> ]
"115964117001" [label = <(PARAM,const DeviceMemory&lt;T&gt;&amp; output_data)<SUB>10</SUB>> ]
"115964117002" [label = <(PARAM,const CudnnRnnStateTensorDescriptor&amp; output_h_desc)<SUB>11</SUB>> ]
"115964117003" [label = <(PARAM,const DeviceMemory&lt;T&gt;&amp; output_h_data)<SUB>12</SUB>> ]
"115964117004" [label = <(PARAM,const CudnnRnnStateTensorDescriptor&amp; output_c_desc)<SUB>13</SUB>> ]
"115964117005" [label = <(PARAM,const DeviceMemory&lt;T&gt;&amp; output_c_data)<SUB>14</SUB>> ]
"25769803777" [label = <(BLOCK,{
  // extract model parameters
  RnnModelDims ...,{
  // extract model parameters
  RnnModelDims ...)<SUB>14</SUB>> ]
"94489280512" [label = <(LOCAL,RnnModelDims model_dims: RnnModelDims)<SUB>16</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,model_dims.num_layers = rnn_desc.num_layers())<SUB>17</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.fieldAccess,model_dims.num_layers)<SUB>17</SUB>> ]
"68719476736" [label = <(IDENTIFIER,model_dims,model_dims.num_layers = rnn_desc.num_layers())<SUB>17</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,num_layers,num_layers)<SUB>17</SUB>> ]
"30064771074" [label = <(num_layers,rnn_desc.num_layers())<SUB>17</SUB>> ]
"68719476737" [label = <(IDENTIFIER,rnn_desc,rnn_desc.num_layers())<SUB>17</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,model_dims.batch_size = input_desc.batch_size())<SUB>18</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,model_dims.batch_size)<SUB>18</SUB>> ]
"68719476738" [label = <(IDENTIFIER,model_dims,model_dims.batch_size = input_desc.batch_size())<SUB>18</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,batch_size,batch_size)<SUB>18</SUB>> ]
"30064771077" [label = <(batch_size,input_desc.batch_size())<SUB>18</SUB>> ]
"68719476739" [label = <(IDENTIFIER,input_desc,input_desc.batch_size())<SUB>18</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,model_dims.max_seq_length = input_desc.max_seq_...)<SUB>19</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,model_dims.max_seq_length)<SUB>19</SUB>> ]
"68719476740" [label = <(IDENTIFIER,model_dims,model_dims.max_seq_length = input_desc.max_seq_...)<SUB>19</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,max_seq_length,max_seq_length)<SUB>19</SUB>> ]
"30064771080" [label = <(max_seq_length,input_desc.max_seq_length())<SUB>19</SUB>> ]
"68719476741" [label = <(IDENTIFIER,input_desc,input_desc.max_seq_length())<SUB>19</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,model_dims.hidden_size = rnn_desc.hidden_size())<SUB>20</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.fieldAccess,model_dims.hidden_size)<SUB>20</SUB>> ]
"68719476742" [label = <(IDENTIFIER,model_dims,model_dims.hidden_size = rnn_desc.hidden_size())<SUB>20</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,hidden_size,hidden_size)<SUB>20</SUB>> ]
"30064771083" [label = <(hidden_size,rnn_desc.hidden_size())<SUB>20</SUB>> ]
"68719476743" [label = <(IDENTIFIER,rnn_desc,rnn_desc.hidden_size())<SUB>20</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,model_dims.input_size = input_desc.data_size())<SUB>21</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.fieldAccess,model_dims.input_size)<SUB>21</SUB>> ]
"68719476744" [label = <(IDENTIFIER,model_dims,model_dims.input_size = input_desc.data_size())<SUB>21</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,input_size,input_size)<SUB>21</SUB>> ]
"30064771086" [label = <(data_size,input_desc.data_size())<SUB>21</SUB>> ]
"68719476745" [label = <(IDENTIFIER,input_desc,input_desc.data_size())<SUB>21</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,model_dims.cell_size = rnn_desc.cell_size())<SUB>22</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,model_dims.cell_size)<SUB>22</SUB>> ]
"68719476746" [label = <(IDENTIFIER,model_dims,model_dims.cell_size = rnn_desc.cell_size())<SUB>22</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,cell_size,cell_size)<SUB>22</SUB>> ]
"30064771089" [label = <(cell_size,rnn_desc.cell_size())<SUB>22</SUB>> ]
"68719476747" [label = <(IDENTIFIER,rnn_desc,rnn_desc.cell_size())<SUB>22</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,model_dims.dir_count =
      (rnn_desc.directio...)<SUB>23</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.fieldAccess,model_dims.dir_count)<SUB>23</SUB>> ]
"68719476748" [label = <(IDENTIFIER,model_dims,model_dims.dir_count =
      (rnn_desc.directio...)<SUB>23</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,dir_count,dir_count)<SUB>23</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.conditional,(rnn_desc.direction_mode() == CUDNN_BIDIRECTION...)<SUB>24</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.equals,rnn_desc.direction_mode() == CUDNN_BIDIRECTIONAL)<SUB>24</SUB>> ]
"30064771094" [label = <(direction_mode,rnn_desc.direction_mode())<SUB>24</SUB>> ]
"68719476749" [label = <(IDENTIFIER,rnn_desc,rnn_desc.direction_mode())<SUB>24</SUB>> ]
"68719476750" [label = <(IDENTIFIER,CUDNN_BIDIRECTIONAL,rnn_desc.direction_mode() == CUDNN_BIDIRECTIONAL)<SUB>24</SUB>> ]
"90194313216" [label = <(LITERAL,2,(rnn_desc.direction_mode() == CUDNN_BIDIRECTION...)<SUB>24</SUB>> ]
"90194313217" [label = <(LITERAL,1,(rnn_desc.direction_mode() == CUDNN_BIDIRECTION...)<SUB>24</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!(input_h_desc.num_layers() ==
            model_dims.num_layers * model_dims.dir_count &amp;&amp;
        input_h_desc.batch_size() == model_dims.batch_size &amp;&amp;
        input_h_desc.data_size() == model_dims.hidden_size)))<SUB>27</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.logicalNot,!(input_h_desc.num_layers() ==
            mode...)<SUB>27</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.logicalAnd,input_h_desc.num_layers() ==
            model_...)<SUB>27</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.logicalAnd,input_h_desc.num_layers() ==
            model_...)<SUB>27</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.equals,input_h_desc.num_layers() ==
            model_...)<SUB>27</SUB>> ]
"30064771099" [label = <(num_layers,input_h_desc.num_layers())<SUB>27</SUB>> ]
"68719476751" [label = <(IDENTIFIER,input_h_desc,input_h_desc.num_layers())<SUB>27</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.multiplication,model_dims.num_layers * model_dims.dir_count)<SUB>28</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.fieldAccess,model_dims.num_layers)<SUB>28</SUB>> ]
"68719476752" [label = <(IDENTIFIER,model_dims,model_dims.num_layers * model_dims.dir_count)<SUB>28</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,num_layers,num_layers)<SUB>28</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.fieldAccess,model_dims.dir_count)<SUB>28</SUB>> ]
"68719476753" [label = <(IDENTIFIER,model_dims,model_dims.num_layers * model_dims.dir_count)<SUB>28</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,dir_count,dir_count)<SUB>28</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.equals,input_h_desc.batch_size() == model_dims.batch_size)<SUB>29</SUB>> ]
"30064771104" [label = <(batch_size,input_h_desc.batch_size())<SUB>29</SUB>> ]
"68719476754" [label = <(IDENTIFIER,input_h_desc,input_h_desc.batch_size())<SUB>29</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.fieldAccess,model_dims.batch_size)<SUB>29</SUB>> ]
"68719476755" [label = <(IDENTIFIER,model_dims,input_h_desc.batch_size() == model_dims.batch_size)<SUB>29</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,batch_size,batch_size)<SUB>29</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.equals,input_h_desc.data_size() == model_dims.hidden_size)<SUB>30</SUB>> ]
"30064771107" [label = <(data_size,input_h_desc.data_size())<SUB>30</SUB>> ]
"68719476756" [label = <(IDENTIFIER,input_h_desc,input_h_desc.data_size())<SUB>30</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.fieldAccess,model_dims.hidden_size)<SUB>30</SUB>> ]
"68719476757" [label = <(IDENTIFIER,model_dims,input_h_desc.data_size() == model_dims.hidden_size)<SUB>30</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,hidden_size,hidden_size)<SUB>30</SUB>> ]
"25769803778" [label = <(BLOCK,{
    return tsl::Status(port::error::INVALID_A...,{
    return tsl::Status(port::error::INVALID_A...)<SUB>30</SUB>> ]
"146028888064" [label = <(RETURN,return tsl::Status(port::error::INVALID_ARGUMEN...,return tsl::Status(port::error::INVALID_ARGUMEN...)<SUB>31</SUB>> ]
"30064771109" [label = <(Status,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>31</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.fieldAccess,port::error::INVALID_ARGUMENT)<SUB>31</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.fieldAccess,port::error)<SUB>31</SUB>> ]
"68719476758" [label = <(IDENTIFIER,port,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>31</SUB>> ]
"68719476759" [label = <(IDENTIFIER,error,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>31</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>31</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;Invalid input_h shape&quot;,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>31</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (!(input_h_desc.num_layers() == input_c_desc.num_layers() &amp;&amp;
        input_h_desc.batch_size() == input_c_desc.batch_size() &amp;&amp;
        input_h_desc.data_size() &lt;= input_c_desc.data_size())))<SUB>35</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.logicalNot,!(input_h_desc.num_layers() == input_c_desc.num...)<SUB>35</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.logicalAnd,input_h_desc.num_layers() == input_c_desc.num_l...)<SUB>35</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.logicalAnd,input_h_desc.num_layers() == input_c_desc.num_l...)<SUB>35</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.equals,input_h_desc.num_layers() == input_c_desc.num_l...)<SUB>35</SUB>> ]
"30064771116" [label = <(num_layers,input_h_desc.num_layers())<SUB>35</SUB>> ]
"68719476760" [label = <(IDENTIFIER,input_h_desc,input_h_desc.num_layers())<SUB>35</SUB>> ]
"30064771117" [label = <(num_layers,input_c_desc.num_layers())<SUB>35</SUB>> ]
"68719476761" [label = <(IDENTIFIER,input_c_desc,input_c_desc.num_layers())<SUB>35</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.equals,input_h_desc.batch_size() == input_c_desc.batch...)<SUB>36</SUB>> ]
"30064771119" [label = <(batch_size,input_h_desc.batch_size())<SUB>36</SUB>> ]
"68719476762" [label = <(IDENTIFIER,input_h_desc,input_h_desc.batch_size())<SUB>36</SUB>> ]
"30064771120" [label = <(batch_size,input_c_desc.batch_size())<SUB>36</SUB>> ]
"68719476763" [label = <(IDENTIFIER,input_c_desc,input_c_desc.batch_size())<SUB>36</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.lessEqualsThan,input_h_desc.data_size() &lt;= input_c_desc.data_s...)<SUB>37</SUB>> ]
"30064771122" [label = <(data_size,input_h_desc.data_size())<SUB>37</SUB>> ]
"68719476764" [label = <(IDENTIFIER,input_h_desc,input_h_desc.data_size())<SUB>37</SUB>> ]
"30064771123" [label = <(data_size,input_c_desc.data_size())<SUB>37</SUB>> ]
"68719476765" [label = <(IDENTIFIER,input_c_desc,input_c_desc.data_size())<SUB>37</SUB>> ]
"25769803779" [label = <(BLOCK,{
    return tsl::Status(port::error::INVALID_A...,{
    return tsl::Status(port::error::INVALID_A...)<SUB>37</SUB>> ]
"146028888065" [label = <(RETURN,return tsl::Status(port::error::INVALID_ARGUMEN...,return tsl::Status(port::error::INVALID_ARGUMEN...)<SUB>38</SUB>> ]
"30064771124" [label = <(Status,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>38</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.fieldAccess,port::error::INVALID_ARGUMENT)<SUB>38</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.fieldAccess,port::error)<SUB>38</SUB>> ]
"68719476766" [label = <(IDENTIFIER,port,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>38</SUB>> ]
"68719476767" [label = <(IDENTIFIER,error,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>38</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>38</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;Invalid input_c shape&quot;,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>38</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (!(output_desc.max_seq_length() == model_dims.max_seq_length &amp;&amp;
        output_desc.batch_size() == model_dims.batch_size &amp;&amp;
        output_desc.data_size() ==
            model_dims.hidden_size * model_dims.dir_count)))<SUB>40</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.logicalNot,!(output_desc.max_seq_length() == model_dims.ma...)<SUB>40</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.logicalAnd,output_desc.max_seq_length() == model_dims.max_...)<SUB>40</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.logicalAnd,output_desc.max_seq_length() == model_dims.max_...)<SUB>40</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.equals,output_desc.max_seq_length() == model_dims.max_...)<SUB>40</SUB>> ]
"30064771131" [label = <(max_seq_length,output_desc.max_seq_length())<SUB>40</SUB>> ]
"68719476768" [label = <(IDENTIFIER,output_desc,output_desc.max_seq_length())<SUB>40</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.fieldAccess,model_dims.max_seq_length)<SUB>40</SUB>> ]
"68719476769" [label = <(IDENTIFIER,model_dims,output_desc.max_seq_length() == model_dims.max_...)<SUB>40</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,max_seq_length,max_seq_length)<SUB>40</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.equals,output_desc.batch_size() == model_dims.batch_size)<SUB>41</SUB>> ]
"30064771134" [label = <(batch_size,output_desc.batch_size())<SUB>41</SUB>> ]
"68719476770" [label = <(IDENTIFIER,output_desc,output_desc.batch_size())<SUB>41</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.fieldAccess,model_dims.batch_size)<SUB>41</SUB>> ]
"68719476771" [label = <(IDENTIFIER,model_dims,output_desc.batch_size() == model_dims.batch_size)<SUB>41</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,batch_size,batch_size)<SUB>41</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.equals,output_desc.data_size() ==
            model_di...)<SUB>42</SUB>> ]
"30064771137" [label = <(data_size,output_desc.data_size())<SUB>42</SUB>> ]
"68719476772" [label = <(IDENTIFIER,output_desc,output_desc.data_size())<SUB>42</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.multiplication,model_dims.hidden_size * model_dims.dir_count)<SUB>43</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.fieldAccess,model_dims.hidden_size)<SUB>43</SUB>> ]
"68719476773" [label = <(IDENTIFIER,model_dims,model_dims.hidden_size * model_dims.dir_count)<SUB>43</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,hidden_size,hidden_size)<SUB>43</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.fieldAccess,model_dims.dir_count)<SUB>43</SUB>> ]
"68719476774" [label = <(IDENTIFIER,model_dims,model_dims.hidden_size * model_dims.dir_count)<SUB>43</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,dir_count,dir_count)<SUB>43</SUB>> ]
"25769803780" [label = <(BLOCK,{
    return tsl::Status(port::error::INVALID_A...,{
    return tsl::Status(port::error::INVALID_A...)<SUB>43</SUB>> ]
"146028888066" [label = <(RETURN,return tsl::Status(port::error::INVALID_ARGUMEN...,return tsl::Status(port::error::INVALID_ARGUMEN...)<SUB>44</SUB>> ]
"30064771141" [label = <(Status,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>44</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.fieldAccess,port::error::INVALID_ARGUMENT)<SUB>44</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.fieldAccess,port::error)<SUB>44</SUB>> ]
"68719476775" [label = <(IDENTIFIER,port,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>44</SUB>> ]
"68719476776" [label = <(IDENTIFIER,error,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>44</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>44</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;Invalid output shape&quot;,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>44</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (!(input_h_desc.num_layers() == output_h_desc.num_layers() &amp;&amp;
        input_h_desc.batch_size() == output_h_desc.batch_size() &amp;&amp;
        input_h_desc.data_size() == output_h_desc.data_size())))<SUB>46</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.logicalNot,!(input_h_desc.num_layers() == output_h_desc.nu...)<SUB>46</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.logicalAnd,input_h_desc.num_layers() == output_h_desc.num_...)<SUB>46</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.logicalAnd,input_h_desc.num_layers() == output_h_desc.num_...)<SUB>46</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.equals,input_h_desc.num_layers() == output_h_desc.num_...)<SUB>46</SUB>> ]
"30064771148" [label = <(num_layers,input_h_desc.num_layers())<SUB>46</SUB>> ]
"68719476777" [label = <(IDENTIFIER,input_h_desc,input_h_desc.num_layers())<SUB>46</SUB>> ]
"30064771149" [label = <(num_layers,output_h_desc.num_layers())<SUB>46</SUB>> ]
"68719476778" [label = <(IDENTIFIER,output_h_desc,output_h_desc.num_layers())<SUB>46</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.equals,input_h_desc.batch_size() == output_h_desc.batc...)<SUB>47</SUB>> ]
"30064771151" [label = <(batch_size,input_h_desc.batch_size())<SUB>47</SUB>> ]
"68719476779" [label = <(IDENTIFIER,input_h_desc,input_h_desc.batch_size())<SUB>47</SUB>> ]
"30064771152" [label = <(batch_size,output_h_desc.batch_size())<SUB>47</SUB>> ]
"68719476780" [label = <(IDENTIFIER,output_h_desc,output_h_desc.batch_size())<SUB>47</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.equals,input_h_desc.data_size() == output_h_desc.data_...)<SUB>48</SUB>> ]
"30064771154" [label = <(data_size,input_h_desc.data_size())<SUB>48</SUB>> ]
"68719476781" [label = <(IDENTIFIER,input_h_desc,input_h_desc.data_size())<SUB>48</SUB>> ]
"30064771155" [label = <(data_size,output_h_desc.data_size())<SUB>48</SUB>> ]
"68719476782" [label = <(IDENTIFIER,output_h_desc,output_h_desc.data_size())<SUB>48</SUB>> ]
"25769803781" [label = <(BLOCK,{
    return tsl::Status(port::error::INVALID_A...,{
    return tsl::Status(port::error::INVALID_A...)<SUB>48</SUB>> ]
"146028888067" [label = <(RETURN,return tsl::Status(port::error::INVALID_ARGUMEN...,return tsl::Status(port::error::INVALID_ARGUMEN...)<SUB>49</SUB>> ]
"30064771156" [label = <(Status,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>49</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.fieldAccess,port::error::INVALID_ARGUMENT)<SUB>49</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.fieldAccess,port::error)<SUB>49</SUB>> ]
"68719476783" [label = <(IDENTIFIER,port,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>49</SUB>> ]
"68719476784" [label = <(IDENTIFIER,error,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>49</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>49</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;Invalid output_h shape&quot;,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>49</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (!(input_h_desc.num_layers() == output_c_desc.num_layers() &amp;&amp;
        input_h_desc.batch_size() == output_c_desc.batch_size() &amp;&amp;
        input_h_desc.data_size() &lt;= output_c_desc.data_size())))<SUB>51</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.logicalNot,!(input_h_desc.num_layers() == output_c_desc.nu...)<SUB>51</SUB>> ]
"30064771160" [label = <(&lt;operator&gt;.logicalAnd,input_h_desc.num_layers() == output_c_desc.num_...)<SUB>51</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.logicalAnd,input_h_desc.num_layers() == output_c_desc.num_...)<SUB>51</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.equals,input_h_desc.num_layers() == output_c_desc.num_...)<SUB>51</SUB>> ]
"30064771163" [label = <(num_layers,input_h_desc.num_layers())<SUB>51</SUB>> ]
"68719476785" [label = <(IDENTIFIER,input_h_desc,input_h_desc.num_layers())<SUB>51</SUB>> ]
"30064771164" [label = <(num_layers,output_c_desc.num_layers())<SUB>51</SUB>> ]
"68719476786" [label = <(IDENTIFIER,output_c_desc,output_c_desc.num_layers())<SUB>51</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.equals,input_h_desc.batch_size() == output_c_desc.batc...)<SUB>52</SUB>> ]
"30064771166" [label = <(batch_size,input_h_desc.batch_size())<SUB>52</SUB>> ]
"68719476787" [label = <(IDENTIFIER,input_h_desc,input_h_desc.batch_size())<SUB>52</SUB>> ]
"30064771167" [label = <(batch_size,output_c_desc.batch_size())<SUB>52</SUB>> ]
"68719476788" [label = <(IDENTIFIER,output_c_desc,output_c_desc.batch_size())<SUB>52</SUB>> ]
"30064771168" [label = <(&lt;operator&gt;.lessEqualsThan,input_h_desc.data_size() &lt;= output_c_desc.data_...)<SUB>53</SUB>> ]
"30064771169" [label = <(data_size,input_h_desc.data_size())<SUB>53</SUB>> ]
"68719476789" [label = <(IDENTIFIER,input_h_desc,input_h_desc.data_size())<SUB>53</SUB>> ]
"30064771170" [label = <(data_size,output_c_desc.data_size())<SUB>53</SUB>> ]
"68719476790" [label = <(IDENTIFIER,output_c_desc,output_c_desc.data_size())<SUB>53</SUB>> ]
"25769803782" [label = <(BLOCK,{
    return tsl::Status(port::error::INVALID_A...,{
    return tsl::Status(port::error::INVALID_A...)<SUB>53</SUB>> ]
"146028888068" [label = <(RETURN,return tsl::Status(port::error::INVALID_ARGUMEN...,return tsl::Status(port::error::INVALID_ARGUMEN...)<SUB>54</SUB>> ]
"30064771171" [label = <(Status,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>54</SUB>> ]
"30064771172" [label = <(&lt;operator&gt;.fieldAccess,port::error::INVALID_ARGUMENT)<SUB>54</SUB>> ]
"30064771173" [label = <(&lt;operator&gt;.fieldAccess,port::error)<SUB>54</SUB>> ]
"68719476791" [label = <(IDENTIFIER,port,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>54</SUB>> ]
"68719476792" [label = <(IDENTIFIER,error,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>54</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>54</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;Invalid output_c shape&quot;,tsl::Status(port::error::INVALID_ARGUMENT, &quot;Inv...)<SUB>54</SUB>> ]
"146028888069" [label = <(RETURN,return model_dims;,return model_dims;)<SUB>57</SUB>> ]
"68719476793" [label = <(IDENTIFIER,model_dims,return model_dims;)<SUB>57</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,StatusOr&lt;RnnModelDims&gt;)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "115964116998"  [ label = "AST: "] 
  "111669149697" -> "115964116999"  [ label = "AST: "] 
  "111669149697" -> "115964117000"  [ label = "AST: "] 
  "111669149697" -> "115964117001"  [ label = "AST: "] 
  "111669149697" -> "115964117002"  [ label = "AST: "] 
  "111669149697" -> "115964117003"  [ label = "AST: "] 
  "111669149697" -> "115964117004"  [ label = "AST: "] 
  "111669149697" -> "115964117005"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "146028888069"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "55834574849"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476740"  [ label = "AST: "] 
  "30064771079" -> "55834574850"  [ label = "AST: "] 
  "30064771080" -> "68719476741"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476742"  [ label = "AST: "] 
  "30064771082" -> "55834574851"  [ label = "AST: "] 
  "30064771083" -> "68719476743"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "68719476744"  [ label = "AST: "] 
  "30064771085" -> "55834574852"  [ label = "AST: "] 
  "30064771086" -> "68719476745"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "68719476746"  [ label = "AST: "] 
  "30064771088" -> "55834574853"  [ label = "AST: "] 
  "30064771089" -> "68719476747"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "68719476748"  [ label = "AST: "] 
  "30064771091" -> "55834574854"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "90194313216"  [ label = "AST: "] 
  "30064771092" -> "90194313217"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "68719476750"  [ label = "AST: "] 
  "30064771094" -> "68719476749"  [ label = "AST: "] 
  "47244640256" -> "30064771095"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "30064771106"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "30064771103"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "68719476751"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "68719476752"  [ label = "AST: "] 
  "30064771101" -> "55834574855"  [ label = "AST: "] 
  "30064771102" -> "68719476753"  [ label = "AST: "] 
  "30064771102" -> "55834574856"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "68719476754"  [ label = "AST: "] 
  "30064771105" -> "68719476755"  [ label = "AST: "] 
  "30064771105" -> "55834574857"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "68719476756"  [ label = "AST: "] 
  "30064771108" -> "68719476757"  [ label = "AST: "] 
  "30064771108" -> "55834574858"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771109" -> "90194313218"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771110" -> "55834574859"  [ label = "AST: "] 
  "30064771111" -> "68719476758"  [ label = "AST: "] 
  "30064771111" -> "68719476759"  [ label = "AST: "] 
  "47244640257" -> "30064771112"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771113" -> "30064771121"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771114" -> "30064771118"  [ label = "AST: "] 
  "30064771115" -> "30064771116"  [ label = "AST: "] 
  "30064771115" -> "30064771117"  [ label = "AST: "] 
  "30064771116" -> "68719476760"  [ label = "AST: "] 
  "30064771117" -> "68719476761"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771118" -> "30064771120"  [ label = "AST: "] 
  "30064771119" -> "68719476762"  [ label = "AST: "] 
  "30064771120" -> "68719476763"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "30064771123"  [ label = "AST: "] 
  "30064771122" -> "68719476764"  [ label = "AST: "] 
  "30064771123" -> "68719476765"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771124"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "90194313219"  [ label = "AST: "] 
  "30064771125" -> "30064771126"  [ label = "AST: "] 
  "30064771125" -> "55834574860"  [ label = "AST: "] 
  "30064771126" -> "68719476766"  [ label = "AST: "] 
  "30064771126" -> "68719476767"  [ label = "AST: "] 
  "47244640258" -> "30064771127"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771128" -> "30064771136"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "30064771133"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771130" -> "30064771132"  [ label = "AST: "] 
  "30064771131" -> "68719476768"  [ label = "AST: "] 
  "30064771132" -> "68719476769"  [ label = "AST: "] 
  "30064771132" -> "55834574861"  [ label = "AST: "] 
  "30064771133" -> "30064771134"  [ label = "AST: "] 
  "30064771133" -> "30064771135"  [ label = "AST: "] 
  "30064771134" -> "68719476770"  [ label = "AST: "] 
  "30064771135" -> "68719476771"  [ label = "AST: "] 
  "30064771135" -> "55834574862"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771136" -> "30064771138"  [ label = "AST: "] 
  "30064771137" -> "68719476772"  [ label = "AST: "] 
  "30064771138" -> "30064771139"  [ label = "AST: "] 
  "30064771138" -> "30064771140"  [ label = "AST: "] 
  "30064771139" -> "68719476773"  [ label = "AST: "] 
  "30064771139" -> "55834574863"  [ label = "AST: "] 
  "30064771140" -> "68719476774"  [ label = "AST: "] 
  "30064771140" -> "55834574864"  [ label = "AST: "] 
  "25769803780" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771141"  [ label = "AST: "] 
  "30064771141" -> "30064771142"  [ label = "AST: "] 
  "30064771141" -> "90194313220"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771142" -> "55834574865"  [ label = "AST: "] 
  "30064771143" -> "68719476775"  [ label = "AST: "] 
  "30064771143" -> "68719476776"  [ label = "AST: "] 
  "47244640259" -> "30064771144"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771144" -> "30064771145"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771145" -> "30064771153"  [ label = "AST: "] 
  "30064771146" -> "30064771147"  [ label = "AST: "] 
  "30064771146" -> "30064771150"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771147" -> "30064771149"  [ label = "AST: "] 
  "30064771148" -> "68719476777"  [ label = "AST: "] 
  "30064771149" -> "68719476778"  [ label = "AST: "] 
  "30064771150" -> "30064771151"  [ label = "AST: "] 
  "30064771150" -> "30064771152"  [ label = "AST: "] 
  "30064771151" -> "68719476779"  [ label = "AST: "] 
  "30064771152" -> "68719476780"  [ label = "AST: "] 
  "30064771153" -> "30064771154"  [ label = "AST: "] 
  "30064771153" -> "30064771155"  [ label = "AST: "] 
  "30064771154" -> "68719476781"  [ label = "AST: "] 
  "30064771155" -> "68719476782"  [ label = "AST: "] 
  "25769803781" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "30064771157"  [ label = "AST: "] 
  "30064771156" -> "90194313221"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771157" -> "55834574866"  [ label = "AST: "] 
  "30064771158" -> "68719476783"  [ label = "AST: "] 
  "30064771158" -> "68719476784"  [ label = "AST: "] 
  "47244640260" -> "30064771159"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771159" -> "30064771160"  [ label = "AST: "] 
  "30064771160" -> "30064771161"  [ label = "AST: "] 
  "30064771160" -> "30064771168"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "30064771165"  [ label = "AST: "] 
  "30064771162" -> "30064771163"  [ label = "AST: "] 
  "30064771162" -> "30064771164"  [ label = "AST: "] 
  "30064771163" -> "68719476785"  [ label = "AST: "] 
  "30064771164" -> "68719476786"  [ label = "AST: "] 
  "30064771165" -> "30064771166"  [ label = "AST: "] 
  "30064771165" -> "30064771167"  [ label = "AST: "] 
  "30064771166" -> "68719476787"  [ label = "AST: "] 
  "30064771167" -> "68719476788"  [ label = "AST: "] 
  "30064771168" -> "30064771169"  [ label = "AST: "] 
  "30064771168" -> "30064771170"  [ label = "AST: "] 
  "30064771169" -> "68719476789"  [ label = "AST: "] 
  "30064771170" -> "68719476790"  [ label = "AST: "] 
  "25769803782" -> "146028888068"  [ label = "AST: "] 
  "146028888068" -> "30064771171"  [ label = "AST: "] 
  "30064771171" -> "30064771172"  [ label = "AST: "] 
  "30064771171" -> "90194313222"  [ label = "AST: "] 
  "30064771172" -> "30064771173"  [ label = "AST: "] 
  "30064771172" -> "55834574867"  [ label = "AST: "] 
  "30064771173" -> "68719476791"  [ label = "AST: "] 
  "30064771173" -> "68719476792"  [ label = "AST: "] 
  "146028888069" -> "68719476793"  [ label = "AST: "] 
  "30064771072" -> "55834574849"  [ label = "CFG: "] 
  "30064771075" -> "55834574850"  [ label = "CFG: "] 
  "30064771078" -> "55834574851"  [ label = "CFG: "] 
  "30064771081" -> "55834574852"  [ label = "CFG: "] 
  "30064771084" -> "55834574853"  [ label = "CFG: "] 
  "30064771087" -> "55834574854"  [ label = "CFG: "] 
  "30064771090" -> "30064771099"  [ label = "CFG: "] 
  "146028888069" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771072"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771075"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771078"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771083" -> "30064771081"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771084"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "30064771087"  [ label = "CFG: "] 
  "30064771091" -> "30064771094"  [ label = "CFG: "] 
  "30064771092" -> "30064771090"  [ label = "CFG: "] 
  "30064771095" -> "30064771111"  [ label = "CFG: "] 
  "30064771095" -> "30064771116"  [ label = "CFG: "] 
  "30064771112" -> "30064771126"  [ label = "CFG: "] 
  "30064771112" -> "30064771131"  [ label = "CFG: "] 
  "30064771127" -> "30064771143"  [ label = "CFG: "] 
  "30064771127" -> "30064771148"  [ label = "CFG: "] 
  "30064771144" -> "30064771158"  [ label = "CFG: "] 
  "30064771144" -> "30064771163"  [ label = "CFG: "] 
  "30064771159" -> "30064771173"  [ label = "CFG: "] 
  "30064771159" -> "146028888069"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "55834574849" -> "30064771076"  [ label = "CFG: "] 
  "55834574850" -> "30064771079"  [ label = "CFG: "] 
  "55834574851" -> "30064771082"  [ label = "CFG: "] 
  "55834574852" -> "30064771085"  [ label = "CFG: "] 
  "55834574853" -> "30064771088"  [ label = "CFG: "] 
  "55834574854" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771128" -> "30064771127"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771145" -> "30064771144"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771160" -> "30064771159"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771097" -> "30064771107"  [ label = "CFG: "] 
  "30064771106" -> "30064771096"  [ label = "CFG: "] 
  "30064771109" -> "146028888064"  [ label = "CFG: "] 
  "30064771114" -> "30064771113"  [ label = "CFG: "] 
  "30064771114" -> "30064771122"  [ label = "CFG: "] 
  "30064771121" -> "30064771113"  [ label = "CFG: "] 
  "30064771124" -> "146028888065"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771129" -> "30064771137"  [ label = "CFG: "] 
  "30064771136" -> "30064771128"  [ label = "CFG: "] 
  "30064771141" -> "146028888066"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771146" -> "30064771154"  [ label = "CFG: "] 
  "30064771153" -> "30064771145"  [ label = "CFG: "] 
  "30064771156" -> "146028888067"  [ label = "CFG: "] 
  "30064771161" -> "30064771160"  [ label = "CFG: "] 
  "30064771161" -> "30064771169"  [ label = "CFG: "] 
  "30064771168" -> "30064771160"  [ label = "CFG: "] 
  "30064771171" -> "146028888068"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771098" -> "30064771104"  [ label = "CFG: "] 
  "30064771103" -> "30064771097"  [ label = "CFG: "] 
  "30064771107" -> "55834574858"  [ label = "CFG: "] 
  "30064771108" -> "30064771106"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771115" -> "30064771119"  [ label = "CFG: "] 
  "30064771118" -> "30064771114"  [ label = "CFG: "] 
  "30064771122" -> "30064771123"  [ label = "CFG: "] 
  "30064771123" -> "30064771121"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "30064771130" -> "30064771134"  [ label = "CFG: "] 
  "30064771133" -> "30064771129"  [ label = "CFG: "] 
  "30064771137" -> "55834574863"  [ label = "CFG: "] 
  "30064771138" -> "30064771136"  [ label = "CFG: "] 
  "30064771142" -> "30064771141"  [ label = "CFG: "] 
  "30064771147" -> "30064771146"  [ label = "CFG: "] 
  "30064771147" -> "30064771151"  [ label = "CFG: "] 
  "30064771150" -> "30064771146"  [ label = "CFG: "] 
  "30064771154" -> "30064771155"  [ label = "CFG: "] 
  "30064771155" -> "30064771153"  [ label = "CFG: "] 
  "30064771157" -> "30064771156"  [ label = "CFG: "] 
  "30064771162" -> "30064771161"  [ label = "CFG: "] 
  "30064771162" -> "30064771166"  [ label = "CFG: "] 
  "30064771165" -> "30064771161"  [ label = "CFG: "] 
  "30064771169" -> "30064771170"  [ label = "CFG: "] 
  "30064771170" -> "30064771168"  [ label = "CFG: "] 
  "30064771172" -> "30064771171"  [ label = "CFG: "] 
  "30064771099" -> "55834574855"  [ label = "CFG: "] 
  "30064771100" -> "30064771098"  [ label = "CFG: "] 
  "30064771104" -> "55834574857"  [ label = "CFG: "] 
  "30064771105" -> "30064771103"  [ label = "CFG: "] 
  "55834574858" -> "30064771108"  [ label = "CFG: "] 
  "30064771111" -> "55834574859"  [ label = "CFG: "] 
  "55834574859" -> "30064771110"  [ label = "CFG: "] 
  "30064771116" -> "30064771117"  [ label = "CFG: "] 
  "30064771117" -> "30064771115"  [ label = "CFG: "] 
  "30064771119" -> "30064771120"  [ label = "CFG: "] 
  "30064771120" -> "30064771118"  [ label = "CFG: "] 
  "30064771126" -> "55834574860"  [ label = "CFG: "] 
  "55834574860" -> "30064771125"  [ label = "CFG: "] 
  "30064771131" -> "55834574861"  [ label = "CFG: "] 
  "30064771132" -> "30064771130"  [ label = "CFG: "] 
  "30064771134" -> "55834574862"  [ label = "CFG: "] 
  "30064771135" -> "30064771133"  [ label = "CFG: "] 
  "30064771139" -> "55834574864"  [ label = "CFG: "] 
  "30064771140" -> "30064771138"  [ label = "CFG: "] 
  "30064771143" -> "55834574865"  [ label = "CFG: "] 
  "55834574865" -> "30064771142"  [ label = "CFG: "] 
  "30064771148" -> "30064771149"  [ label = "CFG: "] 
  "30064771149" -> "30064771147"  [ label = "CFG: "] 
  "30064771151" -> "30064771152"  [ label = "CFG: "] 
  "30064771152" -> "30064771150"  [ label = "CFG: "] 
  "30064771158" -> "55834574866"  [ label = "CFG: "] 
  "55834574866" -> "30064771157"  [ label = "CFG: "] 
  "30064771163" -> "30064771164"  [ label = "CFG: "] 
  "30064771164" -> "30064771162"  [ label = "CFG: "] 
  "30064771166" -> "30064771167"  [ label = "CFG: "] 
  "30064771167" -> "30064771165"  [ label = "CFG: "] 
  "30064771173" -> "55834574867"  [ label = "CFG: "] 
  "55834574867" -> "30064771172"  [ label = "CFG: "] 
  "30064771101" -> "55834574856"  [ label = "CFG: "] 
  "30064771102" -> "30064771100"  [ label = "CFG: "] 
  "55834574857" -> "30064771105"  [ label = "CFG: "] 
  "55834574861" -> "30064771132"  [ label = "CFG: "] 
  "55834574862" -> "30064771135"  [ label = "CFG: "] 
  "55834574863" -> "30064771139"  [ label = "CFG: "] 
  "55834574864" -> "30064771140"  [ label = "CFG: "] 
  "55834574855" -> "30064771101"  [ label = "CFG: "] 
  "55834574856" -> "30064771102"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888069" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116994" -> "128849018880"  [ label = "DDG: input_data"] 
  "115964116996" -> "128849018880"  [ label = "DDG: input_h_data"] 
  "115964116997" -> "128849018880"  [ label = "DDG: input_c_desc"] 
  "115964116998" -> "128849018880"  [ label = "DDG: input_c_data"] 
  "115964116999" -> "128849018880"  [ label = "DDG: params"] 
  "115964117000" -> "128849018880"  [ label = "DDG: output_desc"] 
  "115964117001" -> "128849018880"  [ label = "DDG: output_data"] 
  "115964117002" -> "128849018880"  [ label = "DDG: output_h_desc"] 
  "115964117003" -> "128849018880"  [ label = "DDG: output_h_data"] 
  "115964117004" -> "128849018880"  [ label = "DDG: output_c_desc"] 
  "115964117005" -> "128849018880"  [ label = "DDG: output_c_data"] 
  "30064771072" -> "128849018880"  [ label = "DDG: rnn_desc.num_layers()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: model_dims.num_layers = rnn_desc.num_layers()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: model_dims.batch_size"] 
  "30064771075" -> "128849018880"  [ label = "DDG: input_desc.batch_size()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: model_dims.batch_size = input_desc.batch_size()"] 
  "30064771078" -> "128849018880"  [ label = "DDG: model_dims.max_seq_length"] 
  "30064771078" -> "128849018880"  [ label = "DDG: input_desc.max_seq_length()"] 
  "30064771078" -> "128849018880"  [ label = "DDG: model_dims.max_seq_length = input_desc.max_seq_length()"] 
  "30064771081" -> "128849018880"  [ label = "DDG: model_dims.hidden_size"] 
  "30064771081" -> "128849018880"  [ label = "DDG: rnn_desc.hidden_size()"] 
  "30064771081" -> "128849018880"  [ label = "DDG: model_dims.hidden_size = rnn_desc.hidden_size()"] 
  "30064771084" -> "128849018880"  [ label = "DDG: model_dims.input_size"] 
  "30064771086" -> "128849018880"  [ label = "DDG: input_desc"] 
  "30064771084" -> "128849018880"  [ label = "DDG: input_desc.data_size()"] 
  "30064771084" -> "128849018880"  [ label = "DDG: model_dims.input_size = input_desc.data_size()"] 
  "30064771087" -> "128849018880"  [ label = "DDG: model_dims.cell_size"] 
  "30064771087" -> "128849018880"  [ label = "DDG: rnn_desc.cell_size()"] 
  "30064771087" -> "128849018880"  [ label = "DDG: model_dims.cell_size = rnn_desc.cell_size()"] 
  "30064771094" -> "128849018880"  [ label = "DDG: rnn_desc"] 
  "30064771093" -> "128849018880"  [ label = "DDG: rnn_desc.direction_mode()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: rnn_desc.direction_mode() == CUDNN_BIDIRECTIONAL"] 
  "30064771090" -> "128849018880"  [ label = "DDG: (rnn_desc.direction_mode() == CUDNN_BIDIRECTIONAL) ? 2 : 1"] 
  "30064771090" -> "128849018880"  [ label = "DDG: model_dims.dir_count =
      (rnn_desc.direction_mode() == CUDNN_BIDIRECTIONAL) ? 2 : 1"] 
  "30064771099" -> "128849018880"  [ label = "DDG: input_h_desc"] 
  "30064771098" -> "128849018880"  [ label = "DDG: input_h_desc.num_layers()"] 
  "30064771100" -> "128849018880"  [ label = "DDG: model_dims.num_layers"] 
  "30064771100" -> "128849018880"  [ label = "DDG: model_dims.dir_count"] 
  "30064771098" -> "128849018880"  [ label = "DDG: model_dims.num_layers * model_dims.dir_count"] 
  "30064771097" -> "128849018880"  [ label = "DDG: input_h_desc.num_layers() ==
            model_dims.num_layers * model_dims.dir_count"] 
  "30064771104" -> "128849018880"  [ label = "DDG: input_h_desc"] 
  "30064771103" -> "128849018880"  [ label = "DDG: input_h_desc.batch_size()"] 
  "30064771103" -> "128849018880"  [ label = "DDG: model_dims.batch_size"] 
  "30064771097" -> "128849018880"  [ label = "DDG: input_h_desc.batch_size() == model_dims.batch_size"] 
  "30064771096" -> "128849018880"  [ label = "DDG: input_h_desc.num_layers() ==
            model_dims.num_layers * model_dims.dir_count &amp;&amp;
        input_h_desc.batch_size() == model_dims.batch_size"] 
  "30064771107" -> "128849018880"  [ label = "DDG: input_h_desc"] 
  "30064771106" -> "128849018880"  [ label = "DDG: input_h_desc.data_size()"] 
  "30064771106" -> "128849018880"  [ label = "DDG: model_dims.hidden_size"] 
  "30064771096" -> "128849018880"  [ label = "DDG: input_h_desc.data_size() == model_dims.hidden_size"] 
  "30064771095" -> "128849018880"  [ label = "DDG: input_h_desc.num_layers() ==
            model_dims.num_layers * model_dims.dir_count &amp;&amp;
        input_h_desc.batch_size() == model_dims.batch_size &amp;&amp;
        input_h_desc.data_size() == model_dims.hidden_size"] 
  "30064771095" -> "128849018880"  [ label = "DDG: !(input_h_desc.num_layers() ==
            model_dims.num_layers * model_dims.dir_count &amp;&amp;
        input_h_desc.batch_size() == model_dims.batch_size &amp;&amp;
        input_h_desc.data_size() == model_dims.hidden_size)"] 
  "30064771109" -> "128849018880"  [ label = "DDG: port::error::INVALID_ARGUMENT"] 
  "30064771109" -> "128849018880"  [ label = "DDG: tsl::Status(port::error::INVALID_ARGUMENT, &quot;Invalid input_h shape&quot;)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: CUDNN_BIDIRECTIONAL"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "115964116998"  [ label = "DDG: "] 
  "111669149697" -> "115964116999"  [ label = "DDG: "] 
  "111669149697" -> "115964117000"  [ label = "DDG: "] 
  "111669149697" -> "115964117001"  [ label = "DDG: "] 
  "111669149697" -> "115964117002"  [ label = "DDG: "] 
  "111669149697" -> "115964117003"  [ label = "DDG: "] 
  "111669149697" -> "115964117004"  [ label = "DDG: "] 
  "111669149697" -> "115964117005"  [ label = "DDG: "] 
  "30064771074" -> "30064771072"  [ label = "DDG: rnn_desc"] 
  "30064771077" -> "30064771075"  [ label = "DDG: input_desc"] 
  "30064771080" -> "30064771078"  [ label = "DDG: input_desc"] 
  "30064771083" -> "30064771081"  [ label = "DDG: rnn_desc"] 
  "30064771086" -> "30064771084"  [ label = "DDG: input_desc"] 
  "30064771089" -> "30064771087"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "68719476793" -> "146028888069"  [ label = "DDG: model_dims"] 
  "30064771130" -> "68719476793"  [ label = "DDG: model_dims.max_seq_length"] 
  "30064771133" -> "68719476793"  [ label = "DDG: model_dims.batch_size"] 
  "30064771100" -> "68719476793"  [ label = "DDG: model_dims.num_layers"] 
  "30064771100" -> "68719476793"  [ label = "DDG: model_dims.dir_count"] 
  "30064771138" -> "68719476793"  [ label = "DDG: model_dims.hidden_size"] 
  "30064771106" -> "68719476793"  [ label = "DDG: model_dims.hidden_size"] 
  "30064771138" -> "68719476793"  [ label = "DDG: model_dims.dir_count"] 
  "30064771075" -> "68719476793"  [ label = "DDG: model_dims.batch_size"] 
  "30064771103" -> "68719476793"  [ label = "DDG: model_dims.batch_size"] 
  "30064771081" -> "68719476793"  [ label = "DDG: model_dims.hidden_size"] 
  "30064771087" -> "68719476793"  [ label = "DDG: model_dims.cell_size"] 
  "30064771084" -> "68719476793"  [ label = "DDG: model_dims.input_size"] 
  "111669149697" -> "68719476793"  [ label = "DDG: "] 
  "115964116992" -> "30064771074"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116993" -> "30064771077"  [ label = "DDG: input_desc"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771077" -> "30064771080"  [ label = "DDG: input_desc"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771074" -> "30064771083"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771080" -> "30064771086"  [ label = "DDG: input_desc"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771083" -> "30064771089"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771096" -> "30064771095"  [ label = "DDG: input_h_desc.num_layers() ==
            model_dims.num_layers * model_dims.dir_count &amp;&amp;
        input_h_desc.batch_size() == model_dims.batch_size"] 
  "30064771096" -> "30064771095"  [ label = "DDG: input_h_desc.data_size() == model_dims.hidden_size"] 
  "30064771109" -> "146028888064"  [ label = "DDG: tsl::Status(port::error::INVALID_ARGUMENT, &quot;Invalid input_h shape&quot;)"] 
  "30064771113" -> "30064771112"  [ label = "DDG: input_h_desc.num_layers() == input_c_desc.num_layers() &amp;&amp;
        input_h_desc.batch_size() == input_c_desc.batch_size()"] 
  "30064771113" -> "30064771112"  [ label = "DDG: input_h_desc.data_size() &lt;= input_c_desc.data_size()"] 
  "30064771124" -> "146028888065"  [ label = "DDG: tsl::Status(port::error::INVALID_ARGUMENT, &quot;Invalid input_c shape&quot;)"] 
  "30064771128" -> "30064771127"  [ label = "DDG: output_desc.max_seq_length() == model_dims.max_seq_length &amp;&amp;
        output_desc.batch_size() == model_dims.batch_size"] 
  "30064771128" -> "30064771127"  [ label = "DDG: output_desc.data_size() ==
            model_dims.hidden_size * model_dims.dir_count"] 
  "30064771141" -> "146028888066"  [ label = "DDG: tsl::Status(port::error::INVALID_ARGUMENT, &quot;Invalid output shape&quot;)"] 
  "30064771145" -> "30064771144"  [ label = "DDG: input_h_desc.num_layers() == output_h_desc.num_layers() &amp;&amp;
        input_h_desc.batch_size() == output_h_desc.batch_size()"] 
  "30064771145" -> "30064771144"  [ label = "DDG: input_h_desc.data_size() == output_h_desc.data_size()"] 
  "30064771156" -> "146028888067"  [ label = "DDG: tsl::Status(port::error::INVALID_ARGUMENT, &quot;Invalid output_h shape&quot;)"] 
  "30064771160" -> "30064771159"  [ label = "DDG: input_h_desc.num_layers() == output_c_desc.num_layers() &amp;&amp;
        input_h_desc.batch_size() == output_c_desc.batch_size()"] 
  "30064771160" -> "30064771159"  [ label = "DDG: input_h_desc.data_size() &lt;= output_c_desc.data_size()"] 
  "30064771171" -> "146028888068"  [ label = "DDG: tsl::Status(port::error::INVALID_ARGUMENT, &quot;Invalid output_c shape&quot;)"] 
  "30064771094" -> "30064771093"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771097" -> "30064771096"  [ label = "DDG: input_h_desc.num_layers() ==
            model_dims.num_layers * model_dims.dir_count"] 
  "30064771097" -> "30064771096"  [ label = "DDG: input_h_desc.batch_size() == model_dims.batch_size"] 
  "30064771106" -> "30064771096"  [ label = "DDG: input_h_desc.data_size()"] 
  "30064771106" -> "30064771096"  [ label = "DDG: model_dims.hidden_size"] 
  "30064771114" -> "30064771113"  [ label = "DDG: input_h_desc.num_layers() == input_c_desc.num_layers()"] 
  "30064771114" -> "30064771113"  [ label = "DDG: input_h_desc.batch_size() == input_c_desc.batch_size()"] 
  "30064771121" -> "30064771113"  [ label = "DDG: input_h_desc.data_size()"] 
  "30064771121" -> "30064771113"  [ label = "DDG: input_c_desc.data_size()"] 
  "30064771129" -> "30064771128"  [ label = "DDG: output_desc.max_seq_length() == model_dims.max_seq_length"] 
  "30064771129" -> "30064771128"  [ label = "DDG: output_desc.batch_size() == model_dims.batch_size"] 
  "30064771136" -> "30064771128"  [ label = "DDG: output_desc.data_size()"] 
  "30064771136" -> "30064771128"  [ label = "DDG: model_dims.hidden_size * model_dims.dir_count"] 
  "30064771146" -> "30064771145"  [ label = "DDG: input_h_desc.num_layers() == output_h_desc.num_layers()"] 
  "30064771146" -> "30064771145"  [ label = "DDG: input_h_desc.batch_size() == output_h_desc.batch_size()"] 
  "30064771153" -> "30064771145"  [ label = "DDG: input_h_desc.data_size()"] 
  "30064771153" -> "30064771145"  [ label = "DDG: output_h_desc.data_size()"] 
  "30064771161" -> "30064771160"  [ label = "DDG: input_h_desc.num_layers() == output_c_desc.num_layers()"] 
  "30064771161" -> "30064771160"  [ label = "DDG: input_h_desc.batch_size() == output_c_desc.batch_size()"] 
  "30064771168" -> "30064771160"  [ label = "DDG: input_h_desc.data_size()"] 
  "30064771168" -> "30064771160"  [ label = "DDG: output_c_desc.data_size()"] 
  "30064771089" -> "30064771094"  [ label = "DDG: rnn_desc"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771098" -> "30064771097"  [ label = "DDG: input_h_desc.num_layers()"] 
  "30064771098" -> "30064771097"  [ label = "DDG: model_dims.num_layers * model_dims.dir_count"] 
  "30064771103" -> "30064771097"  [ label = "DDG: input_h_desc.batch_size()"] 
  "30064771103" -> "30064771097"  [ label = "DDG: model_dims.batch_size"] 
  "30064771107" -> "30064771106"  [ label = "DDG: input_h_desc"] 
  "30064771081" -> "30064771106"  [ label = "DDG: model_dims.hidden_size"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771115" -> "30064771114"  [ label = "DDG: input_h_desc.num_layers()"] 
  "30064771115" -> "30064771114"  [ label = "DDG: input_c_desc.num_layers()"] 
  "30064771118" -> "30064771114"  [ label = "DDG: input_h_desc.batch_size()"] 
  "30064771118" -> "30064771114"  [ label = "DDG: input_c_desc.batch_size()"] 
  "30064771122" -> "30064771121"  [ label = "DDG: input_h_desc"] 
  "30064771123" -> "30064771121"  [ label = "DDG: input_c_desc"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771130" -> "30064771129"  [ label = "DDG: output_desc.max_seq_length()"] 
  "30064771130" -> "30064771129"  [ label = "DDG: model_dims.max_seq_length"] 
  "30064771133" -> "30064771129"  [ label = "DDG: output_desc.batch_size()"] 
  "30064771133" -> "30064771129"  [ label = "DDG: model_dims.batch_size"] 
  "30064771137" -> "30064771136"  [ label = "DDG: output_desc"] 
  "30064771138" -> "30064771136"  [ label = "DDG: model_dims.hidden_size"] 
  "30064771138" -> "30064771136"  [ label = "DDG: model_dims.dir_count"] 
  "111669149697" -> "30064771141"  [ label = "DDG: "] 
  "30064771147" -> "30064771146"  [ label = "DDG: input_h_desc.num_layers()"] 
  "30064771147" -> "30064771146"  [ label = "DDG: output_h_desc.num_layers()"] 
  "30064771150" -> "30064771146"  [ label = "DDG: input_h_desc.batch_size()"] 
  "30064771150" -> "30064771146"  [ label = "DDG: output_h_desc.batch_size()"] 
  "30064771154" -> "30064771153"  [ label = "DDG: input_h_desc"] 
  "30064771155" -> "30064771153"  [ label = "DDG: output_h_desc"] 
  "111669149697" -> "30064771156"  [ label = "DDG: "] 
  "30064771162" -> "30064771161"  [ label = "DDG: input_h_desc.num_layers()"] 
  "30064771162" -> "30064771161"  [ label = "DDG: output_c_desc.num_layers()"] 
  "30064771165" -> "30064771161"  [ label = "DDG: input_h_desc.batch_size()"] 
  "30064771165" -> "30064771161"  [ label = "DDG: output_c_desc.batch_size()"] 
  "30064771169" -> "30064771168"  [ label = "DDG: input_h_desc"] 
  "30064771170" -> "30064771168"  [ label = "DDG: output_c_desc"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "30064771099" -> "30064771098"  [ label = "DDG: input_h_desc"] 
  "30064771100" -> "30064771098"  [ label = "DDG: model_dims.num_layers"] 
  "30064771100" -> "30064771098"  [ label = "DDG: model_dims.dir_count"] 
  "30064771104" -> "30064771103"  [ label = "DDG: input_h_desc"] 
  "30064771075" -> "30064771103"  [ label = "DDG: model_dims.batch_size"] 
  "30064771099" -> "30064771107"  [ label = "DDG: input_h_desc"] 
  "30064771104" -> "30064771107"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771116" -> "30064771115"  [ label = "DDG: input_h_desc"] 
  "30064771117" -> "30064771115"  [ label = "DDG: input_c_desc"] 
  "30064771119" -> "30064771118"  [ label = "DDG: input_h_desc"] 
  "30064771120" -> "30064771118"  [ label = "DDG: input_c_desc"] 
  "30064771116" -> "30064771122"  [ label = "DDG: input_h_desc"] 
  "30064771119" -> "30064771122"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771117" -> "30064771123"  [ label = "DDG: input_c_desc"] 
  "30064771120" -> "30064771123"  [ label = "DDG: input_c_desc"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771131" -> "30064771130"  [ label = "DDG: output_desc"] 
  "30064771078" -> "30064771130"  [ label = "DDG: model_dims.max_seq_length"] 
  "30064771134" -> "30064771133"  [ label = "DDG: output_desc"] 
  "30064771075" -> "30064771133"  [ label = "DDG: model_dims.batch_size"] 
  "30064771103" -> "30064771133"  [ label = "DDG: model_dims.batch_size"] 
  "30064771131" -> "30064771137"  [ label = "DDG: output_desc"] 
  "30064771134" -> "30064771137"  [ label = "DDG: output_desc"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771081" -> "30064771138"  [ label = "DDG: model_dims.hidden_size"] 
  "30064771106" -> "30064771138"  [ label = "DDG: model_dims.hidden_size"] 
  "30064771100" -> "30064771138"  [ label = "DDG: model_dims.dir_count"] 
  "30064771148" -> "30064771147"  [ label = "DDG: input_h_desc"] 
  "30064771149" -> "30064771147"  [ label = "DDG: output_h_desc"] 
  "30064771151" -> "30064771150"  [ label = "DDG: input_h_desc"] 
  "30064771152" -> "30064771150"  [ label = "DDG: output_h_desc"] 
  "30064771148" -> "30064771154"  [ label = "DDG: input_h_desc"] 
  "30064771151" -> "30064771154"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "30064771149" -> "30064771155"  [ label = "DDG: output_h_desc"] 
  "30064771152" -> "30064771155"  [ label = "DDG: output_h_desc"] 
  "111669149697" -> "30064771155"  [ label = "DDG: "] 
  "30064771163" -> "30064771162"  [ label = "DDG: input_h_desc"] 
  "30064771164" -> "30064771162"  [ label = "DDG: output_c_desc"] 
  "30064771166" -> "30064771165"  [ label = "DDG: input_h_desc"] 
  "30064771167" -> "30064771165"  [ label = "DDG: output_c_desc"] 
  "30064771163" -> "30064771169"  [ label = "DDG: input_h_desc"] 
  "30064771166" -> "30064771169"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771169"  [ label = "DDG: "] 
  "30064771164" -> "30064771170"  [ label = "DDG: output_c_desc"] 
  "30064771167" -> "30064771170"  [ label = "DDG: output_c_desc"] 
  "111669149697" -> "30064771170"  [ label = "DDG: "] 
  "115964116995" -> "30064771099"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771072" -> "30064771100"  [ label = "DDG: model_dims.num_layers"] 
  "30064771090" -> "30064771100"  [ label = "DDG: model_dims.dir_count"] 
  "30064771099" -> "30064771104"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771099" -> "30064771116"  [ label = "DDG: input_h_desc"] 
  "30064771104" -> "30064771116"  [ label = "DDG: input_h_desc"] 
  "30064771107" -> "30064771116"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "115964116997" -> "30064771117"  [ label = "DDG: input_c_desc"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771116" -> "30064771119"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771117" -> "30064771120"  [ label = "DDG: input_c_desc"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "115964117000" -> "30064771131"  [ label = "DDG: output_desc"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771131" -> "30064771134"  [ label = "DDG: output_desc"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771116" -> "30064771148"  [ label = "DDG: input_h_desc"] 
  "30064771119" -> "30064771148"  [ label = "DDG: input_h_desc"] 
  "30064771122" -> "30064771148"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771148"  [ label = "DDG: "] 
  "115964117002" -> "30064771149"  [ label = "DDG: output_h_desc"] 
  "111669149697" -> "30064771149"  [ label = "DDG: "] 
  "30064771148" -> "30064771151"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771149" -> "30064771152"  [ label = "DDG: output_h_desc"] 
  "111669149697" -> "30064771152"  [ label = "DDG: "] 
  "30064771148" -> "30064771163"  [ label = "DDG: input_h_desc"] 
  "30064771151" -> "30064771163"  [ label = "DDG: input_h_desc"] 
  "30064771154" -> "30064771163"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "115964117004" -> "30064771164"  [ label = "DDG: output_c_desc"] 
  "111669149697" -> "30064771164"  [ label = "DDG: "] 
  "30064771163" -> "30064771166"  [ label = "DDG: input_h_desc"] 
  "111669149697" -> "30064771166"  [ label = "DDG: "] 
  "30064771164" -> "30064771167"  [ label = "DDG: output_c_desc"] 
  "111669149697" -> "30064771167"  [ label = "DDG: "] 
  "30064771095" -> "30064771111"  [ label = "CDG: "] 
  "30064771095" -> "30064771112"  [ label = "CDG: "] 
  "30064771095" -> "30064771109"  [ label = "CDG: "] 
  "30064771095" -> "30064771110"  [ label = "CDG: "] 
  "30064771095" -> "30064771115"  [ label = "CDG: "] 
  "30064771095" -> "30064771116"  [ label = "CDG: "] 
  "30064771095" -> "30064771113"  [ label = "CDG: "] 
  "30064771095" -> "30064771114"  [ label = "CDG: "] 
  "30064771095" -> "30064771117"  [ label = "CDG: "] 
  "30064771095" -> "146028888064"  [ label = "CDG: "] 
  "30064771095" -> "55834574859"  [ label = "CDG: "] 
  "30064771112" -> "30064771124"  [ label = "CDG: "] 
  "30064771112" -> "30064771127"  [ label = "CDG: "] 
  "30064771112" -> "30064771128"  [ label = "CDG: "] 
  "30064771112" -> "30064771125"  [ label = "CDG: "] 
  "30064771112" -> "30064771126"  [ label = "CDG: "] 
  "30064771112" -> "30064771131"  [ label = "CDG: "] 
  "30064771112" -> "30064771132"  [ label = "CDG: "] 
  "30064771112" -> "30064771129"  [ label = "CDG: "] 
  "30064771112" -> "30064771130"  [ label = "CDG: "] 
  "30064771112" -> "146028888065"  [ label = "CDG: "] 
  "30064771112" -> "55834574861"  [ label = "CDG: "] 
  "30064771112" -> "55834574860"  [ label = "CDG: "] 
  "30064771127" -> "30064771143"  [ label = "CDG: "] 
  "30064771127" -> "146028888066"  [ label = "CDG: "] 
  "30064771127" -> "30064771144"  [ label = "CDG: "] 
  "30064771127" -> "30064771141"  [ label = "CDG: "] 
  "30064771127" -> "30064771142"  [ label = "CDG: "] 
  "30064771127" -> "30064771147"  [ label = "CDG: "] 
  "30064771127" -> "30064771148"  [ label = "CDG: "] 
  "30064771127" -> "30064771145"  [ label = "CDG: "] 
  "30064771127" -> "30064771146"  [ label = "CDG: "] 
  "30064771127" -> "30064771149"  [ label = "CDG: "] 
  "30064771127" -> "55834574865"  [ label = "CDG: "] 
  "30064771144" -> "30064771163"  [ label = "CDG: "] 
  "30064771144" -> "30064771164"  [ label = "CDG: "] 
  "30064771144" -> "30064771161"  [ label = "CDG: "] 
  "30064771144" -> "30064771162"  [ label = "CDG: "] 
  "30064771144" -> "146028888067"  [ label = "CDG: "] 
  "30064771144" -> "30064771156"  [ label = "CDG: "] 
  "30064771144" -> "30064771159"  [ label = "CDG: "] 
  "30064771144" -> "30064771160"  [ label = "CDG: "] 
  "30064771144" -> "30064771157"  [ label = "CDG: "] 
  "30064771144" -> "30064771158"  [ label = "CDG: "] 
  "30064771144" -> "55834574866"  [ label = "CDG: "] 
  "30064771159" -> "30064771171"  [ label = "CDG: "] 
  "30064771159" -> "30064771172"  [ label = "CDG: "] 
  "30064771159" -> "30064771173"  [ label = "CDG: "] 
  "30064771159" -> "146028888068"  [ label = "CDG: "] 
  "30064771159" -> "146028888069"  [ label = "CDG: "] 
  "30064771159" -> "55834574867"  [ label = "CDG: "] 
  "30064771097" -> "30064771107"  [ label = "CDG: "] 
  "30064771097" -> "30064771108"  [ label = "CDG: "] 
  "30064771097" -> "30064771106"  [ label = "CDG: "] 
  "30064771097" -> "55834574858"  [ label = "CDG: "] 
  "30064771114" -> "30064771123"  [ label = "CDG: "] 
  "30064771114" -> "30064771121"  [ label = "CDG: "] 
  "30064771114" -> "30064771122"  [ label = "CDG: "] 
  "30064771129" -> "30064771136"  [ label = "CDG: "] 
  "30064771129" -> "30064771139"  [ label = "CDG: "] 
  "30064771129" -> "30064771140"  [ label = "CDG: "] 
  "30064771129" -> "30064771137"  [ label = "CDG: "] 
  "30064771129" -> "30064771138"  [ label = "CDG: "] 
  "30064771129" -> "55834574863"  [ label = "CDG: "] 
  "30064771129" -> "55834574864"  [ label = "CDG: "] 
  "30064771146" -> "30064771155"  [ label = "CDG: "] 
  "30064771146" -> "30064771153"  [ label = "CDG: "] 
  "30064771146" -> "30064771154"  [ label = "CDG: "] 
  "30064771161" -> "30064771168"  [ label = "CDG: "] 
  "30064771161" -> "30064771169"  [ label = "CDG: "] 
  "30064771161" -> "30064771170"  [ label = "CDG: "] 
  "30064771098" -> "30064771103"  [ label = "CDG: "] 
  "30064771098" -> "30064771104"  [ label = "CDG: "] 
  "30064771098" -> "30064771105"  [ label = "CDG: "] 
  "30064771098" -> "55834574857"  [ label = "CDG: "] 
  "30064771115" -> "30064771119"  [ label = "CDG: "] 
  "30064771115" -> "30064771120"  [ label = "CDG: "] 
  "30064771115" -> "30064771118"  [ label = "CDG: "] 
  "30064771130" -> "30064771135"  [ label = "CDG: "] 
  "30064771130" -> "30064771133"  [ label = "CDG: "] 
  "30064771130" -> "30064771134"  [ label = "CDG: "] 
  "30064771130" -> "55834574862"  [ label = "CDG: "] 
  "30064771147" -> "30064771151"  [ label = "CDG: "] 
  "30064771147" -> "30064771152"  [ label = "CDG: "] 
  "30064771147" -> "30064771150"  [ label = "CDG: "] 
  "30064771162" -> "30064771167"  [ label = "CDG: "] 
  "30064771162" -> "30064771165"  [ label = "CDG: "] 
  "30064771162" -> "30064771166"  [ label = "CDG: "] 
}
"""
)
