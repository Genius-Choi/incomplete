[33mval[0m [36mres1622[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "createRnnDescriptor" {  
"111669149697" [label = <(METHOD,createRnnDescriptor)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,int num_layers)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,int hidden_size)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,int input_size)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,int cell_size)<SUB>2</SUB>> ]
"115964116996" [label = <(PARAM,int batch_size)<SUB>3</SUB>> ]
"115964116997" [label = <(PARAM,dnn::RnnInputMode input_mode)<SUB>3</SUB>> ]
"115964116998" [label = <(PARAM,dnn::RnnDirectionMode direction_mode)<SUB>4</SUB>> ]
"115964116999" [label = <(PARAM,dnn::RnnMode rnn_mode)<SUB>4</SUB>> ]
"115964117000" [label = <(PARAM,dnn::DataType data_type)<SUB>5</SUB>> ]
"115964117001" [label = <(PARAM,const dnn::AlgorithmConfig&amp; algorithm_config)<SUB>5</SUB>> ]
"115964117002" [label = <(PARAM,float dropout)<SUB>6</SUB>> ]
"115964117003" [label = <(PARAM,uint64_t seed)<SUB>6</SUB>> ]
"115964117004" [label = <(PARAM,ScratchAllocator* state_allocator)<SUB>6</SUB>> ]
"115964117005" [label = <(PARAM,bool use_padded_io)<SUB>7</SUB>> ]
"25769803777" [label = <(BLOCK,{
  dnn::DnnSupport* dnn_support = AsDnn();
  i...,{
  dnn::DnnSupport* dnn_support = AsDnn();
  i...)<SUB>7</SUB>> ]
"94489280512" [label = <(LOCAL,dnn.DnnSupport* dnn_support: dnn.DnnSupport*)<SUB>8</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,* dnn_support = AsDnn())<SUB>8</SUB>> ]
"68719476736" [label = <(IDENTIFIER,dnn_support,* dnn_support = AsDnn())<SUB>8</SUB>> ]
"30064771073" [label = <(AsDnn,AsDnn())<SUB>8</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!dnn_support))<SUB>9</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.logicalNot,!dnn_support)<SUB>9</SUB>> ]
"68719476737" [label = <(IDENTIFIER,dnn_support,!dnn_support)<SUB>9</SUB>> ]
"25769803778" [label = <(BLOCK,{
    return tsl::Status(tsl::error::UNKNOWN,
 ...,{
    return tsl::Status(tsl::error::UNKNOWN,
 ...)<SUB>9</SUB>> ]
"146028888064" [label = <(RETURN,return tsl::Status(tsl::error::UNKNOWN,
       ...,return tsl::Status(tsl::error::UNKNOWN,
       ...)<SUB>10</SUB>> ]
"30064771075" [label = <(Status,tsl::Status(tsl::error::UNKNOWN,
              ...)<SUB>10</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,tsl::error::UNKNOWN)<SUB>10</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,tsl::error)<SUB>10</SUB>> ]
"68719476738" [label = <(IDENTIFIER,tsl,tsl::Status(tsl::error::UNKNOWN,
              ...)<SUB>10</SUB>> ]
"68719476739" [label = <(IDENTIFIER,error,tsl::Status(tsl::error::UNKNOWN,
              ...)<SUB>10</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>10</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Fail to find the dnn implementation.&quot;,tsl::Status(tsl::error::UNKNOWN,
              ...)<SUB>11</SUB>> ]
"146028888065" [label = <(RETURN,return dnn_support-&gt;createRnnDescriptor(
      ...,return dnn_support-&gt;createRnnDescriptor(
      ...)<SUB>13</SUB>> ]
"30064771078" [label = <(createRnnDescriptor,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>13</SUB>> ]
"68719476740" [label = <(IDENTIFIER,dnn_support,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>13</SUB>> ]
"68719476741" [label = <(IDENTIFIER,num_layers,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>14</SUB>> ]
"68719476742" [label = <(IDENTIFIER,hidden_size,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>14</SUB>> ]
"68719476743" [label = <(IDENTIFIER,input_size,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>14</SUB>> ]
"68719476744" [label = <(IDENTIFIER,cell_size,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>14</SUB>> ]
"68719476745" [label = <(IDENTIFIER,batch_size,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>14</SUB>> ]
"68719476746" [label = <(IDENTIFIER,input_mode,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>14</SUB>> ]
"68719476747" [label = <(IDENTIFIER,direction_mode,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>15</SUB>> ]
"68719476748" [label = <(IDENTIFIER,rnn_mode,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>15</SUB>> ]
"68719476749" [label = <(IDENTIFIER,data_type,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>15</SUB>> ]
"68719476750" [label = <(IDENTIFIER,algorithm_config,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>15</SUB>> ]
"68719476751" [label = <(IDENTIFIER,dropout,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>15</SUB>> ]
"68719476752" [label = <(IDENTIFIER,seed,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>15</SUB>> ]
"68719476753" [label = <(IDENTIFIER,state_allocator,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>16</SUB>> ]
"68719476754" [label = <(IDENTIFIER,use_padded_io,dnn_support-&gt;createRnnDescriptor(
      num_lay...)<SUB>16</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "115964116998"  [ label = "AST: "] 
  "111669149697" -> "115964116999"  [ label = "AST: "] 
  "111669149697" -> "115964117000"  [ label = "AST: "] 
  "111669149697" -> "115964117001"  [ label = "AST: "] 
  "111669149697" -> "115964117002"  [ label = "AST: "] 
  "111669149697" -> "115964117003"  [ label = "AST: "] 
  "111669149697" -> "115964117004"  [ label = "AST: "] 
  "111669149697" -> "115964117005"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "47244640256" -> "30064771074"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "55834574848"  [ label = "AST: "] 
  "30064771077" -> "68719476738"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "146028888065" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "68719476745"  [ label = "AST: "] 
  "30064771078" -> "68719476746"  [ label = "AST: "] 
  "30064771078" -> "68719476747"  [ label = "AST: "] 
  "30064771078" -> "68719476748"  [ label = "AST: "] 
  "30064771078" -> "68719476749"  [ label = "AST: "] 
  "30064771078" -> "68719476750"  [ label = "AST: "] 
  "30064771078" -> "68719476751"  [ label = "AST: "] 
  "30064771078" -> "68719476752"  [ label = "AST: "] 
  "30064771078" -> "68719476753"  [ label = "AST: "] 
  "30064771078" -> "68719476754"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771074" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "146028888065"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771075" -> "146028888064"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771077" -> "55834574848"  [ label = "CFG: "] 
  "55834574848" -> "30064771076"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: num_layers"] 
  "115964116993" -> "128849018880"  [ label = "DDG: hidden_size"] 
  "115964116994" -> "128849018880"  [ label = "DDG: input_size"] 
  "115964116995" -> "128849018880"  [ label = "DDG: cell_size"] 
  "115964116996" -> "128849018880"  [ label = "DDG: batch_size"] 
  "115964116997" -> "128849018880"  [ label = "DDG: input_mode"] 
  "115964116998" -> "128849018880"  [ label = "DDG: direction_mode"] 
  "115964116999" -> "128849018880"  [ label = "DDG: rnn_mode"] 
  "115964117000" -> "128849018880"  [ label = "DDG: data_type"] 
  "115964117001" -> "128849018880"  [ label = "DDG: algorithm_config"] 
  "115964117002" -> "128849018880"  [ label = "DDG: dropout"] 
  "115964117003" -> "128849018880"  [ label = "DDG: seed"] 
  "115964117004" -> "128849018880"  [ label = "DDG: state_allocator"] 
  "115964117005" -> "128849018880"  [ label = "DDG: use_padded_io"] 
  "30064771072" -> "128849018880"  [ label = "DDG: AsDnn()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: * dnn_support = AsDnn()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: dnn_support"] 
  "30064771074" -> "128849018880"  [ label = "DDG: !dnn_support"] 
  "30064771075" -> "128849018880"  [ label = "DDG: tsl::error::UNKNOWN"] 
  "30064771075" -> "128849018880"  [ label = "DDG: tsl::Status(tsl::error::UNKNOWN,
                       &quot;Fail to find the dnn implementation.&quot;)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "115964116998"  [ label = "DDG: "] 
  "111669149697" -> "115964116999"  [ label = "DDG: "] 
  "111669149697" -> "115964117000"  [ label = "DDG: "] 
  "111669149697" -> "115964117001"  [ label = "DDG: "] 
  "111669149697" -> "115964117002"  [ label = "DDG: "] 
  "111669149697" -> "115964117003"  [ label = "DDG: "] 
  "111669149697" -> "115964117004"  [ label = "DDG: "] 
  "111669149697" -> "115964117005"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771078" -> "146028888065"  [ label = "DDG: dnn_support-&gt;createRnnDescriptor(
      num_layers, hidden_size, input_size, cell_size, batch_size, input_mode,
      direction_mode, rnn_mode, data_type, algorithm_config, dropout, seed,
      state_allocator, use_padded_io)"] 
  "30064771072" -> "30064771074"  [ label = "DDG: dnn_support"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771075" -> "146028888064"  [ label = "DDG: tsl::Status(tsl::error::UNKNOWN,
                       &quot;Fail to find the dnn implementation.&quot;)"] 
  "30064771074" -> "30064771078"  [ label = "DDG: dnn_support"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "115964116992" -> "30064771078"  [ label = "DDG: num_layers"] 
  "115964116993" -> "30064771078"  [ label = "DDG: hidden_size"] 
  "115964116994" -> "30064771078"  [ label = "DDG: input_size"] 
  "115964116995" -> "30064771078"  [ label = "DDG: cell_size"] 
  "115964116996" -> "30064771078"  [ label = "DDG: batch_size"] 
  "115964116997" -> "30064771078"  [ label = "DDG: input_mode"] 
  "115964116998" -> "30064771078"  [ label = "DDG: direction_mode"] 
  "115964116999" -> "30064771078"  [ label = "DDG: rnn_mode"] 
  "115964117000" -> "30064771078"  [ label = "DDG: data_type"] 
  "115964117001" -> "30064771078"  [ label = "DDG: algorithm_config"] 
  "115964117002" -> "30064771078"  [ label = "DDG: dropout"] 
  "115964117003" -> "30064771078"  [ label = "DDG: seed"] 
  "115964117004" -> "30064771078"  [ label = "DDG: state_allocator"] 
  "115964117005" -> "30064771078"  [ label = "DDG: use_padded_io"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771074" -> "55834574848"  [ label = "CDG: "] 
  "30064771074" -> "30064771075"  [ label = "CDG: "] 
  "30064771074" -> "30064771076"  [ label = "CDG: "] 
  "30064771074" -> "146028888064"  [ label = "CDG: "] 
  "30064771074" -> "30064771077"  [ label = "CDG: "] 
  "30064771074" -> "146028888065"  [ label = "CDG: "] 
  "30064771074" -> "30064771078"  [ label = "CDG: "] 
}
""",
  """digraph "createRnnDescriptor" {  
"111669149704" [label = <(METHOD,createRnnDescriptor)> ]
"115964117013" [label = <(PARAM,p1)> ]
"115964117014" [label = <(PARAM,p2)> ]
"115964117015" [label = <(PARAM,p3)> ]
"115964117016" [label = <(PARAM,p4)> ]
"115964117017" [label = <(PARAM,p5)> ]
"115964117018" [label = <(PARAM,p6)> ]
"115964117019" [label = <(PARAM,p7)> ]
"115964117020" [label = <(PARAM,p8)> ]
"115964117021" [label = <(PARAM,p9)> ]
"115964117022" [label = <(PARAM,p10)> ]
"115964117023" [label = <(PARAM,p11)> ]
"115964117024" [label = <(PARAM,p12)> ]
"115964117025" [label = <(PARAM,p13)> ]
"115964117026" [label = <(PARAM,p14)> ]
"115964117027" [label = <(PARAM,p15)> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"128849018888" [label = <(METHOD_RETURN,ANY)> ]
  "111669149704" -> "115964117013"  [ label = "AST: "] 
  "111669149704" -> "25769803785"  [ label = "AST: "] 
  "111669149704" -> "115964117014"  [ label = "AST: "] 
  "111669149704" -> "128849018888"  [ label = "AST: "] 
  "111669149704" -> "115964117015"  [ label = "AST: "] 
  "111669149704" -> "115964117016"  [ label = "AST: "] 
  "111669149704" -> "115964117017"  [ label = "AST: "] 
  "111669149704" -> "115964117018"  [ label = "AST: "] 
  "111669149704" -> "115964117019"  [ label = "AST: "] 
  "111669149704" -> "115964117020"  [ label = "AST: "] 
  "111669149704" -> "115964117021"  [ label = "AST: "] 
  "111669149704" -> "115964117022"  [ label = "AST: "] 
  "111669149704" -> "115964117023"  [ label = "AST: "] 
  "111669149704" -> "115964117024"  [ label = "AST: "] 
  "111669149704" -> "115964117025"  [ label = "AST: "] 
  "111669149704" -> "115964117026"  [ label = "AST: "] 
  "111669149704" -> "115964117027"  [ label = "AST: "] 
  "111669149704" -> "128849018888"  [ label = "CFG: "] 
  "115964117013" -> "128849018888"  [ label = "DDG: p1"] 
  "115964117014" -> "128849018888"  [ label = "DDG: p2"] 
  "115964117015" -> "128849018888"  [ label = "DDG: p3"] 
  "115964117016" -> "128849018888"  [ label = "DDG: p4"] 
  "115964117017" -> "128849018888"  [ label = "DDG: p5"] 
  "115964117018" -> "128849018888"  [ label = "DDG: p6"] 
  "115964117019" -> "128849018888"  [ label = "DDG: p7"] 
  "115964117020" -> "128849018888"  [ label = "DDG: p8"] 
  "115964117021" -> "128849018888"  [ label = "DDG: p9"] 
  "115964117022" -> "128849018888"  [ label = "DDG: p10"] 
  "115964117023" -> "128849018888"  [ label = "DDG: p11"] 
  "115964117024" -> "128849018888"  [ label = "DDG: p12"] 
  "115964117025" -> "128849018888"  [ label = "DDG: p13"] 
  "115964117026" -> "128849018888"  [ label = "DDG: p14"] 
  "115964117027" -> "128849018888"  [ label = "DDG: p15"] 
  "111669149704" -> "115964117013"  [ label = "DDG: "] 
  "111669149704" -> "115964117014"  [ label = "DDG: "] 
  "111669149704" -> "115964117015"  [ label = "DDG: "] 
  "111669149704" -> "115964117016"  [ label = "DDG: "] 
  "111669149704" -> "115964117017"  [ label = "DDG: "] 
  "111669149704" -> "115964117018"  [ label = "DDG: "] 
  "111669149704" -> "115964117019"  [ label = "DDG: "] 
  "111669149704" -> "115964117020"  [ label = "DDG: "] 
  "111669149704" -> "115964117021"  [ label = "DDG: "] 
  "111669149704" -> "115964117022"  [ label = "DDG: "] 
  "111669149704" -> "115964117023"  [ label = "DDG: "] 
  "111669149704" -> "115964117024"  [ label = "DDG: "] 
  "111669149704" -> "115964117025"  [ label = "DDG: "] 
  "111669149704" -> "115964117026"  [ label = "DDG: "] 
  "111669149704" -> "115964117027"  [ label = "DDG: "] 
}
"""
)
