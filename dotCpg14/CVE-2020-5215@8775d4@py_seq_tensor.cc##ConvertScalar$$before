[33mval[0m [36mres340[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "ConvertScalar" {  
"111669149697" [label = <(METHOD,ConvertScalar)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,PyObject* v)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,Eigen::half* out)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    // NOTE(nareshmodi): Is there a way to co...,{
    // NOTE(nareshmodi): Is there a way to co...)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,Safe_PyObjectPtr as_float: Safe_PyObjectPtr)<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,as_float = make_safe(PyNumber_Float(v)))<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,as_float,as_float = make_safe(PyNumber_Float(v)))<SUB>4</SUB>> ]
"30064771073" [label = <(make_safe,make_safe(PyNumber_Float(v)))<SUB>4</SUB>> ]
"30064771074" [label = <(PyNumber_Float,PyNumber_Float(v))<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,v,PyNumber_Float(v))<SUB>4</SUB>> ]
"94489280513" [label = <(LOCAL,double v_double: double)<SUB>5</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,v_double = PyFloat_AS_DOUBLE(as_float.get()))<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,v_double,v_double = PyFloat_AS_DOUBLE(as_float.get()))<SUB>5</SUB>> ]
"30064771076" [label = <(PyFloat_AS_DOUBLE,PyFloat_AS_DOUBLE(as_float.get()))<SUB>5</SUB>> ]
"30064771077" [label = <(get,as_float.get())<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,as_float,as_float.get())<SUB>5</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,*out = Eigen::half(v_double))<SUB>6</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indirection,*out)<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,out,*out = Eigen::half(v_double))<SUB>6</SUB>> ]
"30064771080" [label = <(half,Eigen::half(v_double))<SUB>6</SUB>> ]
"68719476741" [label = <(IDENTIFIER,v_double,Eigen::half(v_double))<SUB>6</SUB>> ]
"146028888064" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>8</SUB>> ]
"90194313216" [label = <(LITERAL,nullptr,return nullptr;)<SUB>8</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,const char*)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476740"  [ label = "AST: "] 
  "30064771080" -> "68719476741"  [ label = "AST: "] 
  "146028888064" -> "90194313216"  [ label = "AST: "] 
  "30064771072" -> "30064771077"  [ label = "CFG: "] 
  "30064771075" -> "30064771079"  [ label = "CFG: "] 
  "30064771078" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771078"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "111669149697" -> "30064771074"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: out"] 
  "30064771074" -> "128849018880"  [ label = "DDG: v"] 
  "30064771073" -> "128849018880"  [ label = "DDG: PyNumber_Float(v)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: make_safe(PyNumber_Float(v))"] 
  "30064771072" -> "128849018880"  [ label = "DDG: as_float = make_safe(PyNumber_Float(v))"] 
  "30064771077" -> "128849018880"  [ label = "DDG: as_float"] 
  "30064771076" -> "128849018880"  [ label = "DDG: as_float.get()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: PyFloat_AS_DOUBLE(as_float.get())"] 
  "30064771075" -> "128849018880"  [ label = "DDG: v_double = PyFloat_AS_DOUBLE(as_float.get())"] 
  "30064771078" -> "128849018880"  [ label = "DDG: *out"] 
  "30064771080" -> "128849018880"  [ label = "DDG: v_double"] 
  "30064771078" -> "128849018880"  [ label = "DDG: Eigen::half(v_double)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: *out = Eigen::half(v_double)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: PyNumber_Float(v)"] 
  "30064771076" -> "30064771075"  [ label = "DDG: as_float.get()"] 
  "30064771080" -> "30064771078"  [ label = "DDG: v_double"] 
  "90194313216" -> "146028888064"  [ label = "DDG: nullptr"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "111669149697" -> "90194313216"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: v"] 
  "30064771077" -> "30064771076"  [ label = "DDG: as_float"] 
  "30064771075" -> "30064771080"  [ label = "DDG: v_double"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "115964116992" -> "30064771074"  [ label = "DDG: v"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771072" -> "30064771077"  [ label = "DDG: as_float"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
}
"""
)
