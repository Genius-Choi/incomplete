[33mval[0m [36mres170[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "PoolParameters" {  
"111669149697" [label = <(METHOD,PoolParameters)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,OpKernelContext* context)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const std::vector&lt;int32&gt;&amp; ksize)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,const std::vector&lt;int32&gt;&amp; stride)<SUB>3</SUB>> ]
"115964116995" [label = <(PARAM,Padding padding)<SUB>4</SUB>> ]
"115964116996" [label = <(PARAM,std::vector&lt;int64&gt; explicit_paddings)<SUB>5</SUB>> ]
"115964116997" [label = <(PARAM,TensorFormat data_format)<SUB>6</SUB>> ]
"115964116998" [label = <(PARAM,const TensorShape&amp; tensor_in_shape)<SUB>7</SUB>> ]
"25769803777" [label = <(BLOCK,{
  // For maxpooling, tensor_in should have 2 ...,{
  // For maxpooling, tensor_in should have 2 ...)<SUB>7</SUB>> ]
"30064771072" [label = <(OP_REQUIRES,OP_REQUIRES(context,
              GetTensorSpa...)<SUB>11</SUB>> ]
"68719476736" [label = <(IDENTIFIER,context,OP_REQUIRES(context,
              GetTensorSpa...)<SUB>11</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.equals,GetTensorSpatialDims(tensor_in_shape.dims(), da...)<SUB>12</SUB>> ]
"30064771074" [label = <(GetTensorSpatialDims,GetTensorSpatialDims(tensor_in_shape.dims(), da...)<SUB>12</SUB>> ]
"30064771075" [label = <(dims,tensor_in_shape.dims())<SUB>12</SUB>> ]
"68719476737" [label = <(IDENTIFIER,tensor_in_shape,tensor_in_shape.dims())<SUB>12</SUB>> ]
"68719476738" [label = <(IDENTIFIER,data_format,GetTensorSpatialDims(tensor_in_shape.dims(), da...)<SUB>12</SUB>> ]
"90194313216" [label = <(LITERAL,2,GetTensorSpatialDims(tensor_in_shape.dims(), da...)<SUB>12</SUB>> ]
"30064771076" [label = <(InvalidArgument,errors::InvalidArgument(
                  &quot;ten...)<SUB>13</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;tensor_in_shape must have 2 spatial dimensions. &quot;,errors::InvalidArgument(
                  &quot;ten...)<SUB>14</SUB>> ]
"30064771077" [label = <(dims,tensor_in_shape.dims())<SUB>15</SUB>> ]
"68719476739" [label = <(IDENTIFIER,tensor_in_shape,tensor_in_shape.dims())<SUB>15</SUB>> ]
"90194313218" [label = <(LITERAL,&quot; &quot;,errors::InvalidArgument(
                  &quot;ten...)<SUB>15</SUB>> ]
"68719476740" [label = <(IDENTIFIER,data_format,errors::InvalidArgument(
                  &quot;ten...)<SUB>15</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,this-&gt;data_format = data_format)<SUB>17</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indirectFieldAccess,this-&gt;data_format)<SUB>17</SUB>> ]
"68719476741" [label = <(IDENTIFIER,this,this-&gt;data_format = data_format)<SUB>17</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,data_format,data_format)<SUB>17</SUB>> ]
"68719476742" [label = <(IDENTIFIER,data_format,this-&gt;data_format = data_format)<SUB>17</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,depth = GetTensorDim(tensor_in_shape, data_form...)<SUB>18</SUB>> ]
"68719476743" [label = <(IDENTIFIER,depth,depth = GetTensorDim(tensor_in_shape, data_form...)<SUB>18</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.multiplication,GetTensorDim(tensor_in_shape, data_format, 'C')...)<SUB>18</SUB>> ]
"30064771082" [label = <(GetTensorDim,GetTensorDim(tensor_in_shape, data_format, 'C'))<SUB>18</SUB>> ]
"68719476744" [label = <(IDENTIFIER,tensor_in_shape,GetTensorDim(tensor_in_shape, data_format, 'C'))<SUB>18</SUB>> ]
"68719476745" [label = <(IDENTIFIER,data_format,GetTensorDim(tensor_in_shape, data_format, 'C'))<SUB>18</SUB>> ]
"90194313219" [label = <(LITERAL,'C',GetTensorDim(tensor_in_shape, data_format, 'C'))<SUB>18</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.conditional,data_format == FORMAT_NCHW_VECT_C ? 4 : 1)<SUB>19</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.equals,data_format == FORMAT_NCHW_VECT_C)<SUB>19</SUB>> ]
"68719476746" [label = <(IDENTIFIER,data_format,data_format == FORMAT_NCHW_VECT_C)<SUB>19</SUB>> ]
"68719476747" [label = <(IDENTIFIER,FORMAT_NCHW_VECT_C,data_format == FORMAT_NCHW_VECT_C)<SUB>19</SUB>> ]
"90194313220" [label = <(LITERAL,4,data_format == FORMAT_NCHW_VECT_C ? 4 : 1)<SUB>19</SUB>> ]
"90194313221" [label = <(LITERAL,1,data_format == FORMAT_NCHW_VECT_C ? 4 : 1)<SUB>19</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,tensor_in_cols = GetTensorDim(tensor_in_shape, ...)<SUB>20</SUB>> ]
"68719476748" [label = <(IDENTIFIER,tensor_in_cols,tensor_in_cols = GetTensorDim(tensor_in_shape, ...)<SUB>20</SUB>> ]
"30064771086" [label = <(GetTensorDim,GetTensorDim(tensor_in_shape, data_format, 'W'))<SUB>20</SUB>> ]
"68719476749" [label = <(IDENTIFIER,tensor_in_shape,GetTensorDim(tensor_in_shape, data_format, 'W'))<SUB>20</SUB>> ]
"68719476750" [label = <(IDENTIFIER,data_format,GetTensorDim(tensor_in_shape, data_format, 'W'))<SUB>20</SUB>> ]
"90194313222" [label = <(LITERAL,'W',GetTensorDim(tensor_in_shape, data_format, 'W'))<SUB>20</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,tensor_in_rows = GetTensorDim(tensor_in_shape, ...)<SUB>21</SUB>> ]
"68719476751" [label = <(IDENTIFIER,tensor_in_rows,tensor_in_rows = GetTensorDim(tensor_in_shape, ...)<SUB>21</SUB>> ]
"30064771088" [label = <(GetTensorDim,GetTensorDim(tensor_in_shape, data_format, 'H'))<SUB>21</SUB>> ]
"68719476752" [label = <(IDENTIFIER,tensor_in_shape,GetTensorDim(tensor_in_shape, data_format, 'H'))<SUB>21</SUB>> ]
"68719476753" [label = <(IDENTIFIER,data_format,GetTensorDim(tensor_in_shape, data_format, 'H'))<SUB>21</SUB>> ]
"90194313223" [label = <(LITERAL,'H',GetTensorDim(tensor_in_shape, data_format, 'H'))<SUB>21</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,tensor_in_batch = GetTensorDim(tensor_in_shape,...)<SUB>22</SUB>> ]
"68719476754" [label = <(IDENTIFIER,tensor_in_batch,tensor_in_batch = GetTensorDim(tensor_in_shape,...)<SUB>22</SUB>> ]
"30064771090" [label = <(GetTensorDim,GetTensorDim(tensor_in_shape, data_format, 'N'))<SUB>22</SUB>> ]
"68719476755" [label = <(IDENTIFIER,tensor_in_shape,GetTensorDim(tensor_in_shape, data_format, 'N'))<SUB>22</SUB>> ]
"68719476756" [label = <(IDENTIFIER,data_format,GetTensorDim(tensor_in_shape, data_format, 'N'))<SUB>22</SUB>> ]
"90194313224" [label = <(LITERAL,'N',GetTensorDim(tensor_in_shape, data_format, 'N'))<SUB>22</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,window_rows = GetTensorDim(ksize, data_format, ...)<SUB>23</SUB>> ]
"68719476757" [label = <(IDENTIFIER,window_rows,window_rows = GetTensorDim(ksize, data_format, ...)<SUB>23</SUB>> ]
"30064771092" [label = <(GetTensorDim,GetTensorDim(ksize, data_format, 'H'))<SUB>23</SUB>> ]
"68719476758" [label = <(IDENTIFIER,ksize,GetTensorDim(ksize, data_format, 'H'))<SUB>23</SUB>> ]
"68719476759" [label = <(IDENTIFIER,data_format,GetTensorDim(ksize, data_format, 'H'))<SUB>23</SUB>> ]
"90194313225" [label = <(LITERAL,'H',GetTensorDim(ksize, data_format, 'H'))<SUB>23</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,window_cols = GetTensorDim(ksize, data_format, ...)<SUB>24</SUB>> ]
"68719476760" [label = <(IDENTIFIER,window_cols,window_cols = GetTensorDim(ksize, data_format, ...)<SUB>24</SUB>> ]
"30064771094" [label = <(GetTensorDim,GetTensorDim(ksize, data_format, 'W'))<SUB>24</SUB>> ]
"68719476761" [label = <(IDENTIFIER,ksize,GetTensorDim(ksize, data_format, 'W'))<SUB>24</SUB>> ]
"68719476762" [label = <(IDENTIFIER,data_format,GetTensorDim(ksize, data_format, 'W'))<SUB>24</SUB>> ]
"90194313226" [label = <(LITERAL,'W',GetTensorDim(ksize, data_format, 'W'))<SUB>24</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assignment,depth_window = GetTensorDim(ksize, data_format,...)<SUB>25</SUB>> ]
"68719476763" [label = <(IDENTIFIER,depth_window,depth_window = GetTensorDim(ksize, data_format,...)<SUB>25</SUB>> ]
"30064771096" [label = <(GetTensorDim,GetTensorDim(ksize, data_format, 'C'))<SUB>25</SUB>> ]
"68719476764" [label = <(IDENTIFIER,ksize,GetTensorDim(ksize, data_format, 'C'))<SUB>25</SUB>> ]
"68719476765" [label = <(IDENTIFIER,data_format,GetTensorDim(ksize, data_format, 'C'))<SUB>25</SUB>> ]
"90194313227" [label = <(LITERAL,'C',GetTensorDim(ksize, data_format, 'C'))<SUB>25</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,row_stride = GetTensorDim(stride, data_format, ...)<SUB>26</SUB>> ]
"68719476766" [label = <(IDENTIFIER,row_stride,row_stride = GetTensorDim(stride, data_format, ...)<SUB>26</SUB>> ]
"30064771098" [label = <(GetTensorDim,GetTensorDim(stride, data_format, 'H'))<SUB>26</SUB>> ]
"68719476767" [label = <(IDENTIFIER,stride,GetTensorDim(stride, data_format, 'H'))<SUB>26</SUB>> ]
"68719476768" [label = <(IDENTIFIER,data_format,GetTensorDim(stride, data_format, 'H'))<SUB>26</SUB>> ]
"90194313228" [label = <(LITERAL,'H',GetTensorDim(stride, data_format, 'H'))<SUB>26</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.assignment,col_stride = GetTensorDim(stride, data_format, ...)<SUB>27</SUB>> ]
"68719476769" [label = <(IDENTIFIER,col_stride,col_stride = GetTensorDim(stride, data_format, ...)<SUB>27</SUB>> ]
"30064771100" [label = <(GetTensorDim,GetTensorDim(stride, data_format, 'W'))<SUB>27</SUB>> ]
"68719476770" [label = <(IDENTIFIER,stride,GetTensorDim(stride, data_format, 'W'))<SUB>27</SUB>> ]
"68719476771" [label = <(IDENTIFIER,data_format,GetTensorDim(stride, data_format, 'W'))<SUB>27</SUB>> ]
"90194313229" [label = <(LITERAL,'W',GetTensorDim(stride, data_format, 'W'))<SUB>27</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.assignment,depth_stride = GetTensorDim(stride, data_format...)<SUB>28</SUB>> ]
"68719476772" [label = <(IDENTIFIER,depth_stride,depth_stride = GetTensorDim(stride, data_format...)<SUB>28</SUB>> ]
"30064771102" [label = <(GetTensorDim,GetTensorDim(stride, data_format, 'C'))<SUB>28</SUB>> ]
"68719476773" [label = <(IDENTIFIER,stride,GetTensorDim(stride, data_format, 'C'))<SUB>28</SUB>> ]
"68719476774" [label = <(IDENTIFIER,data_format,GetTensorDim(stride, data_format, 'C'))<SUB>28</SUB>> ]
"90194313230" [label = <(LITERAL,'C',GetTensorDim(stride, data_format, 'C'))<SUB>28</SUB>> ]
"30064771103" [label = <(OP_REQUIRES,OP_REQUIRES(context,
              (depth_windo...)<SUB>32</SUB>> ]
"68719476775" [label = <(IDENTIFIER,context,OP_REQUIRES(context,
              (depth_windo...)<SUB>32</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.logicalOr,depth_window == 1 || (window_rows == 1 &amp;&amp; windo...)<SUB>33</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.equals,depth_window == 1)<SUB>33</SUB>> ]
"68719476776" [label = <(IDENTIFIER,depth_window,depth_window == 1)<SUB>33</SUB>> ]
"90194313231" [label = <(LITERAL,1,depth_window == 1)<SUB>33</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.logicalAnd,window_rows == 1 &amp;&amp; window_cols == 1)<SUB>33</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.equals,window_rows == 1)<SUB>33</SUB>> ]
"68719476777" [label = <(IDENTIFIER,window_rows,window_rows == 1)<SUB>33</SUB>> ]
"90194313232" [label = <(LITERAL,1,window_rows == 1)<SUB>33</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.equals,window_cols == 1)<SUB>33</SUB>> ]
"68719476778" [label = <(IDENTIFIER,window_cols,window_cols == 1)<SUB>33</SUB>> ]
"90194313233" [label = <(LITERAL,1,window_cols == 1)<SUB>33</SUB>> ]
"30064771109" [label = <(Unimplemented,errors::Unimplemented(
                  &quot;MaxPo...)<SUB>34</SUB>> ]
"90194313234" [label = <(LITERAL,&quot;MaxPooling supports exactly one of pooling acr...,errors::Unimplemented(
                  &quot;MaxPo...)<SUB>35</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (padding == Padding::EXPLICIT))<SUB>37</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.equals,padding == Padding::EXPLICIT)<SUB>37</SUB>> ]
"68719476779" [label = <(IDENTIFIER,padding,padding == Padding::EXPLICIT)<SUB>37</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.fieldAccess,Padding::EXPLICIT)<SUB>37</SUB>> ]
"68719476780" [label = <(IDENTIFIER,Padding,padding == Padding::EXPLICIT)<SUB>37</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,EXPLICIT,EXPLICIT)<SUB>37</SUB>> ]
"25769803778" [label = <(BLOCK,{
    OP_REQUIRES_OK(context, CheckValidPadding...,{
    OP_REQUIRES_OK(context, CheckValidPadding...)<SUB>37</SUB>> ]
"30064771112" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, CheckValidPadding(paddi...)<SUB>38</SUB>> ]
"68719476781" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, CheckValidPadding(paddi...)<SUB>38</SUB>> ]
"30064771113" [label = <(CheckValidPadding,CheckValidPadding(padding, explicit_paddings,
 ...)<SUB>38</SUB>> ]
"68719476782" [label = <(IDENTIFIER,padding,CheckValidPadding(padding, explicit_paddings,
 ...)<SUB>38</SUB>> ]
"68719476783" [label = <(IDENTIFIER,explicit_paddings,CheckValidPadding(padding, explicit_paddings,
 ...)<SUB>38</SUB>> ]
"90194313235" [label = <(LITERAL,4,CheckValidPadding(padding, explicit_paddings,
 ...)<SUB>39</SUB>> ]
"68719476784" [label = <(IDENTIFIER,data_format,CheckValidPadding(padding, explicit_paddings,
 ...)<SUB>39</SUB>> ]
"30064771114" [label = <(GetExplicitPaddingForDim,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>40</SUB>> ]
"68719476785" [label = <(IDENTIFIER,explicit_paddings,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>40</SUB>> ]
"68719476786" [label = <(IDENTIFIER,data_format,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>40</SUB>> ]
"90194313236" [label = <(LITERAL,'H',GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>40</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.addressOf,&amp;pad_top)<SUB>40</SUB>> ]
"68719476787" [label = <(IDENTIFIER,pad_top,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>40</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.addressOf,&amp;pad_bottom)<SUB>41</SUB>> ]
"68719476788" [label = <(IDENTIFIER,pad_bottom,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>41</SUB>> ]
"30064771117" [label = <(GetExplicitPaddingForDim,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>42</SUB>> ]
"68719476789" [label = <(IDENTIFIER,explicit_paddings,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>42</SUB>> ]
"68719476790" [label = <(IDENTIFIER,data_format,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>42</SUB>> ]
"90194313237" [label = <(LITERAL,'W',GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>42</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.addressOf,&amp;pad_left)<SUB>42</SUB>> ]
"68719476791" [label = <(IDENTIFIER,pad_left,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>42</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.addressOf,&amp;pad_right)<SUB>43</SUB>> ]
"68719476792" [label = <(IDENTIFIER,pad_right,GetExplicitPaddingForDim(explicit_paddings, dat...)<SUB>43</SUB>> ]
"30064771120" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, CheckPaddingSize(window...)<SUB>44</SUB>> ]
"68719476793" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, CheckPaddingSize(window...)<SUB>44</SUB>> ]
"30064771121" [label = <(CheckPaddingSize,CheckPaddingSize(window_rows, window_cols, pad_...)<SUB>44</SUB>> ]
"68719476794" [label = <(IDENTIFIER,window_rows,CheckPaddingSize(window_rows, window_cols, pad_...)<SUB>44</SUB>> ]
"68719476795" [label = <(IDENTIFIER,window_cols,CheckPaddingSize(window_rows, window_cols, pad_...)<SUB>44</SUB>> ]
"68719476796" [label = <(IDENTIFIER,pad_top,CheckPaddingSize(window_rows, window_cols, pad_...)<SUB>44</SUB>> ]
"68719476797" [label = <(IDENTIFIER,pad_bottom,CheckPaddingSize(window_rows, window_cols, pad_...)<SUB>45</SUB>> ]
"68719476798" [label = <(IDENTIFIER,pad_left,CheckPaddingSize(window_rows, window_cols, pad_...)<SUB>45</SUB>> ]
"68719476799" [label = <(IDENTIFIER,pad_right,CheckPaddingSize(window_rows, window_cols, pad_...)<SUB>45</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (depth_window == 1))<SUB>48</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.equals,depth_window == 1)<SUB>48</SUB>> ]
"68719476800" [label = <(IDENTIFIER,depth_window,depth_window == 1)<SUB>48</SUB>> ]
"90194313238" [label = <(LITERAL,1,depth_window == 1)<SUB>48</SUB>> ]
"25769803779" [label = <(BLOCK,{
    OP_REQUIRES_OK(context, GetWindowedOutput...,{
    OP_REQUIRES_OK(context, GetWindowedOutput...)<SUB>48</SUB>> ]
"30064771123" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, GetWindowedOutputSizeVe...)<SUB>49</SUB>> ]
"68719476801" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, GetWindowedOutputSizeVe...)<SUB>49</SUB>> ]
"30064771124" [label = <(GetWindowedOutputSizeVerbose,GetWindowedOutputSizeVerbose(
                 ...)<SUB>49</SUB>> ]
"68719476802" [label = <(IDENTIFIER,tensor_in_rows,GetWindowedOutputSizeVerbose(
                 ...)<SUB>50</SUB>> ]
"68719476803" [label = <(IDENTIFIER,window_rows,GetWindowedOutputSizeVerbose(
                 ...)<SUB>50</SUB>> ]
"68719476804" [label = <(IDENTIFIER,row_stride,GetWindowedOutputSizeVerbose(
                 ...)<SUB>50</SUB>> ]
"68719476805" [label = <(IDENTIFIER,padding,GetWindowedOutputSizeVerbose(
                 ...)<SUB>51</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.addressOf,&amp;out_height)<SUB>51</SUB>> ]
"68719476806" [label = <(IDENTIFIER,out_height,GetWindowedOutputSizeVerbose(
                 ...)<SUB>51</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.addressOf,&amp;pad_top)<SUB>51</SUB>> ]
"68719476807" [label = <(IDENTIFIER,pad_top,GetWindowedOutputSizeVerbose(
                 ...)<SUB>51</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.addressOf,&amp;pad_bottom)<SUB>51</SUB>> ]
"68719476808" [label = <(IDENTIFIER,pad_bottom,GetWindowedOutputSizeVerbose(
                 ...)<SUB>51</SUB>> ]
"30064771128" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, GetWindowedOutputSizeVe...)<SUB>52</SUB>> ]
"68719476809" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, GetWindowedOutputSizeVe...)<SUB>52</SUB>> ]
"30064771129" [label = <(GetWindowedOutputSizeVerbose,GetWindowedOutputSizeVerbose(
                 ...)<SUB>52</SUB>> ]
"68719476810" [label = <(IDENTIFIER,tensor_in_cols,GetWindowedOutputSizeVerbose(
                 ...)<SUB>53</SUB>> ]
"68719476811" [label = <(IDENTIFIER,window_cols,GetWindowedOutputSizeVerbose(
                 ...)<SUB>53</SUB>> ]
"68719476812" [label = <(IDENTIFIER,col_stride,GetWindowedOutputSizeVerbose(
                 ...)<SUB>53</SUB>> ]
"68719476813" [label = <(IDENTIFIER,padding,GetWindowedOutputSizeVerbose(
                 ...)<SUB>54</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.addressOf,&amp;out_width)<SUB>54</SUB>> ]
"68719476814" [label = <(IDENTIFIER,out_width,GetWindowedOutputSizeVerbose(
                 ...)<SUB>54</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.addressOf,&amp;pad_left)<SUB>54</SUB>> ]
"68719476815" [label = <(IDENTIFIER,pad_left,GetWindowedOutputSizeVerbose(
                 ...)<SUB>54</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.addressOf,&amp;pad_right)<SUB>54</SUB>> ]
"68719476816" [label = <(IDENTIFIER,pad_right,GetWindowedOutputSizeVerbose(
                 ...)<SUB>54</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.assignment,pad_depth = 0)<SUB>55</SUB>> ]
"68719476817" [label = <(IDENTIFIER,pad_depth,pad_depth = 0)<SUB>55</SUB>> ]
"90194313239" [label = <(LITERAL,0,pad_depth = 0)<SUB>55</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.assignment,out_depth = depth)<SUB>56</SUB>> ]
"68719476818" [label = <(IDENTIFIER,out_depth,out_depth = depth)<SUB>56</SUB>> ]
"68719476819" [label = <(IDENTIFIER,depth,out_depth = depth)<SUB>56</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>57</SUB>> ]
"25769803780" [label = <(BLOCK,{
    // Our current version of depthwise max p...,{
    // Our current version of depthwise max p...)<SUB>57</SUB>> ]
"30064771135" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, depth % depth_win...)<SUB>61</SUB>> ]
"68719476820" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, depth % depth_win...)<SUB>62</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.equals,depth % depth_window == 0)<SUB>62</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.modulo,depth % depth_window)<SUB>62</SUB>> ]
"68719476821" [label = <(IDENTIFIER,depth,depth % depth_window)<SUB>62</SUB>> ]
"68719476822" [label = <(IDENTIFIER,depth_window,depth % depth_window)<SUB>62</SUB>> ]
"90194313240" [label = <(LITERAL,0,depth % depth_window == 0)<SUB>62</SUB>> ]
"30064771138" [label = <(Unimplemented,errors::Unimplemented(&quot;Depthwise max pooling re...)<SUB>63</SUB>> ]
"90194313241" [label = <(LITERAL,&quot;Depthwise max pooling requires the depth &quot;
   ...,errors::Unimplemented(&quot;Depthwise max pooling re...)<SUB>63</SUB>> ]
"30064771139" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, depth_stride == d...)<SUB>65</SUB>> ]
"68719476823" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, depth_stride == d...)<SUB>66</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.equals,depth_stride == depth_window)<SUB>66</SUB>> ]
"68719476824" [label = <(IDENTIFIER,depth_stride,depth_stride == depth_window)<SUB>66</SUB>> ]
"68719476825" [label = <(IDENTIFIER,depth_window,depth_stride == depth_window)<SUB>66</SUB>> ]
"30064771141" [label = <(Unimplemented,errors::Unimplemented(&quot;Depthwise max pooling re...)<SUB>67</SUB>> ]
"90194313242" [label = <(LITERAL,&quot;Depthwise max pooling requires the depth &quot;
   ...,errors::Unimplemented(&quot;Depthwise max pooling re...)<SUB>67</SUB>> ]
"30064771142" [label = <(OP_REQUIRES,OP_REQUIRES(context,
                (DeviceTyp...)<SUB>71</SUB>> ]
"68719476826" [label = <(IDENTIFIER,context,OP_REQUIRES(context,
                (DeviceTyp...)<SUB>71</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.equals,DeviceType(static_cast&lt;Device*&gt;(context-&gt;device...)<SUB>72</SUB>> ]
"30064771144" [label = <(DeviceType,DeviceType(static_cast&lt;Device*&gt;(context-&gt;device...)<SUB>72</SUB>> ]
"30064771145" [label = <(device_type,static_cast&lt;Device*&gt;(context-&gt;device())
       ...)<SUB>72</SUB>> ]
"30064771146" [label = <(attributes,static_cast&lt;Device*&gt;(context-&gt;device())
       ...)<SUB>72</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.cast,static_cast&lt;Device*&gt;(context-&gt;device()))<SUB>72</SUB>> ]
"184683593728" [label = <(UNKNOWN,Device*,Device*)<SUB>72</SUB>> ]
"30064771148" [label = <(device,context-&gt;device())<SUB>72</SUB>> ]
"68719476827" [label = <(IDENTIFIER,context,context-&gt;device())<SUB>72</SUB>> ]
"30064771149" [label = <(DeviceType,DeviceType(DEVICE_CPU))<SUB>74</SUB>> ]
"68719476828" [label = <(IDENTIFIER,DEVICE_CPU,DeviceType(DEVICE_CPU))<SUB>74</SUB>> ]
"30064771150" [label = <(Unimplemented,errors::Unimplemented(&quot;Depthwise max pooling is...)<SUB>75</SUB>> ]
"90194313243" [label = <(LITERAL,&quot;Depthwise max pooling is currently &quot;
         ...,errors::Unimplemented(&quot;Depthwise max pooling is...)<SUB>75</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.assignment,pad_depth = 0)<SUB>78</SUB>> ]
"68719476829" [label = <(IDENTIFIER,pad_depth,pad_depth = 0)<SUB>78</SUB>> ]
"90194313244" [label = <(LITERAL,0,pad_depth = 0)<SUB>78</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.assignment,out_depth = depth / depth_window)<SUB>79</SUB>> ]
"68719476830" [label = <(IDENTIFIER,out_depth,out_depth = depth / depth_window)<SUB>79</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.division,depth / depth_window)<SUB>79</SUB>> ]
"68719476831" [label = <(IDENTIFIER,depth,depth / depth_window)<SUB>79</SUB>> ]
"68719476832" [label = <(IDENTIFIER,depth_window,depth / depth_window)<SUB>79</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "115964116998"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "30064771089"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "30064771097"  [ label = "AST: "] 
  "25769803777" -> "30064771099"  [ label = "AST: "] 
  "25769803777" -> "30064771101"  [ label = "AST: "] 
  "25769803777" -> "30064771103"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "30064771076"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "68719476737"  [ label = "AST: "] 
  "30064771076" -> "90194313217"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "90194313218"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771079" -> "55834574848"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "90194313219"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "90194313220"  [ label = "AST: "] 
  "30064771083" -> "90194313221"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "30064771084" -> "68719476747"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476749"  [ label = "AST: "] 
  "30064771086" -> "68719476750"  [ label = "AST: "] 
  "30064771086" -> "90194313222"  [ label = "AST: "] 
  "30064771087" -> "68719476751"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476752"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "30064771088" -> "90194313223"  [ label = "AST: "] 
  "30064771089" -> "68719476754"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476755"  [ label = "AST: "] 
  "30064771090" -> "68719476756"  [ label = "AST: "] 
  "30064771090" -> "90194313224"  [ label = "AST: "] 
  "30064771091" -> "68719476757"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476758"  [ label = "AST: "] 
  "30064771092" -> "68719476759"  [ label = "AST: "] 
  "30064771092" -> "90194313225"  [ label = "AST: "] 
  "30064771093" -> "68719476760"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476761"  [ label = "AST: "] 
  "30064771094" -> "68719476762"  [ label = "AST: "] 
  "30064771094" -> "90194313226"  [ label = "AST: "] 
  "30064771095" -> "68719476763"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476764"  [ label = "AST: "] 
  "30064771096" -> "68719476765"  [ label = "AST: "] 
  "30064771096" -> "90194313227"  [ label = "AST: "] 
  "30064771097" -> "68719476766"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476767"  [ label = "AST: "] 
  "30064771098" -> "68719476768"  [ label = "AST: "] 
  "30064771098" -> "90194313228"  [ label = "AST: "] 
  "30064771099" -> "68719476769"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476770"  [ label = "AST: "] 
  "30064771100" -> "68719476771"  [ label = "AST: "] 
  "30064771100" -> "90194313229"  [ label = "AST: "] 
  "30064771101" -> "68719476772"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "68719476773"  [ label = "AST: "] 
  "30064771102" -> "68719476774"  [ label = "AST: "] 
  "30064771102" -> "90194313230"  [ label = "AST: "] 
  "30064771103" -> "68719476775"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "30064771109"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "68719476776"  [ label = "AST: "] 
  "30064771105" -> "90194313231"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "68719476777"  [ label = "AST: "] 
  "30064771107" -> "90194313232"  [ label = "AST: "] 
  "30064771108" -> "68719476778"  [ label = "AST: "] 
  "30064771108" -> "90194313233"  [ label = "AST: "] 
  "30064771109" -> "90194313234"  [ label = "AST: "] 
  "47244640256" -> "30064771110"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771110" -> "68719476779"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "68719476780"  [ label = "AST: "] 
  "30064771111" -> "55834574849"  [ label = "AST: "] 
  "25769803778" -> "30064771112"  [ label = "AST: "] 
  "25769803778" -> "30064771114"  [ label = "AST: "] 
  "25769803778" -> "30064771117"  [ label = "AST: "] 
  "25769803778" -> "30064771120"  [ label = "AST: "] 
  "30064771112" -> "68719476781"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476782"  [ label = "AST: "] 
  "30064771113" -> "68719476783"  [ label = "AST: "] 
  "30064771113" -> "90194313235"  [ label = "AST: "] 
  "30064771113" -> "68719476784"  [ label = "AST: "] 
  "30064771114" -> "68719476785"  [ label = "AST: "] 
  "30064771114" -> "68719476786"  [ label = "AST: "] 
  "30064771114" -> "90194313236"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771114" -> "30064771116"  [ label = "AST: "] 
  "30064771115" -> "68719476787"  [ label = "AST: "] 
  "30064771116" -> "68719476788"  [ label = "AST: "] 
  "30064771117" -> "68719476789"  [ label = "AST: "] 
  "30064771117" -> "68719476790"  [ label = "AST: "] 
  "30064771117" -> "90194313237"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771117" -> "30064771119"  [ label = "AST: "] 
  "30064771118" -> "68719476791"  [ label = "AST: "] 
  "30064771119" -> "68719476792"  [ label = "AST: "] 
  "30064771120" -> "68719476793"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771121" -> "68719476794"  [ label = "AST: "] 
  "30064771121" -> "68719476795"  [ label = "AST: "] 
  "30064771121" -> "68719476796"  [ label = "AST: "] 
  "30064771121" -> "68719476797"  [ label = "AST: "] 
  "30064771121" -> "68719476798"  [ label = "AST: "] 
  "30064771121" -> "68719476799"  [ label = "AST: "] 
  "47244640257" -> "30064771122"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "47244640258"  [ label = "AST: "] 
  "30064771122" -> "68719476800"  [ label = "AST: "] 
  "30064771122" -> "90194313238"  [ label = "AST: "] 
  "25769803779" -> "30064771123"  [ label = "AST: "] 
  "25769803779" -> "30064771128"  [ label = "AST: "] 
  "25769803779" -> "30064771133"  [ label = "AST: "] 
  "25769803779" -> "30064771134"  [ label = "AST: "] 
  "30064771123" -> "68719476801"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771124" -> "68719476802"  [ label = "AST: "] 
  "30064771124" -> "68719476803"  [ label = "AST: "] 
  "30064771124" -> "68719476804"  [ label = "AST: "] 
  "30064771124" -> "68719476805"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "30064771126"  [ label = "AST: "] 
  "30064771124" -> "30064771127"  [ label = "AST: "] 
  "30064771125" -> "68719476806"  [ label = "AST: "] 
  "30064771126" -> "68719476807"  [ label = "AST: "] 
  "30064771127" -> "68719476808"  [ label = "AST: "] 
  "30064771128" -> "68719476809"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "68719476810"  [ label = "AST: "] 
  "30064771129" -> "68719476811"  [ label = "AST: "] 
  "30064771129" -> "68719476812"  [ label = "AST: "] 
  "30064771129" -> "68719476813"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "30064771131"  [ label = "AST: "] 
  "30064771129" -> "30064771132"  [ label = "AST: "] 
  "30064771130" -> "68719476814"  [ label = "AST: "] 
  "30064771131" -> "68719476815"  [ label = "AST: "] 
  "30064771132" -> "68719476816"  [ label = "AST: "] 
  "30064771133" -> "68719476817"  [ label = "AST: "] 
  "30064771133" -> "90194313239"  [ label = "AST: "] 
  "30064771134" -> "68719476818"  [ label = "AST: "] 
  "30064771134" -> "68719476819"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "30064771135"  [ label = "AST: "] 
  "25769803780" -> "30064771139"  [ label = "AST: "] 
  "25769803780" -> "30064771142"  [ label = "AST: "] 
  "25769803780" -> "30064771151"  [ label = "AST: "] 
  "25769803780" -> "30064771152"  [ label = "AST: "] 
  "30064771135" -> "68719476820"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771135" -> "30064771138"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771136" -> "90194313240"  [ label = "AST: "] 
  "30064771137" -> "68719476821"  [ label = "AST: "] 
  "30064771137" -> "68719476822"  [ label = "AST: "] 
  "30064771138" -> "90194313241"  [ label = "AST: "] 
  "30064771139" -> "68719476823"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771139" -> "30064771141"  [ label = "AST: "] 
  "30064771140" -> "68719476824"  [ label = "AST: "] 
  "30064771140" -> "68719476825"  [ label = "AST: "] 
  "30064771141" -> "90194313242"  [ label = "AST: "] 
  "30064771142" -> "68719476826"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771142" -> "30064771150"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771143" -> "30064771149"  [ label = "AST: "] 
  "30064771144" -> "30064771145"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771146" -> "30064771147"  [ label = "AST: "] 
  "30064771147" -> "184683593728"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771148" -> "68719476827"  [ label = "AST: "] 
  "30064771149" -> "68719476828"  [ label = "AST: "] 
  "30064771150" -> "90194313243"  [ label = "AST: "] 
  "30064771151" -> "68719476829"  [ label = "AST: "] 
  "30064771151" -> "90194313244"  [ label = "AST: "] 
  "30064771152" -> "68719476830"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771153" -> "68719476831"  [ label = "AST: "] 
  "30064771153" -> "68719476832"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "CFG: "] 
  "30064771078" -> "30064771082"  [ label = "CFG: "] 
  "30064771080" -> "30064771086"  [ label = "CFG: "] 
  "30064771085" -> "30064771088"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771089" -> "30064771092"  [ label = "CFG: "] 
  "30064771091" -> "30064771094"  [ label = "CFG: "] 
  "30064771093" -> "30064771096"  [ label = "CFG: "] 
  "30064771095" -> "30064771098"  [ label = "CFG: "] 
  "30064771097" -> "30064771100"  [ label = "CFG: "] 
  "30064771099" -> "30064771102"  [ label = "CFG: "] 
  "30064771101" -> "30064771105"  [ label = "CFG: "] 
  "30064771103" -> "55834574849"  [ label = "CFG: "] 
  "30064771073" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771072"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771104" -> "30064771109"  [ label = "CFG: "] 
  "30064771109" -> "30064771103"  [ label = "CFG: "] 
  "30064771110" -> "30064771113"  [ label = "CFG: "] 
  "30064771110" -> "30064771122"  [ label = "CFG: "] 
  "30064771122" -> "30064771125"  [ label = "CFG: "] 
  "30064771122" -> "30064771137"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "55834574848" -> "30064771079"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771083" -> "30064771081"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771105" -> "30064771107"  [ label = "CFG: "] 
  "30064771106" -> "30064771104"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771112" -> "30064771115"  [ label = "CFG: "] 
  "30064771114" -> "30064771118"  [ label = "CFG: "] 
  "30064771117" -> "30064771121"  [ label = "CFG: "] 
  "30064771120" -> "30064771122"  [ label = "CFG: "] 
  "30064771123" -> "30064771130"  [ label = "CFG: "] 
  "30064771128" -> "30064771133"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "30064771134" -> "128849018880"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "30064771108" -> "30064771106"  [ label = "CFG: "] 
  "55834574849" -> "30064771111"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771115" -> "30064771116"  [ label = "CFG: "] 
  "30064771116" -> "30064771114"  [ label = "CFG: "] 
  "30064771118" -> "30064771119"  [ label = "CFG: "] 
  "30064771119" -> "30064771117"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771124" -> "30064771123"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771135" -> "30064771140"  [ label = "CFG: "] 
  "30064771139" -> "184683593728"  [ label = "CFG: "] 
  "30064771142" -> "30064771151"  [ label = "CFG: "] 
  "30064771151" -> "30064771153"  [ label = "CFG: "] 
  "30064771152" -> "128849018880"  [ label = "CFG: "] 
  "30064771125" -> "30064771126"  [ label = "CFG: "] 
  "30064771126" -> "30064771127"  [ label = "CFG: "] 
  "30064771127" -> "30064771124"  [ label = "CFG: "] 
  "30064771130" -> "30064771131"  [ label = "CFG: "] 
  "30064771131" -> "30064771132"  [ label = "CFG: "] 
  "30064771132" -> "30064771129"  [ label = "CFG: "] 
  "30064771136" -> "30064771138"  [ label = "CFG: "] 
  "30064771138" -> "30064771135"  [ label = "CFG: "] 
  "30064771140" -> "30064771141"  [ label = "CFG: "] 
  "30064771141" -> "30064771139"  [ label = "CFG: "] 
  "30064771143" -> "30064771150"  [ label = "CFG: "] 
  "30064771150" -> "30064771142"  [ label = "CFG: "] 
  "30064771153" -> "30064771152"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "30064771144" -> "30064771149"  [ label = "CFG: "] 
  "30064771149" -> "30064771143"  [ label = "CFG: "] 
  "30064771145" -> "30064771144"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771147" -> "30064771146"  [ label = "CFG: "] 
  "184683593728" -> "30064771148"  [ label = "CFG: "] 
  "30064771148" -> "30064771147"  [ label = "CFG: "] 
  "111669149697" -> "30064771075"  [ label = "CFG: "] 
  "115964116996" -> "128849018880"  [ label = "DDG: explicit_paddings"] 
  "30064771073" -> "128849018880"  [ label = "DDG: GetTensorSpatialDims(tensor_in_shape.dims(), data_format)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: GetTensorSpatialDims(tensor_in_shape.dims(), data_format) == 2"] 
  "30064771076" -> "128849018880"  [ label = "DDG: tensor_in_shape.dims()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                  &quot;tensor_in_shape must have 2 spatial dimensions. &quot;,
                  tensor_in_shape.dims(), &quot; &quot;, data_format)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context,
              GetTensorSpatialDims(tensor_in_shape.dims(), data_format) == 2,
              errors::InvalidArgument(
                  &quot;tensor_in_shape must have 2 spatial dimensions. &quot;,
                  tensor_in_shape.dims(), &quot; &quot;, data_format))"] 
  "30064771078" -> "128849018880"  [ label = "DDG: this-&gt;data_format"] 
  "30064771078" -> "128849018880"  [ label = "DDG: this-&gt;data_format = data_format"] 
  "30064771081" -> "128849018880"  [ label = "DDG: GetTensorDim(tensor_in_shape, data_format, 'C')"] 
  "30064771083" -> "128849018880"  [ label = "DDG: data_format == FORMAT_NCHW_VECT_C"] 
  "30064771081" -> "128849018880"  [ label = "DDG: data_format == FORMAT_NCHW_VECT_C ? 4 : 1"] 
  "30064771080" -> "128849018880"  [ label = "DDG: GetTensorDim(tensor_in_shape, data_format, 'C') *
          (data_format == FORMAT_NCHW_VECT_C ? 4 : 1)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: depth = GetTensorDim(tensor_in_shape, data_format, 'C') *
          (data_format == FORMAT_NCHW_VECT_C ? 4 : 1)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: GetTensorDim(tensor_in_shape, data_format, 'W')"] 
  "30064771085" -> "128849018880"  [ label = "DDG: tensor_in_cols = GetTensorDim(tensor_in_shape, data_format, 'W')"] 
  "30064771087" -> "128849018880"  [ label = "DDG: GetTensorDim(tensor_in_shape, data_format, 'H')"] 
  "30064771087" -> "128849018880"  [ label = "DDG: tensor_in_rows = GetTensorDim(tensor_in_shape, data_format, 'H')"] 
  "30064771090" -> "128849018880"  [ label = "DDG: tensor_in_shape"] 
  "30064771089" -> "128849018880"  [ label = "DDG: GetTensorDim(tensor_in_shape, data_format, 'N')"] 
  "30064771089" -> "128849018880"  [ label = "DDG: tensor_in_batch = GetTensorDim(tensor_in_shape, data_format, 'N')"] 
  "30064771091" -> "128849018880"  [ label = "DDG: GetTensorDim(ksize, data_format, 'H')"] 
  "30064771091" -> "128849018880"  [ label = "DDG: window_rows = GetTensorDim(ksize, data_format, 'H')"] 
  "30064771093" -> "128849018880"  [ label = "DDG: GetTensorDim(ksize, data_format, 'W')"] 
  "30064771093" -> "128849018880"  [ label = "DDG: window_cols = GetTensorDim(ksize, data_format, 'W')"] 
  "30064771096" -> "128849018880"  [ label = "DDG: ksize"] 
  "30064771095" -> "128849018880"  [ label = "DDG: GetTensorDim(ksize, data_format, 'C')"] 
  "30064771095" -> "128849018880"  [ label = "DDG: depth_window = GetTensorDim(ksize, data_format, 'C')"] 
  "30064771097" -> "128849018880"  [ label = "DDG: GetTensorDim(stride, data_format, 'H')"] 
  "30064771097" -> "128849018880"  [ label = "DDG: row_stride = GetTensorDim(stride, data_format, 'H')"] 
  "30064771099" -> "128849018880"  [ label = "DDG: GetTensorDim(stride, data_format, 'W')"] 
  "30064771099" -> "128849018880"  [ label = "DDG: col_stride = GetTensorDim(stride, data_format, 'W')"] 
  "30064771101" -> "128849018880"  [ label = "DDG: depth_stride"] 
  "30064771102" -> "128849018880"  [ label = "DDG: stride"] 
  "30064771102" -> "128849018880"  [ label = "DDG: data_format"] 
  "30064771101" -> "128849018880"  [ label = "DDG: GetTensorDim(stride, data_format, 'C')"] 
  "30064771101" -> "128849018880"  [ label = "DDG: depth_stride = GetTensorDim(stride, data_format, 'C')"] 
  "30064771106" -> "128849018880"  [ label = "DDG: window_rows == 1"] 
  "30064771106" -> "128849018880"  [ label = "DDG: window_cols == 1"] 
  "30064771104" -> "128849018880"  [ label = "DDG: window_rows == 1 &amp;&amp; window_cols == 1"] 
  "30064771103" -> "128849018880"  [ label = "DDG: depth_window == 1 || (window_rows == 1 &amp;&amp; window_cols == 1)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: errors::Unimplemented(
                  &quot;MaxPooling supports exactly one of pooling across depth &quot;
                  &quot;or pooling across width/height.&quot;)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context,
              (depth_window == 1 || (window_rows == 1 &amp;&amp; window_cols == 1)),
              errors::Unimplemented(
                  &quot;MaxPooling supports exactly one of pooling across depth &quot;
                  &quot;or pooling across width/height.&quot;))"] 
  "30064771110" -> "128849018880"  [ label = "DDG: Padding::EXPLICIT"] 
  "30064771110" -> "128849018880"  [ label = "DDG: padding == Padding::EXPLICIT"] 
  "30064771112" -> "128849018880"  [ label = "DDG: CheckValidPadding(padding, explicit_paddings,
                                              /*num_dims=*/4, data_format)"] 
  "30064771112" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(context, CheckValidPadding(padding, explicit_paddings,
                                              /*num_dims=*/4, data_format))"] 
  "30064771114" -> "128849018880"  [ label = "DDG: GetExplicitPaddingForDim(explicit_paddings, data_format, 'H', &amp;pad_top,
                             &amp;pad_bottom)"] 
  "30064771117" -> "128849018880"  [ label = "DDG: explicit_paddings"] 
  "30064771117" -> "128849018880"  [ label = "DDG: data_format"] 
  "30064771117" -> "128849018880"  [ label = "DDG: GetExplicitPaddingForDim(explicit_paddings, data_format, 'W', &amp;pad_left,
                             &amp;pad_right)"] 
  "30064771121" -> "128849018880"  [ label = "DDG: pad_top"] 
  "30064771121" -> "128849018880"  [ label = "DDG: pad_bottom"] 
  "30064771121" -> "128849018880"  [ label = "DDG: pad_left"] 
  "30064771121" -> "128849018880"  [ label = "DDG: pad_right"] 
  "30064771120" -> "128849018880"  [ label = "DDG: CheckPaddingSize(window_rows, window_cols, pad_top,
                                             pad_bottom, pad_left, pad_right)"] 
  "30064771120" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(context, CheckPaddingSize(window_rows, window_cols, pad_top,
                                             pad_bottom, pad_left, pad_right))"] 
  "30064771122" -> "128849018880"  [ label = "DDG: depth_window"] 
  "30064771122" -> "128849018880"  [ label = "DDG: depth_window == 1"] 
  "30064771124" -> "128849018880"  [ label = "DDG: tensor_in_rows"] 
  "30064771124" -> "128849018880"  [ label = "DDG: window_rows"] 
  "30064771124" -> "128849018880"  [ label = "DDG: row_stride"] 
  "30064771124" -> "128849018880"  [ label = "DDG: &amp;out_height"] 
  "30064771124" -> "128849018880"  [ label = "DDG: &amp;pad_top"] 
  "30064771124" -> "128849018880"  [ label = "DDG: &amp;pad_bottom"] 
  "30064771123" -> "128849018880"  [ label = "DDG: GetWindowedOutputSizeVerbose(
                                tensor_in_rows, window_rows, row_stride,
                                padding, &amp;out_height, &amp;pad_top, &amp;pad_bottom)"] 
  "30064771123" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(context, GetWindowedOutputSizeVerbose(
                                tensor_in_rows, window_rows, row_stride,
                                padding, &amp;out_height, &amp;pad_top, &amp;pad_bottom))"] 
  "30064771128" -> "128849018880"  [ label = "DDG: context"] 
  "30064771129" -> "128849018880"  [ label = "DDG: tensor_in_cols"] 
  "30064771129" -> "128849018880"  [ label = "DDG: window_cols"] 
  "30064771129" -> "128849018880"  [ label = "DDG: col_stride"] 
  "30064771129" -> "128849018880"  [ label = "DDG: padding"] 
  "30064771129" -> "128849018880"  [ label = "DDG: &amp;out_width"] 
  "30064771129" -> "128849018880"  [ label = "DDG: &amp;pad_left"] 
  "30064771129" -> "128849018880"  [ label = "DDG: &amp;pad_right"] 
  "30064771128" -> "128849018880"  [ label = "DDG: GetWindowedOutputSizeVerbose(
                                tensor_in_cols, window_cols, col_stride,
                                padding, &amp;out_width, &amp;pad_left, &amp;pad_right)"] 
  "30064771128" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(context, GetWindowedOutputSizeVerbose(
                                tensor_in_cols, window_cols, col_stride,
                                padding, &amp;out_width, &amp;pad_left, &amp;pad_right))"] 
  "30064771133" -> "128849018880"  [ label = "DDG: pad_depth"] 
  "30064771133" -> "128849018880"  [ label = "DDG: pad_depth = 0"] 
  "30064771134" -> "128849018880"  [ label = "DDG: out_depth"] 
  "30064771134" -> "128849018880"  [ label = "DDG: depth"] 
  "30064771134" -> "128849018880"  [ label = "DDG: out_depth = depth"] 
  "30064771089" -> "128849018880"  [ label = "DDG: tensor_in_batch"] 
  "30064771084" -> "128849018880"  [ label = "DDG: FORMAT_NCHW_VECT_C"] 
  "30064771149" -> "128849018880"  [ label = "DDG: DEVICE_CPU"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "115964116998"  [ label = "DDG: "] 
  "30064771076" -> "30064771078"  [ label = "DDG: data_format"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: GetTensorDim(tensor_in_shape, data_format, 'C')"] 
  "30064771081" -> "30064771080"  [ label = "DDG: data_format == FORMAT_NCHW_VECT_C ? 4 : 1"] 
  "30064771086" -> "30064771085"  [ label = "DDG: tensor_in_shape"] 
  "30064771086" -> "30064771085"  [ label = "DDG: data_format"] 
  "30064771086" -> "30064771085"  [ label = "DDG: 'W'"] 
  "30064771088" -> "30064771087"  [ label = "DDG: tensor_in_shape"] 
  "30064771088" -> "30064771087"  [ label = "DDG: data_format"] 
  "30064771088" -> "30064771087"  [ label = "DDG: 'H'"] 
  "30064771090" -> "30064771089"  [ label = "DDG: tensor_in_shape"] 
  "30064771090" -> "30064771089"  [ label = "DDG: data_format"] 
  "30064771090" -> "30064771089"  [ label = "DDG: 'N'"] 
  "30064771092" -> "30064771091"  [ label = "DDG: ksize"] 
  "30064771092" -> "30064771091"  [ label = "DDG: data_format"] 
  "30064771092" -> "30064771091"  [ label = "DDG: 'H'"] 
  "30064771094" -> "30064771093"  [ label = "DDG: ksize"] 
  "30064771094" -> "30064771093"  [ label = "DDG: data_format"] 
  "30064771094" -> "30064771093"  [ label = "DDG: 'W'"] 
  "30064771096" -> "30064771095"  [ label = "DDG: ksize"] 
  "30064771096" -> "30064771095"  [ label = "DDG: data_format"] 
  "30064771096" -> "30064771095"  [ label = "DDG: 'C'"] 
  "30064771098" -> "30064771097"  [ label = "DDG: stride"] 
  "30064771098" -> "30064771097"  [ label = "DDG: data_format"] 
  "30064771098" -> "30064771097"  [ label = "DDG: 'H'"] 
  "30064771100" -> "30064771099"  [ label = "DDG: stride"] 
  "30064771100" -> "30064771099"  [ label = "DDG: data_format"] 
  "30064771100" -> "30064771099"  [ label = "DDG: 'W'"] 
  "30064771102" -> "30064771101"  [ label = "DDG: stride"] 
  "30064771102" -> "30064771101"  [ label = "DDG: data_format"] 
  "30064771102" -> "30064771101"  [ label = "DDG: 'C'"] 
  "115964116992" -> "30064771072"  [ label = "DDG: context"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: GetTensorSpatialDims(tensor_in_shape.dims(), data_format)"] 
  "30064771073" -> "30064771072"  [ label = "DDG: 2"] 
  "30064771076" -> "30064771072"  [ label = "DDG: &quot;tensor_in_shape must have 2 spatial dimensions. &quot;"] 
  "30064771076" -> "30064771072"  [ label = "DDG: tensor_in_shape.dims()"] 
  "30064771076" -> "30064771072"  [ label = "DDG: &quot; &quot;"] 
  "30064771076" -> "30064771072"  [ label = "DDG: data_format"] 
  "30064771072" -> "30064771103"  [ label = "DDG: context"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771104" -> "30064771103"  [ label = "DDG: depth_window == 1"] 
  "30064771104" -> "30064771103"  [ label = "DDG: window_rows == 1 &amp;&amp; window_cols == 1"] 
  "30064771109" -> "30064771103"  [ label = "DDG: &quot;MaxPooling supports exactly one of pooling across depth &quot;
                  &quot;or pooling across width/height.&quot;"] 
  "30064771074" -> "30064771073"  [ label = "DDG: tensor_in_shape.dims()"] 
  "30064771074" -> "30064771073"  [ label = "DDG: data_format"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: tensor_in_shape"] 
  "30064771074" -> "30064771076"  [ label = "DDG: data_format"] 
  "30064771082" -> "30064771081"  [ label = "DDG: tensor_in_shape"] 
  "30064771082" -> "30064771081"  [ label = "DDG: data_format"] 
  "30064771082" -> "30064771081"  [ label = "DDG: 'C'"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771082" -> "30064771086"  [ label = "DDG: tensor_in_shape"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771084" -> "30064771086"  [ label = "DDG: data_format"] 
  "30064771086" -> "30064771088"  [ label = "DDG: tensor_in_shape"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771086" -> "30064771088"  [ label = "DDG: data_format"] 
  "30064771088" -> "30064771090"  [ label = "DDG: tensor_in_shape"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771088" -> "30064771090"  [ label = "DDG: data_format"] 
  "115964116993" -> "30064771092"  [ label = "DDG: ksize"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771090" -> "30064771092"  [ label = "DDG: data_format"] 
  "30064771092" -> "30064771094"  [ label = "DDG: ksize"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771092" -> "30064771094"  [ label = "DDG: data_format"] 
  "30064771094" -> "30064771096"  [ label = "DDG: ksize"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771094" -> "30064771096"  [ label = "DDG: data_format"] 
  "115964116994" -> "30064771098"  [ label = "DDG: stride"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771096" -> "30064771098"  [ label = "DDG: data_format"] 
  "30064771098" -> "30064771100"  [ label = "DDG: stride"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771098" -> "30064771100"  [ label = "DDG: data_format"] 
  "30064771100" -> "30064771102"  [ label = "DDG: stride"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771100" -> "30064771102"  [ label = "DDG: data_format"] 
  "30064771105" -> "30064771104"  [ label = "DDG: depth_window"] 
  "30064771105" -> "30064771104"  [ label = "DDG: 1"] 
  "30064771106" -> "30064771104"  [ label = "DDG: window_rows == 1"] 
  "30064771106" -> "30064771104"  [ label = "DDG: window_cols == 1"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "115964116995" -> "30064771110"  [ label = "DDG: padding"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771105" -> "30064771122"  [ label = "DDG: depth_window"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "30064771080" -> "30064771134"  [ label = "DDG: depth"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: tensor_in_shape"] 
  "115964116997" -> "30064771074"  [ label = "DDG: data_format"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: tensor_in_shape"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771077" -> "30064771082"  [ label = "DDG: tensor_in_shape"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771076" -> "30064771082"  [ label = "DDG: data_format"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771095" -> "30064771105"  [ label = "DDG: depth_window"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771107" -> "30064771106"  [ label = "DDG: window_rows"] 
  "30064771107" -> "30064771106"  [ label = "DDG: 1"] 
  "30064771108" -> "30064771106"  [ label = "DDG: window_cols"] 
  "30064771108" -> "30064771106"  [ label = "DDG: 1"] 
  "30064771103" -> "30064771112"  [ label = "DDG: context"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771113" -> "30064771112"  [ label = "DDG: padding"] 
  "30064771113" -> "30064771112"  [ label = "DDG: explicit_paddings"] 
  "30064771113" -> "30064771112"  [ label = "DDG: 4"] 
  "30064771113" -> "30064771112"  [ label = "DDG: data_format"] 
  "30064771113" -> "30064771114"  [ label = "DDG: explicit_paddings"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771113" -> "30064771114"  [ label = "DDG: data_format"] 
  "30064771114" -> "30064771117"  [ label = "DDG: explicit_paddings"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771114" -> "30064771117"  [ label = "DDG: data_format"] 
  "30064771112" -> "30064771120"  [ label = "DDG: context"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771121" -> "30064771120"  [ label = "DDG: pad_bottom"] 
  "30064771121" -> "30064771120"  [ label = "DDG: window_cols"] 
  "30064771121" -> "30064771120"  [ label = "DDG: window_rows"] 
  "30064771121" -> "30064771120"  [ label = "DDG: pad_right"] 
  "30064771121" -> "30064771120"  [ label = "DDG: pad_top"] 
  "30064771121" -> "30064771120"  [ label = "DDG: pad_left"] 
  "30064771103" -> "30064771123"  [ label = "DDG: context"] 
  "30064771120" -> "30064771123"  [ label = "DDG: context"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771124" -> "30064771123"  [ label = "DDG: padding"] 
  "30064771124" -> "30064771123"  [ label = "DDG: &amp;pad_bottom"] 
  "30064771124" -> "30064771123"  [ label = "DDG: row_stride"] 
  "30064771124" -> "30064771123"  [ label = "DDG: tensor_in_rows"] 
  "30064771124" -> "30064771123"  [ label = "DDG: &amp;out_height"] 
  "30064771124" -> "30064771123"  [ label = "DDG: window_rows"] 
  "30064771124" -> "30064771123"  [ label = "DDG: &amp;pad_top"] 
  "30064771123" -> "30064771128"  [ label = "DDG: context"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: col_stride"] 
  "30064771129" -> "30064771128"  [ label = "DDG: &amp;pad_right"] 
  "30064771129" -> "30064771128"  [ label = "DDG: &amp;pad_left"] 
  "30064771129" -> "30064771128"  [ label = "DDG: window_cols"] 
  "30064771129" -> "30064771128"  [ label = "DDG: &amp;out_width"] 
  "30064771129" -> "30064771128"  [ label = "DDG: tensor_in_cols"] 
  "30064771129" -> "30064771128"  [ label = "DDG: padding"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771153" -> "30064771152"  [ label = "DDG: depth"] 
  "30064771153" -> "30064771152"  [ label = "DDG: depth_window"] 
  "115964116998" -> "30064771075"  [ label = "DDG: tensor_in_shape"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771082" -> "30064771084"  [ label = "DDG: data_format"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771091" -> "30064771107"  [ label = "DDG: window_rows"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771093" -> "30064771108"  [ label = "DDG: window_cols"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771110" -> "30064771113"  [ label = "DDG: padding"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "115964116996" -> "30064771113"  [ label = "DDG: explicit_paddings"] 
  "30064771102" -> "30064771113"  [ label = "DDG: data_format"] 
  "30064771091" -> "30064771121"  [ label = "DDG: window_rows"] 
  "30064771107" -> "30064771121"  [ label = "DDG: window_rows"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771093" -> "30064771121"  [ label = "DDG: window_cols"] 
  "30064771108" -> "30064771121"  [ label = "DDG: window_cols"] 
  "30064771114" -> "30064771121"  [ label = "DDG: &amp;pad_top"] 
  "30064771114" -> "30064771121"  [ label = "DDG: &amp;pad_bottom"] 
  "30064771117" -> "30064771121"  [ label = "DDG: &amp;pad_left"] 
  "30064771117" -> "30064771121"  [ label = "DDG: &amp;pad_right"] 
  "30064771087" -> "30064771124"  [ label = "DDG: tensor_in_rows"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771091" -> "30064771124"  [ label = "DDG: window_rows"] 
  "30064771107" -> "30064771124"  [ label = "DDG: window_rows"] 
  "30064771121" -> "30064771124"  [ label = "DDG: window_rows"] 
  "30064771097" -> "30064771124"  [ label = "DDG: row_stride"] 
  "30064771110" -> "30064771124"  [ label = "DDG: padding"] 
  "30064771113" -> "30064771124"  [ label = "DDG: padding"] 
  "30064771114" -> "30064771124"  [ label = "DDG: &amp;pad_top"] 
  "30064771121" -> "30064771124"  [ label = "DDG: pad_top"] 
  "30064771114" -> "30064771124"  [ label = "DDG: &amp;pad_bottom"] 
  "30064771121" -> "30064771124"  [ label = "DDG: pad_bottom"] 
  "30064771085" -> "30064771129"  [ label = "DDG: tensor_in_cols"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "30064771093" -> "30064771129"  [ label = "DDG: window_cols"] 
  "30064771108" -> "30064771129"  [ label = "DDG: window_cols"] 
  "30064771121" -> "30064771129"  [ label = "DDG: window_cols"] 
  "30064771099" -> "30064771129"  [ label = "DDG: col_stride"] 
  "30064771124" -> "30064771129"  [ label = "DDG: padding"] 
  "30064771117" -> "30064771129"  [ label = "DDG: &amp;pad_left"] 
  "30064771121" -> "30064771129"  [ label = "DDG: pad_left"] 
  "30064771117" -> "30064771129"  [ label = "DDG: &amp;pad_right"] 
  "30064771121" -> "30064771129"  [ label = "DDG: pad_right"] 
  "30064771103" -> "30064771135"  [ label = "DDG: context"] 
  "30064771120" -> "30064771135"  [ label = "DDG: context"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771136" -> "30064771135"  [ label = "DDG: depth % depth_window"] 
  "30064771136" -> "30064771135"  [ label = "DDG: 0"] 
  "30064771138" -> "30064771135"  [ label = "DDG: &quot;Depthwise max pooling requires the depth &quot;
                              &quot;window to evenly divide the input depth&quot;"] 
  "30064771135" -> "30064771139"  [ label = "DDG: context"] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771140" -> "30064771139"  [ label = "DDG: depth_stride"] 
  "30064771140" -> "30064771139"  [ label = "DDG: depth_window"] 
  "30064771141" -> "30064771139"  [ label = "DDG: &quot;Depthwise max pooling requires the depth &quot;
                              &quot;window to equal the depth stride&quot;"] 
  "30064771148" -> "30064771142"  [ label = "DDG: context"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "30064771143" -> "30064771142"  [ label = "DDG: DeviceType(static_cast&lt;Device*&gt;(context-&gt;device())
                                -&gt;attributes()
                                .device_type())"] 
  "30064771143" -> "30064771142"  [ label = "DDG: DeviceType(DEVICE_CPU)"] 
  "30064771150" -> "30064771142"  [ label = "DDG: &quot;Depthwise max pooling is currently &quot;
                                      &quot;only implemented for CPU devices.&quot;"] 
  "30064771137" -> "30064771136"  [ label = "DDG: depth"] 
  "30064771137" -> "30064771136"  [ label = "DDG: depth_window"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771101" -> "30064771140"  [ label = "DDG: depth_stride"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771137" -> "30064771140"  [ label = "DDG: depth_window"] 
  "111669149697" -> "30064771141"  [ label = "DDG: "] 
  "30064771144" -> "30064771143"  [ label = "DDG: static_cast&lt;Device*&gt;(context-&gt;device())
                                -&gt;attributes()
                                .device_type()"] 
  "30064771149" -> "30064771143"  [ label = "DDG: DEVICE_CPU"] 
  "111669149697" -> "30064771150"  [ label = "DDG: "] 
  "30064771137" -> "30064771153"  [ label = "DDG: depth"] 
  "111669149697" -> "30064771153"  [ label = "DDG: "] 
  "30064771140" -> "30064771153"  [ label = "DDG: depth_window"] 
  "30064771080" -> "30064771137"  [ label = "DDG: depth"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771122" -> "30064771137"  [ label = "DDG: depth_window"] 
  "30064771145" -> "30064771144"  [ label = "DDG: static_cast&lt;Device*&gt;(context-&gt;device())
                                -&gt;attributes()"] 
  "111669149697" -> "30064771149"  [ label = "DDG: "] 
  "30064771146" -> "30064771145"  [ label = "DDG: static_cast&lt;Device*&gt;(context-&gt;device())"] 
  "30064771148" -> "30064771146"  [ label = "DDG: context"] 
  "30064771148" -> "30064771147"  [ label = "DDG: context"] 
  "30064771139" -> "30064771148"  [ label = "DDG: context"] 
  "111669149697" -> "30064771148"  [ label = "DDG: "] 
  "30064771110" -> "30064771113"  [ label = "CDG: "] 
  "30064771110" -> "30064771112"  [ label = "CDG: "] 
  "30064771110" -> "30064771117"  [ label = "CDG: "] 
  "30064771110" -> "30064771116"  [ label = "CDG: "] 
  "30064771110" -> "30064771115"  [ label = "CDG: "] 
  "30064771110" -> "30064771114"  [ label = "CDG: "] 
  "30064771110" -> "30064771121"  [ label = "CDG: "] 
  "30064771110" -> "30064771120"  [ label = "CDG: "] 
  "30064771110" -> "30064771119"  [ label = "CDG: "] 
  "30064771110" -> "30064771118"  [ label = "CDG: "] 
  "30064771122" -> "30064771153"  [ label = "CDG: "] 
  "30064771122" -> "30064771152"  [ label = "CDG: "] 
  "30064771122" -> "30064771151"  [ label = "CDG: "] 
  "30064771122" -> "30064771150"  [ label = "CDG: "] 
  "30064771122" -> "184683593728"  [ label = "CDG: "] 
  "30064771122" -> "30064771125"  [ label = "CDG: "] 
  "30064771122" -> "30064771124"  [ label = "CDG: "] 
  "30064771122" -> "30064771123"  [ label = "CDG: "] 
  "30064771122" -> "30064771129"  [ label = "CDG: "] 
  "30064771122" -> "30064771128"  [ label = "CDG: "] 
  "30064771122" -> "30064771127"  [ label = "CDG: "] 
  "30064771122" -> "30064771126"  [ label = "CDG: "] 
  "30064771122" -> "30064771133"  [ label = "CDG: "] 
  "30064771122" -> "30064771132"  [ label = "CDG: "] 
  "30064771122" -> "30064771131"  [ label = "CDG: "] 
  "30064771122" -> "30064771130"  [ label = "CDG: "] 
  "30064771122" -> "30064771137"  [ label = "CDG: "] 
  "30064771122" -> "30064771136"  [ label = "CDG: "] 
  "30064771122" -> "30064771135"  [ label = "CDG: "] 
  "30064771122" -> "30064771134"  [ label = "CDG: "] 
  "30064771122" -> "30064771141"  [ label = "CDG: "] 
  "30064771122" -> "30064771140"  [ label = "CDG: "] 
  "30064771122" -> "30064771139"  [ label = "CDG: "] 
  "30064771122" -> "30064771138"  [ label = "CDG: "] 
  "30064771122" -> "30064771145"  [ label = "CDG: "] 
  "30064771122" -> "30064771144"  [ label = "CDG: "] 
  "30064771122" -> "30064771143"  [ label = "CDG: "] 
  "30064771122" -> "30064771142"  [ label = "CDG: "] 
  "30064771122" -> "30064771149"  [ label = "CDG: "] 
  "30064771122" -> "30064771148"  [ label = "CDG: "] 
  "30064771122" -> "30064771147"  [ label = "CDG: "] 
  "30064771122" -> "30064771146"  [ label = "CDG: "] 
  "30064771105" -> "30064771107"  [ label = "CDG: "] 
  "30064771105" -> "30064771106"  [ label = "CDG: "] 
  "30064771107" -> "30064771108"  [ label = "CDG: "] 
}
"""
)
