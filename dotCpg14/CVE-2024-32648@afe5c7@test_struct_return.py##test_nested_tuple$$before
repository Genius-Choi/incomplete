[33mval[0m [36mres96[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_nested_tuple" {  
"111669149697" [label = <(METHOD,test_nested_tuple)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,code = &quot;&quot;&quot;
struct Animal:
    location: address...)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,code,code = &quot;&quot;&quot;
struct Animal:
    location: address...)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;&quot;&quot;
struct Animal:
    location: address
    fu...,code = &quot;&quot;&quot;
struct Animal:
    location: address...)<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,c = get_contract(code))<SUB>28</SUB>> ]
"68719476740" [label = <(IDENTIFIER,c,c = get_contract(code))<SUB>28</SUB>> ]
"30064771073" [label = <(get_contract,get_contract(code))<SUB>28</SUB>> ]
"68719476739" [label = <(IDENTIFIER,get_contract,get_contract(code))<SUB>28</SUB>> ]
"68719476738" [label = <(IDENTIFIER,code,get_contract(code))<SUB>28</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,addr1 = &quot;0x123456789012345678901234567890123456...)<SUB>29</SUB>> ]
"68719476741" [label = <(IDENTIFIER,addr1,addr1 = &quot;0x123456789012345678901234567890123456...)<SUB>29</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;0x1234567890123456789012345678901234567890&quot;,addr1 = &quot;0x123456789012345678901234567890123456...)<SUB>29</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,addr2 = &quot;0x123456789012345678901234567890000000...)<SUB>30</SUB>> ]
"68719476742" [label = <(IDENTIFIER,addr2,addr2 = &quot;0x123456789012345678901234567890000000...)<SUB>30</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;0x1234567890123456789012345678900000000000&quot;,addr2 = &quot;0x123456789012345678901234567890000000...)<SUB>30</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assert,assert c.return_nested_tuple() == [(addr1, 124)...)<SUB>31</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.equals,c.return_nested_tuple() == [(addr1, 124), (addr...)<SUB>31</SUB>> ]
"30064771078" [label = <(return_nested_tuple,c.return_nested_tuple())<SUB>31</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,c.return_nested_tuple)<SUB>31</SUB>> ]
"68719476743" [label = <(IDENTIFIER,c,c.return_nested_tuple())<SUB>31</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,return_nested_tuple,return_nested_tuple)<SUB>31</SUB>> ]
"68719476744" [label = <(IDENTIFIER,c,c.return_nested_tuple())<SUB>31</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.listLiteral,[(addr1, 124), (addr2, 457)])<SUB>31</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.tupleLiteral,(addr1, 124))<SUB>31</SUB>> ]
"68719476745" [label = <(IDENTIFIER,addr1,(addr1, 124))<SUB>31</SUB>> ]
"90194313219" [label = <(LITERAL,124,(addr1, 124))<SUB>31</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.tupleLiteral,(addr2, 457))<SUB>31</SUB>> ]
"68719476746" [label = <(IDENTIFIER,addr2,(addr2, 457))<SUB>31</SUB>> ]
"90194313220" [label = <(LITERAL,457,(addr2, 457))<SUB>31</SUB>> ]
"94489280513" [label = <(LOCAL,code: __builtin.str)<SUB>2</SUB>> ]
"94489280514" [label = <(LOCAL,c: get_contract.&lt;returnValue&gt;)<SUB>28</SUB>> ]
"94489280515" [label = <(LOCAL,addr1: __builtin.str)<SUB>29</SUB>> ]
"94489280516" [label = <(LOCAL,addr2: __builtin.str)<SUB>30</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,get_contract)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "30064771074" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476739"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771076" -> "90194313218"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "30064771078"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "55834574848"  [ label = "AST: "] 
  "30064771081" -> "30064771079"  [ label = "AST: "] 
  "30064771081" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "30064771080" -> "90194313220"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "55834574848"  [ label = "CFG: "] 
  "30064771083" -> "128849018881"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "55834574848" -> "30064771077"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "115964116992" -> "128849018881"  [ label = "DDG: get_contract"] 
  "30064771072" -> "128849018881"  [ label = "DDG: code = &quot;&quot;&quot;
struct Animal:
    location: address
    fur: uint256

struct Human:
    location: address
    height: uint256

@external
def return_nested_tuple() -&gt; (Animal, Human):
    animal: Animal = Animal({
        location: 0x1234567890123456789012345678901234567890,
        fur: 123
    })
    human: Human = Human({
        location: 0x1234567890123456789012345678900000000000,
        height: 456
    })

    # do stuff, edit the structs
    animal.fur += 1
    human.height += 1

    return animal, human
    &quot;&quot;&quot;"] 
  "30064771073" -> "128849018881"  [ label = "DDG: code"] 
  "30064771074" -> "128849018881"  [ label = "DDG: get_contract(code)"] 
  "30064771074" -> "128849018881"  [ label = "DDG: c = get_contract(code)"] 
  "30064771075" -> "128849018881"  [ label = "DDG: addr1 = &quot;0x1234567890123456789012345678901234567890&quot;"] 
  "30064771076" -> "128849018881"  [ label = "DDG: addr2 = &quot;0x1234567890123456789012345678900000000000&quot;"] 
  "30064771078" -> "128849018881"  [ label = "DDG: c"] 
  "30064771082" -> "128849018881"  [ label = "DDG: c.return_nested_tuple()"] 
  "30064771079" -> "128849018881"  [ label = "DDG: addr1"] 
  "30064771081" -> "128849018881"  [ label = "DDG: (addr1, 124)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: addr2"] 
  "30064771081" -> "128849018881"  [ label = "DDG: (addr2, 457)"] 
  "30064771082" -> "128849018881"  [ label = "DDG: [(addr1, 124), (addr2, 457)]"] 
  "30064771083" -> "128849018881"  [ label = "DDG: c.return_nested_tuple() == [(addr1, 124), (addr2, 457)]"] 
  "30064771083" -> "128849018881"  [ label = "DDG: assert c.return_nested_tuple() == [(addr1, 124), (addr2, 457)]"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771073" -> "30064771074"  [ label = "DDG: code"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771082" -> "30064771083"  [ label = "DDG: c.return_nested_tuple()"] 
  "30064771082" -> "30064771083"  [ label = "DDG: [(addr1, 124), (addr2, 457)]"] 
  "111669149697" -> "68719476739"  [ label = "DDG: "] 
  "30064771072" -> "30064771073"  [ label = "DDG: code"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771078" -> "30064771082"  [ label = "DDG: c"] 
  "30064771081" -> "30064771082"  [ label = "DDG: (addr1, 124)"] 
  "30064771081" -> "30064771082"  [ label = "DDG: (addr2, 457)"] 
  "30064771074" -> "30064771078"  [ label = "DDG: c"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771079" -> "30064771081"  [ label = "DDG: addr1"] 
  "30064771079" -> "30064771081"  [ label = "DDG: 124"] 
  "30064771080" -> "30064771081"  [ label = "DDG: addr2"] 
  "30064771080" -> "30064771081"  [ label = "DDG: 457"] 
  "30064771075" -> "30064771079"  [ label = "DDG: addr1"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771076" -> "30064771080"  [ label = "DDG: addr2"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
}
"""
)
