[33mval[0m [36mres2046[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "gunzip" {  
"111669149697" [label = <(METHOD,gunzip)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;&quot;&quot;Gunzip the given data and return as much dat...,)<SUB>2</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,f = GzipFile(fileobj = BytesIO(data)))<SUB>6</SUB>> ]
"68719476743" [label = <(IDENTIFIER,f,f = GzipFile(fileobj = BytesIO(data)))<SUB>6</SUB>> ]
"30064771076" [label = <(GzipFile,GzipFile(fileobj = BytesIO(data)))<SUB>6</SUB>> ]
"68719476742" [label = <(IDENTIFIER,GzipFile,GzipFile(fileobj = BytesIO(data)))<SUB>6</SUB>> ]
"30064771075" [label = <(BytesIO,BytesIO(data))<SUB>6</SUB>> ]
"68719476741" [label = <(IDENTIFIER,BytesIO,BytesIO(data))<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,data,BytesIO(data))<SUB>6</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,output_stream = BytesIO())<SUB>7</SUB>> ]
"68719476745" [label = <(IDENTIFIER,output_stream,output_stream = BytesIO())<SUB>7</SUB>> ]
"30064771078" [label = <(BytesIO,BytesIO())<SUB>7</SUB>> ]
"68719476744" [label = <(IDENTIFIER,BytesIO,BytesIO())<SUB>7</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,chunk = b&quot;.&quot;)<SUB>8</SUB>> ]
"68719476746" [label = <(IDENTIFIER,chunk,chunk = b&quot;.&quot;)<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,b&quot;.&quot;,chunk = b&quot;.&quot;)<SUB>8</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,decompressed_size = 0)<SUB>9</SUB>> ]
"68719476747" [label = <(IDENTIFIER,decompressed_size,decompressed_size = 0)<SUB>9</SUB>> ]
"90194313218" [label = <(LITERAL,0,decompressed_size = 0)<SUB>9</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,WHILE,while ... : ...)<SUB>10</SUB>> ]
"68719476748" [label = <(IDENTIFIER,chunk,while ... : ...)<SUB>10</SUB>> ]
"25769803783" [label = <(BLOCK,try: ...
decompressed_size += len(chunk)
if ......,try: ...
decompressed_size += len(chunk)
if ......)<SUB>10</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,TRY,try: ...)<SUB>11</SUB>> ]
"25769803780" [label = <(BLOCK,chunk = f.read1(_CHUNK_SIZE),chunk = f.read1(_CHUNK_SIZE))<SUB>11</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,chunk = f.read1(_CHUNK_SIZE))<SUB>12</SUB>> ]
"68719476752" [label = <(IDENTIFIER,chunk,chunk = f.read1(_CHUNK_SIZE))<SUB>12</SUB>> ]
"30064771083" [label = <(read1,f.read1(_CHUNK_SIZE))<SUB>12</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.fieldAccess,f.read1)<SUB>12</SUB>> ]
"68719476750" [label = <(IDENTIFIER,f,f.read1(_CHUNK_SIZE))<SUB>12</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,read1,read1)<SUB>12</SUB>> ]
"68719476751" [label = <(IDENTIFIER,f,f.read1(_CHUNK_SIZE))<SUB>12</SUB>> ]
"68719476749" [label = <(IDENTIFIER,_CHUNK_SIZE,f.read1(_CHUNK_SIZE))<SUB>12</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,CATCH,if ... : ...
raise)<SUB>11</SUB>> ]
"25769803781" [label = <(BLOCK,if ... : ...
raise,if ... : ...
raise)<SUB>11</SUB>> ]
"25769803779" [label = <(BLOCK,if ... : ...
raise,if ... : ...
raise)<SUB>13</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>17</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.greaterThan,output_stream.getbuffer().nbytes &gt; 0)<SUB>17</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.fieldAccess,output_stream.getbuffer().nbytes)<SUB>17</SUB>> ]
"30064771086" [label = <(getbuffer,output_stream.getbuffer())<SUB>17</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.fieldAccess,output_stream.getbuffer)<SUB>17</SUB>> ]
"68719476753" [label = <(IDENTIFIER,output_stream,output_stream.getbuffer())<SUB>17</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,getbuffer,getbuffer)<SUB>17</SUB>> ]
"68719476754" [label = <(IDENTIFIER,output_stream,output_stream.getbuffer())<SUB>17</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,nbytes,nbytes)<SUB>17</SUB>> ]
"90194313219" [label = <(LITERAL,0,output_stream.getbuffer().nbytes &gt; 0)<SUB>17</SUB>> ]
"25769803778" [label = <(BLOCK,break,break)<SUB>17</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,BREAK,break)<SUB>18</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.raise,raise)<SUB>19</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignmentPlus,decompressed_size += len(chunk))<SUB>20</SUB>> ]
"68719476755" [label = <(IDENTIFIER,decompressed_size,decompressed_size += len(chunk))<SUB>20</SUB>> ]
"30064771090" [label = <(len,len(chunk))<SUB>20</SUB>> ]
"68719476757" [label = <(IDENTIFIER,len,len(chunk))<SUB>20</SUB>> ]
"68719476756" [label = <(IDENTIFIER,chunk,len(chunk))<SUB>20</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>21</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.logicalAnd,max_size and decompressed_size &gt; max_size)<SUB>21</SUB>> ]
"68719476758" [label = <(IDENTIFIER,max_size,max_size and decompressed_size &gt; max_size)<SUB>21</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.greaterThan,decompressed_size &gt; max_size)<SUB>21</SUB>> ]
"68719476759" [label = <(IDENTIFIER,decompressed_size,decompressed_size &gt; max_size)<SUB>21</SUB>> ]
"68719476760" [label = <(IDENTIFIER,max_size,decompressed_size &gt; max_size)<SUB>21</SUB>> ]
"25769803782" [label = <(BLOCK,raise _DecompressionMaxSizeExceeded(f&quot;The numbe...,raise _DecompressionMaxSizeExceeded(f&quot;The numbe...)<SUB>21</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.raise,raise _DecompressionMaxSizeExceeded(f&quot;The numbe...)<SUB>22</SUB>> ]
"30064771100" [label = <(_DecompressionMaxSizeExceeded,_DecompressionMaxSizeExceeded(f&quot;The number of b...)<SUB>22</SUB>> ]
"68719476763" [label = <(IDENTIFIER,_DecompressionMaxSizeExceeded,_DecompressionMaxSizeExceeded(f&quot;The number of b...)<SUB>22</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.stringExpressionList,f&quot;The number of bytes decompressed so far &quot; f&quot;(...)<SUB>23</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.formatString,f&quot;The number of bytes decompressed so far &quot;)<SUB>23</SUB>> ]
"90194313220" [label = <(LITERAL,The number of bytes decompressed so far ,f&quot;The number of bytes decompressed so far &quot;)<SUB>23</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.formatString,f&quot;({decompressed_size} B) exceed the specified ...)<SUB>24</SUB>> ]
"90194313221" [label = <(LITERAL,(,f&quot;({decompressed_size} B) exceed the specified ...)<SUB>24</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.formattedValue,{decompressed_size})<SUB>24</SUB>> ]
"68719476761" [label = <(IDENTIFIER,decompressed_size,{decompressed_size})<SUB>24</SUB>> ]
"90194313222" [label = <(LITERAL, B) exceed the specified maximum ,f&quot;({decompressed_size} B) exceed the specified ...)<SUB>24</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.formatString,f&quot;({max_size} B).&quot;)<SUB>25</SUB>> ]
"90194313223" [label = <(LITERAL,(,f&quot;({max_size} B).&quot;)<SUB>25</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.formattedValue,{max_size})<SUB>25</SUB>> ]
"68719476762" [label = <(IDENTIFIER,max_size,{max_size})<SUB>25</SUB>> ]
"90194313224" [label = <(LITERAL, B).,f&quot;({max_size} B).&quot;)<SUB>25</SUB>> ]
"30064771103" [label = <(write,output_stream.write(chunk))<SUB>27</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.fieldAccess,output_stream.write)<SUB>27</SUB>> ]
"68719476765" [label = <(IDENTIFIER,output_stream,output_stream.write(chunk))<SUB>27</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,write,write)<SUB>27</SUB>> ]
"68719476766" [label = <(IDENTIFIER,output_stream,output_stream.write(chunk))<SUB>27</SUB>> ]
"68719476764" [label = <(IDENTIFIER,chunk,output_stream.write(chunk))<SUB>27</SUB>> ]
"30064771105" [label = <(seek,output_stream.seek(0))<SUB>28</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.fieldAccess,output_stream.seek)<SUB>28</SUB>> ]
"68719476767" [label = <(IDENTIFIER,output_stream,output_stream.seek(0))<SUB>28</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,seek,seek)<SUB>28</SUB>> ]
"68719476768" [label = <(IDENTIFIER,output_stream,output_stream.seek(0))<SUB>28</SUB>> ]
"90194313225" [label = <(LITERAL,0,output_stream.seek(0))<SUB>28</SUB>> ]
"146028888064" [label = <(RETURN,return output_stream.read(),return output_stream.read())<SUB>29</SUB>> ]
"30064771107" [label = <(read,output_stream.read())<SUB>29</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.fieldAccess,output_stream.read)<SUB>29</SUB>> ]
"68719476769" [label = <(IDENTIFIER,output_stream,output_stream.read())<SUB>29</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,read,read)<SUB>29</SUB>> ]
"68719476770" [label = <(IDENTIFIER,output_stream,output_stream.read())<SUB>29</SUB>> ]
"94489280516" [label = <(LOCAL,BytesIO: ANY)<SUB>6</SUB>> ]
"94489280518" [label = <(LOCAL,GzipFile: ANY)<SUB>6</SUB>> ]
"94489280520" [label = <(LOCAL,f: GzipFile.&lt;returnValue&gt;)<SUB>6</SUB>> ]
"94489280521" [label = <(LOCAL,output_stream: BytesIO.&lt;returnValue&gt;)<SUB>7</SUB>> ]
"94489280522" [label = <(LOCAL,chunk: GzipFile.&lt;returnValue&gt;.read1.&lt;returnValue&gt;)<SUB>8</SUB>> ]
"94489280523" [label = <(LOCAL,decompressed_size: __builtin.int)<SUB>9</SUB>> ]
"94489280524" [label = <(LOCAL,_CHUNK_SIZE: ANY)<SUB>12</SUB>> ]
"94489280526" [label = <(LOCAL,len: ANY)<SUB>20</SUB>> ]
"94489280527" [label = <(LOCAL,_DecompressionMaxSizeExceeded: ANY)<SUB>22</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,data)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,max_size)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,__builtin.bytes)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "90194313216"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "30064771105"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "94489280527"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771076" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771079" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "30064771080" -> "90194313217"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "47244640261" -> "68719476748"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "47244640258"  [ label = "AST: "] 
  "25769803783" -> "30064771091"  [ label = "AST: "] 
  "25769803783" -> "47244640260"  [ label = "AST: "] 
  "25769803783" -> "30064771103"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "25769803780" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476752"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771083" -> "68719476751"  [ label = "AST: "] 
  "30064771083" -> "68719476749"  [ label = "AST: "] 
  "30064771082" -> "68719476750"  [ label = "AST: "] 
  "30064771082" -> "55834574848"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "25769803779" -> "30064771089"  [ label = "AST: "] 
  "47244640257" -> "30064771088"  [ label = "AST: "] 
  "47244640257" -> "25769803778"  [ label = "AST: "] 
  "30064771088" -> "30064771087"  [ label = "AST: "] 
  "30064771088" -> "90194313219"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771087" -> "55834574850"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "68719476754"  [ label = "AST: "] 
  "30064771085" -> "68719476753"  [ label = "AST: "] 
  "30064771085" -> "55834574849"  [ label = "AST: "] 
  "25769803778" -> "47244640256"  [ label = "AST: "] 
  "30064771091" -> "68719476755"  [ label = "AST: "] 
  "30064771091" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476757"  [ label = "AST: "] 
  "30064771090" -> "68719476756"  [ label = "AST: "] 
  "47244640260" -> "30064771093"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771093" -> "68719476758"  [ label = "AST: "] 
  "30064771093" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476759"  [ label = "AST: "] 
  "30064771092" -> "68719476760"  [ label = "AST: "] 
  "25769803782" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476763"  [ label = "AST: "] 
  "30064771100" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "30064771094"  [ label = "AST: "] 
  "30064771099" -> "30064771096"  [ label = "AST: "] 
  "30064771099" -> "30064771098"  [ label = "AST: "] 
  "30064771094" -> "90194313220"  [ label = "AST: "] 
  "30064771096" -> "90194313221"  [ label = "AST: "] 
  "30064771096" -> "30064771095"  [ label = "AST: "] 
  "30064771096" -> "90194313222"  [ label = "AST: "] 
  "30064771095" -> "68719476761"  [ label = "AST: "] 
  "30064771098" -> "90194313223"  [ label = "AST: "] 
  "30064771098" -> "30064771097"  [ label = "AST: "] 
  "30064771098" -> "90194313224"  [ label = "AST: "] 
  "30064771097" -> "68719476762"  [ label = "AST: "] 
  "30064771103" -> "30064771102"  [ label = "AST: "] 
  "30064771103" -> "68719476766"  [ label = "AST: "] 
  "30064771103" -> "68719476764"  [ label = "AST: "] 
  "30064771102" -> "68719476765"  [ label = "AST: "] 
  "30064771102" -> "55834574851"  [ label = "AST: "] 
  "30064771105" -> "30064771104"  [ label = "AST: "] 
  "30064771105" -> "68719476768"  [ label = "AST: "] 
  "30064771105" -> "90194313225"  [ label = "AST: "] 
  "30064771104" -> "68719476767"  [ label = "AST: "] 
  "30064771104" -> "55834574852"  [ label = "AST: "] 
  "146028888064" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "30064771106"  [ label = "AST: "] 
  "30064771107" -> "68719476770"  [ label = "AST: "] 
  "30064771106" -> "68719476769"  [ label = "AST: "] 
  "30064771106" -> "55834574853"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "68719476748"  [ label = "CFG: "] 
  "30064771105" -> "55834574853"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "68719476748" -> "55834574848"  [ label = "CFG: "] 
  "68719476748" -> "55834574852"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771107" -> "146028888064"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771091" -> "30064771093"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771103" -> "68719476748"  [ label = "CFG: "] 
  "55834574852" -> "30064771104"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771093" -> "55834574851"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "55834574853" -> "30064771106"  [ label = "CFG: "] 
  "30064771084" -> "55834574849"  [ label = "CFG: "] 
  "30064771084" -> "30064771090"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771101" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771102"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771099" -> "30064771100"  [ label = "CFG: "] 
  "55834574848" -> "30064771082"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771088" -> "55834574852"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771095" -> "30064771096"  [ label = "CFG: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771086" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771087"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "55834574849" -> "30064771085"  [ label = "CFG: "] 
  "111669149697" -> "30064771075"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018881"  [ label = "DDG: max_size"] 
  "30064771077" -> "128849018881"  [ label = "DDG: f"] 
  "30064771075" -> "128849018881"  [ label = "DDG: data"] 
  "30064771076" -> "128849018881"  [ label = "DDG: BytesIO(data)"] 
  "30064771077" -> "128849018881"  [ label = "DDG: GzipFile(fileobj = BytesIO(data))"] 
  "30064771077" -> "128849018881"  [ label = "DDG: f = GzipFile(fileobj = BytesIO(data))"] 
  "30064771079" -> "128849018881"  [ label = "DDG: BytesIO()"] 
  "30064771079" -> "128849018881"  [ label = "DDG: output_stream = BytesIO()"] 
  "30064771080" -> "128849018881"  [ label = "DDG: chunk"] 
  "30064771080" -> "128849018881"  [ label = "DDG: chunk = b&quot;.&quot;"] 
  "30064771081" -> "128849018881"  [ label = "DDG: decompressed_size"] 
  "30064771081" -> "128849018881"  [ label = "DDG: decompressed_size = 0"] 
  "30064771084" -> "128849018881"  [ label = "DDG: chunk"] 
  "30064771083" -> "128849018881"  [ label = "DDG: f"] 
  "30064771083" -> "128849018881"  [ label = "DDG: _CHUNK_SIZE"] 
  "30064771084" -> "128849018881"  [ label = "DDG: f.read1(_CHUNK_SIZE)"] 
  "30064771084" -> "128849018881"  [ label = "DDG: chunk = f.read1(_CHUNK_SIZE)"] 
  "30064771088" -> "128849018881"  [ label = "DDG: output_stream.getbuffer().nbytes &gt; 0"] 
  "30064771089" -> "128849018881"  [ label = "DDG: raise"] 
  "30064771091" -> "128849018881"  [ label = "DDG: decompressed_size"] 
  "30064771091" -> "128849018881"  [ label = "DDG: len(chunk)"] 
  "30064771091" -> "128849018881"  [ label = "DDG: decompressed_size += len(chunk)"] 
  "30064771093" -> "128849018881"  [ label = "DDG: max_size"] 
  "30064771092" -> "128849018881"  [ label = "DDG: decompressed_size"] 
  "30064771093" -> "128849018881"  [ label = "DDG: decompressed_size &gt; max_size"] 
  "30064771093" -> "128849018881"  [ label = "DDG: max_size and decompressed_size &gt; max_size"] 
  "30064771099" -> "128849018881"  [ label = "DDG: f&quot;The number of bytes decompressed so far &quot;"] 
  "30064771095" -> "128849018881"  [ label = "DDG: decompressed_size"] 
  "30064771096" -> "128849018881"  [ label = "DDG: {decompressed_size}"] 
  "30064771099" -> "128849018881"  [ label = "DDG: f&quot;({decompressed_size} B) exceed the specified maximum &quot;"] 
  "30064771097" -> "128849018881"  [ label = "DDG: max_size"] 
  "30064771098" -> "128849018881"  [ label = "DDG: {max_size}"] 
  "30064771099" -> "128849018881"  [ label = "DDG: f&quot;({max_size} B).&quot;"] 
  "30064771100" -> "128849018881"  [ label = "DDG: f&quot;The number of bytes decompressed so far &quot; f&quot;({decompressed_size} B) exceed the specified maximum &quot; f&quot;({max_size} B).&quot;"] 
  "30064771101" -> "128849018881"  [ label = "DDG: _DecompressionMaxSizeExceeded(f&quot;The number of bytes decompressed so far &quot; f&quot;({decompressed_size} B) exceed the specified maximum &quot; f&quot;({max_size} B).&quot;)"] 
  "30064771101" -> "128849018881"  [ label = "DDG: raise _DecompressionMaxSizeExceeded(f&quot;The number of bytes decompressed so far &quot; f&quot;({decompressed_size} B) exceed the specified maximum &quot; f&quot;({max_size} B).&quot;)"] 
  "30064771103" -> "128849018881"  [ label = "DDG: chunk"] 
  "30064771103" -> "128849018881"  [ label = "DDG: output_stream.write(chunk)"] 
  "30064771105" -> "128849018881"  [ label = "DDG: output_stream.seek(0)"] 
  "30064771107" -> "128849018881"  [ label = "DDG: output_stream"] 
  "30064771107" -> "128849018881"  [ label = "DDG: output_stream.read()"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "90194313216"  [ label = "DDG: "] 
  "30064771076" -> "30064771077"  [ label = "DDG: BytesIO(data)"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771107" -> "146028888064"  [ label = "DDG: output_stream.read()"] 
  "111669149697" -> "68719476748"  [ label = "DDG: "] 
  "30064771079" -> "30064771105"  [ label = "DDG: output_stream"] 
  "30064771086" -> "30064771105"  [ label = "DDG: output_stream"] 
  "30064771103" -> "30064771105"  [ label = "DDG: output_stream"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "111669149697" -> "68719476742"  [ label = "DDG: "] 
  "30064771075" -> "30064771076"  [ label = "DDG: data"] 
  "111669149697" -> "68719476744"  [ label = "DDG: "] 
  "30064771090" -> "30064771091"  [ label = "DDG: chunk"] 
  "30064771105" -> "30064771107"  [ label = "DDG: output_stream"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "111669149697" -> "68719476741"  [ label = "DDG: "] 
  "115964116992" -> "30064771075"  [ label = "DDG: data"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771081" -> "30064771091"  [ label = "DDG: decompressed_size"] 
  "30064771092" -> "30064771091"  [ label = "DDG: decompressed_size"] 
  "30064771095" -> "30064771091"  [ label = "DDG: decompressed_size"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771079" -> "30064771103"  [ label = "DDG: output_stream"] 
  "30064771086" -> "30064771103"  [ label = "DDG: output_stream"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771090" -> "30064771103"  [ label = "DDG: chunk"] 
  "30064771083" -> "30064771084"  [ label = "DDG: f"] 
  "30064771083" -> "30064771084"  [ label = "DDG: _CHUNK_SIZE"] 
  "30064771072" -> "68719476757"  [ label = "DDG: len"] 
  "111669149697" -> "68719476757"  [ label = "DDG: "] 
  "30064771084" -> "30064771090"  [ label = "DDG: chunk"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "115964116993" -> "30064771093"  [ label = "DDG: max_size"] 
  "30064771092" -> "30064771093"  [ label = "DDG: max_size"] 
  "30064771097" -> "30064771093"  [ label = "DDG: max_size"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771092" -> "30064771093"  [ label = "DDG: decompressed_size"] 
  "111669149697" -> "25769803779"  [ label = "DDG: "] 
  "30064771091" -> "30064771092"  [ label = "DDG: decompressed_size"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "115964116993" -> "30064771092"  [ label = "DDG: max_size"] 
  "30064771093" -> "30064771092"  [ label = "DDG: max_size"] 
  "30064771097" -> "30064771092"  [ label = "DDG: max_size"] 
  "30064771100" -> "30064771101"  [ label = "DDG: f&quot;The number of bytes decompressed so far &quot; f&quot;({decompressed_size} B) exceed the specified maximum &quot; f&quot;({max_size} B).&quot;"] 
  "30064771077" -> "30064771083"  [ label = "DDG: f"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "111669149697" -> "68719476763"  [ label = "DDG: "] 
  "30064771099" -> "30064771100"  [ label = "DDG: f&quot;The number of bytes decompressed so far &quot;"] 
  "30064771099" -> "30064771100"  [ label = "DDG: f&quot;({decompressed_size} B) exceed the specified maximum &quot;"] 
  "30064771099" -> "30064771100"  [ label = "DDG: f&quot;({max_size} B).&quot;"] 
  "30064771094" -> "30064771099"  [ label = "DDG: The number of bytes decompressed so far "] 
  "30064771096" -> "30064771099"  [ label = "DDG: ("] 
  "30064771096" -> "30064771099"  [ label = "DDG: {decompressed_size}"] 
  "30064771096" -> "30064771099"  [ label = "DDG:  B) exceed the specified maximum "] 
  "30064771098" -> "30064771099"  [ label = "DDG: ("] 
  "30064771098" -> "30064771099"  [ label = "DDG: {max_size}"] 
  "30064771098" -> "30064771099"  [ label = "DDG:  B)."] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771095" -> "30064771096"  [ label = "DDG: decompressed_size"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771097" -> "30064771098"  [ label = "DDG: max_size"] 
  "30064771091" -> "30064771095"  [ label = "DDG: decompressed_size"] 
  "30064771092" -> "30064771095"  [ label = "DDG: decompressed_size"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771093" -> "30064771097"  [ label = "DDG: max_size"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771079" -> "30064771086"  [ label = "DDG: output_stream"] 
  "30064771103" -> "30064771086"  [ label = "DDG: output_stream"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "68719476748" -> "30064771084"  [ label = "CDG: "] 
  "68719476748" -> "30064771083"  [ label = "CDG: "] 
  "68719476748" -> "30064771082"  [ label = "CDG: "] 
  "68719476748" -> "55834574848"  [ label = "CDG: "] 
  "30064771093" -> "30064771095"  [ label = "CDG: "] 
  "30064771093" -> "30064771094"  [ label = "CDG: "] 
  "30064771093" -> "30064771101"  [ label = "CDG: "] 
  "30064771093" -> "30064771100"  [ label = "CDG: "] 
  "30064771093" -> "30064771099"  [ label = "CDG: "] 
  "30064771093" -> "30064771098"  [ label = "CDG: "] 
  "30064771093" -> "30064771097"  [ label = "CDG: "] 
  "30064771093" -> "30064771096"  [ label = "CDG: "] 
  "30064771084" -> "30064771087"  [ label = "CDG: "] 
  "30064771084" -> "30064771086"  [ label = "CDG: "] 
  "30064771084" -> "30064771085"  [ label = "CDG: "] 
  "30064771084" -> "30064771093"  [ label = "CDG: "] 
  "30064771084" -> "30064771091"  [ label = "CDG: "] 
  "30064771084" -> "30064771090"  [ label = "CDG: "] 
  "30064771084" -> "30064771088"  [ label = "CDG: "] 
  "30064771084" -> "30064771103"  [ label = "CDG: "] 
  "30064771084" -> "30064771102"  [ label = "CDG: "] 
  "30064771084" -> "68719476748"  [ label = "CDG: "] 
  "30064771084" -> "55834574851"  [ label = "CDG: "] 
  "30064771084" -> "55834574850"  [ label = "CDG: "] 
  "30064771084" -> "55834574849"  [ label = "CDG: "] 
  "30064771084" -> "30064771092"  [ label = "CDG: "] 
  "30064771088" -> "30064771093"  [ label = "CDG: "] 
  "30064771088" -> "30064771091"  [ label = "CDG: "] 
  "30064771088" -> "30064771090"  [ label = "CDG: "] 
  "30064771088" -> "30064771089"  [ label = "CDG: "] 
  "30064771088" -> "30064771103"  [ label = "CDG: "] 
  "30064771088" -> "30064771102"  [ label = "CDG: "] 
  "30064771088" -> "68719476748"  [ label = "CDG: "] 
  "30064771088" -> "55834574851"  [ label = "CDG: "] 
  "30064771088" -> "30064771092"  [ label = "CDG: "] 
}
"""
)
