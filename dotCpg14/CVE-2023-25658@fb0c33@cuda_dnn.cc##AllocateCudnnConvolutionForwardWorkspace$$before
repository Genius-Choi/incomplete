[33mval[0m [36mres1104[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "AllocateCudnnConvolutionForwardWorkspace" {  
"111669149697" [label = <(METHOD,AllocateCudnnConvolutionForwardWorkspace)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,Stream* stream)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,const CudnnHandle&amp; cudnn)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,const CudnnTensorDescriptor&amp; input_nd)<SUB>3</SUB>> ]
"115964116995" [label = <(PARAM,const CudnnFilterDescriptor&amp; filter)<SUB>3</SUB>> ]
"115964116996" [label = <(PARAM,const CudnnConvolutionDescriptor&amp; conv)<SUB>4</SUB>> ]
"115964116997" [label = <(PARAM,const CudnnTensorDescriptor&amp; output_nd)<SUB>5</SUB>> ]
"115964116998" [label = <(PARAM,const dnn::AlgorithmDesc&amp; algorithm_desc)<SUB>6</SUB>> ]
"115964116999" [label = <(PARAM,ScratchAllocator* scratch_allocator)<SUB>7</SUB>> ]
"25769803777" [label = <(BLOCK,{
  if (IsTensorMathOpSet(conv) != algorithm_de...,{
  if (IsTensorMathOpSet(conv) != algorithm_de...)<SUB>7</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (IsTensorMathOpSet(conv) != algorithm_desc.tensor_ops_enabled()))<SUB>8</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.notEquals,IsTensorMathOpSet(conv) != algorithm_desc.tenso...)<SUB>8</SUB>> ]
"30064771073" [label = <(IsTensorMathOpSet,IsTensorMathOpSet(conv))<SUB>8</SUB>> ]
"68719476736" [label = <(IDENTIFIER,conv,IsTensorMathOpSet(conv))<SUB>8</SUB>> ]
"30064771074" [label = <(tensor_ops_enabled,algorithm_desc.tensor_ops_enabled())<SUB>8</SUB>> ]
"68719476737" [label = <(IDENTIFIER,algorithm_desc,algorithm_desc.tensor_ops_enabled())<SUB>8</SUB>> ]
"25769803778" [label = <(BLOCK,{
    return tsl::Status(
        port::error::...,{
    return tsl::Status(
        port::error::...)<SUB>8</SUB>> ]
"146028888064" [label = <(RETURN,return tsl::Status(
        port::error::INTERN...,return tsl::Status(
        port::error::INTERN...)<SUB>9</SUB>> ]
"30064771075" [label = <(Status,tsl::Status(
        port::error::INTERNAL,
   ...)<SUB>9</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,port::error::INTERNAL)<SUB>10</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,port::error)<SUB>10</SUB>> ]
"68719476738" [label = <(IDENTIFIER,port,tsl::Status(
        port::error::INTERNAL,
   ...)<SUB>10</SUB>> ]
"68719476739" [label = <(IDENTIFIER,error,tsl::Status(
        port::error::INTERNAL,
   ...)<SUB>10</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,INTERNAL,INTERNAL)<SUB>10</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Mismatch between cudnn conv and algorithm desc...,tsl::Status(
        port::error::INTERNAL,
   ...)<SUB>11</SUB>> ]
"94489280512" [label = <(LOCAL,size_t size_in_bytes: size_t)<SUB>15</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (algorithm_desc.workspace_size()))<SUB>16</SUB>> ]
"30064771078" [label = <(workspace_size,algorithm_desc.workspace_size())<SUB>16</SUB>> ]
"68719476740" [label = <(IDENTIFIER,algorithm_desc,algorithm_desc.workspace_size())<SUB>16</SUB>> ]
"25769803779" [label = <(BLOCK,{
    size_in_bytes = *algorithm_desc.workspace...,{
    size_in_bytes = *algorithm_desc.workspace...)<SUB>16</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,size_in_bytes = *algorithm_desc.workspace_size())<SUB>17</SUB>> ]
"68719476741" [label = <(IDENTIFIER,size_in_bytes,size_in_bytes = *algorithm_desc.workspace_size())<SUB>17</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.indirection,*algorithm_desc.workspace_size())<SUB>17</SUB>> ]
"30064771081" [label = <(workspace_size,algorithm_desc.workspace_size())<SUB>17</SUB>> ]
"68719476742" [label = <(IDENTIFIER,algorithm_desc,algorithm_desc.workspace_size())<SUB>17</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>18</SUB>> ]
"25769803780" [label = <(BLOCK,{
    RETURN_IF_CUDNN_ERROR(cudnnGetConvolution...,{
    RETURN_IF_CUDNN_ERROR(cudnnGetConvolution...)<SUB>18</SUB>> ]
"30064771082" [label = <(RETURN_IF_CUDNN_ERROR,RETURN_IF_CUDNN_ERROR(cudnnGetConvolutionForwar...)<SUB>19</SUB>> ]
"30064771083" [label = <(cudnnGetConvolutionForwardWorkspaceSize,cudnnGetConvolutionForwardWorkspaceSize(
      ...)<SUB>19</SUB>> ]
"30064771084" [label = <(handle,cudnn.handle())<SUB>20</SUB>> ]
"68719476743" [label = <(IDENTIFIER,cudnn,cudnn.handle())<SUB>20</SUB>> ]
"30064771085" [label = <(handle,input_nd.handle())<SUB>21</SUB>> ]
"68719476744" [label = <(IDENTIFIER,input_nd,input_nd.handle())<SUB>21</SUB>> ]
"30064771086" [label = <(handle,filter.handle())<SUB>22</SUB>> ]
"68719476745" [label = <(IDENTIFIER,filter,filter.handle())<SUB>22</SUB>> ]
"30064771087" [label = <(handle,conv.handle())<SUB>22</SUB>> ]
"68719476746" [label = <(IDENTIFIER,conv,conv.handle())<SUB>22</SUB>> ]
"30064771088" [label = <(handle,output_nd.handle())<SUB>23</SUB>> ]
"68719476747" [label = <(IDENTIFIER,output_nd,output_nd.handle())<SUB>23</SUB>> ]
"30064771089" [label = <(ToConvForwardAlgo,ToConvForwardAlgo(algorithm_desc))<SUB>24</SUB>> ]
"68719476748" [label = <(IDENTIFIER,algorithm_desc,ToConvForwardAlgo(algorithm_desc))<SUB>24</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.addressOf,&amp;size_in_bytes)<SUB>25</SUB>> ]
"68719476749" [label = <(IDENTIFIER,size_in_bytes,cudnnGetConvolutionForwardWorkspaceSize(
      ...)<SUB>25</SUB>> ]
"94489280513" [label = <(LOCAL,int64_t size_in_bytes_int64_t: int64_t)<SUB>28</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,size_in_bytes_int64_t = size_in_bytes)<SUB>28</SUB>> ]
"68719476750" [label = <(IDENTIFIER,size_in_bytes_int64_t,size_in_bytes_int64_t = size_in_bytes)<SUB>28</SUB>> ]
"68719476751" [label = <(IDENTIFIER,size_in_bytes,size_in_bytes_int64_t = size_in_bytes)<SUB>28</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (ABSL_PREDICT_FALSE(size_in_bytes_int64_t &lt; 0)))<SUB>30</SUB>> ]
"30064771092" [label = <(ABSL_PREDICT_FALSE,ABSL_PREDICT_FALSE(size_in_bytes_int64_t &lt; 0))<SUB>30</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.lessThan,size_in_bytes_int64_t &lt; 0)<SUB>30</SUB>> ]
"68719476752" [label = <(IDENTIFIER,size_in_bytes_int64_t,size_in_bytes_int64_t &lt; 0)<SUB>30</SUB>> ]
"90194313217" [label = <(LITERAL,0,size_in_bytes_int64_t &lt; 0)<SUB>30</SUB>> ]
"25769803781" [label = <(BLOCK,{
    return tsl::Status(
        port::error::...,{
    return tsl::Status(
        port::error::...)<SUB>30</SUB>> ]
"146028888065" [label = <(RETURN,return tsl::Status(
        port::error::INTERN...,return tsl::Status(
        port::error::INTERN...)<SUB>31</SUB>> ]
"30064771094" [label = <(Status,tsl::Status(
        port::error::INTERNAL,
   ...)<SUB>31</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.fieldAccess,port::error::INTERNAL)<SUB>32</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.fieldAccess,port::error)<SUB>32</SUB>> ]
"68719476753" [label = <(IDENTIFIER,port,tsl::Status(
        port::error::INTERNAL,
   ...)<SUB>32</SUB>> ]
"68719476754" [label = <(IDENTIFIER,error,tsl::Status(
        port::error::INTERNAL,
   ...)<SUB>32</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,INTERNAL,INTERNAL)<SUB>32</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;cudnnGetConvolutionForwardWorkspaceSize() retu...,tsl::Status(
        port::error::INTERNAL,
   ...)<SUB>33</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (size_in_bytes_int64_t == 0))<SUB>37</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.equals,size_in_bytes_int64_t == 0)<SUB>37</SUB>> ]
"68719476755" [label = <(IDENTIFIER,size_in_bytes_int64_t,size_in_bytes_int64_t == 0)<SUB>37</SUB>> ]
"90194313219" [label = <(LITERAL,0,size_in_bytes_int64_t == 0)<SUB>37</SUB>> ]
"25769803782" [label = <(BLOCK,{
    return DeviceMemory&lt;uint8_t&gt;();
  },{
    return DeviceMemory&lt;uint8_t&gt;();
  })<SUB>37</SUB>> ]
"146028888066" [label = <(RETURN,return DeviceMemory&lt;uint8_t&gt;();,return DeviceMemory&lt;uint8_t&gt;();)<SUB>38</SUB>> ]
"30064771098" [label = <(DeviceMemory&lt;uint8_t&gt;,DeviceMemory&lt;uint8_t&gt;())<SUB>38</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (ABSL_PREDICT_FALSE(!scratch_allocator)))<SUB>41</SUB>> ]
"30064771099" [label = <(ABSL_PREDICT_FALSE,ABSL_PREDICT_FALSE(!scratch_allocator))<SUB>41</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.logicalNot,!scratch_allocator)<SUB>41</SUB>> ]
"68719476756" [label = <(IDENTIFIER,scratch_allocator,!scratch_allocator)<SUB>41</SUB>> ]
"25769803783" [label = <(BLOCK,{
    return tsl::Status(port::error::INVALID_A...,{
    return tsl::Status(port::error::INVALID_A...)<SUB>41</SUB>> ]
"146028888067" [label = <(RETURN,return tsl::Status(port::error::INVALID_ARGUMEN...,return tsl::Status(port::error::INVALID_ARGUMEN...)<SUB>42</SUB>> ]
"30064771101" [label = <(Status,tsl::Status(port::error::INVALID_ARGUMENT,
    ...)<SUB>42</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.fieldAccess,port::error::INVALID_ARGUMENT)<SUB>42</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.fieldAccess,port::error)<SUB>42</SUB>> ]
"68719476757" [label = <(IDENTIFIER,port,tsl::Status(port::error::INVALID_ARGUMENT,
    ...)<SUB>42</SUB>> ]
"68719476758" [label = <(IDENTIFIER,error,tsl::Status(port::error::INVALID_ARGUMENT,
    ...)<SUB>42</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>42</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;No scratch allocator provided&quot;,tsl::Status(port::error::INVALID_ARGUMENT,
    ...)<SUB>43</SUB>> ]
"146028888068" [label = <(RETURN,return scratch_allocator-&gt;AllocateBytes(size_in...,return scratch_allocator-&gt;AllocateBytes(size_in...)<SUB>46</SUB>> ]
"30064771104" [label = <(AllocateBytes,scratch_allocator-&gt;AllocateBytes(size_in_bytes))<SUB>46</SUB>> ]
"68719476759" [label = <(IDENTIFIER,scratch_allocator,scratch_allocator-&gt;AllocateBytes(size_in_bytes))<SUB>46</SUB>> ]
"68719476760" [label = <(IDENTIFIER,size_in_bytes,scratch_allocator-&gt;AllocateBytes(size_in_bytes))<SUB>46</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,StatusOr&lt;DeviceMemory&lt;uint8_t&gt;&gt;)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "115964116998"  [ label = "AST: "] 
  "111669149697" -> "115964116999"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "146028888068"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "55834574848"  [ label = "AST: "] 
  "30064771077" -> "68719476738"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "47244640257" -> "30064771078"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "47244640258"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "25769803779" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476742"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "30064771085"  [ label = "AST: "] 
  "30064771083" -> "30064771086"  [ label = "AST: "] 
  "30064771083" -> "30064771087"  [ label = "AST: "] 
  "30064771083" -> "30064771088"  [ label = "AST: "] 
  "30064771083" -> "30064771089"  [ label = "AST: "] 
  "30064771083" -> "30064771090"  [ label = "AST: "] 
  "30064771084" -> "68719476743"  [ label = "AST: "] 
  "30064771085" -> "68719476744"  [ label = "AST: "] 
  "30064771086" -> "68719476745"  [ label = "AST: "] 
  "30064771087" -> "68719476746"  [ label = "AST: "] 
  "30064771088" -> "68719476747"  [ label = "AST: "] 
  "30064771089" -> "68719476748"  [ label = "AST: "] 
  "30064771090" -> "68719476749"  [ label = "AST: "] 
  "30064771091" -> "68719476750"  [ label = "AST: "] 
  "30064771091" -> "68719476751"  [ label = "AST: "] 
  "47244640259" -> "30064771092"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476752"  [ label = "AST: "] 
  "30064771093" -> "90194313217"  [ label = "AST: "] 
  "25769803781" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "90194313218"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "55834574849"  [ label = "AST: "] 
  "30064771096" -> "68719476753"  [ label = "AST: "] 
  "30064771096" -> "68719476754"  [ label = "AST: "] 
  "47244640260" -> "30064771097"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771097" -> "68719476755"  [ label = "AST: "] 
  "30064771097" -> "90194313219"  [ label = "AST: "] 
  "25769803782" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771098"  [ label = "AST: "] 
  "47244640261" -> "30064771099"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476756"  [ label = "AST: "] 
  "25769803783" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "90194313220"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "55834574850"  [ label = "AST: "] 
  "30064771103" -> "68719476757"  [ label = "AST: "] 
  "30064771103" -> "68719476758"  [ label = "AST: "] 
  "146028888068" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476759"  [ label = "AST: "] 
  "30064771104" -> "68719476760"  [ label = "AST: "] 
  "30064771091" -> "30064771093"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771077"  [ label = "CFG: "] 
  "30064771072" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771081"  [ label = "CFG: "] 
  "30064771078" -> "30064771084"  [ label = "CFG: "] 
  "30064771092" -> "30064771096"  [ label = "CFG: "] 
  "30064771092" -> "30064771097"  [ label = "CFG: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771097" -> "30064771100"  [ label = "CFG: "] 
  "30064771099" -> "30064771103"  [ label = "CFG: "] 
  "30064771099" -> "30064771104"  [ label = "CFG: "] 
  "30064771104" -> "146028888068"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771079" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771075" -> "146028888064"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771082" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "146028888065"  [ label = "CFG: "] 
  "30064771098" -> "146028888066"  [ label = "CFG: "] 
  "30064771101" -> "146028888067"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771077" -> "55834574848"  [ label = "CFG: "] 
  "55834574848" -> "30064771076"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771083"  [ label = "CFG: "] 
  "30064771096" -> "55834574849"  [ label = "CFG: "] 
  "55834574849" -> "30064771095"  [ label = "CFG: "] 
  "30064771103" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771102"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: stream"] 
  "115964116993" -> "128849018880"  [ label = "DDG: cudnn"] 
  "115964116994" -> "128849018880"  [ label = "DDG: input_nd"] 
  "115964116995" -> "128849018880"  [ label = "DDG: filter"] 
  "115964116997" -> "128849018880"  [ label = "DDG: output_nd"] 
  "115964116999" -> "128849018880"  [ label = "DDG: scratch_allocator"] 
  "30064771073" -> "128849018880"  [ label = "DDG: conv"] 
  "30064771072" -> "128849018880"  [ label = "DDG: IsTensorMathOpSet(conv)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: algorithm_desc"] 
  "30064771072" -> "128849018880"  [ label = "DDG: algorithm_desc.tensor_ops_enabled()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: IsTensorMathOpSet(conv) != algorithm_desc.tensor_ops_enabled()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: port::error::INTERNAL"] 
  "30064771075" -> "128849018880"  [ label = "DDG: tsl::Status(
        port::error::INTERNAL,
        &quot;Mismatch between cudnn conv and algorithm descriptors.&quot;)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "115964116998"  [ label = "DDG: "] 
  "111669149697" -> "115964116999"  [ label = "DDG: "] 
  "30064771083" -> "30064771091"  [ label = "DDG: &amp;size_in_bytes"] 
  "30064771079" -> "30064771091"  [ label = "DDG: size_in_bytes"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771104" -> "146028888068"  [ label = "DDG: scratch_allocator-&gt;AllocateBytes(size_in_bytes)"] 
  "30064771073" -> "30064771072"  [ label = "DDG: conv"] 
  "30064771074" -> "30064771072"  [ label = "DDG: algorithm_desc"] 
  "30064771075" -> "146028888064"  [ label = "DDG: tsl::Status(
        port::error::INTERNAL,
        &quot;Mismatch between cudnn conv and algorithm descriptors.&quot;)"] 
  "30064771074" -> "30064771078"  [ label = "DDG: algorithm_desc"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: size_in_bytes_int64_t"] 
  "30064771093" -> "30064771092"  [ label = "DDG: 0"] 
  "30064771094" -> "146028888065"  [ label = "DDG: tsl::Status(
        port::error::INTERNAL,
        &quot;cudnnGetConvolutionForwardWorkspaceSize() returned &quot;
        &quot;negative sizeInBytes value. This could be a cudnn bug.&quot;)"] 
  "30064771093" -> "30064771097"  [ label = "DDG: size_in_bytes_int64_t"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771098" -> "146028888066"  [ label = "DDG: DeviceMemory&lt;uint8_t&gt;()"] 
  "30064771100" -> "30064771099"  [ label = "DDG: scratch_allocator"] 
  "30064771101" -> "146028888067"  [ label = "DDG: tsl::Status(port::error::INVALID_ARGUMENT,
                       &quot;No scratch allocator provided&quot;)"] 
  "30064771100" -> "30064771104"  [ label = "DDG: scratch_allocator"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771083" -> "30064771104"  [ label = "DDG: &amp;size_in_bytes"] 
  "30064771079" -> "30064771104"  [ label = "DDG: size_in_bytes"] 
  "115964116996" -> "30064771073"  [ label = "DDG: conv"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116998" -> "30064771074"  [ label = "DDG: algorithm_desc"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771091" -> "30064771093"  [ label = "DDG: size_in_bytes_int64_t"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "115964116999" -> "30064771100"  [ label = "DDG: scratch_allocator"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: output_nd.handle()"] 
  "30064771083" -> "30064771082"  [ label = "DDG: cudnn.handle()"] 
  "30064771083" -> "30064771082"  [ label = "DDG: input_nd.handle()"] 
  "30064771083" -> "30064771082"  [ label = "DDG: &amp;size_in_bytes"] 
  "30064771083" -> "30064771082"  [ label = "DDG: ToConvForwardAlgo(algorithm_desc)"] 
  "30064771083" -> "30064771082"  [ label = "DDG: filter.handle()"] 
  "30064771083" -> "30064771082"  [ label = "DDG: conv.handle()"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771078" -> "30064771081"  [ label = "DDG: algorithm_desc"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771084" -> "30064771083"  [ label = "DDG: cudnn"] 
  "30064771085" -> "30064771083"  [ label = "DDG: input_nd"] 
  "30064771086" -> "30064771083"  [ label = "DDG: filter"] 
  "30064771087" -> "30064771083"  [ label = "DDG: conv"] 
  "30064771088" -> "30064771083"  [ label = "DDG: output_nd"] 
  "30064771089" -> "30064771083"  [ label = "DDG: algorithm_desc"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "115964116993" -> "30064771084"  [ label = "DDG: cudnn"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "115964116994" -> "30064771085"  [ label = "DDG: input_nd"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "115964116995" -> "30064771086"  [ label = "DDG: filter"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771073" -> "30064771087"  [ label = "DDG: conv"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "115964116997" -> "30064771088"  [ label = "DDG: output_nd"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771078" -> "30064771089"  [ label = "DDG: algorithm_desc"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771072" -> "55834574848"  [ label = "CDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "30064771078"  [ label = "CDG: "] 
  "30064771072" -> "30064771091"  [ label = "CDG: "] 
  "30064771072" -> "30064771092"  [ label = "CDG: "] 
  "30064771072" -> "30064771093"  [ label = "CDG: "] 
  "30064771078" -> "30064771083"  [ label = "CDG: "] 
  "30064771078" -> "30064771084"  [ label = "CDG: "] 
  "30064771078" -> "30064771081"  [ label = "CDG: "] 
  "30064771078" -> "30064771082"  [ label = "CDG: "] 
  "30064771078" -> "30064771087"  [ label = "CDG: "] 
  "30064771078" -> "30064771088"  [ label = "CDG: "] 
  "30064771078" -> "30064771085"  [ label = "CDG: "] 
  "30064771078" -> "30064771086"  [ label = "CDG: "] 
  "30064771078" -> "30064771079"  [ label = "CDG: "] 
  "30064771078" -> "30064771080"  [ label = "CDG: "] 
  "30064771078" -> "30064771089"  [ label = "CDG: "] 
  "30064771078" -> "30064771090"  [ label = "CDG: "] 
  "30064771092" -> "55834574849"  [ label = "CDG: "] 
  "30064771092" -> "146028888065"  [ label = "CDG: "] 
  "30064771092" -> "30064771097"  [ label = "CDG: "] 
  "30064771092" -> "30064771095"  [ label = "CDG: "] 
  "30064771092" -> "30064771096"  [ label = "CDG: "] 
  "30064771092" -> "30064771094"  [ label = "CDG: "] 
  "30064771097" -> "146028888066"  [ label = "CDG: "] 
  "30064771097" -> "30064771099"  [ label = "CDG: "] 
  "30064771097" -> "30064771100"  [ label = "CDG: "] 
  "30064771097" -> "30064771098"  [ label = "CDG: "] 
  "30064771099" -> "55834574850"  [ label = "CDG: "] 
  "30064771099" -> "146028888068"  [ label = "CDG: "] 
  "30064771099" -> "146028888067"  [ label = "CDG: "] 
  "30064771099" -> "30064771103"  [ label = "CDG: "] 
  "30064771099" -> "30064771104"  [ label = "CDG: "] 
  "30064771099" -> "30064771101"  [ label = "CDG: "] 
  "30064771099" -> "30064771102"  [ label = "CDG: "] 
}
"""
)
