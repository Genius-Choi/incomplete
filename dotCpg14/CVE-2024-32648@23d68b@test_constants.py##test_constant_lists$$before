[33mval[0m [36mres236[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_constant_lists" {  
"111669149697" [label = <(METHOD,test_constant_lists)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,code = &quot;&quot;&quot;
BYTE32_LIST: constant(bytes32[2]) = ...)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,code,code = &quot;&quot;&quot;
BYTE32_LIST: constant(bytes32[2]) = ...)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;&quot;&quot;
BYTE32_LIST: constant(bytes32[2]) = [
    0...,code = &quot;&quot;&quot;
BYTE32_LIST: constant(bytes32[2]) = ...)<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,c = get_contract(code))<SUB>21</SUB>> ]
"68719476740" [label = <(IDENTIFIER,c,c = get_contract(code))<SUB>21</SUB>> ]
"30064771073" [label = <(get_contract,get_contract(code))<SUB>21</SUB>> ]
"68719476739" [label = <(IDENTIFIER,get_contract,get_contract(code))<SUB>21</SUB>> ]
"68719476738" [label = <(IDENTIFIER,code,get_contract(code))<SUB>21</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assert,assert c.test()[-2:] == b&quot;\x11\x23&quot;)<SUB>23</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.equals,c.test()[-2:] == b&quot;\x11\x23&quot;)<SUB>23</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.slice,c.test()[-2:])<SUB>23</SUB>> ]
"30064771076" [label = <(test,c.test())<SUB>23</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,c.test)<SUB>23</SUB>> ]
"68719476741" [label = <(IDENTIFIER,c,c.test())<SUB>23</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,test,test)<SUB>23</SUB>> ]
"68719476742" [label = <(IDENTIFIER,c,c.test())<SUB>23</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.minus,-2)<SUB>23</SUB>> ]
"90194313217" [label = <(LITERAL,2,-2)<SUB>23</SUB>> ]
"90194313218" [label = <(LITERAL,None,c.test()[-2:])<SUB>-1</SUB>> ]
"90194313219" [label = <(LITERAL,None,c.test()[-2:])<SUB>-1</SUB>> ]
"90194313220" [label = <(LITERAL,b&quot;\x11\x23&quot;,c.test()[-2:] == b&quot;\x11\x23&quot;)<SUB>23</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assert,assert c.contains(55) is True)<SUB>25</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.is,c.contains(55) is True)<SUB>25</SUB>> ]
"30064771082" [label = <(contains,c.contains(55))<SUB>25</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,c.contains)<SUB>25</SUB>> ]
"68719476743" [label = <(IDENTIFIER,c,c.contains(55))<SUB>25</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,contains,contains)<SUB>25</SUB>> ]
"68719476744" [label = <(IDENTIFIER,c,c.contains(55))<SUB>25</SUB>> ]
"90194313221" [label = <(LITERAL,55,c.contains(55))<SUB>25</SUB>> ]
"90194313222" [label = <(LITERAL,True,c.contains(55) is True)<SUB>25</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assert,assert c.contains(44) is True)<SUB>26</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.is,c.contains(44) is True)<SUB>26</SUB>> ]
"30064771086" [label = <(contains,c.contains(44))<SUB>26</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.fieldAccess,c.contains)<SUB>26</SUB>> ]
"68719476745" [label = <(IDENTIFIER,c,c.contains(44))<SUB>26</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,contains,contains)<SUB>26</SUB>> ]
"68719476746" [label = <(IDENTIFIER,c,c.contains(44))<SUB>26</SUB>> ]
"90194313223" [label = <(LITERAL,44,c.contains(44))<SUB>26</SUB>> ]
"90194313224" [label = <(LITERAL,True,c.contains(44) is True)<SUB>26</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.assert,assert c.contains(33) is True)<SUB>27</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.is,c.contains(33) is True)<SUB>27</SUB>> ]
"30064771090" [label = <(contains,c.contains(33))<SUB>27</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.fieldAccess,c.contains)<SUB>27</SUB>> ]
"68719476747" [label = <(IDENTIFIER,c,c.contains(33))<SUB>27</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,contains,contains)<SUB>27</SUB>> ]
"68719476748" [label = <(IDENTIFIER,c,c.contains(33))<SUB>27</SUB>> ]
"90194313225" [label = <(LITERAL,33,c.contains(33))<SUB>27</SUB>> ]
"90194313226" [label = <(LITERAL,True,c.contains(33) is True)<SUB>27</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assert,assert c.contains(3) is False)<SUB>28</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.is,c.contains(3) is False)<SUB>28</SUB>> ]
"30064771094" [label = <(contains,c.contains(3))<SUB>28</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.fieldAccess,c.contains)<SUB>28</SUB>> ]
"68719476749" [label = <(IDENTIFIER,c,c.contains(3))<SUB>28</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,contains,contains)<SUB>28</SUB>> ]
"68719476750" [label = <(IDENTIFIER,c,c.contains(3))<SUB>28</SUB>> ]
"90194313227" [label = <(LITERAL,3,c.contains(3))<SUB>28</SUB>> ]
"90194313228" [label = <(LITERAL,False,c.contains(3) is False)<SUB>28</SUB>> ]
"94489280513" [label = <(LOCAL,code: __builtin.str)<SUB>2</SUB>> ]
"94489280514" [label = <(LOCAL,c: get_contract.&lt;returnValue&gt;)<SUB>21</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,get_contract)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "30064771088"  [ label = "AST: "] 
  "25769803777" -> "30064771092"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "30064771074" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476739"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771078"  [ label = "AST: "] 
  "30064771079" -> "90194313220"  [ label = "AST: "] 
  "30064771078" -> "30064771076"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771078" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "90194313219"  [ label = "AST: "] 
  "30064771076" -> "30064771075"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "30064771075" -> "55834574848"  [ label = "AST: "] 
  "30064771077" -> "90194313217"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771083" -> "90194313222"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "90194313221"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "55834574849"  [ label = "AST: "] 
  "30064771088" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771087" -> "90194313224"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "68719476746"  [ label = "AST: "] 
  "30064771086" -> "90194313223"  [ label = "AST: "] 
  "30064771085" -> "68719476745"  [ label = "AST: "] 
  "30064771085" -> "55834574850"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "30064771090"  [ label = "AST: "] 
  "30064771091" -> "90194313226"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771090" -> "68719476748"  [ label = "AST: "] 
  "30064771090" -> "90194313225"  [ label = "AST: "] 
  "30064771089" -> "68719476747"  [ label = "AST: "] 
  "30064771089" -> "55834574851"  [ label = "AST: "] 
  "30064771096" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "30064771094"  [ label = "AST: "] 
  "30064771095" -> "90194313228"  [ label = "AST: "] 
  "30064771094" -> "30064771093"  [ label = "AST: "] 
  "30064771094" -> "68719476750"  [ label = "AST: "] 
  "30064771094" -> "90194313227"  [ label = "AST: "] 
  "30064771093" -> "68719476749"  [ label = "AST: "] 
  "30064771093" -> "55834574852"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771074" -> "55834574848"  [ label = "CFG: "] 
  "30064771080" -> "55834574849"  [ label = "CFG: "] 
  "30064771084" -> "55834574850"  [ label = "CFG: "] 
  "30064771088" -> "55834574851"  [ label = "CFG: "] 
  "30064771092" -> "55834574852"  [ label = "CFG: "] 
  "30064771096" -> "128849018881"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "30064771096"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "55834574849" -> "30064771081"  [ label = "CFG: "] 
  "55834574850" -> "30064771085"  [ label = "CFG: "] 
  "55834574851" -> "30064771089"  [ label = "CFG: "] 
  "55834574852" -> "30064771093"  [ label = "CFG: "] 
  "55834574848" -> "30064771075"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "115964116992" -> "128849018881"  [ label = "DDG: get_contract"] 
  "30064771072" -> "128849018881"  [ label = "DDG: code = &quot;&quot;&quot;
BYTE32_LIST: constant(bytes32[2]) = [
    0x0000000000000000000000000000000000000000000000000000000000001321,
    0x0000000000000000000000000000000000000000000000000000000000001123
]

SPECIAL: constant(int128[3]) = [33, 44, 55]

@external
def test() -&gt; bytes32:
    a: bytes32[2] = BYTE32_LIST
    return a[1]

@view
@external
def contains(a: int128) -&gt; bool:
    return a in SPECIAL
    &quot;&quot;&quot;"] 
  "30064771073" -> "128849018881"  [ label = "DDG: code"] 
  "30064771074" -> "128849018881"  [ label = "DDG: get_contract(code)"] 
  "30064771074" -> "128849018881"  [ label = "DDG: c = get_contract(code)"] 
  "30064771078" -> "128849018881"  [ label = "DDG: c.test()"] 
  "30064771078" -> "128849018881"  [ label = "DDG: -2"] 
  "30064771079" -> "128849018881"  [ label = "DDG: c.test()[-2:]"] 
  "30064771080" -> "128849018881"  [ label = "DDG: c.test()[-2:] == b&quot;\x11\x23&quot;"] 
  "30064771080" -> "128849018881"  [ label = "DDG: assert c.test()[-2:] == b&quot;\x11\x23&quot;"] 
  "30064771083" -> "128849018881"  [ label = "DDG: c.contains(55)"] 
  "30064771084" -> "128849018881"  [ label = "DDG: c.contains(55) is True"] 
  "30064771084" -> "128849018881"  [ label = "DDG: assert c.contains(55) is True"] 
  "30064771087" -> "128849018881"  [ label = "DDG: c.contains(44)"] 
  "30064771088" -> "128849018881"  [ label = "DDG: c.contains(44) is True"] 
  "30064771088" -> "128849018881"  [ label = "DDG: assert c.contains(44) is True"] 
  "30064771091" -> "128849018881"  [ label = "DDG: c.contains(33)"] 
  "30064771092" -> "128849018881"  [ label = "DDG: c.contains(33) is True"] 
  "30064771092" -> "128849018881"  [ label = "DDG: assert c.contains(33) is True"] 
  "30064771094" -> "128849018881"  [ label = "DDG: c"] 
  "30064771095" -> "128849018881"  [ label = "DDG: c.contains(3)"] 
  "30064771096" -> "128849018881"  [ label = "DDG: c.contains(3) is False"] 
  "30064771096" -> "128849018881"  [ label = "DDG: assert c.contains(3) is False"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771073" -> "30064771074"  [ label = "DDG: code"] 
  "30064771079" -> "30064771080"  [ label = "DDG: c.test()[-2:]"] 
  "30064771079" -> "30064771080"  [ label = "DDG: b&quot;\x11\x23&quot;"] 
  "30064771083" -> "30064771084"  [ label = "DDG: c.contains(55)"] 
  "30064771083" -> "30064771084"  [ label = "DDG: True"] 
  "30064771087" -> "30064771088"  [ label = "DDG: c.contains(44)"] 
  "30064771087" -> "30064771088"  [ label = "DDG: True"] 
  "30064771091" -> "30064771092"  [ label = "DDG: c.contains(33)"] 
  "30064771091" -> "30064771092"  [ label = "DDG: True"] 
  "30064771095" -> "30064771096"  [ label = "DDG: c.contains(3)"] 
  "30064771095" -> "30064771096"  [ label = "DDG: False"] 
  "111669149697" -> "68719476739"  [ label = "DDG: "] 
  "30064771072" -> "30064771073"  [ label = "DDG: code"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771078" -> "30064771079"  [ label = "DDG: c.test()"] 
  "30064771078" -> "30064771079"  [ label = "DDG: -2"] 
  "30064771078" -> "30064771079"  [ label = "DDG: None"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771082" -> "30064771083"  [ label = "DDG: c"] 
  "30064771082" -> "30064771083"  [ label = "DDG: 55"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771086" -> "30064771087"  [ label = "DDG: c"] 
  "30064771086" -> "30064771087"  [ label = "DDG: 44"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771090" -> "30064771091"  [ label = "DDG: c"] 
  "30064771090" -> "30064771091"  [ label = "DDG: 33"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771094" -> "30064771095"  [ label = "DDG: c"] 
  "30064771094" -> "30064771095"  [ label = "DDG: 3"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771076" -> "30064771078"  [ label = "DDG: c"] 
  "30064771077" -> "30064771078"  [ label = "DDG: 2"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771076" -> "30064771082"  [ label = "DDG: c"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771082" -> "30064771086"  [ label = "DDG: c"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771086" -> "30064771090"  [ label = "DDG: c"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771090" -> "30064771094"  [ label = "DDG: c"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771074" -> "30064771076"  [ label = "DDG: c"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
}
"""
)
