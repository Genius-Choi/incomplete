[33mval[0m [36mres1120[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "BuildFeatureReaders" {  
"111669149697" [label = <(METHOD,BuildFeatureReaders)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const OpInputList&amp; ragged_values_list)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const OpInputList&amp; ragged_splits_list)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,const OpInputList&amp; sparse_indices_list)<SUB>3</SUB>> ]
"115964116995" [label = <(PARAM,const OpInputList&amp; sparse_values_list)<SUB>4</SUB>> ]
"115964116996" [label = <(PARAM,const OpInputList&amp; dense_list)<SUB>5</SUB>> ]
"115964116997" [label = <(PARAM,int64 batch_size)<SUB>5</SUB>> ]
"115964116998" [label = <(PARAM,FeatureReaders* features)<SUB>6</SUB>> ]
"25769803777" [label = <(BLOCK,{
    features-&gt;reserve(input_order_.size());

...,{
    features-&gt;reserve(input_order_.size());

...)<SUB>6</SUB>> ]
"30064771072" [label = <(reserve,features-&gt;reserve(input_order_.size()))<SUB>7</SUB>> ]
"68719476736" [label = <(IDENTIFIER,features,features-&gt;reserve(input_order_.size()))<SUB>7</SUB>> ]
"30064771073" [label = <(size,input_order_.size())<SUB>7</SUB>> ]
"68719476737" [label = <(IDENTIFIER,input_order_,input_order_.size())<SUB>7</SUB>> ]
"94489280512" [label = <(LOCAL,int next_ragged: int)<SUB>9</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,next_ragged = 0)<SUB>9</SUB>> ]
"68719476738" [label = <(IDENTIFIER,next_ragged,next_ragged = 0)<SUB>9</SUB>> ]
"90194313216" [label = <(LITERAL,0,next_ragged = 0)<SUB>9</SUB>> ]
"94489280513" [label = <(LOCAL,int next_sparse: int)<SUB>10</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,next_sparse = 0)<SUB>10</SUB>> ]
"68719476739" [label = <(IDENTIFIER,next_sparse,next_sparse = 0)<SUB>10</SUB>> ]
"90194313217" [label = <(LITERAL,0,next_sparse = 0)<SUB>10</SUB>> ]
"94489280514" [label = <(LOCAL,int next_dense: int)<SUB>11</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,next_dense = 0)<SUB>11</SUB>> ]
"68719476740" [label = <(IDENTIFIER,next_dense,next_dense = 0)<SUB>11</SUB>> ]
"90194313218" [label = <(LITERAL,0,next_dense = 0)<SUB>11</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (char c:input_order_))<SUB>12</SUB>> ]
"68719476741" [label = <(IDENTIFIER,input_order_,for (char c:input_order_))<SUB>12</SUB>> ]
"94489280515" [label = <(LOCAL,char c: char)<SUB>12</SUB>> ]
"25769803778" [label = <(BLOCK,{
      if (c == 'R') {
        if (next_ragged...,{
      if (c == 'R') {
        if (next_ragged...)<SUB>12</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (c == 'R'))<SUB>13</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.equals,c == 'R')<SUB>13</SUB>> ]
"68719476742" [label = <(IDENTIFIER,c,c == 'R')<SUB>13</SUB>> ]
"90194313219" [label = <(LITERAL,'R',c == 'R')<SUB>13</SUB>> ]
"25769803779" [label = <(BLOCK,{
        if (next_ragged &gt;= ragged_values_list...,{
        if (next_ragged &gt;= ragged_values_list...)<SUB>13</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (next_ragged &gt;= ragged_values_list.size()))<SUB>14</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.greaterEqualsThan,next_ragged &gt;= ragged_values_list.size())<SUB>14</SUB>> ]
"68719476743" [label = <(IDENTIFIER,next_ragged,next_ragged &gt;= ragged_values_list.size())<SUB>14</SUB>> ]
"30064771079" [label = <(size,ragged_values_list.size())<SUB>14</SUB>> ]
"68719476744" [label = <(IDENTIFIER,ragged_values_list,ragged_values_list.size())<SUB>14</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>> ]
"146028888064" [label = <(RETURN,return errors::InvalidArgument(
              &quot;...,return errors::InvalidArgument(
              &quot;...)<SUB>15</SUB>> ]
"30064771080" [label = <(InvalidArgument,errors::InvalidArgument(
              &quot;input_o...)<SUB>15</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;input_order \&quot;&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>16</SUB>> ]
"68719476745" [label = <(IDENTIFIER,input_order_,errors::InvalidArgument(
              &quot;input_o...)<SUB>16</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;\&quot; specifies reading a ragged tensor value at ...,errors::InvalidArgument(
              &quot;input_o...)<SUB>17</SUB>> ]
"68719476746" [label = <(IDENTIFIER,next_ragged,errors::InvalidArgument(
              &quot;input_o...)<SUB>18</SUB>> ]
"90194313222" [label = <(LITERAL,&quot; from a list of &quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>18</SUB>> ]
"30064771081" [label = <(size,ragged_values_list.size())<SUB>18</SUB>> ]
"68719476747" [label = <(IDENTIFIER,ragged_values_list,ragged_values_list.size())<SUB>18</SUB>> ]
"90194313223" [label = <(LITERAL,&quot; values.&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>19</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (next_ragged &gt;= ragged_splits_list.size()))<SUB>20</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.greaterEqualsThan,next_ragged &gt;= ragged_splits_list.size())<SUB>20</SUB>> ]
"68719476748" [label = <(IDENTIFIER,next_ragged,next_ragged &gt;= ragged_splits_list.size())<SUB>20</SUB>> ]
"30064771083" [label = <(size,ragged_splits_list.size())<SUB>20</SUB>> ]
"68719476749" [label = <(IDENTIFIER,ragged_splits_list,ragged_splits_list.size())<SUB>20</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>> ]
"146028888065" [label = <(RETURN,return errors::InvalidArgument(
              &quot;...,return errors::InvalidArgument(
              &quot;...)<SUB>21</SUB>> ]
"30064771084" [label = <(InvalidArgument,errors::InvalidArgument(
              &quot;input_o...)<SUB>21</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;input_order \&quot;&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>22</SUB>> ]
"68719476750" [label = <(IDENTIFIER,input_order_,errors::InvalidArgument(
              &quot;input_o...)<SUB>22</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;\&quot; specifies reading a ragged tensor split at ...,errors::InvalidArgument(
              &quot;input_o...)<SUB>23</SUB>> ]
"68719476751" [label = <(IDENTIFIER,next_ragged,errors::InvalidArgument(
              &quot;input_o...)<SUB>24</SUB>> ]
"90194313226" [label = <(LITERAL,&quot; from a list of &quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>24</SUB>> ]
"30064771085" [label = <(size,ragged_splits_list.size())<SUB>24</SUB>> ]
"68719476752" [label = <(IDENTIFIER,ragged_splits_list,ragged_splits_list.size())<SUB>24</SUB>> ]
"90194313227" [label = <(LITERAL,&quot; splits.&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>25</SUB>> ]
"30064771086" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(BuildRaggedFeatureReader(
  ...)<SUB>26</SUB>> ]
"30064771087" [label = <(BuildRaggedFeatureReader,BuildRaggedFeatureReader(
            ragged_va...)<SUB>26</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.indirectIndexAccess,ragged_values_list[next_ragged])<SUB>27</SUB>> ]
"68719476753" [label = <(IDENTIFIER,ragged_values_list,BuildRaggedFeatureReader(
            ragged_va...)<SUB>27</SUB>> ]
"68719476754" [label = <(IDENTIFIER,next_ragged,BuildRaggedFeatureReader(
            ragged_va...)<SUB>27</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.indirectIndexAccess,ragged_splits_list[next_ragged])<SUB>27</SUB>> ]
"68719476755" [label = <(IDENTIFIER,ragged_splits_list,BuildRaggedFeatureReader(
            ragged_va...)<SUB>27</SUB>> ]
"68719476756" [label = <(IDENTIFIER,next_ragged,BuildRaggedFeatureReader(
            ragged_va...)<SUB>27</SUB>> ]
"68719476757" [label = <(IDENTIFIER,features,BuildRaggedFeatureReader(
            ragged_va...)<SUB>28</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.postIncrement,next_ragged++)<SUB>29</SUB>> ]
"68719476758" [label = <(IDENTIFIER,next_ragged,next_ragged++)<SUB>29</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>30</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (c == 'S'))<SUB>30</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.equals,c == 'S')<SUB>30</SUB>> ]
"68719476759" [label = <(IDENTIFIER,c,c == 'S')<SUB>30</SUB>> ]
"90194313228" [label = <(LITERAL,'S',c == 'S')<SUB>30</SUB>> ]
"25769803783" [label = <(BLOCK,{
        if (next_sparse &gt;= sparse_values_list...,{
        if (next_sparse &gt;= sparse_values_list...)<SUB>30</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (next_sparse &gt;= sparse_values_list.size()))<SUB>31</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.greaterEqualsThan,next_sparse &gt;= sparse_values_list.size())<SUB>31</SUB>> ]
"68719476760" [label = <(IDENTIFIER,next_sparse,next_sparse &gt;= sparse_values_list.size())<SUB>31</SUB>> ]
"30064771093" [label = <(size,sparse_values_list.size())<SUB>31</SUB>> ]
"68719476761" [label = <(IDENTIFIER,sparse_values_list,sparse_values_list.size())<SUB>31</SUB>> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>> ]
"146028888066" [label = <(RETURN,return errors::InvalidArgument(
              &quot;...,return errors::InvalidArgument(
              &quot;...)<SUB>32</SUB>> ]
"30064771094" [label = <(InvalidArgument,errors::InvalidArgument(
              &quot;input_o...)<SUB>32</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;input_order \&quot;&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>33</SUB>> ]
"68719476762" [label = <(IDENTIFIER,input_order_,errors::InvalidArgument(
              &quot;input_o...)<SUB>33</SUB>> ]
"90194313230" [label = <(LITERAL,&quot;\&quot; specifies reading a sparse tensor value at ...,errors::InvalidArgument(
              &quot;input_o...)<SUB>34</SUB>> ]
"68719476763" [label = <(IDENTIFIER,next_sparse,errors::InvalidArgument(
              &quot;input_o...)<SUB>35</SUB>> ]
"90194313231" [label = <(LITERAL,&quot; from a list of &quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>35</SUB>> ]
"30064771095" [label = <(size,sparse_values_list.size())<SUB>35</SUB>> ]
"68719476764" [label = <(IDENTIFIER,sparse_values_list,sparse_values_list.size())<SUB>35</SUB>> ]
"90194313232" [label = <(LITERAL,&quot; values.&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>36</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (next_sparse &gt;= sparse_indices_list.size()))<SUB>37</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.greaterEqualsThan,next_sparse &gt;= sparse_indices_list.size())<SUB>37</SUB>> ]
"68719476765" [label = <(IDENTIFIER,next_sparse,next_sparse &gt;= sparse_indices_list.size())<SUB>37</SUB>> ]
"30064771097" [label = <(size,sparse_indices_list.size())<SUB>37</SUB>> ]
"68719476766" [label = <(IDENTIFIER,sparse_indices_list,sparse_indices_list.size())<SUB>37</SUB>> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>> ]
"146028888067" [label = <(RETURN,return errors::InvalidArgument(
              &quot;...,return errors::InvalidArgument(
              &quot;...)<SUB>38</SUB>> ]
"30064771098" [label = <(InvalidArgument,errors::InvalidArgument(
              &quot;input_o...)<SUB>38</SUB>> ]
"90194313233" [label = <(LITERAL,&quot;input_order \&quot;&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>39</SUB>> ]
"68719476767" [label = <(IDENTIFIER,input_order_,errors::InvalidArgument(
              &quot;input_o...)<SUB>39</SUB>> ]
"90194313234" [label = <(LITERAL,&quot;\&quot; specifies reading a sparse tensor index at ...,errors::InvalidArgument(
              &quot;input_o...)<SUB>40</SUB>> ]
"68719476768" [label = <(IDENTIFIER,next_sparse,errors::InvalidArgument(
              &quot;input_o...)<SUB>41</SUB>> ]
"90194313235" [label = <(LITERAL,&quot; from a list of &quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>41</SUB>> ]
"30064771099" [label = <(size,sparse_indices_list.size())<SUB>41</SUB>> ]
"68719476769" [label = <(IDENTIFIER,sparse_indices_list,sparse_indices_list.size())<SUB>41</SUB>> ]
"90194313236" [label = <(LITERAL,&quot; indices.&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>42</SUB>> ]
"30064771100" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(BuildSparseFeatureReader(
  ...)<SUB>43</SUB>> ]
"30064771101" [label = <(BuildSparseFeatureReader,BuildSparseFeatureReader(
            sparse_in...)<SUB>43</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.indirectIndexAccess,sparse_indices_list[next_sparse])<SUB>44</SUB>> ]
"68719476770" [label = <(IDENTIFIER,sparse_indices_list,BuildSparseFeatureReader(
            sparse_in...)<SUB>44</SUB>> ]
"68719476771" [label = <(IDENTIFIER,next_sparse,BuildSparseFeatureReader(
            sparse_in...)<SUB>44</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.indirectIndexAccess,sparse_values_list[next_sparse])<SUB>44</SUB>> ]
"68719476772" [label = <(IDENTIFIER,sparse_values_list,BuildSparseFeatureReader(
            sparse_in...)<SUB>44</SUB>> ]
"68719476773" [label = <(IDENTIFIER,next_sparse,BuildSparseFeatureReader(
            sparse_in...)<SUB>44</SUB>> ]
"68719476774" [label = <(IDENTIFIER,batch_size,BuildSparseFeatureReader(
            sparse_in...)<SUB>45</SUB>> ]
"68719476775" [label = <(IDENTIFIER,features,BuildSparseFeatureReader(
            sparse_in...)<SUB>45</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.postIncrement,next_sparse++)<SUB>46</SUB>> ]
"68719476776" [label = <(IDENTIFIER,next_sparse,next_sparse++)<SUB>46</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>47</SUB>> ]
"25769803786" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,IF,if (c == 'D'))<SUB>47</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.equals,c == 'D')<SUB>47</SUB>> ]
"68719476777" [label = <(IDENTIFIER,c,c == 'D')<SUB>47</SUB>> ]
"90194313237" [label = <(LITERAL,'D',c == 'D')<SUB>47</SUB>> ]
"25769803787" [label = <(BLOCK,{
        if (next_dense &gt;= dense_list.size())
...,{
        if (next_dense &gt;= dense_list.size())
...)<SUB>47</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,IF,if (next_dense &gt;= dense_list.size()))<SUB>48</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.greaterEqualsThan,next_dense &gt;= dense_list.size())<SUB>48</SUB>> ]
"68719476778" [label = <(IDENTIFIER,next_dense,next_dense &gt;= dense_list.size())<SUB>48</SUB>> ]
"30064771107" [label = <(size,dense_list.size())<SUB>48</SUB>> ]
"68719476779" [label = <(IDENTIFIER,dense_list,dense_list.size())<SUB>48</SUB>> ]
"25769803788" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>> ]
"146028888068" [label = <(RETURN,return errors::InvalidArgument(
              &quot;...,return errors::InvalidArgument(
              &quot;...)<SUB>49</SUB>> ]
"30064771108" [label = <(InvalidArgument,errors::InvalidArgument(
              &quot;input_o...)<SUB>49</SUB>> ]
"90194313238" [label = <(LITERAL,&quot;input_order \&quot;&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>50</SUB>> ]
"68719476780" [label = <(IDENTIFIER,input_order_,errors::InvalidArgument(
              &quot;input_o...)<SUB>50</SUB>> ]
"90194313239" [label = <(LITERAL,&quot;\&quot; specifies reading a dense tensor at index &quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>51</SUB>> ]
"68719476781" [label = <(IDENTIFIER,next_dense,errors::InvalidArgument(
              &quot;input_o...)<SUB>51</SUB>> ]
"90194313240" [label = <(LITERAL,&quot; from a list of &quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>52</SUB>> ]
"30064771109" [label = <(size,dense_list.size())<SUB>52</SUB>> ]
"68719476782" [label = <(IDENTIFIER,dense_list,dense_list.size())<SUB>52</SUB>> ]
"90194313241" [label = <(LITERAL,&quot; tensors.&quot;,errors::InvalidArgument(
              &quot;input_o...)<SUB>52</SUB>> ]
"30064771110" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(
            BuildDenseFeatu...)<SUB>53</SUB>> ]
"30064771111" [label = <(BuildDenseFeatureReader,BuildDenseFeatureReader(dense_list[next_dense++...)<SUB>54</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.indirectIndexAccess,dense_list[next_dense++])<SUB>54</SUB>> ]
"68719476783" [label = <(IDENTIFIER,dense_list,BuildDenseFeatureReader(dense_list[next_dense++...)<SUB>54</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.postIncrement,next_dense++)<SUB>54</SUB>> ]
"68719476784" [label = <(IDENTIFIER,next_dense,next_dense++)<SUB>54</SUB>> ]
"68719476785" [label = <(IDENTIFIER,features,BuildDenseFeatureReader(dense_list[next_dense++...)<SUB>54</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>55</SUB>> ]
"25769803789" [label = <(BLOCK,{
        return errors::InvalidArgument(&quot;Unexp...,{
        return errors::InvalidArgument(&quot;Unexp...)<SUB>55</SUB>> ]
"146028888069" [label = <(RETURN,return errors::InvalidArgument(&quot;Unexpected inpu...,return errors::InvalidArgument(&quot;Unexpected inpu...)<SUB>56</SUB>> ]
"30064771114" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Unexpected input_order...)<SUB>56</SUB>> ]
"90194313242" [label = <(LITERAL,&quot;Unexpected input_order value.&quot;,errors::InvalidArgument(&quot;Unexpected input_order...)<SUB>56</SUB>> ]
"146028888070" [label = <(RETURN,return Status::OK();,return Status::OK();)<SUB>60</SUB>> ]
"30064771115" [label = <(OK,Status::OK())<SUB>60</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "115964116998"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888070"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "90194313218"  [ label = "AST: "] 
  "47244640256" -> "68719476741"  [ label = "AST: "] 
  "47244640256" -> "94489280515"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "30064771077"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "47244640260"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "90194313219"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "25769803779" -> "47244640259"  [ label = "AST: "] 
  "25769803779" -> "30064771086"  [ label = "AST: "] 
  "25769803779" -> "30064771090"  [ label = "AST: "] 
  "47244640258" -> "30064771078"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "25769803780" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "90194313220"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "90194313221"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "30064771080" -> "90194313222"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "90194313223"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "47244640259" -> "30064771082"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771082" -> "68719476748"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476749"  [ label = "AST: "] 
  "25769803781" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "90194313224"  [ label = "AST: "] 
  "30064771084" -> "68719476750"  [ label = "AST: "] 
  "30064771084" -> "90194313225"  [ label = "AST: "] 
  "30064771084" -> "68719476751"  [ label = "AST: "] 
  "30064771084" -> "90194313226"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "90194313227"  [ label = "AST: "] 
  "30064771085" -> "68719476752"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "30064771089"  [ label = "AST: "] 
  "30064771087" -> "68719476757"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "30064771088" -> "68719476754"  [ label = "AST: "] 
  "30064771089" -> "68719476755"  [ label = "AST: "] 
  "30064771089" -> "68719476756"  [ label = "AST: "] 
  "30064771090" -> "68719476758"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "47244640261"  [ label = "AST: "] 
  "47244640261" -> "30064771091"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "47244640261" -> "47244640264"  [ label = "AST: "] 
  "30064771091" -> "68719476759"  [ label = "AST: "] 
  "30064771091" -> "90194313228"  [ label = "AST: "] 
  "25769803783" -> "47244640262"  [ label = "AST: "] 
  "25769803783" -> "47244640263"  [ label = "AST: "] 
  "25769803783" -> "30064771100"  [ label = "AST: "] 
  "25769803783" -> "30064771104"  [ label = "AST: "] 
  "47244640262" -> "30064771092"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "30064771092" -> "68719476760"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476761"  [ label = "AST: "] 
  "25769803784" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "90194313229"  [ label = "AST: "] 
  "30064771094" -> "68719476762"  [ label = "AST: "] 
  "30064771094" -> "90194313230"  [ label = "AST: "] 
  "30064771094" -> "68719476763"  [ label = "AST: "] 
  "30064771094" -> "90194313231"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "90194313232"  [ label = "AST: "] 
  "30064771095" -> "68719476764"  [ label = "AST: "] 
  "47244640263" -> "30064771096"  [ label = "AST: "] 
  "47244640263" -> "25769803785"  [ label = "AST: "] 
  "30064771096" -> "68719476765"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476766"  [ label = "AST: "] 
  "25769803785" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "90194313233"  [ label = "AST: "] 
  "30064771098" -> "68719476767"  [ label = "AST: "] 
  "30064771098" -> "90194313234"  [ label = "AST: "] 
  "30064771098" -> "68719476768"  [ label = "AST: "] 
  "30064771098" -> "90194313235"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "90194313236"  [ label = "AST: "] 
  "30064771099" -> "68719476769"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "30064771103"  [ label = "AST: "] 
  "30064771101" -> "68719476774"  [ label = "AST: "] 
  "30064771101" -> "68719476775"  [ label = "AST: "] 
  "30064771102" -> "68719476770"  [ label = "AST: "] 
  "30064771102" -> "68719476771"  [ label = "AST: "] 
  "30064771103" -> "68719476772"  [ label = "AST: "] 
  "30064771103" -> "68719476773"  [ label = "AST: "] 
  "30064771104" -> "68719476776"  [ label = "AST: "] 
  "47244640264" -> "25769803786"  [ label = "AST: "] 
  "25769803786" -> "47244640265"  [ label = "AST: "] 
  "47244640265" -> "30064771105"  [ label = "AST: "] 
  "47244640265" -> "25769803787"  [ label = "AST: "] 
  "47244640265" -> "47244640267"  [ label = "AST: "] 
  "30064771105" -> "68719476777"  [ label = "AST: "] 
  "30064771105" -> "90194313237"  [ label = "AST: "] 
  "25769803787" -> "47244640266"  [ label = "AST: "] 
  "25769803787" -> "30064771110"  [ label = "AST: "] 
  "47244640266" -> "30064771106"  [ label = "AST: "] 
  "47244640266" -> "25769803788"  [ label = "AST: "] 
  "30064771106" -> "68719476778"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "68719476779"  [ label = "AST: "] 
  "25769803788" -> "146028888068"  [ label = "AST: "] 
  "146028888068" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "90194313238"  [ label = "AST: "] 
  "30064771108" -> "68719476780"  [ label = "AST: "] 
  "30064771108" -> "90194313239"  [ label = "AST: "] 
  "30064771108" -> "68719476781"  [ label = "AST: "] 
  "30064771108" -> "90194313240"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771108" -> "90194313241"  [ label = "AST: "] 
  "30064771109" -> "68719476782"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "68719476785"  [ label = "AST: "] 
  "30064771112" -> "68719476783"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476784"  [ label = "AST: "] 
  "47244640267" -> "25769803789"  [ label = "AST: "] 
  "25769803789" -> "146028888069"  [ label = "AST: "] 
  "146028888069" -> "30064771114"  [ label = "AST: "] 
  "30064771114" -> "90194313242"  [ label = "AST: "] 
  "146028888070" -> "30064771115"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "146028888070" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771115" -> "146028888070"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771077" -> "30064771091"  [ label = "CFG: "] 
  "30064771086" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771115"  [ label = "CFG: "] 
  "30064771090" -> "30064771077"  [ label = "CFG: "] 
  "30064771078" -> "30064771081"  [ label = "CFG: "] 
  "30064771078" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771085"  [ label = "CFG: "] 
  "30064771082" -> "30064771088"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "30064771087"  [ label = "CFG: "] 
  "30064771091" -> "30064771093"  [ label = "CFG: "] 
  "30064771091" -> "30064771105"  [ label = "CFG: "] 
  "30064771080" -> "146028888064"  [ label = "CFG: "] 
  "30064771084" -> "146028888065"  [ label = "CFG: "] 
  "30064771100" -> "30064771104"  [ label = "CFG: "] 
  "30064771104" -> "30064771115"  [ label = "CFG: "] 
  "30064771104" -> "30064771077"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771092" -> "30064771095"  [ label = "CFG: "] 
  "30064771092" -> "30064771097"  [ label = "CFG: "] 
  "30064771096" -> "30064771099"  [ label = "CFG: "] 
  "30064771096" -> "30064771102"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771103" -> "30064771101"  [ label = "CFG: "] 
  "30064771105" -> "30064771107"  [ label = "CFG: "] 
  "30064771105" -> "30064771114"  [ label = "CFG: "] 
  "30064771094" -> "146028888066"  [ label = "CFG: "] 
  "30064771098" -> "146028888067"  [ label = "CFG: "] 
  "30064771110" -> "30064771115"  [ label = "CFG: "] 
  "30064771110" -> "30064771077"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771106" -> "30064771109"  [ label = "CFG: "] 
  "30064771106" -> "30064771113"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "146028888069" -> "128849018880"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771114" -> "146028888069"  [ label = "CFG: "] 
  "30064771108" -> "146028888068"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888070" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888069" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: ragged_splits_list"] 
  "115964116994" -> "128849018880"  [ label = "DDG: sparse_indices_list"] 
  "115964116995" -> "128849018880"  [ label = "DDG: sparse_values_list"] 
  "115964116996" -> "128849018880"  [ label = "DDG: dense_list"] 
  "115964116997" -> "128849018880"  [ label = "DDG: batch_size"] 
  "30064771072" -> "128849018880"  [ label = "DDG: features"] 
  "30064771072" -> "128849018880"  [ label = "DDG: input_order_.size()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: features-&gt;reserve(input_order_.size())"] 
  "30064771074" -> "128849018880"  [ label = "DDG: next_ragged = 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: next_sparse"] 
  "30064771075" -> "128849018880"  [ label = "DDG: next_sparse = 0"] 
  "30064771076" -> "128849018880"  [ label = "DDG: next_dense"] 
  "30064771076" -> "128849018880"  [ label = "DDG: next_dense = 0"] 
  "30064771077" -> "128849018880"  [ label = "DDG: c"] 
  "30064771077" -> "128849018880"  [ label = "DDG: c == 'R'"] 
  "30064771091" -> "128849018880"  [ label = "DDG: c == 'S'"] 
  "30064771105" -> "128849018880"  [ label = "DDG: c == 'D'"] 
  "30064771107" -> "128849018880"  [ label = "DDG: dense_list"] 
  "30064771106" -> "128849018880"  [ label = "DDG: dense_list.size()"] 
  "30064771106" -> "128849018880"  [ label = "DDG: next_dense &gt;= dense_list.size()"] 
  "30064771113" -> "128849018880"  [ label = "DDG: next_dense"] 
  "30064771111" -> "128849018880"  [ label = "DDG: dense_list[next_dense++]"] 
  "30064771111" -> "128849018880"  [ label = "DDG: features"] 
  "30064771110" -> "128849018880"  [ label = "DDG: BuildDenseFeatureReader(dense_list[next_dense++], features)"] 
  "30064771110" -> "128849018880"  [ label = "DDG: TF_RETURN_IF_ERROR(
            BuildDenseFeatureReader(dense_list[next_dense++], features))"] 
  "30064771093" -> "128849018880"  [ label = "DDG: sparse_values_list"] 
  "30064771092" -> "128849018880"  [ label = "DDG: sparse_values_list.size()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: next_sparse &gt;= sparse_values_list.size()"] 
  "30064771097" -> "128849018880"  [ label = "DDG: sparse_indices_list"] 
  "30064771096" -> "128849018880"  [ label = "DDG: sparse_indices_list.size()"] 
  "30064771096" -> "128849018880"  [ label = "DDG: next_sparse &gt;= sparse_indices_list.size()"] 
  "30064771101" -> "128849018880"  [ label = "DDG: sparse_indices_list[next_sparse]"] 
  "30064771101" -> "128849018880"  [ label = "DDG: sparse_values_list[next_sparse]"] 
  "30064771101" -> "128849018880"  [ label = "DDG: batch_size"] 
  "30064771101" -> "128849018880"  [ label = "DDG: features"] 
  "30064771100" -> "128849018880"  [ label = "DDG: BuildSparseFeatureReader(
            sparse_indices_list[next_sparse], sparse_values_list[next_sparse],
            batch_size, features)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: TF_RETURN_IF_ERROR(BuildSparseFeatureReader(
            sparse_indices_list[next_sparse], sparse_values_list[next_sparse],
            batch_size, features))"] 
  "30064771104" -> "128849018880"  [ label = "DDG: next_sparse"] 
  "30064771104" -> "128849018880"  [ label = "DDG: next_sparse++"] 
  "30064771078" -> "128849018880"  [ label = "DDG: next_ragged &gt;= ragged_values_list.size()"] 
  "30064771083" -> "128849018880"  [ label = "DDG: ragged_splits_list"] 
  "30064771082" -> "128849018880"  [ label = "DDG: ragged_splits_list.size()"] 
  "30064771082" -> "128849018880"  [ label = "DDG: next_ragged &gt;= ragged_splits_list.size()"] 
  "30064771087" -> "128849018880"  [ label = "DDG: ragged_values_list[next_ragged]"] 
  "30064771087" -> "128849018880"  [ label = "DDG: ragged_splits_list[next_ragged]"] 
  "30064771087" -> "128849018880"  [ label = "DDG: features"] 
  "30064771086" -> "128849018880"  [ label = "DDG: BuildRaggedFeatureReader(
            ragged_values_list[next_ragged], ragged_splits_list[next_ragged],
            features)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: TF_RETURN_IF_ERROR(BuildRaggedFeatureReader(
            ragged_values_list[next_ragged], ragged_splits_list[next_ragged],
            features))"] 
  "30064771090" -> "128849018880"  [ label = "DDG: next_ragged++"] 
  "30064771080" -> "128849018880"  [ label = "DDG: input_order_"] 
  "30064771080" -> "128849018880"  [ label = "DDG: next_ragged"] 
  "30064771081" -> "128849018880"  [ label = "DDG: ragged_values_list"] 
  "30064771080" -> "128849018880"  [ label = "DDG: ragged_values_list.size()"] 
  "30064771080" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
              &quot;input_order \&quot;&quot;, input_order_,
              &quot;\&quot; specifies reading a ragged tensor value at index &quot;,
              next_ragged, &quot; from a list of &quot;, ragged_values_list.size(),
              &quot; values.&quot;)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "115964116998"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771115" -> "146028888070"  [ label = "DDG: Status::OK()"] 
  "115964116998" -> "30064771072"  [ label = "DDG: features"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: input_order_"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771091" -> "30064771077"  [ label = "DDG: c"] 
  "30064771105" -> "30064771077"  [ label = "DDG: c"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771087" -> "30064771086"  [ label = "DDG: ragged_values_list[next_ragged]"] 
  "30064771087" -> "30064771086"  [ label = "DDG: ragged_splits_list[next_ragged]"] 
  "30064771087" -> "30064771086"  [ label = "DDG: features"] 
  "30064771082" -> "30064771090"  [ label = "DDG: next_ragged"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771074" -> "30064771078"  [ label = "DDG: next_ragged"] 
  "30064771090" -> "30064771078"  [ label = "DDG: next_ragged"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: ragged_values_list"] 
  "30064771080" -> "146028888064"  [ label = "DDG: errors::InvalidArgument(
              &quot;input_order \&quot;&quot;, input_order_,
              &quot;\&quot; specifies reading a ragged tensor value at index &quot;,
              next_ragged, &quot; from a list of &quot;, ragged_values_list.size(),
              &quot; values.&quot;)"] 
  "30064771078" -> "30064771082"  [ label = "DDG: next_ragged"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: ragged_splits_list"] 
  "30064771084" -> "146028888065"  [ label = "DDG: errors::InvalidArgument(
              &quot;input_order \&quot;&quot;, input_order_,
              &quot;\&quot; specifies reading a ragged tensor split at index &quot;,
              next_ragged, &quot; from a list of &quot;, ragged_splits_list.size(),
              &quot; splits.&quot;)"] 
  "30064771079" -> "30064771087"  [ label = "DDG: ragged_values_list"] 
  "30064771083" -> "30064771087"  [ label = "DDG: ragged_splits_list"] 
  "30064771072" -> "30064771087"  [ label = "DDG: features"] 
  "30064771111" -> "30064771087"  [ label = "DDG: features"] 
  "30064771101" -> "30064771087"  [ label = "DDG: features"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "115964116992" -> "30064771079"  [ label = "DDG: ragged_values_list"] 
  "30064771087" -> "30064771079"  [ label = "DDG: ragged_values_list[next_ragged]"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "115964116993" -> "30064771083"  [ label = "DDG: ragged_splits_list"] 
  "30064771087" -> "30064771083"  [ label = "DDG: ragged_splits_list[next_ragged]"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771077" -> "30064771091"  [ label = "DDG: c"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771073" -> "30064771080"  [ label = "DDG: input_order_"] 
  "30064771078" -> "30064771080"  [ label = "DDG: next_ragged"] 
  "30064771081" -> "30064771080"  [ label = "DDG: ragged_values_list"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771073" -> "30064771084"  [ label = "DDG: input_order_"] 
  "30064771082" -> "30064771084"  [ label = "DDG: next_ragged"] 
  "30064771085" -> "30064771084"  [ label = "DDG: ragged_splits_list"] 
  "30064771101" -> "30064771100"  [ label = "DDG: sparse_indices_list[next_sparse]"] 
  "30064771101" -> "30064771100"  [ label = "DDG: sparse_values_list[next_sparse]"] 
  "30064771101" -> "30064771100"  [ label = "DDG: batch_size"] 
  "30064771101" -> "30064771100"  [ label = "DDG: features"] 
  "30064771096" -> "30064771104"  [ label = "DDG: next_sparse"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771079" -> "30064771081"  [ label = "DDG: ragged_values_list"] 
  "30064771087" -> "30064771081"  [ label = "DDG: ragged_values_list[next_ragged]"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771083" -> "30064771085"  [ label = "DDG: ragged_splits_list"] 
  "30064771087" -> "30064771085"  [ label = "DDG: ragged_splits_list[next_ragged]"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771075" -> "30064771092"  [ label = "DDG: next_sparse"] 
  "30064771104" -> "30064771092"  [ label = "DDG: next_sparse"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: sparse_values_list"] 
  "30064771094" -> "146028888066"  [ label = "DDG: errors::InvalidArgument(
              &quot;input_order \&quot;&quot;, input_order_,
              &quot;\&quot; specifies reading a sparse tensor value at index &quot;,
              next_sparse, &quot; from a list of &quot;, sparse_values_list.size(),
              &quot; values.&quot;)"] 
  "30064771092" -> "30064771096"  [ label = "DDG: next_sparse"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771097" -> "30064771096"  [ label = "DDG: sparse_indices_list"] 
  "30064771098" -> "146028888067"  [ label = "DDG: errors::InvalidArgument(
              &quot;input_order \&quot;&quot;, input_order_,
              &quot;\&quot; specifies reading a sparse tensor index at index &quot;,
              next_sparse, &quot; from a list of &quot;, sparse_indices_list.size(),
              &quot; indices.&quot;)"] 
  "30064771097" -> "30064771101"  [ label = "DDG: sparse_indices_list"] 
  "30064771093" -> "30064771101"  [ label = "DDG: sparse_values_list"] 
  "115964116997" -> "30064771101"  [ label = "DDG: batch_size"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771072" -> "30064771101"  [ label = "DDG: features"] 
  "30064771111" -> "30064771101"  [ label = "DDG: features"] 
  "30064771087" -> "30064771101"  [ label = "DDG: features"] 
  "115964116995" -> "30064771093"  [ label = "DDG: sparse_values_list"] 
  "30064771101" -> "30064771093"  [ label = "DDG: sparse_values_list[next_sparse]"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "115964116994" -> "30064771097"  [ label = "DDG: sparse_indices_list"] 
  "30064771101" -> "30064771097"  [ label = "DDG: sparse_indices_list[next_sparse]"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771091" -> "30064771105"  [ label = "DDG: c"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771073" -> "30064771094"  [ label = "DDG: input_order_"] 
  "30064771092" -> "30064771094"  [ label = "DDG: next_sparse"] 
  "30064771095" -> "30064771094"  [ label = "DDG: sparse_values_list"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771073" -> "30064771098"  [ label = "DDG: input_order_"] 
  "30064771096" -> "30064771098"  [ label = "DDG: next_sparse"] 
  "30064771099" -> "30064771098"  [ label = "DDG: sparse_indices_list"] 
  "30064771111" -> "30064771110"  [ label = "DDG: dense_list[next_dense++]"] 
  "30064771111" -> "30064771110"  [ label = "DDG: features"] 
  "30064771114" -> "146028888069"  [ label = "DDG: errors::InvalidArgument(&quot;Unexpected input_order value.&quot;)"] 
  "30064771093" -> "30064771095"  [ label = "DDG: sparse_values_list"] 
  "30064771101" -> "30064771095"  [ label = "DDG: sparse_values_list[next_sparse]"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771097" -> "30064771099"  [ label = "DDG: sparse_indices_list"] 
  "30064771101" -> "30064771099"  [ label = "DDG: sparse_indices_list[next_sparse]"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771076" -> "30064771106"  [ label = "DDG: next_dense"] 
  "30064771113" -> "30064771106"  [ label = "DDG: next_dense"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771107" -> "30064771106"  [ label = "DDG: dense_list"] 
  "30064771108" -> "146028888068"  [ label = "DDG: errors::InvalidArgument(
              &quot;input_order \&quot;&quot;, input_order_,
              &quot;\&quot; specifies reading a dense tensor at index &quot;, next_dense,
              &quot; from a list of &quot;, dense_list.size(), &quot; tensors.&quot;)"] 
  "30064771107" -> "30064771111"  [ label = "DDG: dense_list"] 
  "30064771072" -> "30064771111"  [ label = "DDG: features"] 
  "30064771101" -> "30064771111"  [ label = "DDG: features"] 
  "30064771087" -> "30064771111"  [ label = "DDG: features"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "115964116996" -> "30064771107"  [ label = "DDG: dense_list"] 
  "30064771111" -> "30064771107"  [ label = "DDG: dense_list[next_dense++]"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771073" -> "30064771108"  [ label = "DDG: input_order_"] 
  "30064771106" -> "30064771108"  [ label = "DDG: next_dense"] 
  "30064771109" -> "30064771108"  [ label = "DDG: dense_list"] 
  "30064771106" -> "30064771113"  [ label = "DDG: next_dense"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771107" -> "30064771109"  [ label = "DDG: dense_list"] 
  "30064771111" -> "30064771109"  [ label = "DDG: dense_list[next_dense++]"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771077" -> "30064771091"  [ label = "CDG: "] 
  "30064771077" -> "30064771078"  [ label = "CDG: "] 
  "30064771077" -> "30064771079"  [ label = "CDG: "] 
  "30064771090" -> "30064771115"  [ label = "CDG: "] 
  "30064771090" -> "146028888070"  [ label = "CDG: "] 
  "30064771090" -> "30064771077"  [ label = "CDG: "] 
  "30064771078" -> "146028888064"  [ label = "CDG: "] 
  "30064771078" -> "30064771083"  [ label = "CDG: "] 
  "30064771078" -> "30064771082"  [ label = "CDG: "] 
  "30064771078" -> "30064771081"  [ label = "CDG: "] 
  "30064771078" -> "30064771080"  [ label = "CDG: "] 
  "30064771082" -> "146028888065"  [ label = "CDG: "] 
  "30064771082" -> "30064771086"  [ label = "CDG: "] 
  "30064771082" -> "30064771085"  [ label = "CDG: "] 
  "30064771082" -> "30064771084"  [ label = "CDG: "] 
  "30064771082" -> "30064771090"  [ label = "CDG: "] 
  "30064771082" -> "30064771089"  [ label = "CDG: "] 
  "30064771082" -> "30064771088"  [ label = "CDG: "] 
  "30064771082" -> "30064771087"  [ label = "CDG: "] 
  "30064771091" -> "30064771105"  [ label = "CDG: "] 
  "30064771091" -> "30064771093"  [ label = "CDG: "] 
  "30064771091" -> "30064771092"  [ label = "CDG: "] 
  "30064771104" -> "30064771115"  [ label = "CDG: "] 
  "30064771104" -> "146028888070"  [ label = "CDG: "] 
  "30064771104" -> "30064771077"  [ label = "CDG: "] 
  "30064771092" -> "146028888066"  [ label = "CDG: "] 
  "30064771092" -> "30064771094"  [ label = "CDG: "] 
  "30064771092" -> "30064771097"  [ label = "CDG: "] 
  "30064771092" -> "30064771096"  [ label = "CDG: "] 
  "30064771092" -> "30064771095"  [ label = "CDG: "] 
  "30064771096" -> "30064771102"  [ label = "CDG: "] 
  "30064771096" -> "30064771101"  [ label = "CDG: "] 
  "30064771096" -> "30064771100"  [ label = "CDG: "] 
  "30064771096" -> "30064771099"  [ label = "CDG: "] 
  "30064771096" -> "30064771104"  [ label = "CDG: "] 
  "30064771096" -> "30064771103"  [ label = "CDG: "] 
  "30064771096" -> "146028888067"  [ label = "CDG: "] 
  "30064771096" -> "30064771098"  [ label = "CDG: "] 
  "30064771105" -> "30064771107"  [ label = "CDG: "] 
  "30064771105" -> "30064771114"  [ label = "CDG: "] 
  "30064771105" -> "30064771106"  [ label = "CDG: "] 
  "30064771105" -> "146028888069"  [ label = "CDG: "] 
  "30064771110" -> "30064771115"  [ label = "CDG: "] 
  "30064771110" -> "146028888070"  [ label = "CDG: "] 
  "30064771110" -> "30064771077"  [ label = "CDG: "] 
  "30064771106" -> "30064771110"  [ label = "CDG: "] 
  "30064771106" -> "30064771109"  [ label = "CDG: "] 
  "30064771106" -> "30064771108"  [ label = "CDG: "] 
  "30064771106" -> "30064771113"  [ label = "CDG: "] 
  "30064771106" -> "30064771112"  [ label = "CDG: "] 
  "30064771106" -> "30064771111"  [ label = "CDG: "] 
  "30064771106" -> "146028888068"  [ label = "CDG: "] 
}
"""
)
