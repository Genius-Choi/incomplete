[33mval[0m [36mres996[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "lxc_attach_to_ns" {  
"111669149697" [label = <(METHOD,lxc_attach_to_ns)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,pid_t pid)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,int which)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	char path[MAXPATHLEN];
	/* according to &lt;htt...,{
	char path[MAXPATHLEN];
	/* according to &lt;htt...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,char[MAXPATHLEN] path: char[MAXPATHLEN])<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,path[MAXPATHLEN])<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,path,path[MAXPATHLEN])<SUB>3</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.alloc,path[MAXPATHLEN])<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,MAXPATHLEN,path[MAXPATHLEN])<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,static char *[] ns: static char *[])<SUB>8</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,*ns[] = { &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;...)<SUB>8</SUB>> ]
"68719476738" [label = <(IDENTIFIER,ns,*ns[] = { &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;...)<SUB>8</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.arrayInitializer,{ &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;net&quot; })<SUB>8</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;user&quot;,{ &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;net&quot; })<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;mnt&quot;,{ &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;net&quot; })<SUB>8</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;pid&quot;,{ &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;net&quot; })<SUB>8</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;uts&quot;,{ &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;net&quot; })<SUB>8</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;ipc&quot;,{ &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;net&quot; })<SUB>8</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;net&quot;,{ &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;net&quot; })<SUB>8</SUB>> ]
"94489280514" [label = <(LOCAL,static int[] flags: static int[])<SUB>9</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,flags[] = {
		CLONE_NEWUSER, CLONE_NEWNS, CLONE...)<SUB>9</SUB>> ]
"68719476739" [label = <(IDENTIFIER,flags,flags[] = {
		CLONE_NEWUSER, CLONE_NEWNS, CLONE...)<SUB>9</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.arrayInitializer,{
		CLONE_NEWUSER, CLONE_NEWNS, CLONE_NEWPID, C...)<SUB>9</SUB>> ]
"68719476740" [label = <(IDENTIFIER,CLONE_NEWUSER,{
		CLONE_NEWUSER, CLONE_NEWNS, CLONE_NEWPID, C...)<SUB>10</SUB>> ]
"68719476741" [label = <(IDENTIFIER,CLONE_NEWNS,{
		CLONE_NEWUSER, CLONE_NEWNS, CLONE_NEWPID, C...)<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,CLONE_NEWPID,{
		CLONE_NEWUSER, CLONE_NEWNS, CLONE_NEWPID, C...)<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,CLONE_NEWUTS,{
		CLONE_NEWUSER, CLONE_NEWNS, CLONE_NEWPID, C...)<SUB>10</SUB>> ]
"68719476744" [label = <(IDENTIFIER,CLONE_NEWIPC,{
		CLONE_NEWUSER, CLONE_NEWNS, CLONE_NEWPID, C...)<SUB>10</SUB>> ]
"68719476745" [label = <(IDENTIFIER,CLONE_NEWNET,{
		CLONE_NEWUSER, CLONE_NEWNS, CLONE_NEWPID, C...)<SUB>11</SUB>> ]
"94489280515" [label = <(LOCAL,static const int size: int)<SUB>13</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,size = sizeof(ns) / sizeof(char *))<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,size,size = sizeof(ns) / sizeof(char *))<SUB>13</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.division,sizeof(ns) / sizeof(char *))<SUB>13</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.sizeOf,sizeof(ns))<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,ns,sizeof(ns))<SUB>13</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.sizeOf,sizeof(char *))<SUB>13</SUB>> ]
"68719476748" [label = <(IDENTIFIER,char,sizeof(char *))<SUB>13</SUB>> ]
"94489280516" [label = <(LOCAL,int[size] fd: int[size])<SUB>14</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,fd[size])<SUB>14</SUB>> ]
"68719476749" [label = <(IDENTIFIER,fd,fd[size])<SUB>14</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.alloc,fd[size])<SUB>14</SUB>> ]
"68719476750" [label = <(IDENTIFIER,size,fd[size])<SUB>14</SUB>> ]
"94489280517" [label = <(LOCAL,int i: int)<SUB>15</SUB>> ]
"94489280518" [label = <(LOCAL,int j: int)<SUB>15</SUB>> ]
"94489280519" [label = <(LOCAL,int saved_errno: int)<SUB>15</SUB>> ]
"30064771084" [label = <(snprintf,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns&quot;, pid))<SUB>18</SUB>> ]
"68719476751" [label = <(IDENTIFIER,path,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns&quot;, pid))<SUB>18</SUB>> ]
"68719476752" [label = <(IDENTIFIER,MAXPATHLEN,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns&quot;, pid))<SUB>18</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;/proc/%d/ns&quot;,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns&quot;, pid))<SUB>18</SUB>> ]
"68719476753" [label = <(IDENTIFIER,pid,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns&quot;, pid))<SUB>18</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (access(path, X_OK)))<SUB>19</SUB>> ]
"30064771085" [label = <(access,access(path, X_OK))<SUB>19</SUB>> ]
"68719476754" [label = <(IDENTIFIER,path,access(path, X_OK))<SUB>19</SUB>> ]
"68719476755" [label = <(IDENTIFIER,X_OK,access(path, X_OK))<SUB>19</SUB>> ]
"25769803778" [label = <(BLOCK,{
		ERROR(&quot;Does this kernel version support 'at...,{
		ERROR(&quot;Does this kernel version support 'at...)<SUB>19</SUB>> ]
"30064771086" [label = <(ERROR,ERROR(&quot;Does this kernel version support 'attach...)<SUB>20</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;Does this kernel version support 'attach' ?&quot;,ERROR(&quot;Does this kernel version support 'attach...)<SUB>20</SUB>> ]
"146028888064" [label = <(RETURN,return -1;,return -1;)<SUB>21</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.minus,-1)<SUB>21</SUB>> ]
"90194313224" [label = <(LITERAL,1,-1)<SUB>21</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FOR,for (i = 0;i &lt; size;i++))<SUB>24</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>24</SUB>> ]
"68719476756" [label = <(IDENTIFIER,i,i = 0)<SUB>24</SUB>> ]
"90194313225" [label = <(LITERAL,0,i = 0)<SUB>24</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.lessThan,i &lt; size)<SUB>24</SUB>> ]
"68719476757" [label = <(IDENTIFIER,i,i &lt; size)<SUB>24</SUB>> ]
"68719476758" [label = <(IDENTIFIER,size,i &lt; size)<SUB>24</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>> ]
"68719476759" [label = <(IDENTIFIER,i,i++)<SUB>24</SUB>> ]
"25769803780" [label = <(BLOCK,{
		/* ignore if we are not supposed to attach ...,{
		/* ignore if we are not supposed to attach ...)<SUB>24</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (which != -1 &amp;&amp; !(which &amp; flags[i])))<SUB>28</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.logicalAnd,which != -1 &amp;&amp; !(which &amp; flags[i]))<SUB>28</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.notEquals,which != -1)<SUB>28</SUB>> ]
"68719476760" [label = <(IDENTIFIER,which,which != -1)<SUB>28</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.minus,-1)<SUB>28</SUB>> ]
"90194313226" [label = <(LITERAL,1,-1)<SUB>28</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.logicalNot,!(which &amp; flags[i]))<SUB>28</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.and,which &amp; flags[i])<SUB>28</SUB>> ]
"68719476761" [label = <(IDENTIFIER,which,which &amp; flags[i])<SUB>28</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.indirectIndexAccess,flags[i])<SUB>28</SUB>> ]
"68719476762" [label = <(IDENTIFIER,flags,which &amp; flags[i])<SUB>28</SUB>> ]
"68719476763" [label = <(IDENTIFIER,i,which &amp; flags[i])<SUB>28</SUB>> ]
"25769803781" [label = <(BLOCK,{
			fd[i] = -1;
			continue;
		},{
			fd[i] = -1;
			continue;
		})<SUB>28</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,fd[i] = -1)<SUB>29</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.indirectIndexAccess,fd[i])<SUB>29</SUB>> ]
"68719476764" [label = <(IDENTIFIER,fd,fd[i] = -1)<SUB>29</SUB>> ]
"68719476765" [label = <(IDENTIFIER,i,fd[i] = -1)<SUB>29</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.minus,-1)<SUB>29</SUB>> ]
"90194313227" [label = <(LITERAL,1,-1)<SUB>29</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,CONTINUE,continue;)<SUB>30</SUB>> ]
"30064771100" [label = <(snprintf,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns/%s&quot;, pi...)<SUB>33</SUB>> ]
"68719476766" [label = <(IDENTIFIER,path,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns/%s&quot;, pi...)<SUB>33</SUB>> ]
"68719476767" [label = <(IDENTIFIER,MAXPATHLEN,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns/%s&quot;, pi...)<SUB>33</SUB>> ]
"90194313228" [label = <(LITERAL,&quot;/proc/%d/ns/%s&quot;,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns/%s&quot;, pi...)<SUB>33</SUB>> ]
"68719476768" [label = <(IDENTIFIER,pid,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns/%s&quot;, pi...)<SUB>33</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.indirectIndexAccess,ns[i])<SUB>33</SUB>> ]
"68719476769" [label = <(IDENTIFIER,ns,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns/%s&quot;, pi...)<SUB>33</SUB>> ]
"68719476770" [label = <(IDENTIFIER,i,snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns/%s&quot;, pi...)<SUB>33</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,fd[i] = open(path, O_RDONLY | O_CLOEXEC))<SUB>34</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.indirectIndexAccess,fd[i])<SUB>34</SUB>> ]
"68719476771" [label = <(IDENTIFIER,fd,fd[i] = open(path, O_RDONLY | O_CLOEXEC))<SUB>34</SUB>> ]
"68719476772" [label = <(IDENTIFIER,i,fd[i] = open(path, O_RDONLY | O_CLOEXEC))<SUB>34</SUB>> ]
"30064771104" [label = <(open,open(path, O_RDONLY | O_CLOEXEC))<SUB>34</SUB>> ]
"68719476773" [label = <(IDENTIFIER,path,open(path, O_RDONLY | O_CLOEXEC))<SUB>34</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.or,O_RDONLY | O_CLOEXEC)<SUB>34</SUB>> ]
"68719476774" [label = <(IDENTIFIER,O_RDONLY,O_RDONLY | O_CLOEXEC)<SUB>34</SUB>> ]
"68719476775" [label = <(IDENTIFIER,O_CLOEXEC,O_RDONLY | O_CLOEXEC)<SUB>34</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (fd[i] &lt; 0))<SUB>35</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.lessThan,fd[i] &lt; 0)<SUB>35</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.indirectIndexAccess,fd[i])<SUB>35</SUB>> ]
"68719476776" [label = <(IDENTIFIER,fd,fd[i] &lt; 0)<SUB>35</SUB>> ]
"68719476777" [label = <(IDENTIFIER,i,fd[i] &lt; 0)<SUB>35</SUB>> ]
"90194313229" [label = <(LITERAL,0,fd[i] &lt; 0)<SUB>35</SUB>> ]
"25769803782" [label = <(BLOCK,{
			saved_errno = errno;

			/* close all alre...,{
			saved_errno = errno;

			/* close all alre...)<SUB>35</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.assignment,saved_errno = errno)<SUB>36</SUB>> ]
"68719476778" [label = <(IDENTIFIER,saved_errno,saved_errno = errno)<SUB>36</SUB>> ]
"68719476779" [label = <(IDENTIFIER,errno,saved_errno = errno)<SUB>36</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,FOR,for (j = 0;j &lt; i;j++))<SUB>41</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>41</SUB>> ]
"68719476780" [label = <(IDENTIFIER,j,j = 0)<SUB>41</SUB>> ]
"90194313230" [label = <(LITERAL,0,j = 0)<SUB>41</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.lessThan,j &lt; i)<SUB>41</SUB>> ]
"68719476781" [label = <(IDENTIFIER,j,j &lt; i)<SUB>41</SUB>> ]
"68719476782" [label = <(IDENTIFIER,i,j &lt; i)<SUB>41</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>41</SUB>> ]
"68719476783" [label = <(IDENTIFIER,j,j++)<SUB>41</SUB>> ]
"30064771112" [label = <(close,close(fd[j]))<SUB>42</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.indirectIndexAccess,fd[j])<SUB>42</SUB>> ]
"68719476784" [label = <(IDENTIFIER,fd,close(fd[j]))<SUB>42</SUB>> ]
"68719476785" [label = <(IDENTIFIER,j,close(fd[j]))<SUB>42</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.assignment,errno = saved_errno)<SUB>44</SUB>> ]
"68719476786" [label = <(IDENTIFIER,errno,errno = saved_errno)<SUB>44</SUB>> ]
"68719476787" [label = <(IDENTIFIER,saved_errno,errno = saved_errno)<SUB>44</SUB>> ]
"30064771115" [label = <(SYSERROR,SYSERROR(&quot;failed to open '%s'&quot;, path))<SUB>45</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;failed to open '%s'&quot;,SYSERROR(&quot;failed to open '%s'&quot;, path))<SUB>45</SUB>> ]
"68719476788" [label = <(IDENTIFIER,path,SYSERROR(&quot;failed to open '%s'&quot;, path))<SUB>45</SUB>> ]
"146028888065" [label = <(RETURN,return -1;,return -1;)<SUB>46</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.minus,-1)<SUB>46</SUB>> ]
"90194313232" [label = <(LITERAL,1,-1)<SUB>46</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,FOR,for (i = 0;i &lt; size;i++))<SUB>50</SUB>> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>50</SUB>> ]
"68719476789" [label = <(IDENTIFIER,i,i = 0)<SUB>50</SUB>> ]
"90194313233" [label = <(LITERAL,0,i = 0)<SUB>50</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.lessThan,i &lt; size)<SUB>50</SUB>> ]
"68719476790" [label = <(IDENTIFIER,i,i &lt; size)<SUB>50</SUB>> ]
"68719476791" [label = <(IDENTIFIER,size,i &lt; size)<SUB>50</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>50</SUB>> ]
"68719476792" [label = <(IDENTIFIER,i,i++)<SUB>50</SUB>> ]
"25769803785" [label = <(BLOCK,{
		if (fd[i] &gt;= 0 &amp;&amp; setns(fd[i], 0) != 0) {
	...,{
		if (fd[i] &gt;= 0 &amp;&amp; setns(fd[i], 0) != 0) {
	...)<SUB>50</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (fd[i] &gt;= 0 &amp;&amp; setns(fd[i], 0) != 0))<SUB>51</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.logicalAnd,fd[i] &gt;= 0 &amp;&amp; setns(fd[i], 0) != 0)<SUB>51</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.greaterEqualsThan,fd[i] &gt;= 0)<SUB>51</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.indirectIndexAccess,fd[i])<SUB>51</SUB>> ]
"68719476793" [label = <(IDENTIFIER,fd,fd[i] &gt;= 0)<SUB>51</SUB>> ]
"68719476794" [label = <(IDENTIFIER,i,fd[i] &gt;= 0)<SUB>51</SUB>> ]
"90194313234" [label = <(LITERAL,0,fd[i] &gt;= 0)<SUB>51</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.notEquals,setns(fd[i], 0) != 0)<SUB>51</SUB>> ]
"30064771124" [label = <(setns,setns(fd[i], 0))<SUB>51</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.indirectIndexAccess,fd[i])<SUB>51</SUB>> ]
"68719476795" [label = <(IDENTIFIER,fd,setns(fd[i], 0))<SUB>51</SUB>> ]
"68719476796" [label = <(IDENTIFIER,i,setns(fd[i], 0))<SUB>51</SUB>> ]
"90194313235" [label = <(LITERAL,0,setns(fd[i], 0))<SUB>51</SUB>> ]
"90194313236" [label = <(LITERAL,0,setns(fd[i], 0) != 0)<SUB>51</SUB>> ]
"25769803786" [label = <(BLOCK,{
			saved_errno = errno;

			for (j = i; j &lt; s...,{
			saved_errno = errno;

			for (j = i; j &lt; s...)<SUB>51</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.assignment,saved_errno = errno)<SUB>52</SUB>> ]
"68719476797" [label = <(IDENTIFIER,saved_errno,saved_errno = errno)<SUB>52</SUB>> ]
"68719476798" [label = <(IDENTIFIER,errno,saved_errno = errno)<SUB>52</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,FOR,for (j = i;j &lt; size;j++))<SUB>54</SUB>> ]
"25769803787" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>54</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.assignment,j = i)<SUB>54</SUB>> ]
"68719476799" [label = <(IDENTIFIER,j,j = i)<SUB>54</SUB>> ]
"68719476800" [label = <(IDENTIFIER,i,j = i)<SUB>54</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.lessThan,j &lt; size)<SUB>54</SUB>> ]
"68719476801" [label = <(IDENTIFIER,j,j &lt; size)<SUB>54</SUB>> ]
"68719476802" [label = <(IDENTIFIER,size,j &lt; size)<SUB>54</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>54</SUB>> ]
"68719476803" [label = <(IDENTIFIER,j,j++)<SUB>54</SUB>> ]
"30064771130" [label = <(close,close(fd[j]))<SUB>55</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.indirectIndexAccess,fd[j])<SUB>55</SUB>> ]
"68719476804" [label = <(IDENTIFIER,fd,close(fd[j]))<SUB>55</SUB>> ]
"68719476805" [label = <(IDENTIFIER,j,close(fd[j]))<SUB>55</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.assignment,errno = saved_errno)<SUB>57</SUB>> ]
"68719476806" [label = <(IDENTIFIER,errno,errno = saved_errno)<SUB>57</SUB>> ]
"68719476807" [label = <(IDENTIFIER,saved_errno,errno = saved_errno)<SUB>57</SUB>> ]
"30064771133" [label = <(SYSERROR,SYSERROR(&quot;failed to set namespace '%s'&quot;, ns[i]))<SUB>58</SUB>> ]
"90194313237" [label = <(LITERAL,&quot;failed to set namespace '%s'&quot;,SYSERROR(&quot;failed to set namespace '%s'&quot;, ns[i]))<SUB>58</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.indirectIndexAccess,ns[i])<SUB>58</SUB>> ]
"68719476808" [label = <(IDENTIFIER,ns,SYSERROR(&quot;failed to set namespace '%s'&quot;, ns[i]))<SUB>58</SUB>> ]
"68719476809" [label = <(IDENTIFIER,i,SYSERROR(&quot;failed to set namespace '%s'&quot;, ns[i]))<SUB>58</SUB>> ]
"146028888066" [label = <(RETURN,return -1;,return -1;)<SUB>59</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.minus,-1)<SUB>59</SUB>> ]
"90194313238" [label = <(LITERAL,1,-1)<SUB>59</SUB>> ]
"30064771136" [label = <(close,close(fd[i]))<SUB>62</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.indirectIndexAccess,fd[i])<SUB>62</SUB>> ]
"68719476810" [label = <(IDENTIFIER,fd,close(fd[i]))<SUB>62</SUB>> ]
"68719476811" [label = <(IDENTIFIER,i,close(fd[i]))<SUB>62</SUB>> ]
"146028888067" [label = <(RETURN,return 0;,return 0;)<SUB>65</SUB>> ]
"90194313239" [label = <(LITERAL,0,return 0;)<SUB>65</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,int)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "25769803777" -> "146028888067"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "30064771075" -> "90194313218"  [ label = "AST: "] 
  "30064771075" -> "90194313219"  [ label = "AST: "] 
  "30064771075" -> "90194313220"  [ label = "AST: "] 
  "30064771075" -> "90194313221"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "68719476744"  [ label = "AST: "] 
  "30064771077" -> "68719476745"  [ label = "AST: "] 
  "30064771078" -> "68719476746"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "68719476747"  [ label = "AST: "] 
  "30064771081" -> "68719476748"  [ label = "AST: "] 
  "30064771082" -> "68719476749"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476750"  [ label = "AST: "] 
  "30064771084" -> "68719476751"  [ label = "AST: "] 
  "30064771084" -> "68719476752"  [ label = "AST: "] 
  "30064771084" -> "90194313222"  [ label = "AST: "] 
  "30064771084" -> "68719476753"  [ label = "AST: "] 
  "47244640256" -> "30064771085"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771085" -> "68719476754"  [ label = "AST: "] 
  "30064771085" -> "68719476755"  [ label = "AST: "] 
  "25769803778" -> "30064771086"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "30064771086" -> "90194313223"  [ label = "AST: "] 
  "146028888064" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "90194313224"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "30064771089"  [ label = "AST: "] 
  "47244640257" -> "30064771090"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "25769803779" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476756"  [ label = "AST: "] 
  "30064771088" -> "90194313225"  [ label = "AST: "] 
  "30064771089" -> "68719476757"  [ label = "AST: "] 
  "30064771089" -> "68719476758"  [ label = "AST: "] 
  "30064771090" -> "68719476759"  [ label = "AST: "] 
  "25769803780" -> "47244640258"  [ label = "AST: "] 
  "25769803780" -> "30064771100"  [ label = "AST: "] 
  "25769803780" -> "30064771102"  [ label = "AST: "] 
  "25769803780" -> "47244640260"  [ label = "AST: "] 
  "47244640258" -> "30064771091"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "30064771094"  [ label = "AST: "] 
  "30064771092" -> "68719476760"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "90194313226"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476761"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476762"  [ label = "AST: "] 
  "30064771096" -> "68719476763"  [ label = "AST: "] 
  "25769803781" -> "30064771097"  [ label = "AST: "] 
  "25769803781" -> "47244640259"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "68719476764"  [ label = "AST: "] 
  "30064771098" -> "68719476765"  [ label = "AST: "] 
  "30064771099" -> "90194313227"  [ label = "AST: "] 
  "30064771100" -> "68719476766"  [ label = "AST: "] 
  "30064771100" -> "68719476767"  [ label = "AST: "] 
  "30064771100" -> "90194313228"  [ label = "AST: "] 
  "30064771100" -> "68719476768"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "68719476769"  [ label = "AST: "] 
  "30064771101" -> "68719476770"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "68719476771"  [ label = "AST: "] 
  "30064771103" -> "68719476772"  [ label = "AST: "] 
  "30064771104" -> "68719476773"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476774"  [ label = "AST: "] 
  "30064771105" -> "68719476775"  [ label = "AST: "] 
  "47244640260" -> "30064771106"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "90194313229"  [ label = "AST: "] 
  "30064771107" -> "68719476776"  [ label = "AST: "] 
  "30064771107" -> "68719476777"  [ label = "AST: "] 
  "25769803782" -> "30064771108"  [ label = "AST: "] 
  "25769803782" -> "47244640261"  [ label = "AST: "] 
  "25769803782" -> "30064771114"  [ label = "AST: "] 
  "25769803782" -> "30064771115"  [ label = "AST: "] 
  "25769803782" -> "146028888065"  [ label = "AST: "] 
  "30064771108" -> "68719476778"  [ label = "AST: "] 
  "30064771108" -> "68719476779"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "47244640261" -> "30064771110"  [ label = "AST: "] 
  "47244640261" -> "30064771111"  [ label = "AST: "] 
  "47244640261" -> "30064771112"  [ label = "AST: "] 
  "25769803783" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "68719476780"  [ label = "AST: "] 
  "30064771109" -> "90194313230"  [ label = "AST: "] 
  "30064771110" -> "68719476781"  [ label = "AST: "] 
  "30064771110" -> "68719476782"  [ label = "AST: "] 
  "30064771111" -> "68719476783"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476784"  [ label = "AST: "] 
  "30064771113" -> "68719476785"  [ label = "AST: "] 
  "30064771114" -> "68719476786"  [ label = "AST: "] 
  "30064771114" -> "68719476787"  [ label = "AST: "] 
  "30064771115" -> "90194313231"  [ label = "AST: "] 
  "30064771115" -> "68719476788"  [ label = "AST: "] 
  "146028888065" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "90194313232"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "47244640262" -> "30064771118"  [ label = "AST: "] 
  "47244640262" -> "30064771119"  [ label = "AST: "] 
  "47244640262" -> "25769803785"  [ label = "AST: "] 
  "25769803784" -> "30064771117"  [ label = "AST: "] 
  "30064771117" -> "68719476789"  [ label = "AST: "] 
  "30064771117" -> "90194313233"  [ label = "AST: "] 
  "30064771118" -> "68719476790"  [ label = "AST: "] 
  "30064771118" -> "68719476791"  [ label = "AST: "] 
  "30064771119" -> "68719476792"  [ label = "AST: "] 
  "25769803785" -> "47244640263"  [ label = "AST: "] 
  "25769803785" -> "30064771136"  [ label = "AST: "] 
  "47244640263" -> "30064771120"  [ label = "AST: "] 
  "47244640263" -> "25769803786"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "30064771123"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "90194313234"  [ label = "AST: "] 
  "30064771122" -> "68719476793"  [ label = "AST: "] 
  "30064771122" -> "68719476794"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771123" -> "90194313236"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "90194313235"  [ label = "AST: "] 
  "30064771125" -> "68719476795"  [ label = "AST: "] 
  "30064771125" -> "68719476796"  [ label = "AST: "] 
  "25769803786" -> "30064771126"  [ label = "AST: "] 
  "25769803786" -> "47244640264"  [ label = "AST: "] 
  "25769803786" -> "30064771132"  [ label = "AST: "] 
  "25769803786" -> "30064771133"  [ label = "AST: "] 
  "25769803786" -> "146028888066"  [ label = "AST: "] 
  "30064771126" -> "68719476797"  [ label = "AST: "] 
  "30064771126" -> "68719476798"  [ label = "AST: "] 
  "47244640264" -> "25769803787"  [ label = "AST: "] 
  "47244640264" -> "30064771128"  [ label = "AST: "] 
  "47244640264" -> "30064771129"  [ label = "AST: "] 
  "47244640264" -> "30064771130"  [ label = "AST: "] 
  "25769803787" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "68719476799"  [ label = "AST: "] 
  "30064771127" -> "68719476800"  [ label = "AST: "] 
  "30064771128" -> "68719476801"  [ label = "AST: "] 
  "30064771128" -> "68719476802"  [ label = "AST: "] 
  "30064771129" -> "68719476803"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "68719476804"  [ label = "AST: "] 
  "30064771131" -> "68719476805"  [ label = "AST: "] 
  "30064771132" -> "68719476806"  [ label = "AST: "] 
  "30064771132" -> "68719476807"  [ label = "AST: "] 
  "30064771133" -> "90194313237"  [ label = "AST: "] 
  "30064771133" -> "30064771134"  [ label = "AST: "] 
  "30064771134" -> "68719476808"  [ label = "AST: "] 
  "30064771134" -> "68719476809"  [ label = "AST: "] 
  "146028888066" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "90194313238"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771137" -> "68719476810"  [ label = "AST: "] 
  "30064771137" -> "68719476811"  [ label = "AST: "] 
  "146028888067" -> "90194313239"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771080"  [ label = "CFG: "] 
  "30064771078" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771085" -> "30064771088"  [ label = "CFG: "] 
  "30064771089" -> "30064771093"  [ label = "CFG: "] 
  "30064771089" -> "30064771117"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771118" -> "30064771122"  [ label = "CFG: "] 
  "30064771118" -> "146028888067"  [ label = "CFG: "] 
  "30064771119" -> "30064771118"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "30064771079"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771100" -> "30064771103"  [ label = "CFG: "] 
  "30064771102" -> "30064771107"  [ label = "CFG: "] 
  "30064771117" -> "30064771118"  [ label = "CFG: "] 
  "30064771136" -> "30064771119"  [ label = "CFG: "] 
  "30064771087" -> "146028888064"  [ label = "CFG: "] 
  "30064771091" -> "30064771098"  [ label = "CFG: "] 
  "30064771091" -> "30064771101"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771103" -> "30064771105"  [ label = "CFG: "] 
  "30064771104" -> "30064771102"  [ label = "CFG: "] 
  "30064771106" -> "30064771108"  [ label = "CFG: "] 
  "30064771106" -> "30064771090"  [ label = "CFG: "] 
  "30064771120" -> "30064771126"  [ label = "CFG: "] 
  "30064771120" -> "30064771137"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771092" -> "30064771096"  [ label = "CFG: "] 
  "30064771094" -> "30064771091"  [ label = "CFG: "] 
  "30064771097" -> "30064771090"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771108" -> "30064771109"  [ label = "CFG: "] 
  "30064771114" -> "30064771115"  [ label = "CFG: "] 
  "30064771115" -> "30064771116"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771121" -> "30064771125"  [ label = "CFG: "] 
  "30064771123" -> "30064771120"  [ label = "CFG: "] 
  "30064771126" -> "30064771127"  [ label = "CFG: "] 
  "30064771132" -> "30064771134"  [ label = "CFG: "] 
  "30064771133" -> "30064771135"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771099" -> "30064771097"  [ label = "CFG: "] 
  "30064771110" -> "30064771113"  [ label = "CFG: "] 
  "30064771110" -> "30064771114"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771116" -> "146028888065"  [ label = "CFG: "] 
  "30064771122" -> "30064771121"  [ label = "CFG: "] 
  "30064771124" -> "30064771123"  [ label = "CFG: "] 
  "30064771128" -> "30064771131"  [ label = "CFG: "] 
  "30064771128" -> "30064771132"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "30064771134" -> "30064771133"  [ label = "CFG: "] 
  "30064771135" -> "146028888066"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771127" -> "30064771128"  [ label = "CFG: "] 
  "30064771131" -> "30064771130"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: which"] 
  "30064771072" -> "128849018880"  [ label = "DDG: path[MAXPATHLEN]"] 
  "30064771074" -> "128849018880"  [ label = "DDG: { &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;net&quot; }"] 
  "30064771074" -> "128849018880"  [ label = "DDG: *ns[] = { &quot;user&quot;, &quot;mnt&quot;, &quot;pid&quot;, &quot;uts&quot;, &quot;ipc&quot;, &quot;net&quot; }"] 
  "30064771076" -> "128849018880"  [ label = "DDG: flags"] 
  "30064771077" -> "128849018880"  [ label = "DDG: CLONE_NEWUSER"] 
  "30064771077" -> "128849018880"  [ label = "DDG: CLONE_NEWNS"] 
  "30064771077" -> "128849018880"  [ label = "DDG: CLONE_NEWPID"] 
  "30064771077" -> "128849018880"  [ label = "DDG: CLONE_NEWUTS"] 
  "30064771077" -> "128849018880"  [ label = "DDG: CLONE_NEWNET"] 
  "30064771076" -> "128849018880"  [ label = "DDG: {
		CLONE_NEWUSER, CLONE_NEWNS, CLONE_NEWPID, CLONE_NEWUTS, CLONE_NEWIPC,
		CLONE_NEWNET
	}"] 
  "30064771076" -> "128849018880"  [ label = "DDG: flags[] = {
		CLONE_NEWUSER, CLONE_NEWNS, CLONE_NEWPID, CLONE_NEWUTS, CLONE_NEWIPC,
		CLONE_NEWNET
	}"] 
  "30064771080" -> "128849018880"  [ label = "DDG: ns"] 
  "30064771078" -> "128849018880"  [ label = "DDG: sizeof(ns) / sizeof(char *)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: size = sizeof(ns) / sizeof(char *)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: fd"] 
  "30064771083" -> "128849018880"  [ label = "DDG: size"] 
  "30064771082" -> "128849018880"  [ label = "DDG: fd[size]"] 
  "30064771084" -> "128849018880"  [ label = "DDG: MAXPATHLEN"] 
  "30064771084" -> "128849018880"  [ label = "DDG: pid"] 
  "30064771084" -> "128849018880"  [ label = "DDG: snprintf(path, MAXPATHLEN, &quot;/proc/%d/ns&quot;, pid)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: path"] 
  "30064771085" -> "128849018880"  [ label = "DDG: access(path, X_OK)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: ERROR(&quot;Does this kernel version support 'attach' ?&quot;)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771105" -> "128849018880"  [ label = "DDG: O_CLOEXEC"] 
  "30064771081" -> "128849018880"  [ label = "DDG: char"] 
  "30064771077" -> "128849018880"  [ label = "DDG: CLONE_NEWIPC"] 
  "30064771085" -> "128849018880"  [ label = "DDG: X_OK"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: MAXPATHLEN"] 
  "30064771075" -> "30064771074"  [ label = "DDG: &quot;net&quot;"] 
  "30064771075" -> "30064771074"  [ label = "DDG: &quot;pid&quot;"] 
  "30064771075" -> "30064771074"  [ label = "DDG: &quot;uts&quot;"] 
  "30064771075" -> "30064771074"  [ label = "DDG: &quot;user&quot;"] 
  "30064771075" -> "30064771074"  [ label = "DDG: &quot;ipc&quot;"] 
  "30064771075" -> "30064771074"  [ label = "DDG: &quot;mnt&quot;"] 
  "30064771077" -> "30064771076"  [ label = "DDG: CLONE_NEWUTS"] 
  "30064771077" -> "30064771076"  [ label = "DDG: CLONE_NEWIPC"] 
  "30064771077" -> "30064771076"  [ label = "DDG: CLONE_NEWUSER"] 
  "30064771077" -> "30064771076"  [ label = "DDG: CLONE_NEWNET"] 
  "30064771077" -> "30064771076"  [ label = "DDG: CLONE_NEWNS"] 
  "30064771077" -> "30064771076"  [ label = "DDG: CLONE_NEWPID"] 
  "30064771083" -> "30064771082"  [ label = "DDG: size"] 
  "90194313239" -> "146028888067"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888067"  [ label = "DDG: "] 
  "30064771072" -> "30064771084"  [ label = "DDG: path"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771073" -> "30064771084"  [ label = "DDG: MAXPATHLEN"] 
  "115964116992" -> "30064771084"  [ label = "DDG: pid"] 
  "111669149697" -> "90194313239"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771078" -> "30064771083"  [ label = "DDG: size"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771084" -> "30064771085"  [ label = "DDG: path"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771087" -> "146028888064"  [ label = "DDG: -1"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771088" -> "30064771089"  [ label = "DDG: i"] 
  "30064771090" -> "30064771089"  [ label = "DDG: i"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771083" -> "30064771089"  [ label = "DDG: size"] 
  "30064771089" -> "30064771090"  [ label = "DDG: i"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771104" -> "30064771102"  [ label = "DDG: path"] 
  "30064771104" -> "30064771102"  [ label = "DDG: O_RDONLY | O_CLOEXEC"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771117" -> "30064771118"  [ label = "DDG: i"] 
  "30064771119" -> "30064771118"  [ label = "DDG: i"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "30064771089" -> "30064771118"  [ label = "DDG: size"] 
  "30064771118" -> "30064771119"  [ label = "DDG: i"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771085" -> "30064771100"  [ label = "DDG: path"] 
  "30064771104" -> "30064771100"  [ label = "DDG: path"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771084" -> "30064771100"  [ label = "DDG: MAXPATHLEN"] 
  "30064771084" -> "30064771100"  [ label = "DDG: pid"] 
  "30064771082" -> "30064771136"  [ label = "DDG: fd"] 
  "30064771121" -> "30064771136"  [ label = "DDG: fd[i]"] 
  "30064771124" -> "30064771136"  [ label = "DDG: fd[i]"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771092" -> "30064771091"  [ label = "DDG: which"] 
  "30064771092" -> "30064771091"  [ label = "DDG: -1"] 
  "30064771094" -> "30064771091"  [ label = "DDG: which &amp; flags[i]"] 
  "30064771099" -> "30064771097"  [ label = "DDG: 1"] 
  "30064771100" -> "30064771104"  [ label = "DDG: path"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771105" -> "30064771104"  [ label = "DDG: O_RDONLY"] 
  "30064771105" -> "30064771104"  [ label = "DDG: O_CLOEXEC"] 
  "30064771082" -> "30064771106"  [ label = "DDG: fd"] 
  "30064771102" -> "30064771106"  [ label = "DDG: fd[i]"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771108" -> "30064771114"  [ label = "DDG: saved_errno"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771116" -> "146028888065"  [ label = "DDG: -1"] 
  "30064771121" -> "30064771120"  [ label = "DDG: fd[i]"] 
  "30064771121" -> "30064771120"  [ label = "DDG: 0"] 
  "30064771123" -> "30064771120"  [ label = "DDG: setns(fd[i], 0)"] 
  "30064771123" -> "30064771120"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771126"  [ label = "DDG: "] 
  "30064771126" -> "30064771132"  [ label = "DDG: saved_errno"] 
  "111669149697" -> "30064771132"  [ label = "DDG: "] 
  "30064771135" -> "146028888066"  [ label = "DDG: -1"] 
  "115964116993" -> "30064771092"  [ label = "DDG: which"] 
  "30064771095" -> "30064771092"  [ label = "DDG: which"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: 1"] 
  "30064771095" -> "30064771094"  [ label = "DDG: which"] 
  "30064771095" -> "30064771094"  [ label = "DDG: flags[i]"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771104" -> "30064771115"  [ label = "DDG: path"] 
  "30064771082" -> "30064771121"  [ label = "DDG: fd"] 
  "30064771136" -> "30064771121"  [ label = "DDG: fd[i]"] 
  "30064771106" -> "30064771121"  [ label = "DDG: fd[i]"] 
  "30064771097" -> "30064771121"  [ label = "DDG: fd[i]"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771124" -> "30064771123"  [ label = "DDG: fd[i]"] 
  "30064771124" -> "30064771123"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "30064771100" -> "30064771133"  [ label = "DDG: ns[i]"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771092" -> "30064771095"  [ label = "DDG: which"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771076" -> "30064771095"  [ label = "DDG: flags"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771109" -> "30064771110"  [ label = "DDG: j"] 
  "30064771111" -> "30064771110"  [ label = "DDG: j"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771089" -> "30064771110"  [ label = "DDG: i"] 
  "30064771110" -> "30064771111"  [ label = "DDG: j"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771082" -> "30064771112"  [ label = "DDG: fd"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771082" -> "30064771124"  [ label = "DDG: fd"] 
  "30064771121" -> "30064771124"  [ label = "DDG: fd[i]"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771118" -> "30064771127"  [ label = "DDG: i"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771127" -> "30064771128"  [ label = "DDG: j"] 
  "30064771129" -> "30064771128"  [ label = "DDG: j"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771118" -> "30064771128"  [ label = "DDG: size"] 
  "30064771128" -> "30064771129"  [ label = "DDG: j"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "30064771082" -> "30064771130"  [ label = "DDG: fd"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771085" -> "146028888064"  [ label = "CDG: "] 
  "30064771085" -> "30064771087"  [ label = "CDG: "] 
  "30064771085" -> "30064771086"  [ label = "CDG: "] 
  "30064771085" -> "30064771089"  [ label = "CDG: "] 
  "30064771085" -> "30064771088"  [ label = "CDG: "] 
  "30064771089" -> "30064771117"  [ label = "CDG: "] 
  "30064771089" -> "30064771118"  [ label = "CDG: "] 
  "30064771089" -> "30064771091"  [ label = "CDG: "] 
  "30064771089" -> "30064771093"  [ label = "CDG: "] 
  "30064771089" -> "30064771092"  [ label = "CDG: "] 
  "30064771118" -> "30064771121"  [ label = "CDG: "] 
  "30064771118" -> "30064771120"  [ label = "CDG: "] 
  "30064771118" -> "30064771122"  [ label = "CDG: "] 
  "30064771118" -> "146028888067"  [ label = "CDG: "] 
  "30064771091" -> "30064771099"  [ label = "CDG: "] 
  "30064771091" -> "30064771098"  [ label = "CDG: "] 
  "30064771091" -> "30064771101"  [ label = "CDG: "] 
  "30064771091" -> "30064771100"  [ label = "CDG: "] 
  "30064771091" -> "30064771103"  [ label = "CDG: "] 
  "30064771091" -> "30064771102"  [ label = "CDG: "] 
  "30064771091" -> "30064771105"  [ label = "CDG: "] 
  "30064771091" -> "30064771104"  [ label = "CDG: "] 
  "30064771091" -> "30064771107"  [ label = "CDG: "] 
  "30064771091" -> "30064771106"  [ label = "CDG: "] 
  "30064771091" -> "30064771089"  [ label = "CDG: "] 
  "30064771091" -> "30064771090"  [ label = "CDG: "] 
  "30064771091" -> "30064771097"  [ label = "CDG: "] 
  "30064771106" -> "30064771109"  [ label = "CDG: "] 
  "30064771106" -> "30064771108"  [ label = "CDG: "] 
  "30064771106" -> "30064771110"  [ label = "CDG: "] 
  "30064771106" -> "30064771115"  [ label = "CDG: "] 
  "30064771106" -> "30064771114"  [ label = "CDG: "] 
  "30064771106" -> "30064771116"  [ label = "CDG: "] 
  "30064771106" -> "146028888065"  [ label = "CDG: "] 
  "30064771106" -> "30064771089"  [ label = "CDG: "] 
  "30064771106" -> "30064771090"  [ label = "CDG: "] 
  "30064771120" -> "30064771119"  [ label = "CDG: "] 
  "30064771120" -> "30064771118"  [ label = "CDG: "] 
  "30064771120" -> "30064771127"  [ label = "CDG: "] 
  "30064771120" -> "30064771126"  [ label = "CDG: "] 
  "30064771120" -> "30064771128"  [ label = "CDG: "] 
  "30064771120" -> "30064771133"  [ label = "CDG: "] 
  "30064771120" -> "30064771132"  [ label = "CDG: "] 
  "30064771120" -> "30064771135"  [ label = "CDG: "] 
  "30064771120" -> "30064771134"  [ label = "CDG: "] 
  "30064771120" -> "30064771137"  [ label = "CDG: "] 
  "30064771120" -> "30064771136"  [ label = "CDG: "] 
  "30064771120" -> "146028888066"  [ label = "CDG: "] 
  "30064771092" -> "30064771095"  [ label = "CDG: "] 
  "30064771092" -> "30064771094"  [ label = "CDG: "] 
  "30064771092" -> "30064771096"  [ label = "CDG: "] 
  "30064771121" -> "30064771123"  [ label = "CDG: "] 
  "30064771121" -> "30064771125"  [ label = "CDG: "] 
  "30064771121" -> "30064771124"  [ label = "CDG: "] 
  "30064771110" -> "30064771111"  [ label = "CDG: "] 
  "30064771110" -> "30064771110"  [ label = "CDG: "] 
  "30064771110" -> "30064771113"  [ label = "CDG: "] 
  "30064771110" -> "30064771112"  [ label = "CDG: "] 
  "30064771128" -> "30064771129"  [ label = "CDG: "] 
  "30064771128" -> "30064771128"  [ label = "CDG: "] 
  "30064771128" -> "30064771131"  [ label = "CDG: "] 
  "30064771128" -> "30064771130"  [ label = "CDG: "] 
}
"""
)
