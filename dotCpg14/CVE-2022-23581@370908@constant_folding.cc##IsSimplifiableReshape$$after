[33mval[0m [36mres2262[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "IsSimplifiableReshape" {  
"111669149698" [label = <(METHOD,IsSimplifiableReshape)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const NodeDef&amp; node)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,const GraphProperties&amp; properties)<SUB>2</SUB>> ]
"25769803779" [label = <(BLOCK,{
  if (!IsReshape(node)) {
    return errors::...,{
  if (!IsReshape(node)) {
    return errors::...)<SUB>2</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (!IsReshape(node)))<SUB>3</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.logicalNot,!IsReshape(node))<SUB>3</SUB>> ]
"30064771075" [label = <(IsReshape,IsReshape(node))<SUB>3</SUB>> ]
"68719476738" [label = <(IDENTIFIER,node,IsReshape(node))<SUB>3</SUB>> ]
"25769803780" [label = <(BLOCK,{
    return errors::Internal(&quot;Node &quot;, node.nam...,{
    return errors::Internal(&quot;Node &quot;, node.nam...)<SUB>3</SUB>> ]
"146028888064" [label = <(RETURN,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...)<SUB>4</SUB>> ]
"30064771076" [label = <(Internal,errors::Internal(&quot;Node &quot;, node.name(), &quot; is not...)<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Node &quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; is not...)<SUB>4</SUB>> ]
"30064771077" [label = <(name,node.name())<SUB>4</SUB>> ]
"68719476739" [label = <(IDENTIFIER,node,node.name())<SUB>4</SUB>> ]
"90194313217" [label = <(LITERAL,&quot; is not a Reshape node&quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; is not...)<SUB>4</SUB>> ]
"30064771078" [label = <(CHECK_LE,CHECK_LE(2, node.input_size()))<SUB>6</SUB>> ]
"90194313218" [label = <(LITERAL,2,CHECK_LE(2, node.input_size()))<SUB>6</SUB>> ]
"30064771079" [label = <(input_size,node.input_size())<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,node,node.input_size())<SUB>6</SUB>> ]
"94489280514" [label = <(LOCAL,const NodeDef* new_shape: NodeDef*)<SUB>7</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,* new_shape = node_map_-&gt;GetNode(node.input(1)))<SUB>7</SUB>> ]
"68719476741" [label = <(IDENTIFIER,new_shape,* new_shape = node_map_-&gt;GetNode(node.input(1)))<SUB>7</SUB>> ]
"30064771081" [label = <(GetNode,node_map_-&gt;GetNode(node.input(1)))<SUB>7</SUB>> ]
"68719476742" [label = <(IDENTIFIER,node_map_,node_map_-&gt;GetNode(node.input(1)))<SUB>7</SUB>> ]
"30064771082" [label = <(input,node.input(1))<SUB>7</SUB>> ]
"68719476743" [label = <(IDENTIFIER,node,node.input(1))<SUB>7</SUB>> ]
"90194313219" [label = <(LITERAL,1,node.input(1))<SUB>7</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (!IsReallyConstant(*new_shape)))<SUB>8</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.logicalNot,!IsReallyConstant(*new_shape))<SUB>8</SUB>> ]
"30064771084" [label = <(IsReallyConstant,IsReallyConstant(*new_shape))<SUB>8</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.indirection,*new_shape)<SUB>8</SUB>> ]
"68719476744" [label = <(IDENTIFIER,new_shape,IsReallyConstant(*new_shape))<SUB>8</SUB>> ]
"25769803781" [label = <(BLOCK,{
    return errors::Internal(&quot;Node &quot;, node.nam...,{
    return errors::Internal(&quot;Node &quot;, node.nam...)<SUB>8</SUB>> ]
"146028888065" [label = <(RETURN,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...)<SUB>9</SUB>> ]
"30064771086" [label = <(Internal,errors::Internal(&quot;Node &quot;, node.name(), &quot; has sh...)<SUB>9</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;Node &quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has sh...)<SUB>9</SUB>> ]
"30064771087" [label = <(name,node.name())<SUB>9</SUB>> ]
"68719476745" [label = <(IDENTIFIER,node,node.name())<SUB>9</SUB>> ]
"90194313221" [label = <(LITERAL,&quot; has shape &quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has sh...)<SUB>9</SUB>> ]
"30064771088" [label = <(DebugString,new_shape-&gt;DebugString())<SUB>10</SUB>> ]
"68719476746" [label = <(IDENTIFIER,new_shape,new_shape-&gt;DebugString())<SUB>10</SUB>> ]
"90194313222" [label = <(LITERAL,&quot; which is not a constant&quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has sh...)<SUB>11</SUB>> ]
"94489280513" [label = <(LOCAL,TensorVector outputs: TensorVector)<SUB>13</SUB>> ]
"94489280515" [label = <(LOCAL,auto outputs_cleanup: auto)<SUB>14</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,outputs_cleanup = gtl::MakeCleanup([&amp;outputs] {...)<SUB>14</SUB>> ]
"68719476747" [label = <(IDENTIFIER,outputs_cleanup,outputs_cleanup = gtl::MakeCleanup([&amp;outputs] {...)<SUB>14</SUB>> ]
"30064771090" [label = <(MakeCleanup,gtl::MakeCleanup([&amp;outputs] {
    for (const au...)<SUB>14</SUB>> ]
"124554051584" [label = <(METHOD_REF,[&amp;outputs] {
    for (const auto&amp; output : outp...,gtl::MakeCleanup([&amp;outputs] {
    for (const au...)<SUB>14</SUB>> ]
"94489280516" [label = <(LOCAL,Status s: Status)<SUB>20</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,s = EvaluateNode(*new_shape, TensorVector(), &amp;o...)<SUB>20</SUB>> ]
"68719476748" [label = <(IDENTIFIER,s,s = EvaluateNode(*new_shape, TensorVector(), &amp;o...)<SUB>20</SUB>> ]
"30064771092" [label = <(EvaluateNode,EvaluateNode(*new_shape, TensorVector(), &amp;outputs))<SUB>20</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.indirection,*new_shape)<SUB>20</SUB>> ]
"68719476749" [label = <(IDENTIFIER,new_shape,EvaluateNode(*new_shape, TensorVector(), &amp;outputs))<SUB>20</SUB>> ]
"30064771094" [label = <(TensorVector,TensorVector())<SUB>20</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.addressOf,&amp;outputs)<SUB>20</SUB>> ]
"68719476750" [label = <(IDENTIFIER,outputs,EvaluateNode(*new_shape, TensorVector(), &amp;outputs))<SUB>20</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (!s.ok()))<SUB>21</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.logicalNot,!s.ok())<SUB>21</SUB>> ]
"30064771097" [label = <(ok,s.ok())<SUB>21</SUB>> ]
"68719476751" [label = <(IDENTIFIER,s,s.ok())<SUB>21</SUB>> ]
"25769803782" [label = <(BLOCK,{
    return errors::Internal(&quot;Could not evalua...,{
    return errors::Internal(&quot;Could not evalua...)<SUB>21</SUB>> ]
"146028888066" [label = <(RETURN,return errors::Internal(&quot;Could not evaluate nod...,return errors::Internal(&quot;Could not evaluate nod...)<SUB>22</SUB>> ]
"30064771098" [label = <(Internal,errors::Internal(&quot;Could not evaluate node &quot;, no...)<SUB>22</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;Could not evaluate node &quot;,errors::Internal(&quot;Could not evaluate node &quot;, no...)<SUB>22</SUB>> ]
"30064771099" [label = <(name,node.name())<SUB>22</SUB>> ]
"68719476752" [label = <(IDENTIFIER,node,node.name())<SUB>22</SUB>> ]
"30064771100" [label = <(CHECK_EQ,CHECK_EQ(1, outputs.size()))<SUB>24</SUB>> ]
"90194313224" [label = <(LITERAL,1,CHECK_EQ(1, outputs.size()))<SUB>24</SUB>> ]
"30064771101" [label = <(size,outputs.size())<SUB>24</SUB>> ]
"68719476753" [label = <(IDENTIFIER,outputs,outputs.size())<SUB>24</SUB>> ]
"94489280517" [label = <(LOCAL,conststd.vector&lt;OpInfo.TensorProperties&gt;&amp; props: std.vector&lt;OpInfo.TensorProperties&gt;&amp;)<SUB>26</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,&amp; props =
      properties.GetInputProperties(n...)<SUB>26</SUB>> ]
"68719476754" [label = <(IDENTIFIER,props,&amp; props =
      properties.GetInputProperties(n...)<SUB>26</SUB>> ]
"30064771103" [label = <(GetInputProperties,properties.GetInputProperties(node.name()))<SUB>27</SUB>> ]
"68719476755" [label = <(IDENTIFIER,properties,properties.GetInputProperties(node.name()))<SUB>27</SUB>> ]
"30064771104" [label = <(name,node.name())<SUB>27</SUB>> ]
"68719476756" [label = <(IDENTIFIER,node,node.name())<SUB>27</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (props.empty()))<SUB>28</SUB>> ]
"30064771105" [label = <(empty,props.empty())<SUB>28</SUB>> ]
"68719476757" [label = <(IDENTIFIER,props,props.empty())<SUB>28</SUB>> ]
"25769803783" [label = <(BLOCK,{
    return errors::Internal(&quot;Node &quot;, node.nam...,{
    return errors::Internal(&quot;Node &quot;, node.nam...)<SUB>28</SUB>> ]
"146028888067" [label = <(RETURN,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...)<SUB>29</SUB>> ]
"30064771106" [label = <(Internal,errors::Internal(&quot;Node &quot;, node.name(), &quot; has no...)<SUB>29</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;Node &quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has no...)<SUB>29</SUB>> ]
"30064771107" [label = <(name,node.name())<SUB>29</SUB>> ]
"68719476758" [label = <(IDENTIFIER,node,node.name())<SUB>29</SUB>> ]
"90194313226" [label = <(LITERAL,&quot; has no properties&quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has no...)<SUB>29</SUB>> ]
"94489280518" [label = <(LOCAL,constOpInfo.TensorProperties&amp; prop: OpInfo.TensorProperties&amp;)<SUB>31</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.assignment,&amp; prop = props[0])<SUB>31</SUB>> ]
"68719476759" [label = <(IDENTIFIER,prop,&amp; prop = props[0])<SUB>31</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.indirectIndexAccess,props[0])<SUB>31</SUB>> ]
"68719476760" [label = <(IDENTIFIER,props,&amp; prop = props[0])<SUB>31</SUB>> ]
"90194313227" [label = <(LITERAL,0,&amp; prop = props[0])<SUB>31</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (prop.dtype() == DT_INVALID))<SUB>32</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.equals,prop.dtype() == DT_INVALID)<SUB>32</SUB>> ]
"30064771111" [label = <(dtype,prop.dtype())<SUB>32</SUB>> ]
"68719476761" [label = <(IDENTIFIER,prop,prop.dtype())<SUB>32</SUB>> ]
"68719476762" [label = <(IDENTIFIER,DT_INVALID,prop.dtype() == DT_INVALID)<SUB>32</SUB>> ]
"25769803784" [label = <(BLOCK,{
    return errors::Internal(&quot;Node &quot;, node.nam...,{
    return errors::Internal(&quot;Node &quot;, node.nam...)<SUB>32</SUB>> ]
"146028888068" [label = <(RETURN,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...)<SUB>33</SUB>> ]
"30064771112" [label = <(Internal,errors::Internal(&quot;Node &quot;, node.name(), &quot; has pr...)<SUB>33</SUB>> ]
"90194313228" [label = <(LITERAL,&quot;Node &quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has pr...)<SUB>33</SUB>> ]
"30064771113" [label = <(name,node.name())<SUB>33</SUB>> ]
"68719476763" [label = <(IDENTIFIER,node,node.name())<SUB>33</SUB>> ]
"90194313229" [label = <(LITERAL,&quot; has property &quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has pr...)<SUB>33</SUB>> ]
"30064771114" [label = <(DebugString,prop.DebugString())<SUB>34</SUB>> ]
"68719476764" [label = <(IDENTIFIER,prop,prop.DebugString())<SUB>34</SUB>> ]
"90194313230" [label = <(LITERAL,&quot; with invalid dtype&quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has pr...)<SUB>34</SUB>> ]
"94489280519" [label = <(LOCAL,const PartialTensorShape shape: PartialTensorShape)<SUB>36</SUB>> ]
"30064771115" [label = <(shape,shape(prop.shape()))<SUB>36</SUB>> ]
"30064771116" [label = <(shape,prop.shape())<SUB>36</SUB>> ]
"68719476765" [label = <(IDENTIFIER,prop,prop.shape())<SUB>36</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (!shape.IsFullyDefined()))<SUB>37</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.logicalNot,!shape.IsFullyDefined())<SUB>37</SUB>> ]
"30064771118" [label = <(IsFullyDefined,shape.IsFullyDefined())<SUB>37</SUB>> ]
"68719476766" [label = <(IDENTIFIER,shape,shape.IsFullyDefined())<SUB>37</SUB>> ]
"25769803785" [label = <(BLOCK,{
    return errors::Internal(&quot;Node &quot;, node.nam...,{
    return errors::Internal(&quot;Node &quot;, node.nam...)<SUB>37</SUB>> ]
"146028888069" [label = <(RETURN,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...,return errors::Internal(&quot;Node &quot;, node.name(), &quot;...)<SUB>38</SUB>> ]
"30064771119" [label = <(Internal,errors::Internal(&quot;Node &quot;, node.name(), &quot; has pr...)<SUB>38</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;Node &quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has pr...)<SUB>38</SUB>> ]
"30064771120" [label = <(name,node.name())<SUB>38</SUB>> ]
"68719476767" [label = <(IDENTIFIER,node,node.name())<SUB>38</SUB>> ]
"90194313232" [label = <(LITERAL,&quot; has property &quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has pr...)<SUB>38</SUB>> ]
"30064771121" [label = <(DebugString,prop.DebugString())<SUB>39</SUB>> ]
"68719476768" [label = <(IDENTIFIER,prop,prop.DebugString())<SUB>39</SUB>> ]
"90194313233" [label = <(LITERAL,&quot; with shape &quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has pr...)<SUB>39</SUB>> ]
"30064771122" [label = <(DebugString,shape.DebugString())<SUB>40</SUB>> ]
"68719476769" [label = <(IDENTIFIER,shape,shape.DebugString())<SUB>40</SUB>> ]
"90194313234" [label = <(LITERAL,&quot; which is not fully defined&quot;,errors::Internal(&quot;Node &quot;, node.name(), &quot; has pr...)<SUB>40</SUB>> ]
"94489280520" [label = <(LOCAL,PartialTensorShape new_dims: PartialTensorShape)<SUB>43</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (outputs[0]-&gt;dtype() == DT_INT32))<SUB>44</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.equals,outputs[0]-&gt;dtype() == DT_INT32)<SUB>44</SUB>> ]
"30064771124" [label = <(dtype,outputs[0]-&gt;dtype())<SUB>44</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.indirectIndexAccess,outputs[0])<SUB>44</SUB>> ]
"68719476770" [label = <(IDENTIFIER,outputs,outputs[0]-&gt;dtype())<SUB>44</SUB>> ]
"90194313235" [label = <(LITERAL,0,outputs[0]-&gt;dtype())<SUB>44</SUB>> ]
"68719476771" [label = <(IDENTIFIER,DT_INT32,outputs[0]-&gt;dtype() == DT_INT32)<SUB>44</SUB>> ]
"25769803786" [label = <(BLOCK,{
    std::vector&lt;int32&gt; shp;
    for (int i = ...,{
    std::vector&lt;int32&gt; shp;
    for (int i = ...)<SUB>44</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;int32&gt; shp)<SUB>45</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;int32)<SUB>45</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>45</SUB>> ]
"68719476772" [label = <(IDENTIFIER,std,std::vector&lt;int32)<SUB>45</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>45</SUB>> ]
"68719476773" [label = <(IDENTIFIER,int32,std::vector&lt;int32)<SUB>45</SUB>> ]
"68719476774" [label = <(IDENTIFIER,shp,std::vector&lt;int32&gt; shp)<SUB>45</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; outputs[0]-&gt;NumElements();++i))<SUB>46</SUB>> ]
"25769803787" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>> ]
"94489280521" [label = <(LOCAL,int i: int)<SUB>46</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>46</SUB>> ]
"68719476775" [label = <(IDENTIFIER,i,i = 0)<SUB>46</SUB>> ]
"90194313236" [label = <(LITERAL,0,i = 0)<SUB>46</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.lessThan,i &lt; outputs[0]-&gt;NumElements())<SUB>46</SUB>> ]
"68719476776" [label = <(IDENTIFIER,i,i &lt; outputs[0]-&gt;NumElements())<SUB>46</SUB>> ]
"30064771131" [label = <(NumElements,outputs[0]-&gt;NumElements())<SUB>46</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.indirectIndexAccess,outputs[0])<SUB>46</SUB>> ]
"68719476777" [label = <(IDENTIFIER,outputs,outputs[0]-&gt;NumElements())<SUB>46</SUB>> ]
"90194313237" [label = <(LITERAL,0,outputs[0]-&gt;NumElements())<SUB>46</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>46</SUB>> ]
"68719476778" [label = <(IDENTIFIER,i,++i)<SUB>46</SUB>> ]
"25769803788" [label = <(BLOCK,{
      int32_t dim = outputs[0]-&gt;flat&lt;int32&gt;()...,{
      int32_t dim = outputs[0]-&gt;flat&lt;int32&gt;()...)<SUB>46</SUB>> ]
"94489280522" [label = <(LOCAL,int32_t dim: int32_t)<SUB>47</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.assignment,dim = outputs[0]-&gt;flat&lt;int32&gt;()(i))<SUB>47</SUB>> ]
"68719476779" [label = <(IDENTIFIER,dim,dim = outputs[0]-&gt;flat&lt;int32&gt;()(i))<SUB>47</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;(),outputs[0]-&gt;flat&lt;int32&gt;()(i))<SUB>47</SUB>> ]
"30064771136" [label = <(flat&lt;int32&gt;,outputs[0]-&gt;flat&lt;int32&gt;())<SUB>47</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.indirectIndexAccess,outputs[0])<SUB>47</SUB>> ]
"68719476780" [label = <(IDENTIFIER,outputs,outputs[0]-&gt;flat&lt;int32&gt;())<SUB>47</SUB>> ]
"90194313238" [label = <(LITERAL,0,outputs[0]-&gt;flat&lt;int32&gt;())<SUB>47</SUB>> ]
"68719476781" [label = <(IDENTIFIER,i,outputs[0]-&gt;flat&lt;int32&gt;()(i))<SUB>47</SUB>> ]
"30064771138" [label = <(push_back,shp.push_back(dim))<SUB>48</SUB>> ]
"68719476782" [label = <(IDENTIFIER,shp,shp.push_back(dim))<SUB>48</SUB>> ]
"68719476783" [label = <(IDENTIFIER,dim,shp.push_back(dim))<SUB>48</SUB>> ]
"30064771139" [label = <(TF_CHECK_OK,TF_CHECK_OK(TensorShapeUtils::MakeShape(shp, &amp;n...)<SUB>50</SUB>> ]
"30064771140" [label = <(MakeShape,TensorShapeUtils::MakeShape(shp, &amp;new_dims))<SUB>50</SUB>> ]
"68719476784" [label = <(IDENTIFIER,shp,TensorShapeUtils::MakeShape(shp, &amp;new_dims))<SUB>50</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.addressOf,&amp;new_dims)<SUB>50</SUB>> ]
"68719476785" [label = <(IDENTIFIER,new_dims,TensorShapeUtils::MakeShape(shp, &amp;new_dims))<SUB>50</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>51</SUB>> ]
"25769803789" [label = <(BLOCK,{
    std::vector&lt;int64_t&gt; shp;
    for (int i ...,{
    std::vector&lt;int64_t&gt; shp;
    for (int i ...)<SUB>51</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;int64_t&gt; shp)<SUB>52</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;int64_t)<SUB>52</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>52</SUB>> ]
"68719476786" [label = <(IDENTIFIER,std,std::vector&lt;int64_t)<SUB>52</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>52</SUB>> ]
"68719476787" [label = <(IDENTIFIER,int64_t,std::vector&lt;int64_t)<SUB>52</SUB>> ]
"68719476788" [label = <(IDENTIFIER,shp,std::vector&lt;int64_t&gt; shp)<SUB>52</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; outputs[0]-&gt;NumElements();++i))<SUB>53</SUB>> ]
"25769803790" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>> ]
"94489280523" [label = <(LOCAL,int i: int)<SUB>53</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>53</SUB>> ]
"68719476789" [label = <(IDENTIFIER,i,i = 0)<SUB>53</SUB>> ]
"90194313239" [label = <(LITERAL,0,i = 0)<SUB>53</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.lessThan,i &lt; outputs[0]-&gt;NumElements())<SUB>53</SUB>> ]
"68719476790" [label = <(IDENTIFIER,i,i &lt; outputs[0]-&gt;NumElements())<SUB>53</SUB>> ]
"30064771147" [label = <(NumElements,outputs[0]-&gt;NumElements())<SUB>53</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.indirectIndexAccess,outputs[0])<SUB>53</SUB>> ]
"68719476791" [label = <(IDENTIFIER,outputs,outputs[0]-&gt;NumElements())<SUB>53</SUB>> ]
"90194313240" [label = <(LITERAL,0,outputs[0]-&gt;NumElements())<SUB>53</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>53</SUB>> ]
"68719476792" [label = <(IDENTIFIER,i,++i)<SUB>53</SUB>> ]
"25769803791" [label = <(BLOCK,{
      int64_t dim = outputs[0]-&gt;flat&lt;int64_t&gt;...,{
      int64_t dim = outputs[0]-&gt;flat&lt;int64_t&gt;...)<SUB>53</SUB>> ]
"94489280524" [label = <(LOCAL,int64_t dim: int64_t)<SUB>54</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.assignment,dim = outputs[0]-&gt;flat&lt;int64_t&gt;()(i))<SUB>54</SUB>> ]
"68719476793" [label = <(IDENTIFIER,dim,dim = outputs[0]-&gt;flat&lt;int64_t&gt;()(i))<SUB>54</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;(),outputs[0]-&gt;flat&lt;int64_t&gt;()(i))<SUB>54</SUB>> ]
"30064771152" [label = <(flat&lt;int64_t&gt;,outputs[0]-&gt;flat&lt;int64_t&gt;())<SUB>54</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.indirectIndexAccess,outputs[0])<SUB>54</SUB>> ]
"68719476794" [label = <(IDENTIFIER,outputs,outputs[0]-&gt;flat&lt;int64_t&gt;())<SUB>54</SUB>> ]
"90194313241" [label = <(LITERAL,0,outputs[0]-&gt;flat&lt;int64_t&gt;())<SUB>54</SUB>> ]
"68719476795" [label = <(IDENTIFIER,i,outputs[0]-&gt;flat&lt;int64_t&gt;()(i))<SUB>54</SUB>> ]
"30064771154" [label = <(push_back,shp.push_back(dim))<SUB>55</SUB>> ]
"68719476796" [label = <(IDENTIFIER,shp,shp.push_back(dim))<SUB>55</SUB>> ]
"68719476797" [label = <(IDENTIFIER,dim,shp.push_back(dim))<SUB>55</SUB>> ]
"30064771155" [label = <(TF_CHECK_OK,TF_CHECK_OK(TensorShapeUtils::MakeShape(shp, &amp;n...)<SUB>57</SUB>> ]
"30064771156" [label = <(MakeShape,TensorShapeUtils::MakeShape(shp, &amp;new_dims))<SUB>57</SUB>> ]
"68719476798" [label = <(IDENTIFIER,shp,TensorShapeUtils::MakeShape(shp, &amp;new_dims))<SUB>57</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.addressOf,&amp;new_dims)<SUB>57</SUB>> ]
"68719476799" [label = <(IDENTIFIER,new_dims,TensorShapeUtils::MakeShape(shp, &amp;new_dims))<SUB>57</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,IF,if (!shape.IsCompatibleWith(new_dims)))<SUB>60</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.logicalNot,!shape.IsCompatibleWith(new_dims))<SUB>60</SUB>> ]
"30064771159" [label = <(IsCompatibleWith,shape.IsCompatibleWith(new_dims))<SUB>60</SUB>> ]
"68719476800" [label = <(IDENTIFIER,shape,shape.IsCompatibleWith(new_dims))<SUB>60</SUB>> ]
"68719476801" [label = <(IDENTIFIER,new_dims,shape.IsCompatibleWith(new_dims))<SUB>60</SUB>> ]
"25769803792" [label = <(BLOCK,{
    return errors::Internal(&quot;Expected shape &quot;...,{
    return errors::Internal(&quot;Expected shape &quot;...)<SUB>60</SUB>> ]
"146028888070" [label = <(RETURN,return errors::Internal(&quot;Expected shape &quot;, shap...,return errors::Internal(&quot;Expected shape &quot;, shap...)<SUB>61</SUB>> ]
"30064771160" [label = <(Internal,errors::Internal(&quot;Expected shape &quot;, shape.Debug...)<SUB>61</SUB>> ]
"90194313242" [label = <(LITERAL,&quot;Expected shape &quot;,errors::Internal(&quot;Expected shape &quot;, shape.Debug...)<SUB>61</SUB>> ]
"30064771161" [label = <(DebugString,shape.DebugString())<SUB>61</SUB>> ]
"68719476802" [label = <(IDENTIFIER,shape,shape.DebugString())<SUB>61</SUB>> ]
"90194313243" [label = <(LITERAL,&quot;to be compatible with &quot;,errors::Internal(&quot;Expected shape &quot;, shape.Debug...)<SUB>62</SUB>> ]
"30064771162" [label = <(DebugString,new_dims.DebugString())<SUB>62</SUB>> ]
"68719476803" [label = <(IDENTIFIER,new_dims,new_dims.DebugString())<SUB>62</SUB>> ]
"146028888071" [label = <(RETURN,return Status::OK();,return Status::OK();)<SUB>65</SUB>> ]
"30064771163" [label = <(OK,Status::OK())<SUB>65</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149698" -> "115964116992"  [ label = "AST: "] 
  "111669149698" -> "115964116993"  [ label = "AST: "] 
  "111669149698" -> "25769803779"  [ label = "AST: "] 
  "111669149698" -> "128849018881"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "25769803779" -> "30064771078"  [ label = "AST: "] 
  "25769803779" -> "94489280514"  [ label = "AST: "] 
  "25769803779" -> "30064771080"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "25769803779" -> "94489280513"  [ label = "AST: "] 
  "25769803779" -> "94489280515"  [ label = "AST: "] 
  "25769803779" -> "30064771089"  [ label = "AST: "] 
  "25769803779" -> "94489280516"  [ label = "AST: "] 
  "25769803779" -> "30064771091"  [ label = "AST: "] 
  "25769803779" -> "47244640259"  [ label = "AST: "] 
  "25769803779" -> "30064771100"  [ label = "AST: "] 
  "25769803779" -> "94489280517"  [ label = "AST: "] 
  "25769803779" -> "30064771102"  [ label = "AST: "] 
  "25769803779" -> "47244640260"  [ label = "AST: "] 
  "25769803779" -> "94489280518"  [ label = "AST: "] 
  "25769803779" -> "30064771108"  [ label = "AST: "] 
  "25769803779" -> "47244640261"  [ label = "AST: "] 
  "25769803779" -> "94489280519"  [ label = "AST: "] 
  "25769803779" -> "30064771115"  [ label = "AST: "] 
  "25769803779" -> "47244640262"  [ label = "AST: "] 
  "25769803779" -> "94489280520"  [ label = "AST: "] 
  "25769803779" -> "47244640263"  [ label = "AST: "] 
  "25769803779" -> "47244640267"  [ label = "AST: "] 
  "25769803779" -> "146028888071"  [ label = "AST: "] 
  "47244640257" -> "30064771074"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "25769803780" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "90194313216"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "90194313217"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476740"  [ label = "AST: "] 
  "30064771080" -> "68719476741"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476742"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476743"  [ label = "AST: "] 
  "30064771082" -> "90194313219"  [ label = "AST: "] 
  "47244640258" -> "30064771083"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476744"  [ label = "AST: "] 
  "25769803781" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "90194313220"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "90194313221"  [ label = "AST: "] 
  "30064771086" -> "30064771088"  [ label = "AST: "] 
  "30064771086" -> "90194313222"  [ label = "AST: "] 
  "30064771087" -> "68719476745"  [ label = "AST: "] 
  "30064771088" -> "68719476746"  [ label = "AST: "] 
  "30064771089" -> "68719476747"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "124554051584"  [ label = "AST: "] 
  "30064771091" -> "68719476748"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "30064771094"  [ label = "AST: "] 
  "30064771092" -> "30064771095"  [ label = "AST: "] 
  "30064771093" -> "68719476749"  [ label = "AST: "] 
  "30064771095" -> "68719476750"  [ label = "AST: "] 
  "47244640259" -> "30064771096"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476751"  [ label = "AST: "] 
  "25769803782" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "90194313223"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476752"  [ label = "AST: "] 
  "30064771100" -> "90194313224"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "68719476753"  [ label = "AST: "] 
  "30064771102" -> "68719476754"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476755"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476756"  [ label = "AST: "] 
  "47244640260" -> "30064771105"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "30064771105" -> "68719476757"  [ label = "AST: "] 
  "25769803783" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "90194313225"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "90194313226"  [ label = "AST: "] 
  "30064771107" -> "68719476758"  [ label = "AST: "] 
  "30064771108" -> "68719476759"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "68719476760"  [ label = "AST: "] 
  "30064771109" -> "90194313227"  [ label = "AST: "] 
  "47244640261" -> "30064771110"  [ label = "AST: "] 
  "47244640261" -> "25769803784"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771110" -> "68719476762"  [ label = "AST: "] 
  "30064771111" -> "68719476761"  [ label = "AST: "] 
  "25769803784" -> "146028888068"  [ label = "AST: "] 
  "146028888068" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "90194313228"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771112" -> "90194313229"  [ label = "AST: "] 
  "30064771112" -> "30064771114"  [ label = "AST: "] 
  "30064771112" -> "90194313230"  [ label = "AST: "] 
  "30064771113" -> "68719476763"  [ label = "AST: "] 
  "30064771114" -> "68719476764"  [ label = "AST: "] 
  "30064771115" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "68719476765"  [ label = "AST: "] 
  "47244640262" -> "30064771117"  [ label = "AST: "] 
  "47244640262" -> "25769803785"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771118" -> "68719476766"  [ label = "AST: "] 
  "25769803785" -> "146028888069"  [ label = "AST: "] 
  "146028888069" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "90194313231"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771119" -> "90194313232"  [ label = "AST: "] 
  "30064771119" -> "30064771121"  [ label = "AST: "] 
  "30064771119" -> "90194313233"  [ label = "AST: "] 
  "30064771119" -> "30064771122"  [ label = "AST: "] 
  "30064771119" -> "90194313234"  [ label = "AST: "] 
  "30064771120" -> "68719476767"  [ label = "AST: "] 
  "30064771121" -> "68719476768"  [ label = "AST: "] 
  "30064771122" -> "68719476769"  [ label = "AST: "] 
  "47244640263" -> "30064771123"  [ label = "AST: "] 
  "47244640263" -> "25769803786"  [ label = "AST: "] 
  "47244640263" -> "47244640265"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771123" -> "68719476771"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771125" -> "68719476770"  [ label = "AST: "] 
  "30064771125" -> "90194313235"  [ label = "AST: "] 
  "25769803786" -> "30064771126"  [ label = "AST: "] 
  "25769803786" -> "47244640264"  [ label = "AST: "] 
  "25769803786" -> "30064771139"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771126" -> "68719476774"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771127" -> "68719476773"  [ label = "AST: "] 
  "30064771128" -> "68719476772"  [ label = "AST: "] 
  "30064771128" -> "55834574849"  [ label = "AST: "] 
  "47244640264" -> "25769803787"  [ label = "AST: "] 
  "47244640264" -> "30064771130"  [ label = "AST: "] 
  "47244640264" -> "30064771133"  [ label = "AST: "] 
  "47244640264" -> "25769803788"  [ label = "AST: "] 
  "25769803787" -> "94489280521"  [ label = "AST: "] 
  "25769803787" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "68719476775"  [ label = "AST: "] 
  "30064771129" -> "90194313236"  [ label = "AST: "] 
  "30064771130" -> "68719476776"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771132" -> "68719476777"  [ label = "AST: "] 
  "30064771132" -> "90194313237"  [ label = "AST: "] 
  "30064771133" -> "68719476778"  [ label = "AST: "] 
  "25769803788" -> "94489280522"  [ label = "AST: "] 
  "25769803788" -> "30064771134"  [ label = "AST: "] 
  "25769803788" -> "30064771138"  [ label = "AST: "] 
  "30064771134" -> "68719476779"  [ label = "AST: "] 
  "30064771134" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771135" -> "68719476781"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771137" -> "68719476780"  [ label = "AST: "] 
  "30064771137" -> "90194313238"  [ label = "AST: "] 
  "30064771138" -> "68719476782"  [ label = "AST: "] 
  "30064771138" -> "68719476783"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771140" -> "68719476784"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771141" -> "68719476785"  [ label = "AST: "] 
  "47244640265" -> "25769803789"  [ label = "AST: "] 
  "25769803789" -> "30064771142"  [ label = "AST: "] 
  "25769803789" -> "47244640266"  [ label = "AST: "] 
  "25769803789" -> "30064771155"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771142" -> "68719476788"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771143" -> "68719476787"  [ label = "AST: "] 
  "30064771144" -> "68719476786"  [ label = "AST: "] 
  "30064771144" -> "55834574850"  [ label = "AST: "] 
  "47244640266" -> "25769803790"  [ label = "AST: "] 
  "47244640266" -> "30064771146"  [ label = "AST: "] 
  "47244640266" -> "30064771149"  [ label = "AST: "] 
  "47244640266" -> "25769803791"  [ label = "AST: "] 
  "25769803790" -> "94489280523"  [ label = "AST: "] 
  "25769803790" -> "30064771145"  [ label = "AST: "] 
  "30064771145" -> "68719476789"  [ label = "AST: "] 
  "30064771145" -> "90194313239"  [ label = "AST: "] 
  "30064771146" -> "68719476790"  [ label = "AST: "] 
  "30064771146" -> "30064771147"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771148" -> "68719476791"  [ label = "AST: "] 
  "30064771148" -> "90194313240"  [ label = "AST: "] 
  "30064771149" -> "68719476792"  [ label = "AST: "] 
  "25769803791" -> "94489280524"  [ label = "AST: "] 
  "25769803791" -> "30064771150"  [ label = "AST: "] 
  "25769803791" -> "30064771154"  [ label = "AST: "] 
  "30064771150" -> "68719476793"  [ label = "AST: "] 
  "30064771150" -> "30064771151"  [ label = "AST: "] 
  "30064771151" -> "30064771152"  [ label = "AST: "] 
  "30064771151" -> "68719476795"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771153" -> "68719476794"  [ label = "AST: "] 
  "30064771153" -> "90194313241"  [ label = "AST: "] 
  "30064771154" -> "68719476796"  [ label = "AST: "] 
  "30064771154" -> "68719476797"  [ label = "AST: "] 
  "30064771155" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "68719476798"  [ label = "AST: "] 
  "30064771156" -> "30064771157"  [ label = "AST: "] 
  "30064771157" -> "68719476799"  [ label = "AST: "] 
  "47244640267" -> "30064771158"  [ label = "AST: "] 
  "47244640267" -> "25769803792"  [ label = "AST: "] 
  "30064771158" -> "30064771159"  [ label = "AST: "] 
  "30064771159" -> "68719476800"  [ label = "AST: "] 
  "30064771159" -> "68719476801"  [ label = "AST: "] 
  "25769803792" -> "146028888070"  [ label = "AST: "] 
  "146028888070" -> "30064771160"  [ label = "AST: "] 
  "30064771160" -> "90194313242"  [ label = "AST: "] 
  "30064771160" -> "30064771161"  [ label = "AST: "] 
  "30064771160" -> "90194313243"  [ label = "AST: "] 
  "30064771160" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "68719476802"  [ label = "AST: "] 
  "30064771162" -> "68719476803"  [ label = "AST: "] 
  "146028888071" -> "30064771163"  [ label = "AST: "] 
  "30064771078" -> "30064771082"  [ label = "CFG: "] 
  "30064771080" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "30064771093"  [ label = "CFG: "] 
  "30064771091" -> "30064771097"  [ label = "CFG: "] 
  "30064771100" -> "30064771104"  [ label = "CFG: "] 
  "30064771102" -> "30064771105"  [ label = "CFG: "] 
  "30064771108" -> "30064771111"  [ label = "CFG: "] 
  "30064771115" -> "30064771118"  [ label = "CFG: "] 
  "146028888071" -> "128849018881"  [ label = "CFG: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771074" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771087"  [ label = "CFG: "] 
  "30064771083" -> "124554051584"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771096" -> "30064771099"  [ label = "CFG: "] 
  "30064771096" -> "30064771101"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771105" -> "30064771107"  [ label = "CFG: "] 
  "30064771105" -> "30064771109"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "30064771110" -> "30064771113"  [ label = "CFG: "] 
  "30064771110" -> "30064771116"  [ label = "CFG: "] 
  "30064771116" -> "30064771115"  [ label = "CFG: "] 
  "30064771117" -> "30064771120"  [ label = "CFG: "] 
  "30064771117" -> "30064771125"  [ label = "CFG: "] 
  "30064771123" -> "55834574849"  [ label = "CFG: "] 
  "30064771123" -> "55834574850"  [ label = "CFG: "] 
  "30064771158" -> "30064771163"  [ label = "CFG: "] 
  "30064771158" -> "30064771161"  [ label = "CFG: "] 
  "30064771163" -> "146028888071"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "146028888065" -> "128849018881"  [ label = "CFG: "] 
  "124554051584" -> "30064771090"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771095" -> "30064771092"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "146028888066" -> "128849018881"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "146028888067" -> "128849018881"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "146028888068" -> "128849018881"  [ label = "CFG: "] 
  "30064771118" -> "30064771117"  [ label = "CFG: "] 
  "146028888069" -> "128849018881"  [ label = "CFG: "] 
  "30064771124" -> "30064771123"  [ label = "CFG: "] 
  "30064771126" -> "30064771129"  [ label = "CFG: "] 
  "30064771139" -> "30064771159"  [ label = "CFG: "] 
  "30064771159" -> "30064771158"  [ label = "CFG: "] 
  "146028888070" -> "128849018881"  [ label = "CFG: "] 
  "30064771076" -> "146028888064"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "146028888065"  [ label = "CFG: "] 
  "30064771098" -> "146028888066"  [ label = "CFG: "] 
  "30064771106" -> "146028888067"  [ label = "CFG: "] 
  "30064771112" -> "146028888068"  [ label = "CFG: "] 
  "30064771119" -> "146028888069"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771130" -> "30064771137"  [ label = "CFG: "] 
  "30064771130" -> "30064771141"  [ label = "CFG: "] 
  "30064771133" -> "30064771132"  [ label = "CFG: "] 
  "30064771140" -> "30064771139"  [ label = "CFG: "] 
  "30064771142" -> "30064771145"  [ label = "CFG: "] 
  "30064771155" -> "30064771159"  [ label = "CFG: "] 
  "30064771160" -> "146028888070"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771086"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771114" -> "30064771112"  [ label = "CFG: "] 
  "30064771120" -> "30064771121"  [ label = "CFG: "] 
  "30064771121" -> "30064771122"  [ label = "CFG: "] 
  "30064771122" -> "30064771119"  [ label = "CFG: "] 
  "30064771128" -> "30064771127"  [ label = "CFG: "] 
  "30064771129" -> "30064771132"  [ label = "CFG: "] 
  "30064771131" -> "30064771130"  [ label = "CFG: "] 
  "30064771134" -> "30064771138"  [ label = "CFG: "] 
  "30064771138" -> "30064771133"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "30064771143" -> "30064771142"  [ label = "CFG: "] 
  "30064771146" -> "30064771153"  [ label = "CFG: "] 
  "30064771146" -> "30064771157"  [ label = "CFG: "] 
  "30064771149" -> "30064771148"  [ label = "CFG: "] 
  "30064771156" -> "30064771155"  [ label = "CFG: "] 
  "30064771161" -> "30064771162"  [ label = "CFG: "] 
  "30064771162" -> "30064771160"  [ label = "CFG: "] 
  "55834574849" -> "30064771128"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "30064771135" -> "30064771134"  [ label = "CFG: "] 
  "30064771144" -> "30064771143"  [ label = "CFG: "] 
  "30064771145" -> "30064771148"  [ label = "CFG: "] 
  "30064771147" -> "30064771146"  [ label = "CFG: "] 
  "30064771150" -> "30064771154"  [ label = "CFG: "] 
  "30064771154" -> "30064771149"  [ label = "CFG: "] 
  "30064771157" -> "30064771156"  [ label = "CFG: "] 
  "30064771136" -> "30064771135"  [ label = "CFG: "] 
  "55834574850" -> "30064771144"  [ label = "CFG: "] 
  "30064771148" -> "30064771147"  [ label = "CFG: "] 
  "30064771151" -> "30064771150"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "30064771152" -> "30064771151"  [ label = "CFG: "] 
  "30064771153" -> "30064771152"  [ label = "CFG: "] 
  "111669149698" -> "30064771075"  [ label = "CFG: "] 
  "146028888071" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888069" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888070" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018881"  [ label = "DDG: properties"] 
  "30064771074" -> "128849018881"  [ label = "DDG: IsReshape(node)"] 
  "30064771074" -> "128849018881"  [ label = "DDG: !IsReshape(node)"] 
  "30064771077" -> "128849018881"  [ label = "DDG: node"] 
  "30064771076" -> "128849018881"  [ label = "DDG: node.name()"] 
  "30064771076" -> "128849018881"  [ label = "DDG: errors::Internal(&quot;Node &quot;, node.name(), &quot; is not a Reshape node&quot;)"] 
  "30064771127" -> "128849018881"  [ label = "DDG: int32"] 
  "30064771110" -> "128849018881"  [ label = "DDG: DT_INVALID"] 
  "30064771123" -> "128849018881"  [ label = "DDG: DT_INT32"] 
  "30064771081" -> "128849018881"  [ label = "DDG: node_map_"] 
  "30064771143" -> "128849018881"  [ label = "DDG: int64_t"] 
  "111669149698" -> "115964116992"  [ label = "DDG: "] 
  "111669149698" -> "115964116993"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: node_map_"] 
  "30064771081" -> "30064771080"  [ label = "DDG: node.input(1)"] 
  "30064771090" -> "30064771089"  [ label = "DDG: [&amp;outputs] {
    for (const auto&amp; output : outputs) {
      delete output.tensor;
    }
  }"] 
  "30064771092" -> "30064771091"  [ label = "DDG: *new_shape"] 
  "30064771092" -> "30064771091"  [ label = "DDG: TensorVector()"] 
  "30064771092" -> "30064771091"  [ label = "DDG: &amp;outputs"] 
  "30064771103" -> "30064771102"  [ label = "DDG: properties"] 
  "30064771103" -> "30064771102"  [ label = "DDG: node.name()"] 
  "30064771105" -> "30064771108"  [ label = "DDG: props"] 
  "30064771163" -> "146028888071"  [ label = "DDG: Status::OK()"] 
  "111669149698" -> "30064771078"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: node"] 
  "111669149698" -> "30064771100"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: outputs"] 
  "30064771116" -> "30064771115"  [ label = "DDG: prop"] 
  "111669149698" -> "30064771163"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: node"] 
  "30064771076" -> "146028888064"  [ label = "DDG: errors::Internal(&quot;Node &quot;, node.name(), &quot; is not a Reshape node&quot;)"] 
  "30064771075" -> "30064771079"  [ label = "DDG: node"] 
  "111669149698" -> "30064771079"  [ label = "DDG: "] 
  "111669149698" -> "30064771081"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: node"] 
  "30064771082" -> "30064771081"  [ label = "DDG: 1"] 
  "30064771084" -> "30064771083"  [ label = "DDG: *new_shape"] 
  "30064771086" -> "146028888065"  [ label = "DDG: errors::Internal(&quot;Node &quot;, node.name(), &quot; has shape &quot;,
                            new_shape-&gt;DebugString(),
                            &quot; which is not a constant&quot;)"] 
  "111669149698" -> "30064771090"  [ label = "DDG: "] 
  "30064771084" -> "30064771092"  [ label = "DDG: *new_shape"] 
  "111669149698" -> "30064771092"  [ label = "DDG: "] 
  "30064771097" -> "30064771096"  [ label = "DDG: s"] 
  "30064771098" -> "146028888066"  [ label = "DDG: errors::Internal(&quot;Could not evaluate node &quot;, node.name())"] 
  "30064771092" -> "30064771101"  [ label = "DDG: &amp;outputs"] 
  "111669149698" -> "30064771101"  [ label = "DDG: "] 
  "115964116993" -> "30064771103"  [ label = "DDG: properties"] 
  "111669149698" -> "30064771103"  [ label = "DDG: "] 
  "30064771104" -> "30064771103"  [ label = "DDG: node"] 
  "30064771102" -> "30064771105"  [ label = "DDG: props"] 
  "111669149698" -> "30064771105"  [ label = "DDG: "] 
  "30064771106" -> "146028888067"  [ label = "DDG: errors::Internal(&quot;Node &quot;, node.name(), &quot; has no properties&quot;)"] 
  "30064771111" -> "30064771110"  [ label = "DDG: prop"] 
  "111669149698" -> "30064771110"  [ label = "DDG: "] 
  "30064771112" -> "146028888068"  [ label = "DDG: errors::Internal(&quot;Node &quot;, node.name(), &quot; has property &quot;,
                            prop.DebugString(), &quot; with invalid dtype&quot;)"] 
  "30064771111" -> "30064771116"  [ label = "DDG: prop"] 
  "111669149698" -> "30064771116"  [ label = "DDG: "] 
  "30064771118" -> "30064771117"  [ label = "DDG: shape"] 
  "30064771119" -> "146028888069"  [ label = "DDG: errors::Internal(&quot;Node &quot;, node.name(), &quot; has property &quot;,
                            prop.DebugString(), &quot; with shape &quot;,
                            shape.DebugString(), &quot; which is not fully defined&quot;)"] 
  "30064771124" -> "30064771123"  [ label = "DDG: outputs[0]"] 
  "111669149698" -> "30064771123"  [ label = "DDG: "] 
  "30064771159" -> "30064771158"  [ label = "DDG: shape"] 
  "30064771159" -> "30064771158"  [ label = "DDG: new_dims"] 
  "30064771160" -> "146028888070"  [ label = "DDG: errors::Internal(&quot;Expected shape &quot;, shape.DebugString(),
                            &quot;to be compatible with &quot;, new_dims.DebugString())"] 
  "115964116992" -> "30064771075"  [ label = "DDG: node"] 
  "111669149698" -> "30064771075"  [ label = "DDG: "] 
  "30064771079" -> "30064771082"  [ label = "DDG: node"] 
  "111669149698" -> "30064771082"  [ label = "DDG: "] 
  "30064771091" -> "30064771097"  [ label = "DDG: s"] 
  "111669149698" -> "30064771097"  [ label = "DDG: "] 
  "30064771082" -> "30064771104"  [ label = "DDG: node"] 
  "111669149698" -> "30064771104"  [ label = "DDG: "] 
  "30064771108" -> "30064771111"  [ label = "DDG: prop"] 
  "111669149698" -> "30064771111"  [ label = "DDG: "] 
  "111669149698" -> "30064771118"  [ label = "DDG: "] 
  "30064771101" -> "30064771124"  [ label = "DDG: outputs"] 
  "30064771127" -> "30064771126"  [ label = "DDG: std::vector"] 
  "30064771127" -> "30064771126"  [ label = "DDG: int32"] 
  "111669149698" -> "30064771126"  [ label = "DDG: "] 
  "30064771140" -> "30064771139"  [ label = "DDG: shp"] 
  "30064771140" -> "30064771139"  [ label = "DDG: &amp;new_dims"] 
  "30064771118" -> "30064771159"  [ label = "DDG: shape"] 
  "111669149698" -> "30064771159"  [ label = "DDG: "] 
  "30064771156" -> "30064771159"  [ label = "DDG: &amp;new_dims"] 
  "30064771140" -> "30064771159"  [ label = "DDG: &amp;new_dims"] 
  "111669149698" -> "30064771076"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: node"] 
  "111669149698" -> "30064771086"  [ label = "DDG: "] 
  "30064771087" -> "30064771086"  [ label = "DDG: node"] 
  "30064771088" -> "30064771086"  [ label = "DDG: new_shape"] 
  "111669149698" -> "30064771098"  [ label = "DDG: "] 
  "30064771099" -> "30064771098"  [ label = "DDG: node"] 
  "111669149698" -> "30064771106"  [ label = "DDG: "] 
  "30064771107" -> "30064771106"  [ label = "DDG: node"] 
  "111669149698" -> "30064771112"  [ label = "DDG: "] 
  "30064771113" -> "30064771112"  [ label = "DDG: node"] 
  "30064771114" -> "30064771112"  [ label = "DDG: prop"] 
  "111669149698" -> "30064771119"  [ label = "DDG: "] 
  "30064771120" -> "30064771119"  [ label = "DDG: node"] 
  "30064771121" -> "30064771119"  [ label = "DDG: prop"] 
  "30064771122" -> "30064771119"  [ label = "DDG: shape"] 
  "111669149698" -> "30064771127"  [ label = "DDG: "] 
  "111669149698" -> "30064771129"  [ label = "DDG: "] 
  "30064771129" -> "30064771130"  [ label = "DDG: i"] 
  "30064771133" -> "30064771130"  [ label = "DDG: i"] 
  "111669149698" -> "30064771130"  [ label = "DDG: "] 
  "30064771131" -> "30064771130"  [ label = "DDG: outputs[0]"] 
  "30064771135" -> "30064771133"  [ label = "DDG: i"] 
  "111669149698" -> "30064771133"  [ label = "DDG: "] 
  "30064771135" -> "30064771134"  [ label = "DDG: outputs[0]-&gt;flat&lt;int32&gt;()"] 
  "30064771135" -> "30064771134"  [ label = "DDG: i"] 
  "30064771126" -> "30064771140"  [ label = "DDG: shp"] 
  "30064771138" -> "30064771140"  [ label = "DDG: shp"] 
  "111669149698" -> "30064771140"  [ label = "DDG: "] 
  "30064771143" -> "30064771142"  [ label = "DDG: std::vector"] 
  "30064771143" -> "30064771142"  [ label = "DDG: int64_t"] 
  "111669149698" -> "30064771142"  [ label = "DDG: "] 
  "30064771156" -> "30064771155"  [ label = "DDG: shp"] 
  "30064771156" -> "30064771155"  [ label = "DDG: &amp;new_dims"] 
  "111669149698" -> "30064771160"  [ label = "DDG: "] 
  "30064771161" -> "30064771160"  [ label = "DDG: shape"] 
  "30064771162" -> "30064771160"  [ label = "DDG: new_dims"] 
  "30064771075" -> "30064771077"  [ label = "DDG: node"] 
  "111669149698" -> "30064771077"  [ label = "DDG: "] 
  "30064771082" -> "30064771087"  [ label = "DDG: node"] 
  "111669149698" -> "30064771087"  [ label = "DDG: "] 
  "30064771080" -> "30064771088"  [ label = "DDG: new_shape"] 
  "30064771084" -> "30064771088"  [ label = "DDG: *new_shape"] 
  "111669149698" -> "30064771088"  [ label = "DDG: "] 
  "30064771082" -> "30064771099"  [ label = "DDG: node"] 
  "111669149698" -> "30064771099"  [ label = "DDG: "] 
  "30064771104" -> "30064771107"  [ label = "DDG: node"] 
  "111669149698" -> "30064771107"  [ label = "DDG: "] 
  "30064771104" -> "30064771113"  [ label = "DDG: node"] 
  "111669149698" -> "30064771113"  [ label = "DDG: "] 
  "30064771111" -> "30064771114"  [ label = "DDG: prop"] 
  "111669149698" -> "30064771114"  [ label = "DDG: "] 
  "30064771104" -> "30064771120"  [ label = "DDG: node"] 
  "111669149698" -> "30064771120"  [ label = "DDG: "] 
  "30064771116" -> "30064771121"  [ label = "DDG: prop"] 
  "111669149698" -> "30064771121"  [ label = "DDG: "] 
  "30064771118" -> "30064771122"  [ label = "DDG: shape"] 
  "111669149698" -> "30064771122"  [ label = "DDG: "] 
  "30064771101" -> "30064771131"  [ label = "DDG: outputs"] 
  "30064771124" -> "30064771131"  [ label = "DDG: outputs[0]"] 
  "30064771136" -> "30064771131"  [ label = "DDG: outputs[0]"] 
  "30064771126" -> "30064771138"  [ label = "DDG: shp"] 
  "111669149698" -> "30064771138"  [ label = "DDG: "] 
  "30064771134" -> "30064771138"  [ label = "DDG: dim"] 
  "111669149698" -> "30064771143"  [ label = "DDG: "] 
  "111669149698" -> "30064771145"  [ label = "DDG: "] 
  "30064771145" -> "30064771146"  [ label = "DDG: i"] 
  "30064771149" -> "30064771146"  [ label = "DDG: i"] 
  "111669149698" -> "30064771146"  [ label = "DDG: "] 
  "30064771147" -> "30064771146"  [ label = "DDG: outputs[0]"] 
  "30064771151" -> "30064771149"  [ label = "DDG: i"] 
  "111669149698" -> "30064771149"  [ label = "DDG: "] 
  "30064771151" -> "30064771150"  [ label = "DDG: outputs[0]-&gt;flat&lt;int64_t&gt;()"] 
  "30064771151" -> "30064771150"  [ label = "DDG: i"] 
  "30064771142" -> "30064771156"  [ label = "DDG: shp"] 
  "30064771154" -> "30064771156"  [ label = "DDG: shp"] 
  "111669149698" -> "30064771156"  [ label = "DDG: "] 
  "30064771159" -> "30064771161"  [ label = "DDG: shape"] 
  "111669149698" -> "30064771161"  [ label = "DDG: "] 
  "30064771156" -> "30064771162"  [ label = "DDG: &amp;new_dims"] 
  "30064771140" -> "30064771162"  [ label = "DDG: &amp;new_dims"] 
  "30064771159" -> "30064771162"  [ label = "DDG: new_dims"] 
  "111669149698" -> "30064771162"  [ label = "DDG: "] 
  "30064771136" -> "30064771135"  [ label = "DDG: outputs[0]"] 
  "30064771130" -> "30064771135"  [ label = "DDG: i"] 
  "111669149698" -> "30064771135"  [ label = "DDG: "] 
  "30064771101" -> "30064771147"  [ label = "DDG: outputs"] 
  "30064771124" -> "30064771147"  [ label = "DDG: outputs[0]"] 
  "30064771152" -> "30064771147"  [ label = "DDG: outputs[0]"] 
  "30064771142" -> "30064771154"  [ label = "DDG: shp"] 
  "111669149698" -> "30064771154"  [ label = "DDG: "] 
  "30064771150" -> "30064771154"  [ label = "DDG: dim"] 
  "30064771101" -> "30064771136"  [ label = "DDG: outputs"] 
  "30064771131" -> "30064771136"  [ label = "DDG: outputs[0]"] 
  "30064771152" -> "30064771151"  [ label = "DDG: outputs[0]"] 
  "30064771146" -> "30064771151"  [ label = "DDG: i"] 
  "111669149698" -> "30064771151"  [ label = "DDG: "] 
  "30064771101" -> "30064771152"  [ label = "DDG: outputs"] 
  "30064771147" -> "30064771152"  [ label = "DDG: outputs[0]"] 
  "30064771074" -> "30064771076"  [ label = "CDG: "] 
  "30064771074" -> "30064771077"  [ label = "CDG: "] 
  "30064771074" -> "30064771078"  [ label = "CDG: "] 
  "30064771074" -> "30064771079"  [ label = "CDG: "] 
  "30064771074" -> "30064771084"  [ label = "CDG: "] 
  "30064771074" -> "30064771085"  [ label = "CDG: "] 
  "30064771074" -> "30064771080"  [ label = "CDG: "] 
  "30064771074" -> "30064771081"  [ label = "CDG: "] 
  "30064771074" -> "30064771082"  [ label = "CDG: "] 
  "30064771074" -> "30064771083"  [ label = "CDG: "] 
  "30064771074" -> "146028888064"  [ label = "CDG: "] 
  "30064771083" -> "124554051584"  [ label = "CDG: "] 
  "30064771083" -> "30064771096"  [ label = "CDG: "] 
  "30064771083" -> "30064771097"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771087"  [ label = "CDG: "] 
  "30064771083" -> "30064771092"  [ label = "CDG: "] 
  "30064771083" -> "30064771093"  [ label = "CDG: "] 
  "30064771083" -> "30064771094"  [ label = "CDG: "] 
  "30064771083" -> "30064771095"  [ label = "CDG: "] 
  "30064771083" -> "30064771088"  [ label = "CDG: "] 
  "30064771083" -> "30064771089"  [ label = "CDG: "] 
  "30064771083" -> "30064771090"  [ label = "CDG: "] 
  "30064771083" -> "30064771091"  [ label = "CDG: "] 
  "30064771083" -> "146028888065"  [ label = "CDG: "] 
  "30064771096" -> "30064771100"  [ label = "CDG: "] 
  "30064771096" -> "30064771101"  [ label = "CDG: "] 
  "30064771096" -> "30064771102"  [ label = "CDG: "] 
  "30064771096" -> "30064771103"  [ label = "CDG: "] 
  "30064771096" -> "30064771098"  [ label = "CDG: "] 
  "30064771096" -> "30064771099"  [ label = "CDG: "] 
  "30064771096" -> "30064771104"  [ label = "CDG: "] 
  "30064771096" -> "30064771105"  [ label = "CDG: "] 
  "30064771096" -> "146028888066"  [ label = "CDG: "] 
  "30064771105" -> "30064771108"  [ label = "CDG: "] 
  "30064771105" -> "30064771109"  [ label = "CDG: "] 
  "30064771105" -> "30064771110"  [ label = "CDG: "] 
  "30064771105" -> "30064771111"  [ label = "CDG: "] 
  "30064771105" -> "30064771106"  [ label = "CDG: "] 
  "30064771105" -> "30064771107"  [ label = "CDG: "] 
  "30064771105" -> "146028888067"  [ label = "CDG: "] 
  "30064771110" -> "30064771116"  [ label = "CDG: "] 
  "30064771110" -> "30064771117"  [ label = "CDG: "] 
  "30064771110" -> "30064771118"  [ label = "CDG: "] 
  "30064771110" -> "30064771112"  [ label = "CDG: "] 
  "30064771110" -> "30064771113"  [ label = "CDG: "] 
  "30064771110" -> "30064771114"  [ label = "CDG: "] 
  "30064771110" -> "30064771115"  [ label = "CDG: "] 
  "30064771110" -> "146028888068"  [ label = "CDG: "] 
  "30064771117" -> "30064771119"  [ label = "CDG: "] 
  "30064771117" -> "30064771124"  [ label = "CDG: "] 
  "30064771117" -> "30064771125"  [ label = "CDG: "] 
  "30064771117" -> "30064771120"  [ label = "CDG: "] 
  "30064771117" -> "30064771121"  [ label = "CDG: "] 
  "30064771117" -> "30064771122"  [ label = "CDG: "] 
  "30064771117" -> "30064771123"  [ label = "CDG: "] 
  "30064771117" -> "30064771158"  [ label = "CDG: "] 
  "30064771117" -> "30064771159"  [ label = "CDG: "] 
  "30064771117" -> "146028888069"  [ label = "CDG: "] 
  "30064771123" -> "55834574850"  [ label = "CDG: "] 
  "30064771123" -> "55834574849"  [ label = "CDG: "] 
  "30064771123" -> "30064771126"  [ label = "CDG: "] 
  "30064771123" -> "30064771127"  [ label = "CDG: "] 
  "30064771123" -> "30064771132"  [ label = "CDG: "] 
  "30064771123" -> "30064771128"  [ label = "CDG: "] 
  "30064771123" -> "30064771129"  [ label = "CDG: "] 
  "30064771123" -> "30064771130"  [ label = "CDG: "] 
  "30064771123" -> "30064771131"  [ label = "CDG: "] 
  "30064771123" -> "30064771140"  [ label = "CDG: "] 
  "30064771123" -> "30064771141"  [ label = "CDG: "] 
  "30064771123" -> "30064771142"  [ label = "CDG: "] 
  "30064771123" -> "30064771143"  [ label = "CDG: "] 
  "30064771123" -> "30064771139"  [ label = "CDG: "] 
  "30064771123" -> "30064771148"  [ label = "CDG: "] 
  "30064771123" -> "30064771144"  [ label = "CDG: "] 
  "30064771123" -> "30064771145"  [ label = "CDG: "] 
  "30064771123" -> "30064771146"  [ label = "CDG: "] 
  "30064771123" -> "30064771147"  [ label = "CDG: "] 
  "30064771123" -> "30064771156"  [ label = "CDG: "] 
  "30064771123" -> "30064771157"  [ label = "CDG: "] 
  "30064771123" -> "30064771155"  [ label = "CDG: "] 
  "30064771158" -> "30064771160"  [ label = "CDG: "] 
  "30064771158" -> "30064771161"  [ label = "CDG: "] 
  "30064771158" -> "30064771162"  [ label = "CDG: "] 
  "30064771158" -> "30064771163"  [ label = "CDG: "] 
  "30064771158" -> "146028888071"  [ label = "CDG: "] 
  "30064771158" -> "146028888070"  [ label = "CDG: "] 
  "30064771130" -> "30064771132"  [ label = "CDG: "] 
  "30064771130" -> "30064771133"  [ label = "CDG: "] 
  "30064771130" -> "30064771134"  [ label = "CDG: "] 
  "30064771130" -> "30064771135"  [ label = "CDG: "] 
  "30064771130" -> "30064771130"  [ label = "CDG: "] 
  "30064771130" -> "30064771131"  [ label = "CDG: "] 
  "30064771130" -> "30064771136"  [ label = "CDG: "] 
  "30064771130" -> "30064771137"  [ label = "CDG: "] 
  "30064771130" -> "30064771138"  [ label = "CDG: "] 
  "30064771146" -> "30064771148"  [ label = "CDG: "] 
  "30064771146" -> "30064771149"  [ label = "CDG: "] 
  "30064771146" -> "30064771150"  [ label = "CDG: "] 
  "30064771146" -> "30064771151"  [ label = "CDG: "] 
  "30064771146" -> "30064771146"  [ label = "CDG: "] 
  "30064771146" -> "30064771147"  [ label = "CDG: "] 
  "30064771146" -> "30064771152"  [ label = "CDG: "] 
  "30064771146" -> "30064771153"  [ label = "CDG: "] 
  "30064771146" -> "30064771154"  [ label = "CDG: "] 
}
"""
)
