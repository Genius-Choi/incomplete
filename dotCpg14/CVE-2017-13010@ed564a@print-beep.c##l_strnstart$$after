[33mval[0m [36mres1575[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "l_strnstart" {  
"111669149697" [label = <(METHOD,l_strnstart)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,netdissect_options *ndo)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const char *tstr1)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,u_int tl1)<SUB>1</SUB>> ]
"115964116995" [label = <(PARAM,const char *str2)<SUB>2</SUB>> ]
"115964116996" [label = <(PARAM,u_int l2)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
	if (!ND_TTEST2(*str2, tl1)) {
		/*
		 * We d...,{
	if (!ND_TTEST2(*str2, tl1)) {
		/*
		 * We d...)<SUB>3</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!ND_TTEST2(*str2, tl1)))<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.logicalNot,!ND_TTEST2(*str2, tl1))<SUB>4</SUB>> ]
"30064771073" [label = <(ND_TTEST2,ND_TTEST2(*str2, tl1))<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.indirection,*str2)<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,str2,ND_TTEST2(*str2, tl1))<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,tl1,ND_TTEST2(*str2, tl1))<SUB>4</SUB>> ]
"25769803778" [label = <(BLOCK,{
		/*
		 * We don't have tl1 bytes worth of ca...,{
		/*
		 * We don't have tl1 bytes worth of ca...)<SUB>4</SUB>> ]
"146028888064" [label = <(RETURN,return 0;,return 0;)<SUB>10</SUB>> ]
"90194313216" [label = <(LITERAL,0,return 0;)<SUB>10</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (tl1 &gt; l2))<SUB>12</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.greaterThan,tl1 &gt; l2)<SUB>12</SUB>> ]
"68719476738" [label = <(IDENTIFIER,tl1,tl1 &gt; l2)<SUB>12</SUB>> ]
"68719476739" [label = <(IDENTIFIER,l2,tl1 &gt; l2)<SUB>12</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>> ]
"146028888065" [label = <(RETURN,return 0;,return 0;)<SUB>13</SUB>> ]
"90194313217" [label = <(LITERAL,0,return 0;)<SUB>13</SUB>> ]
"146028888066" [label = <(RETURN,return (strncmp(tstr1, str2, tl1) == 0 ? 1 : 0);,return (strncmp(tstr1, str2, tl1) == 0 ? 1 : 0);)<SUB>15</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.conditional,strncmp(tstr1, str2, tl1) == 0 ? 1 : 0)<SUB>15</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.equals,strncmp(tstr1, str2, tl1) == 0)<SUB>15</SUB>> ]
"30064771078" [label = <(strncmp,strncmp(tstr1, str2, tl1))<SUB>15</SUB>> ]
"68719476740" [label = <(IDENTIFIER,tstr1,strncmp(tstr1, str2, tl1))<SUB>15</SUB>> ]
"68719476741" [label = <(IDENTIFIER,str2,strncmp(tstr1, str2, tl1))<SUB>15</SUB>> ]
"68719476742" [label = <(IDENTIFIER,tl1,strncmp(tstr1, str2, tl1))<SUB>15</SUB>> ]
"90194313218" [label = <(LITERAL,0,strncmp(tstr1, str2, tl1) == 0)<SUB>15</SUB>> ]
"90194313219" [label = <(LITERAL,1,strncmp(tstr1, str2, tl1) == 0 ? 1 : 0)<SUB>15</SUB>> ]
"90194313220" [label = <(LITERAL,0,strncmp(tstr1, str2, tl1) == 0 ? 1 : 0)<SUB>15</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "146028888066"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476736"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "90194313216"  [ label = "AST: "] 
  "47244640257" -> "30064771075"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "90194313217"  [ label = "AST: "] 
  "146028888066" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "90194313219"  [ label = "AST: "] 
  "30064771076" -> "90194313220"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "146028888064"  [ label = "CFG: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "146028888065"  [ label = "CFG: "] 
  "30064771075" -> "30064771078"  [ label = "CFG: "] 
  "30064771076" -> "146028888066"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "111669149697" -> "30064771074"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: ndo"] 
  "115964116993" -> "128849018880"  [ label = "DDG: tstr1"] 
  "115964116995" -> "128849018880"  [ label = "DDG: str2"] 
  "115964116996" -> "128849018880"  [ label = "DDG: l2"] 
  "30064771073" -> "128849018880"  [ label = "DDG: *str2"] 
  "30064771073" -> "128849018880"  [ label = "DDG: tl1"] 
  "30064771072" -> "128849018880"  [ label = "DDG: ND_TTEST2(*str2, tl1)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: !ND_TTEST2(*str2, tl1)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "30064771076" -> "146028888066"  [ label = "DDG: strncmp(tstr1, str2, tl1) == 0 ? 1 : 0"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: *str2"] 
  "30064771073" -> "30064771072"  [ label = "DDG: tl1"] 
  "90194313216" -> "146028888064"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771073" -> "30064771075"  [ label = "DDG: tl1"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "115964116996" -> "30064771075"  [ label = "DDG: l2"] 
  "90194313217" -> "146028888065"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "115964116994" -> "30064771073"  [ label = "DDG: tl1"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "90194313216"  [ label = "DDG: "] 
  "111669149697" -> "90194313217"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: tstr1"] 
  "30064771078" -> "30064771077"  [ label = "DDG: str2"] 
  "30064771078" -> "30064771077"  [ label = "DDG: tl1"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "115964116993" -> "30064771078"  [ label = "DDG: tstr1"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "115964116995" -> "30064771078"  [ label = "DDG: str2"] 
  "30064771073" -> "30064771078"  [ label = "DDG: *str2"] 
  "30064771075" -> "30064771078"  [ label = "DDG: tl1"] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
  "30064771075" -> "30064771076"  [ label = "CDG: "] 
  "30064771075" -> "146028888066"  [ label = "CDG: "] 
  "30064771075" -> "30064771077"  [ label = "CDG: "] 
  "30064771075" -> "146028888065"  [ label = "CDG: "] 
  "30064771075" -> "30064771078"  [ label = "CDG: "] 
}
"""
)
