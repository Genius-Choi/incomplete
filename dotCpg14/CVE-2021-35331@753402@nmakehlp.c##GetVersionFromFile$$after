[33mval[0m [36mres355[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "GetVersionFromFile" {  
"111669149697" [label = <(METHOD,GetVersionFromFile)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const char *filename)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,const char *match)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,int numdots)<SUB>4</SUB>> ]
"25769803777" [label = <(BLOCK,{
    size_t cbBuffer = 100;
    static char sz...,{
    size_t cbBuffer = 100;
    static char sz...)<SUB>5</SUB>> ]
"94489280512" [label = <(LOCAL,size_t cbBuffer: size_t)<SUB>6</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,cbBuffer = 100)<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,cbBuffer,cbBuffer = 100)<SUB>6</SUB>> ]
"90194313216" [label = <(LITERAL,100,cbBuffer = 100)<SUB>6</SUB>> ]
"94489280513" [label = <(LOCAL,static char[100] szBuffer: static char[100])<SUB>7</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,szBuffer[100])<SUB>7</SUB>> ]
"68719476737" [label = <(IDENTIFIER,szBuffer,szBuffer[100])<SUB>7</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.alloc,szBuffer[100])<SUB>7</SUB>> ]
"90194313217" [label = <(LITERAL,100,szBuffer[100])<SUB>7</SUB>> ]
"94489280514" [label = <(LOCAL,char* szResult: char*)<SUB>8</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,*szResult = NULL)<SUB>8</SUB>> ]
"68719476738" [label = <(IDENTIFIER,szResult,*szResult = NULL)<SUB>8</SUB>> ]
"68719476739" [label = <(IDENTIFIER,NULL,*szResult = NULL)<SUB>8</SUB>> ]
"94489280515" [label = <(LOCAL,FILE* fp: FILE*)<SUB>9</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,*fp = fopen(filename, &quot;rt&quot;))<SUB>9</SUB>> ]
"68719476740" [label = <(IDENTIFIER,fp,*fp = fopen(filename, &quot;rt&quot;))<SUB>9</SUB>> ]
"30064771077" [label = <(fopen,fopen(filename, &quot;rt&quot;))<SUB>9</SUB>> ]
"68719476741" [label = <(IDENTIFIER,filename,fopen(filename, &quot;rt&quot;))<SUB>9</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;rt&quot;,fopen(filename, &quot;rt&quot;))<SUB>9</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (fp != NULL))<SUB>11</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.notEquals,fp != NULL)<SUB>11</SUB>> ]
"68719476742" [label = <(IDENTIFIER,fp,fp != NULL)<SUB>11</SUB>> ]
"68719476743" [label = <(IDENTIFIER,NULL,fp != NULL)<SUB>11</SUB>> ]
"25769803778" [label = <(BLOCK,{
	/*
	 * Read data until we see our match stri...,{
	/*
	 * Read data until we see our match stri...)<SUB>11</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,WHILE,while (fgets(szBuffer, cbBuffer, fp) != NULL))<SUB>16</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.notEquals,fgets(szBuffer, cbBuffer, fp) != NULL)<SUB>16</SUB>> ]
"30064771080" [label = <(fgets,fgets(szBuffer, cbBuffer, fp))<SUB>16</SUB>> ]
"68719476744" [label = <(IDENTIFIER,szBuffer,fgets(szBuffer, cbBuffer, fp))<SUB>16</SUB>> ]
"68719476745" [label = <(IDENTIFIER,cbBuffer,fgets(szBuffer, cbBuffer, fp))<SUB>16</SUB>> ]
"68719476746" [label = <(IDENTIFIER,fp,fgets(szBuffer, cbBuffer, fp))<SUB>16</SUB>> ]
"68719476747" [label = <(IDENTIFIER,NULL,fgets(szBuffer, cbBuffer, fp) != NULL)<SUB>16</SUB>> ]
"25769803779" [label = <(BLOCK,{
	    LPSTR p, q;

	    p = strstr(szBuffer, m...,{
	    LPSTR p, q;

	    p = strstr(szBuffer, m...)<SUB>16</SUB>> ]
"94489280516" [label = <(LOCAL,LPSTR p: LPSTR)<SUB>17</SUB>> ]
"94489280517" [label = <(LOCAL,LPSTR q: LPSTR)<SUB>17</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,p = strstr(szBuffer, match))<SUB>19</SUB>> ]
"68719476748" [label = <(IDENTIFIER,p,p = strstr(szBuffer, match))<SUB>19</SUB>> ]
"30064771082" [label = <(strstr,strstr(szBuffer, match))<SUB>19</SUB>> ]
"68719476749" [label = <(IDENTIFIER,szBuffer,strstr(szBuffer, match))<SUB>19</SUB>> ]
"68719476750" [label = <(IDENTIFIER,match,strstr(szBuffer, match))<SUB>19</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (p != NULL))<SUB>20</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.notEquals,p != NULL)<SUB>20</SUB>> ]
"68719476751" [label = <(IDENTIFIER,p,p != NULL)<SUB>20</SUB>> ]
"68719476752" [label = <(IDENTIFIER,NULL,p != NULL)<SUB>20</SUB>> ]
"25769803780" [label = <(BLOCK,{
		/*
		 * Skip to first digit after the match...,{
		/*
		 * Skip to first digit after the match...)<SUB>20</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignmentPlus,p += strlen(match))<SUB>25</SUB>> ]
"68719476753" [label = <(IDENTIFIER,p,p += strlen(match))<SUB>25</SUB>> ]
"30064771085" [label = <(strlen,strlen(match))<SUB>25</SUB>> ]
"68719476754" [label = <(IDENTIFIER,match,strlen(match))<SUB>25</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,WHILE,while (*p &amp;&amp; !isdigit(*p)))<SUB>26</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.logicalAnd,*p &amp;&amp; !isdigit(*p))<SUB>26</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.indirection,*p)<SUB>26</SUB>> ]
"68719476755" [label = <(IDENTIFIER,p,*p &amp;&amp; !isdigit(*p))<SUB>26</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.logicalNot,!isdigit(*p))<SUB>26</SUB>> ]
"30064771089" [label = <(isdigit,isdigit(*p))<SUB>26</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.indirection,*p)<SUB>26</SUB>> ]
"68719476756" [label = <(IDENTIFIER,p,isdigit(*p))<SUB>26</SUB>> ]
"25769803781" [label = <(BLOCK,{
		    ++p;
		},{
		    ++p;
		})<SUB>26</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.preIncrement,++p)<SUB>27</SUB>> ]
"68719476757" [label = <(IDENTIFIER,p,++p)<SUB>27</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.assignment,q = p)<SUB>34</SUB>> ]
"68719476758" [label = <(IDENTIFIER,q,q = p)<SUB>34</SUB>> ]
"68719476759" [label = <(IDENTIFIER,p,q = p)<SUB>34</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,WHILE,while (*q &amp;&amp; (strchr(&quot;0123456789.ab&quot;, *q)) &amp;&amp; ((!strchr(&quot;.ab&quot;, *q)
			    &amp;&amp; (!strchr(&quot;ab&quot;, q[-1])) || --numdots))))<SUB>35</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.logicalAnd,*q &amp;&amp; (strchr(&quot;0123456789.ab&quot;, *q)) &amp;&amp; ((!strch...)<SUB>35</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.logicalAnd,*q &amp;&amp; (strchr(&quot;0123456789.ab&quot;, *q)))<SUB>35</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.indirection,*q)<SUB>35</SUB>> ]
"68719476760" [label = <(IDENTIFIER,q,*q &amp;&amp; (strchr(&quot;0123456789.ab&quot;, *q)))<SUB>35</SUB>> ]
"30064771096" [label = <(strchr,strchr(&quot;0123456789.ab&quot;, *q))<SUB>35</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;0123456789.ab&quot;,strchr(&quot;0123456789.ab&quot;, *q))<SUB>35</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.indirection,*q)<SUB>35</SUB>> ]
"68719476761" [label = <(IDENTIFIER,q,strchr(&quot;0123456789.ab&quot;, *q))<SUB>35</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.logicalOr,!strchr(&quot;.ab&quot;, *q)
			    &amp;&amp; (!strchr(&quot;ab&quot;, q[-...)<SUB>35</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.logicalAnd,!strchr(&quot;.ab&quot;, *q)
			    &amp;&amp; (!strchr(&quot;ab&quot;, q[-...)<SUB>35</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.logicalNot,!strchr(&quot;.ab&quot;, *q))<SUB>35</SUB>> ]
"30064771101" [label = <(strchr,strchr(&quot;.ab&quot;, *q))<SUB>35</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;.ab&quot;,strchr(&quot;.ab&quot;, *q))<SUB>35</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.indirection,*q)<SUB>35</SUB>> ]
"68719476762" [label = <(IDENTIFIER,q,strchr(&quot;.ab&quot;, *q))<SUB>35</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.logicalNot,!strchr(&quot;ab&quot;, q[-1]))<SUB>36</SUB>> ]
"30064771104" [label = <(strchr,strchr(&quot;ab&quot;, q[-1]))<SUB>36</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;ab&quot;,strchr(&quot;ab&quot;, q[-1]))<SUB>36</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.indirectIndexAccess,q[-1])<SUB>36</SUB>> ]
"68719476763" [label = <(IDENTIFIER,q,strchr(&quot;ab&quot;, q[-1]))<SUB>36</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.minus,-1)<SUB>36</SUB>> ]
"90194313222" [label = <(LITERAL,1,-1)<SUB>36</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.preDecrement,--numdots)<SUB>36</SUB>> ]
"68719476764" [label = <(IDENTIFIER,numdots,--numdots)<SUB>36</SUB>> ]
"25769803782" [label = <(BLOCK,{
		    ++q;
		},{
		    ++q;
		})<SUB>36</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.preIncrement,++q)<SUB>37</SUB>> ]
"68719476765" [label = <(IDENTIFIER,q,++q)<SUB>37</SUB>> ]
"30064771109" [label = <(memmove,memmove(szBuffer, p, q - p))<SUB>40</SUB>> ]
"68719476766" [label = <(IDENTIFIER,szBuffer,memmove(szBuffer, p, q - p))<SUB>40</SUB>> ]
"68719476767" [label = <(IDENTIFIER,p,memmove(szBuffer, p, q - p))<SUB>40</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.subtraction,q - p)<SUB>40</SUB>> ]
"68719476768" [label = <(IDENTIFIER,q,q - p)<SUB>40</SUB>> ]
"68719476769" [label = <(IDENTIFIER,p,q - p)<SUB>40</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.assignment,szBuffer[q-p] = 0)<SUB>41</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.indirectIndexAccess,szBuffer[q-p])<SUB>41</SUB>> ]
"68719476770" [label = <(IDENTIFIER,szBuffer,szBuffer[q-p] = 0)<SUB>41</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.subtraction,q-p)<SUB>41</SUB>> ]
"68719476771" [label = <(IDENTIFIER,q,q-p)<SUB>41</SUB>> ]
"68719476772" [label = <(IDENTIFIER,p,q-p)<SUB>41</SUB>> ]
"90194313223" [label = <(LITERAL,0,szBuffer[q-p] = 0)<SUB>41</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.assignment,szResult = szBuffer)<SUB>42</SUB>> ]
"68719476773" [label = <(IDENTIFIER,szResult,szResult = szBuffer)<SUB>42</SUB>> ]
"68719476774" [label = <(IDENTIFIER,szBuffer,szResult = szBuffer)<SUB>42</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,BREAK,break;)<SUB>43</SUB>> ]
"30064771115" [label = <(fclose,fclose(fp))<SUB>46</SUB>> ]
"68719476775" [label = <(IDENTIFIER,fp,fclose(fp))<SUB>46</SUB>> ]
"146028888064" [label = <(RETURN,return szResult;,return szResult;)<SUB>48</SUB>> ]
"68719476776" [label = <(IDENTIFIER,szResult,return szResult;)<SUB>48</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "47244640256" -> "30064771078"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "30064771115"  [ label = "AST: "] 
  "47244640257" -> "30064771079"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476747"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "25769803779" -> "94489280516"  [ label = "AST: "] 
  "25769803779" -> "94489280517"  [ label = "AST: "] 
  "25769803779" -> "30064771081"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "30064771081" -> "68719476748"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476749"  [ label = "AST: "] 
  "30064771082" -> "68719476750"  [ label = "AST: "] 
  "47244640258" -> "30064771083"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771083" -> "68719476751"  [ label = "AST: "] 
  "30064771083" -> "68719476752"  [ label = "AST: "] 
  "25769803780" -> "30064771084"  [ label = "AST: "] 
  "25769803780" -> "47244640259"  [ label = "AST: "] 
  "25769803780" -> "30064771092"  [ label = "AST: "] 
  "25769803780" -> "47244640260"  [ label = "AST: "] 
  "25769803780" -> "30064771109"  [ label = "AST: "] 
  "25769803780" -> "30064771111"  [ label = "AST: "] 
  "25769803780" -> "30064771114"  [ label = "AST: "] 
  "25769803780" -> "47244640261"  [ label = "AST: "] 
  "30064771084" -> "68719476753"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476754"  [ label = "AST: "] 
  "47244640259" -> "30064771086"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "68719476755"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476756"  [ label = "AST: "] 
  "25769803781" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476757"  [ label = "AST: "] 
  "30064771092" -> "68719476758"  [ label = "AST: "] 
  "30064771092" -> "68719476759"  [ label = "AST: "] 
  "47244640260" -> "30064771093"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "30064771098"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "68719476760"  [ label = "AST: "] 
  "30064771096" -> "90194313219"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476761"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "30064771107"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "30064771103"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "90194313220"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "68719476762"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "90194313221"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476763"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "90194313222"  [ label = "AST: "] 
  "30064771107" -> "68719476764"  [ label = "AST: "] 
  "25769803782" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "68719476765"  [ label = "AST: "] 
  "30064771109" -> "68719476766"  [ label = "AST: "] 
  "30064771109" -> "68719476767"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "68719476768"  [ label = "AST: "] 
  "30064771110" -> "68719476769"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "90194313223"  [ label = "AST: "] 
  "30064771112" -> "68719476770"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476771"  [ label = "AST: "] 
  "30064771113" -> "68719476772"  [ label = "AST: "] 
  "30064771114" -> "68719476773"  [ label = "AST: "] 
  "30064771114" -> "68719476774"  [ label = "AST: "] 
  "30064771115" -> "68719476775"  [ label = "AST: "] 
  "146028888064" -> "68719476776"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771073" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771078"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771078" -> "146028888064"  [ label = "CFG: "] 
  "30064771115" -> "146028888064"  [ label = "CFG: "] 
  "30064771079" -> "30064771082"  [ label = "CFG: "] 
  "30064771079" -> "30064771115"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771083" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771085"  [ label = "CFG: "] 
  "30064771084" -> "30064771087"  [ label = "CFG: "] 
  "30064771092" -> "30064771095"  [ label = "CFG: "] 
  "30064771109" -> "30064771113"  [ label = "CFG: "] 
  "30064771111" -> "30064771114"  [ label = "CFG: "] 
  "30064771114" -> "30064771115"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "30064771091"  [ label = "CFG: "] 
  "30064771086" -> "30064771092"  [ label = "CFG: "] 
  "30064771093" -> "30064771108"  [ label = "CFG: "] 
  "30064771093" -> "30064771110"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771088" -> "30064771086"  [ label = "CFG: "] 
  "30064771091" -> "30064771087"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771094" -> "30064771102"  [ label = "CFG: "] 
  "30064771098" -> "30064771093"  [ label = "CFG: "] 
  "30064771108" -> "30064771095"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771095" -> "30064771097"  [ label = "CFG: "] 
  "30064771096" -> "30064771094"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771099" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "30064771098"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771100" -> "30064771106"  [ label = "CFG: "] 
  "30064771103" -> "30064771099"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: match"] 
  "115964116994" -> "128849018880"  [ label = "DDG: numdots"] 
  "30064771072" -> "128849018880"  [ label = "DDG: cbBuffer"] 
  "30064771072" -> "128849018880"  [ label = "DDG: cbBuffer = 100"] 
  "30064771073" -> "128849018880"  [ label = "DDG: szBuffer"] 
  "30064771073" -> "128849018880"  [ label = "DDG: szBuffer[100]"] 
  "30064771075" -> "128849018880"  [ label = "DDG: szResult"] 
  "30064771075" -> "128849018880"  [ label = "DDG: *szResult = NULL"] 
  "30064771077" -> "128849018880"  [ label = "DDG: filename"] 
  "30064771076" -> "128849018880"  [ label = "DDG: fopen(filename, &quot;rt&quot;)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: *fp = fopen(filename, &quot;rt&quot;)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: fp"] 
  "30064771078" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771078" -> "128849018880"  [ label = "DDG: fp != NULL"] 
  "30064771080" -> "128849018880"  [ label = "DDG: szBuffer"] 
  "30064771080" -> "128849018880"  [ label = "DDG: cbBuffer"] 
  "30064771079" -> "128849018880"  [ label = "DDG: fgets(szBuffer, cbBuffer, fp)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771079" -> "128849018880"  [ label = "DDG: fgets(szBuffer, cbBuffer, fp) != NULL"] 
  "30064771082" -> "128849018880"  [ label = "DDG: match"] 
  "30064771081" -> "128849018880"  [ label = "DDG: strstr(szBuffer, match)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: p = strstr(szBuffer, match)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: p"] 
  "30064771083" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771083" -> "128849018880"  [ label = "DDG: p != NULL"] 
  "30064771085" -> "128849018880"  [ label = "DDG: match"] 
  "30064771084" -> "128849018880"  [ label = "DDG: strlen(match)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: p += strlen(match)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: *p"] 
  "30064771088" -> "128849018880"  [ label = "DDG: isdigit(*p)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: !isdigit(*p)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: *p &amp;&amp; !isdigit(*p)"] 
  "30064771092" -> "128849018880"  [ label = "DDG: q = p"] 
  "30064771094" -> "128849018880"  [ label = "DDG: *q"] 
  "30064771094" -> "128849018880"  [ label = "DDG: strchr(&quot;0123456789.ab&quot;, *q)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: *q &amp;&amp; (strchr(&quot;0123456789.ab&quot;, *q))"] 
  "30064771101" -> "128849018880"  [ label = "DDG: *q"] 
  "30064771100" -> "128849018880"  [ label = "DDG: strchr(&quot;.ab&quot;, *q)"] 
  "30064771099" -> "128849018880"  [ label = "DDG: !strchr(&quot;.ab&quot;, *q)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: q[-1]"] 
  "30064771103" -> "128849018880"  [ label = "DDG: strchr(&quot;ab&quot;, q[-1])"] 
  "30064771099" -> "128849018880"  [ label = "DDG: !strchr(&quot;ab&quot;, q[-1])"] 
  "30064771098" -> "128849018880"  [ label = "DDG: !strchr(&quot;.ab&quot;, *q)
			    &amp;&amp; (!strchr(&quot;ab&quot;, q[-1]))"] 
  "30064771107" -> "128849018880"  [ label = "DDG: numdots"] 
  "30064771098" -> "128849018880"  [ label = "DDG: --numdots"] 
  "30064771093" -> "128849018880"  [ label = "DDG: !strchr(&quot;.ab&quot;, *q)
			    &amp;&amp; (!strchr(&quot;ab&quot;, q[-1])) || --numdots"] 
  "30064771093" -> "128849018880"  [ label = "DDG: *q &amp;&amp; (strchr(&quot;0123456789.ab&quot;, *q)) &amp;&amp; ((!strchr(&quot;.ab&quot;, *q)
			    &amp;&amp; (!strchr(&quot;ab&quot;, q[-1])) || --numdots))"] 
  "30064771109" -> "128849018880"  [ label = "DDG: q - p"] 
  "30064771109" -> "128849018880"  [ label = "DDG: memmove(szBuffer, p, q - p)"] 
  "30064771113" -> "128849018880"  [ label = "DDG: q"] 
  "30064771113" -> "128849018880"  [ label = "DDG: p"] 
  "30064771111" -> "128849018880"  [ label = "DDG: szBuffer[q-p]"] 
  "30064771111" -> "128849018880"  [ label = "DDG: szBuffer[q-p] = 0"] 
  "30064771114" -> "128849018880"  [ label = "DDG: szResult"] 
  "30064771114" -> "128849018880"  [ label = "DDG: szBuffer"] 
  "30064771114" -> "128849018880"  [ label = "DDG: szResult = szBuffer"] 
  "30064771115" -> "128849018880"  [ label = "DDG: fp"] 
  "30064771115" -> "128849018880"  [ label = "DDG: fclose(fp)"] 
  "30064771108" -> "128849018880"  [ label = "DDG: ++q"] 
  "30064771091" -> "128849018880"  [ label = "DDG: ++p"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: 100"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: filename"] 
  "30064771077" -> "30064771076"  [ label = "DDG: &quot;rt&quot;"] 
  "68719476776" -> "146028888064"  [ label = "DDG: szResult"] 
  "30064771075" -> "68719476776"  [ label = "DDG: szResult"] 
  "30064771114" -> "68719476776"  [ label = "DDG: szResult"] 
  "111669149697" -> "68719476776"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116992" -> "30064771077"  [ label = "DDG: filename"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771076" -> "30064771078"  [ label = "DDG: fp"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771080" -> "30064771115"  [ label = "DDG: fp"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: szBuffer"] 
  "30064771080" -> "30064771079"  [ label = "DDG: cbBuffer"] 
  "30064771080" -> "30064771079"  [ label = "DDG: fp"] 
  "30064771078" -> "30064771079"  [ label = "DDG: NULL"] 
  "30064771083" -> "30064771079"  [ label = "DDG: NULL"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: szBuffer"] 
  "30064771082" -> "30064771081"  [ label = "DDG: match"] 
  "30064771073" -> "30064771080"  [ label = "DDG: szBuffer"] 
  "30064771082" -> "30064771080"  [ label = "DDG: szBuffer"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771072" -> "30064771080"  [ label = "DDG: cbBuffer"] 
  "30064771078" -> "30064771080"  [ label = "DDG: fp"] 
  "30064771080" -> "30064771082"  [ label = "DDG: szBuffer"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "115964116993" -> "30064771082"  [ label = "DDG: match"] 
  "30064771081" -> "30064771083"  [ label = "DDG: p"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771079" -> "30064771083"  [ label = "DDG: NULL"] 
  "30064771085" -> "30064771084"  [ label = "DDG: match"] 
  "30064771084" -> "30064771092"  [ label = "DDG: p"] 
  "30064771086" -> "30064771092"  [ label = "DDG: *p"] 
  "30064771091" -> "30064771092"  [ label = "DDG: p"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771109" -> "30064771114"  [ label = "DDG: szBuffer"] 
  "30064771111" -> "30064771114"  [ label = "DDG: szBuffer[q-p]"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771083" -> "30064771084"  [ label = "DDG: p"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771082" -> "30064771109"  [ label = "DDG: szBuffer"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771086" -> "30064771109"  [ label = "DDG: *p"] 
  "30064771110" -> "30064771109"  [ label = "DDG: p"] 
  "30064771110" -> "30064771109"  [ label = "DDG: q"] 
  "30064771082" -> "30064771085"  [ label = "DDG: match"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771089" -> "30064771086"  [ label = "DDG: *p"] 
  "30064771088" -> "30064771086"  [ label = "DDG: isdigit(*p)"] 
  "30064771094" -> "30064771093"  [ label = "DDG: *q"] 
  "30064771094" -> "30064771093"  [ label = "DDG: strchr(&quot;0123456789.ab&quot;, *q)"] 
  "30064771098" -> "30064771093"  [ label = "DDG: !strchr(&quot;.ab&quot;, *q)
			    &amp;&amp; (!strchr(&quot;ab&quot;, q[-1]))"] 
  "30064771098" -> "30064771093"  [ label = "DDG: --numdots"] 
  "30064771092" -> "30064771110"  [ label = "DDG: q"] 
  "30064771094" -> "30064771110"  [ label = "DDG: *q"] 
  "30064771101" -> "30064771110"  [ label = "DDG: *q"] 
  "30064771104" -> "30064771110"  [ label = "DDG: q[-1]"] 
  "30064771108" -> "30064771110"  [ label = "DDG: q"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771086" -> "30064771110"  [ label = "DDG: *p"] 
  "30064771084" -> "30064771110"  [ label = "DDG: p"] 
  "30064771091" -> "30064771110"  [ label = "DDG: p"] 
  "30064771089" -> "30064771088"  [ label = "DDG: *p"] 
  "30064771084" -> "30064771091"  [ label = "DDG: p"] 
  "30064771086" -> "30064771091"  [ label = "DDG: *p"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771096" -> "30064771094"  [ label = "DDG: *q"] 
  "30064771101" -> "30064771094"  [ label = "DDG: *q"] 
  "30064771096" -> "30064771094"  [ label = "DDG: &quot;0123456789.ab&quot;"] 
  "30064771099" -> "30064771098"  [ label = "DDG: !strchr(&quot;.ab&quot;, *q)"] 
  "30064771099" -> "30064771098"  [ label = "DDG: !strchr(&quot;ab&quot;, q[-1])"] 
  "30064771107" -> "30064771098"  [ label = "DDG: numdots"] 
  "30064771092" -> "30064771108"  [ label = "DDG: q"] 
  "30064771094" -> "30064771108"  [ label = "DDG: *q"] 
  "30064771101" -> "30064771108"  [ label = "DDG: *q"] 
  "30064771104" -> "30064771108"  [ label = "DDG: q[-1]"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771094" -> "30064771113"  [ label = "DDG: *q"] 
  "30064771101" -> "30064771113"  [ label = "DDG: *q"] 
  "30064771104" -> "30064771113"  [ label = "DDG: q[-1]"] 
  "30064771110" -> "30064771113"  [ label = "DDG: q"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771086" -> "30064771113"  [ label = "DDG: *p"] 
  "30064771109" -> "30064771113"  [ label = "DDG: p"] 
  "30064771086" -> "30064771089"  [ label = "DDG: *p"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771094" -> "30064771096"  [ label = "DDG: *q"] 
  "30064771101" -> "30064771096"  [ label = "DDG: *q"] 
  "30064771100" -> "30064771099"  [ label = "DDG: strchr(&quot;.ab&quot;, *q)"] 
  "30064771103" -> "30064771099"  [ label = "DDG: strchr(&quot;ab&quot;, q[-1])"] 
  "115964116994" -> "30064771107"  [ label = "DDG: numdots"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: &quot;.ab&quot;"] 
  "30064771101" -> "30064771100"  [ label = "DDG: *q"] 
  "30064771104" -> "30064771103"  [ label = "DDG: &quot;ab&quot;"] 
  "30064771104" -> "30064771103"  [ label = "DDG: q[-1]"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771094" -> "30064771101"  [ label = "DDG: *q"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771092" -> "30064771104"  [ label = "DDG: q"] 
  "30064771108" -> "30064771104"  [ label = "DDG: q"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771078" -> "30064771079"  [ label = "CDG: "] 
  "30064771078" -> "30064771080"  [ label = "CDG: "] 
  "30064771078" -> "30064771115"  [ label = "CDG: "] 
  "30064771079" -> "30064771081"  [ label = "CDG: "] 
  "30064771079" -> "30064771083"  [ label = "CDG: "] 
  "30064771079" -> "30064771082"  [ label = "CDG: "] 
  "30064771083" -> "30064771079"  [ label = "CDG: "] 
  "30064771083" -> "30064771080"  [ label = "CDG: "] 
  "30064771083" -> "30064771087"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
  "30064771083" -> "30064771084"  [ label = "CDG: "] 
  "30064771083" -> "30064771111"  [ label = "CDG: "] 
  "30064771083" -> "30064771110"  [ label = "CDG: "] 
  "30064771083" -> "30064771113"  [ label = "CDG: "] 
  "30064771083" -> "30064771112"  [ label = "CDG: "] 
  "30064771083" -> "30064771109"  [ label = "CDG: "] 
  "30064771083" -> "30064771114"  [ label = "CDG: "] 
  "30064771083" -> "30064771095"  [ label = "CDG: "] 
  "30064771083" -> "30064771094"  [ label = "CDG: "] 
  "30064771083" -> "30064771093"  [ label = "CDG: "] 
  "30064771083" -> "30064771092"  [ label = "CDG: "] 
  "30064771086" -> "30064771087"  [ label = "CDG: "] 
  "30064771086" -> "30064771086"  [ label = "CDG: "] 
  "30064771086" -> "30064771091"  [ label = "CDG: "] 
  "30064771093" -> "30064771108"  [ label = "CDG: "] 
  "30064771093" -> "30064771095"  [ label = "CDG: "] 
  "30064771093" -> "30064771094"  [ label = "CDG: "] 
  "30064771093" -> "30064771093"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771088"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771094" -> "30064771102"  [ label = "CDG: "] 
  "30064771094" -> "30064771099"  [ label = "CDG: "] 
  "30064771094" -> "30064771098"  [ label = "CDG: "] 
  "30064771094" -> "30064771101"  [ label = "CDG: "] 
  "30064771094" -> "30064771100"  [ label = "CDG: "] 
  "30064771095" -> "30064771097"  [ label = "CDG: "] 
  "30064771095" -> "30064771096"  [ label = "CDG: "] 
  "30064771099" -> "30064771107"  [ label = "CDG: "] 
  "30064771100" -> "30064771106"  [ label = "CDG: "] 
  "30064771100" -> "30064771103"  [ label = "CDG: "] 
  "30064771100" -> "30064771105"  [ label = "CDG: "] 
  "30064771100" -> "30064771104"  [ label = "CDG: "] 
}
"""
)
