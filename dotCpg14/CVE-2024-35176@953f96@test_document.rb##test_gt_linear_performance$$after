[33mval[0m [36mres2045[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_gt_linear_performance" {  
"111669149697" [label = <(METHOD,test_gt_linear_performance)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,self)<SUB>1</SUB>> ]
"25769803776" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,seq: ANY)<SUB>2</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,seq = [10000, 50000, 100000, 150000, 200000])<SUB>2</SUB>> ]
"68719476742" [label = <(IDENTIFIER,seq,seq = [10000, 50000, 100000, 150000, 200000])<SUB>2</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.arrayInitializer,[10000, 50000, 100000, 150000, 200000])<SUB>2</SUB>> ]
"90194313219" [label = <(LITERAL,10000,[10000, 50000, 100000, 150000, 200000])<SUB>2</SUB>> ]
"90194313220" [label = <(LITERAL,50000,[10000, 50000, 100000, 150000, 200000])<SUB>2</SUB>> ]
"90194313221" [label = <(LITERAL,100000,[10000, 50000, 100000, 150000, 200000])<SUB>2</SUB>> ]
"90194313222" [label = <(LITERAL,150000,[10000, 50000, 100000, 150000, 200000])<SUB>2</SUB>> ]
"90194313223" [label = <(LITERAL,200000,[10000, 50000, 100000, 150000, 200000])<SUB>2</SUB>> ]
"146028888065" [label = <(RETURN,assert_linear_performance(seq) do |n|
        R...,assert_linear_performance(seq) do |n|
        R...)<SUB>3</SUB>> ]
"30064771084" [label = <(assert_linear_performance,assert_linear_performance(seq) do |n|
        R...)<SUB>3</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.fieldAccess,self.assert_linear_performance)<SUB>3</SUB>> ]
"68719476743" [label = <(IDENTIFIER,self,assert_linear_performance(seq) do |n|
        R...)<SUB>3</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,assert_linear_performance,assert_linear_performance)<SUB>3</SUB>> ]
"68719476744" [label = <(IDENTIFIER,self,assert_linear_performance(seq) do |n|
        R...)<SUB>3</SUB>> ]
"68719476745" [label = <(IDENTIFIER,seq,assert_linear_performance(seq) do |n|
        R...)<SUB>3</SUB>> ]
"180388626432" [label = <(TYPE_REF,&lt;lambda&gt;0&amp;Proc,&lt;lambda&gt;0&amp;Proc)<SUB>3</SUB>> ]
"133143986180" [label = <(MODIFIER,VIRTUAL)> ]
"133143986181" [label = <(MODIFIER,PRIVATE)> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
"111669149696" [label = <(METHOD,&lt;lambda&gt;0)<SUB>3</SUB>> ]
"115964116992" [label = <(PARAM,self)<SUB>3</SUB>> ]
"115964116993" [label = <(PARAM,n)<SUB>3</SUB>> ]
"25769803777" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,&lt;tmp-1&gt;: ANY)> ]
"146028888064" [label = <(RETURN,REXML::Document.new('&lt;test testing=&quot;' + &quot;&gt;&quot; * n...,REXML::Document.new('&lt;test testing=&quot;' + &quot;&gt;&quot; * n...)<SUB>4</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,&lt;tmp-0&gt;: &lt;empty&gt;)> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,&lt;tmp-0&gt; = REXML::Document.initialize)<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,&lt;tmp-0&gt;,&lt;tmp-0&gt; = REXML::Document.initialize)<SUB>4</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.alloc,REXML::Document.new('&lt;test testing=&quot;' + &quot;&gt;&quot; * n...)<SUB>4</SUB>> ]
"30064771074" [label = <(initialize,REXML::Document.new('&lt;test testing=&quot;' + &quot;&gt;&quot; * n...)<SUB>4</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,(&lt;tmp-1&gt; = REXML::Document).initialize)<SUB>4</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,&lt;tmp-1&gt; = REXML::Document)<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,&lt;tmp-1&gt;,&lt;tmp-1&gt; = REXML::Document)> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,REXML::Document)<SUB>4</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.fieldAccess,self.REXML)<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,self,&lt;tmp-1&gt; = REXML::Document)<SUB>4</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,REXML,REXML)<SUB>4</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,Document,Document)<SUB>4</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,initialize,initialize)<SUB>4</SUB>> ]
"68719476739" [label = <(IDENTIFIER,&lt;tmp-0&gt;,REXML::Document.new('&lt;test testing=&quot;' + &quot;&gt;&quot; * n...)<SUB>4</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.addition,'&lt;test testing=&quot;' + &quot;&gt;&quot; * n + '&quot;&gt;&lt;/test&gt;')<SUB>4</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.addition,'&lt;test testing=&quot;' + &quot;&gt;&quot; * n)<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,'&lt;test testing=&quot;','&lt;test testing=&quot;' + &quot;&gt;&quot; * n)<SUB>4</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.multiplication,&quot;&gt;&quot; * n)<SUB>4</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;&gt;&quot;,&quot;&gt;&quot; * n)<SUB>4</SUB>> ]
"68719476740" [label = <(IDENTIFIER,n,&quot;&gt;&quot; * n)<SUB>4</SUB>> ]
"90194313218" [label = <(LITERAL,'&quot;&gt;&lt;/test&gt;','&lt;test testing=&quot;' + &quot;&gt;&quot; * n + '&quot;&gt;&lt;/test&gt;')<SUB>4</SUB>> ]
"68719476741" [label = <(IDENTIFIER,&lt;tmp-0&gt;,&lt;empty&gt;)<SUB>4</SUB>> ]
"133143986176" [label = <(MODIFIER,VIRTUAL)> ]
"133143986177" [label = <(MODIFIER,PUBLIC)> ]
"133143986178" [label = <(MODIFIER,LAMBDA)> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>3</SUB>> ]
"171798691842" [label = <(TYPE_DECL,&lt;lambda&gt;0)<SUB>3</SUB>> ]
"133143986179" [label = <(MODIFIER,LAMBDA)> ]
"171798691843" [label = <(TYPE_DECL,&lt;lambda&gt;0&amp;Proc)<SUB>3</SUB>> ]
"103079215104" [label = <(MEMBER,call)> ]
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "111669149696"  [ label = "AST: "] 
  "111669149697" -> "171798691842"  [ label = "AST: "] 
  "111669149697" -> "171798691843"  [ label = "AST: "] 
  "111669149697" -> "25769803776"  [ label = "AST: "] 
  "111669149697" -> "133143986180"  [ label = "AST: "] 
  "111669149697" -> "133143986181"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803776" -> "94489280512"  [ label = "AST: "] 
  "25769803776" -> "30064771082"  [ label = "AST: "] 
  "25769803776" -> "146028888065"  [ label = "AST: "] 
  "30064771082" -> "68719476742"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "90194313219"  [ label = "AST: "] 
  "30064771083" -> "90194313220"  [ label = "AST: "] 
  "30064771083" -> "90194313221"  [ label = "AST: "] 
  "30064771083" -> "90194313222"  [ label = "AST: "] 
  "30064771083" -> "90194313223"  [ label = "AST: "] 
  "146028888065" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "68719476744"  [ label = "AST: "] 
  "30064771084" -> "68719476745"  [ label = "AST: "] 
  "30064771084" -> "180388626432"  [ label = "AST: "] 
  "30064771085" -> "68719476743"  [ label = "AST: "] 
  "30064771085" -> "55834574851"  [ label = "AST: "] 
  "111669149696" -> "115964116992"  [ label = "AST: "] 
  "111669149696" -> "115964116993"  [ label = "AST: "] 
  "111669149696" -> "25769803777"  [ label = "AST: "] 
  "111669149696" -> "133143986176"  [ label = "AST: "] 
  "111669149696" -> "133143986177"  [ label = "AST: "] 
  "111669149696" -> "133143986178"  [ label = "AST: "] 
  "111669149696" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "94489280514"  [ label = "AST: "] 
  "25769803778" -> "30064771072"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "25769803778" -> "68719476741"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "30064771079"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "55834574850"  [ label = "AST: "] 
  "30064771076" -> "68719476737"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "55834574849"  [ label = "AST: "] 
  "30064771078" -> "68719476738"  [ label = "AST: "] 
  "30064771078" -> "55834574848"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "90194313218"  [ label = "AST: "] 
  "30064771080" -> "90194313216"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "90194313217"  [ label = "AST: "] 
  "30064771081" -> "68719476740"  [ label = "AST: "] 
  "171798691842" -> "133143986179"  [ label = "AST: "] 
  "171798691843" -> "103079215104"  [ label = "AST: "] 
  "30064771082" -> "55834574851"  [ label = "CFG: "] 
  "146028888065" -> "128849018881"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771084" -> "146028888065"  [ label = "CFG: "] 
  "30064771085" -> "180388626432"  [ label = "CFG: "] 
  "180388626432" -> "30064771084"  [ label = "CFG: "] 
  "55834574851" -> "30064771085"  [ label = "CFG: "] 
  "111669149697" -> "30064771083"  [ label = "CFG: "] 
  "146028888065" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771082" -> "128849018881"  [ label = "DDG: [10000, 50000, 100000, 150000, 200000]"] 
  "30064771082" -> "128849018881"  [ label = "DDG: seq = [10000, 50000, 100000, 150000, 200000]"] 
  "30064771084" -> "128849018881"  [ label = "DDG: self"] 
  "30064771084" -> "128849018881"  [ label = "DDG: seq"] 
  "30064771084" -> "128849018881"  [ label = "DDG: assert_linear_performance(seq) do |n|
        REXML::Document.new('&lt;test testing=&quot;' + &quot;&gt;&quot; * n + '&quot;&gt;&lt;/test&gt;')
      end"] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: 100000"] 
  "30064771083" -> "30064771082"  [ label = "DDG: 150000"] 
  "30064771083" -> "30064771082"  [ label = "DDG: 50000"] 
  "30064771083" -> "30064771082"  [ label = "DDG: 200000"] 
  "30064771083" -> "30064771082"  [ label = "DDG: 10000"] 
  "30064771084" -> "146028888065"  [ label = "DDG: assert_linear_performance(seq) do |n|
        REXML::Document.new('&lt;test testing=&quot;' + &quot;&gt;&quot; * n + '&quot;&gt;&lt;/test&gt;')
      end"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "115964116994" -> "30064771084"  [ label = "DDG: self"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771082" -> "30064771084"  [ label = "DDG: seq"] 
}
"""
)
