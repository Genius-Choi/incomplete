[33mval[0m [36mres871[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "InitStorage_" {  
"111669149697" [label = <(METHOD,InitStorage_)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    rowPtrs_.resize(info_.height, nullptr);
 ...,{
    rowPtrs_.resize(info_.height, nullptr);
 ...)<SUB>1</SUB>> ]
"30064771072" [label = <(resize,rowPtrs_.resize(info_.height, nullptr))<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,rowPtrs_,rowPtrs_.resize(info_.height, nullptr))<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.fieldAccess,info_.height)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,info_,rowPtrs_.resize(info_.height, nullptr))<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,height,height)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,nullptr,rowPtrs_.resize(info_.height, nullptr))<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,size_t h: size_t)<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,h = info_.height)<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,h,h = info_.height)<SUB>4</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,info_.height)<SUB>4</SUB>> ]
"68719476739" [label = <(IDENTIFIER,info_,h = info_.height)<SUB>4</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,height,height)<SUB>4</SUB>> ]
"94489280513" [label = <(LOCAL,size_t rb: size_t)<SUB>5</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,rb = info_.rowbytes)<SUB>5</SUB>> ]
"68719476740" [label = <(IDENTIFIER,rb,rb = info_.rowbytes)<SUB>5</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,info_.rowbytes)<SUB>5</SUB>> ]
"68719476741" [label = <(IDENTIFIER,info_,rb = info_.rowbytes)<SUB>5</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,rowbytes,rowbytes)<SUB>5</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (h &gt; std::numeric_limits&lt;size_t&gt;::max() / rb))<SUB>9</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.greaterThan,h &gt; std::numeric_limits&lt;size_t&gt;::max() / rb)<SUB>9</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.lessThan,h &gt; std::numeric_limits&lt;size_t)<SUB>9</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.greaterThan,h &gt; std::numeric_limits)<SUB>9</SUB>> ]
"68719476742" [label = <(IDENTIFIER,h,h &gt; std::numeric_limits)<SUB>9</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>9</SUB>> ]
"68719476743" [label = <(IDENTIFIER,std,h &gt; std::numeric_limits)<SUB>9</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>9</SUB>> ]
"68719476744" [label = <(IDENTIFIER,size_t,h &gt; std::numeric_limits&lt;size_t)<SUB>9</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.division,::max() / rb)<SUB>9</SUB>> ]
"30064771083" [label = <(max,::max())<SUB>9</SUB>> ]
"68719476745" [label = <(IDENTIFIER,rb,::max() / rb)<SUB>9</SUB>> ]
"25769803778" [label = <(BLOCK,{
        // TODO Propagate this exception to J...,{
        // TODO Propagate this exception to J...)<SUB>9</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,THROW,throw std::runtime_error(&quot;Image is too large to allocate single buffer&quot;))<SUB>11</SUB>> ]
"30064771084" [label = <(runtime_error,std::runtime_error(&quot;Image is too large to alloc...)<SUB>11</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;Image is too large to allocate single buffer&quot;,std::runtime_error(&quot;Image is too large to alloc...)<SUB>11</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,data_ = new png_byte[h * rb])<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,data_,data_ = new png_byte[h * rb])<SUB>13</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.new,new png_byte[h * rb])<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,png_byte,new png_byte[h * rb])<SUB>13</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,FOR,for (size_t i = 0;i &lt; info_.height;++i))<SUB>15</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>> ]
"94489280514" [label = <(LOCAL,size_t i: size_t)<SUB>15</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>15</SUB>> ]
"68719476748" [label = <(IDENTIFIER,i,i = 0)<SUB>15</SUB>> ]
"90194313218" [label = <(LITERAL,0,i = 0)<SUB>15</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.lessThan,i &lt; info_.height)<SUB>15</SUB>> ]
"68719476749" [label = <(IDENTIFIER,i,i &lt; info_.height)<SUB>15</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.fieldAccess,info_.height)<SUB>15</SUB>> ]
"68719476750" [label = <(IDENTIFIER,info_,i &lt; info_.height)<SUB>15</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,height,height)<SUB>15</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>15</SUB>> ]
"68719476751" [label = <(IDENTIFIER,i,++i)<SUB>15</SUB>> ]
"25769803780" [label = <(BLOCK,{
        rowPtrs_[i] = data_ + i * rb;
    },{
        rowPtrs_[i] = data_ + i * rb;
    })<SUB>15</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,rowPtrs_[i] = data_ + i * rb)<SUB>16</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.indirectIndexAccess,rowPtrs_[i])<SUB>16</SUB>> ]
"68719476752" [label = <(IDENTIFIER,rowPtrs_,rowPtrs_[i] = data_ + i * rb)<SUB>16</SUB>> ]
"68719476753" [label = <(IDENTIFIER,i,rowPtrs_[i] = data_ + i * rb)<SUB>16</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.addition,data_ + i * rb)<SUB>16</SUB>> ]
"68719476754" [label = <(IDENTIFIER,data_,data_ + i * rb)<SUB>16</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.multiplication,i * rb)<SUB>16</SUB>> ]
"68719476755" [label = <(IDENTIFIER,i,i * rb)<SUB>16</SUB>> ]
"68719476756" [label = <(IDENTIFIER,rb,i * rb)<SUB>16</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "55834574849"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "55834574850"  [ label = "AST: "] 
  "47244640256" -> "30064771078"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771082"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "55834574851"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "90194313217"  [ label = "AST: "] 
  "30064771085" -> "68719476746"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "47244640258" -> "25769803779"  [ label = "AST: "] 
  "47244640258" -> "30064771088"  [ label = "AST: "] 
  "47244640258" -> "30064771090"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "25769803779" -> "94489280514"  [ label = "AST: "] 
  "25769803779" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "90194313218"  [ label = "AST: "] 
  "30064771088" -> "68719476749"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476750"  [ label = "AST: "] 
  "30064771089" -> "55834574852"  [ label = "AST: "] 
  "30064771090" -> "68719476751"  [ label = "AST: "] 
  "25769803780" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "68719476752"  [ label = "AST: "] 
  "30064771092" -> "68719476753"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476755"  [ label = "AST: "] 
  "30064771094" -> "68719476756"  [ label = "AST: "] 
  "30064771072" -> "55834574849"  [ label = "CFG: "] 
  "30064771074" -> "55834574850"  [ label = "CFG: "] 
  "30064771076" -> "55834574851"  [ label = "CFG: "] 
  "30064771085" -> "30064771087"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771078" -> "30064771084"  [ label = "CFG: "] 
  "30064771078" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "128849018880"  [ label = "CFG: "] 
  "30064771088" -> "30064771092"  [ label = "CFG: "] 
  "30064771090" -> "55834574852"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "55834574849" -> "30064771075"  [ label = "CFG: "] 
  "55834574850" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771078"  [ label = "CFG: "] 
  "30064771087" -> "55834574852"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771084" -> "128849018880"  [ label = "CFG: "] 
  "55834574852" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771094"  [ label = "CFG: "] 
  "30064771093" -> "30064771091"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "55834574851" -> "30064771081"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "30064771072" -> "128849018880"  [ label = "DDG: rowPtrs_"] 
  "30064771072" -> "128849018880"  [ label = "DDG: rowPtrs_.resize(info_.height, nullptr)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: info_.height"] 
  "30064771074" -> "128849018880"  [ label = "DDG: h = info_.height"] 
  "30064771076" -> "128849018880"  [ label = "DDG: info_.rowbytes"] 
  "30064771076" -> "128849018880"  [ label = "DDG: rb = info_.rowbytes"] 
  "30064771080" -> "128849018880"  [ label = "DDG: h"] 
  "30064771080" -> "128849018880"  [ label = "DDG: std::numeric_limits"] 
  "30064771079" -> "128849018880"  [ label = "DDG: h &gt; std::numeric_limits"] 
  "30064771078" -> "128849018880"  [ label = "DDG: h &gt; std::numeric_limits&lt;size_t"] 
  "30064771082" -> "128849018880"  [ label = "DDG: ::max()"] 
  "30064771082" -> "128849018880"  [ label = "DDG: rb"] 
  "30064771078" -> "128849018880"  [ label = "DDG: ::max() / rb"] 
  "30064771078" -> "128849018880"  [ label = "DDG: h &gt; std::numeric_limits&lt;size_t&gt;::max() / rb"] 
  "30064771084" -> "128849018880"  [ label = "DDG: std::runtime_error(&quot;Image is too large to allocate single buffer&quot;)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: png_byte"] 
  "30064771079" -> "128849018880"  [ label = "DDG: size_t"] 
  "30064771072" -> "30064771074"  [ label = "DDG: info_.height"] 
  "30064771086" -> "30064771085"  [ label = "DDG: png_byte"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: h &gt; std::numeric_limits"] 
  "30064771079" -> "30064771078"  [ label = "DDG: size_t"] 
  "30064771082" -> "30064771078"  [ label = "DDG: ::max()"] 
  "30064771082" -> "30064771078"  [ label = "DDG: rb"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771087" -> "30064771088"  [ label = "DDG: i"] 
  "30064771090" -> "30064771088"  [ label = "DDG: i"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771072" -> "30064771088"  [ label = "DDG: info_.height"] 
  "30064771094" -> "30064771090"  [ label = "DDG: i"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771085" -> "30064771091"  [ label = "DDG: data_"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771094" -> "30064771091"  [ label = "DDG: i"] 
  "30064771094" -> "30064771091"  [ label = "DDG: rb"] 
  "30064771080" -> "30064771079"  [ label = "DDG: h"] 
  "30064771080" -> "30064771079"  [ label = "DDG: std::numeric_limits"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771076" -> "30064771082"  [ label = "DDG: rb"] 
  "30064771074" -> "30064771080"  [ label = "DDG: h"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771085" -> "30064771093"  [ label = "DDG: data_"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771094" -> "30064771093"  [ label = "DDG: i"] 
  "30064771094" -> "30064771093"  [ label = "DDG: rb"] 
  "30064771088" -> "30064771094"  [ label = "DDG: i"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771082" -> "30064771094"  [ label = "DDG: rb"] 
  "30064771078" -> "30064771087"  [ label = "CDG: "] 
  "30064771078" -> "30064771088"  [ label = "CDG: "] 
  "30064771078" -> "30064771089"  [ label = "CDG: "] 
  "30064771078" -> "30064771084"  [ label = "CDG: "] 
  "30064771078" -> "30064771085"  [ label = "CDG: "] 
  "30064771078" -> "30064771086"  [ label = "CDG: "] 
  "30064771078" -> "55834574852"  [ label = "CDG: "] 
  "30064771088" -> "30064771088"  [ label = "CDG: "] 
  "30064771088" -> "30064771089"  [ label = "CDG: "] 
  "30064771088" -> "30064771090"  [ label = "CDG: "] 
  "30064771088" -> "30064771091"  [ label = "CDG: "] 
  "30064771088" -> "30064771092"  [ label = "CDG: "] 
  "30064771088" -> "30064771093"  [ label = "CDG: "] 
  "30064771088" -> "30064771094"  [ label = "CDG: "] 
  "30064771088" -> "55834574852"  [ label = "CDG: "] 
}
"""
)
