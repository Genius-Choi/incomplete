[33mval[0m [36mres181[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_return_inside_repeater" {  
"111669149697" [label = <(METHOD,test_return_inside_repeater)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,code = f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {...)<SUB>2</SUB>> ]
"68719476745" [label = <(IDENTIFIER,code,code = f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {...)<SUB>2</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.formatString,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,
@internal
def _final(a: ,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,typ,{typ})<SUB>4</SUB>> ]
"90194313217" [label = <(LITERAL,) -&gt; ,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>4</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,typ,{typ})<SUB>4</SUB>> ]
"90194313218" [label = <(LITERAL,:
    for i in range(10):
        if i &gt; a:
   ...,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>11</SUB>> ]
"68719476739" [label = <(IDENTIFIER,typ,{typ})<SUB>11</SUB>> ]
"90194313219" [label = <(LITERAL,) -&gt; ,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>11</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>11</SUB>> ]
"68719476740" [label = <(IDENTIFIER,typ,{typ})<SUB>11</SUB>> ]
"90194313220" [label = <(LITERAL,:
    b: ,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>11</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>12</SUB>> ]
"68719476741" [label = <(IDENTIFIER,typ,{typ})<SUB>12</SUB>> ]
"90194313221" [label = <(LITERAL, = self._final(a)
    return b

@external
def f...,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>12</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>16</SUB>> ]
"68719476742" [label = <(IDENTIFIER,typ,{typ})<SUB>16</SUB>> ]
"90194313222" [label = <(LITERAL,) -&gt; ,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>16</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>16</SUB>> ]
"68719476743" [label = <(IDENTIFIER,typ,{typ})<SUB>16</SUB>> ]
"90194313223" [label = <(LITERAL,:
    b: ,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>16</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>17</SUB>> ]
"68719476744" [label = <(IDENTIFIER,typ,{typ})<SUB>17</SUB>> ]
"90194313224" [label = <(LITERAL, = self._middle(a)
    return b
    ,f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
 ...)<SUB>17</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,c = get_contract(code))<SUB>21</SUB>> ]
"68719476748" [label = <(IDENTIFIER,c,c = get_contract(code))<SUB>21</SUB>> ]
"30064771082" [label = <(get_contract,get_contract(code))<SUB>21</SUB>> ]
"68719476747" [label = <(IDENTIFIER,get_contract,get_contract(code))<SUB>21</SUB>> ]
"68719476746" [label = <(IDENTIFIER,code,get_contract(code))<SUB>21</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assert,assert c.foo(6) == 7)<SUB>22</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.equals,c.foo(6) == 7)<SUB>22</SUB>> ]
"30064771085" [label = <(foo,c.foo(6))<SUB>22</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.fieldAccess,c.foo)<SUB>22</SUB>> ]
"68719476749" [label = <(IDENTIFIER,c,c.foo(6))<SUB>22</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,foo,foo)<SUB>22</SUB>> ]
"68719476750" [label = <(IDENTIFIER,c,c.foo(6))<SUB>22</SUB>> ]
"90194313225" [label = <(LITERAL,6,c.foo(6))<SUB>22</SUB>> ]
"90194313226" [label = <(LITERAL,7,c.foo(6) == 7)<SUB>22</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assert,assert c.foo(100) == 31337)<SUB>23</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.equals,c.foo(100) == 31337)<SUB>23</SUB>> ]
"30064771089" [label = <(foo,c.foo(100))<SUB>23</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,c.foo)<SUB>23</SUB>> ]
"68719476751" [label = <(IDENTIFIER,c,c.foo(100))<SUB>23</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,foo,foo)<SUB>23</SUB>> ]
"68719476752" [label = <(IDENTIFIER,c,c.foo(100))<SUB>23</SUB>> ]
"90194313227" [label = <(LITERAL,100,c.foo(100))<SUB>23</SUB>> ]
"90194313228" [label = <(LITERAL,31337,c.foo(100) == 31337)<SUB>23</SUB>> ]
"94489280513" [label = <(LOCAL,code: ANY)<SUB>2</SUB>> ]
"94489280514" [label = <(LOCAL,c: get_contract.&lt;returnValue&gt;)<SUB>21</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,get_contract)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,typ)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "90194313216"  [ label = "AST: "] 
  "30064771080" -> "30064771072"  [ label = "AST: "] 
  "30064771080" -> "90194313217"  [ label = "AST: "] 
  "30064771080" -> "30064771073"  [ label = "AST: "] 
  "30064771080" -> "90194313218"  [ label = "AST: "] 
  "30064771080" -> "30064771074"  [ label = "AST: "] 
  "30064771080" -> "90194313219"  [ label = "AST: "] 
  "30064771080" -> "30064771075"  [ label = "AST: "] 
  "30064771080" -> "90194313220"  [ label = "AST: "] 
  "30064771080" -> "30064771076"  [ label = "AST: "] 
  "30064771080" -> "90194313221"  [ label = "AST: "] 
  "30064771080" -> "30064771077"  [ label = "AST: "] 
  "30064771080" -> "90194313222"  [ label = "AST: "] 
  "30064771080" -> "30064771078"  [ label = "AST: "] 
  "30064771080" -> "90194313223"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771080" -> "90194313224"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "90194313226"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771085" -> "90194313225"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "55834574848"  [ label = "AST: "] 
  "30064771091" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771090" -> "90194313228"  [ label = "AST: "] 
  "30064771089" -> "30064771088"  [ label = "AST: "] 
  "30064771089" -> "68719476752"  [ label = "AST: "] 
  "30064771089" -> "90194313227"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771088" -> "55834574849"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771083" -> "55834574848"  [ label = "CFG: "] 
  "30064771087" -> "55834574849"  [ label = "CFG: "] 
  "30064771091" -> "128849018881"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "55834574848" -> "30064771084"  [ label = "CFG: "] 
  "55834574849" -> "30064771088"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "115964116992" -> "128849018881"  [ label = "DDG: get_contract"] 
  "30064771080" -> "128849018881"  [ label = "DDG: {typ}"] 
  "30064771079" -> "128849018881"  [ label = "DDG: typ"] 
  "30064771081" -> "128849018881"  [ label = "DDG: f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
    for i in range(10):
        if i &gt; a:
            return i
    return 31337

@internal
def _middle(a: {typ}) -&gt; {typ}:
    b: {typ} = self._final(a)
    return b

@external
def foo(a: {typ}) -&gt; {typ}:
    b: {typ} = self._middle(a)
    return b
    &quot;&quot;&quot;"] 
  "30064771081" -> "128849018881"  [ label = "DDG: code = f&quot;&quot;&quot;
@internal
def _final(a: {typ}) -&gt; {typ}:
    for i in range(10):
        if i &gt; a:
            return i
    return 31337

@internal
def _middle(a: {typ}) -&gt; {typ}:
    b: {typ} = self._final(a)
    return b

@external
def foo(a: {typ}) -&gt; {typ}:
    b: {typ} = self._middle(a)
    return b
    &quot;&quot;&quot;"] 
  "30064771082" -> "128849018881"  [ label = "DDG: code"] 
  "30064771083" -> "128849018881"  [ label = "DDG: get_contract(code)"] 
  "30064771083" -> "128849018881"  [ label = "DDG: c = get_contract(code)"] 
  "30064771086" -> "128849018881"  [ label = "DDG: c.foo(6)"] 
  "30064771087" -> "128849018881"  [ label = "DDG: c.foo(6) == 7"] 
  "30064771087" -> "128849018881"  [ label = "DDG: assert c.foo(6) == 7"] 
  "30064771089" -> "128849018881"  [ label = "DDG: c"] 
  "30064771090" -> "128849018881"  [ label = "DDG: c.foo(100)"] 
  "30064771091" -> "128849018881"  [ label = "DDG: c.foo(100) == 31337"] 
  "30064771091" -> "128849018881"  [ label = "DDG: assert c.foo(100) == 31337"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771080" -> "30064771081"  [ label = "DDG: :
    b: "] 
  "30064771080" -> "30064771081"  [ label = "DDG: 
@internal
def _final(a: "] 
  "30064771080" -> "30064771081"  [ label = "DDG: ) -&gt; "] 
  "30064771080" -> "30064771081"  [ label = "DDG: {typ}"] 
  "30064771080" -> "30064771081"  [ label = "DDG: :
    for i in range(10):
        if i &gt; a:
            return i
    return 31337

@internal
def _middle(a: "] 
  "30064771080" -> "30064771081"  [ label = "DDG:  = self._final(a)
    return b

@external
def foo(a: "] 
  "30064771080" -> "30064771081"  [ label = "DDG:  = self._middle(a)
    return b
    "] 
  "30064771082" -> "30064771083"  [ label = "DDG: code"] 
  "30064771086" -> "30064771087"  [ label = "DDG: c.foo(6)"] 
  "30064771086" -> "30064771087"  [ label = "DDG: 7"] 
  "30064771090" -> "30064771091"  [ label = "DDG: c.foo(100)"] 
  "30064771090" -> "30064771091"  [ label = "DDG: 31337"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771072" -> "30064771080"  [ label = "DDG: typ"] 
  "30064771073" -> "30064771080"  [ label = "DDG: typ"] 
  "30064771074" -> "30064771080"  [ label = "DDG: typ"] 
  "30064771075" -> "30064771080"  [ label = "DDG: typ"] 
  "30064771076" -> "30064771080"  [ label = "DDG: typ"] 
  "30064771077" -> "30064771080"  [ label = "DDG: typ"] 
  "30064771078" -> "30064771080"  [ label = "DDG: typ"] 
  "30064771079" -> "30064771080"  [ label = "DDG: typ"] 
  "111669149697" -> "68719476747"  [ label = "DDG: "] 
  "30064771081" -> "30064771082"  [ label = "DDG: code"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771085" -> "30064771086"  [ label = "DDG: c"] 
  "30064771085" -> "30064771086"  [ label = "DDG: 6"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771089" -> "30064771090"  [ label = "DDG: c"] 
  "30064771089" -> "30064771090"  [ label = "DDG: 100"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "115964116993" -> "30064771072"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771072" -> "30064771073"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771073" -> "30064771074"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771075" -> "30064771076"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771076" -> "30064771077"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771077" -> "30064771078"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771078" -> "30064771079"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771083" -> "30064771085"  [ label = "DDG: c"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771085" -> "30064771089"  [ label = "DDG: c"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
}
"""
)
