[33mval[0m [36mres7[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_bind" {  
"111669149697" [label = <(METHOD,test_bind)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const char *path)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	int sfd;
	struct sockaddr_un my_addr, peer_a...,{
	int sfd;
	struct sockaddr_un my_addr, peer_a...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,int sfd: int)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,struct sockaddr_un my_addr: sockaddr_un)<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,struct sockaddr_un peer_addr: sockaddr_un)<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,sfd = socket(AF_UNIX, SOCK_STREAM, 0))<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,sfd,sfd = socket(AF_UNIX, SOCK_STREAM, 0))<SUB>6</SUB>> ]
"30064771073" [label = <(socket,socket(AF_UNIX, SOCK_STREAM, 0))<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,AF_UNIX,socket(AF_UNIX, SOCK_STREAM, 0))<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,SOCK_STREAM,socket(AF_UNIX, SOCK_STREAM, 0))<SUB>6</SUB>> ]
"90194313216" [label = <(LITERAL,0,socket(AF_UNIX, SOCK_STREAM, 0))<SUB>6</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (sfd &lt; 0))<SUB>8</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.lessThan,sfd &lt; 0)<SUB>8</SUB>> ]
"68719476739" [label = <(IDENTIFIER,sfd,sfd &lt; 0)<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,0,sfd &lt; 0)<SUB>8</SUB>> ]
"25769803778" [label = <(BLOCK,{
		fprintf(stderr, &quot;Failed to open a socket fo...,{
		fprintf(stderr, &quot;Failed to open a socket fo...)<SUB>8</SUB>> ]
"30064771075" [label = <(fprintf,fprintf(stderr, &quot;Failed to open a socket for bi...)<SUB>9</SUB>> ]
"68719476740" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;Failed to open a socket for bi...)<SUB>9</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;Failed to open a socket for bind test\n&quot;,fprintf(stderr, &quot;Failed to open a socket for bi...)<SUB>9</SUB>> ]
"30064771076" [label = <(exit,exit(1))<SUB>10</SUB>> ]
"90194313219" [label = <(LITERAL,1,exit(1))<SUB>10</SUB>> ]
"30064771077" [label = <(memset,memset(&amp;my_addr, 0, sizeof(struct sockaddr_un)))<SUB>12</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.addressOf,&amp;my_addr)<SUB>12</SUB>> ]
"68719476741" [label = <(IDENTIFIER,my_addr,memset(&amp;my_addr, 0, sizeof(struct sockaddr_un)))<SUB>12</SUB>> ]
"90194313220" [label = <(LITERAL,0,memset(&amp;my_addr, 0, sizeof(struct sockaddr_un)))<SUB>12</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.sizeOf,sizeof(struct sockaddr_un))<SUB>12</SUB>> ]
"68719476742" [label = <(IDENTIFIER,struct sockaddr_un,sizeof(struct sockaddr_un))<SUB>12</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,my_addr.sun_family = AF_UNIX)<SUB>13</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,my_addr.sun_family)<SUB>13</SUB>> ]
"68719476743" [label = <(IDENTIFIER,my_addr,my_addr.sun_family = AF_UNIX)<SUB>13</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,sun_family,sun_family)<SUB>13</SUB>> ]
"68719476744" [label = <(IDENTIFIER,AF_UNIX,my_addr.sun_family = AF_UNIX)<SUB>13</SUB>> ]
"30064771082" [label = <(strncpy,strncpy(my_addr.sun_path, path,
			sizeof(my_ad...)<SUB>14</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.fieldAccess,my_addr.sun_path)<SUB>14</SUB>> ]
"68719476745" [label = <(IDENTIFIER,my_addr,strncpy(my_addr.sun_path, path,
			sizeof(my_ad...)<SUB>14</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,sun_path,sun_path)<SUB>14</SUB>> ]
"68719476746" [label = <(IDENTIFIER,path,strncpy(my_addr.sun_path, path,
			sizeof(my_ad...)<SUB>14</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.subtraction,sizeof(my_addr.sun_path) - 1)<SUB>15</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.sizeOf,sizeof(my_addr.sun_path))<SUB>15</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.fieldAccess,my_addr.sun_path)<SUB>15</SUB>> ]
"68719476747" [label = <(IDENTIFIER,my_addr,sizeof(my_addr.sun_path))<SUB>15</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,sun_path,sun_path)<SUB>15</SUB>> ]
"90194313221" [label = <(LITERAL,1,sizeof(my_addr.sun_path) - 1)<SUB>15</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (bind(sfd, (struct sockaddr *) &amp;my_addr,
				sizeof(struct sockaddr_un)) != -1))<SUB>16</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.notEquals,bind(sfd, (struct sockaddr *) &amp;my_addr,
				siz...)<SUB>16</SUB>> ]
"30064771088" [label = <(bind,bind(sfd, (struct sockaddr *) &amp;my_addr,
				siz...)<SUB>16</SUB>> ]
"68719476748" [label = <(IDENTIFIER,sfd,bind(sfd, (struct sockaddr *) &amp;my_addr,
				siz...)<SUB>16</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.cast,(struct sockaddr *) &amp;my_addr)<SUB>16</SUB>> ]
"184683593728" [label = <(UNKNOWN,struct sockaddr *,struct sockaddr *)<SUB>16</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.addressOf,&amp;my_addr)<SUB>16</SUB>> ]
"68719476749" [label = <(IDENTIFIER,my_addr,(struct sockaddr *) &amp;my_addr)<SUB>16</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.sizeOf,sizeof(struct sockaddr_un))<SUB>17</SUB>> ]
"68719476750" [label = <(IDENTIFIER,struct sockaddr_un,sizeof(struct sockaddr_un))<SUB>17</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.minus,-1)<SUB>17</SUB>> ]
"90194313222" [label = <(LITERAL,1,-1)<SUB>17</SUB>> ]
"25769803779" [label = <(BLOCK,{
		fprintf(stderr, &quot;leak at bind of %s\n&quot;, pat...,{
		fprintf(stderr, &quot;leak at bind of %s\n&quot;, pat...)<SUB>17</SUB>> ]
"30064771093" [label = <(fprintf,fprintf(stderr, &quot;leak at bind of %s\n&quot;, path))<SUB>18</SUB>> ]
"68719476751" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;leak at bind of %s\n&quot;, path))<SUB>18</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;leak at bind of %s\n&quot;,fprintf(stderr, &quot;leak at bind of %s\n&quot;, path))<SUB>18</SUB>> ]
"68719476752" [label = <(IDENTIFIER,path,fprintf(stderr, &quot;leak at bind of %s\n&quot;, path))<SUB>18</SUB>> ]
"30064771094" [label = <(exit,exit(1))<SUB>19</SUB>> ]
"90194313224" [label = <(LITERAL,1,exit(1))<SUB>19</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (errno != ENOENT &amp;&amp; errno != ENOSYS))<SUB>21</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.logicalAnd,errno != ENOENT &amp;&amp; errno != ENOSYS)<SUB>21</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.notEquals,errno != ENOENT)<SUB>21</SUB>> ]
"68719476753" [label = <(IDENTIFIER,errno,errno != ENOENT)<SUB>21</SUB>> ]
"68719476754" [label = <(IDENTIFIER,ENOENT,errno != ENOENT)<SUB>21</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.notEquals,errno != ENOSYS)<SUB>21</SUB>> ]
"68719476755" [label = <(IDENTIFIER,errno,errno != ENOSYS)<SUB>21</SUB>> ]
"68719476756" [label = <(IDENTIFIER,ENOSYS,errno != ENOSYS)<SUB>21</SUB>> ]
"25769803780" [label = <(BLOCK,{
		fprintf(stderr, &quot;leak at bind of %s: errno ...,{
		fprintf(stderr, &quot;leak at bind of %s: errno ...)<SUB>21</SUB>> ]
"30064771098" [label = <(fprintf,fprintf(stderr, &quot;leak at bind of %s: errno was ...)<SUB>22</SUB>> ]
"68719476757" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;leak at bind of %s: errno was ...)<SUB>22</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;leak at bind of %s: errno was %s\n&quot;,fprintf(stderr, &quot;leak at bind of %s: errno was ...)<SUB>22</SUB>> ]
"68719476758" [label = <(IDENTIFIER,path,fprintf(stderr, &quot;leak at bind of %s: errno was ...)<SUB>22</SUB>> ]
"30064771099" [label = <(strerror,strerror(errno))<SUB>22</SUB>> ]
"68719476759" [label = <(IDENTIFIER,errno,strerror(errno))<SUB>22</SUB>> ]
"30064771100" [label = <(exit,exit(1))<SUB>23</SUB>> ]
"90194313226" [label = <(LITERAL,1,exit(1))<SUB>23</SUB>> ]
"30064771101" [label = <(close,close(sfd))<SUB>25</SUB>> ]
"68719476760" [label = <(IDENTIFIER,sfd,close(sfd))<SUB>25</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "30064771101"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "30064771074"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "25769803778" -> "30064771075"  [ label = "AST: "] 
  "25769803778" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "90194313218"  [ label = "AST: "] 
  "30064771076" -> "90194313219"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "90194313220"  [ label = "AST: "] 
  "30064771077" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "55834574848"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "55834574849"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "90194313221"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "30064771086" -> "55834574850"  [ label = "AST: "] 
  "47244640257" -> "30064771087"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "30064771092"  [ label = "AST: "] 
  "30064771088" -> "68719476748"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "30064771091"  [ label = "AST: "] 
  "30064771089" -> "184683593728"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476749"  [ label = "AST: "] 
  "30064771091" -> "68719476750"  [ label = "AST: "] 
  "30064771092" -> "90194313222"  [ label = "AST: "] 
  "25769803779" -> "30064771093"  [ label = "AST: "] 
  "25769803779" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "68719476751"  [ label = "AST: "] 
  "30064771093" -> "90194313223"  [ label = "AST: "] 
  "30064771093" -> "68719476752"  [ label = "AST: "] 
  "30064771094" -> "90194313224"  [ label = "AST: "] 
  "47244640258" -> "30064771095"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "68719476753"  [ label = "AST: "] 
  "30064771096" -> "68719476754"  [ label = "AST: "] 
  "30064771097" -> "68719476755"  [ label = "AST: "] 
  "30064771097" -> "68719476756"  [ label = "AST: "] 
  "25769803780" -> "30064771098"  [ label = "AST: "] 
  "25769803780" -> "30064771100"  [ label = "AST: "] 
  "30064771098" -> "68719476757"  [ label = "AST: "] 
  "30064771098" -> "90194313225"  [ label = "AST: "] 
  "30064771098" -> "68719476758"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476759"  [ label = "AST: "] 
  "30064771100" -> "90194313226"  [ label = "AST: "] 
  "30064771101" -> "68719476760"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "55834574848"  [ label = "CFG: "] 
  "30064771080" -> "55834574849"  [ label = "CFG: "] 
  "30064771082" -> "184683593728"  [ label = "CFG: "] 
  "30064771101" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771077"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "55834574850"  [ label = "CFG: "] 
  "30064771084" -> "30064771082"  [ label = "CFG: "] 
  "30064771087" -> "30064771093"  [ label = "CFG: "] 
  "30064771087" -> "30064771096"  [ label = "CFG: "] 
  "30064771095" -> "30064771099"  [ label = "CFG: "] 
  "30064771095" -> "30064771101"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771078"  [ label = "CFG: "] 
  "55834574848" -> "30064771081"  [ label = "CFG: "] 
  "55834574849" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771088" -> "30064771092"  [ label = "CFG: "] 
  "30064771092" -> "30064771087"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771094" -> "30064771096"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771097" -> "30064771095"  [ label = "CFG: "] 
  "30064771098" -> "30064771100"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "30064771091"  [ label = "CFG: "] 
  "30064771091" -> "30064771088"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "55834574850" -> "30064771086"  [ label = "CFG: "] 
  "184683593728" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "30064771072" -> "128849018880"  [ label = "DDG: socket(AF_UNIX, SOCK_STREAM, 0)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: sfd = socket(AF_UNIX, SOCK_STREAM, 0)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: sfd &lt; 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: stderr"] 
  "30064771075" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;Failed to open a socket for bind test\n&quot;)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: memset(&amp;my_addr, 0, sizeof(struct sockaddr_un))"] 
  "30064771080" -> "128849018880"  [ label = "DDG: my_addr.sun_family"] 
  "30064771080" -> "128849018880"  [ label = "DDG: AF_UNIX"] 
  "30064771080" -> "128849018880"  [ label = "DDG: my_addr.sun_family = AF_UNIX"] 
  "30064771082" -> "128849018880"  [ label = "DDG: my_addr.sun_path"] 
  "30064771082" -> "128849018880"  [ label = "DDG: path"] 
  "30064771082" -> "128849018880"  [ label = "DDG: sizeof(my_addr.sun_path) - 1"] 
  "30064771082" -> "128849018880"  [ label = "DDG: strncpy(my_addr.sun_path, path,
			sizeof(my_addr.sun_path) - 1)"] 
  "30064771089" -> "128849018880"  [ label = "DDG: &amp;my_addr"] 
  "30064771088" -> "128849018880"  [ label = "DDG: (struct sockaddr *) &amp;my_addr"] 
  "30064771091" -> "128849018880"  [ label = "DDG: struct sockaddr_un"] 
  "30064771087" -> "128849018880"  [ label = "DDG: bind(sfd, (struct sockaddr *) &amp;my_addr,
				sizeof(struct sockaddr_un))"] 
  "30064771087" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771087" -> "128849018880"  [ label = "DDG: bind(sfd, (struct sockaddr *) &amp;my_addr,
				sizeof(struct sockaddr_un)) != -1"] 
  "30064771093" -> "128849018880"  [ label = "DDG: stderr"] 
  "30064771093" -> "128849018880"  [ label = "DDG: path"] 
  "30064771093" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;leak at bind of %s\n&quot;, path)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: errno"] 
  "30064771095" -> "128849018880"  [ label = "DDG: errno != ENOENT"] 
  "30064771097" -> "128849018880"  [ label = "DDG: errno"] 
  "30064771095" -> "128849018880"  [ label = "DDG: errno != ENOSYS"] 
  "30064771095" -> "128849018880"  [ label = "DDG: errno != ENOENT &amp;&amp; errno != ENOSYS"] 
  "30064771098" -> "128849018880"  [ label = "DDG: stderr"] 
  "30064771098" -> "128849018880"  [ label = "DDG: path"] 
  "30064771099" -> "128849018880"  [ label = "DDG: errno"] 
  "30064771098" -> "128849018880"  [ label = "DDG: strerror(errno)"] 
  "30064771098" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;leak at bind of %s: errno was %s\n&quot;, path, strerror(errno))"] 
  "30064771101" -> "128849018880"  [ label = "DDG: sfd"] 
  "30064771101" -> "128849018880"  [ label = "DDG: close(sfd)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: SOCK_STREAM"] 
  "30064771096" -> "128849018880"  [ label = "DDG: ENOENT"] 
  "30064771097" -> "128849018880"  [ label = "DDG: ENOSYS"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: AF_UNIX"] 
  "30064771073" -> "30064771072"  [ label = "DDG: SOCK_STREAM"] 
  "30064771073" -> "30064771072"  [ label = "DDG: 0"] 
  "30064771073" -> "30064771080"  [ label = "DDG: AF_UNIX"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "115964116992" -> "30064771082"  [ label = "DDG: path"] 
  "30064771084" -> "30064771082"  [ label = "DDG: 1"] 
  "30064771088" -> "30064771101"  [ label = "DDG: sfd"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771072" -> "30064771074"  [ label = "DDG: sfd"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: sfd"] 
  "30064771088" -> "30064771087"  [ label = "DDG: (struct sockaddr *) &amp;my_addr"] 
  "30064771092" -> "30064771087"  [ label = "DDG: 1"] 
  "30064771096" -> "30064771095"  [ label = "DDG: errno"] 
  "30064771096" -> "30064771095"  [ label = "DDG: ENOENT"] 
  "30064771097" -> "30064771095"  [ label = "DDG: errno"] 
  "30064771097" -> "30064771095"  [ label = "DDG: ENOSYS"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771074" -> "30064771088"  [ label = "DDG: sfd"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771077" -> "30064771088"  [ label = "DDG: &amp;my_addr"] 
  "30064771080" -> "30064771088"  [ label = "DDG: my_addr.sun_family"] 
  "30064771082" -> "30064771088"  [ label = "DDG: my_addr.sun_path"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771075" -> "30064771093"  [ label = "DDG: stderr"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771082" -> "30064771093"  [ label = "DDG: path"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771096" -> "30064771097"  [ label = "DDG: errno"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771075" -> "30064771098"  [ label = "DDG: stderr"] 
  "30064771093" -> "30064771098"  [ label = "DDG: stderr"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771082" -> "30064771098"  [ label = "DDG: path"] 
  "30064771093" -> "30064771098"  [ label = "DDG: path"] 
  "30064771099" -> "30064771098"  [ label = "DDG: errno"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771077" -> "30064771089"  [ label = "DDG: &amp;my_addr"] 
  "30064771080" -> "30064771089"  [ label = "DDG: my_addr.sun_family"] 
  "30064771082" -> "30064771089"  [ label = "DDG: my_addr.sun_path"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771096" -> "30064771099"  [ label = "DDG: errno"] 
  "30064771097" -> "30064771099"  [ label = "DDG: errno"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771074" -> "30064771076"  [ label = "CDG: "] 
  "30064771074" -> "30064771075"  [ label = "CDG: "] 
  "30064771087" -> "30064771094"  [ label = "CDG: "] 
  "30064771087" -> "30064771093"  [ label = "CDG: "] 
  "30064771095" -> "30064771100"  [ label = "CDG: "] 
  "30064771095" -> "30064771099"  [ label = "CDG: "] 
  "30064771095" -> "30064771098"  [ label = "CDG: "] 
  "30064771096" -> "30064771097"  [ label = "CDG: "] 
}
"""
)
