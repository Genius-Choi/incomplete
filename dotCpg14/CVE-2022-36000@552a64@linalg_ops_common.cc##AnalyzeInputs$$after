[33mval[0m [36mres1941[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "AnalyzeInputs" {  
"111669149697" [label = <(METHOD,AnalyzeInputs)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,OpKernelContext* context)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,TensorInputs* inputs)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,TensorShapes* input_matrix_shapes)<SUB>3</SUB>> ]
"115964116995" [label = <(PARAM,TensorShape* batch_shape)<SUB>3</SUB>> ]
"25769803777" [label = <(BLOCK,{
  int input_rank = -1;
  for (int i = 0; i &lt; ...,{
  int input_rank = -1;
  for (int i = 0; i &lt; ...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,int input_rank: int)<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,input_rank = -1)<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,input_rank,input_rank = -1)<SUB>4</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.minus,-1)<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,1,-1)<SUB>4</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; NumMatrixInputs(context);++i))<SUB>5</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>> ]
"94489280513" [label = <(LOCAL,int i: int)<SUB>5</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,i,i = 0)<SUB>5</SUB>> ]
"90194313217" [label = <(LITERAL,0,i = 0)<SUB>5</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.lessThan,i &lt; NumMatrixInputs(context))<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,i,i &lt; NumMatrixInputs(context))<SUB>5</SUB>> ]
"30064771076" [label = <(NumMatrixInputs,NumMatrixInputs(context))<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,context,NumMatrixInputs(context))<SUB>5</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>5</SUB>> ]
"68719476740" [label = <(IDENTIFIER,i,++i)<SUB>5</SUB>> ]
"25769803779" [label = <(BLOCK,{
    const Tensor&amp; in = context-&gt;input(i);
   ...,{
    const Tensor&amp; in = context-&gt;input(i);
   ...)<SUB>5</SUB>> ]
"94489280514" [label = <(LOCAL,const Tensor&amp; in: Tensor&amp;)<SUB>6</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,&amp; in = context-&gt;input(i))<SUB>6</SUB>> ]
"68719476741" [label = <(IDENTIFIER,in,&amp; in = context-&gt;input(i))<SUB>6</SUB>> ]
"30064771079" [label = <(input,context-&gt;input(i))<SUB>6</SUB>> ]
"68719476742" [label = <(IDENTIFIER,context,context-&gt;input(i))<SUB>6</SUB>> ]
"68719476743" [label = <(IDENTIFIER,i,context-&gt;input(i))<SUB>6</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (i == 0))<SUB>7</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.equals,i == 0)<SUB>7</SUB>> ]
"68719476744" [label = <(IDENTIFIER,i,i == 0)<SUB>7</SUB>> ]
"90194313218" [label = <(LITERAL,0,i == 0)<SUB>7</SUB>> ]
"25769803780" [label = <(BLOCK,{
      input_rank = in.dims();
      OP_REQUIR...,{
      input_rank = in.dims();
      OP_REQUIR...)<SUB>7</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,input_rank = in.dims())<SUB>8</SUB>> ]
"68719476745" [label = <(IDENTIFIER,input_rank,input_rank = in.dims())<SUB>8</SUB>> ]
"30064771082" [label = <(dims,in.dims())<SUB>8</SUB>> ]
"68719476746" [label = <(IDENTIFIER,in,in.dims())<SUB>8</SUB>> ]
"30064771083" [label = <(OP_REQUIRES,OP_REQUIRES(
          context, input_rank &gt;= 2...)<SUB>9</SUB>> ]
"68719476747" [label = <(IDENTIFIER,context,OP_REQUIRES(
          context, input_rank &gt;= 2...)<SUB>10</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.greaterEqualsThan,input_rank &gt;= 2)<SUB>10</SUB>> ]
"68719476748" [label = <(IDENTIFIER,input_rank,input_rank &gt;= 2)<SUB>10</SUB>> ]
"90194313219" [label = <(LITERAL,2,input_rank &gt;= 2)<SUB>10</SUB>> ]
"30064771085" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Input tensor &quot;, i,
   ...)<SUB>11</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;Input tensor &quot;,errors::InvalidArgument(&quot;Input tensor &quot;, i,
   ...)<SUB>11</SUB>> ]
"68719476749" [label = <(IDENTIFIER,i,errors::InvalidArgument(&quot;Input tensor &quot;, i,
   ...)<SUB>11</SUB>> ]
"90194313221" [label = <(LITERAL,&quot; must have rank &gt;= 2, got &quot;,errors::InvalidArgument(&quot;Input tensor &quot;, i,
   ...)<SUB>12</SUB>> ]
"68719476750" [label = <(IDENTIFIER,input_rank,errors::InvalidArgument(&quot;Input tensor &quot;, i,
   ...)<SUB>12</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,FOR,for (int dim = 0;dim &lt; input_rank - 2;++dim))<SUB>16</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>> ]
"94489280515" [label = <(LOCAL,int dim: int)<SUB>16</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,dim = 0)<SUB>16</SUB>> ]
"68719476751" [label = <(IDENTIFIER,dim,dim = 0)<SUB>16</SUB>> ]
"90194313222" [label = <(LITERAL,0,dim = 0)<SUB>16</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.lessThan,dim &lt; input_rank - 2)<SUB>16</SUB>> ]
"68719476752" [label = <(IDENTIFIER,dim,dim &lt; input_rank - 2)<SUB>16</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.subtraction,input_rank - 2)<SUB>16</SUB>> ]
"68719476753" [label = <(IDENTIFIER,input_rank,input_rank - 2)<SUB>16</SUB>> ]
"90194313223" [label = <(LITERAL,2,input_rank - 2)<SUB>16</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.preIncrement,++dim)<SUB>16</SUB>> ]
"68719476754" [label = <(IDENTIFIER,dim,++dim)<SUB>16</SUB>> ]
"25769803782" [label = <(BLOCK,{
        batch_shape-&gt;AddDim(in.dim_size(dim))...,{
        batch_shape-&gt;AddDim(in.dim_size(dim))...)<SUB>16</SUB>> ]
"30064771090" [label = <(AddDim,batch_shape-&gt;AddDim(in.dim_size(dim)))<SUB>17</SUB>> ]
"68719476755" [label = <(IDENTIFIER,batch_shape,batch_shape-&gt;AddDim(in.dim_size(dim)))<SUB>17</SUB>> ]
"30064771091" [label = <(dim_size,in.dim_size(dim))<SUB>17</SUB>> ]
"68719476756" [label = <(IDENTIFIER,in,in.dim_size(dim))<SUB>17</SUB>> ]
"68719476757" [label = <(IDENTIFIER,dim,in.dim_size(dim))<SUB>17</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>19</SUB>> ]
"25769803783" [label = <(BLOCK,{
      // Make sure that all inputs have the s...,{
      // Make sure that all inputs have the s...)<SUB>19</SUB>> ]
"30064771092" [label = <(OP_REQUIRES,OP_REQUIRES(context, input_rank == in.dims(),
 ...)<SUB>21</SUB>> ]
"68719476758" [label = <(IDENTIFIER,context,OP_REQUIRES(context, input_rank == in.dims(),
 ...)<SUB>21</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.equals,input_rank == in.dims())<SUB>21</SUB>> ]
"68719476759" [label = <(IDENTIFIER,input_rank,input_rank == in.dims())<SUB>21</SUB>> ]
"30064771094" [label = <(dims,in.dims())<SUB>21</SUB>> ]
"68719476760" [label = <(IDENTIFIER,in,in.dims())<SUB>21</SUB>> ]
"30064771095" [label = <(InvalidArgument,errors::InvalidArgument(
                      ...)<SUB>22</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;All input tensors must have the same rank.&quot;,errors::InvalidArgument(
                      ...)<SUB>23</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,FOR,for (int dim = 0;dim &lt; input_rank - 2;++dim))<SUB>24</SUB>> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>> ]
"94489280516" [label = <(LOCAL,int dim: int)<SUB>24</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,dim = 0)<SUB>24</SUB>> ]
"68719476761" [label = <(IDENTIFIER,dim,dim = 0)<SUB>24</SUB>> ]
"90194313225" [label = <(LITERAL,0,dim = 0)<SUB>24</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.lessThan,dim &lt; input_rank - 2)<SUB>24</SUB>> ]
"68719476762" [label = <(IDENTIFIER,dim,dim &lt; input_rank - 2)<SUB>24</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.subtraction,input_rank - 2)<SUB>24</SUB>> ]
"68719476763" [label = <(IDENTIFIER,input_rank,input_rank - 2)<SUB>24</SUB>> ]
"90194313226" [label = <(LITERAL,2,input_rank - 2)<SUB>24</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.preIncrement,++dim)<SUB>24</SUB>> ]
"68719476764" [label = <(IDENTIFIER,dim,++dim)<SUB>24</SUB>> ]
"25769803785" [label = <(BLOCK,{
        OP_REQUIRES(
            context, in....,{
        OP_REQUIRES(
            context, in....)<SUB>24</SUB>> ]
"30064771100" [label = <(OP_REQUIRES,OP_REQUIRES(
            context, in.dim_size(d...)<SUB>25</SUB>> ]
"68719476765" [label = <(IDENTIFIER,context,OP_REQUIRES(
            context, in.dim_size(d...)<SUB>26</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.equals,in.dim_size(dim) == batch_shape-&gt;dim_size(dim))<SUB>26</SUB>> ]
"30064771102" [label = <(dim_size,in.dim_size(dim))<SUB>26</SUB>> ]
"68719476766" [label = <(IDENTIFIER,in,in.dim_size(dim))<SUB>26</SUB>> ]
"68719476767" [label = <(IDENTIFIER,dim,in.dim_size(dim))<SUB>26</SUB>> ]
"30064771103" [label = <(dim_size,batch_shape-&gt;dim_size(dim))<SUB>26</SUB>> ]
"68719476768" [label = <(IDENTIFIER,batch_shape,batch_shape-&gt;dim_size(dim))<SUB>26</SUB>> ]
"68719476769" [label = <(IDENTIFIER,dim,batch_shape-&gt;dim_size(dim))<SUB>26</SUB>> ]
"30064771104" [label = <(InvalidArgument,errors::InvalidArgument(
                &quot;All i...)<SUB>27</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;All input tensors must have the same outer dim...,errors::InvalidArgument(
                &quot;All i...)<SUB>28</SUB>> ]
"94489280517" [label = <(LOCAL,const int row_dimension: int)<SUB>32</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.assignment,row_dimension = input_rank - 2)<SUB>32</SUB>> ]
"68719476770" [label = <(IDENTIFIER,row_dimension,row_dimension = input_rank - 2)<SUB>32</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.subtraction,input_rank - 2)<SUB>32</SUB>> ]
"68719476771" [label = <(IDENTIFIER,input_rank,input_rank - 2)<SUB>32</SUB>> ]
"90194313228" [label = <(LITERAL,2,input_rank - 2)<SUB>32</SUB>> ]
"94489280518" [label = <(LOCAL,const int col_dimension: int)<SUB>33</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.assignment,col_dimension = input_rank - 1)<SUB>33</SUB>> ]
"68719476772" [label = <(IDENTIFIER,col_dimension,col_dimension = input_rank - 1)<SUB>33</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.subtraction,input_rank - 1)<SUB>33</SUB>> ]
"68719476773" [label = <(IDENTIFIER,input_rank,input_rank - 1)<SUB>33</SUB>> ]
"90194313229" [label = <(LITERAL,1,input_rank - 1)<SUB>33</SUB>> ]
"94489280519" [label = <(LOCAL,const int64_t num_rows: int64_t)<SUB>34</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.assignment,num_rows = in.dim_size(row_dimension))<SUB>34</SUB>> ]
"68719476774" [label = <(IDENTIFIER,num_rows,num_rows = in.dim_size(row_dimension))<SUB>34</SUB>> ]
"30064771110" [label = <(dim_size,in.dim_size(row_dimension))<SUB>34</SUB>> ]
"68719476775" [label = <(IDENTIFIER,in,in.dim_size(row_dimension))<SUB>34</SUB>> ]
"68719476776" [label = <(IDENTIFIER,row_dimension,in.dim_size(row_dimension))<SUB>34</SUB>> ]
"94489280520" [label = <(LOCAL,const int64_t num_cols: int64_t)<SUB>35</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.assignment,num_cols = in.dim_size(col_dimension))<SUB>35</SUB>> ]
"68719476777" [label = <(IDENTIFIER,num_cols,num_cols = in.dim_size(col_dimension))<SUB>35</SUB>> ]
"30064771112" [label = <(dim_size,in.dim_size(col_dimension))<SUB>35</SUB>> ]
"68719476778" [label = <(IDENTIFIER,in,in.dim_size(col_dimension))<SUB>35</SUB>> ]
"68719476779" [label = <(IDENTIFIER,col_dimension,in.dim_size(col_dimension))<SUB>35</SUB>> ]
"30064771113" [label = <(emplace_back,input_matrix_shapes-&gt;emplace_back(
        std:...)<SUB>36</SUB>> ]
"68719476780" [label = <(IDENTIFIER,input_matrix_shapes,input_matrix_shapes-&gt;emplace_back(
        std:...)<SUB>36</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.greaterThan,std::initializer_list&lt;int64_t&gt;({num_rows, num_c...)<SUB>37</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.lessThan,std::initializer_list&lt;int64_t)<SUB>37</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.fieldAccess,std::initializer_list)<SUB>37</SUB>> ]
"68719476781" [label = <(IDENTIFIER,std,std::initializer_list&lt;int64_t)<SUB>37</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,initializer_list,initializer_list)<SUB>37</SUB>> ]
"68719476782" [label = <(IDENTIFIER,int64_t,std::initializer_list&lt;int64_t)<SUB>37</SUB>> ]
"25769803786" [label = <(BLOCK,{num_rows, num_cols},{num_rows, num_cols})<SUB>37</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.expressionList,num_rows, num_cols)<SUB>37</SUB>> ]
"68719476783" [label = <(IDENTIFIER,num_rows,num_rows, num_cols)<SUB>37</SUB>> ]
"68719476784" [label = <(IDENTIFIER,num_cols,num_rows, num_cols)<SUB>37</SUB>> ]
"30064771118" [label = <(emplace_back,inputs-&gt;emplace_back(&amp;in))<SUB>38</SUB>> ]
"68719476785" [label = <(IDENTIFIER,inputs,inputs-&gt;emplace_back(&amp;in))<SUB>38</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.addressOf,&amp;in)<SUB>38</SUB>> ]
"68719476786" [label = <(IDENTIFIER,in,inputs-&gt;emplace_back(&amp;in))<SUB>38</SUB>> ]
"30064771120" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, in.dtype() == Dat...)<SUB>39</SUB>> ]
"68719476787" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, in.dtype() == Dat...)<SUB>40</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.equals,in.dtype() == DataTypeToEnum&lt;InputScalar&gt;::v())<SUB>40</SUB>> ]
"30064771122" [label = <(dtype,in.dtype())<SUB>40</SUB>> ]
"68719476788" [label = <(IDENTIFIER,in,in.dtype())<SUB>40</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.greaterThan,DataTypeToEnum&lt;InputScalar&gt;::v())<SUB>40</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.lessThan,DataTypeToEnum&lt;InputScalar)<SUB>40</SUB>> ]
"68719476789" [label = <(IDENTIFIER,DataTypeToEnum,DataTypeToEnum&lt;InputScalar)<SUB>40</SUB>> ]
"68719476790" [label = <(IDENTIFIER,InputScalar,DataTypeToEnum&lt;InputScalar)<SUB>40</SUB>> ]
"30064771125" [label = <(v,::v())<SUB>40</SUB>> ]
"30064771126" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Invalid input dtype &quot;,...)<SUB>41</SUB>> ]
"90194313230" [label = <(LITERAL,&quot;Invalid input dtype &quot;,errors::InvalidArgument(&quot;Invalid input dtype &quot;,...)<SUB>41</SUB>> ]
"30064771127" [label = <(dtype,in.dtype())<SUB>41</SUB>> ]
"68719476791" [label = <(IDENTIFIER,in,in.dtype())<SUB>41</SUB>> ]
"90194313231" [label = <(LITERAL,&quot; vs &quot;,errors::InvalidArgument(&quot;Invalid input dtype &quot;,...)<SUB>41</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.greaterThan,DataTypeToEnum&lt;InputScalar&gt;::v())<SUB>42</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.lessThan,DataTypeToEnum&lt;InputScalar)<SUB>42</SUB>> ]
"68719476792" [label = <(IDENTIFIER,DataTypeToEnum,DataTypeToEnum&lt;InputScalar)<SUB>42</SUB>> ]
"68719476793" [label = <(IDENTIFIER,InputScalar,DataTypeToEnum&lt;InputScalar)<SUB>42</SUB>> ]
"30064771130" [label = <(v,::v())<SUB>42</SUB>> ]
"30064771131" [label = <(ValidateInputMatrixShapes,ValidateInputMatrixShapes(context, *input_matri...)<SUB>45</SUB>> ]
"68719476794" [label = <(IDENTIFIER,context,ValidateInputMatrixShapes(context, *input_matri...)<SUB>45</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.indirection,*input_matrix_shapes)<SUB>45</SUB>> ]
"68719476795" [label = <(IDENTIFIER,input_matrix_shapes,ValidateInputMatrixShapes(context, *input_matri...)<SUB>45</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771131"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "30064771075"  [ label = "AST: "] 
  "47244640256" -> "30064771077"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "25769803778" -> "94489280513"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "25769803779" -> "94489280514"  [ label = "AST: "] 
  "25769803779" -> "30064771078"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "25769803779" -> "94489280517"  [ label = "AST: "] 
  "25769803779" -> "30064771105"  [ label = "AST: "] 
  "25769803779" -> "94489280518"  [ label = "AST: "] 
  "25769803779" -> "30064771107"  [ label = "AST: "] 
  "25769803779" -> "94489280519"  [ label = "AST: "] 
  "25769803779" -> "30064771109"  [ label = "AST: "] 
  "25769803779" -> "94489280520"  [ label = "AST: "] 
  "25769803779" -> "30064771111"  [ label = "AST: "] 
  "25769803779" -> "30064771113"  [ label = "AST: "] 
  "25769803779" -> "30064771118"  [ label = "AST: "] 
  "25769803779" -> "30064771120"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "47244640257" -> "30064771080"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "47244640257" -> "47244640259"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "90194313218"  [ label = "AST: "] 
  "25769803780" -> "30064771081"  [ label = "AST: "] 
  "25769803780" -> "30064771083"  [ label = "AST: "] 
  "25769803780" -> "47244640258"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "68719476748"  [ label = "AST: "] 
  "30064771084" -> "90194313219"  [ label = "AST: "] 
  "30064771085" -> "90194313220"  [ label = "AST: "] 
  "30064771085" -> "68719476749"  [ label = "AST: "] 
  "30064771085" -> "90194313221"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "47244640258" -> "30064771087"  [ label = "AST: "] 
  "47244640258" -> "30064771089"  [ label = "AST: "] 
  "47244640258" -> "25769803782"  [ label = "AST: "] 
  "25769803781" -> "94489280515"  [ label = "AST: "] 
  "25769803781" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476751"  [ label = "AST: "] 
  "30064771086" -> "90194313222"  [ label = "AST: "] 
  "30064771087" -> "68719476752"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "30064771088" -> "90194313223"  [ label = "AST: "] 
  "30064771089" -> "68719476754"  [ label = "AST: "] 
  "25769803782" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476755"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476756"  [ label = "AST: "] 
  "30064771091" -> "68719476757"  [ label = "AST: "] 
  "47244640259" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "30064771092"  [ label = "AST: "] 
  "25769803783" -> "47244640260"  [ label = "AST: "] 
  "30064771092" -> "68719476758"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "30064771095"  [ label = "AST: "] 
  "30064771093" -> "68719476759"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476760"  [ label = "AST: "] 
  "30064771095" -> "90194313224"  [ label = "AST: "] 
  "47244640260" -> "25769803784"  [ label = "AST: "] 
  "47244640260" -> "30064771097"  [ label = "AST: "] 
  "47244640260" -> "30064771099"  [ label = "AST: "] 
  "47244640260" -> "25769803785"  [ label = "AST: "] 
  "25769803784" -> "94489280516"  [ label = "AST: "] 
  "25769803784" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476761"  [ label = "AST: "] 
  "30064771096" -> "90194313225"  [ label = "AST: "] 
  "30064771097" -> "68719476762"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476763"  [ label = "AST: "] 
  "30064771098" -> "90194313226"  [ label = "AST: "] 
  "30064771099" -> "68719476764"  [ label = "AST: "] 
  "25769803785" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476765"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "30064771104"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "68719476766"  [ label = "AST: "] 
  "30064771102" -> "68719476767"  [ label = "AST: "] 
  "30064771103" -> "68719476768"  [ label = "AST: "] 
  "30064771103" -> "68719476769"  [ label = "AST: "] 
  "30064771104" -> "90194313227"  [ label = "AST: "] 
  "30064771105" -> "68719476770"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "68719476771"  [ label = "AST: "] 
  "30064771106" -> "90194313228"  [ label = "AST: "] 
  "30064771107" -> "68719476772"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "68719476773"  [ label = "AST: "] 
  "30064771108" -> "90194313229"  [ label = "AST: "] 
  "30064771109" -> "68719476774"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "68719476775"  [ label = "AST: "] 
  "30064771110" -> "68719476776"  [ label = "AST: "] 
  "30064771111" -> "68719476777"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "68719476778"  [ label = "AST: "] 
  "30064771112" -> "68719476779"  [ label = "AST: "] 
  "30064771113" -> "68719476780"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771114" -> "25769803786"  [ label = "AST: "] 
  "30064771115" -> "30064771116"  [ label = "AST: "] 
  "30064771115" -> "68719476782"  [ label = "AST: "] 
  "30064771116" -> "68719476781"  [ label = "AST: "] 
  "30064771116" -> "55834574848"  [ label = "AST: "] 
  "25769803786" -> "30064771117"  [ label = "AST: "] 
  "30064771117" -> "68719476783"  [ label = "AST: "] 
  "30064771117" -> "68719476784"  [ label = "AST: "] 
  "30064771118" -> "68719476785"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "68719476786"  [ label = "AST: "] 
  "30064771120" -> "68719476787"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "30064771126"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "30064771123"  [ label = "AST: "] 
  "30064771122" -> "68719476788"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771123" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "68719476789"  [ label = "AST: "] 
  "30064771124" -> "68719476790"  [ label = "AST: "] 
  "30064771126" -> "90194313230"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771126" -> "90194313231"  [ label = "AST: "] 
  "30064771126" -> "30064771128"  [ label = "AST: "] 
  "30064771127" -> "68719476791"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771128" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "68719476792"  [ label = "AST: "] 
  "30064771129" -> "68719476793"  [ label = "AST: "] 
  "30064771131" -> "68719476794"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771132" -> "68719476795"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771131" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771079"  [ label = "CFG: "] 
  "30064771075" -> "30064771132"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771105" -> "30064771108"  [ label = "CFG: "] 
  "30064771107" -> "30064771110"  [ label = "CFG: "] 
  "30064771109" -> "30064771112"  [ label = "CFG: "] 
  "30064771111" -> "55834574848"  [ label = "CFG: "] 
  "30064771113" -> "30064771119"  [ label = "CFG: "] 
  "30064771118" -> "30064771122"  [ label = "CFG: "] 
  "30064771120" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771080" -> "30064771094"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771114" -> "30064771113"  [ label = "CFG: "] 
  "30064771119" -> "30064771118"  [ label = "CFG: "] 
  "30064771121" -> "30064771127"  [ label = "CFG: "] 
  "30064771126" -> "30064771120"  [ label = "CFG: "] 
  "30064771081" -> "30064771084"  [ label = "CFG: "] 
  "30064771083" -> "30064771086"  [ label = "CFG: "] 
  "30064771115" -> "30064771117"  [ label = "CFG: "] 
  "30064771122" -> "30064771124"  [ label = "CFG: "] 
  "30064771123" -> "30064771121"  [ label = "CFG: "] 
  "30064771127" -> "30064771129"  [ label = "CFG: "] 
  "30064771128" -> "30064771126"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771085" -> "30064771083"  [ label = "CFG: "] 
  "30064771087" -> "30064771091"  [ label = "CFG: "] 
  "30064771087" -> "30064771106"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771096"  [ label = "CFG: "] 
  "30064771116" -> "30064771115"  [ label = "CFG: "] 
  "30064771117" -> "30064771114"  [ label = "CFG: "] 
  "30064771124" -> "30064771125"  [ label = "CFG: "] 
  "30064771125" -> "30064771123"  [ label = "CFG: "] 
  "30064771129" -> "30064771130"  [ label = "CFG: "] 
  "30064771130" -> "30064771128"  [ label = "CFG: "] 
  "30064771086" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771093" -> "30064771095"  [ label = "CFG: "] 
  "30064771095" -> "30064771092"  [ label = "CFG: "] 
  "30064771097" -> "30064771102"  [ label = "CFG: "] 
  "30064771097" -> "30064771106"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "55834574848" -> "30064771116"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771096" -> "30064771098"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771101" -> "30064771104"  [ label = "CFG: "] 
  "30064771104" -> "30064771100"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771103" -> "30064771101"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "115964116993" -> "128849018880"  [ label = "DDG: inputs"] 
  "115964116994" -> "128849018880"  [ label = "DDG: input_matrix_shapes"] 
  "115964116995" -> "128849018880"  [ label = "DDG: batch_shape"] 
  "30064771072" -> "128849018880"  [ label = "DDG: input_rank"] 
  "30064771072" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771072" -> "128849018880"  [ label = "DDG: input_rank = -1"] 
  "30064771074" -> "128849018880"  [ label = "DDG: i = 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: i"] 
  "30064771075" -> "128849018880"  [ label = "DDG: NumMatrixInputs(context)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: i &lt; NumMatrixInputs(context)"] 
  "30064771131" -> "128849018880"  [ label = "DDG: context"] 
  "30064771131" -> "128849018880"  [ label = "DDG: *input_matrix_shapes"] 
  "30064771131" -> "128849018880"  [ label = "DDG: ValidateInputMatrixShapes(context, *input_matrix_shapes)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: context-&gt;input(i)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: &amp; in = context-&gt;input(i)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: i == 0"] 
  "30064771093" -> "128849018880"  [ label = "DDG: in.dims()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: input_rank == in.dims()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                      &quot;All input tensors must have the same rank.&quot;)"] 
  "30064771092" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, input_rank == in.dims(),
                  errors::InvalidArgument(
                      &quot;All input tensors must have the same rank.&quot;))"] 
  "30064771096" -> "128849018880"  [ label = "DDG: dim = 0"] 
  "30064771097" -> "128849018880"  [ label = "DDG: dim"] 
  "30064771097" -> "128849018880"  [ label = "DDG: dim &lt; input_rank - 2"] 
  "30064771101" -> "128849018880"  [ label = "DDG: in.dim_size(dim)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: batch_shape"] 
  "30064771101" -> "128849018880"  [ label = "DDG: batch_shape-&gt;dim_size(dim)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: in.dim_size(dim) == batch_shape-&gt;dim_size(dim)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                &quot;All input tensors must have the same outer dimensions.&quot;)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
            context, in.dim_size(dim) == batch_shape-&gt;dim_size(dim),
            errors::InvalidArgument(
                &quot;All input tensors must have the same outer dimensions.&quot;))"] 
  "30064771099" -> "128849018880"  [ label = "DDG: ++dim"] 
  "30064771081" -> "128849018880"  [ label = "DDG: in.dims()"] 
  "30064771081" -> "128849018880"  [ label = "DDG: input_rank = in.dims()"] 
  "30064771083" -> "128849018880"  [ label = "DDG: input_rank &gt;= 2"] 
  "30064771083" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;Input tensor &quot;, i,
                                  &quot; must have rank &gt;= 2, got &quot;, input_rank)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
          context, input_rank &gt;= 2,
          errors::InvalidArgument(&quot;Input tensor &quot;, i,
                                  &quot; must have rank &gt;= 2, got &quot;, input_rank))"] 
  "30064771086" -> "128849018880"  [ label = "DDG: dim = 0"] 
  "30064771087" -> "128849018880"  [ label = "DDG: dim"] 
  "30064771087" -> "128849018880"  [ label = "DDG: dim &lt; input_rank - 2"] 
  "30064771105" -> "128849018880"  [ label = "DDG: input_rank - 2"] 
  "30064771105" -> "128849018880"  [ label = "DDG: row_dimension = input_rank - 2"] 
  "30064771108" -> "128849018880"  [ label = "DDG: input_rank"] 
  "30064771107" -> "128849018880"  [ label = "DDG: input_rank - 1"] 
  "30064771107" -> "128849018880"  [ label = "DDG: col_dimension = input_rank - 1"] 
  "30064771110" -> "128849018880"  [ label = "DDG: row_dimension"] 
  "30064771109" -> "128849018880"  [ label = "DDG: in.dim_size(row_dimension)"] 
  "30064771109" -> "128849018880"  [ label = "DDG: num_rows = in.dim_size(row_dimension)"] 
  "30064771112" -> "128849018880"  [ label = "DDG: col_dimension"] 
  "30064771111" -> "128849018880"  [ label = "DDG: in.dim_size(col_dimension)"] 
  "30064771111" -> "128849018880"  [ label = "DDG: num_cols = in.dim_size(col_dimension)"] 
  "30064771113" -> "128849018880"  [ label = "DDG: input_matrix_shapes"] 
  "30064771115" -> "128849018880"  [ label = "DDG: std::initializer_list"] 
  "30064771114" -> "128849018880"  [ label = "DDG: std::initializer_list&lt;int64_t"] 
  "30064771117" -> "128849018880"  [ label = "DDG: num_rows"] 
  "30064771117" -> "128849018880"  [ label = "DDG: num_cols"] 
  "30064771117" -> "128849018880"  [ label = "DDG: num_rows, num_cols"] 
  "30064771113" -> "128849018880"  [ label = "DDG: std::initializer_list&lt;int64_t&gt;({num_rows, num_cols})"] 
  "30064771113" -> "128849018880"  [ label = "DDG: input_matrix_shapes-&gt;emplace_back(
        std::initializer_list&lt;int64_t&gt;({num_rows, num_cols}))"] 
  "30064771118" -> "128849018880"  [ label = "DDG: inputs"] 
  "30064771118" -> "128849018880"  [ label = "DDG: &amp;in"] 
  "30064771118" -> "128849018880"  [ label = "DDG: inputs-&gt;emplace_back(&amp;in)"] 
  "30064771120" -> "128849018880"  [ label = "DDG: in.dtype() == DataTypeToEnum&lt;InputScalar&gt;::v()"] 
  "30064771127" -> "128849018880"  [ label = "DDG: in"] 
  "30064771126" -> "128849018880"  [ label = "DDG: in.dtype()"] 
  "30064771129" -> "128849018880"  [ label = "DDG: DataTypeToEnum"] 
  "30064771129" -> "128849018880"  [ label = "DDG: InputScalar"] 
  "30064771128" -> "128849018880"  [ label = "DDG: DataTypeToEnum&lt;InputScalar"] 
  "30064771128" -> "128849018880"  [ label = "DDG: ::v()"] 
  "30064771126" -> "128849018880"  [ label = "DDG: DataTypeToEnum&lt;InputScalar&gt;::v()"] 
  "30064771120" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;Invalid input dtype &quot;, in.dtype(), &quot; vs &quot;,
                                DataTypeToEnum&lt;InputScalar&gt;::v())"] 
  "30064771120" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
        context, in.dtype() == DataTypeToEnum&lt;InputScalar&gt;::v(),
        errors::InvalidArgument(&quot;Invalid input dtype &quot;, in.dtype(), &quot; vs &quot;,
                                DataTypeToEnum&lt;InputScalar&gt;::v()))"] 
  "30064771077" -> "128849018880"  [ label = "DDG: ++i"] 
  "30064771090" -> "128849018880"  [ label = "DDG: batch_shape"] 
  "30064771090" -> "128849018880"  [ label = "DDG: in.dim_size(dim)"] 
  "30064771090" -> "128849018880"  [ label = "DDG: batch_shape-&gt;AddDim(in.dim_size(dim))"] 
  "30064771089" -> "128849018880"  [ label = "DDG: ++dim"] 
  "30064771115" -> "128849018880"  [ label = "DDG: int64_t"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: 1"] 
  "30064771076" -> "30064771131"  [ label = "DDG: context"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: i"] 
  "30064771077" -> "30064771075"  [ label = "DDG: i"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: context"] 
  "30064771080" -> "30064771077"  [ label = "DDG: i"] 
  "30064771085" -> "30064771077"  [ label = "DDG: i"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: context"] 
  "30064771079" -> "30064771078"  [ label = "DDG: i"] 
  "30064771106" -> "30064771105"  [ label = "DDG: input_rank"] 
  "30064771106" -> "30064771105"  [ label = "DDG: 2"] 
  "30064771108" -> "30064771107"  [ label = "DDG: input_rank"] 
  "30064771108" -> "30064771107"  [ label = "DDG: 1"] 
  "30064771110" -> "30064771109"  [ label = "DDG: in"] 
  "30064771110" -> "30064771109"  [ label = "DDG: row_dimension"] 
  "30064771112" -> "30064771111"  [ label = "DDG: in"] 
  "30064771112" -> "30064771111"  [ label = "DDG: col_dimension"] 
  "115964116992" -> "30064771076"  [ label = "DDG: context"] 
  "30064771120" -> "30064771076"  [ label = "DDG: context"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "115964116994" -> "30064771113"  [ label = "DDG: input_matrix_shapes"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771114" -> "30064771113"  [ label = "DDG: std::initializer_list&lt;int64_t"] 
  "30064771114" -> "30064771113"  [ label = "DDG: {num_rows, num_cols}"] 
  "30064771114" -> "30064771113"  [ label = "DDG: "] 
  "115964116993" -> "30064771118"  [ label = "DDG: inputs"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "30064771112" -> "30064771118"  [ label = "DDG: in"] 
  "30064771092" -> "30064771120"  [ label = "DDG: context"] 
  "30064771100" -> "30064771120"  [ label = "DDG: context"] 
  "30064771083" -> "30064771120"  [ label = "DDG: context"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771121" -> "30064771120"  [ label = "DDG: in.dtype()"] 
  "30064771121" -> "30064771120"  [ label = "DDG: DataTypeToEnum&lt;InputScalar&gt;::v()"] 
  "30064771126" -> "30064771120"  [ label = "DDG: &quot;Invalid input dtype &quot;"] 
  "30064771126" -> "30064771120"  [ label = "DDG: in.dtype()"] 
  "30064771126" -> "30064771120"  [ label = "DDG: &quot; vs &quot;"] 
  "30064771126" -> "30064771120"  [ label = "DDG: DataTypeToEnum&lt;InputScalar&gt;::v()"] 
  "30064771076" -> "30064771079"  [ label = "DDG: context"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771075" -> "30064771079"  [ label = "DDG: i"] 
  "30064771079" -> "30064771080"  [ label = "DDG: i"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: in"] 
  "30064771098" -> "30064771106"  [ label = "DDG: input_rank"] 
  "30064771088" -> "30064771106"  [ label = "DDG: input_rank"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771106" -> "30064771108"  [ label = "DDG: input_rank"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771094" -> "30064771110"  [ label = "DDG: in"] 
  "30064771102" -> "30064771110"  [ label = "DDG: in"] 
  "30064771082" -> "30064771110"  [ label = "DDG: in"] 
  "30064771118" -> "30064771110"  [ label = "DDG: &amp;in"] 
  "30064771091" -> "30064771110"  [ label = "DDG: in"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771105" -> "30064771110"  [ label = "DDG: row_dimension"] 
  "30064771110" -> "30064771112"  [ label = "DDG: in"] 
  "30064771118" -> "30064771112"  [ label = "DDG: &amp;in"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771107" -> "30064771112"  [ label = "DDG: col_dimension"] 
  "30064771115" -> "30064771114"  [ label = "DDG: std::initializer_list"] 
  "30064771115" -> "30064771114"  [ label = "DDG: int64_t"] 
  "30064771117" -> "30064771114"  [ label = "DDG: num_rows, num_cols"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771122" -> "30064771121"  [ label = "DDG: in"] 
  "30064771123" -> "30064771121"  [ label = "DDG: DataTypeToEnum&lt;InputScalar"] 
  "30064771123" -> "30064771121"  [ label = "DDG: ::v()"] 
  "111669149697" -> "30064771126"  [ label = "DDG: "] 
  "30064771127" -> "30064771126"  [ label = "DDG: in"] 
  "30064771128" -> "30064771126"  [ label = "DDG: DataTypeToEnum&lt;InputScalar"] 
  "30064771128" -> "30064771126"  [ label = "DDG: ::v()"] 
  "30064771079" -> "30064771083"  [ label = "DDG: context"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771084" -> "30064771083"  [ label = "DDG: input_rank"] 
  "30064771084" -> "30064771083"  [ label = "DDG: 2"] 
  "30064771085" -> "30064771083"  [ label = "DDG: &quot;Input tensor &quot;"] 
  "30064771085" -> "30064771083"  [ label = "DDG: i"] 
  "30064771085" -> "30064771083"  [ label = "DDG: &quot; must have rank &gt;= 2, got &quot;"] 
  "30064771085" -> "30064771083"  [ label = "DDG: input_rank"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771112" -> "30064771122"  [ label = "DDG: in"] 
  "30064771118" -> "30064771122"  [ label = "DDG: &amp;in"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771124" -> "30064771123"  [ label = "DDG: DataTypeToEnum"] 
  "30064771124" -> "30064771123"  [ label = "DDG: InputScalar"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771118" -> "30064771127"  [ label = "DDG: &amp;in"] 
  "30064771122" -> "30064771127"  [ label = "DDG: in"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: DataTypeToEnum"] 
  "30064771129" -> "30064771128"  [ label = "DDG: InputScalar"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771078" -> "30064771082"  [ label = "DDG: in"] 
  "30064771118" -> "30064771082"  [ label = "DDG: &amp;in"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771081" -> "30064771084"  [ label = "DDG: input_rank"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771080" -> "30064771085"  [ label = "DDG: i"] 
  "30064771084" -> "30064771085"  [ label = "DDG: input_rank"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771086" -> "30064771087"  [ label = "DDG: dim"] 
  "30064771089" -> "30064771087"  [ label = "DDG: dim"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: input_rank"] 
  "30064771088" -> "30064771087"  [ label = "DDG: 2"] 
  "30064771091" -> "30064771089"  [ label = "DDG: dim"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771079" -> "30064771092"  [ label = "DDG: context"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: input_rank"] 
  "30064771093" -> "30064771092"  [ label = "DDG: in.dims()"] 
  "30064771095" -> "30064771092"  [ label = "DDG: &quot;All input tensors must have the same rank.&quot;"] 
  "30064771109" -> "30064771117"  [ label = "DDG: num_rows"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771111" -> "30064771117"  [ label = "DDG: num_cols"] 
  "30064771129" -> "30064771124"  [ label = "DDG: DataTypeToEnum"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771129" -> "30064771124"  [ label = "DDG: InputScalar"] 
  "30064771124" -> "30064771129"  [ label = "DDG: DataTypeToEnum"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "30064771124" -> "30064771129"  [ label = "DDG: InputScalar"] 
  "30064771085" -> "30064771088"  [ label = "DDG: input_rank"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "115964116995" -> "30064771090"  [ label = "DDG: batch_shape"] 
  "30064771103" -> "30064771090"  [ label = "DDG: batch_shape"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771091" -> "30064771090"  [ label = "DDG: in"] 
  "30064771091" -> "30064771090"  [ label = "DDG: dim"] 
  "30064771072" -> "30064771093"  [ label = "DDG: input_rank"] 
  "30064771108" -> "30064771093"  [ label = "DDG: input_rank"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771094" -> "30064771093"  [ label = "DDG: in"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771096" -> "30064771097"  [ label = "DDG: dim"] 
  "30064771099" -> "30064771097"  [ label = "DDG: dim"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771098" -> "30064771097"  [ label = "DDG: input_rank"] 
  "30064771098" -> "30064771097"  [ label = "DDG: 2"] 
  "30064771103" -> "30064771099"  [ label = "DDG: dim"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771082" -> "30064771091"  [ label = "DDG: in"] 
  "30064771118" -> "30064771091"  [ label = "DDG: &amp;in"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771087" -> "30064771091"  [ label = "DDG: dim"] 
  "30064771078" -> "30064771094"  [ label = "DDG: in"] 
  "30064771118" -> "30064771094"  [ label = "DDG: &amp;in"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771093" -> "30064771098"  [ label = "DDG: input_rank"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771092" -> "30064771100"  [ label = "DDG: context"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: in.dim_size(dim)"] 
  "30064771101" -> "30064771100"  [ label = "DDG: batch_shape-&gt;dim_size(dim)"] 
  "30064771104" -> "30064771100"  [ label = "DDG: &quot;All input tensors must have the same outer dimensions.&quot;"] 
  "30064771102" -> "30064771101"  [ label = "DDG: in"] 
  "30064771102" -> "30064771101"  [ label = "DDG: dim"] 
  "30064771103" -> "30064771101"  [ label = "DDG: batch_shape"] 
  "30064771103" -> "30064771101"  [ label = "DDG: dim"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771094" -> "30064771102"  [ label = "DDG: in"] 
  "30064771118" -> "30064771102"  [ label = "DDG: &amp;in"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771097" -> "30064771102"  [ label = "DDG: dim"] 
  "115964116995" -> "30064771103"  [ label = "DDG: batch_shape"] 
  "30064771090" -> "30064771103"  [ label = "DDG: batch_shape"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771102" -> "30064771103"  [ label = "DDG: dim"] 
  "30064771075" -> "30064771126"  [ label = "CDG: "] 
  "30064771075" -> "30064771127"  [ label = "CDG: "] 
  "30064771075" -> "30064771124"  [ label = "CDG: "] 
  "30064771075" -> "30064771125"  [ label = "CDG: "] 
  "30064771075" -> "30064771130"  [ label = "CDG: "] 
  "30064771075" -> "30064771128"  [ label = "CDG: "] 
  "30064771075" -> "30064771129"  [ label = "CDG: "] 
  "30064771075" -> "30064771106"  [ label = "CDG: "] 
  "30064771075" -> "30064771107"  [ label = "CDG: "] 
  "30064771075" -> "30064771105"  [ label = "CDG: "] 
  "30064771075" -> "30064771110"  [ label = "CDG: "] 
  "30064771075" -> "30064771111"  [ label = "CDG: "] 
  "30064771075" -> "30064771108"  [ label = "CDG: "] 
  "30064771075" -> "30064771109"  [ label = "CDG: "] 
  "30064771075" -> "30064771114"  [ label = "CDG: "] 
  "30064771075" -> "30064771115"  [ label = "CDG: "] 
  "30064771075" -> "30064771112"  [ label = "CDG: "] 
  "30064771075" -> "30064771113"  [ label = "CDG: "] 
  "30064771075" -> "30064771118"  [ label = "CDG: "] 
  "30064771075" -> "30064771119"  [ label = "CDG: "] 
  "30064771075" -> "30064771116"  [ label = "CDG: "] 
  "30064771075" -> "30064771117"  [ label = "CDG: "] 
  "30064771075" -> "30064771122"  [ label = "CDG: "] 
  "30064771075" -> "30064771123"  [ label = "CDG: "] 
  "30064771075" -> "30064771120"  [ label = "CDG: "] 
  "30064771075" -> "30064771121"  [ label = "CDG: "] 
  "30064771075" -> "30064771075"  [ label = "CDG: "] 
  "30064771075" -> "30064771078"  [ label = "CDG: "] 
  "30064771075" -> "30064771079"  [ label = "CDG: "] 
  "30064771075" -> "30064771076"  [ label = "CDG: "] 
  "30064771075" -> "30064771077"  [ label = "CDG: "] 
  "30064771075" -> "30064771080"  [ label = "CDG: "] 
  "30064771075" -> "55834574848"  [ label = "CDG: "] 
  "30064771080" -> "30064771094"  [ label = "CDG: "] 
  "30064771080" -> "30064771095"  [ label = "CDG: "] 
  "30064771080" -> "30064771092"  [ label = "CDG: "] 
  "30064771080" -> "30064771093"  [ label = "CDG: "] 
  "30064771080" -> "30064771098"  [ label = "CDG: "] 
  "30064771080" -> "30064771096"  [ label = "CDG: "] 
  "30064771080" -> "30064771097"  [ label = "CDG: "] 
  "30064771080" -> "30064771082"  [ label = "CDG: "] 
  "30064771080" -> "30064771083"  [ label = "CDG: "] 
  "30064771080" -> "30064771081"  [ label = "CDG: "] 
  "30064771080" -> "30064771086"  [ label = "CDG: "] 
  "30064771080" -> "30064771087"  [ label = "CDG: "] 
  "30064771080" -> "30064771084"  [ label = "CDG: "] 
  "30064771080" -> "30064771085"  [ label = "CDG: "] 
  "30064771080" -> "30064771088"  [ label = "CDG: "] 
  "30064771087" -> "30064771087"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771087" -> "30064771091"  [ label = "CDG: "] 
  "30064771087" -> "30064771088"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771097" -> "30064771098"  [ label = "CDG: "] 
  "30064771097" -> "30064771099"  [ label = "CDG: "] 
  "30064771097" -> "30064771097"  [ label = "CDG: "] 
  "30064771097" -> "30064771102"  [ label = "CDG: "] 
  "30064771097" -> "30064771103"  [ label = "CDG: "] 
  "30064771097" -> "30064771100"  [ label = "CDG: "] 
  "30064771097" -> "30064771101"  [ label = "CDG: "] 
  "30064771097" -> "30064771104"  [ label = "CDG: "] 
}
"""
)
