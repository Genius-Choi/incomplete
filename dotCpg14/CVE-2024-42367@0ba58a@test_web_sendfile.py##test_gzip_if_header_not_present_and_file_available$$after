[33mval[0m [36mres1936[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_gzip_if_header_not_present_and_file_available" {  
"111669149697" [label = <(METHOD,test_gzip_if_header_not_present_and_file_available)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,request = make_mocked_request(&quot;GET&quot;, &quot;http://py...)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,request,request = make_mocked_request(&quot;GET&quot;, &quot;http://py...)<SUB>2</SUB>> ]
"30064771074" [label = <(make_mocked_request,make_mocked_request(&quot;GET&quot;, &quot;http://python.org/l...)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,make_mocked_request,make_mocked_request(&quot;GET&quot;, &quot;http://python.org/l...)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;GET&quot;,make_mocked_request(&quot;GET&quot;, &quot;http://python.org/l...)<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;http://python.org/logo.png&quot;,make_mocked_request(&quot;GET&quot;, &quot;http://python.org/l...)<SUB>2</SUB>> ]
"25769803778" [label = <(BLOCK,tmp0 = {}
tmp0,tmp0 = {}
tmp0)<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,tmp0 = {})<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,tmp0,tmp0 = {})<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.dictLiteral,{})<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,tmp0,tmp0 = {}
tmp0)<SUB>2</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,gz_filepath = mock.create_autospec(Path, spec_s...)<SUB>4</SUB>> ]
"68719476744" [label = <(IDENTIFIER,gz_filepath,gz_filepath = mock.create_autospec(Path, spec_s...)<SUB>4</SUB>> ]
"30064771077" [label = <(create_autospec,mock.create_autospec(Path, spec_set = True))<SUB>4</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,mock.create_autospec)<SUB>4</SUB>> ]
"68719476742" [label = <(IDENTIFIER,mock,mock.create_autospec(Path, spec_set = True))<SUB>4</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,create_autospec,create_autospec)<SUB>4</SUB>> ]
"68719476743" [label = <(IDENTIFIER,mock,mock.create_autospec(Path, spec_set = True))<SUB>4</SUB>> ]
"68719476741" [label = <(IDENTIFIER,Path,mock.create_autospec(Path, spec_set = True))<SUB>4</SUB>> ]
"90194313218" [label = <(LITERAL,True,mock.create_autospec(Path, spec_set = True))<SUB>4</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,gz_filepath.lstat.return_value.st_size = 1024)<SUB>5</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.lstat.return_value.st_size)<SUB>5</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.lstat.return_value)<SUB>5</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.lstat)<SUB>5</SUB>> ]
"68719476745" [label = <(IDENTIFIER,gz_filepath,gz_filepath.lstat.return_value.st_size = 1024)<SUB>5</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,lstat,lstat)<SUB>5</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,return_value,return_value)<SUB>5</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,st_size,st_size)<SUB>5</SUB>> ]
"90194313219" [label = <(LITERAL,1024,gz_filepath.lstat.return_value.st_size = 1024)<SUB>5</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,gz_filepath.lstat.return_value.st_mtime_ns = 16...)<SUB>6</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.lstat.return_value.st_mtime_ns)<SUB>6</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.lstat.return_value)<SUB>6</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.lstat)<SUB>6</SUB>> ]
"68719476746" [label = <(IDENTIFIER,gz_filepath,gz_filepath.lstat.return_value.st_mtime_ns = 16...)<SUB>6</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,lstat,lstat)<SUB>6</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,return_value,return_value)<SUB>6</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,st_mtime_ns,st_mtime_ns)<SUB>6</SUB>> ]
"90194313220" [label = <(LITERAL,1603733507222449291,gz_filepath.lstat.return_value.st_mtime_ns = 16...)<SUB>6</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,gz_filepath.lstat.return_value.st_mode = MOCK_MODE)<SUB>7</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.lstat.return_value.st_mode)<SUB>7</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.lstat.return_value)<SUB>7</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.lstat)<SUB>7</SUB>> ]
"68719476748" [label = <(IDENTIFIER,gz_filepath,gz_filepath.lstat.return_value.st_mode = MOCK_MODE)<SUB>7</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,lstat,lstat)<SUB>7</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,return_value,return_value)<SUB>7</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,st_mode,st_mode)<SUB>7</SUB>> ]
"68719476747" [label = <(IDENTIFIER,MOCK_MODE,gz_filepath.lstat.return_value.st_mode = MOCK_MODE)<SUB>7</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,filepath = mock.create_autospec(Path, spec_set ...)<SUB>9</SUB>> ]
"68719476752" [label = <(IDENTIFIER,filepath,filepath = mock.create_autospec(Path, spec_set ...)<SUB>9</SUB>> ]
"30064771092" [label = <(create_autospec,mock.create_autospec(Path, spec_set = True))<SUB>9</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.fieldAccess,mock.create_autospec)<SUB>9</SUB>> ]
"68719476750" [label = <(IDENTIFIER,mock,mock.create_autospec(Path, spec_set = True))<SUB>9</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,create_autospec,create_autospec)<SUB>9</SUB>> ]
"68719476751" [label = <(IDENTIFIER,mock,mock.create_autospec(Path, spec_set = True))<SUB>9</SUB>> ]
"68719476749" [label = <(IDENTIFIER,Path,mock.create_autospec(Path, spec_set = True))<SUB>9</SUB>> ]
"90194313221" [label = <(LITERAL,True,mock.create_autospec(Path, spec_set = True))<SUB>9</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assignment,filepath.name = &quot;logo.png&quot;)<SUB>10</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.fieldAccess,filepath.name)<SUB>10</SUB>> ]
"68719476753" [label = <(IDENTIFIER,filepath,filepath.name = &quot;logo.png&quot;)<SUB>10</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,name,name)<SUB>10</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;logo.png&quot;,filepath.name = &quot;logo.png&quot;)<SUB>10</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,filepath.with_suffix.return_value = gz_filepath)<SUB>11</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.fieldAccess,filepath.with_suffix.return_value)<SUB>11</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.fieldAccess,filepath.with_suffix)<SUB>11</SUB>> ]
"68719476755" [label = <(IDENTIFIER,filepath,filepath.with_suffix.return_value = gz_filepath)<SUB>11</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,with_suffix,with_suffix)<SUB>11</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,return_value,return_value)<SUB>11</SUB>> ]
"68719476754" [label = <(IDENTIFIER,gz_filepath,filepath.with_suffix.return_value = gz_filepath)<SUB>11</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,filepath.stat.return_value.st_size = 1024)<SUB>12</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.fieldAccess,filepath.stat.return_value.st_size)<SUB>12</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.fieldAccess,filepath.stat.return_value)<SUB>12</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.fieldAccess,filepath.stat)<SUB>12</SUB>> ]
"68719476756" [label = <(IDENTIFIER,filepath,filepath.stat.return_value.st_size = 1024)<SUB>12</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,stat,stat)<SUB>12</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,return_value,return_value)<SUB>12</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,st_size,st_size)<SUB>12</SUB>> ]
"90194313223" [label = <(LITERAL,1024,filepath.stat.return_value.st_size = 1024)<SUB>12</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.assignment,filepath.stat.return_value.st_mtime_ns = 160373...)<SUB>13</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.fieldAccess,filepath.stat.return_value.st_mtime_ns)<SUB>13</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.fieldAccess,filepath.stat.return_value)<SUB>13</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.fieldAccess,filepath.stat)<SUB>13</SUB>> ]
"68719476757" [label = <(IDENTIFIER,filepath,filepath.stat.return_value.st_mtime_ns = 160373...)<SUB>13</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,stat,stat)<SUB>13</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,return_value,return_value)<SUB>13</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,st_mtime_ns,st_mtime_ns)<SUB>13</SUB>> ]
"90194313224" [label = <(LITERAL,1603733507222449291,filepath.stat.return_value.st_mtime_ns = 160373...)<SUB>13</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.assignment,filepath.stat.return_value.st_mode = MOCK_MODE)<SUB>14</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.fieldAccess,filepath.stat.return_value.st_mode)<SUB>14</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.fieldAccess,filepath.stat.return_value)<SUB>14</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.fieldAccess,filepath.stat)<SUB>14</SUB>> ]
"68719476759" [label = <(IDENTIFIER,filepath,filepath.stat.return_value.st_mode = MOCK_MODE)<SUB>14</SUB>> ]
"55834574868" [label = <(FIELD_IDENTIFIER,stat,stat)<SUB>14</SUB>> ]
"55834574869" [label = <(FIELD_IDENTIFIER,return_value,return_value)<SUB>14</SUB>> ]
"55834574870" [label = <(FIELD_IDENTIFIER,st_mode,st_mode)<SUB>14</SUB>> ]
"68719476758" [label = <(IDENTIFIER,MOCK_MODE,filepath.stat.return_value.st_mode = MOCK_MODE)<SUB>14</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.assignment,file_sender = FileResponse(filepath))<SUB>16</SUB>> ]
"68719476762" [label = <(IDENTIFIER,file_sender,file_sender = FileResponse(filepath))<SUB>16</SUB>> ]
"30064771111" [label = <(FileResponse,FileResponse(filepath))<SUB>16</SUB>> ]
"68719476761" [label = <(IDENTIFIER,FileResponse,FileResponse(filepath))<SUB>16</SUB>> ]
"68719476760" [label = <(IDENTIFIER,filepath,FileResponse(filepath))<SUB>16</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.assignment,file_sender._path = filepath)<SUB>17</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.fieldAccess,file_sender._path)<SUB>17</SUB>> ]
"68719476764" [label = <(IDENTIFIER,file_sender,file_sender._path = filepath)<SUB>17</SUB>> ]
"55834574871" [label = <(FIELD_IDENTIFIER,_path,_path)<SUB>17</SUB>> ]
"68719476763" [label = <(IDENTIFIER,filepath,file_sender._path = filepath)<SUB>17</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,file_sender._sendfile = make_mocked_coro(None))<SUB>18</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.fieldAccess,file_sender._sendfile)<SUB>18</SUB>> ]
"68719476766" [label = <(IDENTIFIER,file_sender,file_sender._sendfile = make_mocked_coro(None))<SUB>18</SUB>> ]
"55834574872" [label = <(FIELD_IDENTIFIER,_sendfile,_sendfile)<SUB>18</SUB>> ]
"30064771115" [label = <(make_mocked_coro,make_mocked_coro(None))<SUB>18</SUB>> ]
"68719476765" [label = <(IDENTIFIER,make_mocked_coro,make_mocked_coro(None))<SUB>18</SUB>> ]
"90194313225" [label = <(LITERAL,None,make_mocked_coro(None))<SUB>18</SUB>> ]
"30064771121" [label = <(run_until_complete,loop.run_until_complete(file_sender.prepare(req...)<SUB>20</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.fieldAccess,loop.run_until_complete)<SUB>20</SUB>> ]
"68719476770" [label = <(IDENTIFIER,loop,loop.run_until_complete(file_sender.prepare(req...)<SUB>20</SUB>> ]
"55834574874" [label = <(FIELD_IDENTIFIER,run_until_complete,run_until_complete)<SUB>20</SUB>> ]
"68719476771" [label = <(IDENTIFIER,loop,loop.run_until_complete(file_sender.prepare(req...)<SUB>20</SUB>> ]
"30064771119" [label = <(prepare,file_sender.prepare(request))<SUB>20</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.fieldAccess,file_sender.prepare)<SUB>20</SUB>> ]
"68719476768" [label = <(IDENTIFIER,file_sender,file_sender.prepare(request))<SUB>20</SUB>> ]
"55834574873" [label = <(FIELD_IDENTIFIER,prepare,prepare)<SUB>20</SUB>> ]
"68719476769" [label = <(IDENTIFIER,file_sender,file_sender.prepare(request))<SUB>20</SUB>> ]
"68719476767" [label = <(IDENTIFIER,request,file_sender.prepare(request))<SUB>20</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assert,assert filepath.open.called)<SUB>22</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.fieldAccess,filepath.open.called)<SUB>22</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.fieldAccess,filepath.open)<SUB>22</SUB>> ]
"68719476772" [label = <(IDENTIFIER,filepath,assert filepath.open.called)<SUB>22</SUB>> ]
"55834574875" [label = <(FIELD_IDENTIFIER,open,open)<SUB>22</SUB>> ]
"55834574876" [label = <(FIELD_IDENTIFIER,called,called)<SUB>22</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.assert,assert not gz_filepath.open.called)<SUB>23</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.logicalNot,not gz_filepath.open.called)<SUB>23</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.open.called)<SUB>23</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.fieldAccess,gz_filepath.open)<SUB>23</SUB>> ]
"68719476773" [label = <(IDENTIFIER,gz_filepath,not gz_filepath.open.called)<SUB>23</SUB>> ]
"55834574877" [label = <(FIELD_IDENTIFIER,open,open)<SUB>23</SUB>> ]
"55834574878" [label = <(FIELD_IDENTIFIER,called,called)<SUB>23</SUB>> ]
"94489280513" [label = <(LOCAL,tmp0: __builtin.dict)<SUB>2</SUB>> ]
"94489280514" [label = <(LOCAL,make_mocked_request: ANY)<SUB>2</SUB>> ]
"94489280516" [label = <(LOCAL,request: make_mocked_request.&lt;returnValue&gt;)<SUB>2</SUB>> ]
"94489280517" [label = <(LOCAL,Path: ANY)<SUB>4</SUB>> ]
"94489280519" [label = <(LOCAL,mock: ANY)<SUB>4</SUB>> ]
"94489280521" [label = <(LOCAL,gz_filepath: ANY)<SUB>4</SUB>> ]
"94489280522" [label = <(LOCAL,MOCK_MODE: ANY)<SUB>7</SUB>> ]
"94489280524" [label = <(LOCAL,filepath: ANY)<SUB>9</SUB>> ]
"94489280525" [label = <(LOCAL,FileResponse: ANY)<SUB>16</SUB>> ]
"94489280527" [label = <(LOCAL,file_sender: FileResponse.&lt;returnValue&gt;)<SUB>16</SUB>> ]
"94489280528" [label = <(LOCAL,make_mocked_coro: ANY)<SUB>18</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,loop)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "30064771098"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "30064771102"  [ label = "AST: "] 
  "25769803777" -> "94489280525"  [ label = "AST: "] 
  "25769803777" -> "30064771106"  [ label = "AST: "] 
  "25769803777" -> "94489280527"  [ label = "AST: "] 
  "25769803777" -> "30064771110"  [ label = "AST: "] 
  "25769803777" -> "94489280528"  [ label = "AST: "] 
  "25769803777" -> "30064771112"  [ label = "AST: "] 
  "25769803777" -> "30064771114"  [ label = "AST: "] 
  "25769803777" -> "30064771117"  [ label = "AST: "] 
  "25769803777" -> "30064771121"  [ label = "AST: "] 
  "25769803777" -> "30064771124"  [ label = "AST: "] 
  "25769803777" -> "30064771128"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "30064771073"  [ label = "AST: "] 
  "25769803778" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771072"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771076" -> "55834574848"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771082" -> "90194313219"  [ label = "AST: "] 
  "30064771081" -> "30064771080"  [ label = "AST: "] 
  "30064771081" -> "55834574851"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771080" -> "55834574850"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771079" -> "55834574849"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "90194313220"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771085" -> "55834574854"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771084" -> "55834574853"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "30064771083" -> "55834574852"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771090" -> "68719476747"  [ label = "AST: "] 
  "30064771089" -> "30064771088"  [ label = "AST: "] 
  "30064771089" -> "55834574857"  [ label = "AST: "] 
  "30064771088" -> "30064771087"  [ label = "AST: "] 
  "30064771088" -> "55834574856"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "55834574855"  [ label = "AST: "] 
  "30064771093" -> "68719476752"  [ label = "AST: "] 
  "30064771093" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771092" -> "68719476751"  [ label = "AST: "] 
  "30064771092" -> "68719476749"  [ label = "AST: "] 
  "30064771092" -> "90194313221"  [ label = "AST: "] 
  "30064771091" -> "68719476750"  [ label = "AST: "] 
  "30064771091" -> "55834574858"  [ label = "AST: "] 
  "30064771095" -> "30064771094"  [ label = "AST: "] 
  "30064771095" -> "90194313222"  [ label = "AST: "] 
  "30064771094" -> "68719476753"  [ label = "AST: "] 
  "30064771094" -> "55834574859"  [ label = "AST: "] 
  "30064771098" -> "30064771097"  [ label = "AST: "] 
  "30064771098" -> "68719476754"  [ label = "AST: "] 
  "30064771097" -> "30064771096"  [ label = "AST: "] 
  "30064771097" -> "55834574861"  [ label = "AST: "] 
  "30064771096" -> "68719476755"  [ label = "AST: "] 
  "30064771096" -> "55834574860"  [ label = "AST: "] 
  "30064771102" -> "30064771101"  [ label = "AST: "] 
  "30064771102" -> "90194313223"  [ label = "AST: "] 
  "30064771101" -> "30064771100"  [ label = "AST: "] 
  "30064771101" -> "55834574864"  [ label = "AST: "] 
  "30064771100" -> "30064771099"  [ label = "AST: "] 
  "30064771100" -> "55834574863"  [ label = "AST: "] 
  "30064771099" -> "68719476756"  [ label = "AST: "] 
  "30064771099" -> "55834574862"  [ label = "AST: "] 
  "30064771106" -> "30064771105"  [ label = "AST: "] 
  "30064771106" -> "90194313224"  [ label = "AST: "] 
  "30064771105" -> "30064771104"  [ label = "AST: "] 
  "30064771105" -> "55834574867"  [ label = "AST: "] 
  "30064771104" -> "30064771103"  [ label = "AST: "] 
  "30064771104" -> "55834574866"  [ label = "AST: "] 
  "30064771103" -> "68719476757"  [ label = "AST: "] 
  "30064771103" -> "55834574865"  [ label = "AST: "] 
  "30064771110" -> "30064771109"  [ label = "AST: "] 
  "30064771110" -> "68719476758"  [ label = "AST: "] 
  "30064771109" -> "30064771108"  [ label = "AST: "] 
  "30064771109" -> "55834574870"  [ label = "AST: "] 
  "30064771108" -> "30064771107"  [ label = "AST: "] 
  "30064771108" -> "55834574869"  [ label = "AST: "] 
  "30064771107" -> "68719476759"  [ label = "AST: "] 
  "30064771107" -> "55834574868"  [ label = "AST: "] 
  "30064771112" -> "68719476762"  [ label = "AST: "] 
  "30064771112" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "68719476761"  [ label = "AST: "] 
  "30064771111" -> "68719476760"  [ label = "AST: "] 
  "30064771114" -> "30064771113"  [ label = "AST: "] 
  "30064771114" -> "68719476763"  [ label = "AST: "] 
  "30064771113" -> "68719476764"  [ label = "AST: "] 
  "30064771113" -> "55834574871"  [ label = "AST: "] 
  "30064771117" -> "30064771116"  [ label = "AST: "] 
  "30064771117" -> "30064771115"  [ label = "AST: "] 
  "30064771116" -> "68719476766"  [ label = "AST: "] 
  "30064771116" -> "55834574872"  [ label = "AST: "] 
  "30064771115" -> "68719476765"  [ label = "AST: "] 
  "30064771115" -> "90194313225"  [ label = "AST: "] 
  "30064771121" -> "30064771120"  [ label = "AST: "] 
  "30064771121" -> "68719476771"  [ label = "AST: "] 
  "30064771121" -> "30064771119"  [ label = "AST: "] 
  "30064771120" -> "68719476770"  [ label = "AST: "] 
  "30064771120" -> "55834574874"  [ label = "AST: "] 
  "30064771119" -> "30064771118"  [ label = "AST: "] 
  "30064771119" -> "68719476769"  [ label = "AST: "] 
  "30064771119" -> "68719476767"  [ label = "AST: "] 
  "30064771118" -> "68719476768"  [ label = "AST: "] 
  "30064771118" -> "55834574873"  [ label = "AST: "] 
  "30064771124" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "30064771122"  [ label = "AST: "] 
  "30064771123" -> "55834574876"  [ label = "AST: "] 
  "30064771122" -> "68719476772"  [ label = "AST: "] 
  "30064771122" -> "55834574875"  [ label = "AST: "] 
  "30064771128" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "30064771126"  [ label = "AST: "] 
  "30064771126" -> "30064771125"  [ label = "AST: "] 
  "30064771126" -> "55834574878"  [ label = "AST: "] 
  "30064771125" -> "68719476773"  [ label = "AST: "] 
  "30064771125" -> "55834574877"  [ label = "AST: "] 
  "30064771075" -> "55834574848"  [ label = "CFG: "] 
  "30064771078" -> "55834574849"  [ label = "CFG: "] 
  "30064771082" -> "55834574852"  [ label = "CFG: "] 
  "30064771086" -> "55834574855"  [ label = "CFG: "] 
  "30064771090" -> "55834574858"  [ label = "CFG: "] 
  "30064771093" -> "55834574859"  [ label = "CFG: "] 
  "30064771095" -> "55834574860"  [ label = "CFG: "] 
  "30064771098" -> "55834574862"  [ label = "CFG: "] 
  "30064771102" -> "55834574865"  [ label = "CFG: "] 
  "30064771106" -> "55834574868"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771112" -> "55834574871"  [ label = "CFG: "] 
  "30064771114" -> "55834574872"  [ label = "CFG: "] 
  "30064771117" -> "55834574874"  [ label = "CFG: "] 
  "30064771121" -> "55834574875"  [ label = "CFG: "] 
  "30064771124" -> "55834574877"  [ label = "CFG: "] 
  "30064771128" -> "128849018881"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771101" -> "30064771102"  [ label = "CFG: "] 
  "30064771105" -> "30064771106"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "30064771111" -> "30064771112"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771116" -> "30064771115"  [ label = "CFG: "] 
  "30064771115" -> "30064771117"  [ label = "CFG: "] 
  "30064771120" -> "55834574873"  [ label = "CFG: "] 
  "30064771119" -> "30064771121"  [ label = "CFG: "] 
  "30064771123" -> "30064771124"  [ label = "CFG: "] 
  "30064771127" -> "30064771128"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771080" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "55834574854"  [ label = "CFG: "] 
  "55834574854" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "55834574857"  [ label = "CFG: "] 
  "55834574857" -> "30064771089"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "55834574859" -> "30064771094"  [ label = "CFG: "] 
  "30064771096" -> "55834574861"  [ label = "CFG: "] 
  "55834574861" -> "30064771097"  [ label = "CFG: "] 
  "30064771100" -> "55834574864"  [ label = "CFG: "] 
  "55834574864" -> "30064771101"  [ label = "CFG: "] 
  "30064771104" -> "55834574867"  [ label = "CFG: "] 
  "55834574867" -> "30064771105"  [ label = "CFG: "] 
  "30064771108" -> "55834574870"  [ label = "CFG: "] 
  "55834574870" -> "30064771109"  [ label = "CFG: "] 
  "55834574871" -> "30064771113"  [ label = "CFG: "] 
  "55834574872" -> "30064771116"  [ label = "CFG: "] 
  "55834574874" -> "30064771120"  [ label = "CFG: "] 
  "30064771118" -> "30064771119"  [ label = "CFG: "] 
  "30064771122" -> "55834574876"  [ label = "CFG: "] 
  "55834574876" -> "30064771123"  [ label = "CFG: "] 
  "30064771126" -> "30064771127"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "55834574848" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "55834574853"  [ label = "CFG: "] 
  "55834574853" -> "30064771084"  [ label = "CFG: "] 
  "30064771087" -> "55834574856"  [ label = "CFG: "] 
  "55834574856" -> "30064771088"  [ label = "CFG: "] 
  "55834574858" -> "30064771091"  [ label = "CFG: "] 
  "55834574860" -> "30064771096"  [ label = "CFG: "] 
  "30064771099" -> "55834574863"  [ label = "CFG: "] 
  "55834574863" -> "30064771100"  [ label = "CFG: "] 
  "30064771103" -> "55834574866"  [ label = "CFG: "] 
  "55834574866" -> "30064771104"  [ label = "CFG: "] 
  "30064771107" -> "55834574869"  [ label = "CFG: "] 
  "55834574869" -> "30064771108"  [ label = "CFG: "] 
  "55834574873" -> "30064771118"  [ label = "CFG: "] 
  "55834574875" -> "30064771122"  [ label = "CFG: "] 
  "30064771125" -> "55834574878"  [ label = "CFG: "] 
  "55834574878" -> "30064771126"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "55834574849" -> "30064771079"  [ label = "CFG: "] 
  "55834574852" -> "30064771083"  [ label = "CFG: "] 
  "55834574855" -> "30064771087"  [ label = "CFG: "] 
  "55834574862" -> "30064771099"  [ label = "CFG: "] 
  "55834574865" -> "30064771103"  [ label = "CFG: "] 
  "55834574868" -> "30064771107"  [ label = "CFG: "] 
  "55834574877" -> "30064771125"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "30064771073" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771073" -> "128849018881"  [ label = "DDG: {}"] 
  "30064771073" -> "128849018881"  [ label = "DDG: tmp0 = {}"] 
  "30064771075" -> "128849018881"  [ label = "DDG: make_mocked_request(&quot;GET&quot;, &quot;http://python.org/logo.png&quot;, headers = tmp0 = {}
tmp0)"] 
  "30064771075" -> "128849018881"  [ label = "DDG: request = make_mocked_request(&quot;GET&quot;, &quot;http://python.org/logo.png&quot;, headers = tmp0 = {}
tmp0)"] 
  "30064771078" -> "128849018881"  [ label = "DDG: gz_filepath = mock.create_autospec(Path, spec_set = True)"] 
  "30064771082" -> "128849018881"  [ label = "DDG: gz_filepath.lstat.return_value.st_size = 1024"] 
  "30064771086" -> "128849018881"  [ label = "DDG: gz_filepath.lstat.return_value.st_mtime_ns = 1603733507222449291"] 
  "30064771090" -> "128849018881"  [ label = "DDG: gz_filepath.lstat.return_value.st_mode = MOCK_MODE"] 
  "30064771092" -> "128849018881"  [ label = "DDG: mock"] 
  "30064771092" -> "128849018881"  [ label = "DDG: Path"] 
  "30064771093" -> "128849018881"  [ label = "DDG: mock.create_autospec(Path, spec_set = True)"] 
  "30064771093" -> "128849018881"  [ label = "DDG: filepath = mock.create_autospec(Path, spec_set = True)"] 
  "30064771095" -> "128849018881"  [ label = "DDG: filepath.name = &quot;logo.png&quot;"] 
  "30064771098" -> "128849018881"  [ label = "DDG: gz_filepath"] 
  "30064771098" -> "128849018881"  [ label = "DDG: filepath.with_suffix.return_value = gz_filepath"] 
  "30064771102" -> "128849018881"  [ label = "DDG: filepath.stat.return_value.st_size = 1024"] 
  "30064771106" -> "128849018881"  [ label = "DDG: filepath.stat.return_value.st_mtime_ns = 1603733507222449291"] 
  "30064771110" -> "128849018881"  [ label = "DDG: MOCK_MODE"] 
  "30064771110" -> "128849018881"  [ label = "DDG: filepath.stat.return_value.st_mode = MOCK_MODE"] 
  "30064771112" -> "128849018881"  [ label = "DDG: FileResponse(filepath)"] 
  "30064771112" -> "128849018881"  [ label = "DDG: file_sender = FileResponse(filepath)"] 
  "30064771114" -> "128849018881"  [ label = "DDG: filepath"] 
  "30064771114" -> "128849018881"  [ label = "DDG: file_sender._path = filepath"] 
  "30064771117" -> "128849018881"  [ label = "DDG: make_mocked_coro(None)"] 
  "30064771117" -> "128849018881"  [ label = "DDG: file_sender._sendfile = make_mocked_coro(None)"] 
  "30064771121" -> "128849018881"  [ label = "DDG: loop"] 
  "30064771119" -> "128849018881"  [ label = "DDG: file_sender"] 
  "30064771119" -> "128849018881"  [ label = "DDG: request"] 
  "30064771121" -> "128849018881"  [ label = "DDG: file_sender.prepare(request)"] 
  "30064771121" -> "128849018881"  [ label = "DDG: loop.run_until_complete(file_sender.prepare(request))"] 
  "30064771124" -> "128849018881"  [ label = "DDG: filepath.open.called"] 
  "30064771124" -> "128849018881"  [ label = "DDG: assert filepath.open.called"] 
  "30064771127" -> "128849018881"  [ label = "DDG: gz_filepath.open.called"] 
  "30064771128" -> "128849018881"  [ label = "DDG: not gz_filepath.open.called"] 
  "30064771128" -> "128849018881"  [ label = "DDG: assert not gz_filepath.open.called"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: &quot;GET&quot;"] 
  "30064771074" -> "30064771075"  [ label = "DDG: &quot;http://python.org/logo.png&quot;"] 
  "30064771074" -> "30064771075"  [ label = "DDG: tmp0 = {}
tmp0"] 
  "30064771074" -> "30064771075"  [ label = "DDG: "] 
  "30064771077" -> "30064771078"  [ label = "DDG: mock"] 
  "30064771077" -> "30064771078"  [ label = "DDG: Path"] 
  "30064771077" -> "30064771078"  [ label = "DDG: True"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771092" -> "30064771093"  [ label = "DDG: mock"] 
  "30064771092" -> "30064771093"  [ label = "DDG: Path"] 
  "30064771092" -> "30064771093"  [ label = "DDG: True"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771078" -> "30064771098"  [ label = "DDG: gz_filepath"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771111" -> "30064771112"  [ label = "DDG: filepath"] 
  "30064771111" -> "30064771114"  [ label = "DDG: filepath"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771115" -> "30064771117"  [ label = "DDG: None"] 
  "115964116992" -> "30064771121"  [ label = "DDG: loop"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771119" -> "30064771121"  [ label = "DDG: file_sender"] 
  "30064771119" -> "30064771121"  [ label = "DDG: request"] 
  "30064771127" -> "30064771128"  [ label = "DDG: gz_filepath.open.called"] 
  "111669149697" -> "68719476739"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771073" -> "30064771074"  [ label = "DDG: tmp0"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771077" -> "30064771092"  [ label = "DDG: mock"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771077" -> "30064771092"  [ label = "DDG: Path"] 
  "111669149697" -> "68719476761"  [ label = "DDG: "] 
  "30064771093" -> "30064771111"  [ label = "DDG: filepath"] 
  "30064771095" -> "30064771111"  [ label = "DDG: filepath.name"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "111669149697" -> "68719476765"  [ label = "DDG: "] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771112" -> "30064771119"  [ label = "DDG: file_sender"] 
  "30064771114" -> "30064771119"  [ label = "DDG: file_sender._path"] 
  "30064771117" -> "30064771119"  [ label = "DDG: file_sender._sendfile"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771075" -> "30064771119"  [ label = "DDG: request"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "68719476738"  [ label = "DDG: "] 
}
"""
)
