[33mval[0m [36mres1109[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "_tscmp" {  
"111669149697" [label = <(METHOD,_tscmp)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const unsigned char *a)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const unsigned char *b)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,Py_ssize_t len_a)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,Py_ssize_t len_b)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
    /* loop count depends on length of b. Mig...,{
    /* loop count depends on length of b. Mig...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,Py_ssize_t length: Py_ssize_t)<SUB>7</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,length = len_b)<SUB>7</SUB>> ]
"68719476736" [label = <(IDENTIFIER,length,length = len_b)<SUB>7</SUB>> ]
"68719476737" [label = <(IDENTIFIER,len_b,length = len_b)<SUB>7</SUB>> ]
"94489280513" [label = <(LOCAL,const void* left: void*)<SUB>8</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,*left = a)<SUB>8</SUB>> ]
"68719476738" [label = <(IDENTIFIER,left,*left = a)<SUB>8</SUB>> ]
"68719476739" [label = <(IDENTIFIER,a,*left = a)<SUB>8</SUB>> ]
"94489280514" [label = <(LOCAL,const void* right: void*)<SUB>9</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,*right = b)<SUB>9</SUB>> ]
"68719476740" [label = <(IDENTIFIER,right,*right = b)<SUB>9</SUB>> ]
"68719476741" [label = <(IDENTIFIER,b,*right = b)<SUB>9</SUB>> ]
"94489280515" [label = <(LOCAL,int result: int)<SUB>10</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,result = 0)<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,result,result = 0)<SUB>10</SUB>> ]
"90194313216" [label = <(LITERAL,0,result = 0)<SUB>10</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (len_a != length))<SUB>12</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.notEquals,len_a != length)<SUB>12</SUB>> ]
"68719476743" [label = <(IDENTIFIER,len_a,len_a != length)<SUB>12</SUB>> ]
"68719476744" [label = <(IDENTIFIER,length,len_a != length)<SUB>12</SUB>> ]
"25769803778" [label = <(BLOCK,{
        left = b;
        result = 1;
    },{
        left = b;
        result = 1;
    })<SUB>12</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,left = b)<SUB>13</SUB>> ]
"68719476745" [label = <(IDENTIFIER,left,left = b)<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,b,left = b)<SUB>13</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,result = 1)<SUB>14</SUB>> ]
"68719476747" [label = <(IDENTIFIER,result,result = 1)<SUB>14</SUB>> ]
"90194313217" [label = <(LITERAL,1,result = 1)<SUB>14</SUB>> ]
"30064771079" [label = <(&lt;operators&gt;.assignmentOr,result |= CRYPTO_memcmp(left, right, length))<SUB>17</SUB>> ]
"68719476748" [label = <(IDENTIFIER,result,result |= CRYPTO_memcmp(left, right, length))<SUB>17</SUB>> ]
"30064771080" [label = <(CRYPTO_memcmp,CRYPTO_memcmp(left, right, length))<SUB>17</SUB>> ]
"68719476749" [label = <(IDENTIFIER,left,CRYPTO_memcmp(left, right, length))<SUB>17</SUB>> ]
"68719476750" [label = <(IDENTIFIER,right,CRYPTO_memcmp(left, right, length))<SUB>17</SUB>> ]
"68719476751" [label = <(IDENTIFIER,length,CRYPTO_memcmp(left, right, length))<SUB>17</SUB>> ]
"146028888064" [label = <(RETURN,return (result == 0);,return (result == 0);)<SUB>19</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.equals,result == 0)<SUB>19</SUB>> ]
"68719476752" [label = <(IDENTIFIER,result,result == 0)<SUB>19</SUB>> ]
"90194313218" [label = <(LITERAL,0,result == 0)<SUB>19</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "30064771074" -> "68719476741"  [ label = "AST: "] 
  "30064771075" -> "68719476742"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "30064771076"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771076" -> "68719476743"  [ label = "AST: "] 
  "30064771076" -> "68719476744"  [ label = "AST: "] 
  "25769803778" -> "30064771077"  [ label = "AST: "] 
  "25769803778" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476745"  [ label = "AST: "] 
  "30064771077" -> "68719476746"  [ label = "AST: "] 
  "30064771078" -> "68719476747"  [ label = "AST: "] 
  "30064771078" -> "90194313217"  [ label = "AST: "] 
  "30064771079" -> "68719476748"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476749"  [ label = "AST: "] 
  "30064771080" -> "68719476750"  [ label = "AST: "] 
  "30064771080" -> "68719476751"  [ label = "AST: "] 
  "146028888064" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476752"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771081"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "146028888064"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: len_b"] 
  "30064771072" -> "128849018880"  [ label = "DDG: length = len_b"] 
  "30064771073" -> "128849018880"  [ label = "DDG: a"] 
  "30064771073" -> "128849018880"  [ label = "DDG: *left = a"] 
  "30064771074" -> "128849018880"  [ label = "DDG: b"] 
  "30064771074" -> "128849018880"  [ label = "DDG: *right = b"] 
  "30064771075" -> "128849018880"  [ label = "DDG: result = 0"] 
  "30064771076" -> "128849018880"  [ label = "DDG: len_a"] 
  "30064771076" -> "128849018880"  [ label = "DDG: len_a != length"] 
  "30064771077" -> "128849018880"  [ label = "DDG: b"] 
  "30064771077" -> "128849018880"  [ label = "DDG: left = b"] 
  "30064771078" -> "128849018880"  [ label = "DDG: result = 1"] 
  "30064771080" -> "128849018880"  [ label = "DDG: left"] 
  "30064771080" -> "128849018880"  [ label = "DDG: right"] 
  "30064771080" -> "128849018880"  [ label = "DDG: length"] 
  "30064771079" -> "128849018880"  [ label = "DDG: CRYPTO_memcmp(left, right, length)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: result"] 
  "30064771081" -> "128849018880"  [ label = "DDG: result == 0"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "115964116995" -> "30064771072"  [ label = "DDG: len_b"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: a"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116993" -> "30064771074"  [ label = "DDG: b"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771081" -> "146028888064"  [ label = "DDG: result == 0"] 
  "30064771075" -> "30064771079"  [ label = "DDG: result"] 
  "30064771078" -> "30064771079"  [ label = "DDG: result"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: left"] 
  "30064771080" -> "30064771079"  [ label = "DDG: right"] 
  "30064771080" -> "30064771079"  [ label = "DDG: length"] 
  "115964116994" -> "30064771076"  [ label = "DDG: len_a"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771072" -> "30064771076"  [ label = "DDG: length"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "115964116993" -> "30064771077"  [ label = "DDG: b"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771073" -> "30064771080"  [ label = "DDG: left"] 
  "30064771077" -> "30064771080"  [ label = "DDG: left"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771074" -> "30064771080"  [ label = "DDG: right"] 
  "30064771076" -> "30064771080"  [ label = "DDG: length"] 
  "30064771079" -> "30064771081"  [ label = "DDG: result"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771076" -> "30064771078"  [ label = "CDG: "] 
  "30064771076" -> "30064771077"  [ label = "CDG: "] 
}
"""
)
