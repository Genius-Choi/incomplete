[33mval[0m [36mres2098[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "obj2ast_int" {  
"111669149697" [label = <(METHOD,obj2ast_int)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,PyObject* obj)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,int* out)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,PyArena* arena)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    int i;
    if (!PyLong_Check(obj)) {
    ...,{
    int i;
    if (!PyLong_Check(obj)) {
    ...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,int i: int)<SUB>3</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!PyLong_Check(obj)))<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.logicalNot,!PyLong_Check(obj))<SUB>4</SUB>> ]
"30064771073" [label = <(PyLong_Check,PyLong_Check(obj))<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,obj,PyLong_Check(obj))<SUB>4</SUB>> ]
"25769803778" [label = <(BLOCK,{
        PyErr_Format(PyExc_ValueError, &quot;inval...,{
        PyErr_Format(PyExc_ValueError, &quot;inval...)<SUB>4</SUB>> ]
"30064771074" [label = <(PyErr_Format,PyErr_Format(PyExc_ValueError, &quot;invalid integer...)<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,PyExc_ValueError,PyErr_Format(PyExc_ValueError, &quot;invalid integer...)<SUB>5</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;invalid integer value: %R&quot;,PyErr_Format(PyExc_ValueError, &quot;invalid integer...)<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,obj,PyErr_Format(PyExc_ValueError, &quot;invalid integer...)<SUB>5</SUB>> ]
"146028888064" [label = <(RETURN,return 1;,return 1;)<SUB>6</SUB>> ]
"90194313217" [label = <(LITERAL,1,return 1;)<SUB>6</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,i = _PyLong_AsInt(obj))<SUB>9</SUB>> ]
"68719476739" [label = <(IDENTIFIER,i,i = _PyLong_AsInt(obj))<SUB>9</SUB>> ]
"30064771076" [label = <(_PyLong_AsInt,_PyLong_AsInt(obj))<SUB>9</SUB>> ]
"68719476740" [label = <(IDENTIFIER,obj,_PyLong_AsInt(obj))<SUB>9</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (i == -1 &amp;&amp; PyErr_Occurred()))<SUB>10</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.logicalAnd,i == -1 &amp;&amp; PyErr_Occurred())<SUB>10</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.equals,i == -1)<SUB>10</SUB>> ]
"68719476741" [label = <(IDENTIFIER,i,i == -1)<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.minus,-1)<SUB>10</SUB>> ]
"90194313218" [label = <(LITERAL,1,-1)<SUB>10</SUB>> ]
"30064771080" [label = <(PyErr_Occurred,PyErr_Occurred())<SUB>10</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>> ]
"146028888065" [label = <(RETURN,return 1;,return 1;)<SUB>11</SUB>> ]
"90194313219" [label = <(LITERAL,1,return 1;)<SUB>11</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,*out = i)<SUB>12</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.indirection,*out)<SUB>12</SUB>> ]
"68719476742" [label = <(IDENTIFIER,out,*out = i)<SUB>12</SUB>> ]
"68719476743" [label = <(IDENTIFIER,i,*out = i)<SUB>12</SUB>> ]
"146028888066" [label = <(RETURN,return 0;,return 0;)<SUB>13</SUB>> ]
"90194313220" [label = <(LITERAL,0,return 0;)<SUB>13</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,int)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "146028888066"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "146028888064" -> "90194313217"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "47244640257" -> "30064771077"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "30064771080"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "90194313218"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "90194313219"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771082" -> "68719476742"  [ label = "AST: "] 
  "146028888066" -> "90194313220"  [ label = "AST: "] 
  "30064771075" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "146028888066"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771072" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771077" -> "146028888065"  [ label = "CFG: "] 
  "30064771077" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771074" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771080" -> "30064771077"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: out"] 
  "115964116994" -> "128849018880"  [ label = "DDG: arena"] 
  "30064771072" -> "128849018880"  [ label = "DDG: PyLong_Check(obj)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: !PyLong_Check(obj)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: obj"] 
  "30064771074" -> "128849018880"  [ label = "DDG: PyErr_Format(PyExc_ValueError, &quot;invalid integer value: %R&quot;, obj)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: PyExc_ValueError"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: obj"] 
  "30064771078" -> "30064771081"  [ label = "DDG: i"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "90194313220" -> "146028888066"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888066"  [ label = "DDG: "] 
  "111669149697" -> "90194313220"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: obj"] 
  "90194313217" -> "146028888064"  [ label = "DDG: 1"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771073" -> "30064771076"  [ label = "DDG: obj"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: i"] 
  "30064771078" -> "30064771077"  [ label = "DDG: -1"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "90194313219" -> "146028888065"  [ label = "DDG: 1"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: obj"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771073" -> "30064771074"  [ label = "DDG: obj"] 
  "111669149697" -> "90194313217"  [ label = "DDG: "] 
  "30064771075" -> "30064771078"  [ label = "DDG: i"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: 1"] 
  "111669149697" -> "90194313219"  [ label = "DDG: "] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "30064771078"  [ label = "CDG: "] 
  "30064771072" -> "30064771079"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
  "30064771077" -> "146028888065"  [ label = "CDG: "] 
  "30064771077" -> "146028888066"  [ label = "CDG: "] 
  "30064771077" -> "30064771082"  [ label = "CDG: "] 
  "30064771077" -> "30064771081"  [ label = "CDG: "] 
  "30064771078" -> "30064771080"  [ label = "CDG: "] 
}
"""
)
