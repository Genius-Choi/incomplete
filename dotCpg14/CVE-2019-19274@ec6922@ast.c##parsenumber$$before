[33mval[0m [36mres1462[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "parsenumber" {  
"111669149697" [label = <(METHOD,parsenumber)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,struct compiling *c)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const char *s)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    char *dup, *end;
    PyObject *res = NULL...,{
    char *dup, *end;
    PyObject *res = NULL...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,char* dup: char*)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,char* end: char*)<SUB>3</SUB>> ]
"94489280514" [label = <(LOCAL,PyObject* res: PyObject*)<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,*res = NULL)<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,res,*res = NULL)<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,NULL,*res = NULL)<SUB>4</SUB>> ]
"30064771073" [label = <(assert,assert(s != NULL))<SUB>6</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.notEquals,s != NULL)<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,s,s != NULL)<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,NULL,s != NULL)<SUB>6</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (strchr(s, '_') == NULL))<SUB>8</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.equals,strchr(s, '_') == NULL)<SUB>8</SUB>> ]
"30064771076" [label = <(strchr,strchr(s, '_'))<SUB>8</SUB>> ]
"68719476740" [label = <(IDENTIFIER,s,strchr(s, '_'))<SUB>8</SUB>> ]
"90194313216" [label = <(LITERAL,'_',strchr(s, '_'))<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,NULL,strchr(s, '_') == NULL)<SUB>8</SUB>> ]
"25769803778" [label = <(BLOCK,{
        return parsenumber_raw(c, s);
    },{
        return parsenumber_raw(c, s);
    })<SUB>8</SUB>> ]
"146028888064" [label = <(RETURN,return parsenumber_raw(c, s);,return parsenumber_raw(c, s);)<SUB>9</SUB>> ]
"30064771077" [label = <(parsenumber_raw,parsenumber_raw(c, s))<SUB>9</SUB>> ]
"68719476742" [label = <(IDENTIFIER,c,parsenumber_raw(c, s))<SUB>9</SUB>> ]
"68719476743" [label = <(IDENTIFIER,s,parsenumber_raw(c, s))<SUB>9</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,dup = PyMem_Malloc(strlen(s) + 1))<SUB>12</SUB>> ]
"68719476744" [label = <(IDENTIFIER,dup,dup = PyMem_Malloc(strlen(s) + 1))<SUB>12</SUB>> ]
"30064771079" [label = <(PyMem_Malloc,PyMem_Malloc(strlen(s) + 1))<SUB>12</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.addition,strlen(s) + 1)<SUB>12</SUB>> ]
"30064771081" [label = <(strlen,strlen(s))<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,s,strlen(s))<SUB>12</SUB>> ]
"90194313217" [label = <(LITERAL,1,strlen(s) + 1)<SUB>12</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,end = dup)<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,end,end = dup)<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,dup,end = dup)<SUB>13</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FOR,for (;*s;s++))<SUB>14</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.indirection,*s)<SUB>14</SUB>> ]
"68719476748" [label = <(IDENTIFIER,s,for (;*s;s++))<SUB>14</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.postIncrement,s++)<SUB>14</SUB>> ]
"68719476749" [label = <(IDENTIFIER,s,s++)<SUB>14</SUB>> ]
"25769803780" [label = <(BLOCK,{
        if (*s != '_') {
            *end++ =...,{
        if (*s != '_') {
            *end++ =...)<SUB>14</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (*s != '_'))<SUB>15</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.notEquals,*s != '_')<SUB>15</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indirection,*s)<SUB>15</SUB>> ]
"68719476750" [label = <(IDENTIFIER,s,*s != '_')<SUB>15</SUB>> ]
"90194313218" [label = <(LITERAL,'_',*s != '_')<SUB>15</SUB>> ]
"25769803781" [label = <(BLOCK,{
            *end++ = *s;
        },{
            *end++ = *s;
        })<SUB>15</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,*end++ = *s)<SUB>16</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.indirection,*end++)<SUB>16</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.postIncrement,end++)<SUB>16</SUB>> ]
"68719476751" [label = <(IDENTIFIER,end,end++)<SUB>16</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.indirection,*s)<SUB>16</SUB>> ]
"68719476752" [label = <(IDENTIFIER,s,*end++ = *s)<SUB>16</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,*end = '\0')<SUB>19</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.indirection,*end)<SUB>19</SUB>> ]
"68719476753" [label = <(IDENTIFIER,end,*end = '\0')<SUB>19</SUB>> ]
"90194313219" [label = <(LITERAL,'\0',*end = '\0')<SUB>19</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,res = parsenumber_raw(c, dup))<SUB>20</SUB>> ]
"68719476754" [label = <(IDENTIFIER,res,res = parsenumber_raw(c, dup))<SUB>20</SUB>> ]
"30064771094" [label = <(parsenumber_raw,parsenumber_raw(c, dup))<SUB>20</SUB>> ]
"68719476755" [label = <(IDENTIFIER,c,parsenumber_raw(c, dup))<SUB>20</SUB>> ]
"68719476756" [label = <(IDENTIFIER,dup,parsenumber_raw(c, dup))<SUB>20</SUB>> ]
"30064771095" [label = <(PyMem_Free,PyMem_Free(dup))<SUB>21</SUB>> ]
"68719476757" [label = <(IDENTIFIER,dup,PyMem_Free(dup))<SUB>21</SUB>> ]
"146028888065" [label = <(RETURN,return res;,return res;)<SUB>22</SUB>> ]
"68719476758" [label = <(IDENTIFIER,res,return res;)<SUB>22</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "47244640256" -> "30064771075"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "90194313216"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "90194313217"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "30064771083"  [ label = "AST: "] 
  "47244640257" -> "30064771084"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "25769803780" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771085"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "90194313218"  [ label = "AST: "] 
  "30064771086" -> "68719476750"  [ label = "AST: "] 
  "25769803781" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "30064771090"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476751"  [ label = "AST: "] 
  "30064771090" -> "68719476752"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "90194313219"  [ label = "AST: "] 
  "30064771092" -> "68719476753"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476755"  [ label = "AST: "] 
  "30064771094" -> "68719476756"  [ label = "AST: "] 
  "30064771095" -> "68719476757"  [ label = "AST: "] 
  "146028888065" -> "68719476758"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771073" -> "30064771076"  [ label = "CFG: "] 
  "30064771078" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771091" -> "30064771094"  [ label = "CFG: "] 
  "30064771093" -> "30064771095"  [ label = "CFG: "] 
  "30064771095" -> "146028888065"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "30064771075" -> "30064771081"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771083" -> "30064771086"  [ label = "CFG: "] 
  "30064771083" -> "30064771092"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771077" -> "146028888064"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771085" -> "30064771089"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "30064771084"  [ label = "CFG: "] 
  "30064771088" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771087"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: res"] 
  "30064771072" -> "128849018880"  [ label = "DDG: *res = NULL"] 
  "30064771073" -> "128849018880"  [ label = "DDG: s != NULL"] 
  "30064771073" -> "128849018880"  [ label = "DDG: assert(s != NULL)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: strchr(s, '_')"] 
  "30064771075" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771075" -> "128849018880"  [ label = "DDG: strchr(s, '_') == NULL"] 
  "30064771077" -> "128849018880"  [ label = "DDG: c"] 
  "30064771077" -> "128849018880"  [ label = "DDG: s"] 
  "30064771077" -> "128849018880"  [ label = "DDG: parsenumber_raw(c, s)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: strlen(s) + 1"] 
  "30064771078" -> "30064771082"  [ label = "DDG: dup"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771094" -> "30064771093"  [ label = "DDG: c"] 
  "30064771094" -> "30064771093"  [ label = "DDG: dup"] 
  "68719476758" -> "146028888065"  [ label = "DDG: res"] 
  "30064771074" -> "30064771073"  [ label = "DDG: s"] 
  "30064771074" -> "30064771073"  [ label = "DDG: NULL"] 
  "30064771094" -> "30064771095"  [ label = "DDG: dup"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771093" -> "68719476758"  [ label = "DDG: res"] 
  "111669149697" -> "68719476758"  [ label = "DDG: "] 
  "115964116993" -> "30064771074"  [ label = "DDG: s"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: s"] 
  "30064771076" -> "30064771075"  [ label = "DDG: '_'"] 
  "30064771074" -> "30064771075"  [ label = "DDG: NULL"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771077" -> "146028888064"  [ label = "DDG: parsenumber_raw(c, s)"] 
  "30064771081" -> "30064771079"  [ label = "DDG: s"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771081" -> "30064771084"  [ label = "DDG: s"] 
  "30064771085" -> "30064771084"  [ label = "DDG: *s"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "115964116992" -> "30064771094"  [ label = "DDG: c"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771078" -> "30064771094"  [ label = "DDG: dup"] 
  "30064771074" -> "30064771076"  [ label = "DDG: s"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: s"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "115964116992" -> "30064771077"  [ label = "DDG: c"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771076" -> "30064771077"  [ label = "DDG: s"] 
  "30064771076" -> "30064771081"  [ label = "DDG: s"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771085" -> "30064771087"  [ label = "DDG: *s"] 
  "30064771082" -> "30064771089"  [ label = "DDG: end"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771075" -> "30064771083"  [ label = "CDG: "] 
  "30064771075" -> "30064771082"  [ label = "CDG: "] 
  "30064771075" -> "30064771081"  [ label = "CDG: "] 
  "30064771075" -> "30064771080"  [ label = "CDG: "] 
  "30064771075" -> "30064771079"  [ label = "CDG: "] 
  "30064771075" -> "30064771078"  [ label = "CDG: "] 
  "30064771075" -> "30064771077"  [ label = "CDG: "] 
  "30064771075" -> "146028888064"  [ label = "CDG: "] 
  "30064771075" -> "146028888065"  [ label = "CDG: "] 
  "30064771075" -> "30064771095"  [ label = "CDG: "] 
  "30064771075" -> "30064771094"  [ label = "CDG: "] 
  "30064771075" -> "30064771093"  [ label = "CDG: "] 
  "30064771075" -> "30064771092"  [ label = "CDG: "] 
  "30064771075" -> "30064771091"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
  "30064771083" -> "30064771084"  [ label = "CDG: "] 
  "30064771083" -> "30064771083"  [ label = "CDG: "] 
  "30064771085" -> "30064771087"  [ label = "CDG: "] 
  "30064771085" -> "30064771090"  [ label = "CDG: "] 
  "30064771085" -> "30064771089"  [ label = "CDG: "] 
  "30064771085" -> "30064771088"  [ label = "CDG: "] 
}
"""
)
