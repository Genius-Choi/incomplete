[33mval[0m [36mres1473[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_tensor_type_equality" {  
"111669149697" [label = <(METHOD,test_tensor_type_equality)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,tensor_type = pa.fixed_shape_tensor(pa.int8(), ...)<SUB>2</SUB>> ]
"68719476741" [label = <(IDENTIFIER,tensor_type,tensor_type = pa.fixed_shape_tensor(pa.int8(), ...)<SUB>2</SUB>> ]
"30064771076" [label = <(fixed_shape_tensor,pa.fixed_shape_tensor(pa.int8(), [2, 2, 3]))<SUB>2</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,pa.fixed_shape_tensor)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,pa,pa.fixed_shape_tensor(pa.int8(), [2, 2, 3]))<SUB>2</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,fixed_shape_tensor,fixed_shape_tensor)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,pa,pa.fixed_shape_tensor(pa.int8(), [2, 2, 3]))<SUB>2</SUB>> ]
"30064771073" [label = <(int8,pa.int8())<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.fieldAccess,pa.int8)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,pa,pa.int8())<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,int8,int8)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,pa,pa.int8())<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.listLiteral,[2, 2, 3])<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,2,[2, 2, 3])<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,2,[2, 2, 3])<SUB>2</SUB>> ]
"90194313218" [label = <(LITERAL,3,[2, 2, 3])<SUB>2</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assert,assert tensor_type.extension_name == &quot;arrow.fix...)<SUB>3</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.equals,tensor_type.extension_name == &quot;arrow.fixed_shap...)<SUB>3</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.fieldAccess,tensor_type.extension_name)<SUB>3</SUB>> ]
"68719476742" [label = <(IDENTIFIER,tensor_type,tensor_type.extension_name == &quot;arrow.fixed_shap...)<SUB>3</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,extension_name,extension_name)<SUB>3</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;arrow.fixed_shape_tensor&quot;,tensor_type.extension_name == &quot;arrow.fixed_shap...)<SUB>3</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,tensor_type2 = pa.fixed_shape_tensor(pa.int8(),...)<SUB>5</SUB>> ]
"68719476747" [label = <(IDENTIFIER,tensor_type2,tensor_type2 = pa.fixed_shape_tensor(pa.int8(),...)<SUB>5</SUB>> ]
"30064771085" [label = <(fixed_shape_tensor,pa.fixed_shape_tensor(pa.int8(), [2, 2, 3]))<SUB>5</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.fieldAccess,pa.fixed_shape_tensor)<SUB>5</SUB>> ]
"68719476745" [label = <(IDENTIFIER,pa,pa.fixed_shape_tensor(pa.int8(), [2, 2, 3]))<SUB>5</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,fixed_shape_tensor,fixed_shape_tensor)<SUB>5</SUB>> ]
"68719476746" [label = <(IDENTIFIER,pa,pa.fixed_shape_tensor(pa.int8(), [2, 2, 3]))<SUB>5</SUB>> ]
"30064771082" [label = <(int8,pa.int8())<SUB>5</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,pa.int8)<SUB>5</SUB>> ]
"68719476743" [label = <(IDENTIFIER,pa,pa.int8())<SUB>5</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,int8,int8)<SUB>5</SUB>> ]
"68719476744" [label = <(IDENTIFIER,pa,pa.int8())<SUB>5</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.listLiteral,[2, 2, 3])<SUB>5</SUB>> ]
"90194313220" [label = <(LITERAL,2,[2, 2, 3])<SUB>5</SUB>> ]
"90194313221" [label = <(LITERAL,2,[2, 2, 3])<SUB>5</SUB>> ]
"90194313222" [label = <(LITERAL,3,[2, 2, 3])<SUB>5</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.assignment,tensor_type3 = pa.fixed_shape_tensor(pa.uint8()...)<SUB>6</SUB>> ]
"68719476752" [label = <(IDENTIFIER,tensor_type3,tensor_type3 = pa.fixed_shape_tensor(pa.uint8()...)<SUB>6</SUB>> ]
"30064771091" [label = <(fixed_shape_tensor,pa.fixed_shape_tensor(pa.uint8(), [2, 2, 3]))<SUB>6</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.fieldAccess,pa.fixed_shape_tensor)<SUB>6</SUB>> ]
"68719476750" [label = <(IDENTIFIER,pa,pa.fixed_shape_tensor(pa.uint8(), [2, 2, 3]))<SUB>6</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,fixed_shape_tensor,fixed_shape_tensor)<SUB>6</SUB>> ]
"68719476751" [label = <(IDENTIFIER,pa,pa.fixed_shape_tensor(pa.uint8(), [2, 2, 3]))<SUB>6</SUB>> ]
"30064771088" [label = <(uint8,pa.uint8())<SUB>6</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.fieldAccess,pa.uint8)<SUB>6</SUB>> ]
"68719476748" [label = <(IDENTIFIER,pa,pa.uint8())<SUB>6</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,uint8,uint8)<SUB>6</SUB>> ]
"68719476749" [label = <(IDENTIFIER,pa,pa.uint8())<SUB>6</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.listLiteral,[2, 2, 3])<SUB>6</SUB>> ]
"90194313223" [label = <(LITERAL,2,[2, 2, 3])<SUB>6</SUB>> ]
"90194313224" [label = <(LITERAL,2,[2, 2, 3])<SUB>6</SUB>> ]
"90194313225" [label = <(LITERAL,3,[2, 2, 3])<SUB>6</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assert,assert tensor_type == tensor_type2)<SUB>7</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.equals,tensor_type == tensor_type2)<SUB>7</SUB>> ]
"68719476753" [label = <(IDENTIFIER,tensor_type,tensor_type == tensor_type2)<SUB>7</SUB>> ]
"68719476754" [label = <(IDENTIFIER,tensor_type2,tensor_type == tensor_type2)<SUB>7</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assert,assert not tensor_type == tensor_type3)<SUB>8</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.logicalNot,not tensor_type == tensor_type3)<SUB>8</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.equals,tensor_type == tensor_type3)<SUB>8</SUB>> ]
"68719476755" [label = <(IDENTIFIER,tensor_type,tensor_type == tensor_type3)<SUB>8</SUB>> ]
"68719476756" [label = <(IDENTIFIER,tensor_type3,tensor_type == tensor_type3)<SUB>8</SUB>> ]
"94489280513" [label = <(LOCAL,pa: ANY)<SUB>2</SUB>> ]
"94489280515" [label = <(LOCAL,tensor_type: ANY)<SUB>2</SUB>> ]
"94489280516" [label = <(LOCAL,tensor_type2: ANY)<SUB>5</SUB>> ]
"94489280517" [label = <(LOCAL,tensor_type3: ANY)<SUB>6</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771092"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771094"  [ label = "AST: "] 
  "25769803777" -> "30064771097"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771075"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771073"  [ label = "AST: "] 
  "30064771076" -> "30064771074"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "55834574849"  [ label = "AST: "] 
  "30064771073" -> "30064771072"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "90194313218"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771078"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "55834574850"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771085" -> "68719476746"  [ label = "AST: "] 
  "30064771085" -> "30064771082"  [ label = "AST: "] 
  "30064771085" -> "30064771083"  [ label = "AST: "] 
  "30064771084" -> "68719476745"  [ label = "AST: "] 
  "30064771084" -> "55834574852"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "55834574851"  [ label = "AST: "] 
  "30064771083" -> "90194313220"  [ label = "AST: "] 
  "30064771083" -> "90194313221"  [ label = "AST: "] 
  "30064771083" -> "90194313222"  [ label = "AST: "] 
  "30064771092" -> "68719476752"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "30064771090"  [ label = "AST: "] 
  "30064771091" -> "68719476751"  [ label = "AST: "] 
  "30064771091" -> "30064771088"  [ label = "AST: "] 
  "30064771091" -> "30064771089"  [ label = "AST: "] 
  "30064771090" -> "68719476750"  [ label = "AST: "] 
  "30064771090" -> "55834574854"  [ label = "AST: "] 
  "30064771088" -> "30064771087"  [ label = "AST: "] 
  "30064771088" -> "68719476749"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "55834574853"  [ label = "AST: "] 
  "30064771089" -> "90194313223"  [ label = "AST: "] 
  "30064771089" -> "90194313224"  [ label = "AST: "] 
  "30064771089" -> "90194313225"  [ label = "AST: "] 
  "30064771094" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476753"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "30064771097" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476755"  [ label = "AST: "] 
  "30064771095" -> "68719476756"  [ label = "AST: "] 
  "30064771077" -> "55834574850"  [ label = "CFG: "] 
  "30064771080" -> "55834574852"  [ label = "CFG: "] 
  "30064771086" -> "55834574854"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771097" -> "128849018881"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771075" -> "55834574848"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771084" -> "55834574851"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771083" -> "30064771085"  [ label = "CFG: "] 
  "30064771090" -> "55834574853"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "30064771091"  [ label = "CFG: "] 
  "30064771095" -> "30064771096"  [ label = "CFG: "] 
  "55834574849" -> "30064771075"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "55834574850" -> "30064771078"  [ label = "CFG: "] 
  "55834574852" -> "30064771084"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "55834574854" -> "30064771090"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "55834574848" -> "30064771072"  [ label = "CFG: "] 
  "55834574851" -> "30064771081"  [ label = "CFG: "] 
  "55834574853" -> "30064771087"  [ label = "CFG: "] 
  "111669149697" -> "55834574849"  [ label = "CFG: "] 
  "30064771077" -> "128849018881"  [ label = "DDG: tensor_type = pa.fixed_shape_tensor(pa.int8(), [2, 2, 3])"] 
  "30064771080" -> "128849018881"  [ label = "DDG: tensor_type.extension_name == &quot;arrow.fixed_shape_tensor&quot;"] 
  "30064771080" -> "128849018881"  [ label = "DDG: assert tensor_type.extension_name == &quot;arrow.fixed_shape_tensor&quot;"] 
  "30064771085" -> "128849018881"  [ label = "DDG: pa.int8()"] 
  "30064771086" -> "128849018881"  [ label = "DDG: pa.fixed_shape_tensor(pa.int8(), [2, 2, 3])"] 
  "30064771086" -> "128849018881"  [ label = "DDG: tensor_type2 = pa.fixed_shape_tensor(pa.int8(), [2, 2, 3])"] 
  "30064771091" -> "128849018881"  [ label = "DDG: pa"] 
  "30064771091" -> "128849018881"  [ label = "DDG: pa.uint8()"] 
  "30064771091" -> "128849018881"  [ label = "DDG: [2, 2, 3]"] 
  "30064771092" -> "128849018881"  [ label = "DDG: pa.fixed_shape_tensor(pa.uint8(), [2, 2, 3])"] 
  "30064771092" -> "128849018881"  [ label = "DDG: tensor_type3 = pa.fixed_shape_tensor(pa.uint8(), [2, 2, 3])"] 
  "30064771093" -> "128849018881"  [ label = "DDG: tensor_type2"] 
  "30064771094" -> "128849018881"  [ label = "DDG: tensor_type == tensor_type2"] 
  "30064771094" -> "128849018881"  [ label = "DDG: assert tensor_type == tensor_type2"] 
  "30064771095" -> "128849018881"  [ label = "DDG: tensor_type"] 
  "30064771095" -> "128849018881"  [ label = "DDG: tensor_type3"] 
  "30064771096" -> "128849018881"  [ label = "DDG: tensor_type == tensor_type3"] 
  "30064771097" -> "128849018881"  [ label = "DDG: not tensor_type == tensor_type3"] 
  "30064771097" -> "128849018881"  [ label = "DDG: assert not tensor_type == tensor_type3"] 
  "30064771076" -> "30064771077"  [ label = "DDG: pa"] 
  "30064771076" -> "30064771077"  [ label = "DDG: pa.int8()"] 
  "30064771076" -> "30064771077"  [ label = "DDG: [2, 2, 3]"] 
  "30064771085" -> "30064771086"  [ label = "DDG: pa"] 
  "30064771085" -> "30064771086"  [ label = "DDG: pa.int8()"] 
  "30064771085" -> "30064771086"  [ label = "DDG: [2, 2, 3]"] 
  "30064771091" -> "30064771092"  [ label = "DDG: pa"] 
  "30064771091" -> "30064771092"  [ label = "DDG: pa.uint8()"] 
  "30064771091" -> "30064771092"  [ label = "DDG: [2, 2, 3]"] 
  "30064771079" -> "30064771080"  [ label = "DDG: tensor_type.extension_name"] 
  "30064771079" -> "30064771080"  [ label = "DDG: &quot;arrow.fixed_shape_tensor&quot;"] 
  "30064771093" -> "30064771094"  [ label = "DDG: tensor_type"] 
  "30064771093" -> "30064771094"  [ label = "DDG: tensor_type2"] 
  "30064771096" -> "30064771097"  [ label = "DDG: tensor_type == tensor_type3"] 
  "30064771073" -> "30064771076"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771074" -> "30064771076"  [ label = "DDG: 2"] 
  "30064771074" -> "30064771076"  [ label = "DDG: 3"] 
  "30064771077" -> "30064771079"  [ label = "DDG: tensor_type"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771082" -> "30064771085"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771083" -> "30064771085"  [ label = "DDG: 2"] 
  "30064771083" -> "30064771085"  [ label = "DDG: 3"] 
  "30064771088" -> "30064771091"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771089" -> "30064771091"  [ label = "DDG: 2"] 
  "30064771089" -> "30064771091"  [ label = "DDG: 3"] 
  "30064771077" -> "30064771093"  [ label = "DDG: tensor_type"] 
  "30064771079" -> "30064771093"  [ label = "DDG: tensor_type.extension_name"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771086" -> "30064771093"  [ label = "DDG: tensor_type2"] 
  "30064771095" -> "30064771096"  [ label = "DDG: tensor_type"] 
  "30064771095" -> "30064771096"  [ label = "DDG: tensor_type3"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771076" -> "30064771082"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771085" -> "30064771088"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771093" -> "30064771095"  [ label = "DDG: tensor_type"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771092" -> "30064771095"  [ label = "DDG: tensor_type3"] 
}
"""
)
