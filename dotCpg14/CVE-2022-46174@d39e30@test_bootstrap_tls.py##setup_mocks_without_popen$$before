[33mval[0m [36mres1016[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "setup_mocks_without_popen" {  
"111669149697" [label = <(METHOD,setup_mocks_without_popen)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771073" [label = <(patch,mocker.patch(&quot;mount_efs.start_watchdog&quot;))<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.fieldAccess,mocker.patch)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.start_watchdog&quot;))<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,patch,patch)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.start_watchdog&quot;))<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;mount_efs.start_watchdog&quot;,mocker.patch(&quot;mount_efs.start_watchdog&quot;))<SUB>2</SUB>> ]
"30064771077" [label = <(patch,mocker.patch(&quot;mount_efs.get_tls_port_range&quot;, re...)<SUB>3</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,mocker.patch)<SUB>3</SUB>> ]
"68719476741" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.get_tls_port_range&quot;, re...)<SUB>3</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,patch,patch)<SUB>3</SUB>> ]
"68719476742" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.get_tls_port_range&quot;, re...)<SUB>3</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;mount_efs.get_tls_port_range&quot;,mocker.patch(&quot;mount_efs.get_tls_port_range&quot;, re...)<SUB>4</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.tupleLiteral,(DEFAULT_TLS_PORT, DEFAULT_TLS_PORT + 10))<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,DEFAULT_TLS_PORT,(DEFAULT_TLS_PORT, DEFAULT_TLS_PORT + 10))<SUB>5</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.addition,DEFAULT_TLS_PORT + 10)<SUB>5</SUB>> ]
"68719476740" [label = <(IDENTIFIER,DEFAULT_TLS_PORT,DEFAULT_TLS_PORT + 10)<SUB>5</SUB>> ]
"90194313218" [label = <(LITERAL,10,DEFAULT_TLS_PORT + 10)<SUB>5</SUB>> ]
"30064771079" [label = <(patch,mocker.patch(&quot;socket.gethostname&quot;, return_value...)<SUB>7</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.fieldAccess,mocker.patch)<SUB>7</SUB>> ]
"68719476744" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;socket.gethostname&quot;, return_value...)<SUB>7</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,patch,patch)<SUB>7</SUB>> ]
"68719476745" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;socket.gethostname&quot;, return_value...)<SUB>7</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;socket.gethostname&quot;,mocker.patch(&quot;socket.gethostname&quot;, return_value...)<SUB>7</SUB>> ]
"68719476743" [label = <(IDENTIFIER,DNS_NAME,mocker.patch(&quot;socket.gethostname&quot;, return_value...)<SUB>7</SUB>> ]
"30064771082" [label = <(patch,mocker.patch(&quot;mount_efs.get_dns_name_and_fallba...)<SUB>8</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,mocker.patch)<SUB>8</SUB>> ]
"68719476747" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.get_dns_name_and_fallba...)<SUB>8</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,patch,patch)<SUB>8</SUB>> ]
"68719476748" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.get_dns_name_and_fallba...)<SUB>8</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;mount_efs.get_dns_name_and_fallback_mount_targ...,mocker.patch(&quot;mount_efs.get_dns_name_and_fallba...)<SUB>9</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.tupleLiteral,(DNS_NAME, None))<SUB>10</SUB>> ]
"68719476746" [label = <(IDENTIFIER,DNS_NAME,(DNS_NAME, None))<SUB>10</SUB>> ]
"90194313221" [label = <(LITERAL,None,(DNS_NAME, None))<SUB>10</SUB>> ]
"30064771084" [label = <(patch,mocker.patch(&quot;mount_efs.write_tls_tunnel_state_...)<SUB>12</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.fieldAccess,mocker.patch)<SUB>12</SUB>> ]
"68719476749" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.write_tls_tunnel_state_...)<SUB>12</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,patch,patch)<SUB>12</SUB>> ]
"68719476750" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.write_tls_tunnel_state_...)<SUB>12</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;mount_efs.write_tls_tunnel_state_file&quot;,mocker.patch(&quot;mount_efs.write_tls_tunnel_state_...)<SUB>12</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;~mocktempfile&quot;,mocker.patch(&quot;mount_efs.write_tls_tunnel_state_...)<SUB>12</SUB>> ]
"30064771086" [label = <(patch,mocker.patch(&quot;os.kill&quot;))<SUB>13</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.fieldAccess,mocker.patch)<SUB>13</SUB>> ]
"68719476751" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;os.kill&quot;))<SUB>13</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,patch,patch)<SUB>13</SUB>> ]
"68719476752" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;os.kill&quot;))<SUB>13</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;os.kill&quot;,mocker.patch(&quot;os.kill&quot;))<SUB>13</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,write_config_mock = mocker.patch(&quot;mount_efs.wri...)<SUB>15</SUB>> ]
"68719476756" [label = <(IDENTIFIER,write_config_mock,write_config_mock = mocker.patch(&quot;mount_efs.wri...)<SUB>15</SUB>> ]
"30064771088" [label = <(patch,mocker.patch(&quot;mount_efs.write_stunnel_config_fi...)<SUB>15</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.fieldAccess,mocker.patch)<SUB>15</SUB>> ]
"68719476754" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.write_stunnel_config_fi...)<SUB>15</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,patch,patch)<SUB>15</SUB>> ]
"68719476755" [label = <(IDENTIFIER,mocker,mocker.patch(&quot;mount_efs.write_stunnel_config_fi...)<SUB>15</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;mount_efs.write_stunnel_config_file&quot;,mocker.patch(&quot;mount_efs.write_stunnel_config_fi...)<SUB>16</SUB>> ]
"68719476753" [label = <(IDENTIFIER,EXPECTED_STUNNEL_CONFIG_FILE,mocker.patch(&quot;mount_efs.write_stunnel_config_fi...)<SUB>16</SUB>> ]
"146028888064" [label = <(RETURN,return write_config_mock,return write_config_mock)<SUB>18</SUB>> ]
"68719476757" [label = <(IDENTIFIER,write_config_mock,return write_config_mock)<SUB>18</SUB>> ]
"94489280513" [label = <(LOCAL,DEFAULT_TLS_PORT: ANY)<SUB>5</SUB>> ]
"94489280515" [label = <(LOCAL,DNS_NAME: ANY)<SUB>7</SUB>> ]
"94489280517" [label = <(LOCAL,EXPECTED_STUNNEL_CONFIG_FILE: ANY)<SUB>16</SUB>> ]
"94489280519" [label = <(LOCAL,write_config_mock: ANY)<SUB>15</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,mocker)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "30064771089"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771073" -> "30064771072"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "90194313217"  [ label = "AST: "] 
  "30064771077" -> "30064771075"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771076" -> "55834574849"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "30064771074" -> "90194313218"  [ label = "AST: "] 
  "30064771079" -> "30064771078"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "55834574850"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771082" -> "68719476748"  [ label = "AST: "] 
  "30064771082" -> "90194313220"  [ label = "AST: "] 
  "30064771082" -> "30064771080"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "30064771081" -> "55834574851"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "30064771080" -> "90194313221"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771084" -> "68719476750"  [ label = "AST: "] 
  "30064771084" -> "90194313222"  [ label = "AST: "] 
  "30064771084" -> "90194313223"  [ label = "AST: "] 
  "30064771083" -> "68719476749"  [ label = "AST: "] 
  "30064771083" -> "55834574852"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "68719476752"  [ label = "AST: "] 
  "30064771086" -> "90194313224"  [ label = "AST: "] 
  "30064771085" -> "68719476751"  [ label = "AST: "] 
  "30064771085" -> "55834574853"  [ label = "AST: "] 
  "30064771089" -> "68719476756"  [ label = "AST: "] 
  "30064771089" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771087"  [ label = "AST: "] 
  "30064771088" -> "68719476755"  [ label = "AST: "] 
  "30064771088" -> "90194313225"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "30064771087" -> "68719476754"  [ label = "AST: "] 
  "30064771087" -> "55834574854"  [ label = "AST: "] 
  "146028888064" -> "68719476757"  [ label = "AST: "] 
  "30064771073" -> "55834574849"  [ label = "CFG: "] 
  "30064771077" -> "55834574850"  [ label = "CFG: "] 
  "30064771079" -> "55834574851"  [ label = "CFG: "] 
  "30064771082" -> "55834574852"  [ label = "CFG: "] 
  "30064771084" -> "55834574853"  [ label = "CFG: "] 
  "30064771086" -> "55834574854"  [ label = "CFG: "] 
  "30064771089" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771074"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "55834574848" -> "30064771072"  [ label = "CFG: "] 
  "55834574849" -> "30064771076"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "55834574850" -> "30064771078"  [ label = "CFG: "] 
  "55834574851" -> "30064771081"  [ label = "CFG: "] 
  "55834574852" -> "30064771083"  [ label = "CFG: "] 
  "55834574853" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "55834574854" -> "30064771087"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771073" -> "128849018881"  [ label = "DDG: mocker.patch(&quot;mount_efs.start_watchdog&quot;)"] 
  "30064771075" -> "128849018881"  [ label = "DDG: DEFAULT_TLS_PORT"] 
  "30064771075" -> "128849018881"  [ label = "DDG: DEFAULT_TLS_PORT + 10"] 
  "30064771077" -> "128849018881"  [ label = "DDG: (DEFAULT_TLS_PORT, DEFAULT_TLS_PORT + 10)"] 
  "30064771077" -> "128849018881"  [ label = "DDG: mocker.patch(&quot;mount_efs.get_tls_port_range&quot;, return_value = (DEFAULT_TLS_PORT, DEFAULT_TLS_PORT + 10))"] 
  "30064771079" -> "128849018881"  [ label = "DDG: mocker.patch(&quot;socket.gethostname&quot;, return_value = DNS_NAME)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: DNS_NAME"] 
  "30064771082" -> "128849018881"  [ label = "DDG: (DNS_NAME, None)"] 
  "30064771082" -> "128849018881"  [ label = "DDG: mocker.patch(&quot;mount_efs.get_dns_name_and_fallback_mount_target_ip_address&quot;, return_value = (DNS_NAME, None))"] 
  "30064771084" -> "128849018881"  [ label = "DDG: mocker.patch(&quot;mount_efs.write_tls_tunnel_state_file&quot;, return_value = &quot;~mocktempfile&quot;)"] 
  "30064771086" -> "128849018881"  [ label = "DDG: mocker.patch(&quot;os.kill&quot;)"] 
  "30064771089" -> "128849018881"  [ label = "DDG: write_config_mock"] 
  "30064771088" -> "128849018881"  [ label = "DDG: mocker"] 
  "30064771088" -> "128849018881"  [ label = "DDG: EXPECTED_STUNNEL_CONFIG_FILE"] 
  "30064771089" -> "128849018881"  [ label = "DDG: mocker.patch(&quot;mount_efs.write_stunnel_config_file&quot;, return_value = EXPECTED_STUNNEL_CONFIG_FILE)"] 
  "30064771089" -> "128849018881"  [ label = "DDG: write_config_mock = mocker.patch(&quot;mount_efs.write_stunnel_config_file&quot;, return_value = EXPECTED_STUNNEL_CONFIG_FILE)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771088" -> "30064771089"  [ label = "DDG: mocker"] 
  "30064771088" -> "30064771089"  [ label = "DDG: &quot;mount_efs.write_stunnel_config_file&quot;"] 
  "30064771088" -> "30064771089"  [ label = "DDG: EXPECTED_STUNNEL_CONFIG_FILE"] 
  "68719476757" -> "146028888064"  [ label = "DDG: write_config_mock"] 
  "115964116992" -> "30064771073"  [ label = "DDG: mocker"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771073" -> "30064771077"  [ label = "DDG: mocker"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: DEFAULT_TLS_PORT"] 
  "30064771075" -> "30064771077"  [ label = "DDG: DEFAULT_TLS_PORT + 10"] 
  "30064771077" -> "30064771079"  [ label = "DDG: mocker"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771079" -> "30064771082"  [ label = "DDG: mocker"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771080" -> "30064771082"  [ label = "DDG: DNS_NAME"] 
  "30064771080" -> "30064771082"  [ label = "DDG: None"] 
  "30064771082" -> "30064771084"  [ label = "DDG: mocker"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771084" -> "30064771086"  [ label = "DDG: mocker"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771089" -> "68719476757"  [ label = "DDG: write_config_mock"] 
  "111669149697" -> "68719476757"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771079" -> "30064771080"  [ label = "DDG: DNS_NAME"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771086" -> "30064771088"  [ label = "DDG: mocker"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
}
"""
)
