[33mval[0m [36mres2033[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "Compute" {  
"111669149697" [label = <(METHOD,Compute)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,OpKernelContext* context)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const AsyncOpKernel::DoneCallback&amp; done)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
    const Tensor&amp; data_t = context-&gt;input(0);...,{
    const Tensor&amp; data_t = context-&gt;input(0);...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,const Tensor&amp; data_t: Tensor&amp;)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,&amp; data_t = context-&gt;input(0))<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,data_t,&amp; data_t = context-&gt;input(0))<SUB>3</SUB>> ]
"30064771073" [label = <(input,context-&gt;input(0))<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,context,context-&gt;input(0))<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,0,context-&gt;input(0))<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,const Tensor&amp; batch_index_t: Tensor&amp;)<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,&amp; batch_index_t = context-&gt;input(1))<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,batch_index_t,&amp; batch_index_t = context-&gt;input(1))<SUB>4</SUB>> ]
"30064771075" [label = <(input,context-&gt;input(1))<SUB>4</SUB>> ]
"68719476739" [label = <(IDENTIFIER,context,context-&gt;input(1))<SUB>4</SUB>> ]
"90194313217" [label = <(LITERAL,1,context-&gt;input(1))<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,const Tensor&amp; grad_t: Tensor&amp;)<SUB>5</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,&amp; grad_t = context-&gt;input(2))<SUB>5</SUB>> ]
"68719476740" [label = <(IDENTIFIER,grad_t,&amp; grad_t = context-&gt;input(2))<SUB>5</SUB>> ]
"30064771077" [label = <(input,context-&gt;input(2))<SUB>5</SUB>> ]
"68719476741" [label = <(IDENTIFIER,context,context-&gt;input(2))<SUB>5</SUB>> ]
"90194313218" [label = <(LITERAL,2,context-&gt;input(2))<SUB>5</SUB>> ]
"94489280515" [label = <(LOCAL,const Tensor&amp; batch_key_t: Tensor&amp;)<SUB>6</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,&amp; batch_key_t = context-&gt;input(3))<SUB>6</SUB>> ]
"68719476742" [label = <(IDENTIFIER,batch_key_t,&amp; batch_key_t = context-&gt;input(3))<SUB>6</SUB>> ]
"30064771079" [label = <(input,context-&gt;input(3))<SUB>6</SUB>> ]
"68719476743" [label = <(IDENTIFIER,context,context-&gt;input(3))<SUB>6</SUB>> ]
"90194313219" [label = <(LITERAL,3,context-&gt;input(3))<SUB>6</SUB>> ]
"94489280516" [label = <(LOCAL,mutex_lock ml: mutex_lock)<SUB>8</SUB>> ]
"30064771080" [label = <(ml,ml(mu_))<SUB>8</SUB>> ]
"68719476744" [label = <(IDENTIFIER,mu_,ml(mu_))<SUB>8</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (batch_key_t.NumElements() != 1))<SUB>9</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.notEquals,batch_key_t.NumElements() != 1)<SUB>9</SUB>> ]
"30064771082" [label = <(NumElements,batch_key_t.NumElements())<SUB>9</SUB>> ]
"68719476745" [label = <(IDENTIFIER,batch_key_t,batch_key_t.NumElements())<SUB>9</SUB>> ]
"90194313220" [label = <(LITERAL,1,batch_key_t.NumElements() != 1)<SUB>9</SUB>> ]
"25769803778" [label = <(BLOCK,{
      return errors::InvalidArgument(&quot;Expecte...,{
      return errors::InvalidArgument(&quot;Expecte...)<SUB>9</SUB>> ]
"146028888064" [label = <(RETURN,return errors::InvalidArgument(&quot;Expected `id` t...,return errors::InvalidArgument(&quot;Expected `id` t...)<SUB>10</SUB>> ]
"30064771083" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Expected `id` to be sc...)<SUB>10</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;Expected `id` to be scalar. Received &quot;,errors::InvalidArgument(&quot;Expected `id` to be sc...)<SUB>10</SUB>> ]
"30064771084" [label = <(DebugString,batch_key_t.DebugString())<SUB>11</SUB>> ]
"68719476746" [label = <(IDENTIFIER,batch_key_t,batch_key_t.DebugString())<SUB>11</SUB>> ]
"94489280517" [label = <(LOCAL,const int64_t batch_key: int64_t)<SUB>14</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,batch_key = context-&gt;input(3).scalar&lt;int64_t&gt;()())<SUB>14</SUB>> ]
"68719476747" [label = <(IDENTIFIER,batch_key,batch_key = context-&gt;input(3).scalar&lt;int64_t&gt;()())<SUB>14</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;(),context-&gt;input(3).scalar&lt;int64_t&gt;()())<SUB>14</SUB>> ]
"30064771087" [label = <(scalar&lt;int64_t&gt;,context-&gt;input(3).scalar&lt;int64_t&gt;())<SUB>14</SUB>> ]
"30064771088" [label = <(input,context-&gt;input(3))<SUB>14</SUB>> ]
"68719476748" [label = <(IDENTIFIER,context,context-&gt;input(3))<SUB>14</SUB>> ]
"90194313222" [label = <(LITERAL,3,context-&gt;input(3))<SUB>14</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (!available_tensors_.emplace(batch_key, grad_t).second))<SUB>16</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.logicalNot,!available_tensors_.emplace(batch_key, grad_t)....)<SUB>16</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.fieldAccess,available_tensors_.emplace(batch_key, grad_t).s...)<SUB>16</SUB>> ]
"30064771091" [label = <(emplace,available_tensors_.emplace(batch_key, grad_t))<SUB>16</SUB>> ]
"68719476749" [label = <(IDENTIFIER,available_tensors_,available_tensors_.emplace(batch_key, grad_t))<SUB>16</SUB>> ]
"68719476750" [label = <(IDENTIFIER,batch_key,available_tensors_.emplace(batch_key, grad_t))<SUB>16</SUB>> ]
"68719476751" [label = <(IDENTIFIER,grad_t,available_tensors_.emplace(batch_key, grad_t))<SUB>16</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,second,second)<SUB>16</SUB>> ]
"25769803779" [label = <(BLOCK,{
      return errors::InvalidArgument(&quot;Two run...,{
      return errors::InvalidArgument(&quot;Two run...)<SUB>16</SUB>> ]
"146028888065" [label = <(RETURN,return errors::InvalidArgument(&quot;Two runs with t...,return errors::InvalidArgument(&quot;Two runs with t...)<SUB>17</SUB>> ]
"30064771092" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Two runs with the same...)<SUB>17</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;Two runs with the same batch key.&quot;,errors::InvalidArgument(&quot;Two runs with the same...)<SUB>17</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (data_t.NumElements() &gt; 0))<SUB>22</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.greaterThan,data_t.NumElements() &gt; 0)<SUB>22</SUB>> ]
"30064771094" [label = <(NumElements,data_t.NumElements())<SUB>22</SUB>> ]
"68719476752" [label = <(IDENTIFIER,data_t,data_t.NumElements())<SUB>22</SUB>> ]
"90194313224" [label = <(LITERAL,0,data_t.NumElements() &gt; 0)<SUB>22</SUB>> ]
"25769803780" [label = <(BLOCK,{
      if (batch_index_t.NumElements() == 0) {...,{
      if (batch_index_t.NumElements() == 0) {...)<SUB>22</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (batch_index_t.NumElements() == 0))<SUB>23</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.equals,batch_index_t.NumElements() == 0)<SUB>23</SUB>> ]
"30064771096" [label = <(NumElements,batch_index_t.NumElements())<SUB>23</SUB>> ]
"68719476753" [label = <(IDENTIFIER,batch_index_t,batch_index_t.NumElements())<SUB>23</SUB>> ]
"90194313225" [label = <(LITERAL,0,batch_index_t.NumElements() == 0)<SUB>23</SUB>> ]
"25769803781" [label = <(BLOCK,{
        return errors::InvalidArgument(
     ...,{
        return errors::InvalidArgument(
     ...)<SUB>23</SUB>> ]
"146028888066" [label = <(RETURN,return errors::InvalidArgument(
            &quot;ba...,return errors::InvalidArgument(
            &quot;ba...)<SUB>24</SUB>> ]
"30064771097" [label = <(InvalidArgument,errors::InvalidArgument(
            &quot;batch_ind...)<SUB>24</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;batch_index is empty while the tensor isn't.&quot;,errors::InvalidArgument(
            &quot;batch_ind...)<SUB>25</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.greaterThan,std::unordered_set&lt;int64_t&gt; missing_tensors)<SUB>27</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.lessThan,std::unordered_set&lt;int64_t)<SUB>27</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.fieldAccess,std::unordered_set)<SUB>27</SUB>> ]
"68719476754" [label = <(IDENTIFIER,std,std::unordered_set&lt;int64_t)<SUB>27</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,unordered_set,unordered_set)<SUB>27</SUB>> ]
"68719476755" [label = <(IDENTIFIER,int64_t,std::unordered_set&lt;int64_t)<SUB>27</SUB>> ]
"68719476756" [label = <(IDENTIFIER,missing_tensors,std::unordered_set&lt;int64_t&gt; missing_tensors)<SUB>27</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (batch_index_t.NumElements() != batch_index_t.dim_size(0) * 3))<SUB>28</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.notEquals,batch_index_t.NumElements() != batch_index_t.di...)<SUB>28</SUB>> ]
"30064771102" [label = <(NumElements,batch_index_t.NumElements())<SUB>28</SUB>> ]
"68719476757" [label = <(IDENTIFIER,batch_index_t,batch_index_t.NumElements())<SUB>28</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.multiplication,batch_index_t.dim_size(0) * 3)<SUB>28</SUB>> ]
"30064771104" [label = <(dim_size,batch_index_t.dim_size(0))<SUB>28</SUB>> ]
"68719476758" [label = <(IDENTIFIER,batch_index_t,batch_index_t.dim_size(0))<SUB>28</SUB>> ]
"90194313227" [label = <(LITERAL,0,batch_index_t.dim_size(0))<SUB>28</SUB>> ]
"90194313228" [label = <(LITERAL,3,batch_index_t.dim_size(0) * 3)<SUB>28</SUB>> ]
"25769803782" [label = <(BLOCK,{
        return errors::InvalidArgument(
     ...,{
        return errors::InvalidArgument(
     ...)<SUB>28</SUB>> ]
"146028888067" [label = <(RETURN,return errors::InvalidArgument(
            &quot;ba...,return errors::InvalidArgument(
            &quot;ba...)<SUB>29</SUB>> ]
"30064771105" [label = <(InvalidArgument,errors::InvalidArgument(
            &quot;batch_ind...)<SUB>29</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;batch_index should contain &quot;,errors::InvalidArgument(
            &quot;batch_ind...)<SUB>30</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.multiplication,batch_index_t.dim_size(0) * 3)<SUB>30</SUB>> ]
"30064771107" [label = <(dim_size,batch_index_t.dim_size(0))<SUB>30</SUB>> ]
"68719476759" [label = <(IDENTIFIER,batch_index_t,batch_index_t.dim_size(0))<SUB>30</SUB>> ]
"90194313230" [label = <(LITERAL,0,batch_index_t.dim_size(0))<SUB>30</SUB>> ]
"90194313231" [label = <(LITERAL,3,batch_index_t.dim_size(0) * 3)<SUB>30</SUB>> ]
"90194313232" [label = <(LITERAL,&quot; elements. Received &quot;,errors::InvalidArgument(
            &quot;batch_ind...)<SUB>31</SUB>> ]
"30064771108" [label = <(NumElements,batch_index_t.NumElements())<SUB>31</SUB>> ]
"68719476760" [label = <(IDENTIFIER,batch_index_t,batch_index_t.NumElements())<SUB>31</SUB>> ]
"94489280518" [label = <(LOCAL,const auto batch_index: auto)<SUB>33</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.assignment,batch_index =
          batch_index_t.shaped&lt;in...)<SUB>33</SUB>> ]
"68719476761" [label = <(IDENTIFIER,batch_index,batch_index =
          batch_index_t.shaped&lt;in...)<SUB>33</SUB>> ]
"30064771110" [label = <(shaped&lt;int64_t, 2&gt;,batch_index_t.shaped&lt;int64_t, 2&gt;({batch_index_t...)<SUB>34</SUB>> ]
"68719476762" [label = <(IDENTIFIER,batch_index_t,batch_index_t.shaped&lt;int64_t, 2&gt;({batch_index_t...)<SUB>34</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.arrayInitializer,{batch_index_t.dim_size(0), 3})<SUB>34</SUB>> ]
"30064771112" [label = <(dim_size,batch_index_t.dim_size(0))<SUB>34</SUB>> ]
"68719476763" [label = <(IDENTIFIER,batch_index_t,batch_index_t.dim_size(0))<SUB>34</SUB>> ]
"90194313233" [label = <(LITERAL,0,batch_index_t.dim_size(0))<SUB>34</SUB>> ]
"90194313234" [label = <(LITERAL,3,{batch_index_t.dim_size(0), 3})<SUB>34</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; batch_index_t.dim_size(0);++i))<SUB>35</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>> ]
"94489280519" [label = <(LOCAL,int i: int)<SUB>35</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>35</SUB>> ]
"68719476764" [label = <(IDENTIFIER,i,i = 0)<SUB>35</SUB>> ]
"90194313235" [label = <(LITERAL,0,i = 0)<SUB>35</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.lessThan,i &lt; batch_index_t.dim_size(0))<SUB>35</SUB>> ]
"68719476765" [label = <(IDENTIFIER,i,i &lt; batch_index_t.dim_size(0))<SUB>35</SUB>> ]
"30064771115" [label = <(dim_size,batch_index_t.dim_size(0))<SUB>35</SUB>> ]
"68719476766" [label = <(IDENTIFIER,batch_index_t,batch_index_t.dim_size(0))<SUB>35</SUB>> ]
"90194313236" [label = <(LITERAL,0,batch_index_t.dim_size(0))<SUB>35</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>35</SUB>> ]
"68719476767" [label = <(IDENTIFIER,i,++i)<SUB>35</SUB>> ]
"25769803784" [label = <(BLOCK,{
        const int64_t batch_key = batch_index...,{
        const int64_t batch_key = batch_index...)<SUB>35</SUB>> ]
"94489280520" [label = <(LOCAL,const int64_t batch_key: int64_t)<SUB>36</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,batch_key = batch_index(i, 0))<SUB>36</SUB>> ]
"68719476768" [label = <(IDENTIFIER,batch_key,batch_key = batch_index(i, 0))<SUB>36</SUB>> ]
"30064771118" [label = <(batch_index,batch_index(i, 0))<SUB>36</SUB>> ]
"68719476769" [label = <(IDENTIFIER,i,batch_index(i, 0))<SUB>36</SUB>> ]
"90194313237" [label = <(LITERAL,0,batch_index(i, 0))<SUB>36</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (available_tensors_.find(batch_key) == available_tensors_.end()))<SUB>37</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.equals,available_tensors_.find(batch_key) == available...)<SUB>37</SUB>> ]
"30064771120" [label = <(find,available_tensors_.find(batch_key))<SUB>37</SUB>> ]
"68719476770" [label = <(IDENTIFIER,available_tensors_,available_tensors_.find(batch_key))<SUB>37</SUB>> ]
"68719476771" [label = <(IDENTIFIER,batch_key,available_tensors_.find(batch_key))<SUB>37</SUB>> ]
"30064771121" [label = <(end,available_tensors_.end())<SUB>37</SUB>> ]
"68719476772" [label = <(IDENTIFIER,available_tensors_,available_tensors_.end())<SUB>37</SUB>> ]
"25769803785" [label = <(BLOCK,{
          missing_tensors.emplace(batch_key);...,{
          missing_tensors.emplace(batch_key);...)<SUB>37</SUB>> ]
"30064771122" [label = <(emplace,missing_tensors.emplace(batch_key))<SUB>38</SUB>> ]
"68719476773" [label = <(IDENTIFIER,missing_tensors,missing_tensors.emplace(batch_key))<SUB>38</SUB>> ]
"68719476774" [label = <(IDENTIFIER,batch_key,missing_tensors.emplace(batch_key))<SUB>38</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (missing_tensors.empty()))<SUB>41</SUB>> ]
"30064771123" [label = <(empty,missing_tensors.empty())<SUB>41</SUB>> ]
"68719476775" [label = <(IDENTIFIER,missing_tensors,missing_tensors.empty())<SUB>41</SUB>> ]
"25769803786" [label = <(BLOCK,{
        return OutputBatch(context, done);
  ...,{
        return OutputBatch(context, done);
  ...)<SUB>41</SUB>> ]
"146028888068" [label = <(RETURN,return OutputBatch(context, done);,return OutputBatch(context, done);)<SUB>42</SUB>> ]
"30064771124" [label = <(OutputBatch,OutputBatch(context, done))<SUB>42</SUB>> ]
"68719476776" [label = <(IDENTIFIER,context,OutputBatch(context, done))<SUB>42</SUB>> ]
"68719476777" [label = <(IDENTIFIER,done,OutputBatch(context, done))<SUB>42</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,IF,if (!available_batches_
               .emplace(batch_key, Batch{missing_tensors, context, done})
               .second))<SUB>44</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.logicalNot,!available_batches_
               .emplace(bat...)<SUB>44</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.fieldAccess,available_batches_
               .emplace(batc...)<SUB>44</SUB>> ]
"30064771127" [label = <(emplace,available_batches_
               .emplace(batc...)<SUB>44</SUB>> ]
"68719476778" [label = <(IDENTIFIER,available_batches_,available_batches_
               .emplace(batc...)<SUB>44</SUB>> ]
"68719476779" [label = <(IDENTIFIER,batch_key,available_batches_
               .emplace(batc...)<SUB>45</SUB>> ]
"30064771128" [label = <(Batch,Batch{missing_tensors, context, done})<SUB>45</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.arrayInitializer,{missing_tensors, context, done})<SUB>45</SUB>> ]
"68719476780" [label = <(IDENTIFIER,missing_tensors,{missing_tensors, context, done})<SUB>45</SUB>> ]
"68719476781" [label = <(IDENTIFIER,context,{missing_tensors, context, done})<SUB>45</SUB>> ]
"68719476782" [label = <(IDENTIFIER,done,{missing_tensors, context, done})<SUB>45</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,second,second)<SUB>44</SUB>> ]
"25769803787" [label = <(BLOCK,{
        return errors::InvalidArgument(
     ...,{
        return errors::InvalidArgument(
     ...)<SUB>46</SUB>> ]
"146028888069" [label = <(RETURN,return errors::InvalidArgument(
            &quot;Ba...,return errors::InvalidArgument(
            &quot;Ba...)<SUB>47</SUB>> ]
"30064771130" [label = <(InvalidArgument,errors::InvalidArgument(
            &quot;Batch key...)<SUB>47</SUB>> ]
"90194313238" [label = <(LITERAL,&quot;Batch key with valid batch used twice.&quot;,errors::InvalidArgument(
            &quot;Batch key...)<SUB>48</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,FOR,for (const int64_t i:missing_tensors))<SUB>50</SUB>> ]
"68719476783" [label = <(IDENTIFIER,missing_tensors,for (const int64_t i:missing_tensors))<SUB>50</SUB>> ]
"94489280521" [label = <(LOCAL,const int64_t i: int64_t)<SUB>50</SUB>> ]
"25769803788" [label = <(BLOCK,{
        if (!desired_tensor_to_batch_map_.emp...,{
        if (!desired_tensor_to_batch_map_.emp...)<SUB>50</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,IF,if (!desired_tensor_to_batch_map_.emplace(i, batch_key).second))<SUB>51</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.logicalNot,!desired_tensor_to_batch_map_.emplace(i, batch_...)<SUB>51</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.fieldAccess,desired_tensor_to_batch_map_.emplace(i, batch_k...)<SUB>51</SUB>> ]
"30064771133" [label = <(emplace,desired_tensor_to_batch_map_.emplace(i, batch_key))<SUB>51</SUB>> ]
"68719476784" [label = <(IDENTIFIER,desired_tensor_to_batch_map_,desired_tensor_to_batch_map_.emplace(i, batch_key))<SUB>51</SUB>> ]
"68719476785" [label = <(IDENTIFIER,i,desired_tensor_to_batch_map_.emplace(i, batch_key))<SUB>51</SUB>> ]
"68719476786" [label = <(IDENTIFIER,batch_key,desired_tensor_to_batch_map_.emplace(i, batch_key))<SUB>51</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,second,second)<SUB>51</SUB>> ]
"25769803789" [label = <(BLOCK,{
          return errors::InvalidArgument(
   ...,{
          return errors::InvalidArgument(
   ...)<SUB>51</SUB>> ]
"146028888070" [label = <(RETURN,return errors::InvalidArgument(
              &quot;...,return errors::InvalidArgument(
              &quot;...)<SUB>52</SUB>> ]
"30064771134" [label = <(InvalidArgument,errors::InvalidArgument(
              &quot;Missing...)<SUB>52</SUB>> ]
"90194313239" [label = <(LITERAL,&quot;Missing tensor wanted by more than one batch.&quot;,errors::InvalidArgument(
              &quot;Missing...)<SUB>53</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>56</SUB>> ]
"25769803790" [label = <(BLOCK,{
      // If we don't have a valid input tenso...,{
      // If we don't have a valid input tenso...)<SUB>56</SUB>> ]
"94489280522" [label = <(LOCAL,TensorShape output_shape: TensorShape)<SUB>59</SUB>> ]
"30064771135" [label = <(output_shape,output_shape(grad_t.shape()))<SUB>59</SUB>> ]
"30064771136" [label = <(shape,grad_t.shape())<SUB>59</SUB>> ]
"68719476787" [label = <(IDENTIFIER,grad_t,grad_t.shape())<SUB>59</SUB>> ]
"30064771137" [label = <(set_dim,output_shape.set_dim(0, 0))<SUB>60</SUB>> ]
"68719476788" [label = <(IDENTIFIER,output_shape,output_shape.set_dim(0, 0))<SUB>60</SUB>> ]
"90194313240" [label = <(LITERAL,0,output_shape.set_dim(0, 0))<SUB>60</SUB>> ]
"90194313241" [label = <(LITERAL,0,output_shape.set_dim(0, 0))<SUB>60</SUB>> ]
"94489280523" [label = <(LOCAL,Tensor* output: Tensor*)<SUB>61</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.assignment,* output = nullptr)<SUB>61</SUB>> ]
"68719476789" [label = <(IDENTIFIER,output,* output = nullptr)<SUB>61</SUB>> ]
"90194313242" [label = <(LITERAL,nullptr,* output = nullptr)<SUB>61</SUB>> ]
"30064771139" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(context-&gt;allocate_output(0, ...)<SUB>62</SUB>> ]
"30064771140" [label = <(allocate_output,context-&gt;allocate_output(0, output_shape, &amp;output))<SUB>62</SUB>> ]
"68719476790" [label = <(IDENTIFIER,context,context-&gt;allocate_output(0, output_shape, &amp;output))<SUB>62</SUB>> ]
"90194313243" [label = <(LITERAL,0,context-&gt;allocate_output(0, output_shape, &amp;output))<SUB>62</SUB>> ]
"68719476791" [label = <(IDENTIFIER,output_shape,context-&gt;allocate_output(0, output_shape, &amp;output))<SUB>62</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.addressOf,&amp;output)<SUB>62</SUB>> ]
"68719476792" [label = <(IDENTIFIER,output,context-&gt;allocate_output(0, output_shape, &amp;output))<SUB>62</SUB>> ]
"30064771142" [label = <(done,done())<SUB>63</SUB>> ]
"94489280524" [label = <(LOCAL,auto desire_it: auto)<SUB>67</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.assignment,desire_it = desired_tensor_to_batch_map_.find(b...)<SUB>67</SUB>> ]
"68719476793" [label = <(IDENTIFIER,desire_it,desire_it = desired_tensor_to_batch_map_.find(b...)<SUB>67</SUB>> ]
"30064771144" [label = <(find,desired_tensor_to_batch_map_.find(batch_key))<SUB>67</SUB>> ]
"68719476794" [label = <(IDENTIFIER,desired_tensor_to_batch_map_,desired_tensor_to_batch_map_.find(batch_key))<SUB>67</SUB>> ]
"68719476795" [label = <(IDENTIFIER,batch_key,desired_tensor_to_batch_map_.find(batch_key))<SUB>67</SUB>> ]
"47244640268" [label = <(CONTROL_STRUCTURE,IF,if (desire_it != desired_tensor_to_batch_map_.end()))<SUB>68</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.notEquals,desire_it != desired_tensor_to_batch_map_.end())<SUB>68</SUB>> ]
"68719476796" [label = <(IDENTIFIER,desire_it,desire_it != desired_tensor_to_batch_map_.end())<SUB>68</SUB>> ]
"30064771146" [label = <(end,desired_tensor_to_batch_map_.end())<SUB>68</SUB>> ]
"68719476797" [label = <(IDENTIFIER,desired_tensor_to_batch_map_,desired_tensor_to_batch_map_.end())<SUB>68</SUB>> ]
"25769803791" [label = <(BLOCK,{
      // Mark our tensor as no longer missing...,{
      // Mark our tensor as no longer missing...)<SUB>68</SUB>> ]
"94489280525" [label = <(LOCAL,auto batch_it: auto)<SUB>70</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.assignment,batch_it = available_batches_.find(desire_it-&gt;s...)<SUB>70</SUB>> ]
"68719476798" [label = <(IDENTIFIER,batch_it,batch_it = available_batches_.find(desire_it-&gt;s...)<SUB>70</SUB>> ]
"30064771148" [label = <(find,available_batches_.find(desire_it-&gt;second))<SUB>70</SUB>> ]
"68719476799" [label = <(IDENTIFIER,available_batches_,available_batches_.find(desire_it-&gt;second))<SUB>70</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.indirectFieldAccess,desire_it-&gt;second)<SUB>70</SUB>> ]
"68719476800" [label = <(IDENTIFIER,desire_it,available_batches_.find(desire_it-&gt;second))<SUB>70</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,second,second)<SUB>70</SUB>> ]
"30064771150" [label = <(erase,desired_tensor_to_batch_map_.erase(desire_it))<SUB>71</SUB>> ]
"68719476801" [label = <(IDENTIFIER,desired_tensor_to_batch_map_,desired_tensor_to_batch_map_.erase(desire_it))<SUB>71</SUB>> ]
"68719476802" [label = <(IDENTIFIER,desire_it,desired_tensor_to_batch_map_.erase(desire_it))<SUB>71</SUB>> ]
"47244640269" [label = <(CONTROL_STRUCTURE,IF,if (batch_it == available_batches_.end()))<SUB>72</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.equals,batch_it == available_batches_.end())<SUB>72</SUB>> ]
"68719476803" [label = <(IDENTIFIER,batch_it,batch_it == available_batches_.end())<SUB>72</SUB>> ]
"30064771152" [label = <(end,available_batches_.end())<SUB>72</SUB>> ]
"68719476804" [label = <(IDENTIFIER,available_batches_,available_batches_.end())<SUB>72</SUB>> ]
"25769803792" [label = <(BLOCK,{
        return errors::InvalidArgument(&quot;Batch...,{
        return errors::InvalidArgument(&quot;Batch...)<SUB>72</SUB>> ]
"146028888071" [label = <(RETURN,return errors::InvalidArgument(&quot;Batch no longer...,return errors::InvalidArgument(&quot;Batch no longer...)<SUB>73</SUB>> ]
"30064771153" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Batch no longer exists.&quot;))<SUB>73</SUB>> ]
"90194313244" [label = <(LITERAL,&quot;Batch no longer exists.&quot;,errors::InvalidArgument(&quot;Batch no longer exists.&quot;))<SUB>73</SUB>> ]
"30064771154" [label = <(erase,batch_it-&gt;second.missing_tensors.erase(batch_key))<SUB>75</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.fieldAccess,batch_it-&gt;second.missing_tensors)<SUB>75</SUB>> ]
"30064771156" [label = <(&lt;operator&gt;.indirectFieldAccess,batch_it-&gt;second)<SUB>75</SUB>> ]
"68719476805" [label = <(IDENTIFIER,batch_it,batch_it-&gt;second.missing_tensors.erase(batch_key))<SUB>75</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,second,second)<SUB>75</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,missing_tensors,missing_tensors)<SUB>75</SUB>> ]
"68719476806" [label = <(IDENTIFIER,batch_key,batch_it-&gt;second.missing_tensors.erase(batch_key))<SUB>75</SUB>> ]
"47244640270" [label = <(CONTROL_STRUCTURE,IF,if (batch_it-&gt;second.missing_tensors.empty()))<SUB>78</SUB>> ]
"30064771157" [label = <(empty,batch_it-&gt;second.missing_tensors.empty())<SUB>78</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.fieldAccess,batch_it-&gt;second.missing_tensors)<SUB>78</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.indirectFieldAccess,batch_it-&gt;second)<SUB>78</SUB>> ]
"68719476807" [label = <(IDENTIFIER,batch_it,batch_it-&gt;second.missing_tensors.empty())<SUB>78</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,second,second)<SUB>78</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,missing_tensors,missing_tensors)<SUB>78</SUB>> ]
"25769803793" [label = <(BLOCK,{
        TF_RETURN_IF_ERROR(
            Outpu...,{
        TF_RETURN_IF_ERROR(
            Outpu...)<SUB>78</SUB>> ]
"30064771160" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(
            OutputBatch(bat...)<SUB>79</SUB>> ]
"30064771161" [label = <(OutputBatch,OutputBatch(batch_it-&gt;second.context, batch_it-...)<SUB>80</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.fieldAccess,batch_it-&gt;second.context)<SUB>80</SUB>> ]
"30064771163" [label = <(&lt;operator&gt;.indirectFieldAccess,batch_it-&gt;second)<SUB>80</SUB>> ]
"68719476808" [label = <(IDENTIFIER,batch_it,OutputBatch(batch_it-&gt;second.context, batch_it-...)<SUB>80</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,second,second)<SUB>80</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,context,context)<SUB>80</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.fieldAccess,batch_it-&gt;second.done)<SUB>80</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.indirectFieldAccess,batch_it-&gt;second)<SUB>80</SUB>> ]
"68719476809" [label = <(IDENTIFIER,batch_it,OutputBatch(batch_it-&gt;second.context, batch_it-...)<SUB>80</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,second,second)<SUB>80</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,done,done)<SUB>80</SUB>> ]
"30064771166" [label = <(erase,available_batches_.erase(batch_it))<SUB>81</SUB>> ]
"68719476810" [label = <(IDENTIFIER,available_batches_,available_batches_.erase(batch_it))<SUB>81</SUB>> ]
"68719476811" [label = <(IDENTIFIER,batch_it,available_batches_.erase(batch_it))<SUB>81</SUB>> ]
"146028888072" [label = <(RETURN,return OkStatus();,return OkStatus();)<SUB>84</SUB>> ]
"30064771167" [label = <(OkStatus,OkStatus())<SUB>84</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "30064771143"  [ label = "AST: "] 
  "25769803777" -> "47244640268"  [ label = "AST: "] 
  "25769803777" -> "146028888072"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "47244640256" -> "30064771081"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "90194313220"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "90194313221"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "30064771085" -> "68719476747"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476748"  [ label = "AST: "] 
  "30064771088" -> "90194313222"  [ label = "AST: "] 
  "47244640257" -> "30064771089"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "55834574848"  [ label = "AST: "] 
  "30064771091" -> "68719476749"  [ label = "AST: "] 
  "30064771091" -> "68719476750"  [ label = "AST: "] 
  "30064771091" -> "68719476751"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "90194313223"  [ label = "AST: "] 
  "47244640258" -> "30064771093"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "47244640258" -> "47244640267"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "90194313224"  [ label = "AST: "] 
  "30064771094" -> "68719476752"  [ label = "AST: "] 
  "25769803780" -> "47244640259"  [ label = "AST: "] 
  "25769803780" -> "30064771098"  [ label = "AST: "] 
  "25769803780" -> "47244640260"  [ label = "AST: "] 
  "25769803780" -> "94489280518"  [ label = "AST: "] 
  "25769803780" -> "30064771109"  [ label = "AST: "] 
  "25769803780" -> "47244640261"  [ label = "AST: "] 
  "25769803780" -> "47244640263"  [ label = "AST: "] 
  "25769803780" -> "47244640264"  [ label = "AST: "] 
  "25769803780" -> "47244640265"  [ label = "AST: "] 
  "47244640259" -> "30064771095"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "90194313225"  [ label = "AST: "] 
  "30064771096" -> "68719476753"  [ label = "AST: "] 
  "25769803781" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "90194313226"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "68719476756"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "68719476755"  [ label = "AST: "] 
  "30064771100" -> "68719476754"  [ label = "AST: "] 
  "30064771100" -> "55834574849"  [ label = "AST: "] 
  "47244640260" -> "30064771101"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "68719476757"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "90194313228"  [ label = "AST: "] 
  "30064771104" -> "68719476758"  [ label = "AST: "] 
  "30064771104" -> "90194313227"  [ label = "AST: "] 
  "25769803782" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "90194313229"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "90194313232"  [ label = "AST: "] 
  "30064771105" -> "30064771108"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "90194313231"  [ label = "AST: "] 
  "30064771107" -> "68719476759"  [ label = "AST: "] 
  "30064771107" -> "90194313230"  [ label = "AST: "] 
  "30064771108" -> "68719476760"  [ label = "AST: "] 
  "30064771109" -> "68719476761"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "68719476762"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "90194313234"  [ label = "AST: "] 
  "30064771112" -> "68719476763"  [ label = "AST: "] 
  "30064771112" -> "90194313233"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "47244640261" -> "30064771114"  [ label = "AST: "] 
  "47244640261" -> "30064771116"  [ label = "AST: "] 
  "47244640261" -> "25769803784"  [ label = "AST: "] 
  "25769803783" -> "94489280519"  [ label = "AST: "] 
  "25769803783" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476764"  [ label = "AST: "] 
  "30064771113" -> "90194313235"  [ label = "AST: "] 
  "30064771114" -> "68719476765"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771115" -> "68719476766"  [ label = "AST: "] 
  "30064771115" -> "90194313236"  [ label = "AST: "] 
  "30064771116" -> "68719476767"  [ label = "AST: "] 
  "25769803784" -> "94489280520"  [ label = "AST: "] 
  "25769803784" -> "30064771117"  [ label = "AST: "] 
  "25769803784" -> "47244640262"  [ label = "AST: "] 
  "30064771117" -> "68719476768"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771118" -> "68719476769"  [ label = "AST: "] 
  "30064771118" -> "90194313237"  [ label = "AST: "] 
  "47244640262" -> "30064771119"  [ label = "AST: "] 
  "47244640262" -> "25769803785"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771119" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "68719476770"  [ label = "AST: "] 
  "30064771120" -> "68719476771"  [ label = "AST: "] 
  "30064771121" -> "68719476772"  [ label = "AST: "] 
  "25769803785" -> "30064771122"  [ label = "AST: "] 
  "30064771122" -> "68719476773"  [ label = "AST: "] 
  "30064771122" -> "68719476774"  [ label = "AST: "] 
  "47244640263" -> "30064771123"  [ label = "AST: "] 
  "47244640263" -> "25769803786"  [ label = "AST: "] 
  "30064771123" -> "68719476775"  [ label = "AST: "] 
  "25769803786" -> "146028888068"  [ label = "AST: "] 
  "146028888068" -> "30064771124"  [ label = "AST: "] 
  "30064771124" -> "68719476776"  [ label = "AST: "] 
  "30064771124" -> "68719476777"  [ label = "AST: "] 
  "47244640264" -> "30064771125"  [ label = "AST: "] 
  "47244640264" -> "25769803787"  [ label = "AST: "] 
  "30064771125" -> "30064771126"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771126" -> "55834574850"  [ label = "AST: "] 
  "30064771127" -> "68719476778"  [ label = "AST: "] 
  "30064771127" -> "68719476779"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "68719476780"  [ label = "AST: "] 
  "30064771129" -> "68719476781"  [ label = "AST: "] 
  "30064771129" -> "68719476782"  [ label = "AST: "] 
  "25769803787" -> "146028888069"  [ label = "AST: "] 
  "146028888069" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "90194313238"  [ label = "AST: "] 
  "47244640265" -> "68719476783"  [ label = "AST: "] 
  "47244640265" -> "94489280521"  [ label = "AST: "] 
  "47244640265" -> "25769803788"  [ label = "AST: "] 
  "25769803788" -> "47244640266"  [ label = "AST: "] 
  "47244640266" -> "30064771131"  [ label = "AST: "] 
  "47244640266" -> "25769803789"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771132" -> "55834574851"  [ label = "AST: "] 
  "30064771133" -> "68719476784"  [ label = "AST: "] 
  "30064771133" -> "68719476785"  [ label = "AST: "] 
  "30064771133" -> "68719476786"  [ label = "AST: "] 
  "25769803789" -> "146028888070"  [ label = "AST: "] 
  "146028888070" -> "30064771134"  [ label = "AST: "] 
  "30064771134" -> "90194313239"  [ label = "AST: "] 
  "47244640267" -> "25769803790"  [ label = "AST: "] 
  "25769803790" -> "94489280522"  [ label = "AST: "] 
  "25769803790" -> "30064771135"  [ label = "AST: "] 
  "25769803790" -> "30064771137"  [ label = "AST: "] 
  "25769803790" -> "94489280523"  [ label = "AST: "] 
  "25769803790" -> "30064771138"  [ label = "AST: "] 
  "25769803790" -> "30064771139"  [ label = "AST: "] 
  "25769803790" -> "30064771142"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771136" -> "68719476787"  [ label = "AST: "] 
  "30064771137" -> "68719476788"  [ label = "AST: "] 
  "30064771137" -> "90194313240"  [ label = "AST: "] 
  "30064771137" -> "90194313241"  [ label = "AST: "] 
  "30064771138" -> "68719476789"  [ label = "AST: "] 
  "30064771138" -> "90194313242"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771140" -> "68719476790"  [ label = "AST: "] 
  "30064771140" -> "90194313243"  [ label = "AST: "] 
  "30064771140" -> "68719476791"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771141" -> "68719476792"  [ label = "AST: "] 
  "30064771143" -> "68719476793"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771144" -> "68719476794"  [ label = "AST: "] 
  "30064771144" -> "68719476795"  [ label = "AST: "] 
  "47244640268" -> "30064771145"  [ label = "AST: "] 
  "47244640268" -> "25769803791"  [ label = "AST: "] 
  "30064771145" -> "68719476796"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771146" -> "68719476797"  [ label = "AST: "] 
  "25769803791" -> "94489280525"  [ label = "AST: "] 
  "25769803791" -> "30064771147"  [ label = "AST: "] 
  "25769803791" -> "30064771150"  [ label = "AST: "] 
  "25769803791" -> "47244640269"  [ label = "AST: "] 
  "25769803791" -> "30064771154"  [ label = "AST: "] 
  "25769803791" -> "47244640270"  [ label = "AST: "] 
  "30064771147" -> "68719476798"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771148" -> "68719476799"  [ label = "AST: "] 
  "30064771148" -> "30064771149"  [ label = "AST: "] 
  "30064771149" -> "68719476800"  [ label = "AST: "] 
  "30064771149" -> "55834574852"  [ label = "AST: "] 
  "30064771150" -> "68719476801"  [ label = "AST: "] 
  "30064771150" -> "68719476802"  [ label = "AST: "] 
  "47244640269" -> "30064771151"  [ label = "AST: "] 
  "47244640269" -> "25769803792"  [ label = "AST: "] 
  "30064771151" -> "68719476803"  [ label = "AST: "] 
  "30064771151" -> "30064771152"  [ label = "AST: "] 
  "30064771152" -> "68719476804"  [ label = "AST: "] 
  "25769803792" -> "146028888071"  [ label = "AST: "] 
  "146028888071" -> "30064771153"  [ label = "AST: "] 
  "30064771153" -> "90194313244"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771154" -> "68719476806"  [ label = "AST: "] 
  "30064771155" -> "30064771156"  [ label = "AST: "] 
  "30064771155" -> "55834574854"  [ label = "AST: "] 
  "30064771156" -> "68719476805"  [ label = "AST: "] 
  "30064771156" -> "55834574853"  [ label = "AST: "] 
  "47244640270" -> "30064771157"  [ label = "AST: "] 
  "47244640270" -> "25769803793"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771158" -> "30064771159"  [ label = "AST: "] 
  "30064771158" -> "55834574856"  [ label = "AST: "] 
  "30064771159" -> "68719476807"  [ label = "AST: "] 
  "30064771159" -> "55834574855"  [ label = "AST: "] 
  "25769803793" -> "30064771160"  [ label = "AST: "] 
  "25769803793" -> "30064771166"  [ label = "AST: "] 
  "30064771160" -> "30064771161"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "30064771164"  [ label = "AST: "] 
  "30064771162" -> "30064771163"  [ label = "AST: "] 
  "30064771162" -> "55834574858"  [ label = "AST: "] 
  "30064771163" -> "68719476808"  [ label = "AST: "] 
  "30064771163" -> "55834574857"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771164" -> "55834574860"  [ label = "AST: "] 
  "30064771165" -> "68719476809"  [ label = "AST: "] 
  "30064771165" -> "55834574859"  [ label = "AST: "] 
  "30064771166" -> "68719476810"  [ label = "AST: "] 
  "30064771166" -> "68719476811"  [ label = "AST: "] 
  "146028888072" -> "30064771167"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771091"  [ label = "CFG: "] 
  "30064771143" -> "30064771146"  [ label = "CFG: "] 
  "146028888072" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771084"  [ label = "CFG: "] 
  "30064771081" -> "30064771088"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "30064771092"  [ label = "CFG: "] 
  "30064771089" -> "30064771094"  [ label = "CFG: "] 
  "30064771093" -> "30064771096"  [ label = "CFG: "] 
  "30064771093" -> "30064771136"  [ label = "CFG: "] 
  "30064771144" -> "30064771143"  [ label = "CFG: "] 
  "30064771145" -> "30064771167"  [ label = "CFG: "] 
  "30064771145" -> "55834574852"  [ label = "CFG: "] 
  "30064771167" -> "146028888072"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771098" -> "30064771102"  [ label = "CFG: "] 
  "30064771109" -> "30064771113"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771147" -> "30064771150"  [ label = "CFG: "] 
  "30064771150" -> "30064771152"  [ label = "CFG: "] 
  "30064771154" -> "55834574855"  [ label = "CFG: "] 
  "30064771083" -> "146028888064"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771091" -> "55834574848"  [ label = "CFG: "] 
  "55834574848" -> "30064771090"  [ label = "CFG: "] 
  "30064771092" -> "146028888065"  [ label = "CFG: "] 
  "30064771095" -> "30064771097"  [ label = "CFG: "] 
  "30064771095" -> "55834574849"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771101" -> "30064771107"  [ label = "CFG: "] 
  "30064771101" -> "30064771112"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771114" -> "30064771118"  [ label = "CFG: "] 
  "30064771114" -> "30064771123"  [ label = "CFG: "] 
  "30064771116" -> "30064771115"  [ label = "CFG: "] 
  "30064771123" -> "30064771124"  [ label = "CFG: "] 
  "30064771123" -> "30064771129"  [ label = "CFG: "] 
  "30064771125" -> "30064771130"  [ label = "CFG: "] 
  "30064771125" -> "30064771133"  [ label = "CFG: "] 
  "30064771135" -> "30064771137"  [ label = "CFG: "] 
  "30064771137" -> "30064771138"  [ label = "CFG: "] 
  "30064771138" -> "30064771141"  [ label = "CFG: "] 
  "30064771139" -> "30064771142"  [ label = "CFG: "] 
  "30064771142" -> "30064771144"  [ label = "CFG: "] 
  "30064771148" -> "30064771147"  [ label = "CFG: "] 
  "30064771151" -> "30064771153"  [ label = "CFG: "] 
  "30064771151" -> "55834574853"  [ label = "CFG: "] 
  "30064771155" -> "30064771154"  [ label = "CFG: "] 
  "30064771157" -> "30064771167"  [ label = "CFG: "] 
  "30064771157" -> "55834574857"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771102" -> "30064771104"  [ label = "CFG: "] 
  "30064771103" -> "30064771101"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771113" -> "30064771115"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771117" -> "30064771120"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771126" -> "30064771125"  [ label = "CFG: "] 
  "146028888069" -> "128849018880"  [ label = "CFG: "] 
  "30064771136" -> "30064771135"  [ label = "CFG: "] 
  "30064771140" -> "30064771139"  [ label = "CFG: "] 
  "30064771149" -> "30064771148"  [ label = "CFG: "] 
  "30064771152" -> "30064771151"  [ label = "CFG: "] 
  "146028888071" -> "128849018880"  [ label = "CFG: "] 
  "30064771156" -> "55834574854"  [ label = "CFG: "] 
  "55834574854" -> "30064771155"  [ label = "CFG: "] 
  "30064771158" -> "30064771157"  [ label = "CFG: "] 
  "30064771160" -> "30064771166"  [ label = "CFG: "] 
  "30064771166" -> "30064771167"  [ label = "CFG: "] 
  "30064771097" -> "146028888066"  [ label = "CFG: "] 
  "55834574849" -> "30064771100"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771105" -> "146028888067"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771118" -> "30064771117"  [ label = "CFG: "] 
  "30064771119" -> "30064771122"  [ label = "CFG: "] 
  "30064771119" -> "30064771116"  [ label = "CFG: "] 
  "30064771124" -> "146028888068"  [ label = "CFG: "] 
  "30064771127" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771126"  [ label = "CFG: "] 
  "30064771130" -> "146028888069"  [ label = "CFG: "] 
  "30064771131" -> "30064771133"  [ label = "CFG: "] 
  "30064771131" -> "30064771134"  [ label = "CFG: "] 
  "30064771131" -> "30064771144"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "55834574852" -> "30064771149"  [ label = "CFG: "] 
  "30064771153" -> "146028888071"  [ label = "CFG: "] 
  "55834574853" -> "30064771156"  [ label = "CFG: "] 
  "30064771159" -> "55834574856"  [ label = "CFG: "] 
  "55834574856" -> "30064771158"  [ label = "CFG: "] 
  "30064771161" -> "30064771160"  [ label = "CFG: "] 
  "30064771106" -> "30064771108"  [ label = "CFG: "] 
  "30064771108" -> "30064771105"  [ label = "CFG: "] 
  "30064771120" -> "30064771121"  [ label = "CFG: "] 
  "30064771121" -> "30064771119"  [ label = "CFG: "] 
  "30064771122" -> "30064771116"  [ label = "CFG: "] 
  "30064771128" -> "30064771127"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "146028888070" -> "128849018880"  [ label = "CFG: "] 
  "55834574855" -> "30064771159"  [ label = "CFG: "] 
  "30064771162" -> "55834574859"  [ label = "CFG: "] 
  "30064771164" -> "30064771161"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771133" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771132"  [ label = "CFG: "] 
  "30064771134" -> "146028888070"  [ label = "CFG: "] 
  "30064771163" -> "55834574858"  [ label = "CFG: "] 
  "55834574858" -> "30064771162"  [ label = "CFG: "] 
  "30064771165" -> "55834574860"  [ label = "CFG: "] 
  "55834574860" -> "30064771164"  [ label = "CFG: "] 
  "55834574857" -> "30064771163"  [ label = "CFG: "] 
  "55834574859" -> "30064771165"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888071" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888072" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888069" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888070" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: done"] 
  "30064771072" -> "128849018880"  [ label = "DDG: data_t"] 
  "30064771072" -> "128849018880"  [ label = "DDG: context-&gt;input(0)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: &amp; data_t = context-&gt;input(0)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: batch_index_t"] 
  "30064771074" -> "128849018880"  [ label = "DDG: context-&gt;input(1)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: &amp; batch_index_t = context-&gt;input(1)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: grad_t"] 
  "30064771076" -> "128849018880"  [ label = "DDG: context-&gt;input(2)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: &amp; grad_t = context-&gt;input(2)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: context"] 
  "30064771078" -> "128849018880"  [ label = "DDG: context-&gt;input(3)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: &amp; batch_key_t = context-&gt;input(3)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: ml(mu_)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: batch_key_t.NumElements()"] 
  "30064771081" -> "128849018880"  [ label = "DDG: batch_key_t.NumElements() != 1"] 
  "30064771084" -> "128849018880"  [ label = "DDG: batch_key_t"] 
  "30064771083" -> "128849018880"  [ label = "DDG: batch_key_t.DebugString()"] 
  "30064771083" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;Expected `id` to be scalar. Received &quot;,
                                     batch_key_t.DebugString())"] 
  "30064771099" -> "128849018880"  [ label = "DDG: int64_t"] 
  "30064771080" -> "128849018880"  [ label = "DDG: mu_"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: context"] 
  "30064771073" -> "30064771072"  [ label = "DDG: 0"] 
  "30064771075" -> "30064771074"  [ label = "DDG: context"] 
  "30064771075" -> "30064771074"  [ label = "DDG: 1"] 
  "30064771077" -> "30064771076"  [ label = "DDG: context"] 
  "30064771077" -> "30064771076"  [ label = "DDG: 2"] 
  "30064771079" -> "30064771078"  [ label = "DDG: context"] 
  "30064771079" -> "30064771078"  [ label = "DDG: 3"] 
  "30064771086" -> "30064771085"  [ label = "DDG: context-&gt;input(3).scalar&lt;int64_t&gt;()"] 
  "30064771144" -> "30064771143"  [ label = "DDG: desired_tensor_to_batch_map_"] 
  "30064771144" -> "30064771143"  [ label = "DDG: batch_key"] 
  "30064771167" -> "146028888072"  [ label = "DDG: OkStatus()"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "111669149697" -> "30064771167"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: context"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771073" -> "30064771075"  [ label = "DDG: context"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: context"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771077" -> "30064771079"  [ label = "DDG: context"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: batch_key_t"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771083" -> "146028888064"  [ label = "DDG: errors::InvalidArgument(&quot;Expected `id` to be scalar. Received &quot;,
                                     batch_key_t.DebugString())"] 
  "30064771087" -> "30064771086"  [ label = "DDG: context-&gt;input(3)"] 
  "30064771092" -> "146028888065"  [ label = "DDG: errors::InvalidArgument(&quot;Two runs with the same batch key.&quot;)"] 
  "30064771094" -> "30064771093"  [ label = "DDG: data_t"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771110" -> "30064771109"  [ label = "DDG: batch_index_t"] 
  "30064771110" -> "30064771109"  [ label = "DDG: {batch_index_t.dim_size(0), 3}"] 
  "30064771133" -> "30064771144"  [ label = "DDG: desired_tensor_to_batch_map_"] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "30064771091" -> "30064771144"  [ label = "DDG: batch_key"] 
  "30064771133" -> "30064771144"  [ label = "DDG: batch_key"] 
  "30064771143" -> "30064771145"  [ label = "DDG: desire_it"] 
  "111669149697" -> "30064771145"  [ label = "DDG: "] 
  "30064771146" -> "30064771145"  [ label = "DDG: desired_tensor_to_batch_map_"] 
  "30064771148" -> "30064771147"  [ label = "DDG: available_batches_"] 
  "30064771148" -> "30064771147"  [ label = "DDG: desire_it-&gt;second"] 
  "30064771078" -> "30064771082"  [ label = "DDG: batch_key_t"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: context"] 
  "30064771088" -> "30064771087"  [ label = "DDG: 3"] 
  "30064771072" -> "30064771094"  [ label = "DDG: data_t"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771099" -> "30064771098"  [ label = "DDG: std::unordered_set"] 
  "30064771099" -> "30064771098"  [ label = "DDG: int64_t"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "30064771144" -> "30064771146"  [ label = "DDG: desired_tensor_to_batch_map_"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771146" -> "30064771150"  [ label = "DDG: desired_tensor_to_batch_map_"] 
  "111669149697" -> "30064771150"  [ label = "DDG: "] 
  "30064771145" -> "30064771150"  [ label = "DDG: desire_it"] 
  "30064771148" -> "30064771150"  [ label = "DDG: desire_it-&gt;second"] 
  "30064771144" -> "30064771154"  [ label = "DDG: batch_key"] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771084" -> "30064771083"  [ label = "DDG: batch_key_t"] 
  "30064771079" -> "30064771088"  [ label = "DDG: context"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771085" -> "30064771091"  [ label = "DDG: batch_key"] 
  "30064771076" -> "30064771091"  [ label = "DDG: grad_t"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771096" -> "30064771095"  [ label = "DDG: batch_index_t"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771097" -> "146028888066"  [ label = "DDG: errors::InvalidArgument(
            &quot;batch_index is empty while the tensor isn't.&quot;)"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771102" -> "30064771101"  [ label = "DDG: batch_index_t"] 
  "30064771103" -> "30064771101"  [ label = "DDG: batch_index_t.dim_size(0)"] 
  "30064771103" -> "30064771101"  [ label = "DDG: 3"] 
  "30064771105" -> "146028888067"  [ label = "DDG: errors::InvalidArgument(
            &quot;batch_index should contain &quot;, batch_index_t.dim_size(0) * 3,
            &quot; elements. Received &quot;, batch_index_t.NumElements())"] 
  "30064771112" -> "30064771110"  [ label = "DDG: batch_index_t"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771111" -> "30064771110"  [ label = "DDG: batch_index_t.dim_size(0)"] 
  "30064771111" -> "30064771110"  [ label = "DDG: 3"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771113" -> "30064771114"  [ label = "DDG: i"] 
  "30064771116" -> "30064771114"  [ label = "DDG: i"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771115" -> "30064771114"  [ label = "DDG: batch_index_t"] 
  "30064771115" -> "30064771114"  [ label = "DDG: 0"] 
  "30064771118" -> "30064771116"  [ label = "DDG: i"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771118" -> "30064771117"  [ label = "DDG: i"] 
  "30064771118" -> "30064771117"  [ label = "DDG: 0"] 
  "30064771098" -> "30064771123"  [ label = "DDG: missing_tensors"] 
  "30064771122" -> "30064771123"  [ label = "DDG: missing_tensors"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771124" -> "146028888068"  [ label = "DDG: OutputBatch(context, done)"] 
  "30064771130" -> "146028888069"  [ label = "DDG: errors::InvalidArgument(
            &quot;Batch key with valid batch used twice.&quot;)"] 
  "30064771136" -> "30064771135"  [ label = "DDG: grad_t"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771140" -> "30064771139"  [ label = "DDG: context"] 
  "30064771140" -> "30064771139"  [ label = "DDG: 0"] 
  "30064771140" -> "30064771139"  [ label = "DDG: output_shape"] 
  "30064771140" -> "30064771139"  [ label = "DDG: &amp;output"] 
  "30064771127" -> "30064771148"  [ label = "DDG: available_batches_"] 
  "111669149697" -> "30064771148"  [ label = "DDG: "] 
  "30064771145" -> "30064771148"  [ label = "DDG: desire_it"] 
  "30064771147" -> "30064771151"  [ label = "DDG: batch_it"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771152" -> "30064771151"  [ label = "DDG: available_batches_"] 
  "30064771153" -> "146028888071"  [ label = "DDG: errors::InvalidArgument(&quot;Batch no longer exists.&quot;)"] 
  "30064771154" -> "30064771157"  [ label = "DDG: batch_it-&gt;second.missing_tensors"] 
  "30064771082" -> "30064771084"  [ label = "DDG: batch_key_t"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771074" -> "30064771096"  [ label = "DDG: batch_index_t"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771096" -> "30064771102"  [ label = "DDG: batch_index_t"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771104" -> "30064771103"  [ label = "DDG: batch_index_t"] 
  "30064771104" -> "30064771103"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771112" -> "30064771111"  [ label = "DDG: batch_index_t"] 
  "30064771112" -> "30064771111"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771110" -> "30064771115"  [ label = "DDG: batch_index_t"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771091" -> "30064771136"  [ label = "DDG: grad_t"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771088" -> "30064771140"  [ label = "DDG: context"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771137" -> "30064771140"  [ label = "DDG: output_shape"] 
  "30064771138" -> "30064771140"  [ label = "DDG: output"] 
  "30064771148" -> "30064771152"  [ label = "DDG: available_batches_"] 
  "111669149697" -> "30064771152"  [ label = "DDG: "] 
  "30064771161" -> "30064771160"  [ label = "DDG: batch_it-&gt;second.context"] 
  "30064771161" -> "30064771160"  [ label = "DDG: batch_it-&gt;second.done"] 
  "30064771152" -> "30064771166"  [ label = "DDG: available_batches_"] 
  "111669149697" -> "30064771166"  [ label = "DDG: "] 
  "30064771151" -> "30064771166"  [ label = "DDG: batch_it"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771102" -> "30064771104"  [ label = "DDG: batch_index_t"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771106" -> "30064771105"  [ label = "DDG: batch_index_t.dim_size(0)"] 
  "30064771106" -> "30064771105"  [ label = "DDG: 3"] 
  "30064771108" -> "30064771105"  [ label = "DDG: batch_index_t"] 
  "30064771104" -> "30064771112"  [ label = "DDG: batch_index_t"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771114" -> "30064771118"  [ label = "DDG: i"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "30064771120" -> "30064771119"  [ label = "DDG: available_tensors_"] 
  "30064771120" -> "30064771119"  [ label = "DDG: batch_key"] 
  "30064771121" -> "30064771119"  [ label = "DDG: available_tensors_"] 
  "30064771088" -> "30064771124"  [ label = "DDG: context"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "115964116993" -> "30064771124"  [ label = "DDG: done"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771091" -> "30064771127"  [ label = "DDG: batch_key"] 
  "30064771120" -> "30064771127"  [ label = "DDG: batch_key"] 
  "30064771122" -> "30064771127"  [ label = "DDG: batch_key"] 
  "30064771128" -> "30064771127"  [ label = "DDG: {missing_tensors, context, done}"] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "30064771134" -> "146028888070"  [ label = "DDG: errors::InvalidArgument(
              &quot;Missing tensor wanted by more than one batch.&quot;)"] 
  "111669149697" -> "30064771153"  [ label = "DDG: "] 
  "30064771107" -> "30064771106"  [ label = "DDG: batch_index_t"] 
  "30064771107" -> "30064771106"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771107" -> "30064771108"  [ label = "DDG: batch_index_t"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771091" -> "30064771120"  [ label = "DDG: available_tensors_"] 
  "30064771121" -> "30064771120"  [ label = "DDG: available_tensors_"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771117" -> "30064771120"  [ label = "DDG: batch_key"] 
  "30064771120" -> "30064771121"  [ label = "DDG: available_tensors_"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771098" -> "30064771122"  [ label = "DDG: missing_tensors"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771120" -> "30064771122"  [ label = "DDG: batch_key"] 
  "30064771129" -> "30064771128"  [ label = "DDG: missing_tensors"] 
  "30064771129" -> "30064771128"  [ label = "DDG: context"] 
  "30064771129" -> "30064771128"  [ label = "DDG: done"] 
  "30064771104" -> "30064771107"  [ label = "DDG: batch_index_t"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771123" -> "30064771129"  [ label = "DDG: missing_tensors"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "30064771088" -> "30064771129"  [ label = "DDG: context"] 
  "115964116993" -> "30064771129"  [ label = "DDG: done"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "30064771114" -> "30064771133"  [ label = "DDG: i"] 
  "30064771127" -> "30064771133"  [ label = "DDG: batch_key"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771081" -> "55834574848"  [ label = "CDG: "] 
  "30064771081" -> "30064771089"  [ label = "CDG: "] 
  "30064771081" -> "30064771088"  [ label = "CDG: "] 
  "30064771081" -> "30064771087"  [ label = "CDG: "] 
  "30064771081" -> "30064771086"  [ label = "CDG: "] 
  "30064771081" -> "30064771091"  [ label = "CDG: "] 
  "30064771081" -> "30064771090"  [ label = "CDG: "] 
  "30064771081" -> "30064771085"  [ label = "CDG: "] 
  "30064771081" -> "30064771084"  [ label = "CDG: "] 
  "30064771081" -> "30064771083"  [ label = "CDG: "] 
  "30064771081" -> "146028888064"  [ label = "CDG: "] 
  "30064771089" -> "30064771093"  [ label = "CDG: "] 
  "30064771089" -> "30064771092"  [ label = "CDG: "] 
  "30064771089" -> "30064771094"  [ label = "CDG: "] 
  "30064771089" -> "146028888065"  [ label = "CDG: "] 
  "30064771093" -> "30064771137"  [ label = "CDG: "] 
  "30064771093" -> "30064771136"  [ label = "CDG: "] 
  "30064771093" -> "30064771135"  [ label = "CDG: "] 
  "30064771093" -> "30064771141"  [ label = "CDG: "] 
  "30064771093" -> "30064771140"  [ label = "CDG: "] 
  "30064771093" -> "30064771139"  [ label = "CDG: "] 
  "30064771093" -> "30064771138"  [ label = "CDG: "] 
  "30064771093" -> "30064771145"  [ label = "CDG: "] 
  "30064771093" -> "30064771144"  [ label = "CDG: "] 
  "30064771093" -> "30064771143"  [ label = "CDG: "] 
  "30064771093" -> "30064771142"  [ label = "CDG: "] 
  "30064771093" -> "30064771146"  [ label = "CDG: "] 
  "30064771093" -> "30064771096"  [ label = "CDG: "] 
  "30064771093" -> "30064771095"  [ label = "CDG: "] 
  "30064771145" -> "55834574852"  [ label = "CDG: "] 
  "30064771145" -> "30064771152"  [ label = "CDG: "] 
  "30064771145" -> "30064771151"  [ label = "CDG: "] 
  "30064771145" -> "30064771150"  [ label = "CDG: "] 
  "30064771145" -> "30064771149"  [ label = "CDG: "] 
  "30064771145" -> "30064771148"  [ label = "CDG: "] 
  "30064771145" -> "30064771147"  [ label = "CDG: "] 
  "30064771145" -> "30064771167"  [ label = "CDG: "] 
  "30064771145" -> "146028888072"  [ label = "CDG: "] 
  "30064771095" -> "55834574849"  [ label = "CDG: "] 
  "30064771095" -> "30064771104"  [ label = "CDG: "] 
  "30064771095" -> "30064771103"  [ label = "CDG: "] 
  "30064771095" -> "30064771102"  [ label = "CDG: "] 
  "30064771095" -> "30064771097"  [ label = "CDG: "] 
  "30064771095" -> "30064771101"  [ label = "CDG: "] 
  "30064771095" -> "30064771100"  [ label = "CDG: "] 
  "30064771095" -> "30064771099"  [ label = "CDG: "] 
  "30064771095" -> "30064771098"  [ label = "CDG: "] 
  "30064771095" -> "146028888066"  [ label = "CDG: "] 
  "30064771101" -> "30064771123"  [ label = "CDG: "] 
  "30064771101" -> "30064771113"  [ label = "CDG: "] 
  "30064771101" -> "30064771112"  [ label = "CDG: "] 
  "30064771101" -> "30064771111"  [ label = "CDG: "] 
  "30064771101" -> "30064771110"  [ label = "CDG: "] 
  "30064771101" -> "30064771115"  [ label = "CDG: "] 
  "30064771101" -> "30064771114"  [ label = "CDG: "] 
  "30064771101" -> "30064771105"  [ label = "CDG: "] 
  "30064771101" -> "30064771109"  [ label = "CDG: "] 
  "30064771101" -> "30064771108"  [ label = "CDG: "] 
  "30064771101" -> "30064771107"  [ label = "CDG: "] 
  "30064771101" -> "30064771106"  [ label = "CDG: "] 
  "30064771101" -> "146028888067"  [ label = "CDG: "] 
  "30064771114" -> "30064771121"  [ label = "CDG: "] 
  "30064771114" -> "30064771120"  [ label = "CDG: "] 
  "30064771114" -> "30064771119"  [ label = "CDG: "] 
  "30064771114" -> "30064771118"  [ label = "CDG: "] 
  "30064771114" -> "30064771117"  [ label = "CDG: "] 
  "30064771114" -> "30064771116"  [ label = "CDG: "] 
  "30064771114" -> "30064771115"  [ label = "CDG: "] 
  "30064771114" -> "30064771114"  [ label = "CDG: "] 
  "30064771123" -> "55834574850"  [ label = "CDG: "] 
  "30064771123" -> "30064771125"  [ label = "CDG: "] 
  "30064771123" -> "30064771124"  [ label = "CDG: "] 
  "30064771123" -> "30064771129"  [ label = "CDG: "] 
  "30064771123" -> "30064771128"  [ label = "CDG: "] 
  "30064771123" -> "30064771127"  [ label = "CDG: "] 
  "30064771123" -> "30064771126"  [ label = "CDG: "] 
  "30064771123" -> "146028888068"  [ label = "CDG: "] 
  "30064771125" -> "55834574851"  [ label = "CDG: "] 
  "30064771125" -> "30064771133"  [ label = "CDG: "] 
  "30064771125" -> "30064771132"  [ label = "CDG: "] 
  "30064771125" -> "30064771131"  [ label = "CDG: "] 
  "30064771125" -> "30064771130"  [ label = "CDG: "] 
  "30064771125" -> "146028888069"  [ label = "CDG: "] 
  "30064771151" -> "55834574855"  [ label = "CDG: "] 
  "30064771151" -> "55834574854"  [ label = "CDG: "] 
  "30064771151" -> "55834574853"  [ label = "CDG: "] 
  "30064771151" -> "55834574856"  [ label = "CDG: "] 
  "30064771151" -> "30064771153"  [ label = "CDG: "] 
  "30064771151" -> "30064771157"  [ label = "CDG: "] 
  "30064771151" -> "30064771156"  [ label = "CDG: "] 
  "30064771151" -> "30064771155"  [ label = "CDG: "] 
  "30064771151" -> "30064771154"  [ label = "CDG: "] 
  "30064771151" -> "30064771167"  [ label = "CDG: "] 
  "30064771151" -> "30064771159"  [ label = "CDG: "] 
  "30064771151" -> "30064771158"  [ label = "CDG: "] 
  "30064771151" -> "146028888072"  [ label = "CDG: "] 
  "30064771151" -> "146028888071"  [ label = "CDG: "] 
  "30064771157" -> "55834574859"  [ label = "CDG: "] 
  "30064771157" -> "55834574858"  [ label = "CDG: "] 
  "30064771157" -> "55834574857"  [ label = "CDG: "] 
  "30064771157" -> "55834574860"  [ label = "CDG: "] 
  "30064771157" -> "30064771166"  [ label = "CDG: "] 
  "30064771157" -> "30064771161"  [ label = "CDG: "] 
  "30064771157" -> "30064771160"  [ label = "CDG: "] 
  "30064771157" -> "30064771165"  [ label = "CDG: "] 
  "30064771157" -> "30064771164"  [ label = "CDG: "] 
  "30064771157" -> "30064771163"  [ label = "CDG: "] 
  "30064771157" -> "30064771162"  [ label = "CDG: "] 
  "30064771119" -> "30064771122"  [ label = "CDG: "] 
  "30064771131" -> "55834574851"  [ label = "CDG: "] 
  "30064771131" -> "30064771134"  [ label = "CDG: "] 
  "30064771131" -> "30064771133"  [ label = "CDG: "] 
  "30064771131" -> "30064771132"  [ label = "CDG: "] 
  "30064771131" -> "30064771131"  [ label = "CDG: "] 
  "30064771131" -> "30064771145"  [ label = "CDG: "] 
  "30064771131" -> "30064771144"  [ label = "CDG: "] 
  "30064771131" -> "30064771143"  [ label = "CDG: "] 
  "30064771131" -> "30064771146"  [ label = "CDG: "] 
  "30064771131" -> "146028888070"  [ label = "CDG: "] 
}
"""
)
