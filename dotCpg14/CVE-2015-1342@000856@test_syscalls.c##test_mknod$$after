[33mval[0m [36mres82[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_mknod" {  
"111669149697" [label = <(METHOD,test_mknod)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const char *path)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	if (mknod(path, 0755, makedev(0, 0)) == 0) {...,{
	if (mknod(path, 0755, makedev(0, 0)) == 0) {...)<SUB>2</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (mknod(path, 0755, makedev(0, 0)) == 0))<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.equals,mknod(path, 0755, makedev(0, 0)) == 0)<SUB>3</SUB>> ]
"30064771073" [label = <(mknod,mknod(path, 0755, makedev(0, 0)))<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,path,mknod(path, 0755, makedev(0, 0)))<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,0755,mknod(path, 0755, makedev(0, 0)))<SUB>3</SUB>> ]
"30064771074" [label = <(makedev,makedev(0, 0))<SUB>3</SUB>> ]
"90194313217" [label = <(LITERAL,0,makedev(0, 0))<SUB>3</SUB>> ]
"90194313218" [label = <(LITERAL,0,makedev(0, 0))<SUB>3</SUB>> ]
"90194313219" [label = <(LITERAL,0,mknod(path, 0755, makedev(0, 0)) == 0)<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,{
		fprintf(stderr, &quot;leak at mknod of %s\n&quot;, pa...,{
		fprintf(stderr, &quot;leak at mknod of %s\n&quot;, pa...)<SUB>3</SUB>> ]
"30064771075" [label = <(fprintf,fprintf(stderr, &quot;leak at mknod of %s\n&quot;, path))<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;leak at mknod of %s\n&quot;, path))<SUB>4</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;leak at mknod of %s\n&quot;,fprintf(stderr, &quot;leak at mknod of %s\n&quot;, path))<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,path,fprintf(stderr, &quot;leak at mknod of %s\n&quot;, path))<SUB>4</SUB>> ]
"30064771076" [label = <(exit,exit(1))<SUB>5</SUB>> ]
"90194313221" [label = <(LITERAL,1,exit(1))<SUB>5</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (errno != ENOENT &amp;&amp; errno != ENOSYS))<SUB>7</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.logicalAnd,errno != ENOENT &amp;&amp; errno != ENOSYS)<SUB>7</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.notEquals,errno != ENOENT)<SUB>7</SUB>> ]
"68719476739" [label = <(IDENTIFIER,errno,errno != ENOENT)<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,ENOENT,errno != ENOENT)<SUB>7</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.notEquals,errno != ENOSYS)<SUB>7</SUB>> ]
"68719476741" [label = <(IDENTIFIER,errno,errno != ENOSYS)<SUB>7</SUB>> ]
"68719476742" [label = <(IDENTIFIER,ENOSYS,errno != ENOSYS)<SUB>7</SUB>> ]
"25769803779" [label = <(BLOCK,{
		fprintf(stderr, &quot;leak at mknod of %s: errno...,{
		fprintf(stderr, &quot;leak at mknod of %s: errno...)<SUB>7</SUB>> ]
"30064771080" [label = <(fprintf,fprintf(stderr, &quot;leak at mknod of %s: errno was...)<SUB>8</SUB>> ]
"68719476743" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;leak at mknod of %s: errno was...)<SUB>8</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;leak at mknod of %s: errno was %s\n&quot;,fprintf(stderr, &quot;leak at mknod of %s: errno was...)<SUB>8</SUB>> ]
"68719476744" [label = <(IDENTIFIER,path,fprintf(stderr, &quot;leak at mknod of %s: errno was...)<SUB>8</SUB>> ]
"30064771081" [label = <(strerror,strerror(errno))<SUB>8</SUB>> ]
"68719476745" [label = <(IDENTIFIER,errno,strerror(errno))<SUB>8</SUB>> ]
"30064771082" [label = <(exit,exit(1))<SUB>9</SUB>> ]
"90194313223" [label = <(LITERAL,1,exit(1))<SUB>9</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "90194313219"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "90194313218"  [ label = "AST: "] 
  "25769803778" -> "30064771075"  [ label = "AST: "] 
  "25769803778" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "68719476737"  [ label = "AST: "] 
  "30064771075" -> "90194313220"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "90194313221"  [ label = "AST: "] 
  "47244640257" -> "30064771077"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "25769803779" -> "30064771080"  [ label = "AST: "] 
  "25769803779" -> "30064771082"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "90194313222"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "90194313223"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771072" -> "30064771078"  [ label = "CFG: "] 
  "30064771077" -> "128849018880"  [ label = "CFG: "] 
  "30064771077" -> "30064771081"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771077"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "111669149697" -> "30064771074"  [ label = "CFG: "] 
  "30064771073" -> "128849018880"  [ label = "DDG: makedev(0, 0)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: mknod(path, 0755, makedev(0, 0))"] 
  "30064771072" -> "128849018880"  [ label = "DDG: mknod(path, 0755, makedev(0, 0)) == 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;leak at mknod of %s\n&quot;, path)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: errno != ENOENT"] 
  "30064771077" -> "128849018880"  [ label = "DDG: errno != ENOSYS"] 
  "30064771077" -> "128849018880"  [ label = "DDG: errno != ENOENT &amp;&amp; errno != ENOSYS"] 
  "30064771080" -> "128849018880"  [ label = "DDG: stderr"] 
  "30064771080" -> "128849018880"  [ label = "DDG: path"] 
  "30064771081" -> "128849018880"  [ label = "DDG: errno"] 
  "30064771080" -> "128849018880"  [ label = "DDG: strerror(errno)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;leak at mknod of %s: errno was %s\n&quot;, path, strerror(errno))"] 
  "30064771079" -> "128849018880"  [ label = "DDG: ENOSYS"] 
  "30064771078" -> "128849018880"  [ label = "DDG: ENOENT"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: path"] 
  "30064771073" -> "30064771072"  [ label = "DDG: 0755"] 
  "30064771073" -> "30064771072"  [ label = "DDG: makedev(0, 0)"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: errno"] 
  "30064771078" -> "30064771077"  [ label = "DDG: ENOENT"] 
  "30064771079" -> "30064771077"  [ label = "DDG: errno"] 
  "30064771079" -> "30064771077"  [ label = "DDG: ENOSYS"] 
  "115964116992" -> "30064771073"  [ label = "DDG: path"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771073" -> "30064771075"  [ label = "DDG: path"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771078" -> "30064771079"  [ label = "DDG: errno"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771075" -> "30064771080"  [ label = "DDG: stderr"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771073" -> "30064771080"  [ label = "DDG: path"] 
  "30064771075" -> "30064771080"  [ label = "DDG: path"] 
  "30064771081" -> "30064771080"  [ label = "DDG: errno"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771078" -> "30064771081"  [ label = "DDG: errno"] 
  "30064771079" -> "30064771081"  [ label = "DDG: errno"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771077" -> "30064771082"  [ label = "CDG: "] 
  "30064771077" -> "30064771080"  [ label = "CDG: "] 
  "30064771077" -> "30064771081"  [ label = "CDG: "] 
  "30064771078" -> "30064771079"  [ label = "CDG: "] 
}
"""
)
