[33mval[0m [36mres1468[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_tensor_type_ipc" {  
"111669149697" [label = <(METHOD,test_tensor_type_ipc)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,storage = pa.array([[1, 2, 3, 4, 5, 6, 1, 2, 3,...)<SUB>2</SUB>> ]
"68719476744" [label = <(IDENTIFIER,storage,storage = pa.array([[1, 2, 3, 4, 5, 6, 1, 2, 3,...)<SUB>2</SUB>> ]
"30064771080" [label = <(array,pa.array([[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]]...)<SUB>2</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,pa.array)<SUB>2</SUB>> ]
"68719476742" [label = <(IDENTIFIER,pa,pa.array([[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]]...)<SUB>2</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,array,array)<SUB>2</SUB>> ]
"68719476743" [label = <(IDENTIFIER,pa,pa.array([[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]]...)<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.listLiteral,[[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]])<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.listLiteral,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,1,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,2,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313218" [label = <(LITERAL,3,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313219" [label = <(LITERAL,4,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313220" [label = <(LITERAL,5,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313221" [label = <(LITERAL,6,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313222" [label = <(LITERAL,1,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313223" [label = <(LITERAL,2,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313224" [label = <(LITERAL,3,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313225" [label = <(LITERAL,4,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313226" [label = <(LITERAL,5,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"90194313227" [label = <(LITERAL,6,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>2</SUB>> ]
"30064771078" [label = <(list_,pa.list_(pa.int8(), 12))<SUB>2</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,pa.list_)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,pa,pa.list_(pa.int8(), 12))<SUB>2</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,list_,list_)<SUB>2</SUB>> ]
"68719476741" [label = <(IDENTIFIER,pa,pa.list_(pa.int8(), 12))<SUB>2</SUB>> ]
"30064771076" [label = <(int8,pa.int8())<SUB>2</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,pa.int8)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,pa,pa.int8())<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,int8,int8)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,pa,pa.int8())<SUB>2</SUB>> ]
"90194313228" [label = <(LITERAL,12,pa.list_(pa.int8(), 12))<SUB>2</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,arr = tmp0 = pa.ExtensionArray
tmp0.from_storag...)<SUB>3</SUB>> ]
"68719476751" [label = <(IDENTIFIER,arr,arr = tmp0 = pa.ExtensionArray
tmp0.from_storag...)<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,tmp0 = pa.ExtensionArray
tmp0.from_storage(tens...,tmp0 = pa.ExtensionArray
tmp0.from_storage(tens...)<SUB>3</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,tmp0 = pa.ExtensionArray)<SUB>3</SUB>> ]
"68719476748" [label = <(IDENTIFIER,tmp0,tmp0 = pa.ExtensionArray)<SUB>3</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.fieldAccess,pa.ExtensionArray)<SUB>3</SUB>> ]
"68719476747" [label = <(IDENTIFIER,pa,tmp0 = pa.ExtensionArray)<SUB>3</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,ExtensionArray,ExtensionArray)<SUB>3</SUB>> ]
"30064771085" [label = <(from_storage,tmp0.from_storage(tensor_type, storage))<SUB>3</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.fieldAccess,tmp0.from_storage)<SUB>3</SUB>> ]
"68719476749" [label = <(IDENTIFIER,tmp0,tmp0.from_storage(tensor_type, storage))<SUB>3</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,from_storage,from_storage)<SUB>3</SUB>> ]
"68719476750" [label = <(IDENTIFIER,tmp0,tmp0.from_storage(tensor_type, storage))<SUB>3</SUB>> ]
"68719476745" [label = <(IDENTIFIER,tensor_type,tmp0.from_storage(tensor_type, storage))<SUB>3</SUB>> ]
"68719476746" [label = <(IDENTIFIER,storage,tmp0.from_storage(tensor_type, storage))<SUB>3</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,batch = tmp1 = pa.RecordBatch
tmp1.from_arrays(...)<SUB>4</SUB>> ]
"68719476757" [label = <(IDENTIFIER,batch,batch = tmp1 = pa.RecordBatch
tmp1.from_arrays(...)<SUB>4</SUB>> ]
"25769803779" [label = <(BLOCK,tmp1 = pa.RecordBatch
tmp1.from_arrays([arr], [...,tmp1 = pa.RecordBatch
tmp1.from_arrays([arr], [...)<SUB>4</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,tmp1 = pa.RecordBatch)<SUB>4</SUB>> ]
"68719476754" [label = <(IDENTIFIER,tmp1,tmp1 = pa.RecordBatch)<SUB>4</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.fieldAccess,pa.RecordBatch)<SUB>4</SUB>> ]
"68719476753" [label = <(IDENTIFIER,pa,tmp1 = pa.RecordBatch)<SUB>4</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,RecordBatch,RecordBatch)<SUB>4</SUB>> ]
"30064771092" [label = <(from_arrays,tmp1.from_arrays([arr], [&quot;ext&quot;]))<SUB>4</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.fieldAccess,tmp1.from_arrays)<SUB>4</SUB>> ]
"68719476755" [label = <(IDENTIFIER,tmp1,tmp1.from_arrays([arr], [&quot;ext&quot;]))<SUB>4</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,from_arrays,from_arrays)<SUB>4</SUB>> ]
"68719476756" [label = <(IDENTIFIER,tmp1,tmp1.from_arrays([arr], [&quot;ext&quot;]))<SUB>4</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.listLiteral,[arr])<SUB>4</SUB>> ]
"68719476752" [label = <(IDENTIFIER,arr,[arr])<SUB>4</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.listLiteral,[&quot;ext&quot;])<SUB>4</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;ext&quot;,[&quot;ext&quot;])<SUB>4</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,tensor_class = tensor_type.__arrow_ext_class__())<SUB>7</SUB>> ]
"68719476760" [label = <(IDENTIFIER,tensor_class,tensor_class = tensor_type.__arrow_ext_class__())<SUB>7</SUB>> ]
"30064771095" [label = <(__arrow_ext_class__,tensor_type.__arrow_ext_class__())<SUB>7</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.fieldAccess,tensor_type.__arrow_ext_class__)<SUB>7</SUB>> ]
"68719476758" [label = <(IDENTIFIER,tensor_type,tensor_type.__arrow_ext_class__())<SUB>7</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,__arrow_ext_class__,__arrow_ext_class__)<SUB>7</SUB>> ]
"68719476759" [label = <(IDENTIFIER,tensor_type,tensor_type.__arrow_ext_class__())<SUB>7</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assert,assert isinstance(arr, tensor_class))<SUB>8</SUB>> ]
"30064771097" [label = <(isinstance,isinstance(arr, tensor_class))<SUB>8</SUB>> ]
"68719476763" [label = <(IDENTIFIER,isinstance,isinstance(arr, tensor_class))<SUB>8</SUB>> ]
"68719476761" [label = <(IDENTIFIER,arr,isinstance(arr, tensor_class))<SUB>8</SUB>> ]
"68719476762" [label = <(IDENTIFIER,tensor_class,isinstance(arr, tensor_class))<SUB>8</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.assignment,buf = ipc_write_batch(batch))<SUB>10</SUB>> ]
"68719476766" [label = <(IDENTIFIER,buf,buf = ipc_write_batch(batch))<SUB>10</SUB>> ]
"30064771099" [label = <(ipc_write_batch,ipc_write_batch(batch))<SUB>10</SUB>> ]
"68719476765" [label = <(IDENTIFIER,ipc_write_batch,ipc_write_batch(batch))<SUB>10</SUB>> ]
"68719476764" [label = <(IDENTIFIER,batch,ipc_write_batch(batch))<SUB>10</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.delete,del batch)<SUB>11</SUB>> ]
"68719476767" [label = <(IDENTIFIER,batch,del batch)<SUB>11</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,batch = ipc_read_batch(buf))<SUB>12</SUB>> ]
"68719476770" [label = <(IDENTIFIER,batch,batch = ipc_read_batch(buf))<SUB>12</SUB>> ]
"30064771102" [label = <(ipc_read_batch,ipc_read_batch(buf))<SUB>12</SUB>> ]
"68719476769" [label = <(IDENTIFIER,ipc_read_batch,ipc_read_batch(buf))<SUB>12</SUB>> ]
"68719476768" [label = <(IDENTIFIER,buf,ipc_read_batch(buf))<SUB>12</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.assignment,result = batch.column(0))<SUB>14</SUB>> ]
"68719476773" [label = <(IDENTIFIER,result,result = batch.column(0))<SUB>14</SUB>> ]
"30064771105" [label = <(column,batch.column(0))<SUB>14</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.fieldAccess,batch.column)<SUB>14</SUB>> ]
"68719476771" [label = <(IDENTIFIER,batch,batch.column(0))<SUB>14</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,column,column)<SUB>14</SUB>> ]
"68719476772" [label = <(IDENTIFIER,batch,batch.column(0))<SUB>14</SUB>> ]
"90194313230" [label = <(LITERAL,0,batch.column(0))<SUB>14</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.assert,assert isinstance(result, tensor_class))<SUB>16</SUB>> ]
"30064771107" [label = <(isinstance,isinstance(result, tensor_class))<SUB>16</SUB>> ]
"68719476776" [label = <(IDENTIFIER,isinstance,isinstance(result, tensor_class))<SUB>16</SUB>> ]
"68719476774" [label = <(IDENTIFIER,result,isinstance(result, tensor_class))<SUB>16</SUB>> ]
"68719476775" [label = <(IDENTIFIER,tensor_class,isinstance(result, tensor_class))<SUB>16</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.assert,assert result.type.extension_name == &quot;arrow.fix...)<SUB>17</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.equals,result.type.extension_name == &quot;arrow.fixed_shap...)<SUB>17</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.fieldAccess,result.type.extension_name)<SUB>17</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.fieldAccess,result.type)<SUB>17</SUB>> ]
"68719476777" [label = <(IDENTIFIER,result,result.type.extension_name == &quot;arrow.fixed_shap...)<SUB>17</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,type,type)<SUB>17</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,extension_name,extension_name)<SUB>17</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;arrow.fixed_shape_tensor&quot;,result.type.extension_name == &quot;arrow.fixed_shap...)<SUB>17</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.assert,assert tmp2 = arr.storage
tmp2.to_pylist() == [...)<SUB>18</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.equals,tmp2 = arr.storage
tmp2.to_pylist() == [[1, 2, ...)<SUB>18</SUB>> ]
"25769803780" [label = <(BLOCK,tmp2 = arr.storage
tmp2.to_pylist(),tmp2 = arr.storage
tmp2.to_pylist())<SUB>18</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.assignment,tmp2 = arr.storage)<SUB>18</SUB>> ]
"68719476779" [label = <(IDENTIFIER,tmp2,tmp2 = arr.storage)<SUB>18</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.fieldAccess,arr.storage)<SUB>18</SUB>> ]
"68719476778" [label = <(IDENTIFIER,arr,tmp2 = arr.storage)<SUB>18</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,storage,storage)<SUB>18</SUB>> ]
"30064771116" [label = <(to_pylist,tmp2.to_pylist())<SUB>18</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.fieldAccess,tmp2.to_pylist)<SUB>18</SUB>> ]
"68719476780" [label = <(IDENTIFIER,tmp2,tmp2.to_pylist())<SUB>18</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,to_pylist,to_pylist)<SUB>18</SUB>> ]
"68719476781" [label = <(IDENTIFIER,tmp2,tmp2.to_pylist())<SUB>18</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.listLiteral,[[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]])<SUB>18</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.listLiteral,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313232" [label = <(LITERAL,1,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313233" [label = <(LITERAL,2,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313234" [label = <(LITERAL,3,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313235" [label = <(LITERAL,4,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313236" [label = <(LITERAL,5,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313237" [label = <(LITERAL,6,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313238" [label = <(LITERAL,1,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313239" [label = <(LITERAL,2,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313240" [label = <(LITERAL,3,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313241" [label = <(LITERAL,4,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313242" [label = <(LITERAL,5,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"90194313243" [label = <(LITERAL,6,[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6])<SUB>18</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assert,assert isinstance(result.type, pa.FixedShapeTen...)<SUB>21</SUB>> ]
"30064771123" [label = <(isinstance,isinstance(result.type, pa.FixedShapeTensorType))<SUB>21</SUB>> ]
"68719476784" [label = <(IDENTIFIER,isinstance,isinstance(result.type, pa.FixedShapeTensorType))<SUB>21</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.fieldAccess,result.type)<SUB>21</SUB>> ]
"68719476782" [label = <(IDENTIFIER,result,isinstance(result.type, pa.FixedShapeTensorType))<SUB>21</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,type,type)<SUB>21</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.fieldAccess,pa.FixedShapeTensorType)<SUB>21</SUB>> ]
"68719476783" [label = <(IDENTIFIER,pa,isinstance(result.type, pa.FixedShapeTensorType))<SUB>21</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,FixedShapeTensorType,FixedShapeTensorType)<SUB>21</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.assert,assert result.type.value_type == pa.int8())<SUB>22</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.equals,result.type.value_type == pa.int8())<SUB>22</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.fieldAccess,result.type.value_type)<SUB>22</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.fieldAccess,result.type)<SUB>22</SUB>> ]
"68719476785" [label = <(IDENTIFIER,result,result.type.value_type == pa.int8())<SUB>22</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,type,type)<SUB>22</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,value_type,value_type)<SUB>22</SUB>> ]
"30064771128" [label = <(int8,pa.int8())<SUB>22</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.fieldAccess,pa.int8)<SUB>22</SUB>> ]
"68719476786" [label = <(IDENTIFIER,pa,pa.int8())<SUB>22</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,int8,int8)<SUB>22</SUB>> ]
"68719476787" [label = <(IDENTIFIER,pa,pa.int8())<SUB>22</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.assert,assert result.type.shape == [2, 2, 3])<SUB>23</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.equals,result.type.shape == [2, 2, 3])<SUB>23</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.fieldAccess,result.type.shape)<SUB>23</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.fieldAccess,result.type)<SUB>23</SUB>> ]
"68719476788" [label = <(IDENTIFIER,result,result.type.shape == [2, 2, 3])<SUB>23</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,type,type)<SUB>23</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,shape,shape)<SUB>23</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.listLiteral,[2, 2, 3])<SUB>23</SUB>> ]
"90194313244" [label = <(LITERAL,2,[2, 2, 3])<SUB>23</SUB>> ]
"90194313245" [label = <(LITERAL,2,[2, 2, 3])<SUB>23</SUB>> ]
"90194313246" [label = <(LITERAL,3,[2, 2, 3])<SUB>23</SUB>> ]
"94489280514" [label = <(LOCAL,pa: ANY)<SUB>2</SUB>> ]
"94489280516" [label = <(LOCAL,storage: ANY)<SUB>2</SUB>> ]
"94489280517" [label = <(LOCAL,tmp0: pa.ExtensionArray.&lt;returnValue&gt;.&lt;member&gt;(ExtensionArray))<SUB>3</SUB>> ]
"94489280518" [label = <(LOCAL,arr: pa.ExtensionArray.&lt;returnValue&gt;.&lt;member&gt;(ExtensionArray).from_storage)<SUB>3</SUB>> ]
"94489280519" [label = <(LOCAL,tmp1: pa.RecordBatch.&lt;returnValue&gt;.&lt;member&gt;(RecordBatch))<SUB>4</SUB>> ]
"94489280520" [label = <(LOCAL,batch: ANY)<SUB>4</SUB>> ]
"94489280521" [label = <(LOCAL,tensor_class: ANY)<SUB>7</SUB>> ]
"94489280522" [label = <(LOCAL,isinstance: ANY)<SUB>8</SUB>> ]
"94489280523" [label = <(LOCAL,ipc_write_batch: ANY)<SUB>10</SUB>> ]
"94489280525" [label = <(LOCAL,buf: ipc_write_batch.&lt;returnValue&gt;)<SUB>10</SUB>> ]
"94489280526" [label = <(LOCAL,ipc_read_batch: ANY)<SUB>12</SUB>> ]
"94489280528" [label = <(LOCAL,result: ANY)<SUB>14</SUB>> ]
"94489280529" [label = <(LOCAL,tmp2: pa.ExtensionArray.&lt;returnValue&gt;.&lt;member&gt;(ExtensionArray).from_storage.&lt;member&gt;(storage))<SUB>18</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,tensor_type)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771098"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771100"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771101"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "30064771103"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "30064771106"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "30064771108"  [ label = "AST: "] 
  "25769803777" -> "94489280525"  [ label = "AST: "] 
  "25769803777" -> "30064771112"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "30064771120"  [ label = "AST: "] 
  "25769803777" -> "94489280528"  [ label = "AST: "] 
  "25769803777" -> "30064771124"  [ label = "AST: "] 
  "25769803777" -> "94489280529"  [ label = "AST: "] 
  "25769803777" -> "30064771130"  [ label = "AST: "] 
  "25769803777" -> "30064771135"  [ label = "AST: "] 
  "30064771081" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "30064771074"  [ label = "AST: "] 
  "30064771080" -> "30064771078"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "55834574850"  [ label = "AST: "] 
  "30064771074" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "90194313217"  [ label = "AST: "] 
  "30064771073" -> "90194313218"  [ label = "AST: "] 
  "30064771073" -> "90194313219"  [ label = "AST: "] 
  "30064771073" -> "90194313220"  [ label = "AST: "] 
  "30064771073" -> "90194313221"  [ label = "AST: "] 
  "30064771073" -> "90194313222"  [ label = "AST: "] 
  "30064771073" -> "90194313223"  [ label = "AST: "] 
  "30064771073" -> "90194313224"  [ label = "AST: "] 
  "30064771073" -> "90194313225"  [ label = "AST: "] 
  "30064771073" -> "90194313226"  [ label = "AST: "] 
  "30064771073" -> "90194313227"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771076"  [ label = "AST: "] 
  "30064771078" -> "90194313228"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "55834574849"  [ label = "AST: "] 
  "30064771076" -> "30064771075"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "55834574848"  [ label = "AST: "] 
  "30064771086" -> "68719476751"  [ label = "AST: "] 
  "30064771086" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "30064771083"  [ label = "AST: "] 
  "25769803778" -> "30064771085"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "30064771082" -> "55834574851"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771085" -> "68719476745"  [ label = "AST: "] 
  "30064771085" -> "68719476746"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "55834574852"  [ label = "AST: "] 
  "30064771093" -> "68719476757"  [ label = "AST: "] 
  "30064771093" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "30064771090"  [ label = "AST: "] 
  "25769803779" -> "30064771092"  [ label = "AST: "] 
  "30064771090" -> "68719476754"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476753"  [ label = "AST: "] 
  "30064771089" -> "55834574853"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771092" -> "68719476756"  [ label = "AST: "] 
  "30064771092" -> "30064771087"  [ label = "AST: "] 
  "30064771092" -> "30064771088"  [ label = "AST: "] 
  "30064771091" -> "68719476755"  [ label = "AST: "] 
  "30064771091" -> "55834574854"  [ label = "AST: "] 
  "30064771087" -> "68719476752"  [ label = "AST: "] 
  "30064771088" -> "90194313229"  [ label = "AST: "] 
  "30064771096" -> "68719476760"  [ label = "AST: "] 
  "30064771096" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "30064771094"  [ label = "AST: "] 
  "30064771095" -> "68719476759"  [ label = "AST: "] 
  "30064771094" -> "68719476758"  [ label = "AST: "] 
  "30064771094" -> "55834574855"  [ label = "AST: "] 
  "30064771098" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476763"  [ label = "AST: "] 
  "30064771097" -> "68719476761"  [ label = "AST: "] 
  "30064771097" -> "68719476762"  [ label = "AST: "] 
  "30064771100" -> "68719476766"  [ label = "AST: "] 
  "30064771100" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476765"  [ label = "AST: "] 
  "30064771099" -> "68719476764"  [ label = "AST: "] 
  "30064771101" -> "68719476767"  [ label = "AST: "] 
  "30064771103" -> "68719476770"  [ label = "AST: "] 
  "30064771103" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "68719476769"  [ label = "AST: "] 
  "30064771102" -> "68719476768"  [ label = "AST: "] 
  "30064771106" -> "68719476773"  [ label = "AST: "] 
  "30064771106" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "30064771104"  [ label = "AST: "] 
  "30064771105" -> "68719476772"  [ label = "AST: "] 
  "30064771105" -> "90194313230"  [ label = "AST: "] 
  "30064771104" -> "68719476771"  [ label = "AST: "] 
  "30064771104" -> "55834574856"  [ label = "AST: "] 
  "30064771108" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "68719476776"  [ label = "AST: "] 
  "30064771107" -> "68719476774"  [ label = "AST: "] 
  "30064771107" -> "68719476775"  [ label = "AST: "] 
  "30064771112" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "30064771110"  [ label = "AST: "] 
  "30064771111" -> "90194313231"  [ label = "AST: "] 
  "30064771110" -> "30064771109"  [ label = "AST: "] 
  "30064771110" -> "55834574858"  [ label = "AST: "] 
  "30064771109" -> "68719476777"  [ label = "AST: "] 
  "30064771109" -> "55834574857"  [ label = "AST: "] 
  "30064771120" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "25769803780"  [ label = "AST: "] 
  "30064771119" -> "30064771118"  [ label = "AST: "] 
  "25769803780" -> "30064771114"  [ label = "AST: "] 
  "25769803780" -> "30064771116"  [ label = "AST: "] 
  "30064771114" -> "68719476779"  [ label = "AST: "] 
  "30064771114" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476778"  [ label = "AST: "] 
  "30064771113" -> "55834574859"  [ label = "AST: "] 
  "30064771116" -> "30064771115"  [ label = "AST: "] 
  "30064771116" -> "68719476781"  [ label = "AST: "] 
  "30064771115" -> "68719476780"  [ label = "AST: "] 
  "30064771115" -> "55834574860"  [ label = "AST: "] 
  "30064771118" -> "30064771117"  [ label = "AST: "] 
  "30064771117" -> "90194313232"  [ label = "AST: "] 
  "30064771117" -> "90194313233"  [ label = "AST: "] 
  "30064771117" -> "90194313234"  [ label = "AST: "] 
  "30064771117" -> "90194313235"  [ label = "AST: "] 
  "30064771117" -> "90194313236"  [ label = "AST: "] 
  "30064771117" -> "90194313237"  [ label = "AST: "] 
  "30064771117" -> "90194313238"  [ label = "AST: "] 
  "30064771117" -> "90194313239"  [ label = "AST: "] 
  "30064771117" -> "90194313240"  [ label = "AST: "] 
  "30064771117" -> "90194313241"  [ label = "AST: "] 
  "30064771117" -> "90194313242"  [ label = "AST: "] 
  "30064771117" -> "90194313243"  [ label = "AST: "] 
  "30064771124" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "68719476784"  [ label = "AST: "] 
  "30064771123" -> "30064771121"  [ label = "AST: "] 
  "30064771123" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "68719476782"  [ label = "AST: "] 
  "30064771121" -> "55834574861"  [ label = "AST: "] 
  "30064771122" -> "68719476783"  [ label = "AST: "] 
  "30064771122" -> "55834574862"  [ label = "AST: "] 
  "30064771130" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "30064771126"  [ label = "AST: "] 
  "30064771129" -> "30064771128"  [ label = "AST: "] 
  "30064771126" -> "30064771125"  [ label = "AST: "] 
  "30064771126" -> "55834574864"  [ label = "AST: "] 
  "30064771125" -> "68719476785"  [ label = "AST: "] 
  "30064771125" -> "55834574863"  [ label = "AST: "] 
  "30064771128" -> "30064771127"  [ label = "AST: "] 
  "30064771128" -> "68719476787"  [ label = "AST: "] 
  "30064771127" -> "68719476786"  [ label = "AST: "] 
  "30064771127" -> "55834574865"  [ label = "AST: "] 
  "30064771135" -> "30064771134"  [ label = "AST: "] 
  "30064771134" -> "30064771132"  [ label = "AST: "] 
  "30064771134" -> "30064771133"  [ label = "AST: "] 
  "30064771132" -> "30064771131"  [ label = "AST: "] 
  "30064771132" -> "55834574867"  [ label = "AST: "] 
  "30064771131" -> "68719476788"  [ label = "AST: "] 
  "30064771131" -> "55834574866"  [ label = "AST: "] 
  "30064771133" -> "90194313244"  [ label = "AST: "] 
  "30064771133" -> "90194313245"  [ label = "AST: "] 
  "30064771133" -> "90194313246"  [ label = "AST: "] 
  "30064771081" -> "55834574851"  [ label = "CFG: "] 
  "30064771086" -> "55834574853"  [ label = "CFG: "] 
  "30064771093" -> "55834574855"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771101" -> "30064771102"  [ label = "CFG: "] 
  "30064771103" -> "55834574856"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771108" -> "55834574857"  [ label = "CFG: "] 
  "30064771112" -> "55834574859"  [ label = "CFG: "] 
  "30064771120" -> "55834574861"  [ label = "CFG: "] 
  "30064771124" -> "55834574863"  [ label = "CFG: "] 
  "30064771130" -> "55834574866"  [ label = "CFG: "] 
  "30064771135" -> "128849018881"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771095" -> "30064771096"  [ label = "CFG: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771099" -> "30064771100"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771105" -> "30064771106"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "30064771111" -> "30064771112"  [ label = "CFG: "] 
  "30064771119" -> "30064771120"  [ label = "CFG: "] 
  "30064771123" -> "30064771124"  [ label = "CFG: "] 
  "30064771129" -> "30064771130"  [ label = "CFG: "] 
  "30064771134" -> "30064771135"  [ label = "CFG: "] 
  "30064771079" -> "30064771073"  [ label = "CFG: "] 
  "30064771074" -> "55834574849"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "55834574852"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771090" -> "55834574854"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771118" -> "30064771119"  [ label = "CFG: "] 
  "30064771121" -> "55834574862"  [ label = "CFG: "] 
  "30064771122" -> "30064771123"  [ label = "CFG: "] 
  "30064771126" -> "55834574865"  [ label = "CFG: "] 
  "30064771128" -> "30064771129"  [ label = "CFG: "] 
  "30064771132" -> "30064771133"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "55834574850" -> "30064771079"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "55834574848"  [ label = "CFG: "] 
  "30064771076" -> "30064771078"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771091" -> "30064771087"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771092"  [ label = "CFG: "] 
  "55834574855" -> "30064771094"  [ label = "CFG: "] 
  "55834574856" -> "30064771104"  [ label = "CFG: "] 
  "30064771109" -> "55834574858"  [ label = "CFG: "] 
  "55834574858" -> "30064771110"  [ label = "CFG: "] 
  "30064771114" -> "55834574860"  [ label = "CFG: "] 
  "30064771116" -> "30064771117"  [ label = "CFG: "] 
  "30064771117" -> "30064771118"  [ label = "CFG: "] 
  "55834574861" -> "30064771121"  [ label = "CFG: "] 
  "55834574862" -> "30064771122"  [ label = "CFG: "] 
  "30064771125" -> "55834574864"  [ label = "CFG: "] 
  "55834574864" -> "30064771126"  [ label = "CFG: "] 
  "30064771127" -> "30064771128"  [ label = "CFG: "] 
  "30064771131" -> "55834574867"  [ label = "CFG: "] 
  "55834574867" -> "30064771132"  [ label = "CFG: "] 
  "55834574849" -> "30064771077"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "55834574851" -> "30064771082"  [ label = "CFG: "] 
  "55834574852" -> "30064771084"  [ label = "CFG: "] 
  "55834574853" -> "30064771089"  [ label = "CFG: "] 
  "55834574854" -> "30064771091"  [ label = "CFG: "] 
  "55834574857" -> "30064771109"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771115" -> "30064771116"  [ label = "CFG: "] 
  "55834574863" -> "30064771125"  [ label = "CFG: "] 
  "55834574865" -> "30064771127"  [ label = "CFG: "] 
  "55834574866" -> "30064771131"  [ label = "CFG: "] 
  "55834574848" -> "30064771075"  [ label = "CFG: "] 
  "55834574859" -> "30064771113"  [ label = "CFG: "] 
  "55834574860" -> "30064771115"  [ label = "CFG: "] 
  "111669149697" -> "55834574850"  [ label = "CFG: "] 
  "30064771080" -> "128849018881"  [ label = "DDG: pa.list_(pa.int8(), 12)"] 
  "30064771081" -> "128849018881"  [ label = "DDG: pa.array([[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]], pa.list_(pa.int8(), 12))"] 
  "30064771081" -> "128849018881"  [ label = "DDG: storage = pa.array([[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]], pa.list_(pa.int8(), 12))"] 
  "30064771083" -> "128849018881"  [ label = "DDG: tmp0 = pa.ExtensionArray"] 
  "30064771085" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771085" -> "128849018881"  [ label = "DDG: storage"] 
  "30064771085" -> "128849018881"  [ label = "DDG: tmp0.from_storage(tensor_type, storage)"] 
  "30064771086" -> "128849018881"  [ label = "DDG: arr = tmp0 = pa.ExtensionArray
tmp0.from_storage(tensor_type, storage)"] 
  "30064771090" -> "128849018881"  [ label = "DDG: tmp1 = pa.RecordBatch"] 
  "30064771092" -> "128849018881"  [ label = "DDG: tmp1"] 
  "30064771092" -> "128849018881"  [ label = "DDG: [arr]"] 
  "30064771092" -> "128849018881"  [ label = "DDG: [&quot;ext&quot;]"] 
  "30064771092" -> "128849018881"  [ label = "DDG: tmp1.from_arrays([arr], [&quot;ext&quot;])"] 
  "30064771093" -> "128849018881"  [ label = "DDG: batch = tmp1 = pa.RecordBatch
tmp1.from_arrays([arr], [&quot;ext&quot;])"] 
  "30064771095" -> "128849018881"  [ label = "DDG: tensor_type"] 
  "30064771096" -> "128849018881"  [ label = "DDG: tensor_type.__arrow_ext_class__()"] 
  "30064771096" -> "128849018881"  [ label = "DDG: tensor_class = tensor_type.__arrow_ext_class__()"] 
  "30064771097" -> "128849018881"  [ label = "DDG: arr"] 
  "30064771098" -> "128849018881"  [ label = "DDG: isinstance(arr, tensor_class)"] 
  "30064771098" -> "128849018881"  [ label = "DDG: assert isinstance(arr, tensor_class)"] 
  "30064771100" -> "128849018881"  [ label = "DDG: ipc_write_batch(batch)"] 
  "30064771100" -> "128849018881"  [ label = "DDG: buf = ipc_write_batch(batch)"] 
  "30064771101" -> "128849018881"  [ label = "DDG: del batch"] 
  "30064771102" -> "128849018881"  [ label = "DDG: buf"] 
  "30064771103" -> "128849018881"  [ label = "DDG: ipc_read_batch(buf)"] 
  "30064771103" -> "128849018881"  [ label = "DDG: batch = ipc_read_batch(buf)"] 
  "30064771105" -> "128849018881"  [ label = "DDG: batch"] 
  "30064771106" -> "128849018881"  [ label = "DDG: batch.column(0)"] 
  "30064771106" -> "128849018881"  [ label = "DDG: result = batch.column(0)"] 
  "30064771107" -> "128849018881"  [ label = "DDG: result"] 
  "30064771107" -> "128849018881"  [ label = "DDG: tensor_class"] 
  "30064771108" -> "128849018881"  [ label = "DDG: isinstance(result, tensor_class)"] 
  "30064771108" -> "128849018881"  [ label = "DDG: assert isinstance(result, tensor_class)"] 
  "30064771111" -> "128849018881"  [ label = "DDG: result.type.extension_name"] 
  "30064771112" -> "128849018881"  [ label = "DDG: result.type.extension_name == &quot;arrow.fixed_shape_tensor&quot;"] 
  "30064771112" -> "128849018881"  [ label = "DDG: assert result.type.extension_name == &quot;arrow.fixed_shape_tensor&quot;"] 
  "30064771114" -> "128849018881"  [ label = "DDG: arr.storage"] 
  "30064771114" -> "128849018881"  [ label = "DDG: tmp2 = arr.storage"] 
  "30064771116" -> "128849018881"  [ label = "DDG: tmp2"] 
  "30064771116" -> "128849018881"  [ label = "DDG: tmp2.to_pylist()"] 
  "30064771118" -> "128849018881"  [ label = "DDG: [1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]"] 
  "30064771119" -> "128849018881"  [ label = "DDG: [[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]]"] 
  "30064771120" -> "128849018881"  [ label = "DDG: tmp2 = arr.storage
tmp2.to_pylist() == [[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]]"] 
  "30064771120" -> "128849018881"  [ label = "DDG: assert tmp2 = arr.storage
tmp2.to_pylist() == [[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]]"] 
  "30064771123" -> "128849018881"  [ label = "DDG: result.type"] 
  "30064771124" -> "128849018881"  [ label = "DDG: isinstance(result.type, pa.FixedShapeTensorType)"] 
  "30064771124" -> "128849018881"  [ label = "DDG: assert isinstance(result.type, pa.FixedShapeTensorType)"] 
  "30064771129" -> "128849018881"  [ label = "DDG: result.type.value_type"] 
  "30064771128" -> "128849018881"  [ label = "DDG: pa"] 
  "30064771129" -> "128849018881"  [ label = "DDG: pa.int8()"] 
  "30064771130" -> "128849018881"  [ label = "DDG: result.type.value_type == pa.int8()"] 
  "30064771130" -> "128849018881"  [ label = "DDG: assert result.type.value_type == pa.int8()"] 
  "30064771134" -> "128849018881"  [ label = "DDG: result.type.shape"] 
  "30064771134" -> "128849018881"  [ label = "DDG: [2, 2, 3]"] 
  "30064771135" -> "128849018881"  [ label = "DDG: result.type.shape == [2, 2, 3]"] 
  "30064771135" -> "128849018881"  [ label = "DDG: assert result.type.shape == [2, 2, 3]"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771080" -> "30064771081"  [ label = "DDG: pa"] 
  "30064771080" -> "30064771081"  [ label = "DDG: [[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]]"] 
  "30064771080" -> "30064771081"  [ label = "DDG: pa.list_(pa.int8(), 12)"] 
  "30064771085" -> "30064771086"  [ label = "DDG: tmp0.from_storage(tensor_type, storage)"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771092" -> "30064771093"  [ label = "DDG: tmp1.from_arrays([arr], [&quot;ext&quot;])"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771095" -> "30064771096"  [ label = "DDG: tensor_type"] 
  "30064771099" -> "30064771100"  [ label = "DDG: batch"] 
  "30064771102" -> "30064771103"  [ label = "DDG: buf"] 
  "30064771105" -> "30064771106"  [ label = "DDG: batch"] 
  "30064771105" -> "30064771106"  [ label = "DDG: 0"] 
  "30064771097" -> "30064771098"  [ label = "DDG: arr"] 
  "30064771097" -> "30064771098"  [ label = "DDG: tensor_class"] 
  "30064771099" -> "30064771101"  [ label = "DDG: batch"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771107" -> "30064771108"  [ label = "DDG: result"] 
  "30064771107" -> "30064771108"  [ label = "DDG: tensor_class"] 
  "30064771111" -> "30064771112"  [ label = "DDG: result.type.extension_name"] 
  "30064771111" -> "30064771112"  [ label = "DDG: &quot;arrow.fixed_shape_tensor&quot;"] 
  "30064771119" -> "30064771120"  [ label = "DDG: tmp2 = arr.storage
tmp2.to_pylist()"] 
  "30064771119" -> "30064771120"  [ label = "DDG: [[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]]"] 
  "30064771119" -> "30064771120"  [ label = "DDG: "] 
  "30064771123" -> "30064771124"  [ label = "DDG: result.type"] 
  "30064771123" -> "30064771124"  [ label = "DDG: pa.FixedShapeTensorType"] 
  "30064771129" -> "30064771130"  [ label = "DDG: result.type.value_type"] 
  "30064771129" -> "30064771130"  [ label = "DDG: pa.int8()"] 
  "30064771134" -> "30064771135"  [ label = "DDG: result.type.shape"] 
  "30064771134" -> "30064771135"  [ label = "DDG: [2, 2, 3]"] 
  "30064771078" -> "30064771080"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771074" -> "30064771080"  [ label = "DDG: [1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]"] 
  "30064771078" -> "30064771080"  [ label = "DDG: pa.int8()"] 
  "30064771078" -> "30064771080"  [ label = "DDG: 12"] 
  "30064771080" -> "30064771083"  [ label = "DDG: pa"] 
  "30064771080" -> "30064771090"  [ label = "DDG: pa"] 
  "30064771085" -> "30064771095"  [ label = "DDG: tensor_type"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771072" -> "68719476763"  [ label = "DDG: isinstance"] 
  "111669149697" -> "68719476763"  [ label = "DDG: "] 
  "30064771087" -> "30064771097"  [ label = "DDG: arr"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771096" -> "30064771097"  [ label = "DDG: tensor_class"] 
  "111669149697" -> "68719476765"  [ label = "DDG: "] 
  "30064771093" -> "30064771099"  [ label = "DDG: batch"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "111669149697" -> "68719476769"  [ label = "DDG: "] 
  "30064771100" -> "30064771102"  [ label = "DDG: buf"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771103" -> "30064771105"  [ label = "DDG: batch"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "111669149697" -> "68719476776"  [ label = "DDG: "] 
  "30064771106" -> "30064771107"  [ label = "DDG: result"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771097" -> "30064771107"  [ label = "DDG: tensor_class"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771116" -> "30064771119"  [ label = "DDG: tmp2.to_pylist()"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771118" -> "30064771119"  [ label = "DDG: [1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]"] 
  "111669149697" -> "68719476784"  [ label = "DDG: "] 
  "30064771107" -> "30064771123"  [ label = "DDG: result"] 
  "30064771111" -> "30064771123"  [ label = "DDG: result.type.extension_name"] 
  "30064771080" -> "30064771123"  [ label = "DDG: pa"] 
  "30064771128" -> "30064771129"  [ label = "DDG: pa"] 
  "30064771133" -> "30064771134"  [ label = "DDG: 2"] 
  "30064771133" -> "30064771134"  [ label = "DDG: 3"] 
  "30064771073" -> "30064771074"  [ label = "DDG: 5"] 
  "30064771073" -> "30064771074"  [ label = "DDG: 2"] 
  "30064771073" -> "30064771074"  [ label = "DDG: 6"] 
  "30064771073" -> "30064771074"  [ label = "DDG: 1"] 
  "30064771073" -> "30064771074"  [ label = "DDG: 4"] 
  "30064771073" -> "30064771074"  [ label = "DDG: 3"] 
  "30064771076" -> "30064771078"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771083" -> "30064771085"  [ label = "DDG: tmp0"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "115964116992" -> "30064771085"  [ label = "DDG: tensor_type"] 
  "30064771081" -> "30064771085"  [ label = "DDG: storage"] 
  "30064771090" -> "30064771092"  [ label = "DDG: tmp1"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771087" -> "30064771092"  [ label = "DDG: arr"] 
  "30064771088" -> "30064771092"  [ label = "DDG: &quot;ext&quot;"] 
  "30064771097" -> "30064771114"  [ label = "DDG: arr"] 
  "30064771117" -> "30064771118"  [ label = "DDG: 1"] 
  "30064771117" -> "30064771118"  [ label = "DDG: 2"] 
  "30064771117" -> "30064771118"  [ label = "DDG: 4"] 
  "30064771117" -> "30064771118"  [ label = "DDG: 5"] 
  "30064771117" -> "30064771118"  [ label = "DDG: 6"] 
  "30064771117" -> "30064771118"  [ label = "DDG: 3"] 
  "30064771080" -> "30064771128"  [ label = "DDG: pa"] 
  "30064771123" -> "30064771128"  [ label = "DDG: pa.FixedShapeTensorType"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771086" -> "30064771087"  [ label = "DDG: arr"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771114" -> "30064771116"  [ label = "DDG: tmp2"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
}
"""
)
