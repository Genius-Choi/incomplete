[33mval[0m [36mres1500[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "TensorShapeFromTensor" {  
"111669149697" [label = <(METHOD,TensorShapeFromTensor)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const Tensor&amp; t)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,PartialTensorShape* out)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
  if (t.shape() == TensorShape({})) {
    if ...,{
  if (t.shape() == TensorShape({})) {
    if ...)<SUB>1</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (t.shape() == TensorShape({})))<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.equals,t.shape() == TensorShape({}))<SUB>2</SUB>> ]
"30064771073" [label = <(shape,t.shape())<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,t,t.shape())<SUB>2</SUB>> ]
"30064771074" [label = <(TensorShape,TensorShape({}))<SUB>2</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>2</SUB>> ]
"25769803778" [label = <(BLOCK,{
    if ((t.dtype() == DT_INT32 &amp;&amp; t.scalar&lt;in...,{
    if ((t.dtype() == DT_INT32 &amp;&amp; t.scalar&lt;in...)<SUB>2</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if ((t.dtype() == DT_INT32 &amp;&amp; t.scalar&lt;int32&gt;()() == -1) ||
        (t.dtype() == DT_INT64 &amp;&amp; t.scalar&lt;int64_t&gt;()() == -1)))<SUB>3</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.logicalOr,(t.dtype() == DT_INT32 &amp;&amp; t.scalar&lt;int32&gt;()() =...)<SUB>3</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.logicalAnd,t.dtype() == DT_INT32 &amp;&amp; t.scalar&lt;int32&gt;()() == -1)<SUB>3</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.equals,t.dtype() == DT_INT32)<SUB>3</SUB>> ]
"30064771079" [label = <(dtype,t.dtype())<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,t,t.dtype())<SUB>3</SUB>> ]
"68719476738" [label = <(IDENTIFIER,DT_INT32,t.dtype() == DT_INT32)<SUB>3</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.equals,t.scalar&lt;int32&gt;()() == -1)<SUB>3</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;(),t.scalar&lt;int32&gt;()())<SUB>3</SUB>> ]
"30064771082" [label = <(scalar&lt;int32&gt;,t.scalar&lt;int32&gt;())<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,t,t.scalar&lt;int32&gt;())<SUB>3</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.minus,-1)<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,1,-1)<SUB>3</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.logicalAnd,t.dtype() == DT_INT64 &amp;&amp; t.scalar&lt;int64_t&gt;()() ...)<SUB>4</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.equals,t.dtype() == DT_INT64)<SUB>4</SUB>> ]
"30064771086" [label = <(dtype,t.dtype())<SUB>4</SUB>> ]
"68719476740" [label = <(IDENTIFIER,t,t.dtype())<SUB>4</SUB>> ]
"68719476741" [label = <(IDENTIFIER,DT_INT64,t.dtype() == DT_INT64)<SUB>4</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.equals,t.scalar&lt;int64_t&gt;()() == -1)<SUB>4</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;(),t.scalar&lt;int64_t&gt;()())<SUB>4</SUB>> ]
"30064771089" [label = <(scalar&lt;int64_t&gt;,t.scalar&lt;int64_t&gt;())<SUB>4</SUB>> ]
"68719476742" [label = <(IDENTIFIER,t,t.scalar&lt;int64_t&gt;())<SUB>4</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.minus,-1)<SUB>4</SUB>> ]
"90194313217" [label = <(LITERAL,1,-1)<SUB>4</SUB>> ]
"25769803779" [label = <(BLOCK,{
      *out = PartialTensorShape();
      retu...,{
      *out = PartialTensorShape();
      retu...)<SUB>4</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,*out = PartialTensorShape())<SUB>5</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.indirection,*out)<SUB>5</SUB>> ]
"68719476743" [label = <(IDENTIFIER,out,*out = PartialTensorShape())<SUB>5</SUB>> ]
"30064771093" [label = <(PartialTensorShape,PartialTensorShape())<SUB>5</SUB>> ]
"146028888064" [label = <(RETURN,return OkStatus();,return OkStatus();)<SUB>6</SUB>> ]
"30064771094" [label = <(OkStatus,OkStatus())<SUB>6</SUB>> ]
"146028888065" [label = <(RETURN,return errors::InvalidArgument(
        &quot;The on...,return errors::InvalidArgument(
        &quot;The on...)<SUB>8</SUB>> ]
"30064771095" [label = <(InvalidArgument,errors::InvalidArgument(
        &quot;The only vali...)<SUB>8</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;The only valid scalar shape tensor is the full...,errors::InvalidArgument(
        &quot;The only vali...)<SUB>9</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (t.dtype() == DT_INT32))<SUB>12</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.equals,t.dtype() == DT_INT32)<SUB>12</SUB>> ]
"30064771097" [label = <(dtype,t.dtype())<SUB>12</SUB>> ]
"68719476744" [label = <(IDENTIFIER,t,t.dtype())<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,DT_INT32,t.dtype() == DT_INT32)<SUB>12</SUB>> ]
"25769803780" [label = <(BLOCK,{
    return PartialTensorShape::MakePartialSha...,{
    return PartialTensorShape::MakePartialSha...)<SUB>12</SUB>> ]
"146028888066" [label = <(RETURN,return PartialTensorShape::MakePartialShape(t.v...,return PartialTensorShape::MakePartialShape(t.v...)<SUB>13</SUB>> ]
"30064771098" [label = <(MakePartialShape,PartialTensorShape::MakePartialShape(t.vec&lt;int3...)<SUB>13</SUB>> ]
"30064771099" [label = <(data,t.vec&lt;int32&gt;().data())<SUB>13</SUB>> ]
"30064771100" [label = <(vec&lt;int32&gt;,t.vec&lt;int32&gt;())<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,t,t.vec&lt;int32&gt;())<SUB>13</SUB>> ]
"30064771101" [label = <(NumElements,t.NumElements())<SUB>14</SUB>> ]
"68719476747" [label = <(IDENTIFIER,t,t.NumElements())<SUB>14</SUB>> ]
"68719476748" [label = <(IDENTIFIER,out,PartialTensorShape::MakePartialShape(t.vec&lt;int3...)<SUB>14</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>15</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (t.dtype() == DT_INT64))<SUB>15</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.equals,t.dtype() == DT_INT64)<SUB>15</SUB>> ]
"30064771103" [label = <(dtype,t.dtype())<SUB>15</SUB>> ]
"68719476749" [label = <(IDENTIFIER,t,t.dtype())<SUB>15</SUB>> ]
"68719476750" [label = <(IDENTIFIER,DT_INT64,t.dtype() == DT_INT64)<SUB>15</SUB>> ]
"25769803782" [label = <(BLOCK,{
    return PartialTensorShape::MakePartialSha...,{
    return PartialTensorShape::MakePartialSha...)<SUB>15</SUB>> ]
"146028888067" [label = <(RETURN,return PartialTensorShape::MakePartialShape(t.v...,return PartialTensorShape::MakePartialShape(t.v...)<SUB>16</SUB>> ]
"30064771104" [label = <(MakePartialShape,PartialTensorShape::MakePartialShape(t.vec&lt;int6...)<SUB>16</SUB>> ]
"30064771105" [label = <(data,t.vec&lt;int64_t&gt;().data())<SUB>16</SUB>> ]
"30064771106" [label = <(vec&lt;int64_t&gt;,t.vec&lt;int64_t&gt;())<SUB>16</SUB>> ]
"68719476751" [label = <(IDENTIFIER,t,t.vec&lt;int64_t&gt;())<SUB>16</SUB>> ]
"30064771107" [label = <(NumElements,t.NumElements())<SUB>17</SUB>> ]
"68719476752" [label = <(IDENTIFIER,t,t.NumElements())<SUB>17</SUB>> ]
"68719476753" [label = <(IDENTIFIER,out,PartialTensorShape::MakePartialShape(t.vec&lt;int6...)<SUB>17</SUB>> ]
"146028888068" [label = <(RETURN,return errors::InvalidArgument(
      &quot;Expected...,return errors::InvalidArgument(
      &quot;Expected...)<SUB>19</SUB>> ]
"30064771108" [label = <(InvalidArgument,errors::InvalidArgument(
      &quot;Expected an int...)<SUB>19</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;Expected an int32 or int64 shape tensor; found &quot;,errors::InvalidArgument(
      &quot;Expected an int...)<SUB>20</SUB>> ]
"30064771109" [label = <(DataTypeString,DataTypeString(t.dtype()))<SUB>21</SUB>> ]
"30064771110" [label = <(dtype,t.dtype())<SUB>21</SUB>> ]
"68719476754" [label = <(IDENTIFIER,t,t.dtype())<SUB>21</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "146028888068"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "146028888065"  [ label = "AST: "] 
  "47244640257" -> "30064771076"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "30064771084"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "30064771080"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476738"  [ label = "AST: "] 
  "30064771079" -> "68719476737"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "30064771083"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476739"  [ label = "AST: "] 
  "30064771083" -> "90194313216"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "30064771087"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "68719476741"  [ label = "AST: "] 
  "30064771086" -> "68719476740"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "30064771090"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476742"  [ label = "AST: "] 
  "30064771090" -> "90194313217"  [ label = "AST: "] 
  "25769803779" -> "30064771091"  [ label = "AST: "] 
  "25769803779" -> "146028888064"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "68719476743"  [ label = "AST: "] 
  "146028888064" -> "30064771094"  [ label = "AST: "] 
  "146028888065" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "90194313218"  [ label = "AST: "] 
  "47244640258" -> "30064771096"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "68719476745"  [ label = "AST: "] 
  "30064771097" -> "68719476744"  [ label = "AST: "] 
  "25769803780" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "30064771101"  [ label = "AST: "] 
  "30064771098" -> "68719476748"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476746"  [ label = "AST: "] 
  "30064771101" -> "68719476747"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "47244640260"  [ label = "AST: "] 
  "47244640260" -> "30064771102"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "68719476750"  [ label = "AST: "] 
  "30064771103" -> "68719476749"  [ label = "AST: "] 
  "25769803782" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "30064771107"  [ label = "AST: "] 
  "30064771104" -> "68719476753"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "68719476751"  [ label = "AST: "] 
  "30064771107" -> "68719476752"  [ label = "AST: "] 
  "146028888068" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "90194313219"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "68719476754"  [ label = "AST: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771079"  [ label = "CFG: "] 
  "30064771072" -> "30064771097"  [ label = "CFG: "] 
  "30064771096" -> "30064771100"  [ label = "CFG: "] 
  "30064771096" -> "30064771103"  [ label = "CFG: "] 
  "30064771108" -> "146028888068"  [ label = "CFG: "] 
  "30064771073" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "30064771072"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771076" -> "30064771092"  [ label = "CFG: "] 
  "30064771076" -> "30064771095"  [ label = "CFG: "] 
  "30064771095" -> "146028888065"  [ label = "CFG: "] 
  "30064771098" -> "146028888066"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771077" -> "30064771086"  [ label = "CFG: "] 
  "30064771084" -> "30064771076"  [ label = "CFG: "] 
  "30064771091" -> "30064771094"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771099" -> "30064771101"  [ label = "CFG: "] 
  "30064771101" -> "30064771098"  [ label = "CFG: "] 
  "30064771102" -> "30064771106"  [ label = "CFG: "] 
  "30064771102" -> "30064771110"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771078" -> "30064771082"  [ label = "CFG: "] 
  "30064771080" -> "30064771077"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771085" -> "30064771089"  [ label = "CFG: "] 
  "30064771087" -> "30064771084"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771093" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "146028888064"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771083"  [ label = "CFG: "] 
  "30064771083" -> "30064771080"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771087"  [ label = "CFG: "] 
  "30064771104" -> "146028888067"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771105" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "30064771104"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: out"] 
  "30064771072" -> "128849018880"  [ label = "DDG: t.shape()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: {}"] 
  "30064771072" -> "128849018880"  [ label = "DDG: TensorShape({})"] 
  "30064771072" -> "128849018880"  [ label = "DDG: t.shape() == TensorShape({})"] 
  "30064771079" -> "128849018880"  [ label = "DDG: t"] 
  "30064771078" -> "128849018880"  [ label = "DDG: t.dtype()"] 
  "30064771078" -> "128849018880"  [ label = "DDG: DT_INT32"] 
  "30064771077" -> "128849018880"  [ label = "DDG: t.dtype() == DT_INT32"] 
  "30064771082" -> "128849018880"  [ label = "DDG: t"] 
  "30064771081" -> "128849018880"  [ label = "DDG: t.scalar&lt;int32&gt;()"] 
  "30064771080" -> "128849018880"  [ label = "DDG: t.scalar&lt;int32&gt;()()"] 
  "30064771080" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771077" -> "128849018880"  [ label = "DDG: t.scalar&lt;int32&gt;()() == -1"] 
  "30064771076" -> "128849018880"  [ label = "DDG: t.dtype() == DT_INT32 &amp;&amp; t.scalar&lt;int32&gt;()() == -1"] 
  "30064771086" -> "128849018880"  [ label = "DDG: t"] 
  "30064771085" -> "128849018880"  [ label = "DDG: t.dtype()"] 
  "30064771085" -> "128849018880"  [ label = "DDG: DT_INT64"] 
  "30064771084" -> "128849018880"  [ label = "DDG: t.dtype() == DT_INT64"] 
  "30064771089" -> "128849018880"  [ label = "DDG: t"] 
  "30064771088" -> "128849018880"  [ label = "DDG: t.scalar&lt;int64_t&gt;()"] 
  "30064771087" -> "128849018880"  [ label = "DDG: t.scalar&lt;int64_t&gt;()()"] 
  "30064771087" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771084" -> "128849018880"  [ label = "DDG: t.scalar&lt;int64_t&gt;()() == -1"] 
  "30064771076" -> "128849018880"  [ label = "DDG: t.dtype() == DT_INT64 &amp;&amp; t.scalar&lt;int64_t&gt;()() == -1"] 
  "30064771076" -> "128849018880"  [ label = "DDG: (t.dtype() == DT_INT32 &amp;&amp; t.scalar&lt;int32&gt;()() == -1) ||
        (t.dtype() == DT_INT64 &amp;&amp; t.scalar&lt;int64_t&gt;()() == -1)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: *out"] 
  "30064771091" -> "128849018880"  [ label = "DDG: PartialTensorShape()"] 
  "30064771091" -> "128849018880"  [ label = "DDG: *out = PartialTensorShape()"] 
  "30064771094" -> "128849018880"  [ label = "DDG: OkStatus()"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771108" -> "146028888068"  [ label = "DDG: errors::InvalidArgument(
      &quot;Expected an int32 or int64 shape tensor; found &quot;,
      DataTypeString(t.dtype()))"] 
  "30064771073" -> "30064771072"  [ label = "DDG: t"] 
  "30064771074" -> "30064771072"  [ label = "DDG: {}"] 
  "30064771095" -> "146028888065"  [ label = "DDG: errors::InvalidArgument(
        &quot;The only valid scalar shape tensor is the fully unknown shape &quot;
        &quot;specified as -1.&quot;)"] 
  "30064771097" -> "30064771096"  [ label = "DDG: t"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771098" -> "146028888066"  [ label = "DDG: PartialTensorShape::MakePartialShape(t.vec&lt;int32&gt;().data(),
                                                t.NumElements(), out)"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771109" -> "30064771108"  [ label = "DDG: t.dtype()"] 
  "115964116992" -> "30064771073"  [ label = "DDG: t"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771073" -> "30064771097"  [ label = "DDG: t"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771110" -> "30064771109"  [ label = "DDG: t"] 
  "30064771077" -> "30064771076"  [ label = "DDG: t.dtype() == DT_INT32"] 
  "30064771077" -> "30064771076"  [ label = "DDG: t.scalar&lt;int32&gt;()() == -1"] 
  "30064771084" -> "30064771076"  [ label = "DDG: t.dtype() == DT_INT64"] 
  "30064771084" -> "30064771076"  [ label = "DDG: t.scalar&lt;int64_t&gt;()() == -1"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771094" -> "146028888064"  [ label = "DDG: OkStatus()"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771099" -> "30064771098"  [ label = "DDG: t.vec&lt;int32&gt;()"] 
  "30064771101" -> "30064771098"  [ label = "DDG: t"] 
  "115964116993" -> "30064771098"  [ label = "DDG: out"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771103" -> "30064771110"  [ label = "DDG: t"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: t.dtype()"] 
  "30064771078" -> "30064771077"  [ label = "DDG: DT_INT32"] 
  "30064771080" -> "30064771077"  [ label = "DDG: t.scalar&lt;int32&gt;()()"] 
  "30064771080" -> "30064771077"  [ label = "DDG: -1"] 
  "30064771085" -> "30064771084"  [ label = "DDG: t.dtype()"] 
  "30064771085" -> "30064771084"  [ label = "DDG: DT_INT64"] 
  "30064771087" -> "30064771084"  [ label = "DDG: t.scalar&lt;int64_t&gt;()()"] 
  "30064771087" -> "30064771084"  [ label = "DDG: -1"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771100" -> "30064771099"  [ label = "DDG: t"] 
  "30064771100" -> "30064771101"  [ label = "DDG: t"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771103" -> "30064771102"  [ label = "DDG: t"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771104" -> "146028888067"  [ label = "DDG: PartialTensorShape::MakePartialShape(t.vec&lt;int64_t&gt;().data(),
                                                t.NumElements(), out)"] 
  "30064771079" -> "30064771078"  [ label = "DDG: t"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: t.scalar&lt;int32&gt;()"] 
  "30064771083" -> "30064771080"  [ label = "DDG: 1"] 
  "30064771086" -> "30064771085"  [ label = "DDG: t"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: t.scalar&lt;int64_t&gt;()"] 
  "30064771090" -> "30064771087"  [ label = "DDG: 1"] 
  "30064771097" -> "30064771100"  [ label = "DDG: t"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771097" -> "30064771103"  [ label = "DDG: t"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771073" -> "30064771079"  [ label = "DDG: t"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: t"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771079" -> "30064771086"  [ label = "DDG: t"] 
  "30064771082" -> "30064771086"  [ label = "DDG: t"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771089" -> "30064771088"  [ label = "DDG: t"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771105" -> "30064771104"  [ label = "DDG: t.vec&lt;int64_t&gt;()"] 
  "30064771107" -> "30064771104"  [ label = "DDG: t"] 
  "115964116993" -> "30064771104"  [ label = "DDG: out"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771079" -> "30064771082"  [ label = "DDG: t"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771086" -> "30064771089"  [ label = "DDG: t"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771106" -> "30064771105"  [ label = "DDG: t"] 
  "30064771106" -> "30064771107"  [ label = "DDG: t"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771103" -> "30064771106"  [ label = "DDG: t"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771072" -> "30064771097"  [ label = "CDG: "] 
  "30064771072" -> "30064771096"  [ label = "CDG: "] 
  "30064771072" -> "30064771079"  [ label = "CDG: "] 
  "30064771072" -> "30064771078"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771096" -> "30064771103"  [ label = "CDG: "] 
  "30064771096" -> "30064771102"  [ label = "CDG: "] 
  "30064771096" -> "30064771101"  [ label = "CDG: "] 
  "30064771096" -> "30064771100"  [ label = "CDG: "] 
  "30064771096" -> "30064771099"  [ label = "CDG: "] 
  "30064771096" -> "30064771098"  [ label = "CDG: "] 
  "30064771096" -> "146028888066"  [ label = "CDG: "] 
  "30064771076" -> "30064771095"  [ label = "CDG: "] 
  "30064771076" -> "30064771094"  [ label = "CDG: "] 
  "30064771076" -> "30064771093"  [ label = "CDG: "] 
  "30064771076" -> "30064771092"  [ label = "CDG: "] 
  "30064771076" -> "30064771091"  [ label = "CDG: "] 
  "30064771076" -> "146028888064"  [ label = "CDG: "] 
  "30064771076" -> "146028888065"  [ label = "CDG: "] 
  "30064771077" -> "30064771086"  [ label = "CDG: "] 
  "30064771077" -> "30064771085"  [ label = "CDG: "] 
  "30064771077" -> "30064771084"  [ label = "CDG: "] 
  "30064771102" -> "30064771107"  [ label = "CDG: "] 
  "30064771102" -> "30064771106"  [ label = "CDG: "] 
  "30064771102" -> "30064771105"  [ label = "CDG: "] 
  "30064771102" -> "30064771104"  [ label = "CDG: "] 
  "30064771102" -> "30064771110"  [ label = "CDG: "] 
  "30064771102" -> "30064771109"  [ label = "CDG: "] 
  "30064771102" -> "30064771108"  [ label = "CDG: "] 
  "30064771102" -> "146028888067"  [ label = "CDG: "] 
  "30064771102" -> "146028888068"  [ label = "CDG: "] 
  "30064771078" -> "30064771083"  [ label = "CDG: "] 
  "30064771078" -> "30064771082"  [ label = "CDG: "] 
  "30064771078" -> "30064771081"  [ label = "CDG: "] 
  "30064771078" -> "30064771080"  [ label = "CDG: "] 
  "30064771085" -> "30064771090"  [ label = "CDG: "] 
  "30064771085" -> "30064771089"  [ label = "CDG: "] 
  "30064771085" -> "30064771088"  [ label = "CDG: "] 
  "30064771085" -> "30064771087"  [ label = "CDG: "] 
}
"""
)
