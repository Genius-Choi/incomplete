[33mval[0m [36mres2004[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "B44Compressor" {  
"111669149697" [label = <(METHOD,B44Compressor)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const Header &amp;hdr)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,size_t maxScanLineSize)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,size_t numScanLines)<SUB>4</SUB>> ]
"115964116995" [label = <(PARAM,bool optFlatFields)<SUB>5</SUB>> ]
"25769803777" [label = <(BLOCK,{
    // TODO: Remove this when we can change t...,{
    // TODO: Remove this when we can change t...)<SUB>17</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.cast,(void)_maxScanLineSize)<SUB>19</SUB>> ]
"184683593728" [label = <(UNKNOWN,void,void)<SUB>19</SUB>> ]
"68719476736" [label = <(IDENTIFIER,_maxScanLineSize,(void)_maxScanLineSize)<SUB>19</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,_tmpBuffer = new unsigned short
        [checkA...)<SUB>27</SUB>> ]
"68719476737" [label = <(IDENTIFIER,_tmpBuffer,_tmpBuffer = new unsigned short
        [checkA...)<SUB>27</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.new,new unsigned short
        [checkArraySize (uiM...)<SUB>27</SUB>> ]
"68719476738" [label = <(IDENTIFIER,unsigned short,new unsigned short
        [checkArraySize (uiM...)<SUB>27</SUB>> ]
"94489280512" [label = <(LOCAL,const ChannelList&amp; channels: ChannelList&amp;)<SUB>31</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,&amp;channels = header().channels())<SUB>31</SUB>> ]
"68719476739" [label = <(IDENTIFIER,channels,&amp;channels = header().channels())<SUB>31</SUB>> ]
"30064771076" [label = <(channels,header().channels())<SUB>31</SUB>> ]
"30064771077" [label = <(header,header())<SUB>31</SUB>> ]
"94489280513" [label = <(LOCAL,int numHalfChans: int)<SUB>32</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,numHalfChans = 0)<SUB>32</SUB>> ]
"68719476740" [label = <(IDENTIFIER,numHalfChans,numHalfChans = 0)<SUB>32</SUB>> ]
"90194313216" [label = <(LITERAL,0,numHalfChans = 0)<SUB>32</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (ChannelList::ConstIterator c = channels.begin();c != channels.end();++c))<SUB>34</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>> ]
"94489280514" [label = <(LOCAL,ChannelList.ConstIterator c: ChannelList.ConstIterator)<SUB>34</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,c = channels.begin())<SUB>34</SUB>> ]
"68719476741" [label = <(IDENTIFIER,c,c = channels.begin())<SUB>34</SUB>> ]
"30064771080" [label = <(begin,channels.begin())<SUB>34</SUB>> ]
"68719476742" [label = <(IDENTIFIER,channels,channels.begin())<SUB>34</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.notEquals,c != channels.end())<SUB>35</SUB>> ]
"68719476743" [label = <(IDENTIFIER,c,c != channels.end())<SUB>35</SUB>> ]
"30064771082" [label = <(end,channels.end())<SUB>35</SUB>> ]
"68719476744" [label = <(IDENTIFIER,channels,channels.end())<SUB>35</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.preIncrement,++c)<SUB>36</SUB>> ]
"68719476745" [label = <(IDENTIFIER,c,++c)<SUB>36</SUB>> ]
"25769803779" [label = <(BLOCK,{
	assert (pixelTypeSize (c.channel().type) % p...,{
	assert (pixelTypeSize (c.channel().type) % p...)<SUB>37</SUB>> ]
"30064771084" [label = <(assert,assert (pixelTypeSize (c.channel().type) % pixe...)<SUB>38</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.equals,pixelTypeSize (c.channel().type) % pixelTypeSiz...)<SUB>38</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.modulo,pixelTypeSize (c.channel().type) % pixelTypeSiz...)<SUB>38</SUB>> ]
"30064771087" [label = <(pixelTypeSize,pixelTypeSize (c.channel().type))<SUB>38</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,c.channel().type)<SUB>38</SUB>> ]
"30064771089" [label = <(channel,c.channel())<SUB>38</SUB>> ]
"68719476746" [label = <(IDENTIFIER,c,c.channel())<SUB>38</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,type,type)<SUB>38</SUB>> ]
"30064771090" [label = <(pixelTypeSize,pixelTypeSize (HALF))<SUB>38</SUB>> ]
"68719476747" [label = <(IDENTIFIER,HALF,pixelTypeSize (HALF))<SUB>38</SUB>> ]
"90194313217" [label = <(LITERAL,0,pixelTypeSize (c.channel().type) % pixelTypeSiz...)<SUB>38</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.preIncrement,++_numChans)<SUB>39</SUB>> ]
"68719476748" [label = <(IDENTIFIER,_numChans,++_numChans)<SUB>39</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (c.channel().type == HALF))<SUB>41</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.equals,c.channel().type == HALF)<SUB>41</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.fieldAccess,c.channel().type)<SUB>41</SUB>> ]
"30064771094" [label = <(channel,c.channel())<SUB>41</SUB>> ]
"68719476749" [label = <(IDENTIFIER,c,c.channel())<SUB>41</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,type,type)<SUB>41</SUB>> ]
"68719476750" [label = <(IDENTIFIER,HALF,c.channel().type == HALF)<SUB>41</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.preIncrement,++numHalfChans)<SUB>42</SUB>> ]
"68719476751" [label = <(IDENTIFIER,numHalfChans,++numHalfChans)<SUB>42</SUB>> ]
"94489280515" [label = <(LOCAL,size_t padding: size_t)<SUB>49</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,padding = 12 * numHalfChans * (numScanLines + 3...)<SUB>49</SUB>> ]
"68719476752" [label = <(IDENTIFIER,padding,padding = 12 * numHalfChans * (numScanLines + 3...)<SUB>49</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.division,12 * numHalfChans * (numScanLines + 3) / 4)<SUB>49</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.multiplication,12 * numHalfChans * (numScanLines + 3))<SUB>49</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.multiplication,12 * numHalfChans)<SUB>49</SUB>> ]
"90194313218" [label = <(LITERAL,12,12 * numHalfChans)<SUB>49</SUB>> ]
"68719476753" [label = <(IDENTIFIER,numHalfChans,12 * numHalfChans)<SUB>49</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.addition,numScanLines + 3)<SUB>49</SUB>> ]
"68719476754" [label = <(IDENTIFIER,numScanLines,numScanLines + 3)<SUB>49</SUB>> ]
"90194313219" [label = <(LITERAL,3,numScanLines + 3)<SUB>49</SUB>> ]
"90194313220" [label = <(LITERAL,4,12 * numHalfChans * (numScanLines + 3) / 4)<SUB>49</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.assignment,_outBuffer = new char
        [uiAdd (uiMult (m...)<SUB>51</SUB>> ]
"68719476755" [label = <(IDENTIFIER,_outBuffer,_outBuffer = new char
        [uiAdd (uiMult (m...)<SUB>51</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.new,new char
        [uiAdd (uiMult (maxScanLineSiz...)<SUB>51</SUB>> ]
"68719476756" [label = <(IDENTIFIER,char,new char
        [uiAdd (uiMult (maxScanLineSiz...)<SUB>51</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,_channelData = new ChannelData[_numChans])<SUB>54</SUB>> ]
"68719476757" [label = <(IDENTIFIER,_channelData,_channelData = new ChannelData[_numChans])<SUB>54</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.new,new ChannelData[_numChans])<SUB>54</SUB>> ]
"68719476758" [label = <(IDENTIFIER,ChannelData,new ChannelData[_numChans])<SUB>54</SUB>> ]
"94489280516" [label = <(LOCAL,int i: int)<SUB>56</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>56</SUB>> ]
"68719476759" [label = <(IDENTIFIER,i,i = 0)<SUB>56</SUB>> ]
"90194313221" [label = <(LITERAL,0,i = 0)<SUB>56</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,FOR,for (ChannelList::ConstIterator c = channels.begin();c != channels.end();++c, ++i))<SUB>58</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>> ]
"94489280517" [label = <(LOCAL,ChannelList.ConstIterator c: ChannelList.ConstIterator)<SUB>58</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.assignment,c = channels.begin())<SUB>58</SUB>> ]
"68719476760" [label = <(IDENTIFIER,c,c = channels.begin())<SUB>58</SUB>> ]
"30064771107" [label = <(begin,channels.begin())<SUB>58</SUB>> ]
"68719476761" [label = <(IDENTIFIER,channels,channels.begin())<SUB>58</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.notEquals,c != channels.end())<SUB>59</SUB>> ]
"68719476762" [label = <(IDENTIFIER,c,c != channels.end())<SUB>59</SUB>> ]
"30064771109" [label = <(end,channels.end())<SUB>59</SUB>> ]
"68719476763" [label = <(IDENTIFIER,channels,channels.end())<SUB>59</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.expressionList,++c, ++i)<SUB>60</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.preIncrement,++c)<SUB>60</SUB>> ]
"68719476764" [label = <(IDENTIFIER,c,++c)<SUB>60</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>60</SUB>> ]
"68719476765" [label = <(IDENTIFIER,i,++i)<SUB>60</SUB>> ]
"25769803782" [label = <(BLOCK,{
	_channelData[i].ys = c.channel().ySampling;
...,{
	_channelData[i].ys = c.channel().ySampling;
...)<SUB>61</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.assignment,_channelData[i].ys = c.channel().ySampling)<SUB>62</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.fieldAccess,_channelData[i].ys)<SUB>62</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.indirectIndexAccess,_channelData[i])<SUB>62</SUB>> ]
"68719476766" [label = <(IDENTIFIER,_channelData,_channelData[i].ys = c.channel().ySampling)<SUB>62</SUB>> ]
"68719476767" [label = <(IDENTIFIER,i,_channelData[i].ys = c.channel().ySampling)<SUB>62</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,ys,ys)<SUB>62</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.fieldAccess,c.channel().ySampling)<SUB>62</SUB>> ]
"30064771117" [label = <(channel,c.channel())<SUB>62</SUB>> ]
"68719476768" [label = <(IDENTIFIER,c,c.channel())<SUB>62</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,ySampling,ySampling)<SUB>62</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.assignment,_channelData[i].type = c.channel().type)<SUB>63</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.fieldAccess,_channelData[i].type)<SUB>63</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.indirectIndexAccess,_channelData[i])<SUB>63</SUB>> ]
"68719476769" [label = <(IDENTIFIER,_channelData,_channelData[i].type = c.channel().type)<SUB>63</SUB>> ]
"68719476770" [label = <(IDENTIFIER,i,_channelData[i].type = c.channel().type)<SUB>63</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,type,type)<SUB>63</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.fieldAccess,c.channel().type)<SUB>63</SUB>> ]
"30064771122" [label = <(channel,c.channel())<SUB>63</SUB>> ]
"68719476771" [label = <(IDENTIFIER,c,c.channel())<SUB>63</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,type,type)<SUB>63</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.assignment,_channelData[i].pLinear = c.channel().pLinear)<SUB>64</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.fieldAccess,_channelData[i].pLinear)<SUB>64</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.indirectIndexAccess,_channelData[i])<SUB>64</SUB>> ]
"68719476772" [label = <(IDENTIFIER,_channelData,_channelData[i].pLinear = c.channel().pLinear)<SUB>64</SUB>> ]
"68719476773" [label = <(IDENTIFIER,i,_channelData[i].pLinear = c.channel().pLinear)<SUB>64</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,pLinear,pLinear)<SUB>64</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.fieldAccess,c.channel().pLinear)<SUB>64</SUB>> ]
"30064771127" [label = <(channel,c.channel())<SUB>64</SUB>> ]
"68719476774" [label = <(IDENTIFIER,c,c.channel())<SUB>64</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,pLinear,pLinear)<SUB>64</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.assignment,_channelData[i].size =
	    pixelTypeSize (c.ch...)<SUB>65</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.fieldAccess,_channelData[i].size)<SUB>65</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.indirectIndexAccess,_channelData[i])<SUB>65</SUB>> ]
"68719476775" [label = <(IDENTIFIER,_channelData,_channelData[i].size =
	    pixelTypeSize (c.ch...)<SUB>65</SUB>> ]
"68719476776" [label = <(IDENTIFIER,i,_channelData[i].size =
	    pixelTypeSize (c.ch...)<SUB>65</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,size,size)<SUB>65</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.division,pixelTypeSize (c.channel().type) / pixelTypeSiz...)<SUB>66</SUB>> ]
"30064771132" [label = <(pixelTypeSize,pixelTypeSize (c.channel().type))<SUB>66</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.fieldAccess,c.channel().type)<SUB>66</SUB>> ]
"30064771134" [label = <(channel,c.channel())<SUB>66</SUB>> ]
"68719476777" [label = <(IDENTIFIER,c,c.channel())<SUB>66</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,type,type)<SUB>66</SUB>> ]
"30064771135" [label = <(pixelTypeSize,pixelTypeSize (HALF))<SUB>66</SUB>> ]
"68719476778" [label = <(IDENTIFIER,HALF,pixelTypeSize (HALF))<SUB>66</SUB>> ]
"94489280518" [label = <(LOCAL,const Box2i&amp; dataWindow: Box2i&amp;)<SUB>69</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.assignment,&amp;dataWindow = hdr.dataWindow())<SUB>69</SUB>> ]
"68719476779" [label = <(IDENTIFIER,dataWindow,&amp;dataWindow = hdr.dataWindow())<SUB>69</SUB>> ]
"30064771137" [label = <(dataWindow,hdr.dataWindow())<SUB>69</SUB>> ]
"68719476780" [label = <(IDENTIFIER,hdr,hdr.dataWindow())<SUB>69</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.assignment,_minX = dataWindow.min.x)<SUB>71</SUB>> ]
"68719476781" [label = <(IDENTIFIER,_minX,_minX = dataWindow.min.x)<SUB>71</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.fieldAccess,dataWindow.min.x)<SUB>71</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.fieldAccess,dataWindow.min)<SUB>71</SUB>> ]
"68719476782" [label = <(IDENTIFIER,dataWindow,_minX = dataWindow.min.x)<SUB>71</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,min,min)<SUB>71</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,x,x)<SUB>71</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.assignment,_maxX = dataWindow.max.x)<SUB>72</SUB>> ]
"68719476783" [label = <(IDENTIFIER,_maxX,_maxX = dataWindow.max.x)<SUB>72</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.fieldAccess,dataWindow.max.x)<SUB>72</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.fieldAccess,dataWindow.max)<SUB>72</SUB>> ]
"68719476784" [label = <(IDENTIFIER,dataWindow,_maxX = dataWindow.max.x)<SUB>72</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,max,max)<SUB>72</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,x,x)<SUB>72</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.assignment,_maxY = dataWindow.max.y)<SUB>73</SUB>> ]
"68719476785" [label = <(IDENTIFIER,_maxY,_maxY = dataWindow.max.y)<SUB>73</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.fieldAccess,dataWindow.max.y)<SUB>73</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.fieldAccess,dataWindow.max)<SUB>73</SUB>> ]
"68719476786" [label = <(IDENTIFIER,dataWindow,_maxY = dataWindow.max.y)<SUB>73</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,max,max)<SUB>73</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,y,y)<SUB>73</SUB>> ]
"30064771147" [label = <(assert,assert (sizeof (unsigned short) == pixelTypeSiz...)<SUB>80</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.equals,sizeof (unsigned short) == pixelTypeSize (HALF))<SUB>80</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.sizeOf,sizeof (unsigned short))<SUB>80</SUB>> ]
"68719476787" [label = <(IDENTIFIER,unsigned short,sizeof (unsigned short))<SUB>80</SUB>> ]
"30064771150" [label = <(pixelTypeSize,pixelTypeSize (HALF))<SUB>80</SUB>> ]
"68719476788" [label = <(IDENTIFIER,HALF,pixelTypeSize (HALF))<SUB>80</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (_numChans == numHalfChans))<SUB>82</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.equals,_numChans == numHalfChans)<SUB>82</SUB>> ]
"68719476789" [label = <(IDENTIFIER,_numChans,_numChans == numHalfChans)<SUB>82</SUB>> ]
"68719476790" [label = <(IDENTIFIER,numHalfChans,_numChans == numHalfChans)<SUB>82</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>83</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.assignment,_format = NATIVE)<SUB>83</SUB>> ]
"68719476791" [label = <(IDENTIFIER,_format,_format = NATIVE)<SUB>83</SUB>> ]
"68719476792" [label = <(IDENTIFIER,NATIVE,_format = NATIVE)<SUB>83</SUB>> ]
"133143986176" [label = <(MODIFIER,CONSTRUCTOR)> ]
"133143986177" [label = <(MODIFIER,PUBLIC)> ]
"128849018880" [label = <(METHOD_RETURN,B44Compressor.B44Compressor:&lt;unresolvedSignature&gt;)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "133143986177"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "30064771101"  [ label = "AST: "] 
  "25769803777" -> "30064771103"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771105"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771136"  [ label = "AST: "] 
  "25769803777" -> "30064771138"  [ label = "AST: "] 
  "25769803777" -> "30064771141"  [ label = "AST: "] 
  "25769803777" -> "30064771144"  [ label = "AST: "] 
  "25769803777" -> "30064771147"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "30064771072" -> "184683593728"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "30064771081"  [ label = "AST: "] 
  "47244640256" -> "30064771083"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "25769803778" -> "94489280514"  [ label = "AST: "] 
  "25769803778" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "25769803779" -> "30064771084"  [ label = "AST: "] 
  "25769803779" -> "30064771091"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "90194313217"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "30064771090"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "55834574848"  [ label = "AST: "] 
  "30064771089" -> "68719476746"  [ label = "AST: "] 
  "30064771090" -> "68719476747"  [ label = "AST: "] 
  "30064771091" -> "68719476748"  [ label = "AST: "] 
  "47244640257" -> "30064771092"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "68719476750"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "55834574849"  [ label = "AST: "] 
  "30064771094" -> "68719476749"  [ label = "AST: "] 
  "25769803780" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476751"  [ label = "AST: "] 
  "30064771096" -> "68719476752"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "90194313220"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "90194313218"  [ label = "AST: "] 
  "30064771099" -> "68719476753"  [ label = "AST: "] 
  "30064771100" -> "68719476754"  [ label = "AST: "] 
  "30064771100" -> "90194313219"  [ label = "AST: "] 
  "30064771101" -> "68719476755"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "68719476756"  [ label = "AST: "] 
  "30064771103" -> "68719476757"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476758"  [ label = "AST: "] 
  "30064771105" -> "68719476759"  [ label = "AST: "] 
  "30064771105" -> "90194313221"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "47244640258" -> "30064771108"  [ label = "AST: "] 
  "47244640258" -> "30064771110"  [ label = "AST: "] 
  "47244640258" -> "25769803782"  [ label = "AST: "] 
  "25769803781" -> "94489280517"  [ label = "AST: "] 
  "25769803781" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "68719476760"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "68719476761"  [ label = "AST: "] 
  "30064771108" -> "68719476762"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "68719476763"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771110" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "68719476764"  [ label = "AST: "] 
  "30064771112" -> "68719476765"  [ label = "AST: "] 
  "25769803782" -> "30064771113"  [ label = "AST: "] 
  "25769803782" -> "30064771118"  [ label = "AST: "] 
  "25769803782" -> "30064771123"  [ label = "AST: "] 
  "25769803782" -> "30064771128"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771113" -> "30064771116"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771114" -> "55834574850"  [ label = "AST: "] 
  "30064771115" -> "68719476766"  [ label = "AST: "] 
  "30064771115" -> "68719476767"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771116" -> "55834574851"  [ label = "AST: "] 
  "30064771117" -> "68719476768"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771118" -> "30064771121"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771119" -> "55834574852"  [ label = "AST: "] 
  "30064771120" -> "68719476769"  [ label = "AST: "] 
  "30064771120" -> "68719476770"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "55834574853"  [ label = "AST: "] 
  "30064771122" -> "68719476771"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771123" -> "30064771126"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "55834574854"  [ label = "AST: "] 
  "30064771125" -> "68719476772"  [ label = "AST: "] 
  "30064771125" -> "68719476773"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771126" -> "55834574855"  [ label = "AST: "] 
  "30064771127" -> "68719476774"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771128" -> "30064771131"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "55834574856"  [ label = "AST: "] 
  "30064771130" -> "68719476775"  [ label = "AST: "] 
  "30064771130" -> "68719476776"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771131" -> "30064771135"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771133" -> "30064771134"  [ label = "AST: "] 
  "30064771133" -> "55834574857"  [ label = "AST: "] 
  "30064771134" -> "68719476777"  [ label = "AST: "] 
  "30064771135" -> "68719476778"  [ label = "AST: "] 
  "30064771136" -> "68719476779"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771137" -> "68719476780"  [ label = "AST: "] 
  "30064771138" -> "68719476781"  [ label = "AST: "] 
  "30064771138" -> "30064771139"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771139" -> "55834574859"  [ label = "AST: "] 
  "30064771140" -> "68719476782"  [ label = "AST: "] 
  "30064771140" -> "55834574858"  [ label = "AST: "] 
  "30064771141" -> "68719476783"  [ label = "AST: "] 
  "30064771141" -> "30064771142"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771142" -> "55834574861"  [ label = "AST: "] 
  "30064771143" -> "68719476784"  [ label = "AST: "] 
  "30064771143" -> "55834574860"  [ label = "AST: "] 
  "30064771144" -> "68719476785"  [ label = "AST: "] 
  "30064771144" -> "30064771145"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771145" -> "55834574863"  [ label = "AST: "] 
  "30064771146" -> "68719476786"  [ label = "AST: "] 
  "30064771146" -> "55834574862"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771148" -> "30064771149"  [ label = "AST: "] 
  "30064771148" -> "30064771150"  [ label = "AST: "] 
  "30064771149" -> "68719476787"  [ label = "AST: "] 
  "30064771150" -> "68719476788"  [ label = "AST: "] 
  "47244640259" -> "30064771151"  [ label = "AST: "] 
  "47244640259" -> "25769803783"  [ label = "AST: "] 
  "30064771151" -> "68719476789"  [ label = "AST: "] 
  "30064771151" -> "68719476790"  [ label = "AST: "] 
  "25769803783" -> "30064771152"  [ label = "AST: "] 
  "30064771152" -> "68719476791"  [ label = "AST: "] 
  "30064771152" -> "68719476792"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771073" -> "30064771077"  [ label = "CFG: "] 
  "30064771075" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771096" -> "30064771102"  [ label = "CFG: "] 
  "30064771101" -> "30064771104"  [ label = "CFG: "] 
  "30064771103" -> "30064771105"  [ label = "CFG: "] 
  "30064771105" -> "30064771107"  [ label = "CFG: "] 
  "30064771136" -> "55834574858"  [ label = "CFG: "] 
  "30064771138" -> "55834574860"  [ label = "CFG: "] 
  "30064771141" -> "55834574862"  [ label = "CFG: "] 
  "30064771144" -> "30064771149"  [ label = "CFG: "] 
  "30064771147" -> "30064771151"  [ label = "CFG: "] 
  "184683593728" -> "30064771072"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771081" -> "30064771089"  [ label = "CFG: "] 
  "30064771081" -> "30064771099"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771108" -> "30064771115"  [ label = "CFG: "] 
  "30064771108" -> "30064771137"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "30064771139" -> "30064771138"  [ label = "CFG: "] 
  "30064771142" -> "30064771141"  [ label = "CFG: "] 
  "30064771145" -> "30064771144"  [ label = "CFG: "] 
  "30064771148" -> "30064771147"  [ label = "CFG: "] 
  "30064771151" -> "128849018880"  [ label = "CFG: "] 
  "30064771151" -> "30064771152"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771091"  [ label = "CFG: "] 
  "30064771091" -> "30064771094"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771106" -> "30064771109"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "30064771111" -> "30064771112"  [ label = "CFG: "] 
  "30064771112" -> "30064771110"  [ label = "CFG: "] 
  "30064771113" -> "30064771120"  [ label = "CFG: "] 
  "30064771118" -> "30064771125"  [ label = "CFG: "] 
  "30064771123" -> "30064771130"  [ label = "CFG: "] 
  "30064771128" -> "30064771111"  [ label = "CFG: "] 
  "30064771140" -> "55834574859"  [ label = "CFG: "] 
  "55834574859" -> "30064771139"  [ label = "CFG: "] 
  "30064771143" -> "55834574861"  [ label = "CFG: "] 
  "55834574861" -> "30064771142"  [ label = "CFG: "] 
  "30064771146" -> "55834574863"  [ label = "CFG: "] 
  "55834574863" -> "30064771145"  [ label = "CFG: "] 
  "30064771149" -> "30064771150"  [ label = "CFG: "] 
  "30064771150" -> "30064771148"  [ label = "CFG: "] 
  "30064771152" -> "128849018880"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771092" -> "30064771095"  [ label = "CFG: "] 
  "30064771092" -> "30064771083"  [ label = "CFG: "] 
  "30064771099" -> "30064771100"  [ label = "CFG: "] 
  "30064771100" -> "30064771098"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771114" -> "30064771117"  [ label = "CFG: "] 
  "30064771116" -> "30064771113"  [ label = "CFG: "] 
  "30064771119" -> "30064771122"  [ label = "CFG: "] 
  "30064771121" -> "30064771118"  [ label = "CFG: "] 
  "30064771124" -> "30064771127"  [ label = "CFG: "] 
  "30064771126" -> "30064771123"  [ label = "CFG: "] 
  "30064771129" -> "30064771134"  [ label = "CFG: "] 
  "30064771131" -> "30064771128"  [ label = "CFG: "] 
  "55834574858" -> "30064771140"  [ label = "CFG: "] 
  "55834574860" -> "30064771143"  [ label = "CFG: "] 
  "55834574862" -> "30064771146"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "30064771083"  [ label = "CFG: "] 
  "30064771115" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771114"  [ label = "CFG: "] 
  "30064771117" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771116"  [ label = "CFG: "] 
  "30064771120" -> "55834574852"  [ label = "CFG: "] 
  "55834574852" -> "30064771119"  [ label = "CFG: "] 
  "30064771122" -> "55834574853"  [ label = "CFG: "] 
  "55834574853" -> "30064771121"  [ label = "CFG: "] 
  "30064771125" -> "55834574854"  [ label = "CFG: "] 
  "55834574854" -> "30064771124"  [ label = "CFG: "] 
  "30064771127" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771126"  [ label = "CFG: "] 
  "30064771130" -> "55834574856"  [ label = "CFG: "] 
  "55834574856" -> "30064771129"  [ label = "CFG: "] 
  "30064771132" -> "30064771135"  [ label = "CFG: "] 
  "30064771135" -> "30064771131"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771086"  [ label = "CFG: "] 
  "30064771094" -> "55834574849"  [ label = "CFG: "] 
  "55834574849" -> "30064771093"  [ label = "CFG: "] 
  "30064771133" -> "30064771132"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771134" -> "55834574857"  [ label = "CFG: "] 
  "55834574857" -> "30064771133"  [ label = "CFG: "] 
  "30064771089" -> "55834574848"  [ label = "CFG: "] 
  "55834574848" -> "30064771088"  [ label = "CFG: "] 
  "111669149697" -> "184683593728"  [ label = "CFG: "] 
  "115964116993" -> "128849018880"  [ label = "DDG: maxScanLineSize"] 
  "115964116995" -> "128849018880"  [ label = "DDG: optFlatFields"] 
  "30064771072" -> "128849018880"  [ label = "DDG: (void)_maxScanLineSize"] 
  "30064771073" -> "128849018880"  [ label = "DDG: new unsigned short
        [checkArraySize (uiMult (maxScanLineSize, numScanLines),
                         sizeof (unsigned short))]"] 
  "30064771073" -> "128849018880"  [ label = "DDG: _tmpBuffer = new unsigned short
        [checkArraySize (uiMult (maxScanLineSize, numScanLines),
                         sizeof (unsigned short))]"] 
  "30064771076" -> "128849018880"  [ label = "DDG: header()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: header().channels()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: &amp;channels = header().channels()"] 
  "30064771078" -> "128849018880"  [ label = "DDG: numHalfChans = 0"] 
  "30064771096" -> "128849018880"  [ label = "DDG: padding"] 
  "30064771098" -> "128849018880"  [ label = "DDG: 12 * numHalfChans"] 
  "30064771100" -> "128849018880"  [ label = "DDG: numScanLines"] 
  "30064771098" -> "128849018880"  [ label = "DDG: numScanLines + 3"] 
  "30064771097" -> "128849018880"  [ label = "DDG: 12 * numHalfChans * (numScanLines + 3)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: 12 * numHalfChans * (numScanLines + 3) / 4"] 
  "30064771096" -> "128849018880"  [ label = "DDG: padding = 12 * numHalfChans * (numScanLines + 3) / 4"] 
  "30064771101" -> "128849018880"  [ label = "DDG: new char
        [uiAdd (uiMult (maxScanLineSize, numScanLines), padding)]"] 
  "30064771101" -> "128849018880"  [ label = "DDG: _outBuffer = new char
        [uiAdd (uiMult (maxScanLineSize, numScanLines), padding)]"] 
  "30064771103" -> "128849018880"  [ label = "DDG: _channelData"] 
  "30064771103" -> "128849018880"  [ label = "DDG: new ChannelData[_numChans]"] 
  "30064771103" -> "128849018880"  [ label = "DDG: _channelData = new ChannelData[_numChans]"] 
  "30064771105" -> "128849018880"  [ label = "DDG: i"] 
  "30064771105" -> "128849018880"  [ label = "DDG: i = 0"] 
  "30064771106" -> "128849018880"  [ label = "DDG: channels.begin()"] 
  "30064771106" -> "128849018880"  [ label = "DDG: c = channels.begin()"] 
  "30064771108" -> "128849018880"  [ label = "DDG: c"] 
  "30064771109" -> "128849018880"  [ label = "DDG: channels"] 
  "30064771108" -> "128849018880"  [ label = "DDG: channels.end()"] 
  "30064771108" -> "128849018880"  [ label = "DDG: c != channels.end()"] 
  "30064771136" -> "128849018880"  [ label = "DDG: dataWindow"] 
  "30064771137" -> "128849018880"  [ label = "DDG: hdr"] 
  "30064771136" -> "128849018880"  [ label = "DDG: hdr.dataWindow()"] 
  "30064771136" -> "128849018880"  [ label = "DDG: &amp;dataWindow = hdr.dataWindow()"] 
  "30064771138" -> "128849018880"  [ label = "DDG: dataWindow.min.x"] 
  "30064771138" -> "128849018880"  [ label = "DDG: _minX = dataWindow.min.x"] 
  "30064771141" -> "128849018880"  [ label = "DDG: dataWindow.max.x"] 
  "30064771141" -> "128849018880"  [ label = "DDG: _maxX = dataWindow.max.x"] 
  "30064771144" -> "128849018880"  [ label = "DDG: dataWindow.max.y"] 
  "30064771144" -> "128849018880"  [ label = "DDG: _maxY = dataWindow.max.y"] 
  "30064771149" -> "128849018880"  [ label = "DDG: unsigned short"] 
  "30064771150" -> "128849018880"  [ label = "DDG: HALF"] 
  "30064771148" -> "128849018880"  [ label = "DDG: pixelTypeSize (HALF)"] 
  "30064771147" -> "128849018880"  [ label = "DDG: sizeof (unsigned short) == pixelTypeSize (HALF)"] 
  "30064771147" -> "128849018880"  [ label = "DDG: assert (sizeof (unsigned short) == pixelTypeSize (HALF))"] 
  "30064771151" -> "128849018880"  [ label = "DDG: _numChans"] 
  "30064771151" -> "128849018880"  [ label = "DDG: numHalfChans"] 
  "30064771151" -> "128849018880"  [ label = "DDG: _numChans == numHalfChans"] 
  "30064771152" -> "128849018880"  [ label = "DDG: _format"] 
  "30064771152" -> "128849018880"  [ label = "DDG: _format = NATIVE"] 
  "30064771113" -> "128849018880"  [ label = "DDG: _channelData[i].ys = c.channel().ySampling"] 
  "30064771118" -> "128849018880"  [ label = "DDG: _channelData[i].type = c.channel().type"] 
  "30064771123" -> "128849018880"  [ label = "DDG: _channelData[i].pLinear = c.channel().pLinear"] 
  "30064771131" -> "128849018880"  [ label = "DDG: pixelTypeSize (c.channel().type)"] 
  "30064771128" -> "128849018880"  [ label = "DDG: pixelTypeSize (c.channel().type) / pixelTypeSize (HALF)"] 
  "30064771128" -> "128849018880"  [ label = "DDG: _channelData[i].size =
	    pixelTypeSize (c.channel().type) / pixelTypeSize (HALF)"] 
  "30064771110" -> "128849018880"  [ label = "DDG: ++c"] 
  "30064771112" -> "128849018880"  [ label = "DDG: i"] 
  "30064771110" -> "128849018880"  [ label = "DDG: ++i"] 
  "30064771110" -> "128849018880"  [ label = "DDG: ++c, ++i"] 
  "30064771086" -> "128849018880"  [ label = "DDG: pixelTypeSize (c.channel().type)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: pixelTypeSize (c.channel().type) % pixelTypeSize (HALF)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: pixelTypeSize (c.channel().type) % pixelTypeSize (HALF) == 0"] 
  "30064771084" -> "128849018880"  [ label = "DDG: assert (pixelTypeSize (c.channel().type) % pixelTypeSize (HALF) == 0)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: ++_numChans"] 
  "30064771092" -> "128849018880"  [ label = "DDG: c.channel().type == HALF"] 
  "30064771095" -> "128849018880"  [ label = "DDG: ++numHalfChans"] 
  "30064771083" -> "128849018880"  [ label = "DDG: ++c"] 
  "30064771102" -> "128849018880"  [ label = "DDG: char"] 
  "30064771144" -> "128849018880"  [ label = "DDG: _maxY"] 
  "30064771152" -> "128849018880"  [ label = "DDG: NATIVE"] 
  "30064771104" -> "128849018880"  [ label = "DDG: ChannelData"] 
  "30064771073" -> "128849018880"  [ label = "DDG: _tmpBuffer"] 
  "30064771101" -> "128849018880"  [ label = "DDG: _outBuffer"] 
  "30064771141" -> "128849018880"  [ label = "DDG: _maxX"] 
  "30064771072" -> "128849018880"  [ label = "DDG: _maxScanLineSize"] 
  "30064771138" -> "128849018880"  [ label = "DDG: _minX"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: unsigned short"] 
  "30064771076" -> "30064771075"  [ label = "DDG: header()"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771097" -> "30064771096"  [ label = "DDG: 12 * numHalfChans * (numScanLines + 3)"] 
  "30064771097" -> "30064771096"  [ label = "DDG: 4"] 
  "30064771102" -> "30064771101"  [ label = "DDG: char"] 
  "30064771104" -> "30064771103"  [ label = "DDG: ChannelData"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771137" -> "30064771136"  [ label = "DDG: hdr"] 
  "30064771148" -> "30064771147"  [ label = "DDG: pixelTypeSize (HALF)"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: channels"] 
  "30064771079" -> "30064771081"  [ label = "DDG: c"] 
  "30064771083" -> "30064771081"  [ label = "DDG: c"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: channels"] 
  "30064771094" -> "30064771083"  [ label = "DDG: c"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771098" -> "30064771097"  [ label = "DDG: 12 * numHalfChans"] 
  "30064771098" -> "30064771097"  [ label = "DDG: numScanLines + 3"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771107" -> "30064771106"  [ label = "DDG: channels"] 
  "30064771106" -> "30064771108"  [ label = "DDG: c"] 
  "30064771111" -> "30064771108"  [ label = "DDG: c"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771109" -> "30064771108"  [ label = "DDG: channels"] 
  "30064771111" -> "30064771110"  [ label = "DDG: c"] 
  "30064771112" -> "30064771110"  [ label = "DDG: i"] 
  "30064771131" -> "30064771128"  [ label = "DDG: pixelTypeSize (c.channel().type)"] 
  "30064771131" -> "30064771128"  [ label = "DDG: pixelTypeSize (HALF)"] 
  "115964116992" -> "30064771137"  [ label = "DDG: hdr"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771150" -> "30064771148"  [ label = "DDG: HALF"] 
  "30064771091" -> "30064771151"  [ label = "DDG: _numChans"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771099" -> "30064771151"  [ label = "DDG: numHalfChans"] 
  "111669149697" -> "30064771152"  [ label = "DDG: "] 
  "30064771080" -> "30064771082"  [ label = "DDG: channels"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: pixelTypeSize (c.channel().type) % pixelTypeSize (HALF)"] 
  "30064771085" -> "30064771084"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771099" -> "30064771098"  [ label = "DDG: 12"] 
  "30064771099" -> "30064771098"  [ label = "DDG: numHalfChans"] 
  "115964116994" -> "30064771098"  [ label = "DDG: numScanLines"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771107" -> "30064771109"  [ label = "DDG: channels"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771134" -> "30064771111"  [ label = "DDG: c"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771105" -> "30064771112"  [ label = "DDG: i"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771135" -> "30064771150"  [ label = "DDG: HALF"] 
  "30064771092" -> "30064771150"  [ label = "DDG: HALF"] 
  "111669149697" -> "30064771150"  [ label = "DDG: "] 
  "30064771075" -> "30064771080"  [ label = "DDG: channels"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: pixelTypeSize (c.channel().type)"] 
  "30064771086" -> "30064771085"  [ label = "DDG: pixelTypeSize (HALF)"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771090" -> "30064771092"  [ label = "DDG: HALF"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771078" -> "30064771099"  [ label = "DDG: numHalfChans"] 
  "30064771095" -> "30064771099"  [ label = "DDG: numHalfChans"] 
  "115964116994" -> "30064771100"  [ label = "DDG: numScanLines"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771082" -> "30064771107"  [ label = "DDG: channels"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771132" -> "30064771131"  [ label = "DDG: c.channel().type"] 
  "30064771135" -> "30064771131"  [ label = "DDG: HALF"] 
  "30064771087" -> "30064771086"  [ label = "DDG: c.channel().type"] 
  "30064771090" -> "30064771086"  [ label = "DDG: HALF"] 
  "30064771078" -> "30064771095"  [ label = "DDG: numHalfChans"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771108" -> "30064771117"  [ label = "DDG: c"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771117" -> "30064771122"  [ label = "DDG: c"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771122" -> "30064771127"  [ label = "DDG: c"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771092" -> "30064771135"  [ label = "DDG: HALF"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771092" -> "30064771090"  [ label = "DDG: HALF"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771089" -> "30064771094"  [ label = "DDG: c"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771127" -> "30064771134"  [ label = "DDG: c"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771081" -> "30064771089"  [ label = "DDG: c"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771081" -> "55834574848"  [ label = "CDG: "] 
  "30064771081" -> "55834574849"  [ label = "CDG: "] 
  "30064771081" -> "30064771090"  [ label = "CDG: "] 
  "30064771081" -> "30064771091"  [ label = "CDG: "] 
  "30064771081" -> "30064771088"  [ label = "CDG: "] 
  "30064771081" -> "30064771089"  [ label = "CDG: "] 
  "30064771081" -> "30064771094"  [ label = "CDG: "] 
  "30064771081" -> "30064771092"  [ label = "CDG: "] 
  "30064771081" -> "30064771093"  [ label = "CDG: "] 
  "30064771081" -> "30064771082"  [ label = "CDG: "] 
  "30064771081" -> "30064771083"  [ label = "CDG: "] 
  "30064771081" -> "30064771081"  [ label = "CDG: "] 
  "30064771081" -> "30064771086"  [ label = "CDG: "] 
  "30064771081" -> "30064771087"  [ label = "CDG: "] 
  "30064771081" -> "30064771084"  [ label = "CDG: "] 
  "30064771081" -> "30064771085"  [ label = "CDG: "] 
  "30064771108" -> "30064771122"  [ label = "CDG: "] 
  "30064771108" -> "30064771123"  [ label = "CDG: "] 
  "30064771108" -> "30064771120"  [ label = "CDG: "] 
  "30064771108" -> "30064771121"  [ label = "CDG: "] 
  "30064771108" -> "30064771126"  [ label = "CDG: "] 
  "30064771108" -> "30064771127"  [ label = "CDG: "] 
  "30064771108" -> "30064771124"  [ label = "CDG: "] 
  "30064771108" -> "30064771125"  [ label = "CDG: "] 
  "30064771108" -> "30064771114"  [ label = "CDG: "] 
  "30064771108" -> "30064771115"  [ label = "CDG: "] 
  "30064771108" -> "30064771112"  [ label = "CDG: "] 
  "30064771108" -> "30064771113"  [ label = "CDG: "] 
  "30064771108" -> "30064771118"  [ label = "CDG: "] 
  "30064771108" -> "30064771119"  [ label = "CDG: "] 
  "30064771108" -> "30064771116"  [ label = "CDG: "] 
  "30064771108" -> "30064771117"  [ label = "CDG: "] 
  "30064771108" -> "30064771110"  [ label = "CDG: "] 
  "30064771108" -> "30064771111"  [ label = "CDG: "] 
  "30064771108" -> "30064771108"  [ label = "CDG: "] 
  "30064771108" -> "30064771109"  [ label = "CDG: "] 
  "30064771108" -> "55834574856"  [ label = "CDG: "] 
  "30064771108" -> "55834574857"  [ label = "CDG: "] 
  "30064771108" -> "55834574854"  [ label = "CDG: "] 
  "30064771108" -> "55834574855"  [ label = "CDG: "] 
  "30064771108" -> "30064771130"  [ label = "CDG: "] 
  "30064771108" -> "30064771131"  [ label = "CDG: "] 
  "30064771108" -> "30064771128"  [ label = "CDG: "] 
  "30064771108" -> "30064771129"  [ label = "CDG: "] 
  "30064771108" -> "30064771134"  [ label = "CDG: "] 
  "30064771108" -> "55834574852"  [ label = "CDG: "] 
  "30064771108" -> "30064771135"  [ label = "CDG: "] 
  "30064771108" -> "55834574853"  [ label = "CDG: "] 
  "30064771108" -> "30064771132"  [ label = "CDG: "] 
  "30064771108" -> "55834574850"  [ label = "CDG: "] 
  "30064771108" -> "30064771133"  [ label = "CDG: "] 
  "30064771108" -> "55834574851"  [ label = "CDG: "] 
  "30064771151" -> "30064771152"  [ label = "CDG: "] 
  "30064771092" -> "30064771095"  [ label = "CDG: "] 
}
"""
)
