[33mval[0m [36mres1065[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "luaC_barrier_" {  
"111669149697" [label = <(METHOD,luaC_barrier_)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,lua_State *L)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,GCObject *o)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,GCObject *v)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
  global_State *g = G(L);
  lua_assert(isblac...,{
  global_State *g = G(L);
  lua_assert(isblac...)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,global_State* g: global_State*)<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,*g = G(L))<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,g,*g = G(L))<SUB>2</SUB>> ]
"30064771073" [label = <(G,G(L))<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,L,G(L))<SUB>2</SUB>> ]
"30064771074" [label = <(lua_assert,lua_assert(isblack(o) &amp;&amp; iswhite(v) &amp;&amp; !isdead(...)<SUB>3</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.logicalAnd,isblack(o) &amp;&amp; iswhite(v) &amp;&amp; !isdead(g, v) &amp;&amp; !i...)<SUB>3</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.logicalAnd,isblack(o) &amp;&amp; iswhite(v) &amp;&amp; !isdead(g, v))<SUB>3</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.logicalAnd,isblack(o) &amp;&amp; iswhite(v))<SUB>3</SUB>> ]
"30064771078" [label = <(isblack,isblack(o))<SUB>3</SUB>> ]
"68719476738" [label = <(IDENTIFIER,o,isblack(o))<SUB>3</SUB>> ]
"30064771079" [label = <(iswhite,iswhite(v))<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,v,iswhite(v))<SUB>3</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.logicalNot,!isdead(g, v))<SUB>3</SUB>> ]
"30064771081" [label = <(isdead,isdead(g, v))<SUB>3</SUB>> ]
"68719476740" [label = <(IDENTIFIER,g,isdead(g, v))<SUB>3</SUB>> ]
"68719476741" [label = <(IDENTIFIER,v,isdead(g, v))<SUB>3</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.logicalNot,!isdead(g, o))<SUB>3</SUB>> ]
"30064771083" [label = <(isdead,isdead(g, o))<SUB>3</SUB>> ]
"68719476742" [label = <(IDENTIFIER,g,isdead(g, o))<SUB>3</SUB>> ]
"68719476743" [label = <(IDENTIFIER,o,isdead(g, o))<SUB>3</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (keepinvariant(g)))<SUB>4</SUB>> ]
"30064771084" [label = <(keepinvariant,keepinvariant(g))<SUB>4</SUB>> ]
"68719476744" [label = <(IDENTIFIER,g,keepinvariant(g))<SUB>4</SUB>> ]
"25769803778" [label = <(BLOCK,{  /* must keep invariant? */
    reallymarkobj...,{  /* must keep invariant? */
    reallymarkobj...)<SUB>4</SUB>> ]
"30064771085" [label = <(reallymarkobject,reallymarkobject(g, v))<SUB>5</SUB>> ]
"68719476745" [label = <(IDENTIFIER,g,reallymarkobject(g, v))<SUB>5</SUB>> ]
"68719476746" [label = <(IDENTIFIER,v,reallymarkobject(g, v))<SUB>5</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (isold(o)))<SUB>6</SUB>> ]
"30064771086" [label = <(isold,isold(o))<SUB>6</SUB>> ]
"68719476747" [label = <(IDENTIFIER,o,isold(o))<SUB>6</SUB>> ]
"25769803779" [label = <(BLOCK,{
      lua_assert(!isold(v));  /* white object...,{
      lua_assert(!isold(v));  /* white object...)<SUB>6</SUB>> ]
"30064771087" [label = <(lua_assert,lua_assert(!isold(v)))<SUB>7</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.logicalNot,!isold(v))<SUB>7</SUB>> ]
"30064771089" [label = <(isold,isold(v))<SUB>7</SUB>> ]
"68719476748" [label = <(IDENTIFIER,v,isold(v))<SUB>7</SUB>> ]
"30064771090" [label = <(setage,setage(v, G_OLD0))<SUB>8</SUB>> ]
"68719476749" [label = <(IDENTIFIER,v,setage(v, G_OLD0))<SUB>8</SUB>> ]
"68719476750" [label = <(IDENTIFIER,G_OLD0,setage(v, G_OLD0))<SUB>8</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>11</SUB>> ]
"25769803780" [label = <(BLOCK,{  /* sweep phase */
    lua_assert(issweepphas...,{  /* sweep phase */
    lua_assert(issweepphas...)<SUB>11</SUB>> ]
"30064771091" [label = <(lua_assert,lua_assert(issweepphase(g)))<SUB>12</SUB>> ]
"30064771092" [label = <(issweepphase,issweepphase(g))<SUB>12</SUB>> ]
"68719476751" [label = <(IDENTIFIER,g,issweepphase(g))<SUB>12</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (g-&gt;gckind == KGC_INC))<SUB>13</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.equals,g-&gt;gckind == KGC_INC)<SUB>13</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.indirectFieldAccess,g-&gt;gckind)<SUB>13</SUB>> ]
"68719476752" [label = <(IDENTIFIER,g,g-&gt;gckind == KGC_INC)<SUB>13</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,gckind,gckind)<SUB>13</SUB>> ]
"68719476753" [label = <(IDENTIFIER,KGC_INC,g-&gt;gckind == KGC_INC)<SUB>13</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>> ]
"30064771095" [label = <(makewhite,makewhite(g, o))<SUB>14</SUB>> ]
"68719476754" [label = <(IDENTIFIER,g,makewhite(g, o))<SUB>14</SUB>> ]
"68719476755" [label = <(IDENTIFIER,o,makewhite(g, o))<SUB>14</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "30064771082"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "30064771080"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476738"  [ label = "AST: "] 
  "30064771079" -> "68719476739"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476740"  [ label = "AST: "] 
  "30064771081" -> "68719476741"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476742"  [ label = "AST: "] 
  "30064771083" -> "68719476743"  [ label = "AST: "] 
  "47244640256" -> "30064771084"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640258"  [ label = "AST: "] 
  "30064771084" -> "68719476744"  [ label = "AST: "] 
  "25769803778" -> "30064771085"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "30064771085" -> "68719476745"  [ label = "AST: "] 
  "30064771085" -> "68719476746"  [ label = "AST: "] 
  "47244640257" -> "30064771086"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "25769803779" -> "30064771087"  [ label = "AST: "] 
  "25769803779" -> "30064771090"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476748"  [ label = "AST: "] 
  "30064771090" -> "68719476749"  [ label = "AST: "] 
  "30064771090" -> "68719476750"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "30064771091"  [ label = "AST: "] 
  "25769803780" -> "47244640259"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476751"  [ label = "AST: "] 
  "47244640259" -> "30064771093"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "68719476753"  [ label = "AST: "] 
  "30064771094" -> "68719476752"  [ label = "AST: "] 
  "30064771094" -> "55834574848"  [ label = "AST: "] 
  "25769803781" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476754"  [ label = "AST: "] 
  "30064771095" -> "68719476755"  [ label = "AST: "] 
  "30064771072" -> "30064771078"  [ label = "CFG: "] 
  "30064771074" -> "30064771084"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771084" -> "30064771092"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771076" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771075"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771077" -> "30064771081"  [ label = "CFG: "] 
  "30064771080" -> "30064771076"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771086" -> "128849018880"  [ label = "CFG: "] 
  "30064771086" -> "30064771089"  [ label = "CFG: "] 
  "30064771091" -> "55834574848"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771077"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "128849018880"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "128849018880"  [ label = "CFG: "] 
  "30064771093" -> "30064771095"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771095" -> "128849018880"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "55834574848" -> "30064771094"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "30064771073" -> "128849018880"  [ label = "DDG: L"] 
  "30064771072" -> "128849018880"  [ label = "DDG: G(L)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: *g = G(L)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: isblack(o)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: iswhite(v)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: isblack(o) &amp;&amp; iswhite(v)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: isdead(g, v)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: !isdead(g, v)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: isblack(o) &amp;&amp; iswhite(v) &amp;&amp; !isdead(g, v)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: isdead(g, o)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: !isdead(g, o)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: isblack(o) &amp;&amp; iswhite(v) &amp;&amp; !isdead(g, v) &amp;&amp; !isdead(g, o)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: lua_assert(isblack(o) &amp;&amp; iswhite(v) &amp;&amp; !isdead(g, v) &amp;&amp; !isdead(g, o))"] 
  "30064771084" -> "128849018880"  [ label = "DDG: keepinvariant(g)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: g"] 
  "30064771085" -> "128849018880"  [ label = "DDG: reallymarkobject(g, v)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: o"] 
  "30064771086" -> "128849018880"  [ label = "DDG: isold(o)"] 
  "30064771088" -> "128849018880"  [ label = "DDG: isold(v)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: !isold(v)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: lua_assert(!isold(v))"] 
  "30064771090" -> "128849018880"  [ label = "DDG: v"] 
  "30064771090" -> "128849018880"  [ label = "DDG: setage(v, G_OLD0)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: KGC_INC"] 
  "30064771090" -> "128849018880"  [ label = "DDG: G_OLD0"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: L"] 
  "30064771075" -> "30064771074"  [ label = "DDG: isblack(o) &amp;&amp; iswhite(v) &amp;&amp; !isdead(g, v)"] 
  "30064771075" -> "30064771074"  [ label = "DDG: !isdead(g, o)"] 
  "115964116992" -> "30064771073"  [ label = "DDG: L"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: isblack(o) &amp;&amp; iswhite(v)"] 
  "30064771076" -> "30064771075"  [ label = "DDG: !isdead(g, v)"] 
  "30064771082" -> "30064771075"  [ label = "DDG: isdead(g, o)"] 
  "30064771072" -> "30064771084"  [ label = "DDG: g"] 
  "30064771081" -> "30064771084"  [ label = "DDG: g"] 
  "30064771083" -> "30064771084"  [ label = "DDG: g"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: isblack(o)"] 
  "30064771077" -> "30064771076"  [ label = "DDG: iswhite(v)"] 
  "30064771080" -> "30064771076"  [ label = "DDG: isdead(g, v)"] 
  "30064771083" -> "30064771082"  [ label = "DDG: g"] 
  "30064771083" -> "30064771082"  [ label = "DDG: o"] 
  "30064771084" -> "30064771085"  [ label = "DDG: g"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "115964116994" -> "30064771085"  [ label = "DDG: v"] 
  "30064771079" -> "30064771085"  [ label = "DDG: v"] 
  "30064771081" -> "30064771085"  [ label = "DDG: v"] 
  "30064771078" -> "30064771077"  [ label = "DDG: o"] 
  "30064771079" -> "30064771077"  [ label = "DDG: v"] 
  "30064771081" -> "30064771080"  [ label = "DDG: g"] 
  "30064771081" -> "30064771080"  [ label = "DDG: v"] 
  "30064771072" -> "30064771083"  [ label = "DDG: g"] 
  "30064771081" -> "30064771083"  [ label = "DDG: g"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771078" -> "30064771083"  [ label = "DDG: o"] 
  "30064771078" -> "30064771086"  [ label = "DDG: o"] 
  "30064771083" -> "30064771086"  [ label = "DDG: o"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771092" -> "30064771091"  [ label = "DDG: g"] 
  "115964116993" -> "30064771078"  [ label = "DDG: o"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "115964116994" -> "30064771079"  [ label = "DDG: v"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771072" -> "30064771081"  [ label = "DDG: g"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "115964116994" -> "30064771081"  [ label = "DDG: v"] 
  "30064771079" -> "30064771081"  [ label = "DDG: v"] 
  "30064771088" -> "30064771087"  [ label = "DDG: isold(v)"] 
  "30064771089" -> "30064771090"  [ label = "DDG: v"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771084" -> "30064771092"  [ label = "DDG: g"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771092" -> "30064771093"  [ label = "DDG: g"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771089" -> "30064771088"  [ label = "DDG: v"] 
  "30064771092" -> "30064771095"  [ label = "DDG: g"] 
  "30064771093" -> "30064771095"  [ label = "DDG: g-&gt;gckind"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771078" -> "30064771095"  [ label = "DDG: o"] 
  "30064771083" -> "30064771095"  [ label = "DDG: o"] 
  "30064771085" -> "30064771089"  [ label = "DDG: v"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771084" -> "30064771091"  [ label = "CDG: "] 
  "30064771084" -> "30064771094"  [ label = "CDG: "] 
  "30064771084" -> "30064771092"  [ label = "CDG: "] 
  "30064771084" -> "30064771093"  [ label = "CDG: "] 
  "30064771084" -> "30064771086"  [ label = "CDG: "] 
  "30064771084" -> "30064771085"  [ label = "CDG: "] 
  "30064771084" -> "55834574848"  [ label = "CDG: "] 
  "30064771076" -> "30064771082"  [ label = "CDG: "] 
  "30064771076" -> "30064771083"  [ label = "CDG: "] 
  "30064771077" -> "30064771080"  [ label = "CDG: "] 
  "30064771077" -> "30064771081"  [ label = "CDG: "] 
  "30064771086" -> "30064771090"  [ label = "CDG: "] 
  "30064771086" -> "30064771088"  [ label = "CDG: "] 
  "30064771086" -> "30064771089"  [ label = "CDG: "] 
  "30064771086" -> "30064771087"  [ label = "CDG: "] 
  "30064771078" -> "30064771079"  [ label = "CDG: "] 
  "30064771093" -> "30064771095"  [ label = "CDG: "] 
}
"""
)
