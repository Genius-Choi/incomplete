[33mval[0m [36mres1600[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "smm_create_map" {  
"111669149697" [label = <(METHOD,smm_create_map)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,uintptr_t smbase)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,unsigned int num_cpus)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,const struct smm_loader_params *params)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
	unsigned int i;
	struct rmodule smm_stub;
	u...,{
	unsigned int i;
	struct rmodule smm_stub;
	u...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,unsigned int i: unsigned int)<SUB>4</SUB>> ]
"94489280513" [label = <(LOCAL,struct rmodule smm_stub: rmodule)<SUB>5</SUB>> ]
"94489280514" [label = <(LOCAL,unsigned int ss_size: unsigned int)<SUB>6</SUB>> ]
"94489280515" [label = <(LOCAL,unsigned int stub_size: unsigned int)<SUB>6</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,ss_size = params-&gt;per_cpu_save_state_size)<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,ss_size,ss_size = params-&gt;per_cpu_save_state_size)<SUB>6</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;per_cpu_save_state_size)<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,params,ss_size = params-&gt;per_cpu_save_state_size)<SUB>6</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,per_cpu_save_state_size,per_cpu_save_state_size)<SUB>6</SUB>> ]
"94489280516" [label = <(LOCAL,unsigned int smm_entry_offset: unsigned int)<SUB>7</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,smm_entry_offset = params-&gt;smm_main_entry_offset)<SUB>7</SUB>> ]
"68719476738" [label = <(IDENTIFIER,smm_entry_offset,smm_entry_offset = params-&gt;smm_main_entry_offset)<SUB>7</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;smm_main_entry_offset)<SUB>7</SUB>> ]
"68719476739" [label = <(IDENTIFIER,params,smm_entry_offset = params-&gt;smm_main_entry_offset)<SUB>7</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,smm_main_entry_offset,smm_main_entry_offset)<SUB>7</SUB>> ]
"94489280517" [label = <(LOCAL,unsigned int seg_count: unsigned int)<SUB>8</SUB>> ]
"94489280518" [label = <(LOCAL,unsigned int segments: unsigned int)<SUB>8</SUB>> ]
"94489280519" [label = <(LOCAL,unsigned int available: unsigned int)<SUB>8</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,seg_count = 0)<SUB>8</SUB>> ]
"68719476740" [label = <(IDENTIFIER,seg_count,seg_count = 0)<SUB>8</SUB>> ]
"90194313216" [label = <(LITERAL,0,seg_count = 0)<SUB>8</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,segments = 0)<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,segments,segments = 0)<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,0,segments = 0)<SUB>8</SUB>> ]
"94489280520" [label = <(LOCAL,unsigned int cpus_in_segment: unsigned int)<SUB>9</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,cpus_in_segment = 0)<SUB>9</SUB>> ]
"68719476742" [label = <(IDENTIFIER,cpus_in_segment,cpus_in_segment = 0)<SUB>9</SUB>> ]
"90194313218" [label = <(LITERAL,0,cpus_in_segment = 0)<SUB>9</SUB>> ]
"94489280521" [label = <(LOCAL,unsigned int base: unsigned int)<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,base = smbase)<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,base,base = smbase)<SUB>10</SUB>> ]
"68719476744" [label = <(IDENTIFIER,smbase,base = smbase)<SUB>10</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (rmodule_parse(&amp;_binary_smmstub_start, &amp;smm_stub)))<SUB>12</SUB>> ]
"30064771080" [label = <(rmodule_parse,rmodule_parse(&amp;_binary_smmstub_start, &amp;smm_stub))<SUB>12</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.addressOf,&amp;_binary_smmstub_start)<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,_binary_smmstub_start,rmodule_parse(&amp;_binary_smmstub_start, &amp;smm_stub))<SUB>12</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.addressOf,&amp;smm_stub)<SUB>12</SUB>> ]
"68719476746" [label = <(IDENTIFIER,smm_stub,rmodule_parse(&amp;_binary_smmstub_start, &amp;smm_stub))<SUB>12</SUB>> ]
"25769803778" [label = <(BLOCK,{
		printk(BIOS_ERR, &quot;%s: unable to get SMM mod...,{
		printk(BIOS_ERR, &quot;%s: unable to get SMM mod...)<SUB>12</SUB>> ]
"30064771083" [label = <(printk,printk(BIOS_ERR, &quot;%s: unable to get SMM module ...)<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,BIOS_ERR,printk(BIOS_ERR, &quot;%s: unable to get SMM module ...)<SUB>13</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;%s: unable to get SMM module size\n&quot;,printk(BIOS_ERR, &quot;%s: unable to get SMM module ...)<SUB>13</SUB>> ]
"68719476748" [label = <(IDENTIFIER,__func__,printk(BIOS_ERR, &quot;%s: unable to get SMM module ...)<SUB>13</SUB>> ]
"146028888064" [label = <(RETURN,return 0;,return 0;)<SUB>14</SUB>> ]
"90194313220" [label = <(LITERAL,0,return 0;)<SUB>14</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,stub_size = rmodule_memory_size(&amp;smm_stub))<SUB>17</SUB>> ]
"68719476749" [label = <(IDENTIFIER,stub_size,stub_size = rmodule_memory_size(&amp;smm_stub))<SUB>17</SUB>> ]
"30064771085" [label = <(rmodule_memory_size,rmodule_memory_size(&amp;smm_stub))<SUB>17</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.addressOf,&amp;smm_stub)<SUB>17</SUB>> ]
"68719476750" [label = <(IDENTIFIER,smm_stub,rmodule_memory_size(&amp;smm_stub))<SUB>17</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,available = 0xFFFF - smm_entry_offset - ss_size...)<SUB>19</SUB>> ]
"68719476751" [label = <(IDENTIFIER,available,available = 0xFFFF - smm_entry_offset - ss_size...)<SUB>19</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.subtraction,0xFFFF - smm_entry_offset - ss_size - stub_size)<SUB>19</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.subtraction,0xFFFF - smm_entry_offset - ss_size)<SUB>19</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.subtraction,0xFFFF - smm_entry_offset)<SUB>19</SUB>> ]
"90194313221" [label = <(LITERAL,0xFFFF,0xFFFF - smm_entry_offset)<SUB>19</SUB>> ]
"68719476752" [label = <(IDENTIFIER,smm_entry_offset,0xFFFF - smm_entry_offset)<SUB>19</SUB>> ]
"68719476753" [label = <(IDENTIFIER,ss_size,0xFFFF - smm_entry_offset - ss_size)<SUB>19</SUB>> ]
"68719476754" [label = <(IDENTIFIER,stub_size,0xFFFF - smm_entry_offset - ss_size - stub_size)<SUB>19</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (available &gt; 0))<SUB>20</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.greaterThan,available &gt; 0)<SUB>20</SUB>> ]
"68719476755" [label = <(IDENTIFIER,available,available &gt; 0)<SUB>20</SUB>> ]
"90194313222" [label = <(LITERAL,0,available &gt; 0)<SUB>20</SUB>> ]
"25769803779" [label = <(BLOCK,{
		cpus_in_segment = available / ss_size;
		/*...,{
		cpus_in_segment = available / ss_size;
		/*...)<SUB>20</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.assignment,cpus_in_segment = available / ss_size)<SUB>21</SUB>> ]
"68719476756" [label = <(IDENTIFIER,cpus_in_segment,cpus_in_segment = available / ss_size)<SUB>21</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.division,available / ss_size)<SUB>21</SUB>> ]
"68719476757" [label = <(IDENTIFIER,available,available / ss_size)<SUB>21</SUB>> ]
"68719476758" [label = <(IDENTIFIER,ss_size,available / ss_size)<SUB>21</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,segments = num_cpus / cpus_in_segment + 1)<SUB>23</SUB>> ]
"68719476759" [label = <(IDENTIFIER,segments,segments = num_cpus / cpus_in_segment + 1)<SUB>23</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.addition,num_cpus / cpus_in_segment + 1)<SUB>23</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.division,num_cpus / cpus_in_segment)<SUB>23</SUB>> ]
"68719476760" [label = <(IDENTIFIER,num_cpus,num_cpus / cpus_in_segment)<SUB>23</SUB>> ]
"68719476761" [label = <(IDENTIFIER,cpus_in_segment,num_cpus / cpus_in_segment)<SUB>23</SUB>> ]
"90194313223" [label = <(LITERAL,1,num_cpus / cpus_in_segment + 1)<SUB>23</SUB>> ]
"30064771097" [label = <(printk,printk(BIOS_DEBUG,
			&quot;%s: cpus allowed in one ...)<SUB>24</SUB>> ]
"68719476762" [label = <(IDENTIFIER,BIOS_DEBUG,printk(BIOS_DEBUG,
			&quot;%s: cpus allowed in one ...)<SUB>24</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;%s: cpus allowed in one segment %d\n&quot;,printk(BIOS_DEBUG,
			&quot;%s: cpus allowed in one ...)<SUB>25</SUB>> ]
"68719476763" [label = <(IDENTIFIER,__func__,printk(BIOS_DEBUG,
			&quot;%s: cpus allowed in one ...)<SUB>25</SUB>> ]
"68719476764" [label = <(IDENTIFIER,cpus_in_segment,printk(BIOS_DEBUG,
			&quot;%s: cpus allowed in one ...)<SUB>25</SUB>> ]
"30064771098" [label = <(printk,printk(BIOS_DEBUG,
			&quot;%s: min # of segments ne...)<SUB>26</SUB>> ]
"68719476765" [label = <(IDENTIFIER,BIOS_DEBUG,printk(BIOS_DEBUG,
			&quot;%s: min # of segments ne...)<SUB>26</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;%s: min # of segments needed %d\n&quot;,printk(BIOS_DEBUG,
			&quot;%s: min # of segments ne...)<SUB>27</SUB>> ]
"68719476766" [label = <(IDENTIFIER,__func__,printk(BIOS_DEBUG,
			&quot;%s: min # of segments ne...)<SUB>27</SUB>> ]
"68719476767" [label = <(IDENTIFIER,segments,printk(BIOS_DEBUG,
			&quot;%s: min # of segments ne...)<SUB>27</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>28</SUB>> ]
"25769803780" [label = <(BLOCK,{
		printk(BIOS_ERR, &quot;%s: not enough space in S...,{
		printk(BIOS_ERR, &quot;%s: not enough space in S...)<SUB>28</SUB>> ]
"30064771099" [label = <(printk,printk(BIOS_ERR, &quot;%s: not enough space in SMM t...)<SUB>29</SUB>> ]
"68719476768" [label = <(IDENTIFIER,BIOS_ERR,printk(BIOS_ERR, &quot;%s: not enough space in SMM t...)<SUB>29</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;%s: not enough space in SMM to setup all CPUs\n&quot;,printk(BIOS_ERR, &quot;%s: not enough space in SMM t...)<SUB>29</SUB>> ]
"68719476769" [label = <(IDENTIFIER,__func__,printk(BIOS_ERR, &quot;%s: not enough space in SMM t...)<SUB>29</SUB>> ]
"30064771100" [label = <(printk,printk(BIOS_ERR, &quot;    save state &amp; stub size ne...)<SUB>30</SUB>> ]
"68719476770" [label = <(IDENTIFIER,BIOS_ERR,printk(BIOS_ERR, &quot;    save state &amp; stub size ne...)<SUB>30</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;    save state &amp; stub size need to be reduced\n&quot;,printk(BIOS_ERR, &quot;    save state &amp; stub size ne...)<SUB>30</SUB>> ]
"30064771101" [label = <(printk,printk(BIOS_ERR, &quot;    or increase SMRAM size\n&quot;))<SUB>31</SUB>> ]
"68719476771" [label = <(IDENTIFIER,BIOS_ERR,printk(BIOS_ERR, &quot;    or increase SMRAM size\n&quot;))<SUB>31</SUB>> ]
"90194313228" [label = <(LITERAL,&quot;    or increase SMRAM size\n&quot;,printk(BIOS_ERR, &quot;    or increase SMRAM size\n&quot;))<SUB>31</SUB>> ]
"146028888065" [label = <(RETURN,return 0;,return 0;)<SUB>32</SUB>> ]
"90194313229" [label = <(LITERAL,0,return 0;)<SUB>32</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (sizeof(cpus) / sizeof(struct cpu_smm_info) &lt; num_cpus))<SUB>35</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.lessThan,sizeof(cpus) / sizeof(struct cpu_smm_info) &lt; nu...)<SUB>35</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.division,sizeof(cpus) / sizeof(struct cpu_smm_info))<SUB>35</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.sizeOf,sizeof(cpus))<SUB>35</SUB>> ]
"68719476772" [label = <(IDENTIFIER,cpus,sizeof(cpus))<SUB>35</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.sizeOf,sizeof(struct cpu_smm_info))<SUB>35</SUB>> ]
"68719476773" [label = <(IDENTIFIER,struct cpu_smm_info,sizeof(struct cpu_smm_info))<SUB>35</SUB>> ]
"68719476774" [label = <(IDENTIFIER,num_cpus,sizeof(cpus) / sizeof(struct cpu_smm_info) &lt; nu...)<SUB>35</SUB>> ]
"25769803781" [label = <(BLOCK,{
		printk(BIOS_ERR,
			&quot;%s: increase MAX_CPUS ...,{
		printk(BIOS_ERR,
			&quot;%s: increase MAX_CPUS ...)<SUB>35</SUB>> ]
"30064771106" [label = <(printk,printk(BIOS_ERR,
			&quot;%s: increase MAX_CPUS in K...)<SUB>36</SUB>> ]
"68719476775" [label = <(IDENTIFIER,BIOS_ERR,printk(BIOS_ERR,
			&quot;%s: increase MAX_CPUS in K...)<SUB>36</SUB>> ]
"90194313230" [label = <(LITERAL,&quot;%s: increase MAX_CPUS in Kconfig\n&quot;,printk(BIOS_ERR,
			&quot;%s: increase MAX_CPUS in K...)<SUB>37</SUB>> ]
"68719476776" [label = <(IDENTIFIER,__func__,printk(BIOS_ERR,
			&quot;%s: increase MAX_CPUS in K...)<SUB>37</SUB>> ]
"146028888066" [label = <(RETURN,return 0;,return 0;)<SUB>38</SUB>> ]
"90194313231" [label = <(LITERAL,0,return 0;)<SUB>38</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,FOR,for (i = 0;i &lt; num_cpus;i++))<SUB>41</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>41</SUB>> ]
"68719476777" [label = <(IDENTIFIER,i,i = 0)<SUB>41</SUB>> ]
"90194313232" [label = <(LITERAL,0,i = 0)<SUB>41</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.lessThan,i &lt; num_cpus)<SUB>41</SUB>> ]
"68719476778" [label = <(IDENTIFIER,i,i &lt; num_cpus)<SUB>41</SUB>> ]
"68719476779" [label = <(IDENTIFIER,num_cpus,i &lt; num_cpus)<SUB>41</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>41</SUB>> ]
"68719476780" [label = <(IDENTIFIER,i,i++)<SUB>41</SUB>> ]
"25769803783" [label = <(BLOCK,{
		cpus[i].smbase = base;
		cpus[i].entry = ba...,{
		cpus[i].smbase = base;
		cpus[i].entry = ba...)<SUB>41</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.assignment,cpus[i].smbase = base)<SUB>42</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].smbase)<SUB>42</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>42</SUB>> ]
"68719476781" [label = <(IDENTIFIER,cpus,cpus[i].smbase = base)<SUB>42</SUB>> ]
"68719476782" [label = <(IDENTIFIER,i,cpus[i].smbase = base)<SUB>42</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,smbase,smbase)<SUB>42</SUB>> ]
"68719476783" [label = <(IDENTIFIER,base,cpus[i].smbase = base)<SUB>42</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.assignment,cpus[i].entry = base + smm_entry_offset)<SUB>43</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].entry)<SUB>43</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>43</SUB>> ]
"68719476784" [label = <(IDENTIFIER,cpus,cpus[i].entry = base + smm_entry_offset)<SUB>43</SUB>> ]
"68719476785" [label = <(IDENTIFIER,i,cpus[i].entry = base + smm_entry_offset)<SUB>43</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,entry,entry)<SUB>43</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.addition,base + smm_entry_offset)<SUB>43</SUB>> ]
"68719476786" [label = <(IDENTIFIER,base,base + smm_entry_offset)<SUB>43</SUB>> ]
"68719476787" [label = <(IDENTIFIER,smm_entry_offset,base + smm_entry_offset)<SUB>43</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,cpus[i].ss_start = cpus[i].entry + (smm_entry_o...)<SUB>44</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].ss_start)<SUB>44</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>44</SUB>> ]
"68719476788" [label = <(IDENTIFIER,cpus,cpus[i].ss_start = cpus[i].entry + (smm_entry_o...)<SUB>44</SUB>> ]
"68719476789" [label = <(IDENTIFIER,i,cpus[i].ss_start = cpus[i].entry + (smm_entry_o...)<SUB>44</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,ss_start,ss_start)<SUB>44</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.addition,cpus[i].entry + (smm_entry_offset - ss_size))<SUB>44</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].entry)<SUB>44</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>44</SUB>> ]
"68719476790" [label = <(IDENTIFIER,cpus,cpus[i].entry + (smm_entry_offset - ss_size))<SUB>44</SUB>> ]
"68719476791" [label = <(IDENTIFIER,i,cpus[i].entry + (smm_entry_offset - ss_size))<SUB>44</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,entry,entry)<SUB>44</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.subtraction,smm_entry_offset - ss_size)<SUB>44</SUB>> ]
"68719476792" [label = <(IDENTIFIER,smm_entry_offset,smm_entry_offset - ss_size)<SUB>44</SUB>> ]
"68719476793" [label = <(IDENTIFIER,ss_size,smm_entry_offset - ss_size)<SUB>44</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assignment,cpus[i].code_start = cpus[i].entry)<SUB>45</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].code_start)<SUB>45</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>45</SUB>> ]
"68719476794" [label = <(IDENTIFIER,cpus,cpus[i].code_start = cpus[i].entry)<SUB>45</SUB>> ]
"68719476795" [label = <(IDENTIFIER,i,cpus[i].code_start = cpus[i].entry)<SUB>45</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,code_start,code_start)<SUB>45</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].entry)<SUB>45</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>45</SUB>> ]
"68719476796" [label = <(IDENTIFIER,cpus,cpus[i].code_start = cpus[i].entry)<SUB>45</SUB>> ]
"68719476797" [label = <(IDENTIFIER,i,cpus[i].code_start = cpus[i].entry)<SUB>45</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,entry,entry)<SUB>45</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.assignment,cpus[i].code_end = cpus[i].entry + stub_size)<SUB>46</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].code_end)<SUB>46</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>46</SUB>> ]
"68719476798" [label = <(IDENTIFIER,cpus,cpus[i].code_end = cpus[i].entry + stub_size)<SUB>46</SUB>> ]
"68719476799" [label = <(IDENTIFIER,i,cpus[i].code_end = cpus[i].entry + stub_size)<SUB>46</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,code_end,code_end)<SUB>46</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.addition,cpus[i].entry + stub_size)<SUB>46</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].entry)<SUB>46</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>46</SUB>> ]
"68719476800" [label = <(IDENTIFIER,cpus,cpus[i].entry + stub_size)<SUB>46</SUB>> ]
"68719476801" [label = <(IDENTIFIER,i,cpus[i].entry + stub_size)<SUB>46</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,entry,entry)<SUB>46</SUB>> ]
"68719476802" [label = <(IDENTIFIER,stub_size,cpus[i].entry + stub_size)<SUB>46</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.assignment,cpus[i].active = 1)<SUB>47</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].active)<SUB>47</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>47</SUB>> ]
"68719476803" [label = <(IDENTIFIER,cpus,cpus[i].active = 1)<SUB>47</SUB>> ]
"68719476804" [label = <(IDENTIFIER,i,cpus[i].active = 1)<SUB>47</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,active,active)<SUB>47</SUB>> ]
"90194313233" [label = <(LITERAL,1,cpus[i].active = 1)<SUB>47</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.assignmentMinus,base -= ss_size)<SUB>48</SUB>> ]
"68719476805" [label = <(IDENTIFIER,base,base -= ss_size)<SUB>48</SUB>> ]
"68719476806" [label = <(IDENTIFIER,ss_size,base -= ss_size)<SUB>48</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.postIncrement,seg_count++)<SUB>49</SUB>> ]
"68719476807" [label = <(IDENTIFIER,seg_count,seg_count++)<SUB>49</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (seg_count &gt;= cpus_in_segment))<SUB>50</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.greaterEqualsThan,seg_count &gt;= cpus_in_segment)<SUB>50</SUB>> ]
"68719476808" [label = <(IDENTIFIER,seg_count,seg_count &gt;= cpus_in_segment)<SUB>50</SUB>> ]
"68719476809" [label = <(IDENTIFIER,cpus_in_segment,seg_count &gt;= cpus_in_segment)<SUB>50</SUB>> ]
"25769803784" [label = <(BLOCK,{
			base -= smm_entry_offset;
			seg_count = 0...,{
			base -= smm_entry_offset;
			seg_count = 0...)<SUB>50</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.assignmentMinus,base -= smm_entry_offset)<SUB>51</SUB>> ]
"68719476810" [label = <(IDENTIFIER,base,base -= smm_entry_offset)<SUB>51</SUB>> ]
"68719476811" [label = <(IDENTIFIER,smm_entry_offset,base -= smm_entry_offset)<SUB>51</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.assignment,seg_count = 0)<SUB>52</SUB>> ]
"68719476812" [label = <(IDENTIFIER,seg_count,seg_count = 0)<SUB>52</SUB>> ]
"90194313234" [label = <(LITERAL,0,seg_count = 0)<SUB>52</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (CONFIG_DEFAULT_CONSOLE_LOGLEVEL &gt;= BIOS_DEBUG))<SUB>56</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.greaterEqualsThan,CONFIG_DEFAULT_CONSOLE_LOGLEVEL &gt;= BIOS_DEBUG)<SUB>56</SUB>> ]
"68719476813" [label = <(IDENTIFIER,CONFIG_DEFAULT_CONSOLE_LOGLEVEL,CONFIG_DEFAULT_CONSOLE_LOGLEVEL &gt;= BIOS_DEBUG)<SUB>56</SUB>> ]
"68719476814" [label = <(IDENTIFIER,BIOS_DEBUG,CONFIG_DEFAULT_CONSOLE_LOGLEVEL &gt;= BIOS_DEBUG)<SUB>56</SUB>> ]
"25769803785" [label = <(BLOCK,{
		seg_count = 0;
		for (i = 0; i &lt; num_cpus; ...,{
		seg_count = 0;
		for (i = 0; i &lt; num_cpus; ...)<SUB>56</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.assignment,seg_count = 0)<SUB>57</SUB>> ]
"68719476815" [label = <(IDENTIFIER,seg_count,seg_count = 0)<SUB>57</SUB>> ]
"90194313235" [label = <(LITERAL,0,seg_count = 0)<SUB>57</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,FOR,for (i = 0;i &lt; num_cpus;i++))<SUB>58</SUB>> ]
"25769803786" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>58</SUB>> ]
"68719476816" [label = <(IDENTIFIER,i,i = 0)<SUB>58</SUB>> ]
"90194313236" [label = <(LITERAL,0,i = 0)<SUB>58</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.lessThan,i &lt; num_cpus)<SUB>58</SUB>> ]
"68719476817" [label = <(IDENTIFIER,i,i &lt; num_cpus)<SUB>58</SUB>> ]
"68719476818" [label = <(IDENTIFIER,num_cpus,i &lt; num_cpus)<SUB>58</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>58</SUB>> ]
"68719476819" [label = <(IDENTIFIER,i,i++)<SUB>58</SUB>> ]
"25769803787" [label = <(BLOCK,{
			printk(BIOS_DEBUG, &quot;CPU 0x%x\n&quot;, i);
			pr...,{
			printk(BIOS_DEBUG, &quot;CPU 0x%x\n&quot;, i);
			pr...)<SUB>58</SUB>> ]
"30064771148" [label = <(printk,printk(BIOS_DEBUG, &quot;CPU 0x%x\n&quot;, i))<SUB>59</SUB>> ]
"68719476820" [label = <(IDENTIFIER,BIOS_DEBUG,printk(BIOS_DEBUG, &quot;CPU 0x%x\n&quot;, i))<SUB>59</SUB>> ]
"90194313237" [label = <(LITERAL,&quot;CPU 0x%x\n&quot;,printk(BIOS_DEBUG, &quot;CPU 0x%x\n&quot;, i))<SUB>59</SUB>> ]
"68719476821" [label = <(IDENTIFIER,i,printk(BIOS_DEBUG, &quot;CPU 0x%x\n&quot;, i))<SUB>59</SUB>> ]
"30064771149" [label = <(printk,printk(BIOS_DEBUG,
				&quot;    smbase %zx  entry %...)<SUB>60</SUB>> ]
"68719476822" [label = <(IDENTIFIER,BIOS_DEBUG,printk(BIOS_DEBUG,
				&quot;    smbase %zx  entry %...)<SUB>60</SUB>> ]
"90194313238" [label = <(LITERAL,&quot;    smbase %zx  entry %zx\n&quot;,printk(BIOS_DEBUG,
				&quot;    smbase %zx  entry %...)<SUB>61</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].smbase)<SUB>62</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>62</SUB>> ]
"68719476823" [label = <(IDENTIFIER,cpus,printk(BIOS_DEBUG,
				&quot;    smbase %zx  entry %...)<SUB>62</SUB>> ]
"68719476824" [label = <(IDENTIFIER,i,printk(BIOS_DEBUG,
				&quot;    smbase %zx  entry %...)<SUB>62</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,smbase,smbase)<SUB>62</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].entry)<SUB>62</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>62</SUB>> ]
"68719476825" [label = <(IDENTIFIER,cpus,printk(BIOS_DEBUG,
				&quot;    smbase %zx  entry %...)<SUB>62</SUB>> ]
"68719476826" [label = <(IDENTIFIER,i,printk(BIOS_DEBUG,
				&quot;    smbase %zx  entry %...)<SUB>62</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,entry,entry)<SUB>62</SUB>> ]
"30064771154" [label = <(printk,printk(BIOS_DEBUG,
				&quot;           ss_start %zx...)<SUB>63</SUB>> ]
"68719476827" [label = <(IDENTIFIER,BIOS_DEBUG,printk(BIOS_DEBUG,
				&quot;           ss_start %zx...)<SUB>63</SUB>> ]
"90194313239" [label = <(LITERAL,&quot;           ss_start %zx  code_end %zx\n&quot;,printk(BIOS_DEBUG,
				&quot;           ss_start %zx...)<SUB>64</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].ss_start)<SUB>65</SUB>> ]
"30064771156" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>65</SUB>> ]
"68719476828" [label = <(IDENTIFIER,cpus,printk(BIOS_DEBUG,
				&quot;           ss_start %zx...)<SUB>65</SUB>> ]
"68719476829" [label = <(IDENTIFIER,i,printk(BIOS_DEBUG,
				&quot;           ss_start %zx...)<SUB>65</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,ss_start,ss_start)<SUB>65</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].code_end)<SUB>65</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>65</SUB>> ]
"68719476830" [label = <(IDENTIFIER,cpus,printk(BIOS_DEBUG,
				&quot;           ss_start %zx...)<SUB>65</SUB>> ]
"68719476831" [label = <(IDENTIFIER,i,printk(BIOS_DEBUG,
				&quot;           ss_start %zx...)<SUB>65</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,code_end,code_end)<SUB>65</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.postIncrement,seg_count++)<SUB>66</SUB>> ]
"68719476832" [label = <(IDENTIFIER,seg_count,seg_count++)<SUB>66</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,IF,if (seg_count &gt;= cpus_in_segment))<SUB>67</SUB>> ]
"30064771160" [label = <(&lt;operator&gt;.greaterEqualsThan,seg_count &gt;= cpus_in_segment)<SUB>67</SUB>> ]
"68719476833" [label = <(IDENTIFIER,seg_count,seg_count &gt;= cpus_in_segment)<SUB>67</SUB>> ]
"68719476834" [label = <(IDENTIFIER,cpus_in_segment,seg_count &gt;= cpus_in_segment)<SUB>67</SUB>> ]
"25769803788" [label = <(BLOCK,{
				printk(BIOS_DEBUG,
					&quot;-------------NEW...,{
				printk(BIOS_DEBUG,
					&quot;-------------NEW...)<SUB>67</SUB>> ]
"30064771161" [label = <(printk,printk(BIOS_DEBUG,
					&quot;-------------NEW CODE ...)<SUB>68</SUB>> ]
"68719476835" [label = <(IDENTIFIER,BIOS_DEBUG,printk(BIOS_DEBUG,
					&quot;-------------NEW CODE ...)<SUB>68</SUB>> ]
"90194313240" [label = <(LITERAL,&quot;-------------NEW CODE SEGMENT --------------\n&quot;,printk(BIOS_DEBUG,
					&quot;-------------NEW CODE ...)<SUB>69</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.assignment,seg_count = 0)<SUB>70</SUB>> ]
"68719476836" [label = <(IDENTIFIER,seg_count,seg_count = 0)<SUB>70</SUB>> ]
"90194313241" [label = <(LITERAL,0,seg_count = 0)<SUB>70</SUB>> ]
"146028888067" [label = <(RETURN,return 1;,return 1;)<SUB>74</SUB>> ]
"90194313242" [label = <(LITERAL,1,return 1;)<SUB>74</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,int)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "25769803777" -> "146028888067"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "55834574849"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "90194313216"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "90194313217"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "90194313218"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "47244640256" -> "30064771080"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "25769803778" -> "30064771083"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "90194313219"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "146028888064" -> "90194313220"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "68719476751"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "68719476754"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "68719476753"  [ label = "AST: "] 
  "30064771090" -> "90194313221"  [ label = "AST: "] 
  "30064771090" -> "68719476752"  [ label = "AST: "] 
  "47244640257" -> "30064771091"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "47244640258"  [ label = "AST: "] 
  "30064771091" -> "68719476755"  [ label = "AST: "] 
  "30064771091" -> "90194313222"  [ label = "AST: "] 
  "25769803779" -> "30064771092"  [ label = "AST: "] 
  "25769803779" -> "30064771094"  [ label = "AST: "] 
  "25769803779" -> "30064771097"  [ label = "AST: "] 
  "25769803779" -> "30064771098"  [ label = "AST: "] 
  "30064771092" -> "68719476756"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476757"  [ label = "AST: "] 
  "30064771093" -> "68719476758"  [ label = "AST: "] 
  "30064771094" -> "68719476759"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "90194313223"  [ label = "AST: "] 
  "30064771096" -> "68719476760"  [ label = "AST: "] 
  "30064771096" -> "68719476761"  [ label = "AST: "] 
  "30064771097" -> "68719476762"  [ label = "AST: "] 
  "30064771097" -> "90194313224"  [ label = "AST: "] 
  "30064771097" -> "68719476763"  [ label = "AST: "] 
  "30064771097" -> "68719476764"  [ label = "AST: "] 
  "30064771098" -> "68719476765"  [ label = "AST: "] 
  "30064771098" -> "90194313225"  [ label = "AST: "] 
  "30064771098" -> "68719476766"  [ label = "AST: "] 
  "30064771098" -> "68719476767"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "30064771099"  [ label = "AST: "] 
  "25769803780" -> "30064771100"  [ label = "AST: "] 
  "25769803780" -> "30064771101"  [ label = "AST: "] 
  "25769803780" -> "146028888065"  [ label = "AST: "] 
  "30064771099" -> "68719476768"  [ label = "AST: "] 
  "30064771099" -> "90194313226"  [ label = "AST: "] 
  "30064771099" -> "68719476769"  [ label = "AST: "] 
  "30064771100" -> "68719476770"  [ label = "AST: "] 
  "30064771100" -> "90194313227"  [ label = "AST: "] 
  "30064771101" -> "68719476771"  [ label = "AST: "] 
  "30064771101" -> "90194313228"  [ label = "AST: "] 
  "146028888065" -> "90194313229"  [ label = "AST: "] 
  "47244640259" -> "30064771102"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "68719476774"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "68719476772"  [ label = "AST: "] 
  "30064771105" -> "68719476773"  [ label = "AST: "] 
  "25769803781" -> "30064771106"  [ label = "AST: "] 
  "25769803781" -> "146028888066"  [ label = "AST: "] 
  "30064771106" -> "68719476775"  [ label = "AST: "] 
  "30064771106" -> "90194313230"  [ label = "AST: "] 
  "30064771106" -> "68719476776"  [ label = "AST: "] 
  "146028888066" -> "90194313231"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "47244640260" -> "30064771108"  [ label = "AST: "] 
  "47244640260" -> "30064771109"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "25769803782" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "68719476777"  [ label = "AST: "] 
  "30064771107" -> "90194313232"  [ label = "AST: "] 
  "30064771108" -> "68719476778"  [ label = "AST: "] 
  "30064771108" -> "68719476779"  [ label = "AST: "] 
  "30064771109" -> "68719476780"  [ label = "AST: "] 
  "25769803783" -> "30064771110"  [ label = "AST: "] 
  "25769803783" -> "30064771113"  [ label = "AST: "] 
  "25769803783" -> "30064771117"  [ label = "AST: "] 
  "25769803783" -> "30064771124"  [ label = "AST: "] 
  "25769803783" -> "30064771129"  [ label = "AST: "] 
  "25769803783" -> "30064771135"  [ label = "AST: "] 
  "25769803783" -> "30064771138"  [ label = "AST: "] 
  "25769803783" -> "30064771139"  [ label = "AST: "] 
  "25769803783" -> "47244640261"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771110" -> "68719476783"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "55834574850"  [ label = "AST: "] 
  "30064771112" -> "68719476781"  [ label = "AST: "] 
  "30064771112" -> "68719476782"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771113" -> "30064771116"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771114" -> "55834574851"  [ label = "AST: "] 
  "30064771115" -> "68719476784"  [ label = "AST: "] 
  "30064771115" -> "68719476785"  [ label = "AST: "] 
  "30064771116" -> "68719476786"  [ label = "AST: "] 
  "30064771116" -> "68719476787"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771117" -> "30064771120"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771118" -> "55834574852"  [ label = "AST: "] 
  "30064771119" -> "68719476788"  [ label = "AST: "] 
  "30064771119" -> "68719476789"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "30064771123"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "55834574853"  [ label = "AST: "] 
  "30064771122" -> "68719476790"  [ label = "AST: "] 
  "30064771122" -> "68719476791"  [ label = "AST: "] 
  "30064771123" -> "68719476792"  [ label = "AST: "] 
  "30064771123" -> "68719476793"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "30064771127"  [ label = "AST: "] 
  "30064771125" -> "30064771126"  [ label = "AST: "] 
  "30064771125" -> "55834574854"  [ label = "AST: "] 
  "30064771126" -> "68719476794"  [ label = "AST: "] 
  "30064771126" -> "68719476795"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771127" -> "55834574855"  [ label = "AST: "] 
  "30064771128" -> "68719476796"  [ label = "AST: "] 
  "30064771128" -> "68719476797"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "30064771132"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771130" -> "55834574856"  [ label = "AST: "] 
  "30064771131" -> "68719476798"  [ label = "AST: "] 
  "30064771131" -> "68719476799"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771132" -> "68719476802"  [ label = "AST: "] 
  "30064771133" -> "30064771134"  [ label = "AST: "] 
  "30064771133" -> "55834574857"  [ label = "AST: "] 
  "30064771134" -> "68719476800"  [ label = "AST: "] 
  "30064771134" -> "68719476801"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771135" -> "90194313233"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771136" -> "55834574858"  [ label = "AST: "] 
  "30064771137" -> "68719476803"  [ label = "AST: "] 
  "30064771137" -> "68719476804"  [ label = "AST: "] 
  "30064771138" -> "68719476805"  [ label = "AST: "] 
  "30064771138" -> "68719476806"  [ label = "AST: "] 
  "30064771139" -> "68719476807"  [ label = "AST: "] 
  "47244640261" -> "30064771140"  [ label = "AST: "] 
  "47244640261" -> "25769803784"  [ label = "AST: "] 
  "30064771140" -> "68719476808"  [ label = "AST: "] 
  "30064771140" -> "68719476809"  [ label = "AST: "] 
  "25769803784" -> "30064771141"  [ label = "AST: "] 
  "25769803784" -> "30064771142"  [ label = "AST: "] 
  "30064771141" -> "68719476810"  [ label = "AST: "] 
  "30064771141" -> "68719476811"  [ label = "AST: "] 
  "30064771142" -> "68719476812"  [ label = "AST: "] 
  "30064771142" -> "90194313234"  [ label = "AST: "] 
  "47244640262" -> "30064771143"  [ label = "AST: "] 
  "47244640262" -> "25769803785"  [ label = "AST: "] 
  "30064771143" -> "68719476813"  [ label = "AST: "] 
  "30064771143" -> "68719476814"  [ label = "AST: "] 
  "25769803785" -> "30064771144"  [ label = "AST: "] 
  "25769803785" -> "47244640263"  [ label = "AST: "] 
  "30064771144" -> "68719476815"  [ label = "AST: "] 
  "30064771144" -> "90194313235"  [ label = "AST: "] 
  "47244640263" -> "25769803786"  [ label = "AST: "] 
  "47244640263" -> "30064771146"  [ label = "AST: "] 
  "47244640263" -> "30064771147"  [ label = "AST: "] 
  "47244640263" -> "25769803787"  [ label = "AST: "] 
  "25769803786" -> "30064771145"  [ label = "AST: "] 
  "30064771145" -> "68719476816"  [ label = "AST: "] 
  "30064771145" -> "90194313236"  [ label = "AST: "] 
  "30064771146" -> "68719476817"  [ label = "AST: "] 
  "30064771146" -> "68719476818"  [ label = "AST: "] 
  "30064771147" -> "68719476819"  [ label = "AST: "] 
  "25769803787" -> "30064771148"  [ label = "AST: "] 
  "25769803787" -> "30064771149"  [ label = "AST: "] 
  "25769803787" -> "30064771154"  [ label = "AST: "] 
  "25769803787" -> "30064771159"  [ label = "AST: "] 
  "25769803787" -> "47244640264"  [ label = "AST: "] 
  "30064771148" -> "68719476820"  [ label = "AST: "] 
  "30064771148" -> "90194313237"  [ label = "AST: "] 
  "30064771148" -> "68719476821"  [ label = "AST: "] 
  "30064771149" -> "68719476822"  [ label = "AST: "] 
  "30064771149" -> "90194313238"  [ label = "AST: "] 
  "30064771149" -> "30064771150"  [ label = "AST: "] 
  "30064771149" -> "30064771152"  [ label = "AST: "] 
  "30064771150" -> "30064771151"  [ label = "AST: "] 
  "30064771150" -> "55834574859"  [ label = "AST: "] 
  "30064771151" -> "68719476823"  [ label = "AST: "] 
  "30064771151" -> "68719476824"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771152" -> "55834574860"  [ label = "AST: "] 
  "30064771153" -> "68719476825"  [ label = "AST: "] 
  "30064771153" -> "68719476826"  [ label = "AST: "] 
  "30064771154" -> "68719476827"  [ label = "AST: "] 
  "30064771154" -> "90194313239"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771154" -> "30064771157"  [ label = "AST: "] 
  "30064771155" -> "30064771156"  [ label = "AST: "] 
  "30064771155" -> "55834574861"  [ label = "AST: "] 
  "30064771156" -> "68719476828"  [ label = "AST: "] 
  "30064771156" -> "68719476829"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771157" -> "55834574862"  [ label = "AST: "] 
  "30064771158" -> "68719476830"  [ label = "AST: "] 
  "30064771158" -> "68719476831"  [ label = "AST: "] 
  "30064771159" -> "68719476832"  [ label = "AST: "] 
  "47244640264" -> "30064771160"  [ label = "AST: "] 
  "47244640264" -> "25769803788"  [ label = "AST: "] 
  "30064771160" -> "68719476833"  [ label = "AST: "] 
  "30064771160" -> "68719476834"  [ label = "AST: "] 
  "25769803788" -> "30064771161"  [ label = "AST: "] 
  "25769803788" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "68719476835"  [ label = "AST: "] 
  "30064771161" -> "90194313240"  [ label = "AST: "] 
  "30064771162" -> "68719476836"  [ label = "AST: "] 
  "30064771162" -> "90194313241"  [ label = "AST: "] 
  "146028888067" -> "90194313242"  [ label = "AST: "] 
  "30064771072" -> "55834574849"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771090"  [ label = "CFG: "] 
  "30064771087" -> "30064771091"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771080" -> "30064771086"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771091" -> "30064771093"  [ label = "CFG: "] 
  "30064771091" -> "30064771099"  [ label = "CFG: "] 
  "30064771102" -> "30064771106"  [ label = "CFG: "] 
  "30064771102" -> "30064771107"  [ label = "CFG: "] 
  "30064771108" -> "30064771112"  [ label = "CFG: "] 
  "30064771108" -> "30064771143"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "30064771143" -> "30064771144"  [ label = "CFG: "] 
  "30064771143" -> "146028888067"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "55834574849" -> "30064771075"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771096"  [ label = "CFG: "] 
  "30064771094" -> "30064771097"  [ label = "CFG: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771098" -> "30064771104"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771106" -> "146028888066"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "30064771110" -> "30064771115"  [ label = "CFG: "] 
  "30064771113" -> "30064771119"  [ label = "CFG: "] 
  "30064771117" -> "30064771126"  [ label = "CFG: "] 
  "30064771124" -> "30064771131"  [ label = "CFG: "] 
  "30064771129" -> "30064771137"  [ label = "CFG: "] 
  "30064771135" -> "30064771138"  [ label = "CFG: "] 
  "30064771138" -> "30064771139"  [ label = "CFG: "] 
  "30064771139" -> "30064771140"  [ label = "CFG: "] 
  "30064771144" -> "30064771145"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771099" -> "30064771100"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771101" -> "146028888065"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771105" -> "30064771103"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771114" -> "30064771116"  [ label = "CFG: "] 
  "30064771116" -> "30064771113"  [ label = "CFG: "] 
  "30064771118" -> "30064771122"  [ label = "CFG: "] 
  "30064771120" -> "30064771117"  [ label = "CFG: "] 
  "30064771125" -> "30064771128"  [ label = "CFG: "] 
  "30064771127" -> "30064771124"  [ label = "CFG: "] 
  "30064771130" -> "30064771134"  [ label = "CFG: "] 
  "30064771132" -> "30064771129"  [ label = "CFG: "] 
  "30064771136" -> "30064771135"  [ label = "CFG: "] 
  "30064771140" -> "30064771141"  [ label = "CFG: "] 
  "30064771140" -> "30064771109"  [ label = "CFG: "] 
  "30064771146" -> "30064771148"  [ label = "CFG: "] 
  "30064771146" -> "146028888067"  [ label = "CFG: "] 
  "30064771147" -> "30064771146"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771112" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771111"  [ label = "CFG: "] 
  "30064771115" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771114"  [ label = "CFG: "] 
  "30064771119" -> "55834574852"  [ label = "CFG: "] 
  "55834574852" -> "30064771118"  [ label = "CFG: "] 
  "30064771121" -> "30064771123"  [ label = "CFG: "] 
  "30064771123" -> "30064771120"  [ label = "CFG: "] 
  "30064771126" -> "55834574854"  [ label = "CFG: "] 
  "55834574854" -> "30064771125"  [ label = "CFG: "] 
  "30064771128" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771127"  [ label = "CFG: "] 
  "30064771131" -> "55834574856"  [ label = "CFG: "] 
  "55834574856" -> "30064771130"  [ label = "CFG: "] 
  "30064771133" -> "30064771132"  [ label = "CFG: "] 
  "30064771137" -> "55834574858"  [ label = "CFG: "] 
  "55834574858" -> "30064771136"  [ label = "CFG: "] 
  "30064771141" -> "30064771142"  [ label = "CFG: "] 
  "30064771142" -> "30064771109"  [ label = "CFG: "] 
  "30064771145" -> "30064771146"  [ label = "CFG: "] 
  "30064771148" -> "30064771151"  [ label = "CFG: "] 
  "30064771149" -> "30064771156"  [ label = "CFG: "] 
  "30064771154" -> "30064771159"  [ label = "CFG: "] 
  "30064771159" -> "30064771160"  [ label = "CFG: "] 
  "30064771122" -> "55834574853"  [ label = "CFG: "] 
  "55834574853" -> "30064771121"  [ label = "CFG: "] 
  "30064771134" -> "55834574857"  [ label = "CFG: "] 
  "55834574857" -> "30064771133"  [ label = "CFG: "] 
  "30064771150" -> "30064771153"  [ label = "CFG: "] 
  "30064771152" -> "30064771149"  [ label = "CFG: "] 
  "30064771155" -> "30064771158"  [ label = "CFG: "] 
  "30064771157" -> "30064771154"  [ label = "CFG: "] 
  "30064771160" -> "30064771161"  [ label = "CFG: "] 
  "30064771160" -> "30064771147"  [ label = "CFG: "] 
  "30064771151" -> "55834574859"  [ label = "CFG: "] 
  "55834574859" -> "30064771150"  [ label = "CFG: "] 
  "30064771153" -> "55834574860"  [ label = "CFG: "] 
  "55834574860" -> "30064771152"  [ label = "CFG: "] 
  "30064771156" -> "55834574861"  [ label = "CFG: "] 
  "55834574861" -> "30064771155"  [ label = "CFG: "] 
  "30064771158" -> "55834574862"  [ label = "CFG: "] 
  "55834574862" -> "30064771157"  [ label = "CFG: "] 
  "30064771161" -> "30064771162"  [ label = "CFG: "] 
  "30064771162" -> "30064771147"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: num_cpus"] 
  "115964116994" -> "128849018880"  [ label = "DDG: params"] 
  "30064771072" -> "128849018880"  [ label = "DDG: ss_size"] 
  "30064771072" -> "128849018880"  [ label = "DDG: params-&gt;per_cpu_save_state_size"] 
  "30064771072" -> "128849018880"  [ label = "DDG: ss_size = params-&gt;per_cpu_save_state_size"] 
  "30064771074" -> "128849018880"  [ label = "DDG: smm_entry_offset"] 
  "30064771074" -> "128849018880"  [ label = "DDG: params-&gt;smm_main_entry_offset"] 
  "30064771074" -> "128849018880"  [ label = "DDG: smm_entry_offset = params-&gt;smm_main_entry_offset"] 
  "30064771076" -> "128849018880"  [ label = "DDG: seg_count"] 
  "30064771076" -> "128849018880"  [ label = "DDG: seg_count = 0"] 
  "30064771077" -> "128849018880"  [ label = "DDG: segments"] 
  "30064771077" -> "128849018880"  [ label = "DDG: segments = 0"] 
  "30064771078" -> "128849018880"  [ label = "DDG: cpus_in_segment"] 
  "30064771078" -> "128849018880"  [ label = "DDG: cpus_in_segment = 0"] 
  "30064771079" -> "128849018880"  [ label = "DDG: base"] 
  "30064771079" -> "128849018880"  [ label = "DDG: smbase"] 
  "30064771079" -> "128849018880"  [ label = "DDG: base = smbase"] 
  "30064771080" -> "128849018880"  [ label = "DDG: &amp;_binary_smmstub_start"] 
  "30064771080" -> "128849018880"  [ label = "DDG: &amp;smm_stub"] 
  "30064771080" -> "128849018880"  [ label = "DDG: rmodule_parse(&amp;_binary_smmstub_start, &amp;smm_stub)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: BIOS_ERR"] 
  "30064771083" -> "128849018880"  [ label = "DDG: __func__"] 
  "30064771083" -> "128849018880"  [ label = "DDG: printk(BIOS_ERR, &quot;%s: unable to get SMM module size\n&quot;, __func__)"] 
  "30064771105" -> "128849018880"  [ label = "DDG: struct cpu_smm_info"] 
  "30064771143" -> "128849018880"  [ label = "DDG: CONFIG_DEFAULT_CONSOLE_LOGLEVEL"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "115964116994" -> "30064771072"  [ label = "DDG: params"] 
  "115964116994" -> "30064771074"  [ label = "DDG: params"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "115964116992" -> "30064771079"  [ label = "DDG: smbase"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: &amp;smm_stub"] 
  "30064771088" -> "30064771087"  [ label = "DDG: 0xFFFF - smm_entry_offset - ss_size"] 
  "30064771088" -> "30064771087"  [ label = "DDG: stub_size"] 
  "90194313242" -> "146028888067"  [ label = "DDG: 1"] 
  "111669149697" -> "146028888067"  [ label = "DDG: "] 
  "111669149697" -> "90194313242"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "90194313220" -> "146028888064"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771080" -> "30064771085"  [ label = "DDG: &amp;smm_stub"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771089" -> "30064771088"  [ label = "DDG: 0xFFFF - smm_entry_offset"] 
  "30064771089" -> "30064771088"  [ label = "DDG: ss_size"] 
  "30064771084" -> "30064771088"  [ label = "DDG: stub_size"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771087" -> "30064771091"  [ label = "DDG: available"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: available"] 
  "30064771093" -> "30064771092"  [ label = "DDG: ss_size"] 
  "30064771096" -> "30064771094"  [ label = "DDG: num_cpus"] 
  "30064771096" -> "30064771094"  [ label = "DDG: cpus_in_segment"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771096" -> "30064771102"  [ label = "DDG: num_cpus"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "90194313231" -> "146028888066"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888066"  [ label = "DDG: "] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771107" -> "30064771108"  [ label = "DDG: i"] 
  "30064771109" -> "30064771108"  [ label = "DDG: i"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771102" -> "30064771108"  [ label = "DDG: num_cpus"] 
  "30064771108" -> "30064771109"  [ label = "DDG: i"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771079" -> "30064771110"  [ label = "DDG: base"] 
  "30064771138" -> "30064771110"  [ label = "DDG: base"] 
  "30064771141" -> "30064771110"  [ label = "DDG: base"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771079" -> "30064771113"  [ label = "DDG: base"] 
  "30064771138" -> "30064771113"  [ label = "DDG: base"] 
  "30064771141" -> "30064771113"  [ label = "DDG: base"] 
  "30064771090" -> "30064771113"  [ label = "DDG: smm_entry_offset"] 
  "30064771123" -> "30064771113"  [ label = "DDG: smm_entry_offset"] 
  "30064771113" -> "30064771117"  [ label = "DDG: cpus[i].entry"] 
  "30064771123" -> "30064771117"  [ label = "DDG: smm_entry_offset"] 
  "30064771123" -> "30064771117"  [ label = "DDG: ss_size"] 
  "30064771113" -> "30064771124"  [ label = "DDG: cpus[i].entry"] 
  "30064771113" -> "30064771129"  [ label = "DDG: cpus[i].entry"] 
  "30064771088" -> "30064771129"  [ label = "DDG: stub_size"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771123" -> "30064771138"  [ label = "DDG: ss_size"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "111669149697" -> "30064771143"  [ label = "DDG: "] 
  "30064771098" -> "30064771143"  [ label = "DDG: BIOS_DEBUG"] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "111669149697" -> "90194313220"  [ label = "DDG: "] 
  "30064771090" -> "30064771089"  [ label = "DDG: 0xFFFF"] 
  "30064771090" -> "30064771089"  [ label = "DDG: smm_entry_offset"] 
  "30064771072" -> "30064771089"  [ label = "DDG: ss_size"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771096" -> "30064771097"  [ label = "DDG: cpus_in_segment"] 
  "30064771097" -> "30064771098"  [ label = "DDG: BIOS_DEBUG"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771097" -> "30064771098"  [ label = "DDG: __func__"] 
  "30064771094" -> "30064771098"  [ label = "DDG: segments"] 
  "90194313229" -> "146028888065"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771098" -> "30064771106"  [ label = "DDG: __func__"] 
  "111669149697" -> "90194313231"  [ label = "DDG: "] 
  "30064771079" -> "30064771138"  [ label = "DDG: base"] 
  "30064771141" -> "30064771138"  [ label = "DDG: base"] 
  "30064771076" -> "30064771139"  [ label = "DDG: seg_count"] 
  "30064771140" -> "30064771139"  [ label = "DDG: seg_count"] 
  "30064771142" -> "30064771139"  [ label = "DDG: seg_count"] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771074" -> "30064771090"  [ label = "DDG: smm_entry_offset"] 
  "30064771091" -> "30064771093"  [ label = "DDG: available"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771089" -> "30064771093"  [ label = "DDG: ss_size"] 
  "30064771096" -> "30064771095"  [ label = "DDG: num_cpus"] 
  "30064771096" -> "30064771095"  [ label = "DDG: cpus_in_segment"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771099" -> "30064771100"  [ label = "DDG: BIOS_ERR"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771100" -> "30064771101"  [ label = "DDG: BIOS_ERR"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "111669149697" -> "90194313229"  [ label = "DDG: "] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771079" -> "30064771116"  [ label = "DDG: base"] 
  "30064771138" -> "30064771116"  [ label = "DDG: base"] 
  "30064771141" -> "30064771116"  [ label = "DDG: base"] 
  "30064771090" -> "30064771116"  [ label = "DDG: smm_entry_offset"] 
  "30064771123" -> "30064771116"  [ label = "DDG: smm_entry_offset"] 
  "30064771113" -> "30064771120"  [ label = "DDG: cpus[i].entry"] 
  "30064771123" -> "30064771120"  [ label = "DDG: smm_entry_offset"] 
  "30064771123" -> "30064771120"  [ label = "DDG: ss_size"] 
  "30064771113" -> "30064771132"  [ label = "DDG: cpus[i].entry"] 
  "30064771088" -> "30064771132"  [ label = "DDG: stub_size"] 
  "111669149697" -> "30064771132"  [ label = "DDG: "] 
  "30064771139" -> "30064771140"  [ label = "DDG: seg_count"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771097" -> "30064771140"  [ label = "DDG: cpus_in_segment"] 
  "30064771123" -> "30064771141"  [ label = "DDG: smm_entry_offset"] 
  "111669149697" -> "30064771141"  [ label = "DDG: "] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "111669149697" -> "30064771145"  [ label = "DDG: "] 
  "30064771145" -> "30064771146"  [ label = "DDG: i"] 
  "30064771147" -> "30064771146"  [ label = "DDG: i"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771108" -> "30064771146"  [ label = "DDG: num_cpus"] 
  "30064771148" -> "30064771147"  [ label = "DDG: i"] 
  "111669149697" -> "30064771147"  [ label = "DDG: "] 
  "115964116993" -> "30064771096"  [ label = "DDG: num_cpus"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771092" -> "30064771096"  [ label = "DDG: cpus_in_segment"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771090" -> "30064771123"  [ label = "DDG: smm_entry_offset"] 
  "30064771093" -> "30064771123"  [ label = "DDG: ss_size"] 
  "30064771138" -> "30064771141"  [ label = "DDG: base"] 
  "30064771143" -> "30064771148"  [ label = "DDG: BIOS_DEBUG"] 
  "30064771154" -> "30064771148"  [ label = "DDG: BIOS_DEBUG"] 
  "30064771161" -> "30064771148"  [ label = "DDG: BIOS_DEBUG"] 
  "111669149697" -> "30064771148"  [ label = "DDG: "] 
  "30064771146" -> "30064771148"  [ label = "DDG: i"] 
  "30064771148" -> "30064771149"  [ label = "DDG: BIOS_DEBUG"] 
  "111669149697" -> "30064771149"  [ label = "DDG: "] 
  "30064771149" -> "30064771154"  [ label = "DDG: BIOS_DEBUG"] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "30064771144" -> "30064771159"  [ label = "DDG: seg_count"] 
  "30064771160" -> "30064771159"  [ label = "DDG: seg_count"] 
  "30064771162" -> "30064771159"  [ label = "DDG: seg_count"] 
  "111669149697" -> "30064771159"  [ label = "DDG: "] 
  "30064771159" -> "30064771160"  [ label = "DDG: seg_count"] 
  "111669149697" -> "30064771160"  [ label = "DDG: "] 
  "30064771097" -> "30064771160"  [ label = "DDG: cpus_in_segment"] 
  "30064771140" -> "30064771160"  [ label = "DDG: cpus_in_segment"] 
  "111669149697" -> "30064771162"  [ label = "DDG: "] 
  "30064771154" -> "30064771161"  [ label = "DDG: BIOS_DEBUG"] 
  "111669149697" -> "30064771161"  [ label = "DDG: "] 
  "30064771080" -> "146028888064"  [ label = "CDG: "] 
  "30064771080" -> "30064771083"  [ label = "CDG: "] 
  "30064771080" -> "30064771086"  [ label = "CDG: "] 
  "30064771080" -> "30064771087"  [ label = "CDG: "] 
  "30064771080" -> "30064771084"  [ label = "CDG: "] 
  "30064771080" -> "30064771085"  [ label = "CDG: "] 
  "30064771080" -> "30064771090"  [ label = "CDG: "] 
  "30064771080" -> "30064771091"  [ label = "CDG: "] 
  "30064771080" -> "30064771088"  [ label = "CDG: "] 
  "30064771080" -> "30064771089"  [ label = "CDG: "] 
  "30064771091" -> "146028888065"  [ label = "CDG: "] 
  "30064771091" -> "30064771094"  [ label = "CDG: "] 
  "30064771091" -> "30064771095"  [ label = "CDG: "] 
  "30064771091" -> "30064771092"  [ label = "CDG: "] 
  "30064771091" -> "30064771093"  [ label = "CDG: "] 
  "30064771091" -> "30064771098"  [ label = "CDG: "] 
  "30064771091" -> "30064771099"  [ label = "CDG: "] 
  "30064771091" -> "30064771096"  [ label = "CDG: "] 
  "30064771091" -> "30064771097"  [ label = "CDG: "] 
  "30064771091" -> "30064771102"  [ label = "CDG: "] 
  "30064771091" -> "30064771103"  [ label = "CDG: "] 
  "30064771091" -> "30064771100"  [ label = "CDG: "] 
  "30064771091" -> "30064771101"  [ label = "CDG: "] 
  "30064771091" -> "30064771104"  [ label = "CDG: "] 
  "30064771091" -> "30064771105"  [ label = "CDG: "] 
  "30064771102" -> "146028888066"  [ label = "CDG: "] 
  "30064771102" -> "146028888067"  [ label = "CDG: "] 
  "30064771102" -> "30064771143"  [ label = "CDG: "] 
  "30064771102" -> "30064771108"  [ label = "CDG: "] 
  "30064771102" -> "30064771106"  [ label = "CDG: "] 
  "30064771102" -> "30064771107"  [ label = "CDG: "] 
  "30064771108" -> "55834574858"  [ label = "CDG: "] 
  "30064771108" -> "55834574852"  [ label = "CDG: "] 
  "30064771108" -> "55834574853"  [ label = "CDG: "] 
  "30064771108" -> "55834574850"  [ label = "CDG: "] 
  "30064771108" -> "55834574851"  [ label = "CDG: "] 
  "30064771108" -> "55834574856"  [ label = "CDG: "] 
  "30064771108" -> "55834574857"  [ label = "CDG: "] 
  "30064771108" -> "55834574854"  [ label = "CDG: "] 
  "30064771108" -> "55834574855"  [ label = "CDG: "] 
  "30064771108" -> "30064771140"  [ label = "CDG: "] 
  "30064771108" -> "30064771134"  [ label = "CDG: "] 
  "30064771108" -> "30064771135"  [ label = "CDG: "] 
  "30064771108" -> "30064771132"  [ label = "CDG: "] 
  "30064771108" -> "30064771133"  [ label = "CDG: "] 
  "30064771108" -> "30064771138"  [ label = "CDG: "] 
  "30064771108" -> "30064771139"  [ label = "CDG: "] 
  "30064771108" -> "30064771136"  [ label = "CDG: "] 
  "30064771108" -> "30064771137"  [ label = "CDG: "] 
  "30064771108" -> "30064771110"  [ label = "CDG: "] 
  "30064771108" -> "30064771111"  [ label = "CDG: "] 
  "30064771108" -> "30064771108"  [ label = "CDG: "] 
  "30064771108" -> "30064771109"  [ label = "CDG: "] 
  "30064771108" -> "30064771114"  [ label = "CDG: "] 
  "30064771108" -> "30064771115"  [ label = "CDG: "] 
  "30064771108" -> "30064771112"  [ label = "CDG: "] 
  "30064771108" -> "30064771113"  [ label = "CDG: "] 
  "30064771108" -> "30064771126"  [ label = "CDG: "] 
  "30064771108" -> "30064771127"  [ label = "CDG: "] 
  "30064771108" -> "30064771124"  [ label = "CDG: "] 
  "30064771108" -> "30064771125"  [ label = "CDG: "] 
  "30064771108" -> "30064771130"  [ label = "CDG: "] 
  "30064771108" -> "30064771131"  [ label = "CDG: "] 
  "30064771108" -> "30064771128"  [ label = "CDG: "] 
  "30064771108" -> "30064771129"  [ label = "CDG: "] 
  "30064771108" -> "30064771118"  [ label = "CDG: "] 
  "30064771108" -> "30064771119"  [ label = "CDG: "] 
  "30064771108" -> "30064771116"  [ label = "CDG: "] 
  "30064771108" -> "30064771117"  [ label = "CDG: "] 
  "30064771108" -> "30064771122"  [ label = "CDG: "] 
  "30064771108" -> "30064771123"  [ label = "CDG: "] 
  "30064771108" -> "30064771120"  [ label = "CDG: "] 
  "30064771108" -> "30064771121"  [ label = "CDG: "] 
  "30064771143" -> "30064771146"  [ label = "CDG: "] 
  "30064771143" -> "30064771144"  [ label = "CDG: "] 
  "30064771143" -> "30064771145"  [ label = "CDG: "] 
  "30064771140" -> "30064771142"  [ label = "CDG: "] 
  "30064771140" -> "30064771141"  [ label = "CDG: "] 
  "30064771146" -> "55834574860"  [ label = "CDG: "] 
  "30064771146" -> "55834574861"  [ label = "CDG: "] 
  "30064771146" -> "55834574859"  [ label = "CDG: "] 
  "30064771146" -> "55834574862"  [ label = "CDG: "] 
  "30064771146" -> "30064771146"  [ label = "CDG: "] 
  "30064771146" -> "30064771147"  [ label = "CDG: "] 
  "30064771146" -> "30064771158"  [ label = "CDG: "] 
  "30064771146" -> "30064771159"  [ label = "CDG: "] 
  "30064771146" -> "30064771156"  [ label = "CDG: "] 
  "30064771146" -> "30064771157"  [ label = "CDG: "] 
  "30064771146" -> "30064771160"  [ label = "CDG: "] 
  "30064771146" -> "30064771150"  [ label = "CDG: "] 
  "30064771146" -> "30064771151"  [ label = "CDG: "] 
  "30064771146" -> "30064771148"  [ label = "CDG: "] 
  "30064771146" -> "30064771149"  [ label = "CDG: "] 
  "30064771146" -> "30064771154"  [ label = "CDG: "] 
  "30064771146" -> "30064771155"  [ label = "CDG: "] 
  "30064771146" -> "30064771152"  [ label = "CDG: "] 
  "30064771146" -> "30064771153"  [ label = "CDG: "] 
  "30064771160" -> "30064771162"  [ label = "CDG: "] 
  "30064771160" -> "30064771161"  [ label = "CDG: "] 
}
"""
)
