[33mval[0m [36mres1207[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "ValidateInputTensor" {  
"111669149697" [label = <(METHOD,ValidateInputTensor)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const Tensor&amp; tensor)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const std::string&amp; tensor_name)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,const Tensor&amp; rhs)<SUB>3</SUB>> ]
"25769803777" [label = <(BLOCK,{
    const int ndims = rhs.dims();
    if (ten...,{
    const int ndims = rhs.dims();
    if (ten...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,const int ndims: int)<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,ndims = rhs.dims())<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,ndims,ndims = rhs.dims())<SUB>4</SUB>> ]
"30064771073" [label = <(dims,rhs.dims())<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,rhs,rhs.dims())<SUB>4</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (tensor.dims() != ndims))<SUB>5</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.notEquals,tensor.dims() != ndims)<SUB>5</SUB>> ]
"30064771075" [label = <(dims,tensor.dims())<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,tensor,tensor.dims())<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,ndims,tensor.dims() != ndims)<SUB>5</SUB>> ]
"25769803778" [label = <(BLOCK,{
      return errors::InvalidArgument(tensor_n...,{
      return errors::InvalidArgument(tensor_n...)<SUB>5</SUB>> ]
"146028888064" [label = <(RETURN,return errors::InvalidArgument(tensor_name,
   ...,return errors::InvalidArgument(tensor_name,
   ...)<SUB>6</SUB>> ]
"30064771076" [label = <(InvalidArgument,errors::InvalidArgument(tensor_name,
          ...)<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,tensor_name,errors::InvalidArgument(tensor_name,
          ...)<SUB>6</SUB>> ]
"90194313216" [label = <(LITERAL,&quot; must have same rank as rhs, but got &quot;,errors::InvalidArgument(tensor_name,
          ...)<SUB>7</SUB>> ]
"30064771077" [label = <(dims,tensor.dims())<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,tensor,tensor.dims())<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(tensor_name,
          ...)<SUB>8</SUB>> ]
"68719476742" [label = <(IDENTIFIER,ndims,errors::InvalidArgument(tensor_name,
          ...)<SUB>8</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; ndims - 2;i++))<SUB>10</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>> ]
"94489280513" [label = <(LOCAL,int i: int)<SUB>10</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,i,i = 0)<SUB>10</SUB>> ]
"90194313218" [label = <(LITERAL,0,i = 0)<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.lessThan,i &lt; ndims - 2)<SUB>10</SUB>> ]
"68719476744" [label = <(IDENTIFIER,i,i &lt; ndims - 2)<SUB>10</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.subtraction,ndims - 2)<SUB>10</SUB>> ]
"68719476745" [label = <(IDENTIFIER,ndims,ndims - 2)<SUB>10</SUB>> ]
"90194313219" [label = <(LITERAL,2,ndims - 2)<SUB>10</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>> ]
"68719476746" [label = <(IDENTIFIER,i,i++)<SUB>10</SUB>> ]
"25769803780" [label = <(BLOCK,{
      if (tensor.dim_size(i) != rhs.dim_size(...,{
      if (tensor.dim_size(i) != rhs.dim_size(...)<SUB>10</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (tensor.dim_size(i) != rhs.dim_size(i)))<SUB>11</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.notEquals,tensor.dim_size(i) != rhs.dim_size(i))<SUB>11</SUB>> ]
"30064771083" [label = <(dim_size,tensor.dim_size(i))<SUB>11</SUB>> ]
"68719476747" [label = <(IDENTIFIER,tensor,tensor.dim_size(i))<SUB>11</SUB>> ]
"68719476748" [label = <(IDENTIFIER,i,tensor.dim_size(i))<SUB>11</SUB>> ]
"30064771084" [label = <(dim_size,rhs.dim_size(i))<SUB>11</SUB>> ]
"68719476749" [label = <(IDENTIFIER,rhs,rhs.dim_size(i))<SUB>11</SUB>> ]
"68719476750" [label = <(IDENTIFIER,i,rhs.dim_size(i))<SUB>11</SUB>> ]
"25769803781" [label = <(BLOCK,{
        return errors::InvalidArgument(
     ...,{
        return errors::InvalidArgument(
     ...)<SUB>11</SUB>> ]
"146028888065" [label = <(RETURN,return errors::InvalidArgument(
            ten...,return errors::InvalidArgument(
            ten...)<SUB>12</SUB>> ]
"30064771085" [label = <(InvalidArgument,errors::InvalidArgument(
            tensor_nam...)<SUB>12</SUB>> ]
"68719476751" [label = <(IDENTIFIER,tensor_name,errors::InvalidArgument(
            tensor_nam...)<SUB>13</SUB>> ]
"90194313220" [label = <(LITERAL,&quot; must have same outer dimensions as rhs, but f...,errors::InvalidArgument(
            tensor_nam...)<SUB>14</SUB>> ]
"68719476752" [label = <(IDENTIFIER,i,errors::InvalidArgument(
            tensor_nam...)<SUB>14</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;, got &quot;,errors::InvalidArgument(
            tensor_nam...)<SUB>15</SUB>> ]
"30064771086" [label = <(dim_size,tensor.dim_size(i))<SUB>15</SUB>> ]
"68719476753" [label = <(IDENTIFIER,tensor,tensor.dim_size(i))<SUB>15</SUB>> ]
"68719476754" [label = <(IDENTIFIER,i,tensor.dim_size(i))<SUB>15</SUB>> ]
"90194313222" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(
            tensor_nam...)<SUB>15</SUB>> ]
"30064771087" [label = <(dim_size,rhs.dim_size(i))<SUB>15</SUB>> ]
"68719476755" [label = <(IDENTIFIER,rhs,rhs.dim_size(i))<SUB>15</SUB>> ]
"68719476756" [label = <(IDENTIFIER,i,rhs.dim_size(i))<SUB>15</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (tensor.dim_size(ndims - 2) != 1))<SUB>18</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.notEquals,tensor.dim_size(ndims - 2) != 1)<SUB>18</SUB>> ]
"30064771089" [label = <(dim_size,tensor.dim_size(ndims - 2))<SUB>18</SUB>> ]
"68719476757" [label = <(IDENTIFIER,tensor,tensor.dim_size(ndims - 2))<SUB>18</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.subtraction,ndims - 2)<SUB>18</SUB>> ]
"68719476758" [label = <(IDENTIFIER,ndims,ndims - 2)<SUB>18</SUB>> ]
"90194313223" [label = <(LITERAL,2,ndims - 2)<SUB>18</SUB>> ]
"90194313224" [label = <(LITERAL,1,tensor.dim_size(ndims - 2) != 1)<SUB>18</SUB>> ]
"25769803782" [label = <(BLOCK,{
      return errors::InvalidArgument(
       ...,{
      return errors::InvalidArgument(
       ...)<SUB>18</SUB>> ]
"146028888066" [label = <(RETURN,return errors::InvalidArgument(
          tenso...,return errors::InvalidArgument(
          tenso...)<SUB>19</SUB>> ]
"30064771091" [label = <(InvalidArgument,errors::InvalidArgument(
          tensor_name,...)<SUB>19</SUB>> ]
"68719476759" [label = <(IDENTIFIER,tensor_name,errors::InvalidArgument(
          tensor_name,...)<SUB>20</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;'s second-to-last dimension must be 1, but got &quot;,errors::InvalidArgument(
          tensor_name,...)<SUB>20</SUB>> ]
"30064771092" [label = <(dim_size,tensor.dim_size(ndims - 2))<SUB>21</SUB>> ]
"68719476760" [label = <(IDENTIFIER,tensor,tensor.dim_size(ndims - 2))<SUB>21</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.subtraction,ndims - 2)<SUB>21</SUB>> ]
"68719476761" [label = <(IDENTIFIER,ndims,ndims - 2)<SUB>21</SUB>> ]
"90194313226" [label = <(LITERAL,2,ndims - 2)<SUB>21</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (tensor.dim_size(ndims - 1) != rhs.dim_size(ndims - 2)))<SUB>23</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.notEquals,tensor.dim_size(ndims - 1) != rhs.dim_size(ndim...)<SUB>23</SUB>> ]
"30064771095" [label = <(dim_size,tensor.dim_size(ndims - 1))<SUB>23</SUB>> ]
"68719476762" [label = <(IDENTIFIER,tensor,tensor.dim_size(ndims - 1))<SUB>23</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.subtraction,ndims - 1)<SUB>23</SUB>> ]
"68719476763" [label = <(IDENTIFIER,ndims,ndims - 1)<SUB>23</SUB>> ]
"90194313227" [label = <(LITERAL,1,ndims - 1)<SUB>23</SUB>> ]
"30064771097" [label = <(dim_size,rhs.dim_size(ndims - 2))<SUB>23</SUB>> ]
"68719476764" [label = <(IDENTIFIER,rhs,rhs.dim_size(ndims - 2))<SUB>23</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.subtraction,ndims - 2)<SUB>23</SUB>> ]
"68719476765" [label = <(IDENTIFIER,ndims,ndims - 2)<SUB>23</SUB>> ]
"90194313228" [label = <(LITERAL,2,ndims - 2)<SUB>23</SUB>> ]
"25769803783" [label = <(BLOCK,{
      return errors::InvalidArgument(tensor_n...,{
      return errors::InvalidArgument(tensor_n...)<SUB>23</SUB>> ]
"146028888067" [label = <(RETURN,return errors::InvalidArgument(tensor_name,
   ...,return errors::InvalidArgument(tensor_name,
   ...)<SUB>24</SUB>> ]
"30064771099" [label = <(InvalidArgument,errors::InvalidArgument(tensor_name,
          ...)<SUB>24</SUB>> ]
"68719476766" [label = <(IDENTIFIER,tensor_name,errors::InvalidArgument(tensor_name,
          ...)<SUB>24</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;'s last dimension size must be rhs's &quot;
       ...,errors::InvalidArgument(tensor_name,
          ...)<SUB>25</SUB>> ]
"30064771100" [label = <(dim_size,tensor.dim_size(ndims - 1))<SUB>27</SUB>> ]
"68719476767" [label = <(IDENTIFIER,tensor,tensor.dim_size(ndims - 1))<SUB>27</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.subtraction,ndims - 1)<SUB>27</SUB>> ]
"68719476768" [label = <(IDENTIFIER,ndims,ndims - 1)<SUB>27</SUB>> ]
"90194313230" [label = <(LITERAL,1,ndims - 1)<SUB>27</SUB>> ]
"90194313231" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(tensor_name,
          ...)<SUB>27</SUB>> ]
"30064771102" [label = <(dim_size,rhs.dim_size(ndims - 2))<SUB>28</SUB>> ]
"68719476769" [label = <(IDENTIFIER,rhs,rhs.dim_size(ndims - 2))<SUB>28</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.subtraction,ndims - 2)<SUB>28</SUB>> ]
"68719476770" [label = <(IDENTIFIER,ndims,ndims - 2)<SUB>28</SUB>> ]
"90194313232" [label = <(LITERAL,2,ndims - 2)<SUB>28</SUB>> ]
"146028888068" [label = <(RETURN,return Status::OK();,return Status::OK();)<SUB>30</SUB>> ]
"30064771104" [label = <(OK,Status::OK())<SUB>30</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "146028888068"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "47244640256" -> "30064771074"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "90194313216"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "90194313217"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "30064771079"  [ label = "AST: "] 
  "47244640257" -> "30064771081"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "25769803779" -> "94489280513"  [ label = "AST: "] 
  "25769803779" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "90194313218"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "90194313219"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "25769803780" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771082"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "68719476750"  [ label = "AST: "] 
  "25769803781" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476751"  [ label = "AST: "] 
  "30064771085" -> "90194313220"  [ label = "AST: "] 
  "30064771085" -> "68719476752"  [ label = "AST: "] 
  "30064771085" -> "90194313221"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "90194313222"  [ label = "AST: "] 
  "30064771085" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "68719476753"  [ label = "AST: "] 
  "30064771086" -> "68719476754"  [ label = "AST: "] 
  "30064771087" -> "68719476755"  [ label = "AST: "] 
  "30064771087" -> "68719476756"  [ label = "AST: "] 
  "47244640259" -> "30064771088"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "90194313224"  [ label = "AST: "] 
  "30064771089" -> "68719476757"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476758"  [ label = "AST: "] 
  "30064771090" -> "90194313223"  [ label = "AST: "] 
  "25769803782" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476759"  [ label = "AST: "] 
  "30064771091" -> "90194313225"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476760"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476761"  [ label = "AST: "] 
  "30064771093" -> "90194313226"  [ label = "AST: "] 
  "47244640260" -> "30064771094"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "30064771097"  [ label = "AST: "] 
  "30064771095" -> "68719476762"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476763"  [ label = "AST: "] 
  "30064771096" -> "90194313227"  [ label = "AST: "] 
  "30064771097" -> "68719476764"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476765"  [ label = "AST: "] 
  "30064771098" -> "90194313228"  [ label = "AST: "] 
  "25769803783" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476766"  [ label = "AST: "] 
  "30064771099" -> "90194313229"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "90194313231"  [ label = "AST: "] 
  "30064771099" -> "30064771102"  [ label = "AST: "] 
  "30064771100" -> "68719476767"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "68719476768"  [ label = "AST: "] 
  "30064771101" -> "90194313230"  [ label = "AST: "] 
  "30064771102" -> "68719476769"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476770"  [ label = "AST: "] 
  "30064771103" -> "90194313232"  [ label = "AST: "] 
  "146028888068" -> "30064771104"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771074" -> "30064771078"  [ label = "CFG: "] 
  "30064771079" -> "30064771083"  [ label = "CFG: "] 
  "30064771079" -> "30064771090"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771088" -> "30064771093"  [ label = "CFG: "] 
  "30064771088" -> "30064771096"  [ label = "CFG: "] 
  "30064771094" -> "30064771104"  [ label = "CFG: "] 
  "30064771094" -> "30064771101"  [ label = "CFG: "] 
  "30064771104" -> "146028888068"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771095" -> "30064771098"  [ label = "CFG: "] 
  "30064771097" -> "30064771094"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771076" -> "146028888064"  [ label = "CFG: "] 
  "30064771082" -> "30064771086"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771091" -> "146028888066"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771099" -> "146028888067"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771084" -> "30064771082"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771100" -> "30064771103"  [ label = "CFG: "] 
  "30064771102" -> "30064771099"  [ label = "CFG: "] 
  "30064771085" -> "146028888065"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771087" -> "30064771085"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771073" -> "128849018880"  [ label = "DDG: rhs"] 
  "30064771072" -> "128849018880"  [ label = "DDG: rhs.dims()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: ndims = rhs.dims()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: tensor.dims() != ndims"] 
  "30064771076" -> "128849018880"  [ label = "DDG: tensor_name"] 
  "30064771077" -> "128849018880"  [ label = "DDG: tensor"] 
  "30064771076" -> "128849018880"  [ label = "DDG: tensor.dims()"] 
  "30064771076" -> "128849018880"  [ label = "DDG: ndims"] 
  "30064771076" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(tensor_name,
                                     &quot; must have same rank as rhs, but got &quot;,
                                     tensor.dims(), &quot; and &quot;, ndims)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: rhs"] 
  "30064771104" -> "146028888068"  [ label = "DDG: Status::OK()"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "115964116994" -> "30064771073"  [ label = "DDG: rhs"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: tensor"] 
  "30064771072" -> "30064771074"  [ label = "DDG: ndims"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771076" -> "146028888064"  [ label = "DDG: errors::InvalidArgument(tensor_name,
                                     &quot; must have same rank as rhs, but got &quot;,
                                     tensor.dims(), &quot; and &quot;, ndims)"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771078" -> "30064771079"  [ label = "DDG: i"] 
  "30064771081" -> "30064771079"  [ label = "DDG: i"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: ndims"] 
  "30064771080" -> "30064771079"  [ label = "DDG: 2"] 
  "30064771084" -> "30064771081"  [ label = "DDG: i"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771089" -> "30064771088"  [ label = "DDG: tensor"] 
  "30064771089" -> "30064771088"  [ label = "DDG: ndims - 2"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771091" -> "146028888066"  [ label = "DDG: errors::InvalidArgument(
          tensor_name, &quot;'s second-to-last dimension must be 1, but got &quot;,
          tensor.dim_size(ndims - 2))"] 
  "30064771095" -> "30064771094"  [ label = "DDG: tensor"] 
  "30064771095" -> "30064771094"  [ label = "DDG: ndims - 1"] 
  "30064771097" -> "30064771094"  [ label = "DDG: rhs"] 
  "30064771097" -> "30064771094"  [ label = "DDG: ndims - 2"] 
  "30064771099" -> "146028888067"  [ label = "DDG: errors::InvalidArgument(tensor_name,
                                     &quot;'s last dimension size must be rhs's &quot;
                                     &quot;second-to-last dimension size, but got &quot;,
                                     tensor.dim_size(ndims - 1), &quot; and &quot;,
                                     rhs.dim_size(ndims - 2))"] 
  "115964116992" -> "30064771075"  [ label = "DDG: tensor"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771074" -> "30064771080"  [ label = "DDG: ndims"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771075" -> "30064771089"  [ label = "DDG: tensor"] 
  "30064771083" -> "30064771089"  [ label = "DDG: tensor"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771090" -> "30064771089"  [ label = "DDG: ndims"] 
  "30064771090" -> "30064771089"  [ label = "DDG: 2"] 
  "30064771089" -> "30064771095"  [ label = "DDG: tensor"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771096" -> "30064771095"  [ label = "DDG: ndims"] 
  "30064771096" -> "30064771095"  [ label = "DDG: 1"] 
  "30064771073" -> "30064771097"  [ label = "DDG: rhs"] 
  "30064771084" -> "30064771097"  [ label = "DDG: rhs"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771098" -> "30064771097"  [ label = "DDG: ndims"] 
  "30064771098" -> "30064771097"  [ label = "DDG: 2"] 
  "115964116993" -> "30064771076"  [ label = "DDG: tensor_name"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: tensor"] 
  "30064771074" -> "30064771076"  [ label = "DDG: ndims"] 
  "30064771083" -> "30064771082"  [ label = "DDG: tensor"] 
  "30064771083" -> "30064771082"  [ label = "DDG: i"] 
  "30064771084" -> "30064771082"  [ label = "DDG: rhs"] 
  "30064771084" -> "30064771082"  [ label = "DDG: i"] 
  "30064771085" -> "146028888065"  [ label = "DDG: errors::InvalidArgument(
            tensor_name,
            &quot; must have same outer dimensions as rhs, but for index &quot;, i,
            &quot;, got &quot;, tensor.dim_size(i), &quot; and &quot;, rhs.dim_size(i))"] 
  "30064771080" -> "30064771090"  [ label = "DDG: ndims"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "115964116993" -> "30064771091"  [ label = "DDG: tensor_name"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771092" -> "30064771091"  [ label = "DDG: tensor"] 
  "30064771092" -> "30064771091"  [ label = "DDG: ndims - 2"] 
  "30064771090" -> "30064771096"  [ label = "DDG: ndims"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771096" -> "30064771098"  [ label = "DDG: ndims"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "115964116993" -> "30064771099"  [ label = "DDG: tensor_name"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771100" -> "30064771099"  [ label = "DDG: tensor"] 
  "30064771100" -> "30064771099"  [ label = "DDG: ndims - 1"] 
  "30064771102" -> "30064771099"  [ label = "DDG: rhs"] 
  "30064771102" -> "30064771099"  [ label = "DDG: ndims - 2"] 
  "30064771075" -> "30064771077"  [ label = "DDG: tensor"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771075" -> "30064771083"  [ label = "DDG: tensor"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771079" -> "30064771083"  [ label = "DDG: i"] 
  "30064771073" -> "30064771084"  [ label = "DDG: rhs"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771083" -> "30064771084"  [ label = "DDG: i"] 
  "30064771089" -> "30064771092"  [ label = "DDG: tensor"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: ndims"] 
  "30064771093" -> "30064771092"  [ label = "DDG: 2"] 
  "30064771095" -> "30064771100"  [ label = "DDG: tensor"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: ndims"] 
  "30064771101" -> "30064771100"  [ label = "DDG: 1"] 
  "30064771097" -> "30064771102"  [ label = "DDG: rhs"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771103" -> "30064771102"  [ label = "DDG: ndims"] 
  "30064771103" -> "30064771102"  [ label = "DDG: 2"] 
  "115964116993" -> "30064771085"  [ label = "DDG: tensor_name"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771087" -> "30064771085"  [ label = "DDG: i"] 
  "30064771086" -> "30064771085"  [ label = "DDG: tensor"] 
  "30064771086" -> "30064771085"  [ label = "DDG: i"] 
  "30064771087" -> "30064771085"  [ label = "DDG: rhs"] 
  "30064771090" -> "30064771093"  [ label = "DDG: ndims"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771098" -> "30064771101"  [ label = "DDG: ndims"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771101" -> "30064771103"  [ label = "DDG: ndims"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771083" -> "30064771086"  [ label = "DDG: tensor"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771084" -> "30064771086"  [ label = "DDG: i"] 
  "30064771084" -> "30064771087"  [ label = "DDG: rhs"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771086" -> "30064771087"  [ label = "DDG: i"] 
  "30064771074" -> "146028888064"  [ label = "CDG: "] 
  "30064771074" -> "30064771076"  [ label = "CDG: "] 
  "30064771074" -> "30064771077"  [ label = "CDG: "] 
  "30064771074" -> "30064771080"  [ label = "CDG: "] 
  "30064771074" -> "30064771078"  [ label = "CDG: "] 
  "30064771074" -> "30064771079"  [ label = "CDG: "] 
  "30064771079" -> "30064771090"  [ label = "CDG: "] 
  "30064771079" -> "30064771088"  [ label = "CDG: "] 
  "30064771079" -> "30064771089"  [ label = "CDG: "] 
  "30064771079" -> "30064771084"  [ label = "CDG: "] 
  "30064771079" -> "30064771082"  [ label = "CDG: "] 
  "30064771079" -> "30064771083"  [ label = "CDG: "] 
  "30064771088" -> "146028888066"  [ label = "CDG: "] 
  "30064771088" -> "30064771098"  [ label = "CDG: "] 
  "30064771088" -> "30064771096"  [ label = "CDG: "] 
  "30064771088" -> "30064771097"  [ label = "CDG: "] 
  "30064771088" -> "30064771094"  [ label = "CDG: "] 
  "30064771088" -> "30064771095"  [ label = "CDG: "] 
  "30064771088" -> "30064771092"  [ label = "CDG: "] 
  "30064771088" -> "30064771093"  [ label = "CDG: "] 
  "30064771088" -> "30064771091"  [ label = "CDG: "] 
  "30064771094" -> "146028888068"  [ label = "CDG: "] 
  "30064771094" -> "146028888067"  [ label = "CDG: "] 
  "30064771094" -> "30064771104"  [ label = "CDG: "] 
  "30064771094" -> "30064771102"  [ label = "CDG: "] 
  "30064771094" -> "30064771103"  [ label = "CDG: "] 
  "30064771094" -> "30064771100"  [ label = "CDG: "] 
  "30064771094" -> "30064771101"  [ label = "CDG: "] 
  "30064771094" -> "30064771099"  [ label = "CDG: "] 
  "30064771082" -> "146028888065"  [ label = "CDG: "] 
  "30064771082" -> "30064771086"  [ label = "CDG: "] 
  "30064771082" -> "30064771087"  [ label = "CDG: "] 
  "30064771082" -> "30064771085"  [ label = "CDG: "] 
  "30064771082" -> "30064771080"  [ label = "CDG: "] 
  "30064771082" -> "30064771081"  [ label = "CDG: "] 
  "30064771082" -> "30064771079"  [ label = "CDG: "] 
}
"""
)
