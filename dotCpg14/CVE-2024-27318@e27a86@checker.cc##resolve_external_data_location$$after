[33mval[0m [36mres1337[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "resolve_external_data_location" {  
"111669149697" [label = <(METHOD,resolve_external_data_location)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const std::string&amp; base_dir)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,const std::string&amp; location)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,const std::string&amp; tensor_name)<SUB>4</SUB>> ]
"25769803777" [label = <(BLOCK,{
#ifdef _WIN32
  auto file_path = std::filesys...,{
#ifdef _WIN32
  auto file_path = std::filesys...)<SUB>4</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (location.empty()))<SUB>38</SUB>> ]
"30064771072" [label = <(empty,location.empty())<SUB>38</SUB>> ]
"68719476736" [label = <(IDENTIFIER,location,location.empty())<SUB>38</SUB>> ]
"25769803778" [label = <(BLOCK,{
    fail_check(&quot;Location of external TensorPr...,{
    fail_check(&quot;Location of external TensorPr...)<SUB>38</SUB>> ]
"30064771073" [label = <(fail_check,fail_check(&quot;Location of external TensorProto ( ...)<SUB>39</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Location of external TensorProto ( tensor name: &quot;,fail_check(&quot;Location of external TensorProto ( ...)<SUB>39</SUB>> ]
"68719476737" [label = <(IDENTIFIER,tensor_name,fail_check(&quot;Location of external TensorProto ( ...)<SUB>39</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;) should not be empty.&quot;,fail_check(&quot;Location of external TensorProto ( ...)<SUB>39</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>40</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (location[0] == '/'))<SUB>40</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.equals,location[0] == '/')<SUB>40</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.indirectIndexAccess,location[0])<SUB>40</SUB>> ]
"68719476738" [label = <(IDENTIFIER,location,location[0] == '/')<SUB>40</SUB>> ]
"90194313218" [label = <(LITERAL,0,location[0] == '/')<SUB>40</SUB>> ]
"90194313219" [label = <(LITERAL,'/',location[0] == '/')<SUB>40</SUB>> ]
"25769803780" [label = <(BLOCK,{
    fail_check(
        &quot;Location of external...,{
    fail_check(
        &quot;Location of external...)<SUB>40</SUB>> ]
"30064771076" [label = <(fail_check,fail_check(
        &quot;Location of external Tenso...)<SUB>41</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;Location of external TensorProto ( tensor name: &quot;,fail_check(
        &quot;Location of external Tenso...)<SUB>42</SUB>> ]
"68719476739" [label = <(IDENTIFIER,tensor_name,fail_check(
        &quot;Location of external Tenso...)<SUB>43</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;) should be a relative path, but it is an abso...,fail_check(
        &quot;Location of external Tenso...)<SUB>44</SUB>> ]
"68719476740" [label = <(IDENTIFIER,location,fail_check(
        &quot;Location of external Tenso...)<SUB>45</SUB>> ]
"94489280512" [label = <(LOCAL,std.string relative_path: std.string)<SUB>47</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,relative_path = clean_relative_path(location))<SUB>47</SUB>> ]
"68719476741" [label = <(IDENTIFIER,relative_path,relative_path = clean_relative_path(location))<SUB>47</SUB>> ]
"30064771078" [label = <(clean_relative_path,clean_relative_path(location))<SUB>47</SUB>> ]
"68719476742" [label = <(IDENTIFIER,location,clean_relative_path(location))<SUB>47</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (relative_path.find(&quot;..&quot;, 0) != std::string::npos))<SUB>49</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.notEquals,relative_path.find(&quot;..&quot;, 0) != std::string::npos)<SUB>49</SUB>> ]
"30064771080" [label = <(find,relative_path.find(&quot;..&quot;, 0))<SUB>49</SUB>> ]
"68719476743" [label = <(IDENTIFIER,relative_path,relative_path.find(&quot;..&quot;, 0))<SUB>49</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;..&quot;,relative_path.find(&quot;..&quot;, 0))<SUB>49</SUB>> ]
"90194313223" [label = <(LITERAL,0,relative_path.find(&quot;..&quot;, 0))<SUB>49</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>49</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>49</SUB>> ]
"68719476744" [label = <(IDENTIFIER,std,relative_path.find(&quot;..&quot;, 0) != std::string::npos)<SUB>49</SUB>> ]
"68719476745" [label = <(IDENTIFIER,string,relative_path.find(&quot;..&quot;, 0) != std::string::npos)<SUB>49</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>49</SUB>> ]
"25769803781" [label = <(BLOCK,{
    fail_check(
        &quot;Data of TensorProto ...,{
    fail_check(
        &quot;Data of TensorProto ...)<SUB>49</SUB>> ]
"30064771083" [label = <(fail_check,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>50</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;Data of TensorProto ( tensor name: &quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>51</SUB>> ]
"68719476746" [label = <(IDENTIFIER,tensor_name,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>52</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;) should be file inside the &quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>53</SUB>> ]
"68719476747" [label = <(IDENTIFIER,base_dir,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>54</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;, but the '&quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>55</SUB>> ]
"68719476748" [label = <(IDENTIFIER,location,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>56</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;' points outside the directory&quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>57</SUB>> ]
"94489280513" [label = <(LOCAL,std.string data_path: std.string)<SUB>59</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,data_path = path_join(base_dir, relative_path))<SUB>59</SUB>> ]
"68719476749" [label = <(IDENTIFIER,data_path,data_path = path_join(base_dir, relative_path))<SUB>59</SUB>> ]
"30064771085" [label = <(path_join,path_join(base_dir, relative_path))<SUB>59</SUB>> ]
"68719476750" [label = <(IDENTIFIER,base_dir,path_join(base_dir, relative_path))<SUB>59</SUB>> ]
"68719476751" [label = <(IDENTIFIER,relative_path,path_join(base_dir, relative_path))<SUB>59</SUB>> ]
"94489280514" [label = <(LOCAL,struct stat buffer: stat)<SUB>62</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (data_path.empty() || (data_path[0] != '#' &amp;&amp; stat((data_path).c_str(), &amp;buffer) != 0)))<SUB>63</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.logicalOr,data_path.empty() || (data_path[0] != '#' &amp;&amp; st...)<SUB>63</SUB>> ]
"30064771087" [label = <(empty,data_path.empty())<SUB>63</SUB>> ]
"68719476752" [label = <(IDENTIFIER,data_path,data_path.empty())<SUB>63</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.logicalAnd,data_path[0] != '#' &amp;&amp; stat((data_path).c_str()...)<SUB>63</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.notEquals,data_path[0] != '#')<SUB>63</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.indirectIndexAccess,data_path[0])<SUB>63</SUB>> ]
"68719476753" [label = <(IDENTIFIER,data_path,data_path[0] != '#')<SUB>63</SUB>> ]
"90194313228" [label = <(LITERAL,0,data_path[0] != '#')<SUB>63</SUB>> ]
"90194313229" [label = <(LITERAL,'#',data_path[0] != '#')<SUB>63</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.notEquals,stat((data_path).c_str(), &amp;buffer) != 0)<SUB>63</SUB>> ]
"30064771092" [label = <(stat,stat((data_path).c_str(), &amp;buffer))<SUB>63</SUB>> ]
"30064771093" [label = <(c_str,(data_path).c_str())<SUB>63</SUB>> ]
"68719476754" [label = <(IDENTIFIER,data_path,(data_path).c_str())<SUB>63</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.addressOf,&amp;buffer)<SUB>63</SUB>> ]
"68719476755" [label = <(IDENTIFIER,buffer,stat((data_path).c_str(), &amp;buffer))<SUB>63</SUB>> ]
"90194313230" [label = <(LITERAL,0,stat((data_path).c_str(), &amp;buffer) != 0)<SUB>63</SUB>> ]
"25769803782" [label = <(BLOCK,{
#else
  struct stat64 buffer; // All POSIX un...,{
#else
  struct stat64 buffer; // All POSIX un...)<SUB>63</SUB>> ]
"30064771095" [label = <(fail_check,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>68</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;Data of TensorProto ( tensor name: &quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>69</SUB>> ]
"68719476756" [label = <(IDENTIFIER,tensor_name,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>70</SUB>> ]
"90194313232" [label = <(LITERAL,&quot;) should be stored in &quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>71</SUB>> ]
"68719476757" [label = <(IDENTIFIER,data_path,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>72</SUB>> ]
"90194313233" [label = <(LITERAL,&quot;, but it doesn't exist or is not accessible.&quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>73</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (data_path.empty() || (data_path[0] != '#' &amp;&amp; !S_ISREG(buffer.st_mode))))<SUB>76</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.logicalOr,data_path.empty() || (data_path[0] != '#' &amp;&amp; !S...)<SUB>76</SUB>> ]
"30064771097" [label = <(empty,data_path.empty())<SUB>76</SUB>> ]
"68719476758" [label = <(IDENTIFIER,data_path,data_path.empty())<SUB>76</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.logicalAnd,data_path[0] != '#' &amp;&amp; !S_ISREG(buffer.st_mode))<SUB>76</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.notEquals,data_path[0] != '#')<SUB>76</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.indirectIndexAccess,data_path[0])<SUB>76</SUB>> ]
"68719476759" [label = <(IDENTIFIER,data_path,data_path[0] != '#')<SUB>76</SUB>> ]
"90194313234" [label = <(LITERAL,0,data_path[0] != '#')<SUB>76</SUB>> ]
"90194313235" [label = <(LITERAL,'#',data_path[0] != '#')<SUB>76</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.logicalNot,!S_ISREG(buffer.st_mode))<SUB>76</SUB>> ]
"30064771102" [label = <(S_ISREG,S_ISREG(buffer.st_mode))<SUB>76</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.fieldAccess,buffer.st_mode)<SUB>76</SUB>> ]
"68719476760" [label = <(IDENTIFIER,buffer,S_ISREG(buffer.st_mode))<SUB>76</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,st_mode,st_mode)<SUB>76</SUB>> ]
"25769803783" [label = <(BLOCK,{
    fail_check(
        &quot;Data of TensorProto ...,{
    fail_check(
        &quot;Data of TensorProto ...)<SUB>76</SUB>> ]
"30064771104" [label = <(fail_check,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>77</SUB>> ]
"90194313236" [label = <(LITERAL,&quot;Data of TensorProto ( tensor name: &quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>78</SUB>> ]
"68719476761" [label = <(IDENTIFIER,tensor_name,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>79</SUB>> ]
"90194313237" [label = <(LITERAL,&quot;) should be stored in &quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>80</SUB>> ]
"68719476762" [label = <(IDENTIFIER,data_path,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>81</SUB>> ]
"90194313238" [label = <(LITERAL,&quot;, but it is not regular file.&quot;,fail_check(
        &quot;Data of TensorProto ( tens...)<SUB>82</SUB>> ]
"146028888064" [label = <(RETURN,return data_path;,return data_path;)<SUB>84</SUB>> ]
"68719476763" [label = <(IDENTIFIER,data_path,return data_path;)<SUB>84</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,string)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640257"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "25769803778" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "90194313217"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771074"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "90194313219"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "90194313218"  [ label = "AST: "] 
  "25769803780" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "90194313220"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "90194313221"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "47244640259" -> "30064771079"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "90194313222"  [ label = "AST: "] 
  "30064771080" -> "90194313223"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "55834574848"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "25769803781" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "90194313224"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "30064771083" -> "90194313225"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "90194313226"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "30064771083" -> "90194313227"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771085" -> "68719476751"  [ label = "AST: "] 
  "47244640260" -> "30064771086"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "68719476752"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "30064771091"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "90194313229"  [ label = "AST: "] 
  "30064771090" -> "68719476753"  [ label = "AST: "] 
  "30064771090" -> "90194313228"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "90194313230"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "30064771094" -> "68719476755"  [ label = "AST: "] 
  "25769803782" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "90194313231"  [ label = "AST: "] 
  "30064771095" -> "68719476756"  [ label = "AST: "] 
  "30064771095" -> "90194313232"  [ label = "AST: "] 
  "30064771095" -> "68719476757"  [ label = "AST: "] 
  "30064771095" -> "90194313233"  [ label = "AST: "] 
  "47244640261" -> "30064771096"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "68719476758"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "30064771101"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "90194313235"  [ label = "AST: "] 
  "30064771100" -> "68719476759"  [ label = "AST: "] 
  "30064771100" -> "90194313234"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476760"  [ label = "AST: "] 
  "30064771103" -> "55834574849"  [ label = "AST: "] 
  "25769803783" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "90194313236"  [ label = "AST: "] 
  "30064771104" -> "68719476761"  [ label = "AST: "] 
  "30064771104" -> "90194313237"  [ label = "AST: "] 
  "30064771104" -> "68719476762"  [ label = "AST: "] 
  "30064771104" -> "90194313238"  [ label = "AST: "] 
  "146028888064" -> "68719476763"  [ label = "AST: "] 
  "30064771077" -> "30064771080"  [ label = "CFG: "] 
  "30064771084" -> "30064771087"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771083"  [ label = "CFG: "] 
  "30064771079" -> "30064771085"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "30064771095"  [ label = "CFG: "] 
  "30064771086" -> "30064771097"  [ label = "CFG: "] 
  "30064771096" -> "30064771104"  [ label = "CFG: "] 
  "30064771096" -> "146028888064"  [ label = "CFG: "] 
  "30064771073" -> "30064771078"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771081" -> "30064771079"  [ label = "CFG: "] 
  "30064771083" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771088" -> "30064771086"  [ label = "CFG: "] 
  "30064771095" -> "30064771097"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771097" -> "30064771100"  [ label = "CFG: "] 
  "30064771098" -> "30064771096"  [ label = "CFG: "] 
  "30064771104" -> "146028888064"  [ label = "CFG: "] 
  "30064771082" -> "55834574848"  [ label = "CFG: "] 
  "55834574848" -> "30064771081"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771089" -> "30064771093"  [ label = "CFG: "] 
  "30064771091" -> "30064771088"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771099" -> "55834574849"  [ label = "CFG: "] 
  "30064771101" -> "30064771098"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771074" -> "30064771078"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771076" -> "30064771078"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771094" -> "30064771092"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "55834574849" -> "30064771103"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116994" -> "128849018880"  [ label = "DDG: tensor_name"] 
  "30064771072" -> "128849018880"  [ label = "DDG: location.empty()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: location[0]"] 
  "30064771074" -> "128849018880"  [ label = "DDG: location[0] == '/'"] 
  "30064771076" -> "128849018880"  [ label = "DDG: tensor_name"] 
  "30064771076" -> "128849018880"  [ label = "DDG: fail_check(
        &quot;Location of external TensorProto ( tensor name: &quot;,
        tensor_name,
        &quot;) should be a relative path, but it is an absolute path: &quot;,
        location)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: tensor_name"] 
  "30064771073" -> "128849018880"  [ label = "DDG: fail_check(&quot;Location of external TensorProto ( tensor name: &quot;, tensor_name, &quot;) should not be empty.&quot;)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: location"] 
  "30064771077" -> "128849018880"  [ label = "DDG: clean_relative_path(location)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: relative_path = clean_relative_path(location)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: relative_path.find(&quot;..&quot;, 0)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: std::string::npos"] 
  "30064771079" -> "128849018880"  [ label = "DDG: relative_path.find(&quot;..&quot;, 0) != std::string::npos"] 
  "30064771083" -> "128849018880"  [ label = "DDG: tensor_name"] 
  "30064771083" -> "128849018880"  [ label = "DDG: location"] 
  "30064771083" -> "128849018880"  [ label = "DDG: fail_check(
        &quot;Data of TensorProto ( tensor name: &quot;,
        tensor_name,
        &quot;) should be file inside the &quot;,
        base_dir,
        &quot;, but the '&quot;,
        location,
        &quot;' points outside the directory&quot;)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: base_dir"] 
  "30064771085" -> "128849018880"  [ label = "DDG: relative_path"] 
  "30064771084" -> "128849018880"  [ label = "DDG: path_join(base_dir, relative_path)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: data_path = path_join(base_dir, relative_path)"] 
  "30064771089" -> "128849018880"  [ label = "DDG: data_path[0]"] 
  "30064771088" -> "128849018880"  [ label = "DDG: data_path[0] != '#'"] 
  "30064771092" -> "128849018880"  [ label = "DDG: (data_path).c_str()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: &amp;buffer"] 
  "30064771091" -> "128849018880"  [ label = "DDG: stat((data_path).c_str(), &amp;buffer)"] 
  "30064771088" -> "128849018880"  [ label = "DDG: stat((data_path).c_str(), &amp;buffer) != 0"] 
  "30064771086" -> "128849018880"  [ label = "DDG: data_path[0] != '#' &amp;&amp; stat((data_path).c_str(), &amp;buffer) != 0"] 
  "30064771086" -> "128849018880"  [ label = "DDG: data_path.empty() || (data_path[0] != '#' &amp;&amp; stat((data_path).c_str(), &amp;buffer) != 0)"] 
  "30064771095" -> "128849018880"  [ label = "DDG: tensor_name"] 
  "30064771095" -> "128849018880"  [ label = "DDG: fail_check(
        &quot;Data of TensorProto ( tensor name: &quot;,
        tensor_name,
        &quot;) should be stored in &quot;,
        data_path,
        &quot;, but it doesn't exist or is not accessible.&quot;)"] 
  "30064771097" -> "128849018880"  [ label = "DDG: data_path"] 
  "30064771096" -> "128849018880"  [ label = "DDG: data_path.empty()"] 
  "30064771099" -> "128849018880"  [ label = "DDG: data_path[0]"] 
  "30064771098" -> "128849018880"  [ label = "DDG: data_path[0] != '#'"] 
  "30064771102" -> "128849018880"  [ label = "DDG: buffer.st_mode"] 
  "30064771101" -> "128849018880"  [ label = "DDG: S_ISREG(buffer.st_mode)"] 
  "30064771098" -> "128849018880"  [ label = "DDG: !S_ISREG(buffer.st_mode)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: data_path[0] != '#' &amp;&amp; !S_ISREG(buffer.st_mode)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: data_path.empty() || (data_path[0] != '#' &amp;&amp; !S_ISREG(buffer.st_mode))"] 
  "30064771104" -> "128849018880"  [ label = "DDG: tensor_name"] 
  "30064771104" -> "128849018880"  [ label = "DDG: data_path"] 
  "30064771104" -> "128849018880"  [ label = "DDG: fail_check(
        &quot;Data of TensorProto ( tensor name: &quot;,
        tensor_name,
        &quot;) should be stored in &quot;,
        data_path,
        &quot;, but it is not regular file.&quot;)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: location"] 
  "30064771085" -> "30064771084"  [ label = "DDG: base_dir"] 
  "30064771085" -> "30064771084"  [ label = "DDG: relative_path"] 
  "68719476763" -> "146028888064"  [ label = "DDG: data_path"] 
  "30064771089" -> "68719476763"  [ label = "DDG: data_path[0]"] 
  "30064771104" -> "68719476763"  [ label = "DDG: data_path"] 
  "30064771097" -> "68719476763"  [ label = "DDG: data_path"] 
  "30064771099" -> "68719476763"  [ label = "DDG: data_path[0]"] 
  "111669149697" -> "68719476763"  [ label = "DDG: "] 
  "115964116993" -> "30064771072"  [ label = "DDG: location"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771072" -> "30064771078"  [ label = "DDG: location"] 
  "30064771074" -> "30064771078"  [ label = "DDG: location[0]"] 
  "30064771076" -> "30064771078"  [ label = "DDG: location"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: relative_path"] 
  "30064771080" -> "30064771079"  [ label = "DDG: &quot;..&quot;"] 
  "30064771080" -> "30064771079"  [ label = "DDG: 0"] 
  "115964116992" -> "30064771085"  [ label = "DDG: base_dir"] 
  "30064771083" -> "30064771085"  [ label = "DDG: base_dir"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771080" -> "30064771085"  [ label = "DDG: relative_path"] 
  "30064771087" -> "30064771086"  [ label = "DDG: data_path"] 
  "30064771088" -> "30064771086"  [ label = "DDG: data_path[0] != '#'"] 
  "30064771088" -> "30064771086"  [ label = "DDG: stat((data_path).c_str(), &amp;buffer) != 0"] 
  "30064771097" -> "30064771096"  [ label = "DDG: data_path"] 
  "30064771098" -> "30064771096"  [ label = "DDG: data_path[0] != '#'"] 
  "30064771098" -> "30064771096"  [ label = "DDG: !S_ISREG(buffer.st_mode)"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116994" -> "30064771073"  [ label = "DDG: tensor_name"] 
  "30064771077" -> "30064771080"  [ label = "DDG: relative_path"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "115964116994" -> "30064771083"  [ label = "DDG: tensor_name"] 
  "30064771076" -> "30064771083"  [ label = "DDG: tensor_name"] 
  "30064771073" -> "30064771083"  [ label = "DDG: tensor_name"] 
  "115964116992" -> "30064771083"  [ label = "DDG: base_dir"] 
  "30064771074" -> "30064771083"  [ label = "DDG: location[0]"] 
  "30064771078" -> "30064771083"  [ label = "DDG: location"] 
  "30064771084" -> "30064771087"  [ label = "DDG: data_path"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771089" -> "30064771088"  [ label = "DDG: data_path[0]"] 
  "30064771089" -> "30064771088"  [ label = "DDG: '#'"] 
  "30064771091" -> "30064771088"  [ label = "DDG: stat((data_path).c_str(), &amp;buffer)"] 
  "30064771091" -> "30064771088"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "115964116994" -> "30064771095"  [ label = "DDG: tensor_name"] 
  "30064771076" -> "30064771095"  [ label = "DDG: tensor_name"] 
  "30064771073" -> "30064771095"  [ label = "DDG: tensor_name"] 
  "30064771083" -> "30064771095"  [ label = "DDG: tensor_name"] 
  "30064771087" -> "30064771095"  [ label = "DDG: data_path"] 
  "30064771089" -> "30064771095"  [ label = "DDG: data_path[0]"] 
  "30064771093" -> "30064771095"  [ label = "DDG: data_path"] 
  "30064771087" -> "30064771097"  [ label = "DDG: data_path"] 
  "30064771089" -> "30064771097"  [ label = "DDG: data_path[0]"] 
  "30064771093" -> "30064771097"  [ label = "DDG: data_path"] 
  "30064771095" -> "30064771097"  [ label = "DDG: data_path"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771099" -> "30064771098"  [ label = "DDG: data_path[0]"] 
  "30064771099" -> "30064771098"  [ label = "DDG: '#'"] 
  "30064771101" -> "30064771098"  [ label = "DDG: S_ISREG(buffer.st_mode)"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "115964116994" -> "30064771104"  [ label = "DDG: tensor_name"] 
  "30064771076" -> "30064771104"  [ label = "DDG: tensor_name"] 
  "30064771073" -> "30064771104"  [ label = "DDG: tensor_name"] 
  "30064771083" -> "30064771104"  [ label = "DDG: tensor_name"] 
  "30064771095" -> "30064771104"  [ label = "DDG: tensor_name"] 
  "30064771089" -> "30064771104"  [ label = "DDG: data_path[0]"] 
  "30064771097" -> "30064771104"  [ label = "DDG: data_path"] 
  "30064771099" -> "30064771104"  [ label = "DDG: data_path[0]"] 
  "30064771087" -> "30064771089"  [ label = "DDG: data_path"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771092" -> "30064771091"  [ label = "DDG: (data_path).c_str()"] 
  "30064771092" -> "30064771091"  [ label = "DDG: &amp;buffer"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771089" -> "30064771099"  [ label = "DDG: data_path[0]"] 
  "30064771097" -> "30064771099"  [ label = "DDG: data_path"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771102" -> "30064771101"  [ label = "DDG: buffer.st_mode"] 
  "30064771072" -> "30064771074"  [ label = "DDG: location"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: data_path"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "115964116994" -> "30064771076"  [ label = "DDG: tensor_name"] 
  "30064771072" -> "30064771076"  [ label = "DDG: location"] 
  "30064771074" -> "30064771076"  [ label = "DDG: location[0]"] 
  "30064771087" -> "30064771093"  [ label = "DDG: data_path"] 
  "30064771089" -> "30064771093"  [ label = "DDG: data_path[0]"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771072" -> "30064771073"  [ label = "CDG: "] 
  "30064771079" -> "30064771083"  [ label = "CDG: "] 
  "30064771086" -> "30064771095"  [ label = "CDG: "] 
  "30064771096" -> "30064771104"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771088"  [ label = "CDG: "] 
  "30064771097" -> "30064771100"  [ label = "CDG: "] 
  "30064771097" -> "30064771099"  [ label = "CDG: "] 
  "30064771097" -> "30064771098"  [ label = "CDG: "] 
  "30064771089" -> "30064771094"  [ label = "CDG: "] 
  "30064771089" -> "30064771093"  [ label = "CDG: "] 
  "30064771089" -> "30064771092"  [ label = "CDG: "] 
  "30064771089" -> "30064771091"  [ label = "CDG: "] 
  "30064771099" -> "55834574849"  [ label = "CDG: "] 
  "30064771099" -> "30064771103"  [ label = "CDG: "] 
  "30064771099" -> "30064771102"  [ label = "CDG: "] 
  "30064771099" -> "30064771101"  [ label = "CDG: "] 
  "30064771074" -> "30064771076"  [ label = "CDG: "] 
}
"""
)
