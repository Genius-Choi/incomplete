[33mval[0m [36mres1355[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "get_tests" {  
"111669149697" [label = <(METHOD,get_tests)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,tests = [])<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,tests,tests = [])<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.listLiteral,[])<SUB>2</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,Fortuna = import(Crypto.SelfTest.Random, Fortuna))<SUB>3</SUB>> ]
"68719476738" [label = <(IDENTIFIER,Fortuna,Fortuna = import(Crypto.SelfTest.Random, Fortuna))<SUB>3</SUB>> ]
"30064771074" [label = <(import,import(Crypto.SelfTest.Random, Fortuna))<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,import,import(Crypto.SelfTest.Random, Fortuna))<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,Crypto.SelfTest.Random,import(Crypto.SelfTest.Random, Fortuna))<SUB>3</SUB>> ]
"90194313217" [label = <(LITERAL,Fortuna,import(Crypto.SelfTest.Random, Fortuna))<SUB>3</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignmentPlus,tests += Fortuna.get_tests(config = config))<SUB>3</SUB>> ]
"68719476740" [label = <(IDENTIFIER,tests,tests += Fortuna.get_tests(config = config))<SUB>3</SUB>> ]
"30064771077" [label = <(get_tests,Fortuna.get_tests(config = config))<SUB>3</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,Fortuna.get_tests)<SUB>3</SUB>> ]
"68719476742" [label = <(IDENTIFIER,Fortuna,Fortuna.get_tests(config = config))<SUB>3</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,get_tests,get_tests)<SUB>3</SUB>> ]
"68719476743" [label = <(IDENTIFIER,Fortuna,Fortuna.get_tests(config = config))<SUB>3</SUB>> ]
"68719476741" [label = <(IDENTIFIER,config,Fortuna.get_tests(config = config))<SUB>3</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,OSRNG = import(Crypto.SelfTest.Random, OSRNG))<SUB>4</SUB>> ]
"68719476744" [label = <(IDENTIFIER,OSRNG,OSRNG = import(Crypto.SelfTest.Random, OSRNG))<SUB>4</SUB>> ]
"30064771079" [label = <(import,import(Crypto.SelfTest.Random, OSRNG))<SUB>4</SUB>> ]
"68719476745" [label = <(IDENTIFIER,import,import(Crypto.SelfTest.Random, OSRNG))<SUB>4</SUB>> ]
"90194313218" [label = <(LITERAL,Crypto.SelfTest.Random,import(Crypto.SelfTest.Random, OSRNG))<SUB>4</SUB>> ]
"90194313219" [label = <(LITERAL,OSRNG,import(Crypto.SelfTest.Random, OSRNG))<SUB>4</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignmentPlus,tests += OSRNG.get_tests(config = config))<SUB>4</SUB>> ]
"68719476746" [label = <(IDENTIFIER,tests,tests += OSRNG.get_tests(config = config))<SUB>4</SUB>> ]
"30064771082" [label = <(get_tests,OSRNG.get_tests(config = config))<SUB>4</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,OSRNG.get_tests)<SUB>4</SUB>> ]
"68719476748" [label = <(IDENTIFIER,OSRNG,OSRNG.get_tests(config = config))<SUB>4</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,get_tests,get_tests)<SUB>4</SUB>> ]
"68719476749" [label = <(IDENTIFIER,OSRNG,OSRNG.get_tests(config = config))<SUB>4</SUB>> ]
"68719476747" [label = <(IDENTIFIER,config,OSRNG.get_tests(config = config))<SUB>4</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,test_random = import(Crypto.SelfTest.Random, te...)<SUB>5</SUB>> ]
"68719476750" [label = <(IDENTIFIER,test_random,test_random = import(Crypto.SelfTest.Random, te...)<SUB>5</SUB>> ]
"30064771084" [label = <(import,import(Crypto.SelfTest.Random, test_random))<SUB>5</SUB>> ]
"68719476751" [label = <(IDENTIFIER,import,import(Crypto.SelfTest.Random, test_random))<SUB>5</SUB>> ]
"90194313220" [label = <(LITERAL,Crypto.SelfTest.Random,import(Crypto.SelfTest.Random, test_random))<SUB>5</SUB>> ]
"90194313221" [label = <(LITERAL,test_random,import(Crypto.SelfTest.Random, test_random))<SUB>5</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assignmentPlus,tests += test_random.get_tests(config = config))<SUB>5</SUB>> ]
"68719476752" [label = <(IDENTIFIER,tests,tests += test_random.get_tests(config = config))<SUB>5</SUB>> ]
"30064771087" [label = <(get_tests,test_random.get_tests(config = config))<SUB>5</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.fieldAccess,test_random.get_tests)<SUB>5</SUB>> ]
"68719476754" [label = <(IDENTIFIER,test_random,test_random.get_tests(config = config))<SUB>5</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,get_tests,get_tests)<SUB>5</SUB>> ]
"68719476755" [label = <(IDENTIFIER,test_random,test_random.get_tests(config = config))<SUB>5</SUB>> ]
"68719476753" [label = <(IDENTIFIER,config,test_random.get_tests(config = config))<SUB>5</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,test_rpoolcompat = import(Crypto.SelfTest.Rando...)<SUB>6</SUB>> ]
"68719476756" [label = <(IDENTIFIER,test_rpoolcompat,test_rpoolcompat = import(Crypto.SelfTest.Rando...)<SUB>6</SUB>> ]
"30064771089" [label = <(import,import(Crypto.SelfTest.Random, test_rpoolcompat))<SUB>6</SUB>> ]
"68719476757" [label = <(IDENTIFIER,import,import(Crypto.SelfTest.Random, test_rpoolcompat))<SUB>6</SUB>> ]
"90194313222" [label = <(LITERAL,Crypto.SelfTest.Random,import(Crypto.SelfTest.Random, test_rpoolcompat))<SUB>6</SUB>> ]
"90194313223" [label = <(LITERAL,test_rpoolcompat,import(Crypto.SelfTest.Random, test_rpoolcompat))<SUB>6</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignmentPlus,tests += test_rpoolcompat.get_tests(config = co...)<SUB>6</SUB>> ]
"68719476758" [label = <(IDENTIFIER,tests,tests += test_rpoolcompat.get_tests(config = co...)<SUB>6</SUB>> ]
"30064771092" [label = <(get_tests,test_rpoolcompat.get_tests(config = config))<SUB>6</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.fieldAccess,test_rpoolcompat.get_tests)<SUB>6</SUB>> ]
"68719476760" [label = <(IDENTIFIER,test_rpoolcompat,test_rpoolcompat.get_tests(config = config))<SUB>6</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,get_tests,get_tests)<SUB>6</SUB>> ]
"68719476761" [label = <(IDENTIFIER,test_rpoolcompat,test_rpoolcompat.get_tests(config = config))<SUB>6</SUB>> ]
"68719476759" [label = <(IDENTIFIER,config,test_rpoolcompat.get_tests(config = config))<SUB>6</SUB>> ]
"146028888064" [label = <(RETURN,return tests,return tests)<SUB>7</SUB>> ]
"68719476762" [label = <(IDENTIFIER,tests,return tests)<SUB>7</SUB>> ]
"94489280513" [label = <(LOCAL,tests: __builtin.list)<SUB>2</SUB>> ]
"94489280514" [label = <(LOCAL,Fortuna: Crypto/SelfTest/Random.py:&lt;module&gt;.Fortuna)<SUB>3</SUB>> ]
"94489280515" [label = <(LOCAL,import: ANY)<SUB>3</SUB>> ]
"94489280517" [label = <(LOCAL,OSRNG: Crypto/SelfTest/Random.py:&lt;module&gt;.OSRNG)<SUB>4</SUB>> ]
"94489280518" [label = <(LOCAL,test_random: Crypto/SelfTest/Random.py:&lt;module&gt;.test_random)<SUB>5</SUB>> ]
"94489280519" [label = <(LOCAL,test_rpoolcompat: Crypto/SelfTest/Random.py:&lt;module&gt;.test_rpoolcompat)<SUB>6</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,config)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,__builtin.list)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771088"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771072"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771076" -> "55834574848"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771079" -> "90194313218"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771082" -> "68719476749"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "30064771081" -> "68719476748"  [ label = "AST: "] 
  "30064771081" -> "55834574849"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476751"  [ label = "AST: "] 
  "30064771084" -> "90194313220"  [ label = "AST: "] 
  "30064771084" -> "90194313221"  [ label = "AST: "] 
  "30064771088" -> "68719476752"  [ label = "AST: "] 
  "30064771088" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771087" -> "68719476755"  [ label = "AST: "] 
  "30064771087" -> "68719476753"  [ label = "AST: "] 
  "30064771086" -> "68719476754"  [ label = "AST: "] 
  "30064771086" -> "55834574850"  [ label = "AST: "] 
  "30064771090" -> "68719476756"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476757"  [ label = "AST: "] 
  "30064771089" -> "90194313222"  [ label = "AST: "] 
  "30064771089" -> "90194313223"  [ label = "AST: "] 
  "30064771093" -> "68719476758"  [ label = "AST: "] 
  "30064771093" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771092" -> "68719476761"  [ label = "AST: "] 
  "30064771092" -> "68719476759"  [ label = "AST: "] 
  "30064771091" -> "68719476760"  [ label = "AST: "] 
  "30064771091" -> "55834574851"  [ label = "AST: "] 
  "146028888064" -> "68719476762"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771075" -> "55834574848"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771080" -> "55834574849"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771085" -> "55834574850"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771090" -> "55834574851"  [ label = "CFG: "] 
  "30064771093" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "55834574848" -> "30064771076"  [ label = "CFG: "] 
  "55834574849" -> "30064771081"  [ label = "CFG: "] 
  "55834574850" -> "30064771086"  [ label = "CFG: "] 
  "55834574851" -> "30064771091"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771073" -> "128849018881"  [ label = "DDG: []"] 
  "30064771073" -> "128849018881"  [ label = "DDG: tests = []"] 
  "30064771075" -> "128849018881"  [ label = "DDG: import(Crypto.SelfTest.Random, Fortuna)"] 
  "30064771075" -> "128849018881"  [ label = "DDG: Fortuna = import(Crypto.SelfTest.Random, Fortuna)"] 
  "30064771077" -> "128849018881"  [ label = "DDG: Fortuna"] 
  "30064771078" -> "128849018881"  [ label = "DDG: Fortuna.get_tests(config = config)"] 
  "30064771078" -> "128849018881"  [ label = "DDG: tests += Fortuna.get_tests(config = config)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: import(Crypto.SelfTest.Random, OSRNG)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: OSRNG = import(Crypto.SelfTest.Random, OSRNG)"] 
  "30064771082" -> "128849018881"  [ label = "DDG: OSRNG"] 
  "30064771083" -> "128849018881"  [ label = "DDG: OSRNG.get_tests(config = config)"] 
  "30064771083" -> "128849018881"  [ label = "DDG: tests += OSRNG.get_tests(config = config)"] 
  "30064771085" -> "128849018881"  [ label = "DDG: import(Crypto.SelfTest.Random, test_random)"] 
  "30064771085" -> "128849018881"  [ label = "DDG: test_random = import(Crypto.SelfTest.Random, test_random)"] 
  "30064771087" -> "128849018881"  [ label = "DDG: test_random"] 
  "30064771088" -> "128849018881"  [ label = "DDG: test_random.get_tests(config = config)"] 
  "30064771088" -> "128849018881"  [ label = "DDG: tests += test_random.get_tests(config = config)"] 
  "30064771090" -> "128849018881"  [ label = "DDG: import(Crypto.SelfTest.Random, test_rpoolcompat)"] 
  "30064771090" -> "128849018881"  [ label = "DDG: test_rpoolcompat = import(Crypto.SelfTest.Random, test_rpoolcompat)"] 
  "30064771093" -> "128849018881"  [ label = "DDG: tests"] 
  "30064771092" -> "128849018881"  [ label = "DDG: test_rpoolcompat"] 
  "30064771092" -> "128849018881"  [ label = "DDG: config"] 
  "30064771093" -> "128849018881"  [ label = "DDG: test_rpoolcompat.get_tests(config = config)"] 
  "30064771093" -> "128849018881"  [ label = "DDG: tests += test_rpoolcompat.get_tests(config = config)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: Crypto.SelfTest.Random"] 
  "30064771074" -> "30064771075"  [ label = "DDG: Fortuna"] 
  "30064771077" -> "30064771078"  [ label = "DDG: Fortuna"] 
  "30064771077" -> "30064771078"  [ label = "DDG: config"] 
  "30064771079" -> "30064771080"  [ label = "DDG: Crypto.SelfTest.Random"] 
  "30064771079" -> "30064771080"  [ label = "DDG: OSRNG"] 
  "30064771082" -> "30064771083"  [ label = "DDG: OSRNG"] 
  "30064771082" -> "30064771083"  [ label = "DDG: config"] 
  "30064771084" -> "30064771085"  [ label = "DDG: Crypto.SelfTest.Random"] 
  "30064771084" -> "30064771085"  [ label = "DDG: test_random"] 
  "30064771087" -> "30064771088"  [ label = "DDG: test_random"] 
  "30064771087" -> "30064771088"  [ label = "DDG: config"] 
  "30064771089" -> "30064771090"  [ label = "DDG: Crypto.SelfTest.Random"] 
  "30064771089" -> "30064771090"  [ label = "DDG: test_rpoolcompat"] 
  "30064771092" -> "30064771093"  [ label = "DDG: test_rpoolcompat"] 
  "30064771092" -> "30064771093"  [ label = "DDG: config"] 
  "68719476762" -> "146028888064"  [ label = "DDG: tests"] 
  "30064771073" -> "30064771078"  [ label = "DDG: tests"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771078" -> "30064771083"  [ label = "DDG: tests"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771083" -> "30064771088"  [ label = "DDG: tests"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771088" -> "30064771093"  [ label = "DDG: tests"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771093" -> "68719476762"  [ label = "DDG: tests"] 
  "111669149697" -> "68719476762"  [ label = "DDG: "] 
  "111669149697" -> "68719476739"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: Fortuna"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "115964116992" -> "30064771077"  [ label = "DDG: config"] 
  "111669149697" -> "68719476745"  [ label = "DDG: "] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771080" -> "30064771082"  [ label = "DDG: OSRNG"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771077" -> "30064771082"  [ label = "DDG: config"] 
  "111669149697" -> "68719476751"  [ label = "DDG: "] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771085" -> "30064771087"  [ label = "DDG: test_random"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771082" -> "30064771087"  [ label = "DDG: config"] 
  "111669149697" -> "68719476757"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771090" -> "30064771092"  [ label = "DDG: test_rpoolcompat"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771087" -> "30064771092"  [ label = "DDG: config"] 
}
""",
  """digraph "get_tests" {  
"111669149702" [label = <(METHOD,get_tests)> ]
"115964116999" [label = <(PARAM,p0)> ]
"115964117000" [label = <(PARAM,p1)> ]
"115964117001" [label = <(PARAM,p2)> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"128849018886" [label = <(METHOD_RETURN,ANY)> ]
  "111669149702" -> "115964116999"  [ label = "AST: "] 
  "111669149702" -> "115964117000"  [ label = "AST: "] 
  "111669149702" -> "25769803782"  [ label = "AST: "] 
  "111669149702" -> "115964117001"  [ label = "AST: "] 
  "111669149702" -> "128849018886"  [ label = "AST: "] 
}
""",
  """digraph "get_tests" {  
"111669149703" [label = <(METHOD,get_tests)> ]
"115964117002" [label = <(PARAM,p0)> ]
"115964117003" [label = <(PARAM,p1)> ]
"115964117004" [label = <(PARAM,p2)> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"128849018887" [label = <(METHOD_RETURN,ANY)> ]
  "111669149703" -> "115964117002"  [ label = "AST: "] 
  "111669149703" -> "115964117003"  [ label = "AST: "] 
  "111669149703" -> "25769803783"  [ label = "AST: "] 
  "111669149703" -> "115964117004"  [ label = "AST: "] 
  "111669149703" -> "128849018887"  [ label = "AST: "] 
}
""",
  """digraph "get_tests" {  
"111669149704" [label = <(METHOD,get_tests)> ]
"115964117005" [label = <(PARAM,p0)> ]
"115964117006" [label = <(PARAM,p1)> ]
"115964117007" [label = <(PARAM,p2)> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"128849018888" [label = <(METHOD_RETURN,ANY)> ]
  "111669149704" -> "115964117005"  [ label = "AST: "] 
  "111669149704" -> "115964117006"  [ label = "AST: "] 
  "111669149704" -> "25769803784"  [ label = "AST: "] 
  "111669149704" -> "115964117007"  [ label = "AST: "] 
  "111669149704" -> "128849018888"  [ label = "AST: "] 
}
""",
  """digraph "get_tests" {  
"111669149705" [label = <(METHOD,get_tests)> ]
"115964117008" [label = <(PARAM,p0)> ]
"115964117009" [label = <(PARAM,p1)> ]
"115964117010" [label = <(PARAM,p2)> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"128849018889" [label = <(METHOD_RETURN,ANY)> ]
  "111669149705" -> "115964117008"  [ label = "AST: "] 
  "111669149705" -> "115964117009"  [ label = "AST: "] 
  "111669149705" -> "25769803785"  [ label = "AST: "] 
  "111669149705" -> "115964117010"  [ label = "AST: "] 
  "111669149705" -> "128849018889"  [ label = "AST: "] 
}
"""
)
