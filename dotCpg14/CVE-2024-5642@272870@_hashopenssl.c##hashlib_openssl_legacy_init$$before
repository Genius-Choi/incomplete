[33mval[0m [36mres1089[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "hashlib_openssl_legacy_init" {  
"111669149697" [label = <(METHOD,hashlib_openssl_legacy_init)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,PyObject *module)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
#if (OPENSSL_VERSION_NUMBER &lt; 0x10100000L) ||...,{
#if (OPENSSL_VERSION_NUMBER &lt; 0x10100000L) ||...)<SUB>2</SUB>> ]
"30064771072" [label = <(OPENSSL_add_all_algorithms_noconf,OPENSSL_add_all_algorithms_noconf())<SUB>5</SUB>> ]
"30064771073" [label = <(ERR_load_crypto_strings,ERR_load_crypto_strings())<SUB>6</SUB>> ]
"146028888064" [label = <(RETURN,return 0;,return 0;)<SUB>8</SUB>> ]
"90194313216" [label = <(LITERAL,0,return 0;)<SUB>8</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "90194313216"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771073" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: module"] 
  "30064771072" -> "128849018880"  [ label = "DDG: OPENSSL_add_all_algorithms_noconf()"] 
  "30064771073" -> "128849018880"  [ label = "DDG: ERR_load_crypto_strings()"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "90194313216" -> "146028888064"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "111669149697" -> "90194313216"  [ label = "DDG: "] 
}
"""
)
