[33mval[0m [36mres650[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "drop_sync" {  
"111669149697" [label = <(METHOD,drop_sync)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,QIOChannel *ioc)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,size_t size)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    ssize_t ret = 0;
    char small[1024];
  ...,{
    ssize_t ret = 0;
    char small[1024];
  ...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,ssize_t ret: ssize_t)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,ret = 0)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,ret,ret = 0)<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,0,ret = 0)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,char[1024] small: char[1024])<SUB>4</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,small[1024])<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,small,small[1024])<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.alloc,small[1024])<SUB>4</SUB>> ]
"90194313217" [label = <(LITERAL,1024,small[1024])<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,char* buffer: char*)<SUB>5</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,buffer = sizeof(small) &gt;= size ? small : g_mall...)<SUB>7</SUB>> ]
"68719476738" [label = <(IDENTIFIER,buffer,buffer = sizeof(small) &gt;= size ? small : g_mall...)<SUB>7</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.conditional,sizeof(small) &gt;= size ? small : g_malloc(MIN(65...)<SUB>7</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.greaterEqualsThan,sizeof(small) &gt;= size)<SUB>7</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.sizeOf,sizeof(small))<SUB>7</SUB>> ]
"68719476739" [label = <(IDENTIFIER,small,sizeof(small))<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,size,sizeof(small) &gt;= size)<SUB>7</SUB>> ]
"68719476741" [label = <(IDENTIFIER,small,sizeof(small) &gt;= size ? small : g_malloc(MIN(65...)<SUB>7</SUB>> ]
"30064771079" [label = <(g_malloc,g_malloc(MIN(65536, size)))<SUB>7</SUB>> ]
"30064771080" [label = <(MIN,MIN(65536, size))<SUB>7</SUB>> ]
"90194313218" [label = <(LITERAL,65536,MIN(65536, size))<SUB>7</SUB>> ]
"68719476742" [label = <(IDENTIFIER,size,MIN(65536, size))<SUB>7</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,WHILE,while (size &gt; 0))<SUB>8</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.greaterThan,size &gt; 0)<SUB>8</SUB>> ]
"68719476743" [label = <(IDENTIFIER,size,size &gt; 0)<SUB>8</SUB>> ]
"90194313219" [label = <(LITERAL,0,size &gt; 0)<SUB>8</SUB>> ]
"25769803778" [label = <(BLOCK,{
        ssize_t count = read_sync(ioc, buffer...,{
        ssize_t count = read_sync(ioc, buffer...)<SUB>8</SUB>> ]
"94489280515" [label = <(LOCAL,ssize_t count: ssize_t)<SUB>9</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,count = read_sync(ioc, buffer, MIN(65536, size)))<SUB>9</SUB>> ]
"68719476744" [label = <(IDENTIFIER,count,count = read_sync(ioc, buffer, MIN(65536, size)))<SUB>9</SUB>> ]
"30064771083" [label = <(read_sync,read_sync(ioc, buffer, MIN(65536, size)))<SUB>9</SUB>> ]
"68719476745" [label = <(IDENTIFIER,ioc,read_sync(ioc, buffer, MIN(65536, size)))<SUB>9</SUB>> ]
"68719476746" [label = <(IDENTIFIER,buffer,read_sync(ioc, buffer, MIN(65536, size)))<SUB>9</SUB>> ]
"30064771084" [label = <(MIN,MIN(65536, size))<SUB>9</SUB>> ]
"90194313220" [label = <(LITERAL,65536,MIN(65536, size))<SUB>9</SUB>> ]
"68719476747" [label = <(IDENTIFIER,size,MIN(65536, size))<SUB>9</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (count &lt;= 0))<SUB>11</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.lessEqualsThan,count &lt;= 0)<SUB>11</SUB>> ]
"68719476748" [label = <(IDENTIFIER,count,count &lt;= 0)<SUB>11</SUB>> ]
"90194313221" [label = <(LITERAL,0,count &lt;= 0)<SUB>11</SUB>> ]
"25769803779" [label = <(BLOCK,{
            goto cleanup;
        },{
            goto cleanup;
        })<SUB>11</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,GOTO,goto cleanup;)<SUB>12</SUB>> ]
"30064771086" [label = <(assert,assert(count &lt;= size))<SUB>14</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.lessEqualsThan,count &lt;= size)<SUB>14</SUB>> ]
"68719476749" [label = <(IDENTIFIER,count,count &lt;= size)<SUB>14</SUB>> ]
"68719476750" [label = <(IDENTIFIER,size,count &lt;= size)<SUB>14</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assignmentMinus,size -= count)<SUB>15</SUB>> ]
"68719476751" [label = <(IDENTIFIER,size,size -= count)<SUB>15</SUB>> ]
"68719476752" [label = <(IDENTIFIER,count,size -= count)<SUB>15</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignmentPlus,ret += count)<SUB>16</SUB>> ]
"68719476753" [label = <(IDENTIFIER,ret,ret += count)<SUB>16</SUB>> ]
"68719476754" [label = <(IDENTIFIER,count,ret += count)<SUB>16</SUB>> ]
"81604378624" [label = <(JUMP_TARGET,cleanup)<SUB>19</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (buffer != small))<SUB>20</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.notEquals,buffer != small)<SUB>20</SUB>> ]
"68719476755" [label = <(IDENTIFIER,buffer,buffer != small)<SUB>20</SUB>> ]
"68719476756" [label = <(IDENTIFIER,small,buffer != small)<SUB>20</SUB>> ]
"25769803780" [label = <(BLOCK,{
        g_free(buffer);
    },{
        g_free(buffer);
    })<SUB>20</SUB>> ]
"30064771091" [label = <(g_free,g_free(buffer))<SUB>21</SUB>> ]
"68719476757" [label = <(IDENTIFIER,buffer,g_free(buffer))<SUB>21</SUB>> ]
"146028888064" [label = <(RETURN,return ret;,return ret;)<SUB>23</SUB>> ]
"68719476758" [label = <(IDENTIFIER,ret,return ret;)<SUB>23</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,ssize_t)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "81604378624"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771076" -> "30064771079"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "68719476739"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "90194313218"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "47244640256" -> "30064771081"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "90194313219"  [ label = "AST: "] 
  "25769803778" -> "94489280515"  [ label = "AST: "] 
  "25769803778" -> "30064771082"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "30064771086"  [ label = "AST: "] 
  "25769803778" -> "30064771088"  [ label = "AST: "] 
  "25769803778" -> "30064771089"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "90194313220"  [ label = "AST: "] 
  "30064771084" -> "68719476747"  [ label = "AST: "] 
  "47244640257" -> "30064771085"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "90194313221"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476749"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771088" -> "68719476752"  [ label = "AST: "] 
  "30064771089" -> "68719476753"  [ label = "AST: "] 
  "30064771089" -> "68719476754"  [ label = "AST: "] 
  "47244640259" -> "30064771090"  [ label = "AST: "] 
  "47244640259" -> "25769803780"  [ label = "AST: "] 
  "30064771090" -> "68719476755"  [ label = "AST: "] 
  "30064771090" -> "68719476756"  [ label = "AST: "] 
  "25769803780" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476757"  [ label = "AST: "] 
  "146028888064" -> "68719476758"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771073" -> "30064771078"  [ label = "CFG: "] 
  "30064771075" -> "30064771081"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771081" -> "30064771084"  [ label = "CFG: "] 
  "30064771081" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771090" -> "146028888064"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771077" -> "30064771080"  [ label = "CFG: "] 
  "30064771079" -> "30064771076"  [ label = "CFG: "] 
  "30064771082" -> "30064771085"  [ label = "CFG: "] 
  "30064771086" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "30064771081"  [ label = "CFG: "] 
  "30064771091" -> "146028888064"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771090"  [ label = "CFG: "] 
  "30064771085" -> "30064771087"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: ioc"] 
  "30064771072" -> "128849018880"  [ label = "DDG: ret"] 
  "30064771072" -> "128849018880"  [ label = "DDG: ret = 0"] 
  "30064771073" -> "128849018880"  [ label = "DDG: small[1024]"] 
  "30064771076" -> "128849018880"  [ label = "DDG: sizeof(small) &gt;= size"] 
  "30064771079" -> "128849018880"  [ label = "DDG: MIN(65536, size)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: g_malloc(MIN(65536, size))"] 
  "30064771075" -> "128849018880"  [ label = "DDG: sizeof(small) &gt;= size ? small : g_malloc(MIN(65536, size))"] 
  "30064771075" -> "128849018880"  [ label = "DDG: buffer = sizeof(small) &gt;= size ? small : g_malloc(MIN(65536, size))"] 
  "30064771081" -> "128849018880"  [ label = "DDG: size"] 
  "30064771081" -> "128849018880"  [ label = "DDG: size &gt; 0"] 
  "30064771083" -> "128849018880"  [ label = "DDG: ioc"] 
  "30064771084" -> "128849018880"  [ label = "DDG: size"] 
  "30064771083" -> "128849018880"  [ label = "DDG: MIN(65536, size)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: read_sync(ioc, buffer, MIN(65536, size))"] 
  "30064771082" -> "128849018880"  [ label = "DDG: count = read_sync(ioc, buffer, MIN(65536, size))"] 
  "30064771085" -> "128849018880"  [ label = "DDG: count"] 
  "30064771085" -> "128849018880"  [ label = "DDG: count &lt;= 0"] 
  "30064771086" -> "128849018880"  [ label = "DDG: count &lt;= size"] 
  "30064771086" -> "128849018880"  [ label = "DDG: assert(count &lt;= size)"] 
  "30064771088" -> "128849018880"  [ label = "DDG: size -= count"] 
  "30064771089" -> "128849018880"  [ label = "DDG: ret"] 
  "30064771089" -> "128849018880"  [ label = "DDG: count"] 
  "30064771089" -> "128849018880"  [ label = "DDG: ret += count"] 
  "30064771090" -> "128849018880"  [ label = "DDG: buffer"] 
  "30064771090" -> "128849018880"  [ label = "DDG: small"] 
  "30064771090" -> "128849018880"  [ label = "DDG: buffer != small"] 
  "30064771091" -> "128849018880"  [ label = "DDG: buffer"] 
  "30064771091" -> "128849018880"  [ label = "DDG: g_free(buffer)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: 1024"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771079" -> "30064771075"  [ label = "DDG: MIN(65536, size)"] 
  "68719476758" -> "146028888064"  [ label = "DDG: ret"] 
  "30064771089" -> "68719476758"  [ label = "DDG: ret"] 
  "30064771072" -> "68719476758"  [ label = "DDG: ret"] 
  "111669149697" -> "68719476758"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771079" -> "30064771076"  [ label = "DDG: MIN(65536, size)"] 
  "30064771077" -> "30064771081"  [ label = "DDG: size"] 
  "30064771080" -> "30064771081"  [ label = "DDG: size"] 
  "30064771088" -> "30064771081"  [ label = "DDG: size"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: ioc"] 
  "30064771083" -> "30064771082"  [ label = "DDG: buffer"] 
  "30064771083" -> "30064771082"  [ label = "DDG: MIN(65536, size)"] 
  "30064771087" -> "30064771088"  [ label = "DDG: count"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771087" -> "30064771089"  [ label = "DDG: count"] 
  "30064771075" -> "30064771090"  [ label = "DDG: buffer"] 
  "30064771083" -> "30064771090"  [ label = "DDG: buffer"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "115964116993" -> "30064771077"  [ label = "DDG: size"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: 65536"] 
  "30064771080" -> "30064771079"  [ label = "DDG: size"] 
  "30064771087" -> "30064771086"  [ label = "DDG: count"] 
  "30064771087" -> "30064771086"  [ label = "DDG: size"] 
  "30064771087" -> "30064771088"  [ label = "DDG: size"] 
  "30064771072" -> "30064771089"  [ label = "DDG: ret"] 
  "30064771090" -> "30064771091"  [ label = "DDG: buffer"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771077" -> "30064771080"  [ label = "DDG: size"] 
  "115964116992" -> "30064771083"  [ label = "DDG: ioc"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771075" -> "30064771083"  [ label = "DDG: buffer"] 
  "30064771084" -> "30064771083"  [ label = "DDG: 65536"] 
  "30064771084" -> "30064771083"  [ label = "DDG: size"] 
  "30064771082" -> "30064771085"  [ label = "DDG: count"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771085" -> "30064771087"  [ label = "DDG: count"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771084" -> "30064771087"  [ label = "DDG: size"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771081" -> "30064771084"  [ label = "DDG: size"] 
  "30064771081" -> "30064771082"  [ label = "CDG: "] 
  "30064771081" -> "30064771083"  [ label = "CDG: "] 
  "30064771081" -> "30064771084"  [ label = "CDG: "] 
  "30064771081" -> "30064771085"  [ label = "CDG: "] 
  "30064771090" -> "30064771091"  [ label = "CDG: "] 
  "30064771077" -> "30064771080"  [ label = "CDG: "] 
  "30064771077" -> "30064771079"  [ label = "CDG: "] 
  "30064771085" -> "30064771088"  [ label = "CDG: "] 
  "30064771085" -> "30064771089"  [ label = "CDG: "] 
  "30064771085" -> "30064771081"  [ label = "CDG: "] 
  "30064771085" -> "30064771086"  [ label = "CDG: "] 
  "30064771085" -> "30064771087"  [ label = "CDG: "] 
}
"""
)
