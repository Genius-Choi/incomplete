[33mval[0m [36mres480[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "collect_some_attrs" {  
"111669149697" [label = <(METHOD,collect_some_attrs)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,struct index_state *istate)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const char *path)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,struct attr_check *check)<SUB>3</SUB>> ]
"25769803777" [label = <(BLOCK,{
	int pathlen, rem, dirlen;
	const char *cp, *...,{
	int pathlen, rem, dirlen;
	const char *cp, *...)<SUB>4</SUB>> ]
"94489280512" [label = <(LOCAL,int pathlen: int)<SUB>5</SUB>> ]
"94489280513" [label = <(LOCAL,int rem: int)<SUB>5</SUB>> ]
"94489280514" [label = <(LOCAL,int dirlen: int)<SUB>5</SUB>> ]
"94489280515" [label = <(LOCAL,const char* cp: char*)<SUB>6</SUB>> ]
"94489280516" [label = <(LOCAL,const char* last_slash: char*)<SUB>6</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,*last_slash = NULL)<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,last_slash,*last_slash = NULL)<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,NULL,*last_slash = NULL)<SUB>6</SUB>> ]
"94489280517" [label = <(LOCAL,int basename_offset: int)<SUB>7</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (cp = path;*cp;cp++))<SUB>9</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,cp = path)<SUB>9</SUB>> ]
"68719476738" [label = <(IDENTIFIER,cp,cp = path)<SUB>9</SUB>> ]
"68719476739" [label = <(IDENTIFIER,path,cp = path)<SUB>9</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.indirection,*cp)<SUB>9</SUB>> ]
"68719476740" [label = <(IDENTIFIER,cp,for (cp = path;*cp;cp++))<SUB>9</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.postIncrement,cp++)<SUB>9</SUB>> ]
"68719476741" [label = <(IDENTIFIER,cp,cp++)<SUB>9</SUB>> ]
"25769803779" [label = <(BLOCK,{
		if (*cp == '/' &amp;&amp; cp[1])
			last_slash = cp...,{
		if (*cp == '/' &amp;&amp; cp[1])
			last_slash = cp...)<SUB>9</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (*cp == '/' &amp;&amp; cp[1]))<SUB>10</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.logicalAnd,*cp == '/' &amp;&amp; cp[1])<SUB>10</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.equals,*cp == '/')<SUB>10</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indirection,*cp)<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,cp,*cp == '/')<SUB>10</SUB>> ]
"90194313216" [label = <(LITERAL,'/',*cp == '/')<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indirectIndexAccess,cp[1])<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,cp,*cp == '/' &amp;&amp; cp[1])<SUB>10</SUB>> ]
"90194313217" [label = <(LITERAL,1,*cp == '/' &amp;&amp; cp[1])<SUB>10</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,last_slash = cp)<SUB>11</SUB>> ]
"68719476744" [label = <(IDENTIFIER,last_slash,last_slash = cp)<SUB>11</SUB>> ]
"68719476745" [label = <(IDENTIFIER,cp,last_slash = cp)<SUB>11</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,pathlen = cp - path)<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,pathlen,pathlen = cp - path)<SUB>13</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.subtraction,cp - path)<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,cp,cp - path)<SUB>13</SUB>> ]
"68719476748" [label = <(IDENTIFIER,path,cp - path)<SUB>13</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (last_slash))<SUB>14</SUB>> ]
"68719476749" [label = <(IDENTIFIER,last_slash,if (last_slash))<SUB>14</SUB>> ]
"25769803781" [label = <(BLOCK,{
		basename_offset = last_slash + 1 - path;
		...,{
		basename_offset = last_slash + 1 - path;
		...)<SUB>14</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,basename_offset = last_slash + 1 - path)<SUB>15</SUB>> ]
"68719476750" [label = <(IDENTIFIER,basename_offset,basename_offset = last_slash + 1 - path)<SUB>15</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.subtraction,last_slash + 1 - path)<SUB>15</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.addition,last_slash + 1)<SUB>15</SUB>> ]
"68719476751" [label = <(IDENTIFIER,last_slash,last_slash + 1)<SUB>15</SUB>> ]
"90194313218" [label = <(LITERAL,1,last_slash + 1)<SUB>15</SUB>> ]
"68719476752" [label = <(IDENTIFIER,path,last_slash + 1 - path)<SUB>15</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,dirlen = last_slash - path)<SUB>16</SUB>> ]
"68719476753" [label = <(IDENTIFIER,dirlen,dirlen = last_slash - path)<SUB>16</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.subtraction,last_slash - path)<SUB>16</SUB>> ]
"68719476754" [label = <(IDENTIFIER,last_slash,last_slash - path)<SUB>16</SUB>> ]
"68719476755" [label = <(IDENTIFIER,path,last_slash - path)<SUB>16</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>17</SUB>> ]
"25769803782" [label = <(BLOCK,{
		basename_offset = 0;
		dirlen = 0;
	},{
		basename_offset = 0;
		dirlen = 0;
	})<SUB>17</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assignment,basename_offset = 0)<SUB>18</SUB>> ]
"68719476756" [label = <(IDENTIFIER,basename_offset,basename_offset = 0)<SUB>18</SUB>> ]
"90194313219" [label = <(LITERAL,0,basename_offset = 0)<SUB>18</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,dirlen = 0)<SUB>19</SUB>> ]
"68719476757" [label = <(IDENTIFIER,dirlen,dirlen = 0)<SUB>19</SUB>> ]
"90194313220" [label = <(LITERAL,0,dirlen = 0)<SUB>19</SUB>> ]
"30064771090" [label = <(prepare_attr_stack,prepare_attr_stack(istate, path, dirlen, &amp;check...)<SUB>22</SUB>> ]
"68719476758" [label = <(IDENTIFIER,istate,prepare_attr_stack(istate, path, dirlen, &amp;check...)<SUB>22</SUB>> ]
"68719476759" [label = <(IDENTIFIER,path,prepare_attr_stack(istate, path, dirlen, &amp;check...)<SUB>22</SUB>> ]
"68719476760" [label = <(IDENTIFIER,dirlen,prepare_attr_stack(istate, path, dirlen, &amp;check...)<SUB>22</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.addressOf,&amp;check-&gt;stack)<SUB>22</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.indirectFieldAccess,check-&gt;stack)<SUB>22</SUB>> ]
"68719476761" [label = <(IDENTIFIER,check,prepare_attr_stack(istate, path, dirlen, &amp;check...)<SUB>22</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,stack,stack)<SUB>22</SUB>> ]
"30064771093" [label = <(all_attrs_init,all_attrs_init(&amp;g_attr_hashmap, check))<SUB>23</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.addressOf,&amp;g_attr_hashmap)<SUB>23</SUB>> ]
"68719476762" [label = <(IDENTIFIER,g_attr_hashmap,all_attrs_init(&amp;g_attr_hashmap, check))<SUB>23</SUB>> ]
"68719476763" [label = <(IDENTIFIER,check,all_attrs_init(&amp;g_attr_hashmap, check))<SUB>23</SUB>> ]
"30064771095" [label = <(determine_macros,determine_macros(check-&gt;all_attrs, check-&gt;stack))<SUB>24</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.indirectFieldAccess,check-&gt;all_attrs)<SUB>24</SUB>> ]
"68719476764" [label = <(IDENTIFIER,check,determine_macros(check-&gt;all_attrs, check-&gt;stack))<SUB>24</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,all_attrs,all_attrs)<SUB>24</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.indirectFieldAccess,check-&gt;stack)<SUB>24</SUB>> ]
"68719476765" [label = <(IDENTIFIER,check,determine_macros(check-&gt;all_attrs, check-&gt;stack))<SUB>24</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,stack,stack)<SUB>24</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,rem = check-&gt;all_attrs_nr)<SUB>26</SUB>> ]
"68719476766" [label = <(IDENTIFIER,rem,rem = check-&gt;all_attrs_nr)<SUB>26</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.indirectFieldAccess,check-&gt;all_attrs_nr)<SUB>26</SUB>> ]
"68719476767" [label = <(IDENTIFIER,check,rem = check-&gt;all_attrs_nr)<SUB>26</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,all_attrs_nr,all_attrs_nr)<SUB>26</SUB>> ]
"30064771100" [label = <(fill,fill(path, pathlen, basename_offset, check-&gt;sta...)<SUB>27</SUB>> ]
"68719476768" [label = <(IDENTIFIER,path,fill(path, pathlen, basename_offset, check-&gt;sta...)<SUB>27</SUB>> ]
"68719476769" [label = <(IDENTIFIER,pathlen,fill(path, pathlen, basename_offset, check-&gt;sta...)<SUB>27</SUB>> ]
"68719476770" [label = <(IDENTIFIER,basename_offset,fill(path, pathlen, basename_offset, check-&gt;sta...)<SUB>27</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.indirectFieldAccess,check-&gt;stack)<SUB>27</SUB>> ]
"68719476771" [label = <(IDENTIFIER,check,fill(path, pathlen, basename_offset, check-&gt;sta...)<SUB>27</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,stack,stack)<SUB>27</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.indirectFieldAccess,check-&gt;all_attrs)<SUB>27</SUB>> ]
"68719476772" [label = <(IDENTIFIER,check,fill(path, pathlen, basename_offset, check-&gt;sta...)<SUB>27</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,all_attrs,all_attrs)<SUB>27</SUB>> ]
"68719476773" [label = <(IDENTIFIER,rem,fill(path, pathlen, basename_offset, check-&gt;sta...)<SUB>27</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "30064771098"  [ label = "AST: "] 
  "25769803777" -> "30064771100"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "30064771074"  [ label = "AST: "] 
  "47244640256" -> "30064771075"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "25769803778" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "30064771076"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "30064771079"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "90194313216"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "90194313217"  [ label = "AST: "] 
  "25769803780" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "30064771082" -> "68719476748"  [ label = "AST: "] 
  "47244640258" -> "68719476749"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "25769803781" -> "30064771083"  [ label = "AST: "] 
  "25769803781" -> "30064771086"  [ label = "AST: "] 
  "30064771083" -> "68719476750"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "68719476752"  [ label = "AST: "] 
  "30064771085" -> "68719476751"  [ label = "AST: "] 
  "30064771085" -> "90194313218"  [ label = "AST: "] 
  "30064771086" -> "68719476753"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476754"  [ label = "AST: "] 
  "30064771087" -> "68719476755"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "30064771088"  [ label = "AST: "] 
  "25769803782" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "68719476756"  [ label = "AST: "] 
  "30064771088" -> "90194313219"  [ label = "AST: "] 
  "30064771089" -> "68719476757"  [ label = "AST: "] 
  "30064771089" -> "90194313220"  [ label = "AST: "] 
  "30064771090" -> "68719476758"  [ label = "AST: "] 
  "30064771090" -> "68719476759"  [ label = "AST: "] 
  "30064771090" -> "68719476760"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476761"  [ label = "AST: "] 
  "30064771092" -> "55834574848"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "68719476763"  [ label = "AST: "] 
  "30064771094" -> "68719476762"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "68719476764"  [ label = "AST: "] 
  "30064771096" -> "55834574849"  [ label = "AST: "] 
  "30064771097" -> "68719476765"  [ label = "AST: "] 
  "30064771097" -> "55834574850"  [ label = "AST: "] 
  "30064771098" -> "68719476766"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476767"  [ label = "AST: "] 
  "30064771099" -> "55834574851"  [ label = "AST: "] 
  "30064771100" -> "68719476768"  [ label = "AST: "] 
  "30064771100" -> "68719476769"  [ label = "AST: "] 
  "30064771100" -> "68719476770"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "30064771102"  [ label = "AST: "] 
  "30064771100" -> "68719476773"  [ label = "AST: "] 
  "30064771101" -> "68719476771"  [ label = "AST: "] 
  "30064771101" -> "55834574852"  [ label = "AST: "] 
  "30064771102" -> "68719476772"  [ label = "AST: "] 
  "30064771102" -> "55834574853"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771081" -> "68719476749"  [ label = "CFG: "] 
  "30064771090" -> "30064771094"  [ label = "CFG: "] 
  "30064771093" -> "55834574849"  [ label = "CFG: "] 
  "30064771095" -> "55834574851"  [ label = "CFG: "] 
  "30064771098" -> "55834574852"  [ label = "CFG: "] 
  "30064771100" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771078"  [ label = "CFG: "] 
  "30064771074" -> "30064771082"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "68719476749" -> "30064771085"  [ label = "CFG: "] 
  "68719476749" -> "30064771088"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771096" -> "55834574850"  [ label = "CFG: "] 
  "30064771097" -> "30064771095"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771101" -> "55834574853"  [ label = "CFG: "] 
  "30064771102" -> "30064771100"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771083" -> "30064771087"  [ label = "CFG: "] 
  "30064771086" -> "55834574848"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "55834574849" -> "30064771096"  [ label = "CFG: "] 
  "55834574850" -> "30064771097"  [ label = "CFG: "] 
  "55834574851" -> "30064771099"  [ label = "CFG: "] 
  "55834574852" -> "30064771101"  [ label = "CFG: "] 
  "55834574853" -> "30064771102"  [ label = "CFG: "] 
  "30064771076" -> "30064771080"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "55834574848"  [ label = "CFG: "] 
  "55834574848" -> "30064771092"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771076"  [ label = "CFG: "] 
  "30064771080" -> "30064771075"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "30064771072" -> "128849018880"  [ label = "DDG: last_slash"] 
  "30064771072" -> "128849018880"  [ label = "DDG: *last_slash = NULL"] 
  "30064771073" -> "128849018880"  [ label = "DDG: cp = path"] 
  "30064771082" -> "128849018880"  [ label = "DDG: cp"] 
  "30064771081" -> "128849018880"  [ label = "DDG: cp - path"] 
  "30064771081" -> "128849018880"  [ label = "DDG: pathlen = cp - path"] 
  "30064771088" -> "128849018880"  [ label = "DDG: basename_offset = 0"] 
  "30064771089" -> "128849018880"  [ label = "DDG: dirlen = 0"] 
  "30064771084" -> "128849018880"  [ label = "DDG: last_slash + 1"] 
  "30064771083" -> "128849018880"  [ label = "DDG: last_slash + 1 - path"] 
  "30064771083" -> "128849018880"  [ label = "DDG: basename_offset = last_slash + 1 - path"] 
  "30064771087" -> "128849018880"  [ label = "DDG: last_slash"] 
  "30064771086" -> "128849018880"  [ label = "DDG: last_slash - path"] 
  "30064771086" -> "128849018880"  [ label = "DDG: dirlen = last_slash - path"] 
  "30064771090" -> "128849018880"  [ label = "DDG: istate"] 
  "30064771090" -> "128849018880"  [ label = "DDG: dirlen"] 
  "30064771090" -> "128849018880"  [ label = "DDG: &amp;check-&gt;stack"] 
  "30064771090" -> "128849018880"  [ label = "DDG: prepare_attr_stack(istate, path, dirlen, &amp;check-&gt;stack)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: &amp;g_attr_hashmap"] 
  "30064771093" -> "128849018880"  [ label = "DDG: check"] 
  "30064771093" -> "128849018880"  [ label = "DDG: all_attrs_init(&amp;g_attr_hashmap, check)"] 
  "30064771095" -> "128849018880"  [ label = "DDG: determine_macros(check-&gt;all_attrs, check-&gt;stack)"] 
  "30064771098" -> "128849018880"  [ label = "DDG: check-&gt;all_attrs_nr"] 
  "30064771098" -> "128849018880"  [ label = "DDG: rem = check-&gt;all_attrs_nr"] 
  "30064771100" -> "128849018880"  [ label = "DDG: path"] 
  "30064771100" -> "128849018880"  [ label = "DDG: pathlen"] 
  "30064771100" -> "128849018880"  [ label = "DDG: basename_offset"] 
  "30064771100" -> "128849018880"  [ label = "DDG: check-&gt;stack"] 
  "30064771100" -> "128849018880"  [ label = "DDG: check-&gt;all_attrs"] 
  "30064771100" -> "128849018880"  [ label = "DDG: rem"] 
  "30064771100" -> "128849018880"  [ label = "DDG: fill(path, pathlen, basename_offset, check-&gt;stack, check-&gt;all_attrs, rem)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: *cp"] 
  "30064771076" -> "128849018880"  [ label = "DDG: *cp == '/'"] 
  "30064771076" -> "128849018880"  [ label = "DDG: cp[1]"] 
  "30064771076" -> "128849018880"  [ label = "DDG: *cp == '/' &amp;&amp; cp[1]"] 
  "30064771080" -> "128849018880"  [ label = "DDG: last_slash"] 
  "30064771080" -> "128849018880"  [ label = "DDG: last_slash = cp"] 
  "30064771075" -> "128849018880"  [ label = "DDG: cp++"] 
  "30064771072" -> "128849018880"  [ label = "DDG: NULL"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: cp"] 
  "30064771082" -> "30064771081"  [ label = "DDG: path"] 
  "30064771093" -> "30064771098"  [ label = "DDG: check"] 
  "111669149697" -> "68719476749"  [ label = "DDG: "] 
  "115964116992" -> "30064771090"  [ label = "DDG: istate"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771082" -> "30064771090"  [ label = "DDG: path"] 
  "30064771087" -> "30064771090"  [ label = "DDG: path"] 
  "30064771089" -> "30064771090"  [ label = "DDG: dirlen"] 
  "30064771086" -> "30064771090"  [ label = "DDG: dirlen"] 
  "115964116994" -> "30064771090"  [ label = "DDG: check"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "115964116994" -> "30064771093"  [ label = "DDG: check"] 
  "30064771093" -> "30064771095"  [ label = "DDG: check"] 
  "30064771090" -> "30064771095"  [ label = "DDG: &amp;check-&gt;stack"] 
  "115964116994" -> "30064771095"  [ label = "DDG: check"] 
  "30064771090" -> "30064771100"  [ label = "DDG: path"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771081" -> "30064771100"  [ label = "DDG: pathlen"] 
  "30064771088" -> "30064771100"  [ label = "DDG: basename_offset"] 
  "30064771083" -> "30064771100"  [ label = "DDG: basename_offset"] 
  "30064771090" -> "30064771100"  [ label = "DDG: &amp;check-&gt;stack"] 
  "30064771093" -> "30064771100"  [ label = "DDG: check"] 
  "30064771095" -> "30064771100"  [ label = "DDG: check-&gt;stack"] 
  "30064771095" -> "30064771100"  [ label = "DDG: check-&gt;all_attrs"] 
  "30064771098" -> "30064771100"  [ label = "DDG: rem"] 
  "115964116993" -> "30064771073"  [ label = "DDG: path"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771073" -> "30064771075"  [ label = "DDG: cp"] 
  "30064771077" -> "30064771075"  [ label = "DDG: *cp"] 
  "30064771076" -> "30064771075"  [ label = "DDG: cp[1]"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771073" -> "30064771082"  [ label = "DDG: cp"] 
  "30064771077" -> "30064771082"  [ label = "DDG: *cp"] 
  "30064771076" -> "30064771082"  [ label = "DDG: cp[1]"] 
  "30064771075" -> "30064771082"  [ label = "DDG: cp"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "115964116993" -> "30064771082"  [ label = "DDG: path"] 
  "30064771084" -> "30064771083"  [ label = "DDG: last_slash + 1"] 
  "30064771084" -> "30064771083"  [ label = "DDG: path"] 
  "30064771087" -> "30064771086"  [ label = "DDG: last_slash"] 
  "30064771087" -> "30064771086"  [ label = "DDG: path"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: *cp"] 
  "30064771077" -> "30064771076"  [ label = "DDG: '/'"] 
  "30064771073" -> "30064771076"  [ label = "DDG: cp"] 
  "30064771075" -> "30064771076"  [ label = "DDG: cp"] 
  "30064771073" -> "30064771080"  [ label = "DDG: cp"] 
  "30064771077" -> "30064771080"  [ label = "DDG: *cp"] 
  "30064771076" -> "30064771080"  [ label = "DDG: cp[1]"] 
  "30064771075" -> "30064771080"  [ label = "DDG: cp"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771072" -> "30064771084"  [ label = "DDG: last_slash"] 
  "30064771080" -> "30064771084"  [ label = "DDG: last_slash"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771082" -> "30064771084"  [ label = "DDG: path"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771072" -> "30064771087"  [ label = "DDG: last_slash"] 
  "30064771080" -> "30064771087"  [ label = "DDG: last_slash"] 
  "30064771084" -> "30064771087"  [ label = "DDG: path"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771072" -> "30064771085"  [ label = "DDG: last_slash"] 
  "30064771080" -> "30064771085"  [ label = "DDG: last_slash"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771074" -> "30064771074"  [ label = "CDG: "] 
  "30064771074" -> "30064771075"  [ label = "CDG: "] 
  "30064771074" -> "30064771076"  [ label = "CDG: "] 
  "30064771074" -> "30064771077"  [ label = "CDG: "] 
  "30064771074" -> "30064771078"  [ label = "CDG: "] 
  "68719476749" -> "30064771083"  [ label = "CDG: "] 
  "68719476749" -> "30064771084"  [ label = "CDG: "] 
  "68719476749" -> "30064771085"  [ label = "CDG: "] 
  "68719476749" -> "30064771086"  [ label = "CDG: "] 
  "68719476749" -> "30064771087"  [ label = "CDG: "] 
  "68719476749" -> "30064771088"  [ label = "CDG: "] 
  "68719476749" -> "30064771089"  [ label = "CDG: "] 
  "30064771076" -> "30064771080"  [ label = "CDG: "] 
  "30064771077" -> "30064771079"  [ label = "CDG: "] 
}
"""
)
