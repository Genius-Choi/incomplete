[33mval[0m [36mres1863[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "Initialize" {  
"111669149697" [label = <(METHOD,Initialize)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,OpKernelContext* const context)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const ModelWeights&amp; weights)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,const int num_sparse_features)<SUB>3</SUB>> ]
"115964116995" [label = <(PARAM,const int num_sparse_features_with_values)<SUB>4</SUB>> ]
"115964116996" [label = <(PARAM,const int num_dense_features)<SUB>5</SUB>> ]
"25769803777" [label = <(BLOCK,{
  num_features_ = num_sparse_features + num_d...,{
  num_features_ = num_sparse_features + num_d...)<SUB>5</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,num_features_ = num_sparse_features + num_dense...)<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,num_features_,num_features_ = num_sparse_features + num_dense...)<SUB>6</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.addition,num_sparse_features + num_dense_features)<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,num_sparse_features,num_sparse_features + num_dense_features)<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,num_dense_features,num_sparse_features + num_dense_features)<SUB>6</SUB>> ]
"94489280512" [label = <(LOCAL,OpInputList sparse_example_indices_inputs: OpInputList)<SUB>8</SUB>> ]
"30064771074" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(context-&gt;input_list(&quot;sparse_...)<SUB>9</SUB>> ]
"30064771075" [label = <(input_list,context-&gt;input_list(&quot;sparse_example_indices&quot;,
 ...)<SUB>9</SUB>> ]
"68719476739" [label = <(IDENTIFIER,context,context-&gt;input_list(&quot;sparse_example_indices&quot;,
 ...)<SUB>9</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;sparse_example_indices&quot;,context-&gt;input_list(&quot;sparse_example_indices&quot;,
 ...)<SUB>9</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.addressOf,&amp;sparse_example_indices_inputs)<SUB>10</SUB>> ]
"68719476740" [label = <(IDENTIFIER,sparse_example_indices_inputs,context-&gt;input_list(&quot;sparse_example_indices&quot;,
 ...)<SUB>10</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (sparse_example_indices_inputs.size() != num_sparse_features))<SUB>11</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.notEquals,sparse_example_indices_inputs.size() != num_spa...)<SUB>11</SUB>> ]
"30064771078" [label = <(size,sparse_example_indices_inputs.size())<SUB>11</SUB>> ]
"68719476741" [label = <(IDENTIFIER,sparse_example_indices_inputs,sparse_example_indices_inputs.size())<SUB>11</SUB>> ]
"68719476742" [label = <(IDENTIFIER,num_sparse_features,sparse_example_indices_inputs.size() != num_spa...)<SUB>11</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>> ]
"146028888064" [label = <(RETURN,return errors::InvalidArgument(
        &quot;Expect...,return errors::InvalidArgument(
        &quot;Expect...)<SUB>12</SUB>> ]
"30064771079" [label = <(InvalidArgument,errors::InvalidArgument(
        &quot;Expected &quot;, n...)<SUB>12</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;Expected &quot;,errors::InvalidArgument(
        &quot;Expected &quot;, n...)<SUB>13</SUB>> ]
"68719476743" [label = <(IDENTIFIER,num_sparse_features,errors::InvalidArgument(
        &quot;Expected &quot;, n...)<SUB>13</SUB>> ]
"90194313218" [label = <(LITERAL,&quot; tensors in sparse_example_indices but got &quot;,errors::InvalidArgument(
        &quot;Expected &quot;, n...)<SUB>14</SUB>> ]
"30064771080" [label = <(size,sparse_example_indices_inputs.size())<SUB>15</SUB>> ]
"68719476744" [label = <(IDENTIFIER,sparse_example_indices_inputs,sparse_example_indices_inputs.size())<SUB>15</SUB>> ]
"94489280513" [label = <(LOCAL,OpInputList sparse_feature_indices_inputs: OpInputList)<SUB>16</SUB>> ]
"30064771081" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(context-&gt;input_list(&quot;sparse_...)<SUB>17</SUB>> ]
"30064771082" [label = <(input_list,context-&gt;input_list(&quot;sparse_feature_indices&quot;,
 ...)<SUB>17</SUB>> ]
"68719476745" [label = <(IDENTIFIER,context,context-&gt;input_list(&quot;sparse_feature_indices&quot;,
 ...)<SUB>17</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;sparse_feature_indices&quot;,context-&gt;input_list(&quot;sparse_feature_indices&quot;,
 ...)<SUB>17</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.addressOf,&amp;sparse_feature_indices_inputs)<SUB>18</SUB>> ]
"68719476746" [label = <(IDENTIFIER,sparse_feature_indices_inputs,context-&gt;input_list(&quot;sparse_feature_indices&quot;,
 ...)<SUB>18</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (sparse_feature_indices_inputs.size() != num_sparse_features))<SUB>19</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.notEquals,sparse_feature_indices_inputs.size() != num_spa...)<SUB>19</SUB>> ]
"30064771085" [label = <(size,sparse_feature_indices_inputs.size())<SUB>19</SUB>> ]
"68719476747" [label = <(IDENTIFIER,sparse_feature_indices_inputs,sparse_feature_indices_inputs.size())<SUB>19</SUB>> ]
"68719476748" [label = <(IDENTIFIER,num_sparse_features,sparse_feature_indices_inputs.size() != num_spa...)<SUB>19</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>> ]
"146028888065" [label = <(RETURN,return errors::InvalidArgument(
        &quot;Expect...,return errors::InvalidArgument(
        &quot;Expect...)<SUB>20</SUB>> ]
"30064771086" [label = <(InvalidArgument,errors::InvalidArgument(
        &quot;Expected &quot;, n...)<SUB>20</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;Expected &quot;,errors::InvalidArgument(
        &quot;Expected &quot;, n...)<SUB>21</SUB>> ]
"68719476749" [label = <(IDENTIFIER,num_sparse_features,errors::InvalidArgument(
        &quot;Expected &quot;, n...)<SUB>21</SUB>> ]
"90194313221" [label = <(LITERAL,&quot; tensors in sparse_feature_indices but got &quot;,errors::InvalidArgument(
        &quot;Expected &quot;, n...)<SUB>22</SUB>> ]
"30064771087" [label = <(size,sparse_feature_indices_inputs.size())<SUB>23</SUB>> ]
"68719476750" [label = <(IDENTIFIER,sparse_feature_indices_inputs,sparse_feature_indices_inputs.size())<SUB>23</SUB>> ]
"94489280514" [label = <(LOCAL,OpInputList sparse_feature_values_inputs: OpInputList)<SUB>24</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (num_sparse_features_with_values &gt; 0))<SUB>25</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.greaterThan,num_sparse_features_with_values &gt; 0)<SUB>25</SUB>> ]
"68719476751" [label = <(IDENTIFIER,num_sparse_features_with_values,num_sparse_features_with_values &gt; 0)<SUB>25</SUB>> ]
"90194313222" [label = <(LITERAL,0,num_sparse_features_with_values &gt; 0)<SUB>25</SUB>> ]
"25769803780" [label = <(BLOCK,{
    TF_RETURN_IF_ERROR(context-&gt;input_list(&quot;s...,{
    TF_RETURN_IF_ERROR(context-&gt;input_list(&quot;s...)<SUB>25</SUB>> ]
"30064771089" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(context-&gt;input_list(&quot;sparse_...)<SUB>26</SUB>> ]
"30064771090" [label = <(input_list,context-&gt;input_list(&quot;sparse_feature_values&quot;,
  ...)<SUB>26</SUB>> ]
"68719476752" [label = <(IDENTIFIER,context,context-&gt;input_list(&quot;sparse_feature_values&quot;,
  ...)<SUB>26</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;sparse_feature_values&quot;,context-&gt;input_list(&quot;sparse_feature_values&quot;,
  ...)<SUB>26</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.addressOf,&amp;sparse_feature_values_inputs)<SUB>27</SUB>> ]
"68719476753" [label = <(IDENTIFIER,sparse_feature_values_inputs,context-&gt;input_list(&quot;sparse_feature_values&quot;,
  ...)<SUB>27</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (sparse_feature_values_inputs.size() != num_sparse_features_with_values))<SUB>28</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.notEquals,sparse_feature_values_inputs.size() != num_spar...)<SUB>28</SUB>> ]
"30064771093" [label = <(size,sparse_feature_values_inputs.size())<SUB>28</SUB>> ]
"68719476754" [label = <(IDENTIFIER,sparse_feature_values_inputs,sparse_feature_values_inputs.size())<SUB>28</SUB>> ]
"68719476755" [label = <(IDENTIFIER,num_sparse_features_with_values,sparse_feature_values_inputs.size() != num_spar...)<SUB>28</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>> ]
"146028888066" [label = <(RETURN,return errors::InvalidArgument(
          &quot;Expe...,return errors::InvalidArgument(
          &quot;Expe...)<SUB>29</SUB>> ]
"30064771094" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;Expected &quot;,...)<SUB>29</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;Expected &quot;,errors::InvalidArgument(
          &quot;Expected &quot;,...)<SUB>30</SUB>> ]
"68719476756" [label = <(IDENTIFIER,num_sparse_features_with_values,errors::InvalidArgument(
          &quot;Expected &quot;,...)<SUB>30</SUB>> ]
"90194313225" [label = <(LITERAL,&quot; tensors in sparse_feature_values but got &quot;,errors::InvalidArgument(
          &quot;Expected &quot;,...)<SUB>31</SUB>> ]
"30064771095" [label = <(size,sparse_feature_values_inputs.size())<SUB>32</SUB>> ]
"68719476757" [label = <(IDENTIFIER,sparse_feature_values_inputs,sparse_feature_values_inputs.size())<SUB>32</SUB>> ]
"94489280515" [label = <(LOCAL,const Tensor* example_weights_t: Tensor*)<SUB>35</SUB>> ]
"30064771096" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(context-&gt;input(&quot;example_weig...)<SUB>36</SUB>> ]
"30064771097" [label = <(input,context-&gt;input(&quot;example_weights&quot;, &amp;example_weig...)<SUB>36</SUB>> ]
"68719476758" [label = <(IDENTIFIER,context,context-&gt;input(&quot;example_weights&quot;, &amp;example_weig...)<SUB>36</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;example_weights&quot;,context-&gt;input(&quot;example_weights&quot;, &amp;example_weig...)<SUB>36</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.addressOf,&amp;example_weights_t)<SUB>36</SUB>> ]
"68719476759" [label = <(IDENTIFIER,example_weights_t,context-&gt;input(&quot;example_weights&quot;, &amp;example_weig...)<SUB>36</SUB>> ]
"94489280516" [label = <(LOCAL,auto example_weights: auto)<SUB>37</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.assignment,example_weights = example_weights_t-&gt;flat&lt;float&gt;())<SUB>37</SUB>> ]
"68719476760" [label = <(IDENTIFIER,example_weights,example_weights = example_weights_t-&gt;flat&lt;float&gt;())<SUB>37</SUB>> ]
"30064771100" [label = <(flat&lt;float&gt;,example_weights_t-&gt;flat&lt;float&gt;())<SUB>37</SUB>> ]
"68719476761" [label = <(IDENTIFIER,example_weights_t,example_weights_t-&gt;flat&lt;float&gt;())<SUB>37</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (example_weights.size() &gt;= std::numeric_limits&lt;int&gt;::max()))<SUB>39</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.greaterEqualsThan,example_weights.size() &gt;= std::numeric_limits&lt;i...)<SUB>39</SUB>> ]
"30064771102" [label = <(size,example_weights.size())<SUB>39</SUB>> ]
"68719476762" [label = <(IDENTIFIER,example_weights,example_weights.size())<SUB>39</SUB>> ]
"30064771103" [label = <(max,std::numeric_limits&lt;int&gt;::max())<SUB>39</SUB>> ]
"25769803782" [label = <(BLOCK,{
    return errors::InvalidArgument(strings::P...,{
    return errors::InvalidArgument(strings::P...)<SUB>39</SUB>> ]
"146028888067" [label = <(RETURN,return errors::InvalidArgument(strings::Printf(...,return errors::InvalidArgument(strings::Printf(...)<SUB>40</SUB>> ]
"30064771104" [label = <(InvalidArgument,errors::InvalidArgument(strings::Printf(
      ...)<SUB>40</SUB>> ]
"30064771105" [label = <(Printf,strings::Printf(
        &quot;Too many examples in ...)<SUB>40</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;Too many examples in a mini-batch: %zu &gt; %d&quot;,strings::Printf(
        &quot;Too many examples in ...)<SUB>41</SUB>> ]
"30064771106" [label = <(size,example_weights.size())<SUB>41</SUB>> ]
"68719476763" [label = <(IDENTIFIER,example_weights,example_weights.size())<SUB>41</SUB>> ]
"30064771107" [label = <(max,std::numeric_limits&lt;int&gt;::max())<SUB>42</SUB>> ]
"94489280517" [label = <(LOCAL,const int num_examples: int)<SUB>46</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.assignment,num_examples = static_cast&lt;int&gt;(example_weights...)<SUB>46</SUB>> ]
"68719476764" [label = <(IDENTIFIER,num_examples,num_examples = static_cast&lt;int&gt;(example_weights...)<SUB>46</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(example_weights.size()))<SUB>46</SUB>> ]
"184683593728" [label = <(UNKNOWN,int,int)<SUB>46</SUB>> ]
"30064771110" [label = <(size,example_weights.size())<SUB>46</SUB>> ]
"68719476765" [label = <(IDENTIFIER,example_weights,example_weights.size())<SUB>46</SUB>> ]
"94489280518" [label = <(LOCAL,const Tensor* example_labels_t: Tensor*)<SUB>47</SUB>> ]
"30064771111" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(context-&gt;input(&quot;example_labe...)<SUB>48</SUB>> ]
"30064771112" [label = <(input,context-&gt;input(&quot;example_labels&quot;, &amp;example_label...)<SUB>48</SUB>> ]
"68719476766" [label = <(IDENTIFIER,context,context-&gt;input(&quot;example_labels&quot;, &amp;example_label...)<SUB>48</SUB>> ]
"90194313228" [label = <(LITERAL,&quot;example_labels&quot;,context-&gt;input(&quot;example_labels&quot;, &amp;example_label...)<SUB>48</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.addressOf,&amp;example_labels_t)<SUB>48</SUB>> ]
"68719476767" [label = <(IDENTIFIER,example_labels_t,context-&gt;input(&quot;example_labels&quot;, &amp;example_label...)<SUB>48</SUB>> ]
"94489280519" [label = <(LOCAL,auto example_labels: auto)<SUB>49</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.assignment,example_labels = example_labels_t-&gt;flat&lt;float&gt;())<SUB>49</SUB>> ]
"68719476768" [label = <(IDENTIFIER,example_labels,example_labels = example_labels_t-&gt;flat&lt;float&gt;())<SUB>49</SUB>> ]
"30064771115" [label = <(flat&lt;float&gt;,example_labels_t-&gt;flat&lt;float&gt;())<SUB>49</SUB>> ]
"68719476769" [label = <(IDENTIFIER,example_labels_t,example_labels_t-&gt;flat&lt;float&gt;())<SUB>49</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (example_labels.size() != num_examples))<SUB>50</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.notEquals,example_labels.size() != num_examples)<SUB>50</SUB>> ]
"30064771117" [label = <(size,example_labels.size())<SUB>50</SUB>> ]
"68719476770" [label = <(IDENTIFIER,example_labels,example_labels.size())<SUB>50</SUB>> ]
"68719476771" [label = <(IDENTIFIER,num_examples,example_labels.size() != num_examples)<SUB>50</SUB>> ]
"25769803783" [label = <(BLOCK,{
    return errors::InvalidArgument(&quot;Expected ...,{
    return errors::InvalidArgument(&quot;Expected ...)<SUB>50</SUB>> ]
"146028888068" [label = <(RETURN,return errors::InvalidArgument(&quot;Expected &quot;, num...,return errors::InvalidArgument(&quot;Expected &quot;, num...)<SUB>51</SUB>> ]
"30064771118" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Expected &quot;, num_exampl...)<SUB>51</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;Expected &quot;,errors::InvalidArgument(&quot;Expected &quot;, num_exampl...)<SUB>51</SUB>> ]
"68719476772" [label = <(IDENTIFIER,num_examples,errors::InvalidArgument(&quot;Expected &quot;, num_exampl...)<SUB>51</SUB>> ]
"90194313230" [label = <(LITERAL,&quot; example labels but got &quot;,errors::InvalidArgument(&quot;Expected &quot;, num_exampl...)<SUB>52</SUB>> ]
"30064771119" [label = <(size,example_labels.size())<SUB>53</SUB>> ]
"68719476773" [label = <(IDENTIFIER,example_labels,example_labels.size())<SUB>53</SUB>> ]
"94489280520" [label = <(LOCAL,OpInputList dense_features_inputs: OpInputList)<SUB>56</SUB>> ]
"30064771120" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(
      context-&gt;input_list(&quot;...)<SUB>57</SUB>> ]
"30064771121" [label = <(input_list,context-&gt;input_list(&quot;dense_features&quot;, &amp;dense_fe...)<SUB>58</SUB>> ]
"68719476774" [label = <(IDENTIFIER,context,context-&gt;input_list(&quot;dense_features&quot;, &amp;dense_fe...)<SUB>58</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;dense_features&quot;,context-&gt;input_list(&quot;dense_features&quot;, &amp;dense_fe...)<SUB>58</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.addressOf,&amp;dense_features_inputs)<SUB>58</SUB>> ]
"68719476775" [label = <(IDENTIFIER,dense_features_inputs,context-&gt;input_list(&quot;dense_features&quot;, &amp;dense_fe...)<SUB>58</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; dense_features_inputs.size();++i))<SUB>59</SUB>> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>59</SUB>> ]
"94489280521" [label = <(LOCAL,int i: int)<SUB>59</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>59</SUB>> ]
"68719476776" [label = <(IDENTIFIER,i,i = 0)<SUB>59</SUB>> ]
"90194313232" [label = <(LITERAL,0,i = 0)<SUB>59</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.lessThan,i &lt; dense_features_inputs.size())<SUB>59</SUB>> ]
"68719476777" [label = <(IDENTIFIER,i,i &lt; dense_features_inputs.size())<SUB>59</SUB>> ]
"30064771125" [label = <(size,dense_features_inputs.size())<SUB>59</SUB>> ]
"68719476778" [label = <(IDENTIFIER,dense_features_inputs,dense_features_inputs.size())<SUB>59</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>59</SUB>> ]
"68719476779" [label = <(IDENTIFIER,i,++i)<SUB>59</SUB>> ]
"25769803785" [label = <(BLOCK,{
    if (!TensorShapeUtils::IsMatrix(dense_fea...,{
    if (!TensorShapeUtils::IsMatrix(dense_fea...)<SUB>59</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (!TensorShapeUtils::IsMatrix(dense_features_inputs[i].shape())))<SUB>60</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.logicalNot,!TensorShapeUtils::IsMatrix(dense_features_inpu...)<SUB>60</SUB>> ]
"30064771128" [label = <(IsMatrix,TensorShapeUtils::IsMatrix(dense_features_input...)<SUB>60</SUB>> ]
"30064771129" [label = <(shape,dense_features_inputs[i].shape())<SUB>60</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.indirectIndexAccess,dense_features_inputs[i])<SUB>60</SUB>> ]
"68719476780" [label = <(IDENTIFIER,dense_features_inputs,dense_features_inputs[i].shape())<SUB>60</SUB>> ]
"68719476781" [label = <(IDENTIFIER,i,dense_features_inputs[i].shape())<SUB>60</SUB>> ]
"25769803786" [label = <(BLOCK,{
      return errors::InvalidArgument(&quot;Dense f...,{
      return errors::InvalidArgument(&quot;Dense f...)<SUB>60</SUB>> ]
"146028888069" [label = <(RETURN,return errors::InvalidArgument(&quot;Dense features ...,return errors::InvalidArgument(&quot;Dense features ...)<SUB>61</SUB>> ]
"30064771131" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Dense features at inde...)<SUB>61</SUB>> ]
"90194313233" [label = <(LITERAL,&quot;Dense features at index &quot;,errors::InvalidArgument(&quot;Dense features at inde...)<SUB>61</SUB>> ]
"68719476782" [label = <(IDENTIFIER,i,errors::InvalidArgument(&quot;Dense features at inde...)<SUB>61</SUB>> ]
"90194313234" [label = <(LITERAL,&quot; must be rank 2 but is rank &quot;,errors::InvalidArgument(&quot;Dense features at inde...)<SUB>62</SUB>> ]
"30064771132" [label = <(dims,dense_features_inputs[i].dims())<SUB>63</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.indirectIndexAccess,dense_features_inputs[i])<SUB>63</SUB>> ]
"68719476783" [label = <(IDENTIFIER,dense_features_inputs,dense_features_inputs[i].dims())<SUB>63</SUB>> ]
"68719476784" [label = <(IDENTIFIER,i,dense_features_inputs[i].dims())<SUB>63</SUB>> ]
"30064771134" [label = <(clear,examples_.clear())<SUB>67</SUB>> ]
"68719476785" [label = <(IDENTIFIER,examples_,examples_.clear())<SUB>67</SUB>> ]
"30064771135" [label = <(resize,examples_.resize(num_examples))<SUB>68</SUB>> ]
"68719476786" [label = <(IDENTIFIER,examples_,examples_.resize(num_examples))<SUB>68</SUB>> ]
"68719476787" [label = <(IDENTIFIER,num_examples,examples_.resize(num_examples))<SUB>68</SUB>> ]
"30064771136" [label = <(resize,probabilities_.resize(num_examples))<SUB>69</SUB>> ]
"68719476788" [label = <(IDENTIFIER,probabilities_,probabilities_.resize(num_examples))<SUB>69</SUB>> ]
"68719476789" [label = <(IDENTIFIER,num_examples,probabilities_.resize(num_examples))<SUB>69</SUB>> ]
"30064771137" [label = <(resize,sampled_index_.resize(num_examples))<SUB>70</SUB>> ]
"68719476790" [label = <(IDENTIFIER,sampled_index_,sampled_index_.resize(num_examples))<SUB>70</SUB>> ]
"68719476791" [label = <(IDENTIFIER,num_examples,sampled_index_.resize(num_examples))<SUB>70</SUB>> ]
"30064771138" [label = <(resize,sampled_count_.resize(num_examples))<SUB>71</SUB>> ]
"68719476792" [label = <(IDENTIFIER,sampled_count_,sampled_count_.resize(num_examples))<SUB>71</SUB>> ]
"68719476793" [label = <(IDENTIFIER,num_examples,sampled_count_.resize(num_examples))<SUB>71</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,FOR,for (int example_id = 0;example_id &lt; num_examples;++example_id))<SUB>72</SUB>> ]
"25769803787" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>72</SUB>> ]
"94489280522" [label = <(LOCAL,int example_id: int)<SUB>72</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.assignment,example_id = 0)<SUB>72</SUB>> ]
"68719476794" [label = <(IDENTIFIER,example_id,example_id = 0)<SUB>72</SUB>> ]
"90194313235" [label = <(LITERAL,0,example_id = 0)<SUB>72</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.lessThan,example_id &lt; num_examples)<SUB>72</SUB>> ]
"68719476795" [label = <(IDENTIFIER,example_id,example_id &lt; num_examples)<SUB>72</SUB>> ]
"68719476796" [label = <(IDENTIFIER,num_examples,example_id &lt; num_examples)<SUB>72</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.preIncrement,++example_id)<SUB>72</SUB>> ]
"68719476797" [label = <(IDENTIFIER,example_id,++example_id)<SUB>72</SUB>> ]
"25769803788" [label = <(BLOCK,{
    Example* const example = &amp;examples_[examp...,{
    Example* const example = &amp;examples_[examp...)<SUB>72</SUB>> ]
"94489280523" [label = <(LOCAL,Example* const example: Example*const)<SUB>73</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.assignment,* const example = &amp;examples_[example_id])<SUB>73</SUB>> ]
"68719476798" [label = <(IDENTIFIER,example,* const example = &amp;examples_[example_id])<SUB>73</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.addressOf,&amp;examples_[example_id])<SUB>73</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.indirectIndexAccess,examples_[example_id])<SUB>73</SUB>> ]
"68719476799" [label = <(IDENTIFIER,examples_,* const example = &amp;examples_[example_id])<SUB>73</SUB>> ]
"68719476800" [label = <(IDENTIFIER,example_id,* const example = &amp;examples_[example_id])<SUB>73</SUB>> ]
"30064771145" [label = <(resize,example-&gt;sparse_features_.resize(num_sparse_fea...)<SUB>74</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.indirectFieldAccess,example-&gt;sparse_features_)<SUB>74</SUB>> ]
"68719476801" [label = <(IDENTIFIER,example,example-&gt;sparse_features_.resize(num_sparse_fea...)<SUB>74</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,sparse_features_,sparse_features_)<SUB>74</SUB>> ]
"68719476802" [label = <(IDENTIFIER,num_sparse_features,example-&gt;sparse_features_.resize(num_sparse_fea...)<SUB>74</SUB>> ]
"30064771147" [label = <(resize,example-&gt;dense_vectors_.resize(num_dense_features))<SUB>75</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.indirectFieldAccess,example-&gt;dense_vectors_)<SUB>75</SUB>> ]
"68719476803" [label = <(IDENTIFIER,example,example-&gt;dense_vectors_.resize(num_dense_features))<SUB>75</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,dense_vectors_,dense_vectors_)<SUB>75</SUB>> ]
"68719476804" [label = <(IDENTIFIER,num_dense_features,example-&gt;dense_vectors_.resize(num_dense_features))<SUB>75</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.assignment,example-&gt;example_weight_ = example_weights(exam...)<SUB>76</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.indirectFieldAccess,example-&gt;example_weight_)<SUB>76</SUB>> ]
"68719476805" [label = <(IDENTIFIER,example,example-&gt;example_weight_ = example_weights(exam...)<SUB>76</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,example_weight_,example_weight_)<SUB>76</SUB>> ]
"30064771151" [label = <(example_weights,example_weights(example_id))<SUB>76</SUB>> ]
"68719476806" [label = <(IDENTIFIER,example_id,example_weights(example_id))<SUB>76</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.assignment,example-&gt;example_label_ = example_labels(exampl...)<SUB>77</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.indirectFieldAccess,example-&gt;example_label_)<SUB>77</SUB>> ]
"68719476807" [label = <(IDENTIFIER,example,example-&gt;example_label_ = example_labels(exampl...)<SUB>77</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,example_label_,example_label_)<SUB>77</SUB>> ]
"30064771154" [label = <(example_labels,example_labels(example_id))<SUB>77</SUB>> ]
"68719476808" [label = <(IDENTIFIER,example_id,example_labels(example_id))<SUB>77</SUB>> ]
"94489280524" [label = <(LOCAL,constDeviceBase.CpuWorkerThreads&amp; worker_threads: DeviceBase.CpuWorkerThreads&amp;)<SUB>79</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.assignment,&amp; worker_threads =
      *context-&gt;device()-&gt;te...)<SUB>79</SUB>> ]
"68719476809" [label = <(IDENTIFIER,worker_threads,&amp; worker_threads =
      *context-&gt;device()-&gt;te...)<SUB>79</SUB>> ]
"30064771156" [label = <(&lt;operator&gt;.indirection,*context-&gt;device()-&gt;tensorflow_cpu_worker_threa...)<SUB>80</SUB>> ]
"30064771157" [label = <(tensorflow_cpu_worker_threads,context-&gt;device()-&gt;tensorflow_cpu_worker_threads())<SUB>80</SUB>> ]
"30064771158" [label = <(device,context-&gt;device())<SUB>80</SUB>> ]
"68719476810" [label = <(IDENTIFIER,context,context-&gt;device())<SUB>80</SUB>> ]
"30064771159" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(CreateSparseFeatureRepresent...)<SUB>81</SUB>> ]
"30064771160" [label = <(CreateSparseFeatureRepresentation,CreateSparseFeatureRepresentation(
      worker...)<SUB>81</SUB>> ]
"68719476811" [label = <(IDENTIFIER,worker_threads,CreateSparseFeatureRepresentation(
      worker...)<SUB>82</SUB>> ]
"68719476812" [label = <(IDENTIFIER,num_examples,CreateSparseFeatureRepresentation(
      worker...)<SUB>82</SUB>> ]
"68719476813" [label = <(IDENTIFIER,num_sparse_features,CreateSparseFeatureRepresentation(
      worker...)<SUB>82</SUB>> ]
"68719476814" [label = <(IDENTIFIER,weights,CreateSparseFeatureRepresentation(
      worker...)<SUB>82</SUB>> ]
"68719476815" [label = <(IDENTIFIER,sparse_example_indices_inputs,CreateSparseFeatureRepresentation(
      worker...)<SUB>83</SUB>> ]
"68719476816" [label = <(IDENTIFIER,sparse_feature_indices_inputs,CreateSparseFeatureRepresentation(
      worker...)<SUB>83</SUB>> ]
"68719476817" [label = <(IDENTIFIER,sparse_feature_values_inputs,CreateSparseFeatureRepresentation(
      worker...)<SUB>84</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.addressOf,&amp;examples_)<SUB>84</SUB>> ]
"68719476818" [label = <(IDENTIFIER,examples_,CreateSparseFeatureRepresentation(
      worker...)<SUB>84</SUB>> ]
"30064771162" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(CreateDenseFeatureRepresenta...)<SUB>85</SUB>> ]
"30064771163" [label = <(CreateDenseFeatureRepresentation,CreateDenseFeatureRepresentation(
      worker_...)<SUB>85</SUB>> ]
"68719476819" [label = <(IDENTIFIER,worker_threads,CreateDenseFeatureRepresentation(
      worker_...)<SUB>86</SUB>> ]
"68719476820" [label = <(IDENTIFIER,num_examples,CreateDenseFeatureRepresentation(
      worker_...)<SUB>86</SUB>> ]
"68719476821" [label = <(IDENTIFIER,num_dense_features,CreateDenseFeatureRepresentation(
      worker_...)<SUB>86</SUB>> ]
"68719476822" [label = <(IDENTIFIER,weights,CreateDenseFeatureRepresentation(
      worker_...)<SUB>86</SUB>> ]
"68719476823" [label = <(IDENTIFIER,dense_features_inputs,CreateDenseFeatureRepresentation(
      worker_...)<SUB>87</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.addressOf,&amp;examples_)<SUB>87</SUB>> ]
"68719476824" [label = <(IDENTIFIER,examples_,CreateDenseFeatureRepresentation(
      worker_...)<SUB>87</SUB>> ]
"30064771165" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(ComputeSquaredNormPerExample...)<SUB>88</SUB>> ]
"30064771166" [label = <(ComputeSquaredNormPerExample,ComputeSquaredNormPerExample(
      worker_thre...)<SUB>88</SUB>> ]
"68719476825" [label = <(IDENTIFIER,worker_threads,ComputeSquaredNormPerExample(
      worker_thre...)<SUB>89</SUB>> ]
"68719476826" [label = <(IDENTIFIER,num_examples,ComputeSquaredNormPerExample(
      worker_thre...)<SUB>89</SUB>> ]
"68719476827" [label = <(IDENTIFIER,num_sparse_features,ComputeSquaredNormPerExample(
      worker_thre...)<SUB>89</SUB>> ]
"68719476828" [label = <(IDENTIFIER,num_dense_features,ComputeSquaredNormPerExample(
      worker_thre...)<SUB>89</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.addressOf,&amp;examples_)<SUB>90</SUB>> ]
"68719476829" [label = <(IDENTIFIER,examples_,ComputeSquaredNormPerExample(
      worker_thre...)<SUB>90</SUB>> ]
"146028888070" [label = <(RETURN,return OkStatus();,return OkStatus();)<SUB>91</SUB>> ]
"30064771168" [label = <(OkStatus,OkStatus())<SUB>91</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771099"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771108"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771111"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771114"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771120"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "25769803777" -> "30064771134"  [ label = "AST: "] 
  "25769803777" -> "30064771135"  [ label = "AST: "] 
  "25769803777" -> "30064771136"  [ label = "AST: "] 
  "25769803777" -> "30064771137"  [ label = "AST: "] 
  "25769803777" -> "30064771138"  [ label = "AST: "] 
  "25769803777" -> "47244640264"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "30064771155"  [ label = "AST: "] 
  "25769803777" -> "30064771159"  [ label = "AST: "] 
  "25769803777" -> "30064771162"  [ label = "AST: "] 
  "25769803777" -> "30064771165"  [ label = "AST: "] 
  "25769803777" -> "146028888070"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "47244640256" -> "30064771077"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "90194313217"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "90194313218"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "90194313219"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "47244640257" -> "30064771084"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "68719476747"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "90194313220"  [ label = "AST: "] 
  "30064771086" -> "68719476749"  [ label = "AST: "] 
  "30064771086" -> "90194313221"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "47244640258" -> "30064771088"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771088" -> "90194313222"  [ label = "AST: "] 
  "25769803780" -> "30064771089"  [ label = "AST: "] 
  "25769803780" -> "47244640259"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476752"  [ label = "AST: "] 
  "30064771090" -> "90194313223"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476753"  [ label = "AST: "] 
  "47244640259" -> "30064771092"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "68719476755"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "25769803781" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "90194313224"  [ label = "AST: "] 
  "30064771094" -> "68719476756"  [ label = "AST: "] 
  "30064771094" -> "90194313225"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476757"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476758"  [ label = "AST: "] 
  "30064771097" -> "90194313226"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476759"  [ label = "AST: "] 
  "30064771099" -> "68719476760"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476761"  [ label = "AST: "] 
  "47244640260" -> "30064771101"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "68719476762"  [ label = "AST: "] 
  "25769803782" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "90194313227"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "68719476763"  [ label = "AST: "] 
  "30064771108" -> "68719476764"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "184683593728"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "68719476765"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "68719476766"  [ label = "AST: "] 
  "30064771112" -> "90194313228"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476767"  [ label = "AST: "] 
  "30064771114" -> "68719476768"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771115" -> "68719476769"  [ label = "AST: "] 
  "47244640261" -> "30064771116"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771116" -> "68719476771"  [ label = "AST: "] 
  "30064771117" -> "68719476770"  [ label = "AST: "] 
  "25769803783" -> "146028888068"  [ label = "AST: "] 
  "146028888068" -> "30064771118"  [ label = "AST: "] 
  "30064771118" -> "90194313229"  [ label = "AST: "] 
  "30064771118" -> "68719476772"  [ label = "AST: "] 
  "30064771118" -> "90194313230"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "68719476773"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771121" -> "68719476774"  [ label = "AST: "] 
  "30064771121" -> "90194313231"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771122" -> "68719476775"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "47244640262" -> "30064771124"  [ label = "AST: "] 
  "47244640262" -> "30064771126"  [ label = "AST: "] 
  "47244640262" -> "25769803785"  [ label = "AST: "] 
  "25769803784" -> "94489280521"  [ label = "AST: "] 
  "25769803784" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "68719476776"  [ label = "AST: "] 
  "30064771123" -> "90194313232"  [ label = "AST: "] 
  "30064771124" -> "68719476777"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771125" -> "68719476778"  [ label = "AST: "] 
  "30064771126" -> "68719476779"  [ label = "AST: "] 
  "25769803785" -> "47244640263"  [ label = "AST: "] 
  "47244640263" -> "30064771127"  [ label = "AST: "] 
  "47244640263" -> "25769803786"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "68719476780"  [ label = "AST: "] 
  "30064771130" -> "68719476781"  [ label = "AST: "] 
  "25769803786" -> "146028888069"  [ label = "AST: "] 
  "146028888069" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "90194313233"  [ label = "AST: "] 
  "30064771131" -> "68719476782"  [ label = "AST: "] 
  "30064771131" -> "90194313234"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771133" -> "68719476783"  [ label = "AST: "] 
  "30064771133" -> "68719476784"  [ label = "AST: "] 
  "30064771134" -> "68719476785"  [ label = "AST: "] 
  "30064771135" -> "68719476786"  [ label = "AST: "] 
  "30064771135" -> "68719476787"  [ label = "AST: "] 
  "30064771136" -> "68719476788"  [ label = "AST: "] 
  "30064771136" -> "68719476789"  [ label = "AST: "] 
  "30064771137" -> "68719476790"  [ label = "AST: "] 
  "30064771137" -> "68719476791"  [ label = "AST: "] 
  "30064771138" -> "68719476792"  [ label = "AST: "] 
  "30064771138" -> "68719476793"  [ label = "AST: "] 
  "47244640264" -> "25769803787"  [ label = "AST: "] 
  "47244640264" -> "30064771140"  [ label = "AST: "] 
  "47244640264" -> "30064771141"  [ label = "AST: "] 
  "47244640264" -> "25769803788"  [ label = "AST: "] 
  "25769803787" -> "94489280522"  [ label = "AST: "] 
  "25769803787" -> "30064771139"  [ label = "AST: "] 
  "30064771139" -> "68719476794"  [ label = "AST: "] 
  "30064771139" -> "90194313235"  [ label = "AST: "] 
  "30064771140" -> "68719476795"  [ label = "AST: "] 
  "30064771140" -> "68719476796"  [ label = "AST: "] 
  "30064771141" -> "68719476797"  [ label = "AST: "] 
  "25769803788" -> "94489280523"  [ label = "AST: "] 
  "25769803788" -> "30064771142"  [ label = "AST: "] 
  "25769803788" -> "30064771145"  [ label = "AST: "] 
  "25769803788" -> "30064771147"  [ label = "AST: "] 
  "25769803788" -> "30064771149"  [ label = "AST: "] 
  "25769803788" -> "30064771152"  [ label = "AST: "] 
  "30064771142" -> "68719476798"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771144" -> "68719476799"  [ label = "AST: "] 
  "30064771144" -> "68719476800"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771145" -> "68719476802"  [ label = "AST: "] 
  "30064771146" -> "68719476801"  [ label = "AST: "] 
  "30064771146" -> "55834574848"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771147" -> "68719476804"  [ label = "AST: "] 
  "30064771148" -> "68719476803"  [ label = "AST: "] 
  "30064771148" -> "55834574849"  [ label = "AST: "] 
  "30064771149" -> "30064771150"  [ label = "AST: "] 
  "30064771149" -> "30064771151"  [ label = "AST: "] 
  "30064771150" -> "68719476805"  [ label = "AST: "] 
  "30064771150" -> "55834574850"  [ label = "AST: "] 
  "30064771151" -> "68719476806"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771152" -> "30064771154"  [ label = "AST: "] 
  "30064771153" -> "68719476807"  [ label = "AST: "] 
  "30064771153" -> "55834574851"  [ label = "AST: "] 
  "30064771154" -> "68719476808"  [ label = "AST: "] 
  "30064771155" -> "68719476809"  [ label = "AST: "] 
  "30064771155" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "30064771157"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771158" -> "68719476810"  [ label = "AST: "] 
  "30064771159" -> "30064771160"  [ label = "AST: "] 
  "30064771160" -> "68719476811"  [ label = "AST: "] 
  "30064771160" -> "68719476812"  [ label = "AST: "] 
  "30064771160" -> "68719476813"  [ label = "AST: "] 
  "30064771160" -> "68719476814"  [ label = "AST: "] 
  "30064771160" -> "68719476815"  [ label = "AST: "] 
  "30064771160" -> "68719476816"  [ label = "AST: "] 
  "30064771160" -> "68719476817"  [ label = "AST: "] 
  "30064771160" -> "30064771161"  [ label = "AST: "] 
  "30064771161" -> "68719476818"  [ label = "AST: "] 
  "30064771162" -> "30064771163"  [ label = "AST: "] 
  "30064771163" -> "68719476819"  [ label = "AST: "] 
  "30064771163" -> "68719476820"  [ label = "AST: "] 
  "30064771163" -> "68719476821"  [ label = "AST: "] 
  "30064771163" -> "68719476822"  [ label = "AST: "] 
  "30064771163" -> "68719476823"  [ label = "AST: "] 
  "30064771163" -> "30064771164"  [ label = "AST: "] 
  "30064771164" -> "68719476824"  [ label = "AST: "] 
  "30064771165" -> "30064771166"  [ label = "AST: "] 
  "30064771166" -> "68719476825"  [ label = "AST: "] 
  "30064771166" -> "68719476826"  [ label = "AST: "] 
  "30064771166" -> "68719476827"  [ label = "AST: "] 
  "30064771166" -> "68719476828"  [ label = "AST: "] 
  "30064771166" -> "30064771167"  [ label = "AST: "] 
  "30064771167" -> "68719476829"  [ label = "AST: "] 
  "146028888070" -> "30064771168"  [ label = "AST: "] 
  "30064771072" -> "30064771076"  [ label = "CFG: "] 
  "30064771074" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771085"  [ label = "CFG: "] 
  "30064771096" -> "30064771100"  [ label = "CFG: "] 
  "30064771099" -> "30064771102"  [ label = "CFG: "] 
  "30064771108" -> "30064771113"  [ label = "CFG: "] 
  "30064771111" -> "30064771115"  [ label = "CFG: "] 
  "30064771114" -> "30064771117"  [ label = "CFG: "] 
  "30064771120" -> "30064771123"  [ label = "CFG: "] 
  "30064771134" -> "30064771135"  [ label = "CFG: "] 
  "30064771135" -> "30064771136"  [ label = "CFG: "] 
  "30064771136" -> "30064771137"  [ label = "CFG: "] 
  "30064771137" -> "30064771138"  [ label = "CFG: "] 
  "30064771138" -> "30064771139"  [ label = "CFG: "] 
  "30064771155" -> "30064771161"  [ label = "CFG: "] 
  "30064771159" -> "30064771164"  [ label = "CFG: "] 
  "30064771162" -> "30064771167"  [ label = "CFG: "] 
  "30064771165" -> "30064771168"  [ label = "CFG: "] 
  "146028888070" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771080"  [ label = "CFG: "] 
  "30064771077" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771087"  [ label = "CFG: "] 
  "30064771084" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771091"  [ label = "CFG: "] 
  "30064771088" -> "30064771098"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771101" -> "30064771106"  [ label = "CFG: "] 
  "30064771101" -> "184683593728"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771116" -> "30064771119"  [ label = "CFG: "] 
  "30064771116" -> "30064771122"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771124" -> "30064771130"  [ label = "CFG: "] 
  "30064771124" -> "30064771134"  [ label = "CFG: "] 
  "30064771126" -> "30064771125"  [ label = "CFG: "] 
  "30064771140" -> "30064771144"  [ label = "CFG: "] 
  "30064771140" -> "30064771158"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "30064771156" -> "30064771155"  [ label = "CFG: "] 
  "30064771160" -> "30064771159"  [ label = "CFG: "] 
  "30064771163" -> "30064771162"  [ label = "CFG: "] 
  "30064771166" -> "30064771165"  [ label = "CFG: "] 
  "30064771168" -> "146028888070"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771089" -> "30064771093"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771103" -> "30064771101"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "184683593728" -> "30064771110"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771117" -> "30064771116"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771122" -> "30064771121"  [ label = "CFG: "] 
  "30064771123" -> "30064771125"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771139" -> "30064771140"  [ label = "CFG: "] 
  "30064771142" -> "55834574848"  [ label = "CFG: "] 
  "30064771145" -> "55834574849"  [ label = "CFG: "] 
  "30064771147" -> "55834574850"  [ label = "CFG: "] 
  "30064771149" -> "55834574851"  [ label = "CFG: "] 
  "30064771152" -> "30064771141"  [ label = "CFG: "] 
  "30064771157" -> "30064771156"  [ label = "CFG: "] 
  "30064771161" -> "30064771160"  [ label = "CFG: "] 
  "30064771164" -> "30064771163"  [ label = "CFG: "] 
  "30064771167" -> "30064771166"  [ label = "CFG: "] 
  "30064771079" -> "146028888064"  [ label = "CFG: "] 
  "30064771086" -> "146028888065"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771095"  [ label = "CFG: "] 
  "30064771092" -> "30064771098"  [ label = "CFG: "] 
  "30064771104" -> "146028888067"  [ label = "CFG: "] 
  "30064771118" -> "146028888068"  [ label = "CFG: "] 
  "30064771127" -> "30064771133"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771143" -> "30064771142"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771148" -> "30064771147"  [ label = "CFG: "] 
  "30064771150" -> "30064771151"  [ label = "CFG: "] 
  "30064771151" -> "30064771149"  [ label = "CFG: "] 
  "30064771153" -> "30064771154"  [ label = "CFG: "] 
  "30064771154" -> "30064771152"  [ label = "CFG: "] 
  "30064771158" -> "30064771157"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771119" -> "30064771118"  [ label = "CFG: "] 
  "30064771128" -> "30064771127"  [ label = "CFG: "] 
  "146028888069" -> "128849018880"  [ label = "CFG: "] 
  "30064771144" -> "30064771143"  [ label = "CFG: "] 
  "55834574848" -> "30064771146"  [ label = "CFG: "] 
  "55834574849" -> "30064771148"  [ label = "CFG: "] 
  "55834574850" -> "30064771150"  [ label = "CFG: "] 
  "55834574851" -> "30064771153"  [ label = "CFG: "] 
  "30064771094" -> "146028888066"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "30064771105"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771131" -> "146028888069"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "30064771133" -> "30064771132"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888070" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888069" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018880"  [ label = "DDG: weights"] 
  "115964116995" -> "128849018880"  [ label = "DDG: num_sparse_features_with_values"] 
  "30064771073" -> "128849018880"  [ label = "DDG: num_dense_features"] 
  "30064771072" -> "128849018880"  [ label = "DDG: num_sparse_features + num_dense_features"] 
  "30064771072" -> "128849018880"  [ label = "DDG: num_features_ = num_sparse_features + num_dense_features"] 
  "30064771075" -> "128849018880"  [ label = "DDG: context"] 
  "30064771075" -> "128849018880"  [ label = "DDG: &amp;sparse_example_indices_inputs"] 
  "30064771074" -> "128849018880"  [ label = "DDG: context-&gt;input_list(&quot;sparse_example_indices&quot;,
                                         &amp;sparse_example_indices_inputs)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: TF_RETURN_IF_ERROR(context-&gt;input_list(&quot;sparse_example_indices&quot;,
                                         &amp;sparse_example_indices_inputs))"] 
  "30064771077" -> "128849018880"  [ label = "DDG: sparse_example_indices_inputs.size() != num_sparse_features"] 
  "30064771079" -> "128849018880"  [ label = "DDG: num_sparse_features"] 
  "30064771080" -> "128849018880"  [ label = "DDG: sparse_example_indices_inputs"] 
  "30064771079" -> "128849018880"  [ label = "DDG: sparse_example_indices_inputs.size()"] 
  "30064771079" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
        &quot;Expected &quot;, num_sparse_features,
        &quot; tensors in sparse_example_indices but got &quot;,
        sparse_example_indices_inputs.size())"] 
  "30064771137" -> "128849018880"  [ label = "DDG: sampled_index_"] 
  "30064771072" -> "128849018880"  [ label = "DDG: num_features_"] 
  "30064771136" -> "128849018880"  [ label = "DDG: probabilities_"] 
  "30064771138" -> "128849018880"  [ label = "DDG: sampled_count_"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "115964116994" -> "30064771072"  [ label = "DDG: num_sparse_features"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "115964116996" -> "30064771072"  [ label = "DDG: num_dense_features"] 
  "30064771100" -> "30064771099"  [ label = "DDG: example_weights_t"] 
  "30064771110" -> "30064771108"  [ label = "DDG: example_weights"] 
  "30064771115" -> "30064771114"  [ label = "DDG: example_labels_t"] 
  "30064771168" -> "146028888070"  [ label = "DDG: OkStatus()"] 
  "30064771075" -> "30064771074"  [ label = "DDG: context"] 
  "30064771075" -> "30064771074"  [ label = "DDG: &quot;sparse_example_indices&quot;"] 
  "30064771075" -> "30064771074"  [ label = "DDG: &amp;sparse_example_indices_inputs"] 
  "30064771082" -> "30064771081"  [ label = "DDG: context"] 
  "30064771082" -> "30064771081"  [ label = "DDG: &quot;sparse_feature_indices&quot;"] 
  "30064771082" -> "30064771081"  [ label = "DDG: &amp;sparse_feature_indices_inputs"] 
  "30064771097" -> "30064771096"  [ label = "DDG: context"] 
  "30064771097" -> "30064771096"  [ label = "DDG: &quot;example_weights&quot;"] 
  "30064771097" -> "30064771096"  [ label = "DDG: &amp;example_weights_t"] 
  "30064771112" -> "30064771111"  [ label = "DDG: context"] 
  "30064771112" -> "30064771111"  [ label = "DDG: &quot;example_labels&quot;"] 
  "30064771112" -> "30064771111"  [ label = "DDG: &amp;example_labels_t"] 
  "30064771121" -> "30064771120"  [ label = "DDG: context"] 
  "30064771121" -> "30064771120"  [ label = "DDG: &quot;dense_features&quot;"] 
  "30064771121" -> "30064771120"  [ label = "DDG: &amp;dense_features_inputs"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771134" -> "30064771135"  [ label = "DDG: examples_"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771116" -> "30064771135"  [ label = "DDG: num_examples"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771135" -> "30064771136"  [ label = "DDG: num_examples"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771136" -> "30064771137"  [ label = "DDG: num_examples"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771137" -> "30064771138"  [ label = "DDG: num_examples"] 
  "30064771160" -> "30064771159"  [ label = "DDG: &amp;examples_"] 
  "30064771160" -> "30064771159"  [ label = "DDG: sparse_feature_indices_inputs"] 
  "30064771160" -> "30064771159"  [ label = "DDG: sparse_example_indices_inputs"] 
  "30064771160" -> "30064771159"  [ label = "DDG: worker_threads"] 
  "30064771160" -> "30064771159"  [ label = "DDG: weights"] 
  "30064771160" -> "30064771159"  [ label = "DDG: num_examples"] 
  "30064771160" -> "30064771159"  [ label = "DDG: sparse_feature_values_inputs"] 
  "30064771160" -> "30064771159"  [ label = "DDG: num_sparse_features"] 
  "30064771163" -> "30064771162"  [ label = "DDG: dense_features_inputs"] 
  "30064771163" -> "30064771162"  [ label = "DDG: num_examples"] 
  "30064771163" -> "30064771162"  [ label = "DDG: num_dense_features"] 
  "30064771163" -> "30064771162"  [ label = "DDG: weights"] 
  "30064771163" -> "30064771162"  [ label = "DDG: &amp;examples_"] 
  "30064771163" -> "30064771162"  [ label = "DDG: worker_threads"] 
  "30064771166" -> "30064771165"  [ label = "DDG: num_dense_features"] 
  "30064771166" -> "30064771165"  [ label = "DDG: worker_threads"] 
  "30064771166" -> "30064771165"  [ label = "DDG: num_examples"] 
  "30064771166" -> "30064771165"  [ label = "DDG: &amp;examples_"] 
  "30064771166" -> "30064771165"  [ label = "DDG: num_sparse_features"] 
  "111669149697" -> "30064771168"  [ label = "DDG: "] 
  "115964116994" -> "30064771073"  [ label = "DDG: num_sparse_features"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116996" -> "30064771073"  [ label = "DDG: num_dense_features"] 
  "115964116992" -> "30064771075"  [ label = "DDG: context"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: sparse_example_indices_inputs"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "115964116994" -> "30064771077"  [ label = "DDG: num_sparse_features"] 
  "30064771079" -> "146028888064"  [ label = "DDG: errors::InvalidArgument(
        &quot;Expected &quot;, num_sparse_features,
        &quot; tensors in sparse_example_indices but got &quot;,
        sparse_example_indices_inputs.size())"] 
  "30064771075" -> "30064771082"  [ label = "DDG: context"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: sparse_feature_indices_inputs"] 
  "30064771077" -> "30064771084"  [ label = "DDG: num_sparse_features"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771086" -> "146028888065"  [ label = "DDG: errors::InvalidArgument(
        &quot;Expected &quot;, num_sparse_features,
        &quot; tensors in sparse_feature_indices but got &quot;,
        sparse_feature_indices_inputs.size())"] 
  "115964116995" -> "30064771088"  [ label = "DDG: num_sparse_features_with_values"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771082" -> "30064771097"  [ label = "DDG: context"] 
  "30064771090" -> "30064771097"  [ label = "DDG: context"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771097" -> "30064771100"  [ label = "DDG: &amp;example_weights_t"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771102" -> "30064771101"  [ label = "DDG: example_weights"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771104" -> "146028888067"  [ label = "DDG: errors::InvalidArgument(strings::Printf(
        &quot;Too many examples in a mini-batch: %zu &gt; %d&quot;, example_weights.size(),
        std::numeric_limits&lt;int&gt;::max()))"] 
  "30064771110" -> "30064771109"  [ label = "DDG: example_weights"] 
  "30064771097" -> "30064771112"  [ label = "DDG: context"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771112" -> "30064771115"  [ label = "DDG: &amp;example_labels_t"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771117" -> "30064771116"  [ label = "DDG: example_labels"] 
  "30064771108" -> "30064771116"  [ label = "DDG: num_examples"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771118" -> "146028888068"  [ label = "DDG: errors::InvalidArgument(&quot;Expected &quot;, num_examples,
                                   &quot; example labels but got &quot;,
                                   example_labels.size())"] 
  "30064771112" -> "30064771121"  [ label = "DDG: context"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771123" -> "30064771124"  [ label = "DDG: i"] 
  "30064771126" -> "30064771124"  [ label = "DDG: i"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771125" -> "30064771124"  [ label = "DDG: dense_features_inputs"] 
  "30064771124" -> "30064771126"  [ label = "DDG: i"] 
  "111669149697" -> "30064771126"  [ label = "DDG: "] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771139" -> "30064771140"  [ label = "DDG: example_id"] 
  "30064771141" -> "30064771140"  [ label = "DDG: example_id"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771138" -> "30064771140"  [ label = "DDG: num_examples"] 
  "30064771154" -> "30064771141"  [ label = "DDG: example_id"] 
  "111669149697" -> "30064771141"  [ label = "DDG: "] 
  "30064771135" -> "30064771142"  [ label = "DDG: examples_"] 
  "30064771151" -> "30064771149"  [ label = "DDG: example_id"] 
  "30064771154" -> "30064771152"  [ label = "DDG: example_id"] 
  "30064771155" -> "30064771160"  [ label = "DDG: worker_threads"] 
  "111669149697" -> "30064771160"  [ label = "DDG: "] 
  "30064771140" -> "30064771160"  [ label = "DDG: num_examples"] 
  "30064771084" -> "30064771160"  [ label = "DDG: num_sparse_features"] 
  "30064771145" -> "30064771160"  [ label = "DDG: num_sparse_features"] 
  "115964116993" -> "30064771160"  [ label = "DDG: weights"] 
  "30064771075" -> "30064771160"  [ label = "DDG: &amp;sparse_example_indices_inputs"] 
  "30064771078" -> "30064771160"  [ label = "DDG: sparse_example_indices_inputs"] 
  "30064771082" -> "30064771160"  [ label = "DDG: &amp;sparse_feature_indices_inputs"] 
  "30064771085" -> "30064771160"  [ label = "DDG: sparse_feature_indices_inputs"] 
  "30064771090" -> "30064771160"  [ label = "DDG: &amp;sparse_feature_values_inputs"] 
  "30064771093" -> "30064771160"  [ label = "DDG: sparse_feature_values_inputs"] 
  "30064771135" -> "30064771160"  [ label = "DDG: examples_"] 
  "30064771160" -> "30064771163"  [ label = "DDG: worker_threads"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "30064771160" -> "30064771163"  [ label = "DDG: num_examples"] 
  "30064771147" -> "30064771163"  [ label = "DDG: num_dense_features"] 
  "115964116996" -> "30064771163"  [ label = "DDG: num_dense_features"] 
  "30064771160" -> "30064771163"  [ label = "DDG: weights"] 
  "30064771121" -> "30064771163"  [ label = "DDG: &amp;dense_features_inputs"] 
  "30064771125" -> "30064771163"  [ label = "DDG: dense_features_inputs"] 
  "30064771129" -> "30064771163"  [ label = "DDG: dense_features_inputs[i]"] 
  "30064771160" -> "30064771163"  [ label = "DDG: &amp;examples_"] 
  "30064771135" -> "30064771163"  [ label = "DDG: examples_"] 
  "30064771163" -> "30064771166"  [ label = "DDG: worker_threads"] 
  "111669149697" -> "30064771166"  [ label = "DDG: "] 
  "30064771163" -> "30064771166"  [ label = "DDG: num_examples"] 
  "30064771160" -> "30064771166"  [ label = "DDG: num_sparse_features"] 
  "30064771163" -> "30064771166"  [ label = "DDG: num_dense_features"] 
  "30064771163" -> "30064771166"  [ label = "DDG: &amp;examples_"] 
  "30064771135" -> "30064771166"  [ label = "DDG: examples_"] 
  "30064771160" -> "30064771166"  [ label = "DDG: &amp;examples_"] 
  "30064771075" -> "30064771078"  [ label = "DDG: &amp;sparse_example_indices_inputs"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771082" -> "30064771085"  [ label = "DDG: &amp;sparse_feature_indices_inputs"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771090" -> "30064771089"  [ label = "DDG: context"] 
  "30064771090" -> "30064771089"  [ label = "DDG: &quot;sparse_feature_values&quot;"] 
  "30064771090" -> "30064771089"  [ label = "DDG: &amp;sparse_feature_values_inputs"] 
  "30064771099" -> "30064771102"  [ label = "DDG: example_weights"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771102" -> "30064771110"  [ label = "DDG: example_weights"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771114" -> "30064771117"  [ label = "DDG: example_labels"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771121" -> "30064771125"  [ label = "DDG: &amp;dense_features_inputs"] 
  "30064771129" -> "30064771125"  [ label = "DDG: dense_features_inputs[i]"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771142" -> "30064771145"  [ label = "DDG: example"] 
  "30064771084" -> "30064771145"  [ label = "DDG: num_sparse_features"] 
  "111669149697" -> "30064771145"  [ label = "DDG: "] 
  "30064771142" -> "30064771147"  [ label = "DDG: example"] 
  "111669149697" -> "30064771147"  [ label = "DDG: "] 
  "115964116996" -> "30064771147"  [ label = "DDG: num_dense_features"] 
  "30064771158" -> "30064771157"  [ label = "DDG: context"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771077" -> "30064771079"  [ label = "DDG: num_sparse_features"] 
  "30064771080" -> "30064771079"  [ label = "DDG: sparse_example_indices_inputs"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771084" -> "30064771086"  [ label = "DDG: num_sparse_features"] 
  "30064771087" -> "30064771086"  [ label = "DDG: sparse_feature_indices_inputs"] 
  "30064771082" -> "30064771090"  [ label = "DDG: context"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: sparse_feature_values_inputs"] 
  "30064771088" -> "30064771092"  [ label = "DDG: num_sparse_features_with_values"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771094" -> "146028888066"  [ label = "DDG: errors::InvalidArgument(
          &quot;Expected &quot;, num_sparse_features_with_values,
          &quot; tensors in sparse_feature_values but got &quot;,
          sparse_feature_values_inputs.size())"] 
  "30064771105" -> "30064771104"  [ label = "DDG: &quot;Too many examples in a mini-batch: %zu &gt; %d&quot;"] 
  "30064771105" -> "30064771104"  [ label = "DDG: example_weights.size()"] 
  "30064771105" -> "30064771104"  [ label = "DDG: std::numeric_limits&lt;int&gt;::max()"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "30064771116" -> "30064771118"  [ label = "DDG: num_examples"] 
  "30064771119" -> "30064771118"  [ label = "DDG: example_labels"] 
  "30064771128" -> "30064771127"  [ label = "DDG: dense_features_inputs[i].shape()"] 
  "30064771131" -> "146028888069"  [ label = "DDG: errors::InvalidArgument(&quot;Dense features at index &quot;, i,
                                     &quot; must be rank 2 but is rank &quot;,
                                     dense_features_inputs[i].dims())"] 
  "30064771140" -> "30064771151"  [ label = "DDG: example_id"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771151" -> "30064771154"  [ label = "DDG: example_id"] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "30064771121" -> "30064771158"  [ label = "DDG: context"] 
  "111669149697" -> "30064771158"  [ label = "DDG: "] 
  "30064771075" -> "30064771080"  [ label = "DDG: &amp;sparse_example_indices_inputs"] 
  "30064771078" -> "30064771080"  [ label = "DDG: sparse_example_indices_inputs"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771082" -> "30064771087"  [ label = "DDG: &amp;sparse_feature_indices_inputs"] 
  "30064771085" -> "30064771087"  [ label = "DDG: sparse_feature_indices_inputs"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771090" -> "30064771093"  [ label = "DDG: &amp;sparse_feature_values_inputs"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771106" -> "30064771105"  [ label = "DDG: example_weights"] 
  "30064771117" -> "30064771119"  [ label = "DDG: example_labels"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: dense_features_inputs[i]"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771092" -> "30064771094"  [ label = "DDG: num_sparse_features_with_values"] 
  "30064771095" -> "30064771094"  [ label = "DDG: sparse_feature_values_inputs"] 
  "30064771102" -> "30064771106"  [ label = "DDG: example_weights"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771125" -> "30064771129"  [ label = "DDG: dense_features_inputs"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771124" -> "30064771131"  [ label = "DDG: i"] 
  "30064771132" -> "30064771131"  [ label = "DDG: dense_features_inputs[i]"] 
  "30064771090" -> "30064771095"  [ label = "DDG: &amp;sparse_feature_values_inputs"] 
  "30064771093" -> "30064771095"  [ label = "DDG: sparse_feature_values_inputs"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771125" -> "30064771132"  [ label = "DDG: dense_features_inputs"] 
  "30064771129" -> "30064771132"  [ label = "DDG: dense_features_inputs[i]"] 
  "30064771077" -> "30064771079"  [ label = "CDG: "] 
  "30064771077" -> "30064771080"  [ label = "CDG: "] 
  "30064771077" -> "30064771081"  [ label = "CDG: "] 
  "30064771077" -> "30064771082"  [ label = "CDG: "] 
  "30064771077" -> "30064771083"  [ label = "CDG: "] 
  "30064771077" -> "30064771084"  [ label = "CDG: "] 
  "30064771077" -> "30064771085"  [ label = "CDG: "] 
  "30064771077" -> "146028888064"  [ label = "CDG: "] 
  "30064771084" -> "30064771086"  [ label = "CDG: "] 
  "30064771084" -> "30064771087"  [ label = "CDG: "] 
  "30064771084" -> "30064771088"  [ label = "CDG: "] 
  "30064771084" -> "146028888065"  [ label = "CDG: "] 
  "30064771088" -> "30064771091"  [ label = "CDG: "] 
  "30064771088" -> "30064771092"  [ label = "CDG: "] 
  "30064771088" -> "30064771093"  [ label = "CDG: "] 
  "30064771088" -> "30064771096"  [ label = "CDG: "] 
  "30064771088" -> "30064771097"  [ label = "CDG: "] 
  "30064771088" -> "30064771098"  [ label = "CDG: "] 
  "30064771088" -> "30064771099"  [ label = "CDG: "] 
  "30064771088" -> "30064771100"  [ label = "CDG: "] 
  "30064771088" -> "30064771101"  [ label = "CDG: "] 
  "30064771088" -> "30064771102"  [ label = "CDG: "] 
  "30064771088" -> "30064771103"  [ label = "CDG: "] 
  "30064771088" -> "30064771089"  [ label = "CDG: "] 
  "30064771088" -> "30064771090"  [ label = "CDG: "] 
  "30064771101" -> "30064771107"  [ label = "CDG: "] 
  "30064771101" -> "30064771108"  [ label = "CDG: "] 
  "30064771101" -> "30064771109"  [ label = "CDG: "] 
  "30064771101" -> "30064771110"  [ label = "CDG: "] 
  "30064771101" -> "30064771111"  [ label = "CDG: "] 
  "30064771101" -> "30064771112"  [ label = "CDG: "] 
  "30064771101" -> "30064771113"  [ label = "CDG: "] 
  "30064771101" -> "30064771114"  [ label = "CDG: "] 
  "30064771101" -> "30064771115"  [ label = "CDG: "] 
  "30064771101" -> "30064771116"  [ label = "CDG: "] 
  "30064771101" -> "30064771117"  [ label = "CDG: "] 
  "30064771101" -> "30064771104"  [ label = "CDG: "] 
  "30064771101" -> "30064771105"  [ label = "CDG: "] 
  "30064771101" -> "30064771106"  [ label = "CDG: "] 
  "30064771101" -> "184683593728"  [ label = "CDG: "] 
  "30064771101" -> "146028888067"  [ label = "CDG: "] 
  "30064771116" -> "30064771118"  [ label = "CDG: "] 
  "30064771116" -> "30064771119"  [ label = "CDG: "] 
  "30064771116" -> "30064771120"  [ label = "CDG: "] 
  "30064771116" -> "30064771121"  [ label = "CDG: "] 
  "30064771116" -> "30064771122"  [ label = "CDG: "] 
  "30064771116" -> "30064771123"  [ label = "CDG: "] 
  "30064771116" -> "30064771124"  [ label = "CDG: "] 
  "30064771116" -> "30064771125"  [ label = "CDG: "] 
  "30064771116" -> "146028888068"  [ label = "CDG: "] 
  "30064771124" -> "30064771155"  [ label = "CDG: "] 
  "30064771124" -> "30064771156"  [ label = "CDG: "] 
  "30064771124" -> "30064771157"  [ label = "CDG: "] 
  "30064771124" -> "30064771158"  [ label = "CDG: "] 
  "30064771124" -> "30064771159"  [ label = "CDG: "] 
  "30064771124" -> "30064771160"  [ label = "CDG: "] 
  "30064771124" -> "30064771161"  [ label = "CDG: "] 
  "30064771124" -> "30064771162"  [ label = "CDG: "] 
  "30064771124" -> "30064771163"  [ label = "CDG: "] 
  "30064771124" -> "30064771164"  [ label = "CDG: "] 
  "30064771124" -> "30064771165"  [ label = "CDG: "] 
  "30064771124" -> "30064771166"  [ label = "CDG: "] 
  "30064771124" -> "30064771167"  [ label = "CDG: "] 
  "30064771124" -> "30064771168"  [ label = "CDG: "] 
  "30064771124" -> "30064771139"  [ label = "CDG: "] 
  "30064771124" -> "30064771140"  [ label = "CDG: "] 
  "30064771124" -> "30064771127"  [ label = "CDG: "] 
  "30064771124" -> "30064771128"  [ label = "CDG: "] 
  "30064771124" -> "30064771129"  [ label = "CDG: "] 
  "30064771124" -> "30064771130"  [ label = "CDG: "] 
  "30064771124" -> "30064771134"  [ label = "CDG: "] 
  "30064771124" -> "30064771135"  [ label = "CDG: "] 
  "30064771124" -> "30064771136"  [ label = "CDG: "] 
  "30064771124" -> "30064771137"  [ label = "CDG: "] 
  "30064771124" -> "30064771138"  [ label = "CDG: "] 
  "30064771124" -> "146028888070"  [ label = "CDG: "] 
  "30064771140" -> "30064771140"  [ label = "CDG: "] 
  "30064771140" -> "30064771141"  [ label = "CDG: "] 
  "30064771140" -> "30064771142"  [ label = "CDG: "] 
  "30064771140" -> "30064771143"  [ label = "CDG: "] 
  "30064771140" -> "30064771144"  [ label = "CDG: "] 
  "30064771140" -> "30064771145"  [ label = "CDG: "] 
  "30064771140" -> "30064771146"  [ label = "CDG: "] 
  "30064771140" -> "30064771147"  [ label = "CDG: "] 
  "30064771140" -> "30064771148"  [ label = "CDG: "] 
  "30064771140" -> "30064771149"  [ label = "CDG: "] 
  "30064771140" -> "30064771150"  [ label = "CDG: "] 
  "30064771140" -> "30064771151"  [ label = "CDG: "] 
  "30064771140" -> "30064771152"  [ label = "CDG: "] 
  "30064771140" -> "30064771153"  [ label = "CDG: "] 
  "30064771140" -> "30064771154"  [ label = "CDG: "] 
  "30064771140" -> "55834574848"  [ label = "CDG: "] 
  "30064771140" -> "55834574849"  [ label = "CDG: "] 
  "30064771140" -> "55834574850"  [ label = "CDG: "] 
  "30064771140" -> "55834574851"  [ label = "CDG: "] 
  "30064771092" -> "30064771094"  [ label = "CDG: "] 
  "30064771092" -> "30064771095"  [ label = "CDG: "] 
  "30064771092" -> "30064771096"  [ label = "CDG: "] 
  "30064771092" -> "30064771097"  [ label = "CDG: "] 
  "30064771092" -> "30064771098"  [ label = "CDG: "] 
  "30064771092" -> "30064771099"  [ label = "CDG: "] 
  "30064771092" -> "30064771100"  [ label = "CDG: "] 
  "30064771092" -> "30064771101"  [ label = "CDG: "] 
  "30064771092" -> "30064771102"  [ label = "CDG: "] 
  "30064771092" -> "30064771103"  [ label = "CDG: "] 
  "30064771092" -> "146028888066"  [ label = "CDG: "] 
  "30064771127" -> "30064771124"  [ label = "CDG: "] 
  "30064771127" -> "30064771125"  [ label = "CDG: "] 
  "30064771127" -> "30064771126"  [ label = "CDG: "] 
  "30064771127" -> "30064771131"  [ label = "CDG: "] 
  "30064771127" -> "30064771132"  [ label = "CDG: "] 
  "30064771127" -> "30064771133"  [ label = "CDG: "] 
  "30064771127" -> "146028888069"  [ label = "CDG: "] 
}
"""
)
