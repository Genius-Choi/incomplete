[33mval[0m [36mres556[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "nand_imls_fitimage" {  
"111669149697" [label = <(METHOD,nand_imls_fitimage)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,struct mtd_info *mtd)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,int nand_dev)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,loff_t off)<SUB>1</SUB>> ]
"115964116995" [label = <(PARAM,size_t len)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
	void *imgdata;
	int ret;

	imgdata = malloc(...,{
	void *imgdata;
	int ret;

	imgdata = malloc(...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,void* imgdata: void*)<SUB>4</SUB>> ]
"94489280513" [label = <(LOCAL,int ret: int)<SUB>5</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,imgdata = malloc(len))<SUB>7</SUB>> ]
"68719476736" [label = <(IDENTIFIER,imgdata,imgdata = malloc(len))<SUB>7</SUB>> ]
"30064771073" [label = <(malloc,malloc(len))<SUB>7</SUB>> ]
"68719476737" [label = <(IDENTIFIER,len,malloc(len))<SUB>7</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!imgdata))<SUB>8</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.logicalNot,!imgdata)<SUB>8</SUB>> ]
"68719476738" [label = <(IDENTIFIER,imgdata,!imgdata)<SUB>8</SUB>> ]
"25769803778" [label = <(BLOCK,{
		printf(&quot;May be a FIT Image at NAND device %...,{
		printf(&quot;May be a FIT Image at NAND device %...)<SUB>8</SUB>> ]
"30064771075" [label = <(printf,printf(&quot;May be a FIT Image at NAND device %d of...)<SUB>9</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;May be a FIT Image at NAND device %d offset %0...,printf(&quot;May be a FIT Image at NAND device %d of...)<SUB>9</SUB>> ]
"68719476739" [label = <(IDENTIFIER,nand_dev,printf(&quot;May be a FIT Image at NAND device %d of...)<SUB>10</SUB>> ]
"68719476740" [label = <(IDENTIFIER,off,printf(&quot;May be a FIT Image at NAND device %d of...)<SUB>10</SUB>> ]
"30064771076" [label = <(printf,printf(&quot;   Low memory(cannot allocate memory fo...)<SUB>11</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;   Low memory(cannot allocate memory for image...,printf(&quot;   Low memory(cannot allocate memory fo...)<SUB>11</SUB>> ]
"146028888064" [label = <(RETURN,return -ENOMEM;,return -ENOMEM;)<SUB>12</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.minus,-ENOMEM)<SUB>12</SUB>> ]
"68719476741" [label = <(IDENTIFIER,ENOMEM,-ENOMEM)<SUB>12</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,ret = nand_read_skip_bad(mtd, off, &amp;len, NULL, ...)<SUB>15</SUB>> ]
"68719476742" [label = <(IDENTIFIER,ret,ret = nand_read_skip_bad(mtd, off, &amp;len, NULL, ...)<SUB>15</SUB>> ]
"30064771079" [label = <(nand_read_skip_bad,nand_read_skip_bad(mtd, off, &amp;len, NULL, mtd-&gt;s...)<SUB>15</SUB>> ]
"68719476743" [label = <(IDENTIFIER,mtd,nand_read_skip_bad(mtd, off, &amp;len, NULL, mtd-&gt;s...)<SUB>15</SUB>> ]
"68719476744" [label = <(IDENTIFIER,off,nand_read_skip_bad(mtd, off, &amp;len, NULL, mtd-&gt;s...)<SUB>15</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.addressOf,&amp;len)<SUB>15</SUB>> ]
"68719476745" [label = <(IDENTIFIER,len,nand_read_skip_bad(mtd, off, &amp;len, NULL, mtd-&gt;s...)<SUB>15</SUB>> ]
"68719476746" [label = <(IDENTIFIER,NULL,nand_read_skip_bad(mtd, off, &amp;len, NULL, mtd-&gt;s...)<SUB>15</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.indirectFieldAccess,mtd-&gt;size)<SUB>15</SUB>> ]
"68719476747" [label = <(IDENTIFIER,mtd,nand_read_skip_bad(mtd, off, &amp;len, NULL, mtd-&gt;s...)<SUB>15</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,size,size)<SUB>15</SUB>> ]
"68719476748" [label = <(IDENTIFIER,imgdata,nand_read_skip_bad(mtd, off, &amp;len, NULL, mtd-&gt;s...)<SUB>15</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (ret &lt; 0 &amp;&amp; ret != -EUCLEAN))<SUB>16</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.logicalAnd,ret &lt; 0 &amp;&amp; ret != -EUCLEAN)<SUB>16</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.lessThan,ret &lt; 0)<SUB>16</SUB>> ]
"68719476749" [label = <(IDENTIFIER,ret,ret &lt; 0)<SUB>16</SUB>> ]
"90194313218" [label = <(LITERAL,0,ret &lt; 0)<SUB>16</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.notEquals,ret != -EUCLEAN)<SUB>16</SUB>> ]
"68719476750" [label = <(IDENTIFIER,ret,ret != -EUCLEAN)<SUB>16</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.minus,-EUCLEAN)<SUB>16</SUB>> ]
"68719476751" [label = <(IDENTIFIER,EUCLEAN,-EUCLEAN)<SUB>16</SUB>> ]
"25769803779" [label = <(BLOCK,{
		free(imgdata);
		return ret;
	},{
		free(imgdata);
		return ret;
	})<SUB>16</SUB>> ]
"30064771086" [label = <(free,free(imgdata))<SUB>17</SUB>> ]
"68719476752" [label = <(IDENTIFIER,imgdata,free(imgdata))<SUB>17</SUB>> ]
"146028888065" [label = <(RETURN,return ret;,return ret;)<SUB>18</SUB>> ]
"68719476753" [label = <(IDENTIFIER,ret,return ret;)<SUB>18</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (fit_check_format(imgdata, IMAGE_SIZE_INVAL)))<SUB>21</SUB>> ]
"30064771087" [label = <(fit_check_format,fit_check_format(imgdata, IMAGE_SIZE_INVAL))<SUB>21</SUB>> ]
"68719476754" [label = <(IDENTIFIER,imgdata,fit_check_format(imgdata, IMAGE_SIZE_INVAL))<SUB>21</SUB>> ]
"68719476755" [label = <(IDENTIFIER,IMAGE_SIZE_INVAL,fit_check_format(imgdata, IMAGE_SIZE_INVAL))<SUB>21</SUB>> ]
"25769803780" [label = <(BLOCK,{
		free(imgdata);
		return 0;
	},{
		free(imgdata);
		return 0;
	})<SUB>21</SUB>> ]
"30064771088" [label = <(free,free(imgdata))<SUB>22</SUB>> ]
"68719476756" [label = <(IDENTIFIER,imgdata,free(imgdata))<SUB>22</SUB>> ]
"146028888066" [label = <(RETURN,return 0;,return 0;)<SUB>23</SUB>> ]
"90194313219" [label = <(LITERAL,0,return 0;)<SUB>23</SUB>> ]
"30064771089" [label = <(printf,printf(&quot;FIT Image at NAND device %d offset %08l...)<SUB>26</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;FIT Image at NAND device %d offset %08llX:\n&quot;,printf(&quot;FIT Image at NAND device %d offset %08l...)<SUB>26</SUB>> ]
"68719476757" [label = <(IDENTIFIER,nand_dev,printf(&quot;FIT Image at NAND device %d offset %08l...)<SUB>26</SUB>> ]
"68719476758" [label = <(IDENTIFIER,off,printf(&quot;FIT Image at NAND device %d offset %08l...)<SUB>26</SUB>> ]
"30064771090" [label = <(fit_print_contents,fit_print_contents(imgdata))<SUB>28</SUB>> ]
"68719476759" [label = <(IDENTIFIER,imgdata,fit_print_contents(imgdata))<SUB>28</SUB>> ]
"30064771091" [label = <(free,free(imgdata))<SUB>29</SUB>> ]
"68719476760" [label = <(IDENTIFIER,imgdata,free(imgdata))<SUB>29</SUB>> ]
"146028888067" [label = <(RETURN,return 0;,return 0;)<SUB>31</SUB>> ]
"90194313221" [label = <(LITERAL,0,return 0;)<SUB>31</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,int)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "30064771089"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "25769803777" -> "146028888067"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "47244640256" -> "30064771074"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "25769803778" -> "30064771075"  [ label = "AST: "] 
  "25769803778" -> "30064771076"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "90194313217"  [ label = "AST: "] 
  "146028888064" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476746"  [ label = "AST: "] 
  "30064771079" -> "30064771081"  [ label = "AST: "] 
  "30064771079" -> "68719476748"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "30064771081" -> "55834574848"  [ label = "AST: "] 
  "47244640257" -> "30064771082"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "68719476749"  [ label = "AST: "] 
  "30064771083" -> "90194313218"  [ label = "AST: "] 
  "30064771084" -> "68719476750"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476751"  [ label = "AST: "] 
  "25769803779" -> "30064771086"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "30064771086" -> "68719476752"  [ label = "AST: "] 
  "146028888065" -> "68719476753"  [ label = "AST: "] 
  "47244640258" -> "30064771087"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771087" -> "68719476754"  [ label = "AST: "] 
  "30064771087" -> "68719476755"  [ label = "AST: "] 
  "25769803780" -> "30064771088"  [ label = "AST: "] 
  "25769803780" -> "146028888066"  [ label = "AST: "] 
  "30064771088" -> "68719476756"  [ label = "AST: "] 
  "146028888066" -> "90194313219"  [ label = "AST: "] 
  "30064771089" -> "90194313220"  [ label = "AST: "] 
  "30064771089" -> "68719476757"  [ label = "AST: "] 
  "30064771089" -> "68719476758"  [ label = "AST: "] 
  "30064771090" -> "68719476759"  [ label = "AST: "] 
  "30064771091" -> "68719476760"  [ label = "AST: "] 
  "146028888067" -> "90194313221"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771078" -> "30064771083"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771091" -> "146028888067"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "30064771080"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771082" -> "30064771086"  [ label = "CFG: "] 
  "30064771082" -> "30064771087"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771087" -> "30064771089"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771080" -> "55834574848"  [ label = "CFG: "] 
  "30064771081" -> "30064771079"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771083" -> "30064771085"  [ label = "CFG: "] 
  "30064771084" -> "30064771082"  [ label = "CFG: "] 
  "30064771086" -> "146028888065"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771088" -> "146028888066"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771077" -> "146028888064"  [ label = "CFG: "] 
  "55834574848" -> "30064771081"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: mtd"] 
  "30064771073" -> "128849018880"  [ label = "DDG: len"] 
  "30064771072" -> "128849018880"  [ label = "DDG: malloc(len)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: imgdata = malloc(len)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: imgdata"] 
  "30064771074" -> "128849018880"  [ label = "DDG: !imgdata"] 
  "30064771075" -> "128849018880"  [ label = "DDG: nand_dev"] 
  "30064771075" -> "128849018880"  [ label = "DDG: off"] 
  "30064771075" -> "128849018880"  [ label = "DDG: printf(&quot;May be a FIT Image at NAND device %d offset %08llX:\n&quot;,
				nand_dev, off)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: printf(&quot;   Low memory(cannot allocate memory for image)\n&quot;)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: ENOMEM"] 
  "30064771077" -> "128849018880"  [ label = "DDG: -ENOMEM"] 
  "30064771085" -> "128849018880"  [ label = "DDG: EUCLEAN"] 
  "30064771087" -> "128849018880"  [ label = "DDG: IMAGE_SIZE_INVAL"] 
  "30064771079" -> "128849018880"  [ label = "DDG: NULL"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: len"] 
  "30064771079" -> "30064771078"  [ label = "DDG: off"] 
  "30064771079" -> "30064771078"  [ label = "DDG: imgdata"] 
  "30064771079" -> "30064771078"  [ label = "DDG: mtd-&gt;size"] 
  "30064771079" -> "30064771078"  [ label = "DDG: &amp;len"] 
  "30064771079" -> "30064771078"  [ label = "DDG: NULL"] 
  "30064771079" -> "30064771078"  [ label = "DDG: mtd"] 
  "90194313221" -> "146028888067"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888067"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "115964116993" -> "30064771089"  [ label = "DDG: nand_dev"] 
  "30064771079" -> "30064771089"  [ label = "DDG: off"] 
  "30064771087" -> "30064771090"  [ label = "DDG: imgdata"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771090" -> "30064771091"  [ label = "DDG: imgdata"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "111669149697" -> "90194313221"  [ label = "DDG: "] 
  "115964116995" -> "30064771073"  [ label = "DDG: len"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771072" -> "30064771074"  [ label = "DDG: imgdata"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771077" -> "146028888064"  [ label = "DDG: -ENOMEM"] 
  "115964116992" -> "30064771079"  [ label = "DDG: mtd"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "115964116994" -> "30064771079"  [ label = "DDG: off"] 
  "30064771073" -> "30064771079"  [ label = "DDG: len"] 
  "30064771074" -> "30064771079"  [ label = "DDG: imgdata"] 
  "30064771083" -> "30064771082"  [ label = "DDG: ret"] 
  "30064771083" -> "30064771082"  [ label = "DDG: 0"] 
  "30064771084" -> "30064771082"  [ label = "DDG: ret"] 
  "30064771084" -> "30064771082"  [ label = "DDG: -EUCLEAN"] 
  "68719476753" -> "146028888065"  [ label = "DDG: ret"] 
  "30064771079" -> "30064771087"  [ label = "DDG: imgdata"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "90194313219" -> "146028888066"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888066"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "115964116993" -> "30064771075"  [ label = "DDG: nand_dev"] 
  "115964116994" -> "30064771075"  [ label = "DDG: off"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771078" -> "30064771083"  [ label = "DDG: ret"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771083" -> "30064771084"  [ label = "DDG: ret"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: EUCLEAN"] 
  "30064771079" -> "30064771086"  [ label = "DDG: imgdata"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771084" -> "68719476753"  [ label = "DDG: ret"] 
  "30064771083" -> "68719476753"  [ label = "DDG: ret"] 
  "111669149697" -> "68719476753"  [ label = "DDG: "] 
  "30064771087" -> "30064771088"  [ label = "DDG: imgdata"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "90194313219"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771074" -> "55834574848"  [ label = "CDG: "] 
  "30064771074" -> "146028888064"  [ label = "CDG: "] 
  "30064771074" -> "30064771083"  [ label = "CDG: "] 
  "30064771074" -> "30064771081"  [ label = "CDG: "] 
  "30064771074" -> "30064771082"  [ label = "CDG: "] 
  "30064771074" -> "30064771079"  [ label = "CDG: "] 
  "30064771074" -> "30064771080"  [ label = "CDG: "] 
  "30064771074" -> "30064771077"  [ label = "CDG: "] 
  "30064771074" -> "30064771078"  [ label = "CDG: "] 
  "30064771074" -> "30064771075"  [ label = "CDG: "] 
  "30064771074" -> "30064771076"  [ label = "CDG: "] 
  "30064771082" -> "146028888065"  [ label = "CDG: "] 
  "30064771082" -> "30064771087"  [ label = "CDG: "] 
  "30064771082" -> "30064771086"  [ label = "CDG: "] 
  "30064771087" -> "146028888066"  [ label = "CDG: "] 
  "30064771087" -> "146028888067"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771087" -> "30064771088"  [ label = "CDG: "] 
  "30064771087" -> "30064771091"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
  "30064771083" -> "30064771084"  [ label = "CDG: "] 
}
"""
)
