[33mval[0m [36mres2170[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "xmliter_lxml" {  
"111669149697" [label = <(METHOD,xmliter_lxml)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,etree = import(lxml, etree))<SUB>7</SUB>> ]
"68719476739" [label = <(IDENTIFIER,etree,etree = import(lxml, etree))<SUB>7</SUB>> ]
"30064771074" [label = <(import,import(lxml, etree))<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,import,import(lxml, etree))<SUB>7</SUB>> ]
"90194313216" [label = <(LITERAL,lxml,import(lxml, etree))<SUB>7</SUB>> ]
"90194313217" [label = <(LITERAL,etree,import(lxml, etree))<SUB>7</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,reader = _StreamReader(obj))<SUB>9</SUB>> ]
"68719476743" [label = <(IDENTIFIER,reader,reader = _StreamReader(obj))<SUB>9</SUB>> ]
"30064771076" [label = <(_StreamReader,_StreamReader(obj))<SUB>9</SUB>> ]
"68719476742" [label = <(IDENTIFIER,_StreamReader,_StreamReader(obj))<SUB>9</SUB>> ]
"68719476741" [label = <(IDENTIFIER,obj,_StreamReader(obj))<SUB>9</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,tag = f&quot;{{{namespace}}}{nodename}&quot; if namespace...)<SUB>10</SUB>> ]
"68719476748" [label = <(IDENTIFIER,tag,tag = f&quot;{{{namespace}}}{nodename}&quot; if namespace...)<SUB>10</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.conditional,f&quot;{{{namespace}}}{nodename}&quot; if namespace else ...)<SUB>10</SUB>> ]
"68719476746" [label = <(IDENTIFIER,namespace,f&quot;{{{namespace}}}{nodename}&quot; if namespace else ...)<SUB>10</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.formatString,f&quot;{{{namespace}}}{nodename}&quot;)<SUB>10</SUB>> ]
"90194313218" [label = <(LITERAL,{{,f&quot;{{{namespace}}}{nodename}&quot;)<SUB>10</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.formattedValue,{namespace})<SUB>10</SUB>> ]
"68719476744" [label = <(IDENTIFIER,namespace,{namespace})<SUB>10</SUB>> ]
"90194313219" [label = <(LITERAL,}},f&quot;{{{namespace}}}{nodename}&quot;)<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.formattedValue,{nodename})<SUB>10</SUB>> ]
"68719476745" [label = <(IDENTIFIER,nodename,{nodename})<SUB>10</SUB>> ]
"68719476747" [label = <(IDENTIFIER,nodename,f&quot;{{{namespace}}}{nodename}&quot; if namespace else ...)<SUB>10</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,iterable = etree.iterparse(cast(&quot;SupportsReadCl...)<SUB>11</SUB>> ]
"68719476755" [label = <(IDENTIFIER,iterable,iterable = etree.iterparse(cast(&quot;SupportsReadCl...)<SUB>11</SUB>> ]
"30064771086" [label = <(iterparse,etree.iterparse(cast(&quot;SupportsReadClose[bytes]&quot;...)<SUB>11</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.fieldAccess,etree.iterparse)<SUB>11</SUB>> ]
"68719476753" [label = <(IDENTIFIER,etree,etree.iterparse(cast(&quot;SupportsReadClose[bytes]&quot;...)<SUB>11</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,iterparse,iterparse)<SUB>11</SUB>> ]
"68719476754" [label = <(IDENTIFIER,etree,etree.iterparse(cast(&quot;SupportsReadClose[bytes]&quot;...)<SUB>11</SUB>> ]
"30064771083" [label = <(cast,cast(&quot;SupportsReadClose[bytes]&quot;, reader))<SUB>12</SUB>> ]
"68719476750" [label = <(IDENTIFIER,cast,cast(&quot;SupportsReadClose[bytes]&quot;, reader))<SUB>12</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;SupportsReadClose[bytes]&quot;,cast(&quot;SupportsReadClose[bytes]&quot;, reader))<SUB>12</SUB>> ]
"68719476749" [label = <(IDENTIFIER,reader,cast(&quot;SupportsReadClose[bytes]&quot;, reader))<SUB>12</SUB>> ]
"68719476751" [label = <(IDENTIFIER,tag,etree.iterparse(cast(&quot;SupportsReadClose[bytes]&quot;...)<SUB>12</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.fieldAccess,reader.encoding)<SUB>12</SUB>> ]
"68719476752" [label = <(IDENTIFIER,reader,etree.iterparse(cast(&quot;SupportsReadClose[bytes]&quot;...)<SUB>12</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,encoding,encoding)<SUB>12</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,selxpath = &quot;//&quot; + f&quot;{prefix}:{nodename}&quot; if nam...)<SUB>14</SUB>> ]
"68719476760" [label = <(IDENTIFIER,selxpath,selxpath = &quot;//&quot; + f&quot;{prefix}:{nodename}&quot; if nam...)<SUB>14</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.addition,&quot;//&quot; + f&quot;{prefix}:{nodename}&quot; if namespace else...)<SUB>14</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;//&quot;,&quot;//&quot; + f&quot;{prefix}:{nodename}&quot; if namespace else...)<SUB>14</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.conditional,f&quot;{prefix}:{nodename}&quot; if namespace else nodename)<SUB>14</SUB>> ]
"68719476758" [label = <(IDENTIFIER,namespace,f&quot;{prefix}:{nodename}&quot; if namespace else nodename)<SUB>14</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.formatString,f&quot;{prefix}:{nodename}&quot;)<SUB>14</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.formattedValue,{prefix})<SUB>14</SUB>> ]
"68719476756" [label = <(IDENTIFIER,prefix,{prefix})<SUB>14</SUB>> ]
"90194313222" [label = <(LITERAL,:,f&quot;{prefix}:{nodename}&quot;)<SUB>14</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.formattedValue,{nodename})<SUB>14</SUB>> ]
"68719476757" [label = <(IDENTIFIER,nodename,{nodename})<SUB>14</SUB>> ]
"68719476759" [label = <(IDENTIFIER,nodename,f&quot;{prefix}:{nodename}&quot; if namespace else nodename)<SUB>14</SUB>> ]
"25769803780" [label = <(BLOCK,tmp0 = iterable.__iter__()
while ... : ...,tmp0 = iterable.__iter__()
while ... : ...)<SUB>15</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.assignment,tmp0 = iterable.__iter__())<SUB>15</SUB>> ]
"68719476777" [label = <(IDENTIFIER,tmp0,tmp0 = iterable.__iter__())<SUB>15</SUB>> ]
"30064771104" [label = <(__iter__,iterable.__iter__())<SUB>15</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.fieldAccess,iterable.__iter__)<SUB>15</SUB>> ]
"68719476775" [label = <(IDENTIFIER,iterable,iterable.__iter__())<SUB>15</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,__iter__,__iter__)<SUB>15</SUB>> ]
"68719476776" [label = <(IDENTIFIER,iterable,iterable.__iter__())<SUB>15</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,WHILE,while ... : ...)<SUB>15</SUB>> ]
"184683593729" [label = <(UNKNOWN,iteratorNonEmptyOrException,iteratorNonEmptyOrException)<SUB>15</SUB>> ]
"25769803779" [label = <(BLOCK,tmp1 = tmp0.__next__()
_ = tmp1[0]
node = tmp1[...,tmp1 = tmp0.__next__()
_ = tmp1[0]
node = tmp1[...)<SUB>15</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.assignment,tmp1 = tmp0.__next__())<SUB>15</SUB>> ]
"68719476780" [label = <(IDENTIFIER,tmp1,tmp1 = tmp0.__next__())<SUB>15</SUB>> ]
"30064771107" [label = <(__next__,tmp0.__next__())<SUB>15</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.fieldAccess,tmp0.__next__)<SUB>15</SUB>> ]
"68719476778" [label = <(IDENTIFIER,tmp0,tmp0.__next__())<SUB>15</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,__next__,__next__)<SUB>15</SUB>> ]
"68719476779" [label = <(IDENTIFIER,tmp0,tmp0.__next__())<SUB>15</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.assignment,_ = tmp1[0])<SUB>15</SUB>> ]
"68719476781" [label = <(IDENTIFIER,_,_ = tmp1[0])<SUB>15</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.indexAccess,tmp1[0])<SUB>15</SUB>> ]
"68719476782" [label = <(IDENTIFIER,tmp1,_ = tmp1[0])<SUB>15</SUB>> ]
"90194313225" [label = <(LITERAL,0,_ = tmp1[0])<SUB>15</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.assignment,node = tmp1[1])<SUB>15</SUB>> ]
"68719476783" [label = <(IDENTIFIER,node,node = tmp1[1])<SUB>15</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.indexAccess,tmp1[1])<SUB>15</SUB>> ]
"68719476784" [label = <(IDENTIFIER,tmp1,node = tmp1[1])<SUB>15</SUB>> ]
"90194313226" [label = <(LITERAL,1,node = tmp1[1])<SUB>15</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,nodetext = etree.tostring(node, encoding = &quot;uni...)<SUB>16</SUB>> ]
"68719476764" [label = <(IDENTIFIER,nodetext,nodetext = etree.tostring(node, encoding = &quot;uni...)<SUB>16</SUB>> ]
"30064771095" [label = <(tostring,etree.tostring(node, encoding = &quot;unicode&quot;))<SUB>16</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.fieldAccess,etree.tostring)<SUB>16</SUB>> ]
"68719476762" [label = <(IDENTIFIER,etree,etree.tostring(node, encoding = &quot;unicode&quot;))<SUB>16</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,tostring,tostring)<SUB>16</SUB>> ]
"68719476763" [label = <(IDENTIFIER,etree,etree.tostring(node, encoding = &quot;unicode&quot;))<SUB>16</SUB>> ]
"68719476761" [label = <(IDENTIFIER,node,etree.tostring(node, encoding = &quot;unicode&quot;))<SUB>16</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;unicode&quot;,etree.tostring(node, encoding = &quot;unicode&quot;))<SUB>16</SUB>> ]
"30064771098" [label = <(clear,node.clear())<SUB>17</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.fieldAccess,node.clear)<SUB>17</SUB>> ]
"68719476765" [label = <(IDENTIFIER,node,node.clear())<SUB>17</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>17</SUB>> ]
"68719476766" [label = <(IDENTIFIER,node,node.clear())<SUB>17</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.assignment,xs = Selector(text = nodetext, type = &quot;xml&quot;))<SUB>18</SUB>> ]
"68719476769" [label = <(IDENTIFIER,xs,xs = Selector(text = nodetext, type = &quot;xml&quot;))<SUB>18</SUB>> ]
"30064771099" [label = <(Selector,Selector(text = nodetext, type = &quot;xml&quot;))<SUB>18</SUB>> ]
"68719476768" [label = <(IDENTIFIER,Selector,Selector(text = nodetext, type = &quot;xml&quot;))<SUB>18</SUB>> ]
"68719476767" [label = <(IDENTIFIER,nodetext,Selector(text = nodetext, type = &quot;xml&quot;))<SUB>18</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;xml&quot;,Selector(text = nodetext, type = &quot;xml&quot;))<SUB>18</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>19</SUB>> ]
"68719476770" [label = <(IDENTIFIER,namespace,if ... : ...)<SUB>19</SUB>> ]
"25769803778" [label = <(BLOCK,xs.register_namespace(prefix, namespace),xs.register_namespace(prefix, namespace))<SUB>19</SUB>> ]
"30064771102" [label = <(register_namespace,xs.register_namespace(prefix, namespace))<SUB>20</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.fieldAccess,xs.register_namespace)<SUB>20</SUB>> ]
"68719476773" [label = <(IDENTIFIER,xs,xs.register_namespace(prefix, namespace))<SUB>20</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,register_namespace,register_namespace)<SUB>20</SUB>> ]
"68719476774" [label = <(IDENTIFIER,xs,xs.register_namespace(prefix, namespace))<SUB>20</SUB>> ]
"68719476771" [label = <(IDENTIFIER,prefix,xs.register_namespace(prefix, namespace))<SUB>20</SUB>> ]
"68719476772" [label = <(IDENTIFIER,namespace,xs.register_namespace(prefix, namespace))<SUB>20</SUB>> ]
"184683593728" [label = <(UNKNOWN,Yield(Some(Subscript(Call(Attribute(Name(xs,21,...,Yield(Some(Subscript(Call(Attribute(Name(xs,21,...)<SUB>21</SUB>> ]
"94489280515" [label = <(LOCAL,etree: lxml.py:&lt;module&gt;.etree)<SUB>7</SUB>> ]
"94489280516" [label = <(LOCAL,import: ANY)<SUB>7</SUB>> ]
"94489280518" [label = <(LOCAL,_StreamReader: ANY)<SUB>9</SUB>> ]
"94489280520" [label = <(LOCAL,reader: _StreamReader.&lt;returnValue&gt;)<SUB>9</SUB>> ]
"94489280521" [label = <(LOCAL,tag: __builtin.bool)<SUB>10</SUB>> ]
"94489280522" [label = <(LOCAL,cast: ANY)<SUB>12</SUB>> ]
"94489280524" [label = <(LOCAL,iterable: lxml.py:&lt;module&gt;.etree.iterparse.&lt;returnValue&gt;)<SUB>11</SUB>> ]
"94489280525" [label = <(LOCAL,selxpath: ANY)<SUB>14</SUB>> ]
"94489280526" [label = <(LOCAL,node: lxml.py:&lt;module&gt;.etree.iterparse.&lt;returnValue&gt;.__iter__.&lt;returnValue&gt;.__next__.&lt;returnValue&gt;.&lt;indexAccess&gt;)<SUB>16</SUB>> ]
"94489280528" [label = <(LOCAL,nodetext: lxml.py:&lt;module&gt;.etree.tostring.&lt;returnValue&gt;)<SUB>16</SUB>> ]
"94489280529" [label = <(LOCAL,Selector: ANY)<SUB>18</SUB>> ]
"94489280531" [label = <(LOCAL,xs: Selector.&lt;returnValue&gt;)<SUB>18</SUB>> ]
"94489280532" [label = <(LOCAL,tmp0: lxml.py:&lt;module&gt;.etree.iterparse.&lt;returnValue&gt;.__iter__.&lt;returnValue&gt;)<SUB>15</SUB>> ]
"94489280533" [label = <(LOCAL,tmp1: lxml.py:&lt;module&gt;.etree.iterparse.&lt;returnValue&gt;.__iter__.&lt;returnValue&gt;.__next__.&lt;returnValue&gt;)<SUB>15</SUB>> ]
"94489280534" [label = <(LOCAL,_: lxml.py:&lt;module&gt;.etree.iterparse.&lt;returnValue&gt;.__iter__.&lt;returnValue&gt;.__next__.&lt;returnValue&gt;.&lt;indexAccess&gt;)<SUB>15</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,obj)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,nodename)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,namespace)<SUB>4</SUB>> ]
"115964116995" [label = <(PARAM,prefix)<SUB>5</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,typing.Generator)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "25769803780"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "94489280525"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "94489280528"  [ label = "AST: "] 
  "25769803777" -> "94489280529"  [ label = "AST: "] 
  "25769803777" -> "94489280531"  [ label = "AST: "] 
  "25769803777" -> "94489280532"  [ label = "AST: "] 
  "25769803777" -> "94489280533"  [ label = "AST: "] 
  "25769803777" -> "94489280534"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771082" -> "68719476748"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "30064771080"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "30064771080" -> "90194313218"  [ label = "AST: "] 
  "30064771080" -> "30064771078"  [ label = "AST: "] 
  "30064771080" -> "90194313219"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771087" -> "68719476755"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "68719476754"  [ label = "AST: "] 
  "30064771086" -> "30064771083"  [ label = "AST: "] 
  "30064771086" -> "68719476751"  [ label = "AST: "] 
  "30064771086" -> "30064771084"  [ label = "AST: "] 
  "30064771085" -> "68719476753"  [ label = "AST: "] 
  "30064771085" -> "55834574849"  [ label = "AST: "] 
  "30064771083" -> "68719476750"  [ label = "AST: "] 
  "30064771083" -> "90194313220"  [ label = "AST: "] 
  "30064771083" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "68719476752"  [ label = "AST: "] 
  "30064771084" -> "55834574848"  [ label = "AST: "] 
  "30064771093" -> "68719476760"  [ label = "AST: "] 
  "30064771093" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "90194313221"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476758"  [ label = "AST: "] 
  "30064771091" -> "30064771090"  [ label = "AST: "] 
  "30064771091" -> "68719476759"  [ label = "AST: "] 
  "30064771090" -> "30064771088"  [ label = "AST: "] 
  "30064771090" -> "90194313222"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "68719476756"  [ label = "AST: "] 
  "30064771089" -> "68719476757"  [ label = "AST: "] 
  "25769803780" -> "30064771105"  [ label = "AST: "] 
  "25769803780" -> "47244640257"  [ label = "AST: "] 
  "30064771105" -> "68719476777"  [ label = "AST: "] 
  "30064771105" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "30064771103"  [ label = "AST: "] 
  "30064771104" -> "68719476776"  [ label = "AST: "] 
  "30064771103" -> "68719476775"  [ label = "AST: "] 
  "30064771103" -> "55834574853"  [ label = "AST: "] 
  "47244640257" -> "184683593729"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "30064771108"  [ label = "AST: "] 
  "25769803779" -> "30064771110"  [ label = "AST: "] 
  "25769803779" -> "30064771112"  [ label = "AST: "] 
  "25769803779" -> "30064771096"  [ label = "AST: "] 
  "25769803779" -> "30064771098"  [ label = "AST: "] 
  "25769803779" -> "30064771100"  [ label = "AST: "] 
  "25769803779" -> "47244640256"  [ label = "AST: "] 
  "25769803779" -> "184683593728"  [ label = "AST: "] 
  "30064771108" -> "68719476780"  [ label = "AST: "] 
  "30064771108" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "30064771106"  [ label = "AST: "] 
  "30064771107" -> "68719476779"  [ label = "AST: "] 
  "30064771106" -> "68719476778"  [ label = "AST: "] 
  "30064771106" -> "55834574854"  [ label = "AST: "] 
  "30064771110" -> "68719476781"  [ label = "AST: "] 
  "30064771110" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "68719476782"  [ label = "AST: "] 
  "30064771109" -> "90194313225"  [ label = "AST: "] 
  "30064771112" -> "68719476783"  [ label = "AST: "] 
  "30064771112" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "68719476784"  [ label = "AST: "] 
  "30064771111" -> "90194313226"  [ label = "AST: "] 
  "30064771096" -> "68719476764"  [ label = "AST: "] 
  "30064771096" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "30064771094"  [ label = "AST: "] 
  "30064771095" -> "68719476763"  [ label = "AST: "] 
  "30064771095" -> "68719476761"  [ label = "AST: "] 
  "30064771095" -> "90194313223"  [ label = "AST: "] 
  "30064771094" -> "68719476762"  [ label = "AST: "] 
  "30064771094" -> "55834574850"  [ label = "AST: "] 
  "30064771098" -> "30064771097"  [ label = "AST: "] 
  "30064771098" -> "68719476766"  [ label = "AST: "] 
  "30064771097" -> "68719476765"  [ label = "AST: "] 
  "30064771097" -> "55834574851"  [ label = "AST: "] 
  "30064771100" -> "68719476769"  [ label = "AST: "] 
  "30064771100" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476768"  [ label = "AST: "] 
  "30064771099" -> "68719476767"  [ label = "AST: "] 
  "30064771099" -> "90194313224"  [ label = "AST: "] 
  "47244640256" -> "68719476770"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "30064771101"  [ label = "AST: "] 
  "30064771102" -> "68719476774"  [ label = "AST: "] 
  "30064771102" -> "68719476771"  [ label = "AST: "] 
  "30064771102" -> "68719476772"  [ label = "AST: "] 
  "30064771101" -> "68719476773"  [ label = "AST: "] 
  "30064771101" -> "55834574852"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771077" -> "30064771081"  [ label = "CFG: "] 
  "30064771082" -> "55834574849"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771087" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "55834574853"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771105" -> "184683593729"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771085" -> "30064771083"  [ label = "CFG: "] 
  "30064771083" -> "55834574848"  [ label = "CFG: "] 
  "30064771084" -> "30064771086"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "184683593729" -> "55834574854"  [ label = "CFG: "] 
  "184683593729" -> "128849018881"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "55834574849" -> "30064771085"  [ label = "CFG: "] 
  "55834574848" -> "30064771084"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771103" -> "30064771104"  [ label = "CFG: "] 
  "30064771108" -> "30064771109"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771112" -> "55834574850"  [ label = "CFG: "] 
  "30064771096" -> "55834574851"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771100" -> "68719476770"  [ label = "CFG: "] 
  "184683593728" -> "184683593729"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "55834574853" -> "30064771103"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "30064771111" -> "30064771112"  [ label = "CFG: "] 
  "30064771095" -> "30064771096"  [ label = "CFG: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771099" -> "30064771100"  [ label = "CFG: "] 
  "68719476770" -> "184683593728"  [ label = "CFG: "] 
  "68719476770" -> "55834574852"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "55834574851" -> "30064771097"  [ label = "CFG: "] 
  "30064771102" -> "184683593728"  [ label = "CFG: "] 
  "55834574854" -> "30064771106"  [ label = "CFG: "] 
  "55834574850" -> "30064771094"  [ label = "CFG: "] 
  "30064771101" -> "30064771102"  [ label = "CFG: "] 
  "55834574852" -> "30064771101"  [ label = "CFG: "] 
  "111669149697" -> "30064771074"  [ label = "CFG: "] 
  "115964116995" -> "128849018881"  [ label = "DDG: prefix"] 
  "30064771075" -> "128849018881"  [ label = "DDG: import(lxml, etree)"] 
  "30064771075" -> "128849018881"  [ label = "DDG: etree = import(lxml, etree)"] 
  "30064771076" -> "128849018881"  [ label = "DDG: obj"] 
  "30064771077" -> "128849018881"  [ label = "DDG: _StreamReader(obj)"] 
  "30064771077" -> "128849018881"  [ label = "DDG: reader = _StreamReader(obj)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: {namespace}"] 
  "30064771080" -> "128849018881"  [ label = "DDG: {nodename}"] 
  "30064771081" -> "128849018881"  [ label = "DDG: f&quot;{{{namespace}}}{nodename}&quot;"] 
  "30064771082" -> "128849018881"  [ label = "DDG: f&quot;{{{namespace}}}{nodename}&quot; if namespace else nodename"] 
  "30064771082" -> "128849018881"  [ label = "DDG: tag = f&quot;{{{namespace}}}{nodename}&quot; if namespace else nodename"] 
  "30064771086" -> "128849018881"  [ label = "DDG: etree"] 
  "30064771083" -> "128849018881"  [ label = "DDG: reader"] 
  "30064771086" -> "128849018881"  [ label = "DDG: cast(&quot;SupportsReadClose[bytes]&quot;, reader)"] 
  "30064771086" -> "128849018881"  [ label = "DDG: tag"] 
  "30064771086" -> "128849018881"  [ label = "DDG: reader.encoding"] 
  "30064771087" -> "128849018881"  [ label = "DDG: etree.iterparse(cast(&quot;SupportsReadClose[bytes]&quot;, reader), tag = tag, encoding = reader.encoding)"] 
  "30064771087" -> "128849018881"  [ label = "DDG: iterable = etree.iterparse(cast(&quot;SupportsReadClose[bytes]&quot;, reader), tag = tag, encoding = reader.encoding)"] 
  "30064771093" -> "128849018881"  [ label = "DDG: selxpath"] 
  "30064771091" -> "128849018881"  [ label = "DDG: namespace"] 
  "30064771091" -> "128849018881"  [ label = "DDG: nodename"] 
  "30064771088" -> "128849018881"  [ label = "DDG: prefix"] 
  "30064771090" -> "128849018881"  [ label = "DDG: {prefix}"] 
  "30064771090" -> "128849018881"  [ label = "DDG: {nodename}"] 
  "30064771091" -> "128849018881"  [ label = "DDG: f&quot;{prefix}:{nodename}&quot;"] 
  "30064771092" -> "128849018881"  [ label = "DDG: f&quot;{prefix}:{nodename}&quot; if namespace else nodename"] 
  "30064771093" -> "128849018881"  [ label = "DDG: &quot;//&quot; + f&quot;{prefix}:{nodename}&quot; if namespace else nodename"] 
  "30064771093" -> "128849018881"  [ label = "DDG: selxpath = &quot;//&quot; + f&quot;{prefix}:{nodename}&quot; if namespace else nodename"] 
  "30064771105" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771104" -> "128849018881"  [ label = "DDG: iterable"] 
  "30064771105" -> "128849018881"  [ label = "DDG: iterable.__iter__()"] 
  "30064771105" -> "128849018881"  [ label = "DDG: tmp0 = iterable.__iter__()"] 
  "30064771108" -> "128849018881"  [ label = "DDG: tmp1"] 
  "30064771107" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771108" -> "128849018881"  [ label = "DDG: tmp0.__next__()"] 
  "30064771108" -> "128849018881"  [ label = "DDG: tmp1 = tmp0.__next__()"] 
  "30064771110" -> "128849018881"  [ label = "DDG: _"] 
  "30064771110" -> "128849018881"  [ label = "DDG: tmp1[0]"] 
  "30064771110" -> "128849018881"  [ label = "DDG: _ = tmp1[0]"] 
  "30064771112" -> "128849018881"  [ label = "DDG: tmp1[1]"] 
  "30064771112" -> "128849018881"  [ label = "DDG: node = tmp1[1]"] 
  "30064771095" -> "128849018881"  [ label = "DDG: etree"] 
  "30064771096" -> "128849018881"  [ label = "DDG: etree.tostring(node, encoding = &quot;unicode&quot;)"] 
  "30064771096" -> "128849018881"  [ label = "DDG: nodetext = etree.tostring(node, encoding = &quot;unicode&quot;)"] 
  "30064771098" -> "128849018881"  [ label = "DDG: node"] 
  "30064771098" -> "128849018881"  [ label = "DDG: node.clear()"] 
  "30064771100" -> "128849018881"  [ label = "DDG: xs"] 
  "30064771099" -> "128849018881"  [ label = "DDG: nodetext"] 
  "30064771100" -> "128849018881"  [ label = "DDG: Selector(text = nodetext, type = &quot;xml&quot;)"] 
  "30064771100" -> "128849018881"  [ label = "DDG: xs = Selector(text = nodetext, type = &quot;xml&quot;)"] 
  "30064771102" -> "128849018881"  [ label = "DDG: xs"] 
  "30064771102" -> "128849018881"  [ label = "DDG: prefix"] 
  "30064771102" -> "128849018881"  [ label = "DDG: namespace"] 
  "30064771102" -> "128849018881"  [ label = "DDG: xs.register_namespace(prefix, namespace)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: lxml"] 
  "30064771074" -> "30064771075"  [ label = "DDG: etree"] 
  "30064771076" -> "30064771077"  [ label = "DDG: obj"] 
  "30064771080" -> "30064771082"  [ label = "DDG: {{"] 
  "30064771080" -> "30064771082"  [ label = "DDG: {namespace}"] 
  "30064771080" -> "30064771082"  [ label = "DDG: }}"] 
  "30064771080" -> "30064771082"  [ label = "DDG: {nodename}"] 
  "115964116993" -> "30064771082"  [ label = "DDG: nodename"] 
  "30064771079" -> "30064771082"  [ label = "DDG: nodename"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771086" -> "30064771087"  [ label = "DDG: etree"] 
  "30064771086" -> "30064771087"  [ label = "DDG: cast(&quot;SupportsReadClose[bytes]&quot;, reader)"] 
  "30064771086" -> "30064771087"  [ label = "DDG: tag"] 
  "30064771086" -> "30064771087"  [ label = "DDG: reader.encoding"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771090" -> "30064771093"  [ label = "DDG: {prefix}"] 
  "30064771090" -> "30064771093"  [ label = "DDG: :"] 
  "30064771090" -> "30064771093"  [ label = "DDG: {nodename}"] 
  "30064771089" -> "30064771093"  [ label = "DDG: nodename"] 
  "115964116993" -> "30064771093"  [ label = "DDG: nodename"] 
  "30064771079" -> "30064771093"  [ label = "DDG: nodename"] 
  "111669149697" -> "25769803780"  [ label = "DDG: "] 
  "30064771104" -> "30064771105"  [ label = "DDG: iterable"] 
  "111669149697" -> "68719476740"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "68719476742"  [ label = "DDG: "] 
  "115964116992" -> "30064771076"  [ label = "DDG: obj"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771080" -> "30064771081"  [ label = "DDG: {{"] 
  "30064771080" -> "30064771081"  [ label = "DDG: {namespace}"] 
  "30064771080" -> "30064771081"  [ label = "DDG: }}"] 
  "30064771080" -> "30064771081"  [ label = "DDG: {nodename}"] 
  "115964116993" -> "30064771081"  [ label = "DDG: nodename"] 
  "30064771079" -> "30064771081"  [ label = "DDG: nodename"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771075" -> "30064771086"  [ label = "DDG: etree"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771083" -> "30064771086"  [ label = "DDG: &quot;SupportsReadClose[bytes]&quot;"] 
  "30064771083" -> "30064771086"  [ label = "DDG: reader"] 
  "30064771082" -> "30064771086"  [ label = "DDG: tag"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771090" -> "30064771092"  [ label = "DDG: {prefix}"] 
  "30064771090" -> "30064771092"  [ label = "DDG: :"] 
  "30064771090" -> "30064771092"  [ label = "DDG: {nodename}"] 
  "30064771089" -> "30064771092"  [ label = "DDG: nodename"] 
  "115964116993" -> "30064771092"  [ label = "DDG: nodename"] 
  "30064771079" -> "30064771092"  [ label = "DDG: nodename"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771078" -> "30064771080"  [ label = "DDG: namespace"] 
  "30064771079" -> "30064771080"  [ label = "DDG: nodename"] 
  "111669149697" -> "68719476750"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771077" -> "30064771083"  [ label = "DDG: reader"] 
  "30064771090" -> "30064771091"  [ label = "DDG: {prefix}"] 
  "30064771090" -> "30064771091"  [ label = "DDG: :"] 
  "30064771090" -> "30064771091"  [ label = "DDG: {nodename}"] 
  "30064771089" -> "30064771091"  [ label = "DDG: nodename"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "115964116993" -> "30064771091"  [ label = "DDG: nodename"] 
  "30064771079" -> "30064771091"  [ label = "DDG: nodename"] 
  "30064771087" -> "30064771104"  [ label = "DDG: iterable"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771107" -> "30064771108"  [ label = "DDG: tmp0"] 
  "30064771108" -> "30064771110"  [ label = "DDG: tmp1"] 
  "30064771108" -> "30064771112"  [ label = "DDG: tmp1"] 
  "30064771095" -> "30064771096"  [ label = "DDG: etree"] 
  "30064771095" -> "30064771096"  [ label = "DDG: node"] 
  "30064771095" -> "30064771096"  [ label = "DDG: &quot;unicode&quot;"] 
  "30064771099" -> "30064771100"  [ label = "DDG: nodetext"] 
  "30064771099" -> "30064771100"  [ label = "DDG: &quot;xml&quot;"] 
  "115964116994" -> "30064771078"  [ label = "DDG: namespace"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "115964116993" -> "30064771079"  [ label = "DDG: nodename"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771088" -> "30064771090"  [ label = "DDG: prefix"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771089" -> "30064771090"  [ label = "DDG: nodename"] 
  "30064771095" -> "30064771098"  [ label = "DDG: node"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "111669149697" -> "68719476770"  [ label = "DDG: "] 
  "115964116995" -> "30064771088"  [ label = "DDG: prefix"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "115964116993" -> "30064771089"  [ label = "DDG: nodename"] 
  "30064771079" -> "30064771089"  [ label = "DDG: nodename"] 
  "30064771105" -> "30064771107"  [ label = "DDG: tmp0"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771086" -> "30064771095"  [ label = "DDG: etree"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771112" -> "30064771095"  [ label = "DDG: node"] 
  "111669149697" -> "68719476768"  [ label = "DDG: "] 
  "30064771096" -> "30064771099"  [ label = "DDG: nodetext"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771100" -> "30064771102"  [ label = "DDG: xs"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "115964116995" -> "30064771102"  [ label = "DDG: prefix"] 
  "30064771088" -> "30064771102"  [ label = "DDG: prefix"] 
  "184683593729" -> "30064771094"  [ label = "CDG: "] 
  "184683593729" -> "30064771096"  [ label = "CDG: "] 
  "184683593729" -> "30064771095"  [ label = "CDG: "] 
  "184683593729" -> "30064771098"  [ label = "CDG: "] 
  "184683593729" -> "30064771097"  [ label = "CDG: "] 
  "184683593729" -> "30064771100"  [ label = "CDG: "] 
  "184683593729" -> "30064771099"  [ label = "CDG: "] 
  "184683593729" -> "30064771110"  [ label = "CDG: "] 
  "184683593729" -> "30064771109"  [ label = "CDG: "] 
  "184683593729" -> "30064771112"  [ label = "CDG: "] 
  "184683593729" -> "30064771111"  [ label = "CDG: "] 
  "184683593729" -> "30064771106"  [ label = "CDG: "] 
  "184683593729" -> "30064771108"  [ label = "CDG: "] 
  "184683593729" -> "30064771107"  [ label = "CDG: "] 
  "184683593729" -> "184683593728"  [ label = "CDG: "] 
  "184683593729" -> "184683593729"  [ label = "CDG: "] 
  "184683593729" -> "68719476770"  [ label = "CDG: "] 
  "184683593729" -> "55834574850"  [ label = "CDG: "] 
  "184683593729" -> "55834574851"  [ label = "CDG: "] 
  "184683593729" -> "55834574854"  [ label = "CDG: "] 
  "68719476770" -> "30064771102"  [ label = "CDG: "] 
  "68719476770" -> "30064771101"  [ label = "CDG: "] 
  "68719476770" -> "55834574852"  [ label = "CDG: "] 
}
"""
)
