[33mval[0m [36mres231[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_constant_folds" {  
"111669149697" [label = <(METHOD,test_constant_folds)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,some_prime = 10013677)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,some_prime,some_prime = 10013677)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,10013677,some_prime = 10013677)<SUB>2</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,code = f&quot;&quot;&quot;
SOME_CONSTANT: constant(uint256) = ...)<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,code,code = f&quot;&quot;&quot;
SOME_CONSTANT: constant(uint256) = ...)<SUB>3</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.formatString,f&quot;&quot;&quot;
SOME_CONSTANT: constant(uint256) = 11 + 1
...)<SUB>3</SUB>> ]
"90194313217" [label = <(LITERAL,
SOME_CONSTANT: constant(uint256) = 11 + 1
SOME...,f&quot;&quot;&quot;
SOME_CONSTANT: constant(uint256) = 11 + 1
...)<SUB>3</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.formattedValue,{some_prime})<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,some_prime,{some_prime})<SUB>5</SUB>> ]
"90194313218" [label = <(LITERAL,

@external
def test() -&gt; uint256:
    # calcul...,f&quot;&quot;&quot;
SOME_CONSTANT: constant(uint256) = 11 + 1
...)<SUB>5</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,lll = compile_code(code, [&quot;ir&quot;])[&quot;ir&quot;])<SUB>14</SUB>> ]
"68719476742" [label = <(IDENTIFIER,lll,lll = compile_code(code, [&quot;ir&quot;])[&quot;ir&quot;])<SUB>14</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indexAccess,compile_code(code, [&quot;ir&quot;])[&quot;ir&quot;])<SUB>14</SUB>> ]
"30064771077" [label = <(compile_code,compile_code(code, [&quot;ir&quot;]))<SUB>14</SUB>> ]
"68719476741" [label = <(IDENTIFIER,compile_code,compile_code(code, [&quot;ir&quot;]))<SUB>14</SUB>> ]
"68719476740" [label = <(IDENTIFIER,code,compile_code(code, [&quot;ir&quot;]))<SUB>14</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.listLiteral,[&quot;ir&quot;])<SUB>14</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;ir&quot;,[&quot;ir&quot;])<SUB>14</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;ir&quot;,lll = compile_code(code, [&quot;ir&quot;])[&quot;ir&quot;])<SUB>14</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assert,assert search_for_sublist(lll, [&quot;mstore&quot;, [0], ...)<SUB>15</SUB>> ]
"30064771085" [label = <(search_for_sublist,search_for_sublist(lll, [&quot;mstore&quot;, [0], [2 ** 1...)<SUB>15</SUB>> ]
"68719476745" [label = <(IDENTIFIER,search_for_sublist,search_for_sublist(lll, [&quot;mstore&quot;, [0], [2 ** 1...)<SUB>15</SUB>> ]
"68719476743" [label = <(IDENTIFIER,lll,search_for_sublist(lll, [&quot;mstore&quot;, [0], [2 ** 1...)<SUB>15</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.listLiteral,[&quot;mstore&quot;, [0], [2 ** 12 * some_prime]])<SUB>15</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;mstore&quot;,[&quot;mstore&quot;, [0], [2 ** 12 * some_prime]])<SUB>15</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.listLiteral,[0])<SUB>15</SUB>> ]
"90194313222" [label = <(LITERAL,0,[0])<SUB>15</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.listLiteral,[2 ** 12 * some_prime])<SUB>15</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.multiplication,2 ** 12 * some_prime)<SUB>15</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.exponentiation,2 ** 12)<SUB>15</SUB>> ]
"90194313223" [label = <(LITERAL,2,2 ** 12)<SUB>15</SUB>> ]
"90194313224" [label = <(LITERAL,12,2 ** 12)<SUB>15</SUB>> ]
"68719476744" [label = <(IDENTIFIER,some_prime,2 ** 12 * some_prime)<SUB>15</SUB>> ]
"94489280513" [label = <(LOCAL,some_prime: __builtin.int)<SUB>2</SUB>> ]
"94489280514" [label = <(LOCAL,code: ANY)<SUB>3</SUB>> ]
"94489280515" [label = <(LOCAL,compile_code: ANY)<SUB>14</SUB>> ]
"94489280517" [label = <(LOCAL,lll: ANY)<SUB>14</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,search_for_sublist)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "30064771073"  [ label = "AST: "] 
  "30064771074" -> "90194313218"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771078" -> "90194313220"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "90194313219"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476745"  [ label = "AST: "] 
  "30064771085" -> "68719476743"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "90194313221"  [ label = "AST: "] 
  "30064771084" -> "30064771080"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771080" -> "90194313222"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "90194313223"  [ label = "AST: "] 
  "30064771081" -> "90194313224"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771086" -> "128849018881"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "115964116992" -> "128849018881"  [ label = "DDG: search_for_sublist"] 
  "30064771072" -> "128849018881"  [ label = "DDG: some_prime = 10013677"] 
  "30064771074" -> "128849018881"  [ label = "DDG: {some_prime}"] 
  "30064771075" -> "128849018881"  [ label = "DDG: f&quot;&quot;&quot;
SOME_CONSTANT: constant(uint256) = 11 + 1
SOME_PRIME: constant(uint256) = {some_prime}

@external
def test() -&gt; uint256:
    # calculate some constant which is really unlikely to be randomly
    # in bytecode
    return 2**SOME_CONSTANT * SOME_PRIME
    &quot;&quot;&quot;"] 
  "30064771075" -> "128849018881"  [ label = "DDG: code = f&quot;&quot;&quot;
SOME_CONSTANT: constant(uint256) = 11 + 1
SOME_PRIME: constant(uint256) = {some_prime}

@external
def test() -&gt; uint256:
    # calculate some constant which is really unlikely to be randomly
    # in bytecode
    return 2**SOME_CONSTANT * SOME_PRIME
    &quot;&quot;&quot;"] 
  "30064771077" -> "128849018881"  [ label = "DDG: code"] 
  "30064771077" -> "128849018881"  [ label = "DDG: [&quot;ir&quot;]"] 
  "30064771079" -> "128849018881"  [ label = "DDG: compile_code(code, [&quot;ir&quot;])[&quot;ir&quot;]"] 
  "30064771079" -> "128849018881"  [ label = "DDG: lll = compile_code(code, [&quot;ir&quot;])[&quot;ir&quot;]"] 
  "30064771085" -> "128849018881"  [ label = "DDG: lll"] 
  "30064771084" -> "128849018881"  [ label = "DDG: [0]"] 
  "30064771082" -> "128849018881"  [ label = "DDG: 2 ** 12"] 
  "30064771082" -> "128849018881"  [ label = "DDG: some_prime"] 
  "30064771083" -> "128849018881"  [ label = "DDG: 2 ** 12 * some_prime"] 
  "30064771084" -> "128849018881"  [ label = "DDG: [2 ** 12 * some_prime]"] 
  "30064771085" -> "128849018881"  [ label = "DDG: [&quot;mstore&quot;, [0], [2 ** 12 * some_prime]]"] 
  "30064771086" -> "128849018881"  [ label = "DDG: search_for_sublist(lll, [&quot;mstore&quot;, [0], [2 ** 12 * some_prime]])"] 
  "30064771086" -> "128849018881"  [ label = "DDG: assert search_for_sublist(lll, [&quot;mstore&quot;, [0], [2 ** 12 * some_prime]])"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: 
SOME_CONSTANT: constant(uint256) = 11 + 1
SOME_PRIME: constant(uint256) = "] 
  "30064771074" -> "30064771075"  [ label = "DDG: {some_prime}"] 
  "30064771074" -> "30064771075"  [ label = "DDG: 

@external
def test() -&gt; uint256:
    # calculate some constant which is really unlikely to be randomly
    # in bytecode
    return 2**SOME_CONSTANT * SOME_PRIME
    "] 
  "30064771085" -> "30064771086"  [ label = "DDG: lll"] 
  "30064771085" -> "30064771086"  [ label = "DDG: [&quot;mstore&quot;, [0], [2 ** 12 * some_prime]]"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771073" -> "30064771074"  [ label = "DDG: some_prime"] 
  "111669149697" -> "68719476745"  [ label = "DDG: "] 
  "30064771079" -> "30064771085"  [ label = "DDG: lll"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771084" -> "30064771085"  [ label = "DDG: &quot;mstore&quot;"] 
  "30064771084" -> "30064771085"  [ label = "DDG: [0]"] 
  "30064771084" -> "30064771085"  [ label = "DDG: [2 ** 12 * some_prime]"] 
  "30064771072" -> "30064771073"  [ label = "DDG: some_prime"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "68719476741"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: code"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771076" -> "30064771077"  [ label = "DDG: &quot;ir&quot;"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771080" -> "30064771084"  [ label = "DDG: 0"] 
  "30064771083" -> "30064771084"  [ label = "DDG: 2 ** 12 * some_prime"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771082" -> "30064771083"  [ label = "DDG: 2 ** 12"] 
  "30064771082" -> "30064771083"  [ label = "DDG: some_prime"] 
  "30064771081" -> "30064771082"  [ label = "DDG: 2"] 
  "30064771081" -> "30064771082"  [ label = "DDG: 12"] 
  "30064771073" -> "30064771082"  [ label = "DDG: some_prime"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
}
"""
)
