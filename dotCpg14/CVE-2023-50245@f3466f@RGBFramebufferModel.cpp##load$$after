[33mval[0m [36mres367[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "load" {  
"111669149698" [label = <(METHOD,load)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,Imf::MultiPartInputFile&amp; file)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,int partId)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,bool hasAlpha)<SUB>2</SUB>> ]
"25769803814" [label = <(BLOCK,{
    QFuture&lt;void&gt; imageLoading = QtConcurrent...,{
    QFuture&lt;void&gt; imageLoading = QtConcurrent...)<SUB>3</SUB>> ]
"94489280571" [label = <(LOCAL,QFuture&lt;void&gt; imageLoading: QFuture&lt;void&gt;)<SUB>4</SUB>> ]
"30064771525" [label = <(&lt;operator&gt;.assignment,imageLoading = QtConcurrent::run([this,
       ...)<SUB>4</SUB>> ]
"68719477115" [label = <(IDENTIFIER,imageLoading,imageLoading = QtConcurrent::run([this,
       ...)<SUB>4</SUB>> ]
"30064771526" [label = <(run,QtConcurrent::run([this,
                      ...)<SUB>4</SUB>> ]
"124554051601" [label = <(METHOD_REF,[this,
                                        ...,QtConcurrent::run([this,
                      ...)<SUB>4</SUB>> ]
"30064771527" [label = <(setFuture,m_imageLoadingWatcher-&gt;setFuture(imageLoading))<SUB>338</SUB>> ]
"68719477116" [label = <(IDENTIFIER,m_imageLoadingWatcher,m_imageLoadingWatcher-&gt;setFuture(imageLoading))<SUB>338</SUB>> ]
"68719477117" [label = <(IDENTIFIER,imageLoading,m_imageLoadingWatcher-&gt;setFuture(imageLoading))<SUB>338</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149698" -> "115964116992"  [ label = "AST: "] 
  "111669149698" -> "115964116993"  [ label = "AST: "] 
  "111669149698" -> "115964116994"  [ label = "AST: "] 
  "111669149698" -> "25769803814"  [ label = "AST: "] 
  "111669149698" -> "128849018881"  [ label = "AST: "] 
  "25769803814" -> "94489280571"  [ label = "AST: "] 
  "25769803814" -> "30064771525"  [ label = "AST: "] 
  "25769803814" -> "30064771527"  [ label = "AST: "] 
  "30064771525" -> "68719477115"  [ label = "AST: "] 
  "30064771525" -> "30064771526"  [ label = "AST: "] 
  "30064771526" -> "124554051601"  [ label = "AST: "] 
  "30064771527" -> "68719477116"  [ label = "AST: "] 
  "30064771527" -> "68719477117"  [ label = "AST: "] 
  "30064771525" -> "30064771527"  [ label = "CFG: "] 
  "30064771527" -> "128849018881"  [ label = "CFG: "] 
  "30064771526" -> "30064771525"  [ label = "CFG: "] 
  "124554051601" -> "30064771526"  [ label = "CFG: "] 
  "111669149698" -> "124554051601"  [ label = "CFG: "] 
  "115964116992" -> "128849018881"  [ label = "DDG: file"] 
  "115964116993" -> "128849018881"  [ label = "DDG: partId"] 
  "115964116994" -> "128849018881"  [ label = "DDG: hasAlpha"] 
  "30064771525" -> "128849018881"  [ label = "DDG: QtConcurrent::run([this,
                                                    &amp;file,
                                                    partId,
                                                    hasAlpha]() {
        try {
            Imf::InputPart part(file, partId);

            Imath::Box2i datW = part.header().dataWindow();
            m_width           = datW.max.x - datW.min.x + 1;
            m_height          = datW.max.y - datW.min.y + 1;

            m_pixelAspectRatio = part.header().pixelAspectRatio();

            m_dataWindow = QRect(datW.min.x, datW.min.y, m_width, m_height);

            Imath::Box2i dispW = part.header().displayWindow();

            int dispW_width  = dispW.max.x - dispW.min.x + 1;
            int dispW_height = dispW.max.y - dispW.min.y + 1;

            m_displayWindow
              = QRect(dispW.min.x, dispW.min.y, dispW_width, dispW_height);

            // Check to avoid type overflow, width and height are 32bits int
            // represent..."] 
  "30064771525" -> "128849018881"  [ label = "DDG: imageLoading = QtConcurrent::run([this,
                                                    &amp;file,
                                                    partId,
                                                    hasAlpha]() {
        try {
            Imf::InputPart part(file, partId);

            Imath::Box2i datW = part.header().dataWindow();
            m_width           = datW.max.x - datW.min.x + 1;
            m_height          = datW.max.y - datW.min.y + 1;

            m_pixelAspectRatio = part.header().pixelAspectRatio();

            m_dataWindow = QRect(datW.min.x, datW.min.y, m_width, m_height);

            Imath::Box2i dispW = part.header().displayWindow();

            int dispW_width  = dispW.max.x - dispW.min.x + 1;
            int dispW_height = dispW.max.y - dispW.min.y + 1;

            m_displayWindow
              = QRect(dispW.min.x, dispW.min.y, dispW_width, dispW_height);

            // Check to avoid type overflow, width and height are 32bits int
         ..."] 
  "30064771527" -> "128849018881"  [ label = "DDG: imageLoading"] 
  "30064771527" -> "128849018881"  [ label = "DDG: m_imageLoadingWatcher-&gt;setFuture(imageLoading)"] 
  "30064771527" -> "128849018881"  [ label = "DDG: m_imageLoadingWatcher"] 
  "111669149698" -> "115964116992"  [ label = "DDG: "] 
  "111669149698" -> "115964116993"  [ label = "DDG: "] 
  "111669149698" -> "115964116994"  [ label = "DDG: "] 
  "30064771526" -> "30064771525"  [ label = "DDG: [this,
                                                    &amp;file,
                                                    partId,
                                                    hasAlpha]() {
        try {
            Imf::InputPart part(file, partId);

            Imath::Box2i datW = part.header().dataWindow();
            m_width           = datW.max.x - datW.min.x + 1;
            m_height          = datW.max.y - datW.min.y + 1;

            m_pixelAspectRatio = part.header().pixelAspectRatio();

            m_dataWindow = QRect(datW.min.x, datW.min.y, m_width, m_height);

            Imath::Box2i dispW = part.header().displayWindow();

            int dispW_width  = dispW.max.x - dispW.min.x + 1;
            int dispW_height = dispW.max.y - dispW.min.y + 1;

            m_displayWindow
              = QRect(dispW.min.x, dispW.min.y, dispW_width, dispW_height);

            // Check to avoid type overflow, width and height are 32bits int
            // representing a 2 dimentiona..."] 
  "111669149698" -> "30064771527"  [ label = "DDG: "] 
  "30064771525" -> "30064771527"  [ label = "DDG: imageLoading"] 
  "111669149698" -> "30064771526"  [ label = "DDG: "] 
}
"""
)
