[33mval[0m [36mres196[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "EvalHybrid" {  
"111669149697" [label = <(METHOD,EvalHybrid)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const TfLiteTensor* input)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,const TfLiteTensor* input_weights)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,const TfLiteTensor* recurrent_weights)<SUB>3</SUB>> ]
"115964116995" [label = <(PARAM,const TfLiteTensor* bias)<SUB>3</SUB>> ]
"115964116996" [label = <(PARAM,const TfLiteSequenceRNNParams* params)<SUB>4</SUB>> ]
"115964116997" [label = <(PARAM,TfLiteTensor* input_scratch)<SUB>4</SUB>> ]
"115964116998" [label = <(PARAM,TfLiteTensor* hidden_state_scratch)<SUB>5</SUB>> ]
"115964116999" [label = <(PARAM,TfLiteTensor* scaling_factors)<SUB>5</SUB>> ]
"115964117000" [label = <(PARAM,TfLiteTensor* hidden_state)<SUB>6</SUB>> ]
"115964117001" [label = <(PARAM,TfLiteTensor* output)<SUB>6</SUB>> ]
"115964117002" [label = <(PARAM,TfLiteTensor* zero_points)<SUB>6</SUB>> ]
"115964117003" [label = <(PARAM,TfLiteTensor* accum_scratch)<SUB>7</SUB>> ]
"115964117004" [label = <(PARAM,TfLiteTensor* row_sums)<SUB>7</SUB>> ]
"115964117005" [label = <(PARAM,bool* compute_row_sums)<SUB>8</SUB>> ]
"25769803777" [label = <(BLOCK,{
  const bool time_major = params-&gt;time_major;...,{
  const bool time_major = params-&gt;time_major;...)<SUB>8</SUB>> ]
"94489280512" [label = <(LOCAL,const bool time_major: bool)<SUB>9</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,time_major = params-&gt;time_major)<SUB>9</SUB>> ]
"68719476736" [label = <(IDENTIFIER,time_major,time_major = params-&gt;time_major)<SUB>9</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;time_major)<SUB>9</SUB>> ]
"68719476737" [label = <(IDENTIFIER,params,time_major = params-&gt;time_major)<SUB>9</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,time_major,time_major)<SUB>9</SUB>> ]
"94489280513" [label = <(LOCAL,const int batch_size: int)<SUB>10</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,batch_size =
      (time_major) ? input-&gt;dims-&gt;...)<SUB>10</SUB>> ]
"68719476738" [label = <(IDENTIFIER,batch_size,batch_size =
      (time_major) ? input-&gt;dims-&gt;...)<SUB>10</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.conditional,(time_major) ? input-&gt;dims-&gt;data[1] : input-&gt;di...)<SUB>11</SUB>> ]
"68719476739" [label = <(IDENTIFIER,time_major,(time_major) ? input-&gt;dims-&gt;data[1] : input-&gt;di...)<SUB>11</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.indirectIndexAccess,input-&gt;dims-&gt;data[1])<SUB>11</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims-&gt;data)<SUB>11</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims)<SUB>11</SUB>> ]
"68719476740" [label = <(IDENTIFIER,input,(time_major) ? input-&gt;dims-&gt;data[1] : input-&gt;di...)<SUB>11</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,dims,dims)<SUB>11</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,data,data)<SUB>11</SUB>> ]
"90194313216" [label = <(LITERAL,1,(time_major) ? input-&gt;dims-&gt;data[1] : input-&gt;di...)<SUB>11</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indirectIndexAccess,input-&gt;dims-&gt;data[0])<SUB>11</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims-&gt;data)<SUB>11</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims)<SUB>11</SUB>> ]
"68719476741" [label = <(IDENTIFIER,input,(time_major) ? input-&gt;dims-&gt;data[1] : input-&gt;di...)<SUB>11</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,dims,dims)<SUB>11</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,data,data)<SUB>11</SUB>> ]
"90194313217" [label = <(LITERAL,0,(time_major) ? input-&gt;dims-&gt;data[1] : input-&gt;di...)<SUB>11</SUB>> ]
"94489280514" [label = <(LOCAL,const int max_time: int)<SUB>12</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,max_time =
      (time_major) ? input-&gt;dims-&gt;da...)<SUB>12</SUB>> ]
"68719476742" [label = <(IDENTIFIER,max_time,max_time =
      (time_major) ? input-&gt;dims-&gt;da...)<SUB>12</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.conditional,(time_major) ? input-&gt;dims-&gt;data[0] : input-&gt;di...)<SUB>13</SUB>> ]
"68719476743" [label = <(IDENTIFIER,time_major,(time_major) ? input-&gt;dims-&gt;data[0] : input-&gt;di...)<SUB>13</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.indirectIndexAccess,input-&gt;dims-&gt;data[0])<SUB>13</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims-&gt;data)<SUB>13</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims)<SUB>13</SUB>> ]
"68719476744" [label = <(IDENTIFIER,input,(time_major) ? input-&gt;dims-&gt;data[0] : input-&gt;di...)<SUB>13</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,dims,dims)<SUB>13</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,data,data)<SUB>13</SUB>> ]
"90194313218" [label = <(LITERAL,0,(time_major) ? input-&gt;dims-&gt;data[0] : input-&gt;di...)<SUB>13</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.indirectIndexAccess,input-&gt;dims-&gt;data[1])<SUB>13</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims-&gt;data)<SUB>13</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims)<SUB>13</SUB>> ]
"68719476745" [label = <(IDENTIFIER,input,(time_major) ? input-&gt;dims-&gt;data[0] : input-&gt;di...)<SUB>13</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,dims,dims)<SUB>13</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,data,data)<SUB>13</SUB>> ]
"90194313219" [label = <(LITERAL,1,(time_major) ? input-&gt;dims-&gt;data[0] : input-&gt;di...)<SUB>13</SUB>> ]
"94489280515" [label = <(LOCAL,const int num_units: int)<SUB>14</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,num_units = input_weights-&gt;dims-&gt;data[0])<SUB>14</SUB>> ]
"68719476746" [label = <(IDENTIFIER,num_units,num_units = input_weights-&gt;dims-&gt;data[0])<SUB>14</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.indirectIndexAccess,input_weights-&gt;dims-&gt;data[0])<SUB>14</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.indirectFieldAccess,input_weights-&gt;dims-&gt;data)<SUB>14</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.indirectFieldAccess,input_weights-&gt;dims)<SUB>14</SUB>> ]
"68719476747" [label = <(IDENTIFIER,input_weights,num_units = input_weights-&gt;dims-&gt;data[0])<SUB>14</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,dims,dims)<SUB>14</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,data,data)<SUB>14</SUB>> ]
"90194313220" [label = <(LITERAL,0,num_units = input_weights-&gt;dims-&gt;data[0])<SUB>14</SUB>> ]
"94489280516" [label = <(LOCAL,const int input_size: int)<SUB>15</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,input_size = input-&gt;dims-&gt;data[2])<SUB>15</SUB>> ]
"68719476748" [label = <(IDENTIFIER,input_size,input_size = input-&gt;dims-&gt;data[2])<SUB>15</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.indirectIndexAccess,input-&gt;dims-&gt;data[2])<SUB>15</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims-&gt;data)<SUB>15</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims)<SUB>15</SUB>> ]
"68719476749" [label = <(IDENTIFIER,input,input_size = input-&gt;dims-&gt;data[2])<SUB>15</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,dims,dims)<SUB>15</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,data,data)<SUB>15</SUB>> ]
"90194313221" [label = <(LITERAL,2,input_size = input-&gt;dims-&gt;data[2])<SUB>15</SUB>> ]
"94489280517" [label = <(LOCAL,const float* bias_ptr: float*)<SUB>18</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,* bias_ptr = GetTensorData&lt;float&gt;(bias))<SUB>18</SUB>> ]
"68719476750" [label = <(IDENTIFIER,bias_ptr,* bias_ptr = GetTensorData&lt;float&gt;(bias))<SUB>18</SUB>> ]
"30064771099" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(bias))<SUB>18</SUB>> ]
"68719476751" [label = <(IDENTIFIER,bias,GetTensorData&lt;float&gt;(bias))<SUB>18</SUB>> ]
"94489280518" [label = <(LOCAL,const int8_t* input_weights_ptr: int8_t*)<SUB>22</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.assignment,* input_weights_ptr = GetTensorData&lt;int8_t&gt;(inp...)<SUB>22</SUB>> ]
"68719476752" [label = <(IDENTIFIER,input_weights_ptr,* input_weights_ptr = GetTensorData&lt;int8_t&gt;(inp...)<SUB>22</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int8_t&gt;(input_weights))<SUB>22</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int8_t)<SUB>22</SUB>> ]
"68719476753" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int8_t)<SUB>22</SUB>> ]
"68719476754" [label = <(IDENTIFIER,int8_t,GetTensorData&lt;int8_t)<SUB>22</SUB>> ]
"68719476755" [label = <(IDENTIFIER,input_weights,GetTensorData&lt;int8_t&gt;(input_weights))<SUB>22</SUB>> ]
"94489280519" [label = <(LOCAL,const int8_t* recurrent_weights_ptr: int8_t*)<SUB>23</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,* recurrent_weights_ptr =
      GetTensorData&lt;i...)<SUB>23</SUB>> ]
"68719476756" [label = <(IDENTIFIER,recurrent_weights_ptr,* recurrent_weights_ptr =
      GetTensorData&lt;i...)<SUB>23</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int8_t&gt;(recurrent_weights))<SUB>24</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int8_t)<SUB>24</SUB>> ]
"68719476757" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int8_t)<SUB>24</SUB>> ]
"68719476758" [label = <(IDENTIFIER,int8_t,GetTensorData&lt;int8_t)<SUB>24</SUB>> ]
"68719476759" [label = <(IDENTIFIER,recurrent_weights,GetTensorData&lt;int8_t&gt;(recurrent_weights))<SUB>24</SUB>> ]
"94489280520" [label = <(LOCAL,int8_t* quantized_input_ptr: int8_t*)<SUB>25</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.assignment,* quantized_input_ptr = GetTensorData&lt;int8_t&gt;(i...)<SUB>25</SUB>> ]
"68719476760" [label = <(IDENTIFIER,quantized_input_ptr,* quantized_input_ptr = GetTensorData&lt;int8_t&gt;(i...)<SUB>25</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int8_t&gt;(input_scratch))<SUB>25</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int8_t)<SUB>25</SUB>> ]
"68719476761" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int8_t)<SUB>25</SUB>> ]
"68719476762" [label = <(IDENTIFIER,int8_t,GetTensorData&lt;int8_t)<SUB>25</SUB>> ]
"68719476763" [label = <(IDENTIFIER,input_scratch,GetTensorData&lt;int8_t&gt;(input_scratch))<SUB>25</SUB>> ]
"94489280521" [label = <(LOCAL,int8_t* quantized_hidden_state_ptr: int8_t*)<SUB>26</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.assignment,* quantized_hidden_state_ptr =
      GetTensorD...)<SUB>26</SUB>> ]
"68719476764" [label = <(IDENTIFIER,quantized_hidden_state_ptr,* quantized_hidden_state_ptr =
      GetTensorD...)<SUB>26</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int8_t&gt;(hidden_state_scratch))<SUB>27</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int8_t)<SUB>27</SUB>> ]
"68719476765" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int8_t)<SUB>27</SUB>> ]
"68719476766" [label = <(IDENTIFIER,int8_t,GetTensorData&lt;int8_t)<SUB>27</SUB>> ]
"68719476767" [label = <(IDENTIFIER,hidden_state_scratch,GetTensorData&lt;int8_t&gt;(hidden_state_scratch))<SUB>27</SUB>> ]
"94489280522" [label = <(LOCAL,float input_weights_scale: float)<SUB>30</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.assignment,input_weights_scale = input_weights-&gt;params.scale)<SUB>30</SUB>> ]
"68719476768" [label = <(IDENTIFIER,input_weights_scale,input_weights_scale = input_weights-&gt;params.scale)<SUB>30</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.fieldAccess,input_weights-&gt;params.scale)<SUB>30</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.indirectFieldAccess,input_weights-&gt;params)<SUB>30</SUB>> ]
"68719476769" [label = <(IDENTIFIER,input_weights,input_weights_scale = input_weights-&gt;params.scale)<SUB>30</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,params,params)<SUB>30</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>30</SUB>> ]
"94489280523" [label = <(LOCAL,float recurrent_weights_scale: float)<SUB>31</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.assignment,recurrent_weights_scale = recurrent_weights-&gt;pa...)<SUB>31</SUB>> ]
"68719476770" [label = <(IDENTIFIER,recurrent_weights_scale,recurrent_weights_scale = recurrent_weights-&gt;pa...)<SUB>31</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.fieldAccess,recurrent_weights-&gt;params.scale)<SUB>31</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.indirectFieldAccess,recurrent_weights-&gt;params)<SUB>31</SUB>> ]
"68719476771" [label = <(IDENTIFIER,recurrent_weights,recurrent_weights_scale = recurrent_weights-&gt;pa...)<SUB>31</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,params,params)<SUB>31</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>31</SUB>> ]
"94489280524" [label = <(LOCAL,float* scaling_factors_ptr: float*)<SUB>32</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.assignment,* scaling_factors_ptr = GetTensorData&lt;float&gt;(sc...)<SUB>32</SUB>> ]
"68719476772" [label = <(IDENTIFIER,scaling_factors_ptr,* scaling_factors_ptr = GetTensorData&lt;float&gt;(sc...)<SUB>32</SUB>> ]
"30064771119" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(scaling_factors))<SUB>32</SUB>> ]
"68719476773" [label = <(IDENTIFIER,scaling_factors,GetTensorData&lt;float&gt;(scaling_factors))<SUB>32</SUB>> ]
"94489280525" [label = <(LOCAL,int32_t* accum_scratch_ptr: int32_t*)<SUB>33</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.assignment,* accum_scratch_ptr = GetTensorData&lt;int32_t&gt;(ac...)<SUB>33</SUB>> ]
"68719476774" [label = <(IDENTIFIER,accum_scratch_ptr,* accum_scratch_ptr = GetTensorData&lt;int32_t&gt;(ac...)<SUB>33</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int32_t&gt;(accum_scratch))<SUB>33</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int32_t)<SUB>33</SUB>> ]
"68719476775" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int32_t)<SUB>33</SUB>> ]
"68719476776" [label = <(IDENTIFIER,int32_t,GetTensorData&lt;int32_t)<SUB>33</SUB>> ]
"68719476777" [label = <(IDENTIFIER,accum_scratch,GetTensorData&lt;int32_t&gt;(accum_scratch))<SUB>33</SUB>> ]
"94489280526" [label = <(LOCAL,int32_t* zero_points_ptr: int32_t*)<SUB>34</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.assignment,* zero_points_ptr = nullptr)<SUB>34</SUB>> ]
"68719476778" [label = <(IDENTIFIER,zero_points_ptr,* zero_points_ptr = nullptr)<SUB>34</SUB>> ]
"90194313222" [label = <(LITERAL,nullptr,* zero_points_ptr = nullptr)<SUB>34</SUB>> ]
"94489280527" [label = <(LOCAL,int32_t* row_sums_ptr: int32_t*)<SUB>35</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assignment,* row_sums_ptr = nullptr)<SUB>35</SUB>> ]
"68719476779" [label = <(IDENTIFIER,row_sums_ptr,* row_sums_ptr = nullptr)<SUB>35</SUB>> ]
"90194313223" [label = <(LITERAL,nullptr,* row_sums_ptr = nullptr)<SUB>35</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (params-&gt;asymmetric_quantize_inputs))<SUB>37</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;asymmetric_quantize_inputs)<SUB>37</SUB>> ]
"68719476780" [label = <(IDENTIFIER,params,if (params-&gt;asymmetric_quantize_inputs))<SUB>37</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,asymmetric_quantize_inputs,asymmetric_quantize_inputs)<SUB>37</SUB>> ]
"25769803778" [label = <(BLOCK,{
    zero_points_ptr = GetTensorData&lt;int32_t&gt;(...,{
    zero_points_ptr = GetTensorData&lt;int32_t&gt;(...)<SUB>37</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.assignment,zero_points_ptr = GetTensorData&lt;int32_t&gt;(zero_p...)<SUB>38</SUB>> ]
"68719476781" [label = <(IDENTIFIER,zero_points_ptr,zero_points_ptr = GetTensorData&lt;int32_t&gt;(zero_p...)<SUB>38</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int32_t&gt;(zero_points))<SUB>38</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int32_t)<SUB>38</SUB>> ]
"68719476782" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int32_t)<SUB>38</SUB>> ]
"68719476783" [label = <(IDENTIFIER,int32_t,GetTensorData&lt;int32_t)<SUB>38</SUB>> ]
"68719476784" [label = <(IDENTIFIER,zero_points,GetTensorData&lt;int32_t&gt;(zero_points))<SUB>38</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.assignment,row_sums_ptr = GetTensorData&lt;int32_t&gt;(row_sums))<SUB>39</SUB>> ]
"68719476785" [label = <(IDENTIFIER,row_sums_ptr,row_sums_ptr = GetTensorData&lt;int32_t&gt;(row_sums))<SUB>39</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.greaterThan,GetTensorData&lt;int32_t&gt;(row_sums))<SUB>39</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.lessThan,GetTensorData&lt;int32_t)<SUB>39</SUB>> ]
"68719476786" [label = <(IDENTIFIER,GetTensorData,GetTensorData&lt;int32_t)<SUB>39</SUB>> ]
"68719476787" [label = <(IDENTIFIER,int32_t,GetTensorData&lt;int32_t)<SUB>39</SUB>> ]
"68719476788" [label = <(IDENTIFIER,row_sums,GetTensorData&lt;int32_t&gt;(row_sums))<SUB>39</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (time_major))<SUB>42</SUB>> ]
"68719476789" [label = <(IDENTIFIER,time_major,if (time_major))<SUB>42</SUB>> ]
"25769803779" [label = <(BLOCK,{
    // Initialize the pointer to hidden state...,{
    // Initialize the pointer to hidden state...)<SUB>42</SUB>> ]
"94489280528" [label = <(LOCAL,float* hidden_state_ptr_batch: float*)<SUB>44</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.assignment,* hidden_state_ptr_batch = GetTensorData&lt;float&gt;...)<SUB>44</SUB>> ]
"68719476790" [label = <(IDENTIFIER,hidden_state_ptr_batch,* hidden_state_ptr_batch = GetTensorData&lt;float&gt;...)<SUB>44</SUB>> ]
"30064771133" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(hidden_state))<SUB>44</SUB>> ]
"68719476791" [label = <(IDENTIFIER,hidden_state,GetTensorData&lt;float&gt;(hidden_state))<SUB>44</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,FOR,for (int s = 0;s &lt; max_time;s++))<SUB>46</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>> ]
"94489280529" [label = <(LOCAL,int s: int)<SUB>46</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.assignment,s = 0)<SUB>46</SUB>> ]
"68719476792" [label = <(IDENTIFIER,s,s = 0)<SUB>46</SUB>> ]
"90194313224" [label = <(LITERAL,0,s = 0)<SUB>46</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.lessThan,s &lt; max_time)<SUB>46</SUB>> ]
"68719476793" [label = <(IDENTIFIER,s,s &lt; max_time)<SUB>46</SUB>> ]
"68719476794" [label = <(IDENTIFIER,max_time,s &lt; max_time)<SUB>46</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.postIncrement,s++)<SUB>46</SUB>> ]
"68719476795" [label = <(IDENTIFIER,s,s++)<SUB>46</SUB>> ]
"25769803781" [label = <(BLOCK,{
      // Initialize the pointer to input and ...,{
      // Initialize the pointer to input and ...)<SUB>46</SUB>> ]
"94489280530" [label = <(LOCAL,const float* input_ptr_batch: float*)<SUB>48</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.assignment,* input_ptr_batch =
          GetTensorData&lt;flo...)<SUB>48</SUB>> ]
"68719476796" [label = <(IDENTIFIER,input_ptr_batch,* input_ptr_batch =
          GetTensorData&lt;flo...)<SUB>48</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.addition,GetTensorData&lt;float&gt;(input) + s * input_size * ...)<SUB>49</SUB>> ]
"30064771139" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(input))<SUB>49</SUB>> ]
"68719476797" [label = <(IDENTIFIER,input,GetTensorData&lt;float&gt;(input))<SUB>49</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.multiplication,s * input_size * batch_size)<SUB>49</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.multiplication,s * input_size)<SUB>49</SUB>> ]
"68719476798" [label = <(IDENTIFIER,s,s * input_size)<SUB>49</SUB>> ]
"68719476799" [label = <(IDENTIFIER,input_size,s * input_size)<SUB>49</SUB>> ]
"68719476800" [label = <(IDENTIFIER,batch_size,s * input_size * batch_size)<SUB>49</SUB>> ]
"94489280531" [label = <(LOCAL,float* output_ptr_batch: float*)<SUB>50</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.assignment,* output_ptr_batch =
          GetTensorData&lt;fl...)<SUB>50</SUB>> ]
"68719476801" [label = <(IDENTIFIER,output_ptr_batch,* output_ptr_batch =
          GetTensorData&lt;fl...)<SUB>50</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.addition,GetTensorData&lt;float&gt;(output) + s * num_units * ...)<SUB>51</SUB>> ]
"30064771144" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(output))<SUB>51</SUB>> ]
"68719476802" [label = <(IDENTIFIER,output,GetTensorData&lt;float&gt;(output))<SUB>51</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.multiplication,s * num_units * batch_size)<SUB>51</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.multiplication,s * num_units)<SUB>51</SUB>> ]
"68719476803" [label = <(IDENTIFIER,s,s * num_units)<SUB>51</SUB>> ]
"68719476804" [label = <(IDENTIFIER,num_units,s * num_units)<SUB>51</SUB>> ]
"68719476805" [label = <(IDENTIFIER,batch_size,s * num_units * batch_size)<SUB>51</SUB>> ]
"30064771147" [label = <(RnnBatchStep,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>53</SUB>> ]
"68719476806" [label = <(IDENTIFIER,input_ptr_batch,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>54</SUB>> ]
"68719476807" [label = <(IDENTIFIER,input_weights_ptr,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>54</SUB>> ]
"68719476808" [label = <(IDENTIFIER,input_weights_scale,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>54</SUB>> ]
"68719476809" [label = <(IDENTIFIER,recurrent_weights_ptr,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>55</SUB>> ]
"68719476810" [label = <(IDENTIFIER,recurrent_weights_scale,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>55</SUB>> ]
"68719476811" [label = <(IDENTIFIER,bias_ptr,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>55</SUB>> ]
"68719476812" [label = <(IDENTIFIER,input_size,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>55</SUB>> ]
"68719476813" [label = <(IDENTIFIER,num_units,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>56</SUB>> ]
"68719476814" [label = <(IDENTIFIER,batch_size,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>56</SUB>> ]
"68719476815" [label = <(IDENTIFIER,num_units,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>56</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;activation)<SUB>56</SUB>> ]
"68719476816" [label = <(IDENTIFIER,params,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>56</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,activation,activation)<SUB>56</SUB>> ]
"68719476817" [label = <(IDENTIFIER,quantized_input_ptr,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>57</SUB>> ]
"68719476818" [label = <(IDENTIFIER,quantized_hidden_state_ptr,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>57</SUB>> ]
"68719476819" [label = <(IDENTIFIER,scaling_factors_ptr,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>57</SUB>> ]
"68719476820" [label = <(IDENTIFIER,hidden_state_ptr_batch,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>58</SUB>> ]
"68719476821" [label = <(IDENTIFIER,output_ptr_batch,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>58</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;asymmetric_quantize_inputs)<SUB>59</SUB>> ]
"68719476822" [label = <(IDENTIFIER,params,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>59</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,asymmetric_quantize_inputs,asymmetric_quantize_inputs)<SUB>59</SUB>> ]
"68719476823" [label = <(IDENTIFIER,zero_points_ptr,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>59</SUB>> ]
"68719476824" [label = <(IDENTIFIER,accum_scratch_ptr,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>60</SUB>> ]
"68719476825" [label = <(IDENTIFIER,row_sums_ptr,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>60</SUB>> ]
"68719476826" [label = <(IDENTIFIER,compute_row_sums,kernel_utils::RnnBatchStep(
          input_ptr...)<SUB>60</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>62</SUB>> ]
"25769803782" [label = <(BLOCK,{
    // For each batch
    for (int b = 0; b &lt;...,{
    // For each batch
    for (int b = 0; b &lt;...)<SUB>62</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,FOR,for (int b = 0;b &lt; batch_size;b++))<SUB>64</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>> ]
"94489280532" [label = <(LOCAL,int b: int)<SUB>64</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.assignment,b = 0)<SUB>64</SUB>> ]
"68719476827" [label = <(IDENTIFIER,b,b = 0)<SUB>64</SUB>> ]
"90194313225" [label = <(LITERAL,0,b = 0)<SUB>64</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.lessThan,b &lt; batch_size)<SUB>64</SUB>> ]
"68719476828" [label = <(IDENTIFIER,b,b &lt; batch_size)<SUB>64</SUB>> ]
"68719476829" [label = <(IDENTIFIER,batch_size,b &lt; batch_size)<SUB>64</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.postIncrement,b++)<SUB>64</SUB>> ]
"68719476830" [label = <(IDENTIFIER,b,b++)<SUB>64</SUB>> ]
"25769803784" [label = <(BLOCK,{
      // Initialize the pointer to hidden sta...,{
      // Initialize the pointer to hidden sta...)<SUB>64</SUB>> ]
"94489280533" [label = <(LOCAL,float* hidden_state_ptr_batch: float*)<SUB>66</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.assignment,* hidden_state_ptr_batch =
          GetTensorD...)<SUB>66</SUB>> ]
"68719476831" [label = <(IDENTIFIER,hidden_state_ptr_batch,* hidden_state_ptr_batch =
          GetTensorD...)<SUB>66</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.addition,GetTensorData&lt;float&gt;(hidden_state) + b * num_units)<SUB>67</SUB>> ]
"30064771155" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(hidden_state))<SUB>67</SUB>> ]
"68719476832" [label = <(IDENTIFIER,hidden_state,GetTensorData&lt;float&gt;(hidden_state))<SUB>67</SUB>> ]
"30064771156" [label = <(&lt;operator&gt;.multiplication,b * num_units)<SUB>67</SUB>> ]
"68719476833" [label = <(IDENTIFIER,b,b * num_units)<SUB>67</SUB>> ]
"68719476834" [label = <(IDENTIFIER,num_units,b * num_units)<SUB>67</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,FOR,for (int s = 0;s &lt; max_time;s++))<SUB>68</SUB>> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>68</SUB>> ]
"94489280534" [label = <(LOCAL,int s: int)<SUB>68</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.assignment,s = 0)<SUB>68</SUB>> ]
"68719476835" [label = <(IDENTIFIER,s,s = 0)<SUB>68</SUB>> ]
"90194313226" [label = <(LITERAL,0,s = 0)<SUB>68</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.lessThan,s &lt; max_time)<SUB>68</SUB>> ]
"68719476836" [label = <(IDENTIFIER,s,s &lt; max_time)<SUB>68</SUB>> ]
"68719476837" [label = <(IDENTIFIER,max_time,s &lt; max_time)<SUB>68</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.postIncrement,s++)<SUB>68</SUB>> ]
"68719476838" [label = <(IDENTIFIER,s,s++)<SUB>68</SUB>> ]
"25769803786" [label = <(BLOCK,{
        // Initialize the pointer to input an...,{
        // Initialize the pointer to input an...)<SUB>68</SUB>> ]
"94489280535" [label = <(LOCAL,const float* input_ptr_batch: float*)<SUB>70</SUB>> ]
"30064771160" [label = <(&lt;operator&gt;.assignment,* input_ptr_batch = GetTensorData&lt;float&gt;(input)...)<SUB>70</SUB>> ]
"68719476839" [label = <(IDENTIFIER,input_ptr_batch,* input_ptr_batch = GetTensorData&lt;float&gt;(input)...)<SUB>70</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.addition,GetTensorData&lt;float&gt;(input) +
                 ...)<SUB>70</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.addition,GetTensorData&lt;float&gt;(input) +
                 ...)<SUB>70</SUB>> ]
"30064771163" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(input))<SUB>70</SUB>> ]
"68719476840" [label = <(IDENTIFIER,input,GetTensorData&lt;float&gt;(input))<SUB>70</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.multiplication,b * input_size * max_time)<SUB>71</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.multiplication,b * input_size)<SUB>71</SUB>> ]
"68719476841" [label = <(IDENTIFIER,b,b * input_size)<SUB>71</SUB>> ]
"68719476842" [label = <(IDENTIFIER,input_size,b * input_size)<SUB>71</SUB>> ]
"68719476843" [label = <(IDENTIFIER,max_time,b * input_size * max_time)<SUB>71</SUB>> ]
"30064771166" [label = <(&lt;operator&gt;.multiplication,s * input_size)<SUB>72</SUB>> ]
"68719476844" [label = <(IDENTIFIER,s,s * input_size)<SUB>72</SUB>> ]
"68719476845" [label = <(IDENTIFIER,input_size,s * input_size)<SUB>72</SUB>> ]
"94489280536" [label = <(LOCAL,float* output_ptr_batch: float*)<SUB>73</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.assignment,* output_ptr_batch = GetTensorData&lt;float&gt;(outpu...)<SUB>73</SUB>> ]
"68719476846" [label = <(IDENTIFIER,output_ptr_batch,* output_ptr_batch = GetTensorData&lt;float&gt;(outpu...)<SUB>73</SUB>> ]
"30064771168" [label = <(&lt;operator&gt;.addition,GetTensorData&lt;float&gt;(output) +
                ...)<SUB>73</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.addition,GetTensorData&lt;float&gt;(output) +
                ...)<SUB>73</SUB>> ]
"30064771170" [label = <(GetTensorData&lt;float&gt;,GetTensorData&lt;float&gt;(output))<SUB>73</SUB>> ]
"68719476847" [label = <(IDENTIFIER,output,GetTensorData&lt;float&gt;(output))<SUB>73</SUB>> ]
"30064771171" [label = <(&lt;operator&gt;.multiplication,b * num_units * max_time)<SUB>74</SUB>> ]
"30064771172" [label = <(&lt;operator&gt;.multiplication,b * num_units)<SUB>74</SUB>> ]
"68719476848" [label = <(IDENTIFIER,b,b * num_units)<SUB>74</SUB>> ]
"68719476849" [label = <(IDENTIFIER,num_units,b * num_units)<SUB>74</SUB>> ]
"68719476850" [label = <(IDENTIFIER,max_time,b * num_units * max_time)<SUB>74</SUB>> ]
"30064771173" [label = <(&lt;operator&gt;.multiplication,s * num_units)<SUB>74</SUB>> ]
"68719476851" [label = <(IDENTIFIER,s,s * num_units)<SUB>74</SUB>> ]
"68719476852" [label = <(IDENTIFIER,num_units,s * num_units)<SUB>74</SUB>> ]
"30064771174" [label = <(RnnBatchStep,kernel_utils::RnnBatchStep(
            input_p...)<SUB>75</SUB>> ]
"68719476853" [label = <(IDENTIFIER,input_ptr_batch,kernel_utils::RnnBatchStep(
            input_p...)<SUB>76</SUB>> ]
"68719476854" [label = <(IDENTIFIER,input_weights_ptr,kernel_utils::RnnBatchStep(
            input_p...)<SUB>76</SUB>> ]
"68719476855" [label = <(IDENTIFIER,input_weights_scale,kernel_utils::RnnBatchStep(
            input_p...)<SUB>76</SUB>> ]
"68719476856" [label = <(IDENTIFIER,recurrent_weights_ptr,kernel_utils::RnnBatchStep(
            input_p...)<SUB>77</SUB>> ]
"68719476857" [label = <(IDENTIFIER,recurrent_weights_scale,kernel_utils::RnnBatchStep(
            input_p...)<SUB>77</SUB>> ]
"68719476858" [label = <(IDENTIFIER,bias_ptr,kernel_utils::RnnBatchStep(
            input_p...)<SUB>77</SUB>> ]
"68719476859" [label = <(IDENTIFIER,input_size,kernel_utils::RnnBatchStep(
            input_p...)<SUB>78</SUB>> ]
"68719476860" [label = <(IDENTIFIER,num_units,kernel_utils::RnnBatchStep(
            input_p...)<SUB>78</SUB>> ]
"90194313227" [label = <(LITERAL,1,kernel_utils::RnnBatchStep(
            input_p...)<SUB>78</SUB>> ]
"68719476861" [label = <(IDENTIFIER,num_units,kernel_utils::RnnBatchStep(
            input_p...)<SUB>78</SUB>> ]
"30064771175" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;activation)<SUB>79</SUB>> ]
"68719476862" [label = <(IDENTIFIER,params,kernel_utils::RnnBatchStep(
            input_p...)<SUB>79</SUB>> ]
"55834574868" [label = <(FIELD_IDENTIFIER,activation,activation)<SUB>79</SUB>> ]
"68719476863" [label = <(IDENTIFIER,quantized_input_ptr,kernel_utils::RnnBatchStep(
            input_p...)<SUB>79</SUB>> ]
"68719476864" [label = <(IDENTIFIER,quantized_hidden_state_ptr,kernel_utils::RnnBatchStep(
            input_p...)<SUB>79</SUB>> ]
"68719476865" [label = <(IDENTIFIER,scaling_factors_ptr,kernel_utils::RnnBatchStep(
            input_p...)<SUB>80</SUB>> ]
"68719476866" [label = <(IDENTIFIER,hidden_state_ptr_batch,kernel_utils::RnnBatchStep(
            input_p...)<SUB>80</SUB>> ]
"68719476867" [label = <(IDENTIFIER,output_ptr_batch,kernel_utils::RnnBatchStep(
            input_p...)<SUB>80</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;asymmetric_quantize_inputs)<SUB>81</SUB>> ]
"68719476868" [label = <(IDENTIFIER,params,kernel_utils::RnnBatchStep(
            input_p...)<SUB>81</SUB>> ]
"55834574869" [label = <(FIELD_IDENTIFIER,asymmetric_quantize_inputs,asymmetric_quantize_inputs)<SUB>81</SUB>> ]
"68719476869" [label = <(IDENTIFIER,zero_points_ptr,kernel_utils::RnnBatchStep(
            input_p...)<SUB>81</SUB>> ]
"68719476870" [label = <(IDENTIFIER,accum_scratch_ptr,kernel_utils::RnnBatchStep(
            input_p...)<SUB>82</SUB>> ]
"68719476871" [label = <(IDENTIFIER,row_sums_ptr,kernel_utils::RnnBatchStep(
            input_p...)<SUB>82</SUB>> ]
"68719476872" [label = <(IDENTIFIER,compute_row_sums,kernel_utils::RnnBatchStep(
            input_p...)<SUB>82</SUB>> ]
"146028888064" [label = <(RETURN,return kTfLiteOk;,return kTfLiteOk;)<SUB>86</SUB>> ]
"68719476873" [label = <(IDENTIFIER,kTfLiteOk,return kTfLiteOk;)<SUB>86</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,TfLiteStatus)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "115964116998"  [ label = "AST: "] 
  "111669149697" -> "115964116999"  [ label = "AST: "] 
  "111669149697" -> "115964117000"  [ label = "AST: "] 
  "111669149697" -> "115964117001"  [ label = "AST: "] 
  "111669149697" -> "115964117002"  [ label = "AST: "] 
  "111669149697" -> "115964117003"  [ label = "AST: "] 
  "111669149697" -> "115964117004"  [ label = "AST: "] 
  "111669149697" -> "115964117005"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771094"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771098"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771100"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771103"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771106"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "30064771109"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "30064771112"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "30064771115"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "30064771118"  [ label = "AST: "] 
  "25769803777" -> "94489280525"  [ label = "AST: "] 
  "25769803777" -> "30064771120"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "30064771123"  [ label = "AST: "] 
  "25769803777" -> "94489280527"  [ label = "AST: "] 
  "25769803777" -> "30064771124"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "30064771079"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "90194313216"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "55834574850"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "55834574849"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "90194313217"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "55834574852"  [ label = "AST: "] 
  "30064771081" -> "68719476741"  [ label = "AST: "] 
  "30064771081" -> "55834574851"  [ label = "AST: "] 
  "30064771082" -> "68719476742"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476743"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "30064771087"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "90194313218"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "55834574854"  [ label = "AST: "] 
  "30064771086" -> "68719476744"  [ label = "AST: "] 
  "30064771086" -> "55834574853"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "90194313219"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "55834574856"  [ label = "AST: "] 
  "30064771089" -> "68719476745"  [ label = "AST: "] 
  "30064771089" -> "55834574855"  [ label = "AST: "] 
  "30064771090" -> "68719476746"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "90194313220"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "55834574858"  [ label = "AST: "] 
  "30064771093" -> "68719476747"  [ label = "AST: "] 
  "30064771093" -> "55834574857"  [ label = "AST: "] 
  "30064771094" -> "68719476748"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "90194313221"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "55834574860"  [ label = "AST: "] 
  "30064771097" -> "68719476749"  [ label = "AST: "] 
  "30064771097" -> "55834574859"  [ label = "AST: "] 
  "30064771098" -> "68719476750"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476751"  [ label = "AST: "] 
  "30064771100" -> "68719476752"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "68719476755"  [ label = "AST: "] 
  "30064771102" -> "68719476753"  [ label = "AST: "] 
  "30064771102" -> "68719476754"  [ label = "AST: "] 
  "30064771103" -> "68719476756"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "68719476759"  [ label = "AST: "] 
  "30064771105" -> "68719476757"  [ label = "AST: "] 
  "30064771105" -> "68719476758"  [ label = "AST: "] 
  "30064771106" -> "68719476760"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "68719476763"  [ label = "AST: "] 
  "30064771108" -> "68719476761"  [ label = "AST: "] 
  "30064771108" -> "68719476762"  [ label = "AST: "] 
  "30064771109" -> "68719476764"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771110" -> "68719476767"  [ label = "AST: "] 
  "30064771111" -> "68719476765"  [ label = "AST: "] 
  "30064771111" -> "68719476766"  [ label = "AST: "] 
  "30064771112" -> "68719476768"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771113" -> "55834574862"  [ label = "AST: "] 
  "30064771114" -> "68719476769"  [ label = "AST: "] 
  "30064771114" -> "55834574861"  [ label = "AST: "] 
  "30064771115" -> "68719476770"  [ label = "AST: "] 
  "30064771115" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771116" -> "55834574864"  [ label = "AST: "] 
  "30064771117" -> "68719476771"  [ label = "AST: "] 
  "30064771117" -> "55834574863"  [ label = "AST: "] 
  "30064771118" -> "68719476772"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "68719476773"  [ label = "AST: "] 
  "30064771120" -> "68719476774"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "68719476777"  [ label = "AST: "] 
  "30064771122" -> "68719476775"  [ label = "AST: "] 
  "30064771122" -> "68719476776"  [ label = "AST: "] 
  "30064771123" -> "68719476778"  [ label = "AST: "] 
  "30064771123" -> "90194313222"  [ label = "AST: "] 
  "30064771124" -> "68719476779"  [ label = "AST: "] 
  "30064771124" -> "90194313223"  [ label = "AST: "] 
  "47244640256" -> "30064771125"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771125" -> "68719476780"  [ label = "AST: "] 
  "30064771125" -> "55834574865"  [ label = "AST: "] 
  "25769803778" -> "30064771126"  [ label = "AST: "] 
  "25769803778" -> "30064771129"  [ label = "AST: "] 
  "30064771126" -> "68719476781"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771127" -> "68719476784"  [ label = "AST: "] 
  "30064771128" -> "68719476782"  [ label = "AST: "] 
  "30064771128" -> "68719476783"  [ label = "AST: "] 
  "30064771129" -> "68719476785"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771130" -> "68719476788"  [ label = "AST: "] 
  "30064771131" -> "68719476786"  [ label = "AST: "] 
  "30064771131" -> "68719476787"  [ label = "AST: "] 
  "47244640257" -> "68719476789"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "47244640259"  [ label = "AST: "] 
  "25769803779" -> "94489280528"  [ label = "AST: "] 
  "25769803779" -> "30064771132"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "30064771132" -> "68719476790"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771133" -> "68719476791"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "47244640258" -> "30064771135"  [ label = "AST: "] 
  "47244640258" -> "30064771136"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "25769803780" -> "94489280529"  [ label = "AST: "] 
  "25769803780" -> "30064771134"  [ label = "AST: "] 
  "30064771134" -> "68719476792"  [ label = "AST: "] 
  "30064771134" -> "90194313224"  [ label = "AST: "] 
  "30064771135" -> "68719476793"  [ label = "AST: "] 
  "30064771135" -> "68719476794"  [ label = "AST: "] 
  "30064771136" -> "68719476795"  [ label = "AST: "] 
  "25769803781" -> "94489280530"  [ label = "AST: "] 
  "25769803781" -> "30064771137"  [ label = "AST: "] 
  "25769803781" -> "94489280531"  [ label = "AST: "] 
  "25769803781" -> "30064771142"  [ label = "AST: "] 
  "25769803781" -> "30064771147"  [ label = "AST: "] 
  "30064771137" -> "68719476796"  [ label = "AST: "] 
  "30064771137" -> "30064771138"  [ label = "AST: "] 
  "30064771138" -> "30064771139"  [ label = "AST: "] 
  "30064771138" -> "30064771140"  [ label = "AST: "] 
  "30064771139" -> "68719476797"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771140" -> "68719476800"  [ label = "AST: "] 
  "30064771141" -> "68719476798"  [ label = "AST: "] 
  "30064771141" -> "68719476799"  [ label = "AST: "] 
  "30064771142" -> "68719476801"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771143" -> "30064771145"  [ label = "AST: "] 
  "30064771144" -> "68719476802"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771145" -> "68719476805"  [ label = "AST: "] 
  "30064771146" -> "68719476803"  [ label = "AST: "] 
  "30064771146" -> "68719476804"  [ label = "AST: "] 
  "30064771147" -> "68719476806"  [ label = "AST: "] 
  "30064771147" -> "68719476807"  [ label = "AST: "] 
  "30064771147" -> "68719476808"  [ label = "AST: "] 
  "30064771147" -> "68719476809"  [ label = "AST: "] 
  "30064771147" -> "68719476810"  [ label = "AST: "] 
  "30064771147" -> "68719476811"  [ label = "AST: "] 
  "30064771147" -> "68719476812"  [ label = "AST: "] 
  "30064771147" -> "68719476813"  [ label = "AST: "] 
  "30064771147" -> "68719476814"  [ label = "AST: "] 
  "30064771147" -> "68719476815"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771147" -> "68719476817"  [ label = "AST: "] 
  "30064771147" -> "68719476818"  [ label = "AST: "] 
  "30064771147" -> "68719476819"  [ label = "AST: "] 
  "30064771147" -> "68719476820"  [ label = "AST: "] 
  "30064771147" -> "68719476821"  [ label = "AST: "] 
  "30064771147" -> "30064771149"  [ label = "AST: "] 
  "30064771147" -> "68719476823"  [ label = "AST: "] 
  "30064771147" -> "68719476824"  [ label = "AST: "] 
  "30064771147" -> "68719476825"  [ label = "AST: "] 
  "30064771147" -> "68719476826"  [ label = "AST: "] 
  "30064771148" -> "68719476816"  [ label = "AST: "] 
  "30064771148" -> "55834574866"  [ label = "AST: "] 
  "30064771149" -> "68719476822"  [ label = "AST: "] 
  "30064771149" -> "55834574867"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "47244640260"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "47244640260" -> "30064771151"  [ label = "AST: "] 
  "47244640260" -> "30064771152"  [ label = "AST: "] 
  "47244640260" -> "25769803784"  [ label = "AST: "] 
  "25769803783" -> "94489280532"  [ label = "AST: "] 
  "25769803783" -> "30064771150"  [ label = "AST: "] 
  "30064771150" -> "68719476827"  [ label = "AST: "] 
  "30064771150" -> "90194313225"  [ label = "AST: "] 
  "30064771151" -> "68719476828"  [ label = "AST: "] 
  "30064771151" -> "68719476829"  [ label = "AST: "] 
  "30064771152" -> "68719476830"  [ label = "AST: "] 
  "25769803784" -> "94489280533"  [ label = "AST: "] 
  "25769803784" -> "30064771153"  [ label = "AST: "] 
  "25769803784" -> "47244640261"  [ label = "AST: "] 
  "30064771153" -> "68719476831"  [ label = "AST: "] 
  "30064771153" -> "30064771154"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771154" -> "30064771156"  [ label = "AST: "] 
  "30064771155" -> "68719476832"  [ label = "AST: "] 
  "30064771156" -> "68719476833"  [ label = "AST: "] 
  "30064771156" -> "68719476834"  [ label = "AST: "] 
  "47244640261" -> "25769803785"  [ label = "AST: "] 
  "47244640261" -> "30064771158"  [ label = "AST: "] 
  "47244640261" -> "30064771159"  [ label = "AST: "] 
  "47244640261" -> "25769803786"  [ label = "AST: "] 
  "25769803785" -> "94489280534"  [ label = "AST: "] 
  "25769803785" -> "30064771157"  [ label = "AST: "] 
  "30064771157" -> "68719476835"  [ label = "AST: "] 
  "30064771157" -> "90194313226"  [ label = "AST: "] 
  "30064771158" -> "68719476836"  [ label = "AST: "] 
  "30064771158" -> "68719476837"  [ label = "AST: "] 
  "30064771159" -> "68719476838"  [ label = "AST: "] 
  "25769803786" -> "94489280535"  [ label = "AST: "] 
  "25769803786" -> "30064771160"  [ label = "AST: "] 
  "25769803786" -> "94489280536"  [ label = "AST: "] 
  "25769803786" -> "30064771167"  [ label = "AST: "] 
  "25769803786" -> "30064771174"  [ label = "AST: "] 
  "30064771160" -> "68719476839"  [ label = "AST: "] 
  "30064771160" -> "30064771161"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "30064771166"  [ label = "AST: "] 
  "30064771162" -> "30064771163"  [ label = "AST: "] 
  "30064771162" -> "30064771164"  [ label = "AST: "] 
  "30064771163" -> "68719476840"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771164" -> "68719476843"  [ label = "AST: "] 
  "30064771165" -> "68719476841"  [ label = "AST: "] 
  "30064771165" -> "68719476842"  [ label = "AST: "] 
  "30064771166" -> "68719476844"  [ label = "AST: "] 
  "30064771166" -> "68719476845"  [ label = "AST: "] 
  "30064771167" -> "68719476846"  [ label = "AST: "] 
  "30064771167" -> "30064771168"  [ label = "AST: "] 
  "30064771168" -> "30064771169"  [ label = "AST: "] 
  "30064771168" -> "30064771173"  [ label = "AST: "] 
  "30064771169" -> "30064771170"  [ label = "AST: "] 
  "30064771169" -> "30064771171"  [ label = "AST: "] 
  "30064771170" -> "68719476847"  [ label = "AST: "] 
  "30064771171" -> "30064771172"  [ label = "AST: "] 
  "30064771171" -> "68719476850"  [ label = "AST: "] 
  "30064771172" -> "68719476848"  [ label = "AST: "] 
  "30064771172" -> "68719476849"  [ label = "AST: "] 
  "30064771173" -> "68719476851"  [ label = "AST: "] 
  "30064771173" -> "68719476852"  [ label = "AST: "] 
  "30064771174" -> "68719476853"  [ label = "AST: "] 
  "30064771174" -> "68719476854"  [ label = "AST: "] 
  "30064771174" -> "68719476855"  [ label = "AST: "] 
  "30064771174" -> "68719476856"  [ label = "AST: "] 
  "30064771174" -> "68719476857"  [ label = "AST: "] 
  "30064771174" -> "68719476858"  [ label = "AST: "] 
  "30064771174" -> "68719476859"  [ label = "AST: "] 
  "30064771174" -> "68719476860"  [ label = "AST: "] 
  "30064771174" -> "90194313227"  [ label = "AST: "] 
  "30064771174" -> "68719476861"  [ label = "AST: "] 
  "30064771174" -> "30064771175"  [ label = "AST: "] 
  "30064771174" -> "68719476863"  [ label = "AST: "] 
  "30064771174" -> "68719476864"  [ label = "AST: "] 
  "30064771174" -> "68719476865"  [ label = "AST: "] 
  "30064771174" -> "68719476866"  [ label = "AST: "] 
  "30064771174" -> "68719476867"  [ label = "AST: "] 
  "30064771174" -> "30064771176"  [ label = "AST: "] 
  "30064771174" -> "68719476869"  [ label = "AST: "] 
  "30064771174" -> "68719476870"  [ label = "AST: "] 
  "30064771174" -> "68719476871"  [ label = "AST: "] 
  "30064771174" -> "68719476872"  [ label = "AST: "] 
  "30064771175" -> "68719476862"  [ label = "AST: "] 
  "30064771175" -> "55834574868"  [ label = "AST: "] 
  "30064771176" -> "68719476868"  [ label = "AST: "] 
  "30064771176" -> "55834574869"  [ label = "AST: "] 
  "146028888064" -> "68719476873"  [ label = "AST: "] 
  "30064771072" -> "55834574849"  [ label = "CFG: "] 
  "30064771072" -> "55834574851"  [ label = "CFG: "] 
  "30064771074" -> "55834574853"  [ label = "CFG: "] 
  "30064771074" -> "55834574855"  [ label = "CFG: "] 
  "30064771082" -> "55834574857"  [ label = "CFG: "] 
  "30064771090" -> "55834574859"  [ label = "CFG: "] 
  "30064771094" -> "30064771099"  [ label = "CFG: "] 
  "30064771098" -> "30064771102"  [ label = "CFG: "] 
  "30064771100" -> "30064771105"  [ label = "CFG: "] 
  "30064771103" -> "30064771108"  [ label = "CFG: "] 
  "30064771106" -> "30064771111"  [ label = "CFG: "] 
  "30064771109" -> "55834574861"  [ label = "CFG: "] 
  "30064771112" -> "55834574863"  [ label = "CFG: "] 
  "30064771115" -> "30064771119"  [ label = "CFG: "] 
  "30064771118" -> "30064771122"  [ label = "CFG: "] 
  "30064771120" -> "30064771123"  [ label = "CFG: "] 
  "30064771123" -> "30064771124"  [ label = "CFG: "] 
  "30064771124" -> "55834574865"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771116" -> "30064771115"  [ label = "CFG: "] 
  "30064771119" -> "30064771118"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771125" -> "68719476789"  [ label = "CFG: "] 
  "30064771125" -> "30064771128"  [ label = "CFG: "] 
  "68719476789" -> "30064771133"  [ label = "CFG: "] 
  "68719476789" -> "30064771150"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771079" -> "30064771075"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771087" -> "30064771083"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771114" -> "55834574862"  [ label = "CFG: "] 
  "55834574862" -> "30064771113"  [ label = "CFG: "] 
  "30064771117" -> "55834574864"  [ label = "CFG: "] 
  "55834574864" -> "30064771116"  [ label = "CFG: "] 
  "30064771122" -> "30064771121"  [ label = "CFG: "] 
  "55834574865" -> "30064771125"  [ label = "CFG: "] 
  "30064771126" -> "30064771131"  [ label = "CFG: "] 
  "30064771129" -> "68719476789"  [ label = "CFG: "] 
  "30064771132" -> "30064771134"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771093" -> "55834574858"  [ label = "CFG: "] 
  "55834574858" -> "30064771092"  [ label = "CFG: "] 
  "30064771097" -> "55834574860"  [ label = "CFG: "] 
  "55834574860" -> "30064771096"  [ label = "CFG: "] 
  "55834574861" -> "30064771114"  [ label = "CFG: "] 
  "55834574863" -> "30064771117"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "30064771133" -> "30064771132"  [ label = "CFG: "] 
  "30064771135" -> "30064771139"  [ label = "CFG: "] 
  "30064771135" -> "146028888064"  [ label = "CFG: "] 
  "30064771136" -> "30064771135"  [ label = "CFG: "] 
  "30064771078" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771077"  [ label = "CFG: "] 
  "30064771081" -> "55834574852"  [ label = "CFG: "] 
  "55834574852" -> "30064771080"  [ label = "CFG: "] 
  "30064771086" -> "55834574854"  [ label = "CFG: "] 
  "55834574854" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "55834574856"  [ label = "CFG: "] 
  "55834574856" -> "30064771088"  [ label = "CFG: "] 
  "55834574857" -> "30064771093"  [ label = "CFG: "] 
  "55834574859" -> "30064771097"  [ label = "CFG: "] 
  "30064771128" -> "30064771127"  [ label = "CFG: "] 
  "30064771131" -> "30064771130"  [ label = "CFG: "] 
  "30064771134" -> "30064771135"  [ label = "CFG: "] 
  "30064771137" -> "30064771144"  [ label = "CFG: "] 
  "30064771142" -> "55834574866"  [ label = "CFG: "] 
  "30064771147" -> "30064771136"  [ label = "CFG: "] 
  "30064771151" -> "30064771155"  [ label = "CFG: "] 
  "30064771151" -> "146028888064"  [ label = "CFG: "] 
  "30064771152" -> "30064771151"  [ label = "CFG: "] 
  "55834574849" -> "30064771078"  [ label = "CFG: "] 
  "55834574851" -> "30064771081"  [ label = "CFG: "] 
  "55834574853" -> "30064771086"  [ label = "CFG: "] 
  "55834574855" -> "30064771089"  [ label = "CFG: "] 
  "30064771138" -> "30064771137"  [ label = "CFG: "] 
  "30064771143" -> "30064771142"  [ label = "CFG: "] 
  "30064771148" -> "55834574867"  [ label = "CFG: "] 
  "30064771149" -> "30064771147"  [ label = "CFG: "] 
  "30064771150" -> "30064771151"  [ label = "CFG: "] 
  "30064771153" -> "30064771157"  [ label = "CFG: "] 
  "30064771139" -> "30064771141"  [ label = "CFG: "] 
  "30064771140" -> "30064771138"  [ label = "CFG: "] 
  "30064771144" -> "30064771146"  [ label = "CFG: "] 
  "30064771145" -> "30064771143"  [ label = "CFG: "] 
  "55834574866" -> "30064771148"  [ label = "CFG: "] 
  "55834574867" -> "30064771149"  [ label = "CFG: "] 
  "30064771154" -> "30064771153"  [ label = "CFG: "] 
  "30064771158" -> "30064771163"  [ label = "CFG: "] 
  "30064771158" -> "30064771152"  [ label = "CFG: "] 
  "30064771159" -> "30064771158"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771155" -> "30064771156"  [ label = "CFG: "] 
  "30064771156" -> "30064771154"  [ label = "CFG: "] 
  "30064771157" -> "30064771158"  [ label = "CFG: "] 
  "30064771160" -> "30064771170"  [ label = "CFG: "] 
  "30064771167" -> "55834574868"  [ label = "CFG: "] 
  "30064771174" -> "30064771159"  [ label = "CFG: "] 
  "30064771161" -> "30064771160"  [ label = "CFG: "] 
  "30064771168" -> "30064771167"  [ label = "CFG: "] 
  "30064771175" -> "55834574869"  [ label = "CFG: "] 
  "30064771176" -> "30064771174"  [ label = "CFG: "] 
  "30064771162" -> "30064771166"  [ label = "CFG: "] 
  "30064771166" -> "30064771161"  [ label = "CFG: "] 
  "30064771169" -> "30064771173"  [ label = "CFG: "] 
  "30064771173" -> "30064771168"  [ label = "CFG: "] 
  "55834574868" -> "30064771175"  [ label = "CFG: "] 
  "55834574869" -> "30064771176"  [ label = "CFG: "] 
  "30064771163" -> "30064771165"  [ label = "CFG: "] 
  "30064771164" -> "30064771162"  [ label = "CFG: "] 
  "30064771170" -> "30064771172"  [ label = "CFG: "] 
  "30064771171" -> "30064771169"  [ label = "CFG: "] 
  "30064771165" -> "30064771164"  [ label = "CFG: "] 
  "30064771172" -> "30064771171"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: input"] 
  "115964116996" -> "128849018880"  [ label = "DDG: params"] 
  "115964117000" -> "128849018880"  [ label = "DDG: hidden_state"] 
  "115964117001" -> "128849018880"  [ label = "DDG: output"] 
  "115964117002" -> "128849018880"  [ label = "DDG: zero_points"] 
  "115964117004" -> "128849018880"  [ label = "DDG: row_sums"] 
  "115964117005" -> "128849018880"  [ label = "DDG: compute_row_sums"] 
  "30064771072" -> "128849018880"  [ label = "DDG: params-&gt;time_major"] 
  "30064771072" -> "128849018880"  [ label = "DDG: time_major = params-&gt;time_major"] 
  "30064771074" -> "128849018880"  [ label = "DDG: batch_size"] 
  "30064771074" -> "128849018880"  [ label = "DDG: (time_major) ? input-&gt;dims-&gt;data[1] : input-&gt;dims-&gt;data[0]"] 
  "30064771074" -> "128849018880"  [ label = "DDG: batch_size =
      (time_major) ? input-&gt;dims-&gt;data[1] : input-&gt;dims-&gt;data[0]"] 
  "30064771082" -> "128849018880"  [ label = "DDG: max_time"] 
  "30064771083" -> "128849018880"  [ label = "DDG: time_major"] 
  "30064771083" -> "128849018880"  [ label = "DDG: input-&gt;dims-&gt;data[1]"] 
  "30064771083" -> "128849018880"  [ label = "DDG: input-&gt;dims-&gt;data[0]"] 
  "30064771082" -> "128849018880"  [ label = "DDG: (time_major) ? input-&gt;dims-&gt;data[0] : input-&gt;dims-&gt;data[1]"] 
  "30064771082" -> "128849018880"  [ label = "DDG: max_time =
      (time_major) ? input-&gt;dims-&gt;data[0] : input-&gt;dims-&gt;data[1]"] 
  "30064771090" -> "128849018880"  [ label = "DDG: num_units"] 
  "30064771090" -> "128849018880"  [ label = "DDG: input_weights-&gt;dims-&gt;data[0]"] 
  "30064771090" -> "128849018880"  [ label = "DDG: num_units = input_weights-&gt;dims-&gt;data[0]"] 
  "30064771094" -> "128849018880"  [ label = "DDG: input_size"] 
  "30064771094" -> "128849018880"  [ label = "DDG: input-&gt;dims-&gt;data[2]"] 
  "30064771094" -> "128849018880"  [ label = "DDG: input_size = input-&gt;dims-&gt;data[2]"] 
  "30064771098" -> "128849018880"  [ label = "DDG: bias_ptr"] 
  "30064771099" -> "128849018880"  [ label = "DDG: bias"] 
  "30064771098" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(bias)"] 
  "30064771098" -> "128849018880"  [ label = "DDG: * bias_ptr = GetTensorData&lt;float&gt;(bias)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: input_weights_ptr"] 
  "30064771101" -> "128849018880"  [ label = "DDG: input_weights"] 
  "30064771100" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int8_t&gt;(input_weights)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: * input_weights_ptr = GetTensorData&lt;int8_t&gt;(input_weights)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: recurrent_weights_ptr"] 
  "30064771104" -> "128849018880"  [ label = "DDG: recurrent_weights"] 
  "30064771103" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int8_t&gt;(recurrent_weights)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: * recurrent_weights_ptr =
      GetTensorData&lt;int8_t&gt;(recurrent_weights)"] 
  "30064771106" -> "128849018880"  [ label = "DDG: quantized_input_ptr"] 
  "30064771107" -> "128849018880"  [ label = "DDG: input_scratch"] 
  "30064771106" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int8_t&gt;(input_scratch)"] 
  "30064771106" -> "128849018880"  [ label = "DDG: * quantized_input_ptr = GetTensorData&lt;int8_t&gt;(input_scratch)"] 
  "30064771109" -> "128849018880"  [ label = "DDG: quantized_hidden_state_ptr"] 
  "30064771111" -> "128849018880"  [ label = "DDG: int8_t"] 
  "30064771110" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int8_t"] 
  "30064771110" -> "128849018880"  [ label = "DDG: hidden_state_scratch"] 
  "30064771109" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int8_t&gt;(hidden_state_scratch)"] 
  "30064771109" -> "128849018880"  [ label = "DDG: * quantized_hidden_state_ptr =
      GetTensorData&lt;int8_t&gt;(hidden_state_scratch)"] 
  "30064771112" -> "128849018880"  [ label = "DDG: input_weights_scale"] 
  "30064771112" -> "128849018880"  [ label = "DDG: input_weights-&gt;params.scale"] 
  "30064771112" -> "128849018880"  [ label = "DDG: input_weights_scale = input_weights-&gt;params.scale"] 
  "30064771115" -> "128849018880"  [ label = "DDG: recurrent_weights_scale"] 
  "30064771115" -> "128849018880"  [ label = "DDG: recurrent_weights-&gt;params.scale"] 
  "30064771115" -> "128849018880"  [ label = "DDG: recurrent_weights_scale = recurrent_weights-&gt;params.scale"] 
  "30064771118" -> "128849018880"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771119" -> "128849018880"  [ label = "DDG: scaling_factors"] 
  "30064771118" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(scaling_factors)"] 
  "30064771118" -> "128849018880"  [ label = "DDG: * scaling_factors_ptr = GetTensorData&lt;float&gt;(scaling_factors)"] 
  "30064771120" -> "128849018880"  [ label = "DDG: accum_scratch_ptr"] 
  "30064771122" -> "128849018880"  [ label = "DDG: GetTensorData"] 
  "30064771122" -> "128849018880"  [ label = "DDG: int32_t"] 
  "30064771121" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32_t"] 
  "30064771121" -> "128849018880"  [ label = "DDG: accum_scratch"] 
  "30064771120" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32_t&gt;(accum_scratch)"] 
  "30064771120" -> "128849018880"  [ label = "DDG: * accum_scratch_ptr = GetTensorData&lt;int32_t&gt;(accum_scratch)"] 
  "30064771123" -> "128849018880"  [ label = "DDG: zero_points_ptr"] 
  "30064771123" -> "128849018880"  [ label = "DDG: * zero_points_ptr = nullptr"] 
  "30064771124" -> "128849018880"  [ label = "DDG: row_sums_ptr"] 
  "30064771124" -> "128849018880"  [ label = "DDG: * row_sums_ptr = nullptr"] 
  "30064771126" -> "128849018880"  [ label = "DDG: zero_points_ptr"] 
  "30064771127" -> "128849018880"  [ label = "DDG: zero_points"] 
  "30064771126" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32_t&gt;(zero_points)"] 
  "30064771126" -> "128849018880"  [ label = "DDG: zero_points_ptr = GetTensorData&lt;int32_t&gt;(zero_points)"] 
  "30064771129" -> "128849018880"  [ label = "DDG: row_sums_ptr"] 
  "30064771131" -> "128849018880"  [ label = "DDG: GetTensorData"] 
  "30064771131" -> "128849018880"  [ label = "DDG: int32_t"] 
  "30064771130" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32_t"] 
  "30064771130" -> "128849018880"  [ label = "DDG: row_sums"] 
  "30064771129" -> "128849018880"  [ label = "DDG: GetTensorData&lt;int32_t&gt;(row_sums)"] 
  "30064771129" -> "128849018880"  [ label = "DDG: row_sums_ptr = GetTensorData&lt;int32_t&gt;(row_sums)"] 
  "30064771150" -> "128849018880"  [ label = "DDG: b = 0"] 
  "30064771151" -> "128849018880"  [ label = "DDG: b"] 
  "30064771151" -> "128849018880"  [ label = "DDG: batch_size"] 
  "30064771151" -> "128849018880"  [ label = "DDG: b &lt; batch_size"] 
  "30064771153" -> "128849018880"  [ label = "DDG: hidden_state_ptr_batch"] 
  "30064771155" -> "128849018880"  [ label = "DDG: hidden_state"] 
  "30064771154" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(hidden_state)"] 
  "30064771156" -> "128849018880"  [ label = "DDG: num_units"] 
  "30064771154" -> "128849018880"  [ label = "DDG: b * num_units"] 
  "30064771153" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(hidden_state) + b * num_units"] 
  "30064771153" -> "128849018880"  [ label = "DDG: * hidden_state_ptr_batch =
          GetTensorData&lt;float&gt;(hidden_state) + b * num_units"] 
  "30064771157" -> "128849018880"  [ label = "DDG: s = 0"] 
  "30064771158" -> "128849018880"  [ label = "DDG: s"] 
  "30064771158" -> "128849018880"  [ label = "DDG: max_time"] 
  "30064771158" -> "128849018880"  [ label = "DDG: s &lt; max_time"] 
  "30064771152" -> "128849018880"  [ label = "DDG: b++"] 
  "30064771163" -> "128849018880"  [ label = "DDG: input"] 
  "30064771162" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(input)"] 
  "30064771164" -> "128849018880"  [ label = "DDG: b * input_size"] 
  "30064771162" -> "128849018880"  [ label = "DDG: b * input_size * max_time"] 
  "30064771161" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(input) +
                                       b * input_size * max_time"] 
  "30064771161" -> "128849018880"  [ label = "DDG: s * input_size"] 
  "30064771160" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(input) +
                                       b * input_size * max_time +
                                       s * input_size"] 
  "30064771160" -> "128849018880"  [ label = "DDG: * input_ptr_batch = GetTensorData&lt;float&gt;(input) +
                                       b * input_size * max_time +
                                       s * input_size"] 
  "30064771170" -> "128849018880"  [ label = "DDG: output"] 
  "30064771169" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(output)"] 
  "30064771171" -> "128849018880"  [ label = "DDG: b * num_units"] 
  "30064771169" -> "128849018880"  [ label = "DDG: b * num_units * max_time"] 
  "30064771168" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(output) +
                                  b * num_units * max_time"] 
  "30064771168" -> "128849018880"  [ label = "DDG: s * num_units"] 
  "30064771167" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(output) +
                                  b * num_units * max_time + s * num_units"] 
  "30064771167" -> "128849018880"  [ label = "DDG: * output_ptr_batch = GetTensorData&lt;float&gt;(output) +
                                  b * num_units * max_time + s * num_units"] 
  "30064771174" -> "128849018880"  [ label = "DDG: input_ptr_batch"] 
  "30064771174" -> "128849018880"  [ label = "DDG: input_weights_ptr"] 
  "30064771174" -> "128849018880"  [ label = "DDG: input_weights_scale"] 
  "30064771174" -> "128849018880"  [ label = "DDG: recurrent_weights_ptr"] 
  "30064771174" -> "128849018880"  [ label = "DDG: recurrent_weights_scale"] 
  "30064771174" -> "128849018880"  [ label = "DDG: bias_ptr"] 
  "30064771174" -> "128849018880"  [ label = "DDG: input_size"] 
  "30064771174" -> "128849018880"  [ label = "DDG: num_units"] 
  "30064771174" -> "128849018880"  [ label = "DDG: params-&gt;activation"] 
  "30064771174" -> "128849018880"  [ label = "DDG: quantized_input_ptr"] 
  "30064771174" -> "128849018880"  [ label = "DDG: quantized_hidden_state_ptr"] 
  "30064771174" -> "128849018880"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771174" -> "128849018880"  [ label = "DDG: hidden_state_ptr_batch"] 
  "30064771174" -> "128849018880"  [ label = "DDG: output_ptr_batch"] 
  "30064771174" -> "128849018880"  [ label = "DDG: params-&gt;asymmetric_quantize_inputs"] 
  "30064771174" -> "128849018880"  [ label = "DDG: zero_points_ptr"] 
  "30064771174" -> "128849018880"  [ label = "DDG: accum_scratch_ptr"] 
  "30064771174" -> "128849018880"  [ label = "DDG: row_sums_ptr"] 
  "30064771174" -> "128849018880"  [ label = "DDG: compute_row_sums"] 
  "30064771174" -> "128849018880"  [ label = "DDG: kernel_utils::RnnBatchStep(
            input_ptr_batch, input_weights_ptr, input_weights_scale,
            recurrent_weights_ptr, recurrent_weights_scale, bias_ptr,
            input_size, num_units, /*batch_size=*/1, num_units,
            params-&gt;activation, quantized_input_ptr, quantized_hidden_state_ptr,
            scaling_factors_ptr, hidden_state_ptr_batch, output_ptr_batch,
            params-&gt;asymmetric_quantize_inputs, zero_points_ptr,
            accum_scratch_ptr, row_sums_ptr, compute_row_sums)"] 
  "30064771159" -> "128849018880"  [ label = "DDG: s++"] 
  "30064771132" -> "128849018880"  [ label = "DDG: hidden_state_ptr_batch"] 
  "30064771133" -> "128849018880"  [ label = "DDG: hidden_state"] 
  "30064771132" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(hidden_state)"] 
  "30064771132" -> "128849018880"  [ label = "DDG: * hidden_state_ptr_batch = GetTensorData&lt;float&gt;(hidden_state)"] 
  "30064771134" -> "128849018880"  [ label = "DDG: s = 0"] 
  "30064771135" -> "128849018880"  [ label = "DDG: s"] 
  "30064771135" -> "128849018880"  [ label = "DDG: max_time"] 
  "30064771135" -> "128849018880"  [ label = "DDG: s &lt; max_time"] 
  "30064771139" -> "128849018880"  [ label = "DDG: input"] 
  "30064771138" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(input)"] 
  "30064771140" -> "128849018880"  [ label = "DDG: s * input_size"] 
  "30064771138" -> "128849018880"  [ label = "DDG: s * input_size * batch_size"] 
  "30064771137" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(input) + s * input_size * batch_size"] 
  "30064771137" -> "128849018880"  [ label = "DDG: * input_ptr_batch =
          GetTensorData&lt;float&gt;(input) + s * input_size * batch_size"] 
  "30064771144" -> "128849018880"  [ label = "DDG: output"] 
  "30064771143" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(output)"] 
  "30064771145" -> "128849018880"  [ label = "DDG: s * num_units"] 
  "30064771143" -> "128849018880"  [ label = "DDG: s * num_units * batch_size"] 
  "30064771142" -> "128849018880"  [ label = "DDG: GetTensorData&lt;float&gt;(output) + s * num_units * batch_size"] 
  "30064771142" -> "128849018880"  [ label = "DDG: * output_ptr_batch =
          GetTensorData&lt;float&gt;(output) + s * num_units * batch_size"] 
  "30064771147" -> "128849018880"  [ label = "DDG: input_ptr_batch"] 
  "30064771147" -> "128849018880"  [ label = "DDG: input_weights_ptr"] 
  "30064771147" -> "128849018880"  [ label = "DDG: input_weights_scale"] 
  "30064771147" -> "128849018880"  [ label = "DDG: recurrent_weights_ptr"] 
  "30064771147" -> "128849018880"  [ label = "DDG: recurrent_weights_scale"] 
  "30064771147" -> "128849018880"  [ label = "DDG: bias_ptr"] 
  "30064771147" -> "128849018880"  [ label = "DDG: input_size"] 
  "30064771147" -> "128849018880"  [ label = "DDG: num_units"] 
  "30064771147" -> "128849018880"  [ label = "DDG: batch_size"] 
  "30064771147" -> "128849018880"  [ label = "DDG: params-&gt;activation"] 
  "30064771147" -> "128849018880"  [ label = "DDG: quantized_input_ptr"] 
  "30064771147" -> "128849018880"  [ label = "DDG: quantized_hidden_state_ptr"] 
  "30064771147" -> "128849018880"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771147" -> "128849018880"  [ label = "DDG: hidden_state_ptr_batch"] 
  "30064771147" -> "128849018880"  [ label = "DDG: output_ptr_batch"] 
  "30064771147" -> "128849018880"  [ label = "DDG: params-&gt;asymmetric_quantize_inputs"] 
  "30064771147" -> "128849018880"  [ label = "DDG: zero_points_ptr"] 
  "30064771147" -> "128849018880"  [ label = "DDG: accum_scratch_ptr"] 
  "30064771147" -> "128849018880"  [ label = "DDG: row_sums_ptr"] 
  "30064771147" -> "128849018880"  [ label = "DDG: compute_row_sums"] 
  "30064771147" -> "128849018880"  [ label = "DDG: kernel_utils::RnnBatchStep(
          input_ptr_batch, input_weights_ptr, input_weights_scale,
          recurrent_weights_ptr, recurrent_weights_scale, bias_ptr, input_size,
          num_units, batch_size, num_units, params-&gt;activation,
          quantized_input_ptr, quantized_hidden_state_ptr, scaling_factors_ptr,
          hidden_state_ptr_batch, output_ptr_batch,
          params-&gt;asymmetric_quantize_inputs, zero_points_ptr,
          accum_scratch_ptr, row_sums_ptr, compute_row_sums)"] 
  "30064771136" -> "128849018880"  [ label = "DDG: s++"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "115964116998"  [ label = "DDG: "] 
  "111669149697" -> "115964116999"  [ label = "DDG: "] 
  "111669149697" -> "115964117000"  [ label = "DDG: "] 
  "111669149697" -> "115964117001"  [ label = "DDG: "] 
  "111669149697" -> "115964117002"  [ label = "DDG: "] 
  "111669149697" -> "115964117003"  [ label = "DDG: "] 
  "111669149697" -> "115964117004"  [ label = "DDG: "] 
  "111669149697" -> "115964117005"  [ label = "DDG: "] 
  "115964116996" -> "30064771072"  [ label = "DDG: params"] 
  "30064771099" -> "30064771098"  [ label = "DDG: bias"] 
  "30064771101" -> "30064771100"  [ label = "DDG: GetTensorData&lt;int8_t"] 
  "30064771101" -> "30064771100"  [ label = "DDG: input_weights"] 
  "30064771104" -> "30064771103"  [ label = "DDG: GetTensorData&lt;int8_t"] 
  "30064771104" -> "30064771103"  [ label = "DDG: recurrent_weights"] 
  "30064771107" -> "30064771106"  [ label = "DDG: GetTensorData&lt;int8_t"] 
  "30064771107" -> "30064771106"  [ label = "DDG: input_scratch"] 
  "30064771110" -> "30064771109"  [ label = "DDG: GetTensorData&lt;int8_t"] 
  "30064771110" -> "30064771109"  [ label = "DDG: hidden_state_scratch"] 
  "30064771119" -> "30064771118"  [ label = "DDG: scaling_factors"] 
  "30064771121" -> "30064771120"  [ label = "DDG: GetTensorData&lt;int32_t"] 
  "30064771121" -> "30064771120"  [ label = "DDG: accum_scratch"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "68719476873" -> "146028888064"  [ label = "DDG: kTfLiteOk"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "111669149697" -> "68719476789"  [ label = "DDG: "] 
  "111669149697" -> "68719476873"  [ label = "DDG: "] 
  "115964116995" -> "30064771099"  [ label = "DDG: bias"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771102" -> "30064771101"  [ label = "DDG: GetTensorData"] 
  "30064771102" -> "30064771101"  [ label = "DDG: int8_t"] 
  "115964116993" -> "30064771101"  [ label = "DDG: input_weights"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771105" -> "30064771104"  [ label = "DDG: GetTensorData"] 
  "30064771105" -> "30064771104"  [ label = "DDG: int8_t"] 
  "115964116994" -> "30064771104"  [ label = "DDG: recurrent_weights"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771108" -> "30064771107"  [ label = "DDG: GetTensorData"] 
  "30064771108" -> "30064771107"  [ label = "DDG: int8_t"] 
  "115964116997" -> "30064771107"  [ label = "DDG: input_scratch"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771111" -> "30064771110"  [ label = "DDG: GetTensorData"] 
  "30064771111" -> "30064771110"  [ label = "DDG: int8_t"] 
  "115964116998" -> "30064771110"  [ label = "DDG: hidden_state_scratch"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "115964116999" -> "30064771119"  [ label = "DDG: scaling_factors"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771122" -> "30064771121"  [ label = "DDG: GetTensorData"] 
  "30064771122" -> "30064771121"  [ label = "DDG: int32_t"] 
  "115964117003" -> "30064771121"  [ label = "DDG: accum_scratch"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771127" -> "30064771126"  [ label = "DDG: GetTensorData&lt;int32_t"] 
  "30064771127" -> "30064771126"  [ label = "DDG: zero_points"] 
  "30064771130" -> "30064771129"  [ label = "DDG: GetTensorData&lt;int32_t"] 
  "30064771130" -> "30064771129"  [ label = "DDG: row_sums"] 
  "30064771133" -> "30064771132"  [ label = "DDG: hidden_state"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771102" -> "30064771105"  [ label = "DDG: GetTensorData"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771102" -> "30064771105"  [ label = "DDG: int8_t"] 
  "30064771105" -> "30064771108"  [ label = "DDG: GetTensorData"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771105" -> "30064771108"  [ label = "DDG: int8_t"] 
  "30064771108" -> "30064771111"  [ label = "DDG: GetTensorData"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771108" -> "30064771111"  [ label = "DDG: int8_t"] 
  "30064771111" -> "30064771122"  [ label = "DDG: GetTensorData"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771128" -> "30064771127"  [ label = "DDG: GetTensorData"] 
  "30064771128" -> "30064771127"  [ label = "DDG: int32_t"] 
  "115964117002" -> "30064771127"  [ label = "DDG: zero_points"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771131" -> "30064771130"  [ label = "DDG: GetTensorData"] 
  "30064771131" -> "30064771130"  [ label = "DDG: int32_t"] 
  "115964117004" -> "30064771130"  [ label = "DDG: row_sums"] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "115964117000" -> "30064771133"  [ label = "DDG: hidden_state"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771134" -> "30064771135"  [ label = "DDG: s"] 
  "30064771136" -> "30064771135"  [ label = "DDG: s"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771082" -> "30064771135"  [ label = "DDG: max_time"] 
  "30064771146" -> "30064771136"  [ label = "DDG: s"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771139" -> "30064771137"  [ label = "DDG: input"] 
  "30064771140" -> "30064771137"  [ label = "DDG: s * input_size"] 
  "30064771140" -> "30064771137"  [ label = "DDG: batch_size"] 
  "30064771144" -> "30064771142"  [ label = "DDG: output"] 
  "30064771145" -> "30064771142"  [ label = "DDG: s * num_units"] 
  "30064771145" -> "30064771142"  [ label = "DDG: batch_size"] 
  "30064771122" -> "30064771128"  [ label = "DDG: GetTensorData"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771122" -> "30064771128"  [ label = "DDG: int32_t"] 
  "30064771128" -> "30064771131"  [ label = "DDG: GetTensorData"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771128" -> "30064771131"  [ label = "DDG: int32_t"] 
  "30064771137" -> "30064771147"  [ label = "DDG: input_ptr_batch"] 
  "111669149697" -> "30064771147"  [ label = "DDG: "] 
  "30064771100" -> "30064771147"  [ label = "DDG: input_weights_ptr"] 
  "30064771112" -> "30064771147"  [ label = "DDG: input_weights_scale"] 
  "30064771103" -> "30064771147"  [ label = "DDG: recurrent_weights_ptr"] 
  "30064771115" -> "30064771147"  [ label = "DDG: recurrent_weights_scale"] 
  "30064771098" -> "30064771147"  [ label = "DDG: bias_ptr"] 
  "30064771141" -> "30064771147"  [ label = "DDG: input_size"] 
  "30064771146" -> "30064771147"  [ label = "DDG: num_units"] 
  "30064771145" -> "30064771147"  [ label = "DDG: batch_size"] 
  "115964116996" -> "30064771147"  [ label = "DDG: params"] 
  "30064771106" -> "30064771147"  [ label = "DDG: quantized_input_ptr"] 
  "30064771109" -> "30064771147"  [ label = "DDG: quantized_hidden_state_ptr"] 
  "30064771118" -> "30064771147"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771132" -> "30064771147"  [ label = "DDG: hidden_state_ptr_batch"] 
  "30064771142" -> "30064771147"  [ label = "DDG: output_ptr_batch"] 
  "30064771123" -> "30064771147"  [ label = "DDG: zero_points_ptr"] 
  "30064771126" -> "30064771147"  [ label = "DDG: zero_points_ptr"] 
  "30064771120" -> "30064771147"  [ label = "DDG: accum_scratch_ptr"] 
  "30064771124" -> "30064771147"  [ label = "DDG: row_sums_ptr"] 
  "30064771129" -> "30064771147"  [ label = "DDG: row_sums_ptr"] 
  "115964117005" -> "30064771147"  [ label = "DDG: compute_row_sums"] 
  "111669149697" -> "30064771150"  [ label = "DDG: "] 
  "30064771150" -> "30064771151"  [ label = "DDG: b"] 
  "30064771152" -> "30064771151"  [ label = "DDG: b"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771074" -> "30064771151"  [ label = "DDG: batch_size"] 
  "30064771156" -> "30064771152"  [ label = "DDG: b"] 
  "30064771172" -> "30064771152"  [ label = "DDG: b"] 
  "111669149697" -> "30064771152"  [ label = "DDG: "] 
  "30064771155" -> "30064771153"  [ label = "DDG: hidden_state"] 
  "30064771156" -> "30064771153"  [ label = "DDG: b"] 
  "30064771156" -> "30064771153"  [ label = "DDG: num_units"] 
  "30064771139" -> "30064771138"  [ label = "DDG: input"] 
  "30064771140" -> "30064771138"  [ label = "DDG: s * input_size"] 
  "30064771140" -> "30064771138"  [ label = "DDG: batch_size"] 
  "30064771144" -> "30064771143"  [ label = "DDG: output"] 
  "30064771145" -> "30064771143"  [ label = "DDG: s * num_units"] 
  "30064771145" -> "30064771143"  [ label = "DDG: batch_size"] 
  "115964116992" -> "30064771139"  [ label = "DDG: input"] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771141" -> "30064771140"  [ label = "DDG: s"] 
  "30064771141" -> "30064771140"  [ label = "DDG: input_size"] 
  "30064771074" -> "30064771140"  [ label = "DDG: batch_size"] 
  "30064771147" -> "30064771140"  [ label = "DDG: batch_size"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "115964117001" -> "30064771144"  [ label = "DDG: output"] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "30064771146" -> "30064771145"  [ label = "DDG: s"] 
  "30064771146" -> "30064771145"  [ label = "DDG: num_units"] 
  "30064771140" -> "30064771145"  [ label = "DDG: batch_size"] 
  "111669149697" -> "30064771145"  [ label = "DDG: "] 
  "30064771155" -> "30064771154"  [ label = "DDG: hidden_state"] 
  "30064771156" -> "30064771154"  [ label = "DDG: b"] 
  "30064771156" -> "30064771154"  [ label = "DDG: num_units"] 
  "111669149697" -> "30064771157"  [ label = "DDG: "] 
  "30064771157" -> "30064771158"  [ label = "DDG: s"] 
  "30064771159" -> "30064771158"  [ label = "DDG: s"] 
  "111669149697" -> "30064771158"  [ label = "DDG: "] 
  "30064771082" -> "30064771158"  [ label = "DDG: max_time"] 
  "30064771171" -> "30064771158"  [ label = "DDG: max_time"] 
  "30064771173" -> "30064771159"  [ label = "DDG: s"] 
  "111669149697" -> "30064771159"  [ label = "DDG: "] 
  "30064771163" -> "30064771160"  [ label = "DDG: input"] 
  "30064771164" -> "30064771160"  [ label = "DDG: b * input_size"] 
  "30064771164" -> "30064771160"  [ label = "DDG: max_time"] 
  "30064771166" -> "30064771160"  [ label = "DDG: s"] 
  "30064771166" -> "30064771160"  [ label = "DDG: input_size"] 
  "30064771170" -> "30064771167"  [ label = "DDG: output"] 
  "30064771171" -> "30064771167"  [ label = "DDG: b * num_units"] 
  "30064771171" -> "30064771167"  [ label = "DDG: max_time"] 
  "30064771173" -> "30064771167"  [ label = "DDG: s"] 
  "30064771173" -> "30064771167"  [ label = "DDG: num_units"] 
  "30064771135" -> "30064771141"  [ label = "DDG: s"] 
  "111669149697" -> "30064771141"  [ label = "DDG: "] 
  "30064771094" -> "30064771141"  [ label = "DDG: input_size"] 
  "30064771147" -> "30064771141"  [ label = "DDG: input_size"] 
  "30064771141" -> "30064771146"  [ label = "DDG: s"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771090" -> "30064771146"  [ label = "DDG: num_units"] 
  "30064771147" -> "30064771146"  [ label = "DDG: num_units"] 
  "115964117000" -> "30064771155"  [ label = "DDG: hidden_state"] 
  "111669149697" -> "30064771155"  [ label = "DDG: "] 
  "30064771151" -> "30064771156"  [ label = "DDG: b"] 
  "111669149697" -> "30064771156"  [ label = "DDG: "] 
  "30064771090" -> "30064771156"  [ label = "DDG: num_units"] 
  "30064771174" -> "30064771156"  [ label = "DDG: num_units"] 
  "30064771160" -> "30064771174"  [ label = "DDG: input_ptr_batch"] 
  "111669149697" -> "30064771174"  [ label = "DDG: "] 
  "30064771100" -> "30064771174"  [ label = "DDG: input_weights_ptr"] 
  "30064771112" -> "30064771174"  [ label = "DDG: input_weights_scale"] 
  "30064771103" -> "30064771174"  [ label = "DDG: recurrent_weights_ptr"] 
  "30064771115" -> "30064771174"  [ label = "DDG: recurrent_weights_scale"] 
  "30064771098" -> "30064771174"  [ label = "DDG: bias_ptr"] 
  "30064771166" -> "30064771174"  [ label = "DDG: input_size"] 
  "30064771173" -> "30064771174"  [ label = "DDG: num_units"] 
  "115964116996" -> "30064771174"  [ label = "DDG: params"] 
  "30064771106" -> "30064771174"  [ label = "DDG: quantized_input_ptr"] 
  "30064771109" -> "30064771174"  [ label = "DDG: quantized_hidden_state_ptr"] 
  "30064771118" -> "30064771174"  [ label = "DDG: scaling_factors_ptr"] 
  "30064771153" -> "30064771174"  [ label = "DDG: hidden_state_ptr_batch"] 
  "30064771167" -> "30064771174"  [ label = "DDG: output_ptr_batch"] 
  "30064771123" -> "30064771174"  [ label = "DDG: zero_points_ptr"] 
  "30064771126" -> "30064771174"  [ label = "DDG: zero_points_ptr"] 
  "30064771120" -> "30064771174"  [ label = "DDG: accum_scratch_ptr"] 
  "30064771124" -> "30064771174"  [ label = "DDG: row_sums_ptr"] 
  "30064771129" -> "30064771174"  [ label = "DDG: row_sums_ptr"] 
  "115964117005" -> "30064771174"  [ label = "DDG: compute_row_sums"] 
  "30064771163" -> "30064771161"  [ label = "DDG: input"] 
  "30064771164" -> "30064771161"  [ label = "DDG: b * input_size"] 
  "30064771164" -> "30064771161"  [ label = "DDG: max_time"] 
  "30064771166" -> "30064771161"  [ label = "DDG: s"] 
  "30064771166" -> "30064771161"  [ label = "DDG: input_size"] 
  "30064771170" -> "30064771168"  [ label = "DDG: output"] 
  "30064771171" -> "30064771168"  [ label = "DDG: b * num_units"] 
  "30064771171" -> "30064771168"  [ label = "DDG: max_time"] 
  "30064771173" -> "30064771168"  [ label = "DDG: s"] 
  "30064771173" -> "30064771168"  [ label = "DDG: num_units"] 
  "30064771163" -> "30064771162"  [ label = "DDG: input"] 
  "30064771164" -> "30064771162"  [ label = "DDG: b * input_size"] 
  "30064771164" -> "30064771162"  [ label = "DDG: max_time"] 
  "30064771158" -> "30064771166"  [ label = "DDG: s"] 
  "111669149697" -> "30064771166"  [ label = "DDG: "] 
  "30064771165" -> "30064771166"  [ label = "DDG: input_size"] 
  "30064771170" -> "30064771169"  [ label = "DDG: output"] 
  "30064771171" -> "30064771169"  [ label = "DDG: b * num_units"] 
  "30064771171" -> "30064771169"  [ label = "DDG: max_time"] 
  "30064771166" -> "30064771173"  [ label = "DDG: s"] 
  "111669149697" -> "30064771173"  [ label = "DDG: "] 
  "30064771172" -> "30064771173"  [ label = "DDG: num_units"] 
  "115964116992" -> "30064771163"  [ label = "DDG: input"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "30064771165" -> "30064771164"  [ label = "DDG: b"] 
  "30064771165" -> "30064771164"  [ label = "DDG: input_size"] 
  "30064771158" -> "30064771164"  [ label = "DDG: max_time"] 
  "111669149697" -> "30064771164"  [ label = "DDG: "] 
  "115964117001" -> "30064771170"  [ label = "DDG: output"] 
  "111669149697" -> "30064771170"  [ label = "DDG: "] 
  "30064771172" -> "30064771171"  [ label = "DDG: b"] 
  "30064771172" -> "30064771171"  [ label = "DDG: num_units"] 
  "30064771164" -> "30064771171"  [ label = "DDG: max_time"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "30064771156" -> "30064771165"  [ label = "DDG: b"] 
  "30064771172" -> "30064771165"  [ label = "DDG: b"] 
  "111669149697" -> "30064771165"  [ label = "DDG: "] 
  "30064771094" -> "30064771165"  [ label = "DDG: input_size"] 
  "30064771174" -> "30064771165"  [ label = "DDG: input_size"] 
  "30064771165" -> "30064771172"  [ label = "DDG: b"] 
  "111669149697" -> "30064771172"  [ label = "DDG: "] 
  "30064771156" -> "30064771172"  [ label = "DDG: num_units"] 
  "30064771174" -> "30064771172"  [ label = "DDG: num_units"] 
  "30064771125" -> "30064771126"  [ label = "CDG: "] 
  "30064771125" -> "30064771127"  [ label = "CDG: "] 
  "30064771125" -> "30064771130"  [ label = "CDG: "] 
  "30064771125" -> "30064771131"  [ label = "CDG: "] 
  "30064771125" -> "30064771128"  [ label = "CDG: "] 
  "30064771125" -> "30064771129"  [ label = "CDG: "] 
  "68719476789" -> "30064771150"  [ label = "CDG: "] 
  "68719476789" -> "30064771151"  [ label = "CDG: "] 
  "68719476789" -> "30064771134"  [ label = "CDG: "] 
  "68719476789" -> "30064771135"  [ label = "CDG: "] 
  "68719476789" -> "30064771132"  [ label = "CDG: "] 
  "68719476789" -> "30064771133"  [ label = "CDG: "] 
  "30064771135" -> "55834574866"  [ label = "CDG: "] 
  "30064771135" -> "55834574867"  [ label = "CDG: "] 
  "30064771135" -> "30064771148"  [ label = "CDG: "] 
  "30064771135" -> "30064771149"  [ label = "CDG: "] 
  "30064771135" -> "30064771142"  [ label = "CDG: "] 
  "30064771135" -> "30064771143"  [ label = "CDG: "] 
  "30064771135" -> "30064771140"  [ label = "CDG: "] 
  "30064771135" -> "30064771141"  [ label = "CDG: "] 
  "30064771135" -> "30064771146"  [ label = "CDG: "] 
  "30064771135" -> "30064771147"  [ label = "CDG: "] 
  "30064771135" -> "30064771144"  [ label = "CDG: "] 
  "30064771135" -> "30064771145"  [ label = "CDG: "] 
  "30064771135" -> "30064771135"  [ label = "CDG: "] 
  "30064771135" -> "30064771138"  [ label = "CDG: "] 
  "30064771135" -> "30064771139"  [ label = "CDG: "] 
  "30064771135" -> "30064771136"  [ label = "CDG: "] 
  "30064771135" -> "30064771137"  [ label = "CDG: "] 
  "30064771151" -> "30064771158"  [ label = "CDG: "] 
  "30064771151" -> "30064771156"  [ label = "CDG: "] 
  "30064771151" -> "30064771157"  [ label = "CDG: "] 
  "30064771151" -> "30064771151"  [ label = "CDG: "] 
  "30064771151" -> "30064771154"  [ label = "CDG: "] 
  "30064771151" -> "30064771155"  [ label = "CDG: "] 
  "30064771151" -> "30064771152"  [ label = "CDG: "] 
  "30064771151" -> "30064771153"  [ label = "CDG: "] 
  "30064771158" -> "55834574868"  [ label = "CDG: "] 
  "30064771158" -> "55834574869"  [ label = "CDG: "] 
  "30064771158" -> "30064771174"  [ label = "CDG: "] 
  "30064771158" -> "30064771175"  [ label = "CDG: "] 
  "30064771158" -> "30064771172"  [ label = "CDG: "] 
  "30064771158" -> "30064771173"  [ label = "CDG: "] 
  "30064771158" -> "30064771176"  [ label = "CDG: "] 
  "30064771158" -> "30064771166"  [ label = "CDG: "] 
  "30064771158" -> "30064771167"  [ label = "CDG: "] 
  "30064771158" -> "30064771164"  [ label = "CDG: "] 
  "30064771158" -> "30064771165"  [ label = "CDG: "] 
  "30064771158" -> "30064771170"  [ label = "CDG: "] 
  "30064771158" -> "30064771171"  [ label = "CDG: "] 
  "30064771158" -> "30064771168"  [ label = "CDG: "] 
  "30064771158" -> "30064771169"  [ label = "CDG: "] 
  "30064771158" -> "30064771158"  [ label = "CDG: "] 
  "30064771158" -> "30064771159"  [ label = "CDG: "] 
  "30064771158" -> "30064771162"  [ label = "CDG: "] 
  "30064771158" -> "30064771163"  [ label = "CDG: "] 
  "30064771158" -> "30064771160"  [ label = "CDG: "] 
  "30064771158" -> "30064771161"  [ label = "CDG: "] 
}
"""
)
