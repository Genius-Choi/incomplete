[33mval[0m [36mres610[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "ComputeWithReservedSpace" {  
"111669149697" [label = <(METHOD,ComputeWithReservedSpace)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,OpKernelContext* context)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,bool use_reserved_space)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
    Tensor x = context-&gt;input(0);
    const T...,{
    Tensor x = context-&gt;input(0);
    const T...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,Tensor x: Tensor)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,x = context-&gt;input(0))<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,x,x = context-&gt;input(0))<SUB>3</SUB>> ]
"30064771073" [label = <(input,context-&gt;input(0))<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,context,context-&gt;input(0))<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,0,context-&gt;input(0))<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,const Tensor&amp; scale: Tensor&amp;)<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,&amp; scale = context-&gt;input(1))<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,scale,&amp; scale = context-&gt;input(1))<SUB>4</SUB>> ]
"30064771075" [label = <(input,context-&gt;input(1))<SUB>4</SUB>> ]
"68719476739" [label = <(IDENTIFIER,context,context-&gt;input(1))<SUB>4</SUB>> ]
"90194313217" [label = <(LITERAL,1,context-&gt;input(1))<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,const Tensor&amp; offset: Tensor&amp;)<SUB>5</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,&amp; offset = context-&gt;input(2))<SUB>5</SUB>> ]
"68719476740" [label = <(IDENTIFIER,offset,&amp; offset = context-&gt;input(2))<SUB>5</SUB>> ]
"30064771077" [label = <(input,context-&gt;input(2))<SUB>5</SUB>> ]
"68719476741" [label = <(IDENTIFIER,context,context-&gt;input(2))<SUB>5</SUB>> ]
"90194313218" [label = <(LITERAL,2,context-&gt;input(2))<SUB>5</SUB>> ]
"94489280515" [label = <(LOCAL,const Tensor&amp; estimated_mean: Tensor&amp;)<SUB>6</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,&amp; estimated_mean = context-&gt;input(3))<SUB>6</SUB>> ]
"68719476742" [label = <(IDENTIFIER,estimated_mean,&amp; estimated_mean = context-&gt;input(3))<SUB>6</SUB>> ]
"30064771079" [label = <(input,context-&gt;input(3))<SUB>6</SUB>> ]
"68719476743" [label = <(IDENTIFIER,context,context-&gt;input(3))<SUB>6</SUB>> ]
"90194313219" [label = <(LITERAL,3,context-&gt;input(3))<SUB>6</SUB>> ]
"94489280516" [label = <(LOCAL,const Tensor&amp; estimated_variance: Tensor&amp;)<SUB>7</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,&amp; estimated_variance = context-&gt;input(4))<SUB>7</SUB>> ]
"68719476744" [label = <(IDENTIFIER,estimated_variance,&amp; estimated_variance = context-&gt;input(4))<SUB>7</SUB>> ]
"30064771081" [label = <(input,context-&gt;input(4))<SUB>7</SUB>> ]
"68719476745" [label = <(IDENTIFIER,context,context-&gt;input(4))<SUB>7</SUB>> ]
"90194313220" [label = <(LITERAL,4,context-&gt;input(4))<SUB>7</SUB>> ]
"94489280517" [label = <(LOCAL,const Tensor* side_input: Tensor*)<SUB>8</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,* side_input = has_side_input_ ? &amp;context-&gt;inpu...)<SUB>8</SUB>> ]
"68719476746" [label = <(IDENTIFIER,side_input,* side_input = has_side_input_ ? &amp;context-&gt;inpu...)<SUB>8</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.conditional,has_side_input_ ? &amp;context-&gt;input(5) : nullptr)<SUB>8</SUB>> ]
"68719476747" [label = <(IDENTIFIER,has_side_input_,has_side_input_ ? &amp;context-&gt;input(5) : nullptr)<SUB>8</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.addressOf,&amp;context-&gt;input(5))<SUB>8</SUB>> ]
"30064771085" [label = <(input,context-&gt;input(5))<SUB>8</SUB>> ]
"68719476748" [label = <(IDENTIFIER,context,context-&gt;input(5))<SUB>8</SUB>> ]
"90194313221" [label = <(LITERAL,5,context-&gt;input(5))<SUB>8</SUB>> ]
"90194313222" [label = <(LITERAL,nullptr,has_side_input_ ? &amp;context-&gt;input(5) : nullptr)<SUB>8</SUB>> ]
"30064771086" [label = <(OP_REQUIRES,OP_REQUIRES(context, x.dims() == 4 || x.dims() ...)<SUB>10</SUB>> ]
"68719476749" [label = <(IDENTIFIER,context,OP_REQUIRES(context, x.dims() == 4 || x.dims() ...)<SUB>10</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.logicalOr,x.dims() == 4 || x.dims() == 5)<SUB>10</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.equals,x.dims() == 4)<SUB>10</SUB>> ]
"30064771089" [label = <(dims,x.dims())<SUB>10</SUB>> ]
"68719476750" [label = <(IDENTIFIER,x,x.dims())<SUB>10</SUB>> ]
"90194313223" [label = <(LITERAL,4,x.dims() == 4)<SUB>10</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.equals,x.dims() == 5)<SUB>10</SUB>> ]
"30064771091" [label = <(dims,x.dims())<SUB>10</SUB>> ]
"68719476751" [label = <(IDENTIFIER,x,x.dims())<SUB>10</SUB>> ]
"90194313224" [label = <(LITERAL,5,x.dims() == 5)<SUB>10</SUB>> ]
"30064771092" [label = <(InvalidArgument,errors::InvalidArgument(&quot;input must be 4 or 5-d...)<SUB>11</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;input must be 4 or 5-dimensional&quot;,errors::InvalidArgument(&quot;input must be 4 or 5-d...)<SUB>11</SUB>> ]
"30064771093" [label = <(DebugString,x.shape().DebugString())<SUB>12</SUB>> ]
"30064771094" [label = <(shape,x.shape())<SUB>12</SUB>> ]
"68719476752" [label = <(IDENTIFIER,x,x.shape())<SUB>12</SUB>> ]
"30064771095" [label = <(OP_REQUIRES,OP_REQUIRES(context, scale.dims() == 1,
       ...)<SUB>13</SUB>> ]
"68719476753" [label = <(IDENTIFIER,context,OP_REQUIRES(context, scale.dims() == 1,
       ...)<SUB>13</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.equals,scale.dims() == 1)<SUB>13</SUB>> ]
"30064771097" [label = <(dims,scale.dims())<SUB>13</SUB>> ]
"68719476754" [label = <(IDENTIFIER,scale,scale.dims())<SUB>13</SUB>> ]
"90194313226" [label = <(LITERAL,1,scale.dims() == 1)<SUB>13</SUB>> ]
"30064771098" [label = <(InvalidArgument,errors::InvalidArgument(&quot;scale must be 1-dimens...)<SUB>14</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;scale must be 1-dimensional&quot;,errors::InvalidArgument(&quot;scale must be 1-dimens...)<SUB>14</SUB>> ]
"30064771099" [label = <(DebugString,scale.shape().DebugString())<SUB>15</SUB>> ]
"30064771100" [label = <(shape,scale.shape())<SUB>15</SUB>> ]
"68719476755" [label = <(IDENTIFIER,scale,scale.shape())<SUB>15</SUB>> ]
"30064771101" [label = <(OP_REQUIRES,OP_REQUIRES(context, offset.dims() == 1,
      ...)<SUB>16</SUB>> ]
"68719476756" [label = <(IDENTIFIER,context,OP_REQUIRES(context, offset.dims() == 1,
      ...)<SUB>16</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.equals,offset.dims() == 1)<SUB>16</SUB>> ]
"30064771103" [label = <(dims,offset.dims())<SUB>16</SUB>> ]
"68719476757" [label = <(IDENTIFIER,offset,offset.dims())<SUB>16</SUB>> ]
"90194313228" [label = <(LITERAL,1,offset.dims() == 1)<SUB>16</SUB>> ]
"30064771104" [label = <(InvalidArgument,errors::InvalidArgument(&quot;offset must be 1-dimen...)<SUB>17</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;offset must be 1-dimensional&quot;,errors::InvalidArgument(&quot;offset must be 1-dimen...)<SUB>17</SUB>> ]
"30064771105" [label = <(DebugString,offset.shape().DebugString())<SUB>18</SUB>> ]
"30064771106" [label = <(shape,offset.shape())<SUB>18</SUB>> ]
"68719476758" [label = <(IDENTIFIER,offset,offset.shape())<SUB>18</SUB>> ]
"30064771107" [label = <(OP_REQUIRES,OP_REQUIRES(context, estimated_mean.dims() == 1...)<SUB>19</SUB>> ]
"68719476759" [label = <(IDENTIFIER,context,OP_REQUIRES(context, estimated_mean.dims() == 1...)<SUB>19</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.equals,estimated_mean.dims() == 1)<SUB>19</SUB>> ]
"30064771109" [label = <(dims,estimated_mean.dims())<SUB>19</SUB>> ]
"68719476760" [label = <(IDENTIFIER,estimated_mean,estimated_mean.dims())<SUB>19</SUB>> ]
"90194313230" [label = <(LITERAL,1,estimated_mean.dims() == 1)<SUB>19</SUB>> ]
"30064771110" [label = <(InvalidArgument,errors::InvalidArgument(&quot;estimated_mean must be...)<SUB>20</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;estimated_mean must be 1-dimensional&quot;,errors::InvalidArgument(&quot;estimated_mean must be...)<SUB>20</SUB>> ]
"30064771111" [label = <(DebugString,estimated_mean.shape().DebugString())<SUB>21</SUB>> ]
"30064771112" [label = <(shape,estimated_mean.shape())<SUB>21</SUB>> ]
"68719476761" [label = <(IDENTIFIER,estimated_mean,estimated_mean.shape())<SUB>21</SUB>> ]
"30064771113" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, estimated_varianc...)<SUB>22</SUB>> ]
"68719476762" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, estimated_varianc...)<SUB>23</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.equals,estimated_variance.dims() == 1)<SUB>23</SUB>> ]
"30064771115" [label = <(dims,estimated_variance.dims())<SUB>23</SUB>> ]
"68719476763" [label = <(IDENTIFIER,estimated_variance,estimated_variance.dims())<SUB>23</SUB>> ]
"90194313232" [label = <(LITERAL,1,estimated_variance.dims() == 1)<SUB>23</SUB>> ]
"30064771116" [label = <(InvalidArgument,errors::InvalidArgument(&quot;estimated_variance mus...)<SUB>24</SUB>> ]
"90194313233" [label = <(LITERAL,&quot;estimated_variance must be 1-dimensional&quot;,errors::InvalidArgument(&quot;estimated_variance mus...)<SUB>24</SUB>> ]
"30064771117" [label = <(DebugString,estimated_variance.shape().DebugString())<SUB>25</SUB>> ]
"30064771118" [label = <(shape,estimated_variance.shape())<SUB>25</SUB>> ]
"68719476764" [label = <(IDENTIFIER,estimated_variance,estimated_variance.shape())<SUB>25</SUB>> ]
"94489280518" [label = <(LOCAL,bool use_reshape: bool)<SUB>26</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.assignment,use_reshape = (x.dims() == 5))<SUB>26</SUB>> ]
"68719476765" [label = <(IDENTIFIER,use_reshape,use_reshape = (x.dims() == 5))<SUB>26</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.equals,x.dims() == 5)<SUB>26</SUB>> ]
"30064771121" [label = <(dims,x.dims())<SUB>26</SUB>> ]
"68719476766" [label = <(IDENTIFIER,x,x.dims())<SUB>26</SUB>> ]
"90194313234" [label = <(LITERAL,5,x.dims() == 5)<SUB>26</SUB>> ]
"94489280519" [label = <(LOCAL,auto x_shape: auto)<SUB>27</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.assignment,x_shape = x.shape())<SUB>27</SUB>> ]
"68719476767" [label = <(IDENTIFIER,x_shape,x_shape = x.shape())<SUB>27</SUB>> ]
"30064771123" [label = <(shape,x.shape())<SUB>27</SUB>> ]
"68719476768" [label = <(IDENTIFIER,x,x.shape())<SUB>27</SUB>> ]
"94489280520" [label = <(LOCAL,TensorShape dest_shape: TensorShape)<SUB>28</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (use_reshape))<SUB>29</SUB>> ]
"68719476769" [label = <(IDENTIFIER,use_reshape,if (use_reshape))<SUB>29</SUB>> ]
"25769803778" [label = <(BLOCK,{
      const int64 in_batch = GetTensorDim(x, ...,{
      const int64 in_batch = GetTensorDim(x, ...)<SUB>29</SUB>> ]
"94489280521" [label = <(LOCAL,const int64 in_batch: int64)<SUB>30</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assignment,in_batch = GetTensorDim(x, tensor_format_, 'N'))<SUB>30</SUB>> ]
"68719476770" [label = <(IDENTIFIER,in_batch,in_batch = GetTensorDim(x, tensor_format_, 'N'))<SUB>30</SUB>> ]
"30064771125" [label = <(GetTensorDim,GetTensorDim(x, tensor_format_, 'N'))<SUB>30</SUB>> ]
"68719476771" [label = <(IDENTIFIER,x,GetTensorDim(x, tensor_format_, 'N'))<SUB>30</SUB>> ]
"68719476772" [label = <(IDENTIFIER,tensor_format_,GetTensorDim(x, tensor_format_, 'N'))<SUB>30</SUB>> ]
"90194313235" [label = <(LITERAL,'N',GetTensorDim(x, tensor_format_, 'N'))<SUB>30</SUB>> ]
"94489280522" [label = <(LOCAL,int64 in_planes: int64)<SUB>31</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.assignment,in_planes = GetTensorDim(x, tensor_format_, '0'))<SUB>31</SUB>> ]
"68719476773" [label = <(IDENTIFIER,in_planes,in_planes = GetTensorDim(x, tensor_format_, '0'))<SUB>31</SUB>> ]
"30064771127" [label = <(GetTensorDim,GetTensorDim(x, tensor_format_, '0'))<SUB>31</SUB>> ]
"68719476774" [label = <(IDENTIFIER,x,GetTensorDim(x, tensor_format_, '0'))<SUB>31</SUB>> ]
"68719476775" [label = <(IDENTIFIER,tensor_format_,GetTensorDim(x, tensor_format_, '0'))<SUB>31</SUB>> ]
"90194313236" [label = <(LITERAL,'0',GetTensorDim(x, tensor_format_, '0'))<SUB>31</SUB>> ]
"94489280523" [label = <(LOCAL,int64 in_rows: int64)<SUB>32</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.assignment,in_rows = GetTensorDim(x, tensor_format_, '1'))<SUB>32</SUB>> ]
"68719476776" [label = <(IDENTIFIER,in_rows,in_rows = GetTensorDim(x, tensor_format_, '1'))<SUB>32</SUB>> ]
"30064771129" [label = <(GetTensorDim,GetTensorDim(x, tensor_format_, '1'))<SUB>32</SUB>> ]
"68719476777" [label = <(IDENTIFIER,x,GetTensorDim(x, tensor_format_, '1'))<SUB>32</SUB>> ]
"68719476778" [label = <(IDENTIFIER,tensor_format_,GetTensorDim(x, tensor_format_, '1'))<SUB>32</SUB>> ]
"90194313237" [label = <(LITERAL,'1',GetTensorDim(x, tensor_format_, '1'))<SUB>32</SUB>> ]
"94489280524" [label = <(LOCAL,int64 in_cols: int64)<SUB>33</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.assignment,in_cols = GetTensorDim(x, tensor_format_, '2'))<SUB>33</SUB>> ]
"68719476779" [label = <(IDENTIFIER,in_cols,in_cols = GetTensorDim(x, tensor_format_, '2'))<SUB>33</SUB>> ]
"30064771131" [label = <(GetTensorDim,GetTensorDim(x, tensor_format_, '2'))<SUB>33</SUB>> ]
"68719476780" [label = <(IDENTIFIER,x,GetTensorDim(x, tensor_format_, '2'))<SUB>33</SUB>> ]
"68719476781" [label = <(IDENTIFIER,tensor_format_,GetTensorDim(x, tensor_format_, '2'))<SUB>33</SUB>> ]
"90194313238" [label = <(LITERAL,'2',GetTensorDim(x, tensor_format_, '2'))<SUB>33</SUB>> ]
"94489280525" [label = <(LOCAL,const int64 in_depth: int64)<SUB>34</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.assignment,in_depth = GetTensorDim(x, tensor_format_, 'C'))<SUB>34</SUB>> ]
"68719476782" [label = <(IDENTIFIER,in_depth,in_depth = GetTensorDim(x, tensor_format_, 'C'))<SUB>34</SUB>> ]
"30064771133" [label = <(GetTensorDim,GetTensorDim(x, tensor_format_, 'C'))<SUB>34</SUB>> ]
"68719476783" [label = <(IDENTIFIER,x,GetTensorDim(x, tensor_format_, 'C'))<SUB>34</SUB>> ]
"68719476784" [label = <(IDENTIFIER,tensor_format_,GetTensorDim(x, tensor_format_, 'C'))<SUB>34</SUB>> ]
"90194313239" [label = <(LITERAL,'C',GetTensorDim(x, tensor_format_, 'C'))<SUB>34</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.assignment,dest_shape = ShapeFromFormat(tensor_format_, in...)<SUB>35</SUB>> ]
"68719476785" [label = <(IDENTIFIER,dest_shape,dest_shape = ShapeFromFormat(tensor_format_, in...)<SUB>35</SUB>> ]
"30064771135" [label = <(ShapeFromFormat,ShapeFromFormat(tensor_format_, in_batch,
     ...)<SUB>35</SUB>> ]
"68719476786" [label = <(IDENTIFIER,tensor_format_,ShapeFromFormat(tensor_format_, in_batch,
     ...)<SUB>35</SUB>> ]
"68719476787" [label = <(IDENTIFIER,in_batch,ShapeFromFormat(tensor_format_, in_batch,
     ...)<SUB>35</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.arrayInitializer,{{in_planes, in_rows * in_cols}})<SUB>36</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.arrayInitializer,{in_planes, in_rows * in_cols})<SUB>36</SUB>> ]
"68719476788" [label = <(IDENTIFIER,in_planes,{in_planes, in_rows * in_cols})<SUB>36</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.multiplication,in_rows * in_cols)<SUB>36</SUB>> ]
"68719476789" [label = <(IDENTIFIER,in_rows,in_rows * in_cols)<SUB>36</SUB>> ]
"68719476790" [label = <(IDENTIFIER,in_cols,in_rows * in_cols)<SUB>36</SUB>> ]
"68719476791" [label = <(IDENTIFIER,in_depth,ShapeFromFormat(tensor_format_, in_batch,
     ...)<SUB>36</SUB>> ]
"30064771139" [label = <(OP_REQUIRES,OP_REQUIRES(context, x.CopyFrom(x, dest_shape),...)<SUB>37</SUB>> ]
"68719476792" [label = <(IDENTIFIER,context,OP_REQUIRES(context, x.CopyFrom(x, dest_shape),...)<SUB>37</SUB>> ]
"30064771140" [label = <(CopyFrom,x.CopyFrom(x, dest_shape))<SUB>37</SUB>> ]
"68719476793" [label = <(IDENTIFIER,x,x.CopyFrom(x, dest_shape))<SUB>37</SUB>> ]
"68719476794" [label = <(IDENTIFIER,x,x.CopyFrom(x, dest_shape))<SUB>37</SUB>> ]
"68719476795" [label = <(IDENTIFIER,dest_shape,x.CopyFrom(x, dest_shape))<SUB>37</SUB>> ]
"30064771141" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Error during tensor co...)<SUB>38</SUB>> ]
"90194313240" [label = <(LITERAL,&quot;Error during tensor copy.&quot;,errors::InvalidArgument(&quot;Error during tensor co...)<SUB>38</SUB>> ]
"94489280526" [label = <(LOCAL,const auto num_channels: auto)<SUB>41</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.assignment,num_channels = GetTensorDim(x, tensor_format_, ...)<SUB>41</SUB>> ]
"68719476796" [label = <(IDENTIFIER,num_channels,num_channels = GetTensorDim(x, tensor_format_, ...)<SUB>41</SUB>> ]
"30064771143" [label = <(GetTensorDim,GetTensorDim(x, tensor_format_, 'C'))<SUB>41</SUB>> ]
"68719476797" [label = <(IDENTIFIER,x,GetTensorDim(x, tensor_format_, 'C'))<SUB>41</SUB>> ]
"68719476798" [label = <(IDENTIFIER,tensor_format_,GetTensorDim(x, tensor_format_, 'C'))<SUB>41</SUB>> ]
"90194313241" [label = <(LITERAL,'C',GetTensorDim(x, tensor_format_, 'C'))<SUB>41</SUB>> ]
"30064771144" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, scale.NumElements...)<SUB>42</SUB>> ]
"68719476799" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, scale.NumElements...)<SUB>43</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.equals,scale.NumElements() == num_channels)<SUB>43</SUB>> ]
"30064771146" [label = <(NumElements,scale.NumElements())<SUB>43</SUB>> ]
"68719476800" [label = <(IDENTIFIER,scale,scale.NumElements())<SUB>43</SUB>> ]
"68719476801" [label = <(IDENTIFIER,num_channels,scale.NumElements() == num_channels)<SUB>43</SUB>> ]
"30064771147" [label = <(InvalidArgument,errors::InvalidArgument(&quot;scale must have the sa...)<SUB>44</SUB>> ]
"90194313242" [label = <(LITERAL,&quot;scale must have the same number of elements &quot;
...,errors::InvalidArgument(&quot;scale must have the sa...)<SUB>44</SUB>> ]
"30064771148" [label = <(NumElements,scale.NumElements())<SUB>46</SUB>> ]
"68719476802" [label = <(IDENTIFIER,scale,scale.NumElements())<SUB>46</SUB>> ]
"90194313243" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(&quot;scale must have the sa...)<SUB>46</SUB>> ]
"68719476803" [label = <(IDENTIFIER,num_channels,errors::InvalidArgument(&quot;scale must have the sa...)<SUB>46</SUB>> ]
"30064771149" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, offset.NumElement...)<SUB>47</SUB>> ]
"68719476804" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, offset.NumElement...)<SUB>48</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.equals,offset.NumElements() == num_channels)<SUB>48</SUB>> ]
"30064771151" [label = <(NumElements,offset.NumElements())<SUB>48</SUB>> ]
"68719476805" [label = <(IDENTIFIER,offset,offset.NumElements())<SUB>48</SUB>> ]
"68719476806" [label = <(IDENTIFIER,num_channels,offset.NumElements() == num_channels)<SUB>48</SUB>> ]
"30064771152" [label = <(InvalidArgument,errors::InvalidArgument(&quot;offset must have the s...)<SUB>49</SUB>> ]
"90194313244" [label = <(LITERAL,&quot;offset must have the same number of elements &quot;...,errors::InvalidArgument(&quot;offset must have the s...)<SUB>49</SUB>> ]
"30064771153" [label = <(NumElements,offset.NumElements())<SUB>51</SUB>> ]
"68719476807" [label = <(IDENTIFIER,offset,offset.NumElements())<SUB>51</SUB>> ]
"90194313245" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(&quot;offset must have the s...)<SUB>51</SUB>> ]
"68719476808" [label = <(IDENTIFIER,num_channels,errors::InvalidArgument(&quot;offset must have the s...)<SUB>51</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (estimated_mean.NumElements() != 0))<SUB>52</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.notEquals,estimated_mean.NumElements() != 0)<SUB>52</SUB>> ]
"30064771155" [label = <(NumElements,estimated_mean.NumElements())<SUB>52</SUB>> ]
"68719476809" [label = <(IDENTIFIER,estimated_mean,estimated_mean.NumElements())<SUB>52</SUB>> ]
"90194313246" [label = <(LITERAL,0,estimated_mean.NumElements() != 0)<SUB>52</SUB>> ]
"25769803779" [label = <(BLOCK,{
      OP_REQUIRES(context, estimated_mean.Num...,{
      OP_REQUIRES(context, estimated_mean.Num...)<SUB>52</SUB>> ]
"30064771156" [label = <(OP_REQUIRES,OP_REQUIRES(context, estimated_mean.NumElements...)<SUB>53</SUB>> ]
"68719476810" [label = <(IDENTIFIER,context,OP_REQUIRES(context, estimated_mean.NumElements...)<SUB>53</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.equals,estimated_mean.NumElements() == num_channels)<SUB>53</SUB>> ]
"30064771158" [label = <(NumElements,estimated_mean.NumElements())<SUB>53</SUB>> ]
"68719476811" [label = <(IDENTIFIER,estimated_mean,estimated_mean.NumElements())<SUB>53</SUB>> ]
"68719476812" [label = <(IDENTIFIER,num_channels,estimated_mean.NumElements() == num_channels)<SUB>53</SUB>> ]
"30064771159" [label = <(InvalidArgument,errors::InvalidArgument(
                      ...)<SUB>54</SUB>> ]
"90194313247" [label = <(LITERAL,&quot;mean must be empty or have the same number of ...,errors::InvalidArgument(
                      ...)<SUB>55</SUB>> ]
"30064771160" [label = <(NumElements,estimated_mean.NumElements())<SUB>57</SUB>> ]
"68719476813" [label = <(IDENTIFIER,estimated_mean,estimated_mean.NumElements())<SUB>57</SUB>> ]
"90194313248" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(
                      ...)<SUB>57</SUB>> ]
"68719476814" [label = <(IDENTIFIER,num_channels,errors::InvalidArgument(
                      ...)<SUB>57</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (estimated_variance.NumElements() != 0))<SUB>59</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.notEquals,estimated_variance.NumElements() != 0)<SUB>59</SUB>> ]
"30064771162" [label = <(NumElements,estimated_variance.NumElements())<SUB>59</SUB>> ]
"68719476815" [label = <(IDENTIFIER,estimated_variance,estimated_variance.NumElements())<SUB>59</SUB>> ]
"90194313249" [label = <(LITERAL,0,estimated_variance.NumElements() != 0)<SUB>59</SUB>> ]
"25769803780" [label = <(BLOCK,{
      OP_REQUIRES(context, estimated_variance...,{
      OP_REQUIRES(context, estimated_variance...)<SUB>59</SUB>> ]
"30064771163" [label = <(OP_REQUIRES,OP_REQUIRES(context, estimated_variance.NumElem...)<SUB>60</SUB>> ]
"68719476816" [label = <(IDENTIFIER,context,OP_REQUIRES(context, estimated_variance.NumElem...)<SUB>60</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.equals,estimated_variance.NumElements() == num_channels)<SUB>60</SUB>> ]
"30064771165" [label = <(NumElements,estimated_variance.NumElements())<SUB>60</SUB>> ]
"68719476817" [label = <(IDENTIFIER,estimated_variance,estimated_variance.NumElements())<SUB>60</SUB>> ]
"68719476818" [label = <(IDENTIFIER,num_channels,estimated_variance.NumElements() == num_channels)<SUB>60</SUB>> ]
"30064771166" [label = <(InvalidArgument,errors::InvalidArgument(
                      ...)<SUB>61</SUB>> ]
"90194313250" [label = <(LITERAL,&quot;variance must be empty or have the same number...,errors::InvalidArgument(
                      ...)<SUB>62</SUB>> ]
"30064771167" [label = <(NumElements,estimated_variance.NumElements())<SUB>64</SUB>> ]
"68719476819" [label = <(IDENTIFIER,estimated_variance,estimated_variance.NumElements())<SUB>64</SUB>> ]
"90194313251" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(
                      ...)<SUB>64</SUB>> ]
"68719476820" [label = <(IDENTIFIER,num_channels,errors::InvalidArgument(
                      ...)<SUB>64</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (has_side_input_))<SUB>67</SUB>> ]
"68719476821" [label = <(IDENTIFIER,has_side_input_,if (has_side_input_))<SUB>67</SUB>> ]
"25769803781" [label = <(BLOCK,{
      OP_REQUIRES(context, side_input-&gt;shape(...,{
      OP_REQUIRES(context, side_input-&gt;shape(...)<SUB>67</SUB>> ]
"30064771168" [label = <(OP_REQUIRES,OP_REQUIRES(context, side_input-&gt;shape() == x.s...)<SUB>68</SUB>> ]
"68719476822" [label = <(IDENTIFIER,context,OP_REQUIRES(context, side_input-&gt;shape() == x.s...)<SUB>68</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.equals,side_input-&gt;shape() == x.shape())<SUB>68</SUB>> ]
"30064771170" [label = <(shape,side_input-&gt;shape())<SUB>68</SUB>> ]
"68719476823" [label = <(IDENTIFIER,side_input,side_input-&gt;shape())<SUB>68</SUB>> ]
"30064771171" [label = <(shape,x.shape())<SUB>68</SUB>> ]
"68719476824" [label = <(IDENTIFIER,x,x.shape())<SUB>68</SUB>> ]
"30064771172" [label = <(InvalidArgument,errors::InvalidArgument(
                      ...)<SUB>69</SUB>> ]
"90194313252" [label = <(LITERAL,&quot;side_input shape must be equal to input shape: &quot;,errors::InvalidArgument(
                      ...)<SUB>70</SUB>> ]
"30064771173" [label = <(DebugString,side_input-&gt;shape().DebugString())<SUB>71</SUB>> ]
"30064771174" [label = <(shape,side_input-&gt;shape())<SUB>71</SUB>> ]
"68719476825" [label = <(IDENTIFIER,side_input,side_input-&gt;shape())<SUB>71</SUB>> ]
"90194313253" [label = <(LITERAL,&quot; != &quot;,errors::InvalidArgument(
                      ...)<SUB>72</SUB>> ]
"30064771175" [label = <(DebugString,x.shape().DebugString())<SUB>72</SUB>> ]
"30064771176" [label = <(shape,x.shape())<SUB>72</SUB>> ]
"68719476826" [label = <(IDENTIFIER,x,x.shape())<SUB>72</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (activation_mode_ != FbnActivationMode::kIdentity))<SUB>75</SUB>> ]
"30064771177" [label = <(&lt;operator&gt;.notEquals,activation_mode_ != FbnActivationMode::kIdentity)<SUB>75</SUB>> ]
"68719476827" [label = <(IDENTIFIER,activation_mode_,activation_mode_ != FbnActivationMode::kIdentity)<SUB>75</SUB>> ]
"30064771178" [label = <(&lt;operator&gt;.fieldAccess,FbnActivationMode::kIdentity)<SUB>75</SUB>> ]
"68719476828" [label = <(IDENTIFIER,FbnActivationMode,activation_mode_ != FbnActivationMode::kIdentity)<SUB>75</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,kIdentity,kIdentity)<SUB>75</SUB>> ]
"25769803782" [label = <(BLOCK,{
      // NOTE(ezhulenev): This requirement is...,{
      // NOTE(ezhulenev): This requirement is...)<SUB>75</SUB>> ]
"30064771179" [label = <(OP_REQUIRES,OP_REQUIRES(
          context, !is_training_ |...)<SUB>78</SUB>> ]
"68719476829" [label = <(IDENTIFIER,context,OP_REQUIRES(
          context, !is_training_ |...)<SUB>79</SUB>> ]
"30064771180" [label = <(&lt;operator&gt;.logicalOr,!is_training_ || num_channels % 4 == 0)<SUB>79</SUB>> ]
"30064771181" [label = <(&lt;operator&gt;.logicalNot,!is_training_)<SUB>79</SUB>> ]
"68719476830" [label = <(IDENTIFIER,is_training_,!is_training_)<SUB>79</SUB>> ]
"30064771182" [label = <(&lt;operator&gt;.equals,num_channels % 4 == 0)<SUB>79</SUB>> ]
"30064771183" [label = <(&lt;operator&gt;.modulo,num_channels % 4)<SUB>79</SUB>> ]
"68719476831" [label = <(IDENTIFIER,num_channels,num_channels % 4)<SUB>79</SUB>> ]
"90194313254" [label = <(LITERAL,4,num_channels % 4)<SUB>79</SUB>> ]
"90194313255" [label = <(LITERAL,0,num_channels % 4 == 0)<SUB>79</SUB>> ]
"30064771184" [label = <(InvalidArgument,errors::InvalidArgument(&quot;FusedBatchNorm with ac...)<SUB>80</SUB>> ]
"90194313256" [label = <(LITERAL,&quot;FusedBatchNorm with activation requires &quot;
    ...,errors::InvalidArgument(&quot;FusedBatchNorm with ac...)<SUB>80</SUB>> ]
"94489280527" [label = <(LOCAL,Tensor* y: Tensor*)<SUB>84</SUB>> ]
"30064771185" [label = <(&lt;operator&gt;.assignment,* y = nullptr)<SUB>84</SUB>> ]
"68719476832" [label = <(IDENTIFIER,y,* y = nullptr)<SUB>84</SUB>> ]
"90194313257" [label = <(LITERAL,nullptr,* y = nullptr)<SUB>84</SUB>> ]
"94489280528" [label = <(LOCAL,auto alloc_shape: auto)<SUB>85</SUB>> ]
"30064771186" [label = <(&lt;operator&gt;.assignment,alloc_shape = use_reshape ? dest_shape : x_shape)<SUB>85</SUB>> ]
"68719476833" [label = <(IDENTIFIER,alloc_shape,alloc_shape = use_reshape ? dest_shape : x_shape)<SUB>85</SUB>> ]
"30064771187" [label = <(&lt;operator&gt;.conditional,use_reshape ? dest_shape : x_shape)<SUB>85</SUB>> ]
"68719476834" [label = <(IDENTIFIER,use_reshape,use_reshape ? dest_shape : x_shape)<SUB>85</SUB>> ]
"68719476835" [label = <(IDENTIFIER,dest_shape,use_reshape ? dest_shape : x_shape)<SUB>85</SUB>> ]
"68719476836" [label = <(IDENTIFIER,x_shape,use_reshape ? dest_shape : x_shape)<SUB>85</SUB>> ]
"30064771188" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, context-&gt;forward_input_...)<SUB>86</SUB>> ]
"68719476837" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, context-&gt;forward_input_...)<SUB>86</SUB>> ]
"30064771189" [label = <(forward_input_or_allocate_output,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>86</SUB>> ]
"68719476838" [label = <(IDENTIFIER,context,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>86</SUB>> ]
"30064771190" [label = <(&lt;operator&gt;.arrayInitializer,{0})<SUB>87</SUB>> ]
"90194313258" [label = <(LITERAL,0,{0})<SUB>87</SUB>> ]
"90194313259" [label = <(LITERAL,0,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>87</SUB>> ]
"68719476839" [label = <(IDENTIFIER,alloc_shape,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>87</SUB>> ]
"30064771191" [label = <(&lt;operator&gt;.addressOf,&amp;y)<SUB>87</SUB>> ]
"68719476840" [label = <(IDENTIFIER,y,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>87</SUB>> ]
"94489280529" [label = <(LOCAL,Tensor* batch_mean: Tensor*)<SUB>89</SUB>> ]
"30064771192" [label = <(&lt;operator&gt;.assignment,* batch_mean = nullptr)<SUB>89</SUB>> ]
"68719476841" [label = <(IDENTIFIER,batch_mean,* batch_mean = nullptr)<SUB>89</SUB>> ]
"90194313260" [label = <(LITERAL,nullptr,* batch_mean = nullptr)<SUB>89</SUB>> ]
"30064771193" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, context-&gt;forward_input_...)<SUB>90</SUB>> ]
"68719476842" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, context-&gt;forward_input_...)<SUB>90</SUB>> ]
"30064771194" [label = <(forward_input_or_allocate_output,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>90</SUB>> ]
"68719476843" [label = <(IDENTIFIER,context,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>90</SUB>> ]
"30064771195" [label = <(&lt;operator&gt;.arrayInitializer,{3})<SUB>91</SUB>> ]
"90194313261" [label = <(LITERAL,3,{3})<SUB>91</SUB>> ]
"90194313262" [label = <(LITERAL,1,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>91</SUB>> ]
"30064771196" [label = <(shape,scale.shape())<SUB>91</SUB>> ]
"68719476844" [label = <(IDENTIFIER,scale,scale.shape())<SUB>91</SUB>> ]
"30064771197" [label = <(&lt;operator&gt;.addressOf,&amp;batch_mean)<SUB>91</SUB>> ]
"68719476845" [label = <(IDENTIFIER,batch_mean,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>91</SUB>> ]
"94489280530" [label = <(LOCAL,Tensor* batch_var: Tensor*)<SUB>92</SUB>> ]
"30064771198" [label = <(&lt;operator&gt;.assignment,* batch_var = nullptr)<SUB>92</SUB>> ]
"68719476846" [label = <(IDENTIFIER,batch_var,* batch_var = nullptr)<SUB>92</SUB>> ]
"90194313263" [label = <(LITERAL,nullptr,* batch_var = nullptr)<SUB>92</SUB>> ]
"30064771199" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, context-&gt;forward_input_...)<SUB>93</SUB>> ]
"68719476847" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, context-&gt;forward_input_...)<SUB>93</SUB>> ]
"30064771200" [label = <(forward_input_or_allocate_output,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>93</SUB>> ]
"68719476848" [label = <(IDENTIFIER,context,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>93</SUB>> ]
"30064771201" [label = <(&lt;operator&gt;.arrayInitializer,{4})<SUB>94</SUB>> ]
"90194313264" [label = <(LITERAL,4,{4})<SUB>94</SUB>> ]
"90194313265" [label = <(LITERAL,2,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>94</SUB>> ]
"30064771202" [label = <(shape,scale.shape())<SUB>94</SUB>> ]
"68719476849" [label = <(IDENTIFIER,scale,scale.shape())<SUB>94</SUB>> ]
"30064771203" [label = <(&lt;operator&gt;.addressOf,&amp;batch_var)<SUB>94</SUB>> ]
"68719476850" [label = <(IDENTIFIER,batch_var,context-&gt;forward_input_or_allocate_output(
    ...)<SUB>94</SUB>> ]
"94489280531" [label = <(LOCAL,Tensor* saved_mean: Tensor*)<SUB>95</SUB>> ]
"30064771204" [label = <(&lt;operator&gt;.assignment,* saved_mean = nullptr)<SUB>95</SUB>> ]
"68719476851" [label = <(IDENTIFIER,saved_mean,* saved_mean = nullptr)<SUB>95</SUB>> ]
"90194313266" [label = <(LITERAL,nullptr,* saved_mean = nullptr)<SUB>95</SUB>> ]
"30064771205" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context,
                   cont...)<SUB>96</SUB>> ]
"68719476852" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context,
                   cont...)<SUB>96</SUB>> ]
"30064771206" [label = <(allocate_output,context-&gt;allocate_output(3, scale.shape(), &amp;sav...)<SUB>97</SUB>> ]
"68719476853" [label = <(IDENTIFIER,context,context-&gt;allocate_output(3, scale.shape(), &amp;sav...)<SUB>97</SUB>> ]
"90194313267" [label = <(LITERAL,3,context-&gt;allocate_output(3, scale.shape(), &amp;sav...)<SUB>97</SUB>> ]
"30064771207" [label = <(shape,scale.shape())<SUB>97</SUB>> ]
"68719476854" [label = <(IDENTIFIER,scale,scale.shape())<SUB>97</SUB>> ]
"30064771208" [label = <(&lt;operator&gt;.addressOf,&amp;saved_mean)<SUB>97</SUB>> ]
"68719476855" [label = <(IDENTIFIER,saved_mean,context-&gt;allocate_output(3, scale.shape(), &amp;sav...)<SUB>97</SUB>> ]
"94489280532" [label = <(LOCAL,Tensor* saved_maybe_inv_var: Tensor*)<SUB>98</SUB>> ]
"30064771209" [label = <(&lt;operator&gt;.assignment,* saved_maybe_inv_var = nullptr)<SUB>98</SUB>> ]
"68719476856" [label = <(IDENTIFIER,saved_maybe_inv_var,* saved_maybe_inv_var = nullptr)<SUB>98</SUB>> ]
"90194313268" [label = <(LITERAL,nullptr,* saved_maybe_inv_var = nullptr)<SUB>98</SUB>> ]
"30064771210" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, context-&gt;allocate_outpu...)<SUB>99</SUB>> ]
"68719476857" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, context-&gt;allocate_outpu...)<SUB>99</SUB>> ]
"30064771211" [label = <(allocate_output,context-&gt;allocate_output(4, scale.shape(),
    ...)<SUB>99</SUB>> ]
"68719476858" [label = <(IDENTIFIER,context,context-&gt;allocate_output(4, scale.shape(),
    ...)<SUB>99</SUB>> ]
"90194313269" [label = <(LITERAL,4,context-&gt;allocate_output(4, scale.shape(),
    ...)<SUB>99</SUB>> ]
"30064771212" [label = <(shape,scale.shape())<SUB>99</SUB>> ]
"68719476859" [label = <(IDENTIFIER,scale,scale.shape())<SUB>99</SUB>> ]
"30064771213" [label = <(&lt;operator&gt;.addressOf,&amp;saved_maybe_inv_var)<SUB>100</SUB>> ]
"68719476860" [label = <(IDENTIFIER,saved_maybe_inv_var,context-&gt;allocate_output(4, scale.shape(),
    ...)<SUB>100</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (is_training_))<SUB>102</SUB>> ]
"68719476861" [label = <(IDENTIFIER,is_training_,if (is_training_))<SUB>102</SUB>> ]
"25769803783" [label = <(BLOCK,{
      functor::FusedBatchNorm&lt;Device, T, U, t...,{
      functor::FusedBatchNorm&lt;Device, T, U, t...)<SUB>102</SUB>> ]
"30064771214" [label = <(&lt;operator&gt;(),functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>103</SUB>> ]
"30064771215" [label = <(FusedBatchNorm&lt;Device, T, U, true&gt;,functor::FusedBatchNorm&lt;Device, T, U, true&gt;())<SUB>103</SUB>> ]
"68719476862" [label = <(IDENTIFIER,context,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>104</SUB>> ]
"68719476863" [label = <(IDENTIFIER,x,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>104</SUB>> ]
"68719476864" [label = <(IDENTIFIER,scale,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>104</SUB>> ]
"68719476865" [label = <(IDENTIFIER,offset,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>104</SUB>> ]
"68719476866" [label = <(IDENTIFIER,estimated_mean,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>104</SUB>> ]
"68719476867" [label = <(IDENTIFIER,estimated_variance,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>104</SUB>> ]
"68719476868" [label = <(IDENTIFIER,side_input,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>105</SUB>> ]
"68719476869" [label = <(IDENTIFIER,epsilon_,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>105</SUB>> ]
"68719476870" [label = <(IDENTIFIER,exponential_avg_factor_,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>105</SUB>> ]
"68719476871" [label = <(IDENTIFIER,activation_mode_,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>105</SUB>> ]
"68719476872" [label = <(IDENTIFIER,y,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>105</SUB>> ]
"68719476873" [label = <(IDENTIFIER,batch_mean,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>106</SUB>> ]
"68719476874" [label = <(IDENTIFIER,batch_var,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>106</SUB>> ]
"68719476875" [label = <(IDENTIFIER,saved_mean,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>106</SUB>> ]
"68719476876" [label = <(IDENTIFIER,saved_maybe_inv_var,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>106</SUB>> ]
"68719476877" [label = <(IDENTIFIER,tensor_format_,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>107</SUB>> ]
"68719476878" [label = <(IDENTIFIER,use_reserved_space,functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
...)<SUB>107</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>108</SUB>> ]
"25769803784" [label = <(BLOCK,{
      functor::FusedBatchNorm&lt;Device, T, U, f...,{
      functor::FusedBatchNorm&lt;Device, T, U, f...)<SUB>108</SUB>> ]
"30064771216" [label = <(&lt;operator&gt;(),functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>109</SUB>> ]
"30064771217" [label = <(FusedBatchNorm&lt;Device, T, U, false&gt;,functor::FusedBatchNorm&lt;Device, T, U, false&gt;())<SUB>109</SUB>> ]
"68719476879" [label = <(IDENTIFIER,context,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>110</SUB>> ]
"68719476880" [label = <(IDENTIFIER,x,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>110</SUB>> ]
"68719476881" [label = <(IDENTIFIER,scale,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>110</SUB>> ]
"68719476882" [label = <(IDENTIFIER,offset,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>110</SUB>> ]
"68719476883" [label = <(IDENTIFIER,estimated_mean,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>110</SUB>> ]
"68719476884" [label = <(IDENTIFIER,estimated_variance,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>110</SUB>> ]
"68719476885" [label = <(IDENTIFIER,side_input,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>111</SUB>> ]
"68719476886" [label = <(IDENTIFIER,epsilon_,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>111</SUB>> ]
"68719476887" [label = <(IDENTIFIER,exponential_avg_factor_,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>111</SUB>> ]
"68719476888" [label = <(IDENTIFIER,activation_mode_,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>111</SUB>> ]
"68719476889" [label = <(IDENTIFIER,y,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>111</SUB>> ]
"68719476890" [label = <(IDENTIFIER,batch_mean,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>112</SUB>> ]
"68719476891" [label = <(IDENTIFIER,batch_var,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>112</SUB>> ]
"68719476892" [label = <(IDENTIFIER,saved_mean,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>112</SUB>> ]
"68719476893" [label = <(IDENTIFIER,saved_maybe_inv_var,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>112</SUB>> ]
"68719476894" [label = <(IDENTIFIER,tensor_format_,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>113</SUB>> ]
"68719476895" [label = <(IDENTIFIER,use_reserved_space,functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(...)<SUB>113</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (use_reshape))<SUB>115</SUB>> ]
"68719476896" [label = <(IDENTIFIER,use_reshape,if (use_reshape))<SUB>115</SUB>> ]
"25769803785" [label = <(BLOCK,{
      OP_REQUIRES(context, y-&gt;CopyFrom(*y, x_...,{
      OP_REQUIRES(context, y-&gt;CopyFrom(*y, x_...)<SUB>115</SUB>> ]
"30064771218" [label = <(OP_REQUIRES,OP_REQUIRES(context, y-&gt;CopyFrom(*y, x_shape),
...)<SUB>116</SUB>> ]
"68719476897" [label = <(IDENTIFIER,context,OP_REQUIRES(context, y-&gt;CopyFrom(*y, x_shape),
...)<SUB>116</SUB>> ]
"30064771219" [label = <(CopyFrom,y-&gt;CopyFrom(*y, x_shape))<SUB>116</SUB>> ]
"68719476898" [label = <(IDENTIFIER,y,y-&gt;CopyFrom(*y, x_shape))<SUB>116</SUB>> ]
"30064771220" [label = <(&lt;operator&gt;.indirection,*y)<SUB>116</SUB>> ]
"68719476899" [label = <(IDENTIFIER,y,y-&gt;CopyFrom(*y, x_shape))<SUB>116</SUB>> ]
"68719476900" [label = <(IDENTIFIER,x_shape,y-&gt;CopyFrom(*y, x_shape))<SUB>116</SUB>> ]
"30064771221" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Error during tensor co...)<SUB>117</SUB>> ]
"90194313270" [label = <(LITERAL,&quot;Error during tensor copy.&quot;,errors::InvalidArgument(&quot;Error during tensor co...)<SUB>117</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "30064771101"  [ label = "AST: "] 
  "25769803777" -> "30064771107"  [ label = "AST: "] 
  "25769803777" -> "30064771113"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771119"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771122"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "30064771142"  [ label = "AST: "] 
  "25769803777" -> "30064771144"  [ label = "AST: "] 
  "25769803777" -> "30064771149"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "94489280527"  [ label = "AST: "] 
  "25769803777" -> "30064771185"  [ label = "AST: "] 
  "25769803777" -> "94489280528"  [ label = "AST: "] 
  "25769803777" -> "30064771186"  [ label = "AST: "] 
  "25769803777" -> "30064771188"  [ label = "AST: "] 
  "25769803777" -> "94489280529"  [ label = "AST: "] 
  "25769803777" -> "30064771192"  [ label = "AST: "] 
  "25769803777" -> "30064771193"  [ label = "AST: "] 
  "25769803777" -> "94489280530"  [ label = "AST: "] 
  "25769803777" -> "30064771198"  [ label = "AST: "] 
  "25769803777" -> "30064771199"  [ label = "AST: "] 
  "25769803777" -> "94489280531"  [ label = "AST: "] 
  "25769803777" -> "30064771204"  [ label = "AST: "] 
  "25769803777" -> "30064771205"  [ label = "AST: "] 
  "25769803777" -> "94489280532"  [ label = "AST: "] 
  "25769803777" -> "30064771209"  [ label = "AST: "] 
  "25769803777" -> "30064771210"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "47244640263"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "90194313220"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "90194313222"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "90194313221"  [ label = "AST: "] 
  "30064771086" -> "68719476749"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "30064771092"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "30064771090"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "90194313223"  [ label = "AST: "] 
  "30064771089" -> "68719476750"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "90194313224"  [ label = "AST: "] 
  "30064771091" -> "68719476751"  [ label = "AST: "] 
  "30064771092" -> "90194313225"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476752"  [ label = "AST: "] 
  "30064771095" -> "68719476753"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "30064771098"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "90194313226"  [ label = "AST: "] 
  "30064771097" -> "68719476754"  [ label = "AST: "] 
  "30064771098" -> "90194313227"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476755"  [ label = "AST: "] 
  "30064771101" -> "68719476756"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "30064771104"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "90194313228"  [ label = "AST: "] 
  "30064771103" -> "68719476757"  [ label = "AST: "] 
  "30064771104" -> "90194313229"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "68719476758"  [ label = "AST: "] 
  "30064771107" -> "68719476759"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "30064771110"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771108" -> "90194313230"  [ label = "AST: "] 
  "30064771109" -> "68719476760"  [ label = "AST: "] 
  "30064771110" -> "90194313231"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "68719476761"  [ label = "AST: "] 
  "30064771113" -> "68719476762"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771113" -> "30064771116"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771114" -> "90194313232"  [ label = "AST: "] 
  "30064771115" -> "68719476763"  [ label = "AST: "] 
  "30064771116" -> "90194313233"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771118" -> "68719476764"  [ label = "AST: "] 
  "30064771119" -> "68719476765"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "90194313234"  [ label = "AST: "] 
  "30064771121" -> "68719476766"  [ label = "AST: "] 
  "30064771122" -> "68719476767"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "68719476768"  [ label = "AST: "] 
  "47244640256" -> "68719476769"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "94489280521"  [ label = "AST: "] 
  "25769803778" -> "30064771124"  [ label = "AST: "] 
  "25769803778" -> "94489280522"  [ label = "AST: "] 
  "25769803778" -> "30064771126"  [ label = "AST: "] 
  "25769803778" -> "94489280523"  [ label = "AST: "] 
  "25769803778" -> "30064771128"  [ label = "AST: "] 
  "25769803778" -> "94489280524"  [ label = "AST: "] 
  "25769803778" -> "30064771130"  [ label = "AST: "] 
  "25769803778" -> "94489280525"  [ label = "AST: "] 
  "25769803778" -> "30064771132"  [ label = "AST: "] 
  "25769803778" -> "30064771134"  [ label = "AST: "] 
  "25769803778" -> "30064771139"  [ label = "AST: "] 
  "30064771124" -> "68719476770"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771125" -> "68719476771"  [ label = "AST: "] 
  "30064771125" -> "68719476772"  [ label = "AST: "] 
  "30064771125" -> "90194313235"  [ label = "AST: "] 
  "30064771126" -> "68719476773"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "68719476774"  [ label = "AST: "] 
  "30064771127" -> "68719476775"  [ label = "AST: "] 
  "30064771127" -> "90194313236"  [ label = "AST: "] 
  "30064771128" -> "68719476776"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "68719476777"  [ label = "AST: "] 
  "30064771129" -> "68719476778"  [ label = "AST: "] 
  "30064771129" -> "90194313237"  [ label = "AST: "] 
  "30064771130" -> "68719476779"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "68719476780"  [ label = "AST: "] 
  "30064771131" -> "68719476781"  [ label = "AST: "] 
  "30064771131" -> "90194313238"  [ label = "AST: "] 
  "30064771132" -> "68719476782"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771133" -> "68719476783"  [ label = "AST: "] 
  "30064771133" -> "68719476784"  [ label = "AST: "] 
  "30064771133" -> "90194313239"  [ label = "AST: "] 
  "30064771134" -> "68719476785"  [ label = "AST: "] 
  "30064771134" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "68719476786"  [ label = "AST: "] 
  "30064771135" -> "68719476787"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771135" -> "68719476791"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771137" -> "68719476788"  [ label = "AST: "] 
  "30064771137" -> "30064771138"  [ label = "AST: "] 
  "30064771138" -> "68719476789"  [ label = "AST: "] 
  "30064771138" -> "68719476790"  [ label = "AST: "] 
  "30064771139" -> "68719476792"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771139" -> "30064771141"  [ label = "AST: "] 
  "30064771140" -> "68719476793"  [ label = "AST: "] 
  "30064771140" -> "68719476794"  [ label = "AST: "] 
  "30064771140" -> "68719476795"  [ label = "AST: "] 
  "30064771141" -> "90194313240"  [ label = "AST: "] 
  "30064771142" -> "68719476796"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771143" -> "68719476797"  [ label = "AST: "] 
  "30064771143" -> "68719476798"  [ label = "AST: "] 
  "30064771143" -> "90194313241"  [ label = "AST: "] 
  "30064771144" -> "68719476799"  [ label = "AST: "] 
  "30064771144" -> "30064771145"  [ label = "AST: "] 
  "30064771144" -> "30064771147"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771145" -> "68719476801"  [ label = "AST: "] 
  "30064771146" -> "68719476800"  [ label = "AST: "] 
  "30064771147" -> "90194313242"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771147" -> "90194313243"  [ label = "AST: "] 
  "30064771147" -> "68719476803"  [ label = "AST: "] 
  "30064771148" -> "68719476802"  [ label = "AST: "] 
  "30064771149" -> "68719476804"  [ label = "AST: "] 
  "30064771149" -> "30064771150"  [ label = "AST: "] 
  "30064771149" -> "30064771152"  [ label = "AST: "] 
  "30064771150" -> "30064771151"  [ label = "AST: "] 
  "30064771150" -> "68719476806"  [ label = "AST: "] 
  "30064771151" -> "68719476805"  [ label = "AST: "] 
  "30064771152" -> "90194313244"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771152" -> "90194313245"  [ label = "AST: "] 
  "30064771152" -> "68719476808"  [ label = "AST: "] 
  "30064771153" -> "68719476807"  [ label = "AST: "] 
  "47244640257" -> "30064771154"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771154" -> "90194313246"  [ label = "AST: "] 
  "30064771155" -> "68719476809"  [ label = "AST: "] 
  "25769803779" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "68719476810"  [ label = "AST: "] 
  "30064771156" -> "30064771157"  [ label = "AST: "] 
  "30064771156" -> "30064771159"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771157" -> "68719476812"  [ label = "AST: "] 
  "30064771158" -> "68719476811"  [ label = "AST: "] 
  "30064771159" -> "90194313247"  [ label = "AST: "] 
  "30064771159" -> "30064771160"  [ label = "AST: "] 
  "30064771159" -> "90194313248"  [ label = "AST: "] 
  "30064771159" -> "68719476814"  [ label = "AST: "] 
  "30064771160" -> "68719476813"  [ label = "AST: "] 
  "47244640258" -> "30064771161"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "90194313249"  [ label = "AST: "] 
  "30064771162" -> "68719476815"  [ label = "AST: "] 
  "25769803780" -> "30064771163"  [ label = "AST: "] 
  "30064771163" -> "68719476816"  [ label = "AST: "] 
  "30064771163" -> "30064771164"  [ label = "AST: "] 
  "30064771163" -> "30064771166"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771164" -> "68719476818"  [ label = "AST: "] 
  "30064771165" -> "68719476817"  [ label = "AST: "] 
  "30064771166" -> "90194313250"  [ label = "AST: "] 
  "30064771166" -> "30064771167"  [ label = "AST: "] 
  "30064771166" -> "90194313251"  [ label = "AST: "] 
  "30064771166" -> "68719476820"  [ label = "AST: "] 
  "30064771167" -> "68719476819"  [ label = "AST: "] 
  "47244640259" -> "68719476821"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771168"  [ label = "AST: "] 
  "30064771168" -> "68719476822"  [ label = "AST: "] 
  "30064771168" -> "30064771169"  [ label = "AST: "] 
  "30064771168" -> "30064771172"  [ label = "AST: "] 
  "30064771169" -> "30064771170"  [ label = "AST: "] 
  "30064771169" -> "30064771171"  [ label = "AST: "] 
  "30064771170" -> "68719476823"  [ label = "AST: "] 
  "30064771171" -> "68719476824"  [ label = "AST: "] 
  "30064771172" -> "90194313252"  [ label = "AST: "] 
  "30064771172" -> "30064771173"  [ label = "AST: "] 
  "30064771172" -> "90194313253"  [ label = "AST: "] 
  "30064771172" -> "30064771175"  [ label = "AST: "] 
  "30064771173" -> "30064771174"  [ label = "AST: "] 
  "30064771174" -> "68719476825"  [ label = "AST: "] 
  "30064771175" -> "30064771176"  [ label = "AST: "] 
  "30064771176" -> "68719476826"  [ label = "AST: "] 
  "47244640260" -> "30064771177"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771177" -> "68719476827"  [ label = "AST: "] 
  "30064771177" -> "30064771178"  [ label = "AST: "] 
  "30064771178" -> "68719476828"  [ label = "AST: "] 
  "30064771178" -> "55834574848"  [ label = "AST: "] 
  "25769803782" -> "30064771179"  [ label = "AST: "] 
  "30064771179" -> "68719476829"  [ label = "AST: "] 
  "30064771179" -> "30064771180"  [ label = "AST: "] 
  "30064771179" -> "30064771184"  [ label = "AST: "] 
  "30064771180" -> "30064771181"  [ label = "AST: "] 
  "30064771180" -> "30064771182"  [ label = "AST: "] 
  "30064771181" -> "68719476830"  [ label = "AST: "] 
  "30064771182" -> "30064771183"  [ label = "AST: "] 
  "30064771182" -> "90194313255"  [ label = "AST: "] 
  "30064771183" -> "68719476831"  [ label = "AST: "] 
  "30064771183" -> "90194313254"  [ label = "AST: "] 
  "30064771184" -> "90194313256"  [ label = "AST: "] 
  "30064771185" -> "68719476832"  [ label = "AST: "] 
  "30064771185" -> "90194313257"  [ label = "AST: "] 
  "30064771186" -> "68719476833"  [ label = "AST: "] 
  "30064771186" -> "30064771187"  [ label = "AST: "] 
  "30064771187" -> "68719476834"  [ label = "AST: "] 
  "30064771187" -> "68719476835"  [ label = "AST: "] 
  "30064771187" -> "68719476836"  [ label = "AST: "] 
  "30064771188" -> "68719476837"  [ label = "AST: "] 
  "30064771188" -> "30064771189"  [ label = "AST: "] 
  "30064771189" -> "68719476838"  [ label = "AST: "] 
  "30064771189" -> "30064771190"  [ label = "AST: "] 
  "30064771189" -> "90194313259"  [ label = "AST: "] 
  "30064771189" -> "68719476839"  [ label = "AST: "] 
  "30064771189" -> "30064771191"  [ label = "AST: "] 
  "30064771190" -> "90194313258"  [ label = "AST: "] 
  "30064771191" -> "68719476840"  [ label = "AST: "] 
  "30064771192" -> "68719476841"  [ label = "AST: "] 
  "30064771192" -> "90194313260"  [ label = "AST: "] 
  "30064771193" -> "68719476842"  [ label = "AST: "] 
  "30064771193" -> "30064771194"  [ label = "AST: "] 
  "30064771194" -> "68719476843"  [ label = "AST: "] 
  "30064771194" -> "30064771195"  [ label = "AST: "] 
  "30064771194" -> "90194313262"  [ label = "AST: "] 
  "30064771194" -> "30064771196"  [ label = "AST: "] 
  "30064771194" -> "30064771197"  [ label = "AST: "] 
  "30064771195" -> "90194313261"  [ label = "AST: "] 
  "30064771196" -> "68719476844"  [ label = "AST: "] 
  "30064771197" -> "68719476845"  [ label = "AST: "] 
  "30064771198" -> "68719476846"  [ label = "AST: "] 
  "30064771198" -> "90194313263"  [ label = "AST: "] 
  "30064771199" -> "68719476847"  [ label = "AST: "] 
  "30064771199" -> "30064771200"  [ label = "AST: "] 
  "30064771200" -> "68719476848"  [ label = "AST: "] 
  "30064771200" -> "30064771201"  [ label = "AST: "] 
  "30064771200" -> "90194313265"  [ label = "AST: "] 
  "30064771200" -> "30064771202"  [ label = "AST: "] 
  "30064771200" -> "30064771203"  [ label = "AST: "] 
  "30064771201" -> "90194313264"  [ label = "AST: "] 
  "30064771202" -> "68719476849"  [ label = "AST: "] 
  "30064771203" -> "68719476850"  [ label = "AST: "] 
  "30064771204" -> "68719476851"  [ label = "AST: "] 
  "30064771204" -> "90194313266"  [ label = "AST: "] 
  "30064771205" -> "68719476852"  [ label = "AST: "] 
  "30064771205" -> "30064771206"  [ label = "AST: "] 
  "30064771206" -> "68719476853"  [ label = "AST: "] 
  "30064771206" -> "90194313267"  [ label = "AST: "] 
  "30064771206" -> "30064771207"  [ label = "AST: "] 
  "30064771206" -> "30064771208"  [ label = "AST: "] 
  "30064771207" -> "68719476854"  [ label = "AST: "] 
  "30064771208" -> "68719476855"  [ label = "AST: "] 
  "30064771209" -> "68719476856"  [ label = "AST: "] 
  "30064771209" -> "90194313268"  [ label = "AST: "] 
  "30064771210" -> "68719476857"  [ label = "AST: "] 
  "30064771210" -> "30064771211"  [ label = "AST: "] 
  "30064771211" -> "68719476858"  [ label = "AST: "] 
  "30064771211" -> "90194313269"  [ label = "AST: "] 
  "30064771211" -> "30064771212"  [ label = "AST: "] 
  "30064771211" -> "30064771213"  [ label = "AST: "] 
  "30064771212" -> "68719476859"  [ label = "AST: "] 
  "30064771213" -> "68719476860"  [ label = "AST: "] 
  "47244640261" -> "68719476861"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "47244640261" -> "47244640262"  [ label = "AST: "] 
  "25769803783" -> "30064771214"  [ label = "AST: "] 
  "30064771214" -> "30064771215"  [ label = "AST: "] 
  "30064771214" -> "68719476862"  [ label = "AST: "] 
  "30064771214" -> "68719476863"  [ label = "AST: "] 
  "30064771214" -> "68719476864"  [ label = "AST: "] 
  "30064771214" -> "68719476865"  [ label = "AST: "] 
  "30064771214" -> "68719476866"  [ label = "AST: "] 
  "30064771214" -> "68719476867"  [ label = "AST: "] 
  "30064771214" -> "68719476868"  [ label = "AST: "] 
  "30064771214" -> "68719476869"  [ label = "AST: "] 
  "30064771214" -> "68719476870"  [ label = "AST: "] 
  "30064771214" -> "68719476871"  [ label = "AST: "] 
  "30064771214" -> "68719476872"  [ label = "AST: "] 
  "30064771214" -> "68719476873"  [ label = "AST: "] 
  "30064771214" -> "68719476874"  [ label = "AST: "] 
  "30064771214" -> "68719476875"  [ label = "AST: "] 
  "30064771214" -> "68719476876"  [ label = "AST: "] 
  "30064771214" -> "68719476877"  [ label = "AST: "] 
  "30064771214" -> "68719476878"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "25769803784" -> "30064771216"  [ label = "AST: "] 
  "30064771216" -> "30064771217"  [ label = "AST: "] 
  "30064771216" -> "68719476879"  [ label = "AST: "] 
  "30064771216" -> "68719476880"  [ label = "AST: "] 
  "30064771216" -> "68719476881"  [ label = "AST: "] 
  "30064771216" -> "68719476882"  [ label = "AST: "] 
  "30064771216" -> "68719476883"  [ label = "AST: "] 
  "30064771216" -> "68719476884"  [ label = "AST: "] 
  "30064771216" -> "68719476885"  [ label = "AST: "] 
  "30064771216" -> "68719476886"  [ label = "AST: "] 
  "30064771216" -> "68719476887"  [ label = "AST: "] 
  "30064771216" -> "68719476888"  [ label = "AST: "] 
  "30064771216" -> "68719476889"  [ label = "AST: "] 
  "30064771216" -> "68719476890"  [ label = "AST: "] 
  "30064771216" -> "68719476891"  [ label = "AST: "] 
  "30064771216" -> "68719476892"  [ label = "AST: "] 
  "30064771216" -> "68719476893"  [ label = "AST: "] 
  "30064771216" -> "68719476894"  [ label = "AST: "] 
  "30064771216" -> "68719476895"  [ label = "AST: "] 
  "47244640263" -> "68719476896"  [ label = "AST: "] 
  "47244640263" -> "25769803785"  [ label = "AST: "] 
  "25769803785" -> "30064771218"  [ label = "AST: "] 
  "30064771218" -> "68719476897"  [ label = "AST: "] 
  "30064771218" -> "30064771219"  [ label = "AST: "] 
  "30064771218" -> "30064771221"  [ label = "AST: "] 
  "30064771219" -> "68719476898"  [ label = "AST: "] 
  "30064771219" -> "30064771220"  [ label = "AST: "] 
  "30064771219" -> "68719476900"  [ label = "AST: "] 
  "30064771220" -> "68719476899"  [ label = "AST: "] 
  "30064771221" -> "90194313270"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771078" -> "30064771081"  [ label = "CFG: "] 
  "30064771080" -> "30064771085"  [ label = "CFG: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771089"  [ label = "CFG: "] 
  "30064771086" -> "30064771097"  [ label = "CFG: "] 
  "30064771095" -> "30064771103"  [ label = "CFG: "] 
  "30064771101" -> "30064771109"  [ label = "CFG: "] 
  "30064771107" -> "30064771115"  [ label = "CFG: "] 
  "30064771113" -> "30064771121"  [ label = "CFG: "] 
  "30064771119" -> "30064771123"  [ label = "CFG: "] 
  "30064771122" -> "68719476769"  [ label = "CFG: "] 
  "30064771142" -> "30064771146"  [ label = "CFG: "] 
  "30064771144" -> "30064771151"  [ label = "CFG: "] 
  "30064771149" -> "30064771155"  [ label = "CFG: "] 
  "30064771185" -> "30064771187"  [ label = "CFG: "] 
  "30064771186" -> "30064771190"  [ label = "CFG: "] 
  "30064771188" -> "30064771192"  [ label = "CFG: "] 
  "30064771192" -> "30064771195"  [ label = "CFG: "] 
  "30064771193" -> "30064771198"  [ label = "CFG: "] 
  "30064771198" -> "30064771201"  [ label = "CFG: "] 
  "30064771199" -> "30064771204"  [ label = "CFG: "] 
  "30064771204" -> "30064771207"  [ label = "CFG: "] 
  "30064771205" -> "30064771209"  [ label = "CFG: "] 
  "30064771209" -> "30064771212"  [ label = "CFG: "] 
  "30064771210" -> "68719476861"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771087" -> "30064771094"  [ label = "CFG: "] 
  "30064771092" -> "30064771086"  [ label = "CFG: "] 
  "30064771096" -> "30064771100"  [ label = "CFG: "] 
  "30064771098" -> "30064771095"  [ label = "CFG: "] 
  "30064771102" -> "30064771106"  [ label = "CFG: "] 
  "30064771104" -> "30064771101"  [ label = "CFG: "] 
  "30064771108" -> "30064771112"  [ label = "CFG: "] 
  "30064771110" -> "30064771107"  [ label = "CFG: "] 
  "30064771114" -> "30064771118"  [ label = "CFG: "] 
  "30064771116" -> "30064771113"  [ label = "CFG: "] 
  "30064771120" -> "30064771119"  [ label = "CFG: "] 
  "30064771123" -> "30064771122"  [ label = "CFG: "] 
  "68719476769" -> "30064771125"  [ label = "CFG: "] 
  "68719476769" -> "30064771143"  [ label = "CFG: "] 
  "30064771143" -> "30064771142"  [ label = "CFG: "] 
  "30064771145" -> "30064771148"  [ label = "CFG: "] 
  "30064771147" -> "30064771144"  [ label = "CFG: "] 
  "30064771150" -> "30064771153"  [ label = "CFG: "] 
  "30064771152" -> "30064771149"  [ label = "CFG: "] 
  "30064771154" -> "30064771158"  [ label = "CFG: "] 
  "30064771154" -> "30064771162"  [ label = "CFG: "] 
  "30064771161" -> "68719476821"  [ label = "CFG: "] 
  "30064771161" -> "30064771165"  [ label = "CFG: "] 
  "68719476821" -> "30064771170"  [ label = "CFG: "] 
  "68719476821" -> "55834574848"  [ label = "CFG: "] 
  "30064771177" -> "30064771181"  [ label = "CFG: "] 
  "30064771177" -> "30064771185"  [ label = "CFG: "] 
  "30064771187" -> "30064771186"  [ label = "CFG: "] 
  "30064771189" -> "30064771188"  [ label = "CFG: "] 
  "30064771194" -> "30064771193"  [ label = "CFG: "] 
  "30064771200" -> "30064771199"  [ label = "CFG: "] 
  "30064771206" -> "30064771205"  [ label = "CFG: "] 
  "30064771211" -> "30064771210"  [ label = "CFG: "] 
  "68719476861" -> "30064771215"  [ label = "CFG: "] 
  "68719476861" -> "30064771217"  [ label = "CFG: "] 
  "68719476896" -> "128849018880"  [ label = "CFG: "] 
  "68719476896" -> "30064771220"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771088" -> "30064771091"  [ label = "CFG: "] 
  "30064771090" -> "30064771087"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771117" -> "30064771116"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771124" -> "30064771127"  [ label = "CFG: "] 
  "30064771126" -> "30064771129"  [ label = "CFG: "] 
  "30064771128" -> "30064771131"  [ label = "CFG: "] 
  "30064771130" -> "30064771133"  [ label = "CFG: "] 
  "30064771132" -> "30064771138"  [ label = "CFG: "] 
  "30064771134" -> "30064771140"  [ label = "CFG: "] 
  "30064771139" -> "30064771143"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771148" -> "30064771147"  [ label = "CFG: "] 
  "30064771151" -> "30064771150"  [ label = "CFG: "] 
  "30064771153" -> "30064771152"  [ label = "CFG: "] 
  "30064771155" -> "30064771154"  [ label = "CFG: "] 
  "30064771156" -> "30064771162"  [ label = "CFG: "] 
  "30064771162" -> "30064771161"  [ label = "CFG: "] 
  "30064771163" -> "68719476821"  [ label = "CFG: "] 
  "30064771168" -> "55834574848"  [ label = "CFG: "] 
  "30064771178" -> "30064771177"  [ label = "CFG: "] 
  "30064771179" -> "30064771185"  [ label = "CFG: "] 
  "30064771190" -> "30064771191"  [ label = "CFG: "] 
  "30064771191" -> "30064771189"  [ label = "CFG: "] 
  "30064771195" -> "30064771196"  [ label = "CFG: "] 
  "30064771196" -> "30064771197"  [ label = "CFG: "] 
  "30064771197" -> "30064771194"  [ label = "CFG: "] 
  "30064771201" -> "30064771202"  [ label = "CFG: "] 
  "30064771202" -> "30064771203"  [ label = "CFG: "] 
  "30064771203" -> "30064771200"  [ label = "CFG: "] 
  "30064771207" -> "30064771208"  [ label = "CFG: "] 
  "30064771208" -> "30064771206"  [ label = "CFG: "] 
  "30064771212" -> "30064771213"  [ label = "CFG: "] 
  "30064771213" -> "30064771211"  [ label = "CFG: "] 
  "30064771214" -> "68719476896"  [ label = "CFG: "] 
  "30064771218" -> "128849018880"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771118" -> "30064771117"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771131" -> "30064771130"  [ label = "CFG: "] 
  "30064771133" -> "30064771132"  [ label = "CFG: "] 
  "30064771135" -> "30064771134"  [ label = "CFG: "] 
  "30064771140" -> "30064771141"  [ label = "CFG: "] 
  "30064771141" -> "30064771139"  [ label = "CFG: "] 
  "30064771157" -> "30064771160"  [ label = "CFG: "] 
  "30064771159" -> "30064771156"  [ label = "CFG: "] 
  "30064771164" -> "30064771167"  [ label = "CFG: "] 
  "30064771166" -> "30064771163"  [ label = "CFG: "] 
  "30064771169" -> "30064771174"  [ label = "CFG: "] 
  "30064771172" -> "30064771168"  [ label = "CFG: "] 
  "55834574848" -> "30064771178"  [ label = "CFG: "] 
  "30064771180" -> "30064771184"  [ label = "CFG: "] 
  "30064771184" -> "30064771179"  [ label = "CFG: "] 
  "30064771215" -> "30064771214"  [ label = "CFG: "] 
  "30064771216" -> "68719476896"  [ label = "CFG: "] 
  "30064771219" -> "30064771221"  [ label = "CFG: "] 
  "30064771221" -> "30064771218"  [ label = "CFG: "] 
  "30064771136" -> "30064771135"  [ label = "CFG: "] 
  "30064771158" -> "30064771157"  [ label = "CFG: "] 
  "30064771160" -> "30064771159"  [ label = "CFG: "] 
  "30064771165" -> "30064771164"  [ label = "CFG: "] 
  "30064771167" -> "30064771166"  [ label = "CFG: "] 
  "30064771170" -> "30064771171"  [ label = "CFG: "] 
  "30064771171" -> "30064771169"  [ label = "CFG: "] 
  "30064771173" -> "30064771176"  [ label = "CFG: "] 
  "30064771175" -> "30064771172"  [ label = "CFG: "] 
  "30064771181" -> "30064771180"  [ label = "CFG: "] 
  "30064771181" -> "30064771183"  [ label = "CFG: "] 
  "30064771182" -> "30064771180"  [ label = "CFG: "] 
  "30064771217" -> "30064771216"  [ label = "CFG: "] 
  "30064771220" -> "30064771219"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "30064771174" -> "30064771173"  [ label = "CFG: "] 
  "30064771176" -> "30064771175"  [ label = "CFG: "] 
  "30064771183" -> "30064771182"  [ label = "CFG: "] 
  "30064771138" -> "30064771137"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "30064771072" -> "128849018880"  [ label = "DDG: context-&gt;input(0)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: x = context-&gt;input(0)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: context-&gt;input(1)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: &amp; scale = context-&gt;input(1)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: context-&gt;input(2)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: &amp; offset = context-&gt;input(2)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: context-&gt;input(3)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: &amp; estimated_mean = context-&gt;input(3)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: context-&gt;input(4)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: &amp; estimated_variance = context-&gt;input(4)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: &amp;context-&gt;input(5)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: has_side_input_ ? &amp;context-&gt;input(5) : nullptr"] 
  "30064771082" -> "128849018880"  [ label = "DDG: * side_input = has_side_input_ ? &amp;context-&gt;input(5) : nullptr"] 
  "30064771087" -> "128849018880"  [ label = "DDG: x.dims() == 4"] 
  "30064771086" -> "128849018880"  [ label = "DDG: x.dims() == 4 || x.dims() == 5"] 
  "30064771092" -> "128849018880"  [ label = "DDG: x.shape().DebugString()"] 
  "30064771086" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;input must be 4 or 5-dimensional&quot;,
                                        x.shape().DebugString())"] 
  "30064771086" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, x.dims() == 4 || x.dims() == 5,
                errors::InvalidArgument(&quot;input must be 4 or 5-dimensional&quot;,
                                        x.shape().DebugString()))"] 
  "30064771096" -> "128849018880"  [ label = "DDG: scale.dims()"] 
  "30064771095" -> "128849018880"  [ label = "DDG: scale.dims() == 1"] 
  "30064771098" -> "128849018880"  [ label = "DDG: scale.shape().DebugString()"] 
  "30064771095" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;scale must be 1-dimensional&quot;,
                                        scale.shape().DebugString())"] 
  "30064771095" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, scale.dims() == 1,
                errors::InvalidArgument(&quot;scale must be 1-dimensional&quot;,
                                        scale.shape().DebugString()))"] 
  "30064771102" -> "128849018880"  [ label = "DDG: offset.dims()"] 
  "30064771101" -> "128849018880"  [ label = "DDG: offset.dims() == 1"] 
  "30064771105" -> "128849018880"  [ label = "DDG: offset.shape()"] 
  "30064771104" -> "128849018880"  [ label = "DDG: offset.shape().DebugString()"] 
  "30064771101" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;offset must be 1-dimensional&quot;,
                                        offset.shape().DebugString())"] 
  "30064771101" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, offset.dims() == 1,
                errors::InvalidArgument(&quot;offset must be 1-dimensional&quot;,
                                        offset.shape().DebugString()))"] 
  "30064771108" -> "128849018880"  [ label = "DDG: estimated_mean.dims()"] 
  "30064771107" -> "128849018880"  [ label = "DDG: estimated_mean.dims() == 1"] 
  "30064771111" -> "128849018880"  [ label = "DDG: estimated_mean.shape()"] 
  "30064771110" -> "128849018880"  [ label = "DDG: estimated_mean.shape().DebugString()"] 
  "30064771107" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;estimated_mean must be 1-dimensional&quot;,
                                        estimated_mean.shape().DebugString())"] 
  "30064771107" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, estimated_mean.dims() == 1,
                errors::InvalidArgument(&quot;estimated_mean must be 1-dimensional&quot;,
                                        estimated_mean.shape().DebugString()))"] 
  "30064771114" -> "128849018880"  [ label = "DDG: estimated_variance.dims()"] 
  "30064771113" -> "128849018880"  [ label = "DDG: estimated_variance.dims() == 1"] 
  "30064771117" -> "128849018880"  [ label = "DDG: estimated_variance.shape()"] 
  "30064771116" -> "128849018880"  [ label = "DDG: estimated_variance.shape().DebugString()"] 
  "30064771113" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;estimated_variance must be 1-dimensional&quot;,
                                estimated_variance.shape().DebugString())"] 
  "30064771113" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
        context, estimated_variance.dims() == 1,
        errors::InvalidArgument(&quot;estimated_variance must be 1-dimensional&quot;,
                                estimated_variance.shape().DebugString()))"] 
  "30064771120" -> "128849018880"  [ label = "DDG: x.dims()"] 
  "30064771119" -> "128849018880"  [ label = "DDG: x.dims() == 5"] 
  "30064771119" -> "128849018880"  [ label = "DDG: use_reshape = (x.dims() == 5)"] 
  "30064771122" -> "128849018880"  [ label = "DDG: x.shape()"] 
  "30064771122" -> "128849018880"  [ label = "DDG: x_shape = x.shape()"] 
  "30064771124" -> "128849018880"  [ label = "DDG: GetTensorDim(x, tensor_format_, 'N')"] 
  "30064771124" -> "128849018880"  [ label = "DDG: in_batch = GetTensorDim(x, tensor_format_, 'N')"] 
  "30064771126" -> "128849018880"  [ label = "DDG: GetTensorDim(x, tensor_format_, '0')"] 
  "30064771126" -> "128849018880"  [ label = "DDG: in_planes = GetTensorDim(x, tensor_format_, '0')"] 
  "30064771128" -> "128849018880"  [ label = "DDG: GetTensorDim(x, tensor_format_, '1')"] 
  "30064771128" -> "128849018880"  [ label = "DDG: in_rows = GetTensorDim(x, tensor_format_, '1')"] 
  "30064771130" -> "128849018880"  [ label = "DDG: GetTensorDim(x, tensor_format_, '2')"] 
  "30064771130" -> "128849018880"  [ label = "DDG: in_cols = GetTensorDim(x, tensor_format_, '2')"] 
  "30064771132" -> "128849018880"  [ label = "DDG: in_depth = GetTensorDim(x, tensor_format_, 'C')"] 
  "30064771135" -> "128849018880"  [ label = "DDG: in_batch"] 
  "30064771137" -> "128849018880"  [ label = "DDG: in_planes"] 
  "30064771138" -> "128849018880"  [ label = "DDG: in_rows"] 
  "30064771138" -> "128849018880"  [ label = "DDG: in_cols"] 
  "30064771137" -> "128849018880"  [ label = "DDG: in_rows * in_cols"] 
  "30064771136" -> "128849018880"  [ label = "DDG: {in_planes, in_rows * in_cols}"] 
  "30064771135" -> "128849018880"  [ label = "DDG: {{in_planes, in_rows * in_cols}}"] 
  "30064771135" -> "128849018880"  [ label = "DDG: in_depth"] 
  "30064771134" -> "128849018880"  [ label = "DDG: ShapeFromFormat(tensor_format_, in_batch,
                                   {{in_planes, in_rows * in_cols}}, in_depth)"] 
  "30064771134" -> "128849018880"  [ label = "DDG: dest_shape = ShapeFromFormat(tensor_format_, in_batch,
                                   {{in_planes, in_rows * in_cols}}, in_depth)"] 
  "30064771139" -> "128849018880"  [ label = "DDG: x.CopyFrom(x, dest_shape)"] 
  "30064771139" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, x.CopyFrom(x, dest_shape),
                  errors::InvalidArgument(&quot;Error during tensor copy.&quot;))"] 
  "30064771142" -> "128849018880"  [ label = "DDG: GetTensorDim(x, tensor_format_, 'C')"] 
  "30064771142" -> "128849018880"  [ label = "DDG: num_channels = GetTensorDim(x, tensor_format_, 'C')"] 
  "30064771144" -> "128849018880"  [ label = "DDG: scale.NumElements() == num_channels"] 
  "30064771147" -> "128849018880"  [ label = "DDG: scale.NumElements()"] 
  "30064771144" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;scale must have the same number of elements &quot;
                                &quot;as the channels of x, got &quot;,
                                scale.NumElements(), &quot; and &quot;, num_channels)"] 
  "30064771144" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
        context, scale.NumElements() == num_channels,
        errors::InvalidArgument(&quot;scale must have the same number of elements &quot;
                                &quot;as the channels of x, got &quot;,
                                scale.NumElements(), &quot; and &quot;, num_channels))"] 
  "30064771149" -> "128849018880"  [ label = "DDG: offset.NumElements() == num_channels"] 
  "30064771152" -> "128849018880"  [ label = "DDG: offset.NumElements()"] 
  "30064771152" -> "128849018880"  [ label = "DDG: num_channels"] 
  "30064771149" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;offset must have the same number of elements &quot;
                                &quot;as the channels of x, got &quot;,
                                offset.NumElements(), &quot; and &quot;, num_channels)"] 
  "30064771149" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
        context, offset.NumElements() == num_channels,
        errors::InvalidArgument(&quot;offset must have the same number of elements &quot;
                                &quot;as the channels of x, got &quot;,
                                offset.NumElements(), &quot; and &quot;, num_channels))"] 
  "30064771154" -> "128849018880"  [ label = "DDG: estimated_mean.NumElements()"] 
  "30064771154" -> "128849018880"  [ label = "DDG: estimated_mean.NumElements() != 0"] 
  "30064771156" -> "128849018880"  [ label = "DDG: estimated_mean.NumElements() == num_channels"] 
  "30064771159" -> "128849018880"  [ label = "DDG: estimated_mean.NumElements()"] 
  "30064771159" -> "128849018880"  [ label = "DDG: num_channels"] 
  "30064771156" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                      &quot;mean must be empty or have the same number of &quot;
                      &quot;elements as the channels of x, got &quot;,
                      estimated_mean.NumElements(), &quot; and &quot;, num_channels)"] 
  "30064771156" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, estimated_mean.NumElements() == num_channels,
                  errors::InvalidArgument(
                      &quot;mean must be empty or have the same number of &quot;
                      &quot;elements as the channels of x, got &quot;,
                      estimated_mean.NumElements(), &quot; and &quot;, num_channels))"] 
  "30064771161" -> "128849018880"  [ label = "DDG: estimated_variance.NumElements()"] 
  "30064771161" -> "128849018880"  [ label = "DDG: estimated_variance.NumElements() != 0"] 
  "30064771163" -> "128849018880"  [ label = "DDG: estimated_variance.NumElements() == num_channels"] 
  "30064771166" -> "128849018880"  [ label = "DDG: estimated_variance.NumElements()"] 
  "30064771166" -> "128849018880"  [ label = "DDG: num_channels"] 
  "30064771163" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                      &quot;variance must be empty or have the same number of &quot;
                      &quot;elements as the channels of x, got &quot;,
                      estimated_variance.NumElements(), &quot; and &quot;, num_channels)"] 
  "30064771163" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, estimated_variance.NumElements() == num_channels,
                  errors::InvalidArgument(
                      &quot;variance must be empty or have the same number of &quot;
                      &quot;elements as the channels of x, got &quot;,
                      estimated_variance.NumElements(), &quot; and &quot;, num_channels))"] 
  "30064771168" -> "128849018880"  [ label = "DDG: side_input-&gt;shape() == x.shape()"] 
  "30064771173" -> "128849018880"  [ label = "DDG: side_input-&gt;shape()"] 
  "30064771172" -> "128849018880"  [ label = "DDG: side_input-&gt;shape().DebugString()"] 
  "30064771175" -> "128849018880"  [ label = "DDG: x.shape()"] 
  "30064771172" -> "128849018880"  [ label = "DDG: x.shape().DebugString()"] 
  "30064771168" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                      &quot;side_input shape must be equal to input shape: &quot;,
                      side_input-&gt;shape().DebugString(),
                      &quot; != &quot;, x.shape().DebugString())"] 
  "30064771168" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, side_input-&gt;shape() == x.shape(),
                  errors::InvalidArgument(
                      &quot;side_input shape must be equal to input shape: &quot;,
                      side_input-&gt;shape().DebugString(),
                      &quot; != &quot;, x.shape().DebugString()))"] 
  "30064771177" -> "128849018880"  [ label = "DDG: FbnActivationMode::kIdentity"] 
  "30064771177" -> "128849018880"  [ label = "DDG: activation_mode_ != FbnActivationMode::kIdentity"] 
  "30064771180" -> "128849018880"  [ label = "DDG: !is_training_"] 
  "30064771183" -> "128849018880"  [ label = "DDG: num_channels"] 
  "30064771182" -> "128849018880"  [ label = "DDG: num_channels % 4"] 
  "30064771180" -> "128849018880"  [ label = "DDG: num_channels % 4 == 0"] 
  "30064771179" -> "128849018880"  [ label = "DDG: !is_training_ || num_channels % 4 == 0"] 
  "30064771179" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;FusedBatchNorm with activation requires &quot;
                                  &quot;channel dimension to be a multiple of 4.&quot;)"] 
  "30064771179" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
          context, !is_training_ || num_channels % 4 == 0,
          errors::InvalidArgument(&quot;FusedBatchNorm with activation requires &quot;
                                  &quot;channel dimension to be a multiple of 4.&quot;))"] 
  "30064771185" -> "128849018880"  [ label = "DDG: * y = nullptr"] 
  "30064771187" -> "128849018880"  [ label = "DDG: use_reshape"] 
  "30064771187" -> "128849018880"  [ label = "DDG: dest_shape"] 
  "30064771186" -> "128849018880"  [ label = "DDG: use_reshape ? dest_shape : x_shape"] 
  "30064771186" -> "128849018880"  [ label = "DDG: alloc_shape = use_reshape ? dest_shape : x_shape"] 
  "30064771189" -> "128849018880"  [ label = "DDG: {0}"] 
  "30064771189" -> "128849018880"  [ label = "DDG: alloc_shape"] 
  "30064771189" -> "128849018880"  [ label = "DDG: &amp;y"] 
  "30064771188" -> "128849018880"  [ label = "DDG: context-&gt;forward_input_or_allocate_output(
                                {0}, 0, alloc_shape, &amp;y)"] 
  "30064771188" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(context, context-&gt;forward_input_or_allocate_output(
                                {0}, 0, alloc_shape, &amp;y))"] 
  "30064771192" -> "128849018880"  [ label = "DDG: * batch_mean = nullptr"] 
  "30064771194" -> "128849018880"  [ label = "DDG: {3}"] 
  "30064771194" -> "128849018880"  [ label = "DDG: &amp;batch_mean"] 
  "30064771193" -> "128849018880"  [ label = "DDG: context-&gt;forward_input_or_allocate_output(
                                {3}, 1, scale.shape(), &amp;batch_mean)"] 
  "30064771193" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(context, context-&gt;forward_input_or_allocate_output(
                                {3}, 1, scale.shape(), &amp;batch_mean))"] 
  "30064771198" -> "128849018880"  [ label = "DDG: * batch_var = nullptr"] 
  "30064771200" -> "128849018880"  [ label = "DDG: {4}"] 
  "30064771200" -> "128849018880"  [ label = "DDG: &amp;batch_var"] 
  "30064771199" -> "128849018880"  [ label = "DDG: context-&gt;forward_input_or_allocate_output(
                                {4}, 2, scale.shape(), &amp;batch_var)"] 
  "30064771199" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(context, context-&gt;forward_input_or_allocate_output(
                                {4}, 2, scale.shape(), &amp;batch_var))"] 
  "30064771204" -> "128849018880"  [ label = "DDG: * saved_mean = nullptr"] 
  "30064771206" -> "128849018880"  [ label = "DDG: &amp;saved_mean"] 
  "30064771205" -> "128849018880"  [ label = "DDG: context-&gt;allocate_output(3, scale.shape(), &amp;saved_mean)"] 
  "30064771205" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(context,
                   context-&gt;allocate_output(3, scale.shape(), &amp;saved_mean))"] 
  "30064771209" -> "128849018880"  [ label = "DDG: * saved_maybe_inv_var = nullptr"] 
  "30064771211" -> "128849018880"  [ label = "DDG: scale.shape()"] 
  "30064771211" -> "128849018880"  [ label = "DDG: &amp;saved_maybe_inv_var"] 
  "30064771210" -> "128849018880"  [ label = "DDG: context-&gt;allocate_output(4, scale.shape(),
                                                     &amp;saved_maybe_inv_var)"] 
  "30064771210" -> "128849018880"  [ label = "DDG: OP_REQUIRES_OK(context, context-&gt;allocate_output(4, scale.shape(),
                                                     &amp;saved_maybe_inv_var))"] 
  "30064771216" -> "128849018880"  [ label = "DDG: functor::FusedBatchNorm&lt;Device, T, U, false&gt;()"] 
  "30064771216" -> "128849018880"  [ label = "DDG: x"] 
  "30064771216" -> "128849018880"  [ label = "DDG: scale"] 
  "30064771216" -> "128849018880"  [ label = "DDG: offset"] 
  "30064771216" -> "128849018880"  [ label = "DDG: estimated_mean"] 
  "30064771216" -> "128849018880"  [ label = "DDG: estimated_variance"] 
  "30064771216" -> "128849018880"  [ label = "DDG: side_input"] 
  "30064771216" -> "128849018880"  [ label = "DDG: epsilon_"] 
  "30064771216" -> "128849018880"  [ label = "DDG: exponential_avg_factor_"] 
  "30064771216" -> "128849018880"  [ label = "DDG: activation_mode_"] 
  "30064771216" -> "128849018880"  [ label = "DDG: batch_mean"] 
  "30064771216" -> "128849018880"  [ label = "DDG: batch_var"] 
  "30064771216" -> "128849018880"  [ label = "DDG: saved_mean"] 
  "30064771216" -> "128849018880"  [ label = "DDG: saved_maybe_inv_var"] 
  "30064771216" -> "128849018880"  [ label = "DDG: tensor_format_"] 
  "30064771216" -> "128849018880"  [ label = "DDG: use_reserved_space"] 
  "30064771216" -> "128849018880"  [ label = "DDG: functor::FusedBatchNorm&lt;Device, T, U, false&gt;()(
          context, x, scale, offset, estimated_mean, estimated_variance,
          side_input, epsilon_, exponential_avg_factor_, activation_mode_, y,
          batch_mean, batch_var, saved_mean, saved_maybe_inv_var,
          tensor_format_, use_reserved_space)"] 
  "30064771214" -> "128849018880"  [ label = "DDG: functor::FusedBatchNorm&lt;Device, T, U, true&gt;()"] 
  "30064771214" -> "128849018880"  [ label = "DDG: x"] 
  "30064771214" -> "128849018880"  [ label = "DDG: scale"] 
  "30064771214" -> "128849018880"  [ label = "DDG: offset"] 
  "30064771214" -> "128849018880"  [ label = "DDG: estimated_mean"] 
  "30064771214" -> "128849018880"  [ label = "DDG: estimated_variance"] 
  "30064771214" -> "128849018880"  [ label = "DDG: side_input"] 
  "30064771214" -> "128849018880"  [ label = "DDG: epsilon_"] 
  "30064771214" -> "128849018880"  [ label = "DDG: exponential_avg_factor_"] 
  "30064771214" -> "128849018880"  [ label = "DDG: activation_mode_"] 
  "30064771214" -> "128849018880"  [ label = "DDG: batch_mean"] 
  "30064771214" -> "128849018880"  [ label = "DDG: batch_var"] 
  "30064771214" -> "128849018880"  [ label = "DDG: saved_mean"] 
  "30064771214" -> "128849018880"  [ label = "DDG: saved_maybe_inv_var"] 
  "30064771214" -> "128849018880"  [ label = "DDG: tensor_format_"] 
  "30064771214" -> "128849018880"  [ label = "DDG: use_reserved_space"] 
  "30064771214" -> "128849018880"  [ label = "DDG: functor::FusedBatchNorm&lt;Device, T, U, true&gt;()(
          context, x, scale, offset, estimated_mean, estimated_variance,
          side_input, epsilon_, exponential_avg_factor_, activation_mode_, y,
          batch_mean, batch_var, saved_mean, saved_maybe_inv_var,
          tensor_format_, use_reserved_space)"] 
  "30064771218" -> "128849018880"  [ label = "DDG: context"] 
  "30064771219" -> "128849018880"  [ label = "DDG: y"] 
  "30064771219" -> "128849018880"  [ label = "DDG: *y"] 
  "30064771219" -> "128849018880"  [ label = "DDG: x_shape"] 
  "30064771218" -> "128849018880"  [ label = "DDG: y-&gt;CopyFrom(*y, x_shape)"] 
  "30064771218" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;Error during tensor copy.&quot;)"] 
  "30064771218" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, y-&gt;CopyFrom(*y, x_shape),
                  errors::InvalidArgument(&quot;Error during tensor copy.&quot;))"] 
  "30064771181" -> "128849018880"  [ label = "DDG: is_training_"] 
  "30064771083" -> "128849018880"  [ label = "DDG: has_side_input_"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: context"] 
  "30064771073" -> "30064771072"  [ label = "DDG: 0"] 
  "30064771075" -> "30064771074"  [ label = "DDG: context"] 
  "30064771075" -> "30064771074"  [ label = "DDG: 1"] 
  "30064771077" -> "30064771076"  [ label = "DDG: context"] 
  "30064771077" -> "30064771076"  [ label = "DDG: 2"] 
  "30064771079" -> "30064771078"  [ label = "DDG: context"] 
  "30064771079" -> "30064771078"  [ label = "DDG: 3"] 
  "30064771081" -> "30064771080"  [ label = "DDG: context"] 
  "30064771081" -> "30064771080"  [ label = "DDG: 4"] 
  "30064771085" -> "30064771082"  [ label = "DDG: context"] 
  "30064771085" -> "30064771082"  [ label = "DDG: 5"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771120" -> "30064771119"  [ label = "DDG: x.dims()"] 
  "30064771120" -> "30064771119"  [ label = "DDG: 5"] 
  "30064771123" -> "30064771122"  [ label = "DDG: x"] 
  "30064771143" -> "30064771142"  [ label = "DDG: x"] 
  "30064771143" -> "30064771142"  [ label = "DDG: tensor_format_"] 
  "30064771143" -> "30064771142"  [ label = "DDG: 'C'"] 
  "111669149697" -> "30064771185"  [ label = "DDG: "] 
  "30064771140" -> "30064771186"  [ label = "DDG: dest_shape"] 
  "111669149697" -> "30064771186"  [ label = "DDG: "] 
  "30064771122" -> "30064771186"  [ label = "DDG: x_shape"] 
  "111669149697" -> "30064771192"  [ label = "DDG: "] 
  "111669149697" -> "30064771198"  [ label = "DDG: "] 
  "111669149697" -> "30064771204"  [ label = "DDG: "] 
  "111669149697" -> "30064771209"  [ label = "DDG: "] 
  "30064771081" -> "30064771086"  [ label = "DDG: context"] 
  "30064771085" -> "30064771086"  [ label = "DDG: context"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771087" -> "30064771086"  [ label = "DDG: x.dims() == 4"] 
  "30064771087" -> "30064771086"  [ label = "DDG: x.dims() == 5"] 
  "30064771092" -> "30064771086"  [ label = "DDG: &quot;input must be 4 or 5-dimensional&quot;"] 
  "30064771092" -> "30064771086"  [ label = "DDG: x.shape().DebugString()"] 
  "30064771086" -> "30064771095"  [ label = "DDG: context"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771096" -> "30064771095"  [ label = "DDG: scale.dims()"] 
  "30064771096" -> "30064771095"  [ label = "DDG: 1"] 
  "30064771098" -> "30064771095"  [ label = "DDG: &quot;scale must be 1-dimensional&quot;"] 
  "30064771098" -> "30064771095"  [ label = "DDG: scale.shape().DebugString()"] 
  "30064771095" -> "30064771101"  [ label = "DDG: context"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771102" -> "30064771101"  [ label = "DDG: offset.dims()"] 
  "30064771102" -> "30064771101"  [ label = "DDG: 1"] 
  "30064771104" -> "30064771101"  [ label = "DDG: &quot;offset must be 1-dimensional&quot;"] 
  "30064771104" -> "30064771101"  [ label = "DDG: offset.shape().DebugString()"] 
  "30064771101" -> "30064771107"  [ label = "DDG: context"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771108" -> "30064771107"  [ label = "DDG: estimated_mean.dims()"] 
  "30064771108" -> "30064771107"  [ label = "DDG: 1"] 
  "30064771110" -> "30064771107"  [ label = "DDG: &quot;estimated_mean must be 1-dimensional&quot;"] 
  "30064771110" -> "30064771107"  [ label = "DDG: estimated_mean.shape().DebugString()"] 
  "30064771107" -> "30064771113"  [ label = "DDG: context"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771114" -> "30064771113"  [ label = "DDG: estimated_variance.dims()"] 
  "30064771114" -> "30064771113"  [ label = "DDG: 1"] 
  "30064771116" -> "30064771113"  [ label = "DDG: &quot;estimated_variance must be 1-dimensional&quot;"] 
  "30064771116" -> "30064771113"  [ label = "DDG: estimated_variance.shape().DebugString()"] 
  "111669149697" -> "68719476769"  [ label = "DDG: "] 
  "30064771113" -> "30064771144"  [ label = "DDG: context"] 
  "30064771139" -> "30064771144"  [ label = "DDG: context"] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "30064771145" -> "30064771144"  [ label = "DDG: scale.NumElements()"] 
  "30064771145" -> "30064771144"  [ label = "DDG: num_channels"] 
  "30064771147" -> "30064771144"  [ label = "DDG: &quot;scale must have the same number of elements &quot;
                                &quot;as the channels of x, got &quot;"] 
  "30064771147" -> "30064771144"  [ label = "DDG: scale.NumElements()"] 
  "30064771147" -> "30064771144"  [ label = "DDG: &quot; and &quot;"] 
  "30064771147" -> "30064771144"  [ label = "DDG: num_channels"] 
  "30064771144" -> "30064771149"  [ label = "DDG: context"] 
  "111669149697" -> "30064771149"  [ label = "DDG: "] 
  "30064771150" -> "30064771149"  [ label = "DDG: offset.NumElements()"] 
  "30064771150" -> "30064771149"  [ label = "DDG: num_channels"] 
  "30064771152" -> "30064771149"  [ label = "DDG: &quot;offset must have the same number of elements &quot;
                                &quot;as the channels of x, got &quot;"] 
  "30064771152" -> "30064771149"  [ label = "DDG: offset.NumElements()"] 
  "30064771152" -> "30064771149"  [ label = "DDG: &quot; and &quot;"] 
  "30064771152" -> "30064771149"  [ label = "DDG: num_channels"] 
  "111669149697" -> "68719476821"  [ label = "DDG: "] 
  "30064771189" -> "30064771188"  [ label = "DDG: context"] 
  "111669149697" -> "30064771188"  [ label = "DDG: "] 
  "30064771189" -> "30064771188"  [ label = "DDG: {0}"] 
  "30064771189" -> "30064771188"  [ label = "DDG: alloc_shape"] 
  "30064771189" -> "30064771188"  [ label = "DDG: 0"] 
  "30064771189" -> "30064771188"  [ label = "DDG: &amp;y"] 
  "30064771194" -> "30064771193"  [ label = "DDG: context"] 
  "111669149697" -> "30064771193"  [ label = "DDG: "] 
  "30064771194" -> "30064771193"  [ label = "DDG: 1"] 
  "30064771194" -> "30064771193"  [ label = "DDG: {3}"] 
  "30064771194" -> "30064771193"  [ label = "DDG: scale.shape()"] 
  "30064771194" -> "30064771193"  [ label = "DDG: &amp;batch_mean"] 
  "30064771200" -> "30064771199"  [ label = "DDG: context"] 
  "111669149697" -> "30064771199"  [ label = "DDG: "] 
  "30064771200" -> "30064771199"  [ label = "DDG: {4}"] 
  "30064771200" -> "30064771199"  [ label = "DDG: &amp;batch_var"] 
  "30064771200" -> "30064771199"  [ label = "DDG: scale.shape()"] 
  "30064771200" -> "30064771199"  [ label = "DDG: 2"] 
  "30064771206" -> "30064771205"  [ label = "DDG: context"] 
  "111669149697" -> "30064771205"  [ label = "DDG: "] 
  "30064771206" -> "30064771205"  [ label = "DDG: 3"] 
  "30064771206" -> "30064771205"  [ label = "DDG: scale.shape()"] 
  "30064771206" -> "30064771205"  [ label = "DDG: &amp;saved_mean"] 
  "30064771211" -> "30064771210"  [ label = "DDG: context"] 
  "111669149697" -> "30064771210"  [ label = "DDG: "] 
  "30064771211" -> "30064771210"  [ label = "DDG: 4"] 
  "30064771211" -> "30064771210"  [ label = "DDG: scale.shape()"] 
  "30064771211" -> "30064771210"  [ label = "DDG: &amp;saved_maybe_inv_var"] 
  "111669149697" -> "68719476861"  [ label = "DDG: "] 
  "111669149697" -> "68719476896"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: context"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771073" -> "30064771075"  [ label = "DDG: context"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: context"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771077" -> "30064771079"  [ label = "DDG: context"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771079" -> "30064771081"  [ label = "DDG: context"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771085" -> "30064771083"  [ label = "DDG: context"] 
  "30064771085" -> "30064771083"  [ label = "DDG: 5"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: x.dims()"] 
  "30064771088" -> "30064771087"  [ label = "DDG: 4"] 
  "30064771090" -> "30064771087"  [ label = "DDG: x.dims()"] 
  "30064771090" -> "30064771087"  [ label = "DDG: 5"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: x.shape()"] 
  "30064771097" -> "30064771096"  [ label = "DDG: scale"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771099" -> "30064771098"  [ label = "DDG: scale.shape()"] 
  "30064771103" -> "30064771102"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771105" -> "30064771104"  [ label = "DDG: offset.shape()"] 
  "30064771109" -> "30064771108"  [ label = "DDG: estimated_mean"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771111" -> "30064771110"  [ label = "DDG: estimated_mean.shape()"] 
  "30064771115" -> "30064771114"  [ label = "DDG: estimated_variance"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771117" -> "30064771116"  [ label = "DDG: estimated_variance.shape()"] 
  "30064771121" -> "30064771120"  [ label = "DDG: x"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771121" -> "30064771123"  [ label = "DDG: x"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771125" -> "30064771124"  [ label = "DDG: x"] 
  "30064771125" -> "30064771124"  [ label = "DDG: tensor_format_"] 
  "30064771125" -> "30064771124"  [ label = "DDG: 'N'"] 
  "30064771127" -> "30064771126"  [ label = "DDG: x"] 
  "30064771127" -> "30064771126"  [ label = "DDG: tensor_format_"] 
  "30064771127" -> "30064771126"  [ label = "DDG: '0'"] 
  "30064771129" -> "30064771128"  [ label = "DDG: x"] 
  "30064771129" -> "30064771128"  [ label = "DDG: tensor_format_"] 
  "30064771129" -> "30064771128"  [ label = "DDG: '1'"] 
  "30064771131" -> "30064771130"  [ label = "DDG: x"] 
  "30064771131" -> "30064771130"  [ label = "DDG: tensor_format_"] 
  "30064771131" -> "30064771130"  [ label = "DDG: '2'"] 
  "30064771133" -> "30064771132"  [ label = "DDG: x"] 
  "30064771133" -> "30064771132"  [ label = "DDG: tensor_format_"] 
  "30064771133" -> "30064771132"  [ label = "DDG: 'C'"] 
  "30064771135" -> "30064771134"  [ label = "DDG: tensor_format_"] 
  "30064771135" -> "30064771134"  [ label = "DDG: in_batch"] 
  "30064771135" -> "30064771134"  [ label = "DDG: {{in_planes, in_rows * in_cols}}"] 
  "30064771135" -> "30064771134"  [ label = "DDG: in_depth"] 
  "30064771123" -> "30064771143"  [ label = "DDG: x"] 
  "30064771140" -> "30064771143"  [ label = "DDG: x"] 
  "111669149697" -> "30064771143"  [ label = "DDG: "] 
  "30064771135" -> "30064771143"  [ label = "DDG: tensor_format_"] 
  "30064771146" -> "30064771145"  [ label = "DDG: scale"] 
  "30064771142" -> "30064771145"  [ label = "DDG: num_channels"] 
  "111669149697" -> "30064771145"  [ label = "DDG: "] 
  "111669149697" -> "30064771147"  [ label = "DDG: "] 
  "30064771148" -> "30064771147"  [ label = "DDG: scale"] 
  "30064771145" -> "30064771147"  [ label = "DDG: num_channels"] 
  "30064771151" -> "30064771150"  [ label = "DDG: offset"] 
  "30064771147" -> "30064771150"  [ label = "DDG: num_channels"] 
  "111669149697" -> "30064771150"  [ label = "DDG: "] 
  "111669149697" -> "30064771152"  [ label = "DDG: "] 
  "30064771153" -> "30064771152"  [ label = "DDG: offset"] 
  "30064771150" -> "30064771152"  [ label = "DDG: num_channels"] 
  "30064771155" -> "30064771154"  [ label = "DDG: estimated_mean"] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "30064771162" -> "30064771161"  [ label = "DDG: estimated_variance"] 
  "111669149697" -> "30064771161"  [ label = "DDG: "] 
  "111669149697" -> "30064771177"  [ label = "DDG: "] 
  "30064771140" -> "30064771187"  [ label = "DDG: dest_shape"] 
  "111669149697" -> "30064771187"  [ label = "DDG: "] 
  "30064771122" -> "30064771187"  [ label = "DDG: x_shape"] 
  "30064771149" -> "30064771189"  [ label = "DDG: context"] 
  "30064771156" -> "30064771189"  [ label = "DDG: context"] 
  "30064771163" -> "30064771189"  [ label = "DDG: context"] 
  "30064771168" -> "30064771189"  [ label = "DDG: context"] 
  "30064771179" -> "30064771189"  [ label = "DDG: context"] 
  "111669149697" -> "30064771189"  [ label = "DDG: "] 
  "30064771190" -> "30064771189"  [ label = "DDG: 0"] 
  "30064771186" -> "30064771189"  [ label = "DDG: alloc_shape"] 
  "30064771185" -> "30064771189"  [ label = "DDG: y"] 
  "30064771188" -> "30064771194"  [ label = "DDG: context"] 
  "111669149697" -> "30064771194"  [ label = "DDG: "] 
  "30064771195" -> "30064771194"  [ label = "DDG: 3"] 
  "30064771196" -> "30064771194"  [ label = "DDG: scale"] 
  "30064771192" -> "30064771194"  [ label = "DDG: batch_mean"] 
  "30064771193" -> "30064771200"  [ label = "DDG: context"] 
  "111669149697" -> "30064771200"  [ label = "DDG: "] 
  "30064771201" -> "30064771200"  [ label = "DDG: 4"] 
  "30064771202" -> "30064771200"  [ label = "DDG: scale"] 
  "30064771198" -> "30064771200"  [ label = "DDG: batch_var"] 
  "30064771199" -> "30064771206"  [ label = "DDG: context"] 
  "111669149697" -> "30064771206"  [ label = "DDG: "] 
  "30064771207" -> "30064771206"  [ label = "DDG: scale"] 
  "30064771204" -> "30064771206"  [ label = "DDG: saved_mean"] 
  "30064771205" -> "30064771211"  [ label = "DDG: context"] 
  "111669149697" -> "30064771211"  [ label = "DDG: "] 
  "30064771212" -> "30064771211"  [ label = "DDG: scale"] 
  "30064771209" -> "30064771211"  [ label = "DDG: saved_maybe_inv_var"] 
  "30064771089" -> "30064771088"  [ label = "DDG: x"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771091" -> "30064771090"  [ label = "DDG: x"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771094" -> "30064771093"  [ label = "DDG: x"] 
  "30064771074" -> "30064771097"  [ label = "DDG: scale"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771100" -> "30064771099"  [ label = "DDG: scale"] 
  "30064771076" -> "30064771103"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771106" -> "30064771105"  [ label = "DDG: offset"] 
  "30064771078" -> "30064771109"  [ label = "DDG: estimated_mean"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771112" -> "30064771111"  [ label = "DDG: estimated_mean"] 
  "30064771080" -> "30064771115"  [ label = "DDG: estimated_variance"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771118" -> "30064771117"  [ label = "DDG: estimated_variance"] 
  "30064771094" -> "30064771121"  [ label = "DDG: x"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771113" -> "30064771139"  [ label = "DDG: context"] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771140" -> "30064771139"  [ label = "DDG: x"] 
  "30064771140" -> "30064771139"  [ label = "DDG: dest_shape"] 
  "30064771141" -> "30064771139"  [ label = "DDG: &quot;Error during tensor copy.&quot;"] 
  "30064771100" -> "30064771146"  [ label = "DDG: scale"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771146" -> "30064771148"  [ label = "DDG: scale"] 
  "111669149697" -> "30064771148"  [ label = "DDG: "] 
  "30064771106" -> "30064771151"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771151" -> "30064771153"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771153"  [ label = "DDG: "] 
  "30064771112" -> "30064771155"  [ label = "DDG: estimated_mean"] 
  "111669149697" -> "30064771155"  [ label = "DDG: "] 
  "30064771149" -> "30064771156"  [ label = "DDG: context"] 
  "111669149697" -> "30064771156"  [ label = "DDG: "] 
  "30064771157" -> "30064771156"  [ label = "DDG: estimated_mean.NumElements()"] 
  "30064771157" -> "30064771156"  [ label = "DDG: num_channels"] 
  "30064771159" -> "30064771156"  [ label = "DDG: &quot;mean must be empty or have the same number of &quot;
                      &quot;elements as the channels of x, got &quot;"] 
  "30064771159" -> "30064771156"  [ label = "DDG: estimated_mean.NumElements()"] 
  "30064771159" -> "30064771156"  [ label = "DDG: &quot; and &quot;"] 
  "30064771159" -> "30064771156"  [ label = "DDG: num_channels"] 
  "30064771118" -> "30064771162"  [ label = "DDG: estimated_variance"] 
  "111669149697" -> "30064771162"  [ label = "DDG: "] 
  "30064771149" -> "30064771163"  [ label = "DDG: context"] 
  "30064771156" -> "30064771163"  [ label = "DDG: context"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "30064771164" -> "30064771163"  [ label = "DDG: estimated_variance.NumElements()"] 
  "30064771164" -> "30064771163"  [ label = "DDG: num_channels"] 
  "30064771166" -> "30064771163"  [ label = "DDG: &quot;variance must be empty or have the same number of &quot;
                      &quot;elements as the channels of x, got &quot;"] 
  "30064771166" -> "30064771163"  [ label = "DDG: estimated_variance.NumElements()"] 
  "30064771166" -> "30064771163"  [ label = "DDG: &quot; and &quot;"] 
  "30064771166" -> "30064771163"  [ label = "DDG: num_channels"] 
  "30064771149" -> "30064771168"  [ label = "DDG: context"] 
  "30064771156" -> "30064771168"  [ label = "DDG: context"] 
  "30064771163" -> "30064771168"  [ label = "DDG: context"] 
  "111669149697" -> "30064771168"  [ label = "DDG: "] 
  "30064771169" -> "30064771168"  [ label = "DDG: side_input-&gt;shape()"] 
  "30064771169" -> "30064771168"  [ label = "DDG: x.shape()"] 
  "30064771172" -> "30064771168"  [ label = "DDG: &quot;side_input shape must be equal to input shape: &quot;"] 
  "30064771172" -> "30064771168"  [ label = "DDG: side_input-&gt;shape().DebugString()"] 
  "30064771172" -> "30064771168"  [ label = "DDG: &quot; != &quot;"] 
  "30064771172" -> "30064771168"  [ label = "DDG: x.shape().DebugString()"] 
  "30064771149" -> "30064771179"  [ label = "DDG: context"] 
  "30064771156" -> "30064771179"  [ label = "DDG: context"] 
  "30064771163" -> "30064771179"  [ label = "DDG: context"] 
  "30064771168" -> "30064771179"  [ label = "DDG: context"] 
  "111669149697" -> "30064771179"  [ label = "DDG: "] 
  "30064771180" -> "30064771179"  [ label = "DDG: !is_training_"] 
  "30064771180" -> "30064771179"  [ label = "DDG: num_channels % 4 == 0"] 
  "30064771184" -> "30064771179"  [ label = "DDG: &quot;FusedBatchNorm with activation requires &quot;
                                  &quot;channel dimension to be a multiple of 4.&quot;"] 
  "111669149697" -> "30064771190"  [ label = "DDG: "] 
  "111669149697" -> "30064771195"  [ label = "DDG: "] 
  "30064771148" -> "30064771196"  [ label = "DDG: scale"] 
  "111669149697" -> "30064771196"  [ label = "DDG: "] 
  "111669149697" -> "30064771201"  [ label = "DDG: "] 
  "30064771196" -> "30064771202"  [ label = "DDG: scale"] 
  "111669149697" -> "30064771202"  [ label = "DDG: "] 
  "30064771202" -> "30064771207"  [ label = "DDG: scale"] 
  "111669149697" -> "30064771207"  [ label = "DDG: "] 
  "30064771207" -> "30064771212"  [ label = "DDG: scale"] 
  "111669149697" -> "30064771212"  [ label = "DDG: "] 
  "111669149697" -> "30064771214"  [ label = "DDG: "] 
  "30064771210" -> "30064771214"  [ label = "DDG: context"] 
  "30064771143" -> "30064771214"  [ label = "DDG: x"] 
  "30064771176" -> "30064771214"  [ label = "DDG: x"] 
  "30064771212" -> "30064771214"  [ label = "DDG: scale"] 
  "30064771153" -> "30064771214"  [ label = "DDG: offset"] 
  "30064771155" -> "30064771214"  [ label = "DDG: estimated_mean"] 
  "30064771160" -> "30064771214"  [ label = "DDG: estimated_mean"] 
  "30064771162" -> "30064771214"  [ label = "DDG: estimated_variance"] 
  "30064771167" -> "30064771214"  [ label = "DDG: estimated_variance"] 
  "30064771082" -> "30064771214"  [ label = "DDG: side_input"] 
  "30064771174" -> "30064771214"  [ label = "DDG: side_input"] 
  "30064771177" -> "30064771214"  [ label = "DDG: activation_mode_"] 
  "30064771185" -> "30064771214"  [ label = "DDG: y"] 
  "30064771189" -> "30064771214"  [ label = "DDG: &amp;y"] 
  "30064771192" -> "30064771214"  [ label = "DDG: batch_mean"] 
  "30064771194" -> "30064771214"  [ label = "DDG: &amp;batch_mean"] 
  "30064771198" -> "30064771214"  [ label = "DDG: batch_var"] 
  "30064771200" -> "30064771214"  [ label = "DDG: &amp;batch_var"] 
  "30064771204" -> "30064771214"  [ label = "DDG: saved_mean"] 
  "30064771206" -> "30064771214"  [ label = "DDG: &amp;saved_mean"] 
  "30064771209" -> "30064771214"  [ label = "DDG: saved_maybe_inv_var"] 
  "30064771211" -> "30064771214"  [ label = "DDG: &amp;saved_maybe_inv_var"] 
  "30064771143" -> "30064771214"  [ label = "DDG: tensor_format_"] 
  "115964116993" -> "30064771214"  [ label = "DDG: use_reserved_space"] 
  "30064771216" -> "30064771218"  [ label = "DDG: context"] 
  "30064771214" -> "30064771218"  [ label = "DDG: context"] 
  "111669149697" -> "30064771218"  [ label = "DDG: "] 
  "30064771219" -> "30064771218"  [ label = "DDG: y"] 
  "30064771219" -> "30064771218"  [ label = "DDG: *y"] 
  "30064771219" -> "30064771218"  [ label = "DDG: x_shape"] 
  "30064771221" -> "30064771218"  [ label = "DDG: &quot;Error during tensor copy.&quot;"] 
  "30064771081" -> "30064771085"  [ label = "DDG: context"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771072" -> "30064771089"  [ label = "DDG: x"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771089" -> "30064771091"  [ label = "DDG: x"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771089" -> "30064771094"  [ label = "DDG: x"] 
  "30064771091" -> "30064771094"  [ label = "DDG: x"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771097" -> "30064771100"  [ label = "DDG: scale"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771103" -> "30064771106"  [ label = "DDG: offset"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771109" -> "30064771112"  [ label = "DDG: estimated_mean"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771115" -> "30064771118"  [ label = "DDG: estimated_variance"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "30064771123" -> "30064771125"  [ label = "DDG: x"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771125" -> "30064771127"  [ label = "DDG: x"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771125" -> "30064771127"  [ label = "DDG: tensor_format_"] 
  "30064771127" -> "30064771129"  [ label = "DDG: x"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "30064771127" -> "30064771129"  [ label = "DDG: tensor_format_"] 
  "30064771129" -> "30064771131"  [ label = "DDG: x"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771129" -> "30064771131"  [ label = "DDG: tensor_format_"] 
  "30064771131" -> "30064771133"  [ label = "DDG: x"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "30064771131" -> "30064771133"  [ label = "DDG: tensor_format_"] 
  "30064771133" -> "30064771135"  [ label = "DDG: tensor_format_"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771124" -> "30064771135"  [ label = "DDG: in_batch"] 
  "30064771136" -> "30064771135"  [ label = "DDG: {in_planes, in_rows * in_cols}"] 
  "30064771132" -> "30064771135"  [ label = "DDG: in_depth"] 
  "30064771133" -> "30064771140"  [ label = "DDG: x"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771134" -> "30064771140"  [ label = "DDG: dest_shape"] 
  "111669149697" -> "30064771141"  [ label = "DDG: "] 
  "30064771158" -> "30064771157"  [ label = "DDG: estimated_mean"] 
  "30064771152" -> "30064771157"  [ label = "DDG: num_channels"] 
  "111669149697" -> "30064771157"  [ label = "DDG: "] 
  "111669149697" -> "30064771159"  [ label = "DDG: "] 
  "30064771160" -> "30064771159"  [ label = "DDG: estimated_mean"] 
  "30064771157" -> "30064771159"  [ label = "DDG: num_channels"] 
  "30064771165" -> "30064771164"  [ label = "DDG: estimated_variance"] 
  "30064771152" -> "30064771164"  [ label = "DDG: num_channels"] 
  "30064771159" -> "30064771164"  [ label = "DDG: num_channels"] 
  "111669149697" -> "30064771164"  [ label = "DDG: "] 
  "111669149697" -> "30064771166"  [ label = "DDG: "] 
  "30064771167" -> "30064771166"  [ label = "DDG: estimated_variance"] 
  "30064771164" -> "30064771166"  [ label = "DDG: num_channels"] 
  "30064771170" -> "30064771169"  [ label = "DDG: side_input"] 
  "30064771171" -> "30064771169"  [ label = "DDG: x"] 
  "111669149697" -> "30064771172"  [ label = "DDG: "] 
  "30064771173" -> "30064771172"  [ label = "DDG: side_input-&gt;shape()"] 
  "30064771175" -> "30064771172"  [ label = "DDG: x.shape()"] 
  "30064771181" -> "30064771180"  [ label = "DDG: is_training_"] 
  "30064771182" -> "30064771180"  [ label = "DDG: num_channels % 4"] 
  "30064771182" -> "30064771180"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771184"  [ label = "DDG: "] 
  "111669149697" -> "30064771216"  [ label = "DDG: "] 
  "30064771210" -> "30064771216"  [ label = "DDG: context"] 
  "30064771143" -> "30064771216"  [ label = "DDG: x"] 
  "30064771176" -> "30064771216"  [ label = "DDG: x"] 
  "30064771212" -> "30064771216"  [ label = "DDG: scale"] 
  "30064771153" -> "30064771216"  [ label = "DDG: offset"] 
  "30064771155" -> "30064771216"  [ label = "DDG: estimated_mean"] 
  "30064771160" -> "30064771216"  [ label = "DDG: estimated_mean"] 
  "30064771162" -> "30064771216"  [ label = "DDG: estimated_variance"] 
  "30064771167" -> "30064771216"  [ label = "DDG: estimated_variance"] 
  "30064771082" -> "30064771216"  [ label = "DDG: side_input"] 
  "30064771174" -> "30064771216"  [ label = "DDG: side_input"] 
  "30064771177" -> "30064771216"  [ label = "DDG: activation_mode_"] 
  "30064771185" -> "30064771216"  [ label = "DDG: y"] 
  "30064771189" -> "30064771216"  [ label = "DDG: &amp;y"] 
  "30064771192" -> "30064771216"  [ label = "DDG: batch_mean"] 
  "30064771194" -> "30064771216"  [ label = "DDG: &amp;batch_mean"] 
  "30064771198" -> "30064771216"  [ label = "DDG: batch_var"] 
  "30064771200" -> "30064771216"  [ label = "DDG: &amp;batch_var"] 
  "30064771204" -> "30064771216"  [ label = "DDG: saved_mean"] 
  "30064771206" -> "30064771216"  [ label = "DDG: &amp;saved_mean"] 
  "30064771209" -> "30064771216"  [ label = "DDG: saved_maybe_inv_var"] 
  "30064771211" -> "30064771216"  [ label = "DDG: &amp;saved_maybe_inv_var"] 
  "30064771143" -> "30064771216"  [ label = "DDG: tensor_format_"] 
  "115964116993" -> "30064771216"  [ label = "DDG: use_reserved_space"] 
  "30064771189" -> "30064771219"  [ label = "DDG: &amp;y"] 
  "30064771216" -> "30064771219"  [ label = "DDG: y"] 
  "30064771214" -> "30064771219"  [ label = "DDG: y"] 
  "111669149697" -> "30064771219"  [ label = "DDG: "] 
  "30064771122" -> "30064771219"  [ label = "DDG: x_shape"] 
  "111669149697" -> "30064771221"  [ label = "DDG: "] 
  "30064771137" -> "30064771136"  [ label = "DDG: in_planes"] 
  "30064771137" -> "30064771136"  [ label = "DDG: in_rows * in_cols"] 
  "30064771155" -> "30064771158"  [ label = "DDG: estimated_mean"] 
  "111669149697" -> "30064771158"  [ label = "DDG: "] 
  "30064771158" -> "30064771160"  [ label = "DDG: estimated_mean"] 
  "111669149697" -> "30064771160"  [ label = "DDG: "] 
  "30064771162" -> "30064771165"  [ label = "DDG: estimated_variance"] 
  "111669149697" -> "30064771165"  [ label = "DDG: "] 
  "30064771165" -> "30064771167"  [ label = "DDG: estimated_variance"] 
  "111669149697" -> "30064771167"  [ label = "DDG: "] 
  "30064771082" -> "30064771170"  [ label = "DDG: side_input"] 
  "111669149697" -> "30064771170"  [ label = "DDG: "] 
  "30064771143" -> "30064771171"  [ label = "DDG: x"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "30064771174" -> "30064771173"  [ label = "DDG: side_input"] 
  "30064771176" -> "30064771175"  [ label = "DDG: x"] 
  "111669149697" -> "30064771181"  [ label = "DDG: "] 
  "30064771183" -> "30064771182"  [ label = "DDG: num_channels"] 
  "30064771183" -> "30064771182"  [ label = "DDG: 4"] 
  "111669149697" -> "30064771182"  [ label = "DDG: "] 
  "30064771126" -> "30064771137"  [ label = "DDG: in_planes"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771138" -> "30064771137"  [ label = "DDG: in_rows"] 
  "30064771138" -> "30064771137"  [ label = "DDG: in_cols"] 
  "30064771170" -> "30064771174"  [ label = "DDG: side_input"] 
  "111669149697" -> "30064771174"  [ label = "DDG: "] 
  "30064771171" -> "30064771176"  [ label = "DDG: x"] 
  "111669149697" -> "30064771176"  [ label = "DDG: "] 
  "30064771152" -> "30064771183"  [ label = "DDG: num_channels"] 
  "30064771159" -> "30064771183"  [ label = "DDG: num_channels"] 
  "30064771166" -> "30064771183"  [ label = "DDG: num_channels"] 
  "111669149697" -> "30064771183"  [ label = "DDG: "] 
  "30064771128" -> "30064771138"  [ label = "DDG: in_rows"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771130" -> "30064771138"  [ label = "DDG: in_cols"] 
  "68719476769" -> "30064771135"  [ label = "CDG: "] 
  "68719476769" -> "30064771136"  [ label = "CDG: "] 
  "68719476769" -> "30064771137"  [ label = "CDG: "] 
  "68719476769" -> "30064771138"  [ label = "CDG: "] 
  "68719476769" -> "30064771139"  [ label = "CDG: "] 
  "68719476769" -> "30064771140"  [ label = "CDG: "] 
  "68719476769" -> "30064771141"  [ label = "CDG: "] 
  "68719476769" -> "30064771127"  [ label = "CDG: "] 
  "68719476769" -> "30064771128"  [ label = "CDG: "] 
  "68719476769" -> "30064771129"  [ label = "CDG: "] 
  "68719476769" -> "30064771130"  [ label = "CDG: "] 
  "68719476769" -> "30064771131"  [ label = "CDG: "] 
  "68719476769" -> "30064771132"  [ label = "CDG: "] 
  "68719476769" -> "30064771133"  [ label = "CDG: "] 
  "68719476769" -> "30064771134"  [ label = "CDG: "] 
  "68719476769" -> "30064771124"  [ label = "CDG: "] 
  "68719476769" -> "30064771125"  [ label = "CDG: "] 
  "68719476769" -> "30064771126"  [ label = "CDG: "] 
  "30064771154" -> "30064771159"  [ label = "CDG: "] 
  "30064771154" -> "30064771160"  [ label = "CDG: "] 
  "30064771154" -> "30064771156"  [ label = "CDG: "] 
  "30064771154" -> "30064771157"  [ label = "CDG: "] 
  "30064771154" -> "30064771158"  [ label = "CDG: "] 
  "30064771161" -> "30064771167"  [ label = "CDG: "] 
  "30064771161" -> "30064771163"  [ label = "CDG: "] 
  "30064771161" -> "30064771164"  [ label = "CDG: "] 
  "30064771161" -> "30064771165"  [ label = "CDG: "] 
  "30064771161" -> "30064771166"  [ label = "CDG: "] 
  "68719476821" -> "30064771175"  [ label = "CDG: "] 
  "68719476821" -> "30064771176"  [ label = "CDG: "] 
  "68719476821" -> "30064771168"  [ label = "CDG: "] 
  "68719476821" -> "30064771169"  [ label = "CDG: "] 
  "68719476821" -> "30064771170"  [ label = "CDG: "] 
  "68719476821" -> "30064771171"  [ label = "CDG: "] 
  "68719476821" -> "30064771172"  [ label = "CDG: "] 
  "68719476821" -> "30064771173"  [ label = "CDG: "] 
  "68719476821" -> "30064771174"  [ label = "CDG: "] 
  "30064771177" -> "30064771184"  [ label = "CDG: "] 
  "30064771177" -> "30064771179"  [ label = "CDG: "] 
  "30064771177" -> "30064771180"  [ label = "CDG: "] 
  "30064771177" -> "30064771181"  [ label = "CDG: "] 
  "68719476861" -> "30064771214"  [ label = "CDG: "] 
  "68719476861" -> "30064771215"  [ label = "CDG: "] 
  "68719476861" -> "30064771216"  [ label = "CDG: "] 
  "68719476861" -> "30064771217"  [ label = "CDG: "] 
  "68719476896" -> "30064771218"  [ label = "CDG: "] 
  "68719476896" -> "30064771219"  [ label = "CDG: "] 
  "68719476896" -> "30064771220"  [ label = "CDG: "] 
  "68719476896" -> "30064771221"  [ label = "CDG: "] 
  "30064771088" -> "30064771090"  [ label = "CDG: "] 
  "30064771088" -> "30064771091"  [ label = "CDG: "] 
  "30064771181" -> "30064771183"  [ label = "CDG: "] 
  "30064771181" -> "30064771182"  [ label = "CDG: "] 
}
"""
)
