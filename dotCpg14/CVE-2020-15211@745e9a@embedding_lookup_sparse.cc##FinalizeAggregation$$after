[33mval[0m [36mres2173[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "FinalizeAggregation" {  
"111669149697" [label = <(METHOD,FinalizeAggregation)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,TfLiteCombinerType combiner)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,int num_elements)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,float current_total_weight)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,float current_squares_weight)<SUB>3</SUB>> ]
"115964116996" [label = <(PARAM,int embedding_size)<SUB>3</SUB>> ]
"115964116997" [label = <(PARAM,float* output)<SUB>4</SUB>> ]
"25769803777" [label = <(BLOCK,{
  if (combiner != kTfLiteCombinerTypeSum &amp;&amp; n...,{
  if (combiner != kTfLiteCombinerTypeSum &amp;&amp; n...)<SUB>4</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (combiner != kTfLiteCombinerTypeSum &amp;&amp; num_elements &gt; 0))<SUB>5</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.logicalAnd,combiner != kTfLiteCombinerTypeSum &amp;&amp; num_eleme...)<SUB>5</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.notEquals,combiner != kTfLiteCombinerTypeSum)<SUB>5</SUB>> ]
"68719476736" [label = <(IDENTIFIER,combiner,combiner != kTfLiteCombinerTypeSum)<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,kTfLiteCombinerTypeSum,combiner != kTfLiteCombinerTypeSum)<SUB>5</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.greaterThan,num_elements &gt; 0)<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,num_elements,num_elements &gt; 0)<SUB>5</SUB>> ]
"90194313216" [label = <(LITERAL,0,num_elements &gt; 0)<SUB>5</SUB>> ]
"25769803778" [label = <(BLOCK,{
    float multiplier = 1.0;
    switch (combi...,{
    float multiplier = 1.0;
    switch (combi...)<SUB>5</SUB>> ]
"94489280512" [label = <(LOCAL,float multiplier: float)<SUB>6</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,multiplier = 1.0)<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,multiplier,multiplier = 1.0)<SUB>6</SUB>> ]
"90194313217" [label = <(LITERAL,1.0,multiplier = 1.0)<SUB>6</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,SWITCH,switch(combiner))<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,combiner,switch(combiner))<SUB>7</SUB>> ]
"25769803779" [label = <(BLOCK,{
      case kTfLiteCombinerTypeMean:
        m...,{
      case kTfLiteCombinerTypeMean:
        m...)<SUB>7</SUB>> ]
"81604378624" [label = <(JUMP_TARGET,case)<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,kTfLiteCombinerTypeMean,{
      case kTfLiteCombinerTypeMean:
        m...)<SUB>8</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,multiplier = current_total_weight)<SUB>9</SUB>> ]
"68719476742" [label = <(IDENTIFIER,multiplier,multiplier = current_total_weight)<SUB>9</SUB>> ]
"68719476743" [label = <(IDENTIFIER,current_total_weight,multiplier = current_total_weight)<SUB>9</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,BREAK,break;)<SUB>10</SUB>> ]
"81604378625" [label = <(JUMP_TARGET,case)<SUB>11</SUB>> ]
"68719476744" [label = <(IDENTIFIER,kTfLiteCombinerTypeSqrtn,{
      case kTfLiteCombinerTypeMean:
        m...)<SUB>11</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,multiplier = std::sqrt(current_squares_weight))<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,multiplier,multiplier = std::sqrt(current_squares_weight))<SUB>12</SUB>> ]
"30064771078" [label = <(sqrt,std::sqrt(current_squares_weight))<SUB>12</SUB>> ]
"68719476746" [label = <(IDENTIFIER,current_squares_weight,std::sqrt(current_squares_weight))<SUB>12</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,BREAK,break;)<SUB>13</SUB>> ]
"81604378626" [label = <(JUMP_TARGET,default)<SUB>14</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,BREAK,break;)<SUB>15</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,FOR,for (int k = 0;k &lt; embedding_size;k++))<SUB>17</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>> ]
"94489280513" [label = <(LOCAL,int k: int)<SUB>17</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,k = 0)<SUB>17</SUB>> ]
"68719476747" [label = <(IDENTIFIER,k,k = 0)<SUB>17</SUB>> ]
"90194313218" [label = <(LITERAL,0,k = 0)<SUB>17</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.lessThan,k &lt; embedding_size)<SUB>17</SUB>> ]
"68719476748" [label = <(IDENTIFIER,k,k &lt; embedding_size)<SUB>17</SUB>> ]
"68719476749" [label = <(IDENTIFIER,embedding_size,k &lt; embedding_size)<SUB>17</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.postIncrement,k++)<SUB>17</SUB>> ]
"68719476750" [label = <(IDENTIFIER,k,k++)<SUB>17</SUB>> ]
"25769803781" [label = <(BLOCK,{
      output[k] /= multiplier;
    },{
      output[k] /= multiplier;
    })<SUB>17</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignmentDivision,output[k] /= multiplier)<SUB>18</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.indirectIndexAccess,output[k])<SUB>18</SUB>> ]
"68719476751" [label = <(IDENTIFIER,output,output[k] /= multiplier)<SUB>18</SUB>> ]
"68719476752" [label = <(IDENTIFIER,k,output[k] /= multiplier)<SUB>18</SUB>> ]
"68719476753" [label = <(IDENTIFIER,multiplier,output[k] /= multiplier)<SUB>18</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "25769803778" -> "94489280512"  [ label = "AST: "] 
  "25769803778" -> "30064771075"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "47244640261"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "47244640257" -> "68719476740"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "81604378624"  [ label = "AST: "] 
  "25769803779" -> "68719476741"  [ label = "AST: "] 
  "25769803779" -> "30064771076"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "25769803779" -> "81604378625"  [ label = "AST: "] 
  "25769803779" -> "68719476744"  [ label = "AST: "] 
  "25769803779" -> "30064771077"  [ label = "AST: "] 
  "25769803779" -> "47244640259"  [ label = "AST: "] 
  "25769803779" -> "81604378626"  [ label = "AST: "] 
  "25769803779" -> "47244640260"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771076" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "68719476745"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "68719476746"  [ label = "AST: "] 
  "47244640261" -> "25769803780"  [ label = "AST: "] 
  "47244640261" -> "30064771080"  [ label = "AST: "] 
  "47244640261" -> "30064771081"  [ label = "AST: "] 
  "47244640261" -> "25769803781"  [ label = "AST: "] 
  "25769803780" -> "94489280513"  [ label = "AST: "] 
  "25769803780" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476747"  [ label = "AST: "] 
  "30064771079" -> "90194313218"  [ label = "AST: "] 
  "30064771080" -> "68719476748"  [ label = "AST: "] 
  "30064771080" -> "68719476749"  [ label = "AST: "] 
  "30064771081" -> "68719476750"  [ label = "AST: "] 
  "25769803781" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476753"  [ label = "AST: "] 
  "30064771083" -> "68719476751"  [ label = "AST: "] 
  "30064771083" -> "68719476752"  [ label = "AST: "] 
  "30064771072" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "68719476740"  [ label = "CFG: "] 
  "68719476740" -> "30064771076"  [ label = "CFG: "] 
  "68719476740" -> "30064771078"  [ label = "CFG: "] 
  "68719476740" -> "30064771079"  [ label = "CFG: "] 
  "30064771080" -> "128849018880"  [ label = "CFG: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "115964116993" -> "128849018880"  [ label = "DDG: num_elements"] 
  "115964116994" -> "128849018880"  [ label = "DDG: current_total_weight"] 
  "115964116995" -> "128849018880"  [ label = "DDG: current_squares_weight"] 
  "115964116997" -> "128849018880"  [ label = "DDG: output"] 
  "30064771073" -> "128849018880"  [ label = "DDG: combiner"] 
  "30064771072" -> "128849018880"  [ label = "DDG: combiner != kTfLiteCombinerTypeSum"] 
  "30064771074" -> "128849018880"  [ label = "DDG: num_elements"] 
  "30064771072" -> "128849018880"  [ label = "DDG: num_elements &gt; 0"] 
  "30064771072" -> "128849018880"  [ label = "DDG: combiner != kTfLiteCombinerTypeSum &amp;&amp; num_elements &gt; 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: multiplier"] 
  "30064771075" -> "128849018880"  [ label = "DDG: multiplier = 1.0"] 
  "30064771077" -> "128849018880"  [ label = "DDG: multiplier"] 
  "30064771078" -> "128849018880"  [ label = "DDG: current_squares_weight"] 
  "30064771077" -> "128849018880"  [ label = "DDG: std::sqrt(current_squares_weight)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: multiplier = std::sqrt(current_squares_weight)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: multiplier"] 
  "30064771076" -> "128849018880"  [ label = "DDG: current_total_weight"] 
  "30064771076" -> "128849018880"  [ label = "DDG: multiplier = current_total_weight"] 
  "30064771079" -> "128849018880"  [ label = "DDG: k = 0"] 
  "30064771080" -> "128849018880"  [ label = "DDG: k"] 
  "30064771080" -> "128849018880"  [ label = "DDG: embedding_size"] 
  "30064771080" -> "128849018880"  [ label = "DDG: k &lt; embedding_size"] 
  "30064771081" -> "128849018880"  [ label = "DDG: k++"] 
  "30064771073" -> "128849018880"  [ label = "DDG: kTfLiteCombinerTypeSum"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: combiner"] 
  "30064771073" -> "30064771072"  [ label = "DDG: kTfLiteCombinerTypeSum"] 
  "30064771074" -> "30064771072"  [ label = "DDG: num_elements"] 
  "30064771074" -> "30064771072"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: combiner"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116993" -> "30064771074"  [ label = "DDG: num_elements"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "68719476740"  [ label = "DDG: "] 
  "111669149697" -> "68719476741"  [ label = "DDG: "] 
  "115964116994" -> "30064771076"  [ label = "DDG: current_total_weight"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "111669149697" -> "68719476744"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: current_squares_weight"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771079" -> "30064771080"  [ label = "DDG: k"] 
  "30064771081" -> "30064771080"  [ label = "DDG: k"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "115964116996" -> "30064771080"  [ label = "DDG: embedding_size"] 
  "30064771080" -> "30064771081"  [ label = "DDG: k"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771075" -> "30064771082"  [ label = "DDG: multiplier"] 
  "30064771077" -> "30064771082"  [ label = "DDG: multiplier"] 
  "30064771076" -> "30064771082"  [ label = "DDG: multiplier"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "115964116997" -> "30064771082"  [ label = "DDG: output"] 
  "115964116995" -> "30064771078"  [ label = "DDG: current_squares_weight"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "30064771079"  [ label = "CDG: "] 
  "30064771072" -> "30064771080"  [ label = "CDG: "] 
  "30064771072" -> "68719476740"  [ label = "CDG: "] 
  "30064771073" -> "30064771074"  [ label = "CDG: "] 
  "68719476740" -> "30064771078"  [ label = "CDG: "] 
  "68719476740" -> "30064771077"  [ label = "CDG: "] 
  "68719476740" -> "30064771076"  [ label = "CDG: "] 
  "30064771080" -> "30064771083"  [ label = "CDG: "] 
  "30064771080" -> "30064771082"  [ label = "CDG: "] 
  "30064771080" -> "30064771081"  [ label = "CDG: "] 
  "30064771080" -> "30064771080"  [ label = "CDG: "] 
}
"""
)
