[33mval[0m [36mres1823[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "SigmoidPrepare" {  
"111669149699" [label = <(METHOD,SigmoidPrepare)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,TfLiteContext* context)<SUB>1</SUB>> ]
"115964116995" [label = <(PARAM,TfLiteNode* node)<SUB>1</SUB>> ]
"25769803779" [label = <(BLOCK,{
  OpData* data = reinterpret_cast&lt;OpData*&gt;(no...,{
  OpData* data = reinterpret_cast&lt;OpData*&gt;(no...)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,OpData* data: OpData*)<SUB>2</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,* data = reinterpret_cast&lt;OpData*&gt;(node-&gt;user_d...)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,data,* data = reinterpret_cast&lt;OpData*&gt;(node-&gt;user_d...)<SUB>2</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;OpData*&gt;(node-&gt;user_data))<SUB>2</SUB>> ]
"184683593728" [label = <(UNKNOWN,OpData*,OpData*)<SUB>2</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.indirectFieldAccess,node-&gt;user_data)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,node,reinterpret_cast&lt;OpData*&gt;(node-&gt;user_data))<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,user_data,user_data)<SUB>2</SUB>> ]
"30064771083" [label = <(TF_LITE_ENSURE_EQ,TF_LITE_ENSURE_EQ(context, NumInputs(node), 1))<SUB>4</SUB>> ]
"68719476740" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_EQ(context, NumInputs(node), 1))<SUB>4</SUB>> ]
"30064771084" [label = <(NumInputs,NumInputs(node))<SUB>4</SUB>> ]
"68719476741" [label = <(IDENTIFIER,node,NumInputs(node))<SUB>4</SUB>> ]
"90194313220" [label = <(LITERAL,1,TF_LITE_ENSURE_EQ(context, NumInputs(node), 1))<SUB>4</SUB>> ]
"30064771085" [label = <(TF_LITE_ENSURE_EQ,TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1))<SUB>5</SUB>> ]
"68719476742" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1))<SUB>5</SUB>> ]
"30064771086" [label = <(NumOutputs,NumOutputs(node))<SUB>5</SUB>> ]
"68719476743" [label = <(IDENTIFIER,node,NumOutputs(node))<SUB>5</SUB>> ]
"90194313221" [label = <(LITERAL,1,TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1))<SUB>5</SUB>> ]
"94489280513" [label = <(LOCAL,const TfLiteTensor* input: TfLiteTensor*)<SUB>6</SUB>> ]
"30064771087" [label = <(TF_LITE_ENSURE_OK,TF_LITE_ENSURE_OK(context, GetInputSafe(context...)<SUB>7</SUB>> ]
"68719476744" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_OK(context, GetInputSafe(context...)<SUB>7</SUB>> ]
"30064771088" [label = <(GetInputSafe,GetInputSafe(context, node, 0, &amp;input))<SUB>7</SUB>> ]
"68719476745" [label = <(IDENTIFIER,context,GetInputSafe(context, node, 0, &amp;input))<SUB>7</SUB>> ]
"68719476746" [label = <(IDENTIFIER,node,GetInputSafe(context, node, 0, &amp;input))<SUB>7</SUB>> ]
"90194313222" [label = <(LITERAL,0,GetInputSafe(context, node, 0, &amp;input))<SUB>7</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.addressOf,&amp;input)<SUB>7</SUB>> ]
"68719476747" [label = <(IDENTIFIER,input,GetInputSafe(context, node, 0, &amp;input))<SUB>7</SUB>> ]
"94489280514" [label = <(LOCAL,TfLiteTensor* output: TfLiteTensor*)<SUB>8</SUB>> ]
"30064771090" [label = <(TF_LITE_ENSURE_OK,TF_LITE_ENSURE_OK(context, GetOutputSafe(contex...)<SUB>9</SUB>> ]
"68719476748" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_OK(context, GetOutputSafe(contex...)<SUB>9</SUB>> ]
"30064771091" [label = <(GetOutputSafe,GetOutputSafe(context, node, 0, &amp;output))<SUB>9</SUB>> ]
"68719476749" [label = <(IDENTIFIER,context,GetOutputSafe(context, node, 0, &amp;output))<SUB>9</SUB>> ]
"68719476750" [label = <(IDENTIFIER,node,GetOutputSafe(context, node, 0, &amp;output))<SUB>9</SUB>> ]
"90194313223" [label = <(LITERAL,0,GetOutputSafe(context, node, 0, &amp;output))<SUB>9</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.addressOf,&amp;output)<SUB>9</SUB>> ]
"68719476751" [label = <(IDENTIFIER,output,GetOutputSafe(context, node, 0, &amp;output))<SUB>9</SUB>> ]
"30064771093" [label = <(TF_LITE_ENSURE_TYPES_EQ,TF_LITE_ENSURE_TYPES_EQ(context, input-&gt;type, o...)<SUB>10</SUB>> ]
"68719476752" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_TYPES_EQ(context, input-&gt;type, o...)<SUB>10</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;type)<SUB>10</SUB>> ]
"68719476753" [label = <(IDENTIFIER,input,TF_LITE_ENSURE_TYPES_EQ(context, input-&gt;type, o...)<SUB>10</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,type,type)<SUB>10</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;type)<SUB>10</SUB>> ]
"68719476754" [label = <(IDENTIFIER,output,TF_LITE_ENSURE_TYPES_EQ(context, input-&gt;type, o...)<SUB>10</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,type,type)<SUB>10</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (kernel_type == kFixedPointOptimized))<SUB>12</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.equals,kernel_type == kFixedPointOptimized)<SUB>12</SUB>> ]
"68719476755" [label = <(IDENTIFIER,kernel_type,kernel_type == kFixedPointOptimized)<SUB>12</SUB>> ]
"68719476756" [label = <(IDENTIFIER,kFixedPointOptimized,kernel_type == kFixedPointOptimized)<SUB>12</SUB>> ]
"25769803780" [label = <(BLOCK,{
    if (input-&gt;type == kTfLiteUInt8 || input-...,{
    if (input-&gt;type == kTfLiteUInt8 || input-...)<SUB>12</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (input-&gt;type == kTfLiteUInt8 || input-&gt;type == kTfLiteInt8))<SUB>13</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.logicalOr,input-&gt;type == kTfLiteUInt8 || input-&gt;type == k...)<SUB>13</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.equals,input-&gt;type == kTfLiteUInt8)<SUB>13</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;type)<SUB>13</SUB>> ]
"68719476757" [label = <(IDENTIFIER,input,input-&gt;type == kTfLiteUInt8)<SUB>13</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,type,type)<SUB>13</SUB>> ]
"68719476758" [label = <(IDENTIFIER,kTfLiteUInt8,input-&gt;type == kTfLiteUInt8)<SUB>13</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.equals,input-&gt;type == kTfLiteInt8)<SUB>13</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;type)<SUB>13</SUB>> ]
"68719476759" [label = <(IDENTIFIER,input,input-&gt;type == kTfLiteInt8)<SUB>13</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,type,type)<SUB>13</SUB>> ]
"68719476760" [label = <(IDENTIFIER,kTfLiteInt8,input-&gt;type == kTfLiteInt8)<SUB>13</SUB>> ]
"25769803781" [label = <(BLOCK,{
      if (input-&gt;type == kTfLiteUInt8) {
    ...,{
      if (input-&gt;type == kTfLiteUInt8) {
    ...)<SUB>13</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (input-&gt;type == kTfLiteUInt8))<SUB>14</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.equals,input-&gt;type == kTfLiteUInt8)<SUB>14</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;type)<SUB>14</SUB>> ]
"68719476761" [label = <(IDENTIFIER,input,input-&gt;type == kTfLiteUInt8)<SUB>14</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,type,type)<SUB>14</SUB>> ]
"68719476762" [label = <(IDENTIFIER,kTfLiteUInt8,input-&gt;type == kTfLiteUInt8)<SUB>14</SUB>> ]
"25769803782" [label = <(BLOCK,{
        TF_LITE_ENSURE_EQ(context, output-&gt;pa...,{
        TF_LITE_ENSURE_EQ(context, output-&gt;pa...)<SUB>14</SUB>> ]
"30064771104" [label = <(TF_LITE_ENSURE_EQ,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>15</SUB>> ]
"68719476763" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>15</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.fieldAccess,output-&gt;params.zero_point)<SUB>15</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;params)<SUB>15</SUB>> ]
"68719476764" [label = <(IDENTIFIER,output,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>15</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,params,params)<SUB>15</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,zero_point,zero_point)<SUB>15</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;uint8_t&gt;::min())<SUB>16</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;uint8_t)<SUB>16</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>16</SUB>> ]
"68719476765" [label = <(IDENTIFIER,std,std::numeric_limits&lt;uint8_t)<SUB>16</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>16</SUB>> ]
"68719476766" [label = <(IDENTIFIER,uint8_t,std::numeric_limits&lt;uint8_t)<SUB>16</SUB>> ]
"30064771110" [label = <(min,::min())<SUB>16</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (input-&gt;type == kTfLiteInt8))<SUB>18</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.equals,input-&gt;type == kTfLiteInt8)<SUB>18</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;type)<SUB>18</SUB>> ]
"68719476767" [label = <(IDENTIFIER,input,input-&gt;type == kTfLiteInt8)<SUB>18</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,type,type)<SUB>18</SUB>> ]
"68719476768" [label = <(IDENTIFIER,kTfLiteInt8,input-&gt;type == kTfLiteInt8)<SUB>18</SUB>> ]
"25769803783" [label = <(BLOCK,{
        TF_LITE_ENSURE_EQ(context, output-&gt;pa...,{
        TF_LITE_ENSURE_EQ(context, output-&gt;pa...)<SUB>18</SUB>> ]
"30064771113" [label = <(TF_LITE_ENSURE_EQ,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>19</SUB>> ]
"68719476769" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>19</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.fieldAccess,output-&gt;params.zero_point)<SUB>19</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;params)<SUB>19</SUB>> ]
"68719476770" [label = <(IDENTIFIER,output,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>19</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,params,params)<SUB>19</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,zero_point,zero_point)<SUB>19</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int8_t&gt;::min())<SUB>20</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int8_t)<SUB>20</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>20</SUB>> ]
"68719476771" [label = <(IDENTIFIER,std,std::numeric_limits&lt;int8_t)<SUB>20</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>20</SUB>> ]
"68719476772" [label = <(IDENTIFIER,int8_t,std::numeric_limits&lt;int8_t)<SUB>20</SUB>> ]
"30064771119" [label = <(min,::min())<SUB>20</SUB>> ]
"30064771120" [label = <(TF_LITE_ENSURE,TF_LITE_ENSURE(context, output-&gt;params.scale ==...)<SUB>22</SUB>> ]
"68719476773" [label = <(IDENTIFIER,context,TF_LITE_ENSURE(context, output-&gt;params.scale ==...)<SUB>22</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.equals,output-&gt;params.scale == 1. / 256)<SUB>22</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.fieldAccess,output-&gt;params.scale)<SUB>22</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;params)<SUB>22</SUB>> ]
"68719476774" [label = <(IDENTIFIER,output,output-&gt;params.scale == 1. / 256)<SUB>22</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,params,params)<SUB>22</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>22</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.division,1. / 256)<SUB>22</SUB>> ]
"90194313224" [label = <(LITERAL,1.,1. / 256)<SUB>22</SUB>> ]
"90194313225" [label = <(LITERAL,256,1. / 256)<SUB>22</SUB>> ]
"94489280515" [label = <(LOCAL,static constexpr int kInputIntegerBits: int)<SUB>24</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.assignment,kInputIntegerBits = 4)<SUB>24</SUB>> ]
"68719476775" [label = <(IDENTIFIER,kInputIntegerBits,kInputIntegerBits = 4)<SUB>24</SUB>> ]
"90194313226" [label = <(LITERAL,4,kInputIntegerBits = 4)<SUB>24</SUB>> ]
"94489280516" [label = <(LOCAL,const double input_real_multiplier: double)<SUB>26</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.assignment,input_real_multiplier =
          input-&gt;params...)<SUB>26</SUB>> ]
"68719476776" [label = <(IDENTIFIER,input_real_multiplier,input_real_multiplier =
          input-&gt;params...)<SUB>26</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.multiplication,input-&gt;params.scale *
          static_cast&lt;dou...)<SUB>27</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.fieldAccess,input-&gt;params.scale)<SUB>27</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;params)<SUB>27</SUB>> ]
"68719476777" [label = <(IDENTIFIER,input,input-&gt;params.scale *
          static_cast&lt;dou...)<SUB>27</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,params,params)<SUB>27</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>27</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.cast,static_cast&lt;double&gt;(1 &lt;&lt; (15 - kInputIntegerBits)))<SUB>28</SUB>> ]
"184683593729" [label = <(UNKNOWN,double,double)<SUB>28</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (15 - kInputIntegerBits))<SUB>28</SUB>> ]
"90194313227" [label = <(LITERAL,1,1 &lt;&lt; (15 - kInputIntegerBits))<SUB>28</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.subtraction,15 - kInputIntegerBits)<SUB>28</SUB>> ]
"90194313228" [label = <(LITERAL,15,15 - kInputIntegerBits)<SUB>28</SUB>> ]
"68719476778" [label = <(IDENTIFIER,kInputIntegerBits,15 - kInputIntegerBits)<SUB>28</SUB>> ]
"94489280517" [label = <(LOCAL,const double q: double)<SUB>30</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.assignment,q =
          std::frexp(input_real_multiplier,...)<SUB>30</SUB>> ]
"68719476779" [label = <(IDENTIFIER,q,q =
          std::frexp(input_real_multiplier,...)<SUB>30</SUB>> ]
"30064771134" [label = <(frexp,std::frexp(input_real_multiplier, &amp;data-&gt;input_...)<SUB>31</SUB>> ]
"68719476780" [label = <(IDENTIFIER,input_real_multiplier,std::frexp(input_real_multiplier, &amp;data-&gt;input_...)<SUB>31</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.addressOf,&amp;data-&gt;input_left_shift)<SUB>31</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;input_left_shift)<SUB>31</SUB>> ]
"68719476781" [label = <(IDENTIFIER,data,std::frexp(input_real_multiplier, &amp;data-&gt;input_...)<SUB>31</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,input_left_shift,input_left_shift)<SUB>31</SUB>> ]
"94489280518" [label = <(LOCAL,auto q_fixed: auto)<SUB>32</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.assignment,q_fixed = static_cast&lt;int32_t&gt;(TfLiteRound(q * ...)<SUB>32</SUB>> ]
"68719476782" [label = <(IDENTIFIER,q_fixed,q_fixed = static_cast&lt;int32_t&gt;(TfLiteRound(q * ...)<SUB>32</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.cast,static_cast&lt;int32_t&gt;(TfLiteRound(q * (1ll &lt;&lt; 15))))<SUB>32</SUB>> ]
"184683593730" [label = <(UNKNOWN,int32_t,int32_t)<SUB>32</SUB>> ]
"30064771139" [label = <(TfLiteRound,TfLiteRound(q * (1ll &lt;&lt; 15)))<SUB>32</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.multiplication,q * (1ll &lt;&lt; 15))<SUB>32</SUB>> ]
"68719476783" [label = <(IDENTIFIER,q,q * (1ll &lt;&lt; 15))<SUB>32</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.shiftLeft,1ll &lt;&lt; 15)<SUB>32</SUB>> ]
"90194313229" [label = <(LITERAL,1ll,1ll &lt;&lt; 15)<SUB>32</SUB>> ]
"90194313230" [label = <(LITERAL,15,1ll &lt;&lt; 15)<SUB>32</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.assignment,data-&gt;input_multiplier = static_cast&lt;int16_t&gt;(q...)<SUB>33</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;input_multiplier)<SUB>33</SUB>> ]
"68719476784" [label = <(IDENTIFIER,data,data-&gt;input_multiplier = static_cast&lt;int16_t&gt;(q...)<SUB>33</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,input_multiplier,input_multiplier)<SUB>33</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.cast,static_cast&lt;int16_t&gt;(q_fixed))<SUB>33</SUB>> ]
"184683593731" [label = <(UNKNOWN,int16_t,int16_t)<SUB>33</SUB>> ]
"68719476785" [label = <(IDENTIFIER,q_fixed,static_cast&lt;int16_t&gt;(q_fixed))<SUB>33</SUB>> ]
"94489280519" [label = <(LOCAL,int16_t input_range_radius: int16_t)<SUB>35</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.assignment,input_range_radius =
          CalculateInputRa...)<SUB>35</SUB>> ]
"68719476786" [label = <(IDENTIFIER,input_range_radius,input_range_radius =
          CalculateInputRa...)<SUB>35</SUB>> ]
"30064771146" [label = <(CalculateInputRadius,CalculateInputRadius(kInputIntegerBits, data-&gt;i...)<SUB>36</SUB>> ]
"68719476787" [label = <(IDENTIFIER,kInputIntegerBits,CalculateInputRadius(kInputIntegerBits, data-&gt;i...)<SUB>36</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;input_left_shift)<SUB>36</SUB>> ]
"68719476788" [label = <(IDENTIFIER,data,CalculateInputRadius(kInputIntegerBits, data-&gt;i...)<SUB>36</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,input_left_shift,input_left_shift)<SUB>36</SUB>> ]
"90194313231" [label = <(LITERAL,15,CalculateInputRadius(kInputIntegerBits, data-&gt;i...)<SUB>36</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.assignment,data-&gt;input_range_radius = input_range_radius)<SUB>37</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;input_range_radius)<SUB>37</SUB>> ]
"68719476789" [label = <(IDENTIFIER,data,data-&gt;input_range_radius = input_range_radius)<SUB>37</SUB>> ]
"55834574868" [label = <(FIELD_IDENTIFIER,input_range_radius,input_range_radius)<SUB>37</SUB>> ]
"68719476790" [label = <(IDENTIFIER,input_range_radius,data-&gt;input_range_radius = input_range_radius)<SUB>37</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (kernel_type == kGenericOptimized || kernel_type == kReference))<SUB>41</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.logicalOr,kernel_type == kGenericOptimized || kernel_type...)<SUB>41</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.equals,kernel_type == kGenericOptimized)<SUB>41</SUB>> ]
"68719476791" [label = <(IDENTIFIER,kernel_type,kernel_type == kGenericOptimized)<SUB>41</SUB>> ]
"68719476792" [label = <(IDENTIFIER,kGenericOptimized,kernel_type == kGenericOptimized)<SUB>41</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.equals,kernel_type == kReference)<SUB>41</SUB>> ]
"68719476793" [label = <(IDENTIFIER,kernel_type,kernel_type == kReference)<SUB>41</SUB>> ]
"68719476794" [label = <(IDENTIFIER,kReference,kernel_type == kReference)<SUB>41</SUB>> ]
"25769803784" [label = <(BLOCK,{
    if (input-&gt;type == kTfLiteUInt8) {
      ...,{
    if (input-&gt;type == kTfLiteUInt8) {
      ...)<SUB>41</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (input-&gt;type == kTfLiteUInt8))<SUB>42</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.equals,input-&gt;type == kTfLiteUInt8)<SUB>42</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;type)<SUB>42</SUB>> ]
"68719476795" [label = <(IDENTIFIER,input,input-&gt;type == kTfLiteUInt8)<SUB>42</SUB>> ]
"55834574869" [label = <(FIELD_IDENTIFIER,type,type)<SUB>42</SUB>> ]
"68719476796" [label = <(IDENTIFIER,kTfLiteUInt8,input-&gt;type == kTfLiteUInt8)<SUB>42</SUB>> ]
"25769803785" [label = <(BLOCK,{
      TF_LITE_ENSURE(context, output-&gt;params....,{
      TF_LITE_ENSURE(context, output-&gt;params....)<SUB>42</SUB>> ]
"30064771155" [label = <(TF_LITE_ENSURE,TF_LITE_ENSURE(context, output-&gt;params.scale ==...)<SUB>43</SUB>> ]
"68719476797" [label = <(IDENTIFIER,context,TF_LITE_ENSURE(context, output-&gt;params.scale ==...)<SUB>43</SUB>> ]
"30064771156" [label = <(&lt;operator&gt;.equals,output-&gt;params.scale == 1. / 256)<SUB>43</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.fieldAccess,output-&gt;params.scale)<SUB>43</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;params)<SUB>43</SUB>> ]
"68719476798" [label = <(IDENTIFIER,output,output-&gt;params.scale == 1. / 256)<SUB>43</SUB>> ]
"55834574870" [label = <(FIELD_IDENTIFIER,params,params)<SUB>43</SUB>> ]
"55834574871" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>43</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.division,1. / 256)<SUB>43</SUB>> ]
"90194313232" [label = <(LITERAL,1.,1. / 256)<SUB>43</SUB>> ]
"90194313233" [label = <(LITERAL,256,1. / 256)<SUB>43</SUB>> ]
"30064771160" [label = <(&lt;operator&gt;.greaterThan,PopulateLookupTable&lt;uint8_t&gt;(data, input, outpu...)<SUB>44</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.lessThan,PopulateLookupTable&lt;uint8_t)<SUB>44</SUB>> ]
"68719476799" [label = <(IDENTIFIER,PopulateLookupTable,PopulateLookupTable&lt;uint8_t)<SUB>44</SUB>> ]
"68719476800" [label = <(IDENTIFIER,uint8_t,PopulateLookupTable&lt;uint8_t)<SUB>44</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.bracketedPrimary,(data, input, output, [](float value) {
       ...)<SUB>44</SUB>> ]
"30064771163" [label = <(&lt;operator&gt;.expressionList,data, input, output, [](float value) {
        ...)<SUB>44</SUB>> ]
"68719476801" [label = <(IDENTIFIER,data,data, input, output, [](float value) {
        ...)<SUB>44</SUB>> ]
"68719476802" [label = <(IDENTIFIER,input,data, input, output, [](float value) {
        ...)<SUB>44</SUB>> ]
"68719476803" [label = <(IDENTIFIER,output,data, input, output, [](float value) {
        ...)<SUB>44</SUB>> ]
"124554051584" [label = <(METHOD_REF,[](float value) {
        return 1.0f / (1.0f +...,data, input, output, [](float value) {
        ...)<SUB>44</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>47</SUB>> ]
"25769803786" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (input-&gt;type == kTfLiteInt8))<SUB>47</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.equals,input-&gt;type == kTfLiteInt8)<SUB>47</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;type)<SUB>47</SUB>> ]
"68719476804" [label = <(IDENTIFIER,input,input-&gt;type == kTfLiteInt8)<SUB>47</SUB>> ]
"55834574872" [label = <(FIELD_IDENTIFIER,type,type)<SUB>47</SUB>> ]
"68719476805" [label = <(IDENTIFIER,kTfLiteInt8,input-&gt;type == kTfLiteInt8)<SUB>47</SUB>> ]
"25769803787" [label = <(BLOCK,{
      TF_LITE_ENSURE(context, output-&gt;params....,{
      TF_LITE_ENSURE(context, output-&gt;params....)<SUB>47</SUB>> ]
"30064771166" [label = <(TF_LITE_ENSURE,TF_LITE_ENSURE(context, output-&gt;params.scale ==...)<SUB>48</SUB>> ]
"68719476806" [label = <(IDENTIFIER,context,TF_LITE_ENSURE(context, output-&gt;params.scale ==...)<SUB>48</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.equals,output-&gt;params.scale == 1. / 256)<SUB>48</SUB>> ]
"30064771168" [label = <(&lt;operator&gt;.fieldAccess,output-&gt;params.scale)<SUB>48</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;params)<SUB>48</SUB>> ]
"68719476807" [label = <(IDENTIFIER,output,output-&gt;params.scale == 1. / 256)<SUB>48</SUB>> ]
"55834574873" [label = <(FIELD_IDENTIFIER,params,params)<SUB>48</SUB>> ]
"55834574874" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>48</SUB>> ]
"30064771170" [label = <(&lt;operator&gt;.division,1. / 256)<SUB>48</SUB>> ]
"90194313234" [label = <(LITERAL,1.,1. / 256)<SUB>48</SUB>> ]
"90194313235" [label = <(LITERAL,256,1. / 256)<SUB>48</SUB>> ]
"30064771171" [label = <(&lt;operator&gt;.greaterThan,PopulateLookupTable&lt;int8_t&gt;(data, input, output...)<SUB>49</SUB>> ]
"30064771172" [label = <(&lt;operator&gt;.lessThan,PopulateLookupTable&lt;int8_t)<SUB>49</SUB>> ]
"68719476808" [label = <(IDENTIFIER,PopulateLookupTable,PopulateLookupTable&lt;int8_t)<SUB>49</SUB>> ]
"68719476809" [label = <(IDENTIFIER,int8_t,PopulateLookupTable&lt;int8_t)<SUB>49</SUB>> ]
"30064771173" [label = <(&lt;operator&gt;.bracketedPrimary,(data, input, output, [](float value) {
       ...)<SUB>49</SUB>> ]
"30064771174" [label = <(&lt;operator&gt;.expressionList,data, input, output, [](float value) {
        ...)<SUB>49</SUB>> ]
"68719476810" [label = <(IDENTIFIER,data,data, input, output, [](float value) {
        ...)<SUB>49</SUB>> ]
"68719476811" [label = <(IDENTIFIER,input,data, input, output, [](float value) {
        ...)<SUB>49</SUB>> ]
"68719476812" [label = <(IDENTIFIER,output,data, input, output, [](float value) {
        ...)<SUB>49</SUB>> ]
"124554051585" [label = <(METHOD_REF,[](float value) {
        return 1.0f / (1.0f +...,data, input, output, [](float value) {
        ...)<SUB>49</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>52</SUB>> ]
"25769803788" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,IF,if (input-&gt;type == kTfLiteInt16))<SUB>52</SUB>> ]
"30064771175" [label = <(&lt;operator&gt;.equals,input-&gt;type == kTfLiteInt16)<SUB>52</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;type)<SUB>52</SUB>> ]
"68719476813" [label = <(IDENTIFIER,input,input-&gt;type == kTfLiteInt16)<SUB>52</SUB>> ]
"55834574875" [label = <(FIELD_IDENTIFIER,type,type)<SUB>52</SUB>> ]
"68719476814" [label = <(IDENTIFIER,kTfLiteInt16,input-&gt;type == kTfLiteInt16)<SUB>52</SUB>> ]
"25769803789" [label = <(BLOCK,{
      TF_LITE_ENSURE(context, output-&gt;params....,{
      TF_LITE_ENSURE(context, output-&gt;params....)<SUB>52</SUB>> ]
"30064771177" [label = <(TF_LITE_ENSURE,TF_LITE_ENSURE(context, output-&gt;params.scale ==...)<SUB>53</SUB>> ]
"68719476815" [label = <(IDENTIFIER,context,TF_LITE_ENSURE(context, output-&gt;params.scale ==...)<SUB>53</SUB>> ]
"30064771178" [label = <(&lt;operator&gt;.equals,output-&gt;params.scale == 1. / 32768)<SUB>53</SUB>> ]
"30064771179" [label = <(&lt;operator&gt;.fieldAccess,output-&gt;params.scale)<SUB>53</SUB>> ]
"30064771180" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;params)<SUB>53</SUB>> ]
"68719476816" [label = <(IDENTIFIER,output,output-&gt;params.scale == 1. / 32768)<SUB>53</SUB>> ]
"55834574876" [label = <(FIELD_IDENTIFIER,params,params)<SUB>53</SUB>> ]
"55834574877" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>53</SUB>> ]
"30064771181" [label = <(&lt;operator&gt;.division,1. / 32768)<SUB>53</SUB>> ]
"90194313236" [label = <(LITERAL,1.,1. / 32768)<SUB>53</SUB>> ]
"90194313237" [label = <(LITERAL,32768,1. / 32768)<SUB>53</SUB>> ]
"30064771182" [label = <(TF_LITE_ENSURE,TF_LITE_ENSURE(context, output-&gt;params.zero_poi...)<SUB>54</SUB>> ]
"68719476817" [label = <(IDENTIFIER,context,TF_LITE_ENSURE(context, output-&gt;params.zero_poi...)<SUB>54</SUB>> ]
"30064771183" [label = <(&lt;operator&gt;.equals,output-&gt;params.zero_point == 0)<SUB>54</SUB>> ]
"30064771184" [label = <(&lt;operator&gt;.fieldAccess,output-&gt;params.zero_point)<SUB>54</SUB>> ]
"30064771185" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;params)<SUB>54</SUB>> ]
"68719476818" [label = <(IDENTIFIER,output,output-&gt;params.zero_point == 0)<SUB>54</SUB>> ]
"55834574878" [label = <(FIELD_IDENTIFIER,params,params)<SUB>54</SUB>> ]
"55834574879" [label = <(FIELD_IDENTIFIER,zero_point,zero_point)<SUB>54</SUB>> ]
"90194313238" [label = <(LITERAL,0,output-&gt;params.zero_point == 0)<SUB>54</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,IF,if (input-&gt;type == kTfLiteInt16))<SUB>58</SUB>> ]
"30064771186" [label = <(&lt;operator&gt;.equals,input-&gt;type == kTfLiteInt16)<SUB>58</SUB>> ]
"30064771187" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;type)<SUB>58</SUB>> ]
"68719476819" [label = <(IDENTIFIER,input,input-&gt;type == kTfLiteInt16)<SUB>58</SUB>> ]
"55834574880" [label = <(FIELD_IDENTIFIER,type,type)<SUB>58</SUB>> ]
"68719476820" [label = <(IDENTIFIER,kTfLiteInt16,input-&gt;type == kTfLiteInt16)<SUB>58</SUB>> ]
"25769803790" [label = <(BLOCK,{
    static constexpr int kInputIntegerBits = ...,{
    static constexpr int kInputIntegerBits = ...)<SUB>58</SUB>> ]
"94489280520" [label = <(LOCAL,static constexpr int kInputIntegerBits: int)<SUB>59</SUB>> ]
"30064771188" [label = <(&lt;operator&gt;.assignment,kInputIntegerBits = 3)<SUB>59</SUB>> ]
"68719476821" [label = <(IDENTIFIER,kInputIntegerBits,kInputIntegerBits = 3)<SUB>59</SUB>> ]
"90194313239" [label = <(LITERAL,3,kInputIntegerBits = 3)<SUB>59</SUB>> ]
"94489280521" [label = <(LOCAL,static constexpr int kOutputFractionalBits: int)<SUB>60</SUB>> ]
"30064771189" [label = <(&lt;operator&gt;.assignment,kOutputFractionalBits = 15)<SUB>60</SUB>> ]
"68719476822" [label = <(IDENTIFIER,kOutputFractionalBits,kOutputFractionalBits = 15)<SUB>60</SUB>> ]
"90194313240" [label = <(LITERAL,15,kOutputFractionalBits = 15)<SUB>60</SUB>> ]
"30064771190" [label = <(TF_LITE_ENSURE_EQ,TF_LITE_ENSURE_EQ(context, input-&gt;params.zero_p...)<SUB>65</SUB>> ]
"68719476823" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_EQ(context, input-&gt;params.zero_p...)<SUB>65</SUB>> ]
"30064771191" [label = <(&lt;operator&gt;.fieldAccess,input-&gt;params.zero_point)<SUB>65</SUB>> ]
"30064771192" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;params)<SUB>65</SUB>> ]
"68719476824" [label = <(IDENTIFIER,input,TF_LITE_ENSURE_EQ(context, input-&gt;params.zero_p...)<SUB>65</SUB>> ]
"55834574881" [label = <(FIELD_IDENTIFIER,params,params)<SUB>65</SUB>> ]
"55834574882" [label = <(FIELD_IDENTIFIER,zero_point,zero_point)<SUB>65</SUB>> ]
"90194313241" [label = <(LITERAL,0,TF_LITE_ENSURE_EQ(context, input-&gt;params.zero_p...)<SUB>65</SUB>> ]
"30064771193" [label = <(TF_LITE_ENSURE_EQ,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>66</SUB>> ]
"68719476825" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>66</SUB>> ]
"30064771194" [label = <(&lt;operator&gt;.fieldAccess,output-&gt;params.zero_point)<SUB>66</SUB>> ]
"30064771195" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;params)<SUB>66</SUB>> ]
"68719476826" [label = <(IDENTIFIER,output,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>66</SUB>> ]
"55834574883" [label = <(FIELD_IDENTIFIER,params,params)<SUB>66</SUB>> ]
"55834574884" [label = <(FIELD_IDENTIFIER,zero_point,zero_point)<SUB>66</SUB>> ]
"90194313242" [label = <(LITERAL,0,TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_...)<SUB>66</SUB>> ]
"94489280522" [label = <(LOCAL,int input_scale_log2_rounded: int)<SUB>68</SUB>> ]
"94489280523" [label = <(LOCAL,bool param_scale_pot: bool)<SUB>69</SUB>> ]
"30064771196" [label = <(&lt;operator&gt;.assignment,param_scale_pot =
        CheckedLog2(input-&gt;pa...)<SUB>69</SUB>> ]
"68719476827" [label = <(IDENTIFIER,param_scale_pot,param_scale_pot =
        CheckedLog2(input-&gt;pa...)<SUB>69</SUB>> ]
"30064771197" [label = <(CheckedLog2,CheckedLog2(input-&gt;params.scale, &amp;input_scale_l...)<SUB>70</SUB>> ]
"30064771198" [label = <(&lt;operator&gt;.fieldAccess,input-&gt;params.scale)<SUB>70</SUB>> ]
"30064771199" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;params)<SUB>70</SUB>> ]
"68719476828" [label = <(IDENTIFIER,input,CheckedLog2(input-&gt;params.scale, &amp;input_scale_l...)<SUB>70</SUB>> ]
"55834574885" [label = <(FIELD_IDENTIFIER,params,params)<SUB>70</SUB>> ]
"55834574886" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>70</SUB>> ]
"30064771200" [label = <(&lt;operator&gt;.addressOf,&amp;input_scale_log2_rounded)<SUB>70</SUB>> ]
"68719476829" [label = <(IDENTIFIER,input_scale_log2_rounded,CheckedLog2(input-&gt;params.scale, &amp;input_scale_l...)<SUB>70</SUB>> ]
"30064771201" [label = <(&lt;operator&gt;.assignment,data-&gt;input_left_shift =
        (15 - kInputIn...)<SUB>72</SUB>> ]
"30064771202" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;input_left_shift)<SUB>72</SUB>> ]
"68719476830" [label = <(IDENTIFIER,data,data-&gt;input_left_shift =
        (15 - kInputIn...)<SUB>72</SUB>> ]
"55834574887" [label = <(FIELD_IDENTIFIER,input_left_shift,input_left_shift)<SUB>72</SUB>> ]
"30064771203" [label = <(&lt;operator&gt;.addition,(15 - kInputIntegerBits) + input_scale_log2_rou...)<SUB>73</SUB>> ]
"30064771204" [label = <(&lt;operator&gt;.subtraction,15 - kInputIntegerBits)<SUB>73</SUB>> ]
"90194313243" [label = <(LITERAL,15,15 - kInputIntegerBits)<SUB>73</SUB>> ]
"68719476831" [label = <(IDENTIFIER,kInputIntegerBits,15 - kInputIntegerBits)<SUB>73</SUB>> ]
"68719476832" [label = <(IDENTIFIER,input_scale_log2_rounded,(15 - kInputIntegerBits) + input_scale_log2_rou...)<SUB>73</SUB>> ]
"30064771205" [label = <(&lt;operators&gt;.assignmentAnd,param_scale_pot &amp;= (data-&gt;input_left_shift == 0))<SUB>74</SUB>> ]
"68719476833" [label = <(IDENTIFIER,param_scale_pot,param_scale_pot &amp;= (data-&gt;input_left_shift == 0))<SUB>74</SUB>> ]
"30064771206" [label = <(&lt;operator&gt;.equals,data-&gt;input_left_shift == 0)<SUB>74</SUB>> ]
"30064771207" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;input_left_shift)<SUB>74</SUB>> ]
"68719476834" [label = <(IDENTIFIER,data,data-&gt;input_left_shift == 0)<SUB>74</SUB>> ]
"55834574888" [label = <(FIELD_IDENTIFIER,input_left_shift,input_left_shift)<SUB>74</SUB>> ]
"90194313244" [label = <(LITERAL,0,data-&gt;input_left_shift == 0)<SUB>74</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,IF,if (!param_scale_pot))<SUB>76</SUB>> ]
"30064771208" [label = <(&lt;operator&gt;.logicalNot,!param_scale_pot)<SUB>76</SUB>> ]
"68719476835" [label = <(IDENTIFIER,param_scale_pot,!param_scale_pot)<SUB>76</SUB>> ]
"25769803791" [label = <(BLOCK,{
      // In case of general scale parameter, ...,{
      // In case of general scale parameter, ...)<SUB>76</SUB>> ]
"30064771209" [label = <(&lt;operator&gt;.assignment,data-&gt;input_multiplier = static_cast&lt;int32_t&gt;(i...)<SUB>83</SUB>> ]
"30064771210" [label = <(&lt;operator&gt;.indirectFieldAccess,data-&gt;input_multiplier)<SUB>83</SUB>> ]
"68719476836" [label = <(IDENTIFIER,data,data-&gt;input_multiplier = static_cast&lt;int32_t&gt;(i...)<SUB>83</SUB>> ]
"55834574889" [label = <(FIELD_IDENTIFIER,input_multiplier,input_multiplier)<SUB>83</SUB>> ]
"30064771211" [label = <(&lt;operator&gt;.cast,static_cast&lt;int32_t&gt;(input-&gt;params.scale * 4096))<SUB>83</SUB>> ]
"184683593732" [label = <(UNKNOWN,int32_t,int32_t)<SUB>83</SUB>> ]
"30064771212" [label = <(&lt;operator&gt;.multiplication,input-&gt;params.scale * 4096)<SUB>83</SUB>> ]
"30064771213" [label = <(&lt;operator&gt;.fieldAccess,input-&gt;params.scale)<SUB>83</SUB>> ]
"30064771214" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;params)<SUB>83</SUB>> ]
"68719476837" [label = <(IDENTIFIER,input,input-&gt;params.scale * 4096)<SUB>83</SUB>> ]
"55834574890" [label = <(FIELD_IDENTIFIER,params,params)<SUB>83</SUB>> ]
"55834574891" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>83</SUB>> ]
"90194313245" [label = <(LITERAL,4096,input-&gt;params.scale * 4096)<SUB>83</SUB>> ]
"94489280524" [label = <(LOCAL,int output_scale_log2_rounded: int)<SUB>86</SUB>> ]
"30064771215" [label = <(TF_LITE_ENSURE,TF_LITE_ENSURE(
        context, CheckedLog2(ou...)<SUB>87</SUB>> ]
"68719476838" [label = <(IDENTIFIER,context,TF_LITE_ENSURE(
        context, CheckedLog2(ou...)<SUB>88</SUB>> ]
"30064771216" [label = <(CheckedLog2,CheckedLog2(output-&gt;params.scale, &amp;output_scale...)<SUB>88</SUB>> ]
"30064771217" [label = <(&lt;operator&gt;.fieldAccess,output-&gt;params.scale)<SUB>88</SUB>> ]
"30064771218" [label = <(&lt;operator&gt;.indirectFieldAccess,output-&gt;params)<SUB>88</SUB>> ]
"68719476839" [label = <(IDENTIFIER,output,CheckedLog2(output-&gt;params.scale, &amp;output_scale...)<SUB>88</SUB>> ]
"55834574892" [label = <(FIELD_IDENTIFIER,params,params)<SUB>88</SUB>> ]
"55834574893" [label = <(FIELD_IDENTIFIER,scale,scale)<SUB>88</SUB>> ]
"30064771219" [label = <(&lt;operator&gt;.addressOf,&amp;output_scale_log2_rounded)<SUB>88</SUB>> ]
"68719476840" [label = <(IDENTIFIER,output_scale_log2_rounded,CheckedLog2(output-&gt;params.scale, &amp;output_scale...)<SUB>88</SUB>> ]
"30064771220" [label = <(TF_LITE_ENSURE_EQ,TF_LITE_ENSURE_EQ(context, output_scale_log2_ro...)<SUB>89</SUB>> ]
"68719476841" [label = <(IDENTIFIER,context,TF_LITE_ENSURE_EQ(context, output_scale_log2_ro...)<SUB>89</SUB>> ]
"68719476842" [label = <(IDENTIFIER,output_scale_log2_rounded,TF_LITE_ENSURE_EQ(context, output_scale_log2_ro...)<SUB>89</SUB>> ]
"30064771221" [label = <(&lt;operator&gt;.minus,-kOutputFractionalBits)<SUB>90</SUB>> ]
"68719476843" [label = <(IDENTIFIER,kOutputFractionalBits,-kOutputFractionalBits)<SUB>90</SUB>> ]
"146028888066" [label = <(RETURN,return context-&gt;ResizeTensor(context, output,
 ...,return context-&gt;ResizeTensor(context, output,
 ...)<SUB>93</SUB>> ]
"30064771222" [label = <(ResizeTensor,context-&gt;ResizeTensor(context, output,
        ...)<SUB>93</SUB>> ]
"68719476844" [label = <(IDENTIFIER,context,context-&gt;ResizeTensor(context, output,
        ...)<SUB>93</SUB>> ]
"68719476845" [label = <(IDENTIFIER,context,context-&gt;ResizeTensor(context, output,
        ...)<SUB>93</SUB>> ]
"68719476846" [label = <(IDENTIFIER,output,context-&gt;ResizeTensor(context, output,
        ...)<SUB>93</SUB>> ]
"30064771223" [label = <(TfLiteIntArrayCopy,TfLiteIntArrayCopy(input-&gt;dims))<SUB>94</SUB>> ]
"30064771224" [label = <(&lt;operator&gt;.indirectFieldAccess,input-&gt;dims)<SUB>94</SUB>> ]
"68719476847" [label = <(IDENTIFIER,input,TfLiteIntArrayCopy(input-&gt;dims))<SUB>94</SUB>> ]
"55834574894" [label = <(FIELD_IDENTIFIER,dims,dims)<SUB>94</SUB>> ]
"128849018882" [label = <(METHOD_RETURN,TfLiteStatus)<SUB>1</SUB>> ]
  "111669149699" -> "115964116994"  [ label = "AST: "] 
  "111669149699" -> "115964116995"  [ label = "AST: "] 
  "111669149699" -> "25769803779"  [ label = "AST: "] 
  "111669149699" -> "128849018882"  [ label = "AST: "] 
  "25769803779" -> "94489280512"  [ label = "AST: "] 
  "25769803779" -> "30064771080"  [ label = "AST: "] 
  "25769803779" -> "30064771083"  [ label = "AST: "] 
  "25769803779" -> "30064771085"  [ label = "AST: "] 
  "25769803779" -> "94489280513"  [ label = "AST: "] 
  "25769803779" -> "30064771087"  [ label = "AST: "] 
  "25769803779" -> "94489280514"  [ label = "AST: "] 
  "25769803779" -> "30064771090"  [ label = "AST: "] 
  "25769803779" -> "30064771093"  [ label = "AST: "] 
  "25769803779" -> "47244640256"  [ label = "AST: "] 
  "25769803779" -> "47244640260"  [ label = "AST: "] 
  "25769803779" -> "47244640266"  [ label = "AST: "] 
  "25769803779" -> "146028888066"  [ label = "AST: "] 
  "30064771080" -> "68719476738"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "184683593728"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476739"  [ label = "AST: "] 
  "30064771082" -> "55834574848"  [ label = "AST: "] 
  "30064771083" -> "68719476740"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "90194313220"  [ label = "AST: "] 
  "30064771084" -> "68719476741"  [ label = "AST: "] 
  "30064771085" -> "68719476742"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "90194313221"  [ label = "AST: "] 
  "30064771086" -> "68719476743"  [ label = "AST: "] 
  "30064771087" -> "68719476744"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476745"  [ label = "AST: "] 
  "30064771088" -> "68719476746"  [ label = "AST: "] 
  "30064771088" -> "90194313222"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476747"  [ label = "AST: "] 
  "30064771090" -> "68719476748"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476749"  [ label = "AST: "] 
  "30064771091" -> "68719476750"  [ label = "AST: "] 
  "30064771091" -> "90194313223"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476751"  [ label = "AST: "] 
  "30064771093" -> "68719476752"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "68719476753"  [ label = "AST: "] 
  "30064771094" -> "55834574849"  [ label = "AST: "] 
  "30064771095" -> "68719476754"  [ label = "AST: "] 
  "30064771095" -> "55834574850"  [ label = "AST: "] 
  "47244640256" -> "30064771096"  [ label = "AST: "] 
  "47244640256" -> "25769803780"  [ label = "AST: "] 
  "30064771096" -> "68719476755"  [ label = "AST: "] 
  "30064771096" -> "68719476756"  [ label = "AST: "] 
  "25769803780" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "30064771097"  [ label = "AST: "] 
  "47244640257" -> "25769803781"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "30064771100"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "68719476758"  [ label = "AST: "] 
  "30064771099" -> "68719476757"  [ label = "AST: "] 
  "30064771099" -> "55834574851"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "68719476760"  [ label = "AST: "] 
  "30064771101" -> "68719476759"  [ label = "AST: "] 
  "30064771101" -> "55834574852"  [ label = "AST: "] 
  "25769803781" -> "47244640258"  [ label = "AST: "] 
  "25769803781" -> "47244640259"  [ label = "AST: "] 
  "25769803781" -> "30064771120"  [ label = "AST: "] 
  "25769803781" -> "94489280515"  [ label = "AST: "] 
  "25769803781" -> "30064771125"  [ label = "AST: "] 
  "25769803781" -> "94489280516"  [ label = "AST: "] 
  "25769803781" -> "30064771126"  [ label = "AST: "] 
  "25769803781" -> "94489280517"  [ label = "AST: "] 
  "25769803781" -> "30064771133"  [ label = "AST: "] 
  "25769803781" -> "94489280518"  [ label = "AST: "] 
  "25769803781" -> "30064771137"  [ label = "AST: "] 
  "25769803781" -> "30064771142"  [ label = "AST: "] 
  "25769803781" -> "94489280519"  [ label = "AST: "] 
  "25769803781" -> "30064771145"  [ label = "AST: "] 
  "25769803781" -> "30064771148"  [ label = "AST: "] 
  "47244640258" -> "30064771102"  [ label = "AST: "] 
  "47244640258" -> "25769803782"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "68719476762"  [ label = "AST: "] 
  "30064771103" -> "68719476761"  [ label = "AST: "] 
  "30064771103" -> "55834574853"  [ label = "AST: "] 
  "25769803782" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476763"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "30064771107"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "55834574855"  [ label = "AST: "] 
  "30064771106" -> "68719476764"  [ label = "AST: "] 
  "30064771106" -> "55834574854"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "30064771110"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771108" -> "68719476766"  [ label = "AST: "] 
  "30064771109" -> "68719476765"  [ label = "AST: "] 
  "30064771109" -> "55834574856"  [ label = "AST: "] 
  "47244640259" -> "30064771111"  [ label = "AST: "] 
  "47244640259" -> "25769803783"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "68719476768"  [ label = "AST: "] 
  "30064771112" -> "68719476767"  [ label = "AST: "] 
  "30064771112" -> "55834574857"  [ label = "AST: "] 
  "25769803783" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476769"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771113" -> "30064771116"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771114" -> "55834574859"  [ label = "AST: "] 
  "30064771115" -> "68719476770"  [ label = "AST: "] 
  "30064771115" -> "55834574858"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771116" -> "30064771119"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771117" -> "68719476772"  [ label = "AST: "] 
  "30064771118" -> "68719476771"  [ label = "AST: "] 
  "30064771118" -> "55834574860"  [ label = "AST: "] 
  "30064771120" -> "68719476773"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "30064771124"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771122" -> "55834574862"  [ label = "AST: "] 
  "30064771123" -> "68719476774"  [ label = "AST: "] 
  "30064771123" -> "55834574861"  [ label = "AST: "] 
  "30064771124" -> "90194313224"  [ label = "AST: "] 
  "30064771124" -> "90194313225"  [ label = "AST: "] 
  "30064771125" -> "68719476775"  [ label = "AST: "] 
  "30064771125" -> "90194313226"  [ label = "AST: "] 
  "30064771126" -> "68719476776"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771127" -> "30064771130"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771128" -> "55834574864"  [ label = "AST: "] 
  "30064771129" -> "68719476777"  [ label = "AST: "] 
  "30064771129" -> "55834574863"  [ label = "AST: "] 
  "30064771130" -> "184683593729"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "90194313227"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771132" -> "90194313228"  [ label = "AST: "] 
  "30064771132" -> "68719476778"  [ label = "AST: "] 
  "30064771133" -> "68719476779"  [ label = "AST: "] 
  "30064771133" -> "30064771134"  [ label = "AST: "] 
  "30064771134" -> "68719476780"  [ label = "AST: "] 
  "30064771134" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771136" -> "68719476781"  [ label = "AST: "] 
  "30064771136" -> "55834574865"  [ label = "AST: "] 
  "30064771137" -> "68719476782"  [ label = "AST: "] 
  "30064771137" -> "30064771138"  [ label = "AST: "] 
  "30064771138" -> "184683593730"  [ label = "AST: "] 
  "30064771138" -> "30064771139"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771140" -> "68719476783"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771141" -> "90194313229"  [ label = "AST: "] 
  "30064771141" -> "90194313230"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771142" -> "30064771144"  [ label = "AST: "] 
  "30064771143" -> "68719476784"  [ label = "AST: "] 
  "30064771143" -> "55834574866"  [ label = "AST: "] 
  "30064771144" -> "184683593731"  [ label = "AST: "] 
  "30064771144" -> "68719476785"  [ label = "AST: "] 
  "30064771145" -> "68719476786"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771146" -> "68719476787"  [ label = "AST: "] 
  "30064771146" -> "30064771147"  [ label = "AST: "] 
  "30064771146" -> "90194313231"  [ label = "AST: "] 
  "30064771147" -> "68719476788"  [ label = "AST: "] 
  "30064771147" -> "55834574867"  [ label = "AST: "] 
  "30064771148" -> "30064771149"  [ label = "AST: "] 
  "30064771148" -> "68719476790"  [ label = "AST: "] 
  "30064771149" -> "68719476789"  [ label = "AST: "] 
  "30064771149" -> "55834574868"  [ label = "AST: "] 
  "47244640260" -> "30064771150"  [ label = "AST: "] 
  "47244640260" -> "25769803784"  [ label = "AST: "] 
  "30064771150" -> "30064771151"  [ label = "AST: "] 
  "30064771150" -> "30064771152"  [ label = "AST: "] 
  "30064771151" -> "68719476791"  [ label = "AST: "] 
  "30064771151" -> "68719476792"  [ label = "AST: "] 
  "30064771152" -> "68719476793"  [ label = "AST: "] 
  "30064771152" -> "68719476794"  [ label = "AST: "] 
  "25769803784" -> "47244640261"  [ label = "AST: "] 
  "47244640261" -> "30064771153"  [ label = "AST: "] 
  "47244640261" -> "25769803785"  [ label = "AST: "] 
  "47244640261" -> "47244640262"  [ label = "AST: "] 
  "30064771153" -> "30064771154"  [ label = "AST: "] 
  "30064771153" -> "68719476796"  [ label = "AST: "] 
  "30064771154" -> "68719476795"  [ label = "AST: "] 
  "30064771154" -> "55834574869"  [ label = "AST: "] 
  "25769803785" -> "30064771155"  [ label = "AST: "] 
  "25769803785" -> "30064771160"  [ label = "AST: "] 
  "30064771155" -> "68719476797"  [ label = "AST: "] 
  "30064771155" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "30064771157"  [ label = "AST: "] 
  "30064771156" -> "30064771159"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771157" -> "55834574871"  [ label = "AST: "] 
  "30064771158" -> "68719476798"  [ label = "AST: "] 
  "30064771158" -> "55834574870"  [ label = "AST: "] 
  "30064771159" -> "90194313232"  [ label = "AST: "] 
  "30064771159" -> "90194313233"  [ label = "AST: "] 
  "30064771160" -> "30064771161"  [ label = "AST: "] 
  "30064771160" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "68719476799"  [ label = "AST: "] 
  "30064771161" -> "68719476800"  [ label = "AST: "] 
  "30064771162" -> "30064771163"  [ label = "AST: "] 
  "30064771163" -> "68719476801"  [ label = "AST: "] 
  "30064771163" -> "68719476802"  [ label = "AST: "] 
  "30064771163" -> "68719476803"  [ label = "AST: "] 
  "30064771163" -> "124554051584"  [ label = "AST: "] 
  "47244640262" -> "25769803786"  [ label = "AST: "] 
  "25769803786" -> "47244640263"  [ label = "AST: "] 
  "47244640263" -> "30064771164"  [ label = "AST: "] 
  "47244640263" -> "25769803787"  [ label = "AST: "] 
  "47244640263" -> "47244640264"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771164" -> "68719476805"  [ label = "AST: "] 
  "30064771165" -> "68719476804"  [ label = "AST: "] 
  "30064771165" -> "55834574872"  [ label = "AST: "] 
  "25769803787" -> "30064771166"  [ label = "AST: "] 
  "25769803787" -> "30064771171"  [ label = "AST: "] 
  "30064771166" -> "68719476806"  [ label = "AST: "] 
  "30064771166" -> "30064771167"  [ label = "AST: "] 
  "30064771167" -> "30064771168"  [ label = "AST: "] 
  "30064771167" -> "30064771170"  [ label = "AST: "] 
  "30064771168" -> "30064771169"  [ label = "AST: "] 
  "30064771168" -> "55834574874"  [ label = "AST: "] 
  "30064771169" -> "68719476807"  [ label = "AST: "] 
  "30064771169" -> "55834574873"  [ label = "AST: "] 
  "30064771170" -> "90194313234"  [ label = "AST: "] 
  "30064771170" -> "90194313235"  [ label = "AST: "] 
  "30064771171" -> "30064771172"  [ label = "AST: "] 
  "30064771171" -> "30064771173"  [ label = "AST: "] 
  "30064771172" -> "68719476808"  [ label = "AST: "] 
  "30064771172" -> "68719476809"  [ label = "AST: "] 
  "30064771173" -> "30064771174"  [ label = "AST: "] 
  "30064771174" -> "68719476810"  [ label = "AST: "] 
  "30064771174" -> "68719476811"  [ label = "AST: "] 
  "30064771174" -> "68719476812"  [ label = "AST: "] 
  "30064771174" -> "124554051585"  [ label = "AST: "] 
  "47244640264" -> "25769803788"  [ label = "AST: "] 
  "25769803788" -> "47244640265"  [ label = "AST: "] 
  "47244640265" -> "30064771175"  [ label = "AST: "] 
  "47244640265" -> "25769803789"  [ label = "AST: "] 
  "30064771175" -> "30064771176"  [ label = "AST: "] 
  "30064771175" -> "68719476814"  [ label = "AST: "] 
  "30064771176" -> "68719476813"  [ label = "AST: "] 
  "30064771176" -> "55834574875"  [ label = "AST: "] 
  "25769803789" -> "30064771177"  [ label = "AST: "] 
  "25769803789" -> "30064771182"  [ label = "AST: "] 
  "30064771177" -> "68719476815"  [ label = "AST: "] 
  "30064771177" -> "30064771178"  [ label = "AST: "] 
  "30064771178" -> "30064771179"  [ label = "AST: "] 
  "30064771178" -> "30064771181"  [ label = "AST: "] 
  "30064771179" -> "30064771180"  [ label = "AST: "] 
  "30064771179" -> "55834574877"  [ label = "AST: "] 
  "30064771180" -> "68719476816"  [ label = "AST: "] 
  "30064771180" -> "55834574876"  [ label = "AST: "] 
  "30064771181" -> "90194313236"  [ label = "AST: "] 
  "30064771181" -> "90194313237"  [ label = "AST: "] 
  "30064771182" -> "68719476817"  [ label = "AST: "] 
  "30064771182" -> "30064771183"  [ label = "AST: "] 
  "30064771183" -> "30064771184"  [ label = "AST: "] 
  "30064771183" -> "90194313238"  [ label = "AST: "] 
  "30064771184" -> "30064771185"  [ label = "AST: "] 
  "30064771184" -> "55834574879"  [ label = "AST: "] 
  "30064771185" -> "68719476818"  [ label = "AST: "] 
  "30064771185" -> "55834574878"  [ label = "AST: "] 
  "47244640266" -> "30064771186"  [ label = "AST: "] 
  "47244640266" -> "25769803790"  [ label = "AST: "] 
  "30064771186" -> "30064771187"  [ label = "AST: "] 
  "30064771186" -> "68719476820"  [ label = "AST: "] 
  "30064771187" -> "68719476819"  [ label = "AST: "] 
  "30064771187" -> "55834574880"  [ label = "AST: "] 
  "25769803790" -> "94489280520"  [ label = "AST: "] 
  "25769803790" -> "30064771188"  [ label = "AST: "] 
  "25769803790" -> "94489280521"  [ label = "AST: "] 
  "25769803790" -> "30064771189"  [ label = "AST: "] 
  "25769803790" -> "30064771190"  [ label = "AST: "] 
  "25769803790" -> "30064771193"  [ label = "AST: "] 
  "25769803790" -> "94489280522"  [ label = "AST: "] 
  "25769803790" -> "94489280523"  [ label = "AST: "] 
  "25769803790" -> "30064771196"  [ label = "AST: "] 
  "25769803790" -> "30064771201"  [ label = "AST: "] 
  "25769803790" -> "30064771205"  [ label = "AST: "] 
  "25769803790" -> "47244640267"  [ label = "AST: "] 
  "25769803790" -> "94489280524"  [ label = "AST: "] 
  "25769803790" -> "30064771215"  [ label = "AST: "] 
  "25769803790" -> "30064771220"  [ label = "AST: "] 
  "30064771188" -> "68719476821"  [ label = "AST: "] 
  "30064771188" -> "90194313239"  [ label = "AST: "] 
  "30064771189" -> "68719476822"  [ label = "AST: "] 
  "30064771189" -> "90194313240"  [ label = "AST: "] 
  "30064771190" -> "68719476823"  [ label = "AST: "] 
  "30064771190" -> "30064771191"  [ label = "AST: "] 
  "30064771190" -> "90194313241"  [ label = "AST: "] 
  "30064771191" -> "30064771192"  [ label = "AST: "] 
  "30064771191" -> "55834574882"  [ label = "AST: "] 
  "30064771192" -> "68719476824"  [ label = "AST: "] 
  "30064771192" -> "55834574881"  [ label = "AST: "] 
  "30064771193" -> "68719476825"  [ label = "AST: "] 
  "30064771193" -> "30064771194"  [ label = "AST: "] 
  "30064771193" -> "90194313242"  [ label = "AST: "] 
  "30064771194" -> "30064771195"  [ label = "AST: "] 
  "30064771194" -> "55834574884"  [ label = "AST: "] 
  "30064771195" -> "68719476826"  [ label = "AST: "] 
  "30064771195" -> "55834574883"  [ label = "AST: "] 
  "30064771196" -> "68719476827"  [ label = "AST: "] 
  "30064771196" -> "30064771197"  [ label = "AST: "] 
  "30064771197" -> "30064771198"  [ label = "AST: "] 
  "30064771197" -> "30064771200"  [ label = "AST: "] 
  "30064771198" -> "30064771199"  [ label = "AST: "] 
  "30064771198" -> "55834574886"  [ label = "AST: "] 
  "30064771199" -> "68719476828"  [ label = "AST: "] 
  "30064771199" -> "55834574885"  [ label = "AST: "] 
  "30064771200" -> "68719476829"  [ label = "AST: "] 
  "30064771201" -> "30064771202"  [ label = "AST: "] 
  "30064771201" -> "30064771203"  [ label = "AST: "] 
  "30064771202" -> "68719476830"  [ label = "AST: "] 
  "30064771202" -> "55834574887"  [ label = "AST: "] 
  "30064771203" -> "30064771204"  [ label = "AST: "] 
  "30064771203" -> "68719476832"  [ label = "AST: "] 
  "30064771204" -> "90194313243"  [ label = "AST: "] 
  "30064771204" -> "68719476831"  [ label = "AST: "] 
  "30064771205" -> "68719476833"  [ label = "AST: "] 
  "30064771205" -> "30064771206"  [ label = "AST: "] 
  "30064771206" -> "30064771207"  [ label = "AST: "] 
  "30064771206" -> "90194313244"  [ label = "AST: "] 
  "30064771207" -> "68719476834"  [ label = "AST: "] 
  "30064771207" -> "55834574888"  [ label = "AST: "] 
  "47244640267" -> "30064771208"  [ label = "AST: "] 
  "47244640267" -> "25769803791"  [ label = "AST: "] 
  "30064771208" -> "68719476835"  [ label = "AST: "] 
  "25769803791" -> "30064771209"  [ label = "AST: "] 
  "30064771209" -> "30064771210"  [ label = "AST: "] 
  "30064771209" -> "30064771211"  [ label = "AST: "] 
  "30064771210" -> "68719476836"  [ label = "AST: "] 
  "30064771210" -> "55834574889"  [ label = "AST: "] 
  "30064771211" -> "184683593732"  [ label = "AST: "] 
  "30064771211" -> "30064771212"  [ label = "AST: "] 
  "30064771212" -> "30064771213"  [ label = "AST: "] 
  "30064771212" -> "90194313245"  [ label = "AST: "] 
  "30064771213" -> "30064771214"  [ label = "AST: "] 
  "30064771213" -> "55834574891"  [ label = "AST: "] 
  "30064771214" -> "68719476837"  [ label = "AST: "] 
  "30064771214" -> "55834574890"  [ label = "AST: "] 
  "30064771215" -> "68719476838"  [ label = "AST: "] 
  "30064771215" -> "30064771216"  [ label = "AST: "] 
  "30064771216" -> "30064771217"  [ label = "AST: "] 
  "30064771216" -> "30064771219"  [ label = "AST: "] 
  "30064771217" -> "30064771218"  [ label = "AST: "] 
  "30064771217" -> "55834574893"  [ label = "AST: "] 
  "30064771218" -> "68719476839"  [ label = "AST: "] 
  "30064771218" -> "55834574892"  [ label = "AST: "] 
  "30064771219" -> "68719476840"  [ label = "AST: "] 
  "30064771220" -> "68719476841"  [ label = "AST: "] 
  "30064771220" -> "68719476842"  [ label = "AST: "] 
  "30064771220" -> "30064771221"  [ label = "AST: "] 
  "30064771221" -> "68719476843"  [ label = "AST: "] 
  "146028888066" -> "30064771222"  [ label = "AST: "] 
  "30064771222" -> "68719476844"  [ label = "AST: "] 
  "30064771222" -> "68719476845"  [ label = "AST: "] 
  "30064771222" -> "68719476846"  [ label = "AST: "] 
  "30064771222" -> "30064771223"  [ label = "AST: "] 
  "30064771223" -> "30064771224"  [ label = "AST: "] 
  "30064771224" -> "68719476847"  [ label = "AST: "] 
  "30064771224" -> "55834574894"  [ label = "AST: "] 
  "30064771080" -> "30064771084"  [ label = "CFG: "] 
  "30064771083" -> "30064771086"  [ label = "CFG: "] 
  "30064771085" -> "30064771089"  [ label = "CFG: "] 
  "30064771087" -> "30064771092"  [ label = "CFG: "] 
  "30064771090" -> "55834574849"  [ label = "CFG: "] 
  "30064771093" -> "30064771096"  [ label = "CFG: "] 
  "146028888066" -> "128849018882"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771094" -> "55834574850"  [ label = "CFG: "] 
  "30064771095" -> "30064771093"  [ label = "CFG: "] 
  "30064771096" -> "55834574851"  [ label = "CFG: "] 
  "30064771096" -> "30064771151"  [ label = "CFG: "] 
  "30064771150" -> "55834574869"  [ label = "CFG: "] 
  "30064771150" -> "55834574880"  [ label = "CFG: "] 
  "30064771186" -> "30064771188"  [ label = "CFG: "] 
  "30064771186" -> "55834574894"  [ label = "CFG: "] 
  "30064771222" -> "146028888066"  [ label = "CFG: "] 
  "184683593728" -> "55834574848"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "55834574849" -> "30064771094"  [ label = "CFG: "] 
  "55834574850" -> "30064771095"  [ label = "CFG: "] 
  "30064771151" -> "30064771150"  [ label = "CFG: "] 
  "30064771151" -> "30064771152"  [ label = "CFG: "] 
  "30064771152" -> "30064771150"  [ label = "CFG: "] 
  "30064771187" -> "30064771186"  [ label = "CFG: "] 
  "30064771188" -> "30064771189"  [ label = "CFG: "] 
  "30064771189" -> "55834574881"  [ label = "CFG: "] 
  "30064771190" -> "55834574883"  [ label = "CFG: "] 
  "30064771193" -> "55834574885"  [ label = "CFG: "] 
  "30064771196" -> "55834574887"  [ label = "CFG: "] 
  "30064771201" -> "55834574888"  [ label = "CFG: "] 
  "30064771205" -> "30064771208"  [ label = "CFG: "] 
  "30064771215" -> "30064771221"  [ label = "CFG: "] 
  "30064771220" -> "55834574894"  [ label = "CFG: "] 
  "30064771223" -> "30064771222"  [ label = "CFG: "] 
  "55834574848" -> "30064771082"  [ label = "CFG: "] 
  "30064771097" -> "55834574853"  [ label = "CFG: "] 
  "30064771097" -> "30064771151"  [ label = "CFG: "] 
  "30064771153" -> "55834574870"  [ label = "CFG: "] 
  "30064771153" -> "55834574872"  [ label = "CFG: "] 
  "55834574880" -> "30064771187"  [ label = "CFG: "] 
  "30064771191" -> "30064771190"  [ label = "CFG: "] 
  "30064771194" -> "30064771193"  [ label = "CFG: "] 
  "30064771197" -> "30064771196"  [ label = "CFG: "] 
  "30064771202" -> "30064771204"  [ label = "CFG: "] 
  "30064771203" -> "30064771201"  [ label = "CFG: "] 
  "30064771206" -> "30064771205"  [ label = "CFG: "] 
  "30064771208" -> "55834574889"  [ label = "CFG: "] 
  "30064771208" -> "55834574892"  [ label = "CFG: "] 
  "30064771216" -> "30064771215"  [ label = "CFG: "] 
  "30064771221" -> "30064771220"  [ label = "CFG: "] 
  "30064771224" -> "30064771223"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771098" -> "55834574852"  [ label = "CFG: "] 
  "30064771100" -> "30064771097"  [ label = "CFG: "] 
  "30064771120" -> "30064771125"  [ label = "CFG: "] 
  "30064771125" -> "55834574863"  [ label = "CFG: "] 
  "30064771126" -> "55834574865"  [ label = "CFG: "] 
  "30064771133" -> "184683593730"  [ label = "CFG: "] 
  "30064771137" -> "55834574866"  [ label = "CFG: "] 
  "30064771142" -> "55834574867"  [ label = "CFG: "] 
  "30064771145" -> "55834574868"  [ label = "CFG: "] 
  "30064771148" -> "30064771151"  [ label = "CFG: "] 
  "30064771154" -> "30064771153"  [ label = "CFG: "] 
  "30064771155" -> "30064771161"  [ label = "CFG: "] 
  "30064771160" -> "55834574880"  [ label = "CFG: "] 
  "30064771192" -> "55834574882"  [ label = "CFG: "] 
  "55834574882" -> "30064771191"  [ label = "CFG: "] 
  "30064771195" -> "55834574884"  [ label = "CFG: "] 
  "55834574884" -> "30064771194"  [ label = "CFG: "] 
  "30064771198" -> "30064771200"  [ label = "CFG: "] 
  "30064771200" -> "30064771197"  [ label = "CFG: "] 
  "55834574887" -> "30064771202"  [ label = "CFG: "] 
  "30064771204" -> "30064771203"  [ label = "CFG: "] 
  "30064771207" -> "30064771206"  [ label = "CFG: "] 
  "30064771209" -> "55834574892"  [ label = "CFG: "] 
  "30064771217" -> "30064771219"  [ label = "CFG: "] 
  "30064771219" -> "30064771216"  [ label = "CFG: "] 
  "55834574894" -> "30064771224"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771102" -> "55834574854"  [ label = "CFG: "] 
  "30064771102" -> "55834574857"  [ label = "CFG: "] 
  "30064771111" -> "55834574858"  [ label = "CFG: "] 
  "30064771111" -> "55834574861"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771134" -> "30064771133"  [ label = "CFG: "] 
  "30064771138" -> "30064771137"  [ label = "CFG: "] 
  "30064771143" -> "184683593731"  [ label = "CFG: "] 
  "30064771144" -> "30064771142"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771149" -> "30064771148"  [ label = "CFG: "] 
  "55834574869" -> "30064771154"  [ label = "CFG: "] 
  "30064771156" -> "30064771155"  [ label = "CFG: "] 
  "30064771161" -> "124554051584"  [ label = "CFG: "] 
  "30064771162" -> "30064771160"  [ label = "CFG: "] 
  "55834574881" -> "30064771192"  [ label = "CFG: "] 
  "55834574883" -> "30064771195"  [ label = "CFG: "] 
  "30064771199" -> "55834574886"  [ label = "CFG: "] 
  "55834574886" -> "30064771198"  [ label = "CFG: "] 
  "55834574888" -> "30064771207"  [ label = "CFG: "] 
  "30064771210" -> "184683593732"  [ label = "CFG: "] 
  "30064771211" -> "30064771209"  [ label = "CFG: "] 
  "30064771218" -> "55834574893"  [ label = "CFG: "] 
  "55834574893" -> "30064771217"  [ label = "CFG: "] 
  "55834574851" -> "30064771099"  [ label = "CFG: "] 
  "55834574852" -> "30064771101"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771104" -> "55834574857"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771113" -> "55834574861"  [ label = "CFG: "] 
  "30064771122" -> "30064771124"  [ label = "CFG: "] 
  "30064771124" -> "30064771121"  [ label = "CFG: "] 
  "30064771128" -> "184683593729"  [ label = "CFG: "] 
  "30064771130" -> "30064771127"  [ label = "CFG: "] 
  "30064771135" -> "30064771134"  [ label = "CFG: "] 
  "184683593730" -> "30064771141"  [ label = "CFG: "] 
  "30064771139" -> "30064771138"  [ label = "CFG: "] 
  "55834574866" -> "30064771143"  [ label = "CFG: "] 
  "184683593731" -> "30064771144"  [ label = "CFG: "] 
  "30064771147" -> "30064771146"  [ label = "CFG: "] 
  "55834574868" -> "30064771149"  [ label = "CFG: "] 
  "30064771157" -> "30064771159"  [ label = "CFG: "] 
  "30064771159" -> "30064771156"  [ label = "CFG: "] 
  "30064771163" -> "30064771162"  [ label = "CFG: "] 
  "30064771164" -> "55834574873"  [ label = "CFG: "] 
  "30064771164" -> "55834574875"  [ label = "CFG: "] 
  "55834574885" -> "30064771199"  [ label = "CFG: "] 
  "55834574889" -> "30064771210"  [ label = "CFG: "] 
  "184683593732" -> "55834574890"  [ label = "CFG: "] 
  "30064771212" -> "30064771211"  [ label = "CFG: "] 
  "55834574892" -> "30064771218"  [ label = "CFG: "] 
  "55834574853" -> "30064771103"  [ label = "CFG: "] 
  "30064771105" -> "55834574856"  [ label = "CFG: "] 
  "30064771107" -> "30064771104"  [ label = "CFG: "] 
  "55834574857" -> "30064771112"  [ label = "CFG: "] 
  "30064771114" -> "55834574860"  [ label = "CFG: "] 
  "30064771116" -> "30064771113"  [ label = "CFG: "] 
  "30064771123" -> "55834574862"  [ label = "CFG: "] 
  "55834574862" -> "30064771122"  [ label = "CFG: "] 
  "30064771129" -> "55834574864"  [ label = "CFG: "] 
  "55834574864" -> "30064771128"  [ label = "CFG: "] 
  "184683593729" -> "30064771132"  [ label = "CFG: "] 
  "30064771131" -> "30064771130"  [ label = "CFG: "] 
  "30064771136" -> "30064771135"  [ label = "CFG: "] 
  "30064771140" -> "30064771139"  [ label = "CFG: "] 
  "55834574867" -> "30064771147"  [ label = "CFG: "] 
  "30064771158" -> "55834574871"  [ label = "CFG: "] 
  "55834574871" -> "30064771157"  [ label = "CFG: "] 
  "124554051584" -> "30064771163"  [ label = "CFG: "] 
  "30064771165" -> "30064771164"  [ label = "CFG: "] 
  "30064771166" -> "30064771172"  [ label = "CFG: "] 
  "30064771171" -> "55834574880"  [ label = "CFG: "] 
  "30064771213" -> "30064771212"  [ label = "CFG: "] 
  "30064771106" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771105"  [ label = "CFG: "] 
  "30064771108" -> "30064771110"  [ label = "CFG: "] 
  "30064771110" -> "30064771107"  [ label = "CFG: "] 
  "30064771115" -> "55834574859"  [ label = "CFG: "] 
  "55834574859" -> "30064771114"  [ label = "CFG: "] 
  "30064771117" -> "30064771119"  [ label = "CFG: "] 
  "30064771119" -> "30064771116"  [ label = "CFG: "] 
  "55834574861" -> "30064771123"  [ label = "CFG: "] 
  "55834574863" -> "30064771129"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "55834574865" -> "30064771136"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "55834574870" -> "30064771158"  [ label = "CFG: "] 
  "55834574872" -> "30064771165"  [ label = "CFG: "] 
  "30064771167" -> "30064771166"  [ label = "CFG: "] 
  "30064771172" -> "124554051585"  [ label = "CFG: "] 
  "30064771173" -> "30064771171"  [ label = "CFG: "] 
  "30064771214" -> "55834574891"  [ label = "CFG: "] 
  "55834574891" -> "30064771213"  [ label = "CFG: "] 
  "55834574854" -> "30064771106"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "55834574858" -> "30064771115"  [ label = "CFG: "] 
  "30064771118" -> "30064771117"  [ label = "CFG: "] 
  "30064771168" -> "30064771170"  [ label = "CFG: "] 
  "30064771170" -> "30064771167"  [ label = "CFG: "] 
  "30064771174" -> "30064771173"  [ label = "CFG: "] 
  "30064771175" -> "55834574876"  [ label = "CFG: "] 
  "30064771175" -> "55834574880"  [ label = "CFG: "] 
  "55834574890" -> "30064771214"  [ label = "CFG: "] 
  "55834574856" -> "30064771109"  [ label = "CFG: "] 
  "55834574860" -> "30064771118"  [ label = "CFG: "] 
  "30064771169" -> "55834574874"  [ label = "CFG: "] 
  "55834574874" -> "30064771168"  [ label = "CFG: "] 
  "124554051585" -> "30064771174"  [ label = "CFG: "] 
  "30064771176" -> "30064771175"  [ label = "CFG: "] 
  "30064771177" -> "55834574878"  [ label = "CFG: "] 
  "30064771182" -> "55834574880"  [ label = "CFG: "] 
  "55834574873" -> "30064771169"  [ label = "CFG: "] 
  "55834574875" -> "30064771176"  [ label = "CFG: "] 
  "30064771178" -> "30064771177"  [ label = "CFG: "] 
  "30064771183" -> "30064771182"  [ label = "CFG: "] 
  "30064771179" -> "30064771181"  [ label = "CFG: "] 
  "30064771181" -> "30064771178"  [ label = "CFG: "] 
  "30064771184" -> "30064771183"  [ label = "CFG: "] 
  "30064771180" -> "55834574877"  [ label = "CFG: "] 
  "55834574877" -> "30064771179"  [ label = "CFG: "] 
  "30064771185" -> "55834574879"  [ label = "CFG: "] 
  "55834574879" -> "30064771184"  [ label = "CFG: "] 
  "55834574876" -> "30064771180"  [ label = "CFG: "] 
  "55834574878" -> "30064771185"  [ label = "CFG: "] 
  "111669149699" -> "184683593728"  [ label = "CFG: "] 
  "146028888066" -> "128849018882"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771080" -> "128849018882"  [ label = "DDG: data"] 
  "30064771081" -> "128849018882"  [ label = "DDG: node-&gt;user_data"] 
  "30064771080" -> "128849018882"  [ label = "DDG: reinterpret_cast&lt;OpData*&gt;(node-&gt;user_data)"] 
  "30064771080" -> "128849018882"  [ label = "DDG: * data = reinterpret_cast&lt;OpData*&gt;(node-&gt;user_data)"] 
  "30064771083" -> "128849018882"  [ label = "DDG: NumInputs(node)"] 
  "30064771083" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_EQ(context, NumInputs(node), 1)"] 
  "30064771085" -> "128849018882"  [ label = "DDG: NumOutputs(node)"] 
  "30064771085" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1)"] 
  "30064771088" -> "128849018882"  [ label = "DDG: &amp;input"] 
  "30064771087" -> "128849018882"  [ label = "DDG: GetInputSafe(context, node, 0, &amp;input)"] 
  "30064771087" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &amp;input))"] 
  "30064771091" -> "128849018882"  [ label = "DDG: node"] 
  "30064771091" -> "128849018882"  [ label = "DDG: &amp;output"] 
  "30064771090" -> "128849018882"  [ label = "DDG: GetOutputSafe(context, node, 0, &amp;output)"] 
  "30064771090" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &amp;output))"] 
  "30064771093" -> "128849018882"  [ label = "DDG: output-&gt;type"] 
  "30064771093" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_TYPES_EQ(context, input-&gt;type, output-&gt;type)"] 
  "30064771096" -> "128849018882"  [ label = "DDG: kernel_type == kFixedPointOptimized"] 
  "30064771098" -> "128849018882"  [ label = "DDG: kTfLiteUInt8"] 
  "30064771097" -> "128849018882"  [ label = "DDG: input-&gt;type == kTfLiteUInt8"] 
  "30064771100" -> "128849018882"  [ label = "DDG: kTfLiteInt8"] 
  "30064771097" -> "128849018882"  [ label = "DDG: input-&gt;type == kTfLiteInt8"] 
  "30064771097" -> "128849018882"  [ label = "DDG: input-&gt;type == kTfLiteUInt8 || input-&gt;type == kTfLiteInt8"] 
  "30064771102" -> "128849018882"  [ label = "DDG: kTfLiteUInt8"] 
  "30064771102" -> "128849018882"  [ label = "DDG: input-&gt;type == kTfLiteUInt8"] 
  "30064771108" -> "128849018882"  [ label = "DDG: std::numeric_limits"] 
  "30064771108" -> "128849018882"  [ label = "DDG: uint8_t"] 
  "30064771107" -> "128849018882"  [ label = "DDG: std::numeric_limits&lt;uint8_t"] 
  "30064771107" -> "128849018882"  [ label = "DDG: ::min()"] 
  "30064771104" -> "128849018882"  [ label = "DDG: std::numeric_limits&lt;uint8_t&gt;::min()"] 
  "30064771104" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_point,
                          std::numeric_limits&lt;uint8_t&gt;::min())"] 
  "30064771111" -> "128849018882"  [ label = "DDG: kTfLiteInt8"] 
  "30064771111" -> "128849018882"  [ label = "DDG: input-&gt;type == kTfLiteInt8"] 
  "30064771117" -> "128849018882"  [ label = "DDG: std::numeric_limits"] 
  "30064771117" -> "128849018882"  [ label = "DDG: int8_t"] 
  "30064771116" -> "128849018882"  [ label = "DDG: std::numeric_limits&lt;int8_t"] 
  "30064771116" -> "128849018882"  [ label = "DDG: ::min()"] 
  "30064771113" -> "128849018882"  [ label = "DDG: std::numeric_limits&lt;int8_t&gt;::min()"] 
  "30064771113" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_point,
                          std::numeric_limits&lt;int8_t&gt;::min())"] 
  "30064771121" -> "128849018882"  [ label = "DDG: 1. / 256"] 
  "30064771120" -> "128849018882"  [ label = "DDG: output-&gt;params.scale == 1. / 256"] 
  "30064771120" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE(context, output-&gt;params.scale == 1. / 256)"] 
  "30064771125" -> "128849018882"  [ label = "DDG: kInputIntegerBits = 4"] 
  "30064771127" -> "128849018882"  [ label = "DDG: input-&gt;params.scale"] 
  "30064771131" -> "128849018882"  [ label = "DDG: 15 - kInputIntegerBits"] 
  "30064771130" -> "128849018882"  [ label = "DDG: 1 &lt;&lt; (15 - kInputIntegerBits)"] 
  "30064771127" -> "128849018882"  [ label = "DDG: static_cast&lt;double&gt;(1 &lt;&lt; (15 - kInputIntegerBits))"] 
  "30064771126" -> "128849018882"  [ label = "DDG: input-&gt;params.scale *
          static_cast&lt;double&gt;(1 &lt;&lt; (15 - kInputIntegerBits))"] 
  "30064771126" -> "128849018882"  [ label = "DDG: input_real_multiplier =
          input-&gt;params.scale *
          static_cast&lt;double&gt;(1 &lt;&lt; (15 - kInputIntegerBits))"] 
  "30064771134" -> "128849018882"  [ label = "DDG: input_real_multiplier"] 
  "30064771134" -> "128849018882"  [ label = "DDG: &amp;data-&gt;input_left_shift"] 
  "30064771133" -> "128849018882"  [ label = "DDG: std::frexp(input_real_multiplier, &amp;data-&gt;input_left_shift)"] 
  "30064771133" -> "128849018882"  [ label = "DDG: q =
          std::frexp(input_real_multiplier, &amp;data-&gt;input_left_shift)"] 
  "30064771140" -> "128849018882"  [ label = "DDG: q"] 
  "30064771140" -> "128849018882"  [ label = "DDG: 1ll &lt;&lt; 15"] 
  "30064771139" -> "128849018882"  [ label = "DDG: q * (1ll &lt;&lt; 15)"] 
  "30064771138" -> "128849018882"  [ label = "DDG: TfLiteRound(q * (1ll &lt;&lt; 15))"] 
  "30064771137" -> "128849018882"  [ label = "DDG: static_cast&lt;int32_t&gt;(TfLiteRound(q * (1ll &lt;&lt; 15)))"] 
  "30064771137" -> "128849018882"  [ label = "DDG: q_fixed = static_cast&lt;int32_t&gt;(TfLiteRound(q * (1ll &lt;&lt; 15)))"] 
  "30064771142" -> "128849018882"  [ label = "DDG: data-&gt;input_multiplier"] 
  "30064771144" -> "128849018882"  [ label = "DDG: q_fixed"] 
  "30064771142" -> "128849018882"  [ label = "DDG: static_cast&lt;int16_t&gt;(q_fixed)"] 
  "30064771142" -> "128849018882"  [ label = "DDG: data-&gt;input_multiplier = static_cast&lt;int16_t&gt;(q_fixed)"] 
  "30064771146" -> "128849018882"  [ label = "DDG: kInputIntegerBits"] 
  "30064771146" -> "128849018882"  [ label = "DDG: data-&gt;input_left_shift"] 
  "30064771145" -> "128849018882"  [ label = "DDG: CalculateInputRadius(kInputIntegerBits, data-&gt;input_left_shift, 15)"] 
  "30064771145" -> "128849018882"  [ label = "DDG: input_range_radius =
          CalculateInputRadius(kInputIntegerBits, data-&gt;input_left_shift, 15)"] 
  "30064771148" -> "128849018882"  [ label = "DDG: data-&gt;input_range_radius"] 
  "30064771148" -> "128849018882"  [ label = "DDG: input_range_radius"] 
  "30064771148" -> "128849018882"  [ label = "DDG: data-&gt;input_range_radius = input_range_radius"] 
  "30064771151" -> "128849018882"  [ label = "DDG: kernel_type"] 
  "30064771150" -> "128849018882"  [ label = "DDG: kernel_type == kGenericOptimized"] 
  "30064771152" -> "128849018882"  [ label = "DDG: kernel_type"] 
  "30064771150" -> "128849018882"  [ label = "DDG: kernel_type == kReference"] 
  "30064771150" -> "128849018882"  [ label = "DDG: kernel_type == kGenericOptimized || kernel_type == kReference"] 
  "30064771153" -> "128849018882"  [ label = "DDG: kTfLiteUInt8"] 
  "30064771153" -> "128849018882"  [ label = "DDG: input-&gt;type == kTfLiteUInt8"] 
  "30064771164" -> "128849018882"  [ label = "DDG: kTfLiteInt8"] 
  "30064771164" -> "128849018882"  [ label = "DDG: input-&gt;type == kTfLiteInt8"] 
  "30064771178" -> "128849018882"  [ label = "DDG: 1. / 32768"] 
  "30064771177" -> "128849018882"  [ label = "DDG: output-&gt;params.scale == 1. / 32768"] 
  "30064771177" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE(context, output-&gt;params.scale == 1. / 32768)"] 
  "30064771182" -> "128849018882"  [ label = "DDG: output-&gt;params.zero_point == 0"] 
  "30064771182" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE(context, output-&gt;params.zero_point == 0)"] 
  "30064771167" -> "128849018882"  [ label = "DDG: 1. / 256"] 
  "30064771166" -> "128849018882"  [ label = "DDG: output-&gt;params.scale == 1. / 256"] 
  "30064771166" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE(context, output-&gt;params.scale == 1. / 256)"] 
  "30064771172" -> "128849018882"  [ label = "DDG: PopulateLookupTable"] 
  "30064771172" -> "128849018882"  [ label = "DDG: int8_t"] 
  "30064771171" -> "128849018882"  [ label = "DDG: PopulateLookupTable&lt;int8_t"] 
  "30064771174" -> "128849018882"  [ label = "DDG: data"] 
  "30064771174" -> "128849018882"  [ label = "DDG: input"] 
  "30064771173" -> "128849018882"  [ label = "DDG: data, input, output, [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      }"] 
  "30064771171" -> "128849018882"  [ label = "DDG: (data, input, output, [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      })"] 
  "30064771171" -> "128849018882"  [ label = "DDG: PopulateLookupTable&lt;int8_t&gt;(data, input, output, [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      })"] 
  "30064771156" -> "128849018882"  [ label = "DDG: 1. / 256"] 
  "30064771155" -> "128849018882"  [ label = "DDG: output-&gt;params.scale == 1. / 256"] 
  "30064771155" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE(context, output-&gt;params.scale == 1. / 256)"] 
  "30064771161" -> "128849018882"  [ label = "DDG: PopulateLookupTable"] 
  "30064771161" -> "128849018882"  [ label = "DDG: uint8_t"] 
  "30064771160" -> "128849018882"  [ label = "DDG: PopulateLookupTable&lt;uint8_t"] 
  "30064771163" -> "128849018882"  [ label = "DDG: data"] 
  "30064771163" -> "128849018882"  [ label = "DDG: input"] 
  "30064771162" -> "128849018882"  [ label = "DDG: data, input, output, [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      }"] 
  "30064771160" -> "128849018882"  [ label = "DDG: (data, input, output, [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      })"] 
  "30064771160" -> "128849018882"  [ label = "DDG: PopulateLookupTable&lt;uint8_t&gt;(data, input, output, [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      })"] 
  "30064771186" -> "128849018882"  [ label = "DDG: input-&gt;type"] 
  "30064771186" -> "128849018882"  [ label = "DDG: kTfLiteInt16"] 
  "30064771186" -> "128849018882"  [ label = "DDG: input-&gt;type == kTfLiteInt16"] 
  "30064771188" -> "128849018882"  [ label = "DDG: kInputIntegerBits = 3"] 
  "30064771189" -> "128849018882"  [ label = "DDG: kOutputFractionalBits = 15"] 
  "30064771190" -> "128849018882"  [ label = "DDG: input-&gt;params.zero_point"] 
  "30064771190" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_EQ(context, input-&gt;params.zero_point, 0)"] 
  "30064771193" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_EQ(context, output-&gt;params.zero_point, 0)"] 
  "30064771197" -> "128849018882"  [ label = "DDG: input-&gt;params.scale"] 
  "30064771197" -> "128849018882"  [ label = "DDG: &amp;input_scale_log2_rounded"] 
  "30064771196" -> "128849018882"  [ label = "DDG: CheckedLog2(input-&gt;params.scale, &amp;input_scale_log2_rounded)"] 
  "30064771196" -> "128849018882"  [ label = "DDG: param_scale_pot =
        CheckedLog2(input-&gt;params.scale, &amp;input_scale_log2_rounded)"] 
  "30064771204" -> "128849018882"  [ label = "DDG: kInputIntegerBits"] 
  "30064771203" -> "128849018882"  [ label = "DDG: 15 - kInputIntegerBits"] 
  "30064771203" -> "128849018882"  [ label = "DDG: input_scale_log2_rounded"] 
  "30064771201" -> "128849018882"  [ label = "DDG: (15 - kInputIntegerBits) + input_scale_log2_rounded"] 
  "30064771201" -> "128849018882"  [ label = "DDG: data-&gt;input_left_shift =
        (15 - kInputIntegerBits) + input_scale_log2_rounded"] 
  "30064771206" -> "128849018882"  [ label = "DDG: data-&gt;input_left_shift"] 
  "30064771205" -> "128849018882"  [ label = "DDG: data-&gt;input_left_shift == 0"] 
  "30064771208" -> "128849018882"  [ label = "DDG: param_scale_pot"] 
  "30064771208" -> "128849018882"  [ label = "DDG: !param_scale_pot"] 
  "30064771209" -> "128849018882"  [ label = "DDG: data-&gt;input_multiplier"] 
  "30064771212" -> "128849018882"  [ label = "DDG: input-&gt;params.scale"] 
  "30064771211" -> "128849018882"  [ label = "DDG: input-&gt;params.scale * 4096"] 
  "30064771209" -> "128849018882"  [ label = "DDG: static_cast&lt;int32_t&gt;(input-&gt;params.scale * 4096)"] 
  "30064771209" -> "128849018882"  [ label = "DDG: data-&gt;input_multiplier = static_cast&lt;int32_t&gt;(input-&gt;params.scale * 4096)"] 
  "30064771216" -> "128849018882"  [ label = "DDG: &amp;output_scale_log2_rounded"] 
  "30064771215" -> "128849018882"  [ label = "DDG: CheckedLog2(output-&gt;params.scale, &amp;output_scale_log2_rounded)"] 
  "30064771215" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE(
        context, CheckedLog2(output-&gt;params.scale, &amp;output_scale_log2_rounded))"] 
  "30064771220" -> "128849018882"  [ label = "DDG: output_scale_log2_rounded"] 
  "30064771221" -> "128849018882"  [ label = "DDG: kOutputFractionalBits"] 
  "30064771220" -> "128849018882"  [ label = "DDG: -kOutputFractionalBits"] 
  "30064771220" -> "128849018882"  [ label = "DDG: TF_LITE_ENSURE_EQ(context, output_scale_log2_rounded,
                      -kOutputFractionalBits)"] 
  "30064771222" -> "128849018882"  [ label = "DDG: context"] 
  "30064771222" -> "128849018882"  [ label = "DDG: output"] 
  "30064771223" -> "128849018882"  [ label = "DDG: input-&gt;dims"] 
  "30064771222" -> "128849018882"  [ label = "DDG: TfLiteIntArrayCopy(input-&gt;dims)"] 
  "30064771222" -> "128849018882"  [ label = "DDG: context-&gt;ResizeTensor(context, output,
                               TfLiteIntArrayCopy(input-&gt;dims))"] 
  "30064771151" -> "128849018882"  [ label = "DDG: kGenericOptimized"] 
  "30064771096" -> "128849018882"  [ label = "DDG: kFixedPointOptimized"] 
  "30064771152" -> "128849018882"  [ label = "DDG: kReference"] 
  "111669149699" -> "115964116994"  [ label = "DDG: "] 
  "111669149699" -> "115964116995"  [ label = "DDG: "] 
  "115964116995" -> "30064771080"  [ label = "DDG: node"] 
  "30064771222" -> "146028888066"  [ label = "DDG: context-&gt;ResizeTensor(context, output,
                               TfLiteIntArrayCopy(input-&gt;dims))"] 
  "115964116994" -> "30064771083"  [ label = "DDG: context"] 
  "111669149699" -> "30064771083"  [ label = "DDG: "] 
  "30064771084" -> "30064771083"  [ label = "DDG: node"] 
  "30064771083" -> "30064771085"  [ label = "DDG: context"] 
  "111669149699" -> "30064771085"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: node"] 
  "30064771088" -> "30064771087"  [ label = "DDG: context"] 
  "111669149699" -> "30064771087"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: node"] 
  "30064771088" -> "30064771087"  [ label = "DDG: 0"] 
  "30064771088" -> "30064771087"  [ label = "DDG: &amp;input"] 
  "30064771091" -> "30064771090"  [ label = "DDG: context"] 
  "111669149699" -> "30064771090"  [ label = "DDG: "] 
  "30064771091" -> "30064771090"  [ label = "DDG: node"] 
  "30064771091" -> "30064771090"  [ label = "DDG: 0"] 
  "30064771091" -> "30064771090"  [ label = "DDG: &amp;output"] 
  "30064771090" -> "30064771093"  [ label = "DDG: context"] 
  "111669149699" -> "30064771093"  [ label = "DDG: "] 
  "115964116995" -> "30064771081"  [ label = "DDG: node"] 
  "115964116995" -> "30064771084"  [ label = "DDG: node"] 
  "111669149699" -> "30064771084"  [ label = "DDG: "] 
  "30064771084" -> "30064771086"  [ label = "DDG: node"] 
  "111669149699" -> "30064771086"  [ label = "DDG: "] 
  "115964116995" -> "30064771086"  [ label = "DDG: node"] 
  "30064771085" -> "30064771088"  [ label = "DDG: context"] 
  "111669149699" -> "30064771088"  [ label = "DDG: "] 
  "30064771086" -> "30064771088"  [ label = "DDG: node"] 
  "115964116995" -> "30064771088"  [ label = "DDG: node"] 
  "30064771087" -> "30064771091"  [ label = "DDG: context"] 
  "111669149699" -> "30064771091"  [ label = "DDG: "] 
  "30064771088" -> "30064771091"  [ label = "DDG: node"] 
  "115964116995" -> "30064771091"  [ label = "DDG: node"] 
  "111669149699" -> "30064771096"  [ label = "DDG: "] 
  "30064771151" -> "30064771150"  [ label = "DDG: kernel_type"] 
  "30064771151" -> "30064771150"  [ label = "DDG: kGenericOptimized"] 
  "30064771152" -> "30064771150"  [ label = "DDG: kernel_type"] 
  "30064771152" -> "30064771150"  [ label = "DDG: kReference"] 
  "30064771093" -> "30064771186"  [ label = "DDG: input-&gt;type"] 
  "30064771098" -> "30064771186"  [ label = "DDG: input-&gt;type"] 
  "30064771100" -> "30064771186"  [ label = "DDG: input-&gt;type"] 
  "30064771111" -> "30064771186"  [ label = "DDG: input-&gt;type"] 
  "30064771153" -> "30064771186"  [ label = "DDG: input-&gt;type"] 
  "30064771164" -> "30064771186"  [ label = "DDG: input-&gt;type"] 
  "30064771175" -> "30064771186"  [ label = "DDG: input-&gt;type"] 
  "30064771174" -> "30064771186"  [ label = "DDG: input"] 
  "30064771163" -> "30064771186"  [ label = "DDG: input"] 
  "111669149699" -> "30064771186"  [ label = "DDG: "] 
  "30064771175" -> "30064771186"  [ label = "DDG: kTfLiteInt16"] 
  "111669149699" -> "30064771188"  [ label = "DDG: "] 
  "111669149699" -> "30064771189"  [ label = "DDG: "] 
  "30064771197" -> "30064771196"  [ label = "DDG: input-&gt;params.scale"] 
  "30064771197" -> "30064771196"  [ label = "DDG: &amp;input_scale_log2_rounded"] 
  "30064771204" -> "30064771201"  [ label = "DDG: 15"] 
  "30064771204" -> "30064771201"  [ label = "DDG: kInputIntegerBits"] 
  "30064771197" -> "30064771201"  [ label = "DDG: &amp;input_scale_log2_rounded"] 
  "111669149699" -> "30064771201"  [ label = "DDG: "] 
  "30064771093" -> "30064771222"  [ label = "DDG: context"] 
  "30064771120" -> "30064771222"  [ label = "DDG: context"] 
  "30064771182" -> "30064771222"  [ label = "DDG: context"] 
  "30064771166" -> "30064771222"  [ label = "DDG: context"] 
  "30064771155" -> "30064771222"  [ label = "DDG: context"] 
  "30064771220" -> "30064771222"  [ label = "DDG: context"] 
  "111669149699" -> "30064771222"  [ label = "DDG: "] 
  "30064771091" -> "30064771222"  [ label = "DDG: &amp;output"] 
  "30064771093" -> "30064771222"  [ label = "DDG: output-&gt;type"] 
  "30064771174" -> "30064771222"  [ label = "DDG: output"] 
  "30064771163" -> "30064771222"  [ label = "DDG: output"] 
  "30064771223" -> "30064771222"  [ label = "DDG: input-&gt;dims"] 
  "30064771096" -> "30064771151"  [ label = "DDG: kernel_type"] 
  "111669149699" -> "30064771151"  [ label = "DDG: "] 
  "30064771151" -> "30064771152"  [ label = "DDG: kernel_type"] 
  "111669149699" -> "30064771152"  [ label = "DDG: "] 
  "30064771093" -> "30064771190"  [ label = "DDG: context"] 
  "30064771120" -> "30064771190"  [ label = "DDG: context"] 
  "30064771182" -> "30064771190"  [ label = "DDG: context"] 
  "30064771166" -> "30064771190"  [ label = "DDG: context"] 
  "30064771155" -> "30064771190"  [ label = "DDG: context"] 
  "111669149699" -> "30064771190"  [ label = "DDG: "] 
  "30064771190" -> "30064771193"  [ label = "DDG: context"] 
  "111669149699" -> "30064771193"  [ label = "DDG: "] 
  "30064771104" -> "30064771193"  [ label = "DDG: output-&gt;params.zero_point"] 
  "30064771113" -> "30064771193"  [ label = "DDG: output-&gt;params.zero_point"] 
  "30064771183" -> "30064771193"  [ label = "DDG: output-&gt;params.zero_point"] 
  "30064771196" -> "30064771205"  [ label = "DDG: param_scale_pot"] 
  "111669149699" -> "30064771205"  [ label = "DDG: "] 
  "30064771206" -> "30064771205"  [ label = "DDG: data-&gt;input_left_shift"] 
  "30064771206" -> "30064771205"  [ label = "DDG: 0"] 
  "30064771193" -> "30064771215"  [ label = "DDG: context"] 
  "111669149699" -> "30064771215"  [ label = "DDG: "] 
  "30064771216" -> "30064771215"  [ label = "DDG: output-&gt;params.scale"] 
  "30064771216" -> "30064771215"  [ label = "DDG: &amp;output_scale_log2_rounded"] 
  "30064771215" -> "30064771220"  [ label = "DDG: context"] 
  "111669149699" -> "30064771220"  [ label = "DDG: "] 
  "30064771216" -> "30064771220"  [ label = "DDG: &amp;output_scale_log2_rounded"] 
  "30064771221" -> "30064771220"  [ label = "DDG: kOutputFractionalBits"] 
  "30064771174" -> "30064771223"  [ label = "DDG: input"] 
  "30064771163" -> "30064771223"  [ label = "DDG: input"] 
  "111669149699" -> "30064771223"  [ label = "DDG: "] 
  "30064771098" -> "30064771097"  [ label = "DDG: input-&gt;type"] 
  "30064771098" -> "30064771097"  [ label = "DDG: kTfLiteUInt8"] 
  "30064771100" -> "30064771097"  [ label = "DDG: input-&gt;type"] 
  "30064771100" -> "30064771097"  [ label = "DDG: kTfLiteInt8"] 
  "111669149699" -> "30064771125"  [ label = "DDG: "] 
  "30064771127" -> "30064771126"  [ label = "DDG: input-&gt;params.scale"] 
  "30064771127" -> "30064771126"  [ label = "DDG: static_cast&lt;double&gt;(1 &lt;&lt; (15 - kInputIntegerBits))"] 
  "30064771134" -> "30064771133"  [ label = "DDG: input_real_multiplier"] 
  "30064771134" -> "30064771133"  [ label = "DDG: &amp;data-&gt;input_left_shift"] 
  "30064771139" -> "30064771137"  [ label = "DDG: q * (1ll &lt;&lt; 15)"] 
  "30064771137" -> "30064771142"  [ label = "DDG: q_fixed"] 
  "111669149699" -> "30064771142"  [ label = "DDG: "] 
  "30064771146" -> "30064771145"  [ label = "DDG: kInputIntegerBits"] 
  "30064771146" -> "30064771145"  [ label = "DDG: data-&gt;input_left_shift"] 
  "30064771146" -> "30064771145"  [ label = "DDG: 15"] 
  "30064771145" -> "30064771148"  [ label = "DDG: input_range_radius"] 
  "111669149699" -> "30064771148"  [ label = "DDG: "] 
  "30064771093" -> "30064771153"  [ label = "DDG: input-&gt;type"] 
  "30064771098" -> "30064771153"  [ label = "DDG: input-&gt;type"] 
  "30064771100" -> "30064771153"  [ label = "DDG: input-&gt;type"] 
  "30064771111" -> "30064771153"  [ label = "DDG: input-&gt;type"] 
  "111669149699" -> "30064771153"  [ label = "DDG: "] 
  "30064771098" -> "30064771153"  [ label = "DDG: kTfLiteUInt8"] 
  "30064771102" -> "30064771153"  [ label = "DDG: kTfLiteUInt8"] 
  "30064771127" -> "30064771197"  [ label = "DDG: input-&gt;params.scale"] 
  "111669149699" -> "30064771197"  [ label = "DDG: "] 
  "30064771204" -> "30064771203"  [ label = "DDG: 15"] 
  "30064771204" -> "30064771203"  [ label = "DDG: kInputIntegerBits"] 
  "30064771197" -> "30064771203"  [ label = "DDG: &amp;input_scale_log2_rounded"] 
  "111669149699" -> "30064771203"  [ label = "DDG: "] 
  "30064771080" -> "30064771206"  [ label = "DDG: data"] 
  "30064771134" -> "30064771206"  [ label = "DDG: &amp;data-&gt;input_left_shift"] 
  "30064771174" -> "30064771206"  [ label = "DDG: data"] 
  "30064771163" -> "30064771206"  [ label = "DDG: data"] 
  "30064771201" -> "30064771206"  [ label = "DDG: data-&gt;input_left_shift"] 
  "111669149699" -> "30064771206"  [ label = "DDG: "] 
  "30064771205" -> "30064771208"  [ label = "DDG: param_scale_pot"] 
  "111669149699" -> "30064771208"  [ label = "DDG: "] 
  "30064771212" -> "30064771209"  [ label = "DDG: input-&gt;params.scale"] 
  "30064771212" -> "30064771209"  [ label = "DDG: 4096"] 
  "30064771121" -> "30064771216"  [ label = "DDG: output-&gt;params.scale"] 
  "30064771178" -> "30064771216"  [ label = "DDG: output-&gt;params.scale"] 
  "111669149699" -> "30064771216"  [ label = "DDG: "] 
  "30064771189" -> "30064771221"  [ label = "DDG: kOutputFractionalBits"] 
  "111669149699" -> "30064771221"  [ label = "DDG: "] 
  "30064771093" -> "30064771098"  [ label = "DDG: input-&gt;type"] 
  "111669149699" -> "30064771098"  [ label = "DDG: "] 
  "30064771098" -> "30064771100"  [ label = "DDG: input-&gt;type"] 
  "111669149699" -> "30064771100"  [ label = "DDG: "] 
  "30064771093" -> "30064771120"  [ label = "DDG: context"] 
  "30064771104" -> "30064771120"  [ label = "DDG: context"] 
  "30064771113" -> "30064771120"  [ label = "DDG: context"] 
  "111669149699" -> "30064771120"  [ label = "DDG: "] 
  "30064771121" -> "30064771120"  [ label = "DDG: output-&gt;params.scale"] 
  "30064771121" -> "30064771120"  [ label = "DDG: 1. / 256"] 
  "30064771093" -> "30064771155"  [ label = "DDG: context"] 
  "30064771120" -> "30064771155"  [ label = "DDG: context"] 
  "111669149699" -> "30064771155"  [ label = "DDG: "] 
  "30064771156" -> "30064771155"  [ label = "DDG: output-&gt;params.scale"] 
  "30064771156" -> "30064771155"  [ label = "DDG: 1. / 256"] 
  "30064771161" -> "30064771160"  [ label = "DDG: PopulateLookupTable"] 
  "30064771161" -> "30064771160"  [ label = "DDG: uint8_t"] 
  "30064771162" -> "30064771160"  [ label = "DDG: data, input, output, [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      }"] 
  "111669149699" -> "30064771204"  [ label = "DDG: "] 
  "30064771188" -> "30064771204"  [ label = "DDG: kInputIntegerBits"] 
  "30064771098" -> "30064771102"  [ label = "DDG: input-&gt;type"] 
  "30064771100" -> "30064771102"  [ label = "DDG: input-&gt;type"] 
  "111669149699" -> "30064771102"  [ label = "DDG: "] 
  "30064771098" -> "30064771102"  [ label = "DDG: kTfLiteUInt8"] 
  "30064771102" -> "30064771111"  [ label = "DDG: input-&gt;type"] 
  "111669149699" -> "30064771111"  [ label = "DDG: "] 
  "30064771100" -> "30064771111"  [ label = "DDG: kTfLiteInt8"] 
  "30064771124" -> "30064771121"  [ label = "DDG: 1."] 
  "30064771124" -> "30064771121"  [ label = "DDG: 256"] 
  "30064771131" -> "30064771127"  [ label = "DDG: 1"] 
  "30064771131" -> "30064771127"  [ label = "DDG: 15 - kInputIntegerBits"] 
  "30064771126" -> "30064771134"  [ label = "DDG: input_real_multiplier"] 
  "111669149699" -> "30064771134"  [ label = "DDG: "] 
  "30064771080" -> "30064771134"  [ label = "DDG: data"] 
  "30064771139" -> "30064771138"  [ label = "DDG: q * (1ll &lt;&lt; 15)"] 
  "30064771137" -> "30064771144"  [ label = "DDG: q_fixed"] 
  "111669149699" -> "30064771144"  [ label = "DDG: "] 
  "30064771132" -> "30064771146"  [ label = "DDG: kInputIntegerBits"] 
  "111669149699" -> "30064771146"  [ label = "DDG: "] 
  "30064771080" -> "30064771146"  [ label = "DDG: data"] 
  "30064771134" -> "30064771146"  [ label = "DDG: &amp;data-&gt;input_left_shift"] 
  "30064771121" -> "30064771156"  [ label = "DDG: output-&gt;params.scale"] 
  "30064771159" -> "30064771156"  [ label = "DDG: 1."] 
  "30064771159" -> "30064771156"  [ label = "DDG: 256"] 
  "111669149699" -> "30064771161"  [ label = "DDG: "] 
  "30064771108" -> "30064771161"  [ label = "DDG: uint8_t"] 
  "30064771163" -> "30064771162"  [ label = "DDG: data"] 
  "30064771163" -> "30064771162"  [ label = "DDG: input"] 
  "30064771163" -> "30064771162"  [ label = "DDG: output"] 
  "30064771163" -> "30064771162"  [ label = "DDG: [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      }"] 
  "30064771212" -> "30064771211"  [ label = "DDG: input-&gt;params.scale"] 
  "30064771212" -> "30064771211"  [ label = "DDG: 4096"] 
  "30064771093" -> "30064771104"  [ label = "DDG: context"] 
  "111669149699" -> "30064771104"  [ label = "DDG: "] 
  "30064771107" -> "30064771104"  [ label = "DDG: std::numeric_limits&lt;uint8_t"] 
  "30064771107" -> "30064771104"  [ label = "DDG: ::min()"] 
  "30064771093" -> "30064771113"  [ label = "DDG: context"] 
  "30064771104" -> "30064771113"  [ label = "DDG: context"] 
  "111669149699" -> "30064771113"  [ label = "DDG: "] 
  "30064771104" -> "30064771113"  [ label = "DDG: output-&gt;params.zero_point"] 
  "30064771116" -> "30064771113"  [ label = "DDG: std::numeric_limits&lt;int8_t"] 
  "30064771116" -> "30064771113"  [ label = "DDG: ::min()"] 
  "111669149699" -> "30064771124"  [ label = "DDG: "] 
  "30064771131" -> "30064771130"  [ label = "DDG: 1"] 
  "30064771131" -> "30064771130"  [ label = "DDG: 15 - kInputIntegerBits"] 
  "30064771140" -> "30064771139"  [ label = "DDG: q"] 
  "30064771140" -> "30064771139"  [ label = "DDG: 1ll &lt;&lt; 15"] 
  "111669149699" -> "30064771159"  [ label = "DDG: "] 
  "30064771080" -> "30064771163"  [ label = "DDG: data"] 
  "30064771142" -> "30064771163"  [ label = "DDG: data-&gt;input_multiplier"] 
  "30064771146" -> "30064771163"  [ label = "DDG: data-&gt;input_left_shift"] 
  "30064771148" -> "30064771163"  [ label = "DDG: data-&gt;input_range_radius"] 
  "111669149699" -> "30064771163"  [ label = "DDG: "] 
  "30064771088" -> "30064771163"  [ label = "DDG: &amp;input"] 
  "30064771153" -> "30064771163"  [ label = "DDG: input-&gt;type"] 
  "30064771091" -> "30064771163"  [ label = "DDG: &amp;output"] 
  "30064771093" -> "30064771163"  [ label = "DDG: output-&gt;type"] 
  "30064771153" -> "30064771164"  [ label = "DDG: input-&gt;type"] 
  "111669149699" -> "30064771164"  [ label = "DDG: "] 
  "30064771100" -> "30064771164"  [ label = "DDG: kTfLiteInt8"] 
  "30064771111" -> "30064771164"  [ label = "DDG: kTfLiteInt8"] 
  "30064771197" -> "30064771212"  [ label = "DDG: input-&gt;params.scale"] 
  "111669149699" -> "30064771212"  [ label = "DDG: "] 
  "30064771108" -> "30064771107"  [ label = "DDG: std::numeric_limits"] 
  "30064771108" -> "30064771107"  [ label = "DDG: uint8_t"] 
  "111669149699" -> "30064771107"  [ label = "DDG: "] 
  "30064771117" -> "30064771116"  [ label = "DDG: std::numeric_limits"] 
  "30064771117" -> "30064771116"  [ label = "DDG: int8_t"] 
  "111669149699" -> "30064771116"  [ label = "DDG: "] 
  "111669149699" -> "30064771131"  [ label = "DDG: "] 
  "30064771132" -> "30064771131"  [ label = "DDG: 15"] 
  "30064771132" -> "30064771131"  [ label = "DDG: kInputIntegerBits"] 
  "30064771133" -> "30064771140"  [ label = "DDG: q"] 
  "111669149699" -> "30064771140"  [ label = "DDG: "] 
  "30064771141" -> "30064771140"  [ label = "DDG: 1ll"] 
  "30064771141" -> "30064771140"  [ label = "DDG: 15"] 
  "30064771093" -> "30064771166"  [ label = "DDG: context"] 
  "30064771120" -> "30064771166"  [ label = "DDG: context"] 
  "111669149699" -> "30064771166"  [ label = "DDG: "] 
  "30064771167" -> "30064771166"  [ label = "DDG: output-&gt;params.scale"] 
  "30064771167" -> "30064771166"  [ label = "DDG: 1. / 256"] 
  "30064771172" -> "30064771171"  [ label = "DDG: PopulateLookupTable"] 
  "30064771172" -> "30064771171"  [ label = "DDG: int8_t"] 
  "30064771173" -> "30064771171"  [ label = "DDG: data, input, output, [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      }"] 
  "111669149699" -> "30064771108"  [ label = "DDG: "] 
  "30064771108" -> "30064771117"  [ label = "DDG: std::numeric_limits"] 
  "111669149699" -> "30064771117"  [ label = "DDG: "] 
  "111669149699" -> "30064771132"  [ label = "DDG: "] 
  "30064771125" -> "30064771132"  [ label = "DDG: kInputIntegerBits"] 
  "111669149699" -> "30064771141"  [ label = "DDG: "] 
  "30064771121" -> "30064771167"  [ label = "DDG: output-&gt;params.scale"] 
  "30064771170" -> "30064771167"  [ label = "DDG: 1."] 
  "30064771170" -> "30064771167"  [ label = "DDG: 256"] 
  "111669149699" -> "30064771172"  [ label = "DDG: "] 
  "30064771117" -> "30064771172"  [ label = "DDG: int8_t"] 
  "30064771174" -> "30064771173"  [ label = "DDG: data"] 
  "30064771174" -> "30064771173"  [ label = "DDG: input"] 
  "30064771174" -> "30064771173"  [ label = "DDG: output"] 
  "30064771174" -> "30064771173"  [ label = "DDG: [](float value) {
        return 1.0f / (1.0f + std::exp(-value));
      }"] 
  "111669149699" -> "30064771170"  [ label = "DDG: "] 
  "30064771080" -> "30064771174"  [ label = "DDG: data"] 
  "30064771142" -> "30064771174"  [ label = "DDG: data-&gt;input_multiplier"] 
  "30064771146" -> "30064771174"  [ label = "DDG: data-&gt;input_left_shift"] 
  "30064771148" -> "30064771174"  [ label = "DDG: data-&gt;input_range_radius"] 
  "111669149699" -> "30064771174"  [ label = "DDG: "] 
  "30064771088" -> "30064771174"  [ label = "DDG: &amp;input"] 
  "30064771164" -> "30064771174"  [ label = "DDG: input-&gt;type"] 
  "30064771091" -> "30064771174"  [ label = "DDG: &amp;output"] 
  "30064771093" -> "30064771174"  [ label = "DDG: output-&gt;type"] 
  "30064771164" -> "30064771175"  [ label = "DDG: input-&gt;type"] 
  "111669149699" -> "30064771175"  [ label = "DDG: "] 
  "30064771093" -> "30064771177"  [ label = "DDG: context"] 
  "30064771120" -> "30064771177"  [ label = "DDG: context"] 
  "111669149699" -> "30064771177"  [ label = "DDG: "] 
  "30064771178" -> "30064771177"  [ label = "DDG: output-&gt;params.scale"] 
  "30064771178" -> "30064771177"  [ label = "DDG: 1. / 32768"] 
  "30064771177" -> "30064771182"  [ label = "DDG: context"] 
  "111669149699" -> "30064771182"  [ label = "DDG: "] 
  "30064771183" -> "30064771182"  [ label = "DDG: output-&gt;params.zero_point"] 
  "30064771183" -> "30064771182"  [ label = "DDG: 0"] 
  "30064771121" -> "30064771178"  [ label = "DDG: output-&gt;params.scale"] 
  "30064771181" -> "30064771178"  [ label = "DDG: 1."] 
  "30064771181" -> "30064771178"  [ label = "DDG: 32768"] 
  "30064771104" -> "30064771183"  [ label = "DDG: output-&gt;params.zero_point"] 
  "30064771113" -> "30064771183"  [ label = "DDG: output-&gt;params.zero_point"] 
  "111669149699" -> "30064771183"  [ label = "DDG: "] 
  "111669149699" -> "30064771181"  [ label = "DDG: "] 
  "30064771096" -> "55834574851"  [ label = "CDG: "] 
  "30064771096" -> "30064771099"  [ label = "CDG: "] 
  "30064771096" -> "30064771098"  [ label = "CDG: "] 
  "30064771096" -> "30064771097"  [ label = "CDG: "] 
  "30064771150" -> "55834574869"  [ label = "CDG: "] 
  "30064771150" -> "30064771154"  [ label = "CDG: "] 
  "30064771150" -> "30064771153"  [ label = "CDG: "] 
  "30064771186" -> "30064771221"  [ label = "CDG: "] 
  "30064771186" -> "30064771220"  [ label = "CDG: "] 
  "30064771186" -> "55834574893"  [ label = "CDG: "] 
  "30064771186" -> "55834574892"  [ label = "CDG: "] 
  "30064771186" -> "55834574881"  [ label = "CDG: "] 
  "30064771186" -> "55834574888"  [ label = "CDG: "] 
  "30064771186" -> "55834574887"  [ label = "CDG: "] 
  "30064771186" -> "55834574886"  [ label = "CDG: "] 
  "30064771186" -> "55834574885"  [ label = "CDG: "] 
  "30064771186" -> "55834574884"  [ label = "CDG: "] 
  "30064771186" -> "55834574883"  [ label = "CDG: "] 
  "30064771186" -> "55834574882"  [ label = "CDG: "] 
  "30064771186" -> "30064771208"  [ label = "CDG: "] 
  "30064771186" -> "30064771207"  [ label = "CDG: "] 
  "30064771186" -> "30064771206"  [ label = "CDG: "] 
  "30064771186" -> "30064771205"  [ label = "CDG: "] 
  "30064771186" -> "30064771204"  [ label = "CDG: "] 
  "30064771186" -> "30064771219"  [ label = "CDG: "] 
  "30064771186" -> "30064771218"  [ label = "CDG: "] 
  "30064771186" -> "30064771217"  [ label = "CDG: "] 
  "30064771186" -> "30064771216"  [ label = "CDG: "] 
  "30064771186" -> "30064771215"  [ label = "CDG: "] 
  "30064771186" -> "30064771195"  [ label = "CDG: "] 
  "30064771186" -> "30064771194"  [ label = "CDG: "] 
  "30064771186" -> "30064771193"  [ label = "CDG: "] 
  "30064771186" -> "30064771192"  [ label = "CDG: "] 
  "30064771186" -> "30064771191"  [ label = "CDG: "] 
  "30064771186" -> "30064771190"  [ label = "CDG: "] 
  "30064771186" -> "30064771189"  [ label = "CDG: "] 
  "30064771186" -> "30064771188"  [ label = "CDG: "] 
  "30064771186" -> "30064771203"  [ label = "CDG: "] 
  "30064771186" -> "30064771202"  [ label = "CDG: "] 
  "30064771186" -> "30064771201"  [ label = "CDG: "] 
  "30064771186" -> "30064771200"  [ label = "CDG: "] 
  "30064771186" -> "30064771199"  [ label = "CDG: "] 
  "30064771186" -> "30064771198"  [ label = "CDG: "] 
  "30064771186" -> "30064771197"  [ label = "CDG: "] 
  "30064771186" -> "30064771196"  [ label = "CDG: "] 
  "30064771151" -> "30064771152"  [ label = "CDG: "] 
  "30064771097" -> "55834574865"  [ label = "CDG: "] 
  "30064771097" -> "55834574864"  [ label = "CDG: "] 
  "30064771097" -> "55834574863"  [ label = "CDG: "] 
  "30064771097" -> "55834574862"  [ label = "CDG: "] 
  "30064771097" -> "55834574861"  [ label = "CDG: "] 
  "30064771097" -> "55834574868"  [ label = "CDG: "] 
  "30064771097" -> "55834574867"  [ label = "CDG: "] 
  "30064771097" -> "55834574866"  [ label = "CDG: "] 
  "30064771097" -> "55834574857"  [ label = "CDG: "] 
  "30064771097" -> "55834574853"  [ label = "CDG: "] 
  "30064771097" -> "30064771112"  [ label = "CDG: "] 
  "30064771097" -> "30064771111"  [ label = "CDG: "] 
  "30064771097" -> "30064771123"  [ label = "CDG: "] 
  "30064771097" -> "30064771122"  [ label = "CDG: "] 
  "30064771097" -> "30064771121"  [ label = "CDG: "] 
  "30064771097" -> "30064771120"  [ label = "CDG: "] 
  "30064771097" -> "30064771103"  [ label = "CDG: "] 
  "30064771097" -> "30064771102"  [ label = "CDG: "] 
  "30064771097" -> "30064771147"  [ label = "CDG: "] 
  "30064771097" -> "30064771146"  [ label = "CDG: "] 
  "30064771097" -> "30064771145"  [ label = "CDG: "] 
  "30064771097" -> "30064771144"  [ label = "CDG: "] 
  "30064771097" -> "30064771143"  [ label = "CDG: "] 
  "30064771097" -> "30064771142"  [ label = "CDG: "] 
  "30064771097" -> "30064771141"  [ label = "CDG: "] 
  "30064771097" -> "30064771140"  [ label = "CDG: "] 
  "30064771097" -> "30064771149"  [ label = "CDG: "] 
  "30064771097" -> "30064771148"  [ label = "CDG: "] 
  "30064771097" -> "30064771131"  [ label = "CDG: "] 
  "30064771097" -> "30064771130"  [ label = "CDG: "] 
  "30064771097" -> "30064771129"  [ label = "CDG: "] 
  "30064771097" -> "30064771128"  [ label = "CDG: "] 
  "30064771097" -> "30064771127"  [ label = "CDG: "] 
  "30064771097" -> "30064771126"  [ label = "CDG: "] 
  "30064771097" -> "30064771125"  [ label = "CDG: "] 
  "30064771097" -> "30064771124"  [ label = "CDG: "] 
  "30064771097" -> "30064771139"  [ label = "CDG: "] 
  "30064771097" -> "30064771138"  [ label = "CDG: "] 
  "30064771097" -> "30064771137"  [ label = "CDG: "] 
  "30064771097" -> "30064771136"  [ label = "CDG: "] 
  "30064771097" -> "30064771135"  [ label = "CDG: "] 
  "30064771097" -> "30064771134"  [ label = "CDG: "] 
  "30064771097" -> "30064771133"  [ label = "CDG: "] 
  "30064771097" -> "30064771132"  [ label = "CDG: "] 
  "30064771097" -> "184683593731"  [ label = "CDG: "] 
  "30064771097" -> "184683593730"  [ label = "CDG: "] 
  "30064771097" -> "184683593729"  [ label = "CDG: "] 
  "30064771153" -> "124554051584"  [ label = "CDG: "] 
  "30064771153" -> "55834574872"  [ label = "CDG: "] 
  "30064771153" -> "55834574871"  [ label = "CDG: "] 
  "30064771153" -> "55834574870"  [ label = "CDG: "] 
  "30064771153" -> "30064771155"  [ label = "CDG: "] 
  "30064771153" -> "30064771163"  [ label = "CDG: "] 
  "30064771153" -> "30064771162"  [ label = "CDG: "] 
  "30064771153" -> "30064771161"  [ label = "CDG: "] 
  "30064771153" -> "30064771160"  [ label = "CDG: "] 
  "30064771153" -> "30064771159"  [ label = "CDG: "] 
  "30064771153" -> "30064771158"  [ label = "CDG: "] 
  "30064771153" -> "30064771157"  [ label = "CDG: "] 
  "30064771153" -> "30064771156"  [ label = "CDG: "] 
  "30064771153" -> "30064771165"  [ label = "CDG: "] 
  "30064771153" -> "30064771164"  [ label = "CDG: "] 
  "30064771208" -> "55834574891"  [ label = "CDG: "] 
  "30064771208" -> "55834574890"  [ label = "CDG: "] 
  "30064771208" -> "55834574889"  [ label = "CDG: "] 
  "30064771208" -> "184683593732"  [ label = "CDG: "] 
  "30064771208" -> "30064771211"  [ label = "CDG: "] 
  "30064771208" -> "30064771210"  [ label = "CDG: "] 
  "30064771208" -> "30064771209"  [ label = "CDG: "] 
  "30064771208" -> "30064771214"  [ label = "CDG: "] 
  "30064771208" -> "30064771213"  [ label = "CDG: "] 
  "30064771208" -> "30064771212"  [ label = "CDG: "] 
  "30064771098" -> "55834574852"  [ label = "CDG: "] 
  "30064771098" -> "30064771101"  [ label = "CDG: "] 
  "30064771098" -> "30064771100"  [ label = "CDG: "] 
  "30064771102" -> "55834574856"  [ label = "CDG: "] 
  "30064771102" -> "55834574855"  [ label = "CDG: "] 
  "30064771102" -> "55834574854"  [ label = "CDG: "] 
  "30064771102" -> "30064771110"  [ label = "CDG: "] 
  "30064771102" -> "30064771109"  [ label = "CDG: "] 
  "30064771102" -> "30064771108"  [ label = "CDG: "] 
  "30064771102" -> "30064771107"  [ label = "CDG: "] 
  "30064771102" -> "30064771106"  [ label = "CDG: "] 
  "30064771102" -> "30064771105"  [ label = "CDG: "] 
  "30064771102" -> "30064771104"  [ label = "CDG: "] 
  "30064771111" -> "55834574860"  [ label = "CDG: "] 
  "30064771111" -> "55834574859"  [ label = "CDG: "] 
  "30064771111" -> "55834574858"  [ label = "CDG: "] 
  "30064771111" -> "30064771115"  [ label = "CDG: "] 
  "30064771111" -> "30064771114"  [ label = "CDG: "] 
  "30064771111" -> "30064771113"  [ label = "CDG: "] 
  "30064771111" -> "30064771119"  [ label = "CDG: "] 
  "30064771111" -> "30064771118"  [ label = "CDG: "] 
  "30064771111" -> "30064771117"  [ label = "CDG: "] 
  "30064771111" -> "30064771116"  [ label = "CDG: "] 
  "30064771164" -> "124554051585"  [ label = "CDG: "] 
  "30064771164" -> "55834574873"  [ label = "CDG: "] 
  "30064771164" -> "55834574875"  [ label = "CDG: "] 
  "30064771164" -> "55834574874"  [ label = "CDG: "] 
  "30064771164" -> "30064771176"  [ label = "CDG: "] 
  "30064771164" -> "30064771175"  [ label = "CDG: "] 
  "30064771164" -> "30064771174"  [ label = "CDG: "] 
  "30064771164" -> "30064771173"  [ label = "CDG: "] 
  "30064771164" -> "30064771172"  [ label = "CDG: "] 
  "30064771164" -> "30064771171"  [ label = "CDG: "] 
  "30064771164" -> "30064771170"  [ label = "CDG: "] 
  "30064771164" -> "30064771169"  [ label = "CDG: "] 
  "30064771164" -> "30064771168"  [ label = "CDG: "] 
  "30064771164" -> "30064771167"  [ label = "CDG: "] 
  "30064771164" -> "30064771166"  [ label = "CDG: "] 
  "30064771175" -> "55834574879"  [ label = "CDG: "] 
  "30064771175" -> "55834574878"  [ label = "CDG: "] 
  "30064771175" -> "55834574877"  [ label = "CDG: "] 
  "30064771175" -> "55834574876"  [ label = "CDG: "] 
  "30064771175" -> "30064771179"  [ label = "CDG: "] 
  "30064771175" -> "30064771178"  [ label = "CDG: "] 
  "30064771175" -> "30064771177"  [ label = "CDG: "] 
  "30064771175" -> "30064771185"  [ label = "CDG: "] 
  "30064771175" -> "30064771184"  [ label = "CDG: "] 
  "30064771175" -> "30064771183"  [ label = "CDG: "] 
  "30064771175" -> "30064771182"  [ label = "CDG: "] 
  "30064771175" -> "30064771181"  [ label = "CDG: "] 
  "30064771175" -> "30064771180"  [ label = "CDG: "] 
}
"""
)
