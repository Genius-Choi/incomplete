[33mval[0m [36mres396[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "Compute" {  
"111669149698" [label = <(METHOD,Compute)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,OpKernelContext* context)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,AsyncOpKernel::DoneCallback done)<SUB>1</SUB>> ]
"25769803786" [label = <(BLOCK,{
    const Tensor&amp; data_t = context-&gt;input(0);...,{
    const Tensor&amp; data_t = context-&gt;input(0);...)<SUB>1</SUB>> ]
"94489280519" [label = <(LOCAL,const Tensor&amp; data_t: Tensor&amp;)<SUB>2</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.assignment,&amp; data_t = context-&gt;input(0))<SUB>2</SUB>> ]
"68719476779" [label = <(IDENTIFIER,data_t,&amp; data_t = context-&gt;input(0))<SUB>2</SUB>> ]
"30064771120" [label = <(input,context-&gt;input(0))<SUB>2</SUB>> ]
"68719476780" [label = <(IDENTIFIER,context,context-&gt;input(0))<SUB>2</SUB>> ]
"90194313221" [label = <(LITERAL,0,context-&gt;input(0))<SUB>2</SUB>> ]
"94489280520" [label = <(LOCAL,const Tensor&amp; batch_index_t: Tensor&amp;)<SUB>3</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.assignment,&amp; batch_index_t = context-&gt;input(1))<SUB>3</SUB>> ]
"68719476781" [label = <(IDENTIFIER,batch_index_t,&amp; batch_index_t = context-&gt;input(1))<SUB>3</SUB>> ]
"30064771122" [label = <(input,context-&gt;input(1))<SUB>3</SUB>> ]
"68719476782" [label = <(IDENTIFIER,context,context-&gt;input(1))<SUB>3</SUB>> ]
"90194313222" [label = <(LITERAL,1,context-&gt;input(1))<SUB>3</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (batch_index_t.shape().dim_size(0) &gt; data_t.shape().dim_size(0)))<SUB>5</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.greaterThan,batch_index_t.shape().dim_size(0) &gt; data_t.shap...)<SUB>5</SUB>> ]
"30064771124" [label = <(dim_size,batch_index_t.shape().dim_size(0))<SUB>5</SUB>> ]
"30064771125" [label = <(shape,batch_index_t.shape())<SUB>5</SUB>> ]
"68719476783" [label = <(IDENTIFIER,batch_index_t,batch_index_t.shape())<SUB>5</SUB>> ]
"90194313223" [label = <(LITERAL,0,batch_index_t.shape().dim_size(0))<SUB>5</SUB>> ]
"30064771126" [label = <(dim_size,data_t.shape().dim_size(0))<SUB>5</SUB>> ]
"30064771127" [label = <(shape,data_t.shape())<SUB>5</SUB>> ]
"68719476784" [label = <(IDENTIFIER,data_t,data_t.shape())<SUB>5</SUB>> ]
"90194313224" [label = <(LITERAL,0,data_t.shape().dim_size(0))<SUB>5</SUB>> ]
"25769803787" [label = <(BLOCK,{
      return errors::InvalidArgument(
       ...,{
      return errors::InvalidArgument(
       ...)<SUB>5</SUB>> ]
"146028888068" [label = <(RETURN,return errors::InvalidArgument(
          &quot;Wron...,return errors::InvalidArgument(
          &quot;Wron...)<SUB>6</SUB>> ]
"30064771128" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;Wrong shape...)<SUB>6</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;Wrong shape for index tensor. Expected 0th dim...,errors::InvalidArgument(
          &quot;Wrong shape...)<SUB>7</SUB>> ]
"30064771129" [label = <(dim_size,data_t.shape().dim_size(0))<SUB>9</SUB>> ]
"30064771130" [label = <(shape,data_t.shape())<SUB>9</SUB>> ]
"68719476785" [label = <(IDENTIFIER,data_t,data_t.shape())<SUB>9</SUB>> ]
"90194313226" [label = <(LITERAL,0,data_t.shape().dim_size(0))<SUB>9</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;; Got: &quot;,errors::InvalidArgument(
          &quot;Wrong shape...)<SUB>10</SUB>> ]
"30064771131" [label = <(dim_size,batch_index_t.shape().dim_size(0))<SUB>10</SUB>> ]
"30064771132" [label = <(shape,batch_index_t.shape())<SUB>10</SUB>> ]
"68719476786" [label = <(IDENTIFIER,batch_index_t,batch_index_t.shape())<SUB>10</SUB>> ]
"90194313228" [label = <(LITERAL,0,batch_index_t.shape().dim_size(0))<SUB>10</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;.&quot;,errors::InvalidArgument(
          &quot;Wrong shape...)<SUB>10</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,IF,if (batch_index_t.shape().dim_size(1) != 3))<SUB>12</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.notEquals,batch_index_t.shape().dim_size(1) != 3)<SUB>12</SUB>> ]
"30064771134" [label = <(dim_size,batch_index_t.shape().dim_size(1))<SUB>12</SUB>> ]
"30064771135" [label = <(shape,batch_index_t.shape())<SUB>12</SUB>> ]
"68719476787" [label = <(IDENTIFIER,batch_index_t,batch_index_t.shape())<SUB>12</SUB>> ]
"90194313230" [label = <(LITERAL,1,batch_index_t.shape().dim_size(1))<SUB>12</SUB>> ]
"90194313231" [label = <(LITERAL,3,batch_index_t.shape().dim_size(1) != 3)<SUB>12</SUB>> ]
"25769803788" [label = <(BLOCK,{
      return errors::InvalidArgument(
       ...,{
      return errors::InvalidArgument(
       ...)<SUB>12</SUB>> ]
"146028888069" [label = <(RETURN,return errors::InvalidArgument(
          &quot;Wron...,return errors::InvalidArgument(
          &quot;Wron...)<SUB>13</SUB>> ]
"30064771136" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;Wrong shape...)<SUB>13</SUB>> ]
"90194313232" [label = <(LITERAL,&quot;Wrong shape for index tensor. Expected 1st dim...,errors::InvalidArgument(
          &quot;Wrong shape...)<SUB>14</SUB>> ]
"30064771137" [label = <(dim_size,batch_index_t.shape().dim_size(1))<SUB>16</SUB>> ]
"30064771138" [label = <(shape,batch_index_t.shape())<SUB>16</SUB>> ]
"68719476788" [label = <(IDENTIFIER,batch_index_t,batch_index_t.shape())<SUB>16</SUB>> ]
"90194313233" [label = <(LITERAL,1,batch_index_t.shape().dim_size(1))<SUB>16</SUB>> ]
"90194313234" [label = <(LITERAL,&quot;.&quot;,errors::InvalidArgument(
          &quot;Wrong shape...)<SUB>16</SUB>> ]
"94489280517" [label = <(LOCAL,const int64_t batch_key: int64_t)<SUB>19</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.assignment,batch_key = context-&gt;input(2).scalar&lt;int64_t&gt;()())<SUB>19</SUB>> ]
"68719476789" [label = <(IDENTIFIER,batch_key,batch_key = context-&gt;input(2).scalar&lt;int64_t&gt;()())<SUB>19</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;(),context-&gt;input(2).scalar&lt;int64_t&gt;()())<SUB>19</SUB>> ]
"30064771141" [label = <(scalar&lt;int64_t&gt;,context-&gt;input(2).scalar&lt;int64_t&gt;())<SUB>19</SUB>> ]
"30064771142" [label = <(input,context-&gt;input(2))<SUB>19</SUB>> ]
"68719476790" [label = <(IDENTIFIER,context,context-&gt;input(2))<SUB>19</SUB>> ]
"90194313235" [label = <(LITERAL,2,context-&gt;input(2))<SUB>19</SUB>> ]
"94489280518" [label = <(LOCAL,const bool nonempty_input: bool)<SUB>20</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.assignment,nonempty_input = batch_index_t.dim_size(0) &gt; 0)<SUB>20</SUB>> ]
"68719476791" [label = <(IDENTIFIER,nonempty_input,nonempty_input = batch_index_t.dim_size(0) &gt; 0)<SUB>20</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.greaterThan,batch_index_t.dim_size(0) &gt; 0)<SUB>20</SUB>> ]
"30064771145" [label = <(dim_size,batch_index_t.dim_size(0))<SUB>20</SUB>> ]
"68719476792" [label = <(IDENTIFIER,batch_index_t,batch_index_t.dim_size(0))<SUB>20</SUB>> ]
"90194313236" [label = <(LITERAL,0,batch_index_t.dim_size(0))<SUB>20</SUB>> ]
"90194313237" [label = <(LITERAL,0,batch_index_t.dim_size(0) &gt; 0)<SUB>20</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;int64_t&gt; sizes)<SUB>25</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;int64_t)<SUB>25</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>25</SUB>> ]
"68719476793" [label = <(IDENTIFIER,std,std::vector&lt;int64_t)<SUB>25</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>25</SUB>> ]
"68719476794" [label = <(IDENTIFIER,int64_t,std::vector&lt;int64_t)<SUB>25</SUB>> ]
"68719476795" [label = <(IDENTIFIER,sizes,std::vector&lt;int64_t&gt; sizes)<SUB>25</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;int64_t&gt; batch_keys)<SUB>26</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;int64_t)<SUB>26</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>26</SUB>> ]
"68719476796" [label = <(IDENTIFIER,std,std::vector&lt;int64_t)<SUB>26</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>26</SUB>> ]
"68719476797" [label = <(IDENTIFIER,int64_t,std::vector&lt;int64_t)<SUB>26</SUB>> ]
"68719476798" [label = <(IDENTIFIER,batch_keys,std::vector&lt;int64_t&gt; batch_keys)<SUB>26</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;Tensor&gt; split_inputs)<SUB>27</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;Tensor)<SUB>27</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>27</SUB>> ]
"68719476799" [label = <(IDENTIFIER,std,std::vector&lt;Tensor)<SUB>27</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>27</SUB>> ]
"68719476800" [label = <(IDENTIFIER,Tensor,std::vector&lt;Tensor)<SUB>27</SUB>> ]
"68719476801" [label = <(IDENTIFIER,split_inputs,std::vector&lt;Tensor&gt; split_inputs)<SUB>27</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,IF,if (nonempty_input))<SUB>28</SUB>> ]
"68719476802" [label = <(IDENTIFIER,nonempty_input,if (nonempty_input))<SUB>28</SUB>> ]
"25769803789" [label = <(BLOCK,{
      auto batch_indices =
          batch_in...,{
      auto batch_indices =
          batch_in...)<SUB>28</SUB>> ]
"94489280521" [label = <(LOCAL,auto batch_indices: auto)<SUB>29</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.assignment,batch_indices =
          batch_index_t.shaped&lt;...)<SUB>29</SUB>> ]
"68719476803" [label = <(IDENTIFIER,batch_indices,batch_indices =
          batch_index_t.shaped&lt;...)<SUB>29</SUB>> ]
"30064771156" [label = <(shaped&lt;int64_t, 2&gt;,batch_index_t.shaped&lt;int64_t, 2&gt;({batch_index_t...)<SUB>30</SUB>> ]
"68719476804" [label = <(IDENTIFIER,batch_index_t,batch_index_t.shaped&lt;int64_t, 2&gt;({batch_index_t...)<SUB>30</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.arrayInitializer,{batch_index_t.dim_size(0), 3})<SUB>30</SUB>> ]
"30064771158" [label = <(dim_size,batch_index_t.dim_size(0))<SUB>30</SUB>> ]
"68719476805" [label = <(IDENTIFIER,batch_index_t,batch_index_t.dim_size(0))<SUB>30</SUB>> ]
"90194313238" [label = <(LITERAL,0,batch_index_t.dim_size(0))<SUB>30</SUB>> ]
"90194313239" [label = <(LITERAL,3,{batch_index_t.dim_size(0), 3})<SUB>30</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; batch_index_t.dim_size(0);++i))<SUB>31</SUB>> ]
"25769803790" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>> ]
"94489280522" [label = <(LOCAL,int i: int)<SUB>31</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>31</SUB>> ]
"68719476806" [label = <(IDENTIFIER,i,i = 0)<SUB>31</SUB>> ]
"90194313240" [label = <(LITERAL,0,i = 0)<SUB>31</SUB>> ]
"30064771160" [label = <(&lt;operator&gt;.lessThan,i &lt; batch_index_t.dim_size(0))<SUB>31</SUB>> ]
"68719476807" [label = <(IDENTIFIER,i,i &lt; batch_index_t.dim_size(0))<SUB>31</SUB>> ]
"30064771161" [label = <(dim_size,batch_index_t.dim_size(0))<SUB>31</SUB>> ]
"68719476808" [label = <(IDENTIFIER,batch_index_t,batch_index_t.dim_size(0))<SUB>31</SUB>> ]
"90194313241" [label = <(LITERAL,0,batch_index_t.dim_size(0))<SUB>31</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>31</SUB>> ]
"68719476809" [label = <(IDENTIFIER,i,++i)<SUB>31</SUB>> ]
"25769803791" [label = <(BLOCK,{
        sizes.push_back(batch_indices(i, 2) -...,{
        sizes.push_back(batch_indices(i, 2) -...)<SUB>31</SUB>> ]
"30064771163" [label = <(push_back,sizes.push_back(batch_indices(i, 2) - batch_ind...)<SUB>32</SUB>> ]
"68719476810" [label = <(IDENTIFIER,sizes,sizes.push_back(batch_indices(i, 2) - batch_ind...)<SUB>32</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.subtraction,batch_indices(i, 2) - batch_indices(i, 1))<SUB>32</SUB>> ]
"30064771165" [label = <(batch_indices,batch_indices(i, 2))<SUB>32</SUB>> ]
"68719476811" [label = <(IDENTIFIER,i,batch_indices(i, 2))<SUB>32</SUB>> ]
"90194313242" [label = <(LITERAL,2,batch_indices(i, 2))<SUB>32</SUB>> ]
"30064771166" [label = <(batch_indices,batch_indices(i, 1))<SUB>32</SUB>> ]
"68719476812" [label = <(IDENTIFIER,i,batch_indices(i, 1))<SUB>32</SUB>> ]
"90194313243" [label = <(LITERAL,1,batch_indices(i, 1))<SUB>32</SUB>> ]
"30064771167" [label = <(push_back,batch_keys.push_back(batch_indices(i, 0)))<SUB>33</SUB>> ]
"68719476813" [label = <(IDENTIFIER,batch_keys,batch_keys.push_back(batch_indices(i, 0)))<SUB>33</SUB>> ]
"30064771168" [label = <(batch_indices,batch_indices(i, 0))<SUB>33</SUB>> ]
"68719476814" [label = <(IDENTIFIER,i,batch_indices(i, 0))<SUB>33</SUB>> ]
"90194313244" [label = <(LITERAL,0,batch_indices(i, 0))<SUB>33</SUB>> ]
"30064771169" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(Split(context, data_t, sizes...)<SUB>36</SUB>> ]
"30064771170" [label = <(Split,Split(context, data_t, sizes, &amp;split_inputs))<SUB>36</SUB>> ]
"68719476815" [label = <(IDENTIFIER,context,Split(context, data_t, sizes, &amp;split_inputs))<SUB>36</SUB>> ]
"68719476816" [label = <(IDENTIFIER,data_t,Split(context, data_t, sizes, &amp;split_inputs))<SUB>36</SUB>> ]
"68719476817" [label = <(IDENTIFIER,sizes,Split(context, data_t, sizes, &amp;split_inputs))<SUB>36</SUB>> ]
"30064771171" [label = <(&lt;operator&gt;.addressOf,&amp;split_inputs)<SUB>36</SUB>> ]
"68719476818" [label = <(IDENTIFIER,split_inputs,Split(context, data_t, sizes, &amp;split_inputs))<SUB>36</SUB>> ]
"30064771172" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;AsyncOpKernel::DoneCallback&gt; done_c...)<SUB>40</SUB>> ]
"30064771173" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;AsyncOpKernel::DoneCallback)<SUB>40</SUB>> ]
"30064771174" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>40</SUB>> ]
"68719476819" [label = <(IDENTIFIER,std,std::vector&lt;AsyncOpKernel::DoneCallback)<SUB>40</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>40</SUB>> ]
"30064771175" [label = <(&lt;operator&gt;.fieldAccess,AsyncOpKernel::DoneCallback)<SUB>40</SUB>> ]
"68719476820" [label = <(IDENTIFIER,AsyncOpKernel,std::vector&lt;AsyncOpKernel::DoneCallback)<SUB>40</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,DoneCallback,DoneCallback)<SUB>40</SUB>> ]
"68719476821" [label = <(IDENTIFIER,done_callbacks_to_call,std::vector&lt;AsyncOpKernel::DoneCallback&gt; done_c...)<SUB>40</SUB>> ]
"94489280523" [label = <(LOCAL,Status status: Status)<SUB>41</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;.assignment,status = [&amp;]() -&gt; Status {
      mutex_lock ml(...)<SUB>41</SUB>> ]
"68719476822" [label = <(IDENTIFIER,status,status = [&amp;]() -&gt; Status {
      mutex_lock ml(...)<SUB>41</SUB>> ]
"30064771177" [label = <(&lt;operator&gt;(),[&amp;]() -&gt; Status {
      mutex_lock ml(mu_);

  ...)<SUB>41</SUB>> ]
"124554051584" [label = <(METHOD_REF,[&amp;]() -&gt; Status {
      mutex_lock ml(mu_);

  ...,[&amp;]() -&gt; Status {
      mutex_lock ml(mu_);

  ...)<SUB>41</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,FOR,for (const AsyncOpKernel::DoneCallback&amp; done_callback:done_callbacks_to_call))<SUB>92</SUB>> ]
"68719476823" [label = <(IDENTIFIER,done_callbacks_to_call,for (const AsyncOpKernel::DoneCallback&amp; done_ca...)<SUB>93</SUB>> ]
"94489280524" [label = <(LOCAL,constAsyncOpKernel.DoneCallback&amp; done_callback: AsyncOpKernel.DoneCallback&amp;)<SUB>92</SUB>> ]
"25769803792" [label = <(BLOCK,{
      done_callback();
    },{
      done_callback();
    })<SUB>93</SUB>> ]
"30064771178" [label = <(done_callback,done_callback())<SUB>94</SUB>> ]
"146028888070" [label = <(RETURN,return status;,return status;)<SUB>97</SUB>> ]
"68719476824" [label = <(IDENTIFIER,status,return status;)<SUB>97</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149698" -> "115964116992"  [ label = "AST: "] 
  "111669149698" -> "115964116993"  [ label = "AST: "] 
  "111669149698" -> "25769803786"  [ label = "AST: "] 
  "111669149698" -> "128849018881"  [ label = "AST: "] 
  "25769803786" -> "94489280519"  [ label = "AST: "] 
  "25769803786" -> "30064771119"  [ label = "AST: "] 
  "25769803786" -> "94489280520"  [ label = "AST: "] 
  "25769803786" -> "30064771121"  [ label = "AST: "] 
  "25769803786" -> "47244640263"  [ label = "AST: "] 
  "25769803786" -> "47244640264"  [ label = "AST: "] 
  "25769803786" -> "94489280517"  [ label = "AST: "] 
  "25769803786" -> "30064771139"  [ label = "AST: "] 
  "25769803786" -> "94489280518"  [ label = "AST: "] 
  "25769803786" -> "30064771143"  [ label = "AST: "] 
  "25769803786" -> "30064771146"  [ label = "AST: "] 
  "25769803786" -> "30064771149"  [ label = "AST: "] 
  "25769803786" -> "30064771152"  [ label = "AST: "] 
  "25769803786" -> "47244640265"  [ label = "AST: "] 
  "25769803786" -> "30064771172"  [ label = "AST: "] 
  "25769803786" -> "94489280523"  [ label = "AST: "] 
  "25769803786" -> "30064771176"  [ label = "AST: "] 
  "25769803786" -> "47244640267"  [ label = "AST: "] 
  "25769803786" -> "146028888070"  [ label = "AST: "] 
  "30064771119" -> "68719476779"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771120" -> "68719476780"  [ label = "AST: "] 
  "30064771120" -> "90194313221"  [ label = "AST: "] 
  "30064771121" -> "68719476781"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771122" -> "68719476782"  [ label = "AST: "] 
  "30064771122" -> "90194313222"  [ label = "AST: "] 
  "47244640263" -> "30064771123"  [ label = "AST: "] 
  "47244640263" -> "25769803787"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771123" -> "30064771126"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "90194313223"  [ label = "AST: "] 
  "30064771125" -> "68719476783"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771126" -> "90194313224"  [ label = "AST: "] 
  "30064771127" -> "68719476784"  [ label = "AST: "] 
  "25769803787" -> "146028888068"  [ label = "AST: "] 
  "146028888068" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "90194313225"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771128" -> "90194313227"  [ label = "AST: "] 
  "30064771128" -> "30064771131"  [ label = "AST: "] 
  "30064771128" -> "90194313229"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "90194313226"  [ label = "AST: "] 
  "30064771130" -> "68719476785"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771131" -> "90194313228"  [ label = "AST: "] 
  "30064771132" -> "68719476786"  [ label = "AST: "] 
  "47244640264" -> "30064771133"  [ label = "AST: "] 
  "47244640264" -> "25769803788"  [ label = "AST: "] 
  "30064771133" -> "30064771134"  [ label = "AST: "] 
  "30064771133" -> "90194313231"  [ label = "AST: "] 
  "30064771134" -> "30064771135"  [ label = "AST: "] 
  "30064771134" -> "90194313230"  [ label = "AST: "] 
  "30064771135" -> "68719476787"  [ label = "AST: "] 
  "25769803788" -> "146028888069"  [ label = "AST: "] 
  "146028888069" -> "30064771136"  [ label = "AST: "] 
  "30064771136" -> "90194313232"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771136" -> "90194313234"  [ label = "AST: "] 
  "30064771137" -> "30064771138"  [ label = "AST: "] 
  "30064771137" -> "90194313233"  [ label = "AST: "] 
  "30064771138" -> "68719476788"  [ label = "AST: "] 
  "30064771139" -> "68719476789"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771141" -> "30064771142"  [ label = "AST: "] 
  "30064771142" -> "68719476790"  [ label = "AST: "] 
  "30064771142" -> "90194313235"  [ label = "AST: "] 
  "30064771143" -> "68719476791"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771144" -> "30064771145"  [ label = "AST: "] 
  "30064771144" -> "90194313237"  [ label = "AST: "] 
  "30064771145" -> "68719476792"  [ label = "AST: "] 
  "30064771145" -> "90194313236"  [ label = "AST: "] 
  "30064771146" -> "30064771147"  [ label = "AST: "] 
  "30064771146" -> "68719476795"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771147" -> "68719476794"  [ label = "AST: "] 
  "30064771148" -> "68719476793"  [ label = "AST: "] 
  "30064771148" -> "55834574856"  [ label = "AST: "] 
  "30064771149" -> "30064771150"  [ label = "AST: "] 
  "30064771149" -> "68719476798"  [ label = "AST: "] 
  "30064771150" -> "30064771151"  [ label = "AST: "] 
  "30064771150" -> "68719476797"  [ label = "AST: "] 
  "30064771151" -> "68719476796"  [ label = "AST: "] 
  "30064771151" -> "55834574857"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771152" -> "68719476801"  [ label = "AST: "] 
  "30064771153" -> "30064771154"  [ label = "AST: "] 
  "30064771153" -> "68719476800"  [ label = "AST: "] 
  "30064771154" -> "68719476799"  [ label = "AST: "] 
  "30064771154" -> "55834574858"  [ label = "AST: "] 
  "47244640265" -> "68719476802"  [ label = "AST: "] 
  "47244640265" -> "25769803789"  [ label = "AST: "] 
  "25769803789" -> "94489280521"  [ label = "AST: "] 
  "25769803789" -> "30064771155"  [ label = "AST: "] 
  "25769803789" -> "47244640266"  [ label = "AST: "] 
  "25769803789" -> "30064771169"  [ label = "AST: "] 
  "30064771155" -> "68719476803"  [ label = "AST: "] 
  "30064771155" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "68719476804"  [ label = "AST: "] 
  "30064771156" -> "30064771157"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771157" -> "90194313239"  [ label = "AST: "] 
  "30064771158" -> "68719476805"  [ label = "AST: "] 
  "30064771158" -> "90194313238"  [ label = "AST: "] 
  "47244640266" -> "25769803790"  [ label = "AST: "] 
  "47244640266" -> "30064771160"  [ label = "AST: "] 
  "47244640266" -> "30064771162"  [ label = "AST: "] 
  "47244640266" -> "25769803791"  [ label = "AST: "] 
  "25769803790" -> "94489280522"  [ label = "AST: "] 
  "25769803790" -> "30064771159"  [ label = "AST: "] 
  "30064771159" -> "68719476806"  [ label = "AST: "] 
  "30064771159" -> "90194313240"  [ label = "AST: "] 
  "30064771160" -> "68719476807"  [ label = "AST: "] 
  "30064771160" -> "30064771161"  [ label = "AST: "] 
  "30064771161" -> "68719476808"  [ label = "AST: "] 
  "30064771161" -> "90194313241"  [ label = "AST: "] 
  "30064771162" -> "68719476809"  [ label = "AST: "] 
  "25769803791" -> "30064771163"  [ label = "AST: "] 
  "25769803791" -> "30064771167"  [ label = "AST: "] 
  "30064771163" -> "68719476810"  [ label = "AST: "] 
  "30064771163" -> "30064771164"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771164" -> "30064771166"  [ label = "AST: "] 
  "30064771165" -> "68719476811"  [ label = "AST: "] 
  "30064771165" -> "90194313242"  [ label = "AST: "] 
  "30064771166" -> "68719476812"  [ label = "AST: "] 
  "30064771166" -> "90194313243"  [ label = "AST: "] 
  "30064771167" -> "68719476813"  [ label = "AST: "] 
  "30064771167" -> "30064771168"  [ label = "AST: "] 
  "30064771168" -> "68719476814"  [ label = "AST: "] 
  "30064771168" -> "90194313244"  [ label = "AST: "] 
  "30064771169" -> "30064771170"  [ label = "AST: "] 
  "30064771170" -> "68719476815"  [ label = "AST: "] 
  "30064771170" -> "68719476816"  [ label = "AST: "] 
  "30064771170" -> "68719476817"  [ label = "AST: "] 
  "30064771170" -> "30064771171"  [ label = "AST: "] 
  "30064771171" -> "68719476818"  [ label = "AST: "] 
  "30064771172" -> "30064771173"  [ label = "AST: "] 
  "30064771172" -> "68719476821"  [ label = "AST: "] 
  "30064771173" -> "30064771174"  [ label = "AST: "] 
  "30064771173" -> "30064771175"  [ label = "AST: "] 
  "30064771174" -> "68719476819"  [ label = "AST: "] 
  "30064771174" -> "55834574859"  [ label = "AST: "] 
  "30064771175" -> "68719476820"  [ label = "AST: "] 
  "30064771175" -> "55834574860"  [ label = "AST: "] 
  "30064771176" -> "68719476822"  [ label = "AST: "] 
  "30064771176" -> "30064771177"  [ label = "AST: "] 
  "30064771177" -> "124554051584"  [ label = "AST: "] 
  "47244640267" -> "68719476823"  [ label = "AST: "] 
  "47244640267" -> "94489280524"  [ label = "AST: "] 
  "47244640267" -> "25769803792"  [ label = "AST: "] 
  "25769803792" -> "30064771178"  [ label = "AST: "] 
  "146028888070" -> "68719476824"  [ label = "AST: "] 
  "30064771119" -> "30064771122"  [ label = "CFG: "] 
  "30064771121" -> "30064771125"  [ label = "CFG: "] 
  "30064771139" -> "30064771145"  [ label = "CFG: "] 
  "30064771143" -> "55834574856"  [ label = "CFG: "] 
  "30064771146" -> "55834574857"  [ label = "CFG: "] 
  "30064771149" -> "55834574858"  [ label = "CFG: "] 
  "30064771152" -> "68719476802"  [ label = "CFG: "] 
  "30064771172" -> "124554051584"  [ label = "CFG: "] 
  "30064771176" -> "30064771178"  [ label = "CFG: "] 
  "146028888070" -> "128849018881"  [ label = "CFG: "] 
  "30064771120" -> "30064771119"  [ label = "CFG: "] 
  "30064771122" -> "30064771121"  [ label = "CFG: "] 
  "30064771123" -> "30064771130"  [ label = "CFG: "] 
  "30064771123" -> "30064771135"  [ label = "CFG: "] 
  "30064771133" -> "30064771138"  [ label = "CFG: "] 
  "30064771133" -> "30064771142"  [ label = "CFG: "] 
  "30064771140" -> "30064771139"  [ label = "CFG: "] 
  "30064771144" -> "30064771143"  [ label = "CFG: "] 
  "30064771147" -> "30064771146"  [ label = "CFG: "] 
  "30064771150" -> "30064771149"  [ label = "CFG: "] 
  "30064771153" -> "30064771152"  [ label = "CFG: "] 
  "68719476802" -> "30064771158"  [ label = "CFG: "] 
  "68719476802" -> "55834574859"  [ label = "CFG: "] 
  "30064771173" -> "30064771172"  [ label = "CFG: "] 
  "30064771177" -> "30064771176"  [ label = "CFG: "] 
  "30064771124" -> "30064771127"  [ label = "CFG: "] 
  "30064771126" -> "30064771123"  [ label = "CFG: "] 
  "146028888068" -> "128849018881"  [ label = "CFG: "] 
  "30064771134" -> "30064771133"  [ label = "CFG: "] 
  "146028888069" -> "128849018881"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "30064771145" -> "30064771144"  [ label = "CFG: "] 
  "30064771148" -> "30064771147"  [ label = "CFG: "] 
  "30064771151" -> "30064771150"  [ label = "CFG: "] 
  "30064771154" -> "30064771153"  [ label = "CFG: "] 
  "30064771155" -> "30064771159"  [ label = "CFG: "] 
  "30064771169" -> "55834574859"  [ label = "CFG: "] 
  "30064771174" -> "55834574860"  [ label = "CFG: "] 
  "30064771175" -> "30064771173"  [ label = "CFG: "] 
  "124554051584" -> "30064771177"  [ label = "CFG: "] 
  "30064771178" -> "30064771178"  [ label = "CFG: "] 
  "30064771178" -> "146028888070"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771128" -> "146028888068"  [ label = "CFG: "] 
  "30064771135" -> "30064771134"  [ label = "CFG: "] 
  "30064771136" -> "146028888069"  [ label = "CFG: "] 
  "30064771142" -> "30064771141"  [ label = "CFG: "] 
  "55834574856" -> "30064771148"  [ label = "CFG: "] 
  "55834574857" -> "30064771151"  [ label = "CFG: "] 
  "55834574858" -> "30064771154"  [ label = "CFG: "] 
  "30064771156" -> "30064771155"  [ label = "CFG: "] 
  "30064771160" -> "30064771165"  [ label = "CFG: "] 
  "30064771160" -> "30064771171"  [ label = "CFG: "] 
  "30064771162" -> "30064771161"  [ label = "CFG: "] 
  "30064771170" -> "30064771169"  [ label = "CFG: "] 
  "55834574859" -> "30064771174"  [ label = "CFG: "] 
  "55834574860" -> "30064771175"  [ label = "CFG: "] 
  "30064771129" -> "30064771132"  [ label = "CFG: "] 
  "30064771131" -> "30064771128"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "30064771157" -> "30064771156"  [ label = "CFG: "] 
  "30064771159" -> "30064771161"  [ label = "CFG: "] 
  "30064771161" -> "30064771160"  [ label = "CFG: "] 
  "30064771163" -> "30064771168"  [ label = "CFG: "] 
  "30064771167" -> "30064771162"  [ label = "CFG: "] 
  "30064771171" -> "30064771170"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "30064771138" -> "30064771137"  [ label = "CFG: "] 
  "30064771158" -> "30064771157"  [ label = "CFG: "] 
  "30064771164" -> "30064771163"  [ label = "CFG: "] 
  "30064771168" -> "30064771167"  [ label = "CFG: "] 
  "30064771165" -> "30064771166"  [ label = "CFG: "] 
  "30064771166" -> "30064771164"  [ label = "CFG: "] 
  "111669149698" -> "30064771120"  [ label = "CFG: "] 
  "146028888070" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888069" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116993" -> "128849018881"  [ label = "DDG: done"] 
  "30064771119" -> "128849018881"  [ label = "DDG: context-&gt;input(0)"] 
  "30064771119" -> "128849018881"  [ label = "DDG: &amp; data_t = context-&gt;input(0)"] 
  "30064771122" -> "128849018881"  [ label = "DDG: context"] 
  "30064771121" -> "128849018881"  [ label = "DDG: context-&gt;input(1)"] 
  "30064771121" -> "128849018881"  [ label = "DDG: &amp; batch_index_t = context-&gt;input(1)"] 
  "30064771123" -> "128849018881"  [ label = "DDG: batch_index_t.shape().dim_size(0) &gt; data_t.shape().dim_size(0)"] 
  "30064771130" -> "128849018881"  [ label = "DDG: data_t"] 
  "30064771129" -> "128849018881"  [ label = "DDG: data_t.shape()"] 
  "30064771128" -> "128849018881"  [ label = "DDG: data_t.shape().dim_size(0)"] 
  "30064771132" -> "128849018881"  [ label = "DDG: batch_index_t"] 
  "30064771131" -> "128849018881"  [ label = "DDG: batch_index_t.shape()"] 
  "30064771128" -> "128849018881"  [ label = "DDG: batch_index_t.shape().dim_size(0)"] 
  "30064771128" -> "128849018881"  [ label = "DDG: errors::InvalidArgument(
          &quot;Wrong shape for index tensor. Expected 0th dimension size to be no &quot;
          &quot;greater than &quot;,
          data_t.shape().dim_size(0),
          &quot;; Got: &quot;, batch_index_t.shape().dim_size(0), &quot;.&quot;)"] 
  "30064771172" -> "128849018881"  [ label = "DDG: done_callbacks_to_call"] 
  "30064771153" -> "128849018881"  [ label = "DDG: Tensor"] 
  "111669149698" -> "115964116992"  [ label = "DDG: "] 
  "111669149698" -> "115964116993"  [ label = "DDG: "] 
  "30064771120" -> "30064771119"  [ label = "DDG: context"] 
  "30064771120" -> "30064771119"  [ label = "DDG: 0"] 
  "30064771122" -> "30064771121"  [ label = "DDG: context"] 
  "30064771122" -> "30064771121"  [ label = "DDG: 1"] 
  "30064771140" -> "30064771139"  [ label = "DDG: context-&gt;input(2).scalar&lt;int64_t&gt;()"] 
  "30064771144" -> "30064771143"  [ label = "DDG: batch_index_t.dim_size(0)"] 
  "30064771144" -> "30064771143"  [ label = "DDG: 0"] 
  "111669149698" -> "30064771176"  [ label = "DDG: "] 
  "68719476824" -> "146028888070"  [ label = "DDG: status"] 
  "30064771147" -> "30064771146"  [ label = "DDG: std::vector"] 
  "30064771147" -> "30064771146"  [ label = "DDG: int64_t"] 
  "111669149698" -> "30064771146"  [ label = "DDG: "] 
  "30064771150" -> "30064771149"  [ label = "DDG: std::vector"] 
  "30064771150" -> "30064771149"  [ label = "DDG: int64_t"] 
  "111669149698" -> "30064771149"  [ label = "DDG: "] 
  "30064771153" -> "30064771152"  [ label = "DDG: std::vector"] 
  "30064771153" -> "30064771152"  [ label = "DDG: Tensor"] 
  "111669149698" -> "30064771152"  [ label = "DDG: "] 
  "111669149698" -> "68719476802"  [ label = "DDG: "] 
  "30064771173" -> "30064771172"  [ label = "DDG: std::vector"] 
  "30064771173" -> "30064771172"  [ label = "DDG: AsyncOpKernel::DoneCallback"] 
  "111669149698" -> "30064771172"  [ label = "DDG: "] 
  "30064771176" -> "68719476824"  [ label = "DDG: status"] 
  "111669149698" -> "68719476824"  [ label = "DDG: "] 
  "115964116992" -> "30064771120"  [ label = "DDG: context"] 
  "111669149698" -> "30064771120"  [ label = "DDG: "] 
  "30064771120" -> "30064771122"  [ label = "DDG: context"] 
  "111669149698" -> "30064771122"  [ label = "DDG: "] 
  "30064771124" -> "30064771123"  [ label = "DDG: batch_index_t.shape()"] 
  "30064771124" -> "30064771123"  [ label = "DDG: 0"] 
  "30064771126" -> "30064771123"  [ label = "DDG: data_t.shape()"] 
  "30064771126" -> "30064771123"  [ label = "DDG: 0"] 
  "30064771128" -> "146028888068"  [ label = "DDG: errors::InvalidArgument(
          &quot;Wrong shape for index tensor. Expected 0th dimension size to be no &quot;
          &quot;greater than &quot;,
          data_t.shape().dim_size(0),
          &quot;; Got: &quot;, batch_index_t.shape().dim_size(0), &quot;.&quot;)"] 
  "30064771134" -> "30064771133"  [ label = "DDG: batch_index_t.shape()"] 
  "30064771134" -> "30064771133"  [ label = "DDG: 1"] 
  "111669149698" -> "30064771133"  [ label = "DDG: "] 
  "30064771136" -> "146028888069"  [ label = "DDG: errors::InvalidArgument(
          &quot;Wrong shape for index tensor. Expected 1st dimension size to be 3 ; &quot;
          &quot;Got: &quot;,
          batch_index_t.shape().dim_size(1), &quot;.&quot;)"] 
  "30064771141" -> "30064771140"  [ label = "DDG: context-&gt;input(2)"] 
  "30064771145" -> "30064771144"  [ label = "DDG: batch_index_t"] 
  "30064771145" -> "30064771144"  [ label = "DDG: 0"] 
  "111669149698" -> "30064771144"  [ label = "DDG: "] 
  "111669149698" -> "30064771147"  [ label = "DDG: "] 
  "30064771147" -> "30064771150"  [ label = "DDG: std::vector"] 
  "30064771147" -> "30064771150"  [ label = "DDG: int64_t"] 
  "111669149698" -> "30064771150"  [ label = "DDG: "] 
  "30064771150" -> "30064771153"  [ label = "DDG: std::vector"] 
  "111669149698" -> "30064771153"  [ label = "DDG: "] 
  "30064771156" -> "30064771155"  [ label = "DDG: batch_index_t"] 
  "30064771156" -> "30064771155"  [ label = "DDG: {batch_index_t.dim_size(0), 3}"] 
  "30064771153" -> "30064771173"  [ label = "DDG: std::vector"] 
  "111669149698" -> "124554051584"  [ label = "DDG: "] 
  "111669149698" -> "30064771178"  [ label = "DDG: "] 
  "30064771125" -> "30064771124"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771124"  [ label = "DDG: "] 
  "30064771127" -> "30064771126"  [ label = "DDG: data_t"] 
  "111669149698" -> "30064771126"  [ label = "DDG: "] 
  "30064771135" -> "30064771134"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771134"  [ label = "DDG: "] 
  "30064771142" -> "30064771141"  [ label = "DDG: context"] 
  "30064771142" -> "30064771141"  [ label = "DDG: 2"] 
  "30064771135" -> "30064771145"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771145"  [ label = "DDG: "] 
  "30064771170" -> "30064771169"  [ label = "DDG: context"] 
  "30064771170" -> "30064771169"  [ label = "DDG: data_t"] 
  "30064771170" -> "30064771169"  [ label = "DDG: sizes"] 
  "30064771170" -> "30064771169"  [ label = "DDG: &amp;split_inputs"] 
  "30064771121" -> "30064771125"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771125"  [ label = "DDG: "] 
  "30064771119" -> "30064771127"  [ label = "DDG: data_t"] 
  "111669149698" -> "30064771127"  [ label = "DDG: "] 
  "111669149698" -> "30064771128"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: data_t.shape()"] 
  "30064771129" -> "30064771128"  [ label = "DDG: 0"] 
  "30064771131" -> "30064771128"  [ label = "DDG: batch_index_t.shape()"] 
  "30064771131" -> "30064771128"  [ label = "DDG: 0"] 
  "30064771125" -> "30064771135"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771135"  [ label = "DDG: "] 
  "111669149698" -> "30064771136"  [ label = "DDG: "] 
  "30064771137" -> "30064771136"  [ label = "DDG: batch_index_t.shape()"] 
  "30064771137" -> "30064771136"  [ label = "DDG: 1"] 
  "30064771122" -> "30064771142"  [ label = "DDG: context"] 
  "111669149698" -> "30064771142"  [ label = "DDG: "] 
  "30064771158" -> "30064771156"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771156"  [ label = "DDG: "] 
  "30064771157" -> "30064771156"  [ label = "DDG: batch_index_t.dim_size(0)"] 
  "30064771157" -> "30064771156"  [ label = "DDG: 3"] 
  "111669149698" -> "30064771159"  [ label = "DDG: "] 
  "30064771159" -> "30064771160"  [ label = "DDG: i"] 
  "30064771162" -> "30064771160"  [ label = "DDG: i"] 
  "111669149698" -> "30064771160"  [ label = "DDG: "] 
  "30064771161" -> "30064771160"  [ label = "DDG: batch_index_t"] 
  "30064771161" -> "30064771160"  [ label = "DDG: 0"] 
  "30064771168" -> "30064771162"  [ label = "DDG: i"] 
  "111669149698" -> "30064771162"  [ label = "DDG: "] 
  "30064771142" -> "30064771170"  [ label = "DDG: context"] 
  "111669149698" -> "30064771170"  [ label = "DDG: "] 
  "30064771127" -> "30064771170"  [ label = "DDG: data_t"] 
  "30064771146" -> "30064771170"  [ label = "DDG: sizes"] 
  "30064771163" -> "30064771170"  [ label = "DDG: sizes"] 
  "30064771152" -> "30064771170"  [ label = "DDG: split_inputs"] 
  "30064771130" -> "30064771129"  [ label = "DDG: data_t"] 
  "111669149698" -> "30064771129"  [ label = "DDG: "] 
  "30064771132" -> "30064771131"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771131"  [ label = "DDG: "] 
  "30064771138" -> "30064771137"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771137"  [ label = "DDG: "] 
  "30064771158" -> "30064771157"  [ label = "DDG: batch_index_t"] 
  "30064771158" -> "30064771157"  [ label = "DDG: 0"] 
  "111669149698" -> "30064771157"  [ label = "DDG: "] 
  "30064771156" -> "30064771161"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771161"  [ label = "DDG: "] 
  "30064771146" -> "30064771163"  [ label = "DDG: sizes"] 
  "111669149698" -> "30064771163"  [ label = "DDG: "] 
  "30064771164" -> "30064771163"  [ label = "DDG: batch_indices(i, 2)"] 
  "30064771164" -> "30064771163"  [ label = "DDG: batch_indices(i, 1)"] 
  "30064771149" -> "30064771167"  [ label = "DDG: batch_keys"] 
  "111669149698" -> "30064771167"  [ label = "DDG: "] 
  "30064771168" -> "30064771167"  [ label = "DDG: i"] 
  "30064771168" -> "30064771167"  [ label = "DDG: 0"] 
  "30064771127" -> "30064771130"  [ label = "DDG: data_t"] 
  "111669149698" -> "30064771130"  [ label = "DDG: "] 
  "30064771125" -> "30064771132"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771132"  [ label = "DDG: "] 
  "30064771135" -> "30064771138"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771138"  [ label = "DDG: "] 
  "30064771145" -> "30064771158"  [ label = "DDG: batch_index_t"] 
  "111669149698" -> "30064771158"  [ label = "DDG: "] 
  "30064771165" -> "30064771164"  [ label = "DDG: i"] 
  "30064771165" -> "30064771164"  [ label = "DDG: 2"] 
  "30064771166" -> "30064771164"  [ label = "DDG: i"] 
  "30064771166" -> "30064771164"  [ label = "DDG: 1"] 
  "30064771166" -> "30064771168"  [ label = "DDG: i"] 
  "111669149698" -> "30064771168"  [ label = "DDG: "] 
  "30064771160" -> "30064771165"  [ label = "DDG: i"] 
  "111669149698" -> "30064771165"  [ label = "DDG: "] 
  "30064771165" -> "30064771166"  [ label = "DDG: i"] 
  "111669149698" -> "30064771166"  [ label = "DDG: "] 
  "30064771123" -> "146028888068"  [ label = "CDG: "] 
  "30064771123" -> "30064771134"  [ label = "CDG: "] 
  "30064771123" -> "30064771135"  [ label = "CDG: "] 
  "30064771123" -> "30064771132"  [ label = "CDG: "] 
  "30064771123" -> "30064771133"  [ label = "CDG: "] 
  "30064771123" -> "30064771130"  [ label = "CDG: "] 
  "30064771123" -> "30064771131"  [ label = "CDG: "] 
  "30064771123" -> "30064771128"  [ label = "CDG: "] 
  "30064771123" -> "30064771129"  [ label = "CDG: "] 
  "30064771133" -> "30064771178"  [ label = "CDG: "] 
  "30064771133" -> "30064771176"  [ label = "CDG: "] 
  "30064771133" -> "30064771177"  [ label = "CDG: "] 
  "30064771133" -> "30064771174"  [ label = "CDG: "] 
  "30064771133" -> "30064771175"  [ label = "CDG: "] 
  "30064771133" -> "30064771172"  [ label = "CDG: "] 
  "30064771133" -> "30064771173"  [ label = "CDG: "] 
  "30064771133" -> "68719476802"  [ label = "CDG: "] 
  "30064771133" -> "30064771154"  [ label = "CDG: "] 
  "30064771133" -> "30064771152"  [ label = "CDG: "] 
  "30064771133" -> "30064771153"  [ label = "CDG: "] 
  "30064771133" -> "30064771150"  [ label = "CDG: "] 
  "30064771133" -> "30064771151"  [ label = "CDG: "] 
  "30064771133" -> "30064771148"  [ label = "CDG: "] 
  "30064771133" -> "30064771149"  [ label = "CDG: "] 
  "30064771133" -> "30064771146"  [ label = "CDG: "] 
  "30064771133" -> "146028888069"  [ label = "CDG: "] 
  "30064771133" -> "30064771147"  [ label = "CDG: "] 
  "30064771133" -> "146028888070"  [ label = "CDG: "] 
  "30064771133" -> "30064771144"  [ label = "CDG: "] 
  "30064771133" -> "30064771145"  [ label = "CDG: "] 
  "30064771133" -> "30064771142"  [ label = "CDG: "] 
  "30064771133" -> "30064771143"  [ label = "CDG: "] 
  "30064771133" -> "30064771140"  [ label = "CDG: "] 
  "30064771133" -> "30064771141"  [ label = "CDG: "] 
  "30064771133" -> "30064771138"  [ label = "CDG: "] 
  "30064771133" -> "30064771139"  [ label = "CDG: "] 
  "30064771133" -> "30064771136"  [ label = "CDG: "] 
  "30064771133" -> "30064771137"  [ label = "CDG: "] 
  "30064771133" -> "55834574860"  [ label = "CDG: "] 
  "30064771133" -> "55834574858"  [ label = "CDG: "] 
  "30064771133" -> "55834574859"  [ label = "CDG: "] 
  "30064771133" -> "55834574856"  [ label = "CDG: "] 
  "30064771133" -> "55834574857"  [ label = "CDG: "] 
  "30064771133" -> "124554051584"  [ label = "CDG: "] 
  "68719476802" -> "30064771170"  [ label = "CDG: "] 
  "68719476802" -> "30064771171"  [ label = "CDG: "] 
  "68719476802" -> "30064771169"  [ label = "CDG: "] 
  "68719476802" -> "30064771160"  [ label = "CDG: "] 
  "68719476802" -> "30064771161"  [ label = "CDG: "] 
  "68719476802" -> "30064771158"  [ label = "CDG: "] 
  "68719476802" -> "30064771159"  [ label = "CDG: "] 
  "68719476802" -> "30064771156"  [ label = "CDG: "] 
  "68719476802" -> "30064771157"  [ label = "CDG: "] 
  "68719476802" -> "30064771155"  [ label = "CDG: "] 
  "30064771178" -> "30064771178"  [ label = "CDG: "] 
  "30064771160" -> "30064771168"  [ label = "CDG: "] 
  "30064771160" -> "30064771166"  [ label = "CDG: "] 
  "30064771160" -> "30064771167"  [ label = "CDG: "] 
  "30064771160" -> "30064771164"  [ label = "CDG: "] 
  "30064771160" -> "30064771165"  [ label = "CDG: "] 
  "30064771160" -> "30064771162"  [ label = "CDG: "] 
  "30064771160" -> "30064771163"  [ label = "CDG: "] 
  "30064771160" -> "30064771160"  [ label = "CDG: "] 
  "30064771160" -> "30064771161"  [ label = "CDG: "] 
}
"""
)
