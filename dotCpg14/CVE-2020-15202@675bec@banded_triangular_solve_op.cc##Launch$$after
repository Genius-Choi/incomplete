[33mval[0m [36mres1088[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "Launch" {  
"111669149698" [label = <(METHOD,Launch)<SUB>1</SUB>> ]
"115964117000" [label = <(PARAM,OpKernelContext* context)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,const Tensor&amp; in_x)<SUB>1</SUB>> ]
"115964116995" [label = <(PARAM,const Tensor&amp; in_y)<SUB>2</SUB>> ]
"115964116997" [label = <(PARAM,bool adjoint)<SUB>2</SUB>> ]
"115964116996" [label = <(PARAM,bool lower)<SUB>2</SUB>> ]
"115964116998" [label = <(PARAM,const MatMulBCast&amp; bcast)<SUB>3</SUB>> ]
"115964116999" [label = <(PARAM,Tensor* out)<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,{
    // Number of banded matrix triangular sol...,{
    // Number of banded matrix triangular sol...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,const int64 batch_size: int64)<SUB>5</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,batch_size = bcast.output_batch_size())<SUB>5</SUB>> ]
"68719476746" [label = <(IDENTIFIER,batch_size,batch_size = bcast.output_batch_size())<SUB>5</SUB>> ]
"30064771076" [label = <(output_batch_size,bcast.output_batch_size())<SUB>5</SUB>> ]
"68719476747" [label = <(IDENTIFIER,bcast,bcast.output_batch_size())<SUB>5</SUB>> ]
"94489280513" [label = <(LOCAL,const int64 cost_per_unit: int64)<SUB>6</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,cost_per_unit =
        in_x.dim_size(1) * in_x...)<SUB>6</SUB>> ]
"68719476748" [label = <(IDENTIFIER,cost_per_unit,cost_per_unit =
        in_x.dim_size(1) * in_x...)<SUB>6</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.multiplication,in_x.dim_size(1) * in_x.dim_size(2) * in_y.dim_...)<SUB>7</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.multiplication,in_x.dim_size(1) * in_x.dim_size(2))<SUB>7</SUB>> ]
"30064771080" [label = <(dim_size,in_x.dim_size(1))<SUB>7</SUB>> ]
"68719476749" [label = <(IDENTIFIER,in_x,in_x.dim_size(1))<SUB>7</SUB>> ]
"90194313216" [label = <(LITERAL,1,in_x.dim_size(1))<SUB>7</SUB>> ]
"30064771081" [label = <(dim_size,in_x.dim_size(2))<SUB>7</SUB>> ]
"68719476750" [label = <(IDENTIFIER,in_x,in_x.dim_size(2))<SUB>7</SUB>> ]
"90194313217" [label = <(LITERAL,2,in_x.dim_size(2))<SUB>7</SUB>> ]
"30064771082" [label = <(dim_size,in_y.dim_size(2))<SUB>7</SUB>> ]
"68719476751" [label = <(IDENTIFIER,in_y,in_y.dim_size(2))<SUB>7</SUB>> ]
"90194313218" [label = <(LITERAL,2,in_y.dim_size(2))<SUB>7</SUB>> ]
"94489280514" [label = <(LOCAL,auto worker_threads: auto)<SUB>8</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,worker_threads = *(context-&gt;device()-&gt;tensorflo...)<SUB>8</SUB>> ]
"68719476752" [label = <(IDENTIFIER,worker_threads,worker_threads = *(context-&gt;device()-&gt;tensorflo...)<SUB>8</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.indirection,*(context-&gt;device()-&gt;tensorflow_cpu_worker_thre...)<SUB>8</SUB>> ]
"30064771085" [label = <(tensorflow_cpu_worker_threads,context-&gt;device()-&gt;tensorflow_cpu_worker_threads())<SUB>8</SUB>> ]
"30064771086" [label = <(device,context-&gt;device())<SUB>8</SUB>> ]
"68719476753" [label = <(IDENTIFIER,context,context-&gt;device())<SUB>8</SUB>> ]
"171798691841" [label = <(TYPE_DECL,Matrix)<SUB>10</SUB>> ]
"171798691842" [label = <(TYPE_DECL,ConstMatrixMap)<SUB>12</SUB>> ]
"171798691843" [label = <(TYPE_DECL,RealScalar)<SUB>13</SUB>> ]
"94489280515" [label = <(LOCAL,auto matrix: auto)<SUB>16</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,matrix = ConstMatrixMap(in_x.flat&lt;Scalar&gt;().dat...)<SUB>16</SUB>> ]
"68719476754" [label = <(IDENTIFIER,matrix,matrix = ConstMatrixMap(in_x.flat&lt;Scalar&gt;().dat...)<SUB>16</SUB>> ]
"30064771088" [label = <(ConstMatrixMap,ConstMatrixMap(in_x.flat&lt;Scalar&gt;().data(), in_x...)<SUB>16</SUB>> ]
"30064771089" [label = <(data,in_x.flat&lt;Scalar&gt;().data())<SUB>16</SUB>> ]
"30064771090" [label = <(flat&lt;Scalar&gt;,in_x.flat&lt;Scalar&gt;())<SUB>16</SUB>> ]
"68719476755" [label = <(IDENTIFIER,in_x,in_x.flat&lt;Scalar&gt;())<SUB>16</SUB>> ]
"30064771091" [label = <(dim_size,in_x.dim_size(1))<SUB>16</SUB>> ]
"68719476756" [label = <(IDENTIFIER,in_x,in_x.dim_size(1))<SUB>16</SUB>> ]
"90194313219" [label = <(LITERAL,1,in_x.dim_size(1))<SUB>16</SUB>> ]
"30064771092" [label = <(dim_size,in_x.dim_size(2))<SUB>17</SUB>> ]
"68719476757" [label = <(IDENTIFIER,in_x,in_x.dim_size(2))<SUB>17</SUB>> ]
"90194313220" [label = <(LITERAL,2,in_x.dim_size(2))<SUB>17</SUB>> ]
"94489280516" [label = <(LOCAL,RealScalar min_abs_pivot: RealScalar)<SUB>18</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (lower))<SUB>19</SUB>> ]
"68719476758" [label = <(IDENTIFIER,lower,if (lower))<SUB>19</SUB>> ]
"25769803779" [label = <(BLOCK,{
      min_abs_pivot = matrix.row(0).cwiseAbs(...,{
      min_abs_pivot = matrix.row(0).cwiseAbs(...)<SUB>19</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,min_abs_pivot = matrix.row(0).cwiseAbs().minCoe...)<SUB>20</SUB>> ]
"68719476759" [label = <(IDENTIFIER,min_abs_pivot,min_abs_pivot = matrix.row(0).cwiseAbs().minCoe...)<SUB>20</SUB>> ]
"30064771094" [label = <(minCoeff,matrix.row(0).cwiseAbs().minCoeff())<SUB>20</SUB>> ]
"30064771095" [label = <(cwiseAbs,matrix.row(0).cwiseAbs())<SUB>20</SUB>> ]
"30064771096" [label = <(row,matrix.row(0))<SUB>20</SUB>> ]
"68719476760" [label = <(IDENTIFIER,matrix,matrix.row(0))<SUB>20</SUB>> ]
"90194313221" [label = <(LITERAL,0,matrix.row(0))<SUB>20</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>21</SUB>> ]
"25769803780" [label = <(BLOCK,{
      min_abs_pivot = matrix.row(in_x.dim_siz...,{
      min_abs_pivot = matrix.row(in_x.dim_siz...)<SUB>21</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,min_abs_pivot = matrix.row(in_x.dim_size(1) - 1...)<SUB>22</SUB>> ]
"68719476761" [label = <(IDENTIFIER,min_abs_pivot,min_abs_pivot = matrix.row(in_x.dim_size(1) - 1...)<SUB>22</SUB>> ]
"30064771098" [label = <(minCoeff,matrix.row(in_x.dim_size(1) - 1).cwiseAbs().min...)<SUB>22</SUB>> ]
"30064771099" [label = <(cwiseAbs,matrix.row(in_x.dim_size(1) - 1).cwiseAbs())<SUB>22</SUB>> ]
"30064771100" [label = <(row,matrix.row(in_x.dim_size(1) - 1))<SUB>22</SUB>> ]
"68719476762" [label = <(IDENTIFIER,matrix,matrix.row(in_x.dim_size(1) - 1))<SUB>22</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.subtraction,in_x.dim_size(1) - 1)<SUB>22</SUB>> ]
"30064771102" [label = <(dim_size,in_x.dim_size(1))<SUB>22</SUB>> ]
"68719476763" [label = <(IDENTIFIER,in_x,in_x.dim_size(1))<SUB>22</SUB>> ]
"90194313222" [label = <(LITERAL,1,in_x.dim_size(1))<SUB>22</SUB>> ]
"90194313223" [label = <(LITERAL,1,in_x.dim_size(1) - 1)<SUB>22</SUB>> ]
"30064771103" [label = <(OP_REQUIRES,OP_REQUIRES(context, min_abs_pivot &gt; RealScalar...)<SUB>24</SUB>> ]
"68719476764" [label = <(IDENTIFIER,context,OP_REQUIRES(context, min_abs_pivot &gt; RealScalar...)<SUB>24</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.greaterThan,min_abs_pivot &gt; RealScalar(0))<SUB>24</SUB>> ]
"68719476765" [label = <(IDENTIFIER,min_abs_pivot,min_abs_pivot &gt; RealScalar(0))<SUB>24</SUB>> ]
"30064771105" [label = <(RealScalar,RealScalar(0))<SUB>24</SUB>> ]
"90194313224" [label = <(LITERAL,0,RealScalar(0))<SUB>24</SUB>> ]
"30064771106" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Input matrix is not in...)<SUB>25</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;Input matrix is not invertible.&quot;,errors::InvalidArgument(&quot;Input matrix is not in...)<SUB>25</SUB>> ]
"30064771107" [label = <(Shard,Shard(worker_threads.num_threads, worker_thread...)<SUB>27</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.fieldAccess,worker_threads.num_threads)<SUB>27</SUB>> ]
"68719476766" [label = <(IDENTIFIER,worker_threads,Shard(worker_threads.num_threads, worker_thread...)<SUB>27</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,num_threads,num_threads)<SUB>27</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.fieldAccess,worker_threads.workers)<SUB>27</SUB>> ]
"68719476767" [label = <(IDENTIFIER,worker_threads,Shard(worker_threads.num_threads, worker_thread...)<SUB>27</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,workers,workers)<SUB>27</SUB>> ]
"68719476768" [label = <(IDENTIFIER,batch_size,Shard(worker_threads.num_threads, worker_thread...)<SUB>27</SUB>> ]
"68719476769" [label = <(IDENTIFIER,cost_per_unit,Shard(worker_threads.num_threads, worker_thread...)<SUB>28</SUB>> ]
"124554051584" [label = <(METHOD_REF,[&amp;in_x, &amp;in_y, adjoint, lower, &amp;bcast, out](int...,Shard(worker_threads.num_threads, worker_thread...)<SUB>29</SUB>> ]
"133143986177" [label = <(MODIFIER,STATIC)> ]
"128849018881" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149698" -> "115964117000"  [ label = "AST: "] 
  "111669149698" -> "115964116994"  [ label = "AST: "] 
  "111669149698" -> "115964116995"  [ label = "AST: "] 
  "111669149698" -> "115964116997"  [ label = "AST: "] 
  "111669149698" -> "115964116996"  [ label = "AST: "] 
  "111669149698" -> "115964116998"  [ label = "AST: "] 
  "111669149698" -> "115964116999"  [ label = "AST: "] 
  "111669149698" -> "25769803778"  [ label = "AST: "] 
  "111669149698" -> "133143986177"  [ label = "AST: "] 
  "111669149698" -> "128849018881"  [ label = "AST: "] 
  "25769803778" -> "94489280512"  [ label = "AST: "] 
  "25769803778" -> "30064771075"  [ label = "AST: "] 
  "25769803778" -> "94489280513"  [ label = "AST: "] 
  "25769803778" -> "30064771077"  [ label = "AST: "] 
  "25769803778" -> "94489280514"  [ label = "AST: "] 
  "25769803778" -> "30064771083"  [ label = "AST: "] 
  "25769803778" -> "171798691841"  [ label = "AST: "] 
  "25769803778" -> "171798691842"  [ label = "AST: "] 
  "25769803778" -> "171798691843"  [ label = "AST: "] 
  "25769803778" -> "94489280515"  [ label = "AST: "] 
  "25769803778" -> "30064771087"  [ label = "AST: "] 
  "25769803778" -> "94489280516"  [ label = "AST: "] 
  "25769803778" -> "47244640256"  [ label = "AST: "] 
  "25769803778" -> "30064771103"  [ label = "AST: "] 
  "25769803778" -> "30064771107"  [ label = "AST: "] 
  "30064771075" -> "68719476746"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476747"  [ label = "AST: "] 
  "30064771077" -> "68719476748"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771082"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "68719476749"  [ label = "AST: "] 
  "30064771080" -> "90194313216"  [ label = "AST: "] 
  "30064771081" -> "68719476750"  [ label = "AST: "] 
  "30064771081" -> "90194313217"  [ label = "AST: "] 
  "30064771082" -> "68719476751"  [ label = "AST: "] 
  "30064771082" -> "90194313218"  [ label = "AST: "] 
  "30064771083" -> "68719476752"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476753"  [ label = "AST: "] 
  "30064771087" -> "68719476754"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "30064771091"  [ label = "AST: "] 
  "30064771088" -> "30064771092"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476755"  [ label = "AST: "] 
  "30064771091" -> "68719476756"  [ label = "AST: "] 
  "30064771091" -> "90194313219"  [ label = "AST: "] 
  "30064771092" -> "68719476757"  [ label = "AST: "] 
  "30064771092" -> "90194313220"  [ label = "AST: "] 
  "47244640256" -> "68719476758"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "47244640256" -> "47244640257"  [ label = "AST: "] 
  "25769803779" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476759"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476760"  [ label = "AST: "] 
  "30064771096" -> "90194313221"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476761"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476762"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "90194313223"  [ label = "AST: "] 
  "30064771102" -> "68719476763"  [ label = "AST: "] 
  "30064771102" -> "90194313222"  [ label = "AST: "] 
  "30064771103" -> "68719476764"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "30064771106"  [ label = "AST: "] 
  "30064771104" -> "68719476765"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "90194313224"  [ label = "AST: "] 
  "30064771106" -> "90194313225"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "30064771109"  [ label = "AST: "] 
  "30064771107" -> "68719476768"  [ label = "AST: "] 
  "30064771107" -> "68719476769"  [ label = "AST: "] 
  "30064771107" -> "124554051584"  [ label = "AST: "] 
  "30064771108" -> "68719476766"  [ label = "AST: "] 
  "30064771108" -> "55834574848"  [ label = "AST: "] 
  "30064771109" -> "68719476767"  [ label = "AST: "] 
  "30064771109" -> "55834574849"  [ label = "AST: "] 
  "30064771075" -> "30064771080"  [ label = "CFG: "] 
  "30064771077" -> "30064771086"  [ label = "CFG: "] 
  "30064771083" -> "30064771090"  [ label = "CFG: "] 
  "30064771087" -> "68719476758"  [ label = "CFG: "] 
  "30064771103" -> "55834574848"  [ label = "CFG: "] 
  "30064771107" -> "128849018881"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "68719476758" -> "30064771096"  [ label = "CFG: "] 
  "68719476758" -> "30064771102"  [ label = "CFG: "] 
  "30064771104" -> "30064771106"  [ label = "CFG: "] 
  "30064771106" -> "30064771103"  [ label = "CFG: "] 
  "30064771108" -> "55834574849"  [ label = "CFG: "] 
  "30064771109" -> "124554051584"  [ label = "CFG: "] 
  "124554051584" -> "30064771107"  [ label = "CFG: "] 
  "30064771079" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771078"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771089" -> "30064771091"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771092" -> "30064771088"  [ label = "CFG: "] 
  "30064771093" -> "30064771105"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "55834574848" -> "30064771108"  [ label = "CFG: "] 
  "55834574849" -> "30064771109"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "30064771079"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771097" -> "30064771105"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "111669149698" -> "30064771076"  [ label = "CFG: "] 
  "115964116997" -> "128849018881"  [ label = "DDG: adjoint"] 
  "115964116996" -> "128849018881"  [ label = "DDG: lower"] 
  "115964116999" -> "128849018881"  [ label = "DDG: out"] 
  "30064771076" -> "128849018881"  [ label = "DDG: bcast"] 
  "30064771075" -> "128849018881"  [ label = "DDG: bcast.output_batch_size()"] 
  "30064771075" -> "128849018881"  [ label = "DDG: batch_size = bcast.output_batch_size()"] 
  "30064771078" -> "128849018881"  [ label = "DDG: in_x.dim_size(1) * in_x.dim_size(2)"] 
  "30064771082" -> "128849018881"  [ label = "DDG: in_y"] 
  "30064771078" -> "128849018881"  [ label = "DDG: in_y.dim_size(2)"] 
  "30064771077" -> "128849018881"  [ label = "DDG: in_x.dim_size(1) * in_x.dim_size(2) * in_y.dim_size(2)"] 
  "30064771077" -> "128849018881"  [ label = "DDG: cost_per_unit =
        in_x.dim_size(1) * in_x.dim_size(2) * in_y.dim_size(2)"] 
  "30064771083" -> "128849018881"  [ label = "DDG: worker_threads"] 
  "30064771085" -> "128849018881"  [ label = "DDG: context-&gt;device()"] 
  "30064771083" -> "128849018881"  [ label = "DDG: *(context-&gt;device()-&gt;tensorflow_cpu_worker_threads())"] 
  "30064771083" -> "128849018881"  [ label = "DDG: worker_threads = *(context-&gt;device()-&gt;tensorflow_cpu_worker_threads())"] 
  "30064771089" -> "128849018881"  [ label = "DDG: in_x.flat&lt;Scalar&gt;()"] 
  "30064771088" -> "128849018881"  [ label = "DDG: in_x.flat&lt;Scalar&gt;().data()"] 
  "30064771088" -> "128849018881"  [ label = "DDG: in_x.dim_size(1)"] 
  "30064771092" -> "128849018881"  [ label = "DDG: in_x"] 
  "30064771088" -> "128849018881"  [ label = "DDG: in_x.dim_size(2)"] 
  "30064771087" -> "128849018881"  [ label = "DDG: ConstMatrixMap(in_x.flat&lt;Scalar&gt;().data(), in_x.dim_size(1),
                                 in_x.dim_size(2))"] 
  "30064771087" -> "128849018881"  [ label = "DDG: matrix = ConstMatrixMap(in_x.flat&lt;Scalar&gt;().data(), in_x.dim_size(1),
                                 in_x.dim_size(2))"] 
  "30064771100" -> "128849018881"  [ label = "DDG: matrix"] 
  "30064771102" -> "128849018881"  [ label = "DDG: in_x"] 
  "30064771101" -> "128849018881"  [ label = "DDG: in_x.dim_size(1)"] 
  "30064771100" -> "128849018881"  [ label = "DDG: in_x.dim_size(1) - 1"] 
  "30064771099" -> "128849018881"  [ label = "DDG: matrix.row(in_x.dim_size(1) - 1)"] 
  "30064771098" -> "128849018881"  [ label = "DDG: matrix.row(in_x.dim_size(1) - 1).cwiseAbs()"] 
  "30064771097" -> "128849018881"  [ label = "DDG: matrix.row(in_x.dim_size(1) - 1).cwiseAbs().minCoeff()"] 
  "30064771097" -> "128849018881"  [ label = "DDG: min_abs_pivot = matrix.row(in_x.dim_size(1) - 1).cwiseAbs().minCoeff()"] 
  "30064771096" -> "128849018881"  [ label = "DDG: matrix"] 
  "30064771095" -> "128849018881"  [ label = "DDG: matrix.row(0)"] 
  "30064771094" -> "128849018881"  [ label = "DDG: matrix.row(0).cwiseAbs()"] 
  "30064771093" -> "128849018881"  [ label = "DDG: matrix.row(0).cwiseAbs().minCoeff()"] 
  "30064771093" -> "128849018881"  [ label = "DDG: min_abs_pivot = matrix.row(0).cwiseAbs().minCoeff()"] 
  "30064771103" -> "128849018881"  [ label = "DDG: context"] 
  "30064771104" -> "128849018881"  [ label = "DDG: min_abs_pivot"] 
  "30064771104" -> "128849018881"  [ label = "DDG: RealScalar(0)"] 
  "30064771103" -> "128849018881"  [ label = "DDG: min_abs_pivot &gt; RealScalar(0)"] 
  "30064771103" -> "128849018881"  [ label = "DDG: errors::InvalidArgument(&quot;Input matrix is not invertible.&quot;)"] 
  "30064771103" -> "128849018881"  [ label = "DDG: OP_REQUIRES(context, min_abs_pivot &gt; RealScalar(0),
                errors::InvalidArgument(&quot;Input matrix is not invertible.&quot;))"] 
  "30064771107" -> "128849018881"  [ label = "DDG: worker_threads.num_threads"] 
  "30064771107" -> "128849018881"  [ label = "DDG: worker_threads.workers"] 
  "30064771107" -> "128849018881"  [ label = "DDG: batch_size"] 
  "30064771107" -> "128849018881"  [ label = "DDG: cost_per_unit"] 
  "30064771107" -> "128849018881"  [ label = "DDG: Shard(worker_threads.num_threads, worker_threads.workers, batch_size,
          cost_per_unit,
          [&amp;in_x, &amp;in_y, adjoint, lower, &amp;bcast, out](int64 start,
                                                      int64 limit) {
            SequentialBandedTriangularSolveKernel&lt;Scalar&gt;::Run(
                in_x, in_y, lower, adjoint, bcast, out, start, limit);
          })"] 
  "111669149698" -> "115964117000"  [ label = "DDG: "] 
  "111669149698" -> "115964116994"  [ label = "DDG: "] 
  "111669149698" -> "115964116995"  [ label = "DDG: "] 
  "111669149698" -> "115964116997"  [ label = "DDG: "] 
  "111669149698" -> "115964116996"  [ label = "DDG: "] 
  "111669149698" -> "115964116998"  [ label = "DDG: "] 
  "111669149698" -> "115964116999"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: bcast"] 
  "30064771078" -> "30064771077"  [ label = "DDG: in_x.dim_size(1) * in_x.dim_size(2)"] 
  "30064771078" -> "30064771077"  [ label = "DDG: in_y.dim_size(2)"] 
  "30064771088" -> "30064771087"  [ label = "DDG: in_x.flat&lt;Scalar&gt;().data()"] 
  "30064771088" -> "30064771087"  [ label = "DDG: in_x.dim_size(1)"] 
  "30064771088" -> "30064771087"  [ label = "DDG: in_x.dim_size(2)"] 
  "111669149698" -> "68719476758"  [ label = "DDG: "] 
  "30064771086" -> "30064771103"  [ label = "DDG: context"] 
  "111669149698" -> "30064771103"  [ label = "DDG: "] 
  "30064771104" -> "30064771103"  [ label = "DDG: min_abs_pivot"] 
  "30064771104" -> "30064771103"  [ label = "DDG: RealScalar(0)"] 
  "30064771106" -> "30064771103"  [ label = "DDG: &quot;Input matrix is not invertible.&quot;"] 
  "30064771083" -> "30064771107"  [ label = "DDG: worker_threads"] 
  "30064771075" -> "30064771107"  [ label = "DDG: batch_size"] 
  "111669149698" -> "30064771107"  [ label = "DDG: "] 
  "30064771077" -> "30064771107"  [ label = "DDG: cost_per_unit"] 
  "115964116998" -> "30064771076"  [ label = "DDG: bcast"] 
  "111669149698" -> "30064771076"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: in_x.dim_size(1)"] 
  "30064771079" -> "30064771078"  [ label = "DDG: in_x.dim_size(2)"] 
  "30064771082" -> "30064771078"  [ label = "DDG: in_y"] 
  "30064771082" -> "30064771078"  [ label = "DDG: 2"] 
  "30064771089" -> "30064771088"  [ label = "DDG: in_x.flat&lt;Scalar&gt;()"] 
  "30064771091" -> "30064771088"  [ label = "DDG: in_x"] 
  "30064771091" -> "30064771088"  [ label = "DDG: 1"] 
  "30064771092" -> "30064771088"  [ label = "DDG: in_x"] 
  "30064771092" -> "30064771088"  [ label = "DDG: 2"] 
  "30064771094" -> "30064771093"  [ label = "DDG: matrix.row(0).cwiseAbs()"] 
  "30064771097" -> "30064771104"  [ label = "DDG: min_abs_pivot"] 
  "30064771093" -> "30064771104"  [ label = "DDG: min_abs_pivot"] 
  "111669149698" -> "30064771104"  [ label = "DDG: "] 
  "30064771105" -> "30064771104"  [ label = "DDG: 0"] 
  "111669149698" -> "30064771106"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: in_x"] 
  "30064771080" -> "30064771079"  [ label = "DDG: 1"] 
  "30064771081" -> "30064771079"  [ label = "DDG: in_x"] 
  "30064771081" -> "30064771079"  [ label = "DDG: 2"] 
  "115964116995" -> "30064771082"  [ label = "DDG: in_y"] 
  "111669149698" -> "30064771082"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: context"] 
  "30064771090" -> "30064771089"  [ label = "DDG: in_x"] 
  "30064771090" -> "30064771091"  [ label = "DDG: in_x"] 
  "111669149698" -> "30064771091"  [ label = "DDG: "] 
  "30064771091" -> "30064771092"  [ label = "DDG: in_x"] 
  "111669149698" -> "30064771092"  [ label = "DDG: "] 
  "30064771098" -> "30064771097"  [ label = "DDG: matrix.row(in_x.dim_size(1) - 1).cwiseAbs()"] 
  "111669149698" -> "30064771105"  [ label = "DDG: "] 
  "115964116994" -> "30064771080"  [ label = "DDG: in_x"] 
  "111669149698" -> "30064771080"  [ label = "DDG: "] 
  "30064771080" -> "30064771081"  [ label = "DDG: in_x"] 
  "111669149698" -> "30064771081"  [ label = "DDG: "] 
  "115964117000" -> "30064771086"  [ label = "DDG: context"] 
  "111669149698" -> "30064771086"  [ label = "DDG: "] 
  "30064771081" -> "30064771090"  [ label = "DDG: in_x"] 
  "111669149698" -> "30064771090"  [ label = "DDG: "] 
  "30064771095" -> "30064771094"  [ label = "DDG: matrix.row(0)"] 
  "30064771096" -> "30064771095"  [ label = "DDG: matrix"] 
  "30064771096" -> "30064771095"  [ label = "DDG: 0"] 
  "30064771099" -> "30064771098"  [ label = "DDG: matrix.row(in_x.dim_size(1) - 1)"] 
  "30064771087" -> "30064771096"  [ label = "DDG: matrix"] 
  "111669149698" -> "30064771096"  [ label = "DDG: "] 
  "30064771100" -> "30064771099"  [ label = "DDG: matrix"] 
  "30064771100" -> "30064771099"  [ label = "DDG: in_x.dim_size(1) - 1"] 
  "30064771087" -> "30064771100"  [ label = "DDG: matrix"] 
  "111669149698" -> "30064771100"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: in_x.dim_size(1)"] 
  "30064771101" -> "30064771100"  [ label = "DDG: 1"] 
  "30064771102" -> "30064771101"  [ label = "DDG: in_x"] 
  "30064771102" -> "30064771101"  [ label = "DDG: 1"] 
  "111669149698" -> "30064771101"  [ label = "DDG: "] 
  "30064771092" -> "30064771102"  [ label = "DDG: in_x"] 
  "111669149698" -> "30064771102"  [ label = "DDG: "] 
  "68719476758" -> "30064771094"  [ label = "CDG: "] 
  "68719476758" -> "30064771095"  [ label = "CDG: "] 
  "68719476758" -> "30064771093"  [ label = "CDG: "] 
  "68719476758" -> "30064771098"  [ label = "CDG: "] 
  "68719476758" -> "30064771099"  [ label = "CDG: "] 
  "68719476758" -> "30064771096"  [ label = "CDG: "] 
  "68719476758" -> "30064771097"  [ label = "CDG: "] 
  "68719476758" -> "30064771102"  [ label = "CDG: "] 
  "68719476758" -> "30064771100"  [ label = "CDG: "] 
  "68719476758" -> "30064771101"  [ label = "CDG: "] 
}
"""
)
