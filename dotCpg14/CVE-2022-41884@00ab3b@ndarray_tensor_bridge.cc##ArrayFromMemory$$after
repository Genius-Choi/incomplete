[33mval[0m [36mres137[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "ArrayFromMemory" {  
"111669149697" [label = <(METHOD,ArrayFromMemory)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,int dim_size)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,npy_intp* dims)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,void* data)<SUB>1</SUB>> ]
"115964116995" [label = <(PARAM,DataType dtype)<SUB>1</SUB>> ]
"115964116996" [label = <(PARAM,std::function&lt;void()&gt; destructor)<SUB>2</SUB>> ]
"115964116997" [label = <(PARAM,PyObject** result)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
  if (dtype == DT_STRING || dtype == DT_RESOU...,{
  if (dtype == DT_STRING || dtype == DT_RESOU...)<SUB>2</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (dtype == DT_STRING || dtype == DT_RESOURCE))<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.logicalOr,dtype == DT_STRING || dtype == DT_RESOURCE)<SUB>3</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.equals,dtype == DT_STRING)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,dtype,dtype == DT_STRING)<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,DT_STRING,dtype == DT_STRING)<SUB>3</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.equals,dtype == DT_RESOURCE)<SUB>3</SUB>> ]
"68719476738" [label = <(IDENTIFIER,dtype,dtype == DT_RESOURCE)<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,DT_RESOURCE,dtype == DT_RESOURCE)<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,{
    return errors::FailedPrecondition(
      ...,{
    return errors::FailedPrecondition(
      ...)<SUB>3</SUB>> ]
"146028888064" [label = <(RETURN,return errors::FailedPrecondition(
        &quot;Can...,return errors::FailedPrecondition(
        &quot;Can...)<SUB>4</SUB>> ]
"30064771075" [label = <(FailedPrecondition,errors::FailedPrecondition(
        &quot;Cannot con...)<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Cannot convert string or resource Tensors.&quot;,errors::FailedPrecondition(
        &quot;Cannot con...)<SUB>5</SUB>> ]
"94489280512" [label = <(LOCAL,int type_num: int)<SUB>8</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,type_num = -1)<SUB>8</SUB>> ]
"68719476740" [label = <(IDENTIFIER,type_num,type_num = -1)<SUB>8</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.minus,-1)<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,1,-1)<SUB>8</SUB>> ]
"94489280513" [label = <(LOCAL,Status s: Status)<SUB>9</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,s =
      TF_DataType_to_PyArray_TYPE(static_ca...)<SUB>9</SUB>> ]
"68719476741" [label = <(IDENTIFIER,s,s =
      TF_DataType_to_PyArray_TYPE(static_ca...)<SUB>9</SUB>> ]
"30064771079" [label = <(TF_DataType_to_PyArray_TYPE,TF_DataType_to_PyArray_TYPE(static_cast&lt;TF_Data...)<SUB>10</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.cast,static_cast&lt;TF_DataType&gt;(dtype))<SUB>10</SUB>> ]
"184683593728" [label = <(UNKNOWN,TF_DataType,TF_DataType)<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,dtype,static_cast&lt;TF_DataType&gt;(dtype))<SUB>10</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.addressOf,&amp;type_num)<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,type_num,TF_DataType_to_PyArray_TYPE(static_cast&lt;TF_Data...)<SUB>10</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (!s.ok()))<SUB>11</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.logicalNot,!s.ok())<SUB>11</SUB>> ]
"30064771083" [label = <(ok,s.ok())<SUB>11</SUB>> ]
"68719476744" [label = <(IDENTIFIER,s,s.ok())<SUB>11</SUB>> ]
"25769803779" [label = <(BLOCK,{
    return s;
  },{
    return s;
  })<SUB>11</SUB>> ]
"146028888065" [label = <(RETURN,return s;,return s;)<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,s,return s;)<SUB>12</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (dim_size &gt; NPY_MAXDIMS))<SUB>15</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.greaterThan,dim_size &gt; NPY_MAXDIMS)<SUB>15</SUB>> ]
"68719476746" [label = <(IDENTIFIER,dim_size,dim_size &gt; NPY_MAXDIMS)<SUB>15</SUB>> ]
"68719476747" [label = <(IDENTIFIER,NPY_MAXDIMS,dim_size &gt; NPY_MAXDIMS)<SUB>15</SUB>> ]
"25769803780" [label = <(BLOCK,{
    return errors::InvalidArgument(
        &quot;...,{
    return errors::InvalidArgument(
        &quot;...)<SUB>15</SUB>> ]
"146028888066" [label = <(RETURN,return errors::InvalidArgument(
        &quot;Cannot...,return errors::InvalidArgument(
        &quot;Cannot...)<SUB>16</SUB>> ]
"30064771085" [label = <(InvalidArgument,errors::InvalidArgument(
        &quot;Cannot conver...)<SUB>16</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;Cannot convert tensor with &quot;,errors::InvalidArgument(
        &quot;Cannot conver...)<SUB>17</SUB>> ]
"68719476748" [label = <(IDENTIFIER,dim_size,errors::InvalidArgument(
        &quot;Cannot conver...)<SUB>17</SUB>> ]
"90194313219" [label = <(LITERAL,&quot; dimensions to NumPy array. NumPy arrays can h...,errors::InvalidArgument(
        &quot;Cannot conver...)<SUB>18</SUB>> ]
"68719476749" [label = <(IDENTIFIER,NPY_MAXDIMS,errors::InvalidArgument(
        &quot;Cannot conver...)<SUB>19</SUB>> ]
"90194313220" [label = <(LITERAL,&quot; dimensions&quot;,errors::InvalidArgument(
        &quot;Cannot conver...)<SUB>19</SUB>> ]
"94489280514" [label = <(LOCAL,auto* np_array: auto*)<SUB>21</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,* np_array = reinterpret_cast&lt;PyArrayObject*&gt;(
...)<SUB>21</SUB>> ]
"68719476750" [label = <(IDENTIFIER,np_array,* np_array = reinterpret_cast&lt;PyArrayObject*&gt;(
...)<SUB>21</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;PyArrayObject*&gt;(
      PyArray...)<SUB>21</SUB>> ]
"184683593729" [label = <(UNKNOWN,PyArrayObject*,PyArrayObject*)<SUB>21</SUB>> ]
"30064771088" [label = <(PyArray_SimpleNewFromData,PyArray_SimpleNewFromData(dim_size, dims, type_...)<SUB>22</SUB>> ]
"68719476751" [label = <(IDENTIFIER,dim_size,PyArray_SimpleNewFromData(dim_size, dims, type_...)<SUB>22</SUB>> ]
"68719476752" [label = <(IDENTIFIER,dims,PyArray_SimpleNewFromData(dim_size, dims, type_...)<SUB>22</SUB>> ]
"68719476753" [label = <(IDENTIFIER,type_num,PyArray_SimpleNewFromData(dim_size, dims, type_...)<SUB>22</SUB>> ]
"68719476754" [label = <(IDENTIFIER,data,PyArray_SimpleNewFromData(dim_size, dims, type_...)<SUB>22</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (np_array == nullptr))<SUB>23</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.equals,np_array == nullptr)<SUB>23</SUB>> ]
"68719476755" [label = <(IDENTIFIER,np_array,np_array == nullptr)<SUB>23</SUB>> ]
"90194313221" [label = <(LITERAL,nullptr,np_array == nullptr)<SUB>23</SUB>> ]
"25769803781" [label = <(BLOCK,{
    string shape_str = absl::StrJoin(
       ...,{
    string shape_str = absl::StrJoin(
       ...)<SUB>23</SUB>> ]
"94489280515" [label = <(LOCAL,string shape_str: string)<SUB>24</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,shape_str = absl::StrJoin(
        absl::Span&lt;n...)<SUB>24</SUB>> ]
"68719476756" [label = <(IDENTIFIER,shape_str,shape_str = absl::StrJoin(
        absl::Span&lt;n...)<SUB>24</SUB>> ]
"30064771091" [label = <(StrJoin,absl::StrJoin(
        absl::Span&lt;npy_intp&gt;{dim...)<SUB>24</SUB>> ]
"30064771092" [label = <(absl::Span&lt;npy_intp&gt;,absl::Span&lt;npy_intp&gt;{dims, static_cast&lt;size_t&gt;(...)<SUB>25</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.arrayInitializer,{dims, static_cast&lt;size_t&gt;(dim_size)})<SUB>25</SUB>> ]
"68719476757" [label = <(IDENTIFIER,dims,{dims, static_cast&lt;size_t&gt;(dim_size)})<SUB>25</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(dim_size))<SUB>25</SUB>> ]
"184683593730" [label = <(UNKNOWN,size_t,size_t)<SUB>25</SUB>> ]
"68719476758" [label = <(IDENTIFIER,dim_size,static_cast&lt;size_t&gt;(dim_size))<SUB>25</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;, &quot;,absl::StrJoin(
        absl::Span&lt;npy_intp&gt;{dim...)<SUB>25</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (PyErr_Occurred()))<SUB>26</SUB>> ]
"30064771095" [label = <(PyErr_Occurred,PyErr_Occurred())<SUB>26</SUB>> ]
"25769803782" [label = <(BLOCK,{
      string exception_str = PyExceptionFetch...,{
      string exception_str = PyExceptionFetch...)<SUB>26</SUB>> ]
"94489280516" [label = <(LOCAL,string exception_str: string)<SUB>27</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,exception_str = PyExceptionFetch())<SUB>27</SUB>> ]
"68719476759" [label = <(IDENTIFIER,exception_str,exception_str = PyExceptionFetch())<SUB>27</SUB>> ]
"30064771097" [label = <(PyExceptionFetch,PyExceptionFetch())<SUB>27</SUB>> ]
"30064771098" [label = <(PyErr_Clear,PyErr_Clear())<SUB>28</SUB>> ]
"146028888067" [label = <(RETURN,return errors::InvalidArgument(
          &quot;Fail...,return errors::InvalidArgument(
          &quot;Fail...)<SUB>29</SUB>> ]
"30064771099" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;Failed to c...)<SUB>29</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;Failed to create numpy array from tensor of sh...,errors::InvalidArgument(
          &quot;Failed to c...)<SUB>30</SUB>> ]
"68719476760" [label = <(IDENTIFIER,shape_str,errors::InvalidArgument(
          &quot;Failed to c...)<SUB>30</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;]. Numpy error: &quot;,errors::InvalidArgument(
          &quot;Failed to c...)<SUB>31</SUB>> ]
"68719476761" [label = <(IDENTIFIER,exception_str,errors::InvalidArgument(
          &quot;Failed to c...)<SUB>31</SUB>> ]
"146028888068" [label = <(RETURN,return errors::Internal(
        &quot;Failed to cre...,return errors::Internal(
        &quot;Failed to cre...)<SUB>33</SUB>> ]
"30064771100" [label = <(Internal,errors::Internal(
        &quot;Failed to create num...)<SUB>33</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;Failed to create numpy array from tensor of sh...,errors::Internal(
        &quot;Failed to create num...)<SUB>34</SUB>> ]
"68719476762" [label = <(IDENTIFIER,shape_str,errors::Internal(
        &quot;Failed to create num...)<SUB>34</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;]&quot;,errors::Internal(
        &quot;Failed to create num...)<SUB>34</SUB>> ]
"30064771101" [label = <(PyArray_CLEARFLAGS,PyArray_CLEARFLAGS(np_array, NPY_ARRAY_OWNDATA))<SUB>37</SUB>> ]
"68719476763" [label = <(IDENTIFIER,np_array,PyArray_CLEARFLAGS(np_array, NPY_ARRAY_OWNDATA))<SUB>37</SUB>> ]
"68719476764" [label = <(IDENTIFIER,NPY_ARRAY_OWNDATA,PyArray_CLEARFLAGS(np_array, NPY_ARRAY_OWNDATA))<SUB>37</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (PyType_Ready(&amp;TensorReleaserType) == -1))<SUB>38</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.equals,PyType_Ready(&amp;TensorReleaserType) == -1)<SUB>38</SUB>> ]
"30064771103" [label = <(PyType_Ready,PyType_Ready(&amp;TensorReleaserType))<SUB>38</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.addressOf,&amp;TensorReleaserType)<SUB>38</SUB>> ]
"68719476765" [label = <(IDENTIFIER,TensorReleaserType,PyType_Ready(&amp;TensorReleaserType))<SUB>38</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.minus,-1)<SUB>38</SUB>> ]
"90194313227" [label = <(LITERAL,1,-1)<SUB>38</SUB>> ]
"25769803783" [label = <(BLOCK,{
    return errors::Unknown(&quot;Python type initi...,{
    return errors::Unknown(&quot;Python type initi...)<SUB>38</SUB>> ]
"146028888069" [label = <(RETURN,return errors::Unknown(&quot;Python type initializat...,return errors::Unknown(&quot;Python type initializat...)<SUB>39</SUB>> ]
"30064771106" [label = <(Unknown,errors::Unknown(&quot;Python type initialization fai...)<SUB>39</SUB>> ]
"90194313228" [label = <(LITERAL,&quot;Python type initialization failed.&quot;,errors::Unknown(&quot;Python type initialization fai...)<SUB>39</SUB>> ]
"94489280517" [label = <(LOCAL,auto* releaser: auto*)<SUB>41</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.assignment,* releaser = reinterpret_cast&lt;TensorReleaser*&gt;(...)<SUB>41</SUB>> ]
"68719476766" [label = <(IDENTIFIER,releaser,* releaser = reinterpret_cast&lt;TensorReleaser*&gt;(...)<SUB>41</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;TensorReleaser*&gt;(
      Tensor...)<SUB>41</SUB>> ]
"184683593731" [label = <(UNKNOWN,TensorReleaser*,TensorReleaser*)<SUB>41</SUB>> ]
"30064771109" [label = <(tp_alloc,TensorReleaserType.tp_alloc(&amp;TensorReleaserType...)<SUB>42</SUB>> ]
"68719476767" [label = <(IDENTIFIER,TensorReleaserType,TensorReleaserType.tp_alloc(&amp;TensorReleaserType...)<SUB>42</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.addressOf,&amp;TensorReleaserType)<SUB>42</SUB>> ]
"68719476768" [label = <(IDENTIFIER,TensorReleaserType,TensorReleaserType.tp_alloc(&amp;TensorReleaserType...)<SUB>42</SUB>> ]
"90194313229" [label = <(LITERAL,0,TensorReleaserType.tp_alloc(&amp;TensorReleaserType...)<SUB>42</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.assignment,releaser-&gt;destructor = new std::function&lt;void()...)<SUB>43</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.indirectFieldAccess,releaser-&gt;destructor)<SUB>43</SUB>> ]
"68719476769" [label = <(IDENTIFIER,releaser,releaser-&gt;destructor = new std::function&lt;void()...)<SUB>43</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,destructor,destructor)<SUB>43</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.new,new std::function&lt;void()&gt;(std::move(destructor)))<SUB>43</SUB>> ]
"68719476770" [label = <(IDENTIFIER,std::function&lt;void()&gt;,new std::function&lt;void()&gt;(std::move(destructor)))<SUB>43</SUB>> ]
"30064771114" [label = <(move,std::move(destructor))<SUB>43</SUB>> ]
"68719476771" [label = <(IDENTIFIER,destructor,std::move(destructor))<SUB>43</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (PyArray_SetBaseObject(np_array, reinterpret_cast&lt;PyObject*&gt;(releaser)) ==
      -1))<SUB>44</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.equals,PyArray_SetBaseObject(np_array, reinterpret_cas...)<SUB>44</SUB>> ]
"30064771116" [label = <(PyArray_SetBaseObject,PyArray_SetBaseObject(np_array, reinterpret_cas...)<SUB>44</SUB>> ]
"68719476772" [label = <(IDENTIFIER,np_array,PyArray_SetBaseObject(np_array, reinterpret_cas...)<SUB>44</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;PyObject*&gt;(releaser))<SUB>44</SUB>> ]
"184683593732" [label = <(UNKNOWN,PyObject*,PyObject*)<SUB>44</SUB>> ]
"68719476773" [label = <(IDENTIFIER,releaser,reinterpret_cast&lt;PyObject*&gt;(releaser))<SUB>44</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.minus,-1)<SUB>45</SUB>> ]
"90194313230" [label = <(LITERAL,1,-1)<SUB>45</SUB>> ]
"25769803784" [label = <(BLOCK,{
    Py_DECREF(releaser);
    return errors::U...,{
    Py_DECREF(releaser);
    return errors::U...)<SUB>45</SUB>> ]
"30064771119" [label = <(Py_DECREF,Py_DECREF(releaser))<SUB>46</SUB>> ]
"68719476774" [label = <(IDENTIFIER,releaser,Py_DECREF(releaser))<SUB>46</SUB>> ]
"146028888070" [label = <(RETURN,return errors::Unknown(&quot;Python array refused to...,return errors::Unknown(&quot;Python array refused to...)<SUB>47</SUB>> ]
"30064771120" [label = <(Unknown,errors::Unknown(&quot;Python array refused to use me...)<SUB>47</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;Python array refused to use memory.&quot;,errors::Unknown(&quot;Python array refused to use me...)<SUB>47</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.assignment,*result = reinterpret_cast&lt;PyObject*&gt;(np_array))<SUB>49</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.indirection,*result)<SUB>49</SUB>> ]
"68719476775" [label = <(IDENTIFIER,result,*result = reinterpret_cast&lt;PyObject*&gt;(np_array))<SUB>49</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;PyObject*&gt;(np_array))<SUB>49</SUB>> ]
"184683593733" [label = <(UNKNOWN,PyObject*,PyObject*)<SUB>49</SUB>> ]
"68719476776" [label = <(IDENTIFIER,np_array,reinterpret_cast&lt;PyObject*&gt;(np_array))<SUB>49</SUB>> ]
"146028888071" [label = <(RETURN,return OkStatus();,return OkStatus();)<SUB>50</SUB>> ]
"30064771124" [label = <(OkStatus,OkStatus())<SUB>50</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "30064771101"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771107"  [ label = "AST: "] 
  "25769803777" -> "30064771111"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "25769803777" -> "30064771121"  [ label = "AST: "] 
  "25769803777" -> "146028888071"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "90194313217"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "184683593728"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "47244640257" -> "30064771082"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476744"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "68719476745"  [ label = "AST: "] 
  "47244640258" -> "30064771084"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "30064771084" -> "68719476747"  [ label = "AST: "] 
  "25769803780" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "90194313218"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "90194313219"  [ label = "AST: "] 
  "30064771085" -> "68719476749"  [ label = "AST: "] 
  "30064771085" -> "90194313220"  [ label = "AST: "] 
  "30064771086" -> "68719476750"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "184683593729"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771088" -> "68719476752"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "30064771088" -> "68719476754"  [ label = "AST: "] 
  "47244640259" -> "30064771089"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771089" -> "68719476755"  [ label = "AST: "] 
  "30064771089" -> "90194313221"  [ label = "AST: "] 
  "25769803781" -> "94489280515"  [ label = "AST: "] 
  "25769803781" -> "30064771090"  [ label = "AST: "] 
  "25769803781" -> "47244640260"  [ label = "AST: "] 
  "25769803781" -> "146028888068"  [ label = "AST: "] 
  "30064771090" -> "68719476756"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "90194313222"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476757"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "184683593730"  [ label = "AST: "] 
  "30064771094" -> "68719476758"  [ label = "AST: "] 
  "47244640260" -> "30064771095"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "94489280516"  [ label = "AST: "] 
  "25769803782" -> "30064771096"  [ label = "AST: "] 
  "25769803782" -> "30064771098"  [ label = "AST: "] 
  "25769803782" -> "146028888067"  [ label = "AST: "] 
  "30064771096" -> "68719476759"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "146028888067" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "90194313223"  [ label = "AST: "] 
  "30064771099" -> "68719476760"  [ label = "AST: "] 
  "30064771099" -> "90194313224"  [ label = "AST: "] 
  "30064771099" -> "68719476761"  [ label = "AST: "] 
  "146028888068" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "90194313225"  [ label = "AST: "] 
  "30064771100" -> "68719476762"  [ label = "AST: "] 
  "30064771100" -> "90194313226"  [ label = "AST: "] 
  "30064771101" -> "68719476763"  [ label = "AST: "] 
  "30064771101" -> "68719476764"  [ label = "AST: "] 
  "47244640261" -> "30064771102"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "30064771105"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476765"  [ label = "AST: "] 
  "30064771105" -> "90194313227"  [ label = "AST: "] 
  "25769803783" -> "146028888069"  [ label = "AST: "] 
  "146028888069" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "90194313228"  [ label = "AST: "] 
  "30064771107" -> "68719476766"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "184683593731"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "68719476767"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771109" -> "90194313229"  [ label = "AST: "] 
  "30064771110" -> "68719476768"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "30064771113"  [ label = "AST: "] 
  "30064771112" -> "68719476769"  [ label = "AST: "] 
  "30064771112" -> "55834574848"  [ label = "AST: "] 
  "30064771113" -> "68719476770"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771114" -> "68719476771"  [ label = "AST: "] 
  "47244640262" -> "30064771115"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "30064771115" -> "30064771116"  [ label = "AST: "] 
  "30064771115" -> "30064771118"  [ label = "AST: "] 
  "30064771116" -> "68719476772"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771117" -> "184683593732"  [ label = "AST: "] 
  "30064771117" -> "68719476773"  [ label = "AST: "] 
  "30064771118" -> "90194313230"  [ label = "AST: "] 
  "25769803784" -> "30064771119"  [ label = "AST: "] 
  "25769803784" -> "146028888070"  [ label = "AST: "] 
  "30064771119" -> "68719476774"  [ label = "AST: "] 
  "146028888070" -> "30064771120"  [ label = "AST: "] 
  "30064771120" -> "90194313231"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "30064771123"  [ label = "AST: "] 
  "30064771122" -> "68719476775"  [ label = "AST: "] 
  "30064771123" -> "184683593733"  [ label = "AST: "] 
  "30064771123" -> "68719476776"  [ label = "AST: "] 
  "146028888071" -> "30064771124"  [ label = "AST: "] 
  "30064771076" -> "184683593728"  [ label = "CFG: "] 
  "30064771078" -> "30064771083"  [ label = "CFG: "] 
  "30064771086" -> "30064771089"  [ label = "CFG: "] 
  "30064771101" -> "30064771104"  [ label = "CFG: "] 
  "30064771107" -> "55834574848"  [ label = "CFG: "] 
  "30064771111" -> "184683593732"  [ label = "CFG: "] 
  "30064771121" -> "30064771124"  [ label = "CFG: "] 
  "146028888071" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771072" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771082" -> "146028888065"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771084" -> "184683593729"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "184683593730"  [ label = "CFG: "] 
  "30064771089" -> "30064771101"  [ label = "CFG: "] 
  "30064771102" -> "30064771106"  [ label = "CFG: "] 
  "30064771102" -> "184683593731"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "30064771112" -> "30064771114"  [ label = "CFG: "] 
  "30064771113" -> "30064771111"  [ label = "CFG: "] 
  "30064771115" -> "30064771119"  [ label = "CFG: "] 
  "30064771115" -> "30064771122"  [ label = "CFG: "] 
  "30064771122" -> "184683593733"  [ label = "CFG: "] 
  "30064771123" -> "30064771121"  [ label = "CFG: "] 
  "30064771124" -> "146028888071"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "30064771079"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "184683593729" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771095"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771103" -> "30064771105"  [ label = "CFG: "] 
  "30064771105" -> "30064771102"  [ label = "CFG: "] 
  "146028888069" -> "128849018880"  [ label = "CFG: "] 
  "184683593731" -> "30064771110"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "55834574848" -> "30064771112"  [ label = "CFG: "] 
  "30064771114" -> "30064771113"  [ label = "CFG: "] 
  "30064771116" -> "30064771118"  [ label = "CFG: "] 
  "30064771118" -> "30064771115"  [ label = "CFG: "] 
  "30064771119" -> "30064771120"  [ label = "CFG: "] 
  "146028888070" -> "128849018880"  [ label = "CFG: "] 
  "184683593733" -> "30064771123"  [ label = "CFG: "] 
  "30064771075" -> "146028888064"  [ label = "CFG: "] 
  "184683593728" -> "30064771080"  [ label = "CFG: "] 
  "30064771085" -> "146028888066"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771095" -> "30064771097"  [ label = "CFG: "] 
  "30064771095" -> "30064771100"  [ label = "CFG: "] 
  "30064771100" -> "146028888068"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771106" -> "146028888069"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771117" -> "30064771116"  [ label = "CFG: "] 
  "30064771120" -> "146028888070"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771096" -> "30064771098"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "184683593732" -> "30064771117"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771099" -> "146028888067"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "184683593730" -> "30064771094"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888071" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888069" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888070" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: dim_size"] 
  "115964116993" -> "128849018880"  [ label = "DDG: dims"] 
  "115964116994" -> "128849018880"  [ label = "DDG: data"] 
  "115964116996" -> "128849018880"  [ label = "DDG: destructor"] 
  "115964116997" -> "128849018880"  [ label = "DDG: result"] 
  "30064771073" -> "128849018880"  [ label = "DDG: dtype"] 
  "30064771072" -> "128849018880"  [ label = "DDG: dtype == DT_STRING"] 
  "30064771074" -> "128849018880"  [ label = "DDG: dtype"] 
  "30064771072" -> "128849018880"  [ label = "DDG: dtype == DT_RESOURCE"] 
  "30064771072" -> "128849018880"  [ label = "DDG: dtype == DT_STRING || dtype == DT_RESOURCE"] 
  "30064771075" -> "128849018880"  [ label = "DDG: errors::FailedPrecondition(
        &quot;Cannot convert string or resource Tensors.&quot;)"] 
  "30064771113" -> "128849018880"  [ label = "DDG: std::function&lt;void()&gt;"] 
  "30064771101" -> "128849018880"  [ label = "DDG: NPY_ARRAY_OWNDATA"] 
  "30064771073" -> "128849018880"  [ label = "DDG: DT_STRING"] 
  "30064771074" -> "128849018880"  [ label = "DDG: DT_RESOURCE"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: 1"] 
  "30064771079" -> "30064771078"  [ label = "DDG: static_cast&lt;TF_DataType&gt;(dtype)"] 
  "30064771079" -> "30064771078"  [ label = "DDG: &amp;type_num"] 
  "30064771088" -> "30064771086"  [ label = "DDG: dim_size"] 
  "30064771088" -> "30064771086"  [ label = "DDG: dims"] 
  "30064771088" -> "30064771086"  [ label = "DDG: type_num"] 
  "30064771088" -> "30064771086"  [ label = "DDG: data"] 
  "30064771109" -> "30064771107"  [ label = "DDG: TensorReleaserType"] 
  "30064771109" -> "30064771107"  [ label = "DDG: &amp;TensorReleaserType"] 
  "30064771109" -> "30064771107"  [ label = "DDG: 0"] 
  "30064771113" -> "30064771111"  [ label = "DDG: std::function&lt;void()&gt;"] 
  "30064771113" -> "30064771111"  [ label = "DDG: std::move(destructor)"] 
  "30064771116" -> "30064771121"  [ label = "DDG: np_array"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771124" -> "146028888071"  [ label = "DDG: OkStatus()"] 
  "30064771089" -> "30064771101"  [ label = "DDG: np_array"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: dtype"] 
  "30064771073" -> "30064771072"  [ label = "DDG: DT_STRING"] 
  "30064771074" -> "30064771072"  [ label = "DDG: dtype"] 
  "30064771074" -> "30064771072"  [ label = "DDG: DT_RESOURCE"] 
  "30064771075" -> "146028888064"  [ label = "DDG: errors::FailedPrecondition(
        &quot;Cannot convert string or resource Tensors.&quot;)"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771073" -> "30064771079"  [ label = "DDG: dtype"] 
  "30064771074" -> "30064771079"  [ label = "DDG: dtype"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771076" -> "30064771079"  [ label = "DDG: type_num"] 
  "30064771083" -> "30064771082"  [ label = "DDG: s"] 
  "68719476745" -> "146028888065"  [ label = "DDG: s"] 
  "115964116992" -> "30064771084"  [ label = "DDG: dim_size"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771085" -> "146028888066"  [ label = "DDG: errors::InvalidArgument(
        &quot;Cannot convert tensor with &quot;, dim_size,
        &quot; dimensions to NumPy array. NumPy arrays can have at most &quot;,
        NPY_MAXDIMS, &quot; dimensions&quot;)"] 
  "30064771088" -> "30064771087"  [ label = "DDG: dim_size"] 
  "30064771088" -> "30064771087"  [ label = "DDG: dims"] 
  "30064771088" -> "30064771087"  [ label = "DDG: type_num"] 
  "30064771088" -> "30064771087"  [ label = "DDG: data"] 
  "30064771086" -> "30064771089"  [ label = "DDG: np_array"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771091" -> "30064771090"  [ label = "DDG: absl::Span&lt;npy_intp&gt;{dims, static_cast&lt;size_t&gt;(dim_size)}"] 
  "30064771091" -> "30064771090"  [ label = "DDG: &quot;, &quot;"] 
  "30064771100" -> "146028888068"  [ label = "DDG: errors::Internal(
        &quot;Failed to create numpy array from tensor of shape [&quot;, shape_str, &quot;]&quot;)"] 
  "30064771103" -> "30064771102"  [ label = "DDG: &amp;TensorReleaserType"] 
  "30064771105" -> "30064771102"  [ label = "DDG: 1"] 
  "30064771106" -> "146028888069"  [ label = "DDG: errors::Unknown(&quot;Python type initialization failed.&quot;)"] 
  "30064771109" -> "30064771108"  [ label = "DDG: TensorReleaserType"] 
  "30064771109" -> "30064771108"  [ label = "DDG: &amp;TensorReleaserType"] 
  "30064771109" -> "30064771108"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771114" -> "30064771113"  [ label = "DDG: destructor"] 
  "30064771116" -> "30064771115"  [ label = "DDG: np_array"] 
  "30064771116" -> "30064771115"  [ label = "DDG: reinterpret_cast&lt;PyObject*&gt;(releaser)"] 
  "30064771118" -> "30064771115"  [ label = "DDG: 1"] 
  "30064771120" -> "146028888070"  [ label = "DDG: errors::Unknown(&quot;Python array refused to use memory.&quot;)"] 
  "30064771116" -> "30064771123"  [ label = "DDG: np_array"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "115964116995" -> "30064771073"  [ label = "DDG: dtype"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771073" -> "30064771074"  [ label = "DDG: dtype"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771073" -> "30064771080"  [ label = "DDG: dtype"] 
  "30064771074" -> "30064771080"  [ label = "DDG: dtype"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771078" -> "30064771083"  [ label = "DDG: s"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771083" -> "68719476745"  [ label = "DDG: s"] 
  "111669149697" -> "68719476745"  [ label = "DDG: "] 
  "30064771084" -> "30064771088"  [ label = "DDG: dim_size"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "115964116993" -> "30064771088"  [ label = "DDG: dims"] 
  "30064771076" -> "30064771088"  [ label = "DDG: type_num"] 
  "30064771079" -> "30064771088"  [ label = "DDG: &amp;type_num"] 
  "115964116994" -> "30064771088"  [ label = "DDG: data"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771103" -> "30064771109"  [ label = "DDG: &amp;TensorReleaserType"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "115964116996" -> "30064771114"  [ label = "DDG: destructor"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771101" -> "30064771116"  [ label = "DDG: np_array"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771107" -> "30064771116"  [ label = "DDG: releaser"] 
  "30064771111" -> "30064771116"  [ label = "DDG: releaser-&gt;destructor"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "30064771111" -> "30064771119"  [ label = "DDG: releaser-&gt;destructor"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771107" -> "30064771119"  [ label = "DDG: releaser"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771084" -> "30064771085"  [ label = "DDG: dim_size"] 
  "30064771084" -> "30064771085"  [ label = "DDG: NPY_MAXDIMS"] 
  "30064771092" -> "30064771091"  [ label = "DDG: {dims, static_cast&lt;size_t&gt;(dim_size)}"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771099" -> "146028888067"  [ label = "DDG: errors::InvalidArgument(
          &quot;Failed to create numpy array from tensor of shape [&quot;, shape_str,
          &quot;]. Numpy error: &quot;, exception_str)"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771090" -> "30064771100"  [ label = "DDG: shape_str"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771107" -> "30064771117"  [ label = "DDG: releaser"] 
  "30064771111" -> "30064771117"  [ label = "DDG: releaser-&gt;destructor"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: dims"] 
  "30064771093" -> "30064771092"  [ label = "DDG: static_cast&lt;size_t&gt;(dim_size)"] 
  "30064771088" -> "30064771093"  [ label = "DDG: dims"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771088" -> "30064771093"  [ label = "DDG: dim_size"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771090" -> "30064771099"  [ label = "DDG: shape_str"] 
  "30064771096" -> "30064771099"  [ label = "DDG: exception_str"] 
  "30064771088" -> "30064771094"  [ label = "DDG: dim_size"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771072" -> "184683593728"  [ label = "CDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
  "30064771072" -> "30064771081"  [ label = "CDG: "] 
  "30064771072" -> "30064771080"  [ label = "CDG: "] 
  "30064771072" -> "30064771083"  [ label = "CDG: "] 
  "30064771072" -> "30064771082"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771072" -> "30064771079"  [ label = "CDG: "] 
  "30064771072" -> "30064771078"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771082" -> "30064771084"  [ label = "CDG: "] 
  "30064771082" -> "146028888065"  [ label = "CDG: "] 
  "30064771084" -> "184683593729"  [ label = "CDG: "] 
  "30064771084" -> "30064771089"  [ label = "CDG: "] 
  "30064771084" -> "30064771088"  [ label = "CDG: "] 
  "30064771084" -> "30064771085"  [ label = "CDG: "] 
  "30064771084" -> "30064771087"  [ label = "CDG: "] 
  "30064771084" -> "30064771086"  [ label = "CDG: "] 
  "30064771084" -> "146028888066"  [ label = "CDG: "] 
  "30064771089" -> "184683593730"  [ label = "CDG: "] 
  "30064771089" -> "30064771093"  [ label = "CDG: "] 
  "30064771089" -> "30064771092"  [ label = "CDG: "] 
  "30064771089" -> "30064771095"  [ label = "CDG: "] 
  "30064771089" -> "30064771094"  [ label = "CDG: "] 
  "30064771089" -> "30064771091"  [ label = "CDG: "] 
  "30064771089" -> "30064771090"  [ label = "CDG: "] 
  "30064771089" -> "30064771105"  [ label = "CDG: "] 
  "30064771089" -> "30064771104"  [ label = "CDG: "] 
  "30064771089" -> "30064771101"  [ label = "CDG: "] 
  "30064771089" -> "30064771103"  [ label = "CDG: "] 
  "30064771089" -> "30064771102"  [ label = "CDG: "] 
  "30064771102" -> "55834574848"  [ label = "CDG: "] 
  "30064771102" -> "184683593732"  [ label = "CDG: "] 
  "30064771102" -> "184683593731"  [ label = "CDG: "] 
  "30064771102" -> "30064771113"  [ label = "CDG: "] 
  "30064771102" -> "30064771112"  [ label = "CDG: "] 
  "30064771102" -> "30064771115"  [ label = "CDG: "] 
  "30064771102" -> "30064771114"  [ label = "CDG: "] 
  "30064771102" -> "30064771109"  [ label = "CDG: "] 
  "30064771102" -> "30064771108"  [ label = "CDG: "] 
  "30064771102" -> "30064771111"  [ label = "CDG: "] 
  "30064771102" -> "30064771110"  [ label = "CDG: "] 
  "30064771102" -> "30064771107"  [ label = "CDG: "] 
  "30064771102" -> "30064771106"  [ label = "CDG: "] 
  "30064771102" -> "30064771117"  [ label = "CDG: "] 
  "30064771102" -> "30064771116"  [ label = "CDG: "] 
  "30064771102" -> "30064771118"  [ label = "CDG: "] 
  "30064771102" -> "146028888069"  [ label = "CDG: "] 
  "30064771115" -> "146028888071"  [ label = "CDG: "] 
  "30064771115" -> "184683593733"  [ label = "CDG: "] 
  "30064771115" -> "30064771124"  [ label = "CDG: "] 
  "30064771115" -> "30064771121"  [ label = "CDG: "] 
  "30064771115" -> "30064771120"  [ label = "CDG: "] 
  "30064771115" -> "30064771123"  [ label = "CDG: "] 
  "30064771115" -> "30064771122"  [ label = "CDG: "] 
  "30064771115" -> "30064771119"  [ label = "CDG: "] 
  "30064771115" -> "146028888070"  [ label = "CDG: "] 
  "30064771073" -> "30064771074"  [ label = "CDG: "] 
  "30064771095" -> "30064771097"  [ label = "CDG: "] 
  "30064771095" -> "30064771096"  [ label = "CDG: "] 
  "30064771095" -> "30064771099"  [ label = "CDG: "] 
  "30064771095" -> "30064771098"  [ label = "CDG: "] 
  "30064771095" -> "30064771100"  [ label = "CDG: "] 
  "30064771095" -> "146028888068"  [ label = "CDG: "] 
  "30064771095" -> "146028888067"  [ label = "CDG: "] 
}
"""
)
