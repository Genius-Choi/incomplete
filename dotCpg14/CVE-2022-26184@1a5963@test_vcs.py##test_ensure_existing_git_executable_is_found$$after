[33mval[0m [36mres1757[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_ensure_existing_git_executable_is_found" {  
"111669149697" [label = <(METHOD,test_ensure_existing_git_executable_is_found)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,mock = tmp0 = mocker.patch
tmp0.object(subproce...)<SUB>2</SUB>> ]
"68719476742" [label = <(IDENTIFIER,mock,mock = tmp0 = mocker.patch
tmp0.object(subproce...)<SUB>2</SUB>> ]
"25769803778" [label = <(BLOCK,tmp0 = mocker.patch
tmp0.object(subprocess, &quot;ch...,tmp0 = mocker.patch
tmp0.object(subprocess, &quot;ch...)<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,tmp0 = mocker.patch)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,tmp0,tmp0 = mocker.patch)<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.fieldAccess,mocker.patch)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,mocker,tmp0 = mocker.patch)<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,patch,patch)<SUB>2</SUB>> ]
"30064771075" [label = <(object,tmp0.object(subprocess, &quot;check_output&quot;, return_...)<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.fieldAccess,tmp0.object)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,tmp0,tmp0.object(subprocess, &quot;check_output&quot;, return_...)<SUB>2</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,object,object)<SUB>2</SUB>> ]
"68719476741" [label = <(IDENTIFIER,tmp0,tmp0.object(subprocess, &quot;check_output&quot;, return_...)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,subprocess,tmp0.object(subprocess, &quot;check_output&quot;, return_...)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;check_output&quot;,tmp0.object(subprocess, &quot;check_output&quot;, return_...)<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,b&quot;&quot;,tmp0.object(subprocess, &quot;check_output&quot;, return_...)<SUB>2</SUB>> ]
"25769803779" [label = <(BLOCK,tmp1 = Git()
tmp1.run(&quot;config&quot;),tmp1 = Git()
tmp1.run(&quot;config&quot;))<SUB>4</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,tmp1 = Git())<SUB>4</SUB>> ]
"68719476744" [label = <(IDENTIFIER,tmp1,tmp1 = Git())<SUB>4</SUB>> ]
"30064771077" [label = <(Git,Git())<SUB>4</SUB>> ]
"68719476743" [label = <(IDENTIFIER,Git,Git())<SUB>4</SUB>> ]
"30064771080" [label = <(run,tmp1.run(&quot;config&quot;))<SUB>4</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,tmp1.run)<SUB>4</SUB>> ]
"68719476745" [label = <(IDENTIFIER,tmp1,tmp1.run(&quot;config&quot;))<SUB>4</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,run,run)<SUB>4</SUB>> ]
"68719476746" [label = <(IDENTIFIER,tmp1,tmp1.run(&quot;config&quot;))<SUB>4</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;config&quot;,tmp1.run(&quot;config&quot;))<SUB>4</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assignment,cmd = Path(mock.call_args_list[-1][0][0][0]))<SUB>6</SUB>> ]
"68719476749" [label = <(IDENTIFIER,cmd,cmd = Path(mock.call_args_list[-1][0][0][0]))<SUB>6</SUB>> ]
"30064771087" [label = <(Path,Path(mock.call_args_list[-1][0][0][0]))<SUB>6</SUB>> ]
"68719476748" [label = <(IDENTIFIER,Path,Path(mock.call_args_list[-1][0][0][0]))<SUB>6</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indexAccess,mock.call_args_list[-1][0][0][0])<SUB>6</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.indexAccess,mock.call_args_list[-1][0][0])<SUB>6</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.indexAccess,mock.call_args_list[-1][0])<SUB>6</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.indexAccess,mock.call_args_list[-1])<SUB>6</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,mock.call_args_list)<SUB>6</SUB>> ]
"68719476747" [label = <(IDENTIFIER,mock,Path(mock.call_args_list[-1][0][0][0]))<SUB>6</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,call_args_list,call_args_list)<SUB>6</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.minus,-1)<SUB>6</SUB>> ]
"90194313219" [label = <(LITERAL,1,-1)<SUB>6</SUB>> ]
"90194313220" [label = <(LITERAL,0,Path(mock.call_args_list[-1][0][0][0]))<SUB>6</SUB>> ]
"90194313221" [label = <(LITERAL,0,Path(mock.call_args_list[-1][0][0][0]))<SUB>6</SUB>> ]
"90194313222" [label = <(LITERAL,0,Path(mock.call_args_list[-1][0][0][0]))<SUB>6</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assert,assert cmd.is_absolute())<SUB>8</SUB>> ]
"30064771090" [label = <(is_absolute,cmd.is_absolute())<SUB>8</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.fieldAccess,cmd.is_absolute)<SUB>8</SUB>> ]
"68719476750" [label = <(IDENTIFIER,cmd,cmd.is_absolute())<SUB>8</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,is_absolute,is_absolute)<SUB>8</SUB>> ]
"68719476751" [label = <(IDENTIFIER,cmd,cmd.is_absolute())<SUB>8</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assert,assert cmd.name == &quot;git.exe&quot;)<SUB>9</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.equals,cmd.name == &quot;git.exe&quot;)<SUB>9</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.fieldAccess,cmd.name)<SUB>9</SUB>> ]
"68719476752" [label = <(IDENTIFIER,cmd,cmd.name == &quot;git.exe&quot;)<SUB>9</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,name,name)<SUB>9</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;git.exe&quot;,cmd.name == &quot;git.exe&quot;)<SUB>9</SUB>> ]
"94489280513" [label = <(LOCAL,subprocess: ANY)<SUB>2</SUB>> ]
"94489280515" [label = <(LOCAL,tmp0: mocker.patch.&lt;returnValue&gt;.&lt;member&gt;(patch))<SUB>2</SUB>> ]
"94489280516" [label = <(LOCAL,mock: mocker.patch.&lt;returnValue&gt;.&lt;member&gt;(patch).object)<SUB>2</SUB>> ]
"94489280517" [label = <(LOCAL,Git: ANY)<SUB>4</SUB>> ]
"94489280519" [label = <(LOCAL,tmp1: Git.&lt;returnValue&gt;)<SUB>4</SUB>> ]
"94489280520" [label = <(LOCAL,Path: ANY)<SUB>6</SUB>> ]
"94489280522" [label = <(LOCAL,cmd: Path.&lt;returnValue&gt;)<SUB>6</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,mocker)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "25769803779"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771088"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771094"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771076" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "30064771073"  [ label = "AST: "] 
  "25769803778" -> "30064771075"  [ label = "AST: "] 
  "30064771073" -> "68719476739"  [ label = "AST: "] 
  "30064771073" -> "30064771072"  [ label = "AST: "] 
  "30064771072" -> "68719476738"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "AST: "] 
  "30064771075" -> "30064771074"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "30064771075" -> "68719476737"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "30064771074" -> "55834574849"  [ label = "AST: "] 
  "25769803779" -> "30064771078"  [ label = "AST: "] 
  "25769803779" -> "30064771080"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "30064771080" -> "90194313218"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771079" -> "55834574850"  [ label = "AST: "] 
  "30064771088" -> "68719476749"  [ label = "AST: "] 
  "30064771088" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "90194313222"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771085" -> "90194313221"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771084" -> "90194313220"  [ label = "AST: "] 
  "30064771083" -> "30064771081"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "30064771081" -> "55834574851"  [ label = "AST: "] 
  "30064771082" -> "90194313219"  [ label = "AST: "] 
  "30064771091" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771090" -> "68719476751"  [ label = "AST: "] 
  "30064771089" -> "68719476750"  [ label = "AST: "] 
  "30064771089" -> "55834574852"  [ label = "AST: "] 
  "30064771094" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "30064771092"  [ label = "AST: "] 
  "30064771093" -> "90194313223"  [ label = "AST: "] 
  "30064771092" -> "68719476752"  [ label = "AST: "] 
  "30064771092" -> "55834574853"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771088" -> "55834574852"  [ label = "CFG: "] 
  "30064771091" -> "55834574853"  [ label = "CFG: "] 
  "30064771094" -> "128849018881"  [ label = "CFG: "] 
  "30064771078" -> "55834574850"  [ label = "CFG: "] 
  "30064771080" -> "55834574851"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771073" -> "55834574849"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "55834574850" -> "30064771079"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "55834574852" -> "30064771089"  [ label = "CFG: "] 
  "55834574853" -> "30064771092"  [ label = "CFG: "] 
  "55834574848" -> "30064771072"  [ label = "CFG: "] 
  "55834574849" -> "30064771074"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "55834574851" -> "30064771081"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "115964116992" -> "128849018881"  [ label = "DDG: mocker"] 
  "30064771076" -> "128849018881"  [ label = "DDG: mock"] 
  "30064771073" -> "128849018881"  [ label = "DDG: mocker.patch"] 
  "30064771073" -> "128849018881"  [ label = "DDG: tmp0 = mocker.patch"] 
  "30064771075" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771075" -> "128849018881"  [ label = "DDG: subprocess"] 
  "30064771075" -> "128849018881"  [ label = "DDG: tmp0.object(subprocess, &quot;check_output&quot;, return_value = b&quot;&quot;)"] 
  "30064771076" -> "128849018881"  [ label = "DDG: mock = tmp0 = mocker.patch
tmp0.object(subprocess, &quot;check_output&quot;, return_value = b&quot;&quot;)"] 
  "30064771078" -> "128849018881"  [ label = "DDG: Git()"] 
  "30064771078" -> "128849018881"  [ label = "DDG: tmp1 = Git()"] 
  "30064771080" -> "128849018881"  [ label = "DDG: tmp1"] 
  "30064771080" -> "128849018881"  [ label = "DDG: tmp1.run(&quot;config&quot;)"] 
  "30064771087" -> "128849018881"  [ label = "DDG: mock.call_args_list[-1][0][0][0]"] 
  "30064771088" -> "128849018881"  [ label = "DDG: Path(mock.call_args_list[-1][0][0][0])"] 
  "30064771088" -> "128849018881"  [ label = "DDG: cmd = Path(mock.call_args_list[-1][0][0][0])"] 
  "30064771090" -> "128849018881"  [ label = "DDG: cmd"] 
  "30064771091" -> "128849018881"  [ label = "DDG: cmd.is_absolute()"] 
  "30064771091" -> "128849018881"  [ label = "DDG: assert cmd.is_absolute()"] 
  "30064771093" -> "128849018881"  [ label = "DDG: cmd.name"] 
  "30064771094" -> "128849018881"  [ label = "DDG: cmd.name == &quot;git.exe&quot;"] 
  "30064771094" -> "128849018881"  [ label = "DDG: assert cmd.name == &quot;git.exe&quot;"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771075" -> "30064771076"  [ label = "DDG: tmp0.object(subprocess, &quot;check_output&quot;, return_value = b&quot;&quot;)"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "111669149697" -> "25769803779"  [ label = "DDG: "] 
  "30064771087" -> "30064771088"  [ label = "DDG: mock.call_args_list[-1][0][0][0]"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771090" -> "30064771091"  [ label = "DDG: cmd"] 
  "30064771093" -> "30064771094"  [ label = "DDG: cmd.name"] 
  "30064771093" -> "30064771094"  [ label = "DDG: &quot;git.exe&quot;"] 
  "115964116992" -> "30064771073"  [ label = "DDG: mocker"] 
  "30064771078" -> "30064771080"  [ label = "DDG: tmp1"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "111669149697" -> "68719476748"  [ label = "DDG: "] 
  "30064771088" -> "30064771090"  [ label = "DDG: cmd"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771090" -> "30064771093"  [ label = "DDG: cmd"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771073" -> "30064771075"  [ label = "DDG: tmp0"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "68719476743"  [ label = "DDG: "] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
}
"""
)
