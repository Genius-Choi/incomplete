[33mval[0m [36mres577[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "toDouble" {  
"111669149697" [label = <(METHOD,toDouble)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,ImmutableBigIntRef src)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
  if (src.numDigits == 0) {
    return 0.0;
 ...,{
  if (src.numDigits == 0) {
    return 0.0;
 ...)<SUB>1</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (src.numDigits == 0))<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.equals,src.numDigits == 0)<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.fieldAccess,src.numDigits)<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,src,src.numDigits == 0)<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,numDigits,numDigits)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,0,src.numDigits == 0)<SUB>2</SUB>> ]
"25769803778" [label = <(BLOCK,{
    return 0.0;
  },{
    return 0.0;
  })<SUB>2</SUB>> ]
"146028888064" [label = <(RETURN,return 0.0;,return 0.0;)<SUB>3</SUB>> ]
"90194313217" [label = <(LITERAL,0.0,return 0.0;)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,const uint32_t numBits: uint32_t)<SUB>6</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,numBits = src.numDigits * BigIntDigitSizeInBits)<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,numBits,numBits = src.numDigits * BigIntDigitSizeInBits)<SUB>6</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.multiplication,src.numDigits * BigIntDigitSizeInBits)<SUB>6</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,src.numDigits)<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,src,src.numDigits * BigIntDigitSizeInBits)<SUB>6</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,numDigits,numDigits)<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,BigIntDigitSizeInBits,src.numDigits * BigIntDigitSizeInBits)<SUB>6</SUB>> ]
"94489280513" [label = <(LOCAL,llvh.APInt tmp: llvh.APInt)<SUB>7</SUB>> ]
"30064771077" [label = <(tmp,tmp(numBits, llvh::makeArrayRef(src.digits, src...)<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,numBits,tmp(numBits, llvh::makeArrayRef(src.digits, src...)<SUB>7</SUB>> ]
"30064771078" [label = <(makeArrayRef,llvh::makeArrayRef(src.digits, src.numDigits))<SUB>7</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,src.digits)<SUB>7</SUB>> ]
"68719476741" [label = <(IDENTIFIER,src,llvh::makeArrayRef(src.digits, src.numDigits))<SUB>7</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,digits,digits)<SUB>7</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.fieldAccess,src.numDigits)<SUB>7</SUB>> ]
"68719476742" [label = <(IDENTIFIER,src,llvh::makeArrayRef(src.digits, src.numDigits))<SUB>7</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,numDigits,numDigits)<SUB>7</SUB>> ]
"94489280514" [label = <(LOCAL,constexpr bool kSigned: bool)<SUB>8</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,kSigned = true)<SUB>8</SUB>> ]
"68719476743" [label = <(IDENTIFIER,kSigned,kSigned = true)<SUB>8</SUB>> ]
"90194313218" [label = <(LITERAL,true,kSigned = true)<SUB>8</SUB>> ]
"94489280515" [label = <(LOCAL,double val: double)<SUB>9</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,val = tmp.roundToDouble(kSigned))<SUB>9</SUB>> ]
"68719476744" [label = <(IDENTIFIER,val,val = tmp.roundToDouble(kSigned))<SUB>9</SUB>> ]
"30064771083" [label = <(roundToDouble,tmp.roundToDouble(kSigned))<SUB>9</SUB>> ]
"68719476745" [label = <(IDENTIFIER,tmp,tmp.roundToDouble(kSigned))<SUB>9</SUB>> ]
"68719476746" [label = <(IDENTIFIER,kSigned,tmp.roundToDouble(kSigned))<SUB>9</SUB>> ]
"146028888065" [label = <(RETURN,return std::isnan(val) ? std::numeric_limits&lt;do...,return std::isnan(val) ? std::numeric_limits&lt;do...)<SUB>13</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.conditional,std::isnan(val) ? std::numeric_limits&lt;double&gt;::...)<SUB>13</SUB>> ]
"30064771085" [label = <(isnan,std::isnan(val))<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,val,std::isnan(val))<SUB>13</SUB>> ]
"30064771086" [label = <(quiet_NaN,std::numeric_limits&lt;double&gt;::quiet_NaN())<SUB>13</SUB>> ]
"68719476748" [label = <(IDENTIFIER,val,std::isnan(val) ? std::numeric_limits&lt;double&gt;::...)<SUB>13</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,double)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "55834574849"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771079" -> "55834574850"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771080" -> "55834574851"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "146028888065" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "30064771086"  [ label = "AST: "] 
  "30064771084" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "68719476747"  [ label = "AST: "] 
  "30064771074" -> "55834574850"  [ label = "CFG: "] 
  "30064771077" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "30064771083"  [ label = "CFG: "] 
  "30064771082" -> "30064771085"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "146028888064"  [ label = "CFG: "] 
  "30064771072" -> "55834574849"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771084" -> "146028888065"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771079" -> "55834574851"  [ label = "CFG: "] 
  "30064771080" -> "30064771078"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "30064771084"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "55834574849" -> "30064771076"  [ label = "CFG: "] 
  "55834574850" -> "30064771079"  [ label = "CFG: "] 
  "55834574851" -> "30064771080"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: src"] 
  "30064771072" -> "128849018880"  [ label = "DDG: src.numDigits"] 
  "30064771072" -> "128849018880"  [ label = "DDG: src.numDigits == 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: BigIntDigitSizeInBits"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: src.numDigits"] 
  "30064771075" -> "30064771074"  [ label = "DDG: BigIntDigitSizeInBits"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: tmp"] 
  "30064771083" -> "30064771082"  [ label = "DDG: kSigned"] 
  "30064771084" -> "146028888065"  [ label = "DDG: std::isnan(val) ? std::numeric_limits&lt;double&gt;::quiet_NaN() : val"] 
  "30064771074" -> "30064771077"  [ label = "DDG: numBits"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: src.digits"] 
  "30064771078" -> "30064771077"  [ label = "DDG: src.numDigits"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: val"] 
  "115964116992" -> "30064771072"  [ label = "DDG: src"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "90194313217" -> "146028888064"  [ label = "DDG: 0.0"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "115964116992" -> "30064771075"  [ label = "DDG: src"] 
  "30064771072" -> "30064771075"  [ label = "DDG: src.numDigits"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "115964116992" -> "30064771078"  [ label = "DDG: src"] 
  "30064771075" -> "30064771078"  [ label = "DDG: src.numDigits"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771081" -> "30064771083"  [ label = "DDG: kSigned"] 
  "111669149697" -> "90194313217"  [ label = "DDG: "] 
  "30064771082" -> "30064771085"  [ label = "DDG: val"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771072" -> "55834574851"  [ label = "CDG: "] 
  "30064771072" -> "55834574850"  [ label = "CDG: "] 
  "30064771072" -> "55834574849"  [ label = "CDG: "] 
  "30064771072" -> "30064771085"  [ label = "CDG: "] 
  "30064771072" -> "30064771082"  [ label = "CDG: "] 
  "30064771072" -> "30064771081"  [ label = "CDG: "] 
  "30064771072" -> "30064771084"  [ label = "CDG: "] 
  "30064771072" -> "30064771083"  [ label = "CDG: "] 
  "30064771072" -> "146028888065"  [ label = "CDG: "] 
  "30064771072" -> "30064771078"  [ label = "CDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "30064771080"  [ label = "CDG: "] 
  "30064771072" -> "30064771079"  [ label = "CDG: "] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771085" -> "30064771086"  [ label = "CDG: "] 
}
"""
)
