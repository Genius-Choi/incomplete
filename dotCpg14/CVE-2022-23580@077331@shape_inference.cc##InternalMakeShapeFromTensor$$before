[33mval[0m [36mres256[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "InternalMakeShapeFromTensor" {  
"111669149697" [label = <(METHOD,InternalMakeShapeFromTensor)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,bool treat_unknown_scalar_tensor_as_unknown_shape)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,const Tensor* t)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,ShapeHandle tensor_shape)<SUB>3</SUB>> ]
"115964116995" [label = <(PARAM,ShapeHandle* out)<SUB>3</SUB>> ]
"25769803777" [label = <(BLOCK,{
  // Only callers who have set
  if (!treat_u...,{
  // Only callers who have set
  if (!treat_u...)<SUB>3</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!treat_unknown_scalar_tensor_as_unknown_shape))<SUB>5</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.logicalNot,!treat_unknown_scalar_tensor_as_unknown_shape)<SUB>5</SUB>> ]
"68719476736" [label = <(IDENTIFIER,treat_unknown_scalar_tensor_as_unknown_shape,!treat_unknown_scalar_tensor_as_unknown_shape)<SUB>5</SUB>> ]
"25769803778" [label = <(BLOCK,{
    TF_RETURN_IF_ERROR(WithRank(tensor_shape,...,{
    TF_RETURN_IF_ERROR(WithRank(tensor_shape,...)<SUB>5</SUB>> ]
"30064771073" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(WithRank(tensor_shape, 1, &amp;t...)<SUB>6</SUB>> ]
"30064771074" [label = <(WithRank,WithRank(tensor_shape, 1, &amp;tensor_shape))<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,tensor_shape,WithRank(tensor_shape, 1, &amp;tensor_shape))<SUB>6</SUB>> ]
"90194313216" [label = <(LITERAL,1,WithRank(tensor_shape, 1, &amp;tensor_shape))<SUB>6</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.addressOf,&amp;tensor_shape)<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,tensor_shape,WithRank(tensor_shape, 1, &amp;tensor_shape))<SUB>6</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (t == nullptr))<SUB>8</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.equals,t == nullptr)<SUB>8</SUB>> ]
"68719476739" [label = <(IDENTIFIER,t,t == nullptr)<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,nullptr,t == nullptr)<SUB>8</SUB>> ]
"25769803779" [label = <(BLOCK,{
    // This is guarded by the check above.
  ...,{
    // This is guarded by the check above.
  ...)<SUB>8</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (Rank(tensor_shape) == 0))<SUB>10</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.equals,Rank(tensor_shape) == 0)<SUB>10</SUB>> ]
"30064771078" [label = <(Rank,Rank(tensor_shape))<SUB>10</SUB>> ]
"68719476740" [label = <(IDENTIFIER,tensor_shape,Rank(tensor_shape))<SUB>10</SUB>> ]
"90194313218" [label = <(LITERAL,0,Rank(tensor_shape) == 0)<SUB>10</SUB>> ]
"25769803780" [label = <(BLOCK,{
      return ReturnUnknownShape(out);
    },{
      return ReturnUnknownShape(out);
    })<SUB>10</SUB>> ]
"146028888064" [label = <(RETURN,return ReturnUnknownShape(out);,return ReturnUnknownShape(out);)<SUB>11</SUB>> ]
"30064771079" [label = <(ReturnUnknownShape,ReturnUnknownShape(out))<SUB>11</SUB>> ]
"68719476741" [label = <(IDENTIFIER,out,ReturnUnknownShape(out))<SUB>11</SUB>> ]
"94489280512" [label = <(LOCAL,DimensionHandle shape_dim: DimensionHandle)<SUB>15</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,shape_dim = Dim(tensor_shape, 0))<SUB>15</SUB>> ]
"68719476742" [label = <(IDENTIFIER,shape_dim,shape_dim = Dim(tensor_shape, 0))<SUB>15</SUB>> ]
"30064771081" [label = <(Dim,Dim(tensor_shape, 0))<SUB>15</SUB>> ]
"68719476743" [label = <(IDENTIFIER,tensor_shape,Dim(tensor_shape, 0))<SUB>15</SUB>> ]
"90194313219" [label = <(LITERAL,0,Dim(tensor_shape, 0))<SUB>15</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (!ValueKnown(shape_dim)))<SUB>16</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.logicalNot,!ValueKnown(shape_dim))<SUB>16</SUB>> ]
"30064771083" [label = <(ValueKnown,ValueKnown(shape_dim))<SUB>16</SUB>> ]
"68719476744" [label = <(IDENTIFIER,shape_dim,ValueKnown(shape_dim))<SUB>16</SUB>> ]
"25769803781" [label = <(BLOCK,{
      return ReturnUnknownShape(out);
    },{
      return ReturnUnknownShape(out);
    })<SUB>16</SUB>> ]
"146028888065" [label = <(RETURN,return ReturnUnknownShape(out);,return ReturnUnknownShape(out);)<SUB>17</SUB>> ]
"30064771084" [label = <(ReturnUnknownShape,ReturnUnknownShape(out))<SUB>17</SUB>> ]
"68719476745" [label = <(IDENTIFIER,out,ReturnUnknownShape(out))<SUB>17</SUB>> ]
"94489280513" [label = <(LOCAL,const auto num_dims: auto)<SUB>19</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,num_dims = Value(shape_dim))<SUB>19</SUB>> ]
"68719476746" [label = <(IDENTIFIER,num_dims,num_dims = Value(shape_dim))<SUB>19</SUB>> ]
"30064771086" [label = <(Value,Value(shape_dim))<SUB>19</SUB>> ]
"68719476747" [label = <(IDENTIFIER,shape_dim,Value(shape_dim))<SUB>19</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;DimensionHandle&gt; dims)<SUB>20</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;DimensionHandle)<SUB>20</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>20</SUB>> ]
"68719476748" [label = <(IDENTIFIER,std,std::vector&lt;DimensionHandle)<SUB>20</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>20</SUB>> ]
"68719476749" [label = <(IDENTIFIER,DimensionHandle,std::vector&lt;DimensionHandle)<SUB>20</SUB>> ]
"68719476750" [label = <(IDENTIFIER,dims,std::vector&lt;DimensionHandle&gt; dims)<SUB>20</SUB>> ]
"30064771090" [label = <(reserve,dims.reserve(num_dims))<SUB>21</SUB>> ]
"68719476751" [label = <(IDENTIFIER,dims,dims.reserve(num_dims))<SUB>21</SUB>> ]
"68719476752" [label = <(IDENTIFIER,num_dims,dims.reserve(num_dims))<SUB>21</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; num_dims;i++))<SUB>22</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>> ]
"94489280514" [label = <(LOCAL,int i: int)<SUB>22</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>22</SUB>> ]
"68719476753" [label = <(IDENTIFIER,i,i = 0)<SUB>22</SUB>> ]
"90194313220" [label = <(LITERAL,0,i = 0)<SUB>22</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.lessThan,i &lt; num_dims)<SUB>22</SUB>> ]
"68719476754" [label = <(IDENTIFIER,i,i &lt; num_dims)<SUB>22</SUB>> ]
"68719476755" [label = <(IDENTIFIER,num_dims,i &lt; num_dims)<SUB>22</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>> ]
"68719476756" [label = <(IDENTIFIER,i,i++)<SUB>22</SUB>> ]
"30064771094" [label = <(push_back,dims.push_back(UnknownDim()))<SUB>22</SUB>> ]
"68719476757" [label = <(IDENTIFIER,dims,dims.push_back(UnknownDim()))<SUB>22</SUB>> ]
"30064771095" [label = <(UnknownDim,UnknownDim())<SUB>22</SUB>> ]
"146028888066" [label = <(RETURN,return ReturnCreatedShape(dims, out);,return ReturnCreatedShape(dims, out);)<SUB>23</SUB>> ]
"30064771096" [label = <(ReturnCreatedShape,ReturnCreatedShape(dims, out))<SUB>23</SUB>> ]
"68719476758" [label = <(IDENTIFIER,dims,ReturnCreatedShape(dims, out))<SUB>23</SUB>> ]
"68719476759" [label = <(IDENTIFIER,out,ReturnCreatedShape(dims, out))<SUB>23</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (t-&gt;shape().dims() == 0))<SUB>26</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.equals,t-&gt;shape().dims() == 0)<SUB>26</SUB>> ]
"30064771098" [label = <(dims,t-&gt;shape().dims())<SUB>26</SUB>> ]
"30064771099" [label = <(shape,t-&gt;shape())<SUB>26</SUB>> ]
"68719476760" [label = <(IDENTIFIER,t,t-&gt;shape())<SUB>26</SUB>> ]
"90194313221" [label = <(LITERAL,0,t-&gt;shape().dims() == 0)<SUB>26</SUB>> ]
"25769803783" [label = <(BLOCK,{
    if (t-&gt;dtype() == DataType::DT_INT32) {
 ...,{
    if (t-&gt;dtype() == DataType::DT_INT32) {
 ...)<SUB>26</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (t-&gt;dtype() == DataType::DT_INT32))<SUB>27</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.equals,t-&gt;dtype() == DataType::DT_INT32)<SUB>27</SUB>> ]
"30064771101" [label = <(dtype,t-&gt;dtype())<SUB>27</SUB>> ]
"68719476761" [label = <(IDENTIFIER,t,t-&gt;dtype())<SUB>27</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.fieldAccess,DataType::DT_INT32)<SUB>27</SUB>> ]
"68719476762" [label = <(IDENTIFIER,DataType,t-&gt;dtype() == DataType::DT_INT32)<SUB>27</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,DT_INT32,DT_INT32)<SUB>27</SUB>> ]
"25769803784" [label = <(BLOCK,{
      auto flat_t = t-&gt;scalar&lt;int32&gt;();
     ...,{
      auto flat_t = t-&gt;scalar&lt;int32&gt;();
     ...)<SUB>27</SUB>> ]
"94489280515" [label = <(LOCAL,auto flat_t: auto)<SUB>28</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,flat_t = t-&gt;scalar&lt;int32&gt;())<SUB>28</SUB>> ]
"68719476763" [label = <(IDENTIFIER,flat_t,flat_t = t-&gt;scalar&lt;int32&gt;())<SUB>28</SUB>> ]
"30064771104" [label = <(scalar&lt;int32&gt;,t-&gt;scalar&lt;int32&gt;())<SUB>28</SUB>> ]
"68719476764" [label = <(IDENTIFIER,t,t-&gt;scalar&lt;int32&gt;())<SUB>28</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (flat_t() != -1))<SUB>29</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.notEquals,flat_t() != -1)<SUB>29</SUB>> ]
"30064771106" [label = <(flat_t,flat_t())<SUB>29</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.minus,-1)<SUB>29</SUB>> ]
"90194313222" [label = <(LITERAL,1,-1)<SUB>29</SUB>> ]
"25769803785" [label = <(BLOCK,{
        *out = nullptr;
        return errors...,{
        *out = nullptr;
        return errors...)<SUB>29</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.assignment,*out = nullptr)<SUB>30</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.indirection,*out)<SUB>30</SUB>> ]
"68719476765" [label = <(IDENTIFIER,out,*out = nullptr)<SUB>30</SUB>> ]
"90194313223" [label = <(LITERAL,nullptr,*out = nullptr)<SUB>30</SUB>> ]
"146028888067" [label = <(RETURN,return errors::InvalidArgument(
            &quot;In...,return errors::InvalidArgument(
            &quot;In...)<SUB>31</SUB>> ]
"30064771110" [label = <(InvalidArgument,errors::InvalidArgument(
            &quot;Input ten...)<SUB>31</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;Input tensor must be rank 1, or if its rank 0 ...,errors::InvalidArgument(
            &quot;Input ten...)<SUB>32</SUB>> ]
"30064771111" [label = <(flat_t,flat_t())<SUB>35</SUB>> ]
"146028888068" [label = <(RETURN,return ReturnUnknownShape(out);,return ReturnUnknownShape(out);)<SUB>37</SUB>> ]
"30064771112" [label = <(ReturnUnknownShape,ReturnUnknownShape(out))<SUB>37</SUB>> ]
"68719476766" [label = <(IDENTIFIER,out,ReturnUnknownShape(out))<SUB>37</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>38</SUB>> ]
"25769803786" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,IF,if (t-&gt;dtype() == DataType::DT_INT64))<SUB>38</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.equals,t-&gt;dtype() == DataType::DT_INT64)<SUB>38</SUB>> ]
"30064771114" [label = <(dtype,t-&gt;dtype())<SUB>38</SUB>> ]
"68719476767" [label = <(IDENTIFIER,t,t-&gt;dtype())<SUB>38</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.fieldAccess,DataType::DT_INT64)<SUB>38</SUB>> ]
"68719476768" [label = <(IDENTIFIER,DataType,t-&gt;dtype() == DataType::DT_INT64)<SUB>38</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,DT_INT64,DT_INT64)<SUB>38</SUB>> ]
"25769803787" [label = <(BLOCK,{
      auto flat_t = t-&gt;scalar&lt;int64_t&gt;();
   ...,{
      auto flat_t = t-&gt;scalar&lt;int64_t&gt;();
   ...)<SUB>38</SUB>> ]
"94489280516" [label = <(LOCAL,auto flat_t: auto)<SUB>39</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.assignment,flat_t = t-&gt;scalar&lt;int64_t&gt;())<SUB>39</SUB>> ]
"68719476769" [label = <(IDENTIFIER,flat_t,flat_t = t-&gt;scalar&lt;int64_t&gt;())<SUB>39</SUB>> ]
"30064771117" [label = <(scalar&lt;int64_t&gt;,t-&gt;scalar&lt;int64_t&gt;())<SUB>39</SUB>> ]
"68719476770" [label = <(IDENTIFIER,t,t-&gt;scalar&lt;int64_t&gt;())<SUB>39</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,IF,if (flat_t() != -1))<SUB>40</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.notEquals,flat_t() != -1)<SUB>40</SUB>> ]
"30064771119" [label = <(flat_t,flat_t())<SUB>40</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.minus,-1)<SUB>40</SUB>> ]
"90194313225" [label = <(LITERAL,1,-1)<SUB>40</SUB>> ]
"25769803788" [label = <(BLOCK,{
        *out = nullptr;
        return errors...,{
        *out = nullptr;
        return errors...)<SUB>40</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.assignment,*out = nullptr)<SUB>41</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.indirection,*out)<SUB>41</SUB>> ]
"68719476771" [label = <(IDENTIFIER,out,*out = nullptr)<SUB>41</SUB>> ]
"90194313226" [label = <(LITERAL,nullptr,*out = nullptr)<SUB>41</SUB>> ]
"146028888069" [label = <(RETURN,return errors::InvalidArgument(
            &quot;In...,return errors::InvalidArgument(
            &quot;In...)<SUB>42</SUB>> ]
"30064771123" [label = <(InvalidArgument,errors::InvalidArgument(
            &quot;Input ten...)<SUB>42</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;Input tensor must be rank 1, or if its rank 0 ...,errors::InvalidArgument(
            &quot;Input ten...)<SUB>43</SUB>> ]
"30064771124" [label = <(flat_t,flat_t())<SUB>46</SUB>> ]
"146028888070" [label = <(RETURN,return ReturnUnknownShape(out);,return ReturnUnknownShape(out);)<SUB>48</SUB>> ]
"30064771125" [label = <(ReturnUnknownShape,ReturnUnknownShape(out))<SUB>48</SUB>> ]
"68719476772" [label = <(IDENTIFIER,out,ReturnUnknownShape(out))<SUB>48</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>49</SUB>> ]
"25769803789" [label = <(BLOCK,{
      *out = nullptr;
      return errors::In...,{
      *out = nullptr;
      return errors::In...)<SUB>49</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.assignment,*out = nullptr)<SUB>50</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.indirection,*out)<SUB>50</SUB>> ]
"68719476773" [label = <(IDENTIFIER,out,*out = nullptr)<SUB>50</SUB>> ]
"90194313228" [label = <(LITERAL,nullptr,*out = nullptr)<SUB>50</SUB>> ]
"146028888071" [label = <(RETURN,return errors::InvalidArgument(
          &quot;Inpu...,return errors::InvalidArgument(
          &quot;Inpu...)<SUB>51</SUB>> ]
"30064771128" [label = <(InvalidArgument,errors::InvalidArgument(
          &quot;Input tenso...)<SUB>51</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;Input tensor must be int32 or int64, but was &quot;,errors::InvalidArgument(
          &quot;Input tenso...)<SUB>52</SUB>> ]
"30064771129" [label = <(DataTypeString,DataTypeString(t-&gt;dtype()))<SUB>53</SUB>> ]
"30064771130" [label = <(dtype,t-&gt;dtype())<SUB>53</SUB>> ]
"68719476774" [label = <(IDENTIFIER,t,t-&gt;dtype())<SUB>53</SUB>> ]
"47244640268" [label = <(CONTROL_STRUCTURE,IF,if (t-&gt;shape().dims() != 1))<SUB>57</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.notEquals,t-&gt;shape().dims() != 1)<SUB>57</SUB>> ]
"30064771132" [label = <(dims,t-&gt;shape().dims())<SUB>57</SUB>> ]
"30064771133" [label = <(shape,t-&gt;shape())<SUB>57</SUB>> ]
"68719476775" [label = <(IDENTIFIER,t,t-&gt;shape())<SUB>57</SUB>> ]
"90194313230" [label = <(LITERAL,1,t-&gt;shape().dims() != 1)<SUB>57</SUB>> ]
"25769803790" [label = <(BLOCK,{
    *out = nullptr;
    return errors::Invali...,{
    *out = nullptr;
    return errors::Invali...)<SUB>57</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.assignment,*out = nullptr)<SUB>58</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.indirection,*out)<SUB>58</SUB>> ]
"68719476776" [label = <(IDENTIFIER,out,*out = nullptr)<SUB>58</SUB>> ]
"90194313231" [label = <(LITERAL,nullptr,*out = nullptr)<SUB>58</SUB>> ]
"146028888072" [label = <(RETURN,return errors::InvalidArgument(
        &quot;Input ...,return errors::InvalidArgument(
        &quot;Input ...)<SUB>59</SUB>> ]
"30064771136" [label = <(InvalidArgument,errors::InvalidArgument(
        &quot;Input tensor ...)<SUB>59</SUB>> ]
"90194313232" [label = <(LITERAL,&quot;Input tensor must be rank 1, but was rank &quot;,errors::InvalidArgument(
        &quot;Input tensor ...)<SUB>60</SUB>> ]
"30064771137" [label = <(dims,t-&gt;shape().dims())<SUB>60</SUB>> ]
"30064771138" [label = <(shape,t-&gt;shape())<SUB>60</SUB>> ]
"68719476777" [label = <(IDENTIFIER,t,t-&gt;shape())<SUB>60</SUB>> ]
"90194313233" [label = <(LITERAL,&quot;.&quot;,errors::InvalidArgument(
        &quot;Input tensor ...)<SUB>60</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.conditional,(t-&gt;shape().dims() == 0)
             ? &quot;If it ...)<SUB>61</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.equals,t-&gt;shape().dims() == 0)<SUB>61</SUB>> ]
"30064771141" [label = <(dims,t-&gt;shape().dims())<SUB>61</SUB>> ]
"30064771142" [label = <(shape,t-&gt;shape())<SUB>61</SUB>> ]
"68719476778" [label = <(IDENTIFIER,t,t-&gt;shape())<SUB>61</SUB>> ]
"90194313234" [label = <(LITERAL,0,t-&gt;shape().dims() == 0)<SUB>61</SUB>> ]
"90194313235" [label = <(LITERAL,&quot;If it is rank 0 rank 0 it must have statically...,(t-&gt;shape().dims() == 0)
             ? &quot;If it ...)<SUB>62</SUB>> ]
"90194313236" [label = <(LITERAL,&quot; &quot;,(t-&gt;shape().dims() == 0)
             ? &quot;If it ...)<SUB>64</SUB>> ]
"90194313237" [label = <(LITERAL,&quot;Saw tensor shape &quot;,errors::InvalidArgument(
        &quot;Input tensor ...)<SUB>65</SUB>> ]
"30064771143" [label = <(DebugString,t-&gt;shape().DebugString())<SUB>65</SUB>> ]
"30064771144" [label = <(shape,t-&gt;shape())<SUB>65</SUB>> ]
"68719476779" [label = <(IDENTIFIER,t,t-&gt;shape())<SUB>65</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;DimensionHandle&gt; dims)<SUB>67</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;DimensionHandle)<SUB>67</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>67</SUB>> ]
"68719476780" [label = <(IDENTIFIER,std,std::vector&lt;DimensionHandle)<SUB>67</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>67</SUB>> ]
"68719476781" [label = <(IDENTIFIER,DimensionHandle,std::vector&lt;DimensionHandle)<SUB>67</SUB>> ]
"68719476782" [label = <(IDENTIFIER,dims,std::vector&lt;DimensionHandle&gt; dims)<SUB>67</SUB>> ]
"47244640269" [label = <(CONTROL_STRUCTURE,IF,if (t-&gt;dtype() == DataType::DT_INT32))<SUB>68</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.equals,t-&gt;dtype() == DataType::DT_INT32)<SUB>68</SUB>> ]
"30064771149" [label = <(dtype,t-&gt;dtype())<SUB>68</SUB>> ]
"68719476783" [label = <(IDENTIFIER,t,t-&gt;dtype())<SUB>68</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.fieldAccess,DataType::DT_INT32)<SUB>68</SUB>> ]
"68719476784" [label = <(IDENTIFIER,DataType,t-&gt;dtype() == DataType::DT_INT32)<SUB>68</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,DT_INT32,DT_INT32)<SUB>68</SUB>> ]
"25769803791" [label = <(BLOCK,{
    auto flat_t = t-&gt;flat&lt;int32&gt;();
    for (...,{
    auto flat_t = t-&gt;flat&lt;int32&gt;();
    for (...)<SUB>68</SUB>> ]
"94489280517" [label = <(LOCAL,auto flat_t: auto)<SUB>69</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.assignment,flat_t = t-&gt;flat&lt;int32&gt;())<SUB>69</SUB>> ]
"68719476785" [label = <(IDENTIFIER,flat_t,flat_t = t-&gt;flat&lt;int32&gt;())<SUB>69</SUB>> ]
"30064771152" [label = <(flat&lt;int32&gt;,t-&gt;flat&lt;int32&gt;())<SUB>69</SUB>> ]
"68719476786" [label = <(IDENTIFIER,t,t-&gt;flat&lt;int32&gt;())<SUB>69</SUB>> ]
"47244640270" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; flat_t.size();++i))<SUB>70</SUB>> ]
"25769803792" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>70</SUB>> ]
"94489280518" [label = <(LOCAL,int i: int)<SUB>70</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>70</SUB>> ]
"68719476787" [label = <(IDENTIFIER,i,i = 0)<SUB>70</SUB>> ]
"90194313238" [label = <(LITERAL,0,i = 0)<SUB>70</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.lessThan,i &lt; flat_t.size())<SUB>70</SUB>> ]
"68719476788" [label = <(IDENTIFIER,i,i &lt; flat_t.size())<SUB>70</SUB>> ]
"30064771155" [label = <(size,flat_t.size())<SUB>70</SUB>> ]
"68719476789" [label = <(IDENTIFIER,flat_t,flat_t.size())<SUB>70</SUB>> ]
"30064771156" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>70</SUB>> ]
"68719476790" [label = <(IDENTIFIER,i,++i)<SUB>70</SUB>> ]
"25769803793" [label = <(BLOCK,{
      const int32_t val = flat_t(i);
      if...,{
      const int32_t val = flat_t(i);
      if...)<SUB>70</SUB>> ]
"94489280519" [label = <(LOCAL,const int32_t val: int32_t)<SUB>71</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.assignment,val = flat_t(i))<SUB>71</SUB>> ]
"68719476791" [label = <(IDENTIFIER,val,val = flat_t(i))<SUB>71</SUB>> ]
"30064771158" [label = <(flat_t,flat_t(i))<SUB>71</SUB>> ]
"68719476792" [label = <(IDENTIFIER,i,flat_t(i))<SUB>71</SUB>> ]
"47244640271" [label = <(CONTROL_STRUCTURE,IF,if (val &lt; -1))<SUB>72</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.lessThan,val &lt; -1)<SUB>72</SUB>> ]
"68719476793" [label = <(IDENTIFIER,val,val &lt; -1)<SUB>72</SUB>> ]
"30064771160" [label = <(&lt;operator&gt;.minus,-1)<SUB>72</SUB>> ]
"90194313239" [label = <(LITERAL,1,-1)<SUB>72</SUB>> ]
"25769803794" [label = <(BLOCK,{
        return errors::InvalidArgument(
     ...,{
        return errors::InvalidArgument(
     ...)<SUB>72</SUB>> ]
"146028888073" [label = <(RETURN,return errors::InvalidArgument(
            &quot;In...,return errors::InvalidArgument(
            &quot;In...)<SUB>73</SUB>> ]
"30064771161" [label = <(InvalidArgument,errors::InvalidArgument(
            &quot;Invalid v...)<SUB>73</SUB>> ]
"90194313240" [label = <(LITERAL,&quot;Invalid value in tensor used for shape: &quot;,errors::InvalidArgument(
            &quot;Invalid v...)<SUB>74</SUB>> ]
"68719476794" [label = <(IDENTIFIER,val,errors::InvalidArgument(
            &quot;Invalid v...)<SUB>74</SUB>> ]
"30064771162" [label = <(push_back,dims.push_back(MakeDim(val)))<SUB>77</SUB>> ]
"68719476795" [label = <(IDENTIFIER,dims,dims.push_back(MakeDim(val)))<SUB>77</SUB>> ]
"30064771163" [label = <(MakeDim,MakeDim(val))<SUB>77</SUB>> ]
"68719476796" [label = <(IDENTIFIER,val,MakeDim(val))<SUB>77</SUB>> ]
"47244640272" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>79</SUB>> ]
"25769803795" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>79</SUB>> ]
"47244640273" [label = <(CONTROL_STRUCTURE,IF,if (t-&gt;dtype() == DataType::DT_INT64))<SUB>79</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.equals,t-&gt;dtype() == DataType::DT_INT64)<SUB>79</SUB>> ]
"30064771165" [label = <(dtype,t-&gt;dtype())<SUB>79</SUB>> ]
"68719476797" [label = <(IDENTIFIER,t,t-&gt;dtype())<SUB>79</SUB>> ]
"30064771166" [label = <(&lt;operator&gt;.fieldAccess,DataType::DT_INT64)<SUB>79</SUB>> ]
"68719476798" [label = <(IDENTIFIER,DataType,t-&gt;dtype() == DataType::DT_INT64)<SUB>79</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,DT_INT64,DT_INT64)<SUB>79</SUB>> ]
"25769803796" [label = <(BLOCK,{
    auto flat_t = t-&gt;flat&lt;int64_t&gt;();
    for...,{
    auto flat_t = t-&gt;flat&lt;int64_t&gt;();
    for...)<SUB>79</SUB>> ]
"94489280520" [label = <(LOCAL,auto flat_t: auto)<SUB>80</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.assignment,flat_t = t-&gt;flat&lt;int64_t&gt;())<SUB>80</SUB>> ]
"68719476799" [label = <(IDENTIFIER,flat_t,flat_t = t-&gt;flat&lt;int64_t&gt;())<SUB>80</SUB>> ]
"30064771168" [label = <(flat&lt;int64_t&gt;,t-&gt;flat&lt;int64_t&gt;())<SUB>80</SUB>> ]
"68719476800" [label = <(IDENTIFIER,t,t-&gt;flat&lt;int64_t&gt;())<SUB>80</SUB>> ]
"47244640274" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; flat_t.size();++i))<SUB>81</SUB>> ]
"25769803797" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>81</SUB>> ]
"94489280521" [label = <(LOCAL,int i: int)<SUB>81</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>81</SUB>> ]
"68719476801" [label = <(IDENTIFIER,i,i = 0)<SUB>81</SUB>> ]
"90194313241" [label = <(LITERAL,0,i = 0)<SUB>81</SUB>> ]
"30064771170" [label = <(&lt;operator&gt;.lessThan,i &lt; flat_t.size())<SUB>81</SUB>> ]
"68719476802" [label = <(IDENTIFIER,i,i &lt; flat_t.size())<SUB>81</SUB>> ]
"30064771171" [label = <(size,flat_t.size())<SUB>81</SUB>> ]
"68719476803" [label = <(IDENTIFIER,flat_t,flat_t.size())<SUB>81</SUB>> ]
"30064771172" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>81</SUB>> ]
"68719476804" [label = <(IDENTIFIER,i,++i)<SUB>81</SUB>> ]
"25769803798" [label = <(BLOCK,{
      const int64_t val = flat_t(i);
      if...,{
      const int64_t val = flat_t(i);
      if...)<SUB>81</SUB>> ]
"94489280522" [label = <(LOCAL,const int64_t val: int64_t)<SUB>82</SUB>> ]
"30064771173" [label = <(&lt;operator&gt;.assignment,val = flat_t(i))<SUB>82</SUB>> ]
"68719476805" [label = <(IDENTIFIER,val,val = flat_t(i))<SUB>82</SUB>> ]
"30064771174" [label = <(flat_t,flat_t(i))<SUB>82</SUB>> ]
"68719476806" [label = <(IDENTIFIER,i,flat_t(i))<SUB>82</SUB>> ]
"47244640275" [label = <(CONTROL_STRUCTURE,IF,if (val &lt; -1))<SUB>83</SUB>> ]
"30064771175" [label = <(&lt;operator&gt;.lessThan,val &lt; -1)<SUB>83</SUB>> ]
"68719476807" [label = <(IDENTIFIER,val,val &lt; -1)<SUB>83</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;.minus,-1)<SUB>83</SUB>> ]
"90194313242" [label = <(LITERAL,1,-1)<SUB>83</SUB>> ]
"25769803799" [label = <(BLOCK,{
        return errors::InvalidArgument(
     ...,{
        return errors::InvalidArgument(
     ...)<SUB>83</SUB>> ]
"146028888074" [label = <(RETURN,return errors::InvalidArgument(
            &quot;In...,return errors::InvalidArgument(
            &quot;In...)<SUB>84</SUB>> ]
"30064771177" [label = <(InvalidArgument,errors::InvalidArgument(
            &quot;Invalid v...)<SUB>84</SUB>> ]
"90194313243" [label = <(LITERAL,&quot;Invalid value in tensor used for shape: &quot;,errors::InvalidArgument(
            &quot;Invalid v...)<SUB>85</SUB>> ]
"68719476808" [label = <(IDENTIFIER,val,errors::InvalidArgument(
            &quot;Invalid v...)<SUB>85</SUB>> ]
"30064771178" [label = <(push_back,dims.push_back(MakeDim(val)))<SUB>88</SUB>> ]
"68719476809" [label = <(IDENTIFIER,dims,dims.push_back(MakeDim(val)))<SUB>88</SUB>> ]
"30064771179" [label = <(MakeDim,MakeDim(val))<SUB>88</SUB>> ]
"68719476810" [label = <(IDENTIFIER,val,MakeDim(val))<SUB>88</SUB>> ]
"47244640276" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>90</SUB>> ]
"25769803800" [label = <(BLOCK,{
    *out = nullptr;
    return errors::Invali...,{
    *out = nullptr;
    return errors::Invali...)<SUB>90</SUB>> ]
"30064771180" [label = <(&lt;operator&gt;.assignment,*out = nullptr)<SUB>91</SUB>> ]
"30064771181" [label = <(&lt;operator&gt;.indirection,*out)<SUB>91</SUB>> ]
"68719476811" [label = <(IDENTIFIER,out,*out = nullptr)<SUB>91</SUB>> ]
"90194313244" [label = <(LITERAL,nullptr,*out = nullptr)<SUB>91</SUB>> ]
"146028888075" [label = <(RETURN,return errors::InvalidArgument(
        &quot;Input ...,return errors::InvalidArgument(
        &quot;Input ...)<SUB>92</SUB>> ]
"30064771182" [label = <(InvalidArgument,errors::InvalidArgument(
        &quot;Input tensor ...)<SUB>92</SUB>> ]
"90194313245" [label = <(LITERAL,&quot;Input tensor must be int32 or int64, but was &quot;,errors::InvalidArgument(
        &quot;Input tensor ...)<SUB>93</SUB>> ]
"30064771183" [label = <(DataTypeString,DataTypeString(t-&gt;dtype()))<SUB>94</SUB>> ]
"30064771184" [label = <(dtype,t-&gt;dtype())<SUB>94</SUB>> ]
"68719476812" [label = <(IDENTIFIER,t,t-&gt;dtype())<SUB>94</SUB>> ]
"146028888076" [label = <(RETURN,return ReturnCreatedShape(dims, out);,return ReturnCreatedShape(dims, out);)<SUB>97</SUB>> ]
"30064771185" [label = <(ReturnCreatedShape,ReturnCreatedShape(dims, out))<SUB>97</SUB>> ]
"68719476813" [label = <(IDENTIFIER,dims,ReturnCreatedShape(dims, out))<SUB>97</SUB>> ]
"68719476814" [label = <(IDENTIFIER,out,ReturnCreatedShape(dims, out))<SUB>97</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "47244640268"  [ label = "AST: "] 
  "25769803777" -> "30064771145"  [ label = "AST: "] 
  "25769803777" -> "47244640269"  [ label = "AST: "] 
  "25769803777" -> "146028888076"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "25769803778" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "47244640257" -> "30064771076"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "90194313217"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "25769803779" -> "94489280512"  [ label = "AST: "] 
  "25769803779" -> "30064771080"  [ label = "AST: "] 
  "25769803779" -> "47244640259"  [ label = "AST: "] 
  "25769803779" -> "94489280513"  [ label = "AST: "] 
  "25769803779" -> "30064771085"  [ label = "AST: "] 
  "25769803779" -> "30064771087"  [ label = "AST: "] 
  "25769803779" -> "30064771090"  [ label = "AST: "] 
  "25769803779" -> "47244640260"  [ label = "AST: "] 
  "25769803779" -> "146028888066"  [ label = "AST: "] 
  "47244640258" -> "30064771077"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "25769803780" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "90194313219"  [ label = "AST: "] 
  "47244640259" -> "30064771082"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476744"  [ label = "AST: "] 
  "25769803781" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476745"  [ label = "AST: "] 
  "30064771085" -> "68719476746"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "68719476749"  [ label = "AST: "] 
  "30064771089" -> "68719476748"  [ label = "AST: "] 
  "30064771089" -> "55834574848"  [ label = "AST: "] 
  "30064771090" -> "68719476751"  [ label = "AST: "] 
  "30064771090" -> "68719476752"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "47244640260" -> "30064771092"  [ label = "AST: "] 
  "47244640260" -> "30064771093"  [ label = "AST: "] 
  "47244640260" -> "30064771094"  [ label = "AST: "] 
  "25769803782" -> "94489280514"  [ label = "AST: "] 
  "25769803782" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476753"  [ label = "AST: "] 
  "30064771091" -> "90194313220"  [ label = "AST: "] 
  "30064771092" -> "68719476754"  [ label = "AST: "] 
  "30064771092" -> "68719476755"  [ label = "AST: "] 
  "30064771093" -> "68719476756"  [ label = "AST: "] 
  "30064771094" -> "68719476757"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "146028888066" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476758"  [ label = "AST: "] 
  "30064771096" -> "68719476759"  [ label = "AST: "] 
  "47244640261" -> "30064771097"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "90194313221"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476760"  [ label = "AST: "] 
  "25769803783" -> "47244640262"  [ label = "AST: "] 
  "47244640262" -> "30064771100"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "47244640262" -> "47244640264"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "68719476761"  [ label = "AST: "] 
  "30064771102" -> "68719476762"  [ label = "AST: "] 
  "30064771102" -> "55834574849"  [ label = "AST: "] 
  "25769803784" -> "94489280515"  [ label = "AST: "] 
  "25769803784" -> "30064771103"  [ label = "AST: "] 
  "25769803784" -> "47244640263"  [ label = "AST: "] 
  "25769803784" -> "146028888068"  [ label = "AST: "] 
  "30064771103" -> "68719476763"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476764"  [ label = "AST: "] 
  "47244640263" -> "30064771105"  [ label = "AST: "] 
  "47244640263" -> "25769803785"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "90194313222"  [ label = "AST: "] 
  "25769803785" -> "30064771108"  [ label = "AST: "] 
  "25769803785" -> "146028888067"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771108" -> "90194313223"  [ label = "AST: "] 
  "30064771109" -> "68719476765"  [ label = "AST: "] 
  "146028888067" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "90194313224"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "146028888068" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "68719476766"  [ label = "AST: "] 
  "47244640264" -> "25769803786"  [ label = "AST: "] 
  "25769803786" -> "47244640265"  [ label = "AST: "] 
  "47244640265" -> "30064771113"  [ label = "AST: "] 
  "47244640265" -> "25769803787"  [ label = "AST: "] 
  "47244640265" -> "47244640267"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771113" -> "30064771115"  [ label = "AST: "] 
  "30064771114" -> "68719476767"  [ label = "AST: "] 
  "30064771115" -> "68719476768"  [ label = "AST: "] 
  "30064771115" -> "55834574850"  [ label = "AST: "] 
  "25769803787" -> "94489280516"  [ label = "AST: "] 
  "25769803787" -> "30064771116"  [ label = "AST: "] 
  "25769803787" -> "47244640266"  [ label = "AST: "] 
  "25769803787" -> "146028888070"  [ label = "AST: "] 
  "30064771116" -> "68719476769"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771117" -> "68719476770"  [ label = "AST: "] 
  "47244640266" -> "30064771118"  [ label = "AST: "] 
  "47244640266" -> "25769803788"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771118" -> "30064771120"  [ label = "AST: "] 
  "30064771120" -> "90194313225"  [ label = "AST: "] 
  "25769803788" -> "30064771121"  [ label = "AST: "] 
  "25769803788" -> "146028888069"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "90194313226"  [ label = "AST: "] 
  "30064771122" -> "68719476771"  [ label = "AST: "] 
  "146028888069" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "90194313227"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "146028888070" -> "30064771125"  [ label = "AST: "] 
  "30064771125" -> "68719476772"  [ label = "AST: "] 
  "47244640267" -> "25769803789"  [ label = "AST: "] 
  "25769803789" -> "30064771126"  [ label = "AST: "] 
  "25769803789" -> "146028888071"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771126" -> "90194313228"  [ label = "AST: "] 
  "30064771127" -> "68719476773"  [ label = "AST: "] 
  "146028888071" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "90194313229"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "68719476774"  [ label = "AST: "] 
  "47244640268" -> "30064771131"  [ label = "AST: "] 
  "47244640268" -> "25769803790"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771131" -> "90194313230"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771133" -> "68719476775"  [ label = "AST: "] 
  "25769803790" -> "30064771134"  [ label = "AST: "] 
  "25769803790" -> "146028888072"  [ label = "AST: "] 
  "30064771134" -> "30064771135"  [ label = "AST: "] 
  "30064771134" -> "90194313231"  [ label = "AST: "] 
  "30064771135" -> "68719476776"  [ label = "AST: "] 
  "146028888072" -> "30064771136"  [ label = "AST: "] 
  "30064771136" -> "90194313232"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771136" -> "90194313233"  [ label = "AST: "] 
  "30064771136" -> "30064771139"  [ label = "AST: "] 
  "30064771136" -> "90194313237"  [ label = "AST: "] 
  "30064771136" -> "30064771143"  [ label = "AST: "] 
  "30064771137" -> "30064771138"  [ label = "AST: "] 
  "30064771138" -> "68719476777"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771139" -> "90194313235"  [ label = "AST: "] 
  "30064771139" -> "90194313236"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771140" -> "90194313234"  [ label = "AST: "] 
  "30064771141" -> "30064771142"  [ label = "AST: "] 
  "30064771142" -> "68719476778"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771144" -> "68719476779"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771145" -> "68719476782"  [ label = "AST: "] 
  "30064771146" -> "30064771147"  [ label = "AST: "] 
  "30064771146" -> "68719476781"  [ label = "AST: "] 
  "30064771147" -> "68719476780"  [ label = "AST: "] 
  "30064771147" -> "55834574851"  [ label = "AST: "] 
  "47244640269" -> "30064771148"  [ label = "AST: "] 
  "47244640269" -> "25769803791"  [ label = "AST: "] 
  "47244640269" -> "47244640272"  [ label = "AST: "] 
  "30064771148" -> "30064771149"  [ label = "AST: "] 
  "30064771148" -> "30064771150"  [ label = "AST: "] 
  "30064771149" -> "68719476783"  [ label = "AST: "] 
  "30064771150" -> "68719476784"  [ label = "AST: "] 
  "30064771150" -> "55834574852"  [ label = "AST: "] 
  "25769803791" -> "94489280517"  [ label = "AST: "] 
  "25769803791" -> "30064771151"  [ label = "AST: "] 
  "25769803791" -> "47244640270"  [ label = "AST: "] 
  "30064771151" -> "68719476785"  [ label = "AST: "] 
  "30064771151" -> "30064771152"  [ label = "AST: "] 
  "30064771152" -> "68719476786"  [ label = "AST: "] 
  "47244640270" -> "25769803792"  [ label = "AST: "] 
  "47244640270" -> "30064771154"  [ label = "AST: "] 
  "47244640270" -> "30064771156"  [ label = "AST: "] 
  "47244640270" -> "25769803793"  [ label = "AST: "] 
  "25769803792" -> "94489280518"  [ label = "AST: "] 
  "25769803792" -> "30064771153"  [ label = "AST: "] 
  "30064771153" -> "68719476787"  [ label = "AST: "] 
  "30064771153" -> "90194313238"  [ label = "AST: "] 
  "30064771154" -> "68719476788"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771155" -> "68719476789"  [ label = "AST: "] 
  "30064771156" -> "68719476790"  [ label = "AST: "] 
  "25769803793" -> "94489280519"  [ label = "AST: "] 
  "25769803793" -> "30064771157"  [ label = "AST: "] 
  "25769803793" -> "47244640271"  [ label = "AST: "] 
  "25769803793" -> "30064771162"  [ label = "AST: "] 
  "30064771157" -> "68719476791"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771158" -> "68719476792"  [ label = "AST: "] 
  "47244640271" -> "30064771159"  [ label = "AST: "] 
  "47244640271" -> "25769803794"  [ label = "AST: "] 
  "30064771159" -> "68719476793"  [ label = "AST: "] 
  "30064771159" -> "30064771160"  [ label = "AST: "] 
  "30064771160" -> "90194313239"  [ label = "AST: "] 
  "25769803794" -> "146028888073"  [ label = "AST: "] 
  "146028888073" -> "30064771161"  [ label = "AST: "] 
  "30064771161" -> "90194313240"  [ label = "AST: "] 
  "30064771161" -> "68719476794"  [ label = "AST: "] 
  "30064771162" -> "68719476795"  [ label = "AST: "] 
  "30064771162" -> "30064771163"  [ label = "AST: "] 
  "30064771163" -> "68719476796"  [ label = "AST: "] 
  "47244640272" -> "25769803795"  [ label = "AST: "] 
  "25769803795" -> "47244640273"  [ label = "AST: "] 
  "47244640273" -> "30064771164"  [ label = "AST: "] 
  "47244640273" -> "25769803796"  [ label = "AST: "] 
  "47244640273" -> "47244640276"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771164" -> "30064771166"  [ label = "AST: "] 
  "30064771165" -> "68719476797"  [ label = "AST: "] 
  "30064771166" -> "68719476798"  [ label = "AST: "] 
  "30064771166" -> "55834574853"  [ label = "AST: "] 
  "25769803796" -> "94489280520"  [ label = "AST: "] 
  "25769803796" -> "30064771167"  [ label = "AST: "] 
  "25769803796" -> "47244640274"  [ label = "AST: "] 
  "30064771167" -> "68719476799"  [ label = "AST: "] 
  "30064771167" -> "30064771168"  [ label = "AST: "] 
  "30064771168" -> "68719476800"  [ label = "AST: "] 
  "47244640274" -> "25769803797"  [ label = "AST: "] 
  "47244640274" -> "30064771170"  [ label = "AST: "] 
  "47244640274" -> "30064771172"  [ label = "AST: "] 
  "47244640274" -> "25769803798"  [ label = "AST: "] 
  "25769803797" -> "94489280521"  [ label = "AST: "] 
  "25769803797" -> "30064771169"  [ label = "AST: "] 
  "30064771169" -> "68719476801"  [ label = "AST: "] 
  "30064771169" -> "90194313241"  [ label = "AST: "] 
  "30064771170" -> "68719476802"  [ label = "AST: "] 
  "30064771170" -> "30064771171"  [ label = "AST: "] 
  "30064771171" -> "68719476803"  [ label = "AST: "] 
  "30064771172" -> "68719476804"  [ label = "AST: "] 
  "25769803798" -> "94489280522"  [ label = "AST: "] 
  "25769803798" -> "30064771173"  [ label = "AST: "] 
  "25769803798" -> "47244640275"  [ label = "AST: "] 
  "25769803798" -> "30064771178"  [ label = "AST: "] 
  "30064771173" -> "68719476805"  [ label = "AST: "] 
  "30064771173" -> "30064771174"  [ label = "AST: "] 
  "30064771174" -> "68719476806"  [ label = "AST: "] 
  "47244640275" -> "30064771175"  [ label = "AST: "] 
  "47244640275" -> "25769803799"  [ label = "AST: "] 
  "30064771175" -> "68719476807"  [ label = "AST: "] 
  "30064771175" -> "30064771176"  [ label = "AST: "] 
  "30064771176" -> "90194313242"  [ label = "AST: "] 
  "25769803799" -> "146028888074"  [ label = "AST: "] 
  "146028888074" -> "30064771177"  [ label = "AST: "] 
  "30064771177" -> "90194313243"  [ label = "AST: "] 
  "30064771177" -> "68719476808"  [ label = "AST: "] 
  "30064771178" -> "68719476809"  [ label = "AST: "] 
  "30064771178" -> "30064771179"  [ label = "AST: "] 
  "30064771179" -> "68719476810"  [ label = "AST: "] 
  "47244640276" -> "25769803800"  [ label = "AST: "] 
  "25769803800" -> "30064771180"  [ label = "AST: "] 
  "25769803800" -> "146028888075"  [ label = "AST: "] 
  "30064771180" -> "30064771181"  [ label = "AST: "] 
  "30064771180" -> "90194313244"  [ label = "AST: "] 
  "30064771181" -> "68719476811"  [ label = "AST: "] 
  "146028888075" -> "30064771182"  [ label = "AST: "] 
  "30064771182" -> "90194313245"  [ label = "AST: "] 
  "30064771182" -> "30064771183"  [ label = "AST: "] 
  "30064771183" -> "30064771184"  [ label = "AST: "] 
  "30064771184" -> "68719476812"  [ label = "AST: "] 
  "146028888076" -> "30064771185"  [ label = "AST: "] 
  "30064771185" -> "68719476813"  [ label = "AST: "] 
  "30064771185" -> "68719476814"  [ label = "AST: "] 
  "30064771145" -> "30064771149"  [ label = "CFG: "] 
  "146028888076" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771072" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771078"  [ label = "CFG: "] 
  "30064771076" -> "30064771099"  [ label = "CFG: "] 
  "30064771097" -> "30064771101"  [ label = "CFG: "] 
  "30064771097" -> "30064771133"  [ label = "CFG: "] 
  "30064771131" -> "30064771135"  [ label = "CFG: "] 
  "30064771131" -> "55834574851"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771148" -> "30064771152"  [ label = "CFG: "] 
  "30064771148" -> "30064771165"  [ label = "CFG: "] 
  "30064771185" -> "146028888076"  [ label = "CFG: "] 
  "30064771073" -> "30064771076"  [ label = "CFG: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "55834574848"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "30064771134" -> "30064771138"  [ label = "CFG: "] 
  "146028888072" -> "128849018880"  [ label = "CFG: "] 
  "30064771147" -> "30064771146"  [ label = "CFG: "] 
  "30064771149" -> "55834574852"  [ label = "CFG: "] 
  "30064771150" -> "30064771148"  [ label = "CFG: "] 
  "30064771151" -> "30064771153"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771077" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771082" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771092" -> "30064771095"  [ label = "CFG: "] 
  "30064771092" -> "30064771096"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771096" -> "146028888066"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771100" -> "30064771104"  [ label = "CFG: "] 
  "30064771100" -> "30064771114"  [ label = "CFG: "] 
  "30064771133" -> "30064771132"  [ label = "CFG: "] 
  "30064771135" -> "30064771134"  [ label = "CFG: "] 
  "30064771136" -> "146028888072"  [ label = "CFG: "] 
  "55834574851" -> "30064771147"  [ label = "CFG: "] 
  "55834574852" -> "30064771150"  [ label = "CFG: "] 
  "30064771152" -> "30064771151"  [ label = "CFG: "] 
  "30064771154" -> "30064771158"  [ label = "CFG: "] 
  "30064771154" -> "30064771185"  [ label = "CFG: "] 
  "30064771156" -> "30064771155"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771101" -> "55834574849"  [ label = "CFG: "] 
  "30064771102" -> "30064771100"  [ label = "CFG: "] 
  "30064771103" -> "30064771106"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771137" -> "30064771142"  [ label = "CFG: "] 
  "30064771139" -> "30064771144"  [ label = "CFG: "] 
  "30064771143" -> "30064771136"  [ label = "CFG: "] 
  "30064771153" -> "30064771155"  [ label = "CFG: "] 
  "30064771155" -> "30064771154"  [ label = "CFG: "] 
  "30064771157" -> "30064771160"  [ label = "CFG: "] 
  "30064771162" -> "30064771156"  [ label = "CFG: "] 
  "30064771164" -> "30064771168"  [ label = "CFG: "] 
  "30064771164" -> "30064771181"  [ label = "CFG: "] 
  "30064771079" -> "146028888064"  [ label = "CFG: "] 
  "30064771084" -> "146028888065"  [ label = "CFG: "] 
  "55834574848" -> "30064771089"  [ label = "CFG: "] 
  "55834574849" -> "30064771102"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771105" -> "30064771109"  [ label = "CFG: "] 
  "30064771105" -> "30064771112"  [ label = "CFG: "] 
  "30064771112" -> "146028888068"  [ label = "CFG: "] 
  "30064771138" -> "30064771137"  [ label = "CFG: "] 
  "30064771140" -> "30064771139"  [ label = "CFG: "] 
  "30064771144" -> "30064771143"  [ label = "CFG: "] 
  "30064771158" -> "30064771157"  [ label = "CFG: "] 
  "30064771159" -> "30064771161"  [ label = "CFG: "] 
  "30064771159" -> "30064771163"  [ label = "CFG: "] 
  "30064771163" -> "30064771162"  [ label = "CFG: "] 
  "30064771165" -> "55834574853"  [ label = "CFG: "] 
  "30064771166" -> "30064771164"  [ label = "CFG: "] 
  "30064771167" -> "30064771169"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "30064771105"  [ label = "CFG: "] 
  "30064771108" -> "30064771111"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771113" -> "30064771117"  [ label = "CFG: "] 
  "30064771113" -> "30064771127"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "30064771160" -> "30064771159"  [ label = "CFG: "] 
  "146028888073" -> "128849018880"  [ label = "CFG: "] 
  "55834574853" -> "30064771166"  [ label = "CFG: "] 
  "30064771168" -> "30064771167"  [ label = "CFG: "] 
  "30064771170" -> "30064771174"  [ label = "CFG: "] 
  "30064771170" -> "30064771185"  [ label = "CFG: "] 
  "30064771172" -> "30064771171"  [ label = "CFG: "] 
  "30064771180" -> "30064771184"  [ label = "CFG: "] 
  "146028888075" -> "128849018880"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "30064771110" -> "146028888067"  [ label = "CFG: "] 
  "30064771114" -> "55834574850"  [ label = "CFG: "] 
  "30064771115" -> "30064771113"  [ label = "CFG: "] 
  "30064771116" -> "30064771119"  [ label = "CFG: "] 
  "146028888070" -> "128849018880"  [ label = "CFG: "] 
  "30064771142" -> "30064771141"  [ label = "CFG: "] 
  "30064771161" -> "146028888073"  [ label = "CFG: "] 
  "30064771169" -> "30064771171"  [ label = "CFG: "] 
  "30064771171" -> "30064771170"  [ label = "CFG: "] 
  "30064771173" -> "30064771176"  [ label = "CFG: "] 
  "30064771178" -> "30064771172"  [ label = "CFG: "] 
  "30064771181" -> "30064771180"  [ label = "CFG: "] 
  "30064771182" -> "146028888075"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "55834574850" -> "30064771115"  [ label = "CFG: "] 
  "30064771117" -> "30064771116"  [ label = "CFG: "] 
  "30064771118" -> "30064771122"  [ label = "CFG: "] 
  "30064771118" -> "30064771125"  [ label = "CFG: "] 
  "30064771125" -> "146028888070"  [ label = "CFG: "] 
  "30064771126" -> "30064771130"  [ label = "CFG: "] 
  "146028888071" -> "128849018880"  [ label = "CFG: "] 
  "30064771174" -> "30064771173"  [ label = "CFG: "] 
  "30064771175" -> "30064771177"  [ label = "CFG: "] 
  "30064771175" -> "30064771179"  [ label = "CFG: "] 
  "30064771179" -> "30064771178"  [ label = "CFG: "] 
  "30064771183" -> "30064771182"  [ label = "CFG: "] 
  "30064771119" -> "30064771120"  [ label = "CFG: "] 
  "30064771120" -> "30064771118"  [ label = "CFG: "] 
  "30064771121" -> "30064771124"  [ label = "CFG: "] 
  "146028888069" -> "128849018880"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771128" -> "146028888071"  [ label = "CFG: "] 
  "30064771176" -> "30064771175"  [ label = "CFG: "] 
  "146028888074" -> "128849018880"  [ label = "CFG: "] 
  "30064771184" -> "30064771183"  [ label = "CFG: "] 
  "30064771122" -> "30064771121"  [ label = "CFG: "] 
  "30064771123" -> "146028888069"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771177" -> "146028888074"  [ label = "CFG: "] 
  "30064771124" -> "30064771123"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888072" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888076" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888069" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888073" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888070" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888074" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888071" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888075" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: treat_unknown_scalar_tensor_as_unknown_shape"] 
  "30064771072" -> "128849018880"  [ label = "DDG: !treat_unknown_scalar_tensor_as_unknown_shape"] 
  "30064771074" -> "128849018880"  [ label = "DDG: &amp;tensor_shape"] 
  "30064771073" -> "128849018880"  [ label = "DDG: WithRank(tensor_shape, 1, &amp;tensor_shape)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: TF_RETURN_IF_ERROR(WithRank(tensor_shape, 1, &amp;tensor_shape))"] 
  "30064771076" -> "128849018880"  [ label = "DDG: t"] 
  "30064771076" -> "128849018880"  [ label = "DDG: t == nullptr"] 
  "30064771078" -> "128849018880"  [ label = "DDG: tensor_shape"] 
  "30064771077" -> "128849018880"  [ label = "DDG: Rank(tensor_shape)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: Rank(tensor_shape) == 0"] 
  "30064771079" -> "128849018880"  [ label = "DDG: out"] 
  "30064771079" -> "128849018880"  [ label = "DDG: ReturnUnknownShape(out)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "30064771185" -> "146028888076"  [ label = "DDG: ReturnCreatedShape(dims, out)"] 
  "30064771146" -> "30064771145"  [ label = "DDG: std::vector"] 
  "30064771146" -> "30064771145"  [ label = "DDG: DimensionHandle"] 
  "111669149697" -> "30064771145"  [ label = "DDG: "] 
  "115964116992" -> "30064771072"  [ label = "DDG: treat_unknown_scalar_tensor_as_unknown_shape"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "115964116993" -> "30064771076"  [ label = "DDG: t"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: tensor_shape"] 
  "30064771081" -> "30064771080"  [ label = "DDG: 0"] 
  "30064771086" -> "30064771085"  [ label = "DDG: shape_dim"] 
  "30064771096" -> "146028888066"  [ label = "DDG: ReturnCreatedShape(dims, out)"] 
  "30064771098" -> "30064771097"  [ label = "DDG: t-&gt;shape()"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771132" -> "30064771131"  [ label = "DDG: t-&gt;shape()"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771136" -> "146028888072"  [ label = "DDG: errors::InvalidArgument(
        &quot;Input tensor must be rank 1, but was rank &quot;, t-&gt;shape().dims(), &quot;.&quot;,
        ((t-&gt;shape().dims() == 0)
             ? &quot;If it is rank 0 rank 0 it must have statically known value -1 &quot;
               &quot;(representing an unknown shape). &quot;
             : &quot; &quot;),
        &quot;Saw tensor shape &quot;, t-&gt;shape().DebugString())"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771149" -> "30064771148"  [ label = "DDG: t"] 
  "30064771152" -> "30064771151"  [ label = "DDG: t"] 
  "30064771145" -> "30064771185"  [ label = "DDG: dims"] 
  "30064771178" -> "30064771185"  [ label = "DDG: dims"] 
  "30064771162" -> "30064771185"  [ label = "DDG: dims"] 
  "111669149697" -> "30064771185"  [ label = "DDG: "] 
  "115964116995" -> "30064771185"  [ label = "DDG: out"] 
  "30064771074" -> "30064771073"  [ label = "DDG: tensor_shape"] 
  "30064771074" -> "30064771073"  [ label = "DDG: 1"] 
  "30064771074" -> "30064771073"  [ label = "DDG: &amp;tensor_shape"] 
  "30064771088" -> "30064771087"  [ label = "DDG: std::vector"] 
  "30064771088" -> "30064771087"  [ label = "DDG: DimensionHandle"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771087" -> "30064771090"  [ label = "DDG: dims"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771085" -> "30064771090"  [ label = "DDG: num_dims"] 
  "30064771099" -> "30064771098"  [ label = "DDG: t"] 
  "30064771133" -> "30064771132"  [ label = "DDG: t"] 
  "30064771133" -> "30064771149"  [ label = "DDG: t"] 
  "111669149697" -> "30064771149"  [ label = "DDG: "] 
  "115964116994" -> "30064771074"  [ label = "DDG: tensor_shape"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: tensor_shape"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771079" -> "146028888064"  [ label = "DDG: ReturnUnknownShape(out)"] 
  "30064771074" -> "30064771081"  [ label = "DDG: &amp;tensor_shape"] 
  "30064771078" -> "30064771081"  [ label = "DDG: tensor_shape"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: shape_dim"] 
  "30064771084" -> "146028888065"  [ label = "DDG: ReturnUnknownShape(out)"] 
  "30064771083" -> "30064771086"  [ label = "DDG: shape_dim"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771091" -> "30064771092"  [ label = "DDG: i"] 
  "30064771093" -> "30064771092"  [ label = "DDG: i"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771090" -> "30064771092"  [ label = "DDG: num_dims"] 
  "30064771092" -> "30064771093"  [ label = "DDG: i"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771090" -> "30064771094"  [ label = "DDG: dims"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771090" -> "30064771096"  [ label = "DDG: dims"] 
  "30064771094" -> "30064771096"  [ label = "DDG: dims"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "115964116995" -> "30064771096"  [ label = "DDG: out"] 
  "30064771076" -> "30064771099"  [ label = "DDG: t"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: t"] 
  "30064771104" -> "30064771103"  [ label = "DDG: t"] 
  "30064771112" -> "146028888068"  [ label = "DDG: ReturnUnknownShape(out)"] 
  "30064771099" -> "30064771133"  [ label = "DDG: t"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771140" -> "30064771136"  [ label = "DDG: t-&gt;shape().dims()"] 
  "30064771137" -> "30064771136"  [ label = "DDG: t-&gt;shape()"] 
  "30064771143" -> "30064771136"  [ label = "DDG: t-&gt;shape()"] 
  "30064771149" -> "30064771152"  [ label = "DDG: t"] 
  "111669149697" -> "30064771152"  [ label = "DDG: "] 
  "111669149697" -> "30064771153"  [ label = "DDG: "] 
  "30064771153" -> "30064771154"  [ label = "DDG: i"] 
  "30064771156" -> "30064771154"  [ label = "DDG: i"] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "30064771155" -> "30064771154"  [ label = "DDG: flat_t"] 
  "30064771158" -> "30064771156"  [ label = "DDG: i"] 
  "111669149697" -> "30064771156"  [ label = "DDG: "] 
  "30064771158" -> "30064771157"  [ label = "DDG: i"] 
  "115964116994" -> "30064771078"  [ label = "DDG: tensor_shape"] 
  "30064771074" -> "30064771078"  [ label = "DDG: tensor_shape"] 
  "30064771074" -> "30064771078"  [ label = "DDG: &amp;tensor_shape"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771080" -> "30064771083"  [ label = "DDG: shape_dim"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771099" -> "30064771101"  [ label = "DDG: t"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771138" -> "30064771137"  [ label = "DDG: t"] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771144" -> "30064771143"  [ label = "DDG: t"] 
  "30064771151" -> "30064771155"  [ label = "DDG: flat_t"] 
  "111669149697" -> "30064771155"  [ label = "DDG: "] 
  "30064771145" -> "30064771162"  [ label = "DDG: dims"] 
  "111669149697" -> "30064771162"  [ label = "DDG: "] 
  "30064771163" -> "30064771162"  [ label = "DDG: val"] 
  "30064771165" -> "30064771164"  [ label = "DDG: t"] 
  "30064771168" -> "30064771167"  [ label = "DDG: t"] 
  "115964116995" -> "30064771079"  [ label = "DDG: out"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "115964116995" -> "30064771084"  [ label = "DDG: out"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771101" -> "30064771104"  [ label = "DDG: t"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771107" -> "30064771105"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771110" -> "146028888067"  [ label = "DDG: errors::InvalidArgument(
            &quot;Input tensor must be rank 1, or if its rank 0 it must have value &quot;
            &quot;-1 &quot;
            &quot;(representing an unknown shape).  Saw value: &quot;,
            flat_t())"] 
  "115964116995" -> "30064771112"  [ label = "DDG: out"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771133" -> "30064771138"  [ label = "DDG: t"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771141" -> "30064771140"  [ label = "DDG: t-&gt;shape()"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771142" -> "30064771144"  [ label = "DDG: t"] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "30064771154" -> "30064771158"  [ label = "DDG: i"] 
  "111669149697" -> "30064771158"  [ label = "DDG: "] 
  "30064771157" -> "30064771159"  [ label = "DDG: val"] 
  "111669149697" -> "30064771159"  [ label = "DDG: "] 
  "30064771160" -> "30064771159"  [ label = "DDG: 1"] 
  "30064771161" -> "146028888073"  [ label = "DDG: errors::InvalidArgument(
            &quot;Invalid value in tensor used for shape: &quot;, val)"] 
  "30064771159" -> "30064771163"  [ label = "DDG: val"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "30064771149" -> "30064771165"  [ label = "DDG: t"] 
  "111669149697" -> "30064771165"  [ label = "DDG: "] 
  "111669149697" -> "30064771180"  [ label = "DDG: "] 
  "30064771182" -> "146028888075"  [ label = "DDG: errors::InvalidArgument(
        &quot;Input tensor must be int32 or int64, but was &quot;,
        DataTypeString(t-&gt;dtype()))"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771114" -> "30064771113"  [ label = "DDG: t"] 
  "30064771117" -> "30064771116"  [ label = "DDG: t"] 
  "30064771125" -> "146028888070"  [ label = "DDG: ReturnUnknownShape(out)"] 
  "30064771142" -> "30064771141"  [ label = "DDG: t"] 
  "111669149697" -> "30064771160"  [ label = "DDG: "] 
  "30064771165" -> "30064771168"  [ label = "DDG: t"] 
  "111669149697" -> "30064771168"  [ label = "DDG: "] 
  "111669149697" -> "30064771169"  [ label = "DDG: "] 
  "30064771169" -> "30064771170"  [ label = "DDG: i"] 
  "30064771172" -> "30064771170"  [ label = "DDG: i"] 
  "111669149697" -> "30064771170"  [ label = "DDG: "] 
  "30064771171" -> "30064771170"  [ label = "DDG: flat_t"] 
  "30064771174" -> "30064771172"  [ label = "DDG: i"] 
  "111669149697" -> "30064771172"  [ label = "DDG: "] 
  "30064771174" -> "30064771173"  [ label = "DDG: i"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771101" -> "30064771114"  [ label = "DDG: t"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "111669149697" -> "30064771126"  [ label = "DDG: "] 
  "30064771128" -> "146028888071"  [ label = "DDG: errors::InvalidArgument(
          &quot;Input tensor must be int32 or int64, but was &quot;,
          DataTypeString(t-&gt;dtype()))"] 
  "30064771138" -> "30064771142"  [ label = "DDG: t"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "111669149697" -> "30064771161"  [ label = "DDG: "] 
  "30064771159" -> "30064771161"  [ label = "DDG: val"] 
  "30064771167" -> "30064771171"  [ label = "DDG: flat_t"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "30064771145" -> "30064771178"  [ label = "DDG: dims"] 
  "111669149697" -> "30064771178"  [ label = "DDG: "] 
  "30064771179" -> "30064771178"  [ label = "DDG: val"] 
  "111669149697" -> "30064771182"  [ label = "DDG: "] 
  "30064771183" -> "30064771182"  [ label = "DDG: t-&gt;dtype()"] 
  "30064771114" -> "30064771117"  [ label = "DDG: t"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "30064771120" -> "30064771118"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771123" -> "146028888069"  [ label = "DDG: errors::InvalidArgument(
            &quot;Input tensor must be rank 1, or if its rank 0 it must have value &quot;
            &quot;-1 &quot;
            &quot;(representing an unknown shape).  Saw value: &quot;,
            flat_t())"] 
  "115964116995" -> "30064771125"  [ label = "DDG: out"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771170" -> "30064771174"  [ label = "DDG: i"] 
  "111669149697" -> "30064771174"  [ label = "DDG: "] 
  "30064771173" -> "30064771175"  [ label = "DDG: val"] 
  "111669149697" -> "30064771175"  [ label = "DDG: "] 
  "30064771176" -> "30064771175"  [ label = "DDG: 1"] 
  "30064771177" -> "146028888074"  [ label = "DDG: errors::InvalidArgument(
            &quot;Invalid value in tensor used for shape: &quot;, val)"] 
  "30064771175" -> "30064771179"  [ label = "DDG: val"] 
  "111669149697" -> "30064771179"  [ label = "DDG: "] 
  "30064771184" -> "30064771183"  [ label = "DDG: t"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: t-&gt;dtype()"] 
  "111669149697" -> "30064771176"  [ label = "DDG: "] 
  "30064771165" -> "30064771184"  [ label = "DDG: t"] 
  "111669149697" -> "30064771184"  [ label = "DDG: "] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771130" -> "30064771129"  [ label = "DDG: t"] 
  "111669149697" -> "30064771177"  [ label = "DDG: "] 
  "30064771175" -> "30064771177"  [ label = "DDG: val"] 
  "30064771114" -> "30064771130"  [ label = "DDG: t"] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "30064771072" -> "30064771073"  [ label = "CDG: "] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771076" -> "30064771097"  [ label = "CDG: "] 
  "30064771076" -> "30064771098"  [ label = "CDG: "] 
  "30064771076" -> "30064771099"  [ label = "CDG: "] 
  "30064771076" -> "30064771077"  [ label = "CDG: "] 
  "30064771076" -> "30064771078"  [ label = "CDG: "] 
  "30064771097" -> "55834574849"  [ label = "CDG: "] 
  "30064771097" -> "30064771131"  [ label = "CDG: "] 
  "30064771097" -> "30064771132"  [ label = "CDG: "] 
  "30064771097" -> "30064771133"  [ label = "CDG: "] 
  "30064771097" -> "30064771100"  [ label = "CDG: "] 
  "30064771097" -> "30064771101"  [ label = "CDG: "] 
  "30064771097" -> "30064771102"  [ label = "CDG: "] 
  "30064771131" -> "55834574851"  [ label = "CDG: "] 
  "30064771131" -> "55834574852"  [ label = "CDG: "] 
  "30064771131" -> "146028888072"  [ label = "CDG: "] 
  "30064771131" -> "30064771144"  [ label = "CDG: "] 
  "30064771131" -> "30064771145"  [ label = "CDG: "] 
  "30064771131" -> "30064771146"  [ label = "CDG: "] 
  "30064771131" -> "30064771147"  [ label = "CDG: "] 
  "30064771131" -> "30064771148"  [ label = "CDG: "] 
  "30064771131" -> "30064771149"  [ label = "CDG: "] 
  "30064771131" -> "30064771150"  [ label = "CDG: "] 
  "30064771131" -> "30064771134"  [ label = "CDG: "] 
  "30064771131" -> "30064771135"  [ label = "CDG: "] 
  "30064771131" -> "30064771136"  [ label = "CDG: "] 
  "30064771131" -> "30064771137"  [ label = "CDG: "] 
  "30064771131" -> "30064771138"  [ label = "CDG: "] 
  "30064771131" -> "30064771139"  [ label = "CDG: "] 
  "30064771131" -> "30064771140"  [ label = "CDG: "] 
  "30064771131" -> "30064771141"  [ label = "CDG: "] 
  "30064771131" -> "30064771142"  [ label = "CDG: "] 
  "30064771131" -> "30064771143"  [ label = "CDG: "] 
  "30064771148" -> "55834574853"  [ label = "CDG: "] 
  "30064771148" -> "30064771164"  [ label = "CDG: "] 
  "30064771148" -> "30064771165"  [ label = "CDG: "] 
  "30064771148" -> "30064771166"  [ label = "CDG: "] 
  "30064771148" -> "30064771151"  [ label = "CDG: "] 
  "30064771148" -> "30064771152"  [ label = "CDG: "] 
  "30064771148" -> "30064771153"  [ label = "CDG: "] 
  "30064771148" -> "30064771154"  [ label = "CDG: "] 
  "30064771148" -> "30064771155"  [ label = "CDG: "] 
  "30064771077" -> "146028888064"  [ label = "CDG: "] 
  "30064771077" -> "30064771080"  [ label = "CDG: "] 
  "30064771077" -> "30064771081"  [ label = "CDG: "] 
  "30064771077" -> "30064771082"  [ label = "CDG: "] 
  "30064771077" -> "30064771083"  [ label = "CDG: "] 
  "30064771077" -> "30064771079"  [ label = "CDG: "] 
  "30064771082" -> "55834574848"  [ label = "CDG: "] 
  "30064771082" -> "146028888065"  [ label = "CDG: "] 
  "30064771082" -> "146028888066"  [ label = "CDG: "] 
  "30064771082" -> "30064771096"  [ label = "CDG: "] 
  "30064771082" -> "30064771084"  [ label = "CDG: "] 
  "30064771082" -> "30064771085"  [ label = "CDG: "] 
  "30064771082" -> "30064771086"  [ label = "CDG: "] 
  "30064771082" -> "30064771087"  [ label = "CDG: "] 
  "30064771082" -> "30064771088"  [ label = "CDG: "] 
  "30064771082" -> "30064771089"  [ label = "CDG: "] 
  "30064771082" -> "30064771090"  [ label = "CDG: "] 
  "30064771082" -> "30064771091"  [ label = "CDG: "] 
  "30064771082" -> "30064771092"  [ label = "CDG: "] 
  "30064771092" -> "30064771092"  [ label = "CDG: "] 
  "30064771092" -> "30064771093"  [ label = "CDG: "] 
  "30064771092" -> "30064771094"  [ label = "CDG: "] 
  "30064771092" -> "30064771095"  [ label = "CDG: "] 
  "30064771100" -> "55834574850"  [ label = "CDG: "] 
  "30064771100" -> "30064771113"  [ label = "CDG: "] 
  "30064771100" -> "30064771114"  [ label = "CDG: "] 
  "30064771100" -> "30064771115"  [ label = "CDG: "] 
  "30064771100" -> "30064771103"  [ label = "CDG: "] 
  "30064771100" -> "30064771104"  [ label = "CDG: "] 
  "30064771100" -> "30064771105"  [ label = "CDG: "] 
  "30064771100" -> "30064771106"  [ label = "CDG: "] 
  "30064771100" -> "30064771107"  [ label = "CDG: "] 
  "30064771154" -> "146028888076"  [ label = "CDG: "] 
  "30064771154" -> "30064771185"  [ label = "CDG: "] 
  "30064771154" -> "30064771160"  [ label = "CDG: "] 
  "30064771154" -> "30064771157"  [ label = "CDG: "] 
  "30064771154" -> "30064771158"  [ label = "CDG: "] 
  "30064771154" -> "30064771159"  [ label = "CDG: "] 
  "30064771164" -> "146028888075"  [ label = "CDG: "] 
  "30064771164" -> "30064771180"  [ label = "CDG: "] 
  "30064771164" -> "30064771181"  [ label = "CDG: "] 
  "30064771164" -> "30064771182"  [ label = "CDG: "] 
  "30064771164" -> "30064771183"  [ label = "CDG: "] 
  "30064771164" -> "30064771184"  [ label = "CDG: "] 
  "30064771164" -> "30064771167"  [ label = "CDG: "] 
  "30064771164" -> "30064771168"  [ label = "CDG: "] 
  "30064771164" -> "30064771169"  [ label = "CDG: "] 
  "30064771164" -> "30064771170"  [ label = "CDG: "] 
  "30064771164" -> "30064771171"  [ label = "CDG: "] 
  "30064771105" -> "146028888067"  [ label = "CDG: "] 
  "30064771105" -> "146028888068"  [ label = "CDG: "] 
  "30064771105" -> "30064771112"  [ label = "CDG: "] 
  "30064771105" -> "30064771108"  [ label = "CDG: "] 
  "30064771105" -> "30064771109"  [ label = "CDG: "] 
  "30064771105" -> "30064771110"  [ label = "CDG: "] 
  "30064771105" -> "30064771111"  [ label = "CDG: "] 
  "30064771159" -> "146028888073"  [ label = "CDG: "] 
  "30064771159" -> "30064771161"  [ label = "CDG: "] 
  "30064771159" -> "30064771162"  [ label = "CDG: "] 
  "30064771159" -> "30064771163"  [ label = "CDG: "] 
  "30064771159" -> "30064771154"  [ label = "CDG: "] 
  "30064771159" -> "30064771155"  [ label = "CDG: "] 
  "30064771159" -> "30064771156"  [ label = "CDG: "] 
  "30064771113" -> "146028888071"  [ label = "CDG: "] 
  "30064771113" -> "30064771128"  [ label = "CDG: "] 
  "30064771113" -> "30064771129"  [ label = "CDG: "] 
  "30064771113" -> "30064771130"  [ label = "CDG: "] 
  "30064771113" -> "30064771116"  [ label = "CDG: "] 
  "30064771113" -> "30064771117"  [ label = "CDG: "] 
  "30064771113" -> "30064771118"  [ label = "CDG: "] 
  "30064771113" -> "30064771119"  [ label = "CDG: "] 
  "30064771113" -> "30064771120"  [ label = "CDG: "] 
  "30064771113" -> "30064771126"  [ label = "CDG: "] 
  "30064771113" -> "30064771127"  [ label = "CDG: "] 
  "30064771170" -> "146028888076"  [ label = "CDG: "] 
  "30064771170" -> "30064771176"  [ label = "CDG: "] 
  "30064771170" -> "30064771185"  [ label = "CDG: "] 
  "30064771170" -> "30064771173"  [ label = "CDG: "] 
  "30064771170" -> "30064771174"  [ label = "CDG: "] 
  "30064771170" -> "30064771175"  [ label = "CDG: "] 
  "30064771118" -> "146028888069"  [ label = "CDG: "] 
  "30064771118" -> "146028888070"  [ label = "CDG: "] 
  "30064771118" -> "30064771121"  [ label = "CDG: "] 
  "30064771118" -> "30064771122"  [ label = "CDG: "] 
  "30064771118" -> "30064771123"  [ label = "CDG: "] 
  "30064771118" -> "30064771124"  [ label = "CDG: "] 
  "30064771118" -> "30064771125"  [ label = "CDG: "] 
  "30064771175" -> "146028888074"  [ label = "CDG: "] 
  "30064771175" -> "30064771177"  [ label = "CDG: "] 
  "30064771175" -> "30064771178"  [ label = "CDG: "] 
  "30064771175" -> "30064771179"  [ label = "CDG: "] 
  "30064771175" -> "30064771170"  [ label = "CDG: "] 
  "30064771175" -> "30064771171"  [ label = "CDG: "] 
  "30064771175" -> "30064771172"  [ label = "CDG: "] 
}
"""
)
