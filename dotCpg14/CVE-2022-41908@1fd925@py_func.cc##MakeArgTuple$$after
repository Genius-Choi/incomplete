[33mval[0m [36mres992[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "MakeArgTuple" {  
"111669149697" [label = <(METHOD,MakeArgTuple)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const PyCall* call)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,TFE_Context* ctx)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,PyObject** tuple)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
  int64_t n = call-&gt;ins.size();
  PyObject* l...,{
  int64_t n = call-&gt;ins.size();
  PyObject* l...)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,int64_t n: int64_t)<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,n = call-&gt;ins.size())<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,n,n = call-&gt;ins.size())<SUB>2</SUB>> ]
"30064771073" [label = <(size,call-&gt;ins.size())<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.indirectFieldAccess,call-&gt;ins)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,call,call-&gt;ins.size())<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,ins,ins)<SUB>2</SUB>> ]
"94489280513" [label = <(LOCAL,PyObject* lst: PyObject*)<SUB>3</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,* lst = PyList_New(n))<SUB>3</SUB>> ]
"68719476738" [label = <(IDENTIFIER,lst,* lst = PyList_New(n))<SUB>3</SUB>> ]
"30064771076" [label = <(PyList_New,PyList_New(n))<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,n,PyList_New(n))<SUB>3</SUB>> ]
"30064771077" [label = <(CHECK,CHECK(lst))<SUB>4</SUB>> ]
"68719476740" [label = <(IDENTIFIER,lst,CHECK(lst))<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,const char* device_name: char*)<SUB>8</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,* device_name = nullptr)<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,device_name,* device_name = nullptr)<SUB>8</SUB>> ]
"90194313216" [label = <(LITERAL,nullptr,* device_name = nullptr)<SUB>8</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (call-&gt;device != nullptr &amp;&amp; !IsCPUDevice(call-&gt;device)))<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.logicalAnd,call-&gt;device != nullptr &amp;&amp; !IsCPUDevice(call-&gt;d...)<SUB>10</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.notEquals,call-&gt;device != nullptr)<SUB>10</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.indirectFieldAccess,call-&gt;device)<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,call,call-&gt;device != nullptr)<SUB>10</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,device,device)<SUB>10</SUB>> ]
"90194313217" [label = <(LITERAL,nullptr,call-&gt;device != nullptr)<SUB>10</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.logicalNot,!IsCPUDevice(call-&gt;device))<SUB>10</SUB>> ]
"30064771083" [label = <(IsCPUDevice,IsCPUDevice(call-&gt;device))<SUB>10</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.indirectFieldAccess,call-&gt;device)<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,call,IsCPUDevice(call-&gt;device))<SUB>10</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,device,device)<SUB>10</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,device_name = call-&gt;device-&gt;name().c_str())<SUB>11</SUB>> ]
"68719476744" [label = <(IDENTIFIER,device_name,device_name = call-&gt;device-&gt;name().c_str())<SUB>11</SUB>> ]
"30064771086" [label = <(c_str,call-&gt;device-&gt;name().c_str())<SUB>11</SUB>> ]
"30064771087" [label = <(name,call-&gt;device-&gt;name())<SUB>11</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.indirectFieldAccess,call-&gt;device)<SUB>11</SUB>> ]
"68719476745" [label = <(IDENTIFIER,call,call-&gt;device-&gt;name())<SUB>11</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,device,device)<SUB>11</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FOR,for (int64_t i = 0;i &lt; n;++i))<SUB>13</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>> ]
"94489280515" [label = <(LOCAL,int64_t i: int64_t)<SUB>13</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,i,i = 0)<SUB>13</SUB>> ]
"90194313218" [label = <(LITERAL,0,i = 0)<SUB>13</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.lessThan,i &lt; n)<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>> ]
"68719476748" [label = <(IDENTIFIER,n,i &lt; n)<SUB>13</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>13</SUB>> ]
"68719476749" [label = <(IDENTIFIER,i,++i)<SUB>13</SUB>> ]
"25769803780" [label = <(BLOCK,{
    PyObject* arg = nullptr;
    if (call-&gt;ea...,{
    PyObject* arg = nullptr;
    if (call-&gt;ea...)<SUB>13</SUB>> ]
"94489280516" [label = <(LOCAL,PyObject* arg: PyObject*)<SUB>14</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.assignment,* arg = nullptr)<SUB>14</SUB>> ]
"68719476750" [label = <(IDENTIFIER,arg,* arg = nullptr)<SUB>14</SUB>> ]
"90194313219" [label = <(LITERAL,nullptr,* arg = nullptr)<SUB>14</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (call-&gt;eager))<SUB>15</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.indirectFieldAccess,call-&gt;eager)<SUB>15</SUB>> ]
"68719476751" [label = <(IDENTIFIER,call,if (call-&gt;eager))<SUB>15</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,eager,eager)<SUB>15</SUB>> ]
"25769803781" [label = <(BLOCK,{
      Tensor t = call-&gt;ins[i];
      arg = Ea...,{
      Tensor t = call-&gt;ins[i];
      arg = Ea...)<SUB>15</SUB>> ]
"94489280517" [label = <(LOCAL,Tensor t: Tensor)<SUB>16</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,t = call-&gt;ins[i])<SUB>16</SUB>> ]
"68719476752" [label = <(IDENTIFIER,t,t = call-&gt;ins[i])<SUB>16</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.indirectIndexAccess,call-&gt;ins[i])<SUB>16</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.indirectFieldAccess,call-&gt;ins)<SUB>16</SUB>> ]
"68719476753" [label = <(IDENTIFIER,call,t = call-&gt;ins[i])<SUB>16</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,ins,ins)<SUB>16</SUB>> ]
"68719476754" [label = <(IDENTIFIER,i,t = call-&gt;ins[i])<SUB>16</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,arg = EagerTensorFromHandle(tensorflow::wrap(
 ...)<SUB>17</SUB>> ]
"68719476755" [label = <(IDENTIFIER,arg,arg = EagerTensorFromHandle(tensorflow::wrap(
 ...)<SUB>17</SUB>> ]
"30064771098" [label = <(EagerTensorFromHandle,EagerTensorFromHandle(tensorflow::wrap(
       ...)<SUB>17</SUB>> ]
"30064771099" [label = <(wrap,tensorflow::wrap(
          tensorflow::unwrap(...)<SUB>17</SUB>> ]
"30064771100" [label = <(CreateLocalHandleFromTFTensor,tensorflow::unwrap(ctx)-&gt;CreateLocalHandleFromT...)<SUB>18</SUB>> ]
"30064771101" [label = <(unwrap,tensorflow::unwrap(ctx))<SUB>18</SUB>> ]
"68719476756" [label = <(IDENTIFIER,ctx,tensorflow::unwrap(ctx))<SUB>18</SUB>> ]
"68719476757" [label = <(IDENTIFIER,t,tensorflow::unwrap(ctx)-&gt;CreateLocalHandleFromT...)<SUB>18</SUB>> ]
"68719476758" [label = <(IDENTIFIER,device_name,tensorflow::unwrap(ctx)-&gt;CreateLocalHandleFromT...)<SUB>19</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (arg == nullptr))<SUB>20</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.equals,arg == nullptr)<SUB>20</SUB>> ]
"68719476759" [label = <(IDENTIFIER,arg,arg == nullptr)<SUB>20</SUB>> ]
"90194313220" [label = <(LITERAL,nullptr,arg == nullptr)<SUB>20</SUB>> ]
"25769803782" [label = <(BLOCK,{
        Py_DECREF(lst);
        return errors...,{
        Py_DECREF(lst);
        return errors...)<SUB>20</SUB>> ]
"30064771103" [label = <(Py_DECREF,Py_DECREF(lst))<SUB>21</SUB>> ]
"68719476760" [label = <(IDENTIFIER,lst,Py_DECREF(lst))<SUB>21</SUB>> ]
"146028888064" [label = <(RETURN,return errors::Internal(&quot;Unable to procure Eage...,return errors::Internal(&quot;Unable to procure Eage...)<SUB>22</SUB>> ]
"30064771104" [label = <(Internal,errors::Internal(&quot;Unable to procure EagerTensor...)<SUB>22</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;Unable to procure EagerTensor from Tensor.&quot;,errors::Internal(&quot;Unable to procure EagerTensor...)<SUB>22</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>24</SUB>> ]
"25769803783" [label = <(BLOCK,{
      Status s = TensorToNdarray(call-&gt;ins[i]...,{
      Status s = TensorToNdarray(call-&gt;ins[i]...)<SUB>24</SUB>> ]
"94489280518" [label = <(LOCAL,Status s: Status)<SUB>25</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.assignment,s = TensorToNdarray(call-&gt;ins[i], &amp;arg))<SUB>25</SUB>> ]
"68719476761" [label = <(IDENTIFIER,s,s = TensorToNdarray(call-&gt;ins[i], &amp;arg))<SUB>25</SUB>> ]
"30064771106" [label = <(TensorToNdarray,TensorToNdarray(call-&gt;ins[i], &amp;arg))<SUB>25</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.indirectIndexAccess,call-&gt;ins[i])<SUB>25</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.indirectFieldAccess,call-&gt;ins)<SUB>25</SUB>> ]
"68719476762" [label = <(IDENTIFIER,call,TensorToNdarray(call-&gt;ins[i], &amp;arg))<SUB>25</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,ins,ins)<SUB>25</SUB>> ]
"68719476763" [label = <(IDENTIFIER,i,TensorToNdarray(call-&gt;ins[i], &amp;arg))<SUB>25</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.addressOf,&amp;arg)<SUB>25</SUB>> ]
"68719476764" [label = <(IDENTIFIER,arg,TensorToNdarray(call-&gt;ins[i], &amp;arg))<SUB>25</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (!s.ok()))<SUB>26</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.logicalNot,!s.ok())<SUB>26</SUB>> ]
"30064771111" [label = <(ok,s.ok())<SUB>26</SUB>> ]
"68719476765" [label = <(IDENTIFIER,s,s.ok())<SUB>26</SUB>> ]
"25769803784" [label = <(BLOCK,{
        Py_DECREF(lst);
        return s;
   ...,{
        Py_DECREF(lst);
        return s;
   ...)<SUB>26</SUB>> ]
"30064771112" [label = <(Py_DECREF,Py_DECREF(lst))<SUB>27</SUB>> ]
"68719476766" [label = <(IDENTIFIER,lst,Py_DECREF(lst))<SUB>27</SUB>> ]
"146028888065" [label = <(RETURN,return s;,return s;)<SUB>28</SUB>> ]
"68719476767" [label = <(IDENTIFIER,s,return s;)<SUB>28</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.assignment,arg = PyArray_Return(reinterpret_cast&lt;PyArrayOb...)<SUB>30</SUB>> ]
"68719476768" [label = <(IDENTIFIER,arg,arg = PyArray_Return(reinterpret_cast&lt;PyArrayOb...)<SUB>30</SUB>> ]
"30064771114" [label = <(PyArray_Return,PyArray_Return(reinterpret_cast&lt;PyArrayObject*&gt;...)<SUB>30</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;PyArrayObject*&gt;(arg))<SUB>30</SUB>> ]
"184683593728" [label = <(UNKNOWN,PyArrayObject*,PyArrayObject*)<SUB>30</SUB>> ]
"68719476769" [label = <(IDENTIFIER,arg,reinterpret_cast&lt;PyArrayObject*&gt;(arg))<SUB>30</SUB>> ]
"30064771116" [label = <(PyList_SetItem,PyList_SetItem(lst, i, arg))<SUB>32</SUB>> ]
"68719476770" [label = <(IDENTIFIER,lst,PyList_SetItem(lst, i, arg))<SUB>32</SUB>> ]
"68719476771" [label = <(IDENTIFIER,i,PyList_SetItem(lst, i, arg))<SUB>32</SUB>> ]
"68719476772" [label = <(IDENTIFIER,arg,PyList_SetItem(lst, i, arg))<SUB>32</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,*tuple = Py_BuildValue(&quot;(ssN)&quot;, call-&gt;token.c_s...)<SUB>34</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.indirection,*tuple)<SUB>34</SUB>> ]
"68719476773" [label = <(IDENTIFIER,tuple,*tuple = Py_BuildValue(&quot;(ssN)&quot;, call-&gt;token.c_s...)<SUB>34</SUB>> ]
"30064771119" [label = <(Py_BuildValue,Py_BuildValue(&quot;(ssN)&quot;, call-&gt;token.c_str(), dev...)<SUB>34</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;(ssN)&quot;,Py_BuildValue(&quot;(ssN)&quot;, call-&gt;token.c_str(), dev...)<SUB>34</SUB>> ]
"30064771120" [label = <(c_str,call-&gt;token.c_str())<SUB>34</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.indirectFieldAccess,call-&gt;token)<SUB>34</SUB>> ]
"68719476774" [label = <(IDENTIFIER,call,call-&gt;token.c_str())<SUB>34</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,token,token)<SUB>34</SUB>> ]
"68719476775" [label = <(IDENTIFIER,device_name,Py_BuildValue(&quot;(ssN)&quot;, call-&gt;token.c_str(), dev...)<SUB>34</SUB>> ]
"68719476776" [label = <(IDENTIFIER,lst,Py_BuildValue(&quot;(ssN)&quot;, call-&gt;token.c_str(), dev...)<SUB>34</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (*tuple == nullptr))<SUB>35</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.equals,*tuple == nullptr)<SUB>35</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.indirection,*tuple)<SUB>35</SUB>> ]
"68719476777" [label = <(IDENTIFIER,tuple,*tuple == nullptr)<SUB>35</SUB>> ]
"90194313223" [label = <(LITERAL,nullptr,*tuple == nullptr)<SUB>35</SUB>> ]
"25769803785" [label = <(BLOCK,{
    return errors::Internal(
        &quot;Failed ...,{
    return errors::Internal(
        &quot;Failed ...)<SUB>35</SUB>> ]
"146028888066" [label = <(RETURN,return errors::Internal(
        &quot;Failed to cre...,return errors::Internal(
        &quot;Failed to cre...)<SUB>36</SUB>> ]
"30064771124" [label = <(Internal,errors::Internal(
        &quot;Failed to create pyt...)<SUB>36</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;Failed to create python tuple. Please make sur...,errors::Internal(
        &quot;Failed to create pyt...)<SUB>37</SUB>> ]
"146028888067" [label = <(RETURN,return OkStatus();,return OkStatus();)<SUB>40</SUB>> ]
"30064771125" [label = <(OkStatus,OkStatus())<SUB>40</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "30064771117"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "25769803777" -> "146028888067"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "55834574848"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "30064771079"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "30064771082"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "90194313217"  [ label = "AST: "] 
  "30064771081" -> "68719476742"  [ label = "AST: "] 
  "30064771081" -> "55834574849"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476743"  [ label = "AST: "] 
  "30064771084" -> "55834574850"  [ label = "AST: "] 
  "25769803778" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476744"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476745"  [ label = "AST: "] 
  "30064771088" -> "55834574851"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "30064771090"  [ label = "AST: "] 
  "47244640257" -> "30064771091"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "25769803779" -> "94489280515"  [ label = "AST: "] 
  "25769803779" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476746"  [ label = "AST: "] 
  "30064771089" -> "90194313218"  [ label = "AST: "] 
  "30064771090" -> "68719476747"  [ label = "AST: "] 
  "30064771090" -> "68719476748"  [ label = "AST: "] 
  "30064771091" -> "68719476749"  [ label = "AST: "] 
  "25769803780" -> "94489280516"  [ label = "AST: "] 
  "25769803780" -> "30064771092"  [ label = "AST: "] 
  "25769803780" -> "47244640258"  [ label = "AST: "] 
  "25769803780" -> "30064771116"  [ label = "AST: "] 
  "30064771092" -> "68719476750"  [ label = "AST: "] 
  "30064771092" -> "90194313219"  [ label = "AST: "] 
  "47244640258" -> "30064771093"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "47244640258" -> "47244640260"  [ label = "AST: "] 
  "30064771093" -> "68719476751"  [ label = "AST: "] 
  "30064771093" -> "55834574852"  [ label = "AST: "] 
  "25769803781" -> "94489280517"  [ label = "AST: "] 
  "25769803781" -> "30064771094"  [ label = "AST: "] 
  "25769803781" -> "30064771097"  [ label = "AST: "] 
  "25769803781" -> "47244640259"  [ label = "AST: "] 
  "30064771094" -> "68719476752"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "68719476754"  [ label = "AST: "] 
  "30064771096" -> "68719476753"  [ label = "AST: "] 
  "30064771096" -> "55834574853"  [ label = "AST: "] 
  "30064771097" -> "68719476755"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "68719476757"  [ label = "AST: "] 
  "30064771100" -> "68719476758"  [ label = "AST: "] 
  "30064771101" -> "68719476756"  [ label = "AST: "] 
  "47244640259" -> "30064771102"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "30064771102" -> "68719476759"  [ label = "AST: "] 
  "30064771102" -> "90194313220"  [ label = "AST: "] 
  "25769803782" -> "30064771103"  [ label = "AST: "] 
  "25769803782" -> "146028888064"  [ label = "AST: "] 
  "30064771103" -> "68719476760"  [ label = "AST: "] 
  "146028888064" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "90194313221"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "94489280518"  [ label = "AST: "] 
  "25769803783" -> "30064771105"  [ label = "AST: "] 
  "25769803783" -> "47244640261"  [ label = "AST: "] 
  "25769803783" -> "30064771113"  [ label = "AST: "] 
  "30064771105" -> "68719476761"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "30064771109"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "68719476763"  [ label = "AST: "] 
  "30064771108" -> "68719476762"  [ label = "AST: "] 
  "30064771108" -> "55834574854"  [ label = "AST: "] 
  "30064771109" -> "68719476764"  [ label = "AST: "] 
  "47244640261" -> "30064771110"  [ label = "AST: "] 
  "47244640261" -> "25769803784"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "68719476765"  [ label = "AST: "] 
  "25769803784" -> "30064771112"  [ label = "AST: "] 
  "25769803784" -> "146028888065"  [ label = "AST: "] 
  "30064771112" -> "68719476766"  [ label = "AST: "] 
  "146028888065" -> "68719476767"  [ label = "AST: "] 
  "30064771113" -> "68719476768"  [ label = "AST: "] 
  "30064771113" -> "30064771114"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771115" -> "184683593728"  [ label = "AST: "] 
  "30064771115" -> "68719476769"  [ label = "AST: "] 
  "30064771116" -> "68719476770"  [ label = "AST: "] 
  "30064771116" -> "68719476771"  [ label = "AST: "] 
  "30064771116" -> "68719476772"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771117" -> "30064771119"  [ label = "AST: "] 
  "30064771118" -> "68719476773"  [ label = "AST: "] 
  "30064771119" -> "90194313222"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771119" -> "68719476775"  [ label = "AST: "] 
  "30064771119" -> "68719476776"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771121" -> "68719476774"  [ label = "AST: "] 
  "30064771121" -> "55834574855"  [ label = "AST: "] 
  "47244640262" -> "30064771122"  [ label = "AST: "] 
  "47244640262" -> "25769803785"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771122" -> "90194313223"  [ label = "AST: "] 
  "30064771123" -> "68719476777"  [ label = "AST: "] 
  "25769803785" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771124"  [ label = "AST: "] 
  "30064771124" -> "90194313224"  [ label = "AST: "] 
  "146028888067" -> "30064771125"  [ label = "AST: "] 
  "30064771072" -> "30064771076"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "55834574849"  [ label = "CFG: "] 
  "30064771117" -> "30064771123"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771079" -> "55834574851"  [ label = "CFG: "] 
  "30064771079" -> "30064771089"  [ label = "CFG: "] 
  "30064771090" -> "30064771092"  [ label = "CFG: "] 
  "30064771090" -> "30064771118"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771118" -> "55834574855"  [ label = "CFG: "] 
  "30064771119" -> "30064771117"  [ label = "CFG: "] 
  "30064771122" -> "30064771125"  [ label = "CFG: "] 
  "30064771122" -> "30064771124"  [ label = "CFG: "] 
  "30064771125" -> "146028888067"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771080" -> "55834574850"  [ label = "CFG: "] 
  "30064771082" -> "30064771079"  [ label = "CFG: "] 
  "30064771085" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771092" -> "55834574852"  [ label = "CFG: "] 
  "30064771116" -> "30064771091"  [ label = "CFG: "] 
  "30064771120" -> "30064771119"  [ label = "CFG: "] 
  "30064771123" -> "30064771122"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "55834574848" -> "30064771074"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771093" -> "55834574853"  [ label = "CFG: "] 
  "30064771093" -> "55834574854"  [ label = "CFG: "] 
  "30064771121" -> "30064771120"  [ label = "CFG: "] 
  "30064771124" -> "146028888066"  [ label = "CFG: "] 
  "55834574849" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "55834574852" -> "30064771093"  [ label = "CFG: "] 
  "30064771094" -> "30064771101"  [ label = "CFG: "] 
  "30064771097" -> "30064771102"  [ label = "CFG: "] 
  "55834574855" -> "30064771121"  [ label = "CFG: "] 
  "55834574850" -> "30064771084"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771102" -> "30064771116"  [ label = "CFG: "] 
  "30064771105" -> "30064771111"  [ label = "CFG: "] 
  "30064771113" -> "30064771116"  [ label = "CFG: "] 
  "55834574851" -> "30064771088"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771103" -> "30064771104"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "30064771110" -> "30064771112"  [ label = "CFG: "] 
  "30064771110" -> "184683593728"  [ label = "CFG: "] 
  "30064771114" -> "30064771113"  [ label = "CFG: "] 
  "55834574853" -> "30064771096"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771104" -> "146028888064"  [ label = "CFG: "] 
  "30064771107" -> "30064771109"  [ label = "CFG: "] 
  "30064771109" -> "30064771106"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771112" -> "146028888065"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "184683593728" -> "30064771115"  [ label = "CFG: "] 
  "55834574854" -> "30064771108"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: call"] 
  "115964116994" -> "128849018880"  [ label = "DDG: tuple"] 
  "30064771073" -> "128849018880"  [ label = "DDG: call-&gt;ins"] 
  "30064771072" -> "128849018880"  [ label = "DDG: call-&gt;ins.size()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: n = call-&gt;ins.size()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: PyList_New(n)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: * lst = PyList_New(n)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: CHECK(lst)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: * device_name = nullptr"] 
  "30064771080" -> "128849018880"  [ label = "DDG: call-&gt;device"] 
  "30064771079" -> "128849018880"  [ label = "DDG: call-&gt;device != nullptr"] 
  "30064771083" -> "128849018880"  [ label = "DDG: call-&gt;device"] 
  "30064771082" -> "128849018880"  [ label = "DDG: IsCPUDevice(call-&gt;device)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: !IsCPUDevice(call-&gt;device)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: call-&gt;device != nullptr &amp;&amp; !IsCPUDevice(call-&gt;device)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: call-&gt;device"] 
  "30064771086" -> "128849018880"  [ label = "DDG: call-&gt;device-&gt;name()"] 
  "30064771085" -> "128849018880"  [ label = "DDG: call-&gt;device-&gt;name().c_str()"] 
  "30064771085" -> "128849018880"  [ label = "DDG: device_name = call-&gt;device-&gt;name().c_str()"] 
  "30064771089" -> "128849018880"  [ label = "DDG: i = 0"] 
  "30064771090" -> "128849018880"  [ label = "DDG: i"] 
  "30064771090" -> "128849018880"  [ label = "DDG: n"] 
  "30064771090" -> "128849018880"  [ label = "DDG: i &lt; n"] 
  "30064771092" -> "128849018880"  [ label = "DDG: * arg = nullptr"] 
  "30064771106" -> "128849018880"  [ label = "DDG: &amp;arg"] 
  "30064771105" -> "128849018880"  [ label = "DDG: TensorToNdarray(call-&gt;ins[i], &amp;arg)"] 
  "30064771105" -> "128849018880"  [ label = "DDG: s = TensorToNdarray(call-&gt;ins[i], &amp;arg)"] 
  "30064771111" -> "128849018880"  [ label = "DDG: s"] 
  "30064771110" -> "128849018880"  [ label = "DDG: s.ok()"] 
  "30064771110" -> "128849018880"  [ label = "DDG: !s.ok()"] 
  "30064771114" -> "128849018880"  [ label = "DDG: reinterpret_cast&lt;PyArrayObject*&gt;(arg)"] 
  "30064771113" -> "128849018880"  [ label = "DDG: PyArray_Return(reinterpret_cast&lt;PyArrayObject*&gt;(arg))"] 
  "30064771113" -> "128849018880"  [ label = "DDG: arg = PyArray_Return(reinterpret_cast&lt;PyArrayObject*&gt;(arg))"] 
  "30064771094" -> "128849018880"  [ label = "DDG: call-&gt;ins[i]"] 
  "30064771094" -> "128849018880"  [ label = "DDG: t = call-&gt;ins[i]"] 
  "30064771101" -> "128849018880"  [ label = "DDG: ctx"] 
  "30064771100" -> "128849018880"  [ label = "DDG: tensorflow::unwrap(ctx)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: t"] 
  "30064771100" -> "128849018880"  [ label = "DDG: device_name"] 
  "30064771099" -> "128849018880"  [ label = "DDG: tensorflow::unwrap(ctx)-&gt;CreateLocalHandleFromTFTensor(t,
                                                                 device_name)"] 
  "30064771098" -> "128849018880"  [ label = "DDG: tensorflow::wrap(
          tensorflow::unwrap(ctx)-&gt;CreateLocalHandleFromTFTensor(t,
                                                                 device_name))"] 
  "30064771097" -> "128849018880"  [ label = "DDG: EagerTensorFromHandle(tensorflow::wrap(
          tensorflow::unwrap(ctx)-&gt;CreateLocalHandleFromTFTensor(t,
                                                                 device_name)))"] 
  "30064771097" -> "128849018880"  [ label = "DDG: arg = EagerTensorFromHandle(tensorflow::wrap(
          tensorflow::unwrap(ctx)-&gt;CreateLocalHandleFromTFTensor(t,
                                                                 device_name)))"] 
  "30064771102" -> "128849018880"  [ label = "DDG: arg"] 
  "30064771102" -> "128849018880"  [ label = "DDG: arg == nullptr"] 
  "30064771116" -> "128849018880"  [ label = "DDG: PyList_SetItem(lst, i, arg)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: ++i"] 
  "30064771103" -> "128849018880"  [ label = "DDG: lst"] 
  "30064771103" -> "128849018880"  [ label = "DDG: Py_DECREF(lst)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: errors::Internal(&quot;Unable to procure EagerTensor from Tensor.&quot;)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: call-&gt;ins"] 
  "30064771076" -> "30064771075"  [ label = "DDG: n"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771119" -> "30064771117"  [ label = "DDG: &quot;(ssN)&quot;"] 
  "30064771119" -> "30064771117"  [ label = "DDG: call-&gt;token.c_str()"] 
  "30064771119" -> "30064771117"  [ label = "DDG: device_name"] 
  "30064771119" -> "30064771117"  [ label = "DDG: lst"] 
  "30064771125" -> "146028888067"  [ label = "DDG: OkStatus()"] 
  "30064771075" -> "30064771077"  [ label = "DDG: lst"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: call"] 
  "30064771072" -> "30064771076"  [ label = "DDG: n"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: call-&gt;device"] 
  "30064771080" -> "30064771079"  [ label = "DDG: nullptr"] 
  "30064771082" -> "30064771079"  [ label = "DDG: IsCPUDevice(call-&gt;device)"] 
  "30064771086" -> "30064771085"  [ label = "DDG: call-&gt;device-&gt;name()"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771089" -> "30064771090"  [ label = "DDG: i"] 
  "30064771091" -> "30064771090"  [ label = "DDG: i"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771076" -> "30064771090"  [ label = "DDG: n"] 
  "30064771116" -> "30064771091"  [ label = "DDG: i"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771120" -> "30064771119"  [ label = "DDG: call-&gt;token"] 
  "30064771078" -> "30064771119"  [ label = "DDG: device_name"] 
  "30064771085" -> "30064771119"  [ label = "DDG: device_name"] 
  "30064771100" -> "30064771119"  [ label = "DDG: device_name"] 
  "30064771077" -> "30064771119"  [ label = "DDG: lst"] 
  "30064771116" -> "30064771119"  [ label = "DDG: lst"] 
  "30064771117" -> "30064771122"  [ label = "DDG: *tuple"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771124" -> "146028888066"  [ label = "DDG: errors::Internal(
        &quot;Failed to create python tuple. Please make sure `token` is a &quot;
        &quot;well-formed UTF-8 string.&quot;)"] 
  "115964116992" -> "30064771080"  [ label = "DDG: call"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: call-&gt;device"] 
  "30064771077" -> "30064771116"  [ label = "DDG: lst"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771090" -> "30064771116"  [ label = "DDG: i"] 
  "30064771106" -> "30064771116"  [ label = "DDG: &amp;arg"] 
  "30064771113" -> "30064771116"  [ label = "DDG: arg"] 
  "30064771102" -> "30064771116"  [ label = "DDG: arg"] 
  "115964116992" -> "30064771120"  [ label = "DDG: call"] 
  "115964116992" -> "30064771083"  [ label = "DDG: call"] 
  "30064771080" -> "30064771083"  [ label = "DDG: call-&gt;device"] 
  "30064771087" -> "30064771086"  [ label = "DDG: call-&gt;device"] 
  "30064771106" -> "30064771094"  [ label = "DDG: call-&gt;ins[i]"] 
  "30064771098" -> "30064771097"  [ label = "DDG: tensorflow::wrap(
          tensorflow::unwrap(ctx)-&gt;CreateLocalHandleFromTFTensor(t,
                                                                 device_name))"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "115964116992" -> "30064771087"  [ label = "DDG: call"] 
  "30064771080" -> "30064771087"  [ label = "DDG: call-&gt;device"] 
  "30064771083" -> "30064771087"  [ label = "DDG: call-&gt;device"] 
  "30064771106" -> "30064771105"  [ label = "DDG: call-&gt;ins[i]"] 
  "30064771106" -> "30064771105"  [ label = "DDG: &amp;arg"] 
  "30064771114" -> "30064771113"  [ label = "DDG: reinterpret_cast&lt;PyArrayObject*&gt;(arg)"] 
  "30064771099" -> "30064771098"  [ label = "DDG: tensorflow::unwrap(ctx)-&gt;CreateLocalHandleFromTFTensor(t,
                                                                 device_name)"] 
  "30064771106" -> "30064771102"  [ label = "DDG: &amp;arg"] 
  "30064771097" -> "30064771102"  [ label = "DDG: arg"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771104" -> "146028888064"  [ label = "DDG: errors::Internal(&quot;Unable to procure EagerTensor from Tensor.&quot;)"] 
  "30064771100" -> "30064771099"  [ label = "DDG: tensorflow::unwrap(ctx)"] 
  "30064771100" -> "30064771099"  [ label = "DDG: t"] 
  "30064771100" -> "30064771099"  [ label = "DDG: device_name"] 
  "30064771077" -> "30064771103"  [ label = "DDG: lst"] 
  "30064771116" -> "30064771103"  [ label = "DDG: lst"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771092" -> "30064771106"  [ label = "DDG: arg"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771111" -> "30064771110"  [ label = "DDG: s"] 
  "68719476767" -> "146028888065"  [ label = "DDG: s"] 
  "30064771092" -> "30064771114"  [ label = "DDG: arg"] 
  "30064771106" -> "30064771114"  [ label = "DDG: &amp;arg"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: ctx"] 
  "30064771094" -> "30064771100"  [ label = "DDG: t"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771078" -> "30064771100"  [ label = "DDG: device_name"] 
  "30064771085" -> "30064771100"  [ label = "DDG: device_name"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771105" -> "30064771111"  [ label = "DDG: s"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771077" -> "30064771112"  [ label = "DDG: lst"] 
  "30064771116" -> "30064771112"  [ label = "DDG: lst"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771111" -> "68719476767"  [ label = "DDG: s"] 
  "111669149697" -> "68719476767"  [ label = "DDG: "] 
  "30064771092" -> "30064771115"  [ label = "DDG: arg"] 
  "30064771106" -> "30064771115"  [ label = "DDG: &amp;arg"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "115964116993" -> "30064771101"  [ label = "DDG: ctx"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771079" -> "30064771087"  [ label = "CDG: "] 
  "30064771079" -> "30064771088"  [ label = "CDG: "] 
  "30064771079" -> "30064771085"  [ label = "CDG: "] 
  "30064771079" -> "30064771086"  [ label = "CDG: "] 
  "30064771079" -> "55834574851"  [ label = "CDG: "] 
  "30064771090" -> "30064771092"  [ label = "CDG: "] 
  "30064771090" -> "30064771093"  [ label = "CDG: "] 
  "30064771090" -> "30064771123"  [ label = "CDG: "] 
  "30064771090" -> "30064771121"  [ label = "CDG: "] 
  "30064771090" -> "30064771122"  [ label = "CDG: "] 
  "30064771090" -> "30064771119"  [ label = "CDG: "] 
  "30064771090" -> "30064771120"  [ label = "CDG: "] 
  "30064771090" -> "30064771117"  [ label = "CDG: "] 
  "30064771090" -> "30064771118"  [ label = "CDG: "] 
  "30064771090" -> "55834574855"  [ label = "CDG: "] 
  "30064771090" -> "55834574852"  [ label = "CDG: "] 
  "30064771122" -> "30064771124"  [ label = "CDG: "] 
  "30064771122" -> "30064771125"  [ label = "CDG: "] 
  "30064771122" -> "146028888066"  [ label = "CDG: "] 
  "30064771122" -> "146028888067"  [ label = "CDG: "] 
  "30064771080" -> "30064771083"  [ label = "CDG: "] 
  "30064771080" -> "30064771084"  [ label = "CDG: "] 
  "30064771080" -> "30064771082"  [ label = "CDG: "] 
  "30064771080" -> "55834574850"  [ label = "CDG: "] 
  "30064771093" -> "30064771095"  [ label = "CDG: "] 
  "30064771093" -> "30064771096"  [ label = "CDG: "] 
  "30064771093" -> "30064771094"  [ label = "CDG: "] 
  "30064771093" -> "30064771107"  [ label = "CDG: "] 
  "30064771093" -> "30064771108"  [ label = "CDG: "] 
  "30064771093" -> "30064771105"  [ label = "CDG: "] 
  "30064771093" -> "30064771106"  [ label = "CDG: "] 
  "30064771093" -> "30064771111"  [ label = "CDG: "] 
  "30064771093" -> "30064771109"  [ label = "CDG: "] 
  "30064771093" -> "30064771110"  [ label = "CDG: "] 
  "30064771093" -> "30064771099"  [ label = "CDG: "] 
  "30064771093" -> "30064771100"  [ label = "CDG: "] 
  "30064771093" -> "30064771097"  [ label = "CDG: "] 
  "30064771093" -> "30064771098"  [ label = "CDG: "] 
  "30064771093" -> "30064771101"  [ label = "CDG: "] 
  "30064771093" -> "30064771102"  [ label = "CDG: "] 
  "30064771093" -> "55834574853"  [ label = "CDG: "] 
  "30064771093" -> "55834574854"  [ label = "CDG: "] 
  "30064771102" -> "30064771091"  [ label = "CDG: "] 
  "30064771102" -> "30064771090"  [ label = "CDG: "] 
  "30064771102" -> "30064771103"  [ label = "CDG: "] 
  "30064771102" -> "30064771104"  [ label = "CDG: "] 
  "30064771102" -> "30064771116"  [ label = "CDG: "] 
  "30064771102" -> "146028888064"  [ label = "CDG: "] 
  "30064771110" -> "30064771091"  [ label = "CDG: "] 
  "30064771110" -> "30064771090"  [ label = "CDG: "] 
  "30064771110" -> "30064771112"  [ label = "CDG: "] 
  "30064771110" -> "30064771115"  [ label = "CDG: "] 
  "30064771110" -> "30064771116"  [ label = "CDG: "] 
  "30064771110" -> "30064771113"  [ label = "CDG: "] 
  "30064771110" -> "30064771114"  [ label = "CDG: "] 
  "30064771110" -> "146028888065"  [ label = "CDG: "] 
  "30064771110" -> "184683593728"  [ label = "CDG: "] 
}
"""
)
