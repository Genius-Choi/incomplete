[33mval[0m [36mres489[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "onSoftPerTryTimeout" {  
"111669149698" [label = <(METHOD,onSoftPerTryTimeout)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,UpstreamRequest&amp; upstream_request)<SUB>1</SUB>> ]
"25769803778" [label = <(BLOCK,{
  // Track this as a timeout for outlier dete...,{
  // Track this as a timeout for outlier dete...)<SUB>1</SUB>> ]
"30064771074" [label = <(updateOutlierDetection,updateOutlierDetection(Upstream::Outlier::Resul...)<SUB>4</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,Upstream::Outlier::Result::LocalOriginTimeout)<SUB>4</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,Upstream::Outlier::Result)<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,Upstream,updateOutlierDetection(Upstream::Outlier::Resul...)<SUB>4</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,Outlier::Result)<SUB>4</SUB>> ]
"68719476739" [label = <(IDENTIFIER,Outlier,updateOutlierDetection(Upstream::Outlier::Resul...)<SUB>4</SUB>> ]
"68719476740" [label = <(IDENTIFIER,Result,updateOutlierDetection(Upstream::Outlier::Resul...)<SUB>4</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,LocalOriginTimeout,LocalOriginTimeout)<SUB>4</SUB>> ]
"68719476741" [label = <(IDENTIFIER,upstream_request,updateOutlierDetection(Upstream::Outlier::Resul...)<SUB>4</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.greaterThan,absl::optional&lt;uint64_t&gt;(enumToInt(timeout_resp...)<SUB>5</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.lessThan,absl::optional&lt;uint64_t)<SUB>5</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.fieldAccess,absl::optional)<SUB>5</SUB>> ]
"68719476742" [label = <(IDENTIFIER,absl,absl::optional&lt;uint64_t)<SUB>5</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,optional,optional)<SUB>5</SUB>> ]
"68719476743" [label = <(IDENTIFIER,uint64_t,absl::optional&lt;uint64_t)<SUB>5</SUB>> ]
"30064771081" [label = <(enumToInt,enumToInt(timeout_response_code_))<SUB>5</SUB>> ]
"68719476744" [label = <(IDENTIFIER,timeout_response_code_,enumToInt(timeout_response_code_))<SUB>5</SUB>> ]
"30064771082" [label = <(outlierDetectionTimeoutRecorded,upstream_request.outlierDetectionTimeoutRecorde...)<SUB>6</SUB>> ]
"68719476745" [label = <(IDENTIFIER,upstream_request,upstream_request.outlierDetectionTimeoutRecorde...)<SUB>6</SUB>> ]
"90194313217" [label = <(LITERAL,true,upstream_request.outlierDetectionTimeoutRecorde...)<SUB>6</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!downstream_response_started_ &amp;&amp; retry_state_))<SUB>8</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.logicalAnd,!downstream_response_started_ &amp;&amp; retry_state_)<SUB>8</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.logicalNot,!downstream_response_started_)<SUB>8</SUB>> ]
"68719476746" [label = <(IDENTIFIER,downstream_response_started_,!downstream_response_started_)<SUB>8</SUB>> ]
"68719476747" [label = <(IDENTIFIER,retry_state_,!downstream_response_started_ &amp;&amp; retry_state_)<SUB>8</SUB>> ]
"25769803779" [label = <(BLOCK,{
    RetryStatus retry_status = retry_state_-&gt;...,{
    RetryStatus retry_status = retry_state_-&gt;...)<SUB>8</SUB>> ]
"94489280512" [label = <(LOCAL,RetryStatus retry_status: RetryStatus)<SUB>9</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,retry_status = retry_state_-&gt;shouldHedgeRetryPe...)<SUB>9</SUB>> ]
"68719476748" [label = <(IDENTIFIER,retry_status,retry_status = retry_state_-&gt;shouldHedgeRetryPe...)<SUB>9</SUB>> ]
"30064771086" [label = <(shouldHedgeRetryPerTryTimeout,retry_state_-&gt;shouldHedgeRetryPerTryTimeout(
  ...)<SUB>9</SUB>> ]
"68719476749" [label = <(IDENTIFIER,retry_state_,retry_state_-&gt;shouldHedgeRetryPerTryTimeout(
  ...)<SUB>9</SUB>> ]
"124554051584" [label = <(METHOD_REF,[this, can_use_http3 = upstream_request.upstrea...,retry_state_-&gt;shouldHedgeRetryPerTryTimeout(
  ...)<SUB>10</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (retry_status == RetryStatus::Yes))<SUB>17</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.equals,retry_status == RetryStatus::Yes)<SUB>17</SUB>> ]
"68719476750" [label = <(IDENTIFIER,retry_status,retry_status == RetryStatus::Yes)<SUB>17</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,RetryStatus::Yes)<SUB>17</SUB>> ]
"68719476751" [label = <(IDENTIFIER,RetryStatus,retry_status == RetryStatus::Yes)<SUB>17</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,Yes,Yes)<SUB>17</SUB>> ]
"25769803780" [label = <(BLOCK,{
      runRetryOptionsPredicates(upstream_requ...,{
      runRetryOptionsPredicates(upstream_requ...)<SUB>17</SUB>> ]
"30064771089" [label = <(runRetryOptionsPredicates,runRetryOptionsPredicates(upstream_request))<SUB>18</SUB>> ]
"68719476752" [label = <(IDENTIFIER,upstream_request,runRetryOptionsPredicates(upstream_request))<SUB>18</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.postIncrement,pending_retries_++)<SUB>19</SUB>> ]
"68719476753" [label = <(IDENTIFIER,pending_retries_,pending_retries_++)<SUB>19</SUB>> ]
"30064771091" [label = <(retried,upstream_request.retried(true))<SUB>24</SUB>> ]
"68719476754" [label = <(IDENTIFIER,upstream_request,upstream_request.retried(true))<SUB>24</SUB>> ]
"90194313218" [label = <(LITERAL,true,upstream_request.retried(true))<SUB>24</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>27</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (retry_status == RetryStatus::NoOverflow))<SUB>27</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.equals,retry_status == RetryStatus::NoOverflow)<SUB>27</SUB>> ]
"68719476755" [label = <(IDENTIFIER,retry_status,retry_status == RetryStatus::NoOverflow)<SUB>27</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.fieldAccess,RetryStatus::NoOverflow)<SUB>27</SUB>> ]
"68719476756" [label = <(IDENTIFIER,RetryStatus,retry_status == RetryStatus::NoOverflow)<SUB>27</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,NoOverflow,NoOverflow)<SUB>27</SUB>> ]
"25769803782" [label = <(BLOCK,{
      callbacks_-&gt;streamInfo().setResponseFla...,{
      callbacks_-&gt;streamInfo().setResponseFla...)<SUB>27</SUB>> ]
"30064771094" [label = <(setResponseFlag,callbacks_-&gt;streamInfo().setResponseFlag(Stream...)<SUB>28</SUB>> ]
"30064771095" [label = <(streamInfo,callbacks_-&gt;streamInfo())<SUB>28</SUB>> ]
"68719476757" [label = <(IDENTIFIER,callbacks_,callbacks_-&gt;streamInfo())<SUB>28</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.fieldAccess,StreamInfo::CoreResponseFlag::UpstreamOverflow)<SUB>28</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.fieldAccess,StreamInfo::CoreResponseFlag)<SUB>28</SUB>> ]
"68719476758" [label = <(IDENTIFIER,StreamInfo,callbacks_-&gt;streamInfo().setResponseFlag(Stream...)<SUB>28</SUB>> ]
"68719476759" [label = <(IDENTIFIER,CoreResponseFlag,callbacks_-&gt;streamInfo().setResponseFlag(Stream...)<SUB>28</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,UpstreamOverflow,UpstreamOverflow)<SUB>28</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>29</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (retry_status == RetryStatus::NoRetryLimitExceeded))<SUB>29</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.equals,retry_status == RetryStatus::NoRetryLimitExceeded)<SUB>29</SUB>> ]
"68719476760" [label = <(IDENTIFIER,retry_status,retry_status == RetryStatus::NoRetryLimitExceeded)<SUB>29</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.fieldAccess,RetryStatus::NoRetryLimitExceeded)<SUB>29</SUB>> ]
"68719476761" [label = <(IDENTIFIER,RetryStatus,retry_status == RetryStatus::NoRetryLimitExceeded)<SUB>29</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,NoRetryLimitExceeded,NoRetryLimitExceeded)<SUB>29</SUB>> ]
"25769803784" [label = <(BLOCK,{
      callbacks_-&gt;streamInfo().setResponseFla...,{
      callbacks_-&gt;streamInfo().setResponseFla...)<SUB>29</SUB>> ]
"30064771100" [label = <(setResponseFlag,callbacks_-&gt;streamInfo().setResponseFlag(
     ...)<SUB>30</SUB>> ]
"30064771101" [label = <(streamInfo,callbacks_-&gt;streamInfo())<SUB>30</SUB>> ]
"68719476762" [label = <(IDENTIFIER,callbacks_,callbacks_-&gt;streamInfo())<SUB>30</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.fieldAccess,StreamInfo::CoreResponseFlag::UpstreamRetryLimi...)<SUB>31</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.fieldAccess,StreamInfo::CoreResponseFlag)<SUB>31</SUB>> ]
"68719476763" [label = <(IDENTIFIER,StreamInfo,callbacks_-&gt;streamInfo().setResponseFlag(
     ...)<SUB>31</SUB>> ]
"68719476764" [label = <(IDENTIFIER,CoreResponseFlag,callbacks_-&gt;streamInfo().setResponseFlag(
     ...)<SUB>31</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,UpstreamRetryLimitExceeded,UpstreamRetryLimitExceeded)<SUB>31</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149698" -> "115964116992"  [ label = "AST: "] 
  "111669149698" -> "25769803778"  [ label = "AST: "] 
  "111669149698" -> "128849018881"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "25769803778" -> "30064771082"  [ label = "AST: "] 
  "25769803778" -> "47244640256"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "68719476741"  [ label = "AST: "] 
  "30064771074" -> "30064771078"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "55834574849"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771081"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771080" -> "55834574850"  [ label = "AST: "] 
  "30064771081" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "90194313217"  [ label = "AST: "] 
  "47244640256" -> "30064771083"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "25769803779" -> "94489280512"  [ label = "AST: "] 
  "25769803779" -> "30064771085"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476749"  [ label = "AST: "] 
  "30064771086" -> "124554051584"  [ label = "AST: "] 
  "47244640257" -> "30064771087"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "47244640257" -> "47244640258"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771088" -> "55834574851"  [ label = "AST: "] 
  "25769803780" -> "30064771089"  [ label = "AST: "] 
  "25769803780" -> "30064771090"  [ label = "AST: "] 
  "25769803780" -> "30064771091"  [ label = "AST: "] 
  "30064771089" -> "68719476752"  [ label = "AST: "] 
  "30064771090" -> "68719476753"  [ label = "AST: "] 
  "30064771091" -> "68719476754"  [ label = "AST: "] 
  "30064771091" -> "90194313218"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "47244640259"  [ label = "AST: "] 
  "47244640259" -> "30064771092"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "47244640259" -> "47244640260"  [ label = "AST: "] 
  "30064771092" -> "68719476755"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476756"  [ label = "AST: "] 
  "30064771093" -> "55834574852"  [ label = "AST: "] 
  "25769803782" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "68719476757"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "55834574853"  [ label = "AST: "] 
  "30064771097" -> "68719476758"  [ label = "AST: "] 
  "30064771097" -> "68719476759"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "47244640261"  [ label = "AST: "] 
  "47244640261" -> "30064771098"  [ label = "AST: "] 
  "47244640261" -> "25769803784"  [ label = "AST: "] 
  "30064771098" -> "68719476760"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476761"  [ label = "AST: "] 
  "30064771099" -> "55834574854"  [ label = "AST: "] 
  "25769803784" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "68719476762"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "55834574855"  [ label = "AST: "] 
  "30064771103" -> "68719476763"  [ label = "AST: "] 
  "30064771103" -> "68719476764"  [ label = "AST: "] 
  "30064771074" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771075" -> "55834574850"  [ label = "CFG: "] 
  "30064771078" -> "30064771074"  [ label = "CFG: "] 
  "30064771083" -> "128849018881"  [ label = "CFG: "] 
  "30064771083" -> "124554051584"  [ label = "CFG: "] 
  "30064771076" -> "55834574849"  [ label = "CFG: "] 
  "55834574849" -> "30064771075"  [ label = "CFG: "] 
  "30064771079" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "30064771078"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "55834574851"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "30064771089"  [ label = "CFG: "] 
  "30064771087" -> "55834574852"  [ label = "CFG: "] 
  "55834574850" -> "30064771080"  [ label = "CFG: "] 
  "124554051584" -> "30064771086"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771091" -> "128849018881"  [ label = "CFG: "] 
  "55834574851" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771095"  [ label = "CFG: "] 
  "30064771092" -> "55834574854"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771094" -> "128849018881"  [ label = "CFG: "] 
  "55834574852" -> "30064771093"  [ label = "CFG: "] 
  "30064771095" -> "30064771097"  [ label = "CFG: "] 
  "30064771096" -> "30064771094"  [ label = "CFG: "] 
  "30064771097" -> "55834574853"  [ label = "CFG: "] 
  "55834574853" -> "30064771096"  [ label = "CFG: "] 
  "30064771098" -> "128849018881"  [ label = "CFG: "] 
  "30064771098" -> "30064771101"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771100" -> "128849018881"  [ label = "CFG: "] 
  "55834574854" -> "30064771099"  [ label = "CFG: "] 
  "30064771101" -> "30064771103"  [ label = "CFG: "] 
  "30064771102" -> "30064771100"  [ label = "CFG: "] 
  "30064771103" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771102"  [ label = "CFG: "] 
  "111669149698" -> "30064771077"  [ label = "CFG: "] 
  "30064771074" -> "128849018881"  [ label = "DDG: Upstream::Outlier::Result::LocalOriginTimeout"] 
  "30064771079" -> "128849018881"  [ label = "DDG: absl::optional"] 
  "30064771078" -> "128849018881"  [ label = "DDG: absl::optional&lt;uint64_t"] 
  "30064771078" -> "128849018881"  [ label = "DDG: enumToInt(timeout_response_code_)"] 
  "30064771074" -> "128849018881"  [ label = "DDG: absl::optional&lt;uint64_t&gt;(enumToInt(timeout_response_code_))"] 
  "30064771074" -> "128849018881"  [ label = "DDG: updateOutlierDetection(Upstream::Outlier::Result::LocalOriginTimeout, upstream_request,
                         absl::optional&lt;uint64_t&gt;(enumToInt(timeout_response_code_)))"] 
  "30064771082" -> "128849018881"  [ label = "DDG: upstream_request.outlierDetectionTimeoutRecorded(true)"] 
  "30064771083" -> "128849018881"  [ label = "DDG: !downstream_response_started_"] 
  "30064771083" -> "128849018881"  [ label = "DDG: !downstream_response_started_ &amp;&amp; retry_state_"] 
  "30064771086" -> "128849018881"  [ label = "DDG: retry_state_"] 
  "30064771085" -> "128849018881"  [ label = "DDG: retry_state_-&gt;shouldHedgeRetryPerTryTimeout(
        [this, can_use_http3 = upstream_request.upstreamStreamOptions().can_use_http3_]() -&gt; void {
          // Without any knowledge about what's going on in the connection pool, retry the request
          // with the safest settings which is no early data but keep using or not using alt-svc as
          // before. In this way, QUIC won't be falsely marked as broken.
          doRetry(/*can_send_early_data*/ false, can_use_http3, TimeoutRetry::Yes);
        })"] 
  "30064771085" -> "128849018881"  [ label = "DDG: retry_status = retry_state_-&gt;shouldHedgeRetryPerTryTimeout(
        [this, can_use_http3 = upstream_request.upstreamStreamOptions().can_use_http3_]() -&gt; void {
          // Without any knowledge about what's going on in the connection pool, retry the request
          // with the safest settings which is no early data but keep using or not using alt-svc as
          // before. In this way, QUIC won't be falsely marked as broken.
          doRetry(/*can_send_early_data*/ false, can_use_http3, TimeoutRetry::Yes);
        })"] 
  "30064771087" -> "128849018881"  [ label = "DDG: retry_status"] 
  "30064771087" -> "128849018881"  [ label = "DDG: RetryStatus::Yes"] 
  "30064771087" -> "128849018881"  [ label = "DDG: retry_status == RetryStatus::Yes"] 
  "30064771089" -> "128849018881"  [ label = "DDG: runRetryOptionsPredicates(upstream_request)"] 
  "30064771090" -> "128849018881"  [ label = "DDG: pending_retries_++"] 
  "30064771091" -> "128849018881"  [ label = "DDG: upstream_request"] 
  "30064771091" -> "128849018881"  [ label = "DDG: upstream_request.retried(true)"] 
  "30064771081" -> "128849018881"  [ label = "DDG: timeout_response_code_"] 
  "30064771084" -> "128849018881"  [ label = "DDG: downstream_response_started_"] 
  "30064771079" -> "128849018881"  [ label = "DDG: uint64_t"] 
  "30064771090" -> "128849018881"  [ label = "DDG: pending_retries_"] 
  "111669149698" -> "115964116992"  [ label = "DDG: "] 
  "115964116992" -> "30064771074"  [ label = "DDG: upstream_request"] 
  "111669149698" -> "30064771074"  [ label = "DDG: "] 
  "30064771078" -> "30064771074"  [ label = "DDG: absl::optional&lt;uint64_t"] 
  "30064771078" -> "30064771074"  [ label = "DDG: enumToInt(timeout_response_code_)"] 
  "30064771074" -> "30064771082"  [ label = "DDG: upstream_request"] 
  "111669149698" -> "30064771082"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: absl::optional"] 
  "30064771079" -> "30064771078"  [ label = "DDG: uint64_t"] 
  "30064771081" -> "30064771078"  [ label = "DDG: timeout_response_code_"] 
  "30064771084" -> "30064771083"  [ label = "DDG: downstream_response_started_"] 
  "111669149698" -> "30064771083"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: retry_state_"] 
  "30064771086" -> "30064771085"  [ label = "DDG: [this, can_use_http3 = upstream_request.upstreamStreamOptions().can_use_http3_]() -&gt; void {
          // Without any knowledge about what's going on in the connection pool, retry the request
          // with the safest settings which is no early data but keep using or not using alt-svc as
          // before. In this way, QUIC won't be falsely marked as broken.
          doRetry(/*can_send_early_data*/ false, can_use_http3, TimeoutRetry::Yes);
        }"] 
  "111669149698" -> "30064771079"  [ label = "DDG: "] 
  "111669149698" -> "30064771081"  [ label = "DDG: "] 
  "111669149698" -> "30064771084"  [ label = "DDG: "] 
  "30064771083" -> "30064771086"  [ label = "DDG: retry_state_"] 
  "111669149698" -> "30064771086"  [ label = "DDG: "] 
  "30064771085" -> "30064771087"  [ label = "DDG: retry_status"] 
  "111669149698" -> "30064771087"  [ label = "DDG: "] 
  "30064771082" -> "30064771089"  [ label = "DDG: upstream_request"] 
  "111669149698" -> "30064771089"  [ label = "DDG: "] 
  "111669149698" -> "30064771090"  [ label = "DDG: "] 
  "30064771089" -> "30064771091"  [ label = "DDG: upstream_request"] 
  "111669149698" -> "30064771091"  [ label = "DDG: "] 
  "30064771087" -> "30064771092"  [ label = "DDG: retry_status"] 
  "111669149698" -> "30064771092"  [ label = "DDG: "] 
  "30064771095" -> "30064771094"  [ label = "DDG: callbacks_"] 
  "111669149698" -> "30064771095"  [ label = "DDG: "] 
  "30064771092" -> "30064771098"  [ label = "DDG: retry_status"] 
  "111669149698" -> "30064771098"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: callbacks_"] 
  "111669149698" -> "30064771101"  [ label = "DDG: "] 
  "30064771083" -> "55834574851"  [ label = "CDG: "] 
  "30064771083" -> "30064771088"  [ label = "CDG: "] 
  "30064771083" -> "30064771087"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
  "30064771083" -> "124554051584"  [ label = "CDG: "] 
  "30064771087" -> "55834574852"  [ label = "CDG: "] 
  "30064771087" -> "30064771093"  [ label = "CDG: "] 
  "30064771087" -> "30064771092"  [ label = "CDG: "] 
  "30064771087" -> "30064771091"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771092" -> "55834574854"  [ label = "CDG: "] 
  "30064771092" -> "55834574853"  [ label = "CDG: "] 
  "30064771092" -> "30064771099"  [ label = "CDG: "] 
  "30064771092" -> "30064771098"  [ label = "CDG: "] 
  "30064771092" -> "30064771097"  [ label = "CDG: "] 
  "30064771092" -> "30064771096"  [ label = "CDG: "] 
  "30064771092" -> "30064771095"  [ label = "CDG: "] 
  "30064771092" -> "30064771094"  [ label = "CDG: "] 
  "30064771098" -> "55834574855"  [ label = "CDG: "] 
  "30064771098" -> "30064771100"  [ label = "CDG: "] 
  "30064771098" -> "30064771103"  [ label = "CDG: "] 
  "30064771098" -> "30064771102"  [ label = "CDG: "] 
  "30064771098" -> "30064771101"  [ label = "CDG: "] 
}
"""
)
