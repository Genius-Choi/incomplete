[33mval[0m [36mres896[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "trustedEnclaveInit" {  
"111669149697" [label = <(METHOD,trustedEnclaveInit)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,uint32_t _logLevel)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    CALL_ONCE
    LOG_INFO(__FUNCTION__);

  ...,{
    CALL_ONCE
    LOG_INFO(__FUNCTION__);

  ...)<SUB>1</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,globalLogLevel_ = _logLevel)<SUB>5</SUB>> ]
"68719476736" [label = <(IDENTIFIER,globalLogLevel_,globalLogLevel_ = _logLevel)<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,_logLevel,globalLogLevel_ = _logLevel)<SUB>5</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,oc_realloc_func = &amp;reallocate_function)<SUB>7</SUB>> ]
"68719476738" [label = <(IDENTIFIER,oc_realloc_func,oc_realloc_func = &amp;reallocate_function)<SUB>7</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.addressOf,&amp;reallocate_function)<SUB>7</SUB>> ]
"68719476739" [label = <(IDENTIFIER,reallocate_function,oc_realloc_func = &amp;reallocate_function)<SUB>7</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,oc_free_func = &amp;free_function)<SUB>8</SUB>> ]
"68719476740" [label = <(IDENTIFIER,oc_free_func,oc_free_func = &amp;free_function)<SUB>8</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.addressOf,&amp;free_function)<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,free_function,oc_free_func = &amp;free_function)<SUB>8</SUB>> ]
"30064771077" [label = <(LOG_INFO,LOG_INFO(&quot;Setting memory functions&quot;))<SUB>10</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Setting memory functions&quot;,LOG_INFO(&quot;Setting memory functions&quot;))<SUB>10</SUB>> ]
"30064771078" [label = <(mp_get_memory_functions,mp_get_memory_functions(NULL, &amp;gmp_realloc_func...)<SUB>12</SUB>> ]
"68719476742" [label = <(IDENTIFIER,NULL,mp_get_memory_functions(NULL, &amp;gmp_realloc_func...)<SUB>12</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.addressOf,&amp;gmp_realloc_func)<SUB>12</SUB>> ]
"68719476743" [label = <(IDENTIFIER,gmp_realloc_func,mp_get_memory_functions(NULL, &amp;gmp_realloc_func...)<SUB>12</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.addressOf,&amp;gmp_free_func)<SUB>12</SUB>> ]
"68719476744" [label = <(IDENTIFIER,gmp_free_func,mp_get_memory_functions(NULL, &amp;gmp_realloc_func...)<SUB>12</SUB>> ]
"30064771081" [label = <(mp_set_memory_functions,mp_set_memory_functions(NULL, oc_realloc_func, ...)<SUB>13</SUB>> ]
"68719476745" [label = <(IDENTIFIER,NULL,mp_set_memory_functions(NULL, oc_realloc_func, ...)<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,oc_realloc_func,mp_set_memory_functions(NULL, oc_realloc_func, ...)<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,oc_free_func,mp_set_memory_functions(NULL, oc_realloc_func, ...)<SUB>13</SUB>> ]
"30064771082" [label = <(LOG_INFO,LOG_INFO(&quot;Calling enclave init&quot;))<SUB>15</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;Calling enclave init&quot;,LOG_INFO(&quot;Calling enclave init&quot;))<SUB>15</SUB>> ]
"30064771083" [label = <(enclave_init,enclave_init())<SUB>18</SUB>> ]
"30064771084" [label = <(LOG_INFO,LOG_INFO(&quot;Reading random&quot;))<SUB>21</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;Reading random&quot;,LOG_INFO(&quot;Reading random&quot;))<SUB>21</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,globalRandom = calloc(32,1))<SUB>23</SUB>> ]
"68719476748" [label = <(IDENTIFIER,globalRandom,globalRandom = calloc(32,1))<SUB>23</SUB>> ]
"30064771086" [label = <(calloc,calloc(32,1))<SUB>23</SUB>> ]
"90194313219" [label = <(LITERAL,32,calloc(32,1))<SUB>23</SUB>> ]
"90194313220" [label = <(LITERAL,1,calloc(32,1))<SUB>23</SUB>> ]
"94489280512" [label = <(LOCAL,int ret: int)<SUB>25</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,ret = sgx_read_rand(globalRandom, 32))<SUB>25</SUB>> ]
"68719476749" [label = <(IDENTIFIER,ret,ret = sgx_read_rand(globalRandom, 32))<SUB>25</SUB>> ]
"30064771088" [label = <(sgx_read_rand,sgx_read_rand(globalRandom, 32))<SUB>25</SUB>> ]
"68719476750" [label = <(IDENTIFIER,globalRandom,sgx_read_rand(globalRandom, 32))<SUB>25</SUB>> ]
"90194313221" [label = <(LITERAL,32,sgx_read_rand(globalRandom, 32))<SUB>25</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (ret != SGX_SUCCESS))<SUB>27</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.notEquals,ret != SGX_SUCCESS)<SUB>27</SUB>> ]
"68719476751" [label = <(IDENTIFIER,ret,ret != SGX_SUCCESS)<SUB>27</SUB>> ]
"68719476752" [label = <(IDENTIFIER,SGX_SUCCESS,ret != SGX_SUCCESS)<SUB>27</SUB>> ]
"25769803778" [label = <(BLOCK,{
        LOG_ERROR(&quot;sgx_read_rand failed. Abor...,{
        LOG_ERROR(&quot;sgx_read_rand failed. Abor...)<SUB>28</SUB>> ]
"30064771090" [label = <(LOG_ERROR,LOG_ERROR(&quot;sgx_read_rand failed. Aboring enclav...)<SUB>29</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;sgx_read_rand failed. Aboring enclave.&quot;,LOG_ERROR(&quot;sgx_read_rand failed. Aboring enclav...)<SUB>29</SUB>> ]
"30064771091" [label = <(abort,abort())<SUB>30</SUB>> ]
"30064771092" [label = <(LOG_INFO,LOG_INFO(&quot;SECURITY WARNING: sgxwallet is runnin...)<SUB>35</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;SECURITY WARNING: sgxwallet is running in INSE...,LOG_INFO(&quot;SECURITY WARNING: sgxwallet is runnin...)<SUB>35</SUB>> ]
"30064771093" [label = <(LOG_INFO,LOG_INFO(&quot;SECURITY WARNING: sgxwallet is runnin...)<SUB>43</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;SECURITY WARNING: sgxwallet is running in INSE...,LOG_INFO(&quot;SECURITY WARNING: sgxwallet is runnin...)<SUB>43</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771092"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "90194313216"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "30064771082" -> "90194313217"  [ label = "AST: "] 
  "30064771084" -> "90194313218"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "90194313219"  [ label = "AST: "] 
  "30064771086" -> "90194313220"  [ label = "AST: "] 
  "30064771087" -> "68719476749"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476750"  [ label = "AST: "] 
  "30064771088" -> "90194313221"  [ label = "AST: "] 
  "47244640256" -> "30064771089"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771089" -> "68719476751"  [ label = "AST: "] 
  "30064771089" -> "68719476752"  [ label = "AST: "] 
  "25769803778" -> "30064771090"  [ label = "AST: "] 
  "25769803778" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "90194313222"  [ label = "AST: "] 
  "30064771092" -> "90194313223"  [ label = "AST: "] 
  "30064771093" -> "90194313224"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771073" -> "30064771076"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771078" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771084" -> "30064771086"  [ label = "CFG: "] 
  "30064771085" -> "30064771088"  [ label = "CFG: "] 
  "30064771087" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771093" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771078"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771089" -> "30064771092"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "30064771072" -> "128849018880"  [ label = "DDG: _logLevel"] 
  "30064771072" -> "128849018880"  [ label = "DDG: globalLogLevel_ = _logLevel"] 
  "30064771073" -> "128849018880"  [ label = "DDG: &amp;reallocate_function"] 
  "30064771073" -> "128849018880"  [ label = "DDG: oc_realloc_func = &amp;reallocate_function"] 
  "30064771075" -> "128849018880"  [ label = "DDG: &amp;free_function"] 
  "30064771075" -> "128849018880"  [ label = "DDG: oc_free_func = &amp;free_function"] 
  "30064771077" -> "128849018880"  [ label = "DDG: LOG_INFO(&quot;Setting memory functions&quot;)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: &amp;gmp_realloc_func"] 
  "30064771078" -> "128849018880"  [ label = "DDG: &amp;gmp_free_func"] 
  "30064771078" -> "128849018880"  [ label = "DDG: mp_get_memory_functions(NULL, &amp;gmp_realloc_func, &amp;gmp_free_func)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771081" -> "128849018880"  [ label = "DDG: oc_realloc_func"] 
  "30064771081" -> "128849018880"  [ label = "DDG: oc_free_func"] 
  "30064771081" -> "128849018880"  [ label = "DDG: mp_set_memory_functions(NULL, oc_realloc_func, oc_free_func)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: LOG_INFO(&quot;Calling enclave init&quot;)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: enclave_init()"] 
  "30064771084" -> "128849018880"  [ label = "DDG: LOG_INFO(&quot;Reading random&quot;)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: calloc(32,1)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: globalRandom = calloc(32,1)"] 
  "30064771088" -> "128849018880"  [ label = "DDG: globalRandom"] 
  "30064771087" -> "128849018880"  [ label = "DDG: sgx_read_rand(globalRandom, 32)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: ret = sgx_read_rand(globalRandom, 32)"] 
  "30064771089" -> "128849018880"  [ label = "DDG: ret"] 
  "30064771089" -> "128849018880"  [ label = "DDG: ret != SGX_SUCCESS"] 
  "30064771090" -> "128849018880"  [ label = "DDG: LOG_ERROR(&quot;sgx_read_rand failed. Aboring enclave.&quot;)"] 
  "30064771092" -> "128849018880"  [ label = "DDG: LOG_INFO(&quot;SECURITY WARNING: sgxwallet is running in INSECURE DEBUG MODE! NEVER USE IN PRODUCTION!&quot;)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: LOG_INFO(&quot;SECURITY WARNING: sgxwallet is running in INSECURE SIMULATION MODE! NEVER USE IN PRODUCTION!&quot;)"] 
  "30064771089" -> "128849018880"  [ label = "DDG: SGX_SUCCESS"] 
  "30064771072" -> "128849018880"  [ label = "DDG: globalLogLevel_"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "115964116992" -> "30064771072"  [ label = "DDG: _logLevel"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: globalRandom"] 
  "30064771088" -> "30064771087"  [ label = "DDG: 32"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771078" -> "30064771081"  [ label = "DDG: NULL"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771073" -> "30064771081"  [ label = "DDG: oc_realloc_func"] 
  "30064771075" -> "30064771081"  [ label = "DDG: oc_free_func"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771085" -> "30064771088"  [ label = "DDG: globalRandom"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771087" -> "30064771089"  [ label = "DDG: ret"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771089" -> "30064771090"  [ label = "CDG: "] 
  "30064771089" -> "30064771091"  [ label = "CDG: "] 
}
"""
)
