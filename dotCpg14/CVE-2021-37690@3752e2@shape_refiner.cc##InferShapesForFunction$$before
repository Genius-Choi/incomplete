[33mval[0m [36mres1333[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "InferShapesForFunction" {  
"111669149699" [label = <(METHOD,InferShapesForFunction)<SUB>1</SUB>> ]
"115964116996" [label = <(PARAM,const FunctionDef* function_def)<SUB>2</SUB>> ]
"115964116997" [label = <(PARAM,AttrSlice attributes)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,ExtendedInferenceContext* outer_context)<SUB>3</SUB>> ]
"25769803780" [label = <(BLOCK,{
  const Graph* graph;
  auto it = functions_....,{
  const Graph* graph;
  auto it = functions_....)<SUB>3</SUB>> ]
"94489280514" [label = <(LOCAL,const Graph* graph: Graph*)<SUB>4</SUB>> ]
"94489280515" [label = <(LOCAL,auto it: auto)<SUB>5</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,it = functions_.find(function_def))<SUB>5</SUB>> ]
"68719476745" [label = <(IDENTIFIER,it,it = functions_.find(function_def))<SUB>5</SUB>> ]
"30064771081" [label = <(find,functions_.find(function_def))<SUB>5</SUB>> ]
"68719476746" [label = <(IDENTIFIER,functions_,functions_.find(function_def))<SUB>5</SUB>> ]
"68719476747" [label = <(IDENTIFIER,function_def,functions_.find(function_def))<SUB>5</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (it != functions_.end()))<SUB>6</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.notEquals,it != functions_.end())<SUB>6</SUB>> ]
"68719476748" [label = <(IDENTIFIER,it,it != functions_.end())<SUB>6</SUB>> ]
"30064771083" [label = <(end,functions_.end())<SUB>6</SUB>> ]
"68719476749" [label = <(IDENTIFIER,functions_,functions_.end())<SUB>6</SUB>> ]
"25769803781" [label = <(BLOCK,{
    graph = it-&gt;second.get();
  },{
    graph = it-&gt;second.get();
  })<SUB>6</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,graph = it-&gt;second.get())<SUB>7</SUB>> ]
"68719476750" [label = <(IDENTIFIER,graph,graph = it-&gt;second.get())<SUB>7</SUB>> ]
"30064771085" [label = <(get,it-&gt;second.get())<SUB>7</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>7</SUB>> ]
"68719476751" [label = <(IDENTIFIER,it,it-&gt;second.get())<SUB>7</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,second,second)<SUB>7</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>8</SUB>> ]
"25769803782" [label = <(BLOCK,{
    InstantiationResult result;
    TF_RETURN...,{
    InstantiationResult result;
    TF_RETURN...)<SUB>8</SUB>> ]
"94489280516" [label = <(LOCAL,InstantiationResult result: InstantiationResult)<SUB>9</SUB>> ]
"30064771087" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(InstantiateFunction(
       ...)<SUB>10</SUB>> ]
"30064771088" [label = <(InstantiateFunction,InstantiateFunction(
        *function_def, att...)<SUB>10</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.indirection,*function_def)<SUB>11</SUB>> ]
"68719476752" [label = <(IDENTIFIER,function_def,InstantiateFunction(
        *function_def, att...)<SUB>11</SUB>> ]
"68719476753" [label = <(IDENTIFIER,attributes,InstantiateFunction(
        *function_def, att...)<SUB>11</SUB>> ]
"124554051584" [label = <(METHOD_REF,[this](const string&amp; op, const OpDef** sig) {
 ...,InstantiateFunction(
        *function_def, att...)<SUB>12</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>15</SUB>> ]
"68719476754" [label = <(IDENTIFIER,result,InstantiateFunction(
        *function_def, att...)<SUB>15</SUB>> ]
"94489280517" [label = <(LOCAL,Graph* new_graph: Graph*)<SUB>17</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,* new_graph = new Graph(function_library_))<SUB>17</SUB>> ]
"68719476755" [label = <(IDENTIFIER,new_graph,* new_graph = new Graph(function_library_))<SUB>17</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.new,new Graph(function_library_))<SUB>17</SUB>> ]
"68719476756" [label = <(IDENTIFIER,Graph,new Graph(function_library_))<SUB>17</SUB>> ]
"68719476757" [label = <(IDENTIFIER,function_library_,new Graph(function_library_))<SUB>17</SUB>> ]
"94489280518" [label = <(LOCAL,GraphConstructorOptions options: GraphConstructorOptions)<SUB>18</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,options.allow_internal_ops = true)<SUB>19</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.fieldAccess,options.allow_internal_ops)<SUB>19</SUB>> ]
"68719476758" [label = <(IDENTIFIER,options,options.allow_internal_ops = true)<SUB>19</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,allow_internal_ops,allow_internal_ops)<SUB>19</SUB>> ]
"90194313216" [label = <(LITERAL,true,options.allow_internal_ops = true)<SUB>19</SUB>> ]
"30064771095" [label = <(TF_RETURN_IF_ERROR,TF_RETURN_IF_ERROR(
        ConvertNodeDefsToGr...)<SUB>20</SUB>> ]
"30064771096" [label = <(ConvertNodeDefsToGraph,ConvertNodeDefsToGraph(options, result.nodes, n...)<SUB>21</SUB>> ]
"68719476759" [label = <(IDENTIFIER,options,ConvertNodeDefsToGraph(options, result.nodes, n...)<SUB>21</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.fieldAccess,result.nodes)<SUB>21</SUB>> ]
"68719476760" [label = <(IDENTIFIER,result,ConvertNodeDefsToGraph(options, result.nodes, n...)<SUB>21</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,nodes,nodes)<SUB>21</SUB>> ]
"68719476761" [label = <(IDENTIFIER,new_graph,ConvertNodeDefsToGraph(options, result.nodes, n...)<SUB>21</SUB>> ]
"30064771098" [label = <(reset,functions_[function_def].reset(new_graph))<SUB>22</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.indirectIndexAccess,functions_[function_def])<SUB>22</SUB>> ]
"68719476762" [label = <(IDENTIFIER,functions_,functions_[function_def].reset(new_graph))<SUB>22</SUB>> ]
"68719476763" [label = <(IDENTIFIER,function_def,functions_[function_def].reset(new_graph))<SUB>22</SUB>> ]
"68719476764" [label = <(IDENTIFIER,new_graph,functions_[function_def].reset(new_graph))<SUB>22</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.assignment,graph = new_graph)<SUB>23</SUB>> ]
"68719476765" [label = <(IDENTIFIER,graph,graph = new_graph)<SUB>23</SUB>> ]
"68719476766" [label = <(IDENTIFIER,new_graph,graph = new_graph)<SUB>23</SUB>> ]
"94489280513" [label = <(LOCAL,std.unordered_set&lt;constNode*&gt; function_nodes: std.unordered_set&lt;Node*&gt;)<SUB>26</SUB>> ]
"94489280512" [label = <(LOCAL,Status inference_status: Status)<SUB>27</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.assignment,inference_status = Status::OK())<SUB>27</SUB>> ]
"68719476767" [label = <(IDENTIFIER,inference_status,inference_status = Status::OK())<SUB>27</SUB>> ]
"30064771102" [label = <(OK,Status::OK())<SUB>27</SUB>> ]
"25769803783" [label = <(BLOCK,{
    auto node_shape_inference_lambda = [this,...,{
    auto node_shape_inference_lambda = [this,...)<SUB>28</SUB>> ]
"94489280519" [label = <(LOCAL,auto node_shape_inference_lambda: auto)<SUB>29</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,node_shape_inference_lambda = [this, &amp;outer_con...)<SUB>29</SUB>> ]
"68719476768" [label = <(IDENTIFIER,node_shape_inference_lambda,node_shape_inference_lambda = [this, &amp;outer_con...)<SUB>29</SUB>> ]
"124554051585" [label = <(METHOD_REF,[this, &amp;outer_context, &amp;function_nodes,
       ...,node_shape_inference_lambda = [this, &amp;outer_con...)<SUB>29</SUB>> ]
"30064771104" [label = <(ReverseDFS,ReverseDFS(*graph, {}, node_shape_inference_lam...)<SUB>40</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.indirection,*graph)<SUB>40</SUB>> ]
"68719476769" [label = <(IDENTIFIER,graph,ReverseDFS(*graph, {}, node_shape_inference_lam...)<SUB>40</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>40</SUB>> ]
"68719476770" [label = <(IDENTIFIER,node_shape_inference_lambda,ReverseDFS(*graph, {}, node_shape_inference_lam...)<SUB>40</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,FOR,for (const Node* node:function_nodes))<SUB>44</SUB>> ]
"68719476771" [label = <(IDENTIFIER,function_nodes,for (const Node* node:function_nodes))<SUB>44</SUB>> ]
"94489280520" [label = <(LOCAL,const Node* node: Node*)<SUB>44</SUB>> ]
"25769803784" [label = <(BLOCK,{
    node_to_context_.erase(node);
  },{
    node_to_context_.erase(node);
  })<SUB>44</SUB>> ]
"30064771107" [label = <(erase,node_to_context_.erase(node))<SUB>45</SUB>> ]
"68719476772" [label = <(IDENTIFIER,node_to_context_,node_to_context_.erase(node))<SUB>45</SUB>> ]
"68719476773" [label = <(IDENTIFIER,node,node_to_context_.erase(node))<SUB>45</SUB>> ]
"146028888066" [label = <(RETURN,return inference_status;,return inference_status;)<SUB>48</SUB>> ]
"68719476774" [label = <(IDENTIFIER,inference_status,return inference_status;)<SUB>48</SUB>> ]
"128849018882" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149699" -> "115964116996"  [ label = "AST: "] 
  "111669149699" -> "115964116997"  [ label = "AST: "] 
  "111669149699" -> "115964116995"  [ label = "AST: "] 
  "111669149699" -> "25769803780"  [ label = "AST: "] 
  "111669149699" -> "128849018882"  [ label = "AST: "] 
  "25769803780" -> "94489280514"  [ label = "AST: "] 
  "25769803780" -> "94489280515"  [ label = "AST: "] 
  "25769803780" -> "30064771080"  [ label = "AST: "] 
  "25769803780" -> "47244640257"  [ label = "AST: "] 
  "25769803780" -> "94489280513"  [ label = "AST: "] 
  "25769803780" -> "94489280512"  [ label = "AST: "] 
  "25769803780" -> "30064771101"  [ label = "AST: "] 
  "25769803780" -> "25769803783"  [ label = "AST: "] 
  "25769803780" -> "47244640259"  [ label = "AST: "] 
  "25769803780" -> "146028888066"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "47244640257" -> "30064771082"  [ label = "AST: "] 
  "47244640257" -> "25769803781"  [ label = "AST: "] 
  "47244640257" -> "47244640258"  [ label = "AST: "] 
  "30064771082" -> "68719476748"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476749"  [ label = "AST: "] 
  "25769803781" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476750"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476751"  [ label = "AST: "] 
  "30064771086" -> "55834574849"  [ label = "AST: "] 
  "47244640258" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "94489280516"  [ label = "AST: "] 
  "25769803782" -> "30064771087"  [ label = "AST: "] 
  "25769803782" -> "94489280517"  [ label = "AST: "] 
  "25769803782" -> "30064771091"  [ label = "AST: "] 
  "25769803782" -> "94489280518"  [ label = "AST: "] 
  "25769803782" -> "30064771093"  [ label = "AST: "] 
  "25769803782" -> "30064771095"  [ label = "AST: "] 
  "25769803782" -> "30064771098"  [ label = "AST: "] 
  "25769803782" -> "30064771100"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "30064771088" -> "124554051584"  [ label = "AST: "] 
  "30064771088" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "68719476752"  [ label = "AST: "] 
  "30064771090" -> "68719476754"  [ label = "AST: "] 
  "30064771091" -> "68719476755"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476756"  [ label = "AST: "] 
  "30064771092" -> "68719476757"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "90194313216"  [ label = "AST: "] 
  "30064771094" -> "68719476758"  [ label = "AST: "] 
  "30064771094" -> "55834574850"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476759"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "68719476761"  [ label = "AST: "] 
  "30064771097" -> "68719476760"  [ label = "AST: "] 
  "30064771097" -> "55834574851"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "68719476764"  [ label = "AST: "] 
  "30064771099" -> "68719476762"  [ label = "AST: "] 
  "30064771099" -> "68719476763"  [ label = "AST: "] 
  "30064771100" -> "68719476765"  [ label = "AST: "] 
  "30064771100" -> "68719476766"  [ label = "AST: "] 
  "30064771101" -> "68719476767"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "25769803783" -> "94489280519"  [ label = "AST: "] 
  "25769803783" -> "30064771103"  [ label = "AST: "] 
  "25769803783" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "68719476768"  [ label = "AST: "] 
  "30064771103" -> "124554051585"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "30064771106"  [ label = "AST: "] 
  "30064771104" -> "68719476770"  [ label = "AST: "] 
  "30064771105" -> "68719476769"  [ label = "AST: "] 
  "47244640259" -> "68719476771"  [ label = "AST: "] 
  "47244640259" -> "94489280520"  [ label = "AST: "] 
  "47244640259" -> "25769803784"  [ label = "AST: "] 
  "25769803784" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "68719476772"  [ label = "AST: "] 
  "30064771107" -> "68719476773"  [ label = "AST: "] 
  "146028888066" -> "68719476774"  [ label = "AST: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771101" -> "124554051585"  [ label = "CFG: "] 
  "146028888066" -> "128849018882"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771082" -> "55834574849"  [ label = "CFG: "] 
  "30064771082" -> "30064771089"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771103" -> "30064771105"  [ label = "CFG: "] 
  "30064771104" -> "30064771107"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771084" -> "30064771102"  [ label = "CFG: "] 
  "124554051585" -> "30064771103"  [ label = "CFG: "] 
  "30064771105" -> "30064771106"  [ label = "CFG: "] 
  "30064771106" -> "30064771104"  [ label = "CFG: "] 
  "30064771107" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "146028888066"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771087" -> "30064771092"  [ label = "CFG: "] 
  "30064771091" -> "55834574850"  [ label = "CFG: "] 
  "30064771093" -> "55834574851"  [ label = "CFG: "] 
  "30064771095" -> "30064771099"  [ label = "CFG: "] 
  "30064771098" -> "30064771100"  [ label = "CFG: "] 
  "30064771100" -> "30064771102"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "55834574849" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "124554051584"  [ label = "CFG: "] 
  "124554051584" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771088"  [ label = "CFG: "] 
  "55834574850" -> "30064771094"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "55834574851" -> "30064771097"  [ label = "CFG: "] 
  "111669149699" -> "30064771081"  [ label = "CFG: "] 
  "146028888066" -> "128849018882"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116997" -> "128849018882"  [ label = "DDG: attributes"] 
  "115964116995" -> "128849018882"  [ label = "DDG: outer_context"] 
  "30064771081" -> "128849018882"  [ label = "DDG: function_def"] 
  "30064771080" -> "128849018882"  [ label = "DDG: functions_.find(function_def)"] 
  "30064771080" -> "128849018882"  [ label = "DDG: it = functions_.find(function_def)"] 
  "30064771082" -> "128849018882"  [ label = "DDG: it"] 
  "30064771083" -> "128849018882"  [ label = "DDG: functions_"] 
  "30064771082" -> "128849018882"  [ label = "DDG: functions_.end()"] 
  "30064771082" -> "128849018882"  [ label = "DDG: it != functions_.end()"] 
  "30064771088" -> "128849018882"  [ label = "DDG: *function_def"] 
  "30064771088" -> "128849018882"  [ label = "DDG: attributes"] 
  "30064771088" -> "128849018882"  [ label = "DDG: &amp;result"] 
  "30064771087" -> "128849018882"  [ label = "DDG: InstantiateFunction(
        *function_def, attributes,
        [this](const string&amp; op, const OpDef** sig) {
          return this-&gt;function_library_-&gt;LookUpOpDef(op, sig);
        },
        &amp;result)"] 
  "30064771087" -> "128849018882"  [ label = "DDG: TF_RETURN_IF_ERROR(InstantiateFunction(
        *function_def, attributes,
        [this](const string&amp; op, const OpDef** sig) {
          return this-&gt;function_library_-&gt;LookUpOpDef(op, sig);
        },
        &amp;result))"] 
  "30064771092" -> "128849018882"  [ label = "DDG: Graph"] 
  "30064771091" -> "128849018882"  [ label = "DDG: new Graph(function_library_)"] 
  "30064771091" -> "128849018882"  [ label = "DDG: * new_graph = new Graph(function_library_)"] 
  "30064771093" -> "128849018882"  [ label = "DDG: options.allow_internal_ops = true"] 
  "30064771096" -> "128849018882"  [ label = "DDG: options"] 
  "30064771096" -> "128849018882"  [ label = "DDG: result.nodes"] 
  "30064771095" -> "128849018882"  [ label = "DDG: ConvertNodeDefsToGraph(options, result.nodes, new_graph)"] 
  "30064771095" -> "128849018882"  [ label = "DDG: TF_RETURN_IF_ERROR(
        ConvertNodeDefsToGraph(options, result.nodes, new_graph))"] 
  "30064771098" -> "128849018882"  [ label = "DDG: functions_[function_def]"] 
  "30064771098" -> "128849018882"  [ label = "DDG: functions_[function_def].reset(new_graph)"] 
  "30064771100" -> "128849018882"  [ label = "DDG: graph"] 
  "30064771100" -> "128849018882"  [ label = "DDG: new_graph"] 
  "30064771100" -> "128849018882"  [ label = "DDG: graph = new_graph"] 
  "30064771084" -> "128849018882"  [ label = "DDG: graph"] 
  "30064771085" -> "128849018882"  [ label = "DDG: it-&gt;second"] 
  "30064771084" -> "128849018882"  [ label = "DDG: it-&gt;second.get()"] 
  "30064771084" -> "128849018882"  [ label = "DDG: graph = it-&gt;second.get()"] 
  "30064771101" -> "128849018882"  [ label = "DDG: inference_status"] 
  "30064771101" -> "128849018882"  [ label = "DDG: Status::OK()"] 
  "30064771101" -> "128849018882"  [ label = "DDG: inference_status = Status::OK()"] 
  "30064771103" -> "128849018882"  [ label = "DDG: node_shape_inference_lambda = [this, &amp;outer_context, &amp;function_nodes,
                                        &amp;inference_status](const Node* node) {
      if (!inference_status.ok()) return;
      inference_status =
          InferShapesForFunctionSubNode(node, outer_context-&gt;get_context());
      function_nodes.insert(node);
    }"] 
  "30064771104" -> "128849018882"  [ label = "DDG: *graph"] 
  "30064771104" -> "128849018882"  [ label = "DDG: {}"] 
  "30064771104" -> "128849018882"  [ label = "DDG: node_shape_inference_lambda"] 
  "30064771104" -> "128849018882"  [ label = "DDG: ReverseDFS(*graph, {}, node_shape_inference_lambda)"] 
  "30064771107" -> "128849018882"  [ label = "DDG: node_to_context_"] 
  "30064771107" -> "128849018882"  [ label = "DDG: node_to_context_.erase(node)"] 
  "30064771092" -> "128849018882"  [ label = "DDG: function_library_"] 
  "30064771107" -> "128849018882"  [ label = "DDG: node"] 
  "111669149699" -> "115964116996"  [ label = "DDG: "] 
  "111669149699" -> "115964116997"  [ label = "DDG: "] 
  "111669149699" -> "115964116995"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: functions_"] 
  "30064771081" -> "30064771080"  [ label = "DDG: function_def"] 
  "111669149699" -> "30064771101"  [ label = "DDG: "] 
  "111669149699" -> "25769803783"  [ label = "DDG: "] 
  "68719476774" -> "146028888066"  [ label = "DDG: inference_status"] 
  "111669149699" -> "30064771103"  [ label = "DDG: "] 
  "30064771101" -> "68719476774"  [ label = "DDG: inference_status"] 
  "111669149699" -> "68719476774"  [ label = "DDG: "] 
  "111669149699" -> "30064771081"  [ label = "DDG: "] 
  "115964116996" -> "30064771081"  [ label = "DDG: function_def"] 
  "30064771080" -> "30064771082"  [ label = "DDG: it"] 
  "111669149699" -> "30064771082"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: functions_"] 
  "30064771085" -> "30064771084"  [ label = "DDG: it-&gt;second"] 
  "111669149699" -> "30064771104"  [ label = "DDG: "] 
  "30064771103" -> "30064771104"  [ label = "DDG: node_shape_inference_lambda"] 
  "30064771081" -> "30064771083"  [ label = "DDG: functions_"] 
  "111669149699" -> "30064771083"  [ label = "DDG: "] 
  "30064771092" -> "30064771091"  [ label = "DDG: Graph"] 
  "30064771092" -> "30064771091"  [ label = "DDG: function_library_"] 
  "111669149699" -> "30064771093"  [ label = "DDG: "] 
  "30064771098" -> "30064771100"  [ label = "DDG: new_graph"] 
  "111669149699" -> "30064771100"  [ label = "DDG: "] 
  "111669149699" -> "30064771107"  [ label = "DDG: "] 
  "30064771082" -> "30064771085"  [ label = "DDG: it"] 
  "30064771088" -> "30064771087"  [ label = "DDG: *function_def"] 
  "30064771088" -> "30064771087"  [ label = "DDG: attributes"] 
  "30064771088" -> "30064771087"  [ label = "DDG: [this](const string&amp; op, const OpDef** sig) {
          return this-&gt;function_library_-&gt;LookUpOpDef(op, sig);
        }"] 
  "30064771088" -> "30064771087"  [ label = "DDG: &amp;result"] 
  "30064771096" -> "30064771095"  [ label = "DDG: options"] 
  "30064771096" -> "30064771095"  [ label = "DDG: result.nodes"] 
  "30064771096" -> "30064771095"  [ label = "DDG: new_graph"] 
  "30064771083" -> "30064771098"  [ label = "DDG: functions_"] 
  "30064771096" -> "30064771098"  [ label = "DDG: new_graph"] 
  "111669149699" -> "30064771098"  [ label = "DDG: "] 
  "115964116997" -> "30064771088"  [ label = "DDG: attributes"] 
  "111669149699" -> "30064771088"  [ label = "DDG: "] 
  "111669149699" -> "30064771092"  [ label = "DDG: "] 
  "30064771093" -> "30064771096"  [ label = "DDG: options.allow_internal_ops"] 
  "111669149699" -> "30064771096"  [ label = "DDG: "] 
  "30064771091" -> "30064771096"  [ label = "DDG: new_graph"] 
  "30064771082" -> "55834574850"  [ label = "CDG: "] 
  "30064771082" -> "55834574849"  [ label = "CDG: "] 
  "30064771082" -> "55834574851"  [ label = "CDG: "] 
  "30064771082" -> "30064771084"  [ label = "CDG: "] 
  "30064771082" -> "30064771088"  [ label = "CDG: "] 
  "30064771082" -> "30064771087"  [ label = "CDG: "] 
  "30064771082" -> "30064771086"  [ label = "CDG: "] 
  "30064771082" -> "30064771085"  [ label = "CDG: "] 
  "30064771082" -> "30064771100"  [ label = "CDG: "] 
  "30064771082" -> "30064771099"  [ label = "CDG: "] 
  "30064771082" -> "30064771098"  [ label = "CDG: "] 
  "30064771082" -> "30064771097"  [ label = "CDG: "] 
  "30064771082" -> "30064771092"  [ label = "CDG: "] 
  "30064771082" -> "30064771091"  [ label = "CDG: "] 
  "30064771082" -> "30064771090"  [ label = "CDG: "] 
  "30064771082" -> "30064771089"  [ label = "CDG: "] 
  "30064771082" -> "30064771096"  [ label = "CDG: "] 
  "30064771082" -> "30064771095"  [ label = "CDG: "] 
  "30064771082" -> "30064771094"  [ label = "CDG: "] 
  "30064771082" -> "30064771093"  [ label = "CDG: "] 
  "30064771082" -> "124554051584"  [ label = "CDG: "] 
  "30064771107" -> "30064771107"  [ label = "CDG: "] 
}
"""
)
