[33mval[0m [36mres1168[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "checkquote" {  
"111669149697" [label = <(METHOD,checkquote)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;&quot;&quot;Check the given quote by checking the signat...,)<SUB>4</SUB>> ]
"25769803778" [label = <(BLOCK,tmp0 = struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0)
s...,tmp0 = struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0)
s...)<SUB>15</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,tmp0 = struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0))<SUB>15</SUB>> ]
"68719476745" [label = <(IDENTIFIER,tmp0,tmp0 = struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0))<SUB>15</SUB>> ]
"30064771078" [label = <(unpack_from,struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0))<SUB>15</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,struct.unpack_from)<SUB>15</SUB>> ]
"68719476743" [label = <(IDENTIFIER,struct,struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0))<SUB>15</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,unpack_from,unpack_from)<SUB>15</SUB>> ]
"68719476744" [label = <(IDENTIFIER,struct,struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0))<SUB>15</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;&gt;HHH&quot;,struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0))<SUB>15</SUB>> ]
"68719476742" [label = <(IDENTIFIER,sigblob,struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0))<SUB>15</SUB>> ]
"90194313218" [label = <(LITERAL,0,struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0))<SUB>15</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,sig_alg = tmp0[0])<SUB>15</SUB>> ]
"68719476746" [label = <(IDENTIFIER,sig_alg,sig_alg = tmp0[0])<SUB>15</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.indexAccess,tmp0[0])<SUB>15</SUB>> ]
"68719476747" [label = <(IDENTIFIER,tmp0,sig_alg = tmp0[0])<SUB>15</SUB>> ]
"90194313219" [label = <(LITERAL,0,sig_alg = tmp0[0])<SUB>15</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,hash_alg = tmp0[1])<SUB>15</SUB>> ]
"68719476748" [label = <(IDENTIFIER,hash_alg,hash_alg = tmp0[1])<SUB>15</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.indexAccess,tmp0[1])<SUB>15</SUB>> ]
"68719476749" [label = <(IDENTIFIER,tmp0,hash_alg = tmp0[1])<SUB>15</SUB>> ]
"90194313220" [label = <(LITERAL,1,hash_alg = tmp0[1])<SUB>15</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,sig_size = tmp0[2])<SUB>15</SUB>> ]
"68719476750" [label = <(IDENTIFIER,sig_size,sig_size = tmp0[2])<SUB>15</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.indexAccess,tmp0[2])<SUB>15</SUB>> ]
"68719476751" [label = <(IDENTIFIER,tmp0,sig_size = tmp0[2])<SUB>15</SUB>> ]
"90194313221" [label = <(LITERAL,2,sig_size = tmp0[2])<SUB>15</SUB>> ]
"25769803779" [label = <(BLOCK,tmp1 = struct.unpack_from(f&quot;{sig_size}s&quot;, sigbl...,tmp1 = struct.unpack_from(f&quot;{sig_size}s&quot;, sigbl...)<SUB>17</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,tmp1 = struct.unpack_from(f&quot;{sig_size}s&quot;, sigbl...)<SUB>17</SUB>> ]
"68719476756" [label = <(IDENTIFIER,tmp1,tmp1 = struct.unpack_from(f&quot;{sig_size}s&quot;, sigbl...)<SUB>17</SUB>> ]
"30064771089" [label = <(unpack_from,struct.unpack_from(f&quot;{sig_size}s&quot;, sigblob, 6))<SUB>17</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,struct.unpack_from)<SUB>17</SUB>> ]
"68719476754" [label = <(IDENTIFIER,struct,struct.unpack_from(f&quot;{sig_size}s&quot;, sigblob, 6))<SUB>17</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,unpack_from,unpack_from)<SUB>17</SUB>> ]
"68719476755" [label = <(IDENTIFIER,struct,struct.unpack_from(f&quot;{sig_size}s&quot;, sigblob, 6))<SUB>17</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.formatString,f&quot;{sig_size}s&quot;)<SUB>17</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.formattedValue,{sig_size})<SUB>17</SUB>> ]
"68719476752" [label = <(IDENTIFIER,sig_size,{sig_size})<SUB>17</SUB>> ]
"90194313222" [label = <(LITERAL,s,f&quot;{sig_size}s&quot;)<SUB>17</SUB>> ]
"68719476753" [label = <(IDENTIFIER,sigblob,struct.unpack_from(f&quot;{sig_size}s&quot;, sigblob, 6))<SUB>17</SUB>> ]
"90194313223" [label = <(LITERAL,6,struct.unpack_from(f&quot;{sig_size}s&quot;, sigblob, 6))<SUB>17</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.assignment,signature = tmp1[0])<SUB>17</SUB>> ]
"68719476757" [label = <(IDENTIFIER,signature,signature = tmp1[0])<SUB>17</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.indexAccess,tmp1[0])<SUB>17</SUB>> ]
"68719476758" [label = <(IDENTIFIER,tmp1,signature = tmp1[0])<SUB>17</SUB>> ]
"90194313224" [label = <(LITERAL,0,signature = tmp1[0])<SUB>17</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,pubkey = serialization.load_pem_public_key(aikb...)<SUB>19</SUB>> ]
"68719476764" [label = <(IDENTIFIER,pubkey,pubkey = serialization.load_pem_public_key(aikb...)<SUB>19</SUB>> ]
"30064771096" [label = <(load_pem_public_key,serialization.load_pem_public_key(aikblob, back...)<SUB>19</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.fieldAccess,serialization.load_pem_public_key)<SUB>19</SUB>> ]
"68719476762" [label = <(IDENTIFIER,serialization,serialization.load_pem_public_key(aikblob, back...)<SUB>19</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,load_pem_public_key,load_pem_public_key)<SUB>19</SUB>> ]
"68719476763" [label = <(IDENTIFIER,serialization,serialization.load_pem_public_key(aikblob, back...)<SUB>19</SUB>> ]
"68719476759" [label = <(IDENTIFIER,aikblob,serialization.load_pem_public_key(aikblob, back...)<SUB>19</SUB>> ]
"30064771094" [label = <(default_backend,backends.default_backend())<SUB>19</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.fieldAccess,backends.default_backend)<SUB>19</SUB>> ]
"68719476760" [label = <(IDENTIFIER,backends,backends.default_backend())<SUB>19</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,default_backend,default_backend)<SUB>19</SUB>> ]
"68719476761" [label = <(IDENTIFIER,backends,backends.default_backend())<SUB>19</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>20</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.logicalNot,not isinstance(pubkey, (RSAPublicKey, EllipticC...)<SUB>20</SUB>> ]
"30064771099" [label = <(isinstance,isinstance(pubkey, (RSAPublicKey, EllipticCurve...)<SUB>20</SUB>> ]
"68719476768" [label = <(IDENTIFIER,isinstance,isinstance(pubkey, (RSAPublicKey, EllipticCurve...)<SUB>20</SUB>> ]
"68719476765" [label = <(IDENTIFIER,pubkey,isinstance(pubkey, (RSAPublicKey, EllipticCurve...)<SUB>20</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.tupleLiteral,(RSAPublicKey, EllipticCurvePublicKey))<SUB>20</SUB>> ]
"68719476766" [label = <(IDENTIFIER,RSAPublicKey,(RSAPublicKey, EllipticCurvePublicKey))<SUB>20</SUB>> ]
"68719476767" [label = <(IDENTIFIER,EllipticCurvePublicKey,(RSAPublicKey, EllipticCurvePublicKey))<SUB>20</SUB>> ]
"25769803780" [label = <(BLOCK,raise ValueError(f&quot;Unsupported key type {type(p...,raise ValueError(f&quot;Unsupported key type {type(p...)<SUB>20</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.raise,raise ValueError(f&quot;Unsupported key type {type(p...)<SUB>21</SUB>> ]
"30064771105" [label = <(ValueError,ValueError(f&quot;Unsupported key type {type(pubkey)...)<SUB>21</SUB>> ]
"68719476771" [label = <(IDENTIFIER,ValueError,ValueError(f&quot;Unsupported key type {type(pubkey)...)<SUB>21</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.formatString,f&quot;Unsupported key type {type(pubkey).__name__}&quot;)<SUB>21</SUB>> ]
"90194313225" [label = <(LITERAL,Unsupported key type ,f&quot;Unsupported key type {type(pubkey).__name__}&quot;)<SUB>21</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.formattedValue,{type(pubkey).__name__})<SUB>21</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.fieldAccess,type(pubkey).__name__)<SUB>21</SUB>> ]
"30064771101" [label = <(type,type(pubkey))<SUB>21</SUB>> ]
"68719476770" [label = <(IDENTIFIER,type,type(pubkey))<SUB>21</SUB>> ]
"68719476769" [label = <(IDENTIFIER,pubkey,type(pubkey))<SUB>21</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,__name__,__name__)<SUB>21</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>23</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.logicalAnd,isinstance(pubkey, RSAPublicKey) and sig_alg no...)<SUB>23</SUB>> ]
"30064771107" [label = <(isinstance,isinstance(pubkey, RSAPublicKey))<SUB>23</SUB>> ]
"68719476774" [label = <(IDENTIFIER,isinstance,isinstance(pubkey, RSAPublicKey))<SUB>23</SUB>> ]
"68719476772" [label = <(IDENTIFIER,pubkey,isinstance(pubkey, RSAPublicKey))<SUB>23</SUB>> ]
"68719476773" [label = <(IDENTIFIER,RSAPublicKey,isinstance(pubkey, RSAPublicKey))<SUB>23</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.notIn,sig_alg not in [tpm2_objects.TPM_ALG_RSASSA])<SUB>23</SUB>> ]
"68719476775" [label = <(IDENTIFIER,sig_alg,sig_alg not in [tpm2_objects.TPM_ALG_RSASSA])<SUB>23</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.listLiteral,[tpm2_objects.TPM_ALG_RSASSA])<SUB>23</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.fieldAccess,tpm2_objects.TPM_ALG_RSASSA)<SUB>23</SUB>> ]
"68719476776" [label = <(IDENTIFIER,tpm2_objects,[tpm2_objects.TPM_ALG_RSASSA])<SUB>23</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,TPM_ALG_RSASSA,TPM_ALG_RSASSA)<SUB>23</SUB>> ]
"25769803781" [label = <(BLOCK,raise ValueError(f&quot;Unsupported quote signature ...,raise ValueError(f&quot;Unsupported quote signature ...)<SUB>23</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.raise,raise ValueError(f&quot;Unsupported quote signature ...)<SUB>24</SUB>> ]
"30064771114" [label = <(ValueError,ValueError(f&quot;Unsupported quote signature algori...)<SUB>24</SUB>> ]
"68719476778" [label = <(IDENTIFIER,ValueError,ValueError(f&quot;Unsupported quote signature algori...)<SUB>24</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.formatString,f&quot;Unsupported quote signature algorithm '{sig_a...)<SUB>24</SUB>> ]
"90194313226" [label = <(LITERAL,Unsupported quote signature algorithm ',f&quot;Unsupported quote signature algorithm '{sig_a...)<SUB>24</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.formattedValue,{sig_alg:#x})<SUB>24</SUB>> ]
"68719476777" [label = <(IDENTIFIER,sig_alg,{sig_alg:#x})<SUB>24</SUB>> ]
"90194313227" [label = <(LITERAL,' for RSA keys,f&quot;Unsupported quote signature algorithm '{sig_a...)<SUB>24</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>25</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.logicalAnd,isinstance(pubkey, EllipticCurvePublicKey) and ...)<SUB>25</SUB>> ]
"30064771116" [label = <(isinstance,isinstance(pubkey, EllipticCurvePublicKey))<SUB>25</SUB>> ]
"68719476781" [label = <(IDENTIFIER,isinstance,isinstance(pubkey, EllipticCurvePublicKey))<SUB>25</SUB>> ]
"68719476779" [label = <(IDENTIFIER,pubkey,isinstance(pubkey, EllipticCurvePublicKey))<SUB>25</SUB>> ]
"68719476780" [label = <(IDENTIFIER,EllipticCurvePublicKey,isinstance(pubkey, EllipticCurvePublicKey))<SUB>25</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.notIn,sig_alg not in [tpm2_objects.TPM_ALG_ECDSA])<SUB>25</SUB>> ]
"68719476782" [label = <(IDENTIFIER,sig_alg,sig_alg not in [tpm2_objects.TPM_ALG_ECDSA])<SUB>25</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.listLiteral,[tpm2_objects.TPM_ALG_ECDSA])<SUB>25</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.fieldAccess,tpm2_objects.TPM_ALG_ECDSA)<SUB>25</SUB>> ]
"68719476783" [label = <(IDENTIFIER,tpm2_objects,[tpm2_objects.TPM_ALG_ECDSA])<SUB>25</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,TPM_ALG_ECDSA,TPM_ALG_ECDSA)<SUB>25</SUB>> ]
"25769803782" [label = <(BLOCK,raise ValueError(f&quot;Unsupported quote signature ...,raise ValueError(f&quot;Unsupported quote signature ...)<SUB>25</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.raise,raise ValueError(f&quot;Unsupported quote signature ...)<SUB>26</SUB>> ]
"30064771123" [label = <(ValueError,ValueError(f&quot;Unsupported quote signature algori...)<SUB>26</SUB>> ]
"68719476785" [label = <(IDENTIFIER,ValueError,ValueError(f&quot;Unsupported quote signature algori...)<SUB>26</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.formatString,f&quot;Unsupported quote signature algorithm '{sig_a...)<SUB>26</SUB>> ]
"90194313228" [label = <(LITERAL,Unsupported quote signature algorithm ',f&quot;Unsupported quote signature algorithm '{sig_a...)<SUB>26</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.formattedValue,{sig_alg:#x})<SUB>26</SUB>> ]
"68719476784" [label = <(IDENTIFIER,sig_alg,{sig_alg:#x})<SUB>26</SUB>> ]
"90194313229" [label = <(LITERAL,' for EC keys,f&quot;Unsupported quote signature algorithm '{sig_a...)<SUB>26</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.assignment,hashfunc = tmp2 = tpm2_objects.HASH_FUNCS
tmp2....)<SUB>28</SUB>> ]
"68719476791" [label = <(IDENTIFIER,hashfunc,hashfunc = tmp2 = tpm2_objects.HASH_FUNCS
tmp2....)<SUB>28</SUB>> ]
"25769803783" [label = <(BLOCK,tmp2 = tpm2_objects.HASH_FUNCS
tmp2.get(hash_alg),tmp2 = tpm2_objects.HASH_FUNCS
tmp2.get(hash_alg))<SUB>28</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.assignment,tmp2 = tpm2_objects.HASH_FUNCS)<SUB>28</SUB>> ]
"68719476788" [label = <(IDENTIFIER,tmp2,tmp2 = tpm2_objects.HASH_FUNCS)<SUB>28</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.fieldAccess,tpm2_objects.HASH_FUNCS)<SUB>28</SUB>> ]
"68719476787" [label = <(IDENTIFIER,tpm2_objects,tmp2 = tpm2_objects.HASH_FUNCS)<SUB>28</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,HASH_FUNCS,HASH_FUNCS)<SUB>28</SUB>> ]
"30064771128" [label = <(get,tmp2.get(hash_alg))<SUB>28</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.fieldAccess,tmp2.get)<SUB>28</SUB>> ]
"68719476789" [label = <(IDENTIFIER,tmp2,tmp2.get(hash_alg))<SUB>28</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,get,get)<SUB>28</SUB>> ]
"68719476790" [label = <(IDENTIFIER,tmp2,tmp2.get(hash_alg))<SUB>28</SUB>> ]
"68719476786" [label = <(IDENTIFIER,hash_alg,tmp2.get(hash_alg))<SUB>28</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>29</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.logicalNot,not hashfunc)<SUB>29</SUB>> ]
"68719476792" [label = <(IDENTIFIER,hashfunc,not hashfunc)<SUB>29</SUB>> ]
"25769803784" [label = <(BLOCK,raise ValueError(f&quot;Unsupported hash with id {ha...,raise ValueError(f&quot;Unsupported hash with id {ha...)<SUB>29</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.raise,raise ValueError(f&quot;Unsupported hash with id {ha...)<SUB>30</SUB>> ]
"30064771133" [label = <(ValueError,ValueError(f&quot;Unsupported hash with id {hash_alg...)<SUB>30</SUB>> ]
"68719476794" [label = <(IDENTIFIER,ValueError,ValueError(f&quot;Unsupported hash with id {hash_alg...)<SUB>30</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.formatString,f&quot;Unsupported hash with id {hash_alg:#x} in sig...)<SUB>30</SUB>> ]
"90194313230" [label = <(LITERAL,Unsupported hash with id ,f&quot;Unsupported hash with id {hash_alg:#x} in sig...)<SUB>30</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.formattedValue,{hash_alg:#x})<SUB>30</SUB>> ]
"68719476793" [label = <(IDENTIFIER,hash_alg,{hash_alg:#x})<SUB>30</SUB>> ]
"90194313231" [label = <(LITERAL, in signature blob,f&quot;Unsupported hash with id {hash_alg:#x} in sig...)<SUB>30</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>31</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.notEquals,hashfunc.name != exp_hash_alg)<SUB>31</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.fieldAccess,hashfunc.name)<SUB>31</SUB>> ]
"68719476795" [label = <(IDENTIFIER,hashfunc,hashfunc.name != exp_hash_alg)<SUB>31</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,name,name)<SUB>31</SUB>> ]
"68719476796" [label = <(IDENTIFIER,exp_hash_alg,hashfunc.name != exp_hash_alg)<SUB>31</SUB>> ]
"25769803785" [label = <(BLOCK,raise ValueError(f&quot;Quote was expected to use {e...,raise ValueError(f&quot;Quote was expected to use {e...)<SUB>31</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.raise,raise ValueError(f&quot;Quote was expected to use {e...)<SUB>32</SUB>> ]
"30064771141" [label = <(ValueError,ValueError(f&quot;Quote was expected to use {exp_has...)<SUB>32</SUB>> ]
"68719476799" [label = <(IDENTIFIER,ValueError,ValueError(f&quot;Quote was expected to use {exp_has...)<SUB>32</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.formatString,f&quot;Quote was expected to use {exp_hash_alg} but ...)<SUB>32</SUB>> ]
"90194313232" [label = <(LITERAL,Quote was expected to use ,f&quot;Quote was expected to use {exp_hash_alg} but ...)<SUB>32</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.formattedValue,{exp_hash_alg})<SUB>32</SUB>> ]
"68719476797" [label = <(IDENTIFIER,exp_hash_alg,{exp_hash_alg})<SUB>32</SUB>> ]
"90194313233" [label = <(LITERAL, but used ,f&quot;Quote was expected to use {exp_hash_alg} but ...)<SUB>32</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.formattedValue,{hashfunc.name})<SUB>32</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.fieldAccess,hashfunc.name)<SUB>32</SUB>> ]
"68719476798" [label = <(IDENTIFIER,hashfunc,{hashfunc.name})<SUB>32</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,name,name)<SUB>32</SUB>> ]
"90194313234" [label = <(LITERAL, instead,f&quot;Quote was expected to use {exp_hash_alg} but ...)<SUB>32</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.assignment,digest = hashes.Hash(hashfunc, backend = backen...)<SUB>34</SUB>> ]
"68719476805" [label = <(IDENTIFIER,digest,digest = hashes.Hash(hashfunc, backend = backen...)<SUB>34</SUB>> ]
"30064771146" [label = <(Hash,hashes.Hash(hashfunc, backend = backends.defaul...)<SUB>34</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.fieldAccess,hashes.Hash)<SUB>34</SUB>> ]
"68719476803" [label = <(IDENTIFIER,hashes,hashes.Hash(hashfunc, backend = backends.defaul...)<SUB>34</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,Hash,Hash)<SUB>34</SUB>> ]
"68719476804" [label = <(IDENTIFIER,hashes,hashes.Hash(hashfunc, backend = backends.defaul...)<SUB>34</SUB>> ]
"68719476800" [label = <(IDENTIFIER,hashfunc,hashes.Hash(hashfunc, backend = backends.defaul...)<SUB>34</SUB>> ]
"30064771144" [label = <(default_backend,backends.default_backend())<SUB>34</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.fieldAccess,backends.default_backend)<SUB>34</SUB>> ]
"68719476801" [label = <(IDENTIFIER,backends,backends.default_backend())<SUB>34</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,default_backend,default_backend)<SUB>34</SUB>> ]
"68719476802" [label = <(IDENTIFIER,backends,backends.default_backend())<SUB>34</SUB>> ]
"30064771149" [label = <(update,digest.update(quoteblob))<SUB>35</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.fieldAccess,digest.update)<SUB>35</SUB>> ]
"68719476807" [label = <(IDENTIFIER,digest,digest.update(quoteblob))<SUB>35</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,update,update)<SUB>35</SUB>> ]
"68719476808" [label = <(IDENTIFIER,digest,digest.update(quoteblob))<SUB>35</SUB>> ]
"68719476806" [label = <(IDENTIFIER,quoteblob,digest.update(quoteblob))<SUB>35</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.assignment,quote_digest = digest.finalize())<SUB>36</SUB>> ]
"68719476811" [label = <(IDENTIFIER,quote_digest,quote_digest = digest.finalize())<SUB>36</SUB>> ]
"30064771151" [label = <(finalize,digest.finalize())<SUB>36</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.fieldAccess,digest.finalize)<SUB>36</SUB>> ]
"68719476809" [label = <(IDENTIFIER,digest,digest.finalize())<SUB>36</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,finalize,finalize)<SUB>36</SUB>> ]
"68719476810" [label = <(IDENTIFIER,digest,digest.finalize())<SUB>36</SUB>> ]
"30064771153" [label = <(verify,verify(pubkey, signature, quote_digest, hashfunc))<SUB>38</SUB>> ]
"68719476816" [label = <(IDENTIFIER,verify,verify(pubkey, signature, quote_digest, hashfunc))<SUB>38</SUB>> ]
"68719476812" [label = <(IDENTIFIER,pubkey,verify(pubkey, signature, quote_digest, hashfunc))<SUB>38</SUB>> ]
"68719476813" [label = <(IDENTIFIER,signature,verify(pubkey, signature, quote_digest, hashfunc))<SUB>38</SUB>> ]
"68719476814" [label = <(IDENTIFIER,quote_digest,verify(pubkey, signature, quote_digest, hashfunc))<SUB>38</SUB>> ]
"68719476815" [label = <(IDENTIFIER,hashfunc,verify(pubkey, signature, quote_digest, hashfunc))<SUB>38</SUB>> ]
"30064771156" [label = <(&lt;operator&gt;.assignment,retDict = tpm2_objects.unmarshal_tpms_attest(qu...)<SUB>41</SUB>> ]
"68719476820" [label = <(IDENTIFIER,retDict,retDict = tpm2_objects.unmarshal_tpms_attest(qu...)<SUB>41</SUB>> ]
"30064771155" [label = <(unmarshal_tpms_attest,tpm2_objects.unmarshal_tpms_attest(quoteblob))<SUB>41</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.fieldAccess,tpm2_objects.unmarshal_tpms_attest)<SUB>41</SUB>> ]
"68719476818" [label = <(IDENTIFIER,tpm2_objects,tpm2_objects.unmarshal_tpms_attest(quoteblob))<SUB>41</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,unmarshal_tpms_attest,unmarshal_tpms_attest)<SUB>41</SUB>> ]
"68719476819" [label = <(IDENTIFIER,tpm2_objects,tpm2_objects.unmarshal_tpms_attest(quoteblob))<SUB>41</SUB>> ]
"68719476817" [label = <(IDENTIFIER,quoteblob,tpm2_objects.unmarshal_tpms_attest(quoteblob))<SUB>41</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.assignment,extradata = retDict[&quot;extraData&quot;])<SUB>42</SUB>> ]
"68719476822" [label = <(IDENTIFIER,extradata,extradata = retDict[&quot;extraData&quot;])<SUB>42</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.indexAccess,retDict[&quot;extraData&quot;])<SUB>42</SUB>> ]
"68719476821" [label = <(IDENTIFIER,retDict,extradata = retDict[&quot;extraData&quot;])<SUB>42</SUB>> ]
"90194313235" [label = <(LITERAL,&quot;extraData&quot;,extradata = retDict[&quot;extraData&quot;])<SUB>42</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>43</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.notEquals,extradata.decode(&quot;utf-8&quot;) != nonce)<SUB>43</SUB>> ]
"30064771160" [label = <(decode,extradata.decode(&quot;utf-8&quot;))<SUB>43</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.fieldAccess,extradata.decode)<SUB>43</SUB>> ]
"68719476823" [label = <(IDENTIFIER,extradata,extradata.decode(&quot;utf-8&quot;))<SUB>43</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,decode,decode)<SUB>43</SUB>> ]
"68719476824" [label = <(IDENTIFIER,extradata,extradata.decode(&quot;utf-8&quot;))<SUB>43</SUB>> ]
"90194313236" [label = <(LITERAL,&quot;utf-8&quot;,extradata.decode(&quot;utf-8&quot;))<SUB>43</SUB>> ]
"68719476825" [label = <(IDENTIFIER,nonce,extradata.decode(&quot;utf-8&quot;) != nonce)<SUB>43</SUB>> ]
"25769803786" [label = <(BLOCK,raise Exception(&quot;The nonce from the attestation...,raise Exception(&quot;The nonce from the attestation...)<SUB>43</SUB>> ]
"30064771163" [label = <(&lt;operator&gt;.raise,raise Exception(&quot;The nonce from the attestation...)<SUB>44</SUB>> ]
"30064771162" [label = <(Exception,Exception(&quot;The nonce from the attestation diffe...)<SUB>44</SUB>> ]
"68719476826" [label = <(IDENTIFIER,Exception,Exception(&quot;The nonce from the attestation diffe...)<SUB>44</SUB>> ]
"90194313237" [label = <(LITERAL,&quot;The nonce from the attestation differs from th...,Exception(&quot;The nonce from the attestation diffe...)<SUB>44</SUB>> ]
"25769803787" [label = <(BLOCK,tmp3 = __get_and_hash_pcrs(pcrblob, hash_alg)
c...,tmp3 = __get_and_hash_pcrs(pcrblob, hash_alg)
c...)<SUB>47</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.assignment,tmp3 = __get_and_hash_pcrs(pcrblob, hash_alg))<SUB>47</SUB>> ]
"68719476830" [label = <(IDENTIFIER,tmp3,tmp3 = __get_and_hash_pcrs(pcrblob, hash_alg))<SUB>47</SUB>> ]
"30064771164" [label = <(__get_and_hash_pcrs,__get_and_hash_pcrs(pcrblob, hash_alg))<SUB>47</SUB>> ]
"68719476829" [label = <(IDENTIFIER,__get_and_hash_pcrs,__get_and_hash_pcrs(pcrblob, hash_alg))<SUB>47</SUB>> ]
"68719476827" [label = <(IDENTIFIER,pcrblob,__get_and_hash_pcrs(pcrblob, hash_alg))<SUB>47</SUB>> ]
"68719476828" [label = <(IDENTIFIER,hash_alg,__get_and_hash_pcrs(pcrblob, hash_alg))<SUB>47</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.assignment,compare_digest = tmp3[0])<SUB>47</SUB>> ]
"68719476831" [label = <(IDENTIFIER,compare_digest,compare_digest = tmp3[0])<SUB>47</SUB>> ]
"30064771166" [label = <(&lt;operator&gt;.indexAccess,tmp3[0])<SUB>47</SUB>> ]
"68719476832" [label = <(IDENTIFIER,tmp3,compare_digest = tmp3[0])<SUB>47</SUB>> ]
"90194313238" [label = <(LITERAL,0,compare_digest = tmp3[0])<SUB>47</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.assignment,pcrs_dict = tmp3[1])<SUB>47</SUB>> ]
"68719476833" [label = <(IDENTIFIER,pcrs_dict,pcrs_dict = tmp3[1])<SUB>47</SUB>> ]
"30064771168" [label = <(&lt;operator&gt;.indexAccess,tmp3[1])<SUB>47</SUB>> ]
"68719476834" [label = <(IDENTIFIER,tmp3,pcrs_dict = tmp3[1])<SUB>47</SUB>> ]
"90194313239" [label = <(LITERAL,1,pcrs_dict = tmp3[1])<SUB>47</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>48</SUB>> ]
"30064771171" [label = <(&lt;operator&gt;.notEquals,retDict[&quot;attested.quote.pcrDigest&quot;] != compare_...)<SUB>48</SUB>> ]
"30064771170" [label = <(&lt;operator&gt;.indexAccess,retDict[&quot;attested.quote.pcrDigest&quot;])<SUB>48</SUB>> ]
"68719476835" [label = <(IDENTIFIER,retDict,retDict[&quot;attested.quote.pcrDigest&quot;] != compare_...)<SUB>48</SUB>> ]
"90194313240" [label = <(LITERAL,&quot;attested.quote.pcrDigest&quot;,retDict[&quot;attested.quote.pcrDigest&quot;] != compare_...)<SUB>48</SUB>> ]
"68719476836" [label = <(IDENTIFIER,compare_digest,retDict[&quot;attested.quote.pcrDigest&quot;] != compare_...)<SUB>48</SUB>> ]
"25769803788" [label = <(BLOCK,raise Exception(&quot;The digest used for quoting is...,raise Exception(&quot;The digest used for quoting is...)<SUB>48</SUB>> ]
"30064771173" [label = <(&lt;operator&gt;.raise,raise Exception(&quot;The digest used for quoting is...)<SUB>49</SUB>> ]
"30064771172" [label = <(Exception,Exception(&quot;The digest used for quoting is diffe...)<SUB>49</SUB>> ]
"68719476837" [label = <(IDENTIFIER,Exception,Exception(&quot;The digest used for quoting is diffe...)<SUB>49</SUB>> ]
"90194313241" [label = <(LITERAL,&quot;The digest used for quoting is different than ...,Exception(&quot;The digest used for quoting is diffe...)<SUB>49</SUB>> ]
"146028888064" [label = <(RETURN,return pcrs_dict,return pcrs_dict)<SUB>51</SUB>> ]
"68719476838" [label = <(IDENTIFIER,pcrs_dict,return pcrs_dict)<SUB>51</SUB>> ]
"94489280518" [label = <(LOCAL,struct: ANY)<SUB>15</SUB>> ]
"94489280520" [label = <(LOCAL,tmp0: ANY)<SUB>15</SUB>> ]
"94489280521" [label = <(LOCAL,sig_alg: ANY)<SUB>15</SUB>> ]
"94489280522" [label = <(LOCAL,hash_alg: ANY)<SUB>15</SUB>> ]
"94489280523" [label = <(LOCAL,sig_size: ANY)<SUB>15</SUB>> ]
"94489280524" [label = <(LOCAL,tmp1: ANY)<SUB>17</SUB>> ]
"94489280525" [label = <(LOCAL,signature: ANY)<SUB>17</SUB>> ]
"94489280526" [label = <(LOCAL,backends: ANY)<SUB>19</SUB>> ]
"94489280528" [label = <(LOCAL,serialization: ANY)<SUB>19</SUB>> ]
"94489280530" [label = <(LOCAL,pubkey: ANY)<SUB>19</SUB>> ]
"94489280531" [label = <(LOCAL,RSAPublicKey: ANY)<SUB>20</SUB>> ]
"94489280533" [label = <(LOCAL,EllipticCurvePublicKey: ANY)<SUB>20</SUB>> ]
"94489280535" [label = <(LOCAL,isinstance: ANY)<SUB>20</SUB>> ]
"94489280536" [label = <(LOCAL,type: ANY)<SUB>21</SUB>> ]
"94489280537" [label = <(LOCAL,ValueError: ANY)<SUB>21</SUB>> ]
"94489280539" [label = <(LOCAL,tpm2_objects: ANY)<SUB>23</SUB>> ]
"94489280541" [label = <(LOCAL,tmp2: tpm2_objects.HASH_FUNCS.&lt;returnValue&gt;.&lt;member&gt;(HASH_FUNCS))<SUB>28</SUB>> ]
"94489280542" [label = <(LOCAL,hashfunc: tpm2_objects.HASH_FUNCS.&lt;returnValue&gt;.&lt;member&gt;(HASH_FUNCS).get)<SUB>28</SUB>> ]
"94489280543" [label = <(LOCAL,hashes: ANY)<SUB>34</SUB>> ]
"94489280545" [label = <(LOCAL,digest: ANY)<SUB>34</SUB>> ]
"94489280546" [label = <(LOCAL,quote_digest: ANY)<SUB>36</SUB>> ]
"94489280547" [label = <(LOCAL,verify: ANY)<SUB>38</SUB>> ]
"94489280549" [label = <(LOCAL,retDict: ANY)<SUB>41</SUB>> ]
"94489280550" [label = <(LOCAL,extradata: ANY)<SUB>42</SUB>> ]
"94489280551" [label = <(LOCAL,Exception: ANY)<SUB>44</SUB>> ]
"94489280553" [label = <(LOCAL,__get_and_hash_pcrs: ANY)<SUB>47</SUB>> ]
"94489280555" [label = <(LOCAL,tmp3: __get_and_hash_pcrs.&lt;returnValue&gt;)<SUB>47</SUB>> ]
"94489280556" [label = <(LOCAL,compare_digest: __get_and_hash_pcrs.&lt;returnValue&gt;.&lt;indexAccess&gt;)<SUB>47</SUB>> ]
"94489280557" [label = <(LOCAL,pcrs_dict: __get_and_hash_pcrs.&lt;returnValue&gt;.&lt;indexAccess&gt;)<SUB>47</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,aikblob)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,nonce)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,sigblob)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,quoteblob)<SUB>2</SUB>> ]
"115964116996" [label = <(PARAM,pcrblob)<SUB>2</SUB>> ]
"115964116997" [label = <(PARAM,exp_hash_alg)<SUB>2</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,typing.Dict)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "25769803777" -> "90194313216"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "25769803778"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "25769803779"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "30064771097"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "94489280525"  [ label = "AST: "] 
  "25769803777" -> "30064771129"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "94489280528"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "94489280530"  [ label = "AST: "] 
  "25769803777" -> "30064771147"  [ label = "AST: "] 
  "25769803777" -> "94489280531"  [ label = "AST: "] 
  "25769803777" -> "30064771149"  [ label = "AST: "] 
  "25769803777" -> "94489280533"  [ label = "AST: "] 
  "25769803777" -> "30064771152"  [ label = "AST: "] 
  "25769803777" -> "94489280535"  [ label = "AST: "] 
  "25769803777" -> "30064771153"  [ label = "AST: "] 
  "25769803777" -> "94489280536"  [ label = "AST: "] 
  "25769803777" -> "30064771156"  [ label = "AST: "] 
  "25769803777" -> "94489280537"  [ label = "AST: "] 
  "25769803777" -> "30064771158"  [ label = "AST: "] 
  "25769803777" -> "94489280539"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "94489280541"  [ label = "AST: "] 
  "25769803777" -> "25769803787"  [ label = "AST: "] 
  "25769803777" -> "94489280542"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "25769803777" -> "94489280543"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "25769803777" -> "94489280545"  [ label = "AST: "] 
  "25769803777" -> "94489280546"  [ label = "AST: "] 
  "25769803777" -> "94489280547"  [ label = "AST: "] 
  "25769803777" -> "94489280549"  [ label = "AST: "] 
  "25769803777" -> "94489280550"  [ label = "AST: "] 
  "25769803777" -> "94489280551"  [ label = "AST: "] 
  "25769803777" -> "94489280553"  [ label = "AST: "] 
  "25769803777" -> "94489280555"  [ label = "AST: "] 
  "25769803777" -> "94489280556"  [ label = "AST: "] 
  "25769803777" -> "94489280557"  [ label = "AST: "] 
  "25769803778" -> "30064771079"  [ label = "AST: "] 
  "25769803778" -> "30064771081"  [ label = "AST: "] 
  "25769803778" -> "30064771083"  [ label = "AST: "] 
  "25769803778" -> "30064771085"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771079" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "90194313217"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "90194313218"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "55834574848"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476747"  [ label = "AST: "] 
  "30064771080" -> "90194313219"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476749"  [ label = "AST: "] 
  "30064771082" -> "90194313220"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476751"  [ label = "AST: "] 
  "30064771084" -> "90194313221"  [ label = "AST: "] 
  "25769803779" -> "30064771090"  [ label = "AST: "] 
  "25769803779" -> "30064771092"  [ label = "AST: "] 
  "30064771090" -> "68719476756"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "30064771088"  [ label = "AST: "] 
  "30064771089" -> "68719476755"  [ label = "AST: "] 
  "30064771089" -> "30064771087"  [ label = "AST: "] 
  "30064771089" -> "68719476753"  [ label = "AST: "] 
  "30064771089" -> "90194313223"  [ label = "AST: "] 
  "30064771088" -> "68719476754"  [ label = "AST: "] 
  "30064771088" -> "55834574849"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771087" -> "90194313222"  [ label = "AST: "] 
  "30064771086" -> "68719476752"  [ label = "AST: "] 
  "30064771092" -> "68719476757"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476758"  [ label = "AST: "] 
  "30064771091" -> "90194313224"  [ label = "AST: "] 
  "30064771097" -> "68719476764"  [ label = "AST: "] 
  "30064771097" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "30064771095"  [ label = "AST: "] 
  "30064771096" -> "68719476763"  [ label = "AST: "] 
  "30064771096" -> "68719476759"  [ label = "AST: "] 
  "30064771096" -> "30064771094"  [ label = "AST: "] 
  "30064771095" -> "68719476762"  [ label = "AST: "] 
  "30064771095" -> "55834574851"  [ label = "AST: "] 
  "30064771094" -> "30064771093"  [ label = "AST: "] 
  "30064771094" -> "68719476761"  [ label = "AST: "] 
  "30064771093" -> "68719476760"  [ label = "AST: "] 
  "30064771093" -> "55834574850"  [ label = "AST: "] 
  "47244640256" -> "30064771100"  [ label = "AST: "] 
  "47244640256" -> "25769803780"  [ label = "AST: "] 
  "30064771100" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476768"  [ label = "AST: "] 
  "30064771099" -> "68719476765"  [ label = "AST: "] 
  "30064771099" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476766"  [ label = "AST: "] 
  "30064771098" -> "68719476767"  [ label = "AST: "] 
  "25769803780" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476771"  [ label = "AST: "] 
  "30064771105" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "90194313225"  [ label = "AST: "] 
  "30064771104" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "30064771101"  [ label = "AST: "] 
  "30064771102" -> "55834574852"  [ label = "AST: "] 
  "30064771101" -> "68719476770"  [ label = "AST: "] 
  "30064771101" -> "68719476769"  [ label = "AST: "] 
  "47244640257" -> "30064771111"  [ label = "AST: "] 
  "47244640257" -> "25769803781"  [ label = "AST: "] 
  "30064771111" -> "30064771107"  [ label = "AST: "] 
  "30064771111" -> "30064771110"  [ label = "AST: "] 
  "30064771107" -> "68719476774"  [ label = "AST: "] 
  "30064771107" -> "68719476772"  [ label = "AST: "] 
  "30064771107" -> "68719476773"  [ label = "AST: "] 
  "30064771110" -> "68719476775"  [ label = "AST: "] 
  "30064771110" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "68719476776"  [ label = "AST: "] 
  "30064771108" -> "55834574853"  [ label = "AST: "] 
  "25769803781" -> "30064771115"  [ label = "AST: "] 
  "30064771115" -> "30064771114"  [ label = "AST: "] 
  "30064771114" -> "68719476778"  [ label = "AST: "] 
  "30064771114" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "90194313226"  [ label = "AST: "] 
  "30064771113" -> "30064771112"  [ label = "AST: "] 
  "30064771113" -> "90194313227"  [ label = "AST: "] 
  "30064771112" -> "68719476777"  [ label = "AST: "] 
  "47244640258" -> "30064771120"  [ label = "AST: "] 
  "47244640258" -> "25769803782"  [ label = "AST: "] 
  "30064771120" -> "30064771116"  [ label = "AST: "] 
  "30064771120" -> "30064771119"  [ label = "AST: "] 
  "30064771116" -> "68719476781"  [ label = "AST: "] 
  "30064771116" -> "68719476779"  [ label = "AST: "] 
  "30064771116" -> "68719476780"  [ label = "AST: "] 
  "30064771119" -> "68719476782"  [ label = "AST: "] 
  "30064771119" -> "30064771118"  [ label = "AST: "] 
  "30064771118" -> "30064771117"  [ label = "AST: "] 
  "30064771117" -> "68719476783"  [ label = "AST: "] 
  "30064771117" -> "55834574854"  [ label = "AST: "] 
  "25769803782" -> "30064771124"  [ label = "AST: "] 
  "30064771124" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "68719476785"  [ label = "AST: "] 
  "30064771123" -> "30064771122"  [ label = "AST: "] 
  "30064771122" -> "90194313228"  [ label = "AST: "] 
  "30064771122" -> "30064771121"  [ label = "AST: "] 
  "30064771122" -> "90194313229"  [ label = "AST: "] 
  "30064771121" -> "68719476784"  [ label = "AST: "] 
  "30064771129" -> "68719476791"  [ label = "AST: "] 
  "30064771129" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "30064771126"  [ label = "AST: "] 
  "25769803783" -> "30064771128"  [ label = "AST: "] 
  "30064771126" -> "68719476788"  [ label = "AST: "] 
  "30064771126" -> "30064771125"  [ label = "AST: "] 
  "30064771125" -> "68719476787"  [ label = "AST: "] 
  "30064771125" -> "55834574855"  [ label = "AST: "] 
  "30064771128" -> "30064771127"  [ label = "AST: "] 
  "30064771128" -> "68719476790"  [ label = "AST: "] 
  "30064771128" -> "68719476786"  [ label = "AST: "] 
  "30064771127" -> "68719476789"  [ label = "AST: "] 
  "30064771127" -> "55834574856"  [ label = "AST: "] 
  "47244640259" -> "30064771130"  [ label = "AST: "] 
  "47244640259" -> "25769803784"  [ label = "AST: "] 
  "30064771130" -> "68719476792"  [ label = "AST: "] 
  "25769803784" -> "30064771134"  [ label = "AST: "] 
  "30064771134" -> "30064771133"  [ label = "AST: "] 
  "30064771133" -> "68719476794"  [ label = "AST: "] 
  "30064771133" -> "30064771132"  [ label = "AST: "] 
  "30064771132" -> "90194313230"  [ label = "AST: "] 
  "30064771132" -> "30064771131"  [ label = "AST: "] 
  "30064771132" -> "90194313231"  [ label = "AST: "] 
  "30064771131" -> "68719476793"  [ label = "AST: "] 
  "47244640260" -> "30064771136"  [ label = "AST: "] 
  "47244640260" -> "25769803785"  [ label = "AST: "] 
  "30064771136" -> "30064771135"  [ label = "AST: "] 
  "30064771136" -> "68719476796"  [ label = "AST: "] 
  "30064771135" -> "68719476795"  [ label = "AST: "] 
  "30064771135" -> "55834574857"  [ label = "AST: "] 
  "25769803785" -> "30064771142"  [ label = "AST: "] 
  "30064771142" -> "30064771141"  [ label = "AST: "] 
  "30064771141" -> "68719476799"  [ label = "AST: "] 
  "30064771141" -> "30064771140"  [ label = "AST: "] 
  "30064771140" -> "90194313232"  [ label = "AST: "] 
  "30064771140" -> "30064771137"  [ label = "AST: "] 
  "30064771140" -> "90194313233"  [ label = "AST: "] 
  "30064771140" -> "30064771139"  [ label = "AST: "] 
  "30064771140" -> "90194313234"  [ label = "AST: "] 
  "30064771137" -> "68719476797"  [ label = "AST: "] 
  "30064771139" -> "30064771138"  [ label = "AST: "] 
  "30064771138" -> "68719476798"  [ label = "AST: "] 
  "30064771138" -> "55834574858"  [ label = "AST: "] 
  "30064771147" -> "68719476805"  [ label = "AST: "] 
  "30064771147" -> "30064771146"  [ label = "AST: "] 
  "30064771146" -> "30064771145"  [ label = "AST: "] 
  "30064771146" -> "68719476804"  [ label = "AST: "] 
  "30064771146" -> "68719476800"  [ label = "AST: "] 
  "30064771146" -> "30064771144"  [ label = "AST: "] 
  "30064771145" -> "68719476803"  [ label = "AST: "] 
  "30064771145" -> "55834574860"  [ label = "AST: "] 
  "30064771144" -> "30064771143"  [ label = "AST: "] 
  "30064771144" -> "68719476802"  [ label = "AST: "] 
  "30064771143" -> "68719476801"  [ label = "AST: "] 
  "30064771143" -> "55834574859"  [ label = "AST: "] 
  "30064771149" -> "30064771148"  [ label = "AST: "] 
  "30064771149" -> "68719476808"  [ label = "AST: "] 
  "30064771149" -> "68719476806"  [ label = "AST: "] 
  "30064771148" -> "68719476807"  [ label = "AST: "] 
  "30064771148" -> "55834574861"  [ label = "AST: "] 
  "30064771152" -> "68719476811"  [ label = "AST: "] 
  "30064771152" -> "30064771151"  [ label = "AST: "] 
  "30064771151" -> "30064771150"  [ label = "AST: "] 
  "30064771151" -> "68719476810"  [ label = "AST: "] 
  "30064771150" -> "68719476809"  [ label = "AST: "] 
  "30064771150" -> "55834574862"  [ label = "AST: "] 
  "30064771153" -> "68719476816"  [ label = "AST: "] 
  "30064771153" -> "68719476812"  [ label = "AST: "] 
  "30064771153" -> "68719476813"  [ label = "AST: "] 
  "30064771153" -> "68719476814"  [ label = "AST: "] 
  "30064771153" -> "68719476815"  [ label = "AST: "] 
  "30064771156" -> "68719476820"  [ label = "AST: "] 
  "30064771156" -> "30064771155"  [ label = "AST: "] 
  "30064771155" -> "30064771154"  [ label = "AST: "] 
  "30064771155" -> "68719476819"  [ label = "AST: "] 
  "30064771155" -> "68719476817"  [ label = "AST: "] 
  "30064771154" -> "68719476818"  [ label = "AST: "] 
  "30064771154" -> "55834574863"  [ label = "AST: "] 
  "30064771158" -> "68719476822"  [ label = "AST: "] 
  "30064771158" -> "30064771157"  [ label = "AST: "] 
  "30064771157" -> "68719476821"  [ label = "AST: "] 
  "30064771157" -> "90194313235"  [ label = "AST: "] 
  "47244640261" -> "30064771161"  [ label = "AST: "] 
  "47244640261" -> "25769803786"  [ label = "AST: "] 
  "30064771161" -> "30064771160"  [ label = "AST: "] 
  "30064771161" -> "68719476825"  [ label = "AST: "] 
  "30064771160" -> "30064771159"  [ label = "AST: "] 
  "30064771160" -> "68719476824"  [ label = "AST: "] 
  "30064771160" -> "90194313236"  [ label = "AST: "] 
  "30064771159" -> "68719476823"  [ label = "AST: "] 
  "30064771159" -> "55834574864"  [ label = "AST: "] 
  "25769803786" -> "30064771163"  [ label = "AST: "] 
  "30064771163" -> "30064771162"  [ label = "AST: "] 
  "30064771162" -> "68719476826"  [ label = "AST: "] 
  "30064771162" -> "90194313237"  [ label = "AST: "] 
  "25769803787" -> "30064771165"  [ label = "AST: "] 
  "25769803787" -> "30064771167"  [ label = "AST: "] 
  "25769803787" -> "30064771169"  [ label = "AST: "] 
  "30064771165" -> "68719476830"  [ label = "AST: "] 
  "30064771165" -> "30064771164"  [ label = "AST: "] 
  "30064771164" -> "68719476829"  [ label = "AST: "] 
  "30064771164" -> "68719476827"  [ label = "AST: "] 
  "30064771164" -> "68719476828"  [ label = "AST: "] 
  "30064771167" -> "68719476831"  [ label = "AST: "] 
  "30064771167" -> "30064771166"  [ label = "AST: "] 
  "30064771166" -> "68719476832"  [ label = "AST: "] 
  "30064771166" -> "90194313238"  [ label = "AST: "] 
  "30064771169" -> "68719476833"  [ label = "AST: "] 
  "30064771169" -> "30064771168"  [ label = "AST: "] 
  "30064771168" -> "68719476834"  [ label = "AST: "] 
  "30064771168" -> "90194313239"  [ label = "AST: "] 
  "47244640262" -> "30064771171"  [ label = "AST: "] 
  "47244640262" -> "25769803788"  [ label = "AST: "] 
  "30064771171" -> "30064771170"  [ label = "AST: "] 
  "30064771171" -> "68719476836"  [ label = "AST: "] 
  "30064771170" -> "68719476835"  [ label = "AST: "] 
  "30064771170" -> "90194313240"  [ label = "AST: "] 
  "25769803788" -> "30064771173"  [ label = "AST: "] 
  "30064771173" -> "30064771172"  [ label = "AST: "] 
  "30064771172" -> "68719476837"  [ label = "AST: "] 
  "30064771172" -> "90194313241"  [ label = "AST: "] 
  "146028888064" -> "68719476838"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771129" -> "30064771130"  [ label = "CFG: "] 
  "30064771147" -> "55834574861"  [ label = "CFG: "] 
  "30064771149" -> "55834574862"  [ label = "CFG: "] 
  "30064771152" -> "30064771153"  [ label = "CFG: "] 
  "30064771153" -> "55834574863"  [ label = "CFG: "] 
  "30064771156" -> "30064771157"  [ label = "CFG: "] 
  "30064771158" -> "55834574864"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771085" -> "55834574849"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771092" -> "55834574851"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771100" -> "30064771107"  [ label = "CFG: "] 
  "30064771111" -> "30064771112"  [ label = "CFG: "] 
  "30064771111" -> "30064771116"  [ label = "CFG: "] 
  "30064771120" -> "30064771121"  [ label = "CFG: "] 
  "30064771120" -> "55834574855"  [ label = "CFG: "] 
  "30064771130" -> "30064771131"  [ label = "CFG: "] 
  "30064771130" -> "55834574857"  [ label = "CFG: "] 
  "30064771136" -> "30064771137"  [ label = "CFG: "] 
  "30064771136" -> "55834574860"  [ label = "CFG: "] 
  "30064771146" -> "30064771147"  [ label = "CFG: "] 
  "30064771148" -> "30064771149"  [ label = "CFG: "] 
  "30064771151" -> "30064771152"  [ label = "CFG: "] 
  "30064771155" -> "30064771156"  [ label = "CFG: "] 
  "30064771157" -> "30064771158"  [ label = "CFG: "] 
  "30064771161" -> "30064771162"  [ label = "CFG: "] 
  "30064771161" -> "30064771164"  [ label = "CFG: "] 
  "30064771165" -> "30064771166"  [ label = "CFG: "] 
  "30064771167" -> "30064771168"  [ label = "CFG: "] 
  "30064771169" -> "30064771170"  [ label = "CFG: "] 
  "30064771171" -> "30064771172"  [ label = "CFG: "] 
  "30064771171" -> "146028888064"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "55834574850"  [ label = "CFG: "] 
  "30064771094" -> "30064771096"  [ label = "CFG: "] 
  "30064771099" -> "30064771100"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "30064771111"  [ label = "CFG: "] 
  "30064771107" -> "55834574853"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771115" -> "30064771116"  [ label = "CFG: "] 
  "30064771116" -> "30064771120"  [ label = "CFG: "] 
  "30064771116" -> "55834574854"  [ label = "CFG: "] 
  "30064771119" -> "30064771120"  [ label = "CFG: "] 
  "30064771124" -> "55834574855"  [ label = "CFG: "] 
  "30064771126" -> "55834574856"  [ label = "CFG: "] 
  "30064771128" -> "30064771129"  [ label = "CFG: "] 
  "30064771134" -> "55834574857"  [ label = "CFG: "] 
  "30064771135" -> "30064771136"  [ label = "CFG: "] 
  "30064771142" -> "55834574860"  [ label = "CFG: "] 
  "30064771145" -> "55834574859"  [ label = "CFG: "] 
  "30064771144" -> "30064771146"  [ label = "CFG: "] 
  "55834574861" -> "30064771148"  [ label = "CFG: "] 
  "30064771150" -> "30064771151"  [ label = "CFG: "] 
  "30064771154" -> "30064771155"  [ label = "CFG: "] 
  "30064771160" -> "30064771161"  [ label = "CFG: "] 
  "30064771163" -> "30064771164"  [ label = "CFG: "] 
  "30064771164" -> "30064771165"  [ label = "CFG: "] 
  "30064771166" -> "30064771167"  [ label = "CFG: "] 
  "30064771168" -> "30064771169"  [ label = "CFG: "] 
  "30064771170" -> "30064771171"  [ label = "CFG: "] 
  "30064771173" -> "146028888064"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771088" -> "30064771086"  [ label = "CFG: "] 
  "30064771087" -> "30064771089"  [ label = "CFG: "] 
  "55834574851" -> "30064771095"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771105" -> "30064771106"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "30064771114" -> "30064771115"  [ label = "CFG: "] 
  "30064771118" -> "30064771119"  [ label = "CFG: "] 
  "30064771123" -> "30064771124"  [ label = "CFG: "] 
  "30064771125" -> "30064771126"  [ label = "CFG: "] 
  "30064771127" -> "30064771128"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "55834574857" -> "30064771135"  [ label = "CFG: "] 
  "30064771141" -> "30064771142"  [ label = "CFG: "] 
  "55834574860" -> "30064771145"  [ label = "CFG: "] 
  "30064771143" -> "30064771144"  [ label = "CFG: "] 
  "55834574862" -> "30064771150"  [ label = "CFG: "] 
  "55834574863" -> "30064771154"  [ label = "CFG: "] 
  "30064771159" -> "30064771160"  [ label = "CFG: "] 
  "30064771162" -> "30064771163"  [ label = "CFG: "] 
  "30064771172" -> "30064771173"  [ label = "CFG: "] 
  "55834574848" -> "30064771077"  [ label = "CFG: "] 
  "55834574849" -> "30064771088"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "55834574850" -> "30064771093"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771108" -> "30064771109"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771117" -> "30064771118"  [ label = "CFG: "] 
  "30064771122" -> "30064771123"  [ label = "CFG: "] 
  "55834574855" -> "30064771125"  [ label = "CFG: "] 
  "55834574856" -> "30064771127"  [ label = "CFG: "] 
  "30064771132" -> "30064771133"  [ label = "CFG: "] 
  "30064771140" -> "30064771141"  [ label = "CFG: "] 
  "55834574859" -> "30064771143"  [ label = "CFG: "] 
  "55834574864" -> "30064771159"  [ label = "CFG: "] 
  "30064771103" -> "30064771104"  [ label = "CFG: "] 
  "55834574853" -> "30064771108"  [ label = "CFG: "] 
  "30064771112" -> "30064771113"  [ label = "CFG: "] 
  "55834574854" -> "30064771117"  [ label = "CFG: "] 
  "30064771121" -> "30064771122"  [ label = "CFG: "] 
  "30064771131" -> "30064771132"  [ label = "CFG: "] 
  "30064771137" -> "55834574858"  [ label = "CFG: "] 
  "30064771139" -> "30064771140"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771138" -> "30064771139"  [ label = "CFG: "] 
  "30064771101" -> "55834574852"  [ label = "CFG: "] 
  "55834574852" -> "30064771102"  [ label = "CFG: "] 
  "55834574858" -> "30064771138"  [ label = "CFG: "] 
  "111669149697" -> "55834574848"  [ label = "CFG: "] 
  "146028888064" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771079" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771079" -> "128849018881"  [ label = "DDG: struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0)"] 
  "30064771079" -> "128849018881"  [ label = "DDG: tmp0 = struct.unpack_from(&quot;&gt;HHH&quot;, sigblob, 0)"] 
  "30064771081" -> "128849018881"  [ label = "DDG: sig_alg"] 
  "30064771081" -> "128849018881"  [ label = "DDG: tmp0[0]"] 
  "30064771081" -> "128849018881"  [ label = "DDG: sig_alg = tmp0[0]"] 
  "30064771083" -> "128849018881"  [ label = "DDG: tmp0[1]"] 
  "30064771083" -> "128849018881"  [ label = "DDG: hash_alg = tmp0[1]"] 
  "30064771085" -> "128849018881"  [ label = "DDG: tmp0[2]"] 
  "30064771085" -> "128849018881"  [ label = "DDG: sig_size = tmp0[2]"] 
  "30064771090" -> "128849018881"  [ label = "DDG: tmp1"] 
  "30064771089" -> "128849018881"  [ label = "DDG: struct"] 
  "30064771086" -> "128849018881"  [ label = "DDG: sig_size"] 
  "30064771087" -> "128849018881"  [ label = "DDG: {sig_size}"] 
  "30064771089" -> "128849018881"  [ label = "DDG: f&quot;{sig_size}s&quot;"] 
  "30064771089" -> "128849018881"  [ label = "DDG: sigblob"] 
  "30064771090" -> "128849018881"  [ label = "DDG: struct.unpack_from(f&quot;{sig_size}s&quot;, sigblob, 6)"] 
  "30064771090" -> "128849018881"  [ label = "DDG: tmp1 = struct.unpack_from(f&quot;{sig_size}s&quot;, sigblob, 6)"] 
  "30064771092" -> "128849018881"  [ label = "DDG: tmp1[0]"] 
  "30064771092" -> "128849018881"  [ label = "DDG: signature = tmp1[0]"] 
  "30064771096" -> "128849018881"  [ label = "DDG: serialization"] 
  "30064771096" -> "128849018881"  [ label = "DDG: aikblob"] 
  "30064771097" -> "128849018881"  [ label = "DDG: serialization.load_pem_public_key(aikblob, backend = backends.default_backend())"] 
  "30064771097" -> "128849018881"  [ label = "DDG: pubkey = serialization.load_pem_public_key(aikblob, backend = backends.default_backend())"] 
  "30064771099" -> "128849018881"  [ label = "DDG: (RSAPublicKey, EllipticCurvePublicKey)"] 
  "30064771100" -> "128849018881"  [ label = "DDG: isinstance(pubkey, (RSAPublicKey, EllipticCurvePublicKey))"] 
  "30064771100" -> "128849018881"  [ label = "DDG: not isinstance(pubkey, (RSAPublicKey, EllipticCurvePublicKey))"] 
  "30064771104" -> "128849018881"  [ label = "DDG: {type(pubkey).__name__}"] 
  "30064771105" -> "128849018881"  [ label = "DDG: f&quot;Unsupported key type {type(pubkey).__name__}&quot;"] 
  "30064771106" -> "128849018881"  [ label = "DDG: ValueError(f&quot;Unsupported key type {type(pubkey).__name__}&quot;)"] 
  "30064771106" -> "128849018881"  [ label = "DDG: raise ValueError(f&quot;Unsupported key type {type(pubkey).__name__}&quot;)"] 
  "30064771107" -> "128849018881"  [ label = "DDG: RSAPublicKey"] 
  "30064771111" -> "128849018881"  [ label = "DDG: isinstance(pubkey, RSAPublicKey)"] 
  "30064771110" -> "128849018881"  [ label = "DDG: sig_alg"] 
  "30064771110" -> "128849018881"  [ label = "DDG: [tpm2_objects.TPM_ALG_RSASSA]"] 
  "30064771111" -> "128849018881"  [ label = "DDG: sig_alg not in [tpm2_objects.TPM_ALG_RSASSA]"] 
  "30064771111" -> "128849018881"  [ label = "DDG: isinstance(pubkey, RSAPublicKey) and sig_alg not in [tpm2_objects.TPM_ALG_RSASSA]"] 
  "30064771112" -> "128849018881"  [ label = "DDG: sig_alg"] 
  "30064771113" -> "128849018881"  [ label = "DDG: {sig_alg:#x}"] 
  "30064771114" -> "128849018881"  [ label = "DDG: f&quot;Unsupported quote signature algorithm '{sig_alg:#x}' for RSA keys&quot;"] 
  "30064771115" -> "128849018881"  [ label = "DDG: ValueError(f&quot;Unsupported quote signature algorithm '{sig_alg:#x}' for RSA keys&quot;)"] 
  "30064771115" -> "128849018881"  [ label = "DDG: raise ValueError(f&quot;Unsupported quote signature algorithm '{sig_alg:#x}' for RSA keys&quot;)"] 
  "30064771116" -> "128849018881"  [ label = "DDG: EllipticCurvePublicKey"] 
  "30064771120" -> "128849018881"  [ label = "DDG: isinstance(pubkey, EllipticCurvePublicKey)"] 
  "30064771119" -> "128849018881"  [ label = "DDG: sig_alg"] 
  "30064771119" -> "128849018881"  [ label = "DDG: [tpm2_objects.TPM_ALG_ECDSA]"] 
  "30064771120" -> "128849018881"  [ label = "DDG: sig_alg not in [tpm2_objects.TPM_ALG_ECDSA]"] 
  "30064771120" -> "128849018881"  [ label = "DDG: isinstance(pubkey, EllipticCurvePublicKey) and sig_alg not in [tpm2_objects.TPM_ALG_ECDSA]"] 
  "30064771121" -> "128849018881"  [ label = "DDG: sig_alg"] 
  "30064771122" -> "128849018881"  [ label = "DDG: {sig_alg:#x}"] 
  "30064771123" -> "128849018881"  [ label = "DDG: f&quot;Unsupported quote signature algorithm '{sig_alg:#x}' for EC keys&quot;"] 
  "30064771124" -> "128849018881"  [ label = "DDG: ValueError(f&quot;Unsupported quote signature algorithm '{sig_alg:#x}' for EC keys&quot;)"] 
  "30064771124" -> "128849018881"  [ label = "DDG: raise ValueError(f&quot;Unsupported quote signature algorithm '{sig_alg:#x}' for EC keys&quot;)"] 
  "30064771126" -> "128849018881"  [ label = "DDG: tmp2 = tpm2_objects.HASH_FUNCS"] 
  "30064771128" -> "128849018881"  [ label = "DDG: tmp2"] 
  "30064771128" -> "128849018881"  [ label = "DDG: tmp2.get(hash_alg)"] 
  "30064771129" -> "128849018881"  [ label = "DDG: hashfunc = tmp2 = tpm2_objects.HASH_FUNCS
tmp2.get(hash_alg)"] 
  "30064771130" -> "128849018881"  [ label = "DDG: not hashfunc"] 
  "30064771132" -> "128849018881"  [ label = "DDG: {hash_alg:#x}"] 
  "30064771133" -> "128849018881"  [ label = "DDG: f&quot;Unsupported hash with id {hash_alg:#x} in signature blob&quot;"] 
  "30064771134" -> "128849018881"  [ label = "DDG: ValueError(f&quot;Unsupported hash with id {hash_alg:#x} in signature blob&quot;)"] 
  "30064771134" -> "128849018881"  [ label = "DDG: raise ValueError(f&quot;Unsupported hash with id {hash_alg:#x} in signature blob&quot;)"] 
  "30064771136" -> "128849018881"  [ label = "DDG: exp_hash_alg"] 
  "30064771136" -> "128849018881"  [ label = "DDG: hashfunc.name != exp_hash_alg"] 
  "30064771137" -> "128849018881"  [ label = "DDG: exp_hash_alg"] 
  "30064771140" -> "128849018881"  [ label = "DDG: {exp_hash_alg}"] 
  "30064771140" -> "128849018881"  [ label = "DDG: {hashfunc.name}"] 
  "30064771141" -> "128849018881"  [ label = "DDG: f&quot;Quote was expected to use {exp_hash_alg} but used {hashfunc.name} instead&quot;"] 
  "30064771142" -> "128849018881"  [ label = "DDG: ValueError(f&quot;Quote was expected to use {exp_hash_alg} but used {hashfunc.name} instead&quot;)"] 
  "30064771142" -> "128849018881"  [ label = "DDG: raise ValueError(f&quot;Quote was expected to use {exp_hash_alg} but used {hashfunc.name} instead&quot;)"] 
  "30064771146" -> "128849018881"  [ label = "DDG: hashes"] 
  "30064771144" -> "128849018881"  [ label = "DDG: backends"] 
  "30064771146" -> "128849018881"  [ label = "DDG: backends.default_backend()"] 
  "30064771147" -> "128849018881"  [ label = "DDG: hashes.Hash(hashfunc, backend = backends.default_backend())"] 
  "30064771147" -> "128849018881"  [ label = "DDG: digest = hashes.Hash(hashfunc, backend = backends.default_backend())"] 
  "30064771149" -> "128849018881"  [ label = "DDG: digest.update(quoteblob)"] 
  "30064771151" -> "128849018881"  [ label = "DDG: digest"] 
  "30064771152" -> "128849018881"  [ label = "DDG: digest.finalize()"] 
  "30064771152" -> "128849018881"  [ label = "DDG: quote_digest = digest.finalize()"] 
  "30064771153" -> "128849018881"  [ label = "DDG: pubkey"] 
  "30064771153" -> "128849018881"  [ label = "DDG: signature"] 
  "30064771153" -> "128849018881"  [ label = "DDG: quote_digest"] 
  "30064771153" -> "128849018881"  [ label = "DDG: hashfunc"] 
  "30064771153" -> "128849018881"  [ label = "DDG: verify(pubkey, signature, quote_digest, hashfunc)"] 
  "30064771156" -> "128849018881"  [ label = "DDG: retDict"] 
  "30064771155" -> "128849018881"  [ label = "DDG: tpm2_objects"] 
  "30064771155" -> "128849018881"  [ label = "DDG: quoteblob"] 
  "30064771156" -> "128849018881"  [ label = "DDG: tpm2_objects.unmarshal_tpms_attest(quoteblob)"] 
  "30064771156" -> "128849018881"  [ label = "DDG: retDict = tpm2_objects.unmarshal_tpms_attest(quoteblob)"] 
  "30064771158" -> "128849018881"  [ label = "DDG: retDict[&quot;extraData&quot;]"] 
  "30064771158" -> "128849018881"  [ label = "DDG: extradata = retDict[&quot;extraData&quot;]"] 
  "30064771160" -> "128849018881"  [ label = "DDG: extradata"] 
  "30064771161" -> "128849018881"  [ label = "DDG: extradata.decode(&quot;utf-8&quot;)"] 
  "30064771161" -> "128849018881"  [ label = "DDG: nonce"] 
  "30064771161" -> "128849018881"  [ label = "DDG: extradata.decode(&quot;utf-8&quot;) != nonce"] 
  "30064771163" -> "128849018881"  [ label = "DDG: Exception(&quot;The nonce from the attestation differs from the expected nonce&quot;)"] 
  "30064771163" -> "128849018881"  [ label = "DDG: raise Exception(&quot;The nonce from the attestation differs from the expected nonce&quot;)"] 
  "30064771165" -> "128849018881"  [ label = "DDG: tmp3"] 
  "30064771164" -> "128849018881"  [ label = "DDG: pcrblob"] 
  "30064771164" -> "128849018881"  [ label = "DDG: hash_alg"] 
  "30064771165" -> "128849018881"  [ label = "DDG: __get_and_hash_pcrs(pcrblob, hash_alg)"] 
  "30064771165" -> "128849018881"  [ label = "DDG: tmp3 = __get_and_hash_pcrs(pcrblob, hash_alg)"] 
  "30064771167" -> "128849018881"  [ label = "DDG: tmp3[0]"] 
  "30064771167" -> "128849018881"  [ label = "DDG: compare_digest = tmp3[0]"] 
  "30064771169" -> "128849018881"  [ label = "DDG: pcrs_dict"] 
  "30064771169" -> "128849018881"  [ label = "DDG: tmp3[1]"] 
  "30064771169" -> "128849018881"  [ label = "DDG: pcrs_dict = tmp3[1]"] 
  "30064771171" -> "128849018881"  [ label = "DDG: retDict[&quot;attested.quote.pcrDigest&quot;]"] 
  "30064771171" -> "128849018881"  [ label = "DDG: compare_digest"] 
  "30064771171" -> "128849018881"  [ label = "DDG: retDict[&quot;attested.quote.pcrDigest&quot;] != compare_digest"] 
  "30064771173" -> "128849018881"  [ label = "DDG: Exception(&quot;The digest used for quoting is different than the one that was calculated&quot;)"] 
  "30064771173" -> "128849018881"  [ label = "DDG: raise Exception(&quot;The digest used for quoting is different than the one that was calculated&quot;)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "90194313216"  [ label = "DDG: "] 
  "111669149697" -> "25769803778"  [ label = "DDG: "] 
  "111669149697" -> "25769803779"  [ label = "DDG: "] 
  "30064771096" -> "30064771097"  [ label = "DDG: serialization"] 
  "30064771096" -> "30064771097"  [ label = "DDG: aikblob"] 
  "30064771096" -> "30064771097"  [ label = "DDG: backends.default_backend()"] 
  "30064771128" -> "30064771129"  [ label = "DDG: tmp2.get(hash_alg)"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "30064771146" -> "30064771147"  [ label = "DDG: hashes"] 
  "30064771146" -> "30064771147"  [ label = "DDG: hashfunc"] 
  "30064771146" -> "30064771147"  [ label = "DDG: backends.default_backend()"] 
  "30064771151" -> "30064771152"  [ label = "DDG: digest"] 
  "30064771155" -> "30064771156"  [ label = "DDG: tpm2_objects"] 
  "30064771155" -> "30064771156"  [ label = "DDG: quoteblob"] 
  "30064771156" -> "30064771158"  [ label = "DDG: retDict"] 
  "111669149697" -> "25769803787"  [ label = "DDG: "] 
  "68719476838" -> "146028888064"  [ label = "DDG: pcrs_dict"] 
  "30064771078" -> "30064771079"  [ label = "DDG: struct"] 
  "30064771078" -> "30064771079"  [ label = "DDG: &quot;&gt;HHH&quot;"] 
  "30064771078" -> "30064771079"  [ label = "DDG: sigblob"] 
  "30064771078" -> "30064771079"  [ label = "DDG: 0"] 
  "30064771079" -> "30064771081"  [ label = "DDG: tmp0"] 
  "30064771079" -> "30064771083"  [ label = "DDG: tmp0"] 
  "30064771079" -> "30064771085"  [ label = "DDG: tmp0"] 
  "30064771089" -> "30064771090"  [ label = "DDG: struct"] 
  "30064771089" -> "30064771090"  [ label = "DDG: f&quot;{sig_size}s&quot;"] 
  "30064771089" -> "30064771090"  [ label = "DDG: sigblob"] 
  "30064771089" -> "30064771090"  [ label = "DDG: 6"] 
  "30064771090" -> "30064771092"  [ label = "DDG: tmp1"] 
  "30064771147" -> "30064771149"  [ label = "DDG: digest"] 
  "111669149697" -> "30064771149"  [ label = "DDG: "] 
  "115964116995" -> "30064771149"  [ label = "DDG: quoteblob"] 
  "111669149697" -> "68719476816"  [ label = "DDG: "] 
  "30064771116" -> "30064771153"  [ label = "DDG: pubkey"] 
  "111669149697" -> "30064771153"  [ label = "DDG: "] 
  "30064771092" -> "30064771153"  [ label = "DDG: signature"] 
  "30064771152" -> "30064771153"  [ label = "DDG: quote_digest"] 
  "30064771146" -> "30064771153"  [ label = "DDG: hashfunc"] 
  "30064771164" -> "30064771165"  [ label = "DDG: pcrblob"] 
  "30064771164" -> "30064771165"  [ label = "DDG: hash_alg"] 
  "30064771165" -> "30064771167"  [ label = "DDG: tmp3"] 
  "30064771165" -> "30064771169"  [ label = "DDG: tmp3"] 
  "30064771169" -> "68719476838"  [ label = "DDG: pcrs_dict"] 
  "111669149697" -> "68719476838"  [ label = "DDG: "] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "115964116992" -> "30064771096"  [ label = "DDG: aikblob"] 
  "30064771094" -> "30064771096"  [ label = "DDG: backends"] 
  "30064771099" -> "30064771100"  [ label = "DDG: pubkey"] 
  "30064771099" -> "30064771100"  [ label = "DDG: (RSAPublicKey, EllipticCurvePublicKey)"] 
  "30064771107" -> "30064771111"  [ label = "DDG: pubkey"] 
  "30064771107" -> "30064771111"  [ label = "DDG: RSAPublicKey"] 
  "30064771110" -> "30064771111"  [ label = "DDG: sig_alg"] 
  "30064771110" -> "30064771111"  [ label = "DDG: [tpm2_objects.TPM_ALG_RSASSA]"] 
  "30064771116" -> "30064771120"  [ label = "DDG: pubkey"] 
  "30064771116" -> "30064771120"  [ label = "DDG: EllipticCurvePublicKey"] 
  "30064771119" -> "30064771120"  [ label = "DDG: sig_alg"] 
  "30064771119" -> "30064771120"  [ label = "DDG: [tpm2_objects.TPM_ALG_ECDSA]"] 
  "30064771129" -> "30064771130"  [ label = "DDG: hashfunc"] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "30064771130" -> "30064771136"  [ label = "DDG: hashfunc"] 
  "115964116997" -> "30064771136"  [ label = "DDG: exp_hash_alg"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771130" -> "30064771146"  [ label = "DDG: hashfunc"] 
  "30064771136" -> "30064771146"  [ label = "DDG: hashfunc.name"] 
  "30064771139" -> "30064771146"  [ label = "DDG: hashfunc.name"] 
  "30064771144" -> "30064771146"  [ label = "DDG: backends"] 
  "30064771149" -> "30064771151"  [ label = "DDG: digest"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771109" -> "30064771155"  [ label = "DDG: tpm2_objects.TPM_ALG_RSASSA"] 
  "30064771118" -> "30064771155"  [ label = "DDG: tpm2_objects.TPM_ALG_ECDSA"] 
  "111669149697" -> "30064771155"  [ label = "DDG: "] 
  "30064771149" -> "30064771155"  [ label = "DDG: quoteblob"] 
  "30064771160" -> "30064771161"  [ label = "DDG: extradata"] 
  "30064771160" -> "30064771161"  [ label = "DDG: &quot;utf-8&quot;"] 
  "115964116993" -> "30064771161"  [ label = "DDG: nonce"] 
  "111669149697" -> "30064771161"  [ label = "DDG: "] 
  "30064771156" -> "30064771171"  [ label = "DDG: retDict"] 
  "30064771167" -> "30064771171"  [ label = "DDG: compare_digest"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "115964116994" -> "30064771078"  [ label = "DDG: sigblob"] 
  "30064771078" -> "30064771089"  [ label = "DDG: struct"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771087" -> "30064771089"  [ label = "DDG: {sig_size}"] 
  "30064771087" -> "30064771089"  [ label = "DDG: s"] 
  "30064771078" -> "30064771089"  [ label = "DDG: sigblob"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771072" -> "68719476768"  [ label = "DDG: isinstance"] 
  "111669149697" -> "68719476768"  [ label = "DDG: "] 
  "30064771097" -> "30064771099"  [ label = "DDG: pubkey"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771098" -> "30064771099"  [ label = "DDG: RSAPublicKey"] 
  "30064771098" -> "30064771099"  [ label = "DDG: EllipticCurvePublicKey"] 
  "30064771105" -> "30064771106"  [ label = "DDG: f&quot;Unsupported key type {type(pubkey).__name__}&quot;"] 
  "111669149697" -> "68719476774"  [ label = "DDG: "] 
  "30064771099" -> "30064771107"  [ label = "DDG: pubkey"] 
  "30064771101" -> "30064771107"  [ label = "DDG: pubkey"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771098" -> "30064771107"  [ label = "DDG: RSAPublicKey"] 
  "30064771081" -> "30064771110"  [ label = "DDG: sig_alg"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771109" -> "30064771110"  [ label = "DDG: tpm2_objects.TPM_ALG_RSASSA"] 
  "30064771114" -> "30064771115"  [ label = "DDG: f&quot;Unsupported quote signature algorithm '{sig_alg:#x}' for RSA keys&quot;"] 
  "111669149697" -> "68719476781"  [ label = "DDG: "] 
  "30064771107" -> "30064771116"  [ label = "DDG: pubkey"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771098" -> "30064771116"  [ label = "DDG: EllipticCurvePublicKey"] 
  "30064771081" -> "30064771119"  [ label = "DDG: sig_alg"] 
  "30064771110" -> "30064771119"  [ label = "DDG: sig_alg"] 
  "30064771112" -> "30064771119"  [ label = "DDG: sig_alg"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771118" -> "30064771119"  [ label = "DDG: tpm2_objects.TPM_ALG_ECDSA"] 
  "30064771123" -> "30064771124"  [ label = "DDG: f&quot;Unsupported quote signature algorithm '{sig_alg:#x}' for EC keys&quot;"] 
  "30064771126" -> "30064771128"  [ label = "DDG: tmp2"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771083" -> "30064771128"  [ label = "DDG: hash_alg"] 
  "30064771133" -> "30064771134"  [ label = "DDG: f&quot;Unsupported hash with id {hash_alg:#x} in signature blob&quot;"] 
  "30064771141" -> "30064771142"  [ label = "DDG: f&quot;Quote was expected to use {exp_hash_alg} but used {hashfunc.name} instead&quot;"] 
  "30064771094" -> "30064771144"  [ label = "DDG: backends"] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "30064771158" -> "30064771160"  [ label = "DDG: extradata"] 
  "111669149697" -> "30064771160"  [ label = "DDG: "] 
  "30064771162" -> "30064771163"  [ label = "DDG: &quot;The nonce from the attestation differs from the expected nonce&quot;"] 
  "111669149697" -> "68719476829"  [ label = "DDG: "] 
  "115964116996" -> "30064771164"  [ label = "DDG: pcrblob"] 
  "111669149697" -> "30064771164"  [ label = "DDG: "] 
  "30064771128" -> "30064771164"  [ label = "DDG: hash_alg"] 
  "30064771131" -> "30064771164"  [ label = "DDG: hash_alg"] 
  "30064771172" -> "30064771173"  [ label = "DDG: &quot;The digest used for quoting is different than the one that was calculated&quot;"] 
  "30064771086" -> "30064771087"  [ label = "DDG: sig_size"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "111669149697" -> "68719476771"  [ label = "DDG: "] 
  "30064771104" -> "30064771105"  [ label = "DDG: Unsupported key type "] 
  "30064771104" -> "30064771105"  [ label = "DDG: {type(pubkey).__name__}"] 
  "111669149697" -> "68719476778"  [ label = "DDG: "] 
  "30064771113" -> "30064771114"  [ label = "DDG: Unsupported quote signature algorithm '"] 
  "30064771113" -> "30064771114"  [ label = "DDG: {sig_alg:#x}"] 
  "30064771113" -> "30064771114"  [ label = "DDG: ' for RSA keys"] 
  "111669149697" -> "68719476785"  [ label = "DDG: "] 
  "30064771122" -> "30064771123"  [ label = "DDG: Unsupported quote signature algorithm '"] 
  "30064771122" -> "30064771123"  [ label = "DDG: {sig_alg:#x}"] 
  "30064771122" -> "30064771123"  [ label = "DDG: ' for EC keys"] 
  "111669149697" -> "68719476794"  [ label = "DDG: "] 
  "30064771132" -> "30064771133"  [ label = "DDG: Unsupported hash with id "] 
  "30064771132" -> "30064771133"  [ label = "DDG: {hash_alg:#x}"] 
  "30064771132" -> "30064771133"  [ label = "DDG:  in signature blob"] 
  "111669149697" -> "68719476799"  [ label = "DDG: "] 
  "30064771140" -> "30064771141"  [ label = "DDG: {exp_hash_alg}"] 
  "30064771140" -> "30064771141"  [ label = "DDG: Quote was expected to use "] 
  "30064771140" -> "30064771141"  [ label = "DDG:  instead"] 
  "30064771140" -> "30064771141"  [ label = "DDG:  but used "] 
  "30064771140" -> "30064771141"  [ label = "DDG: {hashfunc.name}"] 
  "111669149697" -> "68719476826"  [ label = "DDG: "] 
  "111669149697" -> "30064771162"  [ label = "DDG: "] 
  "111669149697" -> "68719476837"  [ label = "DDG: "] 
  "111669149697" -> "30064771172"  [ label = "DDG: "] 
  "30064771085" -> "30064771086"  [ label = "DDG: sig_size"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771103" -> "30064771104"  [ label = "DDG: type(pubkey).__name__"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771112" -> "30064771113"  [ label = "DDG: sig_alg"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771121" -> "30064771122"  [ label = "DDG: sig_alg"] 
  "111669149697" -> "30064771132"  [ label = "DDG: "] 
  "30064771131" -> "30064771132"  [ label = "DDG: hash_alg"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771137" -> "30064771140"  [ label = "DDG: exp_hash_alg"] 
  "30064771139" -> "30064771140"  [ label = "DDG: hashfunc.name"] 
  "30064771081" -> "30064771112"  [ label = "DDG: sig_alg"] 
  "30064771110" -> "30064771112"  [ label = "DDG: sig_alg"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771081" -> "30064771121"  [ label = "DDG: sig_alg"] 
  "30064771110" -> "30064771121"  [ label = "DDG: sig_alg"] 
  "30064771112" -> "30064771121"  [ label = "DDG: sig_alg"] 
  "30064771119" -> "30064771121"  [ label = "DDG: sig_alg"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771128" -> "30064771131"  [ label = "DDG: hash_alg"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771136" -> "30064771137"  [ label = "DDG: exp_hash_alg"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771130" -> "30064771139"  [ label = "DDG: hashfunc"] 
  "30064771136" -> "30064771139"  [ label = "DDG: hashfunc.name"] 
  "111669149697" -> "68719476770"  [ label = "DDG: "] 
  "30064771099" -> "30064771101"  [ label = "DDG: pubkey"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771100" -> "30064771101"  [ label = "CDG: "] 
  "30064771100" -> "30064771106"  [ label = "CDG: "] 
  "30064771100" -> "30064771102"  [ label = "CDG: "] 
  "30064771100" -> "30064771103"  [ label = "CDG: "] 
  "30064771100" -> "30064771104"  [ label = "CDG: "] 
  "30064771100" -> "30064771105"  [ label = "CDG: "] 
  "30064771100" -> "55834574852"  [ label = "CDG: "] 
  "30064771111" -> "30064771114"  [ label = "CDG: "] 
  "30064771111" -> "30064771115"  [ label = "CDG: "] 
  "30064771111" -> "30064771112"  [ label = "CDG: "] 
  "30064771111" -> "30064771113"  [ label = "CDG: "] 
  "30064771120" -> "30064771122"  [ label = "CDG: "] 
  "30064771120" -> "30064771123"  [ label = "CDG: "] 
  "30064771120" -> "30064771124"  [ label = "CDG: "] 
  "30064771120" -> "30064771121"  [ label = "CDG: "] 
  "30064771130" -> "30064771131"  [ label = "CDG: "] 
  "30064771130" -> "30064771132"  [ label = "CDG: "] 
  "30064771130" -> "30064771133"  [ label = "CDG: "] 
  "30064771130" -> "30064771134"  [ label = "CDG: "] 
  "30064771136" -> "30064771142"  [ label = "CDG: "] 
  "30064771136" -> "30064771138"  [ label = "CDG: "] 
  "30064771136" -> "30064771139"  [ label = "CDG: "] 
  "30064771136" -> "30064771140"  [ label = "CDG: "] 
  "30064771136" -> "55834574858"  [ label = "CDG: "] 
  "30064771136" -> "30064771141"  [ label = "CDG: "] 
  "30064771136" -> "30064771137"  [ label = "CDG: "] 
  "30064771161" -> "30064771162"  [ label = "CDG: "] 
  "30064771161" -> "30064771163"  [ label = "CDG: "] 
  "30064771171" -> "30064771172"  [ label = "CDG: "] 
  "30064771171" -> "30064771173"  [ label = "CDG: "] 
  "30064771107" -> "30064771110"  [ label = "CDG: "] 
  "30064771107" -> "30064771108"  [ label = "CDG: "] 
  "30064771107" -> "30064771109"  [ label = "CDG: "] 
  "30064771107" -> "55834574853"  [ label = "CDG: "] 
  "30064771116" -> "30064771117"  [ label = "CDG: "] 
  "30064771116" -> "30064771118"  [ label = "CDG: "] 
  "30064771116" -> "30064771119"  [ label = "CDG: "] 
  "30064771116" -> "55834574854"  [ label = "CDG: "] 
}
"""
)
