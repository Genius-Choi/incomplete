[33mval[0m [36mres67[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "DecodePngV2" {  
"111669149698" [label = <(METHOD,DecodePngV2)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,OpKernelContext* context)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,StringPiece input)<SUB>1</SUB>> ]
"25769803778" [label = <(BLOCK,{
    int channel_bits = (data_type_ == DataTyp...,{
    int channel_bits = (data_type_ == DataTyp...)<SUB>1</SUB>> ]
"94489280513" [label = <(LOCAL,int channel_bits: int)<SUB>2</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,channel_bits = (data_type_ == DataType::DT_UINT...)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,channel_bits,channel_bits = (data_type_ == DataType::DT_UINT...)<SUB>2</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.conditional,(data_type_ == DataType::DT_UINT8) ? 8 : 16)<SUB>2</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.equals,data_type_ == DataType::DT_UINT8)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,data_type_,data_type_ == DataType::DT_UINT8)<SUB>2</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,DataType::DT_UINT8)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,DataType,data_type_ == DataType::DT_UINT8)<SUB>2</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,DT_UINT8,DT_UINT8)<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,8,(data_type_ == DataType::DT_UINT8) ? 8 : 16)<SUB>2</SUB>> ]
"90194313218" [label = <(LITERAL,16,(data_type_ == DataType::DT_UINT8) ? 8 : 16)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,png.DecodeContext decode: png.DecodeContext)<SUB>3</SUB>> ]
"30064771080" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, png::CommonInitDe...)<SUB>4</SUB>> ]
"68719476741" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, png::CommonInitDe...)<SUB>5</SUB>> ]
"30064771081" [label = <(CommonInitDecode,png::CommonInitDecode(input, channels_, channel...)<SUB>5</SUB>> ]
"68719476742" [label = <(IDENTIFIER,input,png::CommonInitDecode(input, channels_, channel...)<SUB>5</SUB>> ]
"68719476743" [label = <(IDENTIFIER,channels_,png::CommonInitDecode(input, channels_, channel...)<SUB>5</SUB>> ]
"68719476744" [label = <(IDENTIFIER,channel_bits,png::CommonInitDecode(input, channels_, channel...)<SUB>5</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.addressOf,&amp;decode)<SUB>5</SUB>> ]
"68719476745" [label = <(IDENTIFIER,decode,png::CommonInitDecode(input, channels_, channel...)<SUB>5</SUB>> ]
"30064771083" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Invalid PNG. Failed to...)<SUB>6</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;Invalid PNG. Failed to initialize decoder.&quot;,errors::InvalidArgument(&quot;Invalid PNG. Failed to...)<SUB>6</SUB>> ]
"94489280514" [label = <(LOCAL,auto cleanup: auto)<SUB>13</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,cleanup = gtl::MakeCleanup([&amp;decode]() {
      ...)<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,cleanup,cleanup = gtl::MakeCleanup([&amp;decode]() {
      ...)<SUB>13</SUB>> ]
"30064771085" [label = <(MakeCleanup,gtl::MakeCleanup([&amp;decode]() {
      std::cerr ...)<SUB>13</SUB>> ]
"124554051584" [label = <(METHOD_REF,[&amp;decode]() {
      std::cerr &lt;&lt; &quot;Cleanup calle...,gtl::MakeCleanup([&amp;decode]() {
      std::cerr ...)<SUB>13</SUB>> ]
"94489280515" [label = <(LOCAL,const int width: int)<SUB>24</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,width = static_cast&lt;int&gt;(decode.width))<SUB>24</SUB>> ]
"68719476747" [label = <(IDENTIFIER,width,width = static_cast&lt;int&gt;(decode.width))<SUB>24</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(decode.width))<SUB>24</SUB>> ]
"184683593728" [label = <(UNKNOWN,int,int)<SUB>24</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,decode.width)<SUB>24</SUB>> ]
"68719476748" [label = <(IDENTIFIER,decode,static_cast&lt;int&gt;(decode.width))<SUB>24</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,width,width)<SUB>24</SUB>> ]
"94489280516" [label = <(LOCAL,const int height: int)<SUB>25</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,height = static_cast&lt;int&gt;(decode.height))<SUB>25</SUB>> ]
"68719476749" [label = <(IDENTIFIER,height,height = static_cast&lt;int&gt;(decode.height))<SUB>25</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(decode.height))<SUB>25</SUB>> ]
"184683593729" [label = <(UNKNOWN,int,int)<SUB>25</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.fieldAccess,decode.height)<SUB>25</SUB>> ]
"68719476750" [label = <(IDENTIFIER,decode,static_cast&lt;int&gt;(decode.height))<SUB>25</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,height,height)<SUB>25</SUB>> ]
"94489280517" [label = <(LOCAL,const int64_t total_size: int64_t)<SUB>26</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.assignment,total_size =
        static_cast&lt;int64_t&gt;(width...)<SUB>26</SUB>> ]
"68719476751" [label = <(IDENTIFIER,total_size,total_size =
        static_cast&lt;int64_t&gt;(width...)<SUB>26</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.multiplication,static_cast&lt;int64_t&gt;(width) * static_cast&lt;int64...)<SUB>27</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.cast,static_cast&lt;int64_t&gt;(width))<SUB>27</SUB>> ]
"184683593730" [label = <(UNKNOWN,int64_t,int64_t)<SUB>27</SUB>> ]
"68719476752" [label = <(IDENTIFIER,width,static_cast&lt;int64_t&gt;(width))<SUB>27</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.cast,static_cast&lt;int64_t&gt;(height))<SUB>27</SUB>> ]
"184683593731" [label = <(UNKNOWN,int64_t,int64_t)<SUB>27</SUB>> ]
"68719476753" [label = <(IDENTIFIER,height,static_cast&lt;int64_t&gt;(height))<SUB>27</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0 ||
        width &gt;= (1LL &lt;&lt; 27) || height != static_cast&lt;int64_t&gt;(decode.height) ||
        height &lt;= 0 || height &gt;= (1LL &lt;&lt; 27) || total_size &gt;= (1LL &lt;&lt; 29)))<SUB>28</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.logicalOr,width != static_cast&lt;int64_t&gt;(decode.width) || ...)<SUB>28</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.logicalOr,width != static_cast&lt;int64_t&gt;(decode.width) || ...)<SUB>28</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.logicalOr,width != static_cast&lt;int64_t&gt;(decode.width) || ...)<SUB>28</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.logicalOr,width != static_cast&lt;int64_t&gt;(decode.width) || ...)<SUB>28</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.logicalOr,width != static_cast&lt;int64_t&gt;(decode.width) || ...)<SUB>28</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.logicalOr,width != static_cast&lt;int64_t&gt;(decode.width) || ...)<SUB>28</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.notEquals,width != static_cast&lt;int64_t&gt;(decode.width))<SUB>28</SUB>> ]
"68719476754" [label = <(IDENTIFIER,width,width != static_cast&lt;int64_t&gt;(decode.width))<SUB>28</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.cast,static_cast&lt;int64_t&gt;(decode.width))<SUB>28</SUB>> ]
"184683593732" [label = <(UNKNOWN,int64_t,int64_t)<SUB>28</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.fieldAccess,decode.width)<SUB>28</SUB>> ]
"68719476755" [label = <(IDENTIFIER,decode,static_cast&lt;int64_t&gt;(decode.width))<SUB>28</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,width,width)<SUB>28</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.lessEqualsThan,width &lt;= 0)<SUB>28</SUB>> ]
"68719476756" [label = <(IDENTIFIER,width,width &lt;= 0)<SUB>28</SUB>> ]
"90194313220" [label = <(LITERAL,0,width &lt;= 0)<SUB>28</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.greaterEqualsThan,width &gt;= (1LL &lt;&lt; 27))<SUB>29</SUB>> ]
"68719476757" [label = <(IDENTIFIER,width,width &gt;= (1LL &lt;&lt; 27))<SUB>29</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.shiftLeft,1LL &lt;&lt; 27)<SUB>29</SUB>> ]
"90194313221" [label = <(LITERAL,1LL,1LL &lt;&lt; 27)<SUB>29</SUB>> ]
"90194313222" [label = <(LITERAL,27,1LL &lt;&lt; 27)<SUB>29</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.notEquals,height != static_cast&lt;int64_t&gt;(decode.height))<SUB>29</SUB>> ]
"68719476758" [label = <(IDENTIFIER,height,height != static_cast&lt;int64_t&gt;(decode.height))<SUB>29</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.cast,static_cast&lt;int64_t&gt;(decode.height))<SUB>29</SUB>> ]
"184683593733" [label = <(UNKNOWN,int64_t,int64_t)<SUB>29</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.fieldAccess,decode.height)<SUB>29</SUB>> ]
"68719476759" [label = <(IDENTIFIER,decode,static_cast&lt;int64_t&gt;(decode.height))<SUB>29</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,height,height)<SUB>29</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.lessEqualsThan,height &lt;= 0)<SUB>30</SUB>> ]
"68719476760" [label = <(IDENTIFIER,height,height &lt;= 0)<SUB>30</SUB>> ]
"90194313223" [label = <(LITERAL,0,height &lt;= 0)<SUB>30</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.greaterEqualsThan,height &gt;= (1LL &lt;&lt; 27))<SUB>30</SUB>> ]
"68719476761" [label = <(IDENTIFIER,height,height &gt;= (1LL &lt;&lt; 27))<SUB>30</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.shiftLeft,1LL &lt;&lt; 27)<SUB>30</SUB>> ]
"90194313224" [label = <(LITERAL,1LL,1LL &lt;&lt; 27)<SUB>30</SUB>> ]
"90194313225" [label = <(LITERAL,27,1LL &lt;&lt; 27)<SUB>30</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.greaterEqualsThan,total_size &gt;= (1LL &lt;&lt; 29))<SUB>30</SUB>> ]
"68719476762" [label = <(IDENTIFIER,total_size,total_size &gt;= (1LL &lt;&lt; 29))<SUB>30</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.shiftLeft,1LL &lt;&lt; 29)<SUB>30</SUB>> ]
"90194313226" [label = <(LITERAL,1LL,1LL &lt;&lt; 29)<SUB>30</SUB>> ]
"90194313227" [label = <(LITERAL,29,1LL &lt;&lt; 29)<SUB>30</SUB>> ]
"25769803779" [label = <(BLOCK,{
      OP_REQUIRES(context, false,
           ...,{
      OP_REQUIRES(context, false,
           ...)<SUB>30</SUB>> ]
"30064771116" [label = <(OP_REQUIRES,OP_REQUIRES(context, false,
                  e...)<SUB>31</SUB>> ]
"68719476763" [label = <(IDENTIFIER,context,OP_REQUIRES(context, false,
                  e...)<SUB>31</SUB>> ]
"90194313228" [label = <(LITERAL,false,OP_REQUIRES(context, false,
                  e...)<SUB>31</SUB>> ]
"30064771117" [label = <(InvalidArgument,errors::InvalidArgument(&quot;PNG size too large for...)<SUB>32</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;PNG size too large for int: &quot;,errors::InvalidArgument(&quot;PNG size too large for...)<SUB>32</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.fieldAccess,decode.width)<SUB>33</SUB>> ]
"68719476764" [label = <(IDENTIFIER,decode,errors::InvalidArgument(&quot;PNG size too large for...)<SUB>33</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,width,width)<SUB>33</SUB>> ]
"90194313230" [label = <(LITERAL,&quot; by &quot;,errors::InvalidArgument(&quot;PNG size too large for...)<SUB>33</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.fieldAccess,decode.height)<SUB>33</SUB>> ]
"68719476765" [label = <(IDENTIFIER,decode,errors::InvalidArgument(&quot;PNG size too large for...)<SUB>33</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,height,height)<SUB>33</SUB>> ]
"94489280518" [label = <(LOCAL,Tensor* output: Tensor*)<SUB>36</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.assignment,* output = nullptr)<SUB>36</SUB>> ]
"68719476766" [label = <(IDENTIFIER,output,* output = nullptr)<SUB>36</SUB>> ]
"90194313231" [label = <(LITERAL,nullptr,* output = nullptr)<SUB>36</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (op_type_ == &quot;DecodeGif&quot;))<SUB>39</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.equals,op_type_ == &quot;DecodeGif&quot;)<SUB>39</SUB>> ]
"68719476767" [label = <(IDENTIFIER,op_type_,op_type_ == &quot;DecodeGif&quot;)<SUB>39</SUB>> ]
"90194313232" [label = <(LITERAL,&quot;DecodeGif&quot;,op_type_ == &quot;DecodeGif&quot;)<SUB>39</SUB>> ]
"25769803780" [label = <(BLOCK,{
      OP_REQUIRES_OK(
          context,
    ...,{
      OP_REQUIRES_OK(
          context,
    ...)<SUB>39</SUB>> ]
"30064771122" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(
          context,
          co...)<SUB>40</SUB>> ]
"68719476768" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(
          context,
          co...)<SUB>41</SUB>> ]
"30064771123" [label = <(allocate_output,context-&gt;allocate_output(
              0, Tens...)<SUB>42</SUB>> ]
"68719476769" [label = <(IDENTIFIER,context,context-&gt;allocate_output(
              0, Tens...)<SUB>42</SUB>> ]
"90194313233" [label = <(LITERAL,0,context-&gt;allocate_output(
              0, Tens...)<SUB>43</SUB>> ]
"30064771124" [label = <(TensorShape,TensorShape({1, height, width, decode.channels}))<SUB>43</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.arrayInitializer,{1, height, width, decode.channels})<SUB>43</SUB>> ]
"90194313234" [label = <(LITERAL,1,{1, height, width, decode.channels})<SUB>43</SUB>> ]
"68719476770" [label = <(IDENTIFIER,height,{1, height, width, decode.channels})<SUB>43</SUB>> ]
"68719476771" [label = <(IDENTIFIER,width,{1, height, width, decode.channels})<SUB>43</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.fieldAccess,decode.channels)<SUB>43</SUB>> ]
"68719476772" [label = <(IDENTIFIER,decode,{1, height, width, decode.channels})<SUB>43</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,channels,channels)<SUB>43</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.addressOf,&amp;output)<SUB>43</SUB>> ]
"68719476773" [label = <(IDENTIFIER,output,context-&gt;allocate_output(
              0, Tens...)<SUB>43</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>44</SUB>> ]
"25769803781" [label = <(BLOCK,{
      OP_REQUIRES_OK(
          context,
    ...,{
      OP_REQUIRES_OK(
          context,
    ...)<SUB>44</SUB>> ]
"30064771128" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(
          context,
          co...)<SUB>45</SUB>> ]
"68719476774" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(
          context,
          co...)<SUB>46</SUB>> ]
"30064771129" [label = <(allocate_output,context-&gt;allocate_output(
              0, Tens...)<SUB>47</SUB>> ]
"68719476775" [label = <(IDENTIFIER,context,context-&gt;allocate_output(
              0, Tens...)<SUB>47</SUB>> ]
"90194313235" [label = <(LITERAL,0,context-&gt;allocate_output(
              0, Tens...)<SUB>48</SUB>> ]
"30064771130" [label = <(TensorShape,TensorShape({height, width, decode.channels}))<SUB>48</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.arrayInitializer,{height, width, decode.channels})<SUB>48</SUB>> ]
"68719476776" [label = <(IDENTIFIER,height,{height, width, decode.channels})<SUB>48</SUB>> ]
"68719476777" [label = <(IDENTIFIER,width,{height, width, decode.channels})<SUB>48</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.fieldAccess,decode.channels)<SUB>48</SUB>> ]
"68719476778" [label = <(IDENTIFIER,decode,{height, width, decode.channels})<SUB>48</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,channels,channels)<SUB>48</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.addressOf,&amp;output)<SUB>48</SUB>> ]
"68719476779" [label = <(IDENTIFIER,output,context-&gt;allocate_output(
              0, Tens...)<SUB>48</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (op_type_ == &quot;DecodeBmp&quot;))<SUB>51</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.equals,op_type_ == &quot;DecodeBmp&quot;)<SUB>51</SUB>> ]
"68719476780" [label = <(IDENTIFIER,op_type_,op_type_ == &quot;DecodeBmp&quot;)<SUB>51</SUB>> ]
"90194313236" [label = <(LITERAL,&quot;DecodeBmp&quot;,op_type_ == &quot;DecodeBmp&quot;)<SUB>51</SUB>> ]
"25769803782" [label = <(BLOCK,{
      // TODO(b/171060723): Only DecodeBmp as...,{
      // TODO(b/171060723): Only DecodeBmp as...)<SUB>51</SUB>> ]
"30064771135" [label = <(OP_REQUIRES,OP_REQUIRES(context, false,
                  e...)<SUB>57</SUB>> ]
"68719476781" [label = <(IDENTIFIER,context,OP_REQUIRES(context, false,
                  e...)<SUB>57</SUB>> ]
"90194313237" [label = <(LITERAL,false,OP_REQUIRES(context, false,
                  e...)<SUB>57</SUB>> ]
"30064771136" [label = <(InvalidArgument,errors::InvalidArgument(
                      ...)<SUB>58</SUB>> ]
"90194313238" [label = <(LITERAL,&quot;Trying to decode PNG format using DecodeBmp op...,errors::InvalidArgument(
                      ...)<SUB>59</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>61</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>61</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (op_type_ == &quot;DecodeAndCropJpeg&quot;))<SUB>61</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.equals,op_type_ == &quot;DecodeAndCropJpeg&quot;)<SUB>61</SUB>> ]
"68719476782" [label = <(IDENTIFIER,op_type_,op_type_ == &quot;DecodeAndCropJpeg&quot;)<SUB>61</SUB>> ]
"90194313239" [label = <(LITERAL,&quot;DecodeAndCropJpeg&quot;,op_type_ == &quot;DecodeAndCropJpeg&quot;)<SUB>61</SUB>> ]
"25769803784" [label = <(BLOCK,{
      OP_REQUIRES(context, false,
           ...,{
      OP_REQUIRES(context, false,
           ...)<SUB>61</SUB>> ]
"30064771138" [label = <(OP_REQUIRES,OP_REQUIRES(context, false,
                  e...)<SUB>62</SUB>> ]
"68719476783" [label = <(IDENTIFIER,context,OP_REQUIRES(context, false,
                  e...)<SUB>62</SUB>> ]
"90194313240" [label = <(LITERAL,false,OP_REQUIRES(context, false,
                  e...)<SUB>62</SUB>> ]
"30064771139" [label = <(InvalidArgument,errors::InvalidArgument(
                      ...)<SUB>63</SUB>> ]
"90194313241" [label = <(LITERAL,&quot;DecodeAndCropJpeg operation can run on JPEG on...,errors::InvalidArgument(
                      ...)<SUB>64</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (data_type_ == DataType::DT_UINT8))<SUB>68</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.equals,data_type_ == DataType::DT_UINT8)<SUB>68</SUB>> ]
"68719476784" [label = <(IDENTIFIER,data_type_,data_type_ == DataType::DT_UINT8)<SUB>68</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.fieldAccess,DataType::DT_UINT8)<SUB>68</SUB>> ]
"68719476785" [label = <(IDENTIFIER,DataType,data_type_ == DataType::DT_UINT8)<SUB>68</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,DT_UINT8,DT_UINT8)<SUB>68</SUB>> ]
"25769803785" [label = <(BLOCK,{
      OP_REQUIRES(
          context,
       ...,{
      OP_REQUIRES(
          context,
       ...)<SUB>68</SUB>> ]
"30064771142" [label = <(OP_REQUIRES,OP_REQUIRES(
          context,
          png::...)<SUB>69</SUB>> ]
"68719476786" [label = <(IDENTIFIER,context,OP_REQUIRES(
          context,
          png::...)<SUB>70</SUB>> ]
"30064771143" [label = <(CommonFinishDecode,png::CommonFinishDecode(
              reinterp...)<SUB>71</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;png_bytep&gt;(output-&gt;flat&lt;uint8&gt;...)<SUB>72</SUB>> ]
"184683593734" [label = <(UNKNOWN,png_bytep,png_bytep)<SUB>72</SUB>> ]
"30064771145" [label = <(data,output-&gt;flat&lt;uint8&gt;().data())<SUB>72</SUB>> ]
"30064771146" [label = <(flat&lt;uint8&gt;,output-&gt;flat&lt;uint8&gt;())<SUB>72</SUB>> ]
"68719476787" [label = <(IDENTIFIER,output,output-&gt;flat&lt;uint8&gt;())<SUB>72</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.multiplication,decode.channels * width * sizeof(uint8))<SUB>73</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.multiplication,decode.channels * width)<SUB>73</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.fieldAccess,decode.channels)<SUB>73</SUB>> ]
"68719476788" [label = <(IDENTIFIER,decode,decode.channels * width)<SUB>73</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,channels,channels)<SUB>73</SUB>> ]
"68719476789" [label = <(IDENTIFIER,width,decode.channels * width)<SUB>73</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint8))<SUB>73</SUB>> ]
"68719476790" [label = <(IDENTIFIER,uint8,sizeof(uint8))<SUB>73</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.addressOf,&amp;decode)<SUB>73</SUB>> ]
"68719476791" [label = <(IDENTIFIER,decode,png::CommonFinishDecode(
              reinterp...)<SUB>73</SUB>> ]
"30064771152" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Invalid PNG data, size...)<SUB>74</SUB>> ]
"90194313242" [label = <(LITERAL,&quot;Invalid PNG data, size &quot;,errors::InvalidArgument(&quot;Invalid PNG data, size...)<SUB>74</SUB>> ]
"30064771153" [label = <(size,input.size())<SUB>74</SUB>> ]
"68719476792" [label = <(IDENTIFIER,input,input.size())<SUB>74</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>75</SUB>> ]
"25769803786" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,IF,if (data_type_ == DataType::DT_UINT16))<SUB>75</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.equals,data_type_ == DataType::DT_UINT16)<SUB>75</SUB>> ]
"68719476793" [label = <(IDENTIFIER,data_type_,data_type_ == DataType::DT_UINT16)<SUB>75</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.fieldAccess,DataType::DT_UINT16)<SUB>75</SUB>> ]
"68719476794" [label = <(IDENTIFIER,DataType,data_type_ == DataType::DT_UINT16)<SUB>75</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,DT_UINT16,DT_UINT16)<SUB>75</SUB>> ]
"25769803787" [label = <(BLOCK,{
      OP_REQUIRES(
          context,
       ...,{
      OP_REQUIRES(
          context,
       ...)<SUB>75</SUB>> ]
"30064771156" [label = <(OP_REQUIRES,OP_REQUIRES(
          context,
          png::...)<SUB>76</SUB>> ]
"68719476795" [label = <(IDENTIFIER,context,OP_REQUIRES(
          context,
          png::...)<SUB>77</SUB>> ]
"30064771157" [label = <(CommonFinishDecode,png::CommonFinishDecode(
              reinterp...)<SUB>78</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;png_bytep&gt;(output-&gt;flat&lt;uint16...)<SUB>79</SUB>> ]
"184683593735" [label = <(UNKNOWN,png_bytep,png_bytep)<SUB>79</SUB>> ]
"30064771159" [label = <(data,output-&gt;flat&lt;uint16&gt;().data())<SUB>79</SUB>> ]
"30064771160" [label = <(flat&lt;uint16&gt;,output-&gt;flat&lt;uint16&gt;())<SUB>79</SUB>> ]
"68719476796" [label = <(IDENTIFIER,output,output-&gt;flat&lt;uint16&gt;())<SUB>79</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.multiplication,decode.channels * width * sizeof(uint16))<SUB>80</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.multiplication,decode.channels * width)<SUB>80</SUB>> ]
"30064771163" [label = <(&lt;operator&gt;.fieldAccess,decode.channels)<SUB>80</SUB>> ]
"68719476797" [label = <(IDENTIFIER,decode,decode.channels * width)<SUB>80</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,channels,channels)<SUB>80</SUB>> ]
"68719476798" [label = <(IDENTIFIER,width,decode.channels * width)<SUB>80</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint16))<SUB>80</SUB>> ]
"68719476799" [label = <(IDENTIFIER,uint16,sizeof(uint16))<SUB>80</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.addressOf,&amp;decode)<SUB>80</SUB>> ]
"68719476800" [label = <(IDENTIFIER,decode,png::CommonFinishDecode(
              reinterp...)<SUB>80</SUB>> ]
"30064771166" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Invalid PNG data, size...)<SUB>81</SUB>> ]
"90194313243" [label = <(LITERAL,&quot;Invalid PNG data, size &quot;,errors::InvalidArgument(&quot;Invalid PNG data, size...)<SUB>81</SUB>> ]
"30064771167" [label = <(size,input.size())<SUB>81</SUB>> ]
"68719476801" [label = <(IDENTIFIER,input,input.size())<SUB>81</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>82</SUB>> ]
"25769803788" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>82</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,IF,if (data_type_ == DataType::DT_FLOAT))<SUB>82</SUB>> ]
"30064771168" [label = <(&lt;operator&gt;.equals,data_type_ == DataType::DT_FLOAT)<SUB>82</SUB>> ]
"68719476802" [label = <(IDENTIFIER,data_type_,data_type_ == DataType::DT_FLOAT)<SUB>82</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.fieldAccess,DataType::DT_FLOAT)<SUB>82</SUB>> ]
"68719476803" [label = <(IDENTIFIER,DataType,data_type_ == DataType::DT_FLOAT)<SUB>82</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,DT_FLOAT,DT_FLOAT)<SUB>82</SUB>> ]
"25769803789" [label = <(BLOCK,{
      // `png::CommonFinishDecode` does not s...,{
      // `png::CommonFinishDecode` does not s...)<SUB>82</SUB>> ]
"94489280519" [label = <(LOCAL,std.unique_ptr&lt;uint16[]&gt; buffer: std.unique_ptr&lt;uint16[]&gt;)<SUB>86</SUB>> ]
"30064771170" [label = <(buffer,buffer(
          new uint16[height * width * d...)<SUB>86</SUB>> ]
"30064771171" [label = <(&lt;operator&gt;.new,new uint16[height * width * decode.channels])<SUB>87</SUB>> ]
"68719476804" [label = <(IDENTIFIER,uint16,new uint16[height * width * decode.channels])<SUB>87</SUB>> ]
"30064771172" [label = <(OP_REQUIRES,OP_REQUIRES(
          context,
          png::...)<SUB>88</SUB>> ]
"68719476805" [label = <(IDENTIFIER,context,OP_REQUIRES(
          context,
          png::...)<SUB>89</SUB>> ]
"30064771173" [label = <(CommonFinishDecode,png::CommonFinishDecode(reinterpret_cast&lt;png_by...)<SUB>90</SUB>> ]
"30064771174" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;png_bytep&gt;(buffer.get()))<SUB>90</SUB>> ]
"184683593736" [label = <(UNKNOWN,png_bytep,png_bytep)<SUB>90</SUB>> ]
"30064771175" [label = <(get,buffer.get())<SUB>90</SUB>> ]
"68719476806" [label = <(IDENTIFIER,buffer,buffer.get())<SUB>90</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;.multiplication,decode.channels * width * sizeof(uint16))<SUB>91</SUB>> ]
"30064771177" [label = <(&lt;operator&gt;.multiplication,decode.channels * width)<SUB>91</SUB>> ]
"30064771178" [label = <(&lt;operator&gt;.fieldAccess,decode.channels)<SUB>91</SUB>> ]
"68719476807" [label = <(IDENTIFIER,decode,decode.channels * width)<SUB>91</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,channels,channels)<SUB>91</SUB>> ]
"68719476808" [label = <(IDENTIFIER,width,decode.channels * width)<SUB>91</SUB>> ]
"30064771179" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint16))<SUB>91</SUB>> ]
"68719476809" [label = <(IDENTIFIER,uint16,sizeof(uint16))<SUB>91</SUB>> ]
"30064771180" [label = <(&lt;operator&gt;.addressOf,&amp;decode)<SUB>92</SUB>> ]
"68719476810" [label = <(IDENTIFIER,decode,png::CommonFinishDecode(reinterpret_cast&lt;png_by...)<SUB>92</SUB>> ]
"30064771181" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Invalid PNG data, size...)<SUB>93</SUB>> ]
"90194313244" [label = <(LITERAL,&quot;Invalid PNG data, size &quot;,errors::InvalidArgument(&quot;Invalid PNG data, size...)<SUB>93</SUB>> ]
"30064771182" [label = <(size,input.size())<SUB>93</SUB>> ]
"68719476811" [label = <(IDENTIFIER,input,input.size())<SUB>93</SUB>> ]
"94489280520" [label = <(LOCAL,const auto&amp; device: auto&amp;)<SUB>97</SUB>> ]
"30064771183" [label = <(&lt;operator&gt;.assignment,&amp; device = context-&gt;eigen_device&lt;Eigen::ThreadP...)<SUB>97</SUB>> ]
"68719476812" [label = <(IDENTIFIER,device,&amp; device = context-&gt;eigen_device&lt;Eigen::ThreadP...)<SUB>97</SUB>> ]
"30064771184" [label = <(eigen_device&lt;Eigen::ThreadPoolDevice&gt;,context-&gt;eigen_device&lt;Eigen::ThreadPoolDevice&gt;())<SUB>97</SUB>> ]
"68719476813" [label = <(IDENTIFIER,context,context-&gt;eigen_device&lt;Eigen::ThreadPoolDevice&gt;())<SUB>97</SUB>> ]
"94489280521" [label = <(LOCAL,TTypes&lt;uint16,3&gt;.UnalignedConstTensor buf: TTypes&lt;uint16,3&gt;.UnalignedConstTensor)<SUB>98</SUB>> ]
"30064771185" [label = <(buf,buf(buffer.get(), height, width,
              ...)<SUB>98</SUB>> ]
"30064771186" [label = <(get,buffer.get())<SUB>98</SUB>> ]
"68719476814" [label = <(IDENTIFIER,buffer,buffer.get())<SUB>98</SUB>> ]
"68719476815" [label = <(IDENTIFIER,height,buf(buffer.get(), height, width,
              ...)<SUB>98</SUB>> ]
"68719476816" [label = <(IDENTIFIER,width,buf(buffer.get(), height, width,
              ...)<SUB>98</SUB>> ]
"30064771187" [label = <(&lt;operator&gt;.fieldAccess,decode.channels)<SUB>99</SUB>> ]
"68719476817" [label = <(IDENTIFIER,decode,buf(buffer.get(), height, width,
              ...)<SUB>99</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,channels,channels)<SUB>99</SUB>> ]
"94489280522" [label = <(LOCAL,float scale: float)<SUB>100</SUB>> ]
"30064771188" [label = <(&lt;operator&gt;.assignment,scale = 1. / std::numeric_limits&lt;uint16&gt;::max())<SUB>100</SUB>> ]
"68719476818" [label = <(IDENTIFIER,scale,scale = 1. / std::numeric_limits&lt;uint16&gt;::max())<SUB>100</SUB>> ]
"30064771189" [label = <(&lt;operator&gt;.greaterThan,1. / std::numeric_limits&lt;uint16&gt;::max())<SUB>100</SUB>> ]
"30064771190" [label = <(&lt;operator&gt;.lessThan,1. / std::numeric_limits&lt;uint16)<SUB>100</SUB>> ]
"30064771191" [label = <(&lt;operator&gt;.division,1. / std::numeric_limits)<SUB>100</SUB>> ]
"90194313245" [label = <(LITERAL,1.,1. / std::numeric_limits)<SUB>100</SUB>> ]
"30064771192" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>100</SUB>> ]
"68719476819" [label = <(IDENTIFIER,std,1. / std::numeric_limits)<SUB>100</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>100</SUB>> ]
"68719476820" [label = <(IDENTIFIER,uint16,1. / std::numeric_limits&lt;uint16)<SUB>100</SUB>> ]
"30064771193" [label = <(max,::max())<SUB>100</SUB>> ]
"30064771194" [label = <(&lt;operator&gt;.assignment,output-&gt;tensor&lt;float, 3&gt;().device(device) = buf...)<SUB>102</SUB>> ]
"30064771195" [label = <(device,output-&gt;tensor&lt;float, 3&gt;().device(device))<SUB>102</SUB>> ]
"30064771196" [label = <(tensor&lt;float, 3&gt;,output-&gt;tensor&lt;float, 3&gt;())<SUB>102</SUB>> ]
"68719476821" [label = <(IDENTIFIER,output,output-&gt;tensor&lt;float, 3&gt;())<SUB>102</SUB>> ]
"68719476822" [label = <(IDENTIFIER,device,output-&gt;tensor&lt;float, 3&gt;().device(device))<SUB>102</SUB>> ]
"30064771197" [label = <(&lt;operator&gt;.multiplication,buf.cast&lt;float&gt;() * scale)<SUB>102</SUB>> ]
"30064771198" [label = <(cast&lt;float&gt;,buf.cast&lt;float&gt;())<SUB>102</SUB>> ]
"68719476823" [label = <(IDENTIFIER,buf,buf.cast&lt;float&gt;())<SUB>102</SUB>> ]
"68719476824" [label = <(IDENTIFIER,scale,buf.cast&lt;float&gt;() * scale)<SUB>102</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149698" -> "115964116992"  [ label = "AST: "] 
  "111669149698" -> "115964116993"  [ label = "AST: "] 
  "111669149698" -> "25769803778"  [ label = "AST: "] 
  "111669149698" -> "128849018881"  [ label = "AST: "] 
  "25769803778" -> "94489280513"  [ label = "AST: "] 
  "25769803778" -> "30064771076"  [ label = "AST: "] 
  "25769803778" -> "94489280512"  [ label = "AST: "] 
  "25769803778" -> "30064771080"  [ label = "AST: "] 
  "25769803778" -> "94489280514"  [ label = "AST: "] 
  "25769803778" -> "30064771084"  [ label = "AST: "] 
  "25769803778" -> "94489280515"  [ label = "AST: "] 
  "25769803778" -> "30064771086"  [ label = "AST: "] 
  "25769803778" -> "94489280516"  [ label = "AST: "] 
  "25769803778" -> "30064771089"  [ label = "AST: "] 
  "25769803778" -> "94489280517"  [ label = "AST: "] 
  "25769803778" -> "30064771092"  [ label = "AST: "] 
  "25769803778" -> "47244640256"  [ label = "AST: "] 
  "25769803778" -> "94489280518"  [ label = "AST: "] 
  "25769803778" -> "30064771120"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "47244640259"  [ label = "AST: "] 
  "25769803778" -> "47244640262"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "90194313217"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476740"  [ label = "AST: "] 
  "30064771079" -> "55834574849"  [ label = "AST: "] 
  "30064771080" -> "68719476741"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "30064771083"  [ label = "AST: "] 
  "30064771081" -> "68719476742"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "90194313219"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "124554051584"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "184683593728"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476748"  [ label = "AST: "] 
  "30064771088" -> "55834574850"  [ label = "AST: "] 
  "30064771089" -> "68719476749"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "184683593729"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476750"  [ label = "AST: "] 
  "30064771091" -> "55834574851"  [ label = "AST: "] 
  "30064771092" -> "68719476751"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "184683593730"  [ label = "AST: "] 
  "30064771094" -> "68719476752"  [ label = "AST: "] 
  "30064771095" -> "184683593731"  [ label = "AST: "] 
  "30064771095" -> "68719476753"  [ label = "AST: "] 
  "47244640256" -> "30064771096"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "30064771114"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "30064771112"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771098" -> "30064771111"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "30064771108"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "30064771106"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "30064771105"  [ label = "AST: "] 
  "30064771102" -> "68719476754"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "184683593732"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476755"  [ label = "AST: "] 
  "30064771104" -> "55834574852"  [ label = "AST: "] 
  "30064771105" -> "68719476756"  [ label = "AST: "] 
  "30064771105" -> "90194313220"  [ label = "AST: "] 
  "30064771106" -> "68719476757"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "90194313221"  [ label = "AST: "] 
  "30064771107" -> "90194313222"  [ label = "AST: "] 
  "30064771108" -> "68719476758"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771109" -> "184683593733"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "68719476759"  [ label = "AST: "] 
  "30064771110" -> "55834574853"  [ label = "AST: "] 
  "30064771111" -> "68719476760"  [ label = "AST: "] 
  "30064771111" -> "90194313223"  [ label = "AST: "] 
  "30064771112" -> "68719476761"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "90194313224"  [ label = "AST: "] 
  "30064771113" -> "90194313225"  [ label = "AST: "] 
  "30064771114" -> "68719476762"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771115" -> "90194313226"  [ label = "AST: "] 
  "30064771115" -> "90194313227"  [ label = "AST: "] 
  "25769803779" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "68719476763"  [ label = "AST: "] 
  "30064771116" -> "90194313228"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771117" -> "90194313229"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771117" -> "90194313230"  [ label = "AST: "] 
  "30064771117" -> "30064771119"  [ label = "AST: "] 
  "30064771118" -> "68719476764"  [ label = "AST: "] 
  "30064771118" -> "55834574854"  [ label = "AST: "] 
  "30064771119" -> "68719476765"  [ label = "AST: "] 
  "30064771119" -> "55834574855"  [ label = "AST: "] 
  "30064771120" -> "68719476766"  [ label = "AST: "] 
  "30064771120" -> "90194313231"  [ label = "AST: "] 
  "47244640257" -> "30064771121"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "47244640257" -> "47244640258"  [ label = "AST: "] 
  "30064771121" -> "68719476767"  [ label = "AST: "] 
  "30064771121" -> "90194313232"  [ label = "AST: "] 
  "25769803780" -> "30064771122"  [ label = "AST: "] 
  "30064771122" -> "68719476768"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "68719476769"  [ label = "AST: "] 
  "30064771123" -> "90194313233"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771123" -> "30064771127"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771125" -> "90194313234"  [ label = "AST: "] 
  "30064771125" -> "68719476770"  [ label = "AST: "] 
  "30064771125" -> "68719476771"  [ label = "AST: "] 
  "30064771125" -> "30064771126"  [ label = "AST: "] 
  "30064771126" -> "68719476772"  [ label = "AST: "] 
  "30064771126" -> "55834574856"  [ label = "AST: "] 
  "30064771127" -> "68719476773"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "68719476774"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "68719476775"  [ label = "AST: "] 
  "30064771129" -> "90194313235"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "30064771133"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "68719476776"  [ label = "AST: "] 
  "30064771131" -> "68719476777"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771132" -> "68719476778"  [ label = "AST: "] 
  "30064771132" -> "55834574857"  [ label = "AST: "] 
  "30064771133" -> "68719476779"  [ label = "AST: "] 
  "47244640259" -> "30064771134"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "47244640259" -> "47244640260"  [ label = "AST: "] 
  "30064771134" -> "68719476780"  [ label = "AST: "] 
  "30064771134" -> "90194313236"  [ label = "AST: "] 
  "25769803782" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "68719476781"  [ label = "AST: "] 
  "30064771135" -> "90194313237"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771136" -> "90194313238"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "47244640261"  [ label = "AST: "] 
  "47244640261" -> "30064771137"  [ label = "AST: "] 
  "47244640261" -> "25769803784"  [ label = "AST: "] 
  "30064771137" -> "68719476782"  [ label = "AST: "] 
  "30064771137" -> "90194313239"  [ label = "AST: "] 
  "25769803784" -> "30064771138"  [ label = "AST: "] 
  "30064771138" -> "68719476783"  [ label = "AST: "] 
  "30064771138" -> "90194313240"  [ label = "AST: "] 
  "30064771138" -> "30064771139"  [ label = "AST: "] 
  "30064771139" -> "90194313241"  [ label = "AST: "] 
  "47244640262" -> "30064771140"  [ label = "AST: "] 
  "47244640262" -> "25769803785"  [ label = "AST: "] 
  "47244640262" -> "47244640263"  [ label = "AST: "] 
  "30064771140" -> "68719476784"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771141" -> "68719476785"  [ label = "AST: "] 
  "30064771141" -> "55834574858"  [ label = "AST: "] 
  "25769803785" -> "30064771142"  [ label = "AST: "] 
  "30064771142" -> "68719476786"  [ label = "AST: "] 
  "30064771142" -> "30064771143"  [ label = "AST: "] 
  "30064771142" -> "30064771152"  [ label = "AST: "] 
  "30064771143" -> "30064771144"  [ label = "AST: "] 
  "30064771143" -> "30064771147"  [ label = "AST: "] 
  "30064771143" -> "30064771151"  [ label = "AST: "] 
  "30064771144" -> "184683593734"  [ label = "AST: "] 
  "30064771144" -> "30064771145"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771146" -> "68719476787"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771147" -> "30064771150"  [ label = "AST: "] 
  "30064771148" -> "30064771149"  [ label = "AST: "] 
  "30064771148" -> "68719476789"  [ label = "AST: "] 
  "30064771149" -> "68719476788"  [ label = "AST: "] 
  "30064771149" -> "55834574859"  [ label = "AST: "] 
  "30064771150" -> "68719476790"  [ label = "AST: "] 
  "30064771151" -> "68719476791"  [ label = "AST: "] 
  "30064771152" -> "90194313242"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771153" -> "68719476792"  [ label = "AST: "] 
  "47244640263" -> "25769803786"  [ label = "AST: "] 
  "25769803786" -> "47244640264"  [ label = "AST: "] 
  "47244640264" -> "30064771154"  [ label = "AST: "] 
  "47244640264" -> "25769803787"  [ label = "AST: "] 
  "47244640264" -> "47244640265"  [ label = "AST: "] 
  "30064771154" -> "68719476793"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771155" -> "68719476794"  [ label = "AST: "] 
  "30064771155" -> "55834574860"  [ label = "AST: "] 
  "25769803787" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "68719476795"  [ label = "AST: "] 
  "30064771156" -> "30064771157"  [ label = "AST: "] 
  "30064771156" -> "30064771166"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771157" -> "30064771161"  [ label = "AST: "] 
  "30064771157" -> "30064771165"  [ label = "AST: "] 
  "30064771158" -> "184683593735"  [ label = "AST: "] 
  "30064771158" -> "30064771159"  [ label = "AST: "] 
  "30064771159" -> "30064771160"  [ label = "AST: "] 
  "30064771160" -> "68719476796"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "30064771164"  [ label = "AST: "] 
  "30064771162" -> "30064771163"  [ label = "AST: "] 
  "30064771162" -> "68719476798"  [ label = "AST: "] 
  "30064771163" -> "68719476797"  [ label = "AST: "] 
  "30064771163" -> "55834574861"  [ label = "AST: "] 
  "30064771164" -> "68719476799"  [ label = "AST: "] 
  "30064771165" -> "68719476800"  [ label = "AST: "] 
  "30064771166" -> "90194313243"  [ label = "AST: "] 
  "30064771166" -> "30064771167"  [ label = "AST: "] 
  "30064771167" -> "68719476801"  [ label = "AST: "] 
  "47244640265" -> "25769803788"  [ label = "AST: "] 
  "25769803788" -> "47244640266"  [ label = "AST: "] 
  "47244640266" -> "30064771168"  [ label = "AST: "] 
  "47244640266" -> "25769803789"  [ label = "AST: "] 
  "30064771168" -> "68719476802"  [ label = "AST: "] 
  "30064771168" -> "30064771169"  [ label = "AST: "] 
  "30064771169" -> "68719476803"  [ label = "AST: "] 
  "30064771169" -> "55834574862"  [ label = "AST: "] 
  "25769803789" -> "94489280519"  [ label = "AST: "] 
  "25769803789" -> "30064771170"  [ label = "AST: "] 
  "25769803789" -> "30064771172"  [ label = "AST: "] 
  "25769803789" -> "94489280520"  [ label = "AST: "] 
  "25769803789" -> "30064771183"  [ label = "AST: "] 
  "25769803789" -> "94489280521"  [ label = "AST: "] 
  "25769803789" -> "30064771185"  [ label = "AST: "] 
  "25769803789" -> "94489280522"  [ label = "AST: "] 
  "25769803789" -> "30064771188"  [ label = "AST: "] 
  "25769803789" -> "30064771194"  [ label = "AST: "] 
  "30064771170" -> "30064771171"  [ label = "AST: "] 
  "30064771171" -> "68719476804"  [ label = "AST: "] 
  "30064771172" -> "68719476805"  [ label = "AST: "] 
  "30064771172" -> "30064771173"  [ label = "AST: "] 
  "30064771172" -> "30064771181"  [ label = "AST: "] 
  "30064771173" -> "30064771174"  [ label = "AST: "] 
  "30064771173" -> "30064771176"  [ label = "AST: "] 
  "30064771173" -> "30064771180"  [ label = "AST: "] 
  "30064771174" -> "184683593736"  [ label = "AST: "] 
  "30064771174" -> "30064771175"  [ label = "AST: "] 
  "30064771175" -> "68719476806"  [ label = "AST: "] 
  "30064771176" -> "30064771177"  [ label = "AST: "] 
  "30064771176" -> "30064771179"  [ label = "AST: "] 
  "30064771177" -> "30064771178"  [ label = "AST: "] 
  "30064771177" -> "68719476808"  [ label = "AST: "] 
  "30064771178" -> "68719476807"  [ label = "AST: "] 
  "30064771178" -> "55834574863"  [ label = "AST: "] 
  "30064771179" -> "68719476809"  [ label = "AST: "] 
  "30064771180" -> "68719476810"  [ label = "AST: "] 
  "30064771181" -> "90194313244"  [ label = "AST: "] 
  "30064771181" -> "30064771182"  [ label = "AST: "] 
  "30064771182" -> "68719476811"  [ label = "AST: "] 
  "30064771183" -> "68719476812"  [ label = "AST: "] 
  "30064771183" -> "30064771184"  [ label = "AST: "] 
  "30064771184" -> "68719476813"  [ label = "AST: "] 
  "30064771185" -> "30064771186"  [ label = "AST: "] 
  "30064771185" -> "68719476815"  [ label = "AST: "] 
  "30064771185" -> "68719476816"  [ label = "AST: "] 
  "30064771185" -> "30064771187"  [ label = "AST: "] 
  "30064771186" -> "68719476814"  [ label = "AST: "] 
  "30064771187" -> "68719476817"  [ label = "AST: "] 
  "30064771187" -> "55834574864"  [ label = "AST: "] 
  "30064771188" -> "68719476818"  [ label = "AST: "] 
  "30064771188" -> "30064771189"  [ label = "AST: "] 
  "30064771189" -> "30064771190"  [ label = "AST: "] 
  "30064771189" -> "30064771193"  [ label = "AST: "] 
  "30064771190" -> "30064771191"  [ label = "AST: "] 
  "30064771190" -> "68719476820"  [ label = "AST: "] 
  "30064771191" -> "90194313245"  [ label = "AST: "] 
  "30064771191" -> "30064771192"  [ label = "AST: "] 
  "30064771192" -> "68719476819"  [ label = "AST: "] 
  "30064771192" -> "55834574865"  [ label = "AST: "] 
  "30064771194" -> "30064771195"  [ label = "AST: "] 
  "30064771194" -> "30064771197"  [ label = "AST: "] 
  "30064771195" -> "30064771196"  [ label = "AST: "] 
  "30064771195" -> "68719476822"  [ label = "AST: "] 
  "30064771196" -> "68719476821"  [ label = "AST: "] 
  "30064771197" -> "30064771198"  [ label = "AST: "] 
  "30064771197" -> "68719476824"  [ label = "AST: "] 
  "30064771198" -> "68719476823"  [ label = "AST: "] 
  "30064771076" -> "30064771082"  [ label = "CFG: "] 
  "30064771080" -> "124554051584"  [ label = "CFG: "] 
  "30064771084" -> "184683593728"  [ label = "CFG: "] 
  "30064771086" -> "184683593729"  [ label = "CFG: "] 
  "30064771089" -> "184683593730"  [ label = "CFG: "] 
  "30064771092" -> "184683593732"  [ label = "CFG: "] 
  "30064771120" -> "30064771121"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771081" -> "30064771083"  [ label = "CFG: "] 
  "30064771083" -> "30064771080"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771096" -> "55834574854"  [ label = "CFG: "] 
  "30064771096" -> "30064771120"  [ label = "CFG: "] 
  "30064771121" -> "55834574856"  [ label = "CFG: "] 
  "30064771121" -> "55834574857"  [ label = "CFG: "] 
  "30064771134" -> "30064771136"  [ label = "CFG: "] 
  "30064771134" -> "30064771137"  [ label = "CFG: "] 
  "30064771140" -> "184683593734"  [ label = "CFG: "] 
  "30064771140" -> "55834574860"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "124554051584" -> "30064771085"  [ label = "CFG: "] 
  "184683593728" -> "55834574850"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "184683593729" -> "55834574851"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771094" -> "184683593731"  [ label = "CFG: "] 
  "30064771095" -> "30064771093"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771097" -> "30064771115"  [ label = "CFG: "] 
  "30064771114" -> "30064771096"  [ label = "CFG: "] 
  "30064771116" -> "30064771120"  [ label = "CFG: "] 
  "30064771122" -> "30064771134"  [ label = "CFG: "] 
  "30064771135" -> "55834574858"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "30064771142" -> "128849018881"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "55834574850" -> "30064771088"  [ label = "CFG: "] 
  "55834574851" -> "30064771091"  [ label = "CFG: "] 
  "184683593730" -> "30064771094"  [ label = "CFG: "] 
  "184683593731" -> "30064771095"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771098" -> "30064771113"  [ label = "CFG: "] 
  "30064771112" -> "30064771097"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771117" -> "30064771116"  [ label = "CFG: "] 
  "30064771123" -> "30064771122"  [ label = "CFG: "] 
  "30064771128" -> "30064771134"  [ label = "CFG: "] 
  "30064771136" -> "30064771135"  [ label = "CFG: "] 
  "55834574858" -> "30064771141"  [ label = "CFG: "] 
  "30064771143" -> "30064771153"  [ label = "CFG: "] 
  "30064771152" -> "30064771142"  [ label = "CFG: "] 
  "55834574849" -> "30064771079"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771099" -> "30064771111"  [ label = "CFG: "] 
  "30064771111" -> "30064771098"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771118" -> "55834574855"  [ label = "CFG: "] 
  "30064771119" -> "30064771117"  [ label = "CFG: "] 
  "30064771124" -> "30064771127"  [ label = "CFG: "] 
  "30064771127" -> "30064771123"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771137" -> "30064771139"  [ label = "CFG: "] 
  "30064771137" -> "55834574858"  [ label = "CFG: "] 
  "30064771144" -> "55834574859"  [ label = "CFG: "] 
  "30064771147" -> "30064771151"  [ label = "CFG: "] 
  "30064771151" -> "30064771143"  [ label = "CFG: "] 
  "30064771153" -> "30064771152"  [ label = "CFG: "] 
  "30064771154" -> "184683593735"  [ label = "CFG: "] 
  "30064771154" -> "55834574862"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771100" -> "184683593733"  [ label = "CFG: "] 
  "30064771108" -> "30064771099"  [ label = "CFG: "] 
  "55834574854" -> "30064771118"  [ label = "CFG: "] 
  "55834574855" -> "30064771119"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771130" -> "30064771133"  [ label = "CFG: "] 
  "30064771133" -> "30064771129"  [ label = "CFG: "] 
  "30064771138" -> "55834574858"  [ label = "CFG: "] 
  "184683593734" -> "30064771146"  [ label = "CFG: "] 
  "30064771145" -> "30064771144"  [ label = "CFG: "] 
  "30064771148" -> "30064771150"  [ label = "CFG: "] 
  "30064771150" -> "30064771147"  [ label = "CFG: "] 
  "30064771155" -> "30064771154"  [ label = "CFG: "] 
  "30064771156" -> "128849018881"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771101" -> "30064771107"  [ label = "CFG: "] 
  "30064771106" -> "30064771100"  [ label = "CFG: "] 
  "30064771109" -> "30064771108"  [ label = "CFG: "] 
  "30064771126" -> "30064771125"  [ label = "CFG: "] 
  "30064771131" -> "30064771130"  [ label = "CFG: "] 
  "30064771139" -> "30064771138"  [ label = "CFG: "] 
  "30064771146" -> "30064771145"  [ label = "CFG: "] 
  "30064771149" -> "30064771148"  [ label = "CFG: "] 
  "55834574860" -> "30064771155"  [ label = "CFG: "] 
  "30064771157" -> "30064771167"  [ label = "CFG: "] 
  "30064771166" -> "30064771156"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771102" -> "30064771105"  [ label = "CFG: "] 
  "30064771105" -> "30064771101"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "184683593733" -> "55834574853"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "55834574856" -> "30064771126"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "55834574859" -> "30064771149"  [ label = "CFG: "] 
  "30064771158" -> "55834574861"  [ label = "CFG: "] 
  "30064771161" -> "30064771165"  [ label = "CFG: "] 
  "30064771165" -> "30064771157"  [ label = "CFG: "] 
  "30064771167" -> "30064771166"  [ label = "CFG: "] 
  "30064771168" -> "128849018881"  [ label = "CFG: "] 
  "30064771168" -> "30064771171"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "55834574853" -> "30064771110"  [ label = "CFG: "] 
  "55834574857" -> "30064771132"  [ label = "CFG: "] 
  "184683593735" -> "30064771160"  [ label = "CFG: "] 
  "30064771159" -> "30064771158"  [ label = "CFG: "] 
  "30064771162" -> "30064771164"  [ label = "CFG: "] 
  "30064771164" -> "30064771161"  [ label = "CFG: "] 
  "30064771169" -> "30064771168"  [ label = "CFG: "] 
  "30064771170" -> "184683593736"  [ label = "CFG: "] 
  "30064771172" -> "30064771184"  [ label = "CFG: "] 
  "30064771183" -> "30064771186"  [ label = "CFG: "] 
  "30064771185" -> "55834574865"  [ label = "CFG: "] 
  "30064771188" -> "30064771196"  [ label = "CFG: "] 
  "30064771194" -> "128849018881"  [ label = "CFG: "] 
  "184683593732" -> "55834574852"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771160" -> "30064771159"  [ label = "CFG: "] 
  "30064771163" -> "30064771162"  [ label = "CFG: "] 
  "55834574862" -> "30064771169"  [ label = "CFG: "] 
  "30064771171" -> "30064771170"  [ label = "CFG: "] 
  "30064771173" -> "30064771182"  [ label = "CFG: "] 
  "30064771181" -> "30064771172"  [ label = "CFG: "] 
  "30064771184" -> "30064771183"  [ label = "CFG: "] 
  "30064771186" -> "55834574864"  [ label = "CFG: "] 
  "30064771187" -> "30064771185"  [ label = "CFG: "] 
  "30064771189" -> "30064771188"  [ label = "CFG: "] 
  "30064771195" -> "30064771198"  [ label = "CFG: "] 
  "30064771197" -> "30064771194"  [ label = "CFG: "] 
  "55834574852" -> "30064771104"  [ label = "CFG: "] 
  "55834574861" -> "30064771163"  [ label = "CFG: "] 
  "30064771174" -> "55834574863"  [ label = "CFG: "] 
  "30064771176" -> "30064771180"  [ label = "CFG: "] 
  "30064771180" -> "30064771173"  [ label = "CFG: "] 
  "30064771182" -> "30064771181"  [ label = "CFG: "] 
  "55834574864" -> "30064771187"  [ label = "CFG: "] 
  "30064771190" -> "30064771193"  [ label = "CFG: "] 
  "30064771193" -> "30064771189"  [ label = "CFG: "] 
  "30064771196" -> "30064771195"  [ label = "CFG: "] 
  "30064771198" -> "30064771197"  [ label = "CFG: "] 
  "184683593736" -> "30064771175"  [ label = "CFG: "] 
  "30064771175" -> "30064771174"  [ label = "CFG: "] 
  "30064771177" -> "30064771179"  [ label = "CFG: "] 
  "30064771179" -> "30064771176"  [ label = "CFG: "] 
  "30064771191" -> "30064771190"  [ label = "CFG: "] 
  "30064771178" -> "30064771177"  [ label = "CFG: "] 
  "30064771192" -> "30064771191"  [ label = "CFG: "] 
  "55834574863" -> "30064771178"  [ label = "CFG: "] 
  "55834574865" -> "30064771192"  [ label = "CFG: "] 
  "111669149698" -> "55834574849"  [ label = "CFG: "] 
  "30064771076" -> "128849018881"  [ label = "DDG: (data_type_ == DataType::DT_UINT8) ? 8 : 16"] 
  "30064771076" -> "128849018881"  [ label = "DDG: channel_bits = (data_type_ == DataType::DT_UINT8) ? 8 : 16"] 
  "30064771081" -> "128849018881"  [ label = "DDG: channel_bits"] 
  "30064771080" -> "128849018881"  [ label = "DDG: png::CommonInitDecode(input, channels_, channel_bits, &amp;decode)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: errors::InvalidArgument(&quot;Invalid PNG. Failed to initialize decoder.&quot;)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: OP_REQUIRES(
        context, png::CommonInitDecode(input, channels_, channel_bits, &amp;decode),
        errors::InvalidArgument(&quot;Invalid PNG. Failed to initialize decoder.&quot;))"] 
  "30064771084" -> "128849018881"  [ label = "DDG: cleanup"] 
  "30064771084" -> "128849018881"  [ label = "DDG: gtl::MakeCleanup([&amp;decode]() {
      std::cerr &lt;&lt; &quot;Cleanup called...\n&quot;;
      png::CommonFreeDecode(&amp;decode);
    })"] 
  "30064771084" -> "128849018881"  [ label = "DDG: cleanup = gtl::MakeCleanup([&amp;decode]() {
      std::cerr &lt;&lt; &quot;Cleanup called...\n&quot;;
      png::CommonFreeDecode(&amp;decode);
    })"] 
  "30064771086" -> "128849018881"  [ label = "DDG: static_cast&lt;int&gt;(decode.width)"] 
  "30064771086" -> "128849018881"  [ label = "DDG: width = static_cast&lt;int&gt;(decode.width)"] 
  "30064771090" -> "128849018881"  [ label = "DDG: decode.height"] 
  "30064771089" -> "128849018881"  [ label = "DDG: static_cast&lt;int&gt;(decode.height)"] 
  "30064771089" -> "128849018881"  [ label = "DDG: height = static_cast&lt;int&gt;(decode.height)"] 
  "30064771092" -> "128849018881"  [ label = "DDG: total_size"] 
  "30064771093" -> "128849018881"  [ label = "DDG: static_cast&lt;int64_t&gt;(width)"] 
  "30064771093" -> "128849018881"  [ label = "DDG: static_cast&lt;int64_t&gt;(height)"] 
  "30064771092" -> "128849018881"  [ label = "DDG: static_cast&lt;int64_t&gt;(width) * static_cast&lt;int64_t&gt;(height)"] 
  "30064771092" -> "128849018881"  [ label = "DDG: total_size =
        static_cast&lt;int64_t&gt;(width) * static_cast&lt;int64_t&gt;(height)"] 
  "30064771103" -> "128849018881"  [ label = "DDG: decode.width"] 
  "30064771102" -> "128849018881"  [ label = "DDG: static_cast&lt;int64_t&gt;(decode.width)"] 
  "30064771101" -> "128849018881"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width)"] 
  "30064771101" -> "128849018881"  [ label = "DDG: width &lt;= 0"] 
  "30064771100" -> "128849018881"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0"] 
  "30064771106" -> "128849018881"  [ label = "DDG: 1LL &lt;&lt; 27"] 
  "30064771100" -> "128849018881"  [ label = "DDG: width &gt;= (1LL &lt;&lt; 27)"] 
  "30064771099" -> "128849018881"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0 ||
        width &gt;= (1LL &lt;&lt; 27)"] 
  "30064771109" -> "128849018881"  [ label = "DDG: decode.height"] 
  "30064771108" -> "128849018881"  [ label = "DDG: static_cast&lt;int64_t&gt;(decode.height)"] 
  "30064771099" -> "128849018881"  [ label = "DDG: height != static_cast&lt;int64_t&gt;(decode.height)"] 
  "30064771098" -> "128849018881"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0 ||
        width &gt;= (1LL &lt;&lt; 27) || height != static_cast&lt;int64_t&gt;(decode.height)"] 
  "30064771098" -> "128849018881"  [ label = "DDG: height &lt;= 0"] 
  "30064771097" -> "128849018881"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0 ||
        width &gt;= (1LL &lt;&lt; 27) || height != static_cast&lt;int64_t&gt;(decode.height) ||
        height &lt;= 0"] 
  "30064771112" -> "128849018881"  [ label = "DDG: 1LL &lt;&lt; 27"] 
  "30064771097" -> "128849018881"  [ label = "DDG: height &gt;= (1LL &lt;&lt; 27)"] 
  "30064771096" -> "128849018881"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0 ||
        width &gt;= (1LL &lt;&lt; 27) || height != static_cast&lt;int64_t&gt;(decode.height) ||
        height &lt;= 0 || height &gt;= (1LL &lt;&lt; 27)"] 
  "30064771114" -> "128849018881"  [ label = "DDG: total_size"] 
  "30064771114" -> "128849018881"  [ label = "DDG: 1LL &lt;&lt; 29"] 
  "30064771096" -> "128849018881"  [ label = "DDG: total_size &gt;= (1LL &lt;&lt; 29)"] 
  "30064771096" -> "128849018881"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0 ||
        width &gt;= (1LL &lt;&lt; 27) || height != static_cast&lt;int64_t&gt;(decode.height) ||
        height &lt;= 0 || height &gt;= (1LL &lt;&lt; 27) || total_size &gt;= (1LL &lt;&lt; 29)"] 
  "30064771117" -> "128849018881"  [ label = "DDG: decode.width"] 
  "30064771117" -> "128849018881"  [ label = "DDG: decode.height"] 
  "30064771116" -> "128849018881"  [ label = "DDG: errors::InvalidArgument(&quot;PNG size too large for int: &quot;,
                                          decode.width, &quot; by &quot;, decode.height)"] 
  "30064771116" -> "128849018881"  [ label = "DDG: OP_REQUIRES(context, false,
                  errors::InvalidArgument(&quot;PNG size too large for int: &quot;,
                                          decode.width, &quot; by &quot;, decode.height))"] 
  "30064771120" -> "128849018881"  [ label = "DDG: * output = nullptr"] 
  "30064771121" -> "128849018881"  [ label = "DDG: op_type_ == &quot;DecodeGif&quot;"] 
  "30064771131" -> "128849018881"  [ label = "DDG: height"] 
  "30064771130" -> "128849018881"  [ label = "DDG: {height, width, decode.channels}"] 
  "30064771129" -> "128849018881"  [ label = "DDG: TensorShape({height, width, decode.channels})"] 
  "30064771129" -> "128849018881"  [ label = "DDG: &amp;output"] 
  "30064771128" -> "128849018881"  [ label = "DDG: context-&gt;allocate_output(
              0, TensorShape({height, width, decode.channels}), &amp;output)"] 
  "30064771128" -> "128849018881"  [ label = "DDG: OP_REQUIRES_OK(
          context,
          context-&gt;allocate_output(
              0, TensorShape({height, width, decode.channels}), &amp;output))"] 
  "30064771125" -> "128849018881"  [ label = "DDG: height"] 
  "30064771124" -> "128849018881"  [ label = "DDG: {1, height, width, decode.channels}"] 
  "30064771123" -> "128849018881"  [ label = "DDG: TensorShape({1, height, width, decode.channels})"] 
  "30064771123" -> "128849018881"  [ label = "DDG: &amp;output"] 
  "30064771122" -> "128849018881"  [ label = "DDG: context-&gt;allocate_output(
              0, TensorShape({1, height, width, decode.channels}), &amp;output)"] 
  "30064771122" -> "128849018881"  [ label = "DDG: OP_REQUIRES_OK(
          context,
          context-&gt;allocate_output(
              0, TensorShape({1, height, width, decode.channels}), &amp;output))"] 
  "30064771134" -> "128849018881"  [ label = "DDG: op_type_"] 
  "30064771134" -> "128849018881"  [ label = "DDG: op_type_ == &quot;DecodeBmp&quot;"] 
  "30064771137" -> "128849018881"  [ label = "DDG: op_type_"] 
  "30064771137" -> "128849018881"  [ label = "DDG: op_type_ == &quot;DecodeAndCropJpeg&quot;"] 
  "30064771138" -> "128849018881"  [ label = "DDG: errors::InvalidArgument(
                      &quot;DecodeAndCropJpeg operation can run on JPEG only, but &quot;
                      &quot;detected PNG.&quot;)"] 
  "30064771138" -> "128849018881"  [ label = "DDG: OP_REQUIRES(context, false,
                  errors::InvalidArgument(
                      &quot;DecodeAndCropJpeg operation can run on JPEG only, but &quot;
                      &quot;detected PNG.&quot;))"] 
  "30064771135" -> "128849018881"  [ label = "DDG: errors::InvalidArgument(
                      &quot;Trying to decode PNG format using DecodeBmp op. Use &quot;
                      &quot;`decode_png` or `decode_image` instead.&quot;)"] 
  "30064771135" -> "128849018881"  [ label = "DDG: OP_REQUIRES(context, false,
                  errors::InvalidArgument(
                      &quot;Trying to decode PNG format using DecodeBmp op. Use &quot;
                      &quot;`decode_png` or `decode_image` instead.&quot;))"] 
  "30064771140" -> "128849018881"  [ label = "DDG: data_type_"] 
  "30064771140" -> "128849018881"  [ label = "DDG: DataType::DT_UINT8"] 
  "30064771140" -> "128849018881"  [ label = "DDG: data_type_ == DataType::DT_UINT8"] 
  "30064771142" -> "128849018881"  [ label = "DDG: context"] 
  "30064771146" -> "128849018881"  [ label = "DDG: output"] 
  "30064771145" -> "128849018881"  [ label = "DDG: output-&gt;flat&lt;uint8&gt;()"] 
  "30064771144" -> "128849018881"  [ label = "DDG: output-&gt;flat&lt;uint8&gt;().data()"] 
  "30064771143" -> "128849018881"  [ label = "DDG: reinterpret_cast&lt;png_bytep&gt;(output-&gt;flat&lt;uint8&gt;().data())"] 
  "30064771148" -> "128849018881"  [ label = "DDG: decode.channels"] 
  "30064771148" -> "128849018881"  [ label = "DDG: width"] 
  "30064771147" -> "128849018881"  [ label = "DDG: decode.channels * width"] 
  "30064771143" -> "128849018881"  [ label = "DDG: decode.channels * width * sizeof(uint8)"] 
  "30064771143" -> "128849018881"  [ label = "DDG: &amp;decode"] 
  "30064771142" -> "128849018881"  [ label = "DDG: png::CommonFinishDecode(
              reinterpret_cast&lt;png_bytep&gt;(output-&gt;flat&lt;uint8&gt;().data()),
              decode.channels * width * sizeof(uint8), &amp;decode)"] 
  "30064771153" -> "128849018881"  [ label = "DDG: input"] 
  "30064771152" -> "128849018881"  [ label = "DDG: input.size()"] 
  "30064771142" -> "128849018881"  [ label = "DDG: errors::InvalidArgument(&quot;Invalid PNG data, size &quot;, input.size())"] 
  "30064771142" -> "128849018881"  [ label = "DDG: OP_REQUIRES(
          context,
          png::CommonFinishDecode(
              reinterpret_cast&lt;png_bytep&gt;(output-&gt;flat&lt;uint8&gt;().data()),
              decode.channels * width * sizeof(uint8), &amp;decode),
          errors::InvalidArgument(&quot;Invalid PNG data, size &quot;, input.size()))"] 
  "30064771150" -> "128849018881"  [ label = "DDG: uint8"] 
  "30064771081" -> "128849018881"  [ label = "DDG: channels_"] 
  "111669149698" -> "115964116992"  [ label = "DDG: "] 
  "111669149698" -> "115964116993"  [ label = "DDG: "] 
  "111669149698" -> "30064771076"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: [&amp;decode]() {
      std::cerr &lt;&lt; &quot;Cleanup called...\n&quot;;
      png::CommonFreeDecode(&amp;decode);
    }"] 
  "111669149698" -> "30064771086"  [ label = "DDG: "] 
  "111669149698" -> "30064771089"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: static_cast&lt;int64_t&gt;(width)"] 
  "30064771093" -> "30064771092"  [ label = "DDG: static_cast&lt;int64_t&gt;(height)"] 
  "111669149698" -> "30064771120"  [ label = "DDG: "] 
  "115964116992" -> "30064771080"  [ label = "DDG: context"] 
  "111669149698" -> "30064771080"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: input"] 
  "30064771081" -> "30064771080"  [ label = "DDG: channels_"] 
  "30064771081" -> "30064771080"  [ label = "DDG: channel_bits"] 
  "30064771081" -> "30064771080"  [ label = "DDG: &amp;decode"] 
  "30064771083" -> "30064771080"  [ label = "DDG: &quot;Invalid PNG. Failed to initialize decoder.&quot;"] 
  "111669149698" -> "30064771077"  [ label = "DDG: "] 
  "115964116993" -> "30064771081"  [ label = "DDG: input"] 
  "111669149698" -> "30064771081"  [ label = "DDG: "] 
  "30064771076" -> "30064771081"  [ label = "DDG: channel_bits"] 
  "111669149698" -> "30064771083"  [ label = "DDG: "] 
  "111669149698" -> "30064771085"  [ label = "DDG: "] 
  "111669149698" -> "30064771087"  [ label = "DDG: "] 
  "111669149698" -> "30064771090"  [ label = "DDG: "] 
  "30064771086" -> "30064771093"  [ label = "DDG: width"] 
  "111669149698" -> "30064771093"  [ label = "DDG: "] 
  "30064771089" -> "30064771093"  [ label = "DDG: height"] 
  "30064771097" -> "30064771096"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0 ||
        width &gt;= (1LL &lt;&lt; 27) || height != static_cast&lt;int64_t&gt;(decode.height) ||
        height &lt;= 0"] 
  "30064771097" -> "30064771096"  [ label = "DDG: height &gt;= (1LL &lt;&lt; 27)"] 
  "30064771114" -> "30064771096"  [ label = "DDG: total_size"] 
  "30064771114" -> "30064771096"  [ label = "DDG: 1LL &lt;&lt; 29"] 
  "111669149698" -> "30064771121"  [ label = "DDG: "] 
  "30064771121" -> "30064771134"  [ label = "DDG: op_type_"] 
  "111669149698" -> "30064771134"  [ label = "DDG: "] 
  "30064771078" -> "30064771140"  [ label = "DDG: data_type_"] 
  "111669149698" -> "30064771140"  [ label = "DDG: "] 
  "30064771078" -> "30064771140"  [ label = "DDG: DataType::DT_UINT8"] 
  "111669149698" -> "30064771078"  [ label = "DDG: "] 
  "30064771086" -> "30064771094"  [ label = "DDG: width"] 
  "111669149698" -> "30064771094"  [ label = "DDG: "] 
  "30064771089" -> "30064771095"  [ label = "DDG: height"] 
  "111669149698" -> "30064771095"  [ label = "DDG: "] 
  "30064771098" -> "30064771097"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0 ||
        width &gt;= (1LL &lt;&lt; 27) || height != static_cast&lt;int64_t&gt;(decode.height)"] 
  "30064771098" -> "30064771097"  [ label = "DDG: height &lt;= 0"] 
  "30064771112" -> "30064771097"  [ label = "DDG: height"] 
  "30064771112" -> "30064771097"  [ label = "DDG: 1LL &lt;&lt; 27"] 
  "30064771092" -> "30064771114"  [ label = "DDG: total_size"] 
  "111669149698" -> "30064771114"  [ label = "DDG: "] 
  "30064771115" -> "30064771114"  [ label = "DDG: 1LL"] 
  "30064771115" -> "30064771114"  [ label = "DDG: 29"] 
  "30064771080" -> "30064771116"  [ label = "DDG: context"] 
  "111669149698" -> "30064771116"  [ label = "DDG: "] 
  "30064771117" -> "30064771116"  [ label = "DDG: &quot;PNG size too large for int: &quot;"] 
  "30064771117" -> "30064771116"  [ label = "DDG: decode.width"] 
  "30064771117" -> "30064771116"  [ label = "DDG: &quot; by &quot;"] 
  "30064771117" -> "30064771116"  [ label = "DDG: decode.height"] 
  "30064771123" -> "30064771122"  [ label = "DDG: context"] 
  "111669149698" -> "30064771122"  [ label = "DDG: "] 
  "30064771123" -> "30064771122"  [ label = "DDG: 0"] 
  "30064771123" -> "30064771122"  [ label = "DDG: TensorShape({1, height, width, decode.channels})"] 
  "30064771123" -> "30064771122"  [ label = "DDG: &amp;output"] 
  "30064771128" -> "30064771135"  [ label = "DDG: context"] 
  "30064771122" -> "30064771135"  [ label = "DDG: context"] 
  "111669149698" -> "30064771135"  [ label = "DDG: "] 
  "30064771136" -> "30064771135"  [ label = "DDG: &quot;Trying to decode PNG format using DecodeBmp op. Use &quot;
                      &quot;`decode_png` or `decode_image` instead.&quot;"] 
  "30064771128" -> "30064771142"  [ label = "DDG: context"] 
  "30064771122" -> "30064771142"  [ label = "DDG: context"] 
  "30064771138" -> "30064771142"  [ label = "DDG: context"] 
  "30064771135" -> "30064771142"  [ label = "DDG: context"] 
  "111669149698" -> "30064771142"  [ label = "DDG: "] 
  "30064771143" -> "30064771142"  [ label = "DDG: reinterpret_cast&lt;png_bytep&gt;(output-&gt;flat&lt;uint8&gt;().data())"] 
  "30064771143" -> "30064771142"  [ label = "DDG: decode.channels * width * sizeof(uint8)"] 
  "30064771143" -> "30064771142"  [ label = "DDG: &amp;decode"] 
  "30064771152" -> "30064771142"  [ label = "DDG: &quot;Invalid PNG data, size &quot;"] 
  "30064771152" -> "30064771142"  [ label = "DDG: input.size()"] 
  "30064771099" -> "30064771098"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0 ||
        width &gt;= (1LL &lt;&lt; 27)"] 
  "30064771099" -> "30064771098"  [ label = "DDG: height != static_cast&lt;int64_t&gt;(decode.height)"] 
  "30064771111" -> "30064771098"  [ label = "DDG: height"] 
  "30064771111" -> "30064771098"  [ label = "DDG: 0"] 
  "30064771108" -> "30064771112"  [ label = "DDG: height"] 
  "30064771111" -> "30064771112"  [ label = "DDG: height"] 
  "111669149698" -> "30064771112"  [ label = "DDG: "] 
  "30064771089" -> "30064771112"  [ label = "DDG: height"] 
  "30064771113" -> "30064771112"  [ label = "DDG: 1LL"] 
  "30064771113" -> "30064771112"  [ label = "DDG: 27"] 
  "111669149698" -> "30064771115"  [ label = "DDG: "] 
  "111669149698" -> "30064771117"  [ label = "DDG: "] 
  "30064771080" -> "30064771123"  [ label = "DDG: context"] 
  "30064771116" -> "30064771123"  [ label = "DDG: context"] 
  "111669149698" -> "30064771123"  [ label = "DDG: "] 
  "30064771124" -> "30064771123"  [ label = "DDG: {1, height, width, decode.channels}"] 
  "30064771120" -> "30064771123"  [ label = "DDG: output"] 
  "30064771129" -> "30064771128"  [ label = "DDG: context"] 
  "111669149698" -> "30064771128"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: 0"] 
  "30064771129" -> "30064771128"  [ label = "DDG: TensorShape({height, width, decode.channels})"] 
  "30064771129" -> "30064771128"  [ label = "DDG: &amp;output"] 
  "111669149698" -> "30064771136"  [ label = "DDG: "] 
  "30064771145" -> "30064771143"  [ label = "DDG: output-&gt;flat&lt;uint8&gt;()"] 
  "30064771147" -> "30064771143"  [ label = "DDG: decode.channels * width"] 
  "30064771081" -> "30064771143"  [ label = "DDG: &amp;decode"] 
  "30064771117" -> "30064771143"  [ label = "DDG: decode.width"] 
  "30064771117" -> "30064771143"  [ label = "DDG: decode.height"] 
  "30064771148" -> "30064771143"  [ label = "DDG: decode.channels"] 
  "111669149698" -> "30064771143"  [ label = "DDG: "] 
  "111669149698" -> "30064771152"  [ label = "DDG: "] 
  "30064771153" -> "30064771152"  [ label = "DDG: input"] 
  "30064771100" -> "30064771099"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width) || width &lt;= 0"] 
  "30064771100" -> "30064771099"  [ label = "DDG: width &gt;= (1LL &lt;&lt; 27)"] 
  "30064771108" -> "30064771099"  [ label = "DDG: height"] 
  "30064771108" -> "30064771099"  [ label = "DDG: static_cast&lt;int64_t&gt;(decode.height)"] 
  "30064771108" -> "30064771111"  [ label = "DDG: height"] 
  "111669149698" -> "30064771111"  [ label = "DDG: "] 
  "30064771089" -> "30064771111"  [ label = "DDG: height"] 
  "111669149698" -> "30064771113"  [ label = "DDG: "] 
  "30064771125" -> "30064771124"  [ label = "DDG: 1"] 
  "30064771125" -> "30064771124"  [ label = "DDG: height"] 
  "30064771125" -> "30064771124"  [ label = "DDG: width"] 
  "30064771125" -> "30064771124"  [ label = "DDG: decode.channels"] 
  "30064771080" -> "30064771129"  [ label = "DDG: context"] 
  "30064771116" -> "30064771129"  [ label = "DDG: context"] 
  "111669149698" -> "30064771129"  [ label = "DDG: "] 
  "30064771130" -> "30064771129"  [ label = "DDG: {height, width, decode.channels}"] 
  "30064771120" -> "30064771129"  [ label = "DDG: output"] 
  "30064771134" -> "30064771137"  [ label = "DDG: op_type_"] 
  "111669149698" -> "30064771137"  [ label = "DDG: "] 
  "30064771145" -> "30064771144"  [ label = "DDG: output-&gt;flat&lt;uint8&gt;()"] 
  "30064771148" -> "30064771147"  [ label = "DDG: decode.channels"] 
  "30064771148" -> "30064771147"  [ label = "DDG: width"] 
  "30064771081" -> "30064771153"  [ label = "DDG: input"] 
  "111669149698" -> "30064771153"  [ label = "DDG: "] 
  "30064771140" -> "30064771154"  [ label = "DDG: data_type_"] 
  "111669149698" -> "30064771154"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: width != static_cast&lt;int64_t&gt;(decode.width)"] 
  "30064771101" -> "30064771100"  [ label = "DDG: width &lt;= 0"] 
  "30064771106" -> "30064771100"  [ label = "DDG: width"] 
  "30064771106" -> "30064771100"  [ label = "DDG: 1LL &lt;&lt; 27"] 
  "111669149698" -> "30064771108"  [ label = "DDG: "] 
  "30064771089" -> "30064771108"  [ label = "DDG: height"] 
  "111669149698" -> "30064771125"  [ label = "DDG: "] 
  "30064771108" -> "30064771125"  [ label = "DDG: height"] 
  "30064771111" -> "30064771125"  [ label = "DDG: height"] 
  "30064771112" -> "30064771125"  [ label = "DDG: height"] 
  "30064771089" -> "30064771125"  [ label = "DDG: height"] 
  "30064771102" -> "30064771125"  [ label = "DDG: width"] 
  "30064771105" -> "30064771125"  [ label = "DDG: width"] 
  "30064771106" -> "30064771125"  [ label = "DDG: width"] 
  "30064771131" -> "30064771130"  [ label = "DDG: height"] 
  "30064771131" -> "30064771130"  [ label = "DDG: width"] 
  "30064771131" -> "30064771130"  [ label = "DDG: decode.channels"] 
  "30064771128" -> "30064771138"  [ label = "DDG: context"] 
  "30064771122" -> "30064771138"  [ label = "DDG: context"] 
  "111669149698" -> "30064771138"  [ label = "DDG: "] 
  "30064771139" -> "30064771138"  [ label = "DDG: &quot;DecodeAndCropJpeg operation can run on JPEG only, but &quot;
                      &quot;detected PNG.&quot;"] 
  "30064771146" -> "30064771145"  [ label = "DDG: output"] 
  "30064771131" -> "30064771148"  [ label = "DDG: decode.channels"] 
  "30064771125" -> "30064771148"  [ label = "DDG: decode.channels"] 
  "111669149698" -> "30064771148"  [ label = "DDG: "] 
  "30064771131" -> "30064771148"  [ label = "DDG: width"] 
  "30064771125" -> "30064771148"  [ label = "DDG: width"] 
  "30064771128" -> "30064771156"  [ label = "DDG: context"] 
  "30064771122" -> "30064771156"  [ label = "DDG: context"] 
  "30064771138" -> "30064771156"  [ label = "DDG: context"] 
  "30064771135" -> "30064771156"  [ label = "DDG: context"] 
  "111669149698" -> "30064771156"  [ label = "DDG: "] 
  "30064771157" -> "30064771156"  [ label = "DDG: reinterpret_cast&lt;png_bytep&gt;(output-&gt;flat&lt;uint16&gt;().data())"] 
  "30064771157" -> "30064771156"  [ label = "DDG: decode.channels * width * sizeof(uint16)"] 
  "30064771157" -> "30064771156"  [ label = "DDG: &amp;decode"] 
  "30064771166" -> "30064771156"  [ label = "DDG: &quot;Invalid PNG data, size &quot;"] 
  "30064771166" -> "30064771156"  [ label = "DDG: input.size()"] 
  "30064771102" -> "30064771101"  [ label = "DDG: width"] 
  "30064771102" -> "30064771101"  [ label = "DDG: static_cast&lt;int64_t&gt;(decode.width)"] 
  "30064771105" -> "30064771101"  [ label = "DDG: width"] 
  "30064771105" -> "30064771101"  [ label = "DDG: 0"] 
  "30064771102" -> "30064771106"  [ label = "DDG: width"] 
  "30064771105" -> "30064771106"  [ label = "DDG: width"] 
  "111669149698" -> "30064771106"  [ label = "DDG: "] 
  "30064771107" -> "30064771106"  [ label = "DDG: 1LL"] 
  "30064771107" -> "30064771106"  [ label = "DDG: 27"] 
  "111669149698" -> "30064771109"  [ label = "DDG: "] 
  "30064771108" -> "30064771131"  [ label = "DDG: height"] 
  "30064771111" -> "30064771131"  [ label = "DDG: height"] 
  "30064771112" -> "30064771131"  [ label = "DDG: height"] 
  "111669149698" -> "30064771131"  [ label = "DDG: "] 
  "30064771089" -> "30064771131"  [ label = "DDG: height"] 
  "30064771102" -> "30064771131"  [ label = "DDG: width"] 
  "30064771105" -> "30064771131"  [ label = "DDG: width"] 
  "30064771106" -> "30064771131"  [ label = "DDG: width"] 
  "111669149698" -> "30064771139"  [ label = "DDG: "] 
  "30064771120" -> "30064771146"  [ label = "DDG: output"] 
  "30064771129" -> "30064771146"  [ label = "DDG: &amp;output"] 
  "30064771123" -> "30064771146"  [ label = "DDG: &amp;output"] 
  "111669149698" -> "30064771146"  [ label = "DDG: "] 
  "30064771159" -> "30064771157"  [ label = "DDG: output-&gt;flat&lt;uint16&gt;()"] 
  "30064771161" -> "30064771157"  [ label = "DDG: decode.channels * width"] 
  "30064771081" -> "30064771157"  [ label = "DDG: &amp;decode"] 
  "30064771117" -> "30064771157"  [ label = "DDG: decode.width"] 
  "30064771117" -> "30064771157"  [ label = "DDG: decode.height"] 
  "30064771162" -> "30064771157"  [ label = "DDG: decode.channels"] 
  "111669149698" -> "30064771157"  [ label = "DDG: "] 
  "111669149698" -> "30064771166"  [ label = "DDG: "] 
  "30064771167" -> "30064771166"  [ label = "DDG: input"] 
  "111669149698" -> "30064771102"  [ label = "DDG: "] 
  "30064771086" -> "30064771102"  [ label = "DDG: width"] 
  "30064771102" -> "30064771105"  [ label = "DDG: width"] 
  "111669149698" -> "30064771105"  [ label = "DDG: "] 
  "111669149698" -> "30064771107"  [ label = "DDG: "] 
  "30064771159" -> "30064771158"  [ label = "DDG: output-&gt;flat&lt;uint16&gt;()"] 
  "30064771162" -> "30064771161"  [ label = "DDG: decode.channels"] 
  "30064771162" -> "30064771161"  [ label = "DDG: width"] 
  "30064771081" -> "30064771167"  [ label = "DDG: input"] 
  "111669149698" -> "30064771167"  [ label = "DDG: "] 
  "30064771154" -> "30064771168"  [ label = "DDG: data_type_"] 
  "111669149698" -> "30064771168"  [ label = "DDG: "] 
  "30064771184" -> "30064771183"  [ label = "DDG: context"] 
  "30064771189" -> "30064771188"  [ label = "DDG: 1. / std::numeric_limits&lt;uint16"] 
  "30064771189" -> "30064771188"  [ label = "DDG: ::max()"] 
  "30064771197" -> "30064771194"  [ label = "DDG: buf.cast&lt;float&gt;()"] 
  "30064771197" -> "30064771194"  [ label = "DDG: scale"] 
  "111669149698" -> "30064771103"  [ label = "DDG: "] 
  "30064771160" -> "30064771159"  [ label = "DDG: output"] 
  "30064771131" -> "30064771162"  [ label = "DDG: decode.channels"] 
  "30064771125" -> "30064771162"  [ label = "DDG: decode.channels"] 
  "111669149698" -> "30064771162"  [ label = "DDG: "] 
  "30064771131" -> "30064771162"  [ label = "DDG: width"] 
  "30064771125" -> "30064771162"  [ label = "DDG: width"] 
  "30064771171" -> "30064771170"  [ label = "DDG: uint16"] 
  "30064771128" -> "30064771172"  [ label = "DDG: context"] 
  "30064771122" -> "30064771172"  [ label = "DDG: context"] 
  "30064771138" -> "30064771172"  [ label = "DDG: context"] 
  "30064771135" -> "30064771172"  [ label = "DDG: context"] 
  "111669149698" -> "30064771172"  [ label = "DDG: "] 
  "30064771173" -> "30064771172"  [ label = "DDG: reinterpret_cast&lt;png_bytep&gt;(buffer.get())"] 
  "30064771173" -> "30064771172"  [ label = "DDG: decode.channels * width * sizeof(uint16)"] 
  "30064771173" -> "30064771172"  [ label = "DDG: &amp;decode"] 
  "30064771181" -> "30064771172"  [ label = "DDG: &quot;Invalid PNG data, size &quot;"] 
  "30064771181" -> "30064771172"  [ label = "DDG: input.size()"] 
  "30064771186" -> "30064771185"  [ label = "DDG: buffer"] 
  "30064771131" -> "30064771185"  [ label = "DDG: height"] 
  "30064771125" -> "30064771185"  [ label = "DDG: height"] 
  "111669149698" -> "30064771185"  [ label = "DDG: "] 
  "30064771177" -> "30064771185"  [ label = "DDG: width"] 
  "30064771177" -> "30064771185"  [ label = "DDG: decode.channels"] 
  "30064771081" -> "30064771185"  [ label = "DDG: &amp;decode"] 
  "30064771117" -> "30064771185"  [ label = "DDG: decode.width"] 
  "30064771117" -> "30064771185"  [ label = "DDG: decode.height"] 
  "30064771120" -> "30064771160"  [ label = "DDG: output"] 
  "30064771129" -> "30064771160"  [ label = "DDG: &amp;output"] 
  "30064771123" -> "30064771160"  [ label = "DDG: &amp;output"] 
  "111669149698" -> "30064771160"  [ label = "DDG: "] 
  "111669149698" -> "30064771171"  [ label = "DDG: "] 
  "30064771175" -> "30064771173"  [ label = "DDG: buffer"] 
  "30064771176" -> "30064771173"  [ label = "DDG: decode.channels * width"] 
  "30064771081" -> "30064771173"  [ label = "DDG: &amp;decode"] 
  "30064771117" -> "30064771173"  [ label = "DDG: decode.width"] 
  "30064771117" -> "30064771173"  [ label = "DDG: decode.height"] 
  "30064771177" -> "30064771173"  [ label = "DDG: decode.channels"] 
  "111669149698" -> "30064771173"  [ label = "DDG: "] 
  "111669149698" -> "30064771181"  [ label = "DDG: "] 
  "30064771182" -> "30064771181"  [ label = "DDG: input"] 
  "30064771172" -> "30064771184"  [ label = "DDG: context"] 
  "111669149698" -> "30064771184"  [ label = "DDG: "] 
  "30064771175" -> "30064771186"  [ label = "DDG: buffer"] 
  "111669149698" -> "30064771186"  [ label = "DDG: "] 
  "30064771190" -> "30064771189"  [ label = "DDG: 1. / std::numeric_limits"] 
  "30064771190" -> "30064771189"  [ label = "DDG: uint16"] 
  "111669149698" -> "30064771189"  [ label = "DDG: "] 
  "30064771196" -> "30064771195"  [ label = "DDG: output"] 
  "30064771183" -> "30064771195"  [ label = "DDG: device"] 
  "111669149698" -> "30064771195"  [ label = "DDG: "] 
  "30064771198" -> "30064771197"  [ label = "DDG: buf"] 
  "30064771188" -> "30064771197"  [ label = "DDG: scale"] 
  "111669149698" -> "30064771197"  [ label = "DDG: "] 
  "30064771175" -> "30064771174"  [ label = "DDG: buffer"] 
  "30064771177" -> "30064771176"  [ label = "DDG: decode.channels"] 
  "30064771177" -> "30064771176"  [ label = "DDG: width"] 
  "30064771081" -> "30064771182"  [ label = "DDG: input"] 
  "111669149698" -> "30064771182"  [ label = "DDG: "] 
  "30064771191" -> "30064771190"  [ label = "DDG: 1."] 
  "30064771191" -> "30064771190"  [ label = "DDG: std::numeric_limits"] 
  "111669149698" -> "30064771190"  [ label = "DDG: "] 
  "30064771120" -> "30064771196"  [ label = "DDG: output"] 
  "30064771129" -> "30064771196"  [ label = "DDG: &amp;output"] 
  "30064771123" -> "30064771196"  [ label = "DDG: &amp;output"] 
  "111669149698" -> "30064771196"  [ label = "DDG: "] 
  "111669149698" -> "30064771198"  [ label = "DDG: "] 
  "111669149698" -> "30064771175"  [ label = "DDG: "] 
  "30064771131" -> "30064771177"  [ label = "DDG: decode.channels"] 
  "30064771125" -> "30064771177"  [ label = "DDG: decode.channels"] 
  "111669149698" -> "30064771177"  [ label = "DDG: "] 
  "30064771131" -> "30064771177"  [ label = "DDG: width"] 
  "30064771125" -> "30064771177"  [ label = "DDG: width"] 
  "111669149698" -> "30064771191"  [ label = "DDG: "] 
  "30064771096" -> "55834574855"  [ label = "CDG: "] 
  "30064771096" -> "55834574854"  [ label = "CDG: "] 
  "30064771096" -> "30064771116"  [ label = "CDG: "] 
  "30064771096" -> "30064771118"  [ label = "CDG: "] 
  "30064771096" -> "30064771117"  [ label = "CDG: "] 
  "30064771096" -> "30064771119"  [ label = "CDG: "] 
  "30064771121" -> "55834574856"  [ label = "CDG: "] 
  "30064771121" -> "55834574857"  [ label = "CDG: "] 
  "30064771121" -> "30064771130"  [ label = "CDG: "] 
  "30064771121" -> "30064771129"  [ label = "CDG: "] 
  "30064771121" -> "30064771132"  [ label = "CDG: "] 
  "30064771121" -> "30064771131"  [ label = "CDG: "] 
  "30064771121" -> "30064771126"  [ label = "CDG: "] 
  "30064771121" -> "30064771125"  [ label = "CDG: "] 
  "30064771121" -> "30064771128"  [ label = "CDG: "] 
  "30064771121" -> "30064771127"  [ label = "CDG: "] 
  "30064771121" -> "30064771122"  [ label = "CDG: "] 
  "30064771121" -> "30064771124"  [ label = "CDG: "] 
  "30064771121" -> "30064771123"  [ label = "CDG: "] 
  "30064771121" -> "30064771133"  [ label = "CDG: "] 
  "30064771134" -> "30064771137"  [ label = "CDG: "] 
  "30064771134" -> "30064771136"  [ label = "CDG: "] 
  "30064771134" -> "30064771135"  [ label = "CDG: "] 
  "30064771140" -> "55834574860"  [ label = "CDG: "] 
  "30064771140" -> "55834574859"  [ label = "CDG: "] 
  "30064771140" -> "184683593734"  [ label = "CDG: "] 
  "30064771140" -> "30064771146"  [ label = "CDG: "] 
  "30064771140" -> "30064771145"  [ label = "CDG: "] 
  "30064771140" -> "30064771148"  [ label = "CDG: "] 
  "30064771140" -> "30064771147"  [ label = "CDG: "] 
  "30064771140" -> "30064771142"  [ label = "CDG: "] 
  "30064771140" -> "30064771144"  [ label = "CDG: "] 
  "30064771140" -> "30064771143"  [ label = "CDG: "] 
  "30064771140" -> "30064771154"  [ label = "CDG: "] 
  "30064771140" -> "30064771153"  [ label = "CDG: "] 
  "30064771140" -> "30064771155"  [ label = "CDG: "] 
  "30064771140" -> "30064771150"  [ label = "CDG: "] 
  "30064771140" -> "30064771149"  [ label = "CDG: "] 
  "30064771140" -> "30064771152"  [ label = "CDG: "] 
  "30064771140" -> "30064771151"  [ label = "CDG: "] 
  "30064771097" -> "30064771114"  [ label = "CDG: "] 
  "30064771097" -> "30064771115"  [ label = "CDG: "] 
  "30064771098" -> "30064771113"  [ label = "CDG: "] 
  "30064771098" -> "30064771112"  [ label = "CDG: "] 
  "30064771099" -> "30064771111"  [ label = "CDG: "] 
  "30064771137" -> "30064771138"  [ label = "CDG: "] 
  "30064771137" -> "30064771139"  [ label = "CDG: "] 
  "30064771154" -> "55834574862"  [ label = "CDG: "] 
  "30064771154" -> "55834574861"  [ label = "CDG: "] 
  "30064771154" -> "30064771169"  [ label = "CDG: "] 
  "30064771154" -> "184683593735"  [ label = "CDG: "] 
  "30064771154" -> "30064771166"  [ label = "CDG: "] 
  "30064771154" -> "30064771165"  [ label = "CDG: "] 
  "30064771154" -> "30064771168"  [ label = "CDG: "] 
  "30064771154" -> "30064771167"  [ label = "CDG: "] 
  "30064771154" -> "30064771162"  [ label = "CDG: "] 
  "30064771154" -> "30064771161"  [ label = "CDG: "] 
  "30064771154" -> "30064771164"  [ label = "CDG: "] 
  "30064771154" -> "30064771163"  [ label = "CDG: "] 
  "30064771154" -> "30064771158"  [ label = "CDG: "] 
  "30064771154" -> "30064771157"  [ label = "CDG: "] 
  "30064771154" -> "30064771160"  [ label = "CDG: "] 
  "30064771154" -> "30064771159"  [ label = "CDG: "] 
  "30064771154" -> "30064771156"  [ label = "CDG: "] 
  "30064771100" -> "55834574853"  [ label = "CDG: "] 
  "30064771100" -> "30064771110"  [ label = "CDG: "] 
  "30064771100" -> "30064771109"  [ label = "CDG: "] 
  "30064771100" -> "30064771108"  [ label = "CDG: "] 
  "30064771100" -> "184683593733"  [ label = "CDG: "] 
  "30064771101" -> "30064771106"  [ label = "CDG: "] 
  "30064771101" -> "30064771107"  [ label = "CDG: "] 
  "30064771102" -> "30064771105"  [ label = "CDG: "] 
  "30064771168" -> "30064771198"  [ label = "CDG: "] 
  "30064771168" -> "30064771197"  [ label = "CDG: "] 
  "30064771168" -> "55834574864"  [ label = "CDG: "] 
  "30064771168" -> "55834574863"  [ label = "CDG: "] 
  "30064771168" -> "55834574865"  [ label = "CDG: "] 
  "30064771168" -> "30064771178"  [ label = "CDG: "] 
  "30064771168" -> "30064771177"  [ label = "CDG: "] 
  "30064771168" -> "30064771180"  [ label = "CDG: "] 
  "30064771168" -> "30064771179"  [ label = "CDG: "] 
  "30064771168" -> "30064771174"  [ label = "CDG: "] 
  "30064771168" -> "30064771173"  [ label = "CDG: "] 
  "30064771168" -> "30064771176"  [ label = "CDG: "] 
  "30064771168" -> "30064771175"  [ label = "CDG: "] 
  "30064771168" -> "30064771170"  [ label = "CDG: "] 
  "30064771168" -> "184683593736"  [ label = "CDG: "] 
  "30064771168" -> "30064771172"  [ label = "CDG: "] 
  "30064771168" -> "30064771171"  [ label = "CDG: "] 
  "30064771168" -> "30064771194"  [ label = "CDG: "] 
  "30064771168" -> "30064771193"  [ label = "CDG: "] 
  "30064771168" -> "30064771196"  [ label = "CDG: "] 
  "30064771168" -> "30064771195"  [ label = "CDG: "] 
  "30064771168" -> "30064771190"  [ label = "CDG: "] 
  "30064771168" -> "30064771189"  [ label = "CDG: "] 
  "30064771168" -> "30064771192"  [ label = "CDG: "] 
  "30064771168" -> "30064771191"  [ label = "CDG: "] 
  "30064771168" -> "30064771186"  [ label = "CDG: "] 
  "30064771168" -> "30064771185"  [ label = "CDG: "] 
  "30064771168" -> "30064771188"  [ label = "CDG: "] 
  "30064771168" -> "30064771187"  [ label = "CDG: "] 
  "30064771168" -> "30064771182"  [ label = "CDG: "] 
  "30064771168" -> "30064771181"  [ label = "CDG: "] 
  "30064771168" -> "30064771184"  [ label = "CDG: "] 
  "30064771168" -> "30064771183"  [ label = "CDG: "] 
}
"""
)
