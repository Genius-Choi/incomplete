[33mval[0m [36mres47[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "Create" {  
"111669149697" [label = <(METHOD,Create)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,GpuExecutor* parent)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,int max_seq_length)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,int batch_size)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,int data_size)<SUB>2</SUB>> ]
"115964116996" [label = <(PARAM,cudnnDataType_t data_type)<SUB>3</SUB>> ]
"25769803777" [label = <(BLOCK,{
    if (max_seq_length &lt;= 0) {
      return p...,{
    if (max_seq_length &lt;= 0) {
      return p...)<SUB>3</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (max_seq_length &lt;= 0))<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.lessEqualsThan,max_seq_length &lt;= 0)<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,max_seq_length,max_seq_length &lt;= 0)<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,0,max_seq_length &lt;= 0)<SUB>4</SUB>> ]
"25769803778" [label = <(BLOCK,{
      return port::Status(port::error::INVALI...,{
      return port::Status(port::error::INVALI...)<SUB>4</SUB>> ]
"146028888064" [label = <(RETURN,return port::Status(port::error::INVALID_ARGUME...,return port::Status(port::error::INVALID_ARGUME...)<SUB>5</SUB>> ]
"30064771073" [label = <(Status,port::Status(port::error::INVALID_ARGUMENT, &quot;ma...)<SUB>5</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.fieldAccess,port::error::INVALID_ARGUMENT)<SUB>5</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,port::error)<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,port,port::Status(port::error::INVALID_ARGUMENT, &quot;ma...)<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,error,port::Status(port::error::INVALID_ARGUMENT, &quot;ma...)<SUB>5</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>5</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;max_seq_length &lt;= 0&quot;,port::Status(port::error::INVALID_ARGUMENT, &quot;ma...)<SUB>5</SUB>> ]
"94489280512" [label = <(LOCAL,int[] dims: int[])<SUB>7</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,dims[] = {batch_size, data_size, 1})<SUB>7</SUB>> ]
"68719476739" [label = <(IDENTIFIER,dims,dims[] = {batch_size, data_size, 1})<SUB>7</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.arrayInitializer,{batch_size, data_size, 1})<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,batch_size,{batch_size, data_size, 1})<SUB>7</SUB>> ]
"68719476741" [label = <(IDENTIFIER,data_size,{batch_size, data_size, 1})<SUB>7</SUB>> ]
"90194313218" [label = <(LITERAL,1,{batch_size, data_size, 1})<SUB>7</SUB>> ]
"94489280513" [label = <(LOCAL,int[] strides: int[])<SUB>8</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,strides[] = {dims[1] * dims[2], dims[2], 1})<SUB>8</SUB>> ]
"68719476742" [label = <(IDENTIFIER,strides,strides[] = {dims[1] * dims[2], dims[2], 1})<SUB>8</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.arrayInitializer,{dims[1] * dims[2], dims[2], 1})<SUB>8</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.multiplication,dims[1] * dims[2])<SUB>8</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.indirectIndexAccess,dims[1])<SUB>8</SUB>> ]
"68719476743" [label = <(IDENTIFIER,dims,dims[1] * dims[2])<SUB>8</SUB>> ]
"90194313219" [label = <(LITERAL,1,dims[1] * dims[2])<SUB>8</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.indirectIndexAccess,dims[2])<SUB>8</SUB>> ]
"68719476744" [label = <(IDENTIFIER,dims,dims[1] * dims[2])<SUB>8</SUB>> ]
"90194313220" [label = <(LITERAL,2,dims[1] * dims[2])<SUB>8</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.indirectIndexAccess,dims[2])<SUB>8</SUB>> ]
"68719476745" [label = <(IDENTIFIER,dims,{dims[1] * dims[2], dims[2], 1})<SUB>8</SUB>> ]
"90194313221" [label = <(LITERAL,2,{dims[1] * dims[2], dims[2], 1})<SUB>8</SUB>> ]
"90194313222" [label = <(LITERAL,1,{dims[1] * dims[2], dims[2], 1})<SUB>8</SUB>> ]
"94489280514" [label = <(LOCAL,TensorDescriptor tensor_desc: TensorDescriptor)<SUB>9</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,tensor_desc = CreateTensorDescriptor())<SUB>9</SUB>> ]
"68719476746" [label = <(IDENTIFIER,tensor_desc,tensor_desc = CreateTensorDescriptor())<SUB>9</SUB>> ]
"30064771085" [label = <(CreateTensorDescriptor,CreateTensorDescriptor())<SUB>9</SUB>> ]
"30064771086" [label = <(RETURN_IF_CUDNN_ERROR,RETURN_IF_CUDNN_ERROR(cudnnSetTensorNdDescripto...)<SUB>10</SUB>> ]
"30064771087" [label = <(cudnnSetTensorNdDescriptor,cudnnSetTensorNdDescriptor(
        /*tensorDes...)<SUB>10</SUB>> ]
"30064771088" [label = <(get,tensor_desc.get())<SUB>11</SUB>> ]
"68719476747" [label = <(IDENTIFIER,tensor_desc,tensor_desc.get())<SUB>11</SUB>> ]
"68719476748" [label = <(IDENTIFIER,data_type,cudnnSetTensorNdDescriptor(
        /*tensorDes...)<SUB>11</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.division,sizeof(dims) / sizeof(dims[0]))<SUB>12</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.sizeOf,sizeof(dims))<SUB>12</SUB>> ]
"68719476749" [label = <(IDENTIFIER,dims,sizeof(dims))<SUB>12</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.sizeOf,sizeof(dims[0]))<SUB>12</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.indirectIndexAccess,dims[0])<SUB>12</SUB>> ]
"68719476750" [label = <(IDENTIFIER,dims,sizeof(dims[0]))<SUB>12</SUB>> ]
"90194313223" [label = <(LITERAL,0,sizeof(dims[0]))<SUB>12</SUB>> ]
"68719476751" [label = <(IDENTIFIER,dims,cudnnSetTensorNdDescriptor(
        /*tensorDes...)<SUB>12</SUB>> ]
"68719476752" [label = <(IDENTIFIER,strides,cudnnSetTensorNdDescriptor(
        /*tensorDes...)<SUB>13</SUB>> ]
"146028888065" [label = <(RETURN,return CudnnRnnSequenceTensorDescriptor(parent,...,return CudnnRnnSequenceTensorDescriptor(parent,...)<SUB>14</SUB>> ]
"30064771093" [label = <(CudnnRnnSequenceTensorDescriptor,CudnnRnnSequenceTensorDescriptor(parent, max_se...)<SUB>14</SUB>> ]
"68719476753" [label = <(IDENTIFIER,parent,CudnnRnnSequenceTensorDescriptor(parent, max_se...)<SUB>14</SUB>> ]
"68719476754" [label = <(IDENTIFIER,max_seq_length,CudnnRnnSequenceTensorDescriptor(parent, max_se...)<SUB>14</SUB>> ]
"68719476755" [label = <(IDENTIFIER,batch_size,CudnnRnnSequenceTensorDescriptor(parent, max_se...)<SUB>14</SUB>> ]
"68719476756" [label = <(IDENTIFIER,data_size,CudnnRnnSequenceTensorDescriptor(parent, max_se...)<SUB>15</SUB>> ]
"68719476757" [label = <(IDENTIFIER,data_type,CudnnRnnSequenceTensorDescriptor(parent, max_se...)<SUB>15</SUB>> ]
"90194313224" [label = <(LITERAL,nullptr,CudnnRnnSequenceTensorDescriptor(parent, max_se...)<SUB>16</SUB>> ]
"30064771094" [label = <(move,std::move(tensor_desc))<SUB>17</SUB>> ]
"68719476758" [label = <(IDENTIFIER,tensor_desc,std::move(tensor_desc))<SUB>17</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,StatusOr&lt;CudnnRnnSequenceTensorDescriptor&gt;)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "55834574848"  [ label = "AST: "] 
  "30064771075" -> "68719476737"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "30064771083"  [ label = "AST: "] 
  "30064771079" -> "90194313222"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "90194313219"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "90194313220"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "90194313221"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "30064771089"  [ label = "AST: "] 
  "30064771087" -> "68719476751"  [ label = "AST: "] 
  "30064771087" -> "68719476752"  [ label = "AST: "] 
  "30064771088" -> "68719476747"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "68719476749"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476750"  [ label = "AST: "] 
  "30064771092" -> "90194313223"  [ label = "AST: "] 
  "146028888065" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476753"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "30064771093" -> "68719476755"  [ label = "AST: "] 
  "30064771093" -> "68719476756"  [ label = "AST: "] 
  "30064771093" -> "68719476757"  [ label = "AST: "] 
  "30064771093" -> "90194313224"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476758"  [ label = "AST: "] 
  "30064771076" -> "30064771081"  [ label = "CFG: "] 
  "30064771078" -> "30064771085"  [ label = "CFG: "] 
  "30064771084" -> "30064771088"  [ label = "CFG: "] 
  "30064771086" -> "30064771094"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771072" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771093" -> "146028888065"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771083" -> "30064771079"  [ label = "CFG: "] 
  "30064771088" -> "30064771090"  [ label = "CFG: "] 
  "30064771089" -> "30064771087"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771073" -> "146028888064"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771080"  [ label = "CFG: "] 
  "30064771090" -> "30064771092"  [ label = "CFG: "] 
  "30064771091" -> "30064771089"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771075" -> "55834574848"  [ label = "CFG: "] 
  "55834574848" -> "30064771074"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: parent"] 
  "115964116994" -> "128849018880"  [ label = "DDG: batch_size"] 
  "115964116995" -> "128849018880"  [ label = "DDG: data_size"] 
  "115964116996" -> "128849018880"  [ label = "DDG: data_type"] 
  "30064771072" -> "128849018880"  [ label = "DDG: max_seq_length"] 
  "30064771072" -> "128849018880"  [ label = "DDG: max_seq_length &lt;= 0"] 
  "30064771073" -> "128849018880"  [ label = "DDG: port::error::INVALID_ARGUMENT"] 
  "30064771073" -> "128849018880"  [ label = "DDG: port::Status(port::error::INVALID_ARGUMENT, &quot;max_seq_length &lt;= 0&quot;)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: batch_size"] 
  "30064771077" -> "30064771076"  [ label = "DDG: data_size"] 
  "30064771077" -> "30064771076"  [ label = "DDG: 1"] 
  "30064771079" -> "30064771078"  [ label = "DDG: dims[1] * dims[2]"] 
  "30064771079" -> "30064771078"  [ label = "DDG: dims[2]"] 
  "30064771079" -> "30064771078"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771093" -> "146028888065"  [ label = "DDG: CudnnRnnSequenceTensorDescriptor(parent, max_seq_length, batch_size,
                                            data_size, data_type,
                                            nullptr,
                                            std::move(tensor_desc))"] 
  "30064771087" -> "30064771086"  [ label = "DDG: data_type"] 
  "30064771087" -> "30064771086"  [ label = "DDG: tensor_desc.get()"] 
  "30064771087" -> "30064771086"  [ label = "DDG: dims"] 
  "30064771087" -> "30064771086"  [ label = "DDG: sizeof(dims) / sizeof(dims[0])"] 
  "30064771087" -> "30064771086"  [ label = "DDG: strides"] 
  "115964116993" -> "30064771072"  [ label = "DDG: max_seq_length"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771073" -> "146028888064"  [ label = "DDG: port::Status(port::error::INVALID_ARGUMENT, &quot;max_seq_length &lt;= 0&quot;)"] 
  "115964116994" -> "30064771077"  [ label = "DDG: batch_size"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "115964116995" -> "30064771077"  [ label = "DDG: data_size"] 
  "30064771080" -> "30064771079"  [ label = "DDG: dims[1]"] 
  "30064771080" -> "30064771079"  [ label = "DDG: dims[2]"] 
  "30064771076" -> "30064771079"  [ label = "DDG: dims"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: tensor_desc"] 
  "115964116996" -> "30064771087"  [ label = "DDG: data_type"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771080" -> "30064771087"  [ label = "DDG: dims[1]"] 
  "30064771079" -> "30064771087"  [ label = "DDG: dims[2]"] 
  "30064771078" -> "30064771087"  [ label = "DDG: strides"] 
  "115964116992" -> "30064771093"  [ label = "DDG: parent"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771072" -> "30064771093"  [ label = "DDG: max_seq_length"] 
  "30064771077" -> "30064771093"  [ label = "DDG: batch_size"] 
  "30064771077" -> "30064771093"  [ label = "DDG: data_size"] 
  "30064771087" -> "30064771093"  [ label = "DDG: data_type"] 
  "30064771094" -> "30064771093"  [ label = "DDG: tensor_desc"] 
  "30064771076" -> "30064771080"  [ label = "DDG: dims"] 
  "30064771084" -> "30064771088"  [ label = "DDG: tensor_desc"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771088" -> "30064771094"  [ label = "DDG: tensor_desc"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771072" -> "30064771094"  [ label = "CDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
  "30064771072" -> "55834574848"  [ label = "CDG: "] 
  "30064771072" -> "146028888065"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "30064771073"  [ label = "CDG: "] 
  "30064771072" -> "30064771092"  [ label = "CDG: "] 
  "30064771072" -> "30064771093"  [ label = "CDG: "] 
  "30064771072" -> "30064771090"  [ label = "CDG: "] 
  "30064771072" -> "30064771091"  [ label = "CDG: "] 
  "30064771072" -> "30064771088"  [ label = "CDG: "] 
  "30064771072" -> "30064771089"  [ label = "CDG: "] 
  "30064771072" -> "30064771086"  [ label = "CDG: "] 
  "30064771072" -> "30064771087"  [ label = "CDG: "] 
  "30064771072" -> "30064771084"  [ label = "CDG: "] 
  "30064771072" -> "30064771085"  [ label = "CDG: "] 
  "30064771072" -> "30064771082"  [ label = "CDG: "] 
  "30064771072" -> "30064771083"  [ label = "CDG: "] 
  "30064771072" -> "30064771080"  [ label = "CDG: "] 
  "30064771072" -> "30064771081"  [ label = "CDG: "] 
  "30064771072" -> "30064771078"  [ label = "CDG: "] 
  "30064771072" -> "30064771079"  [ label = "CDG: "] 
}
"""
)
