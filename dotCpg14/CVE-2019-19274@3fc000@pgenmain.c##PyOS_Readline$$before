[33mval[0m [36mres832[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "PyOS_Readline" {  
"111669149697" [label = <(METHOD,PyOS_Readline)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,FILE *sys_stdin)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,FILE *sys_stdout)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,const char *prompt)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    size_t n = 1000;
    char *p = (char *)Py...,{
    size_t n = 1000;
    char *p = (char *)Py...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,size_t n: size_t)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,n = 1000)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,n,n = 1000)<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,1000,n = 1000)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,char* p: char*)<SUB>4</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,*p = (char *)PyMem_MALLOC(n))<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,p,*p = (char *)PyMem_MALLOC(n))<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.cast,(char *)PyMem_MALLOC(n))<SUB>4</SUB>> ]
"184683593728" [label = <(UNKNOWN,char *,char *)<SUB>4</SUB>> ]
"30064771075" [label = <(PyMem_MALLOC,PyMem_MALLOC(n))<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,n,PyMem_MALLOC(n))<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,char* q: char*)<SUB>5</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (p == NULL))<SUB>6</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.equals,p == NULL)<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,p,p == NULL)<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,NULL,p == NULL)<SUB>6</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>> ]
"146028888064" [label = <(RETURN,return NULL;,return NULL;)<SUB>7</SUB>> ]
"68719476741" [label = <(IDENTIFIER,NULL,return NULL;)<SUB>7</SUB>> ]
"30064771077" [label = <(fprintf,fprintf(stderr, &quot;%s&quot;, prompt))<SUB>8</SUB>> ]
"68719476742" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;%s&quot;, prompt))<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;%s&quot;,fprintf(stderr, &quot;%s&quot;, prompt))<SUB>8</SUB>> ]
"68719476743" [label = <(IDENTIFIER,prompt,fprintf(stderr, &quot;%s&quot;, prompt))<SUB>8</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,q = fgets(p, n, sys_stdin))<SUB>9</SUB>> ]
"68719476744" [label = <(IDENTIFIER,q,q = fgets(p, n, sys_stdin))<SUB>9</SUB>> ]
"30064771079" [label = <(fgets,fgets(p, n, sys_stdin))<SUB>9</SUB>> ]
"68719476745" [label = <(IDENTIFIER,p,fgets(p, n, sys_stdin))<SUB>9</SUB>> ]
"68719476746" [label = <(IDENTIFIER,n,fgets(p, n, sys_stdin))<SUB>9</SUB>> ]
"68719476747" [label = <(IDENTIFIER,sys_stdin,fgets(p, n, sys_stdin))<SUB>9</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (q == NULL))<SUB>10</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.equals,q == NULL)<SUB>10</SUB>> ]
"68719476748" [label = <(IDENTIFIER,q,q == NULL)<SUB>10</SUB>> ]
"68719476749" [label = <(IDENTIFIER,NULL,q == NULL)<SUB>10</SUB>> ]
"25769803779" [label = <(BLOCK,{
        *p = '\0';
        return p;
    },{
        *p = '\0';
        return p;
    })<SUB>10</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,*p = '\0')<SUB>11</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.indirection,*p)<SUB>11</SUB>> ]
"68719476750" [label = <(IDENTIFIER,p,*p = '\0')<SUB>11</SUB>> ]
"90194313218" [label = <(LITERAL,'\0',*p = '\0')<SUB>11</SUB>> ]
"146028888065" [label = <(RETURN,return p;,return p;)<SUB>12</SUB>> ]
"68719476751" [label = <(IDENTIFIER,p,return p;)<SUB>12</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,n = strlen(p))<SUB>14</SUB>> ]
"68719476752" [label = <(IDENTIFIER,n,n = strlen(p))<SUB>14</SUB>> ]
"30064771084" [label = <(strlen,strlen(p))<SUB>14</SUB>> ]
"68719476753" [label = <(IDENTIFIER,p,strlen(p))<SUB>14</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (n &gt; 0 &amp;&amp; p[n-1] != '\n'))<SUB>15</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.logicalAnd,n &gt; 0 &amp;&amp; p[n-1] != '\n')<SUB>15</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.greaterThan,n &gt; 0)<SUB>15</SUB>> ]
"68719476754" [label = <(IDENTIFIER,n,n &gt; 0)<SUB>15</SUB>> ]
"90194313219" [label = <(LITERAL,0,n &gt; 0)<SUB>15</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.notEquals,p[n-1] != '\n')<SUB>15</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.indirectIndexAccess,p[n-1])<SUB>15</SUB>> ]
"68719476755" [label = <(IDENTIFIER,p,p[n-1] != '\n')<SUB>15</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.subtraction,n-1)<SUB>15</SUB>> ]
"68719476756" [label = <(IDENTIFIER,n,n-1)<SUB>15</SUB>> ]
"90194313220" [label = <(LITERAL,1,n-1)<SUB>15</SUB>> ]
"90194313221" [label = <(LITERAL,'\n',p[n-1] != '\n')<SUB>15</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,p[n-1] = '\n')<SUB>16</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.indirectIndexAccess,p[n-1])<SUB>16</SUB>> ]
"68719476757" [label = <(IDENTIFIER,p,p[n-1] = '\n')<SUB>16</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.subtraction,n-1)<SUB>16</SUB>> ]
"68719476758" [label = <(IDENTIFIER,n,n-1)<SUB>16</SUB>> ]
"90194313222" [label = <(LITERAL,1,n-1)<SUB>16</SUB>> ]
"90194313223" [label = <(LITERAL,'\n',p[n-1] = '\n')<SUB>16</SUB>> ]
"146028888066" [label = <(RETURN,return (char *)PyMem_REALLOC(p, n+1);,return (char *)PyMem_REALLOC(p, n+1);)<SUB>17</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.cast,(char *)PyMem_REALLOC(p, n+1))<SUB>17</SUB>> ]
"184683593729" [label = <(UNKNOWN,char *,char *)<SUB>17</SUB>> ]
"30064771094" [label = <(PyMem_REALLOC,PyMem_REALLOC(p, n+1))<SUB>17</SUB>> ]
"68719476759" [label = <(IDENTIFIER,p,PyMem_REALLOC(p, n+1))<SUB>17</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.addition,n+1)<SUB>17</SUB>> ]
"68719476760" [label = <(IDENTIFIER,n,n+1)<SUB>17</SUB>> ]
"90194313224" [label = <(LITERAL,1,n+1)<SUB>17</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "146028888066"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "184683593728"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "47244640256" -> "30064771076"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "90194313217"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771079" -> "68719476746"  [ label = "AST: "] 
  "30064771079" -> "68719476747"  [ label = "AST: "] 
  "47244640257" -> "30064771080"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771080" -> "68719476748"  [ label = "AST: "] 
  "30064771080" -> "68719476749"  [ label = "AST: "] 
  "25769803779" -> "30064771081"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "30064771082" -> "68719476750"  [ label = "AST: "] 
  "146028888065" -> "68719476751"  [ label = "AST: "] 
  "30064771083" -> "68719476752"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476753"  [ label = "AST: "] 
  "47244640258" -> "30064771085"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "68719476754"  [ label = "AST: "] 
  "30064771086" -> "90194313219"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "90194313221"  [ label = "AST: "] 
  "30064771088" -> "68719476755"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476756"  [ label = "AST: "] 
  "30064771089" -> "90194313220"  [ label = "AST: "] 
  "25769803780" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "90194313223"  [ label = "AST: "] 
  "30064771091" -> "68719476757"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476758"  [ label = "AST: "] 
  "30064771092" -> "90194313222"  [ label = "AST: "] 
  "146028888066" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "184683593729"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476759"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476760"  [ label = "AST: "] 
  "30064771095" -> "90194313224"  [ label = "AST: "] 
  "30064771072" -> "184683593728"  [ label = "CFG: "] 
  "30064771073" -> "30064771076"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771086"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "146028888064"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771080" -> "30064771084"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "184683593729"  [ label = "CFG: "] 
  "30064771085" -> "30064771092"  [ label = "CFG: "] 
  "30064771093" -> "146028888066"  [ label = "CFG: "] 
  "184683593728" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771081" -> "146028888065"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771086" -> "30064771089"  [ label = "CFG: "] 
  "30064771087" -> "30064771085"  [ label = "CFG: "] 
  "30064771090" -> "184683593729"  [ label = "CFG: "] 
  "184683593729" -> "30064771095"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: sys_stdin"] 
  "115964116993" -> "128849018880"  [ label = "DDG: sys_stdout"] 
  "115964116994" -> "128849018880"  [ label = "DDG: prompt"] 
  "30064771072" -> "128849018880"  [ label = "DDG: n = 1000"] 
  "30064771075" -> "128849018880"  [ label = "DDG: n"] 
  "30064771074" -> "128849018880"  [ label = "DDG: PyMem_MALLOC(n)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: (char *)PyMem_MALLOC(n)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: *p = (char *)PyMem_MALLOC(n)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: p"] 
  "30064771076" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771076" -> "128849018880"  [ label = "DDG: p == NULL"] 
  "30064771077" -> "128849018880"  [ label = "DDG: stderr"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771075" -> "30064771073"  [ label = "DDG: n"] 
  "30064771079" -> "30064771078"  [ label = "DDG: p"] 
  "30064771079" -> "30064771078"  [ label = "DDG: n"] 
  "30064771079" -> "30064771078"  [ label = "DDG: sys_stdin"] 
  "30064771084" -> "30064771083"  [ label = "DDG: p"] 
  "30064771093" -> "146028888066"  [ label = "DDG: (char *)PyMem_REALLOC(p, n+1)"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "115964116994" -> "30064771077"  [ label = "DDG: prompt"] 
  "30064771094" -> "30064771093"  [ label = "DDG: p"] 
  "30064771094" -> "30064771093"  [ label = "DDG: n+1"] 
  "30064771075" -> "30064771074"  [ label = "DDG: n"] 
  "30064771073" -> "30064771076"  [ label = "DDG: p"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "68719476741" -> "146028888064"  [ label = "DDG: NULL"] 
  "30064771076" -> "30064771079"  [ label = "DDG: p"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771075" -> "30064771079"  [ label = "DDG: n"] 
  "115964116992" -> "30064771079"  [ label = "DDG: sys_stdin"] 
  "30064771078" -> "30064771080"  [ label = "DDG: q"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771076" -> "30064771080"  [ label = "DDG: NULL"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "68719476751" -> "146028888065"  [ label = "DDG: p"] 
  "30064771079" -> "30064771084"  [ label = "DDG: p"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: n"] 
  "30064771086" -> "30064771085"  [ label = "DDG: 0"] 
  "30064771087" -> "30064771085"  [ label = "DDG: p[n-1]"] 
  "30064771087" -> "30064771085"  [ label = "DDG: '\n'"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771072" -> "30064771075"  [ label = "DDG: n"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771076" -> "68719476741"  [ label = "DDG: NULL"] 
  "111669149697" -> "68719476741"  [ label = "DDG: "] 
  "30064771081" -> "68719476751"  [ label = "DDG: *p"] 
  "30064771079" -> "68719476751"  [ label = "DDG: p"] 
  "111669149697" -> "68719476751"  [ label = "DDG: "] 
  "30064771083" -> "30064771086"  [ label = "DDG: n"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771084" -> "30064771087"  [ label = "DDG: p"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771084" -> "30064771094"  [ label = "DDG: p"] 
  "30064771087" -> "30064771094"  [ label = "DDG: p[n-1]"] 
  "30064771090" -> "30064771094"  [ label = "DDG: p[n-1]"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771086" -> "30064771094"  [ label = "DDG: n"] 
  "30064771089" -> "30064771094"  [ label = "DDG: n"] 
  "30064771092" -> "30064771094"  [ label = "DDG: n"] 
  "30064771086" -> "30064771095"  [ label = "DDG: n"] 
  "30064771089" -> "30064771095"  [ label = "DDG: n"] 
  "30064771092" -> "30064771095"  [ label = "DDG: n"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771086" -> "30064771089"  [ label = "DDG: n"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771086" -> "30064771092"  [ label = "DDG: n"] 
  "30064771089" -> "30064771092"  [ label = "DDG: n"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771076" -> "146028888064"  [ label = "CDG: "] 
  "30064771076" -> "30064771077"  [ label = "CDG: "] 
  "30064771076" -> "30064771078"  [ label = "CDG: "] 
  "30064771076" -> "30064771079"  [ label = "CDG: "] 
  "30064771076" -> "30064771080"  [ label = "CDG: "] 
  "30064771080" -> "184683593729"  [ label = "CDG: "] 
  "30064771080" -> "146028888065"  [ label = "CDG: "] 
  "30064771080" -> "146028888066"  [ label = "CDG: "] 
  "30064771080" -> "30064771094"  [ label = "CDG: "] 
  "30064771080" -> "30064771095"  [ label = "CDG: "] 
  "30064771080" -> "30064771081"  [ label = "CDG: "] 
  "30064771080" -> "30064771082"  [ label = "CDG: "] 
  "30064771080" -> "30064771083"  [ label = "CDG: "] 
  "30064771080" -> "30064771084"  [ label = "CDG: "] 
  "30064771080" -> "30064771085"  [ label = "CDG: "] 
  "30064771080" -> "30064771086"  [ label = "CDG: "] 
  "30064771080" -> "30064771093"  [ label = "CDG: "] 
  "30064771085" -> "30064771090"  [ label = "CDG: "] 
  "30064771085" -> "30064771091"  [ label = "CDG: "] 
  "30064771085" -> "30064771092"  [ label = "CDG: "] 
  "30064771086" -> "30064771087"  [ label = "CDG: "] 
  "30064771086" -> "30064771088"  [ label = "CDG: "] 
  "30064771086" -> "30064771089"  [ label = "CDG: "] 
}
"""
)
