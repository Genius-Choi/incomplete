[33mval[0m [36mres1610[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "smm_place_entry_code" {  
"111669149697" [label = <(METHOD,smm_place_entry_code)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,uintptr_t smbase)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,unsigned int num_cpus)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,unsigned int stack_top)<SUB>2</SUB>> ]
"115964116995" [label = <(PARAM,const struct smm_loader_params *params)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
	unsigned int i;
	unsigned int size;
	if (smm...,{
	unsigned int i;
	unsigned int size;
	if (smm...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,unsigned int i: unsigned int)<SUB>4</SUB>> ]
"94489280513" [label = <(LOCAL,unsigned int size: unsigned int)<SUB>5</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (smm_create_map(smbase, num_cpus, params)))<SUB>6</SUB>> ]
"30064771072" [label = <(smm_create_map,smm_create_map(smbase, num_cpus, params))<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,smbase,smm_create_map(smbase, num_cpus, params))<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,num_cpus,smm_create_map(smbase, num_cpus, params))<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,params,smm_create_map(smbase, num_cpus, params))<SUB>6</SUB>> ]
"25769803778" [label = <(BLOCK,{
		/*
		 * Ensure there was enough space and t...,{
		/*
		 * Ensure there was enough space and t...)<SUB>6</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (cpus[num_cpus].active))<SUB>12</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.fieldAccess,cpus[num_cpus].active)<SUB>12</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[num_cpus])<SUB>12</SUB>> ]
"68719476739" [label = <(IDENTIFIER,cpus,if (cpus[num_cpus].active))<SUB>12</SUB>> ]
"68719476740" [label = <(IDENTIFIER,num_cpus,if (cpus[num_cpus].active))<SUB>12</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,active,active)<SUB>12</SUB>> ]
"25769803779" [label = <(BLOCK,{
			if (cpus[num_cpus - 1].smbase +
				params...,{
			if (cpus[num_cpus - 1].smbase +
				params...)<SUB>12</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (cpus[num_cpus - 1].smbase +
				params-&gt;smm_main_entry_offset &lt; stack_top))<SUB>13</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.lessThan,cpus[num_cpus - 1].smbase +
				params-&gt;smm_mai...)<SUB>13</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.addition,cpus[num_cpus - 1].smbase +
				params-&gt;smm_mai...)<SUB>13</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,cpus[num_cpus - 1].smbase)<SUB>13</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[num_cpus - 1])<SUB>13</SUB>> ]
"68719476741" [label = <(IDENTIFIER,cpus,cpus[num_cpus - 1].smbase +
				params-&gt;smm_mai...)<SUB>13</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.subtraction,num_cpus - 1)<SUB>13</SUB>> ]
"68719476742" [label = <(IDENTIFIER,num_cpus,num_cpus - 1)<SUB>13</SUB>> ]
"90194313216" [label = <(LITERAL,1,num_cpus - 1)<SUB>13</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,smbase,smbase)<SUB>13</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.indirectFieldAccess,params-&gt;smm_main_entry_offset)<SUB>14</SUB>> ]
"68719476743" [label = <(IDENTIFIER,params,cpus[num_cpus - 1].smbase +
				params-&gt;smm_mai...)<SUB>14</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,smm_main_entry_offset,smm_main_entry_offset)<SUB>14</SUB>> ]
"68719476744" [label = <(IDENTIFIER,stack_top,cpus[num_cpus - 1].smbase +
				params-&gt;smm_mai...)<SUB>14</SUB>> ]
"25769803780" [label = <(BLOCK,{
				printk(BIOS_ERR, &quot;%s: stack encroachment\...,{
				printk(BIOS_ERR, &quot;%s: stack encroachment\...)<SUB>14</SUB>> ]
"30064771081" [label = <(printk,printk(BIOS_ERR, &quot;%s: stack encroachment\n&quot;, __...)<SUB>15</SUB>> ]
"68719476745" [label = <(IDENTIFIER,BIOS_ERR,printk(BIOS_ERR, &quot;%s: stack encroachment\n&quot;, __...)<SUB>15</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;%s: stack encroachment\n&quot;,printk(BIOS_ERR, &quot;%s: stack encroachment\n&quot;, __...)<SUB>15</SUB>> ]
"68719476746" [label = <(IDENTIFIER,__func__,printk(BIOS_ERR, &quot;%s: stack encroachment\n&quot;, __...)<SUB>15</SUB>> ]
"30064771082" [label = <(printk,printk(BIOS_ERR, &quot;%s: smbase %zx, stack_top %x\...)<SUB>16</SUB>> ]
"68719476747" [label = <(IDENTIFIER,BIOS_ERR,printk(BIOS_ERR, &quot;%s: smbase %zx, stack_top %x\...)<SUB>16</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;%s: smbase %zx, stack_top %x\n&quot;,printk(BIOS_ERR, &quot;%s: smbase %zx, stack_top %x\...)<SUB>16</SUB>> ]
"68719476748" [label = <(IDENTIFIER,__func__,printk(BIOS_ERR, &quot;%s: smbase %zx, stack_top %x\...)<SUB>17</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.fieldAccess,cpus[num_cpus].smbase)<SUB>17</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[num_cpus])<SUB>17</SUB>> ]
"68719476749" [label = <(IDENTIFIER,cpus,printk(BIOS_ERR, &quot;%s: smbase %zx, stack_top %x\...)<SUB>17</SUB>> ]
"68719476750" [label = <(IDENTIFIER,num_cpus,printk(BIOS_ERR, &quot;%s: smbase %zx, stack_top %x\...)<SUB>17</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,smbase,smbase)<SUB>17</SUB>> ]
"68719476751" [label = <(IDENTIFIER,stack_top,printk(BIOS_ERR, &quot;%s: smbase %zx, stack_top %x\...)<SUB>17</SUB>> ]
"146028888064" [label = <(RETURN,return 0;,return 0;)<SUB>18</SUB>> ]
"90194313219" [label = <(LITERAL,0,return 0;)<SUB>18</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>21</SUB>> ]
"25769803781" [label = <(BLOCK,{
		printk(BIOS_ERR, &quot;%s: unable to place smm e...,{
		printk(BIOS_ERR, &quot;%s: unable to place smm e...)<SUB>21</SUB>> ]
"30064771085" [label = <(printk,printk(BIOS_ERR, &quot;%s: unable to place smm entry...)<SUB>22</SUB>> ]
"68719476752" [label = <(IDENTIFIER,BIOS_ERR,printk(BIOS_ERR, &quot;%s: unable to place smm entry...)<SUB>22</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;%s: unable to place smm entry code\n&quot;,printk(BIOS_ERR, &quot;%s: unable to place smm entry...)<SUB>22</SUB>> ]
"68719476753" [label = <(IDENTIFIER,__func__,printk(BIOS_ERR, &quot;%s: unable to place smm entry...)<SUB>22</SUB>> ]
"146028888065" [label = <(RETURN,return 0;,return 0;)<SUB>23</SUB>> ]
"90194313221" [label = <(LITERAL,0,return 0;)<SUB>23</SUB>> ]
"30064771086" [label = <(printk,printk(BIOS_INFO, &quot;%s: smbase %zx, stack_top %x...)<SUB>26</SUB>> ]
"68719476754" [label = <(IDENTIFIER,BIOS_INFO,printk(BIOS_INFO, &quot;%s: smbase %zx, stack_top %x...)<SUB>26</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;%s: smbase %zx, stack_top %x\n&quot;,printk(BIOS_INFO, &quot;%s: smbase %zx, stack_top %x...)<SUB>26</SUB>> ]
"68719476755" [label = <(IDENTIFIER,__func__,printk(BIOS_INFO, &quot;%s: smbase %zx, stack_top %x...)<SUB>27</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.fieldAccess,cpus[num_cpus-1].smbase)<SUB>27</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[num_cpus-1])<SUB>27</SUB>> ]
"68719476756" [label = <(IDENTIFIER,cpus,printk(BIOS_INFO, &quot;%s: smbase %zx, stack_top %x...)<SUB>27</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.subtraction,num_cpus-1)<SUB>27</SUB>> ]
"68719476757" [label = <(IDENTIFIER,num_cpus,num_cpus-1)<SUB>27</SUB>> ]
"90194313223" [label = <(LITERAL,1,num_cpus-1)<SUB>27</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,smbase,smbase)<SUB>27</SUB>> ]
"68719476758" [label = <(IDENTIFIER,stack_top,printk(BIOS_INFO, &quot;%s: smbase %zx, stack_top %x...)<SUB>27</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,size = cpus[0].code_end - cpus[0].code_start)<SUB>30</SUB>> ]
"68719476759" [label = <(IDENTIFIER,size,size = cpus[0].code_end - cpus[0].code_start)<SUB>30</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.subtraction,cpus[0].code_end - cpus[0].code_start)<SUB>30</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.fieldAccess,cpus[0].code_end)<SUB>30</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[0])<SUB>30</SUB>> ]
"68719476760" [label = <(IDENTIFIER,cpus,cpus[0].code_end - cpus[0].code_start)<SUB>30</SUB>> ]
"90194313224" [label = <(LITERAL,0,cpus[0].code_end - cpus[0].code_start)<SUB>30</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,code_end,code_end)<SUB>30</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.fieldAccess,cpus[0].code_start)<SUB>30</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[0])<SUB>30</SUB>> ]
"68719476761" [label = <(IDENTIFIER,cpus,cpus[0].code_end - cpus[0].code_start)<SUB>30</SUB>> ]
"90194313225" [label = <(LITERAL,0,cpus[0].code_end - cpus[0].code_start)<SUB>30</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,code_start,code_start)<SUB>30</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,FOR,for (i = 1;i &lt; num_cpus;i++))<SUB>31</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,i = 1)<SUB>31</SUB>> ]
"68719476762" [label = <(IDENTIFIER,i,i = 1)<SUB>31</SUB>> ]
"90194313226" [label = <(LITERAL,1,i = 1)<SUB>31</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.lessThan,i &lt; num_cpus)<SUB>31</SUB>> ]
"68719476763" [label = <(IDENTIFIER,i,i &lt; num_cpus)<SUB>31</SUB>> ]
"68719476764" [label = <(IDENTIFIER,num_cpus,i &lt; num_cpus)<SUB>31</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>31</SUB>> ]
"68719476765" [label = <(IDENTIFIER,i,i++)<SUB>31</SUB>> ]
"25769803783" [label = <(BLOCK,{
		memcpy((int *)cpus[i].code_start, (int *)cp...,{
		memcpy((int *)cpus[i].code_start, (int *)cp...)<SUB>31</SUB>> ]
"30064771099" [label = <(memcpy,memcpy((int *)cpus[i].code_start, (int *)cpus[0...)<SUB>32</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.cast,(int *)cpus[i].code_start)<SUB>32</SUB>> ]
"184683593728" [label = <(UNKNOWN,int *,int *)<SUB>32</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].code_start)<SUB>32</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>32</SUB>> ]
"68719476766" [label = <(IDENTIFIER,cpus,(int *)cpus[i].code_start)<SUB>32</SUB>> ]
"68719476767" [label = <(IDENTIFIER,i,(int *)cpus[i].code_start)<SUB>32</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,code_start,code_start)<SUB>32</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.cast,(int *)cpus[0].code_start)<SUB>32</SUB>> ]
"184683593729" [label = <(UNKNOWN,int *,int *)<SUB>32</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.fieldAccess,cpus[0].code_start)<SUB>32</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[0])<SUB>32</SUB>> ]
"68719476768" [label = <(IDENTIFIER,cpus,(int *)cpus[0].code_start)<SUB>32</SUB>> ]
"90194313227" [label = <(LITERAL,0,(int *)cpus[0].code_start)<SUB>32</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,code_start,code_start)<SUB>32</SUB>> ]
"68719476769" [label = <(IDENTIFIER,size,memcpy((int *)cpus[i].code_start, (int *)cpus[0...)<SUB>32</SUB>> ]
"30064771106" [label = <(printk,printk(BIOS_DEBUG,
			&quot;SMM Module: placing smm ...)<SUB>33</SUB>> ]
"68719476770" [label = <(IDENTIFIER,BIOS_DEBUG,printk(BIOS_DEBUG,
			&quot;SMM Module: placing smm ...)<SUB>33</SUB>> ]
"90194313228" [label = <(LITERAL,&quot;SMM Module: placing smm entry code at %zx,  cp...,printk(BIOS_DEBUG,
			&quot;SMM Module: placing smm ...)<SUB>34</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].code_start)<SUB>35</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>35</SUB>> ]
"68719476771" [label = <(IDENTIFIER,cpus,printk(BIOS_DEBUG,
			&quot;SMM Module: placing smm ...)<SUB>35</SUB>> ]
"68719476772" [label = <(IDENTIFIER,i,printk(BIOS_DEBUG,
			&quot;SMM Module: placing smm ...)<SUB>35</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,code_start,code_start)<SUB>35</SUB>> ]
"68719476773" [label = <(IDENTIFIER,i,printk(BIOS_DEBUG,
			&quot;SMM Module: placing smm ...)<SUB>35</SUB>> ]
"30064771109" [label = <(printk,printk(BIOS_DEBUG, &quot;%s: copying from %zx to %zx...)<SUB>36</SUB>> ]
"68719476774" [label = <(IDENTIFIER,BIOS_DEBUG,printk(BIOS_DEBUG, &quot;%s: copying from %zx to %zx...)<SUB>36</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;%s: copying from %zx to %zx 0x%x bytes\n&quot;,printk(BIOS_DEBUG, &quot;%s: copying from %zx to %zx...)<SUB>36</SUB>> ]
"68719476775" [label = <(IDENTIFIER,__func__,printk(BIOS_DEBUG, &quot;%s: copying from %zx to %zx...)<SUB>37</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.fieldAccess,cpus[0].code_start)<SUB>37</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[0])<SUB>37</SUB>> ]
"68719476776" [label = <(IDENTIFIER,cpus,printk(BIOS_DEBUG, &quot;%s: copying from %zx to %zx...)<SUB>37</SUB>> ]
"90194313230" [label = <(LITERAL,0,printk(BIOS_DEBUG, &quot;%s: copying from %zx to %zx...)<SUB>37</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,code_start,code_start)<SUB>37</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.fieldAccess,cpus[i].code_start)<SUB>37</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.indirectIndexAccess,cpus[i])<SUB>37</SUB>> ]
"68719476777" [label = <(IDENTIFIER,cpus,printk(BIOS_DEBUG, &quot;%s: copying from %zx to %zx...)<SUB>37</SUB>> ]
"68719476778" [label = <(IDENTIFIER,i,printk(BIOS_DEBUG, &quot;%s: copying from %zx to %zx...)<SUB>37</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,code_start,code_start)<SUB>37</SUB>> ]
"68719476779" [label = <(IDENTIFIER,size,printk(BIOS_DEBUG, &quot;%s: copying from %zx to %zx...)<SUB>37</SUB>> ]
"146028888066" [label = <(RETURN,return 1;,return 1;)<SUB>39</SUB>> ]
"90194313231" [label = <(LITERAL,1,return 1;)<SUB>39</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,int)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771086"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "146028888066"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640259"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771072" -> "68719476738"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "30064771073"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771075"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "68719476744"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "30064771080"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "55834574849"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "90194313216"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "55834574850"  [ label = "AST: "] 
  "25769803780" -> "30064771081"  [ label = "AST: "] 
  "25769803780" -> "30064771082"  [ label = "AST: "] 
  "25769803780" -> "146028888064"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "90194313217"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "30064771082" -> "90194313218"  [ label = "AST: "] 
  "30064771082" -> "68719476748"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476751"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "55834574851"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "68719476750"  [ label = "AST: "] 
  "146028888064" -> "90194313219"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771085"  [ label = "AST: "] 
  "25769803781" -> "146028888065"  [ label = "AST: "] 
  "30064771085" -> "68719476752"  [ label = "AST: "] 
  "30064771085" -> "90194313220"  [ label = "AST: "] 
  "30064771085" -> "68719476753"  [ label = "AST: "] 
  "146028888065" -> "90194313221"  [ label = "AST: "] 
  "30064771086" -> "68719476754"  [ label = "AST: "] 
  "30064771086" -> "90194313222"  [ label = "AST: "] 
  "30064771086" -> "68719476755"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "68719476758"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "55834574852"  [ label = "AST: "] 
  "30064771088" -> "68719476756"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476757"  [ label = "AST: "] 
  "30064771089" -> "90194313223"  [ label = "AST: "] 
  "30064771090" -> "68719476759"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "30064771094"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "55834574853"  [ label = "AST: "] 
  "30064771093" -> "68719476760"  [ label = "AST: "] 
  "30064771093" -> "90194313224"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "55834574854"  [ label = "AST: "] 
  "30064771095" -> "68719476761"  [ label = "AST: "] 
  "30064771095" -> "90194313225"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "47244640260" -> "30064771097"  [ label = "AST: "] 
  "47244640260" -> "30064771098"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "25769803782" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476762"  [ label = "AST: "] 
  "30064771096" -> "90194313226"  [ label = "AST: "] 
  "30064771097" -> "68719476763"  [ label = "AST: "] 
  "30064771097" -> "68719476764"  [ label = "AST: "] 
  "30064771098" -> "68719476765"  [ label = "AST: "] 
  "25769803783" -> "30064771099"  [ label = "AST: "] 
  "25769803783" -> "30064771106"  [ label = "AST: "] 
  "25769803783" -> "30064771109"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "30064771103"  [ label = "AST: "] 
  "30064771099" -> "68719476769"  [ label = "AST: "] 
  "30064771100" -> "184683593728"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "55834574855"  [ label = "AST: "] 
  "30064771102" -> "68719476766"  [ label = "AST: "] 
  "30064771102" -> "68719476767"  [ label = "AST: "] 
  "30064771103" -> "184683593729"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "55834574856"  [ label = "AST: "] 
  "30064771105" -> "68719476768"  [ label = "AST: "] 
  "30064771105" -> "90194313227"  [ label = "AST: "] 
  "30064771106" -> "68719476770"  [ label = "AST: "] 
  "30064771106" -> "90194313228"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "68719476773"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "55834574857"  [ label = "AST: "] 
  "30064771108" -> "68719476771"  [ label = "AST: "] 
  "30064771108" -> "68719476772"  [ label = "AST: "] 
  "30064771109" -> "68719476774"  [ label = "AST: "] 
  "30064771109" -> "90194313229"  [ label = "AST: "] 
  "30064771109" -> "68719476775"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771109" -> "30064771112"  [ label = "AST: "] 
  "30064771109" -> "68719476779"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771110" -> "55834574858"  [ label = "AST: "] 
  "30064771111" -> "68719476776"  [ label = "AST: "] 
  "30064771111" -> "90194313230"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771112" -> "55834574859"  [ label = "AST: "] 
  "30064771113" -> "68719476777"  [ label = "AST: "] 
  "30064771113" -> "68719476778"  [ label = "AST: "] 
  "146028888066" -> "90194313231"  [ label = "AST: "] 
  "30064771086" -> "30064771093"  [ label = "CFG: "] 
  "30064771090" -> "30064771096"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771072" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771097" -> "184683593728"  [ label = "CFG: "] 
  "30064771097" -> "146028888066"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771088" -> "55834574852"  [ label = "CFG: "] 
  "55834574852" -> "30064771087"  [ label = "CFG: "] 
  "30064771092" -> "30064771095"  [ label = "CFG: "] 
  "30064771094" -> "30064771091"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771099" -> "30064771108"  [ label = "CFG: "] 
  "30064771106" -> "30064771111"  [ label = "CFG: "] 
  "30064771109" -> "30064771098"  [ label = "CFG: "] 
  "30064771073" -> "30064771079"  [ label = "CFG: "] 
  "30064771073" -> "30064771089"  [ label = "CFG: "] 
  "30064771085" -> "146028888065"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771093" -> "55834574853"  [ label = "CFG: "] 
  "55834574853" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "55834574854"  [ label = "CFG: "] 
  "55834574854" -> "30064771094"  [ label = "CFG: "] 
  "30064771100" -> "184683593729"  [ label = "CFG: "] 
  "30064771103" -> "30064771099"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771110" -> "30064771113"  [ label = "CFG: "] 
  "30064771112" -> "30064771109"  [ label = "CFG: "] 
  "30064771074" -> "55834574848"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "184683593728" -> "30064771102"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "184683593729" -> "30064771105"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771108" -> "55834574857"  [ label = "CFG: "] 
  "55834574857" -> "30064771107"  [ label = "CFG: "] 
  "30064771111" -> "55834574858"  [ label = "CFG: "] 
  "55834574858" -> "30064771110"  [ label = "CFG: "] 
  "30064771113" -> "55834574859"  [ label = "CFG: "] 
  "55834574859" -> "30064771112"  [ label = "CFG: "] 
  "30064771075" -> "30064771081"  [ label = "CFG: "] 
  "30064771075" -> "30064771089"  [ label = "CFG: "] 
  "30064771102" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771101"  [ label = "CFG: "] 
  "30064771105" -> "55834574856"  [ label = "CFG: "] 
  "55834574856" -> "30064771104"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771081" -> "30064771084"  [ label = "CFG: "] 
  "30064771082" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771077" -> "55834574850"  [ label = "CFG: "] 
  "30064771080" -> "30064771076"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771078" -> "55834574849"  [ label = "CFG: "] 
  "55834574849" -> "30064771077"  [ label = "CFG: "] 
  "55834574850" -> "30064771080"  [ label = "CFG: "] 
  "30064771084" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771083"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: smbase"] 
  "30064771072" -> "128849018880"  [ label = "DDG: params"] 
  "30064771072" -> "128849018880"  [ label = "DDG: smm_create_map(smbase, num_cpus, params)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: num_cpus"] 
  "30064771076" -> "128849018880"  [ label = "DDG: cpus[num_cpus - 1].smbase"] 
  "30064771076" -> "128849018880"  [ label = "DDG: params-&gt;smm_main_entry_offset"] 
  "30064771075" -> "128849018880"  [ label = "DDG: cpus[num_cpus - 1].smbase +
				params-&gt;smm_main_entry_offset"] 
  "30064771075" -> "128849018880"  [ label = "DDG: cpus[num_cpus - 1].smbase +
				params-&gt;smm_main_entry_offset &lt; stack_top"] 
  "30064771081" -> "128849018880"  [ label = "DDG: printk(BIOS_ERR, &quot;%s: stack encroachment\n&quot;, __func__)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: BIOS_ERR"] 
  "30064771082" -> "128849018880"  [ label = "DDG: __func__"] 
  "30064771082" -> "128849018880"  [ label = "DDG: cpus[num_cpus].smbase"] 
  "30064771082" -> "128849018880"  [ label = "DDG: stack_top"] 
  "30064771082" -> "128849018880"  [ label = "DDG: printk(BIOS_ERR, &quot;%s: smbase %zx, stack_top %x\n&quot;,
					__func__, cpus[num_cpus].smbase, stack_top)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: BIOS_INFO"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "30064771091" -> "30064771090"  [ label = "DDG: cpus[0].code_end"] 
  "30064771091" -> "30064771090"  [ label = "DDG: cpus[0].code_start"] 
  "90194313231" -> "146028888066"  [ label = "DDG: 1"] 
  "111669149697" -> "146028888066"  [ label = "DDG: "] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "115964116994" -> "30064771086"  [ label = "DDG: stack_top"] 
  "30064771075" -> "30064771086"  [ label = "DDG: stack_top"] 
  "111669149697" -> "90194313231"  [ label = "DDG: "] 
  "115964116992" -> "30064771072"  [ label = "DDG: smbase"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "115964116993" -> "30064771072"  [ label = "DDG: num_cpus"] 
  "115964116995" -> "30064771072"  [ label = "DDG: params"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771096" -> "30064771097"  [ label = "DDG: i"] 
  "30064771098" -> "30064771097"  [ label = "DDG: i"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771089" -> "30064771097"  [ label = "DDG: num_cpus"] 
  "30064771106" -> "30064771098"  [ label = "DDG: i"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "90194313221" -> "146028888065"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "30064771091" -> "30064771099"  [ label = "DDG: cpus[0].code_start"] 
  "30064771109" -> "30064771099"  [ label = "DDG: cpus[0].code_start"] 
  "30064771090" -> "30064771099"  [ label = "DDG: size"] 
  "30064771109" -> "30064771099"  [ label = "DDG: size"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771109" -> "30064771106"  [ label = "DDG: BIOS_DEBUG"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771097" -> "30064771106"  [ label = "DDG: i"] 
  "30064771106" -> "30064771109"  [ label = "DDG: BIOS_DEBUG"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771086" -> "30064771109"  [ label = "DDG: __func__"] 
  "30064771091" -> "30064771109"  [ label = "DDG: cpus[0].code_start"] 
  "30064771106" -> "30064771109"  [ label = "DDG: cpus[i].code_start"] 
  "30064771099" -> "30064771109"  [ label = "DDG: size"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "111669149697" -> "90194313221"  [ label = "DDG: "] 
  "30064771072" -> "30064771089"  [ label = "DDG: num_cpus"] 
  "30064771079" -> "30064771089"  [ label = "DDG: num_cpus"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771091" -> "30064771103"  [ label = "DDG: cpus[0].code_start"] 
  "30064771109" -> "30064771103"  [ label = "DDG: cpus[0].code_start"] 
  "30064771072" -> "30064771075"  [ label = "DDG: params"] 
  "115964116994" -> "30064771075"  [ label = "DDG: stack_top"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "90194313219" -> "146028888064"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771072" -> "30064771076"  [ label = "DDG: params"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771081" -> "30064771082"  [ label = "DDG: BIOS_ERR"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771081" -> "30064771082"  [ label = "DDG: __func__"] 
  "30064771075" -> "30064771082"  [ label = "DDG: stack_top"] 
  "111669149697" -> "90194313219"  [ label = "DDG: "] 
  "30064771072" -> "30064771079"  [ label = "DDG: num_cpus"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771072" -> "146028888065"  [ label = "CDG: "] 
  "30064771072" -> "55834574848"  [ label = "CDG: "] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771072" -> "30064771085"  [ label = "CDG: "] 
  "30064771072" -> "30064771073"  [ label = "CDG: "] 
  "30064771097" -> "184683593728"  [ label = "CDG: "] 
  "30064771097" -> "184683593729"  [ label = "CDG: "] 
  "30064771097" -> "55834574858"  [ label = "CDG: "] 
  "30064771097" -> "55834574859"  [ label = "CDG: "] 
  "30064771097" -> "55834574856"  [ label = "CDG: "] 
  "30064771097" -> "55834574857"  [ label = "CDG: "] 
  "30064771097" -> "55834574855"  [ label = "CDG: "] 
  "30064771097" -> "30064771112"  [ label = "CDG: "] 
  "30064771097" -> "30064771113"  [ label = "CDG: "] 
  "30064771097" -> "30064771110"  [ label = "CDG: "] 
  "30064771097" -> "30064771111"  [ label = "CDG: "] 
  "30064771097" -> "30064771108"  [ label = "CDG: "] 
  "30064771097" -> "30064771109"  [ label = "CDG: "] 
  "30064771097" -> "30064771106"  [ label = "CDG: "] 
  "30064771097" -> "30064771107"  [ label = "CDG: "] 
  "30064771097" -> "30064771097"  [ label = "CDG: "] 
  "30064771097" -> "30064771104"  [ label = "CDG: "] 
  "30064771097" -> "30064771105"  [ label = "CDG: "] 
  "30064771097" -> "30064771102"  [ label = "CDG: "] 
  "30064771097" -> "30064771103"  [ label = "CDG: "] 
  "30064771097" -> "30064771100"  [ label = "CDG: "] 
  "30064771097" -> "30064771101"  [ label = "CDG: "] 
  "30064771097" -> "30064771098"  [ label = "CDG: "] 
  "30064771097" -> "30064771099"  [ label = "CDG: "] 
  "30064771073" -> "146028888066"  [ label = "CDG: "] 
  "30064771073" -> "55834574854"  [ label = "CDG: "] 
  "30064771073" -> "55834574852"  [ label = "CDG: "] 
  "30064771073" -> "55834574853"  [ label = "CDG: "] 
  "30064771073" -> "55834574850"  [ label = "CDG: "] 
  "30064771073" -> "55834574849"  [ label = "CDG: "] 
  "30064771073" -> "30064771080"  [ label = "CDG: "] 
  "30064771073" -> "30064771078"  [ label = "CDG: "] 
  "30064771073" -> "30064771079"  [ label = "CDG: "] 
  "30064771073" -> "30064771076"  [ label = "CDG: "] 
  "30064771073" -> "30064771077"  [ label = "CDG: "] 
  "30064771073" -> "30064771075"  [ label = "CDG: "] 
  "30064771073" -> "30064771088"  [ label = "CDG: "] 
  "30064771073" -> "30064771089"  [ label = "CDG: "] 
  "30064771073" -> "30064771086"  [ label = "CDG: "] 
  "30064771073" -> "30064771087"  [ label = "CDG: "] 
  "30064771073" -> "30064771096"  [ label = "CDG: "] 
  "30064771073" -> "30064771097"  [ label = "CDG: "] 
  "30064771073" -> "30064771094"  [ label = "CDG: "] 
  "30064771073" -> "30064771095"  [ label = "CDG: "] 
  "30064771073" -> "30064771092"  [ label = "CDG: "] 
  "30064771073" -> "30064771093"  [ label = "CDG: "] 
  "30064771073" -> "30064771090"  [ label = "CDG: "] 
  "30064771073" -> "30064771091"  [ label = "CDG: "] 
  "30064771075" -> "146028888066"  [ label = "CDG: "] 
  "30064771075" -> "146028888064"  [ label = "CDG: "] 
  "30064771075" -> "55834574854"  [ label = "CDG: "] 
  "30064771075" -> "55834574852"  [ label = "CDG: "] 
  "30064771075" -> "55834574853"  [ label = "CDG: "] 
  "30064771075" -> "55834574851"  [ label = "CDG: "] 
  "30064771075" -> "30064771081"  [ label = "CDG: "] 
  "30064771075" -> "30064771088"  [ label = "CDG: "] 
  "30064771075" -> "30064771089"  [ label = "CDG: "] 
  "30064771075" -> "30064771086"  [ label = "CDG: "] 
  "30064771075" -> "30064771087"  [ label = "CDG: "] 
  "30064771075" -> "30064771084"  [ label = "CDG: "] 
  "30064771075" -> "30064771082"  [ label = "CDG: "] 
  "30064771075" -> "30064771083"  [ label = "CDG: "] 
  "30064771075" -> "30064771096"  [ label = "CDG: "] 
  "30064771075" -> "30064771097"  [ label = "CDG: "] 
  "30064771075" -> "30064771094"  [ label = "CDG: "] 
  "30064771075" -> "30064771095"  [ label = "CDG: "] 
  "30064771075" -> "30064771092"  [ label = "CDG: "] 
  "30064771075" -> "30064771093"  [ label = "CDG: "] 
  "30064771075" -> "30064771090"  [ label = "CDG: "] 
  "30064771075" -> "30064771091"  [ label = "CDG: "] 
}
"""
)
