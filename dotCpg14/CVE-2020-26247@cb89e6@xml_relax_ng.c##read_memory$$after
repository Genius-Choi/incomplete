[33mval[0m [36mres1392[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "read_memory" {  
"111669149697" [label = <(METHOD,read_memory)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,int argc)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,VALUE *argv)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,VALUE klass)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
  VALUE content;
  VALUE parse_options;
  xml...,{
  VALUE content;
  VALUE parse_options;
  xml...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,VALUE content: VALUE)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,VALUE parse_options: VALUE)<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,xmlRelaxNGParserCtxtPtr ctx: xmlRelaxNGParserCtxtPtr)<SUB>5</SUB>> ]
"94489280515" [label = <(LOCAL,xmlRelaxNGPtr schema: xmlRelaxNGPtr)<SUB>6</SUB>> ]
"94489280516" [label = <(LOCAL,VALUE errors: VALUE)<SUB>7</SUB>> ]
"94489280517" [label = <(LOCAL,VALUE rb_schema: VALUE)<SUB>8</SUB>> ]
"94489280518" [label = <(LOCAL,int scanned_args: int)<SUB>9</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,scanned_args = 0)<SUB>9</SUB>> ]
"68719476736" [label = <(IDENTIFIER,scanned_args,scanned_args = 0)<SUB>9</SUB>> ]
"90194313216" [label = <(LITERAL,0,scanned_args = 0)<SUB>9</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,scanned_args = rb_scan_args(argc, argv, &quot;11&quot;, &amp;...)<SUB>11</SUB>> ]
"68719476737" [label = <(IDENTIFIER,scanned_args,scanned_args = rb_scan_args(argc, argv, &quot;11&quot;, &amp;...)<SUB>11</SUB>> ]
"30064771074" [label = <(rb_scan_args,rb_scan_args(argc, argv, &quot;11&quot;, &amp;content, &amp;parse...)<SUB>11</SUB>> ]
"68719476738" [label = <(IDENTIFIER,argc,rb_scan_args(argc, argv, &quot;11&quot;, &amp;content, &amp;parse...)<SUB>11</SUB>> ]
"68719476739" [label = <(IDENTIFIER,argv,rb_scan_args(argc, argv, &quot;11&quot;, &amp;content, &amp;parse...)<SUB>11</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;11&quot;,rb_scan_args(argc, argv, &quot;11&quot;, &amp;content, &amp;parse...)<SUB>11</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.addressOf,&amp;content)<SUB>11</SUB>> ]
"68719476740" [label = <(IDENTIFIER,content,rb_scan_args(argc, argv, &quot;11&quot;, &amp;content, &amp;parse...)<SUB>11</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.addressOf,&amp;parse_options)<SUB>11</SUB>> ]
"68719476741" [label = <(IDENTIFIER,parse_options,rb_scan_args(argc, argv, &quot;11&quot;, &amp;content, &amp;parse...)<SUB>11</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (scanned_args == 1))<SUB>12</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.equals,scanned_args == 1)<SUB>12</SUB>> ]
"68719476742" [label = <(IDENTIFIER,scanned_args,scanned_args == 1)<SUB>12</SUB>> ]
"90194313218" [label = <(LITERAL,1,scanned_args == 1)<SUB>12</SUB>> ]
"25769803778" [label = <(BLOCK,{
    parse_options = rb_const_get(rb_const_get...,{
    parse_options = rb_const_get(rb_const_get...)<SUB>12</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,parse_options = rb_const_get(rb_const_get(mNoko...)<SUB>13</SUB>> ]
"68719476743" [label = <(IDENTIFIER,parse_options,parse_options = rb_const_get(rb_const_get(mNoko...)<SUB>13</SUB>> ]
"30064771079" [label = <(rb_const_get,rb_const_get(rb_const_get(mNokogiriXml, rb_inte...)<SUB>13</SUB>> ]
"30064771080" [label = <(rb_const_get,rb_const_get(mNokogiriXml, rb_intern(&quot;ParseOpti...)<SUB>13</SUB>> ]
"68719476744" [label = <(IDENTIFIER,mNokogiriXml,rb_const_get(mNokogiriXml, rb_intern(&quot;ParseOpti...)<SUB>13</SUB>> ]
"30064771081" [label = <(rb_intern,rb_intern(&quot;ParseOptions&quot;))<SUB>13</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;ParseOptions&quot;,rb_intern(&quot;ParseOptions&quot;))<SUB>13</SUB>> ]
"30064771082" [label = <(rb_intern,rb_intern(&quot;DEFAULT_SCHEMA&quot;))<SUB>13</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;DEFAULT_SCHEMA&quot;,rb_intern(&quot;DEFAULT_SCHEMA&quot;))<SUB>13</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,ctx = xmlRelaxNGNewMemParserCtxt((const char *)...)<SUB>16</SUB>> ]
"68719476745" [label = <(IDENTIFIER,ctx,ctx = xmlRelaxNGNewMemParserCtxt((const char *)...)<SUB>16</SUB>> ]
"30064771084" [label = <(xmlRelaxNGNewMemParserCtxt,xmlRelaxNGNewMemParserCtxt((const char *)String...)<SUB>16</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.cast,(const char *)StringValuePtr(content))<SUB>16</SUB>> ]
"184683593728" [label = <(UNKNOWN,const char *,const char *)<SUB>16</SUB>> ]
"30064771086" [label = <(StringValuePtr,StringValuePtr(content))<SUB>16</SUB>> ]
"68719476746" [label = <(IDENTIFIER,content,StringValuePtr(content))<SUB>16</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.cast,(int)RSTRING_LEN(content))<SUB>16</SUB>> ]
"184683593729" [label = <(UNKNOWN,int,int)<SUB>16</SUB>> ]
"30064771088" [label = <(RSTRING_LEN,RSTRING_LEN(content))<SUB>16</SUB>> ]
"68719476747" [label = <(IDENTIFIER,content,RSTRING_LEN(content))<SUB>16</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,errors = rb_ary_new())<SUB>18</SUB>> ]
"68719476748" [label = <(IDENTIFIER,errors,errors = rb_ary_new())<SUB>18</SUB>> ]
"30064771090" [label = <(rb_ary_new,rb_ary_new())<SUB>18</SUB>> ]
"30064771091" [label = <(xmlSetStructuredErrorFunc,xmlSetStructuredErrorFunc((void *)errors, Nokog...)<SUB>19</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.cast,(void *)errors)<SUB>19</SUB>> ]
"184683593730" [label = <(UNKNOWN,void *,void *)<SUB>19</SUB>> ]
"68719476749" [label = <(IDENTIFIER,errors,(void *)errors)<SUB>19</SUB>> ]
"68719476750" [label = <(IDENTIFIER,Nokogiri_error_array_pusher,xmlSetStructuredErrorFunc((void *)errors, Nokog...)<SUB>19</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,schema = xmlRelaxNGParse(ctx))<SUB>29</SUB>> ]
"68719476751" [label = <(IDENTIFIER,schema,schema = xmlRelaxNGParse(ctx))<SUB>29</SUB>> ]
"30064771094" [label = <(xmlRelaxNGParse,xmlRelaxNGParse(ctx))<SUB>29</SUB>> ]
"68719476752" [label = <(IDENTIFIER,ctx,xmlRelaxNGParse(ctx))<SUB>29</SUB>> ]
"30064771095" [label = <(xmlSetStructuredErrorFunc,xmlSetStructuredErrorFunc(NULL, NULL))<SUB>31</SUB>> ]
"68719476753" [label = <(IDENTIFIER,NULL,xmlSetStructuredErrorFunc(NULL, NULL))<SUB>31</SUB>> ]
"68719476754" [label = <(IDENTIFIER,NULL,xmlSetStructuredErrorFunc(NULL, NULL))<SUB>31</SUB>> ]
"30064771096" [label = <(xmlRelaxNGFreeParserCtxt,xmlRelaxNGFreeParserCtxt(ctx))<SUB>32</SUB>> ]
"68719476755" [label = <(IDENTIFIER,ctx,xmlRelaxNGFreeParserCtxt(ctx))<SUB>32</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (NULL == schema))<SUB>34</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.equals,NULL == schema)<SUB>34</SUB>> ]
"68719476756" [label = <(IDENTIFIER,NULL,NULL == schema)<SUB>34</SUB>> ]
"68719476757" [label = <(IDENTIFIER,schema,NULL == schema)<SUB>34</SUB>> ]
"25769803779" [label = <(BLOCK,{
    xmlErrorPtr error = xmlGetLastError();
  ...,{
    xmlErrorPtr error = xmlGetLastError();
  ...)<SUB>34</SUB>> ]
"94489280519" [label = <(LOCAL,xmlErrorPtr error: xmlErrorPtr)<SUB>35</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,error = xmlGetLastError())<SUB>35</SUB>> ]
"68719476758" [label = <(IDENTIFIER,error,error = xmlGetLastError())<SUB>35</SUB>> ]
"30064771099" [label = <(xmlGetLastError,xmlGetLastError())<SUB>35</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (error))<SUB>36</SUB>> ]
"68719476759" [label = <(IDENTIFIER,error,if (error))<SUB>36</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>> ]
"30064771100" [label = <(Nokogiri_error_raise,Nokogiri_error_raise(NULL, error))<SUB>37</SUB>> ]
"68719476760" [label = <(IDENTIFIER,NULL,Nokogiri_error_raise(NULL, error))<SUB>37</SUB>> ]
"68719476761" [label = <(IDENTIFIER,error,Nokogiri_error_raise(NULL, error))<SUB>37</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>39</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>> ]
"30064771101" [label = <(rb_raise,rb_raise(rb_eRuntimeError, &quot;Could not parse doc...)<SUB>39</SUB>> ]
"68719476762" [label = <(IDENTIFIER,rb_eRuntimeError,rb_raise(rb_eRuntimeError, &quot;Could not parse doc...)<SUB>39</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;Could not parse document&quot;,rb_raise(rb_eRuntimeError, &quot;Could not parse doc...)<SUB>39</SUB>> ]
"146028888064" [label = <(RETURN,return Qnil;,return Qnil;)<SUB>41</SUB>> ]
"68719476763" [label = <(IDENTIFIER,Qnil,return Qnil;)<SUB>41</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,rb_schema = Data_Wrap_Struct(klass, 0, dealloc,...)<SUB>44</SUB>> ]
"68719476764" [label = <(IDENTIFIER,rb_schema,rb_schema = Data_Wrap_Struct(klass, 0, dealloc,...)<SUB>44</SUB>> ]
"30064771103" [label = <(Data_Wrap_Struct,Data_Wrap_Struct(klass, 0, dealloc, schema))<SUB>44</SUB>> ]
"68719476765" [label = <(IDENTIFIER,klass,Data_Wrap_Struct(klass, 0, dealloc, schema))<SUB>44</SUB>> ]
"90194313222" [label = <(LITERAL,0,Data_Wrap_Struct(klass, 0, dealloc, schema))<SUB>44</SUB>> ]
"68719476766" [label = <(IDENTIFIER,dealloc,Data_Wrap_Struct(klass, 0, dealloc, schema))<SUB>44</SUB>> ]
"68719476767" [label = <(IDENTIFIER,schema,Data_Wrap_Struct(klass, 0, dealloc, schema))<SUB>44</SUB>> ]
"30064771104" [label = <(rb_iv_set,rb_iv_set(rb_schema, &quot;@errors&quot;, errors))<SUB>45</SUB>> ]
"68719476768" [label = <(IDENTIFIER,rb_schema,rb_iv_set(rb_schema, &quot;@errors&quot;, errors))<SUB>45</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;@errors&quot;,rb_iv_set(rb_schema, &quot;@errors&quot;, errors))<SUB>45</SUB>> ]
"68719476769" [label = <(IDENTIFIER,errors,rb_iv_set(rb_schema, &quot;@errors&quot;, errors))<SUB>45</SUB>> ]
"30064771105" [label = <(rb_iv_set,rb_iv_set(rb_schema, &quot;@parse_options&quot;, parse_op...)<SUB>46</SUB>> ]
"68719476770" [label = <(IDENTIFIER,rb_schema,rb_iv_set(rb_schema, &quot;@parse_options&quot;, parse_op...)<SUB>46</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;@parse_options&quot;,rb_iv_set(rb_schema, &quot;@parse_options&quot;, parse_op...)<SUB>46</SUB>> ]
"68719476771" [label = <(IDENTIFIER,parse_options,rb_iv_set(rb_schema, &quot;@parse_options&quot;, parse_op...)<SUB>46</SUB>> ]
"146028888065" [label = <(RETURN,return rb_schema;,return rb_schema;)<SUB>48</SUB>> ]
"68719476772" [label = <(IDENTIFIER,rb_schema,return rb_schema;)<SUB>48</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,VALUE)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "30064771089"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "30064771102"  [ label = "AST: "] 
  "25769803777" -> "30064771104"  [ label = "AST: "] 
  "25769803777" -> "30064771105"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "47244640256" -> "30064771077"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "25769803778" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "30064771082"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "90194313219"  [ label = "AST: "] 
  "30064771082" -> "90194313220"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "30064771087"  [ label = "AST: "] 
  "30064771085" -> "184683593728"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476746"  [ label = "AST: "] 
  "30064771087" -> "184683593729"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476747"  [ label = "AST: "] 
  "30064771089" -> "68719476748"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "68719476750"  [ label = "AST: "] 
  "30064771092" -> "184683593730"  [ label = "AST: "] 
  "30064771092" -> "68719476749"  [ label = "AST: "] 
  "30064771093" -> "68719476751"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476752"  [ label = "AST: "] 
  "30064771095" -> "68719476753"  [ label = "AST: "] 
  "30064771095" -> "68719476754"  [ label = "AST: "] 
  "30064771096" -> "68719476755"  [ label = "AST: "] 
  "47244640257" -> "30064771097"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771097" -> "68719476756"  [ label = "AST: "] 
  "30064771097" -> "68719476757"  [ label = "AST: "] 
  "25769803779" -> "94489280519"  [ label = "AST: "] 
  "25769803779" -> "30064771098"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "25769803779" -> "146028888064"  [ label = "AST: "] 
  "30064771098" -> "68719476758"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "47244640258" -> "68719476759"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "25769803780" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476760"  [ label = "AST: "] 
  "30064771100" -> "68719476761"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "68719476762"  [ label = "AST: "] 
  "30064771101" -> "90194313221"  [ label = "AST: "] 
  "146028888064" -> "68719476763"  [ label = "AST: "] 
  "30064771102" -> "68719476764"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476765"  [ label = "AST: "] 
  "30064771103" -> "90194313222"  [ label = "AST: "] 
  "30064771103" -> "68719476766"  [ label = "AST: "] 
  "30064771103" -> "68719476767"  [ label = "AST: "] 
  "30064771104" -> "68719476768"  [ label = "AST: "] 
  "30064771104" -> "90194313223"  [ label = "AST: "] 
  "30064771104" -> "68719476769"  [ label = "AST: "] 
  "30064771105" -> "68719476770"  [ label = "AST: "] 
  "30064771105" -> "90194313224"  [ label = "AST: "] 
  "30064771105" -> "68719476771"  [ label = "AST: "] 
  "146028888065" -> "68719476772"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771073" -> "30064771077"  [ label = "CFG: "] 
  "30064771083" -> "30064771090"  [ label = "CFG: "] 
  "30064771089" -> "184683593730"  [ label = "CFG: "] 
  "30064771091" -> "30064771094"  [ label = "CFG: "] 
  "30064771093" -> "30064771095"  [ label = "CFG: "] 
  "30064771095" -> "30064771096"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771102" -> "30064771104"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771105" -> "146028888065"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771081"  [ label = "CFG: "] 
  "30064771077" -> "184683593728"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771097" -> "30064771099"  [ label = "CFG: "] 
  "30064771097" -> "30064771103"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771074"  [ label = "CFG: "] 
  "30064771078" -> "184683593728"  [ label = "CFG: "] 
  "30064771085" -> "184683593729"  [ label = "CFG: "] 
  "30064771087" -> "30064771084"  [ label = "CFG: "] 
  "184683593730" -> "30064771092"  [ label = "CFG: "] 
  "30064771098" -> "68719476759"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "184683593728" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "184683593729" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "68719476759" -> "30064771100"  [ label = "CFG: "] 
  "68719476759" -> "30064771101"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771079"  [ label = "CFG: "] 
  "30064771100" -> "146028888064"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771101" -> "146028888064"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116994" -> "128849018880"  [ label = "DDG: klass"] 
  "30064771072" -> "128849018880"  [ label = "DDG: scanned_args = 0"] 
  "30064771074" -> "128849018880"  [ label = "DDG: argc"] 
  "30064771074" -> "128849018880"  [ label = "DDG: argv"] 
  "30064771074" -> "128849018880"  [ label = "DDG: &amp;content"] 
  "30064771074" -> "128849018880"  [ label = "DDG: &amp;parse_options"] 
  "30064771073" -> "128849018880"  [ label = "DDG: rb_scan_args(argc, argv, &quot;11&quot;, &amp;content, &amp;parse_options)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: scanned_args = rb_scan_args(argc, argv, &quot;11&quot;, &amp;content, &amp;parse_options)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: scanned_args"] 
  "30064771077" -> "128849018880"  [ label = "DDG: scanned_args == 1"] 
  "30064771078" -> "128849018880"  [ label = "DDG: parse_options"] 
  "30064771080" -> "128849018880"  [ label = "DDG: rb_intern(&quot;ParseOptions&quot;)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: rb_const_get(mNokogiriXml, rb_intern(&quot;ParseOptions&quot;))"] 
  "30064771079" -> "128849018880"  [ label = "DDG: rb_intern(&quot;DEFAULT_SCHEMA&quot;)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: rb_const_get(rb_const_get(mNokogiriXml, rb_intern(&quot;ParseOptions&quot;)), rb_intern(&quot;DEFAULT_SCHEMA&quot;))"] 
  "30064771078" -> "128849018880"  [ label = "DDG: parse_options = rb_const_get(rb_const_get(mNokogiriXml, rb_intern(&quot;ParseOptions&quot;)), rb_intern(&quot;DEFAULT_SCHEMA&quot;))"] 
  "30064771085" -> "128849018880"  [ label = "DDG: StringValuePtr(content)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: (const char *)StringValuePtr(content)"] 
  "30064771088" -> "128849018880"  [ label = "DDG: content"] 
  "30064771087" -> "128849018880"  [ label = "DDG: RSTRING_LEN(content)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: (int)RSTRING_LEN(content)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: xmlRelaxNGNewMemParserCtxt((const char *)StringValuePtr(content), (int)RSTRING_LEN(content))"] 
  "30064771083" -> "128849018880"  [ label = "DDG: ctx = xmlRelaxNGNewMemParserCtxt((const char *)StringValuePtr(content), (int)RSTRING_LEN(content))"] 
  "30064771089" -> "128849018880"  [ label = "DDG: rb_ary_new()"] 
  "30064771089" -> "128849018880"  [ label = "DDG: errors = rb_ary_new()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: errors"] 
  "30064771091" -> "128849018880"  [ label = "DDG: (void *)errors"] 
  "30064771091" -> "128849018880"  [ label = "DDG: xmlSetStructuredErrorFunc((void *)errors, Nokogiri_error_array_pusher)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: xmlRelaxNGParse(ctx)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: schema = xmlRelaxNGParse(ctx)"] 
  "30064771095" -> "128849018880"  [ label = "DDG: xmlSetStructuredErrorFunc(NULL, NULL)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: ctx"] 
  "30064771096" -> "128849018880"  [ label = "DDG: xmlRelaxNGFreeParserCtxt(ctx)"] 
  "30064771097" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771097" -> "128849018880"  [ label = "DDG: schema"] 
  "30064771097" -> "128849018880"  [ label = "DDG: NULL == schema"] 
  "30064771098" -> "128849018880"  [ label = "DDG: error"] 
  "30064771098" -> "128849018880"  [ label = "DDG: xmlGetLastError()"] 
  "30064771098" -> "128849018880"  [ label = "DDG: error = xmlGetLastError()"] 
  "30064771101" -> "128849018880"  [ label = "DDG: rb_raise(rb_eRuntimeError, &quot;Could not parse document&quot;)"] 
  "30064771100" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771100" -> "128849018880"  [ label = "DDG: error"] 
  "30064771100" -> "128849018880"  [ label = "DDG: Nokogiri_error_raise(NULL, error)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: Nokogiri_error_array_pusher"] 
  "30064771103" -> "128849018880"  [ label = "DDG: dealloc"] 
  "30064771080" -> "128849018880"  [ label = "DDG: mNokogiriXml"] 
  "30064771101" -> "128849018880"  [ label = "DDG: rb_eRuntimeError"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: &quot;11&quot;"] 
  "30064771074" -> "30064771073"  [ label = "DDG: &amp;parse_options"] 
  "30064771074" -> "30064771073"  [ label = "DDG: &amp;content"] 
  "30064771074" -> "30064771073"  [ label = "DDG: argc"] 
  "30064771074" -> "30064771073"  [ label = "DDG: argv"] 
  "30064771084" -> "30064771083"  [ label = "DDG: (const char *)StringValuePtr(content)"] 
  "30064771084" -> "30064771083"  [ label = "DDG: (int)RSTRING_LEN(content)"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771094" -> "30064771093"  [ label = "DDG: ctx"] 
  "30064771103" -> "30064771102"  [ label = "DDG: klass"] 
  "30064771103" -> "30064771102"  [ label = "DDG: 0"] 
  "30064771103" -> "30064771102"  [ label = "DDG: dealloc"] 
  "30064771103" -> "30064771102"  [ label = "DDG: schema"] 
  "68719476772" -> "146028888065"  [ label = "DDG: rb_schema"] 
  "30064771089" -> "30064771091"  [ label = "DDG: errors"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771094" -> "30064771096"  [ label = "DDG: ctx"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771102" -> "30064771104"  [ label = "DDG: rb_schema"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771089" -> "30064771104"  [ label = "DDG: errors"] 
  "30064771104" -> "30064771105"  [ label = "DDG: rb_schema"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771074" -> "30064771105"  [ label = "DDG: &amp;parse_options"] 
  "30064771078" -> "30064771105"  [ label = "DDG: parse_options"] 
  "30064771105" -> "68719476772"  [ label = "DDG: rb_schema"] 
  "111669149697" -> "68719476772"  [ label = "DDG: "] 
  "115964116992" -> "30064771074"  [ label = "DDG: argc"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116993" -> "30064771074"  [ label = "DDG: argv"] 
  "30064771073" -> "30064771077"  [ label = "DDG: scanned_args"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: rb_const_get(mNokogiriXml, rb_intern(&quot;ParseOptions&quot;))"] 
  "30064771079" -> "30064771078"  [ label = "DDG: rb_intern(&quot;DEFAULT_SCHEMA&quot;)"] 
  "30064771086" -> "30064771084"  [ label = "DDG: content"] 
  "30064771088" -> "30064771084"  [ label = "DDG: content"] 
  "30064771089" -> "30064771092"  [ label = "DDG: errors"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771083" -> "30064771094"  [ label = "DDG: ctx"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771095" -> "30064771097"  [ label = "DDG: NULL"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771093" -> "30064771097"  [ label = "DDG: schema"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "68719476763" -> "146028888064"  [ label = "DDG: Qnil"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "115964116994" -> "30064771103"  [ label = "DDG: klass"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771097" -> "30064771103"  [ label = "DDG: schema"] 
  "30064771086" -> "30064771085"  [ label = "DDG: content"] 
  "30064771088" -> "30064771087"  [ label = "DDG: content"] 
  "111669149697" -> "68719476759"  [ label = "DDG: "] 
  "111669149697" -> "68719476763"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: mNokogiriXml"] 
  "30064771080" -> "30064771079"  [ label = "DDG: rb_intern(&quot;ParseOptions&quot;)"] 
  "30064771082" -> "30064771079"  [ label = "DDG: &quot;DEFAULT_SCHEMA&quot;"] 
  "30064771074" -> "30064771086"  [ label = "DDG: &amp;content"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771074" -> "30064771088"  [ label = "DDG: &amp;content"] 
  "30064771086" -> "30064771088"  [ label = "DDG: content"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: &quot;ParseOptions&quot;"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771097" -> "30064771100"  [ label = "DDG: NULL"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771098" -> "30064771100"  [ label = "DDG: error"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771077" -> "30064771078"  [ label = "CDG: "] 
  "30064771077" -> "30064771082"  [ label = "CDG: "] 
  "30064771077" -> "30064771081"  [ label = "CDG: "] 
  "30064771077" -> "30064771080"  [ label = "CDG: "] 
  "30064771077" -> "30064771079"  [ label = "CDG: "] 
  "30064771097" -> "68719476759"  [ label = "CDG: "] 
  "30064771097" -> "146028888065"  [ label = "CDG: "] 
  "30064771097" -> "146028888064"  [ label = "CDG: "] 
  "30064771097" -> "30064771102"  [ label = "CDG: "] 
  "30064771097" -> "30064771099"  [ label = "CDG: "] 
  "30064771097" -> "30064771105"  [ label = "CDG: "] 
  "30064771097" -> "30064771104"  [ label = "CDG: "] 
  "30064771097" -> "30064771103"  [ label = "CDG: "] 
  "30064771097" -> "30064771098"  [ label = "CDG: "] 
  "68719476759" -> "30064771101"  [ label = "CDG: "] 
  "68719476759" -> "30064771100"  [ label = "CDG: "] 
}
"""
)
