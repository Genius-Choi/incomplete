[33mval[0m [36mres2343[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_vectorizer_min_df" {  
"111669149697" [label = <(METHOD,test_vectorizer_min_df)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,test_data = [&quot;abc&quot;, &quot;dea&quot;, &quot;eat&quot;])<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,test_data,test_data = [&quot;abc&quot;, &quot;dea&quot;, &quot;eat&quot;])<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.listLiteral,[&quot;abc&quot;, &quot;dea&quot;, &quot;eat&quot;])<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;abc&quot;,[&quot;abc&quot;, &quot;dea&quot;, &quot;eat&quot;])<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;dea&quot;,[&quot;abc&quot;, &quot;dea&quot;, &quot;eat&quot;])<SUB>2</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;eat&quot;,[&quot;abc&quot;, &quot;dea&quot;, &quot;eat&quot;])<SUB>2</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,vect = CountVectorizer(analyzer = &quot;char&quot;, min_d...)<SUB>3</SUB>> ]
"68719476740" [label = <(IDENTIFIER,vect,vect = CountVectorizer(analyzer = &quot;char&quot;, min_d...)<SUB>3</SUB>> ]
"30064771075" [label = <(CountVectorizer,CountVectorizer(analyzer = &quot;char&quot;, min_df = 1))<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,CountVectorizer,CountVectorizer(analyzer = &quot;char&quot;, min_df = 1))<SUB>3</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;char&quot;,CountVectorizer(analyzer = &quot;char&quot;, min_df = 1))<SUB>3</SUB>> ]
"90194313220" [label = <(LITERAL,1,CountVectorizer(analyzer = &quot;char&quot;, min_df = 1))<SUB>3</SUB>> ]
"30064771078" [label = <(fit,vect.fit(test_data))<SUB>4</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,vect.fit)<SUB>4</SUB>> ]
"68719476742" [label = <(IDENTIFIER,vect,vect.fit(test_data))<SUB>4</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,fit,fit)<SUB>4</SUB>> ]
"68719476743" [label = <(IDENTIFIER,vect,vect.fit(test_data))<SUB>4</SUB>> ]
"68719476741" [label = <(IDENTIFIER,test_data,vect.fit(test_data))<SUB>4</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assert,assert &quot;a&quot; in tmp0 = vect.vocabulary_
tmp0.keys())<SUB>5</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.in,&quot;a&quot; in tmp0 = vect.vocabulary_
tmp0.keys())<SUB>5</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;a&quot;,&quot;a&quot; in tmp0 = vect.vocabulary_
tmp0.keys())<SUB>5</SUB>> ]
"25769803778" [label = <(BLOCK,tmp0 = vect.vocabulary_
tmp0.keys(),tmp0 = vect.vocabulary_
tmp0.keys())<SUB>5</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,tmp0 = vect.vocabulary_)<SUB>5</SUB>> ]
"68719476745" [label = <(IDENTIFIER,tmp0,tmp0 = vect.vocabulary_)<SUB>5</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,vect.vocabulary_)<SUB>5</SUB>> ]
"68719476744" [label = <(IDENTIFIER,vect,tmp0 = vect.vocabulary_)<SUB>5</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,vocabulary_,vocabulary_)<SUB>5</SUB>> ]
"30064771082" [label = <(keys,tmp0.keys())<SUB>5</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,tmp0.keys)<SUB>5</SUB>> ]
"68719476746" [label = <(IDENTIFIER,tmp0,tmp0.keys())<SUB>5</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,keys,keys)<SUB>5</SUB>> ]
"68719476747" [label = <(IDENTIFIER,tmp0,tmp0.keys())<SUB>5</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assert,assert len(tmp1 = vect.vocabulary_
tmp1.keys())...)<SUB>6</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.equals,len(tmp1 = vect.vocabulary_
tmp1.keys()) == 6)<SUB>6</SUB>> ]
"30064771089" [label = <(len,len(tmp1 = vect.vocabulary_
tmp1.keys()))<SUB>6</SUB>> ]
"68719476752" [label = <(IDENTIFIER,len,len(tmp1 = vect.vocabulary_
tmp1.keys()))<SUB>6</SUB>> ]
"25769803779" [label = <(BLOCK,tmp1 = vect.vocabulary_
tmp1.keys(),tmp1 = vect.vocabulary_
tmp1.keys())<SUB>6</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,tmp1 = vect.vocabulary_)<SUB>6</SUB>> ]
"68719476749" [label = <(IDENTIFIER,tmp1,tmp1 = vect.vocabulary_)<SUB>6</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.fieldAccess,vect.vocabulary_)<SUB>6</SUB>> ]
"68719476748" [label = <(IDENTIFIER,vect,tmp1 = vect.vocabulary_)<SUB>6</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,vocabulary_,vocabulary_)<SUB>6</SUB>> ]
"30064771088" [label = <(keys,tmp1.keys())<SUB>6</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.fieldAccess,tmp1.keys)<SUB>6</SUB>> ]
"68719476750" [label = <(IDENTIFIER,tmp1,tmp1.keys())<SUB>6</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,keys,keys)<SUB>6</SUB>> ]
"68719476751" [label = <(IDENTIFIER,tmp1,tmp1.keys())<SUB>6</SUB>> ]
"90194313222" [label = <(LITERAL,6,len(tmp1 = vect.vocabulary_
tmp1.keys()) == 6)<SUB>6</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assert,assert len(vect.stop_words_) == 0)<SUB>7</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.equals,len(vect.stop_words_) == 0)<SUB>7</SUB>> ]
"30064771093" [label = <(len,len(vect.stop_words_))<SUB>7</SUB>> ]
"68719476754" [label = <(IDENTIFIER,len,len(vect.stop_words_))<SUB>7</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.fieldAccess,vect.stop_words_)<SUB>7</SUB>> ]
"68719476753" [label = <(IDENTIFIER,vect,len(vect.stop_words_))<SUB>7</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,stop_words_,stop_words_)<SUB>7</SUB>> ]
"90194313223" [label = <(LITERAL,0,len(vect.stop_words_) == 0)<SUB>7</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,vect.min_df = 2)<SUB>9</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.fieldAccess,vect.min_df)<SUB>9</SUB>> ]
"68719476755" [label = <(IDENTIFIER,vect,vect.min_df = 2)<SUB>9</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,min_df,min_df)<SUB>9</SUB>> ]
"90194313224" [label = <(LITERAL,2,vect.min_df = 2)<SUB>9</SUB>> ]
"30064771099" [label = <(fit,vect.fit(test_data))<SUB>10</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.fieldAccess,vect.fit)<SUB>10</SUB>> ]
"68719476757" [label = <(IDENTIFIER,vect,vect.fit(test_data))<SUB>10</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,fit,fit)<SUB>10</SUB>> ]
"68719476758" [label = <(IDENTIFIER,vect,vect.fit(test_data))<SUB>10</SUB>> ]
"68719476756" [label = <(IDENTIFIER,test_data,vect.fit(test_data))<SUB>10</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.assert,assert &quot;c&quot; not in tmp2 = vect.vocabulary_
tmp2....)<SUB>11</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.notIn,&quot;c&quot; not in tmp2 = vect.vocabulary_
tmp2.keys())<SUB>11</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;c&quot;,&quot;c&quot; not in tmp2 = vect.vocabulary_
tmp2.keys())<SUB>11</SUB>> ]
"25769803780" [label = <(BLOCK,tmp2 = vect.vocabulary_
tmp2.keys(),tmp2 = vect.vocabulary_
tmp2.keys())<SUB>11</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.assignment,tmp2 = vect.vocabulary_)<SUB>11</SUB>> ]
"68719476760" [label = <(IDENTIFIER,tmp2,tmp2 = vect.vocabulary_)<SUB>11</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.fieldAccess,vect.vocabulary_)<SUB>11</SUB>> ]
"68719476759" [label = <(IDENTIFIER,vect,tmp2 = vect.vocabulary_)<SUB>11</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,vocabulary_,vocabulary_)<SUB>11</SUB>> ]
"30064771103" [label = <(keys,tmp2.keys())<SUB>11</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.fieldAccess,tmp2.keys)<SUB>11</SUB>> ]
"68719476761" [label = <(IDENTIFIER,tmp2,tmp2.keys())<SUB>11</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,keys,keys)<SUB>11</SUB>> ]
"68719476762" [label = <(IDENTIFIER,tmp2,tmp2.keys())<SUB>11</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.assert,assert len(tmp3 = vect.vocabulary_
tmp3.keys())...)<SUB>12</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.equals,len(tmp3 = vect.vocabulary_
tmp3.keys()) == 2)<SUB>12</SUB>> ]
"30064771110" [label = <(len,len(tmp3 = vect.vocabulary_
tmp3.keys()))<SUB>12</SUB>> ]
"68719476767" [label = <(IDENTIFIER,len,len(tmp3 = vect.vocabulary_
tmp3.keys()))<SUB>12</SUB>> ]
"25769803781" [label = <(BLOCK,tmp3 = vect.vocabulary_
tmp3.keys(),tmp3 = vect.vocabulary_
tmp3.keys())<SUB>12</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.assignment,tmp3 = vect.vocabulary_)<SUB>12</SUB>> ]
"68719476764" [label = <(IDENTIFIER,tmp3,tmp3 = vect.vocabulary_)<SUB>12</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.fieldAccess,vect.vocabulary_)<SUB>12</SUB>> ]
"68719476763" [label = <(IDENTIFIER,vect,tmp3 = vect.vocabulary_)<SUB>12</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,vocabulary_,vocabulary_)<SUB>12</SUB>> ]
"30064771109" [label = <(keys,tmp3.keys())<SUB>12</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.fieldAccess,tmp3.keys)<SUB>12</SUB>> ]
"68719476765" [label = <(IDENTIFIER,tmp3,tmp3.keys())<SUB>12</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,keys,keys)<SUB>12</SUB>> ]
"68719476766" [label = <(IDENTIFIER,tmp3,tmp3.keys())<SUB>12</SUB>> ]
"90194313226" [label = <(LITERAL,2,len(tmp3 = vect.vocabulary_
tmp3.keys()) == 2)<SUB>12</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.assert,assert &quot;c&quot; in vect.stop_words_)<SUB>13</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.in,&quot;c&quot; in vect.stop_words_)<SUB>13</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;c&quot;,&quot;c&quot; in vect.stop_words_)<SUB>13</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.fieldAccess,vect.stop_words_)<SUB>13</SUB>> ]
"68719476768" [label = <(IDENTIFIER,vect,&quot;c&quot; in vect.stop_words_)<SUB>13</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,stop_words_,stop_words_)<SUB>13</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.assert,assert len(vect.stop_words_) == 4)<SUB>14</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.equals,len(vect.stop_words_) == 4)<SUB>14</SUB>> ]
"30064771117" [label = <(len,len(vect.stop_words_))<SUB>14</SUB>> ]
"68719476770" [label = <(IDENTIFIER,len,len(vect.stop_words_))<SUB>14</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.fieldAccess,vect.stop_words_)<SUB>14</SUB>> ]
"68719476769" [label = <(IDENTIFIER,vect,len(vect.stop_words_))<SUB>14</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,stop_words_,stop_words_)<SUB>14</SUB>> ]
"90194313228" [label = <(LITERAL,4,len(vect.stop_words_) == 4)<SUB>14</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.assignment,vect.min_df = 0.8)<SUB>16</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.fieldAccess,vect.min_df)<SUB>16</SUB>> ]
"68719476771" [label = <(IDENTIFIER,vect,vect.min_df = 0.8)<SUB>16</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,min_df,min_df)<SUB>16</SUB>> ]
"90194313229" [label = <(LITERAL,0.8,vect.min_df = 0.8)<SUB>16</SUB>> ]
"30064771123" [label = <(fit,vect.fit(test_data))<SUB>17</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.fieldAccess,vect.fit)<SUB>17</SUB>> ]
"68719476773" [label = <(IDENTIFIER,vect,vect.fit(test_data))<SUB>17</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,fit,fit)<SUB>17</SUB>> ]
"68719476774" [label = <(IDENTIFIER,vect,vect.fit(test_data))<SUB>17</SUB>> ]
"68719476772" [label = <(IDENTIFIER,test_data,vect.fit(test_data))<SUB>17</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.assert,assert &quot;c&quot; not in tmp4 = vect.vocabulary_
tmp4....)<SUB>18</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.notIn,&quot;c&quot; not in tmp4 = vect.vocabulary_
tmp4.keys())<SUB>18</SUB>> ]
"90194313230" [label = <(LITERAL,&quot;c&quot;,&quot;c&quot; not in tmp4 = vect.vocabulary_
tmp4.keys())<SUB>18</SUB>> ]
"25769803782" [label = <(BLOCK,tmp4 = vect.vocabulary_
tmp4.keys(),tmp4 = vect.vocabulary_
tmp4.keys())<SUB>18</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.assignment,tmp4 = vect.vocabulary_)<SUB>18</SUB>> ]
"68719476776" [label = <(IDENTIFIER,tmp4,tmp4 = vect.vocabulary_)<SUB>18</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.fieldAccess,vect.vocabulary_)<SUB>18</SUB>> ]
"68719476775" [label = <(IDENTIFIER,vect,tmp4 = vect.vocabulary_)<SUB>18</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,vocabulary_,vocabulary_)<SUB>18</SUB>> ]
"30064771127" [label = <(keys,tmp4.keys())<SUB>18</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.fieldAccess,tmp4.keys)<SUB>18</SUB>> ]
"68719476777" [label = <(IDENTIFIER,tmp4,tmp4.keys())<SUB>18</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,keys,keys)<SUB>18</SUB>> ]
"68719476778" [label = <(IDENTIFIER,tmp4,tmp4.keys())<SUB>18</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.assert,assert len(tmp5 = vect.vocabulary_
tmp5.keys())...)<SUB>19</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.equals,len(tmp5 = vect.vocabulary_
tmp5.keys()) == 1)<SUB>19</SUB>> ]
"30064771134" [label = <(len,len(tmp5 = vect.vocabulary_
tmp5.keys()))<SUB>19</SUB>> ]
"68719476783" [label = <(IDENTIFIER,len,len(tmp5 = vect.vocabulary_
tmp5.keys()))<SUB>19</SUB>> ]
"25769803783" [label = <(BLOCK,tmp5 = vect.vocabulary_
tmp5.keys(),tmp5 = vect.vocabulary_
tmp5.keys())<SUB>19</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.assignment,tmp5 = vect.vocabulary_)<SUB>19</SUB>> ]
"68719476780" [label = <(IDENTIFIER,tmp5,tmp5 = vect.vocabulary_)<SUB>19</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.fieldAccess,vect.vocabulary_)<SUB>19</SUB>> ]
"68719476779" [label = <(IDENTIFIER,vect,tmp5 = vect.vocabulary_)<SUB>19</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,vocabulary_,vocabulary_)<SUB>19</SUB>> ]
"30064771133" [label = <(keys,tmp5.keys())<SUB>19</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.fieldAccess,tmp5.keys)<SUB>19</SUB>> ]
"68719476781" [label = <(IDENTIFIER,tmp5,tmp5.keys())<SUB>19</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,keys,keys)<SUB>19</SUB>> ]
"68719476782" [label = <(IDENTIFIER,tmp5,tmp5.keys())<SUB>19</SUB>> ]
"90194313231" [label = <(LITERAL,1,len(tmp5 = vect.vocabulary_
tmp5.keys()) == 1)<SUB>19</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.assert,assert &quot;c&quot; in vect.stop_words_)<SUB>20</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.in,&quot;c&quot; in vect.stop_words_)<SUB>20</SUB>> ]
"90194313232" [label = <(LITERAL,&quot;c&quot;,&quot;c&quot; in vect.stop_words_)<SUB>20</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.fieldAccess,vect.stop_words_)<SUB>20</SUB>> ]
"68719476784" [label = <(IDENTIFIER,vect,&quot;c&quot; in vect.stop_words_)<SUB>20</SUB>> ]
"55834574868" [label = <(FIELD_IDENTIFIER,stop_words_,stop_words_)<SUB>20</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.assert,assert len(vect.stop_words_) == 5)<SUB>21</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.equals,len(vect.stop_words_) == 5)<SUB>21</SUB>> ]
"30064771141" [label = <(len,len(vect.stop_words_))<SUB>21</SUB>> ]
"68719476786" [label = <(IDENTIFIER,len,len(vect.stop_words_))<SUB>21</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.fieldAccess,vect.stop_words_)<SUB>21</SUB>> ]
"68719476785" [label = <(IDENTIFIER,vect,len(vect.stop_words_))<SUB>21</SUB>> ]
"55834574869" [label = <(FIELD_IDENTIFIER,stop_words_,stop_words_)<SUB>21</SUB>> ]
"90194313233" [label = <(LITERAL,5,len(vect.stop_words_) == 5)<SUB>21</SUB>> ]
"94489280514" [label = <(LOCAL,test_data: __builtin.list)<SUB>2</SUB>> ]
"94489280515" [label = <(LOCAL,CountVectorizer: ANY)<SUB>3</SUB>> ]
"94489280517" [label = <(LOCAL,vect: CountVectorizer.&lt;returnValue&gt;)<SUB>3</SUB>> ]
"94489280518" [label = <(LOCAL,tmp0: CountVectorizer.&lt;returnValue&gt;.&lt;member&gt;(vocabulary_))<SUB>5</SUB>> ]
"94489280519" [label = <(LOCAL,tmp1: CountVectorizer.&lt;returnValue&gt;.&lt;member&gt;(vocabulary_))<SUB>6</SUB>> ]
"94489280520" [label = <(LOCAL,len: ANY)<SUB>6</SUB>> ]
"94489280521" [label = <(LOCAL,tmp2: CountVectorizer.&lt;returnValue&gt;.&lt;member&gt;(vocabulary_))<SUB>11</SUB>> ]
"94489280522" [label = <(LOCAL,tmp3: CountVectorizer.&lt;returnValue&gt;.&lt;member&gt;(vocabulary_))<SUB>12</SUB>> ]
"94489280523" [label = <(LOCAL,tmp4: CountVectorizer.&lt;returnValue&gt;.&lt;member&gt;(vocabulary_))<SUB>18</SUB>> ]
"94489280524" [label = <(LOCAL,tmp5: CountVectorizer.&lt;returnValue&gt;.&lt;member&gt;(vocabulary_))<SUB>19</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771091"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771097"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "30064771099"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "30064771105"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "30064771112"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "30064771115"  [ label = "AST: "] 
  "25769803777" -> "30064771119"  [ label = "AST: "] 
  "25769803777" -> "30064771121"  [ label = "AST: "] 
  "25769803777" -> "30064771123"  [ label = "AST: "] 
  "25769803777" -> "30064771129"  [ label = "AST: "] 
  "25769803777" -> "30064771136"  [ label = "AST: "] 
  "25769803777" -> "30064771139"  [ label = "AST: "] 
  "25769803777" -> "30064771143"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "90194313217"  [ label = "AST: "] 
  "30064771073" -> "90194313218"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "90194313219"  [ label = "AST: "] 
  "30064771075" -> "90194313220"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "55834574848"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "90194313221"  [ label = "AST: "] 
  "30064771083" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "30064771080"  [ label = "AST: "] 
  "25769803778" -> "30064771082"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771079" -> "55834574849"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "55834574850"  [ label = "AST: "] 
  "30064771091" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771090" -> "90194313222"  [ label = "AST: "] 
  "30064771089" -> "68719476752"  [ label = "AST: "] 
  "30064771089" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "30064771086"  [ label = "AST: "] 
  "25769803779" -> "30064771088"  [ label = "AST: "] 
  "30064771086" -> "68719476749"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "55834574851"  [ label = "AST: "] 
  "30064771088" -> "30064771087"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "55834574852"  [ label = "AST: "] 
  "30064771095" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "30064771093"  [ label = "AST: "] 
  "30064771094" -> "90194313223"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "30064771093" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476753"  [ label = "AST: "] 
  "30064771092" -> "55834574853"  [ label = "AST: "] 
  "30064771097" -> "30064771096"  [ label = "AST: "] 
  "30064771097" -> "90194313224"  [ label = "AST: "] 
  "30064771096" -> "68719476755"  [ label = "AST: "] 
  "30064771096" -> "55834574854"  [ label = "AST: "] 
  "30064771099" -> "30064771098"  [ label = "AST: "] 
  "30064771099" -> "68719476758"  [ label = "AST: "] 
  "30064771099" -> "68719476756"  [ label = "AST: "] 
  "30064771098" -> "68719476757"  [ label = "AST: "] 
  "30064771098" -> "55834574855"  [ label = "AST: "] 
  "30064771105" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "90194313225"  [ label = "AST: "] 
  "30064771104" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "30064771101"  [ label = "AST: "] 
  "25769803780" -> "30064771103"  [ label = "AST: "] 
  "30064771101" -> "68719476760"  [ label = "AST: "] 
  "30064771101" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476759"  [ label = "AST: "] 
  "30064771100" -> "55834574856"  [ label = "AST: "] 
  "30064771103" -> "30064771102"  [ label = "AST: "] 
  "30064771103" -> "68719476762"  [ label = "AST: "] 
  "30064771102" -> "68719476761"  [ label = "AST: "] 
  "30064771102" -> "55834574857"  [ label = "AST: "] 
  "30064771112" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "30064771110"  [ label = "AST: "] 
  "30064771111" -> "90194313226"  [ label = "AST: "] 
  "30064771110" -> "68719476767"  [ label = "AST: "] 
  "30064771110" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771107"  [ label = "AST: "] 
  "25769803781" -> "30064771109"  [ label = "AST: "] 
  "30064771107" -> "68719476764"  [ label = "AST: "] 
  "30064771107" -> "30064771106"  [ label = "AST: "] 
  "30064771106" -> "68719476763"  [ label = "AST: "] 
  "30064771106" -> "55834574858"  [ label = "AST: "] 
  "30064771109" -> "30064771108"  [ label = "AST: "] 
  "30064771109" -> "68719476766"  [ label = "AST: "] 
  "30064771108" -> "68719476765"  [ label = "AST: "] 
  "30064771108" -> "55834574859"  [ label = "AST: "] 
  "30064771115" -> "30064771114"  [ label = "AST: "] 
  "30064771114" -> "90194313227"  [ label = "AST: "] 
  "30064771114" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476768"  [ label = "AST: "] 
  "30064771113" -> "55834574860"  [ label = "AST: "] 
  "30064771119" -> "30064771118"  [ label = "AST: "] 
  "30064771118" -> "30064771117"  [ label = "AST: "] 
  "30064771118" -> "90194313228"  [ label = "AST: "] 
  "30064771117" -> "68719476770"  [ label = "AST: "] 
  "30064771117" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "68719476769"  [ label = "AST: "] 
  "30064771116" -> "55834574861"  [ label = "AST: "] 
  "30064771121" -> "30064771120"  [ label = "AST: "] 
  "30064771121" -> "90194313229"  [ label = "AST: "] 
  "30064771120" -> "68719476771"  [ label = "AST: "] 
  "30064771120" -> "55834574862"  [ label = "AST: "] 
  "30064771123" -> "30064771122"  [ label = "AST: "] 
  "30064771123" -> "68719476774"  [ label = "AST: "] 
  "30064771123" -> "68719476772"  [ label = "AST: "] 
  "30064771122" -> "68719476773"  [ label = "AST: "] 
  "30064771122" -> "55834574863"  [ label = "AST: "] 
  "30064771129" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "90194313230"  [ label = "AST: "] 
  "30064771128" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "30064771125"  [ label = "AST: "] 
  "25769803782" -> "30064771127"  [ label = "AST: "] 
  "30064771125" -> "68719476776"  [ label = "AST: "] 
  "30064771125" -> "30064771124"  [ label = "AST: "] 
  "30064771124" -> "68719476775"  [ label = "AST: "] 
  "30064771124" -> "55834574864"  [ label = "AST: "] 
  "30064771127" -> "30064771126"  [ label = "AST: "] 
  "30064771127" -> "68719476778"  [ label = "AST: "] 
  "30064771126" -> "68719476777"  [ label = "AST: "] 
  "30064771126" -> "55834574865"  [ label = "AST: "] 
  "30064771136" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "30064771134"  [ label = "AST: "] 
  "30064771135" -> "90194313231"  [ label = "AST: "] 
  "30064771134" -> "68719476783"  [ label = "AST: "] 
  "30064771134" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "30064771131"  [ label = "AST: "] 
  "25769803783" -> "30064771133"  [ label = "AST: "] 
  "30064771131" -> "68719476780"  [ label = "AST: "] 
  "30064771131" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "68719476779"  [ label = "AST: "] 
  "30064771130" -> "55834574866"  [ label = "AST: "] 
  "30064771133" -> "30064771132"  [ label = "AST: "] 
  "30064771133" -> "68719476782"  [ label = "AST: "] 
  "30064771132" -> "68719476781"  [ label = "AST: "] 
  "30064771132" -> "55834574867"  [ label = "AST: "] 
  "30064771139" -> "30064771138"  [ label = "AST: "] 
  "30064771138" -> "90194313232"  [ label = "AST: "] 
  "30064771138" -> "30064771137"  [ label = "AST: "] 
  "30064771137" -> "68719476784"  [ label = "AST: "] 
  "30064771137" -> "55834574868"  [ label = "AST: "] 
  "30064771143" -> "30064771142"  [ label = "AST: "] 
  "30064771142" -> "30064771141"  [ label = "AST: "] 
  "30064771142" -> "90194313233"  [ label = "AST: "] 
  "30064771141" -> "68719476786"  [ label = "AST: "] 
  "30064771141" -> "30064771140"  [ label = "AST: "] 
  "30064771140" -> "68719476785"  [ label = "AST: "] 
  "30064771140" -> "55834574869"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771076" -> "55834574848"  [ label = "CFG: "] 
  "30064771078" -> "55834574849"  [ label = "CFG: "] 
  "30064771084" -> "55834574851"  [ label = "CFG: "] 
  "30064771091" -> "55834574853"  [ label = "CFG: "] 
  "30064771095" -> "55834574854"  [ label = "CFG: "] 
  "30064771097" -> "55834574855"  [ label = "CFG: "] 
  "30064771099" -> "55834574856"  [ label = "CFG: "] 
  "30064771105" -> "55834574858"  [ label = "CFG: "] 
  "30064771112" -> "55834574860"  [ label = "CFG: "] 
  "30064771115" -> "55834574861"  [ label = "CFG: "] 
  "30064771119" -> "55834574862"  [ label = "CFG: "] 
  "30064771121" -> "55834574863"  [ label = "CFG: "] 
  "30064771123" -> "55834574864"  [ label = "CFG: "] 
  "30064771129" -> "55834574866"  [ label = "CFG: "] 
  "30064771136" -> "55834574868"  [ label = "CFG: "] 
  "30064771139" -> "55834574869"  [ label = "CFG: "] 
  "30064771143" -> "128849018881"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771111" -> "30064771112"  [ label = "CFG: "] 
  "30064771114" -> "30064771115"  [ label = "CFG: "] 
  "30064771118" -> "30064771119"  [ label = "CFG: "] 
  "30064771120" -> "30064771121"  [ label = "CFG: "] 
  "30064771122" -> "30064771123"  [ label = "CFG: "] 
  "30064771128" -> "30064771129"  [ label = "CFG: "] 
  "30064771135" -> "30064771136"  [ label = "CFG: "] 
  "30064771138" -> "30064771139"  [ label = "CFG: "] 
  "30064771142" -> "30064771143"  [ label = "CFG: "] 
  "55834574848" -> "30064771077"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "55834574854" -> "30064771096"  [ label = "CFG: "] 
  "55834574855" -> "30064771098"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771117" -> "30064771118"  [ label = "CFG: "] 
  "55834574862" -> "30064771120"  [ label = "CFG: "] 
  "55834574863" -> "30064771122"  [ label = "CFG: "] 
  "30064771134" -> "30064771135"  [ label = "CFG: "] 
  "30064771137" -> "30064771138"  [ label = "CFG: "] 
  "30064771141" -> "30064771142"  [ label = "CFG: "] 
  "30064771080" -> "55834574850"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771101" -> "55834574857"  [ label = "CFG: "] 
  "30064771103" -> "30064771104"  [ label = "CFG: "] 
  "55834574860" -> "30064771113"  [ label = "CFG: "] 
  "30064771116" -> "30064771117"  [ label = "CFG: "] 
  "30064771125" -> "55834574865"  [ label = "CFG: "] 
  "30064771127" -> "30064771128"  [ label = "CFG: "] 
  "55834574868" -> "30064771137"  [ label = "CFG: "] 
  "30064771140" -> "30064771141"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771086" -> "55834574852"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "55834574853" -> "30064771092"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771107" -> "55834574859"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "55834574861" -> "30064771116"  [ label = "CFG: "] 
  "30064771124" -> "30064771125"  [ label = "CFG: "] 
  "30064771126" -> "30064771127"  [ label = "CFG: "] 
  "30064771131" -> "55834574867"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "55834574869" -> "30064771140"  [ label = "CFG: "] 
  "55834574849" -> "30064771079"  [ label = "CFG: "] 
  "55834574850" -> "30064771081"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "55834574856" -> "30064771100"  [ label = "CFG: "] 
  "55834574857" -> "30064771102"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771108" -> "30064771109"  [ label = "CFG: "] 
  "55834574864" -> "30064771124"  [ label = "CFG: "] 
  "55834574865" -> "30064771126"  [ label = "CFG: "] 
  "30064771130" -> "30064771131"  [ label = "CFG: "] 
  "30064771132" -> "30064771133"  [ label = "CFG: "] 
  "55834574851" -> "30064771085"  [ label = "CFG: "] 
  "55834574852" -> "30064771087"  [ label = "CFG: "] 
  "55834574858" -> "30064771106"  [ label = "CFG: "] 
  "55834574859" -> "30064771108"  [ label = "CFG: "] 
  "55834574866" -> "30064771130"  [ label = "CFG: "] 
  "55834574867" -> "30064771132"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "30064771074" -> "128849018881"  [ label = "DDG: [&quot;abc&quot;, &quot;dea&quot;, &quot;eat&quot;]"] 
  "30064771074" -> "128849018881"  [ label = "DDG: test_data = [&quot;abc&quot;, &quot;dea&quot;, &quot;eat&quot;]"] 
  "30064771076" -> "128849018881"  [ label = "DDG: CountVectorizer(analyzer = &quot;char&quot;, min_df = 1)"] 
  "30064771076" -> "128849018881"  [ label = "DDG: vect = CountVectorizer(analyzer = &quot;char&quot;, min_df = 1)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: tmp0 = vect.vocabulary_"] 
  "30064771082" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771082" -> "128849018881"  [ label = "DDG: tmp0.keys()"] 
  "30064771084" -> "128849018881"  [ label = "DDG: &quot;a&quot; in tmp0 = vect.vocabulary_
tmp0.keys()"] 
  "30064771084" -> "128849018881"  [ label = "DDG: assert &quot;a&quot; in tmp0 = vect.vocabulary_
tmp0.keys()"] 
  "30064771086" -> "128849018881"  [ label = "DDG: tmp1 = vect.vocabulary_"] 
  "30064771088" -> "128849018881"  [ label = "DDG: tmp1"] 
  "30064771088" -> "128849018881"  [ label = "DDG: tmp1.keys()"] 
  "30064771090" -> "128849018881"  [ label = "DDG: len(tmp1 = vect.vocabulary_
tmp1.keys())"] 
  "30064771091" -> "128849018881"  [ label = "DDG: len(tmp1 = vect.vocabulary_
tmp1.keys()) == 6"] 
  "30064771091" -> "128849018881"  [ label = "DDG: assert len(tmp1 = vect.vocabulary_
tmp1.keys()) == 6"] 
  "30064771095" -> "128849018881"  [ label = "DDG: len(vect.stop_words_) == 0"] 
  "30064771095" -> "128849018881"  [ label = "DDG: assert len(vect.stop_words_) == 0"] 
  "30064771097" -> "128849018881"  [ label = "DDG: vect.min_df = 2"] 
  "30064771101" -> "128849018881"  [ label = "DDG: tmp2 = vect.vocabulary_"] 
  "30064771103" -> "128849018881"  [ label = "DDG: tmp2"] 
  "30064771103" -> "128849018881"  [ label = "DDG: tmp2.keys()"] 
  "30064771105" -> "128849018881"  [ label = "DDG: &quot;c&quot; not in tmp2 = vect.vocabulary_
tmp2.keys()"] 
  "30064771105" -> "128849018881"  [ label = "DDG: assert &quot;c&quot; not in tmp2 = vect.vocabulary_
tmp2.keys()"] 
  "30064771107" -> "128849018881"  [ label = "DDG: tmp3 = vect.vocabulary_"] 
  "30064771109" -> "128849018881"  [ label = "DDG: tmp3"] 
  "30064771109" -> "128849018881"  [ label = "DDG: tmp3.keys()"] 
  "30064771111" -> "128849018881"  [ label = "DDG: len(tmp3 = vect.vocabulary_
tmp3.keys())"] 
  "30064771112" -> "128849018881"  [ label = "DDG: len(tmp3 = vect.vocabulary_
tmp3.keys()) == 2"] 
  "30064771112" -> "128849018881"  [ label = "DDG: assert len(tmp3 = vect.vocabulary_
tmp3.keys()) == 2"] 
  "30064771119" -> "128849018881"  [ label = "DDG: len(vect.stop_words_) == 4"] 
  "30064771119" -> "128849018881"  [ label = "DDG: assert len(vect.stop_words_) == 4"] 
  "30064771121" -> "128849018881"  [ label = "DDG: vect.min_df = 0.8"] 
  "30064771123" -> "128849018881"  [ label = "DDG: vect"] 
  "30064771123" -> "128849018881"  [ label = "DDG: test_data"] 
  "30064771123" -> "128849018881"  [ label = "DDG: vect.fit(test_data)"] 
  "30064771125" -> "128849018881"  [ label = "DDG: tmp4 = vect.vocabulary_"] 
  "30064771127" -> "128849018881"  [ label = "DDG: tmp4"] 
  "30064771127" -> "128849018881"  [ label = "DDG: tmp4.keys()"] 
  "30064771129" -> "128849018881"  [ label = "DDG: &quot;c&quot; not in tmp4 = vect.vocabulary_
tmp4.keys()"] 
  "30064771129" -> "128849018881"  [ label = "DDG: assert &quot;c&quot; not in tmp4 = vect.vocabulary_
tmp4.keys()"] 
  "30064771131" -> "128849018881"  [ label = "DDG: vect.vocabulary_"] 
  "30064771131" -> "128849018881"  [ label = "DDG: tmp5 = vect.vocabulary_"] 
  "30064771133" -> "128849018881"  [ label = "DDG: tmp5"] 
  "30064771133" -> "128849018881"  [ label = "DDG: tmp5.keys()"] 
  "30064771135" -> "128849018881"  [ label = "DDG: len(tmp5 = vect.vocabulary_
tmp5.keys())"] 
  "30064771136" -> "128849018881"  [ label = "DDG: len(tmp5 = vect.vocabulary_
tmp5.keys()) == 1"] 
  "30064771136" -> "128849018881"  [ label = "DDG: assert len(tmp5 = vect.vocabulary_
tmp5.keys()) == 1"] 
  "30064771139" -> "128849018881"  [ label = "DDG: &quot;c&quot; in vect.stop_words_"] 
  "30064771139" -> "128849018881"  [ label = "DDG: assert &quot;c&quot; in vect.stop_words_"] 
  "30064771141" -> "128849018881"  [ label = "DDG: vect.stop_words_"] 
  "30064771142" -> "128849018881"  [ label = "DDG: len(vect.stop_words_)"] 
  "30064771143" -> "128849018881"  [ label = "DDG: len(vect.stop_words_) == 5"] 
  "30064771143" -> "128849018881"  [ label = "DDG: assert len(vect.stop_words_) == 5"] 
  "30064771073" -> "30064771074"  [ label = "DDG: &quot;abc&quot;"] 
  "30064771073" -> "30064771074"  [ label = "DDG: &quot;dea&quot;"] 
  "30064771073" -> "30064771074"  [ label = "DDG: &quot;eat&quot;"] 
  "30064771075" -> "30064771076"  [ label = "DDG: &quot;char&quot;"] 
  "30064771075" -> "30064771076"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771076" -> "30064771078"  [ label = "DDG: vect"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771074" -> "30064771078"  [ label = "DDG: test_data"] 
  "30064771083" -> "30064771084"  [ label = "DDG: &quot;a&quot;"] 
  "30064771083" -> "30064771084"  [ label = "DDG: tmp0 = vect.vocabulary_
tmp0.keys()"] 
  "30064771083" -> "30064771084"  [ label = "DDG: "] 
  "30064771090" -> "30064771091"  [ label = "DDG: len(tmp1 = vect.vocabulary_
tmp1.keys())"] 
  "30064771090" -> "30064771091"  [ label = "DDG: 6"] 
  "30064771094" -> "30064771095"  [ label = "DDG: len(vect.stop_words_)"] 
  "30064771094" -> "30064771095"  [ label = "DDG: 0"] 
  "30064771078" -> "30064771099"  [ label = "DDG: vect"] 
  "30064771093" -> "30064771099"  [ label = "DDG: vect.stop_words_"] 
  "30064771097" -> "30064771099"  [ label = "DDG: vect.min_df"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771078" -> "30064771099"  [ label = "DDG: test_data"] 
  "30064771104" -> "30064771105"  [ label = "DDG: &quot;c&quot;"] 
  "30064771104" -> "30064771105"  [ label = "DDG: tmp2 = vect.vocabulary_
tmp2.keys()"] 
  "30064771104" -> "30064771105"  [ label = "DDG: "] 
  "30064771111" -> "30064771112"  [ label = "DDG: len(tmp3 = vect.vocabulary_
tmp3.keys())"] 
  "30064771111" -> "30064771112"  [ label = "DDG: 2"] 
  "30064771114" -> "30064771115"  [ label = "DDG: &quot;c&quot;"] 
  "30064771114" -> "30064771115"  [ label = "DDG: vect.stop_words_"] 
  "30064771118" -> "30064771119"  [ label = "DDG: len(vect.stop_words_)"] 
  "30064771118" -> "30064771119"  [ label = "DDG: 4"] 
  "30064771099" -> "30064771123"  [ label = "DDG: vect"] 
  "30064771117" -> "30064771123"  [ label = "DDG: vect.stop_words_"] 
  "30064771121" -> "30064771123"  [ label = "DDG: vect.min_df"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771099" -> "30064771123"  [ label = "DDG: test_data"] 
  "30064771128" -> "30064771129"  [ label = "DDG: &quot;c&quot;"] 
  "30064771128" -> "30064771129"  [ label = "DDG: tmp4 = vect.vocabulary_
tmp4.keys()"] 
  "30064771128" -> "30064771129"  [ label = "DDG: "] 
  "30064771135" -> "30064771136"  [ label = "DDG: len(tmp5 = vect.vocabulary_
tmp5.keys())"] 
  "30064771135" -> "30064771136"  [ label = "DDG: 1"] 
  "30064771138" -> "30064771139"  [ label = "DDG: &quot;c&quot;"] 
  "30064771138" -> "30064771139"  [ label = "DDG: vect.stop_words_"] 
  "30064771142" -> "30064771143"  [ label = "DDG: len(vect.stop_words_)"] 
  "30064771142" -> "30064771143"  [ label = "DDG: 5"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "68719476739"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771082" -> "30064771083"  [ label = "DDG: tmp0.keys()"] 
  "30064771089" -> "30064771090"  [ label = "DDG: tmp1 = vect.vocabulary_
tmp1.keys()"] 
  "30064771089" -> "30064771090"  [ label = "DDG: "] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771093" -> "30064771094"  [ label = "DDG: vect.stop_words_"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771103" -> "30064771104"  [ label = "DDG: tmp2.keys()"] 
  "30064771110" -> "30064771111"  [ label = "DDG: tmp3 = vect.vocabulary_
tmp3.keys()"] 
  "30064771110" -> "30064771111"  [ label = "DDG: "] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771099" -> "30064771114"  [ label = "DDG: vect"] 
  "30064771117" -> "30064771118"  [ label = "DDG: vect.stop_words_"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771127" -> "30064771128"  [ label = "DDG: tmp4.keys()"] 
  "30064771134" -> "30064771135"  [ label = "DDG: tmp5 = vect.vocabulary_
tmp5.keys()"] 
  "30064771134" -> "30064771135"  [ label = "DDG: "] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771123" -> "30064771138"  [ label = "DDG: vect"] 
  "30064771141" -> "30064771142"  [ label = "DDG: vect.stop_words_"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "30064771078" -> "30064771080"  [ label = "DDG: vect"] 
  "30064771072" -> "68719476752"  [ label = "DDG: len"] 
  "111669149697" -> "68719476752"  [ label = "DDG: "] 
  "30064771088" -> "30064771089"  [ label = "DDG: tmp1.keys()"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "111669149697" -> "68719476754"  [ label = "DDG: "] 
  "30064771078" -> "30064771093"  [ label = "DDG: vect"] 
  "30064771099" -> "30064771101"  [ label = "DDG: vect"] 
  "111669149697" -> "68719476767"  [ label = "DDG: "] 
  "30064771109" -> "30064771110"  [ label = "DDG: tmp3.keys()"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "111669149697" -> "68719476770"  [ label = "DDG: "] 
  "30064771099" -> "30064771117"  [ label = "DDG: vect"] 
  "30064771114" -> "30064771117"  [ label = "DDG: vect.stop_words_"] 
  "30064771123" -> "30064771125"  [ label = "DDG: vect"] 
  "111669149697" -> "68719476783"  [ label = "DDG: "] 
  "30064771133" -> "30064771134"  [ label = "DDG: tmp5.keys()"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "111669149697" -> "68719476786"  [ label = "DDG: "] 
  "30064771123" -> "30064771141"  [ label = "DDG: vect"] 
  "30064771138" -> "30064771141"  [ label = "DDG: vect.stop_words_"] 
  "30064771080" -> "30064771082"  [ label = "DDG: tmp0"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771078" -> "30064771086"  [ label = "DDG: vect"] 
  "30064771101" -> "30064771103"  [ label = "DDG: tmp2"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771099" -> "30064771107"  [ label = "DDG: vect"] 
  "30064771125" -> "30064771127"  [ label = "DDG: tmp4"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771123" -> "30064771131"  [ label = "DDG: vect"] 
  "30064771086" -> "30064771088"  [ label = "DDG: tmp1"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771107" -> "30064771109"  [ label = "DDG: tmp3"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771131" -> "30064771133"  [ label = "DDG: tmp5"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
}
"""
)
