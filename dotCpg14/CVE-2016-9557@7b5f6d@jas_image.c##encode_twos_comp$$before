[33mval[0m [36mres354[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "encode_twos_comp" {  
"111669149697" [label = <(METHOD,encode_twos_comp)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,long n)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,int prec)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	ulong result;
	assert(prec &gt;= 2);
	jas_eprin...,{
	ulong result;
	assert(prec &gt;= 2);
	jas_eprin...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,ulong result: ulong)<SUB>3</SUB>> ]
"30064771072" [label = <(assert,assert(prec &gt;= 2))<SUB>4</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.greaterEqualsThan,prec &gt;= 2)<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,prec,prec &gt;= 2)<SUB>4</SUB>> ]
"90194313216" [label = <(LITERAL,2,prec &gt;= 2)<SUB>4</SUB>> ]
"30064771074" [label = <(jas_eprintf,jas_eprintf(&quot;warning: support for signed data i...)<SUB>5</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;warning: support for signed data is untested\n&quot;,jas_eprintf(&quot;warning: support for signed data i...)<SUB>5</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (n &lt; 0))<SUB>7</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.lessThan,n &lt; 0)<SUB>7</SUB>> ]
"68719476737" [label = <(IDENTIFIER,n,n &lt; 0)<SUB>7</SUB>> ]
"90194313218" [label = <(LITERAL,0,n &lt; 0)<SUB>7</SUB>> ]
"25769803778" [label = <(BLOCK,{
		result = -n;
		result = (result ^ 0xfffffff...,{
		result = -n;
		result = (result ^ 0xfffffff...)<SUB>7</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,result = -n)<SUB>8</SUB>> ]
"68719476738" [label = <(IDENTIFIER,result,result = -n)<SUB>8</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.minus,-n)<SUB>8</SUB>> ]
"68719476739" [label = <(IDENTIFIER,n,-n)<SUB>8</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,result = (result ^ 0xffffffffUL) + 1)<SUB>9</SUB>> ]
"68719476740" [label = <(IDENTIFIER,result,result = (result ^ 0xffffffffUL) + 1)<SUB>9</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.addition,(result ^ 0xffffffffUL) + 1)<SUB>9</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.xor,result ^ 0xffffffffUL)<SUB>9</SUB>> ]
"68719476741" [label = <(IDENTIFIER,result,result ^ 0xffffffffUL)<SUB>9</SUB>> ]
"90194313219" [label = <(LITERAL,0xffffffffUL,result ^ 0xffffffffUL)<SUB>9</SUB>> ]
"90194313220" [label = <(LITERAL,1,(result ^ 0xffffffffUL) + 1)<SUB>9</SUB>> ]
"30064771081" [label = <(&lt;operators&gt;.assignmentAnd,result &amp;= (1 &lt;&lt; prec) - 1)<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,result,result &amp;= (1 &lt;&lt; prec) - 1)<SUB>10</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.subtraction,(1 &lt;&lt; prec) - 1)<SUB>10</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.shiftLeft,1 &lt;&lt; prec)<SUB>10</SUB>> ]
"90194313221" [label = <(LITERAL,1,1 &lt;&lt; prec)<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,prec,1 &lt;&lt; prec)<SUB>10</SUB>> ]
"90194313222" [label = <(LITERAL,1,(1 &lt;&lt; prec) - 1)<SUB>10</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>11</SUB>> ]
"25769803779" [label = <(BLOCK,{
		result = n;
	},{
		result = n;
	})<SUB>11</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,result = n)<SUB>12</SUB>> ]
"68719476744" [label = <(IDENTIFIER,result,result = n)<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,n,result = n)<SUB>12</SUB>> ]
"146028888064" [label = <(RETURN,return result;,return result;)<SUB>14</SUB>> ]
"68719476746" [label = <(IDENTIFIER,result,return result;)<SUB>14</SUB>> ]
"133143986176" [label = <(MODIFIER,STATIC)> ]
"128849018880" [label = <(METHOD_RETURN,ulong)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "133143986176"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "47244640256" -> "30064771075"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640257"  [ label = "AST: "] 
  "30064771075" -> "68719476737"  [ label = "AST: "] 
  "30064771075" -> "90194313218"  [ label = "AST: "] 
  "25769803778" -> "30064771076"  [ label = "AST: "] 
  "25769803778" -> "30064771078"  [ label = "AST: "] 
  "25769803778" -> "30064771081"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "90194313220"  [ label = "AST: "] 
  "30064771080" -> "68719476741"  [ label = "AST: "] 
  "30064771080" -> "90194313219"  [ label = "AST: "] 
  "30064771081" -> "68719476742"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "90194313222"  [ label = "AST: "] 
  "30064771083" -> "90194313221"  [ label = "AST: "] 
  "30064771083" -> "68719476743"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476744"  [ label = "AST: "] 
  "30064771084" -> "68719476745"  [ label = "AST: "] 
  "146028888064" -> "68719476746"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "30064771075" -> "30064771084"  [ label = "CFG: "] 
  "30064771076" -> "30064771080"  [ label = "CFG: "] 
  "30064771078" -> "30064771083"  [ label = "CFG: "] 
  "30064771081" -> "146028888064"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "146028888064"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771073" -> "128849018880"  [ label = "DDG: prec"] 
  "30064771072" -> "128849018880"  [ label = "DDG: prec &gt;= 2"] 
  "30064771072" -> "128849018880"  [ label = "DDG: assert(prec &gt;= 2)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: jas_eprintf(&quot;warning: support for signed data is untested\n&quot;)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: n &lt; 0"] 
  "30064771084" -> "128849018880"  [ label = "DDG: result"] 
  "30064771084" -> "128849018880"  [ label = "DDG: n"] 
  "30064771084" -> "128849018880"  [ label = "DDG: result = n"] 
  "30064771077" -> "128849018880"  [ label = "DDG: n"] 
  "30064771076" -> "128849018880"  [ label = "DDG: -n"] 
  "30064771076" -> "128849018880"  [ label = "DDG: result = -n"] 
  "30064771079" -> "128849018880"  [ label = "DDG: result ^ 0xffffffffUL"] 
  "30064771078" -> "128849018880"  [ label = "DDG: (result ^ 0xffffffffUL) + 1"] 
  "30064771078" -> "128849018880"  [ label = "DDG: result = (result ^ 0xffffffffUL) + 1"] 
  "30064771081" -> "128849018880"  [ label = "DDG: result"] 
  "30064771083" -> "128849018880"  [ label = "DDG: prec"] 
  "30064771082" -> "128849018880"  [ label = "DDG: 1 &lt;&lt; prec"] 
  "30064771081" -> "128849018880"  [ label = "DDG: (1 &lt;&lt; prec) - 1"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "68719476746" -> "146028888064"  [ label = "DDG: result"] 
  "30064771073" -> "30064771072"  [ label = "DDG: prec"] 
  "30064771073" -> "30064771072"  [ label = "DDG: 2"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771081" -> "68719476746"  [ label = "DDG: result"] 
  "30064771084" -> "68719476746"  [ label = "DDG: result"] 
  "111669149697" -> "68719476746"  [ label = "DDG: "] 
  "115964116993" -> "30064771073"  [ label = "DDG: prec"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116992" -> "30064771075"  [ label = "DDG: n"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: n"] 
  "30064771080" -> "30064771078"  [ label = "DDG: result"] 
  "30064771080" -> "30064771078"  [ label = "DDG: 0xffffffffUL"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771078" -> "30064771081"  [ label = "DDG: result"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: 1 &lt;&lt; prec"] 
  "30064771082" -> "30064771081"  [ label = "DDG: 1"] 
  "30064771075" -> "30064771084"  [ label = "DDG: n"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: n"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: result"] 
  "30064771080" -> "30064771079"  [ label = "DDG: 0xffffffffUL"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: 1"] 
  "30064771083" -> "30064771082"  [ label = "DDG: prec"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771076" -> "30064771080"  [ label = "DDG: result"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771073" -> "30064771083"  [ label = "DDG: prec"] 
  "30064771075" -> "30064771082"  [ label = "CDG: "] 
  "30064771075" -> "30064771081"  [ label = "CDG: "] 
  "30064771075" -> "30064771084"  [ label = "CDG: "] 
  "30064771075" -> "30064771083"  [ label = "CDG: "] 
  "30064771075" -> "30064771078"  [ label = "CDG: "] 
  "30064771075" -> "30064771077"  [ label = "CDG: "] 
  "30064771075" -> "30064771080"  [ label = "CDG: "] 
  "30064771075" -> "30064771079"  [ label = "CDG: "] 
  "30064771075" -> "30064771076"  [ label = "CDG: "] 
}
"""
)
