[33mval[0m [36mres2034[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "raw_sign" {  
"111669149697" [label = <(METHOD,raw_sign)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const uint8_t msg[])<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,size_t msg_len)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,RandomNumberGenerator&amp; rng)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
   const BigInt&amp; q = m_group.get_q();

   Big...,{
   const BigInt&amp; q = m_group.get_q();

   Big...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,const BigInt&amp; q: BigInt&amp;)<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,&amp; q = m_group.get_q())<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,q,&amp; q = m_group.get_q())<SUB>4</SUB>> ]
"30064771073" [label = <(get_q,m_group.get_q())<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,m_group,m_group.get_q())<SUB>4</SUB>> ]
"94489280513" [label = <(LOCAL,BigInt i: BigInt)<SUB>6</SUB>> ]
"30064771074" [label = <(i,i(msg, msg_len, q.bits()))<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,msg,i(msg, msg_len, q.bits()))<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,msg_len,i(msg, msg_len, q.bits()))<SUB>6</SUB>> ]
"30064771075" [label = <(bits,q.bits())<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,q,q.bits())<SUB>6</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,WHILE,while (i &gt;= q))<SUB>8</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.greaterEqualsThan,i &gt;= q)<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,i,i &gt;= q)<SUB>8</SUB>> ]
"68719476742" [label = <(IDENTIFIER,q,i &gt;= q)<SUB>8</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignmentMinus,i -= q)<SUB>9</SUB>> ]
"68719476743" [label = <(IDENTIFIER,i,i -= q)<SUB>9</SUB>> ]
"68719476744" [label = <(IDENTIFIER,q,i -= q)<SUB>9</SUB>> ]
"94489280514" [label = <(LOCAL,const BigInt k: BigInt)<SUB>15</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,k = BigInt::random_integer(rng, 1, q))<SUB>15</SUB>> ]
"68719476745" [label = <(IDENTIFIER,k,k = BigInt::random_integer(rng, 1, q))<SUB>15</SUB>> ]
"30064771079" [label = <(random_integer,BigInt::random_integer(rng, 1, q))<SUB>15</SUB>> ]
"68719476746" [label = <(IDENTIFIER,rng,BigInt::random_integer(rng, 1, q))<SUB>15</SUB>> ]
"90194313216" [label = <(LITERAL,1,BigInt::random_integer(rng, 1, q))<SUB>15</SUB>> ]
"68719476747" [label = <(IDENTIFIER,q,BigInt::random_integer(rng, 1, q))<SUB>15</SUB>> ]
"94489280515" [label = <(LOCAL,BigInt s: BigInt)<SUB>18</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,s = inverse_mod(k, q))<SUB>18</SUB>> ]
"68719476748" [label = <(IDENTIFIER,s,s = inverse_mod(k, q))<SUB>18</SUB>> ]
"30064771081" [label = <(inverse_mod,inverse_mod(k, q))<SUB>18</SUB>> ]
"68719476749" [label = <(IDENTIFIER,k,inverse_mod(k, q))<SUB>18</SUB>> ]
"68719476750" [label = <(IDENTIFIER,q,inverse_mod(k, q))<SUB>18</SUB>> ]
"94489280516" [label = <(LOCAL,const BigInt r: BigInt)<SUB>19</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,r = m_mod_q.reduce(m_group.power_g_p(k)))<SUB>19</SUB>> ]
"68719476751" [label = <(IDENTIFIER,r,r = m_mod_q.reduce(m_group.power_g_p(k)))<SUB>19</SUB>> ]
"30064771083" [label = <(reduce,m_mod_q.reduce(m_group.power_g_p(k)))<SUB>19</SUB>> ]
"68719476752" [label = <(IDENTIFIER,m_mod_q,m_mod_q.reduce(m_group.power_g_p(k)))<SUB>19</SUB>> ]
"30064771084" [label = <(power_g_p,m_group.power_g_p(k))<SUB>19</SUB>> ]
"68719476753" [label = <(IDENTIFIER,m_group,m_group.power_g_p(k))<SUB>19</SUB>> ]
"68719476754" [label = <(IDENTIFIER,k,m_group.power_g_p(k))<SUB>19</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,s = m_mod_q.multiply(s, mul_add(m_x, r, i)))<SUB>21</SUB>> ]
"68719476755" [label = <(IDENTIFIER,s,s = m_mod_q.multiply(s, mul_add(m_x, r, i)))<SUB>21</SUB>> ]
"30064771086" [label = <(multiply,m_mod_q.multiply(s, mul_add(m_x, r, i)))<SUB>21</SUB>> ]
"68719476756" [label = <(IDENTIFIER,m_mod_q,m_mod_q.multiply(s, mul_add(m_x, r, i)))<SUB>21</SUB>> ]
"68719476757" [label = <(IDENTIFIER,s,m_mod_q.multiply(s, mul_add(m_x, r, i)))<SUB>21</SUB>> ]
"30064771087" [label = <(mul_add,mul_add(m_x, r, i))<SUB>21</SUB>> ]
"68719476758" [label = <(IDENTIFIER,m_x,mul_add(m_x, r, i))<SUB>21</SUB>> ]
"68719476759" [label = <(IDENTIFIER,r,mul_add(m_x, r, i))<SUB>21</SUB>> ]
"68719476760" [label = <(IDENTIFIER,i,mul_add(m_x, r, i))<SUB>21</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (r.is_zero() || s.is_zero()))<SUB>24</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.logicalOr,r.is_zero() || s.is_zero())<SUB>24</SUB>> ]
"30064771089" [label = <(is_zero,r.is_zero())<SUB>24</SUB>> ]
"68719476761" [label = <(IDENTIFIER,r,r.is_zero())<SUB>24</SUB>> ]
"30064771090" [label = <(is_zero,s.is_zero())<SUB>24</SUB>> ]
"68719476762" [label = <(IDENTIFIER,s,s.is_zero())<SUB>24</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,THROW,throw Internal_Error(&quot;Computed zero r/s during DSA signature&quot;))<SUB>25</SUB>> ]
"30064771091" [label = <(Internal_Error,Internal_Error(&quot;Computed zero r/s during DSA si...)<SUB>25</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;Computed zero r/s during DSA signature&quot;,Internal_Error(&quot;Computed zero r/s during DSA si...)<SUB>25</SUB>> ]
"146028888064" [label = <(RETURN,return BigInt::encode_fixed_length_int_pair(r, ...,return BigInt::encode_fixed_length_int_pair(r, ...)<SUB>27</SUB>> ]
"30064771092" [label = <(encode_fixed_length_int_pair,BigInt::encode_fixed_length_int_pair(r, s, q.by...)<SUB>27</SUB>> ]
"68719476763" [label = <(IDENTIFIER,r,BigInt::encode_fixed_length_int_pair(r, s, q.by...)<SUB>27</SUB>> ]
"68719476764" [label = <(IDENTIFIER,s,BigInt::encode_fixed_length_int_pair(r, s, q.by...)<SUB>27</SUB>> ]
"30064771093" [label = <(bytes,q.bytes())<SUB>27</SUB>> ]
"68719476765" [label = <(IDENTIFIER,q,q.bytes())<SUB>27</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "47244640256" -> "30064771076"  [ label = "AST: "] 
  "47244640256" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "68719476745"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476746"  [ label = "AST: "] 
  "30064771079" -> "90194313216"  [ label = "AST: "] 
  "30064771079" -> "68719476747"  [ label = "AST: "] 
  "30064771080" -> "68719476748"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476749"  [ label = "AST: "] 
  "30064771081" -> "68719476750"  [ label = "AST: "] 
  "30064771082" -> "68719476751"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476752"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476753"  [ label = "AST: "] 
  "30064771084" -> "68719476754"  [ label = "AST: "] 
  "30064771085" -> "68719476755"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476756"  [ label = "AST: "] 
  "30064771086" -> "68719476757"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476758"  [ label = "AST: "] 
  "30064771087" -> "68719476759"  [ label = "AST: "] 
  "30064771087" -> "68719476760"  [ label = "AST: "] 
  "47244640257" -> "30064771088"  [ label = "AST: "] 
  "47244640257" -> "25769803778"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "68719476761"  [ label = "AST: "] 
  "30064771090" -> "68719476762"  [ label = "AST: "] 
  "25769803778" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "90194313217"  [ label = "AST: "] 
  "146028888064" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "68719476763"  [ label = "AST: "] 
  "30064771092" -> "68719476764"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476765"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771078" -> "30064771081"  [ label = "CFG: "] 
  "30064771080" -> "30064771084"  [ label = "CFG: "] 
  "30064771082" -> "30064771087"  [ label = "CFG: "] 
  "30064771085" -> "30064771089"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "30064771091"  [ label = "CFG: "] 
  "30064771088" -> "30064771093"  [ label = "CFG: "] 
  "30064771092" -> "146028888064"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771090" -> "30064771088"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771091" -> "128849018880"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: m_group.get_q()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: &amp; q = m_group.get_q()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: msg"] 
  "30064771074" -> "128849018880"  [ label = "DDG: msg_len"] 
  "30064771074" -> "128849018880"  [ label = "DDG: q.bits()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: i(msg, msg_len, q.bits())"] 
  "30064771076" -> "128849018880"  [ label = "DDG: i &gt;= q"] 
  "30064771079" -> "128849018880"  [ label = "DDG: rng"] 
  "30064771078" -> "128849018880"  [ label = "DDG: BigInt::random_integer(rng, 1, q)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: k = BigInt::random_integer(rng, 1, q)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: q"] 
  "30064771080" -> "128849018880"  [ label = "DDG: inverse_mod(k, q)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: s = inverse_mod(k, q)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: m_group"] 
  "30064771084" -> "128849018880"  [ label = "DDG: k"] 
  "30064771083" -> "128849018880"  [ label = "DDG: m_group.power_g_p(k)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: m_mod_q.reduce(m_group.power_g_p(k))"] 
  "30064771082" -> "128849018880"  [ label = "DDG: r = m_mod_q.reduce(m_group.power_g_p(k))"] 
  "30064771085" -> "128849018880"  [ label = "DDG: s"] 
  "30064771086" -> "128849018880"  [ label = "DDG: m_mod_q"] 
  "30064771087" -> "128849018880"  [ label = "DDG: i"] 
  "30064771086" -> "128849018880"  [ label = "DDG: mul_add(m_x, r, i)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: m_mod_q.multiply(s, mul_add(m_x, r, i))"] 
  "30064771085" -> "128849018880"  [ label = "DDG: s = m_mod_q.multiply(s, mul_add(m_x, r, i))"] 
  "30064771089" -> "128849018880"  [ label = "DDG: r"] 
  "30064771088" -> "128849018880"  [ label = "DDG: r.is_zero()"] 
  "30064771090" -> "128849018880"  [ label = "DDG: s"] 
  "30064771088" -> "128849018880"  [ label = "DDG: s.is_zero()"] 
  "30064771088" -> "128849018880"  [ label = "DDG: r.is_zero() || s.is_zero()"] 
  "30064771091" -> "128849018880"  [ label = "DDG: Internal_Error(&quot;Computed zero r/s during DSA signature&quot;)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: i -= q"] 
  "30064771087" -> "128849018880"  [ label = "DDG: m_x"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: m_group"] 
  "30064771079" -> "30064771078"  [ label = "DDG: rng"] 
  "30064771079" -> "30064771078"  [ label = "DDG: 1"] 
  "30064771079" -> "30064771078"  [ label = "DDG: q"] 
  "30064771081" -> "30064771080"  [ label = "DDG: k"] 
  "30064771081" -> "30064771080"  [ label = "DDG: q"] 
  "30064771083" -> "30064771082"  [ label = "DDG: m_mod_q"] 
  "30064771083" -> "30064771082"  [ label = "DDG: m_group.power_g_p(k)"] 
  "30064771086" -> "30064771085"  [ label = "DDG: m_mod_q"] 
  "30064771086" -> "30064771085"  [ label = "DDG: s"] 
  "30064771086" -> "30064771085"  [ label = "DDG: mul_add(m_x, r, i)"] 
  "30064771092" -> "146028888064"  [ label = "DDG: BigInt::encode_fixed_length_int_pair(r, s, q.bytes())"] 
  "115964116992" -> "30064771074"  [ label = "DDG: msg"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116993" -> "30064771074"  [ label = "DDG: msg_len"] 
  "30064771075" -> "30064771074"  [ label = "DDG: q"] 
  "30064771076" -> "30064771077"  [ label = "DDG: q"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771072" -> "30064771075"  [ label = "DDG: q"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: i"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771075" -> "30064771076"  [ label = "DDG: q"] 
  "30064771076" -> "30064771077"  [ label = "DDG: i"] 
  "115964116994" -> "30064771079"  [ label = "DDG: rng"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771076" -> "30064771079"  [ label = "DDG: q"] 
  "30064771078" -> "30064771081"  [ label = "DDG: k"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771079" -> "30064771081"  [ label = "DDG: q"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771084" -> "30064771083"  [ label = "DDG: m_group"] 
  "30064771084" -> "30064771083"  [ label = "DDG: k"] 
  "30064771083" -> "30064771086"  [ label = "DDG: m_mod_q"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771080" -> "30064771086"  [ label = "DDG: s"] 
  "30064771087" -> "30064771086"  [ label = "DDG: m_x"] 
  "30064771087" -> "30064771086"  [ label = "DDG: r"] 
  "30064771087" -> "30064771086"  [ label = "DDG: i"] 
  "30064771089" -> "30064771088"  [ label = "DDG: r"] 
  "30064771090" -> "30064771088"  [ label = "DDG: s"] 
  "30064771089" -> "30064771092"  [ label = "DDG: r"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771085" -> "30064771092"  [ label = "DDG: s"] 
  "30064771090" -> "30064771092"  [ label = "DDG: s"] 
  "30064771093" -> "30064771092"  [ label = "DDG: q"] 
  "30064771073" -> "30064771084"  [ label = "DDG: m_group"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771081" -> "30064771084"  [ label = "DDG: k"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771082" -> "30064771087"  [ label = "DDG: r"] 
  "30064771076" -> "30064771087"  [ label = "DDG: i"] 
  "30064771087" -> "30064771089"  [ label = "DDG: r"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771085" -> "30064771090"  [ label = "DDG: s"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771081" -> "30064771093"  [ label = "DDG: q"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771076" -> "30064771077"  [ label = "CDG: "] 
  "30064771076" -> "30064771076"  [ label = "CDG: "] 
  "30064771088" -> "146028888064"  [ label = "CDG: "] 
  "30064771088" -> "30064771091"  [ label = "CDG: "] 
  "30064771088" -> "30064771093"  [ label = "CDG: "] 
  "30064771088" -> "30064771092"  [ label = "CDG: "] 
  "30064771089" -> "30064771090"  [ label = "CDG: "] 
}
"""
)
