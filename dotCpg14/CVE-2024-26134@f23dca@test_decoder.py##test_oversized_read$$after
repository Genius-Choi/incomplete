[33mval[0m [36mres2056[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_oversized_read" {  
"111669149697" [label = <(METHOD,test_oversized_read)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,CBORDecodeEOF = cast(Type[Exception], getattr(i...)<SUB>2</SUB>> ]
"68719476744" [label = <(IDENTIFIER,CBORDecodeEOF,CBORDecodeEOF = cast(Type[Exception], getattr(i...)<SUB>2</SUB>> ]
"30064771076" [label = <(cast,cast(Type[Exception], getattr(impl, &quot;CBORDecode...)<SUB>2</SUB>> ]
"68719476743" [label = <(IDENTIFIER,cast,cast(Type[Exception], getattr(impl, &quot;CBORDecode...)<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.indexAccess,Type[Exception])<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,Type,cast(Type[Exception], getattr(impl, &quot;CBORDecode...)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,Exception,cast(Type[Exception], getattr(impl, &quot;CBORDecode...)<SUB>2</SUB>> ]
"30064771075" [label = <(getattr,getattr(impl, &quot;CBORDecodeEOF&quot;))<SUB>2</SUB>> ]
"68719476742" [label = <(IDENTIFIER,getattr,getattr(impl, &quot;CBORDecodeEOF&quot;))<SUB>2</SUB>> ]
"68719476741" [label = <(IDENTIFIER,impl,getattr(impl, &quot;CBORDecodeEOF&quot;))<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;CBORDecodeEOF&quot;,getattr(impl, &quot;CBORDecodeEOF&quot;))<SUB>2</SUB>> ]
"25769803783" [label = <(BLOCK,manager_tmp4 = pytest.raises(CBORDecodeEOF, mat...,manager_tmp4 = pytest.raises(CBORDecodeEOF, mat...)<SUB>3</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,manager_tmp4 = pytest.raises(CBORDecodeEOF, mat...)<SUB>3</SUB>> ]
"68719476770" [label = <(IDENTIFIER,manager_tmp4,manager_tmp4 = pytest.raises(CBORDecodeEOF, mat...)<SUB>3</SUB>> ]
"30064771096" [label = <(raises,pytest.raises(CBORDecodeEOF, match = &quot;premature...)<SUB>3</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.fieldAccess,pytest.raises)<SUB>3</SUB>> ]
"68719476768" [label = <(IDENTIFIER,pytest,pytest.raises(CBORDecodeEOF, match = &quot;premature...)<SUB>3</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,raises,raises)<SUB>3</SUB>> ]
"68719476769" [label = <(IDENTIFIER,pytest,pytest.raises(CBORDecodeEOF, match = &quot;premature...)<SUB>3</SUB>> ]
"68719476767" [label = <(IDENTIFIER,CBORDecodeEOF,pytest.raises(CBORDecodeEOF, match = &quot;premature...)<SUB>3</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;premature end of stream&quot;,pytest.raises(CBORDecodeEOF, match = &quot;premature...)<SUB>3</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.assignment,enter_tmp5 = manager_tmp4.__enter__)<SUB>3</SUB>> ]
"68719476772" [label = <(IDENTIFIER,enter_tmp5,enter_tmp5 = manager_tmp4.__enter__)<SUB>3</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.fieldAccess,manager_tmp4.__enter__)<SUB>3</SUB>> ]
"68719476771" [label = <(IDENTIFIER,manager_tmp4,enter_tmp5 = manager_tmp4.__enter__)<SUB>3</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,__enter__,__enter__)<SUB>3</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.assignment,exit_tmp6 = manager_tmp4.__exit__)<SUB>3</SUB>> ]
"68719476774" [label = <(IDENTIFIER,exit_tmp6,exit_tmp6 = manager_tmp4.__exit__)<SUB>3</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.fieldAccess,manager_tmp4.__exit__)<SUB>3</SUB>> ]
"68719476773" [label = <(IDENTIFIER,manager_tmp4,exit_tmp6 = manager_tmp4.__exit__)<SUB>3</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,__exit__,__exit__)<SUB>3</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,value_tmp7 = enter_tmp5())<SUB>3</SUB>> ]
"68719476777" [label = <(IDENTIFIER,value_tmp7,value_tmp7 = enter_tmp5())<SUB>3</SUB>> ]
"30064771102" [label = <(,enter_tmp5())<SUB>3</SUB>> ]
"68719476775" [label = <(IDENTIFIER,enter_tmp5,enter_tmp5())<SUB>3</SUB>> ]
"68719476776" [label = <(IDENTIFIER,manager_tmp4,enter_tmp5())<SUB>3</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,TRY,try: ...)<SUB>3</SUB>> ]
"25769803781" [label = <(BLOCK,dummy_path = tmp_path / &quot;testdata&quot;
dummy_path.w...,dummy_path = tmp_path / &quot;testdata&quot;
dummy_path.w...)<SUB>3</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,dummy_path = tmp_path / &quot;testdata&quot;)<SUB>4</SUB>> ]
"68719476746" [label = <(IDENTIFIER,dummy_path,dummy_path = tmp_path / &quot;testdata&quot;)<SUB>4</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.division,tmp_path / &quot;testdata&quot;)<SUB>4</SUB>> ]
"68719476745" [label = <(IDENTIFIER,tmp_path,tmp_path / &quot;testdata&quot;)<SUB>4</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;testdata&quot;,tmp_path / &quot;testdata&quot;)<SUB>4</SUB>> ]
"30064771081" [label = <(write_bytes,dummy_path.write_bytes(payload))<SUB>5</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.fieldAccess,dummy_path.write_bytes)<SUB>5</SUB>> ]
"68719476748" [label = <(IDENTIFIER,dummy_path,dummy_path.write_bytes(payload))<SUB>5</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,write_bytes,write_bytes)<SUB>5</SUB>> ]
"68719476749" [label = <(IDENTIFIER,dummy_path,dummy_path.write_bytes(payload))<SUB>5</SUB>> ]
"68719476747" [label = <(IDENTIFIER,payload,dummy_path.write_bytes(payload))<SUB>5</SUB>> ]
"25769803780" [label = <(BLOCK,manager_tmp0 = dummy_path.open(&quot;rb&quot;)
enter_tmp1...,manager_tmp0 = dummy_path.open(&quot;rb&quot;)
enter_tmp1...)<SUB>6</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,manager_tmp0 = dummy_path.open(&quot;rb&quot;))<SUB>6</SUB>> ]
"68719476755" [label = <(IDENTIFIER,manager_tmp0,manager_tmp0 = dummy_path.open(&quot;rb&quot;))<SUB>6</SUB>> ]
"30064771085" [label = <(open,dummy_path.open(&quot;rb&quot;))<SUB>6</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.fieldAccess,dummy_path.open)<SUB>6</SUB>> ]
"68719476753" [label = <(IDENTIFIER,dummy_path,dummy_path.open(&quot;rb&quot;))<SUB>6</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,open,open)<SUB>6</SUB>> ]
"68719476754" [label = <(IDENTIFIER,dummy_path,dummy_path.open(&quot;rb&quot;))<SUB>6</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;rb&quot;,dummy_path.open(&quot;rb&quot;))<SUB>6</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.assignment,enter_tmp1 = manager_tmp0.__enter__)<SUB>6</SUB>> ]
"68719476757" [label = <(IDENTIFIER,enter_tmp1,enter_tmp1 = manager_tmp0.__enter__)<SUB>6</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.fieldAccess,manager_tmp0.__enter__)<SUB>6</SUB>> ]
"68719476756" [label = <(IDENTIFIER,manager_tmp0,enter_tmp1 = manager_tmp0.__enter__)<SUB>6</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,__enter__,__enter__)<SUB>6</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,exit_tmp2 = manager_tmp0.__exit__)<SUB>6</SUB>> ]
"68719476759" [label = <(IDENTIFIER,exit_tmp2,exit_tmp2 = manager_tmp0.__exit__)<SUB>6</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.fieldAccess,manager_tmp0.__exit__)<SUB>6</SUB>> ]
"68719476758" [label = <(IDENTIFIER,manager_tmp0,exit_tmp2 = manager_tmp0.__exit__)<SUB>6</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,__exit__,__exit__)<SUB>6</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.assignment,value_tmp3 = enter_tmp1())<SUB>6</SUB>> ]
"68719476762" [label = <(IDENTIFIER,value_tmp3,value_tmp3 = enter_tmp1())<SUB>6</SUB>> ]
"30064771091" [label = <(,enter_tmp1())<SUB>6</SUB>> ]
"68719476760" [label = <(IDENTIFIER,enter_tmp1,enter_tmp1())<SUB>6</SUB>> ]
"68719476761" [label = <(IDENTIFIER,manager_tmp0,enter_tmp1())<SUB>6</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,TRY,try: ...)<SUB>6</SUB>> ]
"25769803778" [label = <(BLOCK,f = value_tmp3
impl.load(f),f = value_tmp3
impl.load(f))<SUB>6</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,f = value_tmp3)<SUB>6</SUB>> ]
"68719476764" [label = <(IDENTIFIER,f,f = value_tmp3)<SUB>6</SUB>> ]
"68719476763" [label = <(IDENTIFIER,value_tmp3,f = value_tmp3)<SUB>6</SUB>> ]
"30064771083" [label = <(load,impl.load(f))<SUB>7</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.fieldAccess,impl.load)<SUB>7</SUB>> ]
"68719476751" [label = <(IDENTIFIER,impl,impl.load(f))<SUB>7</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,load,load)<SUB>7</SUB>> ]
"68719476752" [label = <(IDENTIFIER,impl,impl.load(f))<SUB>7</SUB>> ]
"68719476750" [label = <(IDENTIFIER,f,impl.load(f))<SUB>7</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FINALLY,__exit__())<SUB>6</SUB>> ]
"25769803779" [label = <(BLOCK,__exit__(),__exit__())<SUB>6</SUB>> ]
"30064771094" [label = <(,__exit__())<SUB>6</SUB>> ]
"68719476765" [label = <(IDENTIFIER,__exit__,__exit__())<SUB>6</SUB>> ]
"68719476766" [label = <(IDENTIFIER,manager_tmp0,__exit__())<SUB>6</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,FINALLY,__exit__())<SUB>3</SUB>> ]
"25769803782" [label = <(BLOCK,__exit__(),__exit__())<SUB>3</SUB>> ]
"30064771104" [label = <(,__exit__())<SUB>3</SUB>> ]
"68719476778" [label = <(IDENTIFIER,__exit__,__exit__())<SUB>3</SUB>> ]
"68719476779" [label = <(IDENTIFIER,manager_tmp4,__exit__())<SUB>3</SUB>> ]
"94489280515" [label = <(LOCAL,Type: ANY)<SUB>2</SUB>> ]
"94489280517" [label = <(LOCAL,Exception: ANY)<SUB>2</SUB>> ]
"94489280519" [label = <(LOCAL,getattr: ANY)<SUB>2</SUB>> ]
"94489280520" [label = <(LOCAL,cast: ANY)<SUB>2</SUB>> ]
"94489280522" [label = <(LOCAL,CBORDecodeEOF: cast.&lt;returnValue&gt;)<SUB>2</SUB>> ]
"94489280523" [label = <(LOCAL,dummy_path: ANY)<SUB>4</SUB>> ]
"94489280524" [label = <(LOCAL,f: ANY)<SUB>7</SUB>> ]
"94489280526" [label = <(LOCAL,manager_tmp0: ANY)<SUB>6</SUB>> ]
"94489280527" [label = <(LOCAL,enter_tmp1: manager_tmp0.__enter__.&lt;returnValue&gt;.&lt;member&gt;(__enter__))<SUB>6</SUB>> ]
"94489280528" [label = <(LOCAL,exit_tmp2: manager_tmp0.__exit__.&lt;returnValue&gt;.&lt;member&gt;(__exit__))<SUB>6</SUB>> ]
"94489280529" [label = <(LOCAL,value_tmp3: ANY)<SUB>6</SUB>> ]
"94489280530" [label = <(LOCAL,__exit__: ANY)<SUB>6</SUB>> ]
"94489280532" [label = <(LOCAL,pytest: ANY)<SUB>3</SUB>> ]
"94489280534" [label = <(LOCAL,manager_tmp4: ANY)<SUB>3</SUB>> ]
"94489280535" [label = <(LOCAL,enter_tmp5: manager_tmp4.__enter__.&lt;returnValue&gt;.&lt;member&gt;(__enter__))<SUB>3</SUB>> ]
"94489280536" [label = <(LOCAL,exit_tmp6: manager_tmp4.__exit__.&lt;returnValue&gt;.&lt;member&gt;(__exit__))<SUB>3</SUB>> ]
"94489280537" [label = <(LOCAL,value_tmp7: ANY)<SUB>3</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,impl)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,payload)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,tmp_path)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "25769803783"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "94489280527"  [ label = "AST: "] 
  "25769803777" -> "94489280528"  [ label = "AST: "] 
  "25769803777" -> "94489280529"  [ label = "AST: "] 
  "25769803777" -> "94489280530"  [ label = "AST: "] 
  "25769803777" -> "94489280532"  [ label = "AST: "] 
  "25769803777" -> "94489280534"  [ label = "AST: "] 
  "25769803777" -> "94489280535"  [ label = "AST: "] 
  "25769803777" -> "94489280536"  [ label = "AST: "] 
  "25769803777" -> "94489280537"  [ label = "AST: "] 
  "30064771077" -> "68719476744"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476743"  [ label = "AST: "] 
  "30064771076" -> "30064771074"  [ label = "AST: "] 
  "30064771076" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "68719476742"  [ label = "AST: "] 
  "30064771075" -> "68719476741"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "25769803783" -> "30064771097"  [ label = "AST: "] 
  "25769803783" -> "30064771099"  [ label = "AST: "] 
  "25769803783" -> "30064771101"  [ label = "AST: "] 
  "25769803783" -> "30064771103"  [ label = "AST: "] 
  "25769803783" -> "47244640258"  [ label = "AST: "] 
  "30064771097" -> "68719476770"  [ label = "AST: "] 
  "30064771097" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "30064771095"  [ label = "AST: "] 
  "30064771096" -> "68719476769"  [ label = "AST: "] 
  "30064771096" -> "68719476767"  [ label = "AST: "] 
  "30064771096" -> "90194313219"  [ label = "AST: "] 
  "30064771095" -> "68719476768"  [ label = "AST: "] 
  "30064771095" -> "55834574853"  [ label = "AST: "] 
  "30064771099" -> "68719476772"  [ label = "AST: "] 
  "30064771099" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476771"  [ label = "AST: "] 
  "30064771098" -> "55834574854"  [ label = "AST: "] 
  "30064771101" -> "68719476774"  [ label = "AST: "] 
  "30064771101" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476773"  [ label = "AST: "] 
  "30064771100" -> "55834574855"  [ label = "AST: "] 
  "30064771103" -> "68719476777"  [ label = "AST: "] 
  "30064771103" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "68719476775"  [ label = "AST: "] 
  "30064771102" -> "68719476776"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "25769803781" -> "30064771079"  [ label = "AST: "] 
  "25769803781" -> "30064771081"  [ label = "AST: "] 
  "25769803781" -> "25769803780"  [ label = "AST: "] 
  "30064771079" -> "68719476746"  [ label = "AST: "] 
  "30064771079" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "68719476745"  [ label = "AST: "] 
  "30064771078" -> "90194313217"  [ label = "AST: "] 
  "30064771081" -> "30064771080"  [ label = "AST: "] 
  "30064771081" -> "68719476749"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "30064771080" -> "68719476748"  [ label = "AST: "] 
  "30064771080" -> "55834574848"  [ label = "AST: "] 
  "25769803780" -> "30064771086"  [ label = "AST: "] 
  "25769803780" -> "30064771088"  [ label = "AST: "] 
  "25769803780" -> "30064771090"  [ label = "AST: "] 
  "25769803780" -> "30064771092"  [ label = "AST: "] 
  "25769803780" -> "47244640256"  [ label = "AST: "] 
  "30064771086" -> "68719476755"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771085" -> "68719476754"  [ label = "AST: "] 
  "30064771085" -> "90194313218"  [ label = "AST: "] 
  "30064771084" -> "68719476753"  [ label = "AST: "] 
  "30064771084" -> "55834574850"  [ label = "AST: "] 
  "30064771088" -> "68719476757"  [ label = "AST: "] 
  "30064771088" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476756"  [ label = "AST: "] 
  "30064771087" -> "55834574851"  [ label = "AST: "] 
  "30064771090" -> "68719476759"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476758"  [ label = "AST: "] 
  "30064771089" -> "55834574852"  [ label = "AST: "] 
  "30064771092" -> "68719476762"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476760"  [ label = "AST: "] 
  "30064771091" -> "68719476761"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "30064771093"  [ label = "AST: "] 
  "25769803778" -> "30064771083"  [ label = "AST: "] 
  "30064771093" -> "68719476764"  [ label = "AST: "] 
  "30064771093" -> "68719476763"  [ label = "AST: "] 
  "30064771083" -> "30064771082"  [ label = "AST: "] 
  "30064771083" -> "68719476752"  [ label = "AST: "] 
  "30064771083" -> "68719476750"  [ label = "AST: "] 
  "30064771082" -> "68719476751"  [ label = "AST: "] 
  "30064771082" -> "55834574849"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476765"  [ label = "AST: "] 
  "30064771094" -> "68719476766"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476778"  [ label = "AST: "] 
  "30064771104" -> "68719476779"  [ label = "AST: "] 
  "30064771077" -> "55834574853"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771097" -> "55834574854"  [ label = "CFG: "] 
  "30064771099" -> "55834574855"  [ label = "CFG: "] 
  "30064771101" -> "30064771102"  [ label = "CFG: "] 
  "30064771103" -> "30064771078"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771095" -> "30064771096"  [ label = "CFG: "] 
  "55834574854" -> "30064771098"  [ label = "CFG: "] 
  "55834574855" -> "30064771100"  [ label = "CFG: "] 
  "30064771079" -> "55834574848"  [ label = "CFG: "] 
  "30064771081" -> "55834574850"  [ label = "CFG: "] 
  "55834574853" -> "30064771095"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771086" -> "55834574851"  [ label = "CFG: "] 
  "30064771088" -> "55834574852"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771104" -> "30064771104"  [ label = "CFG: "] 
  "30064771104" -> "128849018881"  [ label = "CFG: "] 
  "55834574848" -> "30064771080"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "55834574851" -> "30064771087"  [ label = "CFG: "] 
  "55834574852" -> "30064771089"  [ label = "CFG: "] 
  "30064771093" -> "55834574849"  [ label = "CFG: "] 
  "30064771083" -> "30064771094"  [ label = "CFG: "] 
  "55834574850" -> "30064771084"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771094" -> "30064771094"  [ label = "CFG: "] 
  "30064771094" -> "30064771104"  [ label = "CFG: "] 
  "55834574849" -> "30064771082"  [ label = "CFG: "] 
  "111669149697" -> "30064771074"  [ label = "CFG: "] 
  "30064771076" -> "128849018881"  [ label = "DDG: Type[Exception]"] 
  "30064771076" -> "128849018881"  [ label = "DDG: getattr(impl, &quot;CBORDecodeEOF&quot;)"] 
  "30064771077" -> "128849018881"  [ label = "DDG: cast(Type[Exception], getattr(impl, &quot;CBORDecodeEOF&quot;))"] 
  "30064771077" -> "128849018881"  [ label = "DDG: CBORDecodeEOF = cast(Type[Exception], getattr(impl, &quot;CBORDecodeEOF&quot;))"] 
  "30064771096" -> "128849018881"  [ label = "DDG: pytest"] 
  "30064771096" -> "128849018881"  [ label = "DDG: CBORDecodeEOF"] 
  "30064771097" -> "128849018881"  [ label = "DDG: pytest.raises(CBORDecodeEOF, match = &quot;premature end of stream&quot;)"] 
  "30064771097" -> "128849018881"  [ label = "DDG: manager_tmp4 = pytest.raises(CBORDecodeEOF, match = &quot;premature end of stream&quot;)"] 
  "30064771099" -> "128849018881"  [ label = "DDG: enter_tmp5"] 
  "30064771099" -> "128849018881"  [ label = "DDG: enter_tmp5 = manager_tmp4.__enter__"] 
  "30064771101" -> "128849018881"  [ label = "DDG: exit_tmp6"] 
  "30064771101" -> "128849018881"  [ label = "DDG: exit_tmp6 = manager_tmp4.__exit__"] 
  "30064771103" -> "128849018881"  [ label = "DDG: value_tmp7"] 
  "30064771103" -> "128849018881"  [ label = "DDG: enter_tmp5()"] 
  "30064771103" -> "128849018881"  [ label = "DDG: value_tmp7 = enter_tmp5()"] 
  "30064771078" -> "128849018881"  [ label = "DDG: tmp_path"] 
  "30064771079" -> "128849018881"  [ label = "DDG: tmp_path / &quot;testdata&quot;"] 
  "30064771079" -> "128849018881"  [ label = "DDG: dummy_path = tmp_path / &quot;testdata&quot;"] 
  "30064771081" -> "128849018881"  [ label = "DDG: payload"] 
  "30064771081" -> "128849018881"  [ label = "DDG: dummy_path.write_bytes(payload)"] 
  "30064771085" -> "128849018881"  [ label = "DDG: dummy_path"] 
  "30064771086" -> "128849018881"  [ label = "DDG: dummy_path.open(&quot;rb&quot;)"] 
  "30064771086" -> "128849018881"  [ label = "DDG: manager_tmp0 = dummy_path.open(&quot;rb&quot;)"] 
  "30064771088" -> "128849018881"  [ label = "DDG: enter_tmp1"] 
  "30064771088" -> "128849018881"  [ label = "DDG: enter_tmp1 = manager_tmp0.__enter__"] 
  "30064771090" -> "128849018881"  [ label = "DDG: exit_tmp2"] 
  "30064771090" -> "128849018881"  [ label = "DDG: exit_tmp2 = manager_tmp0.__exit__"] 
  "30064771092" -> "128849018881"  [ label = "DDG: enter_tmp1()"] 
  "30064771092" -> "128849018881"  [ label = "DDG: value_tmp3 = enter_tmp1()"] 
  "30064771093" -> "128849018881"  [ label = "DDG: value_tmp3"] 
  "30064771093" -> "128849018881"  [ label = "DDG: f = value_tmp3"] 
  "30064771083" -> "128849018881"  [ label = "DDG: impl"] 
  "30064771083" -> "128849018881"  [ label = "DDG: f"] 
  "30064771083" -> "128849018881"  [ label = "DDG: impl.load(f)"] 
  "30064771094" -> "128849018881"  [ label = "DDG: manager_tmp0"] 
  "30064771104" -> "128849018881"  [ label = "DDG: manager_tmp4"] 
  "30064771104" -> "128849018881"  [ label = "DDG: __exit__()"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771076" -> "30064771077"  [ label = "DDG: Type[Exception]"] 
  "30064771076" -> "30064771077"  [ label = "DDG: getattr(impl, &quot;CBORDecodeEOF&quot;)"] 
  "111669149697" -> "25769803783"  [ label = "DDG: "] 
  "30064771096" -> "30064771097"  [ label = "DDG: pytest"] 
  "30064771096" -> "30064771097"  [ label = "DDG: CBORDecodeEOF"] 
  "30064771096" -> "30064771097"  [ label = "DDG: &quot;premature end of stream&quot;"] 
  "30064771097" -> "30064771099"  [ label = "DDG: manager_tmp4"] 
  "30064771097" -> "30064771101"  [ label = "DDG: manager_tmp4"] 
  "30064771102" -> "30064771103"  [ label = "DDG: manager_tmp4"] 
  "111669149697" -> "68719476743"  [ label = "DDG: "] 
  "30064771075" -> "30064771076"  [ label = "DDG: impl"] 
  "30064771075" -> "30064771076"  [ label = "DDG: &quot;CBORDecodeEOF&quot;"] 
  "30064771072" -> "68719476742"  [ label = "DDG: getattr"] 
  "111669149697" -> "68719476742"  [ label = "DDG: "] 
  "115964116992" -> "30064771075"  [ label = "DDG: impl"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771077" -> "30064771096"  [ label = "DDG: CBORDecodeEOF"] 
  "111669149697" -> "68719476775"  [ label = "DDG: "] 
  "30064771097" -> "30064771102"  [ label = "DDG: manager_tmp4"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771078" -> "30064771079"  [ label = "DDG: tmp_path"] 
  "30064771078" -> "30064771079"  [ label = "DDG: &quot;testdata&quot;"] 
  "111669149697" -> "25769803780"  [ label = "DDG: "] 
  "30064771079" -> "30064771081"  [ label = "DDG: dummy_path"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "115964116993" -> "30064771081"  [ label = "DDG: payload"] 
  "30064771085" -> "30064771086"  [ label = "DDG: dummy_path"] 
  "30064771085" -> "30064771086"  [ label = "DDG: &quot;rb&quot;"] 
  "30064771086" -> "30064771088"  [ label = "DDG: manager_tmp0"] 
  "30064771086" -> "30064771090"  [ label = "DDG: manager_tmp0"] 
  "30064771091" -> "30064771092"  [ label = "DDG: manager_tmp0"] 
  "115964116994" -> "30064771078"  [ label = "DDG: tmp_path"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "111669149697" -> "68719476778"  [ label = "DDG: "] 
  "30064771102" -> "30064771104"  [ label = "DDG: manager_tmp4"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771081" -> "30064771085"  [ label = "DDG: dummy_path"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "111669149697" -> "68719476760"  [ label = "DDG: "] 
  "30064771086" -> "30064771091"  [ label = "DDG: manager_tmp0"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771092" -> "30064771093"  [ label = "DDG: value_tmp3"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771075" -> "30064771083"  [ label = "DDG: impl"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771093" -> "30064771083"  [ label = "DDG: f"] 
  "111669149697" -> "68719476765"  [ label = "DDG: "] 
  "30064771091" -> "30064771094"  [ label = "DDG: manager_tmp0"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771104" -> "30064771104"  [ label = "CDG: "] 
  "30064771094" -> "30064771094"  [ label = "CDG: "] 
}
"""
)
