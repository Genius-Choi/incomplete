[33mval[0m [36mres1938[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "UncompressElement" {  
"111669149697" [label = <(METHOD,UncompressElement)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const CompressedElement&amp; compressed)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,std::vector&lt;Tensor&gt;* out)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
  int num_components = compressed.component_m...,{
  int num_components = compressed.component_m...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,int num_components: int)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,num_components = compressed.component_metadata_...)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,num_components,num_components = compressed.component_metadata_...)<SUB>3</SUB>> ]
"30064771073" [label = <(component_metadata_size,compressed.component_metadata_size())<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,compressed,compressed.component_metadata_size())<SUB>3</SUB>> ]
"30064771074" [label = <(clear,out-&gt;clear())<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,out,out-&gt;clear())<SUB>4</SUB>> ]
"30064771075" [label = <(reserve,out-&gt;reserve(num_components))<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,out,out-&gt;reserve(num_components))<SUB>5</SUB>> ]
"68719476740" [label = <(IDENTIFIER,num_components,out-&gt;reserve(num_components))<SUB>5</SUB>> ]
"94489280513" [label = <(LOCAL,std.vector&lt;structiovec&gt; iov: std.vector&lt;iovec&gt;)<SUB>8</SUB>> ]
"30064771076" [label = <(iov,iov(num_components))<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,num_components,iov(num_components))<SUB>8</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;tstring&gt; tensor_proto_strs)<SUB>10</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;tstring)<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,std,std::vector&lt;tstring)<SUB>10</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,tstring,std::vector&lt;tstring)<SUB>10</SUB>> ]
"68719476744" [label = <(IDENTIFIER,tensor_proto_strs,std::vector&lt;tstring&gt; tensor_proto_strs)<SUB>10</SUB>> ]
"30064771080" [label = <(reserve,tensor_proto_strs.reserve(num_components))<SUB>14</SUB>> ]
"68719476745" [label = <(IDENTIFIER,tensor_proto_strs,tensor_proto_strs.reserve(num_components))<SUB>14</SUB>> ]
"68719476746" [label = <(IDENTIFIER,num_components,tensor_proto_strs.reserve(num_components))<SUB>14</SUB>> ]
"94489280514" [label = <(LOCAL,int64 total_size: int64)<SUB>15</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,total_size = 0)<SUB>15</SUB>> ]
"68719476747" [label = <(IDENTIFIER,total_size,total_size = 0)<SUB>15</SUB>> ]
"90194313216" [label = <(LITERAL,0,total_size = 0)<SUB>15</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; num_components;++i))<SUB>16</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>> ]
"94489280515" [label = <(LOCAL,int i: int)<SUB>16</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>16</SUB>> ]
"68719476748" [label = <(IDENTIFIER,i,i = 0)<SUB>16</SUB>> ]
"90194313217" [label = <(LITERAL,0,i = 0)<SUB>16</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.lessThan,i &lt; num_components)<SUB>16</SUB>> ]
"68719476749" [label = <(IDENTIFIER,i,i &lt; num_components)<SUB>16</SUB>> ]
"68719476750" [label = <(IDENTIFIER,num_components,i &lt; num_components)<SUB>16</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>16</SUB>> ]
"68719476751" [label = <(IDENTIFIER,i,++i)<SUB>16</SUB>> ]
"25769803779" [label = <(BLOCK,{
    const CompressedComponentMetadata&amp; metada...,{
    const CompressedComponentMetadata&amp; metada...)<SUB>16</SUB>> ]
"94489280516" [label = <(LOCAL,const CompressedComponentMetadata&amp; metadata: CompressedComponentMetadata&amp;)<SUB>17</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,&amp; metadata =
        compressed.component_metad...)<SUB>17</SUB>> ]
"68719476752" [label = <(IDENTIFIER,metadata,&amp; metadata =
        compressed.component_metad...)<SUB>17</SUB>> ]
"30064771086" [label = <(component_metadata,compressed.component_metadata(i))<SUB>18</SUB>> ]
"68719476753" [label = <(IDENTIFIER,compressed,compressed.component_metadata(i))<SUB>18</SUB>> ]
"68719476754" [label = <(IDENTIFIER,i,compressed.component_metadata(i))<SUB>18</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (DataTypeCanUseMemcpy(metadata.dtype())))<SUB>19</SUB>> ]
"30064771087" [label = <(DataTypeCanUseMemcpy,DataTypeCanUseMemcpy(metadata.dtype()))<SUB>19</SUB>> ]
"30064771088" [label = <(dtype,metadata.dtype())<SUB>19</SUB>> ]
"68719476755" [label = <(IDENTIFIER,metadata,metadata.dtype())<SUB>19</SUB>> ]
"25769803780" [label = <(BLOCK,{
      out-&gt;emplace_back(metadata.dtype(), met...,{
      out-&gt;emplace_back(metadata.dtype(), met...)<SUB>19</SUB>> ]
"30064771089" [label = <(emplace_back,out-&gt;emplace_back(metadata.dtype(), metadata.te...)<SUB>20</SUB>> ]
"68719476756" [label = <(IDENTIFIER,out,out-&gt;emplace_back(metadata.dtype(), metadata.te...)<SUB>20</SUB>> ]
"30064771090" [label = <(dtype,metadata.dtype())<SUB>20</SUB>> ]
"68719476757" [label = <(IDENTIFIER,metadata,metadata.dtype())<SUB>20</SUB>> ]
"30064771091" [label = <(tensor_shape,metadata.tensor_shape())<SUB>20</SUB>> ]
"68719476758" [label = <(IDENTIFIER,metadata,metadata.tensor_shape())<SUB>20</SUB>> ]
"94489280517" [label = <(LOCAL,TensorBuffer* buffer: TensorBuffer*)<SUB>21</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.assignment,* buffer = DMAHelper::buffer(&amp;out-&gt;back()))<SUB>21</SUB>> ]
"68719476759" [label = <(IDENTIFIER,buffer,* buffer = DMAHelper::buffer(&amp;out-&gt;back()))<SUB>21</SUB>> ]
"30064771093" [label = <(buffer,DMAHelper::buffer(&amp;out-&gt;back()))<SUB>21</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.addressOf,&amp;out-&gt;back())<SUB>21</SUB>> ]
"30064771095" [label = <(back,out-&gt;back())<SUB>21</SUB>> ]
"68719476760" [label = <(IDENTIFIER,out,out-&gt;back())<SUB>21</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (buffer))<SUB>22</SUB>> ]
"68719476761" [label = <(IDENTIFIER,buffer,if (buffer))<SUB>22</SUB>> ]
"25769803781" [label = <(BLOCK,{
        iov[i].iov_base = buffer-&gt;data();
   ...,{
        iov[i].iov_base = buffer-&gt;data();
   ...)<SUB>22</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,iov[i].iov_base = buffer-&gt;data())<SUB>23</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.fieldAccess,iov[i].iov_base)<SUB>23</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.indirectIndexAccess,iov[i])<SUB>23</SUB>> ]
"68719476762" [label = <(IDENTIFIER,iov,iov[i].iov_base = buffer-&gt;data())<SUB>23</SUB>> ]
"68719476763" [label = <(IDENTIFIER,i,iov[i].iov_base = buffer-&gt;data())<SUB>23</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,iov_base,iov_base)<SUB>23</SUB>> ]
"30064771099" [label = <(data,buffer-&gt;data())<SUB>23</SUB>> ]
"68719476764" [label = <(IDENTIFIER,buffer,buffer-&gt;data())<SUB>23</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.assignment,iov[i].iov_len = buffer-&gt;size())<SUB>24</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.fieldAccess,iov[i].iov_len)<SUB>24</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.indirectIndexAccess,iov[i])<SUB>24</SUB>> ]
"68719476765" [label = <(IDENTIFIER,iov,iov[i].iov_len = buffer-&gt;size())<SUB>24</SUB>> ]
"68719476766" [label = <(IDENTIFIER,i,iov[i].iov_len = buffer-&gt;size())<SUB>24</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,iov_len,iov_len)<SUB>24</SUB>> ]
"30064771103" [label = <(size,buffer-&gt;size())<SUB>24</SUB>> ]
"68719476767" [label = <(IDENTIFIER,buffer,buffer-&gt;size())<SUB>24</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>25</SUB>> ]
"25769803782" [label = <(BLOCK,{
        iov[i].iov_base = nullptr;
        io...,{
        iov[i].iov_base = nullptr;
        io...)<SUB>25</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.assignment,iov[i].iov_base = nullptr)<SUB>26</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.fieldAccess,iov[i].iov_base)<SUB>26</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.indirectIndexAccess,iov[i])<SUB>26</SUB>> ]
"68719476768" [label = <(IDENTIFIER,iov,iov[i].iov_base = nullptr)<SUB>26</SUB>> ]
"68719476769" [label = <(IDENTIFIER,i,iov[i].iov_base = nullptr)<SUB>26</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,iov_base,iov_base)<SUB>26</SUB>> ]
"90194313218" [label = <(LITERAL,nullptr,iov[i].iov_base = nullptr)<SUB>26</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.assignment,iov[i].iov_len = 0)<SUB>27</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.fieldAccess,iov[i].iov_len)<SUB>27</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.indirectIndexAccess,iov[i])<SUB>27</SUB>> ]
"68719476770" [label = <(IDENTIFIER,iov,iov[i].iov_len = 0)<SUB>27</SUB>> ]
"68719476771" [label = <(IDENTIFIER,i,iov[i].iov_len = 0)<SUB>27</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,iov_len,iov_len)<SUB>27</SUB>> ]
"90194313219" [label = <(LITERAL,0,iov[i].iov_len = 0)<SUB>27</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>29</SUB>> ]
"25769803783" [label = <(BLOCK,{
      // Allocate an empty Tensor. We will fi...,{
      // Allocate an empty Tensor. We will fi...)<SUB>29</SUB>> ]
"30064771110" [label = <(emplace_back,out-&gt;emplace_back())<SUB>32</SUB>> ]
"68719476772" [label = <(IDENTIFIER,out,out-&gt;emplace_back())<SUB>32</SUB>> ]
"30064771111" [label = <(emplace_back,tensor_proto_strs.emplace_back())<SUB>33</SUB>> ]
"68719476773" [label = <(IDENTIFIER,tensor_proto_strs,tensor_proto_strs.emplace_back())<SUB>33</SUB>> ]
"94489280518" [label = <(LOCAL,tstring&amp; tensor_proto_str: tstring&amp;)<SUB>34</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.assignment,&amp; tensor_proto_str = tensor_proto_strs.back())<SUB>34</SUB>> ]
"68719476774" [label = <(IDENTIFIER,tensor_proto_str,&amp; tensor_proto_str = tensor_proto_strs.back())<SUB>34</SUB>> ]
"30064771113" [label = <(back,tensor_proto_strs.back())<SUB>34</SUB>> ]
"68719476775" [label = <(IDENTIFIER,tensor_proto_strs,tensor_proto_strs.back())<SUB>34</SUB>> ]
"30064771114" [label = <(resize_uninitialized,tensor_proto_str.resize_uninitialized(metadata....)<SUB>35</SUB>> ]
"68719476776" [label = <(IDENTIFIER,tensor_proto_str,tensor_proto_str.resize_uninitialized(metadata....)<SUB>35</SUB>> ]
"30064771115" [label = <(tensor_size_bytes,metadata.tensor_size_bytes())<SUB>35</SUB>> ]
"68719476777" [label = <(IDENTIFIER,metadata,metadata.tensor_size_bytes())<SUB>35</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.assignment,iov[i].iov_base = tensor_proto_str.mdata())<SUB>36</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.fieldAccess,iov[i].iov_base)<SUB>36</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.indirectIndexAccess,iov[i])<SUB>36</SUB>> ]
"68719476778" [label = <(IDENTIFIER,iov,iov[i].iov_base = tensor_proto_str.mdata())<SUB>36</SUB>> ]
"68719476779" [label = <(IDENTIFIER,i,iov[i].iov_base = tensor_proto_str.mdata())<SUB>36</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,iov_base,iov_base)<SUB>36</SUB>> ]
"30064771119" [label = <(mdata,tensor_proto_str.mdata())<SUB>36</SUB>> ]
"68719476780" [label = <(IDENTIFIER,tensor_proto_str,tensor_proto_str.mdata())<SUB>36</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.assignment,iov[i].iov_len = tensor_proto_str.size())<SUB>37</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.fieldAccess,iov[i].iov_len)<SUB>37</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.indirectIndexAccess,iov[i])<SUB>37</SUB>> ]
"68719476781" [label = <(IDENTIFIER,iov,iov[i].iov_len = tensor_proto_str.size())<SUB>37</SUB>> ]
"68719476782" [label = <(IDENTIFIER,i,iov[i].iov_len = tensor_proto_str.size())<SUB>37</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,iov_len,iov_len)<SUB>37</SUB>> ]
"30064771123" [label = <(size,tensor_proto_str.size())<SUB>37</SUB>> ]
"68719476783" [label = <(IDENTIFIER,tensor_proto_str,tensor_proto_str.size())<SUB>37</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assignmentPlus,total_size += iov[i].iov_len)<SUB>39</SUB>> ]
"68719476784" [label = <(IDENTIFIER,total_size,total_size += iov[i].iov_len)<SUB>39</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.fieldAccess,iov[i].iov_len)<SUB>39</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.indirectIndexAccess,iov[i])<SUB>39</SUB>> ]
"68719476785" [label = <(IDENTIFIER,iov,total_size += iov[i].iov_len)<SUB>39</SUB>> ]
"68719476786" [label = <(IDENTIFIER,i,total_size += iov[i].iov_len)<SUB>39</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,iov_len,iov_len)<SUB>39</SUB>> ]
"94489280519" [label = <(LOCAL,conststd.string&amp; compressed_data: std.string&amp;)<SUB>43</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.assignment,&amp; compressed_data = compressed.data())<SUB>43</SUB>> ]
"68719476787" [label = <(IDENTIFIER,compressed_data,&amp; compressed_data = compressed.data())<SUB>43</SUB>> ]
"30064771128" [label = <(data,compressed.data())<SUB>43</SUB>> ]
"68719476788" [label = <(IDENTIFIER,compressed,compressed.data())<SUB>43</SUB>> ]
"94489280520" [label = <(LOCAL,size_t uncompressed_size: size_t)<SUB>44</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (!port::Snappy_GetUncompressedLength(
          compressed_data.data(), compressed_data.size(), &amp;uncompressed_size)))<SUB>45</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.logicalNot,!port::Snappy_GetUncompressedLength(
          ...)<SUB>45</SUB>> ]
"30064771130" [label = <(Snappy_GetUncompressedLength,port::Snappy_GetUncompressedLength(
          c...)<SUB>45</SUB>> ]
"30064771131" [label = <(data,compressed_data.data())<SUB>46</SUB>> ]
"68719476789" [label = <(IDENTIFIER,compressed_data,compressed_data.data())<SUB>46</SUB>> ]
"30064771132" [label = <(size,compressed_data.size())<SUB>46</SUB>> ]
"68719476790" [label = <(IDENTIFIER,compressed_data,compressed_data.size())<SUB>46</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.addressOf,&amp;uncompressed_size)<SUB>46</SUB>> ]
"68719476791" [label = <(IDENTIFIER,uncompressed_size,port::Snappy_GetUncompressedLength(
          c...)<SUB>46</SUB>> ]
"25769803784" [label = <(BLOCK,{
    return errors::Internal(
        &quot;Could n...,{
    return errors::Internal(
        &quot;Could n...)<SUB>46</SUB>> ]
"146028888064" [label = <(RETURN,return errors::Internal(
        &quot;Could not get...,return errors::Internal(
        &quot;Could not get...)<SUB>47</SUB>> ]
"30064771134" [label = <(Internal,errors::Internal(
        &quot;Could not get snappy...)<SUB>47</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;Could not get snappy uncompressed length. Comp...,errors::Internal(
        &quot;Could not get snappy...)<SUB>48</SUB>> ]
"30064771135" [label = <(size,compressed_data.size())<SUB>49</SUB>> ]
"68719476792" [label = <(IDENTIFIER,compressed_data,compressed_data.size())<SUB>49</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (uncompressed_size != static_cast&lt;size_t&gt;(total_size)))<SUB>51</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.notEquals,uncompressed_size != static_cast&lt;size_t&gt;(total_...)<SUB>51</SUB>> ]
"68719476793" [label = <(IDENTIFIER,uncompressed_size,uncompressed_size != static_cast&lt;size_t&gt;(total_...)<SUB>51</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(total_size))<SUB>51</SUB>> ]
"184683593728" [label = <(UNKNOWN,size_t,size_t)<SUB>51</SUB>> ]
"68719476794" [label = <(IDENTIFIER,total_size,static_cast&lt;size_t&gt;(total_size))<SUB>51</SUB>> ]
"25769803785" [label = <(BLOCK,{
    return errors::Internal(
        &quot;Uncompr...,{
    return errors::Internal(
        &quot;Uncompr...)<SUB>51</SUB>> ]
"146028888065" [label = <(RETURN,return errors::Internal(
        &quot;Uncompressed ...,return errors::Internal(
        &quot;Uncompressed ...)<SUB>52</SUB>> ]
"30064771138" [label = <(Internal,errors::Internal(
        &quot;Uncompressed size mi...)<SUB>52</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;Uncompressed size mismatch. Snappy expects &quot;,errors::Internal(
        &quot;Uncompressed size mi...)<SUB>53</SUB>> ]
"68719476795" [label = <(IDENTIFIER,uncompressed_size,errors::Internal(
        &quot;Uncompressed size mi...)<SUB>53</SUB>> ]
"90194313222" [label = <(LITERAL,&quot; whereas the tensor metadata suggests &quot;,errors::Internal(
        &quot;Uncompressed size mi...)<SUB>54</SUB>> ]
"68719476796" [label = <(IDENTIFIER,total_size,errors::Internal(
        &quot;Uncompressed size mi...)<SUB>54</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (!port::Snappy_UncompressToIOVec(compressed_data.data(),
                                      compressed_data.size(), iov.data(),
                                      num_components)))<SUB>56</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.logicalNot,!port::Snappy_UncompressToIOVec(compressed_data...)<SUB>56</SUB>> ]
"30064771140" [label = <(Snappy_UncompressToIOVec,port::Snappy_UncompressToIOVec(compressed_data....)<SUB>56</SUB>> ]
"30064771141" [label = <(data,compressed_data.data())<SUB>56</SUB>> ]
"68719476797" [label = <(IDENTIFIER,compressed_data,compressed_data.data())<SUB>56</SUB>> ]
"30064771142" [label = <(size,compressed_data.size())<SUB>57</SUB>> ]
"68719476798" [label = <(IDENTIFIER,compressed_data,compressed_data.size())<SUB>57</SUB>> ]
"30064771143" [label = <(data,iov.data())<SUB>57</SUB>> ]
"68719476799" [label = <(IDENTIFIER,iov,iov.data())<SUB>57</SUB>> ]
"68719476800" [label = <(IDENTIFIER,num_components,port::Snappy_UncompressToIOVec(compressed_data....)<SUB>58</SUB>> ]
"25769803786" [label = <(BLOCK,{
    return errors::Internal(&quot;Failed to perfor...,{
    return errors::Internal(&quot;Failed to perfor...)<SUB>58</SUB>> ]
"146028888066" [label = <(RETURN,return errors::Internal(&quot;Failed to perform snap...,return errors::Internal(&quot;Failed to perform snap...)<SUB>59</SUB>> ]
"30064771144" [label = <(Internal,errors::Internal(&quot;Failed to perform snappy deco...)<SUB>59</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;Failed to perform snappy decompression.&quot;,errors::Internal(&quot;Failed to perform snappy deco...)<SUB>59</SUB>> ]
"94489280521" [label = <(LOCAL,int tensor_proto_strs_index: int)<SUB>63</SUB>> ]
"30064771145" [label = <(&lt;operator&gt;.assignment,tensor_proto_strs_index = 0)<SUB>63</SUB>> ]
"68719476801" [label = <(IDENTIFIER,tensor_proto_strs_index,tensor_proto_strs_index = 0)<SUB>63</SUB>> ]
"90194313224" [label = <(LITERAL,0,tensor_proto_strs_index = 0)<SUB>63</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; num_components;++i))<SUB>64</SUB>> ]
"25769803787" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>> ]
"94489280522" [label = <(LOCAL,int i: int)<SUB>64</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>64</SUB>> ]
"68719476802" [label = <(IDENTIFIER,i,i = 0)<SUB>64</SUB>> ]
"90194313225" [label = <(LITERAL,0,i = 0)<SUB>64</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.lessThan,i &lt; num_components)<SUB>64</SUB>> ]
"68719476803" [label = <(IDENTIFIER,i,i &lt; num_components)<SUB>64</SUB>> ]
"68719476804" [label = <(IDENTIFIER,num_components,i &lt; num_components)<SUB>64</SUB>> ]
"30064771148" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>64</SUB>> ]
"68719476805" [label = <(IDENTIFIER,i,++i)<SUB>64</SUB>> ]
"25769803788" [label = <(BLOCK,{
    if (DataTypeCanUseMemcpy(compressed.compo...,{
    if (DataTypeCanUseMemcpy(compressed.compo...)<SUB>64</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,IF,if (DataTypeCanUseMemcpy(compressed.component_metadata(i).dtype())))<SUB>65</SUB>> ]
"30064771149" [label = <(DataTypeCanUseMemcpy,DataTypeCanUseMemcpy(compressed.component_metad...)<SUB>65</SUB>> ]
"30064771150" [label = <(dtype,compressed.component_metadata(i).dtype())<SUB>65</SUB>> ]
"30064771151" [label = <(component_metadata,compressed.component_metadata(i))<SUB>65</SUB>> ]
"68719476806" [label = <(IDENTIFIER,compressed,compressed.component_metadata(i))<SUB>65</SUB>> ]
"68719476807" [label = <(IDENTIFIER,i,compressed.component_metadata(i))<SUB>65</SUB>> ]
"25769803789" [label = <(BLOCK,{
      continue;
    },{
      continue;
    })<SUB>65</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,CONTINUE,continue;)<SUB>66</SUB>> ]
"94489280523" [label = <(LOCAL,TensorProto tp: TensorProto)<SUB>68</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,IF,if (!tp.ParseFromString(tensor_proto_strs[tensor_proto_strs_index++])))<SUB>69</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.logicalNot,!tp.ParseFromString(tensor_proto_strs[tensor_pr...)<SUB>69</SUB>> ]
"30064771153" [label = <(ParseFromString,tp.ParseFromString(tensor_proto_strs[tensor_pro...)<SUB>69</SUB>> ]
"68719476808" [label = <(IDENTIFIER,tp,tp.ParseFromString(tensor_proto_strs[tensor_pro...)<SUB>69</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.indirectIndexAccess,tensor_proto_strs[tensor_proto_strs_index++])<SUB>69</SUB>> ]
"68719476809" [label = <(IDENTIFIER,tensor_proto_strs,tp.ParseFromString(tensor_proto_strs[tensor_pro...)<SUB>69</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.postIncrement,tensor_proto_strs_index++)<SUB>69</SUB>> ]
"68719476810" [label = <(IDENTIFIER,tensor_proto_strs_index,tensor_proto_strs_index++)<SUB>69</SUB>> ]
"25769803790" [label = <(BLOCK,{
      return errors::Internal(&quot;Could not pars...,{
      return errors::Internal(&quot;Could not pars...)<SUB>69</SUB>> ]
"146028888067" [label = <(RETURN,return errors::Internal(&quot;Could not parse Tensor...,return errors::Internal(&quot;Could not parse Tensor...)<SUB>70</SUB>> ]
"30064771156" [label = <(Internal,errors::Internal(&quot;Could not parse TensorProto&quot;))<SUB>70</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;Could not parse TensorProto&quot;,errors::Internal(&quot;Could not parse TensorProto&quot;))<SUB>70</SUB>> ]
"47244640268" [label = <(CONTROL_STRUCTURE,IF,if (!out-&gt;at(i).FromProto(tp)))<SUB>72</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.logicalNot,!out-&gt;at(i).FromProto(tp))<SUB>72</SUB>> ]
"30064771158" [label = <(FromProto,out-&gt;at(i).FromProto(tp))<SUB>72</SUB>> ]
"30064771159" [label = <(at,out-&gt;at(i))<SUB>72</SUB>> ]
"68719476811" [label = <(IDENTIFIER,out,out-&gt;at(i))<SUB>72</SUB>> ]
"68719476812" [label = <(IDENTIFIER,i,out-&gt;at(i))<SUB>72</SUB>> ]
"68719476813" [label = <(IDENTIFIER,tp,out-&gt;at(i).FromProto(tp))<SUB>72</SUB>> ]
"25769803791" [label = <(BLOCK,{
      return errors::Internal(&quot;Could not pars...,{
      return errors::Internal(&quot;Could not pars...)<SUB>72</SUB>> ]
"146028888068" [label = <(RETURN,return errors::Internal(&quot;Could not parse Tensor&quot;);,return errors::Internal(&quot;Could not parse Tensor&quot;);)<SUB>73</SUB>> ]
"30064771160" [label = <(Internal,errors::Internal(&quot;Could not parse Tensor&quot;))<SUB>73</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;Could not parse Tensor&quot;,errors::Internal(&quot;Could not parse Tensor&quot;))<SUB>73</SUB>> ]
"146028888069" [label = <(RETURN,return Status::OK();,return Status::OK();)<SUB>76</SUB>> ]
"30064771161" [label = <(OK,Status::OK())<SUB>76</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,Status)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771127"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "25769803777" -> "47244640263"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "30064771145"  [ label = "AST: "] 
  "25769803777" -> "47244640264"  [ label = "AST: "] 
  "25769803777" -> "146028888069"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "55834574848"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "68719476747"  [ label = "AST: "] 
  "30064771081" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "30064771083"  [ label = "AST: "] 
  "47244640256" -> "30064771084"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "25769803778" -> "94489280515"  [ label = "AST: "] 
  "25769803778" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476748"  [ label = "AST: "] 
  "30064771082" -> "90194313217"  [ label = "AST: "] 
  "30064771083" -> "68719476749"  [ label = "AST: "] 
  "30064771083" -> "68719476750"  [ label = "AST: "] 
  "30064771084" -> "68719476751"  [ label = "AST: "] 
  "25769803779" -> "94489280516"  [ label = "AST: "] 
  "25769803779" -> "30064771085"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "25769803779" -> "30064771124"  [ label = "AST: "] 
  "30064771085" -> "68719476752"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476753"  [ label = "AST: "] 
  "30064771086" -> "68719476754"  [ label = "AST: "] 
  "47244640257" -> "30064771087"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "47244640257" -> "47244640260"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476755"  [ label = "AST: "] 
  "25769803780" -> "30064771089"  [ label = "AST: "] 
  "25769803780" -> "94489280517"  [ label = "AST: "] 
  "25769803780" -> "30064771092"  [ label = "AST: "] 
  "25769803780" -> "47244640258"  [ label = "AST: "] 
  "30064771089" -> "68719476756"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "68719476757"  [ label = "AST: "] 
  "30064771091" -> "68719476758"  [ label = "AST: "] 
  "30064771092" -> "68719476759"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476760"  [ label = "AST: "] 
  "47244640258" -> "68719476761"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "25769803781" -> "30064771096"  [ label = "AST: "] 
  "25769803781" -> "30064771100"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "30064771099"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "55834574849"  [ label = "AST: "] 
  "30064771098" -> "68719476762"  [ label = "AST: "] 
  "30064771098" -> "68719476763"  [ label = "AST: "] 
  "30064771099" -> "68719476764"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "30064771103"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "55834574850"  [ label = "AST: "] 
  "30064771102" -> "68719476765"  [ label = "AST: "] 
  "30064771102" -> "68719476766"  [ label = "AST: "] 
  "30064771103" -> "68719476767"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "30064771104"  [ label = "AST: "] 
  "25769803782" -> "30064771107"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771104" -> "90194313218"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "55834574851"  [ label = "AST: "] 
  "30064771106" -> "68719476768"  [ label = "AST: "] 
  "30064771106" -> "68719476769"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "90194313219"  [ label = "AST: "] 
  "30064771108" -> "30064771109"  [ label = "AST: "] 
  "30064771108" -> "55834574852"  [ label = "AST: "] 
  "30064771109" -> "68719476770"  [ label = "AST: "] 
  "30064771109" -> "68719476771"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "30064771110"  [ label = "AST: "] 
  "25769803783" -> "30064771111"  [ label = "AST: "] 
  "25769803783" -> "94489280518"  [ label = "AST: "] 
  "25769803783" -> "30064771112"  [ label = "AST: "] 
  "25769803783" -> "30064771114"  [ label = "AST: "] 
  "25769803783" -> "30064771116"  [ label = "AST: "] 
  "25769803783" -> "30064771120"  [ label = "AST: "] 
  "30064771110" -> "68719476772"  [ label = "AST: "] 
  "30064771111" -> "68719476773"  [ label = "AST: "] 
  "30064771112" -> "68719476774"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "68719476775"  [ label = "AST: "] 
  "30064771114" -> "68719476776"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771115" -> "68719476777"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771116" -> "30064771119"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771117" -> "55834574853"  [ label = "AST: "] 
  "30064771118" -> "68719476778"  [ label = "AST: "] 
  "30064771118" -> "68719476779"  [ label = "AST: "] 
  "30064771119" -> "68719476780"  [ label = "AST: "] 
  "30064771120" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "30064771123"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "55834574854"  [ label = "AST: "] 
  "30064771122" -> "68719476781"  [ label = "AST: "] 
  "30064771122" -> "68719476782"  [ label = "AST: "] 
  "30064771123" -> "68719476783"  [ label = "AST: "] 
  "30064771124" -> "68719476784"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771125" -> "30064771126"  [ label = "AST: "] 
  "30064771125" -> "55834574855"  [ label = "AST: "] 
  "30064771126" -> "68719476785"  [ label = "AST: "] 
  "30064771126" -> "68719476786"  [ label = "AST: "] 
  "30064771127" -> "68719476787"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "68719476788"  [ label = "AST: "] 
  "47244640261" -> "30064771129"  [ label = "AST: "] 
  "47244640261" -> "25769803784"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771130" -> "30064771132"  [ label = "AST: "] 
  "30064771130" -> "30064771133"  [ label = "AST: "] 
  "30064771131" -> "68719476789"  [ label = "AST: "] 
  "30064771132" -> "68719476790"  [ label = "AST: "] 
  "30064771133" -> "68719476791"  [ label = "AST: "] 
  "25769803784" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771134"  [ label = "AST: "] 
  "30064771134" -> "90194313220"  [ label = "AST: "] 
  "30064771134" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "68719476792"  [ label = "AST: "] 
  "47244640262" -> "30064771136"  [ label = "AST: "] 
  "47244640262" -> "25769803785"  [ label = "AST: "] 
  "30064771136" -> "68719476793"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771137" -> "184683593728"  [ label = "AST: "] 
  "30064771137" -> "68719476794"  [ label = "AST: "] 
  "25769803785" -> "146028888065"  [ label = "AST: "] 
  "146028888065" -> "30064771138"  [ label = "AST: "] 
  "30064771138" -> "90194313221"  [ label = "AST: "] 
  "30064771138" -> "68719476795"  [ label = "AST: "] 
  "30064771138" -> "90194313222"  [ label = "AST: "] 
  "30064771138" -> "68719476796"  [ label = "AST: "] 
  "47244640263" -> "30064771139"  [ label = "AST: "] 
  "47244640263" -> "25769803786"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771140" -> "30064771142"  [ label = "AST: "] 
  "30064771140" -> "30064771143"  [ label = "AST: "] 
  "30064771140" -> "68719476800"  [ label = "AST: "] 
  "30064771141" -> "68719476797"  [ label = "AST: "] 
  "30064771142" -> "68719476798"  [ label = "AST: "] 
  "30064771143" -> "68719476799"  [ label = "AST: "] 
  "25769803786" -> "146028888066"  [ label = "AST: "] 
  "146028888066" -> "30064771144"  [ label = "AST: "] 
  "30064771144" -> "90194313223"  [ label = "AST: "] 
  "30064771145" -> "68719476801"  [ label = "AST: "] 
  "30064771145" -> "90194313224"  [ label = "AST: "] 
  "47244640264" -> "25769803787"  [ label = "AST: "] 
  "47244640264" -> "30064771147"  [ label = "AST: "] 
  "47244640264" -> "30064771148"  [ label = "AST: "] 
  "47244640264" -> "25769803788"  [ label = "AST: "] 
  "25769803787" -> "94489280522"  [ label = "AST: "] 
  "25769803787" -> "30064771146"  [ label = "AST: "] 
  "30064771146" -> "68719476802"  [ label = "AST: "] 
  "30064771146" -> "90194313225"  [ label = "AST: "] 
  "30064771147" -> "68719476803"  [ label = "AST: "] 
  "30064771147" -> "68719476804"  [ label = "AST: "] 
  "30064771148" -> "68719476805"  [ label = "AST: "] 
  "25769803788" -> "47244640265"  [ label = "AST: "] 
  "25769803788" -> "94489280523"  [ label = "AST: "] 
  "25769803788" -> "47244640267"  [ label = "AST: "] 
  "25769803788" -> "47244640268"  [ label = "AST: "] 
  "47244640265" -> "30064771149"  [ label = "AST: "] 
  "47244640265" -> "25769803789"  [ label = "AST: "] 
  "30064771149" -> "30064771150"  [ label = "AST: "] 
  "30064771150" -> "30064771151"  [ label = "AST: "] 
  "30064771151" -> "68719476806"  [ label = "AST: "] 
  "30064771151" -> "68719476807"  [ label = "AST: "] 
  "25769803789" -> "47244640266"  [ label = "AST: "] 
  "47244640267" -> "30064771152"  [ label = "AST: "] 
  "47244640267" -> "25769803790"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771153" -> "68719476808"  [ label = "AST: "] 
  "30064771153" -> "30064771154"  [ label = "AST: "] 
  "30064771154" -> "68719476809"  [ label = "AST: "] 
  "30064771154" -> "30064771155"  [ label = "AST: "] 
  "30064771155" -> "68719476810"  [ label = "AST: "] 
  "25769803790" -> "146028888067"  [ label = "AST: "] 
  "146028888067" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "90194313226"  [ label = "AST: "] 
  "47244640268" -> "30064771157"  [ label = "AST: "] 
  "47244640268" -> "25769803791"  [ label = "AST: "] 
  "30064771157" -> "30064771158"  [ label = "AST: "] 
  "30064771158" -> "30064771159"  [ label = "AST: "] 
  "30064771158" -> "68719476813"  [ label = "AST: "] 
  "30064771159" -> "68719476811"  [ label = "AST: "] 
  "30064771159" -> "68719476812"  [ label = "AST: "] 
  "25769803791" -> "146028888068"  [ label = "AST: "] 
  "146028888068" -> "30064771160"  [ label = "AST: "] 
  "30064771160" -> "90194313227"  [ label = "AST: "] 
  "146028888069" -> "30064771161"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "55834574848"  [ label = "CFG: "] 
  "30064771077" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771127" -> "30064771131"  [ label = "CFG: "] 
  "30064771145" -> "30064771146"  [ label = "CFG: "] 
  "146028888069" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771083" -> "30064771086"  [ label = "CFG: "] 
  "30064771083" -> "30064771128"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771128" -> "30064771127"  [ label = "CFG: "] 
  "30064771129" -> "30064771135"  [ label = "CFG: "] 
  "30064771129" -> "184683593728"  [ label = "CFG: "] 
  "30064771136" -> "30064771138"  [ label = "CFG: "] 
  "30064771136" -> "30064771141"  [ label = "CFG: "] 
  "30064771139" -> "30064771144"  [ label = "CFG: "] 
  "30064771139" -> "30064771145"  [ label = "CFG: "] 
  "30064771147" -> "30064771161"  [ label = "CFG: "] 
  "30064771147" -> "30064771151"  [ label = "CFG: "] 
  "30064771148" -> "30064771147"  [ label = "CFG: "] 
  "30064771161" -> "146028888069"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "30064771088"  [ label = "CFG: "] 
  "30064771124" -> "30064771084"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771140" -> "30064771139"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771146" -> "30064771147"  [ label = "CFG: "] 
  "55834574848" -> "30064771079"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771087" -> "30064771110"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771131" -> "30064771132"  [ label = "CFG: "] 
  "30064771132" -> "30064771133"  [ label = "CFG: "] 
  "30064771133" -> "30064771130"  [ label = "CFG: "] 
  "30064771134" -> "146028888064"  [ label = "CFG: "] 
  "184683593728" -> "30064771137"  [ label = "CFG: "] 
  "30064771138" -> "146028888065"  [ label = "CFG: "] 
  "30064771141" -> "30064771142"  [ label = "CFG: "] 
  "30064771142" -> "30064771143"  [ label = "CFG: "] 
  "30064771143" -> "30064771140"  [ label = "CFG: "] 
  "30064771144" -> "146028888066"  [ label = "CFG: "] 
  "30064771149" -> "30064771148"  [ label = "CFG: "] 
  "30064771149" -> "30064771155"  [ label = "CFG: "] 
  "30064771152" -> "30064771156"  [ label = "CFG: "] 
  "30064771152" -> "30064771159"  [ label = "CFG: "] 
  "30064771157" -> "30064771160"  [ label = "CFG: "] 
  "30064771157" -> "30064771148"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771089" -> "30064771095"  [ label = "CFG: "] 
  "30064771092" -> "68719476761"  [ label = "CFG: "] 
  "30064771126" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771125"  [ label = "CFG: "] 
  "30064771135" -> "30064771134"  [ label = "CFG: "] 
  "30064771150" -> "30064771149"  [ label = "CFG: "] 
  "30064771153" -> "30064771152"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771158" -> "30064771157"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771090" -> "30064771091"  [ label = "CFG: "] 
  "30064771091" -> "30064771089"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "68719476761" -> "30064771098"  [ label = "CFG: "] 
  "68719476761" -> "30064771106"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771111" -> "30064771113"  [ label = "CFG: "] 
  "30064771112" -> "30064771115"  [ label = "CFG: "] 
  "30064771114" -> "30064771118"  [ label = "CFG: "] 
  "30064771116" -> "30064771122"  [ label = "CFG: "] 
  "30064771120" -> "30064771126"  [ label = "CFG: "] 
  "30064771151" -> "30064771150"  [ label = "CFG: "] 
  "30064771154" -> "30064771153"  [ label = "CFG: "] 
  "30064771156" -> "146028888067"  [ label = "CFG: "] 
  "30064771159" -> "30064771158"  [ label = "CFG: "] 
  "30064771160" -> "146028888068"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771096" -> "30064771102"  [ label = "CFG: "] 
  "30064771100" -> "30064771126"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771117" -> "30064771119"  [ label = "CFG: "] 
  "30064771119" -> "30064771116"  [ label = "CFG: "] 
  "30064771121" -> "30064771123"  [ label = "CFG: "] 
  "30064771123" -> "30064771120"  [ label = "CFG: "] 
  "30064771155" -> "30064771154"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771097" -> "30064771099"  [ label = "CFG: "] 
  "30064771099" -> "30064771096"  [ label = "CFG: "] 
  "30064771101" -> "30064771103"  [ label = "CFG: "] 
  "30064771103" -> "30064771100"  [ label = "CFG: "] 
  "30064771104" -> "30064771109"  [ label = "CFG: "] 
  "30064771107" -> "30064771126"  [ label = "CFG: "] 
  "30064771118" -> "55834574853"  [ label = "CFG: "] 
  "55834574853" -> "30064771117"  [ label = "CFG: "] 
  "30064771122" -> "55834574854"  [ label = "CFG: "] 
  "55834574854" -> "30064771121"  [ label = "CFG: "] 
  "30064771098" -> "55834574849"  [ label = "CFG: "] 
  "55834574849" -> "30064771097"  [ label = "CFG: "] 
  "30064771102" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771101"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "30064771106" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771105"  [ label = "CFG: "] 
  "30064771109" -> "55834574852"  [ label = "CFG: "] 
  "55834574852" -> "30064771108"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888069" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: compressed.component_metadata_size()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: num_components = compressed.component_metadata_size()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: out-&gt;clear()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: out"] 
  "30064771075" -> "128849018880"  [ label = "DDG: out-&gt;reserve(num_components)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: iov(num_components)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: std::vector"] 
  "30064771077" -> "128849018880"  [ label = "DDG: std::vector&lt;tstring"] 
  "30064771077" -> "128849018880"  [ label = "DDG: std::vector&lt;tstring&gt; tensor_proto_strs"] 
  "30064771080" -> "128849018880"  [ label = "DDG: tensor_proto_strs"] 
  "30064771080" -> "128849018880"  [ label = "DDG: tensor_proto_strs.reserve(num_components)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: total_size"] 
  "30064771081" -> "128849018880"  [ label = "DDG: total_size = 0"] 
  "30064771082" -> "128849018880"  [ label = "DDG: i = 0"] 
  "30064771083" -> "128849018880"  [ label = "DDG: i"] 
  "30064771083" -> "128849018880"  [ label = "DDG: num_components"] 
  "30064771083" -> "128849018880"  [ label = "DDG: i &lt; num_components"] 
  "30064771128" -> "128849018880"  [ label = "DDG: compressed"] 
  "30064771127" -> "128849018880"  [ label = "DDG: compressed.data()"] 
  "30064771127" -> "128849018880"  [ label = "DDG: &amp; compressed_data = compressed.data()"] 
  "30064771130" -> "128849018880"  [ label = "DDG: compressed_data.data()"] 
  "30064771130" -> "128849018880"  [ label = "DDG: &amp;uncompressed_size"] 
  "30064771129" -> "128849018880"  [ label = "DDG: port::Snappy_GetUncompressedLength(
          compressed_data.data(), compressed_data.size(), &amp;uncompressed_size)"] 
  "30064771129" -> "128849018880"  [ label = "DDG: !port::Snappy_GetUncompressedLength(
          compressed_data.data(), compressed_data.size(), &amp;uncompressed_size)"] 
  "30064771135" -> "128849018880"  [ label = "DDG: compressed_data"] 
  "30064771134" -> "128849018880"  [ label = "DDG: compressed_data.size()"] 
  "30064771134" -> "128849018880"  [ label = "DDG: errors::Internal(
        &quot;Could not get snappy uncompressed length. Compressed data size: &quot;,
        compressed_data.size())"] 
  "30064771085" -> "128849018880"  [ label = "DDG: compressed.component_metadata(i)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: &amp; metadata =
        compressed.component_metadata(i)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: metadata.dtype()"] 
  "30064771087" -> "128849018880"  [ label = "DDG: DataTypeCanUseMemcpy(metadata.dtype())"] 
  "30064771110" -> "128849018880"  [ label = "DDG: out"] 
  "30064771110" -> "128849018880"  [ label = "DDG: out-&gt;emplace_back()"] 
  "30064771111" -> "128849018880"  [ label = "DDG: tensor_proto_strs.emplace_back()"] 
  "30064771113" -> "128849018880"  [ label = "DDG: tensor_proto_strs"] 
  "30064771112" -> "128849018880"  [ label = "DDG: tensor_proto_strs.back()"] 
  "30064771112" -> "128849018880"  [ label = "DDG: &amp; tensor_proto_str = tensor_proto_strs.back()"] 
  "30064771115" -> "128849018880"  [ label = "DDG: metadata"] 
  "30064771114" -> "128849018880"  [ label = "DDG: metadata.tensor_size_bytes()"] 
  "30064771114" -> "128849018880"  [ label = "DDG: tensor_proto_str.resize_uninitialized(metadata.tensor_size_bytes())"] 
  "30064771116" -> "128849018880"  [ label = "DDG: tensor_proto_str.mdata()"] 
  "30064771116" -> "128849018880"  [ label = "DDG: iov[i].iov_base = tensor_proto_str.mdata()"] 
  "30064771123" -> "128849018880"  [ label = "DDG: tensor_proto_str"] 
  "30064771120" -> "128849018880"  [ label = "DDG: tensor_proto_str.size()"] 
  "30064771120" -> "128849018880"  [ label = "DDG: iov[i].iov_len = tensor_proto_str.size()"] 
  "30064771089" -> "128849018880"  [ label = "DDG: metadata.dtype()"] 
  "30064771091" -> "128849018880"  [ label = "DDG: metadata"] 
  "30064771089" -> "128849018880"  [ label = "DDG: metadata.tensor_shape()"] 
  "30064771089" -> "128849018880"  [ label = "DDG: out-&gt;emplace_back(metadata.dtype(), metadata.tensor_shape())"] 
  "30064771092" -> "128849018880"  [ label = "DDG: buffer"] 
  "30064771095" -> "128849018880"  [ label = "DDG: out"] 
  "30064771093" -> "128849018880"  [ label = "DDG: &amp;out-&gt;back()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: DMAHelper::buffer(&amp;out-&gt;back())"] 
  "30064771092" -> "128849018880"  [ label = "DDG: * buffer = DMAHelper::buffer(&amp;out-&gt;back())"] 
  "30064771104" -> "128849018880"  [ label = "DDG: iov[i].iov_base = nullptr"] 
  "30064771107" -> "128849018880"  [ label = "DDG: iov[i].iov_len = 0"] 
  "30064771096" -> "128849018880"  [ label = "DDG: buffer-&gt;data()"] 
  "30064771096" -> "128849018880"  [ label = "DDG: iov[i].iov_base = buffer-&gt;data()"] 
  "30064771103" -> "128849018880"  [ label = "DDG: buffer"] 
  "30064771100" -> "128849018880"  [ label = "DDG: buffer-&gt;size()"] 
  "30064771100" -> "128849018880"  [ label = "DDG: iov[i].iov_len = buffer-&gt;size()"] 
  "30064771124" -> "128849018880"  [ label = "DDG: total_size"] 
  "30064771124" -> "128849018880"  [ label = "DDG: total_size += iov[i].iov_len"] 
  "30064771084" -> "128849018880"  [ label = "DDG: ++i"] 
  "30064771078" -> "128849018880"  [ label = "DDG: tstring"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: compressed"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771128" -> "30064771127"  [ label = "DDG: compressed"] 
  "111669149697" -> "30064771145"  [ label = "DDG: "] 
  "30064771161" -> "146028888069"  [ label = "DDG: Status::OK()"] 
  "115964116993" -> "30064771074"  [ label = "DDG: out"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: out"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771072" -> "30064771075"  [ label = "DDG: num_components"] 
  "30064771075" -> "30064771076"  [ label = "DDG: num_components"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: std::vector"] 
  "30064771078" -> "30064771077"  [ label = "DDG: tstring"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771077" -> "30064771080"  [ label = "DDG: tensor_proto_strs"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771076" -> "30064771080"  [ label = "DDG: num_components"] 
  "111669149697" -> "30064771161"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: compressed"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771082" -> "30064771083"  [ label = "DDG: i"] 
  "30064771084" -> "30064771083"  [ label = "DDG: i"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771080" -> "30064771083"  [ label = "DDG: num_components"] 
  "30064771086" -> "30064771084"  [ label = "DDG: i"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: compressed"] 
  "30064771086" -> "30064771085"  [ label = "DDG: i"] 
  "30064771120" -> "30064771124"  [ label = "DDG: iov[i].iov_len"] 
  "30064771107" -> "30064771124"  [ label = "DDG: iov[i].iov_len"] 
  "30064771100" -> "30064771124"  [ label = "DDG: iov[i].iov_len"] 
  "30064771073" -> "30064771128"  [ label = "DDG: compressed"] 
  "30064771086" -> "30064771128"  [ label = "DDG: compressed"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771130" -> "30064771129"  [ label = "DDG: compressed_data.data()"] 
  "30064771130" -> "30064771129"  [ label = "DDG: compressed_data.size()"] 
  "30064771130" -> "30064771129"  [ label = "DDG: &amp;uncompressed_size"] 
  "30064771134" -> "146028888064"  [ label = "DDG: errors::Internal(
        &quot;Could not get snappy uncompressed length. Compressed data size: &quot;,
        compressed_data.size())"] 
  "30064771130" -> "30064771136"  [ label = "DDG: &amp;uncompressed_size"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771081" -> "30064771136"  [ label = "DDG: total_size"] 
  "30064771124" -> "30064771136"  [ label = "DDG: total_size"] 
  "30064771138" -> "146028888065"  [ label = "DDG: errors::Internal(
        &quot;Uncompressed size mismatch. Snappy expects &quot;, uncompressed_size,
        &quot; whereas the tensor metadata suggests &quot;, total_size)"] 
  "30064771140" -> "30064771139"  [ label = "DDG: compressed_data.data()"] 
  "30064771140" -> "30064771139"  [ label = "DDG: compressed_data.size()"] 
  "30064771140" -> "30064771139"  [ label = "DDG: iov.data()"] 
  "30064771140" -> "30064771139"  [ label = "DDG: num_components"] 
  "30064771144" -> "146028888066"  [ label = "DDG: errors::Internal(&quot;Failed to perform snappy decompression.&quot;)"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771146" -> "30064771147"  [ label = "DDG: i"] 
  "30064771148" -> "30064771147"  [ label = "DDG: i"] 
  "111669149697" -> "30064771147"  [ label = "DDG: "] 
  "30064771140" -> "30064771147"  [ label = "DDG: num_components"] 
  "30064771151" -> "30064771148"  [ label = "DDG: i"] 
  "30064771159" -> "30064771148"  [ label = "DDG: i"] 
  "111669149697" -> "30064771148"  [ label = "DDG: "] 
  "30064771081" -> "30064771124"  [ label = "DDG: total_size"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771131" -> "30064771130"  [ label = "DDG: compressed_data"] 
  "30064771132" -> "30064771130"  [ label = "DDG: compressed_data"] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "30064771081" -> "30064771137"  [ label = "DDG: total_size"] 
  "30064771124" -> "30064771137"  [ label = "DDG: total_size"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771141" -> "30064771140"  [ label = "DDG: compressed_data"] 
  "30064771142" -> "30064771140"  [ label = "DDG: compressed_data"] 
  "30064771143" -> "30064771140"  [ label = "DDG: iov"] 
  "30064771083" -> "30064771140"  [ label = "DDG: num_components"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771073" -> "30064771086"  [ label = "DDG: compressed"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771083" -> "30064771086"  [ label = "DDG: i"] 
  "30064771088" -> "30064771087"  [ label = "DDG: metadata"] 
  "30064771093" -> "30064771092"  [ label = "DDG: &amp;out-&gt;back()"] 
  "30064771127" -> "30064771131"  [ label = "DDG: compressed_data"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771131" -> "30064771132"  [ label = "DDG: compressed_data"] 
  "111669149697" -> "30064771132"  [ label = "DDG: "] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771135" -> "30064771134"  [ label = "DDG: compressed_data"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771130" -> "30064771138"  [ label = "DDG: &amp;uncompressed_size"] 
  "30064771136" -> "30064771138"  [ label = "DDG: uncompressed_size"] 
  "30064771081" -> "30064771138"  [ label = "DDG: total_size"] 
  "30064771124" -> "30064771138"  [ label = "DDG: total_size"] 
  "30064771132" -> "30064771141"  [ label = "DDG: compressed_data"] 
  "111669149697" -> "30064771141"  [ label = "DDG: "] 
  "30064771141" -> "30064771142"  [ label = "DDG: compressed_data"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "111669149697" -> "30064771143"  [ label = "DDG: "] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "30064771150" -> "30064771149"  [ label = "DDG: compressed.component_metadata(i)"] 
  "30064771153" -> "30064771152"  [ label = "DDG: tp"] 
  "30064771153" -> "30064771152"  [ label = "DDG: tensor_proto_strs[tensor_proto_strs_index++]"] 
  "30064771156" -> "146028888067"  [ label = "DDG: errors::Internal(&quot;Could not parse TensorProto&quot;)"] 
  "30064771158" -> "30064771157"  [ label = "DDG: out-&gt;at(i)"] 
  "30064771158" -> "30064771157"  [ label = "DDG: tp"] 
  "30064771160" -> "146028888068"  [ label = "DDG: errors::Internal(&quot;Could not parse Tensor&quot;)"] 
  "30064771085" -> "30064771088"  [ label = "DDG: metadata"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771075" -> "30064771089"  [ label = "DDG: out"] 
  "30064771110" -> "30064771089"  [ label = "DDG: out"] 
  "30064771095" -> "30064771089"  [ label = "DDG: out"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771090" -> "30064771089"  [ label = "DDG: metadata"] 
  "30064771091" -> "30064771089"  [ label = "DDG: metadata"] 
  "111669149697" -> "68719476761"  [ label = "DDG: "] 
  "30064771113" -> "30064771112"  [ label = "DDG: tensor_proto_strs"] 
  "30064771119" -> "30064771116"  [ label = "DDG: tensor_proto_str"] 
  "30064771123" -> "30064771120"  [ label = "DDG: tensor_proto_str"] 
  "30064771132" -> "30064771135"  [ label = "DDG: compressed_data"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771151" -> "30064771150"  [ label = "DDG: compressed"] 
  "30064771151" -> "30064771150"  [ label = "DDG: i"] 
  "30064771158" -> "30064771153"  [ label = "DDG: tp"] 
  "111669149697" -> "30064771153"  [ label = "DDG: "] 
  "30064771080" -> "30064771153"  [ label = "DDG: tensor_proto_strs"] 
  "30064771113" -> "30064771153"  [ label = "DDG: tensor_proto_strs"] 
  "30064771159" -> "30064771158"  [ label = "DDG: out"] 
  "30064771159" -> "30064771158"  [ label = "DDG: i"] 
  "30064771153" -> "30064771158"  [ label = "DDG: tp"] 
  "111669149697" -> "30064771158"  [ label = "DDG: "] 
  "30064771088" -> "30064771090"  [ label = "DDG: metadata"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771090" -> "30064771091"  [ label = "DDG: metadata"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771095" -> "30064771093"  [ label = "DDG: out"] 
  "30064771099" -> "30064771096"  [ label = "DDG: buffer"] 
  "30064771103" -> "30064771100"  [ label = "DDG: buffer"] 
  "30064771075" -> "30064771110"  [ label = "DDG: out"] 
  "30064771095" -> "30064771110"  [ label = "DDG: out"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771080" -> "30064771111"  [ label = "DDG: tensor_proto_strs"] 
  "30064771113" -> "30064771111"  [ label = "DDG: tensor_proto_strs"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771112" -> "30064771114"  [ label = "DDG: tensor_proto_str"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771115" -> "30064771114"  [ label = "DDG: metadata"] 
  "30064771128" -> "30064771151"  [ label = "DDG: compressed"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771147" -> "30064771151"  [ label = "DDG: i"] 
  "111669149697" -> "30064771156"  [ label = "DDG: "] 
  "30064771075" -> "30064771159"  [ label = "DDG: out"] 
  "30064771110" -> "30064771159"  [ label = "DDG: out"] 
  "30064771095" -> "30064771159"  [ label = "DDG: out"] 
  "111669149697" -> "30064771159"  [ label = "DDG: "] 
  "30064771151" -> "30064771159"  [ label = "DDG: i"] 
  "111669149697" -> "30064771160"  [ label = "DDG: "] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771111" -> "30064771113"  [ label = "DDG: tensor_proto_strs"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771088" -> "30064771115"  [ label = "DDG: metadata"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771114" -> "30064771119"  [ label = "DDG: tensor_proto_str"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771119" -> "30064771123"  [ label = "DDG: tensor_proto_str"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771145" -> "30064771155"  [ label = "DDG: tensor_proto_strs_index"] 
  "111669149697" -> "30064771155"  [ label = "DDG: "] 
  "30064771089" -> "30064771095"  [ label = "DDG: out"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771092" -> "30064771099"  [ label = "DDG: buffer"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771099" -> "30064771103"  [ label = "DDG: buffer"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771083" -> "30064771084"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
  "30064771083" -> "30064771083"  [ label = "CDG: "] 
  "30064771083" -> "30064771088"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771087"  [ label = "CDG: "] 
  "30064771083" -> "30064771124"  [ label = "CDG: "] 
  "30064771083" -> "30064771125"  [ label = "CDG: "] 
  "30064771083" -> "30064771126"  [ label = "CDG: "] 
  "30064771083" -> "55834574855"  [ label = "CDG: "] 
  "30064771129" -> "30064771136"  [ label = "CDG: "] 
  "30064771129" -> "30064771137"  [ label = "CDG: "] 
  "30064771129" -> "30064771134"  [ label = "CDG: "] 
  "30064771129" -> "30064771135"  [ label = "CDG: "] 
  "30064771129" -> "146028888064"  [ label = "CDG: "] 
  "30064771129" -> "184683593728"  [ label = "CDG: "] 
  "30064771136" -> "30064771140"  [ label = "CDG: "] 
  "30064771136" -> "30064771141"  [ label = "CDG: "] 
  "30064771136" -> "30064771138"  [ label = "CDG: "] 
  "30064771136" -> "30064771139"  [ label = "CDG: "] 
  "30064771136" -> "146028888065"  [ label = "CDG: "] 
  "30064771136" -> "30064771142"  [ label = "CDG: "] 
  "30064771136" -> "30064771143"  [ label = "CDG: "] 
  "30064771139" -> "30064771144"  [ label = "CDG: "] 
  "30064771139" -> "30064771145"  [ label = "CDG: "] 
  "30064771139" -> "146028888066"  [ label = "CDG: "] 
  "30064771139" -> "30064771146"  [ label = "CDG: "] 
  "30064771139" -> "30064771147"  [ label = "CDG: "] 
  "30064771147" -> "30064771149"  [ label = "CDG: "] 
  "30064771147" -> "146028888069"  [ label = "CDG: "] 
  "30064771147" -> "30064771150"  [ label = "CDG: "] 
  "30064771147" -> "30064771151"  [ label = "CDG: "] 
  "30064771147" -> "30064771161"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771092"  [ label = "CDG: "] 
  "30064771087" -> "30064771093"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771087" -> "30064771091"  [ label = "CDG: "] 
  "30064771087" -> "30064771094"  [ label = "CDG: "] 
  "30064771087" -> "30064771095"  [ label = "CDG: "] 
  "30064771087" -> "30064771112"  [ label = "CDG: "] 
  "30064771087" -> "30064771113"  [ label = "CDG: "] 
  "30064771087" -> "30064771110"  [ label = "CDG: "] 
  "30064771087" -> "30064771111"  [ label = "CDG: "] 
  "30064771087" -> "30064771116"  [ label = "CDG: "] 
  "30064771087" -> "30064771117"  [ label = "CDG: "] 
  "30064771087" -> "30064771114"  [ label = "CDG: "] 
  "30064771087" -> "30064771115"  [ label = "CDG: "] 
  "30064771087" -> "30064771120"  [ label = "CDG: "] 
  "30064771087" -> "68719476761"  [ label = "CDG: "] 
  "30064771087" -> "30064771121"  [ label = "CDG: "] 
  "30064771087" -> "30064771118"  [ label = "CDG: "] 
  "30064771087" -> "30064771119"  [ label = "CDG: "] 
  "30064771087" -> "30064771122"  [ label = "CDG: "] 
  "30064771087" -> "30064771123"  [ label = "CDG: "] 
  "30064771087" -> "55834574854"  [ label = "CDG: "] 
  "30064771087" -> "55834574853"  [ label = "CDG: "] 
  "30064771149" -> "30064771148"  [ label = "CDG: "] 
  "30064771149" -> "30064771147"  [ label = "CDG: "] 
  "30064771149" -> "30064771152"  [ label = "CDG: "] 
  "30064771149" -> "30064771153"  [ label = "CDG: "] 
  "30064771149" -> "30064771154"  [ label = "CDG: "] 
  "30064771149" -> "30064771155"  [ label = "CDG: "] 
  "30064771152" -> "146028888067"  [ label = "CDG: "] 
  "30064771152" -> "30064771156"  [ label = "CDG: "] 
  "30064771152" -> "30064771157"  [ label = "CDG: "] 
  "30064771152" -> "30064771158"  [ label = "CDG: "] 
  "30064771152" -> "30064771159"  [ label = "CDG: "] 
  "30064771157" -> "146028888068"  [ label = "CDG: "] 
  "30064771157" -> "30064771148"  [ label = "CDG: "] 
  "30064771157" -> "30064771147"  [ label = "CDG: "] 
  "30064771157" -> "30064771160"  [ label = "CDG: "] 
  "68719476761" -> "55834574850"  [ label = "CDG: "] 
  "68719476761" -> "55834574851"  [ label = "CDG: "] 
  "68719476761" -> "55834574849"  [ label = "CDG: "] 
  "68719476761" -> "30064771096"  [ label = "CDG: "] 
  "68719476761" -> "30064771097"  [ label = "CDG: "] 
  "68719476761" -> "30064771100"  [ label = "CDG: "] 
  "68719476761" -> "30064771101"  [ label = "CDG: "] 
  "68719476761" -> "30064771098"  [ label = "CDG: "] 
  "68719476761" -> "30064771099"  [ label = "CDG: "] 
  "68719476761" -> "30064771104"  [ label = "CDG: "] 
  "68719476761" -> "30064771105"  [ label = "CDG: "] 
  "68719476761" -> "30064771102"  [ label = "CDG: "] 
  "68719476761" -> "30064771103"  [ label = "CDG: "] 
  "68719476761" -> "30064771108"  [ label = "CDG: "] 
  "68719476761" -> "30064771109"  [ label = "CDG: "] 
  "68719476761" -> "30064771106"  [ label = "CDG: "] 
  "68719476761" -> "30064771107"  [ label = "CDG: "] 
  "68719476761" -> "55834574852"  [ label = "CDG: "] 
}
"""
)
