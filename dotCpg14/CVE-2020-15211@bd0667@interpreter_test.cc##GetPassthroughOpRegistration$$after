[33mval[0m [36mres463[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "GetPassthroughOpRegistration" {  
"111669149703" [label = <(METHOD,GetPassthroughOpRegistration)<SUB>1</SUB>> ]
"25769803787" [label = <(BLOCK,{
  TfLiteRegistration reg = {nullptr, nullptr,...,{
  TfLiteRegistration reg = {nullptr, nullptr,...)<SUB>1</SUB>> ]
"94489280525" [label = <(LOCAL,TfLiteRegistration reg: TfLiteRegistration)<SUB>2</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.assignment,reg = {nullptr, nullptr, nullptr, nullptr})<SUB>2</SUB>> ]
"68719476810" [label = <(IDENTIFIER,reg,reg = {nullptr, nullptr, nullptr, nullptr})<SUB>2</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.arrayInitializer,{nullptr, nullptr, nullptr, nullptr})<SUB>2</SUB>> ]
"90194313230" [label = <(LITERAL,nullptr,{nullptr, nullptr, nullptr, nullptr})<SUB>2</SUB>> ]
"90194313231" [label = <(LITERAL,nullptr,{nullptr, nullptr, nullptr, nullptr})<SUB>2</SUB>> ]
"90194313232" [label = <(LITERAL,nullptr,{nullptr, nullptr, nullptr, nullptr})<SUB>2</SUB>> ]
"90194313233" [label = <(LITERAL,nullptr,{nullptr, nullptr, nullptr, nullptr})<SUB>2</SUB>> ]
"30064771163" [label = <(&lt;operator&gt;.assignment,reg.init = [](TfLiteContext* context, const cha...)<SUB>3</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.fieldAccess,reg.init)<SUB>3</SUB>> ]
"68719476811" [label = <(IDENTIFIER,reg,reg.init = [](TfLiteContext* context, const cha...)<SUB>3</SUB>> ]
"55834574875" [label = <(FIELD_IDENTIFIER,init,init)<SUB>3</SUB>> ]
"124554051586" [label = <(METHOD_REF,[](TfLiteContext* context, const char*, size_t)...,reg.init = [](TfLiteContext* context, const cha...)<SUB>3</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.assignment,reg.free = [](TfLiteContext* context, void* buf...)<SUB>8</SUB>> ]
"30064771166" [label = <(&lt;operator&gt;.fieldAccess,reg.free)<SUB>8</SUB>> ]
"68719476812" [label = <(IDENTIFIER,reg,reg.free = [](TfLiteContext* context, void* buf...)<SUB>8</SUB>> ]
"55834574876" [label = <(FIELD_IDENTIFIER,free,free)<SUB>8</SUB>> ]
"124554051587" [label = <(METHOD_REF,[](TfLiteContext* context, void* buffer) {
    ...,reg.free = [](TfLiteContext* context, void* buf...)<SUB>8</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.assignment,reg.prepare = [](TfLiteContext* context, TfLite...)<SUB>11</SUB>> ]
"30064771168" [label = <(&lt;operator&gt;.fieldAccess,reg.prepare)<SUB>11</SUB>> ]
"68719476813" [label = <(IDENTIFIER,reg,reg.prepare = [](TfLiteContext* context, TfLite...)<SUB>11</SUB>> ]
"55834574877" [label = <(FIELD_IDENTIFIER,prepare,prepare)<SUB>11</SUB>> ]
"124554051588" [label = <(METHOD_REF,[](TfLiteContext* context, TfLiteNode* node) {
...,reg.prepare = [](TfLiteContext* context, TfLite...)<SUB>11</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.assignment,reg.invoke = [](TfLiteContext* context, TfLiteN...)<SUB>40</SUB>> ]
"30064771170" [label = <(&lt;operator&gt;.fieldAccess,reg.invoke)<SUB>40</SUB>> ]
"68719476814" [label = <(IDENTIFIER,reg,reg.invoke = [](TfLiteContext* context, TfLiteN...)<SUB>40</SUB>> ]
"55834574878" [label = <(FIELD_IDENTIFIER,invoke,invoke)<SUB>40</SUB>> ]
"124554051589" [label = <(METHOD_REF,[](TfLiteContext* context, TfLiteNode* node) {
...,reg.invoke = [](TfLiteContext* context, TfLiteN...)<SUB>40</SUB>> ]
"146028888068" [label = <(RETURN,return reg;,return reg;)<SUB>58</SUB>> ]
"68719476815" [label = <(IDENTIFIER,reg,return reg;)<SUB>58</SUB>> ]
"128849018886" [label = <(METHOD_RETURN,TfLiteRegistration)<SUB>1</SUB>> ]
  "111669149703" -> "25769803787"  [ label = "AST: "] 
  "111669149703" -> "128849018886"  [ label = "AST: "] 
  "25769803787" -> "94489280525"  [ label = "AST: "] 
  "25769803787" -> "30064771161"  [ label = "AST: "] 
  "25769803787" -> "30064771163"  [ label = "AST: "] 
  "25769803787" -> "30064771165"  [ label = "AST: "] 
  "25769803787" -> "30064771167"  [ label = "AST: "] 
  "25769803787" -> "30064771169"  [ label = "AST: "] 
  "25769803787" -> "146028888068"  [ label = "AST: "] 
  "30064771161" -> "68719476810"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771162" -> "90194313230"  [ label = "AST: "] 
  "30064771162" -> "90194313231"  [ label = "AST: "] 
  "30064771162" -> "90194313232"  [ label = "AST: "] 
  "30064771162" -> "90194313233"  [ label = "AST: "] 
  "30064771163" -> "30064771164"  [ label = "AST: "] 
  "30064771163" -> "124554051586"  [ label = "AST: "] 
  "30064771164" -> "68719476811"  [ label = "AST: "] 
  "30064771164" -> "55834574875"  [ label = "AST: "] 
  "30064771165" -> "30064771166"  [ label = "AST: "] 
  "30064771165" -> "124554051587"  [ label = "AST: "] 
  "30064771166" -> "68719476812"  [ label = "AST: "] 
  "30064771166" -> "55834574876"  [ label = "AST: "] 
  "30064771167" -> "30064771168"  [ label = "AST: "] 
  "30064771167" -> "124554051588"  [ label = "AST: "] 
  "30064771168" -> "68719476813"  [ label = "AST: "] 
  "30064771168" -> "55834574877"  [ label = "AST: "] 
  "30064771169" -> "30064771170"  [ label = "AST: "] 
  "30064771169" -> "124554051589"  [ label = "AST: "] 
  "30064771170" -> "68719476814"  [ label = "AST: "] 
  "30064771170" -> "55834574878"  [ label = "AST: "] 
  "146028888068" -> "68719476815"  [ label = "AST: "] 
  "30064771161" -> "55834574875"  [ label = "CFG: "] 
  "30064771163" -> "55834574876"  [ label = "CFG: "] 
  "30064771165" -> "55834574877"  [ label = "CFG: "] 
  "30064771167" -> "55834574878"  [ label = "CFG: "] 
  "30064771169" -> "146028888068"  [ label = "CFG: "] 
  "146028888068" -> "128849018886"  [ label = "CFG: "] 
  "30064771162" -> "30064771161"  [ label = "CFG: "] 
  "30064771164" -> "124554051586"  [ label = "CFG: "] 
  "124554051586" -> "30064771163"  [ label = "CFG: "] 
  "30064771166" -> "124554051587"  [ label = "CFG: "] 
  "124554051587" -> "30064771165"  [ label = "CFG: "] 
  "30064771168" -> "124554051588"  [ label = "CFG: "] 
  "124554051588" -> "30064771167"  [ label = "CFG: "] 
  "30064771170" -> "124554051589"  [ label = "CFG: "] 
  "124554051589" -> "30064771169"  [ label = "CFG: "] 
  "55834574875" -> "30064771164"  [ label = "CFG: "] 
  "55834574876" -> "30064771166"  [ label = "CFG: "] 
  "55834574877" -> "30064771168"  [ label = "CFG: "] 
  "55834574878" -> "30064771170"  [ label = "CFG: "] 
  "111669149703" -> "30064771162"  [ label = "CFG: "] 
  "146028888068" -> "128849018886"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771161" -> "128849018886"  [ label = "DDG: reg"] 
  "30064771161" -> "128849018886"  [ label = "DDG: {nullptr, nullptr, nullptr, nullptr}"] 
  "30064771161" -> "128849018886"  [ label = "DDG: reg = {nullptr, nullptr, nullptr, nullptr}"] 
  "30064771163" -> "128849018886"  [ label = "DDG: reg.init"] 
  "30064771163" -> "128849018886"  [ label = "DDG: reg.init = [](TfLiteContext* context, const char*, size_t) -&gt; void* {
    auto* first_new_tensor = new int;
    context-&gt;AddTensors(context, 2, first_new_tensor);
    return first_new_tensor;
  }"] 
  "30064771165" -> "128849018886"  [ label = "DDG: reg.free"] 
  "30064771165" -> "128849018886"  [ label = "DDG: reg.free = [](TfLiteContext* context, void* buffer) {
    delete static_cast&lt;int*&gt;(buffer);
  }"] 
  "30064771167" -> "128849018886"  [ label = "DDG: reg.prepare"] 
  "30064771167" -> "128849018886"  [ label = "DDG: reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {
    auto* first_new_tensor = static_cast&lt;int*&gt;(node-&gt;user_data);

    const TfLiteTensor* tensor0;
    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &amp;tensor0));
    TfLiteTensor* tensor1;
    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &amp;tensor1));

    TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0-&gt;dims);
    TF_LITE_ENSURE_STATUS(context-&gt;ResizeTensor(context, tensor1, newSize));

    TfLiteIntArrayFree(node-&gt;temporaries);
    node-&gt;temporaries = TfLiteIntArrayCreate(2);
    for (int i = 0; i &lt; 2; ++i) {
      node-&gt;temporaries-&gt;data[i] = *(first_new_tensor) + i;
    }

    auto setup_temporary = [&amp;](int id) {
      TfLiteTensor* tmp = &amp;context-&gt;tensors[id];
      tmp-&gt;type = kTfLiteFloat32;
      tmp-&gt;allocation_type = kTfLiteArenaRw;
      return context-&gt;ResizeTensor(context, tmp,
                                   TfLiteIntArrayCopy(tensor0-&gt;dims));
    };
    TF_LITE_ENSURE_STATUS(se..."] 
  "30064771169" -> "128849018886"  [ label = "DDG: reg.invoke"] 
  "30064771169" -> "128849018886"  [ label = "DDG: reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {
    const TfLiteTensor* a0;
    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &amp;a0));

    auto populate = [&amp;](int id) {
      TfLiteTensor* t = &amp;context-&gt;tensors[id];
      int num = a0-&gt;dims-&gt;data[0];
      for (int i = 0; i &lt; num; i++) {
        t-&gt;data.f[i] = a0-&gt;data.f[i];
      }
    };

    populate(node-&gt;outputs-&gt;data[0]);
    populate(node-&gt;temporaries-&gt;data[0]);
    populate(node-&gt;temporaries-&gt;data[1]);
    return kTfLiteOk;
  }"] 
  "30064771162" -> "30064771161"  [ label = "DDG: nullptr"] 
  "111669149703" -> "30064771163"  [ label = "DDG: "] 
  "111669149703" -> "30064771165"  [ label = "DDG: "] 
  "111669149703" -> "30064771167"  [ label = "DDG: "] 
  "111669149703" -> "30064771169"  [ label = "DDG: "] 
  "68719476815" -> "146028888068"  [ label = "DDG: reg"] 
  "30064771169" -> "68719476815"  [ label = "DDG: reg.invoke"] 
  "30064771167" -> "68719476815"  [ label = "DDG: reg.prepare"] 
  "30064771161" -> "68719476815"  [ label = "DDG: reg"] 
  "30064771165" -> "68719476815"  [ label = "DDG: reg.free"] 
  "30064771163" -> "68719476815"  [ label = "DDG: reg.init"] 
  "111669149703" -> "68719476815"  [ label = "DDG: "] 
  "111669149703" -> "30064771162"  [ label = "DDG: "] 
}
"""
)
