[33mval[0m [36mres822[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "path_in" {  
"111669149697" [label = <(METHOD,path_in)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,PG_FUNCTION_ARGS)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	char	   *str = PG_GETARG_CSTRING(0);
	PATH	 ...,{
	char	   *str = PG_GETARG_CSTRING(0);
	PATH	 ...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,char* str: char*)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,*str = PG_GETARG_CSTRING(0))<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,str,*str = PG_GETARG_CSTRING(0))<SUB>3</SUB>> ]
"30064771073" [label = <(PG_GETARG_CSTRING,PG_GETARG_CSTRING(0))<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,0,PG_GETARG_CSTRING(0))<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,PATH* path: PATH*)<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,int isopen: int)<SUB>5</SUB>> ]
"94489280515" [label = <(LOCAL,char* s: char*)<SUB>6</SUB>> ]
"94489280516" [label = <(LOCAL,int npts: int)<SUB>7</SUB>> ]
"94489280517" [label = <(LOCAL,int size: int)<SUB>8</SUB>> ]
"94489280518" [label = <(LOCAL,int depth: int)<SUB>9</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,depth = 0)<SUB>9</SUB>> ]
"68719476737" [label = <(IDENTIFIER,depth,depth = 0)<SUB>9</SUB>> ]
"90194313217" [label = <(LITERAL,0,depth = 0)<SUB>9</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if ((npts = pair_count(str, ',')) &lt;= 0))<SUB>11</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.lessEqualsThan,(npts = pair_count(str, ',')) &lt;= 0)<SUB>11</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,npts = pair_count(str, ','))<SUB>11</SUB>> ]
"68719476738" [label = <(IDENTIFIER,npts,npts = pair_count(str, ','))<SUB>11</SUB>> ]
"30064771077" [label = <(pair_count,pair_count(str, ','))<SUB>11</SUB>> ]
"68719476739" [label = <(IDENTIFIER,str,pair_count(str, ','))<SUB>11</SUB>> ]
"90194313218" [label = <(LITERAL,',',pair_count(str, ','))<SUB>11</SUB>> ]
"90194313219" [label = <(LITERAL,0,(npts = pair_count(str, ',')) &lt;= 0)<SUB>11</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>> ]
"30064771078" [label = <(ereport,ereport(ERROR,
				(errcode(ERRCODE_INVALID_TEX...)<SUB>12</SUB>> ]
"68719476740" [label = <(IDENTIFIER,ERROR,ereport(ERROR,
				(errcode(ERRCODE_INVALID_TEX...)<SUB>12</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.bracketedPrimary,(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
...)<SUB>13</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.expressionList,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
	...)<SUB>13</SUB>> ]
"30064771081" [label = <(errcode,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION))<SUB>13</SUB>> ]
"68719476741" [label = <(IDENTIFIER,ERRCODE_INVALID_TEXT_REPRESENTATION,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION))<SUB>13</SUB>> ]
"30064771082" [label = <(errmsg,errmsg(&quot;invalid input syntax for type path: \&quot;%...)<SUB>14</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;,errmsg(&quot;invalid input syntax for type path: \&quot;%...)<SUB>14</SUB>> ]
"68719476742" [label = <(IDENTIFIER,str,errmsg(&quot;invalid input syntax for type path: \&quot;%...)<SUB>14</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,s = str)<SUB>16</SUB>> ]
"68719476743" [label = <(IDENTIFIER,s,s = str)<SUB>16</SUB>> ]
"68719476744" [label = <(IDENTIFIER,str,s = str)<SUB>16</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,WHILE,while (isspace((unsigned char) *s)))<SUB>17</SUB>> ]
"30064771084" [label = <(isspace,isspace((unsigned char) *s))<SUB>17</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.cast,(unsigned char) *s)<SUB>17</SUB>> ]
"184683593728" [label = <(UNKNOWN,unsigned char,unsigned char)<SUB>17</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indirection,*s)<SUB>17</SUB>> ]
"68719476745" [label = <(IDENTIFIER,s,(unsigned char) *s)<SUB>17</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.postIncrement,s++)<SUB>18</SUB>> ]
"68719476746" [label = <(IDENTIFIER,s,s++)<SUB>18</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if ((*s == LDELIM) &amp;&amp; (strrchr(s, LDELIM) == s)))<SUB>21</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.logicalAnd,(*s == LDELIM) &amp;&amp; (strrchr(s, LDELIM) == s))<SUB>21</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.equals,*s == LDELIM)<SUB>21</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.indirection,*s)<SUB>21</SUB>> ]
"68719476747" [label = <(IDENTIFIER,s,*s == LDELIM)<SUB>21</SUB>> ]
"68719476748" [label = <(IDENTIFIER,LDELIM,*s == LDELIM)<SUB>21</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.equals,strrchr(s, LDELIM) == s)<SUB>21</SUB>> ]
"30064771092" [label = <(strrchr,strrchr(s, LDELIM))<SUB>21</SUB>> ]
"68719476749" [label = <(IDENTIFIER,s,strrchr(s, LDELIM))<SUB>21</SUB>> ]
"68719476750" [label = <(IDENTIFIER,LDELIM,strrchr(s, LDELIM))<SUB>21</SUB>> ]
"68719476751" [label = <(IDENTIFIER,s,strrchr(s, LDELIM) == s)<SUB>21</SUB>> ]
"25769803779" [label = <(BLOCK,{
		s++;
		depth++;
	},{
		s++;
		depth++;
	})<SUB>22</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.postIncrement,s++)<SUB>23</SUB>> ]
"68719476752" [label = <(IDENTIFIER,s,s++)<SUB>23</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.postIncrement,depth++)<SUB>24</SUB>> ]
"68719476753" [label = <(IDENTIFIER,depth,depth++)<SUB>24</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assignment,size = offsetof(PATH, p[0]) +sizeof(path-&gt;p[0])...)<SUB>27</SUB>> ]
"68719476754" [label = <(IDENTIFIER,size,size = offsetof(PATH, p[0]) +sizeof(path-&gt;p[0])...)<SUB>27</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.addition,offsetof(PATH, p[0]) +sizeof(path-&gt;p[0]) * npts)<SUB>27</SUB>> ]
"30064771097" [label = <(offsetof,offsetof(PATH, p[0]))<SUB>27</SUB>> ]
"68719476755" [label = <(IDENTIFIER,PATH,offsetof(PATH, p[0]))<SUB>27</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.indirectIndexAccess,p[0])<SUB>27</SUB>> ]
"68719476756" [label = <(IDENTIFIER,p,offsetof(PATH, p[0]))<SUB>27</SUB>> ]
"90194313221" [label = <(LITERAL,0,offsetof(PATH, p[0]))<SUB>27</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.multiplication,sizeof(path-&gt;p[0]) * npts)<SUB>27</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.sizeOf,sizeof(path-&gt;p[0]))<SUB>27</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.indirectIndexAccess,path-&gt;p[0])<SUB>27</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.indirectFieldAccess,path-&gt;p)<SUB>27</SUB>> ]
"68719476757" [label = <(IDENTIFIER,path,sizeof(path-&gt;p[0]))<SUB>27</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,p,p)<SUB>27</SUB>> ]
"90194313222" [label = <(LITERAL,0,sizeof(path-&gt;p[0]))<SUB>27</SUB>> ]
"68719476758" [label = <(IDENTIFIER,npts,sizeof(path-&gt;p[0]) * npts)<SUB>27</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,path = (PATH *) palloc(size))<SUB>28</SUB>> ]
"68719476759" [label = <(IDENTIFIER,path,path = (PATH *) palloc(size))<SUB>28</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.cast,(PATH *) palloc(size))<SUB>28</SUB>> ]
"184683593729" [label = <(UNKNOWN,PATH *,PATH *)<SUB>28</SUB>> ]
"30064771105" [label = <(palloc,palloc(size))<SUB>28</SUB>> ]
"68719476760" [label = <(IDENTIFIER,size,palloc(size))<SUB>28</SUB>> ]
"30064771106" [label = <(SET_VARSIZE,SET_VARSIZE(path, size))<SUB>30</SUB>> ]
"68719476761" [label = <(IDENTIFIER,path,SET_VARSIZE(path, size))<SUB>30</SUB>> ]
"68719476762" [label = <(IDENTIFIER,size,SET_VARSIZE(path, size))<SUB>30</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.assignment,path-&gt;npts = npts)<SUB>31</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.indirectFieldAccess,path-&gt;npts)<SUB>31</SUB>> ]
"68719476763" [label = <(IDENTIFIER,path,path-&gt;npts = npts)<SUB>31</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,npts,npts)<SUB>31</SUB>> ]
"68719476764" [label = <(IDENTIFIER,npts,path-&gt;npts = npts)<SUB>31</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if ((!path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-&gt;p[0])))
	&amp;&amp; (!((depth == 0) &amp;&amp; (*s == '\0'))) &amp;&amp; !((depth &gt;= 1) &amp;&amp; (*s == RDELIM))))<SUB>33</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.logicalAnd,(!path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(pat...)<SUB>33</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.logicalAnd,(!path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(pat...)<SUB>33</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.logicalNot,!path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path...)<SUB>33</SUB>> ]
"30064771112" [label = <(path_decode,path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-...)<SUB>33</SUB>> ]
"68719476765" [label = <(IDENTIFIER,TRUE,path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-...)<SUB>33</SUB>> ]
"68719476766" [label = <(IDENTIFIER,npts,path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-...)<SUB>33</SUB>> ]
"68719476767" [label = <(IDENTIFIER,s,path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-...)<SUB>33</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.addressOf,&amp;isopen)<SUB>33</SUB>> ]
"68719476768" [label = <(IDENTIFIER,isopen,path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-...)<SUB>33</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.addressOf,&amp;s)<SUB>33</SUB>> ]
"68719476769" [label = <(IDENTIFIER,s,path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-...)<SUB>33</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.addressOf,&amp;(path-&gt;p[0]))<SUB>33</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.indirectIndexAccess,path-&gt;p[0])<SUB>33</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.indirectFieldAccess,path-&gt;p)<SUB>33</SUB>> ]
"68719476770" [label = <(IDENTIFIER,path,path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-...)<SUB>33</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,p,p)<SUB>33</SUB>> ]
"90194313223" [label = <(LITERAL,0,path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-...)<SUB>33</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.logicalNot,!((depth == 0) &amp;&amp; (*s == '\0')))<SUB>34</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.logicalAnd,(depth == 0) &amp;&amp; (*s == '\0'))<SUB>34</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.equals,depth == 0)<SUB>34</SUB>> ]
"68719476771" [label = <(IDENTIFIER,depth,depth == 0)<SUB>34</SUB>> ]
"90194313224" [label = <(LITERAL,0,depth == 0)<SUB>34</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.equals,*s == '\0')<SUB>34</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.indirection,*s)<SUB>34</SUB>> ]
"68719476772" [label = <(IDENTIFIER,s,*s == '\0')<SUB>34</SUB>> ]
"90194313225" [label = <(LITERAL,'\0',*s == '\0')<SUB>34</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.logicalNot,!((depth &gt;= 1) &amp;&amp; (*s == RDELIM)))<SUB>34</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.logicalAnd,(depth &gt;= 1) &amp;&amp; (*s == RDELIM))<SUB>34</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.greaterEqualsThan,depth &gt;= 1)<SUB>34</SUB>> ]
"68719476773" [label = <(IDENTIFIER,depth,depth &gt;= 1)<SUB>34</SUB>> ]
"90194313226" [label = <(LITERAL,1,depth &gt;= 1)<SUB>34</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.equals,*s == RDELIM)<SUB>34</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.indirection,*s)<SUB>34</SUB>> ]
"68719476774" [label = <(IDENTIFIER,s,*s == RDELIM)<SUB>34</SUB>> ]
"68719476775" [label = <(IDENTIFIER,RDELIM,*s == RDELIM)<SUB>34</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>> ]
"30064771128" [label = <(ereport,ereport(ERROR,
				(errcode(ERRCODE_INVALID_TEX...)<SUB>35</SUB>> ]
"68719476776" [label = <(IDENTIFIER,ERROR,ereport(ERROR,
				(errcode(ERRCODE_INVALID_TEX...)<SUB>35</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.bracketedPrimary,(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
...)<SUB>36</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.expressionList,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
	...)<SUB>36</SUB>> ]
"30064771131" [label = <(errcode,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION))<SUB>36</SUB>> ]
"68719476777" [label = <(IDENTIFIER,ERRCODE_INVALID_TEXT_REPRESENTATION,errcode(ERRCODE_INVALID_TEXT_REPRESENTATION))<SUB>36</SUB>> ]
"30064771132" [label = <(errmsg,errmsg(&quot;invalid input syntax for type path: \&quot;%...)<SUB>37</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;,errmsg(&quot;invalid input syntax for type path: \&quot;%...)<SUB>37</SUB>> ]
"68719476778" [label = <(IDENTIFIER,str,errmsg(&quot;invalid input syntax for type path: \&quot;%...)<SUB>37</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.assignment,path-&gt;closed = (!isopen))<SUB>39</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.indirectFieldAccess,path-&gt;closed)<SUB>39</SUB>> ]
"68719476779" [label = <(IDENTIFIER,path,path-&gt;closed = (!isopen))<SUB>39</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,closed,closed)<SUB>39</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.logicalNot,!isopen)<SUB>39</SUB>> ]
"68719476780" [label = <(IDENTIFIER,isopen,!isopen)<SUB>39</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.assignment,path-&gt;dummy = 0)<SUB>41</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.indirectFieldAccess,path-&gt;dummy)<SUB>41</SUB>> ]
"68719476781" [label = <(IDENTIFIER,path,path-&gt;dummy = 0)<SUB>41</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,dummy,dummy)<SUB>41</SUB>> ]
"90194313228" [label = <(LITERAL,0,path-&gt;dummy = 0)<SUB>41</SUB>> ]
"30064771138" [label = <(PG_RETURN_PATH_P,PG_RETURN_PATH_P(path))<SUB>43</SUB>> ]
"68719476782" [label = <(IDENTIFIER,path,PG_RETURN_PATH_P(path))<SUB>43</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "30064771103"  [ label = "AST: "] 
  "25769803777" -> "30064771106"  [ label = "AST: "] 
  "25769803777" -> "30064771107"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "30064771133"  [ label = "AST: "] 
  "25769803777" -> "30064771136"  [ label = "AST: "] 
  "25769803777" -> "30064771138"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "47244640256" -> "30064771075"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "90194313219"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476739"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "25769803778" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "68719476741"  [ label = "AST: "] 
  "30064771082" -> "90194313220"  [ label = "AST: "] 
  "30064771082" -> "68719476742"  [ label = "AST: "] 
  "30064771083" -> "68719476743"  [ label = "AST: "] 
  "30064771083" -> "68719476744"  [ label = "AST: "] 
  "47244640257" -> "30064771084"  [ label = "AST: "] 
  "47244640257" -> "30064771087"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "184683593728"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476745"  [ label = "AST: "] 
  "30064771087" -> "68719476746"  [ label = "AST: "] 
  "47244640258" -> "30064771088"  [ label = "AST: "] 
  "47244640258" -> "25769803779"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "30064771091"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "68719476748"  [ label = "AST: "] 
  "30064771090" -> "68719476747"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "68719476751"  [ label = "AST: "] 
  "30064771092" -> "68719476749"  [ label = "AST: "] 
  "30064771092" -> "68719476750"  [ label = "AST: "] 
  "25769803779" -> "30064771093"  [ label = "AST: "] 
  "25769803779" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "68719476752"  [ label = "AST: "] 
  "30064771094" -> "68719476753"  [ label = "AST: "] 
  "30064771095" -> "68719476754"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "30064771099"  [ label = "AST: "] 
  "30064771097" -> "68719476755"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476756"  [ label = "AST: "] 
  "30064771098" -> "90194313221"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771099" -> "68719476758"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "90194313222"  [ label = "AST: "] 
  "30064771102" -> "68719476757"  [ label = "AST: "] 
  "30064771102" -> "55834574848"  [ label = "AST: "] 
  "30064771103" -> "68719476759"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "184683593729"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476760"  [ label = "AST: "] 
  "30064771106" -> "68719476761"  [ label = "AST: "] 
  "30064771106" -> "68719476762"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771107" -> "68719476764"  [ label = "AST: "] 
  "30064771108" -> "68719476763"  [ label = "AST: "] 
  "30064771108" -> "55834574849"  [ label = "AST: "] 
  "47244640259" -> "30064771109"  [ label = "AST: "] 
  "47244640259" -> "25769803780"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771109" -> "30064771123"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771110" -> "30064771118"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "68719476765"  [ label = "AST: "] 
  "30064771112" -> "68719476766"  [ label = "AST: "] 
  "30064771112" -> "68719476767"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771112" -> "30064771114"  [ label = "AST: "] 
  "30064771112" -> "30064771115"  [ label = "AST: "] 
  "30064771113" -> "68719476768"  [ label = "AST: "] 
  "30064771114" -> "68719476769"  [ label = "AST: "] 
  "30064771115" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "30064771117"  [ label = "AST: "] 
  "30064771116" -> "90194313223"  [ label = "AST: "] 
  "30064771117" -> "68719476770"  [ label = "AST: "] 
  "30064771117" -> "55834574850"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771119" -> "30064771121"  [ label = "AST: "] 
  "30064771120" -> "68719476771"  [ label = "AST: "] 
  "30064771120" -> "90194313224"  [ label = "AST: "] 
  "30064771121" -> "30064771122"  [ label = "AST: "] 
  "30064771121" -> "90194313225"  [ label = "AST: "] 
  "30064771122" -> "68719476772"  [ label = "AST: "] 
  "30064771123" -> "30064771124"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "30064771126"  [ label = "AST: "] 
  "30064771125" -> "68719476773"  [ label = "AST: "] 
  "30064771125" -> "90194313226"  [ label = "AST: "] 
  "30064771126" -> "30064771127"  [ label = "AST: "] 
  "30064771126" -> "68719476775"  [ label = "AST: "] 
  "30064771127" -> "68719476774"  [ label = "AST: "] 
  "25769803780" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "68719476776"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771130" -> "30064771132"  [ label = "AST: "] 
  "30064771131" -> "68719476777"  [ label = "AST: "] 
  "30064771132" -> "90194313227"  [ label = "AST: "] 
  "30064771132" -> "68719476778"  [ label = "AST: "] 
  "30064771133" -> "30064771134"  [ label = "AST: "] 
  "30064771133" -> "30064771135"  [ label = "AST: "] 
  "30064771134" -> "68719476779"  [ label = "AST: "] 
  "30064771134" -> "55834574851"  [ label = "AST: "] 
  "30064771135" -> "68719476780"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771136" -> "90194313228"  [ label = "AST: "] 
  "30064771137" -> "68719476781"  [ label = "AST: "] 
  "30064771137" -> "55834574852"  [ label = "AST: "] 
  "30064771138" -> "68719476782"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771083" -> "184683593728"  [ label = "CFG: "] 
  "30064771095" -> "184683593729"  [ label = "CFG: "] 
  "30064771103" -> "30064771106"  [ label = "CFG: "] 
  "30064771106" -> "55834574849"  [ label = "CFG: "] 
  "30064771107" -> "30064771113"  [ label = "CFG: "] 
  "30064771133" -> "55834574852"  [ label = "CFG: "] 
  "30064771136" -> "30064771138"  [ label = "CFG: "] 
  "30064771138" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771081"  [ label = "CFG: "] 
  "30064771075" -> "30064771083"  [ label = "CFG: "] 
  "30064771084" -> "30064771087"  [ label = "CFG: "] 
  "30064771084" -> "30064771090"  [ label = "CFG: "] 
  "30064771087" -> "184683593728"  [ label = "CFG: "] 
  "30064771088" -> "30064771093"  [ label = "CFG: "] 
  "30064771088" -> "30064771098"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "30064771109" -> "30064771131"  [ label = "CFG: "] 
  "30064771109" -> "55834574851"  [ label = "CFG: "] 
  "30064771134" -> "30064771135"  [ label = "CFG: "] 
  "30064771135" -> "30064771133"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771078" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771089" -> "30064771092"  [ label = "CFG: "] 
  "30064771091" -> "30064771088"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771094" -> "30064771098"  [ label = "CFG: "] 
  "30064771097" -> "55834574848"  [ label = "CFG: "] 
  "30064771099" -> "30064771096"  [ label = "CFG: "] 
  "184683593729" -> "30064771105"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "55834574849" -> "30064771108"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771110" -> "30064771125"  [ label = "CFG: "] 
  "30064771123" -> "30064771109"  [ label = "CFG: "] 
  "30064771128" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771134"  [ label = "CFG: "] 
  "55834574852" -> "30064771137"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "184683593728" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771111" -> "30064771120"  [ label = "CFG: "] 
  "30064771118" -> "30064771110"  [ label = "CFG: "] 
  "30064771124" -> "30064771123"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771119" -> "30064771118"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771125" -> "30064771127"  [ label = "CFG: "] 
  "30064771126" -> "30064771124"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771080"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771114" -> "55834574850"  [ label = "CFG: "] 
  "30064771115" -> "30064771112"  [ label = "CFG: "] 
  "30064771120" -> "30064771119"  [ label = "CFG: "] 
  "30064771120" -> "30064771122"  [ label = "CFG: "] 
  "30064771121" -> "30064771119"  [ label = "CFG: "] 
  "30064771127" -> "30064771126"  [ label = "CFG: "] 
  "30064771131" -> "30064771132"  [ label = "CFG: "] 
  "30064771132" -> "30064771130"  [ label = "CFG: "] 
  "55834574848" -> "30064771102"  [ label = "CFG: "] 
  "30064771116" -> "30064771115"  [ label = "CFG: "] 
  "30064771122" -> "30064771121"  [ label = "CFG: "] 
  "30064771117" -> "30064771116"  [ label = "CFG: "] 
  "55834574850" -> "30064771117"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "115964116992" -> "128849018880"  [ label = "DDG: PG_FUNCTION_ARGS"] 
  "30064771072" -> "128849018880"  [ label = "DDG: PG_GETARG_CSTRING(0)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: *str = PG_GETARG_CSTRING(0)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: depth"] 
  "30064771074" -> "128849018880"  [ label = "DDG: depth = 0"] 
  "30064771076" -> "128849018880"  [ label = "DDG: pair_count(str, ',')"] 
  "30064771075" -> "128849018880"  [ label = "DDG: npts = pair_count(str, ',')"] 
  "30064771075" -> "128849018880"  [ label = "DDG: (npts = pair_count(str, ',')) &lt;= 0"] 
  "30064771078" -> "128849018880"  [ label = "DDG: ERROR"] 
  "30064771081" -> "128849018880"  [ label = "DDG: ERRCODE_INVALID_TEXT_REPRESENTATION"] 
  "30064771080" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
				 errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
				 errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str))"] 
  "30064771078" -> "128849018880"  [ label = "DDG: ereport(ERROR,
				(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
				 errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)))"] 
  "30064771083" -> "128849018880"  [ label = "DDG: str"] 
  "30064771083" -> "128849018880"  [ label = "DDG: s = str"] 
  "30064771084" -> "128849018880"  [ label = "DDG: (unsigned char) *s"] 
  "30064771084" -> "128849018880"  [ label = "DDG: isspace((unsigned char) *s)"] 
  "30064771089" -> "128849018880"  [ label = "DDG: *s"] 
  "30064771089" -> "128849018880"  [ label = "DDG: LDELIM"] 
  "30064771088" -> "128849018880"  [ label = "DDG: *s == LDELIM"] 
  "30064771092" -> "128849018880"  [ label = "DDG: LDELIM"] 
  "30064771091" -> "128849018880"  [ label = "DDG: strrchr(s, LDELIM)"] 
  "30064771088" -> "128849018880"  [ label = "DDG: strrchr(s, LDELIM) == s"] 
  "30064771088" -> "128849018880"  [ label = "DDG: (*s == LDELIM) &amp;&amp; (strrchr(s, LDELIM) == s)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: s++"] 
  "30064771094" -> "128849018880"  [ label = "DDG: depth"] 
  "30064771094" -> "128849018880"  [ label = "DDG: depth++"] 
  "30064771097" -> "128849018880"  [ label = "DDG: p[0]"] 
  "30064771096" -> "128849018880"  [ label = "DDG: offsetof(PATH, p[0])"] 
  "30064771100" -> "128849018880"  [ label = "DDG: path-&gt;p[0]"] 
  "30064771096" -> "128849018880"  [ label = "DDG: sizeof(path-&gt;p[0]) * npts"] 
  "30064771095" -> "128849018880"  [ label = "DDG: offsetof(PATH, p[0]) +sizeof(path-&gt;p[0]) * npts"] 
  "30064771095" -> "128849018880"  [ label = "DDG: size = offsetof(PATH, p[0]) +sizeof(path-&gt;p[0]) * npts"] 
  "30064771104" -> "128849018880"  [ label = "DDG: palloc(size)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: (PATH *) palloc(size)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: path = (PATH *) palloc(size)"] 
  "30064771106" -> "128849018880"  [ label = "DDG: size"] 
  "30064771106" -> "128849018880"  [ label = "DDG: SET_VARSIZE(path, size)"] 
  "30064771107" -> "128849018880"  [ label = "DDG: path-&gt;npts"] 
  "30064771107" -> "128849018880"  [ label = "DDG: path-&gt;npts = npts"] 
  "30064771112" -> "128849018880"  [ label = "DDG: npts"] 
  "30064771112" -> "128849018880"  [ label = "DDG: s"] 
  "30064771112" -> "128849018880"  [ label = "DDG: &amp;isopen"] 
  "30064771112" -> "128849018880"  [ label = "DDG: &amp;s"] 
  "30064771112" -> "128849018880"  [ label = "DDG: &amp;(path-&gt;p[0])"] 
  "30064771111" -> "128849018880"  [ label = "DDG: path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-&gt;p[0]))"] 
  "30064771110" -> "128849018880"  [ label = "DDG: !path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-&gt;p[0]))"] 
  "30064771120" -> "128849018880"  [ label = "DDG: depth"] 
  "30064771119" -> "128849018880"  [ label = "DDG: depth == 0"] 
  "30064771121" -> "128849018880"  [ label = "DDG: *s"] 
  "30064771119" -> "128849018880"  [ label = "DDG: *s == '\0'"] 
  "30064771118" -> "128849018880"  [ label = "DDG: (depth == 0) &amp;&amp; (*s == '\0')"] 
  "30064771110" -> "128849018880"  [ label = "DDG: !((depth == 0) &amp;&amp; (*s == '\0'))"] 
  "30064771109" -> "128849018880"  [ label = "DDG: (!path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-&gt;p[0])))
	&amp;&amp; (!((depth == 0) &amp;&amp; (*s == '\0')))"] 
  "30064771125" -> "128849018880"  [ label = "DDG: depth"] 
  "30064771124" -> "128849018880"  [ label = "DDG: depth &gt;= 1"] 
  "30064771126" -> "128849018880"  [ label = "DDG: *s"] 
  "30064771124" -> "128849018880"  [ label = "DDG: *s == RDELIM"] 
  "30064771123" -> "128849018880"  [ label = "DDG: (depth &gt;= 1) &amp;&amp; (*s == RDELIM)"] 
  "30064771109" -> "128849018880"  [ label = "DDG: !((depth &gt;= 1) &amp;&amp; (*s == RDELIM))"] 
  "30064771109" -> "128849018880"  [ label = "DDG: (!path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-&gt;p[0])))
	&amp;&amp; (!((depth == 0) &amp;&amp; (*s == '\0'))) &amp;&amp; !((depth &gt;= 1) &amp;&amp; (*s == RDELIM))"] 
  "30064771128" -> "128849018880"  [ label = "DDG: ERROR"] 
  "30064771131" -> "128849018880"  [ label = "DDG: ERRCODE_INVALID_TEXT_REPRESENTATION"] 
  "30064771130" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION)"] 
  "30064771132" -> "128849018880"  [ label = "DDG: str"] 
  "30064771130" -> "128849018880"  [ label = "DDG: errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)"] 
  "30064771129" -> "128849018880"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
				 errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)"] 
  "30064771128" -> "128849018880"  [ label = "DDG: (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
				 errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str))"] 
  "30064771128" -> "128849018880"  [ label = "DDG: ereport(ERROR,
				(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
				 errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)))"] 
  "30064771133" -> "128849018880"  [ label = "DDG: path-&gt;closed"] 
  "30064771135" -> "128849018880"  [ label = "DDG: isopen"] 
  "30064771133" -> "128849018880"  [ label = "DDG: !isopen"] 
  "30064771133" -> "128849018880"  [ label = "DDG: path-&gt;closed = (!isopen)"] 
  "30064771136" -> "128849018880"  [ label = "DDG: path-&gt;dummy"] 
  "30064771136" -> "128849018880"  [ label = "DDG: path-&gt;dummy = 0"] 
  "30064771138" -> "128849018880"  [ label = "DDG: path"] 
  "30064771138" -> "128849018880"  [ label = "DDG: PG_RETURN_PATH_P(path)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: s++"] 
  "30064771112" -> "128849018880"  [ label = "DDG: TRUE"] 
  "30064771126" -> "128849018880"  [ label = "DDG: RDELIM"] 
  "30064771097" -> "128849018880"  [ label = "DDG: PATH"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771077" -> "30064771083"  [ label = "DDG: str"] 
  "30064771082" -> "30064771083"  [ label = "DDG: str"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771097" -> "30064771095"  [ label = "DDG: PATH"] 
  "30064771097" -> "30064771095"  [ label = "DDG: p[0]"] 
  "30064771099" -> "30064771095"  [ label = "DDG: npts"] 
  "30064771105" -> "30064771103"  [ label = "DDG: size"] 
  "30064771099" -> "30064771107"  [ label = "DDG: npts"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771135" -> "30064771133"  [ label = "DDG: isopen"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771103" -> "30064771106"  [ label = "DDG: path"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771105" -> "30064771106"  [ label = "DDG: size"] 
  "30064771106" -> "30064771138"  [ label = "DDG: path"] 
  "30064771107" -> "30064771138"  [ label = "DDG: path-&gt;npts"] 
  "30064771133" -> "30064771138"  [ label = "DDG: path-&gt;closed"] 
  "30064771136" -> "30064771138"  [ label = "DDG: path-&gt;dummy"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: npts"] 
  "30064771077" -> "30064771075"  [ label = "DDG: str"] 
  "30064771077" -> "30064771075"  [ label = "DDG: ','"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771083" -> "30064771087"  [ label = "DDG: s"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771089" -> "30064771088"  [ label = "DDG: *s"] 
  "30064771089" -> "30064771088"  [ label = "DDG: LDELIM"] 
  "30064771091" -> "30064771088"  [ label = "DDG: strrchr(s, LDELIM)"] 
  "30064771091" -> "30064771088"  [ label = "DDG: s"] 
  "30064771097" -> "30064771096"  [ label = "DDG: PATH"] 
  "30064771097" -> "30064771096"  [ label = "DDG: p[0]"] 
  "30064771099" -> "30064771096"  [ label = "DDG: npts"] 
  "30064771105" -> "30064771104"  [ label = "DDG: size"] 
  "30064771110" -> "30064771109"  [ label = "DDG: !path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-&gt;p[0]))"] 
  "30064771110" -> "30064771109"  [ label = "DDG: !((depth == 0) &amp;&amp; (*s == '\0'))"] 
  "30064771123" -> "30064771109"  [ label = "DDG: (depth &gt;= 1) &amp;&amp; (*s == RDELIM)"] 
  "30064771112" -> "30064771135"  [ label = "DDG: &amp;isopen"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: str"] 
  "30064771077" -> "30064771076"  [ label = "DDG: ','"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
				 errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771092" -> "30064771091"  [ label = "DDG: s"] 
  "30064771092" -> "30064771091"  [ label = "DDG: LDELIM"] 
  "30064771089" -> "30064771091"  [ label = "DDG: *s"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771083" -> "30064771093"  [ label = "DDG: s"] 
  "30064771089" -> "30064771093"  [ label = "DDG: *s"] 
  "30064771091" -> "30064771093"  [ label = "DDG: s"] 
  "30064771087" -> "30064771093"  [ label = "DDG: s"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771074" -> "30064771094"  [ label = "DDG: depth"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771076" -> "30064771099"  [ label = "DDG: npts"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771095" -> "30064771105"  [ label = "DDG: size"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771111" -> "30064771110"  [ label = "DDG: path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-&gt;p[0]))"] 
  "30064771118" -> "30064771110"  [ label = "DDG: (depth == 0) &amp;&amp; (*s == '\0')"] 
  "30064771124" -> "30064771123"  [ label = "DDG: depth &gt;= 1"] 
  "30064771124" -> "30064771123"  [ label = "DDG: *s == RDELIM"] 
  "30064771078" -> "30064771128"  [ label = "DDG: ERROR"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771129" -> "30064771128"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),
				 errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)"] 
  "30064771072" -> "30064771077"  [ label = "DDG: str"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION)"] 
  "30064771080" -> "30064771079"  [ label = "DDG: errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)"] 
  "30064771083" -> "30064771092"  [ label = "DDG: s"] 
  "30064771089" -> "30064771092"  [ label = "DDG: *s"] 
  "30064771087" -> "30064771092"  [ label = "DDG: s"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771089" -> "30064771092"  [ label = "DDG: LDELIM"] 
  "30064771112" -> "30064771111"  [ label = "DDG: &amp;isopen"] 
  "30064771112" -> "30064771111"  [ label = "DDG: &amp;(path-&gt;p[0])"] 
  "30064771112" -> "30064771111"  [ label = "DDG: &amp;s"] 
  "30064771112" -> "30064771111"  [ label = "DDG: TRUE"] 
  "30064771112" -> "30064771111"  [ label = "DDG: npts"] 
  "30064771112" -> "30064771111"  [ label = "DDG: s"] 
  "30064771119" -> "30064771118"  [ label = "DDG: depth == 0"] 
  "30064771119" -> "30064771118"  [ label = "DDG: *s == '\0'"] 
  "30064771125" -> "30064771124"  [ label = "DDG: depth"] 
  "30064771125" -> "30064771124"  [ label = "DDG: 1"] 
  "30064771126" -> "30064771124"  [ label = "DDG: *s"] 
  "30064771126" -> "30064771124"  [ label = "DDG: RDELIM"] 
  "30064771130" -> "30064771129"  [ label = "DDG: errcode(ERRCODE_INVALID_TEXT_REPRESENTATION)"] 
  "30064771130" -> "30064771129"  [ label = "DDG: errmsg(&quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;, str)"] 
  "30064771081" -> "30064771080"  [ label = "DDG: ERRCODE_INVALID_TEXT_REPRESENTATION"] 
  "30064771082" -> "30064771080"  [ label = "DDG: &quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;"] 
  "30064771082" -> "30064771080"  [ label = "DDG: str"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771099" -> "30064771112"  [ label = "DDG: npts"] 
  "30064771083" -> "30064771112"  [ label = "DDG: s"] 
  "30064771089" -> "30064771112"  [ label = "DDG: *s"] 
  "30064771091" -> "30064771112"  [ label = "DDG: s"] 
  "30064771093" -> "30064771112"  [ label = "DDG: s"] 
  "30064771087" -> "30064771112"  [ label = "DDG: s"] 
  "30064771120" -> "30064771119"  [ label = "DDG: depth"] 
  "30064771120" -> "30064771119"  [ label = "DDG: 0"] 
  "30064771121" -> "30064771119"  [ label = "DDG: *s"] 
  "30064771121" -> "30064771119"  [ label = "DDG: '\0'"] 
  "30064771074" -> "30064771125"  [ label = "DDG: depth"] 
  "30064771094" -> "30064771125"  [ label = "DDG: depth"] 
  "30064771120" -> "30064771125"  [ label = "DDG: depth"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771089" -> "30064771126"  [ label = "DDG: *s"] 
  "30064771121" -> "30064771126"  [ label = "DDG: *s"] 
  "111669149697" -> "30064771126"  [ label = "DDG: "] 
  "30064771131" -> "30064771130"  [ label = "DDG: ERRCODE_INVALID_TEXT_REPRESENTATION"] 
  "30064771132" -> "30064771130"  [ label = "DDG: &quot;invalid input syntax for type path: \&quot;%s\&quot;&quot;"] 
  "30064771132" -> "30064771130"  [ label = "DDG: str"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771077" -> "30064771082"  [ label = "DDG: str"] 
  "30064771074" -> "30064771120"  [ label = "DDG: depth"] 
  "30064771094" -> "30064771120"  [ label = "DDG: depth"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771089" -> "30064771121"  [ label = "DDG: *s"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771081" -> "30064771131"  [ label = "DDG: ERRCODE_INVALID_TEXT_REPRESENTATION"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "111669149697" -> "30064771132"  [ label = "DDG: "] 
  "30064771077" -> "30064771132"  [ label = "DDG: str"] 
  "30064771082" -> "30064771132"  [ label = "DDG: str"] 
  "30064771075" -> "30064771080"  [ label = "CDG: "] 
  "30064771075" -> "30064771079"  [ label = "CDG: "] 
  "30064771075" -> "30064771082"  [ label = "CDG: "] 
  "30064771075" -> "30064771081"  [ label = "CDG: "] 
  "30064771075" -> "30064771078"  [ label = "CDG: "] 
  "30064771084" -> "30064771084"  [ label = "CDG: "] 
  "30064771084" -> "30064771086"  [ label = "CDG: "] 
  "30064771084" -> "30064771085"  [ label = "CDG: "] 
  "30064771084" -> "30064771087"  [ label = "CDG: "] 
  "30064771084" -> "184683593728"  [ label = "CDG: "] 
  "30064771088" -> "30064771094"  [ label = "CDG: "] 
  "30064771088" -> "30064771093"  [ label = "CDG: "] 
  "30064771109" -> "30064771132"  [ label = "CDG: "] 
  "30064771109" -> "30064771131"  [ label = "CDG: "] 
  "30064771109" -> "30064771128"  [ label = "CDG: "] 
  "30064771109" -> "30064771130"  [ label = "CDG: "] 
  "30064771109" -> "30064771129"  [ label = "CDG: "] 
  "30064771089" -> "30064771092"  [ label = "CDG: "] 
  "30064771089" -> "30064771091"  [ label = "CDG: "] 
  "30064771110" -> "30064771124"  [ label = "CDG: "] 
  "30064771110" -> "30064771123"  [ label = "CDG: "] 
  "30064771110" -> "30064771125"  [ label = "CDG: "] 
  "30064771111" -> "30064771118"  [ label = "CDG: "] 
  "30064771111" -> "30064771120"  [ label = "CDG: "] 
  "30064771111" -> "30064771119"  [ label = "CDG: "] 
  "30064771125" -> "30064771127"  [ label = "CDG: "] 
  "30064771125" -> "30064771126"  [ label = "CDG: "] 
  "30064771120" -> "30064771122"  [ label = "CDG: "] 
  "30064771120" -> "30064771121"  [ label = "CDG: "] 
}
"""
)
