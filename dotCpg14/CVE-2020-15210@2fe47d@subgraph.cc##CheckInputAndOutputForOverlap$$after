[33mval[0m [36mres27[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "CheckInputAndOutputForOverlap" {  
"111669149697" [label = <(METHOD,CheckInputAndOutputForOverlap)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const int* input_indices)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,int num_inputs)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,const int* output_indices)<SUB>3</SUB>> ]
"115964116995" [label = <(PARAM,int num_outputs)<SUB>4</SUB>> ]
"25769803777" [label = <(BLOCK,{
  for (int i = 0; i &lt; num_inputs; i++) {
    ...,{
  for (int i = 0; i &lt; num_inputs; i++) {
    ...)<SUB>4</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (int i = 0;i &lt; num_inputs;i++))<SUB>5</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>> ]
"94489280512" [label = <(LOCAL,int i: int)<SUB>5</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>5</SUB>> ]
"68719476736" [label = <(IDENTIFIER,i,i = 0)<SUB>5</SUB>> ]
"90194313216" [label = <(LITERAL,0,i = 0)<SUB>5</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.lessThan,i &lt; num_inputs)<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,i,i &lt; num_inputs)<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,num_inputs,i &lt; num_inputs)<SUB>5</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,i,i++)<SUB>5</SUB>> ]
"25769803779" [label = <(BLOCK,{
    for (int j = 0; j &lt; num_outputs; j++) {
 ...,{
    for (int j = 0; j &lt; num_outputs; j++) {
 ...)<SUB>5</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FOR,for (int j = 0;j &lt; num_outputs;j++))<SUB>6</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>> ]
"94489280513" [label = <(LOCAL,int j: int)<SUB>6</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>6</SUB>> ]
"68719476740" [label = <(IDENTIFIER,j,j = 0)<SUB>6</SUB>> ]
"90194313217" [label = <(LITERAL,0,j = 0)<SUB>6</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.lessThan,j &lt; num_outputs)<SUB>6</SUB>> ]
"68719476741" [label = <(IDENTIFIER,j,j &lt; num_outputs)<SUB>6</SUB>> ]
"68719476742" [label = <(IDENTIFIER,num_outputs,j &lt; num_outputs)<SUB>6</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>6</SUB>> ]
"68719476743" [label = <(IDENTIFIER,j,j++)<SUB>6</SUB>> ]
"25769803781" [label = <(BLOCK,{
      if (input_indices[i] == output_indices[...,{
      if (input_indices[i] == output_indices[...)<SUB>6</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (input_indices[i] == output_indices[j]))<SUB>7</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.equals,input_indices[i] == output_indices[j])<SUB>7</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indirectIndexAccess,input_indices[i])<SUB>7</SUB>> ]
"68719476744" [label = <(IDENTIFIER,input_indices,input_indices[i] == output_indices[j])<SUB>7</SUB>> ]
"68719476745" [label = <(IDENTIFIER,i,input_indices[i] == output_indices[j])<SUB>7</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.indirectIndexAccess,output_indices[j])<SUB>7</SUB>> ]
"68719476746" [label = <(IDENTIFIER,output_indices,input_indices[i] == output_indices[j])<SUB>7</SUB>> ]
"68719476747" [label = <(IDENTIFIER,j,input_indices[i] == output_indices[j])<SUB>7</SUB>> ]
"25769803782" [label = <(BLOCK,{
        ReportError(&quot;Tensor %d is both input ...,{
        ReportError(&quot;Tensor %d is both input ...)<SUB>7</SUB>> ]
"30064771081" [label = <(ReportError,ReportError(&quot;Tensor %d is both input %d and out...)<SUB>8</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;Tensor %d is both input %d and output %d\n&quot;,ReportError(&quot;Tensor %d is both input %d and out...)<SUB>8</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.indirectIndexAccess,input_indices[i])<SUB>9</SUB>> ]
"68719476748" [label = <(IDENTIFIER,input_indices,ReportError(&quot;Tensor %d is both input %d and out...)<SUB>9</SUB>> ]
"68719476749" [label = <(IDENTIFIER,i,ReportError(&quot;Tensor %d is both input %d and out...)<SUB>9</SUB>> ]
"68719476750" [label = <(IDENTIFIER,i,ReportError(&quot;Tensor %d is both input %d and out...)<SUB>9</SUB>> ]
"68719476751" [label = <(IDENTIFIER,j,ReportError(&quot;Tensor %d is both input %d and out...)<SUB>9</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,consistent_ = false)<SUB>10</SUB>> ]
"68719476752" [label = <(IDENTIFIER,consistent_,consistent_ = false)<SUB>10</SUB>> ]
"90194313219" [label = <(LITERAL,false,consistent_ = false)<SUB>10</SUB>> ]
"146028888064" [label = <(RETURN,return kTfLiteError;,return kTfLiteError;)<SUB>11</SUB>> ]
"68719476753" [label = <(IDENTIFIER,kTfLiteError,return kTfLiteError;)<SUB>11</SUB>> ]
"146028888065" [label = <(RETURN,return kTfLiteOk;,return kTfLiteOk;)<SUB>15</SUB>> ]
"68719476754" [label = <(IDENTIFIER,kTfLiteOk,return kTfLiteOk;)<SUB>15</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,TfLiteStatus)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "30064771073"  [ label = "AST: "] 
  "47244640256" -> "30064771074"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "25769803778" -> "94489280512"  [ label = "AST: "] 
  "25769803778" -> "30064771072"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "47244640257" -> "30064771076"  [ label = "AST: "] 
  "47244640257" -> "30064771077"  [ label = "AST: "] 
  "47244640257" -> "25769803781"  [ label = "AST: "] 
  "25769803780" -> "94489280513"  [ label = "AST: "] 
  "25769803780" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "25769803781" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771078"  [ label = "AST: "] 
  "47244640258" -> "25769803782"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771079" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "30064771080" -> "68719476747"  [ label = "AST: "] 
  "25769803782" -> "30064771081"  [ label = "AST: "] 
  "25769803782" -> "30064771083"  [ label = "AST: "] 
  "25769803782" -> "146028888064"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "68719476750"  [ label = "AST: "] 
  "30064771081" -> "68719476751"  [ label = "AST: "] 
  "30064771082" -> "68719476748"  [ label = "AST: "] 
  "30064771082" -> "68719476749"  [ label = "AST: "] 
  "30064771083" -> "68719476752"  [ label = "AST: "] 
  "30064771083" -> "90194313219"  [ label = "AST: "] 
  "146028888064" -> "68719476753"  [ label = "AST: "] 
  "146028888065" -> "68719476754"  [ label = "AST: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771075"  [ label = "CFG: "] 
  "30064771073" -> "146028888065"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771076" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771078" -> "30064771082"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "30064771083"  [ label = "CFG: "] 
  "30064771083" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: input_indices"] 
  "115964116994" -> "128849018880"  [ label = "DDG: output_indices"] 
  "30064771072" -> "128849018880"  [ label = "DDG: i = 0"] 
  "30064771073" -> "128849018880"  [ label = "DDG: num_inputs"] 
  "30064771073" -> "128849018880"  [ label = "DDG: i &lt; num_inputs"] 
  "30064771075" -> "128849018880"  [ label = "DDG: j = 0"] 
  "30064771076" -> "128849018880"  [ label = "DDG: num_outputs"] 
  "30064771076" -> "128849018880"  [ label = "DDG: j &lt; num_outputs"] 
  "30064771074" -> "128849018880"  [ label = "DDG: i++"] 
  "30064771078" -> "128849018880"  [ label = "DDG: output_indices[j]"] 
  "30064771078" -> "128849018880"  [ label = "DDG: input_indices[i] == output_indices[j]"] 
  "30064771077" -> "128849018880"  [ label = "DDG: j++"] 
  "30064771081" -> "128849018880"  [ label = "DDG: input_indices[i]"] 
  "30064771081" -> "128849018880"  [ label = "DDG: i"] 
  "30064771081" -> "128849018880"  [ label = "DDG: j"] 
  "30064771081" -> "128849018880"  [ label = "DDG: ReportError(&quot;Tensor %d is both input %d and output %d\n&quot;,
                    input_indices[i], i, j)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: consistent_ = false"] 
  "30064771083" -> "128849018880"  [ label = "DDG: consistent_"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "68719476754" -> "146028888065"  [ label = "DDG: kTfLiteOk"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "111669149697" -> "68719476754"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771072" -> "30064771073"  [ label = "DDG: i"] 
  "30064771074" -> "30064771073"  [ label = "DDG: i"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116993" -> "30064771073"  [ label = "DDG: num_inputs"] 
  "30064771073" -> "30064771074"  [ label = "DDG: i"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771075" -> "30064771076"  [ label = "DDG: j"] 
  "30064771077" -> "30064771076"  [ label = "DDG: j"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "115964116995" -> "30064771076"  [ label = "DDG: num_outputs"] 
  "30064771076" -> "30064771077"  [ label = "DDG: j"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "115964116992" -> "30064771078"  [ label = "DDG: input_indices"] 
  "115964116994" -> "30064771078"  [ label = "DDG: output_indices"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "68719476753" -> "146028888064"  [ label = "DDG: kTfLiteError"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "115964116992" -> "30064771081"  [ label = "DDG: input_indices"] 
  "30064771078" -> "30064771081"  [ label = "DDG: input_indices[i]"] 
  "30064771073" -> "30064771081"  [ label = "DDG: i"] 
  "30064771076" -> "30064771081"  [ label = "DDG: j"] 
  "111669149697" -> "68719476753"  [ label = "DDG: "] 
  "30064771073" -> "146028888065"  [ label = "CDG: "] 
  "30064771073" -> "30064771075"  [ label = "CDG: "] 
  "30064771073" -> "30064771076"  [ label = "CDG: "] 
  "30064771076" -> "30064771078"  [ label = "CDG: "] 
  "30064771076" -> "30064771079"  [ label = "CDG: "] 
  "30064771076" -> "30064771080"  [ label = "CDG: "] 
  "30064771076" -> "30064771073"  [ label = "CDG: "] 
  "30064771076" -> "30064771074"  [ label = "CDG: "] 
  "30064771078" -> "30064771081"  [ label = "CDG: "] 
  "30064771078" -> "30064771082"  [ label = "CDG: "] 
  "30064771078" -> "30064771083"  [ label = "CDG: "] 
  "30064771078" -> "146028888064"  [ label = "CDG: "] 
  "30064771078" -> "30064771077"  [ label = "CDG: "] 
  "30064771078" -> "30064771076"  [ label = "CDG: "] 
}
"""
)
