[33mval[0m [36mres1834[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "handle_ld_nf" {  
"111669149697" [label = <(METHOD,handle_ld_nf)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,u32 insn)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,struct pt_regs *regs)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	int rd = ((insn &gt;&gt; 25) &amp; 0x1f);
	int from_ke...,{
	int rd = ((insn &gt;&gt; 25) &amp; 0x1f);
	int from_ke...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,int rd: int)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,rd = ((insn &gt;&gt; 25) &amp; 0x1f))<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,rd,rd = ((insn &gt;&gt; 25) &amp; 0x1f))<SUB>3</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.and,(insn &gt;&gt; 25) &amp; 0x1f)<SUB>3</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.arithmeticShiftRight,insn &gt;&gt; 25)<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,insn,insn &gt;&gt; 25)<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,25,insn &gt;&gt; 25)<SUB>3</SUB>> ]
"90194313217" [label = <(LITERAL,0x1f,(insn &gt;&gt; 25) &amp; 0x1f)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,int from_kernel: int)<SUB>4</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,from_kernel = (regs-&gt;tstate &amp; TSTATE_PRIV) != 0)<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,from_kernel,from_kernel = (regs-&gt;tstate &amp; TSTATE_PRIV) != 0)<SUB>4</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.notEquals,(regs-&gt;tstate &amp; TSTATE_PRIV) != 0)<SUB>4</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.and,regs-&gt;tstate &amp; TSTATE_PRIV)<SUB>4</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indirectFieldAccess,regs-&gt;tstate)<SUB>4</SUB>> ]
"68719476739" [label = <(IDENTIFIER,regs,regs-&gt;tstate &amp; TSTATE_PRIV)<SUB>4</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,tstate,tstate)<SUB>4</SUB>> ]
"68719476740" [label = <(IDENTIFIER,TSTATE_PRIV,regs-&gt;tstate &amp; TSTATE_PRIV)<SUB>4</SUB>> ]
"90194313218" [label = <(LITERAL,0,(regs-&gt;tstate &amp; TSTATE_PRIV) != 0)<SUB>4</SUB>> ]
"94489280514" [label = <(LOCAL,long unsigned* reg: longunsigned*)<SUB>5</SUB>> ]
"30064771079" [label = <(perf_sw_event,perf_sw_event(PERF_COUNT_SW_EMULATION_FAULTS, 1...)<SUB>7</SUB>> ]
"68719476741" [label = <(IDENTIFIER,PERF_COUNT_SW_EMULATION_FAULTS,perf_sw_event(PERF_COUNT_SW_EMULATION_FAULTS, 1...)<SUB>7</SUB>> ]
"90194313219" [label = <(LITERAL,1,perf_sw_event(PERF_COUNT_SW_EMULATION_FAULTS, 1...)<SUB>7</SUB>> ]
"90194313220" [label = <(LITERAL,0,perf_sw_event(PERF_COUNT_SW_EMULATION_FAULTS, 1...)<SUB>7</SUB>> ]
"68719476742" [label = <(IDENTIFIER,regs,perf_sw_event(PERF_COUNT_SW_EMULATION_FAULTS, 1...)<SUB>7</SUB>> ]
"90194313221" [label = <(LITERAL,0,perf_sw_event(PERF_COUNT_SW_EMULATION_FAULTS, 1...)<SUB>7</SUB>> ]
"30064771080" [label = <(maybe_flush_windows,maybe_flush_windows(0, 0, rd, from_kernel))<SUB>9</SUB>> ]
"90194313222" [label = <(LITERAL,0,maybe_flush_windows(0, 0, rd, from_kernel))<SUB>9</SUB>> ]
"90194313223" [label = <(LITERAL,0,maybe_flush_windows(0, 0, rd, from_kernel))<SUB>9</SUB>> ]
"68719476743" [label = <(IDENTIFIER,rd,maybe_flush_windows(0, 0, rd, from_kernel))<SUB>9</SUB>> ]
"68719476744" [label = <(IDENTIFIER,from_kernel,maybe_flush_windows(0, 0, rd, from_kernel))<SUB>9</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,reg = fetch_reg_addr(rd, regs))<SUB>10</SUB>> ]
"68719476745" [label = <(IDENTIFIER,reg,reg = fetch_reg_addr(rd, regs))<SUB>10</SUB>> ]
"30064771082" [label = <(fetch_reg_addr,fetch_reg_addr(rd, regs))<SUB>10</SUB>> ]
"68719476746" [label = <(IDENTIFIER,rd,fetch_reg_addr(rd, regs))<SUB>10</SUB>> ]
"68719476747" [label = <(IDENTIFIER,regs,fetch_reg_addr(rd, regs))<SUB>10</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (from_kernel || rd &lt; 16))<SUB>11</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.logicalOr,from_kernel || rd &lt; 16)<SUB>11</SUB>> ]
"68719476748" [label = <(IDENTIFIER,from_kernel,from_kernel || rd &lt; 16)<SUB>11</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.lessThan,rd &lt; 16)<SUB>11</SUB>> ]
"68719476749" [label = <(IDENTIFIER,rd,rd &lt; 16)<SUB>11</SUB>> ]
"90194313224" [label = <(LITERAL,16,rd &lt; 16)<SUB>11</SUB>> ]
"25769803778" [label = <(BLOCK,{
		reg[0] = 0;
		if ((insn &amp; 0x780000) == 0x18...,{
		reg[0] = 0;
		if ((insn &amp; 0x780000) == 0x18...)<SUB>11</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,reg[0] = 0)<SUB>12</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indirectIndexAccess,reg[0])<SUB>12</SUB>> ]
"68719476750" [label = <(IDENTIFIER,reg,reg[0] = 0)<SUB>12</SUB>> ]
"90194313225" [label = <(LITERAL,0,reg[0] = 0)<SUB>12</SUB>> ]
"90194313226" [label = <(LITERAL,0,reg[0] = 0)<SUB>12</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if ((insn &amp; 0x780000) == 0x180000))<SUB>13</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.equals,(insn &amp; 0x780000) == 0x180000)<SUB>13</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.and,insn &amp; 0x780000)<SUB>13</SUB>> ]
"68719476751" [label = <(IDENTIFIER,insn,insn &amp; 0x780000)<SUB>13</SUB>> ]
"90194313227" [label = <(LITERAL,0x780000,insn &amp; 0x780000)<SUB>13</SUB>> ]
"90194313228" [label = <(LITERAL,0x180000,(insn &amp; 0x780000) == 0x180000)<SUB>13</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,reg[1] = 0)<SUB>14</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.indirectIndexAccess,reg[1])<SUB>14</SUB>> ]
"68719476752" [label = <(IDENTIFIER,reg,reg[1] = 0)<SUB>14</SUB>> ]
"90194313229" [label = <(LITERAL,1,reg[1] = 0)<SUB>14</SUB>> ]
"90194313230" [label = <(LITERAL,0,reg[1] = 0)<SUB>14</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>15</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (test_thread_flag(TIF_32BIT)))<SUB>15</SUB>> ]
"30064771091" [label = <(test_thread_flag,test_thread_flag(TIF_32BIT))<SUB>15</SUB>> ]
"68719476753" [label = <(IDENTIFIER,TIF_32BIT,test_thread_flag(TIF_32BIT))<SUB>15</SUB>> ]
"25769803781" [label = <(BLOCK,{
		put_user(0, (int __user *) reg);
		if ((ins...,{
		put_user(0, (int __user *) reg);
		if ((ins...)<SUB>15</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>19</SUB>> ]
"25769803782" [label = <(BLOCK,{
		put_user(0, (unsigned long __user *) reg);
...,{
		put_user(0, (unsigned long __user *) reg);
...)<SUB>19</SUB>> ]
"30064771092" [label = <(advance,advance(regs))<SUB>24</SUB>> ]
"68719476754" [label = <(IDENTIFIER,regs,advance(regs))<SUB>24</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771092"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "90194313218"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771078" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "55834574848"  [ label = "AST: "] 
  "30064771079" -> "68719476741"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "30064771079" -> "90194313220"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "90194313221"  [ label = "AST: "] 
  "30064771080" -> "90194313222"  [ label = "AST: "] 
  "30064771080" -> "90194313223"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "47244640256" -> "30064771083"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640258"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "90194313224"  [ label = "AST: "] 
  "25769803778" -> "30064771085"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "90194313226"  [ label = "AST: "] 
  "30064771086" -> "68719476750"  [ label = "AST: "] 
  "30064771086" -> "90194313225"  [ label = "AST: "] 
  "47244640257" -> "30064771087"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "90194313228"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771088" -> "90194313227"  [ label = "AST: "] 
  "25769803779" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "90194313230"  [ label = "AST: "] 
  "30064771090" -> "68719476752"  [ label = "AST: "] 
  "30064771090" -> "90194313229"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "47244640259"  [ label = "AST: "] 
  "47244640259" -> "30064771091"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "47244640259" -> "47244640260"  [ label = "AST: "] 
  "30064771091" -> "68719476753"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771092" -> "68719476754"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "CFG: "] 
  "30064771075" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771081" -> "30064771083"  [ label = "CFG: "] 
  "30064771081" -> "30064771084"  [ label = "CFG: "] 
  "30064771092" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771083" -> "30064771086"  [ label = "CFG: "] 
  "30064771083" -> "30064771091"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "30064771088"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771087" -> "30064771092"  [ label = "CFG: "] 
  "55834574848" -> "30064771078"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771089" -> "30064771092"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "111669149697" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "128849018880"  [ label = "DDG: insn"] 
  "30064771073" -> "128849018880"  [ label = "DDG: insn &gt;&gt; 25"] 
  "30064771072" -> "128849018880"  [ label = "DDG: (insn &gt;&gt; 25) &amp; 0x1f"] 
  "30064771072" -> "128849018880"  [ label = "DDG: rd = ((insn &gt;&gt; 25) &amp; 0x1f)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: regs-&gt;tstate"] 
  "30064771076" -> "128849018880"  [ label = "DDG: regs-&gt;tstate &amp; TSTATE_PRIV"] 
  "30064771075" -> "128849018880"  [ label = "DDG: (regs-&gt;tstate &amp; TSTATE_PRIV) != 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: from_kernel = (regs-&gt;tstate &amp; TSTATE_PRIV) != 0"] 
  "30064771079" -> "128849018880"  [ label = "DDG: perf_sw_event(PERF_COUNT_SW_EMULATION_FAULTS, 1, 0, regs, 0)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: maybe_flush_windows(0, 0, rd, from_kernel)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: reg"] 
  "30064771082" -> "128849018880"  [ label = "DDG: rd"] 
  "30064771081" -> "128849018880"  [ label = "DDG: fetch_reg_addr(rd, regs)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: reg = fetch_reg_addr(rd, regs)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: from_kernel"] 
  "30064771084" -> "128849018880"  [ label = "DDG: rd"] 
  "30064771083" -> "128849018880"  [ label = "DDG: rd &lt; 16"] 
  "30064771083" -> "128849018880"  [ label = "DDG: from_kernel || rd &lt; 16"] 
  "30064771091" -> "128849018880"  [ label = "DDG: test_thread_flag(TIF_32BIT)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: reg[0]"] 
  "30064771085" -> "128849018880"  [ label = "DDG: reg[0] = 0"] 
  "30064771088" -> "128849018880"  [ label = "DDG: insn"] 
  "30064771087" -> "128849018880"  [ label = "DDG: insn &amp; 0x780000"] 
  "30064771087" -> "128849018880"  [ label = "DDG: (insn &amp; 0x780000) == 0x180000"] 
  "30064771089" -> "128849018880"  [ label = "DDG: reg[1]"] 
  "30064771089" -> "128849018880"  [ label = "DDG: reg[1] = 0"] 
  "30064771092" -> "128849018880"  [ label = "DDG: regs"] 
  "30064771092" -> "128849018880"  [ label = "DDG: advance(regs)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: TIF_32BIT"] 
  "30064771079" -> "128849018880"  [ label = "DDG: PERF_COUNT_SW_EMULATION_FAULTS"] 
  "30064771077" -> "128849018880"  [ label = "DDG: TSTATE_PRIV"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: insn &gt;&gt; 25"] 
  "30064771073" -> "30064771072"  [ label = "DDG: 0x1f"] 
  "30064771076" -> "30064771075"  [ label = "DDG: regs-&gt;tstate &amp; TSTATE_PRIV"] 
  "30064771076" -> "30064771075"  [ label = "DDG: 0"] 
  "30064771082" -> "30064771081"  [ label = "DDG: rd"] 
  "30064771082" -> "30064771081"  [ label = "DDG: regs"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "115964116993" -> "30064771079"  [ label = "DDG: regs"] 
  "30064771077" -> "30064771079"  [ label = "DDG: regs-&gt;tstate"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771072" -> "30064771080"  [ label = "DDG: rd"] 
  "30064771075" -> "30064771080"  [ label = "DDG: from_kernel"] 
  "30064771077" -> "30064771092"  [ label = "DDG: regs-&gt;tstate"] 
  "30064771082" -> "30064771092"  [ label = "DDG: regs"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: insn"] 
  "30064771074" -> "30064771073"  [ label = "DDG: 25"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: regs-&gt;tstate"] 
  "30064771077" -> "30064771076"  [ label = "DDG: TSTATE_PRIV"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771080" -> "30064771082"  [ label = "DDG: rd"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771077" -> "30064771082"  [ label = "DDG: regs-&gt;tstate"] 
  "30064771079" -> "30064771082"  [ label = "DDG: regs"] 
  "30064771080" -> "30064771083"  [ label = "DDG: from_kernel"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771084" -> "30064771083"  [ label = "DDG: rd"] 
  "30064771084" -> "30064771083"  [ label = "DDG: 16"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "115964116992" -> "30064771074"  [ label = "DDG: insn"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116993" -> "30064771077"  [ label = "DDG: regs"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771082" -> "30064771084"  [ label = "DDG: rd"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: insn"] 
  "30064771088" -> "30064771087"  [ label = "DDG: 0x780000"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771074" -> "30064771088"  [ label = "DDG: insn"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771083" -> "30064771087"  [ label = "CDG: "] 
  "30064771083" -> "30064771088"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771091"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
}
"""
)
