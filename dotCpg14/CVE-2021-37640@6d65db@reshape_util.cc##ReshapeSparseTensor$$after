[33mval[0m [36mres862[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "ReshapeSparseTensor" {  
"111669149697" [label = <(METHOD,ReshapeSparseTensor)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,OpKernelContext *context)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const Tensor &amp;input_indices_in)<SUB>2</SUB>> ]
"115964116994" [label = <(PARAM,const Tensor &amp;input_shape_in)<SUB>3</SUB>> ]
"115964116995" [label = <(PARAM,const Tensor &amp;target_shape_in)<SUB>4</SUB>> ]
"115964116996" [label = <(PARAM,int output_indices_idx)<SUB>4</SUB>> ]
"115964116997" [label = <(PARAM,int output_shape_idx)<SUB>5</SUB>> ]
"25769803777" [label = <(BLOCK,{
  OP_REQUIRES(context, TensorShapeUtils::IsMa...,{
  OP_REQUIRES(context, TensorShapeUtils::IsMa...)<SUB>5</SUB>> ]
"30064771072" [label = <(OP_REQUIRES,OP_REQUIRES(context, TensorShapeUtils::IsMatrix...)<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,context,OP_REQUIRES(context, TensorShapeUtils::IsMatrix...)<SUB>6</SUB>> ]
"30064771073" [label = <(IsMatrix,TensorShapeUtils::IsMatrix(input_indices_in.sha...)<SUB>6</SUB>> ]
"30064771074" [label = <(shape,input_indices_in.shape())<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,input_indices_in,input_indices_in.shape())<SUB>6</SUB>> ]
"30064771075" [label = <(InvalidArgument,errors::InvalidArgument(
                  &quot;Inp...)<SUB>7</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Input indices should be a matrix but received ...,errors::InvalidArgument(
                  &quot;Inp...)<SUB>8</SUB>> ]
"30064771076" [label = <(DebugString,input_indices_in.shape().DebugString())<SUB>9</SUB>> ]
"30064771077" [label = <(shape,input_indices_in.shape())<SUB>9</SUB>> ]
"68719476738" [label = <(IDENTIFIER,input_indices_in,input_indices_in.shape())<SUB>9</SUB>> ]
"30064771078" [label = <(OP_REQUIRES,OP_REQUIRES(context, TensorShapeUtils::IsVector...)<SUB>10</SUB>> ]
"68719476739" [label = <(IDENTIFIER,context,OP_REQUIRES(context, TensorShapeUtils::IsVector...)<SUB>10</SUB>> ]
"30064771079" [label = <(IsVector,TensorShapeUtils::IsVector(input_shape_in.shape()))<SUB>10</SUB>> ]
"30064771080" [label = <(shape,input_shape_in.shape())<SUB>10</SUB>> ]
"68719476740" [label = <(IDENTIFIER,input_shape_in,input_shape_in.shape())<SUB>10</SUB>> ]
"30064771081" [label = <(InvalidArgument,errors::InvalidArgument(
                  &quot;Inp...)<SUB>11</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;Input shape should be a vector but received sh...,errors::InvalidArgument(
                  &quot;Inp...)<SUB>12</SUB>> ]
"30064771082" [label = <(DebugString,input_shape_in.shape().DebugString())<SUB>13</SUB>> ]
"30064771083" [label = <(shape,input_shape_in.shape())<SUB>13</SUB>> ]
"68719476741" [label = <(IDENTIFIER,input_shape_in,input_shape_in.shape())<SUB>13</SUB>> ]
"30064771084" [label = <(OP_REQUIRES,OP_REQUIRES(context, TensorShapeUtils::IsVector...)<SUB>14</SUB>> ]
"68719476742" [label = <(IDENTIFIER,context,OP_REQUIRES(context, TensorShapeUtils::IsVector...)<SUB>14</SUB>> ]
"30064771085" [label = <(IsVector,TensorShapeUtils::IsVector(target_shape_in.shap...)<SUB>14</SUB>> ]
"30064771086" [label = <(shape,target_shape_in.shape())<SUB>14</SUB>> ]
"68719476743" [label = <(IDENTIFIER,target_shape_in,target_shape_in.shape())<SUB>14</SUB>> ]
"30064771087" [label = <(InvalidArgument,errors::InvalidArgument(
                  &quot;Tar...)<SUB>15</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;Target shape should be a vector but received s...,errors::InvalidArgument(
                  &quot;Tar...)<SUB>16</SUB>> ]
"30064771088" [label = <(DebugString,target_shape_in.shape().DebugString())<SUB>17</SUB>> ]
"30064771089" [label = <(shape,target_shape_in.shape())<SUB>17</SUB>> ]
"68719476744" [label = <(IDENTIFIER,target_shape_in,target_shape_in.shape())<SUB>17</SUB>> ]
"94489280512" [label = <(LOCAL,const int64_t output_rank: int64_t)<SUB>19</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,output_rank = target_shape_in.NumElements())<SUB>19</SUB>> ]
"68719476745" [label = <(IDENTIFIER,output_rank,output_rank = target_shape_in.NumElements())<SUB>19</SUB>> ]
"30064771091" [label = <(NumElements,target_shape_in.NumElements())<SUB>19</SUB>> ]
"68719476746" [label = <(IDENTIFIER,target_shape_in,target_shape_in.NumElements())<SUB>19</SUB>> ]
"94489280513" [label = <(LOCAL,const TensorShape input_shape: TensorShape)<SUB>20</SUB>> ]
"30064771092" [label = <(input_shape,input_shape(input_shape_in.vec&lt;int64&gt;()))<SUB>20</SUB>> ]
"30064771093" [label = <(vec&lt;int64&gt;,input_shape_in.vec&lt;int64&gt;())<SUB>20</SUB>> ]
"68719476747" [label = <(IDENTIFIER,input_shape_in,input_shape_in.vec&lt;int64&gt;())<SUB>20</SUB>> ]
"94489280514" [label = <(LOCAL,const int64_t dense_size: int64_t)<SUB>21</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,dense_size = input_shape.num_elements())<SUB>21</SUB>> ]
"68719476748" [label = <(IDENTIFIER,dense_size,dense_size = input_shape.num_elements())<SUB>21</SUB>> ]
"30064771095" [label = <(num_elements,input_shape.num_elements())<SUB>21</SUB>> ]
"68719476749" [label = <(IDENTIFIER,input_shape,input_shape.num_elements())<SUB>21</SUB>> ]
"94489280515" [label = <(LOCAL,const int64_t nnz: int64_t)<SUB>22</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,nnz = input_indices_in.shape().dim_size(0))<SUB>22</SUB>> ]
"68719476750" [label = <(IDENTIFIER,nnz,nnz = input_indices_in.shape().dim_size(0))<SUB>22</SUB>> ]
"30064771097" [label = <(dim_size,input_indices_in.shape().dim_size(0))<SUB>22</SUB>> ]
"30064771098" [label = <(shape,input_indices_in.shape())<SUB>22</SUB>> ]
"68719476751" [label = <(IDENTIFIER,input_indices_in,input_indices_in.shape())<SUB>22</SUB>> ]
"90194313219" [label = <(LITERAL,0,input_indices_in.shape().dim_size(0))<SUB>22</SUB>> ]
"94489280516" [label = <(LOCAL,TensorShape output_shape: TensorShape)<SUB>26</SUB>> ]
"94489280517" [label = <(LOCAL,int64_t product: int64_t)<SUB>27</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.assignment,product = 1)<SUB>27</SUB>> ]
"68719476752" [label = <(IDENTIFIER,product,product = 1)<SUB>27</SUB>> ]
"90194313220" [label = <(LITERAL,1,product = 1)<SUB>27</SUB>> ]
"94489280518" [label = <(LOCAL,int unknown_index: int)<SUB>28</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.assignment,unknown_index = -1)<SUB>28</SUB>> ]
"68719476753" [label = <(IDENTIFIER,unknown_index,unknown_index = -1)<SUB>28</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.minus,-1)<SUB>28</SUB>> ]
"90194313221" [label = <(LITERAL,1,-1)<SUB>28</SUB>> ]
"94489280519" [label = <(LOCAL,auto target_shape: auto)<SUB>29</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,target_shape = target_shape_in.vec&lt;int64&gt;())<SUB>29</SUB>> ]
"68719476754" [label = <(IDENTIFIER,target_shape,target_shape = target_shape_in.vec&lt;int64&gt;())<SUB>29</SUB>> ]
"30064771103" [label = <(vec&lt;int64&gt;,target_shape_in.vec&lt;int64&gt;())<SUB>29</SUB>> ]
"68719476755" [label = <(IDENTIFIER,target_shape_in,target_shape_in.vec&lt;int64&gt;())<SUB>29</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (int d = 0;d &lt; output_rank;++d))<SUB>30</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>> ]
"94489280520" [label = <(LOCAL,int d: int)<SUB>30</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.assignment,d = 0)<SUB>30</SUB>> ]
"68719476756" [label = <(IDENTIFIER,d,d = 0)<SUB>30</SUB>> ]
"90194313222" [label = <(LITERAL,0,d = 0)<SUB>30</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.lessThan,d &lt; output_rank)<SUB>30</SUB>> ]
"68719476757" [label = <(IDENTIFIER,d,d &lt; output_rank)<SUB>30</SUB>> ]
"68719476758" [label = <(IDENTIFIER,output_rank,d &lt; output_rank)<SUB>30</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.preIncrement,++d)<SUB>30</SUB>> ]
"68719476759" [label = <(IDENTIFIER,d,++d)<SUB>30</SUB>> ]
"25769803779" [label = <(BLOCK,{
    const int64_t size = target_shape(d);
   ...,{
    const int64_t size = target_shape(d);
   ...)<SUB>30</SUB>> ]
"94489280521" [label = <(LOCAL,const int64_t size: int64_t)<SUB>31</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.assignment,size = target_shape(d))<SUB>31</SUB>> ]
"68719476760" [label = <(IDENTIFIER,size,size = target_shape(d))<SUB>31</SUB>> ]
"30064771108" [label = <(target_shape,target_shape(d))<SUB>31</SUB>> ]
"68719476761" [label = <(IDENTIFIER,d,target_shape(d))<SUB>31</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (size == -1))<SUB>32</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.equals,size == -1)<SUB>32</SUB>> ]
"68719476762" [label = <(IDENTIFIER,size,size == -1)<SUB>32</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.minus,-1)<SUB>32</SUB>> ]
"90194313223" [label = <(LITERAL,1,-1)<SUB>32</SUB>> ]
"25769803780" [label = <(BLOCK,{
      OP_REQUIRES(
          context, unknown...,{
      OP_REQUIRES(
          context, unknown...)<SUB>32</SUB>> ]
"30064771111" [label = <(OP_REQUIRES,OP_REQUIRES(
          context, unknown_index =...)<SUB>33</SUB>> ]
"68719476763" [label = <(IDENTIFIER,context,OP_REQUIRES(
          context, unknown_index =...)<SUB>34</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.equals,unknown_index == -1)<SUB>34</SUB>> ]
"68719476764" [label = <(IDENTIFIER,unknown_index,unknown_index == -1)<SUB>34</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.minus,-1)<SUB>34</SUB>> ]
"90194313224" [label = <(LITERAL,1,-1)<SUB>34</SUB>> ]
"30064771114" [label = <(InvalidArgument,errors::InvalidArgument(&quot;only one output dimens...)<SUB>35</SUB>> ]
"90194313225" [label = <(LITERAL,&quot;only one output dimension may be -1, &quot;
       ...,errors::InvalidArgument(&quot;only one output dimens...)<SUB>35</SUB>> ]
"68719476765" [label = <(IDENTIFIER,unknown_index,errors::InvalidArgument(&quot;only one output dimens...)<SUB>37</SUB>> ]
"90194313226" [label = <(LITERAL,&quot; and &quot;,errors::InvalidArgument(&quot;only one output dimens...)<SUB>37</SUB>> ]
"68719476766" [label = <(IDENTIFIER,d,errors::InvalidArgument(&quot;only one output dimens...)<SUB>37</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.assignment,unknown_index = d)<SUB>38</SUB>> ]
"68719476767" [label = <(IDENTIFIER,unknown_index,unknown_index = d)<SUB>38</SUB>> ]
"68719476768" [label = <(IDENTIFIER,d,unknown_index = d)<SUB>38</SUB>> ]
"30064771116" [label = <(AddDim,output_shape.AddDim(1))<SUB>39</SUB>> ]
"68719476769" [label = <(IDENTIFIER,output_shape,output_shape.AddDim(1))<SUB>39</SUB>> ]
"90194313227" [label = <(LITERAL,1,output_shape.AddDim(1))<SUB>39</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>40</SUB>> ]
"25769803781" [label = <(BLOCK,{
      OP_REQUIRES(context, size &gt;= 0,
       ...,{
      OP_REQUIRES(context, size &gt;= 0,
       ...)<SUB>40</SUB>> ]
"30064771117" [label = <(OP_REQUIRES,OP_REQUIRES(context, size &gt;= 0,
               ...)<SUB>41</SUB>> ]
"68719476770" [label = <(IDENTIFIER,context,OP_REQUIRES(context, size &gt;= 0,
               ...)<SUB>41</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.greaterEqualsThan,size &gt;= 0)<SUB>41</SUB>> ]
"68719476771" [label = <(IDENTIFIER,size,size &gt;= 0)<SUB>41</SUB>> ]
"90194313228" [label = <(LITERAL,0,size &gt;= 0)<SUB>41</SUB>> ]
"30064771119" [label = <(InvalidArgument,errors::InvalidArgument(&quot;size &quot;, d,
           ...)<SUB>42</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;size &quot;,errors::InvalidArgument(&quot;size &quot;, d,
           ...)<SUB>42</SUB>> ]
"68719476772" [label = <(IDENTIFIER,d,errors::InvalidArgument(&quot;size &quot;, d,
           ...)<SUB>42</SUB>> ]
"90194313230" [label = <(LITERAL,&quot; must be non-negative, not &quot;,errors::InvalidArgument(&quot;size &quot;, d,
           ...)<SUB>43</SUB>> ]
"68719476773" [label = <(IDENTIFIER,size,errors::InvalidArgument(&quot;size &quot;, d,
           ...)<SUB>43</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.assignmentMultiplication,product *= size)<SUB>44</SUB>> ]
"68719476774" [label = <(IDENTIFIER,product,product *= size)<SUB>44</SUB>> ]
"68719476775" [label = <(IDENTIFIER,size,product *= size)<SUB>44</SUB>> ]
"30064771121" [label = <(AddDim,output_shape.AddDim(size))<SUB>45</SUB>> ]
"68719476776" [label = <(IDENTIFIER,output_shape,output_shape.AddDim(size))<SUB>45</SUB>> ]
"68719476777" [label = <(IDENTIFIER,size,output_shape.AddDim(size))<SUB>45</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (unknown_index != -1))<SUB>48</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.notEquals,unknown_index != -1)<SUB>48</SUB>> ]
"68719476778" [label = <(IDENTIFIER,unknown_index,unknown_index != -1)<SUB>48</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.minus,-1)<SUB>48</SUB>> ]
"90194313231" [label = <(LITERAL,1,-1)<SUB>48</SUB>> ]
"25769803782" [label = <(BLOCK,{
    OP_REQUIRES(
        context, product &gt; 0...,{
    OP_REQUIRES(
        context, product &gt; 0...)<SUB>48</SUB>> ]
"30064771124" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, product &gt; 0,
    ...)<SUB>49</SUB>> ]
"68719476779" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, product &gt; 0,
    ...)<SUB>50</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.greaterThan,product &gt; 0)<SUB>50</SUB>> ]
"68719476780" [label = <(IDENTIFIER,product,product &gt; 0)<SUB>50</SUB>> ]
"90194313232" [label = <(LITERAL,0,product &gt; 0)<SUB>50</SUB>> ]
"30064771126" [label = <(InvalidArgument,errors::InvalidArgument(&quot;reshape cannot infer t...)<SUB>51</SUB>> ]
"90194313233" [label = <(LITERAL,&quot;reshape cannot infer the missing &quot;
           ...,errors::InvalidArgument(&quot;reshape cannot infer t...)<SUB>51</SUB>> ]
"94489280522" [label = <(LOCAL,const int64_t missing: int64_t)<SUB>54</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.assignment,missing = dense_size / product)<SUB>54</SUB>> ]
"68719476781" [label = <(IDENTIFIER,missing,missing = dense_size / product)<SUB>54</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.division,dense_size / product)<SUB>54</SUB>> ]
"68719476782" [label = <(IDENTIFIER,dense_size,dense_size / product)<SUB>54</SUB>> ]
"68719476783" [label = <(IDENTIFIER,product,dense_size / product)<SUB>54</SUB>> ]
"30064771129" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, product * missing...)<SUB>55</SUB>> ]
"68719476784" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, product * missing...)<SUB>56</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.equals,product * missing == dense_size)<SUB>56</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.multiplication,product * missing)<SUB>56</SUB>> ]
"68719476785" [label = <(IDENTIFIER,product,product * missing)<SUB>56</SUB>> ]
"68719476786" [label = <(IDENTIFIER,missing,product * missing)<SUB>56</SUB>> ]
"68719476787" [label = <(IDENTIFIER,dense_size,product * missing == dense_size)<SUB>56</SUB>> ]
"30064771132" [label = <(InvalidArgument,errors::InvalidArgument(
            &quot;Input to ...)<SUB>57</SUB>> ]
"90194313234" [label = <(LITERAL,&quot;Input to reshape is a SparseTensor with &quot;,errors::InvalidArgument(
            &quot;Input to ...)<SUB>58</SUB>> ]
"68719476788" [label = <(IDENTIFIER,dense_size,errors::InvalidArgument(
            &quot;Input to ...)<SUB>58</SUB>> ]
"90194313235" [label = <(LITERAL,&quot; dense values, but the requested shape require...,errors::InvalidArgument(
            &quot;Input to ...)<SUB>59</SUB>> ]
"68719476789" [label = <(IDENTIFIER,product,errors::InvalidArgument(
            &quot;Input to ...)<SUB>60</SUB>> ]
"90194313236" [label = <(LITERAL,&quot;. input_shape=&quot;,errors::InvalidArgument(
            &quot;Input to ...)<SUB>60</SUB>> ]
"30064771133" [label = <(DebugString,input_shape.DebugString())<SUB>60</SUB>> ]
"68719476790" [label = <(IDENTIFIER,input_shape,input_shape.DebugString())<SUB>60</SUB>> ]
"90194313237" [label = <(LITERAL,&quot; output_shape=&quot;,errors::InvalidArgument(
            &quot;Input to ...)<SUB>61</SUB>> ]
"30064771134" [label = <(DebugString,output_shape.DebugString())<SUB>61</SUB>> ]
"68719476791" [label = <(IDENTIFIER,output_shape,output_shape.DebugString())<SUB>61</SUB>> ]
"30064771135" [label = <(set_dim,output_shape.set_dim(unknown_index, missing))<SUB>62</SUB>> ]
"68719476792" [label = <(IDENTIFIER,output_shape,output_shape.set_dim(unknown_index, missing))<SUB>62</SUB>> ]
"68719476793" [label = <(IDENTIFIER,unknown_index,output_shape.set_dim(unknown_index, missing))<SUB>62</SUB>> ]
"68719476794" [label = <(IDENTIFIER,missing,output_shape.set_dim(unknown_index, missing))<SUB>62</SUB>> ]
"30064771136" [label = <(OP_REQUIRES,OP_REQUIRES(
      context, output_shape.num_el...)<SUB>65</SUB>> ]
"68719476795" [label = <(IDENTIFIER,context,OP_REQUIRES(
      context, output_shape.num_el...)<SUB>66</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.equals,output_shape.num_elements() == dense_size)<SUB>66</SUB>> ]
"30064771138" [label = <(num_elements,output_shape.num_elements())<SUB>66</SUB>> ]
"68719476796" [label = <(IDENTIFIER,output_shape,output_shape.num_elements())<SUB>66</SUB>> ]
"68719476797" [label = <(IDENTIFIER,dense_size,output_shape.num_elements() == dense_size)<SUB>66</SUB>> ]
"30064771139" [label = <(InvalidArgument,errors::InvalidArgument(&quot;Input to reshape is a ...)<SUB>67</SUB>> ]
"90194313238" [label = <(LITERAL,&quot;Input to reshape is a tensor with &quot;,errors::InvalidArgument(&quot;Input to reshape is a ...)<SUB>67</SUB>> ]
"68719476798" [label = <(IDENTIFIER,dense_size,errors::InvalidArgument(&quot;Input to reshape is a ...)<SUB>67</SUB>> ]
"90194313239" [label = <(LITERAL,&quot; dense values, but the requested shape has &quot;,errors::InvalidArgument(&quot;Input to reshape is a ...)<SUB>68</SUB>> ]
"30064771140" [label = <(num_elements,output_shape.num_elements())<SUB>69</SUB>> ]
"68719476799" [label = <(IDENTIFIER,output_shape,output_shape.num_elements())<SUB>69</SUB>> ]
"90194313240" [label = <(LITERAL,&quot;. input_shape=&quot;,errors::InvalidArgument(&quot;Input to reshape is a ...)<SUB>70</SUB>> ]
"30064771141" [label = <(DebugString,input_shape.DebugString())<SUB>70</SUB>> ]
"68719476800" [label = <(IDENTIFIER,input_shape,input_shape.DebugString())<SUB>70</SUB>> ]
"90194313241" [label = <(LITERAL,&quot; output_shape=&quot;,errors::InvalidArgument(&quot;Input to reshape is a ...)<SUB>71</SUB>> ]
"30064771142" [label = <(DebugString,output_shape.DebugString())<SUB>71</SUB>> ]
"68719476801" [label = <(IDENTIFIER,output_shape,output_shape.DebugString())<SUB>71</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (input_shape == output_shape))<SUB>74</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.equals,input_shape == output_shape)<SUB>74</SUB>> ]
"68719476802" [label = <(IDENTIFIER,input_shape,input_shape == output_shape)<SUB>74</SUB>> ]
"68719476803" [label = <(IDENTIFIER,output_shape,input_shape == output_shape)<SUB>74</SUB>> ]
"25769803783" [label = <(BLOCK,{
    context-&gt;set_output(output_indices_idx, i...,{
    context-&gt;set_output(output_indices_idx, i...)<SUB>74</SUB>> ]
"30064771144" [label = <(set_output,context-&gt;set_output(output_indices_idx, input_i...)<SUB>75</SUB>> ]
"68719476804" [label = <(IDENTIFIER,context,context-&gt;set_output(output_indices_idx, input_i...)<SUB>75</SUB>> ]
"68719476805" [label = <(IDENTIFIER,output_indices_idx,context-&gt;set_output(output_indices_idx, input_i...)<SUB>75</SUB>> ]
"68719476806" [label = <(IDENTIFIER,input_indices_in,context-&gt;set_output(output_indices_idx, input_i...)<SUB>75</SUB>> ]
"30064771145" [label = <(set_output,context-&gt;set_output(output_shape_idx, input_sha...)<SUB>76</SUB>> ]
"68719476807" [label = <(IDENTIFIER,context,context-&gt;set_output(output_shape_idx, input_sha...)<SUB>76</SUB>> ]
"68719476808" [label = <(IDENTIFIER,output_shape_idx,context-&gt;set_output(output_shape_idx, input_sha...)<SUB>76</SUB>> ]
"68719476809" [label = <(IDENTIFIER,input_shape_in,context-&gt;set_output(output_shape_idx, input_sha...)<SUB>76</SUB>> ]
"146028888064" [label = <(RETURN,return;,return;)<SUB>77</SUB>> ]
"94489280523" [label = <(LOCAL,Tensor* result_shape: Tensor*)<SUB>80</SUB>> ]
"30064771146" [label = <(&lt;operator&gt;.assignment,*result_shape = nullptr)<SUB>80</SUB>> ]
"68719476810" [label = <(IDENTIFIER,result_shape,*result_shape = nullptr)<SUB>80</SUB>> ]
"90194313242" [label = <(LITERAL,nullptr,*result_shape = nullptr)<SUB>80</SUB>> ]
"30064771147" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, context-&gt;allocate_outpu...)<SUB>81</SUB>> ]
"68719476811" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, context-&gt;allocate_outpu...)<SUB>81</SUB>> ]
"30064771148" [label = <(allocate_output,context-&gt;allocate_output(output_shape_idx,
    ...)<SUB>81</SUB>> ]
"68719476812" [label = <(IDENTIFIER,context,context-&gt;allocate_output(output_shape_idx,
    ...)<SUB>81</SUB>> ]
"68719476813" [label = <(IDENTIFIER,output_shape_idx,context-&gt;allocate_output(output_shape_idx,
    ...)<SUB>81</SUB>> ]
"30064771149" [label = <(TensorShape,TensorShape({output_rank}))<SUB>82</SUB>> ]
"30064771150" [label = <(&lt;operator&gt;.arrayInitializer,{output_rank})<SUB>82</SUB>> ]
"68719476814" [label = <(IDENTIFIER,output_rank,{output_rank})<SUB>82</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.addressOf,&amp;result_shape)<SUB>83</SUB>> ]
"68719476815" [label = <(IDENTIFIER,result_shape,context-&gt;allocate_output(output_shape_idx,
    ...)<SUB>83</SUB>> ]
"94489280524" [label = <(LOCAL,auto output_shape_vec: auto)<SUB>84</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.assignment,output_shape_vec = result_shape-&gt;vec&lt;int64&gt;())<SUB>84</SUB>> ]
"68719476816" [label = <(IDENTIFIER,output_shape_vec,output_shape_vec = result_shape-&gt;vec&lt;int64&gt;())<SUB>84</SUB>> ]
"30064771153" [label = <(vec&lt;int64&gt;,result_shape-&gt;vec&lt;int64&gt;())<SUB>84</SUB>> ]
"68719476817" [label = <(IDENTIFIER,result_shape,result_shape-&gt;vec&lt;int64&gt;())<SUB>84</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,FOR,for (int j = 0;j &lt; output_shape.dims();++j))<SUB>85</SUB>> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>85</SUB>> ]
"94489280525" [label = <(LOCAL,int j: int)<SUB>85</SUB>> ]
"30064771154" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>85</SUB>> ]
"68719476818" [label = <(IDENTIFIER,j,j = 0)<SUB>85</SUB>> ]
"90194313243" [label = <(LITERAL,0,j = 0)<SUB>85</SUB>> ]
"30064771155" [label = <(&lt;operator&gt;.lessThan,j &lt; output_shape.dims())<SUB>85</SUB>> ]
"68719476819" [label = <(IDENTIFIER,j,j &lt; output_shape.dims())<SUB>85</SUB>> ]
"30064771156" [label = <(dims,output_shape.dims())<SUB>85</SUB>> ]
"68719476820" [label = <(IDENTIFIER,output_shape,output_shape.dims())<SUB>85</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.preIncrement,++j)<SUB>85</SUB>> ]
"68719476821" [label = <(IDENTIFIER,j,++j)<SUB>85</SUB>> ]
"25769803785" [label = <(BLOCK,{
    output_shape_vec(j) = output_shape.dim_si...,{
    output_shape_vec(j) = output_shape.dim_si...)<SUB>85</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.assignment,output_shape_vec(j) = output_shape.dim_size(j))<SUB>86</SUB>> ]
"30064771159" [label = <(output_shape_vec,output_shape_vec(j))<SUB>86</SUB>> ]
"68719476822" [label = <(IDENTIFIER,j,output_shape_vec(j))<SUB>86</SUB>> ]
"30064771160" [label = <(dim_size,output_shape.dim_size(j))<SUB>86</SUB>> ]
"68719476823" [label = <(IDENTIFIER,output_shape,output_shape.dim_size(j))<SUB>86</SUB>> ]
"68719476824" [label = <(IDENTIFIER,j,output_shape.dim_size(j))<SUB>86</SUB>> ]
"94489280526" [label = <(LOCAL,Tensor* result_indices: Tensor*)<SUB>89</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.assignment,*result_indices = nullptr)<SUB>89</SUB>> ]
"68719476825" [label = <(IDENTIFIER,result_indices,*result_indices = nullptr)<SUB>89</SUB>> ]
"90194313244" [label = <(LITERAL,nullptr,*result_indices = nullptr)<SUB>89</SUB>> ]
"30064771162" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context,
                 contex...)<SUB>90</SUB>> ]
"68719476826" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context,
                 contex...)<SUB>90</SUB>> ]
"30064771163" [label = <(allocate_output,context-&gt;allocate_output(output_indices_idx,
  ...)<SUB>91</SUB>> ]
"68719476827" [label = <(IDENTIFIER,context,context-&gt;allocate_output(output_indices_idx,
  ...)<SUB>91</SUB>> ]
"68719476828" [label = <(IDENTIFIER,output_indices_idx,context-&gt;allocate_output(output_indices_idx,
  ...)<SUB>91</SUB>> ]
"30064771164" [label = <(TensorShape,TensorShape({nnz, output_rank}))<SUB>92</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.arrayInitializer,{nnz, output_rank})<SUB>92</SUB>> ]
"68719476829" [label = <(IDENTIFIER,nnz,{nnz, output_rank})<SUB>92</SUB>> ]
"68719476830" [label = <(IDENTIFIER,output_rank,{nnz, output_rank})<SUB>92</SUB>> ]
"30064771166" [label = <(&lt;operator&gt;.addressOf,&amp;result_indices)<SUB>93</SUB>> ]
"68719476831" [label = <(IDENTIFIER,result_indices,context-&gt;allocate_output(output_indices_idx,
  ...)<SUB>93</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if (nnz &gt; 0))<SUB>94</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.greaterThan,nnz &gt; 0)<SUB>94</SUB>> ]
"68719476832" [label = <(IDENTIFIER,nnz,nnz &gt; 0)<SUB>94</SUB>> ]
"90194313245" [label = <(LITERAL,0,nnz &gt; 0)<SUB>94</SUB>> ]
"25769803786" [label = <(BLOCK,{
    OP_REQUIRES(
        context, dense_size ...,{
    OP_REQUIRES(
        context, dense_size ...)<SUB>94</SUB>> ]
"30064771168" [label = <(OP_REQUIRES,OP_REQUIRES(
        context, dense_size &gt; 0 &amp;&amp;...)<SUB>95</SUB>> ]
"68719476833" [label = <(IDENTIFIER,context,OP_REQUIRES(
        context, dense_size &gt; 0 &amp;&amp;...)<SUB>96</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.logicalAnd,dense_size &gt; 0 &amp;&amp; product &gt; 0)<SUB>96</SUB>> ]
"30064771170" [label = <(&lt;operator&gt;.greaterThan,dense_size &gt; 0)<SUB>96</SUB>> ]
"68719476834" [label = <(IDENTIFIER,dense_size,dense_size &gt; 0)<SUB>96</SUB>> ]
"90194313246" [label = <(LITERAL,0,dense_size &gt; 0)<SUB>96</SUB>> ]
"30064771171" [label = <(&lt;operator&gt;.greaterThan,product &gt; 0)<SUB>96</SUB>> ]
"68719476835" [label = <(IDENTIFIER,product,product &gt; 0)<SUB>96</SUB>> ]
"90194313247" [label = <(LITERAL,0,product &gt; 0)<SUB>96</SUB>> ]
"30064771172" [label = <(InvalidArgument,errors::InvalidArgument(
            &quot;Input ten...)<SUB>97</SUB>> ]
"90194313248" [label = <(LITERAL,&quot;Input tensor has &quot;,errors::InvalidArgument(
            &quot;Input ten...)<SUB>98</SUB>> ]
"68719476836" [label = <(IDENTIFIER,nnz,errors::InvalidArgument(
            &quot;Input ten...)<SUB>98</SUB>> ]
"90194313249" [label = <(LITERAL,&quot; non zero elements but input shape (&quot;,errors::InvalidArgument(
            &quot;Input ten...)<SUB>98</SUB>> ]
"30064771173" [label = <(DebugString,input_shape.DebugString())<SUB>99</SUB>> ]
"68719476837" [label = <(IDENTIFIER,input_shape,input_shape.DebugString())<SUB>99</SUB>> ]
"90194313250" [label = <(LITERAL,&quot;) or output shape (&quot;,errors::InvalidArgument(
            &quot;Input ten...)<SUB>99</SUB>> ]
"30064771174" [label = <(DebugString,output_shape.DebugString())<SUB>100</SUB>> ]
"68719476838" [label = <(IDENTIFIER,output_shape,output_shape.DebugString())<SUB>100</SUB>> ]
"90194313251" [label = <(LITERAL,&quot;) is empty&quot;,errors::InvalidArgument(
            &quot;Input ten...)<SUB>100</SUB>> ]
"30064771175" [label = <(OP_REQUIRES_OK,OP_REQUIRES_OK(context, functor::ReshapeSparseT...)<SUB>101</SUB>> ]
"68719476839" [label = <(IDENTIFIER,context,OP_REQUIRES_OK(context, functor::ReshapeSparseT...)<SUB>101</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;(),functor::ReshapeSparseTensorFunctor&lt;Device&gt;()(
...)<SUB>101</SUB>> ]
"30064771177" [label = <(ReshapeSparseTensorFunctor&lt;Device&gt;,functor::ReshapeSparseTensorFunctor&lt;Device&gt;())<SUB>101</SUB>> ]
"68719476840" [label = <(IDENTIFIER,context,functor::ReshapeSparseTensorFunctor&lt;Device&gt;()(
...)<SUB>102</SUB>> ]
"68719476841" [label = <(IDENTIFIER,input_shape,functor::ReshapeSparseTensorFunctor&lt;Device&gt;()(
...)<SUB>102</SUB>> ]
"68719476842" [label = <(IDENTIFIER,output_shape,functor::ReshapeSparseTensorFunctor&lt;Device&gt;()(
...)<SUB>102</SUB>> ]
"30064771178" [label = <(matrix&lt;int64&gt;,input_indices_in.matrix&lt;int64&gt;())<SUB>103</SUB>> ]
"68719476843" [label = <(IDENTIFIER,input_indices_in,input_indices_in.matrix&lt;int64&gt;())<SUB>103</SUB>> ]
"30064771179" [label = <(matrix&lt;int64&gt;,result_indices-&gt;matrix&lt;int64&gt;())<SUB>104</SUB>> ]
"68719476844" [label = <(IDENTIFIER,result_indices,result_indices-&gt;matrix&lt;int64&gt;())<SUB>104</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "30064771084"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771092"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771094"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771099"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771100"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771102"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "30064771136"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "30064771146"  [ label = "AST: "] 
  "25769803777" -> "30064771147"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "30064771152"  [ label = "AST: "] 
  "25769803777" -> "47244640261"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "30064771161"  [ label = "AST: "] 
  "25769803777" -> "30064771162"  [ label = "AST: "] 
  "25769803777" -> "47244640262"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476738"  [ label = "AST: "] 
  "30064771078" -> "68719476739"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771081"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476740"  [ label = "AST: "] 
  "30064771081" -> "90194313217"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476741"  [ label = "AST: "] 
  "30064771084" -> "68719476742"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "30064771087"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476743"  [ label = "AST: "] 
  "30064771087" -> "90194313218"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476744"  [ label = "AST: "] 
  "30064771090" -> "68719476745"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476746"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476747"  [ label = "AST: "] 
  "30064771094" -> "68719476748"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476749"  [ label = "AST: "] 
  "30064771096" -> "68719476750"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "90194313219"  [ label = "AST: "] 
  "30064771098" -> "68719476751"  [ label = "AST: "] 
  "30064771099" -> "68719476752"  [ label = "AST: "] 
  "30064771099" -> "90194313220"  [ label = "AST: "] 
  "30064771100" -> "68719476753"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "90194313221"  [ label = "AST: "] 
  "30064771102" -> "68719476754"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "68719476755"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "30064771105"  [ label = "AST: "] 
  "47244640256" -> "30064771106"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "25769803778" -> "94489280520"  [ label = "AST: "] 
  "25769803778" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476756"  [ label = "AST: "] 
  "30064771104" -> "90194313222"  [ label = "AST: "] 
  "30064771105" -> "68719476757"  [ label = "AST: "] 
  "30064771105" -> "68719476758"  [ label = "AST: "] 
  "30064771106" -> "68719476759"  [ label = "AST: "] 
  "25769803779" -> "94489280521"  [ label = "AST: "] 
  "25769803779" -> "30064771107"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "30064771107" -> "68719476760"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "68719476761"  [ label = "AST: "] 
  "47244640257" -> "30064771109"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "47244640257" -> "47244640258"  [ label = "AST: "] 
  "30064771109" -> "68719476762"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "90194313223"  [ label = "AST: "] 
  "25769803780" -> "30064771111"  [ label = "AST: "] 
  "25769803780" -> "30064771115"  [ label = "AST: "] 
  "25769803780" -> "30064771116"  [ label = "AST: "] 
  "30064771111" -> "68719476763"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "30064771114"  [ label = "AST: "] 
  "30064771112" -> "68719476764"  [ label = "AST: "] 
  "30064771112" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "90194313224"  [ label = "AST: "] 
  "30064771114" -> "90194313225"  [ label = "AST: "] 
  "30064771114" -> "68719476765"  [ label = "AST: "] 
  "30064771114" -> "90194313226"  [ label = "AST: "] 
  "30064771114" -> "68719476766"  [ label = "AST: "] 
  "30064771115" -> "68719476767"  [ label = "AST: "] 
  "30064771115" -> "68719476768"  [ label = "AST: "] 
  "30064771116" -> "68719476769"  [ label = "AST: "] 
  "30064771116" -> "90194313227"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "30064771117"  [ label = "AST: "] 
  "25769803781" -> "30064771120"  [ label = "AST: "] 
  "25769803781" -> "30064771121"  [ label = "AST: "] 
  "30064771117" -> "68719476770"  [ label = "AST: "] 
  "30064771117" -> "30064771118"  [ label = "AST: "] 
  "30064771117" -> "30064771119"  [ label = "AST: "] 
  "30064771118" -> "68719476771"  [ label = "AST: "] 
  "30064771118" -> "90194313228"  [ label = "AST: "] 
  "30064771119" -> "90194313229"  [ label = "AST: "] 
  "30064771119" -> "68719476772"  [ label = "AST: "] 
  "30064771119" -> "90194313230"  [ label = "AST: "] 
  "30064771119" -> "68719476773"  [ label = "AST: "] 
  "30064771120" -> "68719476774"  [ label = "AST: "] 
  "30064771120" -> "68719476775"  [ label = "AST: "] 
  "30064771121" -> "68719476776"  [ label = "AST: "] 
  "30064771121" -> "68719476777"  [ label = "AST: "] 
  "47244640259" -> "30064771122"  [ label = "AST: "] 
  "47244640259" -> "25769803782"  [ label = "AST: "] 
  "30064771122" -> "68719476778"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "90194313231"  [ label = "AST: "] 
  "25769803782" -> "30064771124"  [ label = "AST: "] 
  "25769803782" -> "94489280522"  [ label = "AST: "] 
  "25769803782" -> "30064771127"  [ label = "AST: "] 
  "25769803782" -> "30064771129"  [ label = "AST: "] 
  "25769803782" -> "30064771135"  [ label = "AST: "] 
  "30064771124" -> "68719476779"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "30064771126"  [ label = "AST: "] 
  "30064771125" -> "68719476780"  [ label = "AST: "] 
  "30064771125" -> "90194313232"  [ label = "AST: "] 
  "30064771126" -> "90194313233"  [ label = "AST: "] 
  "30064771127" -> "68719476781"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771128" -> "68719476782"  [ label = "AST: "] 
  "30064771128" -> "68719476783"  [ label = "AST: "] 
  "30064771129" -> "68719476784"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "30064771132"  [ label = "AST: "] 
  "30064771130" -> "30064771131"  [ label = "AST: "] 
  "30064771130" -> "68719476787"  [ label = "AST: "] 
  "30064771131" -> "68719476785"  [ label = "AST: "] 
  "30064771131" -> "68719476786"  [ label = "AST: "] 
  "30064771132" -> "90194313234"  [ label = "AST: "] 
  "30064771132" -> "68719476788"  [ label = "AST: "] 
  "30064771132" -> "90194313235"  [ label = "AST: "] 
  "30064771132" -> "68719476789"  [ label = "AST: "] 
  "30064771132" -> "90194313236"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771132" -> "90194313237"  [ label = "AST: "] 
  "30064771132" -> "30064771134"  [ label = "AST: "] 
  "30064771133" -> "68719476790"  [ label = "AST: "] 
  "30064771134" -> "68719476791"  [ label = "AST: "] 
  "30064771135" -> "68719476792"  [ label = "AST: "] 
  "30064771135" -> "68719476793"  [ label = "AST: "] 
  "30064771135" -> "68719476794"  [ label = "AST: "] 
  "30064771136" -> "68719476795"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771136" -> "30064771139"  [ label = "AST: "] 
  "30064771137" -> "30064771138"  [ label = "AST: "] 
  "30064771137" -> "68719476797"  [ label = "AST: "] 
  "30064771138" -> "68719476796"  [ label = "AST: "] 
  "30064771139" -> "90194313238"  [ label = "AST: "] 
  "30064771139" -> "68719476798"  [ label = "AST: "] 
  "30064771139" -> "90194313239"  [ label = "AST: "] 
  "30064771139" -> "30064771140"  [ label = "AST: "] 
  "30064771139" -> "90194313240"  [ label = "AST: "] 
  "30064771139" -> "30064771141"  [ label = "AST: "] 
  "30064771139" -> "90194313241"  [ label = "AST: "] 
  "30064771139" -> "30064771142"  [ label = "AST: "] 
  "30064771140" -> "68719476799"  [ label = "AST: "] 
  "30064771141" -> "68719476800"  [ label = "AST: "] 
  "30064771142" -> "68719476801"  [ label = "AST: "] 
  "47244640260" -> "30064771143"  [ label = "AST: "] 
  "47244640260" -> "25769803783"  [ label = "AST: "] 
  "30064771143" -> "68719476802"  [ label = "AST: "] 
  "30064771143" -> "68719476803"  [ label = "AST: "] 
  "25769803783" -> "30064771144"  [ label = "AST: "] 
  "25769803783" -> "30064771145"  [ label = "AST: "] 
  "25769803783" -> "146028888064"  [ label = "AST: "] 
  "30064771144" -> "68719476804"  [ label = "AST: "] 
  "30064771144" -> "68719476805"  [ label = "AST: "] 
  "30064771144" -> "68719476806"  [ label = "AST: "] 
  "30064771145" -> "68719476807"  [ label = "AST: "] 
  "30064771145" -> "68719476808"  [ label = "AST: "] 
  "30064771145" -> "68719476809"  [ label = "AST: "] 
  "30064771146" -> "68719476810"  [ label = "AST: "] 
  "30064771146" -> "90194313242"  [ label = "AST: "] 
  "30064771147" -> "68719476811"  [ label = "AST: "] 
  "30064771147" -> "30064771148"  [ label = "AST: "] 
  "30064771148" -> "68719476812"  [ label = "AST: "] 
  "30064771148" -> "68719476813"  [ label = "AST: "] 
  "30064771148" -> "30064771149"  [ label = "AST: "] 
  "30064771148" -> "30064771151"  [ label = "AST: "] 
  "30064771149" -> "30064771150"  [ label = "AST: "] 
  "30064771150" -> "68719476814"  [ label = "AST: "] 
  "30064771151" -> "68719476815"  [ label = "AST: "] 
  "30064771152" -> "68719476816"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771153" -> "68719476817"  [ label = "AST: "] 
  "47244640261" -> "25769803784"  [ label = "AST: "] 
  "47244640261" -> "30064771155"  [ label = "AST: "] 
  "47244640261" -> "30064771157"  [ label = "AST: "] 
  "47244640261" -> "25769803785"  [ label = "AST: "] 
  "25769803784" -> "94489280525"  [ label = "AST: "] 
  "25769803784" -> "30064771154"  [ label = "AST: "] 
  "30064771154" -> "68719476818"  [ label = "AST: "] 
  "30064771154" -> "90194313243"  [ label = "AST: "] 
  "30064771155" -> "68719476819"  [ label = "AST: "] 
  "30064771155" -> "30064771156"  [ label = "AST: "] 
  "30064771156" -> "68719476820"  [ label = "AST: "] 
  "30064771157" -> "68719476821"  [ label = "AST: "] 
  "25769803785" -> "30064771158"  [ label = "AST: "] 
  "30064771158" -> "30064771159"  [ label = "AST: "] 
  "30064771158" -> "30064771160"  [ label = "AST: "] 
  "30064771159" -> "68719476822"  [ label = "AST: "] 
  "30064771160" -> "68719476823"  [ label = "AST: "] 
  "30064771160" -> "68719476824"  [ label = "AST: "] 
  "30064771161" -> "68719476825"  [ label = "AST: "] 
  "30064771161" -> "90194313244"  [ label = "AST: "] 
  "30064771162" -> "68719476826"  [ label = "AST: "] 
  "30064771162" -> "30064771163"  [ label = "AST: "] 
  "30064771163" -> "68719476827"  [ label = "AST: "] 
  "30064771163" -> "68719476828"  [ label = "AST: "] 
  "30064771163" -> "30064771164"  [ label = "AST: "] 
  "30064771163" -> "30064771166"  [ label = "AST: "] 
  "30064771164" -> "30064771165"  [ label = "AST: "] 
  "30064771165" -> "68719476829"  [ label = "AST: "] 
  "30064771165" -> "68719476830"  [ label = "AST: "] 
  "30064771166" -> "68719476831"  [ label = "AST: "] 
  "47244640262" -> "30064771167"  [ label = "AST: "] 
  "47244640262" -> "25769803786"  [ label = "AST: "] 
  "30064771167" -> "68719476832"  [ label = "AST: "] 
  "30064771167" -> "90194313245"  [ label = "AST: "] 
  "25769803786" -> "30064771168"  [ label = "AST: "] 
  "25769803786" -> "30064771175"  [ label = "AST: "] 
  "30064771168" -> "68719476833"  [ label = "AST: "] 
  "30064771168" -> "30064771169"  [ label = "AST: "] 
  "30064771168" -> "30064771172"  [ label = "AST: "] 
  "30064771169" -> "30064771170"  [ label = "AST: "] 
  "30064771169" -> "30064771171"  [ label = "AST: "] 
  "30064771170" -> "68719476834"  [ label = "AST: "] 
  "30064771170" -> "90194313246"  [ label = "AST: "] 
  "30064771171" -> "68719476835"  [ label = "AST: "] 
  "30064771171" -> "90194313247"  [ label = "AST: "] 
  "30064771172" -> "90194313248"  [ label = "AST: "] 
  "30064771172" -> "68719476836"  [ label = "AST: "] 
  "30064771172" -> "90194313249"  [ label = "AST: "] 
  "30064771172" -> "30064771173"  [ label = "AST: "] 
  "30064771172" -> "90194313250"  [ label = "AST: "] 
  "30064771172" -> "30064771174"  [ label = "AST: "] 
  "30064771172" -> "90194313251"  [ label = "AST: "] 
  "30064771173" -> "68719476837"  [ label = "AST: "] 
  "30064771174" -> "68719476838"  [ label = "AST: "] 
  "30064771175" -> "68719476839"  [ label = "AST: "] 
  "30064771175" -> "30064771176"  [ label = "AST: "] 
  "30064771176" -> "30064771177"  [ label = "AST: "] 
  "30064771176" -> "68719476840"  [ label = "AST: "] 
  "30064771176" -> "68719476841"  [ label = "AST: "] 
  "30064771176" -> "68719476842"  [ label = "AST: "] 
  "30064771176" -> "30064771178"  [ label = "AST: "] 
  "30064771176" -> "30064771179"  [ label = "AST: "] 
  "30064771178" -> "68719476843"  [ label = "AST: "] 
  "30064771179" -> "68719476844"  [ label = "AST: "] 
  "30064771072" -> "30064771080"  [ label = "CFG: "] 
  "30064771078" -> "30064771086"  [ label = "CFG: "] 
  "30064771084" -> "30064771091"  [ label = "CFG: "] 
  "30064771090" -> "30064771093"  [ label = "CFG: "] 
  "30064771092" -> "30064771095"  [ label = "CFG: "] 
  "30064771094" -> "30064771098"  [ label = "CFG: "] 
  "30064771096" -> "30064771099"  [ label = "CFG: "] 
  "30064771099" -> "30064771101"  [ label = "CFG: "] 
  "30064771100" -> "30064771103"  [ label = "CFG: "] 
  "30064771102" -> "30064771104"  [ label = "CFG: "] 
  "30064771136" -> "30064771143"  [ label = "CFG: "] 
  "30064771146" -> "30064771150"  [ label = "CFG: "] 
  "30064771147" -> "30064771153"  [ label = "CFG: "] 
  "30064771152" -> "30064771154"  [ label = "CFG: "] 
  "30064771161" -> "30064771165"  [ label = "CFG: "] 
  "30064771162" -> "30064771167"  [ label = "CFG: "] 
  "30064771073" -> "30064771077"  [ label = "CFG: "] 
  "30064771075" -> "30064771072"  [ label = "CFG: "] 
  "30064771079" -> "30064771083"  [ label = "CFG: "] 
  "30064771081" -> "30064771078"  [ label = "CFG: "] 
  "30064771085" -> "30064771089"  [ label = "CFG: "] 
  "30064771087" -> "30064771084"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771105" -> "30064771108"  [ label = "CFG: "] 
  "30064771105" -> "30064771123"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "30064771122" -> "30064771125"  [ label = "CFG: "] 
  "30064771122" -> "30064771138"  [ label = "CFG: "] 
  "30064771137" -> "30064771140"  [ label = "CFG: "] 
  "30064771139" -> "30064771136"  [ label = "CFG: "] 
  "30064771143" -> "30064771144"  [ label = "CFG: "] 
  "30064771143" -> "30064771146"  [ label = "CFG: "] 
  "30064771148" -> "30064771147"  [ label = "CFG: "] 
  "30064771153" -> "30064771152"  [ label = "CFG: "] 
  "30064771155" -> "30064771159"  [ label = "CFG: "] 
  "30064771155" -> "30064771161"  [ label = "CFG: "] 
  "30064771157" -> "30064771156"  [ label = "CFG: "] 
  "30064771163" -> "30064771162"  [ label = "CFG: "] 
  "30064771167" -> "128849018880"  [ label = "CFG: "] 
  "30064771167" -> "30064771170"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771107" -> "30064771110"  [ label = "CFG: "] 
  "30064771123" -> "30064771122"  [ label = "CFG: "] 
  "30064771124" -> "30064771128"  [ label = "CFG: "] 
  "30064771127" -> "30064771131"  [ label = "CFG: "] 
  "30064771129" -> "30064771135"  [ label = "CFG: "] 
  "30064771135" -> "30064771138"  [ label = "CFG: "] 
  "30064771138" -> "30064771137"  [ label = "CFG: "] 
  "30064771140" -> "30064771141"  [ label = "CFG: "] 
  "30064771141" -> "30064771142"  [ label = "CFG: "] 
  "30064771142" -> "30064771139"  [ label = "CFG: "] 
  "30064771144" -> "30064771145"  [ label = "CFG: "] 
  "30064771145" -> "146028888064"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771149" -> "30064771151"  [ label = "CFG: "] 
  "30064771151" -> "30064771148"  [ label = "CFG: "] 
  "30064771154" -> "30064771156"  [ label = "CFG: "] 
  "30064771156" -> "30064771155"  [ label = "CFG: "] 
  "30064771158" -> "30064771157"  [ label = "CFG: "] 
  "30064771164" -> "30064771166"  [ label = "CFG: "] 
  "30064771166" -> "30064771163"  [ label = "CFG: "] 
  "30064771168" -> "30064771177"  [ label = "CFG: "] 
  "30064771175" -> "128849018880"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "30064771109" -> "30064771113"  [ label = "CFG: "] 
  "30064771109" -> "30064771118"  [ label = "CFG: "] 
  "30064771125" -> "30064771126"  [ label = "CFG: "] 
  "30064771126" -> "30064771124"  [ label = "CFG: "] 
  "30064771128" -> "30064771127"  [ label = "CFG: "] 
  "30064771130" -> "30064771133"  [ label = "CFG: "] 
  "30064771132" -> "30064771129"  [ label = "CFG: "] 
  "30064771150" -> "30064771149"  [ label = "CFG: "] 
  "30064771159" -> "30064771160"  [ label = "CFG: "] 
  "30064771160" -> "30064771158"  [ label = "CFG: "] 
  "30064771165" -> "30064771164"  [ label = "CFG: "] 
  "30064771169" -> "30064771173"  [ label = "CFG: "] 
  "30064771172" -> "30064771168"  [ label = "CFG: "] 
  "30064771176" -> "30064771175"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771111" -> "30064771115"  [ label = "CFG: "] 
  "30064771115" -> "30064771116"  [ label = "CFG: "] 
  "30064771116" -> "30064771106"  [ label = "CFG: "] 
  "30064771131" -> "30064771130"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "30064771134" -> "30064771132"  [ label = "CFG: "] 
  "30064771170" -> "30064771169"  [ label = "CFG: "] 
  "30064771170" -> "30064771171"  [ label = "CFG: "] 
  "30064771171" -> "30064771169"  [ label = "CFG: "] 
  "30064771173" -> "30064771174"  [ label = "CFG: "] 
  "30064771174" -> "30064771172"  [ label = "CFG: "] 
  "30064771177" -> "30064771178"  [ label = "CFG: "] 
  "30064771178" -> "30064771179"  [ label = "CFG: "] 
  "30064771179" -> "30064771176"  [ label = "CFG: "] 
  "30064771112" -> "30064771114"  [ label = "CFG: "] 
  "30064771114" -> "30064771111"  [ label = "CFG: "] 
  "30064771117" -> "30064771120"  [ label = "CFG: "] 
  "30064771120" -> "30064771121"  [ label = "CFG: "] 
  "30064771121" -> "30064771106"  [ label = "CFG: "] 
  "30064771113" -> "30064771112"  [ label = "CFG: "] 
  "30064771118" -> "30064771119"  [ label = "CFG: "] 
  "30064771119" -> "30064771117"  [ label = "CFG: "] 
  "111669149697" -> "30064771074"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: TensorShapeUtils::IsMatrix(input_indices_in.shape())"] 
  "30064771075" -> "128849018880"  [ label = "DDG: input_indices_in.shape().DebugString()"] 
  "30064771072" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                  &quot;Input indices should be a matrix but received shape &quot;,
                  input_indices_in.shape().DebugString())"] 
  "30064771072" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, TensorShapeUtils::IsMatrix(input_indices_in.shape()),
              errors::InvalidArgument(
                  &quot;Input indices should be a matrix but received shape &quot;,
                  input_indices_in.shape().DebugString()))"] 
  "30064771078" -> "128849018880"  [ label = "DDG: TensorShapeUtils::IsVector(input_shape_in.shape())"] 
  "30064771082" -> "128849018880"  [ label = "DDG: input_shape_in.shape()"] 
  "30064771081" -> "128849018880"  [ label = "DDG: input_shape_in.shape().DebugString()"] 
  "30064771078" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                  &quot;Input shape should be a vector but received shape &quot;,
                  input_shape_in.shape().DebugString())"] 
  "30064771078" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, TensorShapeUtils::IsVector(input_shape_in.shape()),
              errors::InvalidArgument(
                  &quot;Input shape should be a vector but received shape &quot;,
                  input_shape_in.shape().DebugString()))"] 
  "30064771084" -> "128849018880"  [ label = "DDG: TensorShapeUtils::IsVector(target_shape_in.shape())"] 
  "30064771088" -> "128849018880"  [ label = "DDG: target_shape_in.shape()"] 
  "30064771087" -> "128849018880"  [ label = "DDG: target_shape_in.shape().DebugString()"] 
  "30064771084" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
                  &quot;Target shape should be a vector but received shape &quot;,
                  target_shape_in.shape().DebugString())"] 
  "30064771084" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, TensorShapeUtils::IsVector(target_shape_in.shape()),
              errors::InvalidArgument(
                  &quot;Target shape should be a vector but received shape &quot;,
                  target_shape_in.shape().DebugString()))"] 
  "30064771090" -> "128849018880"  [ label = "DDG: target_shape_in.NumElements()"] 
  "30064771090" -> "128849018880"  [ label = "DDG: output_rank = target_shape_in.NumElements()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: input_shape_in.vec&lt;int64&gt;()"] 
  "30064771092" -> "128849018880"  [ label = "DDG: input_shape(input_shape_in.vec&lt;int64&gt;())"] 
  "30064771094" -> "128849018880"  [ label = "DDG: input_shape.num_elements()"] 
  "30064771094" -> "128849018880"  [ label = "DDG: dense_size = input_shape.num_elements()"] 
  "30064771096" -> "128849018880"  [ label = "DDG: nnz"] 
  "30064771097" -> "128849018880"  [ label = "DDG: input_indices_in.shape()"] 
  "30064771096" -> "128849018880"  [ label = "DDG: input_indices_in.shape().dim_size(0)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: nnz = input_indices_in.shape().dim_size(0)"] 
  "30064771099" -> "128849018880"  [ label = "DDG: product"] 
  "30064771099" -> "128849018880"  [ label = "DDG: product = 1"] 
  "30064771100" -> "128849018880"  [ label = "DDG: unknown_index = -1"] 
  "30064771102" -> "128849018880"  [ label = "DDG: target_shape"] 
  "30064771103" -> "128849018880"  [ label = "DDG: target_shape_in"] 
  "30064771102" -> "128849018880"  [ label = "DDG: target_shape_in.vec&lt;int64&gt;()"] 
  "30064771102" -> "128849018880"  [ label = "DDG: target_shape = target_shape_in.vec&lt;int64&gt;()"] 
  "30064771104" -> "128849018880"  [ label = "DDG: d = 0"] 
  "30064771105" -> "128849018880"  [ label = "DDG: d"] 
  "30064771105" -> "128849018880"  [ label = "DDG: output_rank"] 
  "30064771105" -> "128849018880"  [ label = "DDG: d &lt; output_rank"] 
  "30064771122" -> "128849018880"  [ label = "DDG: unknown_index"] 
  "30064771122" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771122" -> "128849018880"  [ label = "DDG: unknown_index != -1"] 
  "30064771124" -> "128849018880"  [ label = "DDG: product &gt; 0"] 
  "30064771124" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;reshape cannot infer the missing &quot;
                                &quot;input size for an empty tensor unless all &quot;
                                &quot;specified input sizes are non-zero&quot;)"] 
  "30064771124" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
        context, product &gt; 0,
        errors::InvalidArgument(&quot;reshape cannot infer the missing &quot;
                                &quot;input size for an empty tensor unless all &quot;
                                &quot;specified input sizes are non-zero&quot;))"] 
  "30064771127" -> "128849018880"  [ label = "DDG: dense_size / product"] 
  "30064771127" -> "128849018880"  [ label = "DDG: missing = dense_size / product"] 
  "30064771130" -> "128849018880"  [ label = "DDG: product * missing"] 
  "30064771129" -> "128849018880"  [ label = "DDG: product * missing == dense_size"] 
  "30064771132" -> "128849018880"  [ label = "DDG: product"] 
  "30064771129" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(
            &quot;Input to reshape is a SparseTensor with &quot;, dense_size,
            &quot; dense values, but the requested shape requires a multiple of &quot;,
            product, &quot;. input_shape=&quot;, input_shape.DebugString(),
            &quot; output_shape=&quot;, output_shape.DebugString())"] 
  "30064771129" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
        context, product * missing == dense_size,
        errors::InvalidArgument(
            &quot;Input to reshape is a SparseTensor with &quot;, dense_size,
            &quot; dense values, but the requested shape requires a multiple of &quot;,
            product, &quot;. input_shape=&quot;, input_shape.DebugString(),
            &quot; output_shape=&quot;, output_shape.DebugString()))"] 
  "30064771135" -> "128849018880"  [ label = "DDG: unknown_index"] 
  "30064771135" -> "128849018880"  [ label = "DDG: missing"] 
  "30064771135" -> "128849018880"  [ label = "DDG: output_shape.set_dim(unknown_index, missing)"] 
  "30064771136" -> "128849018880"  [ label = "DDG: output_shape.num_elements() == dense_size"] 
  "30064771139" -> "128849018880"  [ label = "DDG: dense_size"] 
  "30064771139" -> "128849018880"  [ label = "DDG: output_shape.num_elements()"] 
  "30064771139" -> "128849018880"  [ label = "DDG: input_shape.DebugString()"] 
  "30064771139" -> "128849018880"  [ label = "DDG: output_shape.DebugString()"] 
  "30064771136" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;Input to reshape is a tensor with &quot;, dense_size,
                              &quot; dense values, but the requested shape has &quot;,
                              output_shape.num_elements(),
                              &quot;. input_shape=&quot;, input_shape.DebugString(),
                              &quot; output_shape=&quot;, output_shape.DebugString())"] 
  "30064771136" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
      context, output_shape.num_elements() == dense_size,
      errors::InvalidArgument(&quot;Input to reshape is a tensor with &quot;, dense_size,
                              &quot; dense values, but the requested shape has &quot;,
                              output_shape.num_elements(),
                              &quot;. input_shape=&quot;, input_shape.DebugString(),
                              &quot; output_shape=&quot;, output_shape.DebugString()))"] 
  "30064771143" -> "128849018880"  [ label = "DDG: input_shape"] 
  "30064771143" -> "128849018880"  [ label = "DDG: output_shape"] 
  "30064771143" -> "128849018880"  [ label = "DDG: input_shape == output_shape"] 
  "30064771144" -> "128849018880"  [ label = "DDG: output_indices_idx"] 
  "30064771144" -> "128849018880"  [ label = "DDG: input_indices_in"] 
  "30064771144" -> "128849018880"  [ label = "DDG: context-&gt;set_output(output_indices_idx, input_indices_in)"] 
  "30064771145" -> "128849018880"  [ label = "DDG: context"] 
  "30064771145" -> "128849018880"  [ label = "DDG: output_shape_idx"] 
  "30064771145" -> "128849018880"  [ label = "DDG: input_shape_in"] 
  "30064771145" -> "128849018880"  [ label = "DDG: context-&gt;set_output(output_shape_idx, input_shape_in)"] 
  "30064771107" -> "128849018880"  [ label = "DDG: target_shape(d)"] 
  "30064771107" -> "128849018880"  [ label = "DDG: size = target_shape(d)"] 
  "30064771109" -> "128849018880"  [ label = "DDG: size"] 
  "30064771109" -> "128849018880"  [ label = "DDG: size == -1"] 
  "30064771117" -> "128849018880"  [ label = "DDG: size &gt;= 0"] 
  "30064771117" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;size &quot;, d,
                                          &quot; must be non-negative, not &quot;, size)"] 
  "30064771117" -> "128849018880"  [ label = "DDG: OP_REQUIRES(context, size &gt;= 0,
                  errors::InvalidArgument(&quot;size &quot;, d,
                                          &quot; must be non-negative, not &quot;, size))"] 
  "30064771120" -> "128849018880"  [ label = "DDG: product"] 
  "30064771120" -> "128849018880"  [ label = "DDG: product *= size"] 
  "30064771121" -> "128849018880"  [ label = "DDG: size"] 
  "30064771121" -> "128849018880"  [ label = "DDG: output_shape.AddDim(size)"] 
  "30064771111" -> "128849018880"  [ label = "DDG: unknown_index == -1"] 
  "30064771111" -> "128849018880"  [ label = "DDG: errors::InvalidArgument(&quot;only one output dimension may be -1, &quot;
                                  &quot;not both &quot;,
                                  unknown_index, &quot; and &quot;, d)"] 
  "30064771111" -> "128849018880"  [ label = "DDG: OP_REQUIRES(
          context, unknown_index == -1,
          errors::InvalidArgument(&quot;only one output dimension may be -1, &quot;
                                  &quot;not both &quot;,
                                  unknown_index, &quot; and &quot;, d))"] 
  "30064771115" -> "128849018880"  [ label = "DDG: unknown_index = d"] 
  "30064771116" -> "128849018880"  [ label = "DDG: output_shape.AddDim(1)"] 
  "30064771106" -> "128849018880"  [ label = "DDG: ++d"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "30064771091" -> "30064771090"  [ label = "DDG: target_shape_in"] 
  "30064771095" -> "30064771094"  [ label = "DDG: input_shape"] 
  "30064771097" -> "30064771096"  [ label = "DDG: input_indices_in.shape()"] 
  "30064771097" -> "30064771096"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: 1"] 
  "30064771103" -> "30064771102"  [ label = "DDG: target_shape_in"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771153" -> "30064771152"  [ label = "DDG: result_shape"] 
  "111669149697" -> "30064771161"  [ label = "DDG: "] 
  "115964116992" -> "30064771072"  [ label = "DDG: context"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: input_indices_in.shape()"] 
  "30064771075" -> "30064771072"  [ label = "DDG: &quot;Input indices should be a matrix but received shape &quot;"] 
  "30064771075" -> "30064771072"  [ label = "DDG: input_indices_in.shape().DebugString()"] 
  "30064771072" -> "30064771078"  [ label = "DDG: context"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771079" -> "30064771078"  [ label = "DDG: input_shape_in.shape()"] 
  "30064771081" -> "30064771078"  [ label = "DDG: &quot;Input shape should be a vector but received shape &quot;"] 
  "30064771081" -> "30064771078"  [ label = "DDG: input_shape_in.shape().DebugString()"] 
  "30064771078" -> "30064771084"  [ label = "DDG: context"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: target_shape_in.shape()"] 
  "30064771087" -> "30064771084"  [ label = "DDG: &quot;Target shape should be a vector but received shape &quot;"] 
  "30064771087" -> "30064771084"  [ label = "DDG: target_shape_in.shape().DebugString()"] 
  "30064771093" -> "30064771092"  [ label = "DDG: input_shape_in"] 
  "30064771084" -> "30064771136"  [ label = "DDG: context"] 
  "30064771129" -> "30064771136"  [ label = "DDG: context"] 
  "30064771117" -> "30064771136"  [ label = "DDG: context"] 
  "30064771111" -> "30064771136"  [ label = "DDG: context"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771137" -> "30064771136"  [ label = "DDG: output_shape.num_elements()"] 
  "30064771137" -> "30064771136"  [ label = "DDG: dense_size"] 
  "30064771139" -> "30064771136"  [ label = "DDG: output_shape.DebugString()"] 
  "30064771139" -> "30064771136"  [ label = "DDG: &quot;Input to reshape is a tensor with &quot;"] 
  "30064771139" -> "30064771136"  [ label = "DDG: dense_size"] 
  "30064771139" -> "30064771136"  [ label = "DDG: &quot;. input_shape=&quot;"] 
  "30064771139" -> "30064771136"  [ label = "DDG: input_shape.DebugString()"] 
  "30064771139" -> "30064771136"  [ label = "DDG: &quot; output_shape=&quot;"] 
  "30064771139" -> "30064771136"  [ label = "DDG: output_shape.num_elements()"] 
  "30064771139" -> "30064771136"  [ label = "DDG: &quot; dense values, but the requested shape has &quot;"] 
  "30064771148" -> "30064771147"  [ label = "DDG: context"] 
  "111669149697" -> "30064771147"  [ label = "DDG: "] 
  "30064771148" -> "30064771147"  [ label = "DDG: output_shape_idx"] 
  "30064771148" -> "30064771147"  [ label = "DDG: TensorShape({output_rank})"] 
  "30064771148" -> "30064771147"  [ label = "DDG: &amp;result_shape"] 
  "30064771163" -> "30064771162"  [ label = "DDG: context"] 
  "111669149697" -> "30064771162"  [ label = "DDG: "] 
  "30064771163" -> "30064771162"  [ label = "DDG: output_indices_idx"] 
  "30064771163" -> "30064771162"  [ label = "DDG: TensorShape({nnz, output_rank})"] 
  "30064771163" -> "30064771162"  [ label = "DDG: &amp;result_indices"] 
  "30064771074" -> "30064771073"  [ label = "DDG: input_indices_in"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: input_indices_in.shape()"] 
  "30064771080" -> "30064771079"  [ label = "DDG: input_shape_in"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: input_shape_in.shape()"] 
  "30064771086" -> "30064771085"  [ label = "DDG: target_shape_in"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: target_shape_in.shape()"] 
  "30064771089" -> "30064771091"  [ label = "DDG: target_shape_in"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771083" -> "30064771093"  [ label = "DDG: input_shape_in"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771098" -> "30064771097"  [ label = "DDG: input_indices_in"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771091" -> "30064771103"  [ label = "DDG: target_shape_in"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771104" -> "30064771105"  [ label = "DDG: d"] 
  "30064771106" -> "30064771105"  [ label = "DDG: d"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771090" -> "30064771105"  [ label = "DDG: output_rank"] 
  "30064771119" -> "30064771106"  [ label = "DDG: d"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771114" -> "30064771106"  [ label = "DDG: d"] 
  "30064771108" -> "30064771107"  [ label = "DDG: d"] 
  "30064771100" -> "30064771122"  [ label = "DDG: unknown_index"] 
  "30064771115" -> "30064771122"  [ label = "DDG: unknown_index"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771123" -> "30064771122"  [ label = "DDG: 1"] 
  "30064771128" -> "30064771127"  [ label = "DDG: dense_size"] 
  "30064771128" -> "30064771127"  [ label = "DDG: product"] 
  "30064771138" -> "30064771137"  [ label = "DDG: output_shape"] 
  "30064771094" -> "30064771137"  [ label = "DDG: dense_size"] 
  "30064771132" -> "30064771137"  [ label = "DDG: dense_size"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771137" -> "30064771139"  [ label = "DDG: dense_size"] 
  "30064771140" -> "30064771139"  [ label = "DDG: output_shape"] 
  "30064771141" -> "30064771139"  [ label = "DDG: input_shape"] 
  "30064771142" -> "30064771139"  [ label = "DDG: output_shape"] 
  "30064771141" -> "30064771143"  [ label = "DDG: input_shape"] 
  "111669149697" -> "30064771143"  [ label = "DDG: "] 
  "30064771142" -> "30064771143"  [ label = "DDG: output_shape"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771136" -> "30064771148"  [ label = "DDG: context"] 
  "111669149697" -> "30064771148"  [ label = "DDG: "] 
  "115964116997" -> "30064771148"  [ label = "DDG: output_shape_idx"] 
  "30064771149" -> "30064771148"  [ label = "DDG: {output_rank}"] 
  "30064771146" -> "30064771148"  [ label = "DDG: result_shape"] 
  "30064771146" -> "30064771153"  [ label = "DDG: result_shape"] 
  "30064771148" -> "30064771153"  [ label = "DDG: &amp;result_shape"] 
  "111669149697" -> "30064771153"  [ label = "DDG: "] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "30064771154" -> "30064771155"  [ label = "DDG: j"] 
  "30064771157" -> "30064771155"  [ label = "DDG: j"] 
  "111669149697" -> "30064771155"  [ label = "DDG: "] 
  "30064771156" -> "30064771155"  [ label = "DDG: output_shape"] 
  "30064771160" -> "30064771157"  [ label = "DDG: j"] 
  "111669149697" -> "30064771157"  [ label = "DDG: "] 
  "30064771160" -> "30064771158"  [ label = "DDG: output_shape"] 
  "30064771160" -> "30064771158"  [ label = "DDG: j"] 
  "30064771147" -> "30064771163"  [ label = "DDG: context"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "115964116996" -> "30064771163"  [ label = "DDG: output_indices_idx"] 
  "30064771164" -> "30064771163"  [ label = "DDG: {nnz, output_rank}"] 
  "30064771161" -> "30064771163"  [ label = "DDG: result_indices"] 
  "30064771165" -> "30064771167"  [ label = "DDG: nnz"] 
  "111669149697" -> "30064771167"  [ label = "DDG: "] 
  "115964116993" -> "30064771074"  [ label = "DDG: input_indices_in"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: input_indices_in"] 
  "115964116994" -> "30064771080"  [ label = "DDG: input_shape_in"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: input_shape_in"] 
  "115964116995" -> "30064771086"  [ label = "DDG: target_shape_in"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771089" -> "30064771088"  [ label = "DDG: target_shape_in"] 
  "30064771077" -> "30064771098"  [ label = "DDG: input_indices_in"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771084" -> "30064771124"  [ label = "DDG: context"] 
  "30064771117" -> "30064771124"  [ label = "DDG: context"] 
  "30064771111" -> "30064771124"  [ label = "DDG: context"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "30064771125" -> "30064771124"  [ label = "DDG: product"] 
  "30064771125" -> "30064771124"  [ label = "DDG: 0"] 
  "30064771126" -> "30064771124"  [ label = "DDG: &quot;reshape cannot infer the missing &quot;
                                &quot;input size for an empty tensor unless all &quot;
                                &quot;specified input sizes are non-zero&quot;"] 
  "30064771124" -> "30064771129"  [ label = "DDG: context"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "30064771130" -> "30064771129"  [ label = "DDG: product * missing"] 
  "30064771130" -> "30064771129"  [ label = "DDG: dense_size"] 
  "30064771132" -> "30064771129"  [ label = "DDG: &quot;Input to reshape is a SparseTensor with &quot;"] 
  "30064771132" -> "30064771129"  [ label = "DDG: product"] 
  "30064771132" -> "30064771129"  [ label = "DDG: &quot; output_shape=&quot;"] 
  "30064771132" -> "30064771129"  [ label = "DDG: dense_size"] 
  "30064771132" -> "30064771129"  [ label = "DDG: input_shape.DebugString()"] 
  "30064771132" -> "30064771129"  [ label = "DDG: &quot;. input_shape=&quot;"] 
  "30064771132" -> "30064771129"  [ label = "DDG: output_shape.DebugString()"] 
  "30064771132" -> "30064771129"  [ label = "DDG: &quot; dense values, but the requested shape requires a multiple of &quot;"] 
  "30064771134" -> "30064771135"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771122" -> "30064771135"  [ label = "DDG: unknown_index"] 
  "30064771131" -> "30064771135"  [ label = "DDG: missing"] 
  "30064771135" -> "30064771138"  [ label = "DDG: output_shape"] 
  "30064771121" -> "30064771138"  [ label = "DDG: output_shape"] 
  "30064771116" -> "30064771138"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771138" -> "30064771140"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771140"  [ label = "DDG: "] 
  "30064771095" -> "30064771141"  [ label = "DDG: input_shape"] 
  "30064771133" -> "30064771141"  [ label = "DDG: input_shape"] 
  "111669149697" -> "30064771141"  [ label = "DDG: "] 
  "30064771140" -> "30064771142"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "30064771136" -> "30064771144"  [ label = "DDG: context"] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "115964116996" -> "30064771144"  [ label = "DDG: output_indices_idx"] 
  "30064771098" -> "30064771144"  [ label = "DDG: input_indices_in"] 
  "30064771144" -> "30064771145"  [ label = "DDG: context"] 
  "111669149697" -> "30064771145"  [ label = "DDG: "] 
  "115964116997" -> "30064771145"  [ label = "DDG: output_shape_idx"] 
  "30064771093" -> "30064771145"  [ label = "DDG: input_shape_in"] 
  "30064771150" -> "30064771149"  [ label = "DDG: output_rank"] 
  "30064771143" -> "30064771156"  [ label = "DDG: output_shape"] 
  "30064771160" -> "30064771156"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771156"  [ label = "DDG: "] 
  "30064771165" -> "30064771164"  [ label = "DDG: nnz"] 
  "30064771165" -> "30064771164"  [ label = "DDG: output_rank"] 
  "30064771162" -> "30064771168"  [ label = "DDG: context"] 
  "111669149697" -> "30064771168"  [ label = "DDG: "] 
  "30064771169" -> "30064771168"  [ label = "DDG: dense_size &gt; 0"] 
  "30064771169" -> "30064771168"  [ label = "DDG: product &gt; 0"] 
  "30064771172" -> "30064771168"  [ label = "DDG: &quot;Input tensor has &quot;"] 
  "30064771172" -> "30064771168"  [ label = "DDG: output_shape.DebugString()"] 
  "30064771172" -> "30064771168"  [ label = "DDG: nnz"] 
  "30064771172" -> "30064771168"  [ label = "DDG: &quot; non zero elements but input shape (&quot;"] 
  "30064771172" -> "30064771168"  [ label = "DDG: input_shape.DebugString()"] 
  "30064771172" -> "30064771168"  [ label = "DDG: &quot;) is empty&quot;"] 
  "30064771172" -> "30064771168"  [ label = "DDG: &quot;) or output shape (&quot;"] 
  "30064771176" -> "30064771175"  [ label = "DDG: context"] 
  "111669149697" -> "30064771175"  [ label = "DDG: "] 
  "30064771176" -> "30064771175"  [ label = "DDG: output_shape"] 
  "30064771176" -> "30064771175"  [ label = "DDG: input_indices_in.matrix&lt;int64&gt;()"] 
  "30064771176" -> "30064771175"  [ label = "DDG: result_indices-&gt;matrix&lt;int64&gt;()"] 
  "30064771176" -> "30064771175"  [ label = "DDG: functor::ReshapeSparseTensorFunctor&lt;Device&gt;()"] 
  "30064771176" -> "30064771175"  [ label = "DDG: input_shape"] 
  "30064771074" -> "30064771077"  [ label = "DDG: input_indices_in"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771080" -> "30064771083"  [ label = "DDG: input_shape_in"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771086" -> "30064771089"  [ label = "DDG: target_shape_in"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771105" -> "30064771108"  [ label = "DDG: d"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771107" -> "30064771109"  [ label = "DDG: size"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771110" -> "30064771109"  [ label = "DDG: 1"] 
  "30064771114" -> "30064771115"  [ label = "DDG: d"] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771099" -> "30064771125"  [ label = "DDG: product"] 
  "30064771120" -> "30064771125"  [ label = "DDG: product"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "111669149697" -> "30064771126"  [ label = "DDG: "] 
  "30064771094" -> "30064771128"  [ label = "DDG: dense_size"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771125" -> "30064771128"  [ label = "DDG: product"] 
  "30064771131" -> "30064771130"  [ label = "DDG: product"] 
  "30064771131" -> "30064771130"  [ label = "DDG: missing"] 
  "30064771128" -> "30064771130"  [ label = "DDG: dense_size"] 
  "111669149697" -> "30064771130"  [ label = "DDG: "] 
  "111669149697" -> "30064771132"  [ label = "DDG: "] 
  "30064771130" -> "30064771132"  [ label = "DDG: dense_size"] 
  "30064771131" -> "30064771132"  [ label = "DDG: product"] 
  "30064771133" -> "30064771132"  [ label = "DDG: input_shape"] 
  "30064771134" -> "30064771132"  [ label = "DDG: output_shape"] 
  "30064771105" -> "30064771150"  [ label = "DDG: output_rank"] 
  "111669149697" -> "30064771150"  [ label = "DDG: "] 
  "30064771155" -> "30064771159"  [ label = "DDG: j"] 
  "111669149697" -> "30064771159"  [ label = "DDG: "] 
  "30064771156" -> "30064771160"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771160"  [ label = "DDG: "] 
  "30064771159" -> "30064771160"  [ label = "DDG: j"] 
  "30064771096" -> "30064771165"  [ label = "DDG: nnz"] 
  "111669149697" -> "30064771165"  [ label = "DDG: "] 
  "30064771150" -> "30064771165"  [ label = "DDG: output_rank"] 
  "30064771170" -> "30064771169"  [ label = "DDG: dense_size"] 
  "30064771170" -> "30064771169"  [ label = "DDG: 0"] 
  "30064771124" -> "30064771169"  [ label = "DDG: product &gt; 0"] 
  "30064771171" -> "30064771169"  [ label = "DDG: product"] 
  "30064771171" -> "30064771169"  [ label = "DDG: 0"] 
  "111669149697" -> "30064771172"  [ label = "DDG: "] 
  "30064771167" -> "30064771172"  [ label = "DDG: nnz"] 
  "30064771173" -> "30064771172"  [ label = "DDG: input_shape"] 
  "30064771174" -> "30064771172"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771176"  [ label = "DDG: "] 
  "30064771168" -> "30064771176"  [ label = "DDG: context"] 
  "30064771173" -> "30064771176"  [ label = "DDG: input_shape"] 
  "30064771174" -> "30064771176"  [ label = "DDG: output_shape"] 
  "30064771178" -> "30064771176"  [ label = "DDG: input_indices_in"] 
  "30064771179" -> "30064771176"  [ label = "DDG: result_indices"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771084" -> "30064771111"  [ label = "DDG: context"] 
  "30064771117" -> "30064771111"  [ label = "DDG: context"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771112" -> "30064771111"  [ label = "DDG: unknown_index"] 
  "30064771112" -> "30064771111"  [ label = "DDG: -1"] 
  "30064771114" -> "30064771111"  [ label = "DDG: &quot;only one output dimension may be -1, &quot;
                                  &quot;not both &quot;"] 
  "30064771114" -> "30064771111"  [ label = "DDG: unknown_index"] 
  "30064771114" -> "30064771111"  [ label = "DDG: &quot; and &quot;"] 
  "30064771114" -> "30064771111"  [ label = "DDG: d"] 
  "30064771121" -> "30064771116"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771119" -> "30064771120"  [ label = "DDG: size"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771128" -> "30064771131"  [ label = "DDG: product"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771127" -> "30064771131"  [ label = "DDG: missing"] 
  "30064771095" -> "30064771133"  [ label = "DDG: input_shape"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "30064771121" -> "30064771134"  [ label = "DDG: output_shape"] 
  "30064771116" -> "30064771134"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771139" -> "30064771170"  [ label = "DDG: dense_size"] 
  "111669149697" -> "30064771170"  [ label = "DDG: "] 
  "30064771099" -> "30064771171"  [ label = "DDG: product"] 
  "30064771132" -> "30064771171"  [ label = "DDG: product"] 
  "30064771120" -> "30064771171"  [ label = "DDG: product"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "30064771143" -> "30064771173"  [ label = "DDG: input_shape"] 
  "111669149697" -> "30064771173"  [ label = "DDG: "] 
  "30064771156" -> "30064771174"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771174"  [ label = "DDG: "] 
  "30064771098" -> "30064771178"  [ label = "DDG: input_indices_in"] 
  "111669149697" -> "30064771178"  [ label = "DDG: "] 
  "30064771161" -> "30064771179"  [ label = "DDG: result_indices"] 
  "30064771163" -> "30064771179"  [ label = "DDG: &amp;result_indices"] 
  "111669149697" -> "30064771179"  [ label = "DDG: "] 
  "30064771100" -> "30064771112"  [ label = "DDG: unknown_index"] 
  "30064771115" -> "30064771112"  [ label = "DDG: unknown_index"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771113" -> "30064771112"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771112" -> "30064771114"  [ label = "DDG: unknown_index"] 
  "30064771108" -> "30064771114"  [ label = "DDG: d"] 
  "30064771084" -> "30064771117"  [ label = "DDG: context"] 
  "30064771111" -> "30064771117"  [ label = "DDG: context"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771118" -> "30064771117"  [ label = "DDG: size"] 
  "30064771118" -> "30064771117"  [ label = "DDG: 0"] 
  "30064771119" -> "30064771117"  [ label = "DDG: &quot;size &quot;"] 
  "30064771119" -> "30064771117"  [ label = "DDG: d"] 
  "30064771119" -> "30064771117"  [ label = "DDG: &quot; must be non-negative, not &quot;"] 
  "30064771119" -> "30064771117"  [ label = "DDG: size"] 
  "30064771099" -> "30064771120"  [ label = "DDG: product"] 
  "30064771116" -> "30064771121"  [ label = "DDG: output_shape"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "30064771119" -> "30064771121"  [ label = "DDG: size"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771109" -> "30064771118"  [ label = "DDG: size"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771108" -> "30064771119"  [ label = "DDG: d"] 
  "30064771118" -> "30064771119"  [ label = "DDG: size"] 
  "30064771105" -> "30064771110"  [ label = "CDG: "] 
  "30064771105" -> "30064771109"  [ label = "CDG: "] 
  "30064771105" -> "30064771108"  [ label = "CDG: "] 
  "30064771105" -> "30064771107"  [ label = "CDG: "] 
  "30064771105" -> "30064771106"  [ label = "CDG: "] 
  "30064771105" -> "30064771105"  [ label = "CDG: "] 
  "30064771122" -> "30064771135"  [ label = "CDG: "] 
  "30064771122" -> "30064771134"  [ label = "CDG: "] 
  "30064771122" -> "30064771133"  [ label = "CDG: "] 
  "30064771122" -> "30064771132"  [ label = "CDG: "] 
  "30064771122" -> "30064771131"  [ label = "CDG: "] 
  "30064771122" -> "30064771130"  [ label = "CDG: "] 
  "30064771122" -> "30064771129"  [ label = "CDG: "] 
  "30064771122" -> "30064771128"  [ label = "CDG: "] 
  "30064771122" -> "30064771127"  [ label = "CDG: "] 
  "30064771122" -> "30064771126"  [ label = "CDG: "] 
  "30064771122" -> "30064771125"  [ label = "CDG: "] 
  "30064771122" -> "30064771124"  [ label = "CDG: "] 
  "30064771143" -> "30064771167"  [ label = "CDG: "] 
  "30064771143" -> "30064771166"  [ label = "CDG: "] 
  "30064771143" -> "30064771165"  [ label = "CDG: "] 
  "30064771143" -> "30064771164"  [ label = "CDG: "] 
  "30064771143" -> "30064771163"  [ label = "CDG: "] 
  "30064771143" -> "30064771162"  [ label = "CDG: "] 
  "30064771143" -> "30064771161"  [ label = "CDG: "] 
  "30064771143" -> "30064771156"  [ label = "CDG: "] 
  "30064771143" -> "30064771155"  [ label = "CDG: "] 
  "30064771143" -> "30064771154"  [ label = "CDG: "] 
  "30064771143" -> "30064771153"  [ label = "CDG: "] 
  "30064771143" -> "30064771152"  [ label = "CDG: "] 
  "30064771143" -> "30064771151"  [ label = "CDG: "] 
  "30064771143" -> "30064771150"  [ label = "CDG: "] 
  "30064771143" -> "30064771149"  [ label = "CDG: "] 
  "30064771143" -> "30064771148"  [ label = "CDG: "] 
  "30064771143" -> "30064771147"  [ label = "CDG: "] 
  "30064771143" -> "30064771146"  [ label = "CDG: "] 
  "30064771143" -> "30064771145"  [ label = "CDG: "] 
  "30064771143" -> "30064771144"  [ label = "CDG: "] 
  "30064771143" -> "146028888064"  [ label = "CDG: "] 
  "30064771155" -> "30064771160"  [ label = "CDG: "] 
  "30064771155" -> "30064771159"  [ label = "CDG: "] 
  "30064771155" -> "30064771158"  [ label = "CDG: "] 
  "30064771155" -> "30064771157"  [ label = "CDG: "] 
  "30064771155" -> "30064771156"  [ label = "CDG: "] 
  "30064771155" -> "30064771155"  [ label = "CDG: "] 
  "30064771167" -> "30064771176"  [ label = "CDG: "] 
  "30064771167" -> "30064771175"  [ label = "CDG: "] 
  "30064771167" -> "30064771174"  [ label = "CDG: "] 
  "30064771167" -> "30064771173"  [ label = "CDG: "] 
  "30064771167" -> "30064771172"  [ label = "CDG: "] 
  "30064771167" -> "30064771170"  [ label = "CDG: "] 
  "30064771167" -> "30064771169"  [ label = "CDG: "] 
  "30064771167" -> "30064771168"  [ label = "CDG: "] 
  "30064771167" -> "30064771179"  [ label = "CDG: "] 
  "30064771167" -> "30064771178"  [ label = "CDG: "] 
  "30064771167" -> "30064771177"  [ label = "CDG: "] 
  "30064771109" -> "30064771121"  [ label = "CDG: "] 
  "30064771109" -> "30064771120"  [ label = "CDG: "] 
  "30064771109" -> "30064771119"  [ label = "CDG: "] 
  "30064771109" -> "30064771118"  [ label = "CDG: "] 
  "30064771109" -> "30064771117"  [ label = "CDG: "] 
  "30064771109" -> "30064771116"  [ label = "CDG: "] 
  "30064771109" -> "30064771115"  [ label = "CDG: "] 
  "30064771109" -> "30064771114"  [ label = "CDG: "] 
  "30064771109" -> "30064771113"  [ label = "CDG: "] 
  "30064771109" -> "30064771112"  [ label = "CDG: "] 
  "30064771109" -> "30064771111"  [ label = "CDG: "] 
  "30064771170" -> "30064771171"  [ label = "CDG: "] 
}
"""
)
