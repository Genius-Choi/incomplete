[33mval[0m [36mres688[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "metacompile" {  
"111669149697" [label = <(METHOD,metacompile)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,node *n)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    nfagrammar *gr;
    int i;

    if (Py_De...,{
    nfagrammar *gr;
    int i;

    if (Py_De...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,nfagrammar* gr: nfagrammar*)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,int i: int)<SUB>4</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (Py_DebugFlag))<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,Py_DebugFlag,if (Py_DebugFlag))<SUB>6</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>> ]
"30064771072" [label = <(printf,printf(&quot;Compiling (meta-) parse tree into NFA g...)<SUB>7</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;Compiling (meta-) parse tree into NFA grammar\n&quot;,printf(&quot;Compiling (meta-) parse tree into NFA g...)<SUB>7</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,gr = newnfagrammar())<SUB>8</SUB>> ]
"68719476737" [label = <(IDENTIFIER,gr,gr = newnfagrammar())<SUB>8</SUB>> ]
"30064771074" [label = <(newnfagrammar,newnfagrammar())<SUB>8</SUB>> ]
"30064771075" [label = <(REQ,REQ(n, MSTART))<SUB>9</SUB>> ]
"68719476738" [label = <(IDENTIFIER,n,REQ(n, MSTART))<SUB>9</SUB>> ]
"68719476739" [label = <(IDENTIFIER,MSTART,REQ(n, MSTART))<SUB>9</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,i = n-&gt;n_nchildren - 1)<SUB>10</SUB>> ]
"68719476740" [label = <(IDENTIFIER,i,i = n-&gt;n_nchildren - 1)<SUB>10</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.subtraction,n-&gt;n_nchildren - 1)<SUB>10</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indirectFieldAccess,n-&gt;n_nchildren)<SUB>10</SUB>> ]
"68719476741" [label = <(IDENTIFIER,n,n-&gt;n_nchildren - 1)<SUB>10</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,n_nchildren,n_nchildren)<SUB>10</SUB>> ]
"90194313217" [label = <(LITERAL,1,n-&gt;n_nchildren - 1)<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,n = n-&gt;n_child)<SUB>11</SUB>> ]
"68719476742" [label = <(IDENTIFIER,n,n = n-&gt;n_child)<SUB>11</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.indirectFieldAccess,n-&gt;n_child)<SUB>11</SUB>> ]
"68719476743" [label = <(IDENTIFIER,n,n = n-&gt;n_child)<SUB>11</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,n_child,n_child)<SUB>11</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FOR,for (;--i &gt;= 0;n++))<SUB>12</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.greaterEqualsThan,--i &gt;= 0)<SUB>12</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.preDecrement,--i)<SUB>12</SUB>> ]
"68719476744" [label = <(IDENTIFIER,i,--i)<SUB>12</SUB>> ]
"90194313218" [label = <(LITERAL,0,--i &gt;= 0)<SUB>12</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.postIncrement,n++)<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,n,n++)<SUB>12</SUB>> ]
"25769803780" [label = <(BLOCK,{
        if (n-&gt;n_type != NEWLINE)
           ...,{
        if (n-&gt;n_type != NEWLINE)
           ...)<SUB>12</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (n-&gt;n_type != NEWLINE))<SUB>13</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.notEquals,n-&gt;n_type != NEWLINE)<SUB>13</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.indirectFieldAccess,n-&gt;n_type)<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,n,n-&gt;n_type != NEWLINE)<SUB>13</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,n_type,n_type)<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,NEWLINE,n-&gt;n_type != NEWLINE)<SUB>13</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>> ]
"30064771086" [label = <(compile_rule,compile_rule(gr, n))<SUB>14</SUB>> ]
"68719476748" [label = <(IDENTIFIER,gr,compile_rule(gr, n))<SUB>14</SUB>> ]
"68719476749" [label = <(IDENTIFIER,n,compile_rule(gr, n))<SUB>14</SUB>> ]
"146028888064" [label = <(RETURN,return gr;,return gr;)<SUB>16</SUB>> ]
"68719476750" [label = <(IDENTIFIER,gr,return gr;)<SUB>16</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771073"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "30064771076"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "47244640256" -> "68719476736"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "30064771072"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "90194313217"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "55834574848"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "55834574849"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "30064771081"  [ label = "AST: "] 
  "47244640257" -> "30064771083"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "25769803780" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771084"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771084" -> "68719476747"  [ label = "AST: "] 
  "30064771085" -> "68719476746"  [ label = "AST: "] 
  "30064771085" -> "55834574850"  [ label = "AST: "] 
  "25769803781" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476748"  [ label = "AST: "] 
  "30064771086" -> "68719476749"  [ label = "AST: "] 
  "146028888064" -> "68719476750"  [ label = "AST: "] 
  "30064771073" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "55834574848"  [ label = "CFG: "] 
  "30064771076" -> "55834574849"  [ label = "CFG: "] 
  "30064771079" -> "30064771082"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "68719476736" -> "30064771072"  [ label = "CFG: "] 
  "68719476736" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "55834574850"  [ label = "CFG: "] 
  "30064771081" -> "146028888064"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "55834574849" -> "30064771080"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "55834574848" -> "30064771078"  [ label = "CFG: "] 
  "30064771084" -> "30064771086"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "30064771083"  [ label = "CFG: "] 
  "55834574850" -> "30064771085"  [ label = "CFG: "] 
  "111669149697" -> "68719476736"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: printf(&quot;Compiling (meta-) parse tree into NFA grammar\n&quot;)"] 
  "30064771073" -> "128849018880"  [ label = "DDG: gr"] 
  "30064771073" -> "128849018880"  [ label = "DDG: newnfagrammar()"] 
  "30064771073" -> "128849018880"  [ label = "DDG: gr = newnfagrammar()"] 
  "30064771075" -> "128849018880"  [ label = "DDG: REQ(n, MSTART)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: n-&gt;n_nchildren"] 
  "30064771076" -> "128849018880"  [ label = "DDG: n-&gt;n_nchildren - 1"] 
  "30064771076" -> "128849018880"  [ label = "DDG: i = n-&gt;n_nchildren - 1"] 
  "30064771079" -> "128849018880"  [ label = "DDG: n"] 
  "30064771079" -> "128849018880"  [ label = "DDG: n-&gt;n_child"] 
  "30064771079" -> "128849018880"  [ label = "DDG: n = n-&gt;n_child"] 
  "30064771082" -> "128849018880"  [ label = "DDG: i"] 
  "30064771081" -> "128849018880"  [ label = "DDG: --i"] 
  "30064771081" -> "128849018880"  [ label = "DDG: --i &gt;= 0"] 
  "30064771084" -> "128849018880"  [ label = "DDG: n-&gt;n_type"] 
  "30064771084" -> "128849018880"  [ label = "DDG: n-&gt;n_type != NEWLINE"] 
  "30064771086" -> "128849018880"  [ label = "DDG: gr"] 
  "30064771086" -> "128849018880"  [ label = "DDG: compile_rule(gr, n)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: n"] 
  "30064771083" -> "128849018880"  [ label = "DDG: n++"] 
  "30064771084" -> "128849018880"  [ label = "DDG: NEWLINE"] 
  "30064771075" -> "128849018880"  [ label = "DDG: MSTART"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: n-&gt;n_nchildren"] 
  "30064771077" -> "30064771076"  [ label = "DDG: 1"] 
  "30064771075" -> "30064771079"  [ label = "DDG: n"] 
  "68719476750" -> "146028888064"  [ label = "DDG: gr"] 
  "111669149697" -> "68719476736"  [ label = "DDG: "] 
  "115964116992" -> "30064771075"  [ label = "DDG: n"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771086" -> "68719476750"  [ label = "DDG: gr"] 
  "30064771073" -> "68719476750"  [ label = "DDG: gr"] 
  "111669149697" -> "68719476750"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: n"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: i"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771077" -> "30064771083"  [ label = "DDG: n-&gt;n_nchildren"] 
  "30064771079" -> "30064771083"  [ label = "DDG: n"] 
  "30064771084" -> "30064771083"  [ label = "DDG: n-&gt;n_type"] 
  "30064771086" -> "30064771083"  [ label = "DDG: n"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771075" -> "30064771083"  [ label = "DDG: n"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771076" -> "30064771082"  [ label = "DDG: i"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771079" -> "30064771084"  [ label = "DDG: n"] 
  "30064771083" -> "30064771084"  [ label = "DDG: n"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771073" -> "30064771086"  [ label = "DDG: gr"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771077" -> "30064771086"  [ label = "DDG: n-&gt;n_nchildren"] 
  "30064771079" -> "30064771086"  [ label = "DDG: n"] 
  "30064771084" -> "30064771086"  [ label = "DDG: n-&gt;n_type"] 
  "30064771083" -> "30064771086"  [ label = "DDG: n"] 
  "30064771075" -> "30064771086"  [ label = "DDG: n"] 
  "68719476736" -> "30064771072"  [ label = "CDG: "] 
  "30064771081" -> "55834574850"  [ label = "CDG: "] 
  "30064771081" -> "30064771081"  [ label = "CDG: "] 
  "30064771081" -> "30064771085"  [ label = "CDG: "] 
  "30064771081" -> "30064771084"  [ label = "CDG: "] 
  "30064771081" -> "30064771083"  [ label = "CDG: "] 
  "30064771081" -> "30064771082"  [ label = "CDG: "] 
  "30064771084" -> "30064771086"  [ label = "CDG: "] 
}
"""
)
