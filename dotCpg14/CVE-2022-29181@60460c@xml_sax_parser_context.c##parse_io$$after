[33mval[0m [36mres151[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "parse_io" {  
"111669149697" [label = <(METHOD,parse_io)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,VALUE klass)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,VALUE io)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,VALUE encoding)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
  xmlParserCtxtPtr ctxt;
  xmlCharEncoding en...,{
  xmlParserCtxtPtr ctxt;
  xmlCharEncoding en...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,xmlParserCtxtPtr ctxt: xmlParserCtxtPtr)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,xmlCharEncoding enc: xmlCharEncoding)<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,enc = (xmlCharEncoding)NUM2INT(encoding))<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,enc,enc = (xmlCharEncoding)NUM2INT(encoding))<SUB>4</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.cast,(xmlCharEncoding)NUM2INT(encoding))<SUB>4</SUB>> ]
"184683593728" [label = <(UNKNOWN,xmlCharEncoding,xmlCharEncoding)<SUB>4</SUB>> ]
"30064771074" [label = <(NUM2INT,NUM2INT(encoding))<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,encoding,NUM2INT(encoding))<SUB>4</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!rb_respond_to(io, id_read)))<SUB>6</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.logicalNot,!rb_respond_to(io, id_read))<SUB>6</SUB>> ]
"30064771076" [label = <(rb_respond_to,rb_respond_to(io, id_read))<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,io,rb_respond_to(io, id_read))<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,id_read,rb_respond_to(io, id_read))<SUB>6</SUB>> ]
"25769803778" [label = <(BLOCK,{
    rb_raise(rb_eTypeError, &quot;argument expecte...,{
    rb_raise(rb_eTypeError, &quot;argument expecte...)<SUB>6</SUB>> ]
"30064771077" [label = <(rb_raise,rb_raise(rb_eTypeError, &quot;argument expected to r...)<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,rb_eTypeError,rb_raise(rb_eTypeError, &quot;argument expected to r...)<SUB>7</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;argument expected to respond to :read&quot;,rb_raise(rb_eTypeError, &quot;argument expected to r...)<SUB>7</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,ctxt = xmlCreateIOParserCtxt(NULL, NULL,
      ...)<SUB>10</SUB>> ]
"68719476741" [label = <(IDENTIFIER,ctxt,ctxt = xmlCreateIOParserCtxt(NULL, NULL,
      ...)<SUB>10</SUB>> ]
"30064771079" [label = <(xmlCreateIOParserCtxt,xmlCreateIOParserCtxt(NULL, NULL,
             ...)<SUB>10</SUB>> ]
"68719476742" [label = <(IDENTIFIER,NULL,xmlCreateIOParserCtxt(NULL, NULL,
             ...)<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,NULL,xmlCreateIOParserCtxt(NULL, NULL,
             ...)<SUB>10</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.cast,(xmlInputReadCallback)noko_io_read)<SUB>11</SUB>> ]
"184683593729" [label = <(UNKNOWN,xmlInputReadCallback,xmlInputReadCallback)<SUB>11</SUB>> ]
"68719476744" [label = <(IDENTIFIER,noko_io_read,(xmlInputReadCallback)noko_io_read)<SUB>11</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.cast,(xmlInputCloseCallback)noko_io_close)<SUB>12</SUB>> ]
"184683593730" [label = <(UNKNOWN,xmlInputCloseCallback,xmlInputCloseCallback)<SUB>12</SUB>> ]
"68719476745" [label = <(IDENTIFIER,noko_io_close,(xmlInputCloseCallback)noko_io_close)<SUB>12</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.cast,(void *)io)<SUB>13</SUB>> ]
"184683593731" [label = <(UNKNOWN,void *,void *)<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,io,(void *)io)<SUB>13</SUB>> ]
"68719476747" [label = <(IDENTIFIER,enc,xmlCreateIOParserCtxt(NULL, NULL,
             ...)<SUB>13</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (ctxt-&gt;sax))<SUB>14</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.indirectFieldAccess,ctxt-&gt;sax)<SUB>14</SUB>> ]
"68719476748" [label = <(IDENTIFIER,ctxt,if (ctxt-&gt;sax))<SUB>14</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,sax,sax)<SUB>14</SUB>> ]
"25769803779" [label = <(BLOCK,{
    xmlFree(ctxt-&gt;sax);
    ctxt-&gt;sax = NULL;...,{
    xmlFree(ctxt-&gt;sax);
    ctxt-&gt;sax = NULL;...)<SUB>14</SUB>> ]
"30064771084" [label = <(xmlFree,xmlFree(ctxt-&gt;sax))<SUB>15</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.indirectFieldAccess,ctxt-&gt;sax)<SUB>15</SUB>> ]
"68719476749" [label = <(IDENTIFIER,ctxt,xmlFree(ctxt-&gt;sax))<SUB>15</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,sax,sax)<SUB>15</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,ctxt-&gt;sax = NULL)<SUB>16</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.indirectFieldAccess,ctxt-&gt;sax)<SUB>16</SUB>> ]
"68719476750" [label = <(IDENTIFIER,ctxt,ctxt-&gt;sax = NULL)<SUB>16</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,sax,sax)<SUB>16</SUB>> ]
"68719476751" [label = <(IDENTIFIER,NULL,ctxt-&gt;sax = NULL)<SUB>16</SUB>> ]
"146028888064" [label = <(RETURN,return Data_Wrap_Struct(klass, NULL, deallocate...,return Data_Wrap_Struct(klass, NULL, deallocate...)<SUB>19</SUB>> ]
"30064771088" [label = <(Data_Wrap_Struct,Data_Wrap_Struct(klass, NULL, deallocate, ctxt))<SUB>19</SUB>> ]
"68719476752" [label = <(IDENTIFIER,klass,Data_Wrap_Struct(klass, NULL, deallocate, ctxt))<SUB>19</SUB>> ]
"68719476753" [label = <(IDENTIFIER,NULL,Data_Wrap_Struct(klass, NULL, deallocate, ctxt))<SUB>19</SUB>> ]
"68719476754" [label = <(IDENTIFIER,deallocate,Data_Wrap_Struct(klass, NULL, deallocate, ctxt))<SUB>19</SUB>> ]
"68719476755" [label = <(IDENTIFIER,ctxt,Data_Wrap_Struct(klass, NULL, deallocate, ctxt))<SUB>19</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "184683593728"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "47244640256" -> "30064771075"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "25769803778" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "90194313216"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "30064771081"  [ label = "AST: "] 
  "30064771079" -> "30064771082"  [ label = "AST: "] 
  "30064771079" -> "68719476747"  [ label = "AST: "] 
  "30064771080" -> "184683593729"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "184683593730"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "184683593731"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "47244640257" -> "30064771083"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771083" -> "68719476748"  [ label = "AST: "] 
  "30064771083" -> "55834574848"  [ label = "AST: "] 
  "25769803779" -> "30064771084"  [ label = "AST: "] 
  "25769803779" -> "30064771086"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476749"  [ label = "AST: "] 
  "30064771085" -> "55834574849"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "68719476751"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "55834574850"  [ label = "AST: "] 
  "146028888064" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476752"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "30064771088" -> "68719476754"  [ label = "AST: "] 
  "30064771088" -> "68719476755"  [ label = "AST: "] 
  "30064771072" -> "30064771076"  [ label = "CFG: "] 
  "30064771078" -> "55834574848"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "30064771075" -> "184683593729"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771083" -> "55834574849"  [ label = "CFG: "] 
  "30064771083" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "146028888064"  [ label = "CFG: "] 
  "184683593728" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771077" -> "184683593729"  [ label = "CFG: "] 
  "30064771080" -> "184683593730"  [ label = "CFG: "] 
  "30064771081" -> "184683593731"  [ label = "CFG: "] 
  "30064771082" -> "30064771079"  [ label = "CFG: "] 
  "55834574848" -> "30064771083"  [ label = "CFG: "] 
  "30064771084" -> "55834574850"  [ label = "CFG: "] 
  "30064771086" -> "30064771088"  [ label = "CFG: "] 
  "184683593729" -> "30064771080"  [ label = "CFG: "] 
  "184683593730" -> "30064771081"  [ label = "CFG: "] 
  "184683593731" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "55834574849" -> "30064771085"  [ label = "CFG: "] 
  "55834574850" -> "30064771087"  [ label = "CFG: "] 
  "111669149697" -> "184683593728"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771074" -> "128849018880"  [ label = "DDG: encoding"] 
  "30064771073" -> "128849018880"  [ label = "DDG: NUM2INT(encoding)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: (xmlCharEncoding)NUM2INT(encoding)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: enc = (xmlCharEncoding)NUM2INT(encoding)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: rb_respond_to(io, id_read)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: !rb_respond_to(io, id_read)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: rb_raise(rb_eTypeError, &quot;argument expected to respond to :read&quot;)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: (xmlInputReadCallback)noko_io_read"] 
  "30064771079" -> "128849018880"  [ label = "DDG: (xmlInputCloseCallback)noko_io_close"] 
  "30064771082" -> "128849018880"  [ label = "DDG: io"] 
  "30064771079" -> "128849018880"  [ label = "DDG: (void *)io"] 
  "30064771079" -> "128849018880"  [ label = "DDG: enc"] 
  "30064771078" -> "128849018880"  [ label = "DDG: xmlCreateIOParserCtxt(NULL, NULL,
                               (xmlInputReadCallback)noko_io_read,
                               (xmlInputCloseCallback)noko_io_close,
                               (void *)io, enc)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: ctxt = xmlCreateIOParserCtxt(NULL, NULL,
                               (xmlInputReadCallback)noko_io_read,
                               (xmlInputCloseCallback)noko_io_close,
                               (void *)io, enc)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: xmlFree(ctxt-&gt;sax)"] 
  "30064771086" -> "128849018880"  [ label = "DDG: ctxt-&gt;sax"] 
  "30064771086" -> "128849018880"  [ label = "DDG: ctxt-&gt;sax = NULL"] 
  "30064771088" -> "128849018880"  [ label = "DDG: klass"] 
  "30064771088" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771088" -> "128849018880"  [ label = "DDG: deallocate"] 
  "30064771088" -> "128849018880"  [ label = "DDG: ctxt"] 
  "30064771088" -> "128849018880"  [ label = "DDG: Data_Wrap_Struct(klass, NULL, deallocate, ctxt)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: id_read"] 
  "30064771077" -> "128849018880"  [ label = "DDG: rb_eTypeError"] 
  "30064771081" -> "128849018880"  [ label = "DDG: noko_io_close"] 
  "30064771080" -> "128849018880"  [ label = "DDG: noko_io_read"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771074" -> "30064771072"  [ label = "DDG: encoding"] 
  "30064771079" -> "30064771078"  [ label = "DDG: NULL"] 
  "30064771079" -> "30064771078"  [ label = "DDG: enc"] 
  "30064771079" -> "30064771078"  [ label = "DDG: (xmlInputCloseCallback)noko_io_close"] 
  "30064771079" -> "30064771078"  [ label = "DDG: (xmlInputReadCallback)noko_io_read"] 
  "30064771079" -> "30064771078"  [ label = "DDG: (void *)io"] 
  "30064771088" -> "146028888064"  [ label = "DDG: Data_Wrap_Struct(klass, NULL, deallocate, ctxt)"] 
  "30064771074" -> "30064771073"  [ label = "DDG: encoding"] 
  "30064771076" -> "30064771075"  [ label = "DDG: io"] 
  "30064771076" -> "30064771075"  [ label = "DDG: id_read"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771076" -> "30064771079"  [ label = "DDG: io"] 
  "30064771072" -> "30064771079"  [ label = "DDG: enc"] 
  "30064771079" -> "30064771086"  [ label = "DDG: NULL"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "115964116992" -> "30064771088"  [ label = "DDG: klass"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771079" -> "30064771088"  [ label = "DDG: NULL"] 
  "30064771078" -> "30064771088"  [ label = "DDG: ctxt"] 
  "30064771086" -> "30064771088"  [ label = "DDG: ctxt-&gt;sax"] 
  "115964116994" -> "30064771074"  [ label = "DDG: encoding"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116993" -> "30064771076"  [ label = "DDG: io"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771076" -> "30064771082"  [ label = "DDG: io"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771078" -> "30064771084"  [ label = "DDG: ctxt"] 
  "30064771075" -> "30064771077"  [ label = "CDG: "] 
  "30064771083" -> "55834574850"  [ label = "CDG: "] 
  "30064771083" -> "55834574849"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771087"  [ label = "CDG: "] 
  "30064771083" -> "30064771084"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
}
"""
)
