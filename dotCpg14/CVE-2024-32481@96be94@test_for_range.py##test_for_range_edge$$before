[33mval[0m [36mres2225[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_for_range_edge" {  
"111669149697" [label = <(METHOD,test_for_range_edge)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,code = f&quot;&quot;&quot;
@external
def test():
    found: bo...)<SUB>2</SUB>> ]
"68719476742" [label = <(IDENTIFIER,code,code = f&quot;&quot;&quot;
@external
def test():
    found: bo...)<SUB>2</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.formatString,f&quot;&quot;&quot;
@external
def test():
    found: bool = Fa...)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,
@external
def test():
    found: bool = False
...,f&quot;&quot;&quot;
@external
def test():
    found: bool = Fa...)<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,typ,{typ})<SUB>6</SUB>> ]
"90194313217" [label = <(LITERAL, = max_value(,f&quot;&quot;&quot;
@external
def test():
    found: bool = Fa...)<SUB>6</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,typ,{typ})<SUB>6</SUB>> ]
"90194313218" [label = <(LITERAL,)
    for i in range(x, x + 1):
        if i ==...,f&quot;&quot;&quot;
@external
def test():
    found: bool = Fa...)<SUB>6</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>8</SUB>> ]
"68719476739" [label = <(IDENTIFIER,typ,{typ})<SUB>8</SUB>> ]
"90194313219" [label = <(LITERAL,):
            found = True

    assert found

...,f&quot;&quot;&quot;
@external
def test():
    found: bool = Fa...)<SUB>8</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>14</SUB>> ]
"68719476740" [label = <(IDENTIFIER,typ,{typ})<SUB>14</SUB>> ]
"90194313220" [label = <(LITERAL,) - 1
    for i in range(x, x + 2):
        if ...,f&quot;&quot;&quot;
@external
def test():
    found: bool = Fa...)<SUB>14</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.formattedValue,{typ})<SUB>16</SUB>> ]
"68719476741" [label = <(IDENTIFIER,typ,{typ})<SUB>16</SUB>> ]
"90194313221" [label = <(LITERAL,):
            found = True

    assert found
    ,f&quot;&quot;&quot;
@external
def test():
    found: bool = Fa...)<SUB>16</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,c = get_contract(code))<SUB>21</SUB>> ]
"68719476745" [label = <(IDENTIFIER,c,c = get_contract(code))<SUB>21</SUB>> ]
"30064771079" [label = <(get_contract,get_contract(code))<SUB>21</SUB>> ]
"68719476744" [label = <(IDENTIFIER,get_contract,get_contract(code))<SUB>21</SUB>> ]
"68719476743" [label = <(IDENTIFIER,code,get_contract(code))<SUB>21</SUB>> ]
"30064771082" [label = <(test,c.test())<SUB>22</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,c.test)<SUB>22</SUB>> ]
"68719476746" [label = <(IDENTIFIER,c,c.test())<SUB>22</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,test,test)<SUB>22</SUB>> ]
"68719476747" [label = <(IDENTIFIER,c,c.test())<SUB>22</SUB>> ]
"94489280513" [label = <(LOCAL,code: ANY)<SUB>2</SUB>> ]
"94489280514" [label = <(LOCAL,c: get_contract.&lt;returnValue&gt;)<SUB>21</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,get_contract)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,typ)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771082"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "90194313216"  [ label = "AST: "] 
  "30064771077" -> "30064771072"  [ label = "AST: "] 
  "30064771077" -> "90194313217"  [ label = "AST: "] 
  "30064771077" -> "30064771073"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771077" -> "30064771074"  [ label = "AST: "] 
  "30064771077" -> "90194313219"  [ label = "AST: "] 
  "30064771077" -> "30064771075"  [ label = "AST: "] 
  "30064771077" -> "90194313220"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771077" -> "90194313221"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "55834574848"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771080" -> "55834574848"  [ label = "CFG: "] 
  "30064771082" -> "128849018881"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "55834574848" -> "30064771081"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "115964116992" -> "128849018881"  [ label = "DDG: get_contract"] 
  "30064771077" -> "128849018881"  [ label = "DDG: {typ}"] 
  "30064771076" -> "128849018881"  [ label = "DDG: typ"] 
  "30064771078" -> "128849018881"  [ label = "DDG: f&quot;&quot;&quot;
@external
def test():
    found: bool = False
    x: {typ} = max_value({typ})
    for i in range(x, x + 1):
        if i == max_value({typ}):
            found = True

    assert found

    found = False
    x = max_value({typ}) - 1
    for i in range(x, x + 2):
        if i == max_value({typ}):
            found = True

    assert found
    &quot;&quot;&quot;"] 
  "30064771078" -> "128849018881"  [ label = "DDG: code = f&quot;&quot;&quot;
@external
def test():
    found: bool = False
    x: {typ} = max_value({typ})
    for i in range(x, x + 1):
        if i == max_value({typ}):
            found = True

    assert found

    found = False
    x = max_value({typ}) - 1
    for i in range(x, x + 2):
        if i == max_value({typ}):
            found = True

    assert found
    &quot;&quot;&quot;"] 
  "30064771079" -> "128849018881"  [ label = "DDG: code"] 
  "30064771080" -> "128849018881"  [ label = "DDG: get_contract(code)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: c = get_contract(code)"] 
  "30064771082" -> "128849018881"  [ label = "DDG: c"] 
  "30064771082" -> "128849018881"  [ label = "DDG: c.test()"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771077" -> "30064771078"  [ label = "DDG: {typ}"] 
  "30064771077" -> "30064771078"  [ label = "DDG: ) - 1
    for i in range(x, x + 2):
        if i == max_value("] 
  "30064771077" -> "30064771078"  [ label = "DDG: )
    for i in range(x, x + 1):
        if i == max_value("] 
  "30064771077" -> "30064771078"  [ label = "DDG: 
@external
def test():
    found: bool = False
    x: "] 
  "30064771077" -> "30064771078"  [ label = "DDG: ):
            found = True

    assert found

    found = False
    x = max_value("] 
  "30064771077" -> "30064771078"  [ label = "DDG: ):
            found = True

    assert found
    "] 
  "30064771077" -> "30064771078"  [ label = "DDG:  = max_value("] 
  "30064771079" -> "30064771080"  [ label = "DDG: code"] 
  "30064771080" -> "30064771082"  [ label = "DDG: c"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771072" -> "30064771077"  [ label = "DDG: typ"] 
  "30064771073" -> "30064771077"  [ label = "DDG: typ"] 
  "30064771074" -> "30064771077"  [ label = "DDG: typ"] 
  "30064771075" -> "30064771077"  [ label = "DDG: typ"] 
  "30064771076" -> "30064771077"  [ label = "DDG: typ"] 
  "111669149697" -> "68719476744"  [ label = "DDG: "] 
  "30064771078" -> "30064771079"  [ label = "DDG: code"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "115964116993" -> "30064771072"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771072" -> "30064771073"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771073" -> "30064771074"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771075" -> "30064771076"  [ label = "DDG: typ"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
}
"""
)
