[33mval[0m [36mres980[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_truncate_text" {  
"111669149696" [label = <(METHOD,test_truncate_text)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,self)<SUB>1</SUB>> ]
"25769803776" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,s: ANY)<SUB>4</SUB>> ]
"30064771072" [label = <(assert_equal,assert_equal &quot;abc&quot;, truncate_text(&quot;abc&quot;, &quot;desc&quot;))<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.fieldAccess,self.assert_equal)<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,self,assert_equal &quot;abc&quot;, truncate_text(&quot;abc&quot;, &quot;desc&quot;))<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,assert_equal,assert_equal)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,self,assert_equal &quot;abc&quot;, truncate_text(&quot;abc&quot;, &quot;desc&quot;))<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;abc&quot;,assert_equal &quot;abc&quot;, truncate_text(&quot;abc&quot;, &quot;desc&quot;))<SUB>2</SUB>> ]
"30064771074" [label = <(truncate_text,truncate_text(&quot;abc&quot;, &quot;desc&quot;))<SUB>2</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,self.truncate_text)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,self,truncate_text(&quot;abc&quot;, &quot;desc&quot;))<SUB>2</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,truncate_text,truncate_text)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,self,truncate_text(&quot;abc&quot;, &quot;desc&quot;))<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;abc&quot;,truncate_text(&quot;abc&quot;, &quot;desc&quot;))<SUB>2</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;desc&quot;,truncate_text(&quot;abc&quot;, &quot;desc&quot;))<SUB>2</SUB>> ]
"30064771076" [label = <(assert_equal,assert_equal &quot;Truncating desc to 2 characters:\...)<SUB>3</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.fieldAccess,self.assert_equal)<SUB>3</SUB>> ]
"68719476740" [label = <(IDENTIFIER,self,assert_equal &quot;Truncating desc to 2 characters:\...)<SUB>3</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,assert_equal,assert_equal)<SUB>3</SUB>> ]
"68719476741" [label = <(IDENTIFIER,self,assert_equal &quot;Truncating desc to 2 characters:\...)<SUB>3</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;Truncating desc to 2 characters:\nab&quot;,assert_equal &quot;Truncating desc to 2 characters:\...)<SUB>3</SUB>> ]
"30064771078" [label = <(truncate_text,truncate_text(&quot;abc&quot;, &quot;desc&quot;, 2))<SUB>3</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,self.truncate_text)<SUB>3</SUB>> ]
"68719476742" [label = <(IDENTIFIER,self,truncate_text(&quot;abc&quot;, &quot;desc&quot;, 2))<SUB>3</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,truncate_text,truncate_text)<SUB>3</SUB>> ]
"68719476743" [label = <(IDENTIFIER,self,truncate_text(&quot;abc&quot;, &quot;desc&quot;, 2))<SUB>3</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;abc&quot;,truncate_text(&quot;abc&quot;, &quot;desc&quot;, 2))<SUB>3</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;desc&quot;,truncate_text(&quot;abc&quot;, &quot;desc&quot;, 2))<SUB>3</SUB>> ]
"90194313222" [label = <(LITERAL,2,truncate_text(&quot;abc&quot;, &quot;desc&quot;, 2))<SUB>3</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,s = &quot;ab&quot; * 500_001)<SUB>4</SUB>> ]
"68719476744" [label = <(IDENTIFIER,s,s = &quot;ab&quot; * 500_001)<SUB>4</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.multiplication,&quot;ab&quot; * 500_001)<SUB>4</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;ab&quot;,&quot;ab&quot; * 500_001)<SUB>4</SUB>> ]
"90194313224" [label = <(LITERAL,500_001,&quot;ab&quot; * 500_001)<SUB>4</SUB>> ]
"146028888064" [label = <(RETURN,assert_equal &quot;Truncating desc to 1,000,000 char...,assert_equal &quot;Truncating desc to 1,000,000 char...)<SUB>5</SUB>> ]
"30064771082" [label = <(assert_equal,assert_equal &quot;Truncating desc to 1,000,000 char...)<SUB>5</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.fieldAccess,self.assert_equal)<SUB>5</SUB>> ]
"68719476745" [label = <(IDENTIFIER,self,assert_equal &quot;Truncating desc to 1,000,000 char...)<SUB>5</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,assert_equal,assert_equal)<SUB>5</SUB>> ]
"68719476746" [label = <(IDENTIFIER,self,assert_equal &quot;Truncating desc to 1,000,000 char...)<SUB>5</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.formatString,&quot;Truncating desc to 1,000,000 characters:\n#{s[...)<SUB>5</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.formattedValue,s[0, 1_000_000])<SUB>5</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indexAccess,s[0, 1_000_000])<SUB>5</SUB>> ]
"68719476747" [label = <(IDENTIFIER,s,s[0, 1_000_000])<SUB>5</SUB>> ]
"90194313225" [label = <(LITERAL,0,s[0, 1_000_000])<SUB>5</SUB>> ]
"90194313226" [label = <(LITERAL,1_000_000,s[0, 1_000_000])<SUB>5</SUB>> ]
"30064771087" [label = <(truncate_text,truncate_text(s, &quot;desc&quot;, 1_000_000))<SUB>5</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,self.truncate_text)<SUB>5</SUB>> ]
"68719476748" [label = <(IDENTIFIER,self,truncate_text(s, &quot;desc&quot;, 1_000_000))<SUB>5</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,truncate_text,truncate_text)<SUB>5</SUB>> ]
"68719476749" [label = <(IDENTIFIER,self,truncate_text(s, &quot;desc&quot;, 1_000_000))<SUB>5</SUB>> ]
"68719476750" [label = <(IDENTIFIER,s,truncate_text(s, &quot;desc&quot;, 1_000_000))<SUB>5</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;desc&quot;,truncate_text(s, &quot;desc&quot;, 1_000_000))<SUB>5</SUB>> ]
"90194313228" [label = <(LITERAL,1_000_000,truncate_text(s, &quot;desc&quot;, 1_000_000))<SUB>5</SUB>> ]
"133143986176" [label = <(MODIFIER,VIRTUAL)> ]
"133143986177" [label = <(MODIFIER,PRIVATE)> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149696" -> "115964116992"  [ label = "AST: "] 
  "111669149696" -> "25769803776"  [ label = "AST: "] 
  "111669149696" -> "133143986176"  [ label = "AST: "] 
  "111669149696" -> "133143986177"  [ label = "AST: "] 
  "111669149696" -> "128849018880"  [ label = "AST: "] 
  "25769803776" -> "94489280512"  [ label = "AST: "] 
  "25769803776" -> "30064771072"  [ label = "AST: "] 
  "25769803776" -> "30064771076"  [ label = "AST: "] 
  "25769803776" -> "30064771080"  [ label = "AST: "] 
  "25769803776" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "68719476736"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "90194313217"  [ label = "AST: "] 
  "30064771074" -> "90194313218"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "55834574849"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "68719476741"  [ label = "AST: "] 
  "30064771076" -> "90194313219"  [ label = "AST: "] 
  "30064771076" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "55834574850"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "90194313220"  [ label = "AST: "] 
  "30064771078" -> "90194313221"  [ label = "AST: "] 
  "30064771078" -> "90194313222"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "55834574851"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "90194313223"  [ label = "AST: "] 
  "30064771081" -> "90194313224"  [ label = "AST: "] 
  "146028888064" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "30064771084"  [ label = "AST: "] 
  "30064771082" -> "30064771087"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "55834574852"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "30064771086" -> "90194313225"  [ label = "AST: "] 
  "30064771086" -> "90194313226"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "68719476749"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "90194313227"  [ label = "AST: "] 
  "30064771087" -> "90194313228"  [ label = "AST: "] 
  "30064771088" -> "68719476748"  [ label = "AST: "] 
  "30064771088" -> "55834574853"  [ label = "AST: "] 
  "30064771072" -> "55834574850"  [ label = "CFG: "] 
  "30064771076" -> "30064771081"  [ label = "CFG: "] 
  "30064771080" -> "55834574852"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "55834574849"  [ label = "CFG: "] 
  "30064771074" -> "30064771072"  [ label = "CFG: "] 
  "30064771077" -> "55834574851"  [ label = "CFG: "] 
  "30064771078" -> "30064771076"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771082" -> "146028888064"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "55834574850" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771083" -> "30064771086"  [ label = "CFG: "] 
  "30064771084" -> "55834574853"  [ label = "CFG: "] 
  "30064771087" -> "30064771082"  [ label = "CFG: "] 
  "55834574849" -> "30064771075"  [ label = "CFG: "] 
  "55834574851" -> "30064771079"  [ label = "CFG: "] 
  "55834574852" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "55834574853" -> "30064771088"  [ label = "CFG: "] 
  "111669149696" -> "55834574848"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: truncate_text(&quot;abc&quot;, &quot;desc&quot;)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: assert_equal &quot;abc&quot;, truncate_text(&quot;abc&quot;, &quot;desc&quot;)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: truncate_text(&quot;abc&quot;, &quot;desc&quot;, 2)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: assert_equal &quot;Truncating desc to 2 characters:\nab&quot;, truncate_text(&quot;abc&quot;, &quot;desc&quot;, 2)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: &quot;ab&quot; * 500_001"] 
  "30064771080" -> "128849018880"  [ label = "DDG: s = &quot;ab&quot; * 500_001"] 
  "30064771082" -> "128849018880"  [ label = "DDG: self"] 
  "30064771084" -> "128849018880"  [ label = "DDG: s[0, 1_000_000]"] 
  "30064771082" -> "128849018880"  [ label = "DDG: &quot;Truncating desc to 1,000,000 characters:\n#{s[0, 1_000_000]}&quot;"] 
  "30064771087" -> "128849018880"  [ label = "DDG: s"] 
  "30064771082" -> "128849018880"  [ label = "DDG: truncate_text(s, &quot;desc&quot;, 1_000_000)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: assert_equal &quot;Truncating desc to 1,000,000 characters:\n#{s[0, 1_000_000]}&quot;, truncate_text(s, &quot;desc&quot;, 1_000_000)"] 
  "111669149696" -> "115964116992"  [ label = "DDG: "] 
  "30064771081" -> "30064771080"  [ label = "DDG: &quot;ab&quot;"] 
  "30064771081" -> "30064771080"  [ label = "DDG: 500_001"] 
  "30064771082" -> "146028888064"  [ label = "DDG: assert_equal &quot;Truncating desc to 1,000,000 characters:\n#{s[0, 1_000_000]}&quot;, truncate_text(s, &quot;desc&quot;, 1_000_000)"] 
  "30064771074" -> "30064771072"  [ label = "DDG: self"] 
  "111669149696" -> "30064771072"  [ label = "DDG: "] 
  "30064771074" -> "30064771072"  [ label = "DDG: &quot;abc&quot;"] 
  "30064771074" -> "30064771072"  [ label = "DDG: &quot;desc&quot;"] 
  "30064771078" -> "30064771076"  [ label = "DDG: self"] 
  "111669149696" -> "30064771076"  [ label = "DDG: "] 
  "30064771078" -> "30064771076"  [ label = "DDG: &quot;abc&quot;"] 
  "30064771078" -> "30064771076"  [ label = "DDG: &quot;desc&quot;"] 
  "30064771078" -> "30064771076"  [ label = "DDG: 2"] 
  "115964116992" -> "30064771074"  [ label = "DDG: self"] 
  "111669149696" -> "30064771074"  [ label = "DDG: "] 
  "30064771072" -> "30064771078"  [ label = "DDG: self"] 
  "111669149696" -> "30064771078"  [ label = "DDG: "] 
  "111669149696" -> "30064771081"  [ label = "DDG: "] 
  "30064771087" -> "30064771082"  [ label = "DDG: self"] 
  "111669149696" -> "30064771082"  [ label = "DDG: "] 
  "30064771084" -> "30064771082"  [ label = "DDG: s[0, 1_000_000]"] 
  "30064771087" -> "30064771082"  [ label = "DDG: s"] 
  "30064771087" -> "30064771082"  [ label = "DDG: &quot;desc&quot;"] 
  "30064771087" -> "30064771082"  [ label = "DDG: 1_000_000"] 
  "30064771085" -> "30064771084"  [ label = "DDG: s[0, 1_000_000]"] 
  "30064771076" -> "30064771087"  [ label = "DDG: self"] 
  "111669149696" -> "30064771087"  [ label = "DDG: "] 
  "30064771080" -> "30064771087"  [ label = "DDG: s"] 
  "30064771080" -> "30064771085"  [ label = "DDG: s"] 
}
"""
)
