[33mval[0m [36mres1917[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "t1mac_output_ascii" {  
"111669149697" [label = <(METHOD,t1mac_output_ascii)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,char *s)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,int len)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
  if (blocktyp == POST_BINARY) {
    output_c...,{
  if (blocktyp == POST_BINARY) {
    output_c...)<SUB>2</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (blocktyp == POST_BINARY))<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.equals,blocktyp == POST_BINARY)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,blocktyp,blocktyp == POST_BINARY)<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,POST_BINARY,blocktyp == POST_BINARY)<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,{
    output_current_post();
    blocktyp = POS...,{
    output_current_post();
    blocktyp = POS...)<SUB>3</SUB>> ]
"30064771073" [label = <(output_current_post,output_current_post())<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,blocktyp = POST_ASCII)<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,blocktyp,blocktyp = POST_ASCII)<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,POST_ASCII,blocktyp = POST_ASCII)<SUB>5</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (len &gt; 0 &amp;&amp; s[len-1] == '\n'))<SUB>8</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.logicalAnd,len &gt; 0 &amp;&amp; s[len-1] == '\n')<SUB>8</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.greaterThan,len &gt; 0)<SUB>8</SUB>> ]
"68719476740" [label = <(IDENTIFIER,len,len &gt; 0)<SUB>8</SUB>> ]
"90194313216" [label = <(LITERAL,0,len &gt; 0)<SUB>8</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.equals,s[len-1] == '\n')<SUB>8</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indirectIndexAccess,s[len-1])<SUB>8</SUB>> ]
"68719476741" [label = <(IDENTIFIER,s,s[len-1] == '\n')<SUB>8</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.subtraction,len-1)<SUB>8</SUB>> ]
"68719476742" [label = <(IDENTIFIER,len,len-1)<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,1,len-1)<SUB>8</SUB>> ]
"90194313218" [label = <(LITERAL,'\n',s[len-1] == '\n')<SUB>8</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,s[len-1] = '\r')<SUB>9</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.indirectIndexAccess,s[len-1])<SUB>9</SUB>> ]
"68719476743" [label = <(IDENTIFIER,s,s[len-1] = '\r')<SUB>9</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.subtraction,len-1)<SUB>9</SUB>> ]
"68719476744" [label = <(IDENTIFIER,len,len-1)<SUB>9</SUB>> ]
"90194313219" [label = <(LITERAL,1,len-1)<SUB>9</SUB>> ]
"90194313220" [label = <(LITERAL,'\r',s[len-1] = '\r')<SUB>9</SUB>> ]
"30064771083" [label = <(t1mac_output_data,t1mac_output_data((byte *)s, len))<SUB>10</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.cast,(byte *)s)<SUB>10</SUB>> ]
"184683593728" [label = <(UNKNOWN,byte *,byte *)<SUB>10</SUB>> ]
"68719476745" [label = <(IDENTIFIER,s,(byte *)s)<SUB>10</SUB>> ]
"68719476746" [label = <(IDENTIFIER,len,t1mac_output_data((byte *)s, len))<SUB>10</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (strncmp(s, &quot;/FontName&quot;, 9) == 0))<SUB>11</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.equals,strncmp(s, &quot;/FontName&quot;, 9) == 0)<SUB>11</SUB>> ]
"30064771086" [label = <(strncmp,strncmp(s, &quot;/FontName&quot;, 9))<SUB>11</SUB>> ]
"68719476747" [label = <(IDENTIFIER,s,strncmp(s, &quot;/FontName&quot;, 9))<SUB>11</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;/FontName&quot;,strncmp(s, &quot;/FontName&quot;, 9))<SUB>11</SUB>> ]
"90194313222" [label = <(LITERAL,9,strncmp(s, &quot;/FontName&quot;, 9))<SUB>11</SUB>> ]
"90194313223" [label = <(LITERAL,0,strncmp(s, &quot;/FontName&quot;, 9) == 0)<SUB>11</SUB>> ]
"25769803780" [label = <(BLOCK,{
    for (s += 9; isspace(*s); s++) ;
    if (...,{
    for (s += 9; isspace(*s); s++) ;
    if (...)<SUB>11</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,FOR,for (s += 9;isspace(*s);s++))<SUB>12</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignmentPlus,s += 9)<SUB>12</SUB>> ]
"68719476748" [label = <(IDENTIFIER,s,s += 9)<SUB>12</SUB>> ]
"90194313224" [label = <(LITERAL,9,s += 9)<SUB>12</SUB>> ]
"30064771088" [label = <(isspace,isspace(*s))<SUB>12</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.indirection,*s)<SUB>12</SUB>> ]
"68719476749" [label = <(IDENTIFIER,s,isspace(*s))<SUB>12</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.postIncrement,s++)<SUB>12</SUB>> ]
"68719476750" [label = <(IDENTIFIER,s,s++)<SUB>12</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (*s == '/'))<SUB>13</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.equals,*s == '/')<SUB>13</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.indirection,*s)<SUB>13</SUB>> ]
"68719476751" [label = <(IDENTIFIER,s,*s == '/')<SUB>13</SUB>> ]
"90194313225" [label = <(LITERAL,'/',*s == '/')<SUB>13</SUB>> ]
"25769803782" [label = <(BLOCK,{
      const char *t = ++s;
      while (*t &amp;&amp;...,{
      const char *t = ++s;
      while (*t &amp;&amp;...)<SUB>13</SUB>> ]
"94489280512" [label = <(LOCAL,const char* t: char*)<SUB>14</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,*t = ++s)<SUB>14</SUB>> ]
"68719476752" [label = <(IDENTIFIER,t,*t = ++s)<SUB>14</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.preIncrement,++s)<SUB>14</SUB>> ]
"68719476753" [label = <(IDENTIFIER,s,++s)<SUB>14</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,WHILE,while (*t &amp;&amp; !isspace(*t)))<SUB>15</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.logicalAnd,*t &amp;&amp; !isspace(*t))<SUB>15</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.indirection,*t)<SUB>15</SUB>> ]
"68719476754" [label = <(IDENTIFIER,t,*t &amp;&amp; !isspace(*t))<SUB>15</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.logicalNot,!isspace(*t))<SUB>15</SUB>> ]
"30064771098" [label = <(isspace,isspace(*t))<SUB>15</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.indirection,*t)<SUB>15</SUB>> ]
"68719476755" [label = <(IDENTIFIER,t,isspace(*t))<SUB>15</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.postIncrement,t++)<SUB>15</SUB>> ]
"68719476756" [label = <(IDENTIFIER,t,t++)<SUB>15</SUB>> ]
"30064771101" [label = <(free,free(font_name))<SUB>16</SUB>> ]
"68719476757" [label = <(IDENTIFIER,font_name,free(font_name))<SUB>16</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.assignment,font_name = (char *)malloc(t - s + 1))<SUB>17</SUB>> ]
"68719476758" [label = <(IDENTIFIER,font_name,font_name = (char *)malloc(t - s + 1))<SUB>17</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.cast,(char *)malloc(t - s + 1))<SUB>17</SUB>> ]
"184683593729" [label = <(UNKNOWN,char *,char *)<SUB>17</SUB>> ]
"30064771104" [label = <(malloc,malloc(t - s + 1))<SUB>17</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.addition,t - s + 1)<SUB>17</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.subtraction,t - s)<SUB>17</SUB>> ]
"68719476759" [label = <(IDENTIFIER,t,t - s)<SUB>17</SUB>> ]
"68719476760" [label = <(IDENTIFIER,s,t - s)<SUB>17</SUB>> ]
"90194313226" [label = <(LITERAL,1,t - s + 1)<SUB>17</SUB>> ]
"30064771107" [label = <(memcpy,memcpy(font_name, s, t - s))<SUB>18</SUB>> ]
"68719476761" [label = <(IDENTIFIER,font_name,memcpy(font_name, s, t - s))<SUB>18</SUB>> ]
"68719476762" [label = <(IDENTIFIER,s,memcpy(font_name, s, t - s))<SUB>18</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.subtraction,t - s)<SUB>18</SUB>> ]
"68719476763" [label = <(IDENTIFIER,t,t - s)<SUB>18</SUB>> ]
"68719476764" [label = <(IDENTIFIER,s,t - s)<SUB>18</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.assignment,font_name[t - s] = 0)<SUB>19</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.indirectIndexAccess,font_name[t - s])<SUB>19</SUB>> ]
"68719476765" [label = <(IDENTIFIER,font_name,font_name[t - s] = 0)<SUB>19</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.subtraction,t - s)<SUB>19</SUB>> ]
"68719476766" [label = <(IDENTIFIER,t,t - s)<SUB>19</SUB>> ]
"68719476767" [label = <(IDENTIFIER,s,t - s)<SUB>19</SUB>> ]
"90194313227" [label = <(LITERAL,0,font_name[t - s] = 0)<SUB>19</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "25769803778" -> "30064771073"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "47244640257" -> "30064771075"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "90194313216"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "90194313217"  [ label = "AST: "] 
  "25769803779" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "90194313220"  [ label = "AST: "] 
  "30064771081" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "90194313219"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "30064771084" -> "184683593728"  [ label = "AST: "] 
  "30064771084" -> "68719476745"  [ label = "AST: "] 
  "47244640258" -> "30064771085"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "90194313223"  [ label = "AST: "] 
  "30064771086" -> "68719476747"  [ label = "AST: "] 
  "30064771086" -> "90194313221"  [ label = "AST: "] 
  "30064771086" -> "90194313222"  [ label = "AST: "] 
  "25769803780" -> "47244640259"  [ label = "AST: "] 
  "25769803780" -> "47244640260"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "47244640259" -> "30064771088"  [ label = "AST: "] 
  "47244640259" -> "30064771090"  [ label = "AST: "] 
  "25769803781" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "90194313224"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476749"  [ label = "AST: "] 
  "30064771090" -> "68719476750"  [ label = "AST: "] 
  "47244640260" -> "30064771091"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "90194313225"  [ label = "AST: "] 
  "30064771092" -> "68719476751"  [ label = "AST: "] 
  "25769803782" -> "94489280512"  [ label = "AST: "] 
  "25769803782" -> "30064771093"  [ label = "AST: "] 
  "25769803782" -> "47244640261"  [ label = "AST: "] 
  "25769803782" -> "30064771101"  [ label = "AST: "] 
  "25769803782" -> "30064771102"  [ label = "AST: "] 
  "25769803782" -> "30064771107"  [ label = "AST: "] 
  "25769803782" -> "30064771109"  [ label = "AST: "] 
  "30064771093" -> "68719476752"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476753"  [ label = "AST: "] 
  "47244640261" -> "30064771095"  [ label = "AST: "] 
  "47244640261" -> "30064771100"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "68719476754"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "68719476755"  [ label = "AST: "] 
  "30064771100" -> "68719476756"  [ label = "AST: "] 
  "30064771101" -> "68719476757"  [ label = "AST: "] 
  "30064771102" -> "68719476758"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771103" -> "184683593729"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "90194313226"  [ label = "AST: "] 
  "30064771106" -> "68719476759"  [ label = "AST: "] 
  "30064771106" -> "68719476760"  [ label = "AST: "] 
  "30064771107" -> "68719476761"  [ label = "AST: "] 
  "30064771107" -> "68719476762"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "68719476763"  [ label = "AST: "] 
  "30064771108" -> "68719476764"  [ label = "AST: "] 
  "30064771109" -> "30064771110"  [ label = "AST: "] 
  "30064771109" -> "90194313227"  [ label = "AST: "] 
  "30064771110" -> "68719476765"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "68719476766"  [ label = "AST: "] 
  "30064771111" -> "68719476767"  [ label = "AST: "] 
  "30064771083" -> "30064771086"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771072" -> "30064771076"  [ label = "CFG: "] 
  "30064771075" -> "184683593728"  [ label = "CFG: "] 
  "30064771075" -> "30064771082"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "128849018880"  [ label = "CFG: "] 
  "30064771085" -> "30064771087"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771077" -> "30064771075"  [ label = "CFG: "] 
  "30064771080" -> "184683593728"  [ label = "CFG: "] 
  "184683593728" -> "30064771084"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771088" -> "30064771090"  [ label = "CFG: "] 
  "30064771088" -> "30064771092"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771091" -> "128849018880"  [ label = "CFG: "] 
  "30064771091" -> "30064771094"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771087" -> "30064771089"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "30064771096"  [ label = "CFG: "] 
  "30064771101" -> "184683593729"  [ label = "CFG: "] 
  "30064771102" -> "30064771108"  [ label = "CFG: "] 
  "30064771107" -> "30064771111"  [ label = "CFG: "] 
  "30064771109" -> "128849018880"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771095" -> "30064771100"  [ label = "CFG: "] 
  "30064771095" -> "30064771101"  [ label = "CFG: "] 
  "30064771100" -> "30064771096"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "30064771110" -> "30064771109"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771096" -> "30064771099"  [ label = "CFG: "] 
  "30064771097" -> "30064771095"  [ label = "CFG: "] 
  "184683593729" -> "30064771106"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771106" -> "30064771105"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "30064771072" -> "128849018880"  [ label = "DDG: blocktyp"] 
  "30064771072" -> "128849018880"  [ label = "DDG: blocktyp == POST_BINARY"] 
  "30064771073" -> "128849018880"  [ label = "DDG: output_current_post()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: blocktyp"] 
  "30064771074" -> "128849018880"  [ label = "DDG: blocktyp = POST_ASCII"] 
  "30064771075" -> "128849018880"  [ label = "DDG: len &gt; 0"] 
  "30064771077" -> "128849018880"  [ label = "DDG: s[len-1]"] 
  "30064771075" -> "128849018880"  [ label = "DDG: s[len-1] == '\n'"] 
  "30064771075" -> "128849018880"  [ label = "DDG: len &gt; 0 &amp;&amp; s[len-1] == '\n'"] 
  "30064771080" -> "128849018880"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "128849018880"  [ label = "DDG: s[len-1] = '\r'"] 
  "30064771083" -> "128849018880"  [ label = "DDG: (byte *)s"] 
  "30064771083" -> "128849018880"  [ label = "DDG: len"] 
  "30064771083" -> "128849018880"  [ label = "DDG: t1mac_output_data((byte *)s, len)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: strncmp(s, &quot;/FontName&quot;, 9)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: strncmp(s, &quot;/FontName&quot;, 9) == 0"] 
  "30064771087" -> "128849018880"  [ label = "DDG: s += 9"] 
  "30064771088" -> "128849018880"  [ label = "DDG: isspace(*s)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: *s"] 
  "30064771091" -> "128849018880"  [ label = "DDG: *s == '/'"] 
  "30064771093" -> "128849018880"  [ label = "DDG: ++s"] 
  "30064771093" -> "128849018880"  [ label = "DDG: *t = ++s"] 
  "30064771095" -> "128849018880"  [ label = "DDG: *t"] 
  "30064771097" -> "128849018880"  [ label = "DDG: isspace(*t)"] 
  "30064771095" -> "128849018880"  [ label = "DDG: !isspace(*t)"] 
  "30064771095" -> "128849018880"  [ label = "DDG: *t &amp;&amp; !isspace(*t)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: t - s + 1"] 
  "30064771103" -> "128849018880"  [ label = "DDG: malloc(t - s + 1)"] 
  "30064771102" -> "128849018880"  [ label = "DDG: (char *)malloc(t - s + 1)"] 
  "30064771102" -> "128849018880"  [ label = "DDG: font_name = (char *)malloc(t - s + 1)"] 
  "30064771107" -> "128849018880"  [ label = "DDG: font_name"] 
  "30064771107" -> "128849018880"  [ label = "DDG: memcpy(font_name, s, t - s)"] 
  "30064771111" -> "128849018880"  [ label = "DDG: t"] 
  "30064771111" -> "128849018880"  [ label = "DDG: s"] 
  "30064771109" -> "128849018880"  [ label = "DDG: font_name[t - s]"] 
  "30064771109" -> "128849018880"  [ label = "DDG: font_name[t - s] = 0"] 
  "30064771100" -> "128849018880"  [ label = "DDG: t++"] 
  "30064771090" -> "128849018880"  [ label = "DDG: s++"] 
  "30064771072" -> "128849018880"  [ label = "DDG: POST_BINARY"] 
  "30064771074" -> "128849018880"  [ label = "DDG: POST_ASCII"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "115964116992" -> "30064771083"  [ label = "DDG: s"] 
  "30064771077" -> "30064771083"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771083"  [ label = "DDG: s[len-1]"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771076" -> "30064771083"  [ label = "DDG: len"] 
  "30064771079" -> "30064771083"  [ label = "DDG: len"] 
  "30064771082" -> "30064771083"  [ label = "DDG: len"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: len"] 
  "30064771076" -> "30064771075"  [ label = "DDG: 0"] 
  "30064771077" -> "30064771075"  [ label = "DDG: s[len-1]"] 
  "30064771077" -> "30064771075"  [ label = "DDG: '\n'"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "115964116992" -> "30064771084"  [ label = "DDG: s"] 
  "30064771077" -> "30064771084"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771084"  [ label = "DDG: s[len-1]"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: s"] 
  "30064771086" -> "30064771085"  [ label = "DDG: &quot;/FontName&quot;"] 
  "30064771086" -> "30064771085"  [ label = "DDG: 9"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "115964116993" -> "30064771076"  [ label = "DDG: len"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "115964116992" -> "30064771077"  [ label = "DDG: s"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771077" -> "30064771086"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771086"  [ label = "DDG: s[len-1]"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "115964116992" -> "30064771086"  [ label = "DDG: s"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771077" -> "30064771090"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771090"  [ label = "DDG: s[len-1]"] 
  "30064771087" -> "30064771090"  [ label = "DDG: s"] 
  "30064771088" -> "30064771090"  [ label = "DDG: *s"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771088" -> "30064771091"  [ label = "DDG: *s"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771094" -> "30064771093"  [ label = "DDG: s"] 
  "30064771104" -> "30064771102"  [ label = "DDG: t - s + 1"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771076" -> "30064771079"  [ label = "DDG: len"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771076" -> "30064771082"  [ label = "DDG: len"] 
  "30064771079" -> "30064771082"  [ label = "DDG: len"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771077" -> "30064771087"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771087"  [ label = "DDG: s[len-1]"] 
  "30064771086" -> "30064771087"  [ label = "DDG: s"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771102" -> "30064771107"  [ label = "DDG: font_name"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771077" -> "30064771107"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771107"  [ label = "DDG: s[len-1]"] 
  "30064771091" -> "30064771107"  [ label = "DDG: *s"] 
  "30064771108" -> "30064771107"  [ label = "DDG: s"] 
  "30064771108" -> "30064771107"  [ label = "DDG: t"] 
  "30064771077" -> "30064771094"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771094"  [ label = "DDG: s[len-1]"] 
  "30064771087" -> "30064771094"  [ label = "DDG: s"] 
  "30064771091" -> "30064771094"  [ label = "DDG: *s"] 
  "30064771090" -> "30064771094"  [ label = "DDG: s"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771098" -> "30064771095"  [ label = "DDG: *t"] 
  "30064771097" -> "30064771095"  [ label = "DDG: isspace(*t)"] 
  "30064771093" -> "30064771100"  [ label = "DDG: t"] 
  "30064771095" -> "30064771100"  [ label = "DDG: *t"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771104" -> "30064771103"  [ label = "DDG: t - s + 1"] 
  "30064771095" -> "30064771108"  [ label = "DDG: *t"] 
  "30064771106" -> "30064771108"  [ label = "DDG: t"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771077" -> "30064771108"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771108"  [ label = "DDG: s[len-1]"] 
  "30064771091" -> "30064771108"  [ label = "DDG: *s"] 
  "30064771106" -> "30064771108"  [ label = "DDG: s"] 
  "30064771098" -> "30064771097"  [ label = "DDG: *t"] 
  "30064771106" -> "30064771104"  [ label = "DDG: t"] 
  "30064771106" -> "30064771104"  [ label = "DDG: s"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771095" -> "30064771111"  [ label = "DDG: *t"] 
  "30064771108" -> "30064771111"  [ label = "DDG: t"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771077" -> "30064771111"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771111"  [ label = "DDG: s[len-1]"] 
  "30064771091" -> "30064771111"  [ label = "DDG: *s"] 
  "30064771107" -> "30064771111"  [ label = "DDG: s"] 
  "30064771095" -> "30064771098"  [ label = "DDG: *t"] 
  "30064771106" -> "30064771105"  [ label = "DDG: t"] 
  "30064771106" -> "30064771105"  [ label = "DDG: s"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771093" -> "30064771106"  [ label = "DDG: t"] 
  "30064771095" -> "30064771106"  [ label = "DDG: *t"] 
  "30064771100" -> "30064771106"  [ label = "DDG: t"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771077" -> "30064771106"  [ label = "DDG: s[len-1]"] 
  "30064771080" -> "30064771106"  [ label = "DDG: s[len-1]"] 
  "30064771091" -> "30064771106"  [ label = "DDG: *s"] 
  "30064771094" -> "30064771106"  [ label = "DDG: s"] 
  "30064771072" -> "30064771074"  [ label = "CDG: "] 
  "30064771072" -> "30064771073"  [ label = "CDG: "] 
  "30064771075" -> "30064771082"  [ label = "CDG: "] 
  "30064771075" -> "30064771081"  [ label = "CDG: "] 
  "30064771075" -> "30064771080"  [ label = "CDG: "] 
  "30064771085" -> "30064771089"  [ label = "CDG: "] 
  "30064771085" -> "30064771088"  [ label = "CDG: "] 
  "30064771085" -> "30064771087"  [ label = "CDG: "] 
  "30064771085" -> "30064771092"  [ label = "CDG: "] 
  "30064771085" -> "30064771091"  [ label = "CDG: "] 
  "30064771076" -> "30064771078"  [ label = "CDG: "] 
  "30064771076" -> "30064771077"  [ label = "CDG: "] 
  "30064771076" -> "30064771079"  [ label = "CDG: "] 
  "30064771088" -> "30064771090"  [ label = "CDG: "] 
  "30064771088" -> "30064771089"  [ label = "CDG: "] 
  "30064771088" -> "30064771088"  [ label = "CDG: "] 
  "30064771091" -> "184683593729"  [ label = "CDG: "] 
  "30064771091" -> "30064771106"  [ label = "CDG: "] 
  "30064771091" -> "30064771105"  [ label = "CDG: "] 
  "30064771091" -> "30064771104"  [ label = "CDG: "] 
  "30064771091" -> "30064771103"  [ label = "CDG: "] 
  "30064771091" -> "30064771110"  [ label = "CDG: "] 
  "30064771091" -> "30064771109"  [ label = "CDG: "] 
  "30064771091" -> "30064771108"  [ label = "CDG: "] 
  "30064771091" -> "30064771107"  [ label = "CDG: "] 
  "30064771091" -> "30064771111"  [ label = "CDG: "] 
  "30064771091" -> "30064771094"  [ label = "CDG: "] 
  "30064771091" -> "30064771093"  [ label = "CDG: "] 
  "30064771091" -> "30064771096"  [ label = "CDG: "] 
  "30064771091" -> "30064771095"  [ label = "CDG: "] 
  "30064771091" -> "30064771102"  [ label = "CDG: "] 
  "30064771091" -> "30064771101"  [ label = "CDG: "] 
  "30064771095" -> "30064771096"  [ label = "CDG: "] 
  "30064771095" -> "30064771095"  [ label = "CDG: "] 
  "30064771095" -> "30064771100"  [ label = "CDG: "] 
  "30064771096" -> "30064771098"  [ label = "CDG: "] 
  "30064771096" -> "30064771097"  [ label = "CDG: "] 
  "30064771096" -> "30064771099"  [ label = "CDG: "] 
}
"""
)
