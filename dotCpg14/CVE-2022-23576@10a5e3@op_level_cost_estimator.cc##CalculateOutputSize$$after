[33mval[0m [36mres209[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "CalculateOutputSize" {  
"111669149697" [label = <(METHOD,CalculateOutputSize)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const OpInfo&amp; op_info)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,bool* found_unknown_shapes)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
  int64_t total_output_size = 0;
  // Use flo...,{
  int64_t total_output_size = 0;
  // Use flo...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,int64_t total_output_size: int64_t)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,total_output_size = 0)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,total_output_size,total_output_size = 0)<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,0,total_output_size = 0)<SUB>3</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (const auto&amp; output:op_info.outputs()))<SUB>5</SUB>> ]
"30064771073" [label = <(outputs,op_info.outputs())<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,op_info,op_info.outputs())<SUB>5</SUB>> ]
"94489280513" [label = <(LOCAL,const auto&amp; output: auto&amp;)<SUB>5</SUB>> ]
"25769803778" [label = <(BLOCK,{
    DataType dt = output.dtype();
    const a...,{
    DataType dt = output.dtype();
    const a...)<SUB>5</SUB>> ]
"94489280514" [label = <(LOCAL,DataType dt: DataType)<SUB>6</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,dt = output.dtype())<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,dt,dt = output.dtype())<SUB>6</SUB>> ]
"30064771075" [label = <(dtype,output.dtype())<SUB>6</SUB>> ]
"68719476739" [label = <(IDENTIFIER,output,output.dtype())<SUB>6</SUB>> ]
"94489280515" [label = <(LOCAL,const auto&amp; original_output_shape: auto&amp;)<SUB>7</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,&amp; original_output_shape = output.shape())<SUB>7</SUB>> ]
"68719476740" [label = <(IDENTIFIER,original_output_shape,&amp; original_output_shape = output.shape())<SUB>7</SUB>> ]
"30064771077" [label = <(shape,output.shape())<SUB>7</SUB>> ]
"68719476741" [label = <(IDENTIFIER,output,output.shape())<SUB>7</SUB>> ]
"94489280516" [label = <(LOCAL,int64_t output_size: int64_t)<SUB>8</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,output_size = DataTypeSize(BaseType(dt)))<SUB>8</SUB>> ]
"68719476742" [label = <(IDENTIFIER,output_size,output_size = DataTypeSize(BaseType(dt)))<SUB>8</SUB>> ]
"30064771079" [label = <(DataTypeSize,DataTypeSize(BaseType(dt)))<SUB>8</SUB>> ]
"30064771080" [label = <(BaseType,BaseType(dt))<SUB>8</SUB>> ]
"68719476743" [label = <(IDENTIFIER,dt,BaseType(dt))<SUB>8</SUB>> ]
"94489280517" [label = <(LOCAL,int num_dims: int)<SUB>9</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,num_dims = std::max(1, original_output_shape.di...)<SUB>9</SUB>> ]
"68719476744" [label = <(IDENTIFIER,num_dims,num_dims = std::max(1, original_output_shape.di...)<SUB>9</SUB>> ]
"30064771082" [label = <(max,std::max(1, original_output_shape.dim_size()))<SUB>9</SUB>> ]
"90194313217" [label = <(LITERAL,1,std::max(1, original_output_shape.dim_size()))<SUB>9</SUB>> ]
"30064771083" [label = <(dim_size,original_output_shape.dim_size())<SUB>9</SUB>> ]
"68719476745" [label = <(IDENTIFIER,original_output_shape,original_output_shape.dim_size())<SUB>9</SUB>> ]
"94489280518" [label = <(LOCAL,auto output_shape: auto)<SUB>10</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,output_shape = MaybeGetMinimumShape(original_ou...)<SUB>10</SUB>> ]
"68719476746" [label = <(IDENTIFIER,output_shape,output_shape = MaybeGetMinimumShape(original_ou...)<SUB>10</SUB>> ]
"30064771085" [label = <(MaybeGetMinimumShape,MaybeGetMinimumShape(original_output_shape, num...)<SUB>10</SUB>> ]
"68719476747" [label = <(IDENTIFIER,original_output_shape,MaybeGetMinimumShape(original_output_shape, num...)<SUB>10</SUB>> ]
"68719476748" [label = <(IDENTIFIER,num_dims,MaybeGetMinimumShape(original_output_shape, num...)<SUB>10</SUB>> ]
"68719476749" [label = <(IDENTIFIER,found_unknown_shapes,MaybeGetMinimumShape(original_output_shape, num...)<SUB>11</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FOR,for (const auto&amp; dim:output_shape.dim()))<SUB>12</SUB>> ]
"30064771086" [label = <(dim,output_shape.dim())<SUB>12</SUB>> ]
"68719476750" [label = <(IDENTIFIER,output_shape,output_shape.dim())<SUB>12</SUB>> ]
"94489280519" [label = <(LOCAL,const auto&amp; dim: auto&amp;)<SUB>12</SUB>> ]
"25769803779" [label = <(BLOCK,{
      int64_t new_output_size =
          Mul...,{
      int64_t new_output_size =
          Mul...)<SUB>12</SUB>> ]
"94489280520" [label = <(LOCAL,int64_t new_output_size: int64_t)<SUB>13</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,new_output_size =
          MultiplyWithoutOver...)<SUB>13</SUB>> ]
"68719476751" [label = <(IDENTIFIER,new_output_size,new_output_size =
          MultiplyWithoutOver...)<SUB>13</SUB>> ]
"30064771088" [label = <(MultiplyWithoutOverflow,MultiplyWithoutOverflow(output_size, dim.size()))<SUB>14</SUB>> ]
"68719476752" [label = <(IDENTIFIER,output_size,MultiplyWithoutOverflow(output_size, dim.size()))<SUB>14</SUB>> ]
"30064771089" [label = <(size,dim.size())<SUB>14</SUB>> ]
"68719476753" [label = <(IDENTIFIER,dim,dim.size())<SUB>14</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (new_output_size &lt; 0))<SUB>15</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.lessThan,new_output_size &lt; 0)<SUB>15</SUB>> ]
"68719476754" [label = <(IDENTIFIER,new_output_size,new_output_size &lt; 0)<SUB>15</SUB>> ]
"90194313218" [label = <(LITERAL,0,new_output_size &lt; 0)<SUB>15</SUB>> ]
"25769803780" [label = <(BLOCK,{
        VLOG(1) &lt;&lt; &quot;Overflow encountered when...,{
        VLOG(1) &lt;&lt; &quot;Overflow encountered when...)<SUB>15</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.shiftLeft,VLOG(1) &lt;&lt; &quot;Overflow encountered when estimatin...)<SUB>16</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.shiftLeft,VLOG(1) &lt;&lt; &quot;Overflow encountered when estimatin...)<SUB>16</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.shiftLeft,VLOG(1) &lt;&lt; &quot;Overflow encountered when estimatin...)<SUB>16</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.shiftLeft,VLOG(1) &lt;&lt; &quot;Overflow encountered when estimatin...)<SUB>16</SUB>> ]
"30064771095" [label = <(VLOG,VLOG(1))<SUB>16</SUB>> ]
"90194313219" [label = <(LITERAL,1,VLOG(1))<SUB>16</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;Overflow encountered when estimating cost, mul...,VLOG(1) &lt;&lt; &quot;Overflow encountered when estimatin...)<SUB>16</SUB>> ]
"68719476755" [label = <(IDENTIFIER,output_size,VLOG(1) &lt;&lt; &quot;Overflow encountered when estimatin...)<SUB>17</SUB>> ]
"90194313221" [label = <(LITERAL,&quot; with &quot;,VLOG(1) &lt;&lt; &quot;Overflow encountered when estimatin...)<SUB>17</SUB>> ]
"30064771096" [label = <(size,dim.size())<SUB>17</SUB>> ]
"68719476756" [label = <(IDENTIFIER,dim,dim.size())<SUB>17</SUB>> ]
"146028888064" [label = <(RETURN,return -1;,return -1;)<SUB>18</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.minus,-1)<SUB>18</SUB>> ]
"90194313222" [label = <(LITERAL,1,-1)<SUB>18</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,output_size = new_output_size)<SUB>20</SUB>> ]
"68719476757" [label = <(IDENTIFIER,output_size,output_size = new_output_size)<SUB>20</SUB>> ]
"68719476758" [label = <(IDENTIFIER,new_output_size,output_size = new_output_size)<SUB>20</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.assignmentPlus,total_output_size += output_size)<SUB>22</SUB>> ]
"68719476759" [label = <(IDENTIFIER,total_output_size,total_output_size += output_size)<SUB>22</SUB>> ]
"68719476760" [label = <(IDENTIFIER,output_size,total_output_size += output_size)<SUB>22</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.shiftLeft,VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size
     ...)<SUB>23</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.shiftLeft,VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size
     ...)<SUB>23</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.shiftLeft,VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size)<SUB>23</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.shiftLeft,VLOG(1) &lt;&lt; &quot;Output Size: &quot;)<SUB>23</SUB>> ]
"30064771104" [label = <(VLOG,VLOG(1))<SUB>23</SUB>> ]
"90194313223" [label = <(LITERAL,1,VLOG(1))<SUB>23</SUB>> ]
"90194313224" [label = <(LITERAL,&quot;Output Size: &quot;,VLOG(1) &lt;&lt; &quot;Output Size: &quot;)<SUB>23</SUB>> ]
"68719476761" [label = <(IDENTIFIER,output_size,VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size)<SUB>23</SUB>> ]
"90194313225" [label = <(LITERAL,&quot; Total Output Size:&quot;,VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size
     ...)<SUB>24</SUB>> ]
"68719476762" [label = <(IDENTIFIER,total_output_size,VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size
     ...)<SUB>24</SUB>> ]
"146028888065" [label = <(RETURN,return total_output_size;,return total_output_size;)<SUB>26</SUB>> ]
"68719476763" [label = <(IDENTIFIER,total_output_size,return total_output_size;)<SUB>26</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,int64_t)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "47244640256" -> "30064771073"  [ label = "AST: "] 
  "47244640256" -> "94489280513"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "25769803778" -> "94489280514"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "25769803778" -> "94489280515"  [ label = "AST: "] 
  "25769803778" -> "30064771076"  [ label = "AST: "] 
  "25769803778" -> "94489280516"  [ label = "AST: "] 
  "25769803778" -> "30064771078"  [ label = "AST: "] 
  "25769803778" -> "94489280517"  [ label = "AST: "] 
  "25769803778" -> "30064771081"  [ label = "AST: "] 
  "25769803778" -> "94489280518"  [ label = "AST: "] 
  "25769803778" -> "30064771084"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "30064771099"  [ label = "AST: "] 
  "25769803778" -> "30064771100"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771081" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "90194313217"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476747"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "68719476749"  [ label = "AST: "] 
  "47244640257" -> "30064771086"  [ label = "AST: "] 
  "47244640257" -> "94489280519"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "30064771086" -> "68719476750"  [ label = "AST: "] 
  "25769803779" -> "94489280520"  [ label = "AST: "] 
  "25769803779" -> "30064771087"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "25769803779" -> "30064771098"  [ label = "AST: "] 
  "30064771087" -> "68719476751"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "68719476752"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476753"  [ label = "AST: "] 
  "47244640258" -> "30064771090"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771090" -> "68719476754"  [ label = "AST: "] 
  "30064771090" -> "90194313218"  [ label = "AST: "] 
  "25769803780" -> "30064771091"  [ label = "AST: "] 
  "25769803780" -> "146028888064"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "30064771096"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "90194313221"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "68719476755"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "90194313220"  [ label = "AST: "] 
  "30064771095" -> "90194313219"  [ label = "AST: "] 
  "30064771096" -> "68719476756"  [ label = "AST: "] 
  "146028888064" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "90194313222"  [ label = "AST: "] 
  "30064771098" -> "68719476757"  [ label = "AST: "] 
  "30064771098" -> "68719476758"  [ label = "AST: "] 
  "30064771099" -> "68719476759"  [ label = "AST: "] 
  "30064771099" -> "68719476760"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "68719476762"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "90194313225"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "68719476761"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771103" -> "90194313224"  [ label = "AST: "] 
  "30064771104" -> "90194313223"  [ label = "AST: "] 
  "146028888065" -> "68719476763"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771074" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771080"  [ label = "CFG: "] 
  "30064771078" -> "30064771083"  [ label = "CFG: "] 
  "30064771081" -> "30064771085"  [ label = "CFG: "] 
  "30064771084" -> "30064771089"  [ label = "CFG: "] 
  "30064771099" -> "30064771104"  [ label = "CFG: "] 
  "30064771100" -> "30064771075"  [ label = "CFG: "] 
  "30064771100" -> "146028888065"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771087" -> "30064771090"  [ label = "CFG: "] 
  "30064771098" -> "30064771089"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771095"  [ label = "CFG: "] 
  "30064771090" -> "30064771098"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771091" -> "30064771097"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "30064771092" -> "30064771096"  [ label = "CFG: "] 
  "30064771096" -> "30064771091"  [ label = "CFG: "] 
  "30064771097" -> "146028888064"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: op_info"] 
  "30064771072" -> "128849018880"  [ label = "DDG: total_output_size"] 
  "30064771072" -> "128849018880"  [ label = "DDG: total_output_size = 0"] 
  "30064771074" -> "128849018880"  [ label = "DDG: output.dtype()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: dt = output.dtype()"] 
  "30064771077" -> "128849018880"  [ label = "DDG: output"] 
  "30064771076" -> "128849018880"  [ label = "DDG: output.shape()"] 
  "30064771076" -> "128849018880"  [ label = "DDG: &amp; original_output_shape = output.shape()"] 
  "30064771080" -> "128849018880"  [ label = "DDG: dt"] 
  "30064771079" -> "128849018880"  [ label = "DDG: BaseType(dt)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: DataTypeSize(BaseType(dt))"] 
  "30064771078" -> "128849018880"  [ label = "DDG: output_size = DataTypeSize(BaseType(dt))"] 
  "30064771082" -> "128849018880"  [ label = "DDG: original_output_shape.dim_size()"] 
  "30064771081" -> "128849018880"  [ label = "DDG: std::max(1, original_output_shape.dim_size())"] 
  "30064771081" -> "128849018880"  [ label = "DDG: num_dims = std::max(1, original_output_shape.dim_size())"] 
  "30064771084" -> "128849018880"  [ label = "DDG: output_shape"] 
  "30064771085" -> "128849018880"  [ label = "DDG: original_output_shape"] 
  "30064771085" -> "128849018880"  [ label = "DDG: num_dims"] 
  "30064771085" -> "128849018880"  [ label = "DDG: found_unknown_shapes"] 
  "30064771084" -> "128849018880"  [ label = "DDG: MaybeGetMinimumShape(original_output_shape, num_dims,
                                             found_unknown_shapes)"] 
  "30064771084" -> "128849018880"  [ label = "DDG: output_shape = MaybeGetMinimumShape(original_output_shape, num_dims,
                                             found_unknown_shapes)"] 
  "30064771087" -> "128849018880"  [ label = "DDG: MultiplyWithoutOverflow(output_size, dim.size())"] 
  "30064771087" -> "128849018880"  [ label = "DDG: new_output_size =
          MultiplyWithoutOverflow(output_size, dim.size())"] 
  "30064771090" -> "128849018880"  [ label = "DDG: new_output_size"] 
  "30064771090" -> "128849018880"  [ label = "DDG: new_output_size &lt; 0"] 
  "30064771098" -> "128849018880"  [ label = "DDG: output_size = new_output_size"] 
  "30064771099" -> "128849018880"  [ label = "DDG: total_output_size += output_size"] 
  "30064771102" -> "128849018880"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Output Size: &quot;"] 
  "30064771101" -> "128849018880"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size"] 
  "30064771100" -> "128849018880"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size
            &lt;&lt; &quot; Total Output Size:&quot;"] 
  "30064771100" -> "128849018880"  [ label = "DDG: total_output_size"] 
  "30064771100" -> "128849018880"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size
            &lt;&lt; &quot; Total Output Size:&quot; &lt;&lt; total_output_size"] 
  "30064771094" -> "128849018880"  [ label = "DDG: VLOG(1)"] 
  "30064771093" -> "128849018880"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Overflow encountered when estimating cost, multiplying &quot;"] 
  "30064771093" -> "128849018880"  [ label = "DDG: output_size"] 
  "30064771092" -> "128849018880"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Overflow encountered when estimating cost, multiplying &quot;
                &lt;&lt; output_size"] 
  "30064771091" -> "128849018880"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Overflow encountered when estimating cost, multiplying &quot;
                &lt;&lt; output_size &lt;&lt; &quot; with &quot;"] 
  "30064771096" -> "128849018880"  [ label = "DDG: dim"] 
  "30064771091" -> "128849018880"  [ label = "DDG: dim.size()"] 
  "30064771091" -> "128849018880"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Overflow encountered when estimating cost, multiplying &quot;
                &lt;&lt; output_size &lt;&lt; &quot; with &quot; &lt;&lt; dim.size()"] 
  "30064771097" -> "128849018880"  [ label = "DDG: -1"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "68719476763" -> "146028888065"  [ label = "DDG: total_output_size"] 
  "30064771100" -> "68719476763"  [ label = "DDG: total_output_size"] 
  "111669149697" -> "68719476763"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: output"] 
  "30064771077" -> "30064771076"  [ label = "DDG: output"] 
  "30064771079" -> "30064771078"  [ label = "DDG: BaseType(dt)"] 
  "30064771082" -> "30064771081"  [ label = "DDG: 1"] 
  "30064771082" -> "30064771081"  [ label = "DDG: original_output_shape.dim_size()"] 
  "30064771085" -> "30064771084"  [ label = "DDG: original_output_shape"] 
  "30064771085" -> "30064771084"  [ label = "DDG: num_dims"] 
  "30064771085" -> "30064771084"  [ label = "DDG: found_unknown_shapes"] 
  "30064771098" -> "30064771099"  [ label = "DDG: output_size"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771072" -> "30064771099"  [ label = "DDG: total_output_size"] 
  "30064771100" -> "30064771099"  [ label = "DDG: total_output_size"] 
  "30064771101" -> "30064771100"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Output Size: &quot; &lt;&lt; output_size"] 
  "30064771101" -> "30064771100"  [ label = "DDG: &quot; Total Output Size:&quot;"] 
  "30064771099" -> "30064771100"  [ label = "DDG: total_output_size"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771077" -> "30064771075"  [ label = "DDG: output"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: output"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: dt"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: original_output_shape"] 
  "30064771083" -> "30064771085"  [ label = "DDG: original_output_shape"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771081" -> "30064771085"  [ label = "DDG: num_dims"] 
  "115964116993" -> "30064771085"  [ label = "DDG: found_unknown_shapes"] 
  "30064771088" -> "30064771087"  [ label = "DDG: output_size"] 
  "30064771088" -> "30064771087"  [ label = "DDG: dim.size()"] 
  "30064771090" -> "30064771098"  [ label = "DDG: new_output_size"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771102" -> "30064771101"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Output Size: &quot;"] 
  "30064771102" -> "30064771101"  [ label = "DDG: output_size"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771074" -> "30064771080"  [ label = "DDG: dt"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771076" -> "30064771083"  [ label = "DDG: original_output_shape"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771103" -> "30064771102"  [ label = "DDG: VLOG(1)"] 
  "30064771103" -> "30064771102"  [ label = "DDG: &quot;Output Size: &quot;"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771098" -> "30064771102"  [ label = "DDG: output_size"] 
  "30064771078" -> "30064771088"  [ label = "DDG: output_size"] 
  "30064771098" -> "30064771088"  [ label = "DDG: output_size"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771089" -> "30064771088"  [ label = "DDG: dim"] 
  "30064771087" -> "30064771090"  [ label = "DDG: new_output_size"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771097" -> "146028888064"  [ label = "DDG: -1"] 
  "30064771104" -> "30064771103"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771092" -> "30064771091"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Overflow encountered when estimating cost, multiplying &quot;
                &lt;&lt; output_size"] 
  "30064771092" -> "30064771091"  [ label = "DDG: &quot; with &quot;"] 
  "30064771096" -> "30064771091"  [ label = "DDG: dim"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "30064771093" -> "30064771092"  [ label = "DDG: VLOG(1) &lt;&lt; &quot;Overflow encountered when estimating cost, multiplying &quot;"] 
  "30064771093" -> "30064771092"  [ label = "DDG: output_size"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771089" -> "30064771096"  [ label = "DDG: dim"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771094" -> "30064771093"  [ label = "DDG: VLOG(1)"] 
  "30064771094" -> "30064771093"  [ label = "DDG: &quot;Overflow encountered when estimating cost, multiplying &quot;"] 
  "30064771088" -> "30064771093"  [ label = "DDG: output_size"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771095" -> "30064771094"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "30064771100" -> "30064771088"  [ label = "CDG: "] 
  "30064771100" -> "30064771087"  [ label = "CDG: "] 
  "30064771100" -> "30064771085"  [ label = "CDG: "] 
  "30064771100" -> "30064771090"  [ label = "CDG: "] 
  "30064771100" -> "30064771089"  [ label = "CDG: "] 
  "30064771100" -> "30064771080"  [ label = "CDG: "] 
  "30064771100" -> "30064771079"  [ label = "CDG: "] 
  "30064771100" -> "30064771078"  [ label = "CDG: "] 
  "30064771100" -> "30064771077"  [ label = "CDG: "] 
  "30064771100" -> "30064771084"  [ label = "CDG: "] 
  "30064771100" -> "30064771083"  [ label = "CDG: "] 
  "30064771100" -> "30064771082"  [ label = "CDG: "] 
  "30064771100" -> "30064771081"  [ label = "CDG: "] 
  "30064771100" -> "30064771076"  [ label = "CDG: "] 
  "30064771100" -> "30064771075"  [ label = "CDG: "] 
  "30064771100" -> "30064771074"  [ label = "CDG: "] 
  "30064771100" -> "146028888065"  [ label = "CDG: "] 
  "30064771098" -> "30064771088"  [ label = "CDG: "] 
  "30064771098" -> "30064771087"  [ label = "CDG: "] 
  "30064771098" -> "30064771090"  [ label = "CDG: "] 
  "30064771098" -> "30064771089"  [ label = "CDG: "] 
  "30064771098" -> "30064771104"  [ label = "CDG: "] 
  "30064771098" -> "30064771103"  [ label = "CDG: "] 
  "30064771098" -> "30064771102"  [ label = "CDG: "] 
  "30064771098" -> "30064771101"  [ label = "CDG: "] 
  "30064771098" -> "30064771100"  [ label = "CDG: "] 
  "30064771098" -> "30064771099"  [ label = "CDG: "] 
  "30064771090" -> "30064771092"  [ label = "CDG: "] 
  "30064771090" -> "30064771091"  [ label = "CDG: "] 
  "30064771090" -> "146028888064"  [ label = "CDG: "] 
  "30064771090" -> "30064771096"  [ label = "CDG: "] 
  "30064771090" -> "30064771095"  [ label = "CDG: "] 
  "30064771090" -> "30064771094"  [ label = "CDG: "] 
  "30064771090" -> "30064771093"  [ label = "CDG: "] 
  "30064771090" -> "30064771098"  [ label = "CDG: "] 
  "30064771090" -> "30064771097"  [ label = "CDG: "] 
}
"""
)
