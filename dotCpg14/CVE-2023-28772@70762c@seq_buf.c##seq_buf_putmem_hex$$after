[33mval[0m [36mres2240[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "seq_buf_putmem_hex" {  
"111669149697" [label = <(METHOD,seq_buf_putmem_hex)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,struct seq_buf *s)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,const void *mem)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,unsigned int len)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,{
	unsigned char hex[HEX_CHARS];
	const unsigne...,{
	unsigned char hex[HEX_CHARS];
	const unsigne...)<SUB>3</SUB>> ]
"94489280512" [label = <(LOCAL,unsigned char[HEX_CHARS] hex: unsigned char[HEX_CHARS])<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,hex[HEX_CHARS])<SUB>4</SUB>> ]
"68719476736" [label = <(IDENTIFIER,hex,hex[HEX_CHARS])<SUB>4</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.alloc,hex[HEX_CHARS])<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,HEX_CHARS,hex[HEX_CHARS])<SUB>4</SUB>> ]
"94489280513" [label = <(LOCAL,const unsigned char* data: unsigned char*)<SUB>5</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,*data = mem)<SUB>5</SUB>> ]
"68719476738" [label = <(IDENTIFIER,data,*data = mem)<SUB>5</SUB>> ]
"68719476739" [label = <(IDENTIFIER,mem,*data = mem)<SUB>5</SUB>> ]
"94489280514" [label = <(LOCAL,unsigned int start_len: unsigned int)<SUB>6</SUB>> ]
"94489280515" [label = <(LOCAL,int i: int)<SUB>7</SUB>> ]
"94489280516" [label = <(LOCAL,int j: int)<SUB>7</SUB>> ]
"30064771075" [label = <(WARN_ON,WARN_ON(s-&gt;size == 0))<SUB>9</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.equals,s-&gt;size == 0)<SUB>9</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;size)<SUB>9</SUB>> ]
"68719476740" [label = <(IDENTIFIER,s,s-&gt;size == 0)<SUB>9</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,size,size)<SUB>9</SUB>> ]
"90194313216" [label = <(LITERAL,0,s-&gt;size == 0)<SUB>9</SUB>> ]
"30064771078" [label = <(BUILD_BUG_ON,BUILD_BUG_ON(MAX_MEMHEX_BYTES * 2 &gt;= HEX_CHARS))<SUB>11</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.greaterEqualsThan,MAX_MEMHEX_BYTES * 2 &gt;= HEX_CHARS)<SUB>11</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.multiplication,MAX_MEMHEX_BYTES * 2)<SUB>11</SUB>> ]
"68719476741" [label = <(IDENTIFIER,MAX_MEMHEX_BYTES,MAX_MEMHEX_BYTES * 2)<SUB>11</SUB>> ]
"90194313217" [label = <(LITERAL,2,MAX_MEMHEX_BYTES * 2)<SUB>11</SUB>> ]
"68719476742" [label = <(IDENTIFIER,HEX_CHARS,MAX_MEMHEX_BYTES * 2 &gt;= HEX_CHARS)<SUB>11</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,WHILE,while (len))<SUB>13</SUB>> ]
"68719476743" [label = <(IDENTIFIER,len,while (len))<SUB>13</SUB>> ]
"25769803778" [label = <(BLOCK,{
		start_len = min(len, MAX_MEMHEX_BYTES);
#if...,{
		start_len = min(len, MAX_MEMHEX_BYTES);
#if...)<SUB>13</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,start_len = min(len, MAX_MEMHEX_BYTES))<SUB>14</SUB>> ]
"68719476744" [label = <(IDENTIFIER,start_len,start_len = min(len, MAX_MEMHEX_BYTES))<SUB>14</SUB>> ]
"30064771082" [label = <(min,min(len, MAX_MEMHEX_BYTES))<SUB>14</SUB>> ]
"68719476745" [label = <(IDENTIFIER,len,min(len, MAX_MEMHEX_BYTES))<SUB>14</SUB>> ]
"68719476746" [label = <(IDENTIFIER,MAX_MEMHEX_BYTES,min(len, MAX_MEMHEX_BYTES))<SUB>14</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FOR,for (i = start_len-1, j = 0;i &gt;= 0;i--))<SUB>18</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.expressionList,i = start_len-1, j = 0)<SUB>18</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,i = start_len-1)<SUB>18</SUB>> ]
"68719476747" [label = <(IDENTIFIER,i,i = start_len-1)<SUB>18</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.subtraction,start_len-1)<SUB>18</SUB>> ]
"68719476748" [label = <(IDENTIFIER,start_len,start_len-1)<SUB>18</SUB>> ]
"90194313218" [label = <(LITERAL,1,start_len-1)<SUB>18</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>18</SUB>> ]
"68719476749" [label = <(IDENTIFIER,j,j = 0)<SUB>18</SUB>> ]
"90194313219" [label = <(LITERAL,0,j = 0)<SUB>18</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>18</SUB>> ]
"68719476750" [label = <(IDENTIFIER,i,i &gt;= 0)<SUB>18</SUB>> ]
"90194313220" [label = <(LITERAL,0,i &gt;= 0)<SUB>18</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.postDecrement,i--)<SUB>18</SUB>> ]
"68719476751" [label = <(IDENTIFIER,i,i--)<SUB>18</SUB>> ]
"25769803780" [label = <(BLOCK,{
#endif
			hex[j++] = hex_asc_hi(data[i]);
			...,{
#endif
			hex[j++] = hex_asc_hi(data[i]);
			...)<SUB>18</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,hex[j++] = hex_asc_hi(data[i]))<SUB>20</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.indirectIndexAccess,hex[j++])<SUB>20</SUB>> ]
"68719476752" [label = <(IDENTIFIER,hex,hex[j++] = hex_asc_hi(data[i]))<SUB>20</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>20</SUB>> ]
"68719476753" [label = <(IDENTIFIER,j,j++)<SUB>20</SUB>> ]
"30064771092" [label = <(hex_asc_hi,hex_asc_hi(data[i]))<SUB>20</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.indirectIndexAccess,data[i])<SUB>20</SUB>> ]
"68719476754" [label = <(IDENTIFIER,data,hex_asc_hi(data[i]))<SUB>20</SUB>> ]
"68719476755" [label = <(IDENTIFIER,i,hex_asc_hi(data[i]))<SUB>20</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,hex[j++] = hex_asc_lo(data[i]))<SUB>21</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.indirectIndexAccess,hex[j++])<SUB>21</SUB>> ]
"68719476756" [label = <(IDENTIFIER,hex,hex[j++] = hex_asc_lo(data[i]))<SUB>21</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>> ]
"68719476757" [label = <(IDENTIFIER,j,j++)<SUB>21</SUB>> ]
"30064771097" [label = <(hex_asc_lo,hex_asc_lo(data[i]))<SUB>21</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.indirectIndexAccess,data[i])<SUB>21</SUB>> ]
"68719476758" [label = <(IDENTIFIER,data,hex_asc_lo(data[i]))<SUB>21</SUB>> ]
"68719476759" [label = <(IDENTIFIER,i,hex_asc_lo(data[i]))<SUB>21</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (WARN_ON_ONCE(j == 0 || j/2 &gt; len)))<SUB>23</SUB>> ]
"30064771099" [label = <(WARN_ON_ONCE,WARN_ON_ONCE(j == 0 || j/2 &gt; len))<SUB>23</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.logicalOr,j == 0 || j/2 &gt; len)<SUB>23</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.equals,j == 0)<SUB>23</SUB>> ]
"68719476760" [label = <(IDENTIFIER,j,j == 0)<SUB>23</SUB>> ]
"90194313221" [label = <(LITERAL,0,j == 0)<SUB>23</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.greaterThan,j/2 &gt; len)<SUB>23</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.division,j/2)<SUB>23</SUB>> ]
"68719476761" [label = <(IDENTIFIER,j,j/2)<SUB>23</SUB>> ]
"90194313222" [label = <(LITERAL,2,j/2)<SUB>23</SUB>> ]
"68719476762" [label = <(IDENTIFIER,len,j/2 &gt; len)<SUB>23</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,BREAK,break;)<SUB>24</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.assignmentMinus,len -= j / 2)<SUB>27</SUB>> ]
"68719476763" [label = <(IDENTIFIER,len,len -= j / 2)<SUB>27</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.division,j / 2)<SUB>27</SUB>> ]
"68719476764" [label = <(IDENTIFIER,j,j / 2)<SUB>27</SUB>> ]
"90194313223" [label = <(LITERAL,2,j / 2)<SUB>27</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.assignment,hex[j++] = ' ')<SUB>28</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.indirectIndexAccess,hex[j++])<SUB>28</SUB>> ]
"68719476765" [label = <(IDENTIFIER,hex,hex[j++] = ' ')<SUB>28</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>28</SUB>> ]
"68719476766" [label = <(IDENTIFIER,j,j++)<SUB>28</SUB>> ]
"90194313224" [label = <(LITERAL,' ',hex[j++] = ' ')<SUB>28</SUB>> ]
"30064771109" [label = <(seq_buf_putmem,seq_buf_putmem(s, hex, j))<SUB>30</SUB>> ]
"68719476767" [label = <(IDENTIFIER,s,seq_buf_putmem(s, hex, j))<SUB>30</SUB>> ]
"68719476768" [label = <(IDENTIFIER,hex,seq_buf_putmem(s, hex, j))<SUB>30</SUB>> ]
"68719476769" [label = <(IDENTIFIER,j,seq_buf_putmem(s, hex, j))<SUB>30</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (seq_buf_has_overflowed(s)))<SUB>31</SUB>> ]
"30064771110" [label = <(seq_buf_has_overflowed,seq_buf_has_overflowed(s))<SUB>31</SUB>> ]
"68719476770" [label = <(IDENTIFIER,s,seq_buf_has_overflowed(s))<SUB>31</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>> ]
"146028888064" [label = <(RETURN,return -1;,return -1;)<SUB>32</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.minus,-1)<SUB>32</SUB>> ]
"90194313225" [label = <(LITERAL,1,-1)<SUB>32</SUB>> ]
"146028888065" [label = <(RETURN,return 0;,return 0;)<SUB>34</SUB>> ]
"90194313226" [label = <(LITERAL,0,return 0;)<SUB>34</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,int)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771076" -> "90194313216"  [ label = "AST: "] 
  "30064771077" -> "68719476740"  [ label = "AST: "] 
  "30064771077" -> "55834574848"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771080" -> "68719476741"  [ label = "AST: "] 
  "30064771080" -> "90194313217"  [ label = "AST: "] 
  "47244640256" -> "68719476743"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "30064771081"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "47244640258"  [ label = "AST: "] 
  "25769803778" -> "30064771104"  [ label = "AST: "] 
  "25769803778" -> "30064771106"  [ label = "AST: "] 
  "25769803778" -> "30064771109"  [ label = "AST: "] 
  "25769803778" -> "47244640260"  [ label = "AST: "] 
  "30064771081" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "30064771087"  [ label = "AST: "] 
  "47244640257" -> "30064771088"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "25769803779" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "30064771086"  [ label = "AST: "] 
  "30064771084" -> "68719476747"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476748"  [ label = "AST: "] 
  "30064771085" -> "90194313218"  [ label = "AST: "] 
  "30064771086" -> "68719476749"  [ label = "AST: "] 
  "30064771086" -> "90194313219"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "90194313220"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "25769803780" -> "30064771089"  [ label = "AST: "] 
  "25769803780" -> "30064771094"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "30064771092"  [ label = "AST: "] 
  "30064771090" -> "68719476752"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476753"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476754"  [ label = "AST: "] 
  "30064771093" -> "68719476755"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "30064771097"  [ label = "AST: "] 
  "30064771095" -> "68719476756"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476757"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476758"  [ label = "AST: "] 
  "30064771098" -> "68719476759"  [ label = "AST: "] 
  "47244640258" -> "30064771099"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "68719476760"  [ label = "AST: "] 
  "30064771101" -> "90194313221"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "68719476762"  [ label = "AST: "] 
  "30064771103" -> "68719476761"  [ label = "AST: "] 
  "30064771103" -> "90194313222"  [ label = "AST: "] 
  "25769803781" -> "47244640259"  [ label = "AST: "] 
  "30064771104" -> "68719476763"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476764"  [ label = "AST: "] 
  "30064771105" -> "90194313223"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "90194313224"  [ label = "AST: "] 
  "30064771107" -> "68719476765"  [ label = "AST: "] 
  "30064771107" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "68719476766"  [ label = "AST: "] 
  "30064771109" -> "68719476767"  [ label = "AST: "] 
  "30064771109" -> "68719476768"  [ label = "AST: "] 
  "30064771109" -> "68719476769"  [ label = "AST: "] 
  "47244640260" -> "30064771110"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "30064771110" -> "68719476770"  [ label = "AST: "] 
  "25769803782" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "90194313225"  [ label = "AST: "] 
  "146028888065" -> "90194313226"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "55834574848"  [ label = "CFG: "] 
  "30064771075" -> "30064771080"  [ label = "CFG: "] 
  "30064771078" -> "68719476743"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "68719476743" -> "30064771082"  [ label = "CFG: "] 
  "68719476743" -> "146028888065"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "30064771085"  [ label = "CFG: "] 
  "30064771104" -> "30064771108"  [ label = "CFG: "] 
  "30064771106" -> "30064771109"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "55834574848" -> "30064771077"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771087" -> "30064771091"  [ label = "CFG: "] 
  "30064771087" -> "30064771101"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771099" -> "146028888065"  [ label = "CFG: "] 
  "30064771099" -> "30064771105"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771110" -> "68719476743"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771083" -> "30064771087"  [ label = "CFG: "] 
  "30064771089" -> "30064771096"  [ label = "CFG: "] 
  "30064771094" -> "30064771088"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771108" -> "30064771107"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771084" -> "30064771086"  [ label = "CFG: "] 
  "30064771086" -> "30064771083"  [ label = "CFG: "] 
  "30064771090" -> "30064771093"  [ label = "CFG: "] 
  "30064771092" -> "30064771089"  [ label = "CFG: "] 
  "30064771095" -> "30064771098"  [ label = "CFG: "] 
  "30064771097" -> "30064771094"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "30064771101" -> "30064771103"  [ label = "CFG: "] 
  "30064771102" -> "30064771100"  [ label = "CFG: "] 
  "30064771111" -> "146028888064"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771103" -> "30064771102"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: hex[HEX_CHARS]"] 
  "30064771074" -> "128849018880"  [ label = "DDG: data"] 
  "30064771074" -> "128849018880"  [ label = "DDG: mem"] 
  "30064771074" -> "128849018880"  [ label = "DDG: *data = mem"] 
  "30064771076" -> "128849018880"  [ label = "DDG: s-&gt;size"] 
  "30064771075" -> "128849018880"  [ label = "DDG: s-&gt;size == 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: WARN_ON(s-&gt;size == 0)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: MAX_MEMHEX_BYTES * 2"] 
  "30064771079" -> "128849018880"  [ label = "DDG: HEX_CHARS"] 
  "30064771078" -> "128849018880"  [ label = "DDG: MAX_MEMHEX_BYTES * 2 &gt;= HEX_CHARS"] 
  "30064771078" -> "128849018880"  [ label = "DDG: BUILD_BUG_ON(MAX_MEMHEX_BYTES * 2 &gt;= HEX_CHARS)"] 
  "30064771082" -> "128849018880"  [ label = "DDG: MAX_MEMHEX_BYTES"] 
  "30064771081" -> "128849018880"  [ label = "DDG: min(len, MAX_MEMHEX_BYTES)"] 
  "30064771081" -> "128849018880"  [ label = "DDG: start_len = min(len, MAX_MEMHEX_BYTES)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: start_len"] 
  "30064771084" -> "128849018880"  [ label = "DDG: start_len-1"] 
  "30064771083" -> "128849018880"  [ label = "DDG: i = start_len-1"] 
  "30064771083" -> "128849018880"  [ label = "DDG: j = 0"] 
  "30064771083" -> "128849018880"  [ label = "DDG: i = start_len-1, j = 0"] 
  "30064771087" -> "128849018880"  [ label = "DDG: i"] 
  "30064771087" -> "128849018880"  [ label = "DDG: i &gt;= 0"] 
  "30064771100" -> "128849018880"  [ label = "DDG: j == 0"] 
  "30064771102" -> "128849018880"  [ label = "DDG: j/2"] 
  "30064771100" -> "128849018880"  [ label = "DDG: j/2 &gt; len"] 
  "30064771099" -> "128849018880"  [ label = "DDG: j == 0 || j/2 &gt; len"] 
  "30064771099" -> "128849018880"  [ label = "DDG: WARN_ON_ONCE(j == 0 || j/2 &gt; len)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: len"] 
  "30064771104" -> "128849018880"  [ label = "DDG: j / 2"] 
  "30064771104" -> "128849018880"  [ label = "DDG: len -= j / 2"] 
  "30064771106" -> "128849018880"  [ label = "DDG: hex[j++]"] 
  "30064771106" -> "128849018880"  [ label = "DDG: hex[j++] = ' '"] 
  "30064771109" -> "128849018880"  [ label = "DDG: hex"] 
  "30064771109" -> "128849018880"  [ label = "DDG: j"] 
  "30064771109" -> "128849018880"  [ label = "DDG: seq_buf_putmem(s, hex, j)"] 
  "30064771110" -> "128849018880"  [ label = "DDG: s"] 
  "30064771110" -> "128849018880"  [ label = "DDG: seq_buf_has_overflowed(s)"] 
  "30064771111" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771089" -> "128849018880"  [ label = "DDG: hex_asc_hi(data[i])"] 
  "30064771089" -> "128849018880"  [ label = "DDG: hex[j++] = hex_asc_hi(data[i])"] 
  "30064771097" -> "128849018880"  [ label = "DDG: data[i]"] 
  "30064771094" -> "128849018880"  [ label = "DDG: hex_asc_lo(data[i])"] 
  "30064771094" -> "128849018880"  [ label = "DDG: hex[j++] = hex_asc_lo(data[i])"] 
  "30064771088" -> "128849018880"  [ label = "DDG: i--"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: HEX_CHARS"] 
  "115964116993" -> "30064771074"  [ label = "DDG: mem"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "90194313226" -> "146028888065"  [ label = "DDG: 0"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "30064771076" -> "30064771075"  [ label = "DDG: s-&gt;size"] 
  "30064771076" -> "30064771075"  [ label = "DDG: 0"] 
  "30064771079" -> "30064771078"  [ label = "DDG: MAX_MEMHEX_BYTES * 2"] 
  "30064771079" -> "30064771078"  [ label = "DDG: HEX_CHARS"] 
  "111669149697" -> "68719476743"  [ label = "DDG: "] 
  "111669149697" -> "90194313226"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116992" -> "30064771076"  [ label = "DDG: s"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771080" -> "30064771079"  [ label = "DDG: MAX_MEMHEX_BYTES"] 
  "30064771080" -> "30064771079"  [ label = "DDG: 2"] 
  "30064771073" -> "30064771079"  [ label = "DDG: HEX_CHARS"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771082" -> "30064771081"  [ label = "DDG: len"] 
  "30064771082" -> "30064771081"  [ label = "DDG: MAX_MEMHEX_BYTES"] 
  "30064771105" -> "30064771104"  [ label = "DDG: j"] 
  "30064771105" -> "30064771104"  [ label = "DDG: 2"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771082" -> "30064771104"  [ label = "DDG: len"] 
  "30064771102" -> "30064771104"  [ label = "DDG: len"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "115964116992" -> "30064771109"  [ label = "DDG: s"] 
  "30064771076" -> "30064771109"  [ label = "DDG: s-&gt;size"] 
  "30064771110" -> "30064771109"  [ label = "DDG: s"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771072" -> "30064771109"  [ label = "DDG: hex"] 
  "30064771106" -> "30064771109"  [ label = "DDG: hex[j++]"] 
  "30064771108" -> "30064771109"  [ label = "DDG: j"] 
  "115964116994" -> "30064771082"  [ label = "DDG: len"] 
  "30064771104" -> "30064771082"  [ label = "DDG: len"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771080" -> "30064771082"  [ label = "DDG: MAX_MEMHEX_BYTES"] 
  "30064771084" -> "30064771087"  [ label = "DDG: i"] 
  "30064771088" -> "30064771087"  [ label = "DDG: i"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771087" -> "30064771088"  [ label = "DDG: i"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771092" -> "30064771089"  [ label = "DDG: data[i]"] 
  "30064771097" -> "30064771094"  [ label = "DDG: data[i]"] 
  "30064771100" -> "30064771099"  [ label = "DDG: j == 0"] 
  "30064771100" -> "30064771099"  [ label = "DDG: j/2 &gt; len"] 
  "30064771101" -> "30064771105"  [ label = "DDG: j"] 
  "30064771103" -> "30064771105"  [ label = "DDG: j"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771076" -> "30064771110"  [ label = "DDG: s-&gt;size"] 
  "30064771109" -> "30064771110"  [ label = "DDG: s"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771111" -> "146028888064"  [ label = "DDG: -1"] 
  "30064771084" -> "30064771083"  [ label = "DDG: i"] 
  "30064771085" -> "30064771083"  [ label = "DDG: start_len"] 
  "30064771085" -> "30064771083"  [ label = "DDG: 1"] 
  "30064771086" -> "30064771083"  [ label = "DDG: j"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771101" -> "30064771100"  [ label = "DDG: j"] 
  "30064771101" -> "30064771100"  [ label = "DDG: 0"] 
  "30064771102" -> "30064771100"  [ label = "DDG: j/2"] 
  "30064771102" -> "30064771100"  [ label = "DDG: len"] 
  "30064771105" -> "30064771108"  [ label = "DDG: j"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: start_len"] 
  "30064771085" -> "30064771084"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771074" -> "30064771092"  [ label = "DDG: data"] 
  "30064771097" -> "30064771092"  [ label = "DDG: data[i]"] 
  "30064771074" -> "30064771097"  [ label = "DDG: data"] 
  "30064771092" -> "30064771097"  [ label = "DDG: data[i]"] 
  "30064771086" -> "30064771101"  [ label = "DDG: j"] 
  "30064771096" -> "30064771101"  [ label = "DDG: j"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771103" -> "30064771102"  [ label = "DDG: j"] 
  "30064771103" -> "30064771102"  [ label = "DDG: 2"] 
  "30064771082" -> "30064771102"  [ label = "DDG: len"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771081" -> "30064771085"  [ label = "DDG: start_len"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771086" -> "30064771091"  [ label = "DDG: j"] 
  "30064771096" -> "30064771091"  [ label = "DDG: j"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771091" -> "30064771096"  [ label = "DDG: j"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "30064771101" -> "30064771103"  [ label = "DDG: j"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "68719476743" -> "30064771100"  [ label = "CDG: "] 
  "68719476743" -> "30064771099"  [ label = "CDG: "] 
  "68719476743" -> "30064771101"  [ label = "CDG: "] 
  "68719476743" -> "30064771082"  [ label = "CDG: "] 
  "68719476743" -> "30064771081"  [ label = "CDG: "] 
  "68719476743" -> "30064771084"  [ label = "CDG: "] 
  "68719476743" -> "30064771083"  [ label = "CDG: "] 
  "68719476743" -> "30064771086"  [ label = "CDG: "] 
  "68719476743" -> "30064771085"  [ label = "CDG: "] 
  "68719476743" -> "30064771087"  [ label = "CDG: "] 
  "68719476743" -> "146028888065"  [ label = "CDG: "] 
  "30064771087" -> "30064771098"  [ label = "CDG: "] 
  "30064771087" -> "30064771097"  [ label = "CDG: "] 
  "30064771087" -> "30064771094"  [ label = "CDG: "] 
  "30064771087" -> "30064771093"  [ label = "CDG: "] 
  "30064771087" -> "30064771096"  [ label = "CDG: "] 
  "30064771087" -> "30064771095"  [ label = "CDG: "] 
  "30064771087" -> "30064771090"  [ label = "CDG: "] 
  "30064771087" -> "30064771089"  [ label = "CDG: "] 
  "30064771087" -> "30064771092"  [ label = "CDG: "] 
  "30064771087" -> "30064771091"  [ label = "CDG: "] 
  "30064771087" -> "30064771088"  [ label = "CDG: "] 
  "30064771087" -> "30064771087"  [ label = "CDG: "] 
  "30064771099" -> "30064771110"  [ label = "CDG: "] 
  "30064771099" -> "30064771109"  [ label = "CDG: "] 
  "30064771099" -> "30064771106"  [ label = "CDG: "] 
  "30064771099" -> "30064771105"  [ label = "CDG: "] 
  "30064771099" -> "30064771108"  [ label = "CDG: "] 
  "30064771099" -> "30064771107"  [ label = "CDG: "] 
  "30064771099" -> "30064771104"  [ label = "CDG: "] 
  "30064771099" -> "146028888065"  [ label = "CDG: "] 
  "30064771110" -> "30064771111"  [ label = "CDG: "] 
  "30064771110" -> "68719476743"  [ label = "CDG: "] 
  "30064771110" -> "146028888064"  [ label = "CDG: "] 
  "30064771101" -> "30064771102"  [ label = "CDG: "] 
  "30064771101" -> "30064771103"  [ label = "CDG: "] 
}
"""
)
