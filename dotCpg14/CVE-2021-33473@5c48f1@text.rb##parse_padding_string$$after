[33mval[0m [36mres1398[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "parse_padding_string" {  
"111669149697" [label = <(METHOD,parse_padding_string)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,self)<SUB>1</SUB>> ]
"115964116995" [label = <(PARAM,str)<SUB>1</SUB>> ]
"25769803776" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,padding_parts: __core.Kernel.Regexp.map.&lt;returnValue&gt;)<SUB>2</SUB>> ]
"94489280513" [label = <(LOCAL,&lt;tmp-0&gt;: ANY)> ]
"94489280514" [label = <(LOCAL,&lt;tmp-1&gt;: __core.Kernel.String.split.&lt;returnValue&gt;)> ]
"94489280515" [label = <(LOCAL,&lt;tmp-2&gt;: __core.Kernel.Regexp.map.&lt;returnValue&gt;.&lt;member&gt;(@size))<SUB>3</SUB>> ]
"94489280516" [label = <(LOCAL,p: ANY)<SUB>5</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.assignment,padding_parts = str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/)...)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,padding_parts,padding_parts = str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/)...)<SUB>2</SUB>> ]
"30064771074" [label = <(map,(&lt;tmp-1&gt; = str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/)).map...)<SUB>2</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,(&lt;tmp-1&gt; = str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/)).map)<SUB>2</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,&lt;tmp-1&gt; = str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/))<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,&lt;tmp-1&gt;,&lt;tmp-1&gt; = str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/))> ]
"30064771077" [label = <(split,(&lt;tmp-0&gt; = str.gsub(&quot;px&quot;, &quot;&quot;)).split(/\s+/))<SUB>2</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.fieldAccess,(&lt;tmp-0&gt; = str.gsub(&quot;px&quot;, &quot;&quot;)).split)<SUB>2</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,&lt;tmp-0&gt; = str.gsub(&quot;px&quot;, &quot;&quot;))<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,&lt;tmp-0&gt;,&lt;tmp-0&gt; = str.gsub(&quot;px&quot;, &quot;&quot;))> ]
"30064771080" [label = <(gsub,str.gsub(&quot;px&quot;, &quot;&quot;))<SUB>2</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,str.gsub)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,str,str.gsub(&quot;px&quot;, &quot;&quot;))<SUB>2</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,gsub,gsub)<SUB>2</SUB>> ]
"68719476741" [label = <(IDENTIFIER,str,str.gsub(&quot;px&quot;, &quot;&quot;))<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;px&quot;,str.gsub(&quot;px&quot;, &quot;&quot;))<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,&quot;&quot;,str.gsub(&quot;px&quot;, &quot;&quot;))<SUB>2</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,split,split)<SUB>2</SUB>> ]
"68719476742" [label = <(IDENTIFIER,&lt;tmp-0&gt;,(&lt;tmp-0&gt; = str.gsub(&quot;px&quot;, &quot;&quot;)).split(/\s+/))> ]
"90194313218" [label = <(LITERAL,/\s+/,(&lt;tmp-0&gt; = str.gsub(&quot;px&quot;, &quot;&quot;)).split(/\s+/))<SUB>2</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,map,map)<SUB>2</SUB>> ]
"68719476743" [label = <(IDENTIFIER,&lt;tmp-1&gt;,(&lt;tmp-1&gt; = str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/)).map...)> ]
"180388626432" [label = <(TYPE_REF,&lt;lambda&gt;0&amp;Proc,&lt;lambda&gt;0&amp;Proc)<SUB>2</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,padding_parts.size)<SUB>3</SUB>> ]
"68719476744" [label = <(IDENTIFIER,&lt;tmp-2&gt;,padding_parts.size)<SUB>3</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.fieldAccess,padding_parts.size)<SUB>3</SUB>> ]
"68719476745" [label = <(IDENTIFIER,padding_parts,padding_parts.size)<SUB>3</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,size,size)<SUB>3</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,case padding_parts.size
          when 1
            p = padding_parts.first
            [p, p, p, p]
          when 2
            p, q = padding_parts
            [p, q, p, q]
          when 3
            p, q, r = padding_parts
            [p, q, r, q]
          when 4
            padding_parts
          else raise ArgumentError, &quot;Couldn't parse padding string '#{str}' - should be a css-style string&quot;
          end)<SUB>3</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.equals,1)<SUB>4</SUB>> ]
"90194313219" [label = <(LITERAL,1,1)<SUB>4</SUB>> ]
"68719476746" [label = <(IDENTIFIER,&lt;tmp-2&gt;,1)<SUB>3</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,p = padding_parts.first)<SUB>5</SUB>> ]
"68719476747" [label = <(IDENTIFIER,p,p = padding_parts.first)<SUB>5</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.fieldAccess,padding_parts.first)<SUB>5</SUB>> ]
"68719476748" [label = <(IDENTIFIER,padding_parts,p = padding_parts.first)<SUB>5</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,first,first)<SUB>5</SUB>> ]
"146028888065" [label = <(RETURN,[p, p, p, p],[p, p, p, p])<SUB>6</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.arrayInitializer,[p, p, p, p])<SUB>6</SUB>> ]
"68719476749" [label = <(IDENTIFIER,p,[p, p, p, p])<SUB>6</SUB>> ]
"68719476750" [label = <(IDENTIFIER,p,[p, p, p, p])<SUB>6</SUB>> ]
"68719476751" [label = <(IDENTIFIER,p,[p, p, p, p])<SUB>6</SUB>> ]
"68719476752" [label = <(IDENTIFIER,p,[p, p, p, p])<SUB>6</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,case padding_parts.size
          when 1
            p = padding_parts.first
            [p, p, p, p]
          when 2
            p, q = padding_parts
            [p, q, p, q]
          when 3
            p, q, r = padding_parts
            [p, q, r, q]
          when 4
            padding_parts
          else raise ArgumentError, &quot;Couldn't parse padding string '#{str}' - should be a css-style string&quot;
          end)<SUB>3</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.equals,2)<SUB>7</SUB>> ]
"90194313220" [label = <(LITERAL,2,2)<SUB>7</SUB>> ]
"68719476753" [label = <(IDENTIFIER,&lt;tmp-2&gt;,2)<SUB>3</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,p, q = padding_parts)<SUB>8</SUB>> ]
"68719476754" [label = <(IDENTIFIER,p,p, q = padding_parts)<SUB>8</SUB>> ]
"68719476755" [label = <(IDENTIFIER,padding_parts,p, q = padding_parts)<SUB>8</SUB>> ]
"146028888066" [label = <(RETURN,[p, q, p, q],[p, q, p, q])<SUB>9</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.arrayInitializer,[p, q, p, q])<SUB>9</SUB>> ]
"68719476756" [label = <(IDENTIFIER,p,[p, q, p, q])<SUB>9</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.fieldAccess,self.q)<SUB>9</SUB>> ]
"68719476757" [label = <(IDENTIFIER,self,[p, q, p, q])<SUB>9</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,q,q)<SUB>9</SUB>> ]
"68719476758" [label = <(IDENTIFIER,p,[p, q, p, q])<SUB>9</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.fieldAccess,self.q)<SUB>9</SUB>> ]
"68719476759" [label = <(IDENTIFIER,self,[p, q, p, q])<SUB>9</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,q,q)<SUB>9</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,case padding_parts.size
          when 1
            p = padding_parts.first
            [p, p, p, p]
          when 2
            p, q = padding_parts
            [p, q, p, q]
          when 3
            p, q, r = padding_parts
            [p, q, r, q]
          when 4
            padding_parts
          else raise ArgumentError, &quot;Couldn't parse padding string '#{str}' - should be a css-style string&quot;
          end)<SUB>3</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.equals,3)<SUB>10</SUB>> ]
"90194313221" [label = <(LITERAL,3,3)<SUB>10</SUB>> ]
"68719476760" [label = <(IDENTIFIER,&lt;tmp-2&gt;,3)<SUB>3</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,p, q, r = padding_parts)<SUB>11</SUB>> ]
"68719476761" [label = <(IDENTIFIER,p,p, q, r = padding_parts)<SUB>11</SUB>> ]
"68719476762" [label = <(IDENTIFIER,padding_parts,p, q, r = padding_parts)<SUB>11</SUB>> ]
"146028888067" [label = <(RETURN,[p, q, r, q],[p, q, r, q])<SUB>12</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.arrayInitializer,[p, q, r, q])<SUB>12</SUB>> ]
"68719476763" [label = <(IDENTIFIER,p,[p, q, r, q])<SUB>12</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.fieldAccess,self.q)<SUB>12</SUB>> ]
"68719476764" [label = <(IDENTIFIER,self,[p, q, r, q])<SUB>12</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,q,q)<SUB>12</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.fieldAccess,self.r)<SUB>12</SUB>> ]
"68719476765" [label = <(IDENTIFIER,self,[p, q, r, q])<SUB>12</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,r,r)<SUB>12</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.fieldAccess,self.q)<SUB>12</SUB>> ]
"68719476766" [label = <(IDENTIFIER,self,[p, q, r, q])<SUB>12</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,q,q)<SUB>12</SUB>> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,case padding_parts.size
          when 1
            p = padding_parts.first
            [p, p, p, p]
          when 2
            p, q = padding_parts
            [p, q, p, q]
          when 3
            p, q, r = padding_parts
            [p, q, r, q]
          when 4
            padding_parts
          else raise ArgumentError, &quot;Couldn't parse padding string '#{str}' - should be a css-style string&quot;
          end)<SUB>3</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.equals,4)<SUB>13</SUB>> ]
"90194313222" [label = <(LITERAL,4,4)<SUB>13</SUB>> ]
"68719476767" [label = <(IDENTIFIER,&lt;tmp-2&gt;,4)<SUB>3</SUB>> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>> ]
"146028888068" [label = <(RETURN,padding_parts,padding_parts)<SUB>14</SUB>> ]
"68719476768" [label = <(IDENTIFIER,padding_parts,padding_parts)<SUB>14</SUB>> ]
"25769803786" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>> ]
"146028888069" [label = <(RETURN,raise ArgumentError, &quot;Couldn't parse padding st...,raise ArgumentError, &quot;Couldn't parse padding st...)<SUB>15</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,THROW,raise ArgumentError, &quot;Couldn't parse padding string '#{str}' - should be a css-style string&quot;)<SUB>15</SUB>> ]
"180388626433" [label = <(TYPE_REF,__core.ArgumentError,__core.ArgumentError)<SUB>15</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.formatString,&quot;Couldn't parse padding string '#{str}' - shoul...)<SUB>15</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.formattedValue,str)<SUB>15</SUB>> ]
"68719476769" [label = <(IDENTIFIER,str,str)<SUB>15</SUB>> ]
"133143986180" [label = <(MODIFIER,VIRTUAL)> ]
"133143986181" [label = <(MODIFIER,PRIVATE)> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
"111669149696" [label = <(METHOD,&lt;lambda&gt;0)<SUB>2</SUB>> ]
"115964116992" [label = <(PARAM,self)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,px)<SUB>2</SUB>> ]
"25769803777" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>> ]
"146028888064" [label = <(RETURN,px.to_i,px.to_i)<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.fieldAccess,px.to_i)<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,px,px.to_i)<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,to_i,to_i)<SUB>2</SUB>> ]
"133143986176" [label = <(MODIFIER,VIRTUAL)> ]
"133143986177" [label = <(MODIFIER,PUBLIC)> ]
"133143986178" [label = <(MODIFIER,LAMBDA)> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>2</SUB>> ]
"171798691842" [label = <(TYPE_DECL,&lt;lambda&gt;0)<SUB>2</SUB>> ]
"133143986179" [label = <(MODIFIER,LAMBDA)> ]
"171798691843" [label = <(TYPE_DECL,&lt;lambda&gt;0&amp;Proc)<SUB>2</SUB>> ]
"103079215104" [label = <(MEMBER,call)> ]
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "111669149696"  [ label = "AST: "] 
  "111669149697" -> "171798691842"  [ label = "AST: "] 
  "111669149697" -> "171798691843"  [ label = "AST: "] 
  "111669149697" -> "25769803776"  [ label = "AST: "] 
  "111669149697" -> "133143986180"  [ label = "AST: "] 
  "111669149697" -> "133143986181"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803776" -> "94489280512"  [ label = "AST: "] 
  "25769803776" -> "94489280513"  [ label = "AST: "] 
  "25769803776" -> "94489280514"  [ label = "AST: "] 
  "25769803776" -> "94489280515"  [ label = "AST: "] 
  "25769803776" -> "94489280516"  [ label = "AST: "] 
  "25769803776" -> "30064771073"  [ label = "AST: "] 
  "25769803776" -> "25769803778"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771074" -> "68719476743"  [ label = "AST: "] 
  "30064771074" -> "180388626432"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "55834574851"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "55834574850"  [ label = "AST: "] 
  "30064771079" -> "68719476739"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "68719476741"  [ label = "AST: "] 
  "30064771080" -> "90194313216"  [ label = "AST: "] 
  "30064771080" -> "90194313217"  [ label = "AST: "] 
  "30064771081" -> "68719476740"  [ label = "AST: "] 
  "30064771081" -> "55834574849"  [ label = "AST: "] 
  "25769803778" -> "30064771082"  [ label = "AST: "] 
  "25769803778" -> "47244640256"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476745"  [ label = "AST: "] 
  "30064771083" -> "55834574852"  [ label = "AST: "] 
  "47244640256" -> "30064771084"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "47244640256" -> "25769803780"  [ label = "AST: "] 
  "30064771084" -> "90194313219"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "25769803779" -> "30064771085"  [ label = "AST: "] 
  "25769803779" -> "146028888065"  [ label = "AST: "] 
  "30064771085" -> "68719476747"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "68719476748"  [ label = "AST: "] 
  "30064771086" -> "55834574853"  [ label = "AST: "] 
  "146028888065" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "68719476749"  [ label = "AST: "] 
  "30064771087" -> "68719476750"  [ label = "AST: "] 
  "30064771087" -> "68719476751"  [ label = "AST: "] 
  "30064771087" -> "68719476752"  [ label = "AST: "] 
  "25769803780" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "30064771088"  [ label = "AST: "] 
  "47244640257" -> "25769803781"  [ label = "AST: "] 
  "47244640257" -> "25769803782"  [ label = "AST: "] 
  "30064771088" -> "90194313220"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "25769803781" -> "30064771089"  [ label = "AST: "] 
  "25769803781" -> "146028888066"  [ label = "AST: "] 
  "30064771089" -> "68719476754"  [ label = "AST: "] 
  "30064771089" -> "68719476755"  [ label = "AST: "] 
  "146028888066" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476756"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771090" -> "68719476758"  [ label = "AST: "] 
  "30064771090" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "68719476757"  [ label = "AST: "] 
  "30064771091" -> "55834574854"  [ label = "AST: "] 
  "30064771092" -> "68719476759"  [ label = "AST: "] 
  "30064771092" -> "55834574855"  [ label = "AST: "] 
  "25769803782" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771093"  [ label = "AST: "] 
  "47244640258" -> "25769803783"  [ label = "AST: "] 
  "47244640258" -> "25769803784"  [ label = "AST: "] 
  "30064771093" -> "90194313221"  [ label = "AST: "] 
  "30064771093" -> "68719476760"  [ label = "AST: "] 
  "25769803783" -> "30064771094"  [ label = "AST: "] 
  "25769803783" -> "146028888067"  [ label = "AST: "] 
  "30064771094" -> "68719476761"  [ label = "AST: "] 
  "30064771094" -> "68719476762"  [ label = "AST: "] 
  "146028888067" -> "30064771095"  [ label = "AST: "] 
  "30064771095" -> "68719476763"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771095" -> "30064771097"  [ label = "AST: "] 
  "30064771095" -> "30064771098"  [ label = "AST: "] 
  "30064771096" -> "68719476764"  [ label = "AST: "] 
  "30064771096" -> "55834574856"  [ label = "AST: "] 
  "30064771097" -> "68719476765"  [ label = "AST: "] 
  "30064771097" -> "55834574857"  [ label = "AST: "] 
  "30064771098" -> "68719476766"  [ label = "AST: "] 
  "30064771098" -> "55834574858"  [ label = "AST: "] 
  "25769803784" -> "47244640259"  [ label = "AST: "] 
  "47244640259" -> "30064771099"  [ label = "AST: "] 
  "47244640259" -> "25769803785"  [ label = "AST: "] 
  "47244640259" -> "25769803786"  [ label = "AST: "] 
  "30064771099" -> "90194313222"  [ label = "AST: "] 
  "30064771099" -> "68719476767"  [ label = "AST: "] 
  "25769803785" -> "146028888068"  [ label = "AST: "] 
  "146028888068" -> "68719476768"  [ label = "AST: "] 
  "25769803786" -> "146028888069"  [ label = "AST: "] 
  "146028888069" -> "47244640260"  [ label = "AST: "] 
  "47244640260" -> "180388626433"  [ label = "AST: "] 
  "47244640260" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771101" -> "68719476769"  [ label = "AST: "] 
  "111669149696" -> "115964116992"  [ label = "AST: "] 
  "111669149696" -> "115964116993"  [ label = "AST: "] 
  "111669149696" -> "25769803777"  [ label = "AST: "] 
  "111669149696" -> "133143986176"  [ label = "AST: "] 
  "111669149696" -> "133143986177"  [ label = "AST: "] 
  "111669149696" -> "133143986178"  [ label = "AST: "] 
  "111669149696" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "30064771072"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "55834574848"  [ label = "AST: "] 
  "171798691842" -> "133143986179"  [ label = "AST: "] 
  "171798691843" -> "103079215104"  [ label = "AST: "] 
  "30064771073" -> "55834574852"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771075" -> "180388626432"  [ label = "CFG: "] 
  "180388626432" -> "30064771074"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771084" -> "55834574853"  [ label = "CFG: "] 
  "30064771084" -> "30064771088"  [ label = "CFG: "] 
  "30064771076" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771075"  [ label = "CFG: "] 
  "55834574852" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "30064771087"  [ label = "CFG: "] 
  "146028888065" -> "128849018881"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771087" -> "146028888065"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771088" -> "30064771093"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "55834574853" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "55834574854"  [ label = "CFG: "] 
  "146028888066" -> "128849018881"  [ label = "CFG: "] 
  "30064771079" -> "55834574850"  [ label = "CFG: "] 
  "55834574850" -> "30064771078"  [ label = "CFG: "] 
  "30064771090" -> "146028888066"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771093" -> "30064771099"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "30064771091" -> "55834574855"  [ label = "CFG: "] 
  "30064771092" -> "30064771090"  [ label = "CFG: "] 
  "30064771094" -> "55834574856"  [ label = "CFG: "] 
  "146028888067" -> "128849018881"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "55834574854" -> "30064771091"  [ label = "CFG: "] 
  "55834574855" -> "30064771092"  [ label = "CFG: "] 
  "30064771095" -> "146028888067"  [ label = "CFG: "] 
  "30064771099" -> "180388626433"  [ label = "CFG: "] 
  "30064771099" -> "146028888068"  [ label = "CFG: "] 
  "55834574849" -> "30064771081"  [ label = "CFG: "] 
  "30064771096" -> "55834574857"  [ label = "CFG: "] 
  "30064771097" -> "55834574858"  [ label = "CFG: "] 
  "30064771098" -> "30064771095"  [ label = "CFG: "] 
  "146028888068" -> "128849018881"  [ label = "CFG: "] 
  "146028888069" -> "128849018881"  [ label = "CFG: "] 
  "55834574856" -> "30064771096"  [ label = "CFG: "] 
  "55834574857" -> "30064771097"  [ label = "CFG: "] 
  "55834574858" -> "30064771098"  [ label = "CFG: "] 
  "180388626433" -> "128849018881"  [ label = "CFG: "] 
  "111669149697" -> "55834574849"  [ label = "CFG: "] 
  "146028888066" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888067" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018881"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116994" -> "128849018881"  [ label = "DDG: self"] 
  "30064771073" -> "128849018881"  [ label = "DDG: padding_parts"] 
  "30064771080" -> "128849018881"  [ label = "DDG: str"] 
  "30064771079" -> "128849018881"  [ label = "DDG: str.gsub(&quot;px&quot;, &quot;&quot;)"] 
  "30064771077" -> "128849018881"  [ label = "DDG: &lt;tmp-0&gt;"] 
  "30064771076" -> "128849018881"  [ label = "DDG: (&lt;tmp-0&gt; = str.gsub(&quot;px&quot;, &quot;&quot;)).split(/\s+/)"] 
  "30064771074" -> "128849018881"  [ label = "DDG: &lt;tmp-1&gt;"] 
  "30064771073" -> "128849018881"  [ label = "DDG: (&lt;tmp-1&gt; = str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/)).map(str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/).map { |px| px.to_i })"] 
  "30064771073" -> "128849018881"  [ label = "DDG: padding_parts = str.gsub(&quot;px&quot;, &quot;&quot;).split(/\s+/).map { |px| px.to_i }"] 
  "30064771082" -> "128849018881"  [ label = "DDG: padding_parts.size"] 
  "30064771084" -> "128849018881"  [ label = "DDG: &lt;tmp-2&gt;"] 
  "30064771084" -> "128849018881"  [ label = "DDG: 1"] 
  "30064771085" -> "128849018881"  [ label = "DDG: padding_parts.first"] 
  "30064771085" -> "128849018881"  [ label = "DDG: p = padding_parts.first"] 
  "30064771087" -> "128849018881"  [ label = "DDG: p"] 
  "30064771087" -> "128849018881"  [ label = "DDG: [p, p, p, p]"] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: &lt;tmp-1&gt;"] 
  "30064771074" -> "30064771073"  [ label = "DDG: &lt;lambda&gt;0&amp;Proc"] 
  "30064771073" -> "30064771082"  [ label = "DDG: padding_parts"] 
  "30064771076" -> "30064771074"  [ label = "DDG: &lt;tmp-1&gt;"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771082" -> "30064771084"  [ label = "DDG: &lt;tmp-2&gt;"] 
  "30064771073" -> "30064771085"  [ label = "DDG: padding_parts"] 
  "30064771087" -> "146028888065"  [ label = "DDG: [p, p, p, p]"] 
  "30064771077" -> "30064771076"  [ label = "DDG: &lt;tmp-0&gt;"] 
  "30064771077" -> "30064771076"  [ label = "DDG: /\s+/"] 
  "30064771079" -> "30064771077"  [ label = "DDG: &lt;tmp-0&gt;"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771085" -> "30064771087"  [ label = "DDG: p"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771084" -> "30064771088"  [ label = "DDG: &lt;tmp-2&gt;"] 
  "30064771073" -> "30064771089"  [ label = "DDG: padding_parts"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771090" -> "146028888066"  [ label = "DDG: [p, q, p, q]"] 
  "30064771080" -> "30064771079"  [ label = "DDG: str"] 
  "30064771080" -> "30064771079"  [ label = "DDG: &quot;px&quot;"] 
  "30064771080" -> "30064771079"  [ label = "DDG: &quot;&quot;"] 
  "30064771089" -> "30064771090"  [ label = "DDG: p"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "115964116994" -> "30064771090"  [ label = "DDG: self"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771088" -> "30064771093"  [ label = "DDG: &lt;tmp-2&gt;"] 
  "30064771073" -> "30064771094"  [ label = "DDG: padding_parts"] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771095" -> "146028888067"  [ label = "DDG: [p, q, r, q]"] 
  "115964116995" -> "30064771080"  [ label = "DDG: str"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771094" -> "30064771095"  [ label = "DDG: p"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "115964116994" -> "30064771095"  [ label = "DDG: self"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771093" -> "30064771099"  [ label = "DDG: &lt;tmp-2&gt;"] 
  "68719476768" -> "146028888068"  [ label = "DDG: padding_parts"] 
  "30064771073" -> "68719476768"  [ label = "DDG: padding_parts"] 
  "111669149697" -> "68719476768"  [ label = "DDG: "] 
  "111669149697" -> "180388626433"  [ label = "DDG: "] 
  "30064771084" -> "146028888065"  [ label = "CDG: "] 
  "30064771084" -> "55834574853"  [ label = "CDG: "] 
  "30064771084" -> "30064771085"  [ label = "CDG: "] 
  "30064771084" -> "30064771087"  [ label = "CDG: "] 
  "30064771084" -> "30064771086"  [ label = "CDG: "] 
  "30064771084" -> "30064771088"  [ label = "CDG: "] 
  "30064771088" -> "30064771093"  [ label = "CDG: "] 
  "30064771088" -> "30064771092"  [ label = "CDG: "] 
  "30064771088" -> "146028888066"  [ label = "CDG: "] 
  "30064771088" -> "55834574855"  [ label = "CDG: "] 
  "30064771088" -> "55834574854"  [ label = "CDG: "] 
  "30064771088" -> "30064771089"  [ label = "CDG: "] 
  "30064771088" -> "30064771091"  [ label = "CDG: "] 
  "30064771088" -> "30064771090"  [ label = "CDG: "] 
  "30064771093" -> "30064771095"  [ label = "CDG: "] 
  "30064771093" -> "30064771094"  [ label = "CDG: "] 
  "30064771093" -> "30064771097"  [ label = "CDG: "] 
  "30064771093" -> "30064771096"  [ label = "CDG: "] 
  "30064771093" -> "30064771099"  [ label = "CDG: "] 
  "30064771093" -> "30064771098"  [ label = "CDG: "] 
  "30064771093" -> "55834574858"  [ label = "CDG: "] 
  "30064771093" -> "146028888067"  [ label = "CDG: "] 
  "30064771093" -> "55834574857"  [ label = "CDG: "] 
  "30064771093" -> "55834574856"  [ label = "CDG: "] 
  "30064771099" -> "146028888068"  [ label = "CDG: "] 
  "30064771099" -> "180388626433"  [ label = "CDG: "] 
}
"""
)
