[33mval[0m [36mres1358[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_cast_between_extension_types" {  
"111669149697" [label = <(METHOD,test_cast_between_extension_types)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,array = pa.array([1, 2, 3], pa.int8()))<SUB>2</SUB>> ]
"68719476741" [label = <(IDENTIFIER,array,array = pa.array([1, 2, 3], pa.int8()))<SUB>2</SUB>> ]
"30064771076" [label = <(array,pa.array([1, 2, 3], pa.int8()))<SUB>2</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.fieldAccess,pa.array)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,pa,pa.array([1, 2, 3], pa.int8()))<SUB>2</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,array,array)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,pa,pa.array([1, 2, 3], pa.int8()))<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.listLiteral,[1, 2, 3])<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,1,[1, 2, 3])<SUB>2</SUB>> ]
"90194313217" [label = <(LITERAL,2,[1, 2, 3])<SUB>2</SUB>> ]
"90194313218" [label = <(LITERAL,3,[1, 2, 3])<SUB>2</SUB>> ]
"30064771074" [label = <(int8,pa.int8())<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.fieldAccess,pa.int8)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,pa,pa.int8())<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,int8,int8)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,pa,pa.int8())<SUB>2</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.assignment,tiny_int_arr = array.cast(TinyIntType()))<SUB>4</SUB>> ]
"68719476745" [label = <(IDENTIFIER,tiny_int_arr,tiny_int_arr = array.cast(TinyIntType()))<SUB>4</SUB>> ]
"30064771080" [label = <(cast,array.cast(TinyIntType()))<SUB>4</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,array.cast)<SUB>4</SUB>> ]
"68719476743" [label = <(IDENTIFIER,array,array.cast(TinyIntType()))<SUB>4</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,cast,cast)<SUB>4</SUB>> ]
"68719476744" [label = <(IDENTIFIER,array,array.cast(TinyIntType()))<SUB>4</SUB>> ]
"30064771078" [label = <(TinyIntType,TinyIntType())<SUB>4</SUB>> ]
"68719476742" [label = <(IDENTIFIER,TinyIntType,TinyIntType())<SUB>4</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assert,assert tiny_int_arr.type == TinyIntType())<SUB>5</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.equals,tiny_int_arr.type == TinyIntType())<SUB>5</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.fieldAccess,tiny_int_arr.type)<SUB>5</SUB>> ]
"68719476746" [label = <(IDENTIFIER,tiny_int_arr,tiny_int_arr.type == TinyIntType())<SUB>5</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,type,type)<SUB>5</SUB>> ]
"30064771083" [label = <(TinyIntType,TinyIntType())<SUB>5</SUB>> ]
"68719476747" [label = <(IDENTIFIER,TinyIntType,TinyIntType())<SUB>5</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,msg = &quot;Casting from 'extension&lt;arrow.py_extensi...)<SUB>8</SUB>> ]
"68719476748" [label = <(IDENTIFIER,msg,msg = &quot;Casting from 'extension&lt;arrow.py_extensi...)<SUB>8</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.stringExpressionList,&quot;Casting from 'extension&lt;arrow.py_extension_typ...)<SUB>8</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;Casting from 'extension&lt;arrow.py_extension_typ...,&quot;Casting from 'extension&lt;arrow.py_extension_typ...)<SUB>8</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;to different extension type &quot;,&quot;Casting from 'extension&lt;arrow.py_extension_typ...)<SUB>9</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;'extension&lt;arrow.py_extension_type&lt;IntegerType...,&quot;Casting from 'extension&lt;arrow.py_extension_typ...)<SUB>10</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;One can first cast to the storage type, &quot;,&quot;Casting from 'extension&lt;arrow.py_extension_typ...)<SUB>11</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;then to the extension type.&quot;,&quot;Casting from 'extension&lt;arrow.py_extension_typ...)<SUB>12</SUB>> ]
"25769803780" [label = <(BLOCK,manager_tmp0 = pytest.raises(TypeError, match =...,manager_tmp0 = pytest.raises(TypeError, match =...)<SUB>14</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,manager_tmp0 = pytest.raises(TypeError, match =...)<SUB>14</SUB>> ]
"68719476756" [label = <(IDENTIFIER,manager_tmp0,manager_tmp0 = pytest.raises(TypeError, match =...)<SUB>14</SUB>> ]
"30064771092" [label = <(raises,pytest.raises(TypeError, match = msg))<SUB>14</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.fieldAccess,pytest.raises)<SUB>14</SUB>> ]
"68719476754" [label = <(IDENTIFIER,pytest,pytest.raises(TypeError, match = msg))<SUB>14</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,raises,raises)<SUB>14</SUB>> ]
"68719476755" [label = <(IDENTIFIER,pytest,pytest.raises(TypeError, match = msg))<SUB>14</SUB>> ]
"68719476752" [label = <(IDENTIFIER,TypeError,pytest.raises(TypeError, match = msg))<SUB>14</SUB>> ]
"68719476753" [label = <(IDENTIFIER,msg,pytest.raises(TypeError, match = msg))<SUB>14</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assignment,enter_tmp1 = manager_tmp0.__enter__)<SUB>14</SUB>> ]
"68719476758" [label = <(IDENTIFIER,enter_tmp1,enter_tmp1 = manager_tmp0.__enter__)<SUB>14</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.fieldAccess,manager_tmp0.__enter__)<SUB>14</SUB>> ]
"68719476757" [label = <(IDENTIFIER,manager_tmp0,enter_tmp1 = manager_tmp0.__enter__)<SUB>14</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,__enter__,__enter__)<SUB>14</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assignment,exit_tmp2 = manager_tmp0.__exit__)<SUB>14</SUB>> ]
"68719476760" [label = <(IDENTIFIER,exit_tmp2,exit_tmp2 = manager_tmp0.__exit__)<SUB>14</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.fieldAccess,manager_tmp0.__exit__)<SUB>14</SUB>> ]
"68719476759" [label = <(IDENTIFIER,manager_tmp0,exit_tmp2 = manager_tmp0.__exit__)<SUB>14</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,__exit__,__exit__)<SUB>14</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.assignment,value_tmp3 = enter_tmp1())<SUB>14</SUB>> ]
"68719476763" [label = <(IDENTIFIER,value_tmp3,value_tmp3 = enter_tmp1())<SUB>14</SUB>> ]
"30064771098" [label = <(,enter_tmp1())<SUB>14</SUB>> ]
"68719476761" [label = <(IDENTIFIER,enter_tmp1,enter_tmp1())<SUB>14</SUB>> ]
"68719476762" [label = <(IDENTIFIER,manager_tmp0,enter_tmp1())<SUB>14</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,TRY,try: ...)<SUB>14</SUB>> ]
"25769803778" [label = <(BLOCK,tiny_int_arr.cast(IntegerType()),tiny_int_arr.cast(IntegerType()))<SUB>14</SUB>> ]
"30064771090" [label = <(cast,tiny_int_arr.cast(IntegerType()))<SUB>15</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.fieldAccess,tiny_int_arr.cast)<SUB>15</SUB>> ]
"68719476750" [label = <(IDENTIFIER,tiny_int_arr,tiny_int_arr.cast(IntegerType()))<SUB>15</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,cast,cast)<SUB>15</SUB>> ]
"68719476751" [label = <(IDENTIFIER,tiny_int_arr,tiny_int_arr.cast(IntegerType()))<SUB>15</SUB>> ]
"30064771088" [label = <(IntegerType,IntegerType())<SUB>15</SUB>> ]
"68719476749" [label = <(IDENTIFIER,IntegerType,IntegerType())<SUB>15</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,FINALLY,__exit__())<SUB>14</SUB>> ]
"25769803779" [label = <(BLOCK,__exit__(),__exit__())<SUB>14</SUB>> ]
"30064771100" [label = <(,__exit__())<SUB>14</SUB>> ]
"68719476764" [label = <(IDENTIFIER,__exit__,__exit__())<SUB>14</SUB>> ]
"68719476765" [label = <(IDENTIFIER,manager_tmp0,__exit__())<SUB>14</SUB>> ]
"25769803781" [label = <(BLOCK,tmp4 = tiny_int_arr.cast(pa.int64())
tmp4.cast(...,tmp4 = tiny_int_arr.cast(pa.int64())
tmp4.cast(...)<SUB>16</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.assignment,tmp4 = tiny_int_arr.cast(pa.int64()))<SUB>16</SUB>> ]
"68719476771" [label = <(IDENTIFIER,tmp4,tmp4 = tiny_int_arr.cast(pa.int64()))<SUB>16</SUB>> ]
"30064771105" [label = <(cast,tiny_int_arr.cast(pa.int64()))<SUB>16</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.fieldAccess,tiny_int_arr.cast)<SUB>16</SUB>> ]
"68719476769" [label = <(IDENTIFIER,tiny_int_arr,tiny_int_arr.cast(pa.int64()))<SUB>16</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,cast,cast)<SUB>16</SUB>> ]
"68719476770" [label = <(IDENTIFIER,tiny_int_arr,tiny_int_arr.cast(pa.int64()))<SUB>16</SUB>> ]
"30064771103" [label = <(int64,pa.int64())<SUB>16</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.fieldAccess,pa.int64)<SUB>16</SUB>> ]
"68719476767" [label = <(IDENTIFIER,pa,pa.int64())<SUB>16</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,int64,int64)<SUB>16</SUB>> ]
"68719476768" [label = <(IDENTIFIER,pa,pa.int64())<SUB>16</SUB>> ]
"30064771108" [label = <(cast,tmp4.cast(IntegerType()))<SUB>16</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.fieldAccess,tmp4.cast)<SUB>16</SUB>> ]
"68719476772" [label = <(IDENTIFIER,tmp4,tmp4.cast(IntegerType()))<SUB>16</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,cast,cast)<SUB>16</SUB>> ]
"68719476773" [label = <(IDENTIFIER,tmp4,tmp4.cast(IntegerType()))<SUB>16</SUB>> ]
"30064771101" [label = <(IntegerType,IntegerType())<SUB>16</SUB>> ]
"68719476766" [label = <(IDENTIFIER,IntegerType,IntegerType())<SUB>16</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.assignment,array = tmp5 = pa.array([b'1' * 16, b'2' * 16],...)<SUB>19</SUB>> ]
"68719476782" [label = <(IDENTIFIER,array,array = tmp5 = pa.array([b'1' * 16, b'2' * 16],...)<SUB>19</SUB>> ]
"25769803782" [label = <(BLOCK,tmp5 = pa.array([b'1' * 16, b'2' * 16], pa.bina...,tmp5 = pa.array([b'1' * 16, b'2' * 16], pa.bina...)<SUB>19</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,tmp5 = pa.array([b'1' * 16, b'2' * 16], pa.bina...)<SUB>19</SUB>> ]
"68719476779" [label = <(IDENTIFIER,tmp5,tmp5 = pa.array([b'1' * 16, b'2' * 16], pa.bina...)<SUB>19</SUB>> ]
"30064771116" [label = <(array,pa.array([b'1' * 16, b'2' * 16], pa.binary(16)))<SUB>19</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.fieldAccess,pa.array)<SUB>19</SUB>> ]
"68719476777" [label = <(IDENTIFIER,pa,pa.array([b'1' * 16, b'2' * 16], pa.binary(16)))<SUB>19</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,array,array)<SUB>19</SUB>> ]
"68719476778" [label = <(IDENTIFIER,pa,pa.array([b'1' * 16, b'2' * 16], pa.binary(16)))<SUB>19</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.listLiteral,[b'1' * 16, b'2' * 16])<SUB>19</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.multiplication,b'1' * 16)<SUB>19</SUB>> ]
"90194313224" [label = <(LITERAL,b'1',b'1' * 16)<SUB>19</SUB>> ]
"90194313225" [label = <(LITERAL,16,b'1' * 16)<SUB>19</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.multiplication,b'2' * 16)<SUB>19</SUB>> ]
"90194313226" [label = <(LITERAL,b'2',b'2' * 16)<SUB>19</SUB>> ]
"90194313227" [label = <(LITERAL,16,b'2' * 16)<SUB>19</SUB>> ]
"30064771114" [label = <(binary,pa.binary(16))<SUB>19</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.fieldAccess,pa.binary)<SUB>19</SUB>> ]
"68719476775" [label = <(IDENTIFIER,pa,pa.binary(16))<SUB>19</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,binary,binary)<SUB>19</SUB>> ]
"68719476776" [label = <(IDENTIFIER,pa,pa.binary(16))<SUB>19</SUB>> ]
"90194313228" [label = <(LITERAL,16,pa.binary(16))<SUB>19</SUB>> ]
"30064771119" [label = <(cast,tmp5.cast(UuidType()))<SUB>19</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.fieldAccess,tmp5.cast)<SUB>19</SUB>> ]
"68719476780" [label = <(IDENTIFIER,tmp5,tmp5.cast(UuidType()))<SUB>19</SUB>> ]
"55834574861" [label = <(FIELD_IDENTIFIER,cast,cast)<SUB>19</SUB>> ]
"68719476781" [label = <(IDENTIFIER,tmp5,tmp5.cast(UuidType()))<SUB>19</SUB>> ]
"30064771109" [label = <(UuidType,UuidType())<SUB>19</SUB>> ]
"68719476774" [label = <(IDENTIFIER,UuidType,UuidType())<SUB>19</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assignment,out = array.cast(UuidType()))<SUB>20</SUB>> ]
"68719476786" [label = <(IDENTIFIER,out,out = array.cast(UuidType()))<SUB>20</SUB>> ]
"30064771123" [label = <(cast,array.cast(UuidType()))<SUB>20</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.fieldAccess,array.cast)<SUB>20</SUB>> ]
"68719476784" [label = <(IDENTIFIER,array,array.cast(UuidType()))<SUB>20</SUB>> ]
"55834574862" [label = <(FIELD_IDENTIFIER,cast,cast)<SUB>20</SUB>> ]
"68719476785" [label = <(IDENTIFIER,array,array.cast(UuidType()))<SUB>20</SUB>> ]
"30064771121" [label = <(UuidType,UuidType())<SUB>20</SUB>> ]
"68719476783" [label = <(IDENTIFIER,UuidType,UuidType())<SUB>20</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.assert,assert out.type == UuidType())<SUB>21</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.equals,out.type == UuidType())<SUB>21</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.fieldAccess,out.type)<SUB>21</SUB>> ]
"68719476787" [label = <(IDENTIFIER,out,out.type == UuidType())<SUB>21</SUB>> ]
"55834574863" [label = <(FIELD_IDENTIFIER,type,type)<SUB>21</SUB>> ]
"30064771126" [label = <(UuidType,UuidType())<SUB>21</SUB>> ]
"68719476788" [label = <(IDENTIFIER,UuidType,UuidType())<SUB>21</SUB>> ]
"25769803785" [label = <(BLOCK,manager_tmp6 = pytest.raises(TypeError, match =...,manager_tmp6 = pytest.raises(TypeError, match =...)<SUB>25</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.assignment,manager_tmp6 = pytest.raises(TypeError, match =...)<SUB>25</SUB>> ]
"68719476795" [label = <(IDENTIFIER,manager_tmp6,manager_tmp6 = pytest.raises(TypeError, match =...)<SUB>25</SUB>> ]
"30064771133" [label = <(raises,pytest.raises(TypeError, match = 'Casting from *'))<SUB>25</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.fieldAccess,pytest.raises)<SUB>25</SUB>> ]
"68719476793" [label = <(IDENTIFIER,pytest,pytest.raises(TypeError, match = 'Casting from *'))<SUB>25</SUB>> ]
"55834574865" [label = <(FIELD_IDENTIFIER,raises,raises)<SUB>25</SUB>> ]
"68719476794" [label = <(IDENTIFIER,pytest,pytest.raises(TypeError, match = 'Casting from *'))<SUB>25</SUB>> ]
"68719476792" [label = <(IDENTIFIER,TypeError,pytest.raises(TypeError, match = 'Casting from *'))<SUB>25</SUB>> ]
"90194313229" [label = <(LITERAL,'Casting from *',pytest.raises(TypeError, match = 'Casting from *'))<SUB>25</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.assignment,enter_tmp7 = manager_tmp6.__enter__)<SUB>25</SUB>> ]
"68719476797" [label = <(IDENTIFIER,enter_tmp7,enter_tmp7 = manager_tmp6.__enter__)<SUB>25</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.fieldAccess,manager_tmp6.__enter__)<SUB>25</SUB>> ]
"68719476796" [label = <(IDENTIFIER,manager_tmp6,enter_tmp7 = manager_tmp6.__enter__)<SUB>25</SUB>> ]
"55834574866" [label = <(FIELD_IDENTIFIER,__enter__,__enter__)<SUB>25</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.assignment,exit_tmp8 = manager_tmp6.__exit__)<SUB>25</SUB>> ]
"68719476799" [label = <(IDENTIFIER,exit_tmp8,exit_tmp8 = manager_tmp6.__exit__)<SUB>25</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.fieldAccess,manager_tmp6.__exit__)<SUB>25</SUB>> ]
"68719476798" [label = <(IDENTIFIER,manager_tmp6,exit_tmp8 = manager_tmp6.__exit__)<SUB>25</SUB>> ]
"55834574867" [label = <(FIELD_IDENTIFIER,__exit__,__exit__)<SUB>25</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.assignment,value_tmp9 = enter_tmp7())<SUB>25</SUB>> ]
"68719476802" [label = <(IDENTIFIER,value_tmp9,value_tmp9 = enter_tmp7())<SUB>25</SUB>> ]
"30064771139" [label = <(,enter_tmp7())<SUB>25</SUB>> ]
"68719476800" [label = <(IDENTIFIER,enter_tmp7,enter_tmp7())<SUB>25</SUB>> ]
"68719476801" [label = <(IDENTIFIER,manager_tmp6,enter_tmp7())<SUB>25</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,TRY,try: ...)<SUB>25</SUB>> ]
"25769803783" [label = <(BLOCK,array.cast(UuidType2()),array.cast(UuidType2()))<SUB>25</SUB>> ]
"30064771131" [label = <(cast,array.cast(UuidType2()))<SUB>26</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.fieldAccess,array.cast)<SUB>26</SUB>> ]
"68719476790" [label = <(IDENTIFIER,array,array.cast(UuidType2()))<SUB>26</SUB>> ]
"55834574864" [label = <(FIELD_IDENTIFIER,cast,cast)<SUB>26</SUB>> ]
"68719476791" [label = <(IDENTIFIER,array,array.cast(UuidType2()))<SUB>26</SUB>> ]
"30064771129" [label = <(UuidType2,UuidType2())<SUB>26</SUB>> ]
"68719476789" [label = <(IDENTIFIER,UuidType2,UuidType2())<SUB>26</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,FINALLY,__exit__())<SUB>25</SUB>> ]
"25769803784" [label = <(BLOCK,__exit__(),__exit__())<SUB>25</SUB>> ]
"30064771141" [label = <(,__exit__())<SUB>25</SUB>> ]
"68719476803" [label = <(IDENTIFIER,__exit__,__exit__())<SUB>25</SUB>> ]
"68719476804" [label = <(IDENTIFIER,manager_tmp6,__exit__())<SUB>25</SUB>> ]
"94489280513" [label = <(LOCAL,pa: ANY)<SUB>2</SUB>> ]
"94489280515" [label = <(LOCAL,array: ANY)<SUB>2</SUB>> ]
"94489280516" [label = <(LOCAL,TinyIntType: ANY)<SUB>4</SUB>> ]
"94489280518" [label = <(LOCAL,tiny_int_arr: ANY)<SUB>4</SUB>> ]
"94489280519" [label = <(LOCAL,msg: ANY)<SUB>8</SUB>> ]
"94489280520" [label = <(LOCAL,IntegerType: ANY)<SUB>15</SUB>> ]
"94489280522" [label = <(LOCAL,TypeError: ANY)<SUB>14</SUB>> ]
"94489280524" [label = <(LOCAL,pytest: ANY)<SUB>14</SUB>> ]
"94489280526" [label = <(LOCAL,manager_tmp0: ANY)<SUB>14</SUB>> ]
"94489280527" [label = <(LOCAL,enter_tmp1: manager_tmp0.__enter__.&lt;returnValue&gt;.&lt;member&gt;(__enter__))<SUB>14</SUB>> ]
"94489280528" [label = <(LOCAL,exit_tmp2: manager_tmp0.__exit__.&lt;returnValue&gt;.&lt;member&gt;(__exit__))<SUB>14</SUB>> ]
"94489280529" [label = <(LOCAL,value_tmp3: ANY)<SUB>14</SUB>> ]
"94489280530" [label = <(LOCAL,__exit__: ANY)<SUB>14</SUB>> ]
"94489280532" [label = <(LOCAL,tmp4: ANY)<SUB>16</SUB>> ]
"94489280533" [label = <(LOCAL,UuidType: ANY)<SUB>19</SUB>> ]
"94489280535" [label = <(LOCAL,tmp5: ANY)<SUB>19</SUB>> ]
"94489280536" [label = <(LOCAL,out: ANY)<SUB>20</SUB>> ]
"94489280537" [label = <(LOCAL,UuidType2: ANY)<SUB>26</SUB>> ]
"94489280539" [label = <(LOCAL,manager_tmp6: ANY)<SUB>25</SUB>> ]
"94489280540" [label = <(LOCAL,enter_tmp7: manager_tmp6.__enter__.&lt;returnValue&gt;.&lt;member&gt;(__enter__))<SUB>25</SUB>> ]
"94489280541" [label = <(LOCAL,exit_tmp8: manager_tmp6.__exit__.&lt;returnValue&gt;.&lt;member&gt;(__exit__))<SUB>25</SUB>> ]
"94489280542" [label = <(LOCAL,value_tmp9: ANY)<SUB>25</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771081"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771085"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "25769803780"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "25769803781"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771120"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "30064771124"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "30064771128"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "25769803785"  [ label = "AST: "] 
  "25769803777" -> "94489280527"  [ label = "AST: "] 
  "25769803777" -> "94489280528"  [ label = "AST: "] 
  "25769803777" -> "94489280529"  [ label = "AST: "] 
  "25769803777" -> "94489280530"  [ label = "AST: "] 
  "25769803777" -> "94489280532"  [ label = "AST: "] 
  "25769803777" -> "94489280533"  [ label = "AST: "] 
  "25769803777" -> "94489280535"  [ label = "AST: "] 
  "25769803777" -> "94489280536"  [ label = "AST: "] 
  "25769803777" -> "94489280537"  [ label = "AST: "] 
  "25769803777" -> "94489280539"  [ label = "AST: "] 
  "25769803777" -> "94489280540"  [ label = "AST: "] 
  "25769803777" -> "94489280541"  [ label = "AST: "] 
  "25769803777" -> "94489280542"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771075"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771072"  [ label = "AST: "] 
  "30064771076" -> "30064771074"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "55834574849"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771072" -> "90194313217"  [ label = "AST: "] 
  "30064771072" -> "90194313218"  [ label = "AST: "] 
  "30064771074" -> "30064771073"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "30064771078"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "55834574850"  [ label = "AST: "] 
  "30064771078" -> "68719476742"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "30064771082"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "55834574851"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "90194313219"  [ label = "AST: "] 
  "30064771086" -> "90194313220"  [ label = "AST: "] 
  "30064771086" -> "90194313221"  [ label = "AST: "] 
  "30064771086" -> "90194313222"  [ label = "AST: "] 
  "30064771086" -> "90194313223"  [ label = "AST: "] 
  "25769803780" -> "30064771093"  [ label = "AST: "] 
  "25769803780" -> "30064771095"  [ label = "AST: "] 
  "25769803780" -> "30064771097"  [ label = "AST: "] 
  "25769803780" -> "30064771099"  [ label = "AST: "] 
  "25769803780" -> "47244640256"  [ label = "AST: "] 
  "30064771093" -> "68719476756"  [ label = "AST: "] 
  "30064771093" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771092" -> "68719476755"  [ label = "AST: "] 
  "30064771092" -> "68719476752"  [ label = "AST: "] 
  "30064771092" -> "68719476753"  [ label = "AST: "] 
  "30064771091" -> "68719476754"  [ label = "AST: "] 
  "30064771091" -> "55834574853"  [ label = "AST: "] 
  "30064771095" -> "68719476758"  [ label = "AST: "] 
  "30064771095" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "68719476757"  [ label = "AST: "] 
  "30064771094" -> "55834574854"  [ label = "AST: "] 
  "30064771097" -> "68719476760"  [ label = "AST: "] 
  "30064771097" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "68719476759"  [ label = "AST: "] 
  "30064771096" -> "55834574855"  [ label = "AST: "] 
  "30064771099" -> "68719476763"  [ label = "AST: "] 
  "30064771099" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476761"  [ label = "AST: "] 
  "30064771098" -> "68719476762"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771090" -> "68719476751"  [ label = "AST: "] 
  "30064771090" -> "30064771088"  [ label = "AST: "] 
  "30064771089" -> "68719476750"  [ label = "AST: "] 
  "30064771089" -> "55834574852"  [ label = "AST: "] 
  "30064771088" -> "68719476749"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476764"  [ label = "AST: "] 
  "30064771100" -> "68719476765"  [ label = "AST: "] 
  "25769803781" -> "30064771106"  [ label = "AST: "] 
  "25769803781" -> "30064771108"  [ label = "AST: "] 
  "30064771106" -> "68719476771"  [ label = "AST: "] 
  "30064771106" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "30064771104"  [ label = "AST: "] 
  "30064771105" -> "68719476770"  [ label = "AST: "] 
  "30064771105" -> "30064771103"  [ label = "AST: "] 
  "30064771104" -> "68719476769"  [ label = "AST: "] 
  "30064771104" -> "55834574857"  [ label = "AST: "] 
  "30064771103" -> "30064771102"  [ label = "AST: "] 
  "30064771103" -> "68719476768"  [ label = "AST: "] 
  "30064771102" -> "68719476767"  [ label = "AST: "] 
  "30064771102" -> "55834574856"  [ label = "AST: "] 
  "30064771108" -> "30064771107"  [ label = "AST: "] 
  "30064771108" -> "68719476773"  [ label = "AST: "] 
  "30064771108" -> "30064771101"  [ label = "AST: "] 
  "30064771107" -> "68719476772"  [ label = "AST: "] 
  "30064771107" -> "55834574858"  [ label = "AST: "] 
  "30064771101" -> "68719476766"  [ label = "AST: "] 
  "30064771120" -> "68719476782"  [ label = "AST: "] 
  "30064771120" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "30064771117"  [ label = "AST: "] 
  "25769803782" -> "30064771119"  [ label = "AST: "] 
  "30064771117" -> "68719476779"  [ label = "AST: "] 
  "30064771117" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "30064771115"  [ label = "AST: "] 
  "30064771116" -> "68719476778"  [ label = "AST: "] 
  "30064771116" -> "30064771112"  [ label = "AST: "] 
  "30064771116" -> "30064771114"  [ label = "AST: "] 
  "30064771115" -> "68719476777"  [ label = "AST: "] 
  "30064771115" -> "55834574860"  [ label = "AST: "] 
  "30064771112" -> "30064771110"  [ label = "AST: "] 
  "30064771112" -> "30064771111"  [ label = "AST: "] 
  "30064771110" -> "90194313224"  [ label = "AST: "] 
  "30064771110" -> "90194313225"  [ label = "AST: "] 
  "30064771111" -> "90194313226"  [ label = "AST: "] 
  "30064771111" -> "90194313227"  [ label = "AST: "] 
  "30064771114" -> "30064771113"  [ label = "AST: "] 
  "30064771114" -> "68719476776"  [ label = "AST: "] 
  "30064771114" -> "90194313228"  [ label = "AST: "] 
  "30064771113" -> "68719476775"  [ label = "AST: "] 
  "30064771113" -> "55834574859"  [ label = "AST: "] 
  "30064771119" -> "30064771118"  [ label = "AST: "] 
  "30064771119" -> "68719476781"  [ label = "AST: "] 
  "30064771119" -> "30064771109"  [ label = "AST: "] 
  "30064771118" -> "68719476780"  [ label = "AST: "] 
  "30064771118" -> "55834574861"  [ label = "AST: "] 
  "30064771109" -> "68719476774"  [ label = "AST: "] 
  "30064771124" -> "68719476786"  [ label = "AST: "] 
  "30064771124" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "30064771122"  [ label = "AST: "] 
  "30064771123" -> "68719476785"  [ label = "AST: "] 
  "30064771123" -> "30064771121"  [ label = "AST: "] 
  "30064771122" -> "68719476784"  [ label = "AST: "] 
  "30064771122" -> "55834574862"  [ label = "AST: "] 
  "30064771121" -> "68719476783"  [ label = "AST: "] 
  "30064771128" -> "30064771127"  [ label = "AST: "] 
  "30064771127" -> "30064771125"  [ label = "AST: "] 
  "30064771127" -> "30064771126"  [ label = "AST: "] 
  "30064771125" -> "68719476787"  [ label = "AST: "] 
  "30064771125" -> "55834574863"  [ label = "AST: "] 
  "30064771126" -> "68719476788"  [ label = "AST: "] 
  "25769803785" -> "30064771134"  [ label = "AST: "] 
  "25769803785" -> "30064771136"  [ label = "AST: "] 
  "25769803785" -> "30064771138"  [ label = "AST: "] 
  "25769803785" -> "30064771140"  [ label = "AST: "] 
  "25769803785" -> "47244640258"  [ label = "AST: "] 
  "30064771134" -> "68719476795"  [ label = "AST: "] 
  "30064771134" -> "30064771133"  [ label = "AST: "] 
  "30064771133" -> "30064771132"  [ label = "AST: "] 
  "30064771133" -> "68719476794"  [ label = "AST: "] 
  "30064771133" -> "68719476792"  [ label = "AST: "] 
  "30064771133" -> "90194313229"  [ label = "AST: "] 
  "30064771132" -> "68719476793"  [ label = "AST: "] 
  "30064771132" -> "55834574865"  [ label = "AST: "] 
  "30064771136" -> "68719476797"  [ label = "AST: "] 
  "30064771136" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "68719476796"  [ label = "AST: "] 
  "30064771135" -> "55834574866"  [ label = "AST: "] 
  "30064771138" -> "68719476799"  [ label = "AST: "] 
  "30064771138" -> "30064771137"  [ label = "AST: "] 
  "30064771137" -> "68719476798"  [ label = "AST: "] 
  "30064771137" -> "55834574867"  [ label = "AST: "] 
  "30064771140" -> "68719476802"  [ label = "AST: "] 
  "30064771140" -> "30064771139"  [ label = "AST: "] 
  "30064771139" -> "68719476800"  [ label = "AST: "] 
  "30064771139" -> "68719476801"  [ label = "AST: "] 
  "47244640258" -> "25769803783"  [ label = "AST: "] 
  "47244640258" -> "47244640259"  [ label = "AST: "] 
  "25769803783" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "30064771130"  [ label = "AST: "] 
  "30064771131" -> "68719476791"  [ label = "AST: "] 
  "30064771131" -> "30064771129"  [ label = "AST: "] 
  "30064771130" -> "68719476790"  [ label = "AST: "] 
  "30064771130" -> "55834574864"  [ label = "AST: "] 
  "30064771129" -> "68719476789"  [ label = "AST: "] 
  "47244640259" -> "25769803784"  [ label = "AST: "] 
  "25769803784" -> "30064771141"  [ label = "AST: "] 
  "30064771141" -> "68719476803"  [ label = "AST: "] 
  "30064771141" -> "68719476804"  [ label = "AST: "] 
  "30064771077" -> "55834574850"  [ label = "CFG: "] 
  "30064771081" -> "55834574851"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771087" -> "55834574853"  [ label = "CFG: "] 
  "30064771120" -> "55834574862"  [ label = "CFG: "] 
  "30064771124" -> "55834574863"  [ label = "CFG: "] 
  "30064771128" -> "55834574865"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771093" -> "55834574854"  [ label = "CFG: "] 
  "30064771095" -> "55834574855"  [ label = "CFG: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771099" -> "55834574852"  [ label = "CFG: "] 
  "30064771106" -> "55834574858"  [ label = "CFG: "] 
  "30064771108" -> "55834574860"  [ label = "CFG: "] 
  "30064771123" -> "30064771124"  [ label = "CFG: "] 
  "30064771127" -> "30064771128"  [ label = "CFG: "] 
  "30064771134" -> "55834574866"  [ label = "CFG: "] 
  "30064771136" -> "55834574867"  [ label = "CFG: "] 
  "30064771138" -> "30064771139"  [ label = "CFG: "] 
  "30064771140" -> "55834574864"  [ label = "CFG: "] 
  "30064771075" -> "30064771072"  [ label = "CFG: "] 
  "30064771072" -> "55834574848"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771078" -> "30064771080"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771105" -> "30064771106"  [ label = "CFG: "] 
  "30064771107" -> "30064771101"  [ label = "CFG: "] 
  "30064771101" -> "30064771108"  [ label = "CFG: "] 
  "30064771117" -> "55834574861"  [ label = "CFG: "] 
  "30064771119" -> "30064771120"  [ label = "CFG: "] 
  "30064771122" -> "30064771121"  [ label = "CFG: "] 
  "30064771121" -> "30064771123"  [ label = "CFG: "] 
  "30064771125" -> "30064771126"  [ label = "CFG: "] 
  "30064771126" -> "30064771127"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "30064771135" -> "30064771136"  [ label = "CFG: "] 
  "30064771137" -> "30064771138"  [ label = "CFG: "] 
  "30064771139" -> "30064771140"  [ label = "CFG: "] 
  "55834574849" -> "30064771075"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "55834574850" -> "30064771079"  [ label = "CFG: "] 
  "55834574851" -> "30064771082"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "55834574854" -> "30064771094"  [ label = "CFG: "] 
  "55834574855" -> "30064771096"  [ label = "CFG: "] 
  "30064771090" -> "30064771100"  [ label = "CFG: "] 
  "30064771104" -> "55834574856"  [ label = "CFG: "] 
  "30064771103" -> "30064771105"  [ label = "CFG: "] 
  "55834574858" -> "30064771107"  [ label = "CFG: "] 
  "30064771116" -> "30064771117"  [ label = "CFG: "] 
  "30064771118" -> "30064771109"  [ label = "CFG: "] 
  "30064771109" -> "30064771119"  [ label = "CFG: "] 
  "55834574862" -> "30064771122"  [ label = "CFG: "] 
  "55834574863" -> "30064771125"  [ label = "CFG: "] 
  "30064771132" -> "30064771133"  [ label = "CFG: "] 
  "55834574866" -> "30064771135"  [ label = "CFG: "] 
  "55834574867" -> "30064771137"  [ label = "CFG: "] 
  "30064771131" -> "30064771141"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "55834574853" -> "30064771091"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771090"  [ label = "CFG: "] 
  "30064771100" -> "30064771100"  [ label = "CFG: "] 
  "30064771100" -> "55834574857"  [ label = "CFG: "] 
  "55834574857" -> "30064771104"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771115" -> "30064771110"  [ label = "CFG: "] 
  "30064771112" -> "55834574859"  [ label = "CFG: "] 
  "30064771114" -> "30064771116"  [ label = "CFG: "] 
  "55834574861" -> "30064771118"  [ label = "CFG: "] 
  "55834574865" -> "30064771132"  [ label = "CFG: "] 
  "30064771130" -> "30064771129"  [ label = "CFG: "] 
  "30064771129" -> "30064771131"  [ label = "CFG: "] 
  "30064771141" -> "30064771141"  [ label = "CFG: "] 
  "30064771141" -> "128849018881"  [ label = "CFG: "] 
  "55834574852" -> "30064771089"  [ label = "CFG: "] 
  "55834574856" -> "30064771102"  [ label = "CFG: "] 
  "55834574860" -> "30064771115"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771111" -> "30064771112"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "55834574864" -> "30064771130"  [ label = "CFG: "] 
  "55834574859" -> "30064771113"  [ label = "CFG: "] 
  "111669149697" -> "55834574849"  [ label = "CFG: "] 
  "30064771076" -> "128849018881"  [ label = "DDG: [1, 2, 3]"] 
  "30064771076" -> "128849018881"  [ label = "DDG: pa.int8()"] 
  "30064771077" -> "128849018881"  [ label = "DDG: pa.array([1, 2, 3], pa.int8())"] 
  "30064771077" -> "128849018881"  [ label = "DDG: array = pa.array([1, 2, 3], pa.int8())"] 
  "30064771081" -> "128849018881"  [ label = "DDG: array.cast(TinyIntType())"] 
  "30064771081" -> "128849018881"  [ label = "DDG: tiny_int_arr = array.cast(TinyIntType())"] 
  "30064771084" -> "128849018881"  [ label = "DDG: TinyIntType()"] 
  "30064771085" -> "128849018881"  [ label = "DDG: tiny_int_arr.type == TinyIntType()"] 
  "30064771085" -> "128849018881"  [ label = "DDG: assert tiny_int_arr.type == TinyIntType()"] 
  "30064771087" -> "128849018881"  [ label = "DDG: &quot;Casting from 'extension&lt;arrow.py_extension_type&lt;TinyIntType&gt;&gt;' &quot; &quot;to different extension type &quot; &quot;'extension&lt;arrow.py_extension_type&lt;IntegerType&gt;&gt;' not permitted. &quot; &quot;One can first cast to the storage type, &quot; &quot;then to the extension type.&quot;"] 
  "30064771087" -> "128849018881"  [ label = "DDG: msg = &quot;Casting from 'extension&lt;arrow.py_extension_type&lt;TinyIntType&gt;&gt;' &quot; &quot;to different extension type &quot; &quot;'extension&lt;arrow.py_extension_type&lt;IntegerType&gt;&gt;' not permitted. &quot; &quot;One can first cast to the storage type, &quot; &quot;then to the extension type.&quot;"] 
  "30064771092" -> "128849018881"  [ label = "DDG: msg"] 
  "30064771093" -> "128849018881"  [ label = "DDG: pytest.raises(TypeError, match = msg)"] 
  "30064771093" -> "128849018881"  [ label = "DDG: manager_tmp0 = pytest.raises(TypeError, match = msg)"] 
  "30064771095" -> "128849018881"  [ label = "DDG: enter_tmp1"] 
  "30064771095" -> "128849018881"  [ label = "DDG: enter_tmp1 = manager_tmp0.__enter__"] 
  "30064771097" -> "128849018881"  [ label = "DDG: exit_tmp2"] 
  "30064771097" -> "128849018881"  [ label = "DDG: exit_tmp2 = manager_tmp0.__exit__"] 
  "30064771099" -> "128849018881"  [ label = "DDG: value_tmp3"] 
  "30064771099" -> "128849018881"  [ label = "DDG: enter_tmp1()"] 
  "30064771099" -> "128849018881"  [ label = "DDG: value_tmp3 = enter_tmp1()"] 
  "30064771090" -> "128849018881"  [ label = "DDG: tiny_int_arr.cast(IntegerType())"] 
  "30064771100" -> "128849018881"  [ label = "DDG: manager_tmp0"] 
  "30064771105" -> "128849018881"  [ label = "DDG: tiny_int_arr"] 
  "30064771105" -> "128849018881"  [ label = "DDG: pa.int64()"] 
  "30064771106" -> "128849018881"  [ label = "DDG: tiny_int_arr.cast(pa.int64())"] 
  "30064771106" -> "128849018881"  [ label = "DDG: tmp4 = tiny_int_arr.cast(pa.int64())"] 
  "30064771108" -> "128849018881"  [ label = "DDG: tmp4"] 
  "30064771108" -> "128849018881"  [ label = "DDG: IntegerType()"] 
  "30064771108" -> "128849018881"  [ label = "DDG: tmp4.cast(IntegerType())"] 
  "30064771116" -> "128849018881"  [ label = "DDG: pa"] 
  "30064771112" -> "128849018881"  [ label = "DDG: b'1' * 16"] 
  "30064771112" -> "128849018881"  [ label = "DDG: b'2' * 16"] 
  "30064771116" -> "128849018881"  [ label = "DDG: [b'1' * 16, b'2' * 16]"] 
  "30064771116" -> "128849018881"  [ label = "DDG: pa.binary(16)"] 
  "30064771117" -> "128849018881"  [ label = "DDG: pa.array([b'1' * 16, b'2' * 16], pa.binary(16))"] 
  "30064771117" -> "128849018881"  [ label = "DDG: tmp5 = pa.array([b'1' * 16, b'2' * 16], pa.binary(16))"] 
  "30064771119" -> "128849018881"  [ label = "DDG: tmp5"] 
  "30064771119" -> "128849018881"  [ label = "DDG: tmp5.cast(UuidType())"] 
  "30064771120" -> "128849018881"  [ label = "DDG: array = tmp5 = pa.array([b'1' * 16, b'2' * 16], pa.binary(16))
tmp5.cast(UuidType())"] 
  "30064771124" -> "128849018881"  [ label = "DDG: out"] 
  "30064771124" -> "128849018881"  [ label = "DDG: array.cast(UuidType())"] 
  "30064771124" -> "128849018881"  [ label = "DDG: out = array.cast(UuidType())"] 
  "30064771127" -> "128849018881"  [ label = "DDG: out.type"] 
  "30064771127" -> "128849018881"  [ label = "DDG: UuidType()"] 
  "30064771128" -> "128849018881"  [ label = "DDG: out.type == UuidType()"] 
  "30064771128" -> "128849018881"  [ label = "DDG: assert out.type == UuidType()"] 
  "30064771133" -> "128849018881"  [ label = "DDG: pytest"] 
  "30064771133" -> "128849018881"  [ label = "DDG: TypeError"] 
  "30064771134" -> "128849018881"  [ label = "DDG: pytest.raises(TypeError, match = 'Casting from *')"] 
  "30064771134" -> "128849018881"  [ label = "DDG: manager_tmp6 = pytest.raises(TypeError, match = 'Casting from *')"] 
  "30064771136" -> "128849018881"  [ label = "DDG: enter_tmp7"] 
  "30064771136" -> "128849018881"  [ label = "DDG: enter_tmp7 = manager_tmp6.__enter__"] 
  "30064771138" -> "128849018881"  [ label = "DDG: exit_tmp8"] 
  "30064771138" -> "128849018881"  [ label = "DDG: exit_tmp8 = manager_tmp6.__exit__"] 
  "30064771140" -> "128849018881"  [ label = "DDG: value_tmp9"] 
  "30064771140" -> "128849018881"  [ label = "DDG: enter_tmp7()"] 
  "30064771140" -> "128849018881"  [ label = "DDG: value_tmp9 = enter_tmp7()"] 
  "30064771131" -> "128849018881"  [ label = "DDG: array"] 
  "30064771131" -> "128849018881"  [ label = "DDG: UuidType2()"] 
  "30064771131" -> "128849018881"  [ label = "DDG: array.cast(UuidType2())"] 
  "30064771141" -> "128849018881"  [ label = "DDG: manager_tmp6"] 
  "30064771141" -> "128849018881"  [ label = "DDG: __exit__()"] 
  "30064771076" -> "30064771077"  [ label = "DDG: pa"] 
  "30064771076" -> "30064771077"  [ label = "DDG: [1, 2, 3]"] 
  "30064771076" -> "30064771077"  [ label = "DDG: pa.int8()"] 
  "30064771080" -> "30064771081"  [ label = "DDG: array"] 
  "30064771080" -> "30064771081"  [ label = "DDG: TinyIntType()"] 
  "30064771086" -> "30064771087"  [ label = "DDG: &quot;Casting from 'extension&lt;arrow.py_extension_type&lt;TinyIntType&gt;&gt;' &quot;"] 
  "30064771086" -> "30064771087"  [ label = "DDG: &quot;then to the extension type.&quot;"] 
  "30064771086" -> "30064771087"  [ label = "DDG: &quot;to different extension type &quot;"] 
  "30064771086" -> "30064771087"  [ label = "DDG: &quot;'extension&lt;arrow.py_extension_type&lt;IntegerType&gt;&gt;' not permitted. &quot;"] 
  "30064771086" -> "30064771087"  [ label = "DDG: &quot;One can first cast to the storage type, &quot;"] 
  "111669149697" -> "25769803780"  [ label = "DDG: "] 
  "111669149697" -> "25769803781"  [ label = "DDG: "] 
  "30064771119" -> "30064771120"  [ label = "DDG: tmp5.cast(UuidType())"] 
  "111669149697" -> "30064771120"  [ label = "DDG: "] 
  "30064771123" -> "30064771124"  [ label = "DDG: array"] 
  "30064771123" -> "30064771124"  [ label = "DDG: UuidType()"] 
  "111669149697" -> "25769803785"  [ label = "DDG: "] 
  "30064771084" -> "30064771085"  [ label = "DDG: tiny_int_arr.type"] 
  "30064771084" -> "30064771085"  [ label = "DDG: TinyIntType()"] 
  "30064771092" -> "30064771093"  [ label = "DDG: pytest"] 
  "30064771092" -> "30064771093"  [ label = "DDG: TypeError"] 
  "30064771092" -> "30064771093"  [ label = "DDG: msg"] 
  "30064771093" -> "30064771095"  [ label = "DDG: manager_tmp0"] 
  "30064771093" -> "30064771097"  [ label = "DDG: manager_tmp0"] 
  "30064771098" -> "30064771099"  [ label = "DDG: manager_tmp0"] 
  "30064771105" -> "30064771106"  [ label = "DDG: tiny_int_arr"] 
  "30064771105" -> "30064771106"  [ label = "DDG: pa.int64()"] 
  "30064771127" -> "30064771128"  [ label = "DDG: out.type"] 
  "30064771127" -> "30064771128"  [ label = "DDG: UuidType()"] 
  "30064771133" -> "30064771134"  [ label = "DDG: pytest"] 
  "30064771133" -> "30064771134"  [ label = "DDG: TypeError"] 
  "30064771133" -> "30064771134"  [ label = "DDG: 'Casting from *'"] 
  "30064771134" -> "30064771136"  [ label = "DDG: manager_tmp6"] 
  "30064771134" -> "30064771138"  [ label = "DDG: manager_tmp6"] 
  "30064771139" -> "30064771140"  [ label = "DDG: manager_tmp6"] 
  "30064771074" -> "30064771076"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "30064771072" -> "30064771076"  [ label = "DDG: 1"] 
  "30064771072" -> "30064771076"  [ label = "DDG: 2"] 
  "30064771072" -> "30064771076"  [ label = "DDG: 3"] 
  "30064771077" -> "30064771080"  [ label = "DDG: array"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771081" -> "30064771084"  [ label = "DDG: tiny_int_arr"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771106" -> "30064771108"  [ label = "DDG: tmp4"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771116" -> "30064771117"  [ label = "DDG: pa"] 
  "30064771116" -> "30064771117"  [ label = "DDG: [b'1' * 16, b'2' * 16]"] 
  "30064771116" -> "30064771117"  [ label = "DDG: pa.binary(16)"] 
  "30064771120" -> "30064771123"  [ label = "DDG: array"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771124" -> "30064771127"  [ label = "DDG: out"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "68719476742"  [ label = "DDG: "] 
  "111669149697" -> "68719476747"  [ label = "DDG: "] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771087" -> "30064771092"  [ label = "DDG: msg"] 
  "111669149697" -> "68719476761"  [ label = "DDG: "] 
  "30064771093" -> "30064771098"  [ label = "DDG: manager_tmp0"] 
  "111669149697" -> "30064771098"  [ label = "DDG: "] 
  "30064771090" -> "30064771105"  [ label = "DDG: tiny_int_arr"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771103" -> "30064771105"  [ label = "DDG: pa"] 
  "111669149697" -> "68719476766"  [ label = "DDG: "] 
  "30064771117" -> "30064771119"  [ label = "DDG: tmp5"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "111669149697" -> "68719476783"  [ label = "DDG: "] 
  "111669149697" -> "68719476788"  [ label = "DDG: "] 
  "30064771092" -> "30064771133"  [ label = "DDG: pytest"] 
  "111669149697" -> "30064771133"  [ label = "DDG: "] 
  "30064771092" -> "30064771133"  [ label = "DDG: TypeError"] 
  "111669149697" -> "68719476800"  [ label = "DDG: "] 
  "30064771134" -> "30064771139"  [ label = "DDG: manager_tmp6"] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771081" -> "30064771090"  [ label = "DDG: tiny_int_arr"] 
  "30064771084" -> "30064771090"  [ label = "DDG: tiny_int_arr.type"] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771076" -> "30064771103"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771114" -> "30064771116"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771112" -> "30064771116"  [ label = "DDG: b'1' * 16"] 
  "30064771112" -> "30064771116"  [ label = "DDG: b'2' * 16"] 
  "30064771114" -> "30064771116"  [ label = "DDG: 16"] 
  "111669149697" -> "68719476774"  [ label = "DDG: "] 
  "30064771123" -> "30064771131"  [ label = "DDG: array"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "111669149697" -> "68719476749"  [ label = "DDG: "] 
  "111669149697" -> "68719476764"  [ label = "DDG: "] 
  "30064771098" -> "30064771100"  [ label = "DDG: manager_tmp0"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771110" -> "30064771112"  [ label = "DDG: b'1'"] 
  "30064771110" -> "30064771112"  [ label = "DDG: 16"] 
  "30064771111" -> "30064771112"  [ label = "DDG: b'2'"] 
  "30064771111" -> "30064771112"  [ label = "DDG: 16"] 
  "30064771103" -> "30064771114"  [ label = "DDG: pa"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "111669149697" -> "68719476789"  [ label = "DDG: "] 
  "111669149697" -> "68719476803"  [ label = "DDG: "] 
  "30064771139" -> "30064771141"  [ label = "DDG: manager_tmp6"] 
  "111669149697" -> "30064771141"  [ label = "DDG: "] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771100" -> "30064771100"  [ label = "CDG: "] 
  "30064771141" -> "30064771141"  [ label = "CDG: "] 
}
"""
)
