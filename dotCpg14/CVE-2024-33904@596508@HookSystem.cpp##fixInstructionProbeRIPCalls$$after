[33mval[0m [36mres473[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "fixInstructionProbeRIPCalls" {  
"111669149697" [label = <(METHOD,fixInstructionProbeRIPCalls)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,const SInstructionProbe&amp; probe)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    SAssembly returns;

    // analyze the co...,{
    SAssembly returns;

    // analyze the co...)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,SAssembly returns: SAssembly)<SUB>2</SUB>> ]
"94489280513" [label = <(LOCAL,uint64_t currentAddress: uint64_t)<SUB>5</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,currentAddress = (uint64_t)m_pSource)<SUB>5</SUB>> ]
"68719476736" [label = <(IDENTIFIER,currentAddress,currentAddress = (uint64_t)m_pSource)<SUB>5</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.cast,(uint64_t)m_pSource)<SUB>5</SUB>> ]
"184683593728" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>5</SUB>> ]
"68719476737" [label = <(IDENTIFIER,m_pSource,(uint64_t)m_pSource)<SUB>5</SUB>> ]
"94489280514" [label = <(LOCAL,size_t lastAsmNewline: size_t)<SUB>7</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,lastAsmNewline = 0)<SUB>7</SUB>> ]
"68719476738" [label = <(IDENTIFIER,lastAsmNewline,lastAsmNewline = 0)<SUB>7</SUB>> ]
"90194313216" [label = <(LITERAL,0,lastAsmNewline = 0)<SUB>7</SUB>> ]
"94489280515" [label = <(LOCAL,size_t currentDestinationOffset: size_t)<SUB>9</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,currentDestinationOffset = 0)<SUB>9</SUB>> ]
"68719476739" [label = <(IDENTIFIER,currentDestinationOffset,currentDestinationOffset = 0)<SUB>9</SUB>> ]
"90194313217" [label = <(LITERAL,0,currentDestinationOffset = 0)<SUB>9</SUB>> ]
"94489280516" [label = <(LOCAL,std.string assemblyBuilder: std.string)<SUB>10</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,FOR,for (auto&amp; len:probe.insSizes))<SUB>11</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,probe.insSizes)<SUB>11</SUB>> ]
"68719476740" [label = <(IDENTIFIER,probe,for (auto&amp; len:probe.insSizes))<SUB>11</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,insSizes,insSizes)<SUB>11</SUB>> ]
"94489280517" [label = <(LOCAL,auto&amp; len: auto&amp;)<SUB>11</SUB>> ]
"25769803778" [label = <(BLOCK,{

        std::string code = probe.assembly.su...,{

        std::string code = probe.assembly.su...)<SUB>11</SUB>> ]
"94489280518" [label = <(LOCAL,std.string code: std.string)<SUB>13</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,code = probe.assembly.substr(lastAsmNewline, pr...)<SUB>13</SUB>> ]
"68719476741" [label = <(IDENTIFIER,code,code = probe.assembly.substr(lastAsmNewline, pr...)<SUB>13</SUB>> ]
"30064771078" [label = <(substr,probe.assembly.substr(lastAsmNewline, probe.ass...)<SUB>13</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.fieldAccess,probe.assembly)<SUB>13</SUB>> ]
"68719476742" [label = <(IDENTIFIER,probe,probe.assembly.substr(lastAsmNewline, probe.ass...)<SUB>13</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,assembly,assembly)<SUB>13</SUB>> ]
"68719476743" [label = <(IDENTIFIER,lastAsmNewline,probe.assembly.substr(lastAsmNewline, probe.ass...)<SUB>13</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.subtraction,probe.assembly.find(&quot;\n&quot;, lastAsmNewline) - las...)<SUB>13</SUB>> ]
"30064771081" [label = <(find,probe.assembly.find(&quot;\n&quot;, lastAsmNewline))<SUB>13</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.fieldAccess,probe.assembly)<SUB>13</SUB>> ]
"68719476744" [label = <(IDENTIFIER,probe,probe.assembly.find(&quot;\n&quot;, lastAsmNewline))<SUB>13</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,assembly,assembly)<SUB>13</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;\n&quot;,probe.assembly.find(&quot;\n&quot;, lastAsmNewline))<SUB>13</SUB>> ]
"68719476745" [label = <(IDENTIFIER,lastAsmNewline,probe.assembly.find(&quot;\n&quot;, lastAsmNewline))<SUB>13</SUB>> ]
"68719476746" [label = <(IDENTIFIER,lastAsmNewline,probe.assembly.find(&quot;\n&quot;, lastAsmNewline) - las...)<SUB>13</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (code.contains(&quot;%rip&quot;)))<SUB>14</SUB>> ]
"30064771083" [label = <(contains,code.contains(&quot;%rip&quot;))<SUB>14</SUB>> ]
"68719476747" [label = <(IDENTIFIER,code,code.contains(&quot;%rip&quot;))<SUB>14</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;%rip&quot;,code.contains(&quot;%rip&quot;))<SUB>14</SUB>> ]
"25769803779" [label = <(BLOCK,{
            CVarList       tokens{code, 0, 's...,{
            CVarList       tokens{code, 0, 's...)<SUB>14</SUB>> ]
"94489280519" [label = <(LOCAL,CVarList tokens: CVarList)<SUB>15</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,tokens{code, 0, 's'})<SUB>15</SUB>> ]
"68719476748" [label = <(IDENTIFIER,tokens,tokens{code, 0, 's'})<SUB>15</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.arrayInitializer,{code, 0, 's'})<SUB>15</SUB>> ]
"68719476749" [label = <(IDENTIFIER,code,{code, 0, 's'})<SUB>15</SUB>> ]
"90194313220" [label = <(LITERAL,0,{code, 0, 's'})<SUB>15</SUB>> ]
"90194313221" [label = <(LITERAL,'s',{code, 0, 's'})<SUB>15</SUB>> ]
"94489280520" [label = <(LOCAL,size_t plusPresent: size_t)<SUB>16</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.assignment,plusPresent  = tokens[1][0] == '+' ? 1 : 0)<SUB>16</SUB>> ]
"68719476750" [label = <(IDENTIFIER,plusPresent,plusPresent  = tokens[1][0] == '+' ? 1 : 0)<SUB>16</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.conditional,tokens[1][0] == '+' ? 1 : 0)<SUB>16</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.equals,tokens[1][0] == '+')<SUB>16</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.indirectIndexAccess,tokens[1][0])<SUB>16</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.indirectIndexAccess,tokens[1])<SUB>16</SUB>> ]
"68719476751" [label = <(IDENTIFIER,tokens,tokens[1][0] == '+')<SUB>16</SUB>> ]
"90194313222" [label = <(LITERAL,1,tokens[1][0] == '+')<SUB>16</SUB>> ]
"90194313223" [label = <(LITERAL,0,tokens[1][0] == '+')<SUB>16</SUB>> ]
"90194313224" [label = <(LITERAL,'+',tokens[1][0] == '+')<SUB>16</SUB>> ]
"90194313225" [label = <(LITERAL,1,tokens[1][0] == '+' ? 1 : 0)<SUB>16</SUB>> ]
"90194313226" [label = <(LITERAL,0,tokens[1][0] == '+' ? 1 : 0)<SUB>16</SUB>> ]
"94489280521" [label = <(LOCAL,size_t minusPresent: size_t)<SUB>17</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.assignment,minusPresent = tokens[1][0] == '-' ? 1 : 0)<SUB>17</SUB>> ]
"68719476752" [label = <(IDENTIFIER,minusPresent,minusPresent = tokens[1][0] == '-' ? 1 : 0)<SUB>17</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.conditional,tokens[1][0] == '-' ? 1 : 0)<SUB>17</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.equals,tokens[1][0] == '-')<SUB>17</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.indirectIndexAccess,tokens[1][0])<SUB>17</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.indirectIndexAccess,tokens[1])<SUB>17</SUB>> ]
"68719476753" [label = <(IDENTIFIER,tokens,tokens[1][0] == '-')<SUB>17</SUB>> ]
"90194313227" [label = <(LITERAL,1,tokens[1][0] == '-')<SUB>17</SUB>> ]
"90194313228" [label = <(LITERAL,0,tokens[1][0] == '-')<SUB>17</SUB>> ]
"90194313229" [label = <(LITERAL,'-',tokens[1][0] == '-')<SUB>17</SUB>> ]
"90194313230" [label = <(LITERAL,1,tokens[1][0] == '-' ? 1 : 0)<SUB>17</SUB>> ]
"90194313231" [label = <(LITERAL,0,tokens[1][0] == '-' ? 1 : 0)<SUB>17</SUB>> ]
"94489280522" [label = <(LOCAL,std.string addr: std.string)<SUB>18</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,addr         = tokens[1].substr((plusPresent ||...)<SUB>18</SUB>> ]
"68719476754" [label = <(IDENTIFIER,addr,addr         = tokens[1].substr((plusPresent ||...)<SUB>18</SUB>> ]
"30064771097" [label = <(substr,tokens[1].substr((plusPresent || minusPresent),...)<SUB>18</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.indirectIndexAccess,tokens[1])<SUB>18</SUB>> ]
"68719476755" [label = <(IDENTIFIER,tokens,tokens[1].substr((plusPresent || minusPresent),...)<SUB>18</SUB>> ]
"90194313232" [label = <(LITERAL,1,tokens[1].substr((plusPresent || minusPresent),...)<SUB>18</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.logicalOr,plusPresent || minusPresent)<SUB>18</SUB>> ]
"68719476756" [label = <(IDENTIFIER,plusPresent,plusPresent || minusPresent)<SUB>18</SUB>> ]
"68719476757" [label = <(IDENTIFIER,minusPresent,plusPresent || minusPresent)<SUB>18</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.subtraction,tokens[1].find(&quot;(%rip)&quot;) - (plusPresent || minu...)<SUB>18</SUB>> ]
"30064771101" [label = <(find,tokens[1].find(&quot;(%rip)&quot;))<SUB>18</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.indirectIndexAccess,tokens[1])<SUB>18</SUB>> ]
"68719476758" [label = <(IDENTIFIER,tokens,tokens[1].find(&quot;(%rip)&quot;))<SUB>18</SUB>> ]
"90194313233" [label = <(LITERAL,1,tokens[1].find(&quot;(%rip)&quot;))<SUB>18</SUB>> ]
"90194313234" [label = <(LITERAL,&quot;(%rip)&quot;,tokens[1].find(&quot;(%rip)&quot;))<SUB>18</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.logicalOr,plusPresent || minusPresent)<SUB>18</SUB>> ]
"68719476759" [label = <(IDENTIFIER,plusPresent,plusPresent || minusPresent)<SUB>18</SUB>> ]
"68719476760" [label = <(IDENTIFIER,minusPresent,plusPresent || minusPresent)<SUB>18</SUB>> ]
"94489280523" [label = <(LOCAL,const uint64_t OFFSET: uint64_t)<SUB>19</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.assignment,OFFSET       = (minusPresent ? -1 : 1) * config...)<SUB>19</SUB>> ]
"68719476761" [label = <(IDENTIFIER,OFFSET,OFFSET       = (minusPresent ? -1 : 1) * config...)<SUB>19</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.multiplication,(minusPresent ? -1 : 1) * configStringToInt(addr))<SUB>19</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.conditional,minusPresent ? -1 : 1)<SUB>19</SUB>> ]
"68719476762" [label = <(IDENTIFIER,minusPresent,minusPresent ? -1 : 1)<SUB>19</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.minus,-1)<SUB>19</SUB>> ]
"90194313235" [label = <(LITERAL,1,-1)<SUB>19</SUB>> ]
"90194313236" [label = <(LITERAL,1,minusPresent ? -1 : 1)<SUB>19</SUB>> ]
"30064771108" [label = <(configStringToInt,configStringToInt(addr))<SUB>19</SUB>> ]
"68719476763" [label = <(IDENTIFIER,addr,configStringToInt(addr))<SUB>19</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (OFFSET == 0))<SUB>20</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.equals,OFFSET == 0)<SUB>20</SUB>> ]
"68719476764" [label = <(IDENTIFIER,OFFSET,OFFSET == 0)<SUB>20</SUB>> ]
"90194313237" [label = <(LITERAL,0,OFFSET == 0)<SUB>20</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>> ]
"146028888064" [label = <(RETURN,return {};,return {};)<SUB>21</SUB>> ]
"94489280524" [label = <(LOCAL,const uint64_t DESTINATION: uint64_t)<SUB>22</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.assignment,DESTINATION = currentAddress + OFFSET + len)<SUB>22</SUB>> ]
"68719476765" [label = <(IDENTIFIER,DESTINATION,DESTINATION = currentAddress + OFFSET + len)<SUB>22</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.addition,currentAddress + OFFSET + len)<SUB>22</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.addition,currentAddress + OFFSET)<SUB>22</SUB>> ]
"68719476766" [label = <(IDENTIFIER,currentAddress,currentAddress + OFFSET)<SUB>22</SUB>> ]
"68719476767" [label = <(IDENTIFIER,OFFSET,currentAddress + OFFSET)<SUB>22</SUB>> ]
"68719476768" [label = <(IDENTIFIER,len,currentAddress + OFFSET + len)<SUB>22</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (code.starts_with(&quot;call&quot;)))<SUB>24</SUB>> ]
"30064771113" [label = <(starts_with,code.starts_with(&quot;call&quot;))<SUB>24</SUB>> ]
"68719476769" [label = <(IDENTIFIER,code,code.starts_with(&quot;call&quot;))<SUB>24</SUB>> ]
"90194313238" [label = <(LITERAL,&quot;call&quot;,code.starts_with(&quot;call&quot;))<SUB>24</SUB>> ]
"25769803781" [label = <(BLOCK,{
                // call +0xdeadbeef(%rip)
   ...,{
                // call +0xdeadbeef(%rip)
   ...)<SUB>24</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.assignmentPlus,assemblyBuilder += std::format(&quot;pushq %rax\nmov...)<SUB>26</SUB>> ]
"68719476770" [label = <(IDENTIFIER,assemblyBuilder,assemblyBuilder += std::format(&quot;pushq %rax\nmov...)<SUB>26</SUB>> ]
"30064771115" [label = <(format,std::format(&quot;pushq %rax\nmovabs $0x{:x}, %rax\n...)<SUB>26</SUB>> ]
"90194313239" [label = <(LITERAL,&quot;pushq %rax\nmovabs $0x{:x}, %rax\ncallq *%rax\...,std::format(&quot;pushq %rax\nmovabs $0x{:x}, %rax\n...)<SUB>26</SUB>> ]
"68719476771" [label = <(IDENTIFIER,DESTINATION,std::format(&quot;pushq %rax\nmovabs $0x{:x}, %rax\n...)<SUB>26</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.assignmentPlus,currentDestinationOffset += 14)<SUB>27</SUB>> ]
"68719476772" [label = <(IDENTIFIER,currentDestinationOffset,currentDestinationOffset += 14)<SUB>27</SUB>> ]
"90194313240" [label = <(LITERAL,14,currentDestinationOffset += 14)<SUB>27</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>28</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (code.starts_with(&quot;lea&quot;)))<SUB>28</SUB>> ]
"30064771117" [label = <(starts_with,code.starts_with(&quot;lea&quot;))<SUB>28</SUB>> ]
"68719476773" [label = <(IDENTIFIER,code,code.starts_with(&quot;lea&quot;))<SUB>28</SUB>> ]
"90194313241" [label = <(LITERAL,&quot;lea&quot;,code.starts_with(&quot;lea&quot;))<SUB>28</SUB>> ]
"25769803783" [label = <(BLOCK,{
                // lea 0xdeadbeef(%rip), %rax...,{
                // lea 0xdeadbeef(%rip), %rax...)<SUB>28</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.assignmentPlus,assemblyBuilder += std::format(&quot;movabs $0x{:x},...)<SUB>30</SUB>> ]
"68719476774" [label = <(IDENTIFIER,assemblyBuilder,assemblyBuilder += std::format(&quot;movabs $0x{:x},...)<SUB>30</SUB>> ]
"30064771119" [label = <(format,std::format(&quot;movabs $0x{:x}, {}\n&quot;, DESTINATION...)<SUB>30</SUB>> ]
"90194313242" [label = <(LITERAL,&quot;movabs $0x{:x}, {}\n&quot;,std::format(&quot;movabs $0x{:x}, {}\n&quot;, DESTINATION...)<SUB>30</SUB>> ]
"68719476775" [label = <(IDENTIFIER,DESTINATION,std::format(&quot;movabs $0x{:x}, {}\n&quot;, DESTINATION...)<SUB>30</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.indirectIndexAccess,tokens[2])<SUB>30</SUB>> ]
"68719476776" [label = <(IDENTIFIER,tokens,std::format(&quot;movabs $0x{:x}, {}\n&quot;, DESTINATION...)<SUB>30</SUB>> ]
"90194313243" [label = <(LITERAL,2,std::format(&quot;movabs $0x{:x}, {}\n&quot;, DESTINATION...)<SUB>30</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.assignmentPlus,currentDestinationOffset += 10)<SUB>31</SUB>> ]
"68719476777" [label = <(IDENTIFIER,currentDestinationOffset,currentDestinationOffset += 10)<SUB>31</SUB>> ]
"90194313244" [label = <(LITERAL,10,currentDestinationOffset += 10)<SUB>31</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>32</SUB>> ]
"25769803784" [label = <(BLOCK,{
                auto ADDREND   = code.find(&quot;(...,{
                auto ADDREND   = code.find(&quot;(...)<SUB>32</SUB>> ]
"94489280525" [label = <(LOCAL,auto ADDREND: auto)<SUB>33</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.assignment,ADDREND   = code.find(&quot;(%rip)&quot;))<SUB>33</SUB>> ]
"68719476778" [label = <(IDENTIFIER,ADDREND,ADDREND   = code.find(&quot;(%rip)&quot;))<SUB>33</SUB>> ]
"30064771123" [label = <(find,code.find(&quot;(%rip)&quot;))<SUB>33</SUB>> ]
"68719476779" [label = <(IDENTIFIER,code,code.find(&quot;(%rip)&quot;))<SUB>33</SUB>> ]
"90194313245" [label = <(LITERAL,&quot;(%rip)&quot;,code.find(&quot;(%rip)&quot;))<SUB>33</SUB>> ]
"94489280526" [label = <(LOCAL,auto ADDRSTART: auto)<SUB>34</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assignment,ADDRSTART = (code.substr(0, ADDREND).find_last_...)<SUB>34</SUB>> ]
"68719476780" [label = <(IDENTIFIER,ADDRSTART,ADDRSTART = (code.substr(0, ADDREND).find_last_...)<SUB>34</SUB>> ]
"30064771125" [label = <(find_last_of,code.substr(0, ADDREND).find_last_of(' '))<SUB>34</SUB>> ]
"30064771126" [label = <(substr,code.substr(0, ADDREND))<SUB>34</SUB>> ]
"68719476781" [label = <(IDENTIFIER,code,code.substr(0, ADDREND))<SUB>34</SUB>> ]
"90194313246" [label = <(LITERAL,0,code.substr(0, ADDREND))<SUB>34</SUB>> ]
"68719476782" [label = <(IDENTIFIER,ADDREND,code.substr(0, ADDREND))<SUB>34</SUB>> ]
"90194313247" [label = <(LITERAL,' ',code.substr(0, ADDREND).find_last_of(' '))<SUB>34</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,IF,if (ADDREND == std::string::npos || ADDRSTART == std::string::npos))<SUB>36</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.logicalOr,ADDREND == std::string::npos || ADDRSTART == st...)<SUB>36</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.equals,ADDREND == std::string::npos)<SUB>36</SUB>> ]
"68719476783" [label = <(IDENTIFIER,ADDREND,ADDREND == std::string::npos)<SUB>36</SUB>> ]
"30064771129" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>36</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>36</SUB>> ]
"68719476784" [label = <(IDENTIFIER,std,ADDREND == std::string::npos)<SUB>36</SUB>> ]
"68719476785" [label = <(IDENTIFIER,string,ADDREND == std::string::npos)<SUB>36</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>36</SUB>> ]
"30064771131" [label = <(&lt;operator&gt;.equals,ADDRSTART == std::string::npos)<SUB>36</SUB>> ]
"68719476786" [label = <(IDENTIFIER,ADDRSTART,ADDRSTART == std::string::npos)<SUB>36</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>36</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>36</SUB>> ]
"68719476787" [label = <(IDENTIFIER,std,ADDRSTART == std::string::npos)<SUB>36</SUB>> ]
"68719476788" [label = <(IDENTIFIER,string,ADDRSTART == std::string::npos)<SUB>36</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>36</SUB>> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>> ]
"146028888065" [label = <(RETURN,return {};,return {};)<SUB>37</SUB>> ]
"94489280527" [label = <(LOCAL,const uint64_t PREDICTEDRIP: uint64_t)<SUB>39</SUB>> ]
"30064771134" [label = <(&lt;operator&gt;.assignment,PREDICTEDRIP = (uint64_t)m_pTrampolineAddr + cu...)<SUB>39</SUB>> ]
"68719476789" [label = <(IDENTIFIER,PREDICTEDRIP,PREDICTEDRIP = (uint64_t)m_pTrampolineAddr + cu...)<SUB>39</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.addition,(uint64_t)m_pTrampolineAddr + currentDestinatio...)<SUB>39</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.addition,(uint64_t)m_pTrampolineAddr + currentDestinatio...)<SUB>39</SUB>> ]
"30064771137" [label = <(&lt;operator&gt;.cast,(uint64_t)m_pTrampolineAddr)<SUB>39</SUB>> ]
"184683593729" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>39</SUB>> ]
"68719476790" [label = <(IDENTIFIER,m_pTrampolineAddr,(uint64_t)m_pTrampolineAddr)<SUB>39</SUB>> ]
"68719476791" [label = <(IDENTIFIER,currentDestinationOffset,(uint64_t)m_pTrampolineAddr + currentDestinatio...)<SUB>39</SUB>> ]
"68719476792" [label = <(IDENTIFIER,len,(uint64_t)m_pTrampolineAddr + currentDestinatio...)<SUB>39</SUB>> ]
"94489280528" [label = <(LOCAL,const bool POSITIVE: bool)<SUB>40</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.assignment,POSITIVE     = DESTINATION &gt; PREDICTEDRIP)<SUB>40</SUB>> ]
"68719476793" [label = <(IDENTIFIER,POSITIVE,POSITIVE     = DESTINATION &gt; PREDICTEDRIP)<SUB>40</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.greaterThan,DESTINATION &gt; PREDICTEDRIP)<SUB>40</SUB>> ]
"68719476794" [label = <(IDENTIFIER,DESTINATION,DESTINATION &gt; PREDICTEDRIP)<SUB>40</SUB>> ]
"68719476795" [label = <(IDENTIFIER,PREDICTEDRIP,DESTINATION &gt; PREDICTEDRIP)<SUB>40</SUB>> ]
"94489280529" [label = <(LOCAL,const uint64_t NEWRIPOFFSET: uint64_t)<SUB>41</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.assignment,NEWRIPOFFSET = POSITIVE ? DESTINATION - PREDICT...)<SUB>41</SUB>> ]
"68719476796" [label = <(IDENTIFIER,NEWRIPOFFSET,NEWRIPOFFSET = POSITIVE ? DESTINATION - PREDICT...)<SUB>41</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.conditional,POSITIVE ? DESTINATION - PREDICTEDRIP : PREDICT...)<SUB>41</SUB>> ]
"68719476797" [label = <(IDENTIFIER,POSITIVE,POSITIVE ? DESTINATION - PREDICTEDRIP : PREDICT...)<SUB>41</SUB>> ]
"30064771142" [label = <(&lt;operator&gt;.subtraction,DESTINATION - PREDICTEDRIP)<SUB>41</SUB>> ]
"68719476798" [label = <(IDENTIFIER,DESTINATION,DESTINATION - PREDICTEDRIP)<SUB>41</SUB>> ]
"68719476799" [label = <(IDENTIFIER,PREDICTEDRIP,DESTINATION - PREDICTEDRIP)<SUB>41</SUB>> ]
"30064771143" [label = <(&lt;operator&gt;.subtraction,PREDICTEDRIP - DESTINATION)<SUB>41</SUB>> ]
"68719476800" [label = <(IDENTIFIER,PREDICTEDRIP,PREDICTEDRIP - DESTINATION)<SUB>41</SUB>> ]
"68719476801" [label = <(IDENTIFIER,DESTINATION,PREDICTEDRIP - DESTINATION)<SUB>41</SUB>> ]
"30064771144" [label = <(&lt;operator&gt;.assignmentPlus,assemblyBuilder += std::format(&quot;{} {}0x{:x}{}\n...)<SUB>43</SUB>> ]
"68719476802" [label = <(IDENTIFIER,assemblyBuilder,assemblyBuilder += std::format(&quot;{} {}0x{:x}{}\n...)<SUB>43</SUB>> ]
"30064771145" [label = <(format,std::format(&quot;{} {}0x{:x}{}\n&quot;, code.substr(0, A...)<SUB>43</SUB>> ]
"90194313248" [label = <(LITERAL,&quot;{} {}0x{:x}{}\n&quot;,std::format(&quot;{} {}0x{:x}{}\n&quot;, code.substr(0, A...)<SUB>43</SUB>> ]
"30064771146" [label = <(substr,code.substr(0, ADDRSTART))<SUB>43</SUB>> ]
"68719476803" [label = <(IDENTIFIER,code,code.substr(0, ADDRSTART))<SUB>43</SUB>> ]
"90194313249" [label = <(LITERAL,0,code.substr(0, ADDRSTART))<SUB>43</SUB>> ]
"68719476804" [label = <(IDENTIFIER,ADDRSTART,code.substr(0, ADDRSTART))<SUB>43</SUB>> ]
"30064771147" [label = <(&lt;operator&gt;.conditional,POSITIVE ? '+' : '-')<SUB>43</SUB>> ]
"68719476805" [label = <(IDENTIFIER,POSITIVE,POSITIVE ? '+' : '-')<SUB>43</SUB>> ]
"90194313250" [label = <(LITERAL,'+',POSITIVE ? '+' : '-')<SUB>43</SUB>> ]
"90194313251" [label = <(LITERAL,'-',POSITIVE ? '+' : '-')<SUB>43</SUB>> ]
"68719476806" [label = <(IDENTIFIER,NEWRIPOFFSET,std::format(&quot;{} {}0x{:x}{}\n&quot;, code.substr(0, A...)<SUB>43</SUB>> ]
"30064771148" [label = <(substr,code.substr(ADDREND))<SUB>43</SUB>> ]
"68719476807" [label = <(IDENTIFIER,code,code.substr(ADDREND))<SUB>43</SUB>> ]
"68719476808" [label = <(IDENTIFIER,ADDREND,code.substr(ADDREND))<SUB>43</SUB>> ]
"30064771149" [label = <(&lt;operator&gt;.assignmentPlus,currentDestinationOffset += len)<SUB>44</SUB>> ]
"68719476809" [label = <(IDENTIFIER,currentDestinationOffset,currentDestinationOffset += len)<SUB>44</SUB>> ]
"68719476810" [label = <(IDENTIFIER,len,currentDestinationOffset += len)<SUB>44</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>46</SUB>> ]
"25769803786" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,IF,if (code.contains(&quot;invalid&quot;)))<SUB>46</SUB>> ]
"30064771150" [label = <(contains,code.contains(&quot;invalid&quot;))<SUB>46</SUB>> ]
"68719476811" [label = <(IDENTIFIER,code,code.contains(&quot;invalid&quot;))<SUB>46</SUB>> ]
"90194313252" [label = <(LITERAL,&quot;invalid&quot;,code.contains(&quot;invalid&quot;))<SUB>46</SUB>> ]
"25769803787" [label = <(BLOCK,{
            std::vector&lt;uint8_t&gt; bytes;
     ...,{
            std::vector&lt;uint8_t&gt; bytes;
     ...)<SUB>46</SUB>> ]
"30064771151" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; bytes)<SUB>47</SUB>> ]
"30064771152" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>47</SUB>> ]
"30064771153" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>47</SUB>> ]
"68719476812" [label = <(IDENTIFIER,std,std::vector&lt;uint8_t)<SUB>47</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>47</SUB>> ]
"68719476813" [label = <(IDENTIFIER,uint8_t,std::vector&lt;uint8_t)<SUB>47</SUB>> ]
"68719476814" [label = <(IDENTIFIER,bytes,std::vector&lt;uint8_t&gt; bytes)<SUB>47</SUB>> ]
"30064771154" [label = <(resize,bytes.resize(len))<SUB>48</SUB>> ]
"68719476815" [label = <(IDENTIFIER,bytes,bytes.resize(len))<SUB>48</SUB>> ]
"68719476816" [label = <(IDENTIFIER,len,bytes.resize(len))<SUB>48</SUB>> ]
"30064771155" [label = <(memcpy,memcpy(bytes.data(), (std::byte*)currentAddress...)<SUB>49</SUB>> ]
"30064771156" [label = <(data,bytes.data())<SUB>49</SUB>> ]
"68719476817" [label = <(IDENTIFIER,bytes,bytes.data())<SUB>49</SUB>> ]
"30064771157" [label = <(&lt;operator&gt;.cast,(std::byte*)currentAddress)<SUB>49</SUB>> ]
"184683593730" [label = <(UNKNOWN,std::byte*,std::byte*)<SUB>49</SUB>> ]
"68719476818" [label = <(IDENTIFIER,currentAddress,(std::byte*)currentAddress)<SUB>49</SUB>> ]
"68719476819" [label = <(IDENTIFIER,len,memcpy(bytes.data(), (std::byte*)currentAddress...)<SUB>49</SUB>> ]
"47244640266" [label = <(CONTROL_STRUCTURE,IF,if (len == 4 &amp;&amp; bytes[0] == 0xF3 &amp;&amp; bytes[1] == 0x0F &amp;&amp; bytes[2] == 0x1E &amp;&amp; bytes[3] == 0xFA))<SUB>50</SUB>> ]
"30064771158" [label = <(&lt;operator&gt;.logicalAnd,len == 4 &amp;&amp; bytes[0] == 0xF3 &amp;&amp; bytes[1] == 0x0...)<SUB>50</SUB>> ]
"30064771159" [label = <(&lt;operator&gt;.logicalAnd,len == 4 &amp;&amp; bytes[0] == 0xF3 &amp;&amp; bytes[1] == 0x0...)<SUB>50</SUB>> ]
"30064771160" [label = <(&lt;operator&gt;.logicalAnd,len == 4 &amp;&amp; bytes[0] == 0xF3 &amp;&amp; bytes[1] == 0x0F)<SUB>50</SUB>> ]
"30064771161" [label = <(&lt;operator&gt;.logicalAnd,len == 4 &amp;&amp; bytes[0] == 0xF3)<SUB>50</SUB>> ]
"30064771162" [label = <(&lt;operator&gt;.equals,len == 4)<SUB>50</SUB>> ]
"68719476820" [label = <(IDENTIFIER,len,len == 4)<SUB>50</SUB>> ]
"90194313253" [label = <(LITERAL,4,len == 4)<SUB>50</SUB>> ]
"30064771163" [label = <(&lt;operator&gt;.equals,bytes[0] == 0xF3)<SUB>50</SUB>> ]
"30064771164" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[0])<SUB>50</SUB>> ]
"68719476821" [label = <(IDENTIFIER,bytes,bytes[0] == 0xF3)<SUB>50</SUB>> ]
"90194313254" [label = <(LITERAL,0,bytes[0] == 0xF3)<SUB>50</SUB>> ]
"90194313255" [label = <(LITERAL,0xF3,bytes[0] == 0xF3)<SUB>50</SUB>> ]
"30064771165" [label = <(&lt;operator&gt;.equals,bytes[1] == 0x0F)<SUB>50</SUB>> ]
"30064771166" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[1])<SUB>50</SUB>> ]
"68719476822" [label = <(IDENTIFIER,bytes,bytes[1] == 0x0F)<SUB>50</SUB>> ]
"90194313256" [label = <(LITERAL,1,bytes[1] == 0x0F)<SUB>50</SUB>> ]
"90194313257" [label = <(LITERAL,0x0F,bytes[1] == 0x0F)<SUB>50</SUB>> ]
"30064771167" [label = <(&lt;operator&gt;.equals,bytes[2] == 0x1E)<SUB>50</SUB>> ]
"30064771168" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[2])<SUB>50</SUB>> ]
"68719476823" [label = <(IDENTIFIER,bytes,bytes[2] == 0x1E)<SUB>50</SUB>> ]
"90194313258" [label = <(LITERAL,2,bytes[2] == 0x1E)<SUB>50</SUB>> ]
"90194313259" [label = <(LITERAL,0x1E,bytes[2] == 0x1E)<SUB>50</SUB>> ]
"30064771169" [label = <(&lt;operator&gt;.equals,bytes[3] == 0xFA)<SUB>50</SUB>> ]
"30064771170" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[3])<SUB>50</SUB>> ]
"68719476824" [label = <(IDENTIFIER,bytes,bytes[3] == 0xFA)<SUB>50</SUB>> ]
"90194313260" [label = <(LITERAL,3,bytes[3] == 0xFA)<SUB>50</SUB>> ]
"90194313261" [label = <(LITERAL,0xFA,bytes[3] == 0xFA)<SUB>50</SUB>> ]
"25769803788" [label = <(BLOCK,{
                // F3 0F 1E FA = endbr64, udi...,{
                // F3 0F 1E FA = endbr64, udi...)<SUB>50</SUB>> ]
"30064771171" [label = <(&lt;operator&gt;.assignmentPlus,assemblyBuilder += &quot;endbr64\n&quot;)<SUB>52</SUB>> ]
"68719476825" [label = <(IDENTIFIER,assemblyBuilder,assemblyBuilder += &quot;endbr64\n&quot;)<SUB>52</SUB>> ]
"90194313262" [label = <(LITERAL,&quot;endbr64\n&quot;,assemblyBuilder += &quot;endbr64\n&quot;)<SUB>52</SUB>> ]
"30064771172" [label = <(&lt;operator&gt;.assignmentPlus,currentDestinationOffset += 4)<SUB>53</SUB>> ]
"68719476826" [label = <(IDENTIFIER,currentDestinationOffset,currentDestinationOffset += 4)<SUB>53</SUB>> ]
"90194313263" [label = <(LITERAL,4,currentDestinationOffset += 4)<SUB>53</SUB>> ]
"47244640267" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>54</SUB>> ]
"25769803789" [label = <(BLOCK,{
                // raise error, unknown op
  ...,{
                // raise error, unknown op
  ...)<SUB>54</SUB>> ]
"94489280530" [label = <(LOCAL,std.string strBytes: std.string)<SUB>56</SUB>> ]
"47244640268" [label = <(CONTROL_STRUCTURE,FOR,for (auto&amp; b:bytes))<SUB>57</SUB>> ]
"68719476827" [label = <(IDENTIFIER,bytes,for (auto&amp; b:bytes))<SUB>57</SUB>> ]
"94489280531" [label = <(LOCAL,auto&amp; b: auto&amp;)<SUB>57</SUB>> ]
"25769803790" [label = <(BLOCK,{
                    strBytes += std::format(&quot;...,{
                    strBytes += std::format(&quot;...)<SUB>57</SUB>> ]
"30064771173" [label = <(&lt;operator&gt;.assignmentPlus,strBytes += std::format(&quot;{:x} &quot;, b))<SUB>58</SUB>> ]
"68719476828" [label = <(IDENTIFIER,strBytes,strBytes += std::format(&quot;{:x} &quot;, b))<SUB>58</SUB>> ]
"30064771174" [label = <(format,std::format(&quot;{:x} &quot;, b))<SUB>58</SUB>> ]
"90194313264" [label = <(LITERAL,&quot;{:x} &quot;,std::format(&quot;{:x} &quot;, b))<SUB>58</SUB>> ]
"68719476829" [label = <(IDENTIFIER,b,std::format(&quot;{:x} &quot;, b))<SUB>58</SUB>> ]
"30064771175" [label = <(log,Debug::log(ERR, &quot;[functionhook] unknown bytes: ...)<SUB>60</SUB>> ]
"68719476830" [label = <(IDENTIFIER,ERR,Debug::log(ERR, &quot;[functionhook] unknown bytes: ...)<SUB>60</SUB>> ]
"90194313265" [label = <(LITERAL,&quot;[functionhook] unknown bytes: {}&quot;,Debug::log(ERR, &quot;[functionhook] unknown bytes: ...)<SUB>60</SUB>> ]
"68719476831" [label = <(IDENTIFIER,strBytes,Debug::log(ERR, &quot;[functionhook] unknown bytes: ...)<SUB>60</SUB>> ]
"146028888066" [label = <(RETURN,return {};,return {};)<SUB>61</SUB>> ]
"47244640269" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>63</SUB>> ]
"25769803791" [label = <(BLOCK,{
            assemblyBuilder += code + &quot;\n&quot;;
 ...,{
            assemblyBuilder += code + &quot;\n&quot;;
 ...)<SUB>63</SUB>> ]
"30064771176" [label = <(&lt;operator&gt;.assignmentPlus,assemblyBuilder += code + &quot;\n&quot;)<SUB>64</SUB>> ]
"68719476832" [label = <(IDENTIFIER,assemblyBuilder,assemblyBuilder += code + &quot;\n&quot;)<SUB>64</SUB>> ]
"30064771177" [label = <(&lt;operator&gt;.addition,code + &quot;\n&quot;)<SUB>64</SUB>> ]
"68719476833" [label = <(IDENTIFIER,code,code + &quot;\n&quot;)<SUB>64</SUB>> ]
"90194313266" [label = <(LITERAL,&quot;\n&quot;,code + &quot;\n&quot;)<SUB>64</SUB>> ]
"30064771178" [label = <(&lt;operator&gt;.assignmentPlus,currentDestinationOffset += len)<SUB>65</SUB>> ]
"68719476834" [label = <(IDENTIFIER,currentDestinationOffset,currentDestinationOffset += len)<SUB>65</SUB>> ]
"68719476835" [label = <(IDENTIFIER,len,currentDestinationOffset += len)<SUB>65</SUB>> ]
"30064771179" [label = <(&lt;operator&gt;.assignment,lastAsmNewline = probe.assembly.find(&quot;\n&quot;, last...)<SUB>68</SUB>> ]
"68719476836" [label = <(IDENTIFIER,lastAsmNewline,lastAsmNewline = probe.assembly.find(&quot;\n&quot;, last...)<SUB>68</SUB>> ]
"30064771180" [label = <(&lt;operator&gt;.addition,probe.assembly.find(&quot;\n&quot;, lastAsmNewline) + 1)<SUB>68</SUB>> ]
"30064771181" [label = <(find,probe.assembly.find(&quot;\n&quot;, lastAsmNewline))<SUB>68</SUB>> ]
"30064771182" [label = <(&lt;operator&gt;.fieldAccess,probe.assembly)<SUB>68</SUB>> ]
"68719476837" [label = <(IDENTIFIER,probe,probe.assembly.find(&quot;\n&quot;, lastAsmNewline))<SUB>68</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,assembly,assembly)<SUB>68</SUB>> ]
"90194313267" [label = <(LITERAL,&quot;\n&quot;,probe.assembly.find(&quot;\n&quot;, lastAsmNewline))<SUB>68</SUB>> ]
"68719476838" [label = <(IDENTIFIER,lastAsmNewline,probe.assembly.find(&quot;\n&quot;, lastAsmNewline))<SUB>68</SUB>> ]
"90194313268" [label = <(LITERAL,1,probe.assembly.find(&quot;\n&quot;, lastAsmNewline) + 1)<SUB>68</SUB>> ]
"30064771183" [label = <(&lt;operator&gt;.assignmentPlus,currentAddress += len)<SUB>69</SUB>> ]
"68719476839" [label = <(IDENTIFIER,currentAddress,currentAddress += len)<SUB>69</SUB>> ]
"68719476840" [label = <(IDENTIFIER,len,currentAddress += len)<SUB>69</SUB>> ]
"94489280532" [label = <(LOCAL,const auto RANDOMDIR: auto)<SUB>72</SUB>> ]
"30064771184" [label = <(&lt;operator&gt;.assignment,RANDOMDIR = &quot;/tmp/hypr/&quot; + g_pTokenManager-&gt;get...)<SUB>72</SUB>> ]
"68719476841" [label = <(IDENTIFIER,RANDOMDIR,RANDOMDIR = &quot;/tmp/hypr/&quot; + g_pTokenManager-&gt;get...)<SUB>72</SUB>> ]
"30064771185" [label = <(&lt;operator&gt;.addition,&quot;/tmp/hypr/&quot; + g_pTokenManager-&gt;getRandomUUID())<SUB>72</SUB>> ]
"90194313269" [label = <(LITERAL,&quot;/tmp/hypr/&quot;,&quot;/tmp/hypr/&quot; + g_pTokenManager-&gt;getRandomUUID())<SUB>72</SUB>> ]
"30064771186" [label = <(getRandomUUID,g_pTokenManager-&gt;getRandomUUID())<SUB>72</SUB>> ]
"68719476842" [label = <(IDENTIFIER,g_pTokenManager,g_pTokenManager-&gt;getRandomUUID())<SUB>72</SUB>> ]
"47244640270" [label = <(CONTROL_STRUCTURE,IF,if (!std::filesystem::create_directory(RANDOMDIR)))<SUB>74</SUB>> ]
"30064771187" [label = <(&lt;operator&gt;.logicalNot,!std::filesystem::create_directory(RANDOMDIR))<SUB>74</SUB>> ]
"30064771188" [label = <(create_directory,std::filesystem::create_directory(RANDOMDIR))<SUB>74</SUB>> ]
"68719476843" [label = <(IDENTIFIER,RANDOMDIR,std::filesystem::create_directory(RANDOMDIR))<SUB>74</SUB>> ]
"25769803792" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>> ]
"146028888067" [label = <(RETURN,return {};,return {};)<SUB>75</SUB>> ]
"30064771189" [label = <(permissions,std::filesystem::permissions(RANDOMDIR, std::fi...)<SUB>77</SUB>> ]
"68719476844" [label = <(IDENTIFIER,RANDOMDIR,std::filesystem::permissions(RANDOMDIR, std::fi...)<SUB>77</SUB>> ]
"30064771190" [label = <(&lt;operator&gt;.fieldAccess,std::filesystem::perms::owner_all)<SUB>77</SUB>> ]
"30064771191" [label = <(&lt;operator&gt;.fieldAccess,std::filesystem::perms)<SUB>77</SUB>> ]
"68719476845" [label = <(IDENTIFIER,std,std::filesystem::permissions(RANDOMDIR, std::fi...)<SUB>77</SUB>> ]
"30064771192" [label = <(&lt;operator&gt;.fieldAccess,filesystem::perms)<SUB>77</SUB>> ]
"68719476846" [label = <(IDENTIFIER,filesystem,std::filesystem::permissions(RANDOMDIR, std::fi...)<SUB>77</SUB>> ]
"68719476847" [label = <(IDENTIFIER,perms,std::filesystem::permissions(RANDOMDIR, std::fi...)<SUB>77</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,owner_all,owner_all)<SUB>77</SUB>> ]
"30064771193" [label = <(&lt;operator&gt;.fieldAccess,std::filesystem::perm_options::replace)<SUB>77</SUB>> ]
"30064771194" [label = <(&lt;operator&gt;.fieldAccess,std::filesystem::perm_options)<SUB>77</SUB>> ]
"68719476848" [label = <(IDENTIFIER,std,std::filesystem::permissions(RANDOMDIR, std::fi...)<SUB>77</SUB>> ]
"30064771195" [label = <(&lt;operator&gt;.fieldAccess,filesystem::perm_options)<SUB>77</SUB>> ]
"68719476849" [label = <(IDENTIFIER,filesystem,std::filesystem::permissions(RANDOMDIR, std::fi...)<SUB>77</SUB>> ]
"68719476850" [label = <(IDENTIFIER,perm_options,std::filesystem::permissions(RANDOMDIR, std::fi...)<SUB>77</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,replace,replace)<SUB>77</SUB>> ]
"94489280533" [label = <(LOCAL,std.ofstream ofs: std.ofstream)<SUB>79</SUB>> ]
"30064771196" [label = <(ofs,ofs(RANDOMDIR + &quot;/.hookcode.asm&quot;, std::ios::trunc))<SUB>79</SUB>> ]
"30064771197" [label = <(&lt;operator&gt;.addition,RANDOMDIR + &quot;/.hookcode.asm&quot;)<SUB>79</SUB>> ]
"68719476851" [label = <(IDENTIFIER,RANDOMDIR,RANDOMDIR + &quot;/.hookcode.asm&quot;)<SUB>79</SUB>> ]
"90194313270" [label = <(LITERAL,&quot;/.hookcode.asm&quot;,RANDOMDIR + &quot;/.hookcode.asm&quot;)<SUB>79</SUB>> ]
"30064771198" [label = <(&lt;operator&gt;.fieldAccess,std::ios::trunc)<SUB>79</SUB>> ]
"30064771199" [label = <(&lt;operator&gt;.fieldAccess,std::ios)<SUB>79</SUB>> ]
"68719476852" [label = <(IDENTIFIER,std,ofs(RANDOMDIR + &quot;/.hookcode.asm&quot;, std::ios::trunc))<SUB>79</SUB>> ]
"68719476853" [label = <(IDENTIFIER,ios,ofs(RANDOMDIR + &quot;/.hookcode.asm&quot;, std::ios::trunc))<SUB>79</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,trunc,trunc)<SUB>79</SUB>> ]
"30064771200" [label = <(&lt;operator&gt;.shiftLeft,ofs &lt;&lt; assemblyBuilder)<SUB>80</SUB>> ]
"68719476854" [label = <(IDENTIFIER,ofs,ofs &lt;&lt; assemblyBuilder)<SUB>80</SUB>> ]
"68719476855" [label = <(IDENTIFIER,assemblyBuilder,ofs &lt;&lt; assemblyBuilder)<SUB>80</SUB>> ]
"30064771201" [label = <(close,ofs.close())<SUB>81</SUB>> ]
"68719476856" [label = <(IDENTIFIER,ofs,ofs.close())<SUB>81</SUB>> ]
"94489280534" [label = <(LOCAL,std.string ret: std.string)<SUB>82</SUB>> ]
"30064771202" [label = <(&lt;operator&gt;.assignment,ret = execAndGet(std::string{&quot;cc -x assembler -...)<SUB>82</SUB>> ]
"68719476857" [label = <(IDENTIFIER,ret,ret = execAndGet(std::string{&quot;cc -x assembler -...)<SUB>82</SUB>> ]
"30064771203" [label = <(execAndGet,execAndGet(std::string{&quot;cc -x assembler -c &quot; + ...)<SUB>82</SUB>> ]
"30064771204" [label = <(c_str,std::string{&quot;cc -x assembler -c &quot; + RANDOMDIR +...)<SUB>82</SUB>> ]
"30064771205" [label = <(std::string,std::string{&quot;cc -x assembler -c &quot; + RANDOMDIR +...)<SUB>82</SUB>> ]
"30064771206" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcod...)<SUB>82</SUB>> ]
"30064771207" [label = <(&lt;operator&gt;.addition,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"30064771208" [label = <(&lt;operator&gt;.addition,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"30064771209" [label = <(&lt;operator&gt;.addition,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"30064771210" [label = <(&lt;operator&gt;.addition,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"30064771211" [label = <(&lt;operator&gt;.addition,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"30064771212" [label = <(&lt;operator&gt;.addition,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"30064771213" [label = <(&lt;operator&gt;.addition,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"30064771214" [label = <(&lt;operator&gt;.addition,&quot;cc -x assembler -c &quot; + RANDOMDIR)<SUB>82</SUB>> ]
"90194313271" [label = <(LITERAL,&quot;cc -x assembler -c &quot;,&quot;cc -x assembler -c &quot; + RANDOMDIR)<SUB>82</SUB>> ]
"68719476858" [label = <(IDENTIFIER,RANDOMDIR,&quot;cc -x assembler -c &quot; + RANDOMDIR)<SUB>82</SUB>> ]
"90194313272" [label = <(LITERAL,&quot;/.hookcode.asm -o &quot;,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"68719476859" [label = <(IDENTIFIER,RANDOMDIR,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"90194313273" [label = <(LITERAL,&quot;/.hookbinary.o 2&gt;&amp;1 &amp;&amp; objcopy -O binary -j .t...,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>82</SUB>> ]
"68719476860" [label = <(IDENTIFIER,RANDOMDIR,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>83</SUB>> ]
"90194313274" [label = <(LITERAL,&quot;/.hookbinary.o &quot;,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>83</SUB>> ]
"68719476861" [label = <(IDENTIFIER,RANDOMDIR,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>83</SUB>> ]
"90194313275" [label = <(LITERAL,&quot;/.hookbinary2.o 2&gt;&amp;1&quot;,&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode...)<SUB>83</SUB>> ]
"30064771215" [label = <(log,Debug::log(LOG, &quot;[functionhook] assembler retur...)<SUB>85</SUB>> ]
"68719476862" [label = <(IDENTIFIER,LOG,Debug::log(LOG, &quot;[functionhook] assembler retur...)<SUB>85</SUB>> ]
"90194313276" [label = <(LITERAL,&quot;[functionhook] assembler returned:\n{}&quot;,Debug::log(LOG, &quot;[functionhook] assembler retur...)<SUB>85</SUB>> ]
"68719476863" [label = <(IDENTIFIER,ret,Debug::log(LOG, &quot;[functionhook] assembler retur...)<SUB>85</SUB>> ]
"47244640271" [label = <(CONTROL_STRUCTURE,IF,if (!std::filesystem::exists(RANDOMDIR + &quot;/.hookbinary2.o&quot;)))<SUB>86</SUB>> ]
"30064771216" [label = <(&lt;operator&gt;.logicalNot,!std::filesystem::exists(RANDOMDIR + &quot;/.hookbin...)<SUB>86</SUB>> ]
"30064771217" [label = <(exists,std::filesystem::exists(RANDOMDIR + &quot;/.hookbina...)<SUB>86</SUB>> ]
"30064771218" [label = <(&lt;operator&gt;.addition,RANDOMDIR + &quot;/.hookbinary2.o&quot;)<SUB>86</SUB>> ]
"68719476864" [label = <(IDENTIFIER,RANDOMDIR,RANDOMDIR + &quot;/.hookbinary2.o&quot;)<SUB>86</SUB>> ]
"90194313277" [label = <(LITERAL,&quot;/.hookbinary2.o&quot;,RANDOMDIR + &quot;/.hookbinary2.o&quot;)<SUB>86</SUB>> ]
"25769803793" [label = <(BLOCK,{
        std::filesystem::remove(RANDOMDIR + &quot;...,{
        std::filesystem::remove(RANDOMDIR + &quot;...)<SUB>86</SUB>> ]
"30064771219" [label = <(remove,std::filesystem::remove(RANDOMDIR + &quot;/.hookcode...)<SUB>87</SUB>> ]
"30064771220" [label = <(&lt;operator&gt;.addition,RANDOMDIR + &quot;/.hookcode.asm&quot;)<SUB>87</SUB>> ]
"68719476865" [label = <(IDENTIFIER,RANDOMDIR,RANDOMDIR + &quot;/.hookcode.asm&quot;)<SUB>87</SUB>> ]
"90194313278" [label = <(LITERAL,&quot;/.hookcode.asm&quot;,RANDOMDIR + &quot;/.hookcode.asm&quot;)<SUB>87</SUB>> ]
"30064771221" [label = <(remove,std::filesystem::remove(RANDOMDIR + &quot;/.hookbina...)<SUB>88</SUB>> ]
"30064771222" [label = <(&lt;operator&gt;.addition,RANDOMDIR + &quot;/.hookbinary.asm&quot;)<SUB>88</SUB>> ]
"68719476866" [label = <(IDENTIFIER,RANDOMDIR,RANDOMDIR + &quot;/.hookbinary.asm&quot;)<SUB>88</SUB>> ]
"90194313279" [label = <(LITERAL,&quot;/.hookbinary.asm&quot;,RANDOMDIR + &quot;/.hookbinary.asm&quot;)<SUB>88</SUB>> ]
"146028888068" [label = <(RETURN,return {};,return {};)<SUB>89</SUB>> ]
"94489280535" [label = <(LOCAL,std.ifstream ifs: std.ifstream)<SUB>92</SUB>> ]
"30064771223" [label = <(ifs,ifs(RANDOMDIR + &quot;/.hookbinary2.o&quot;, std::ios::bi...)<SUB>92</SUB>> ]
"30064771224" [label = <(&lt;operator&gt;.addition,RANDOMDIR + &quot;/.hookbinary2.o&quot;)<SUB>92</SUB>> ]
"68719476867" [label = <(IDENTIFIER,RANDOMDIR,RANDOMDIR + &quot;/.hookbinary2.o&quot;)<SUB>92</SUB>> ]
"90194313280" [label = <(LITERAL,&quot;/.hookbinary2.o&quot;,RANDOMDIR + &quot;/.hookbinary2.o&quot;)<SUB>92</SUB>> ]
"30064771225" [label = <(&lt;operator&gt;.fieldAccess,std::ios::binary)<SUB>92</SUB>> ]
"30064771226" [label = <(&lt;operator&gt;.fieldAccess,std::ios)<SUB>92</SUB>> ]
"68719476868" [label = <(IDENTIFIER,std,ifs(RANDOMDIR + &quot;/.hookbinary2.o&quot;, std::ios::bi...)<SUB>92</SUB>> ]
"68719476869" [label = <(IDENTIFIER,ios,ifs(RANDOMDIR + &quot;/.hookbinary2.o&quot;, std::ios::bi...)<SUB>92</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,binary,binary)<SUB>92</SUB>> ]
"30064771227" [label = <(&lt;operator&gt;.assignment,returns = {std::vector&lt;char&gt;(std::istreambuf_it...)<SUB>93</SUB>> ]
"68719476870" [label = <(IDENTIFIER,returns,returns = {std::vector&lt;char&gt;(std::istreambuf_it...)<SUB>93</SUB>> ]
"30064771228" [label = <(close,ifs.close())<SUB>94</SUB>> ]
"68719476871" [label = <(IDENTIFIER,ifs,ifs.close())<SUB>94</SUB>> ]
"30064771229" [label = <(remove_all,std::filesystem::remove_all(RANDOMDIR))<SUB>95</SUB>> ]
"68719476872" [label = <(IDENTIFIER,RANDOMDIR,std::filesystem::remove_all(RANDOMDIR))<SUB>95</SUB>> ]
"146028888069" [label = <(RETURN,return returns;,return returns;)<SUB>97</SUB>> ]
"68719476873" [label = <(IDENTIFIER,returns,return returns;)<SUB>97</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,SAssembly)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771074"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "94489280532"  [ label = "AST: "] 
  "25769803777" -> "30064771184"  [ label = "AST: "] 
  "25769803777" -> "47244640270"  [ label = "AST: "] 
  "25769803777" -> "30064771189"  [ label = "AST: "] 
  "25769803777" -> "94489280533"  [ label = "AST: "] 
  "25769803777" -> "30064771196"  [ label = "AST: "] 
  "25769803777" -> "30064771200"  [ label = "AST: "] 
  "25769803777" -> "30064771201"  [ label = "AST: "] 
  "25769803777" -> "94489280534"  [ label = "AST: "] 
  "25769803777" -> "30064771202"  [ label = "AST: "] 
  "25769803777" -> "30064771215"  [ label = "AST: "] 
  "25769803777" -> "47244640271"  [ label = "AST: "] 
  "25769803777" -> "94489280535"  [ label = "AST: "] 
  "25769803777" -> "30064771223"  [ label = "AST: "] 
  "25769803777" -> "30064771227"  [ label = "AST: "] 
  "25769803777" -> "30064771228"  [ label = "AST: "] 
  "25769803777" -> "30064771229"  [ label = "AST: "] 
  "25769803777" -> "146028888069"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "184683593728"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "47244640256" -> "30064771076"  [ label = "AST: "] 
  "47244640256" -> "94489280517"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "55834574848"  [ label = "AST: "] 
  "25769803778" -> "94489280518"  [ label = "AST: "] 
  "25769803778" -> "30064771077"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "30064771179"  [ label = "AST: "] 
  "25769803778" -> "30064771183"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "68719476743"  [ label = "AST: "] 
  "30064771078" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "55834574849"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "68719476744"  [ label = "AST: "] 
  "30064771082" -> "55834574850"  [ label = "AST: "] 
  "47244640257" -> "30064771083"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "47244640264"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "90194313219"  [ label = "AST: "] 
  "25769803779" -> "94489280519"  [ label = "AST: "] 
  "25769803779" -> "30064771084"  [ label = "AST: "] 
  "25769803779" -> "94489280520"  [ label = "AST: "] 
  "25769803779" -> "30064771086"  [ label = "AST: "] 
  "25769803779" -> "94489280521"  [ label = "AST: "] 
  "25769803779" -> "30064771091"  [ label = "AST: "] 
  "25769803779" -> "94489280522"  [ label = "AST: "] 
  "25769803779" -> "30064771096"  [ label = "AST: "] 
  "25769803779" -> "94489280523"  [ label = "AST: "] 
  "25769803779" -> "30064771104"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "25769803779" -> "94489280524"  [ label = "AST: "] 
  "25769803779" -> "30064771110"  [ label = "AST: "] 
  "25769803779" -> "47244640259"  [ label = "AST: "] 
  "30064771084" -> "68719476748"  [ label = "AST: "] 
  "30064771084" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476749"  [ label = "AST: "] 
  "30064771085" -> "90194313220"  [ label = "AST: "] 
  "30064771085" -> "90194313221"  [ label = "AST: "] 
  "30064771086" -> "68719476750"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "90194313225"  [ label = "AST: "] 
  "30064771087" -> "90194313226"  [ label = "AST: "] 
  "30064771088" -> "30064771089"  [ label = "AST: "] 
  "30064771088" -> "90194313224"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771089" -> "90194313223"  [ label = "AST: "] 
  "30064771090" -> "68719476751"  [ label = "AST: "] 
  "30064771090" -> "90194313222"  [ label = "AST: "] 
  "30064771091" -> "68719476752"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "90194313230"  [ label = "AST: "] 
  "30064771092" -> "90194313231"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771093" -> "90194313229"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "90194313228"  [ label = "AST: "] 
  "30064771095" -> "68719476753"  [ label = "AST: "] 
  "30064771095" -> "90194313227"  [ label = "AST: "] 
  "30064771096" -> "68719476754"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771097" -> "30064771099"  [ label = "AST: "] 
  "30064771097" -> "30064771100"  [ label = "AST: "] 
  "30064771098" -> "68719476755"  [ label = "AST: "] 
  "30064771098" -> "90194313232"  [ label = "AST: "] 
  "30064771099" -> "68719476756"  [ label = "AST: "] 
  "30064771099" -> "68719476757"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "30064771103"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "90194313234"  [ label = "AST: "] 
  "30064771102" -> "68719476758"  [ label = "AST: "] 
  "30064771102" -> "90194313233"  [ label = "AST: "] 
  "30064771103" -> "68719476759"  [ label = "AST: "] 
  "30064771103" -> "68719476760"  [ label = "AST: "] 
  "30064771104" -> "68719476761"  [ label = "AST: "] 
  "30064771104" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "30064771108"  [ label = "AST: "] 
  "30064771106" -> "68719476762"  [ label = "AST: "] 
  "30064771106" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "90194313236"  [ label = "AST: "] 
  "30064771107" -> "90194313235"  [ label = "AST: "] 
  "30064771108" -> "68719476763"  [ label = "AST: "] 
  "47244640258" -> "30064771109"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771109" -> "68719476764"  [ label = "AST: "] 
  "30064771109" -> "90194313237"  [ label = "AST: "] 
  "25769803780" -> "146028888064"  [ label = "AST: "] 
  "30064771110" -> "68719476765"  [ label = "AST: "] 
  "30064771110" -> "30064771111"  [ label = "AST: "] 
  "30064771111" -> "30064771112"  [ label = "AST: "] 
  "30064771111" -> "68719476768"  [ label = "AST: "] 
  "30064771112" -> "68719476766"  [ label = "AST: "] 
  "30064771112" -> "68719476767"  [ label = "AST: "] 
  "47244640259" -> "30064771113"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "47244640259" -> "47244640260"  [ label = "AST: "] 
  "30064771113" -> "68719476769"  [ label = "AST: "] 
  "30064771113" -> "90194313238"  [ label = "AST: "] 
  "25769803781" -> "30064771114"  [ label = "AST: "] 
  "25769803781" -> "30064771116"  [ label = "AST: "] 
  "30064771114" -> "68719476770"  [ label = "AST: "] 
  "30064771114" -> "30064771115"  [ label = "AST: "] 
  "30064771115" -> "90194313239"  [ label = "AST: "] 
  "30064771115" -> "68719476771"  [ label = "AST: "] 
  "30064771116" -> "68719476772"  [ label = "AST: "] 
  "30064771116" -> "90194313240"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "47244640261"  [ label = "AST: "] 
  "47244640261" -> "30064771117"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "47244640261" -> "47244640262"  [ label = "AST: "] 
  "30064771117" -> "68719476773"  [ label = "AST: "] 
  "30064771117" -> "90194313241"  [ label = "AST: "] 
  "25769803783" -> "30064771118"  [ label = "AST: "] 
  "25769803783" -> "30064771121"  [ label = "AST: "] 
  "30064771118" -> "68719476774"  [ label = "AST: "] 
  "30064771118" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "90194313242"  [ label = "AST: "] 
  "30064771119" -> "68719476775"  [ label = "AST: "] 
  "30064771119" -> "30064771120"  [ label = "AST: "] 
  "30064771120" -> "68719476776"  [ label = "AST: "] 
  "30064771120" -> "90194313243"  [ label = "AST: "] 
  "30064771121" -> "68719476777"  [ label = "AST: "] 
  "30064771121" -> "90194313244"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "25769803784" -> "94489280525"  [ label = "AST: "] 
  "25769803784" -> "30064771122"  [ label = "AST: "] 
  "25769803784" -> "94489280526"  [ label = "AST: "] 
  "25769803784" -> "30064771124"  [ label = "AST: "] 
  "25769803784" -> "47244640263"  [ label = "AST: "] 
  "25769803784" -> "94489280527"  [ label = "AST: "] 
  "25769803784" -> "30064771134"  [ label = "AST: "] 
  "25769803784" -> "94489280528"  [ label = "AST: "] 
  "25769803784" -> "30064771138"  [ label = "AST: "] 
  "25769803784" -> "94489280529"  [ label = "AST: "] 
  "25769803784" -> "30064771140"  [ label = "AST: "] 
  "25769803784" -> "30064771144"  [ label = "AST: "] 
  "25769803784" -> "30064771149"  [ label = "AST: "] 
  "30064771122" -> "68719476778"  [ label = "AST: "] 
  "30064771122" -> "30064771123"  [ label = "AST: "] 
  "30064771123" -> "68719476779"  [ label = "AST: "] 
  "30064771123" -> "90194313245"  [ label = "AST: "] 
  "30064771124" -> "68719476780"  [ label = "AST: "] 
  "30064771124" -> "30064771125"  [ label = "AST: "] 
  "30064771125" -> "30064771126"  [ label = "AST: "] 
  "30064771125" -> "90194313247"  [ label = "AST: "] 
  "30064771126" -> "68719476781"  [ label = "AST: "] 
  "30064771126" -> "90194313246"  [ label = "AST: "] 
  "30064771126" -> "68719476782"  [ label = "AST: "] 
  "47244640263" -> "30064771127"  [ label = "AST: "] 
  "47244640263" -> "25769803785"  [ label = "AST: "] 
  "30064771127" -> "30064771128"  [ label = "AST: "] 
  "30064771127" -> "30064771131"  [ label = "AST: "] 
  "30064771128" -> "68719476783"  [ label = "AST: "] 
  "30064771128" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "30064771130"  [ label = "AST: "] 
  "30064771129" -> "55834574851"  [ label = "AST: "] 
  "30064771130" -> "68719476784"  [ label = "AST: "] 
  "30064771130" -> "68719476785"  [ label = "AST: "] 
  "30064771131" -> "68719476786"  [ label = "AST: "] 
  "30064771131" -> "30064771132"  [ label = "AST: "] 
  "30064771132" -> "30064771133"  [ label = "AST: "] 
  "30064771132" -> "55834574852"  [ label = "AST: "] 
  "30064771133" -> "68719476787"  [ label = "AST: "] 
  "30064771133" -> "68719476788"  [ label = "AST: "] 
  "25769803785" -> "146028888065"  [ label = "AST: "] 
  "30064771134" -> "68719476789"  [ label = "AST: "] 
  "30064771134" -> "30064771135"  [ label = "AST: "] 
  "30064771135" -> "30064771136"  [ label = "AST: "] 
  "30064771135" -> "68719476792"  [ label = "AST: "] 
  "30064771136" -> "30064771137"  [ label = "AST: "] 
  "30064771136" -> "68719476791"  [ label = "AST: "] 
  "30064771137" -> "184683593729"  [ label = "AST: "] 
  "30064771137" -> "68719476790"  [ label = "AST: "] 
  "30064771138" -> "68719476793"  [ label = "AST: "] 
  "30064771138" -> "30064771139"  [ label = "AST: "] 
  "30064771139" -> "68719476794"  [ label = "AST: "] 
  "30064771139" -> "68719476795"  [ label = "AST: "] 
  "30064771140" -> "68719476796"  [ label = "AST: "] 
  "30064771140" -> "30064771141"  [ label = "AST: "] 
  "30064771141" -> "68719476797"  [ label = "AST: "] 
  "30064771141" -> "30064771142"  [ label = "AST: "] 
  "30064771141" -> "30064771143"  [ label = "AST: "] 
  "30064771142" -> "68719476798"  [ label = "AST: "] 
  "30064771142" -> "68719476799"  [ label = "AST: "] 
  "30064771143" -> "68719476800"  [ label = "AST: "] 
  "30064771143" -> "68719476801"  [ label = "AST: "] 
  "30064771144" -> "68719476802"  [ label = "AST: "] 
  "30064771144" -> "30064771145"  [ label = "AST: "] 
  "30064771145" -> "90194313248"  [ label = "AST: "] 
  "30064771145" -> "30064771146"  [ label = "AST: "] 
  "30064771145" -> "30064771147"  [ label = "AST: "] 
  "30064771145" -> "68719476806"  [ label = "AST: "] 
  "30064771145" -> "30064771148"  [ label = "AST: "] 
  "30064771146" -> "68719476803"  [ label = "AST: "] 
  "30064771146" -> "90194313249"  [ label = "AST: "] 
  "30064771146" -> "68719476804"  [ label = "AST: "] 
  "30064771147" -> "68719476805"  [ label = "AST: "] 
  "30064771147" -> "90194313250"  [ label = "AST: "] 
  "30064771147" -> "90194313251"  [ label = "AST: "] 
  "30064771148" -> "68719476807"  [ label = "AST: "] 
  "30064771148" -> "68719476808"  [ label = "AST: "] 
  "30064771149" -> "68719476809"  [ label = "AST: "] 
  "30064771149" -> "68719476810"  [ label = "AST: "] 
  "47244640264" -> "25769803786"  [ label = "AST: "] 
  "25769803786" -> "47244640265"  [ label = "AST: "] 
  "47244640265" -> "30064771150"  [ label = "AST: "] 
  "47244640265" -> "25769803787"  [ label = "AST: "] 
  "47244640265" -> "47244640269"  [ label = "AST: "] 
  "30064771150" -> "68719476811"  [ label = "AST: "] 
  "30064771150" -> "90194313252"  [ label = "AST: "] 
  "25769803787" -> "30064771151"  [ label = "AST: "] 
  "25769803787" -> "30064771154"  [ label = "AST: "] 
  "25769803787" -> "30064771155"  [ label = "AST: "] 
  "25769803787" -> "47244640266"  [ label = "AST: "] 
  "30064771151" -> "30064771152"  [ label = "AST: "] 
  "30064771151" -> "68719476814"  [ label = "AST: "] 
  "30064771152" -> "30064771153"  [ label = "AST: "] 
  "30064771152" -> "68719476813"  [ label = "AST: "] 
  "30064771153" -> "68719476812"  [ label = "AST: "] 
  "30064771153" -> "55834574853"  [ label = "AST: "] 
  "30064771154" -> "68719476815"  [ label = "AST: "] 
  "30064771154" -> "68719476816"  [ label = "AST: "] 
  "30064771155" -> "30064771156"  [ label = "AST: "] 
  "30064771155" -> "30064771157"  [ label = "AST: "] 
  "30064771155" -> "68719476819"  [ label = "AST: "] 
  "30064771156" -> "68719476817"  [ label = "AST: "] 
  "30064771157" -> "184683593730"  [ label = "AST: "] 
  "30064771157" -> "68719476818"  [ label = "AST: "] 
  "47244640266" -> "30064771158"  [ label = "AST: "] 
  "47244640266" -> "25769803788"  [ label = "AST: "] 
  "47244640266" -> "47244640267"  [ label = "AST: "] 
  "30064771158" -> "30064771159"  [ label = "AST: "] 
  "30064771158" -> "30064771169"  [ label = "AST: "] 
  "30064771159" -> "30064771160"  [ label = "AST: "] 
  "30064771159" -> "30064771167"  [ label = "AST: "] 
  "30064771160" -> "30064771161"  [ label = "AST: "] 
  "30064771160" -> "30064771165"  [ label = "AST: "] 
  "30064771161" -> "30064771162"  [ label = "AST: "] 
  "30064771161" -> "30064771163"  [ label = "AST: "] 
  "30064771162" -> "68719476820"  [ label = "AST: "] 
  "30064771162" -> "90194313253"  [ label = "AST: "] 
  "30064771163" -> "30064771164"  [ label = "AST: "] 
  "30064771163" -> "90194313255"  [ label = "AST: "] 
  "30064771164" -> "68719476821"  [ label = "AST: "] 
  "30064771164" -> "90194313254"  [ label = "AST: "] 
  "30064771165" -> "30064771166"  [ label = "AST: "] 
  "30064771165" -> "90194313257"  [ label = "AST: "] 
  "30064771166" -> "68719476822"  [ label = "AST: "] 
  "30064771166" -> "90194313256"  [ label = "AST: "] 
  "30064771167" -> "30064771168"  [ label = "AST: "] 
  "30064771167" -> "90194313259"  [ label = "AST: "] 
  "30064771168" -> "68719476823"  [ label = "AST: "] 
  "30064771168" -> "90194313258"  [ label = "AST: "] 
  "30064771169" -> "30064771170"  [ label = "AST: "] 
  "30064771169" -> "90194313261"  [ label = "AST: "] 
  "30064771170" -> "68719476824"  [ label = "AST: "] 
  "30064771170" -> "90194313260"  [ label = "AST: "] 
  "25769803788" -> "30064771171"  [ label = "AST: "] 
  "25769803788" -> "30064771172"  [ label = "AST: "] 
  "30064771171" -> "68719476825"  [ label = "AST: "] 
  "30064771171" -> "90194313262"  [ label = "AST: "] 
  "30064771172" -> "68719476826"  [ label = "AST: "] 
  "30064771172" -> "90194313263"  [ label = "AST: "] 
  "47244640267" -> "25769803789"  [ label = "AST: "] 
  "25769803789" -> "94489280530"  [ label = "AST: "] 
  "25769803789" -> "47244640268"  [ label = "AST: "] 
  "25769803789" -> "30064771175"  [ label = "AST: "] 
  "25769803789" -> "146028888066"  [ label = "AST: "] 
  "47244640268" -> "68719476827"  [ label = "AST: "] 
  "47244640268" -> "94489280531"  [ label = "AST: "] 
  "47244640268" -> "25769803790"  [ label = "AST: "] 
  "25769803790" -> "30064771173"  [ label = "AST: "] 
  "30064771173" -> "68719476828"  [ label = "AST: "] 
  "30064771173" -> "30064771174"  [ label = "AST: "] 
  "30064771174" -> "90194313264"  [ label = "AST: "] 
  "30064771174" -> "68719476829"  [ label = "AST: "] 
  "30064771175" -> "68719476830"  [ label = "AST: "] 
  "30064771175" -> "90194313265"  [ label = "AST: "] 
  "30064771175" -> "68719476831"  [ label = "AST: "] 
  "47244640269" -> "25769803791"  [ label = "AST: "] 
  "25769803791" -> "30064771176"  [ label = "AST: "] 
  "25769803791" -> "30064771178"  [ label = "AST: "] 
  "30064771176" -> "68719476832"  [ label = "AST: "] 
  "30064771176" -> "30064771177"  [ label = "AST: "] 
  "30064771177" -> "68719476833"  [ label = "AST: "] 
  "30064771177" -> "90194313266"  [ label = "AST: "] 
  "30064771178" -> "68719476834"  [ label = "AST: "] 
  "30064771178" -> "68719476835"  [ label = "AST: "] 
  "30064771179" -> "68719476836"  [ label = "AST: "] 
  "30064771179" -> "30064771180"  [ label = "AST: "] 
  "30064771180" -> "30064771181"  [ label = "AST: "] 
  "30064771180" -> "90194313268"  [ label = "AST: "] 
  "30064771181" -> "30064771182"  [ label = "AST: "] 
  "30064771181" -> "90194313267"  [ label = "AST: "] 
  "30064771181" -> "68719476838"  [ label = "AST: "] 
  "30064771182" -> "68719476837"  [ label = "AST: "] 
  "30064771182" -> "55834574854"  [ label = "AST: "] 
  "30064771183" -> "68719476839"  [ label = "AST: "] 
  "30064771183" -> "68719476840"  [ label = "AST: "] 
  "30064771184" -> "68719476841"  [ label = "AST: "] 
  "30064771184" -> "30064771185"  [ label = "AST: "] 
  "30064771185" -> "90194313269"  [ label = "AST: "] 
  "30064771185" -> "30064771186"  [ label = "AST: "] 
  "30064771186" -> "68719476842"  [ label = "AST: "] 
  "47244640270" -> "30064771187"  [ label = "AST: "] 
  "47244640270" -> "25769803792"  [ label = "AST: "] 
  "30064771187" -> "30064771188"  [ label = "AST: "] 
  "30064771188" -> "68719476843"  [ label = "AST: "] 
  "25769803792" -> "146028888067"  [ label = "AST: "] 
  "30064771189" -> "68719476844"  [ label = "AST: "] 
  "30064771189" -> "30064771190"  [ label = "AST: "] 
  "30064771189" -> "30064771193"  [ label = "AST: "] 
  "30064771190" -> "30064771191"  [ label = "AST: "] 
  "30064771190" -> "55834574855"  [ label = "AST: "] 
  "30064771191" -> "68719476845"  [ label = "AST: "] 
  "30064771191" -> "30064771192"  [ label = "AST: "] 
  "30064771192" -> "68719476846"  [ label = "AST: "] 
  "30064771192" -> "68719476847"  [ label = "AST: "] 
  "30064771193" -> "30064771194"  [ label = "AST: "] 
  "30064771193" -> "55834574856"  [ label = "AST: "] 
  "30064771194" -> "68719476848"  [ label = "AST: "] 
  "30064771194" -> "30064771195"  [ label = "AST: "] 
  "30064771195" -> "68719476849"  [ label = "AST: "] 
  "30064771195" -> "68719476850"  [ label = "AST: "] 
  "30064771196" -> "30064771197"  [ label = "AST: "] 
  "30064771196" -> "30064771198"  [ label = "AST: "] 
  "30064771197" -> "68719476851"  [ label = "AST: "] 
  "30064771197" -> "90194313270"  [ label = "AST: "] 
  "30064771198" -> "30064771199"  [ label = "AST: "] 
  "30064771198" -> "55834574857"  [ label = "AST: "] 
  "30064771199" -> "68719476852"  [ label = "AST: "] 
  "30064771199" -> "68719476853"  [ label = "AST: "] 
  "30064771200" -> "68719476854"  [ label = "AST: "] 
  "30064771200" -> "68719476855"  [ label = "AST: "] 
  "30064771201" -> "68719476856"  [ label = "AST: "] 
  "30064771202" -> "68719476857"  [ label = "AST: "] 
  "30064771202" -> "30064771203"  [ label = "AST: "] 
  "30064771203" -> "30064771204"  [ label = "AST: "] 
  "30064771204" -> "30064771205"  [ label = "AST: "] 
  "30064771205" -> "30064771206"  [ label = "AST: "] 
  "30064771206" -> "30064771207"  [ label = "AST: "] 
  "30064771207" -> "30064771208"  [ label = "AST: "] 
  "30064771207" -> "90194313275"  [ label = "AST: "] 
  "30064771208" -> "30064771209"  [ label = "AST: "] 
  "30064771208" -> "68719476861"  [ label = "AST: "] 
  "30064771209" -> "30064771210"  [ label = "AST: "] 
  "30064771209" -> "90194313274"  [ label = "AST: "] 
  "30064771210" -> "30064771211"  [ label = "AST: "] 
  "30064771210" -> "68719476860"  [ label = "AST: "] 
  "30064771211" -> "30064771212"  [ label = "AST: "] 
  "30064771211" -> "90194313273"  [ label = "AST: "] 
  "30064771212" -> "30064771213"  [ label = "AST: "] 
  "30064771212" -> "68719476859"  [ label = "AST: "] 
  "30064771213" -> "30064771214"  [ label = "AST: "] 
  "30064771213" -> "90194313272"  [ label = "AST: "] 
  "30064771214" -> "90194313271"  [ label = "AST: "] 
  "30064771214" -> "68719476858"  [ label = "AST: "] 
  "30064771215" -> "68719476862"  [ label = "AST: "] 
  "30064771215" -> "90194313276"  [ label = "AST: "] 
  "30064771215" -> "68719476863"  [ label = "AST: "] 
  "47244640271" -> "30064771216"  [ label = "AST: "] 
  "47244640271" -> "25769803793"  [ label = "AST: "] 
  "30064771216" -> "30064771217"  [ label = "AST: "] 
  "30064771217" -> "30064771218"  [ label = "AST: "] 
  "30064771218" -> "68719476864"  [ label = "AST: "] 
  "30064771218" -> "90194313277"  [ label = "AST: "] 
  "25769803793" -> "30064771219"  [ label = "AST: "] 
  "25769803793" -> "30064771221"  [ label = "AST: "] 
  "25769803793" -> "146028888068"  [ label = "AST: "] 
  "30064771219" -> "30064771220"  [ label = "AST: "] 
  "30064771220" -> "68719476865"  [ label = "AST: "] 
  "30064771220" -> "90194313278"  [ label = "AST: "] 
  "30064771221" -> "30064771222"  [ label = "AST: "] 
  "30064771222" -> "68719476866"  [ label = "AST: "] 
  "30064771222" -> "90194313279"  [ label = "AST: "] 
  "30064771223" -> "30064771224"  [ label = "AST: "] 
  "30064771223" -> "30064771225"  [ label = "AST: "] 
  "30064771224" -> "68719476867"  [ label = "AST: "] 
  "30064771224" -> "90194313280"  [ label = "AST: "] 
  "30064771225" -> "30064771226"  [ label = "AST: "] 
  "30064771225" -> "55834574858"  [ label = "AST: "] 
  "30064771226" -> "68719476868"  [ label = "AST: "] 
  "30064771226" -> "68719476869"  [ label = "AST: "] 
  "30064771227" -> "68719476870"  [ label = "AST: "] 
  "30064771228" -> "68719476871"  [ label = "AST: "] 
  "30064771229" -> "68719476872"  [ label = "AST: "] 
  "146028888069" -> "68719476873"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771075" -> "55834574849"  [ label = "CFG: "] 
  "30064771184" -> "30064771188"  [ label = "CFG: "] 
  "30064771189" -> "30064771197"  [ label = "CFG: "] 
  "30064771196" -> "30064771200"  [ label = "CFG: "] 
  "30064771200" -> "30064771201"  [ label = "CFG: "] 
  "30064771201" -> "30064771214"  [ label = "CFG: "] 
  "30064771202" -> "30064771215"  [ label = "CFG: "] 
  "30064771215" -> "30064771218"  [ label = "CFG: "] 
  "30064771223" -> "30064771227"  [ label = "CFG: "] 
  "30064771227" -> "30064771228"  [ label = "CFG: "] 
  "30064771228" -> "30064771229"  [ label = "CFG: "] 
  "30064771229" -> "146028888069"  [ label = "CFG: "] 
  "146028888069" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771185" -> "30064771184"  [ label = "CFG: "] 
  "30064771187" -> "146028888067"  [ label = "CFG: "] 
  "30064771187" -> "30064771192"  [ label = "CFG: "] 
  "30064771190" -> "30064771195"  [ label = "CFG: "] 
  "30064771193" -> "30064771189"  [ label = "CFG: "] 
  "30064771197" -> "30064771199"  [ label = "CFG: "] 
  "30064771198" -> "30064771196"  [ label = "CFG: "] 
  "30064771203" -> "30064771202"  [ label = "CFG: "] 
  "30064771216" -> "30064771220"  [ label = "CFG: "] 
  "30064771216" -> "30064771224"  [ label = "CFG: "] 
  "30064771224" -> "30064771226"  [ label = "CFG: "] 
  "30064771225" -> "30064771223"  [ label = "CFG: "] 
  "184683593728" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771083"  [ label = "CFG: "] 
  "30064771179" -> "30064771183"  [ label = "CFG: "] 
  "30064771183" -> "55834574849"  [ label = "CFG: "] 
  "30064771183" -> "30064771186"  [ label = "CFG: "] 
  "30064771186" -> "30064771185"  [ label = "CFG: "] 
  "30064771188" -> "30064771187"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "CFG: "] 
  "30064771191" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771190"  [ label = "CFG: "] 
  "30064771194" -> "55834574856"  [ label = "CFG: "] 
  "55834574856" -> "30064771193"  [ label = "CFG: "] 
  "30064771199" -> "55834574857"  [ label = "CFG: "] 
  "55834574857" -> "30064771198"  [ label = "CFG: "] 
  "30064771204" -> "30064771203"  [ label = "CFG: "] 
  "30064771217" -> "30064771216"  [ label = "CFG: "] 
  "30064771219" -> "30064771222"  [ label = "CFG: "] 
  "30064771221" -> "146028888068"  [ label = "CFG: "] 
  "146028888068" -> "128849018880"  [ label = "CFG: "] 
  "30064771226" -> "55834574858"  [ label = "CFG: "] 
  "55834574858" -> "30064771225"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771083" -> "30064771085"  [ label = "CFG: "] 
  "30064771083" -> "30064771150"  [ label = "CFG: "] 
  "30064771180" -> "30064771179"  [ label = "CFG: "] 
  "30064771192" -> "30064771191"  [ label = "CFG: "] 
  "30064771195" -> "30064771194"  [ label = "CFG: "] 
  "30064771205" -> "30064771204"  [ label = "CFG: "] 
  "30064771218" -> "30064771217"  [ label = "CFG: "] 
  "30064771220" -> "30064771219"  [ label = "CFG: "] 
  "30064771222" -> "30064771221"  [ label = "CFG: "] 
  "30064771079" -> "55834574850"  [ label = "CFG: "] 
  "30064771080" -> "30064771078"  [ label = "CFG: "] 
  "30064771084" -> "30064771090"  [ label = "CFG: "] 
  "30064771086" -> "30064771095"  [ label = "CFG: "] 
  "30064771091" -> "30064771098"  [ label = "CFG: "] 
  "30064771096" -> "30064771107"  [ label = "CFG: "] 
  "30064771096" -> "30064771106"  [ label = "CFG: "] 
  "30064771104" -> "30064771109"  [ label = "CFG: "] 
  "30064771110" -> "30064771113"  [ label = "CFG: "] 
  "30064771181" -> "30064771180"  [ label = "CFG: "] 
  "30064771206" -> "30064771205"  [ label = "CFG: "] 
  "55834574849" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771085" -> "30064771084"  [ label = "CFG: "] 
  "30064771087" -> "30064771086"  [ label = "CFG: "] 
  "30064771092" -> "30064771091"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771105" -> "30064771104"  [ label = "CFG: "] 
  "30064771109" -> "146028888064"  [ label = "CFG: "] 
  "30064771109" -> "30064771112"  [ label = "CFG: "] 
  "30064771111" -> "30064771110"  [ label = "CFG: "] 
  "30064771113" -> "30064771115"  [ label = "CFG: "] 
  "30064771113" -> "30064771117"  [ label = "CFG: "] 
  "30064771182" -> "30064771181"  [ label = "CFG: "] 
  "30064771207" -> "30064771206"  [ label = "CFG: "] 
  "30064771082" -> "30064771081"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771099" -> "30064771102"  [ label = "CFG: "] 
  "30064771100" -> "30064771097"  [ label = "CFG: "] 
  "30064771106" -> "30064771108"  [ label = "CFG: "] 
  "30064771108" -> "30064771105"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771112" -> "30064771111"  [ label = "CFG: "] 
  "30064771114" -> "30064771116"  [ label = "CFG: "] 
  "30064771116" -> "55834574854"  [ label = "CFG: "] 
  "30064771150" -> "55834574853"  [ label = "CFG: "] 
  "30064771150" -> "30064771177"  [ label = "CFG: "] 
  "55834574854" -> "30064771182"  [ label = "CFG: "] 
  "30064771208" -> "30064771207"  [ label = "CFG: "] 
  "55834574850" -> "30064771082"  [ label = "CFG: "] 
  "30064771089" -> "30064771088"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771101" -> "30064771103"  [ label = "CFG: "] 
  "30064771103" -> "30064771100"  [ label = "CFG: "] 
  "30064771107" -> "30064771106"  [ label = "CFG: "] 
  "30064771115" -> "30064771114"  [ label = "CFG: "] 
  "30064771151" -> "30064771154"  [ label = "CFG: "] 
  "30064771154" -> "30064771156"  [ label = "CFG: "] 
  "30064771155" -> "30064771162"  [ label = "CFG: "] 
  "30064771209" -> "30064771208"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771095" -> "30064771094"  [ label = "CFG: "] 
  "30064771102" -> "30064771101"  [ label = "CFG: "] 
  "30064771117" -> "30064771120"  [ label = "CFG: "] 
  "30064771117" -> "30064771123"  [ label = "CFG: "] 
  "30064771152" -> "30064771151"  [ label = "CFG: "] 
  "30064771156" -> "184683593730"  [ label = "CFG: "] 
  "30064771157" -> "30064771155"  [ label = "CFG: "] 
  "30064771158" -> "30064771171"  [ label = "CFG: "] 
  "30064771158" -> "30064771174"  [ label = "CFG: "] 
  "30064771176" -> "30064771178"  [ label = "CFG: "] 
  "30064771178" -> "55834574854"  [ label = "CFG: "] 
  "30064771210" -> "30064771209"  [ label = "CFG: "] 
  "30064771118" -> "30064771121"  [ label = "CFG: "] 
  "30064771121" -> "55834574854"  [ label = "CFG: "] 
  "30064771153" -> "30064771152"  [ label = "CFG: "] 
  "184683593730" -> "30064771157"  [ label = "CFG: "] 
  "30064771159" -> "30064771158"  [ label = "CFG: "] 
  "30064771159" -> "30064771170"  [ label = "CFG: "] 
  "30064771169" -> "30064771158"  [ label = "CFG: "] 
  "30064771171" -> "30064771172"  [ label = "CFG: "] 
  "30064771172" -> "55834574854"  [ label = "CFG: "] 
  "30064771177" -> "30064771176"  [ label = "CFG: "] 
  "30064771211" -> "30064771210"  [ label = "CFG: "] 
  "30064771119" -> "30064771118"  [ label = "CFG: "] 
  "30064771122" -> "30064771126"  [ label = "CFG: "] 
  "30064771124" -> "30064771130"  [ label = "CFG: "] 
  "30064771134" -> "30064771139"  [ label = "CFG: "] 
  "30064771138" -> "30064771142"  [ label = "CFG: "] 
  "30064771138" -> "30064771143"  [ label = "CFG: "] 
  "30064771140" -> "30064771146"  [ label = "CFG: "] 
  "30064771144" -> "30064771149"  [ label = "CFG: "] 
  "30064771149" -> "55834574854"  [ label = "CFG: "] 
  "55834574853" -> "30064771153"  [ label = "CFG: "] 
  "30064771160" -> "30064771159"  [ label = "CFG: "] 
  "30064771160" -> "30064771168"  [ label = "CFG: "] 
  "30064771167" -> "30064771159"  [ label = "CFG: "] 
  "30064771170" -> "30064771169"  [ label = "CFG: "] 
  "30064771175" -> "146028888066"  [ label = "CFG: "] 
  "146028888066" -> "128849018880"  [ label = "CFG: "] 
  "30064771212" -> "30064771211"  [ label = "CFG: "] 
  "30064771120" -> "30064771119"  [ label = "CFG: "] 
  "30064771123" -> "30064771122"  [ label = "CFG: "] 
  "30064771125" -> "30064771124"  [ label = "CFG: "] 
  "30064771127" -> "146028888065"  [ label = "CFG: "] 
  "30064771127" -> "184683593729"  [ label = "CFG: "] 
  "30064771135" -> "30064771134"  [ label = "CFG: "] 
  "30064771139" -> "30064771138"  [ label = "CFG: "] 
  "30064771141" -> "30064771140"  [ label = "CFG: "] 
  "30064771145" -> "30064771144"  [ label = "CFG: "] 
  "30064771161" -> "30064771160"  [ label = "CFG: "] 
  "30064771161" -> "30064771166"  [ label = "CFG: "] 
  "30064771165" -> "30064771160"  [ label = "CFG: "] 
  "30064771168" -> "30064771167"  [ label = "CFG: "] 
  "30064771213" -> "30064771212"  [ label = "CFG: "] 
  "30064771126" -> "30064771125"  [ label = "CFG: "] 
  "30064771128" -> "30064771127"  [ label = "CFG: "] 
  "30064771128" -> "30064771133"  [ label = "CFG: "] 
  "30064771131" -> "30064771127"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771136" -> "30064771135"  [ label = "CFG: "] 
  "30064771142" -> "30064771141"  [ label = "CFG: "] 
  "30064771143" -> "30064771141"  [ label = "CFG: "] 
  "30064771146" -> "30064771147"  [ label = "CFG: "] 
  "30064771147" -> "30064771148"  [ label = "CFG: "] 
  "30064771148" -> "30064771145"  [ label = "CFG: "] 
  "30064771162" -> "30064771161"  [ label = "CFG: "] 
  "30064771162" -> "30064771164"  [ label = "CFG: "] 
  "30064771163" -> "30064771161"  [ label = "CFG: "] 
  "30064771166" -> "30064771165"  [ label = "CFG: "] 
  "30064771173" -> "30064771174"  [ label = "CFG: "] 
  "30064771173" -> "30064771175"  [ label = "CFG: "] 
  "30064771214" -> "30064771213"  [ label = "CFG: "] 
  "30064771129" -> "30064771128"  [ label = "CFG: "] 
  "30064771132" -> "30064771131"  [ label = "CFG: "] 
  "30064771137" -> "30064771136"  [ label = "CFG: "] 
  "30064771164" -> "30064771163"  [ label = "CFG: "] 
  "30064771174" -> "30064771173"  [ label = "CFG: "] 
  "30064771130" -> "55834574851"  [ label = "CFG: "] 
  "55834574851" -> "30064771129"  [ label = "CFG: "] 
  "30064771133" -> "55834574852"  [ label = "CFG: "] 
  "55834574852" -> "30064771132"  [ label = "CFG: "] 
  "184683593729" -> "30064771137"  [ label = "CFG: "] 
  "111669149697" -> "184683593728"  [ label = "CFG: "] 
  "146028888067" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888068" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888069" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888066" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: probe"] 
  "30064771072" -> "128849018880"  [ label = "DDG: currentAddress"] 
  "30064771072" -> "128849018880"  [ label = "DDG: (uint64_t)m_pSource"] 
  "30064771072" -> "128849018880"  [ label = "DDG: currentAddress = (uint64_t)m_pSource"] 
  "30064771074" -> "128849018880"  [ label = "DDG: lastAsmNewline = 0"] 
  "30064771075" -> "128849018880"  [ label = "DDG: currentDestinationOffset"] 
  "30064771075" -> "128849018880"  [ label = "DDG: currentDestinationOffset = 0"] 
  "30064771078" -> "128849018880"  [ label = "DDG: probe.assembly"] 
  "30064771078" -> "128849018880"  [ label = "DDG: lastAsmNewline"] 
  "30064771080" -> "128849018880"  [ label = "DDG: probe.assembly.find(&quot;\n&quot;, lastAsmNewline)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: probe.assembly.find(&quot;\n&quot;, lastAsmNewline) - lastAsmNewline"] 
  "30064771077" -> "128849018880"  [ label = "DDG: probe.assembly.substr(lastAsmNewline, probe.assembly.find(&quot;\n&quot;, lastAsmNewline) - lastAsmNewline)"] 
  "30064771077" -> "128849018880"  [ label = "DDG: code = probe.assembly.substr(lastAsmNewline, probe.assembly.find(&quot;\n&quot;, lastAsmNewline) - lastAsmNewline)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: code.contains(&quot;%rip&quot;)"] 
  "30064771150" -> "128849018880"  [ label = "DDG: code.contains(&quot;invalid&quot;)"] 
  "30064771176" -> "128849018880"  [ label = "DDG: assemblyBuilder"] 
  "30064771176" -> "128849018880"  [ label = "DDG: code + &quot;\n&quot;"] 
  "30064771176" -> "128849018880"  [ label = "DDG: assemblyBuilder += code + &quot;\n&quot;"] 
  "30064771178" -> "128849018880"  [ label = "DDG: currentDestinationOffset"] 
  "30064771178" -> "128849018880"  [ label = "DDG: currentDestinationOffset += len"] 
  "30064771152" -> "128849018880"  [ label = "DDG: std::vector"] 
  "30064771151" -> "128849018880"  [ label = "DDG: std::vector&lt;uint8_t"] 
  "30064771151" -> "128849018880"  [ label = "DDG: std::vector&lt;uint8_t&gt; bytes"] 
  "30064771154" -> "128849018880"  [ label = "DDG: bytes.resize(len)"] 
  "30064771156" -> "128849018880"  [ label = "DDG: bytes"] 
  "30064771155" -> "128849018880"  [ label = "DDG: bytes.data()"] 
  "30064771155" -> "128849018880"  [ label = "DDG: (std::byte*)currentAddress"] 
  "30064771155" -> "128849018880"  [ label = "DDG: memcpy(bytes.data(), (std::byte*)currentAddress, len)"] 
  "30064771161" -> "128849018880"  [ label = "DDG: len == 4"] 
  "30064771163" -> "128849018880"  [ label = "DDG: bytes[0]"] 
  "30064771161" -> "128849018880"  [ label = "DDG: bytes[0] == 0xF3"] 
  "30064771160" -> "128849018880"  [ label = "DDG: len == 4 &amp;&amp; bytes[0] == 0xF3"] 
  "30064771165" -> "128849018880"  [ label = "DDG: bytes[1]"] 
  "30064771160" -> "128849018880"  [ label = "DDG: bytes[1] == 0x0F"] 
  "30064771159" -> "128849018880"  [ label = "DDG: len == 4 &amp;&amp; bytes[0] == 0xF3 &amp;&amp; bytes[1] == 0x0F"] 
  "30064771167" -> "128849018880"  [ label = "DDG: bytes[2]"] 
  "30064771159" -> "128849018880"  [ label = "DDG: bytes[2] == 0x1E"] 
  "30064771158" -> "128849018880"  [ label = "DDG: len == 4 &amp;&amp; bytes[0] == 0xF3 &amp;&amp; bytes[1] == 0x0F &amp;&amp; bytes[2] == 0x1E"] 
  "30064771169" -> "128849018880"  [ label = "DDG: bytes[3]"] 
  "30064771158" -> "128849018880"  [ label = "DDG: bytes[3] == 0xFA"] 
  "30064771158" -> "128849018880"  [ label = "DDG: len == 4 &amp;&amp; bytes[0] == 0xF3 &amp;&amp; bytes[1] == 0x0F &amp;&amp; bytes[2] == 0x1E &amp;&amp; bytes[3] == 0xFA"] 
  "30064771171" -> "128849018880"  [ label = "DDG: assemblyBuilder"] 
  "30064771171" -> "128849018880"  [ label = "DDG: assemblyBuilder += &quot;endbr64\n&quot;"] 
  "30064771172" -> "128849018880"  [ label = "DDG: currentDestinationOffset"] 
  "30064771172" -> "128849018880"  [ label = "DDG: currentDestinationOffset += 4"] 
  "30064771084" -> "128849018880"  [ label = "DDG: tokens"] 
  "30064771085" -> "128849018880"  [ label = "DDG: code"] 
  "30064771084" -> "128849018880"  [ label = "DDG: {code, 0, 's'}"] 
  "30064771084" -> "128849018880"  [ label = "DDG: tokens{code, 0, 's'}"] 
  "30064771087" -> "128849018880"  [ label = "DDG: tokens[1][0] == '+'"] 
  "30064771086" -> "128849018880"  [ label = "DDG: tokens[1][0] == '+' ? 1 : 0"] 
  "30064771086" -> "128849018880"  [ label = "DDG: plusPresent  = tokens[1][0] == '+' ? 1 : 0"] 
  "30064771093" -> "128849018880"  [ label = "DDG: tokens[1][0]"] 
  "30064771092" -> "128849018880"  [ label = "DDG: tokens[1][0] == '-'"] 
  "30064771091" -> "128849018880"  [ label = "DDG: tokens[1][0] == '-' ? 1 : 0"] 
  "30064771091" -> "128849018880"  [ label = "DDG: minusPresent = tokens[1][0] == '-' ? 1 : 0"] 
  "30064771097" -> "128849018880"  [ label = "DDG: tokens[1]"] 
  "30064771097" -> "128849018880"  [ label = "DDG: plusPresent || minusPresent"] 
  "30064771100" -> "128849018880"  [ label = "DDG: tokens[1].find(&quot;(%rip)&quot;)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: plusPresent"] 
  "30064771097" -> "128849018880"  [ label = "DDG: tokens[1].find(&quot;(%rip)&quot;) - (plusPresent || minusPresent)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: tokens[1].substr((plusPresent || minusPresent), tokens[1].find(&quot;(%rip)&quot;) - (plusPresent || minusPresent))"] 
  "30064771096" -> "128849018880"  [ label = "DDG: addr         = tokens[1].substr((plusPresent || minusPresent), tokens[1].find(&quot;(%rip)&quot;) - (plusPresent || minusPresent))"] 
  "30064771106" -> "128849018880"  [ label = "DDG: minusPresent"] 
  "30064771106" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771105" -> "128849018880"  [ label = "DDG: minusPresent ? -1 : 1"] 
  "30064771108" -> "128849018880"  [ label = "DDG: addr"] 
  "30064771105" -> "128849018880"  [ label = "DDG: configStringToInt(addr)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: (minusPresent ? -1 : 1) * configStringToInt(addr)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: OFFSET       = (minusPresent ? -1 : 1) * configStringToInt(addr)"] 
  "30064771109" -> "128849018880"  [ label = "DDG: OFFSET"] 
  "30064771109" -> "128849018880"  [ label = "DDG: OFFSET == 0"] 
  "30064771111" -> "128849018880"  [ label = "DDG: currentAddress + OFFSET"] 
  "30064771110" -> "128849018880"  [ label = "DDG: currentAddress + OFFSET + len"] 
  "30064771110" -> "128849018880"  [ label = "DDG: DESTINATION = currentAddress + OFFSET + len"] 
  "30064771113" -> "128849018880"  [ label = "DDG: code.starts_with(&quot;call&quot;)"] 
  "30064771117" -> "128849018880"  [ label = "DDG: code.starts_with(&quot;lea&quot;)"] 
  "30064771122" -> "128849018880"  [ label = "DDG: code.find(&quot;(%rip)&quot;)"] 
  "30064771122" -> "128849018880"  [ label = "DDG: ADDREND   = code.find(&quot;(%rip)&quot;)"] 
  "30064771125" -> "128849018880"  [ label = "DDG: code.substr(0, ADDREND)"] 
  "30064771124" -> "128849018880"  [ label = "DDG: code.substr(0, ADDREND).find_last_of(' ')"] 
  "30064771124" -> "128849018880"  [ label = "DDG: ADDRSTART = (code.substr(0, ADDREND).find_last_of(' '))"] 
  "30064771128" -> "128849018880"  [ label = "DDG: std::string::npos"] 
  "30064771127" -> "128849018880"  [ label = "DDG: ADDREND == std::string::npos"] 
  "30064771131" -> "128849018880"  [ label = "DDG: std::string::npos"] 
  "30064771127" -> "128849018880"  [ label = "DDG: ADDRSTART == std::string::npos"] 
  "30064771127" -> "128849018880"  [ label = "DDG: ADDREND == std::string::npos || ADDRSTART == std::string::npos"] 
  "30064771136" -> "128849018880"  [ label = "DDG: (uint64_t)m_pTrampolineAddr"] 
  "30064771135" -> "128849018880"  [ label = "DDG: (uint64_t)m_pTrampolineAddr + currentDestinationOffset"] 
  "30064771134" -> "128849018880"  [ label = "DDG: (uint64_t)m_pTrampolineAddr + currentDestinationOffset + len"] 
  "30064771134" -> "128849018880"  [ label = "DDG: PREDICTEDRIP = (uint64_t)m_pTrampolineAddr + currentDestinationOffset + len"] 
  "30064771138" -> "128849018880"  [ label = "DDG: DESTINATION &gt; PREDICTEDRIP"] 
  "30064771138" -> "128849018880"  [ label = "DDG: POSITIVE     = DESTINATION &gt; PREDICTEDRIP"] 
  "30064771143" -> "128849018880"  [ label = "DDG: PREDICTEDRIP"] 
  "30064771143" -> "128849018880"  [ label = "DDG: DESTINATION"] 
  "30064771141" -> "128849018880"  [ label = "DDG: PREDICTEDRIP - DESTINATION"] 
  "30064771142" -> "128849018880"  [ label = "DDG: DESTINATION"] 
  "30064771142" -> "128849018880"  [ label = "DDG: PREDICTEDRIP"] 
  "30064771141" -> "128849018880"  [ label = "DDG: DESTINATION - PREDICTEDRIP"] 
  "30064771140" -> "128849018880"  [ label = "DDG: POSITIVE ? DESTINATION - PREDICTEDRIP : PREDICTEDRIP - DESTINATION"] 
  "30064771140" -> "128849018880"  [ label = "DDG: NEWRIPOFFSET = POSITIVE ? DESTINATION - PREDICTEDRIP : PREDICTEDRIP - DESTINATION"] 
  "30064771144" -> "128849018880"  [ label = "DDG: assemblyBuilder"] 
  "30064771146" -> "128849018880"  [ label = "DDG: ADDRSTART"] 
  "30064771145" -> "128849018880"  [ label = "DDG: code.substr(0, ADDRSTART)"] 
  "30064771147" -> "128849018880"  [ label = "DDG: POSITIVE"] 
  "30064771145" -> "128849018880"  [ label = "DDG: POSITIVE ? '+' : '-'"] 
  "30064771145" -> "128849018880"  [ label = "DDG: NEWRIPOFFSET"] 
  "30064771148" -> "128849018880"  [ label = "DDG: ADDREND"] 
  "30064771145" -> "128849018880"  [ label = "DDG: code.substr(ADDREND)"] 
  "30064771144" -> "128849018880"  [ label = "DDG: std::format(&quot;{} {}0x{:x}{}\n&quot;, code.substr(0, ADDRSTART), POSITIVE ? '+' : '-', NEWRIPOFFSET, code.substr(ADDREND))"] 
  "30064771144" -> "128849018880"  [ label = "DDG: assemblyBuilder += std::format(&quot;{} {}0x{:x}{}\n&quot;, code.substr(0, ADDRSTART), POSITIVE ? '+' : '-', NEWRIPOFFSET, code.substr(ADDREND))"] 
  "30064771149" -> "128849018880"  [ label = "DDG: currentDestinationOffset"] 
  "30064771149" -> "128849018880"  [ label = "DDG: currentDestinationOffset += len"] 
  "30064771118" -> "128849018880"  [ label = "DDG: assemblyBuilder"] 
  "30064771119" -> "128849018880"  [ label = "DDG: DESTINATION"] 
  "30064771119" -> "128849018880"  [ label = "DDG: tokens[2]"] 
  "30064771118" -> "128849018880"  [ label = "DDG: std::format(&quot;movabs $0x{:x}, {}\n&quot;, DESTINATION, tokens[2])"] 
  "30064771118" -> "128849018880"  [ label = "DDG: assemblyBuilder += std::format(&quot;movabs $0x{:x}, {}\n&quot;, DESTINATION, tokens[2])"] 
  "30064771121" -> "128849018880"  [ label = "DDG: currentDestinationOffset"] 
  "30064771121" -> "128849018880"  [ label = "DDG: currentDestinationOffset += 10"] 
  "30064771114" -> "128849018880"  [ label = "DDG: assemblyBuilder"] 
  "30064771115" -> "128849018880"  [ label = "DDG: DESTINATION"] 
  "30064771114" -> "128849018880"  [ label = "DDG: std::format(&quot;pushq %rax\nmovabs $0x{:x}, %rax\ncallq *%rax\npopq %rax\n&quot;, DESTINATION)"] 
  "30064771114" -> "128849018880"  [ label = "DDG: assemblyBuilder += std::format(&quot;pushq %rax\nmovabs $0x{:x}, %rax\ncallq *%rax\npopq %rax\n&quot;, DESTINATION)"] 
  "30064771116" -> "128849018880"  [ label = "DDG: currentDestinationOffset"] 
  "30064771116" -> "128849018880"  [ label = "DDG: currentDestinationOffset += 14"] 
  "30064771179" -> "128849018880"  [ label = "DDG: probe.assembly.find(&quot;\n&quot;, lastAsmNewline) + 1"] 
  "30064771179" -> "128849018880"  [ label = "DDG: lastAsmNewline = probe.assembly.find(&quot;\n&quot;, lastAsmNewline) + 1"] 
  "30064771183" -> "128849018880"  [ label = "DDG: currentAddress"] 
  "30064771183" -> "128849018880"  [ label = "DDG: len"] 
  "30064771183" -> "128849018880"  [ label = "DDG: currentAddress += len"] 
  "30064771152" -> "128849018880"  [ label = "DDG: uint8_t"] 
  "30064771175" -> "128849018880"  [ label = "DDG: ERR"] 
  "30064771174" -> "128849018880"  [ label = "DDG: b"] 
  "30064771137" -> "128849018880"  [ label = "DDG: m_pTrampolineAddr"] 
  "30064771073" -> "128849018880"  [ label = "DDG: m_pSource"] 
  "30064771215" -> "128849018880"  [ label = "DDG: LOG"] 
  "30064771186" -> "128849018880"  [ label = "DDG: g_pTokenManager"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771184"  [ label = "DDG: "] 
  "30064771186" -> "30064771184"  [ label = "DDG: g_pTokenManager"] 
  "30064771203" -> "30064771202"  [ label = "DDG: std::string{&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode.asm -o &quot; + RANDOMDIR + &quot;/.hookbinary.o 2&gt;&amp;1 &amp;&amp; objcopy -O binary -j .text &quot; +
                                             RANDOMDIR + &quot;/.hookbinary.o &quot; + RANDOMDIR + &quot;/.hookbinary2.o 2&gt;&amp;1&quot;}
                                     .c_str()"] 
  "68719476873" -> "146028888069"  [ label = "DDG: returns"] 
  "30064771188" -> "30064771189"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771189"  [ label = "DDG: "] 
  "30064771189" -> "30064771196"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771196"  [ label = "DDG: "] 
  "111669149697" -> "30064771200"  [ label = "DDG: "] 
  "30064771176" -> "30064771200"  [ label = "DDG: assemblyBuilder"] 
  "30064771171" -> "30064771200"  [ label = "DDG: assemblyBuilder"] 
  "30064771144" -> "30064771200"  [ label = "DDG: assemblyBuilder"] 
  "30064771118" -> "30064771200"  [ label = "DDG: assemblyBuilder"] 
  "30064771114" -> "30064771200"  [ label = "DDG: assemblyBuilder"] 
  "30064771200" -> "30064771201"  [ label = "DDG: ofs"] 
  "111669149697" -> "30064771201"  [ label = "DDG: "] 
  "111669149697" -> "30064771215"  [ label = "DDG: "] 
  "30064771202" -> "30064771215"  [ label = "DDG: ret"] 
  "111669149697" -> "30064771223"  [ label = "DDG: "] 
  "30064771189" -> "30064771223"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771228"  [ label = "DDG: "] 
  "111669149697" -> "30064771229"  [ label = "DDG: "] 
  "30064771189" -> "30064771229"  [ label = "DDG: RANDOMDIR"] 
  "30064771227" -> "68719476873"  [ label = "DDG: returns"] 
  "111669149697" -> "68719476873"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: probe.assembly"] 
  "30064771078" -> "30064771077"  [ label = "DDG: lastAsmNewline"] 
  "30064771078" -> "30064771077"  [ label = "DDG: probe.assembly.find(&quot;\n&quot;, lastAsmNewline) - lastAsmNewline"] 
  "30064771181" -> "30064771179"  [ label = "DDG: probe.assembly"] 
  "30064771181" -> "30064771179"  [ label = "DDG: &quot;\n&quot;"] 
  "30064771181" -> "30064771179"  [ label = "DDG: lastAsmNewline"] 
  "111669149697" -> "30064771179"  [ label = "DDG: "] 
  "30064771162" -> "30064771183"  [ label = "DDG: len"] 
  "111669149697" -> "30064771183"  [ label = "DDG: "] 
  "111669149697" -> "30064771185"  [ label = "DDG: "] 
  "30064771186" -> "30064771185"  [ label = "DDG: g_pTokenManager"] 
  "30064771188" -> "30064771187"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "146028888067"  [ label = "DDG: "] 
  "30064771189" -> "30064771197"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771197"  [ label = "DDG: "] 
  "30064771204" -> "30064771203"  [ label = "DDG: std::string{&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode.asm -o &quot; + RANDOMDIR + &quot;/.hookbinary.o 2&gt;&amp;1 &amp;&amp; objcopy -O binary -j .text &quot; +
                                             RANDOMDIR + &quot;/.hookbinary.o &quot; + RANDOMDIR + &quot;/.hookbinary2.o 2&gt;&amp;1&quot;}"] 
  "30064771217" -> "30064771216"  [ label = "DDG: RANDOMDIR + &quot;/.hookbinary2.o&quot;"] 
  "111669149697" -> "146028888068"  [ label = "DDG: "] 
  "111669149697" -> "30064771224"  [ label = "DDG: "] 
  "30064771189" -> "30064771224"  [ label = "DDG: RANDOMDIR"] 
  "30064771072" -> "30064771183"  [ label = "DDG: currentAddress"] 
  "111669149697" -> "30064771186"  [ label = "DDG: "] 
  "30064771184" -> "30064771188"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771188"  [ label = "DDG: "] 
  "30064771205" -> "30064771204"  [ label = "DDG: {&quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode.asm -o &quot; + RANDOMDIR + &quot;/.hookbinary.o 2&gt;&amp;1 &amp;&amp; objcopy -O binary -j .text &quot; +
                                             RANDOMDIR + &quot;/.hookbinary.o &quot; + RANDOMDIR + &quot;/.hookbinary2.o 2&gt;&amp;1&quot;}"] 
  "111669149697" -> "30064771217"  [ label = "DDG: "] 
  "30064771189" -> "30064771217"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771219"  [ label = "DDG: "] 
  "30064771189" -> "30064771219"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771221"  [ label = "DDG: "] 
  "30064771189" -> "30064771221"  [ label = "DDG: RANDOMDIR"] 
  "115964116992" -> "30064771078"  [ label = "DDG: probe"] 
  "30064771081" -> "30064771078"  [ label = "DDG: probe.assembly"] 
  "30064771080" -> "30064771078"  [ label = "DDG: lastAsmNewline"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "30064771080" -> "30064771078"  [ label = "DDG: probe.assembly.find(&quot;\n&quot;, lastAsmNewline)"] 
  "30064771077" -> "30064771083"  [ label = "DDG: code"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771085" -> "30064771084"  [ label = "DDG: code"] 
  "30064771085" -> "30064771084"  [ label = "DDG: 0"] 
  "30064771085" -> "30064771084"  [ label = "DDG: 's'"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771097" -> "30064771096"  [ label = "DDG: tokens[1]"] 
  "30064771097" -> "30064771096"  [ label = "DDG: plusPresent || minusPresent"] 
  "30064771097" -> "30064771096"  [ label = "DDG: tokens[1].find(&quot;(%rip)&quot;) - (plusPresent || minusPresent)"] 
  "30064771105" -> "30064771104"  [ label = "DDG: minusPresent ? -1 : 1"] 
  "30064771105" -> "30064771104"  [ label = "DDG: configStringToInt(addr)"] 
  "30064771072" -> "30064771110"  [ label = "DDG: currentAddress"] 
  "30064771183" -> "30064771110"  [ label = "DDG: currentAddress"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771109" -> "30064771110"  [ label = "DDG: OFFSET"] 
  "30064771181" -> "30064771180"  [ label = "DDG: probe.assembly"] 
  "30064771181" -> "30064771180"  [ label = "DDG: &quot;\n&quot;"] 
  "30064771181" -> "30064771180"  [ label = "DDG: lastAsmNewline"] 
  "111669149697" -> "30064771180"  [ label = "DDG: "] 
  "30064771206" -> "30064771205"  [ label = "DDG: &quot;cc -x assembler -c &quot; + RANDOMDIR + &quot;/.hookcode.asm -o &quot; + RANDOMDIR + &quot;/.hookbinary.o 2&gt;&amp;1 &amp;&amp; objcopy -O binary -j .text &quot; +
                                             RANDOMDIR + &quot;/.hookbinary.o &quot; + RANDOMDIR + &quot;/.hookbinary2.o 2&gt;&amp;1&quot;"] 
  "111669149697" -> "30064771218"  [ label = "DDG: "] 
  "30064771189" -> "30064771218"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771220"  [ label = "DDG: "] 
  "30064771189" -> "30064771220"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771222"  [ label = "DDG: "] 
  "30064771189" -> "30064771222"  [ label = "DDG: RANDOMDIR"] 
  "30064771081" -> "30064771080"  [ label = "DDG: probe.assembly"] 
  "30064771081" -> "30064771080"  [ label = "DDG: &quot;\n&quot;"] 
  "30064771081" -> "30064771080"  [ label = "DDG: lastAsmNewline"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "115964116992" -> "30064771181"  [ label = "DDG: probe"] 
  "30064771078" -> "30064771181"  [ label = "DDG: probe.assembly"] 
  "111669149697" -> "30064771181"  [ label = "DDG: "] 
  "30064771078" -> "30064771181"  [ label = "DDG: lastAsmNewline"] 
  "111669149697" -> "30064771206"  [ label = "DDG: "] 
  "30064771189" -> "30064771206"  [ label = "DDG: RANDOMDIR"] 
  "115964116992" -> "30064771081"  [ label = "DDG: probe"] 
  "30064771181" -> "30064771081"  [ label = "DDG: probe.assembly"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771074" -> "30064771081"  [ label = "DDG: lastAsmNewline"] 
  "30064771179" -> "30064771081"  [ label = "DDG: lastAsmNewline"] 
  "30064771083" -> "30064771085"  [ label = "DDG: code"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771084" -> "30064771097"  [ label = "DDG: tokens"] 
  "30064771093" -> "30064771097"  [ label = "DDG: tokens[1][0]"] 
  "30064771101" -> "30064771097"  [ label = "DDG: tokens[1]"] 
  "30064771100" -> "30064771097"  [ label = "DDG: plusPresent || minusPresent"] 
  "30064771099" -> "30064771097"  [ label = "DDG: plusPresent"] 
  "30064771099" -> "30064771097"  [ label = "DDG: minusPresent"] 
  "30064771100" -> "30064771097"  [ label = "DDG: tokens[1].find(&quot;(%rip)&quot;)"] 
  "30064771107" -> "30064771105"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771108" -> "30064771105"  [ label = "DDG: addr"] 
  "30064771104" -> "30064771109"  [ label = "DDG: OFFSET"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "30064771072" -> "30064771111"  [ label = "DDG: currentAddress"] 
  "30064771183" -> "30064771111"  [ label = "DDG: currentAddress"] 
  "111669149697" -> "30064771111"  [ label = "DDG: "] 
  "30064771109" -> "30064771111"  [ label = "DDG: OFFSET"] 
  "30064771085" -> "30064771113"  [ label = "DDG: code"] 
  "111669149697" -> "30064771113"  [ label = "DDG: "] 
  "30064771115" -> "30064771114"  [ label = "DDG: &quot;pushq %rax\nmovabs $0x{:x}, %rax\ncallq *%rax\npopq %rax\n&quot;"] 
  "30064771115" -> "30064771114"  [ label = "DDG: DESTINATION"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "111669149697" -> "30064771207"  [ label = "DDG: "] 
  "30064771189" -> "30064771207"  [ label = "DDG: RANDOMDIR"] 
  "30064771093" -> "30064771088"  [ label = "DDG: tokens[1][0]"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771088" -> "30064771093"  [ label = "DDG: tokens[1][0]"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "30064771086" -> "30064771099"  [ label = "DDG: plusPresent"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "30064771091" -> "30064771099"  [ label = "DDG: minusPresent"] 
  "30064771101" -> "30064771100"  [ label = "DDG: tokens[1]"] 
  "30064771101" -> "30064771100"  [ label = "DDG: &quot;(%rip)&quot;"] 
  "30064771103" -> "30064771100"  [ label = "DDG: plusPresent"] 
  "30064771103" -> "30064771100"  [ label = "DDG: minusPresent"] 
  "30064771107" -> "30064771106"  [ label = "DDG: 1"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "30064771096" -> "30064771108"  [ label = "DDG: addr"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771072" -> "30064771112"  [ label = "DDG: currentAddress"] 
  "30064771183" -> "30064771112"  [ label = "DDG: currentAddress"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771109" -> "30064771112"  [ label = "DDG: OFFSET"] 
  "30064771176" -> "30064771114"  [ label = "DDG: assemblyBuilder"] 
  "30064771171" -> "30064771114"  [ label = "DDG: assemblyBuilder"] 
  "30064771144" -> "30064771114"  [ label = "DDG: assemblyBuilder"] 
  "30064771118" -> "30064771114"  [ label = "DDG: assemblyBuilder"] 
  "111669149697" -> "30064771114"  [ label = "DDG: "] 
  "30064771075" -> "30064771116"  [ label = "DDG: currentDestinationOffset"] 
  "30064771178" -> "30064771116"  [ label = "DDG: currentDestinationOffset"] 
  "30064771172" -> "30064771116"  [ label = "DDG: currentDestinationOffset"] 
  "30064771149" -> "30064771116"  [ label = "DDG: currentDestinationOffset"] 
  "30064771121" -> "30064771116"  [ label = "DDG: currentDestinationOffset"] 
  "30064771083" -> "30064771150"  [ label = "DDG: code"] 
  "111669149697" -> "30064771150"  [ label = "DDG: "] 
  "111669149697" -> "30064771208"  [ label = "DDG: "] 
  "30064771189" -> "30064771208"  [ label = "DDG: RANDOMDIR"] 
  "30064771084" -> "30064771101"  [ label = "DDG: tokens"] 
  "30064771093" -> "30064771101"  [ label = "DDG: tokens[1][0]"] 
  "30064771097" -> "30064771101"  [ label = "DDG: tokens[1]"] 
  "111669149697" -> "30064771101"  [ label = "DDG: "] 
  "30064771099" -> "30064771103"  [ label = "DDG: plusPresent"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771099" -> "30064771103"  [ label = "DDG: minusPresent"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771110" -> "30064771115"  [ label = "DDG: DESTINATION"] 
  "30064771152" -> "30064771151"  [ label = "DDG: std::vector"] 
  "30064771152" -> "30064771151"  [ label = "DDG: uint8_t"] 
  "30064771156" -> "30064771151"  [ label = "DDG: bytes"] 
  "30064771163" -> "30064771151"  [ label = "DDG: bytes[0]"] 
  "30064771165" -> "30064771151"  [ label = "DDG: bytes[1]"] 
  "30064771167" -> "30064771151"  [ label = "DDG: bytes[2]"] 
  "30064771169" -> "30064771151"  [ label = "DDG: bytes[3]"] 
  "111669149697" -> "30064771151"  [ label = "DDG: "] 
  "30064771151" -> "30064771154"  [ label = "DDG: bytes"] 
  "30064771163" -> "30064771154"  [ label = "DDG: bytes[0]"] 
  "30064771165" -> "30064771154"  [ label = "DDG: bytes[1]"] 
  "30064771167" -> "30064771154"  [ label = "DDG: bytes[2]"] 
  "30064771169" -> "30064771154"  [ label = "DDG: bytes[3]"] 
  "111669149697" -> "30064771154"  [ label = "DDG: "] 
  "30064771162" -> "30064771154"  [ label = "DDG: len"] 
  "30064771156" -> "30064771155"  [ label = "DDG: bytes"] 
  "30064771072" -> "30064771155"  [ label = "DDG: currentAddress"] 
  "30064771183" -> "30064771155"  [ label = "DDG: currentAddress"] 
  "111669149697" -> "30064771155"  [ label = "DDG: "] 
  "30064771154" -> "30064771155"  [ label = "DDG: len"] 
  "30064771150" -> "30064771176"  [ label = "DDG: code"] 
  "111669149697" -> "30064771176"  [ label = "DDG: "] 
  "111669149697" -> "30064771178"  [ label = "DDG: "] 
  "111669149697" -> "30064771209"  [ label = "DDG: "] 
  "30064771189" -> "30064771209"  [ label = "DDG: RANDOMDIR"] 
  "30064771113" -> "30064771117"  [ label = "DDG: code"] 
  "111669149697" -> "30064771117"  [ label = "DDG: "] 
  "30064771119" -> "30064771118"  [ label = "DDG: &quot;movabs $0x{:x}, {}\n&quot;"] 
  "30064771119" -> "30064771118"  [ label = "DDG: DESTINATION"] 
  "30064771119" -> "30064771118"  [ label = "DDG: tokens[2]"] 
  "111669149697" -> "30064771121"  [ label = "DDG: "] 
  "111669149697" -> "30064771152"  [ label = "DDG: "] 
  "30064771154" -> "30064771156"  [ label = "DDG: bytes"] 
  "30064771163" -> "30064771156"  [ label = "DDG: bytes[0]"] 
  "30064771165" -> "30064771156"  [ label = "DDG: bytes[1]"] 
  "30064771167" -> "30064771156"  [ label = "DDG: bytes[2]"] 
  "30064771169" -> "30064771156"  [ label = "DDG: bytes[3]"] 
  "111669149697" -> "30064771156"  [ label = "DDG: "] 
  "30064771072" -> "30064771157"  [ label = "DDG: currentAddress"] 
  "30064771183" -> "30064771157"  [ label = "DDG: currentAddress"] 
  "111669149697" -> "30064771157"  [ label = "DDG: "] 
  "30064771159" -> "30064771158"  [ label = "DDG: len == 4 &amp;&amp; bytes[0] == 0xF3 &amp;&amp; bytes[1] == 0x0F"] 
  "30064771159" -> "30064771158"  [ label = "DDG: bytes[2] == 0x1E"] 
  "30064771169" -> "30064771158"  [ label = "DDG: bytes[3]"] 
  "30064771169" -> "30064771158"  [ label = "DDG: 0xFA"] 
  "111669149697" -> "30064771171"  [ label = "DDG: "] 
  "111669149697" -> "30064771172"  [ label = "DDG: "] 
  "30064771171" -> "30064771176"  [ label = "DDG: assemblyBuilder"] 
  "30064771144" -> "30064771176"  [ label = "DDG: assemblyBuilder"] 
  "30064771118" -> "30064771176"  [ label = "DDG: assemblyBuilder"] 
  "30064771114" -> "30064771176"  [ label = "DDG: assemblyBuilder"] 
  "30064771075" -> "30064771178"  [ label = "DDG: currentDestinationOffset"] 
  "30064771172" -> "30064771178"  [ label = "DDG: currentDestinationOffset"] 
  "30064771149" -> "30064771178"  [ label = "DDG: currentDestinationOffset"] 
  "30064771121" -> "30064771178"  [ label = "DDG: currentDestinationOffset"] 
  "30064771116" -> "30064771178"  [ label = "DDG: currentDestinationOffset"] 
  "111669149697" -> "30064771210"  [ label = "DDG: "] 
  "30064771189" -> "30064771210"  [ label = "DDG: RANDOMDIR"] 
  "30064771176" -> "30064771118"  [ label = "DDG: assemblyBuilder"] 
  "30064771171" -> "30064771118"  [ label = "DDG: assemblyBuilder"] 
  "30064771144" -> "30064771118"  [ label = "DDG: assemblyBuilder"] 
  "30064771114" -> "30064771118"  [ label = "DDG: assemblyBuilder"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "30064771075" -> "30064771121"  [ label = "DDG: currentDestinationOffset"] 
  "30064771178" -> "30064771121"  [ label = "DDG: currentDestinationOffset"] 
  "30064771172" -> "30064771121"  [ label = "DDG: currentDestinationOffset"] 
  "30064771149" -> "30064771121"  [ label = "DDG: currentDestinationOffset"] 
  "30064771116" -> "30064771121"  [ label = "DDG: currentDestinationOffset"] 
  "30064771123" -> "30064771122"  [ label = "DDG: code"] 
  "30064771123" -> "30064771122"  [ label = "DDG: &quot;(%rip)&quot;"] 
  "30064771125" -> "30064771124"  [ label = "DDG: code.substr(0, ADDREND)"] 
  "30064771125" -> "30064771124"  [ label = "DDG: ' '"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771075" -> "30064771134"  [ label = "DDG: currentDestinationOffset"] 
  "30064771178" -> "30064771134"  [ label = "DDG: currentDestinationOffset"] 
  "30064771172" -> "30064771134"  [ label = "DDG: currentDestinationOffset"] 
  "30064771149" -> "30064771134"  [ label = "DDG: currentDestinationOffset"] 
  "30064771121" -> "30064771134"  [ label = "DDG: currentDestinationOffset"] 
  "30064771116" -> "30064771134"  [ label = "DDG: currentDestinationOffset"] 
  "30064771139" -> "30064771138"  [ label = "DDG: DESTINATION"] 
  "30064771139" -> "30064771138"  [ label = "DDG: PREDICTEDRIP"] 
  "30064771142" -> "30064771140"  [ label = "DDG: DESTINATION"] 
  "30064771142" -> "30064771140"  [ label = "DDG: PREDICTEDRIP"] 
  "30064771143" -> "30064771140"  [ label = "DDG: PREDICTEDRIP"] 
  "30064771143" -> "30064771140"  [ label = "DDG: DESTINATION"] 
  "30064771145" -> "30064771144"  [ label = "DDG: code.substr(ADDREND)"] 
  "30064771145" -> "30064771144"  [ label = "DDG: &quot;{} {}0x{:x}{}\n&quot;"] 
  "30064771145" -> "30064771144"  [ label = "DDG: code.substr(0, ADDRSTART)"] 
  "30064771145" -> "30064771144"  [ label = "DDG: NEWRIPOFFSET"] 
  "30064771145" -> "30064771144"  [ label = "DDG: POSITIVE ? '+' : '-'"] 
  "111669149697" -> "30064771149"  [ label = "DDG: "] 
  "30064771160" -> "30064771159"  [ label = "DDG: len == 4 &amp;&amp; bytes[0] == 0xF3"] 
  "30064771160" -> "30064771159"  [ label = "DDG: bytes[1] == 0x0F"] 
  "30064771167" -> "30064771159"  [ label = "DDG: bytes[2]"] 
  "30064771167" -> "30064771159"  [ label = "DDG: 0x1E"] 
  "30064771156" -> "30064771169"  [ label = "DDG: bytes"] 
  "111669149697" -> "30064771169"  [ label = "DDG: "] 
  "30064771176" -> "30064771171"  [ label = "DDG: assemblyBuilder"] 
  "30064771144" -> "30064771171"  [ label = "DDG: assemblyBuilder"] 
  "30064771118" -> "30064771171"  [ label = "DDG: assemblyBuilder"] 
  "30064771114" -> "30064771171"  [ label = "DDG: assemblyBuilder"] 
  "30064771075" -> "30064771172"  [ label = "DDG: currentDestinationOffset"] 
  "30064771178" -> "30064771172"  [ label = "DDG: currentDestinationOffset"] 
  "30064771149" -> "30064771172"  [ label = "DDG: currentDestinationOffset"] 
  "30064771121" -> "30064771172"  [ label = "DDG: currentDestinationOffset"] 
  "30064771116" -> "30064771172"  [ label = "DDG: currentDestinationOffset"] 
  "111669149697" -> "146028888066"  [ label = "DDG: "] 
  "30064771150" -> "30064771177"  [ label = "DDG: code"] 
  "111669149697" -> "30064771177"  [ label = "DDG: "] 
  "111669149697" -> "30064771211"  [ label = "DDG: "] 
  "30064771189" -> "30064771211"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771119"  [ label = "DDG: "] 
  "30064771110" -> "30064771119"  [ label = "DDG: DESTINATION"] 
  "30064771084" -> "30064771119"  [ label = "DDG: tokens"] 
  "30064771176" -> "30064771144"  [ label = "DDG: assemblyBuilder"] 
  "30064771171" -> "30064771144"  [ label = "DDG: assemblyBuilder"] 
  "30064771118" -> "30064771144"  [ label = "DDG: assemblyBuilder"] 
  "30064771114" -> "30064771144"  [ label = "DDG: assemblyBuilder"] 
  "111669149697" -> "30064771144"  [ label = "DDG: "] 
  "30064771075" -> "30064771149"  [ label = "DDG: currentDestinationOffset"] 
  "30064771178" -> "30064771149"  [ label = "DDG: currentDestinationOffset"] 
  "30064771172" -> "30064771149"  [ label = "DDG: currentDestinationOffset"] 
  "30064771121" -> "30064771149"  [ label = "DDG: currentDestinationOffset"] 
  "30064771116" -> "30064771149"  [ label = "DDG: currentDestinationOffset"] 
  "30064771161" -> "30064771160"  [ label = "DDG: len == 4"] 
  "30064771161" -> "30064771160"  [ label = "DDG: bytes[0] == 0xF3"] 
  "30064771165" -> "30064771160"  [ label = "DDG: bytes[1]"] 
  "30064771165" -> "30064771160"  [ label = "DDG: 0x0F"] 
  "30064771156" -> "30064771167"  [ label = "DDG: bytes"] 
  "111669149697" -> "30064771167"  [ label = "DDG: "] 
  "111669149697" -> "30064771175"  [ label = "DDG: "] 
  "30064771173" -> "30064771175"  [ label = "DDG: strBytes"] 
  "111669149697" -> "30064771212"  [ label = "DDG: "] 
  "30064771189" -> "30064771212"  [ label = "DDG: RANDOMDIR"] 
  "30064771117" -> "30064771123"  [ label = "DDG: code"] 
  "111669149697" -> "30064771123"  [ label = "DDG: "] 
  "30064771126" -> "30064771125"  [ label = "DDG: code"] 
  "30064771126" -> "30064771125"  [ label = "DDG: 0"] 
  "30064771126" -> "30064771125"  [ label = "DDG: ADDREND"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771128" -> "30064771127"  [ label = "DDG: ADDREND"] 
  "30064771128" -> "30064771127"  [ label = "DDG: std::string::npos"] 
  "30064771131" -> "30064771127"  [ label = "DDG: ADDRSTART"] 
  "30064771131" -> "30064771127"  [ label = "DDG: std::string::npos"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771075" -> "30064771135"  [ label = "DDG: currentDestinationOffset"] 
  "30064771178" -> "30064771135"  [ label = "DDG: currentDestinationOffset"] 
  "30064771172" -> "30064771135"  [ label = "DDG: currentDestinationOffset"] 
  "30064771149" -> "30064771135"  [ label = "DDG: currentDestinationOffset"] 
  "30064771121" -> "30064771135"  [ label = "DDG: currentDestinationOffset"] 
  "30064771116" -> "30064771135"  [ label = "DDG: currentDestinationOffset"] 
  "30064771110" -> "30064771139"  [ label = "DDG: DESTINATION"] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771134" -> "30064771139"  [ label = "DDG: PREDICTEDRIP"] 
  "30064771142" -> "30064771141"  [ label = "DDG: DESTINATION"] 
  "30064771142" -> "30064771141"  [ label = "DDG: PREDICTEDRIP"] 
  "30064771143" -> "30064771141"  [ label = "DDG: PREDICTEDRIP"] 
  "30064771143" -> "30064771141"  [ label = "DDG: DESTINATION"] 
  "111669149697" -> "30064771145"  [ label = "DDG: "] 
  "30064771146" -> "30064771145"  [ label = "DDG: code"] 
  "30064771146" -> "30064771145"  [ label = "DDG: 0"] 
  "30064771146" -> "30064771145"  [ label = "DDG: ADDRSTART"] 
  "30064771140" -> "30064771145"  [ label = "DDG: NEWRIPOFFSET"] 
  "30064771148" -> "30064771145"  [ label = "DDG: code"] 
  "30064771148" -> "30064771145"  [ label = "DDG: ADDREND"] 
  "30064771162" -> "30064771161"  [ label = "DDG: len"] 
  "30064771162" -> "30064771161"  [ label = "DDG: 4"] 
  "30064771163" -> "30064771161"  [ label = "DDG: bytes[0]"] 
  "30064771163" -> "30064771161"  [ label = "DDG: 0xF3"] 
  "30064771156" -> "30064771165"  [ label = "DDG: bytes"] 
  "111669149697" -> "30064771165"  [ label = "DDG: "] 
  "30064771174" -> "30064771173"  [ label = "DDG: &quot;{:x} &quot;"] 
  "30064771174" -> "30064771173"  [ label = "DDG: b"] 
  "111669149697" -> "30064771213"  [ label = "DDG: "] 
  "30064771189" -> "30064771213"  [ label = "DDG: RANDOMDIR"] 
  "30064771123" -> "30064771126"  [ label = "DDG: code"] 
  "111669149697" -> "30064771126"  [ label = "DDG: "] 
  "30064771122" -> "30064771126"  [ label = "DDG: ADDREND"] 
  "30064771126" -> "30064771128"  [ label = "DDG: ADDREND"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771131" -> "30064771128"  [ label = "DDG: std::string::npos"] 
  "30064771124" -> "30064771131"  [ label = "DDG: ADDRSTART"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771128" -> "30064771131"  [ label = "DDG: std::string::npos"] 
  "111669149697" -> "30064771136"  [ label = "DDG: "] 
  "30064771075" -> "30064771136"  [ label = "DDG: currentDestinationOffset"] 
  "30064771178" -> "30064771136"  [ label = "DDG: currentDestinationOffset"] 
  "30064771172" -> "30064771136"  [ label = "DDG: currentDestinationOffset"] 
  "30064771149" -> "30064771136"  [ label = "DDG: currentDestinationOffset"] 
  "30064771121" -> "30064771136"  [ label = "DDG: currentDestinationOffset"] 
  "30064771116" -> "30064771136"  [ label = "DDG: currentDestinationOffset"] 
  "30064771139" -> "30064771142"  [ label = "DDG: DESTINATION"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "30064771139" -> "30064771142"  [ label = "DDG: PREDICTEDRIP"] 
  "30064771139" -> "30064771143"  [ label = "DDG: PREDICTEDRIP"] 
  "111669149697" -> "30064771143"  [ label = "DDG: "] 
  "30064771139" -> "30064771143"  [ label = "DDG: DESTINATION"] 
  "30064771126" -> "30064771146"  [ label = "DDG: code"] 
  "111669149697" -> "30064771146"  [ label = "DDG: "] 
  "30064771124" -> "30064771146"  [ label = "DDG: ADDRSTART"] 
  "30064771131" -> "30064771146"  [ label = "DDG: ADDRSTART"] 
  "111669149697" -> "30064771147"  [ label = "DDG: "] 
  "30064771146" -> "30064771148"  [ label = "DDG: code"] 
  "111669149697" -> "30064771148"  [ label = "DDG: "] 
  "30064771128" -> "30064771148"  [ label = "DDG: ADDREND"] 
  "30064771155" -> "30064771162"  [ label = "DDG: len"] 
  "111669149697" -> "30064771162"  [ label = "DDG: "] 
  "30064771156" -> "30064771163"  [ label = "DDG: bytes"] 
  "111669149697" -> "30064771163"  [ label = "DDG: "] 
  "111669149697" -> "30064771173"  [ label = "DDG: "] 
  "111669149697" -> "30064771214"  [ label = "DDG: "] 
  "30064771189" -> "30064771214"  [ label = "DDG: RANDOMDIR"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "111669149697" -> "30064771174"  [ label = "DDG: "] 
  "30064771187" -> "146028888067"  [ label = "CDG: "] 
  "30064771187" -> "30064771205"  [ label = "CDG: "] 
  "30064771187" -> "30064771206"  [ label = "CDG: "] 
  "30064771187" -> "30064771207"  [ label = "CDG: "] 
  "30064771187" -> "30064771208"  [ label = "CDG: "] 
  "30064771187" -> "30064771201"  [ label = "CDG: "] 
  "30064771187" -> "30064771202"  [ label = "CDG: "] 
  "30064771187" -> "30064771203"  [ label = "CDG: "] 
  "30064771187" -> "30064771204"  [ label = "CDG: "] 
  "30064771187" -> "30064771197"  [ label = "CDG: "] 
  "30064771187" -> "30064771198"  [ label = "CDG: "] 
  "30064771187" -> "30064771199"  [ label = "CDG: "] 
  "30064771187" -> "30064771200"  [ label = "CDG: "] 
  "30064771187" -> "30064771193"  [ label = "CDG: "] 
  "30064771187" -> "30064771194"  [ label = "CDG: "] 
  "30064771187" -> "30064771195"  [ label = "CDG: "] 
  "30064771187" -> "30064771196"  [ label = "CDG: "] 
  "30064771187" -> "30064771189"  [ label = "CDG: "] 
  "30064771187" -> "30064771190"  [ label = "CDG: "] 
  "30064771187" -> "30064771191"  [ label = "CDG: "] 
  "30064771187" -> "30064771192"  [ label = "CDG: "] 
  "30064771187" -> "55834574855"  [ label = "CDG: "] 
  "30064771187" -> "55834574856"  [ label = "CDG: "] 
  "30064771187" -> "55834574857"  [ label = "CDG: "] 
  "30064771187" -> "30064771217"  [ label = "CDG: "] 
  "30064771187" -> "30064771218"  [ label = "CDG: "] 
  "30064771187" -> "30064771213"  [ label = "CDG: "] 
  "30064771187" -> "30064771214"  [ label = "CDG: "] 
  "30064771187" -> "30064771215"  [ label = "CDG: "] 
  "30064771187" -> "30064771216"  [ label = "CDG: "] 
  "30064771187" -> "30064771209"  [ label = "CDG: "] 
  "30064771187" -> "30064771210"  [ label = "CDG: "] 
  "30064771187" -> "30064771211"  [ label = "CDG: "] 
  "30064771187" -> "30064771212"  [ label = "CDG: "] 
  "30064771216" -> "146028888068"  [ label = "CDG: "] 
  "30064771216" -> "146028888069"  [ label = "CDG: "] 
  "30064771216" -> "55834574858"  [ label = "CDG: "] 
  "30064771216" -> "30064771229"  [ label = "CDG: "] 
  "30064771216" -> "30064771225"  [ label = "CDG: "] 
  "30064771216" -> "30064771226"  [ label = "CDG: "] 
  "30064771216" -> "30064771227"  [ label = "CDG: "] 
  "30064771216" -> "30064771228"  [ label = "CDG: "] 
  "30064771216" -> "30064771221"  [ label = "CDG: "] 
  "30064771216" -> "30064771222"  [ label = "CDG: "] 
  "30064771216" -> "30064771223"  [ label = "CDG: "] 
  "30064771216" -> "30064771224"  [ label = "CDG: "] 
  "30064771216" -> "30064771219"  [ label = "CDG: "] 
  "30064771216" -> "30064771220"  [ label = "CDG: "] 
  "30064771183" -> "30064771077"  [ label = "CDG: "] 
  "30064771183" -> "30064771078"  [ label = "CDG: "] 
  "30064771183" -> "30064771079"  [ label = "CDG: "] 
  "30064771183" -> "30064771080"  [ label = "CDG: "] 
  "30064771183" -> "30064771185"  [ label = "CDG: "] 
  "30064771183" -> "30064771186"  [ label = "CDG: "] 
  "30064771183" -> "30064771187"  [ label = "CDG: "] 
  "30064771183" -> "30064771188"  [ label = "CDG: "] 
  "30064771183" -> "30064771184"  [ label = "CDG: "] 
  "30064771183" -> "30064771081"  [ label = "CDG: "] 
  "30064771183" -> "30064771082"  [ label = "CDG: "] 
  "30064771183" -> "30064771083"  [ label = "CDG: "] 
  "30064771183" -> "55834574849"  [ label = "CDG: "] 
  "30064771183" -> "55834574850"  [ label = "CDG: "] 
  "30064771083" -> "30064771150"  [ label = "CDG: "] 
  "30064771083" -> "30064771109"  [ label = "CDG: "] 
  "30064771083" -> "30064771105"  [ label = "CDG: "] 
  "30064771083" -> "30064771106"  [ label = "CDG: "] 
  "30064771083" -> "30064771108"  [ label = "CDG: "] 
  "30064771083" -> "30064771101"  [ label = "CDG: "] 
  "30064771083" -> "30064771102"  [ label = "CDG: "] 
  "30064771083" -> "30064771103"  [ label = "CDG: "] 
  "30064771083" -> "30064771104"  [ label = "CDG: "] 
  "30064771083" -> "30064771097"  [ label = "CDG: "] 
  "30064771083" -> "30064771098"  [ label = "CDG: "] 
  "30064771083" -> "30064771099"  [ label = "CDG: "] 
  "30064771083" -> "30064771100"  [ label = "CDG: "] 
  "30064771083" -> "30064771093"  [ label = "CDG: "] 
  "30064771083" -> "30064771094"  [ label = "CDG: "] 
  "30064771083" -> "30064771095"  [ label = "CDG: "] 
  "30064771083" -> "30064771096"  [ label = "CDG: "] 
  "30064771083" -> "30064771089"  [ label = "CDG: "] 
  "30064771083" -> "30064771090"  [ label = "CDG: "] 
  "30064771083" -> "30064771091"  [ label = "CDG: "] 
  "30064771083" -> "30064771092"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771087"  [ label = "CDG: "] 
  "30064771083" -> "30064771088"  [ label = "CDG: "] 
  "30064771083" -> "30064771084"  [ label = "CDG: "] 
  "30064771083" -> "30064771107"  [ label = "CDG: "] 
  "30064771109" -> "146028888064"  [ label = "CDG: "] 
  "30064771109" -> "30064771113"  [ label = "CDG: "] 
  "30064771109" -> "30064771110"  [ label = "CDG: "] 
  "30064771109" -> "30064771111"  [ label = "CDG: "] 
  "30064771109" -> "30064771112"  [ label = "CDG: "] 
  "30064771113" -> "30064771181"  [ label = "CDG: "] 
  "30064771113" -> "30064771182"  [ label = "CDG: "] 
  "30064771113" -> "30064771183"  [ label = "CDG: "] 
  "30064771113" -> "30064771179"  [ label = "CDG: "] 
  "30064771113" -> "30064771180"  [ label = "CDG: "] 
  "30064771113" -> "30064771117"  [ label = "CDG: "] 
  "30064771113" -> "30064771114"  [ label = "CDG: "] 
  "30064771113" -> "30064771115"  [ label = "CDG: "] 
  "30064771113" -> "30064771116"  [ label = "CDG: "] 
  "30064771113" -> "55834574854"  [ label = "CDG: "] 
  "30064771150" -> "30064771181"  [ label = "CDG: "] 
  "30064771150" -> "30064771182"  [ label = "CDG: "] 
  "30064771150" -> "30064771183"  [ label = "CDG: "] 
  "30064771150" -> "30064771177"  [ label = "CDG: "] 
  "30064771150" -> "30064771178"  [ label = "CDG: "] 
  "30064771150" -> "30064771179"  [ label = "CDG: "] 
  "30064771150" -> "30064771180"  [ label = "CDG: "] 
  "30064771150" -> "30064771176"  [ label = "CDG: "] 
  "30064771150" -> "184683593730"  [ label = "CDG: "] 
  "30064771150" -> "30064771161"  [ label = "CDG: "] 
  "30064771150" -> "30064771162"  [ label = "CDG: "] 
  "30064771150" -> "30064771157"  [ label = "CDG: "] 
  "30064771150" -> "30064771158"  [ label = "CDG: "] 
  "30064771150" -> "30064771159"  [ label = "CDG: "] 
  "30064771150" -> "30064771160"  [ label = "CDG: "] 
  "30064771150" -> "30064771153"  [ label = "CDG: "] 
  "30064771150" -> "30064771154"  [ label = "CDG: "] 
  "30064771150" -> "30064771155"  [ label = "CDG: "] 
  "30064771150" -> "30064771156"  [ label = "CDG: "] 
  "30064771150" -> "30064771151"  [ label = "CDG: "] 
  "30064771150" -> "30064771152"  [ label = "CDG: "] 
  "30064771150" -> "55834574853"  [ label = "CDG: "] 
  "30064771150" -> "55834574854"  [ label = "CDG: "] 
  "30064771117" -> "30064771181"  [ label = "CDG: "] 
  "30064771117" -> "30064771182"  [ label = "CDG: "] 
  "30064771117" -> "30064771183"  [ label = "CDG: "] 
  "30064771117" -> "30064771179"  [ label = "CDG: "] 
  "30064771117" -> "30064771180"  [ label = "CDG: "] 
  "30064771117" -> "30064771129"  [ label = "CDG: "] 
  "30064771117" -> "30064771130"  [ label = "CDG: "] 
  "30064771117" -> "30064771125"  [ label = "CDG: "] 
  "30064771117" -> "30064771126"  [ label = "CDG: "] 
  "30064771117" -> "30064771127"  [ label = "CDG: "] 
  "30064771117" -> "30064771128"  [ label = "CDG: "] 
  "30064771117" -> "30064771121"  [ label = "CDG: "] 
  "30064771117" -> "30064771122"  [ label = "CDG: "] 
  "30064771117" -> "30064771123"  [ label = "CDG: "] 
  "30064771117" -> "30064771124"  [ label = "CDG: "] 
  "30064771117" -> "30064771118"  [ label = "CDG: "] 
  "30064771117" -> "30064771119"  [ label = "CDG: "] 
  "30064771117" -> "30064771120"  [ label = "CDG: "] 
  "30064771117" -> "55834574851"  [ label = "CDG: "] 
  "30064771117" -> "55834574854"  [ label = "CDG: "] 
  "30064771158" -> "146028888066"  [ label = "CDG: "] 
  "30064771158" -> "30064771181"  [ label = "CDG: "] 
  "30064771158" -> "30064771182"  [ label = "CDG: "] 
  "30064771158" -> "30064771183"  [ label = "CDG: "] 
  "30064771158" -> "30064771179"  [ label = "CDG: "] 
  "30064771158" -> "30064771180"  [ label = "CDG: "] 
  "30064771158" -> "30064771173"  [ label = "CDG: "] 
  "30064771158" -> "30064771174"  [ label = "CDG: "] 
  "30064771158" -> "30064771175"  [ label = "CDG: "] 
  "30064771158" -> "30064771171"  [ label = "CDG: "] 
  "30064771158" -> "30064771172"  [ label = "CDG: "] 
  "30064771158" -> "55834574854"  [ label = "CDG: "] 
  "30064771159" -> "30064771169"  [ label = "CDG: "] 
  "30064771159" -> "30064771170"  [ label = "CDG: "] 
  "30064771160" -> "30064771167"  [ label = "CDG: "] 
  "30064771160" -> "30064771168"  [ label = "CDG: "] 
  "30064771127" -> "146028888065"  [ label = "CDG: "] 
  "30064771127" -> "30064771181"  [ label = "CDG: "] 
  "30064771127" -> "30064771182"  [ label = "CDG: "] 
  "30064771127" -> "30064771183"  [ label = "CDG: "] 
  "30064771127" -> "30064771179"  [ label = "CDG: "] 
  "30064771127" -> "30064771180"  [ label = "CDG: "] 
  "30064771127" -> "184683593729"  [ label = "CDG: "] 
  "30064771127" -> "30064771149"  [ label = "CDG: "] 
  "30064771127" -> "30064771145"  [ label = "CDG: "] 
  "30064771127" -> "30064771146"  [ label = "CDG: "] 
  "30064771127" -> "30064771147"  [ label = "CDG: "] 
  "30064771127" -> "30064771148"  [ label = "CDG: "] 
  "30064771127" -> "30064771141"  [ label = "CDG: "] 
  "30064771127" -> "30064771144"  [ label = "CDG: "] 
  "30064771127" -> "30064771137"  [ label = "CDG: "] 
  "30064771127" -> "30064771138"  [ label = "CDG: "] 
  "30064771127" -> "30064771139"  [ label = "CDG: "] 
  "30064771127" -> "30064771140"  [ label = "CDG: "] 
  "30064771127" -> "30064771134"  [ label = "CDG: "] 
  "30064771127" -> "30064771135"  [ label = "CDG: "] 
  "30064771127" -> "30064771136"  [ label = "CDG: "] 
  "30064771127" -> "55834574854"  [ label = "CDG: "] 
  "30064771127" -> "30064771142"  [ label = "CDG: "] 
  "30064771127" -> "30064771143"  [ label = "CDG: "] 
  "30064771161" -> "30064771165"  [ label = "CDG: "] 
  "30064771161" -> "30064771166"  [ label = "CDG: "] 
  "30064771128" -> "30064771133"  [ label = "CDG: "] 
  "30064771128" -> "30064771131"  [ label = "CDG: "] 
  "30064771128" -> "30064771132"  [ label = "CDG: "] 
  "30064771128" -> "55834574852"  [ label = "CDG: "] 
  "30064771162" -> "30064771163"  [ label = "CDG: "] 
  "30064771162" -> "30064771164"  [ label = "CDG: "] 
  "30064771173" -> "30064771173"  [ label = "CDG: "] 
  "30064771173" -> "30064771174"  [ label = "CDG: "] 
}
"""
)
