[33mval[0m [36mres1228[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "main" {  
"111669149697" [label = <(METHOD,main)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,int argc)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,char *argv[])<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
	int ret;
	struct lxc_lock *lock;

	lock = lx...,{
	int ret;
	struct lxc_lock *lock;

	lock = lx...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,int ret: int)<SUB>3</SUB>> ]
"94489280513" [label = <(LOCAL,struct lxc_lock* lock: lxc_lock*)<SUB>4</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,lock = lxc_newlock(NULL, NULL))<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,lock,lock = lxc_newlock(NULL, NULL))<SUB>6</SUB>> ]
"30064771073" [label = <(lxc_newlock,lxc_newlock(NULL, NULL))<SUB>6</SUB>> ]
"68719476737" [label = <(IDENTIFIER,NULL,lxc_newlock(NULL, NULL))<SUB>6</SUB>> ]
"68719476738" [label = <(IDENTIFIER,NULL,lxc_newlock(NULL, NULL))<SUB>6</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (!lock))<SUB>7</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.logicalNot,!lock)<SUB>7</SUB>> ]
"68719476739" [label = <(IDENTIFIER,lock,!lock)<SUB>7</SUB>> ]
"25769803778" [label = <(BLOCK,{
		fprintf(stderr, &quot;%d: failed to get unnamed ...,{
		fprintf(stderr, &quot;%d: failed to get unnamed ...)<SUB>7</SUB>> ]
"30064771075" [label = <(fprintf,fprintf(stderr, &quot;%d: failed to get unnamed lock...)<SUB>8</SUB>> ]
"68719476740" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;%d: failed to get unnamed lock...)<SUB>8</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;%d: failed to get unnamed lock\n&quot;,fprintf(stderr, &quot;%d: failed to get unnamed lock...)<SUB>8</SUB>> ]
"30064771076" [label = <(__LINE__,__LINE__)<SUB>8</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>> ]
"90194313217" [label = <(LITERAL,8,&lt;empty&gt;)<SUB>8</SUB>> ]
"30064771077" [label = <(exit,exit(1))<SUB>9</SUB>> ]
"90194313218" [label = <(LITERAL,1,exit(1))<SUB>9</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,ret = lxclock(lock, 0))<SUB>11</SUB>> ]
"68719476741" [label = <(IDENTIFIER,ret,ret = lxclock(lock, 0))<SUB>11</SUB>> ]
"30064771079" [label = <(lxclock,lxclock(lock, 0))<SUB>11</SUB>> ]
"68719476742" [label = <(IDENTIFIER,lock,lxclock(lock, 0))<SUB>11</SUB>> ]
"90194313219" [label = <(LITERAL,0,lxclock(lock, 0))<SUB>11</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (ret))<SUB>12</SUB>> ]
"68719476743" [label = <(IDENTIFIER,ret,if (ret))<SUB>12</SUB>> ]
"25769803780" [label = <(BLOCK,{
		fprintf(stderr, &quot;%d: failed to take unnamed...,{
		fprintf(stderr, &quot;%d: failed to take unnamed...)<SUB>12</SUB>> ]
"30064771080" [label = <(fprintf,fprintf(stderr, &quot;%d: failed to take unnamed loc...)<SUB>13</SUB>> ]
"68719476744" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;%d: failed to take unnamed loc...)<SUB>13</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;%d: failed to take unnamed lock (%d)\n&quot;,fprintf(stderr, &quot;%d: failed to take unnamed loc...)<SUB>13</SUB>> ]
"30064771081" [label = <(__LINE__,__LINE__)<SUB>13</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>> ]
"90194313221" [label = <(LITERAL,13,&lt;empty&gt;)<SUB>13</SUB>> ]
"68719476745" [label = <(IDENTIFIER,ret,fprintf(stderr, &quot;%d: failed to take unnamed loc...)<SUB>13</SUB>> ]
"30064771082" [label = <(exit,exit(1))<SUB>14</SUB>> ]
"90194313222" [label = <(LITERAL,1,exit(1))<SUB>14</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.assignment,ret = lxcunlock(lock))<SUB>17</SUB>> ]
"68719476746" [label = <(IDENTIFIER,ret,ret = lxcunlock(lock))<SUB>17</SUB>> ]
"30064771084" [label = <(lxcunlock,lxcunlock(lock))<SUB>17</SUB>> ]
"68719476747" [label = <(IDENTIFIER,lock,lxcunlock(lock))<SUB>17</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (ret))<SUB>18</SUB>> ]
"68719476748" [label = <(IDENTIFIER,ret,if (ret))<SUB>18</SUB>> ]
"25769803782" [label = <(BLOCK,{
		fprintf(stderr, &quot;%d: failed to put unnamed ...,{
		fprintf(stderr, &quot;%d: failed to put unnamed ...)<SUB>18</SUB>> ]
"30064771085" [label = <(fprintf,fprintf(stderr, &quot;%d: failed to put unnamed lock...)<SUB>19</SUB>> ]
"68719476749" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;%d: failed to put unnamed lock...)<SUB>19</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;%d: failed to put unnamed lock (%d)\n&quot;,fprintf(stderr, &quot;%d: failed to put unnamed lock...)<SUB>19</SUB>> ]
"30064771086" [label = <(__LINE__,__LINE__)<SUB>19</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>> ]
"90194313224" [label = <(LITERAL,19,&lt;empty&gt;)<SUB>19</SUB>> ]
"68719476750" [label = <(IDENTIFIER,ret,fprintf(stderr, &quot;%d: failed to put unnamed lock...)<SUB>19</SUB>> ]
"30064771087" [label = <(exit,exit(1))<SUB>20</SUB>> ]
"90194313225" [label = <(LITERAL,1,exit(1))<SUB>20</SUB>> ]
"30064771088" [label = <(lxc_putlock,lxc_putlock(lock))<SUB>22</SUB>> ]
"68719476751" [label = <(IDENTIFIER,lock,lxc_putlock(lock))<SUB>22</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,lock = lxc_newlock(&quot;/var/lib/lxc&quot;, mycontainern...)<SUB>24</SUB>> ]
"68719476752" [label = <(IDENTIFIER,lock,lock = lxc_newlock(&quot;/var/lib/lxc&quot;, mycontainern...)<SUB>24</SUB>> ]
"30064771090" [label = <(lxc_newlock,lxc_newlock(&quot;/var/lib/lxc&quot;, mycontainername))<SUB>24</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;/var/lib/lxc&quot;,lxc_newlock(&quot;/var/lib/lxc&quot;, mycontainername))<SUB>24</SUB>> ]
"68719476753" [label = <(IDENTIFIER,mycontainername,lxc_newlock(&quot;/var/lib/lxc&quot;, mycontainername))<SUB>24</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (!lock))<SUB>25</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.logicalNot,!lock)<SUB>25</SUB>> ]
"68719476754" [label = <(IDENTIFIER,lock,!lock)<SUB>25</SUB>> ]
"25769803784" [label = <(BLOCK,{
		fprintf(stderr, &quot;%d: failed to get lock\n&quot;,...,{
		fprintf(stderr, &quot;%d: failed to get lock\n&quot;,...)<SUB>25</SUB>> ]
"30064771092" [label = <(fprintf,fprintf(stderr, &quot;%d: failed to get lock\n&quot;, __L...)<SUB>26</SUB>> ]
"68719476755" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;%d: failed to get lock\n&quot;, __L...)<SUB>26</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;%d: failed to get lock\n&quot;,fprintf(stderr, &quot;%d: failed to get lock\n&quot;, __L...)<SUB>26</SUB>> ]
"30064771093" [label = <(__LINE__,__LINE__)<SUB>26</SUB>> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>> ]
"90194313228" [label = <(LITERAL,26,&lt;empty&gt;)<SUB>26</SUB>> ]
"30064771094" [label = <(exit,exit(1))<SUB>27</SUB>> ]
"90194313229" [label = <(LITERAL,1,exit(1))<SUB>27</SUB>> ]
"94489280514" [label = <(LOCAL,struct stat sb: stat)<SUB>29</SUB>> ]
"94489280515" [label = <(LOCAL,char* pathname: char*)<SUB>30</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assignment,*pathname = RUNTIME_PATH)<SUB>30</SUB>> ]
"68719476756" [label = <(IDENTIFIER,pathname,*pathname = RUNTIME_PATH)<SUB>30</SUB>> ]
"68719476757" [label = <(IDENTIFIER,RUNTIME_PATH,*pathname = RUNTIME_PATH)<SUB>30</SUB>> ]
"90194313230" [label = <(LITERAL,&quot;/lxc/lock/var/lib/lxc/&quot;,{
	int ret;
	struct lxc_lock *lock;

	lock = lx...)<SUB>30</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.assignment,ret = stat(pathname, &amp;sb))<SUB>31</SUB>> ]
"68719476758" [label = <(IDENTIFIER,ret,ret = stat(pathname, &amp;sb))<SUB>31</SUB>> ]
"30064771097" [label = <(stat,stat(pathname, &amp;sb))<SUB>31</SUB>> ]
"68719476759" [label = <(IDENTIFIER,pathname,stat(pathname, &amp;sb))<SUB>31</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.addressOf,&amp;sb)<SUB>31</SUB>> ]
"68719476760" [label = <(IDENTIFIER,sb,stat(pathname, &amp;sb))<SUB>31</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if (ret != 0))<SUB>32</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.notEquals,ret != 0)<SUB>32</SUB>> ]
"68719476761" [label = <(IDENTIFIER,ret,ret != 0)<SUB>32</SUB>> ]
"90194313231" [label = <(LITERAL,0,ret != 0)<SUB>32</SUB>> ]
"25769803786" [label = <(BLOCK,{
		fprintf(stderr, &quot;%d: filename %s not create...,{
		fprintf(stderr, &quot;%d: filename %s not create...)<SUB>32</SUB>> ]
"30064771100" [label = <(fprintf,fprintf(stderr, &quot;%d: filename %s not created\n&quot;...)<SUB>33</SUB>> ]
"68719476762" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;%d: filename %s not created\n&quot;...)<SUB>33</SUB>> ]
"90194313232" [label = <(LITERAL,&quot;%d: filename %s not created\n&quot;,fprintf(stderr, &quot;%d: filename %s not created\n&quot;...)<SUB>33</SUB>> ]
"30064771101" [label = <(__LINE__,__LINE__)<SUB>33</SUB>> ]
"25769803787" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>> ]
"90194313233" [label = <(LITERAL,33,&lt;empty&gt;)<SUB>33</SUB>> ]
"68719476763" [label = <(IDENTIFIER,pathname,fprintf(stderr, &quot;%d: filename %s not created\n&quot;...)<SUB>34</SUB>> ]
"30064771102" [label = <(exit,exit(1))<SUB>35</SUB>> ]
"90194313234" [label = <(LITERAL,1,exit(1))<SUB>35</SUB>> ]
"30064771103" [label = <(lxc_putlock,lxc_putlock(lock))<SUB>37</SUB>> ]
"68719476764" [label = <(IDENTIFIER,lock,lxc_putlock(lock))<SUB>37</SUB>> ]
"30064771104" [label = <(test_two_locks,test_two_locks())<SUB>39</SUB>> ]
"30064771105" [label = <(fprintf,fprintf(stderr, &quot;all tests passed\n&quot;))<SUB>41</SUB>> ]
"68719476765" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;all tests passed\n&quot;))<SUB>41</SUB>> ]
"90194313235" [label = <(LITERAL,&quot;all tests passed\n&quot;,fprintf(stderr, &quot;all tests passed\n&quot;))<SUB>41</SUB>> ]
"30064771106" [label = <(exit,exit(ret))<SUB>43</SUB>> ]
"68719476766" [label = <(IDENTIFIER,ret,exit(ret))<SUB>43</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,int)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "30064771078"  [ label = "AST: "] 
  "25769803777" -> "47244640257"  [ label = "AST: "] 
  "25769803777" -> "30064771083"  [ label = "AST: "] 
  "25769803777" -> "47244640258"  [ label = "AST: "] 
  "25769803777" -> "30064771088"  [ label = "AST: "] 
  "25769803777" -> "30064771089"  [ label = "AST: "] 
  "25769803777" -> "47244640259"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771095"  [ label = "AST: "] 
  "25769803777" -> "90194313230"  [ label = "AST: "] 
  "25769803777" -> "30064771096"  [ label = "AST: "] 
  "25769803777" -> "47244640260"  [ label = "AST: "] 
  "25769803777" -> "30064771103"  [ label = "AST: "] 
  "25769803777" -> "30064771104"  [ label = "AST: "] 
  "25769803777" -> "30064771105"  [ label = "AST: "] 
  "25769803777" -> "30064771106"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "47244640256" -> "30064771074"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "25769803778" -> "30064771075"  [ label = "AST: "] 
  "25769803778" -> "30064771077"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "90194313216"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "90194313217"  [ label = "AST: "] 
  "30064771077" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "90194313219"  [ label = "AST: "] 
  "47244640257" -> "68719476743"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "30064771080"  [ label = "AST: "] 
  "25769803780" -> "30064771082"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "90194313220"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "90194313221"  [ label = "AST: "] 
  "30064771082" -> "90194313222"  [ label = "AST: "] 
  "30064771083" -> "68719476746"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476747"  [ label = "AST: "] 
  "47244640258" -> "68719476748"  [ label = "AST: "] 
  "47244640258" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "30064771085"  [ label = "AST: "] 
  "25769803782" -> "30064771087"  [ label = "AST: "] 
  "30064771085" -> "68719476749"  [ label = "AST: "] 
  "30064771085" -> "90194313223"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771086" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "90194313224"  [ label = "AST: "] 
  "30064771087" -> "90194313225"  [ label = "AST: "] 
  "30064771088" -> "68719476751"  [ label = "AST: "] 
  "30064771089" -> "68719476752"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "90194313226"  [ label = "AST: "] 
  "30064771090" -> "68719476753"  [ label = "AST: "] 
  "47244640259" -> "30064771091"  [ label = "AST: "] 
  "47244640259" -> "25769803784"  [ label = "AST: "] 
  "30064771091" -> "68719476754"  [ label = "AST: "] 
  "25769803784" -> "30064771092"  [ label = "AST: "] 
  "25769803784" -> "30064771094"  [ label = "AST: "] 
  "30064771092" -> "68719476755"  [ label = "AST: "] 
  "30064771092" -> "90194313227"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "25769803785"  [ label = "AST: "] 
  "25769803785" -> "90194313228"  [ label = "AST: "] 
  "30064771094" -> "90194313229"  [ label = "AST: "] 
  "30064771095" -> "68719476756"  [ label = "AST: "] 
  "30064771095" -> "68719476757"  [ label = "AST: "] 
  "30064771096" -> "68719476758"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "68719476759"  [ label = "AST: "] 
  "30064771097" -> "30064771098"  [ label = "AST: "] 
  "30064771098" -> "68719476760"  [ label = "AST: "] 
  "47244640260" -> "30064771099"  [ label = "AST: "] 
  "47244640260" -> "25769803786"  [ label = "AST: "] 
  "30064771099" -> "68719476761"  [ label = "AST: "] 
  "30064771099" -> "90194313231"  [ label = "AST: "] 
  "25769803786" -> "30064771100"  [ label = "AST: "] 
  "25769803786" -> "30064771102"  [ label = "AST: "] 
  "30064771100" -> "68719476762"  [ label = "AST: "] 
  "30064771100" -> "90194313232"  [ label = "AST: "] 
  "30064771100" -> "30064771101"  [ label = "AST: "] 
  "30064771100" -> "68719476763"  [ label = "AST: "] 
  "30064771101" -> "25769803787"  [ label = "AST: "] 
  "25769803787" -> "90194313233"  [ label = "AST: "] 
  "30064771102" -> "90194313234"  [ label = "AST: "] 
  "30064771103" -> "68719476764"  [ label = "AST: "] 
  "30064771105" -> "68719476765"  [ label = "AST: "] 
  "30064771105" -> "90194313235"  [ label = "AST: "] 
  "30064771106" -> "68719476766"  [ label = "AST: "] 
  "30064771072" -> "30064771074"  [ label = "CFG: "] 
  "30064771078" -> "68719476743"  [ label = "CFG: "] 
  "30064771083" -> "68719476748"  [ label = "CFG: "] 
  "30064771088" -> "30064771090"  [ label = "CFG: "] 
  "30064771089" -> "30064771091"  [ label = "CFG: "] 
  "30064771095" -> "30064771098"  [ label = "CFG: "] 
  "30064771096" -> "30064771099"  [ label = "CFG: "] 
  "30064771103" -> "30064771104"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771105" -> "30064771106"  [ label = "CFG: "] 
  "30064771106" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771074" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "68719476743" -> "30064771081"  [ label = "CFG: "] 
  "68719476743" -> "30064771084"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "68719476748" -> "30064771086"  [ label = "CFG: "] 
  "68719476748" -> "30064771088"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771091" -> "30064771093"  [ label = "CFG: "] 
  "30064771091" -> "30064771095"  [ label = "CFG: "] 
  "30064771097" -> "30064771096"  [ label = "CFG: "] 
  "30064771099" -> "30064771101"  [ label = "CFG: "] 
  "30064771099" -> "30064771103"  [ label = "CFG: "] 
  "30064771075" -> "30064771077"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771080" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771084"  [ label = "CFG: "] 
  "30064771085" -> "30064771087"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "30064771094"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771098" -> "30064771097"  [ label = "CFG: "] 
  "30064771100" -> "30064771102"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771081" -> "30064771080"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771093" -> "30064771092"  [ label = "CFG: "] 
  "30064771101" -> "30064771100"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "115964116992" -> "128849018880"  [ label = "DDG: argc"] 
  "115964116993" -> "128849018880"  [ label = "DDG: argv"] 
  "30064771073" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771072" -> "128849018880"  [ label = "DDG: lxc_newlock(NULL, NULL)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: lock = lxc_newlock(NULL, NULL)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: __LINE__"] 
  "30064771075" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;%d: failed to get unnamed lock\n&quot;, __LINE__)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: lxclock(lock, 0)"] 
  "30064771078" -> "128849018880"  [ label = "DDG: ret = lxclock(lock, 0)"] 
  "30064771080" -> "128849018880"  [ label = "DDG: __LINE__"] 
  "30064771080" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;%d: failed to take unnamed lock (%d)\n&quot;, __LINE__, ret)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: lxcunlock(lock)"] 
  "30064771083" -> "128849018880"  [ label = "DDG: ret = lxcunlock(lock)"] 
  "30064771085" -> "128849018880"  [ label = "DDG: __LINE__"] 
  "30064771085" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;%d: failed to put unnamed lock (%d)\n&quot;, __LINE__, ret)"] 
  "30064771089" -> "128849018880"  [ label = "DDG: lxc_newlock(&quot;/var/lib/lxc&quot;, mycontainername)"] 
  "30064771089" -> "128849018880"  [ label = "DDG: lock = lxc_newlock(&quot;/var/lib/lxc&quot;, mycontainername)"] 
  "30064771091" -> "128849018880"  [ label = "DDG: !lock"] 
  "30064771092" -> "128849018880"  [ label = "DDG: __LINE__"] 
  "30064771092" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;%d: failed to get lock\n&quot;, __LINE__)"] 
  "30064771095" -> "128849018880"  [ label = "DDG: *pathname = RUNTIME_PATH"] 
  "30064771097" -> "128849018880"  [ label = "DDG: pathname"] 
  "30064771097" -> "128849018880"  [ label = "DDG: &amp;sb"] 
  "30064771096" -> "128849018880"  [ label = "DDG: stat(pathname, &amp;sb)"] 
  "30064771096" -> "128849018880"  [ label = "DDG: ret = stat(pathname, &amp;sb)"] 
  "30064771099" -> "128849018880"  [ label = "DDG: ret != 0"] 
  "30064771100" -> "128849018880"  [ label = "DDG: __LINE__"] 
  "30064771100" -> "128849018880"  [ label = "DDG: pathname"] 
  "30064771100" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;%d: filename %s not created\n&quot;, __LINE__,
			pathname)"] 
  "30064771103" -> "128849018880"  [ label = "DDG: lock"] 
  "30064771103" -> "128849018880"  [ label = "DDG: lxc_putlock(lock)"] 
  "30064771104" -> "128849018880"  [ label = "DDG: test_two_locks()"] 
  "30064771105" -> "128849018880"  [ label = "DDG: stderr"] 
  "30064771105" -> "128849018880"  [ label = "DDG: fprintf(stderr, &quot;all tests passed\n&quot;)"] 
  "30064771106" -> "128849018880"  [ label = "DDG: ret"] 
  "30064771095" -> "128849018880"  [ label = "DDG: RUNTIME_PATH"] 
  "30064771090" -> "128849018880"  [ label = "DDG: mycontainername"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: NULL"] 
  "30064771079" -> "30064771078"  [ label = "DDG: lock"] 
  "30064771079" -> "30064771078"  [ label = "DDG: 0"] 
  "30064771084" -> "30064771083"  [ label = "DDG: lock"] 
  "30064771090" -> "30064771089"  [ label = "DDG: &quot;/var/lib/lxc&quot;"] 
  "30064771090" -> "30064771089"  [ label = "DDG: mycontainername"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "111669149697" -> "90194313230"  [ label = "DDG: "] 
  "30064771097" -> "30064771096"  [ label = "DDG: pathname"] 
  "30064771097" -> "30064771096"  [ label = "DDG: &amp;sb"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "111669149697" -> "68719476743"  [ label = "DDG: "] 
  "111669149697" -> "68719476748"  [ label = "DDG: "] 
  "30064771084" -> "30064771088"  [ label = "DDG: lock"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "30064771091" -> "30064771103"  [ label = "DDG: lock"] 
  "111669149697" -> "30064771103"  [ label = "DDG: "] 
  "30064771075" -> "30064771105"  [ label = "DDG: stderr"] 
  "30064771080" -> "30064771105"  [ label = "DDG: stderr"] 
  "30064771085" -> "30064771105"  [ label = "DDG: stderr"] 
  "30064771092" -> "30064771105"  [ label = "DDG: stderr"] 
  "30064771100" -> "30064771105"  [ label = "DDG: stderr"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771099" -> "30064771106"  [ label = "DDG: ret"] 
  "111669149697" -> "30064771106"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771072" -> "30064771074"  [ label = "DDG: lock"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "30064771074" -> "30064771079"  [ label = "DDG: lock"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771079" -> "30064771084"  [ label = "DDG: lock"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "111669149697" -> "30064771090"  [ label = "DDG: "] 
  "30064771089" -> "30064771091"  [ label = "DDG: lock"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771095" -> "30064771097"  [ label = "DDG: pathname"] 
  "111669149697" -> "30064771097"  [ label = "DDG: "] 
  "30064771096" -> "30064771099"  [ label = "DDG: ret"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771075" -> "30064771080"  [ label = "DDG: stderr"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771078" -> "30064771080"  [ label = "DDG: ret"] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
  "30064771075" -> "30064771085"  [ label = "DDG: stderr"] 
  "30064771080" -> "30064771085"  [ label = "DDG: stderr"] 
  "111669149697" -> "30064771085"  [ label = "DDG: "] 
  "30064771083" -> "30064771085"  [ label = "DDG: ret"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771075" -> "30064771092"  [ label = "DDG: stderr"] 
  "30064771080" -> "30064771092"  [ label = "DDG: stderr"] 
  "30064771085" -> "30064771092"  [ label = "DDG: stderr"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "111669149697" -> "30064771094"  [ label = "DDG: "] 
  "30064771075" -> "30064771100"  [ label = "DDG: stderr"] 
  "30064771080" -> "30064771100"  [ label = "DDG: stderr"] 
  "30064771085" -> "30064771100"  [ label = "DDG: stderr"] 
  "30064771092" -> "30064771100"  [ label = "DDG: stderr"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771097" -> "30064771100"  [ label = "DDG: pathname"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "111669149697" -> "90194313217"  [ label = "DDG: "] 
  "111669149697" -> "90194313221"  [ label = "DDG: "] 
  "111669149697" -> "90194313224"  [ label = "DDG: "] 
  "111669149697" -> "90194313228"  [ label = "DDG: "] 
  "111669149697" -> "90194313233"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "CDG: "] 
  "30064771074" -> "30064771076"  [ label = "CDG: "] 
  "30064771074" -> "30064771077"  [ label = "CDG: "] 
  "68719476743" -> "30064771081"  [ label = "CDG: "] 
  "68719476743" -> "30064771082"  [ label = "CDG: "] 
  "68719476743" -> "30064771080"  [ label = "CDG: "] 
  "68719476748" -> "30064771085"  [ label = "CDG: "] 
  "68719476748" -> "30064771086"  [ label = "CDG: "] 
  "68719476748" -> "30064771087"  [ label = "CDG: "] 
  "30064771091" -> "30064771092"  [ label = "CDG: "] 
  "30064771091" -> "30064771093"  [ label = "CDG: "] 
  "30064771091" -> "30064771094"  [ label = "CDG: "] 
  "30064771099" -> "30064771100"  [ label = "CDG: "] 
  "30064771099" -> "30064771101"  [ label = "CDG: "] 
  "30064771099" -> "30064771102"  [ label = "CDG: "] 
}
"""
)
