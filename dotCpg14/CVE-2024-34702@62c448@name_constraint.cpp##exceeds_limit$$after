[33mval[0m [36mres794[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "exceeds_limit" {  
"111669149697" [label = <(METHOD,exceeds_limit)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,size_t dn_count)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,size_t alt_count)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,size_t constraint_count)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
   /**
   * OpenSSL uses a similar limit, but...,{
   /**
   * OpenSSL uses a similar limit, but...)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,size_t MAX_NC_CHECKS: size_t)<SUB>6</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,MAX_NC_CHECKS = (1 &lt;&lt; 20))<SUB>6</SUB>> ]
"68719476736" [label = <(IDENTIFIER,MAX_NC_CHECKS,MAX_NC_CHECKS = (1 &lt;&lt; 20))<SUB>6</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 20)<SUB>6</SUB>> ]
"90194313216" [label = <(LITERAL,1,1 &lt;&lt; 20)<SUB>6</SUB>> ]
"90194313217" [label = <(LITERAL,20,1 &lt;&lt; 20)<SUB>6</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (auto names = checked_add(dn_count, alt_count)))<SUB>8</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>> ]
"94489280513" [label = <(LOCAL,auto names: auto)<SUB>8</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.assignment,names = checked_add(dn_count, alt_count))<SUB>8</SUB>> ]
"68719476737" [label = <(IDENTIFIER,names,names = checked_add(dn_count, alt_count))<SUB>8</SUB>> ]
"30064771075" [label = <(checked_add,checked_add(dn_count, alt_count))<SUB>8</SUB>> ]
"68719476738" [label = <(IDENTIFIER,dn_count,checked_add(dn_count, alt_count))<SUB>8</SUB>> ]
"68719476739" [label = <(IDENTIFIER,alt_count,checked_add(dn_count, alt_count))<SUB>8</SUB>> ]
"25769803779" [label = <(BLOCK,{
      if(auto product = checked_mul(*names, c...,{
      if(auto product = checked_mul(*names, c...)<SUB>8</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (auto product = checked_mul(*names, constraint_count)))<SUB>9</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>> ]
"94489280514" [label = <(LOCAL,auto product: auto)<SUB>9</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.assignment,product = checked_mul(*names, constraint_count))<SUB>9</SUB>> ]
"68719476740" [label = <(IDENTIFIER,product,product = checked_mul(*names, constraint_count))<SUB>9</SUB>> ]
"30064771077" [label = <(checked_mul,checked_mul(*names, constraint_count))<SUB>9</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indirection,*names)<SUB>9</SUB>> ]
"68719476741" [label = <(IDENTIFIER,names,checked_mul(*names, constraint_count))<SUB>9</SUB>> ]
"68719476742" [label = <(IDENTIFIER,constraint_count,checked_mul(*names, constraint_count))<SUB>9</SUB>> ]
"25769803781" [label = <(BLOCK,{
         if(*product &lt; MAX_NC_CHECKS) {
     ...,{
         if(*product &lt; MAX_NC_CHECKS) {
     ...)<SUB>9</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (*product &lt; MAX_NC_CHECKS))<SUB>10</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.lessThan,*product &lt; MAX_NC_CHECKS)<SUB>10</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.indirection,*product)<SUB>10</SUB>> ]
"68719476743" [label = <(IDENTIFIER,product,*product &lt; MAX_NC_CHECKS)<SUB>10</SUB>> ]
"68719476744" [label = <(IDENTIFIER,MAX_NC_CHECKS,*product &lt; MAX_NC_CHECKS)<SUB>10</SUB>> ]
"25769803782" [label = <(BLOCK,{
            return false;
         },{
            return false;
         })<SUB>10</SUB>> ]
"146028888064" [label = <(RETURN,return false;,return false;)<SUB>11</SUB>> ]
"90194313218" [label = <(LITERAL,false,return false;)<SUB>11</SUB>> ]
"146028888065" [label = <(RETURN,return true;,return true;)<SUB>15</SUB>> ]
"90194313219" [label = <(LITERAL,true,return true;)<SUB>15</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,bool)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "90194313216"  [ label = "AST: "] 
  "30064771073" -> "90194313217"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "25769803779"  [ label = "AST: "] 
  "25769803778" -> "94489280513"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476738"  [ label = "AST: "] 
  "30064771075" -> "68719476739"  [ label = "AST: "] 
  "25769803779" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "47244640257" -> "25769803781"  [ label = "AST: "] 
  "25769803780" -> "94489280514"  [ label = "AST: "] 
  "25769803780" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "30064771078" -> "68719476741"  [ label = "AST: "] 
  "25769803781" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "30064771079"  [ label = "AST: "] 
  "47244640258" -> "25769803782"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "25769803782" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "90194313218"  [ label = "AST: "] 
  "146028888065" -> "90194313219"  [ label = "AST: "] 
  "30064771072" -> "30064771075"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771074" -> "30064771078"  [ label = "CFG: "] 
  "30064771074" -> "146028888065"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771076" -> "30064771080"  [ label = "CFG: "] 
  "30064771076" -> "146028888065"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771079" -> "146028888064"  [ label = "CFG: "] 
  "30064771079" -> "146028888065"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771080" -> "30064771079"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "111669149697" -> "30064771073"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: 1 &lt;&lt; 20"] 
  "30064771072" -> "128849018880"  [ label = "DDG: MAX_NC_CHECKS = (1 &lt;&lt; 20)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: names"] 
  "30064771075" -> "128849018880"  [ label = "DDG: dn_count"] 
  "30064771075" -> "128849018880"  [ label = "DDG: alt_count"] 
  "30064771074" -> "128849018880"  [ label = "DDG: checked_add(dn_count, alt_count)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: names = checked_add(dn_count, alt_count)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: product"] 
  "30064771077" -> "128849018880"  [ label = "DDG: *names"] 
  "30064771077" -> "128849018880"  [ label = "DDG: constraint_count"] 
  "30064771076" -> "128849018880"  [ label = "DDG: checked_mul(*names, constraint_count)"] 
  "30064771076" -> "128849018880"  [ label = "DDG: product = checked_mul(*names, constraint_count)"] 
  "30064771079" -> "128849018880"  [ label = "DDG: *product"] 
  "30064771079" -> "128849018880"  [ label = "DDG: MAX_NC_CHECKS"] 
  "30064771079" -> "128849018880"  [ label = "DDG: *product &lt; MAX_NC_CHECKS"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: 1"] 
  "30064771073" -> "30064771072"  [ label = "DDG: 20"] 
  "90194313219" -> "146028888065"  [ label = "DDG: true"] 
  "111669149697" -> "146028888065"  [ label = "DDG: "] 
  "111669149697" -> "90194313219"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: dn_count"] 
  "30064771075" -> "30064771074"  [ label = "DDG: alt_count"] 
  "115964116992" -> "30064771075"  [ label = "DDG: dn_count"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "115964116993" -> "30064771075"  [ label = "DDG: alt_count"] 
  "30064771077" -> "30064771076"  [ label = "DDG: *names"] 
  "30064771077" -> "30064771076"  [ label = "DDG: constraint_count"] 
  "115964116994" -> "30064771077"  [ label = "DDG: constraint_count"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771072" -> "30064771079"  [ label = "DDG: MAX_NC_CHECKS"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "90194313218" -> "146028888064"  [ label = "DDG: false"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "111669149697" -> "90194313218"  [ label = "DDG: "] 
  "30064771074" -> "30064771076"  [ label = "CDG: "] 
  "30064771074" -> "30064771077"  [ label = "CDG: "] 
  "30064771074" -> "30064771078"  [ label = "CDG: "] 
  "30064771074" -> "146028888065"  [ label = "CDG: "] 
  "30064771076" -> "30064771079"  [ label = "CDG: "] 
  "30064771076" -> "30064771080"  [ label = "CDG: "] 
  "30064771076" -> "146028888065"  [ label = "CDG: "] 
  "30064771079" -> "146028888064"  [ label = "CDG: "] 
  "30064771079" -> "146028888065"  [ label = "CDG: "] 
}
"""
)
