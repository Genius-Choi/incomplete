[33mval[0m [36mres686[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "calloc" {  
"111669149697" [label = <(METHOD,calloc)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,size_t n)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,size_t lb)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    if (lb &amp;&amp; n &gt; SIZE_MAX / lb)
      return...,{
    if (lb &amp;&amp; n &gt; SIZE_MAX / lb)
      return...)<SUB>2</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (lb &amp;&amp; n &gt; SIZE_MAX / lb))<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.logicalAnd,lb &amp;&amp; n &gt; SIZE_MAX / lb)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,lb,lb &amp;&amp; n &gt; SIZE_MAX / lb)<SUB>3</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.greaterThan,n &gt; SIZE_MAX / lb)<SUB>3</SUB>> ]
"68719476737" [label = <(IDENTIFIER,n,n &gt; SIZE_MAX / lb)<SUB>3</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.division,SIZE_MAX / lb)<SUB>3</SUB>> ]
"68719476738" [label = <(IDENTIFIER,SIZE_MAX,SIZE_MAX / lb)<SUB>3</SUB>> ]
"68719476739" [label = <(IDENTIFIER,lb,SIZE_MAX / lb)<SUB>3</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>> ]
"146028888064" [label = <(RETURN,return NULL;,return NULL;)<SUB>4</SUB>> ]
"68719476740" [label = <(IDENTIFIER,NULL,return NULL;)<SUB>4</SUB>> ]
"146028888065" [label = <(RETURN,return((void *)REDIRECT_MALLOC(n*lb));,return((void *)REDIRECT_MALLOC(n*lb));)<SUB>26</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.cast,(void *)REDIRECT_MALLOC(n*lb))<SUB>26</SUB>> ]
"184683593728" [label = <(UNKNOWN,void *,void *)<SUB>26</SUB>> ]
"30064771076" [label = <(REDIRECT_MALLOC,REDIRECT_MALLOC(n*lb))<SUB>26</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.multiplication,n*lb)<SUB>26</SUB>> ]
"68719476741" [label = <(IDENTIFIER,n,n*lb)<SUB>26</SUB>> ]
"68719476742" [label = <(IDENTIFIER,lb,n*lb)<SUB>26</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,void*)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888065"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "68719476737"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "68719476738"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "25769803778" -> "146028888064"  [ label = "AST: "] 
  "146028888064" -> "68719476740"  [ label = "AST: "] 
  "146028888065" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "184683593728"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "68719476742"  [ label = "AST: "] 
  "146028888065" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "184683593728"  [ label = "CFG: "] 
  "30064771072" -> "146028888064"  [ label = "CFG: "] 
  "30064771075" -> "146028888065"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "184683593728" -> "30064771077"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "111669149697" -> "30064771074"  [ label = "CFG: "] 
  "146028888065" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116992" -> "128849018880"  [ label = "DDG: n"] 
  "30064771072" -> "128849018880"  [ label = "DDG: lb"] 
  "30064771073" -> "128849018880"  [ label = "DDG: n"] 
  "30064771073" -> "128849018880"  [ label = "DDG: SIZE_MAX / lb"] 
  "30064771072" -> "128849018880"  [ label = "DDG: n &gt; SIZE_MAX / lb"] 
  "30064771072" -> "128849018880"  [ label = "DDG: lb &amp;&amp; n &gt; SIZE_MAX / lb"] 
  "30064771074" -> "128849018880"  [ label = "DDG: SIZE_MAX"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "30064771075" -> "146028888065"  [ label = "DDG: (void *)REDIRECT_MALLOC(n*lb)"] 
  "30064771076" -> "30064771075"  [ label = "DDG: n*lb"] 
  "115964116993" -> "30064771072"  [ label = "DDG: lb"] 
  "30064771074" -> "30064771072"  [ label = "DDG: lb"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: n"] 
  "30064771073" -> "30064771072"  [ label = "DDG: SIZE_MAX / lb"] 
  "68719476740" -> "146028888064"  [ label = "DDG: NULL"] 
  "111669149697" -> "146028888064"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: n"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771074" -> "30064771073"  [ label = "DDG: SIZE_MAX"] 
  "30064771074" -> "30064771073"  [ label = "DDG: lb"] 
  "111669149697" -> "68719476740"  [ label = "DDG: "] 
  "30064771077" -> "30064771076"  [ label = "DDG: n"] 
  "30064771077" -> "30064771076"  [ label = "DDG: lb"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116993" -> "30064771074"  [ label = "DDG: lb"] 
  "115964116992" -> "30064771077"  [ label = "DDG: n"] 
  "30064771073" -> "30064771077"  [ label = "DDG: n"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771072" -> "30064771077"  [ label = "DDG: lb"] 
  "30064771072" -> "184683593728"  [ label = "CDG: "] 
  "30064771072" -> "30064771076"  [ label = "CDG: "] 
  "30064771072" -> "30064771075"  [ label = "CDG: "] 
  "30064771072" -> "146028888065"  [ label = "CDG: "] 
  "30064771072" -> "30064771077"  [ label = "CDG: "] 
  "30064771072" -> "146028888064"  [ label = "CDG: "] 
}
"""
)
