[33mval[0m [36mres192[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "remarshal" {  
"111669149697" [label = <(METHOD,remarshal)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.assignment,input_file = None)<SUB>15</SUB>> ]
"68719476744" [label = <(IDENTIFIER,input_file,input_file = None)<SUB>15</SUB>> ]
"90194313216" [label = <(LITERAL,None,input_file = None)<SUB>15</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,output_file = None)<SUB>16</SUB>> ]
"68719476745" [label = <(IDENTIFIER,output_file,output_file = None)<SUB>16</SUB>> ]
"90194313217" [label = <(LITERAL,None,output_file = None)<SUB>16</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,TRY,try: ...)<SUB>18</SUB>> ]
"25769803788" [label = <(BLOCK,input_file = sys.stdin.buffer if input == &quot;-&quot; e...,input_file = sys.stdin.buffer if input == &quot;-&quot; e...)<SUB>18</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,input_file = sys.stdin.buffer if input == &quot;-&quot; e...)<SUB>19</SUB>> ]
"68719476753" [label = <(IDENTIFIER,input_file,input_file = sys.stdin.buffer if input == &quot;-&quot; e...)<SUB>19</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.conditional,sys.stdin.buffer if input == &quot;-&quot; else tmp0 = Pa...)<SUB>19</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.equals,input == &quot;-&quot;)<SUB>19</SUB>> ]
"68719476747" [label = <(IDENTIFIER,input,input == &quot;-&quot;)<SUB>19</SUB>> ]
"90194313218" [label = <(LITERAL,&quot;-&quot;,input == &quot;-&quot;)<SUB>19</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.fieldAccess,sys.stdin.buffer)<SUB>19</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.fieldAccess,sys.stdin)<SUB>19</SUB>> ]
"68719476746" [label = <(IDENTIFIER,sys,sys.stdin.buffer if input == &quot;-&quot; else tmp0 = Pa...)<SUB>19</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,stdin,stdin)<SUB>19</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>19</SUB>> ]
"25769803778" [label = <(BLOCK,tmp0 = Path(input)
tmp0.open(&quot;rb&quot;),tmp0 = Path(input)
tmp0.open(&quot;rb&quot;))<SUB>19</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,tmp0 = Path(input))<SUB>19</SUB>> ]
"68719476750" [label = <(IDENTIFIER,tmp0,tmp0 = Path(input))<SUB>19</SUB>> ]
"30064771084" [label = <(Path,Path(input))<SUB>19</SUB>> ]
"68719476749" [label = <(IDENTIFIER,Path,Path(input))<SUB>19</SUB>> ]
"68719476748" [label = <(IDENTIFIER,input,Path(input))<SUB>19</SUB>> ]
"30064771087" [label = <(open,tmp0.open(&quot;rb&quot;))<SUB>19</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.fieldAccess,tmp0.open)<SUB>19</SUB>> ]
"68719476751" [label = <(IDENTIFIER,tmp0,tmp0.open(&quot;rb&quot;))<SUB>19</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,open,open)<SUB>19</SUB>> ]
"68719476752" [label = <(IDENTIFIER,tmp0,tmp0.open(&quot;rb&quot;))<SUB>19</SUB>> ]
"90194313219" [label = <(LITERAL,&quot;rb&quot;,tmp0.open(&quot;rb&quot;))<SUB>19</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.assignment,output_file = sys.stdout.buffer if output == &quot;-...)<SUB>20</SUB>> ]
"68719476761" [label = <(IDENTIFIER,output_file,output_file = sys.stdout.buffer if output == &quot;-...)<SUB>20</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.conditional,sys.stdout.buffer if output == &quot;-&quot; else tmp1 = ...)<SUB>20</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.equals,output == &quot;-&quot;)<SUB>20</SUB>> ]
"68719476755" [label = <(IDENTIFIER,output,output == &quot;-&quot;)<SUB>20</SUB>> ]
"90194313220" [label = <(LITERAL,&quot;-&quot;,output == &quot;-&quot;)<SUB>20</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.fieldAccess,sys.stdout.buffer)<SUB>20</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.fieldAccess,sys.stdout)<SUB>20</SUB>> ]
"68719476754" [label = <(IDENTIFIER,sys,sys.stdout.buffer if output == &quot;-&quot; else tmp1 = ...)<SUB>20</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,stdout,stdout)<SUB>20</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>20</SUB>> ]
"25769803779" [label = <(BLOCK,tmp1 = Path(output)
tmp1.open(&quot;wb&quot;),tmp1 = Path(output)
tmp1.open(&quot;wb&quot;))<SUB>20</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.assignment,tmp1 = Path(output))<SUB>20</SUB>> ]
"68719476758" [label = <(IDENTIFIER,tmp1,tmp1 = Path(output))<SUB>20</SUB>> ]
"30064771093" [label = <(Path,Path(output))<SUB>20</SUB>> ]
"68719476757" [label = <(IDENTIFIER,Path,Path(output))<SUB>20</SUB>> ]
"68719476756" [label = <(IDENTIFIER,output,Path(output))<SUB>20</SUB>> ]
"30064771096" [label = <(open,tmp1.open(&quot;wb&quot;))<SUB>20</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.fieldAccess,tmp1.open)<SUB>20</SUB>> ]
"68719476759" [label = <(IDENTIFIER,tmp1,tmp1.open(&quot;wb&quot;))<SUB>20</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,open,open)<SUB>20</SUB>> ]
"68719476760" [label = <(IDENTIFIER,tmp1,tmp1.open(&quot;wb&quot;))<SUB>20</SUB>> ]
"90194313221" [label = <(LITERAL,&quot;wb&quot;,tmp1.open(&quot;wb&quot;))<SUB>20</SUB>> ]
"30064771101" [label = <(&lt;operator&gt;.assignment,input_data = input_file.read())<SUB>22</SUB>> ]
"68719476764" [label = <(IDENTIFIER,input_data,input_data = input_file.read())<SUB>22</SUB>> ]
"30064771100" [label = <(read,input_file.read())<SUB>22</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.fieldAccess,input_file.read)<SUB>22</SUB>> ]
"68719476762" [label = <(IDENTIFIER,input_file,input_file.read())<SUB>22</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,read,read)<SUB>22</SUB>> ]
"68719476763" [label = <(IDENTIFIER,input_file,input_file.read())<SUB>22</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>23</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.logicalNot,not isinstance(input_data, bytes))<SUB>23</SUB>> ]
"30064771102" [label = <(isinstance,isinstance(input_data, bytes))<SUB>23</SUB>> ]
"68719476767" [label = <(IDENTIFIER,isinstance,isinstance(input_data, bytes))<SUB>23</SUB>> ]
"68719476765" [label = <(IDENTIFIER,input_data,isinstance(input_data, bytes))<SUB>23</SUB>> ]
"68719476766" [label = <(IDENTIFIER,bytes,isinstance(input_data, bytes))<SUB>23</SUB>> ]
"25769803780" [label = <(BLOCK,msg = &quot;input_data must be bytes&quot;
raise TypeErro...,msg = &quot;input_data must be bytes&quot;
raise TypeErro...)<SUB>23</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.assignment,msg = &quot;input_data must be bytes&quot;)<SUB>24</SUB>> ]
"68719476768" [label = <(IDENTIFIER,msg,msg = &quot;input_data must be bytes&quot;)<SUB>24</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;input_data must be bytes&quot;,msg = &quot;input_data must be bytes&quot;)<SUB>24</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.raise,raise TypeError(msg))<SUB>25</SUB>> ]
"30064771105" [label = <(TypeError,TypeError(msg))<SUB>25</SUB>> ]
"68719476770" [label = <(IDENTIFIER,TypeError,TypeError(msg))<SUB>25</SUB>> ]
"68719476769" [label = <(IDENTIFIER,msg,TypeError(msg))<SUB>25</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.assignment,parsed = decode(input_format, input_data))<SUB>27</SUB>> ]
"68719476774" [label = <(IDENTIFIER,parsed,parsed = decode(input_format, input_data))<SUB>27</SUB>> ]
"30064771107" [label = <(decode,decode(input_format, input_data))<SUB>27</SUB>> ]
"68719476773" [label = <(IDENTIFIER,decode,decode(input_format, input_data))<SUB>27</SUB>> ]
"68719476771" [label = <(IDENTIFIER,input_format,decode(input_format, input_data))<SUB>27</SUB>> ]
"68719476772" [label = <(IDENTIFIER,input_data,decode(input_format, input_data))<SUB>27</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>29</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.isNot,unwrap is not None)<SUB>29</SUB>> ]
"68719476775" [label = <(IDENTIFIER,unwrap,unwrap is not None)<SUB>29</SUB>> ]
"90194313223" [label = <(LITERAL,None,unwrap is not None)<SUB>29</SUB>> ]
"25769803782" [label = <(BLOCK,if ... : ...
parsed = parsed[unwrap],if ... : ...
parsed = parsed[unwrap])<SUB>29</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>30</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.logicalNot,not isinstance(parsed, Mapping))<SUB>30</SUB>> ]
"30064771110" [label = <(isinstance,isinstance(parsed, Mapping))<SUB>30</SUB>> ]
"68719476778" [label = <(IDENTIFIER,isinstance,isinstance(parsed, Mapping))<SUB>30</SUB>> ]
"68719476776" [label = <(IDENTIFIER,parsed,isinstance(parsed, Mapping))<SUB>30</SUB>> ]
"68719476777" [label = <(IDENTIFIER,Mapping,isinstance(parsed, Mapping))<SUB>30</SUB>> ]
"25769803781" [label = <(BLOCK,msg = f&quot;Top-level value of type '{type(parsed)....,msg = f&quot;Top-level value of type '{type(parsed)....)<SUB>30</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assignment,msg = f&quot;Top-level value of type '{type(parsed)....)<SUB>31</SUB>> ]
"68719476781" [label = <(IDENTIFIER,msg,msg = f&quot;Top-level value of type '{type(parsed)....)<SUB>31</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.stringExpressionList,f&quot;Top-level value of type '{type(parsed).__name...)<SUB>32</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.formatString,f&quot;Top-level value of type '{type(parsed).__name...)<SUB>32</SUB>> ]
"90194313224" [label = <(LITERAL,Top-level value of type ',f&quot;Top-level value of type '{type(parsed).__name...)<SUB>32</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.formattedValue,{type(parsed).__name__})<SUB>32</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.fieldAccess,type(parsed).__name__)<SUB>32</SUB>> ]
"30064771112" [label = <(type,type(parsed))<SUB>32</SUB>> ]
"68719476780" [label = <(IDENTIFIER,type,type(parsed))<SUB>32</SUB>> ]
"68719476779" [label = <(IDENTIFIER,parsed,type(parsed))<SUB>32</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,__name__,__name__)<SUB>32</SUB>> ]
"90194313225" [label = <(LITERAL,' ,f&quot;Top-level value of type '{type(parsed).__name...)<SUB>32</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;cannot be unwrapped&quot;,f&quot;Top-level value of type '{type(parsed).__name...)<SUB>33</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.raise,raise TypeError(msg))<SUB>35</SUB>> ]
"30064771118" [label = <(TypeError,TypeError(msg))<SUB>35</SUB>> ]
"68719476783" [label = <(IDENTIFIER,TypeError,TypeError(msg))<SUB>35</SUB>> ]
"68719476782" [label = <(IDENTIFIER,msg,TypeError(msg))<SUB>35</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.assignment,parsed = parsed[unwrap])<SUB>36</SUB>> ]
"68719476786" [label = <(IDENTIFIER,parsed,parsed = parsed[unwrap])<SUB>36</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.indexAccess,parsed[unwrap])<SUB>36</SUB>> ]
"68719476784" [label = <(IDENTIFIER,parsed,parsed = parsed[unwrap])<SUB>36</SUB>> ]
"68719476785" [label = <(IDENTIFIER,unwrap,parsed = parsed[unwrap])<SUB>36</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>37</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.isNot,wrap is not None)<SUB>37</SUB>> ]
"68719476787" [label = <(IDENTIFIER,wrap,wrap is not None)<SUB>37</SUB>> ]
"90194313227" [label = <(LITERAL,None,wrap is not None)<SUB>37</SUB>> ]
"25769803784" [label = <(BLOCK,temp = tmp2 = {}
tmp2
temp[wrap] = parsed
parse...,temp = tmp2 = {}
tmp2
temp[wrap] = parsed
parse...)<SUB>37</SUB>> ]
"30064771125" [label = <(&lt;operator&gt;.assignment,temp = tmp2 = {}
tmp2)<SUB>38</SUB>> ]
"68719476790" [label = <(IDENTIFIER,temp,temp = tmp2 = {}
tmp2)<SUB>38</SUB>> ]
"25769803783" [label = <(BLOCK,tmp2 = {}
tmp2,tmp2 = {}
tmp2)<SUB>38</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.assignment,tmp2 = {})<SUB>38</SUB>> ]
"68719476788" [label = <(IDENTIFIER,tmp2,tmp2 = {})<SUB>38</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.dictLiteral,{})<SUB>38</SUB>> ]
"68719476789" [label = <(IDENTIFIER,tmp2,tmp2 = {}
tmp2)<SUB>38</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.assignment,temp[wrap] = parsed)<SUB>39</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.indexAccess,temp[wrap])<SUB>39</SUB>> ]
"68719476792" [label = <(IDENTIFIER,temp,temp[wrap] = parsed)<SUB>39</SUB>> ]
"68719476793" [label = <(IDENTIFIER,wrap,temp[wrap] = parsed)<SUB>39</SUB>> ]
"68719476791" [label = <(IDENTIFIER,parsed,temp[wrap] = parsed)<SUB>39</SUB>> ]
"30064771128" [label = <(&lt;operator&gt;.assignment,parsed = temp)<SUB>40</SUB>> ]
"68719476795" [label = <(IDENTIFIER,parsed,parsed = temp)<SUB>40</SUB>> ]
"68719476794" [label = <(IDENTIFIER,temp,parsed = temp)<SUB>40</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>42</SUB>> ]
"68719476796" [label = <(IDENTIFIER,transform,if ... : ...)<SUB>42</SUB>> ]
"25769803785" [label = <(BLOCK,parsed = transform(parsed),parsed = transform(parsed))<SUB>42</SUB>> ]
"30064771130" [label = <(&lt;operator&gt;.assignment,parsed = transform(parsed))<SUB>43</SUB>> ]
"68719476799" [label = <(IDENTIFIER,parsed,parsed = transform(parsed))<SUB>43</SUB>> ]
"30064771129" [label = <(transform,transform(parsed))<SUB>43</SUB>> ]
"68719476798" [label = <(IDENTIFIER,transform,transform(parsed))<SUB>43</SUB>> ]
"68719476797" [label = <(IDENTIFIER,parsed,transform(parsed))<SUB>43</SUB>> ]
"30064771132" [label = <(&lt;operator&gt;.assignment,encoded = encode(output_format, parsed, json_in...)<SUB>45</SUB>> ]
"68719476807" [label = <(IDENTIFIER,encoded,encoded = encode(output_format, parsed, json_in...)<SUB>45</SUB>> ]
"30064771131" [label = <(encode,encode(output_format, parsed, json_indent = jso...)<SUB>45</SUB>> ]
"68719476806" [label = <(IDENTIFIER,encode,encode(output_format, parsed, json_indent = jso...)<SUB>45</SUB>> ]
"68719476800" [label = <(IDENTIFIER,output_format,encode(output_format, parsed, json_indent = jso...)<SUB>46</SUB>> ]
"68719476801" [label = <(IDENTIFIER,parsed,encode(output_format, parsed, json_indent = jso...)<SUB>47</SUB>> ]
"68719476802" [label = <(IDENTIFIER,json_indent,encode(output_format, parsed, json_indent = jso...)<SUB>48</SUB>> ]
"68719476803" [label = <(IDENTIFIER,ordered,encode(output_format, parsed, json_indent = jso...)<SUB>49</SUB>> ]
"68719476804" [label = <(IDENTIFIER,stringify,encode(output_format, parsed, json_indent = jso...)<SUB>50</SUB>> ]
"68719476805" [label = <(IDENTIFIER,yaml_options,encode(output_format, parsed, json_indent = jso...)<SUB>51</SUB>> ]
"30064771134" [label = <(write,output_file.write(encoded))<SUB>54</SUB>> ]
"30064771133" [label = <(&lt;operator&gt;.fieldAccess,output_file.write)<SUB>54</SUB>> ]
"68719476809" [label = <(IDENTIFIER,output_file,output_file.write(encoded))<SUB>54</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,write,write)<SUB>54</SUB>> ]
"68719476810" [label = <(IDENTIFIER,output_file,output_file.write(encoded))<SUB>54</SUB>> ]
"68719476808" [label = <(IDENTIFIER,encoded,output_file.write(encoded))<SUB>54</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,FINALLY,if ... : ...
if ... : ...)<SUB>18</SUB>> ]
"25769803789" [label = <(BLOCK,if ... : ...
if ... : ...,if ... : ...
if ... : ...)<SUB>18</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>56</SUB>> ]
"30064771135" [label = <(&lt;operator&gt;.isNot,input_file is not None)<SUB>56</SUB>> ]
"68719476811" [label = <(IDENTIFIER,input_file,input_file is not None)<SUB>56</SUB>> ]
"90194313228" [label = <(LITERAL,None,input_file is not None)<SUB>56</SUB>> ]
"25769803786" [label = <(BLOCK,input_file.close(),input_file.close())<SUB>56</SUB>> ]
"30064771137" [label = <(close,input_file.close())<SUB>57</SUB>> ]
"30064771136" [label = <(&lt;operator&gt;.fieldAccess,input_file.close)<SUB>57</SUB>> ]
"68719476812" [label = <(IDENTIFIER,input_file,input_file.close())<SUB>57</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,close,close)<SUB>57</SUB>> ]
"68719476813" [label = <(IDENTIFIER,input_file,input_file.close())<SUB>57</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,IF,if ... : ...)<SUB>58</SUB>> ]
"30064771140" [label = <(&lt;operator&gt;.logicalAnd,output != &quot;-&quot; and output_file is not None)<SUB>58</SUB>> ]
"30064771138" [label = <(&lt;operator&gt;.notEquals,output != &quot;-&quot;)<SUB>58</SUB>> ]
"68719476814" [label = <(IDENTIFIER,output,output != &quot;-&quot;)<SUB>58</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;-&quot;,output != &quot;-&quot;)<SUB>58</SUB>> ]
"30064771139" [label = <(&lt;operator&gt;.isNot,output_file is not None)<SUB>58</SUB>> ]
"68719476815" [label = <(IDENTIFIER,output_file,output_file is not None)<SUB>58</SUB>> ]
"90194313230" [label = <(LITERAL,None,output_file is not None)<SUB>58</SUB>> ]
"25769803787" [label = <(BLOCK,output_file.close(),output_file.close())<SUB>58</SUB>> ]
"30064771142" [label = <(close,output_file.close())<SUB>59</SUB>> ]
"30064771141" [label = <(&lt;operator&gt;.fieldAccess,output_file.close)<SUB>59</SUB>> ]
"68719476816" [label = <(IDENTIFIER,output_file,output_file.close())<SUB>59</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,close,close)<SUB>59</SUB>> ]
"68719476817" [label = <(IDENTIFIER,output_file,output_file.close())<SUB>59</SUB>> ]
"94489280520" [label = <(LOCAL,input_file: ANY)<SUB>15</SUB>> ]
"94489280521" [label = <(LOCAL,output_file: ANY)<SUB>16</SUB>> ]
"94489280522" [label = <(LOCAL,sys: ANY)<SUB>19</SUB>> ]
"94489280524" [label = <(LOCAL,Path: ANY)<SUB>19</SUB>> ]
"94489280526" [label = <(LOCAL,tmp0: Path.&lt;returnValue&gt;)<SUB>19</SUB>> ]
"94489280527" [label = <(LOCAL,tmp1: Path.&lt;returnValue&gt;)<SUB>20</SUB>> ]
"94489280528" [label = <(LOCAL,input_data: ANY)<SUB>22</SUB>> ]
"94489280529" [label = <(LOCAL,bytes: ANY)<SUB>23</SUB>> ]
"94489280530" [label = <(LOCAL,isinstance: ANY)<SUB>23</SUB>> ]
"94489280531" [label = <(LOCAL,msg: __builtin.str)<SUB>24</SUB>> ]
"94489280532" [label = <(LOCAL,TypeError: ANY)<SUB>25</SUB>> ]
"94489280534" [label = <(LOCAL,decode: ANY)<SUB>27</SUB>> ]
"94489280536" [label = <(LOCAL,parsed: __builtin.dict)<SUB>27</SUB>> ]
"94489280537" [label = <(LOCAL,Mapping: ANY)<SUB>30</SUB>> ]
"94489280539" [label = <(LOCAL,type: ANY)<SUB>32</SUB>> ]
"94489280540" [label = <(LOCAL,tmp2: __builtin.dict)<SUB>38</SUB>> ]
"94489280541" [label = <(LOCAL,temp: __builtin.dict)<SUB>38</SUB>> ]
"94489280542" [label = <(LOCAL,encode: ANY)<SUB>45</SUB>> ]
"94489280544" [label = <(LOCAL,encoded: encode.&lt;returnValue&gt;)<SUB>45</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,input)<SUB>2</SUB>> ]
"115964116993" [label = <(PARAM,output)<SUB>3</SUB>> ]
"115964116994" [label = <(PARAM,input_format)<SUB>4</SUB>> ]
"115964116995" [label = <(PARAM,output_format)<SUB>5</SUB>> ]
"115964116996" [label = <(PARAM,json_indent)<SUB>7</SUB>> ]
"115964116997" [label = <(PARAM,ordered)<SUB>8</SUB>> ]
"115964116998" [label = <(PARAM,stringify)<SUB>9</SUB>> ]
"115964116999" [label = <(PARAM,transform)<SUB>10</SUB>> ]
"115964117000" [label = <(PARAM,unwrap)<SUB>11</SUB>> ]
"115964117001" [label = <(PARAM,wrap)<SUB>12</SUB>> ]
"115964117002" [label = <(PARAM,yaml_options)<SUB>13</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "115964116995"  [ label = "AST: "] 
  "111669149697" -> "115964116996"  [ label = "AST: "] 
  "111669149697" -> "115964116997"  [ label = "AST: "] 
  "111669149697" -> "115964116998"  [ label = "AST: "] 
  "111669149697" -> "115964116999"  [ label = "AST: "] 
  "111669149697" -> "115964117000"  [ label = "AST: "] 
  "111669149697" -> "115964117001"  [ label = "AST: "] 
  "111669149697" -> "115964117002"  [ label = "AST: "] 
  "25769803777" -> "30064771079"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771080"  [ label = "AST: "] 
  "25769803777" -> "94489280521"  [ label = "AST: "] 
  "25769803777" -> "47244640263"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "94489280524"  [ label = "AST: "] 
  "25769803777" -> "94489280526"  [ label = "AST: "] 
  "25769803777" -> "94489280527"  [ label = "AST: "] 
  "25769803777" -> "94489280528"  [ label = "AST: "] 
  "25769803777" -> "94489280529"  [ label = "AST: "] 
  "25769803777" -> "94489280530"  [ label = "AST: "] 
  "25769803777" -> "94489280531"  [ label = "AST: "] 
  "25769803777" -> "94489280532"  [ label = "AST: "] 
  "25769803777" -> "94489280534"  [ label = "AST: "] 
  "25769803777" -> "94489280536"  [ label = "AST: "] 
  "25769803777" -> "94489280537"  [ label = "AST: "] 
  "25769803777" -> "94489280539"  [ label = "AST: "] 
  "25769803777" -> "94489280540"  [ label = "AST: "] 
  "25769803777" -> "94489280541"  [ label = "AST: "] 
  "25769803777" -> "94489280542"  [ label = "AST: "] 
  "25769803777" -> "94489280544"  [ label = "AST: "] 
  "30064771079" -> "68719476744"  [ label = "AST: "] 
  "30064771079" -> "90194313216"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "90194313217"  [ label = "AST: "] 
  "47244640263" -> "25769803788"  [ label = "AST: "] 
  "47244640263" -> "47244640264"  [ label = "AST: "] 
  "25769803788" -> "30064771089"  [ label = "AST: "] 
  "25769803788" -> "30064771098"  [ label = "AST: "] 
  "25769803788" -> "30064771101"  [ label = "AST: "] 
  "25769803788" -> "47244640256"  [ label = "AST: "] 
  "25769803788" -> "30064771108"  [ label = "AST: "] 
  "25769803788" -> "47244640258"  [ label = "AST: "] 
  "25769803788" -> "47244640259"  [ label = "AST: "] 
  "25769803788" -> "47244640260"  [ label = "AST: "] 
  "25769803788" -> "30064771132"  [ label = "AST: "] 
  "25769803788" -> "30064771134"  [ label = "AST: "] 
  "30064771089" -> "68719476753"  [ label = "AST: "] 
  "30064771089" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "30064771083"  [ label = "AST: "] 
  "30064771088" -> "30064771082"  [ label = "AST: "] 
  "30064771088" -> "25769803778"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "30064771083" -> "90194313218"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771082" -> "55834574849"  [ label = "AST: "] 
  "30064771081" -> "68719476746"  [ label = "AST: "] 
  "30064771081" -> "55834574848"  [ label = "AST: "] 
  "25769803778" -> "30064771085"  [ label = "AST: "] 
  "25769803778" -> "30064771087"  [ label = "AST: "] 
  "30064771085" -> "68719476750"  [ label = "AST: "] 
  "30064771085" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771087" -> "68719476752"  [ label = "AST: "] 
  "30064771087" -> "90194313219"  [ label = "AST: "] 
  "30064771086" -> "68719476751"  [ label = "AST: "] 
  "30064771086" -> "55834574850"  [ label = "AST: "] 
  "30064771098" -> "68719476761"  [ label = "AST: "] 
  "30064771098" -> "30064771097"  [ label = "AST: "] 
  "30064771097" -> "30064771092"  [ label = "AST: "] 
  "30064771097" -> "30064771091"  [ label = "AST: "] 
  "30064771097" -> "25769803779"  [ label = "AST: "] 
  "30064771092" -> "68719476755"  [ label = "AST: "] 
  "30064771092" -> "90194313220"  [ label = "AST: "] 
  "30064771091" -> "30064771090"  [ label = "AST: "] 
  "30064771091" -> "55834574852"  [ label = "AST: "] 
  "30064771090" -> "68719476754"  [ label = "AST: "] 
  "30064771090" -> "55834574851"  [ label = "AST: "] 
  "25769803779" -> "30064771094"  [ label = "AST: "] 
  "25769803779" -> "30064771096"  [ label = "AST: "] 
  "30064771094" -> "68719476758"  [ label = "AST: "] 
  "30064771094" -> "30064771093"  [ label = "AST: "] 
  "30064771093" -> "68719476757"  [ label = "AST: "] 
  "30064771093" -> "68719476756"  [ label = "AST: "] 
  "30064771096" -> "30064771095"  [ label = "AST: "] 
  "30064771096" -> "68719476760"  [ label = "AST: "] 
  "30064771096" -> "90194313221"  [ label = "AST: "] 
  "30064771095" -> "68719476759"  [ label = "AST: "] 
  "30064771095" -> "55834574853"  [ label = "AST: "] 
  "30064771101" -> "68719476764"  [ label = "AST: "] 
  "30064771101" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "30064771099"  [ label = "AST: "] 
  "30064771100" -> "68719476763"  [ label = "AST: "] 
  "30064771099" -> "68719476762"  [ label = "AST: "] 
  "30064771099" -> "55834574854"  [ label = "AST: "] 
  "47244640256" -> "30064771103"  [ label = "AST: "] 
  "47244640256" -> "25769803780"  [ label = "AST: "] 
  "30064771103" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "68719476767"  [ label = "AST: "] 
  "30064771102" -> "68719476765"  [ label = "AST: "] 
  "30064771102" -> "68719476766"  [ label = "AST: "] 
  "25769803780" -> "30064771104"  [ label = "AST: "] 
  "25769803780" -> "30064771106"  [ label = "AST: "] 
  "30064771104" -> "68719476768"  [ label = "AST: "] 
  "30064771104" -> "90194313222"  [ label = "AST: "] 
  "30064771106" -> "30064771105"  [ label = "AST: "] 
  "30064771105" -> "68719476770"  [ label = "AST: "] 
  "30064771105" -> "68719476769"  [ label = "AST: "] 
  "30064771108" -> "68719476774"  [ label = "AST: "] 
  "30064771108" -> "30064771107"  [ label = "AST: "] 
  "30064771107" -> "68719476773"  [ label = "AST: "] 
  "30064771107" -> "68719476771"  [ label = "AST: "] 
  "30064771107" -> "68719476772"  [ label = "AST: "] 
  "47244640258" -> "30064771109"  [ label = "AST: "] 
  "47244640258" -> "25769803782"  [ label = "AST: "] 
  "30064771109" -> "68719476775"  [ label = "AST: "] 
  "30064771109" -> "90194313223"  [ label = "AST: "] 
  "25769803782" -> "47244640257"  [ label = "AST: "] 
  "25769803782" -> "30064771121"  [ label = "AST: "] 
  "47244640257" -> "30064771111"  [ label = "AST: "] 
  "47244640257" -> "25769803781"  [ label = "AST: "] 
  "30064771111" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "68719476778"  [ label = "AST: "] 
  "30064771110" -> "68719476776"  [ label = "AST: "] 
  "30064771110" -> "68719476777"  [ label = "AST: "] 
  "25769803781" -> "30064771117"  [ label = "AST: "] 
  "25769803781" -> "30064771119"  [ label = "AST: "] 
  "30064771117" -> "68719476781"  [ label = "AST: "] 
  "30064771117" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "30064771115"  [ label = "AST: "] 
  "30064771116" -> "90194313226"  [ label = "AST: "] 
  "30064771115" -> "90194313224"  [ label = "AST: "] 
  "30064771115" -> "30064771114"  [ label = "AST: "] 
  "30064771115" -> "90194313225"  [ label = "AST: "] 
  "30064771114" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "30064771112"  [ label = "AST: "] 
  "30064771113" -> "55834574855"  [ label = "AST: "] 
  "30064771112" -> "68719476780"  [ label = "AST: "] 
  "30064771112" -> "68719476779"  [ label = "AST: "] 
  "30064771119" -> "30064771118"  [ label = "AST: "] 
  "30064771118" -> "68719476783"  [ label = "AST: "] 
  "30064771118" -> "68719476782"  [ label = "AST: "] 
  "30064771121" -> "68719476786"  [ label = "AST: "] 
  "30064771121" -> "30064771120"  [ label = "AST: "] 
  "30064771120" -> "68719476784"  [ label = "AST: "] 
  "30064771120" -> "68719476785"  [ label = "AST: "] 
  "47244640259" -> "30064771122"  [ label = "AST: "] 
  "47244640259" -> "25769803784"  [ label = "AST: "] 
  "30064771122" -> "68719476787"  [ label = "AST: "] 
  "30064771122" -> "90194313227"  [ label = "AST: "] 
  "25769803784" -> "30064771125"  [ label = "AST: "] 
  "25769803784" -> "30064771127"  [ label = "AST: "] 
  "25769803784" -> "30064771128"  [ label = "AST: "] 
  "30064771125" -> "68719476790"  [ label = "AST: "] 
  "30064771125" -> "25769803783"  [ label = "AST: "] 
  "25769803783" -> "30064771124"  [ label = "AST: "] 
  "25769803783" -> "68719476789"  [ label = "AST: "] 
  "30064771124" -> "68719476788"  [ label = "AST: "] 
  "30064771124" -> "30064771123"  [ label = "AST: "] 
  "30064771127" -> "30064771126"  [ label = "AST: "] 
  "30064771127" -> "68719476791"  [ label = "AST: "] 
  "30064771126" -> "68719476792"  [ label = "AST: "] 
  "30064771126" -> "68719476793"  [ label = "AST: "] 
  "30064771128" -> "68719476795"  [ label = "AST: "] 
  "30064771128" -> "68719476794"  [ label = "AST: "] 
  "47244640260" -> "68719476796"  [ label = "AST: "] 
  "47244640260" -> "25769803785"  [ label = "AST: "] 
  "25769803785" -> "30064771130"  [ label = "AST: "] 
  "30064771130" -> "68719476799"  [ label = "AST: "] 
  "30064771130" -> "30064771129"  [ label = "AST: "] 
  "30064771129" -> "68719476798"  [ label = "AST: "] 
  "30064771129" -> "68719476797"  [ label = "AST: "] 
  "30064771132" -> "68719476807"  [ label = "AST: "] 
  "30064771132" -> "30064771131"  [ label = "AST: "] 
  "30064771131" -> "68719476806"  [ label = "AST: "] 
  "30064771131" -> "68719476800"  [ label = "AST: "] 
  "30064771131" -> "68719476801"  [ label = "AST: "] 
  "30064771131" -> "68719476802"  [ label = "AST: "] 
  "30064771131" -> "68719476803"  [ label = "AST: "] 
  "30064771131" -> "68719476804"  [ label = "AST: "] 
  "30064771131" -> "68719476805"  [ label = "AST: "] 
  "30064771134" -> "30064771133"  [ label = "AST: "] 
  "30064771134" -> "68719476810"  [ label = "AST: "] 
  "30064771134" -> "68719476808"  [ label = "AST: "] 
  "30064771133" -> "68719476809"  [ label = "AST: "] 
  "30064771133" -> "55834574856"  [ label = "AST: "] 
  "47244640264" -> "25769803789"  [ label = "AST: "] 
  "25769803789" -> "47244640261"  [ label = "AST: "] 
  "25769803789" -> "47244640262"  [ label = "AST: "] 
  "47244640261" -> "30064771135"  [ label = "AST: "] 
  "47244640261" -> "25769803786"  [ label = "AST: "] 
  "30064771135" -> "68719476811"  [ label = "AST: "] 
  "30064771135" -> "90194313228"  [ label = "AST: "] 
  "25769803786" -> "30064771137"  [ label = "AST: "] 
  "30064771137" -> "30064771136"  [ label = "AST: "] 
  "30064771137" -> "68719476813"  [ label = "AST: "] 
  "30064771136" -> "68719476812"  [ label = "AST: "] 
  "30064771136" -> "55834574857"  [ label = "AST: "] 
  "47244640262" -> "30064771140"  [ label = "AST: "] 
  "47244640262" -> "25769803787"  [ label = "AST: "] 
  "30064771140" -> "30064771138"  [ label = "AST: "] 
  "30064771140" -> "30064771139"  [ label = "AST: "] 
  "30064771138" -> "68719476814"  [ label = "AST: "] 
  "30064771138" -> "90194313229"  [ label = "AST: "] 
  "30064771139" -> "68719476815"  [ label = "AST: "] 
  "30064771139" -> "90194313230"  [ label = "AST: "] 
  "25769803787" -> "30064771142"  [ label = "AST: "] 
  "30064771142" -> "30064771141"  [ label = "AST: "] 
  "30064771142" -> "68719476817"  [ label = "AST: "] 
  "30064771141" -> "68719476816"  [ label = "AST: "] 
  "30064771141" -> "55834574858"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771080" -> "30064771083"  [ label = "CFG: "] 
  "30064771089" -> "30064771092"  [ label = "CFG: "] 
  "30064771098" -> "55834574854"  [ label = "CFG: "] 
  "30064771101" -> "30064771102"  [ label = "CFG: "] 
  "30064771108" -> "30064771109"  [ label = "CFG: "] 
  "30064771132" -> "55834574856"  [ label = "CFG: "] 
  "30064771134" -> "30064771135"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771097" -> "30064771098"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "30064771103" -> "30064771104"  [ label = "CFG: "] 
  "30064771103" -> "30064771107"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "30064771109" -> "30064771122"  [ label = "CFG: "] 
  "30064771122" -> "68719476796"  [ label = "CFG: "] 
  "30064771122" -> "30064771123"  [ label = "CFG: "] 
  "68719476796" -> "30064771129"  [ label = "CFG: "] 
  "68719476796" -> "30064771131"  [ label = "CFG: "] 
  "30064771131" -> "30064771132"  [ label = "CFG: "] 
  "30064771133" -> "30064771134"  [ label = "CFG: "] 
  "30064771083" -> "55834574848"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771082" -> "30064771088"  [ label = "CFG: "] 
  "30064771092" -> "55834574851"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771091" -> "30064771097"  [ label = "CFG: "] 
  "30064771099" -> "30064771100"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "30064771121" -> "30064771122"  [ label = "CFG: "] 
  "30064771125" -> "30064771126"  [ label = "CFG: "] 
  "30064771127" -> "30064771128"  [ label = "CFG: "] 
  "30064771128" -> "68719476796"  [ label = "CFG: "] 
  "30064771130" -> "30064771131"  [ label = "CFG: "] 
  "55834574856" -> "30064771133"  [ label = "CFG: "] 
  "30064771135" -> "55834574857"  [ label = "CFG: "] 
  "30064771135" -> "30064771138"  [ label = "CFG: "] 
  "30064771140" -> "128849018881"  [ label = "CFG: "] 
  "30064771140" -> "30064771135"  [ label = "CFG: "] 
  "30064771140" -> "55834574858"  [ label = "CFG: "] 
  "30064771081" -> "55834574849"  [ label = "CFG: "] 
  "55834574849" -> "30064771082"  [ label = "CFG: "] 
  "30064771085" -> "55834574850"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771090" -> "55834574852"  [ label = "CFG: "] 
  "55834574852" -> "30064771091"  [ label = "CFG: "] 
  "30064771094" -> "55834574853"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "55834574854" -> "30064771099"  [ label = "CFG: "] 
  "30064771105" -> "30064771106"  [ label = "CFG: "] 
  "30064771111" -> "30064771112"  [ label = "CFG: "] 
  "30064771111" -> "30064771120"  [ label = "CFG: "] 
  "30064771120" -> "30064771121"  [ label = "CFG: "] 
  "30064771126" -> "30064771127"  [ label = "CFG: "] 
  "30064771129" -> "30064771130"  [ label = "CFG: "] 
  "30064771137" -> "30064771138"  [ label = "CFG: "] 
  "30064771138" -> "30064771140"  [ label = "CFG: "] 
  "30064771138" -> "30064771139"  [ label = "CFG: "] 
  "30064771139" -> "30064771140"  [ label = "CFG: "] 
  "30064771142" -> "128849018881"  [ label = "CFG: "] 
  "30064771142" -> "30064771135"  [ label = "CFG: "] 
  "55834574848" -> "30064771081"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "55834574851" -> "30064771090"  [ label = "CFG: "] 
  "30064771093" -> "30064771094"  [ label = "CFG: "] 
  "30064771095" -> "30064771096"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771117" -> "30064771118"  [ label = "CFG: "] 
  "30064771119" -> "30064771120"  [ label = "CFG: "] 
  "30064771124" -> "30064771125"  [ label = "CFG: "] 
  "30064771136" -> "30064771137"  [ label = "CFG: "] 
  "30064771141" -> "30064771142"  [ label = "CFG: "] 
  "55834574850" -> "30064771086"  [ label = "CFG: "] 
  "55834574853" -> "30064771095"  [ label = "CFG: "] 
  "30064771116" -> "30064771117"  [ label = "CFG: "] 
  "30064771118" -> "30064771119"  [ label = "CFG: "] 
  "30064771123" -> "30064771124"  [ label = "CFG: "] 
  "55834574857" -> "30064771136"  [ label = "CFG: "] 
  "55834574858" -> "30064771141"  [ label = "CFG: "] 
  "30064771115" -> "30064771116"  [ label = "CFG: "] 
  "30064771114" -> "30064771115"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771112" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771113"  [ label = "CFG: "] 
  "111669149697" -> "30064771079"  [ label = "CFG: "] 
  "115964116999" -> "128849018881"  [ label = "DDG: transform"] 
  "30064771079" -> "128849018881"  [ label = "DDG: input_file = None"] 
  "30064771080" -> "128849018881"  [ label = "DDG: output_file = None"] 
  "30064771083" -> "128849018881"  [ label = "DDG: input"] 
  "30064771088" -> "128849018881"  [ label = "DDG: input == &quot;-&quot;"] 
  "30064771084" -> "128849018881"  [ label = "DDG: input"] 
  "30064771085" -> "128849018881"  [ label = "DDG: Path(input)"] 
  "30064771085" -> "128849018881"  [ label = "DDG: tmp0 = Path(input)"] 
  "30064771087" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771087" -> "128849018881"  [ label = "DDG: tmp0.open(&quot;rb&quot;)"] 
  "30064771088" -> "128849018881"  [ label = "DDG: sys.stdin.buffer"] 
  "30064771089" -> "128849018881"  [ label = "DDG: sys.stdin.buffer if input == &quot;-&quot; else tmp0 = Path(input)
tmp0.open(&quot;rb&quot;)"] 
  "30064771089" -> "128849018881"  [ label = "DDG: input_file = sys.stdin.buffer if input == &quot;-&quot; else tmp0 = Path(input)
tmp0.open(&quot;rb&quot;)"] 
  "30064771097" -> "128849018881"  [ label = "DDG: output == &quot;-&quot;"] 
  "30064771094" -> "128849018881"  [ label = "DDG: Path(output)"] 
  "30064771094" -> "128849018881"  [ label = "DDG: tmp1 = Path(output)"] 
  "30064771096" -> "128849018881"  [ label = "DDG: tmp1"] 
  "30064771096" -> "128849018881"  [ label = "DDG: tmp1.open(&quot;wb&quot;)"] 
  "30064771097" -> "128849018881"  [ label = "DDG: sys.stdout.buffer"] 
  "30064771098" -> "128849018881"  [ label = "DDG: sys.stdout.buffer if output == &quot;-&quot; else tmp1 = Path(output)
tmp1.open(&quot;wb&quot;)"] 
  "30064771098" -> "128849018881"  [ label = "DDG: output_file = sys.stdout.buffer if output == &quot;-&quot; else tmp1 = Path(output)
tmp1.open(&quot;wb&quot;)"] 
  "30064771101" -> "128849018881"  [ label = "DDG: input_file.read()"] 
  "30064771101" -> "128849018881"  [ label = "DDG: input_data = input_file.read()"] 
  "30064771102" -> "128849018881"  [ label = "DDG: bytes"] 
  "30064771103" -> "128849018881"  [ label = "DDG: isinstance(input_data, bytes)"] 
  "30064771103" -> "128849018881"  [ label = "DDG: not isinstance(input_data, bytes)"] 
  "30064771104" -> "128849018881"  [ label = "DDG: msg = &quot;input_data must be bytes&quot;"] 
  "30064771105" -> "128849018881"  [ label = "DDG: msg"] 
  "30064771106" -> "128849018881"  [ label = "DDG: TypeError(msg)"] 
  "30064771106" -> "128849018881"  [ label = "DDG: raise TypeError(msg)"] 
  "30064771107" -> "128849018881"  [ label = "DDG: input_format"] 
  "30064771107" -> "128849018881"  [ label = "DDG: input_data"] 
  "30064771108" -> "128849018881"  [ label = "DDG: decode(input_format, input_data)"] 
  "30064771108" -> "128849018881"  [ label = "DDG: parsed = decode(input_format, input_data)"] 
  "30064771109" -> "128849018881"  [ label = "DDG: unwrap"] 
  "30064771109" -> "128849018881"  [ label = "DDG: unwrap is not None"] 
  "30064771110" -> "128849018881"  [ label = "DDG: Mapping"] 
  "30064771111" -> "128849018881"  [ label = "DDG: isinstance(parsed, Mapping)"] 
  "30064771111" -> "128849018881"  [ label = "DDG: not isinstance(parsed, Mapping)"] 
  "30064771115" -> "128849018881"  [ label = "DDG: {type(parsed).__name__}"] 
  "30064771116" -> "128849018881"  [ label = "DDG: f&quot;Top-level value of type '{type(parsed).__name__}' &quot;"] 
  "30064771117" -> "128849018881"  [ label = "DDG: f&quot;Top-level value of type '{type(parsed).__name__}' &quot; &quot;cannot be unwrapped&quot;"] 
  "30064771117" -> "128849018881"  [ label = "DDG: msg = f&quot;Top-level value of type '{type(parsed).__name__}' &quot; &quot;cannot be unwrapped&quot;"] 
  "30064771118" -> "128849018881"  [ label = "DDG: msg"] 
  "30064771119" -> "128849018881"  [ label = "DDG: TypeError(msg)"] 
  "30064771119" -> "128849018881"  [ label = "DDG: raise TypeError(msg)"] 
  "30064771121" -> "128849018881"  [ label = "DDG: parsed[unwrap]"] 
  "30064771121" -> "128849018881"  [ label = "DDG: parsed = parsed[unwrap]"] 
  "30064771122" -> "128849018881"  [ label = "DDG: wrap"] 
  "30064771122" -> "128849018881"  [ label = "DDG: wrap is not None"] 
  "30064771124" -> "128849018881"  [ label = "DDG: tmp2"] 
  "30064771124" -> "128849018881"  [ label = "DDG: {}"] 
  "30064771124" -> "128849018881"  [ label = "DDG: tmp2 = {}"] 
  "30064771125" -> "128849018881"  [ label = "DDG: temp = tmp2 = {}
tmp2"] 
  "30064771127" -> "128849018881"  [ label = "DDG: temp[wrap]"] 
  "30064771127" -> "128849018881"  [ label = "DDG: temp[wrap] = parsed"] 
  "30064771128" -> "128849018881"  [ label = "DDG: temp"] 
  "30064771128" -> "128849018881"  [ label = "DDG: parsed = temp"] 
  "30064771130" -> "128849018881"  [ label = "DDG: transform(parsed)"] 
  "30064771130" -> "128849018881"  [ label = "DDG: parsed = transform(parsed)"] 
  "30064771131" -> "128849018881"  [ label = "DDG: output_format"] 
  "30064771131" -> "128849018881"  [ label = "DDG: parsed"] 
  "30064771131" -> "128849018881"  [ label = "DDG: json_indent"] 
  "30064771131" -> "128849018881"  [ label = "DDG: ordered"] 
  "30064771131" -> "128849018881"  [ label = "DDG: stringify"] 
  "30064771131" -> "128849018881"  [ label = "DDG: yaml_options"] 
  "30064771132" -> "128849018881"  [ label = "DDG: encode(output_format, parsed, json_indent = json_indent, ordered = ordered, stringify = stringify, yaml_options = yaml_options)"] 
  "30064771132" -> "128849018881"  [ label = "DDG: encoded = encode(output_format, parsed, json_indent = json_indent, ordered = ordered, stringify = stringify, yaml_options = yaml_options)"] 
  "30064771134" -> "128849018881"  [ label = "DDG: encoded"] 
  "30064771134" -> "128849018881"  [ label = "DDG: output_file.write(encoded)"] 
  "30064771135" -> "128849018881"  [ label = "DDG: input_file"] 
  "30064771135" -> "128849018881"  [ label = "DDG: input_file is not None"] 
  "30064771137" -> "128849018881"  [ label = "DDG: input_file"] 
  "30064771137" -> "128849018881"  [ label = "DDG: input_file.close()"] 
  "30064771138" -> "128849018881"  [ label = "DDG: output"] 
  "30064771140" -> "128849018881"  [ label = "DDG: output != &quot;-&quot;"] 
  "30064771140" -> "128849018881"  [ label = "DDG: output_file is not None"] 
  "30064771140" -> "128849018881"  [ label = "DDG: output != &quot;-&quot; and output_file is not None"] 
  "30064771142" -> "128849018881"  [ label = "DDG: output_file"] 
  "30064771142" -> "128849018881"  [ label = "DDG: output_file.close()"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "111669149697" -> "115964116995"  [ label = "DDG: "] 
  "111669149697" -> "115964116996"  [ label = "DDG: "] 
  "111669149697" -> "115964116997"  [ label = "DDG: "] 
  "111669149697" -> "115964116998"  [ label = "DDG: "] 
  "111669149697" -> "115964116999"  [ label = "DDG: "] 
  "111669149697" -> "115964117000"  [ label = "DDG: "] 
  "111669149697" -> "115964117001"  [ label = "DDG: "] 
  "111669149697" -> "115964117002"  [ label = "DDG: "] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771087" -> "30064771089"  [ label = "DDG: tmp0.open(&quot;rb&quot;)"] 
  "30064771096" -> "30064771098"  [ label = "DDG: tmp1.open(&quot;wb&quot;)"] 
  "30064771100" -> "30064771101"  [ label = "DDG: input_file"] 
  "30064771107" -> "30064771108"  [ label = "DDG: input_format"] 
  "30064771107" -> "30064771108"  [ label = "DDG: input_data"] 
  "30064771131" -> "30064771132"  [ label = "DDG: json_indent"] 
  "30064771131" -> "30064771132"  [ label = "DDG: parsed"] 
  "30064771131" -> "30064771132"  [ label = "DDG: yaml_options"] 
  "30064771131" -> "30064771132"  [ label = "DDG: stringify"] 
  "30064771131" -> "30064771132"  [ label = "DDG: ordered"] 
  "30064771131" -> "30064771132"  [ label = "DDG: output_format"] 
  "111669149697" -> "68719476796"  [ label = "DDG: "] 
  "30064771098" -> "30064771134"  [ label = "DDG: output_file"] 
  "111669149697" -> "30064771134"  [ label = "DDG: "] 
  "30064771132" -> "30064771134"  [ label = "DDG: encoded"] 
  "30064771087" -> "30064771088"  [ label = "DDG: tmp0.open(&quot;rb&quot;)"] 
  "30064771096" -> "30064771097"  [ label = "DDG: tmp1.open(&quot;wb&quot;)"] 
  "30064771089" -> "30064771100"  [ label = "DDG: input_file"] 
  "111669149697" -> "30064771100"  [ label = "DDG: "] 
  "30064771102" -> "30064771103"  [ label = "DDG: input_data"] 
  "30064771102" -> "30064771103"  [ label = "DDG: bytes"] 
  "111669149697" -> "30064771104"  [ label = "DDG: "] 
  "111669149697" -> "68719476773"  [ label = "DDG: "] 
  "115964116994" -> "30064771107"  [ label = "DDG: input_format"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
  "30064771102" -> "30064771107"  [ label = "DDG: input_data"] 
  "115964117000" -> "30064771109"  [ label = "DDG: unwrap"] 
  "111669149697" -> "30064771109"  [ label = "DDG: "] 
  "30064771110" -> "30064771121"  [ label = "DDG: parsed"] 
  "30064771112" -> "30064771121"  [ label = "DDG: parsed"] 
  "115964117001" -> "30064771122"  [ label = "DDG: wrap"] 
  "111669149697" -> "30064771122"  [ label = "DDG: "] 
  "30064771124" -> "30064771125"  [ label = "DDG: tmp2"] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771108" -> "30064771127"  [ label = "DDG: parsed"] 
  "30064771121" -> "30064771127"  [ label = "DDG: parsed"] 
  "111669149697" -> "30064771127"  [ label = "DDG: "] 
  "30064771110" -> "30064771127"  [ label = "DDG: parsed"] 
  "30064771112" -> "30064771127"  [ label = "DDG: parsed"] 
  "30064771125" -> "30064771128"  [ label = "DDG: temp"] 
  "30064771127" -> "30064771128"  [ label = "DDG: temp[wrap]"] 
  "111669149697" -> "30064771128"  [ label = "DDG: "] 
  "30064771129" -> "30064771130"  [ label = "DDG: parsed"] 
  "111669149697" -> "68719476806"  [ label = "DDG: "] 
  "115964116995" -> "30064771131"  [ label = "DDG: output_format"] 
  "111669149697" -> "30064771131"  [ label = "DDG: "] 
  "30064771108" -> "30064771131"  [ label = "DDG: parsed"] 
  "30064771121" -> "30064771131"  [ label = "DDG: parsed"] 
  "30064771128" -> "30064771131"  [ label = "DDG: parsed"] 
  "30064771130" -> "30064771131"  [ label = "DDG: parsed"] 
  "30064771110" -> "30064771131"  [ label = "DDG: parsed"] 
  "30064771112" -> "30064771131"  [ label = "DDG: parsed"] 
  "115964116996" -> "30064771131"  [ label = "DDG: json_indent"] 
  "115964116997" -> "30064771131"  [ label = "DDG: ordered"] 
  "115964116998" -> "30064771131"  [ label = "DDG: stringify"] 
  "115964117002" -> "30064771131"  [ label = "DDG: yaml_options"] 
  "115964116992" -> "30064771083"  [ label = "DDG: input"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771084" -> "30064771085"  [ label = "DDG: input"] 
  "115964116993" -> "30064771092"  [ label = "DDG: output"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771093" -> "30064771094"  [ label = "DDG: output"] 
  "30064771073" -> "68719476767"  [ label = "DDG: isinstance"] 
  "111669149697" -> "68719476767"  [ label = "DDG: "] 
  "30064771101" -> "30064771102"  [ label = "DDG: input_data"] 
  "111669149697" -> "30064771102"  [ label = "DDG: "] 
  "30064771105" -> "30064771106"  [ label = "DDG: msg"] 
  "30064771100" -> "30064771135"  [ label = "DDG: input_file"] 
  "30064771137" -> "30064771135"  [ label = "DDG: input_file"] 
  "111669149697" -> "30064771135"  [ label = "DDG: "] 
  "30064771138" -> "30064771140"  [ label = "DDG: output"] 
  "30064771138" -> "30064771140"  [ label = "DDG: &quot;-&quot;"] 
  "30064771139" -> "30064771140"  [ label = "DDG: output_file"] 
  "30064771139" -> "30064771140"  [ label = "DDG: None"] 
  "30064771085" -> "30064771087"  [ label = "DDG: tmp0"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771094" -> "30064771096"  [ label = "DDG: tmp1"] 
  "111669149697" -> "30064771096"  [ label = "DDG: "] 
  "111669149697" -> "68719476770"  [ label = "DDG: "] 
  "30064771104" -> "30064771105"  [ label = "DDG: msg"] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771110" -> "30064771111"  [ label = "DDG: parsed"] 
  "30064771110" -> "30064771111"  [ label = "DDG: Mapping"] 
  "30064771116" -> "30064771117"  [ label = "DDG: f&quot;Top-level value of type '{type(parsed).__name__}' &quot;"] 
  "30064771116" -> "30064771117"  [ label = "DDG: &quot;cannot be unwrapped&quot;"] 
  "111669149697" -> "30064771124"  [ label = "DDG: "] 
  "111669149697" -> "68719476789"  [ label = "DDG: "] 
  "111669149697" -> "68719476798"  [ label = "DDG: "] 
  "30064771108" -> "30064771129"  [ label = "DDG: parsed"] 
  "30064771121" -> "30064771129"  [ label = "DDG: parsed"] 
  "30064771128" -> "30064771129"  [ label = "DDG: parsed"] 
  "111669149697" -> "30064771129"  [ label = "DDG: "] 
  "30064771110" -> "30064771129"  [ label = "DDG: parsed"] 
  "30064771112" -> "30064771129"  [ label = "DDG: parsed"] 
  "30064771135" -> "30064771137"  [ label = "DDG: input_file"] 
  "111669149697" -> "30064771137"  [ label = "DDG: "] 
  "30064771092" -> "30064771138"  [ label = "DDG: output"] 
  "30064771093" -> "30064771138"  [ label = "DDG: output"] 
  "111669149697" -> "30064771138"  [ label = "DDG: "] 
  "30064771134" -> "30064771139"  [ label = "DDG: output_file"] 
  "30064771142" -> "30064771139"  [ label = "DDG: output_file"] 
  "111669149697" -> "30064771139"  [ label = "DDG: "] 
  "30064771134" -> "30064771142"  [ label = "DDG: output_file"] 
  "30064771139" -> "30064771142"  [ label = "DDG: output_file"] 
  "111669149697" -> "30064771142"  [ label = "DDG: "] 
  "111669149697" -> "68719476749"  [ label = "DDG: "] 
  "30064771083" -> "30064771084"  [ label = "DDG: input"] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "111669149697" -> "68719476757"  [ label = "DDG: "] 
  "30064771092" -> "30064771093"  [ label = "DDG: output"] 
  "111669149697" -> "30064771093"  [ label = "DDG: "] 
  "111669149697" -> "68719476778"  [ label = "DDG: "] 
  "30064771108" -> "30064771110"  [ label = "DDG: parsed"] 
  "111669149697" -> "30064771110"  [ label = "DDG: "] 
  "30064771118" -> "30064771119"  [ label = "DDG: msg"] 
  "30064771115" -> "30064771116"  [ label = "DDG: Top-level value of type '"] 
  "30064771115" -> "30064771116"  [ label = "DDG: {type(parsed).__name__}"] 
  "30064771115" -> "30064771116"  [ label = "DDG: ' "] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "111669149697" -> "68719476783"  [ label = "DDG: "] 
  "30064771117" -> "30064771118"  [ label = "DDG: msg"] 
  "111669149697" -> "30064771118"  [ label = "DDG: "] 
  "111669149697" -> "30064771115"  [ label = "DDG: "] 
  "30064771114" -> "30064771115"  [ label = "DDG: type(parsed).__name__"] 
  "111669149697" -> "68719476780"  [ label = "DDG: "] 
  "30064771110" -> "30064771112"  [ label = "DDG: parsed"] 
  "111669149697" -> "30064771112"  [ label = "DDG: "] 
  "30064771103" -> "30064771106"  [ label = "CDG: "] 
  "30064771103" -> "30064771105"  [ label = "CDG: "] 
  "30064771103" -> "30064771104"  [ label = "CDG: "] 
  "30064771109" -> "30064771110"  [ label = "CDG: "] 
  "30064771109" -> "30064771111"  [ label = "CDG: "] 
  "30064771109" -> "30064771121"  [ label = "CDG: "] 
  "30064771109" -> "30064771120"  [ label = "CDG: "] 
  "30064771122" -> "30064771126"  [ label = "CDG: "] 
  "30064771122" -> "30064771125"  [ label = "CDG: "] 
  "30064771122" -> "30064771124"  [ label = "CDG: "] 
  "30064771122" -> "30064771123"  [ label = "CDG: "] 
  "30064771122" -> "30064771128"  [ label = "CDG: "] 
  "30064771122" -> "30064771127"  [ label = "CDG: "] 
  "68719476796" -> "30064771130"  [ label = "CDG: "] 
  "68719476796" -> "30064771129"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
  "30064771083" -> "30064771084"  [ label = "CDG: "] 
  "30064771083" -> "30064771082"  [ label = "CDG: "] 
  "30064771083" -> "30064771081"  [ label = "CDG: "] 
  "30064771083" -> "30064771087"  [ label = "CDG: "] 
  "30064771083" -> "55834574850"  [ label = "CDG: "] 
  "30064771083" -> "55834574849"  [ label = "CDG: "] 
  "30064771083" -> "55834574848"  [ label = "CDG: "] 
  "30064771092" -> "30064771094"  [ label = "CDG: "] 
  "30064771092" -> "30064771093"  [ label = "CDG: "] 
  "30064771092" -> "30064771091"  [ label = "CDG: "] 
  "30064771092" -> "30064771090"  [ label = "CDG: "] 
  "30064771092" -> "30064771096"  [ label = "CDG: "] 
  "30064771092" -> "30064771095"  [ label = "CDG: "] 
  "30064771092" -> "55834574852"  [ label = "CDG: "] 
  "30064771092" -> "55834574851"  [ label = "CDG: "] 
  "30064771092" -> "55834574853"  [ label = "CDG: "] 
  "30064771135" -> "30064771137"  [ label = "CDG: "] 
  "30064771135" -> "30064771136"  [ label = "CDG: "] 
  "30064771135" -> "55834574857"  [ label = "CDG: "] 
  "30064771140" -> "30064771142"  [ label = "CDG: "] 
  "30064771140" -> "30064771141"  [ label = "CDG: "] 
  "30064771140" -> "30064771140"  [ label = "CDG: "] 
  "30064771140" -> "30064771138"  [ label = "CDG: "] 
  "30064771140" -> "30064771135"  [ label = "CDG: "] 
  "30064771140" -> "55834574858"  [ label = "CDG: "] 
  "30064771111" -> "30064771118"  [ label = "CDG: "] 
  "30064771111" -> "30064771117"  [ label = "CDG: "] 
  "30064771111" -> "30064771116"  [ label = "CDG: "] 
  "30064771111" -> "30064771115"  [ label = "CDG: "] 
  "30064771111" -> "30064771114"  [ label = "CDG: "] 
  "30064771111" -> "30064771113"  [ label = "CDG: "] 
  "30064771111" -> "30064771112"  [ label = "CDG: "] 
  "30064771111" -> "30064771119"  [ label = "CDG: "] 
  "30064771111" -> "55834574855"  [ label = "CDG: "] 
  "30064771138" -> "30064771139"  [ label = "CDG: "] 
  "30064771142" -> "30064771140"  [ label = "CDG: "] 
  "30064771142" -> "30064771138"  [ label = "CDG: "] 
  "30064771142" -> "30064771135"  [ label = "CDG: "] 
}
"""
)
