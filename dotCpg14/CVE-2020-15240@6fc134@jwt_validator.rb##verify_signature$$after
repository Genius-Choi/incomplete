[33mval[0m [36mres46[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "verify_signature" {  
"111669149696" [label = <(METHOD,verify_signature)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,self)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,jwt)<SUB>1</SUB>> ]
"25769803776" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>> ]
"94489280512" [label = <(LOCAL,head: :&lt;main&gt;.token_head.&lt;returnValue&gt;)<SUB>2</SUB>> ]
"94489280513" [label = <(LOCAL,key: ANY)<SUB>6</SUB>> ]
"94489280514" [label = <(LOCAL,&lt;tmp-1&gt;: ANY)> ]
"94489280515" [label = <(LOCAL,&lt;tmp-2&gt;: ANY)> ]
"94489280516" [label = <(LOCAL,&lt;tmp-3&gt;: :&lt;main&gt;.&lt;member&gt;(JWT))> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,head = token_head(jwt))<SUB>2</SUB>> ]
"68719476736" [label = <(IDENTIFIER,head,head = token_head(jwt))<SUB>2</SUB>> ]
"30064771073" [label = <(token_head,token_head(jwt))<SUB>2</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.fieldAccess,self.token_head)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,self,token_head(jwt))<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,token_head,token_head)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,self,token_head(jwt))<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,jwt,token_head(jwt))<SUB>2</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if head[:alg] == 'RS256'
          key, alg = [rs256_decode_key(head[:kid]), head[:alg]]
        elsif head[:alg] == 'HS256'
          key, alg = [@client_secret, head[:alg]]
        else
          raise OmniAuth::Auth0::TokenValidationError.new(&quot;Signature algorithm of #{head[:alg]} is not supported. Expected the ID token to be signed with RS256 or HS256&quot;)
        end)<SUB>5</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.equals,head[:alg] == 'RS256')<SUB>5</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.indexAccess,head[:alg])<SUB>5</SUB>> ]
"68719476740" [label = <(IDENTIFIER,head,head[:alg] == 'RS256')<SUB>5</SUB>> ]
"90194313216" [label = <(LITERAL,:alg,head[:alg] == 'RS256')<SUB>5</SUB>> ]
"90194313217" [label = <(LITERAL,'RS256',head[:alg] == 'RS256')<SUB>5</SUB>> ]
"25769803777" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,key, alg = [rs256_decode_key(head[:kid]), head[...)<SUB>6</SUB>> ]
"68719476741" [label = <(IDENTIFIER,key,key, alg = [rs256_decode_key(head[:kid]), head[...)<SUB>6</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.arrayInitializer,[rs256_decode_key(head[:kid]), head[:alg]])<SUB>6</SUB>> ]
"30064771079" [label = <(rs256_decode_key,rs256_decode_key(head[:kid]))<SUB>6</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.fieldAccess,self.rs256_decode_key)<SUB>6</SUB>> ]
"68719476742" [label = <(IDENTIFIER,self,rs256_decode_key(head[:kid]))<SUB>6</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,rs256_decode_key,rs256_decode_key)<SUB>6</SUB>> ]
"68719476743" [label = <(IDENTIFIER,self,rs256_decode_key(head[:kid]))<SUB>6</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.indexAccess,head[:kid])<SUB>6</SUB>> ]
"68719476744" [label = <(IDENTIFIER,head,rs256_decode_key(head[:kid]))<SUB>6</SUB>> ]
"90194313218" [label = <(LITERAL,:kid,rs256_decode_key(head[:kid]))<SUB>6</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.indexAccess,head[:alg])<SUB>6</SUB>> ]
"68719476745" [label = <(IDENTIFIER,head,[rs256_decode_key(head[:kid]), head[:alg]])<SUB>6</SUB>> ]
"90194313219" [label = <(LITERAL,:alg,[rs256_decode_key(head[:kid]), head[:alg]])<SUB>6</SUB>> ]
"25769803778" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,elsif head[:alg] == 'HS256'
          key, alg = [@client_secret, head[:alg]]
)<SUB>7</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.equals,head[:alg] == 'HS256')<SUB>7</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.indexAccess,head[:alg])<SUB>7</SUB>> ]
"68719476746" [label = <(IDENTIFIER,head,head[:alg] == 'HS256')<SUB>7</SUB>> ]
"90194313220" [label = <(LITERAL,:alg,head[:alg] == 'HS256')<SUB>7</SUB>> ]
"90194313221" [label = <(LITERAL,'HS256',head[:alg] == 'HS256')<SUB>7</SUB>> ]
"25769803779" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.assignment,key, alg = [@client_secret, head[:alg]])<SUB>8</SUB>> ]
"68719476747" [label = <(IDENTIFIER,key,key, alg = [@client_secret, head[:alg]])<SUB>8</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.arrayInitializer,[@client_secret, head[:alg]])<SUB>8</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.fieldAccess,self.@client_secret)<SUB>8</SUB>> ]
"68719476748" [label = <(IDENTIFIER,self,[@client_secret, head[:alg]])<SUB>8</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,@client_secret,@client_secret)<SUB>8</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.indexAccess,head[:alg])<SUB>8</SUB>> ]
"68719476749" [label = <(IDENTIFIER,head,[@client_secret, head[:alg]])<SUB>8</SUB>> ]
"90194313222" [label = <(LITERAL,:alg,[@client_secret, head[:alg]])<SUB>8</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,THROW,raise OmniAuth::Auth0::TokenValidationError.new(&quot;Signature algorithm of #{head[:alg]} is not supported. Expected the ID token to be signed with RS256 or HS256&quot;))<SUB>10</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>> ]
"94489280517" [label = <(LOCAL,&lt;tmp-0&gt;: &lt;empty&gt;)> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,&lt;tmp-0&gt; = OmniAuth::Auth0::TokenValidationError...)<SUB>10</SUB>> ]
"68719476750" [label = <(IDENTIFIER,&lt;tmp-0&gt;,&lt;tmp-0&gt; = OmniAuth::Auth0::TokenValidationError...)<SUB>10</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.alloc,OmniAuth::Auth0::TokenValidationError.new(&quot;Sign...)<SUB>10</SUB>> ]
"30064771091" [label = <(initialize,OmniAuth::Auth0::TokenValidationError.new(&quot;Sign...)<SUB>10</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.fieldAccess,(&lt;tmp-2&gt; = OmniAuth::Auth0::TokenValidationErro...)<SUB>10</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assignment,&lt;tmp-2&gt; = OmniAuth::Auth0::TokenValidationError)<SUB>10</SUB>> ]
"68719476751" [label = <(IDENTIFIER,&lt;tmp-2&gt;,&lt;tmp-2&gt; = OmniAuth::Auth0::TokenValidationError)> ]
"30064771094" [label = <(&lt;operator&gt;.fieldAccess,(&lt;tmp-1&gt; = OmniAuth::Auth0)::TokenValidationError)<SUB>10</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.assignment,&lt;tmp-1&gt; = OmniAuth::Auth0)<SUB>10</SUB>> ]
"68719476752" [label = <(IDENTIFIER,&lt;tmp-1&gt;,&lt;tmp-1&gt; = OmniAuth::Auth0)> ]
"30064771096" [label = <(&lt;operator&gt;.fieldAccess,OmniAuth::Auth0)<SUB>10</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.fieldAccess,self.OmniAuth)<SUB>10</SUB>> ]
"68719476753" [label = <(IDENTIFIER,self,&lt;tmp-1&gt; = OmniAuth::Auth0)<SUB>10</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,OmniAuth,OmniAuth)<SUB>10</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,Auth0,Auth0)<SUB>10</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,TokenValidationError,TokenValidationError)<SUB>10</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,initialize,initialize)<SUB>10</SUB>> ]
"68719476754" [label = <(IDENTIFIER,&lt;tmp-0&gt;,OmniAuth::Auth0::TokenValidationError.new(&quot;Sign...)<SUB>10</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.formatString,&quot;Signature algorithm of #{head[:alg]} is not su...)<SUB>10</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.formattedValue,head[:alg])<SUB>10</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.indexAccess,head[:alg])<SUB>10</SUB>> ]
"68719476755" [label = <(IDENTIFIER,head,head[:alg])<SUB>10</SUB>> ]
"90194313223" [label = <(LITERAL,:alg,head[:alg])<SUB>10</SUB>> ]
"68719476756" [label = <(IDENTIFIER,&lt;tmp-0&gt;,&lt;empty&gt;)<SUB>10</SUB>> ]
"30064771101" [label = <(decode,(&lt;tmp-3&gt; = JWT).decode(jwt, key, true, decode_o...)<SUB>14</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.fieldAccess,(&lt;tmp-3&gt; = JWT).decode)<SUB>14</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assignment,&lt;tmp-3&gt; = JWT)<SUB>14</SUB>> ]
"68719476757" [label = <(IDENTIFIER,&lt;tmp-3&gt;,&lt;tmp-3&gt; = JWT)> ]
"30064771104" [label = <(&lt;operator&gt;.fieldAccess,self.JWT)<SUB>14</SUB>> ]
"68719476758" [label = <(IDENTIFIER,self,&lt;tmp-3&gt; = JWT)<SUB>14</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,JWT,JWT)<SUB>14</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,decode,decode)<SUB>14</SUB>> ]
"68719476759" [label = <(IDENTIFIER,&lt;tmp-3&gt;,(&lt;tmp-3&gt; = JWT).decode(jwt, key, true, decode_o...)> ]
"68719476760" [label = <(IDENTIFIER,jwt,(&lt;tmp-3&gt; = JWT).decode(jwt, key, true, decode_o...)<SUB>14</SUB>> ]
"68719476761" [label = <(IDENTIFIER,key,(&lt;tmp-3&gt; = JWT).decode(jwt, key, true, decode_o...)<SUB>14</SUB>> ]
"90194313224" [label = <(LITERAL,true,(&lt;tmp-3&gt; = JWT).decode(jwt, key, true, decode_o...)<SUB>14</SUB>> ]
"30064771105" [label = <(decode_opts,decode_opts(alg))<SUB>14</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.fieldAccess,self.decode_opts)<SUB>14</SUB>> ]
"68719476762" [label = <(IDENTIFIER,self,decode_opts(alg))<SUB>14</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,decode_opts,decode_opts)<SUB>14</SUB>> ]
"68719476763" [label = <(IDENTIFIER,self,decode_opts(alg))<SUB>14</SUB>> ]
"30064771107" [label = <(&lt;operator&gt;.fieldAccess,self.alg)<SUB>14</SUB>> ]
"68719476764" [label = <(IDENTIFIER,self,decode_opts(alg))<SUB>14</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,alg,alg)<SUB>14</SUB>> ]
"146028888064" [label = <(RETURN,return key, alg,return key, alg)<SUB>16</SUB>> ]
"68719476765" [label = <(IDENTIFIER,key,return key, alg)<SUB>16</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.fieldAccess,self.alg)<SUB>16</SUB>> ]
"68719476766" [label = <(IDENTIFIER,self,return key, alg)<SUB>16</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,alg,alg)<SUB>16</SUB>> ]
"133143986176" [label = <(MODIFIER,VIRTUAL)> ]
"133143986177" [label = <(MODIFIER,PRIVATE)> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149696" -> "115964116992"  [ label = "AST: "] 
  "111669149696" -> "115964116993"  [ label = "AST: "] 
  "111669149696" -> "25769803776"  [ label = "AST: "] 
  "111669149696" -> "133143986176"  [ label = "AST: "] 
  "111669149696" -> "133143986177"  [ label = "AST: "] 
  "111669149696" -> "128849018880"  [ label = "AST: "] 
  "25769803776" -> "94489280512"  [ label = "AST: "] 
  "25769803776" -> "94489280513"  [ label = "AST: "] 
  "25769803776" -> "94489280514"  [ label = "AST: "] 
  "25769803776" -> "94489280515"  [ label = "AST: "] 
  "25769803776" -> "94489280516"  [ label = "AST: "] 
  "25769803776" -> "30064771072"  [ label = "AST: "] 
  "25769803776" -> "47244640256"  [ label = "AST: "] 
  "25769803776" -> "30064771101"  [ label = "AST: "] 
  "25769803776" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "68719476739"  [ label = "AST: "] 
  "30064771074" -> "68719476737"  [ label = "AST: "] 
  "30064771074" -> "55834574848"  [ label = "AST: "] 
  "47244640256" -> "30064771075"  [ label = "AST: "] 
  "47244640256" -> "25769803777"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771075" -> "90194313217"  [ label = "AST: "] 
  "30064771076" -> "68719476740"  [ label = "AST: "] 
  "30064771076" -> "90194313216"  [ label = "AST: "] 
  "25769803777" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771078" -> "30064771082"  [ label = "AST: "] 
  "30064771079" -> "30064771080"  [ label = "AST: "] 
  "30064771079" -> "68719476743"  [ label = "AST: "] 
  "30064771079" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "68719476742"  [ label = "AST: "] 
  "30064771080" -> "55834574849"  [ label = "AST: "] 
  "30064771081" -> "68719476744"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "30064771082" -> "68719476745"  [ label = "AST: "] 
  "30064771082" -> "90194313219"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "47244640257" -> "30064771083"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "47244640257" -> "25769803780"  [ label = "AST: "] 
  "30064771083" -> "30064771084"  [ label = "AST: "] 
  "30064771083" -> "90194313221"  [ label = "AST: "] 
  "30064771084" -> "68719476746"  [ label = "AST: "] 
  "30064771084" -> "90194313220"  [ label = "AST: "] 
  "25769803779" -> "30064771085"  [ label = "AST: "] 
  "30064771085" -> "68719476747"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "30064771088"  [ label = "AST: "] 
  "30064771087" -> "68719476748"  [ label = "AST: "] 
  "30064771087" -> "55834574850"  [ label = "AST: "] 
  "30064771088" -> "68719476749"  [ label = "AST: "] 
  "30064771088" -> "90194313222"  [ label = "AST: "] 
  "25769803780" -> "47244640258"  [ label = "AST: "] 
  "47244640258" -> "25769803781"  [ label = "AST: "] 
  "25769803781" -> "94489280517"  [ label = "AST: "] 
  "25769803781" -> "30064771089"  [ label = "AST: "] 
  "25769803781" -> "30064771091"  [ label = "AST: "] 
  "25769803781" -> "68719476756"  [ label = "AST: "] 
  "30064771089" -> "68719476750"  [ label = "AST: "] 
  "30064771089" -> "30064771090"  [ label = "AST: "] 
  "30064771091" -> "30064771092"  [ label = "AST: "] 
  "30064771091" -> "68719476754"  [ label = "AST: "] 
  "30064771091" -> "30064771098"  [ label = "AST: "] 
  "30064771092" -> "30064771093"  [ label = "AST: "] 
  "30064771092" -> "55834574854"  [ label = "AST: "] 
  "30064771093" -> "68719476751"  [ label = "AST: "] 
  "30064771093" -> "30064771094"  [ label = "AST: "] 
  "30064771094" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "55834574853"  [ label = "AST: "] 
  "30064771095" -> "68719476752"  [ label = "AST: "] 
  "30064771095" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "30064771097"  [ label = "AST: "] 
  "30064771096" -> "55834574852"  [ label = "AST: "] 
  "30064771097" -> "68719476753"  [ label = "AST: "] 
  "30064771097" -> "55834574851"  [ label = "AST: "] 
  "30064771098" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "68719476755"  [ label = "AST: "] 
  "30064771100" -> "90194313223"  [ label = "AST: "] 
  "30064771101" -> "30064771102"  [ label = "AST: "] 
  "30064771101" -> "68719476759"  [ label = "AST: "] 
  "30064771101" -> "68719476760"  [ label = "AST: "] 
  "30064771101" -> "68719476761"  [ label = "AST: "] 
  "30064771101" -> "90194313224"  [ label = "AST: "] 
  "30064771101" -> "30064771105"  [ label = "AST: "] 
  "30064771102" -> "30064771103"  [ label = "AST: "] 
  "30064771102" -> "55834574856"  [ label = "AST: "] 
  "30064771103" -> "68719476757"  [ label = "AST: "] 
  "30064771103" -> "30064771104"  [ label = "AST: "] 
  "30064771104" -> "68719476758"  [ label = "AST: "] 
  "30064771104" -> "55834574855"  [ label = "AST: "] 
  "30064771105" -> "30064771106"  [ label = "AST: "] 
  "30064771105" -> "68719476763"  [ label = "AST: "] 
  "30064771105" -> "30064771107"  [ label = "AST: "] 
  "30064771106" -> "68719476762"  [ label = "AST: "] 
  "30064771106" -> "55834574857"  [ label = "AST: "] 
  "30064771107" -> "68719476764"  [ label = "AST: "] 
  "30064771107" -> "55834574858"  [ label = "AST: "] 
  "146028888064" -> "68719476765"  [ label = "AST: "] 
  "146028888064" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "68719476766"  [ label = "AST: "] 
  "30064771108" -> "55834574859"  [ label = "AST: "] 
  "30064771072" -> "30064771076"  [ label = "CFG: "] 
  "30064771101" -> "55834574859"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "30064771072"  [ label = "CFG: "] 
  "30064771075" -> "55834574849"  [ label = "CFG: "] 
  "30064771075" -> "30064771084"  [ label = "CFG: "] 
  "30064771102" -> "55834574857"  [ label = "CFG: "] 
  "30064771105" -> "30064771101"  [ label = "CFG: "] 
  "30064771108" -> "146028888064"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771077" -> "55834574855"  [ label = "CFG: "] 
  "30064771103" -> "55834574856"  [ label = "CFG: "] 
  "55834574856" -> "30064771102"  [ label = "CFG: "] 
  "30064771106" -> "55834574858"  [ label = "CFG: "] 
  "30064771107" -> "30064771105"  [ label = "CFG: "] 
  "55834574859" -> "30064771108"  [ label = "CFG: "] 
  "55834574848" -> "30064771074"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771083" -> "55834574850"  [ label = "CFG: "] 
  "30064771083" -> "30064771090"  [ label = "CFG: "] 
  "30064771104" -> "30064771103"  [ label = "CFG: "] 
  "55834574857" -> "30064771106"  [ label = "CFG: "] 
  "55834574858" -> "30064771107"  [ label = "CFG: "] 
  "30064771079" -> "30064771082"  [ label = "CFG: "] 
  "30064771082" -> "30064771078"  [ label = "CFG: "] 
  "30064771084" -> "30064771083"  [ label = "CFG: "] 
  "30064771085" -> "55834574855"  [ label = "CFG: "] 
  "55834574855" -> "30064771104"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771081" -> "30064771079"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "55834574849" -> "30064771080"  [ label = "CFG: "] 
  "30064771087" -> "30064771088"  [ label = "CFG: "] 
  "30064771088" -> "30064771086"  [ label = "CFG: "] 
  "30064771089" -> "55834574851"  [ label = "CFG: "] 
  "30064771091" -> "128849018880"  [ label = "CFG: "] 
  "55834574850" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "30064771089"  [ label = "CFG: "] 
  "30064771092" -> "30064771100"  [ label = "CFG: "] 
  "30064771098" -> "30064771091"  [ label = "CFG: "] 
  "30064771093" -> "55834574854"  [ label = "CFG: "] 
  "55834574854" -> "30064771092"  [ label = "CFG: "] 
  "30064771099" -> "30064771098"  [ label = "CFG: "] 
  "30064771094" -> "30064771093"  [ label = "CFG: "] 
  "30064771100" -> "30064771099"  [ label = "CFG: "] 
  "30064771095" -> "55834574853"  [ label = "CFG: "] 
  "55834574853" -> "30064771094"  [ label = "CFG: "] 
  "30064771096" -> "30064771095"  [ label = "CFG: "] 
  "30064771097" -> "55834574852"  [ label = "CFG: "] 
  "55834574852" -> "30064771096"  [ label = "CFG: "] 
  "55834574851" -> "30064771097"  [ label = "CFG: "] 
  "111669149696" -> "55834574848"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: head"] 
  "30064771073" -> "128849018880"  [ label = "DDG: self"] 
  "30064771073" -> "128849018880"  [ label = "DDG: jwt"] 
  "30064771072" -> "128849018880"  [ label = "DDG: token_head(jwt)"] 
  "30064771072" -> "128849018880"  [ label = "DDG: head = token_head(jwt)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: head[:alg] == 'RS256'"] 
  "30064771083" -> "128849018880"  [ label = "DDG: head[:alg] == 'HS256'"] 
  "30064771089" -> "128849018880"  [ label = "DDG: &lt;tmp-0&gt; = OmniAuth::Auth0::TokenValidationError.initialize"] 
  "30064771093" -> "128849018880"  [ label = "DDG: &lt;tmp-2&gt;"] 
  "30064771095" -> "128849018880"  [ label = "DDG: &lt;tmp-1&gt;"] 
  "30064771095" -> "128849018880"  [ label = "DDG: OmniAuth::Auth0"] 
  "30064771093" -> "128849018880"  [ label = "DDG: (&lt;tmp-1&gt; = OmniAuth::Auth0)::TokenValidationError"] 
  "30064771091" -> "128849018880"  [ label = "DDG: &lt;tmp-0&gt;"] 
  "30064771098" -> "128849018880"  [ label = "DDG: head[:alg]"] 
  "30064771091" -> "128849018880"  [ label = "DDG: &quot;Signature algorithm of #{head[:alg]} is not supported. Expected the ID token to be signed with RS256 or HS256&quot;"] 
  "30064771091" -> "128849018880"  [ label = "DDG: OmniAuth::Auth0::TokenValidationError.new(&quot;Signature algorithm of #{head[:alg]} is not supported. Expected the ID token to be signed with RS256 or HS256&quot;)"] 
  "111669149696" -> "115964116992"  [ label = "DDG: "] 
  "111669149696" -> "115964116993"  [ label = "DDG: "] 
  "30064771073" -> "30064771072"  [ label = "DDG: self"] 
  "30064771073" -> "30064771072"  [ label = "DDG: jwt"] 
  "68719476765" -> "146028888064"  [ label = "DDG: key"] 
  "30064771103" -> "30064771101"  [ label = "DDG: &lt;tmp-3&gt;"] 
  "111669149696" -> "30064771101"  [ label = "DDG: "] 
  "30064771073" -> "30064771101"  [ label = "DDG: jwt"] 
  "30064771085" -> "30064771101"  [ label = "DDG: key"] 
  "30064771077" -> "30064771101"  [ label = "DDG: key"] 
  "30064771105" -> "30064771101"  [ label = "DDG: self"] 
  "30064771105" -> "30064771101"  [ label = "DDG: self.alg"] 
  "30064771101" -> "68719476765"  [ label = "DDG: key"] 
  "111669149696" -> "68719476765"  [ label = "DDG: "] 
  "115964116992" -> "30064771073"  [ label = "DDG: self"] 
  "111669149696" -> "30064771073"  [ label = "DDG: "] 
  "115964116993" -> "30064771073"  [ label = "DDG: jwt"] 
  "30064771072" -> "30064771075"  [ label = "DDG: head"] 
  "111669149696" -> "30064771075"  [ label = "DDG: "] 
  "30064771078" -> "30064771077"  [ label = "DDG: rs256_decode_key(head[:kid])"] 
  "30064771078" -> "30064771077"  [ label = "DDG: head[:alg]"] 
  "30064771073" -> "30064771105"  [ label = "DDG: self"] 
  "30064771086" -> "30064771105"  [ label = "DDG: self.@client_secret"] 
  "30064771079" -> "30064771105"  [ label = "DDG: self"] 
  "111669149696" -> "30064771105"  [ label = "DDG: "] 
  "30064771073" -> "30064771103"  [ label = "DDG: self"] 
  "30064771079" -> "30064771103"  [ label = "DDG: self"] 
  "30064771079" -> "30064771078"  [ label = "DDG: self"] 
  "30064771079" -> "30064771078"  [ label = "DDG: head[:kid]"] 
  "30064771072" -> "30064771078"  [ label = "DDG: head"] 
  "30064771075" -> "30064771078"  [ label = "DDG: head[:alg]"] 
  "30064771072" -> "30064771083"  [ label = "DDG: head"] 
  "30064771075" -> "30064771083"  [ label = "DDG: head[:alg]"] 
  "111669149696" -> "30064771083"  [ label = "DDG: "] 
  "30064771086" -> "30064771085"  [ label = "DDG: self.@client_secret"] 
  "30064771086" -> "30064771085"  [ label = "DDG: head[:alg]"] 
  "30064771073" -> "30064771079"  [ label = "DDG: self"] 
  "111669149696" -> "30064771079"  [ label = "DDG: "] 
  "30064771072" -> "30064771079"  [ label = "DDG: head"] 
  "30064771073" -> "30064771086"  [ label = "DDG: self"] 
  "30064771072" -> "30064771086"  [ label = "DDG: head"] 
  "30064771083" -> "30064771086"  [ label = "DDG: head[:alg]"] 
  "111669149696" -> "30064771089"  [ label = "DDG: "] 
  "111669149696" -> "68719476756"  [ label = "DDG: "] 
  "30064771089" -> "30064771091"  [ label = "DDG: &lt;tmp-0&gt;"] 
  "111669149696" -> "30064771091"  [ label = "DDG: "] 
  "30064771098" -> "30064771091"  [ label = "DDG: head[:alg]"] 
  "30064771099" -> "30064771098"  [ label = "DDG: head[:alg]"] 
  "30064771072" -> "30064771099"  [ label = "DDG: head"] 
  "30064771083" -> "30064771099"  [ label = "DDG: head[:alg]"] 
  "30064771075" -> "30064771084"  [ label = "CDG: "] 
  "30064771075" -> "30064771083"  [ label = "CDG: "] 
  "30064771075" -> "30064771082"  [ label = "CDG: "] 
  "30064771075" -> "30064771081"  [ label = "CDG: "] 
  "30064771075" -> "30064771104"  [ label = "CDG: "] 
  "30064771075" -> "30064771103"  [ label = "CDG: "] 
  "30064771075" -> "30064771102"  [ label = "CDG: "] 
  "30064771075" -> "30064771101"  [ label = "CDG: "] 
  "30064771075" -> "30064771108"  [ label = "CDG: "] 
  "30064771075" -> "30064771107"  [ label = "CDG: "] 
  "30064771075" -> "30064771106"  [ label = "CDG: "] 
  "30064771075" -> "30064771105"  [ label = "CDG: "] 
  "30064771075" -> "55834574849"  [ label = "CDG: "] 
  "30064771075" -> "146028888064"  [ label = "CDG: "] 
  "30064771075" -> "55834574859"  [ label = "CDG: "] 
  "30064771075" -> "55834574858"  [ label = "CDG: "] 
  "30064771075" -> "55834574857"  [ label = "CDG: "] 
  "30064771075" -> "55834574856"  [ label = "CDG: "] 
  "30064771075" -> "55834574855"  [ label = "CDG: "] 
  "30064771075" -> "30064771080"  [ label = "CDG: "] 
  "30064771075" -> "30064771079"  [ label = "CDG: "] 
  "30064771075" -> "30064771078"  [ label = "CDG: "] 
  "30064771075" -> "30064771077"  [ label = "CDG: "] 
  "30064771083" -> "30064771088"  [ label = "CDG: "] 
  "30064771083" -> "30064771087"  [ label = "CDG: "] 
  "30064771083" -> "30064771086"  [ label = "CDG: "] 
  "30064771083" -> "30064771085"  [ label = "CDG: "] 
  "30064771083" -> "30064771096"  [ label = "CDG: "] 
  "30064771083" -> "30064771095"  [ label = "CDG: "] 
  "30064771083" -> "30064771094"  [ label = "CDG: "] 
  "30064771083" -> "30064771093"  [ label = "CDG: "] 
  "30064771083" -> "30064771092"  [ label = "CDG: "] 
  "30064771083" -> "30064771091"  [ label = "CDG: "] 
  "30064771083" -> "30064771090"  [ label = "CDG: "] 
  "30064771083" -> "30064771089"  [ label = "CDG: "] 
  "30064771083" -> "30064771104"  [ label = "CDG: "] 
  "30064771083" -> "30064771103"  [ label = "CDG: "] 
  "30064771083" -> "30064771102"  [ label = "CDG: "] 
  "30064771083" -> "30064771101"  [ label = "CDG: "] 
  "30064771083" -> "30064771100"  [ label = "CDG: "] 
  "30064771083" -> "30064771099"  [ label = "CDG: "] 
  "30064771083" -> "30064771098"  [ label = "CDG: "] 
  "30064771083" -> "30064771097"  [ label = "CDG: "] 
  "30064771083" -> "30064771108"  [ label = "CDG: "] 
  "30064771083" -> "30064771107"  [ label = "CDG: "] 
  "30064771083" -> "30064771106"  [ label = "CDG: "] 
  "30064771083" -> "30064771105"  [ label = "CDG: "] 
  "30064771083" -> "55834574854"  [ label = "CDG: "] 
  "30064771083" -> "55834574853"  [ label = "CDG: "] 
  "30064771083" -> "55834574852"  [ label = "CDG: "] 
  "30064771083" -> "55834574851"  [ label = "CDG: "] 
  "30064771083" -> "55834574850"  [ label = "CDG: "] 
  "30064771083" -> "146028888064"  [ label = "CDG: "] 
  "30064771083" -> "55834574859"  [ label = "CDG: "] 
  "30064771083" -> "55834574858"  [ label = "CDG: "] 
  "30064771083" -> "55834574857"  [ label = "CDG: "] 
  "30064771083" -> "55834574856"  [ label = "CDG: "] 
  "30064771083" -> "55834574855"  [ label = "CDG: "] 
}
"""
)
