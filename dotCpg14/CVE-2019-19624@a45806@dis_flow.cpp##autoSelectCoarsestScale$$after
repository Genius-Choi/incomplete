[33mval[0m [36mres584[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "autoSelectCoarsestScale" {  
"111669149697" [label = <(METHOD,autoSelectCoarsestScale)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,int img_width)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    const int fratio = 5;
    return std::max...,{
    const int fratio = 5;
    return std::max...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,const int fratio: int)<SUB>3</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,fratio = 5)<SUB>3</SUB>> ]
"68719476736" [label = <(IDENTIFIER,fratio,fratio = 5)<SUB>3</SUB>> ]
"90194313216" [label = <(LITERAL,5,fratio = 5)<SUB>3</SUB>> ]
"146028888064" [label = <(RETURN,return std::max(0, (int)std::floor(log2((2.0f*(...,return std::max(0, (int)std::floor(log2((2.0f*(...)<SUB>4</SUB>> ]
"30064771073" [label = <(max,std::max(0, (int)std::floor(log2((2.0f*(float)i...)<SUB>4</SUB>> ]
"90194313217" [label = <(LITERAL,0,std::max(0, (int)std::floor(log2((2.0f*(float)i...)<SUB>4</SUB>> ]
"30064771074" [label = <(&lt;operator&gt;.cast,(int)std::floor(log2((2.0f*(float)img_width) / ...)<SUB>4</SUB>> ]
"184683593728" [label = <(UNKNOWN,int,int)<SUB>4</SUB>> ]
"30064771075" [label = <(floor,std::floor(log2((2.0f*(float)img_width) / ((flo...)<SUB>4</SUB>> ]
"30064771076" [label = <(log2,log2((2.0f*(float)img_width) / ((float)fratio *...)<SUB>4</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.division,(2.0f*(float)img_width) / ((float)fratio * (flo...)<SUB>4</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.multiplication,2.0f*(float)img_width)<SUB>4</SUB>> ]
"90194313218" [label = <(LITERAL,2.0f,2.0f*(float)img_width)<SUB>4</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.cast,(float)img_width)<SUB>4</SUB>> ]
"184683593729" [label = <(UNKNOWN,float,float)<SUB>4</SUB>> ]
"68719476737" [label = <(IDENTIFIER,img_width,(float)img_width)<SUB>4</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.multiplication,(float)fratio * (float)patch_size)<SUB>4</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.cast,(float)fratio)<SUB>4</SUB>> ]
"184683593730" [label = <(UNKNOWN,float,float)<SUB>4</SUB>> ]
"68719476738" [label = <(IDENTIFIER,fratio,(float)fratio)<SUB>4</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.cast,(float)patch_size)<SUB>4</SUB>> ]
"184683593731" [label = <(UNKNOWN,float,float)<SUB>4</SUB>> ]
"68719476739" [label = <(IDENTIFIER,patch_size,(float)patch_size)<SUB>4</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,int)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "30064771072"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "146028888064" -> "30064771073"  [ label = "AST: "] 
  "30064771073" -> "90194313217"  [ label = "AST: "] 
  "30064771073" -> "30064771074"  [ label = "AST: "] 
  "30064771074" -> "184683593728"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "30064771076"  [ label = "AST: "] 
  "30064771076" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "30064771080"  [ label = "AST: "] 
  "30064771078" -> "90194313218"  [ label = "AST: "] 
  "30064771078" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "184683593729"  [ label = "AST: "] 
  "30064771079" -> "68719476737"  [ label = "AST: "] 
  "30064771080" -> "30064771081"  [ label = "AST: "] 
  "30064771080" -> "30064771082"  [ label = "AST: "] 
  "30064771081" -> "184683593730"  [ label = "AST: "] 
  "30064771081" -> "68719476738"  [ label = "AST: "] 
  "30064771082" -> "184683593731"  [ label = "AST: "] 
  "30064771082" -> "68719476739"  [ label = "AST: "] 
  "30064771072" -> "184683593728"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771073" -> "146028888064"  [ label = "CFG: "] 
  "30064771074" -> "30064771073"  [ label = "CFG: "] 
  "184683593728" -> "184683593729"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771076" -> "30064771075"  [ label = "CFG: "] 
  "30064771077" -> "30064771076"  [ label = "CFG: "] 
  "30064771078" -> "184683593730"  [ label = "CFG: "] 
  "30064771080" -> "30064771077"  [ label = "CFG: "] 
  "30064771079" -> "30064771078"  [ label = "CFG: "] 
  "30064771081" -> "184683593731"  [ label = "CFG: "] 
  "30064771082" -> "30064771080"  [ label = "CFG: "] 
  "184683593729" -> "30064771079"  [ label = "CFG: "] 
  "184683593730" -> "30064771081"  [ label = "CFG: "] 
  "184683593731" -> "30064771082"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "30064771072" -> "128849018880"  [ label = "DDG: fratio = 5"] 
  "30064771079" -> "128849018880"  [ label = "DDG: img_width"] 
  "30064771078" -> "128849018880"  [ label = "DDG: (float)img_width"] 
  "30064771077" -> "128849018880"  [ label = "DDG: 2.0f*(float)img_width"] 
  "30064771081" -> "128849018880"  [ label = "DDG: fratio"] 
  "30064771080" -> "128849018880"  [ label = "DDG: (float)fratio"] 
  "30064771082" -> "128849018880"  [ label = "DDG: patch_size"] 
  "30064771080" -> "128849018880"  [ label = "DDG: (float)patch_size"] 
  "30064771077" -> "128849018880"  [ label = "DDG: (float)fratio * (float)patch_size"] 
  "30064771076" -> "128849018880"  [ label = "DDG: (2.0f*(float)img_width) / ((float)fratio * (float)patch_size)"] 
  "30064771075" -> "128849018880"  [ label = "DDG: log2((2.0f*(float)img_width) / ((float)fratio * (float)patch_size))"] 
  "30064771074" -> "128849018880"  [ label = "DDG: std::floor(log2((2.0f*(float)img_width) / ((float)fratio * (float)patch_size)))"] 
  "30064771073" -> "128849018880"  [ label = "DDG: (int)std::floor(log2((2.0f*(float)img_width) / ((float)fratio * (float)patch_size)))"] 
  "30064771073" -> "128849018880"  [ label = "DDG: std::max(0, (int)std::floor(log2((2.0f*(float)img_width) / ((float)fratio * (float)patch_size))))"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771073" -> "146028888064"  [ label = "DDG: std::max(0, (int)std::floor(log2((2.0f*(float)img_width) / ((float)fratio * (float)patch_size))))"] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "30064771075" -> "30064771073"  [ label = "DDG: log2((2.0f*(float)img_width) / ((float)fratio * (float)patch_size))"] 
  "30064771075" -> "30064771074"  [ label = "DDG: log2((2.0f*(float)img_width) / ((float)fratio * (float)patch_size))"] 
  "30064771076" -> "30064771075"  [ label = "DDG: (2.0f*(float)img_width) / ((float)fratio * (float)patch_size)"] 
  "30064771077" -> "30064771076"  [ label = "DDG: 2.0f*(float)img_width"] 
  "30064771077" -> "30064771076"  [ label = "DDG: (float)fratio * (float)patch_size"] 
  "30064771078" -> "30064771077"  [ label = "DDG: 2.0f"] 
  "30064771078" -> "30064771077"  [ label = "DDG: (float)img_width"] 
  "30064771080" -> "30064771077"  [ label = "DDG: (float)fratio"] 
  "30064771080" -> "30064771077"  [ label = "DDG: (float)patch_size"] 
  "111669149697" -> "30064771078"  [ label = "DDG: "] 
  "115964116992" -> "30064771078"  [ label = "DDG: img_width"] 
  "30064771072" -> "30064771080"  [ label = "DDG: fratio"] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "115964116992" -> "30064771079"  [ label = "DDG: img_width"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "30064771072" -> "30064771081"  [ label = "DDG: fratio"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "111669149697" -> "30064771082"  [ label = "DDG: "] 
}
"""
)
