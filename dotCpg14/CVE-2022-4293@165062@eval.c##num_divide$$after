[33mval[0m [36mres1237[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "num_divide" {  
"111669149697" [label = <(METHOD,num_divide)<SUB>1</SUB>> ]
"115964116992" [label = <(PARAM,varnumber_T n1)<SUB>1</SUB>> ]
"115964116993" [label = <(PARAM,varnumber_T n2)<SUB>1</SUB>> ]
"115964116994" [label = <(PARAM,int *failed)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,{
    varnumber_T	result;

    if (n2 == 0)
   ...,{
    varnumber_T	result;

    if (n2 == 0)
   ...)<SUB>2</SUB>> ]
"94489280512" [label = <(LOCAL,varnumber_T result: varnumber_T)<SUB>3</SUB>> ]
"47244640256" [label = <(CONTROL_STRUCTURE,IF,if (n2 == 0))<SUB>5</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.equals,n2 == 0)<SUB>5</SUB>> ]
"68719476736" [label = <(IDENTIFIER,n2,n2 == 0)<SUB>5</SUB>> ]
"90194313216" [label = <(LITERAL,0,n2 == 0)<SUB>5</SUB>> ]
"25769803778" [label = <(BLOCK,{
	if (in_vim9script())
	{
	    emsg(_(e_divide...,{
	if (in_vim9script())
	{
	    emsg(_(e_divide...)<SUB>6</SUB>> ]
"47244640257" [label = <(CONTROL_STRUCTURE,IF,if (in_vim9script()))<SUB>7</SUB>> ]
"30064771073" [label = <(in_vim9script,in_vim9script())<SUB>7</SUB>> ]
"25769803779" [label = <(BLOCK,{
	    emsg(_(e_divide_by_zero));
	    if (fail...,{
	    emsg(_(e_divide_by_zero));
	    if (fail...)<SUB>8</SUB>> ]
"30064771074" [label = <(emsg,emsg(_(e_divide_by_zero)))<SUB>9</SUB>> ]
"30064771075" [label = <(_,_(e_divide_by_zero))<SUB>9</SUB>> ]
"68719476737" [label = <(IDENTIFIER,e_divide_by_zero,_(e_divide_by_zero))<SUB>9</SUB>> ]
"47244640258" [label = <(CONTROL_STRUCTURE,IF,if (failed != NULL))<SUB>10</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.notEquals,failed != NULL)<SUB>10</SUB>> ]
"68719476738" [label = <(IDENTIFIER,failed,failed != NULL)<SUB>10</SUB>> ]
"68719476739" [label = <(IDENTIFIER,NULL,failed != NULL)<SUB>10</SUB>> ]
"25769803780" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>> ]
"30064771077" [label = <(&lt;operator&gt;.assignment,*failed = TRUE)<SUB>11</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.indirection,*failed)<SUB>11</SUB>> ]
"68719476740" [label = <(IDENTIFIER,failed,*failed = TRUE)<SUB>11</SUB>> ]
"68719476741" [label = <(IDENTIFIER,TRUE,*failed = TRUE)<SUB>11</SUB>> ]
"47244640259" [label = <(CONTROL_STRUCTURE,IF,if (n1 == 0))<SUB>13</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.equals,n1 == 0)<SUB>13</SUB>> ]
"68719476742" [label = <(IDENTIFIER,n1,n1 == 0)<SUB>13</SUB>> ]
"90194313217" [label = <(LITERAL,0,n1 == 0)<SUB>13</SUB>> ]
"25769803781" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,result = VARNUM_MIN)<SUB>14</SUB>> ]
"68719476743" [label = <(IDENTIFIER,result,result = VARNUM_MIN)<SUB>14</SUB>> ]
"68719476744" [label = <(IDENTIFIER,VARNUM_MIN,result = VARNUM_MIN)<SUB>14</SUB>> ]
"47244640260" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>15</SUB>> ]
"25769803782" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>> ]
"47244640261" [label = <(CONTROL_STRUCTURE,IF,if (n1 &lt; 0))<SUB>15</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.lessThan,n1 &lt; 0)<SUB>15</SUB>> ]
"68719476745" [label = <(IDENTIFIER,n1,n1 &lt; 0)<SUB>15</SUB>> ]
"90194313218" [label = <(LITERAL,0,n1 &lt; 0)<SUB>15</SUB>> ]
"25769803783" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,result = -VARNUM_MAX)<SUB>16</SUB>> ]
"68719476746" [label = <(IDENTIFIER,result,result = -VARNUM_MAX)<SUB>16</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.minus,-VARNUM_MAX)<SUB>16</SUB>> ]
"68719476747" [label = <(IDENTIFIER,VARNUM_MAX,-VARNUM_MAX)<SUB>16</SUB>> ]
"47244640262" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>18</SUB>> ]
"25769803784" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,result = VARNUM_MAX)<SUB>18</SUB>> ]
"68719476748" [label = <(IDENTIFIER,result,result = VARNUM_MAX)<SUB>18</SUB>> ]
"68719476749" [label = <(IDENTIFIER,VARNUM_MAX,result = VARNUM_MAX)<SUB>18</SUB>> ]
"47244640263" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>20</SUB>> ]
"25769803785" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>> ]
"47244640264" [label = <(CONTROL_STRUCTURE,IF,if (n1 == VARNUM_MIN &amp;&amp; n2 == -1))<SUB>20</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.logicalAnd,n1 == VARNUM_MIN &amp;&amp; n2 == -1)<SUB>20</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.equals,n1 == VARNUM_MIN)<SUB>20</SUB>> ]
"68719476750" [label = <(IDENTIFIER,n1,n1 == VARNUM_MIN)<SUB>20</SUB>> ]
"68719476751" [label = <(IDENTIFIER,VARNUM_MIN,n1 == VARNUM_MIN)<SUB>20</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.equals,n2 == -1)<SUB>20</SUB>> ]
"68719476752" [label = <(IDENTIFIER,n2,n2 == -1)<SUB>20</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.minus,-1)<SUB>20</SUB>> ]
"90194313219" [label = <(LITERAL,1,-1)<SUB>20</SUB>> ]
"25769803786" [label = <(BLOCK,{
	// specific case: trying to do VARNUM_MIN / ...,{
	// specific case: trying to do VARNUM_MIN / ...)<SUB>21</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.assignment,result = VARNUM_MAX)<SUB>24</SUB>> ]
"68719476753" [label = <(IDENTIFIER,result,result = VARNUM_MAX)<SUB>24</SUB>> ]
"68719476754" [label = <(IDENTIFIER,VARNUM_MAX,result = VARNUM_MAX)<SUB>24</SUB>> ]
"47244640265" [label = <(CONTROL_STRUCTURE,ELSE,else)<SUB>27</SUB>> ]
"25769803787" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assignment,result = n1 / n2)<SUB>27</SUB>> ]
"68719476755" [label = <(IDENTIFIER,result,result = n1 / n2)<SUB>27</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.division,n1 / n2)<SUB>27</SUB>> ]
"68719476756" [label = <(IDENTIFIER,n1,n1 / n2)<SUB>27</SUB>> ]
"68719476757" [label = <(IDENTIFIER,n2,n1 / n2)<SUB>27</SUB>> ]
"146028888064" [label = <(RETURN,return result;,return result;)<SUB>29</SUB>> ]
"68719476758" [label = <(IDENTIFIER,result,return result;)<SUB>29</SUB>> ]
"128849018880" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "115964116993"  [ label = "AST: "] 
  "111669149697" -> "115964116994"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "128849018880"  [ label = "AST: "] 
  "25769803777" -> "94489280512"  [ label = "AST: "] 
  "25769803777" -> "47244640256"  [ label = "AST: "] 
  "25769803777" -> "146028888064"  [ label = "AST: "] 
  "47244640256" -> "30064771072"  [ label = "AST: "] 
  "47244640256" -> "25769803778"  [ label = "AST: "] 
  "47244640256" -> "47244640263"  [ label = "AST: "] 
  "30064771072" -> "68719476736"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "25769803778" -> "47244640257"  [ label = "AST: "] 
  "25769803778" -> "47244640259"  [ label = "AST: "] 
  "47244640257" -> "30064771073"  [ label = "AST: "] 
  "47244640257" -> "25769803779"  [ label = "AST: "] 
  "25769803779" -> "30064771074"  [ label = "AST: "] 
  "25769803779" -> "47244640258"  [ label = "AST: "] 
  "30064771074" -> "30064771075"  [ label = "AST: "] 
  "30064771075" -> "68719476737"  [ label = "AST: "] 
  "47244640258" -> "30064771076"  [ label = "AST: "] 
  "47244640258" -> "25769803780"  [ label = "AST: "] 
  "30064771076" -> "68719476738"  [ label = "AST: "] 
  "30064771076" -> "68719476739"  [ label = "AST: "] 
  "25769803780" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771078"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771078" -> "68719476740"  [ label = "AST: "] 
  "47244640259" -> "30064771079"  [ label = "AST: "] 
  "47244640259" -> "25769803781"  [ label = "AST: "] 
  "47244640259" -> "47244640260"  [ label = "AST: "] 
  "30064771079" -> "68719476742"  [ label = "AST: "] 
  "30064771079" -> "90194313217"  [ label = "AST: "] 
  "25769803781" -> "30064771080"  [ label = "AST: "] 
  "30064771080" -> "68719476743"  [ label = "AST: "] 
  "30064771080" -> "68719476744"  [ label = "AST: "] 
  "47244640260" -> "25769803782"  [ label = "AST: "] 
  "25769803782" -> "47244640261"  [ label = "AST: "] 
  "47244640261" -> "30064771081"  [ label = "AST: "] 
  "47244640261" -> "25769803783"  [ label = "AST: "] 
  "47244640261" -> "47244640262"  [ label = "AST: "] 
  "30064771081" -> "68719476745"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "25769803783" -> "30064771082"  [ label = "AST: "] 
  "30064771082" -> "68719476746"  [ label = "AST: "] 
  "30064771082" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476747"  [ label = "AST: "] 
  "47244640262" -> "25769803784"  [ label = "AST: "] 
  "25769803784" -> "30064771084"  [ label = "AST: "] 
  "30064771084" -> "68719476748"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "47244640263" -> "25769803785"  [ label = "AST: "] 
  "25769803785" -> "47244640264"  [ label = "AST: "] 
  "47244640264" -> "30064771085"  [ label = "AST: "] 
  "47244640264" -> "25769803786"  [ label = "AST: "] 
  "47244640264" -> "47244640265"  [ label = "AST: "] 
  "30064771085" -> "30064771086"  [ label = "AST: "] 
  "30064771085" -> "30064771087"  [ label = "AST: "] 
  "30064771086" -> "68719476750"  [ label = "AST: "] 
  "30064771086" -> "68719476751"  [ label = "AST: "] 
  "30064771087" -> "68719476752"  [ label = "AST: "] 
  "30064771087" -> "30064771088"  [ label = "AST: "] 
  "30064771088" -> "90194313219"  [ label = "AST: "] 
  "25769803786" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "68719476753"  [ label = "AST: "] 
  "30064771089" -> "68719476754"  [ label = "AST: "] 
  "47244640265" -> "25769803787"  [ label = "AST: "] 
  "25769803787" -> "30064771090"  [ label = "AST: "] 
  "30064771090" -> "68719476755"  [ label = "AST: "] 
  "30064771090" -> "30064771091"  [ label = "AST: "] 
  "30064771091" -> "68719476756"  [ label = "AST: "] 
  "30064771091" -> "68719476757"  [ label = "AST: "] 
  "146028888064" -> "68719476758"  [ label = "AST: "] 
  "146028888064" -> "128849018880"  [ label = "CFG: "] 
  "30064771072" -> "30064771073"  [ label = "CFG: "] 
  "30064771072" -> "30064771086"  [ label = "CFG: "] 
  "30064771073" -> "30064771075"  [ label = "CFG: "] 
  "30064771073" -> "30064771079"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771079" -> "30064771081"  [ label = "CFG: "] 
  "30064771074" -> "30064771076"  [ label = "CFG: "] 
  "30064771080" -> "146028888064"  [ label = "CFG: "] 
  "30064771085" -> "30064771089"  [ label = "CFG: "] 
  "30064771085" -> "30064771091"  [ label = "CFG: "] 
  "30064771075" -> "30064771074"  [ label = "CFG: "] 
  "30064771076" -> "30064771078"  [ label = "CFG: "] 
  "30064771076" -> "30064771079"  [ label = "CFG: "] 
  "30064771086" -> "30064771085"  [ label = "CFG: "] 
  "30064771086" -> "30064771088"  [ label = "CFG: "] 
  "30064771087" -> "30064771085"  [ label = "CFG: "] 
  "30064771089" -> "146028888064"  [ label = "CFG: "] 
  "30064771077" -> "30064771079"  [ label = "CFG: "] 
  "30064771081" -> "30064771083"  [ label = "CFG: "] 
  "30064771081" -> "30064771084"  [ label = "CFG: "] 
  "30064771088" -> "30064771087"  [ label = "CFG: "] 
  "30064771090" -> "146028888064"  [ label = "CFG: "] 
  "30064771078" -> "30064771077"  [ label = "CFG: "] 
  "30064771082" -> "146028888064"  [ label = "CFG: "] 
  "30064771091" -> "30064771090"  [ label = "CFG: "] 
  "30064771083" -> "30064771082"  [ label = "CFG: "] 
  "30064771084" -> "146028888064"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "146028888064" -> "128849018880"  [ label = "DDG: &lt;RET&gt;"] 
  "115964116994" -> "128849018880"  [ label = "DDG: failed"] 
  "30064771072" -> "128849018880"  [ label = "DDG: n2"] 
  "30064771072" -> "128849018880"  [ label = "DDG: n2 == 0"] 
  "30064771086" -> "128849018880"  [ label = "DDG: n1"] 
  "30064771086" -> "128849018880"  [ label = "DDG: VARNUM_MIN"] 
  "30064771085" -> "128849018880"  [ label = "DDG: n1 == VARNUM_MIN"] 
  "30064771087" -> "128849018880"  [ label = "DDG: n2"] 
  "30064771087" -> "128849018880"  [ label = "DDG: -1"] 
  "30064771085" -> "128849018880"  [ label = "DDG: n2 == -1"] 
  "30064771085" -> "128849018880"  [ label = "DDG: n1 == VARNUM_MIN &amp;&amp; n2 == -1"] 
  "30064771090" -> "128849018880"  [ label = "DDG: result"] 
  "30064771091" -> "128849018880"  [ label = "DDG: n1"] 
  "30064771091" -> "128849018880"  [ label = "DDG: n2"] 
  "30064771090" -> "128849018880"  [ label = "DDG: n1 / n2"] 
  "30064771090" -> "128849018880"  [ label = "DDG: result = n1 / n2"] 
  "30064771089" -> "128849018880"  [ label = "DDG: result"] 
  "30064771089" -> "128849018880"  [ label = "DDG: VARNUM_MAX"] 
  "30064771089" -> "128849018880"  [ label = "DDG: result = VARNUM_MAX"] 
  "30064771073" -> "128849018880"  [ label = "DDG: in_vim9script()"] 
  "30064771074" -> "128849018880"  [ label = "DDG: _(e_divide_by_zero)"] 
  "30064771074" -> "128849018880"  [ label = "DDG: emsg(_(e_divide_by_zero))"] 
  "30064771076" -> "128849018880"  [ label = "DDG: failed"] 
  "30064771076" -> "128849018880"  [ label = "DDG: failed != NULL"] 
  "30064771077" -> "128849018880"  [ label = "DDG: *failed"] 
  "30064771077" -> "128849018880"  [ label = "DDG: *failed = TRUE"] 
  "30064771079" -> "128849018880"  [ label = "DDG: n1"] 
  "30064771079" -> "128849018880"  [ label = "DDG: n1 == 0"] 
  "30064771081" -> "128849018880"  [ label = "DDG: n1"] 
  "30064771081" -> "128849018880"  [ label = "DDG: n1 &lt; 0"] 
  "30064771084" -> "128849018880"  [ label = "DDG: result"] 
  "30064771084" -> "128849018880"  [ label = "DDG: VARNUM_MAX"] 
  "30064771084" -> "128849018880"  [ label = "DDG: result = VARNUM_MAX"] 
  "30064771082" -> "128849018880"  [ label = "DDG: result"] 
  "30064771083" -> "128849018880"  [ label = "DDG: VARNUM_MAX"] 
  "30064771082" -> "128849018880"  [ label = "DDG: -VARNUM_MAX"] 
  "30064771082" -> "128849018880"  [ label = "DDG: result = -VARNUM_MAX"] 
  "30064771080" -> "128849018880"  [ label = "DDG: result"] 
  "30064771080" -> "128849018880"  [ label = "DDG: VARNUM_MIN"] 
  "30064771080" -> "128849018880"  [ label = "DDG: result = VARNUM_MIN"] 
  "30064771077" -> "128849018880"  [ label = "DDG: TRUE"] 
  "30064771076" -> "128849018880"  [ label = "DDG: NULL"] 
  "30064771075" -> "128849018880"  [ label = "DDG: e_divide_by_zero"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "111669149697" -> "115964116993"  [ label = "DDG: "] 
  "111669149697" -> "115964116994"  [ label = "DDG: "] 
  "68719476758" -> "146028888064"  [ label = "DDG: result"] 
  "30064771090" -> "68719476758"  [ label = "DDG: result"] 
  "30064771089" -> "68719476758"  [ label = "DDG: result"] 
  "30064771084" -> "68719476758"  [ label = "DDG: result"] 
  "30064771082" -> "68719476758"  [ label = "DDG: result"] 
  "30064771080" -> "68719476758"  [ label = "DDG: result"] 
  "111669149697" -> "68719476758"  [ label = "DDG: "] 
  "115964116993" -> "30064771072"  [ label = "DDG: n2"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "111669149697" -> "30064771073"  [ label = "DDG: "] 
  "115964116992" -> "30064771079"  [ label = "DDG: n1"] 
  "111669149697" -> "30064771079"  [ label = "DDG: "] 
  "111669149697" -> "30064771080"  [ label = "DDG: "] 
  "30064771075" -> "30064771074"  [ label = "DDG: e_divide_by_zero"] 
  "30064771086" -> "30064771085"  [ label = "DDG: n1"] 
  "30064771086" -> "30064771085"  [ label = "DDG: VARNUM_MIN"] 
  "30064771087" -> "30064771085"  [ label = "DDG: n2"] 
  "30064771087" -> "30064771085"  [ label = "DDG: -1"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "115964116994" -> "30064771076"  [ label = "DDG: failed"] 
  "111669149697" -> "30064771076"  [ label = "DDG: "] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "115964116992" -> "30064771086"  [ label = "DDG: n1"] 
  "111669149697" -> "30064771086"  [ label = "DDG: "] 
  "30064771072" -> "30064771087"  [ label = "DDG: n2"] 
  "111669149697" -> "30064771087"  [ label = "DDG: "] 
  "30064771088" -> "30064771087"  [ label = "DDG: 1"] 
  "30064771091" -> "30064771090"  [ label = "DDG: n1"] 
  "30064771091" -> "30064771090"  [ label = "DDG: n2"] 
  "30064771079" -> "30064771081"  [ label = "DDG: n1"] 
  "111669149697" -> "30064771081"  [ label = "DDG: "] 
  "30064771083" -> "30064771082"  [ label = "DDG: VARNUM_MAX"] 
  "111669149697" -> "30064771088"  [ label = "DDG: "] 
  "111669149697" -> "30064771084"  [ label = "DDG: "] 
  "30064771086" -> "30064771091"  [ label = "DDG: n1"] 
  "111669149697" -> "30064771091"  [ label = "DDG: "] 
  "30064771072" -> "30064771091"  [ label = "DDG: n2"] 
  "30064771087" -> "30064771091"  [ label = "DDG: n2"] 
  "111669149697" -> "30064771083"  [ label = "DDG: "] 
  "30064771072" -> "30064771086"  [ label = "CDG: "] 
  "30064771072" -> "30064771085"  [ label = "CDG: "] 
  "30064771072" -> "30064771079"  [ label = "CDG: "] 
  "30064771072" -> "30064771073"  [ label = "CDG: "] 
  "30064771073" -> "30064771076"  [ label = "CDG: "] 
  "30064771073" -> "30064771075"  [ label = "CDG: "] 
  "30064771073" -> "30064771074"  [ label = "CDG: "] 
  "30064771079" -> "30064771081"  [ label = "CDG: "] 
  "30064771079" -> "30064771080"  [ label = "CDG: "] 
  "30064771085" -> "30064771091"  [ label = "CDG: "] 
  "30064771085" -> "30064771090"  [ label = "CDG: "] 
  "30064771085" -> "30064771089"  [ label = "CDG: "] 
  "30064771076" -> "30064771078"  [ label = "CDG: "] 
  "30064771076" -> "30064771077"  [ label = "CDG: "] 
  "30064771086" -> "30064771088"  [ label = "CDG: "] 
  "30064771086" -> "30064771087"  [ label = "CDG: "] 
  "30064771081" -> "30064771084"  [ label = "CDG: "] 
  "30064771081" -> "30064771083"  [ label = "CDG: "] 
  "30064771081" -> "30064771082"  [ label = "CDG: "] 
}
"""
)
