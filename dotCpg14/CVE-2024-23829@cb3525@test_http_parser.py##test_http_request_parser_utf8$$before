[33mval[0m [36mres379[0m: [32mList[0m[[32mString[0m] = List(
  """digraph "test_http_request_parser_utf8" {  
"111669149697" [label = <(METHOD,test_http_request_parser_utf8)<SUB>1</SUB>> ]
"25769803777" [label = <(BLOCK,,)<SUB>1</SUB>> ]
"30064771075" [label = <(&lt;operator&gt;.assignment,text = tmp0 = &quot;GET /path HTTP/1.1\r\nx-test:тес...)<SUB>2</SUB>> ]
"68719476740" [label = <(IDENTIFIER,text,text = tmp0 = &quot;GET /path HTTP/1.1\r\nx-test:тес...)<SUB>2</SUB>> ]
"25769803778" [label = <(BLOCK,tmp0 = &quot;GET /path HTTP/1.1\r\nx-test:тест\r\n\r...,tmp0 = &quot;GET /path HTTP/1.1\r\nx-test:тест\r\n\r...)<SUB>2</SUB>> ]
"30064771072" [label = <(&lt;operator&gt;.assignment,tmp0 = &quot;GET /path HTTP/1.1\r\nx-test:тест\r\n\r\n&quot;)<SUB>2</SUB>> ]
"68719476737" [label = <(IDENTIFIER,tmp0,tmp0 = &quot;GET /path HTTP/1.1\r\nx-test:тест\r\n\r\n&quot;)<SUB>2</SUB>> ]
"90194313216" [label = <(LITERAL,&quot;GET /path HTTP/1.1\r\nx-test:тест\r\n\r\n&quot;,tmp0 = &quot;GET /path HTTP/1.1\r\nx-test:тест\r\n\r\n&quot;)<SUB>2</SUB>> ]
"30064771074" [label = <(encode,tmp0.encode())<SUB>2</SUB>> ]
"30064771073" [label = <(&lt;operator&gt;.fieldAccess,tmp0.encode)<SUB>2</SUB>> ]
"68719476738" [label = <(IDENTIFIER,tmp0,tmp0.encode())<SUB>2</SUB>> ]
"55834574848" [label = <(FIELD_IDENTIFIER,encode,encode)<SUB>2</SUB>> ]
"68719476739" [label = <(IDENTIFIER,tmp0,tmp0.encode())<SUB>2</SUB>> ]
"25769803779" [label = <(BLOCK,tmp1 = parser.feed_data(text)
messages = tmp1[0...,tmp1 = parser.feed_data(text)
messages = tmp1[0...)<SUB>3</SUB>> ]
"30064771078" [label = <(&lt;operator&gt;.assignment,tmp1 = parser.feed_data(text))<SUB>3</SUB>> ]
"68719476744" [label = <(IDENTIFIER,tmp1,tmp1 = parser.feed_data(text))<SUB>3</SUB>> ]
"30064771077" [label = <(feed_data,parser.feed_data(text))<SUB>3</SUB>> ]
"30064771076" [label = <(&lt;operator&gt;.fieldAccess,parser.feed_data)<SUB>3</SUB>> ]
"68719476742" [label = <(IDENTIFIER,parser,parser.feed_data(text))<SUB>3</SUB>> ]
"55834574849" [label = <(FIELD_IDENTIFIER,feed_data,feed_data)<SUB>3</SUB>> ]
"68719476743" [label = <(IDENTIFIER,parser,parser.feed_data(text))<SUB>3</SUB>> ]
"68719476741" [label = <(IDENTIFIER,text,parser.feed_data(text))<SUB>3</SUB>> ]
"30064771080" [label = <(&lt;operator&gt;.assignment,messages = tmp1[0])<SUB>3</SUB>> ]
"68719476745" [label = <(IDENTIFIER,messages,messages = tmp1[0])<SUB>3</SUB>> ]
"30064771079" [label = <(&lt;operator&gt;.indexAccess,tmp1[0])<SUB>3</SUB>> ]
"68719476746" [label = <(IDENTIFIER,tmp1,messages = tmp1[0])<SUB>3</SUB>> ]
"90194313217" [label = <(LITERAL,0,messages = tmp1[0])<SUB>3</SUB>> ]
"30064771082" [label = <(&lt;operator&gt;.assignment,upgrade = tmp1[1])<SUB>3</SUB>> ]
"68719476747" [label = <(IDENTIFIER,upgrade,upgrade = tmp1[1])<SUB>3</SUB>> ]
"30064771081" [label = <(&lt;operator&gt;.indexAccess,tmp1[1])<SUB>3</SUB>> ]
"68719476748" [label = <(IDENTIFIER,tmp1,upgrade = tmp1[1])<SUB>3</SUB>> ]
"90194313218" [label = <(LITERAL,1,upgrade = tmp1[1])<SUB>3</SUB>> ]
"30064771084" [label = <(&lt;operator&gt;.assignment,tail = tmp1[2])<SUB>3</SUB>> ]
"68719476749" [label = <(IDENTIFIER,tail,tail = tmp1[2])<SUB>3</SUB>> ]
"30064771083" [label = <(&lt;operator&gt;.indexAccess,tmp1[2])<SUB>3</SUB>> ]
"68719476750" [label = <(IDENTIFIER,tmp1,tail = tmp1[2])<SUB>3</SUB>> ]
"90194313219" [label = <(LITERAL,2,tail = tmp1[2])<SUB>3</SUB>> ]
"30064771087" [label = <(&lt;operator&gt;.assignment,msg = messages[0][0])<SUB>4</SUB>> ]
"68719476752" [label = <(IDENTIFIER,msg,msg = messages[0][0])<SUB>4</SUB>> ]
"30064771086" [label = <(&lt;operator&gt;.indexAccess,messages[0][0])<SUB>4</SUB>> ]
"30064771085" [label = <(&lt;operator&gt;.indexAccess,messages[0])<SUB>4</SUB>> ]
"68719476751" [label = <(IDENTIFIER,messages,msg = messages[0][0])<SUB>4</SUB>> ]
"90194313220" [label = <(LITERAL,0,msg = messages[0][0])<SUB>4</SUB>> ]
"90194313221" [label = <(LITERAL,0,msg = messages[0][0])<SUB>4</SUB>> ]
"30064771090" [label = <(&lt;operator&gt;.assert,assert msg.method == &quot;GET&quot;)<SUB>6</SUB>> ]
"30064771089" [label = <(&lt;operator&gt;.equals,msg.method == &quot;GET&quot;)<SUB>6</SUB>> ]
"30064771088" [label = <(&lt;operator&gt;.fieldAccess,msg.method)<SUB>6</SUB>> ]
"68719476753" [label = <(IDENTIFIER,msg,msg.method == &quot;GET&quot;)<SUB>6</SUB>> ]
"55834574850" [label = <(FIELD_IDENTIFIER,method,method)<SUB>6</SUB>> ]
"90194313222" [label = <(LITERAL,&quot;GET&quot;,msg.method == &quot;GET&quot;)<SUB>6</SUB>> ]
"30064771093" [label = <(&lt;operator&gt;.assert,assert msg.path == &quot;/path&quot;)<SUB>7</SUB>> ]
"30064771092" [label = <(&lt;operator&gt;.equals,msg.path == &quot;/path&quot;)<SUB>7</SUB>> ]
"30064771091" [label = <(&lt;operator&gt;.fieldAccess,msg.path)<SUB>7</SUB>> ]
"68719476754" [label = <(IDENTIFIER,msg,msg.path == &quot;/path&quot;)<SUB>7</SUB>> ]
"55834574851" [label = <(FIELD_IDENTIFIER,path,path)<SUB>7</SUB>> ]
"90194313223" [label = <(LITERAL,&quot;/path&quot;,msg.path == &quot;/path&quot;)<SUB>7</SUB>> ]
"30064771097" [label = <(&lt;operator&gt;.assert,assert msg.version == (1, 1))<SUB>8</SUB>> ]
"30064771096" [label = <(&lt;operator&gt;.equals,msg.version == (1, 1))<SUB>8</SUB>> ]
"30064771094" [label = <(&lt;operator&gt;.fieldAccess,msg.version)<SUB>8</SUB>> ]
"68719476755" [label = <(IDENTIFIER,msg,msg.version == (1, 1))<SUB>8</SUB>> ]
"55834574852" [label = <(FIELD_IDENTIFIER,version,version)<SUB>8</SUB>> ]
"30064771095" [label = <(&lt;operator&gt;.tupleLiteral,(1, 1))<SUB>8</SUB>> ]
"90194313224" [label = <(LITERAL,1,(1, 1))<SUB>8</SUB>> ]
"90194313225" [label = <(LITERAL,1,(1, 1))<SUB>8</SUB>> ]
"30064771103" [label = <(&lt;operator&gt;.assert,assert msg.headers == CIMultiDict([(&quot;X-TEST&quot;, &quot;...)<SUB>9</SUB>> ]
"30064771102" [label = <(&lt;operator&gt;.equals,msg.headers == CIMultiDict([(&quot;X-TEST&quot;, &quot;тест&quot;)]))<SUB>9</SUB>> ]
"30064771098" [label = <(&lt;operator&gt;.fieldAccess,msg.headers)<SUB>9</SUB>> ]
"68719476756" [label = <(IDENTIFIER,msg,msg.headers == CIMultiDict([(&quot;X-TEST&quot;, &quot;тест&quot;)]))<SUB>9</SUB>> ]
"55834574853" [label = <(FIELD_IDENTIFIER,headers,headers)<SUB>9</SUB>> ]
"30064771101" [label = <(CIMultiDict,CIMultiDict([(&quot;X-TEST&quot;, &quot;тест&quot;)]))<SUB>9</SUB>> ]
"68719476757" [label = <(IDENTIFIER,CIMultiDict,CIMultiDict([(&quot;X-TEST&quot;, &quot;тест&quot;)]))<SUB>9</SUB>> ]
"30064771100" [label = <(&lt;operator&gt;.listLiteral,[(&quot;X-TEST&quot;, &quot;тест&quot;)])<SUB>9</SUB>> ]
"30064771099" [label = <(&lt;operator&gt;.tupleLiteral,(&quot;X-TEST&quot;, &quot;тест&quot;))<SUB>9</SUB>> ]
"90194313226" [label = <(LITERAL,&quot;X-TEST&quot;,(&quot;X-TEST&quot;, &quot;тест&quot;))<SUB>9</SUB>> ]
"90194313227" [label = <(LITERAL,&quot;тест&quot;,(&quot;X-TEST&quot;, &quot;тест&quot;))<SUB>9</SUB>> ]
"30064771111" [label = <(&lt;operator&gt;.assert,assert msg.raw_headers == ((b&quot;x-test&quot;, tmp2 = &quot;...)<SUB>10</SUB>> ]
"30064771110" [label = <(&lt;operator&gt;.equals,msg.raw_headers == ((b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
t...)<SUB>10</SUB>> ]
"30064771104" [label = <(&lt;operator&gt;.fieldAccess,msg.raw_headers)<SUB>10</SUB>> ]
"68719476758" [label = <(IDENTIFIER,msg,msg.raw_headers == ((b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
t...)<SUB>10</SUB>> ]
"55834574854" [label = <(FIELD_IDENTIFIER,raw_headers,raw_headers)<SUB>10</SUB>> ]
"30064771109" [label = <(&lt;operator&gt;.tupleLiteral,((b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
tmp2.encode()),))<SUB>10</SUB>> ]
"30064771108" [label = <(&lt;operator&gt;.tupleLiteral,(b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
tmp2.encode()))<SUB>10</SUB>> ]
"90194313228" [label = <(LITERAL,b&quot;x-test&quot;,(b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
tmp2.encode()))<SUB>10</SUB>> ]
"25769803780" [label = <(BLOCK,tmp2 = &quot;тест&quot;
tmp2.encode(),tmp2 = &quot;тест&quot;
tmp2.encode())<SUB>10</SUB>> ]
"30064771105" [label = <(&lt;operator&gt;.assignment,tmp2 = &quot;тест&quot;)<SUB>10</SUB>> ]
"68719476759" [label = <(IDENTIFIER,tmp2,tmp2 = &quot;тест&quot;)<SUB>10</SUB>> ]
"90194313229" [label = <(LITERAL,&quot;тест&quot;,tmp2 = &quot;тест&quot;)<SUB>10</SUB>> ]
"30064771107" [label = <(encode,tmp2.encode())<SUB>10</SUB>> ]
"30064771106" [label = <(&lt;operator&gt;.fieldAccess,tmp2.encode)<SUB>10</SUB>> ]
"68719476760" [label = <(IDENTIFIER,tmp2,tmp2.encode())<SUB>10</SUB>> ]
"55834574855" [label = <(FIELD_IDENTIFIER,encode,encode)<SUB>10</SUB>> ]
"68719476761" [label = <(IDENTIFIER,tmp2,tmp2.encode())<SUB>10</SUB>> ]
"30064771114" [label = <(&lt;operator&gt;.assert,assert not msg.should_close)<SUB>11</SUB>> ]
"30064771113" [label = <(&lt;operator&gt;.logicalNot,not msg.should_close)<SUB>11</SUB>> ]
"30064771112" [label = <(&lt;operator&gt;.fieldAccess,msg.should_close)<SUB>11</SUB>> ]
"68719476762" [label = <(IDENTIFIER,msg,not msg.should_close)<SUB>11</SUB>> ]
"55834574856" [label = <(FIELD_IDENTIFIER,should_close,should_close)<SUB>11</SUB>> ]
"30064771117" [label = <(&lt;operator&gt;.assert,assert msg.compression is None)<SUB>12</SUB>> ]
"30064771116" [label = <(&lt;operator&gt;.is,msg.compression is None)<SUB>12</SUB>> ]
"30064771115" [label = <(&lt;operator&gt;.fieldAccess,msg.compression)<SUB>12</SUB>> ]
"68719476763" [label = <(IDENTIFIER,msg,msg.compression is None)<SUB>12</SUB>> ]
"55834574857" [label = <(FIELD_IDENTIFIER,compression,compression)<SUB>12</SUB>> ]
"90194313230" [label = <(LITERAL,None,msg.compression is None)<SUB>12</SUB>> ]
"30064771120" [label = <(&lt;operator&gt;.assert,assert not msg.upgrade)<SUB>13</SUB>> ]
"30064771119" [label = <(&lt;operator&gt;.logicalNot,not msg.upgrade)<SUB>13</SUB>> ]
"30064771118" [label = <(&lt;operator&gt;.fieldAccess,msg.upgrade)<SUB>13</SUB>> ]
"68719476764" [label = <(IDENTIFIER,msg,not msg.upgrade)<SUB>13</SUB>> ]
"55834574858" [label = <(FIELD_IDENTIFIER,upgrade,upgrade)<SUB>13</SUB>> ]
"30064771123" [label = <(&lt;operator&gt;.assert,assert not msg.chunked)<SUB>14</SUB>> ]
"30064771122" [label = <(&lt;operator&gt;.logicalNot,not msg.chunked)<SUB>14</SUB>> ]
"30064771121" [label = <(&lt;operator&gt;.fieldAccess,msg.chunked)<SUB>14</SUB>> ]
"68719476765" [label = <(IDENTIFIER,msg,not msg.chunked)<SUB>14</SUB>> ]
"55834574859" [label = <(FIELD_IDENTIFIER,chunked,chunked)<SUB>14</SUB>> ]
"30064771127" [label = <(&lt;operator&gt;.assert,assert msg.url == URL(&quot;/path&quot;))<SUB>15</SUB>> ]
"30064771126" [label = <(&lt;operator&gt;.equals,msg.url == URL(&quot;/path&quot;))<SUB>15</SUB>> ]
"30064771124" [label = <(&lt;operator&gt;.fieldAccess,msg.url)<SUB>15</SUB>> ]
"68719476766" [label = <(IDENTIFIER,msg,msg.url == URL(&quot;/path&quot;))<SUB>15</SUB>> ]
"55834574860" [label = <(FIELD_IDENTIFIER,url,url)<SUB>15</SUB>> ]
"30064771125" [label = <(URL,URL(&quot;/path&quot;))<SUB>15</SUB>> ]
"68719476767" [label = <(IDENTIFIER,URL,URL(&quot;/path&quot;))<SUB>15</SUB>> ]
"90194313231" [label = <(LITERAL,&quot;/path&quot;,URL(&quot;/path&quot;))<SUB>15</SUB>> ]
"94489280513" [label = <(LOCAL,tmp0: __builtin.str)<SUB>2</SUB>> ]
"94489280514" [label = <(LOCAL,text: __builtin.str.encode)<SUB>2</SUB>> ]
"94489280515" [label = <(LOCAL,tmp1: typing.Any.feed_data.&lt;returnValue&gt;)<SUB>3</SUB>> ]
"94489280516" [label = <(LOCAL,messages: typing.Any.feed_data.&lt;returnValue&gt;.&lt;indexAccess&gt;)<SUB>3</SUB>> ]
"94489280517" [label = <(LOCAL,upgrade: typing.Any.feed_data.&lt;returnValue&gt;.&lt;indexAccess&gt;)<SUB>3</SUB>> ]
"94489280518" [label = <(LOCAL,tail: typing.Any.feed_data.&lt;returnValue&gt;.&lt;indexAccess&gt;)<SUB>3</SUB>> ]
"94489280519" [label = <(LOCAL,msg: ANY)<SUB>4</SUB>> ]
"94489280520" [label = <(LOCAL,CIMultiDict: ANY)<SUB>9</SUB>> ]
"94489280522" [label = <(LOCAL,tmp2: __builtin.str)<SUB>10</SUB>> ]
"94489280523" [label = <(LOCAL,URL: ANY)<SUB>15</SUB>> ]
"133143986178" [label = <(MODIFIER,VIRTUAL)> ]
"115964116992" [label = <(PARAM,parser)<SUB>1</SUB>> ]
"128849018881" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
  "111669149697" -> "133143986178"  [ label = "AST: "] 
  "111669149697" -> "25769803777"  [ label = "AST: "] 
  "111669149697" -> "115964116992"  [ label = "AST: "] 
  "111669149697" -> "128849018881"  [ label = "AST: "] 
  "25769803777" -> "30064771075"  [ label = "AST: "] 
  "25769803777" -> "94489280513"  [ label = "AST: "] 
  "25769803777" -> "25769803779"  [ label = "AST: "] 
  "25769803777" -> "94489280514"  [ label = "AST: "] 
  "25769803777" -> "30064771087"  [ label = "AST: "] 
  "25769803777" -> "94489280515"  [ label = "AST: "] 
  "25769803777" -> "30064771090"  [ label = "AST: "] 
  "25769803777" -> "94489280516"  [ label = "AST: "] 
  "25769803777" -> "30064771093"  [ label = "AST: "] 
  "25769803777" -> "94489280517"  [ label = "AST: "] 
  "25769803777" -> "30064771097"  [ label = "AST: "] 
  "25769803777" -> "94489280518"  [ label = "AST: "] 
  "25769803777" -> "30064771103"  [ label = "AST: "] 
  "25769803777" -> "94489280519"  [ label = "AST: "] 
  "25769803777" -> "30064771111"  [ label = "AST: "] 
  "25769803777" -> "94489280520"  [ label = "AST: "] 
  "25769803777" -> "30064771114"  [ label = "AST: "] 
  "25769803777" -> "94489280522"  [ label = "AST: "] 
  "25769803777" -> "30064771117"  [ label = "AST: "] 
  "25769803777" -> "94489280523"  [ label = "AST: "] 
  "25769803777" -> "30064771120"  [ label = "AST: "] 
  "25769803777" -> "30064771123"  [ label = "AST: "] 
  "25769803777" -> "30064771127"  [ label = "AST: "] 
  "30064771075" -> "68719476740"  [ label = "AST: "] 
  "30064771075" -> "25769803778"  [ label = "AST: "] 
  "25769803778" -> "30064771072"  [ label = "AST: "] 
  "25769803778" -> "30064771074"  [ label = "AST: "] 
  "30064771072" -> "68719476737"  [ label = "AST: "] 
  "30064771072" -> "90194313216"  [ label = "AST: "] 
  "30064771074" -> "30064771073"  [ label = "AST: "] 
  "30064771074" -> "68719476739"  [ label = "AST: "] 
  "30064771073" -> "68719476738"  [ label = "AST: "] 
  "30064771073" -> "55834574848"  [ label = "AST: "] 
  "25769803779" -> "30064771078"  [ label = "AST: "] 
  "25769803779" -> "30064771080"  [ label = "AST: "] 
  "25769803779" -> "30064771082"  [ label = "AST: "] 
  "25769803779" -> "30064771084"  [ label = "AST: "] 
  "30064771078" -> "68719476744"  [ label = "AST: "] 
  "30064771078" -> "30064771077"  [ label = "AST: "] 
  "30064771077" -> "30064771076"  [ label = "AST: "] 
  "30064771077" -> "68719476743"  [ label = "AST: "] 
  "30064771077" -> "68719476741"  [ label = "AST: "] 
  "30064771076" -> "68719476742"  [ label = "AST: "] 
  "30064771076" -> "55834574849"  [ label = "AST: "] 
  "30064771080" -> "68719476745"  [ label = "AST: "] 
  "30064771080" -> "30064771079"  [ label = "AST: "] 
  "30064771079" -> "68719476746"  [ label = "AST: "] 
  "30064771079" -> "90194313217"  [ label = "AST: "] 
  "30064771082" -> "68719476747"  [ label = "AST: "] 
  "30064771082" -> "30064771081"  [ label = "AST: "] 
  "30064771081" -> "68719476748"  [ label = "AST: "] 
  "30064771081" -> "90194313218"  [ label = "AST: "] 
  "30064771084" -> "68719476749"  [ label = "AST: "] 
  "30064771084" -> "30064771083"  [ label = "AST: "] 
  "30064771083" -> "68719476750"  [ label = "AST: "] 
  "30064771083" -> "90194313219"  [ label = "AST: "] 
  "30064771087" -> "68719476752"  [ label = "AST: "] 
  "30064771087" -> "30064771086"  [ label = "AST: "] 
  "30064771086" -> "30064771085"  [ label = "AST: "] 
  "30064771086" -> "90194313221"  [ label = "AST: "] 
  "30064771085" -> "68719476751"  [ label = "AST: "] 
  "30064771085" -> "90194313220"  [ label = "AST: "] 
  "30064771090" -> "30064771089"  [ label = "AST: "] 
  "30064771089" -> "30064771088"  [ label = "AST: "] 
  "30064771089" -> "90194313222"  [ label = "AST: "] 
  "30064771088" -> "68719476753"  [ label = "AST: "] 
  "30064771088" -> "55834574850"  [ label = "AST: "] 
  "30064771093" -> "30064771092"  [ label = "AST: "] 
  "30064771092" -> "30064771091"  [ label = "AST: "] 
  "30064771092" -> "90194313223"  [ label = "AST: "] 
  "30064771091" -> "68719476754"  [ label = "AST: "] 
  "30064771091" -> "55834574851"  [ label = "AST: "] 
  "30064771097" -> "30064771096"  [ label = "AST: "] 
  "30064771096" -> "30064771094"  [ label = "AST: "] 
  "30064771096" -> "30064771095"  [ label = "AST: "] 
  "30064771094" -> "68719476755"  [ label = "AST: "] 
  "30064771094" -> "55834574852"  [ label = "AST: "] 
  "30064771095" -> "90194313224"  [ label = "AST: "] 
  "30064771095" -> "90194313225"  [ label = "AST: "] 
  "30064771103" -> "30064771102"  [ label = "AST: "] 
  "30064771102" -> "30064771098"  [ label = "AST: "] 
  "30064771102" -> "30064771101"  [ label = "AST: "] 
  "30064771098" -> "68719476756"  [ label = "AST: "] 
  "30064771098" -> "55834574853"  [ label = "AST: "] 
  "30064771101" -> "68719476757"  [ label = "AST: "] 
  "30064771101" -> "30064771100"  [ label = "AST: "] 
  "30064771100" -> "30064771099"  [ label = "AST: "] 
  "30064771099" -> "90194313226"  [ label = "AST: "] 
  "30064771099" -> "90194313227"  [ label = "AST: "] 
  "30064771111" -> "30064771110"  [ label = "AST: "] 
  "30064771110" -> "30064771104"  [ label = "AST: "] 
  "30064771110" -> "30064771109"  [ label = "AST: "] 
  "30064771104" -> "68719476758"  [ label = "AST: "] 
  "30064771104" -> "55834574854"  [ label = "AST: "] 
  "30064771109" -> "30064771108"  [ label = "AST: "] 
  "30064771108" -> "90194313228"  [ label = "AST: "] 
  "30064771108" -> "25769803780"  [ label = "AST: "] 
  "25769803780" -> "30064771105"  [ label = "AST: "] 
  "25769803780" -> "30064771107"  [ label = "AST: "] 
  "30064771105" -> "68719476759"  [ label = "AST: "] 
  "30064771105" -> "90194313229"  [ label = "AST: "] 
  "30064771107" -> "30064771106"  [ label = "AST: "] 
  "30064771107" -> "68719476761"  [ label = "AST: "] 
  "30064771106" -> "68719476760"  [ label = "AST: "] 
  "30064771106" -> "55834574855"  [ label = "AST: "] 
  "30064771114" -> "30064771113"  [ label = "AST: "] 
  "30064771113" -> "30064771112"  [ label = "AST: "] 
  "30064771112" -> "68719476762"  [ label = "AST: "] 
  "30064771112" -> "55834574856"  [ label = "AST: "] 
  "30064771117" -> "30064771116"  [ label = "AST: "] 
  "30064771116" -> "30064771115"  [ label = "AST: "] 
  "30064771116" -> "90194313230"  [ label = "AST: "] 
  "30064771115" -> "68719476763"  [ label = "AST: "] 
  "30064771115" -> "55834574857"  [ label = "AST: "] 
  "30064771120" -> "30064771119"  [ label = "AST: "] 
  "30064771119" -> "30064771118"  [ label = "AST: "] 
  "30064771118" -> "68719476764"  [ label = "AST: "] 
  "30064771118" -> "55834574858"  [ label = "AST: "] 
  "30064771123" -> "30064771122"  [ label = "AST: "] 
  "30064771122" -> "30064771121"  [ label = "AST: "] 
  "30064771121" -> "68719476765"  [ label = "AST: "] 
  "30064771121" -> "55834574859"  [ label = "AST: "] 
  "30064771127" -> "30064771126"  [ label = "AST: "] 
  "30064771126" -> "30064771124"  [ label = "AST: "] 
  "30064771126" -> "30064771125"  [ label = "AST: "] 
  "30064771124" -> "68719476766"  [ label = "AST: "] 
  "30064771124" -> "55834574860"  [ label = "AST: "] 
  "30064771125" -> "68719476767"  [ label = "AST: "] 
  "30064771125" -> "90194313231"  [ label = "AST: "] 
  "30064771075" -> "55834574849"  [ label = "CFG: "] 
  "30064771087" -> "55834574850"  [ label = "CFG: "] 
  "30064771090" -> "55834574851"  [ label = "CFG: "] 
  "30064771093" -> "55834574852"  [ label = "CFG: "] 
  "30064771097" -> "55834574853"  [ label = "CFG: "] 
  "30064771103" -> "55834574854"  [ label = "CFG: "] 
  "30064771111" -> "55834574856"  [ label = "CFG: "] 
  "30064771114" -> "55834574857"  [ label = "CFG: "] 
  "30064771117" -> "55834574858"  [ label = "CFG: "] 
  "30064771120" -> "55834574859"  [ label = "CFG: "] 
  "30064771123" -> "55834574860"  [ label = "CFG: "] 
  "30064771127" -> "128849018881"  [ label = "CFG: "] 
  "30064771078" -> "30064771079"  [ label = "CFG: "] 
  "30064771080" -> "30064771081"  [ label = "CFG: "] 
  "30064771082" -> "30064771083"  [ label = "CFG: "] 
  "30064771084" -> "30064771085"  [ label = "CFG: "] 
  "30064771086" -> "30064771087"  [ label = "CFG: "] 
  "30064771089" -> "30064771090"  [ label = "CFG: "] 
  "30064771092" -> "30064771093"  [ label = "CFG: "] 
  "30064771096" -> "30064771097"  [ label = "CFG: "] 
  "30064771102" -> "30064771103"  [ label = "CFG: "] 
  "30064771110" -> "30064771111"  [ label = "CFG: "] 
  "30064771113" -> "30064771114"  [ label = "CFG: "] 
  "30064771116" -> "30064771117"  [ label = "CFG: "] 
  "30064771119" -> "30064771120"  [ label = "CFG: "] 
  "30064771122" -> "30064771123"  [ label = "CFG: "] 
  "30064771126" -> "30064771127"  [ label = "CFG: "] 
  "30064771072" -> "55834574848"  [ label = "CFG: "] 
  "30064771074" -> "30064771075"  [ label = "CFG: "] 
  "30064771077" -> "30064771078"  [ label = "CFG: "] 
  "30064771079" -> "30064771080"  [ label = "CFG: "] 
  "30064771081" -> "30064771082"  [ label = "CFG: "] 
  "30064771083" -> "30064771084"  [ label = "CFG: "] 
  "30064771085" -> "30064771086"  [ label = "CFG: "] 
  "30064771088" -> "30064771089"  [ label = "CFG: "] 
  "30064771091" -> "30064771092"  [ label = "CFG: "] 
  "30064771094" -> "30064771095"  [ label = "CFG: "] 
  "30064771095" -> "30064771096"  [ label = "CFG: "] 
  "30064771098" -> "30064771099"  [ label = "CFG: "] 
  "30064771101" -> "30064771102"  [ label = "CFG: "] 
  "30064771104" -> "30064771105"  [ label = "CFG: "] 
  "30064771109" -> "30064771110"  [ label = "CFG: "] 
  "30064771112" -> "30064771113"  [ label = "CFG: "] 
  "30064771115" -> "30064771116"  [ label = "CFG: "] 
  "30064771118" -> "30064771119"  [ label = "CFG: "] 
  "30064771121" -> "30064771122"  [ label = "CFG: "] 
  "30064771124" -> "30064771125"  [ label = "CFG: "] 
  "30064771125" -> "30064771126"  [ label = "CFG: "] 
  "30064771073" -> "30064771074"  [ label = "CFG: "] 
  "30064771076" -> "30064771077"  [ label = "CFG: "] 
  "55834574850" -> "30064771088"  [ label = "CFG: "] 
  "55834574851" -> "30064771091"  [ label = "CFG: "] 
  "55834574852" -> "30064771094"  [ label = "CFG: "] 
  "55834574853" -> "30064771098"  [ label = "CFG: "] 
  "30064771100" -> "30064771101"  [ label = "CFG: "] 
  "55834574854" -> "30064771104"  [ label = "CFG: "] 
  "30064771108" -> "30064771109"  [ label = "CFG: "] 
  "55834574856" -> "30064771112"  [ label = "CFG: "] 
  "55834574857" -> "30064771115"  [ label = "CFG: "] 
  "55834574858" -> "30064771118"  [ label = "CFG: "] 
  "55834574859" -> "30064771121"  [ label = "CFG: "] 
  "55834574860" -> "30064771124"  [ label = "CFG: "] 
  "55834574848" -> "30064771073"  [ label = "CFG: "] 
  "55834574849" -> "30064771076"  [ label = "CFG: "] 
  "30064771099" -> "30064771100"  [ label = "CFG: "] 
  "30064771105" -> "55834574855"  [ label = "CFG: "] 
  "30064771107" -> "30064771108"  [ label = "CFG: "] 
  "30064771106" -> "30064771107"  [ label = "CFG: "] 
  "55834574855" -> "30064771106"  [ label = "CFG: "] 
  "111669149697" -> "30064771072"  [ label = "CFG: "] 
  "30064771072" -> "128849018881"  [ label = "DDG: tmp0 = &quot;GET /path HTTP/1.1\r\nx-test:тест\r\n\r\n&quot;"] 
  "30064771074" -> "128849018881"  [ label = "DDG: tmp0"] 
  "30064771074" -> "128849018881"  [ label = "DDG: tmp0.encode()"] 
  "30064771075" -> "128849018881"  [ label = "DDG: text = tmp0 = &quot;GET /path HTTP/1.1\r\nx-test:тест\r\n\r\n&quot;
tmp0.encode()"] 
  "30064771078" -> "128849018881"  [ label = "DDG: tmp1"] 
  "30064771077" -> "128849018881"  [ label = "DDG: parser"] 
  "30064771077" -> "128849018881"  [ label = "DDG: text"] 
  "30064771078" -> "128849018881"  [ label = "DDG: parser.feed_data(text)"] 
  "30064771078" -> "128849018881"  [ label = "DDG: tmp1 = parser.feed_data(text)"] 
  "30064771080" -> "128849018881"  [ label = "DDG: messages"] 
  "30064771080" -> "128849018881"  [ label = "DDG: tmp1[0]"] 
  "30064771080" -> "128849018881"  [ label = "DDG: messages = tmp1[0]"] 
  "30064771082" -> "128849018881"  [ label = "DDG: upgrade"] 
  "30064771082" -> "128849018881"  [ label = "DDG: tmp1[1]"] 
  "30064771082" -> "128849018881"  [ label = "DDG: upgrade = tmp1[1]"] 
  "30064771084" -> "128849018881"  [ label = "DDG: tail"] 
  "30064771084" -> "128849018881"  [ label = "DDG: tmp1[2]"] 
  "30064771084" -> "128849018881"  [ label = "DDG: tail = tmp1[2]"] 
  "30064771087" -> "128849018881"  [ label = "DDG: msg"] 
  "30064771087" -> "128849018881"  [ label = "DDG: messages[0][0]"] 
  "30064771087" -> "128849018881"  [ label = "DDG: msg = messages[0][0]"] 
  "30064771089" -> "128849018881"  [ label = "DDG: msg.method"] 
  "30064771090" -> "128849018881"  [ label = "DDG: msg.method == &quot;GET&quot;"] 
  "30064771090" -> "128849018881"  [ label = "DDG: assert msg.method == &quot;GET&quot;"] 
  "30064771092" -> "128849018881"  [ label = "DDG: msg.path"] 
  "30064771093" -> "128849018881"  [ label = "DDG: msg.path == &quot;/path&quot;"] 
  "30064771093" -> "128849018881"  [ label = "DDG: assert msg.path == &quot;/path&quot;"] 
  "30064771096" -> "128849018881"  [ label = "DDG: msg.version"] 
  "30064771096" -> "128849018881"  [ label = "DDG: (1, 1)"] 
  "30064771097" -> "128849018881"  [ label = "DDG: msg.version == (1, 1)"] 
  "30064771097" -> "128849018881"  [ label = "DDG: assert msg.version == (1, 1)"] 
  "30064771102" -> "128849018881"  [ label = "DDG: msg.headers"] 
  "30064771100" -> "128849018881"  [ label = "DDG: (&quot;X-TEST&quot;, &quot;тест&quot;)"] 
  "30064771101" -> "128849018881"  [ label = "DDG: [(&quot;X-TEST&quot;, &quot;тест&quot;)]"] 
  "30064771102" -> "128849018881"  [ label = "DDG: CIMultiDict([(&quot;X-TEST&quot;, &quot;тест&quot;)])"] 
  "30064771103" -> "128849018881"  [ label = "DDG: msg.headers == CIMultiDict([(&quot;X-TEST&quot;, &quot;тест&quot;)])"] 
  "30064771103" -> "128849018881"  [ label = "DDG: assert msg.headers == CIMultiDict([(&quot;X-TEST&quot;, &quot;тест&quot;)])"] 
  "30064771110" -> "128849018881"  [ label = "DDG: msg.raw_headers"] 
  "30064771105" -> "128849018881"  [ label = "DDG: tmp2 = &quot;тест&quot;"] 
  "30064771107" -> "128849018881"  [ label = "DDG: tmp2"] 
  "30064771107" -> "128849018881"  [ label = "DDG: tmp2.encode()"] 
  "30064771109" -> "128849018881"  [ label = "DDG: (b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
tmp2.encode())"] 
  "30064771110" -> "128849018881"  [ label = "DDG: ((b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
tmp2.encode()),)"] 
  "30064771111" -> "128849018881"  [ label = "DDG: msg.raw_headers == ((b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
tmp2.encode()),)"] 
  "30064771111" -> "128849018881"  [ label = "DDG: assert msg.raw_headers == ((b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
tmp2.encode()),)"] 
  "30064771113" -> "128849018881"  [ label = "DDG: msg.should_close"] 
  "30064771114" -> "128849018881"  [ label = "DDG: not msg.should_close"] 
  "30064771114" -> "128849018881"  [ label = "DDG: assert not msg.should_close"] 
  "30064771116" -> "128849018881"  [ label = "DDG: msg.compression"] 
  "30064771117" -> "128849018881"  [ label = "DDG: msg.compression is None"] 
  "30064771117" -> "128849018881"  [ label = "DDG: assert msg.compression is None"] 
  "30064771119" -> "128849018881"  [ label = "DDG: msg.upgrade"] 
  "30064771120" -> "128849018881"  [ label = "DDG: not msg.upgrade"] 
  "30064771120" -> "128849018881"  [ label = "DDG: assert not msg.upgrade"] 
  "30064771122" -> "128849018881"  [ label = "DDG: msg.chunked"] 
  "30064771123" -> "128849018881"  [ label = "DDG: not msg.chunked"] 
  "30064771123" -> "128849018881"  [ label = "DDG: assert not msg.chunked"] 
  "30064771126" -> "128849018881"  [ label = "DDG: msg.url"] 
  "30064771126" -> "128849018881"  [ label = "DDG: URL(&quot;/path&quot;)"] 
  "30064771127" -> "128849018881"  [ label = "DDG: msg.url == URL(&quot;/path&quot;)"] 
  "30064771127" -> "128849018881"  [ label = "DDG: assert msg.url == URL(&quot;/path&quot;)"] 
  "111669149697" -> "115964116992"  [ label = "DDG: "] 
  "30064771074" -> "30064771075"  [ label = "DDG: tmp0.encode()"] 
  "111669149697" -> "30064771075"  [ label = "DDG: "] 
  "111669149697" -> "25769803779"  [ label = "DDG: "] 
  "30064771077" -> "30064771078"  [ label = "DDG: parser"] 
  "30064771077" -> "30064771078"  [ label = "DDG: text"] 
  "30064771078" -> "30064771080"  [ label = "DDG: tmp1"] 
  "30064771078" -> "30064771082"  [ label = "DDG: tmp1"] 
  "30064771078" -> "30064771084"  [ label = "DDG: tmp1"] 
  "30064771089" -> "30064771090"  [ label = "DDG: msg.method"] 
  "30064771089" -> "30064771090"  [ label = "DDG: &quot;GET&quot;"] 
  "30064771092" -> "30064771093"  [ label = "DDG: msg.path"] 
  "30064771092" -> "30064771093"  [ label = "DDG: &quot;/path&quot;"] 
  "30064771096" -> "30064771097"  [ label = "DDG: msg.version"] 
  "30064771096" -> "30064771097"  [ label = "DDG: (1, 1)"] 
  "30064771102" -> "30064771103"  [ label = "DDG: msg.headers"] 
  "30064771102" -> "30064771103"  [ label = "DDG: CIMultiDict([(&quot;X-TEST&quot;, &quot;тест&quot;)])"] 
  "30064771110" -> "30064771111"  [ label = "DDG: msg.raw_headers"] 
  "30064771110" -> "30064771111"  [ label = "DDG: ((b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
tmp2.encode()),)"] 
  "30064771113" -> "30064771114"  [ label = "DDG: msg.should_close"] 
  "30064771116" -> "30064771117"  [ label = "DDG: msg.compression"] 
  "30064771116" -> "30064771117"  [ label = "DDG: None"] 
  "30064771119" -> "30064771120"  [ label = "DDG: msg.upgrade"] 
  "30064771122" -> "30064771123"  [ label = "DDG: msg.chunked"] 
  "30064771126" -> "30064771127"  [ label = "DDG: msg.url"] 
  "30064771126" -> "30064771127"  [ label = "DDG: URL(&quot;/path&quot;)"] 
  "111669149697" -> "30064771072"  [ label = "DDG: "] 
  "30064771087" -> "30064771089"  [ label = "DDG: msg"] 
  "111669149697" -> "30064771089"  [ label = "DDG: "] 
  "30064771087" -> "30064771092"  [ label = "DDG: msg"] 
  "111669149697" -> "30064771092"  [ label = "DDG: "] 
  "30064771087" -> "30064771096"  [ label = "DDG: msg"] 
  "30064771095" -> "30064771096"  [ label = "DDG: 1"] 
  "30064771087" -> "30064771102"  [ label = "DDG: msg"] 
  "30064771101" -> "30064771102"  [ label = "DDG: [(&quot;X-TEST&quot;, &quot;тест&quot;)]"] 
  "30064771087" -> "30064771110"  [ label = "DDG: msg"] 
  "30064771109" -> "30064771110"  [ label = "DDG: (b&quot;x-test&quot;, tmp2 = &quot;тест&quot;
tmp2.encode())"] 
  "30064771087" -> "30064771113"  [ label = "DDG: msg"] 
  "30064771087" -> "30064771116"  [ label = "DDG: msg"] 
  "111669149697" -> "30064771116"  [ label = "DDG: "] 
  "30064771087" -> "30064771119"  [ label = "DDG: msg"] 
  "30064771087" -> "30064771122"  [ label = "DDG: msg"] 
  "30064771087" -> "30064771126"  [ label = "DDG: msg"] 
  "30064771125" -> "30064771126"  [ label = "DDG: &quot;/path&quot;"] 
  "30064771072" -> "30064771074"  [ label = "DDG: tmp0"] 
  "111669149697" -> "30064771074"  [ label = "DDG: "] 
  "115964116992" -> "30064771077"  [ label = "DDG: parser"] 
  "111669149697" -> "30064771077"  [ label = "DDG: "] 
  "30064771075" -> "30064771077"  [ label = "DDG: text"] 
  "111669149697" -> "30064771095"  [ label = "DDG: "] 
  "111669149697" -> "68719476757"  [ label = "DDG: "] 
  "30064771100" -> "30064771101"  [ label = "DDG: (&quot;X-TEST&quot;, &quot;тест&quot;)"] 
  "30064771108" -> "30064771109"  [ label = "DDG: b&quot;x-test&quot;"] 
  "30064771108" -> "30064771109"  [ label = "DDG: tmp2 = &quot;тест&quot;
tmp2.encode()"] 
  "30064771108" -> "30064771109"  [ label = "DDG: "] 
  "111669149697" -> "68719476767"  [ label = "DDG: "] 
  "111669149697" -> "30064771125"  [ label = "DDG: "] 
  "30064771099" -> "30064771100"  [ label = "DDG: &quot;X-TEST&quot;"] 
  "30064771099" -> "30064771100"  [ label = "DDG: &quot;тест&quot;"] 
  "111669149697" -> "30064771108"  [ label = "DDG: "] 
  "30064771107" -> "30064771108"  [ label = "DDG: tmp2.encode()"] 
  "111669149697" -> "30064771099"  [ label = "DDG: "] 
  "111669149697" -> "30064771105"  [ label = "DDG: "] 
  "30064771105" -> "30064771107"  [ label = "DDG: tmp2"] 
  "111669149697" -> "30064771107"  [ label = "DDG: "] 
}
"""
)
