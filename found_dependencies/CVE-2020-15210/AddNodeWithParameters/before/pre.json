[
    {
        "line": 6,
        "fullcodeline": "std::unique_ptr<void, decltype(free)*> builtin_data_deleter(builtin_data,"
    },
    {
        "line": 12,
        "fullcodeline": "state_ = kStateUninvokable;"
    },
    {
        "line": 14,
        "fullcodeline": "TF_LITE_ENSURE_OK(&context_, CheckTensorIndices(\"node inputs\", inputs.data(),"
    },
    {
        "line": 20,
        "fullcodeline": "int new_node_index = nodes_and_registration_.size();"
    },
    {
        "line": 22,
        "fullcodeline": "nodes_and_registration_.resize(nodes_and_registration_.size() + 1);"
    },
    {
        "line": 23,
        "fullcodeline": "auto& node_and_reg = nodes_and_registration_.back();"
    },
    {
        "line": 24,
        "fullcodeline": "TfLiteNode& node = node_and_reg.first;"
    },
    {
        "line": 61,
        "fullcodeline": "execution_plan_.push_back(new_node_index);"
    },
    {
        "line": 8,
        "fullcodeline": "if (state_ == kStateInvokableAndImmutable) {"
    },
    {
        "line": 18,
        "fullcodeline": "CheckTensorIndices(\"node outputs\", outputs.data(), outputs.size()));"
    },
    {
        "line": 33,
        "fullcodeline": "node.inputs = ConvertVectorToTfLiteIntArray(inputs);"
    },
    {
        "line": 34,
        "fullcodeline": "node.outputs = ConvertVectorToTfLiteIntArray(outputs);"
    },
    {
        "line": 35,
        "fullcodeline": "node.intermediates = ConvertVectorToTfLiteIntArray(intermediates);"
    },
    {
        "line": 36,
        "fullcodeline": "node.temporaries = TfLiteIntArrayCreate(0);"
    },
    {
        "line": 44,
        "fullcodeline": "node.builtin_data = builtin_data_deleter.release();"
    },
    {
        "line": 48,
        "fullcodeline": "if (registration->builtin_code == BuiltinOperator_CUSTOM) {"
    },
    {
        "line": 9,
        "fullcodeline": "ReportError(\"AddNodeWithParameters is disallowed when graph is immutable.\");"
    },
    {
        "line": 15,
        "fullcodeline": "inputs.size()));"
    },
    {
        "line": 38,
        "fullcodeline": "node.user_data = OpInit(*registration, init_data, init_data_size);"
    },
    {
        "line": 40,
        "fullcodeline": "node.user_data = OpInit("
    },
    {
        "line": 41,
        "fullcodeline": "*registration, static_cast<const char*>(builtin_data_deleter.get()), 0);"
    }
]