[
    {
        "line": 3,
        "fullcodeline": "TF_LITE_ENSURE(&context_, bytes != nullptr);"
    },
    {
        "line": 4,
        "fullcodeline": "size_t count = 1;"
    },
    {
        "line": 12,
        "fullcodeline": "size_t type_size = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "TF_LITE_ENSURE_OK(&context_, GetSizeOfType(&context_, type, &type_size));"
    },
    {
        "line": 14,
        "fullcodeline": "TF_LITE_ENSURE_MSG("
    },
    {
        "line": 5,
        "fullcodeline": "for (int k = 0; k < dims_size; k++) {"
    },
    {
        "line": 15,
        "fullcodeline": "&context_, MultiplyAndCheckOverflow(type_size, count, bytes) == kTfLiteOk,"
    },
    {
        "line": 6,
        "fullcodeline": "size_t old_count = count;"
    },
    {
        "line": 7,
        "fullcodeline": "TF_LITE_ENSURE_MSG("
    },
    {
        "line": 9,
        "fullcodeline": "MultiplyAndCheckOverflow(old_count, dims[k], &count) == kTfLiteOk,"
    }
]