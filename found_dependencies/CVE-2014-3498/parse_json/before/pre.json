[
    {
        "line": 4,
        "fullcodeline": "orig_data = raw_data"
    },
    {
        "line": 7,
        "fullcodeline": "data = filter_leading_non_json_lines(raw_data)"
    },
    {
        "line": 10,
        "fullcodeline": "return json.loads(data)"
    },
    {
        "line": 14,
        "fullcodeline": "results = {}"
    },
    {
        "line": 21,
        "fullcodeline": "for t in tokens:"
    },
    {
        "line": 16,
        "fullcodeline": "tokens = shlex.split(data)"
    },
    {
        "line": 33,
        "fullcodeline": "if len(results.keys()) == 0:"
    },
    {
        "line": 32,
        "fullcodeline": "results[key] = value"
    },
    {
        "line": 22,
        "fullcodeline": "if \"=\" not in t:"
    },
    {
        "line": 24,
        "fullcodeline": "(key,value) = t.split(\"=\", 1)"
    },
    {
        "line": 34,
        "fullcodeline": "return { \"failed\" : True, \"parsed\" : False, \"msg\" : orig_data }"
    },
    {
        "line": 25,
        "fullcodeline": "if key == 'changed' or 'failed':"
    },
    {
        "line": 31,
        "fullcodeline": "value = int(value)"
    },
    {
        "line": 23,
        "fullcodeline": "raise errors.AnsibleError(\"failed to parse: %s\" % orig_data)"
    },
    {
        "line": 26,
        "fullcodeline": "if value.lower() in [ 'true', '1' ]:"
    },
    {
        "line": 27,
        "fullcodeline": "value = True"
    },
    {
        "line": 28,
        "fullcodeline": "elif value.lower() in [ 'false', '0' ]:"
    },
    {
        "line": 29,
        "fullcodeline": "value = False"
    }
]