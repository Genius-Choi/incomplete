[
    {
        "line": 2,
        "fullcodeline": "Network::ConnectionSocket& socket = cb_->socket();"
    },
    {
        "line": 6,
        "fullcodeline": "if (!proxy_protocol_header_.has_value()) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (proxy_protocol_header_.value().wholeHeaderLength() > max_proxy_protocol_len_) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (proxy_protocol_header_.has_value()) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (proxy_protocol_header_.has_value() &&"
    },
    {
        "line": 51,
        "fullcodeline": "if (proxy_protocol_header_.has_value() && !proxy_protocol_header_.value().local_command_) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (!buffer.drain(proxy_protocol_header_.value().wholeHeaderLength())) {"
    },
    {
        "line": 7,
        "fullcodeline": "const ReadOrParseState read_header_state = readProxyHeader(buffer);"
    },
    {
        "line": 16,
        "fullcodeline": "max_proxy_protocol_len_ = proxy_protocol_header_.value().wholeHeaderLength();"
    },
    {
        "line": 22,
        "fullcodeline": "const ReadOrParseState read_ext_state = readExtensions(buffer);"
    },
    {
        "line": 29,
        "fullcodeline": "!cb_->filterState().hasData<Network::ProxyProtocolFilterState>("
    },
    {
        "line": 43,
        "fullcodeline": "cb_->filterState().setData("
    },
    {
        "line": 57,
        "fullcodeline": "const auto remote_version = proxy_protocol_header_.value().remote_address_->ip()->version();"
    },
    {
        "line": 58,
        "fullcodeline": "const auto local_version = proxy_protocol_header_.value().local_address_->ip()->version();"
    },
    {
        "line": 77,
        "fullcodeline": "socket.connectionInfoProvider().setRemoteAddress("
    },
    {
        "line": 8,
        "fullcodeline": "if (read_header_state != ReadOrParseState::Done) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (read_ext_state != ReadOrParseState::Done) {"
    },
    {
        "line": 45,
        "fullcodeline": "std::make_unique<Network::ProxyProtocolFilterState>(Network::ProxyProtocolData{"
    },
    {
        "line": 59,
        "fullcodeline": "if (remote_version != proxy_protocol_header_.value().protocol_version_ ||"
    },
    {
        "line": 65,
        "fullcodeline": "if (!proxy_protocol_header_.value().remote_address_->ip()->isUnicastAddress() ||"
    },
    {
        "line": 33,
        "fullcodeline": "ENVOY_LOG("
    },
    {
        "line": 60,
        "fullcodeline": "local_version != proxy_protocol_header_.value().protocol_version_) {"
    },
    {
        "line": 61,
        "fullcodeline": "ENVOY_LOG(debug, \"failed to read proxy protocol\");"
    },
    {
        "line": 66,
        "fullcodeline": "!proxy_protocol_header_.value().local_address_->ip()->isUnicastAddress()) {"
    },
    {
        "line": 67,
        "fullcodeline": "ENVOY_LOG(debug, \"failed to read proxy protocol\");"
    },
    {
        "line": 74,
        "fullcodeline": "socket.connectionInfoProvider().restoreLocalAddress("
    },
    {
        "line": 78,
        "fullcodeline": "proxy_protocol_header_.value().remote_address_);"
    },
    {
        "line": 31,
        "fullcodeline": "if (!proxy_protocol_header_.value().local_command_) {"
    },
    {
        "line": 36,
        "fullcodeline": "proxy_protocol_header_.value().wholeHeaderLength(),"
    },
    {
        "line": 37,
        "fullcodeline": "Envoy::Hex::encode(buf, proxy_protocol_header_.value().wholeHeaderLength()),"
    },
    {
        "line": 39,
        "fullcodeline": "Envoy::Hex::encode(buf + proxy_protocol_header_.value().headerLengthWithoutExtension(),"
    },
    {
        "line": 73,
        "fullcodeline": "*socket.connectionInfoProvider().localAddress()) {"
    },
    {
        "line": 38,
        "fullcodeline": "proxy_protocol_header_.value().extensions_length_,"
    },
    {
        "line": 72,
        "fullcodeline": "if (*proxy_protocol_header_.value().local_address_ !="
    },
    {
        "line": 75,
        "fullcodeline": "proxy_protocol_header_.value().local_address_);"
    },
    {
        "line": 32,
        "fullcodeline": "auto buf = reinterpret_cast<const uint8_t*>(buffer.rawSlice().mem_);"
    },
    {
        "line": 40,
        "fullcodeline": "proxy_protocol_header_.value().extensions_length_));"
    },
    {
        "line": 46,
        "fullcodeline": "proxy_protocol_header_.value().remote_address_,"
    },
    {
        "line": 47,
        "fullcodeline": "proxy_protocol_header_.value().local_address_, parsed_tlvs_}),"
    }
]