[
    {
        "line": 2,
        "fullcodeline": "extra_vars: dict[str, Any] = {}"
    },
    {
        "line": 17,
        "fullcodeline": "extra_vars['query_error'] = False"
    },
    {
        "line": 18,
        "fullcodeline": "page = h.get_page_number(request.args)"
    },
    {
        "line": 20,
        "fullcodeline": "limit = config.get(u'ckan.datasets_per_page')"
    },
    {
        "line": 23,
        "fullcodeline": "params_nopage = [(k, v) for k, v in request.args.items(multi=True)"
    },
    {
        "line": 26,
        "fullcodeline": "extra_vars[u'remove_field'] = partial(remove_field, package_type)"
    },
    {
        "line": 28,
        "fullcodeline": "sort_by = request.args.get(u'sort', None)"
    },
    {
        "line": 29,
        "fullcodeline": "params_nosort = [(k, v) for k, v in params_nopage if k != u'sort']"
    },
    {
        "line": 31,
        "fullcodeline": "extra_vars[u'sort_by'] = partial(_sort_by, params_nosort, package_type)"
    },
    {
        "line": 37,
        "fullcodeline": "extra_vars[u'sort_by_fields'] = sort_by_fields"
    },
    {
        "line": 39,
        "fullcodeline": "pager_url = partial(_pager_url, params_nopage, package_type)"
    },
    {
        "line": 41,
        "fullcodeline": "details = _get_search_details()"
    },
    {
        "line": 42,
        "fullcodeline": "extra_vars[u'fields'] = details[u'fields']"
    },
    {
        "line": 43,
        "fullcodeline": "extra_vars[u'fields_grouped'] = details[u'fields_grouped']"
    },
    {
        "line": 44,
        "fullcodeline": "fq = details[u'fq']"
    },
    {
        "line": 45,
        "fullcodeline": "search_extras = details[u'search_extras']"
    },
    {
        "line": 47,
        "fullcodeline": "context = cast(Context, {"
    },
    {
        "line": 58,
        "fullcodeline": "search_all_type = config.get(u'ckan.search.show_all_types')"
    },
    {
        "line": 59,
        "fullcodeline": "search_all = False"
    },
    {
        "line": 75,
        "fullcodeline": "facets: dict[str, str] = OrderedDict()"
    },
    {
        "line": 77,
        "fullcodeline": "org_label = h.humanize_entity_type("
    },
    {
        "line": 82,
        "fullcodeline": "group_label = h.humanize_entity_type("
    },
    {
        "line": 87,
        "fullcodeline": "default_facet_titles = {"
    },
    {
        "line": 105,
        "fullcodeline": "extra_vars[u'facet_titles'] = facets"
    },
    {
        "line": 106,
        "fullcodeline": "data_dict: dict[str, Any] = {"
    },
    {
        "line": 151,
        "fullcodeline": "g.search_facets_limits = {}"
    },
    {
        "line": 152,
        "fullcodeline": "default_limit: int = config.get(u'search.facets.default')"
    },
    {
        "line": 170,
        "fullcodeline": "_setup_template_variables(context, {}, package_type=package_type)"
    },
    {
        "line": 172,
        "fullcodeline": "extra_vars[u'dataset_type'] = package_type"
    },
    {
        "line": 15,
        "fullcodeline": "extra_vars[u'q'] = q = request.args.get(u'q', u'')"
    },
    {
        "line": 33,
        "fullcodeline": "if not sort_by:"
    },
    {
        "line": 71,
        "fullcodeline": "if not search_all or package_type != search_all_type:"
    },
    {
        "line": 95,
        "fullcodeline": "for facet in h.facets():"
    },
    {
        "line": 102,
        "fullcodeline": "for plugin in plugins.PluginImplementations(plugins.IFacets):"
    },
    {
        "line": 153,
        "fullcodeline": "for facet in cast(Iterable[str], extra_vars[u'search_facets'].keys()):"
    },
    {
        "line": 175,
        "fullcodeline": "for key, value in extra_vars.items():"
    },
    {
        "line": 178,
        "fullcodeline": "return base.render("
    },
    {
        "line": 5,
        "fullcodeline": "context = cast(Context, {"
    },
    {
        "line": 10,
        "fullcodeline": "check_access(u'site_read', context)"
    },
    {
        "line": 34,
        "fullcodeline": "sort_by_fields = []"
    },
    {
        "line": 36,
        "fullcodeline": "sort_by_fields = [field.split()[0] for field in sort_by.split(u',')]"
    },
    {
        "line": 65,
        "fullcodeline": "search_all = asbool(search_all_type)"
    },
    {
        "line": 66,
        "fullcodeline": "search_all_type = u'dataset'"
    },
    {
        "line": 73,
        "fullcodeline": "fq += u' +dataset_type:{type}'.format(type=package_type)"
    },
    {
        "line": 80,
        "fullcodeline": "u'facet label') or _(u'Organizations')"
    },
    {
        "line": 85,
        "fullcodeline": "u'facet label') or _(u'Groups')"
    },
    {
        "line": 118,
        "fullcodeline": "query = get_action(u'package_search')(context, data_dict)"
    },
    {
        "line": 120,
        "fullcodeline": "extra_vars[u'sort_by_selected'] = query[u'sort']"
    },
    {
        "line": 122,
        "fullcodeline": "extra_vars[u'page'] = Page("
    },
    {
        "line": 129,
        "fullcodeline": "extra_vars[u'search_facets'] = query[u'search_facets']"
    },
    {
        "line": 130,
        "fullcodeline": "extra_vars[u'page'].items = query[u'results']"
    },
    {
        "line": 179,
        "fullcodeline": "_get_pkg_template(u'search_template', package_type), extra_vars"
    },
    {
        "line": 79,
        "fullcodeline": "h.default_group_type(u'organization'),"
    },
    {
        "line": 84,
        "fullcodeline": "h.default_group_type(u'group'),"
    },
    {
        "line": 90,
        "fullcodeline": "u'tags': _(u'Tags'),"
    },
    {
        "line": 91,
        "fullcodeline": "u'res_format': _(u'Formats'),"
    },
    {
        "line": 92,
        "fullcodeline": "u'license_id': _(u'Licenses'),"
    },
    {
        "line": 103,
        "fullcodeline": "facets = plugin.dataset_facets(facets, package_type)"
    },
    {
        "line": 108,
        "fullcodeline": "u'fq': fq.strip(),"
    },
    {
        "line": 109,
        "fullcodeline": "u'facet.field': list(facets.keys()),"
    },
    {
        "line": 111,
        "fullcodeline": "u'start': (page - 1) * limit,"
    },
    {
        "line": 114,
        "fullcodeline": "u'include_private': config.get("
    },
    {
        "line": 168,
        "fullcodeline": "g.search_facets_limits[facet] = limit"
    },
    {
        "line": 176,
        "fullcodeline": "setattr(g, key, value)"
    },
    {
        "line": 12,
        "fullcodeline": "base.abort(403, _(u'Not authorized to see this page'))"
    },
    {
        "line": 69,
        "fullcodeline": "search_all = True"
    },
    {
        "line": 96,
        "fullcodeline": "if facet in default_facet_titles:"
    },
    {
        "line": 135,
        "fullcodeline": "log.info(u'Dataset search query rejected: %r', se.args)"
    },
    {
        "line": 136,
        "fullcodeline": "base.abort("
    },
    {
        "line": 145,
        "fullcodeline": "log.error(u'Dataset search error: %r', se.args)"
    },
    {
        "line": 146,
        "fullcodeline": "extra_vars[u'query_error'] = True"
    },
    {
        "line": 147,
        "fullcodeline": "extra_vars[u'search_facets'] = {}"
    },
    {
        "line": 148,
        "fullcodeline": "extra_vars[u'page'] = Page(collection=[])"
    },
    {
        "line": 97,
        "fullcodeline": "facets[facet] = default_facet_titles[facet]"
    },
    {
        "line": 99,
        "fullcodeline": "facets[facet] = facet"
    },
    {
        "line": 155,
        "fullcodeline": "limit = int("
    },
    {
        "line": 24,
        "fullcodeline": "if k != u'page']"
    },
    {
        "line": 138,
        "fullcodeline": "_(u'Invalid search query: {error_message}')"
    },
    {
        "line": 139,
        "fullcodeline": ".format(error_message=str(se))"
    },
    {
        "line": 162,
        "fullcodeline": "base.abort("
    },
    {
        "line": 156,
        "fullcodeline": "request.args.get("
    },
    {
        "line": 157,
        "fullcodeline": "u'_%s_limit' % facet,"
    },
    {
        "line": 164,
        "fullcodeline": "_(u'Parameter u\"{parameter_name}\" is not '"
    },
    {
        "line": 165,
        "fullcodeline": "u'an integer').format(parameter_name=u'_%s_limit' % facet)"
    }
]