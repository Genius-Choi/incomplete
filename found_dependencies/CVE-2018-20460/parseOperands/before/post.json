[
    {
        "line": 2,
        "fullcodeline": "char *t = strdup (str);"
    },
    {
        "line": 3,
        "fullcodeline": "int operand = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "char *token = t;"
    },
    {
        "line": 6,
        "fullcodeline": "int imm_count = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int mem_opt = 0;"
    },
    {
        "line": 132,
        "fullcodeline": "free (t);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!token) {"
    },
    {
        "line": 13,
        "fullcodeline": "char *next = strchr (token, ',');"
    },
    {
        "line": 20,
        "fullcodeline": "op->operands[operand].type = ARM_NOTYPE;"
    },
    {
        "line": 21,
        "fullcodeline": "op->operands[operand].reg_type = ARM_UNDEFINED;"
    },
    {
        "line": 22,
        "fullcodeline": "op->operands[operand].shift = ARM_NO_SHIFT;"
    },
    {
        "line": 124,
        "fullcodeline": "token = next;"
    },
    {
        "line": 126,
        "fullcodeline": "operand ++;"
    },
    {
        "line": 17,
        "fullcodeline": "while (token[0] == ' ') {"
    },
    {
        "line": 24,
        "fullcodeline": "while (token[0] == ' ' || token[0] == '[' || token[0] == ']') {"
    },
    {
        "line": 28,
        "fullcodeline": "if (!strncmp (token, \"lsl\", 3)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (op->operands[operand].shift != ARM_NO_SHIFT) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (operand > MAX_OPERANDS) {"
    },
    {
        "line": 15,
        "fullcodeline": "*next++ = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "token++;"
    },
    {
        "line": 25,
        "fullcodeline": "token ++;"
    },
    {
        "line": 29,
        "fullcodeline": "op->operands[operand].shift = ARM_LSL;"
    },
    {
        "line": 36,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 37,
        "fullcodeline": "op->operands[operand].shift_amount = r_num_math (NULL, token + 4);"
    },
    {
        "line": 41,
        "fullcodeline": "operand ++;"
    },
    {
        "line": 42,
        "fullcodeline": "token = next;"
    },
    {
        "line": 48,
        "fullcodeline": "x = strchr (token, ',');"
    },
    {
        "line": 52,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 53,
        "fullcodeline": "op->operands[operand].type = ARM_GPR;"
    },
    {
        "line": 54,
        "fullcodeline": "op->operands[operand].reg_type = ARM_REG64;"
    },
    {
        "line": 55,
        "fullcodeline": "op->operands[operand].reg = r_num_math (NULL, token + 1);"
    },
    {
        "line": 61,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 62,
        "fullcodeline": "op->operands[operand].type = ARM_GPR;"
    },
    {
        "line": 63,
        "fullcodeline": "op->operands[operand].reg_type = ARM_REG32;"
    },
    {
        "line": 64,
        "fullcodeline": "op->operands[operand].reg = r_num_math (NULL, token + 1);"
    },
    {
        "line": 70,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 71,
        "fullcodeline": "op->operands[operand].type = ARM_FP;"
    },
    {
        "line": 72,
        "fullcodeline": "op->operands[operand].reg = r_num_math (NULL, token + 1);"
    },
    {
        "line": 90,
        "fullcodeline": "mem_opt = get_mem_option (token);"
    },
    {
        "line": 107,
        "fullcodeline": "mem_opt = get_mem_option (token);"
    },
    {
        "line": 115,
        "fullcodeline": "op->operands[operand].sign = -1;"
    },
    {
        "line": 118,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 119,
        "fullcodeline": "op->operands[operand].type = ARM_CONSTANT;"
    },
    {
        "line": 120,
        "fullcodeline": "op->operands[operand].immediate = r_num_math (NULL, token);"
    },
    {
        "line": 121,
        "fullcodeline": "imm_count++;"
    },
    {
        "line": 128,
        "fullcodeline": "free (t);"
    },
    {
        "line": 38,
        "fullcodeline": "if (op->operands[operand].shift_amount > 63) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (op->operands[operand].reg > 31) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (op->operands[operand].reg > 31) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (token[1] == 'P' || token [1] == 'p') {"
    },
    {
        "line": 91,
        "fullcodeline": "if (mem_opt != -1) {"
    },
    {
        "line": 108,
        "fullcodeline": "if (mem_opt != -1) {"
    },
    {
        "line": 30,
        "fullcodeline": "} else if (!strncmp (token, \"lsr\", 3)) {"
    },
    {
        "line": 50,
        "fullcodeline": "x[0] = '\\0';"
    },
    {
        "line": 84,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 85,
        "fullcodeline": "op->operands[operand].type = ARM_GPR;"
    },
    {
        "line": 86,
        "fullcodeline": "op->operands[operand].reg_type = ARM_SP | ARM_REG64;"
    },
    {
        "line": 87,
        "fullcodeline": "op->operands[operand].reg = 31;"
    },
    {
        "line": 92,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 93,
        "fullcodeline": "op->operands[operand].type = ARM_MEM_OPT;"
    },
    {
        "line": 94,
        "fullcodeline": "op->operands[operand].mem_option = mem_opt;"
    },
    {
        "line": 109,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 110,
        "fullcodeline": "op->operands[operand].type = ARM_MEM_OPT;"
    },
    {
        "line": 111,
        "fullcodeline": "op->operands[operand].mem_option = mem_opt;"
    },
    {
        "line": 31,
        "fullcodeline": "op->operands[operand].shift = ARM_LSR;"
    },
    {
        "line": 78,
        "fullcodeline": "for (i = 0; msr_const[i].name; i++) {"
    },
    {
        "line": 32,
        "fullcodeline": "} else if (!strncmp (token, \"asr\", 3)) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (!r_str_ncasecmp (token, msr_const[i].name, strlen (msr_const[i].name))) {"
    },
    {
        "line": 33,
        "fullcodeline": "op->operands[operand].shift = ARM_ASR;"
    }
]