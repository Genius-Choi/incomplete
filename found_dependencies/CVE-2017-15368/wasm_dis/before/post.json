[
    {
        "line": 2,
        "fullcodeline": "op->len = 1;"
    },
    {
        "line": 3,
        "fullcodeline": "op->op = buf[0];"
    },
    {
        "line": 328,
        "fullcodeline": "op->len = 1;"
    },
    {
        "line": 329,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"invalid\");"
    },
    {
        "line": 4,
        "fullcodeline": "if (op->op > 0xbf) return 1;"
    },
    {
        "line": 139,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s\", opdef->txt);"
    },
    {
        "line": 146,
        "fullcodeline": "st32 val = 0;"
    },
    {
        "line": 147,
        "fullcodeline": "size_t n = read_i32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 169,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 176,
        "fullcodeline": "ut32 val = 0;"
    },
    {
        "line": 177,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 179,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s %d\", opdef->txt, val);"
    },
    {
        "line": 180,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 185,
        "fullcodeline": "ut32 count = 0, *table = NULL, def = 0;"
    },
    {
        "line": 186,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &count);"
    },
    {
        "line": 189,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 190,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 196,
        "fullcodeline": "n = read_u32_leb128 (buf + op->len, buf + buf_len, &def);"
    },
    {
        "line": 198,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 199,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s %d \", opdef->txt, count);"
    },
    {
        "line": 203,
        "fullcodeline": "snprintf (op->txt + strlen (op->txt), R_ASM_BUFSIZE, \"%d\", def);"
    },
    {
        "line": 204,
        "fullcodeline": "free (table);"
    },
    {
        "line": 207,
        "fullcodeline": "free (table);"
    },
    {
        "line": 213,
        "fullcodeline": "ut32 val = 0, reserved = 0;"
    },
    {
        "line": 214,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 216,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 217,
        "fullcodeline": "n = read_u32_leb128 (buf + op->len, buf + buf_len, &reserved);"
    },
    {
        "line": 219,
        "fullcodeline": "reserved &= 0x1;"
    },
    {
        "line": 220,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s %d %d\", opdef->txt, val, reserved);"
    },
    {
        "line": 221,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 230,
        "fullcodeline": "ut32 val = 0;"
    },
    {
        "line": 231,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 233,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s %d\", opdef->txt, val);"
    },
    {
        "line": 234,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 261,
        "fullcodeline": "ut32 flag = 0, offset = 0;"
    },
    {
        "line": 262,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &flag);"
    },
    {
        "line": 264,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 265,
        "fullcodeline": "n = read_u32_leb128 (buf + op->len, buf + buf_len, &offset);"
    },
    {
        "line": 267,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s %d %d\", opdef->txt, flag, offset);"
    },
    {
        "line": 268,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 274,
        "fullcodeline": "ut32 reserved = 0;"
    },
    {
        "line": 275,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &reserved);"
    },
    {
        "line": 277,
        "fullcodeline": "reserved &= 0x1;"
    },
    {
        "line": 278,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s %d\", opdef->txt, reserved);"
    },
    {
        "line": 279,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 285,
        "fullcodeline": "st32 val = 0;"
    },
    {
        "line": 286,
        "fullcodeline": "size_t n = read_i32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 289,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 294,
        "fullcodeline": "st64 val = 0;"
    },
    {
        "line": 295,
        "fullcodeline": "size_t n = read_i64_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 298,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 303,
        "fullcodeline": "ut32 val = 0;"
    },
    {
        "line": 304,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 306,
        "fullcodeline": "long double d =  (long double)val;"
    },
    {
        "line": 308,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 313,
        "fullcodeline": "ut64 val = 0;"
    },
    {
        "line": 314,
        "fullcodeline": "size_t n = read_u64_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 316,
        "fullcodeline": "long double d =  (long double)val;"
    },
    {
        "line": 318,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 148,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 149,
        "fullcodeline": "switch (0x80 - val) {"
    },
    {
        "line": 178,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 187,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 188,
        "fullcodeline": "if (!(table = calloc (count, sizeof (ut32)))) goto err;"
    },
    {
        "line": 191,
        "fullcodeline": "for (i = 0; i < count; i++) {"
    },
    {
        "line": 197,
        "fullcodeline": "if (!(n > 0 && n + op->len < buf_len)) goto beach;"
    },
    {
        "line": 200,
        "fullcodeline": "for (i = 0; i < count && strlen (op->txt) < R_ASM_BUFSIZE; i++) {"
    },
    {
        "line": 215,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 218,
        "fullcodeline": "if (!(n == 1 && op->len + n <= buf_len)) goto err;"
    },
    {
        "line": 232,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 263,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 266,
        "fullcodeline": "if (!(n > 0 && op->len + n <= buf_len)) goto err;"
    },
    {
        "line": 276,
        "fullcodeline": "if (!(n == 1 && n < buf_len)) goto err;"
    },
    {
        "line": 287,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 296,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 305,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 315,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 151,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s\", opdef->txt);"
    },
    {
        "line": 154,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s (result i32)\", opdef->txt);"
    },
    {
        "line": 157,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s (result i64)\", opdef->txt);"
    },
    {
        "line": 160,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s (result f32)\", opdef->txt);"
    },
    {
        "line": 163,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s (result f64)\", opdef->txt);"
    },
    {
        "line": 166,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s (result ?)\", opdef->txt);"
    },
    {
        "line": 192,
        "fullcodeline": "n = read_u32_leb128 (buf + op->len, buf + buf_len, &table[i]);"
    },
    {
        "line": 194,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 201,
        "fullcodeline": "snprintf (op->txt + strlen (op->txt), R_ASM_BUFSIZE, \"%d \", table[i]);"
    },
    {
        "line": 193,
        "fullcodeline": "if (!(op->len + n <= buf_len)) goto beach;"
    }
]