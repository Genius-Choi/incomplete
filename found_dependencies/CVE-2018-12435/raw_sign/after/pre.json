[
    {
        "line": 4,
        "fullcodeline": "const BigInt& q = m_group.get_q();"
    },
    {
        "line": 6,
        "fullcodeline": "BigInt m(msg, msg_len, q.bits());"
    },
    {
        "line": 15,
        "fullcodeline": "const BigInt k = BigInt::random_integer(rng, 1, q);"
    },
    {
        "line": 18,
        "fullcodeline": "const BigInt k_inv = inverse_mod(k, q);"
    },
    {
        "line": 20,
        "fullcodeline": "const BigInt r = m_mod_q.reduce(m_group.power_g_p(k));"
    },
    {
        "line": 25,
        "fullcodeline": "m_b = m_mod_q.square(m_b);"
    },
    {
        "line": 26,
        "fullcodeline": "m_b_inv = m_mod_q.square(m_b_inv);"
    },
    {
        "line": 28,
        "fullcodeline": "m = m_mod_q.multiply(m_b, m);"
    },
    {
        "line": 29,
        "fullcodeline": "const BigInt xr = m_mod_q.multiply(m_mod_q.multiply(m_x, m_b), r);"
    },
    {
        "line": 31,
        "fullcodeline": "const BigInt s = m_mod_q.multiply(m_b_inv, m_mod_q.multiply(k_inv, xr + m));"
    },
    {
        "line": 8,
        "fullcodeline": "while(m >= q)"
    },
    {
        "line": 9,
        "fullcodeline": "m -= q;"
    },
    {
        "line": 34,
        "fullcodeline": "if(r.is_zero() || s.is_zero())"
    },
    {
        "line": 37,
        "fullcodeline": "return BigInt::encode_fixed_length_int_pair(r, s, q.bytes());"
    },
    {
        "line": 35,
        "fullcodeline": "throw Internal_Error(\"Computed zero r/s during DSA signature\");"
    }
]