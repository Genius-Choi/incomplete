[
    {
        "line": 4,
        "fullcodeline": "const BigInt& q = m_group.get_q();"
    },
    {
        "line": 6,
        "fullcodeline": "BigInt i(msg, msg_len, q.bits());"
    },
    {
        "line": 15,
        "fullcodeline": "const BigInt k = BigInt::random_integer(rng, 1, q);"
    },
    {
        "line": 18,
        "fullcodeline": "BigInt s = inverse_mod(k, q);"
    },
    {
        "line": 19,
        "fullcodeline": "const BigInt r = m_mod_q.reduce(m_group.power_g_p(k));"
    },
    {
        "line": 21,
        "fullcodeline": "s = m_mod_q.multiply(s, mul_add(m_x, r, i));"
    },
    {
        "line": 8,
        "fullcodeline": "while(i >= q)"
    },
    {
        "line": 9,
        "fullcodeline": "i -= q;"
    },
    {
        "line": 24,
        "fullcodeline": "if(r.is_zero() || s.is_zero())"
    },
    {
        "line": 27,
        "fullcodeline": "return BigInt::encode_fixed_length_int_pair(r, s, q.bytes());"
    },
    {
        "line": 25,
        "fullcodeline": "throw Internal_Error(\"Computed zero r/s during DSA signature\");"
    }
]