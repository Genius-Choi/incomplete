[
    {
        "line": 4,
        "fullcodeline": "const BigInt& q = m_group.get_q();"
    },
    {
        "line": 5,
        "fullcodeline": "const size_t q_bytes = q.bytes();"
    },
    {
        "line": 10,
        "fullcodeline": "BigInt r(sig, q_bytes);"
    },
    {
        "line": 11,
        "fullcodeline": "BigInt s(sig + q_bytes, q_bytes);"
    },
    {
        "line": 12,
        "fullcodeline": "BigInt i(msg, msg_len, q.bits());"
    },
    {
        "line": 17,
        "fullcodeline": "s = inverse_mod(s, q);"
    },
    {
        "line": 19,
        "fullcodeline": "const BigInt sr = m_mod_q.multiply(s, r);"
    },
    {
        "line": 20,
        "fullcodeline": "const BigInt si = m_mod_q.multiply(s, i);"
    },
    {
        "line": 22,
        "fullcodeline": "s = m_group.multi_exponentiate(si, m_y, sr);"
    },
    {
        "line": 7,
        "fullcodeline": "if(sig_len != 2*q_bytes || msg_len > q_bytes)"
    },
    {
        "line": 14,
        "fullcodeline": "if(r <= 0 || r >= q || s <= 0 || s >= q)"
    },
    {
        "line": 24,
        "fullcodeline": "return (m_mod_q.reduce(s) == r);"
    }
]