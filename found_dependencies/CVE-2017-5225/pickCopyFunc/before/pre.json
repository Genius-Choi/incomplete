[
    {
        "line": 7,
        "fullcodeline": "(void) TIFFGetField(in, TIFFTAG_PLANARCONFIG, &shortv);"
    },
    {
        "line": 14,
        "fullcodeline": "TIFFGetField(in, TIFFTAG_IMAGEWIDTH, &w);"
    },
    {
        "line": 15,
        "fullcodeline": "TIFFGetField(in, TIFFTAG_IMAGELENGTH, &l);"
    },
    {
        "line": 8,
        "fullcodeline": "if (shortv != config && bitspersample != 8 && samplesperpixel > 1) {"
    },
    {
        "line": 43,
        "fullcodeline": "switch(pack(shortv,config,TIFFIsTiled(in),TIFFIsTiled(out),bychunk)) {"
    },
    {
        "line": 102,
        "fullcodeline": "TIFFFileName(in));"
    },
    {
        "line": 9,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 16,
        "fullcodeline": "if (!(TIFFIsTiled(out) || TIFFIsTiled(in))) {"
    },
    {
        "line": 17,
        "fullcodeline": "uint32 irps = (uint32) -1L;"
    },
    {
        "line": 18,
        "fullcodeline": "TIFFGetField(in, TIFFTAG_ROWSPERSTRIP, &irps);"
    },
    {
        "line": 20,
        "fullcodeline": "bychunk = !bias && (rowsperstrip == irps);"
    },
    {
        "line": 45,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_CONTIG,   F,T,F):"
    },
    {
        "line": 46,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_CONTIG,   F,T,T):"
    },
    {
        "line": 48,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_SEPARATE, F,T,F):"
    },
    {
        "line": 49,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_SEPARATE, F,T,T):"
    },
    {
        "line": 51,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_CONTIG,   F,T,F):"
    },
    {
        "line": 52,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_CONTIG,   F,T,T):"
    },
    {
        "line": 54,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_SEPARATE, F,T,F):"
    },
    {
        "line": 55,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_SEPARATE, F,T,T):"
    },
    {
        "line": 58,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_CONTIG,   T,T,F):"
    },
    {
        "line": 59,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_CONTIG,   T,T,T):"
    },
    {
        "line": 61,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_SEPARATE, T,T,F):"
    },
    {
        "line": 62,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_SEPARATE, T,T,T):"
    },
    {
        "line": 64,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_CONTIG,   T,T,F):"
    },
    {
        "line": 65,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_CONTIG,   T,T,T):"
    },
    {
        "line": 67,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_SEPARATE, T,T,F):"
    },
    {
        "line": 68,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_SEPARATE, T,T,T):"
    },
    {
        "line": 71,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_CONTIG,   T,F,F):"
    },
    {
        "line": 72,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_CONTIG,   T,F,T):"
    },
    {
        "line": 74,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_SEPARATE, T,F,F):"
    },
    {
        "line": 75,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_SEPARATE, T,F,T):"
    },
    {
        "line": 77,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_CONTIG,   T,F,F):"
    },
    {
        "line": 78,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_CONTIG,   T,F,T):"
    },
    {
        "line": 80,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_SEPARATE, T,F,F):"
    },
    {
        "line": 81,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_SEPARATE, T,F,T):"
    },
    {
        "line": 84,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_CONTIG,   F,F,F):"
    },
    {
        "line": 86,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG,   PLANARCONFIG_CONTIG,   F,F,T):"
    },
    {
        "line": 88,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG, PLANARCONFIG_SEPARATE,   F,F,F):"
    },
    {
        "line": 89,
        "fullcodeline": "case pack(PLANARCONFIG_CONTIG, PLANARCONFIG_SEPARATE,   F,F,T):"
    },
    {
        "line": 91,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_CONTIG,   F,F,F):"
    },
    {
        "line": 92,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_CONTIG,   F,F,T):"
    },
    {
        "line": 94,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_SEPARATE, F,F,F):"
    },
    {
        "line": 95,
        "fullcodeline": "case pack(PLANARCONFIG_SEPARATE, PLANARCONFIG_SEPARATE, F,F,T):"
    },
    {
        "line": 11,
        "fullcodeline": "TIFFFileName(in));"
    },
    {
        "line": 85,
        "fullcodeline": "return bias ? cpBiasedContig2Contig : cpContig2ContigByRow;"
    },
    {
        "line": 28,
        "fullcodeline": "if (TIFFIsTiled(out)) {"
    },
    {
        "line": 33,
        "fullcodeline": "bychunk = (tw == tilewidth && tl == tilelength);"
    },
    {
        "line": 25,
        "fullcodeline": "TIFFFileName(in));"
    },
    {
        "line": 35,
        "fullcodeline": "TIFFGetField(in, TIFFTAG_TILEWIDTH, &tw);"
    },
    {
        "line": 36,
        "fullcodeline": "TIFFGetField(in, TIFFTAG_TILELENGTH, &tl);"
    },
    {
        "line": 37,
        "fullcodeline": "bychunk = (tw == w && tl == rowsperstrip);"
    },
    {
        "line": 29,
        "fullcodeline": "if (!TIFFGetField(in, TIFFTAG_TILEWIDTH, &tw))"
    },
    {
        "line": 30,
        "fullcodeline": "tw = w;"
    },
    {
        "line": 31,
        "fullcodeline": "if (!TIFFGetField(in, TIFFTAG_TILELENGTH, &tl))"
    },
    {
        "line": 32,
        "fullcodeline": "tl = l;"
    }
]