[
    {
        "line": 2,
        "fullcodeline": "experiment_id = mlflow_client.create_experiment(\"log_batch validation\")"
    },
    {
        "line": 3,
        "fullcodeline": "created_run = mlflow_client.create_run(experiment_id)"
    },
    {
        "line": 6,
        "fullcodeline": "def assert_bad_request(payload, expected_error_message):"
    },
    {
        "line": 25,
        "fullcodeline": "assert_bad_request("
    },
    {
        "line": 31,
        "fullcodeline": "response = _send_rest_tracking_post_request("
    },
    {
        "line": 37,
        "fullcodeline": "assert response.status_code == 200"
    },
    {
        "line": 15,
        "fullcodeline": "for request_parameter in [\"metrics\", \"params\", \"tags\"]:"
    },
    {
        "line": 26,
        "fullcodeline": "{\"run_id\": run_id, \"metrics\": [{\"key\": \"mae\", \"value\": 2.5}]},"
    },
    {
        "line": 16,
        "fullcodeline": "assert_bad_request("
    },
    {
        "line": 34,
        "fullcodeline": "{\"run_id\": run_id, \"metrics\": [{\"key\": \"mae\", \"value\": 2.5, \"timestamp\": 123456789}]},"
    },
    {
        "line": 21,
        "fullcodeline": "f\"Invalid value foo for parameter '{request_parameter}' supplied\","
    },
    {
        "line": 17,
        "fullcodeline": "{"
    }
]