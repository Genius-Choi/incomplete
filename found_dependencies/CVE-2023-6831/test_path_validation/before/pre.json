[
    {
        "line": 2,
        "fullcodeline": "experiment_id = mlflow_client.create_experiment(\"tags validation\")"
    },
    {
        "line": 3,
        "fullcodeline": "created_run = mlflow_client.create_run(experiment_id)"
    },
    {
        "line": 4,
        "fullcodeline": "run_id = created_run.info.run_id"
    },
    {
        "line": 5,
        "fullcodeline": "invalid_path = \"../path\""
    },
    {
        "line": 7,
        "fullcodeline": "def assert_response(resp):"
    },
    {
        "line": 14,
        "fullcodeline": "response = requests.get("
    },
    {
        "line": 20,
        "fullcodeline": "response = requests.get("
    },
    {
        "line": 26,
        "fullcodeline": "response = requests.get("
    },
    {
        "line": 30,
        "fullcodeline": "assert_response(response)"
    },
    {
        "line": 15,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/artifacts/list\","
    },
    {
        "line": 21,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/get-artifact\","
    },
    {
        "line": 27,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}//model-versions/get-artifact\","
    },
    {
        "line": 16,
        "fullcodeline": "params={\"run_id\": run_id, \"path\": invalid_path},"
    },
    {
        "line": 22,
        "fullcodeline": "params={\"run_id\": run_id, \"path\": invalid_path},"
    },
    {
        "line": 28,
        "fullcodeline": "params={\"name\": \"model\", \"version\": 1, \"path\": invalid_path},"
    }
]