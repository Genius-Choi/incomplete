[
    {
        "line": 2,
        "fullcodeline": "experiment_id = mlflow_client.create_experiment(\"SetExperimentTagTest\")"
    },
    {
        "line": 3,
        "fullcodeline": "mlflow_client.set_experiment_tag(experiment_id, \"dataset\", \"imagenet1K\")"
    },
    {
        "line": 4,
        "fullcodeline": "experiment = mlflow_client.get_experiment(experiment_id)"
    },
    {
        "line": 5,
        "fullcodeline": "assert \"dataset\" in experiment.tags"
    },
    {
        "line": 6,
        "fullcodeline": "assert experiment.tags[\"dataset\"] == \"imagenet1K\""
    },
    {
        "line": 8,
        "fullcodeline": "mlflow_client.set_experiment_tag(experiment_id, \"dataset\", \"birdbike\")"
    },
    {
        "line": 9,
        "fullcodeline": "experiment = mlflow_client.get_experiment(experiment_id)"
    },
    {
        "line": 10,
        "fullcodeline": "assert \"dataset\" in experiment.tags"
    },
    {
        "line": 11,
        "fullcodeline": "assert experiment.tags[\"dataset\"] == \"birdbike\""
    },
    {
        "line": 13,
        "fullcodeline": "experiment_id_2 = mlflow_client.create_experiment(\"SetExperimentTagTest2\")"
    },
    {
        "line": 14,
        "fullcodeline": "experiment2 = mlflow_client.get_experiment(experiment_id_2)"
    },
    {
        "line": 15,
        "fullcodeline": "assert len(experiment2.tags) == 0"
    },
    {
        "line": 17,
        "fullcodeline": "mlflow_client.set_experiment_tag(experiment_id_2, \"dataset\", \"birds200\")"
    },
    {
        "line": 18,
        "fullcodeline": "experiment = mlflow_client.get_experiment(experiment_id)"
    },
    {
        "line": 19,
        "fullcodeline": "experiment2 = mlflow_client.get_experiment(experiment_id_2)"
    },
    {
        "line": 20,
        "fullcodeline": "assert \"dataset\" in experiment.tags"
    },
    {
        "line": 21,
        "fullcodeline": "assert experiment.tags[\"dataset\"] == \"birdbike\""
    },
    {
        "line": 22,
        "fullcodeline": "assert \"dataset\" in experiment2.tags"
    },
    {
        "line": 23,
        "fullcodeline": "assert experiment2.tags[\"dataset\"] == \"birds200\""
    },
    {
        "line": 25,
        "fullcodeline": "mlflow_client.set_experiment_tag(experiment_id, \"multiline tag\", \"value2\\nvalue2\\nvalue2\")"
    },
    {
        "line": 26,
        "fullcodeline": "experiment = mlflow_client.get_experiment(experiment_id)"
    },
    {
        "line": 27,
        "fullcodeline": "assert \"multiline tag\" in experiment.tags"
    },
    {
        "line": 28,
        "fullcodeline": "assert experiment.tags[\"multiline tag\"] == \"value2\\nvalue2\\nvalue2\""
    }
]