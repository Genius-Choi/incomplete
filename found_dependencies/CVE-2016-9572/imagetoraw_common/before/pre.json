[
    {
        "line": 3,
        "fullcodeline": "FILE *rawFile = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "(void)big_endian;"
    },
    {
        "line": 18,
        "fullcodeline": "rawFile = fopen(outfile, \"wb\");"
    },
    {
        "line": 24,
        "fullcodeline": "fails = 1;"
    },
    {
        "line": 25,
        "fullcodeline": "fprintf(stdout,\"Raw image characteristics: %d components\\n\", image->numcomps);"
    },
    {
        "line": 126,
        "fullcodeline": "fails = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "if((image->numcomps * image->x1 * image->y1) == 0)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!rawFile) {"
    },
    {
        "line": 27,
        "fullcodeline": "for(compno = 0; compno < image->numcomps; compno++)"
    },
    {
        "line": 14,
        "fullcodeline": "fprintf(stderr,\"\\nError: invalid raw image parameters\\n\");"
    },
    {
        "line": 29,
        "fullcodeline": "fprintf(stdout,\"Component %u characteristics: %dx%dx%d %s\\n\", compno, image->comps[compno].w,"
    },
    {
        "line": 32,
        "fullcodeline": "w = (int)image->comps[compno].w;"
    },
    {
        "line": 33,
        "fullcodeline": "h = (int)image->comps[compno].h;"
    },
    {
        "line": 35,
        "fullcodeline": "if(image->comps[compno].prec <= 8)"
    },
    {
        "line": 37,
        "fullcodeline": "if(image->comps[compno].sgnd == 1)"
    },
    {
        "line": 39,
        "fullcodeline": "mask = (1 << image->comps[compno].prec) - 1;"
    },
    {
        "line": 40,
        "fullcodeline": "ptr = image->comps[compno].data;"
    },
    {
        "line": 74,
        "fullcodeline": "else if(image->comps[compno].prec <= 16)"
    },
    {
        "line": 41,
        "fullcodeline": "for (line = 0; line < h; line++) {"
    },
    {
        "line": 76,
        "fullcodeline": "if(image->comps[compno].sgnd == 1)"
    },
    {
        "line": 42,
        "fullcodeline": "for(row = 0; row < w; row++)\t{"
    },
    {
        "line": 57,
        "fullcodeline": "mask = (1 << image->comps[compno].prec) - 1;"
    },
    {
        "line": 58,
        "fullcodeline": "ptr = image->comps[compno].data;"
    },
    {
        "line": 79,
        "fullcodeline": "mask = (1 << image->comps[compno].prec) - 1;"
    },
    {
        "line": 80,
        "fullcodeline": "ptr = image->comps[compno].data;"
    },
    {
        "line": 115,
        "fullcodeline": "else if (image->comps[compno].prec <= 32)"
    },
    {
        "line": 43,
        "fullcodeline": "curr = *ptr;"
    },
    {
        "line": 45,
        "fullcodeline": "uc = (unsigned char) (curr & mask);"
    },
    {
        "line": 46,
        "fullcodeline": "res = fwrite(&uc, 1, 1, rawFile);"
    },
    {
        "line": 59,
        "fullcodeline": "for (line = 0; line < h; line++) {"
    },
    {
        "line": 81,
        "fullcodeline": "for (line = 0; line < h; line++) {"
    },
    {
        "line": 44,
        "fullcodeline": "if(curr > 127) curr = 127; else if(curr < -128) curr = -128;"
    },
    {
        "line": 60,
        "fullcodeline": "for(row = 0; row < w; row++)\t{"
    },
    {
        "line": 82,
        "fullcodeline": "for(row = 0; row < w; row++)\t{"
    },
    {
        "line": 98,
        "fullcodeline": "mask = (1 << image->comps[compno].prec) - 1;"
    },
    {
        "line": 99,
        "fullcodeline": "ptr = image->comps[compno].data;"
    },
    {
        "line": 61,
        "fullcodeline": "curr = *ptr;"
    },
    {
        "line": 63,
        "fullcodeline": "uc = (unsigned char) (curr & mask);"
    },
    {
        "line": 64,
        "fullcodeline": "res = fwrite(&uc, 1, 1, rawFile);"
    },
    {
        "line": 83,
        "fullcodeline": "curr = *ptr;"
    },
    {
        "line": 86,
        "fullcodeline": "res = fwrite(uc16.vals, 1, 2, rawFile);"
    },
    {
        "line": 100,
        "fullcodeline": "for (line = 0; line < h; line++) {"
    },
    {
        "line": 62,
        "fullcodeline": "if(curr > 255) curr = 255; else if(curr < 0) curr = 0;"
    },
    {
        "line": 84,
        "fullcodeline": "if(curr > 32767 ) curr = 32767; else if( curr < -32768) curr = -32768;"
    },
    {
        "line": 85,
        "fullcodeline": "uc16.val = (signed short)(curr & mask);"
    },
    {
        "line": 101,
        "fullcodeline": "for(row = 0; row < w; row++)\t{"
    },
    {
        "line": 102,
        "fullcodeline": "curr = *ptr;"
    },
    {
        "line": 105,
        "fullcodeline": "res = fwrite(uc16.vals, 1, 2, rawFile);"
    },
    {
        "line": 103,
        "fullcodeline": "if(curr > 65535 ) curr = 65535; else if( curr < 0) curr = 0;"
    },
    {
        "line": 104,
        "fullcodeline": "uc16.val = (unsigned short)(curr & mask);"
    }
]