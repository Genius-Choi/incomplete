[
    {
        "line": 3,
        "fullcodeline": "struct l2cap_pinfo *pi = l2cap_pi(sk);"
    },
    {
        "line": 4,
        "fullcodeline": "struct l2cap_conf_req *req = data;"
    },
    {
        "line": 5,
        "fullcodeline": "struct l2cap_conf_rfc rfc = { .mode = L2CAP_MODE_ERTM };"
    },
    {
        "line": 6,
        "fullcodeline": "void *ptr = req->data;"
    },
    {
        "line": 8,
        "fullcodeline": "BT_DBG(\"sk %p\", sk);"
    },
    {
        "line": 66,
        "fullcodeline": "req->dcid  = cpu_to_le16(pi->dcid);"
    },
    {
        "line": 67,
        "fullcodeline": "req->flags = cpu_to_le16(0);"
    },
    {
        "line": 10,
        "fullcodeline": "if (pi->num_conf_req || pi->num_conf_rsp)"
    },
    {
        "line": 69,
        "fullcodeline": "return ptr - data;"
    },
    {
        "line": 16,
        "fullcodeline": "pi->conf_state |= L2CAP_CONF_STATE2_DEVICE;"
    },
    {
        "line": 26,
        "fullcodeline": "pi->mode = l2cap_select_mode(rfc.mode, pi->conn->feat_mask);"
    },
    {
        "line": 38,
        "fullcodeline": "rfc.mode            = L2CAP_MODE_ERTM;"
    },
    {
        "line": 39,
        "fullcodeline": "rfc.txwin_size      = L2CAP_DEFAULT_TX_WINDOW;"
    },
    {
        "line": 40,
        "fullcodeline": "rfc.max_transmit    = L2CAP_DEFAULT_MAX_RECEIVE;"
    },
    {
        "line": 41,
        "fullcodeline": "rfc.retrans_timeout = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "rfc.monitor_timeout = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "rfc.max_pdu_size    = cpu_to_le16(L2CAP_DEFAULT_MAX_RX_APDU);"
    },
    {
        "line": 45,
        "fullcodeline": "l2cap_add_conf_opt(&ptr, L2CAP_CONF_RFC,"
    },
    {
        "line": 50,
        "fullcodeline": "rfc.mode            = L2CAP_MODE_STREAMING;"
    },
    {
        "line": 51,
        "fullcodeline": "rfc.txwin_size      = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "rfc.max_transmit    = 0;"
    },
    {
        "line": 53,
        "fullcodeline": "rfc.retrans_timeout = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "rfc.monitor_timeout = 0;"
    },
    {
        "line": 55,
        "fullcodeline": "rfc.max_pdu_size    = cpu_to_le16(L2CAP_DEFAULT_MAX_RX_APDU);"
    },
    {
        "line": 57,
        "fullcodeline": "l2cap_add_conf_opt(&ptr, L2CAP_CONF_RFC,"
    },
    {
        "line": 17,
        "fullcodeline": "if (!l2cap_mode_supported(pi->mode, pi->conn->feat_mask)) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (pi->imtu != L2CAP_DEFAULT_MTU)"
    },
    {
        "line": 46,
        "fullcodeline": "sizeof(rfc), (unsigned long) &rfc);"
    },
    {
        "line": 58,
        "fullcodeline": "sizeof(rfc), (unsigned long) &rfc);"
    },
    {
        "line": 19,
        "fullcodeline": "req.dcid = cpu_to_le16(pi->dcid);"
    },
    {
        "line": 20,
        "fullcodeline": "req.scid = cpu_to_le16(pi->scid);"
    },
    {
        "line": 21,
        "fullcodeline": "l2cap_send_cmd(pi->conn, l2cap_get_ident(pi->conn),"
    },
    {
        "line": 34,
        "fullcodeline": "l2cap_add_conf_opt(&ptr, L2CAP_CONF_MTU, 2, pi->imtu);"
    }
]