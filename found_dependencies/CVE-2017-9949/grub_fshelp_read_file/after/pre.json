[
    {
        "line": 13,
        "fullcodeline": "int blocksize = 1 << (log2blocksize + GRUB_DISK_SECTOR_BITS);"
    },
    {
        "line": 23,
        "fullcodeline": "blockcnt = ((len + pos) + blocksize - 1) >>"
    },
    {
        "line": 16,
        "fullcodeline": "if (pos + len > filesize)"
    },
    {
        "line": 19,
        "fullcodeline": "if (len < 1 || len == 0xffffffff) {"
    },
    {
        "line": 26,
        "fullcodeline": "for (i = pos >> (log2blocksize + GRUB_DISK_SECTOR_BITS); i < blockcnt; i++)"
    },
    {
        "line": 17,
        "fullcodeline": "len = filesize - pos;"
    },
    {
        "line": 29,
        "fullcodeline": "int blockoff = pos & (blocksize - 1);"
    },
    {
        "line": 30,
        "fullcodeline": "int blockend = blocksize;"
    },
    {
        "line": 32,
        "fullcodeline": "int skipfirst = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "blknr = get_block (node, i);"
    },
    {
        "line": 38,
        "fullcodeline": "blknr = blknr << log2blocksize;"
    },
    {
        "line": 20,
        "fullcodeline": "return -1;"
    },
    {
        "line": 41,
        "fullcodeline": "if (i == blockcnt - 1)"
    },
    {
        "line": 51,
        "fullcodeline": "if (i == (pos >> (log2blocksize + GRUB_DISK_SECTOR_BITS)))"
    },
    {
        "line": 43,
        "fullcodeline": "blockend = (len + pos) & (blocksize - 1);"
    },
    {
        "line": 53,
        "fullcodeline": "skipfirst = blockoff;"
    },
    {
        "line": 54,
        "fullcodeline": "blockend -= skipfirst;"
    },
    {
        "line": 61,
        "fullcodeline": "disk->read_hook = read_hook;"
    },
    {
        "line": 62,
        "fullcodeline": "disk->closure = closure;"
    },
    {
        "line": 65,
        "fullcodeline": "grub_hack_lastoff = blknr * 512;"
    },
    {
        "line": 66,
        "fullcodeline": "grub_disk_read_ex (disk, blknr, skipfirst, blockend, buf, flags);"
    },
    {
        "line": 75,
        "fullcodeline": "buf += blocksize - skipfirst;"
    },
    {
        "line": 36,
        "fullcodeline": "return -1;"
    },
    {
        "line": 46,
        "fullcodeline": "if (! blockend)"
    },
    {
        "line": 47,
        "fullcodeline": "blockend = blocksize;"
    },
    {
        "line": 69,
        "fullcodeline": "return -1;"
    },
    {
        "line": 72,
        "fullcodeline": "grub_memset (buf, 0, blockend);"
    }
]