[
    {
        "line": 4,
        "fullcodeline": "GHashTable* system_interfaces = g_hash_table_new_full(g_str_hash, g_str_equal, g_free, NULL);"
    },
    {
        "line": 5,
        "fullcodeline": "_netplan_query_system_interfaces(system_interfaces);"
    },
    {
        "line": 8,
        "fullcodeline": "GHashTable* non_optional_interfaces = g_hash_table_new_full(g_str_hash, g_str_equal, g_free, g_free);"
    },
    {
        "line": 10,
        "fullcodeline": "netplan_state_iterator_init(np_state, &iter);"
    },
    {
        "line": 49,
        "fullcodeline": "g_hash_table_destroy(system_interfaces);"
    },
    {
        "line": 52,
        "fullcodeline": "const char* override = \"/run/systemd/system/systemd-networkd-wait-online.service.d/10-netplan.conf\";"
    },
    {
        "line": 55,
        "fullcodeline": "GString* content = g_string_new(\"[Unit]\\n\""
    },
    {
        "line": 66,
        "fullcodeline": "g_string_append(content, \"\\n[Service]\\nExecStart=\\n\""
    },
    {
        "line": 68,
        "fullcodeline": "g_hash_table_iter_init (&idx, non_optional_interfaces);"
    },
    {
        "line": 80,
        "fullcodeline": "g_string_append(content, \"\\n\");"
    },
    {
        "line": 11,
        "fullcodeline": "while (netplan_state_iterator_has_next(&iter)) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (g_hash_table_size(non_optional_interfaces) == 0) {"
    },
    {
        "line": 69,
        "fullcodeline": "while (g_hash_table_iter_next (&idx, &key, &value)) {"
    },
    {
        "line": 12,
        "fullcodeline": "NetplanNetDefinition* def = netplan_state_iterator_next(&iter);"
    },
    {
        "line": 58,
        "fullcodeline": "_netplan_g_string_free_to_file_with_permissions(content, rootdir, override, NULL, \"root\", \"root\", 0640);"
    },
    {
        "line": 59,
        "fullcodeline": "g_hash_table_destroy(non_optional_interfaces);"
    },
    {
        "line": 70,
        "fullcodeline": "const char* ifname = key;"
    },
    {
        "line": 71,
        "fullcodeline": "const char* min_oper_state = value;"
    },
    {
        "line": 72,
        "fullcodeline": "g_string_append_printf(content, \" -i %s\", ifname);"
    },
    {
        "line": 13,
        "fullcodeline": "if (def->backend != NETPLAN_BACKEND_NETWORKD)"
    },
    {
        "line": 20,
        "fullcodeline": "if (!(def->optional || def->activation_mode)) {"
    },
    {
        "line": 23,
        "fullcodeline": "struct address_iter* addr_iter = _netplan_netdef_new_address_iter(def);"
    },
    {
        "line": 24,
        "fullcodeline": "gboolean routable =   _netplan_address_iter_next(addr_iter) != NULL"
    },
    {
        "line": 27,
        "fullcodeline": "gboolean degraded =   (   netplan_netdef_get_link_local_ipv4(def)"
    },
    {
        "line": 31,
        "fullcodeline": "gboolean any_ips = routable || degraded;"
    },
    {
        "line": 32,
        "fullcodeline": "_netplan_address_iter_free(addr_iter);"
    },
    {
        "line": 36,
        "fullcodeline": "gboolean physical_no_match_or_virtual = FALSE"
    },
    {
        "line": 75,
        "fullcodeline": "if (!g_strcmp0(ifname, \"lo\"))"
    },
    {
        "line": 76,
        "fullcodeline": "g_string_append(content, \":carrier\"); // \"carrier\" as min-oper state for loopback"
    },
    {
        "line": 26,
        "fullcodeline": "|| netplan_netdef_get_dhcp6(def);"
    },
    {
        "line": 29,
        "fullcodeline": "|| (   netplan_netdef_get_link_local_ipv6(def)"
    },
    {
        "line": 38,
        "fullcodeline": "|| (netplan_netdef_get_type(def) >= NETPLAN_DEF_TYPE_VIRTUAL);"
    },
    {
        "line": 40,
        "fullcodeline": "g_hash_table_replace(non_optional_interfaces, g_strdup(def->id), any_ips ? g_strdup(\"degraded\") : g_strdup(\"carrier\"));"
    },
    {
        "line": 25,
        "fullcodeline": "|| netplan_netdef_get_dhcp4(def)"
    },
    {
        "line": 28,
        "fullcodeline": "&& !(netplan_netdef_get_bond_link(def) || netplan_netdef_get_bridge_link(def)))"
    },
    {
        "line": 30,
        "fullcodeline": "&& !(netplan_netdef_get_bond_link(def) || netplan_netdef_get_bridge_link(def)));"
    },
    {
        "line": 37,
        "fullcodeline": "|| (!netplan_netdef_has_match(def) && g_hash_table_contains(system_interfaces, def->id))"
    },
    {
        "line": 78,
        "fullcodeline": "g_string_append_printf(content, \":%s\", min_oper_state);"
    },
    {
        "line": 42,
        "fullcodeline": "_netplan_enumerate_interfaces(def, system_interfaces, non_optional_interfaces, any_ips ? \"degraded\" : \"carrier\", def->set_name, rootdir);"
    },
    {
        "line": 45,
        "fullcodeline": "_netplan_enumerate_interfaces(def, system_interfaces, non_optional_interfaces, any_ips ? \"degraded\" : \"carrier\", NULL, rootdir);"
    }
]