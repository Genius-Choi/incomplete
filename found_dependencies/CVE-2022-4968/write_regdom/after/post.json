[
    {
        "line": 3,
        "fullcodeline": "g_assert(def->regulatory_domain);"
    },
    {
        "line": 4,
        "fullcodeline": "g_autofree gchar* id_escaped = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "g_autofree char* link = g_strjoin(NULL, rootdir ?: \"\", \"/run/systemd/system/network.target.wants/netplan-regdom.service\", NULL);"
    },
    {
        "line": 6,
        "fullcodeline": "g_autofree char* path = g_strjoin(NULL, \"/run/systemd/system/netplan-regdom.service\", NULL);"
    },
    {
        "line": 8,
        "fullcodeline": "GString* s = g_string_new(\"[Unit]\\n\");"
    },
    {
        "line": 9,
        "fullcodeline": "g_string_append(s, \"Description=Netplan regulatory-domain configuration\\n\");"
    },
    {
        "line": 10,
        "fullcodeline": "g_string_append(s, \"After=network.target\\n\");"
    },
    {
        "line": 12,
        "fullcodeline": "g_string_append(s, \"\\n[Service]\\nType=oneshot\\n\");"
    },
    {
        "line": 15,
        "fullcodeline": "_netplan_g_string_free_to_file_with_permissions(s, rootdir, path, NULL, \"root\", \"root\", 0640);"
    },
    {
        "line": 16,
        "fullcodeline": "_netplan_safe_mkdir_p_dir(link);"
    },
    {
        "line": 17,
        "fullcodeline": "if (symlink(path, link) < 0 && errno != EEXIST) {"
    },
    {
        "line": 19,
        "fullcodeline": "g_set_error(error, NETPLAN_FILE_ERROR, errno, \"failed to create enablement symlink: %m\\n\");"
    }
]