[
    {
        "line": 4,
        "fullcodeline": "GString* s = g_string_new(\"ctrl_interface=/run/wpa_supplicant\\n\\n\");"
    },
    {
        "line": 5,
        "fullcodeline": "g_autofree char* path = g_strjoin(NULL, \"run/netplan/wpa-\", def->id, \".conf\", NULL);"
    },
    {
        "line": 7,
        "fullcodeline": "g_debug(\"%s: Creating wpa_supplicant configuration file %s\", def->id, path);"
    },
    {
        "line": 98,
        "fullcodeline": "_netplan_g_string_free_to_file_with_permissions(s, rootdir, path, NULL, \"root\", \"root\", 0600);"
    },
    {
        "line": 8,
        "fullcodeline": "if (def->type == NETPLAN_DEF_TYPE_WIFI) {"
    },
    {
        "line": 25,
        "fullcodeline": "g_hash_table_iter_init(&iter, def->access_points);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!def->access_points) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (def->wowlan && def->wowlan > NETPLAN_WIFI_WOWLAN_DEFAULT) {"
    },
    {
        "line": 26,
        "fullcodeline": "while (g_hash_table_iter_next(&iter, NULL, (gpointer) &ap)) {"
    },
    {
        "line": 89,
        "fullcodeline": "g_string_append(s, \"network={\\n\");"
    },
    {
        "line": 94,
        "fullcodeline": "g_string_append(s, \"}\\n\");"
    },
    {
        "line": 10,
        "fullcodeline": "g_string_free(s, TRUE);"
    },
    {
        "line": 14,
        "fullcodeline": "g_string_append(s, \"wowlan_triggers=\");"
    },
    {
        "line": 22,
        "fullcodeline": "g_string_append_printf(s, \"country=%s\\n\", def->regulatory_domain);"
    },
    {
        "line": 27,
        "fullcodeline": "gchar* freq_config_str = ap->mode == NETPLAN_WIFI_MODE_ADHOC ? \"frequency\" : \"freq_list\";"
    },
    {
        "line": 29,
        "fullcodeline": "g_string_append_printf(s, \"network={\\n  ssid=\\\"%s\\\"\\n\", ap->ssid);"
    },
    {
        "line": 84,
        "fullcodeline": "g_string_append(s, \"}\\n\");"
    },
    {
        "line": 90,
        "fullcodeline": "if (!append_wpa_auth_conf(s, &def->auth, def->id, error)) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (!append_wifi_wowlan_flags(def->wowlan, s, error)) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (ap->band == NETPLAN_WIFI_BAND_24) {"
    },
    {
        "line": 91,
        "fullcodeline": "g_string_free(s, TRUE);"
    },
    {
        "line": 16,
        "fullcodeline": "g_string_free(s, TRUE);"
    },
    {
        "line": 31,
        "fullcodeline": "g_string_append_printf(s, \"  bssid=%s\\n\", ap->bssid);"
    },
    {
        "line": 34,
        "fullcodeline": "g_string_append(s, \"  scan_ssid=1\\n\");"
    },
    {
        "line": 66,
        "fullcodeline": "g_string_append(s, \"  mode=1\\n\");"
    },
    {
        "line": 69,
        "fullcodeline": "g_set_error(error, NETPLAN_BACKEND_ERROR, NETPLAN_ERROR_UNSUPPORTED, \"ERROR: %s: %s: networkd does not support this wifi mode\\n\", def->id, ap->ssid);"
    },
    {
        "line": 70,
        "fullcodeline": "g_string_free(s, TRUE);"
    },
    {
        "line": 38,
        "fullcodeline": "if(!wifi_frequency_24)"
    },
    {
        "line": 76,
        "fullcodeline": "if (!append_wpa_auth_conf(s, &ap->auth, ap->ssid, error)) {"
    },
    {
        "line": 82,
        "fullcodeline": "g_string_append(s, \"  key_mgmt=NONE\\n\");"
    },
    {
        "line": 39,
        "fullcodeline": "wifi_get_freq24(1);"
    },
    {
        "line": 41,
        "fullcodeline": "g_string_append_printf(s, \"  %s=%d\\n\", freq_config_str, wifi_get_freq24(ap->channel));"
    },
    {
        "line": 48,
        "fullcodeline": "} else if (ap->band == NETPLAN_WIFI_BAND_5) {"
    },
    {
        "line": 77,
        "fullcodeline": "g_string_free(s, TRUE);"
    },
    {
        "line": 42,
        "fullcodeline": "} else if (ap->mode != NETPLAN_WIFI_MODE_ADHOC) {"
    },
    {
        "line": 50,
        "fullcodeline": "if(!wifi_frequency_5)"
    },
    {
        "line": 43,
        "fullcodeline": "g_string_append_printf(s, \"  freq_list=\");"
    },
    {
        "line": 44,
        "fullcodeline": "g_hash_table_foreach(wifi_frequency_24, wifi_append_freq, s);"
    },
    {
        "line": 46,
        "fullcodeline": "s = g_string_overwrite(s, s->len-1, \"\\n\");"
    },
    {
        "line": 51,
        "fullcodeline": "wifi_get_freq5(7);"
    },
    {
        "line": 53,
        "fullcodeline": "g_string_append_printf(s, \"  %s=%d\\n\", freq_config_str, wifi_get_freq5(ap->channel));"
    },
    {
        "line": 54,
        "fullcodeline": "} else if (ap->mode != NETPLAN_WIFI_MODE_ADHOC) {"
    },
    {
        "line": 55,
        "fullcodeline": "g_string_append_printf(s, \"  freq_list=\");"
    },
    {
        "line": 56,
        "fullcodeline": "g_hash_table_foreach(wifi_frequency_5, wifi_append_freq, s);"
    },
    {
        "line": 58,
        "fullcodeline": "s = g_string_overwrite(s, s->len-1, \"\\n\");"
    }
]