[
    {
        "line": 89,
        "fullcodeline": "char* psk = NULL;"
    },
    {
        "line": 115,
        "fullcodeline": "if (auth->password"
    },
    {
        "line": 5,
        "fullcodeline": "g_string_append(s, \"  key_mgmt=NONE\\n\");"
    },
    {
        "line": 19,
        "fullcodeline": "g_string_append(s, \"  key_mgmt=WPA-EAP\\n\");"
    },
    {
        "line": 23,
        "fullcodeline": "g_string_append(s, \"  key_mgmt=WPA-EAP WPA-EAP-SHA256\\n\");"
    },
    {
        "line": 27,
        "fullcodeline": "g_string_append(s, \"  key_mgmt=WPA-EAP-SUITE-B-192\\n\");"
    },
    {
        "line": 31,
        "fullcodeline": "g_string_append(s, \"  key_mgmt=SAE\\n\");"
    },
    {
        "line": 35,
        "fullcodeline": "g_string_append(s, \"  key_mgmt=IEEE8021X\\n\");"
    },
    {
        "line": 46,
        "fullcodeline": "g_string_append(s, \"  eap=TLS\\n\");"
    },
    {
        "line": 50,
        "fullcodeline": "g_string_append(s, \"  eap=PEAP\\n\");"
    },
    {
        "line": 54,
        "fullcodeline": "g_string_append(s, \"  eap=TTLS\\n\");"
    },
    {
        "line": 58,
        "fullcodeline": "g_string_append(s, \"  eap=LEAP\\n\");"
    },
    {
        "line": 62,
        "fullcodeline": "g_string_append(s, \"  eap=PWD\\n\");"
    },
    {
        "line": 74,
        "fullcodeline": "g_string_append(s, \"  ieee80211w=1\\n\");"
    },
    {
        "line": 78,
        "fullcodeline": "g_string_append(s, \"  ieee80211w=2\\n\");"
    },
    {
        "line": 83,
        "fullcodeline": "g_string_append_printf(s, \"  identity=\\\"%s\\\"\\n\", auth->identity);"
    },
    {
        "line": 86,
        "fullcodeline": "g_string_append_printf(s, \"  anonymous_identity=\\\"%s\\\"\\n\", auth->anonymous_identity);"
    },
    {
        "line": 91,
        "fullcodeline": "psk = auth->psk;"
    },
    {
        "line": 96,
        "fullcodeline": "size_t len = strlen(psk);"
    },
    {
        "line": 116,
        "fullcodeline": "&& (!_is_auth_key_management_psk(auth) || auth->eap_method != NETPLAN_AUTH_EAP_NONE)) {"
    },
    {
        "line": 124,
        "fullcodeline": "g_string_append_printf(s, \"  ca_cert=\\\"%s\\\"\\n\", auth->ca_certificate);"
    },
    {
        "line": 127,
        "fullcodeline": "g_string_append_printf(s, \"  client_cert=\\\"%s\\\"\\n\", auth->client_certificate);"
    },
    {
        "line": 130,
        "fullcodeline": "g_string_append_printf(s, \"  private_key=\\\"%s\\\"\\n\", auth->client_key);"
    },
    {
        "line": 133,
        "fullcodeline": "g_string_append_printf(s, \"  private_key_passwd=\\\"%s\\\"\\n\", auth->client_key_password);"
    },
    {
        "line": 9,
        "fullcodeline": "if (auth->pmf_mode == NETPLAN_AUTH_PMF_MODE_OPTIONAL)"
    },
    {
        "line": 97,
        "fullcodeline": "if (len == 64) {"
    },
    {
        "line": 13,
        "fullcodeline": "g_string_append(s, \"  key_mgmt=WPA-PSK WPA-PSK-SHA256 SAE\\n\");"
    },
    {
        "line": 92,
        "fullcodeline": "else if (auth->password && _is_auth_key_management_psk(auth))"
    },
    {
        "line": 105,
        "fullcodeline": "g_string_append_printf(s, \"  psk=%s\\n\", psk);"
    },
    {
        "line": 117,
        "fullcodeline": "if (strncmp(auth->password, \"hash:\", 5) == 0) {"
    },
    {
        "line": 118,
        "fullcodeline": "g_string_append_printf(s, \"  password=%s\\n\", auth->password);"
    },
    {
        "line": 15,
        "fullcodeline": "g_string_append(s, \"  key_mgmt=WPA-PSK\\n\");"
    },
    {
        "line": 93,
        "fullcodeline": "psk = auth->password;"
    },
    {
        "line": 99,
        "fullcodeline": "for (unsigned i = 0; i < 64; ++i)"
    },
    {
        "line": 120,
        "fullcodeline": "g_string_append_printf(s, \"  password=\\\"%s\\\"\\n\", auth->password);"
    },
    {
        "line": 100,
        "fullcodeline": "if (!isxdigit(psk[i])) {"
    },
    {
        "line": 101,
        "fullcodeline": "g_set_error(error, NETPLAN_BACKEND_ERROR, NETPLAN_ERROR_UNSUPPORTED, \"ERROR: %s: PSK length of 64 is only supported for hex-digit representation\\n\", id);"
    },
    {
        "line": 106,
        "fullcodeline": "} else if (len < 8 || len > 63) {"
    },
    {
        "line": 108,
        "fullcodeline": "g_set_error(error, NETPLAN_BACKEND_ERROR, NETPLAN_ERROR_VALIDATION, \"ERROR: %s: ASCII passphrase must be between 8 and 63 characters (inclusive)\\n\", id);"
    },
    {
        "line": 111,
        "fullcodeline": "g_string_append_printf(s, \"  psk=\\\"%s\\\"\\n\", psk);"
    }
]