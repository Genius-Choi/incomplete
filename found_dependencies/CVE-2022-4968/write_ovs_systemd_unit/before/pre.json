[
    {
        "line": 3,
        "fullcodeline": "g_autofree gchar* id_escaped = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "g_autofree char* link = g_strjoin(NULL, rootdir ?: \"\", \"/run/systemd/system/systemd-networkd.service.wants/netplan-ovs-\", id, \".service\", NULL);"
    },
    {
        "line": 5,
        "fullcodeline": "g_autofree char* path = g_strjoin(NULL, \"/run/systemd/system/netplan-ovs-\", id, \".service\", NULL);"
    },
    {
        "line": 7,
        "fullcodeline": "GString* s = g_string_new(\"[Unit]\\n\");"
    },
    {
        "line": 8,
        "fullcodeline": "g_string_append_printf(s, \"Description=OpenVSwitch configuration for %s\\n\", id);"
    },
    {
        "line": 9,
        "fullcodeline": "g_string_append(s, \"DefaultDependencies=no\\n\");"
    },
    {
        "line": 11,
        "fullcodeline": "g_string_append_printf(s, \"Wants=ovsdb-server.service\\n\");"
    },
    {
        "line": 12,
        "fullcodeline": "g_string_append_printf(s, \"After=ovsdb-server.service\\n\");"
    },
    {
        "line": 24,
        "fullcodeline": "g_string_append(s, \"Before=network.target\\nWants=network.target\\n\");"
    },
    {
        "line": 30,
        "fullcodeline": "g_string_append(s, \"\\n[Service]\\nType=oneshot\\nTimeoutStartSec=10s\\n\");"
    },
    {
        "line": 36,
        "fullcodeline": "g_string_append(s, cmds->str);"
    },
    {
        "line": 38,
        "fullcodeline": "_netplan_g_string_free_to_file(s, rootdir, path, NULL);"
    },
    {
        "line": 40,
        "fullcodeline": "_netplan_safe_mkdir_p_dir(link);"
    },
    {
        "line": 18,
        "fullcodeline": "if (!cleanup) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (symlink(path, link) < 0 && errno != EEXIST) {"
    },
    {
        "line": 14,
        "fullcodeline": "id_escaped = systemd_escape((char*) id);"
    },
    {
        "line": 15,
        "fullcodeline": "g_string_append_printf(s, \"Requires=sys-subsystem-net-devices-%s.device\\n\", id_escaped);"
    },
    {
        "line": 16,
        "fullcodeline": "g_string_append_printf(s, \"After=sys-subsystem-net-devices-%s.device\\n\", id_escaped);"
    },
    {
        "line": 19,
        "fullcodeline": "g_string_append_printf(s, \"After=netplan-ovs-cleanup.service\\n\");"
    },
    {
        "line": 26,
        "fullcodeline": "g_string_append_printf(s, \"Requires=netplan-ovs-%s.service\\n\", dependency);"
    },
    {
        "line": 27,
        "fullcodeline": "g_string_append_printf(s, \"After=netplan-ovs-%s.service\\n\", dependency);"
    },
    {
        "line": 35,
        "fullcodeline": "g_string_append(s, \"StartLimitBurst=0\\n\");"
    },
    {
        "line": 43,
        "fullcodeline": "g_set_error(error, NETPLAN_FILE_ERROR, errno, \"failed to create enablement symlink: %m\\n\");"
    }
]