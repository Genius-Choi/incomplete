[
    {
        "line": 3,
        "fullcodeline": "struct ImapData *idata = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "char buf[LONG_STRING];"
    },
    {
        "line": 5,
        "fullcodeline": "char mbox[LONG_STRING];"
    },
    {
        "line": 6,
        "fullcodeline": "char errstr[STRING];"
    },
    {
        "line": 9,
        "fullcodeline": "size_t len = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "idata = imap_conn_find(&(mx.account), 0);"
    },
    {
        "line": 20,
        "fullcodeline": "imap_fix_path(idata, mx.mbox, buf, sizeof(buf));"
    },
    {
        "line": 41,
        "fullcodeline": "imap_munge_mbox_name(idata, mbox, sizeof(mbox), buf);"
    },
    {
        "line": 43,
        "fullcodeline": "snprintf(buf, sizeof(buf), \"%sSUBSCRIBE %s\", subscribe ? \"\" : \"UN\", mbox);"
    },
    {
        "line": 48,
        "fullcodeline": "imap_unmunge_mbox_name(idata, mx.mbox);"
    },
    {
        "line": 53,
        "fullcodeline": "FREE(&mx.mbox);"
    },
    {
        "line": 57,
        "fullcodeline": "FREE(&mx.mbox);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!mx_is_imap(path) || imap_parse_path(path, &mx) || !mx.mbox)"
    },
    {
        "line": 17,
        "fullcodeline": "if (!idata)"
    },
    {
        "line": 45,
        "fullcodeline": "if (imap_exec(idata, buf, 0) < 0)"
    },
    {
        "line": 58,
        "fullcodeline": "return -1;"
    },
    {
        "line": 13,
        "fullcodeline": "mutt_error(_(\"Bad mailbox name\"));"
    },
    {
        "line": 22,
        "fullcodeline": "mutt_str_strfcpy(buf, \"INBOX\", sizeof(buf));"
    },
    {
        "line": 26,
        "fullcodeline": "mutt_buffer_init(&token);"
    },
    {
        "line": 27,
        "fullcodeline": "mutt_buffer_init(&err);"
    },
    {
        "line": 28,
        "fullcodeline": "err.data = errstr;"
    },
    {
        "line": 30,
        "fullcodeline": "len = snprintf(mbox, sizeof(mbox), \"%smailboxes \", subscribe ? \"\" : \"un\");"
    },
    {
        "line": 31,
        "fullcodeline": "imap_quote_string(mbox + len, sizeof(mbox) - len, path, true);"
    },
    {
        "line": 34,
        "fullcodeline": "FREE(&token.data);"
    },
    {
        "line": 38,
        "fullcodeline": "mutt_message(_(\"Subscribing to %s...\"), buf);"
    },
    {
        "line": 50,
        "fullcodeline": "mutt_message(_(\"Subscribed to %s\"), mx.mbox);"
    },
    {
        "line": 14,
        "fullcodeline": "return -1;"
    },
    {
        "line": 32,
        "fullcodeline": "if (mutt_parse_rc_line(mbox, &token, &err))"
    },
    {
        "line": 40,
        "fullcodeline": "mutt_message(_(\"Unsubscribing from %s...\"), buf);"
    },
    {
        "line": 52,
        "fullcodeline": "mutt_message(_(\"Unsubscribed from %s\"), mx.mbox);"
    },
    {
        "line": 33,
        "fullcodeline": "mutt_debug(1, \"Error adding subscribed mailbox: %s\\n\", errstr);"
    }
]