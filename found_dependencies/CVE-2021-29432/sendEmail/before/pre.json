[
    {
        "line": 16,
        "fullcodeline": "mailFrom = sydent.cfg.get('email', 'email.from')"
    },
    {
        "line": 18,
        "fullcodeline": "myHostname = sydent.cfg.get('email', 'email.hostname')"
    },
    {
        "line": 21,
        "fullcodeline": "midRandom = \"\".join([random.choice(string.ascii_letters) for _ in range(16)])"
    },
    {
        "line": 22,
        "fullcodeline": "messageid = \"<%d%s@%s>\" % (time_msec(), midRandom, myHostname)"
    },
    {
        "line": 24,
        "fullcodeline": "substitutions.update({"
    },
    {
        "line": 31,
        "fullcodeline": "allSubstitutions = {}"
    },
    {
        "line": 37,
        "fullcodeline": "mailString = open(templateFile).read() % allSubstitutions"
    },
    {
        "line": 38,
        "fullcodeline": "parsedFrom = email.utils.parseaddr(mailFrom)[1]"
    },
    {
        "line": 39,
        "fullcodeline": "parsedTo = email.utils.parseaddr(mailTo)[1]"
    },
    {
        "line": 48,
        "fullcodeline": "mailServer = sydent.cfg.get('email', 'email.smtphost')"
    },
    {
        "line": 49,
        "fullcodeline": "mailPort = sydent.cfg.get('email', 'email.smtpport')"
    },
    {
        "line": 50,
        "fullcodeline": "mailUsername = sydent.cfg.get('email', 'email.smtpusername')"
    },
    {
        "line": 51,
        "fullcodeline": "mailPassword = sydent.cfg.get('email', 'email.smtppassword')"
    },
    {
        "line": 52,
        "fullcodeline": "mailTLSMode = sydent.cfg.get('email', 'email.tlsmode')"
    },
    {
        "line": 53,
        "fullcodeline": "logger.info(\"Sending mail to %s with mail server: %s\" % (mailTo, mailServer,))"
    },
    {
        "line": 19,
        "fullcodeline": "if myHostname == '':"
    },
    {
        "line": 32,
        "fullcodeline": "for k, v in substitutions.items():"
    },
    {
        "line": 40,
        "fullcodeline": "if parsedFrom == '' or parsedTo == '':"
    },
    {
        "line": 44,
        "fullcodeline": "if parsedTo != mailTo:"
    },
    {
        "line": 20,
        "fullcodeline": "myHostname = socket.getfqdn()"
    },
    {
        "line": 41,
        "fullcodeline": "logger.info(\"Couldn't parse from / to address %s / %s\", mailFrom, mailTo)"
    },
    {
        "line": 42,
        "fullcodeline": "raise EmailAddressException()"
    },
    {
        "line": 45,
        "fullcodeline": "logger.info(\"Parsed to address changed the address: %s -> %s\", mailTo, parsedTo)"
    },
    {
        "line": 46,
        "fullcodeline": "raise EmailAddressException()"
    },
    {
        "line": 69,
        "fullcodeline": "smtp.sendmail(mailFrom, mailTo, mailString.encode('utf-8'))"
    },
    {
        "line": 70,
        "fullcodeline": "smtp.quit()"
    },
    {
        "line": 33,
        "fullcodeline": "allSubstitutions[k] = v"
    },
    {
        "line": 34,
        "fullcodeline": "allSubstitutions[k+\"_forhtml\"] = escape(v)"
    },
    {
        "line": 35,
        "fullcodeline": "allSubstitutions[k+\"_forurl\"] = urllib.parse.quote(v)"
    },
    {
        "line": 55,
        "fullcodeline": "if mailTLSMode == 'SSL' or mailTLSMode == 'TLS':"
    },
    {
        "line": 62,
        "fullcodeline": "if mailUsername != '':"
    },
    {
        "line": 26,
        "fullcodeline": "'date': email.utils.formatdate(localtime=False),"
    },
    {
        "line": 56,
        "fullcodeline": "smtp = smtplib.SMTP_SSL(mailServer, mailPort, myHostname)"
    },
    {
        "line": 63,
        "fullcodeline": "smtp.login(mailUsername, mailPassword)"
    },
    {
        "line": 73,
        "fullcodeline": "ese = EmailSendException()"
    },
    {
        "line": 74,
        "fullcodeline": "ese.cause = origException"
    },
    {
        "line": 57,
        "fullcodeline": "elif mailTLSMode == 'STARTTLS':"
    },
    {
        "line": 72,
        "fullcodeline": "twisted.python.log.err()"
    },
    {
        "line": 58,
        "fullcodeline": "smtp = smtplib.SMTP(mailServer, mailPort, myHostname)"
    },
    {
        "line": 59,
        "fullcodeline": "smtp.starttls()"
    },
    {
        "line": 61,
        "fullcodeline": "smtp = smtplib.SMTP(mailServer, mailPort, myHostname)"
    }
]