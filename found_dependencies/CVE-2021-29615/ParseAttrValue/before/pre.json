[
    {
        "line": 4,
        "fullcodeline": "bool is_list = absl::ConsumePrefix(&type, \"list(\");"
    },
    {
        "line": 5,
        "fullcodeline": "if (absl::ConsumePrefix(&type, \"string\")) {"
    },
    {
        "line": 56,
        "fullcodeline": "return ProtoParseFromString(to_parse, out);"
    },
    {
        "line": 6,
        "fullcodeline": "field_name = \"s\";"
    },
    {
        "line": 26,
        "fullcodeline": "if (is_list && !absl::ConsumePrefix(&type, \")\")) {"
    },
    {
        "line": 35,
        "fullcodeline": "StringPiece cleaned = text;"
    },
    {
        "line": 36,
        "fullcodeline": "str_util::RemoveLeadingWhitespace(&cleaned);"
    },
    {
        "line": 37,
        "fullcodeline": "str_util::RemoveTrailingWhitespace(&cleaned);"
    },
    {
        "line": 42,
        "fullcodeline": "cleaned.remove_prefix(1);"
    },
    {
        "line": 43,
        "fullcodeline": "str_util::RemoveLeadingWhitespace(&cleaned);"
    },
    {
        "line": 51,
        "fullcodeline": "to_parse = strings::StrCat(\"list { \", field_name, \": \", text, \" }\");"
    },
    {
        "line": 53,
        "fullcodeline": "to_parse = strings::StrCat(field_name, \": \", text);"
    },
    {
        "line": 7,
        "fullcodeline": "} else if (absl::ConsumePrefix(&type, \"int\")) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (cleaned.size() < 2 || cleaned[0] != '[' ||"
    },
    {
        "line": 39,
        "fullcodeline": "cleaned[cleaned.size() - 1] != ']') {"
    },
    {
        "line": 44,
        "fullcodeline": "if (cleaned.size() == 1) {"
    },
    {
        "line": 47,
        "fullcodeline": "out->Clear();"
    },
    {
        "line": 8,
        "fullcodeline": "field_name = \"i\";"
    },
    {
        "line": 9,
        "fullcodeline": "} else if (absl::ConsumePrefix(&type, \"float\")) {"
    },
    {
        "line": 10,
        "fullcodeline": "field_name = \"f\";"
    },
    {
        "line": 11,
        "fullcodeline": "} else if (absl::ConsumePrefix(&type, \"bool\")) {"
    },
    {
        "line": 12,
        "fullcodeline": "field_name = \"b\";"
    },
    {
        "line": 13,
        "fullcodeline": "} else if (absl::ConsumePrefix(&type, \"type\")) {"
    },
    {
        "line": 14,
        "fullcodeline": "field_name = \"type\";"
    },
    {
        "line": 15,
        "fullcodeline": "} else if (absl::ConsumePrefix(&type, \"shape\")) {"
    },
    {
        "line": 16,
        "fullcodeline": "field_name = \"shape\";"
    },
    {
        "line": 17,
        "fullcodeline": "} else if (absl::ConsumePrefix(&type, \"tensor\")) {"
    },
    {
        "line": 18,
        "fullcodeline": "field_name = \"tensor\";"
    },
    {
        "line": 19,
        "fullcodeline": "} else if (absl::ConsumePrefix(&type, \"func\")) {"
    },
    {
        "line": 20,
        "fullcodeline": "field_name = \"func\";"
    },
    {
        "line": 21,
        "fullcodeline": "} else if (absl::ConsumePrefix(&type, \"placeholder\")) {"
    },
    {
        "line": 22,
        "fullcodeline": "field_name = \"placeholder\";"
    }
]