[
    {
        "line": 5,
        "fullcodeline": "AP4_MemoryByteStream* memory = new AP4_MemoryByteStream();"
    },
    {
        "line": 6,
        "fullcodeline": "AP4_Size payload_size = 8;"
    },
    {
        "line": 7,
        "fullcodeline": "m_Source = memory;"
    },
    {
        "line": 64,
        "fullcodeline": "const AP4_String& language = value.GetLanguage();"
    },
    {
        "line": 72,
        "fullcodeline": "m_Size32 += payload_size;"
    },
    {
        "line": 9,
        "fullcodeline": "switch (value.GetType()) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (language == \"en\") {"
    },
    {
        "line": 45,
        "fullcodeline": "m_DataType = DATA_TYPE_JPEG;"
    },
    {
        "line": 66,
        "fullcodeline": "m_DataLang = LANGUAGE_ENGLISH;"
    },
    {
        "line": 11,
        "fullcodeline": "m_DataType = DATA_TYPE_STRING_UTF_8;"
    },
    {
        "line": 12,
        "fullcodeline": "AP4_String string_value = value.ToString();"
    },
    {
        "line": 16,
        "fullcodeline": "payload_size += string_value.GetLength();"
    },
    {
        "line": 21,
        "fullcodeline": "m_DataType = DATA_TYPE_SIGNED_INT_BE;"
    },
    {
        "line": 22,
        "fullcodeline": "AP4_UI08 int_value = (AP4_UI08)value.ToInteger();"
    },
    {
        "line": 23,
        "fullcodeline": "memory->Write(&int_value, 1);"
    },
    {
        "line": 24,
        "fullcodeline": "payload_size += 1;"
    },
    {
        "line": 29,
        "fullcodeline": "m_DataType = DATA_TYPE_SIGNED_INT_BE;"
    },
    {
        "line": 30,
        "fullcodeline": "AP4_UI16 int_value = (AP4_UI16)value.ToInteger();"
    },
    {
        "line": 31,
        "fullcodeline": "memory->Write(&int_value, 2);"
    },
    {
        "line": 32,
        "fullcodeline": "payload_size += 2;"
    },
    {
        "line": 37,
        "fullcodeline": "m_DataType = DATA_TYPE_SIGNED_INT_BE;"
    },
    {
        "line": 38,
        "fullcodeline": "AP4_UI32 int_value = (AP4_UI32)value.ToInteger();"
    },
    {
        "line": 39,
        "fullcodeline": "memory->Write(&int_value, 4);"
    },
    {
        "line": 40,
        "fullcodeline": "payload_size += 4;"
    },
    {
        "line": 48,
        "fullcodeline": "if (m_DataType == DATA_TYPE_BINARY) m_DataType = DATA_TYPE_GIF;"
    },
    {
        "line": 52,
        "fullcodeline": "value.ToBytes(buffer);"
    },
    {
        "line": 56,
        "fullcodeline": "payload_size += buffer.GetDataSize();"
    },
    {
        "line": 69,
        "fullcodeline": "m_DataLang = LANGUAGE_ENGLISH;"
    },
    {
        "line": 13,
        "fullcodeline": "if (string_value.GetLength()) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (buffer.GetDataSize()) {"
    },
    {
        "line": 14,
        "fullcodeline": "memory->Write(string_value.GetChars(), string_value.GetLength());"
    },
    {
        "line": 54,
        "fullcodeline": "memory->Write(buffer.GetData(), buffer.GetDataSize());"
    }
]