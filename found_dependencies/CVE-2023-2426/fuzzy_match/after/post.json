[
    {
        "line": 9,
        "fullcodeline": "int\t\trecursionCount = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "int\t\tlen = MB_CHARLEN(str);"
    },
    {
        "line": 14,
        "fullcodeline": "int\t\tcomplete = FALSE;"
    },
    {
        "line": 15,
        "fullcodeline": "int\t\tscore = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "int\t\tnumMatches = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "*outScore = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "save_pat = vim_strsave(pat_arg);"
    },
    {
        "line": 24,
        "fullcodeline": "pat = save_pat;"
    },
    {
        "line": 25,
        "fullcodeline": "p = pat;"
    },
    {
        "line": 73,
        "fullcodeline": "vim_free(save_pat);"
    },
    {
        "line": 22,
        "fullcodeline": "if (save_pat == NULL)"
    },
    {
        "line": 74,
        "fullcodeline": "return numMatches != 0;"
    },
    {
        "line": 51,
        "fullcodeline": "score = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "recursionCount = 0;"
    },
    {
        "line": 53,
        "fullcodeline": "matchCount = fuzzy_match_recursive(pat, str, 0, &score, str, len, NULL,"
    },
    {
        "line": 63,
        "fullcodeline": "*outScore += score;"
    },
    {
        "line": 64,
        "fullcodeline": "numMatches += matchCount;"
    },
    {
        "line": 70,
        "fullcodeline": "++p;"
    },
    {
        "line": 56,
        "fullcodeline": "if (matchCount == 0)"
    },
    {
        "line": 31,
        "fullcodeline": "complete = TRUE;"
    },
    {
        "line": 54,
        "fullcodeline": "matches + numMatches, maxMatches - numMatches,"
    },
    {
        "line": 58,
        "fullcodeline": "numMatches = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "p = skipwhite(p);"
    },
    {
        "line": 38,
        "fullcodeline": "pat = p;"
    },
    {
        "line": 48,
        "fullcodeline": "*p = NUL;"
    },
    {
        "line": 36,
        "fullcodeline": "if (*p == NUL)"
    },
    {
        "line": 39,
        "fullcodeline": "while (*p != NUL && !VIM_ISWHITE(PTR2CHAR(p)))"
    },
    {
        "line": 46,
        "fullcodeline": "if (*p == NUL)\t\t// processed all the words"
    },
    {
        "line": 47,
        "fullcodeline": "complete = TRUE;"
    },
    {
        "line": 42,
        "fullcodeline": "MB_PTR_ADV(p);"
    },
    {
        "line": 44,
        "fullcodeline": "++p;"
    }
]