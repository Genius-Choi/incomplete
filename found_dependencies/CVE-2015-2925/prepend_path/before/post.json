[
    {
        "line": 8,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned seq, m_seq = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 15,
        "fullcodeline": "read_seqbegin_or_lock(&mount_lock, &m_seq);"
    },
    {
        "line": 16,
        "fullcodeline": "seq = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 21,
        "fullcodeline": "error = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "dentry = path->dentry;"
    },
    {
        "line": 23,
        "fullcodeline": "vfsmnt = path->mnt;"
    },
    {
        "line": 24,
        "fullcodeline": "mnt = real_mount(vfsmnt);"
    },
    {
        "line": 25,
        "fullcodeline": "read_seqbegin_or_lock(&rename_lock, &seq);"
    },
    {
        "line": 56,
        "fullcodeline": "done_seqretry(&rename_lock, seq);"
    },
    {
        "line": 64,
        "fullcodeline": "done_seqretry(&mount_lock, m_seq);"
    },
    {
        "line": 72,
        "fullcodeline": "*buffer = bptr;"
    },
    {
        "line": 73,
        "fullcodeline": "*buflen = blen;"
    },
    {
        "line": 26,
        "fullcodeline": "while (dentry != root->dentry || vfsmnt != root->mnt) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (!(seq & 1))"
    },
    {
        "line": 52,
        "fullcodeline": "if (need_seqretry(&rename_lock, seq)) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (!(m_seq & 1))"
    },
    {
        "line": 60,
        "fullcodeline": "if (need_seqretry(&mount_lock, m_seq)) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (error >= 0 && bptr == *buffer) {"
    },
    {
        "line": 42,
        "fullcodeline": "parent = dentry->d_parent;"
    },
    {
        "line": 43,
        "fullcodeline": "prefetch(parent);"
    },
    {
        "line": 44,
        "fullcodeline": "error = prepend_name(&bptr, &blen, &dentry->d_name);"
    },
    {
        "line": 48,
        "fullcodeline": "dentry = parent;"
    },
    {
        "line": 51,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 53,
        "fullcodeline": "seq = 1;"
    },
    {
        "line": 59,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 61,
        "fullcodeline": "m_seq = 1;"
    },
    {
        "line": 29,
        "fullcodeline": "if (dentry == vfsmnt->mnt_root || IS_ROOT(dentry)) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (--blen < 0)"
    },
    {
        "line": 30,
        "fullcodeline": "struct mount *parent = ACCESS_ONCE(mnt->mnt_parent);"
    },
    {
        "line": 68,
        "fullcodeline": "error = -ENAMETOOLONG;"
    },
    {
        "line": 32,
        "fullcodeline": "if (mnt != parent) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (!error)"
    },
    {
        "line": 70,
        "fullcodeline": "*--bptr = '/';"
    },
    {
        "line": 33,
        "fullcodeline": "dentry = ACCESS_ONCE(mnt->mnt_mountpoint);"
    },
    {
        "line": 34,
        "fullcodeline": "mnt = parent;"
    },
    {
        "line": 39,
        "fullcodeline": "error = is_mounted(vfsmnt) ? 1 : 2;"
    }
]