[
    {
        "line": 3,
        "fullcodeline": "struct inode *inode = nd->inode;"
    },
    {
        "line": 53,
        "fullcodeline": "nd->inode = inode;"
    },
    {
        "line": 41,
        "fullcodeline": "while (unlikely(d_mountpoint(nd->path.dentry))) {"
    },
    {
        "line": 5,
        "fullcodeline": "set_root_rcu(nd);"
    },
    {
        "line": 43,
        "fullcodeline": "mounted = __lookup_mnt(nd->path.mnt, nd->path.dentry);"
    },
    {
        "line": 48,
        "fullcodeline": "nd->path.mnt = &mounted->mnt;"
    },
    {
        "line": 51,
        "fullcodeline": "nd->seq = read_seqcount_begin(&nd->path.dentry->d_seq);"
    },
    {
        "line": 8,
        "fullcodeline": "if (path_equal(&nd->path, &nd->root))"
    },
    {
        "line": 10,
        "fullcodeline": "if (nd->path.dentry != nd->path.mnt->mnt_root) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (unlikely(read_seqretry(&mount_lock, nd->m_seq)))"
    },
    {
        "line": 46,
        "fullcodeline": "if (!mounted)"
    },
    {
        "line": 11,
        "fullcodeline": "struct dentry *old = nd->path.dentry;"
    },
    {
        "line": 12,
        "fullcodeline": "struct dentry *parent = old->d_parent;"
    },
    {
        "line": 15,
        "fullcodeline": "inode = parent->d_inode;"
    },
    {
        "line": 16,
        "fullcodeline": "seq = read_seqcount_begin(&parent->d_seq);"
    },
    {
        "line": 19,
        "fullcodeline": "nd->path.dentry = parent;"
    },
    {
        "line": 20,
        "fullcodeline": "nd->seq = seq;"
    },
    {
        "line": 17,
        "fullcodeline": "if (unlikely(read_seqcount_retry(&old->d_seq, nd->seq)))"
    },
    {
        "line": 21,
        "fullcodeline": "if (unlikely(!path_connected(&nd->path)))"
    },
    {
        "line": 25,
        "fullcodeline": "struct mount *mnt = real_mount(nd->path.mnt);"
    },
    {
        "line": 26,
        "fullcodeline": "struct mount *mparent = mnt->mnt_parent;"
    },
    {
        "line": 27,
        "fullcodeline": "struct dentry *mountpoint = mnt->mnt_mountpoint;"
    },
    {
        "line": 28,
        "fullcodeline": "struct inode *inode2 = mountpoint->d_inode;"
    },
    {
        "line": 29,
        "fullcodeline": "unsigned seq = read_seqcount_begin(&mountpoint->d_seq);"
    },
    {
        "line": 35,
        "fullcodeline": "nd->path.dentry = mountpoint;"
    },
    {
        "line": 36,
        "fullcodeline": "nd->path.mnt = &mparent->mnt;"
    },
    {
        "line": 37,
        "fullcodeline": "inode = inode2;"
    },
    {
        "line": 38,
        "fullcodeline": "nd->seq = seq;"
    },
    {
        "line": 45,
        "fullcodeline": "return -ECHILD;"
    },
    {
        "line": 30,
        "fullcodeline": "if (unlikely(read_seqretry(&mount_lock, nd->m_seq)))"
    },
    {
        "line": 32,
        "fullcodeline": "if (&mparent->mnt == nd->path.mnt)"
    },
    {
        "line": 18,
        "fullcodeline": "return -ECHILD;"
    },
    {
        "line": 22,
        "fullcodeline": "return -ENOENT;"
    },
    {
        "line": 31,
        "fullcodeline": "return -ECHILD;"
    }
]