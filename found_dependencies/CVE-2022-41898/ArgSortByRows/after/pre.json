[
    {
        "line": 5,
        "fullcodeline": "DataType index_type = DataTypeToEnum<Tindex>::value;"
    },
    {
        "line": 8,
        "fullcodeline": "TF_RETURN_IF_ERROR("
    },
    {
        "line": 10,
        "fullcodeline": "auto row_indices = row_indices_t.flat<Tindex>();"
    },
    {
        "line": 17,
        "fullcodeline": "TF_RETURN_IF_ERROR(context->allocate_temp(index_type, TensorShape({N}),"
    },
    {
        "line": 19,
        "fullcodeline": "Tindex* input_index_map = input_index_map_t->flat<Tindex>().data();"
    },
    {
        "line": 9,
        "fullcodeline": "context->allocate_temp(index_type, TensorShape({N}), &row_indices_t));"
    },
    {
        "line": 11,
        "fullcodeline": "if (N > 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "return GpuRadixSort(context, /*size=*/N, /*keys_in=*/row_indices.data(),"
    },
    {
        "line": 12,
        "fullcodeline": "TF_RETURN_IF_ERROR(wrap_kernel_call(CopyRowIndicesKernel<Tindex>,"
    },
    {
        "line": 24,
        "fullcodeline": "/*num_bits=*/Log2Ceiling64(dense_rows));"
    }
]