[
    {
        "line": 3,
        "fullcodeline": "int ret = 0, status;"
    },
    {
        "line": 5,
        "fullcodeline": "BN_CTX *ctx = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "BIGNUM *gcd = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "nbits = BN_num_bits(rsa->n);"
    },
    {
        "line": 37,
        "fullcodeline": "ctx = BN_CTX_new_ex(rsa->libctx);"
    },
    {
        "line": 38,
        "fullcodeline": "gcd = BN_new();"
    },
    {
        "line": 53,
        "fullcodeline": "ret = ossl_bn_miller_rabin_is_prime(rsa->n, 5, ctx, NULL, 1, &status);"
    },
    {
        "line": 66,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 8,
        "fullcodeline": "if (rsa->n == NULL || rsa->e == NULL)"
    },
    {
        "line": 12,
        "fullcodeline": "if (nbits > OPENSSL_RSA_MAX_MODULUS_BITS) {"
    },
    {
        "line": 13,
        "fullcodeline": "ERR_raise(ERR_LIB_RSA, RSA_R_MODULUS_TOO_LARGE);"
    },
    {
        "line": 27,
        "fullcodeline": "if (!BN_is_odd(rsa->n)) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (!ossl_rsa_check_public_exponent(rsa->e)) {"
    },
    {
        "line": 33,
        "fullcodeline": "ERR_raise(ERR_LIB_RSA, RSA_R_PUB_EXPONENT_OUT_OF_RANGE);"
    },
    {
        "line": 39,
        "fullcodeline": "if (ctx == NULL || gcd == NULL)"
    },
    {
        "line": 46,
        "fullcodeline": "if (!BN_gcd(gcd, rsa->n, ossl_bn_get0_small_factors(), ctx)"
    },
    {
        "line": 47,
        "fullcodeline": "|| !BN_is_one(gcd)) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (ret != 1 || (status != BN_PRIMETEST_COMPOSITE_NOT_POWER_OF_PRIME"
    },
    {
        "line": 62,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "&& (nbits >= RSA_MIN_MODULUS_BITS"
    },
    {
        "line": 59,
        "fullcodeline": "|| status != BN_PRIMETEST_COMPOSITE_WITH_FACTOR))) {"
    }
]