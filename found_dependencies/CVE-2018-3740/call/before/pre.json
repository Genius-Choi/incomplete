[
    {
        "line": 2,
        "fullcodeline": "node = env[:node]"
    },
    {
        "line": 5,
        "fullcodeline": "name = env[:node_name]"
    },
    {
        "line": 32,
        "fullcodeline": "attr_whitelist = @attributes[name] || @attributes[:all]"
    },
    {
        "line": 3,
        "fullcodeline": "return if node.type != Nokogiri::XML::Node::ELEMENT_NODE || env[:is_whitelisted]"
    },
    {
        "line": 13,
        "fullcodeline": "unless @elements.include?(name) || node.parent.nil?"
    },
    {
        "line": 16,
        "fullcodeline": "if @whitespace_elements.include?(name)"
    },
    {
        "line": 38,
        "fullcodeline": "allow_data_attributes = attr_whitelist.include?(:data)"
    },
    {
        "line": 74,
        "fullcodeline": "if @add_attributes.include?(name)"
    },
    {
        "line": 75,
        "fullcodeline": "@add_attributes[name].each {|key, val| node[key] = val }"
    },
    {
        "line": 17,
        "fullcodeline": "node.add_previous_sibling(Nokogiri::XML::Text.new(@whitespace_elements[name][:before].to_s, node.document))"
    },
    {
        "line": 24,
        "fullcodeline": "unless @remove_all_contents || @remove_element_contents.include?(name)"
    },
    {
        "line": 36,
        "fullcodeline": "node.attribute_nodes.each {|attr| attr.unlink }"
    },
    {
        "line": 41,
        "fullcodeline": "node.attribute_nodes.each do |attr|"
    },
    {
        "line": 20,
        "fullcodeline": "node.add_next_sibling(Nokogiri::XML::Text.new(@whitespace_elements[name][:after].to_s, node.document))"
    }
]