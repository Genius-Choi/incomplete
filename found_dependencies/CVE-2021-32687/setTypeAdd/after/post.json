[
    {
        "line": 3,
        "fullcodeline": "if (subject->encoding == OBJ_ENCODING_HT) {"
    },
    {
        "line": 4,
        "fullcodeline": "dict *ht = subject->ptr;"
    },
    {
        "line": 5,
        "fullcodeline": "dictEntry *de = dictAddRaw(ht,value,NULL);"
    },
    {
        "line": 7,
        "fullcodeline": "dictSetKey(ht,de,sdsdup(value));"
    },
    {
        "line": 8,
        "fullcodeline": "dictSetVal(ht,de,NULL);"
    },
    {
        "line": 11,
        "fullcodeline": "} else if (subject->encoding == OBJ_ENCODING_INTSET) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (isSdsRepresentableAsLongLong(value,&llval) == C_OK) {"
    },
    {
        "line": 35,
        "fullcodeline": "serverPanic(\"Unknown set encoding\");"
    },
    {
        "line": 13,
        "fullcodeline": "uint8_t success = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "subject->ptr = intsetAdd(subject->ptr,llval,&success);"
    },
    {
        "line": 27,
        "fullcodeline": "setTypeConvert(subject,OBJ_ENCODING_HT);"
    },
    {
        "line": 31,
        "fullcodeline": "serverAssert(dictAdd(subject->ptr,sdsdup(value),NULL) == DICT_OK);"
    },
    {
        "line": 20,
        "fullcodeline": "if (max_entries >= 1<<30) max_entries = 1<<30;"
    },
    {
        "line": 21,
        "fullcodeline": "if (intsetLen(subject->ptr) > max_entries)"
    },
    {
        "line": 22,
        "fullcodeline": "setTypeConvert(subject,OBJ_ENCODING_HT);"
    }
]