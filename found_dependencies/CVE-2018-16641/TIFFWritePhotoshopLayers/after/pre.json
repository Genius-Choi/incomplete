[
    {
        "line": 29,
        "fullcodeline": "base_image=CloneImage(image,0,0,MagickFalse,exception);"
    },
    {
        "line": 32,
        "fullcodeline": "clone_info=CloneImageInfo(image_info);"
    },
    {
        "line": 36,
        "fullcodeline": "profile.offset=0;"
    },
    {
        "line": 37,
        "fullcodeline": "profile.quantum=MagickMinBlobExtent;"
    },
    {
        "line": 38,
        "fullcodeline": "layers=AcquireStringInfo(profile.quantum);"
    },
    {
        "line": 46,
        "fullcodeline": "profile.data=layers;"
    },
    {
        "line": 47,
        "fullcodeline": "profile.extent=layers->length;"
    },
    {
        "line": 48,
        "fullcodeline": "custom_stream=TIFFAcquireCustomStreamForWriting(&profile,exception);"
    },
    {
        "line": 57,
        "fullcodeline": "blob=CloneBlobInfo((BlobInfo *) NULL);"
    },
    {
        "line": 67,
        "fullcodeline": "DestroyBlob(base_image);"
    },
    {
        "line": 68,
        "fullcodeline": "base_image->blob=blob;"
    },
    {
        "line": 69,
        "fullcodeline": "next=base_image;"
    },
    {
        "line": 72,
        "fullcodeline": "AttachCustomStream(base_image->blob,custom_stream);"
    },
    {
        "line": 73,
        "fullcodeline": "InitPSDInfo(image,&info);"
    },
    {
        "line": 74,
        "fullcodeline": "base_image->endian=endian;"
    },
    {
        "line": 75,
        "fullcodeline": "WriteBlobString(base_image,\"Adobe Photoshop Document Data Block\");"
    },
    {
        "line": 76,
        "fullcodeline": "WriteBlobByte(base_image,0);"
    },
    {
        "line": 77,
        "fullcodeline": "WriteBlobString(base_image,base_image->endian == LSBEndian ? \"MIB8ryaL\" :"
    },
    {
        "line": 79,
        "fullcodeline": "status=WritePSDLayers(base_image,clone_info,&info,exception);"
    },
    {
        "line": 85,
        "fullcodeline": "next=base_image;"
    },
    {
        "line": 30,
        "fullcodeline": "if (base_image == (Image *) NULL)"
    },
    {
        "line": 33,
        "fullcodeline": "if (clone_info == (ImageInfo *) NULL)"
    },
    {
        "line": 39,
        "fullcodeline": "if (layers == (StringInfo *) NULL)"
    },
    {
        "line": 49,
        "fullcodeline": "if (custom_stream == (CustomStreamInfo *) NULL)"
    },
    {
        "line": 58,
        "fullcodeline": "if (blob == (BlobInfo *) NULL)"
    },
    {
        "line": 70,
        "fullcodeline": "while (next != (Image *) NULL)"
    },
    {
        "line": 71,
        "fullcodeline": "next=SyncNextImageInList(next);"
    },
    {
        "line": 80,
        "fullcodeline": "if (status != MagickFalse)"
    },
    {
        "line": 86,
        "fullcodeline": "while (next != (Image *) NULL)"
    },
    {
        "line": 91,
        "fullcodeline": "layers=DestroyStringInfo(layers);"
    },
    {
        "line": 92,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 93,
        "fullcodeline": "custom_stream=DestroyCustomStreamInfo(custom_stream);"
    },
    {
        "line": 34,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 41,
        "fullcodeline": "base_image=DestroyImage(base_image);"
    },
    {
        "line": 42,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 43,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 51,
        "fullcodeline": "base_image=DestroyImage(base_image);"
    },
    {
        "line": 52,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 53,
        "fullcodeline": "layers=DestroyStringInfo(layers);"
    },
    {
        "line": 54,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 60,
        "fullcodeline": "base_image=DestroyImage(base_image);"
    },
    {
        "line": 61,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 62,
        "fullcodeline": "layers=DestroyStringInfo(layers);"
    },
    {
        "line": 63,
        "fullcodeline": "custom_stream=DestroyCustomStreamInfo(custom_stream);"
    },
    {
        "line": 64,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 82,
        "fullcodeline": "SetStringInfoLength(layers,(size_t) profile.offset);"
    },
    {
        "line": 83,
        "fullcodeline": "status=SetImageProfile(image,\"tiff:37724\",layers,exception);"
    },
    {
        "line": 88,
        "fullcodeline": "CloseBlob(next);"
    },
    {
        "line": 89,
        "fullcodeline": "next=next->next;"
    }
]