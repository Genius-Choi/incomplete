[
    {
        "line": 8,
        "fullcodeline": "request_rec * volatile parent_req = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "TSRMLS_FETCH();"
    },
    {
        "line": 13,
        "fullcodeline": "conf = ap_get_module_config(r->per_dir_config, &php5_module);"
    },
    {
        "line": 16,
        "fullcodeline": "ctx = SG(server_context);"
    },
    {
        "line": 31,
        "fullcodeline": "apply_config(conf);"
    },
    {
        "line": 141,
        "fullcodeline": "} zend_end_try();"
    },
    {
        "line": 17,
        "fullcodeline": "if (ctx == NULL || (ctx && ctx->request_processed && !strcmp(r->protocol, \"INCLUDED\"))) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (strcmp(r->handler, PHP_MAGIC_TYPE) && strcmp(r->handler, PHP_SOURCE_MAGIC_TYPE) && strcmp(r->handler, PHP_SCRIPT)) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (r->used_path_info == AP_REQ_REJECT_PATH_INFO"
    },
    {
        "line": 50,
        "fullcodeline": "if (!AP2(engine)) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (r->finfo.filetype == 0) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (r->finfo.filetype == APR_DIR) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (r->main == NULL ||"
    },
    {
        "line": 143,
        "fullcodeline": "if (!parent_req) {"
    },
    {
        "line": 19,
        "fullcodeline": "ctx = SG(server_context) = apr_pcalloc(r->pool, sizeof(*ctx));"
    },
    {
        "line": 24,
        "fullcodeline": "apr_pool_cleanup_register(r->pool, (void *)&SG(server_context), php_server_context_cleanup, apr_pool_cleanup_null);"
    },
    {
        "line": 25,
        "fullcodeline": "ctx->r = r;"
    },
    {
        "line": 26,
        "fullcodeline": "ctx = NULL; /* May look weird to null it here, but it is to catch the right case in the first_try later on */"
    },
    {
        "line": 45,
        "fullcodeline": "PHPAP_INI_OFF;"
    },
    {
        "line": 51,
        "fullcodeline": "PHPAP_INI_OFF;"
    },
    {
        "line": 57,
        "fullcodeline": "PHPAP_INI_OFF;"
    },
    {
        "line": 62,
        "fullcodeline": "PHPAP_INI_OFF;"
    },
    {
        "line": 69,
        "fullcodeline": "r->subprocess_env != r->main->subprocess_env"
    },
    {
        "line": 72,
        "fullcodeline": "ap_add_common_vars(r);"
    },
    {
        "line": 73,
        "fullcodeline": "ap_add_cgi_vars(r);"
    },
    {
        "line": 78,
        "fullcodeline": "if (ctx == NULL) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (AP2(last_modified)) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (strncmp(r->handler, PHP_SOURCE_MAGIC_TYPE, sizeof(PHP_SOURCE_MAGIC_TYPE) - 1) == 0) {"
    },
    {
        "line": 145,
        "fullcodeline": "ctx->request_processed = 1;"
    },
    {
        "line": 146,
        "fullcodeline": "bucket = apr_bucket_eos_create(r->connection->bucket_alloc);"
    },
    {
        "line": 147,
        "fullcodeline": "APR_BRIGADE_INSERT_TAIL(brigade, bucket);"
    },
    {
        "line": 149,
        "fullcodeline": "rv = ap_pass_brigade(r->output_filters, brigade);"
    },
    {
        "line": 155,
        "fullcodeline": "apr_brigade_cleanup(brigade);"
    },
    {
        "line": 156,
        "fullcodeline": "apr_pool_cleanup_run(r->pool, (void *)&SG(server_context), php_server_context_cleanup);"
    },
    {
        "line": 28,
        "fullcodeline": "parent_req = ctx->r;"
    },
    {
        "line": 29,
        "fullcodeline": "ctx->r = r;"
    },
    {
        "line": 35,
        "fullcodeline": "if (!AP2(xbithack) || strcmp(r->handler, \"text/html\") || !(r->finfo.protection & APR_UEXECUTE)) {"
    },
    {
        "line": 79,
        "fullcodeline": "brigade = apr_brigade_create(r->pool, r->connection->bucket_alloc);"
    },
    {
        "line": 80,
        "fullcodeline": "ctx = SG(server_context);"
    },
    {
        "line": 81,
        "fullcodeline": "ctx->brigade = brigade;"
    },
    {
        "line": 114,
        "fullcodeline": "ap_update_mtime(r, r->finfo.mtime);"
    },
    {
        "line": 115,
        "fullcodeline": "ap_set_last_modified(r);"
    },
    {
        "line": 121,
        "fullcodeline": "php_get_highlight_struct(&syntax_highlighter_ini);"
    },
    {
        "line": 150,
        "fullcodeline": "if (rv != APR_SUCCESS || r->connection->aborted) {"
    },
    {
        "line": 158,
        "fullcodeline": "ctx->r = parent_req;"
    },
    {
        "line": 36,
        "fullcodeline": "PHPAP_INI_OFF;"
    },
    {
        "line": 109,
        "fullcodeline": "ctx->r = r;"
    },
    {
        "line": 110,
        "fullcodeline": "brigade = ctx->brigade;"
    },
    {
        "line": 126,
        "fullcodeline": "zfd.type = ZEND_HANDLE_FILENAME;"
    },
    {
        "line": 127,
        "fullcodeline": "zfd.filename = (char *) r->filename;"
    },
    {
        "line": 128,
        "fullcodeline": "zfd.free_filename = 0;"
    },
    {
        "line": 129,
        "fullcodeline": "zfd.opened_path = NULL;"
    },
    {
        "line": 153,
        "fullcodeline": "} zend_end_try();"
    },
    {
        "line": 84,
        "fullcodeline": "zend_bailout();"
    },
    {
        "line": 87,
        "fullcodeline": "if (!parent_req) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (parent_req && parent_req->handler &&"
    },
    {
        "line": 105,
        "fullcodeline": "if (parent_req && parent_req->status != HTTP_OK && parent_req->status != 413 && strcmp(r->protocol, \"INCLUDED\")) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (!parent_req) {"
    },
    {
        "line": 152,
        "fullcodeline": "php_handle_aborted_connection();"
    },
    {
        "line": 88,
        "fullcodeline": "parent_req = ctx->r;"
    },
    {
        "line": 93,
        "fullcodeline": "strcmp(parent_req->handler, PHP_SCRIPT)) {"
    },
    {
        "line": 106,
        "fullcodeline": "parent_req = NULL;"
    },
    {
        "line": 92,
        "fullcodeline": "strcmp(parent_req->handler, PHP_SOURCE_MAGIC_TYPE) &&"
    },
    {
        "line": 91,
        "fullcodeline": "strcmp(parent_req->handler, PHP_MAGIC_TYPE) &&"
    },
    {
        "line": 95,
        "fullcodeline": "zend_bailout();"
    }
]