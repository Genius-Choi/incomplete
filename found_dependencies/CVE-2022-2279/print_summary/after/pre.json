[
    {
        "line": 2,
        "fullcodeline": "char *title = mobi_meta_get_title(m);"
    },
    {
        "line": 7,
        "fullcodeline": "char *author = mobi_meta_get_author(m);"
    },
    {
        "line": 12,
        "fullcodeline": "char *contributor = mobi_meta_get_contributor(m);"
    },
    {
        "line": 13,
        "fullcodeline": "uint32_t major = 0, minor = 0, build = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "bool is_calibre = false;"
    },
    {
        "line": 25,
        "fullcodeline": "char *subject = mobi_meta_get_subject(m);"
    },
    {
        "line": 30,
        "fullcodeline": "char *publisher = mobi_meta_get_publisher(m);"
    },
    {
        "line": 35,
        "fullcodeline": "char *date = mobi_meta_get_publishdate(m);"
    },
    {
        "line": 40,
        "fullcodeline": "char *description = mobi_meta_get_description(m);"
    },
    {
        "line": 45,
        "fullcodeline": "char *review = mobi_meta_get_review(m);"
    },
    {
        "line": 50,
        "fullcodeline": "char *imprint = mobi_meta_get_imprint(m);"
    },
    {
        "line": 55,
        "fullcodeline": "char *copyright = mobi_meta_get_copyright(m);"
    },
    {
        "line": 60,
        "fullcodeline": "char *isbn = mobi_meta_get_isbn(m);"
    },
    {
        "line": 65,
        "fullcodeline": "char *asin = mobi_meta_get_asin(m);"
    },
    {
        "line": 70,
        "fullcodeline": "char *language = mobi_meta_get_language(m);"
    },
    {
        "line": 94,
        "fullcodeline": "printf(\"__\\n\");"
    },
    {
        "line": 84,
        "fullcodeline": "if (mobi_is_dictionary(m)) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (strcmp(m->ph->type, \"TEXt\") == 0) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (mobi_is_replica(m)) {"
    },
    {
        "line": 114,
        "fullcodeline": "if (mobi_is_encrypted(m)) {"
    },
    {
        "line": 4,
        "fullcodeline": "printf(\"Title: %s\\n\", title);"
    },
    {
        "line": 5,
        "fullcodeline": "free(title);"
    },
    {
        "line": 9,
        "fullcodeline": "printf(\"Author: %s\\n\", author);"
    },
    {
        "line": 10,
        "fullcodeline": "free(author);"
    },
    {
        "line": 16,
        "fullcodeline": "const char *calibre_contributor = \"calibre (\";"
    },
    {
        "line": 23,
        "fullcodeline": "free(contributor);"
    },
    {
        "line": 27,
        "fullcodeline": "printf(\"Subject: %s\\n\", subject);"
    },
    {
        "line": 28,
        "fullcodeline": "free(subject);"
    },
    {
        "line": 32,
        "fullcodeline": "printf(\"Publisher: %s\\n\", publisher);"
    },
    {
        "line": 33,
        "fullcodeline": "free(publisher);"
    },
    {
        "line": 37,
        "fullcodeline": "printf(\"Publishing date: %s\\n\", date);"
    },
    {
        "line": 38,
        "fullcodeline": "free(date);"
    },
    {
        "line": 42,
        "fullcodeline": "printf(\"Description: %s\\n\", description);"
    },
    {
        "line": 43,
        "fullcodeline": "free(description);"
    },
    {
        "line": 47,
        "fullcodeline": "printf(\"Review: %s\\n\", review);"
    },
    {
        "line": 48,
        "fullcodeline": "free(review);"
    },
    {
        "line": 52,
        "fullcodeline": "printf(\"Imprint: %s\\n\", imprint);"
    },
    {
        "line": 53,
        "fullcodeline": "free(imprint);"
    },
    {
        "line": 57,
        "fullcodeline": "printf(\"Copyright: %s\\n\", copyright);"
    },
    {
        "line": 58,
        "fullcodeline": "free(copyright);"
    },
    {
        "line": 62,
        "fullcodeline": "printf(\"ISBN: %s\\n\", isbn);"
    },
    {
        "line": 63,
        "fullcodeline": "free(isbn);"
    },
    {
        "line": 67,
        "fullcodeline": "printf(\"ASIN: %s\\n\", asin);"
    },
    {
        "line": 68,
        "fullcodeline": "free(asin);"
    },
    {
        "line": 72,
        "fullcodeline": "printf(\"Language: %s\", language);"
    },
    {
        "line": 73,
        "fullcodeline": "free(language);"
    },
    {
        "line": 82,
        "fullcodeline": "printf(\"\\n\");"
    },
    {
        "line": 85,
        "fullcodeline": "printf(\"Dictionary\");"
    },
    {
        "line": 92,
        "fullcodeline": "printf(\"\\n\");"
    },
    {
        "line": 112,
        "fullcodeline": "printf(\"Print Replica\\n\");"
    },
    {
        "line": 115,
        "fullcodeline": "printf(\"Document is encrypted\\n\");"
    },
    {
        "line": 118,
        "fullcodeline": "printf(\"Creator software: calibre %u.%u.%u\\n\", major, minor, build);"
    },
    {
        "line": 17,
        "fullcodeline": "if (strncmp(contributor, calibre_contributor, strlen(calibre_contributor)) == 0) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (m->mh && m->mh->text_encoding) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (m->mh && m->mh->dict_input_lang && m->mh->dict_output_lang &&"
    },
    {
        "line": 96,
        "fullcodeline": "if (strcmp(m->ph->creator, \"TlDc\") == 0) {"
    },
    {
        "line": 102,
        "fullcodeline": "printf(\"Mobi version: %zu\", mobi_get_fileversion(m));"
    },
    {
        "line": 109,
        "fullcodeline": "printf(\"\\n\");"
    },
    {
        "line": 120,
        "fullcodeline": "MOBIExthHeader *exth = mobi_get_exthrecord_by_tag(m, EXTH_CREATORSOFT);"
    },
    {
        "line": 18,
        "fullcodeline": "is_calibre = true;"
    },
    {
        "line": 19,
        "fullcodeline": "sscanf(contributor, \"calibre (%u.%u.%u)\", &major, &minor, &build);"
    },
    {
        "line": 75,
        "fullcodeline": "uint32_t encoding = *m->mh->text_encoding;"
    },
    {
        "line": 88,
        "fullcodeline": "const char *locale_in = mobi_get_locale_string(*m->mh->dict_input_lang);"
    },
    {
        "line": 89,
        "fullcodeline": "const char *locale_out = mobi_get_locale_string(*m->mh->dict_output_lang);"
    },
    {
        "line": 90,
        "fullcodeline": "printf(\": %s => %s\", locale_in ? locale_in : \"unknown\", locale_out ? locale_out : \"unknown\");"
    },
    {
        "line": 97,
        "fullcodeline": "printf(\"TealDoc\\n\");"
    },
    {
        "line": 103,
        "fullcodeline": "if (mobi_is_hybrid(m)) {"
    },
    {
        "line": 21,
        "fullcodeline": "printf(\"Contributor: %s\\n\", contributor);"
    },
    {
        "line": 76,
        "fullcodeline": "if (encoding == MOBI_CP1252) {"
    },
    {
        "line": 99,
        "fullcodeline": "printf(\"PalmDoc\\n\");"
    },
    {
        "line": 104,
        "fullcodeline": "size_t version = mobi_get_fileversion(m->next);"
    },
    {
        "line": 124,
        "fullcodeline": "exth = mobi_get_exthrecord_by_tag(m, EXTH_CREATORMAJOR);"
    },
    {
        "line": 128,
        "fullcodeline": "exth = mobi_get_exthrecord_by_tag(m, EXTH_CREATORMINOR);"
    },
    {
        "line": 132,
        "fullcodeline": "exth = mobi_get_exthrecord_by_tag(m, EXTH_CREATORBUILD);"
    },
    {
        "line": 136,
        "fullcodeline": "exth = mobi_get_exthrecord_by_tag(m, EXTH_CREATORBUILDREV);"
    },
    {
        "line": 77,
        "fullcodeline": "printf(\" (cp1252)\");"
    },
    {
        "line": 105,
        "fullcodeline": "if (version != MOBI_NOTSET) {"
    },
    {
        "line": 123,
        "fullcodeline": "uint32_t creator = mobi_decode_exthvalue(exth->data, exth->size);"
    },
    {
        "line": 137,
        "fullcodeline": "if (major == 2 && minor == 9 && build == 0 && exth) {"
    },
    {
        "line": 106,
        "fullcodeline": "printf(\" (hybrid with version %zu)\", version);"
    },
    {
        "line": 126,
        "fullcodeline": "major = mobi_decode_exthvalue(exth->data, exth->size);"
    },
    {
        "line": 130,
        "fullcodeline": "minor = mobi_decode_exthvalue(exth->data, exth->size);"
    },
    {
        "line": 134,
        "fullcodeline": "build = mobi_decode_exthvalue(exth->data, exth->size);"
    },
    {
        "line": 138,
        "fullcodeline": "char *rev = mobi_decode_exthstring(m, exth->data, exth->size);"
    },
    {
        "line": 164,
        "fullcodeline": "printf(\"kindlegen %u.%u.%u (linux)\", major, minor, build);"
    },
    {
        "line": 78,
        "fullcodeline": "} else if (encoding == MOBI_UTF8) {"
    },
    {
        "line": 79,
        "fullcodeline": "printf(\" (utf8)\");"
    },
    {
        "line": 165,
        "fullcodeline": "if ((major == 1 && minor == 2 && build == 33307) ||"
    },
    {
        "line": 166,
        "fullcodeline": "(major == 2 && minor == 0 && build == 101) ||"
    },
    {
        "line": 140,
        "fullcodeline": "if (strcmp(rev, \"0730-890adc2\") == 0) {"
    },
    {
        "line": 141,
        "fullcodeline": "is_calibre = true;"
    }
]