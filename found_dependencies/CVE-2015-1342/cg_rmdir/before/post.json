[
    {
        "line": 3,
        "fullcodeline": "struct fuse_context *fc = fuse_get_context();"
    },
    {
        "line": 4,
        "fullcodeline": "char *fpath = NULL, *cgdir = NULL, *controller;"
    },
    {
        "line": 11,
        "fullcodeline": "controller = pick_controller_from_path(fc, path);"
    },
    {
        "line": 15,
        "fullcodeline": "cgroup = find_cgroup_in_path(path);"
    },
    {
        "line": 19,
        "fullcodeline": "get_cgdir_and_path(cgroup, &cgdir, &fpath);"
    },
    {
        "line": 25,
        "fullcodeline": "fprintf(stderr, \"rmdir: verifying access to %s:%s (req path %s)\\n\","
    },
    {
        "line": 41,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "free(cgdir);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!fc)"
    },
    {
        "line": 12,
        "fullcodeline": "if (!controller)"
    },
    {
        "line": 16,
        "fullcodeline": "if (!cgroup)"
    },
    {
        "line": 20,
        "fullcodeline": "if (!fpath) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (!fc_may_access(fc, controller, cgdir, NULL, O_WRONLY)) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (!caller_is_in_ancestor(fc->pid, controller, cgroup, NULL)) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (!cgfs_remove(controller, cgroup)) {"
    },
    {
        "line": 21,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 28,
        "fullcodeline": "ret = -EACCES;"
    },
    {
        "line": 32,
        "fullcodeline": "ret = -EACCES;"
    },
    {
        "line": 37,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 9,
        "fullcodeline": "return -EIO;"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 17,
        "fullcodeline": "return -EINVAL;"
    }
]