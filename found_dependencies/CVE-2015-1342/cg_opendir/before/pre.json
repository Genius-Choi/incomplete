[
    {
        "line": 3,
        "fullcodeline": "struct fuse_context *fc = fuse_get_context();"
    },
    {
        "line": 6,
        "fullcodeline": "char *controller = NULL;"
    },
    {
        "line": 32,
        "fullcodeline": "dir_info = malloc(sizeof(*dir_info));"
    },
    {
        "line": 35,
        "fullcodeline": "dir_info->controller = must_copy_string(controller);"
    },
    {
        "line": 36,
        "fullcodeline": "dir_info->cgroup = must_copy_string(cgroup);"
    },
    {
        "line": 37,
        "fullcodeline": "dir_info->type = LXC_TYPE_CGDIR;"
    },
    {
        "line": 38,
        "fullcodeline": "dir_info->buf = NULL;"
    },
    {
        "line": 39,
        "fullcodeline": "dir_info->file = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "dir_info->buflen = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!fc)"
    },
    {
        "line": 27,
        "fullcodeline": "if (cgroup && !fc_may_access(fc, controller, cgroup, NULL, O_RDONLY)) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (!dir_info)"
    },
    {
        "line": 11,
        "fullcodeline": "if (strcmp(path, \"/cgroup\") == 0) {"
    },
    {
        "line": 12,
        "fullcodeline": "cgroup = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "controller = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "return -EIO;"
    },
    {
        "line": 16,
        "fullcodeline": "controller = pick_controller_from_path(fc, path);"
    },
    {
        "line": 20,
        "fullcodeline": "cgroup = find_cgroup_in_path(path);"
    },
    {
        "line": 28,
        "fullcodeline": "return -EACCES;"
    },
    {
        "line": 34,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 17,
        "fullcodeline": "if (!controller)"
    },
    {
        "line": 21,
        "fullcodeline": "if (!cgroup) {"
    },
    {
        "line": 23,
        "fullcodeline": "cgroup = \"/\";"
    },
    {
        "line": 18,
        "fullcodeline": "return -EIO;"
    }
]