[
    {
        "line": 3,
        "fullcodeline": "struct fuse_context *fc = fuse_get_context();"
    },
    {
        "line": 4,
        "fullcodeline": "char * cgdir = NULL, *fpath = NULL, *path1, *path2, *controller;"
    },
    {
        "line": 5,
        "fullcodeline": "struct cgfs_files *k = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "controller = pick_controller_from_path(fc, path);"
    },
    {
        "line": 18,
        "fullcodeline": "cgroup = find_cgroup_in_path(path);"
    },
    {
        "line": 23,
        "fullcodeline": "get_cgdir_and_path(cgroup, &cgdir, &fpath);"
    },
    {
        "line": 62,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!fc)"
    },
    {
        "line": 16,
        "fullcodeline": "if (!controller)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!cgroup)"
    },
    {
        "line": 25,
        "fullcodeline": "if (!fpath) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (is_child_cgroup(controller, path1, path2)) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (!k) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (strcmp(path, \"/cgroup\") == 0)"
    },
    {
        "line": 26,
        "fullcodeline": "path1 = \"/\";"
    },
    {
        "line": 27,
        "fullcodeline": "path2 = cgdir;"
    },
    {
        "line": 36,
        "fullcodeline": "k = cgfs_get_key(controller, cgroup, \"tasks\");"
    },
    {
        "line": 42,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 52,
        "fullcodeline": "if (!is_privileged_over(fc->pid, fc->uid, k->uid, NS_ROOT_OPT)) {"
    },
    {
        "line": 53,
        "fullcodeline": "ret = -EPERM;"
    },
    {
        "line": 57,
        "fullcodeline": "if (!cgfs_chmod_file(controller, cgroup, mode)) {"
    },
    {
        "line": 58,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 10,
        "fullcodeline": "return -EIO;"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 17,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 21,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 29,
        "fullcodeline": "path1 = cgdir;"
    },
    {
        "line": 30,
        "fullcodeline": "path2 = fpath;"
    },
    {
        "line": 39,
        "fullcodeline": "k = cgfs_get_key(controller, path1, path2);"
    }
]