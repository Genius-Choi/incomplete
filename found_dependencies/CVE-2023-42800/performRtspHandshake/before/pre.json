[
    {
        "line": 4,
        "fullcodeline": "LC_ASSERT(RtspPortNumber != 0);"
    },
    {
        "line": 7,
        "fullcodeline": "useEnet = (AppVersionQuad[0] >= 5) && (AppVersionQuad[0] <= 7) && (AppVersionQuad[2] < 404);"
    },
    {
        "line": 8,
        "fullcodeline": "currentSeqNumber = 1;"
    },
    {
        "line": 9,
        "fullcodeline": "hasSessionId = false;"
    },
    {
        "line": 10,
        "fullcodeline": "controlStreamId = APP_VERSION_AT_LEAST(7, 1, 431) ? \"streamid=control/13/0\" : \"streamid=control/1/0\";"
    },
    {
        "line": 11,
        "fullcodeline": "AudioEncryptionEnabled = false;"
    },
    {
        "line": 22,
        "fullcodeline": "LC_ASSERT(StreamConfig.streamingRemotely != STREAM_CFG_AUTO);"
    },
    {
        "line": 432,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "if (OriginalVideoBitrate >= HIGH_AUDIO_BITRATE_THRESHOLD &&"
    },
    {
        "line": 104,
        "fullcodeline": "int error = -1;"
    },
    {
        "line": 119,
        "fullcodeline": "freeMessage(&response);"
    },
    {
        "line": 124,
        "fullcodeline": "int error = -1;"
    },
    {
        "line": 183,
        "fullcodeline": "ReferenceFrameInvalidationSupported = strstr(response.payload, \"x-nv-video[0].refPicInvalidation\") != NULL;"
    },
    {
        "line": 194,
        "fullcodeline": "ret = parseOpusConfigurations(&response);"
    },
    {
        "line": 199,
        "fullcodeline": "freeMessage(&response);"
    },
    {
        "line": 206,
        "fullcodeline": "int error = -1;"
    },
    {
        "line": 207,
        "fullcodeline": "char* strtokCtx = NULL;"
    },
    {
        "line": 238,
        "fullcodeline": "pingPayload = getOptionContent(response.options, \"X-SS-Ping-Payload\");"
    },
    {
        "line": 248,
        "fullcodeline": "sessionId = getOptionContent(response.options, \"Session\");"
    },
    {
        "line": 261,
        "fullcodeline": "sessionIdString = strdup(strtok_r(sessionId, \";\", &strtokCtx));"
    },
    {
        "line": 268,
        "fullcodeline": "hasSessionId = true;"
    },
    {
        "line": 270,
        "fullcodeline": "freeMessage(&response);"
    },
    {
        "line": 275,
        "fullcodeline": "int error = -1;"
    },
    {
        "line": 295,
        "fullcodeline": "pingPayload = getOptionContent(response.options, \"X-SS-Ping-Payload\");"
    },
    {
        "line": 312,
        "fullcodeline": "freeMessage(&response);"
    },
    {
        "line": 351,
        "fullcodeline": "int error = -1;"
    },
    {
        "line": 366,
        "fullcodeline": "freeMessage(&response);"
    },
    {
        "line": 448,
        "fullcodeline": "if (sessionIdString != NULL) {"
    },
    {
        "line": 25,
        "fullcodeline": "(StreamConfig.streamingRemotely != STREAM_CFG_REMOTE || CHANNEL_COUNT_FROM_AUDIO_CONFIGURATION(StreamConfig.audioConfiguration) <= 2)) {"
    },
    {
        "line": 47,
        "fullcodeline": "rtspClientVersion = 10;"
    },
    {
        "line": 50,
        "fullcodeline": "rtspClientVersion = 11;"
    },
    {
        "line": 53,
        "fullcodeline": "rtspClientVersion = 12;"
    },
    {
        "line": 57,
        "fullcodeline": "rtspClientVersion = 13;"
    },
    {
        "line": 61,
        "fullcodeline": "rtspClientVersion = 14;"
    },
    {
        "line": 70,
        "fullcodeline": "enet_address_set_address(&address, (struct sockaddr *)&RemoteAddr, RemoteAddrLen);"
    },
    {
        "line": 71,
        "fullcodeline": "enet_address_set_port(&address, RtspPortNumber);"
    },
    {
        "line": 74,
        "fullcodeline": "client = enet_host_create(RemoteAddr.ss_family, NULL, 1, 1, 0, 0);"
    },
    {
        "line": 80,
        "fullcodeline": "peer = enet_host_connect(client, &address, 1, 0);"
    },
    {
        "line": 99,
        "fullcodeline": "enet_host_flush(client);"
    },
    {
        "line": 112,
        "fullcodeline": "if (response.message.response.statusCode != 200) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (response.message.response.statusCode != 200) {"
    },
    {
        "line": 195,
        "fullcodeline": "if (ret != 0) {"
    },
    {
        "line": 217,
        "fullcodeline": "if (response.message.response.statusCode != 200) {"
    },
    {
        "line": 225,
        "fullcodeline": "LC_ASSERT(AudioPortNumber == 0);"
    },
    {
        "line": 250,
        "fullcodeline": "if (sessionId == NULL) {"
    },
    {
        "line": 262,
        "fullcodeline": "if (sessionIdString == NULL) {"
    },
    {
        "line": 286,
        "fullcodeline": "if (response.message.response.statusCode != 200) {"
    },
    {
        "line": 301,
        "fullcodeline": "LC_ASSERT(VideoPortNumber == 0);"
    },
    {
        "line": 317,
        "fullcodeline": "int error = -1;"
    },
    {
        "line": 346,
        "fullcodeline": "freeMessage(&response);"
    },
    {
        "line": 359,
        "fullcodeline": "if (response.message.response.statusCode != 200) {"
    },
    {
        "line": 372,
        "fullcodeline": "int error = -1;"
    },
    {
        "line": 24,
        "fullcodeline": "(AudioCallbacks.capabilities & CAPABILITY_SLOW_OPUS_DECODER) == 0 &&"
    },
    {
        "line": 27,
        "fullcodeline": "if (serverInfo->rtspSessionUrl != NULL && parseUrlAddrFromRtspUrlString(serverInfo->rtspSessionUrl, urlAddr, sizeof(urlAddr))) {"
    },
    {
        "line": 41,
        "fullcodeline": "PltSafeStrcpy(urlAddr, sizeof(urlAddr), \"0.0.0.0\");"
    },
    {
        "line": 42,
        "fullcodeline": "snprintf(rtspTargetUrl, sizeof(rtspTargetUrl), \"rtsp%s://%s:%u\", useEnet ? \"ru\" : \"\", urlAddr, RtspPortNumber);"
    },
    {
        "line": 75,
        "fullcodeline": "if (client == NULL) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (peer == NULL) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (!requestOptions(&response, &error)) {"
    },
    {
        "line": 107,
        "fullcodeline": "Limelog(\"RTSP OPTIONS request failed: %d\\n\", error);"
    },
    {
        "line": 108,
        "fullcodeline": "ret = error;"
    },
    {
        "line": 113,
        "fullcodeline": "Limelog(\"RTSP OPTIONS request failed: %d\\n\","
    },
    {
        "line": 115,
        "fullcodeline": "ret = response.message.response.statusCode;"
    },
    {
        "line": 126,
        "fullcodeline": "if (!requestDescribe(&response, &error)) {"
    },
    {
        "line": 127,
        "fullcodeline": "Limelog(\"RTSP DESCRIBE request failed: %d\\n\", error);"
    },
    {
        "line": 128,
        "fullcodeline": "ret = error;"
    },
    {
        "line": 133,
        "fullcodeline": "Limelog(\"RTSP DESCRIBE request failed: %d\\n\","
    },
    {
        "line": 135,
        "fullcodeline": "ret = response.message.response.statusCode;"
    },
    {
        "line": 139,
        "fullcodeline": "if ((StreamConfig.supportedVideoFormats & VIDEO_FORMAT_MASK_AV1) && strstr(response.payload, \"AV1/90000\")) {"
    },
    {
        "line": 189,
        "fullcodeline": "if (!parseSdpAttributeToUInt(response.payload, \"x-ss-general.featureFlags\", &SunshineFeatureFlags)) {"
    },
    {
        "line": 209,
        "fullcodeline": "if (!setupStream(&response,"
    },
    {
        "line": 212,
        "fullcodeline": "Limelog(\"RTSP SETUP streamid=audio request failed: %d\\n\", error);"
    },
    {
        "line": 213,
        "fullcodeline": "ret = error;"
    },
    {
        "line": 218,
        "fullcodeline": "Limelog(\"RTSP SETUP streamid=audio request failed: %d\\n\","
    },
    {
        "line": 220,
        "fullcodeline": "ret = response.message.response.statusCode;"
    },
    {
        "line": 226,
        "fullcodeline": "if (!parseServerPortFromTransport(&response, &AudioPortNumber)) {"
    },
    {
        "line": 228,
        "fullcodeline": "AudioPortNumber = 48000;"
    },
    {
        "line": 239,
        "fullcodeline": "if (pingPayload != NULL && strlen(pingPayload) == sizeof(AudioPingPayload.payload)) {"
    },
    {
        "line": 252,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 264,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 278,
        "fullcodeline": "if (!setupStream(&response,"
    },
    {
        "line": 281,
        "fullcodeline": "Limelog(\"RTSP SETUP streamid=video request failed: %d\\n\", error);"
    },
    {
        "line": 282,
        "fullcodeline": "ret = error;"
    },
    {
        "line": 287,
        "fullcodeline": "Limelog(\"RTSP SETUP streamid=video request failed: %d\\n\","
    },
    {
        "line": 289,
        "fullcodeline": "ret = response.message.response.statusCode;"
    },
    {
        "line": 296,
        "fullcodeline": "if (pingPayload != NULL && strlen(pingPayload) == sizeof(VideoPingPayload.payload)) {"
    },
    {
        "line": 302,
        "fullcodeline": "if (!parseServerPortFromTransport(&response, &VideoPortNumber)) {"
    },
    {
        "line": 304,
        "fullcodeline": "VideoPortNumber = 47998;"
    },
    {
        "line": 327,
        "fullcodeline": "if (response.message.response.statusCode != 200) {"
    },
    {
        "line": 335,
        "fullcodeline": "LC_ASSERT(ControlPortNumber == 0);"
    },
    {
        "line": 353,
        "fullcodeline": "if (!sendVideoAnnounce(&response, &error)) {"
    },
    {
        "line": 354,
        "fullcodeline": "Limelog(\"RTSP ANNOUNCE request failed: %d\\n\", error);"
    },
    {
        "line": 355,
        "fullcodeline": "ret = error;"
    },
    {
        "line": 360,
        "fullcodeline": "Limelog(\"RTSP ANNOUNCE request failed: %d\\n\","
    },
    {
        "line": 362,
        "fullcodeline": "ret = response.message.response.statusCode;"
    },
    {
        "line": 380,
        "fullcodeline": "if (response.message.response.statusCode != 200) {"
    },
    {
        "line": 437,
        "fullcodeline": "if (peer != NULL) {"
    },
    {
        "line": 442,
        "fullcodeline": "if (client != NULL) {"
    },
    {
        "line": 28,
        "fullcodeline": "strcpy(rtspTargetUrl, serverInfo->rtspSessionUrl);"
    },
    {
        "line": 88,
        "fullcodeline": "if (serviceEnetHost(client, &event, RTSP_CONNECT_TIMEOUT_SEC * 1000) <= 0 ||"
    },
    {
        "line": 89,
        "fullcodeline": "event.type != ENET_EVENT_TYPE_CONNECT) {"
    },
    {
        "line": 319,
        "fullcodeline": "if (!setupStream(&response,"
    },
    {
        "line": 322,
        "fullcodeline": "Limelog(\"RTSP SETUP streamid=control request failed: %d\\n\", error);"
    },
    {
        "line": 323,
        "fullcodeline": "ret = error;"
    },
    {
        "line": 328,
        "fullcodeline": "Limelog(\"RTSP SETUP streamid=control request failed: %d\\n\","
    },
    {
        "line": 330,
        "fullcodeline": "ret = response.message.response.statusCode;"
    },
    {
        "line": 336,
        "fullcodeline": "if (!parseServerPortFromTransport(&response, &ControlPortNumber)) {"
    },
    {
        "line": 338,
        "fullcodeline": "ControlPortNumber = 47999;"
    },
    {
        "line": 374,
        "fullcodeline": "if (!playStream(&response, \"/\", &error)) {"
    },
    {
        "line": 375,
        "fullcodeline": "Limelog(\"RTSP PLAY request failed: %d\\n\", error);"
    },
    {
        "line": 376,
        "fullcodeline": "ret = error;"
    },
    {
        "line": 381,
        "fullcodeline": "Limelog(\"RTSP PLAY failed: %d\\n\","
    },
    {
        "line": 383,
        "fullcodeline": "ret = response.message.response.statusCode;"
    },
    {
        "line": 392,
        "fullcodeline": "int error = -1;"
    },
    {
        "line": 407,
        "fullcodeline": "freeMessage(&response);"
    },
    {
        "line": 412,
        "fullcodeline": "int error = -1;"
    },
    {
        "line": 36,
        "fullcodeline": "addrToUrlSafeString(&RemoteAddr, urlAddr, sizeof(urlAddr));"
    },
    {
        "line": 37,
        "fullcodeline": "snprintf(rtspTargetUrl, sizeof(rtspTargetUrl), \"rtsp%s://%s:%u\", useEnet ? \"ru\" : \"\", urlAddr, RtspPortNumber);"
    },
    {
        "line": 76,
        "fullcodeline": "return -1;"
    },
    {
        "line": 84,
        "fullcodeline": "return -1;"
    },
    {
        "line": 95,
        "fullcodeline": "return -1;"
    },
    {
        "line": 140,
        "fullcodeline": "if ((serverInfo->serverCodecModeSupport & SCM_AV1_MAIN10) && (StreamConfig.supportedVideoFormats & VIDEO_FORMAT_AV1_MAIN10)) {"
    },
    {
        "line": 210,
        "fullcodeline": "AppVersionQuad[0] >= 5 ? \"streamid=audio/0/0\" : \"streamid=audio\","
    },
    {
        "line": 279,
        "fullcodeline": "AppVersionQuad[0] >= 5 ? \"streamid=video/0/0\" : \"streamid=video\","
    },
    {
        "line": 400,
        "fullcodeline": "if (response.message.response.statusCode != 200) {"
    },
    {
        "line": 420,
        "fullcodeline": "if (response.message.response.statusCode != 200) {"
    },
    {
        "line": 144,
        "fullcodeline": "NegotiatedVideoFormat = VIDEO_FORMAT_AV1_MAIN8;"
    },
    {
        "line": 153,
        "fullcodeline": "else if ((StreamConfig.supportedVideoFormats & VIDEO_FORMAT_MASK_H265) && strstr(response.payload, \"sprop-parameter-sets=AAAAAU\")) {"
    },
    {
        "line": 394,
        "fullcodeline": "if (!playStream(&response, \"streamid=video\", &error)) {"
    },
    {
        "line": 395,
        "fullcodeline": "Limelog(\"RTSP PLAY streamid=video request failed: %d\\n\", error);"
    },
    {
        "line": 396,
        "fullcodeline": "ret = error;"
    },
    {
        "line": 401,
        "fullcodeline": "Limelog(\"RTSP PLAY streamid=video failed: %d\\n\","
    },
    {
        "line": 403,
        "fullcodeline": "ret = response.message.response.statusCode;"
    },
    {
        "line": 414,
        "fullcodeline": "if (!playStream(&response, \"streamid=audio\", &error)) {"
    },
    {
        "line": 415,
        "fullcodeline": "Limelog(\"RTSP PLAY streamid=audio request failed: %d\\n\", error);"
    },
    {
        "line": 416,
        "fullcodeline": "ret = error;"
    },
    {
        "line": 421,
        "fullcodeline": "Limelog(\"RTSP PLAY streamid=audio failed: %d\\n\","
    },
    {
        "line": 423,
        "fullcodeline": "ret = response.message.response.statusCode;"
    },
    {
        "line": 147,
        "fullcodeline": "if (StreamConfig.av1BitratePercentageMultiplier != 0) {"
    },
    {
        "line": 174,
        "fullcodeline": "NegotiatedVideoFormat = VIDEO_FORMAT_H264;"
    },
    {
        "line": 148,
        "fullcodeline": "StreamConfig.bitrate *= StreamConfig.av1BitratePercentageMultiplier;"
    },
    {
        "line": 160,
        "fullcodeline": "if ((serverInfo->serverCodecModeSupport & SCM_HEVC_MAIN10) && (StreamConfig.supportedVideoFormats & VIDEO_FORMAT_H265_MAIN10)) {"
    },
    {
        "line": 164,
        "fullcodeline": "NegotiatedVideoFormat = VIDEO_FORMAT_H265;"
    },
    {
        "line": 177,
        "fullcodeline": "if (StreamConfig.width > 4096 || StreamConfig.height > 4096) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (StreamConfig.hevcBitratePercentageMultiplier != 0) {"
    },
    {
        "line": 168,
        "fullcodeline": "StreamConfig.bitrate *= StreamConfig.hevcBitratePercentageMultiplier;"
    }
]