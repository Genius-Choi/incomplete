[
    {
        "line": 5,
        "fullcodeline": "nal_hrd_parameters_present_flag = get_bits(br, 1);"
    },
    {
        "line": 6,
        "fullcodeline": "vcl_hrd_parameters_present_flag = get_bits(br, 1);"
    },
    {
        "line": 8,
        "fullcodeline": "if (nal_hrd_parameters_present_flag || vcl_hrd_parameters_present_flag)"
    },
    {
        "line": 32,
        "fullcodeline": "for (i = 0; i < sps->sps_max_sub_layers; i++)"
    },
    {
        "line": 10,
        "fullcodeline": "sub_pic_hrd_params_present_flag = get_bits(br, 1);"
    },
    {
        "line": 18,
        "fullcodeline": "bit_rate_scale = get_bits(br, 4);"
    },
    {
        "line": 19,
        "fullcodeline": "cpb_size_scale = get_bits(br, 4);"
    },
    {
        "line": 26,
        "fullcodeline": "initial_cpb_removal_delay_length_minus1 = get_bits(br, 5);"
    },
    {
        "line": 27,
        "fullcodeline": "au_cpb_removal_delay_length_minus1 = get_bits(br, 5);"
    },
    {
        "line": 28,
        "fullcodeline": "dpb_output_delay_length_minus1 = get_bits(br, 5);"
    },
    {
        "line": 34,
        "fullcodeline": "fixed_pic_rate_general_flag[i] = get_bits(br, 1);"
    },
    {
        "line": 44,
        "fullcodeline": "low_delay_hrd_flag[i] = 0;// Infered to be 0 when not present"
    },
    {
        "line": 45,
        "fullcodeline": "cpb_cnt_minus1[i] = 0;    // Infered to be 0 when not present"
    },
    {
        "line": 35,
        "fullcodeline": "if (!fixed_pic_rate_general_flag[i])"
    },
    {
        "line": 55,
        "fullcodeline": "if (!low_delay_hrd_flag[i])"
    },
    {
        "line": 63,
        "fullcodeline": "for (nalOrVcl = 0; nalOrVcl < 2; nalOrVcl++)"
    },
    {
        "line": 13,
        "fullcodeline": "tick_divisor_minus2 = get_bits(br, 8);"
    },
    {
        "line": 14,
        "fullcodeline": "du_cpb_removal_delay_increment_length_minus1 = get_bits(br, 5);"
    },
    {
        "line": 15,
        "fullcodeline": "sub_pic_cpb_params_in_pic_timing_sei_flag = get_bits(br, 1);"
    },
    {
        "line": 16,
        "fullcodeline": "dpb_output_delay_du_length_minus1 = get_bits(br, 5);"
    },
    {
        "line": 24,
        "fullcodeline": "cpb_size_du_scale = get_bits(br, 4);"
    },
    {
        "line": 37,
        "fullcodeline": "fixed_pic_rate_within_cvs_flag[i] = get_bits(br, 1);"
    },
    {
        "line": 49,
        "fullcodeline": "READ_VLC_OFFSET(elemental_duration_in_tc_minus1[i], uvlc, 0);"
    },
    {
        "line": 57,
        "fullcodeline": "READ_VLC_OFFSET(cpb_cnt_minus1[i], uvlc, 0);"
    },
    {
        "line": 41,
        "fullcodeline": "fixed_pic_rate_within_cvs_flag[i] = true;"
    },
    {
        "line": 53,
        "fullcodeline": "low_delay_hrd_flag[i] = get_bits(br, 1);"
    },
    {
        "line": 58,
        "fullcodeline": "if (cpb_cnt_minus1[i] > 31) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (((nalOrVcl == 0) && nal_hrd_parameters_present_flag) ||"
    },
    {
        "line": 66,
        "fullcodeline": "((nalOrVcl == 1) && vcl_hrd_parameters_present_flag))"
    },
    {
        "line": 68,
        "fullcodeline": "for (j = 0; j <= cpb_cnt_minus1[i]; j++)"
    },
    {
        "line": 70,
        "fullcodeline": "READ_VLC_OFFSET(bit_rate_value_minus1[i][j][nalOrVcl], uvlc, 0);"
    },
    {
        "line": 71,
        "fullcodeline": "READ_VLC_OFFSET(cpb_size_value_minus1[i][j][nalOrVcl], uvlc, 0);"
    },
    {
        "line": 78,
        "fullcodeline": "cbr_flag[i][j][nalOrVcl] = get_bits(br, 1);"
    },
    {
        "line": 75,
        "fullcodeline": "READ_VLC_OFFSET(cpb_size_du_value_minus1[i][j][nalOrVcl], uvlc, 0);"
    },
    {
        "line": 76,
        "fullcodeline": "READ_VLC_OFFSET(bit_rate_du_value_minus1[i][j][nalOrVcl], uvlc, 0);"
    }
]