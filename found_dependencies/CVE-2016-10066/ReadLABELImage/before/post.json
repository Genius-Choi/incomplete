[
    {
        "line": 5,
        "fullcodeline": "geometry[MagickPathExtent],"
    },
    {
        "line": 30,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 31,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 35,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 36,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 37,
        "fullcodeline": "image=AcquireImage(image_info,exception);"
    },
    {
        "line": 38,
        "fullcodeline": "(void) ResetImagePage(image,\"0x0+0+0\");"
    },
    {
        "line": 39,
        "fullcodeline": "property=InterpretImageProperties((ImageInfo *) image_info,image,"
    },
    {
        "line": 41,
        "fullcodeline": "(void) SetImageProperty(image,\"label\",property,exception);"
    },
    {
        "line": 42,
        "fullcodeline": "property=DestroyString(property);"
    },
    {
        "line": 43,
        "fullcodeline": "label=GetImageProperty(image,\"label\",exception);"
    },
    {
        "line": 44,
        "fullcodeline": "draw_info=CloneDrawInfo(image_info,(DrawInfo *) NULL);"
    },
    {
        "line": 45,
        "fullcodeline": "draw_info->text=ConstantString(label);"
    },
    {
        "line": 46,
        "fullcodeline": "metrics.width=0;"
    },
    {
        "line": 47,
        "fullcodeline": "metrics.ascent=0.0;"
    },
    {
        "line": 48,
        "fullcodeline": "status=GetMultilineTypeMetrics(image,draw_info,&metrics,exception);"
    },
    {
        "line": 111,
        "fullcodeline": "status=GetMultilineTypeMetrics(image,draw_info,&metrics,exception);"
    },
    {
        "line": 127,
        "fullcodeline": "status=SetImageExtent(image,image->columns,image->rows,exception);"
    },
    {
        "line": 142,
        "fullcodeline": "(void) FormatLocaleString(geometry,MagickPathExtent,\"%+g%+g\","
    },
    {
        "line": 146,
        "fullcodeline": "draw_info->geometry=AcquireString(geometry);"
    },
    {
        "line": 147,
        "fullcodeline": "status=AnnotateImage(image,draw_info,exception);"
    },
    {
        "line": 157,
        "fullcodeline": "draw_info=DestroyDrawInfo(draw_info);"
    },
    {
        "line": 32,
        "fullcodeline": "if (image_info->debug != MagickFalse)"
    },
    {
        "line": 49,
        "fullcodeline": "if ((image->columns == 0) && (image->rows == 0))"
    },
    {
        "line": 112,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 118,
        "fullcodeline": "if (image->columns == 0)"
    },
    {
        "line": 120,
        "fullcodeline": "if (image->columns == 0)"
    },
    {
        "line": 122,
        "fullcodeline": "if (image->rows == 0)"
    },
    {
        "line": 125,
        "fullcodeline": "if (image->rows == 0)"
    },
    {
        "line": 128,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 133,
        "fullcodeline": "if (SetImageBackgroundColor(image,exception) == MagickFalse)"
    },
    {
        "line": 148,
        "fullcodeline": "if (image_info->pointsize == 0.0)"
    },
    {
        "line": 158,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 163,
        "fullcodeline": "return(GetFirstImageInList(image));"
    },
    {
        "line": 33,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 51,
        "fullcodeline": "image->columns=(size_t) (metrics.width+draw_info->stroke_width+0.5);"
    },
    {
        "line": 52,
        "fullcodeline": "image->rows=(size_t) floor(metrics.height+draw_info->stroke_width+0.5);"
    },
    {
        "line": 114,
        "fullcodeline": "draw_info=DestroyDrawInfo(draw_info);"
    },
    {
        "line": 115,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 119,
        "fullcodeline": "image->columns=(size_t) (metrics.width+draw_info->stroke_width+0.5);"
    },
    {
        "line": 121,
        "fullcodeline": "image->columns=(size_t) (draw_info->pointsize+draw_info->stroke_width+0.5);"
    },
    {
        "line": 123,
        "fullcodeline": "image->rows=(size_t) (metrics.ascent-metrics.descent+"
    },
    {
        "line": 126,
        "fullcodeline": "image->rows=(size_t) (draw_info->pointsize+draw_info->stroke_width+0.5);"
    },
    {
        "line": 130,
        "fullcodeline": "draw_info=DestroyDrawInfo(draw_info);"
    },
    {
        "line": 135,
        "fullcodeline": "draw_info=DestroyDrawInfo(draw_info);"
    },
    {
        "line": 136,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 143,
        "fullcodeline": "draw_info->direction == RightToLeftDirection ? image->columns-"
    },
    {
        "line": 144,
        "fullcodeline": "metrics.bounds.x2 : 0.0,draw_info->gravity == UndefinedGravity ?"
    },
    {
        "line": 151,
        "fullcodeline": "pointsize[MagickPathExtent];"
    },
    {
        "line": 153,
        "fullcodeline": "(void) FormatLocaleString(pointsize,MagickPathExtent,\"%.20g\","
    },
    {
        "line": 155,
        "fullcodeline": "(void) SetImageProperty(image,\"label:pointsize\",pointsize,exception);"
    },
    {
        "line": 160,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 116,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 131,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 137,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 161,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 55,
        "fullcodeline": "if (((image->columns == 0) || (image->rows == 0)) ||"
    },
    {
        "line": 56,
        "fullcodeline": "(fabs(image_info->pointsize) < MagickEpsilon))"
    },
    {
        "line": 84,
        "fullcodeline": "high=draw_info->pointsize;"
    },
    {
        "line": 109,
        "fullcodeline": "draw_info->pointsize=(low+high)/2.0-0.5;"
    },
    {
        "line": 65,
        "fullcodeline": "for ( ; ; draw_info->pointsize*=2.0)"
    },
    {
        "line": 85,
        "fullcodeline": "for (low=1.0; (high-low) > 0.5; )"
    },
    {
        "line": 67,
        "fullcodeline": "(void) FormatLocaleString(geometry,MagickPathExtent,\"%+g%+g\","
    },
    {
        "line": 71,
        "fullcodeline": "status=GetMultilineTypeMetrics(image,draw_info,&metrics,exception);"
    },
    {
        "line": 72,
        "fullcodeline": "width=(size_t) floor(metrics.width+draw_info->stroke_width+0.5);"
    },
    {
        "line": 73,
        "fullcodeline": "height=(size_t) floor(metrics.height+draw_info->stroke_width+0.5);"
    },
    {
        "line": 87,
        "fullcodeline": "draw_info->pointsize=(low+high)/2.0;"
    },
    {
        "line": 88,
        "fullcodeline": "(void) FormatLocaleString(geometry,MagickPathExtent,\"%+g%+g\","
    },
    {
        "line": 92,
        "fullcodeline": "status=GetMultilineTypeMetrics(image,draw_info,&metrics,exception);"
    },
    {
        "line": 93,
        "fullcodeline": "width=(size_t) floor(metrics.width+draw_info->stroke_width+0.5);"
    },
    {
        "line": 94,
        "fullcodeline": "height=(size_t) floor(metrics.height+draw_info->stroke_width+0.5);"
    },
    {
        "line": 69,
        "fullcodeline": "if (draw_info->gravity == UndefinedGravity)"
    },
    {
        "line": 74,
        "fullcodeline": "if ((image->columns != 0) && (image->rows != 0))"
    },
    {
        "line": 90,
        "fullcodeline": "if (draw_info->gravity == UndefinedGravity)"
    },
    {
        "line": 95,
        "fullcodeline": "if ((image->columns != 0) && (image->rows != 0))"
    },
    {
        "line": 70,
        "fullcodeline": "(void) CloneString(&draw_info->geometry,geometry);"
    },
    {
        "line": 89,
        "fullcodeline": "-metrics.bounds.x1,metrics.ascent);"
    },
    {
        "line": 91,
        "fullcodeline": "(void) CloneString(&draw_info->geometry,geometry);"
    },
    {
        "line": 76,
        "fullcodeline": "if ((width >= image->columns) && (height >= image->rows))"
    },
    {
        "line": 97,
        "fullcodeline": "if ((width < image->columns) && (height < image->rows))"
    },
    {
        "line": 80,
        "fullcodeline": "if (((image->columns != 0) && (width >= image->columns)) ||"
    },
    {
        "line": 98,
        "fullcodeline": "low=draw_info->pointsize+0.5;"
    },
    {
        "line": 103,
        "fullcodeline": "if (((image->columns != 0) && (width < image->columns)) ||"
    },
    {
        "line": 81,
        "fullcodeline": "((image->rows != 0) && (height >= image->rows)))"
    },
    {
        "line": 100,
        "fullcodeline": "high=draw_info->pointsize-0.5;"
    },
    {
        "line": 104,
        "fullcodeline": "((image->rows != 0) && (height < image->rows)))"
    },
    {
        "line": 105,
        "fullcodeline": "low=draw_info->pointsize+0.5;"
    },
    {
        "line": 107,
        "fullcodeline": "high=draw_info->pointsize-0.5;"
    }
]