[
    {
        "line": 16,
        "fullcodeline": "memory=NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "alignment=CACHE_LINE_SIZE;"
    },
    {
        "line": 18,
        "fullcodeline": "size=count*quantum;"
    },
    {
        "line": 19,
        "fullcodeline": "extent=AlignedExtent(size,alignment);"
    },
    {
        "line": 14,
        "fullcodeline": "if (HeapOverflowSanityCheck(count,quantum) != MagickFalse)"
    },
    {
        "line": 20,
        "fullcodeline": "if ((size == 0) || (alignment < sizeof(void *)) || (extent < size))"
    },
    {
        "line": 32,
        "fullcodeline": "extent=(size+alignment-1)+sizeof(void *);"
    },
    {
        "line": 33,
        "fullcodeline": "if (extent > size)"
    },
    {
        "line": 15,
        "fullcodeline": "return((void *) NULL);"
    },
    {
        "line": 21,
        "fullcodeline": "return((void *) NULL);"
    },
    {
        "line": 35,
        "fullcodeline": "p=malloc(extent);"
    },
    {
        "line": 36,
        "fullcodeline": "if (p != NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "memory=(void *) AlignedExtent((size_t) p+sizeof(void *),alignment);"
    },
    {
        "line": 39,
        "fullcodeline": "*((void **) memory-1)=p;"
    }
]