[
    {
        "line": 6,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 7,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 10,
        "fullcodeline": "LockSemaphoreInfo(exception->semaphore);"
    },
    {
        "line": 11,
        "fullcodeline": "ResetLinkedListIterator((LinkedListInfo *) exception->exceptions);"
    },
    {
        "line": 12,
        "fullcodeline": "p=(const ExceptionInfo *) GetNextValueInLinkedList((LinkedListInfo *)"
    },
    {
        "line": 25,
        "fullcodeline": "UnlockSemaphoreInfo(exception->semaphore);"
    },
    {
        "line": 26,
        "fullcodeline": "ClearMagickException(exception);"
    },
    {
        "line": 8,
        "fullcodeline": "if (exception->exceptions  == (void *) NULL)"
    },
    {
        "line": 14,
        "fullcodeline": "while (p != (const ExceptionInfo *) NULL)"
    },
    {
        "line": 22,
        "fullcodeline": "p=(const ExceptionInfo *) GetNextValueInLinkedList((LinkedListInfo *)"
    },
    {
        "line": 16,
        "fullcodeline": "if ((p->severity >= WarningException) && (p->severity < ErrorException))"
    },
    {
        "line": 18,
        "fullcodeline": "if ((p->severity >= ErrorException) && (p->severity < FatalErrorException))"
    },
    {
        "line": 20,
        "fullcodeline": "if (p->severity >= FatalErrorException)"
    },
    {
        "line": 17,
        "fullcodeline": "MagickWarning(p->severity,p->reason,p->description);"
    },
    {
        "line": 19,
        "fullcodeline": "MagickError(p->severity,p->reason,p->description);"
    },
    {
        "line": 21,
        "fullcodeline": "MagickFatalError(p->severity,p->reason,p->description);"
    }
]