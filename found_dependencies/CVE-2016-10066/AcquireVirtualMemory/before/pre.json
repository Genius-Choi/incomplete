[
    {
        "line": 12,
        "fullcodeline": "memory_info=(MemoryInfo *) MagickAssumeAligned(AcquireAlignedMemory(1,"
    },
    {
        "line": 17,
        "fullcodeline": "extent=count*quantum;"
    },
    {
        "line": 18,
        "fullcodeline": "memory_info->length=extent;"
    },
    {
        "line": 19,
        "fullcodeline": "memory_info->signature=MagickCoreSignature;"
    },
    {
        "line": 29,
        "fullcodeline": "RelinquishMagickResource(MemoryResource,extent);"
    },
    {
        "line": 79,
        "fullcodeline": "RelinquishMagickResource(MapResource,extent);"
    },
    {
        "line": 10,
        "fullcodeline": "if (CheckMemoryOverflow(count,quantum) != MagickFalse)"
    },
    {
        "line": 14,
        "fullcodeline": "if (memory_info == (MemoryInfo *) NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "(void) ResetMagickMemory(memory_info,0,sizeof(*memory_info));"
    },
    {
        "line": 20,
        "fullcodeline": "if (AcquireMagickResource(MemoryResource,extent) != MagickFalse)"
    },
    {
        "line": 30,
        "fullcodeline": "if (AcquireMagickResource(MapResource,extent) != MagickFalse)"
    },
    {
        "line": 80,
        "fullcodeline": "if (memory_info->blob == NULL)"
    },
    {
        "line": 86,
        "fullcodeline": "if (memory_info->blob == NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 22,
        "fullcodeline": "memory_info->blob=AcquireAlignedMemory(1,extent);"
    },
    {
        "line": 35,
        "fullcodeline": "memory_info->blob=MapBlob(-1,IOMode,0,extent);"
    },
    {
        "line": 77,
        "fullcodeline": "RelinquishMagickResource(DiskResource,extent);"
    },
    {
        "line": 82,
        "fullcodeline": "memory_info->blob=AcquireMagickMemory(extent);"
    },
    {
        "line": 87,
        "fullcodeline": "memory_info=RelinquishVirtualMemory(memory_info);"
    },
    {
        "line": 11,
        "fullcodeline": "return((MemoryInfo *) NULL);"
    },
    {
        "line": 23,
        "fullcodeline": "if (memory_info->blob != NULL)"
    },
    {
        "line": 36,
        "fullcodeline": "if (memory_info->blob != NULL)"
    },
    {
        "line": 83,
        "fullcodeline": "if (memory_info->blob != NULL)"
    },
    {
        "line": 25,
        "fullcodeline": "memory_info->type=AlignedVirtualMemory;"
    },
    {
        "line": 38,
        "fullcodeline": "memory_info->type=MapVirtualMemory;"
    },
    {
        "line": 41,
        "fullcodeline": "if (AcquireMagickResource(DiskResource,extent) != MagickFalse)"
    },
    {
        "line": 51,
        "fullcodeline": "file=AcquireUniqueFileResource(memory_info->filename);"
    },
    {
        "line": 84,
        "fullcodeline": "memory_info->type=UnalignedVirtualMemory;"
    },
    {
        "line": 52,
        "fullcodeline": "if (file != -1)"
    },
    {
        "line": 57,
        "fullcodeline": "offset=(MagickOffsetType) lseek(file,extent-1,SEEK_SET);"
    },
    {
        "line": 72,
        "fullcodeline": "(void) close(file);"
    },
    {
        "line": 73,
        "fullcodeline": "(void) RelinquishUniqueFileResource(memory_info->filename);"
    },
    {
        "line": 58,
        "fullcodeline": "if ((offset == (MagickOffsetType) (extent-1)) &&"
    },
    {
        "line": 59,
        "fullcodeline": "(write(file,\"\",1) == 1))"
    },
    {
        "line": 61,
        "fullcodeline": "memory_info->blob=MapBlob(file,IOMode,0,extent);"
    },
    {
        "line": 62,
        "fullcodeline": "if (memory_info->blob != NULL)"
    },
    {
        "line": 65,
        "fullcodeline": "memory_info->type=MapVirtualMemory;"
    },
    {
        "line": 64,
        "fullcodeline": "(void) close(file);"
    }
]