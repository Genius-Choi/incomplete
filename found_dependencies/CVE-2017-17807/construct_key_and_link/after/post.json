[
    {
        "line": 12,
        "fullcodeline": "kenter(\"\");"
    },
    {
        "line": 17,
        "fullcodeline": "ret = construct_get_dest_keyring(&dest_keyring);"
    },
    {
        "line": 21,
        "fullcodeline": "user = key_user_lookup(current_fsuid());"
    },
    {
        "line": 27,
        "fullcodeline": "ret = construct_alloc_key(ctx, dest_keyring, flags, user, &key);"
    },
    {
        "line": 28,
        "fullcodeline": "key_user_put(user);"
    },
    {
        "line": 43,
        "fullcodeline": "key_put(dest_keyring);"
    },
    {
        "line": 44,
        "fullcodeline": "kleave(\" = key %d\", key_serial(key));"
    },
    {
        "line": 48,
        "fullcodeline": "key_negate_and_link(key, key_negative_timeout, NULL, NULL);"
    },
    {
        "line": 49,
        "fullcodeline": "key_put(key);"
    },
    {
        "line": 51,
        "fullcodeline": "key_put(dest_keyring);"
    },
    {
        "line": 53,
        "fullcodeline": "kleave(\" = %d\", ret);"
    },
    {
        "line": 14,
        "fullcodeline": "if (ctx->index_key.type == &key_type_keyring)"
    },
    {
        "line": 22,
        "fullcodeline": "if (!user) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 54,
        "fullcodeline": "return ERR_PTR(ret);"
    },
    {
        "line": 23,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 31,
        "fullcodeline": "ret = construct_key(key, callout_info, callout_len, aux,"
    },
    {
        "line": 15,
        "fullcodeline": "return ERR_PTR(-EPERM);"
    },
    {
        "line": 33,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "kdebug(\"cons failed\");"
    },
    {
        "line": 37,
        "fullcodeline": "} else if (ret == -EINPROGRESS) {"
    },
    {
        "line": 38,
        "fullcodeline": "ret = 0;"
    }
]