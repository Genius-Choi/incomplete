[
    {
        "line": 5,
        "fullcodeline": "exgrep = form.getvalue('exgrep')"
    },
    {
        "line": 6,
        "fullcodeline": "log_file = form.getvalue('file')"
    },
    {
        "line": 7,
        "fullcodeline": "date = checkAjaxInput(hour) + ':' + checkAjaxInput(minut)"
    },
    {
        "line": 8,
        "fullcodeline": "date1 = checkAjaxInput(hour1) + ':' + checkAjaxInput(minut1)"
    },
    {
        "line": 9,
        "fullcodeline": "rows = checkAjaxInput(rows)"
    },
    {
        "line": 10,
        "fullcodeline": "waf = checkAjaxInput(waf)"
    },
    {
        "line": 11,
        "fullcodeline": "cmd = ''"
    },
    {
        "line": 12,
        "fullcodeline": "awk_column = 3"
    },
    {
        "line": 24,
        "fullcodeline": "log_file = checkAjaxInput(log_file) if log_file is not None else log_file"
    },
    {
        "line": 14,
        "fullcodeline": "if grep is not None:"
    },
    {
        "line": 19,
        "fullcodeline": "if exgrep is not None:"
    },
    {
        "line": 26,
        "fullcodeline": "if '..' in log_file: return 'error: nice try'"
    },
    {
        "line": 28,
        "fullcodeline": "if service in ('nginx', 'haproxy', 'apache', 'keepalived'):"
    },
    {
        "line": 15,
        "fullcodeline": "grep_act = '|egrep \"%s\"' % checkAjaxInput(grep)"
    },
    {
        "line": 17,
        "fullcodeline": "grep_act = ''"
    },
    {
        "line": 20,
        "fullcodeline": "exgrep_act = '|egrep -v \"%s\"' % checkAjaxInput(exgrep)"
    },
    {
        "line": 22,
        "fullcodeline": "exgrep_act = ''"
    },
    {
        "line": 29,
        "fullcodeline": "syslog_server_enable = sql.get_setting('syslog_server_enable')"
    },
    {
        "line": 32,
        "fullcodeline": "local_path_logs = sql.get_setting('nginx_path_logs')"
    },
    {
        "line": 33,
        "fullcodeline": "commands = [\"sudo cat %s/%s |tail -%s %s %s\" % (local_path_logs, log_file, rows, grep_act, exgrep_act)]"
    },
    {
        "line": 35,
        "fullcodeline": "local_path_logs = sql.get_setting('apache_path_logs')"
    },
    {
        "line": 36,
        "fullcodeline": "commands = ["
    },
    {
        "line": 40,
        "fullcodeline": "local_path_logs = sql.get_setting('keepalived_path_logs')"
    },
    {
        "line": 41,
        "fullcodeline": "commands = ["
    },
    {
        "line": 46,
        "fullcodeline": "local_path_logs = sql.get_setting('haproxy_path_logs')"
    },
    {
        "line": 47,
        "fullcodeline": "commands = [\"sudo cat %s/%s| awk '$3>\\\"%s:00\\\" && $3<\\\"%s:00\\\"' |tail -%s %s %s\" % (local_path_logs, log_file, date, date1, rows, grep_act, exgrep_act)]"
    },
    {
        "line": 48,
        "fullcodeline": "syslog_server = serv"
    },
    {
        "line": 50,
        "fullcodeline": "commands = [\"sudo cat /var/log/%s/syslog.log | sed '/ %s:00/,/ %s:00/! d' |tail -%s %s %s %s\" % (serv, date, date1, rows, grep_act, grep, exgrep_act)]"
    },
    {
        "line": 51,
        "fullcodeline": "syslog_server = sql.get_setting('syslog_server')"
    },
    {
        "line": 55,
        "fullcodeline": "commands = [\"sudo cat %s |tail -%s %s %s\" % (local_path_logs, rows, grep_act, exgrep_act)]"
    },
    {
        "line": 58,
        "fullcodeline": "return show_log(a, html=0, grep=grep)"
    },
    {
        "line": 61,
        "fullcodeline": "elif service == 'apache_internal':"
    },
    {
        "line": 37,
        "fullcodeline": "\"sudo cat %s/%s| awk -F\\\"/|:\\\" '$3>\\\"%s:00\\\" && $3<\\\"%s:00\\\"' |tail -%s %s %s\" % (local_path_logs, log_file, date, date1, rows, grep_act, exgrep_act)"
    },
    {
        "line": 42,
        "fullcodeline": "\"sudo cat %s/%s| awk '$3>\\\"%s:00\\\" && $3<\\\"%s:00\\\"' |tail -%s %s %s\" % ("
    },
    {
        "line": 62,
        "fullcodeline": "apache_log_path = sql.get_setting('apache_log_path')"
    },
    {
        "line": 67,
        "fullcodeline": "cmd = \"sudo cat {}| awk '$4>\\\"{}:00\\\" && $4<\\\"{}:00\\\"' |tail -{} {} {}\".format(apache_log_path + \"/\" + serv, date, date1, rows, grep_act, exgrep_act)"
    },
    {
        "line": 69,
        "fullcodeline": "cmd = 'sudo cat {}| awk -F\"/|:\" \\'$3>\"{}:00\" && $3<\"{}:00\\' |tail -{} {} {}'.format(\"/var/log/\" + serv, date, date1, rows, grep_act, exgrep_act)"
    },
    {
        "line": 71,
        "fullcodeline": "output, stderr = server_mod.subprocess_execute(cmd)"
    },
    {
        "line": 73,
        "fullcodeline": "return show_log(output, grep=grep)"
    },
    {
        "line": 74,
        "fullcodeline": "elif service == 'internal':"
    },
    {
        "line": 75,
        "fullcodeline": "log_path = get_config_var.get_config_var('main', 'log_path')"
    },
    {
        "line": 76,
        "fullcodeline": "logs_files = roxywi_common.get_files(log_path, \"log\")"
    },
    {
        "line": 77,
        "fullcodeline": "user_group = roxywi_common.get_user_group()"
    },
    {
        "line": 78,
        "fullcodeline": "user_grep = ''"
    },
    {
        "line": 85,
        "fullcodeline": "serv = value"
    }
]