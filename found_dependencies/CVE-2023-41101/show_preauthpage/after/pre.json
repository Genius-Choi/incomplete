[
    {
        "line": 3,
        "fullcodeline": "s_config *config = config_get_config();"
    },
    {
        "line": 16,
        "fullcodeline": "if ( strlen(query) < 1 ) {"
    },
    {
        "line": 18,
        "fullcodeline": "return send_error(connection, 511);"
    },
    {
        "line": 20,
        "fullcodeline": "preauthpath = safe_calloc(SMALL_BUF);"
    },
    {
        "line": 21,
        "fullcodeline": "safe_asprintf(&preauthpath, \"/%s/\", config->preauthdir);"
    },
    {
        "line": 23,
        "fullcodeline": "if (strcmp(preauthpath, config->fas_path) == 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "user_agent = safe_calloc(USER_AGENT);"
    },
    {
        "line": 27,
        "fullcodeline": "debug(LOG_DEBUG, \"PreAuth: User Agent ptr is [ %d ]\", &user_agent);"
    },
    {
        "line": 28,
        "fullcodeline": "enc_user_agent = safe_calloc(ENC_USER_AGENT);"
    },
    {
        "line": 30,
        "fullcodeline": "MHD_get_connection_values(connection, MHD_HEADER_KIND, get_user_agent_callback, &user_agent);"
    },
    {
        "line": 31,
        "fullcodeline": "debug(LOG_DEBUG, \"PreAuth: MHD User Agent ptr is [ %d ]\", &user_agent);"
    },
    {
        "line": 37,
        "fullcodeline": "uh_urlencode(enc_user_agent, ENC_USER_AGENT, user_agent, strlen(user_agent));"
    },
    {
        "line": 38,
        "fullcodeline": "debug(LOG_DEBUG, \"PreAuth: Encoded User Agent is [ %s ]\", enc_user_agent);"
    },
    {
        "line": 40,
        "fullcodeline": "enc_query = safe_calloc(ENC_QUERYSTR);"
    },
    {
        "line": 41,
        "fullcodeline": "uh_urlencode(enc_query, ENC_QUERYSTR, query, strlen(query));"
    },
    {
        "line": 42,
        "fullcodeline": "debug(LOG_DEBUG, \"PreAuth: Encoded query: %s\", enc_query);"
    },
    {
        "line": 44,
        "fullcodeline": "msg = safe_calloc(HTMLMAXSIZE);"
    },
    {
        "line": 54,
        "fullcodeline": "cmd = safe_calloc(QUERYMAXLEN);"
    },
    {
        "line": 55,
        "fullcodeline": "safe_asprintf(&cmd, \"%s '%s' '%s' '%d' '%s'\", config->preauth, enc_query, enc_user_agent, config->login_option_enabled, config->themespec_path);"
    },
    {
        "line": 56,
        "fullcodeline": "rc = execute_ret_url_encoded(msg, HTMLMAXSIZE - 1, cmd);"
    },
    {
        "line": 69,
        "fullcodeline": "response = MHD_create_response_from_buffer(strlen(msg), (char *)msg, MHD_RESPMEM_MUST_FREE);"
    },
    {
        "line": 75,
        "fullcodeline": "MHD_add_response_header(response, \"Content-Type\", \"text/html; charset=utf-8\");"
    },
    {
        "line": 76,
        "fullcodeline": "ret = MHD_queue_response(connection, MHD_HTTP_OK, response);"
    },
    {
        "line": 33,
        "fullcodeline": "if (user_agent == NULL) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (!msg) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (!response) {"
    },
    {
        "line": 47,
        "fullcodeline": "ret = send_error(connection, 503);"
    },
    {
        "line": 60,
        "fullcodeline": "debug(LOG_WARNING, \"Preauth script - failed to execute: %s, Query[%s]\", config->preauth, query);"
    },
    {
        "line": 84,
        "fullcodeline": "return send_error(connection, 404);"
    },
    {
        "line": 34,
        "fullcodeline": "return send_error(connection, 403);"
    },
    {
        "line": 65,
        "fullcodeline": "return send_error(connection, 511);"
    },
    {
        "line": 72,
        "fullcodeline": "return send_error(connection, 503);"
    }
]