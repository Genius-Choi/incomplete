[
    {
        "line": 4,
        "fullcodeline": "register const struct pim *pim = (const struct pim *)bp;"
    },
    {
        "line": 10,
        "fullcodeline": "ND_TCHECK(pim->pim_typever);"
    },
    {
        "line": 11,
        "fullcodeline": "switch (PIM_VER(pim->pim_typever)) {"
    },
    {
        "line": 28,
        "fullcodeline": "ND_PRINT((ndo, \"PIMv%u, length %u\","
    },
    {
        "line": 13,
        "fullcodeline": "if (!ndo->ndo_vflag) {"
    },
    {
        "line": 14,
        "fullcodeline": "ND_PRINT((ndo, \"PIMv%u, %s, length %u\","
    },
    {
        "line": 20,
        "fullcodeline": "ND_PRINT((ndo, \"PIMv%u, length %u\\n\\t%s\","
    },
    {
        "line": 24,
        "fullcodeline": "pimv2_print(ndo, bp, len, bp2);"
    },
    {
        "line": 29,
        "fullcodeline": "PIM_VER(pim->pim_typever),"
    },
    {
        "line": 15,
        "fullcodeline": "PIM_VER(pim->pim_typever),"
    },
    {
        "line": 16,
        "fullcodeline": "tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim->pim_typever)),"
    },
    {
        "line": 21,
        "fullcodeline": "PIM_VER(pim->pim_typever),"
    },
    {
        "line": 23,
        "fullcodeline": "tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim->pim_typever))));"
    }
]