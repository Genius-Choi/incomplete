[
    {
        "line": 6,
        "fullcodeline": "ND_TCHECK(bp[1]);"
    },
    {
        "line": 7,
        "fullcodeline": "type = bp[1];"
    },
    {
        "line": 9,
        "fullcodeline": "ND_PRINT((ndo, \" %s\", tok2str(pimv1_type_str, \"[type %u]\", type)));"
    },
    {
        "line": 78,
        "fullcodeline": "ND_TCHECK(bp[4]);"
    },
    {
        "line": 84,
        "fullcodeline": "ND_PRINT((ndo, \"[|pim]\"));"
    },
    {
        "line": 79,
        "fullcodeline": "if ((bp[4] >> 4) != 1)"
    },
    {
        "line": 37,
        "fullcodeline": "ND_TCHECK2(bp[8], 20);\t\t\t/* ip header */"
    },
    {
        "line": 38,
        "fullcodeline": "ND_PRINT((ndo, \" for %s > %s\", ipaddr_string(ndo, &bp[20]),"
    },
    {
        "line": 42,
        "fullcodeline": "ND_TCHECK2(bp[12], sizeof(struct in_addr));"
    },
    {
        "line": 43,
        "fullcodeline": "ND_PRINT((ndo, \" for %s > %s\", ipaddr_string(ndo, &bp[8]),"
    },
    {
        "line": 57,
        "fullcodeline": "ND_TCHECK2(bp[16], sizeof(struct in_addr));"
    },
    {
        "line": 58,
        "fullcodeline": "ND_PRINT((ndo, \" for %s > %s\", ipaddr_string(ndo, &bp[16]),"
    },
    {
        "line": 62,
        "fullcodeline": "ND_TCHECK2(bp[24], 4);"
    },
    {
        "line": 63,
        "fullcodeline": "ND_PRINT((ndo, \" %s pref %d metric %d\","
    },
    {
        "line": 80,
        "fullcodeline": "ND_PRINT((ndo, \" [v%d]\", bp[4] >> 4));"
    },
    {
        "line": 12,
        "fullcodeline": "if (ND_TTEST(bp[8])) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (EXTRACT_32BITS(&bp[12]) != 0xffffffff)"
    },
    {
        "line": 29,
        "fullcodeline": "ND_TCHECK2(bp[10],2);"
    },
    {
        "line": 30,
        "fullcodeline": "ND_PRINT((ndo, \" (Hold-time \"));"
    },
    {
        "line": 31,
        "fullcodeline": "unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[10]));"
    },
    {
        "line": 32,
        "fullcodeline": "ND_PRINT((ndo, \")\"));"
    },
    {
        "line": 48,
        "fullcodeline": "ND_TCHECK2(bp[22], 2);"
    },
    {
        "line": 49,
        "fullcodeline": "ND_PRINT((ndo, \" group %s\", ipaddr_string(ndo, &bp[8])));"
    },
    {
        "line": 52,
        "fullcodeline": "ND_PRINT((ndo, \" RP %s hold \", ipaddr_string(ndo, &bp[16])));"
    },
    {
        "line": 53,
        "fullcodeline": "unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[22]));"
    },
    {
        "line": 61,
        "fullcodeline": "ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[12])));"
    },
    {
        "line": 74,
        "fullcodeline": "pimv1_join_prune_print(ndo, &bp[8], len - 8);"
    },
    {
        "line": 13,
        "fullcodeline": "switch (bp[8] >> 4) {"
    },
    {
        "line": 39,
        "fullcodeline": "ipaddr_string(ndo, &bp[24])));"
    },
    {
        "line": 44,
        "fullcodeline": "ipaddr_string(ndo, &bp[12])));"
    },
    {
        "line": 50,
        "fullcodeline": "if (EXTRACT_32BITS(&bp[12]) != 0xffffffff)"
    },
    {
        "line": 59,
        "fullcodeline": "ipaddr_string(ndo, &bp[8])));"
    },
    {
        "line": 64,
        "fullcodeline": "(bp[20] & 0x80) ? \"RP-tree\" : \"SPT\","
    },
    {
        "line": 65,
        "fullcodeline": "EXTRACT_32BITS(&bp[20]) & 0x7fffffff,"
    },
    {
        "line": 66,
        "fullcodeline": "EXTRACT_32BITS(&bp[24])));"
    },
    {
        "line": 72,
        "fullcodeline": "if (len < 8)"
    },
    {
        "line": 15,
        "fullcodeline": "ND_PRINT((ndo, \" Dense-mode\"));"
    },
    {
        "line": 18,
        "fullcodeline": "ND_PRINT((ndo, \" Sparse-mode\"));"
    },
    {
        "line": 21,
        "fullcodeline": "ND_PRINT((ndo, \" Sparse-Dense-mode\"));"
    },
    {
        "line": 24,
        "fullcodeline": "ND_PRINT((ndo, \" mode-%d\", bp[8] >> 4));"
    },
    {
        "line": 51,
        "fullcodeline": "ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[12])));"
    }
]