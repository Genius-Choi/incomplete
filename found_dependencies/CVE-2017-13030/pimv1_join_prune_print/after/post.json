[
    {
        "line": 32,
        "fullcodeline": "ND_TCHECK2(bp[0], sizeof(struct in_addr));"
    },
    {
        "line": 35,
        "fullcodeline": "ND_PRINT((ndo, \" Upstream Nbr: %s\", ipaddr_string(ndo, bp)));"
    },
    {
        "line": 36,
        "fullcodeline": "bp += 4;"
    },
    {
        "line": 37,
        "fullcodeline": "len -= 4;"
    },
    {
        "line": 40,
        "fullcodeline": "ND_TCHECK2(bp[2], 2);"
    },
    {
        "line": 43,
        "fullcodeline": "ND_PRINT((ndo, \" Hold time: \"));"
    },
    {
        "line": 44,
        "fullcodeline": "unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[2]));"
    },
    {
        "line": 47,
        "fullcodeline": "bp += 4;"
    },
    {
        "line": 48,
        "fullcodeline": "len -= 4;"
    },
    {
        "line": 52,
        "fullcodeline": "ND_TCHECK2(bp[0], 4);"
    },
    {
        "line": 53,
        "fullcodeline": "ngroups = bp[3];"
    },
    {
        "line": 54,
        "fullcodeline": "bp += 4;"
    },
    {
        "line": 55,
        "fullcodeline": "len -= 4;"
    },
    {
        "line": 104,
        "fullcodeline": "ND_PRINT((ndo, \"[|pim]\"));"
    },
    {
        "line": 8,
        "fullcodeline": "if (ND_TTEST2(bp[0], 30) && bp[11] == 1 &&"
    },
    {
        "line": 30,
        "fullcodeline": "if (len < sizeof(struct in_addr))"
    },
    {
        "line": 33,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 38,
        "fullcodeline": "if (len < 4)"
    },
    {
        "line": 41,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 45,
        "fullcodeline": "if (ndo->ndo_vflag < 2)"
    },
    {
        "line": 50,
        "fullcodeline": "if (len < 4)"
    },
    {
        "line": 56,
        "fullcodeline": "while (ngroups--) {"
    },
    {
        "line": 9,
        "fullcodeline": "((njoin = EXTRACT_16BITS(&bp[20])) + EXTRACT_16BITS(&bp[22])) == 1) {"
    },
    {
        "line": 12,
        "fullcodeline": "ND_PRINT((ndo, \" RPF %s \", ipaddr_string(ndo, bp)));"
    },
    {
        "line": 13,
        "fullcodeline": "hold = EXTRACT_16BITS(&bp[6]);"
    },
    {
        "line": 18,
        "fullcodeline": "ND_PRINT((ndo, \"%s (%s/%d, %s\", njoin ? \"Join\" : \"Prune\","
    },
    {
        "line": 23,
        "fullcodeline": "ND_PRINT((ndo, \") %s%s %s\","
    },
    {
        "line": 34,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\"));"
    },
    {
        "line": 42,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\"));"
    },
    {
        "line": 63,
        "fullcodeline": "ND_TCHECK2(bp[0], sizeof(struct in_addr));"
    },
    {
        "line": 64,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\tGroup: %s\", ipaddr_string(ndo, bp)));"
    },
    {
        "line": 65,
        "fullcodeline": "bp += 4;"
    },
    {
        "line": 66,
        "fullcodeline": "len -= 4;"
    },
    {
        "line": 69,
        "fullcodeline": "ND_TCHECK2(bp[0], sizeof(struct in_addr));"
    },
    {
        "line": 72,
        "fullcodeline": "bp += 4;"
    },
    {
        "line": 73,
        "fullcodeline": "len -= 4;"
    },
    {
        "line": 76,
        "fullcodeline": "ND_TCHECK2(bp[0], 4);"
    },
    {
        "line": 77,
        "fullcodeline": "njoin = EXTRACT_16BITS(&bp[0]);"
    },
    {
        "line": 78,
        "fullcodeline": "nprune = EXTRACT_16BITS(&bp[2]);"
    },
    {
        "line": 79,
        "fullcodeline": "ND_PRINT((ndo, \" joined: %d pruned: %d\", njoin, nprune));"
    },
    {
        "line": 80,
        "fullcodeline": "bp += 4;"
    },
    {
        "line": 81,
        "fullcodeline": "len -= 4;"
    },
    {
        "line": 14,
        "fullcodeline": "if (hold != 180) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (EXTRACT_32BITS(&bp[16]) != 0xffffffff)"
    },
    {
        "line": 61,
        "fullcodeline": "if (len < 4)"
    },
    {
        "line": 67,
        "fullcodeline": "if (len < 4)"
    },
    {
        "line": 70,
        "fullcodeline": "if (EXTRACT_32BITS(&bp[0]) != 0xffffffff)"
    },
    {
        "line": 74,
        "fullcodeline": "if (len < 4)"
    },
    {
        "line": 82,
        "fullcodeline": "for (njp = 0; njp < (njoin + nprune); njp++) {"
    },
    {
        "line": 15,
        "fullcodeline": "ND_PRINT((ndo, \"Hold \"));"
    },
    {
        "line": 16,
        "fullcodeline": "unsigned_relts_print(ndo, hold);"
    },
    {
        "line": 22,
        "fullcodeline": "ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[16])));"
    },
    {
        "line": 71,
        "fullcodeline": "ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[0])));"
    },
    {
        "line": 91,
        "fullcodeline": "ND_TCHECK2(bp[0], 6);"
    },
    {
        "line": 92,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t%s %s%s%s%s/%d\", type,"
    },
    {
        "line": 98,
        "fullcodeline": "bp += 6;"
    },
    {
        "line": 99,
        "fullcodeline": "len -= 6;"
    },
    {
        "line": 19,
        "fullcodeline": "ipaddr_string(ndo, &bp[26]), bp[25] & 0x3f,"
    },
    {
        "line": 20,
        "fullcodeline": "ipaddr_string(ndo, &bp[12])));"
    },
    {
        "line": 24,
        "fullcodeline": "(bp[24] & 0x01) ? \"Sparse\" : \"Dense\","
    },
    {
        "line": 25,
        "fullcodeline": "(bp[25] & 0x80) ? \" WC\" : \"\","
    },
    {
        "line": 26,
        "fullcodeline": "(bp[25] & 0x40) ? \"RP\" : \"SPT\"));"
    },
    {
        "line": 85,
        "fullcodeline": "if (njp < njoin)"
    },
    {
        "line": 89,
        "fullcodeline": "if (len < 6)"
    },
    {
        "line": 86,
        "fullcodeline": "type = \"Join \";"
    },
    {
        "line": 88,
        "fullcodeline": "type = \"Prune\";"
    },
    {
        "line": 93,
        "fullcodeline": "(bp[0] & 0x01) ? \"Sparse \" : \"Dense \","
    },
    {
        "line": 94,
        "fullcodeline": "(bp[1] & 0x80) ? \"WC \" : \"\","
    },
    {
        "line": 95,
        "fullcodeline": "(bp[1] & 0x40) ? \"RP \" : \"SPT \","
    },
    {
        "line": 96,
        "fullcodeline": "ipaddr_string(ndo, &bp[2]),"
    },
    {
        "line": 97,
        "fullcodeline": "bp[1] & 0x3f));"
    }
]