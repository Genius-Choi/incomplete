[
    {
        "line": 8,
        "fullcodeline": "ND_TCHECK(bp[0]);"
    },
    {
        "line": 9,
        "fullcodeline": "ND_PRINT((ndo, \" auto-rp \"));"
    },
    {
        "line": 10,
        "fullcodeline": "type = bp[0];"
    },
    {
        "line": 23,
        "fullcodeline": "ND_TCHECK(bp[1]);"
    },
    {
        "line": 24,
        "fullcodeline": "numrps = bp[1];"
    },
    {
        "line": 26,
        "fullcodeline": "ND_TCHECK2(bp[2], 2);"
    },
    {
        "line": 27,
        "fullcodeline": "ND_PRINT((ndo, \" Hold \"));"
    },
    {
        "line": 28,
        "fullcodeline": "hold = EXTRACT_16BITS(&bp[2]);"
    },
    {
        "line": 36,
        "fullcodeline": "bp += 8; len -= 8;"
    },
    {
        "line": 51,
        "fullcodeline": "while (numrps--) {"
    },
    {
        "line": 13,
        "fullcodeline": "ND_PRINT((ndo, \"candidate-advert\"));"
    },
    {
        "line": 16,
        "fullcodeline": "ND_PRINT((ndo, \"mapping\"));"
    },
    {
        "line": 19,
        "fullcodeline": "ND_PRINT((ndo, \"type-0x%02x\", type));"
    },
    {
        "line": 30,
        "fullcodeline": "unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[2]));"
    },
    {
        "line": 55,
        "fullcodeline": "ND_TCHECK2(bp[0], 4);"
    },
    {
        "line": 56,
        "fullcodeline": "ND_PRINT((ndo, \" RP %s\", ipaddr_string(ndo, bp)));"
    },
    {
        "line": 57,
        "fullcodeline": "ND_TCHECK(bp[4]);"
    },
    {
        "line": 70,
        "fullcodeline": "ND_TCHECK(bp[5]);"
    },
    {
        "line": 71,
        "fullcodeline": "nentries = bp[5];"
    },
    {
        "line": 72,
        "fullcodeline": "bp += 6; len -= 6;"
    },
    {
        "line": 73,
        "fullcodeline": "s = ' ';"
    },
    {
        "line": 32,
        "fullcodeline": "ND_PRINT((ndo, \"FOREVER\"));"
    },
    {
        "line": 58,
        "fullcodeline": "switch (bp[4] & 0x3) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (bp[4] & 0xfc)"
    },
    {
        "line": 74,
        "fullcodeline": "for (; nentries; nentries--) {"
    },
    {
        "line": 59,
        "fullcodeline": "case 0: ND_PRINT((ndo, \" PIMv?\"));"
    },
    {
        "line": 61,
        "fullcodeline": "case 1:\tND_PRINT((ndo, \" PIMv1\"));"
    },
    {
        "line": 63,
        "fullcodeline": "case 2:\tND_PRINT((ndo, \" PIMv2\"));"
    },
    {
        "line": 65,
        "fullcodeline": "case 3:\tND_PRINT((ndo, \" PIMv1+2\"));"
    },
    {
        "line": 69,
        "fullcodeline": "ND_PRINT((ndo, \" [rsvd=0x%02x]\", bp[4] & 0xfc));"
    },
    {
        "line": 75,
        "fullcodeline": "ND_TCHECK2(bp[0], 6);"
    },
    {
        "line": 76,
        "fullcodeline": "ND_PRINT((ndo, \"%c%s%s/%d\", s, bp[0] & 1 ? \"!\" : \"\","
    },
    {
        "line": 84,
        "fullcodeline": "s = ',';"
    },
    {
        "line": 85,
        "fullcodeline": "bp += 6; len -= 6;"
    },
    {
        "line": 78,
        "fullcodeline": "if (bp[0] & 0x02) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (bp[0] & 0xfc) {"
    },
    {
        "line": 79,
        "fullcodeline": "ND_PRINT((ndo, \" bidir\"));"
    },
    {
        "line": 82,
        "fullcodeline": "ND_PRINT((ndo, \"[rsvd=0x%02x]\", bp[0] & 0xfc));"
    },
    {
        "line": 77,
        "fullcodeline": "ipaddr_string(ndo, &bp[2]), bp[1]));"
    }
]