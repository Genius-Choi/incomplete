[
    {
        "line": 2,
        "fullcodeline": "app = dockerspawner_configured_app"
    },
    {
        "line": 3,
        "fullcodeline": "name = \"checker\""
    },
    {
        "line": 4,
        "fullcodeline": "add_user(app.db, app, name=name)"
    },
    {
        "line": 6,
        "fullcodeline": "assert isinstance(user.spawner, DockerSpawner)"
    },
    {
        "line": 7,
        "fullcodeline": "user.spawner.remove_containers = True"
    },
    {
        "line": 8,
        "fullcodeline": "user.spawner.allowed_images = allowed_images"
    },
    {
        "line": 9,
        "fullcodeline": "token = user.new_api_token()"
    },
    {
        "line": 11,
        "fullcodeline": "r = await api_request("
    },
    {
        "line": 24,
        "fullcodeline": "pending = r.status_code == 202"
    },
    {
        "line": 32,
        "fullcodeline": "url = url_path_join(public_url(app, user), \"api/status\")"
    },
    {
        "line": 33,
        "fullcodeline": "resp = await AsyncHTTPClient().fetch("
    },
    {
        "line": 36,
        "fullcodeline": "assert resp.effective_url == url"
    },
    {
        "line": 37,
        "fullcodeline": "resp.rethrow()"
    },
    {
        "line": 39,
        "fullcodeline": "assert resp.headers['x-jupyterhub-version'].startswith(image)"
    },
    {
        "line": 40,
        "fullcodeline": "r = await api_request("
    },
    {
        "line": 47,
        "fullcodeline": "r.raise_for_status()"
    },
    {
        "line": 20,
        "fullcodeline": "if image not in user.spawner._get_allowed_images():"
    },
    {
        "line": 17,
        "fullcodeline": "data=json.dumps({\"image\": image}),"
    },
    {
        "line": 27,
        "fullcodeline": "await asyncio.sleep(2)"
    },
    {
        "line": 28,
        "fullcodeline": "r = await api_request(app, \"users\", name)"
    },
    {
        "line": 29,
        "fullcodeline": "user_info = r.json()"
    },
    {
        "line": 21,
        "fullcodeline": "with pytest.raises(Exception):"
    },
    {
        "line": 34,
        "fullcodeline": "url, headers={\"Authorization\": \"token %s\" % token}"
    },
    {
        "line": 22,
        "fullcodeline": "r.raise_for_status()"
    }
]