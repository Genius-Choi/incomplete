[
    {
        "line": 3,
        "fullcodeline": "int sign, expSign = FALSE;"
    },
    {
        "line": 9,
        "fullcodeline": "int exp = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "int fracExp = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "p = string;"
    },
    {
        "line": 52,
        "fullcodeline": "decPt = -1;"
    },
    {
        "line": 72,
        "fullcodeline": "pExp = p;"
    },
    {
        "line": 73,
        "fullcodeline": "p -= mantSize;"
    },
    {
        "line": 120,
        "fullcodeline": "p = pExp;"
    },
    {
        "line": 164,
        "fullcodeline": "dblExp = 1.0;"
    },
    {
        "line": 34,
        "fullcodeline": "while (*p == ' ' || *p == '\\t' || *p == '\\n' || *p == '\\r') {"
    },
    {
        "line": 37,
        "fullcodeline": "if (*p == '-') {"
    },
    {
        "line": 53,
        "fullcodeline": "for (mantSize = 0; ; mantSize += 1)"
    },
    {
        "line": 74,
        "fullcodeline": "if (decPt < 0) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (mantSize > 18) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (mantSize == 0) {"
    },
    {
        "line": 121,
        "fullcodeline": "if ((*p == 'E') || (*p == 'e')) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (exp < -maxExponent) {"
    },
    {
        "line": 165,
        "fullcodeline": "for (d = powersOf10; exp != 0; exp >>= 1, d += 1) {"
    },
    {
        "line": 177,
        "fullcodeline": "if (endPtr != NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 38,
        "fullcodeline": "sign = TRUE;"
    },
    {
        "line": 39,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 55,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 62,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 75,
        "fullcodeline": "decPt = mantSize;"
    },
    {
        "line": 80,
        "fullcodeline": "fracExp = decPt - 18;"
    },
    {
        "line": 81,
        "fullcodeline": "mantSize = 18;"
    },
    {
        "line": 86,
        "fullcodeline": "fraction = 0.0;"
    },
    {
        "line": 87,
        "fullcodeline": "p = string;"
    },
    {
        "line": 122,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 138,
        "fullcodeline": "exp = fracExp - exp;"
    },
    {
        "line": 151,
        "fullcodeline": "exp = maxExponent;"
    },
    {
        "line": 152,
        "fullcodeline": "expSign = TRUE;"
    },
    {
        "line": 153,
        "fullcodeline": "errno = ERANGE;"
    },
    {
        "line": 171,
        "fullcodeline": "fraction /= dblExp;"
    },
    {
        "line": 178,
        "fullcodeline": "*endPtr = (char *) p;"
    },
    {
        "line": 44,
        "fullcodeline": "sign = FALSE;"
    },
    {
        "line": 56,
        "fullcodeline": "if (!(c>='0'&&c<='9')) {"
    },
    {
        "line": 77,
        "fullcodeline": "mantSize -= 1;\t\t\t/* One of the digits was the point. */"
    },
    {
        "line": 83,
        "fullcodeline": "fracExp = decPt - mantSize;"
    },
    {
        "line": 91,
        "fullcodeline": "frac1 = 0;"
    },
    {
        "line": 102,
        "fullcodeline": "frac2 = 0;"
    },
    {
        "line": 113,
        "fullcodeline": "fraction = (1.0e9 * frac1) + frac2;"
    },
    {
        "line": 123,
        "fullcodeline": "if (*p == '-') {"
    },
    {
        "line": 132,
        "fullcodeline": "while ((*p >= '0') && (*p <= '9')) {"
    },
    {
        "line": 140,
        "fullcodeline": "exp = fracExp + exp;"
    },
    {
        "line": 166,
        "fullcodeline": "if (exp & 01) {"
    },
    {
        "line": 173,
        "fullcodeline": "fraction *= dblExp;"
    },
    {
        "line": 182,
        "fullcodeline": "return -fraction;"
    },
    {
        "line": 41,
        "fullcodeline": "if (*p == '+') {"
    },
    {
        "line": 60,
        "fullcodeline": "decPt = mantSize;"
    },
    {
        "line": 92,
        "fullcodeline": "for ( ; mantSize > 9; mantSize -= 1)"
    },
    {
        "line": 103,
        "fullcodeline": "for (; mantSize > 0; mantSize -= 1)"
    },
    {
        "line": 124,
        "fullcodeline": "expSign = TRUE;"
    },
    {
        "line": 125,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 133,
        "fullcodeline": "exp = exp * 10 + (*p - '0');"
    },
    {
        "line": 134,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 154,
        "fullcodeline": "} else if (exp > maxExponent) {"
    },
    {
        "line": 167,
        "fullcodeline": "dblExp *= *d;"
    },
    {
        "line": 42,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 57,
        "fullcodeline": "if ((c != '.') || (decPt >= 0)) {"
    },
    {
        "line": 94,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 95,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 100,
        "fullcodeline": "frac1 = 10*frac1 + (c - '0');"
    },
    {
        "line": 105,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 106,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 111,
        "fullcodeline": "frac2 = 10*frac2 + (c - '0');"
    },
    {
        "line": 130,
        "fullcodeline": "expSign = FALSE;"
    },
    {
        "line": 155,
        "fullcodeline": "exp = maxExponent;"
    },
    {
        "line": 156,
        "fullcodeline": "expSign = FALSE;"
    },
    {
        "line": 157,
        "fullcodeline": "errno = ERANGE;"
    },
    {
        "line": 96,
        "fullcodeline": "if (c == '.') {"
    },
    {
        "line": 107,
        "fullcodeline": "if (c == '.') {"
    },
    {
        "line": 127,
        "fullcodeline": "if (*p == '+') {"
    },
    {
        "line": 98,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 109,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 128,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 158,
        "fullcodeline": "} else if (exp < 0) {"
    },
    {
        "line": 159,
        "fullcodeline": "expSign = TRUE;"
    },
    {
        "line": 160,
        "fullcodeline": "exp = -exp;"
    },
    {
        "line": 162,
        "fullcodeline": "expSign = FALSE;"
    }
]