[
    {
        "line": 12,
        "fullcodeline": "fields: DefaultDict[str, List[Any]] = defaultdict(list)"
    },
    {
        "line": 14,
        "fullcodeline": "if body and boundary:"
    },
    {
        "line": 15,
        "fullcodeline": "form_parts = body.split(boundary)"
    },
    {
        "line": 64,
        "fullcodeline": "return {k: v if len(v) > 1 else v[0] for k, v in fields.items()}"
    },
    {
        "line": 16,
        "fullcodeline": "for form_part in form_parts[1:-1]:"
    },
    {
        "line": 17,
        "fullcodeline": "file_name = None"
    },
    {
        "line": 18,
        "fullcodeline": "content_type = \"text/plain\""
    },
    {
        "line": 19,
        "fullcodeline": "content_charset = \"utf-8\""
    },
    {
        "line": 20,
        "fullcodeline": "field_name = None"
    },
    {
        "line": 21,
        "fullcodeline": "line_index = 2"
    },
    {
        "line": 22,
        "fullcodeline": "line_end_index = 0"
    },
    {
        "line": 23,
        "fullcodeline": "headers: List[Tuple[str, str]] = []"
    },
    {
        "line": 25,
        "fullcodeline": "while line_end_index != -1:"
    },
    {
        "line": 26,
        "fullcodeline": "line_end_index = form_part.find(b\"\\r\\n\", line_index)"
    },
    {
        "line": 27,
        "fullcodeline": "form_line = form_part[line_index:line_end_index].decode(\"utf-8\")"
    },
    {
        "line": 32,
        "fullcodeline": "line_index = line_end_index + 2"
    },
    {
        "line": 33,
        "fullcodeline": "colon_index = form_line.index(\":\")"
    },
    {
        "line": 34,
        "fullcodeline": "current_idx = colon_index + 2"
    },
    {
        "line": 35,
        "fullcodeline": "form_header_field = form_line[0:colon_index].lower()"
    },
    {
        "line": 49,
        "fullcodeline": "headers.append((form_header_field, form_header_value))"
    },
    {
        "line": 52,
        "fullcodeline": "post_data = form_part[line_index:-4].lstrip(b\"\\r\\n\")"
    },
    {
        "line": 29,
        "fullcodeline": "if not form_line:"
    },
    {
        "line": 36,
        "fullcodeline": "form_header_value, form_parameters = parse_content_header(form_line[current_idx:])"
    },
    {
        "line": 38,
        "fullcodeline": "if form_header_field == \"content-disposition\":"
    },
    {
        "line": 39,
        "fullcodeline": "field_name = form_parameters.get(\"name\")"
    },
    {
        "line": 40,
        "fullcodeline": "file_name = form_parameters.get(\"filename\")"
    },
    {
        "line": 54,
        "fullcodeline": "form_file = UploadFile("
    },
    {
        "line": 42,
        "fullcodeline": "if file_name is None and (filename_with_asterisk := form_parameters.get(\"filename*\")):"
    },
    {
        "line": 46,
        "fullcodeline": "elif form_header_field == \"content-type\":"
    },
    {
        "line": 57,
        "fullcodeline": "fields[field_name].append(form_file)"
    },
    {
        "line": 44,
        "fullcodeline": "file_name = unquote(value, encoding=encoding or content_charset)"
    },
    {
        "line": 47,
        "fullcodeline": "content_type = form_header_value"
    },
    {
        "line": 48,
        "fullcodeline": "content_charset = form_parameters.get(\"charset\", \"utf-8\")"
    },
    {
        "line": 55,
        "fullcodeline": "content_type=content_type, filename=file_name, file_data=post_data, headers=dict(headers)"
    },
    {
        "line": 43,
        "fullcodeline": "encoding, _, value = decode_rfc2231(filename_with_asterisk)"
    },
    {
        "line": 60,
        "fullcodeline": "fields[field_name].append(decode_json(post_data))"
    },
    {
        "line": 62,
        "fullcodeline": "fields[field_name].append(post_data.decode(content_charset))"
    }
]