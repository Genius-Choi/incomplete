[
    {
        "line": 18,
        "fullcodeline": "template = None"
    },
    {
        "line": 20,
        "fullcodeline": "manager = None"
    },
    {
        "line": 47,
        "fullcodeline": "form = None"
    },
    {
        "line": 362,
        "fullcodeline": "context[\"template\"] = template"
    },
    {
        "line": 21,
        "fullcodeline": "if o_type in ("
    },
    {
        "line": 48,
        "fullcodeline": "if action == \"addnewcontainer\":"
    },
    {
        "line": 34,
        "fullcodeline": "kw = {}"
    },
    {
        "line": 56,
        "fullcodeline": "form = ContainerForm(data=request.POST.copy())"
    },
    {
        "line": 35,
        "fullcodeline": "if o_type is not None and int(o_id) > 0:"
    },
    {
        "line": 42,
        "fullcodeline": "elif o_type in (\"share\", \"sharecomment\", \"chat\"):"
    },
    {
        "line": 51,
        "fullcodeline": "if not request.method == \"POST\":"
    },
    {
        "line": 57,
        "fullcodeline": "if form.is_valid():"
    },
    {
        "line": 98,
        "fullcodeline": "elif action == \"add\":"
    },
    {
        "line": 36,
        "fullcodeline": "o_id = int(o_id)"
    },
    {
        "line": 37,
        "fullcodeline": "kw[str(o_type)] = o_id"
    },
    {
        "line": 39,
        "fullcodeline": "manager = BaseContainer(conn, **kw)"
    },
    {
        "line": 43,
        "fullcodeline": "manager = BaseShare(conn, o_id)"
    },
    {
        "line": 45,
        "fullcodeline": "manager = BaseContainer(conn)"
    },
    {
        "line": 58,
        "fullcodeline": "logger.debug(\"Create new in %s: %s\" % (o_type, str(form.cleaned_data)))"
    },
    {
        "line": 90,
        "fullcodeline": "rdict = {\"bad\": \"false\", \"id\": oid}"
    },
    {
        "line": 93,
        "fullcodeline": "d = dict()"
    },
    {
        "line": 96,
        "fullcodeline": "rdict = {\"bad\": \"true\", \"errs\": d}"
    },
    {
        "line": 99,
        "fullcodeline": "template = \"webclient/public/share_form.html\""
    },
    {
        "line": 100,
        "fullcodeline": "experimenters = list(conn.getExperimenters())"
    },
    {
        "line": 101,
        "fullcodeline": "experimenters.sort(key=lambda x: x.getOmeName().lower())"
    },
    {
        "line": 137,
        "fullcodeline": "template = \"webclient/public/share_form.html\""
    },
    {
        "line": 138,
        "fullcodeline": "context = {\"manager\": manager, \"form\": form}"
    },
    {
        "line": 52,
        "fullcodeline": "return JsonResponse("
    },
    {
        "line": 63,
        "fullcodeline": "if o_type == \"project\" and hasattr(manager, o_type) and o_id > 0:"
    },
    {
        "line": 91,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 94,
        "fullcodeline": "for e in form.errors.items():"
    },
    {
        "line": 97,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 102,
        "fullcodeline": "if o_type == \"share\":"
    },
    {
        "line": 140,
        "fullcodeline": "elif action == \"edit\":"
    },
    {
        "line": 64,
        "fullcodeline": "oid = manager.createDataset(name, description, owner=owner)"
    },
    {
        "line": 103,
        "fullcodeline": "img_ids = request.GET.getlist(\"image\", request.POST.getlist(\"image\"))"
    },
    {
        "line": 106,
        "fullcodeline": "images_to_share = list(conn.getObjects(\"Image\", img_ids))"
    },
    {
        "line": 41,
        "fullcodeline": "return handlerInternalError(request, x)"
    },
    {
        "line": 53,
        "fullcodeline": "{\"Error\": \"Must use POST to create container\"}, status=405"
    },
    {
        "line": 65,
        "fullcodeline": "elif o_type == \"tagset\" and o_id > 0:"
    },
    {
        "line": 95,
        "fullcodeline": "d.update({e[0]: unicode(e[1])})"
    },
    {
        "line": 104,
        "fullcodeline": "if request.method == \"GET\" and len(img_ids) == 0:"
    },
    {
        "line": 107,
        "fullcodeline": "if request.method == \"POST\":"
    },
    {
        "line": 142,
        "fullcodeline": "if o_id is None:"
    },
    {
        "line": 144,
        "fullcodeline": "if o_type == \"share\" and int(o_id) > 0:"
    },
    {
        "line": 163,
        "fullcodeline": "elif action == \"save\":"
    },
    {
        "line": 66,
        "fullcodeline": "oid = manager.createTag(name, description, owner=owner)"
    },
    {
        "line": 108,
        "fullcodeline": "form = BasketShareForm("
    },
    {
        "line": 130,
        "fullcodeline": "initial = {"
    },
    {
        "line": 136,
        "fullcodeline": "form = BasketShareForm(initial=initial)"
    },
    {
        "line": 143,
        "fullcodeline": "raise Http404(\"No share ID\")"
    },
    {
        "line": 145,
        "fullcodeline": "template = \"webclient/public/share_form.html\""
    },
    {
        "line": 146,
        "fullcodeline": "manager.getMembers(o_id)"
    },
    {
        "line": 147,
        "fullcodeline": "manager.getComments(o_id)"
    },
    {
        "line": 148,
        "fullcodeline": "experimenters = list(conn.getExperimenters())"
    },
    {
        "line": 149,
        "fullcodeline": "experimenters.sort(key=lambda x: x.getOmeName().lower())"
    },
    {
        "line": 150,
        "fullcodeline": "initial = {"
    },
    {
        "line": 161,
        "fullcodeline": "form = ShareForm(initial=initial)  # 'guests':share.guestsInShare,"
    },
    {
        "line": 162,
        "fullcodeline": "context = {\"manager\": manager, \"form\": form}"
    },
    {
        "line": 67,
        "fullcodeline": "elif request.POST.get(\"folder_type\") in ("
    },
    {
        "line": 105,
        "fullcodeline": "return HttpResponse(\"No images specified\")"
    },
    {
        "line": 112,
        "fullcodeline": "if form.is_valid():"
    },
    {
        "line": 157,
        "fullcodeline": "if manager.share.getExpireDate() is not None:"
    },
    {
        "line": 165,
        "fullcodeline": "if not request.method == \"POST\":"
    },
    {
        "line": 169,
        "fullcodeline": "if o_type == \"share\":"
    },
    {
        "line": 198,
        "fullcodeline": "elif action == \"editname\":"
    },
    {
        "line": 76,
        "fullcodeline": "folder_type = request.POST.get(\"folder_type\")"
    },
    {
        "line": 119,
        "fullcodeline": "host = \"%s?server=%i\" % ("
    },
    {
        "line": 125,
        "fullcodeline": "shareId = manager.createShare("
    },
    {
        "line": 158,
        "fullcodeline": "initial[\"expiration\"] = manager.share.getExpireDate().strftime("
    },
    {
        "line": 170,
        "fullcodeline": "experimenters = list(conn.getExperimenters())"
    },
    {
        "line": 171,
        "fullcodeline": "experimenters.sort(key=lambda x: x.getOmeName().lower())"
    },
    {
        "line": 172,
        "fullcodeline": "form = ShareForm("
    },
    {
        "line": 77,
        "fullcodeline": "if folder_type == \"dataset\":"
    },
    {
        "line": 89,
        "fullcodeline": "return HttpResponseServerError(\"Object does not exist\")"
    },
    {
        "line": 109,
        "fullcodeline": "initial={\"experimenters\": experimenters, \"images\": images_to_share},"
    },
    {
        "line": 110,
        "fullcodeline": "data=request.POST.copy(),"
    },
    {
        "line": 128,
        "fullcodeline": "return HttpResponse(\"shareId:%s\" % shareId)"
    },
    {
        "line": 166,
        "fullcodeline": "return HttpResponseRedirect("
    },
    {
        "line": 175,
        "fullcodeline": "if form.is_valid():"
    },
    {
        "line": 197,
        "fullcodeline": "return HttpResponseServerError(\"Object does not exist\")"
    },
    {
        "line": 200,
        "fullcodeline": "if hasattr(manager, o_type) and o_id > 0:"
    },
    {
        "line": 211,
        "fullcodeline": "elif action == \"savename\":"
    },
    {
        "line": 78,
        "fullcodeline": "oid = manager.createDataset("
    },
    {
        "line": 85,
        "fullcodeline": "oid = conn.createContainer("
    },
    {
        "line": 134,
        "fullcodeline": "\"selected\": request.GET.getlist(\"image\"),"
    },
    {
        "line": 167,
        "fullcodeline": "reverse(\"manage_action_containers\", args=[\"edit\", o_type, o_id])"
    },
    {
        "line": 176,
        "fullcodeline": "logger.debug(\"Update share: %s\" % (str(form.cleaned_data)))"
    },
    {
        "line": 182,
        "fullcodeline": "host = \"%s?server=%i\" % ("
    },
    {
        "line": 188,
        "fullcodeline": "manager.updateShareOrDiscussion("
    },
    {
        "line": 191,
        "fullcodeline": "r = \"enable\" if enable else \"disable\""
    },
    {
        "line": 194,
        "fullcodeline": "template = \"webclient/public/share_form.html\""
    },
    {
        "line": 195,
        "fullcodeline": "context = {\"share\": manager, \"form\": form}"
    },
    {
        "line": 201,
        "fullcodeline": "obj = getattr(manager, o_type)"
    },
    {
        "line": 202,
        "fullcodeline": "template = \"webclient/ajax_form/container_form_ajax.html\""
    },
    {
        "line": 207,
        "fullcodeline": "form = ContainerNameForm(initial={\"name\": txtValue})"
    },
    {
        "line": 208,
        "fullcodeline": "context = {\"manager\": manager, \"form\": form}"
    },
    {
        "line": 120,
        "fullcodeline": "request.build_absolute_uri("
    },
    {
        "line": 123,
        "fullcodeline": "int(conn.server_id),"
    },
    {
        "line": 173,
        "fullcodeline": "initial={\"experimenters\": experimenters}, data=request.POST.copy()"
    },
    {
        "line": 192,
        "fullcodeline": "return HttpResponse(r)"
    },
    {
        "line": 203,
        "fullcodeline": "if o_type == \"tag\":"
    },
    {
        "line": 210,
        "fullcodeline": "return HttpResponseServerError(\"Object does not exist\")"
    },
    {
        "line": 213,
        "fullcodeline": "if not request.method == \"POST\":"
    },
    {
        "line": 217,
        "fullcodeline": "if hasattr(manager, o_type) and o_id > 0:"
    },
    {
        "line": 233,
        "fullcodeline": "elif action == \"editdescription\":"
    },
    {
        "line": 121,
        "fullcodeline": "reverse(\"load_template\", args=[\"public\"])"
    },
    {
        "line": 204,
        "fullcodeline": "txtValue = obj.textValue"
    },
    {
        "line": 206,
        "fullcodeline": "txtValue = obj.getName()"
    },
    {
        "line": 218,
        "fullcodeline": "form = ContainerNameForm(data=request.POST.copy())"
    },
    {
        "line": 82,
        "fullcodeline": "img_ids=request.POST.getlist(\"image\", None),"
    },
    {
        "line": 183,
        "fullcodeline": "request.build_absolute_uri("
    },
    {
        "line": 186,
        "fullcodeline": "int(conn.server_id),"
    },
    {
        "line": 214,
        "fullcodeline": "return HttpResponseRedirect("
    },
    {
        "line": 219,
        "fullcodeline": "if form.is_valid():"
    },
    {
        "line": 232,
        "fullcodeline": "return HttpResponseServerError(\"Object does not exist\")"
    },
    {
        "line": 235,
        "fullcodeline": "if hasattr(manager, o_type) and o_id > 0:"
    },
    {
        "line": 242,
        "fullcodeline": "elif action == \"savedescription\":"
    },
    {
        "line": 184,
        "fullcodeline": "reverse(\"load_template\", args=[\"public\"])"
    },
    {
        "line": 215,
        "fullcodeline": "reverse(\"manage_action_containers\", args=[\"edit\", o_type, o_id])"
    },
    {
        "line": 220,
        "fullcodeline": "logger.debug(\"Update name form:\" + str(form.cleaned_data))"
    },
    {
        "line": 222,
        "fullcodeline": "rdict = {\"bad\": \"false\", \"o_type\": o_type}"
    },
    {
        "line": 223,
        "fullcodeline": "manager.updateName(o_type, name)"
    },
    {
        "line": 226,
        "fullcodeline": "d = dict()"
    },
    {
        "line": 229,
        "fullcodeline": "rdict = {\"bad\": \"true\", \"errs\": d}"
    },
    {
        "line": 236,
        "fullcodeline": "obj = getattr(manager, o_type)"
    },
    {
        "line": 237,
        "fullcodeline": "template = \"webclient/ajax_form/container_form_ajax.html\""
    },
    {
        "line": 238,
        "fullcodeline": "form = ContainerDescriptionForm(initial={\"description\": obj.description})"
    },
    {
        "line": 239,
        "fullcodeline": "context = {\"manager\": manager, \"form\": form}"
    },
    {
        "line": 224,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 227,
        "fullcodeline": "for e in form.errors.items():"
    },
    {
        "line": 230,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 241,
        "fullcodeline": "return HttpResponseServerError(\"Object does not exist\")"
    },
    {
        "line": 244,
        "fullcodeline": "if not request.method == \"POST\":"
    },
    {
        "line": 249,
        "fullcodeline": "if hasattr(manager, o_type) and o_id > 0:"
    },
    {
        "line": 265,
        "fullcodeline": "elif action == \"remove\":"
    },
    {
        "line": 250,
        "fullcodeline": "form = ContainerDescriptionForm(data=request.POST.copy())"
    },
    {
        "line": 277,
        "fullcodeline": "rdict = {\"bad\": \"false\"}"
    },
    {
        "line": 228,
        "fullcodeline": "d.update({e[0]: unicode(e[1])})"
    },
    {
        "line": 245,
        "fullcodeline": "return HttpResponseServerError("
    },
    {
        "line": 251,
        "fullcodeline": "if form.is_valid():"
    },
    {
        "line": 264,
        "fullcodeline": "return HttpResponseServerError(\"Object does not exist\")"
    },
    {
        "line": 278,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 279,
        "fullcodeline": "elif action == \"removefromshare\":"
    },
    {
        "line": 246,
        "fullcodeline": "\"Action '%s' on the '%s' id:%s cannot be complited\""
    },
    {
        "line": 252,
        "fullcodeline": "logger.debug(\"Update name form:\" + str(form.cleaned_data))"
    },
    {
        "line": 254,
        "fullcodeline": "manager.updateDescription(o_type, description)"
    },
    {
        "line": 255,
        "fullcodeline": "rdict = {\"bad\": \"false\"}"
    },
    {
        "line": 258,
        "fullcodeline": "d = dict()"
    },
    {
        "line": 261,
        "fullcodeline": "rdict = {\"bad\": \"true\", \"errs\": d}"
    },
    {
        "line": 271,
        "fullcodeline": "manager.remove(parents.split(\"|\"))"
    },
    {
        "line": 280,
        "fullcodeline": "image_id = request.POST.get(\"source\")"
    },
    {
        "line": 287,
        "fullcodeline": "rdict = {\"bad\": \"false\"}"
    },
    {
        "line": 247,
        "fullcodeline": "% (action, o_type, o_id)"
    },
    {
        "line": 256,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 259,
        "fullcodeline": "for e in form.errors.items():"
    },
    {
        "line": 262,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 288,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 289,
        "fullcodeline": "elif action == \"delete\":"
    },
    {
        "line": 273,
        "fullcodeline": "logger.error(traceback.format_exc())"
    },
    {
        "line": 274,
        "fullcodeline": "rdict = {\"bad\": \"true\", \"errs\": str(x)}"
    },
    {
        "line": 282,
        "fullcodeline": "manager.removeImage(image_id)"
    },
    {
        "line": 291,
        "fullcodeline": "child = toBoolean(request.POST.get(\"child\"))"
    },
    {
        "line": 292,
        "fullcodeline": "anns = toBoolean(request.POST.get(\"anns\"))"
    },
    {
        "line": 260,
        "fullcodeline": "d.update({e[0]: unicode(e[1])})"
    },
    {
        "line": 275,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 313,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 314,
        "fullcodeline": "elif action == \"deletemany\":"
    },
    {
        "line": 284,
        "fullcodeline": "logger.error(traceback.format_exc())"
    },
    {
        "line": 285,
        "fullcodeline": "rdict = {\"bad\": \"true\", \"errs\": str(x)}"
    },
    {
        "line": 294,
        "fullcodeline": "handle = manager.deleteItem(child, anns)"
    },
    {
        "line": 295,
        "fullcodeline": "request.session[\"callback\"][str(handle)] = {"
    },
    {
        "line": 305,
        "fullcodeline": "request.session.modified = True"
    },
    {
        "line": 316,
        "fullcodeline": "object_ids = {"
    },
    {
        "line": 326,
        "fullcodeline": "child = toBoolean(request.POST.get(\"child\"))"
    },
    {
        "line": 327,
        "fullcodeline": "anns = toBoolean(request.POST.get(\"anns\"))"
    },
    {
        "line": 328,
        "fullcodeline": "logger.debug("
    },
    {
        "line": 286,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 312,
        "fullcodeline": "rdict = {\"bad\": \"false\"}"
    },
    {
        "line": 329,
        "fullcodeline": "\"Delete many: child? %s anns? %s object_ids %s\" % (child, anns, object_ids)"
    },
    {
        "line": 361,
        "fullcodeline": "return JsonResponse(rdict)"
    },
    {
        "line": 307,
        "fullcodeline": "logger.error("
    },
    {
        "line": 310,
        "fullcodeline": "rdict = {\"bad\": \"true\", \"errs\": str(x)}"
    },
    {
        "line": 352,
        "fullcodeline": "request.session.modified = True"
    },
    {
        "line": 302,
        "fullcodeline": "\"dreport\": _formatReport(handle),"
    },
    {
        "line": 308,
        "fullcodeline": "\"Failed to delete: %r\" % {\"did\": o_id, \"dtype\": o_type}, exc_info=True"
    },
    {
        "line": 332,
        "fullcodeline": "for key, ids in object_ids.items():"
    },
    {
        "line": 360,
        "fullcodeline": "rdict = {\"bad\": \"false\"}"
    },
    {
        "line": 303,
        "fullcodeline": "\"start_time\": datetime.datetime.now(),"
    },
    {
        "line": 317,
        "fullcodeline": "\"Image\": request.POST.getlist(\"image\"),"
    },
    {
        "line": 318,
        "fullcodeline": "\"Dataset\": request.POST.getlist(\"dataset\"),"
    },
    {
        "line": 319,
        "fullcodeline": "\"Project\": request.POST.getlist(\"project\"),"
    },
    {
        "line": 320,
        "fullcodeline": "\"Annotation\": request.POST.getlist(\"tag\"),"
    },
    {
        "line": 321,
        "fullcodeline": "\"Screen\": request.POST.getlist(\"screen\"),"
    },
    {
        "line": 322,
        "fullcodeline": "\"Plate\": request.POST.getlist(\"plate\"),"
    },
    {
        "line": 323,
        "fullcodeline": "\"Well\": request.POST.getlist(\"well\"),"
    },
    {
        "line": 324,
        "fullcodeline": "\"PlateAcquisition\": request.POST.getlist(\"acquisition\"),"
    },
    {
        "line": 354,
        "fullcodeline": "logger.error("
    },
    {
        "line": 358,
        "fullcodeline": "raise"
    },
    {
        "line": 355,
        "fullcodeline": "\"Failed to delete: %r\" % {\"did\": ids, \"dtype\": key}, exc_info=True"
    },
    {
        "line": 333,
        "fullcodeline": "if ids is not None and len(ids) > 0:"
    },
    {
        "line": 334,
        "fullcodeline": "handle = manager.deleteObjects(key, ids, child, anns)"
    },
    {
        "line": 337,
        "fullcodeline": "dMap = {"
    },
    {
        "line": 351,
        "fullcodeline": "request.session[\"callback\"][str(handle)] = dMap"
    },
    {
        "line": 335,
        "fullcodeline": "if key == \"PlateAcquisition\":"
    },
    {
        "line": 345,
        "fullcodeline": "if len(ids) > 1:"
    },
    {
        "line": 336,
        "fullcodeline": "key = \"Plate Run\"  # for nicer user message"
    },
    {
        "line": 346,
        "fullcodeline": "dMap[\"delmany\"] = len(ids)"
    },
    {
        "line": 347,
        "fullcodeline": "dMap[\"did\"] = ids"
    },
    {
        "line": 349,
        "fullcodeline": "dMap[\"delmany\"] = False"
    },
    {
        "line": 350,
        "fullcodeline": "dMap[\"did\"] = ids[0]"
    },
    {
        "line": 342,
        "fullcodeline": "\"dreport\": _formatReport(handle),"
    },
    {
        "line": 339,
        "fullcodeline": "\"start_time\": datetime.datetime.now(),"
    }
]