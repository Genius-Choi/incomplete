[
    {
        "line": 9,
        "fullcodeline": "if (mon_caps.is_capable(cct, CEPH_ENTITY_TYPE_MON,"
    },
    {
        "line": 12,
        "fullcodeline": "(pool_name == nullptr ?"
    },
    {
        "line": 20,
        "fullcodeline": "if (!key_server.get_service_caps(entity_name, CEPH_ENTITY_TYPE_OSD,"
    },
    {
        "line": 28,
        "fullcodeline": "if (caps_info.caps.length() > 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "auto p = caps_info.caps.cbegin();"
    },
    {
        "line": 40,
        "fullcodeline": "if (!osd_cap.parse(caps_str, nullptr)) {"
    },
    {
        "line": 13,
        "fullcodeline": "CommandArgs{} /* pool DNE, require unrestricted cap */ :"
    },
    {
        "line": 14,
        "fullcodeline": "CommandArgs{{\"poolname\", *pool_name}}),"
    },
    {
        "line": 22,
        "fullcodeline": "dout(10) << \"unable to locate OSD cap data for \" << entity_name"
    },
    {
        "line": 41,
        "fullcodeline": "dout(10) << \"unable to parse OSD cap data for \" << entity_name"
    },
    {
        "line": 53,
        "fullcodeline": "if (grant.profile.is_valid()) {"
    },
    {
        "line": 31,
        "fullcodeline": "decode(caps_str, p);"
    },
    {
        "line": 33,
        "fullcodeline": "derr << \"corrupt OSD cap data for \" << entity_name << \" in auth db\""
    },
    {
        "line": 59,
        "fullcodeline": "} else if (is_osd_writable(grant, pool_name)) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (is_osd_writable(profile_grant, pool_name)) {"
    }
]