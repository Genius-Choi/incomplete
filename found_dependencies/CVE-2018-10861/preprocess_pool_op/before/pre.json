[
    {
        "line": 3,
        "fullcodeline": "op->mark_osdmon_event(__func__);"
    },
    {
        "line": 4,
        "fullcodeline": "MPoolOp *m = static_cast<MPoolOp*>(op->get_req());"
    },
    {
        "line": 16,
        "fullcodeline": "const pg_pool_t *p = osdmap.get_pg_pool(m->pool);"
    },
    {
        "line": 28,
        "fullcodeline": "bool snap_exists = false;"
    },
    {
        "line": 6,
        "fullcodeline": "if (m->fsid != mon->monmap->fsid) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (m->op == POOL_OP_CREATE)"
    },
    {
        "line": 17,
        "fullcodeline": "if (p == nullptr) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (p->snap_exists(m->name.c_str()))"
    },
    {
        "line": 7,
        "fullcodeline": "dout(0) << __func__ << \" drop message on fsid \" << m->fsid"
    },
    {
        "line": 9,
        "fullcodeline": "_pool_op_reply(op, -EINVAL, osdmap.get_epoch());"
    },
    {
        "line": 30,
        "fullcodeline": "snap_exists = true;"
    },
    {
        "line": 14,
        "fullcodeline": "return preprocess_pool_op_create(op);"
    },
    {
        "line": 18,
        "fullcodeline": "dout(10) << \"attempt to operate on non-existent pool id \" << m->pool << dendl;"
    },
    {
        "line": 19,
        "fullcodeline": "if (m->op == POOL_OP_DELETE) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (p->is_pool_snaps_mode()) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (p->is_unmanaged_snaps_mode() || p->is_tier()) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (osdmap.lookup_pg_pool_name(m->name.c_str()) >= 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "_pool_op_reply(op, 0, osdmap.get_epoch());"
    },
    {
        "line": 35,
        "fullcodeline": "_pool_op_reply(op, -EINVAL, osdmap.get_epoch());"
    },
    {
        "line": 39,
        "fullcodeline": "_pool_op_reply(op, 0, osdmap.get_epoch());"
    },
    {
        "line": 45,
        "fullcodeline": "_pool_op_reply(op, -EINVAL, osdmap.get_epoch());"
    },
    {
        "line": 51,
        "fullcodeline": "_pool_op_reply(op, -EINVAL, osdmap.get_epoch());"
    },
    {
        "line": 55,
        "fullcodeline": "_pool_op_reply(op, 0, osdmap.get_epoch());"
    },
    {
        "line": 61,
        "fullcodeline": "_pool_op_reply(op, -EINVAL, osdmap.get_epoch());"
    },
    {
        "line": 65,
        "fullcodeline": "_pool_op_reply(op, 0, osdmap.get_epoch());"
    },
    {
        "line": 71,
        "fullcodeline": "_pool_op_reply(op, 0, osdmap.get_epoch());"
    },
    {
        "line": 22,
        "fullcodeline": "_pool_op_reply(op, -ENOENT, osdmap.get_epoch());"
    }
]