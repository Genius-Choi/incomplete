[
    {
        "line": 2,
        "fullcodeline": "mock_env._create_temp_config_dir = False"
    },
    {
        "line": 3,
        "fullcodeline": "mock_env.config_dir = tmp_path / \"config\""
    },
    {
        "line": 5,
        "fullcodeline": "session_dir = mock_env.config_dir / SESSIONS_DIR_NAME / DUMMY_HOST"
    },
    {
        "line": 6,
        "fullcodeline": "session_dir.mkdir(parents=True)"
    },
    {
        "line": 10,
        "fullcodeline": "result = httpie("
    },
    {
        "line": 13,
        "fullcodeline": "assert result.exit_status == ExitStatus.SUCCESS"
    },
    {
        "line": 7,
        "fullcodeline": "for original_session_file in SESSION_FILES_OLD:"
    },
    {
        "line": 15,
        "fullcodeline": "for refactored_session_file, expected_session_file in zip("
    },
    {
        "line": 11,
        "fullcodeline": "'cli', 'sessions', 'upgrade-all', *extra_args, env=mock_env"
    },
    {
        "line": 8,
        "fullcodeline": "shutil.copy(original_session_file, session_dir)"
    },
    {
        "line": 19,
        "fullcodeline": "assert read_session_file(refactored_session_file) == read_session_file("
    },
    {
        "line": 16,
        "fullcodeline": "sorted(session_dir.glob(\"*.json\")),"
    }
]