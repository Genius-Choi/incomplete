[
    {
        "line": 3,
        "fullcodeline": "const int alignment = Get_Alignement() - 1;"
    },
    {
        "line": 13,
        "fullcodeline": "Sint64 pitch = (Sint64)width + (Sint64)alignment;"
    },
    {
        "line": 14,
        "fullcodeline": "pitch += alignment;"
    },
    {
        "line": 15,
        "fullcodeline": "pitch &= ~alignment;"
    },
    {
        "line": 16,
        "fullcodeline": "size = height * pitch + sizeof (void *) + alignment;"
    },
    {
        "line": 22,
        "fullcodeline": "ptr = SDL_malloc((size_t)size);"
    },
    {
        "line": 28,
        "fullcodeline": "pixels = (void *)(((uintptr_t)ptr + sizeof(void *) + alignment) & ~alignment);"
    },
    {
        "line": 29,
        "fullcodeline": "((void **)pixels)[-1] = ptr;"
    },
    {
        "line": 31,
        "fullcodeline": "textbuf = SDL_CreateRGBSurfaceWithFormatFrom(pixels, width, height, 0, pitch, SDL_PIXELFORMAT_INDEX8);"
    },
    {
        "line": 38,
        "fullcodeline": "textbuf->flags &= ~SDL_PREALLOC;"
    },
    {
        "line": 39,
        "fullcodeline": "textbuf->flags |= SDL_SIMD_ALIGNED;"
    },
    {
        "line": 42,
        "fullcodeline": "SDL_memset(pixels, 0, height * pitch);"
    },
    {
        "line": 45,
        "fullcodeline": "*color = 1;"
    },
    {
        "line": 59,
        "fullcodeline": "SDL_SetColorKey(textbuf, SDL_TRUE, 0);"
    },
    {
        "line": 17,
        "fullcodeline": "if (size < 0 || size > SDL_MAX_SINT32) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (ptr == NULL) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (textbuf == NULL) {"
    },
    {
        "line": 50,
        "fullcodeline": "palette->colors[0].r = 255 - fg.r;"
    },
    {
        "line": 51,
        "fullcodeline": "palette->colors[0].g = 255 - fg.g;"
    },
    {
        "line": 52,
        "fullcodeline": "palette->colors[0].b = 255 - fg.b;"
    },
    {
        "line": 53,
        "fullcodeline": "palette->colors[1].r = fg.r;"
    },
    {
        "line": 54,
        "fullcodeline": "palette->colors[1].g = fg.g;"
    },
    {
        "line": 55,
        "fullcodeline": "palette->colors[1].b = fg.b;"
    },
    {
        "line": 56,
        "fullcodeline": "palette->colors[1].a = fg.a;"
    },
    {
        "line": 33,
        "fullcodeline": "SDL_free(ptr);"
    }
]