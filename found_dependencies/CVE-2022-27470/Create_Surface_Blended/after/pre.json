[
    {
        "line": 3,
        "fullcodeline": "const int alignment = Get_Alignement() - 1;"
    },
    {
        "line": 4,
        "fullcodeline": "SDL_Surface *textbuf = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "bgcolor = (fg.r << 16) | (fg.g << 8) | fg.b;"
    },
    {
        "line": 11,
        "fullcodeline": "*color = bgcolor | (fg.a << 24);"
    },
    {
        "line": 14,
        "fullcodeline": "if (width != 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "Sint64 pitch = ((Sint64)width + (Sint64)alignment) * 4;"
    },
    {
        "line": 23,
        "fullcodeline": "pitch += alignment;"
    },
    {
        "line": 24,
        "fullcodeline": "pitch &= ~alignment;"
    },
    {
        "line": 25,
        "fullcodeline": "size = height * pitch + sizeof (void *) + alignment;"
    },
    {
        "line": 31,
        "fullcodeline": "ptr = SDL_malloc((size_t)size);"
    },
    {
        "line": 37,
        "fullcodeline": "pixels = (void *)(((uintptr_t)ptr + sizeof(void *) + alignment) & ~alignment);"
    },
    {
        "line": 40,
        "fullcodeline": "textbuf = SDL_CreateRGBSurfaceWithFormatFrom(pixels, width, height, 0, pitch, SDL_PIXELFORMAT_ARGB8888);"
    },
    {
        "line": 47,
        "fullcodeline": "textbuf->flags &= ~SDL_PREALLOC;"
    },
    {
        "line": 48,
        "fullcodeline": "textbuf->flags |= SDL_SIMD_ALIGNED;"
    },
    {
        "line": 26,
        "fullcodeline": "if (size < 0 || size > SDL_MAX_SINT32) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (ptr == NULL) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (textbuf == NULL) {"
    },
    {
        "line": 51,
        "fullcodeline": "SDL_memset4(pixels, bgcolor, (height * pitch) / 4);"
    },
    {
        "line": 54,
        "fullcodeline": "if (fg.a != SDL_ALPHA_OPAQUE) {"
    },
    {
        "line": 55,
        "fullcodeline": "SDL_SetSurfaceBlendMode(textbuf, SDL_BLENDMODE_BLEND);"
    }
]