[
    {
        "line": 4,
        "fullcodeline": "Type LeftTy = BOI->getLeftHandSide()->getType();"
    },
    {
        "line": 5,
        "fullcodeline": "Type RightTy = BOI->getRightHandSide()->getType();"
    },
    {
        "line": 19,
        "fullcodeline": "Type mayBeBigInt = LeftTy.canBeBigInt() && RightTy.canBeBigInt()"
    },
    {
        "line": 25,
        "fullcodeline": "BOI->setType(Type::unionTy(numberType, mayBeBigInt));"
    },
    {
        "line": 8,
        "fullcodeline": "if (LeftTy.isNumberType() && RightTy.isNumberType()) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (LeftTy.isBigIntType() && RightTy.isBigIntType()) {"
    },
    {
        "line": 9,
        "fullcodeline": "BOI->setType(numberType);"
    },
    {
        "line": 15,
        "fullcodeline": "BOI->setType(Type::createBigInt());"
    }
]