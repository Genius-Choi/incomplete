[
    {
        "line": 2,
        "fullcodeline": "dashboard_conf_missing = False"
    },
    {
        "line": 12,
        "fullcodeline": "initialError = None"
    },
    {
        "line": 13,
        "fullcodeline": "debug = request.GET.get('debug', False)"
    },
    {
        "line": 14,
        "fullcodeline": "theme = request.GET.get('theme', config.ui_config['theme'])"
    },
    {
        "line": 15,
        "fullcodeline": "css_file = finders.find('css/dashboard-%s.css' % theme)"
    },
    {
        "line": 20,
        "fullcodeline": "context = {"
    },
    {
        "line": 33,
        "fullcodeline": "user = request.user"
    },
    {
        "line": 16,
        "fullcodeline": "if css_file is None:"
    },
    {
        "line": 37,
        "fullcodeline": "if name is not None:"
    },
    {
        "line": 45,
        "fullcodeline": "return render(request, \"dashboard.html\", context)"
    },
    {
        "line": 5,
        "fullcodeline": "config.check()"
    },
    {
        "line": 17,
        "fullcodeline": "initialError = \"Invalid theme '%s'\" % theme"
    },
    {
        "line": 18,
        "fullcodeline": "theme = config.ui_config['theme']"
    },
    {
        "line": 35,
        "fullcodeline": "context['userName'] = user.username"
    },
    {
        "line": 21,
        "fullcodeline": "'schemes_json': mark_safe(json.dumps(config.schemes)),"
    },
    {
        "line": 22,
        "fullcodeline": "'ui_config_json': mark_safe(json.dumps(config.ui_config)),"
    },
    {
        "line": 23,
        "fullcodeline": "'jsdebug': debug or settings.JAVASCRIPT_DEBUG,"
    },
    {
        "line": 27,
        "fullcodeline": "'querystring': mark_safe(json.dumps(dict(request.GET.items()))),"
    },
    {
        "line": 30,
        "fullcodeline": "'permissions': mark_safe(json.dumps(getPermissions(request.user))),"
    },
    {
        "line": 31,
        "fullcodeline": "'permissionsUnauthenticated': mark_safe(json.dumps(getPermissions(None)))"
    },
    {
        "line": 39,
        "fullcodeline": "dashboard = Dashboard.objects.get(name=name)"
    },
    {
        "line": 43,
        "fullcodeline": "context['initialState'] = dashboard.state"
    },
    {
        "line": 8,
        "fullcodeline": "dashboard_conf_missing = True"
    },
    {
        "line": 10,
        "fullcodeline": "raise"
    },
    {
        "line": 41,
        "fullcodeline": "context['initialError'] = \"Dashboard '%s' does not exist.\" % name"
    }
]