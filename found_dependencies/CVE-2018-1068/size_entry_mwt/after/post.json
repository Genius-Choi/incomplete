[
    {
        "line": 5,
        "fullcodeline": "unsigned int i, j, startoff, new_offset = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned int offsets[4];"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned int *offsets_update = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "startoff = state->buf_user_offset;"
    },
    {
        "line": 30,
        "fullcodeline": "memcpy(&offsets[1], &entry->watchers_offset,"
    },
    {
        "line": 37,
        "fullcodeline": "ret = ebt_buf_add(state, &offsets[1],"
    },
    {
        "line": 41,
        "fullcodeline": "buf_start = (char *) entry;"
    },
    {
        "line": 87,
        "fullcodeline": "startoff = state->buf_user_offset - startoff;"
    },
    {
        "line": 91,
        "fullcodeline": "*total -= startoff;"
    },
    {
        "line": 15,
        "fullcodeline": "if (!entry->bitmask) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (*total < sizeof(*entry) || entry->next_offset < sizeof(*entry))"
    },
    {
        "line": 26,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 39,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 49,
        "fullcodeline": "for (i = 0; i < 4 ; ++i) {"
    },
    {
        "line": 58,
        "fullcodeline": "for (i = 0, j = 1 ; j < 4 ; j++, i++) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (state->buf_kern_start == NULL) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (WARN_ON(*total < startoff))"
    },
    {
        "line": 16,
        "fullcodeline": "*total -= sizeof(struct ebt_entries);"
    },
    {
        "line": 34,
        "fullcodeline": "buf_start = state->buf_kern_start + state->buf_kern_offset;"
    },
    {
        "line": 35,
        "fullcodeline": "offsets_update = (unsigned int *) buf_start;"
    },
    {
        "line": 61,
        "fullcodeline": "char *buf = buf_start + offsets[i];"
    },
    {
        "line": 66,
        "fullcodeline": "match32 = (struct compat_ebt_entry_mwt *) buf;"
    },
    {
        "line": 67,
        "fullcodeline": "size = offsets[j] - offsets[i];"
    },
    {
        "line": 68,
        "fullcodeline": "ret = ebt_size_mwt(match32, size, i, state, base);"
    },
    {
        "line": 71,
        "fullcodeline": "new_offset += ret;"
    },
    {
        "line": 80,
        "fullcodeline": "unsigned int offset = buf_start - (char *) base;"
    },
    {
        "line": 82,
        "fullcodeline": "ret = xt_compat_add_offset(NFPROTO_BRIDGE, offset, new_offset);"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 17,
        "fullcodeline": "return ebt_buf_add(state, entry, sizeof(struct ebt_entries));"
    },
    {
        "line": 20,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 50,
        "fullcodeline": "if (offsets[i] >= *total)"
    },
    {
        "line": 52,
        "fullcodeline": "if (i == 0)"
    },
    {
        "line": 54,
        "fullcodeline": "if (offsets[i-1] > offsets[i])"
    },
    {
        "line": 63,
        "fullcodeline": "if (offsets[i] > offsets[j])"
    },
    {
        "line": 69,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 72,
        "fullcodeline": "if (offsets_update && new_offset) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 90,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 73,
        "fullcodeline": "pr_debug(\"change offset %d to %d\\n\","
    },
    {
        "line": 75,
        "fullcodeline": "offsets_update[i] = offsets[j] + new_offset;"
    },
    {
        "line": 51,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 55,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 64,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 74,
        "fullcodeline": "offsets_update[i], offsets[j] + new_offset);"
    }
]