[
    {
        "line": 18,
        "fullcodeline": "description = \"\""
    },
    {
        "line": 28,
        "fullcodeline": "description = description.strip()"
    },
    {
        "line": 29,
        "fullcodeline": "description = re.sub(r\"[\\t ]+\", \" \", description)"
    },
    {
        "line": 30,
        "fullcodeline": "description = re.sub(r\"[\\t \\r\\n]*[\\r\\n]+\", \"\\n\\n\", description)"
    },
    {
        "line": 21,
        "fullcodeline": "for text_node in text_nodes:"
    },
    {
        "line": 34,
        "fullcodeline": "if len(description) > max_size:"
    },
    {
        "line": 63,
        "fullcodeline": "return description if description else None"
    },
    {
        "line": 35,
        "fullcodeline": "new_desc = \"\""
    },
    {
        "line": 62,
        "fullcodeline": "description = new_desc.strip() + \"\u2026\""
    },
    {
        "line": 40,
        "fullcodeline": "for match in re.finditer(r\"\\s*\\S+\", description):"
    },
    {
        "line": 57,
        "fullcodeline": "if len(new_desc) > max_size:"
    },
    {
        "line": 22,
        "fullcodeline": "if len(description) < min_size:"
    },
    {
        "line": 58,
        "fullcodeline": "new_desc = new_desc[:max_size]"
    },
    {
        "line": 23,
        "fullcodeline": "text_node = re.sub(r\"[\\t \\r\\n]+\", \" \", text_node)"
    },
    {
        "line": 24,
        "fullcodeline": "description += text_node + \"\\n\\n\""
    },
    {
        "line": 41,
        "fullcodeline": "word = match.group()"
    },
    {
        "line": 45,
        "fullcodeline": "if len(word) + len(new_desc) < max_size:"
    },
    {
        "line": 46,
        "fullcodeline": "new_desc += word"
    },
    {
        "line": 52,
        "fullcodeline": "if len(new_desc) < min_size:"
    },
    {
        "line": 53,
        "fullcodeline": "new_desc += word"
    }
]