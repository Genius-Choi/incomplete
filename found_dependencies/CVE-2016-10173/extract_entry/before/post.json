[
    {
        "line": 2,
        "fullcodeline": "stats = {"
    },
    {
        "line": 3,
        "fullcodeline": ":current  => 0,"
    },
    {
        "line": 4,
        "fullcodeline": ":currinc  => 0,"
    },
    {
        "line": 5,
        "fullcodeline": ":entry    => entry"
    },
    {
        "line": 9,
        "fullcodeline": "dest = File.join(destdir, entry.full_name)"
    },
    {
        "line": 24,
        "fullcodeline": "fsync_dir(dest)"
    },
    {
        "line": 25,
        "fullcodeline": "fsync_dir(File.join(dest, \"..\"))"
    },
    {
        "line": 28,
        "fullcodeline": "destdir = File.join(destdir, File.dirname(entry.full_name))"
    },
    {
        "line": 29,
        "fullcodeline": "FileUtils.mkdir_p(destdir, :mode => 0755)"
    },
    {
        "line": 31,
        "fullcodeline": "destfile = File.join(destdir, File.basename(entry.full_name))"
    },
    {
        "line": 36,
        "fullcodeline": "File.open(destfile, \"wb\", entry.mode) do |os|"
    },
    {
        "line": 49,
        "fullcodeline": "FileUtils.chmod(entry.mode, destfile)"
    },
    {
        "line": 50,
        "fullcodeline": "fsync_dir(File.dirname(destfile))"
    },
    {
        "line": 51,
        "fullcodeline": "fsync_dir(File.join(File.dirname(destfile), \"..\"))"
    },
    {
        "line": 11,
        "fullcodeline": "yield :dir, entry.full_name, stats if block_given?"
    },
    {
        "line": 13,
        "fullcodeline": "if Archive::Tar::Minitar.dir?(dest)"
    },
    {
        "line": 34,
        "fullcodeline": "yield :file_start, entry.full_name, stats if block_given?"
    },
    {
        "line": 53,
        "fullcodeline": "yield :file_done, entry.full_name, stats if block_given?"
    },
    {
        "line": 20,
        "fullcodeline": "FileUtils.mkdir_p(dest, :mode => entry.mode)"
    },
    {
        "line": 21,
        "fullcodeline": "FileUtils.chmod(entry.mode, dest)"
    },
    {
        "line": 32,
        "fullcodeline": "FileUtils.chmod(0600, destfile) rescue nil  # Errno::ENOENT"
    },
    {
        "line": 15,
        "fullcodeline": "FileUtils.chmod(entry.mode, dest)"
    }
]