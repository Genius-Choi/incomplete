[
    {
        "line": 2,
        "fullcodeline": "largest_url = \"\""
    },
    {
        "line": 3,
        "fullcodeline": "largest_len = 0"
    },
    {
        "line": 5,
        "fullcodeline": "async def do(client: AsyncClient, url: str) -> Response:"
    },
    {
        "line": 8,
        "fullcodeline": "async with AsyncClient() as client:"
    },
    {
        "line": 17,
        "fullcodeline": "return largest_url, largest_len"
    },
    {
        "line": 9,
        "fullcodeline": "tasks = [do(client, url) for url in urls]"
    },
    {
        "line": 10,
        "fullcodeline": "responses: list[Response] = await gather_with_concurrency(10, *tasks, ignore_exceptions=True)"
    },
    {
        "line": 11,
        "fullcodeline": "for response in responses:"
    },
    {
        "line": 12,
        "fullcodeline": "len_int = int(response.headers.get(\"Content-Length\", 0))"
    },
    {
        "line": 13,
        "fullcodeline": "if len_int > largest_len:"
    },
    {
        "line": 14,
        "fullcodeline": "largest_url = str(response.url)"
    },
    {
        "line": 15,
        "fullcodeline": "largest_len = len_int"
    }
]