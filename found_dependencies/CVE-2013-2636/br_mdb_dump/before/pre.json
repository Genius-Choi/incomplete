[
    {
        "line": 4,
        "fullcodeline": "struct net *net = sock_net(skb->sk);"
    },
    {
        "line": 5,
        "fullcodeline": "struct nlmsghdr *nlh = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int idx = 0, s_idx;"
    },
    {
        "line": 8,
        "fullcodeline": "s_idx = cb->args[0];"
    },
    {
        "line": 10,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 13,
        "fullcodeline": "cb->seq = net->dev_base_seq + br_mdb_rehash_seq;"
    },
    {
        "line": 15,
        "fullcodeline": "for_each_netdev_rcu(net, dev) {"
    },
    {
        "line": 45,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 46,
        "fullcodeline": "cb->args[0] = idx;"
    },
    {
        "line": 16,
        "fullcodeline": "if (dev->priv_flags & IFF_EBRIDGE) {"
    },
    {
        "line": 44,
        "fullcodeline": "nlmsg_end(skb, nlh);"
    },
    {
        "line": 22,
        "fullcodeline": "nlh = nlmsg_put(skb, NETLINK_CB(cb->skb).portid,"
    },
    {
        "line": 28,
        "fullcodeline": "bpm = nlmsg_data(nlh);"
    },
    {
        "line": 29,
        "fullcodeline": "bpm->ifindex = dev->ifindex;"
    },
    {
        "line": 35,
        "fullcodeline": "cb->args[1] = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "nlmsg_end(skb, nlh);"
    },
    {
        "line": 38,
        "fullcodeline": "idx++;"
    },
    {
        "line": 19,
        "fullcodeline": "if (idx < s_idx)"
    },
    {
        "line": 25,
        "fullcodeline": "if (nlh == NULL)"
    },
    {
        "line": 30,
        "fullcodeline": "if (br_mdb_fill_info(skb, cb, dev) < 0)"
    },
    {
        "line": 32,
        "fullcodeline": "if (br_rports_fill_info(skb, cb, dev) < 0)"
    },
    {
        "line": 24,
        "fullcodeline": "sizeof(*bpm), NLM_F_MULTI);"
    }
]