[
    {
        "line": 2,
        "fullcodeline": "SPDBDownloaderOpt *opt = pd->opt;"
    },
    {
        "line": 3,
        "fullcodeline": "char *curl_cmd = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "char *extractor_cmd = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "char *abspath_to_archive = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "char *abspath_to_file = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "char *archive_name = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t archive_name_len = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "char *symbol_store_path = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "char *dbg_file = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "char *guid = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "char *archive_name_escaped  = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "char *user_agent = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "char *symbol_server = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "int res = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "archive_name_len = strlen (opt->dbg_file);"
    },
    {
        "line": 27,
        "fullcodeline": "archive_name = malloc (archive_name_len + 1);"
    },
    {
        "line": 31,
        "fullcodeline": "memcpy (archive_name, opt->dbg_file, archive_name_len + 1);"
    },
    {
        "line": 32,
        "fullcodeline": "archive_name[archive_name_len - 1] = '_';"
    },
    {
        "line": 33,
        "fullcodeline": "symbol_store_path = r_str_escape (opt->symbol_store_path);"
    },
    {
        "line": 34,
        "fullcodeline": "dbg_file = r_str_escape (opt->dbg_file);"
    },
    {
        "line": 35,
        "fullcodeline": "guid = r_str_escape (opt->guid);"
    },
    {
        "line": 36,
        "fullcodeline": "archive_name_escaped = r_str_escape (archive_name);"
    },
    {
        "line": 37,
        "fullcodeline": "user_agent = r_str_escape (opt->user_agent);"
    },
    {
        "line": 38,
        "fullcodeline": "symbol_server = r_str_escape (opt->symbol_server);"
    },
    {
        "line": 40,
        "fullcodeline": "abspath_to_archive = r_str_newf (\"%s%s%s%s%s%s%s\","
    },
    {
        "line": 46,
        "fullcodeline": "abspath_to_file = strdup (abspath_to_archive);"
    },
    {
        "line": 47,
        "fullcodeline": "abspath_to_file[strlen (abspath_to_file) - 1] = 'b';"
    },
    {
        "line": 18,
        "fullcodeline": "if (!opt->dbg_file || !*opt->dbg_file) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (!archive_name) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (r_file_exists (abspath_to_file)) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (res == 0) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (checkExtract () || opt->extract == 0) {"
    },
    {
        "line": 63,
        "fullcodeline": "res = 1;"
    },
    {
        "line": 65,
        "fullcodeline": "curl_cmd = r_str_newf (\"curl -sfLA \\\"%s\\\" \\\"%s/%s/%s/%s\\\" --create-dirs -o \\\"%s\\\"\","
    },
    {
        "line": 83,
        "fullcodeline": "const char *cabextractor = \"cabextract\";"
    },
    {
        "line": 84,
        "fullcodeline": "const char *format = \"%s -d \\\"%s\\\" \\\"%s\\\"\";"
    },
    {
        "line": 85,
        "fullcodeline": "char *abspath_to_dir = r_file_dirname (abspath_to_archive);"
    },
    {
        "line": 89,
        "fullcodeline": "extractor_cmd = r_str_newf (format, cabextractor, abspath_to_dir, abspath_to_archive);"
    },
    {
        "line": 92,
        "fullcodeline": "eprintf (\"Attempting to download compressed pdb in %s\\n\", abspath_to_archive);"
    },
    {
        "line": 109,
        "fullcodeline": "res = 1;"
    },
    {
        "line": 111,
        "fullcodeline": "archive_name_escaped[strlen (archive_name_escaped) - 1] = 'b';"
    },
    {
        "line": 113,
        "fullcodeline": "curl_cmd = r_str_newf (\"curl -sfLA \\\"%s\\\" \\\"%s/%s/%s/%s\\\" --create-dirs -o \\\"%s\\\"\","
    },
    {
        "line": 120,
        "fullcodeline": "eprintf (\"Attempting to download uncompressed pdb in %s\\n\", abspath_to_file);"
    },
    {
        "line": 93,
        "fullcodeline": "if ((cmd_ret = r_sys_cmd (curl_cmd) != 0)) {"
    },
    {
        "line": 121,
        "fullcodeline": "if ((cmd_ret = r_sys_cmd (curl_cmd) != 0)) {"
    },
    {
        "line": 94,
        "fullcodeline": "eprintf(\"curl exited with error %d\\n\", cmd_ret);"
    },
    {
        "line": 95,
        "fullcodeline": "res = 0;"
    },
    {
        "line": 103,
        "fullcodeline": "r_file_rm (abspath_to_archive);"
    },
    {
        "line": 123,
        "fullcodeline": "res = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "if (res && ((cmd_ret = r_sys_cmd (extractor_cmd)) != 0)) {"
    },
    {
        "line": 101,
        "fullcodeline": "res = 0;"
    }
]