[
    {
        "line": 2,
        "fullcodeline": "r_return_val_if_fail (s, false);"
    },
    {
        "line": 14,
        "fullcodeline": "struct addrinfo hints = { 0 };"
    },
    {
        "line": 16,
        "fullcodeline": "if (!proto) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (proto == R_SOCKET_PROTO_UNIX) {"
    },
    {
        "line": 17,
        "fullcodeline": "proto = R_SOCKET_PROTO_TCP;"
    },
    {
        "line": 29,
        "fullcodeline": "hints.ai_family = AF_UNSPEC; /* Allow IPv4 or IPv6 */"
    },
    {
        "line": 30,
        "fullcodeline": "hints.ai_protocol = proto;"
    },
    {
        "line": 31,
        "fullcodeline": "int gai = getaddrinfo (host, port, &hints, &res);"
    },
    {
        "line": 32,
        "fullcodeline": "if (gai != 0) {"
    },
    {
        "line": 37,
        "fullcodeline": "for (rp = res; rp != NULL; rp = rp->ai_next) {"
    },
    {
        "line": 33,
        "fullcodeline": "eprintf (\"r_socket_connect: Error in getaddrinfo: %s (%s:%s)\\n\","
    },
    {
        "line": 38,
        "fullcodeline": "int flag = 1;"
    },
    {
        "line": 40,
        "fullcodeline": "s->fd = socket (rp->ai_family, rp->ai_socktype, rp->ai_protocol);"
    },
    {
        "line": 45,
        "fullcodeline": "ret = setsockopt (s->fd, IPPROTO_TCP, TCP_NODELAY, &flag, sizeof (flag));"
    },
    {
        "line": 53,
        "fullcodeline": "r_socket_block_time (s, 0, 0, 0);"
    },
    {
        "line": 54,
        "fullcodeline": "ret = connect (s->fd, rp->ai_addr, rp->ai_addrlen);"
    },
    {
        "line": 75,
        "fullcodeline": "r_socket_close (s);"
    },
    {
        "line": 34,
        "fullcodeline": "gai_strerror (gai), host, port);"
    },
    {
        "line": 41,
        "fullcodeline": "if (s->fd == -1) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (errno == EINPROGRESS) {"
    },
    {
        "line": 61,
        "fullcodeline": "struct timeval tv = {timeout, 0};"
    },
    {
        "line": 63,
        "fullcodeline": "FD_ZERO (&wfds);"
    },
    {
        "line": 64,
        "fullcodeline": "FD_SET (s->fd, &wfds);"
    },
    {
        "line": 49,
        "fullcodeline": "s->fd = -1;"
    },
    {
        "line": 66,
        "fullcodeline": "if ((ret = select (s->fd + 1, NULL, &wfds, NULL, &tv)) != -1) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (r_socket_is_connected (s)) {"
    }
]