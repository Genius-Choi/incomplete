[
    {
        "line": 4,
        "fullcodeline": "int subtype, hexdump = FALSE;"
    },
    {
        "line": 14,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  %s Subtype (%u)\","
    },
    {
        "line": 9,
        "fullcodeline": "if (tlv_len < 4) {"
    },
    {
        "line": 12,
        "fullcodeline": "subtype = *(tptr+3);"
    },
    {
        "line": 23,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    port vlan id (PVID): %u\","
    },
    {
        "line": 30,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    port and protocol vlan id (PPVID): %u, flags [%s] (0x%02x)\","
    },
    {
        "line": 39,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    vlan id (VID): %u\", EXTRACT_16BITS(tptr + 4)));"
    },
    {
        "line": 47,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    vlan name: \"));"
    },
    {
        "line": 48,
        "fullcodeline": "safeputs(ndo, tptr + 7, sublen);"
    },
    {
        "line": 58,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    protocol identity: \"));"
    },
    {
        "line": 59,
        "fullcodeline": "safeputs(ndo, tptr + 5, sublen);"
    },
    {
        "line": 66,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    Pre-Priority CNPV Indicator\"));"
    },
    {
        "line": 67,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t     Priority : 0  1  2  3  4  5  6  7\"));"
    },
    {
        "line": 68,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t     Value    : \"));"
    },
    {
        "line": 72,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    Pre-Priority Ready Indicator\"));"
    },
    {
        "line": 73,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t     Priority : 0  1  2  3  4  5  6  7\"));"
    },
    {
        "line": 74,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t     Value    : \"));"
    },
    {
        "line": 84,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    Willing:%d, CBS:%d, RES:%d, Max TCs:%d\","
    },
    {
        "line": 88,
        "fullcodeline": "print_ets_priority_assignment_table(ndo, tptr + 5);"
    },
    {
        "line": 91,
        "fullcodeline": "print_tc_bandwidth_table(ndo, tptr + 9);"
    },
    {
        "line": 94,
        "fullcodeline": "print_tsa_assignment_table(ndo, tptr + 17);"
    },
    {
        "line": 102,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    RES: %d\", *(tptr + 4)));"
    },
    {
        "line": 104,
        "fullcodeline": "print_ets_priority_assignment_table(ndo, tptr + 5);"
    },
    {
        "line": 106,
        "fullcodeline": "print_tc_bandwidth_table(ndo, tptr + 9);"
    },
    {
        "line": 108,
        "fullcodeline": "print_tsa_assignment_table(ndo, tptr + 17);"
    },
    {
        "line": 116,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    Willing: %d, MBC: %d, RES: %d, PFC cap:%d \","
    },
    {
        "line": 118,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    PFC Enable\"));"
    },
    {
        "line": 120,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t     Priority : 0  1  2  3  4  5  6  7\"));"
    },
    {
        "line": 121,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t     Value    : \"));"
    },
    {
        "line": 130,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    RES: %d\", *(tptr + 4)));"
    },
    {
        "line": 135,
        "fullcodeline": "sublen=tlv_len-5;"
    },
    {
        "line": 139,
        "fullcodeline": "i=0;"
    },
    {
        "line": 140,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    Application Priority Table\"));"
    },
    {
        "line": 153,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    EVB Bridge Status\"));"
    },
    {
        "line": 155,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t      RES: %d, BGID: %d, RRCAP: %d, RRCTR: %d\","
    },
    {
        "line": 157,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    EVB Station Status\"));"
    },
    {
        "line": 159,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t      RES: %d, SGID: %d, RRREQ: %d,RRSTAT: %d\","
    },
    {
        "line": 162,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    R: %d, RTE: %d, \",tval >> 5, tval & 0x1f));"
    },
    {
        "line": 164,
        "fullcodeline": "ND_PRINT((ndo, \"EVB Mode: %s [%d]\","
    },
    {
        "line": 166,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    ROL: %d, RWD: %d, \", (tval >> 5) & 0x01, tval & 0x1f));"
    },
    {
        "line": 168,
        "fullcodeline": "ND_PRINT((ndo, \"RES: %d, ROL: %d, RKA: %d\", tval >> 6, (tval >> 5) & 0x01, tval & 0x1f));"
    },
    {
        "line": 176,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    Role: %d, RES: %d, Scomp: %d \","
    },
    {
        "line": 178,
        "fullcodeline": "ND_PRINT((ndo, \"ChnCap: %d\", EXTRACT_16BITS(tptr + 6) & 0x0fff));"
    },
    {
        "line": 179,
        "fullcodeline": "sublen=tlv_len-8;"
    },
    {
        "line": 183,
        "fullcodeline": "i=0;"
    },
    {
        "line": 193,
        "fullcodeline": "hexdump = TRUE;"
    },
    {
        "line": 15,
        "fullcodeline": "tok2str(lldp_8021_subtype_values, \"unknown\", subtype),"
    },
    {
        "line": 20,
        "fullcodeline": "if (tlv_len < 6) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (tlv_len < 7) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (tlv_len < 6) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (tlv_len < 7) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (tlv_len < 7+sublen) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (tlv_len < 5) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (tlv_len < 5+sublen) {"
    },
    {
        "line": 62,
        "fullcodeline": "if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_CONGESTION_NOTIFICATION_LENGTH){"
    },
    {
        "line": 69,
        "fullcodeline": "for(i=0;i<NO_OF_BITS;i++)"
    },
    {
        "line": 70,
        "fullcodeline": "ND_PRINT((ndo, \"%-2d \", (tval >> i) & 0x01));"
    },
    {
        "line": 75,
        "fullcodeline": "for(i=0;i<NO_OF_BITS;i++)"
    },
    {
        "line": 76,
        "fullcodeline": "ND_PRINT((ndo, \"%-2d \", (tval >> i) & 0x01));"
    },
    {
        "line": 80,
        "fullcodeline": "if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_ETS_CONFIGURATION_LENGTH) {"
    },
    {
        "line": 99,
        "fullcodeline": "if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_ETS_RECOMMENDATION_LENGTH) {"
    },
    {
        "line": 112,
        "fullcodeline": "if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_PFC_CONFIGURATION_LENGTH) {"
    },
    {
        "line": 122,
        "fullcodeline": "for(i=0;i<NO_OF_BITS;i++)"
    },
    {
        "line": 123,
        "fullcodeline": "ND_PRINT((ndo, \"%-2d \", (tval >> i) & 0x01));"
    },
    {
        "line": 127,
        "fullcodeline": "if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_APPLICATION_PRIORITY_MIN_LENGTH) {"
    },
    {
        "line": 131,
        "fullcodeline": "if(tlv_len<=LLDP_PRIVATE_8021_SUBTYPE_APPLICATION_PRIORITY_MIN_LENGTH){"
    },
    {
        "line": 136,
        "fullcodeline": "if(sublen%3!=0){"
    },
    {
        "line": 141,
        "fullcodeline": "while(i<sublen) {"
    },
    {
        "line": 150,
        "fullcodeline": "if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_EVB_LENGTH){"
    },
    {
        "line": 172,
        "fullcodeline": "if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_CDCP_MIN_LENGTH){"
    },
    {
        "line": 180,
        "fullcodeline": "if(sublen%3!=0) {"
    },
    {
        "line": 184,
        "fullcodeline": "while(i<sublen) {"
    },
    {
        "line": 43,
        "fullcodeline": "sublen = *(tptr+6);"
    },
    {
        "line": 54,
        "fullcodeline": "sublen = *(tptr+4);"
    },
    {
        "line": 65,
        "fullcodeline": "tval=*(tptr+4);"
    },
    {
        "line": 71,
        "fullcodeline": "tval=*(tptr+5);"
    },
    {
        "line": 83,
        "fullcodeline": "tval=*(tptr+4);"
    },
    {
        "line": 115,
        "fullcodeline": "tval=*(tptr+4);"
    },
    {
        "line": 119,
        "fullcodeline": "tval=*(tptr+5);"
    },
    {
        "line": 143,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t      Priority: %d, RES: %d, Sel: %d\","
    },
    {
        "line": 145,
        "fullcodeline": "ND_PRINT((ndo, \"Protocol ID: %d\", EXTRACT_16BITS(tptr + i + 5)));"
    },
    {
        "line": 146,
        "fullcodeline": "i=i+3;"
    },
    {
        "line": 154,
        "fullcodeline": "tval=*(tptr+4);"
    },
    {
        "line": 158,
        "fullcodeline": "tval=*(tptr+5);"
    },
    {
        "line": 161,
        "fullcodeline": "tval=*(tptr+6);"
    },
    {
        "line": 163,
        "fullcodeline": "tval=*(tptr+7);"
    },
    {
        "line": 167,
        "fullcodeline": "tval=*(tptr+8);"
    },
    {
        "line": 175,
        "fullcodeline": "tval=*(tptr+4);"
    },
    {
        "line": 185,
        "fullcodeline": "tval=EXTRACT_24BITS(tptr+i+8);"
    },
    {
        "line": 186,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    SCID: %d, SVID: %d\","
    },
    {
        "line": 188,
        "fullcodeline": "i=i+3;"
    },
    {
        "line": 24,
        "fullcodeline": "EXTRACT_16BITS(tptr + 4)));"
    },
    {
        "line": 31,
        "fullcodeline": "EXTRACT_16BITS(tptr+5),"
    },
    {
        "line": 32,
        "fullcodeline": "bittok2str(lldp_8021_port_protocol_id_values, \"none\", *(tptr+4)),"
    },
    {
        "line": 85,
        "fullcodeline": "tval >> 7, (tval >> 6) & 0x02, (tval >> 3) & 0x07, tval & 0x07));"
    },
    {
        "line": 117,
        "fullcodeline": "tval >> 7, (tval >> 6) & 0x01, (tval >> 4) & 0x03, (tval & 0x0f)));"
    },
    {
        "line": 156,
        "fullcodeline": "tval >> 3, (tval >> 2) & 0x01, (tval >> 1) & 0x01, tval & 0x01));"
    },
    {
        "line": 160,
        "fullcodeline": "tval >> 4, (tval >> 3) & 0x01, (tval >> 2) & 0x01, tval & 0x03));"
    },
    {
        "line": 165,
        "fullcodeline": "tok2str(lldp_evb_mode_values, \"unknown\", tval >> 6), tval >> 6));"
    },
    {
        "line": 177,
        "fullcodeline": "tval >> 7, (tval >> 4) & 0x07, (tval >> 3) & 0x01));"
    },
    {
        "line": 33,
        "fullcodeline": "*(tptr + 4)));"
    },
    {
        "line": 142,
        "fullcodeline": "tval=*(tptr+i+5);"
    },
    {
        "line": 144,
        "fullcodeline": "tval >> 5, (tval >> 3) & 0x03, (tval & 0x07)));"
    },
    {
        "line": 187,
        "fullcodeline": "tval >> 12, tval & 0x000fff));"
    }
]