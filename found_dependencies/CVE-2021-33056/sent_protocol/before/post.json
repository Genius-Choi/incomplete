[
    {
        "line": 13,
        "fullcodeline": "retval.start = LT(1); retval.stop = retval.start;"
    },
    {
        "line": 120,
        "fullcodeline": "retval.stop = LT(-1);"
    },
    {
        "line": 124,
        "fullcodeline": "if (HASEXCEPTION())"
    },
    {
        "line": 76,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_slash_in_sent_protocol5437);"
    },
    {
        "line": 77,
        "fullcodeline": "slash(ctx);"
    },
    {
        "line": 79,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 90,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_transport_in_sent_protocol5439);"
    },
    {
        "line": 91,
        "fullcodeline": "transport92=transport(ctx);"
    },
    {
        "line": 93,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 130,
        "fullcodeline": "EXCEPTION->type = ANTLR3_RECOGNITION_EXCEPTION;"
    },
    {
        "line": 23,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_protocol_name_in_sent_protocol5407);"
    },
    {
        "line": 24,
        "fullcodeline": "protocol_name(ctx);"
    },
    {
        "line": 26,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 37,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_slash_in_sent_protocol5409);"
    },
    {
        "line": 38,
        "fullcodeline": "slash(ctx);"
    },
    {
        "line": 40,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 51,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_protocol_version_in_sent_protocol5411);"
    },
    {
        "line": 52,
        "fullcodeline": "protocol_version(ctx);"
    },
    {
        "line": 54,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 68,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 80,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 84,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 94,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 98,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 104,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 27,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 31,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 41,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 45,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 55,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 59,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 106,
        "fullcodeline": "belle_sip_header_via_set_transport((SCOPE_TOP(header_via))->current,(const char*)"
    },
    {
        "line": 70,
        "fullcodeline": "belle_sip_header_via_set_protocol((SCOPE_TOP(header_via))->current,(const char*)"
    },
    {
        "line": 71,
        "fullcodeline": "STRSTREAM->toStringTT(STRSTREAM, retval.start, LT(-1))"
    },
    {
        "line": 107,
        "fullcodeline": "(STRSTREAM->toStringTT(STRSTREAM, transport92.start, transport92.stop))"
    }
]