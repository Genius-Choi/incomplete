[
    {
        "line": 3,
        "fullcodeline": "const char* raw_message_base = \t\"INVITE sip:me@127.0.0.1 SIP/2.0\\r\\n\""
    },
    {
        "line": 20,
        "fullcodeline": "char raw_message[2048];"
    },
    {
        "line": 22,
        "fullcodeline": "belle_sip_stack_t *stack=belle_sip_stack_new(NULL);"
    },
    {
        "line": 23,
        "fullcodeline": "belle_sip_provider_t *prov=belle_sip_provider_new(stack,NULL);"
    },
    {
        "line": 26,
        "fullcodeline": "snprintf(raw_message,sizeof(raw_message),raw_message_base,branch);"
    },
    {
        "line": 28,
        "fullcodeline": "message = belle_sip_message_parse(raw_message);"
    },
    {
        "line": 29,
        "fullcodeline": "belle_sip_object_ref(message);"
    },
    {
        "line": 30,
        "fullcodeline": "belle_sip_object_ref(message); /*yes double ref: originally the message is created with 0 refcount, and dispatch_message will unref() it.*/"
    },
    {
        "line": 31,
        "fullcodeline": "belle_sip_provider_dispatch_message(prov,message);"
    },
    {
        "line": 32,
        "fullcodeline": "request = BELLE_SIP_REQUEST(message);"
    },
    {
        "line": 34,
        "fullcodeline": "BC_ASSERT_PTR_NOT_NULL(request);"
    },
    {
        "line": 35,
        "fullcodeline": "tr=belle_sip_provider_create_server_transaction(prov,request);"
    },
    {
        "line": 36,
        "fullcodeline": "BC_ASSERT_PTR_NOT_NULL(belle_sip_provider_find_matching_server_transaction(prov,request)); /*make sure branch id is properly set*/"
    },
    {
        "line": 37,
        "fullcodeline": "BC_ASSERT_PTR_NOT_NULL(tr);"
    },
    {
        "line": 38,
        "fullcodeline": "belle_sip_object_unref(prov);"
    },
    {
        "line": 39,
        "fullcodeline": "belle_sip_object_unref(stack);"
    },
    {
        "line": 40,
        "fullcodeline": "belle_sip_object_unref(message);"
    }
]