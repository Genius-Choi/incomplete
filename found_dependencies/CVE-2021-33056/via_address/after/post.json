[
    {
        "line": 20,
        "fullcodeline": "ret = NULL;"
    },
    {
        "line": 284,
        "fullcodeline": "if (HASEXCEPTION())"
    },
    {
        "line": 29,
        "fullcodeline": "alt129=3;"
    },
    {
        "line": 290,
        "fullcodeline": "EXCEPTION->type = ANTLR3_RECOGNITION_EXCEPTION;"
    },
    {
        "line": 31,
        "fullcodeline": "switch ( LA(1) )"
    },
    {
        "line": 176,
        "fullcodeline": "CONSTRUCTEX();"
    },
    {
        "line": 177,
        "fullcodeline": "EXCEPTION->type         = ANTLR3_NO_VIABLE_ALT_EXCEPTION;"
    },
    {
        "line": 178,
        "fullcodeline": "EXCEPTION->message      = (void *)\"\";"
    },
    {
        "line": 179,
        "fullcodeline": "EXCEPTION->decisionNum  = 129;"
    },
    {
        "line": 180,
        "fullcodeline": "EXCEPTION->state        = 0;"
    },
    {
        "line": 160,
        "fullcodeline": "alt129=2;"
    },
    {
        "line": 165,
        "fullcodeline": "alt129=3;"
    },
    {
        "line": 170,
        "fullcodeline": "if (BACKTRACKING>0)"
    },
    {
        "line": 192,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_ipv4address_in_via_address5366);"
    },
    {
        "line": 193,
        "fullcodeline": "ipv4address89=ipv4address(ctx);"
    },
    {
        "line": 195,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 220,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_ipv6address_in_via_address5378);"
    },
    {
        "line": 221,
        "fullcodeline": "ipv6address90=ipv6address(ctx);"
    },
    {
        "line": 223,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 248,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_ipv6reference_in_via_address5390);"
    },
    {
        "line": 249,
        "fullcodeline": "ipv6reference91=ipv6reference(ctx);"
    },
    {
        "line": 251,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 35,
        "fullcodeline": "switch ( LA(2) )"
    },
    {
        "line": 172,
        "fullcodeline": "FAILEDFLAG = ANTLR3_TRUE;"
    },
    {
        "line": 196,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 200,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 206,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 224,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 228,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 234,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 252,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 256,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 262,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 144,
        "fullcodeline": "CONSTRUCTEX();"
    },
    {
        "line": 145,
        "fullcodeline": "EXCEPTION->type         = ANTLR3_NO_VIABLE_ALT_EXCEPTION;"
    },
    {
        "line": 146,
        "fullcodeline": "EXCEPTION->message      = (void *)\"\";"
    },
    {
        "line": 147,
        "fullcodeline": "EXCEPTION->decisionNum  = 129;"
    },
    {
        "line": 148,
        "fullcodeline": "EXCEPTION->state        = 1;"
    },
    {
        "line": 264,
        "fullcodeline": "ret=(const char*)"
    },
    {
        "line": 122,
        "fullcodeline": "alt129=1;"
    },
    {
        "line": 133,
        "fullcodeline": "alt129=2;"
    },
    {
        "line": 138,
        "fullcodeline": "if (BACKTRACKING>0)"
    },
    {
        "line": 39,
        "fullcodeline": "switch ( LA(3) )"
    },
    {
        "line": 140,
        "fullcodeline": "FAILEDFLAG = ANTLR3_TRUE;"
    },
    {
        "line": 107,
        "fullcodeline": "CONSTRUCTEX();"
    },
    {
        "line": 108,
        "fullcodeline": "EXCEPTION->type         = ANTLR3_NO_VIABLE_ALT_EXCEPTION;"
    },
    {
        "line": 109,
        "fullcodeline": "EXCEPTION->message      = (void *)\"\";"
    },
    {
        "line": 110,
        "fullcodeline": "EXCEPTION->decisionNum  = 129;"
    },
    {
        "line": 111,
        "fullcodeline": "EXCEPTION->state        = 4;"
    },
    {
        "line": 209,
        "fullcodeline": "(STRSTREAM->toStringTT(STRSTREAM, ipv4address89.start, ipv4address89.stop))"
    },
    {
        "line": 237,
        "fullcodeline": "(STRSTREAM->toStringTT(STRSTREAM, ipv6address90.start, ipv6address90.stop))"
    },
    {
        "line": 85,
        "fullcodeline": "alt129=1;"
    },
    {
        "line": 96,
        "fullcodeline": "alt129=2;"
    },
    {
        "line": 101,
        "fullcodeline": "if (BACKTRACKING>0)"
    },
    {
        "line": 43,
        "fullcodeline": "switch ( LA(4) )"
    },
    {
        "line": 103,
        "fullcodeline": "FAILEDFLAG = ANTLR3_TRUE;"
    },
    {
        "line": 70,
        "fullcodeline": "CONSTRUCTEX();"
    },
    {
        "line": 71,
        "fullcodeline": "EXCEPTION->type         = ANTLR3_NO_VIABLE_ALT_EXCEPTION;"
    },
    {
        "line": 72,
        "fullcodeline": "EXCEPTION->message      = (void *)\"\";"
    },
    {
        "line": 73,
        "fullcodeline": "EXCEPTION->decisionNum  = 129;"
    },
    {
        "line": 74,
        "fullcodeline": "EXCEPTION->state        = 6;"
    },
    {
        "line": 47,
        "fullcodeline": "alt129=1;"
    },
    {
        "line": 59,
        "fullcodeline": "alt129=2;"
    },
    {
        "line": 64,
        "fullcodeline": "if (BACKTRACKING>0)"
    },
    {
        "line": 66,
        "fullcodeline": "FAILEDFLAG = ANTLR3_TRUE;"
    }
]