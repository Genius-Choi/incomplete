[
    {
        "line": 12,
        "fullcodeline": "ret = NULL;"
    },
    {
        "line": 98,
        "fullcodeline": "if (HASEXCEPTION())"
    },
    {
        "line": 35,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_token_in_nonce4221);"
    },
    {
        "line": 36,
        "fullcodeline": "token(ctx);"
    },
    {
        "line": 38,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 49,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_equal_in_nonce4225);"
    },
    {
        "line": 50,
        "fullcodeline": "equal(ctx);"
    },
    {
        "line": 52,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 63,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_nonce_value_in_nonce4227);"
    },
    {
        "line": 64,
        "fullcodeline": "nonce_value81=nonce_value(ctx);"
    },
    {
        "line": 66,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 104,
        "fullcodeline": "EXCEPTION->type = ANTLR3_RECOGNITION_EXCEPTION;"
    },
    {
        "line": 19,
        "fullcodeline": "if ( !((IS_TOKEN(nonce))) )"
    },
    {
        "line": 39,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 43,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 53,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 57,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 67,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 71,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 77,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 27,
        "fullcodeline": "CONSTRUCTEX();"
    },
    {
        "line": 28,
        "fullcodeline": "EXCEPTION->type         = ANTLR3_FAILED_PREDICATE_EXCEPTION;"
    },
    {
        "line": 29,
        "fullcodeline": "EXCEPTION->message      = (void *)\"IS_TOKEN(nonce)\";"
    },
    {
        "line": 30,
        "fullcodeline": "EXCEPTION->ruleName\t = (void *)\"nonce\";"
    },
    {
        "line": 80,
        "fullcodeline": "ret= _belle_sip_str_dup_and_unquote_string((char*)"
    },
    {
        "line": 21,
        "fullcodeline": "if (BACKTRACKING>0)"
    },
    {
        "line": 23,
        "fullcodeline": "FAILEDFLAG = ANTLR3_TRUE;"
    },
    {
        "line": 81,
        "fullcodeline": "(STRSTREAM->toStringTT(STRSTREAM, nonce_value81.start, nonce_value81.stop))"
    }
]