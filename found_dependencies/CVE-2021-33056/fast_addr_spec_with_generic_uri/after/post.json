[
    {
        "line": 185,
        "fullcodeline": "if (HASEXCEPTION())"
    },
    {
        "line": 191,
        "fullcodeline": "EXCEPTION->type = ANTLR3_RECOGNITION_EXCEPTION;"
    },
    {
        "line": 20,
        "fullcodeline": "int alt74=2;"
    },
    {
        "line": 58,
        "fullcodeline": "int alt75=2;"
    },
    {
        "line": 59,
        "fullcodeline": "alt75 = cdfa75.predict(ctx, RECOGNIZER, ISTREAM, &cdfa75);"
    },
    {
        "line": 139,
        "fullcodeline": "int alt76=2;"
    },
    {
        "line": 21,
        "fullcodeline": "switch ( LA(1) )"
    },
    {
        "line": 60,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 64,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 140,
        "fullcodeline": "switch ( LA(1) )"
    },
    {
        "line": 26,
        "fullcodeline": "alt74=1;"
    },
    {
        "line": 36,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_lws_in_fast_addr_spec_with_generic_uri3068);"
    },
    {
        "line": 37,
        "fullcodeline": "lws(ctx);"
    },
    {
        "line": 39,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 74,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_fast_uri_in_fast_addr_spec_with_generic_uri3073);"
    },
    {
        "line": 75,
        "fullcodeline": "fast_uri56=fast_uri(ctx);"
    },
    {
        "line": 77,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 100,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_generic_uri_in_fast_addr_spec_with_generic_uri3085);"
    },
    {
        "line": 101,
        "fullcodeline": "generic_uri57=generic_uri(ctx);"
    },
    {
        "line": 103,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 145,
        "fullcodeline": "alt76=1;"
    },
    {
        "line": 155,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_lws_in_fast_addr_spec_with_generic_uri3094);"
    },
    {
        "line": 156,
        "fullcodeline": "lws(ctx);"
    },
    {
        "line": 158,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 40,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 44,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 78,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 82,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 88,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 104,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 108,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 114,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 159,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 163,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 90,
        "fullcodeline": "belle_sip_header_address_set_uri(object,fast_uri56"
    },
    {
        "line": 117,
        "fullcodeline": "const char *scheme = belle_generic_uri_get_scheme(generic_uri57"
    },
    {
        "line": 119,
        "fullcodeline": "if ( scheme && strcasecmp(scheme, \"sip\") != 0"
    },
    {
        "line": 120,
        "fullcodeline": "&&  strcasecmp(scheme, \"sips\") != 0 ) {"
    },
    {
        "line": 121,
        "fullcodeline": "belle_sip_header_address_set_absolute_uri(object, generic_uri57"
    },
    {
        "line": 124,
        "fullcodeline": "belle_sip_message(\"Cannot parse a sip/sips uri as a generic uri\");"
    },
    {
        "line": 125,
        "fullcodeline": "belle_sip_object_unref(generic_uri57"
    }
]