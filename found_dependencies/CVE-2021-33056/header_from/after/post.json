[
    {
        "line": 8,
        "fullcodeline": "ctx->pbelle_sip_messageParser_header_fromTop = pbelle_sip_messageParser_header_fromPush(ctx);"
    },
    {
        "line": 9,
        "fullcodeline": "(SCOPE_TOP(header_from))->current= belle_sip_header_from_new();"
    },
    {
        "line": 10,
        "fullcodeline": "ret= (SCOPE_TOP(header_from))->current;"
    },
    {
        "line": 106,
        "fullcodeline": "pbelle_sip_messageParser_header_fromPop(ctx);"
    },
    {
        "line": 87,
        "fullcodeline": "if\t(HASEXCEPTION())"
    },
    {
        "line": 16,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_from_token_in_header_from3755);"
    },
    {
        "line": 17,
        "fullcodeline": "from_token(ctx);"
    },
    {
        "line": 19,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 32,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_sp_tab_colon_in_header_from3758);"
    },
    {
        "line": 33,
        "fullcodeline": "sp_tab_colon(ctx);"
    },
    {
        "line": 35,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 48,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_from_spec_in_header_from3760);"
    },
    {
        "line": 49,
        "fullcodeline": "from_spec(ctx);"
    },
    {
        "line": 51,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 20,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 24,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 36,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 40,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 52,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 56,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 64,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 93,
        "fullcodeline": "belle_sip_message(\"[%s]  reason [%s]\",(const char*)EXCEPTION->name,(const char*)EXCEPTION->message);"
    },
    {
        "line": 94,
        "fullcodeline": "belle_sip_object_unref((SCOPE_TOP(header_from))->current);"
    },
    {
        "line": 96,
        "fullcodeline": "ret=NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "pbelle_sip_messageParser_header_fromPop(ctx);"
    },
    {
        "line": 42,
        "fullcodeline": "pbelle_sip_messageParser_header_fromPop(ctx);"
    },
    {
        "line": 58,
        "fullcodeline": "pbelle_sip_messageParser_header_fromPop(ctx);"
    },
    {
        "line": 67,
        "fullcodeline": "if (!belle_sip_header_address_get_uri((belle_sip_header_address_t*)((SCOPE_TOP(header_from))->current))"
    },
    {
        "line": 68,
        "fullcodeline": "&& !belle_sip_header_address_get_absolute_uri((belle_sip_header_address_t*)((SCOPE_TOP(header_from))->current))) {"
    },
    {
        "line": 69,
        "fullcodeline": "belle_sip_object_unref((SCOPE_TOP(header_from))->current);"
    },
    {
        "line": 71,
        "fullcodeline": "ret=NULL;"
    }
]