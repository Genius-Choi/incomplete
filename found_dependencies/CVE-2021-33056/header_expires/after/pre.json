[
    {
        "line": 12,
        "fullcodeline": "ctx->pbelle_sip_messageParser_header_expiresTop = pbelle_sip_messageParser_header_expiresPush(ctx);"
    },
    {
        "line": 13,
        "fullcodeline": "(SCOPE_TOP(header_expires))->current= belle_sip_header_expires_new();"
    },
    {
        "line": 14,
        "fullcodeline": "ret= (SCOPE_TOP(header_expires))->current;"
    },
    {
        "line": 38,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_token_in_header_expires3705);"
    },
    {
        "line": 39,
        "fullcodeline": "token(ctx);"
    },
    {
        "line": 54,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_hcolon_in_header_expires3709);"
    },
    {
        "line": 55,
        "fullcodeline": "hcolon(ctx);"
    },
    {
        "line": 70,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_delta_seconds_in_header_expires3711);"
    },
    {
        "line": 71,
        "fullcodeline": "delta_seconds69=delta_seconds(ctx);"
    },
    {
        "line": 20,
        "fullcodeline": "if ( !((IS_TOKEN(Expires))) )"
    },
    {
        "line": 112,
        "fullcodeline": "ret=NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "EXCEPTION->type         = ANTLR3_FAILED_PREDICATE_EXCEPTION;"
    },
    {
        "line": 32,
        "fullcodeline": "EXCEPTION->message      = (void *)\"IS_TOKEN(Expires)\";"
    },
    {
        "line": 88,
        "fullcodeline": "belle_sip_header_expires_set_expires((SCOPE_TOP(header_expires))->current,atoi((const char *)"
    },
    {
        "line": 22,
        "fullcodeline": "if (BACKTRACKING>0)"
    },
    {
        "line": 24,
        "fullcodeline": "FAILEDFLAG = ANTLR3_TRUE;"
    },
    {
        "line": 25,
        "fullcodeline": "pbelle_sip_messageParser_header_expiresPop(ctx);"
    }
]