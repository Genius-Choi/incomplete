[
    {
        "line": 12,
        "fullcodeline": "ctx->pbelle_sip_messageParser_header_max_forwardsTop = pbelle_sip_messageParser_header_max_forwardsPush(ctx);"
    },
    {
        "line": 13,
        "fullcodeline": "(SCOPE_TOP(header_max_forwards))->current= belle_sip_header_max_forwards_new();"
    },
    {
        "line": 14,
        "fullcodeline": "ret= (SCOPE_TOP(header_max_forwards))->current;"
    },
    {
        "line": 38,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_token_in_header_max_forwards3864);"
    },
    {
        "line": 39,
        "fullcodeline": "token(ctx);"
    },
    {
        "line": 54,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_hcolon_in_header_max_forwards3868);"
    },
    {
        "line": 55,
        "fullcodeline": "hcolon(ctx);"
    },
    {
        "line": 70,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_max_forwards_in_header_max_forwards3874);"
    },
    {
        "line": 71,
        "fullcodeline": "max_forwards70=max_forwards(ctx);"
    },
    {
        "line": 20,
        "fullcodeline": "if ( !((IS_TOKEN(Max-Forwards))) )"
    },
    {
        "line": 112,
        "fullcodeline": "ret=NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "EXCEPTION->type         = ANTLR3_FAILED_PREDICATE_EXCEPTION;"
    },
    {
        "line": 32,
        "fullcodeline": "EXCEPTION->message      = (void *)\"IS_TOKEN(Max-Forwards)\";"
    },
    {
        "line": 88,
        "fullcodeline": "belle_sip_header_max_forwards_set_max_forwards((SCOPE_TOP(header_max_forwards))->current,atoi((const char*)"
    },
    {
        "line": 22,
        "fullcodeline": "if (BACKTRACKING>0)"
    },
    {
        "line": 24,
        "fullcodeline": "FAILEDFLAG = ANTLR3_TRUE;"
    },
    {
        "line": 25,
        "fullcodeline": "pbelle_sip_messageParser_header_max_forwardsPop(ctx);"
    }
]