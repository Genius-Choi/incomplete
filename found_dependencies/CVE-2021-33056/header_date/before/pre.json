[
    {
        "line": 12,
        "fullcodeline": "ctx->pbelle_sip_messageParser_header_dateTop = pbelle_sip_messageParser_header_datePush(ctx);"
    },
    {
        "line": 13,
        "fullcodeline": "(SCOPE_TOP(header_date))->current= belle_sip_header_date_new();"
    },
    {
        "line": 14,
        "fullcodeline": "ret=(SCOPE_TOP(header_date))->current;"
    },
    {
        "line": 20,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_date_token_in_header_date3577);"
    },
    {
        "line": 21,
        "fullcodeline": "date_token(ctx);"
    },
    {
        "line": 23,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 36,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_hcolon_in_header_date3581);"
    },
    {
        "line": 37,
        "fullcodeline": "hcolon(ctx);"
    },
    {
        "line": 52,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_sip_date_in_header_date3583);"
    },
    {
        "line": 53,
        "fullcodeline": "sip_date68=sip_date(ctx);"
    },
    {
        "line": 24,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 28,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 68,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 94,
        "fullcodeline": "ret=NULL;"
    },
    {
        "line": 30,
        "fullcodeline": "pbelle_sip_messageParser_header_datePop(ctx);"
    },
    {
        "line": 70,
        "fullcodeline": "belle_sip_header_date_set_date((SCOPE_TOP(header_date))->current,(const char*)"
    }
]