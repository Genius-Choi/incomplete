[
    {
        "line": 9,
        "fullcodeline": "retval.start = LT(1); retval.stop = retval.start;"
    },
    {
        "line": 76,
        "fullcodeline": "retval.stop = LT(-1);"
    },
    {
        "line": 80,
        "fullcodeline": "if (HASEXCEPTION())"
    },
    {
        "line": 16,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_m_type_in_type_param_value3441);"
    },
    {
        "line": 17,
        "fullcodeline": "m_type(ctx);"
    },
    {
        "line": 19,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 30,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_slash_in_type_param_value3443);"
    },
    {
        "line": 31,
        "fullcodeline": "slash(ctx);"
    },
    {
        "line": 33,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 44,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_m_subtype_in_type_param_value3445);"
    },
    {
        "line": 45,
        "fullcodeline": "m_subtype(ctx);"
    },
    {
        "line": 47,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 86,
        "fullcodeline": "EXCEPTION->type = ANTLR3_RECOGNITION_EXCEPTION;"
    },
    {
        "line": 20,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 24,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 34,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 38,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 48,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 52,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 58,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 60,
        "fullcodeline": "belle_sip_parameters_set_parameter(BELLE_SIP_PARAMETERS((SCOPE_TOP(header_content_type))->current)"
    },
    {
        "line": 63,
        "fullcodeline": "STRSTREAM->toStringTT(STRSTREAM, retval.start, LT(-1))"
    }
]