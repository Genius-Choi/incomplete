[
    {
        "line": 8,
        "fullcodeline": "ret = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "ctx->pbelle_sip_messageParser_header_record_routeTop = pbelle_sip_messageParser_header_record_routePush(ctx);"
    },
    {
        "line": 11,
        "fullcodeline": "(SCOPE_TOP(header_record_route))->current= NULL;(SCOPE_TOP(header_record_route))->first=NULL;"
    },
    {
        "line": 162,
        "fullcodeline": "pbelle_sip_messageParser_header_record_routePop(ctx);"
    },
    {
        "line": 140,
        "fullcodeline": "if\t(HASEXCEPTION())"
    },
    {
        "line": 16,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_record_route_token_in_header_record_route4579);"
    },
    {
        "line": 17,
        "fullcodeline": "record_route_token(ctx);"
    },
    {
        "line": 19,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 32,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_sp_tab_colon_in_header_record_route4583);"
    },
    {
        "line": 33,
        "fullcodeline": "sp_tab_colon(ctx);"
    },
    {
        "line": 35,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 48,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_rec_route_in_header_record_route4585);"
    },
    {
        "line": 49,
        "fullcodeline": "rec_route(ctx);"
    },
    {
        "line": 51,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 20,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 24,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 36,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 40,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 52,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 56,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 124,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 146,
        "fullcodeline": "belle_sip_message(\"[%s]  reason [%s]\",(const char*)EXCEPTION->name,(const char*)EXCEPTION->message);"
    },
    {
        "line": 147,
        "fullcodeline": "ret= (SCOPE_TOP(header_record_route))->first;"
    },
    {
        "line": 152,
        "fullcodeline": "ret=NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "pbelle_sip_messageParser_header_record_routePop(ctx);"
    },
    {
        "line": 42,
        "fullcodeline": "pbelle_sip_messageParser_header_record_routePop(ctx);"
    },
    {
        "line": 58,
        "fullcodeline": "pbelle_sip_messageParser_header_record_routePop(ctx);"
    },
    {
        "line": 68,
        "fullcodeline": "int alt105=2;"
    },
    {
        "line": 126,
        "fullcodeline": "ret= (SCOPE_TOP(header_record_route))->first;"
    },
    {
        "line": 69,
        "fullcodeline": "switch ( LA(1) )"
    },
    {
        "line": 150,
        "fullcodeline": ") belle_sip_object_unref(ret"
    },
    {
        "line": 73,
        "fullcodeline": "alt105=1;"
    },
    {
        "line": 84,
        "fullcodeline": "MATCHT(COMMA, &FOLLOW_COMMA_in_header_record_route4589);"
    },
    {
        "line": 97,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_rec_route_in_header_record_route4591);"
    },
    {
        "line": 98,
        "fullcodeline": "rec_route(ctx);"
    },
    {
        "line": 100,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 85,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 89,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 101,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 105,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 91,
        "fullcodeline": "pbelle_sip_messageParser_header_record_routePop(ctx);"
    },
    {
        "line": 107,
        "fullcodeline": "pbelle_sip_messageParser_header_record_routePop(ctx);"
    }
]