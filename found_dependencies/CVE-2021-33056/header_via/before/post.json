[
    {
        "line": 8,
        "fullcodeline": "ctx->pbelle_sip_messageParser_header_viaTop = pbelle_sip_messageParser_header_viaPush(ctx);"
    },
    {
        "line": 9,
        "fullcodeline": "(SCOPE_TOP(header_via))->current= NULL;(SCOPE_TOP(header_via))->first=NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "ret= NULL;"
    },
    {
        "line": 167,
        "fullcodeline": "pbelle_sip_messageParser_header_viaPop(ctx);"
    },
    {
        "line": 145,
        "fullcodeline": "if\t(HASEXCEPTION())"
    },
    {
        "line": 16,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_via_token_in_header_via5253);"
    },
    {
        "line": 17,
        "fullcodeline": "via_token(ctx);"
    },
    {
        "line": 19,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 32,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_hcolon_in_header_via5256);"
    },
    {
        "line": 33,
        "fullcodeline": "hcolon(ctx);"
    },
    {
        "line": 35,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 48,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_via_parm_in_header_via5258);"
    },
    {
        "line": 49,
        "fullcodeline": "via_parm(ctx);"
    },
    {
        "line": 51,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 20,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 24,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 36,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 40,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 52,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 56,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 129,
        "fullcodeline": "if ( BACKTRACKING==0 )"
    },
    {
        "line": 151,
        "fullcodeline": "belle_sip_message(\"[%s]  reason [%s]\",(const char*)EXCEPTION->name,(const char*)EXCEPTION->message);"
    },
    {
        "line": 152,
        "fullcodeline": "ret= (SCOPE_TOP(header_via))->first;"
    },
    {
        "line": 157,
        "fullcodeline": "ret=NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "pbelle_sip_messageParser_header_viaPop(ctx);"
    },
    {
        "line": 42,
        "fullcodeline": "pbelle_sip_messageParser_header_viaPop(ctx);"
    },
    {
        "line": 58,
        "fullcodeline": "pbelle_sip_messageParser_header_viaPop(ctx);"
    },
    {
        "line": 68,
        "fullcodeline": "int alt126=2;"
    },
    {
        "line": 131,
        "fullcodeline": "ret= (SCOPE_TOP(header_via))->first;"
    },
    {
        "line": 69,
        "fullcodeline": "switch ( LA(1) )"
    },
    {
        "line": 155,
        "fullcodeline": ") belle_sip_object_unref(ret"
    },
    {
        "line": 75,
        "fullcodeline": "alt126=1;"
    },
    {
        "line": 86,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_comma_in_header_via5261);"
    },
    {
        "line": 87,
        "fullcodeline": "comma(ctx);"
    },
    {
        "line": 89,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 102,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_via_parm_in_header_via5263);"
    },
    {
        "line": 103,
        "fullcodeline": "via_parm(ctx);"
    },
    {
        "line": 105,
        "fullcodeline": "FOLLOWPOP();"
    },
    {
        "line": 90,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 94,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 106,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 110,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 96,
        "fullcodeline": "pbelle_sip_messageParser_header_viaPop(ctx);"
    },
    {
        "line": 112,
        "fullcodeline": "pbelle_sip_messageParser_header_viaPop(ctx);"
    }
]