[
    {
        "line": 24,
        "fullcodeline": "alt164=2;"
    },
    {
        "line": 26,
        "fullcodeline": "alt164 = cdfa164.predict(ctx, RECOGNIZER, ISTREAM, &cdfa164);"
    },
    {
        "line": 153,
        "fullcodeline": "EXCEPTION->type = ANTLR3_RECOGNITION_EXCEPTION;"
    },
    {
        "line": 27,
        "fullcodeline": "if  (HASEXCEPTION())"
    },
    {
        "line": 31,
        "fullcodeline": "if (HASFAILED())"
    },
    {
        "line": 41,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_pname_in_other_param7156);"
    },
    {
        "line": 42,
        "fullcodeline": "pname123=pname(ctx);"
    },
    {
        "line": 76,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_pname_in_other_param7168);"
    },
    {
        "line": 77,
        "fullcodeline": "pname124=pname(ctx);"
    },
    {
        "line": 90,
        "fullcodeline": "MATCHT(EQUAL, &FOLLOW_EQUAL_in_other_param7170);"
    },
    {
        "line": 101,
        "fullcodeline": "FOLLOWPUSH(FOLLOW_pvalue_in_other_param7172);"
    },
    {
        "line": 102,
        "fullcodeline": "pvalue125=pvalue(ctx);"
    },
    {
        "line": 58,
        "fullcodeline": "char* unescaped_parameters = belle_sip_to_unescaped_string((const char *) (STRSTREAM->toStringTT(STRSTREAM, pname123.start, pname123.stop))"
    },
    {
        "line": 60,
        "fullcodeline": "belle_sip_parameters_set_parameter(BELLE_SIP_PARAMETERS((SCOPE_TOP(uri_parameters))->current)"
    },
    {
        "line": 121,
        "fullcodeline": "char* unescaped_pname = belle_sip_to_unescaped_string((const char *) (STRSTREAM->toStringTT(STRSTREAM, pname124.start, pname124.stop))"
    },
    {
        "line": 123,
        "fullcodeline": "char* unescaped_pvalue = belle_sip_to_unescaped_string((const char *) (STRSTREAM->toStringTT(STRSTREAM, pvalue125.start, pvalue125.stop))"
    },
    {
        "line": 125,
        "fullcodeline": "belle_sip_parameters_set_parameter(BELLE_SIP_PARAMETERS((SCOPE_TOP(uri_parameters))->current)"
    }
]