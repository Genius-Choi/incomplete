[
    {
        "line": 14,
        "fullcodeline": "pr_devel(\"-->%s()\\n\", __func__);"
    },
    {
        "line": 19,
        "fullcodeline": "edit = kzalloc(sizeof(struct assoc_array_edit), GFP_KERNEL);"
    },
    {
        "line": 22,
        "fullcodeline": "edit->array = array;"
    },
    {
        "line": 23,
        "fullcodeline": "edit->ops = ops;"
    },
    {
        "line": 24,
        "fullcodeline": "edit->ops_for_excised_subtree = ops;"
    },
    {
        "line": 26,
        "fullcodeline": "edit->excised_subtree = array->root;"
    },
    {
        "line": 28,
        "fullcodeline": "new_root = new_parent = NULL;"
    },
    {
        "line": 30,
        "fullcodeline": "cursor = array->root;"
    },
    {
        "line": 55,
        "fullcodeline": "node = assoc_array_ptr_to_node(cursor);"
    },
    {
        "line": 56,
        "fullcodeline": "new_n = kzalloc(sizeof(struct assoc_array_node), GFP_KERNEL);"
    },
    {
        "line": 59,
        "fullcodeline": "pr_devel(\"dup node %p -> %p\\n\", node, new_n);"
    },
    {
        "line": 60,
        "fullcodeline": "new_n->back_pointer = new_parent;"
    },
    {
        "line": 61,
        "fullcodeline": "new_n->parent_slot = node->parent_slot;"
    },
    {
        "line": 64,
        "fullcodeline": "slot = 0;"
    },
    {
        "line": 88,
        "fullcodeline": "pr_devel(\"-- compress node %p --\\n\", new_n);"
    },
    {
        "line": 93,
        "fullcodeline": "new_n->nr_leaves_on_branch = 0;"
    },
    {
        "line": 94,
        "fullcodeline": "nr_free = 0;"
    },
    {
        "line": 102,
        "fullcodeline": "pr_devel(\"free=%d, leaves=%lu\\n\", nr_free, new_n->nr_leaves_on_branch);"
    },
    {
        "line": 105,
        "fullcodeline": "next_slot = 0;"
    },
    {
        "line": 157,
        "fullcodeline": "pr_devel(\"after: %lu\\n\", new_n->nr_leaves_on_branch);"
    },
    {
        "line": 159,
        "fullcodeline": "nr_leaves_on_tree = new_n->nr_leaves_on_branch;"
    },
    {
        "line": 210,
        "fullcodeline": "ptr = new_n->back_pointer;"
    },
    {
        "line": 237,
        "fullcodeline": "new_n = assoc_array_ptr_to_node(new_parent);"
    },
    {
        "line": 240,
        "fullcodeline": "ptr = node->back_pointer;"
    },
    {
        "line": 250,
        "fullcodeline": "node = assoc_array_ptr_to_node(cursor);"
    },
    {
        "line": 251,
        "fullcodeline": "slot++;"
    },
    {
        "line": 262,
        "fullcodeline": "assoc_array_destroy_subtree(new_root, edit->ops);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!array->root)"
    },
    {
        "line": 20,
        "fullcodeline": "if (!edit)"
    },
    {
        "line": 36,
        "fullcodeline": "if (assoc_array_ptr_is_shortcut(cursor)) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (!new_n)"
    },
    {
        "line": 62,
        "fullcodeline": "*new_ptr_pp = new_parent = assoc_array_node_to_ptr(new_n);"
    },
    {
        "line": 68,
        "fullcodeline": "for (; slot < ASSOC_ARRAY_FAN_OUT; slot++) {"
    },
    {
        "line": 95,
        "fullcodeline": "for (slot = 0; slot < ASSOC_ARRAY_FAN_OUT; slot++) {"
    },
    {
        "line": 106,
        "fullcodeline": "for (slot = 0; slot < ASSOC_ARRAY_FAN_OUT; slot++) {"
    },
    {
        "line": 211,
        "fullcodeline": "if (!ptr)"
    },
    {
        "line": 214,
        "fullcodeline": "if (assoc_array_ptr_is_shortcut(ptr)) {"
    },
    {
        "line": 241,
        "fullcodeline": "if (assoc_array_ptr_is_shortcut(ptr)) {"
    },
    {
        "line": 249,
        "fullcodeline": "BUG_ON(!ptr);"
    },
    {
        "line": 264,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 37,
        "fullcodeline": "shortcut = assoc_array_ptr_to_shortcut(cursor);"
    },
    {
        "line": 38,
        "fullcodeline": "keylen = round_up(shortcut->skip_to_level, ASSOC_ARRAY_KEY_CHUNK_SIZE);"
    },
    {
        "line": 39,
        "fullcodeline": "keylen >>= ASSOC_ARRAY_KEY_CHUNK_SHIFT;"
    },
    {
        "line": 40,
        "fullcodeline": "new_s = kmalloc(sizeof(struct assoc_array_shortcut) +"
    },
    {
        "line": 44,
        "fullcodeline": "pr_devel(\"dup shortcut %p -> %p\\n\", shortcut, new_s);"
    },
    {
        "line": 45,
        "fullcodeline": "memcpy(new_s, shortcut, (sizeof(struct assoc_array_shortcut) +"
    },
    {
        "line": 47,
        "fullcodeline": "new_s->back_pointer = new_parent;"
    },
    {
        "line": 48,
        "fullcodeline": "new_s->parent_slot = shortcut->parent_slot;"
    },
    {
        "line": 51,
        "fullcodeline": "cursor = shortcut->next_node;"
    },
    {
        "line": 69,
        "fullcodeline": "ptr = node->slots[slot];"
    },
    {
        "line": 84,
        "fullcodeline": "cursor = ptr;"
    },
    {
        "line": 96,
        "fullcodeline": "ptr = new_n->slots[slot];"
    },
    {
        "line": 110,
        "fullcodeline": "ptr = new_n->slots[slot];"
    },
    {
        "line": 114,
        "fullcodeline": "s = NULL;"
    },
    {
        "line": 120,
        "fullcodeline": "child = assoc_array_ptr_to_node(ptr);"
    },
    {
        "line": 121,
        "fullcodeline": "new_n->nr_leaves_on_branch += child->nr_leaves_on_branch;"
    },
    {
        "line": 162,
        "fullcodeline": "if (nr_free == ASSOC_ARRAY_FAN_OUT - 1) {"
    },
    {
        "line": 215,
        "fullcodeline": "new_s = assoc_array_ptr_to_shortcut(ptr);"
    },
    {
        "line": 216,
        "fullcodeline": "new_parent = new_s->back_pointer;"
    },
    {
        "line": 217,
        "fullcodeline": "slot = new_s->parent_slot;"
    },
    {
        "line": 242,
        "fullcodeline": "shortcut = assoc_array_ptr_to_shortcut(ptr);"
    },
    {
        "line": 243,
        "fullcodeline": "slot = shortcut->parent_slot;"
    },
    {
        "line": 244,
        "fullcodeline": "cursor = shortcut->back_pointer;"
    },
    {
        "line": 21,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 42,
        "fullcodeline": "if (!new_s)"
    },
    {
        "line": 49,
        "fullcodeline": "*new_ptr_pp = new_parent = assoc_array_shortcut_to_ptr(new_s);"
    },
    {
        "line": 70,
        "fullcodeline": "if (!ptr)"
    },
    {
        "line": 73,
        "fullcodeline": "if (assoc_array_ptr_is_leaf(ptr)) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (!ptr)"
    },
    {
        "line": 115,
        "fullcodeline": "if (assoc_array_ptr_is_shortcut(ptr)) {"
    },
    {
        "line": 123,
        "fullcodeline": "if (child->nr_leaves_on_branch <= nr_free + 1) {"
    },
    {
        "line": 163,
        "fullcodeline": "for (slot = 0; slot < ASSOC_ARRAY_FAN_OUT; slot++)"
    },
    {
        "line": 219,
        "fullcodeline": "if (new_n->nr_leaves_on_branch <= ASSOC_ARRAY_FAN_OUT) {"
    },
    {
        "line": 235,
        "fullcodeline": "new_parent = ptr;"
    },
    {
        "line": 246,
        "fullcodeline": "slot = node->parent_slot;"
    },
    {
        "line": 247,
        "fullcodeline": "cursor = ptr;"
    },
    {
        "line": 46,
        "fullcodeline": "keylen * sizeof(unsigned long)));"
    },
    {
        "line": 98,
        "fullcodeline": "nr_free++;"
    },
    {
        "line": 111,
        "fullcodeline": "if (!ptr || assoc_array_ptr_is_leaf(ptr))"
    },
    {
        "line": 116,
        "fullcodeline": "s = assoc_array_ptr_to_shortcut(ptr);"
    },
    {
        "line": 117,
        "fullcodeline": "ptr = s->next_node;"
    },
    {
        "line": 125,
        "fullcodeline": "pr_devel(\"[%d] fold node %lu/%d [nx %d]\\n\","
    },
    {
        "line": 134,
        "fullcodeline": "new_n->slots[slot] = NULL;"
    },
    {
        "line": 135,
        "fullcodeline": "nr_free++;"
    },
    {
        "line": 164,
        "fullcodeline": "if ((ptr = new_n->slots[slot]))"
    },
    {
        "line": 167,
        "fullcodeline": "if (assoc_array_ptr_is_meta(ptr) &&"
    },
    {
        "line": 168,
        "fullcodeline": "assoc_array_ptr_is_shortcut(ptr)) {"
    },
    {
        "line": 169,
        "fullcodeline": "pr_devel(\"excise node %p with 1 shortcut\\n\", new_n);"
    },
    {
        "line": 171,
        "fullcodeline": "new_parent = new_n->back_pointer;"
    },
    {
        "line": 172,
        "fullcodeline": "slot = new_n->parent_slot;"
    },
    {
        "line": 199,
        "fullcodeline": "new_s->back_pointer = new_parent;"
    },
    {
        "line": 200,
        "fullcodeline": "new_s->parent_slot = slot;"
    },
    {
        "line": 201,
        "fullcodeline": "new_n = assoc_array_ptr_to_node(new_parent);"
    },
    {
        "line": 202,
        "fullcodeline": "new_n->slots[slot] = ptr;"
    },
    {
        "line": 223,
        "fullcodeline": "new_n->back_pointer = new_parent;"
    },
    {
        "line": 224,
        "fullcodeline": "new_n->parent_slot = slot;"
    },
    {
        "line": 41,
        "fullcodeline": "keylen * sizeof(unsigned long), GFP_KERNEL);"
    },
    {
        "line": 136,
        "fullcodeline": "if (slot < next_slot)"
    },
    {
        "line": 138,
        "fullcodeline": "for (i = 0; i < ASSOC_ARRAY_FAN_OUT; i++) {"
    },
    {
        "line": 151,
        "fullcodeline": "pr_devel(\"[%d] retain node %lu/%d [nx %d]\\n\","
    },
    {
        "line": 170,
        "fullcodeline": "new_s = assoc_array_ptr_to_shortcut(ptr);"
    },
    {
        "line": 174,
        "fullcodeline": "if (!new_parent) {"
    },
    {
        "line": 181,
        "fullcodeline": "if (assoc_array_ptr_is_shortcut(new_parent)) {"
    },
    {
        "line": 226,
        "fullcodeline": "if (!new_parent) {"
    },
    {
        "line": 231,
        "fullcodeline": "n = assoc_array_ptr_to_node(new_parent);"
    },
    {
        "line": 232,
        "fullcodeline": "n->slots[slot] = assoc_array_node_to_ptr(new_n);"
    },
    {
        "line": 74,
        "fullcodeline": "if (iterator(assoc_array_ptr_to_leaf(ptr),"
    },
    {
        "line": 79,
        "fullcodeline": "new_n->slots[slot] = ptr;"
    },
    {
        "line": 99,
        "fullcodeline": "else if (assoc_array_ptr_is_leaf(ptr))"
    },
    {
        "line": 137,
        "fullcodeline": "next_slot = slot;"
    },
    {
        "line": 139,
        "fullcodeline": "struct assoc_array_ptr *p = child->slots[i];"
    },
    {
        "line": 147,
        "fullcodeline": "nr_free--;"
    },
    {
        "line": 177,
        "fullcodeline": "new_root = ptr;"
    },
    {
        "line": 183,
        "fullcodeline": "struct assoc_array_shortcut *s ="
    },
    {
        "line": 188,
        "fullcodeline": "new_parent = new_s->back_pointer = s->back_pointer;"
    },
    {
        "line": 189,
        "fullcodeline": "slot = new_s->parent_slot = s->parent_slot;"
    },
    {
        "line": 227,
        "fullcodeline": "new_root = assoc_array_node_to_ptr(new_n);"
    },
    {
        "line": 100,
        "fullcodeline": "new_n->nr_leaves_on_branch++;"
    },
    {
        "line": 140,
        "fullcodeline": "if (!p)"
    },
    {
        "line": 142,
        "fullcodeline": "BUG_ON(assoc_array_ptr_is_meta(p));"
    },
    {
        "line": 144,
        "fullcodeline": "next_slot++;"
    },
    {
        "line": 145,
        "fullcodeline": "BUG_ON(next_slot >= ASSOC_ARRAY_FAN_OUT);"
    },
    {
        "line": 184,
        "fullcodeline": "assoc_array_ptr_to_shortcut(new_parent);"
    },
    {
        "line": 191,
        "fullcodeline": "if (!new_parent) {"
    },
    {
        "line": 146,
        "fullcodeline": "new_n->slots[next_slot++] = p;"
    },
    {
        "line": 194,
        "fullcodeline": "new_root = ptr;"
    }
]