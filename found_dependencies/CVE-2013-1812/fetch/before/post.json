[
    {
        "line": 2,
        "fullcodeline": "unparsed_url = url.dup"
    },
    {
        "line": 3,
        "fullcodeline": "url = URI::parse(url)"
    },
    {
        "line": 1,
        "fullcodeline": "def fetch(url, body=nil, headers=nil, redirect_limit=REDIRECT_LIMIT)"
    },
    {
        "line": 41,
        "fullcodeline": "case response"
    },
    {
        "line": 8,
        "fullcodeline": "headers ||= {}"
    },
    {
        "line": 9,
        "fullcodeline": "headers['User-agent'] ||= USER_AGENT"
    },
    {
        "line": 12,
        "fullcodeline": "conn = make_connection(url)"
    },
    {
        "line": 13,
        "fullcodeline": "response = nil"
    },
    {
        "line": 15,
        "fullcodeline": "response = conn.start {"
    },
    {
        "line": 28,
        "fullcodeline": "setup_encoding(response)"
    },
    {
        "line": 42,
        "fullcodeline": "when Net::HTTPRedirection"
    },
    {
        "line": 43,
        "fullcodeline": "if redirect_limit <= 0"
    },
    {
        "line": 55,
        "fullcodeline": "return HTTPResponse._from_net_response(response, unparsed_url)"
    },
    {
        "line": 48,
        "fullcodeline": "return fetch(response['location'], body, headers, redirect_limit - 1)"
    },
    {
        "line": 44,
        "fullcodeline": "raise HTTPRedirectLimitReached.new("
    },
    {
        "line": 45,
        "fullcodeline": "\"Too many redirects, not fetching #{response['location']}\")"
    }
]