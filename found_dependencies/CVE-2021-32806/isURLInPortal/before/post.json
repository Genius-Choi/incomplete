[
    {
        "line": 30,
        "fullcodeline": "url = re.sub(\"^[\\x00-\\x20]+\", \"\", url).strip()"
    },
    {
        "line": 31,
        "fullcodeline": "cmp_url = url.lower()"
    },
    {
        "line": 36,
        "fullcodeline": "p_url = self()"
    },
    {
        "line": 45,
        "fullcodeline": "unescaped_url = unescape(url)"
    },
    {
        "line": 16,
        "fullcodeline": "if len(url.splitlines()) > 1:"
    },
    {
        "line": 19,
        "fullcodeline": "if url != url.strip():"
    },
    {
        "line": 22,
        "fullcodeline": "if url != \" \".join(url.split()):"
    },
    {
        "line": 26,
        "fullcodeline": "if url and not safe_url_first_char(url):"
    },
    {
        "line": 32,
        "fullcodeline": "for bad in BAD_URL_PARTS:"
    },
    {
        "line": 38,
        "fullcodeline": "schema, u_host, u_path, _, _, _ = urlparse(url)"
    },
    {
        "line": 39,
        "fullcodeline": "if schema and schema not in ALLOWED_SCHEMAS:"
    },
    {
        "line": 46,
        "fullcodeline": "if unescaped_url != url:"
    },
    {
        "line": 50,
        "fullcodeline": "if not u_host and not u_path.startswith(\"/\"):"
    },
    {
        "line": 59,
        "fullcodeline": "if not useurl.endswith(\"/\"):"
    },
    {
        "line": 63,
        "fullcodeline": "_, u_host, u_path, _, _, _ = urlparse(urljoin(useurl, url))"
    },
    {
        "line": 66,
        "fullcodeline": "if not u_path:"
    },
    {
        "line": 72,
        "fullcodeline": "_, host, path, _, _, _ = urlparse(p_url)"
    },
    {
        "line": 73,
        "fullcodeline": "if not path.endswith(\"/\"):"
    },
    {
        "line": 75,
        "fullcodeline": "if host == u_host and u_path.startswith(path):"
    },
    {
        "line": 78,
        "fullcodeline": "for external_site in get_external_sites(self):"
    },
    {
        "line": 58,
        "fullcodeline": "useurl = p_url  # when u_path.startswith('/')"
    },
    {
        "line": 60,
        "fullcodeline": "useurl += \"/\""
    },
    {
        "line": 67,
        "fullcodeline": "u_path = \"/\""
    },
    {
        "line": 69,
        "fullcodeline": "u_path = normpath(u_path)"
    },
    {
        "line": 74,
        "fullcodeline": "path += \"/\""
    },
    {
        "line": 47,
        "fullcodeline": "if not self.isURLInPortal(unescaped_url):"
    },
    {
        "line": 51,
        "fullcodeline": "if context is None:"
    },
    {
        "line": 53,
        "fullcodeline": "if not context.isPrincipiaFolderish:"
    },
    {
        "line": 70,
        "fullcodeline": "if not u_path.endswith(\"/\"):"
    },
    {
        "line": 33,
        "fullcodeline": "if bad in cmp_url:"
    },
    {
        "line": 54,
        "fullcodeline": "useurl = context.aq_parent.absolute_url()"
    },
    {
        "line": 56,
        "fullcodeline": "useurl = context.absolute_url()"
    },
    {
        "line": 71,
        "fullcodeline": "u_path += \"/\""
    },
    {
        "line": 79,
        "fullcodeline": "_, host, path, _, _, _ = urlparse(external_site)"
    },
    {
        "line": 80,
        "fullcodeline": "if not path.endswith(\"/\"):"
    },
    {
        "line": 82,
        "fullcodeline": "if host == u_host and u_path.startswith(path):"
    },
    {
        "line": 81,
        "fullcodeline": "path += \"/\""
    }
]