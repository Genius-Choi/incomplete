[
    {
        "line": 2,
        "fullcodeline": "EUID_ASSERT();"
    },
    {
        "line": 6,
        "fullcodeline": "EUID_ROOT();"
    },
    {
        "line": 7,
        "fullcodeline": "char *comm = pid_proc_comm(pid);"
    },
    {
        "line": 8,
        "fullcodeline": "EUID_USER();"
    },
    {
        "line": 19,
        "fullcodeline": "free(comm);"
    },
    {
        "line": 40,
        "fullcodeline": "EUID_ROOT();"
    },
    {
        "line": 55,
        "fullcodeline": "char *devname = NULL;"
    },
    {
        "line": 94,
        "fullcodeline": "char *cmd = NULL;"
    },
    {
        "line": 111,
        "fullcodeline": "assert(cmd);"
    },
    {
        "line": 114,
        "fullcodeline": "environ = NULL;"
    },
    {
        "line": 132,
        "fullcodeline": "char *arg[4];"
    },
    {
        "line": 133,
        "fullcodeline": "arg[0] = cfg.shell;"
    },
    {
        "line": 134,
        "fullcodeline": "arg[1] = \"-c\";"
    },
    {
        "line": 135,
        "fullcodeline": "arg[2] = cmd;"
    },
    {
        "line": 136,
        "fullcodeline": "arg[3] = NULL;"
    },
    {
        "line": 137,
        "fullcodeline": "clearenv();"
    },
    {
        "line": 138,
        "fullcodeline": "execvp(arg[0], arg);"
    },
    {
        "line": 141,
        "fullcodeline": "errExit(\"execvp\");"
    },
    {
        "line": 9,
        "fullcodeline": "if (!comm) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (strcmp(comm, \"firejail\") != 0) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (asprintf(&name, \"/run/firejail/network/%d-netmap\", pid) == -1)"
    },
    {
        "line": 26,
        "fullcodeline": "if (stat(name, &s) == -1) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (find_child(pid, &child) == -1) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (join_namespace(child, \"net\")) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (strcmp(command, \"set\") == 0)"
    },
    {
        "line": 120,
        "fullcodeline": "if (setreuid(0, 0))"
    },
    {
        "line": 122,
        "fullcodeline": "if (setregid(0, 0))"
    },
    {
        "line": 127,
        "fullcodeline": "if (!cfg.shell) {"
    },
    {
        "line": 10,
        "fullcodeline": "fprintf(stderr, \"Error: cannot find sandbox\\n\");"
    },
    {
        "line": 11,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 16,
        "fullcodeline": "fprintf(stderr, \"Error: cannot find sandbox\\n\");"
    },
    {
        "line": 17,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 24,
        "fullcodeline": "errExit(\"asprintf\");"
    },
    {
        "line": 27,
        "fullcodeline": "fprintf(stderr, \"Error: the sandbox doesn't use a new network namespace\\n\");"
    },
    {
        "line": 28,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 36,
        "fullcodeline": "fprintf(stderr, \"Error: cannot join the network namespace\\n\");"
    },
    {
        "line": 37,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 42,
        "fullcodeline": "fprintf(stderr, \"Error: cannot join the network namespace\\n\");"
    },
    {
        "line": 43,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 48,
        "fullcodeline": "bandwidth_set(pid, dev, down, up);"
    },
    {
        "line": 61,
        "fullcodeline": "FILE *fp = fopen(fname, \"r\");"
    },
    {
        "line": 67,
        "fullcodeline": "char buf[1024];"
    },
    {
        "line": 68,
        "fullcodeline": "int len = strlen(dev);"
    },
    {
        "line": 89,
        "fullcodeline": "free(fname);"
    },
    {
        "line": 90,
        "fullcodeline": "fclose(fp);"
    },
    {
        "line": 121,
        "fullcodeline": "errExit(\"setreuid\");"
    },
    {
        "line": 123,
        "fullcodeline": "errExit(\"setregid\");"
    },
    {
        "line": 126,
        "fullcodeline": "cfg.shell = guess_shell();"
    },
    {
        "line": 128,
        "fullcodeline": "fprintf(stderr, \"Error: no POSIX shell found, please use --shell command line option\\n\");"
    },
    {
        "line": 129,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 59,
        "fullcodeline": "if (asprintf(&fname, \"%s/%d-netmap\", RUN_FIREJAIL_NETWORK_DIR, (int) pid) == -1)"
    },
    {
        "line": 62,
        "fullcodeline": "if (!fp) {"
    },
    {
        "line": 69,
        "fullcodeline": "while (fgets(buf, 1024, fp)) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (strcmp(command, \"set\") == 0) {"
    },
    {
        "line": 49,
        "fullcodeline": "else if (strcmp(command, \"clear\") == 0)"
    },
    {
        "line": 60,
        "fullcodeline": "errExit(\"asprintf\");"
    },
    {
        "line": 63,
        "fullcodeline": "fprintf(stderr, \"Error: cannot read network map file %s\\n\", fname);"
    },
    {
        "line": 64,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 71,
        "fullcodeline": "char *ptr = strchr(buf, '\\n');"
    },
    {
        "line": 108,
        "fullcodeline": "if (asprintf(&cmd, \"%s/firejail/fshaper.sh --%s\", LIBDIR, command) == -1)"
    },
    {
        "line": 50,
        "fullcodeline": "bandwidth_remove(pid, dev);"
    },
    {
        "line": 74,
        "fullcodeline": "if (*buf == '\\0')"
    },
    {
        "line": 77,
        "fullcodeline": "if (strncmp(buf, dev, len) == 0  && buf[len] == ':') {"
    },
    {
        "line": 97,
        "fullcodeline": "if (asprintf(&cmd, \"%s/firejail/fshaper.sh --%s %s %d %d\","
    },
    {
        "line": 109,
        "fullcodeline": "errExit(\"asprintf\");"
    },
    {
        "line": 73,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 78,
        "fullcodeline": "devname = strdup(buf + len + 1);"
    },
    {
        "line": 98,
        "fullcodeline": "LIBDIR, command, devname, down, up) == -1)"
    },
    {
        "line": 99,
        "fullcodeline": "errExit(\"asprintf\");"
    },
    {
        "line": 102,
        "fullcodeline": "if (asprintf(&cmd, \"%s/firejail/fshaper.sh --%s %s\","
    },
    {
        "line": 79,
        "fullcodeline": "if (!devname)"
    },
    {
        "line": 82,
        "fullcodeline": "if (if_nametoindex(devname) == 0) {"
    },
    {
        "line": 103,
        "fullcodeline": "LIBDIR, command, devname) == -1)"
    },
    {
        "line": 104,
        "fullcodeline": "errExit(\"asprintf\");"
    },
    {
        "line": 80,
        "fullcodeline": "errExit(\"strdup\");"
    },
    {
        "line": 83,
        "fullcodeline": "fprintf(stderr, \"Error: cannot find network device %s\\n\", devname);"
    },
    {
        "line": 84,
        "fullcodeline": "exit(1);"
    }
]