[
    {
        "line": 3,
        "fullcodeline": "struct cypress_private *priv = usb_get_serial_port_data(port);"
    },
    {
        "line": 4,
        "fullcodeline": "struct usb_serial *serial = port->serial;"
    },
    {
        "line": 6,
        "fullcodeline": "int result = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "usb_clear_halt(serial->dev, 0x81);"
    },
    {
        "line": 13,
        "fullcodeline": "usb_clear_halt(serial->dev, 0x02);"
    },
    {
        "line": 15,
        "fullcodeline": "spin_lock_irqsave(&priv->lock, flags);"
    },
    {
        "line": 24,
        "fullcodeline": "cypress_send(port);"
    },
    {
        "line": 30,
        "fullcodeline": "usb_fill_int_urb(port->interrupt_in_urb, serial->dev,"
    },
    {
        "line": 35,
        "fullcodeline": "result = usb_submit_urb(port->interrupt_in_urb, GFP_KERNEL);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!priv->comm_is_ok)"
    },
    {
        "line": 31,
        "fullcodeline": "usb_rcvintpipe(serial->dev, port->interrupt_in_endpointAddress),"
    },
    {
        "line": 27,
        "fullcodeline": "cypress_set_termios(tty, port, &priv->tmp_termios);"
    },
    {
        "line": 38,
        "fullcodeline": "dev_err(&port->dev,"
    },
    {
        "line": 9,
        "fullcodeline": "return -EIO;"
    }
]