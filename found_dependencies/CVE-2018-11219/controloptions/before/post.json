[
    {
        "line": 5,
        "fullcodeline": "case '>': h->endian = BIG; return;"
    },
    {
        "line": 6,
        "fullcodeline": "case '<': h->endian = LITTLE; return;"
    },
    {
        "line": 8,
        "fullcodeline": "int a = getnum(L, fmt, MAXALIGN);"
    },
    {
        "line": 11,
        "fullcodeline": "h->align = a;"
    },
    {
        "line": 15,
        "fullcodeline": "const char *msg = lua_pushfstring(L, \"invalid format option '%c'\", opt);"
    },
    {
        "line": 16,
        "fullcodeline": "luaL_argerror(L, 1, msg);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!isp2(a))"
    },
    {
        "line": 10,
        "fullcodeline": "luaL_error(L, \"alignment %d is not a power of 2\", a);"
    }
]