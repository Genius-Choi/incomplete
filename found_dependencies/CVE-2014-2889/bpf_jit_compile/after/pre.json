[
    {
        "line": 3,
        "fullcodeline": "u8 temp[64];"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned int proglen, oldproglen = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "u8 t_op, f_op, seen = 0, pass;"
    },
    {
        "line": 9,
        "fullcodeline": "u8 *image = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "int pc_ret0 = -1; /* bpf index of first RET #0 instruction (if any) */"
    },
    {
        "line": 14,
        "fullcodeline": "const struct sock_filter *filter = fp->insns;"
    },
    {
        "line": 15,
        "fullcodeline": "int flen = fp->len;"
    },
    {
        "line": 20,
        "fullcodeline": "addrs = kmalloc(flen * sizeof(*addrs), GFP_KERNEL);"
    },
    {
        "line": 31,
        "fullcodeline": "cleanup_addr = proglen; /* epilogue address */"
    },
    {
        "line": 17,
        "fullcodeline": "if (!bpf_jit_enable)"
    },
    {
        "line": 21,
        "fullcodeline": "if (addrs == NULL)"
    },
    {
        "line": 27,
        "fullcodeline": "for (proglen = 0, i = 0; i < flen; i++) {"
    },
    {
        "line": 33,
        "fullcodeline": "for (pass = 0; pass < 10; pass++) {"
    },
    {
        "line": 500,
        "fullcodeline": "if (bpf_jit_enable > 1)"
    },
    {
        "line": 28,
        "fullcodeline": "proglen += 64;"
    },
    {
        "line": 29,
        "fullcodeline": "addrs[i] = proglen;"
    },
    {
        "line": 35,
        "fullcodeline": "proglen = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "prog = temp;"
    },
    {
        "line": 481,
        "fullcodeline": "cleanup_addr = proglen - 1; /* ret */"
    },
    {
        "line": 498,
        "fullcodeline": "oldproglen = proglen;"
    },
    {
        "line": 501,
        "fullcodeline": "pr_err(\"flen=%d proglen=%u pass=%d image=%p\\n\","
    },
    {
        "line": 509,
        "fullcodeline": "bpf_flush_icache(image, image + proglen);"
    },
    {
        "line": 100,
        "fullcodeline": "for (i = 0; i < flen; i++) {"
    },
    {
        "line": 484,
        "fullcodeline": "if (seen & SEEN_XREG)"
    },
    {
        "line": 491,
        "fullcodeline": "if (proglen == oldproglen) {"
    },
    {
        "line": 101,
        "fullcodeline": "unsigned int K = filter[i].k;"
    },
    {
        "line": 464,
        "fullcodeline": "ilen = prog - temp;"
    },
    {
        "line": 474,
        "fullcodeline": "proglen += ilen;"
    },
    {
        "line": 475,
        "fullcodeline": "addrs[i] = proglen;"
    },
    {
        "line": 476,
        "fullcodeline": "prog = temp;"
    },
    {
        "line": 483,
        "fullcodeline": "cleanup_addr -= 1; /* leaveq */"
    },
    {
        "line": 485,
        "fullcodeline": "cleanup_addr -= 4; /* mov  -8(%rbp),%rbx */"
    },
    {
        "line": 506,
        "fullcodeline": "print_hex_dump(KERN_ERR, \"JIT code: \", DUMP_PREFIX_ADDRESS,"
    },
    {
        "line": 42,
        "fullcodeline": "if (seen & (SEEN_XREG | SEEN_DATAREF))"
    },
    {
        "line": 44,
        "fullcodeline": "if (seen & SEEN_XREG)"
    },
    {
        "line": 53,
        "fullcodeline": "if (seen & SEEN_DATAREF) {"
    },
    {
        "line": 488,
        "fullcodeline": "WARN_ON(proglen != oldproglen);"
    },
    {
        "line": 495,
        "fullcodeline": "if (!image)"
    },
    {
        "line": 105,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 117,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 129,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 141,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 158,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 172,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 182,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 194,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 230,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 234,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 244,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 251,
        "fullcodeline": "seen |= SEEN_MEM;"
    },
    {
        "line": 255,
        "fullcodeline": "seen |= SEEN_XREG | SEEN_MEM;"
    },
    {
        "line": 259,
        "fullcodeline": "seen |= SEEN_MEM;"
    },
    {
        "line": 263,
        "fullcodeline": "seen |= SEEN_XREG | SEEN_MEM;"
    },
    {
        "line": 277,
        "fullcodeline": "seen |= SEEN_XREG;"
    },
    {
        "line": 306,
        "fullcodeline": "EMIT_COND_JMP(X86_JE, cleanup_addr - (addrs[i] - 6));"
    },
    {
        "line": 350,
        "fullcodeline": "func = sk_load_word;"
    },
    {
        "line": 351,
        "fullcodeline": "common_load:\t\t\tseen |= SEEN_DATAREF;"
    },
    {
        "line": 354,
        "fullcodeline": "t_offset = func - (image + addrs[i]);"
    },
    {
        "line": 359,
        "fullcodeline": "func = sk_load_half;"
    },
    {
        "line": 362,
        "fullcodeline": "func = sk_load_byte;"
    },
    {
        "line": 374,
        "fullcodeline": "seen |= SEEN_DATAREF | SEEN_XREG;"
    },
    {
        "line": 375,
        "fullcodeline": "t_offset = sk_load_byte_msh - (image + addrs[i]);"
    },
    {
        "line": 380,
        "fullcodeline": "func = sk_load_word_ind;"
    },
    {
        "line": 381,
        "fullcodeline": "common_load_ind:\t\tseen |= SEEN_DATAREF | SEEN_XREG;"
    },
    {
        "line": 382,
        "fullcodeline": "t_offset = func - (image + addrs[i]);"
    },
    {
        "line": 387,
        "fullcodeline": "func = sk_load_half_ind;"
    },
    {
        "line": 390,
        "fullcodeline": "func = sk_load_byte_ind;"
    },
    {
        "line": 393,
        "fullcodeline": "t_offset = addrs[i + K] - addrs[i];"
    },
    {
        "line": 396,
        "fullcodeline": "COND_SEL(BPF_S_JMP_JGT_K, X86_JA, X86_JBE);"
    },
    {
        "line": 397,
        "fullcodeline": "COND_SEL(BPF_S_JMP_JGE_K, X86_JAE, X86_JB);"
    },
    {
        "line": 398,
        "fullcodeline": "COND_SEL(BPF_S_JMP_JEQ_K, X86_JE, X86_JNE);"
    },
    {
        "line": 399,
        "fullcodeline": "COND_SEL(BPF_S_JMP_JSET_K,X86_JNE, X86_JE);"
    },
    {
        "line": 400,
        "fullcodeline": "COND_SEL(BPF_S_JMP_JGT_X, X86_JA, X86_JBE);"
    },
    {
        "line": 401,
        "fullcodeline": "COND_SEL(BPF_S_JMP_JGE_X, X86_JAE, X86_JB);"
    },
    {
        "line": 402,
        "fullcodeline": "COND_SEL(BPF_S_JMP_JEQ_X, X86_JE, X86_JNE);"
    },
    {
        "line": 403,
        "fullcodeline": "COND_SEL(BPF_S_JMP_JSET_X,X86_JNE, X86_JE);"
    },
    {
        "line": 472,
        "fullcodeline": "memcpy(image + proglen, temp, ilen);"
    },
    {
        "line": 109,
        "fullcodeline": "if (!K)"
    },
    {
        "line": 111,
        "fullcodeline": "if (is_imm8(K))"
    },
    {
        "line": 121,
        "fullcodeline": "if (!K)"
    },
    {
        "line": 123,
        "fullcodeline": "if (is_imm8(K))"
    },
    {
        "line": 133,
        "fullcodeline": "if (is_imm8(K))"
    },
    {
        "line": 143,
        "fullcodeline": "if (pc_ret0 != -1)"
    },
    {
        "line": 162,
        "fullcodeline": "if (K >= 0xFFFFFF00) {"
    },
    {
        "line": 176,
        "fullcodeline": "if (is_imm8(K))"
    },
    {
        "line": 186,
        "fullcodeline": "if (K == 0)"
    },
    {
        "line": 198,
        "fullcodeline": "if (K == 0)"
    },
    {
        "line": 209,
        "fullcodeline": "if (!K) {"
    },
    {
        "line": 238,
        "fullcodeline": "if (!K)"
    },
    {
        "line": 245,
        "fullcodeline": "if (!K)"
    },
    {
        "line": 252,
        "fullcodeline": "EMIT3(0x8b, 0x45, 0xf0 - K*4);"
    },
    {
        "line": 256,
        "fullcodeline": "EMIT3(0x8b, 0x5d, 0xf0 - K*4);"
    },
    {
        "line": 260,
        "fullcodeline": "EMIT3(0x89, 0x45, 0xf0 - K*4);"
    },
    {
        "line": 264,
        "fullcodeline": "EMIT3(0x89, 0x5d, 0xf0 - K*4);"
    },
    {
        "line": 144,
        "fullcodeline": "EMIT_COND_JMP(X86_JE, addrs[pc_ret0] - (addrs[i] - 4));"
    },
    {
        "line": 466,
        "fullcodeline": "if (unlikely(proglen + ilen > oldproglen)) {"
    },
    {
        "line": 163,
        "fullcodeline": "EMIT2(0x24, K & 0xFF); /* and imm8,%al */"
    },
    {
        "line": 210,
        "fullcodeline": "if (pc_ret0 == -1)"
    },
    {
        "line": 219,
        "fullcodeline": "if (i != flen - 1) {"
    },
    {
        "line": 223,
        "fullcodeline": "if (seen & SEEN_XREG)"
    },
    {
        "line": 366,
        "fullcodeline": "if (pc_ret0 != -1) {"
    },
    {
        "line": 371,
        "fullcodeline": "EMIT_JMP(cleanup_addr - addrs[i]);"
    },
    {
        "line": 148,
        "fullcodeline": "EMIT1_off32(0xe9, cleanup_addr - (addrs[i] - 4)); /* jmp .+off32 */"
    },
    {
        "line": 164,
        "fullcodeline": "} else if (K >= 0xFFFF0000) {"
    },
    {
        "line": 188,
        "fullcodeline": "else if (K == 1)"
    },
    {
        "line": 200,
        "fullcodeline": "else if (K == 1)"
    },
    {
        "line": 211,
        "fullcodeline": "pc_ret0 = i;"
    },
    {
        "line": 220,
        "fullcodeline": "EMIT_JMP(cleanup_addr - addrs[i]);"
    },
    {
        "line": 367,
        "fullcodeline": "EMIT_JMP(addrs[pc_ret0] - addrs[i]);"
    }
]