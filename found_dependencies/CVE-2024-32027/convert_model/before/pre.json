[
    {
        "line": 31,
        "fullcodeline": "run_cmd = ("
    },
    {
        "line": 35,
        "fullcodeline": "v1_models = ["
    },
    {
        "line": 65,
        "fullcodeline": "run_cmd += f' \"{source_model_input}\"'"
    },
    {
        "line": 79,
        "fullcodeline": "log.info(run_cmd)"
    },
    {
        "line": 81,
        "fullcodeline": "env = os.environ.copy()"
    },
    {
        "line": 82,
        "fullcodeline": "env[\"PYTHONPATH\"] = ("
    },
    {
        "line": 11,
        "fullcodeline": "if source_model_type == \"\":"
    },
    {
        "line": 32,
        "fullcodeline": "rf'\"{PYTHON}\" \"{scriptdir}/sd-scripts/tools/convert_diffusers20_original_sd.py\"'"
    },
    {
        "line": 54,
        "fullcodeline": "if target_model_type == \"diffuser_safetensors\":"
    },
    {
        "line": 83,
        "fullcodeline": "rf\"{scriptdir}{os.pathsep}{scriptdir}/sd-scripts{os.pathsep}{env.get('PYTHONPATH', '')}\""
    },
    {
        "line": 12,
        "fullcodeline": "msgbox(\"Invalid source model type\")"
    },
    {
        "line": 16,
        "fullcodeline": "if os.path.isfile(source_model_input):"
    },
    {
        "line": 17,
        "fullcodeline": "log.info(\"The provided source model is a file\")"
    },
    {
        "line": 25,
        "fullcodeline": "if os.path.isdir(target_model_folder_input):"
    },
    {
        "line": 26,
        "fullcodeline": "log.info(\"The provided model folder exist\")"
    },
    {
        "line": 41,
        "fullcodeline": "if str(source_model_type) in v1_models:"
    },
    {
        "line": 42,
        "fullcodeline": "log.info(\"SD v1 model specified. Setting --v1 parameter\")"
    },
    {
        "line": 43,
        "fullcodeline": "run_cmd += \" --v1\""
    },
    {
        "line": 45,
        "fullcodeline": "log.info(\"SD v2 model specified. Setting --v2 parameter\")"
    },
    {
        "line": 46,
        "fullcodeline": "run_cmd += \" --v2\""
    },
    {
        "line": 48,
        "fullcodeline": "if not target_save_precision_type == \"unspecified\":"
    },
    {
        "line": 49,
        "fullcodeline": "run_cmd += f\" --{target_save_precision_type}\""
    },
    {
        "line": 51,
        "fullcodeline": "if target_model_type == \"diffuser\" or target_model_type == \"diffuser_safetensors\":"
    },
    {
        "line": 52,
        "fullcodeline": "run_cmd += f' --reference_model=\"{source_model_type}\"'"
    },
    {
        "line": 55,
        "fullcodeline": "run_cmd += \" --use_safetensors\""
    },
    {
        "line": 63,
        "fullcodeline": "run_cmd += \" --unet_use_linear_projection\""
    },
    {
        "line": 67,
        "fullcodeline": "if target_model_type == \"diffuser\" or target_model_type == \"diffuser_safetensors\":"
    },
    {
        "line": 68,
        "fullcodeline": "target_model_path = os.path.join("
    },
    {
        "line": 71,
        "fullcodeline": "run_cmd += f' \"{target_model_path}\"'"
    },
    {
        "line": 73,
        "fullcodeline": "target_model_path = os.path.join("
    },
    {
        "line": 77,
        "fullcodeline": "run_cmd += f' \"{target_model_path}\"'"
    },
    {
        "line": 18,
        "fullcodeline": "elif os.path.isdir(source_model_input):"
    },
    {
        "line": 19,
        "fullcodeline": "log.info(\"The provided model is a folder\")"
    },
    {
        "line": 75,
        "fullcodeline": "f\"{target_model_name_input}.{target_model_type}\","
    }
]