[
    {
        "line": 27,
        "fullcodeline": "run_cmd = ("
    },
    {
        "line": 30,
        "fullcodeline": "run_cmd += rf' --save_to \"{save_to}\"'"
    },
    {
        "line": 31,
        "fullcodeline": "run_cmd += rf' --model \"{model}\"'"
    },
    {
        "line": 32,
        "fullcodeline": "run_cmd += f\" --unit {unit}\""
    },
    {
        "line": 34,
        "fullcodeline": "log.info(run_cmd)"
    },
    {
        "line": 36,
        "fullcodeline": "env = os.environ.copy()"
    },
    {
        "line": 37,
        "fullcodeline": "env[\"PYTHONPATH\"] = ("
    },
    {
        "line": 7,
        "fullcodeline": "if model == \"\":"
    },
    {
        "line": 28,
        "fullcodeline": "rf'\"{PYTHON}\" \"{scriptdir}/sd-scripts/networks/extract_lora_from_dylora.py\"'"
    },
    {
        "line": 38,
        "fullcodeline": "rf\"{scriptdir}{os.pathsep}{scriptdir}/sd-scripts{os.pathsep}{env.get('PYTHONPATH', '')}\""
    },
    {
        "line": 8,
        "fullcodeline": "msgbox(\"Invalid DyLoRA model file\")"
    },
    {
        "line": 18,
        "fullcodeline": "save_to = os.path.join(os.path.dirname(model), save_to)"
    },
    {
        "line": 19,
        "fullcodeline": "if os.path.isdir(save_to):"
    },
    {
        "line": 21,
        "fullcodeline": "save_to = os.path.join(save_to, \"lora.safetensors\")"
    },
    {
        "line": 25,
        "fullcodeline": "save_to = f\"{path}_tmp{ext}\""
    },
    {
        "line": 12,
        "fullcodeline": "if not os.path.isfile(model):"
    },
    {
        "line": 16,
        "fullcodeline": "if os.path.dirname(save_to) == \"\":"
    },
    {
        "line": 22,
        "fullcodeline": "if os.path.normpath(model) == os.path.normpath(save_to):"
    },
    {
        "line": 24,
        "fullcodeline": "path, ext = os.path.splitext(save_to)"
    }
]