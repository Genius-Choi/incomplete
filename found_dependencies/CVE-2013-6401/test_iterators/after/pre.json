[
    {
        "line": 5,
        "fullcodeline": "const char *iter_keys[3];"
    },
    {
        "line": 6,
        "fullcodeline": "int have_key[3] = { 0, 0, 0 };"
    },
    {
        "line": 7,
        "fullcodeline": "json_t *iter_values[3];"
    },
    {
        "line": 16,
        "fullcodeline": "object = json_object();"
    },
    {
        "line": 17,
        "fullcodeline": "foo = json_string(\"foo\");"
    },
    {
        "line": 18,
        "fullcodeline": "bar = json_string(\"bar\");"
    },
    {
        "line": 19,
        "fullcodeline": "baz = json_string(\"baz\");"
    },
    {
        "line": 31,
        "fullcodeline": "iter = json_object_iter(object);"
    },
    {
        "line": 34,
        "fullcodeline": "iter_keys[0] = json_object_iter_key(iter);"
    },
    {
        "line": 35,
        "fullcodeline": "iter_values[0] = json_object_iter_value(iter);"
    },
    {
        "line": 37,
        "fullcodeline": "iter = json_object_iter_next(object, iter);"
    },
    {
        "line": 40,
        "fullcodeline": "iter_keys[1] = json_object_iter_key(iter);"
    },
    {
        "line": 41,
        "fullcodeline": "iter_values[1] = json_object_iter_value(iter);"
    },
    {
        "line": 43,
        "fullcodeline": "iter = json_object_iter_next(object, iter);"
    },
    {
        "line": 46,
        "fullcodeline": "iter_keys[2] = json_object_iter_key(iter);"
    },
    {
        "line": 47,
        "fullcodeline": "iter_values[2] = json_object_iter_value(iter);"
    },
    {
        "line": 81,
        "fullcodeline": "iter = json_object_iter_at(object, \"b\");"
    },
    {
        "line": 100,
        "fullcodeline": "json_decref(object);"
    },
    {
        "line": 101,
        "fullcodeline": "json_decref(foo);"
    },
    {
        "line": 102,
        "fullcodeline": "json_decref(bar);"
    },
    {
        "line": 103,
        "fullcodeline": "json_decref(baz);"
    },
    {
        "line": 10,
        "fullcodeline": "if(json_object_iter(NULL))"
    },
    {
        "line": 13,
        "fullcodeline": "if(json_object_iter_next(NULL, NULL))"
    },
    {
        "line": 20,
        "fullcodeline": "if(!object || !foo || !bar || !bar)"
    },
    {
        "line": 23,
        "fullcodeline": "if(json_object_iter_next(object, NULL))"
    },
    {
        "line": 26,
        "fullcodeline": "if(json_object_set(object, \"a\", foo) ||"
    },
    {
        "line": 32,
        "fullcodeline": "if(!iter)"
    },
    {
        "line": 38,
        "fullcodeline": "if(!iter)"
    },
    {
        "line": 44,
        "fullcodeline": "if(!iter)"
    },
    {
        "line": 49,
        "fullcodeline": "if(json_object_iter_next(object, iter) != NULL)"
    },
    {
        "line": 53,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 73,
        "fullcodeline": "for(i = 0; i < 3; i++) {"
    },
    {
        "line": 78,
        "fullcodeline": "if(json_object_iter_at(object, \"foo\"))"
    },
    {
        "line": 82,
        "fullcodeline": "if(!iter)"
    },
    {
        "line": 87,
        "fullcodeline": "if(json_object_iter_value(iter) != bar)"
    },
    {
        "line": 90,
        "fullcodeline": "if(json_object_iter_set(object, iter, baz))"
    },
    {
        "line": 93,
        "fullcodeline": "if(strcmp(json_object_iter_key(iter), \"b\"))"
    },
    {
        "line": 95,
        "fullcodeline": "if(json_object_iter_value(iter) != baz)"
    },
    {
        "line": 97,
        "fullcodeline": "if(json_object_get(object, \"b\") != baz)"
    },
    {
        "line": 11,
        "fullcodeline": "fail(\"able to iterate over NULL\");"
    },
    {
        "line": 14,
        "fullcodeline": "fail(\"able to increment an iterator on a NULL object\");"
    },
    {
        "line": 21,
        "fullcodeline": "fail(\"unable to create values\");"
    },
    {
        "line": 24,
        "fullcodeline": "fail(\"able to increment a NULL iterator\");"
    },
    {
        "line": 28,
        "fullcodeline": "json_object_set(object, \"c\", baz))"
    },
    {
        "line": 29,
        "fullcodeline": "fail(\"unable to populate object\");"
    },
    {
        "line": 33,
        "fullcodeline": "fail(\"unable to get iterator\");"
    },
    {
        "line": 39,
        "fullcodeline": "fail(\"unable to increment iterator\");"
    },
    {
        "line": 45,
        "fullcodeline": "fail(\"unable to increment iterator\");"
    },
    {
        "line": 50,
        "fullcodeline": "fail(\"able to iterate over the end\");"
    },
    {
        "line": 79,
        "fullcodeline": "fail(\"json_object_iter_at() succeeds for non-existent key\");"
    },
    {
        "line": 83,
        "fullcodeline": "fail(\"json_object_iter_at() fails for an existing key\");"
    },
    {
        "line": 85,
        "fullcodeline": "if(strcmp(json_object_iter_key(iter), \"b\"))"
    },
    {
        "line": 86,
        "fullcodeline": "fail(\"iterating failed: wrong key\");"
    },
    {
        "line": 88,
        "fullcodeline": "fail(\"iterating failed: wrong value\");"
    },
    {
        "line": 91,
        "fullcodeline": "fail(\"unable to set value at iterator\");"
    },
    {
        "line": 94,
        "fullcodeline": "fail(\"json_object_iter_key() fails after json_object_iter_set()\");"
    },
    {
        "line": 96,
        "fullcodeline": "fail(\"json_object_iter_value() fails after json_object_iter_set()\");"
    },
    {
        "line": 98,
        "fullcodeline": "fail(\"json_object_get() fails after json_object_iter_set()\");"
    },
    {
        "line": 27,
        "fullcodeline": "json_object_set(object, \"b\", bar) ||"
    },
    {
        "line": 54,
        "fullcodeline": "if (strcmp(iter_keys[i], \"a\") == 0) {"
    },
    {
        "line": 74,
        "fullcodeline": "if(!have_key[i])"
    },
    {
        "line": 75,
        "fullcodeline": "fail(\"a key wasn't iterated over\");"
    },
    {
        "line": 55,
        "fullcodeline": "if (iter_values[i] != foo)"
    },
    {
        "line": 56,
        "fullcodeline": "fail(\"wrong value for iter key a\");"
    },
    {
        "line": 59,
        "fullcodeline": "} else if (strcmp(iter_keys[i], \"b\") == 0) {"
    },
    {
        "line": 58,
        "fullcodeline": "have_key[0] = 1;"
    },
    {
        "line": 60,
        "fullcodeline": "if (iter_values[i] != bar)"
    },
    {
        "line": 61,
        "fullcodeline": "fail(\"wrong value for iter key b\");"
    },
    {
        "line": 64,
        "fullcodeline": "} else if (strcmp(iter_keys[i], \"c\") == 0) {"
    },
    {
        "line": 63,
        "fullcodeline": "have_key[1] = 1;"
    },
    {
        "line": 65,
        "fullcodeline": "if (iter_values[i] != baz)"
    },
    {
        "line": 66,
        "fullcodeline": "fail(\"wrong value for iter key c\");"
    },
    {
        "line": 68,
        "fullcodeline": "have_key[2] = 1;"
    }
]