[
    {
        "line": 14,
        "fullcodeline": "hash = hash_str(key);"
    },
    {
        "line": 15,
        "fullcodeline": "index = hash & hashmask(hashtable->order);"
    },
    {
        "line": 17,
        "fullcodeline": "pair = hashtable_find_pair(hashtable, bucket, key, hash);"
    },
    {
        "line": 10,
        "fullcodeline": "if(hashtable->size >= hashsize(hashtable->order))"
    },
    {
        "line": 21,
        "fullcodeline": "json_decref(pair->value);"
    },
    {
        "line": 22,
        "fullcodeline": "pair->value = value;"
    },
    {
        "line": 11,
        "fullcodeline": "if(hashtable_do_rehash(hashtable))"
    },
    {
        "line": 29,
        "fullcodeline": "pair = jsonp_malloc(offsetof(pair_t, key) + strlen(key) + 1);"
    },
    {
        "line": 33,
        "fullcodeline": "pair->hash = hash;"
    },
    {
        "line": 34,
        "fullcodeline": "pair->serial = serial;"
    },
    {
        "line": 35,
        "fullcodeline": "strcpy(pair->key, key);"
    },
    {
        "line": 36,
        "fullcodeline": "pair->value = value;"
    },
    {
        "line": 37,
        "fullcodeline": "list_init(&pair->list);"
    },
    {
        "line": 39,
        "fullcodeline": "insert_to_bucket(hashtable, bucket, &pair->list);"
    },
    {
        "line": 41,
        "fullcodeline": "hashtable->size++;"
    },
    {
        "line": 30,
        "fullcodeline": "if(!pair)"
    },
    {
        "line": 12,
        "fullcodeline": "return -1;"
    },
    {
        "line": 31,
        "fullcodeline": "return -1;"
    }
]