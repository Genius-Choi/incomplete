[
    {
        "line": 8,
        "fullcodeline": "struct problem_item *item = get_current_problem_item_or_NULL(tree_view, &item_name);"
    },
    {
        "line": 15,
        "fullcodeline": "gchar *arg[3];"
    },
    {
        "line": 16,
        "fullcodeline": "arg[0] = (char *) \"xdg-open\";"
    },
    {
        "line": 17,
        "fullcodeline": "arg[1] = concat_path_file(g_dump_dir_name, item_name);"
    },
    {
        "line": 18,
        "fullcodeline": "arg[2] = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "const gboolean spawn_ret = g_spawn_sync(NULL, arg, NULL,"
    },
    {
        "line": 62,
        "fullcodeline": "free(arg[1]);"
    },
    {
        "line": 64,
        "fullcodeline": "g_free(item_name);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!item || !(item->flags & CD_FLAG_TXT))"
    },
    {
        "line": 11,
        "fullcodeline": "if (!strchr(item->content, '\\n')) /* one line? */"
    },
    {
        "line": 24,
        "fullcodeline": "if (spawn_ret == FALSE || exitcode != EXIT_SUCCESS)"
    },
    {
        "line": 21,
        "fullcodeline": "G_SPAWN_SEARCH_PATH | G_SPAWN_STDOUT_TO_DEV_NULL,"
    },
    {
        "line": 26,
        "fullcodeline": "GtkWidget *dialog = gtk_dialog_new_with_buttons(_(\"View/edit a text file\"),"
    },
    {
        "line": 30,
        "fullcodeline": "GtkWidget *vbox = gtk_dialog_get_content_area(GTK_DIALOG(dialog));"
    },
    {
        "line": 31,
        "fullcodeline": "GtkWidget *scrolled = gtk_scrolled_window_new(NULL, NULL);"
    },
    {
        "line": 32,
        "fullcodeline": "GtkWidget *textview = gtk_text_view_new();"
    },
    {
        "line": 34,
        "fullcodeline": "gtk_dialog_add_button(GTK_DIALOG(dialog), _(\"_Save\"), GTK_RESPONSE_OK);"
    },
    {
        "line": 35,
        "fullcodeline": "gtk_dialog_add_button(GTK_DIALOG(dialog), _(\"_Cancel\"), GTK_RESPONSE_CANCEL);"
    },
    {
        "line": 37,
        "fullcodeline": "gtk_box_pack_start(GTK_BOX(vbox), scrolled, TRUE, TRUE, 0);"
    },
    {
        "line": 38,
        "fullcodeline": "gtk_widget_set_size_request(scrolled, 640, 480);"
    },
    {
        "line": 39,
        "fullcodeline": "gtk_widget_show(scrolled);"
    },
    {
        "line": 47,
        "fullcodeline": "gtk_container_add(GTK_CONTAINER(scrolled), textview);"
    },
    {
        "line": 50,
        "fullcodeline": "gtk_widget_show(textview);"
    },
    {
        "line": 52,
        "fullcodeline": "load_text_to_text_view(GTK_TEXT_VIEW(textview), item_name);"
    },
    {
        "line": 57,
        "fullcodeline": "gtk_widget_destroy(textview);"
    },
    {
        "line": 58,
        "fullcodeline": "gtk_widget_destroy(scrolled);"
    },
    {
        "line": 59,
        "fullcodeline": "gtk_widget_destroy(dialog);"
    },
    {
        "line": 54,
        "fullcodeline": "if (gtk_dialog_run(GTK_DIALOG(dialog)) == GTK_RESPONSE_OK)"
    },
    {
        "line": 27,
        "fullcodeline": "GTK_WINDOW(g_wnd_assistant),"
    },
    {
        "line": 28,
        "fullcodeline": "GTK_DIALOG_MODAL | GTK_DIALOG_DESTROY_WITH_PARENT,"
    },
    {
        "line": 55,
        "fullcodeline": "save_text_from_text_view(GTK_TEXT_VIEW(textview), item_name);"
    }
]