[
    {
        "line": 8,
        "fullcodeline": "ds = d;"
    },
    {
        "line": 10,
        "fullcodeline": "si = s;"
    },
    {
        "line": 45,
        "fullcodeline": "*d++ = '\\0';"
    },
    {
        "line": 11,
        "fullcodeline": "while (si < se) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (s < se) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (d >= de)"
    },
    {
        "line": 46,
        "fullcodeline": "return d - ds;  /* Number of bytes written. */"
    },
    {
        "line": 12,
        "fullcodeline": "st = si;"
    },
    {
        "line": 13,
        "fullcodeline": "c = uv__utf8_decode1(&si, se);"
    },
    {
        "line": 24,
        "fullcodeline": "rc = uv__idna_toascii_label(s, st, &d, de);"
    },
    {
        "line": 32,
        "fullcodeline": "s = si;"
    },
    {
        "line": 36,
        "fullcodeline": "rc = uv__idna_toascii_label(s, se, &d, de);"
    },
    {
        "line": 15,
        "fullcodeline": "if (c == UINT_MAX)"
    },
    {
        "line": 18,
        "fullcodeline": "if (c != '.')"
    },
    {
        "line": 26,
        "fullcodeline": "if (rc < 0)"
    },
    {
        "line": 29,
        "fullcodeline": "if (d < de)"
    },
    {
        "line": 38,
        "fullcodeline": "if (rc < 0)"
    },
    {
        "line": 30,
        "fullcodeline": "*d++ = '.';"
    },
    {
        "line": 19,
        "fullcodeline": "if (c != 0x3002)  /* \u3002 */"
    },
    {
        "line": 20,
        "fullcodeline": "if (c != 0xFF0E)  /* \uff0e */"
    },
    {
        "line": 21,
        "fullcodeline": "if (c != 0xFF61)  /* \uff61 */"
    }
]