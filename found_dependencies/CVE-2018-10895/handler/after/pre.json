[
    {
        "line": 17,
        "fullcodeline": "url = request.url()"
    },
    {
        "line": 12,
        "fullcodeline": "if operation != QNetworkAccessManager.GetOperation:"
    },
    {
        "line": 44,
        "fullcodeline": "return networkreply.FixedDataNetworkReply(request, data, mimetype)"
    },
    {
        "line": 19,
        "fullcodeline": "if ((url.scheme(), url.host(), url.path()) =="
    },
    {
        "line": 20,
        "fullcodeline": "('qute', 'settings', '/set')):"
    },
    {
        "line": 13,
        "fullcodeline": "return networkreply.ErrorNetworkReply("
    },
    {
        "line": 21,
        "fullcodeline": "if current_url != QUrl('qute://settings/'):"
    },
    {
        "line": 30,
        "fullcodeline": "mimetype, data = qutescheme.data_for_url(url)"
    },
    {
        "line": 32,
        "fullcodeline": "errorstr = \"No handler found for {}!\".format(url.toDisplayString())"
    },
    {
        "line": 41,
        "fullcodeline": "qtutils.ensure_valid(e.url)"
    },
    {
        "line": 22,
        "fullcodeline": "log.webview.warning(\"Blocking malicious request from {} to {}\""
    },
    {
        "line": 25,
        "fullcodeline": "return networkreply.ErrorNetworkReply("
    },
    {
        "line": 33,
        "fullcodeline": "return networkreply.ErrorNetworkReply("
    },
    {
        "line": 36,
        "fullcodeline": "return networkreply.ErrorNetworkReply("
    },
    {
        "line": 39,
        "fullcodeline": "return networkreply.ErrorNetworkReply(request, e.errorstring, e.error)"
    },
    {
        "line": 42,
        "fullcodeline": "return networkreply.RedirectNetworkReply(e.url)"
    },
    {
        "line": 37,
        "fullcodeline": "request, str(e), QNetworkReply.ContentNotFoundError)"
    },
    {
        "line": 23,
        "fullcodeline": ".format(current_url.toDisplayString(),"
    },
    {
        "line": 24,
        "fullcodeline": "url.toDisplayString()))"
    }
]