[
    {
        "line": 4,
        "fullcodeline": "struct NntpData *nntp_data = ctx->data;"
    },
    {
        "line": 6,
        "fullcodeline": "struct Header *hdr = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "char buf[HUGE_STRING];"
    },
    {
        "line": 8,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "int oldmsgcount = ctx->msgcount;"
    },
    {
        "line": 11,
        "fullcodeline": "anum_t first_over = first;"
    },
    {
        "line": 21,
        "fullcodeline": "fc.ctx = ctx;"
    },
    {
        "line": 22,
        "fullcodeline": "fc.first = first;"
    },
    {
        "line": 23,
        "fullcodeline": "fc.last = last;"
    },
    {
        "line": 24,
        "fullcodeline": "fc.restore = restore;"
    },
    {
        "line": 25,
        "fullcodeline": "fc.messages = mutt_mem_calloc(last - first + 1, sizeof(unsigned char));"
    },
    {
        "line": 222,
        "fullcodeline": "FREE(&fc.messages);"
    },
    {
        "line": 225,
        "fullcodeline": "mutt_clear_error();"
    },
    {
        "line": 17,
        "fullcodeline": "if (!last || first > last)"
    },
    {
        "line": 26,
        "fullcodeline": "if (fc.messages == NULL)"
    },
    {
        "line": 33,
        "fullcodeline": "if (NntpListgroup && nntp_data->nserv->hasLISTGROUP && !nntp_data->deleted)"
    },
    {
        "line": 77,
        "fullcodeline": "if (!ctx->quiet)"
    },
    {
        "line": 82,
        "fullcodeline": "for (current = first; current <= last && rc == 0; current++)"
    },
    {
        "line": 204,
        "fullcodeline": "if (!NntpListgroup || !nntp_data->nserv->hasLISTGROUP)"
    },
    {
        "line": 208,
        "fullcodeline": "if (current <= last && rc == 0 && !nntp_data->deleted)"
    },
    {
        "line": 219,
        "fullcodeline": "if (ctx->msgcount > oldmsgcount)"
    },
    {
        "line": 223,
        "fullcodeline": "if (rc != 0)"
    },
    {
        "line": 41,
        "fullcodeline": "rc = nntp_fetch_lines(nntp_data, buf, sizeof(buf), NULL, fetch_numbers, &fc);"
    },
    {
        "line": 79,
        "fullcodeline": "mutt_progress_init(&fc.progress, _(\"Fetching message headers...\"),"
    },
    {
        "line": 185,
        "fullcodeline": "hdr->index = ctx->msgcount++;"
    },
    {
        "line": 186,
        "fullcodeline": "hdr->read = false;"
    },
    {
        "line": 187,
        "fullcodeline": "hdr->old = false;"
    },
    {
        "line": 188,
        "fullcodeline": "hdr->deleted = false;"
    },
    {
        "line": 189,
        "fullcodeline": "hdr->data = mutt_mem_calloc(1, sizeof(struct NntpHeaderData));"
    },
    {
        "line": 190,
        "fullcodeline": "NHDR(hdr)->article_num = current;"
    },
    {
        "line": 201,
        "fullcodeline": "first_over = current + 1;"
    },
    {
        "line": 205,
        "fullcodeline": "current = first_over;"
    },
    {
        "line": 210,
        "fullcodeline": "char *cmd = nntp_data->nserv->hasOVER ? \"OVER\" : \"XOVER\";"
    },
    {
        "line": 211,
        "fullcodeline": "snprintf(buf, sizeof(buf), \"%s %u-%u\\r\\n\", cmd, current, last);"
    },
    {
        "line": 212,
        "fullcodeline": "rc = nntp_fetch_lines(nntp_data, buf, sizeof(buf), NULL, parse_overview_line, &fc);"
    },
    {
        "line": 220,
        "fullcodeline": "mx_update_context(ctx, ctx->msgcount - oldmsgcount);"
    },
    {
        "line": 27,
        "fullcodeline": "return -1;"
    },
    {
        "line": 35,
        "fullcodeline": "if (!ctx->quiet)"
    },
    {
        "line": 42,
        "fullcodeline": "if (rc > 0)"
    },
    {
        "line": 46,
        "fullcodeline": "if (rc == 0)"
    },
    {
        "line": 80,
        "fullcodeline": "MUTT_PROGRESS_MSG, ReadInc, last - first + 1);"
    },
    {
        "line": 84,
        "fullcodeline": "if (!ctx->quiet)"
    },
    {
        "line": 92,
        "fullcodeline": "if (!fc.messages[current - first])"
    },
    {
        "line": 96,
        "fullcodeline": "if (ctx->msgcount >= ctx->hdrmax)"
    },
    {
        "line": 199,
        "fullcodeline": "if (current > nntp_data->last_loaded)"
    },
    {
        "line": 213,
        "fullcodeline": "if (rc > 0)"
    },
    {
        "line": 224,
        "fullcodeline": "return -1;"
    },
    {
        "line": 36,
        "fullcodeline": "mutt_message(_(\"Fetching list of articles...\"));"
    },
    {
        "line": 38,
        "fullcodeline": "snprintf(buf, sizeof(buf), \"LISTGROUP %s %u-%u\\r\\n\", nntp_data->group, first, last);"
    },
    {
        "line": 44,
        "fullcodeline": "mutt_error(\"LISTGROUP: %s\", buf);"
    },
    {
        "line": 72,
        "fullcodeline": "for (current = first; current <= last; current++)"
    },
    {
        "line": 73,
        "fullcodeline": "fc.messages[current - first] = 1;"
    },
    {
        "line": 85,
        "fullcodeline": "mutt_progress_update(&fc.progress, current - first + 1, -1);"
    },
    {
        "line": 97,
        "fullcodeline": "mx_alloc_memory(ctx);"
    },
    {
        "line": 192,
        "fullcodeline": "hdr->changed = true;"
    },
    {
        "line": 200,
        "fullcodeline": "nntp_data->last_loaded = current;"
    },
    {
        "line": 215,
        "fullcodeline": "mutt_error(\"%s: %s\", cmd, buf);"
    },
    {
        "line": 40,
        "fullcodeline": "snprintf(buf, sizeof(buf), \"LISTGROUP %s\\r\\n\", nntp_data->group);"
    },
    {
        "line": 48,
        "fullcodeline": "for (current = first; current <= last && rc == 0; current++)"
    },
    {
        "line": 195,
        "fullcodeline": "nntp_article_status(ctx, hdr, NULL, NHDR(hdr)->article_num);"
    },
    {
        "line": 53,
        "fullcodeline": "snprintf(buf, sizeof(buf), \"%u\", current);"
    },
    {
        "line": 196,
        "fullcodeline": "if (!hdr->read)"
    },
    {
        "line": 197,
        "fullcodeline": "nntp_parse_xref(ctx, hdr);"
    },
    {
        "line": 50,
        "fullcodeline": "if (fc.messages[current - first])"
    },
    {
        "line": 56,
        "fullcodeline": "mutt_debug(2, \"#1 mutt_bcache_del %s\\n\", buf);"
    },
    {
        "line": 57,
        "fullcodeline": "mutt_bcache_del(nntp_data->bcache, buf);"
    },
    {
        "line": 134,
        "fullcodeline": "if (NntpListgroup && nntp_data->nserv->hasLISTGROUP)"
    },
    {
        "line": 143,
        "fullcodeline": "FILE *fp = mutt_file_mkstemp();"
    },
    {
        "line": 151,
        "fullcodeline": "snprintf(buf, sizeof(buf), \"HEAD %u\\r\\n\", current);"
    },
    {
        "line": 152,
        "fullcodeline": "rc = nntp_fetch_lines(nntp_data, buf, sizeof(buf), NULL, fetch_tempfile, fp);"
    },
    {
        "line": 178,
        "fullcodeline": "hdr = ctx->hdrs[ctx->msgcount] = mutt_header_new();"
    },
    {
        "line": 179,
        "fullcodeline": "hdr->env = mutt_rfc822_read_header(fp, hdr, 0, 0);"
    },
    {
        "line": 180,
        "fullcodeline": "hdr->received = hdr->date_sent;"
    },
    {
        "line": 181,
        "fullcodeline": "mutt_file_fclose(&fp);"
    },
    {
        "line": 144,
        "fullcodeline": "if (!fp)"
    },
    {
        "line": 146,
        "fullcodeline": "mutt_perror(\"mutt_file_mkstemp() failed!\");"
    },
    {
        "line": 147,
        "fullcodeline": "rc = -1;"
    },
    {
        "line": 155,
        "fullcodeline": "mutt_file_fclose(&fp);"
    },
    {
        "line": 173,
        "fullcodeline": "rc = 0;"
    },
    {
        "line": 156,
        "fullcodeline": "if (rc < 0)"
    },
    {
        "line": 160,
        "fullcodeline": "if (mutt_str_strncmp(\"423\", buf, 3) != 0)"
    },
    {
        "line": 162,
        "fullcodeline": "mutt_error(\"HEAD: %s\", buf);"
    },
    {
        "line": 169,
        "fullcodeline": "snprintf(buf, sizeof(buf), \"%u\", current);"
    },
    {
        "line": 170,
        "fullcodeline": "mutt_debug(2, \"#3 mutt_bcache_del %s\\n\", buf);"
    },
    {
        "line": 171,
        "fullcodeline": "mutt_bcache_del(nntp_data->bcache, buf);"
    }
]