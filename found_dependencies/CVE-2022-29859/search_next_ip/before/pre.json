[
    {
        "line": 13,
        "fullcodeline": "xSemaphoreTake(dhcps_ip_table_semaphore, portMAX_DELAY);"
    },
    {
        "line": 14,
        "fullcodeline": "for (range_count = 0; range_count < (max_count = 8); range_count++) {"
    },
    {
        "line": 7,
        "fullcodeline": "start = (uint8_t)ip4_addr4(&dhcps_addr_pool_start);"
    },
    {
        "line": 8,
        "fullcodeline": "end = (uint8_t)ip4_addr4(&dhcps_addr_pool_end);"
    },
    {
        "line": 10,
        "fullcodeline": "start = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "end = 255;"
    },
    {
        "line": 15,
        "fullcodeline": "for (offset_count = 0;offset_count < 32; offset_count++) {"
    },
    {
        "line": 16,
        "fullcodeline": "if ((((ip_table.ip_range[range_count] >> offset_count) & 0x01) == 0)"
    },
    {
        "line": 18,
        "fullcodeline": "&&(((range_count * 32) + (offset_count + 1)) <= end)) {"
    },
    {
        "line": 19,
        "fullcodeline": "xSemaphoreGive(dhcps_ip_table_semaphore);"
    },
    {
        "line": 17,
        "fullcodeline": "&&(((range_count * 32) + (offset_count + 1)) >= start)"
    },
    {
        "line": 20,
        "fullcodeline": "return ((range_count * 32) + (offset_count + 1));"
    }
]