[
    {
        "line": 6,
        "fullcodeline": "xSemaphoreTake(dhcps_ip_table_semaphore, portMAX_DELAY);"
    },
    {
        "line": 50,
        "fullcodeline": "xSemaphoreGive(dhcps_ip_table_semaphore);"
    },
    {
        "line": 7,
        "fullcodeline": "if (0 < d && d <= 32) {"
    },
    {
        "line": 8,
        "fullcodeline": "ip_table.ip_range[0] = MARK_RANGE1_IP_BIT(ip_table, d);"
    },
    {
        "line": 12,
        "fullcodeline": "} else if (32 < d && d <= 64) {"
    },
    {
        "line": 13,
        "fullcodeline": "ip_table.ip_range[1] = MARK_RANGE2_IP_BIT(ip_table, (d - 32));"
    },
    {
        "line": 17,
        "fullcodeline": "} else if (64 < d && d <= 96) {"
    },
    {
        "line": 18,
        "fullcodeline": "ip_table.ip_range[2] = MARK_RANGE3_IP_BIT(ip_table, (d - 64));"
    },
    {
        "line": 22,
        "fullcodeline": "} else if (96 < d && d <= 128) {"
    },
    {
        "line": 23,
        "fullcodeline": "ip_table.ip_range[3] = MARK_RANGE4_IP_BIT(ip_table, (d - 96));"
    },
    {
        "line": 27,
        "fullcodeline": "} else if(128 < d && d <= 160) {"
    },
    {
        "line": 28,
        "fullcodeline": "ip_table.ip_range[4] = MARK_RANGE5_IP_BIT(ip_table, d);"
    },
    {
        "line": 32,
        "fullcodeline": "} else if (160 < d && d <= 192) {"
    },
    {
        "line": 33,
        "fullcodeline": "ip_table.ip_range[5] = MARK_RANGE6_IP_BIT(ip_table, (d - 160));"
    },
    {
        "line": 37,
        "fullcodeline": "} else if (192 < d && d <= 224) {"
    },
    {
        "line": 38,
        "fullcodeline": "ip_table.ip_range[6] = MARK_RANGE7_IP_BIT(ip_table, (d - 192));"
    },
    {
        "line": 42,
        "fullcodeline": "} else if (224 < d) {"
    },
    {
        "line": 43,
        "fullcodeline": "ip_table.ip_range[7] = MARK_RANGE8_IP_BIT(ip_table, (d - 224));"
    },
    {
        "line": 48,
        "fullcodeline": "printf(\"\\r\\n Request ip over the range(1-128) \\r\\n\");"
    }
]