[
    {
        "line": 3,
        "fullcodeline": "session_t peer_id = pkt->getPeerId();"
    },
    {
        "line": 4,
        "fullcodeline": "RemotePlayer *player = m_env->getPlayer(peer_id);"
    },
    {
        "line": 14,
        "fullcodeline": "PlayerSAO *playersao = player->getPlayerSAO();"
    },
    {
        "line": 25,
        "fullcodeline": "verbosestream << \"TOSERVER_INVENTORY_ACTION: data=\" << datastring"
    },
    {
        "line": 29,
        "fullcodeline": "InventoryAction *a = InventoryAction::deSerialize(is);"
    },
    {
        "line": 38,
        "fullcodeline": "RollbackScopeActor rollback_scope(m_rollback,"
    },
    {
        "line": 174,
        "fullcodeline": "a->apply(m_inventory_mgr.get(), playersao, this);"
    },
    {
        "line": 6,
        "fullcodeline": "if (player == NULL) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (playersao == NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "std::string datastring(pkt->getString(0), pkt->getSize());"
    },
    {
        "line": 30,
        "fullcodeline": "if (!a) {"
    },
    {
        "line": 7,
        "fullcodeline": "errorstream <<"
    },
    {
        "line": 10,
        "fullcodeline": "DisconnectPeer(peer_id);"
    },
    {
        "line": 39,
        "fullcodeline": "std::string(\"player:\")+player->getName());"
    },
    {
        "line": 49,
        "fullcodeline": "if (a->getType() == IAction::Move) {"
    },
    {
        "line": 50,
        "fullcodeline": "IMoveAction *ma = (IMoveAction*)a;"
    },
    {
        "line": 52,
        "fullcodeline": "ma->from_inv.applyCurrentPlayer(player->getName());"
    },
    {
        "line": 53,
        "fullcodeline": "ma->to_inv.applyCurrentPlayer(player->getName());"
    },
    {
        "line": 55,
        "fullcodeline": "m_inventory_mgr->setInventoryModified(ma->from_inv);"
    },
    {
        "line": 63,
        "fullcodeline": "bool to_inv_is_current_player ="
    },
    {
        "line": 67,
        "fullcodeline": "InventoryLocation *remote = from_inv_is_current_player ?"
    },
    {
        "line": 16,
        "fullcodeline": "errorstream <<"
    },
    {
        "line": 31,
        "fullcodeline": "infostream << \"TOSERVER_INVENTORY_ACTION: \""
    },
    {
        "line": 56,
        "fullcodeline": "if (ma->from_inv != ma->to_inv)"
    },
    {
        "line": 60,
        "fullcodeline": "(ma->from_inv.type == InventoryLocation::PLAYER) &&"
    },
    {
        "line": 64,
        "fullcodeline": "(ma->to_inv.type == InventoryLocation::PLAYER) &&"
    },
    {
        "line": 82,
        "fullcodeline": "if (ma->from_list == \"craftpreview\") {"
    },
    {
        "line": 57,
        "fullcodeline": "m_inventory_mgr->setInventoryModified(ma->to_inv);"
    },
    {
        "line": 61,
        "fullcodeline": "(ma->from_inv.name == player->getName());"
    },
    {
        "line": 65,
        "fullcodeline": "(ma->to_inv.name == player->getName());"
    },
    {
        "line": 72,
        "fullcodeline": "v3f node_pos   = intToFloat(remote->p, BS);"
    },
    {
        "line": 73,
        "fullcodeline": "v3f player_pos = player->getPlayerSAO()->getEyePosition();"
    },
    {
        "line": 74,
        "fullcodeline": "f32 d = player_pos.getDistanceFrom(node_pos);"
    },
    {
        "line": 94,
        "fullcodeline": "if (ma->to_list == \"craftpreview\" || ma->to_list == \"craftresult\") {"
    },
    {
        "line": 105,
        "fullcodeline": "if (!checkPriv(player->getName(), \"interact\") &&"
    },
    {
        "line": 106,
        "fullcodeline": "(!from_inv_is_current_player ||"
    },
    {
        "line": 83,
        "fullcodeline": "infostream << \"Ignoring IMoveAction from \""
    },
    {
        "line": 95,
        "fullcodeline": "infostream << \"Ignoring IMoveAction from \""
    },
    {
        "line": 107,
        "fullcodeline": "!to_inv_is_current_player)) {"
    },
    {
        "line": 108,
        "fullcodeline": "infostream << \"Cannot move outside of player's inventory: \""
    },
    {
        "line": 117,
        "fullcodeline": "else if (a->getType() == IAction::Drop) {"
    },
    {
        "line": 118,
        "fullcodeline": "IDropAction *da = (IDropAction*)a;"
    },
    {
        "line": 120,
        "fullcodeline": "da->from_inv.applyCurrentPlayer(player->getName());"
    },
    {
        "line": 122,
        "fullcodeline": "m_inventory_mgr->setInventoryModified(da->from_inv);"
    },
    {
        "line": 75,
        "fullcodeline": "if (!checkInteractDistance(player, d, \"inventory\"))"
    },
    {
        "line": 127,
        "fullcodeline": "if (da->from_list == \"craftpreview\") {"
    },
    {
        "line": 142,
        "fullcodeline": "if (playersao->isDead()) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (!checkPriv(player->getName(), \"interact\")) {"
    },
    {
        "line": 128,
        "fullcodeline": "infostream << \"Ignoring IDropAction from \""
    },
    {
        "line": 143,
        "fullcodeline": "infostream << \"Ignoring IDropAction from \""
    },
    {
        "line": 153,
        "fullcodeline": "else if (a->getType() == IAction::Craft) {"
    },
    {
        "line": 154,
        "fullcodeline": "ICraftAction *ca = (ICraftAction*)a;"
    },
    {
        "line": 156,
        "fullcodeline": "ca->craft_inv.applyCurrentPlayer(player->getName());"
    },
    {
        "line": 158,
        "fullcodeline": "m_inventory_mgr->setInventoryModified(ca->craft_inv);"
    },
    {
        "line": 85,
        "fullcodeline": "<< \" to \" << (ma->to_inv.dump()) << \":\" << ma->to_list"
    },
    {
        "line": 97,
        "fullcodeline": "<< \" to \" << (ma->to_inv.dump()) << \":\" << ma->to_list"
    },
    {
        "line": 165,
        "fullcodeline": "if (!checkPriv(player->getName(), \"interact\")) {"
    },
    {
        "line": 166,
        "fullcodeline": "infostream << \"Cannot craft: \""
    },
    {
        "line": 144,
        "fullcodeline": "<< (da->from_inv.dump()) << \":\" << da->from_list"
    },
    {
        "line": 129,
        "fullcodeline": "<< (da->from_inv.dump()) << \":\" << da->from_list"
    },
    {
        "line": 84,
        "fullcodeline": "<< (ma->from_inv.dump()) << \":\" << ma->from_list"
    },
    {
        "line": 96,
        "fullcodeline": "<< (ma->from_inv.dump()) << \":\" << ma->from_list"
    }
]