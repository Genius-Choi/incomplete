[
    {
        "line": 7,
        "fullcodeline": "if (g->sect <= 0 ||"
    },
    {
        "line": 11,
        "fullcodeline": "(g->stretch & ~(FD_STRETCH | FD_SWAPSIDES | FD_SECTBASEMASK)) != 0)"
    },
    {
        "line": 16,
        "fullcodeline": "mutex_lock(&open_lock);"
    },
    {
        "line": 9,
        "fullcodeline": "g->track <= 0 || g->track > UDP->tracks >> STRETCH(g) ||"
    },
    {
        "line": 12,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 23,
        "fullcodeline": "for (cnt = type << 2; cnt < (type << 2) + 4; cnt++)"
    },
    {
        "line": 27,
        "fullcodeline": "for (cnt = 0; cnt < N_DRIVE; cnt++) {"
    },
    {
        "line": 45,
        "fullcodeline": "oldStretch = g->stretch;"
    },
    {
        "line": 46,
        "fullcodeline": "user_params[drive] = *g;"
    },
    {
        "line": 14,
        "fullcodeline": "if (!capable(CAP_SYS_ADMIN))"
    },
    {
        "line": 24,
        "fullcodeline": "floppy_sizes[cnt] = floppy_sizes[cnt + 0x80] ="
    },
    {
        "line": 28,
        "fullcodeline": "struct block_device *bdev = opened_bdev[cnt];"
    },
    {
        "line": 37,
        "fullcodeline": "if (lock_fdc(drive))"
    },
    {
        "line": 39,
        "fullcodeline": "if (cmd != FDDEFPRM) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (buffer_drive == drive)"
    },
    {
        "line": 8,
        "fullcodeline": "g->head <= 0 ||"
    },
    {
        "line": 15,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 19,
        "fullcodeline": "return -EINTR;"
    },
    {
        "line": 48,
        "fullcodeline": "SUPBOUND(buffer_max, user_params[drive].sect);"
    },
    {
        "line": 60,
        "fullcodeline": "if (DRS->maxblock > user_params[drive].sect ||"
    },
    {
        "line": 62,
        "fullcodeline": "((user_params[drive].sect ^ oldStretch) &"
    },
    {
        "line": 29,
        "fullcodeline": "if (!bdev || ITYPE(drive_state[cnt].fd_device) != type)"
    },
    {
        "line": 38,
        "fullcodeline": "return -EINTR;"
    },
    {
        "line": 52,
        "fullcodeline": "DRS->keep_data = -1;"
    },
    {
        "line": 63,
        "fullcodeline": "(FD_SWAPSIDES | FD_SECTBASEMASK)))"
    },
    {
        "line": 42,
        "fullcodeline": "if (poll_drive(true, FD_RAW_NEED_DISK) == -EINTR)"
    },
    {
        "line": 43,
        "fullcodeline": "return -EINTR;"
    }
]