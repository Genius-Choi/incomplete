[
    {
        "line": 4,
        "fullcodeline": "s32 mb_width, mb_height, sps_id = -1;"
    },
    {
        "line": 5,
        "fullcodeline": "u32 profile_idc, level_idc, pcomp, i, chroma_format_idc, cl = 0, cr = 0, ct = 0, cb = 0, luma_bd, chroma_bd;"
    },
    {
        "line": 6,
        "fullcodeline": "u8 separate_colour_plane_flag = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "profile_idc = gf_bs_read_int_log(bs, 8, \"profile_idc\");"
    },
    {
        "line": 23,
        "fullcodeline": "pcomp = gf_bs_read_int_log(bs, 8, \"profile_compatibility\");"
    },
    {
        "line": 28,
        "fullcodeline": "level_idc = gf_bs_read_int_log(bs, 8, \"level_idc\");"
    },
    {
        "line": 33,
        "fullcodeline": "sps_id = gf_bs_read_ue_log(bs, \"sps_id\") + GF_SVC_SSPS_ID_SHIFT * subseq_sps;"
    },
    {
        "line": 41,
        "fullcodeline": "luma_bd = chroma_bd = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "chroma_format_idc = sps->ChromaArrayType = 1;"
    },
    {
        "line": 44,
        "fullcodeline": "sps->state |= subseq_sps ? AVC_SUBSPS_PARSED : AVC_SPS_PARSED;"
    },
    {
        "line": 94,
        "fullcodeline": "sps->profile_idc = profile_idc;"
    },
    {
        "line": 95,
        "fullcodeline": "sps->level_idc = level_idc;"
    },
    {
        "line": 96,
        "fullcodeline": "sps->prof_compat = pcomp;"
    },
    {
        "line": 97,
        "fullcodeline": "sps->log2_max_frame_num = gf_bs_read_ue_log(bs, \"log2_max_frame_num\") + 4;"
    },
    {
        "line": 98,
        "fullcodeline": "sps->poc_type = gf_bs_read_ue_log(bs, \"poc_type\");"
    },
    {
        "line": 99,
        "fullcodeline": "sps->chroma_format = chroma_format_idc;"
    },
    {
        "line": 100,
        "fullcodeline": "sps->luma_bit_depth_m8 = luma_bd;"
    },
    {
        "line": 101,
        "fullcodeline": "sps->chroma_bit_depth_m8 = chroma_bd;"
    },
    {
        "line": 121,
        "fullcodeline": "sps->max_num_ref_frames = gf_bs_read_ue_log(bs, \"max_num_ref_frames\");"
    },
    {
        "line": 122,
        "fullcodeline": "sps->gaps_in_frame_num_value_allowed_flag = gf_bs_read_int_log(bs, 1, \"gaps_in_frame_num_value_allowed_flag\");"
    },
    {
        "line": 123,
        "fullcodeline": "mb_width = gf_bs_read_ue_log(bs, \"pic_width_in_mbs_minus1\") + 1;"
    },
    {
        "line": 124,
        "fullcodeline": "mb_height = gf_bs_read_ue_log(bs, \"pic_height_in_map_units_minus1\") + 1;"
    },
    {
        "line": 126,
        "fullcodeline": "sps->frame_mbs_only_flag = gf_bs_read_int_log(bs, 1, \"frame_mbs_only_flag\");"
    },
    {
        "line": 128,
        "fullcodeline": "sps->width = mb_width * 16;"
    },
    {
        "line": 129,
        "fullcodeline": "sps->height = (2 - sps->frame_mbs_only_flag) * mb_height * 16;"
    },
    {
        "line": 132,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"direct_8x8_inference_flag\");"
    },
    {
        "line": 169,
        "fullcodeline": "sps->crop.left = cl;"
    },
    {
        "line": 170,
        "fullcodeline": "sps->crop.right = cr;"
    },
    {
        "line": 171,
        "fullcodeline": "sps->crop.top = ct;"
    },
    {
        "line": 172,
        "fullcodeline": "sps->crop.bottom = cb;"
    },
    {
        "line": 178,
        "fullcodeline": "sps->vui_parameters_present_flag = gf_bs_read_int_log(bs, 1, \"vui_parameters_present_flag\");"
    },
    {
        "line": 8,
        "fullcodeline": "if (!vui_flag_pos) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (!bs) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (!nal_hdr) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (pcomp & 0x3)"
    },
    {
        "line": 34,
        "fullcodeline": "if (sps_id >= 32) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (sps_id < 0) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (sps->poc_type == 0) {"
    },
    {
        "line": 118,
        "fullcodeline": "if (sps->poc_type > 2) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (!sps->frame_mbs_only_flag) sps->mb_adaptive_frame_field_flag = gf_bs_read_int_log(bs, 1, \"mb_adaptive_frame_field_flag\");"
    },
    {
        "line": 134,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"frame_cropping_flag\")) {"
    },
    {
        "line": 9,
        "fullcodeline": "gf_bs_enable_emulation_byte_removal(bs, GF_TRUE);"
    },
    {
        "line": 17,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"forbidden_zero_bit\");"
    },
    {
        "line": 18,
        "fullcodeline": "gf_bs_read_int_log(bs, 2, \"nal_ref_idc\");"
    },
    {
        "line": 19,
        "fullcodeline": "gf_bs_read_int_log(bs, 5, \"nal_unit_type\");"
    },
    {
        "line": 60,
        "fullcodeline": "chroma_format_idc = gf_bs_read_ue_log(bs, \"chroma_format_idc\");"
    },
    {
        "line": 61,
        "fullcodeline": "sps->ChromaArrayType = chroma_format_idc;"
    },
    {
        "line": 71,
        "fullcodeline": "luma_bd = gf_bs_read_ue_log(bs, \"luma_bit_depth\");"
    },
    {
        "line": 72,
        "fullcodeline": "chroma_bd = gf_bs_read_ue_log(bs, \"chroma_bit_depth\");"
    },
    {
        "line": 73,
        "fullcodeline": "/*qpprime_y_zero_transform_bypass_flag = */ gf_bs_read_int_log(bs, 1, \"qpprime_y_zero_transform_bypass_flag\");"
    },
    {
        "line": 104,
        "fullcodeline": "sps->log2_max_poc_lsb = gf_bs_read_ue_log(bs, \"log2_max_poc_lsb\") + 4;"
    },
    {
        "line": 135,
        "fullcodeline": "int CropUnitX, CropUnitY, SubWidthC = -1, SubHeightC = -1;"
    },
    {
        "line": 157,
        "fullcodeline": "cl = gf_bs_read_ue_log(bs, \"frame_crop_left_offset\");"
    },
    {
        "line": 158,
        "fullcodeline": "cr = gf_bs_read_ue_log(bs, \"frame_crop_right_offset\");"
    },
    {
        "line": 159,
        "fullcodeline": "ct = gf_bs_read_ue_log(bs, \"frame_crop_top_offset\");"
    },
    {
        "line": 160,
        "fullcodeline": "cb = gf_bs_read_ue_log(bs, \"frame_crop_bottom_offset\");"
    },
    {
        "line": 162,
        "fullcodeline": "sps->width -= CropUnitX * (cl + cr);"
    },
    {
        "line": 163,
        "fullcodeline": "sps->height -= CropUnitY * (ct + cb);"
    },
    {
        "line": 164,
        "fullcodeline": "cl *= CropUnitX;"
    },
    {
        "line": 165,
        "fullcodeline": "cr *= CropUnitX;"
    },
    {
        "line": 166,
        "fullcodeline": "ct *= CropUnitY;"
    },
    {
        "line": 167,
        "fullcodeline": "cb *= CropUnitY;"
    },
    {
        "line": 175,
        "fullcodeline": "*vui_flag_pos = (u32)gf_bs_get_bit_offset(bs);"
    },
    {
        "line": 180,
        "fullcodeline": "sps->vui.aspect_ratio_info_present_flag = gf_bs_read_int_log(bs, 1, \"aspect_ratio_info_present_flag\");"
    },
    {
        "line": 195,
        "fullcodeline": "sps->vui.overscan_info_present_flag = gf_bs_read_int_log(bs, 1, \"overscan_info_present_flag\");"
    },
    {
        "line": 200,
        "fullcodeline": "sps->vui.video_format = 5;"
    },
    {
        "line": 201,
        "fullcodeline": "sps->vui.colour_primaries = 2;"
    },
    {
        "line": 202,
        "fullcodeline": "sps->vui.transfer_characteristics = 2;"
    },
    {
        "line": 203,
        "fullcodeline": "sps->vui.matrix_coefficients = 2;"
    },
    {
        "line": 205,
        "fullcodeline": "sps->vui.video_signal_type_present_flag = gf_bs_read_int_log(bs, 1, \"video_signal_type_present_flag\");"
    },
    {
        "line": 222,
        "fullcodeline": "sps->vui.timing_info_present_flag = gf_bs_read_int_log(bs, 1, \"timing_info_present_flag\");"
    },
    {
        "line": 229,
        "fullcodeline": "sps->vui.nal_hrd_parameters_present_flag = gf_bs_read_int_log(bs, 1, \"nal_hrd_parameters_present_flag\");"
    },
    {
        "line": 233,
        "fullcodeline": "sps->vui.vcl_hrd_parameters_present_flag = gf_bs_read_int_log(bs, 1, \"vcl_hrd_parameters_present_flag\");"
    },
    {
        "line": 240,
        "fullcodeline": "sps->vui.pic_struct_present_flag = gf_bs_read_int_log(bs, 1, \"pic_struct_present_flag\");"
    },
    {
        "line": 13,
        "fullcodeline": "return -1;"
    },
    {
        "line": 26,
        "fullcodeline": "return -1;"
    },
    {
        "line": 35,
        "fullcodeline": "return -1;"
    },
    {
        "line": 38,
        "fullcodeline": "return -1;"
    },
    {
        "line": 54,
        "fullcodeline": "if (pcomp & 0xE0)"
    },
    {
        "line": 62,
        "fullcodeline": "if (chroma_format_idc == 3) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"seq_scaling_matrix_present_flag\")) {"
    },
    {
        "line": 119,
        "fullcodeline": "return -1;"
    },
    {
        "line": 137,
        "fullcodeline": "if (chroma_format_idc == 1) {"
    },
    {
        "line": 147,
        "fullcodeline": "if (sps->ChromaArrayType == 0) {"
    },
    {
        "line": 217,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"chroma_location_info_present_flag\")) {"
    },
    {
        "line": 237,
        "fullcodeline": "if (sps->vui.nal_hrd_parameters_present_flag || sps->vui.vcl_hrd_parameters_present_flag)"
    },
    {
        "line": 245,
        "fullcodeline": "if ((profile_idc == 83) || (profile_idc == 86)) {"
    },
    {
        "line": 306,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"additional_extension2\")) {"
    },
    {
        "line": 63,
        "fullcodeline": "separate_colour_plane_flag = gf_bs_read_int_log(bs, 1, \"separate_colour_plane_flag\");"
    },
    {
        "line": 106,
        "fullcodeline": "else if (sps->poc_type == 1) {"
    },
    {
        "line": 138,
        "fullcodeline": "SubWidthC = 2; SubHeightC = 2;"
    },
    {
        "line": 148,
        "fullcodeline": "assert(SubWidthC == -1);"
    },
    {
        "line": 149,
        "fullcodeline": "CropUnitX = 1;"
    },
    {
        "line": 150,
        "fullcodeline": "CropUnitY = 2 - sps->frame_mbs_only_flag;"
    },
    {
        "line": 182,
        "fullcodeline": "s32 aspect_ratio_idc = gf_bs_read_int_log(bs, 8, \"aspect_ratio_idc\");"
    },
    {
        "line": 197,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"overscan_appropriate_flag\");"
    },
    {
        "line": 207,
        "fullcodeline": "sps->vui.video_format = gf_bs_read_int_log(bs, 3, \"video_format\");"
    },
    {
        "line": 208,
        "fullcodeline": "sps->vui.video_full_range_flag = gf_bs_read_int_log(bs, 1, \"video_full_range_flag\");"
    },
    {
        "line": 209,
        "fullcodeline": "sps->vui.colour_description_present_flag = gf_bs_read_int_log(bs, 1, \"colour_description_present_flag\");"
    },
    {
        "line": 218,
        "fullcodeline": "gf_bs_read_ue_log(bs, \"chroma_sample_location_type_top_field\");"
    },
    {
        "line": 219,
        "fullcodeline": "gf_bs_read_ue_log(bs, \"chroma_sample_location_type_bottom_field\");"
    },
    {
        "line": 224,
        "fullcodeline": "sps->vui.num_units_in_tick = gf_bs_read_int_log(bs, 32, \"num_units_in_tick\");"
    },
    {
        "line": 225,
        "fullcodeline": "sps->vui.time_scale = gf_bs_read_int_log(bs, 32, \"time_scale\");"
    },
    {
        "line": 226,
        "fullcodeline": "sps->vui.fixed_frame_rate_flag = gf_bs_read_int_log(bs, 1, \"fixed_frame_rate_flag\");"
    },
    {
        "line": 231,
        "fullcodeline": "avc_parse_hrd_parameters(bs, &sps->vui.hrd);"
    },
    {
        "line": 235,
        "fullcodeline": "avc_parse_hrd_parameters(bs, &sps->vui.hrd);"
    },
    {
        "line": 238,
        "fullcodeline": "sps->vui.low_delay_hrd_flag = gf_bs_read_int_log(bs, 1, \"low_delay_hrd_flag\");"
    },
    {
        "line": 249,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"inter_layer_deblocking_filter_control_present_flag\");"
    },
    {
        "line": 250,
        "fullcodeline": "extended_spatial_scalability_idc = gf_bs_read_int_log(bs, 2, \"extended_spatial_scalability_idc\");"
    },
    {
        "line": 270,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"slice_header_restriction_flag\");"
    },
    {
        "line": 307,
        "fullcodeline": "GF_LOG(GF_LOG_WARNING, GF_LOG_CODING, (\"[avc-h264] skipping parsing end of Subset SPS (additional_extension2)\\n\"));"
    },
    {
        "line": 55,
        "fullcodeline": "return -1;"
    },
    {
        "line": 77,
        "fullcodeline": "for (k = 0; k < 8; k++) {"
    },
    {
        "line": 107,
        "fullcodeline": "sps->delta_pic_order_always_zero_flag = gf_bs_read_int_log(bs, 1, \"delta_pic_order_always_zero_flag\");"
    },
    {
        "line": 108,
        "fullcodeline": "sps->offset_for_non_ref_pic = gf_bs_read_se_log(bs, \"offset_for_non_ref_pic\");"
    },
    {
        "line": 109,
        "fullcodeline": "sps->offset_for_top_to_bottom_field = gf_bs_read_se_log(bs, \"offset_for_top_to_bottom_field\");"
    },
    {
        "line": 110,
        "fullcodeline": "sps->poc_cycle_length = gf_bs_read_ue_log(bs, \"poc_cycle_length\");"
    },
    {
        "line": 153,
        "fullcodeline": "CropUnitX = SubWidthC;"
    },
    {
        "line": 154,
        "fullcodeline": "CropUnitY = SubHeightC * (2 - sps->frame_mbs_only_flag);"
    },
    {
        "line": 183,
        "fullcodeline": "if (aspect_ratio_idc == 255) {"
    },
    {
        "line": 251,
        "fullcodeline": "if (sps->ChromaArrayType == 1 || sps->ChromaArrayType == 2) {"
    },
    {
        "line": 254,
        "fullcodeline": "if (sps->ChromaArrayType == 1) {"
    },
    {
        "line": 257,
        "fullcodeline": "if (extended_spatial_scalability_idc == 1) {"
    },
    {
        "line": 267,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"seq_tcoeff_level_prediction_flag\")) {"
    },
    {
        "line": 272,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"svc_vui_parameters_present\")) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (separate_colour_plane_flag) sps->ChromaArrayType = 0;"
    },
    {
        "line": 111,
        "fullcodeline": "if (sps->poc_cycle_length > GF_ARRAY_LENGTH(sps->offset_for_ref_frame)) {"
    },
    {
        "line": 115,
        "fullcodeline": "for (i = 0; i < sps->poc_cycle_length; i++)"
    },
    {
        "line": 116,
        "fullcodeline": "sps->offset_for_ref_frame[i] = gf_bs_read_se_log_idx(bs, \"offset_for_ref_frame\", i);"
    },
    {
        "line": 140,
        "fullcodeline": "else if (chroma_format_idc == 2) {"
    },
    {
        "line": 184,
        "fullcodeline": "sps->vui.par_num = gf_bs_read_int_log(bs, 16, \"aspect_ratio_num\");"
    },
    {
        "line": 185,
        "fullcodeline": "sps->vui.par_den = gf_bs_read_int_log(bs, 16, \"aspect_ratio_den\");"
    },
    {
        "line": 211,
        "fullcodeline": "sps->vui.colour_primaries = gf_bs_read_int_log(bs, 8, \"colour_primaries\");"
    },
    {
        "line": 212,
        "fullcodeline": "sps->vui.transfer_characteristics = gf_bs_read_int_log(bs, 8, \"transfer_characteristics\");"
    },
    {
        "line": 213,
        "fullcodeline": "sps->vui.matrix_coefficients = gf_bs_read_int_log(bs, 8, \"matrix_coefficients\");"
    },
    {
        "line": 252,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"chroma_phase_x_plus1_flag\");"
    },
    {
        "line": 255,
        "fullcodeline": "gf_bs_read_int_log(bs, 2, \"chroma_phase_y_plus1\");"
    },
    {
        "line": 262,
        "fullcodeline": "gf_bs_read_se_log(bs, \"seq_scaled_ref_layer_left_offset\");"
    },
    {
        "line": 263,
        "fullcodeline": "gf_bs_read_se_log(bs, \"seq_scaled_ref_layer_top_offset\");"
    },
    {
        "line": 264,
        "fullcodeline": "gf_bs_read_se_log(bs, \"seq_scaled_ref_layer_right_offset\");"
    },
    {
        "line": 265,
        "fullcodeline": "gf_bs_read_se_log(bs, \"seq_scaled_ref_layer_bottom_offset\");"
    },
    {
        "line": 268,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"adaptive_tcoeff_level_prediction_flag\");"
    },
    {
        "line": 273,
        "fullcodeline": "u32 vui_ext_num_entries_minus1 = gf_bs_read_ue_log(bs, \"vui_ext_num_entries_minus1\");"
    },
    {
        "line": 301,
        "fullcodeline": "else if ((profile_idc == 118) || (profile_idc == 128)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (gf_bs_read_int_log_idx(bs, 1, \"seq_scaling_list_present_flag\", k)) {"
    },
    {
        "line": 112,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[avc-h264] offset_for_ref_frame overflow from poc_cycle_length\\n\"));"
    },
    {
        "line": 141,
        "fullcodeline": "SubWidthC = 2; SubHeightC = 1;"
    },
    {
        "line": 258,
        "fullcodeline": "if (sps->ChromaArrayType > 0) {"
    },
    {
        "line": 275,
        "fullcodeline": "for (i = 0; i <= vui_ext_num_entries_minus1; i++) {"
    },
    {
        "line": 302,
        "fullcodeline": "GF_LOG(GF_LOG_INFO, GF_LOG_CODING, (\"[avc-h264] MVC parsing not implemented - skipping parsing end of Subset SPS\\n\"));"
    },
    {
        "line": 79,
        "fullcodeline": "u32 z, last = 8, next = 8;"
    },
    {
        "line": 80,
        "fullcodeline": "u32 sl = k < 6 ? 16 : 64;"
    },
    {
        "line": 113,
        "fullcodeline": "return -1;"
    },
    {
        "line": 187,
        "fullcodeline": "else if (aspect_ratio_idc < GF_ARRAY_LENGTH(avc_hevc_sar) ) {"
    },
    {
        "line": 259,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"seq_ref_layer_chroma_phase_x_plus1_flag\");"
    },
    {
        "line": 260,
        "fullcodeline": "gf_bs_read_int_log(bs, 2, \"seq_ref_layer_chroma_phase_y_plus1\");"
    },
    {
        "line": 277,
        "fullcodeline": "gf_bs_read_int_log(bs, 3, \"vui_ext_dependency_id\");"
    },
    {
        "line": 278,
        "fullcodeline": "gf_bs_read_int_log(bs, 4, \"vui_ext_quality_id\");"
    },
    {
        "line": 279,
        "fullcodeline": "gf_bs_read_int_log(bs, 3, \"vui_ext_temporal_id\");"
    },
    {
        "line": 280,
        "fullcodeline": "vui_ext_timing_info_present_flag = gf_bs_read_int_log(bs, 1, \"vui_ext_timing_info_present_flag\");"
    },
    {
        "line": 286,
        "fullcodeline": "vui_ext_nal_hrd_parameters_present_flag = gf_bs_read_int_log(bs, 1, \"vui_ext_nal_hrd_parameters_present_flag\");"
    },
    {
        "line": 290,
        "fullcodeline": "vui_ext_vcl_hrd_parameters_present_flag = gf_bs_read_int_log(bs, 1, \"vui_ext_vcl_hrd_parameters_present_flag\");"
    },
    {
        "line": 297,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"vui_ext_pic_struct_present_flag\");"
    },
    {
        "line": 81,
        "fullcodeline": "for (z = 0; z < sl; z++) {"
    },
    {
        "line": 143,
        "fullcodeline": "else if ((chroma_format_idc == 3) && (separate_colour_plane_flag == 0)) {"
    },
    {
        "line": 294,
        "fullcodeline": "if (vui_ext_nal_hrd_parameters_present_flag || vui_ext_vcl_hrd_parameters_present_flag) {"
    },
    {
        "line": 86,
        "fullcodeline": "last = next ? next : last;"
    },
    {
        "line": 144,
        "fullcodeline": "SubWidthC = 1; SubHeightC = 1;"
    },
    {
        "line": 192,
        "fullcodeline": "GF_LOG(GF_LOG_WARNING, GF_LOG_CODING, (\"[avc-h264] Unknown aspect_ratio_idc: your video may have a wrong aspect ratio. Contact the GPAC team!\\n\"));"
    },
    {
        "line": 282,
        "fullcodeline": "gf_bs_read_int_log(bs, 32, \"vui_ext_num_units_in_tick\");"
    },
    {
        "line": 283,
        "fullcodeline": "gf_bs_read_int_log(bs, 32, \"vui_ext_time_scale\");"
    },
    {
        "line": 284,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"vui_ext_fixed_frame_rate_flag\");"
    },
    {
        "line": 295,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"vui_ext_low_delay_hrd_flag\");"
    },
    {
        "line": 83,
        "fullcodeline": "s32 delta = gf_bs_read_se(bs);"
    },
    {
        "line": 84,
        "fullcodeline": "next = (last + delta + 256) % 256;"
    }
]