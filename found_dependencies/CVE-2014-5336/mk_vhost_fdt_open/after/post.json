[
    {
        "line": 6,
        "fullcodeline": "struct vhost_fdt_hash_table *ht = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "ht = mk_vhost_fdt_table_lookup(id, sr->host_conf);"
    },
    {
        "line": 19,
        "fullcodeline": "hc = mk_vhost_fdt_chain_lookup(hash, ht);"
    },
    {
        "line": 31,
        "fullcodeline": "fd = open(sr->real_path.data, sr->file_info.flags_read_only);"
    },
    {
        "line": 9,
        "fullcodeline": "if (config->fdt == MK_FALSE) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (mk_unlikely(!ht)) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (fd == -1) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (ht->av_slots <= 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "for (i = 0; i < VHOST_FDT_HASHTABLE_CHAINS; i++) {"
    },
    {
        "line": 58,
        "fullcodeline": "return -1;"
    },
    {
        "line": 22,
        "fullcodeline": "hc->readers++;"
    },
    {
        "line": 33,
        "fullcodeline": "return -1;"
    },
    {
        "line": 44,
        "fullcodeline": "if (hc->fd == -1) {"
    },
    {
        "line": 45,
        "fullcodeline": "hc->fd   = fd;"
    },
    {
        "line": 46,
        "fullcodeline": "hc->hash = hash;"
    },
    {
        "line": 47,
        "fullcodeline": "hc->readers++;"
    },
    {
        "line": 48,
        "fullcodeline": "ht->av_slots--;"
    },
    {
        "line": 50,
        "fullcodeline": "sr->vhost_fdt_id   = id;"
    },
    {
        "line": 51,
        "fullcodeline": "sr->vhost_fdt_hash = hash;"
    },
    {
        "line": 52,
        "fullcodeline": "sr->fd_is_fdt      = MK_TRUE;"
    }
]