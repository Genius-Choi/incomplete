[
    {
        "line": 3,
        "fullcodeline": "int bugs = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "if (!inifile.isDirty())"
    },
    {
        "line": 64,
        "fullcodeline": "return bugs ? -1 : 0;"
    },
    {
        "line": 6,
        "fullcodeline": "y2debug (\"File %s did not change. Not saving.\", multiple_files ? files[0].c_str () : file.c_str ());"
    },
    {
        "line": 19,
        "fullcodeline": "ci = inifile.getContainerBegin (),"
    },
    {
        "line": 20,
        "fullcodeline": "ce = inifile.getContainerEnd ();"
    },
    {
        "line": 22,
        "fullcodeline": "for (;ci != ce; ++ci)"
    },
    {
        "line": 53,
        "fullcodeline": "for (set<string>::iterator i = deleted_sections.begin (); i!=deleted_sections.end();i++)"
    },
    {
        "line": 62,
        "fullcodeline": "timestamp = getTimeStamp ();"
    },
    {
        "line": 11,
        "fullcodeline": "y2debug (\"Attempt to write file %s that was mounted read-only. Not saving.\", multiple_files ? files[0].c_str () : file.c_str ());"
    },
    {
        "line": 61,
        "fullcodeline": "bugs += write_file(file, inifile);"
    },
    {
        "line": 24,
        "fullcodeline": "if (ci->t () == SECTION)"
    },
    {
        "line": 54,
        "fullcodeline": "if (multi_files.find (*i) != multi_files.end ()) {"
    },
    {
        "line": 26,
        "fullcodeline": "IniSection&s = ci->s ();"
    },
    {
        "line": 27,
        "fullcodeline": "int wb = s.getRewriteBy (); // bug #19066"
    },
    {
        "line": 28,
        "fullcodeline": "string filename = getFileName (s.getName (), wb);"
    },
    {
        "line": 34,
        "fullcodeline": "deleted_sections.erase (filename);"
    },
    {
        "line": 40,
        "fullcodeline": "s.initReadBy ();"
    },
    {
        "line": 55,
        "fullcodeline": "y2debug (\"Removing file %s\\n\", (*i).c_str());"
    },
    {
        "line": 56,
        "fullcodeline": "unlink ((*i).c_str());"
    },
    {
        "line": 41,
        "fullcodeline": "bugs += write_file(filename, s);"
    },
    {
        "line": 36,
        "fullcodeline": "if (!s.isDirty ()) {"
    },
    {
        "line": 46,
        "fullcodeline": "ci->e ().getName ());"
    },
    {
        "line": 37,
        "fullcodeline": "y2debug (\"Skipping file %s that was not changed.\", filename.c_str());"
    }
]