[
    {
        "line": 11,
        "fullcodeline": "percent_encodings = len(normalizers.PERCENT_MATCHER.findall("
    },
    {
        "line": 14,
        "fullcodeline": "uri_bytes = component.encode('utf-8', 'surrogatepass')"
    },
    {
        "line": 15,
        "fullcodeline": "is_percent_encoded = percent_encodings == uri_bytes.count(b'%')"
    },
    {
        "line": 17,
        "fullcodeline": "encoded_component = bytearray()"
    },
    {
        "line": 6,
        "fullcodeline": "if component is None:"
    },
    {
        "line": 19,
        "fullcodeline": "for i in range(0, len(uri_bytes)):"
    },
    {
        "line": 29,
        "fullcodeline": "return encoded_component.decode(encoding)"
    },
    {
        "line": 21,
        "fullcodeline": "byte = uri_bytes[i:i+1]"
    },
    {
        "line": 22,
        "fullcodeline": "byte_ord = ord(byte)"
    },
    {
        "line": 27,
        "fullcodeline": "encoded_component.extend('%{0:02x}'.format(byte_ord).encode().upper())"
    },
    {
        "line": 12,
        "fullcodeline": "compat.to_str(component, encoding)))"
    },
    {
        "line": 23,
        "fullcodeline": "if ((is_percent_encoded and byte == b'%')"
    },
    {
        "line": 24,
        "fullcodeline": "or (byte_ord < 128 and byte.decode() in allowed_chars)):"
    },
    {
        "line": 25,
        "fullcodeline": "encoded_component.extend(byte)"
    }
]