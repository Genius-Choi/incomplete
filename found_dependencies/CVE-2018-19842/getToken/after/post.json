[
    {
        "line": 2,
        "fullcodeline": "if (*begin > strlen (str)) {"
    },
    {
        "line": 6,
        "fullcodeline": "while (begin && str[*begin] && isspace ((ut8)str[*begin])) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (!str[*begin]) {                // null byte"
    },
    {
        "line": 14,
        "fullcodeline": "if (isalpha ((ut8)str[*begin])) {   // word token"
    },
    {
        "line": 21,
        "fullcodeline": "if (isdigit ((ut8)str[*begin])) {   // number token"
    },
    {
        "line": 7,
        "fullcodeline": "++(*begin);"
    },
    {
        "line": 11,
        "fullcodeline": "*end = *begin;"
    },
    {
        "line": 15,
        "fullcodeline": "*end = *begin;"
    },
    {
        "line": 22,
        "fullcodeline": "*end = *begin;"
    },
    {
        "line": 16,
        "fullcodeline": "while (end && str[*end] && isalnum ((ut8)str[*end])) {"
    },
    {
        "line": 23,
        "fullcodeline": "while (end && isalnum ((ut8)str[*end])) {     // accept alphanumeric characters, because hex."
    },
    {
        "line": 28,
        "fullcodeline": "*end = *begin + 1;"
    },
    {
        "line": 17,
        "fullcodeline": "++(*end);"
    },
    {
        "line": 24,
        "fullcodeline": "++(*end);"
    }
]