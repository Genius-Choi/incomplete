[
    {
        "line": 3,
        "fullcodeline": "while (begin && isspace ((ut8)str[*begin])) {"
    },
    {
        "line": 7,
        "fullcodeline": "if (!str[*begin]) {                // null byte"
    },
    {
        "line": 10,
        "fullcodeline": "} else if (isalpha ((ut8)str[*begin])) {   // word token"
    },
    {
        "line": 12,
        "fullcodeline": "while (end && isalnum ((ut8)str[*end])) {"
    },
    {
        "line": 13,
        "fullcodeline": "++(*end);"
    },
    {
        "line": 16,
        "fullcodeline": "} else if (isdigit ((ut8)str[*begin])) {   // number token"
    },
    {
        "line": 18,
        "fullcodeline": "while (end && isalnum ((ut8)str[*end])) {     // accept alphanumeric characters, because hex."
    },
    {
        "line": 23,
        "fullcodeline": "*end = *begin + 1;"
    },
    {
        "line": 19,
        "fullcodeline": "++(*end);"
    }
]