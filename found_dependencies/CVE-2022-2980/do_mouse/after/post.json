[
    {
        "line": 8,
        "fullcodeline": "static int\tdo_always = FALSE;\t// ignore 'mouse' setting next time"
    },
    {
        "line": 9,
        "fullcodeline": "static int\tgot_click = FALSE;\t// got a click some time back"
    },
    {
        "line": 12,
        "fullcodeline": "int\t\tis_click = FALSE; // If FALSE it's a drag or release event"
    },
    {
        "line": 13,
        "fullcodeline": "int\t\tis_drag = FALSE;  // If TRUE it's a drag event"
    },
    {
        "line": 14,
        "fullcodeline": "int\t\tjump_flags = 0;\t// flags for jump_to_mouse()"
    },
    {
        "line": 18,
        "fullcodeline": "static int\tin_tab_line = FALSE; // mouse clicked in tab line"
    },
    {
        "line": 24,
        "fullcodeline": "win_T\t*old_curwin = curwin;"
    },
    {
        "line": 29,
        "fullcodeline": "int\t\told_active = VIsual_active;"
    },
    {
        "line": 30,
        "fullcodeline": "int\t\told_mode = VIsual_mode;"
    },
    {
        "line": 254,
        "fullcodeline": "start_visual.lnum = 0;"
    },
    {
        "line": 484,
        "fullcodeline": "jump_flags = jump_to_mouse(jump_flags,"
    },
    {
        "line": 492,
        "fullcodeline": "moved = (jump_flags & CURSOR_MOVED);"
    },
    {
        "line": 493,
        "fullcodeline": "in_status_line = (jump_flags & IN_STATUS_LINE);"
    },
    {
        "line": 494,
        "fullcodeline": "in_sep_line = (jump_flags & IN_SEP_LINE);"
    },
    {
        "line": 87,
        "fullcodeline": "if (c == K_MOUSEMOVE)"
    },
    {
        "line": 138,
        "fullcodeline": "if (is_click && (mod_mask & MOD_MASK_CTRL) && which_button == MOUSE_RIGHT)"
    },
    {
        "line": 150,
        "fullcodeline": "if ((mod_mask & MOD_MASK_CTRL) && which_button != MOUSE_LEFT)"
    },
    {
        "line": 156,
        "fullcodeline": "if ((mod_mask & (MOD_MASK_SHIFT | MOD_MASK_CTRL | MOD_MASK_ALT"
    },
    {
        "line": 173,
        "fullcodeline": "if (!is_click && which_button == MOUSE_MIDDLE)"
    },
    {
        "line": 176,
        "fullcodeline": "if (oap != NULL)"
    },
    {
        "line": 182,
        "fullcodeline": "if (which_button == MOUSE_MIDDLE)"
    },
    {
        "line": 251,
        "fullcodeline": "if (!is_click)"
    },
    {
        "line": 256,
        "fullcodeline": "if (TabPageIdxs != NULL)  // only when initialized"
    },
    {
        "line": 333,
        "fullcodeline": "if (mouse_model_popup())"
    },
    {
        "line": 433,
        "fullcodeline": "if ((State & (MODE_NORMAL | MODE_INSERT))"
    },
    {
        "line": 473,
        "fullcodeline": "if (!is_drag && oap != NULL && oap->op_type != OP_NOP)"
    },
    {
        "line": 480,
        "fullcodeline": "if (!is_click && !is_drag)"
    },
    {
        "line": 510,
        "fullcodeline": "if (curwin != old_curwin && oap != NULL && oap->op_type != OP_NOP)"
    },
    {
        "line": 540,
        "fullcodeline": "if (VIsual_active && is_drag && get_scrolloff_value())"
    },
    {
        "line": 550,
        "fullcodeline": "if (is_drag && mouse_row < 0 && !in_status_line)"
    },
    {
        "line": 630,
        "fullcodeline": "if (which_button == MOUSE_MIDDLE)"
    },
    {
        "line": 826,
        "fullcodeline": "if ((!VIsual_active && old_active && mode_displayed)"
    },
    {
        "line": 43,
        "fullcodeline": "do_always = FALSE;"
    },
    {
        "line": 60,
        "fullcodeline": "which_button = get_mouse_button(KEY2TERMCAP1(c), &is_click, &is_drag);"
    },
    {
        "line": 121,
        "fullcodeline": "got_click = TRUE;"
    },
    {
        "line": 144,
        "fullcodeline": "stuffcharReadbuff(Ctrl_T);"
    },
    {
        "line": 145,
        "fullcodeline": "got_click = FALSE;\t\t// ignore drag&release now"
    },
    {
        "line": 164,
        "fullcodeline": "&& !((mod_mask & MOD_MASK_ALT)"
    },
    {
        "line": 177,
        "fullcodeline": "regname = oap->regname;"
    },
    {
        "line": 252,
        "fullcodeline": "jump_flags |= MOUSE_FOCUS | MOUSE_DID_MOVE;"
    },
    {
        "line": 434,
        "fullcodeline": "&& !(mod_mask & (MOD_MASK_SHIFT | MOD_MASK_CTRL)))"
    },
    {
        "line": 475,
        "fullcodeline": "got_click = FALSE;"
    },
    {
        "line": 476,
        "fullcodeline": "oap->motion_type = MCHAR;"
    },
    {
        "line": 481,
        "fullcodeline": "jump_flags |= MOUSE_RELEASED;"
    },
    {
        "line": 485,
        "fullcodeline": "oap == NULL ? NULL : &(oap->inclusive), which_button);"
    },
    {
        "line": 511,
        "fullcodeline": "clearop(oap);"
    },
    {
        "line": 552,
        "fullcodeline": "scroll_redraw(FALSE, 1L);"
    },
    {
        "line": 553,
        "fullcodeline": "mouse_row = 0;"
    },
    {
        "line": 654,
        "fullcodeline": "prep_redo(regname, count, NUL, c1, NUL, c2, NUL);"
    },
    {
        "line": 660,
        "fullcodeline": "do_put(regname, NULL, dir, count, fixindent | PUT_CURSEND);"
    },
    {
        "line": 827,
        "fullcodeline": "|| (VIsual_active && p_smd && msg_silent == 0"
    },
    {
        "line": 829,
        "fullcodeline": "redraw_cmdline = TRUE;"
    },
    {
        "line": 140,
        "fullcodeline": "if (State & MODE_INSERT)"
    },
    {
        "line": 142,
        "fullcodeline": "if (count > 1)"
    },
    {
        "line": 161,
        "fullcodeline": "&& !((mod_mask & (MOD_MASK_SHIFT|MOD_MASK_ALT))"
    },
    {
        "line": 179,
        "fullcodeline": "regname = 0;"
    },
    {
        "line": 184,
        "fullcodeline": "if (State == MODE_NORMAL)"
    },
    {
        "line": 223,
        "fullcodeline": "if ((State & MODE_INSERT) || !mouse_has(MOUSE_NORMAL))"
    },
    {
        "line": 259,
        "fullcodeline": "if (mouse_row == 0 && firstwin->w_winrow > 0)"
    },
    {
        "line": 335,
        "fullcodeline": "if (which_button == MOUSE_RIGHT"
    },
    {
        "line": 425,
        "fullcodeline": "if (which_button == MOUSE_LEFT"
    },
    {
        "line": 436,
        "fullcodeline": "if (which_button == MOUSE_LEFT)"
    },
    {
        "line": 543,
        "fullcodeline": "if (mouse_row == 0)"
    },
    {
        "line": 559,
        "fullcodeline": "if (mod_mask & MOD_MASK_ALT)"
    },
    {
        "line": 564,
        "fullcodeline": "if (VIsual_mode == Ctrl_V)"
    },
    {
        "line": 636,
        "fullcodeline": "if (yank_register_mline(regname))"
    },
    {
        "line": 658,
        "fullcodeline": "if (restart_edit != 0)"
    },
    {
        "line": 828,
        "fullcodeline": "&& (!old_active || VIsual_mode != old_mode)))"
    },
    {
        "line": 124,
        "fullcodeline": "if (!got_click)\t\t\t// didn't get click, ignore"
    },
    {
        "line": 126,
        "fullcodeline": "if (!is_drag)\t\t\t// release, reset got_click"
    },
    {
        "line": 141,
        "fullcodeline": "stuffcharReadbuff(Ctrl_O);"
    },
    {
        "line": 143,
        "fullcodeline": "stuffnumReadbuff(count);"
    },
    {
        "line": 158,
        "fullcodeline": "&& (!is_click"
    },
    {
        "line": 166,
        "fullcodeline": "&& which_button == MOUSE_RIGHT)"
    },
    {
        "line": 336,
        "fullcodeline": "&& !(mod_mask & (MOD_MASK_SHIFT | MOD_MASK_CTRL)))"
    },
    {
        "line": 426,
        "fullcodeline": "&& (mod_mask & (MOD_MASK_SHIFT|MOD_MASK_ALT)))"
    },
    {
        "line": 428,
        "fullcodeline": "which_button = MOUSE_RIGHT;"
    },
    {
        "line": 429,
        "fullcodeline": "mod_mask &= ~MOD_MASK_SHIFT;"
    },
    {
        "line": 544,
        "fullcodeline": "mouse_dragging = 2;"
    },
    {
        "line": 560,
        "fullcodeline": "VIsual_mode = Ctrl_V;"
    },
    {
        "line": 566,
        "fullcodeline": "getvcols(curwin, &start_visual, &end_visual, &leftcol, &rightcol);"
    },
    {
        "line": 576,
        "fullcodeline": "start_visual = curwin->w_cursor;\t    // save the cursor pos"
    },
    {
        "line": 577,
        "fullcodeline": "curwin->w_cursor = end_visual;"
    },
    {
        "line": 578,
        "fullcodeline": "coladvance(end_visual.col);"
    },
    {
        "line": 579,
        "fullcodeline": "VIsual = curwin->w_cursor;"
    },
    {
        "line": 580,
        "fullcodeline": "curwin->w_cursor = start_visual;\t    // restore the cursor"
    },
    {
        "line": 626,
        "fullcodeline": "else if ((State & MODE_INSERT) && VIsual_active)"
    },
    {
        "line": 646,
        "fullcodeline": "c1 = (dir == BACKWARD) ? '[' : ']';"
    },
    {
        "line": 647,
        "fullcodeline": "c2 = 'p';"
    },
    {
        "line": 659,
        "fullcodeline": "where_paste_started = curwin->w_cursor;"
    },
    {
        "line": 680,
        "fullcodeline": "else if ((mod_mask & MOD_MASK_CTRL) || (curbuf->b_help"
    },
    {
        "line": 68,
        "fullcodeline": "if (!KeyStuffed && vpeekc() != NUL)"
    },
    {
        "line": 128,
        "fullcodeline": "got_click = FALSE;"
    },
    {
        "line": 160,
        "fullcodeline": "|| which_button == MOUSE_MIDDLE)"
    },
    {
        "line": 163,
        "fullcodeline": "&& which_button == MOUSE_LEFT)"
    },
    {
        "line": 165,
        "fullcodeline": "&& !mouse_model_popup()"
    },
    {
        "line": 188,
        "fullcodeline": "if (oap != NULL && oap->op_type != OP_NOP)"
    },
    {
        "line": 225,
        "fullcodeline": "if (regname == '.')"
    },
    {
        "line": 273,
        "fullcodeline": "if (is_click"
    },
    {
        "line": 546,
        "fullcodeline": "mouse_dragging = 1;"
    },
    {
        "line": 567,
        "fullcodeline": "if (curwin->w_curswant > (leftcol + rightcol) / 2)"
    },
    {
        "line": 571,
        "fullcodeline": "if (curwin->w_cursor.lnum >="
    },
    {
        "line": 627,
        "fullcodeline": "stuffcharReadbuff(Ctrl_O);"
    },
    {
        "line": 651,
        "fullcodeline": "c1 = (dir == FORWARD) ? 'p' : 'P';"
    },
    {
        "line": 652,
        "fullcodeline": "c2 = NUL;"
    },
    {
        "line": 685,
        "fullcodeline": "stuffcharReadbuff(Ctrl_RSB);"
    },
    {
        "line": 686,
        "fullcodeline": "got_click = FALSE;\t\t// ignore drag&release now"
    },
    {
        "line": 51,
        "fullcodeline": "if (!mouse_has(MOUSE_VISUAL))"
    },
    {
        "line": 71,
        "fullcodeline": "int save_mouse_row = mouse_row;"
    },
    {
        "line": 72,
        "fullcodeline": "int save_mouse_col = mouse_col;"
    },
    {
        "line": 76,
        "fullcodeline": "nc = safe_vgetc();"
    },
    {
        "line": 79,
        "fullcodeline": "vungetc(nc);"
    },
    {
        "line": 80,
        "fullcodeline": "mouse_row = save_mouse_row;"
    },
    {
        "line": 81,
        "fullcodeline": "mouse_col = save_mouse_col;"
    },
    {
        "line": 159,
        "fullcodeline": "|| (mod_mask & MOD_MASK_MULTI_CLICK)"
    },
    {
        "line": 190,
        "fullcodeline": "clearopbeep(oap);"
    },
    {
        "line": 209,
        "fullcodeline": "do_always = TRUE;\t// ignore 'mouse' setting next time"
    },
    {
        "line": 215,
        "fullcodeline": "else if ((State & MODE_INSERT) == 0)"
    },
    {
        "line": 226,
        "fullcodeline": "insert_reg(regname, TRUE);"
    },
    {
        "line": 277,
        "fullcodeline": "&& mouse_col < Columns)"
    },
    {
        "line": 279,
        "fullcodeline": "in_tab_line = TRUE;"
    },
    {
        "line": 280,
        "fullcodeline": "c1 = TabPageIdxs[mouse_col];"
    },
    {
        "line": 321,
        "fullcodeline": "else if (is_drag && in_tab_line)"
    },
    {
        "line": 448,
        "fullcodeline": "else if (which_button == MOUSE_RIGHT)"
    },
    {
        "line": 568,
        "fullcodeline": "end_visual.col = leftcol;"
    },
    {
        "line": 572,
        "fullcodeline": "(start_visual.lnum + end_visual.lnum) / 2)"
    },
    {
        "line": 573,
        "fullcodeline": "end_visual.lnum = start_visual.lnum;"
    },
    {
        "line": 587,
        "fullcodeline": "if (LT_POS(curwin->w_cursor, start_visual))"
    },
    {
        "line": 639,
        "fullcodeline": "dir = FORWARD;"
    },
    {
        "line": 681,
        "fullcodeline": "&& (mod_mask & MOD_MASK_MULTI_CLICK) == MOD_MASK_2CLICK))"
    },
    {
        "line": 683,
        "fullcodeline": "if (State & MODE_INSERT)"
    },
    {
        "line": 54,
        "fullcodeline": "else if (State == MODE_NORMAL && !mouse_has(MOUSE_NORMAL))"
    },
    {
        "line": 77,
        "fullcodeline": "if (c == nc)"
    },
    {
        "line": 131,
        "fullcodeline": "in_tab_line = FALSE;"
    },
    {
        "line": 281,
        "fullcodeline": "if (c1 >= 0)"
    },
    {
        "line": 323,
        "fullcodeline": "c1 = TabPageIdxs[mouse_col];"
    },
    {
        "line": 324,
        "fullcodeline": "tabpage_move(c1 <= 0 ? 9999 : c1 - 1);"
    },
    {
        "line": 465,
        "fullcodeline": "jump_flags |= MOUSE_FOCUS;"
    },
    {
        "line": 570,
        "fullcodeline": "end_visual.col = rightcol;"
    },
    {
        "line": 588,
        "fullcodeline": "VIsual = end_visual;"
    },
    {
        "line": 642,
        "fullcodeline": "dir = FORWARD;"
    },
    {
        "line": 684,
        "fullcodeline": "stuffcharReadbuff(Ctrl_O);"
    },
    {
        "line": 691,
        "fullcodeline": "else if ((mod_mask & MOD_MASK_SHIFT))"
    },
    {
        "line": 201,
        "fullcodeline": "stuffcharReadbuff(Ctrl_G);"
    },
    {
        "line": 202,
        "fullcodeline": "stuffReadbuff((char_u *)\"\\\"+p\");"
    },
    {
        "line": 233,
        "fullcodeline": "if ((State & REPLACE_FLAG) && !yank_register_mline(regname))"
    },
    {
        "line": 265,
        "fullcodeline": "c1 = TabPageIdxs[mouse_col];"
    },
    {
        "line": 266,
        "fullcodeline": "tabpage_move(c1 <= 0 ? 9999 : c1 < tabpage_index(curtab)"
    },
    {
        "line": 443,
        "fullcodeline": "jump_flags |= MOUSE_MAY_STOP_VIS;"
    },
    {
        "line": 445,
        "fullcodeline": "else if (mouse_has(MOUSE_VISUAL))"
    },
    {
        "line": 450,
        "fullcodeline": "if (is_click && VIsual_active)"
    },
    {
        "line": 466,
        "fullcodeline": "if (mouse_has(MOUSE_VISUAL))"
    },
    {
        "line": 206,
        "fullcodeline": "stuffcharReadbuff('y');"
    },
    {
        "line": 207,
        "fullcodeline": "stuffcharReadbuff(K_MIDDLEMOUSE);"
    },
    {
        "line": 234,
        "fullcodeline": "insert_reg(regname, TRUE);"
    },
    {
        "line": 283,
        "fullcodeline": "if ((mod_mask & MOD_MASK_MULTI_CLICK) == MOD_MASK_2CLICK)"
    },
    {
        "line": 446,
        "fullcodeline": "jump_flags |= MOUSE_MAY_VIS;"
    },
    {
        "line": 467,
        "fullcodeline": "jump_flags |= MOUSE_MAY_VIS;"
    },
    {
        "line": 589,
        "fullcodeline": "else if (LT_POS(end_visual, curwin->w_cursor))"
    },
    {
        "line": 693,
        "fullcodeline": "if ((State & MODE_INSERT) || (VIsual_active && VIsual_select))"
    },
    {
        "line": 695,
        "fullcodeline": "if (which_button == MOUSE_LEFT)"
    },
    {
        "line": 237,
        "fullcodeline": "do_put(regname, NULL, BACKWARD, 1L,"
    },
    {
        "line": 241,
        "fullcodeline": "AppendCharToRedobuff(Ctrl_R);"
    },
    {
        "line": 242,
        "fullcodeline": "AppendCharToRedobuff(fixindent ? Ctrl_P : Ctrl_O);"
    },
    {
        "line": 243,
        "fullcodeline": "AppendCharToRedobuff(regname == 0 ? '\"' : regname);"
    },
    {
        "line": 286,
        "fullcodeline": "end_visual_mode_keep_button();"
    },
    {
        "line": 287,
        "fullcodeline": "tabpage_new();"
    },
    {
        "line": 288,
        "fullcodeline": "tabpage_move(c1 == 0 ? 9999 : c1 - 1);"
    },
    {
        "line": 306,
        "fullcodeline": "if (c1 == -999)"
    },
    {
        "line": 310,
        "fullcodeline": "if (tp == curtab)"
    },
    {
        "line": 454,
        "fullcodeline": "if (LT_POS(curwin->w_cursor, VIsual))"
    },
    {
        "line": 590,
        "fullcodeline": "VIsual = start_visual;"
    },
    {
        "line": 694,
        "fullcodeline": "stuffcharReadbuff(Ctrl_O);"
    },
    {
        "line": 696,
        "fullcodeline": "stuffcharReadbuff('*');"
    },
    {
        "line": 238,
        "fullcodeline": "fixindent | PUT_CURSEND);"
    },
    {
        "line": 267,
        "fullcodeline": "? c1 - 1 : c1);"
    },
    {
        "line": 294,
        "fullcodeline": "goto_tabpage(c1);"
    },
    {
        "line": 307,
        "fullcodeline": "tp = curtab;"
    },
    {
        "line": 456,
        "fullcodeline": "start_visual = curwin->w_cursor;"
    },
    {
        "line": 457,
        "fullcodeline": "end_visual = VIsual;"
    },
    {
        "line": 698,
        "fullcodeline": "stuffcharReadbuff('#');"
    },
    {
        "line": 297,
        "fullcodeline": "if (curwin != old_curwin)"
    },
    {
        "line": 309,
        "fullcodeline": "tp = find_tabpage(-c1);"
    },
    {
        "line": 312,
        "fullcodeline": "if (first_tabpage->tp_next != NULL)"
    },
    {
        "line": 461,
        "fullcodeline": "start_visual = VIsual;"
    },
    {
        "line": 462,
        "fullcodeline": "end_visual = curwin->w_cursor;"
    },
    {
        "line": 594,
        "fullcodeline": "if (end_visual.lnum == start_visual.lnum)"
    },
    {
        "line": 298,
        "fullcodeline": "end_visual_mode_keep_button();"
    },
    {
        "line": 313,
        "fullcodeline": "tabpage_close(FALSE);"
    },
    {
        "line": 315,
        "fullcodeline": "else if (tp != NULL)"
    },
    {
        "line": 316,
        "fullcodeline": "tabpage_close_other(tp, FALSE);"
    },
    {
        "line": 596,
        "fullcodeline": "if (curwin->w_cursor.col - start_visual.col >"
    },
    {
        "line": 606,
        "fullcodeline": "diff = (curwin->w_cursor.lnum - start_visual.lnum) -"
    },
    {
        "line": 597,
        "fullcodeline": "end_visual.col - curwin->w_cursor.col)"
    },
    {
        "line": 598,
        "fullcodeline": "VIsual = start_visual;"
    },
    {
        "line": 609,
        "fullcodeline": "if (diff > 0)\t\t// closest to end"
    },
    {
        "line": 600,
        "fullcodeline": "VIsual = end_visual;"
    },
    {
        "line": 607,
        "fullcodeline": "(end_visual.lnum - curwin->w_cursor.lnum);"
    },
    {
        "line": 610,
        "fullcodeline": "VIsual = start_visual;"
    },
    {
        "line": 722,
        "fullcodeline": "else if ((mod_mask & MOD_MASK_MULTI_CLICK)"
    },
    {
        "line": 724,
        "fullcodeline": "&& mouse_has(MOUSE_VISUAL))"
    },
    {
        "line": 611,
        "fullcodeline": "else if (diff < 0)\t// closest to start"
    },
    {
        "line": 723,
        "fullcodeline": "&& (State & (MODE_NORMAL | MODE_INSERT))"
    },
    {
        "line": 726,
        "fullcodeline": "if (is_click || !VIsual_active)"
    },
    {
        "line": 760,
        "fullcodeline": "if ((mod_mask & MOD_MASK_MULTI_CLICK) == MOD_MASK_2CLICK)"
    },
    {
        "line": 612,
        "fullcodeline": "VIsual = end_visual;"
    },
    {
        "line": 762,
        "fullcodeline": "pos_T\t*pos = NULL;"
    },
    {
        "line": 812,
        "fullcodeline": "curwin->w_set_curswant = TRUE;"
    },
    {
        "line": 815,
        "fullcodeline": "redraw_curbuf_later(UPD_INVERTED);\t// update the inversion"
    },
    {
        "line": 817,
        "fullcodeline": "else if (VIsual_active && !old_active)"
    },
    {
        "line": 741,
        "fullcodeline": "if ((mod_mask & MOD_MASK_MULTI_CLICK) == MOD_MASK_2CLICK)"
    },
    {
        "line": 794,
        "fullcodeline": "if (pos == NULL && (is_click || is_drag))"
    },
    {
        "line": 615,
        "fullcodeline": "if (curwin->w_cursor.col <"
    },
    {
        "line": 729,
        "fullcodeline": "orig_cursor = VIsual;"
    },
    {
        "line": 770,
        "fullcodeline": "end_visual = curwin->w_cursor;"
    },
    {
        "line": 819,
        "fullcodeline": "if (mod_mask & MOD_MASK_ALT)"
    },
    {
        "line": 616,
        "fullcodeline": "(start_visual.col + end_visual.col) / 2)"
    },
    {
        "line": 617,
        "fullcodeline": "VIsual = end_visual;"
    },
    {
        "line": 732,
        "fullcodeline": "check_visual_highlight();"
    },
    {
        "line": 733,
        "fullcodeline": "VIsual = curwin->w_cursor;"
    },
    {
        "line": 734,
        "fullcodeline": "orig_cursor = VIsual;"
    },
    {
        "line": 735,
        "fullcodeline": "VIsual_active = TRUE;"
    },
    {
        "line": 736,
        "fullcodeline": "VIsual_reselect = TRUE;"
    },
    {
        "line": 738,
        "fullcodeline": "may_start_select('o');"
    },
    {
        "line": 739,
        "fullcodeline": "setmouse();"
    },
    {
        "line": 744,
        "fullcodeline": "if (mod_mask & MOD_MASK_ALT)"
    },
    {
        "line": 772,
        "fullcodeline": "inc(&end_visual);"
    },
    {
        "line": 773,
        "fullcodeline": "if (oap != NULL)"
    },
    {
        "line": 775,
        "fullcodeline": "if (oap != NULL"
    },
    {
        "line": 798,
        "fullcodeline": "if (LT_POS(curwin->w_cursor, orig_cursor))"
    },
    {
        "line": 820,
        "fullcodeline": "VIsual_mode = Ctrl_V;"
    },
    {
        "line": 619,
        "fullcodeline": "VIsual = start_visual;"
    },
    {
        "line": 745,
        "fullcodeline": "VIsual_mode = Ctrl_V;"
    },
    {
        "line": 749,
        "fullcodeline": "else if ((mod_mask & MOD_MASK_MULTI_CLICK) == MOD_MASK_3CLICK)"
    },
    {
        "line": 771,
        "fullcodeline": "while (gc = gchar_pos(&end_visual), VIM_ISWHITE(gc))"
    },
    {
        "line": 774,
        "fullcodeline": "oap->motion_type = MCHAR;"
    },
    {
        "line": 779,
        "fullcodeline": "&& (pos = findmatch(oap, NUL)) != NULL)"
    },
    {
        "line": 800,
        "fullcodeline": "find_start_of_word(&curwin->w_cursor);"
    },
    {
        "line": 801,
        "fullcodeline": "find_end_of_word(&VIsual);"
    },
    {
        "line": 822,
        "fullcodeline": "VIsual_mode = 'v';"
    },
    {
        "line": 747,
        "fullcodeline": "VIsual_mode = 'v';"
    },
    {
        "line": 750,
        "fullcodeline": "VIsual_mode = 'V';"
    },
    {
        "line": 778,
        "fullcodeline": "&& EQUAL_POS(curwin->w_cursor, VIsual)"
    },
    {
        "line": 782,
        "fullcodeline": "if (oap->motion_type == MLINE)"
    },
    {
        "line": 805,
        "fullcodeline": "find_start_of_word(&VIsual);"
    },
    {
        "line": 809,
        "fullcodeline": "find_end_of_word(&curwin->w_cursor);"
    },
    {
        "line": 777,
        "fullcodeline": "&& !vim_iswordc(gchar_pos(&end_visual))"
    },
    {
        "line": 783,
        "fullcodeline": "VIsual_mode = 'V';"
    },
    {
        "line": 806,
        "fullcodeline": "if (*p_sel == 'e' && *ml_get_cursor() != NUL)"
    },
    {
        "line": 751,
        "fullcodeline": "else if ((mod_mask & MOD_MASK_MULTI_CLICK) == MOD_MASK_4CLICK)"
    },
    {
        "line": 776,
        "fullcodeline": "&& VIsual_mode == 'v'"
    },
    {
        "line": 807,
        "fullcodeline": "curwin->w_cursor.col +="
    },
    {
        "line": 752,
        "fullcodeline": "VIsual_mode = Ctrl_V;"
    },
    {
        "line": 784,
        "fullcodeline": "else if (*p_sel == 'e')"
    },
    {
        "line": 808,
        "fullcodeline": "(*mb_ptr2len)(ml_get_cursor());"
    },
    {
        "line": 786,
        "fullcodeline": "if (LT_POS(curwin->w_cursor, VIsual))"
    },
    {
        "line": 787,
        "fullcodeline": "++VIsual.col;"
    },
    {
        "line": 789,
        "fullcodeline": "++curwin->w_cursor.col;"
    }
]