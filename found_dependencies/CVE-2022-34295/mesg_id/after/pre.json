[
    {
        "line": 2,
        "fullcodeline": "static int range = 0; /* indicates that no permutation has been generated yet */"
    },
    {
        "line": 5,
        "fullcodeline": "if (!range) {"
    },
    {
        "line": 11,
        "fullcodeline": "if ( index == NUM_USE ) {\t/* if the pool is exhasuted */"
    },
    {
        "line": 22,
        "fullcodeline": "if (T.debug > 4) {"
    },
    {
        "line": 6,
        "fullcodeline": "srandom(time(0)); \t/* initialize random number generator seed */"
    },
    {
        "line": 7,
        "fullcodeline": "range = 1;\t\t/* choose the lower range first */"
    },
    {
        "line": 8,
        "fullcodeline": "make_random_permutation(LOW_START);"
    },
    {
        "line": 9,
        "fullcodeline": "index = 0;\t\t/* start from the first element */"
    },
    {
        "line": 20,
        "fullcodeline": "index = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "syslog (LOG_DEBUG, \"mesg_id() = %d\", permutation[index]);"
    },
    {
        "line": 25,
        "fullcodeline": "return permutation[index++];"
    },
    {
        "line": 12,
        "fullcodeline": "if (range == 1) {"
    },
    {
        "line": 13,
        "fullcodeline": "range = 2;\t/* choose the higher range */"
    },
    {
        "line": 14,
        "fullcodeline": "make_random_permutation(HIGH_START);"
    },
    {
        "line": 17,
        "fullcodeline": "range = 1;\t/* choose the lower range */"
    },
    {
        "line": 18,
        "fullcodeline": "make_random_permutation(LOW_START);"
    }
]