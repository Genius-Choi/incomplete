[
    {
        "line": 2,
        "fullcodeline": "import base64"
    },
    {
        "line": 3,
        "fullcodeline": "import json"
    },
    {
        "line": 4,
        "fullcodeline": "import ast"
    },
    {
        "line": 6,
        "fullcodeline": "import requests"
    },
    {
        "line": 8,
        "fullcodeline": "api = f'http://{domain}:7873/bGVhdmVfcmlnaHRfbm93'"
    },
    {
        "line": 12,
        "fullcodeline": "im_b64 = base64.b64encode(im_bytes).decode(\"utf8\")"
    },
    {
        "line": 14,
        "fullcodeline": "headers = {'Content-type': 'application/json', 'Accept': 'text/plain'}"
    },
    {
        "line": 16,
        "fullcodeline": "status = try_get_cached(domain, {\"title\": title, \"singer\": singer, \"album\": album})"
    },
    {
        "line": 17,
        "fullcodeline": "status = ast.literal_eval(str(status))"
    },
    {
        "line": 10,
        "fullcodeline": "with open(image_file, \"rb\") as f:"
    },
    {
        "line": 19,
        "fullcodeline": "if status == None:"
    },
    {
        "line": 20,
        "fullcodeline": "print(\"Cached version not found. Uploading image with song metadata.\")"
    },
    {
        "line": 21,
        "fullcodeline": "payload = json.dumps({\"image\": im_b64, \"title\": title, \"singer\": singer, \"album\": album})"
    },
    {
        "line": 22,
        "fullcodeline": "response = requests.post(api, data=payload, headers=headers)"
    },
    {
        "line": 26,
        "fullcodeline": "data = status"
    },
    {
        "line": 11,
        "fullcodeline": "im_bytes = f.read()"
    }
]