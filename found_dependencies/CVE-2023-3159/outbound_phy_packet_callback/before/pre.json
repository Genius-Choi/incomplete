[
    {
        "line": 20,
        "fullcodeline": "e->phy_packet.data[0] = packet->timestamp;"
    },
    {
        "line": 22,
        "fullcodeline": "queue_event(e->client, &e->event, &e->phy_packet,"
    },
    {
        "line": 24,
        "fullcodeline": "client_put(e->client);"
    },
    {
        "line": 23,
        "fullcodeline": "sizeof(e->phy_packet) + e->phy_packet.length, NULL, 0);"
    },
    {
        "line": 9,
        "fullcodeline": "case ACK_COMPLETE:\te->phy_packet.rcode = RCODE_COMPLETE;\tbreak;"
    },
    {
        "line": 11,
        "fullcodeline": "case ACK_PENDING:\te->phy_packet.rcode = RCODE_COMPLETE;\tbreak;"
    },
    {
        "line": 14,
        "fullcodeline": "case ACK_BUSY_B:\te->phy_packet.rcode = RCODE_BUSY;\tbreak;"
    },
    {
        "line": 15,
        "fullcodeline": "case ACK_DATA_ERROR:\te->phy_packet.rcode = RCODE_DATA_ERROR;\tbreak;"
    },
    {
        "line": 16,
        "fullcodeline": "case ACK_TYPE_ERROR:\te->phy_packet.rcode = RCODE_TYPE_ERROR;\tbreak;"
    },
    {
        "line": 18,
        "fullcodeline": "default:\t\te->phy_packet.rcode = status;\t\tbreak;"
    }
]