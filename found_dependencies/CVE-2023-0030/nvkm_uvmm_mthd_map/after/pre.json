[
    {
        "line": 3,
        "fullcodeline": "struct nvkm_client *client = uvmm->object.client;"
    },
    {
        "line": 6,
        "fullcodeline": "} *args = argv;"
    },
    {
        "line": 8,
        "fullcodeline": "struct nvkm_vmm *vmm = uvmm->vmm;"
    },
    {
        "line": 11,
        "fullcodeline": "int ret = -ENOSYS;"
    },
    {
        "line": 21,
        "fullcodeline": "memory = nvkm_umem_search(client, handle);"
    },
    {
        "line": 27,
        "fullcodeline": "mutex_lock(&vmm->mutex);"
    },
    {
        "line": 55,
        "fullcodeline": "vma->busy = true;"
    },
    {
        "line": 56,
        "fullcodeline": "mutex_unlock(&vmm->mutex);"
    },
    {
        "line": 58,
        "fullcodeline": "ret = nvkm_memory_map(memory, offset, vmm, vma, argv, argc);"
    },
    {
        "line": 65,
        "fullcodeline": "mutex_lock(&vmm->mutex);"
    },
    {
        "line": 66,
        "fullcodeline": "vma->busy = false;"
    },
    {
        "line": 67,
        "fullcodeline": "nvkm_vmm_unmap_region(vmm, vma);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!(ret = nvif_unpack(ret, &argv, &argc, args->v0, 0, 0, true))) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (IS_ERR(memory)) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "addr = args->v0.addr;"
    },
    {
        "line": 15,
        "fullcodeline": "size = args->v0.size;"
    },
    {
        "line": 16,
        "fullcodeline": "handle = args->v0.memory;"
    },
    {
        "line": 17,
        "fullcodeline": "offset = args->v0.offset;"
    },
    {
        "line": 28,
        "fullcodeline": "if (ret = -ENOENT, !(vma = nvkm_vmm_node_search(vmm, addr))) {"
    },
    {
        "line": 29,
        "fullcodeline": "VMM_DEBUG(vmm, \"lookup %016llx\", addr);"
    },
    {
        "line": 33,
        "fullcodeline": "if (ret = -ENOENT, (!vma->user && !client->super) || vma->busy) {"
    },
    {
        "line": 34,
        "fullcodeline": "VMM_DEBUG(vmm, \"denied %016llx: %d %d %d\", addr,"
    },
    {
        "line": 39,
        "fullcodeline": "if (ret = -EINVAL, vma->addr != addr || vma->size != size) {"
    },
    {
        "line": 49,
        "fullcodeline": "vma = nvkm_vmm_node_split(vmm, vma, addr, size);"
    },
    {
        "line": 23,
        "fullcodeline": "VMM_DEBUG(vmm, \"memory %016llx %ld\\n\", handle, PTR_ERR(memory));"
    },
    {
        "line": 24,
        "fullcodeline": "return PTR_ERR(memory);"
    },
    {
        "line": 35,
        "fullcodeline": "vma->user, !client->super, vma->busy);"
    },
    {
        "line": 50,
        "fullcodeline": "if (!vma) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (addr + size > vma->addr + vma->size || vma->memory ||"
    },
    {
        "line": 41,
        "fullcodeline": "(vma->refd == NVKM_VMA_PAGE_NONE && !vma->mapref)) {"
    },
    {
        "line": 42,
        "fullcodeline": "VMM_DEBUG(vmm, \"split %d %d %d \""
    },
    {
        "line": 51,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 44,
        "fullcodeline": "!!vma->memory, vma->refd, vma->mapref,"
    }
]