[
    {
        "line": 6,
        "fullcodeline": "} *args = argv;"
    },
    {
        "line": 8,
        "fullcodeline": "struct nvkm_vmm *vmm = uvmm->vmm;"
    },
    {
        "line": 11,
        "fullcodeline": "int ret = -ENOSYS;"
    },
    {
        "line": 21,
        "fullcodeline": "memory = nvkm_umem_search(client, handle);"
    },
    {
        "line": 27,
        "fullcodeline": "mutex_lock(&vmm->mutex);"
    },
    {
        "line": 68,
        "fullcodeline": "vma->busy = true;"
    },
    {
        "line": 69,
        "fullcodeline": "mutex_unlock(&vmm->mutex);"
    },
    {
        "line": 71,
        "fullcodeline": "ret = nvkm_memory_map(memory, offset, vmm, vma, argv, argc);"
    },
    {
        "line": 78,
        "fullcodeline": "mutex_lock(&vmm->mutex);"
    },
    {
        "line": 79,
        "fullcodeline": "vma->busy = false;"
    },
    {
        "line": 80,
        "fullcodeline": "nvkm_vmm_unmap_region(vmm, vma);"
    },
    {
        "line": 82,
        "fullcodeline": "mutex_unlock(&vmm->mutex);"
    },
    {
        "line": 83,
        "fullcodeline": "nvkm_memory_unref(&memory);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!(ret = nvif_unpack(ret, &argv, &argc, args->v0, 0, 0, true))) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (IS_ERR(memory)) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 23,
        "fullcodeline": "VMM_DEBUG(vmm, \"memory %016llx %ld\\n\", handle, PTR_ERR(memory));"
    },
    {
        "line": 28,
        "fullcodeline": "if (ret = -ENOENT, !(vma = nvkm_vmm_node_search(vmm, addr))) {"
    },
    {
        "line": 29,
        "fullcodeline": "VMM_DEBUG(vmm, \"lookup %016llx\", addr);"
    },
    {
        "line": 33,
        "fullcodeline": "if (ret = -ENOENT, (!vma->user && !client->super) || vma->busy) {"
    },
    {
        "line": 34,
        "fullcodeline": "VMM_DEBUG(vmm, \"denied %016llx: %d %d %d\", addr,"
    },
    {
        "line": 39,
        "fullcodeline": "if (ret = -EINVAL, vma->addr != addr || vma->size != size) {"
    },
    {
        "line": 74,
        "fullcodeline": "nvkm_memory_unref(&memory);"
    },
    {
        "line": 24,
        "fullcodeline": "return PTR_ERR(memory);"
    },
    {
        "line": 35,
        "fullcodeline": "vma->user, !client->super, vma->busy);"
    },
    {
        "line": 40,
        "fullcodeline": "if (addr + size > vma->addr + vma->size || vma->memory ||"
    },
    {
        "line": 49,
        "fullcodeline": "if (vma->addr != addr) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (vma->size != size) {"
    },
    {
        "line": 41,
        "fullcodeline": "(vma->refd == NVKM_VMA_PAGE_NONE && !vma->mapref)) {"
    },
    {
        "line": 42,
        "fullcodeline": "VMM_DEBUG(vmm, \"split %d %d %d \""
    },
    {
        "line": 50,
        "fullcodeline": "const u64 tail = vma->size + vma->addr - addr;"
    },
    {
        "line": 53,
        "fullcodeline": "vma->part = true;"
    },
    {
        "line": 54,
        "fullcodeline": "nvkm_vmm_node_insert(vmm, vma);"
    },
    {
        "line": 58,
        "fullcodeline": "const u64 tail = vma->size - size;"
    },
    {
        "line": 64,
        "fullcodeline": "tmp->part = true;"
    },
    {
        "line": 65,
        "fullcodeline": "nvkm_vmm_node_insert(vmm, tmp);"
    },
    {
        "line": 44,
        "fullcodeline": "!!vma->memory, vma->refd, vma->mapref,"
    },
    {
        "line": 45,
        "fullcodeline": "addr, size, vma->addr, (u64)vma->size);"
    },
    {
        "line": 51,
        "fullcodeline": "if (ret = -ENOMEM, !(vma = nvkm_vma_tail(vma, tail)))"
    },
    {
        "line": 60,
        "fullcodeline": "if (ret = -ENOMEM, !(tmp = nvkm_vma_tail(vma, tail))) {"
    },
    {
        "line": 61,
        "fullcodeline": "nvkm_vmm_unmap_region(vmm, vma);"
    }
]