[
    {
        "line": 43,
        "fullcodeline": "map->off = map->offset;"
    },
    {
        "line": 78,
        "fullcodeline": "nvkm_memory_tags_put(vma->memory, vmm->mmu->subdev.device, &vma->tags);"
    },
    {
        "line": 8,
        "fullcodeline": "if (unlikely(nvkm_memory_size(map->memory) < map->offset + vma->size)) {"
    },
    {
        "line": 80,
        "fullcodeline": "vma->memory = nvkm_memory_ref(map->memory);"
    },
    {
        "line": 9,
        "fullcodeline": "VMM_DEBUG(vmm, \"overrun %016llx %016llx %016llx\","
    },
    {
        "line": 16,
        "fullcodeline": "if (vma->page == NVKM_VMA_PAGE_NONE &&"
    },
    {
        "line": 17,
        "fullcodeline": "vma->refd == NVKM_VMA_PAGE_NONE) {"
    },
    {
        "line": 19,
        "fullcodeline": "const u32 debug = vmm->debug;"
    },
    {
        "line": 20,
        "fullcodeline": "vmm->debug = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "vmm->debug = debug;"
    },
    {
        "line": 51,
        "fullcodeline": "func = map->page->desc->func->mem;"
    },
    {
        "line": 69,
        "fullcodeline": "ret = nvkm_vmm_ptes_get_map(vmm, map->page, vma->addr, vma->size, map, func);"
    },
    {
        "line": 10,
        "fullcodeline": "nvkm_memory_size(map->memory),"
    },
    {
        "line": 11,
        "fullcodeline": "map->offset, (u64)vma->size);"
    },
    {
        "line": 12,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 21,
        "fullcodeline": "ret = nvkm_vmm_map_choose(vmm, vma, argv, argc, map);"
    },
    {
        "line": 35,
        "fullcodeline": "ret = nvkm_vmm_map_valid(vmm, vma, argv, argc, map);"
    },
    {
        "line": 45,
        "fullcodeline": "for (; map->off; map->mem = map->mem->next) {"
    },
    {
        "line": 73,
        "fullcodeline": "vma->refd = map->page - vmm->func->page;"
    },
    {
        "line": 75,
        "fullcodeline": "nvkm_vmm_ptes_map(vmm, map->page, vma->addr, vma->size, map, func);"
    },
    {
        "line": 24,
        "fullcodeline": "VMM_DEBUG(vmm, \"invalid at any page size\");"
    },
    {
        "line": 30,
        "fullcodeline": "if (vma->refd != NVKM_VMA_PAGE_NONE)"
    },
    {
        "line": 46,
        "fullcodeline": "u64 size = (u64)map->mem->length << NVKM_RAM_MM_SHIFT;"
    },
    {
        "line": 49,
        "fullcodeline": "map->off -= size;"
    },
    {
        "line": 26,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 31,
        "fullcodeline": "map->page = &vmm->func->page[vma->refd];"
    },
    {
        "line": 37,
        "fullcodeline": "VMM_DEBUG(vmm, \"invalid %d\\n\", ret);"
    },
    {
        "line": 47,
        "fullcodeline": "if (size > map->off)"
    },
    {
        "line": 60,
        "fullcodeline": "func = map->page->desc->func->sgl;"
    },
    {
        "line": 33,
        "fullcodeline": "map->page = &vmm->func->page[vma->page];"
    },
    {
        "line": 54,
        "fullcodeline": "for (; map->off; map->sgl = sg_next(map->sgl)) {"
    },
    {
        "line": 62,
        "fullcodeline": "map->dma += map->offset >> PAGE_SHIFT;"
    },
    {
        "line": 63,
        "fullcodeline": "map->off  = map->offset & PAGE_MASK;"
    },
    {
        "line": 64,
        "fullcodeline": "func = map->page->desc->func->dma;"
    },
    {
        "line": 55,
        "fullcodeline": "u64 size = sg_dma_len(map->sgl);"
    },
    {
        "line": 58,
        "fullcodeline": "map->off -= size;"
    },
    {
        "line": 56,
        "fullcodeline": "if (size > map->off)"
    }
]