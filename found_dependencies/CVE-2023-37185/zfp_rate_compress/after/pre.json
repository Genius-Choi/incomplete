[
    {
        "line": 3,
        "fullcodeline": "BLOSC_UNUSED_PARAM(chunk);"
    },
    {
        "line": 4,
        "fullcodeline": "ZFP_ERROR_NULL(input);"
    },
    {
        "line": 5,
        "fullcodeline": "ZFP_ERROR_NULL(output);"
    },
    {
        "line": 6,
        "fullcodeline": "ZFP_ERROR_NULL(cparams);"
    },
    {
        "line": 7,
        "fullcodeline": "ZFP_ERROR_NULL(cparams->schunk);"
    },
    {
        "line": 9,
        "fullcodeline": "double ratio = (double) meta / 100.0;"
    },
    {
        "line": 11,
        "fullcodeline": "int64_t *shape = malloc(8 * sizeof(int64_t));"
    },
    {
        "line": 12,
        "fullcodeline": "int32_t *chunkshape = malloc(8 * sizeof(int32_t));"
    },
    {
        "line": 13,
        "fullcodeline": "int32_t *blockshape = malloc(8 * sizeof(int32_t));"
    },
    {
        "line": 23,
        "fullcodeline": "deserialize_meta(smeta, smeta_len, &ndim, shape, chunkshape, blockshape);"
    },
    {
        "line": 41,
        "fullcodeline": "int32_t typesize = cparams->typesize;"
    },
    {
        "line": 54,
        "fullcodeline": "double rate = ratio * typesize * 8;     // convert from output size / input size to output bits per input value"
    },
    {
        "line": 55,
        "fullcodeline": "uint cellsize = 1u << (2 * ndim);"
    },
    {
        "line": 71,
        "fullcodeline": "zfp = zfp_stream_open(NULL);"
    },
    {
        "line": 72,
        "fullcodeline": "stream = stream_open(output, output_len);"
    },
    {
        "line": 73,
        "fullcodeline": "zfp_stream_set_bit_stream(zfp, stream);"
    },
    {
        "line": 74,
        "fullcodeline": "zfp_stream_rewind(zfp);"
    },
    {
        "line": 97,
        "fullcodeline": "int zfp_maxout = (int) zfp_stream_maximum_size(zfp, field);"
    },
    {
        "line": 100,
        "fullcodeline": "uint8_t *aux_out = malloc(zfp_maxout);"
    },
    {
        "line": 101,
        "fullcodeline": "zfp_aux = zfp_stream_open(NULL);"
    },
    {
        "line": 102,
        "fullcodeline": "stream_aux = stream_open(aux_out, zfp_maxout);"
    },
    {
        "line": 103,
        "fullcodeline": "zfp_stream_set_bit_stream(zfp_aux, stream_aux);"
    },
    {
        "line": 104,
        "fullcodeline": "zfp_stream_rewind(zfp_aux);"
    },
    {
        "line": 105,
        "fullcodeline": "zfp_stream_set_rate(zfp_aux, rate, type, ndim, zfp_false);"
    },
    {
        "line": 107,
        "fullcodeline": "zfpsize = zfp_compress(zfp_aux, field);"
    },
    {
        "line": 128,
        "fullcodeline": "memcpy(output, aux_out, zfpsize);"
    },
    {
        "line": 16,
        "fullcodeline": "if (blosc2_meta_get(cparams->schunk, \"b2nd\", &smeta, &smeta_len) < 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "for(int i = 0; i < ndim; i++) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (type == zfp_type_float) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (zfpsize == 0) {"
    },
    {
        "line": 131,
        "fullcodeline": "return (int) zfpsize;"
    },
    {
        "line": 17,
        "fullcodeline": "free(shape);"
    },
    {
        "line": 18,
        "fullcodeline": "free(chunkshape);"
    },
    {
        "line": 19,
        "fullcodeline": "free(blockshape);"
    },
    {
        "line": 20,
        "fullcodeline": "BLOSC_TRACE_ERROR(\"b2nd layer not found!\");"
    },
    {
        "line": 44,
        "fullcodeline": "case sizeof(float):"
    },
    {
        "line": 45,
        "fullcodeline": "type = zfp_type_float;"
    },
    {
        "line": 47,
        "fullcodeline": "case sizeof(double):"
    },
    {
        "line": 48,
        "fullcodeline": "type = zfp_type_double;"
    },
    {
        "line": 58,
        "fullcodeline": "min_rate = (double) (1 + 8u) / cellsize;"
    },
    {
        "line": 78,
        "fullcodeline": "field = zfp_field_1d((void *) input, type, blockshape[0]);"
    },
    {
        "line": 81,
        "fullcodeline": "field = zfp_field_2d((void *) input, type, blockshape[1], blockshape[0]);"
    },
    {
        "line": 84,
        "fullcodeline": "field = zfp_field_3d((void *) input, type, blockshape[2], blockshape[1], blockshape[0]);"
    },
    {
        "line": 87,
        "fullcodeline": "field = zfp_field_4d((void *) input, type, blockshape[3], blockshape[2], blockshape[1], blockshape[0]);"
    },
    {
        "line": 27,
        "fullcodeline": "if (blockshape[i] < 4) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (rate < min_rate) {"
    },
    {
        "line": 65,
        "fullcodeline": "min_rate = (double) (1 + 11u) / cellsize;"
    },
    {
        "line": 120,
        "fullcodeline": "return (int) zfpsize;"
    },
    {
        "line": 66,
        "fullcodeline": "if (rate < min_rate) {"
    }
]