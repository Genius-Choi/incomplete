[
    {
        "line": 2,
        "fullcodeline": "int len = 0, l;"
    },
    {
        "line": 4,
        "fullcodeline": "int count = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "c = CUR_CHAR(l);"
    },
    {
        "line": 14,
        "fullcodeline": "if (ctxt->instate == XML_PARSER_EOF)"
    },
    {
        "line": 17,
        "fullcodeline": "if ((ctxt->options & XML_PARSE_OLD10) == 0) {"
    },
    {
        "line": 101,
        "fullcodeline": "if ((len > XML_MAX_NAME_LENGTH) &&"
    },
    {
        "line": 106,
        "fullcodeline": "if (ctxt->input->cur - ctxt->input->base < len) {"
    },
    {
        "line": 116,
        "fullcodeline": "if ((*ctxt->input->cur == '\\n') && (ctxt->input->cur[-1] == '\\r'))"
    },
    {
        "line": 118,
        "fullcodeline": "return(xmlDictLookup(ctxt->dict, ctxt->input->cur - len, len));"
    },
    {
        "line": 40,
        "fullcodeline": "len += l;"
    },
    {
        "line": 41,
        "fullcodeline": "NEXTL(l);"
    },
    {
        "line": 42,
        "fullcodeline": "c = CUR_CHAR(l);"
    },
    {
        "line": 102,
        "fullcodeline": "((ctxt->options & XML_PARSE_HUGE) == 0)) {"
    },
    {
        "line": 103,
        "fullcodeline": "xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, \"Name\");"
    },
    {
        "line": 112,
        "fullcodeline": "xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,"
    },
    {
        "line": 22,
        "fullcodeline": "if ((c == ' ') || (c == '>') || (c == '/') || /* accelerators */"
    },
    {
        "line": 43,
        "fullcodeline": "while ((c != ' ') && (c != '>') && (c != '/') && /* accelerators */"
    },
    {
        "line": 80,
        "fullcodeline": "len += l;"
    },
    {
        "line": 81,
        "fullcodeline": "NEXTL(l);"
    },
    {
        "line": 82,
        "fullcodeline": "c = CUR_CHAR(l);"
    },
    {
        "line": 117,
        "fullcodeline": "return(xmlDictLookup(ctxt->dict, ctxt->input->cur - (len + 1), len));"
    },
    {
        "line": 23,
        "fullcodeline": "(!(((c >= 'a') && (c <= 'z')) ||"
    },
    {
        "line": 44,
        "fullcodeline": "(((c >= 'a') && (c <= 'z')) ||"
    },
    {
        "line": 70,
        "fullcodeline": "len += l;"
    },
    {
        "line": 71,
        "fullcodeline": "NEXTL(l);"
    },
    {
        "line": 72,
        "fullcodeline": "c = CUR_CHAR(l);"
    },
    {
        "line": 75,
        "fullcodeline": "if ((c == ' ') || (c == '>') || (c == '/') || /* accelerators */"
    },
    {
        "line": 84,
        "fullcodeline": "while ((c != ' ') && (c != '>') && (c != '/') && /* test bigname.xml */"
    },
    {
        "line": 62,
        "fullcodeline": "((c >= 0x10000) && (c <= 0xEFFFF))"
    },
    {
        "line": 64,
        "fullcodeline": "if (count++ > XML_PARSER_CHUNK_SIZE) {"
    },
    {
        "line": 76,
        "fullcodeline": "(!IS_LETTER(c) && (c != '_') &&"
    },
    {
        "line": 85,
        "fullcodeline": "((IS_LETTER(c)) || (IS_DIGIT(c)) ||"
    },
    {
        "line": 96,
        "fullcodeline": "len += l;"
    },
    {
        "line": 97,
        "fullcodeline": "NEXTL(l);"
    },
    {
        "line": 98,
        "fullcodeline": "c = CUR_CHAR(l);"
    },
    {
        "line": 37,
        "fullcodeline": "((c >= 0x10000) && (c <= 0xEFFFF))))) {"
    },
    {
        "line": 61,
        "fullcodeline": "((c >= 0xFDF0) && (c <= 0xFFFD)) ||"
    },
    {
        "line": 65,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 77,
        "fullcodeline": "(c != ':'))) {"
    },
    {
        "line": 89,
        "fullcodeline": "(IS_EXTENDER(c)))) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (count++ > XML_PARSER_CHUNK_SIZE) {"
    },
    {
        "line": 36,
        "fullcodeline": "((c >= 0xFDF0) && (c <= 0xFFFD)) ||"
    },
    {
        "line": 60,
        "fullcodeline": "((c >= 0xF900) && (c <= 0xFDCF)) ||"
    },
    {
        "line": 67,
        "fullcodeline": "if (ctxt->instate == XML_PARSER_EOF)"
    },
    {
        "line": 88,
        "fullcodeline": "(IS_COMBINING(c)) ||"
    },
    {
        "line": 91,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "((c >= 0xF900) && (c <= 0xFDCF)) ||"
    },
    {
        "line": 59,
        "fullcodeline": "((c >= 0x3001) && (c <= 0xD7FF)) ||"
    },
    {
        "line": 87,
        "fullcodeline": "(c == '_') || (c == ':') ||"
    },
    {
        "line": 93,
        "fullcodeline": "if (ctxt->instate == XML_PARSER_EOF)"
    },
    {
        "line": 34,
        "fullcodeline": "((c >= 0x3001) && (c <= 0xD7FF)) ||"
    },
    {
        "line": 58,
        "fullcodeline": "((c >= 0x2C00) && (c <= 0x2FEF)) ||"
    },
    {
        "line": 33,
        "fullcodeline": "((c >= 0x2C00) && (c <= 0x2FEF)) ||"
    },
    {
        "line": 57,
        "fullcodeline": "((c >= 0x2070) && (c <= 0x218F)) ||"
    },
    {
        "line": 86,
        "fullcodeline": "(c == '.') || (c == '-') ||"
    },
    {
        "line": 32,
        "fullcodeline": "((c >= 0x2070) && (c <= 0x218F)) ||"
    },
    {
        "line": 56,
        "fullcodeline": "((c >= 0x203F) && (c <= 0x2040)) || /* !start */"
    },
    {
        "line": 31,
        "fullcodeline": "((c >= 0x200C) && (c <= 0x200D)) ||"
    },
    {
        "line": 55,
        "fullcodeline": "((c >= 0x200C) && (c <= 0x200D)) ||"
    },
    {
        "line": 30,
        "fullcodeline": "((c >= 0x37F) && (c <= 0x1FFF)) ||"
    },
    {
        "line": 54,
        "fullcodeline": "((c >= 0x37F) && (c <= 0x1FFF)) ||"
    },
    {
        "line": 29,
        "fullcodeline": "((c >= 0x370) && (c <= 0x37D)) ||"
    },
    {
        "line": 53,
        "fullcodeline": "((c >= 0x370) && (c <= 0x37D)) ||"
    },
    {
        "line": 28,
        "fullcodeline": "((c >= 0xF8) && (c <= 0x2FF)) ||"
    },
    {
        "line": 52,
        "fullcodeline": "((c >= 0x300) && (c <= 0x36F)) || /* !start */"
    },
    {
        "line": 27,
        "fullcodeline": "((c >= 0xD8) && (c <= 0xF6)) ||"
    },
    {
        "line": 51,
        "fullcodeline": "((c >= 0xF8) && (c <= 0x2FF)) ||"
    },
    {
        "line": 26,
        "fullcodeline": "((c >= 0xC0) && (c <= 0xD6)) ||"
    },
    {
        "line": 50,
        "fullcodeline": "((c >= 0xD8) && (c <= 0xF6)) ||"
    },
    {
        "line": 25,
        "fullcodeline": "(c == '_') || (c == ':') ||"
    },
    {
        "line": 49,
        "fullcodeline": "((c >= 0xC0) && (c <= 0xD6)) ||"
    },
    {
        "line": 48,
        "fullcodeline": "(c == '-') || (c == '.') || (c == 0xB7) || /* !start */"
    },
    {
        "line": 24,
        "fullcodeline": "((c >= 'A') && (c <= 'Z')) ||"
    },
    {
        "line": 47,
        "fullcodeline": "(c == '_') || (c == ':') ||"
    },
    {
        "line": 46,
        "fullcodeline": "((c >= '0') && (c <= '9')) || /* !start */"
    },
    {
        "line": 45,
        "fullcodeline": "((c >= 'A') && (c <= 'Z')) ||"
    }
]