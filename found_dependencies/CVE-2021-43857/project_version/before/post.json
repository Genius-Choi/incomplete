[
    {
        "line": 9,
        "fullcodeline": "if request.method == 'GET':"
    },
    {
        "line": 11,
        "fullcodeline": "client = Client.objects.get(id=client_id)"
    },
    {
        "line": 12,
        "fullcodeline": "project = Project.objects.get(name=project_name)"
    },
    {
        "line": 13,
        "fullcodeline": "scrapyd = get_scrapyd(client)"
    },
    {
        "line": 30,
        "fullcodeline": "return JsonResponse(model_to_dict(deploy))"
    },
    {
        "line": 15,
        "fullcodeline": "if Deploy.objects.filter(client=client, project=project):"
    },
    {
        "line": 16,
        "fullcodeline": "deploy = Deploy.objects.get(client=client, project=project)"
    },
    {
        "line": 23,
        "fullcodeline": "if len(versions) > 0:"
    },
    {
        "line": 28,
        "fullcodeline": "deploy, result = Deploy.objects.update_or_create(client=client, project=project, deployed_at=deployed_at)"
    },
    {
        "line": 20,
        "fullcodeline": "versions = scrapyd.list_versions(project_name)"
    },
    {
        "line": 24,
        "fullcodeline": "version = versions[-1]"
    },
    {
        "line": 25,
        "fullcodeline": "deployed_at = timezone.datetime.fromtimestamp(int(version), tz=pytz.timezone(TIME_ZONE))"
    },
    {
        "line": 27,
        "fullcodeline": "deployed_at = None"
    },
    {
        "line": 22,
        "fullcodeline": "return JsonResponse({'message': 'Connect Error'}, status=500)"
    }
]