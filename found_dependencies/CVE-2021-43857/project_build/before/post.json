[
    {
        "line": 9,
        "fullcodeline": "path = os.path.abspath(join(os.getcwd(), PROJECTS_FOLDER))"
    },
    {
        "line": 10,
        "fullcodeline": "project_path = join(path, project_name)"
    },
    {
        "line": 13,
        "fullcodeline": "if request.method == 'GET':"
    },
    {
        "line": 14,
        "fullcodeline": "egg = find_egg(project_path)"
    },
    {
        "line": 33,
        "fullcodeline": "data = model_to_dict(model)"
    },
    {
        "line": 34,
        "fullcodeline": "return JsonResponse(data)"
    },
    {
        "line": 37,
        "fullcodeline": "elif request.method == 'POST':"
    },
    {
        "line": 17,
        "fullcodeline": "built_at = timezone.datetime.fromtimestamp(os.path.getmtime(join(project_path, egg)),"
    },
    {
        "line": 31,
        "fullcodeline": "model = Project.objects.get(name=project_name)"
    },
    {
        "line": 38,
        "fullcodeline": "data = json.loads(request.body)"
    },
    {
        "line": 39,
        "fullcodeline": "description = data['description']"
    },
    {
        "line": 40,
        "fullcodeline": "build_project(project_name)"
    },
    {
        "line": 41,
        "fullcodeline": "egg = find_egg(project_path)"
    },
    {
        "line": 45,
        "fullcodeline": "built_at = timezone.now()"
    },
    {
        "line": 58,
        "fullcodeline": "data = model_to_dict(model)"
    },
    {
        "line": 19,
        "fullcodeline": "if not Project.objects.filter(name=project_name):"
    },
    {
        "line": 29,
        "fullcodeline": "if not Project.objects.filter(name=project_name):"
    },
    {
        "line": 42,
        "fullcodeline": "if not egg:"
    },
    {
        "line": 47,
        "fullcodeline": "if not Project.objects.filter(name=project_name):"
    },
    {
        "line": 59,
        "fullcodeline": "return JsonResponse(data)"
    },
    {
        "line": 21,
        "fullcodeline": "model = Project.objects.get(name=project_name)"
    },
    {
        "line": 23,
        "fullcodeline": "model = Project.objects.get(name=project_name)"
    },
    {
        "line": 24,
        "fullcodeline": "model.built_at = built_at"
    },
    {
        "line": 25,
        "fullcodeline": "model.egg = egg"
    },
    {
        "line": 26,
        "fullcodeline": "model.save()"
    },
    {
        "line": 49,
        "fullcodeline": "model = Project.objects.get(name=project_name)"
    },
    {
        "line": 52,
        "fullcodeline": "model = Project.objects.get(name=project_name)"
    },
    {
        "line": 53,
        "fullcodeline": "model.built_at = built_at"
    },
    {
        "line": 54,
        "fullcodeline": "model.egg = egg"
    },
    {
        "line": 55,
        "fullcodeline": "model.description = description"
    },
    {
        "line": 56,
        "fullcodeline": "model.save()"
    },
    {
        "line": 18,
        "fullcodeline": "tz=pytz.timezone(TIME_ZONE))"
    },
    {
        "line": 20,
        "fullcodeline": "Project(name=project_name, built_at=built_at, egg=egg).save()"
    },
    {
        "line": 30,
        "fullcodeline": "Project(name=project_name).save()"
    },
    {
        "line": 43,
        "fullcodeline": "return JsonResponse({'message': 'egg not found'}, status=500)"
    },
    {
        "line": 48,
        "fullcodeline": "Project(name=project_name, description=description, built_at=built_at, egg=egg).save()"
    }
]