[
    {
        "line": 7,
        "fullcodeline": "if request.method == 'POST':"
    },
    {
        "line": 8,
        "fullcodeline": "data = json.loads(request.body)"
    },
    {
        "line": 9,
        "fullcodeline": "address = data.get('address')"
    },
    {
        "line": 12,
        "fullcodeline": "address = address + '.git' if not address.endswith('.git') else address"
    },
    {
        "line": 13,
        "fullcodeline": "cmd = ['git', 'clone', 'address', join(PROJECTS_FOLDER, Path(address).stem)]"
    },
    {
        "line": 14,
        "fullcodeline": "logger.debug('clone cmd %s', cmd)"
    },
    {
        "line": 15,
        "fullcodeline": "p = Popen(cmd, shell=False, stdin=PIPE, stdout=PIPE, stderr=PIPE)"
    },
    {
        "line": 17,
        "fullcodeline": "logger.debug('clone run result %s', stdout)"
    },
    {
        "line": 10,
        "fullcodeline": "if not address.startswith('http'):"
    },
    {
        "line": 16,
        "fullcodeline": "stdout, stderr = bytes2str(p.stdout.read()), bytes2str(p.stderr.read())"
    },
    {
        "line": 20,
        "fullcodeline": "return JsonResponse({'status': True}) if not stderr else JsonResponse({'status': False})"
    },
    {
        "line": 19,
        "fullcodeline": "logger.error(stderr)"
    },
    {
        "line": 11,
        "fullcodeline": "return JsonResponse({'status': False})"
    }
]