[
    {
        "line": 8,
        "fullcodeline": "if request.method == 'POST':"
    },
    {
        "line": 9,
        "fullcodeline": "project_path = join(PROJECTS_FOLDER, project_name)"
    },
    {
        "line": 10,
        "fullcodeline": "data = json.loads(request.body)"
    },
    {
        "line": 11,
        "fullcodeline": "logger.debug('post data %s', data)"
    },
    {
        "line": 12,
        "fullcodeline": "spider_name = data.get('spider')"
    },
    {
        "line": 13,
        "fullcodeline": "args = {"
    },
    {
        "line": 25,
        "fullcodeline": "body = data.get('body', '')"
    },
    {
        "line": 29,
        "fullcodeline": "args_cmd = ' '.join("
    },
    {
        "line": 31,
        "fullcodeline": "logger.debug('args cmd %s', args_cmd)"
    },
    {
        "line": 32,
        "fullcodeline": "cmd = 'gerapy parse {args_cmd} {project_path} {spider_name}'.format("
    },
    {
        "line": 37,
        "fullcodeline": "logger.debug('parse cmd %s', cmd)"
    },
    {
        "line": 38,
        "fullcodeline": "p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=True)"
    },
    {
        "line": 40,
        "fullcodeline": "logger.debug('stdout %s, stderr %s', stdout, stderr)"
    },
    {
        "line": 26,
        "fullcodeline": "if args.get('method').lower() != 'get':"
    },
    {
        "line": 39,
        "fullcodeline": "stdout, stderr = bytes2str(p.stdout.read()), bytes2str(p.stderr.read())"
    },
    {
        "line": 41,
        "fullcodeline": "if not stderr:"
    },
    {
        "line": 27,
        "fullcodeline": "args['body'] = \"'\" + json.dumps(body, ensure_ascii=False) + \"'\""
    },
    {
        "line": 14,
        "fullcodeline": "'start': data.get('start', False),"
    },
    {
        "line": 15,
        "fullcodeline": "'method': data.get('method', 'GET'),"
    },
    {
        "line": 16,
        "fullcodeline": "'url': data.get('url'),"
    },
    {
        "line": 17,
        "fullcodeline": "'callback': data.get('callback'),"
    },
    {
        "line": 18,
        "fullcodeline": "'cookies': \"'\" + json.dumps(data.get('cookies', {}), ensure_ascii=False) + \"'\","
    },
    {
        "line": 19,
        "fullcodeline": "'headers': \"'\" + json.dumps(data.get('headers', {}), ensure_ascii=False) + \"'\","
    },
    {
        "line": 20,
        "fullcodeline": "'meta': \"'\" + json.dumps(data.get('meta', {}), ensure_ascii=False) + \"'\","
    },
    {
        "line": 21,
        "fullcodeline": "'dont_filter': data.get('dont_filter', False),"
    },
    {
        "line": 22,
        "fullcodeline": "'priority': data.get('priority', 0),"
    },
    {
        "line": 42,
        "fullcodeline": "return JsonResponse({'status': True, 'result': json.loads(stdout)})"
    },
    {
        "line": 44,
        "fullcodeline": "return JsonResponse({'status': False, 'message': stderr})"
    },
    {
        "line": 30,
        "fullcodeline": "['--{arg} {value}'.format(arg=arg, value=value) for arg, value in args.items()])"
    }
]