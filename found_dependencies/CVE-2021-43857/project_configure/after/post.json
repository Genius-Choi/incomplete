[
    {
        "line": 9,
        "fullcodeline": "if request.method == 'GET':"
    },
    {
        "line": 10,
        "fullcodeline": "project = Project.objects.get(name=project_name)"
    },
    {
        "line": 11,
        "fullcodeline": "project = model_to_dict(project)"
    },
    {
        "line": 12,
        "fullcodeline": "project['configuration'] = json.loads("
    },
    {
        "line": 14,
        "fullcodeline": "return JsonResponse(project)"
    },
    {
        "line": 17,
        "fullcodeline": "elif request.method == 'POST':"
    },
    {
        "line": 18,
        "fullcodeline": "project = Project.objects.filter(name=project_name)"
    },
    {
        "line": 19,
        "fullcodeline": "data = json.loads(request.body)"
    },
    {
        "line": 20,
        "fullcodeline": "configuration = json.dumps("
    },
    {
        "line": 22,
        "fullcodeline": "project.update(**{'configuration': configuration})"
    },
    {
        "line": 24,
        "fullcodeline": "project_name = re.sub("
    },
    {
        "line": 27,
        "fullcodeline": "cmd = ['gerapy', 'generate', project_name]"
    },
    {
        "line": 28,
        "fullcodeline": "p = Popen(cmd, shell=False, stdin=PIPE, stdout=PIPE, stderr=PIPE)"
    },
    {
        "line": 29,
        "fullcodeline": "stdout, stderr = bytes2str(p.stdout.read()), bytes2str(p.stderr.read())"
    },
    {
        "line": 31,
        "fullcodeline": "if not stderr:"
    },
    {
        "line": 21,
        "fullcodeline": "data.get('configuration'), ensure_ascii=False)"
    },
    {
        "line": 32,
        "fullcodeline": "return JsonResponse({'status': '1'})"
    },
    {
        "line": 34,
        "fullcodeline": "return JsonResponse({'status': '0', 'message': stderr})"
    }
]