[
    {
        "line": 10,
        "fullcodeline": "pte_unmap(page_table);"
    },
    {
        "line": 29,
        "fullcodeline": "page = alloc_zeroed_user_highpage_movable(vma, address);"
    },
    {
        "line": 41,
        "fullcodeline": "__SetPageUptodate(page);"
    },
    {
        "line": 43,
        "fullcodeline": "entry = mk_pte(page, vma->vm_page_prot);"
    },
    {
        "line": 47,
        "fullcodeline": "page_table = pte_offset_map_lock(mm, pmd, address, &ptl);"
    },
    {
        "line": 51,
        "fullcodeline": "inc_mm_counter_fast(mm, MM_ANONPAGES);"
    },
    {
        "line": 52,
        "fullcodeline": "page_add_new_anon_rmap(page, vma, address);"
    },
    {
        "line": 53,
        "fullcodeline": "mem_cgroup_commit_charge(page, memcg, false);"
    },
    {
        "line": 54,
        "fullcodeline": "lru_cache_add_active_or_unevictable(page, vma);"
    },
    {
        "line": 56,
        "fullcodeline": "set_pte_at(mm, address, page_table, entry);"
    },
    {
        "line": 59,
        "fullcodeline": "update_mmu_cache(vma, address, page_table);"
    },
    {
        "line": 61,
        "fullcodeline": "pte_unmap_unlock(page_table, ptl);"
    },
    {
        "line": 64,
        "fullcodeline": "mem_cgroup_cancel_charge(page, memcg);"
    },
    {
        "line": 65,
        "fullcodeline": "page_cache_release(page);"
    },
    {
        "line": 68,
        "fullcodeline": "page_cache_release(page);"
    },
    {
        "line": 13,
        "fullcodeline": "if (check_stack_guard_page(vma, address) < 0)"
    },
    {
        "line": 17,
        "fullcodeline": "if (!(flags & FAULT_FLAG_WRITE) && !mm_forbids_zeropage(mm)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (unlikely(anon_vma_prepare(vma)))"
    },
    {
        "line": 30,
        "fullcodeline": "if (!page)"
    },
    {
        "line": 33,
        "fullcodeline": "if (mem_cgroup_try_charge(page, mm, GFP_KERNEL, &memcg))"
    },
    {
        "line": 44,
        "fullcodeline": "if (vma->vm_flags & VM_WRITE)"
    },
    {
        "line": 48,
        "fullcodeline": "if (!pte_none(*page_table))"
    },
    {
        "line": 18,
        "fullcodeline": "entry = pte_mkspecial(pfn_pte(my_zero_pfn(address),"
    },
    {
        "line": 20,
        "fullcodeline": "page_table = pte_offset_map_lock(mm, pmd, address, &ptl);"
    },
    {
        "line": 45,
        "fullcodeline": "entry = pte_mkwrite(pte_mkdirty(entry));"
    },
    {
        "line": 21,
        "fullcodeline": "if (!pte_none(*page_table))"
    }
]