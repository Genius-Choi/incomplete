[
    {
        "line": 5,
        "fullcodeline": "int param_num= SvIV(param);"
    },
    {
        "line": 6,
        "fullcodeline": "int idx= param_num - 1;"
    },
    {
        "line": 8,
        "fullcodeline": "D_imp_xxh(sth);"
    },
    {
        "line": 12,
        "fullcodeline": "char *buffer= NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "int buffer_is_null= 0;"
    },
    {
        "line": 14,
        "fullcodeline": "int buffer_length= slen;"
    },
    {
        "line": 15,
        "fullcodeline": "unsigned int buffer_type= 0;"
    },
    {
        "line": 20,
        "fullcodeline": "ASYNC_CHECK_RETURN(sth, FALSE);"
    },
    {
        "line": 26,
        "fullcodeline": "attribs= attribs;"
    },
    {
        "line": 27,
        "fullcodeline": "maxlen= maxlen;"
    },
    {
        "line": 63,
        "fullcodeline": "rc = bind_param(&imp_sth->params[idx], value, sql_type);"
    },
    {
        "line": 22,
        "fullcodeline": "if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)"
    },
    {
        "line": 29,
        "fullcodeline": "if (param_num <= 0  ||  param_num > DBIc_NUM_PARAMS(imp_sth))"
    },
    {
        "line": 23,
        "fullcodeline": "PerlIO_printf(DBIc_LOGPIO(imp_xxh),"
    },
    {
        "line": 31,
        "fullcodeline": "do_error(sth, JW_ERR_ILLEGAL_PARAM_NUM, \"Illegal parameter number\", NULL);"
    },
    {
        "line": 39,
        "fullcodeline": "if (SvOK(value) &&"
    },
    {
        "line": 40,
        "fullcodeline": "(sql_type == SQL_NUMERIC  ||"
    },
    {
        "line": 59,
        "fullcodeline": "do_error(sth, JW_ERR_NOT_IMPLEMENTED, \"Output parameters not implemented\", NULL);"
    },
    {
        "line": 96,
        "fullcodeline": "buffer_is_null = !(SvOK(imp_sth->params[idx].value) && imp_sth->params[idx].value);"
    },
    {
        "line": 46,
        "fullcodeline": "sql_type == SQL_DOUBLE) )"
    },
    {
        "line": 97,
        "fullcodeline": "if (! buffer_is_null) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (imp_sth->bind[idx].buffer_type != buffer_type) {"
    },
    {
        "line": 45,
        "fullcodeline": "sql_type == SQL_REAL     ||"
    },
    {
        "line": 48,
        "fullcodeline": "if (! looks_like_number(value))"
    },
    {
        "line": 50,
        "fullcodeline": "err_msg = SvPVX(sv_2mortal(newSVpvf("
    },
    {
        "line": 53,
        "fullcodeline": "do_error(sth, JW_ERR_ILLEGAL_PARAM_NUM, err_msg, NULL);"
    },
    {
        "line": 74,
        "fullcodeline": "buffer_type= MYSQL_TYPE_LONG;"
    },
    {
        "line": 80,
        "fullcodeline": "buffer_type= MYSQL_TYPE_DOUBLE;"
    },
    {
        "line": 91,
        "fullcodeline": "buffer_type= MYSQL_TYPE_BLOB;"
    },
    {
        "line": 94,
        "fullcodeline": "buffer_type= MYSQL_TYPE_STRING;"
    },
    {
        "line": 173,
        "fullcodeline": "imp_sth->has_been_bound = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "sql_type == SQL_FLOAT    ||"
    },
    {
        "line": 157,
        "fullcodeline": "buffer= NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "sql_type == SQL_SMALLINT ||"
    },
    {
        "line": 103,
        "fullcodeline": "buffer_length = sizeof imp_sth->fbind[idx].numeric_val.lval;"
    },
    {
        "line": 105,
        "fullcodeline": "tmp = SvIV(imp_sth->params[idx].value);"
    },
    {
        "line": 108,
        "fullcodeline": "imp_sth->fbind[idx].numeric_val.lval= tmp;"
    },
    {
        "line": 109,
        "fullcodeline": "buffer=(void*)&(imp_sth->fbind[idx].numeric_val.lval);"
    },
    {
        "line": 119,
        "fullcodeline": "buffer_length = sizeof imp_sth->fbind[idx].numeric_val.dval;"
    },
    {
        "line": 120,
        "fullcodeline": "imp_sth->fbind[idx].numeric_val.dval= SvNV(imp_sth->params[idx].value);"
    },
    {
        "line": 121,
        "fullcodeline": "buffer=(char*)&(imp_sth->fbind[idx].numeric_val.dval);"
    },
    {
        "line": 144,
        "fullcodeline": "if (buffer_type == MYSQL_TYPE_STRING || buffer_type == MYSQL_TYPE_BLOB)"
    },
    {
        "line": 146,
        "fullcodeline": "buffer= SvPV(imp_sth->params[idx].value, slen);"
    },
    {
        "line": 147,
        "fullcodeline": "buffer_length= slen;"
    },
    {
        "line": 169,
        "fullcodeline": "if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)"
    },
    {
        "line": 170,
        "fullcodeline": "PerlIO_printf(DBIc_LOGPIO(imp_xxh),"
    },
    {
        "line": 42,
        "fullcodeline": "sql_type == SQL_INTEGER  ||"
    },
    {
        "line": 106,
        "fullcodeline": "if (tmp > INT32_MAX)"
    },
    {
        "line": 158,
        "fullcodeline": "if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)"
    },
    {
        "line": 159,
        "fullcodeline": "PerlIO_printf(DBIc_LOGPIO(imp_xxh),"
    },
    {
        "line": 41,
        "fullcodeline": "sql_type == SQL_DECIMAL  ||"
    },
    {
        "line": 52,
        "fullcodeline": "param_num, neatsvpv(value,0))));"
    },
    {
        "line": 101,
        "fullcodeline": "if (!SvIOK(imp_sth->params[idx].value) && DBIc_TRACE_LEVEL(imp_xxh) >= 2)"
    },
    {
        "line": 107,
        "fullcodeline": "croak(\"Could not bind %ld: Integer too large for MYSQL_TYPE_LONG\", tmp);"
    },
    {
        "line": 117,
        "fullcodeline": "if (!SvNOK(imp_sth->params[idx].value) && DBIc_TRACE_LEVEL(imp_xxh) >= 2)"
    },
    {
        "line": 122,
        "fullcodeline": "if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)"
    },
    {
        "line": 129,
        "fullcodeline": "if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)"
    },
    {
        "line": 135,
        "fullcodeline": "if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)"
    },
    {
        "line": 136,
        "fullcodeline": "PerlIO_printf(DBIc_LOGPIO(imp_xxh),"
    },
    {
        "line": 148,
        "fullcodeline": "if (DBIc_TRACE_LEVEL(imp_xxh) >= 2)"
    },
    {
        "line": 149,
        "fullcodeline": "PerlIO_printf(DBIc_LOGPIO(imp_xxh),"
    },
    {
        "line": 102,
        "fullcodeline": "PerlIO_printf(DBIc_LOGPIO(imp_xxh), \"\\t\\tTRY TO BIND AN INT NUMBER\\n\");"
    },
    {
        "line": 118,
        "fullcodeline": "PerlIO_printf(DBIc_LOGPIO(imp_xxh), \"\\t\\tTRY TO BIND A FLOAT NUMBER\\n\");"
    },
    {
        "line": 123,
        "fullcodeline": "PerlIO_printf(DBIc_LOGPIO(imp_xxh),"
    },
    {
        "line": 130,
        "fullcodeline": "PerlIO_printf(DBIc_LOGPIO(imp_xxh),"
    }
]