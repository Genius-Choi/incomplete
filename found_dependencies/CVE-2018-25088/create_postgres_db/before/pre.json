[
    {
        "line": 2,
        "fullcodeline": "if check_db_or_user_exists(connection_dict[\"db_name\"], connection_dict[\"db_username\"], config):"
    },
    {
        "line": 4,
        "fullcodeline": "with _create_pg_connection(config) as con:"
    },
    {
        "line": 3,
        "fullcodeline": "raise ValueError(\"db or user already exists\")"
    },
    {
        "line": 5,
        "fullcodeline": "con.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)"
    },
    {
        "line": 6,
        "fullcodeline": "with con.cursor() as cur:"
    },
    {
        "line": 7,
        "fullcodeline": "create_role = \"CREATE USER {db_username} WITH PASSWORD '{db_pwd}';\".format(**connection_dict)"
    },
    {
        "line": 8,
        "fullcodeline": "drop_role = \"DROP ROLE {db_username};\".format(**connection_dict)"
    },
    {
        "line": 9,
        "fullcodeline": "grant_role = 'GRANT {db_username} TO \"{postgraas_user}\";'.format("
    },
    {
        "line": 12,
        "fullcodeline": "create_database = \"CREATE DATABASE {db_name} OWNER {db_username};\".format(**connection_dict)"
    },
    {
        "line": 14,
        "fullcodeline": "cur.execute(create_role)"
    },
    {
        "line": 15,
        "fullcodeline": "cur.execute(grant_role)"
    },
    {
        "line": 21,
        "fullcodeline": "cur.execute(create_database)"
    },
    {
        "line": 10,
        "fullcodeline": "db_username=connection_dict['db_username'], postgraas_user=get_normalized_username(config['username'])"
    },
    {
        "line": 17,
        "fullcodeline": "raise ValueError(e.args[0])"
    },
    {
        "line": 23,
        "fullcodeline": "cur.execute(drop_role)"
    },
    {
        "line": 24,
        "fullcodeline": "raise ValueError(e.args[0])"
    }
]