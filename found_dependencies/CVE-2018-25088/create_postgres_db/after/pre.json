[
    {
        "line": 2,
        "fullcodeline": "if check_db_or_user_exists(connection_dict[\"db_name\"], connection_dict[\"db_username\"], config):"
    },
    {
        "line": 4,
        "fullcodeline": "with _create_pg_connection(config) as con:"
    },
    {
        "line": 3,
        "fullcodeline": "raise ValueError(\"db or user already exists\")"
    },
    {
        "line": 5,
        "fullcodeline": "con.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)"
    },
    {
        "line": 6,
        "fullcodeline": "with con.cursor() as cur:"
    },
    {
        "line": 8,
        "fullcodeline": "cur.execute(SQL(\"CREATE USER {} WITH PASSWORD %s;\").format("
    },
    {
        "line": 13,
        "fullcodeline": "cur.execute(SQL(\"GRANT {} TO {};\").format("
    },
    {
        "line": 22,
        "fullcodeline": "cur.execute(SQL(\"CREATE DATABASE {} OWNER {};\").format("
    },
    {
        "line": 10,
        "fullcodeline": "), ("
    },
    {
        "line": 18,
        "fullcodeline": "raise ValueError(e.args[0])"
    },
    {
        "line": 27,
        "fullcodeline": "cur.execute(SQL(\"DROP ROLE {};\").format("
    },
    {
        "line": 30,
        "fullcodeline": "raise ValueError(e.args[0])"
    },
    {
        "line": 9,
        "fullcodeline": "Identifier(connection_dict['db_username']),"
    },
    {
        "line": 14,
        "fullcodeline": "Identifier(connection_dict['db_username']),"
    },
    {
        "line": 15,
        "fullcodeline": "Identifier(get_normalized_username(config['username'])),"
    },
    {
        "line": 23,
        "fullcodeline": "Identifier(connection_dict['db_name']),"
    },
    {
        "line": 24,
        "fullcodeline": "Identifier(connection_dict['db_username']),"
    },
    {
        "line": 28,
        "fullcodeline": "Identifier(connection_dict['db_username']),"
    }
]