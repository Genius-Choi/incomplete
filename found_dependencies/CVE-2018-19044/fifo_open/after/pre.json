[
    {
        "line": 7,
        "fullcodeline": "sav_errno = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!(ret = mkfifo(fifo->name, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH)))"
    },
    {
        "line": 18,
        "fullcodeline": "if (!sav_errno || sav_errno == EEXIST) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (fifo->fd == -1) {"
    },
    {
        "line": 10,
        "fullcodeline": "fifo->created_fifo = true;"
    },
    {
        "line": 34,
        "fullcodeline": "FREE(fifo->name);"
    },
    {
        "line": 35,
        "fullcodeline": "fifo->name = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "sav_errno = errno;"
    },
    {
        "line": 24,
        "fullcodeline": "if ((fifo->fd = open(fifo->name, O_RDWR | O_CLOEXEC | O_NONBLOCK | O_NOFOLLOW)) == -1) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (sav_errno != EEXIST)"
    },
    {
        "line": 21,
        "fullcodeline": "notify_fifo_exec(master, script_exit, fifo, fifo->script);"
    },
    {
        "line": 25,
        "fullcodeline": "log_message(LOG_INFO, \"Unable to open %snotify fifo %s - errno %d\", type, fifo->name, errno);"
    },
    {
        "line": 15,
        "fullcodeline": "log_message(LOG_INFO, \"Unable to create %snotify fifo %s\", type, fifo->name);"
    },
    {
        "line": 27,
        "fullcodeline": "unlink(fifo->name);"
    },
    {
        "line": 28,
        "fullcodeline": "fifo->created_fifo = false;"
    }
]