[
    {
        "line": 33,
        "fullcodeline": "process = PexpectSizedWindowSpawn(cmd[0], cmd[1:], env={\"LC_ALL\": \"C\"}, timeout=None)"
    },
    {
        "line": 36,
        "fullcodeline": "process.setwinsize(0, columns)"
    },
    {
        "line": 37,
        "fullcodeline": "loggerinst.debug(\"Pseudo-PTY columns set to: %s\" % (process.getwinsize(),))"
    },
    {
        "line": 39,
        "fullcodeline": "process.expect(pexpect.EOF)"
    },
    {
        "line": 40,
        "fullcodeline": "output = process.before.decode()"
    },
    {
        "line": 44,
        "fullcodeline": "process.close()  # Per the pexpect API, this is necessary in order to get the return code"
    },
    {
        "line": 45,
        "fullcodeline": "return_code = process.exitstatus"
    },
    {
        "line": 22,
        "fullcodeline": "if isinstance(cmd, str):"
    },
    {
        "line": 28,
        "fullcodeline": "class PexpectSizedWindowSpawn(pexpect.spawn):"
    },
    {
        "line": 47,
        "fullcodeline": "return output, return_code"
    },
    {
        "line": 23,
        "fullcodeline": "raise TypeError(\"cmd should be a list, not a str\")"
    },
    {
        "line": 26,
        "fullcodeline": "loggerinst.debug(\"Calling command '%s'\" % \" \".join(cmd))"
    },
    {
        "line": 42,
        "fullcodeline": "loggerinst.info(output.rstrip(\"\\n\"))"
    }
]