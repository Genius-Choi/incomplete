[
    {
        "line": 35,
        "fullcodeline": "process = PexpectSizedWindowSpawn(cmd[0], cmd[1:], env={\"LC_ALL\": \"C\", \"LANG\": \"C\"}, timeout=None)"
    },
    {
        "line": 37,
        "fullcodeline": "process.setwinsize(1, columns)"
    },
    {
        "line": 38,
        "fullcodeline": "loggerinst.debug(\"Pseudo-PTY columns set to: %s\" % (process.getwinsize(),))"
    },
    {
        "line": 44,
        "fullcodeline": "process.expect(pexpect.EOF)"
    },
    {
        "line": 54,
        "fullcodeline": "process.close()"
    },
    {
        "line": 55,
        "fullcodeline": "return_code = process.exitstatus"
    },
    {
        "line": 57,
        "fullcodeline": "output = process.before.decode()"
    },
    {
        "line": 29,
        "fullcodeline": "if isinstance(cmd, str):"
    },
    {
        "line": 40,
        "fullcodeline": "for expect, send in expect_script:"
    },
    {
        "line": 61,
        "fullcodeline": "return output, return_code"
    },
    {
        "line": 30,
        "fullcodeline": "raise TypeError(\"cmd should be a list, not a str\")"
    },
    {
        "line": 33,
        "fullcodeline": "loggerinst.debug(\"Calling command '%s'\" % \" \".join(cmd))"
    },
    {
        "line": 46,
        "fullcodeline": "process.wait()"
    },
    {
        "line": 59,
        "fullcodeline": "loggerinst.info(output.rstrip(\"\\n\"))"
    },
    {
        "line": 41,
        "fullcodeline": "process.expect(expect)"
    },
    {
        "line": 42,
        "fullcodeline": "process.send(send)"
    },
    {
        "line": 51,
        "fullcodeline": "pass"
    }
]