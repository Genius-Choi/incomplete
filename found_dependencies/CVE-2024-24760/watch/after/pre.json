[
    {
        "line": 6,
        "fullcodeline": "logger.logInfo('Watching Redis channel F2B_CHANNEL')"
    },
    {
        "line": 7,
        "fullcodeline": "pubsub.subscribe('F2B_CHANNEL')"
    },
    {
        "line": 9,
        "fullcodeline": "while not quit_now:"
    },
    {
        "line": 11,
        "fullcodeline": "for item in pubsub.listen():"
    },
    {
        "line": 27,
        "fullcodeline": "logger.logWarn('Error reading log line from pubsub: %s' % ex)"
    },
    {
        "line": 28,
        "fullcodeline": "pubsub = None"
    },
    {
        "line": 29,
        "fullcodeline": "quit_now = True"
    },
    {
        "line": 30,
        "fullcodeline": "exit_code = 2"
    },
    {
        "line": 12,
        "fullcodeline": "refreshF2bregex()"
    },
    {
        "line": 13,
        "fullcodeline": "for rule_id, rule_regex in f2bregex.items():"
    },
    {
        "line": 14,
        "fullcodeline": "if item['data'] and item['type'] == 'message':"
    },
    {
        "line": 16,
        "fullcodeline": "result = re.search(rule_regex, item['data'])"
    },
    {
        "line": 20,
        "fullcodeline": "addr = result.group(1)"
    },
    {
        "line": 21,
        "fullcodeline": "ip = ipaddress.ip_address(addr)"
    },
    {
        "line": 24,
        "fullcodeline": "logger.logWarn('%s matched rule id %s (%s)' % (addr, rule_id, item['data']))"
    },
    {
        "line": 25,
        "fullcodeline": "ban(addr)"
    },
    {
        "line": 22,
        "fullcodeline": "if ip.is_private or ip.is_loopback:"
    },
    {
        "line": 18,
        "fullcodeline": "result = False"
    }
]