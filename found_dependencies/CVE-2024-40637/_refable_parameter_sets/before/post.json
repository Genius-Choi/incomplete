[
    {
        "line": 2,
        "fullcodeline": "sets = ["
    },
    {
        "line": 7,
        "fullcodeline": "sets.extend("
    },
    {
        "line": 19,
        "fullcodeline": "sets.extend("
    },
    {
        "line": 20,
        "fullcodeline": "["
    },
    {
        "line": 4,
        "fullcodeline": "FindNodeSpec(nodes=[], sources=[], package=None, version=None, expected=None),"
    },
    {
        "line": 5,
        "fullcodeline": "FindNodeSpec(nodes=[], sources=[], package=\"root\", version=None, expected=None),"
    },
    {
        "line": 9,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 21,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 28,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 36,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 43,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 50,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 57,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 64,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 71,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 78,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 86,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 94,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 101,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 108,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 116,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 124,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 131,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 138,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 146,
        "fullcodeline": "FindNodeSpec("
    },
    {
        "line": 22,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\")],"
    },
    {
        "line": 26,
        "fullcodeline": "expected=(\"root\", \"my_model\"),"
    },
    {
        "line": 29,
        "fullcodeline": "nodes=[MockNode(\"dep\", \"my_model\")],"
    },
    {
        "line": 37,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\", version=\"2\")],"
    },
    {
        "line": 41,
        "fullcodeline": "expected=(\"root\", \"my_model\", \"2\"),"
    },
    {
        "line": 44,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\", version=\"2\")],"
    },
    {
        "line": 48,
        "fullcodeline": "expected=(\"root\", \"my_model\", \"2\"),"
    },
    {
        "line": 51,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\", version=\"3\")],"
    },
    {
        "line": 58,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\", version=\"3\", is_latest_version=True)],"
    },
    {
        "line": 62,
        "fullcodeline": "expected=(\"root\", \"my_model\", \"3\"),"
    },
    {
        "line": 65,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\", version=\"3\", is_latest_version=False)],"
    },
    {
        "line": 72,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\", version=\"0\", is_latest_version=False)],"
    },
    {
        "line": 79,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\", version=\"0\", is_latest_version=True)],"
    },
    {
        "line": 83,
        "fullcodeline": "expected=(\"root\", \"my_model\", \"0\"),"
    },
    {
        "line": 88,
        "fullcodeline": "sources=[MockSource(\"root\", \"my_source\", \"my_model\")],"
    },
    {
        "line": 95,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\")],"
    },
    {
        "line": 96,
        "fullcodeline": "sources=[MockSource(\"root\", \"my_source\", \"my_model\")],"
    },
    {
        "line": 99,
        "fullcodeline": "expected=(\"root\", \"my_model\"),"
    },
    {
        "line": 102,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\")],"
    },
    {
        "line": 103,
        "fullcodeline": "sources=[MockSource(\"root\", \"my_source\", \"my_model\")],"
    },
    {
        "line": 106,
        "fullcodeline": "expected=(\"root\", \"my_model\"),"
    },
    {
        "line": 109,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\")],"
    },
    {
        "line": 110,
        "fullcodeline": "sources=[MockSource(\"root\", \"my_source\", \"my_model\")],"
    },
    {
        "line": 117,
        "fullcodeline": "nodes=[MockNode(\"project_a\", \"my_model\"), MockNode(\"project_b\", \"my_model\")],"
    },
    {
        "line": 121,
        "fullcodeline": "expected=(\"project_a\", \"my_model\"),"
    },
    {
        "line": 125,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\"), MockNode(\"project_a\", \"my_model\")],"
    },
    {
        "line": 129,
        "fullcodeline": "expected=(\"root\", \"my_model\"),"
    },
    {
        "line": 132,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\"), MockNode(\"project_a\", \"my_model\")],"
    },
    {
        "line": 136,
        "fullcodeline": "expected=(\"root\", \"my_model\"),"
    },
    {
        "line": 139,
        "fullcodeline": "nodes=[MockNode(\"root\", \"my_model\"), MockNode(\"project_a\", \"my_model\")],"
    },
    {
        "line": 143,
        "fullcodeline": "expected=(\"project_a\", \"my_model\"),"
    },
    {
        "line": 147,
        "fullcodeline": "nodes=["
    },
    {
        "line": 154,
        "fullcodeline": "expected=(\"project_a\", \"my_model\", \"1\"),"
    },
    {
        "line": 148,
        "fullcodeline": "MockNode(\"project_a\", \"my_model\", version=\"1\"),"
    },
    {
        "line": 149,
        "fullcodeline": "MockNode(\"project_b\", \"my_model\", version=\"2\"),"
    },
    {
        "line": 16,
        "fullcodeline": "for project in [\"root\", \"dep\"]"
    },
    {
        "line": 10,
        "fullcodeline": "nodes=[MockNode(project, \"my_model\")],"
    },
    {
        "line": 14,
        "fullcodeline": "expected=(project, \"my_model\"),"
    }
]