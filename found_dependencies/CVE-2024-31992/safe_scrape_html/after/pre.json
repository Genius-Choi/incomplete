[
    {
        "line": 7,
        "fullcodeline": "async with AsyncClient(transport=safehttp.AsyncSafeTransport()) as client:"
    },
    {
        "line": 8,
        "fullcodeline": "html_bytes = b\"\""
    },
    {
        "line": 22,
        "fullcodeline": "content = None"
    },
    {
        "line": 23,
        "fullcodeline": "encoding = resp.encoding"
    },
    {
        "line": 9,
        "fullcodeline": "async with client.stream(\"GET\", url, timeout=SCRAPER_TIMEOUT, headers={\"User-Agent\": _FIREFOX_UA}) as resp:"
    },
    {
        "line": 25,
        "fullcodeline": "if not html_bytes:"
    },
    {
        "line": 29,
        "fullcodeline": "if encoding is None:"
    },
    {
        "line": 30,
        "fullcodeline": "encoding = resp.apparent_encoding"
    },
    {
        "line": 34,
        "fullcodeline": "content = str(html_bytes, encoding, errors=\"replace\")"
    },
    {
        "line": 10,
        "fullcodeline": "start_time = time.time()"
    },
    {
        "line": 12,
        "fullcodeline": "async for chunk in resp.aiter_bytes(chunk_size=1024):"
    },
    {
        "line": 42,
        "fullcodeline": "content = str(html_bytes, errors=\"replace\")"
    },
    {
        "line": 13,
        "fullcodeline": "html_bytes += chunk"
    },
    {
        "line": 15,
        "fullcodeline": "if time.time() - start_time > SCRAPER_TIMEOUT:"
    },
    {
        "line": 16,
        "fullcodeline": "raise ForceTimeoutException()"
    }
]