[
    {
        "line": 5,
        "fullcodeline": "u32 __iomem *msg = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "ulong timeout = jiffies + TMOUT_INITOUTBOUND*HZ;"
    },
    {
        "line": 26,
        "fullcodeline": "status = dma_alloc_coherent(&pHba->pDev->dev, 4, &addr, GFP_KERNEL);"
    },
    {
        "line": 34,
        "fullcodeline": "writel(EIGHT_WORD_MSG_SIZE| SGL_OFFSET_6, &msg[0]);"
    },
    {
        "line": 35,
        "fullcodeline": "writel(I2O_CMD_OUTBOUND_INIT<<24 | HOST_TID<<12 | ADAPTER_TID, &msg[1]);"
    },
    {
        "line": 36,
        "fullcodeline": "writel(0, &msg[2]);"
    },
    {
        "line": 37,
        "fullcodeline": "writel(0x0106, &msg[3]);\t/* Transaction context */"
    },
    {
        "line": 38,
        "fullcodeline": "writel(4096, &msg[4]);\t\t/* Host page frame size */"
    },
    {
        "line": 39,
        "fullcodeline": "writel((REPLY_FRAME_SIZE)<<16|0x80, &msg[5]);\t/* Outbound msg frame size and Initcode */"
    },
    {
        "line": 40,
        "fullcodeline": "writel(0xD0000004, &msg[6]);\t\t/* Simple SG LE, EOB */"
    },
    {
        "line": 43,
        "fullcodeline": "writel(m, pHba->post_port);"
    },
    {
        "line": 71,
        "fullcodeline": "dma_free_coherent(&pHba->pDev->dev, 4, status, addr);"
    },
    {
        "line": 79,
        "fullcodeline": "pHba->reply_pool = dma_alloc_coherent(&pHba->pDev->dev,"
    },
    {
        "line": 22,
        "fullcodeline": "} while(m == EMPTY_QUEUE);"
    },
    {
        "line": 27,
        "fullcodeline": "if (!status) {"
    },
    {
        "line": 67,
        "fullcodeline": "if(*status != 0x04 /*I2O_EXEC_OUTBOUND_INIT_COMPLETE*/) {"
    },
    {
        "line": 73,
        "fullcodeline": "if(pHba->reply_pool != NULL) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (!pHba->reply_pool) {"
    },
    {
        "line": 87,
        "fullcodeline": "for(i = 0; i < pHba->reply_fifo_size; i++) {"
    },
    {
        "line": 11,
        "fullcodeline": "rmb();"
    },
    {
        "line": 12,
        "fullcodeline": "m = readl(pHba->post_port);"
    },
    {
        "line": 21,
        "fullcodeline": "schedule_timeout_uninterruptible(1);"
    },
    {
        "line": 74,
        "fullcodeline": "dma_free_coherent(&pHba->pDev->dev,"
    },
    {
        "line": 80,
        "fullcodeline": "pHba->reply_fifo_size * REPLY_FRAME_SIZE * 4,"
    },
    {
        "line": 88,
        "fullcodeline": "writel(pHba->reply_pool_pa + (i * REPLY_FRAME_SIZE * 4),"
    },
    {
        "line": 13,
        "fullcodeline": "if (m != EMPTY_QUEUE) {"
    },
    {
        "line": 17,
        "fullcodeline": "if(time_after(jiffies,timeout)){"
    },
    {
        "line": 31,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 69,
        "fullcodeline": "return -2;"
    },
    {
        "line": 75,
        "fullcodeline": "pHba->reply_fifo_size * REPLY_FRAME_SIZE * 4,"
    },
    {
        "line": 84,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 19,
        "fullcodeline": "return -ETIMEDOUT;"
    },
    {
        "line": 49,
        "fullcodeline": "if (*status != 0x01 /*I2O_EXEC_OUTBOUND_INIT_IN_PROGRESS*/) {"
    },
    {
        "line": 60,
        "fullcodeline": "return -ETIMEDOUT;"
    }
]