[
    {
        "line": 4,
        "fullcodeline": "adpt_hba* pHba = dev_id;"
    },
    {
        "line": 7,
        "fullcodeline": "u32 status=0;"
    },
    {
        "line": 9,
        "fullcodeline": "ulong flags = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "int handled = 0;"
    },
    {
        "line": 101,
        "fullcodeline": "handled = 1;"
    },
    {
        "line": 12,
        "fullcodeline": "if (pHba == NULL){"
    },
    {
        "line": 19,
        "fullcodeline": "while( readl(pHba->irq_mask) & I2O_INTERRUPT_PENDING_B) {"
    },
    {
        "line": 104,
        "fullcodeline": "return IRQ_RETVAL(handled);"
    },
    {
        "line": 17,
        "fullcodeline": "spin_lock_irqsave(pHba->host->host_lock, flags);"
    },
    {
        "line": 20,
        "fullcodeline": "m = readl(pHba->reply_port);"
    },
    {
        "line": 58,
        "fullcodeline": "context = readl(reply+8);"
    },
    {
        "line": 97,
        "fullcodeline": "writel(m, pHba->reply_port);"
    },
    {
        "line": 98,
        "fullcodeline": "wmb();"
    },
    {
        "line": 99,
        "fullcodeline": "rmb();"
    },
    {
        "line": 103,
        "fullcodeline": "spin_unlock_irqrestore(pHba->host->host_lock, flags);"
    },
    {
        "line": 21,
        "fullcodeline": "if(m == EMPTY_QUEUE){"
    },
    {
        "line": 31,
        "fullcodeline": "if (pHba->reply_pool_pa <= m &&"
    },
    {
        "line": 42,
        "fullcodeline": "if (readl(reply) & MSG_FAIL) {"
    },
    {
        "line": 59,
        "fullcodeline": "if(context & 0x40000000){ // IOCTL"
    },
    {
        "line": 66,
        "fullcodeline": "if(context & 0x80000000){ // Post wait message"
    },
    {
        "line": 23,
        "fullcodeline": "rmb();"
    },
    {
        "line": 24,
        "fullcodeline": "m = readl(pHba->reply_port);"
    },
    {
        "line": 32,
        "fullcodeline": "m < pHba->reply_pool_pa +"
    },
    {
        "line": 34,
        "fullcodeline": "reply = (u8 *)pHba->reply_pool +"
    },
    {
        "line": 43,
        "fullcodeline": "u32 old_m = readl(reply+28);"
    },
    {
        "line": 46,
        "fullcodeline": "PDEBUG(\"%s: Failed message\\n\",pHba->name);"
    },
    {
        "line": 53,
        "fullcodeline": "msg = pHba->msg_addr_virt + old_m;"
    },
    {
        "line": 54,
        "fullcodeline": "old_context = readl(msg+12);"
    },
    {
        "line": 55,
        "fullcodeline": "writel(old_context, reply+12);"
    },
    {
        "line": 56,
        "fullcodeline": "adpt_send_nop(pHba, old_m);"
    },
    {
        "line": 60,
        "fullcodeline": "void *p = adpt_ioctl_from_context(pHba, readl(reply+12));"
    },
    {
        "line": 67,
        "fullcodeline": "status = readl(reply+16);"
    },
    {
        "line": 84,
        "fullcodeline": "adpt_i2o_post_wait_complete(context, status);"
    },
    {
        "line": 25,
        "fullcodeline": "if(m == EMPTY_QUEUE){"
    },
    {
        "line": 39,
        "fullcodeline": "reply = (u8 *)bus_to_virt(m);"
    },
    {
        "line": 47,
        "fullcodeline": "if(old_m >= 0x100000){"
    },
    {
        "line": 61,
        "fullcodeline": "if( p != NULL) {"
    },
    {
        "line": 68,
        "fullcodeline": "if(status  >> 24){"
    },
    {
        "line": 73,
        "fullcodeline": "if(!(context & 0x40000000)) {"
    },
    {
        "line": 90,
        "fullcodeline": "cmd = scsi_host_find_tag(pHba->host,"
    },
    {
        "line": 33,
        "fullcodeline": "(pHba->reply_fifo_size * REPLY_FRAME_SIZE * 4)) {"
    },
    {
        "line": 35,
        "fullcodeline": "(m - pHba->reply_pool_pa);"
    },
    {
        "line": 49,
        "fullcodeline": "writel(m,pHba->reply_port);"
    },
    {
        "line": 62,
        "fullcodeline": "memcpy_fromio(p, reply, REPLY_FRAME_SIZE * 4);"
    },
    {
        "line": 69,
        "fullcodeline": "status &=  0xffff; /* Get detail status */"
    },
    {
        "line": 78,
        "fullcodeline": "cmd = scsi_host_find_tag(pHba->host,"
    },
    {
        "line": 92,
        "fullcodeline": "if(cmd != NULL){"
    },
    {
        "line": 71,
        "fullcodeline": "status = I2O_POST_WAIT_OK;"
    },
    {
        "line": 80,
        "fullcodeline": "if(cmd != NULL) {"
    },
    {
        "line": 91,
        "fullcodeline": "readl(reply + 12) - 1);"
    },
    {
        "line": 93,
        "fullcodeline": "scsi_dma_unmap(cmd);"
    },
    {
        "line": 94,
        "fullcodeline": "adpt_i2o_scsi_complete(reply, cmd);"
    },
    {
        "line": 79,
        "fullcodeline": "readl(reply + 12) - 1);"
    }
]