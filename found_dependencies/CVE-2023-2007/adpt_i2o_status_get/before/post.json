[
    {
        "line": 6,
        "fullcodeline": "u8 *status_block=NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "memset(pHba->status_block, 0, sizeof(i2o_status_block));"
    },
    {
        "line": 20,
        "fullcodeline": "status_block = (u8*)(pHba->status_block);"
    },
    {
        "line": 21,
        "fullcodeline": "timeout = jiffies+TMOUT_GETSTATUS*HZ;"
    },
    {
        "line": 39,
        "fullcodeline": "writel(NINE_WORD_MSG_SIZE|SGL_OFFSET_0, &msg[0]);"
    },
    {
        "line": 40,
        "fullcodeline": "writel(I2O_CMD_STATUS_GET<<24|HOST_TID<<12|ADAPTER_TID, &msg[1]);"
    },
    {
        "line": 41,
        "fullcodeline": "writel(1, &msg[2]);"
    },
    {
        "line": 42,
        "fullcodeline": "writel(0, &msg[3]);"
    },
    {
        "line": 43,
        "fullcodeline": "writel(0, &msg[4]);"
    },
    {
        "line": 44,
        "fullcodeline": "writel(0, &msg[5]);"
    },
    {
        "line": 45,
        "fullcodeline": "writel( dma_low(pHba->status_block_pa), &msg[6]);"
    },
    {
        "line": 46,
        "fullcodeline": "writel( dma_high(pHba->status_block_pa), &msg[7]);"
    },
    {
        "line": 47,
        "fullcodeline": "writel(sizeof(i2o_status_block), &msg[8]); // 88 bytes"
    },
    {
        "line": 50,
        "fullcodeline": "writel(m, pHba->post_port);"
    },
    {
        "line": 51,
        "fullcodeline": "wmb();"
    },
    {
        "line": 8,
        "fullcodeline": "if(pHba->status_block == NULL) {"
    },
    {
        "line": 34,
        "fullcodeline": "} while(m==EMPTY_QUEUE);"
    },
    {
        "line": 53,
        "fullcodeline": "while(status_block[87]!=0xff){"
    },
    {
        "line": 65,
        "fullcodeline": "if (pHba->post_fifo_size > MAX_TO_IOP_MESSAGES) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (pHba->reply_fifo_size > MAX_FROM_IOP_MESSAGES) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (dpt_dma64(pHba)) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (pHba->sg_tablesize > SG_LIST_ELEMENTS) {"
    },
    {
        "line": 9,
        "fullcodeline": "pHba->status_block = dma_alloc_coherent(&pHba->pDev->dev,"
    },
    {
        "line": 23,
        "fullcodeline": "rmb();"
    },
    {
        "line": 24,
        "fullcodeline": "m = readl(pHba->post_port);"
    },
    {
        "line": 33,
        "fullcodeline": "schedule_timeout_uninterruptible(1);"
    },
    {
        "line": 59,
        "fullcodeline": "rmb();"
    },
    {
        "line": 60,
        "fullcodeline": "schedule_timeout_uninterruptible(1);"
    },
    {
        "line": 66,
        "fullcodeline": "pHba->post_fifo_size = MAX_TO_IOP_MESSAGES;"
    },
    {
        "line": 71,
        "fullcodeline": "pHba->reply_fifo_size = MAX_FROM_IOP_MESSAGES;"
    },
    {
        "line": 76,
        "fullcodeline": "pHba->sg_tablesize"
    },
    {
        "line": 87,
        "fullcodeline": "pHba->sg_tablesize = SG_LIST_ELEMENTS;"
    },
    {
        "line": 12,
        "fullcodeline": "if(pHba->status_block == NULL) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (m != EMPTY_QUEUE) {"
    },
    {
        "line": 28,
        "fullcodeline": "if(time_after(jiffies,timeout)){"
    },
    {
        "line": 54,
        "fullcodeline": "if(time_after(jiffies,timeout)){"
    },
    {
        "line": 77,
        "fullcodeline": "= ((pHba->status_block->inbound_frame_size * 4"
    },
    {
        "line": 81,
        "fullcodeline": "pHba->sg_tablesize"
    },
    {
        "line": 82,
        "fullcodeline": "= ((pHba->status_block->inbound_frame_size * 4"
    },
    {
        "line": 16,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 31,
        "fullcodeline": "return -ETIMEDOUT;"
    },
    {
        "line": 57,
        "fullcodeline": "return -ETIMEDOUT;"
    },
    {
        "line": 78,
        "fullcodeline": "- 14 * sizeof(u32))"
    },
    {
        "line": 83,
        "fullcodeline": "- 12 * sizeof(u32))"
    }
]