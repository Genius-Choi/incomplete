[
    {
        "line": 3,
        "fullcodeline": "u32 msg[6];"
    },
    {
        "line": 4,
        "fullcodeline": "int ret, size = sizeof(i2o_hrt);"
    },
    {
        "line": 35,
        "fullcodeline": "} while(pHba->hrt == NULL);"
    },
    {
        "line": 16,
        "fullcodeline": "msg[0]= SIX_WORD_MSG_SIZE| SGL_OFFSET_4;"
    },
    {
        "line": 17,
        "fullcodeline": "msg[1]= I2O_CMD_HRT_GET<<24 | HOST_TID<<12 | ADAPTER_TID;"
    },
    {
        "line": 18,
        "fullcodeline": "msg[2]= 0;"
    },
    {
        "line": 19,
        "fullcodeline": "msg[3]= 0;"
    },
    {
        "line": 20,
        "fullcodeline": "msg[4]= (0xD0000000 | size);    /* Simple transaction */"
    },
    {
        "line": 21,
        "fullcodeline": "msg[5]= (u32)pHba->hrt_pa;\t/* Dump it here */"
    },
    {
        "line": 7,
        "fullcodeline": "if (pHba->hrt == NULL) {"
    },
    {
        "line": 23,
        "fullcodeline": "if ((ret = adpt_i2o_post_wait(pHba, msg, sizeof(msg),20))) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (pHba->hrt->num_entries * pHba->hrt->entry_len << 2 > size) {"
    },
    {
        "line": 8,
        "fullcodeline": "pHba->hrt = dma_alloc_coherent(&pHba->pDev->dev,"
    },
    {
        "line": 29,
        "fullcodeline": "int newsize = pHba->hrt->num_entries * pHba->hrt->entry_len << 2;"
    },
    {
        "line": 30,
        "fullcodeline": "dma_free_coherent(&pHba->pDev->dev, size,"
    },
    {
        "line": 32,
        "fullcodeline": "size = newsize;"
    },
    {
        "line": 33,
        "fullcodeline": "pHba->hrt = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "if (pHba->hrt == NULL) {"
    },
    {
        "line": 12,
        "fullcodeline": "return -ENOMEM;"
    }
]