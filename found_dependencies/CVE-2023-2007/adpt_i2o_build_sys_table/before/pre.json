[
    {
        "line": 3,
        "fullcodeline": "adpt_hba* pHba = hba_chain;"
    },
    {
        "line": 4,
        "fullcodeline": "int count = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "sys_tbl_len = sizeof(struct i2o_sys_tbl) +\t// Header + IOPs"
    },
    {
        "line": 13,
        "fullcodeline": "sys_tbl = dma_alloc_coherent(&pHba->pDev->dev,"
    },
    {
        "line": 20,
        "fullcodeline": "sys_tbl->num_entries = hba_count;"
    },
    {
        "line": 21,
        "fullcodeline": "sys_tbl->version = I2OVERSION;"
    },
    {
        "line": 15,
        "fullcodeline": "if (!sys_tbl) {"
    },
    {
        "line": 22,
        "fullcodeline": "sys_tbl->change_ind = sys_tbl_ind++;"
    },
    {
        "line": 24,
        "fullcodeline": "for(pHba = hba_chain; pHba; pHba = pHba->next) {"
    },
    {
        "line": 7,
        "fullcodeline": "dma_free_coherent(&pHba->pDev->dev, sys_tbl_len,"
    },
    {
        "line": 11,
        "fullcodeline": "(hba_count) * sizeof(struct i2o_sys_tbl_entry);"
    },
    {
        "line": 41,
        "fullcodeline": "addr = pHba->base_addr_phys + 0x40;"
    },
    {
        "line": 17,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 27,
        "fullcodeline": "if (adpt_i2o_status_get(pHba)) {"
    },
    {
        "line": 39,
        "fullcodeline": "sys_tbl->iops[count].last_changed = sys_tbl_ind - 1; // ??"
    },
    {
        "line": 42,
        "fullcodeline": "sys_tbl->iops[count].inbound_low = dma_low(addr);"
    },
    {
        "line": 43,
        "fullcodeline": "sys_tbl->iops[count].inbound_high = dma_high(addr);"
    }
]