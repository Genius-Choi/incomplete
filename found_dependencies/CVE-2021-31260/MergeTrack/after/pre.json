[
    {
        "line": 9,
        "fullcodeline": "Bool first_samp_in_traf=GF_TRUE;"
    },
    {
        "line": 10,
        "fullcodeline": "Bool store_traf_map=GF_FALSE;"
    },
    {
        "line": 11,
        "fullcodeline": "u8 *moof_template=NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "u32 moof_template_size=0;"
    },
    {
        "line": 13,
        "fullcodeline": "Bool is_seg_start = GF_FALSE;"
    },
    {
        "line": 14,
        "fullcodeline": "u64 seg_start=0, sidx_start=0, sidx_end=0, frag_start=0, last_dts=0;"
    },
    {
        "line": 44,
        "fullcodeline": "DescIndex = (traf->tfhd->flags & GF_ISOM_TRAF_SAMPLE_DESC) ? traf->tfhd->sample_desc_index : traf->trex->def_sample_desc_index;"
    },
    {
        "line": 65,
        "fullcodeline": "def_duration = (traf->tfhd->flags & GF_ISOM_TRAF_SAMPLE_DUR) ? traf->tfhd->def_sample_duration : traf->trex->def_sample_duration;"
    },
    {
        "line": 66,
        "fullcodeline": "def_size = (traf->tfhd->flags & GF_ISOM_TRAF_SAMPLE_SIZE) ? traf->tfhd->def_sample_size : traf->trex->def_sample_size;"
    },
    {
        "line": 67,
        "fullcodeline": "def_flags = (traf->tfhd->flags & GF_ISOM_TRAF_SAMPLE_FLAGS) ? traf->tfhd->def_sample_flags : traf->trex->def_sample_flags;"
    },
    {
        "line": 70,
        "fullcodeline": "base_offset = moof_offset;"
    },
    {
        "line": 79,
        "fullcodeline": "chunk_size = 0;"
    },
    {
        "line": 80,
        "fullcodeline": "prev_trun_data_offset = 0;"
    },
    {
        "line": 81,
        "fullcodeline": "data_offset = 0;"
    },
    {
        "line": 82,
        "fullcodeline": "traf_duration = 0;"
    },
    {
        "line": 179,
        "fullcodeline": "sample_index = 0;"
    },
    {
        "line": 180,
        "fullcodeline": "i=0;"
    },
    {
        "line": 533,
        "fullcodeline": "track_num = gf_isom_get_tracknum_from_id(trak->moov, trak->Header->trackID);"
    },
    {
        "line": 30,
        "fullcodeline": "if (trak->Header->trackID != traf->tfhd->trackID) return GF_OK;"
    },
    {
        "line": 45,
        "fullcodeline": "if (!DescIndex) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (traf->tfhd->flags & GF_ISOM_TRAF_BASE_OFFSET)"
    },
    {
        "line": 85,
        "fullcodeline": "if (traf->tfdt && is_first_merge) {"
    },
    {
        "line": 181,
        "fullcodeline": "while ((trun = (GF_TrackFragmentRunBox *)gf_list_enum(traf->TrackRuns, &i))) {"
    },
    {
        "line": 534,
        "fullcodeline": "if (gf_isom_is_cenc_media(trak->moov->mov, track_num, DescIndex)"
    },
    {
        "line": 31,
        "fullcodeline": "if (!trak->Media->information->sampleTable"
    },
    {
        "line": 35,
        "fullcodeline": "|| !trak->Media->information->sampleTable->ChunkOffset"
    },
    {
        "line": 46,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] default sample description set to 0, likely broken ! Fixing to 1\\n\" ));"
    },
    {
        "line": 47,
        "fullcodeline": "DescIndex = 1;"
    },
    {
        "line": 73,
        "fullcodeline": "base_offset = traf->tfhd->base_data_offset;"
    },
    {
        "line": 96,
        "fullcodeline": "trak->dts_at_seg_start = traf->tfdt->baseMediaDecodeTime;"
    },
    {
        "line": 103,
        "fullcodeline": "trak->last_tfxd_value = traf->tfxd->absolute_time_in_track_timescale;"
    },
    {
        "line": 104,
        "fullcodeline": "trak->last_tfxd_value += traf->tfxd->fragment_duration_in_track_timescale;"
    },
    {
        "line": 108,
        "fullcodeline": "trak->tfrf = traf->tfrf;"
    },
    {
        "line": 109,
        "fullcodeline": "gf_list_del_item(traf->child_boxes, traf->tfrf);"
    },
    {
        "line": 110,
        "fullcodeline": "gf_list_add(trak->child_boxes, trak->tfrf);"
    },
    {
        "line": 114,
        "fullcodeline": "store_traf_map = GF_TRUE;"
    },
    {
        "line": 172,
        "fullcodeline": "frag_start = trak->moov->mov->current_top_box_start;"
    },
    {
        "line": 369,
        "fullcodeline": "if (trak->moov->mov->is_smooth && !traf->tfdt && !traf->tfxd) {"
    },
    {
        "line": 372,
        "fullcodeline": "trak->dts_at_next_seg_start += last_dts;"
    },
    {
        "line": 374,
        "fullcodeline": "if (traf_duration && trak->editBox && trak->editBox->editList) {"
    },
    {
        "line": 407,
        "fullcodeline": "u32 *new_idx = NULL, new_idx_count=0;"
    },
    {
        "line": 415,
        "fullcodeline": "groupDescs = trak->Media->information->sampleTable->sampleGroupsDescription;"
    },
    {
        "line": 471,
        "fullcodeline": "groups = trak->Media->information->sampleTable->sampleGroups;"
    },
    {
        "line": 537,
        "fullcodeline": "GF_SampleEncryptionBox *senc = NULL;"
    },
    {
        "line": 539,
        "fullcodeline": "gf_isom_get_cenc_info(trak->moov->mov, track_num, DescIndex, NULL, &scheme_type, NULL);"
    },
    {
        "line": 34,
        "fullcodeline": "|| !trak->Media->information->sampleTable->SampleToChunk"
    },
    {
        "line": 183,
        "fullcodeline": "for (j=0; j<trun->sample_count; j++) {"
    },
    {
        "line": 375,
        "fullcodeline": "for (i=0; i<gf_list_count(trak->editBox->editList->entryList); i++) {"
    },
    {
        "line": 409,
        "fullcodeline": "if (!trak->Media->information->sampleTable->sampleGroups)"
    },
    {
        "line": 412,
        "fullcodeline": "if (!trak->Media->information->sampleTable->sampleGroupsDescription)"
    },
    {
        "line": 416,
        "fullcodeline": "for (i=0; i<gf_list_count(traf->sampleGroupsDescription); i++) {"
    },
    {
        "line": 472,
        "fullcodeline": "for (i=0; i<gf_list_count(traf->sampleGroups); i++) {"
    },
    {
        "line": 574,
        "fullcodeline": "if (gf_isom_cenc_has_saiz_saio_traf(traf, scheme_type)) {"
    },
    {
        "line": 33,
        "fullcodeline": "|| !trak->Media->information->sampleTable->TimeToSample"
    },
    {
        "line": 48,
        "fullcodeline": "} else if (DescIndex > gf_list_count(trak->Media->information->sampleTable->SampleDescription->child_boxes)) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (trak->moov->mov->NextMoofNumber && trak->present_in_scalable_segment && trak->sample_count_at_seg_start && (trak->dts_at_seg_start != traf->tfdt->baseMediaDecodeTime)) {"
    },
    {
        "line": 88,
        "fullcodeline": "s32 drift = (s32) ((s64) traf->tfdt->baseMediaDecodeTime - (s64)trak->dts_at_seg_start);"
    },
    {
        "line": 107,
        "fullcodeline": "if (trak->tfrf) gf_isom_box_del_parent(&trak->child_boxes, (GF_Box *)trak->tfrf);"
    },
    {
        "line": 116,
        "fullcodeline": "GF_MovieFragmentBox *moof_clone = NULL;"
    },
    {
        "line": 162,
        "fullcodeline": "is_seg_start = GF_TRUE;"
    },
    {
        "line": 163,
        "fullcodeline": "seg_start = trak->moov->mov->styp_start_offset;"
    },
    {
        "line": 166,
        "fullcodeline": "is_seg_start = GF_TRUE;"
    },
    {
        "line": 167,
        "fullcodeline": "sidx_start = trak->moov->mov->sidx_start_offset;"
    },
    {
        "line": 168,
        "fullcodeline": "sidx_end = trak->moov->mov->sidx_end_offset;"
    },
    {
        "line": 192,
        "fullcodeline": "size = def_size;"
    },
    {
        "line": 193,
        "fullcodeline": "duration = def_duration;"
    },
    {
        "line": 194,
        "fullcodeline": "flags = def_flags;"
    },
    {
        "line": 198,
        "fullcodeline": "cts_offset = ent->CTS_Offset;"
    },
    {
        "line": 246,
        "fullcodeline": "ent->size = size;"
    },
    {
        "line": 247,
        "fullcodeline": "ent->Duration = duration;"
    },
    {
        "line": 248,
        "fullcodeline": "ent->flags = flags;"
    },
    {
        "line": 249,
        "fullcodeline": "ent->CTS_Offset = cts_offset;"
    },
    {
        "line": 251,
        "fullcodeline": "last_dts += duration;"
    },
    {
        "line": 259,
        "fullcodeline": "e = stbl_AppendSize(trak->Media->information->sampleTable, size, ent->nb_pack);"
    },
    {
        "line": 268,
        "fullcodeline": "e = stbl_AppendTime(trak->Media->information->sampleTable, duration, ent->nb_pack);"
    },
    {
        "line": 327,
        "fullcodeline": "chunk_size += size;"
    },
    {
        "line": 343,
        "fullcodeline": "traf_duration += duration;"
    },
    {
        "line": 345,
        "fullcodeline": "e = stbl_AppendCTSOffset(trak->Media->information->sampleTable, cts_offset);"
    },
    {
        "line": 348,
        "fullcodeline": "sync = GF_ISOM_GET_FRAG_SYNC(flags);"
    },
    {
        "line": 352,
        "fullcodeline": "e = stbl_AppendRAP(trak->Media->information->sampleTable, sync);"
    },
    {
        "line": 354,
        "fullcodeline": "pad = GF_ISOM_GET_FRAG_PAD(flags);"
    },
    {
        "line": 359,
        "fullcodeline": "degr = GF_ISOM_GET_FRAG_DEG(flags);"
    },
    {
        "line": 364,
        "fullcodeline": "e = stbl_AppendDependencyType(trak->Media->information->sampleTable, GF_ISOM_GET_FRAG_LEAD(flags), GF_ISOM_GET_FRAG_DEPENDS(flags), GF_ISOM_GET_FRAG_DEPENDED(flags), GF_ISOM_GET_FRAG_REDUNDANT(flags));"
    },
    {
        "line": 371,
        "fullcodeline": "trak->dts_at_seg_start = trak->dts_at_next_seg_start;"
    },
    {
        "line": 376,
        "fullcodeline": "GF_EdtsEntry *edts_e = gf_list_get(trak->editBox->editList->entryList, i);"
    },
    {
        "line": 410,
        "fullcodeline": "trak->Media->information->sampleTable->sampleGroups = gf_list_new();"
    },
    {
        "line": 413,
        "fullcodeline": "trak->Media->information->sampleTable->sampleGroupsDescription = gf_list_new();"
    },
    {
        "line": 417,
        "fullcodeline": "GF_SampleGroupDescriptionBox *new_sgdesc = NULL;"
    },
    {
        "line": 418,
        "fullcodeline": "GF_SampleGroupDescriptionBox *sgdesc = gf_list_get(traf->sampleGroupsDescription, i);"
    },
    {
        "line": 473,
        "fullcodeline": "GF_SampleGroupBox *stbl_group = NULL;"
    },
    {
        "line": 474,
        "fullcodeline": "GF_SampleGroupBox *frag_group = gf_list_get(traf->sampleGroups, i);"
    },
    {
        "line": 580,
        "fullcodeline": "GF_SampleAuxiliaryInfoOffsetBox *saio = NULL;"
    },
    {
        "line": 581,
        "fullcodeline": "GF_SampleAuxiliaryInfoSizeBox *saiz = NULL;"
    },
    {
        "line": 583,
        "fullcodeline": "offset = nb_saio = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "|| !trak->Media->information->sampleTable->SampleSize"
    },
    {
        "line": 49,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] default sample description set to %d but only %d sample description(s), likely broken ! Fixing to 1\\n\", DescIndex, gf_list_count(trak->Media->information->sampleTable->SampleDescription->child_boxes)));"
    },
    {
        "line": 50,
        "fullcodeline": "DescIndex = 1;"
    },
    {
        "line": 76,
        "fullcodeline": "else if (!(traf->tfhd->flags & GF_ISOM_MOOF_BASE_OFFSET))"
    },
    {
        "line": 77,
        "fullcodeline": "base_offset = *cumulated_offset;"
    },
    {
        "line": 99,
        "fullcodeline": "trak->dts_at_seg_start = traf->tfxd->absolute_time_in_track_timescale;"
    },
    {
        "line": 175,
        "fullcodeline": "store_traf_map = GF_TRUE;"
    },
    {
        "line": 186,
        "fullcodeline": "if (j<trun->nb_samples) {"
    },
    {
        "line": 254,
        "fullcodeline": "if (!trak->Media->information->sampleTable->SampleSize) {"
    },
    {
        "line": 263,
        "fullcodeline": "if (!trak->Media->information->sampleTable->TimeToSample) {"
    },
    {
        "line": 272,
        "fullcodeline": "if (!j) {"
    },
    {
        "line": 337,
        "fullcodeline": "if (ent->nb_pack>1) {"
    },
    {
        "line": 349,
        "fullcodeline": "if (trak->Media->information->sampleTable->no_sync_found && sync) {"
    },
    {
        "line": 419,
        "fullcodeline": "for (j=0; j<gf_list_count(groupDescs); j++) {"
    },
    {
        "line": 425,
        "fullcodeline": "if (!new_sgdesc) {"
    },
    {
        "line": 477,
        "fullcodeline": "for (j=0; j<gf_list_count(groups); j++) {"
    },
    {
        "line": 483,
        "fullcodeline": "if (!stbl_group) {"
    },
    {
        "line": 542,
        "fullcodeline": "for (i = 0; i < gf_list_count(trak->Media->information->sampleTable->child_boxes); i++) {"
    },
    {
        "line": 555,
        "fullcodeline": "if (!senc && trak->sample_encryption)"
    },
    {
        "line": 558,
        "fullcodeline": "if (!senc) {"
    },
    {
        "line": 585,
        "fullcodeline": "for (i = 0; i < gf_list_count(traf->sai_offsets); i++) {"
    },
    {
        "line": 602,
        "fullcodeline": "for (i = 0; i < gf_list_count(traf->sai_sizes); i++) {"
    },
    {
        "line": 614,
        "fullcodeline": "if (saiz && saio && senc) {"
    },
    {
        "line": 140,
        "fullcodeline": "bs = gf_bs_new(NULL, 0, GF_BITSTREAM_WRITE);"
    },
    {
        "line": 154,
        "fullcodeline": "gf_isom_box_write((GF_Box *)moof_clone, bs);"
    },
    {
        "line": 157,
        "fullcodeline": "gf_bs_get_content(bs, &moof_template, &moof_template_size);"
    },
    {
        "line": 169,
        "fullcodeline": "if (! seg_start || (sidx_start<seg_start))"
    },
    {
        "line": 170,
        "fullcodeline": "seg_start = sidx_start;"
    },
    {
        "line": 187,
        "fullcodeline": "ent = &trun->samples[j];"
    },
    {
        "line": 236,
        "fullcodeline": "if (trun->flags & GF_ISOM_TRUN_DURATION) duration = ent->Duration;"
    },
    {
        "line": 237,
        "fullcodeline": "if (trun->flags & GF_ISOM_TRUN_SIZE) size = ent->size;"
    },
    {
        "line": 238,
        "fullcodeline": "if (trun->flags & GF_ISOM_TRUN_FLAGS) {"
    },
    {
        "line": 255,
        "fullcodeline": "trak->Media->information->sampleTable->SampleSize = (GF_SampleSizeBox *) gf_isom_box_new_parent(&trak->Media->information->sampleTable->child_boxes, GF_ISOM_BOX_TYPE_STSZ);"
    },
    {
        "line": 264,
        "fullcodeline": "trak->Media->information->sampleTable->TimeToSample = (GF_TimeToSampleBox *) gf_isom_box_new_parent(&trak->Media->information->sampleTable->child_boxes, GF_ISOM_BOX_TYPE_STTS);"
    },
    {
        "line": 274,
        "fullcodeline": "data_offset = base_offset;"
    },
    {
        "line": 303,
        "fullcodeline": "final_offset = data_offset;"
    },
    {
        "line": 315,
        "fullcodeline": "e = stbl_AppendChunk(trak->Media->information->sampleTable, final_offset);"
    },
    {
        "line": 323,
        "fullcodeline": "e = stbl_AppendSampleToChunk(trak->Media->information->sampleTable,"
    },
    {
        "line": 330,
        "fullcodeline": "first_samp_in_traf = GF_FALSE;"
    },
    {
        "line": 331,
        "fullcodeline": "e = stbl_AppendTrafMap(trak->Media->information->sampleTable, is_seg_start, seg_start, frag_start, moof_template, moof_template_size, sidx_start, sidx_end);"
    },
    {
        "line": 334,
        "fullcodeline": "moof_template = NULL;"
    },
    {
        "line": 335,
        "fullcodeline": "moof_template_size = 0;"
    },
    {
        "line": 338,
        "fullcodeline": "j+= ent->nb_pack-1;"
    },
    {
        "line": 339,
        "fullcodeline": "traf_duration += ent->nb_pack*duration;"
    },
    {
        "line": 350,
        "fullcodeline": "trak->Media->information->sampleTable->no_sync_found = 0;"
    },
    {
        "line": 356,
        "fullcodeline": "e = stbl_AppendPadding(trak->Media->information->sampleTable, pad);"
    },
    {
        "line": 361,
        "fullcodeline": "e = stbl_AppendDegradation(trak->Media->information->sampleTable, degr);"
    },
    {
        "line": 378,
        "fullcodeline": "u64 extend_dur = traf_duration;"
    },
    {
        "line": 379,
        "fullcodeline": "extend_dur *= trak->moov->mvhd->timeScale;"
    },
    {
        "line": 380,
        "fullcodeline": "extend_dur /= trak->Media->mediaHeader->timeScale;"
    },
    {
        "line": 381,
        "fullcodeline": "edts_e->segmentDuration += extend_dur;"
    },
    {
        "line": 420,
        "fullcodeline": "new_sgdesc = gf_list_get(groupDescs, j);"
    },
    {
        "line": 422,
        "fullcodeline": "new_sgdesc = NULL;"
    },
    {
        "line": 426,
        "fullcodeline": "gf_list_add(groupDescs, sgdesc);"
    },
    {
        "line": 427,
        "fullcodeline": "gf_list_add(trak->Media->information->sampleTable->child_boxes, sgdesc);"
    },
    {
        "line": 428,
        "fullcodeline": "gf_list_rem(traf->sampleGroupsDescription, i);"
    },
    {
        "line": 429,
        "fullcodeline": "gf_list_del_item(traf->child_boxes, sgdesc);"
    },
    {
        "line": 430,
        "fullcodeline": "i--;"
    },
    {
        "line": 478,
        "fullcodeline": "stbl_group = gf_list_get(groups, j);"
    },
    {
        "line": 481,
        "fullcodeline": "stbl_group = NULL;"
    },
    {
        "line": 484,
        "fullcodeline": "stbl_group = (GF_SampleGroupBox *) gf_isom_box_new_parent(&trak->Media->information->sampleTable->child_boxes, GF_ISOM_BOX_TYPE_SBGP);"
    },
    {
        "line": 486,
        "fullcodeline": "stbl_group->grouping_type = frag_group->grouping_type;"
    },
    {
        "line": 487,
        "fullcodeline": "stbl_group->grouping_type_parameter = frag_group->grouping_type_parameter;"
    },
    {
        "line": 488,
        "fullcodeline": "stbl_group->version = frag_group->version;"
    },
    {
        "line": 489,
        "fullcodeline": "gf_list_add(groups, stbl_group);"
    },
    {
        "line": 543,
        "fullcodeline": "GF_Box *a = (GF_Box *)gf_list_get(trak->Media->information->sampleTable->child_boxes, i);"
    },
    {
        "line": 556,
        "fullcodeline": "senc = trak->sample_encryption;"
    },
    {
        "line": 567,
        "fullcodeline": "trak->sample_encryption = senc;"
    },
    {
        "line": 569,
        "fullcodeline": "gf_list_add(trak->child_boxes, senc);"
    },
    {
        "line": 586,
        "fullcodeline": "saio = (GF_SampleAuxiliaryInfoOffsetBox *)gf_list_get(traf->sai_offsets, i);"
    },
    {
        "line": 587,
        "fullcodeline": "aux_info_type = saio->aux_info_type;"
    },
    {
        "line": 600,
        "fullcodeline": "saio = NULL;"
    },
    {
        "line": 603,
        "fullcodeline": "saiz = (GF_SampleAuxiliaryInfoSizeBox *)gf_list_get(traf->sai_sizes, i);"
    },
    {
        "line": 604,
        "fullcodeline": "aux_info_type = saiz->aux_info_type;"
    },
    {
        "line": 612,
        "fullcodeline": "saiz = NULL;"
    },
    {
        "line": 122,
        "fullcodeline": "for (i=0; i<gf_list_count(moof_clone->TrackList); i++) {"
    },
    {
        "line": 189,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Track %d doesn't have enough trun entries (%d) compared to sample count (%d) in run\\n\", traf->trex->trackID, trun->nb_samples, trun->sample_count ));"
    },
    {
        "line": 239,
        "fullcodeline": "flags = ent->flags;"
    },
    {
        "line": 256,
        "fullcodeline": "if (!trak->Media->information->sampleTable->SampleSize)"
    },
    {
        "line": 265,
        "fullcodeline": "if (!trak->Media->information->sampleTable->TimeToSample)"
    },
    {
        "line": 276,
        "fullcodeline": "if (trun->flags & GF_ISOM_TRUN_DATA_OFFSET) {"
    },
    {
        "line": 310,
        "fullcodeline": "if (!trak->Media->information->sampleTable->ChunkOffset) {"
    },
    {
        "line": 318,
        "fullcodeline": "if (!trak->Media->information->sampleTable->SampleToChunk) {"
    },
    {
        "line": 421,
        "fullcodeline": "if (new_sgdesc->grouping_type==sgdesc->grouping_type) break;"
    },
    {
        "line": 440,
        "fullcodeline": "new_idx_count = gf_list_count(sgdesc->group_descriptions);"
    },
    {
        "line": 441,
        "fullcodeline": "new_idx = (u32 *)gf_malloc(new_idx_count * sizeof(u32));"
    },
    {
        "line": 444,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 485,
        "fullcodeline": "if (!stbl_group) return GF_OUT_OF_MEM;"
    },
    {
        "line": 494,
        "fullcodeline": "for (j = 0; j < frag_group->entry_count; j++)"
    },
    {
        "line": 511,
        "fullcodeline": "stbl_group->sample_entries = gf_realloc(stbl_group->sample_entries, sizeof(GF_SampleGroupEntry) * (stbl_group->entry_count + frag_group->entry_count));"
    },
    {
        "line": 524,
        "fullcodeline": "memcpy(&stbl_group->sample_entries[stbl_group->entry_count], &frag_group->sample_entries[0], sizeof(GF_SampleGroupEntry) * frag_group->entry_count);"
    },
    {
        "line": 525,
        "fullcodeline": "stbl_group->entry_count += frag_group->entry_count;"
    },
    {
        "line": 544,
        "fullcodeline": "if (a->type != traf->sample_encryption->type) continue;"
    },
    {
        "line": 559,
        "fullcodeline": "if (traf->sample_encryption->piff_type==1) {"
    },
    {
        "line": 565,
        "fullcodeline": "if (!trak->Media->information->sampleTable->child_boxes) trak->Media->information->sampleTable->child_boxes = gf_list_new();"
    },
    {
        "line": 568,
        "fullcodeline": "if (!trak->child_boxes) trak->child_boxes = gf_list_new();"
    },
    {
        "line": 588,
        "fullcodeline": "if (!aux_info_type) aux_info_type = scheme_type;"
    },
    {
        "line": 605,
        "fullcodeline": "if (!aux_info_type) aux_info_type = scheme_type;"
    },
    {
        "line": 615,
        "fullcodeline": "for (i = 0; i < saiz->sample_count; i++) {"
    },
    {
        "line": 123,
        "fullcodeline": "GF_TrackFragmentBox *traf_clone = gf_list_get(moof_clone->TrackList, i);"
    },
    {
        "line": 124,
        "fullcodeline": "gf_isom_box_array_reset_parent(&traf_clone->child_boxes, traf_clone->TrackRuns);"
    },
    {
        "line": 125,
        "fullcodeline": "gf_isom_box_array_reset_parent(&traf_clone->child_boxes, traf_clone->sampleGroups);"
    },
    {
        "line": 126,
        "fullcodeline": "gf_isom_box_array_reset_parent(&traf_clone->child_boxes, traf_clone->sampleGroupsDescription);"
    },
    {
        "line": 127,
        "fullcodeline": "gf_isom_box_array_reset_parent(&traf_clone->child_boxes, traf_clone->sub_samples);"
    },
    {
        "line": 128,
        "fullcodeline": "gf_isom_box_array_reset_parent(&traf_clone->child_boxes, traf_clone->sai_offsets);"
    },
    {
        "line": 129,
        "fullcodeline": "gf_isom_box_array_reset_parent(&traf_clone->child_boxes, traf_clone->sai_sizes);"
    },
    {
        "line": 143,
        "fullcodeline": "gf_isom_box_size(trak->moov->mov->seg_styp);"
    },
    {
        "line": 144,
        "fullcodeline": "gf_isom_box_write(trak->moov->mov->seg_styp, bs);"
    },
    {
        "line": 148,
        "fullcodeline": "gf_isom_box_write((GF_Box *)trak->moov->mov->root_sidx, bs);"
    },
    {
        "line": 151,
        "fullcodeline": "gf_isom_box_size(trak->moov->mov->seg_ssix);"
    },
    {
        "line": 152,
        "fullcodeline": "gf_isom_box_write(trak->moov->mov->seg_ssix, bs);"
    },
    {
        "line": 277,
        "fullcodeline": "data_offset += trun->data_offset;"
    },
    {
        "line": 279,
        "fullcodeline": "chunk_size = 0;"
    },
    {
        "line": 281,
        "fullcodeline": "prev_trun_data_offset = trun->data_offset;"
    },
    {
        "line": 307,
        "fullcodeline": "final_offset += trak->moov->compressed_diff;"
    },
    {
        "line": 311,
        "fullcodeline": "trak->Media->information->sampleTable->ChunkOffset = gf_isom_box_new_parent(&trak->Media->information->sampleTable->child_boxes, GF_ISOM_BOX_TYPE_STCO);"
    },
    {
        "line": 319,
        "fullcodeline": "trak->Media->information->sampleTable->SampleToChunk = (GF_SampleToChunkBox *) gf_isom_box_new_parent(&trak->Media->information->sampleTable->child_boxes, GF_ISOM_BOX_TYPE_STSC);"
    },
    {
        "line": 383,
        "fullcodeline": "else if (!edts_e->segmentDuration) {"
    },
    {
        "line": 436,
        "fullcodeline": "is_identical_sgpd = gf_isom_is_identical_sgpd(new_sgdesc, sgdesc, 0);"
    },
    {
        "line": 442,
        "fullcodeline": "if (!new_idx) return GF_OUT_OF_MEM;"
    },
    {
        "line": 445,
        "fullcodeline": "while (gf_list_count(sgdesc->group_descriptions)) {"
    },
    {
        "line": 479,
        "fullcodeline": "if ((frag_group->grouping_type==stbl_group->grouping_type) && (frag_group->grouping_type_parameter==stbl_group->grouping_type_parameter))"
    },
    {
        "line": 496,
        "fullcodeline": "if (frag_group->entry_count && stbl_group->entry_count &&"
    },
    {
        "line": 497,
        "fullcodeline": "(frag_group->sample_entries[0].group_description_index==stbl_group->sample_entries[stbl_group->entry_count-1].group_description_index)"
    },
    {
        "line": 513,
        "fullcodeline": "for (j = 0; j < frag_group->entry_count; j++) {"
    },
    {
        "line": 546,
        "fullcodeline": "if ((a->type ==GF_ISOM_BOX_TYPE_UUID) && (((GF_UUIDBox *)a)->internal_4cc == GF_ISOM_BOX_UUID_PSEC)) {"
    },
    {
        "line": 547,
        "fullcodeline": "senc = (GF_SampleEncryptionBox *)a;"
    },
    {
        "line": 560,
        "fullcodeline": "senc = (GF_SampleEncryptionBox *)gf_isom_create_piff_psec_box(1, 0x2, 0, 0, NULL);"
    },
    {
        "line": 591,
        "fullcodeline": "if ((aux_info_type == GF_ISOM_CENC_SCHEME) || (aux_info_type == GF_ISOM_CBC_SCHEME) ||"
    },
    {
        "line": 593,
        "fullcodeline": "(gf_list_count(traf->sai_offsets) == 1)) {"
    },
    {
        "line": 607,
        "fullcodeline": "if ((aux_info_type == GF_ISOM_CENC_SCHEME) || (aux_info_type == GF_ISOM_CBC_SCHEME) ||"
    },
    {
        "line": 609,
        "fullcodeline": "(gf_list_count(traf->sai_sizes) == 1)) {"
    },
    {
        "line": 617,
        "fullcodeline": "const u8 *key_info=NULL;"
    },
    {
        "line": 622,
        "fullcodeline": "size = saiz->default_sample_info_size ? saiz->default_sample_info_size : saiz->sample_info_size[i];"
    },
    {
        "line": 624,
        "fullcodeline": "cur_position = gf_bs_get_position(trak->moov->mov->movieFileMap->bs);"
    },
    {
        "line": 625,
        "fullcodeline": "gf_bs_seek(trak->moov->mov->movieFileMap->bs, offset);"
    },
    {
        "line": 627,
        "fullcodeline": "GF_SAFEALLOC(sai, GF_CENCSampleAuxInfo);"
    },
    {
        "line": 630,
        "fullcodeline": "e = gf_isom_get_sample_cenc_info_internal(trak, traf, senc, i+1, &is_encrypted, NULL, NULL, &key_info, &key_info_size);"
    },
    {
        "line": 659,
        "fullcodeline": "gf_bs_seek(trak->moov->mov->movieFileMap->bs, cur_position);"
    },
    {
        "line": 661,
        "fullcodeline": "gf_list_add(senc->samp_aux_info, sai);"
    },
    {
        "line": 663,
        "fullcodeline": "e = gf_isom_cenc_merge_saiz_saio(senc, trak->Media->information->sampleTable, offset, size);"
    },
    {
        "line": 674,
        "fullcodeline": "if (!trak->sample_encryption->samp_aux_info) trak->sample_encryption->samp_aux_info = gf_list_new();"
    },
    {
        "line": 284,
        "fullcodeline": "if (trun->data_offset>=0) {"
    },
    {
        "line": 312,
        "fullcodeline": "if (!trak->Media->information->sampleTable->ChunkOffset)"
    },
    {
        "line": 320,
        "fullcodeline": "if (!trak->Media->information->sampleTable->SampleToChunk)"
    },
    {
        "line": 390,
        "fullcodeline": "edts_e->segmentDuration = traf_duration;"
    },
    {
        "line": 391,
        "fullcodeline": "edts_e->segmentDuration *= trak->moov->mvhd->timeScale;"
    },
    {
        "line": 392,
        "fullcodeline": "edts_e->segmentDuration /= trak->Media->mediaHeader->timeScale;"
    },
    {
        "line": 446,
        "fullcodeline": "void *sgpd_entry = gf_list_get(sgdesc->group_descriptions, 0);"
    },
    {
        "line": 466,
        "fullcodeline": "gf_list_rem(sgdesc->group_descriptions, 0);"
    },
    {
        "line": 500,
        "fullcodeline": "if (frag_group->entry_count>1) {"
    },
    {
        "line": 506,
        "fullcodeline": "stbl_group->sample_entries = gf_realloc(stbl_group->sample_entries, sizeof(GF_SampleGroupEntry) * (stbl_group->entry_count + frag_group->entry_count));"
    },
    {
        "line": 507,
        "fullcodeline": "memcpy(&stbl_group->sample_entries[stbl_group->entry_count], &frag_group->sample_entries[0], sizeof(GF_SampleGroupEntry) * frag_group->entry_count);"
    },
    {
        "line": 508,
        "fullcodeline": "stbl_group->entry_count += frag_group->entry_count;"
    },
    {
        "line": 514,
        "fullcodeline": "u32 sgidx = frag_group->sample_entries[j].group_description_index;"
    },
    {
        "line": 562,
        "fullcodeline": "senc = gf_isom_create_samp_enc_box(1, 0x2);"
    },
    {
        "line": 592,
        "fullcodeline": "(aux_info_type == GF_ISOM_CENS_SCHEME) || (aux_info_type == GF_ISOM_CBCS_SCHEME) ||"
    },
    {
        "line": 594,
        "fullcodeline": "if (saio->offsets && saio->entry_count) {"
    },
    {
        "line": 608,
        "fullcodeline": "(aux_info_type == GF_ISOM_CENS_SCHEME) || (aux_info_type == GF_ISOM_CBCS_SCHEME) ||"
    },
    {
        "line": 620,
        "fullcodeline": "if (nb_saio != 1)"
    },
    {
        "line": 628,
        "fullcodeline": "if (!sai) return GF_OUT_OF_MEM;"
    },
    {
        "line": 665,
        "fullcodeline": "if (nb_saio == 1)"
    },
    {
        "line": 131,
        "fullcodeline": "gf_isom_box_del_parent(&traf_clone->child_boxes, (GF_Box *) traf_clone->sample_encryption);"
    },
    {
        "line": 132,
        "fullcodeline": "traf_clone->sample_encryption = NULL;"
    },
    {
        "line": 135,
        "fullcodeline": "gf_isom_box_del_parent(&traf_clone->child_boxes, (GF_Box *) traf_clone->sdtp);"
    },
    {
        "line": 136,
        "fullcodeline": "traf_clone->sdtp = NULL;"
    },
    {
        "line": 240,
        "fullcodeline": "} else if (!j && (trun->flags & GF_ISOM_TRUN_FIRST_FLAG)) {"
    },
    {
        "line": 241,
        "fullcodeline": "flags = trun->first_sample_flags;"
    },
    {
        "line": 285,
        "fullcodeline": "data_offset -= compressed_diff;"
    },
    {
        "line": 286,
        "fullcodeline": "prev_trun_data_offset -= compressed_diff;"
    },
    {
        "line": 385,
        "fullcodeline": "if ((s64) traf_duration > edts_e->mediaTime)"
    },
    {
        "line": 449,
        "fullcodeline": "for (j = 0; j < gf_list_count(new_sgdesc->group_descriptions); j++) {"
    },
    {
        "line": 501,
        "fullcodeline": "stbl_group->sample_entries = gf_realloc(stbl_group->sample_entries, sizeof(GF_SampleGroupEntry) * (stbl_group->entry_count + frag_group->entry_count - 1));"
    },
    {
        "line": 502,
        "fullcodeline": "memcpy(&stbl_group->sample_entries[stbl_group->entry_count], &frag_group->sample_entries[1], sizeof(GF_SampleGroupEntry) * (frag_group->entry_count - 1));"
    },
    {
        "line": 503,
        "fullcodeline": "stbl_group->entry_count += frag_group->entry_count - 1;"
    },
    {
        "line": 515,
        "fullcodeline": "if (sgidx > 0x10000) {"
    },
    {
        "line": 550,
        "fullcodeline": "else if (a->type ==GF_ISOM_BOX_TYPE_SENC) {"
    },
    {
        "line": 595,
        "fullcodeline": "offset = saio->offsets[0] + moof_offset;"
    },
    {
        "line": 596,
        "fullcodeline": "nb_saio = saio->entry_count;"
    },
    {
        "line": 621,
        "fullcodeline": "offset = saio->offsets[i] + moof_offset;"
    },
    {
        "line": 637,
        "fullcodeline": "sai->cenc_data_size = size;"
    },
    {
        "line": 638,
        "fullcodeline": "sai->cenc_data = gf_malloc(sizeof(u8)*size);"
    },
    {
        "line": 640,
        "fullcodeline": "gf_bs_read_data(trak->moov->mov->movieFileMap->bs, sai->cenc_data, sai->cenc_data_size);"
    },
    {
        "line": 666,
        "fullcodeline": "offset += size;"
    },
    {
        "line": 292,
        "fullcodeline": "data_offset += prev_trun_data_offset + chunk_size;"
    },
    {
        "line": 386,
        "fullcodeline": "traf_duration -= edts_e->mediaTime;"
    },
    {
        "line": 450,
        "fullcodeline": "void *ptr = gf_list_get(new_sgdesc->group_descriptions, j);"
    },
    {
        "line": 461,
        "fullcodeline": "gf_list_add(new_sgdesc->group_descriptions, sgpd_entry);"
    },
    {
        "line": 462,
        "fullcodeline": "new_idx[count] = gf_list_count(new_sgdesc->group_descriptions);"
    },
    {
        "line": 463,
        "fullcodeline": "count ++;"
    },
    {
        "line": 499,
        "fullcodeline": "stbl_group->sample_entries[stbl_group->entry_count - 1].sample_count += frag_group->sample_entries[0].sample_count;"
    },
    {
        "line": 516,
        "fullcodeline": "sgidx -= 0x10001;"
    },
    {
        "line": 551,
        "fullcodeline": "senc = (GF_SampleEncryptionBox *)a;"
    },
    {
        "line": 632,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[isobmf] could not get cenc info for sample %d: %s\\n\", i+1, gf_error_to_string(e) ));"
    },
    {
        "line": 639,
        "fullcodeline": "if (!sai->cenc_data) return GF_OUT_OF_MEM;"
    },
    {
        "line": 642,
        "fullcodeline": "sai->isNotProtected=1;"
    },
    {
        "line": 647,
        "fullcodeline": "if (!key_info[0]) {"
    },
    {
        "line": 296,
        "fullcodeline": "data_offset += chunk_size;"
    },
    {
        "line": 388,
        "fullcodeline": "traf_duration = 0;"
    },
    {
        "line": 451,
        "fullcodeline": "if (gf_isom_is_identical_sgpd(sgpd_entry, ptr, new_sgdesc->grouping_type)) {"
    },
    {
        "line": 517,
        "fullcodeline": "if (sgidx>=new_idx_count) {"
    },
    {
        "line": 452,
        "fullcodeline": "new_idx[count] = j + 1;"
    },
    {
        "line": 453,
        "fullcodeline": "count ++;"
    },
    {
        "line": 455,
        "fullcodeline": "gf_free(sgpd_entry);"
    },
    {
        "line": 518,
        "fullcodeline": "GF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[isobmf] corrupted sample group index in fragment %d but only %d group descriptions in fragment\\n\", sgidx, new_idx_count));"
    },
    {
        "line": 649,
        "fullcodeline": "if (size > key_info[3])"
    },
    {
        "line": 654,
        "fullcodeline": "senc->flags = 0x00000002;"
    },
    {
        "line": 298,
        "fullcodeline": "if ((i==1) && (trun->data_offset>=0)) {"
    },
    {
        "line": 299,
        "fullcodeline": "data_offset -= compressed_diff;"
    },
    {
        "line": 650,
        "fullcodeline": "senc->flags = 0x00000002;"
    }
]