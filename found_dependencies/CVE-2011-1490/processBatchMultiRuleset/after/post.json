[
    {
        "line": 41,
        "fullcodeline": "} while(bHaveUnprocessed == 1);"
    },
    {
        "line": 12,
        "fullcodeline": "bHaveUnprocessed = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "CHKiRet(batchInit(&snglRuleBatch, pBatch->nElem));"
    },
    {
        "line": 21,
        "fullcodeline": "snglRuleBatch.pbShutdownImmediate = pBatch->pbShutdownImmediate;"
    },
    {
        "line": 22,
        "fullcodeline": "currRuleset = batchElemGetRuleset(pBatch, iStart);"
    },
    {
        "line": 23,
        "fullcodeline": "iNew = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "snglRuleBatch.nElem = iNew; /* was left just right by the for loop */"
    },
    {
        "line": 37,
        "fullcodeline": "batchSetSingleRuleset(&snglRuleBatch, 1);"
    },
    {
        "line": 39,
        "fullcodeline": "processBatch(&snglRuleBatch);"
    },
    {
        "line": 40,
        "fullcodeline": "batchFree(&snglRuleBatch);"
    },
    {
        "line": 14,
        "fullcodeline": "for(iStart = 0 ; iStart < pBatch->nElem && pBatch->pElem[iStart].state == BATCH_STATE_DISC ; ++iStart)"
    },
    {
        "line": 16,
        "fullcodeline": "if(iStart == pBatch->nElem)"
    },
    {
        "line": 24,
        "fullcodeline": "for(i = iStart ; i < pBatch->nElem ; ++i) {"
    },
    {
        "line": 25,
        "fullcodeline": "if(batchElemGetRuleset(pBatch, i) == currRuleset) {"
    },
    {
        "line": 29,
        "fullcodeline": "++iNew;"
    },
    {
        "line": 31,
        "fullcodeline": "pBatch->pElem[i].state = BATCH_STATE_DISC;"
    },
    {
        "line": 33,
        "fullcodeline": "bHaveUnprocessed = 1;"
    }
]