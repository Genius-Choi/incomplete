[
    {
        "line": 2,
        "fullcodeline": "struct pollfd *free_slot = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "free_slot->fd = fd;"
    },
    {
        "line": 24,
        "fullcodeline": "++poll_set->used;"
    },
    {
        "line": 4,
        "fullcodeline": "if (poll_set->used == poll_set->max_used) {"
    },
    {
        "line": 10,
        "fullcodeline": "free_slot = &poll_set->pollfds[poll_set->max_used++];"
    },
    {
        "line": 6,
        "fullcodeline": "if (poll_set->max_used >= poll_set->alloc) {"
    },
    {
        "line": 20,
        "fullcodeline": "assert(free_slot != NULL);"
    },
    {
        "line": 8,
        "fullcodeline": "poll_set->alloc += 4;"
    },
    {
        "line": 13,
        "fullcodeline": "for (unsigned int i = 0; i < poll_set->max_used; ++i) {"
    },
    {
        "line": 14,
        "fullcodeline": "struct pollfd *slot = &poll_set->pollfds[i];"
    },
    {
        "line": 15,
        "fullcodeline": "if (slot->fd == -1) {"
    },
    {
        "line": 16,
        "fullcodeline": "free_slot = slot;"
    }
]