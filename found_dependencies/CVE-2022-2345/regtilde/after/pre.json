[
    {
        "line": 3,
        "fullcodeline": "char_u\t*newsub = source;"
    },
    {
        "line": 53,
        "fullcodeline": "vim_free(reg_prev_sub);"
    },
    {
        "line": 54,
        "fullcodeline": "reg_prev_sub = vim_strsave(newsub);"
    },
    {
        "line": 9,
        "fullcodeline": "for (p = newsub; *p; ++p)"
    },
    {
        "line": 11,
        "fullcodeline": "if ((*p == '~' && magic) || (*p == '\\\\' && *(p + 1) == '~' && !magic))"
    },
    {
        "line": 40,
        "fullcodeline": "--p;"
    },
    {
        "line": 13,
        "fullcodeline": "if (reg_prev_sub != NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "prevlen = (int)STRLEN(reg_prev_sub);"
    },
    {
        "line": 17,
        "fullcodeline": "tmpsub = alloc(STRLEN(newsub) + prevlen);"
    },
    {
        "line": 44,
        "fullcodeline": "if (*p == '\\\\' && p[1])\t\t// skip escaped characters"
    },
    {
        "line": 18,
        "fullcodeline": "if (tmpsub != NULL)"
    },
    {
        "line": 45,
        "fullcodeline": "++p;"
    },
    {
        "line": 47,
        "fullcodeline": "p += (*mb_ptr2len)(p) - 1;"
    },
    {
        "line": 21,
        "fullcodeline": "len = (int)(p - newsub);\t// not including ~"
    },
    {
        "line": 22,
        "fullcodeline": "mch_memmove(tmpsub, newsub, (size_t)len);"
    },
    {
        "line": 24,
        "fullcodeline": "mch_memmove(tmpsub + len, reg_prev_sub, (size_t)prevlen);"
    },
    {
        "line": 28,
        "fullcodeline": "STRCPY(tmpsub + len + prevlen, p + 1);"
    },
    {
        "line": 32,
        "fullcodeline": "newsub = tmpsub;"
    },
    {
        "line": 33,
        "fullcodeline": "p = newsub + len + prevlen;"
    },
    {
        "line": 26,
        "fullcodeline": "if (!magic)"
    },
    {
        "line": 30,
        "fullcodeline": "if (newsub != source)\t// already allocated newsub"
    },
    {
        "line": 37,
        "fullcodeline": "STRMOVE(p, p + 1);\t// remove '~'"
    },
    {
        "line": 27,
        "fullcodeline": "++p;\t\t\t// back off backslash"
    },
    {
        "line": 31,
        "fullcodeline": "vim_free(newsub);"
    },
    {
        "line": 39,
        "fullcodeline": "STRMOVE(p, p + 2);\t// remove '\\~'"
    }
]