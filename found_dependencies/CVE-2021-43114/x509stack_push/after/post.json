[
    {
        "line": 13,
        "fullcodeline": "meta->uri = uri;"
    },
    {
        "line": 14,
        "fullcodeline": "uri_refget(uri);"
    },
    {
        "line": 15,
        "fullcodeline": "serial_numbers_init(&meta->serials);"
    },
    {
        "line": 16,
        "fullcodeline": "subjects_init(&meta->subjects);"
    },
    {
        "line": 18,
        "fullcodeline": "error = init_resources(x509, policy, type, &meta->resources);"
    },
    {
        "line": 22,
        "fullcodeline": "error = init_level(stack, &meta->level); /* Does not need a revert */"
    },
    {
        "line": 26,
        "fullcodeline": "defer_separator = create_separator();"
    },
    {
        "line": 32,
        "fullcodeline": "ok = sk_X509_push(stack->x509s, x509);"
    },
    {
        "line": 39,
        "fullcodeline": "SLIST_INSERT_HEAD(&stack->defers, defer_separator, next);"
    },
    {
        "line": 40,
        "fullcodeline": "SLIST_INSERT_HEAD(&stack->metas, meta, next);"
    },
    {
        "line": 45,
        "fullcodeline": "free(defer_separator);"
    },
    {
        "line": 47,
        "fullcodeline": "resources_destroy(meta->resources);"
    },
    {
        "line": 49,
        "fullcodeline": "subjects_cleanup(&meta->subjects, subject_cleanup);"
    },
    {
        "line": 50,
        "fullcodeline": "serial_numbers_cleanup(&meta->serials, serial_cleanup);"
    },
    {
        "line": 51,
        "fullcodeline": "uri_refput(meta->uri);"
    },
    {
        "line": 52,
        "fullcodeline": "free(meta);"
    },
    {
        "line": 10,
        "fullcodeline": "if (meta == NULL)"
    },
    {
        "line": 27,
        "fullcodeline": "if (defer_separator == NULL) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (ok <= 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "error = pr_enomem();"
    },
    {
        "line": 34,
        "fullcodeline": "error = val_crypto_err("
    },
    {
        "line": 11,
        "fullcodeline": "return pr_enomem();"
    }
]