[
    {
        "line": 5,
        "fullcodeline": "deltas_head_init(&deltas);"
    },
    {
        "line": 7,
        "fullcodeline": "ck_assert_int_eq(0, deltas_head_sort(&deltas, 1));"
    },
    {
        "line": 8,
        "fullcodeline": "ck_assert_int_eq(0, deltas_head_sort(&deltas, 2));"
    },
    {
        "line": 10,
        "fullcodeline": "add_serials(&deltas, 0, END);"
    },
    {
        "line": 11,
        "fullcodeline": "ck_assert_int_eq(0, deltas_head_sort(&deltas, 0));"
    },
    {
        "line": 12,
        "fullcodeline": "validate_serials(&deltas, 0, END);"
    },
    {
        "line": 15,
        "fullcodeline": "ck_assert_int_eq(-EINVAL, deltas_head_sort(&deltas, 1));"
    },
    {
        "line": 17,
        "fullcodeline": "add_serials(&deltas, 1, 2, 3, END);"
    },
    {
        "line": 19,
        "fullcodeline": "validate_serials(&deltas, 0, 1, 2, 3, END);"
    },
    {
        "line": 21,
        "fullcodeline": "ck_assert_int_eq(-EINVAL, deltas_head_sort(&deltas, 4));"
    },
    {
        "line": 22,
        "fullcodeline": "ck_assert_int_eq(-EINVAL, deltas_head_sort(&deltas, 2));"
    },
    {
        "line": 24,
        "fullcodeline": "deltas_head_cleanup(&deltas, NULL);"
    },
    {
        "line": 25,
        "fullcodeline": "deltas_head_init(&deltas);"
    },
    {
        "line": 27,
        "fullcodeline": "add_serials(&deltas, 3, 0, 1, 2, END);"
    },
    {
        "line": 28,
        "fullcodeline": "ck_assert_int_eq(0, deltas_head_sort(&deltas, 3));"
    },
    {
        "line": 29,
        "fullcodeline": "validate_serials(&deltas, 0, 1, 2, 3, END);"
    },
    {
        "line": 31,
        "fullcodeline": "deltas_head_cleanup(&deltas, NULL);"
    },
    {
        "line": 32,
        "fullcodeline": "deltas_head_init(&deltas);"
    },
    {
        "line": 34,
        "fullcodeline": "add_serials(&deltas, 4, 3, 2, 1, 0, END);"
    },
    {
        "line": 35,
        "fullcodeline": "ck_assert_int_eq(0, deltas_head_sort(&deltas, 4));"
    },
    {
        "line": 36,
        "fullcodeline": "validate_serials(&deltas, 0, 1, 2, 3, 4, END);"
    },
    {
        "line": 38,
        "fullcodeline": "ck_assert_int_eq(-EINVAL, deltas_head_sort(&deltas, 5));"
    },
    {
        "line": 39,
        "fullcodeline": "ck_assert_int_eq(-EINVAL, deltas_head_sort(&deltas, 3));"
    },
    {
        "line": 41,
        "fullcodeline": "deltas_head_cleanup(&deltas, NULL);"
    },
    {
        "line": 6,
        "fullcodeline": "ck_assert_int_eq(0, deltas_head_sort(&deltas, 0));"
    },
    {
        "line": 14,
        "fullcodeline": "ck_assert_int_eq(-EINVAL, deltas_head_sort(&deltas, 2));"
    },
    {
        "line": 18,
        "fullcodeline": "ck_assert_int_eq(0, deltas_head_sort(&deltas, 3));"
    }
]