[
    {
        "line": 3,
        "fullcodeline": "char filename[64];"
    },
    {
        "line": 16,
        "fullcodeline": "b = get_bson (\"codewscope.bson\");"
    },
    {
        "line": 17,
        "fullcodeline": "BSON_ASSERT (bson_validate (b, BSON_VALIDATE_NONE, &offset));"
    },
    {
        "line": 20,
        "fullcodeline": "b = get_bson (\"empty_key.bson\");"
    },
    {
        "line": 21,
        "fullcodeline": "BSON_ASSERT (bson_validate (b,"
    },
    {
        "line": 26,
        "fullcodeline": "bson_destroy (b);"
    },
    {
        "line": 36,
        "fullcodeline": "VALIDATE_TEST (\"overflow2.bson\","
    },
    {
        "line": 41,
        "fullcodeline": "VALIDATE_TEST (\"trailingnull.bson\","
    },
    {
        "line": 46,
        "fullcodeline": "VALIDATE_TEST (\"dollarquery.bson\","
    },
    {
        "line": 51,
        "fullcodeline": "VALIDATE_TEST (\"dotquery.bson\","
    },
    {
        "line": 56,
        "fullcodeline": "VALIDATE_TEST (\"overflow3.bson\","
    },
    {
        "line": 62,
        "fullcodeline": "VALIDATE_TEST (\"overflow3.bson\","
    },
    {
        "line": 67,
        "fullcodeline": "VALIDATE_TEST (\"overflow4.bson\","
    },
    {
        "line": 72,
        "fullcodeline": "VALIDATE_TEST (\"empty_key.bson\","
    },
    {
        "line": 77,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 79,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 81,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 83,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 85,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 87,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 89,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 91,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 93,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 95,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 97,
        "fullcodeline": "VALIDATE_TEST (\"test50.bson\","
    },
    {
        "line": 102,
        "fullcodeline": "VALIDATE_TEST (\"test51.bson\","
    },
    {
        "line": 107,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 109,
        "fullcodeline": "VALIDATE_TEST ("
    },
    {
        "line": 111,
        "fullcodeline": "VALIDATE_TEST (\"test54.bson\","
    },
    {
        "line": 118,
        "fullcodeline": "b = BCON_NEW (\"my_dbref\","
    },
    {
        "line": 126,
        "fullcodeline": "BSON_ASSERT ("
    },
    {
        "line": 131,
        "fullcodeline": "b = BCON_NEW (\"my_dbref\", \"{\", \"$id\", BCON_INT32 (1), \"}\");"
    },
    {
        "line": 135,
        "fullcodeline": "ASSERT_ERROR_CONTAINS (error,"
    },
    {
        "line": 142,
        "fullcodeline": "b = BCON_NEW (\"my_dbref\","
    },
    {
        "line": 152,
        "fullcodeline": "ASSERT_ERROR_CONTAINS (error,"
    },
    {
        "line": 159,
        "fullcodeline": "b = BCON_NEW (\"my_dbref\","
    },
    {
        "line": 168,
        "fullcodeline": "BSON_ASSERT (bson_validate_with_error (b, BSON_VALIDATE_NONE, &error));"
    },
    {
        "line": 169,
        "fullcodeline": "BSON_ASSERT ("
    },
    {
        "line": 171,
        "fullcodeline": "ASSERT_ERROR_CONTAINS (error,"
    },
    {
        "line": 175,
        "fullcodeline": "bson_destroy (b);"
    },
    {
        "line": 9,
        "fullcodeline": "for (i = 1; i <= 38; i++) {"
    },
    {
        "line": 125,
        "fullcodeline": "BSON_ASSERT (bson_validate_with_error (b, BSON_VALIDATE_NONE, &error));"
    },
    {
        "line": 127,
        "fullcodeline": "bson_validate_with_error (b, BSON_VALIDATE_DOLLAR_KEYS, &error));"
    },
    {
        "line": 132,
        "fullcodeline": "BSON_ASSERT (bson_validate_with_error (b, BSON_VALIDATE_NONE, &error));"
    },
    {
        "line": 134,
        "fullcodeline": "!bson_validate_with_error (b, BSON_VALIDATE_DOLLAR_KEYS, &error));"
    },
    {
        "line": 149,
        "fullcodeline": "BSON_ASSERT (bson_validate_with_error (b, BSON_VALIDATE_NONE, &error));"
    },
    {
        "line": 151,
        "fullcodeline": "!bson_validate_with_error (b, BSON_VALIDATE_DOLLAR_KEYS, &error));"
    },
    {
        "line": 170,
        "fullcodeline": "!bson_validate_with_error (b, BSON_VALIDATE_DOLLAR_KEYS, &error));"
    },
    {
        "line": 10,
        "fullcodeline": "bson_snprintf (filename, sizeof filename, \"test%u.bson\", i);"
    },
    {
        "line": 11,
        "fullcodeline": "b = get_bson (filename);"
    },
    {
        "line": 22,
        "fullcodeline": "BSON_VALIDATE_NONE | BSON_VALIDATE_UTF8 |"
    },
    {
        "line": 121,
        "fullcodeline": "BCON_UTF8 (\"collection\"),"
    },
    {
        "line": 123,
        "fullcodeline": "BCON_INT32 (1),"
    },
    {
        "line": 145,
        "fullcodeline": "BCON_UTF8 (\"collection\"),"
    },
    {
        "line": 147,
        "fullcodeline": "BCON_UTF8 (\"collection\"),"
    },
    {
        "line": 162,
        "fullcodeline": "BCON_UTF8 (\"collection\"),"
    },
    {
        "line": 164,
        "fullcodeline": "BCON_INT32 (2),"
    },
    {
        "line": 166,
        "fullcodeline": "BCON_INT32 (1),"
    },
    {
        "line": 12,
        "fullcodeline": "BSON_ASSERT (bson_validate (b, BSON_VALIDATE_NONE, &offset));"
    }
]