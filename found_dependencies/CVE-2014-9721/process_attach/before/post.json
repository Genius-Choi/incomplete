[
    {
        "line": 3,
        "fullcodeline": "zmq_assert (engine_ != NULL);"
    },
    {
        "line": 35,
        "fullcodeline": "zmq_assert (!engine);"
    },
    {
        "line": 36,
        "fullcodeline": "engine = engine_;"
    },
    {
        "line": 37,
        "fullcodeline": "engine->plug (io_thread, this);"
    },
    {
        "line": 6,
        "fullcodeline": "if (!pipe && !is_terminating ()) {"
    },
    {
        "line": 7,
        "fullcodeline": "object_t *parents [2] = {this, socket};"
    },
    {
        "line": 8,
        "fullcodeline": "pipe_t *pipes [2] = {NULL, NULL};"
    },
    {
        "line": 10,
        "fullcodeline": "bool conflate = options.conflate &&"
    },
    {
        "line": 17,
        "fullcodeline": "int hwms [2] = {conflate? -1 : options.rcvhwm,"
    },
    {
        "line": 19,
        "fullcodeline": "bool conflates [2] = {conflate, conflate};"
    },
    {
        "line": 20,
        "fullcodeline": "int rc = pipepair (parents, pipes, hwms, conflates);"
    },
    {
        "line": 21,
        "fullcodeline": "errno_assert (rc == 0);"
    },
    {
        "line": 24,
        "fullcodeline": "pipes [0]->set_event_sink (this);"
    },
    {
        "line": 27,
        "fullcodeline": "zmq_assert (!pipe);"
    },
    {
        "line": 28,
        "fullcodeline": "pipe = pipes [0];"
    },
    {
        "line": 31,
        "fullcodeline": "send_bind (socket, pipes [1]);"
    },
    {
        "line": 11,
        "fullcodeline": "(options.type == ZMQ_DEALER ||"
    },
    {
        "line": 18,
        "fullcodeline": "conflate? -1 : options.sndhwm};"
    },
    {
        "line": 15,
        "fullcodeline": "options.type == ZMQ_SUB);"
    },
    {
        "line": 14,
        "fullcodeline": "options.type == ZMQ_PUB ||"
    },
    {
        "line": 13,
        "fullcodeline": "options.type == ZMQ_PUSH ||"
    },
    {
        "line": 12,
        "fullcodeline": "options.type == ZMQ_PULL ||"
    }
]