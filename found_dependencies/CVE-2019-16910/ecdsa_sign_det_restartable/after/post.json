[
    {
        "line": 11,
        "fullcodeline": "mbedtls_hmac_drbg_context *p_rng = &rng_ctx;"
    },
    {
        "line": 12,
        "fullcodeline": "unsigned char data[2 * MBEDTLS_ECP_MAX_BYTES];"
    },
    {
        "line": 13,
        "fullcodeline": "size_t grp_len = ( grp->nbits + 7 ) / 8;"
    },
    {
        "line": 20,
        "fullcodeline": "mbedtls_mpi_init( &h );"
    },
    {
        "line": 21,
        "fullcodeline": "mbedtls_hmac_drbg_init( &rng_ctx );"
    },
    {
        "line": 23,
        "fullcodeline": "ECDSA_RS_ENTER( det );"
    },
    {
        "line": 38,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( d, data, grp_len ) );"
    },
    {
        "line": 39,
        "fullcodeline": "MBEDTLS_MPI_CHK( derive_mpi( grp, &h, buf, blen ) );"
    },
    {
        "line": 40,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &h, data + grp_len, grp_len ) );"
    },
    {
        "line": 41,
        "fullcodeline": "mbedtls_hmac_drbg_seed_buf( p_rng, md_info, data, 2 * grp_len );"
    },
    {
        "line": 120,
        "fullcodeline": "mbedtls_hmac_drbg_free( &rng_ctx );"
    },
    {
        "line": 121,
        "fullcodeline": "mbedtls_mpi_free( &h );"
    },
    {
        "line": 123,
        "fullcodeline": "ECDSA_RS_LEAVE( det );"
    },
    {
        "line": 17,
        "fullcodeline": "if( ( md_info = mbedtls_md_info_from_type( md_alg ) ) == NULL )"
    },
    {
        "line": 53,
        "fullcodeline": "if( f_rng_blind != NULL )"
    },
    {
        "line": 54,
        "fullcodeline": "ret = ecdsa_sign_restartable( grp, r, s, d, buf, blen,"
    },
    {
        "line": 68,
        "fullcodeline": "const char* blind_label = \"BLINDING CONTEXT\";"
    },
    {
        "line": 71,
        "fullcodeline": "mbedtls_hmac_drbg_init( &rng_ctx_blind );"
    },
    {
        "line": 72,
        "fullcodeline": "p_rng_blind_det = &rng_ctx_blind;"
    },
    {
        "line": 74,
        "fullcodeline": "mbedtls_hmac_drbg_seed_buf( p_rng_blind_det, md_info,"
    },
    {
        "line": 76,
        "fullcodeline": "ret = mbedtls_hmac_drbg_update_ret( p_rng_blind_det,"
    },
    {
        "line": 108,
        "fullcodeline": "ret = ecdsa_sign_restartable( grp, r, s, d, buf, blen,"
    },
    {
        "line": 114,
        "fullcodeline": "mbedtls_hmac_drbg_free( &rng_ctx_blind );"
    },
    {
        "line": 75,
        "fullcodeline": "data, 2 * grp_len );"
    },
    {
        "line": 79,
        "fullcodeline": "if( ret != 0 )"
    },
    {
        "line": 77,
        "fullcodeline": "(const unsigned char*) blind_label,"
    },
    {
        "line": 78,
        "fullcodeline": "strlen( blind_label ) );"
    },
    {
        "line": 81,
        "fullcodeline": "mbedtls_hmac_drbg_free( &rng_ctx_blind );"
    }
]