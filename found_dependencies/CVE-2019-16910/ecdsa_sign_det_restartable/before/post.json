[
    {
        "line": 9,
        "fullcodeline": "mbedtls_hmac_drbg_context *p_rng = &rng_ctx;"
    },
    {
        "line": 10,
        "fullcodeline": "unsigned char data[2 * MBEDTLS_ECP_MAX_BYTES];"
    },
    {
        "line": 11,
        "fullcodeline": "size_t grp_len = ( grp->nbits + 7 ) / 8;"
    },
    {
        "line": 18,
        "fullcodeline": "mbedtls_mpi_init( &h );"
    },
    {
        "line": 19,
        "fullcodeline": "mbedtls_hmac_drbg_init( &rng_ctx );"
    },
    {
        "line": 21,
        "fullcodeline": "ECDSA_RS_ENTER( det );"
    },
    {
        "line": 36,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( d, data, grp_len ) );"
    },
    {
        "line": 37,
        "fullcodeline": "MBEDTLS_MPI_CHK( derive_mpi( grp, &h, buf, blen ) );"
    },
    {
        "line": 38,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &h, data + grp_len, grp_len ) );"
    },
    {
        "line": 39,
        "fullcodeline": "mbedtls_hmac_drbg_seed_buf( p_rng, md_info, data, 2 * grp_len );"
    },
    {
        "line": 51,
        "fullcodeline": "ret = ecdsa_sign_restartable( grp, r, s, d, buf, blen,"
    },
    {
        "line": 56,
        "fullcodeline": "mbedtls_hmac_drbg_free( &rng_ctx );"
    },
    {
        "line": 57,
        "fullcodeline": "mbedtls_mpi_free( &h );"
    },
    {
        "line": 59,
        "fullcodeline": "ECDSA_RS_LEAVE( det );"
    },
    {
        "line": 15,
        "fullcodeline": "if( ( md_info = mbedtls_md_info_from_type( md_alg ) ) == NULL )"
    }
]