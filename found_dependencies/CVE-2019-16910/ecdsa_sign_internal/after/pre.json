[
    {
        "line": 22,
        "fullcodeline": "mbedtls_ecp_point_init( &R );"
    },
    {
        "line": 23,
        "fullcodeline": "mbedtls_mpi_init( &k ); mbedtls_mpi_init( &e ); mbedtls_mpi_init( &t );"
    },
    {
        "line": 25,
        "fullcodeline": "sign_tries = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "if( grp->N.p == NULL )"
    },
    {
        "line": 19,
        "fullcodeline": "if( mbedtls_mpi_cmp_int( d, 1 ) < 0 || mbedtls_mpi_cmp_mpi( d, &grp->N ) >= 0 )"
    },
    {
        "line": 32,
        "fullcodeline": "key_tries = 0;"
    },
    {
        "line": 63,
        "fullcodeline": "blind_tries = 0;"
    },
    {
        "line": 94,
        "fullcodeline": "while( mbedtls_mpi_cmp_int( s, 0 ) == 0 );"
    },
    {
        "line": 52,
        "fullcodeline": "MBEDTLS_MPI_CHK( derive_mpi( grp, &e, buf, blen ) );"
    },
    {
        "line": 80,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( s, r, d ) );"
    },
    {
        "line": 81,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &e, &e, s ) );"
    },
    {
        "line": 82,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &e, &e, &t ) );"
    },
    {
        "line": 83,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &k, &k, &t ) );"
    },
    {
        "line": 84,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( s, &k, &grp->N ) );"
    },
    {
        "line": 85,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( s, s, &e ) );"
    },
    {
        "line": 86,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( s, s, &grp->N ) );"
    },
    {
        "line": 47,
        "fullcodeline": "while( mbedtls_mpi_cmp_int( r, 0 ) == 0 );"
    },
    {
        "line": 66,
        "fullcodeline": "size_t n_size = ( grp->nbits + 7 ) / 8;"
    },
    {
        "line": 74,
        "fullcodeline": "while( mbedtls_mpi_cmp_int( &t, 1 ) < 0 ||"
    },
    {
        "line": 75,
        "fullcodeline": "mbedtls_mpi_cmp_mpi( &t, &grp->N ) >= 0 );"
    },
    {
        "line": 88,
        "fullcodeline": "if( sign_tries++ > 10 )"
    },
    {
        "line": 90,
        "fullcodeline": "ret = MBEDTLS_ERR_ECP_RANDOM_FAILED;"
    },
    {
        "line": 35,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_ecp_gen_privkey( grp, &k, f_rng, p_rng ) );"
    },
    {
        "line": 37,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_ecp_mul( grp, &R, &k, &grp->G,"
    },
    {
        "line": 39,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( r, &R.X, &grp->N ) );"
    },
    {
        "line": 67,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_fill_random( &t, n_size, f_rng_blind,"
    },
    {
        "line": 69,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_shift_r( &t, 8 * n_size - grp->nbits ) );"
    },
    {
        "line": 41,
        "fullcodeline": "if( key_tries++ > 10 )"
    },
    {
        "line": 43,
        "fullcodeline": "ret = MBEDTLS_ERR_ECP_RANDOM_FAILED;"
    },
    {
        "line": 71,
        "fullcodeline": "if( ++blind_tries > 30 )"
    }
]