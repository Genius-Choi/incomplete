[
    {
        "line": 11,
        "fullcodeline": "unsigned char data[2 * MBEDTLS_ECP_MAX_BYTES];"
    },
    {
        "line": 12,
        "fullcodeline": "size_t grp_len = ( grp->nbits + 7 ) / 8;"
    },
    {
        "line": 16,
        "fullcodeline": "const char* blind_label = \"BLINDING CONTEXT\";"
    },
    {
        "line": 22,
        "fullcodeline": "mbedtls_mpi_init( &h );"
    },
    {
        "line": 23,
        "fullcodeline": "mbedtls_hmac_drbg_init( &rng_ctx );"
    },
    {
        "line": 24,
        "fullcodeline": "mbedtls_hmac_drbg_init( &rng_ctx_blind );"
    },
    {
        "line": 27,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( d, data, grp_len ) );"
    },
    {
        "line": 28,
        "fullcodeline": "MBEDTLS_MPI_CHK( derive_mpi( grp, &h, buf, blen ) );"
    },
    {
        "line": 29,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &h, data + grp_len, grp_len ) );"
    },
    {
        "line": 30,
        "fullcodeline": "mbedtls_hmac_drbg_seed_buf( &rng_ctx, md_info, data, 2 * grp_len );"
    },
    {
        "line": 67,
        "fullcodeline": "mbedtls_hmac_drbg_free( &rng_ctx );"
    },
    {
        "line": 68,
        "fullcodeline": "mbedtls_hmac_drbg_free( &rng_ctx_blind );"
    },
    {
        "line": 69,
        "fullcodeline": "mbedtls_mpi_free( &h );"
    },
    {
        "line": 19,
        "fullcodeline": "if( ( md_info = mbedtls_md_info_from_type( md_alg ) ) == NULL )"
    },
    {
        "line": 32,
        "fullcodeline": "if( f_rng_blind != NULL )"
    },
    {
        "line": 33,
        "fullcodeline": "ret = ecdsa_sign_internal( grp, r, s, d, buf, blen,"
    },
    {
        "line": 45,
        "fullcodeline": "mbedtls_hmac_drbg_seed_buf( &rng_ctx_blind, md_info,"
    },
    {
        "line": 47,
        "fullcodeline": "ret = mbedtls_hmac_drbg_update_ret( &rng_ctx_blind,"
    },
    {
        "line": 60,
        "fullcodeline": "ret = ecdsa_sign_internal( grp, r, s, d, buf, blen,"
    },
    {
        "line": 46,
        "fullcodeline": "data, 2 * grp_len );"
    },
    {
        "line": 50,
        "fullcodeline": "if( ret != 0 )"
    },
    {
        "line": 48,
        "fullcodeline": "(const unsigned char*) blind_label,"
    },
    {
        "line": 49,
        "fullcodeline": "strlen( blind_label ) );"
    }
]