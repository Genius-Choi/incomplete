[
    {
        "line": 10,
        "fullcodeline": "mbedtls_mpi *pu1 = &u1, *pu2 = &u2;"
    },
    {
        "line": 12,
        "fullcodeline": "mbedtls_ecp_point_init( &R );"
    },
    {
        "line": 13,
        "fullcodeline": "mbedtls_mpi_init( &e ); mbedtls_mpi_init( &s_inv );"
    },
    {
        "line": 14,
        "fullcodeline": "mbedtls_mpi_init( &u1 ); mbedtls_mpi_init( &u2 );"
    },
    {
        "line": 20,
        "fullcodeline": "ECDSA_RS_ENTER( ver );"
    },
    {
        "line": 17,
        "fullcodeline": "if( grp->N.p == NULL )"
    },
    {
        "line": 48,
        "fullcodeline": "MBEDTLS_MPI_CHK( derive_mpi( grp, &e, buf, blen ) );"
    },
    {
        "line": 55,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &s_inv, s, &grp->N ) );"
    },
    {
        "line": 57,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( pu1, &e, &s_inv ) );"
    },
    {
        "line": 58,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( pu1, pu1, &grp->N ) );"
    },
    {
        "line": 60,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( pu2, r, &s_inv ) );"
    },
    {
        "line": 61,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( pu2, pu2, &grp->N ) );"
    },
    {
        "line": 72,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_ecp_muladd_restartable( grp,"
    },
    {
        "line": 75,
        "fullcodeline": "if( mbedtls_ecp_is_zero( &R ) )"
    },
    {
        "line": 85,
        "fullcodeline": "MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &R.X, &R.X, &grp->N ) );"
    },
    {
        "line": 38,
        "fullcodeline": "if( mbedtls_mpi_cmp_int( r, 1 ) < 0 || mbedtls_mpi_cmp_mpi( r, &grp->N ) >= 0 ||"
    },
    {
        "line": 39,
        "fullcodeline": "mbedtls_mpi_cmp_int( s, 1 ) < 0 || mbedtls_mpi_cmp_mpi( s, &grp->N ) >= 0 )"
    },
    {
        "line": 41,
        "fullcodeline": "ret = MBEDTLS_ERR_ECP_VERIFY_FAILED;"
    },
    {
        "line": 53,
        "fullcodeline": "ECDSA_BUDGET( MBEDTLS_ECP_OPS_CHK + MBEDTLS_ECP_OPS_INV + 2 );"
    },
    {
        "line": 77,
        "fullcodeline": "ret = MBEDTLS_ERR_ECP_VERIFY_FAILED;"
    },
    {
        "line": 90,
        "fullcodeline": "if( mbedtls_mpi_cmp_mpi( &R.X, r ) != 0 )"
    },
    {
        "line": 92,
        "fullcodeline": "ret = MBEDTLS_ERR_ECP_VERIFY_FAILED;"
    }
]