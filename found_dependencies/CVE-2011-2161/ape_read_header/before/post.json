[
    {
        "line": 3,
        "fullcodeline": "AVIOContext *pb = s->pb;"
    },
    {
        "line": 4,
        "fullcodeline": "APEContext *ape = s->priv_data;"
    },
    {
        "line": 12,
        "fullcodeline": "ape->junklength = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "tag = avio_rl32(pb);"
    },
    {
        "line": 18,
        "fullcodeline": "ape->fileversion = avio_rl16(pb);"
    },
    {
        "line": 98,
        "fullcodeline": "ape->frames       = av_malloc(ape->totalframes * sizeof(APEFrame));"
    },
    {
        "line": 101,
        "fullcodeline": "ape->firstframe   = ape->junklength + ape->descriptorlength + ape->headerlength + ape->seektablelength + ape->wavheaderlength;"
    },
    {
        "line": 102,
        "fullcodeline": "ape->currentframe = 0;"
    },
    {
        "line": 105,
        "fullcodeline": "ape->totalsamples = ape->finalframeblocks;"
    },
    {
        "line": 115,
        "fullcodeline": "ape->frames[0].pos     = ape->firstframe;"
    },
    {
        "line": 116,
        "fullcodeline": "ape->frames[0].nblocks = ape->blocksperframe;"
    },
    {
        "line": 117,
        "fullcodeline": "ape->frames[0].skip    = 0;"
    },
    {
        "line": 124,
        "fullcodeline": "ape->frames[ape->totalframes - 1].size    = ape->finalframeblocks * 4;"
    },
    {
        "line": 125,
        "fullcodeline": "ape->frames[ape->totalframes - 1].nblocks = ape->finalframeblocks;"
    },
    {
        "line": 136,
        "fullcodeline": "ape_dumpinfo(s, ape);"
    },
    {
        "line": 144,
        "fullcodeline": "av_log(s, AV_LOG_DEBUG, \"Decoding file - v%d.%02d, compression level %d\\n\", ape->fileversion / 1000, (ape->fileversion % 1000) / 10, ape->compressiontype);"
    },
    {
        "line": 147,
        "fullcodeline": "st = av_new_stream(s, 0);"
    },
    {
        "line": 151,
        "fullcodeline": "total_blocks = (ape->totalframes == 0) ? 0 : ((ape->totalframes - 1) * ape->blocksperframe) + ape->finalframeblocks;"
    },
    {
        "line": 153,
        "fullcodeline": "st->codec->codec_type      = AVMEDIA_TYPE_AUDIO;"
    },
    {
        "line": 154,
        "fullcodeline": "st->codec->codec_id        = CODEC_ID_APE;"
    },
    {
        "line": 155,
        "fullcodeline": "st->codec->codec_tag       = MKTAG('A', 'P', 'E', ' ');"
    },
    {
        "line": 156,
        "fullcodeline": "st->codec->channels        = ape->channels;"
    },
    {
        "line": 157,
        "fullcodeline": "st->codec->sample_rate     = ape->samplerate;"
    },
    {
        "line": 158,
        "fullcodeline": "st->codec->bits_per_coded_sample = ape->bps;"
    },
    {
        "line": 159,
        "fullcodeline": "st->codec->frame_size      = MAC_SUBFRAME_SIZE;"
    },
    {
        "line": 161,
        "fullcodeline": "st->nb_frames = ape->totalframes;"
    },
    {
        "line": 162,
        "fullcodeline": "st->start_time = 0;"
    },
    {
        "line": 163,
        "fullcodeline": "st->duration  = total_blocks / MAC_SUBFRAME_SIZE;"
    },
    {
        "line": 164,
        "fullcodeline": "av_set_pts_info(st, 64, MAC_SUBFRAME_SIZE, ape->samplerate);"
    },
    {
        "line": 166,
        "fullcodeline": "st->codec->extradata = av_malloc(APE_EXTRADATA_SIZE);"
    },
    {
        "line": 167,
        "fullcodeline": "st->codec->extradata_size = APE_EXTRADATA_SIZE;"
    },
    {
        "line": 168,
        "fullcodeline": "AV_WL16(st->codec->extradata + 0, ape->fileversion);"
    },
    {
        "line": 169,
        "fullcodeline": "AV_WL16(st->codec->extradata + 2, ape->compressiontype);"
    },
    {
        "line": 170,
        "fullcodeline": "AV_WL16(st->codec->extradata + 4, ape->formatflags);"
    },
    {
        "line": 172,
        "fullcodeline": "pts = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "if (tag != MKTAG('M', 'A', 'C', ' '))"
    },
    {
        "line": 20,
        "fullcodeline": "if (ape->fileversion < APE_MIN_VERSION || ape->fileversion > APE_MAX_VERSION) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (ape->fileversion >= 3980) {"
    },
    {
        "line": 94,
        "fullcodeline": "if(ape->totalframes > UINT_MAX / sizeof(APEFrame)){"
    },
    {
        "line": 99,
        "fullcodeline": "if(!ape->frames)"
    },
    {
        "line": 106,
        "fullcodeline": "if (ape->totalframes > 1)"
    },
    {
        "line": 109,
        "fullcodeline": "if (ape->seektablelength > 0) {"
    },
    {
        "line": 118,
        "fullcodeline": "for (i = 1; i < ape->totalframes; i++) {"
    },
    {
        "line": 127,
        "fullcodeline": "for (i = 0; i < ape->totalframes; i++) {"
    },
    {
        "line": 139,
        "fullcodeline": "if (!url_is_streamed(pb)) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (!st)"
    },
    {
        "line": 173,
        "fullcodeline": "for (i = 0; i < ape->totalframes; i++) {"
    },
    {
        "line": 21,
        "fullcodeline": "av_log(s, AV_LOG_ERROR, \"Unsupported file version - %d.%02d\\n\", ape->fileversion / 1000, (ape->fileversion % 1000) / 10);"
    },
    {
        "line": 26,
        "fullcodeline": "ape->padding1             = avio_rl16(pb);"
    },
    {
        "line": 27,
        "fullcodeline": "ape->descriptorlength     = avio_rl32(pb);"
    },
    {
        "line": 28,
        "fullcodeline": "ape->headerlength         = avio_rl32(pb);"
    },
    {
        "line": 29,
        "fullcodeline": "ape->seektablelength      = avio_rl32(pb);"
    },
    {
        "line": 30,
        "fullcodeline": "ape->wavheaderlength      = avio_rl32(pb);"
    },
    {
        "line": 31,
        "fullcodeline": "ape->audiodatalength      = avio_rl32(pb);"
    },
    {
        "line": 32,
        "fullcodeline": "ape->audiodatalength_high = avio_rl32(pb);"
    },
    {
        "line": 33,
        "fullcodeline": "ape->wavtaillength        = avio_rl32(pb);"
    },
    {
        "line": 34,
        "fullcodeline": "avio_read(pb, ape->md5, 16);"
    },
    {
        "line": 42,
        "fullcodeline": "ape->compressiontype      = avio_rl16(pb);"
    },
    {
        "line": 43,
        "fullcodeline": "ape->formatflags          = avio_rl16(pb);"
    },
    {
        "line": 44,
        "fullcodeline": "ape->blocksperframe       = avio_rl32(pb);"
    },
    {
        "line": 45,
        "fullcodeline": "ape->finalframeblocks     = avio_rl32(pb);"
    },
    {
        "line": 46,
        "fullcodeline": "ape->totalframes          = avio_rl32(pb);"
    },
    {
        "line": 47,
        "fullcodeline": "ape->bps                  = avio_rl16(pb);"
    },
    {
        "line": 48,
        "fullcodeline": "ape->channels             = avio_rl16(pb);"
    },
    {
        "line": 49,
        "fullcodeline": "ape->samplerate           = avio_rl32(pb);"
    },
    {
        "line": 95,
        "fullcodeline": "av_log(s, AV_LOG_ERROR, \"Too many frames: %d\\n\", ape->totalframes);"
    },
    {
        "line": 107,
        "fullcodeline": "ape->totalsamples += ape->blocksperframe * (ape->totalframes - 1);"
    },
    {
        "line": 110,
        "fullcodeline": "ape->seektable = av_malloc(ape->seektablelength);"
    },
    {
        "line": 119,
        "fullcodeline": "ape->frames[i].pos      = ape->seektable[i]; //ape->frames[i-1].pos + ape->blocksperframe;"
    },
    {
        "line": 120,
        "fullcodeline": "ape->frames[i].nblocks  = ape->blocksperframe;"
    },
    {
        "line": 121,
        "fullcodeline": "ape->frames[i - 1].size = ape->frames[i].pos - ape->frames[i - 1].pos;"
    },
    {
        "line": 122,
        "fullcodeline": "ape->frames[i].skip     = (ape->frames[i].pos - ape->frames[0].pos) & 3;"
    },
    {
        "line": 132,
        "fullcodeline": "ape->frames[i].size = (ape->frames[i].size + 3) & ~3;"
    },
    {
        "line": 140,
        "fullcodeline": "ff_ape_parse_tag(s);"
    },
    {
        "line": 141,
        "fullcodeline": "avio_seek(pb, 0, SEEK_SET);"
    },
    {
        "line": 174,
        "fullcodeline": "ape->frames[i].pts = pts;"
    },
    {
        "line": 175,
        "fullcodeline": "av_add_index_entry(st, ape->frames[i].pos, ape->frames[i].pts, 0, 0, AVINDEX_KEYFRAME);"
    },
    {
        "line": 176,
        "fullcodeline": "pts += ape->blocksperframe / MAC_SUBFRAME_SIZE;"
    },
    {
        "line": 16,
        "fullcodeline": "return -1;"
    },
    {
        "line": 22,
        "fullcodeline": "return -1;"
    },
    {
        "line": 38,
        "fullcodeline": "if (ape->descriptorlength > 52)"
    },
    {
        "line": 51,
        "fullcodeline": "ape->descriptorlength = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "ape->headerlength = 32;"
    },
    {
        "line": 54,
        "fullcodeline": "ape->compressiontype      = avio_rl16(pb);"
    },
    {
        "line": 55,
        "fullcodeline": "ape->formatflags          = avio_rl16(pb);"
    },
    {
        "line": 56,
        "fullcodeline": "ape->channels             = avio_rl16(pb);"
    },
    {
        "line": 57,
        "fullcodeline": "ape->samplerate           = avio_rl32(pb);"
    },
    {
        "line": 58,
        "fullcodeline": "ape->wavheaderlength      = avio_rl32(pb);"
    },
    {
        "line": 59,
        "fullcodeline": "ape->wavtaillength        = avio_rl32(pb);"
    },
    {
        "line": 60,
        "fullcodeline": "ape->totalframes          = avio_rl32(pb);"
    },
    {
        "line": 61,
        "fullcodeline": "ape->finalframeblocks     = avio_rl32(pb);"
    },
    {
        "line": 96,
        "fullcodeline": "return -1;"
    },
    {
        "line": 100,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 111,
        "fullcodeline": "for (i = 0; i < ape->seektablelength / sizeof(uint32_t); i++)"
    },
    {
        "line": 112,
        "fullcodeline": "ape->seektable[i] = avio_rl32(pb);"
    },
    {
        "line": 149,
        "fullcodeline": "return -1;"
    },
    {
        "line": 39,
        "fullcodeline": "avio_seek(pb, ape->descriptorlength - 52, SEEK_CUR);"
    },
    {
        "line": 63,
        "fullcodeline": "if (ape->formatflags & MAC_FORMAT_FLAG_HAS_PEAK_LEVEL) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (ape->formatflags & MAC_FORMAT_FLAG_HAS_SEEK_ELEMENTS) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (ape->formatflags & MAC_FORMAT_FLAG_8_BIT)"
    },
    {
        "line": 82,
        "fullcodeline": "if (ape->fileversion >= 3950)"
    },
    {
        "line": 90,
        "fullcodeline": "if (!(ape->formatflags & MAC_FORMAT_FLAG_CREATE_WAV_HEADER))"
    },
    {
        "line": 64,
        "fullcodeline": "avio_seek(pb, 4, SEEK_CUR); /* Skip the peak level */"
    },
    {
        "line": 65,
        "fullcodeline": "ape->headerlength += 4;"
    },
    {
        "line": 69,
        "fullcodeline": "ape->seektablelength = avio_rl32(pb);"
    },
    {
        "line": 70,
        "fullcodeline": "ape->headerlength += 4;"
    },
    {
        "line": 71,
        "fullcodeline": "ape->seektablelength *= sizeof(int32_t);"
    },
    {
        "line": 76,
        "fullcodeline": "ape->bps = 8;"
    },
    {
        "line": 83,
        "fullcodeline": "ape->blocksperframe = 73728 * 4;"
    },
    {
        "line": 91,
        "fullcodeline": "avio_seek(pb, ape->wavheaderlength, SEEK_CUR);"
    },
    {
        "line": 73,
        "fullcodeline": "ape->seektablelength = ape->totalframes * sizeof(int32_t);"
    },
    {
        "line": 77,
        "fullcodeline": "else if (ape->formatflags & MAC_FORMAT_FLAG_24_BIT)"
    },
    {
        "line": 84,
        "fullcodeline": "else if (ape->fileversion >= 3900 || (ape->fileversion >= 3800  && ape->compressiontype >= 4000))"
    },
    {
        "line": 78,
        "fullcodeline": "ape->bps = 24;"
    },
    {
        "line": 85,
        "fullcodeline": "ape->blocksperframe = 73728;"
    },
    {
        "line": 80,
        "fullcodeline": "ape->bps = 16;"
    },
    {
        "line": 87,
        "fullcodeline": "ape->blocksperframe = 9216;"
    }
]