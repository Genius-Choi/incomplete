[
    {
        "line": 3,
        "fullcodeline": "struct perf_event_context *ctx = event->ctx;"
    },
    {
        "line": 4,
        "fullcodeline": "struct task_struct *task = ctx->task;"
    },
    {
        "line": 5,
        "fullcodeline": "struct remove_event re = {"
    },
    {
        "line": 10,
        "fullcodeline": "lockdep_assert_held(&ctx->mutex);"
    },
    {
        "line": 27,
        "fullcodeline": "raw_spin_lock_irq(&ctx->lock);"
    },
    {
        "line": 48,
        "fullcodeline": "list_del_event(event, ctx);"
    },
    {
        "line": 49,
        "fullcodeline": "raw_spin_unlock_irq(&ctx->lock);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!task) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (!task_function_call(task, __perf_remove_from_context, &re))"
    },
    {
        "line": 19,
        "fullcodeline": "cpu_function_call(event->cpu, __perf_remove_from_context, &re);"
    },
    {
        "line": 33,
        "fullcodeline": "raw_spin_unlock_irq(&ctx->lock);"
    },
    {
        "line": 38,
        "fullcodeline": "task = ctx->task;"
    },
    {
        "line": 47,
        "fullcodeline": "perf_group_detach(event);"
    },
    {
        "line": 6,
        "fullcodeline": ".event = event,"
    },
    {
        "line": 7,
        "fullcodeline": ".detach_group = detach_group,"
    }
]