[
    {
        "line": 3,
        "fullcodeline": "struct perf_event *event = info;"
    },
    {
        "line": 4,
        "fullcodeline": "struct perf_event_context *ctx = event->ctx;"
    },
    {
        "line": 5,
        "fullcodeline": "struct perf_event *leader = event->group_leader;"
    },
    {
        "line": 6,
        "fullcodeline": "struct perf_cpu_context *cpuctx = __get_cpu_context(ctx);"
    },
    {
        "line": 21,
        "fullcodeline": "raw_spin_lock(&ctx->lock);"
    },
    {
        "line": 22,
        "fullcodeline": "update_context_time(ctx);"
    },
    {
        "line": 30,
        "fullcodeline": "perf_cgroup_set_timestamp(current, ctx);"
    },
    {
        "line": 32,
        "fullcodeline": "__perf_event_mark_enabled(event);"
    },
    {
        "line": 18,
        "fullcodeline": "if (!ctx->is_active)"
    },
    {
        "line": 24,
        "fullcodeline": "if (event->state >= PERF_EVENT_STATE_INACTIVE)"
    },
    {
        "line": 34,
        "fullcodeline": "if (!event_filter_match(event)) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (leader != event && leader->state != PERF_EVENT_STATE_ACTIVE)"
    },
    {
        "line": 47,
        "fullcodeline": "if (!group_can_go_on(event, cpuctx, 1)) {"
    },
    {
        "line": 19,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 35,
        "fullcodeline": "if (is_cgroup_event(event))"
    },
    {
        "line": 48,
        "fullcodeline": "err = -EEXIST;"
    },
    {
        "line": 61,
        "fullcodeline": "if (leader != event) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (event == leader)"
    },
    {
        "line": 62,
        "fullcodeline": "group_sched_out(leader, cpuctx, ctx);"
    },
    {
        "line": 67,
        "fullcodeline": "leader->state = PERF_EVENT_STATE_ERROR;"
    },
    {
        "line": 51,
        "fullcodeline": "err = group_sched_in(event, cpuctx, ctx);"
    },
    {
        "line": 53,
        "fullcodeline": "err = event_sched_in(event, cpuctx, ctx);"
    }
]