[
    {
        "line": 12,
        "fullcodeline": "state = &stringify->states[stringify->depth++];"
    },
    {
        "line": 13,
        "fullcodeline": "state->value = *value;"
    },
    {
        "line": 14,
        "fullcodeline": "state->array = njs_is_array(value);"
    },
    {
        "line": 15,
        "fullcodeline": "state->fast_array = njs_is_fast_array(value);"
    },
    {
        "line": 16,
        "fullcodeline": "state->index = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "state->written = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "state->key = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "if (njs_slow_path(stringify->depth >= NJS_JSON_MAX_DEPTH)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (njs_is_array(&stringify->replacer)) {"
    },
    {
        "line": 8,
        "fullcodeline": "njs_type_error(vm, \"Nested too deep or a cyclic structure\");"
    },
    {
        "line": 22,
        "fullcodeline": "state->length = njs_array_len(value);"
    },
    {
        "line": 26,
        "fullcodeline": "state->keys = njs_array(&stringify->replacer);"
    },
    {
        "line": 28,
        "fullcodeline": "} else if (state->array && !state->fast_array) {"
    },
    {
        "line": 29,
        "fullcodeline": "state->keys = njs_array_keys(vm, value, 0);"
    },
    {
        "line": 34,
        "fullcodeline": "ret = njs_object_length(vm, &state->value, &state->length);"
    },
    {
        "line": 40,
        "fullcodeline": "state->keys = njs_value_own_enumerate(vm, value, NJS_ENUM_KEYS,"
    },
    {
        "line": 30,
        "fullcodeline": "if (njs_slow_path(state->keys == NULL)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (njs_slow_path(state->keys == NULL)) {"
    }
]