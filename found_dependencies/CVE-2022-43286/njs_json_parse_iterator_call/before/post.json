[
    {
        "line": 5,
        "fullcodeline": "njs_value_t        arguments[3], *value;"
    },
    {
        "line": 8,
        "fullcodeline": "prop = state->prop;"
    },
    {
        "line": 10,
        "fullcodeline": "arguments[0] = state->value;"
    },
    {
        "line": 11,
        "fullcodeline": "arguments[1] = state->keys->start[state->index++];"
    },
    {
        "line": 15,
        "fullcodeline": "arguments[2] = prop->value;"
    },
    {
        "line": 17,
        "fullcodeline": "ret = njs_function_apply(vm, parse->function, arguments, 3,"
    },
    {
        "line": 36,
        "fullcodeline": "ret = njs_function_apply(vm, parse->function, arguments, 3,"
    },
    {
        "line": 58,
        "fullcodeline": "njs_internal_error(vm, \"njs_json_parse_iterator_call() unexpected \""
    },
    {
        "line": 19,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (njs_is_undefined(&parse->retval)) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (njs_is_undefined(&parse->retval)) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 59,
        "fullcodeline": "\"property type:%s\", njs_prop_type_string(prop->type));"
    },
    {
        "line": 24,
        "fullcodeline": "prop->type = NJS_WHITEOUT;"
    },
    {
        "line": 43,
        "fullcodeline": "ret = njs_value_property_i64_delete(vm, &state->value,"
    },
    {
        "line": 27,
        "fullcodeline": "prop->value = parse->retval;"
    },
    {
        "line": 47,
        "fullcodeline": "ret = njs_value_property_i64_set(vm, &state->value,"
    },
    {
        "line": 44,
        "fullcodeline": "state->index - 1, NULL);"
    },
    {
        "line": 48,
        "fullcodeline": "state->index - 1, &parse->retval);"
    }
]