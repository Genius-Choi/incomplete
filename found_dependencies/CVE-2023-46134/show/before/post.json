[
    {
        "line": 101,
        "fullcodeline": "final_options = dtale_config.build_show_options(options)"
    },
    {
        "line": 105,
        "fullcodeline": "setup_logging(logfile, log_level or \"info\", verbose)"
    },
    {
        "line": 122,
        "fullcodeline": "SSL_CONTEXT = options.get(\"ssl_context\")"
    },
    {
        "line": 123,
        "fullcodeline": "app_url = build_url(ACTIVE_PORT, ACTIVE_HOST)"
    },
    {
        "line": 127,
        "fullcodeline": "instance = startup("
    },
    {
        "line": 159,
        "fullcodeline": "instance.started_with_open_browser = final_options[\"open_browser\"]"
    },
    {
        "line": 160,
        "fullcodeline": "is_active = not running_with_flask_debug() and is_up(app_url)"
    },
    {
        "line": 87,
        "fullcodeline": "if global_state.get_data_id_by_name(name):"
    },
    {
        "line": 94,
        "fullcodeline": "if any(not c.isalnum() and not c.isspace() for c in name):"
    },
    {
        "line": 102,
        "fullcodeline": "logfile, log_level, verbose = map("
    },
    {
        "line": 124,
        "fullcodeline": "startup_url, final_app_root = build_startup_url_and_app_root("
    },
    {
        "line": 88,
        "fullcodeline": "print("
    },
    {
        "line": 95,
        "fullcodeline": "print("
    },
    {
        "line": 113,
        "fullcodeline": "from flask_ngrok import _run_ngrok"
    },
    {
        "line": 115,
        "fullcodeline": "ACTIVE_HOST = _run_ngrok()"
    },
    {
        "line": 116,
        "fullcodeline": "ACTIVE_PORT = None"
    },
    {
        "line": 118,
        "fullcodeline": "initialize_process_props("
    },
    {
        "line": 149,
        "fullcodeline": "hide_shutdown=final_options.get(\"hide_shutdown\"),"
    },
    {
        "line": 150,
        "fullcodeline": "column_edit_options=final_options.get(\"column_edit_options\"),"
    },
    {
        "line": 151,
        "fullcodeline": "auto_hide_empty_columns=final_options.get(\"auto_hide_empty_columns\"),"
    },
    {
        "line": 152,
        "fullcodeline": "highlight_filter=final_options.get(\"highlight_filter\"),"
    },
    {
        "line": 153,
        "fullcodeline": "hide_header_editor=final_options.get(\"hide_header_editor\"),"
    },
    {
        "line": 154,
        "fullcodeline": "lock_header_menu=final_options.get(\"lock_header_menu\"),"
    },
    {
        "line": 155,
        "fullcodeline": "hide_header_menu=final_options.get(\"hide_header_menu\"),"
    },
    {
        "line": 156,
        "fullcodeline": "hide_main_menu=final_options.get(\"hide_main_menu\"),"
    },
    {
        "line": 157,
        "fullcodeline": "hide_column_menus=final_options.get(\"hide_column_menus\"),"
    },
    {
        "line": 163,
        "fullcodeline": "def _start():"
    },
    {
        "line": 173,
        "fullcodeline": "def _start():"
    },
    {
        "line": 222,
        "fullcodeline": "logging.info(\"D-Tale started at: {}\".format(app_url))"
    },
    {
        "line": 223,
        "fullcodeline": "_start()"
    },
    {
        "line": 227,
        "fullcodeline": "print("
    },
    {
        "line": 103,
        "fullcodeline": "final_options.get, [\"logfile\", \"log_level\", \"verbose\"]"
    },
    {
        "line": 108,
        "fullcodeline": "if not PY3:"
    },
    {
        "line": 89,
        "fullcodeline": "\"Data has already been loaded to D-Tale with the name '{}', please try another one.\".format("
    },
    {
        "line": 109,
        "fullcodeline": "raise Exception("
    },
    {
        "line": 169,
        "fullcodeline": "thread = Timer(1, _run_ngrok)"
    },
    {
        "line": 170,
        "fullcodeline": "thread.setDaemon(True)"
    },
    {
        "line": 171,
        "fullcodeline": "thread.start()"
    },
    {
        "line": 214,
        "fullcodeline": "_start()"
    },
    {
        "line": 216,
        "fullcodeline": "_thread.start_new_thread(_start, ())"
    },
    {
        "line": 219,
        "fullcodeline": "instance.notebook()"
    },
    {
        "line": 228,
        "fullcodeline": "\"It looks like this data may have already been loaded to D-Tale based on shape and column names. Here is \""
    },
    {
        "line": 231,
        "fullcodeline": "DtaleData(ex.data_id, build_url(ACTIVE_PORT, ACTIVE_HOST)).main_url()"
    }
]