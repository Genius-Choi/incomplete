[
    {
        "line": 3,
        "fullcodeline": "int32\t\tval = 0,"
    },
    {
        "line": 5,
        "fullcodeline": "int32\t\tlenval = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "char\t   *strval = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "int32\t\tstack[STACKDEPTH];"
    },
    {
        "line": 8,
        "fullcodeline": "int32\t\tlenstack = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "uint16\t\tflag = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "while ((type = gettoken_query(state, &val, &lenval, &strval, &flag)) != END)"
    },
    {
        "line": 66,
        "fullcodeline": "lenstack--;"
    },
    {
        "line": 67,
        "fullcodeline": "pushquery(state, OPR, stack[lenstack], 0, 0, 0);"
    },
    {
        "line": 16,
        "fullcodeline": "pushval_asis(state, VAL, strval, lenval, flag);"
    },
    {
        "line": 56,
        "fullcodeline": "ereport(ERROR,"
    },
    {
        "line": 17,
        "fullcodeline": "while (lenstack && (stack[lenstack - 1] == (int32) '&' ||"
    },
    {
        "line": 25,
        "fullcodeline": "if (lenstack && val == (int32) '|')"
    },
    {
        "line": 37,
        "fullcodeline": "if (makepol(state) == ERR)"
    },
    {
        "line": 39,
        "fullcodeline": "while (lenstack && (stack[lenstack - 1] == (int32) '&' ||"
    },
    {
        "line": 57,
        "fullcodeline": "(errcode(ERRCODE_SYNTAX_ERROR),"
    },
    {
        "line": 20,
        "fullcodeline": "lenstack--;"
    },
    {
        "line": 21,
        "fullcodeline": "pushquery(state, OPR, stack[lenstack], 0, 0, 0);"
    },
    {
        "line": 26,
        "fullcodeline": "pushquery(state, OPR, val, 0, 0, 0);"
    },
    {
        "line": 42,
        "fullcodeline": "lenstack--;"
    },
    {
        "line": 43,
        "fullcodeline": "pushquery(state, OPR, stack[lenstack], 0, 0, 0);"
    },
    {
        "line": 49,
        "fullcodeline": "lenstack--;"
    },
    {
        "line": 50,
        "fullcodeline": "pushquery(state, OPR, stack[lenstack], 0, 0, 0);"
    },
    {
        "line": 18,
        "fullcodeline": "stack[lenstack - 1] == (int32) '!'))"
    },
    {
        "line": 32,
        "fullcodeline": "stack[lenstack] = val;"
    },
    {
        "line": 33,
        "fullcodeline": "lenstack++;"
    },
    {
        "line": 40,
        "fullcodeline": "stack[lenstack - 1] == (int32) '!'))"
    },
    {
        "line": 58,
        "fullcodeline": "errmsg(\"syntax error\")));"
    },
    {
        "line": 29,
        "fullcodeline": "if (lenstack == STACKDEPTH)"
    },
    {
        "line": 31,
        "fullcodeline": "elog(ERROR, \"stack too short\");"
    }
]