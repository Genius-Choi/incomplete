[
    {
        "line": 17,
        "fullcodeline": "state.buf = buf;"
    },
    {
        "line": 18,
        "fullcodeline": "state.state = WAITOPERAND;"
    },
    {
        "line": 19,
        "fullcodeline": "state.count = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "state.num = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "state.str = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "state.sumlen = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "state.lenop = 64;"
    },
    {
        "line": 26,
        "fullcodeline": "state.curop = state.op = (char *) palloc(state.lenop);"
    },
    {
        "line": 27,
        "fullcodeline": "*(state.curop) = '\\0';"
    },
    {
        "line": 30,
        "fullcodeline": "makepol(&state);"
    },
    {
        "line": 38,
        "fullcodeline": "commonlen = COMPUTESIZE(state.num, state.sumlen);"
    },
    {
        "line": 39,
        "fullcodeline": "query = (ltxtquery *) palloc(commonlen);"
    },
    {
        "line": 40,
        "fullcodeline": "SET_VARSIZE(query, commonlen);"
    },
    {
        "line": 41,
        "fullcodeline": "query->size = state.num;"
    },
    {
        "line": 42,
        "fullcodeline": "ptr = GETQUERY(query);"
    },
    {
        "line": 58,
        "fullcodeline": "memcpy((void *) GETOPERAND(query), (void *) state.op, state.sumlen);"
    },
    {
        "line": 59,
        "fullcodeline": "pfree(state.op);"
    },
    {
        "line": 62,
        "fullcodeline": "pos = 0;"
    },
    {
        "line": 63,
        "fullcodeline": "findoprnd(ptr, &pos);"
    },
    {
        "line": 31,
        "fullcodeline": "if (!state.num)"
    },
    {
        "line": 45,
        "fullcodeline": "for (i = 0; i < state.num; i++)"
    },
    {
        "line": 32,
        "fullcodeline": "ereport(ERROR,"
    },
    {
        "line": 47,
        "fullcodeline": "ptr[i].type = state.str->type;"
    },
    {
        "line": 48,
        "fullcodeline": "ptr[i].val = state.str->val;"
    },
    {
        "line": 49,
        "fullcodeline": "ptr[i].distance = state.str->distance;"
    },
    {
        "line": 50,
        "fullcodeline": "ptr[i].length = state.str->length;"
    },
    {
        "line": 51,
        "fullcodeline": "ptr[i].flag = state.str->flag;"
    },
    {
        "line": 52,
        "fullcodeline": "tmp = state.str->next;"
    },
    {
        "line": 53,
        "fullcodeline": "pfree(state.str);"
    },
    {
        "line": 54,
        "fullcodeline": "state.str = tmp;"
    },
    {
        "line": 33,
        "fullcodeline": "(errcode(ERRCODE_SYNTAX_ERROR),"
    },
    {
        "line": 34,
        "fullcodeline": "errmsg(\"syntax error\"),"
    },
    {
        "line": 35,
        "fullcodeline": "errdetail(\"Empty query.\")));"
    }
]