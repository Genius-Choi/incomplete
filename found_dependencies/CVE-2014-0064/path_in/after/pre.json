[
    {
        "line": 3,
        "fullcodeline": "char\t   *str = PG_GETARG_CSTRING(0);"
    },
    {
        "line": 10,
        "fullcodeline": "int\t\t\tdepth = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "s = str;"
    },
    {
        "line": 28,
        "fullcodeline": "base_size = sizeof(path->p[0]) * npts;"
    },
    {
        "line": 29,
        "fullcodeline": "size = offsetof(PATH, p[0]) + base_size;"
    },
    {
        "line": 37,
        "fullcodeline": "path = (PATH *) palloc(size);"
    },
    {
        "line": 39,
        "fullcodeline": "SET_VARSIZE(path, size);"
    },
    {
        "line": 40,
        "fullcodeline": "path->npts = npts;"
    },
    {
        "line": 48,
        "fullcodeline": "path->closed = (!isopen);"
    },
    {
        "line": 50,
        "fullcodeline": "path->dummy = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "PG_RETURN_PATH_P(path);"
    },
    {
        "line": 12,
        "fullcodeline": "if ((npts = pair_count(str, ',')) <= 0)"
    },
    {
        "line": 18,
        "fullcodeline": "while (isspace((unsigned char) *s))"
    },
    {
        "line": 19,
        "fullcodeline": "s++;"
    },
    {
        "line": 22,
        "fullcodeline": "if ((*s == LDELIM) && (strrchr(s, LDELIM) == s))"
    },
    {
        "line": 32,
        "fullcodeline": "if (base_size / npts != sizeof(path->p[0]) || size <= base_size)"
    },
    {
        "line": 42,
        "fullcodeline": "if ((!path_decode(TRUE, npts, s, &isopen, &s, &(path->p[0])))"
    },
    {
        "line": 13,
        "fullcodeline": "ereport(ERROR,"
    },
    {
        "line": 24,
        "fullcodeline": "s++;"
    },
    {
        "line": 25,
        "fullcodeline": "depth++;"
    },
    {
        "line": 33,
        "fullcodeline": "ereport(ERROR,"
    },
    {
        "line": 43,
        "fullcodeline": "&& (!((depth == 0) && (*s == '\\0'))) && !((depth >= 1) && (*s == RDELIM)))"
    },
    {
        "line": 44,
        "fullcodeline": "ereport(ERROR,"
    },
    {
        "line": 14,
        "fullcodeline": "(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),"
    },
    {
        "line": 34,
        "fullcodeline": "(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),"
    },
    {
        "line": 45,
        "fullcodeline": "(errcode(ERRCODE_INVALID_TEXT_REPRESENTATION),"
    },
    {
        "line": 15,
        "fullcodeline": "errmsg(\"invalid input syntax for type path: \\\"%s\\\"\", str)));"
    },
    {
        "line": 35,
        "fullcodeline": "errmsg(\"too many points requested\")));"
    },
    {
        "line": 46,
        "fullcodeline": "errmsg(\"invalid input syntax for type path: \\\"%s\\\"\", str)));"
    }
]