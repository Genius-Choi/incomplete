[
    {
        "line": 3,
        "fullcodeline": "char\t   *buf = (char *) PG_GETARG_POINTER(0);"
    },
    {
        "line": 10,
        "fullcodeline": "int32\t\tpos = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "state.buf = buf;"
    },
    {
        "line": 17,
        "fullcodeline": "state.state = WAITOPERAND;"
    },
    {
        "line": 18,
        "fullcodeline": "state.count = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "state.num = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "state.str = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "makepol(&state);"
    },
    {
        "line": 34,
        "fullcodeline": "commonlen = COMPUTESIZE(state.num);"
    },
    {
        "line": 36,
        "fullcodeline": "query = (QUERYTYPE *) palloc(commonlen);"
    },
    {
        "line": 37,
        "fullcodeline": "SET_VARSIZE(query, commonlen);"
    },
    {
        "line": 38,
        "fullcodeline": "query->size = state.num;"
    },
    {
        "line": 39,
        "fullcodeline": "ptr = GETQUERY(query);"
    },
    {
        "line": 50,
        "fullcodeline": "pos = query->size - 1;"
    },
    {
        "line": 51,
        "fullcodeline": "findoprnd(ptr, &pos);"
    },
    {
        "line": 65,
        "fullcodeline": "PG_RETURN_POINTER(query);"
    },
    {
        "line": 24,
        "fullcodeline": "if (!state.num)"
    },
    {
        "line": 29,
        "fullcodeline": "if (state.num > QUERYTYPEMAXITEMS)"
    },
    {
        "line": 41,
        "fullcodeline": "for (i = state.num - 1; i >= 0; i--)"
    },
    {
        "line": 25,
        "fullcodeline": "ereport(ERROR,"
    },
    {
        "line": 30,
        "fullcodeline": "ereport(ERROR,"
    },
    {
        "line": 43,
        "fullcodeline": "ptr[i].type = state.str->type;"
    },
    {
        "line": 44,
        "fullcodeline": "ptr[i].val = state.str->val;"
    },
    {
        "line": 45,
        "fullcodeline": "tmp = state.str->next;"
    },
    {
        "line": 46,
        "fullcodeline": "pfree(state.str);"
    },
    {
        "line": 47,
        "fullcodeline": "state.str = tmp;"
    },
    {
        "line": 26,
        "fullcodeline": "(errcode(ERRCODE_INVALID_PARAMETER_VALUE),"
    },
    {
        "line": 31,
        "fullcodeline": "(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),"
    },
    {
        "line": 27,
        "fullcodeline": "errmsg(\"empty query\")));"
    },
    {
        "line": 32,
        "fullcodeline": "errmsg(\"number of query items (%d) exceeds the maximum allowed (%d)\","
    },
    {
        "line": 33,
        "fullcodeline": "state.num, (int) QUERYTYPEMAXITEMS)));"
    }
]