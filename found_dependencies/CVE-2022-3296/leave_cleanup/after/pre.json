[
    {
        "line": 3,
        "fullcodeline": "int\t\tpending = csp->pending;"
    },
    {
        "line": 5,
        "fullcodeline": "if (pending == CSTP_NONE)\t// nothing to do"
    },
    {
        "line": 14,
        "fullcodeline": "if (pending & CSTP_THROW)"
    },
    {
        "line": 22,
        "fullcodeline": "if (msg_list != NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "if (pending & CSTP_THROW)"
    },
    {
        "line": 55,
        "fullcodeline": "if (pending & CSTP_ERROR)"
    },
    {
        "line": 57,
        "fullcodeline": "if (pending & CSTP_INTERRUPT)"
    },
    {
        "line": 59,
        "fullcodeline": "if (pending & CSTP_THROW)"
    },
    {
        "line": 18,
        "fullcodeline": "report_discard_pending(pending, NULL);"
    },
    {
        "line": 39,
        "fullcodeline": "current_exception = csp->exception;"
    },
    {
        "line": 56,
        "fullcodeline": "did_emsg = TRUE;"
    },
    {
        "line": 58,
        "fullcodeline": "got_int = TRUE;"
    },
    {
        "line": 64,
        "fullcodeline": "(pending & CSTP_THROW) ? (void *)current_exception : NULL);"
    },
    {
        "line": 46,
        "fullcodeline": "else if (pending & CSTP_ERROR)"
    },
    {
        "line": 48,
        "fullcodeline": "cause_abort = force_abort;"
    }
]