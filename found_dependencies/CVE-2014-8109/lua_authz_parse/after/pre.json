[
    {
        "line": 6,
        "fullcodeline": "lua_authz_provider_func *func = apr_pcalloc(cmd->pool, sizeof(lua_authz_provider_func));"
    },
    {
        "line": 8,
        "fullcodeline": "apr_pool_userdata_get((void**)&provider_name, AUTHZ_PROVIDER_NAME_NOTE,"
    },
    {
        "line": 10,
        "fullcodeline": "ap_assert(provider_name != NULL);"
    },
    {
        "line": 12,
        "fullcodeline": "spec = apr_hash_get(lua_authz_providers, provider_name, APR_HASH_KEY_STRING);"
    },
    {
        "line": 13,
        "fullcodeline": "ap_assert(spec != NULL);"
    },
    {
        "line": 14,
        "fullcodeline": "func->spec = spec;"
    },
    {
        "line": 24,
        "fullcodeline": "*parsed_require_line = func;"
    },
    {
        "line": 16,
        "fullcodeline": "if (require_line && *require_line) {"
    },
    {
        "line": 18,
        "fullcodeline": "func->args = apr_array_make(cmd->pool, 2, sizeof(const char *));"
    },
    {
        "line": 19,
        "fullcodeline": "while ((arg = ap_getword_conf(cmd->pool, &require_line)) && *arg) {"
    }
]