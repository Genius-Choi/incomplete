[
    {
        "line": 11,
        "fullcodeline": "dp = (const struct icmp6_hdr *)bp;"
    },
    {
        "line": 13,
        "fullcodeline": "siz = ep - bp;"
    },
    {
        "line": 9,
        "fullcodeline": "if (ep < bp)"
    },
    {
        "line": 24,
        "fullcodeline": "ND_TCHECK2(*dp, sizeof(*ni6));"
    },
    {
        "line": 25,
        "fullcodeline": "ni6 = (const struct icmp6_nodeinfo *)dp;"
    },
    {
        "line": 134,
        "fullcodeline": "needcomma = 0;"
    },
    {
        "line": 136,
        "fullcodeline": "ND_TCHECK2(*dp, sizeof(*ni6));"
    },
    {
        "line": 137,
        "fullcodeline": "ni6 = (const struct icmp6_nodeinfo *)dp;"
    },
    {
        "line": 17,
        "fullcodeline": "if (siz == sizeof(*dp) + 4) {"
    },
    {
        "line": 22,
        "fullcodeline": "ND_PRINT((ndo,\" node information query\"));"
    },
    {
        "line": 26,
        "fullcodeline": "ND_PRINT((ndo,\" (\"));\t/*)*/"
    },
    {
        "line": 27,
        "fullcodeline": "switch (EXTRACT_16BITS(&ni6->ni_qtype)) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (siz == sizeof(*ni6)) {"
    },
    {
        "line": 125,
        "fullcodeline": "ND_PRINT((ndo,\")\"));"
    },
    {
        "line": 129,
        "fullcodeline": "if (icmp6len > siz) {"
    },
    {
        "line": 138,
        "fullcodeline": "ND_PRINT((ndo,\" node information reply\"));"
    },
    {
        "line": 139,
        "fullcodeline": "ND_PRINT((ndo,\" (\"));\t/*)*/"
    },
    {
        "line": 163,
        "fullcodeline": "if (ni6->ni_code != ICMP6_NI_SUCCESS) {"
    },
    {
        "line": 241,
        "fullcodeline": "ND_PRINT((ndo,\")\"));"
    },
    {
        "line": 33,
        "fullcodeline": "i = EXTRACT_16BITS(&ni6->ni_flags);"
    },
    {
        "line": 42,
        "fullcodeline": "i = ni6->ni_flags;"
    },
    {
        "line": 59,
        "fullcodeline": "if (ni6->ni_qtype == NI_QTYPE_NOOP ||"
    },
    {
        "line": 60,
        "fullcodeline": "ni6->ni_qtype == NI_QTYPE_SUPTYPES) {"
    },
    {
        "line": 93,
        "fullcodeline": "cp = (const u_char *)(ni6 + 1);"
    },
    {
        "line": 182,
        "fullcodeline": "i = EXTRACT_16BITS(&ni6->ni_flags);"
    },
    {
        "line": 190,
        "fullcodeline": "cp = (const u_char *)(ni6 + 1) + 4;"
    },
    {
        "line": 191,
        "fullcodeline": "ND_TCHECK(cp[0]);"
    },
    {
        "line": 212,
        "fullcodeline": "i = sizeof(*ni6);"
    },
    {
        "line": 221,
        "fullcodeline": "i = ni6->ni_flags;"
    },
    {
        "line": 19,
        "fullcodeline": "ND_PRINT((ndo,\" who-are-you request\"));"
    },
    {
        "line": 29,
        "fullcodeline": "ND_PRINT((ndo,\"noop\"));"
    },
    {
        "line": 32,
        "fullcodeline": "ND_PRINT((ndo,\"supported qtypes\"));"
    },
    {
        "line": 38,
        "fullcodeline": "ND_PRINT((ndo,\"DNS name\"));"
    },
    {
        "line": 41,
        "fullcodeline": "ND_PRINT((ndo,\"node addresses\"));"
    },
    {
        "line": 43,
        "fullcodeline": "if (!i)"
    },
    {
        "line": 46,
        "fullcodeline": "ND_PRINT((ndo,\" [%s%s%s%s%s%s]\","
    },
    {
        "line": 55,
        "fullcodeline": "ND_PRINT((ndo,\"unknown\"));"
    },
    {
        "line": 65,
        "fullcodeline": "ND_PRINT((ndo,\")\"));"
    },
    {
        "line": 72,
        "fullcodeline": "ND_PRINT((ndo,\", 03 draft\"));"
    },
    {
        "line": 74,
        "fullcodeline": "ND_PRINT((ndo,\")\"));"
    },
    {
        "line": 88,
        "fullcodeline": "ND_PRINT((ndo,\", subject=%s\","
    },
    {
        "line": 92,
        "fullcodeline": "ND_PRINT((ndo,\", subject=DNS name\"));"
    },
    {
        "line": 94,
        "fullcodeline": "if (cp[0] == ep - cp - 1) {"
    },
    {
        "line": 116,
        "fullcodeline": "ND_PRINT((ndo,\", subject=%s\","
    },
    {
        "line": 120,
        "fullcodeline": "ND_PRINT((ndo,\", unknown subject\"));"
    },
    {
        "line": 130,
        "fullcodeline": "ND_PRINT((ndo,\"[|icmp6: node information reply]\"));"
    },
    {
        "line": 148,
        "fullcodeline": "ND_PRINT((ndo,\"refused\"));"
    },
    {
        "line": 150,
        "fullcodeline": "if (siz != sizeof(*ni6))"
    },
    {
        "line": 155,
        "fullcodeline": "ND_PRINT((ndo,\"unknown\"));"
    },
    {
        "line": 157,
        "fullcodeline": "if (siz != sizeof(*ni6))"
    },
    {
        "line": 165,
        "fullcodeline": "ND_PRINT((ndo,\")\"));"
    },
    {
        "line": 173,
        "fullcodeline": "ND_PRINT((ndo,\"noop\"));"
    },
    {
        "line": 181,
        "fullcodeline": "ND_PRINT((ndo,\"supported qtypes\"));"
    },
    {
        "line": 189,
        "fullcodeline": "ND_PRINT((ndo,\"DNS name\"));"
    },
    {
        "line": 192,
        "fullcodeline": "if (cp[0] == ep - cp - 1) {"
    },
    {
        "line": 211,
        "fullcodeline": "ND_PRINT((ndo,\"node addresses\"));"
    },
    {
        "line": 213,
        "fullcodeline": "while (i < siz) {"
    },
    {
        "line": 222,
        "fullcodeline": "if (!i)"
    },
    {
        "line": 224,
        "fullcodeline": "ND_PRINT((ndo,\" [%s%s%s%s%s%s%s]\","
    },
    {
        "line": 236,
        "fullcodeline": "ND_PRINT((ndo,\"unknown\"));"
    },
    {
        "line": 80,
        "fullcodeline": "if (!ND_TTEST2(*dp,"
    },
    {
        "line": 98,
        "fullcodeline": "cp++;"
    },
    {
        "line": 109,
        "fullcodeline": "if (!ND_TTEST2(*dp, sizeof(*ni6) + sizeof(struct in_addr)))"
    },
    {
        "line": 196,
        "fullcodeline": "cp++;"
    },
    {
        "line": 205,
        "fullcodeline": "if ((EXTRACT_16BITS(&ni6->ni_flags) & 0x01) != 0)"
    },
    {
        "line": 217,
        "fullcodeline": "i += sizeof(struct in6_addr);"
    },
    {
        "line": 219,
        "fullcodeline": "i += sizeof(int32_t);"
    },
    {
        "line": 35,
        "fullcodeline": "ND_PRINT((ndo,\" [%s]\", (i & 0x01) ? \"C\" : \"\"));"
    },
    {
        "line": 89,
        "fullcodeline": "ip6addr_string(ndo, ni6 + 1)));"
    },
    {
        "line": 99,
        "fullcodeline": "ND_PRINT((ndo,\", \\\"\"));"
    },
    {
        "line": 100,
        "fullcodeline": "while (cp < ep) {"
    },
    {
        "line": 104,
        "fullcodeline": "ND_PRINT((ndo,\"\\\"\"));"
    },
    {
        "line": 106,
        "fullcodeline": "dnsname_print(ndo, cp, ep);"
    },
    {
        "line": 117,
        "fullcodeline": "ipaddr_string(ndo, ni6 + 1)));"
    },
    {
        "line": 143,
        "fullcodeline": "ND_PRINT((ndo,\"success\"));"
    },
    {
        "line": 172,
        "fullcodeline": "ND_PRINT((ndo,\", \"));"
    },
    {
        "line": 180,
        "fullcodeline": "ND_PRINT((ndo,\", \"));"
    },
    {
        "line": 184,
        "fullcodeline": "ND_PRINT((ndo,\" [%s]\", (i & 0x01) ? \"C\" : \"\"));"
    },
    {
        "line": 188,
        "fullcodeline": "ND_PRINT((ndo,\", \"));"
    },
    {
        "line": 197,
        "fullcodeline": "ND_PRINT((ndo,\", \\\"\"));"
    },
    {
        "line": 198,
        "fullcodeline": "while (cp < ep) {"
    },
    {
        "line": 202,
        "fullcodeline": "ND_PRINT((ndo,\"\\\"\"));"
    },
    {
        "line": 204,
        "fullcodeline": "dnsname_print(ndo, cp, ep);"
    },
    {
        "line": 206,
        "fullcodeline": "ND_PRINT((ndo,\" [TTL=%u]\", EXTRACT_32BITS(ni6 + 1)));"
    },
    {
        "line": 210,
        "fullcodeline": "ND_PRINT((ndo,\", \"));"
    },
    {
        "line": 214,
        "fullcodeline": "if (i + sizeof(struct in6_addr) + sizeof(int32_t) > siz)"
    },
    {
        "line": 216,
        "fullcodeline": "ND_PRINT((ndo,\" %s\", ip6addr_string(ndo, bp + i)));"
    },
    {
        "line": 218,
        "fullcodeline": "ND_PRINT((ndo,\"(%d)\", (int32_t)EXTRACT_32BITS(bp + i)));"
    },
    {
        "line": 235,
        "fullcodeline": "ND_PRINT((ndo,\", \"));"
    },
    {
        "line": 47,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_ANYCAST) ? \"a\" : \"\","
    },
    {
        "line": 48,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_GLOBAL) ? \"G\" : \"\","
    },
    {
        "line": 49,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_SITELOCAL) ? \"S\" : \"\","
    },
    {
        "line": 50,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_LINKLOCAL) ? \"L\" : \"\","
    },
    {
        "line": 51,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_COMPAT) ? \"C\" : \"\","
    },
    {
        "line": 101,
        "fullcodeline": "safeputchar(ndo, *cp);"
    },
    {
        "line": 102,
        "fullcodeline": "cp++;"
    },
    {
        "line": 199,
        "fullcodeline": "safeputchar(ndo, *cp);"
    },
    {
        "line": 200,
        "fullcodeline": "cp++;"
    },
    {
        "line": 225,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_ANYCAST) ? \"a\" : \"\","
    },
    {
        "line": 226,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_GLOBAL) ? \"G\" : \"\","
    },
    {
        "line": 227,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_SITELOCAL) ? \"S\" : \"\","
    },
    {
        "line": 228,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_LINKLOCAL) ? \"L\" : \"\","
    },
    {
        "line": 229,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_COMPAT) ? \"C\" : \"\","
    },
    {
        "line": 230,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_ALL) ? \"A\" : \"\","
    },
    {
        "line": 231,
        "fullcodeline": "(i & NI_NODEADDR_FLAG_TRUNCATE) ? \"T\" : \"\"));"
    },
    {
        "line": 63,
        "fullcodeline": "ND_PRINT((ndo,\", invalid len\"));"
    },
    {
        "line": 85,
        "fullcodeline": "ND_PRINT((ndo,\", invalid subject len\"));"
    },
    {
        "line": 97,
        "fullcodeline": "ND_PRINT((ndo,\", 03 draft\"));"
    },
    {
        "line": 113,
        "fullcodeline": "ND_PRINT((ndo,\", invalid subject len\"));"
    },
    {
        "line": 152,
        "fullcodeline": "ND_PRINT((ndo,\", invalid length\"));"
    },
    {
        "line": 159,
        "fullcodeline": "ND_PRINT((ndo,\", invalid length\"));"
    },
    {
        "line": 176,
        "fullcodeline": "ND_PRINT((ndo,\", invalid length\"));"
    },
    {
        "line": 195,
        "fullcodeline": "ND_PRINT((ndo,\", 03 draft\"));"
    }
]