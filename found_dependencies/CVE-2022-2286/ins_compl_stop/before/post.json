[
    {
        "line": 24,
        "fullcodeline": "want_cindent = (get_can_cindent() && cindent_on());"
    },
    {
        "line": 72,
        "fullcodeline": "auto_format(FALSE, TRUE);"
    },
    {
        "line": 77,
        "fullcodeline": "ctrl_x_mode = prev_mode;"
    },
    {
        "line": 78,
        "fullcodeline": "ins_apply_autocmds(EVENT_COMPLETEDONEPRE);"
    },
    {
        "line": 80,
        "fullcodeline": "ins_compl_free();"
    },
    {
        "line": 81,
        "fullcodeline": "compl_started = FALSE;"
    },
    {
        "line": 82,
        "fullcodeline": "compl_matches = 0;"
    },
    {
        "line": 85,
        "fullcodeline": "ctrl_x_mode = CTRL_X_NORMAL;"
    },
    {
        "line": 86,
        "fullcodeline": "compl_enter_selects = FALSE;"
    },
    {
        "line": 104,
        "fullcodeline": "ins_apply_autocmds(EVENT_COMPLETEDONE);"
    },
    {
        "line": 9,
        "fullcodeline": "if (compl_curr_match != NULL || compl_leader != NULL || c == Ctrl_E)"
    },
    {
        "line": 28,
        "fullcodeline": "if (compl_cont_mode == CTRL_X_WHOLE_LINE)"
    },
    {
        "line": 55,
        "fullcodeline": "if ((c == Ctrl_Y || (compl_enter_selects"
    },
    {
        "line": 62,
        "fullcodeline": "if (c == Ctrl_E)"
    },
    {
        "line": 83,
        "fullcodeline": "if (!shortmess(SHM_COMPLETIONMENU))"
    },
    {
        "line": 87,
        "fullcodeline": "if (edit_submode != NULL)"
    },
    {
        "line": 100,
        "fullcodeline": "if (want_cindent && in_cinkeys(KEY_COMPLETE, ' ', inindent(0)))"
    },
    {
        "line": 21,
        "fullcodeline": "ins_compl_fixRedoBufForLeader(ptr);"
    },
    {
        "line": 58,
        "fullcodeline": "retval = TRUE;"
    },
    {
        "line": 64,
        "fullcodeline": "ins_compl_delete();"
    },
    {
        "line": 69,
        "fullcodeline": "retval = TRUE;"
    },
    {
        "line": 84,
        "fullcodeline": "msg_clr_cmdline();\t// necessary for \"noshowmode\""
    },
    {
        "line": 89,
        "fullcodeline": "edit_submode = NULL;"
    },
    {
        "line": 90,
        "fullcodeline": "showmode();"
    },
    {
        "line": 101,
        "fullcodeline": "do_c_expr_indent();"
    },
    {
        "line": 17,
        "fullcodeline": "if (compl_curr_match != NULL && compl_used_match && c != Ctrl_E)"
    },
    {
        "line": 65,
        "fullcodeline": "if (compl_leader != NULL)"
    },
    {
        "line": 18,
        "fullcodeline": "ptr = compl_curr_match->cp_str;"
    },
    {
        "line": 33,
        "fullcodeline": "do_c_expr_indent();"
    },
    {
        "line": 34,
        "fullcodeline": "want_cindent = FALSE;\t// don't do it again"
    },
    {
        "line": 42,
        "fullcodeline": "if (prev_col > 0)"
    },
    {
        "line": 45,
        "fullcodeline": "if (!arrow_used && !ins_need_undo_get() && c != Ctrl_E)"
    },
    {
        "line": 47,
        "fullcodeline": "if (prev_col > 0"
    },
    {
        "line": 56,
        "fullcodeline": "&& (c == CAR || c == K_KENTER || c == NL)))"
    },
    {
        "line": 66,
        "fullcodeline": "ins_bytes(compl_leader + get_compl_len());"
    },
    {
        "line": 20,
        "fullcodeline": "ptr = NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "dec_cursor();"
    },
    {
        "line": 46,
        "fullcodeline": "insertchar(NUL, 0, -1);"
    },
    {
        "line": 48,
        "fullcodeline": "&& ml_get_curline()[curwin->w_cursor.col] != NUL)"
    },
    {
        "line": 49,
        "fullcodeline": "inc_cursor();"
    },
    {
        "line": 67,
        "fullcodeline": "else if (compl_first_match != NULL)"
    },
    {
        "line": 68,
        "fullcodeline": "ins_bytes(compl_orig_text + get_compl_len());"
    }
]