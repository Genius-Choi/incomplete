[
    {
        "line": 10,
        "fullcodeline": "ExprList *pEList = 0;  /* List of columns to extract. */"
    },
    {
        "line": 15,
        "fullcodeline": "int rc = 1;            /* Value to return from this function */"
    },
    {
        "line": 21,
        "fullcodeline": "ExprList *pMinMaxOrderBy = 0;  /* Added ORDER BY for min/max queries */"
    },
    {
        "line": 24,
        "fullcodeline": "db = pParse->db;"
    },
    {
        "line": 25,
        "fullcodeline": "v = sqlite3GetVdbe(pParse);"
    },
    {
        "line": 30,
        "fullcodeline": "memset(&sAggInfo, 0, sizeof(sAggInfo));"
    },
    {
        "line": 53,
        "fullcodeline": "sqlite3SelectPrep(pParse, p, 0);"
    },
    {
        "line": 80,
        "fullcodeline": "pTabList = p->pSrc;"
    },
    {
        "line": 81,
        "fullcodeline": "isAgg = (p->selFlags & SF_Aggregate)!=0;"
    },
    {
        "line": 82,
        "fullcodeline": "memset(&sSort, 0, sizeof(sSort));"
    },
    {
        "line": 83,
        "fullcodeline": "sSort.pOrderBy = p->pOrderBy;"
    },
    {
        "line": 376,
        "fullcodeline": "pEList = p->pEList;"
    },
    {
        "line": 377,
        "fullcodeline": "pWhere = p->pWhere;"
    },
    {
        "line": 378,
        "fullcodeline": "pGroupBy = p->pGroupBy;"
    },
    {
        "line": 379,
        "fullcodeline": "pHaving = p->pHaving;"
    },
    {
        "line": 380,
        "fullcodeline": "sDistinct.isTnct = (p->selFlags & SF_Distinct)!=0;"
    },
    {
        "line": 453,
        "fullcodeline": "iEnd = sqlite3VdbeMakeLabel(pParse);"
    },
    {
        "line": 457,
        "fullcodeline": "computeLimitRegisters(pParse, p, iEnd);"
    },
    {
        "line": 1044,
        "fullcodeline": "rc = (pParse->nErr>0);"
    },
    {
        "line": 1050,
        "fullcodeline": "sqlite3ExprListDelete(db, pMinMaxOrderBy);"
    },
    {
        "line": 1051,
        "fullcodeline": "sqlite3DbFree(db, sAggInfo.aCol);"
    },
    {
        "line": 26,
        "fullcodeline": "if( p==0 || db->mallocFailed || pParse->nErr ){"
    },
    {
        "line": 29,
        "fullcodeline": "if( sqlite3AuthCheck(pParse, SQLITE_SELECT, 0, 0, 0) ) return 1;"
    },
    {
        "line": 38,
        "fullcodeline": "assert( p->pOrderBy==0 || pDest->eDest!=SRT_DistFifo );"
    },
    {
        "line": 39,
        "fullcodeline": "assert( p->pOrderBy==0 || pDest->eDest!=SRT_Fifo );"
    },
    {
        "line": 40,
        "fullcodeline": "assert( p->pOrderBy==0 || pDest->eDest!=SRT_DistQueue );"
    },
    {
        "line": 41,
        "fullcodeline": "assert( p->pOrderBy==0 || pDest->eDest!=SRT_Queue );"
    },
    {
        "line": 42,
        "fullcodeline": "if( IgnorableOrderby(pDest) ){"
    },
    {
        "line": 54,
        "fullcodeline": "if( pParse->nErr || db->mallocFailed ){"
    },
    {
        "line": 57,
        "fullcodeline": "assert( p->pEList!=0 );"
    },
    {
        "line": 65,
        "fullcodeline": "if( pDest->eDest==SRT_Output ){"
    },
    {
        "line": 70,
        "fullcodeline": "if( sqlite3WindowRewrite(pParse, p) ){"
    },
    {
        "line": 89,
        "fullcodeline": "for(i=0; !p->pPrior && i<pTabList->nSrc; i++){"
    },
    {
        "line": 218,
        "fullcodeline": "for(i=0; i<pTabList->nSrc; i++){"
    },
    {
        "line": 447,
        "fullcodeline": "if( pDest->eDest==SRT_EphemTab ){"
    },
    {
        "line": 465,
        "fullcodeline": "if( p->selFlags & SF_Distinct ){"
    },
    {
        "line": 49,
        "fullcodeline": "sqlite3ExprListDelete(db, p->pOrderBy);"
    },
    {
        "line": 50,
        "fullcodeline": "p->pOrderBy = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "p->selFlags &= ~SF_Distinct;"
    },
    {
        "line": 66,
        "fullcodeline": "generateColumnNames(pParse, p);"
    },
    {
        "line": 90,
        "fullcodeline": "struct SrcList_item *pItem = &pTabList->a[i];"
    },
    {
        "line": 91,
        "fullcodeline": "Select *pSub = pItem->pSelect;"
    },
    {
        "line": 92,
        "fullcodeline": "Table *pTab = pItem->pTab;"
    },
    {
        "line": 160,
        "fullcodeline": "pTabList = p->pSrc;"
    },
    {
        "line": 173,
        "fullcodeline": "rc = multiSelect(pParse, p, pDest);"
    },
    {
        "line": 190,
        "fullcodeline": "if( pTabList->nSrc>1"
    },
    {
        "line": 192,
        "fullcodeline": "&& propagateConstants(pParse, p)"
    },
    {
        "line": 219,
        "fullcodeline": "struct SrcList_item *pItem = &pTabList->a[i];"
    },
    {
        "line": 249,
        "fullcodeline": "pSub = pItem->pSelect;"
    },
    {
        "line": 273,
        "fullcodeline": "pParse->nHeight += sqlite3SelectExprHeight(p);"
    },
    {
        "line": 293,
        "fullcodeline": "zSavedAuthContext = pParse->zAuthContext;"
    },
    {
        "line": 294,
        "fullcodeline": "pParse->zAuthContext = pItem->zName;"
    },
    {
        "line": 369,
        "fullcodeline": "pParse->nHeight -= sqlite3SelectExprHeight(p);"
    },
    {
        "line": 370,
        "fullcodeline": "pParse->zAuthContext = zSavedAuthContext;"
    },
    {
        "line": 404,
        "fullcodeline": "if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct"
    },
    {
        "line": 406,
        "fullcodeline": "&& p->pWin==0"
    },
    {
        "line": 408,
        "fullcodeline": "p->selFlags &= ~SF_Distinct;"
    },
    {
        "line": 409,
        "fullcodeline": "pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);"
    },
    {
        "line": 413,
        "fullcodeline": "assert( sDistinct.isTnct );"
    },
    {
        "line": 433,
        "fullcodeline": "pKeyInfo = sqlite3KeyInfoFromExprList("
    },
    {
        "line": 435,
        "fullcodeline": "sSort.iECursor = pParse->nTab++;"
    },
    {
        "line": 436,
        "fullcodeline": "sSort.addrSortIndex ="
    },
    {
        "line": 448,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_OpenEphemeral, pDest->iSDParm, pEList->nExpr);"
    },
    {
        "line": 454,
        "fullcodeline": "if( (p->selFlags & SF_FixedLimit)==0 ){"
    },
    {
        "line": 455,
        "fullcodeline": "p->nSelectRow = 320;  /* 4 billion rows */"
    },
    {
        "line": 458,
        "fullcodeline": "if( p->iLimit==0 && sSort.addrSortIndex>=0 ){"
    },
    {
        "line": 459,
        "fullcodeline": "sqlite3VdbeChangeOpcode(v, sSort.addrSortIndex, OP_SorterOpen);"
    },
    {
        "line": 460,
        "fullcodeline": "sSort.sortFlags |= SORTFLAG_UseSorter;"
    },
    {
        "line": 466,
        "fullcodeline": "sDistinct.tabTnct = pParse->nTab++;"
    },
    {
        "line": 467,
        "fullcodeline": "sDistinct.addrTnct = sqlite3VdbeAddOp4(v, OP_OpenEphemeral,"
    },
    {
        "line": 471,
        "fullcodeline": "sqlite3VdbeChangeP5(v, BTREE_UNORDERED);"
    },
    {
        "line": 472,
        "fullcodeline": "sDistinct.eTnctType = WHERE_DISTINCT_UNORDERED;"
    },
    {
        "line": 477,
        "fullcodeline": "if( !isAgg && pGroupBy==0 ){"
    },
    {
        "line": 479,
        "fullcodeline": "u16 wctrlFlags = (sDistinct.isTnct ? WHERE_WANT_DISTINCT : 0)"
    },
    {
        "line": 482,
        "fullcodeline": "Window *pWin = p->pWin;      /* Master window object (or NULL) */"
    },
    {
        "line": 491,
        "fullcodeline": "SELECTTRACE(1,pParse,p,(\"WhereBegin\\n\"));"
    },
    {
        "line": 492,
        "fullcodeline": "pWInfo = sqlite3WhereBegin(pParse, pTabList, pWhere, sSort.pOrderBy,"
    },
    {
        "line": 1025,
        "fullcodeline": "explainTempTable(pParse, \"DISTINCT\");"
    },
    {
        "line": 1032,
        "fullcodeline": "explainTempTable(pParse,"
    },
    {
        "line": 1035,
        "fullcodeline": "generateSortTail(pParse, p, &sSort, pEList->nExpr, pDest);"
    },
    {
        "line": 43,
        "fullcodeline": "assert(pDest->eDest==SRT_Exists || pDest->eDest==SRT_Union ||"
    },
    {
        "line": 108,
        "fullcodeline": "if( pSub==0 ) continue;"
    },
    {
        "line": 112,
        "fullcodeline": "if( pTab->nCol!=pSub->pEList->nExpr ){"
    },
    {
        "line": 126,
        "fullcodeline": "assert( pSub->pGroupBy==0 );"
    },
    {
        "line": 155,
        "fullcodeline": "if( flattenSubquery(pParse, p, i, isAgg) ){"
    },
    {
        "line": 191,
        "fullcodeline": "&& OptimizationEnabled(db, SQLITE_PropagateConst)"
    },
    {
        "line": 201,
        "fullcodeline": "SELECTTRACE(0x100,pParse,p,(\"Constant propagation not helpful\\n\"));"
    },
    {
        "line": 250,
        "fullcodeline": "if( pSub==0 ) continue;"
    },
    {
        "line": 264,
        "fullcodeline": "testcase( pItem->addrFillSub!=0 );"
    },
    {
        "line": 405,
        "fullcodeline": "&& sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0"
    },
    {
        "line": 437,
        "fullcodeline": "sqlite3VdbeAddOp4(v, OP_OpenEphemeral,"
    },
    {
        "line": 442,
        "fullcodeline": "sSort.addrSortIndex = -1;"
    },
    {
        "line": 474,
        "fullcodeline": "sDistinct.eTnctType = WHERE_DISTINCT_NOOP;"
    },
    {
        "line": 487,
        "fullcodeline": "assert( WHERE_USE_LIMIT==SF_FixedLimit );"
    },
    {
        "line": 494,
        "fullcodeline": "if( pWInfo==0 ) goto select_end;"
    },
    {
        "line": 495,
        "fullcodeline": "if( sqlite3WhereOutputRowCount(pWInfo) < p->nSelectRow ){"
    },
    {
        "line": 498,
        "fullcodeline": "if( sDistinct.isTnct && sqlite3WhereIsDistinct(pWInfo) ){"
    },
    {
        "line": 517,
        "fullcodeline": "assert( p->pEList==pEList );"
    },
    {
        "line": 560,
        "fullcodeline": "int sortPTab = 0;   /* Pseudotable used to decode sorting results */"
    },
    {
        "line": 561,
        "fullcodeline": "int sortOut = 0;    /* Output register from the sorter */"
    },
    {
        "line": 609,
        "fullcodeline": "addrEnd = sqlite3VdbeMakeLabel(pParse);"
    },
    {
        "line": 615,
        "fullcodeline": "memset(&sNC, 0, sizeof(sNC));"
    },
    {
        "line": 616,
        "fullcodeline": "sNC.pParse = pParse;"
    },
    {
        "line": 617,
        "fullcodeline": "sNC.pSrcList = pTabList;"
    },
    {
        "line": 621,
        "fullcodeline": "sAggInfo.nSortingColumn = pGroupBy ? pGroupBy->nExpr : 0;"
    },
    {
        "line": 622,
        "fullcodeline": "sAggInfo.pGroupBy = pGroupBy;"
    },
    {
        "line": 623,
        "fullcodeline": "sqlite3ExprAnalyzeAggList(&sNC, pEList);"
    },
    {
        "line": 624,
        "fullcodeline": "sqlite3ExprAnalyzeAggList(&sNC, sSort.pOrderBy);"
    },
    {
        "line": 635,
        "fullcodeline": "sAggInfo.nAccumulator = sAggInfo.nColumn;"
    },
    {
        "line": 654,
        "fullcodeline": "sAggInfo.mxReg = pParse->nMem;"
    },
    {
        "line": 1020,
        "fullcodeline": "sqlite3VdbeResolveLabel(v, addrEnd);"
    },
    {
        "line": 1034,
        "fullcodeline": "assert( p->pEList==pEList );"
    },
    {
        "line": 46,
        "fullcodeline": "pDest->eDest==SRT_DistQueue || pDest->eDest==SRT_Fifo);"
    },
    {
        "line": 97,
        "fullcodeline": "if( (pItem->fg.jointype & JT_LEFT)!=0"
    },
    {
        "line": 99,
        "fullcodeline": "&& OptimizationEnabled(db, SQLITE_SimplifyJoin)"
    },
    {
        "line": 101,
        "fullcodeline": "SELECTTRACE(0x100,pParse,p,"
    },
    {
        "line": 104,
        "fullcodeline": "unsetJoinExpr(p->pWhere, pItem->iCursor);"
    },
    {
        "line": 113,
        "fullcodeline": "sqlite3ErrorMsg(pParse, \"expected %d columns for '%s' but got %d\","
    },
    {
        "line": 125,
        "fullcodeline": "if( (pSub->selFlags & SF_Aggregate)!=0 ) continue;"
    },
    {
        "line": 146,
        "fullcodeline": "if( pSub->pOrderBy!=0"
    },
    {
        "line": 149,
        "fullcodeline": "&& (pTabList->nSrc==1"
    },
    {
        "line": 158,
        "fullcodeline": "i = -1;"
    },
    {
        "line": 162,
        "fullcodeline": "if( !IgnorableOrderby(pDest) ){"
    },
    {
        "line": 163,
        "fullcodeline": "sSort.pOrderBy = p->pOrderBy;"
    },
    {
        "line": 242,
        "fullcodeline": "if( pItem->colUsed==0 && pItem->zName!=0 ){"
    },
    {
        "line": 243,
        "fullcodeline": "sqlite3AuthCheck(pParse, SQLITE_READ, pItem->zName, \"\", pItem->zDatabase);"
    },
    {
        "line": 278,
        "fullcodeline": "if( OptimizationEnabled(db, SQLITE_PushDown)"
    },
    {
        "line": 279,
        "fullcodeline": "&& pushDownWhereTerms(pParse, pSub, p->pWhere, pItem->iCursor,"
    },
    {
        "line": 305,
        "fullcodeline": "if( i==0"
    },
    {
        "line": 306,
        "fullcodeline": "&& (pTabList->nSrc==1"
    },
    {
        "line": 312,
        "fullcodeline": "int addrTop = sqlite3VdbeCurrentAddr(v)+1;"
    },
    {
        "line": 314,
        "fullcodeline": "pItem->regReturn = ++pParse->nMem;"
    },
    {
        "line": 315,
        "fullcodeline": "sqlite3VdbeAddOp3(v, OP_InitCoroutine, pItem->regReturn, 0, addrTop);"
    },
    {
        "line": 317,
        "fullcodeline": "pItem->addrFillSub = addrTop;"
    },
    {
        "line": 318,
        "fullcodeline": "sqlite3SelectDestInit(&dest, SRT_Coroutine, pItem->regReturn);"
    },
    {
        "line": 320,
        "fullcodeline": "sqlite3Select(pParse, pSub, &dest);"
    },
    {
        "line": 323,
        "fullcodeline": "pItem->regResult = dest.iSdst;"
    },
    {
        "line": 324,
        "fullcodeline": "sqlite3VdbeEndCoroutine(v, pItem->regReturn);"
    },
    {
        "line": 325,
        "fullcodeline": "sqlite3VdbeJumpHere(v, addrTop-1);"
    },
    {
        "line": 326,
        "fullcodeline": "sqlite3ClearTempRegCache(pParse);"
    },
    {
        "line": 480,
        "fullcodeline": "| (p->selFlags & SF_FixedLimit);"
    },
    {
        "line": 484,
        "fullcodeline": "sqlite3WindowCodeInit(pParse, pWin);"
    },
    {
        "line": 496,
        "fullcodeline": "p->nSelectRow = sqlite3WhereOutputRowCount(pWInfo);"
    },
    {
        "line": 499,
        "fullcodeline": "sDistinct.eTnctType = sqlite3WhereIsDistinct(pWInfo);"
    },
    {
        "line": 502,
        "fullcodeline": "sSort.nOBSat = sqlite3WhereIsOrdered(pWInfo);"
    },
    {
        "line": 503,
        "fullcodeline": "sSort.labelOBLopt = sqlite3WhereOrderByLimitOptLabel(pWInfo);"
    },
    {
        "line": 513,
        "fullcodeline": "if( sSort.addrSortIndex>=0 && sSort.pOrderBy==0 ){"
    },
    {
        "line": 514,
        "fullcodeline": "sqlite3VdbeChangeToNoop(v, sSort.addrSortIndex);"
    },
    {
        "line": 520,
        "fullcodeline": "int addrGosub = sqlite3VdbeMakeLabel(pParse);"
    },
    {
        "line": 521,
        "fullcodeline": "int iCont = sqlite3VdbeMakeLabel(pParse);"
    },
    {
        "line": 522,
        "fullcodeline": "int iBreak = sqlite3VdbeMakeLabel(pParse);"
    },
    {
        "line": 523,
        "fullcodeline": "int regGosub = ++pParse->nMem;"
    },
    {
        "line": 525,
        "fullcodeline": "sqlite3WindowCodeStep(pParse, p, pWInfo, regGosub, addrGosub);"
    },
    {
        "line": 527,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Goto, 0, iBreak);"
    },
    {
        "line": 528,
        "fullcodeline": "sqlite3VdbeResolveLabel(v, addrGosub);"
    },
    {
        "line": 530,
        "fullcodeline": "sSort.labelOBLopt = 0;"
    },
    {
        "line": 531,
        "fullcodeline": "selectInnerLoop(pParse, p, -1, &sSort, &sDistinct, pDest, iCont, iBreak);"
    },
    {
        "line": 532,
        "fullcodeline": "sqlite3VdbeResolveLabel(v, iCont);"
    },
    {
        "line": 533,
        "fullcodeline": "sqlite3VdbeAddOp1(v, OP_Return, regGosub);"
    },
    {
        "line": 535,
        "fullcodeline": "sqlite3VdbeResolveLabel(v, iBreak);"
    },
    {
        "line": 641,
        "fullcodeline": "for(i=0; i<sAggInfo.nFunc; i++){"
    },
    {
        "line": 1033,
        "fullcodeline": "sSort.nOBSat>0 ? \"RIGHT PART OF ORDER BY\":\"ORDER BY\");"
    },
    {
        "line": 98,
        "fullcodeline": "&& sqlite3ExprImpliesNonNullRow(p->pWhere, pItem->iCursor)"
    },
    {
        "line": 102,
        "fullcodeline": "(\"LEFT-JOIN simplifies to JOIN on term %d\\n\",i));"
    },
    {
        "line": 103,
        "fullcodeline": "pItem->fg.jointype &= ~(JT_LEFT|JT_OUTER);"
    },
    {
        "line": 148,
        "fullcodeline": "&& (p->selFlags & SF_ComplexResult)!=0"
    },
    {
        "line": 150,
        "fullcodeline": "|| (pTabList->a[1].fg.jointype&(JT_LEFT|JT_CROSS))!=0)"
    },
    {
        "line": 280,
        "fullcodeline": "(pItem->fg.jointype & JT_OUTER)!=0)"
    },
    {
        "line": 290,
        "fullcodeline": "SELECTTRACE(0x100,pParse,p,(\"Push-down not possible\\n\"));"
    },
    {
        "line": 307,
        "fullcodeline": "|| (pTabList->a[1].fg.jointype&(JT_LEFT|JT_CROSS))!=0)  /* (1) */"
    },
    {
        "line": 316,
        "fullcodeline": "VdbeComment((v, \"%s\", pItem->pTab->zName));"
    },
    {
        "line": 319,
        "fullcodeline": "ExplainQueryPlan((pParse, 1, \"CO-ROUTINE %u\", pSub->selId));"
    },
    {
        "line": 334,
        "fullcodeline": "int onceAddr = 0;"
    },
    {
        "line": 339,
        "fullcodeline": "pItem->regReturn = ++pParse->nMem;"
    },
    {
        "line": 340,
        "fullcodeline": "topAddr = sqlite3VdbeAddOp2(v, OP_Integer, 0, pItem->regReturn);"
    },
    {
        "line": 341,
        "fullcodeline": "pItem->addrFillSub = topAddr+1;"
    },
    {
        "line": 351,
        "fullcodeline": "pPrior = isSelfJoinView(pTabList, pItem);"
    },
    {
        "line": 363,
        "fullcodeline": "retAddr = sqlite3VdbeAddOp1(v, OP_Return, pItem->regReturn);"
    },
    {
        "line": 365,
        "fullcodeline": "sqlite3VdbeChangeP1(v, topAddr, retAddr);"
    },
    {
        "line": 366,
        "fullcodeline": "sqlite3ClearTempRegCache(pParse);"
    },
    {
        "line": 469,
        "fullcodeline": "(char*)sqlite3KeyInfoFromExprList(pParse, p->pEList,0,0),"
    },
    {
        "line": 504,
        "fullcodeline": "if( sSort.nOBSat==sSort.pOrderBy->nExpr ){"
    },
    {
        "line": 529,
        "fullcodeline": "VdbeNoopComment((v, \"inner-loop subroutine\"));"
    },
    {
        "line": 534,
        "fullcodeline": "VdbeComment((v, \"end inner-loop subroutine\"));"
    },
    {
        "line": 540,
        "fullcodeline": "selectInnerLoop(pParse, p, -1, &sSort, &sDistinct, pDest,"
    },
    {
        "line": 633,
        "fullcodeline": "sqlite3ExprAnalyzeAggregates(&sNC, pHaving);"
    },
    {
        "line": 636,
        "fullcodeline": "if( p->pGroupBy==0 && p->pHaving==0 && sAggInfo.nFunc==1 ){"
    },
    {
        "line": 637,
        "fullcodeline": "minMaxFlag = minMaxQuery(db, sAggInfo.aFunc[0].pExpr, &pMinMaxOrderBy);"
    },
    {
        "line": 642,
        "fullcodeline": "Expr *pExpr = sAggInfo.aFunc[i].pExpr;"
    },
    {
        "line": 644,
        "fullcodeline": "sNC.ncFlags |= NC_InAggFunc;"
    },
    {
        "line": 645,
        "fullcodeline": "sqlite3ExprAnalyzeAggList(&sNC, pExpr->x.pList);"
    },
    {
        "line": 652,
        "fullcodeline": "sNC.ncFlags &= ~NC_InAggFunc;"
    },
    {
        "line": 694,
        "fullcodeline": "sAggInfo.sortingIdx = pParse->nTab++;"
    },
    {
        "line": 695,
        "fullcodeline": "pKeyInfo = sqlite3KeyInfoFromExprList(pParse,pGroupBy,0,sAggInfo.nColumn);"
    },
    {
        "line": 696,
        "fullcodeline": "addrSortingIdx = sqlite3VdbeAddOp4(v, OP_SorterOpen,"
    },
    {
        "line": 702,
        "fullcodeline": "iUseFlag = ++pParse->nMem;"
    },
    {
        "line": 703,
        "fullcodeline": "iAbortFlag = ++pParse->nMem;"
    },
    {
        "line": 704,
        "fullcodeline": "regOutputRow = ++pParse->nMem;"
    },
    {
        "line": 705,
        "fullcodeline": "addrOutputRow = sqlite3VdbeMakeLabel(pParse);"
    },
    {
        "line": 706,
        "fullcodeline": "regReset = ++pParse->nMem;"
    },
    {
        "line": 707,
        "fullcodeline": "addrReset = sqlite3VdbeMakeLabel(pParse);"
    },
    {
        "line": 708,
        "fullcodeline": "iAMem = pParse->nMem + 1;"
    },
    {
        "line": 709,
        "fullcodeline": "pParse->nMem += pGroupBy->nExpr;"
    },
    {
        "line": 710,
        "fullcodeline": "iBMem = pParse->nMem + 1;"
    },
    {
        "line": 711,
        "fullcodeline": "pParse->nMem += pGroupBy->nExpr;"
    },
    {
        "line": 712,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Integer, 0, iAbortFlag);"
    },
    {
        "line": 714,
        "fullcodeline": "sqlite3VdbeAddOp3(v, OP_Null, 0, iAMem, iAMem+pGroupBy->nExpr-1);"
    },
    {
        "line": 721,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Gosub, regReset, addrReset);"
    },
    {
        "line": 722,
        "fullcodeline": "SELECTTRACE(1,pParse,p,(\"WhereBegin\\n\"));"
    },
    {
        "line": 723,
        "fullcodeline": "pWInfo = sqlite3WhereBegin(pParse, pTabList, pWhere, pGroupBy, 0,"
    },
    {
        "line": 803,
        "fullcodeline": "addrTopOfLoop = sqlite3VdbeCurrentAddr(v);"
    },
    {
        "line": 816,
        "fullcodeline": "sqlite3VdbeAddOp4(v, OP_Compare, iAMem, iBMem, pGroupBy->nExpr,"
    },
    {
        "line": 818,
        "fullcodeline": "addr1 = sqlite3VdbeCurrentAddr(v);"
    },
    {
        "line": 819,
        "fullcodeline": "sqlite3VdbeAddOp3(v, OP_Jump, addr1+1, 0, addr1+1); VdbeCoverage(v);"
    },
    {
        "line": 830,
        "fullcodeline": "sqlite3ExprCodeMove(pParse, iBMem, iAMem, pGroupBy->nExpr);"
    },
    {
        "line": 831,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Gosub, regOutputRow, addrOutputRow);"
    },
    {
        "line": 833,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_IfPos, iAbortFlag, addrEnd); VdbeCoverage(v);"
    },
    {
        "line": 835,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Gosub, regReset, addrReset);"
    },
    {
        "line": 841,
        "fullcodeline": "sqlite3VdbeJumpHere(v, addr1);"
    },
    {
        "line": 842,
        "fullcodeline": "updateAccumulator(pParse, iUseFlag, &sAggInfo);"
    },
    {
        "line": 843,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Integer, 1, iUseFlag);"
    },
    {
        "line": 858,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Gosub, regOutputRow, addrOutputRow);"
    },
    {
        "line": 863,
        "fullcodeline": "sqlite3VdbeGoto(v, addrEnd);"
    },
    {
        "line": 872,
        "fullcodeline": "addrSetAbort = sqlite3VdbeCurrentAddr(v);"
    },
    {
        "line": 873,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Integer, 1, iAbortFlag);"
    },
    {
        "line": 875,
        "fullcodeline": "sqlite3VdbeAddOp1(v, OP_Return, regOutputRow);"
    },
    {
        "line": 876,
        "fullcodeline": "sqlite3VdbeResolveLabel(v, addrOutputRow);"
    },
    {
        "line": 877,
        "fullcodeline": "addrOutputRow = sqlite3VdbeCurrentAddr(v);"
    },
    {
        "line": 878,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_IfPos, iUseFlag, addrOutputRow+2);"
    },
    {
        "line": 879,
        "fullcodeline": "VdbeCoverage(v);"
    },
    {
        "line": 881,
        "fullcodeline": "sqlite3VdbeAddOp1(v, OP_Return, regOutputRow);"
    },
    {
        "line": 882,
        "fullcodeline": "finalizeAggFunctions(pParse, &sAggInfo);"
    },
    {
        "line": 883,
        "fullcodeline": "sqlite3ExprIfFalse(pParse, pHaving, addrOutputRow+1, SQLITE_JUMPIFNULL);"
    },
    {
        "line": 884,
        "fullcodeline": "selectInnerLoop(pParse, p, -1, &sSort,"
    },
    {
        "line": 887,
        "fullcodeline": "sqlite3VdbeAddOp1(v, OP_Return, regOutputRow);"
    },
    {
        "line": 892,
        "fullcodeline": "sqlite3VdbeResolveLabel(v, addrReset);"
    },
    {
        "line": 893,
        "fullcodeline": "resetAccumulator(pParse, &sAggInfo);"
    },
    {
        "line": 894,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Integer, 0, iUseFlag);"
    },
    {
        "line": 896,
        "fullcodeline": "sqlite3VdbeAddOp1(v, OP_Return, regReset);"
    },
    {
        "line": 45,
        "fullcodeline": "pDest->eDest==SRT_Queue  || pDest->eDest==SRT_DistFifo ||"
    },
    {
        "line": 147,
        "fullcodeline": "&& i==0"
    },
    {
        "line": 338,
        "fullcodeline": "testcase( pItem->addrFillSub==0 ); /* Ticket c52b09c7f38903b1311 */"
    },
    {
        "line": 364,
        "fullcodeline": "VdbeComment((v, \"end %s\", pItem->pTab->zName));"
    },
    {
        "line": 505,
        "fullcodeline": "sSort.pOrderBy = 0;"
    },
    {
        "line": 541,
        "fullcodeline": "sqlite3WhereContinueLabel(pWInfo),"
    },
    {
        "line": 542,
        "fullcodeline": "sqlite3WhereBreakLabel(pWInfo));"
    },
    {
        "line": 571,
        "fullcodeline": "for(k=p->pEList->nExpr, pItem=p->pEList->a; k>0; k--, pItem++){"
    },
    {
        "line": 574,
        "fullcodeline": "for(k=pGroupBy->nExpr, pItem=pGroupBy->a; k>0; k--, pItem++){"
    },
    {
        "line": 577,
        "fullcodeline": "assert( 66==sqlite3LogEst(100) );"
    },
    {
        "line": 578,
        "fullcodeline": "if( p->nSelectRow>66 ) p->nSelectRow = 66;"
    },
    {
        "line": 588,
        "fullcodeline": "if( sSort.pOrderBy && pGroupBy->nExpr==sSort.pOrderBy->nExpr ){"
    },
    {
        "line": 605,
        "fullcodeline": "p->nSelectRow = 0;"
    },
    {
        "line": 639,
        "fullcodeline": "minMaxFlag = WHERE_ORDERBY_NORMAL;"
    },
    {
        "line": 643,
        "fullcodeline": "assert( !ExprHasProperty(pExpr, EP_xIsSelect) );"
    },
    {
        "line": 647,
        "fullcodeline": "assert( !IsWindowFunc(pExpr) );"
    },
    {
        "line": 648,
        "fullcodeline": "if( ExprHasProperty(pExpr, EP_WinFunc) ){"
    },
    {
        "line": 713,
        "fullcodeline": "VdbeComment((v, \"clear abort flag\"));"
    },
    {
        "line": 726,
        "fullcodeline": "if( pWInfo==0 ) goto select_end;"
    },
    {
        "line": 727,
        "fullcodeline": "if( sqlite3WhereIsOrdered(pWInfo)==pGroupBy->nExpr ){"
    },
    {
        "line": 808,
        "fullcodeline": "for(j=0; j<pGroupBy->nExpr; j++){"
    },
    {
        "line": 832,
        "fullcodeline": "VdbeComment((v, \"output one row\"));"
    },
    {
        "line": 834,
        "fullcodeline": "VdbeComment((v, \"check abort flag\"));"
    },
    {
        "line": 836,
        "fullcodeline": "VdbeComment((v, \"reset accumulator\"));"
    },
    {
        "line": 844,
        "fullcodeline": "VdbeComment((v, \"indicate data in accumulator\"));"
    },
    {
        "line": 859,
        "fullcodeline": "VdbeComment((v, \"output final row\"));"
    },
    {
        "line": 874,
        "fullcodeline": "VdbeComment((v, \"set abort flag\"));"
    },
    {
        "line": 880,
        "fullcodeline": "VdbeComment((v, \"Groupby result generator entry point\"));"
    },
    {
        "line": 888,
        "fullcodeline": "VdbeComment((v, \"end groupby result generator\"));"
    },
    {
        "line": 895,
        "fullcodeline": "VdbeComment((v, \"indicate accumulator empty\"));"
    },
    {
        "line": 1015,
        "fullcodeline": "sSort.pOrderBy = 0;"
    },
    {
        "line": 1016,
        "fullcodeline": "sqlite3ExprIfFalse(pParse, pHaving, addrEnd, SQLITE_JUMPIFNULL);"
    },
    {
        "line": 1017,
        "fullcodeline": "selectInnerLoop(pParse, p, -1, 0, 0,"
    },
    {
        "line": 346,
        "fullcodeline": "onceAddr = sqlite3VdbeAddOp0(v, OP_Once); VdbeCoverage(v);"
    },
    {
        "line": 353,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_OpenDup, pItem->iCursor, pPrior->iCursor);"
    },
    {
        "line": 355,
        "fullcodeline": "pSub->nSelectRow = pPrior->pSelect->nSelectRow;"
    },
    {
        "line": 362,
        "fullcodeline": "if( onceAddr ) sqlite3VdbeJumpHere(v, onceAddr);"
    },
    {
        "line": 604,
        "fullcodeline": "assert( 0==sqlite3LogEst(1) );"
    },
    {
        "line": 630,
        "fullcodeline": "havingToWhere(pParse, p);"
    },
    {
        "line": 631,
        "fullcodeline": "pWhere = p->pWhere;"
    },
    {
        "line": 649,
        "fullcodeline": "sqlite3ExprAnalyzeAggregates(&sNC, pExpr->y.pWin->pFilter);"
    },
    {
        "line": 724,
        "fullcodeline": "WHERE_GROUPBY | (orderByGrp ? WHERE_SORTBYGROUP : 0), 0"
    },
    {
        "line": 732,
        "fullcodeline": "groupBySort = 0;"
    },
    {
        "line": 791,
        "fullcodeline": "if( orderByGrp && OptimizationEnabled(db, SQLITE_GroupByOrder)"
    },
    {
        "line": 792,
        "fullcodeline": "&& (groupBySort || sqlite3WhereIsSorted(pWInfo))"
    },
    {
        "line": 794,
        "fullcodeline": "sSort.pOrderBy = 0;"
    },
    {
        "line": 795,
        "fullcodeline": "sqlite3VdbeChangeToNoop(v, sSort.addrSortIndex);"
    },
    {
        "line": 805,
        "fullcodeline": "sqlite3VdbeAddOp3(v, OP_SorterData, sAggInfo.sortingIdx,"
    },
    {
        "line": 817,
        "fullcodeline": "(char*)sqlite3KeyInfoRef(pKeyInfo), P4_KEYINFO);"
    },
    {
        "line": 849,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_SorterNext, sAggInfo.sortingIdx, addrTopOfLoop);"
    },
    {
        "line": 850,
        "fullcodeline": "VdbeCoverage(v);"
    },
    {
        "line": 44,
        "fullcodeline": "pDest->eDest==SRT_Except || pDest->eDest==SRT_Discard ||"
    },
    {
        "line": 347,
        "fullcodeline": "VdbeComment((v, \"materialize \\\"%s\\\"\", pItem->pTab->zName));"
    },
    {
        "line": 354,
        "fullcodeline": "assert( pPrior->pSelect!=0 );"
    },
    {
        "line": 357,
        "fullcodeline": "sqlite3SelectDestInit(&dest, SRT_EphemTab, pItem->iCursor);"
    },
    {
        "line": 359,
        "fullcodeline": "sqlite3Select(pParse, pSub, &dest);"
    },
    {
        "line": 595,
        "fullcodeline": "for(ii=0; ii<pGroupBy->nExpr; ii++){"
    },
    {
        "line": 627,
        "fullcodeline": "assert( pWhere==p->pWhere );"
    },
    {
        "line": 628,
        "fullcodeline": "assert( pHaving==p->pHaving );"
    },
    {
        "line": 629,
        "fullcodeline": "assert( pGroupBy==p->pGroupBy );"
    },
    {
        "line": 744,
        "fullcodeline": "explainTempTable(pParse,"
    },
    {
        "line": 748,
        "fullcodeline": "groupBySort = 1;"
    },
    {
        "line": 749,
        "fullcodeline": "nGroupBy = pGroupBy->nExpr;"
    },
    {
        "line": 750,
        "fullcodeline": "nCol = nGroupBy;"
    },
    {
        "line": 751,
        "fullcodeline": "j = nGroupBy;"
    },
    {
        "line": 758,
        "fullcodeline": "regBase = sqlite3GetTempRange(pParse, nCol);"
    },
    {
        "line": 759,
        "fullcodeline": "sqlite3ExprCodeExprList(pParse, pGroupBy, regBase, 0, 0);"
    },
    {
        "line": 760,
        "fullcodeline": "j = nGroupBy;"
    },
    {
        "line": 770,
        "fullcodeline": "regRecord = sqlite3GetTempReg(pParse);"
    },
    {
        "line": 771,
        "fullcodeline": "sqlite3VdbeAddOp3(v, OP_MakeRecord, regBase, nCol, regRecord);"
    },
    {
        "line": 772,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_SorterInsert, sAggInfo.sortingIdx, regRecord);"
    },
    {
        "line": 773,
        "fullcodeline": "sqlite3ReleaseTempReg(pParse, regRecord);"
    },
    {
        "line": 774,
        "fullcodeline": "sqlite3ReleaseTempRange(pParse, regBase, nCol);"
    },
    {
        "line": 775,
        "fullcodeline": "sqlite3WhereEnd(pWInfo);"
    },
    {
        "line": 776,
        "fullcodeline": "sAggInfo.sortingIdxPTab = sortPTab = pParse->nTab++;"
    },
    {
        "line": 777,
        "fullcodeline": "sortOut = sqlite3GetTempReg(pParse);"
    },
    {
        "line": 778,
        "fullcodeline": "sqlite3VdbeAddOp3(v, OP_OpenPseudo, sortPTab, sortOut, nCol);"
    },
    {
        "line": 779,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_SorterSort, sAggInfo.sortingIdx, addrEnd);"
    },
    {
        "line": 780,
        "fullcodeline": "VdbeComment((v, \"GROUP BY sort\")); VdbeCoverage(v);"
    },
    {
        "line": 781,
        "fullcodeline": "sAggInfo.useSortingIdx = 1;"
    },
    {
        "line": 853,
        "fullcodeline": "sqlite3VdbeChangeToNoop(v, addrSortingIdx);"
    },
    {
        "line": 902,
        "fullcodeline": "if( (pTab = isSimpleCount(p, &sAggInfo))!=0 ){"
    },
    {
        "line": 916,
        "fullcodeline": "const int iDb = sqlite3SchemaToIndex(pParse->db, pTab->pSchema);"
    },
    {
        "line": 917,
        "fullcodeline": "const int iCsr = pParse->nTab++;     /* Cursor to scan b-tree */"
    },
    {
        "line": 919,
        "fullcodeline": "KeyInfo *pKeyInfo = 0;               /* Keyinfo for scanned index */"
    },
    {
        "line": 920,
        "fullcodeline": "Index *pBest = 0;                    /* Best index found so far */"
    },
    {
        "line": 921,
        "fullcodeline": "int iRoot = pTab->tnum;              /* Root page of scanned b-tree */"
    },
    {
        "line": 923,
        "fullcodeline": "sqlite3CodeVerifySchema(pParse, iDb);"
    },
    {
        "line": 924,
        "fullcodeline": "sqlite3TableLock(pParse, iDb, pTab->tnum, 0, pTab->zName);"
    },
    {
        "line": 951,
        "fullcodeline": "sqlite3VdbeAddOp4Int(v, OP_OpenRead, iCsr, iRoot, iDb, 1);"
    },
    {
        "line": 955,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Count, iCsr, sAggInfo.aFunc[0].iMem);"
    },
    {
        "line": 956,
        "fullcodeline": "sqlite3VdbeAddOp1(v, OP_Close, iCsr);"
    },
    {
        "line": 957,
        "fullcodeline": "explainSimpleCount(pParse, pTab, pBest);"
    },
    {
        "line": 349,
        "fullcodeline": "VdbeNoopComment((v, \"materialize \\\"%s\\\"\", pItem->pTab->zName));"
    },
    {
        "line": 358,
        "fullcodeline": "ExplainQueryPlan((pParse, 1, \"MATERIALIZE %u\", pSub->selId));"
    },
    {
        "line": 596,
        "fullcodeline": "u8 sortFlags = sSort.pOrderBy->a[ii].sortFlags & KEYINFO_ORDER_DESC;"
    },
    {
        "line": 599,
        "fullcodeline": "if( sqlite3ExprListCompare(pGroupBy, sSort.pOrderBy, -1)==0 ){"
    },
    {
        "line": 752,
        "fullcodeline": "for(i=0; i<sAggInfo.nColumn; i++){"
    },
    {
        "line": 761,
        "fullcodeline": "for(i=0; i<sAggInfo.nColumn; i++){"
    },
    {
        "line": 810,
        "fullcodeline": "sqlite3VdbeAddOp3(v, OP_Column, sortPTab, j, iBMem+j);"
    },
    {
        "line": 936,
        "fullcodeline": "for(pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext){"
    },
    {
        "line": 961,
        "fullcodeline": "int regAcc = 0;           /* \"populate accumulators\" flag */"
    },
    {
        "line": 988,
        "fullcodeline": "resetAccumulator(pParse, &sAggInfo);"
    },
    {
        "line": 998,
        "fullcodeline": "SELECTTRACE(1,pParse,p,(\"WhereBegin\\n\"));"
    },
    {
        "line": 999,
        "fullcodeline": "pWInfo = sqlite3WhereBegin(pParse, pTabList, pWhere, pMinMaxOrderBy,"
    },
    {
        "line": 1004,
        "fullcodeline": "updateAccumulator(pParse, regAcc, &sAggInfo);"
    },
    {
        "line": 1012,
        "fullcodeline": "finalizeAggFunctions(pParse, &sAggInfo);"
    },
    {
        "line": 745,
        "fullcodeline": "(sDistinct.isTnct && (p->selFlags&SF_Distinct)==0) ?"
    },
    {
        "line": 762,
        "fullcodeline": "struct AggInfo_col *pCol = &sAggInfo.aCol[i];"
    },
    {
        "line": 812,
        "fullcodeline": "sAggInfo.directMode = 1;"
    },
    {
        "line": 813,
        "fullcodeline": "sqlite3ExprCode(pParse, pGroupBy->a[j].pExpr, iBMem+j);"
    },
    {
        "line": 935,
        "fullcodeline": "if( !HasRowid(pTab) ) pBest = sqlite3PrimaryKeyIndex(pTab);"
    },
    {
        "line": 946,
        "fullcodeline": "iRoot = pBest->tnum;"
    },
    {
        "line": 947,
        "fullcodeline": "pKeyInfo = sqlite3KeyInfoOfIndex(pParse, pBest);"
    },
    {
        "line": 953,
        "fullcodeline": "sqlite3VdbeChangeP4(v, -1, (char *)pKeyInfo, P4_KEYINFO);"
    },
    {
        "line": 987,
        "fullcodeline": "assert( p->pGroupBy==0 );"
    },
    {
        "line": 995,
        "fullcodeline": "assert( minMaxFlag==WHERE_ORDERBY_NORMAL || pMinMaxOrderBy!=0 );"
    },
    {
        "line": 996,
        "fullcodeline": "assert( pMinMaxOrderBy==0 || pMinMaxOrderBy->nExpr==1 );"
    },
    {
        "line": 1001,
        "fullcodeline": "if( pWInfo==0 ){"
    },
    {
        "line": 753,
        "fullcodeline": "if( sAggInfo.aCol[i].iSorterColumn>=j ){"
    },
    {
        "line": 763,
        "fullcodeline": "if( pCol->iSorterColumn>=j ){"
    },
    {
        "line": 1005,
        "fullcodeline": "if( regAcc ) sqlite3VdbeAddOp2(v, OP_Integer, 1, regAcc);"
    },
    {
        "line": 1006,
        "fullcodeline": "if( sqlite3WhereIsOrdered(pWInfo)>0 ){"
    },
    {
        "line": 1007,
        "fullcodeline": "sqlite3VdbeGoto(v, sqlite3WhereBreakLabel(pWInfo));"
    },
    {
        "line": 754,
        "fullcodeline": "nCol++;"
    },
    {
        "line": 755,
        "fullcodeline": "j++;"
    },
    {
        "line": 764,
        "fullcodeline": "int r1 = j + regBase;"
    },
    {
        "line": 765,
        "fullcodeline": "sqlite3ExprCodeGetColumnOfTable(v,"
    },
    {
        "line": 767,
        "fullcodeline": "j++;"
    },
    {
        "line": 937,
        "fullcodeline": "if( pIdx->bUnordered==0"
    },
    {
        "line": 940,
        "fullcodeline": "&& (!pBest || pIdx->szIdxRow<pBest->szIdxRow)"
    },
    {
        "line": 942,
        "fullcodeline": "pBest = pIdx;"
    },
    {
        "line": 973,
        "fullcodeline": "for(i=0; i<sAggInfo.nFunc; i++){"
    },
    {
        "line": 977,
        "fullcodeline": "if( i==sAggInfo.nFunc ){"
    },
    {
        "line": 1008,
        "fullcodeline": "VdbeComment((v, \"%s() by index\","
    },
    {
        "line": 939,
        "fullcodeline": "&& pIdx->pPartIdxWhere==0"
    },
    {
        "line": 978,
        "fullcodeline": "regAcc = ++pParse->nMem;"
    },
    {
        "line": 979,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Integer, 0, regAcc);"
    },
    {
        "line": 938,
        "fullcodeline": "&& pIdx->szIdxRow<pTab->szTabRow"
    },
    {
        "line": 975,
        "fullcodeline": "if( sAggInfo.aFunc[i].pFunc->funcFlags&SQLITE_FUNC_NEEDCOLL ) break;"
    },
    {
        "line": 1009,
        "fullcodeline": "(minMaxFlag==WHERE_ORDERBY_MIN?\"min\":\"max\")));"
    }
]