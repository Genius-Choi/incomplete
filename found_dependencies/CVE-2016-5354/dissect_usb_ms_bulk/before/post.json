[
    {
        "line": 7,
        "fullcodeline": "guint32 signature=0;"
    },
    {
        "line": 8,
        "fullcodeline": "int offset=0;"
    },
    {
        "line": 16,
        "fullcodeline": "usb_conv_info = (usb_conv_info_t *)data;"
    },
    {
        "line": 19,
        "fullcodeline": "usb_ms_conv_info=(usb_ms_conv_info_t *)usb_conv_info->class_data;"
    },
    {
        "line": 28,
        "fullcodeline": "is_request=(pinfo->srcport==NO_ENDPOINT);"
    },
    {
        "line": 30,
        "fullcodeline": "col_set_str(pinfo->cinfo, COL_PROTOCOL, \"USBMS\");"
    },
    {
        "line": 32,
        "fullcodeline": "col_clear(pinfo->cinfo, COL_INFO);"
    },
    {
        "line": 35,
        "fullcodeline": "ti = proto_tree_add_protocol_format(parent_tree, proto_usb_ms, tvb, 0, -1, \"USB Mass Storage\");"
    },
    {
        "line": 36,
        "fullcodeline": "tree = proto_item_add_subtree(ti, ett_usb_ms);"
    },
    {
        "line": 38,
        "fullcodeline": "signature=tvb_get_letohl(tvb, offset);"
    },
    {
        "line": 171,
        "fullcodeline": "itlq=(itlq_nexus_t *)wmem_tree_lookup32_le(usb_ms_conv_info->itlq, pinfo->num);"
    },
    {
        "line": 176,
        "fullcodeline": "itl=(itl_nexus_t *)wmem_tree_lookup32(usb_ms_conv_info->itl, itlq->lun);"
    },
    {
        "line": 181,
        "fullcodeline": "dissect_scsi_payload(tvb, pinfo, parent_tree, is_request, itlq, itl, 0);"
    },
    {
        "line": 14,
        "fullcodeline": "if (data == NULL)"
    },
    {
        "line": 20,
        "fullcodeline": "if(!usb_ms_conv_info){"
    },
    {
        "line": 44,
        "fullcodeline": "if(is_request&&(signature==0x43425355)&&(tvb_reported_length(tvb)==31)){"
    },
    {
        "line": 128,
        "fullcodeline": "if((!is_request)&&(signature==0x53425355)&&(tvb_reported_length(tvb)==13)){"
    },
    {
        "line": 172,
        "fullcodeline": "if(!itlq){"
    },
    {
        "line": 177,
        "fullcodeline": "if(!itl){"
    },
    {
        "line": 182,
        "fullcodeline": "return tvb_captured_length(tvb);"
    },
    {
        "line": 21,
        "fullcodeline": "usb_ms_conv_info=wmem_new(wmem_file_scope(), usb_ms_conv_info_t);"
    },
    {
        "line": 22,
        "fullcodeline": "usb_ms_conv_info->itl=wmem_tree_new(wmem_file_scope());"
    },
    {
        "line": 23,
        "fullcodeline": "usb_ms_conv_info->itlq=wmem_tree_new(wmem_file_scope());"
    },
    {
        "line": 24,
        "fullcodeline": "usb_conv_info->class_data=usb_ms_conv_info;"
    },
    {
        "line": 51,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCBWSignature, tvb, offset, 4, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 52,
        "fullcodeline": "offset+=4;"
    },
    {
        "line": 55,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCBWTag, tvb, offset, 4, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 56,
        "fullcodeline": "offset+=4;"
    },
    {
        "line": 59,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCBWDataTransferLength, tvb, offset, 4, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 60,
        "fullcodeline": "datalen=tvb_get_letohl(tvb, offset);"
    },
    {
        "line": 61,
        "fullcodeline": "offset+=4;"
    },
    {
        "line": 64,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCBWFlags, tvb, offset, 1, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 65,
        "fullcodeline": "flags=tvb_get_guint8(tvb, offset);"
    },
    {
        "line": 66,
        "fullcodeline": "offset+=1;"
    },
    {
        "line": 69,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCBWTarget, tvb, offset, 1, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 70,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCBWLUN, tvb, offset, 1, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 71,
        "fullcodeline": "lun=tvb_get_guint8(tvb, offset)&0x0f;"
    },
    {
        "line": 72,
        "fullcodeline": "offset+=1;"
    },
    {
        "line": 75,
        "fullcodeline": "itl=(itl_nexus_t *)wmem_tree_lookup32(usb_ms_conv_info->itl, lun);"
    },
    {
        "line": 84,
        "fullcodeline": "itlq=(itlq_nexus_t *)wmem_tree_lookup32(usb_ms_conv_info->itlq, pinfo->num);"
    },
    {
        "line": 109,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCBWCBLength, tvb, offset, 1, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 110,
        "fullcodeline": "cdbrlen=tvb_get_guint8(tvb, offset)&0x1f;"
    },
    {
        "line": 111,
        "fullcodeline": "offset+=1;"
    },
    {
        "line": 113,
        "fullcodeline": "cdblen=cdbrlen;"
    },
    {
        "line": 132,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCSWSignature, tvb, offset, 4, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 133,
        "fullcodeline": "offset+=4;"
    },
    {
        "line": 136,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCBWTag, tvb, offset, 4, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 137,
        "fullcodeline": "offset+=4;"
    },
    {
        "line": 140,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCSWDataResidue, tvb, offset, 4, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 141,
        "fullcodeline": "offset+=4;"
    },
    {
        "line": 144,
        "fullcodeline": "proto_tree_add_item(tree, hf_usb_ms_dCSWStatus, tvb, offset, 1, ENC_LITTLE_ENDIAN);"
    },
    {
        "line": 145,
        "fullcodeline": "status=tvb_get_guint8(tvb, offset);"
    },
    {
        "line": 148,
        "fullcodeline": "itlq=(itlq_nexus_t *)wmem_tree_lookup32_le(usb_ms_conv_info->itlq, pinfo->num);"
    },
    {
        "line": 152,
        "fullcodeline": "itlq->last_exchange_frame=pinfo->num;"
    },
    {
        "line": 154,
        "fullcodeline": "itl=(itl_nexus_t *)wmem_tree_lookup32(usb_ms_conv_info->itl, itlq->lun);"
    },
    {
        "line": 76,
        "fullcodeline": "if(!itl){"
    },
    {
        "line": 85,
        "fullcodeline": "if(!itlq){"
    },
    {
        "line": 114,
        "fullcodeline": "if(cdblen>tvb_captured_length_remaining(tvb, offset)){"
    },
    {
        "line": 121,
        "fullcodeline": "return tvb_captured_length(tvb);"
    },
    {
        "line": 149,
        "fullcodeline": "if(!itlq){"
    },
    {
        "line": 155,
        "fullcodeline": "if(!itl){"
    },
    {
        "line": 159,
        "fullcodeline": "if(!status){"
    },
    {
        "line": 165,
        "fullcodeline": "return tvb_captured_length(tvb);"
    },
    {
        "line": 173,
        "fullcodeline": "return tvb_captured_length(tvb);"
    },
    {
        "line": 178,
        "fullcodeline": "return tvb_captured_length(tvb);"
    },
    {
        "line": 77,
        "fullcodeline": "itl=wmem_new(wmem_file_scope(), itl_nexus_t);"
    },
    {
        "line": 78,
        "fullcodeline": "itl->cmdset=0xff;"
    },
    {
        "line": 79,
        "fullcodeline": "itl->conversation=NULL;"
    },
    {
        "line": 80,
        "fullcodeline": "wmem_tree_insert32(usb_ms_conv_info->itl, lun, itl);"
    },
    {
        "line": 86,
        "fullcodeline": "itlq=wmem_new(wmem_file_scope(), itlq_nexus_t);"
    },
    {
        "line": 87,
        "fullcodeline": "itlq->lun=lun;"
    },
    {
        "line": 88,
        "fullcodeline": "itlq->scsi_opcode=0xffff;"
    },
    {
        "line": 89,
        "fullcodeline": "itlq->task_flags=0;"
    },
    {
        "line": 97,
        "fullcodeline": "itlq->data_length=datalen;"
    },
    {
        "line": 98,
        "fullcodeline": "itlq->bidir_data_length=0;"
    },
    {
        "line": 99,
        "fullcodeline": "itlq->fc_time=pinfo->abs_ts;"
    },
    {
        "line": 100,
        "fullcodeline": "itlq->first_exchange_frame=pinfo->num;"
    },
    {
        "line": 101,
        "fullcodeline": "itlq->last_exchange_frame=0;"
    },
    {
        "line": 102,
        "fullcodeline": "itlq->flags=0;"
    },
    {
        "line": 103,
        "fullcodeline": "itlq->alloc_len=0;"
    },
    {
        "line": 104,
        "fullcodeline": "itlq->extra_data=NULL;"
    },
    {
        "line": 105,
        "fullcodeline": "wmem_tree_insert32(usb_ms_conv_info->itlq, pinfo->num, itlq);"
    },
    {
        "line": 115,
        "fullcodeline": "cdblen=tvb_captured_length_remaining(tvb, offset);"
    },
    {
        "line": 118,
        "fullcodeline": "cdb_tvb=tvb_new_subset(tvb, offset, cdblen, cdbrlen);"
    },
    {
        "line": 119,
        "fullcodeline": "dissect_scsi_cdb(cdb_tvb, pinfo, parent_tree, SCSI_DEV_UNKNOWN, itlq, itl);"
    },
    {
        "line": 160,
        "fullcodeline": "dissect_scsi_rsp(tvb, pinfo, parent_tree, itlq, itl, 0);"
    },
    {
        "line": 150,
        "fullcodeline": "return tvb_captured_length(tvb);"
    },
    {
        "line": 156,
        "fullcodeline": "return tvb_captured_length(tvb);"
    },
    {
        "line": 163,
        "fullcodeline": "dissect_scsi_rsp(tvb, pinfo, parent_tree, itlq, itl, 0x02);"
    },
    {
        "line": 91,
        "fullcodeline": "if(flags&0x80){"
    },
    {
        "line": 92,
        "fullcodeline": "itlq->task_flags|=SCSI_DATA_READ;"
    },
    {
        "line": 94,
        "fullcodeline": "itlq->task_flags|=SCSI_DATA_WRITE;"
    }
]