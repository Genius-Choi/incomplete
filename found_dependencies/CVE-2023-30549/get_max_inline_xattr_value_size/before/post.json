[
    {
        "line": 12,
        "fullcodeline": "min_offs = EXT4_SB(inode->i_sb)->s_inode_size -"
    },
    {
        "line": 27,
        "fullcodeline": "raw_inode = ext4_raw_inode(iloc);"
    },
    {
        "line": 28,
        "fullcodeline": "header = IHDR(inode, raw_inode);"
    },
    {
        "line": 29,
        "fullcodeline": "entry = IFIRST(header);"
    },
    {
        "line": 39,
        "fullcodeline": "free = min_offs -"
    },
    {
        "line": 50,
        "fullcodeline": "free -= EXT4_XATTR_LEN(strlen(EXT4_XATTR_SYSTEM_DATA));"
    },
    {
        "line": 9,
        "fullcodeline": "if (!EXT4_INODE_HAS_XATTR_SPACE(inode))"
    },
    {
        "line": 22,
        "fullcodeline": "if (!ext4_test_inode_state(inode, EXT4_STATE_XATTR))"
    },
    {
        "line": 32,
        "fullcodeline": "for (; !IS_LAST_ENTRY(entry); entry = EXT4_XATTR_NEXT(entry)) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (free > EXT4_XATTR_ROUND)"
    },
    {
        "line": 42,
        "fullcodeline": "if (EXT4_I(inode)->i_inline_off) {"
    },
    {
        "line": 43,
        "fullcodeline": "entry = (struct ext4_xattr_entry *)"
    },
    {
        "line": 46,
        "fullcodeline": "free += EXT4_XATTR_SIZE(le32_to_cpu(entry->e_value_size));"
    },
    {
        "line": 53,
        "fullcodeline": "free = EXT4_XATTR_SIZE(free - EXT4_XATTR_ROUND);"
    },
    {
        "line": 23,
        "fullcodeline": "return EXT4_XATTR_SIZE(min_offs -"
    },
    {
        "line": 33,
        "fullcodeline": "if (!entry->e_value_inum && entry->e_value_size) {"
    },
    {
        "line": 40,
        "fullcodeline": "((void *)entry - (void *)IFIRST(header)) - sizeof(__u32);"
    },
    {
        "line": 55,
        "fullcodeline": "free = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "EXT4_I(inode)->i_extra_isize -"
    },
    {
        "line": 34,
        "fullcodeline": "size_t offs = le16_to_cpu(entry->e_value_offs);"
    },
    {
        "line": 44,
        "fullcodeline": "((void *)raw_inode + EXT4_I(inode)->i_inline_off);"
    },
    {
        "line": 35,
        "fullcodeline": "if (offs < min_offs)"
    },
    {
        "line": 36,
        "fullcodeline": "min_offs = offs;"
    },
    {
        "line": 24,
        "fullcodeline": "EXT4_XATTR_LEN(strlen(EXT4_XATTR_SYSTEM_DATA)) -"
    }
]