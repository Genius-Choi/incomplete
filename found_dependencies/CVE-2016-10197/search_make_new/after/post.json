[
    {
        "line": 2,
        "fullcodeline": "const size_t base_len = strlen(base_name);"
    },
    {
        "line": 7,
        "fullcodeline": "need_to_append_dot = base_name[base_len - 1] == '.' ? 0 : 1;"
    },
    {
        "line": 26,
        "fullcodeline": "EVUTIL_ASSERT(0);"
    },
    {
        "line": 6,
        "fullcodeline": "if (!base_len) return NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "for (dom = state->head; dom; dom = dom->next) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (!n--) {"
    },
    {
        "line": 13,
        "fullcodeline": "const u8 *const postfix = ((u8 *) dom) + sizeof(struct search_domain);"
    },
    {
        "line": 14,
        "fullcodeline": "const int postfix_len = dom->len;"
    },
    {
        "line": 15,
        "fullcodeline": "char *const newname = (char *) mm_malloc(base_len + need_to_append_dot + postfix_len + 1);"
    },
    {
        "line": 17,
        "fullcodeline": "memcpy(newname, base_name, base_len);"
    },
    {
        "line": 19,
        "fullcodeline": "memcpy(newname + base_len + need_to_append_dot, postfix, postfix_len);"
    },
    {
        "line": 20,
        "fullcodeline": "newname[base_len + need_to_append_dot + postfix_len] = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "if (!newname) return NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "if (need_to_append_dot) newname[base_len] = '.';"
    }
]