[
    {
        "line": 3,
        "fullcodeline": "bool found_unknown_shapes = false;"
    },
    {
        "line": 4,
        "fullcodeline": "const auto& op_info = op_context.op_info;"
    },
    {
        "line": 41,
        "fullcodeline": "const int64_t output_size ="
    },
    {
        "line": 8,
        "fullcodeline": "if (op_info.inputs_size() < 3) {"
    },
    {
        "line": 36,
        "fullcodeline": "CalculateTensorSize(op_info.inputs(0), &found_unknown_shapes);"
    },
    {
        "line": 38,
        "fullcodeline": "CalculateTensorSize(op_info.inputs(2), &found_unknown_shapes);"
    },
    {
        "line": 42,
        "fullcodeline": "CalculateTensorSize(op_info.inputs(0), &found_unknown_shapes);"
    },
    {
        "line": 50,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 18,
        "fullcodeline": "if (dims.kx == 1 && dims.ky == 1) {"
    },
    {
        "line": 20,
        "fullcodeline": "ops = dims.batch * dims.ix * dims.iy * dims.iz;"
    },
    {
        "line": 9,
        "fullcodeline": "return errors::InvalidArgument(\"MaxPoolGrad op has invalid inputs: \","
    },
    {
        "line": 10,
        "fullcodeline": "op_info.ShortDebugString());"
    },
    {
        "line": 21,
        "fullcodeline": "} else if (dims.kx <= dims.sx && dims.ky <= dims.sy) {"
    },
    {
        "line": 23,
        "fullcodeline": "ops = dims.batch * dims.iz *"
    },
    {
        "line": 28,
        "fullcodeline": "ops = dims.batch * dims.iz *"
    },
    {
        "line": 24,
        "fullcodeline": "(dims.ox * dims.oy * (dims.kx * dims.ky - 1) + dims.ix * dims.iy);"
    },
    {
        "line": 29,
        "fullcodeline": "(dims.ox * dims.oy * (dims.kx * dims.ky - 1) + dims.ix * dims.iy * 2);"
    }
]