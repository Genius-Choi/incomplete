[
    {
        "line": 4,
        "fullcodeline": "VLOG(2) << \"op features: \" << op_info.DebugString();"
    },
    {
        "line": 5,
        "fullcodeline": "VLOG(2) << \"Original image shape: \" << original_image_shape.DebugString();"
    },
    {
        "line": 6,
        "fullcodeline": "auto image_shape ="
    },
    {
        "line": 8,
        "fullcodeline": "VLOG(2) << \"Image shape: \" << image_shape.DebugString();"
    },
    {
        "line": 11,
        "fullcodeline": "const std::string& data_format = GetDataFormat(op_info);"
    },
    {
        "line": 21,
        "fullcodeline": "int64_t batch = image_shape.dim(0).size();"
    },
    {
        "line": 22,
        "fullcodeline": "int64_t ix = image_shape.dim(x_index).size();"
    },
    {
        "line": 23,
        "fullcodeline": "int64_t iy = image_shape.dim(y_index).size();"
    },
    {
        "line": 24,
        "fullcodeline": "int64_t iz = image_shape.dim(channel_index).size();"
    },
    {
        "line": 28,
        "fullcodeline": "std::vector<int64_t> ksize = GetKernelSize(op_info);"
    },
    {
        "line": 29,
        "fullcodeline": "int64_t kx = ksize[x_index];"
    },
    {
        "line": 30,
        "fullcodeline": "int64_t ky = ksize[y_index];"
    },
    {
        "line": 32,
        "fullcodeline": "int64_t kz = iz;"
    },
    {
        "line": 34,
        "fullcodeline": "std::vector<int64_t> strides = GetStrides(op_info);"
    },
    {
        "line": 35,
        "fullcodeline": "int64_t sx = strides[x_index];"
    },
    {
        "line": 36,
        "fullcodeline": "int64_t sy = strides[y_index];"
    },
    {
        "line": 37,
        "fullcodeline": "const auto padding = GetPadding(op_info);"
    },
    {
        "line": 39,
        "fullcodeline": "int64_t ox = GetOutputSize(ix, kx, sx, padding);"
    },
    {
        "line": 40,
        "fullcodeline": "int64_t oy = GetOutputSize(iy, ky, sy, padding);"
    },
    {
        "line": 41,
        "fullcodeline": "int64_t oz = iz;"
    },
    {
        "line": 43,
        "fullcodeline": "OpLevelCostEstimator::ConvolutionDimensions conv_dims = {"
    },
    {
        "line": 7,
        "fullcodeline": "MaybeGetMinimumShape(original_image_shape, 4, found_unknown_shapes);"
    },
    {
        "line": 12,
        "fullcodeline": "if (data_format == \"NCHW\") {"
    },
    {
        "line": 13,
        "fullcodeline": "channel_index = 1;"
    },
    {
        "line": 14,
        "fullcodeline": "y_index = 2;"
    },
    {
        "line": 15,
        "fullcodeline": "x_index = 3;"
    },
    {
        "line": 17,
        "fullcodeline": "y_index = 1;"
    },
    {
        "line": 18,
        "fullcodeline": "x_index = 2;"
    },
    {
        "line": 19,
        "fullcodeline": "channel_index = 3;"
    }
]