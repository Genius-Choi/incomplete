[
    {
        "line": 24,
        "fullcodeline": "base_url = base_url if base_url is not None else url"
    },
    {
        "line": 25,
        "fullcodeline": "all_links = find_all_links(raw_html, pattern=pattern)"
    },
    {
        "line": 26,
        "fullcodeline": "absolute_paths = set()"
    },
    {
        "line": 36,
        "fullcodeline": "res = []"
    },
    {
        "line": 27,
        "fullcodeline": "for link in all_links:"
    },
    {
        "line": 37,
        "fullcodeline": "for path in absolute_paths:"
    },
    {
        "line": 42,
        "fullcodeline": "res.append(path)"
    },
    {
        "line": 29,
        "fullcodeline": "if link.startswith(\"http\"):"
    },
    {
        "line": 38,
        "fullcodeline": "if any(path.startswith(exclude) for exclude in exclude_prefixes):"
    },
    {
        "line": 40,
        "fullcodeline": "if prevent_outside and not path.startswith(base_url):"
    },
    {
        "line": 30,
        "fullcodeline": "absolute_paths.add(link)"
    },
    {
        "line": 32,
        "fullcodeline": "elif link.startswith(\"//\"):"
    },
    {
        "line": 33,
        "fullcodeline": "absolute_paths.add(f\"{urlparse(url).scheme}:{link}\")"
    },
    {
        "line": 35,
        "fullcodeline": "absolute_paths.add(urljoin(url, link))"
    }
]