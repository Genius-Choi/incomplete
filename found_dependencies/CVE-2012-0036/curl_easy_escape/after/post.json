[
    {
        "line": 3,
        "fullcodeline": "size_t alloc = (inlength?(size_t)inlength:strlen(string))+1;"
    },
    {
        "line": 5,
        "fullcodeline": "char *testing_ptr = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "size_t newlen = alloc;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t strindex=0;"
    },
    {
        "line": 12,
        "fullcodeline": "ns = malloc(alloc);"
    },
    {
        "line": 16,
        "fullcodeline": "length = alloc-1;"
    },
    {
        "line": 51,
        "fullcodeline": "ns[strindex]=0; /* terminate it */"
    },
    {
        "line": 13,
        "fullcodeline": "if(!ns)"
    },
    {
        "line": 17,
        "fullcodeline": "while(length--) {"
    },
    {
        "line": 49,
        "fullcodeline": "string++;"
    },
    {
        "line": 20,
        "fullcodeline": "if(Curl_isunreserved(in))"
    },
    {
        "line": 22,
        "fullcodeline": "ns[strindex++]=in;"
    },
    {
        "line": 25,
        "fullcodeline": "newlen += 2; /* the size grows with two, since this'll become a %XX */"
    },
    {
        "line": 38,
        "fullcodeline": "res = Curl_convert_to_network(handle, &in, 1);"
    },
    {
        "line": 45,
        "fullcodeline": "snprintf(&ns[strindex], 4, \"%%%02X\", in);"
    },
    {
        "line": 47,
        "fullcodeline": "strindex+=3;"
    },
    {
        "line": 26,
        "fullcodeline": "if(newlen > alloc) {"
    },
    {
        "line": 27,
        "fullcodeline": "alloc *= 2;"
    },
    {
        "line": 28,
        "fullcodeline": "testing_ptr = realloc(ns, alloc);"
    },
    {
        "line": 41,
        "fullcodeline": "free(ns);"
    },
    {
        "line": 29,
        "fullcodeline": "if(!testing_ptr) {"
    },
    {
        "line": 30,
        "fullcodeline": "free( ns );"
    },
    {
        "line": 34,
        "fullcodeline": "ns = testing_ptr;"
    }
]