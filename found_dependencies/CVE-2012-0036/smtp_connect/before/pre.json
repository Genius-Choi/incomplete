[
    {
        "line": 5,
        "fullcodeline": "struct smtp_conn *smtpc = &conn->proto.smtpc;"
    },
    {
        "line": 6,
        "fullcodeline": "struct SessionHandle *data = conn->data;"
    },
    {
        "line": 7,
        "fullcodeline": "struct pingpong *pp = &smtpc->pp;"
    },
    {
        "line": 8,
        "fullcodeline": "const char *path = conn->data->state.path;"
    },
    {
        "line": 10,
        "fullcodeline": "char localhost[HOSTNAME_MAX + 1];"
    },
    {
        "line": 12,
        "fullcodeline": "*done = FALSE; /* default to not done yet */"
    },
    {
        "line": 16,
        "fullcodeline": "Curl_reset_reqproto(conn);"
    },
    {
        "line": 18,
        "fullcodeline": "result = smtp_init(conn);"
    },
    {
        "line": 25,
        "fullcodeline": "pp->response_time = RESP_TIMEOUT; /* set default response time-out */"
    },
    {
        "line": 26,
        "fullcodeline": "pp->statemach_act = smtp_statemach_act;"
    },
    {
        "line": 27,
        "fullcodeline": "pp->endofresp = smtp_endofresp;"
    },
    {
        "line": 28,
        "fullcodeline": "pp->conn = conn;"
    },
    {
        "line": 81,
        "fullcodeline": "smtpc->domain = curl_easy_unescape(conn->data, path, 0, &len);"
    },
    {
        "line": 87,
        "fullcodeline": "state(conn, SMTP_SERVERGREET);"
    },
    {
        "line": 19,
        "fullcodeline": "if(CURLE_OK != result)"
    },
    {
        "line": 73,
        "fullcodeline": "if(!*path) {"
    },
    {
        "line": 44,
        "fullcodeline": "smtp_save = data->state.proto.smtp;"
    },
    {
        "line": 45,
        "fullcodeline": "memset(&http_proxy, 0, sizeof(http_proxy));"
    },
    {
        "line": 48,
        "fullcodeline": "result = Curl_proxyCONNECT(conn, FIRSTSOCKET,"
    },
    {
        "line": 57,
        "fullcodeline": "if((conn->handler->protocol & CURLPROTO_SMTPS) &&"
    },
    {
        "line": 58,
        "fullcodeline": "data->state.used_interface != Curl_if_multi) {"
    },
    {
        "line": 61,
        "fullcodeline": "result = Curl_ssl_connect(conn, FIRSTSOCKET);"
    },
    {
        "line": 90,
        "fullcodeline": "result = smtp_multi_statemach(conn, done);"
    },
    {
        "line": 53,
        "fullcodeline": "if(CURLE_OK != result)"
    },
    {
        "line": 92,
        "fullcodeline": "result = smtp_easy_statemach(conn);"
    },
    {
        "line": 74,
        "fullcodeline": "if(!Curl_gethostname(localhost, sizeof localhost))"
    },
    {
        "line": 75,
        "fullcodeline": "path = localhost;"
    },
    {
        "line": 93,
        "fullcodeline": "if(!result)"
    },
    {
        "line": 77,
        "fullcodeline": "path = \"localhost\";"
    },
    {
        "line": 94,
        "fullcodeline": "*done = TRUE;"
    }
]