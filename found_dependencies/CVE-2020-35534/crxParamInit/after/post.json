[
    {
        "line": 10,
        "fullcodeline": "int32_t progrDataSize = supportsPartial ? 0 : sizeof(int32_t) * subbandWidth;"
    },
    {
        "line": 11,
        "fullcodeline": "int32_t paramLength = 2 * subbandWidth + 4;"
    },
    {
        "line": 12,
        "fullcodeline": "uint8_t *paramBuf = (uint8_t *)"
    },
    {
        "line": 22,
        "fullcodeline": "*param = (CrxBandParam *)paramBuf;"
    },
    {
        "line": 24,
        "fullcodeline": "paramBuf += sizeof(CrxBandParam);"
    },
    {
        "line": 26,
        "fullcodeline": "(*param)->paramData = (int32_t *)paramBuf;"
    },
    {
        "line": 27,
        "fullcodeline": "(*param)->nonProgrData ="
    },
    {
        "line": 29,
        "fullcodeline": "(*param)->subbandWidth = subbandWidth;"
    },
    {
        "line": 30,
        "fullcodeline": "(*param)->subbandHeight = subbandHeight;"
    },
    {
        "line": 31,
        "fullcodeline": "(*param)->roundedBits = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "(*param)->curLine = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "(*param)->roundedBitsMask = roundedBitsMask;"
    },
    {
        "line": 34,
        "fullcodeline": "(*param)->supportsPartial = supportsPartial;"
    },
    {
        "line": 35,
        "fullcodeline": "(*param)->bitStream.bitData = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "(*param)->bitStream.bitsLeft = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "(*param)->bitStream.mdatSize = subbandDataSize;"
    },
    {
        "line": 38,
        "fullcodeline": "(*param)->bitStream.curPos = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "(*param)->bitStream.curBufSize = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "(*param)->bitStream.curBufOffset = subbandMdatOffset;"
    },
    {
        "line": 41,
        "fullcodeline": "(*param)->bitStream.input = input;"
    },
    {
        "line": 43,
        "fullcodeline": "crxFillBuffer(&(*param)->bitStream);"
    },
    {
        "line": 19,
        "fullcodeline": "if (!paramBuf)"
    },
    {
        "line": 28,
        "fullcodeline": "progrDataSize ? (*param)->paramData + paramLength : 0;"
    },
    {
        "line": 16,
        "fullcodeline": "calloc("
    },
    {
        "line": 17,
        "fullcodeline": "1, sizeof(CrxBandParam) + sizeof(int32_t) * paramLength + progrDataSize);"
    },
    {
        "line": 20,
        "fullcodeline": "return -1;"
    }
]