[
    {
        "line": 7,
        "fullcodeline": "uint64_t rawOffset = 4 * img->planeWidth * imageRow + 2 * imageCol;"
    },
    {
        "line": 8,
        "fullcodeline": "if (img->encType == 1)"
    },
    {
        "line": 10,
        "fullcodeline": "int32_t maxVal = 1 << (img->nBits - 1);"
    },
    {
        "line": 11,
        "fullcodeline": "int32_t minVal = -maxVal;"
    },
    {
        "line": 12,
        "fullcodeline": "--maxVal;"
    },
    {
        "line": 43,
        "fullcodeline": "else if (img->encType == 3 && img->planeBuf)"
    },
    {
        "line": 13,
        "fullcodeline": "for (int i = 0; i < lineLength; i++)"
    },
    {
        "line": 45,
        "fullcodeline": "int32_t planeSize = img->planeWidth * img->planeHeight;"
    },
    {
        "line": 46,
        "fullcodeline": "int16_t *plane0 = img->planeBuf + imageRow * img->planeWidth;"
    },
    {
        "line": 47,
        "fullcodeline": "int16_t *plane1 = plane0 + planeSize;"
    },
    {
        "line": 48,
        "fullcodeline": "int16_t *plane2 = plane1 + planeSize;"
    },
    {
        "line": 49,
        "fullcodeline": "int16_t *plane3 = plane2 + planeSize;"
    },
    {
        "line": 51,
        "fullcodeline": "int32_t median = 1 << (img->nBits - 1) << 10;"
    },
    {
        "line": 52,
        "fullcodeline": "int32_t maxVal = (1 << img->nBits) - 1;"
    },
    {
        "line": 53,
        "fullcodeline": "uint32_t rawLineOffset = 4 * img->planeWidth * imageRow;"
    },
    {
        "line": 15,
        "fullcodeline": "_constrain(lineData[i], minVal, maxVal);"
    },
    {
        "line": 56,
        "fullcodeline": "for (int i = 0; i < img->planeWidth; i++)"
    },
    {
        "line": 20,
        "fullcodeline": "rawOffset = plane * img->planeWidth * img->planeHeight +"
    },
    {
        "line": 58,
        "fullcodeline": "int32_t gr ="
    },
    {
        "line": 67,
        "fullcodeline": "val = (median + (plane0[i] << 10) + 1510 * plane3[i] + 512) >> 10;"
    },
    {
        "line": 70,
        "fullcodeline": "val = (plane2[i] + gr + 1) >> 1;"
    },
    {
        "line": 73,
        "fullcodeline": "val = (gr - plane2[i] + 1) >> 1;"
    },
    {
        "line": 76,
        "fullcodeline": "val = (median + (plane0[i] << 10) + 1927 * plane1[i] + 512) >> 10;"
    },
    {
        "line": 14,
        "fullcodeline": "img->outBufs[plane][rawOffset + 2 * i] ="
    },
    {
        "line": 22,
        "fullcodeline": "for (int i = 0; i < lineLength; i++)"
    },
    {
        "line": 59,
        "fullcodeline": "median + (plane0[i] << 10) - 168 * plane1[i] - 585 * plane3[i];"
    },
    {
        "line": 61,
        "fullcodeline": "if (gr < 0)"
    },
    {
        "line": 68,
        "fullcodeline": "img->outBufs[0][rawLineOffset + 2 * i] = _constrain(val, 0, maxVal);"
    },
    {
        "line": 71,
        "fullcodeline": "img->outBufs[1][rawLineOffset + 2 * i] = _constrain(val, 0, maxVal);"
    },
    {
        "line": 74,
        "fullcodeline": "img->outBufs[2][rawLineOffset + 2 * i] = _constrain(val, 0, maxVal);"
    },
    {
        "line": 77,
        "fullcodeline": "img->outBufs[3][rawLineOffset + 2 * i] = _constrain(val, 0, maxVal);"
    },
    {
        "line": 25,
        "fullcodeline": "else if (img->nPlanes == 4)"
    },
    {
        "line": 62,
        "fullcodeline": "gr = -(((_abs(gr) + 512) >> 9) & ~1);"
    },
    {
        "line": 21,
        "fullcodeline": "img->planeWidth * imageRow + imageCol;"
    },
    {
        "line": 27,
        "fullcodeline": "int32_t median = 1 << (img->nBits - 1);"
    },
    {
        "line": 28,
        "fullcodeline": "int32_t maxVal = (1 << img->nBits) - 1;"
    },
    {
        "line": 64,
        "fullcodeline": "gr = ((_abs(gr) + 512) >> 9) & ~1;"
    },
    {
        "line": 29,
        "fullcodeline": "for (int i = 0; i < lineLength; i++)"
    },
    {
        "line": 31,
        "fullcodeline": "_constrain(median + lineData[i], 0, maxVal);"
    },
    {
        "line": 35,
        "fullcodeline": "int32_t maxVal = (1 << img->nBits) - 1;"
    },
    {
        "line": 36,
        "fullcodeline": "int32_t median = 1 << (img->nBits - 1);"
    },
    {
        "line": 37,
        "fullcodeline": "rawOffset = img->planeWidth * imageRow + imageCol;"
    },
    {
        "line": 30,
        "fullcodeline": "img->outBufs[plane][rawOffset + 2 * i] ="
    },
    {
        "line": 38,
        "fullcodeline": "for (int i = 0; i < lineLength; i++)"
    },
    {
        "line": 40,
        "fullcodeline": "_constrain(median + lineData[i], 0, maxVal);"
    }
]