[
    {
        "line": 5,
        "fullcodeline": "const char *endp = ap_strrchr_c(arg, '>');"
    },
    {
        "line": 7,
        "fullcodeline": "void *tog = cmd->cmd->cmd_data;"
    },
    {
        "line": 8,
        "fullcodeline": "apr_int64_t limited = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "apr_int64_t old_limited = cmd->limited;"
    },
    {
        "line": 16,
        "fullcodeline": "limited_methods = apr_pstrmemdup(cmd->temp_pool, arg, endp - arg);"
    },
    {
        "line": 52,
        "fullcodeline": "limited = tog ? ~limited : limited;"
    },
    {
        "line": 64,
        "fullcodeline": "cmd->limited &= limited;"
    },
    {
        "line": 66,
        "fullcodeline": "errmsg = ap_walk_config(cmd->directive->first_child, cmd, cmd->context);"
    },
    {
        "line": 12,
        "fullcodeline": "if (endp == NULL) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (!limited_methods[0]) {"
    },
    {
        "line": 23,
        "fullcodeline": "char *method = ap_getword_conf(cmd->temp_pool, &limited_methods);"
    },
    {
        "line": 27,
        "fullcodeline": "methnum = ap_method_number_of(method);"
    },
    {
        "line": 46,
        "fullcodeline": "limited |= (AP_METHOD_BIT << methnum);"
    },
    {
        "line": 54,
        "fullcodeline": "if (!(old_limited & limited)) {"
    },
    {
        "line": 13,
        "fullcodeline": "return unclosed_directive(cmd);"
    },
    {
        "line": 19,
        "fullcodeline": "return missing_container_arg(cmd);"
    },
    {
        "line": 55,
        "fullcodeline": "return apr_pstrcat(cmd->pool, cmd->cmd->name,"
    },
    {
        "line": 29,
        "fullcodeline": "if (methnum == M_TRACE && !tog) {"
    },
    {
        "line": 58,
        "fullcodeline": "else if ((old_limited & limited) == old_limited) {"
    },
    {
        "line": 32,
        "fullcodeline": "else if (methnum == M_INVALID) {"
    },
    {
        "line": 59,
        "fullcodeline": "return apr_pstrcat(cmd->pool, cmd->cmd->name,"
    },
    {
        "line": 42,
        "fullcodeline": "methnum = ap_method_register(cmd->pool,"
    },
    {
        "line": 36,
        "fullcodeline": "if (cmd->pool == cmd->temp_pool) {"
    },
    {
        "line": 43,
        "fullcodeline": "apr_pstrdup(cmd->pool, method));"
    },
    {
        "line": 38,
        "fullcodeline": "return apr_psprintf(cmd->pool, \"Could not register method '%s' \""
    }
]