[
    {
        "line": 3,
        "fullcodeline": "char path[MAXPATHLEN];"
    },
    {
        "line": 4,
        "fullcodeline": "char link[20];"
    },
    {
        "line": 8,
        "fullcodeline": "ret = snprintf(path, MAXPATHLEN, \"%s/proc/self\", rootfs);"
    },
    {
        "line": 13,
        "fullcodeline": "memset(link, 0, 20);"
    },
    {
        "line": 14,
        "fullcodeline": "linklen = readlink(path, link, 20);"
    },
    {
        "line": 15,
        "fullcodeline": "mypid = (int)getpid();"
    },
    {
        "line": 16,
        "fullcodeline": "INFO(\"I am %d, /proc/self points to '%s'\", mypid, link);"
    },
    {
        "line": 17,
        "fullcodeline": "ret = snprintf(path, MAXPATHLEN, \"%s/proc\", rootfs);"
    },
    {
        "line": 35,
        "fullcodeline": "INFO(\"Mounted /proc in container for security transition\");"
    },
    {
        "line": 9,
        "fullcodeline": "if (ret < 0 || ret >= MAXPATHLEN) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (ret < 0 || ret >= MAXPATHLEN) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (linklen < 0) /* /proc not mounted */"
    },
    {
        "line": 24,
        "fullcodeline": "if (atoi(link) != mypid) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (mount(\"proc\", path, \"proc\", 0, NULL))"
    },
    {
        "line": 10,
        "fullcodeline": "SYSERROR(\"proc path name too long\");"
    },
    {
        "line": 19,
        "fullcodeline": "SYSERROR(\"proc path name too long\");"
    },
    {
        "line": 26,
        "fullcodeline": "umount2(path, MNT_DETACH); /* ignore failure */"
    },
    {
        "line": 11,
        "fullcodeline": "return -1;"
    },
    {
        "line": 20,
        "fullcodeline": "return -1;"
    },
    {
        "line": 34,
        "fullcodeline": "return -1;"
    }
]