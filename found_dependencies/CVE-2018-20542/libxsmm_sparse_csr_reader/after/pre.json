[
    {
        "line": 10,
        "fullcodeline": "const unsigned int l_line_length = 512;"
    },
    {
        "line": 11,
        "fullcodeline": "char l_line[512/*l_line_length*/+1];"
    },
    {
        "line": 12,
        "fullcodeline": "unsigned int l_header_read = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "unsigned int* l_row_idx_id = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "unsigned int l_i = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "l_csr_file_handle = fopen( i_csr_file_in, \"r\" );"
    },
    {
        "line": 17,
        "fullcodeline": "if ( l_csr_file_handle == NULL ) {"
    },
    {
        "line": 22,
        "fullcodeline": "while (fgets(l_line, l_line_length, l_csr_file_handle) != NULL) {"
    },
    {
        "line": 113,
        "fullcodeline": "if ( l_row_idx_id != NULL ) {"
    },
    {
        "line": 18,
        "fullcodeline": "LIBXSMM_HANDLE_ERROR( io_generated_code, LIBXSMM_ERR_CSR_INPUT );"
    },
    {
        "line": 109,
        "fullcodeline": "LIBXSMM_HANDLE_ERROR( io_generated_code, LIBXSMM_ERR_CSR_LEN );"
    },
    {
        "line": 23,
        "fullcodeline": "if ( strlen(l_line) == l_line_length ) {"
    },
    {
        "line": 31,
        "fullcodeline": "if ( l_line[0] == '%' ) {"
    },
    {
        "line": 115,
        "fullcodeline": "for ( l_i = 0; l_i < (*o_row_count); l_i++) {"
    },
    {
        "line": 27,
        "fullcodeline": "LIBXSMM_HANDLE_ERROR( io_generated_code, LIBXSMM_ERR_CSR_READ_LEN );"
    },
    {
        "line": 116,
        "fullcodeline": "if ( l_row_idx_id[l_i] == 0 ) {"
    },
    {
        "line": 78,
        "fullcodeline": "unsigned int l_row = 0, l_column = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "double l_value = 0;"
    },
    {
        "line": 90,
        "fullcodeline": "l_row--; l_column--;"
    },
    {
        "line": 92,
        "fullcodeline": "(*o_column_idx)[l_i] = l_column;"
    },
    {
        "line": 93,
        "fullcodeline": "(*o_values)[l_i] = l_value;"
    },
    {
        "line": 94,
        "fullcodeline": "l_i++;"
    },
    {
        "line": 96,
        "fullcodeline": "l_row_idx_id[l_row] = 1;"
    },
    {
        "line": 97,
        "fullcodeline": "(*o_row_idx)[l_row+1] = l_i;"
    },
    {
        "line": 36,
        "fullcodeline": "if (3 == sscanf(l_line, \"%u %u %u\", o_row_count, o_column_count, o_element_count) &&"
    },
    {
        "line": 37,
        "fullcodeline": "0 != *o_row_count && 0 != *o_column_count && 0 != *o_element_count)"
    },
    {
        "line": 40,
        "fullcodeline": "*o_column_idx = (unsigned int*) malloc(sizeof(unsigned int) * (*o_element_count));"
    },
    {
        "line": 41,
        "fullcodeline": "*o_row_idx = (unsigned int*) malloc(sizeof(unsigned int) * ((size_t)(*o_row_count) + 1));"
    },
    {
        "line": 42,
        "fullcodeline": "*o_values = (double*) malloc(sizeof(double) * (*o_element_count));"
    },
    {
        "line": 43,
        "fullcodeline": "l_row_idx_id = (unsigned int*) malloc(sizeof(unsigned int) * (*o_row_count));"
    },
    {
        "line": 58,
        "fullcodeline": "memset(*o_row_idx, 0, sizeof(unsigned int) * ((size_t)(*o_row_count) + 1));"
    },
    {
        "line": 59,
        "fullcodeline": "memset(*o_column_idx, 0, sizeof(unsigned int) * (*o_element_count));"
    },
    {
        "line": 60,
        "fullcodeline": "memset(*o_values, 0, sizeof(double) * (*o_element_count));"
    },
    {
        "line": 61,
        "fullcodeline": "memset(l_row_idx_id, 0, sizeof(unsigned int) * (*o_row_count));"
    },
    {
        "line": 68,
        "fullcodeline": "(*o_row_idx)[0] = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "l_i = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "l_header_read = 1;"
    },
    {
        "line": 89,
        "fullcodeline": "LIBXSMM_ASSERT(0 != l_row && 0 != l_column);"
    },
    {
        "line": 64,
        "fullcodeline": "for ( l_i = 0; l_i <= *o_row_count; ++l_i )"
    },
    {
        "line": 65,
        "fullcodeline": "(*o_row_idx)[l_i] = (*o_element_count);"
    },
    {
        "line": 72,
        "fullcodeline": "LIBXSMM_HANDLE_ERROR( io_generated_code, LIBXSMM_ERR_CSR_READ_DESC );"
    },
    {
        "line": 81,
        "fullcodeline": "if ( sscanf(l_line, \"%u %u %lf\", &l_row, &l_column, &l_value) != 3 ) {"
    },
    {
        "line": 85,
        "fullcodeline": "LIBXSMM_HANDLE_ERROR( io_generated_code, LIBXSMM_ERR_CSR_READ_ELEMS );"
    },
    {
        "line": 46,
        "fullcodeline": "if ( ( *o_row_idx == NULL )      ||"
    },
    {
        "line": 49,
        "fullcodeline": "( l_row_idx_id == NULL ) ) {"
    },
    {
        "line": 53,
        "fullcodeline": "LIBXSMM_HANDLE_ERROR( io_generated_code, LIBXSMM_ERR_CSC_ALLOC_DATA );"
    },
    {
        "line": 48,
        "fullcodeline": "( *o_values == NULL )       ||"
    },
    {
        "line": 47,
        "fullcodeline": "( *o_column_idx == NULL )   ||"
    }
]