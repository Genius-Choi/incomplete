[
    {
        "line": 11,
        "fullcodeline": "auto res = toObject(runtime, base);"
    },
    {
        "line": 19,
        "fullcodeline": "auto O = runtime->makeHandle<JSObject>(res.getValue());"
    },
    {
        "line": 22,
        "fullcodeline": "JSObject *propObj = JSObject::getNamedDescriptor(O, runtime, id, desc);"
    },
    {
        "line": 12,
        "fullcodeline": "if (LLVM_UNLIKELY(res == ExecutionStatus::EXCEPTION)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (!propObj ||"
    },
    {
        "line": 37,
        "fullcodeline": "if (!desc.flags.accessor && !desc.flags.proxyObject) {"
    },
    {
        "line": 28,
        "fullcodeline": "(propObj != O.get() &&"
    },
    {
        "line": 47,
        "fullcodeline": "auto *accessor = vmcast<PropertyAccessor>("
    },
    {
        "line": 58,
        "fullcodeline": "CallResult<PseudoHandle<>> setRes ="
    },
    {
        "line": 16,
        "fullcodeline": "return amendPropAccessErrorMsgWithPropName(runtime, base, \"set\", id);"
    },
    {
        "line": 29,
        "fullcodeline": "(!desc.flags.accessor && !desc.flags.proxyObject))) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (!accessor->setter) {"
    },
    {
        "line": 59,
        "fullcodeline": "accessor->setter.get(runtime)->executeCall1("
    },
    {
        "line": 61,
        "fullcodeline": "if (setRes == ExecutionStatus::EXCEPTION) {"
    },
    {
        "line": 65,
        "fullcodeline": "assert(desc.flags.proxyObject && \"descriptor flags are impossible\");"
    },
    {
        "line": 66,
        "fullcodeline": "CallResult<bool> setRes = JSProxy::setNamed("
    },
    {
        "line": 48,
        "fullcodeline": "JSObject::getNamedSlotValue(propObj, runtime, desc));"
    },
    {
        "line": 60,
        "fullcodeline": "runtime->makeHandle(accessor->setter), runtime, base, *value);"
    },
    {
        "line": 68,
        "fullcodeline": "if (setRes == ExecutionStatus::EXCEPTION) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (!*setRes && strictMode) {"
    },
    {
        "line": 31,
        "fullcodeline": "return transientObjectPutErrorMessage(runtime, base, id);"
    },
    {
        "line": 39,
        "fullcodeline": "return runtime->raiseTypeError("
    },
    {
        "line": 67,
        "fullcodeline": "runtime->makeHandle(propObj), runtime, id, value, base);"
    },
    {
        "line": 72,
        "fullcodeline": "return runtime->raiseTypeError(\"transient proxy set returned false\");"
    },
    {
        "line": 53,
        "fullcodeline": "return runtime->raiseTypeError(\"Cannot modify a read-only accessor\");"
    }
]