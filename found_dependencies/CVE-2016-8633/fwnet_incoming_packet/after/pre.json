[
    {
        "line": 6,
        "fullcodeline": "struct net_device *net = dev->netdev;"
    },
    {
        "line": 21,
        "fullcodeline": "hdr.w0 = be32_to_cpu(buf[0]);"
    },
    {
        "line": 22,
        "fullcodeline": "lf = fwnet_get_hdr_lf(&hdr);"
    },
    {
        "line": 51,
        "fullcodeline": "hdr.w1 = ntohl(buf[1]);"
    },
    {
        "line": 52,
        "fullcodeline": "buf += 2;"
    },
    {
        "line": 53,
        "fullcodeline": "len -= RFC2374_FRAG_HDR_SIZE;"
    },
    {
        "line": 61,
        "fullcodeline": "datagram_label = fwnet_get_hdr_dgl(&hdr);"
    },
    {
        "line": 62,
        "fullcodeline": "dg_size = fwnet_get_hdr_dg_size(&hdr); /* ??? + 1 */"
    },
    {
        "line": 67,
        "fullcodeline": "spin_lock_irqsave(&dev->lock, flags);"
    },
    {
        "line": 69,
        "fullcodeline": "peer = fwnet_peer_find_by_node_id(dev, source_node_id, generation);"
    },
    {
        "line": 75,
        "fullcodeline": "pd = fwnet_pd_find(peer, datagram_label);"
    },
    {
        "line": 138,
        "fullcodeline": "retval = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "if (len <= RFC2374_UNFRAG_HDR_SIZE)"
    },
    {
        "line": 23,
        "fullcodeline": "if (lf == RFC2374_HDR_UNFRAG) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (len <= RFC2374_FRAG_HDR_SIZE)"
    },
    {
        "line": 54,
        "fullcodeline": "if (lf == RFC2374_HDR_FIRSTFRAG) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (fg_off + len > dg_size)"
    },
    {
        "line": 70,
        "fullcodeline": "if (!peer) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (pd == NULL) {"
    },
    {
        "line": 123,
        "fullcodeline": "if (fwnet_pd_is_complete(pd)) {"
    },
    {
        "line": 29,
        "fullcodeline": "ether_type = fwnet_get_hdr_ether_type(&hdr);"
    },
    {
        "line": 30,
        "fullcodeline": "buf++;"
    },
    {
        "line": 31,
        "fullcodeline": "len -= RFC2374_UNFRAG_HDR_SIZE;"
    },
    {
        "line": 33,
        "fullcodeline": "skb = dev_alloc_skb(len + LL_RESERVED_SPACE(net));"
    },
    {
        "line": 39,
        "fullcodeline": "skb_reserve(skb, LL_RESERVED_SPACE(net));"
    },
    {
        "line": 55,
        "fullcodeline": "ether_type = fwnet_get_hdr_ether_type(&hdr);"
    },
    {
        "line": 56,
        "fullcodeline": "fg_off = 0;"
    },
    {
        "line": 71,
        "fullcodeline": "retval = -ENOENT;"
    },
    {
        "line": 83,
        "fullcodeline": "pd = fwnet_pd_new(net, peer, datagram_label,"
    },
    {
        "line": 89,
        "fullcodeline": "peer->pdg_size++;"
    },
    {
        "line": 121,
        "fullcodeline": "pd->ether_type = ether_type;"
    },
    {
        "line": 124,
        "fullcodeline": "ether_type = pd->ether_type;"
    },
    {
        "line": 126,
        "fullcodeline": "skb = skb_get(pd->skb);"
    },
    {
        "line": 40,
        "fullcodeline": "memcpy(skb_put(skb, len), buf, len);"
    },
    {
        "line": 42,
        "fullcodeline": "return fwnet_finish_incoming_packet(net, skb, source_node_id,"
    },
    {
        "line": 58,
        "fullcodeline": "ether_type = 0;"
    },
    {
        "line": 59,
        "fullcodeline": "fg_off = fwnet_get_hdr_fg_off(&hdr);"
    },
    {
        "line": 77,
        "fullcodeline": "while (peer->pdg_size >= FWNET_MAX_FRAGMENTS) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (pd == NULL) {"
    },
    {
        "line": 131,
        "fullcodeline": "return fwnet_finish_incoming_packet(net, skb, source_node_id,"
    },
    {
        "line": 34,
        "fullcodeline": "if (unlikely(!skb)) {"
    },
    {
        "line": 81,
        "fullcodeline": "peer->pdg_size--;"
    },
    {
        "line": 86,
        "fullcodeline": "retval = -ENOMEM;"
    },
    {
        "line": 37,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 91,
        "fullcodeline": "if (fwnet_frag_overlap(pd, fg_off, len) ||"
    },
    {
        "line": 92,
        "fullcodeline": "pd->datagram_size != dg_size) {"
    },
    {
        "line": 98,
        "fullcodeline": "pd = fwnet_pd_new(net, peer, datagram_label,"
    },
    {
        "line": 100,
        "fullcodeline": "if (pd == NULL) {"
    },
    {
        "line": 102,
        "fullcodeline": "retval = -ENOMEM;"
    },
    {
        "line": 106,
        "fullcodeline": "if (!fwnet_pd_update(peer, pd, buf, fg_off, len)) {"
    },
    {
        "line": 114,
        "fullcodeline": "retval = -ENOMEM;"
    }
]