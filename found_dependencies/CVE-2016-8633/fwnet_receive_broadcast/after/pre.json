[
    {
        "line": 13,
        "fullcodeline": "dev = data;"
    },
    {
        "line": 14,
        "fullcodeline": "hdr_ptr = header;"
    },
    {
        "line": 15,
        "fullcodeline": "length = be16_to_cpup(hdr_ptr);"
    },
    {
        "line": 17,
        "fullcodeline": "spin_lock_irqsave(&dev->lock, flags);"
    },
    {
        "line": 19,
        "fullcodeline": "offset = dev->rcv_buffer_size * dev->broadcast_rcv_next_ptr;"
    },
    {
        "line": 20,
        "fullcodeline": "buf_ptr = dev->broadcast_rcv_buffer_ptrs[dev->broadcast_rcv_next_ptr++];"
    },
    {
        "line": 24,
        "fullcodeline": "spin_unlock_irqrestore(&dev->lock, flags);"
    },
    {
        "line": 38,
        "fullcodeline": "packet.payload_length = dev->rcv_buffer_size;"
    },
    {
        "line": 39,
        "fullcodeline": "packet.interrupt = 1;"
    },
    {
        "line": 40,
        "fullcodeline": "packet.skip = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "packet.tag = 3;"
    },
    {
        "line": 42,
        "fullcodeline": "packet.sy = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "packet.header_length = IEEE1394_GASP_HDR_SIZE;"
    },
    {
        "line": 45,
        "fullcodeline": "spin_lock_irqsave(&dev->lock, flags);"
    },
    {
        "line": 47,
        "fullcodeline": "retval = fw_iso_context_queue(dev->broadcast_rcv_context, &packet,"
    },
    {
        "line": 50,
        "fullcodeline": "spin_unlock_irqrestore(&dev->lock, flags);"
    },
    {
        "line": 21,
        "fullcodeline": "if (dev->broadcast_rcv_next_ptr == dev->num_broadcast_rcv_ptrs)"
    },
    {
        "line": 26,
        "fullcodeline": "if (length > IEEE1394_GASP_HDR_SIZE &&"
    },
    {
        "line": 52,
        "fullcodeline": "if (retval >= 0)"
    },
    {
        "line": 22,
        "fullcodeline": "dev->broadcast_rcv_next_ptr = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "(gasp_version(buf_ptr) == RFC2734_SW_VERSION"
    },
    {
        "line": 33,
        "fullcodeline": "fwnet_incoming_packet(dev, buf_ptr + 2,"
    },
    {
        "line": 53,
        "fullcodeline": "fw_iso_context_queue_flush(dev->broadcast_rcv_context);"
    },
    {
        "line": 27,
        "fullcodeline": "gasp_specifier_id(buf_ptr) == IANA_SPECIFIER_ID &&"
    },
    {
        "line": 34,
        "fullcodeline": "length - IEEE1394_GASP_HDR_SIZE,"
    },
    {
        "line": 35,
        "fullcodeline": "gasp_source_id(buf_ptr),"
    }
]