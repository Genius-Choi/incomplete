[
    {
        "line": 20,
        "fullcodeline": "for selector in selectors:"
    },
    {
        "line": 5,
        "fullcodeline": "domain_name(domain)"
    },
    {
        "line": 8,
        "fullcodeline": "if len(selectors) == 0:"
    },
    {
        "line": 10,
        "fullcodeline": "selectors = ["
    },
    {
        "line": 32,
        "fullcodeline": "return {\"dkim\": False}"
    },
    {
        "line": 22,
        "fullcodeline": "dns_response = ("
    },
    {
        "line": 27,
        "fullcodeline": "p = re.search(r\"p=([\\w\\d/+]*)\", dns_response).group(1)"
    },
    {
        "line": 28,
        "fullcodeline": "key = RSA.importKey(b64decode(p))"
    },
    {
        "line": 7,
        "fullcodeline": "return {\"status\": False, \"statusmessage\": \"The given domain is invalid!\"}"
    },
    {
        "line": 23,
        "fullcodeline": "dns.resolver.query(f\"{selector}._domainkey.{domain}.\", \"TXT\")"
    },
    {
        "line": 29,
        "fullcodeline": "return {\"dkim\": key.can_encrypt()}"
    }
]