[
    {
        "line": 9,
        "fullcodeline": "nmap = nmap3.Nmap()"
    },
    {
        "line": 10,
        "fullcodeline": "logger.info(f\"tls scan: Scanning host/domain {domain}\")"
    },
    {
        "line": 11,
        "fullcodeline": "tls_scans = nmap.nmap_version_detection(domain, args=\"--script ssl-enum-ciphers\")"
    },
    {
        "line": 13,
        "fullcodeline": "tls_scans = list("
    },
    {
        "line": 17,
        "fullcodeline": "results = None"
    },
    {
        "line": 46,
        "fullcodeline": "lowest_sec_level = {}"
    },
    {
        "line": 12,
        "fullcodeline": "ip, tls_scans = list(tls_scans.items())[0]"
    },
    {
        "line": 19,
        "fullcodeline": "for port in tls_scans:"
    },
    {
        "line": 43,
        "fullcodeline": "for k in results.keys():"
    },
    {
        "line": 47,
        "fullcodeline": "for tls_version in results:"
    },
    {
        "line": 6,
        "fullcodeline": "domain_name(domain)"
    },
    {
        "line": 14,
        "fullcodeline": "filter(lambda element: element[\"state\"] == \"open\", tls_scans[\"ports\"])"
    },
    {
        "line": 40,
        "fullcodeline": "results.pop(\"least strength\", None)"
    },
    {
        "line": 66,
        "fullcodeline": "return {\"result\": results, \"lowest_sec_level\": lowest_sec_level}"
    },
    {
        "line": 20,
        "fullcodeline": "logger.info(f\"tls scan: Testing port {port.get('portid')}\")"
    },
    {
        "line": 44,
        "fullcodeline": "results[k] = results[k][\"ciphers\"][\"children\"]"
    },
    {
        "line": 62,
        "fullcodeline": "ci = load_cipher_info(results[tls_version])"
    },
    {
        "line": 63,
        "fullcodeline": "results[tls_version] = ci[\"result\"]"
    },
    {
        "line": 64,
        "fullcodeline": "lowest_sec_level.update({f\"{tls_version}\": ci[\"lowest_sec_level\"]})"
    },
    {
        "line": 21,
        "fullcodeline": "if service == \"web\":"
    },
    {
        "line": 48,
        "fullcodeline": "for ciphersuite in results[tls_version]:"
    },
    {
        "line": 8,
        "fullcodeline": "return {\"status\": False, \"statusmessage\": \"The given domain is invalid!\"}"
    },
    {
        "line": 33,
        "fullcodeline": "elif service == \"mail\":"
    },
    {
        "line": 49,
        "fullcodeline": "ciphersuite.pop(\"strength\")"
    },
    {
        "line": 60,
        "fullcodeline": "cipher_info[\"tls_version\"] = tls_version"
    },
    {
        "line": 23,
        "fullcodeline": "(port.get(\"service\").get(\"name\") == \"ssl\")"
    },
    {
        "line": 25,
        "fullcodeline": "port.get(\"portid\") == \"443\""
    },
    {
        "line": 58,
        "fullcodeline": "for key in [\"gnutls_name\", \"openssl_name\", \"hex_byte_1\", \"hex_byte_2\"]:"
    },
    {
        "line": 26,
        "fullcodeline": "and port.get(\"service\").get(\"name\") == \"http\""
    },
    {
        "line": 30,
        "fullcodeline": "for script in port[\"scripts\"]:"
    },
    {
        "line": 51,
        "fullcodeline": "cipher_info = json.loads("
    },
    {
        "line": 34,
        "fullcodeline": "if port.get(\"portid\") == \"25\":"
    },
    {
        "line": 59,
        "fullcodeline": "cipher_info.pop(key)"
    },
    {
        "line": 35,
        "fullcodeline": "for script in port[\"scripts\"]:"
    },
    {
        "line": 31,
        "fullcodeline": "if script.get(\"name\") == \"ssl-enum-ciphers\":"
    },
    {
        "line": 32,
        "fullcodeline": "results = script[\"data\"]"
    },
    {
        "line": 53,
        "fullcodeline": "f\"https://ciphersuite.info/api/cs/{ciphersuite['name']}\""
    },
    {
        "line": 36,
        "fullcodeline": "if script.get(\"name\") == \"ssl-enum-ciphers\":"
    },
    {
        "line": 37,
        "fullcodeline": "results = script[\"data\"]"
    }
]