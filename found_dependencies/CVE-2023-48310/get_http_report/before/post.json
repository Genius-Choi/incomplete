[
    {
        "line": 5,
        "fullcodeline": "response = {}"
    },
    {
        "line": 7,
        "fullcodeline": "logger.info(f\"http scan: scanning {target}, with rescan set to {rescan}\")"
    },
    {
        "line": 9,
        "fullcodeline": "http_url = ("
    },
    {
        "line": 15,
        "fullcodeline": "logger.info(f\"http scan: requesting scan at {http_url}\")"
    },
    {
        "line": 16,
        "fullcodeline": "data = requests.post(http_url)"
    },
    {
        "line": 17,
        "fullcodeline": "json_object = data.json()"
    },
    {
        "line": 19,
        "fullcodeline": "headers = {}"
    },
    {
        "line": 10,
        "fullcodeline": "\"https://http-observatory.security.mozilla.org/api/v1/analyze?host=\" + target"
    },
    {
        "line": 21,
        "fullcodeline": "if \"error\" in json_object:"
    },
    {
        "line": 13,
        "fullcodeline": "http_url += \"&rescan=true\""
    },
    {
        "line": 25,
        "fullcodeline": "scan_history = json.loads("
    },
    {
        "line": 31,
        "fullcodeline": "scan_id = json_object[\"scan_id\"]"
    },
    {
        "line": 32,
        "fullcodeline": "scan_summary = json_object"
    },
    {
        "line": 33,
        "fullcodeline": "state = \"\""
    },
    {
        "line": 34,
        "fullcodeline": "counter = 0"
    },
    {
        "line": 102,
        "fullcodeline": "logger.info(\"http scan: Done!\")"
    },
    {
        "line": 22,
        "fullcodeline": "if json_object[\"error\"] == \"invalid-hostname\":"
    },
    {
        "line": 36,
        "fullcodeline": "if json_object[\"state\"] == \"ABORTED\":"
    },
    {
        "line": 52,
        "fullcodeline": "while json_object[\"state\"] not in (\"ABORTED\", \"FAILED\") and counter < 5:"
    },
    {
        "line": 99,
        "fullcodeline": "if counter == 5 and state != \"FINISHED\":"
    },
    {
        "line": 37,
        "fullcodeline": "result_obj = json.loads("
    },
    {
        "line": 43,
        "fullcodeline": "response = {k.replace(\"-\", \"_\"): v for k, v in result_obj.items()}"
    },
    {
        "line": 57,
        "fullcodeline": "check_object = json.loads(get_scan)"
    },
    {
        "line": 58,
        "fullcodeline": "state = check_object.get(\"state\", \"NO_STATE\")"
    },
    {
        "line": 59,
        "fullcodeline": "counter += 1"
    },
    {
        "line": 100,
        "fullcodeline": "logger.warning(\"http scan: not finished after 5 times, skipping\")"
    },
    {
        "line": 103,
        "fullcodeline": "return {"
    },
    {
        "line": 26,
        "fullcodeline": "requests.get("
    },
    {
        "line": 60,
        "fullcodeline": "if state == \"FINISHED\":"
    },
    {
        "line": 23,
        "fullcodeline": "return {\"error\": \"You entered an invalid hostname!\"}"
    },
    {
        "line": 27,
        "fullcodeline": "\"https://http-observatory.security.mozilla.org/api/v1/getHostHistory?host=\""
    },
    {
        "line": 44,
        "fullcodeline": "return {"
    },
    {
        "line": 53,
        "fullcodeline": "get_scan = requests.get("
    },
    {
        "line": 61,
        "fullcodeline": "use = False"
    },
    {
        "line": 62,
        "fullcodeline": "headers = {"
    },
    {
        "line": 66,
        "fullcodeline": "scan_id = check_object[\"scan_id\"]"
    },
    {
        "line": 67,
        "fullcodeline": "scan_summary = check_object"
    },
    {
        "line": 68,
        "fullcodeline": "logger.info(f\"http scan: finished scan in {counter} request(s)\")"
    },
    {
        "line": 69,
        "fullcodeline": "result_obj = json.loads("
    },
    {
        "line": 75,
        "fullcodeline": "response = {k.replace(\"-\", \"_\"): v for k, v in result_obj.items()}"
    },
    {
        "line": 38,
        "fullcodeline": "requests.get("
    },
    {
        "line": 54,
        "fullcodeline": "\"https://http-observatory.security.mozilla.org/api/v1/analyze?host=\""
    },
    {
        "line": 83,
        "fullcodeline": "if state in ("
    },
    {
        "line": 39,
        "fullcodeline": "\"https://http-observatory.security.mozilla.org/api/v1/getScanResults?scan=\""
    },
    {
        "line": 77,
        "fullcodeline": "headers = {"
    },
    {
        "line": 91,
        "fullcodeline": "logger.info("
    },
    {
        "line": 94,
        "fullcodeline": "time.sleep(3)"
    },
    {
        "line": 96,
        "fullcodeline": "logger.info(f\"http scan: got unknown state {state} for {target}\")"
    },
    {
        "line": 97,
        "fullcodeline": "print(f\"http scan: got unknown state {state} for {target}\")"
    },
    {
        "line": 70,
        "fullcodeline": "requests.get("
    },
    {
        "line": 92,
        "fullcodeline": "f\"http scan: got {state} after {counter} request(s) for {target}, retrying in 3s\""
    },
    {
        "line": 71,
        "fullcodeline": "\"https://http-observatory.security.mozilla.org/api/v1/getScanResults?scan=\""
    },
    {
        "line": 72,
        "fullcodeline": "+ str(scan_id)"
    },
    {
        "line": 40,
        "fullcodeline": "+ str(scan_history[-1][\"scan_id\"])"
    },
    {
        "line": 64,
        "fullcodeline": "for k, v in check_object[\"response_headers\"].items()"
    },
    {
        "line": 63,
        "fullcodeline": "k.replace(\"-\", \"_\"): v"
    },
    {
        "line": 79,
        "fullcodeline": "for k, v in json_object[\"response_headers\"].items()"
    },
    {
        "line": 78,
        "fullcodeline": "k.replace(\"-\", \"_\"): v"
    }
]