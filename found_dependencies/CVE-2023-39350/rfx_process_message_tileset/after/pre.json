[
    {
        "line": 5,
        "fullcodeline": "size_t close_cnt = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "PTP_WORK* work_objects = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "RFX_TILE_PROCESS_WORK_PARAM* params = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "WINPR_ASSERT(context);"
    },
    {
        "line": 18,
        "fullcodeline": "WINPR_ASSERT(context->priv);"
    },
    {
        "line": 19,
        "fullcodeline": "WINPR_ASSERT(message);"
    },
    {
        "line": 20,
        "fullcodeline": "WINPR_ASSERT(pExpectedBlockType);"
    },
    {
        "line": 28,
        "fullcodeline": "*pExpectedBlockType = WBT_FRAME_END;"
    },
    {
        "line": 33,
        "fullcodeline": "Stream_Read_UINT16(s, subtype); /* subtype (2 bytes) must be set to CBT_TILESET (0xCAC2) */"
    },
    {
        "line": 40,
        "fullcodeline": "Stream_Seek_UINT16(s);                   /* idx (2 bytes), must be set to 0x0000 */"
    },
    {
        "line": 41,
        "fullcodeline": "Stream_Seek_UINT16(s);                   /* properties (2 bytes) */"
    },
    {
        "line": 42,
        "fullcodeline": "Stream_Read_UINT8(s, context->numQuant); /* numQuant (1 byte) */"
    },
    {
        "line": 43,
        "fullcodeline": "Stream_Seek_UINT8(s);                    /* tileSize (1 byte), must be set to 0x40 */"
    },
    {
        "line": 51,
        "fullcodeline": "Stream_Read_UINT16(s, numTiles); /* numTiles (2 bytes) */"
    },
    {
        "line": 58,
        "fullcodeline": "Stream_Read_UINT32(s, tilesDataSize); /* tilesDataSize (4 bytes) */"
    },
    {
        "line": 64,
        "fullcodeline": "quants = context->quants = (UINT32*)pmem;"
    },
    {
        "line": 127,
        "fullcodeline": "close_cnt = 0;"
    },
    {
        "line": 128,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 22,
        "fullcodeline": "if (*pExpectedBlockType != WBT_EXTENSION)"
    },
    {
        "line": 34,
        "fullcodeline": "if (subtype != CBT_TILESET)"
    },
    {
        "line": 45,
        "fullcodeline": "if (context->numQuant < 1)"
    },
    {
        "line": 52,
        "fullcodeline": "if (numTiles < 1)"
    },
    {
        "line": 70,
        "fullcodeline": "for (size_t i = 0; i < context->numQuant; i++)"
    },
    {
        "line": 98,
        "fullcodeline": "for (size_t i = 0; i < message->numTiles; i++)"
    },
    {
        "line": 284,
        "fullcodeline": "for (size_t i = 0; i < message->numTiles; i++)"
    },
    {
        "line": 24,
        "fullcodeline": "WLog_Print(context->priv->log, WLOG_ERROR, \"message unexpected wants a tileset\");"
    },
    {
        "line": 30,
        "fullcodeline": "if (!Stream_CheckAndLogRequiredLengthWLog(context->priv->log, s, 14))"
    },
    {
        "line": 60,
        "fullcodeline": "if (!(pmem ="
    },
    {
        "line": 67,
        "fullcodeline": "if (!Stream_CheckAndLogRequiredLengthOfSizeWLog(context->priv->log, s, context->numQuant, 5ull))"
    },
    {
        "line": 73,
        "fullcodeline": "Stream_Read_UINT8(s, quant);"
    },
    {
        "line": 76,
        "fullcodeline": "Stream_Read_UINT8(s, quant);"
    },
    {
        "line": 79,
        "fullcodeline": "Stream_Read_UINT8(s, quant);"
    },
    {
        "line": 82,
        "fullcodeline": "Stream_Read_UINT8(s, quant);"
    },
    {
        "line": 85,
        "fullcodeline": "Stream_Read_UINT8(s, quant);"
    },
    {
        "line": 100,
        "fullcodeline": "ObjectPool_Return(context->priv->TilePool, message->tiles[i]);"
    },
    {
        "line": 101,
        "fullcodeline": "message->tiles[i] = NULL;"
    },
    {
        "line": 104,
        "fullcodeline": "if (!rfx_allocate_tiles(message, numTiles, FALSE))"
    },
    {
        "line": 109,
        "fullcodeline": "work_objects = (PTP_WORK*)winpr_aligned_calloc(message->numTiles, sizeof(PTP_WORK), 32);"
    },
    {
        "line": 110,
        "fullcodeline": "params = (RFX_TILE_PROCESS_WORK_PARAM*)winpr_aligned_recalloc("
    },
    {
        "line": 130,
        "fullcodeline": "if (Stream_GetRemainingLength(s) >= tilesDataSize)"
    },
    {
        "line": 132,
        "fullcodeline": "rc = TRUE;"
    },
    {
        "line": 61,
        "fullcodeline": "winpr_aligned_recalloc(context->quants, context->numQuant, 10 * sizeof(UINT32), 32)))"
    },
    {
        "line": 74,
        "fullcodeline": "*quants++ = (quant & 0x0F);"
    },
    {
        "line": 75,
        "fullcodeline": "*quants++ = (quant >> 4);"
    },
    {
        "line": 77,
        "fullcodeline": "*quants++ = (quant & 0x0F);"
    },
    {
        "line": 78,
        "fullcodeline": "*quants++ = (quant >> 4);"
    },
    {
        "line": 80,
        "fullcodeline": "*quants++ = (quant & 0x0F);"
    },
    {
        "line": 81,
        "fullcodeline": "*quants++ = (quant >> 4);"
    },
    {
        "line": 83,
        "fullcodeline": "*quants++ = (quant & 0x0F);"
    },
    {
        "line": 84,
        "fullcodeline": "*quants++ = (quant >> 4);"
    },
    {
        "line": 86,
        "fullcodeline": "*quants++ = (quant & 0x0F);"
    },
    {
        "line": 87,
        "fullcodeline": "*quants++ = (quant >> 4);"
    },
    {
        "line": 113,
        "fullcodeline": "if (!work_objects)"
    },
    {
        "line": 119,
        "fullcodeline": "if (!params)"
    },
    {
        "line": 133,
        "fullcodeline": "for (size_t i = 0; i < message->numTiles; i++)"
    },
    {
        "line": 274,
        "fullcodeline": "for (size_t i = 0; i < close_cnt; i++)"
    },
    {
        "line": 289,
        "fullcodeline": "tile->YLen = tile->CbLen = tile->CrLen = 0;"
    },
    {
        "line": 290,
        "fullcodeline": "tile->YData = tile->CbData = tile->CrData = NULL;"
    },
    {
        "line": 146,
        "fullcodeline": "message->tiles[i] = tile;"
    },
    {
        "line": 158,
        "fullcodeline": "sub = Stream_StaticInit(&subBuffer, Stream_Pointer(s), Stream_GetRemainingLength(s));"
    },
    {
        "line": 159,
        "fullcodeline": "Stream_Read_UINT16("
    },
    {
        "line": 161,
        "fullcodeline": "Stream_Read_UINT32(sub, blockLen); /* blockLen (4 bytes) */"
    },
    {
        "line": 188,
        "fullcodeline": "Stream_Read_UINT8(sub, tile->quantIdxY);  /* quantIdxY (1 byte) */"
    },
    {
        "line": 189,
        "fullcodeline": "Stream_Read_UINT8(sub, tile->quantIdxCb); /* quantIdxCb (1 byte) */"
    },
    {
        "line": 190,
        "fullcodeline": "Stream_Read_UINT8(sub, tile->quantIdxCr); /* quantIdxCr (1 byte) */"
    },
    {
        "line": 216,
        "fullcodeline": "Stream_Read_UINT16(sub, tile->xIdx);      /* xIdx (2 bytes) */"
    },
    {
        "line": 217,
        "fullcodeline": "Stream_Read_UINT16(sub, tile->yIdx);      /* yIdx (2 bytes) */"
    },
    {
        "line": 218,
        "fullcodeline": "Stream_Read_UINT16(sub, tile->YLen);      /* YLen (2 bytes) */"
    },
    {
        "line": 219,
        "fullcodeline": "Stream_Read_UINT16(sub, tile->CbLen);     /* CbLen (2 bytes) */"
    },
    {
        "line": 220,
        "fullcodeline": "Stream_Read_UINT16(sub, tile->CrLen);     /* CrLen (2 bytes) */"
    },
    {
        "line": 221,
        "fullcodeline": "Stream_GetPointer(sub, tile->YData);"
    },
    {
        "line": 227,
        "fullcodeline": "Stream_GetPointer(sub, tile->CbData);"
    },
    {
        "line": 233,
        "fullcodeline": "Stream_GetPointer(sub, tile->CrData);"
    },
    {
        "line": 239,
        "fullcodeline": "tile->x = tile->xIdx * 64;"
    },
    {
        "line": 240,
        "fullcodeline": "tile->y = tile->yIdx * 64;"
    },
    {
        "line": 276,
        "fullcodeline": "WaitForThreadpoolWorkCallbacks(work_objects[i], FALSE);"
    },
    {
        "line": 277,
        "fullcodeline": "CloseThreadpoolWork(work_objects[i]);"
    },
    {
        "line": 286,
        "fullcodeline": "if (!(tile = message->tiles[i]))"
    },
    {
        "line": 111,
        "fullcodeline": "NULL, message->numTiles, sizeof(RFX_TILE_PROCESS_WORK_PARAM), 32);"
    },
    {
        "line": 179,
        "fullcodeline": "if (blockType != CBT_TILE)"
    },
    {
        "line": 191,
        "fullcodeline": "if (tile->quantIdxY >= context->numQuant)"
    },
    {
        "line": 199,
        "fullcodeline": "if (tile->quantIdxCb >= context->numQuant)"
    },
    {
        "line": 207,
        "fullcodeline": "if (tile->quantIdxCr >= context->numQuant)"
    },
    {
        "line": 138,
        "fullcodeline": "if (!(tile = (RFX_TILE*)ObjectPool_Take(context->priv->TilePool)))"
    },
    {
        "line": 142,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 149,
        "fullcodeline": "if (!Stream_CheckAndLogRequiredLengthWLog(context->priv->log, s, 6))"
    },
    {
        "line": 154,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 163,
        "fullcodeline": "if (!Stream_SafeSeek(s, blockLen))"
    },
    {
        "line": 165,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 168,
        "fullcodeline": "if ((blockLen < 6 + 13) ||"
    },
    {
        "line": 169,
        "fullcodeline": "(!Stream_CheckAndLogRequiredLengthWLog(context->priv->log, sub, blockLen - 6)))"
    },
    {
        "line": 175,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 184,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 196,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 204,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 212,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 222,
        "fullcodeline": "if (!Stream_SafeSeek(sub, tile->YLen))"
    },
    {
        "line": 224,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 228,
        "fullcodeline": "if (!Stream_SafeSeek(sub, tile->CbLen))"
    },
    {
        "line": 230,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 234,
        "fullcodeline": "if (!Stream_SafeSeek(sub, tile->CrLen))"
    },
    {
        "line": 236,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 250,
        "fullcodeline": "params[i].context = context;"
    },
    {
        "line": 251,
        "fullcodeline": "params[i].tile = message->tiles[i];"
    },
    {
        "line": 262,
        "fullcodeline": "SubmitThreadpoolWork(work_objects[i]);"
    },
    {
        "line": 263,
        "fullcodeline": "close_cnt = i + 1;"
    },
    {
        "line": 244,
        "fullcodeline": "if (!params)"
    },
    {
        "line": 267,
        "fullcodeline": "rfx_decode_rgb(context, tile, tile->data, 64 * 4);"
    },
    {
        "line": 246,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 253,
        "fullcodeline": "if (!(work_objects[i] ="
    },
    {
        "line": 258,
        "fullcodeline": "rc = FALSE;"
    },
    {
        "line": 254,
        "fullcodeline": "CreateThreadpoolWork(rfx_process_message_tile_work_callback,"
    }
]