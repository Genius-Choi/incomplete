[
    {
        "line": 8,
        "fullcodeline": "SCEnter();"
    },
    {
        "line": 11,
        "fullcodeline": "det_ctx->inspection_recursion_counter++;"
    },
    {
        "line": 468,
        "fullcodeline": "KEYWORD_PROFILING_END(det_ctx, smd->type, 0);"
    },
    {
        "line": 469,
        "fullcodeline": "SCReturnInt(0);"
    },
    {
        "line": 481,
        "fullcodeline": "KEYWORD_PROFILING_END(det_ctx, smd->type, 1);"
    },
    {
        "line": 482,
        "fullcodeline": "SCReturnInt(1);"
    },
    {
        "line": 13,
        "fullcodeline": "if (det_ctx->inspection_recursion_counter == de_ctx->inspection_recursion_limit) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (smd == NULL || buffer_len == 0) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (smd->type == DETECT_CONTENT) {"
    },
    {
        "line": 474,
        "fullcodeline": "if (!smd->is_last) {"
    },
    {
        "line": 14,
        "fullcodeline": "det_ctx->discontinue_matching = 1;"
    },
    {
        "line": 15,
        "fullcodeline": "KEYWORD_PROFILING_END(det_ctx, smd->type, 0);"
    },
    {
        "line": 16,
        "fullcodeline": "SCReturnInt(0);"
    },
    {
        "line": 20,
        "fullcodeline": "KEYWORD_PROFILING_END(det_ctx, smd->type, 0);"
    },
    {
        "line": 21,
        "fullcodeline": "SCReturnInt(0);"
    },
    {
        "line": 27,
        "fullcodeline": "DetectContentData *cd = (DetectContentData *)smd->ctx;"
    },
    {
        "line": 44,
        "fullcodeline": "uint8_t *found = NULL;"
    },
    {
        "line": 45,
        "fullcodeline": "uint32_t offset = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "uint32_t depth = buffer_len;"
    },
    {
        "line": 47,
        "fullcodeline": "uint32_t prev_offset = 0; /**< used in recursive searching */"
    },
    {
        "line": 48,
        "fullcodeline": "uint32_t prev_buffer_offset = det_ctx->buffer_offset;"
    },
    {
        "line": 475,
        "fullcodeline": "KEYWORD_PROFILING_END(det_ctx, smd->type, 1);"
    },
    {
        "line": 476,
        "fullcodeline": "int r = DetectEngineContentInspection(de_ctx, det_ctx, s, smd+1,"
    },
    {
        "line": 478,
        "fullcodeline": "SCReturnInt(r);"
    },
    {
        "line": 169,
        "fullcodeline": "uint8_t *sbuffer = buffer + offset;"
    },
    {
        "line": 170,
        "fullcodeline": "uint32_t sbuffer_len = depth - offset;"
    },
    {
        "line": 171,
        "fullcodeline": "uint32_t match_offset = 0;"
    },
    {
        "line": 181,
        "fullcodeline": "found = SpmScan(cd->spm_ctx, det_ctx->spm_thread_ctx, sbuffer,"
    },
    {
        "line": 186,
        "fullcodeline": "SCLogDebug(\"found %p cd negated %s\", found, cd->flags & DETECT_CONTENT_NEGATED ? \"true\" : \"false\");"
    },
    {
        "line": 247,
        "fullcodeline": "} else if (smd->type == DETECT_ISDATAAT) {"
    },
    {
        "line": 51,
        "fullcodeline": "if ((cd->flags & DETECT_CONTENT_DISTANCE) ||"
    },
    {
        "line": 151,
        "fullcodeline": "if (prev_offset != 0)"
    },
    {
        "line": 156,
        "fullcodeline": "if (depth > buffer_len)"
    },
    {
        "line": 161,
        "fullcodeline": "if (offset > depth || depth == 0) {"
    },
    {
        "line": 188,
        "fullcodeline": "if (found == NULL && !(cd->flags & DETECT_CONTENT_NEGATED)) {"
    },
    {
        "line": 248,
        "fullcodeline": "SCLogDebug(\"inspecting isdataat\");"
    },
    {
        "line": 250,
        "fullcodeline": "DetectIsdataatData *id = (DetectIsdataatData *)smd->ctx;"
    },
    {
        "line": 52,
        "fullcodeline": "(cd->flags & DETECT_CONTENT_WITHIN)) {"
    },
    {
        "line": 55,
        "fullcodeline": "offset = prev_buffer_offset;"
    },
    {
        "line": 56,
        "fullcodeline": "depth = buffer_len;"
    },
    {
        "line": 58,
        "fullcodeline": "int distance = cd->distance;"
    },
    {
        "line": 152,
        "fullcodeline": "offset = prev_offset;"
    },
    {
        "line": 157,
        "fullcodeline": "depth = buffer_len;"
    },
    {
        "line": 251,
        "fullcodeline": "if (id->flags & ISDATAAT_RELATIVE) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_DISTANCE) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_WITHIN) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_DEPTH_BE) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_OFFSET_BE) {"
    },
    {
        "line": 145,
        "fullcodeline": "prev_buffer_offset = 0;"
    },
    {
        "line": 162,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_NEGATED) {"
    },
    {
        "line": 277,
        "fullcodeline": "} else if (smd->type == DETECT_PCRE) {"
    },
    {
        "line": 122,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_DEPTH_BE) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (stream_start_offset != 0 && cd->flags & DETECT_CONTENT_DEPTH) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_OFFSET_BE)"
    },
    {
        "line": 190,
        "fullcodeline": "} else if (found == NULL && (cd->flags & DETECT_CONTENT_NEGATED)) {"
    },
    {
        "line": 252,
        "fullcodeline": "if (det_ctx->buffer_offset + id->dataat > buffer_len) {"
    },
    {
        "line": 278,
        "fullcodeline": "SCLogDebug(\"inspecting pcre\");"
    },
    {
        "line": 279,
        "fullcodeline": "DetectPcreData *pe = (DetectPcreData *)smd->ctx;"
    },
    {
        "line": 280,
        "fullcodeline": "uint32_t prev_buffer_offset = det_ctx->buffer_offset;"
    },
    {
        "line": 281,
        "fullcodeline": "uint32_t prev_offset = 0;"
    },
    {
        "line": 282,
        "fullcodeline": "int r = 0;"
    },
    {
        "line": 284,
        "fullcodeline": "det_ctx->pcre_match_start_offset = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_DISTANCE_BE) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (distance < 0 && (uint32_t)(abs(distance)) > offset)"
    },
    {
        "line": 73,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_WITHIN_BE) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (stream_start_offset != 0 && prev_buffer_offset == 0) {"
    },
    {
        "line": 98,
        "fullcodeline": "if ((det_ctx->bj_values[cd->depth] + prev_buffer_offset) < depth) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (det_ctx->bj_values[cd->offset] > offset)"
    },
    {
        "line": 142,
        "fullcodeline": "offset = det_ctx->bj_values[cd->offset];"
    },
    {
        "line": 264,
        "fullcodeline": "if (id->dataat < buffer_len) {"
    },
    {
        "line": 64,
        "fullcodeline": "offset = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "depth = prev_buffer_offset + det_ctx->bj_values[cd->depth];"
    },
    {
        "line": 102,
        "fullcodeline": "if (cd->depth != 0) {"
    },
    {
        "line": 113,
        "fullcodeline": "offset = det_ctx->bj_values[cd->offset];"
    },
    {
        "line": 115,
        "fullcodeline": "if (cd->offset > offset) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (depth <= stream_start_offset) {"
    },
    {
        "line": 144,
        "fullcodeline": "offset = cd->offset;"
    },
    {
        "line": 254,
        "fullcodeline": "if (id->flags & ISDATAAT_NEGATED)"
    },
    {
        "line": 258,
        "fullcodeline": "SCLogDebug(\"relative isdataat match\");"
    },
    {
        "line": 265,
        "fullcodeline": "SCLogDebug(\"absolute isdataat match\");"
    },
    {
        "line": 286,
        "fullcodeline": "Packet *p = NULL;"
    },
    {
        "line": 289,
        "fullcodeline": "r = DetectPcrePayloadMatch(det_ctx, s, smd, p, f,"
    },
    {
        "line": 299,
        "fullcodeline": "KEYWORD_PROFILING_END(det_ctx, smd->type, 1);"
    },
    {
        "line": 302,
        "fullcodeline": "prev_offset = det_ctx->pcre_match_start_offset;"
    },
    {
        "line": 307,
        "fullcodeline": "r = DetectEngineContentInspection(de_ctx, det_ctx, s, smd+1,"
    },
    {
        "line": 316,
        "fullcodeline": "det_ctx->buffer_offset = prev_buffer_offset;"
    },
    {
        "line": 317,
        "fullcodeline": "det_ctx->pcre_match_start_offset = prev_offset;"
    },
    {
        "line": 320,
        "fullcodeline": "} else if (smd->type == DETECT_BYTETEST) {"
    },
    {
        "line": 66,
        "fullcodeline": "offset += distance;"
    },
    {
        "line": 74,
        "fullcodeline": "if ((int32_t)depth > (int32_t)(prev_buffer_offset + det_ctx->bj_values[cd->within] + distance)) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (depth <= stream_start_offset) {"
    },
    {
        "line": 116,
        "fullcodeline": "offset = cd->offset;"
    },
    {
        "line": 125,
        "fullcodeline": "if (cd->depth != 0) {"
    },
    {
        "line": 192,
        "fullcodeline": "} else if (found != NULL && (cd->flags & DETECT_CONTENT_NEGATED)) {"
    },
    {
        "line": 259,
        "fullcodeline": "if (id->flags & ISDATAAT_NEGATED)"
    },
    {
        "line": 266,
        "fullcodeline": "if (id->flags & ISDATAAT_NEGATED)"
    },
    {
        "line": 287,
        "fullcodeline": "if (inspection_mode == DETECT_ENGINE_CONTENT_INSPECTION_MODE_PAYLOAD)"
    },
    {
        "line": 291,
        "fullcodeline": "if (r == 0) {"
    },
    {
        "line": 295,
        "fullcodeline": "if (!(pe->flags & DETECT_PCRE_RELATIVE_NEXT)) {"
    },
    {
        "line": 309,
        "fullcodeline": "if (r == 1) {"
    },
    {
        "line": 321,
        "fullcodeline": "DetectBytetestData *btd = (DetectBytetestData *)smd->ctx;"
    },
    {
        "line": 322,
        "fullcodeline": "uint8_t flags = btd->flags;"
    },
    {
        "line": 323,
        "fullcodeline": "int32_t offset = btd->offset;"
    },
    {
        "line": 324,
        "fullcodeline": "uint64_t value = btd->value;"
    },
    {
        "line": 75,
        "fullcodeline": "depth = prev_buffer_offset + det_ctx->bj_values[cd->within] + distance;"
    },
    {
        "line": 78,
        "fullcodeline": "if ((int32_t)depth > (int32_t)(prev_buffer_offset + cd->within + distance)) {"
    },
    {
        "line": 103,
        "fullcodeline": "if ((cd->depth + prev_buffer_offset) < depth) {"
    },
    {
        "line": 126,
        "fullcodeline": "depth = cd->depth;"
    },
    {
        "line": 271,
        "fullcodeline": "if (id->flags & ISDATAAT_NEGATED)"
    },
    {
        "line": 288,
        "fullcodeline": "p = (Packet *)data;"
    },
    {
        "line": 296,
        "fullcodeline": "SCLogDebug(\"no relative match coming up, so this is a match\");"
    },
    {
        "line": 310,
        "fullcodeline": "SCReturnInt(1);"
    },
    {
        "line": 325,
        "fullcodeline": "if (flags & DETECT_BYTETEST_OFFSET_BE) {"
    },
    {
        "line": 328,
        "fullcodeline": "if (flags & DETECT_BYTETEST_VALUE_BE) {"
    },
    {
        "line": 334,
        "fullcodeline": "if (flags & DETECT_BYTETEST_DCE && data != NULL) {"
    },
    {
        "line": 342,
        "fullcodeline": "if (DetectBytetestDoMatch(det_ctx, s, smd->ctx, buffer, buffer_len, flags,"
    },
    {
        "line": 79,
        "fullcodeline": "depth = prev_buffer_offset + cd->within + distance;"
    },
    {
        "line": 104,
        "fullcodeline": "depth = prev_buffer_offset + cd->depth;"
    },
    {
        "line": 133,
        "fullcodeline": "} else if (depth >= (stream_start_offset + buffer_len)) {"
    },
    {
        "line": 196,
        "fullcodeline": "if (DETECT_CONTENT_IS_SINGLE(cd))"
    },
    {
        "line": 200,
        "fullcodeline": "match_offset = (uint32_t)((found - buffer) + cd->content_len);"
    },
    {
        "line": 202,
        "fullcodeline": "det_ctx->buffer_offset = match_offset;"
    },
    {
        "line": 226,
        "fullcodeline": "KEYWORD_PROFILING_END(det_ctx, smd->type, 1);"
    },
    {
        "line": 231,
        "fullcodeline": "int r = DetectEngineContentInspection(de_ctx, det_ctx, s, smd+1,"
    },
    {
        "line": 241,
        "fullcodeline": "prev_offset = (match_offset - (cd->content_len - 1));"
    },
    {
        "line": 335,
        "fullcodeline": "DCERPCState *dcerpc_state = (DCERPCState *)data;"
    },
    {
        "line": 338,
        "fullcodeline": "flags |= ((dcerpc_state->dcerpc.dcerpchdr.packed_drep[0] & 0x10) ?"
    },
    {
        "line": 349,
        "fullcodeline": "} else if (smd->type == DETECT_BYTEJUMP) {"
    },
    {
        "line": 89,
        "fullcodeline": "} else if (depth >= (stream_start_offset + buffer_len)) {"
    },
    {
        "line": 197,
        "fullcodeline": "det_ctx->discontinue_matching = 1;"
    },
    {
        "line": 205,
        "fullcodeline": "if (cd->flags & DETECT_CONTENT_REPLACE) {"
    },
    {
        "line": 213,
        "fullcodeline": "if (!(cd->flags & DETECT_CONTENT_RELATIVE_NEXT)) {"
    },
    {
        "line": 233,
        "fullcodeline": "if (r == 1) {"
    },
    {
        "line": 350,
        "fullcodeline": "DetectBytejumpData *bjd = (DetectBytejumpData *)smd->ctx;"
    },
    {
        "line": 351,
        "fullcodeline": "uint8_t flags = bjd->flags;"
    },
    {
        "line": 352,
        "fullcodeline": "int32_t offset = bjd->offset;"
    },
    {
        "line": 136,
        "fullcodeline": "depth = depth - stream_start_offset;"
    },
    {
        "line": 214,
        "fullcodeline": "SCLogDebug(\"no relative match coming up, so this is a match\");"
    },
    {
        "line": 234,
        "fullcodeline": "SCReturnInt(1);"
    },
    {
        "line": 354,
        "fullcodeline": "if (flags & DETECT_BYTEJUMP_OFFSET_BE) {"
    },
    {
        "line": 360,
        "fullcodeline": "if (flags & DETECT_BYTEJUMP_DCE && data != NULL) {"
    },
    {
        "line": 368,
        "fullcodeline": "if (DetectBytejumpDoMatch(det_ctx, s, smd->ctx, buffer, buffer_len,"
    },
    {
        "line": 92,
        "fullcodeline": "depth = depth - stream_start_offset;"
    },
    {
        "line": 206,
        "fullcodeline": "if (inspection_mode == DETECT_ENGINE_CONTENT_INSPECTION_MODE_PAYLOAD) {"
    },
    {
        "line": 361,
        "fullcodeline": "DCERPCState *dcerpc_state = (DCERPCState *)data;"
    },
    {
        "line": 364,
        "fullcodeline": "flags |= ((dcerpc_state->dcerpc.dcerpchdr.packed_drep[0] & 0x10) ?"
    },
    {
        "line": 375,
        "fullcodeline": "} else if (smd->type == DETECT_BYTE_EXTRACT) {"
    },
    {
        "line": 208,
        "fullcodeline": "det_ctx->replist = DetectReplaceAddToList(det_ctx->replist, found, cd);"
    },
    {
        "line": 377,
        "fullcodeline": "DetectByteExtractData *bed = (DetectByteExtractData *)smd->ctx;"
    },
    {
        "line": 378,
        "fullcodeline": "uint8_t endian = bed->endian;"
    },
    {
        "line": 210,
        "fullcodeline": "SCLogWarning(SC_ERR_INVALID_VALUE, \"Can't modify payload without packet\");"
    },
    {
        "line": 382,
        "fullcodeline": "if ((bed->flags & DETECT_BYTE_EXTRACT_FLAG_ENDIAN) &&"
    },
    {
        "line": 392,
        "fullcodeline": "if (DetectByteExtractDoMatch(det_ctx, smd, s, buffer,"
    },
    {
        "line": 383,
        "fullcodeline": "endian == DETECT_BYTE_EXTRACT_ENDIAN_DCE && data != NULL) {"
    },
    {
        "line": 385,
        "fullcodeline": "DCERPCState *dcerpc_state = (DCERPCState *)data;"
    },
    {
        "line": 388,
        "fullcodeline": "endian |= ((dcerpc_state->dcerpc.dcerpchdr.packed_drep[0] == 0x10) ?"
    },
    {
        "line": 402,
        "fullcodeline": "} else if (smd->type == DETECT_AL_URILEN) {"
    },
    {
        "line": 403,
        "fullcodeline": "SCLogDebug(\"inspecting uri len\");"
    },
    {
        "line": 405,
        "fullcodeline": "int r = 0;"
    },
    {
        "line": 406,
        "fullcodeline": "DetectUrilenData *urilend = (DetectUrilenData *) smd->ctx;"
    },
    {
        "line": 433,
        "fullcodeline": "det_ctx->discontinue_matching = 0;"
    },
    {
        "line": 429,
        "fullcodeline": "if (r == 1) {"
    },
    {
        "line": 450,
        "fullcodeline": "} else if (smd->type == DETECT_BASE64_DECODE) {"
    },
    {
        "line": 410,
        "fullcodeline": "if (buffer_len == urilend->urilen1)"
    },
    {
        "line": 414,
        "fullcodeline": "if (buffer_len < urilend->urilen1)"
    },
    {
        "line": 418,
        "fullcodeline": "if (buffer_len > urilend->urilen1)"
    },
    {
        "line": 422,
        "fullcodeline": "if (buffer_len > urilend->urilen1 &&"
    },
    {
        "line": 411,
        "fullcodeline": "r = 1;"
    },
    {
        "line": 415,
        "fullcodeline": "r = 1;"
    },
    {
        "line": 419,
        "fullcodeline": "r = 1;"
    },
    {
        "line": 423,
        "fullcodeline": "buffer_len < urilend->urilen2) {"
    },
    {
        "line": 424,
        "fullcodeline": "r = 1;"
    },
    {
        "line": 451,
        "fullcodeline": "if (DetectBase64DecodeDoMatch(det_ctx, s, smd, buffer, buffer_len)) {"
    },
    {
        "line": 461,
        "fullcodeline": "SCLogDebug(\"sm->type %u\", smd->type);"
    },
    {
        "line": 452,
        "fullcodeline": "if (s->sm_arrays[DETECT_SM_LIST_BASE64_DATA] != NULL) {"
    },
    {
        "line": 453,
        "fullcodeline": "KEYWORD_PROFILING_END(det_ctx, smd->type, 1);"
    },
    {
        "line": 454,
        "fullcodeline": "if (DetectBase64DataDoMatch(de_ctx, det_ctx, s, f)) {"
    }
]