[
    {
        "line": 7,
        "fullcodeline": "struct strbuf request = STRBUF_INIT;"
    },
    {
        "line": 13,
        "fullcodeline": "char *target_host = getenv(\"GIT_OVERRIDE_VIRTUAL_HOST\");"
    },
    {
        "line": 19,
        "fullcodeline": "transport_check_allowed(\"git\");"
    },
    {
        "line": 38,
        "fullcodeline": "strbuf_addf(&request,"
    },
    {
        "line": 50,
        "fullcodeline": "packet_write(fd[1], request.buf, request.len);"
    },
    {
        "line": 52,
        "fullcodeline": "free(target_host);"
    },
    {
        "line": 53,
        "fullcodeline": "strbuf_release(&request);"
    },
    {
        "line": 20,
        "fullcodeline": "if (strchr(target_host, '\\n') || strchr(path, '\\n'))"
    },
    {
        "line": 27,
        "fullcodeline": "if (git_use_proxy(hostandport))"
    },
    {
        "line": 44,
        "fullcodeline": "if (version > 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "target_host = xstrdup(target_host);"
    },
    {
        "line": 21,
        "fullcodeline": "die(_(\"newline is forbidden in git:// hosts and repo paths\"));"
    },
    {
        "line": 28,
        "fullcodeline": "conn = git_proxy_connect(fd, hostandport);"
    },
    {
        "line": 45,
        "fullcodeline": "strbuf_addch(&request, '\\0');"
    },
    {
        "line": 46,
        "fullcodeline": "strbuf_addf(&request, \"version=%d%c\","
    },
    {
        "line": 17,
        "fullcodeline": "target_host = xstrdup(hostandport);"
    },
    {
        "line": 30,
        "fullcodeline": "conn = git_tcp_connect(fd, hostandport, flags);"
    }
]