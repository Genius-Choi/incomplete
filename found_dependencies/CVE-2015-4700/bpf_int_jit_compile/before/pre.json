[
    {
        "line": 3,
        "fullcodeline": "struct bpf_binary_header *header = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "int proglen, oldproglen = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "struct jit_context ctx = {};"
    },
    {
        "line": 6,
        "fullcodeline": "u8 *image = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "addrs = kmalloc(prog->len * sizeof(*addrs), GFP_KERNEL);"
    },
    {
        "line": 28,
        "fullcodeline": "ctx.cleanup_addr = proglen;"
    },
    {
        "line": 11,
        "fullcodeline": "if (!bpf_jit_enable)"
    },
    {
        "line": 18,
        "fullcodeline": "if (!addrs)"
    },
    {
        "line": 24,
        "fullcodeline": "for (proglen = 0, i = 0; i < prog->len; i++) {"
    },
    {
        "line": 30,
        "fullcodeline": "for (pass = 0; pass < 10; pass++) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (!prog || !prog->len)"
    },
    {
        "line": 25,
        "fullcodeline": "proglen += 64;"
    },
    {
        "line": 26,
        "fullcodeline": "addrs[i] = proglen;"
    },
    {
        "line": 31,
        "fullcodeline": "proglen = do_jit(prog, addrs, image, oldproglen, &ctx);"
    },
    {
        "line": 52,
        "fullcodeline": "oldproglen = proglen;"
    },
    {
        "line": 56,
        "fullcodeline": "bpf_jit_dump(prog->len, proglen, 0, image);"
    },
    {
        "line": 59,
        "fullcodeline": "bpf_flush_icache(header, image + proglen);"
    },
    {
        "line": 62,
        "fullcodeline": "prog->jited = true;"
    },
    {
        "line": 32,
        "fullcodeline": "if (proglen <= 0) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (proglen == oldproglen) {"
    },
    {
        "line": 47,
        "fullcodeline": "header = bpf_jit_binary_alloc(proglen, &image,"
    },
    {
        "line": 39,
        "fullcodeline": "if (proglen != oldproglen) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (!header)"
    }
]