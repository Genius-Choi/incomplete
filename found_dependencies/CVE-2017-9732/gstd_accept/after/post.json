[
    {
        "line": 6,
        "fullcodeline": "gss_ctx_id_t\t ctx = GSS_C_NO_CONTEXT;"
    },
    {
        "line": 11,
        "fullcodeline": "*display_creds = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "*export_name = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "out.length = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "in.length = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "read_packet(fd, &in, 60000, 1);"
    },
    {
        "line": 23,
        "fullcodeline": "maj = gss_accept_sec_context(&min, &ctx, GSS_C_NO_CREDENTIAL,"
    },
    {
        "line": 27,
        "fullcodeline": "gss_release_buffer(&min, &in);"
    },
    {
        "line": 33,
        "fullcodeline": "gss_release_buffer(&min, &out);"
    },
    {
        "line": 35,
        "fullcodeline": "GSTD_GSS_ERROR(maj, min, NULL, \"gss_accept_sec_context\");"
    },
    {
        "line": 40,
        "fullcodeline": "*display_creds = gstd_get_display_name(client);"
    },
    {
        "line": 41,
        "fullcodeline": "*export_name = gstd_get_export_name(client);"
    },
    {
        "line": 42,
        "fullcodeline": "*mech = gstd_get_mech(mech_oid);"
    },
    {
        "line": 44,
        "fullcodeline": "gss_release_name(&min, &client);"
    },
    {
        "line": 45,
        "fullcodeline": "SETUP_GSTD_TOK(tok, ctx, fd, \"gstd_accept\");"
    },
    {
        "line": 17,
        "fullcodeline": "while ((ret = read_packet(fd, &in, 60000, 0)) == -2)"
    },
    {
        "line": 20,
        "fullcodeline": "if (ret < 1)"
    },
    {
        "line": 29,
        "fullcodeline": "if (out.length && write_packet(fd, &out)) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (maj & GSS_S_CONTINUE_NEEDED)"
    },
    {
        "line": 30,
        "fullcodeline": "gss_release_buffer(&min, &out);"
    }
]