[
    {
        "line": 3,
        "fullcodeline": "struct file *file = iocb->ki_filp;"
    },
    {
        "line": 4,
        "fullcodeline": "struct inode *inode = file->f_mapping->host;"
    },
    {
        "line": 5,
        "fullcodeline": "struct ocfs2_super *osb = OCFS2_SB(inode->i_sb);"
    },
    {
        "line": 12,
        "fullcodeline": "if (OCFS2_I(inode)->ip_dyn_features & OCFS2_INLINE_DATA_FL)"
    },
    {
        "line": 20,
        "fullcodeline": "if (iov_iter_rw(iter) == READ)"
    },
    {
        "line": 25,
        "fullcodeline": "return __blockdev_direct_IO(iocb, inode, inode->i_sb->s_bdev,"
    },
    {
        "line": 16,
        "fullcodeline": "if (iocb->ki_pos + iter->count > i_size_read(inode) &&"
    },
    {
        "line": 17,
        "fullcodeline": "!ocfs2_supports_append_dio(osb))"
    },
    {
        "line": 21,
        "fullcodeline": "get_block = ocfs2_lock_get_block;"
    },
    {
        "line": 23,
        "fullcodeline": "get_block = ocfs2_dio_wr_get_block;"
    }
]