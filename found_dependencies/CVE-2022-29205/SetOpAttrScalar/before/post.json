[
    {
        "line": 5,
        "fullcodeline": "if (type == TF_ATTR_STRING) {"
    },
    {
        "line": 8,
        "fullcodeline": "TFE_OpSetAttrString(op, key, value.data(), value.size());"
    },
    {
        "line": 7,
        "fullcodeline": "if (!ParseStringValue(key, py_value, status, &value)) return false;"
    },
    {
        "line": 9,
        "fullcodeline": "} else if (type == TF_ATTR_INT) {"
    },
    {
        "line": 12,
        "fullcodeline": "TFE_OpSetAttrInt(op, key, value);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!ParseInt64Value(key, py_value, status, &value)) return false;"
    },
    {
        "line": 16,
        "fullcodeline": "if (attr_list_sizes != nullptr) (*attr_list_sizes)[key] = value;"
    },
    {
        "line": 17,
        "fullcodeline": "} else if (type == TF_ATTR_FLOAT) {"
    },
    {
        "line": 20,
        "fullcodeline": "TFE_OpSetAttrFloat(op, key, value);"
    },
    {
        "line": 19,
        "fullcodeline": "if (!ParseFloatValue(key, py_value, status, &value)) return false;"
    },
    {
        "line": 21,
        "fullcodeline": "} else if (type == TF_ATTR_BOOL) {"
    },
    {
        "line": 24,
        "fullcodeline": "TFE_OpSetAttrBool(op, key, value);"
    },
    {
        "line": 23,
        "fullcodeline": "if (!ParseBoolValue(key, py_value, status, &value)) return false;"
    },
    {
        "line": 25,
        "fullcodeline": "} else if (type == TF_ATTR_TYPE) {"
    },
    {
        "line": 28,
        "fullcodeline": "TFE_OpSetAttrType(op, key, static_cast<TF_DataType>(value));"
    },
    {
        "line": 27,
        "fullcodeline": "if (!ParseTypeValue(key, py_value, status, &value)) return false;"
    },
    {
        "line": 29,
        "fullcodeline": "} else if (type == TF_ATTR_SHAPE) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (py_value == Py_None) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (!status->status.ok()) return false;"
    },
    {
        "line": 31,
        "fullcodeline": "TFE_OpSetAttrShape(op, key, nullptr, -1, status);"
    },
    {
        "line": 60,
        "fullcodeline": "} else if (type == TF_ATTR_FUNC) {"
    },
    {
        "line": 41,
        "fullcodeline": "const auto num_dims = TensorShapeNumDims(py_value);"
    },
    {
        "line": 46,
        "fullcodeline": "std::unique_ptr<int64_t[]> dims(new int64_t[num_dims]);"
    },
    {
        "line": 57,
        "fullcodeline": "TFE_OpSetAttrShape(op, key, dims.get(), num_dims, status);"
    },
    {
        "line": 85,
        "fullcodeline": "TF_SetStatus(status, TF_OK, \"\");"
    },
    {
        "line": 86,
        "fullcodeline": "TFE_OpSetAttrFunctionName(op, key, func_name.data(), func_name.size());"
    },
    {
        "line": 33,
        "fullcodeline": "if (!PySequence_Check(py_value)) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (num_dims == -1) {"
    },
    {
        "line": 47,
        "fullcodeline": "for (int i = 0; i < num_dims; ++i) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (!ParseStringValue(key, py_value, status, &func_name)) {"
    },
    {
        "line": 88,
        "fullcodeline": "TF_SetStatus("
    },
    {
        "line": 34,
        "fullcodeline": "TF_SetStatus(status, TF_INVALID_ARGUMENT,"
    },
    {
        "line": 43,
        "fullcodeline": "TFE_OpSetAttrShape(op, key, nullptr, -1, status);"
    },
    {
        "line": 48,
        "fullcodeline": "tensorflow::Safe_PyObjectPtr inner_py_value("
    },
    {
        "line": 71,
        "fullcodeline": "PyObject* name_attr = PyObject_GetAttrString(py_value, \"name\");"
    },
    {
        "line": 90,
        "fullcodeline": "tensorflow::strings::StrCat(\"Attr \", key, \" has unhandled type \", type)"
    },
    {
        "line": 35,
        "fullcodeline": "tensorflow::strings::StrCat("
    },
    {
        "line": 49,
        "fullcodeline": "PySequence_ITEM(py_value, i));"
    },
    {
        "line": 50,
        "fullcodeline": "if (inner_py_value.get() == Py_None) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (name_attr == nullptr ||"
    },
    {
        "line": 51,
        "fullcodeline": "dims[i] = -1;"
    },
    {
        "line": 73,
        "fullcodeline": "!ParseStringValue(key, name_attr, status, &func_name)) {"
    },
    {
        "line": 74,
        "fullcodeline": "TF_SetStatus("
    },
    {
        "line": 76,
        "fullcodeline": "tensorflow::strings::StrCat("
    },
    {
        "line": 52,
        "fullcodeline": "} else if (!ParseDimensionValue(key, inner_py_value.get(), status,"
    }
]