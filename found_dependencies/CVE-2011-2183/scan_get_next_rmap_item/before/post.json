[
    {
        "line": 36,
        "fullcodeline": "mm = slot->mm;"
    },
    {
        "line": 37,
        "fullcodeline": "down_read(&mm->mmap_sem);"
    },
    {
        "line": 89,
        "fullcodeline": "remove_trailing_rmap_items(slot, ksm_scan.rmap_list);"
    },
    {
        "line": 91,
        "fullcodeline": "spin_lock(&ksm_mmlist_lock);"
    },
    {
        "line": 118,
        "fullcodeline": "slot = ksm_scan.mm_slot;"
    },
    {
        "line": 12,
        "fullcodeline": "if (slot == &ksm_mm_head) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (ksm_test_exit(mm))"
    },
    {
        "line": 43,
        "fullcodeline": "for (; vma; vma = vma->vm_next) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (ksm_test_exit(mm)) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (ksm_scan.address == 0) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (slot != &ksm_mm_head)"
    },
    {
        "line": 23,
        "fullcodeline": "lru_add_drain_all();"
    },
    {
        "line": 25,
        "fullcodeline": "root_unstable_tree = RB_ROOT;"
    },
    {
        "line": 27,
        "fullcodeline": "spin_lock(&ksm_mmlist_lock);"
    },
    {
        "line": 29,
        "fullcodeline": "ksm_scan.mm_slot = slot;"
    },
    {
        "line": 30,
        "fullcodeline": "spin_unlock(&ksm_mmlist_lock);"
    },
    {
        "line": 32,
        "fullcodeline": "ksm_scan.address = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "ksm_scan.rmap_list = &slot->rmap_list;"
    },
    {
        "line": 39,
        "fullcodeline": "vma = NULL;"
    },
    {
        "line": 82,
        "fullcodeline": "ksm_scan.address = 0;"
    },
    {
        "line": 83,
        "fullcodeline": "ksm_scan.rmap_list = &slot->rmap_list;"
    },
    {
        "line": 104,
        "fullcodeline": "hlist_del(&slot->link);"
    },
    {
        "line": 105,
        "fullcodeline": "list_del(&slot->mm_list);"
    },
    {
        "line": 106,
        "fullcodeline": "spin_unlock(&ksm_mmlist_lock);"
    },
    {
        "line": 108,
        "fullcodeline": "free_mm_slot(slot);"
    },
    {
        "line": 109,
        "fullcodeline": "clear_bit(MMF_VM_MERGEABLE, &mm->flags);"
    },
    {
        "line": 110,
        "fullcodeline": "up_read(&mm->mmap_sem);"
    },
    {
        "line": 111,
        "fullcodeline": "mmdrop(mm);"
    },
    {
        "line": 41,
        "fullcodeline": "vma = find_vma(mm, ksm_scan.address);"
    },
    {
        "line": 44,
        "fullcodeline": "if (!(vma->vm_flags & VM_MERGEABLE))"
    },
    {
        "line": 46,
        "fullcodeline": "if (ksm_scan.address < vma->vm_start)"
    },
    {
        "line": 48,
        "fullcodeline": "if (!vma->anon_vma)"
    },
    {
        "line": 51,
        "fullcodeline": "while (ksm_scan.address < vma->vm_end) {"
    },
    {
        "line": 113,
        "fullcodeline": "spin_unlock(&ksm_mmlist_lock);"
    },
    {
        "line": 114,
        "fullcodeline": "up_read(&mm->mmap_sem);"
    },
    {
        "line": 47,
        "fullcodeline": "ksm_scan.address = vma->vm_start;"
    },
    {
        "line": 49,
        "fullcodeline": "ksm_scan.address = vma->vm_end;"
    },
    {
        "line": 54,
        "fullcodeline": "*page = follow_page(vma, ksm_scan.address, FOLL_GET);"
    },
    {
        "line": 75,
        "fullcodeline": "put_page(*page);"
    },
    {
        "line": 76,
        "fullcodeline": "ksm_scan.address += PAGE_SIZE;"
    },
    {
        "line": 77,
        "fullcodeline": "cond_resched();"
    },
    {
        "line": 52,
        "fullcodeline": "if (ksm_test_exit(mm))"
    },
    {
        "line": 55,
        "fullcodeline": "if (IS_ERR_OR_NULL(*page)) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (PageAnon(*page) ||"
    },
    {
        "line": 56,
        "fullcodeline": "ksm_scan.address += PAGE_SIZE;"
    },
    {
        "line": 57,
        "fullcodeline": "cond_resched();"
    },
    {
        "line": 61,
        "fullcodeline": "page_trans_compound_anon(*page)) {"
    },
    {
        "line": 62,
        "fullcodeline": "flush_anon_page(vma, *page, ksm_scan.address);"
    },
    {
        "line": 63,
        "fullcodeline": "flush_dcache_page(*page);"
    },
    {
        "line": 64,
        "fullcodeline": "rmap_item = get_next_rmap_item(slot,"
    },
    {
        "line": 72,
        "fullcodeline": "up_read(&mm->mmap_sem);"
    },
    {
        "line": 67,
        "fullcodeline": "ksm_scan.rmap_list ="
    },
    {
        "line": 69,
        "fullcodeline": "ksm_scan.address += PAGE_SIZE;"
    },
    {
        "line": 71,
        "fullcodeline": "put_page(*page);"
    }
]