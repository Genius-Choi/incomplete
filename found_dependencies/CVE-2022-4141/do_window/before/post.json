[
    {
        "line": 9,
        "fullcodeline": "linenr_T    lnum = -1;"
    },
    {
        "line": 14,
        "fullcodeline": "char_u\tcbuf[40];"
    },
    {
        "line": 28,
        "fullcodeline": "Prenum1 = Prenum == 0 ? 1 : Prenum;"
    },
    {
        "line": 36,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 37,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 45,
        "fullcodeline": "(void)win_split((int)Prenum, 0);"
    },
    {
        "line": 51,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 52,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 60,
        "fullcodeline": "(void)win_split((int)Prenum, WSP_VERT);"
    },
    {
        "line": 66,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 67,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 88,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 89,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 100,
        "fullcodeline": "STRCAT(cbuf, \"new\");"
    },
    {
        "line": 101,
        "fullcodeline": "do_cmdline_cmd(cbuf);"
    },
    {
        "line": 107,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 108,
        "fullcodeline": "cmd_with_count(\"quit\", cbuf, sizeof(cbuf), Prenum);"
    },
    {
        "line": 109,
        "fullcodeline": "do_cmdline_cmd(cbuf);"
    },
    {
        "line": 115,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 116,
        "fullcodeline": "cmd_with_count(\"close\", cbuf, sizeof(cbuf), Prenum);"
    },
    {
        "line": 117,
        "fullcodeline": "do_cmdline_cmd(cbuf);"
    },
    {
        "line": 144,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 145,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 146,
        "fullcodeline": "cmd_with_count(\"only\", cbuf, sizeof(cbuf), Prenum);"
    },
    {
        "line": 147,
        "fullcodeline": "do_cmdline_cmd(cbuf);"
    },
    {
        "line": 155,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 193,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 194,
        "fullcodeline": "win_goto_ver(FALSE, Prenum1);"
    },
    {
        "line": 201,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 202,
        "fullcodeline": "win_goto_ver(TRUE, Prenum1);"
    },
    {
        "line": 210,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 211,
        "fullcodeline": "win_goto_hor(TRUE, Prenum1);"
    },
    {
        "line": 218,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 219,
        "fullcodeline": "win_goto_hor(FALSE, Prenum1);"
    },
    {
        "line": 224,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 251,
        "fullcodeline": "win_goto(firstwin);"
    },
    {
        "line": 257,
        "fullcodeline": "win_goto(lastwin);"
    },
    {
        "line": 272,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 273,
        "fullcodeline": "win_exchange(Prenum);"
    },
    {
        "line": 279,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 280,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 281,
        "fullcodeline": "win_rotate(FALSE, (int)Prenum1);    // downwards"
    },
    {
        "line": 286,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 287,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 288,
        "fullcodeline": "win_rotate(TRUE, (int)Prenum1);\t    // upwards"
    },
    {
        "line": 296,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 297,
        "fullcodeline": "win_totop((int)Prenum,"
    },
    {
        "line": 319,
        "fullcodeline": "win_setheight(curwin->w_height + (int)Prenum1);"
    },
    {
        "line": 327,
        "fullcodeline": "win_setheight(curwin->w_height - (int)Prenum1);"
    },
    {
        "line": 336,
        "fullcodeline": "win_setheight(Prenum ? (int)Prenum : 9999);"
    },
    {
        "line": 344,
        "fullcodeline": "win_setwidth(curwin->w_width + (int)Prenum1);"
    },
    {
        "line": 352,
        "fullcodeline": "win_setwidth(curwin->w_width - (int)Prenum1);"
    },
    {
        "line": 360,
        "fullcodeline": "win_setwidth(Prenum != 0 ? (int)Prenum : 9999);"
    },
    {
        "line": 375,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 388,
        "fullcodeline": "do_nv_ident(Ctrl_RSB, NUL);"
    },
    {
        "line": 396,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 398,
        "fullcodeline": "ptr = grab_file_name(Prenum1, &lnum);"
    },
    {
        "line": 467,
        "fullcodeline": "CHECK_CMDWIN;"
    },
    {
        "line": 471,
        "fullcodeline": "++no_mapping;"
    },
    {
        "line": 472,
        "fullcodeline": "++allow_keys;   // no mapping for xchar, but allow key codes"
    },
    {
        "line": 475,
        "fullcodeline": "LANGMAP_ADJUST(xchar, TRUE);"
    },
    {
        "line": 476,
        "fullcodeline": "--no_mapping;"
    },
    {
        "line": 477,
        "fullcodeline": "--allow_keys;"
    },
    {
        "line": 478,
        "fullcodeline": "(void)add_to_showcmd(xchar);"
    },
    {
        "line": 529,
        "fullcodeline": "default:\tbeep_flush();"
    },
    {
        "line": 40,
        "fullcodeline": "if (bt_quickfix(curbuf))"
    },
    {
        "line": 55,
        "fullcodeline": "if (bt_quickfix(curbuf))"
    },
    {
        "line": 69,
        "fullcodeline": "if (buflist_findnr(Prenum == 0"
    },
    {
        "line": 79,
        "fullcodeline": "if (!curbuf_locked() && win_split(0, 0) == OK)"
    },
    {
        "line": 156,
        "fullcodeline": "if (ONE_WINDOW && Prenum != 1)\t// just one window"
    },
    {
        "line": 225,
        "fullcodeline": "if (one_window())"
    },
    {
        "line": 263,
        "fullcodeline": "if (!win_valid(prevwin))"
    },
    {
        "line": 298,
        "fullcodeline": "((nchar == 'H' || nchar == 'L') ? WSP_VERT : 0)"
    },
    {
        "line": 305,
        "fullcodeline": "int mod = cmdmod.cmod_split & (WSP_VERT | WSP_HOR);"
    },
    {
        "line": 309,
        "fullcodeline": "win_equal(NULL, FALSE,"
    },
    {
        "line": 399,
        "fullcodeline": "if (ptr != NULL)"
    },
    {
        "line": 473,
        "fullcodeline": "if (xchar == NUL)"
    },
    {
        "line": 80,
        "fullcodeline": "(void)buflist_getfile("
    },
    {
        "line": 93,
        "fullcodeline": "vim_snprintf((char *)cbuf, sizeof(cbuf) - 5, \"%ld\", Prenum);"
    },
    {
        "line": 157,
        "fullcodeline": "beep_flush();"
    },
    {
        "line": 226,
        "fullcodeline": "msg(_(m_onlyone));"
    },
    {
        "line": 264,
        "fullcodeline": "beep_flush();"
    },
    {
        "line": 299,
        "fullcodeline": "| ((nchar == 'H' || nchar == 'K') ? WSP_TOP : WSP_BOT));"
    },
    {
        "line": 310,
        "fullcodeline": "mod == WSP_VERT ? 'v' : mod == WSP_HOR ? 'h' : 'b');"
    },
    {
        "line": 378,
        "fullcodeline": "postponed_split = Prenum;"
    },
    {
        "line": 401,
        "fullcodeline": "tabpage_T\t*oldtab = curtab;"
    },
    {
        "line": 402,
        "fullcodeline": "win_T\t*oldwin = curwin;"
    },
    {
        "line": 406,
        "fullcodeline": "setpcmark();"
    },
    {
        "line": 425,
        "fullcodeline": "vim_free(ptr);"
    },
    {
        "line": 474,
        "fullcodeline": "xchar = plain_vgetc();"
    },
    {
        "line": 501,
        "fullcodeline": "do_nv_ident('g', xchar);"
    },
    {
        "line": 506,
        "fullcodeline": "cmdmod.cmod_tab = tabpage_index(curtab) + 1;"
    },
    {
        "line": 507,
        "fullcodeline": "nchar = xchar;"
    },
    {
        "line": 511,
        "fullcodeline": "goto_tabpage((int)Prenum);"
    },
    {
        "line": 515,
        "fullcodeline": "goto_tabpage(-(int)Prenum1);"
    },
    {
        "line": 524,
        "fullcodeline": "beep_flush();"
    },
    {
        "line": 72,
        "fullcodeline": "if (Prenum == 0)"
    },
    {
        "line": 95,
        "fullcodeline": "cbuf[0] = NUL;"
    },
    {
        "line": 185,
        "fullcodeline": "win_goto(wp);"
    },
    {
        "line": 229,
        "fullcodeline": "tabpage_T\t*oldtab = curtab;"
    },
    {
        "line": 234,
        "fullcodeline": "wp = curwin;"
    },
    {
        "line": 266,
        "fullcodeline": "win_goto(prevwin);"
    },
    {
        "line": 380,
        "fullcodeline": "postponed_split = -1;"
    },
    {
        "line": 407,
        "fullcodeline": "if (win_split(0, 0) == OK)"
    },
    {
        "line": 519,
        "fullcodeline": "if (goto_tabpage_lastused() == FAIL)"
    },
    {
        "line": 73,
        "fullcodeline": "emsg(_(e_no_alternate_file));"
    },
    {
        "line": 81,
        "fullcodeline": "Prenum == 0 ? curwin->w_alt_fnum : Prenum,"
    },
    {
        "line": 82,
        "fullcodeline": "(linenr_T)0, GETF_ALT, FALSE);"
    },
    {
        "line": 235,
        "fullcodeline": "if (win_new_tabpage((int)Prenum) == OK"
    },
    {
        "line": 409,
        "fullcodeline": "RESET_BINDING(curwin);"
    },
    {
        "line": 495,
        "fullcodeline": "postponed_split = Prenum;"
    },
    {
        "line": 520,
        "fullcodeline": "beep_flush();"
    },
    {
        "line": 75,
        "fullcodeline": "semsg(_(e_buffer_nr_not_found), Prenum);"
    },
    {
        "line": 236,
        "fullcodeline": "&& valid_tabpage(oldtab))"
    },
    {
        "line": 238,
        "fullcodeline": "newtab = curtab;"
    },
    {
        "line": 239,
        "fullcodeline": "goto_tabpage_tp(oldtab, TRUE, TRUE);"
    },
    {
        "line": 410,
        "fullcodeline": "if (do_ecmd(0, ptr, NULL, NULL, ECMD_LASTL,"
    },
    {
        "line": 497,
        "fullcodeline": "postponed_split = -1;"
    },
    {
        "line": 162,
        "fullcodeline": "for (wp = firstwin; --Prenum > 0; )"
    },
    {
        "line": 240,
        "fullcodeline": "if (curwin == wp)"
    },
    {
        "line": 242,
        "fullcodeline": "if (valid_tabpage(newtab))"
    },
    {
        "line": 415,
        "fullcodeline": "win_close(curwin, FALSE);"
    },
    {
        "line": 416,
        "fullcodeline": "goto_tabpage_win(oldtab, oldwin);"
    },
    {
        "line": 172,
        "fullcodeline": "if (nchar == 'W')\t    // go to previous window"
    },
    {
        "line": 241,
        "fullcodeline": "win_close(curwin, FALSE);"
    },
    {
        "line": 243,
        "fullcodeline": "goto_tabpage_tp(newtab, TRUE, TRUE);"
    },
    {
        "line": 164,
        "fullcodeline": "if (wp->w_next == NULL)"
    },
    {
        "line": 418,
        "fullcodeline": "else if (nchar == 'F' && lnum >= 0)"
    },
    {
        "line": 175,
        "fullcodeline": "if (wp == NULL)"
    },
    {
        "line": 420,
        "fullcodeline": "curwin->w_cursor.lnum = lnum;"
    },
    {
        "line": 421,
        "fullcodeline": "check_cursor_lnum();"
    },
    {
        "line": 422,
        "fullcodeline": "beginline(BL_SOL | BL_FIX);"
    },
    {
        "line": 167,
        "fullcodeline": "wp = wp->w_next;"
    },
    {
        "line": 176,
        "fullcodeline": "wp = lastwin;\t    // wrap around"
    },
    {
        "line": 181,
        "fullcodeline": "if (wp == NULL)"
    },
    {
        "line": 182,
        "fullcodeline": "wp = firstwin;\t    // wrap around"
    }
]