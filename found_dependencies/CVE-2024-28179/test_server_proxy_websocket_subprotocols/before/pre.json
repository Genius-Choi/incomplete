[
    {
        "line": 9,
        "fullcodeline": "url = f\"ws://{LOCALHOST}:{PORT}/python-websocket/subprotocolsocket\""
    },
    {
        "line": 10,
        "fullcodeline": "conn = await websocket_connect(url, subprotocols=client_requested)"
    },
    {
        "line": 11,
        "fullcodeline": "await conn.write_message(\"Hello, world!\")"
    },
    {
        "line": 19,
        "fullcodeline": "msg = await conn.read_message()"
    },
    {
        "line": 20,
        "fullcodeline": "info = json.loads(msg)"
    },
    {
        "line": 22,
        "fullcodeline": "assert info[\"requested_subprotocols\"] == server_received"
    },
    {
        "line": 23,
        "fullcodeline": "assert info[\"selected_subprotocol\"] == server_responded"
    },
    {
        "line": 24,
        "fullcodeline": "assert conn.selected_subprotocol == proxy_responded"
    },
    {
        "line": 8,
        "fullcodeline": "PORT, TOKEN = a_server_port_and_token"
    },
    {
        "line": 27,
        "fullcodeline": "if proxy_responded is None:"
    },
    {
        "line": 15,
        "fullcodeline": "assert \"Sec-Websocket-Protocol\" in conn.request.headers"
    },
    {
        "line": 17,
        "fullcodeline": "assert \"Sec-Websocket-Protocol\" not in conn.request.headers"
    },
    {
        "line": 28,
        "fullcodeline": "assert \"Sec-Websocket-Protocol\" not in conn.headers"
    },
    {
        "line": 30,
        "fullcodeline": "assert \"Sec-Websocket-Protocol\" in conn.headers"
    }
]