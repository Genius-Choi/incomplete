[
    {
        "line": 5,
        "fullcodeline": "uint32_t log2_chroma_wh = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "const enum AVPixelFormat *possible_fmts = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "int possible_fmts_nb = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "s->avctx->profile = bytestream2_get_be16u(&s->g); // Rsiz"
    },
    {
        "line": 13,
        "fullcodeline": "s->width          = bytestream2_get_be32u(&s->g); // Width"
    },
    {
        "line": 14,
        "fullcodeline": "s->height         = bytestream2_get_be32u(&s->g); // Height"
    },
    {
        "line": 15,
        "fullcodeline": "s->image_offset_x = bytestream2_get_be32u(&s->g); // X0Siz"
    },
    {
        "line": 16,
        "fullcodeline": "s->image_offset_y = bytestream2_get_be32u(&s->g); // Y0Siz"
    },
    {
        "line": 17,
        "fullcodeline": "s->tile_width     = bytestream2_get_be32u(&s->g); // XTSiz"
    },
    {
        "line": 18,
        "fullcodeline": "s->tile_height    = bytestream2_get_be32u(&s->g); // YTSiz"
    },
    {
        "line": 19,
        "fullcodeline": "s->tile_offset_x  = bytestream2_get_be32u(&s->g); // XT0Siz"
    },
    {
        "line": 20,
        "fullcodeline": "s->tile_offset_y  = bytestream2_get_be32u(&s->g); // YT0Siz"
    },
    {
        "line": 21,
        "fullcodeline": "ncomponents       = bytestream2_get_be16u(&s->g); // CSiz"
    },
    {
        "line": 40,
        "fullcodeline": "s->ncomponents = ncomponents;"
    },
    {
        "line": 66,
        "fullcodeline": "s->numXtiles = ff_jpeg2000_ceildiv(s->width  - s->tile_offset_x, s->tile_width);"
    },
    {
        "line": 67,
        "fullcodeline": "s->numYtiles = ff_jpeg2000_ceildiv(s->height - s->tile_offset_y, s->tile_height);"
    },
    {
        "line": 74,
        "fullcodeline": "s->tile = av_mallocz_array(s->numXtiles * s->numYtiles, sizeof(*s->tile));"
    },
    {
        "line": 89,
        "fullcodeline": "s->avctx->width  = ff_jpeg2000_ceildivpow2(s->width  - s->image_offset_x,"
    },
    {
        "line": 91,
        "fullcodeline": "s->avctx->height = ff_jpeg2000_ceildivpow2(s->height - s->image_offset_y,"
    },
    {
        "line": 9,
        "fullcodeline": "if (bytestream2_get_bytes_left(&s->g) < 36)"
    },
    {
        "line": 23,
        "fullcodeline": "if (s->image_offset_x || s->image_offset_y) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (ncomponents <= 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (ncomponents > 4) {"
    },
    {
        "line": 51,
        "fullcodeline": "for (i = 0; i < s->ncomponents; i++) { // Ssiz_i XRsiz_i, YRsiz_i"
    },
    {
        "line": 75,
        "fullcodeline": "if (!s->tile) {"
    },
    {
        "line": 80,
        "fullcodeline": "for (i = 0; i < s->numXtiles * s->numYtiles; i++) {"
    },
    {
        "line": 118,
        "fullcodeline": "for (i = 0; i < possible_fmts_nb; ++i) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (s->avctx->pix_fmt == AV_PIX_FMT_NONE) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (s->tile_width <= 0 || s->tile_height <= 0) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (bytestream2_get_bytes_left(&s->g) < 3 * s->ncomponents)"
    },
    {
        "line": 52,
        "fullcodeline": "uint8_t x    = bytestream2_get_byteu(&s->g);"
    },
    {
        "line": 53,
        "fullcodeline": "s->cbps[i]   = (x & 0x7f) + 1;"
    },
    {
        "line": 54,
        "fullcodeline": "s->precision = FFMAX(s->cbps[i], s->precision);"
    },
    {
        "line": 56,
        "fullcodeline": "s->cdx[i]    = bytestream2_get_byteu(&s->g);"
    },
    {
        "line": 57,
        "fullcodeline": "s->cdy[i]    = bytestream2_get_byteu(&s->g);"
    },
    {
        "line": 63,
        "fullcodeline": "log2_chroma_wh |= s->cdy[i] >> 1 << i * 4 | s->cdx[i] >> 1 << i * 4 + 2;"
    },
    {
        "line": 69,
        "fullcodeline": "if (s->numXtiles * (uint64_t)s->numYtiles > INT_MAX/sizeof(*s->tile)) {"
    },
    {
        "line": 81,
        "fullcodeline": "Jpeg2000Tile *tile = s->tile + i;"
    },
    {
        "line": 83,
        "fullcodeline": "tile->comp = av_mallocz(s->ncomponents * sizeof(*tile->comp));"
    },
    {
        "line": 94,
        "fullcodeline": "if (s->avctx->profile == FF_PROFILE_JPEG2000_DCINEMA_2K ||"
    },
    {
        "line": 95,
        "fullcodeline": "s->avctx->profile == FF_PROFILE_JPEG2000_DCINEMA_4K) {"
    },
    {
        "line": 96,
        "fullcodeline": "possible_fmts = xyz_pix_fmts;"
    },
    {
        "line": 97,
        "fullcodeline": "possible_fmts_nb = FF_ARRAY_ELEMS(xyz_pix_fmts);"
    },
    {
        "line": 125,
        "fullcodeline": "av_log(s->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 55,
        "fullcodeline": "s->sgnd[i]   = !!(x & 0x80);"
    },
    {
        "line": 70,
        "fullcodeline": "s->numXtiles = s->numYtiles = 0;"
    },
    {
        "line": 71,
        "fullcodeline": "return AVERROR(EINVAL);"
    },
    {
        "line": 76,
        "fullcodeline": "s->numXtiles = s->numYtiles = 0;"
    },
    {
        "line": 77,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 119,
        "fullcodeline": "if (pix_fmt_match(possible_fmts[i], ncomponents, s->precision, log2_chroma_wh, s->pal8)) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (   !s->cdx[i] || s->cdx[i] == 3 || s->cdx[i] > 4"
    },
    {
        "line": 59,
        "fullcodeline": "|| !s->cdy[i] || s->cdy[i] == 3 || s->cdy[i] > 4) {"
    },
    {
        "line": 120,
        "fullcodeline": "s->avctx->pix_fmt = possible_fmts[i];"
    },
    {
        "line": 130,
        "fullcodeline": "ncomponents > 2 ? s->cdx[1] : 0,"
    },
    {
        "line": 131,
        "fullcodeline": "ncomponents > 2 ? s->cdy[1] : 0,"
    },
    {
        "line": 132,
        "fullcodeline": "ncomponents > 2 ? s->cdx[2] : 0,"
    },
    {
        "line": 133,
        "fullcodeline": "ncomponents > 2 ? s->cdy[2] : 0);"
    },
    {
        "line": 85,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 101,
        "fullcodeline": "possible_fmts = rgb_pix_fmts;"
    },
    {
        "line": 102,
        "fullcodeline": "possible_fmts_nb = FF_ARRAY_ELEMS(rgb_pix_fmts);"
    },
    {
        "line": 105,
        "fullcodeline": "possible_fmts = gray_pix_fmts;"
    },
    {
        "line": 106,
        "fullcodeline": "possible_fmts_nb = FF_ARRAY_ELEMS(gray_pix_fmts);"
    },
    {
        "line": 109,
        "fullcodeline": "possible_fmts = yuv_pix_fmts;"
    },
    {
        "line": 110,
        "fullcodeline": "possible_fmts_nb = FF_ARRAY_ELEMS(yuv_pix_fmts);"
    },
    {
        "line": 113,
        "fullcodeline": "possible_fmts = all_pix_fmts;"
    },
    {
        "line": 114,
        "fullcodeline": "possible_fmts_nb = FF_ARRAY_ELEMS(all_pix_fmts);"
    }
]