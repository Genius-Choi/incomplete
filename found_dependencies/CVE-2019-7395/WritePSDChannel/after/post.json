[
    {
        "line": 46,
        "fullcodeline": "count=0;"
    },
    {
        "line": 54,
        "fullcodeline": "monochrome=IsImageMonochrome(image) && (image->depth == 1) ?"
    },
    {
        "line": 56,
        "fullcodeline": "quantum_info=AcquireQuantumInfo(image_info,next_image);"
    },
    {
        "line": 59,
        "fullcodeline": "pixels=(unsigned char *) GetQuantumPixels(quantum_info);"
    },
    {
        "line": 130,
        "fullcodeline": "quantum_info=DestroyQuantumInfo(quantum_info);"
    },
    {
        "line": 47,
        "fullcodeline": "if (separate != MagickFalse)"
    },
    {
        "line": 52,
        "fullcodeline": "if (next_image->depth > 8)"
    },
    {
        "line": 57,
        "fullcodeline": "if (quantum_info == (QuantumInfo *) NULL)"
    },
    {
        "line": 84,
        "fullcodeline": "for (y=0; y < (ssize_t) next_image->rows; y++)"
    },
    {
        "line": 49,
        "fullcodeline": "size_offset=TellBlob(image)+2;"
    },
    {
        "line": 50,
        "fullcodeline": "count+=WriteCompressionStart(psd_info,image,next_image,compression,1);"
    },
    {
        "line": 53,
        "fullcodeline": "next_image->depth=16;"
    },
    {
        "line": 86,
        "fullcodeline": "p=GetVirtualPixels(next_image,0,y,next_image->columns,1,exception);"
    },
    {
        "line": 89,
        "fullcodeline": "length=ExportQuantumPixels(next_image,(CacheView *) NULL,quantum_info,"
    },
    {
        "line": 87,
        "fullcodeline": "if (p == (const Quantum *) NULL)"
    },
    {
        "line": 91,
        "fullcodeline": "if (monochrome != MagickFalse)"
    },
    {
        "line": 94,
        "fullcodeline": "if (compression == RLECompression)"
    },
    {
        "line": 96,
        "fullcodeline": "length=PSDPackbitsEncodeImage(image,length,pixels,compact_pixels,"
    },
    {
        "line": 98,
        "fullcodeline": "count+=WriteBlob(image,length,compact_pixels);"
    },
    {
        "line": 99,
        "fullcodeline": "size_offset+=WritePSDOffset(psd_info,image,length,size_offset);"
    },
    {
        "line": 92,
        "fullcodeline": "for (i=0; i < (ssize_t) length; i++)"
    },
    {
        "line": 93,
        "fullcodeline": "pixels[i]=(~pixels[i]);"
    },
    {
        "line": 120,
        "fullcodeline": "count+=WriteBlob(image,length,pixels);"
    }
]