[
    {
        "line": 54,
        "fullcodeline": "flatpak_exports_append_bwrap_args (exports, bwrap);"
    },
    {
        "line": 12,
        "fullcodeline": "if (app_id_dir != NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "if (!home_access)"
    },
    {
        "line": 33,
        "fullcodeline": "if (app_id_dir != NULL)"
    },
    {
        "line": 92,
        "fullcodeline": "if (home_access && app_id_dir != NULL)"
    },
    {
        "line": 13,
        "fullcodeline": "flatpak_context_apply_env_appid (bwrap, app_id_dir);"
    },
    {
        "line": 19,
        "fullcodeline": "g_hash_table_iter_init (&iter, context->persistent);"
    },
    {
        "line": 35,
        "fullcodeline": "g_autofree char *user_runtime_dir = flatpak_get_real_xdg_runtime_dir ();"
    },
    {
        "line": 36,
        "fullcodeline": "g_autofree char *run_user_app_dst = g_strdup_printf (\"/run/flatpak/app/%s\", app_id);"
    },
    {
        "line": 37,
        "fullcodeline": "g_autofree char *run_user_app_src = g_build_filename (user_runtime_dir, \"app\", app_id, NULL);"
    },
    {
        "line": 49,
        "fullcodeline": "flatpak_bwrap_add_runtime_dir_member (bwrap, \"app\");"
    },
    {
        "line": 64,
        "fullcodeline": "g_hash_table_iter_init (&iter, context->filesystems);"
    },
    {
        "line": 94,
        "fullcodeline": "g_autofree char *src_path = g_build_filename (g_get_user_config_dir (),"
    },
    {
        "line": 97,
        "fullcodeline": "g_autofree char *path = g_build_filename (flatpak_file_get_path_cached (app_id_dir),"
    },
    {
        "line": 20,
        "fullcodeline": "while (g_hash_table_iter_next (&iter, &key, NULL))"
    },
    {
        "line": 39,
        "fullcodeline": "if (glnx_shutil_mkdir_p_at (AT_FDCWD,"
    },
    {
        "line": 65,
        "fullcodeline": "while (g_hash_table_iter_next (&iter, &key, &value))"
    },
    {
        "line": 99,
        "fullcodeline": "if (g_file_test (src_path, G_FILE_TEST_EXISTS))"
    },
    {
        "line": 22,
        "fullcodeline": "const char *persist = key;"
    },
    {
        "line": 23,
        "fullcodeline": "g_autofree char *src = g_build_filename (g_get_home_dir (), \".var/app\", app_id, persist, NULL);"
    },
    {
        "line": 24,
        "fullcodeline": "g_autofree char *dest = g_build_filename (g_get_home_dir (), persist, NULL);"
    },
    {
        "line": 29,
        "fullcodeline": "flatpak_bwrap_add_bind_arg (bwrap, \"--bind\", src, dest);"
    },
    {
        "line": 44,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 67,
        "fullcodeline": "const char *filesystem = key;"
    },
    {
        "line": 68,
        "fullcodeline": "FlatpakFilesystemMode mode = GPOINTER_TO_INT (value);"
    },
    {
        "line": 69,
        "fullcodeline": "g_autofree char *xdg_path = NULL;"
    },
    {
        "line": 72,
        "fullcodeline": "xdg_path = get_xdg_dir_from_string (filesystem, &rest, &where);"
    },
    {
        "line": 100,
        "fullcodeline": "flatpak_bwrap_add_bind_arg (bwrap, \"--ro-bind\", src_path, path);"
    },
    {
        "line": 102,
        "fullcodeline": "else if (xdg_dirs_conf != NULL && xdg_dirs_conf[0] != '\\0' && app_id_dir != NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "if (g_mkdir_with_parents (src, 0755) != 0)"
    },
    {
        "line": 74,
        "fullcodeline": "if (xdg_path != NULL && *rest != 0 &&"
    },
    {
        "line": 104,
        "fullcodeline": "g_autofree char *path ="
    },
    {
        "line": 108,
        "fullcodeline": "flatpak_bwrap_add_args_data (bwrap, \"xdg-config-dirs\","
    },
    {
        "line": 27,
        "fullcodeline": "g_info (\"Unable to create directory %s\", src);"
    },
    {
        "line": 75,
        "fullcodeline": "mode >= FLATPAK_FILESYSTEM_MODE_READ_ONLY)"
    },
    {
        "line": 77,
        "fullcodeline": "g_autoptr(GFile) app_version = g_file_get_child (app_id_dir, where);"
    },
    {
        "line": 78,
        "fullcodeline": "g_autoptr(GFile) app_version_subdir = g_file_resolve_relative_path (app_version, rest);"
    },
    {
        "line": 105,
        "fullcodeline": "g_build_filename (flatpak_file_get_path_cached (app_id_dir),"
    },
    {
        "line": 109,
        "fullcodeline": "xdg_dirs_conf, strlen (xdg_dirs_conf), path, NULL);"
    },
    {
        "line": 80,
        "fullcodeline": "if (g_file_test (xdg_path, G_FILE_TEST_IS_DIR) ||"
    },
    {
        "line": 81,
        "fullcodeline": "g_file_test (xdg_path, G_FILE_TEST_IS_REGULAR))"
    },
    {
        "line": 83,
        "fullcodeline": "g_autofree char *xdg_path_in_app = g_file_get_path (app_version_subdir);"
    },
    {
        "line": 84,
        "fullcodeline": "flatpak_bwrap_add_bind_arg (bwrap,"
    },
    {
        "line": 85,
        "fullcodeline": "mode == FLATPAK_FILESYSTEM_MODE_READ_ONLY ? \"--ro-bind\" : \"--bind\","
    }
]