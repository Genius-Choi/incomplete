[
    {
        "line": 2,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 6,
        "fullcodeline": "auth = nil"
    },
    {
        "line": 8,
        "fullcodeline": "if params[:check_auth_all] == '1'"
    },
    {
        "line": 47,
        "fullcodeline": "user = User.find(params[:id])"
    },
    {
        "line": 57,
        "fullcodeline": "user.update_attribute(:auth, auth)"
    },
    {
        "line": 16,
        "fullcodeline": "unless auth_selected.nil? or auth_selected.empty?"
    },
    {
        "line": 20,
        "fullcodeline": "if auth_selected.nil? or !auth_selected.include?(User::AUTH_USER)"
    },
    {
        "line": 49,
        "fullcodeline": "Log.add_error(request, evar)"
    },
    {
        "line": 54,
        "fullcodeline": "render(:text => t('msg.already_deleted', :name => User.model_name.human))"
    },
    {
        "line": 59,
        "fullcodeline": "if user.id == @login_user.id"
    },
    {
        "line": 63,
        "fullcodeline": "render(:text => '')"
    },
    {
        "line": 17,
        "fullcodeline": "auth = '|' + auth_selected.join('|') + '|'"
    },
    {
        "line": 22,
        "fullcodeline": "user_admin_err = false"
    },
    {
        "line": 60,
        "fullcodeline": "@login_user = user"
    },
    {
        "line": 26,
        "fullcodeline": "if user_admins.nil? or user_admins.empty?"
    },
    {
        "line": 24,
        "fullcodeline": "user_admins = User.where(\"auth like '%|#{User::AUTH_USER}|%' or auth='#{User::AUTH_ALL}'\").to_a"
    },
    {
        "line": 28,
        "fullcodeline": "user_admin_err = true"
    },
    {
        "line": 39,
        "fullcodeline": "render(:text => t('user.no_user_auth'))"
    },
    {
        "line": 30,
        "fullcodeline": "elsif user_admins.length == 1"
    },
    {
        "line": 33,
        "fullcodeline": "user_admin_err = true"
    },
    {
        "line": 32,
        "fullcodeline": "if user_admins.first.id.to_s == params[:id]"
    }
]