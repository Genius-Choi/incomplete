[
    {
        "line": 2,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 10,
        "fullcodeline": "all_addresses = Address.get_for(@login_user, book)"
    },
    {
        "line": 12,
        "fullcodeline": "address_names = []"
    },
    {
        "line": 19,
        "fullcodeline": "@imp_errs = {}"
    },
    {
        "line": 20,
        "fullcodeline": "count = -1  # 0 for Header-line"
    },
    {
        "line": 21,
        "fullcodeline": "addresses = []"
    },
    {
        "line": 23,
        "fullcodeline": "opt = {"
    },
    {
        "line": 27,
        "fullcodeline": "csv = file.read"
    },
    {
        "line": 34,
        "fullcodeline": "found_update = false"
    },
    {
        "line": 35,
        "fullcodeline": "err_col_names = nil"
    },
    {
        "line": 36,
        "fullcodeline": "col_idxs = []"
    },
    {
        "line": 38,
        "fullcodeline": "CSV.parse(csv, opt) do |row|"
    },
    {
        "line": 91,
        "fullcodeline": "count = 0"
    },
    {
        "line": 92,
        "fullcodeline": "@imp_cnt = 0"
    },
    {
        "line": 117,
        "fullcodeline": "del_cnt = 0"
    },
    {
        "line": 8,
        "fullcodeline": "book = Address::BOOK_PRIVATE unless @login_user.admin?(User::AUTH_ADDRESSBOOK)"
    },
    {
        "line": 13,
        "fullcodeline": "if (mode == 'add')"
    },
    {
        "line": 80,
        "fullcodeline": "if err_col_names.nil? or err_col_names.empty?"
    },
    {
        "line": 118,
        "fullcodeline": "if (@imp_errs.empty? and mode == 'update')"
    },
    {
        "line": 133,
        "fullcodeline": "render(:action => 'list')"
    },
    {
        "line": 14,
        "fullcodeline": "all_addresses.each do |address|"
    },
    {
        "line": 24,
        "fullcodeline": ":skip_blanks => true"
    },
    {
        "line": 29,
        "fullcodeline": "csv.encode!(Encoding::UTF_8, enc, {:invalid => :replace, :undef => :replace, :replace => ' '})"
    },
    {
        "line": 93,
        "fullcodeline": "if @imp_errs.empty?"
    },
    {
        "line": 94,
        "fullcodeline": "addresses.each do |address|"
    },
    {
        "line": 119,
        "fullcodeline": "all_addresses.each do |address|"
    },
    {
        "line": 125,
        "fullcodeline": "if @imp_errs.empty?"
    },
    {
        "line": 126,
        "fullcodeline": "flash[:notice] = t('address.imported', :count => addresses.length)"
    },
    {
        "line": 31,
        "fullcodeline": "Log.add_error(request, evar)"
    },
    {
        "line": 127,
        "fullcodeline": "if (del_cnt > 0)"
    },
    {
        "line": 82,
        "fullcodeline": "@imp_errs[0] = [t('address.nothing_to_import')]"
    },
    {
        "line": 128,
        "fullcodeline": "flash[:notice] << '<br/>' + t('address.deleted', :count => del_cnt)"
    },
    {
        "line": 84,
        "fullcodeline": "if (mode == 'update') and !found_update"
    },
    {
        "line": 85,
        "fullcodeline": "@imp_errs[0] = [t('address.nothing_to_update')]"
    }
]