[
    {
        "line": 2,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 6,
        "fullcodeline": "attachment = Attachment.find(params[:attachment_id])"
    },
    {
        "line": 9,
        "fullcodeline": "@item = Item.find(attachment.item_id)"
    },
    {
        "line": 24,
        "fullcodeline": "@item = Item.find(attachment.item_id)"
    },
    {
        "line": 25,
        "fullcodeline": "@item.update_attribute(:updated_at, Time.now)"
    },
    {
        "line": 27,
        "fullcodeline": "render(:partial => 'ajax_item_attachment', :layout => false)"
    },
    {
        "line": 11,
        "fullcodeline": "unless @item.check_user_auth(@login_user, 'w', true)"
    },
    {
        "line": 15,
        "fullcodeline": "if !params[:attachment][:file].nil? and params[:attachment][:file].size == 0"
    },
    {
        "line": 18,
        "fullcodeline": "unless attachment.update_attributes(params.require(:attachment).permit(Attachment::PERMIT_BASE))"
    },
    {
        "line": 30,
        "fullcodeline": "Log.add_error(request, evar)"
    },
    {
        "line": 32,
        "fullcodeline": "@attachment = Attachment.new"
    },
    {
        "line": 33,
        "fullcodeline": "@attachment.errors.add_to_base(evar.to_s[0, 256])"
    },
    {
        "line": 35,
        "fullcodeline": "render(:partial => 'ajax_item_attachment', :layout => false)"
    },
    {
        "line": 16,
        "fullcodeline": "params[:attachment].delete(:file)"
    },
    {
        "line": 19,
        "fullcodeline": "@attachment = attachment"
    },
    {
        "line": 20,
        "fullcodeline": "render(:partial => 'ajax_item_attachment', :layout => false)"
    },
    {
        "line": 12,
        "fullcodeline": "raise t('msg.need_to_be_owner')"
    }
]