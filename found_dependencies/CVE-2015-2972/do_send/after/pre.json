[
    {
        "line": 2,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 4,
        "fullcodeline": "return unless request.post?"
    },
    {
        "line": 31,
        "fullcodeline": "render(:partial => 'common/flash_notice', :layout => false)"
    },
    {
        "line": 7,
        "fullcodeline": "email = Email.find(params[:id])"
    },
    {
        "line": 14,
        "fullcodeline": "mail_account = MailAccount.find(email.mail_account_id)"
    },
    {
        "line": 19,
        "fullcodeline": "sent_folder = MailFolder.get_for(@login_user, mail_account.id, MailFolder::XTYPE_SENT)"
    },
    {
        "line": 20,
        "fullcodeline": "email.do_smtp(mail_account)"
    },
    {
        "line": 22,
        "fullcodeline": "attrs = ActionController::Parameters.new({status: Email::STATUS_TRANSMITTED, mail_folder_id: sent_folder.id, sent_at: Time.now})"
    },
    {
        "line": 9,
        "fullcodeline": "if email.status != Email::STATUS_DRAFT"
    },
    {
        "line": 15,
        "fullcodeline": "if mail_account.user_id != @login_user.id"
    },
    {
        "line": 23,
        "fullcodeline": "email.update_attributes(attrs.permit(Email::PERMIT_BASE))"
    },
    {
        "line": 25,
        "fullcodeline": "flash[:notice] = t('msg.transmit_success')"
    },
    {
        "line": 27,
        "fullcodeline": "Log.add_error(request, evar)"
    },
    {
        "line": 11,
        "fullcodeline": "raise('ERROR:' + 'Specified E-mail is not a draft.')"
    },
    {
        "line": 16,
        "fullcodeline": "raise('ERROR:' + t('msg.need_to_be_owner'))"
    },
    {
        "line": 28,
        "fullcodeline": "flash[:notice] = 'ERROR:' + t('msg.transmit_failed') + '<br/>' + evar.to_s"
    }
]