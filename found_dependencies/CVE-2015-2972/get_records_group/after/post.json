[
    {
        "line": 2,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 4,
        "fullcodeline": "where = ' where Research.status=' + Research::U_STATUS_COMMITTED.to_s"
    },
    {
        "line": 20,
        "fullcodeline": "sql = 'select distinct Research.* from researches Research, users User' + where"
    },
    {
        "line": 22,
        "fullcodeline": "@researches = Research.find_by_sql(sql)"
    },
    {
        "line": 26,
        "fullcodeline": "unless q_hash.nil? or q_hash.empty?"
    },
    {
        "line": 34,
        "fullcodeline": "render(:partial => 'ajax_statistics_records', :layout => false)"
    },
    {
        "line": 8,
        "fullcodeline": "SqlHelper.validate_token([@group_id])"
    },
    {
        "line": 10,
        "fullcodeline": "group_cons = []"
    },
    {
        "line": 27,
        "fullcodeline": "@q_codes = q_hash.keys"
    },
    {
        "line": 28,
        "fullcodeline": "@q_codes.delete_if{ |q_code|"
    },
    {
        "line": 12,
        "fullcodeline": "if @group_id != '0'"
    },
    {
        "line": 31,
        "fullcodeline": "@q_codes.sort!"
    },
    {
        "line": 7,
        "fullcodeline": "@group_id = params[:thetisBoxSelKeeper].split(':').last"
    },
    {
        "line": 13,
        "fullcodeline": "group_cons << SqlHelper.get_sql_like(['User.groups'], \"|#{@group_id}|\")"
    },
    {
        "line": 15,
        "fullcodeline": "where << ' and (Research.user_id = User.id)'"
    },
    {
        "line": 16,
        "fullcodeline": "where << ' and (' + group_cons.join(' or ') + ')'"
    }
]