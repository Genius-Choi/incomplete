[
    {
        "line": 6,
        "fullcodeline": "@folder_id = params[:id]"
    },
    {
        "line": 63,
        "fullcodeline": "session[:folder_id] = @folder_id"
    },
    {
        "line": 2,
        "fullcodeline": "if params[:action] == 'get_items'"
    },
    {
        "line": 8,
        "fullcodeline": "if Folder.check_user_auth(@folder_id, @login_user, 'r', true)"
    },
    {
        "line": 65,
        "fullcodeline": "render(:partial => 'ajax_folder_items', :layout => false)"
    },
    {
        "line": 3,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 18,
        "fullcodeline": "@sort_col = params[:sort_col]"
    },
    {
        "line": 19,
        "fullcodeline": "@sort_type = params[:sort_type]"
    },
    {
        "line": 25,
        "fullcodeline": "folder_ids = nil"
    },
    {
        "line": 26,
        "fullcodeline": "add_con = nil"
    },
    {
        "line": 53,
        "fullcodeline": "sql = ItemsHelper.get_list_sql(@login_user, params[:keyword], folder_ids, @sort_col, @sort_type, 0, false, add_con)"
    },
    {
        "line": 54,
        "fullcodeline": "@item_pages, @items, @total_num = paginate_by_sql(Item, sql, 10)"
    },
    {
        "line": 58,
        "fullcodeline": "@items = []"
    },
    {
        "line": 60,
        "fullcodeline": "flash[:notice] = 'ERROR:' + t('folder.need_auth_to_read')"
    },
    {
        "line": 21,
        "fullcodeline": "if @sort_col.blank? or @sort_type.blank?"
    },
    {
        "line": 28,
        "fullcodeline": "if @folder_id.nil? and params[:find_in] != Item::FOLDER_ALL"
    },
    {
        "line": 22,
        "fullcodeline": "@sort_col, @sort_type = FoldersHelper.get_sort_params(@folder_id)"
    },
    {
        "line": 29,
        "fullcodeline": "add_con = \"(Item.folder_id != 0) and (Folder.disp_ctrl like '%|#{Folder::DISPCTRL_BBS_TOP}|%')\""
    },
    {
        "line": 31,
        "fullcodeline": "case params[:find_in]"
    },
    {
        "line": 42,
        "fullcodeline": "unless folder_ids.nil?"
    },
    {
        "line": 32,
        "fullcodeline": "when Item::FOLDER_ALL"
    },
    {
        "line": 43,
        "fullcodeline": "delete_ary = []"
    },
    {
        "line": 44,
        "fullcodeline": "folder_ids.each do |folder_id|"
    },
    {
        "line": 49,
        "fullcodeline": "folder_ids -= delete_ary unless delete_ary.empty?"
    },
    {
        "line": 34,
        "fullcodeline": "when Item::FOLDER_CURRENT"
    },
    {
        "line": 35,
        "fullcodeline": "folder_ids = [@folder_id]"
    },
    {
        "line": 36,
        "fullcodeline": "when Item::FOLDER_LOWER"
    },
    {
        "line": 37,
        "fullcodeline": "folder_ids = Folder.get_childs(@folder_id, nil, true, false, false)"
    },
    {
        "line": 38,
        "fullcodeline": "folder_ids.unshift(@folder_id)"
    },
    {
        "line": 40,
        "fullcodeline": "folder_ids = [@folder_id]"
    }
]