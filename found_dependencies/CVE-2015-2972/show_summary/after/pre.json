[
    {
        "line": 2,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 4,
        "fullcodeline": "mail_account_id = params[:id]"
    },
    {
        "line": 5,
        "fullcodeline": "SqlHelper.validate_token([mail_account_id])"
    },
    {
        "line": 15,
        "fullcodeline": "@folder_tree = MailFolder.get_tree_for(@login_user, [mail_account_id])"
    },
    {
        "line": 17,
        "fullcodeline": "mail_folders = TreeElement.get_flattened_nodes(@folder_tree)"
    },
    {
        "line": 18,
        "fullcodeline": "mail_folder_ids = mail_folders.collect{|rec| rec.id.to_s}"
    },
    {
        "line": 20,
        "fullcodeline": "@unread_emails_h = {}"
    },
    {
        "line": 31,
        "fullcodeline": "@unread_emails_h = @unread_emails_h.sort_by{|mail_folder, count| mail_folders.index(mail_folder) }"
    },
    {
        "line": 33,
        "fullcodeline": "@draft_emails_h = {}"
    },
    {
        "line": 44,
        "fullcodeline": "@draft_emails_h = @draft_emails_h.sort_by{|mail_folder, count| mail_folders.index(mail_folder) }"
    },
    {
        "line": 48,
        "fullcodeline": "render(:layout => (!request.xhr?))"
    },
    {
        "line": 8,
        "fullcodeline": "@mail_account = MailAccount.find(mail_account_id)"
    },
    {
        "line": 21,
        "fullcodeline": "unless mail_folder_ids.nil? or mail_folder_ids.empty?"
    },
    {
        "line": 22,
        "fullcodeline": "unread_emails = Email.where(\"user_id=#{@login_user.id} and status='#{Email::STATUS_UNREAD}' and mail_folder_id in (#{mail_folder_ids.join(',')})\").to_a"
    },
    {
        "line": 34,
        "fullcodeline": "unless mail_folder_ids.nil? or mail_folder_ids.empty?"
    },
    {
        "line": 35,
        "fullcodeline": "draft_emails = Email.where(\"user_id=#{@login_user.id} and status='#{Email::STATUS_DRAFT}' and mail_folder_id in (#{mail_folder_ids.join(',')})\").to_a"
    },
    {
        "line": 46,
        "fullcodeline": "@folder_obj_cache ||= MailFolder.build_cache(mail_folders)"
    },
    {
        "line": 10,
        "fullcodeline": "Log.add_error(request, evar)"
    },
    {
        "line": 11,
        "fullcodeline": "redirect_to(:controller => 'login', :action => 'logout')"
    }
]