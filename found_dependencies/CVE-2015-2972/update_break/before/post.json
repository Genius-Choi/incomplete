[
    {
        "line": 2,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 14,
        "fullcodeline": "@timecard = Timecard.find(params[:id])"
    },
    {
        "line": 16,
        "fullcodeline": "@date = Date.parse params[:date]"
    },
    {
        "line": 17,
        "fullcodeline": "start_dt = UtilDateTime.new(@date.year, @date.month, @date.day, params[:start_hour].to_i, params[:start_min].to_i)"
    },
    {
        "line": 18,
        "fullcodeline": "end_dt = UtilDateTime.new(@date.year, @date.month, @date.day, params[:end_hour].to_i, params[:end_min].to_i)"
    },
    {
        "line": 26,
        "fullcodeline": "org_start_t = start_dt.to_time"
    },
    {
        "line": 27,
        "fullcodeline": "org_end_t = end_dt.to_time"
    },
    {
        "line": 38,
        "fullcodeline": "start_t = start_dt.to_time"
    },
    {
        "line": 39,
        "fullcodeline": "end_t = end_dt.to_time"
    },
    {
        "line": 20,
        "fullcodeline": "if start_dt == end_dt"
    },
    {
        "line": 29,
        "fullcodeline": "if org_end_t < org_start_t"
    },
    {
        "line": 41,
        "fullcodeline": "if @timecard.start <= start_t and (@timecard.end.nil? or end_t <= @timecard.end)"
    },
    {
        "line": 58,
        "fullcodeline": "render(:partial => 'ajax_update_break', :layout => false)"
    },
    {
        "line": 5,
        "fullcodeline": "@selected_user = User.find(params[:user_id])"
    },
    {
        "line": 21,
        "fullcodeline": "flash[:notice] = 'ERROR:' + t('timecard.break_without_span')"
    },
    {
        "line": 22,
        "fullcodeline": "render(:partial => 'ajax_update_break', :layout => false)"
    },
    {
        "line": 30,
        "fullcodeline": "end_dt += 1"
    },
    {
        "line": 55,
        "fullcodeline": "flash[:notice] = 'ERROR:' + t('timecard.break_out_of_labor')"
    },
    {
        "line": 7,
        "fullcodeline": "if @selected_user.id != @login_user.id and !@login_user.admin?(User::AUTH_TIMECARD)"
    },
    {
        "line": 32,
        "fullcodeline": "if (@timecard.end.nil? or @timecard.start.day != @timecard.end.day) and org_end_t <= @timecard.start"
    },
    {
        "line": 49,
        "fullcodeline": "unless @timecard.update_break(org_start, start_t, end_t)"
    },
    {
        "line": 8,
        "fullcodeline": "Log.add_check(request, '[User::AUTH_TIMECARD]'+request.to_s)"
    },
    {
        "line": 9,
        "fullcodeline": "redirect_to(:controller => 'frames', :action => 'http_error', :id => '401')"
    },
    {
        "line": 33,
        "fullcodeline": "start_dt += 1"
    },
    {
        "line": 34,
        "fullcodeline": "end_dt += 1"
    },
    {
        "line": 44,
        "fullcodeline": "org_start = nil"
    },
    {
        "line": 50,
        "fullcodeline": "flash[:notice] = 'ERROR:' + t('timecard.break_overlap')"
    },
    {
        "line": 46,
        "fullcodeline": "org_start = UtilDateTime.parse(params[:org_start]).to_time"
    }
]