[
    {
        "line": 2,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 4,
        "fullcodeline": "con = []"
    },
    {
        "line": 13,
        "fullcodeline": "@group_id = nil"
    },
    {
        "line": 19,
        "fullcodeline": "SqlHelper.validate_token([@group_id])"
    },
    {
        "line": 25,
        "fullcodeline": "include_research = false"
    },
    {
        "line": 51,
        "fullcodeline": "where = ''"
    },
    {
        "line": 56,
        "fullcodeline": "order_by = nil"
    },
    {
        "line": 64,
        "fullcodeline": "SqlHelper.validate_token([@sort_col, @sort_type])"
    },
    {
        "line": 65,
        "fullcodeline": "order_by = ' order by ' + @sort_col + ' ' + @sort_type"
    },
    {
        "line": 67,
        "fullcodeline": "sql = 'select distinct User.* from users User'"
    },
    {
        "line": 71,
        "fullcodeline": "sql << where + order_by"
    },
    {
        "line": 73,
        "fullcodeline": "@user_pages, @users, @total_num = paginate_by_sql(User, sql, 50)"
    },
    {
        "line": 29,
        "fullcodeline": "unless filter_status.blank?"
    },
    {
        "line": 52,
        "fullcodeline": "unless con.empty?"
    },
    {
        "line": 60,
        "fullcodeline": "if @sort_col.blank? or @sort_type.blank?"
    },
    {
        "line": 7,
        "fullcodeline": "key_array = params[:keyword].split(nil)"
    },
    {
        "line": 8,
        "fullcodeline": "key_array.each do |key|"
    },
    {
        "line": 22,
        "fullcodeline": "con << SqlHelper.get_sql_like([:groups], \"|#{@group_id}|\")"
    },
    {
        "line": 30,
        "fullcodeline": "SqlHelper.validate_token([filter_status])"
    },
    {
        "line": 53,
        "fullcodeline": "where = ' where ' + con.join(' and ')"
    },
    {
        "line": 61,
        "fullcodeline": "@sort_col = 'id'"
    },
    {
        "line": 62,
        "fullcodeline": "@sort_type = 'ASC'"
    },
    {
        "line": 69,
        "fullcodeline": "sql << ', researches Research'"
    },
    {
        "line": 21,
        "fullcodeline": "unless @group_id.nil?"
    },
    {
        "line": 31,
        "fullcodeline": "case filter_status"
    },
    {
        "line": 15,
        "fullcodeline": "@group_id = params[:thetisBoxSelKeeper].split(':').last"
    },
    {
        "line": 32,
        "fullcodeline": "when Research::U_STATUS_IN_ACTON.to_s, Research::U_STATUS_COMMITTED.to_s"
    },
    {
        "line": 33,
        "fullcodeline": "con << \"((Research.user_id=User.id) and (Research.status=#{filter_status}))\""
    },
    {
        "line": 34,
        "fullcodeline": "include_research = true"
    },
    {
        "line": 35,
        "fullcodeline": "when (-1).to_s"
    },
    {
        "line": 37,
        "fullcodeline": "except_users = []"
    },
    {
        "line": 38,
        "fullcodeline": "unless researches.nil?"
    },
    {
        "line": 43,
        "fullcodeline": "unless except_users.empty?"
    },
    {
        "line": 36,
        "fullcodeline": "researches = Research.where(nil).to_a"
    },
    {
        "line": 39,
        "fullcodeline": "researches.each do |research|"
    },
    {
        "line": 44,
        "fullcodeline": "con << '(User.id not in (' + except_users.join(',') + '))'"
    }
]