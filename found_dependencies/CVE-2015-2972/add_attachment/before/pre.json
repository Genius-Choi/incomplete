[
    {
        "line": 2,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 40,
        "fullcodeline": "render(:partial => 'ajax_mail_attachments', :layout => false)"
    },
    {
        "line": 4,
        "fullcodeline": "unless params[:attach_file].nil?"
    },
    {
        "line": 19,
        "fullcodeline": "unless attach_attrs.nil?"
    },
    {
        "line": 5,
        "fullcodeline": "attach_attrs = ActionController::Parameters.new({file: params[:attach_file]})"
    },
    {
        "line": 6,
        "fullcodeline": "params.delete(:attach_file)"
    },
    {
        "line": 9,
        "fullcodeline": "if params[:id].blank?"
    },
    {
        "line": 10,
        "fullcodeline": "mail_account = MailAccount.find(params[:mail_account_id])"
    },
    {
        "line": 12,
        "fullcodeline": "@email = SendMailsHelper.get_mail_to_send(@login_user, mail_account, nil)"
    },
    {
        "line": 13,
        "fullcodeline": "@email.status = Email::STATUS_TEMPORARY"
    },
    {
        "line": 16,
        "fullcodeline": "@email = Email.find(params[:id])"
    },
    {
        "line": 27,
        "fullcodeline": "attach_attrs[:email_id] = @email.id"
    },
    {
        "line": 28,
        "fullcodeline": "attach_attrs[:xorder] = 0"
    },
    {
        "line": 29,
        "fullcodeline": "@mail_attachment = MailAttachment.create(attach_attrs.permit(MailAttachment::PERMIT_BASE))"
    },
    {
        "line": 30,
        "fullcodeline": "@email.mail_attachments << @mail_attachment"
    },
    {
        "line": 32,
        "fullcodeline": "update_attrs = ActionController::Parameters.new({updated_at: Time.now})"
    },
    {
        "line": 14,
        "fullcodeline": "@email.save!"
    },
    {
        "line": 21,
        "fullcodeline": "unless @email.can_attach?(attach_attrs[:file].size)"
    },
    {
        "line": 37,
        "fullcodeline": "@email.update_attributes(update_attrs.permit(Email::PERMIT_BASE))"
    },
    {
        "line": 22,
        "fullcodeline": "flash[:notice] = 'ERROR:' + t('mail.sum_of_attach_size_over')"
    },
    {
        "line": 23,
        "fullcodeline": "render(:partial => 'ajax_mail_attachments', :layout => false)"
    },
    {
        "line": 33,
        "fullcodeline": "if @email.status == Email::STATUS_TEMPORARY \\"
    },
    {
        "line": 34,
        "fullcodeline": "and !@email.mail_account_id.nil?"
    },
    {
        "line": 35,
        "fullcodeline": "update_attrs[:status] = Email::STATUS_DRAFT"
    },
    {
        "line": 55,
        "fullcodeline": "if evar.to_s.starts_with?('ERROR:')"
    },
    {
        "line": 44,
        "fullcodeline": "unless @mail_attachment.nil? or @mail_attachment.id.nil?"
    },
    {
        "line": 45,
        "fullcodeline": "@email.mail_attachments.delete(@mail_attachment)"
    },
    {
        "line": 50,
        "fullcodeline": "unless @mail_attachment.nil? or @mail_attachment.id.nil?"
    },
    {
        "line": 58,
        "fullcodeline": "err_msg = 'ERROR:' + t('msg.system_error') + '<br/>' + evar.to_s"
    }
]