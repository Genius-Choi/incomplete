[
    {
        "line": 57,
        "fullcodeline": "@folder_id = params[:id]"
    },
    {
        "line": 78,
        "fullcodeline": "session[:mailfolder_id] = @folder_id"
    },
    {
        "line": 2,
        "fullcodeline": "if params[:action] == 'get_mails'"
    },
    {
        "line": 6,
        "fullcodeline": "if !params[:pop].nil? and params[:pop] == 'true'"
    },
    {
        "line": 58,
        "fullcodeline": "if @folder_id == TreeElement::ROOT_ID.to_s"
    },
    {
        "line": 80,
        "fullcodeline": "render(:partial => 'ajax_folder_mails', :layout => false)"
    },
    {
        "line": 3,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 59,
        "fullcodeline": "@emails = nil"
    },
    {
        "line": 65,
        "fullcodeline": "@sort_col = (params[:sort_col] || 'sent_at')"
    },
    {
        "line": 66,
        "fullcodeline": "@sort_type = (params[:sort_type] || 'DESC')"
    },
    {
        "line": 68,
        "fullcodeline": "folder_ids = nil"
    },
    {
        "line": 69,
        "fullcodeline": "add_con = nil"
    },
    {
        "line": 71,
        "fullcodeline": "folder_ids = [@folder_id]"
    },
    {
        "line": 73,
        "fullcodeline": "sql = EmailsHelper.get_list_sql(@login_user, params[:keyword], folder_ids, @sort_col, @sort_type, 0, add_con)"
    },
    {
        "line": 74,
        "fullcodeline": "@email_pages, @emails, @total_num = paginate_by_sql(Email, sql, 10)"
    },
    {
        "line": 8,
        "fullcodeline": "new_arrivals_h = {}"
    },
    {
        "line": 10,
        "fullcodeline": "mail_account_id = params[:mail_account_id]"
    },
    {
        "line": 29,
        "fullcodeline": "unless new_arrivals_h.empty?"
    },
    {
        "line": 53,
        "fullcodeline": "Log.add_error(nil, evar)"
    },
    {
        "line": 12,
        "fullcodeline": "mail_accounts = MailAccount.find_all(\"user_id=#{@login_user.id}\")"
    },
    {
        "line": 13,
        "fullcodeline": "mail_accounts.each do |mail_account|"
    },
    {
        "line": 21,
        "fullcodeline": "mail_account = MailAccount.find(mail_account_id)"
    },
    {
        "line": 22,
        "fullcodeline": "emails = Email.do_pop(mail_account)"
    },
    {
        "line": 30,
        "fullcodeline": "flash[:notice] = t('mail.received', :count => new_arrivals_h.values.flatten.length)"
    },
    {
        "line": 33,
        "fullcodeline": "new_arrivals_h.each do |mail_account_id, emails|"
    },
    {
        "line": 48,
        "fullcodeline": "if evar.to_s.starts_with?('ERROR:')"
    },
    {
        "line": 23,
        "fullcodeline": "unless emails.empty?"
    },
    {
        "line": 49,
        "fullcodeline": "flash[:notice] = evar.to_s"
    },
    {
        "line": 51,
        "fullcodeline": "flash[:notice] = 'ERROR:' + t('mail.receive_error') + '<br/>' + evar.to_s"
    },
    {
        "line": 24,
        "fullcodeline": "new_arrivals_h[mail_account.id] ||= []"
    }
]