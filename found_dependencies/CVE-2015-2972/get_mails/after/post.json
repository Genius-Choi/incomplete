[
    {
        "line": 61,
        "fullcodeline": "SqlHelper.validate_token([@folder_id])"
    },
    {
        "line": 79,
        "fullcodeline": "session[:mailfolder_id] = @folder_id"
    },
    {
        "line": 2,
        "fullcodeline": "if params[:action] == 'get_mails'"
    },
    {
        "line": 6,
        "fullcodeline": "if !params[:pop].nil? and params[:pop] == 'true'"
    },
    {
        "line": 63,
        "fullcodeline": "if @folder_id == TreeElement::ROOT_ID.to_s"
    },
    {
        "line": 81,
        "fullcodeline": "render(:partial => 'ajax_folder_mails', :layout => false)"
    },
    {
        "line": 3,
        "fullcodeline": "Log.add_info(request, params.inspect)"
    },
    {
        "line": 9,
        "fullcodeline": "SqlHelper.validate_token([mail_account_id])"
    },
    {
        "line": 64,
        "fullcodeline": "@emails = nil"
    },
    {
        "line": 70,
        "fullcodeline": "@sort_col = (params[:sort_col] || 'sent_at')"
    },
    {
        "line": 71,
        "fullcodeline": "@sort_type = (params[:sort_type] || 'DESC')"
    },
    {
        "line": 72,
        "fullcodeline": "SqlHelper.validate_token([@sort_col, @sort_type])"
    },
    {
        "line": 74,
        "fullcodeline": "sql = EmailsHelper.get_list_sql(@login_user, params[:keyword], [@folder_id], @sort_col, @sort_type, 0, nil)"
    },
    {
        "line": 75,
        "fullcodeline": "@email_pages, @emails, @total_num = paginate_by_sql(Email, sql, 10)"
    },
    {
        "line": 12,
        "fullcodeline": "new_arrivals_h = {}"
    },
    {
        "line": 32,
        "fullcodeline": "unless new_arrivals_h.empty?"
    },
    {
        "line": 56,
        "fullcodeline": "Log.add_error(nil, evar)"
    },
    {
        "line": 15,
        "fullcodeline": "mail_accounts = MailAccount.find_all(\"user_id=#{@login_user.id}\")"
    },
    {
        "line": 16,
        "fullcodeline": "mail_accounts.each do |mail_account|"
    },
    {
        "line": 24,
        "fullcodeline": "mail_account = MailAccount.find(mail_account_id)"
    },
    {
        "line": 25,
        "fullcodeline": "emails = Email.do_pop(mail_account)"
    },
    {
        "line": 33,
        "fullcodeline": "flash[:notice] = t('mail.received', :count => new_arrivals_h.values.flatten.length)"
    },
    {
        "line": 36,
        "fullcodeline": "new_arrivals_h.each do |mail_account_id, emails|"
    },
    {
        "line": 51,
        "fullcodeline": "if evar.to_s.starts_with?('ERROR:')"
    },
    {
        "line": 26,
        "fullcodeline": "unless emails.empty?"
    },
    {
        "line": 54,
        "fullcodeline": "flash[:notice] = 'ERROR:' + t('mail.receive_error') + '<br/>' + evar.to_s"
    },
    {
        "line": 27,
        "fullcodeline": "new_arrivals_h[mail_account.id] ||= []"
    }
]