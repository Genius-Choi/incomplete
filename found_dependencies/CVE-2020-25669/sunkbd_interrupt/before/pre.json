[
    {
        "line": 4,
        "fullcodeline": "struct sunkbd *sunkbd = serio_get_drvdata(serio);"
    },
    {
        "line": 6,
        "fullcodeline": "if (sunkbd->reset <= -1) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (sunkbd->layout == -1) {"
    },
    {
        "line": 11,
        "fullcodeline": "sunkbd->reset = data;"
    },
    {
        "line": 12,
        "fullcodeline": "wake_up_interruptible(&sunkbd->wait);"
    },
    {
        "line": 17,
        "fullcodeline": "sunkbd->layout = data;"
    },
    {
        "line": 18,
        "fullcodeline": "wake_up_interruptible(&sunkbd->wait);"
    },
    {
        "line": 25,
        "fullcodeline": "schedule_work(&sunkbd->tq);"
    },
    {
        "line": 26,
        "fullcodeline": "sunkbd->reset = -1;"
    },
    {
        "line": 30,
        "fullcodeline": "sunkbd->layout = -1;"
    },
    {
        "line": 37,
        "fullcodeline": "if (!sunkbd->enabled)"
    },
    {
        "line": 40,
        "fullcodeline": "if (sunkbd->keycode[data & SUNKBD_KEY]) {"
    },
    {
        "line": 41,
        "fullcodeline": "input_report_key(sunkbd->dev,"
    },
    {
        "line": 44,
        "fullcodeline": "input_sync(sunkbd->dev);"
    },
    {
        "line": 43,
        "fullcodeline": "!(data & SUNKBD_RELEASE));"
    },
    {
        "line": 42,
        "fullcodeline": "sunkbd->keycode[data & SUNKBD_KEY],"
    }
]