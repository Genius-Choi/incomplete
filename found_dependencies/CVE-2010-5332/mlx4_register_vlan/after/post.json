[
    {
        "line": 4,
        "fullcodeline": "int i, err = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int free = -1;"
    },
    {
        "line": 7,
        "fullcodeline": "mutex_lock(&table->mutex);"
    },
    {
        "line": 36,
        "fullcodeline": "table->refs[free] = 1;"
    },
    {
        "line": 37,
        "fullcodeline": "table->entries[free] = cpu_to_be32(vlan | MLX4_VLAN_VALID);"
    },
    {
        "line": 39,
        "fullcodeline": "err = mlx4_set_port_vlan_table(dev, port, table->entries);"
    },
    {
        "line": 47,
        "fullcodeline": "*index = free;"
    },
    {
        "line": 48,
        "fullcodeline": "++table->total;"
    },
    {
        "line": 50,
        "fullcodeline": "mutex_unlock(&table->mutex);"
    },
    {
        "line": 8,
        "fullcodeline": "for (i = MLX4_VLAN_REGULAR; i < MLX4_MAX_VLAN_NUM; i++) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (free < 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (table->total == table->max) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (unlikely(err)) {"
    },
    {
        "line": 25,
        "fullcodeline": "err = -ENOMEM;"
    },
    {
        "line": 31,
        "fullcodeline": "err = -ENOSPC;"
    },
    {
        "line": 41,
        "fullcodeline": "mlx4_warn(dev, \"Failed adding vlan: %u\\n\", vlan);"
    },
    {
        "line": 42,
        "fullcodeline": "table->refs[free] = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "table->entries[free] = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "if (free < 0 && (table->refs[i] == 0)) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (table->refs[i] &&"
    },
    {
        "line": 10,
        "fullcodeline": "free = i;"
    },
    {
        "line": 15,
        "fullcodeline": "(vlan == (MLX4_VLAN_MASK &"
    },
    {
        "line": 18,
        "fullcodeline": "*index = i;"
    },
    {
        "line": 19,
        "fullcodeline": "++table->refs[i];"
    },
    {
        "line": 3,
        "fullcodeline": "struct mlx4_vlan_table *table = &mlx4_priv(dev)->port[port].vlan_table;"
    }
]