[
    {
        "line": 3,
        "fullcodeline": "camera = Camera.query.filter(Camera.unique_id == camera_unique_id).first()"
    },
    {
        "line": 4,
        "fullcodeline": "camera_path = assure_path_exists("
    },
    {
        "line": 6,
        "fullcodeline": "if img_type == 'still':"
    },
    {
        "line": 24,
        "fullcodeline": "if filename in files:"
    },
    {
        "line": 19,
        "fullcodeline": "if os.path.isdir(path):"
    },
    {
        "line": 20,
        "fullcodeline": "files = (files for files in os.listdir(path)"
    },
    {
        "line": 23,
        "fullcodeline": "files = []"
    },
    {
        "line": 25,
        "fullcodeline": "path_file = os.path.join(path, filename)"
    },
    {
        "line": 5,
        "fullcodeline": "os.path.join(PATH_CAMERAS, '{uid}'.format(uid=camera.unique_id)))"
    },
    {
        "line": 11,
        "fullcodeline": "elif img_type == 'timelapse':"
    },
    {
        "line": 26,
        "fullcodeline": "return send_file(path_file, mimetype='image/jpeg')"
    },
    {
        "line": 8,
        "fullcodeline": "path = camera.path_still"
    },
    {
        "line": 10,
        "fullcodeline": "path = os.path.join(camera_path, img_type)"
    },
    {
        "line": 13,
        "fullcodeline": "path = camera.path_timelapse"
    },
    {
        "line": 15,
        "fullcodeline": "path = os.path.join(camera_path, img_type)"
    },
    {
        "line": 21,
        "fullcodeline": "if os.path.isfile(os.path.join(path, files)))"
    }
]