[
    {
        "line": 33,
        "fullcodeline": "rc = smbsr_encode_empty_result(sr);"
    },
    {
        "line": 7,
        "fullcodeline": "if (smb_flush_required == 0) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (sr->smb_fid != 0xffff) {"
    },
    {
        "line": 34,
        "fullcodeline": "return ((rc == 0) ? SDRC_SUCCESS : SDRC_ERROR);"
    },
    {
        "line": 8,
        "fullcodeline": "rc = smbsr_encode_empty_result(sr);"
    },
    {
        "line": 13,
        "fullcodeline": "smbsr_lookup_file(sr);"
    },
    {
        "line": 19,
        "fullcodeline": "smb_ofile_flush(sr, sr->fid_ofile);"
    },
    {
        "line": 9,
        "fullcodeline": "return ((rc == 0) ? SDRC_SUCCESS : SDRC_ERROR);"
    },
    {
        "line": 14,
        "fullcodeline": "if (sr->fid_ofile == NULL) {"
    },
    {
        "line": 21,
        "fullcodeline": "flist = &sr->tid_tree->t_ofile_list;"
    },
    {
        "line": 22,
        "fullcodeline": "smb_llist_enter(flist, RW_READER);"
    },
    {
        "line": 23,
        "fullcodeline": "file = smb_llist_head(flist);"
    },
    {
        "line": 15,
        "fullcodeline": "smbsr_error(sr, NT_STATUS_INVALID_HANDLE,"
    },
    {
        "line": 25,
        "fullcodeline": "mutex_enter(&file->f_mutex);"
    },
    {
        "line": 26,
        "fullcodeline": "smb_ofile_flush(sr, file);"
    },
    {
        "line": 27,
        "fullcodeline": "mutex_exit(&file->f_mutex);"
    },
    {
        "line": 28,
        "fullcodeline": "file = smb_llist_next(flist, file);"
    }
]