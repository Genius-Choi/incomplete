[
    {
        "line": 8,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "while (i < length) {"
    },
    {
        "line": 10,
        "fullcodeline": "tlv = cp + i;"
    },
    {
        "line": 11,
        "fullcodeline": "type = EXTRACT_16BITS(tlv);"
    },
    {
        "line": 12,
        "fullcodeline": "optlen = EXTRACT_16BITS(tlv + 2);"
    },
    {
        "line": 13,
        "fullcodeline": "value = tlv + 4;"
    },
    {
        "line": 15,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\"));"
    },
    {
        "line": 19,
        "fullcodeline": "ND_PRINT((ndo, \"%s\", tok2str(dh6opt_str, \"Unknown\", type)));"
    },
    {
        "line": 20,
        "fullcodeline": "ND_PRINT((ndo,\" (%u)\", optlen + 4 ));"
    },
    {
        "line": 44,
        "fullcodeline": "i += 4 + optlen;"
    },
    {
        "line": 16,
        "fullcodeline": "for (t = indent; t > 0; t--)"
    },
    {
        "line": 17,
        "fullcodeline": "ND_PRINT((ndo, \"\\t\"));"
    },
    {
        "line": 34,
        "fullcodeline": "const u_char *tp = value;"
    },
    {
        "line": 25,
        "fullcodeline": "if (optlen % 16 != 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "for (t = 0; t < optlen; t += 16)"
    },
    {
        "line": 30,
        "fullcodeline": "ND_PRINT((ndo, \" %s\", ip6addr_string(ndo, value + t)));"
    },
    {
        "line": 35,
        "fullcodeline": "while (tp < value + optlen) {"
    },
    {
        "line": 26,
        "fullcodeline": "ND_PRINT((ndo, \" %s\", istr));"
    },
    {
        "line": 36,
        "fullcodeline": "ND_PRINT((ndo, \" \"));"
    },
    {
        "line": 27,
        "fullcodeline": "return -1;"
    },
    {
        "line": 37,
        "fullcodeline": "if ((tp = ns_nprint(ndo, tp, value + optlen)) == NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "return -1;"
    }
]