[
    {
        "line": 3,
        "fullcodeline": "pool_ctx *ctx = (pool_ctx *)ctx_ptr;"
    },
    {
        "line": 4,
        "fullcodeline": "pool_chunk *next, *prev = NULL, *cur = ctx->free_list;"
    },
    {
        "line": 7,
        "fullcodeline": "pool_size_align(&size);"
    },
    {
        "line": 6,
        "fullcodeline": "if (unlikely(size >= ctx->size)) return NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "if (cur->size < size) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (cur->size >= size + sizeof(pool_chunk) * 2) {"
    },
    {
        "line": 28,
        "fullcodeline": "return (void *)(cur + 1);"
    },
    {
        "line": 12,
        "fullcodeline": "prev = cur;"
    },
    {
        "line": 13,
        "fullcodeline": "cur = cur->next;"
    },
    {
        "line": 18,
        "fullcodeline": "next = (pool_chunk *)(void *)((u8 *)cur + size);"
    },
    {
        "line": 19,
        "fullcodeline": "next->size = cur->size - size;"
    },
    {
        "line": 20,
        "fullcodeline": "next->next = cur->next;"
    },
    {
        "line": 21,
        "fullcodeline": "cur->size = size;"
    },
    {
        "line": 26,
        "fullcodeline": "if (prev) prev->next = next;"
    },
    {
        "line": 24,
        "fullcodeline": "next = cur->next;"
    },
    {
        "line": 27,
        "fullcodeline": "else ctx->free_list = next;"
    }
]