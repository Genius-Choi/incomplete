[
    {
        "line": 2,
        "fullcodeline": "const yyjson_alc def = YYJSON_DEFAULT_ALC;"
    },
    {
        "line": 3,
        "fullcodeline": "dyn_ctx *ctx = (dyn_ctx *)(void *)(alc + 1);"
    },
    {
        "line": 14,
        "fullcodeline": "def.free(def.ctx, alc);"
    },
    {
        "line": 5,
        "fullcodeline": "if (unlikely(!alc)) return;"
    },
    {
        "line": 6,
        "fullcodeline": "for (chunk = ctx->free_list.next; chunk; chunk = next) {"
    },
    {
        "line": 10,
        "fullcodeline": "for (chunk = ctx->used_list.next; chunk; chunk = next) {"
    },
    {
        "line": 7,
        "fullcodeline": "next = chunk->next;"
    },
    {
        "line": 8,
        "fullcodeline": "def.free(def.ctx, chunk);"
    },
    {
        "line": 11,
        "fullcodeline": "next = chunk->next;"
    },
    {
        "line": 12,
        "fullcodeline": "def.free(def.ctx, chunk);"
    }
]