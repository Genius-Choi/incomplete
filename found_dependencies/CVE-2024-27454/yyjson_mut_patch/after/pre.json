[
    {
        "line": 9,
        "fullcodeline": "memset(err, 0, sizeof(*err));"
    },
    {
        "line": 10,
        "fullcodeline": "memset(&iter, 0, sizeof(iter));"
    },
    {
        "line": 18,
        "fullcodeline": "root = yyjson_mut_val_mut_copy(doc, orig);"
    },
    {
        "line": 22,
        "fullcodeline": "yyjson_mut_arr_iter_init(patch, &iter);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!err) err = &err_tmp;"
    },
    {
        "line": 12,
        "fullcodeline": "if (unlikely(!doc || !orig || !patch)) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (unlikely(!yyjson_mut_is_arr(patch))) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (unlikely(!root)) return_err_copy();"
    },
    {
        "line": 23,
        "fullcodeline": "while ((obj = yyjson_mut_arr_iter_next(&iter))) {"
    },
    {
        "line": 13,
        "fullcodeline": "return_err(INVALID_PARAMETER, \"input parameter is NULL\");"
    },
    {
        "line": 16,
        "fullcodeline": "return_err(INVALID_PARAMETER, \"input patch is not array\");"
    },
    {
        "line": 25,
        "fullcodeline": "yyjson_mut_val *op, *path, *from = NULL, *value;"
    },
    {
        "line": 26,
        "fullcodeline": "yyjson_mut_val *val = NULL, *test;"
    },
    {
        "line": 27,
        "fullcodeline": "usize path_len, from_len = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "op = yyjson_mut_obj_get(obj, \"op\");"
    },
    {
        "line": 36,
        "fullcodeline": "op_enum = patch_op_get((yyjson_val *)(void *)op);"
    },
    {
        "line": 39,
        "fullcodeline": "path = yyjson_mut_obj_get(obj, \"path\");"
    },
    {
        "line": 42,
        "fullcodeline": "path_len = unsafe_yyjson_get_len(path);"
    },
    {
        "line": 28,
        "fullcodeline": "if (!unsafe_yyjson_is_obj(obj)) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (unlikely(!op)) return_err_key(\"`op`\");"
    },
    {
        "line": 35,
        "fullcodeline": "if (unlikely(!yyjson_mut_is_str(op))) return_err_val(\"`op`\");"
    },
    {
        "line": 40,
        "fullcodeline": "if (unlikely(!path)) return_err_key(\"`path`\");"
    },
    {
        "line": 41,
        "fullcodeline": "if (unlikely(!yyjson_mut_is_str(path))) return_err_val(\"`path`\");"
    },
    {
        "line": 65,
        "fullcodeline": "switch ((int)op_enum) {"
    },
    {
        "line": 29,
        "fullcodeline": "return_err(INVALID_OPERATION, \"JSON patch operation is not object\");"
    },
    {
        "line": 47,
        "fullcodeline": "value = yyjson_mut_obj_get(obj, \"value\");"
    },
    {
        "line": 49,
        "fullcodeline": "val = yyjson_mut_val_mut_copy(doc, value);"
    },
    {
        "line": 53,
        "fullcodeline": "from = yyjson_mut_obj_get(obj, \"from\");"
    },
    {
        "line": 58,
        "fullcodeline": "from_len = unsafe_yyjson_get_len(from);"
    },
    {
        "line": 85,
        "fullcodeline": "val = ptr_remove(from);"
    },
    {
        "line": 95,
        "fullcodeline": "val = ptr_get(from);"
    },
    {
        "line": 100,
        "fullcodeline": "val = yyjson_mut_val_mut_copy(doc, val);"
    },
    {
        "line": 107,
        "fullcodeline": "test = ptr_get(path);"
    },
    {
        "line": 116,
        "fullcodeline": "return_err(INVALID_MEMBER, \"unsupported `op`\");"
    },
    {
        "line": 48,
        "fullcodeline": "if (unlikely(!value)) return_err_key(\"`value`\");"
    },
    {
        "line": 50,
        "fullcodeline": "if (unlikely(!val)) return_err_copy();"
    },
    {
        "line": 54,
        "fullcodeline": "if (unlikely(!from)) return_err_key(\"`from`\");"
    },
    {
        "line": 55,
        "fullcodeline": "if (unlikely(!yyjson_mut_is_str(from))) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (unlikely(path_len == 0)) { root = val; break; }"
    },
    {
        "line": 68,
        "fullcodeline": "if (unlikely(!ptr_add(path, val))) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (unlikely(!ptr_remove(path))) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (unlikely(path_len == 0)) { root = val; break; }"
    },
    {
        "line": 79,
        "fullcodeline": "if (unlikely(!ptr_replace(path, val))) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (unlikely(from_len == 0 && path_len == 0)) break;"
    },
    {
        "line": 86,
        "fullcodeline": "if (unlikely(!val)) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (unlikely(path_len == 0)) { root = val; break; }"
    },
    {
        "line": 90,
        "fullcodeline": "if (unlikely(!ptr_add(path, val))) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (unlikely(!val)) {"
    },
    {
        "line": 99,
        "fullcodeline": "if (unlikely(path_len == 0)) { root = val; break; }"
    },
    {
        "line": 101,
        "fullcodeline": "if (unlikely(!val)) return_err_copy();"
    },
    {
        "line": 102,
        "fullcodeline": "if (unlikely(!ptr_add(path, val))) {"
    },
    {
        "line": 108,
        "fullcodeline": "if (unlikely(!test)) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (unlikely(!yyjson_mut_equals(val, test))) {"
    },
    {
        "line": 56,
        "fullcodeline": "return_err_val(\"`from`\");"
    },
    {
        "line": 69,
        "fullcodeline": "return_err(POINTER, \"failed to add `path`\");"
    },
    {
        "line": 74,
        "fullcodeline": "return_err(POINTER, \"failed to remove `path`\");"
    },
    {
        "line": 80,
        "fullcodeline": "return_err(POINTER, \"failed to replace `path`\");"
    },
    {
        "line": 87,
        "fullcodeline": "return_err(POINTER, \"failed to remove `from`\");"
    },
    {
        "line": 91,
        "fullcodeline": "return_err(POINTER, \"failed to add `path`\");"
    },
    {
        "line": 97,
        "fullcodeline": "return_err(POINTER, \"failed to get `from`\");"
    },
    {
        "line": 103,
        "fullcodeline": "return_err(POINTER, \"failed to add `path`\");"
    },
    {
        "line": 109,
        "fullcodeline": "return_err(POINTER, \"failed to get `path`\");"
    },
    {
        "line": 112,
        "fullcodeline": "return_err(EQUAL, \"failed to test equal\");"
    }
]