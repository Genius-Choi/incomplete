[
    {
        "line": 4,
        "fullcodeline": "const yyjson_alc def = YYJSON_DEFAULT_ALC;"
    },
    {
        "line": 5,
        "fullcodeline": "dyn_ctx *ctx = (dyn_ctx *)ctx_ptr;"
    },
    {
        "line": 7,
        "fullcodeline": "dyn_chunk *chunk = (dyn_chunk *)ptr - 1;"
    },
    {
        "line": 11,
        "fullcodeline": "dyn_chunk_list_remove(&ctx->used_list, chunk);"
    },
    {
        "line": 12,
        "fullcodeline": "new_chunk = (dyn_chunk *)def.realloc(def.ctx, chunk, chunk->size, size);"
    },
    {
        "line": 17,
        "fullcodeline": "dyn_chunk_list_add(&ctx->used_list, chunk);"
    },
    {
        "line": 8,
        "fullcodeline": "if (unlikely(!dyn_size_align(&size))) return NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "if (chunk->size >= size) return ptr;"
    },
    {
        "line": 13,
        "fullcodeline": "if (likely(new_chunk)) {"
    },
    {
        "line": 18,
        "fullcodeline": "return new_chunk ? (void *)(new_chunk + 1) : NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "new_chunk->size = size;"
    },
    {
        "line": 15,
        "fullcodeline": "chunk = new_chunk;"
    }
]