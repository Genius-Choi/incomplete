[
    {
        "line": 3,
        "fullcodeline": "pool_ctx *ctx = (pool_ctx *)ctx_ptr;"
    },
    {
        "line": 4,
        "fullcodeline": "pool_chunk *cur = ((pool_chunk *)ptr) - 1;"
    },
    {
        "line": 5,
        "fullcodeline": "pool_chunk *prev = NULL, *next = ctx->free_list;"
    },
    {
        "line": 13,
        "fullcodeline": "cur->next = next;"
    },
    {
        "line": 7,
        "fullcodeline": "while (next && next < cur) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (next && ((u8 *)cur + cur->size) == (u8 *)next) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (prev && ((u8 *)prev + prev->size) == (u8 *)cur) {"
    },
    {
        "line": 8,
        "fullcodeline": "prev = next;"
    },
    {
        "line": 9,
        "fullcodeline": "next = next->next;"
    },
    {
        "line": 11,
        "fullcodeline": "if (prev) prev->next = cur;"
    },
    {
        "line": 17,
        "fullcodeline": "cur->size += next->size;"
    },
    {
        "line": 18,
        "fullcodeline": "cur->next = next->next;"
    },
    {
        "line": 22,
        "fullcodeline": "prev->size += cur->size;"
    },
    {
        "line": 23,
        "fullcodeline": "prev->next = cur->next;"
    },
    {
        "line": 12,
        "fullcodeline": "else ctx->free_list = cur;"
    }
]