[
    {
        "line": 3,
        "fullcodeline": "const yyjson_alc def = YYJSON_DEFAULT_ALC;"
    },
    {
        "line": 4,
        "fullcodeline": "dyn_ctx *ctx = (dyn_ctx *)ctx_ptr;"
    },
    {
        "line": 19,
        "fullcodeline": "prev = &ctx->free_list;"
    },
    {
        "line": 6,
        "fullcodeline": "if (unlikely(!dyn_size_align(&size))) return NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!ctx->free_list.next) {"
    },
    {
        "line": 10,
        "fullcodeline": "chunk = (dyn_chunk *)def.malloc(def.ctx, size);"
    },
    {
        "line": 12,
        "fullcodeline": "chunk->size = size;"
    },
    {
        "line": 13,
        "fullcodeline": "chunk->next = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "dyn_chunk_list_add(&ctx->used_list, chunk);"
    },
    {
        "line": 21,
        "fullcodeline": "chunk = prev->next;"
    },
    {
        "line": 35,
        "fullcodeline": "prev = chunk;"
    },
    {
        "line": 15,
        "fullcodeline": "return (void *)(chunk + 1);"
    },
    {
        "line": 22,
        "fullcodeline": "if (chunk->size >= size) { /* enough size, reuse this chunk */"
    },
    {
        "line": 27,
        "fullcodeline": "if (!chunk->next) { /* resize the largest chunk */"
    },
    {
        "line": 11,
        "fullcodeline": "if (unlikely(!chunk)) return NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "dyn_chunk_list_add(&ctx->used_list, chunk);"
    },
    {
        "line": 28,
        "fullcodeline": "chunk = (dyn_chunk *)def.realloc(def.ctx, chunk, chunk->size, size);"
    },
    {
        "line": 31,
        "fullcodeline": "chunk->size = size;"
    },
    {
        "line": 32,
        "fullcodeline": "dyn_chunk_list_add(&ctx->used_list, chunk);"
    },
    {
        "line": 25,
        "fullcodeline": "return (void *)(chunk + 1);"
    },
    {
        "line": 33,
        "fullcodeline": "return (void *)(chunk + 1);"
    },
    {
        "line": 29,
        "fullcodeline": "if (unlikely(!chunk)) return NULL;"
    }
]