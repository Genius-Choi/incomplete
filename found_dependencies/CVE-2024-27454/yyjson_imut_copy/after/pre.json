[
    {
        "line": 3,
        "fullcodeline": "yyjson_val *val = *val_ptr;"
    },
    {
        "line": 4,
        "fullcodeline": "yyjson_type type = unsafe_yyjson_get_type(mval);"
    },
    {
        "line": 5,
        "fullcodeline": "if (type == YYJSON_TYPE_ARR || type == YYJSON_TYPE_OBJ) {"
    },
    {
        "line": 6,
        "fullcodeline": "yyjson_mut_val *child = (yyjson_mut_val *)mval->uni.ptr;"
    },
    {
        "line": 7,
        "fullcodeline": "usize len = unsafe_yyjson_get_len(mval), i;"
    },
    {
        "line": 8,
        "fullcodeline": "usize val_sum = 1;"
    },
    {
        "line": 15,
        "fullcodeline": "*val_ptr = val + 1;"
    },
    {
        "line": 20,
        "fullcodeline": "val->tag = mval->tag;"
    },
    {
        "line": 21,
        "fullcodeline": "val->uni.ofs = val_sum * sizeof(yyjson_val);"
    },
    {
        "line": 9,
        "fullcodeline": "if (type == YYJSON_TYPE_OBJ) {"
    },
    {
        "line": 16,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 11,
        "fullcodeline": "len <<= 1;"
    },
    {
        "line": 17,
        "fullcodeline": "val_sum += yyjson_imut_copy(val_ptr, buf_ptr, child);"
    },
    {
        "line": 18,
        "fullcodeline": "child = child->next;"
    },
    {
        "line": 23,
        "fullcodeline": "} else if (type == YYJSON_TYPE_STR || type == YYJSON_TYPE_RAW) {"
    },
    {
        "line": 24,
        "fullcodeline": "char *buf = *buf_ptr;"
    },
    {
        "line": 25,
        "fullcodeline": "usize len = unsafe_yyjson_get_len(mval);"
    },
    {
        "line": 26,
        "fullcodeline": "memcpy((void *)buf, (const void *)mval->uni.str, len);"
    },
    {
        "line": 27,
        "fullcodeline": "buf[len] = '\\0';"
    },
    {
        "line": 28,
        "fullcodeline": "val->tag = mval->tag;"
    },
    {
        "line": 10,
        "fullcodeline": "if (len) child = child->next->next;"
    },
    {
        "line": 34,
        "fullcodeline": "val->tag = mval->tag;"
    },
    {
        "line": 35,
        "fullcodeline": "val->uni = mval->uni;"
    },
    {
        "line": 13,
        "fullcodeline": "if (len) child = child->next;"
    }
]