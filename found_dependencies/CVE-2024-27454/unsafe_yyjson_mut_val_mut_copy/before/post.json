[
    {
        "line": 11,
        "fullcodeline": "yyjson_mut_val *m_val = unsafe_yyjson_mut_val(m_doc, 1);"
    },
    {
        "line": 13,
        "fullcodeline": "m_val->tag = m_vals->tag;"
    },
    {
        "line": 12,
        "fullcodeline": "if (unlikely(!m_val)) return NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "switch (unsafe_yyjson_get_type(m_vals)) {"
    },
    {
        "line": 44,
        "fullcodeline": "m_val->uni = m_vals->uni;"
    },
    {
        "line": 18,
        "fullcodeline": "if (unsafe_yyjson_get_len(m_vals) > 0) {"
    },
    {
        "line": 37,
        "fullcodeline": "usize str_len = unsafe_yyjson_get_len(m_vals);"
    },
    {
        "line": 38,
        "fullcodeline": "m_val->uni.str = unsafe_yyjson_mut_strncpy(m_doc, str, str_len);"
    },
    {
        "line": 20,
        "fullcodeline": "yyjson_mut_val *next = last->next, *prev;"
    },
    {
        "line": 21,
        "fullcodeline": "prev = unsafe_yyjson_mut_val_mut_copy(m_doc, last);"
    },
    {
        "line": 23,
        "fullcodeline": "m_val->uni.ptr = (void *)prev;"
    },
    {
        "line": 30,
        "fullcodeline": "prev->next = (yyjson_mut_val *)m_val->uni.ptr;"
    },
    {
        "line": 39,
        "fullcodeline": "if (!m_val->uni.str) return NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "if (!prev) return NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "while (next != last) {"
    },
    {
        "line": 25,
        "fullcodeline": "prev->next = unsafe_yyjson_mut_val_mut_copy(m_doc, next);"
    },
    {
        "line": 27,
        "fullcodeline": "prev = prev->next;"
    },
    {
        "line": 28,
        "fullcodeline": "next = next->next;"
    },
    {
        "line": 26,
        "fullcodeline": "if (!prev->next) return NULL;"
    }
]