[
    {
        "line": 17,
        "fullcodeline": "assert(image != (Image *) NULL);"
    },
    {
        "line": 18,
        "fullcodeline": "assert(image->signature == MagickSignature);"
    },
    {
        "line": 43,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 44,
        "fullcodeline": "progress=0;"
    },
    {
        "line": 45,
        "fullcodeline": "image_view=AcquireAuthenticCacheView(image,exception);"
    },
    {
        "line": 19,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 21,
        "fullcodeline": "if (image->storage_class == PseudoClass)"
    },
    {
        "line": 50,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 101,
        "fullcodeline": "image_view=DestroyCacheView(image_view);"
    },
    {
        "line": 20,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 29,
        "fullcodeline": "q=image->colormap;"
    },
    {
        "line": 60,
        "fullcodeline": "q=GetCacheViewAuthenticPixels(image_view,0,y,image->columns,1,exception);"
    },
    {
        "line": 30,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 38,
        "fullcodeline": "return(SyncImage(image,exception));"
    },
    {
        "line": 58,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 61,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 66,
        "fullcodeline": "for (x=0; x < (ssize_t) image->columns; x++)"
    },
    {
        "line": 86,
        "fullcodeline": "if (SyncCacheViewAuthenticPixels(image_view,exception) == MagickFalse)"
    },
    {
        "line": 88,
        "fullcodeline": "if (image->progress_monitor != (MagickProgressMonitor) NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "q->red=(double) ClampPixel(q->red);"
    },
    {
        "line": 33,
        "fullcodeline": "q->green=(double) ClampPixel(q->green);"
    },
    {
        "line": 34,
        "fullcodeline": "q->blue=(double) ClampPixel(q->blue);"
    },
    {
        "line": 35,
        "fullcodeline": "q->alpha=(double) ClampPixel(q->alpha);"
    },
    {
        "line": 36,
        "fullcodeline": "q++;"
    },
    {
        "line": 63,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 84,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 87,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 96,
        "fullcodeline": "proceed=SetImageProgress(image,ClampImageTag,progress++,image->rows);"
    },
    {
        "line": 76,
        "fullcodeline": "for (i=0; i < (ssize_t) GetPixelChannels(image); i++)"
    },
    {
        "line": 97,
        "fullcodeline": "if (proceed == MagickFalse)"
    },
    {
        "line": 71,
        "fullcodeline": "if (GetPixelReadMask(image,q) == 0)"
    },
    {
        "line": 73,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 78,
        "fullcodeline": "PixelChannel channel=GetPixelChannelChannel(image,i);"
    },
    {
        "line": 79,
        "fullcodeline": "PixelTrait traits=GetPixelChannelTraits(image,channel);"
    },
    {
        "line": 82,
        "fullcodeline": "q[i]=ClampPixel(q[i]);"
    },
    {
        "line": 98,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 80,
        "fullcodeline": "if ((traits & UpdatePixelTrait) == 0)"
    }
]