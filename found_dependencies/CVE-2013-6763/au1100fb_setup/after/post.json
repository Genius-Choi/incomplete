[
    {
        "line": 4,
        "fullcodeline": "int num_panels = ARRAY_SIZE(known_lcd_panels);"
    },
    {
        "line": 39,
        "fullcodeline": "print_info(\"Panel=%s\", fbdev->panel->name);"
    },
    {
        "line": 6,
        "fullcodeline": "if (num_panels <= 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (fb_get_options(DRIVER_NAME, &options))"
    },
    {
        "line": 13,
        "fullcodeline": "if (!options)"
    },
    {
        "line": 16,
        "fullcodeline": "while ((this_opt = strsep(&options, \",\")) != NULL) {"
    },
    {
        "line": 7,
        "fullcodeline": "print_err(\"No LCD panels supported by driver!\");"
    },
    {
        "line": 8,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 12,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 14,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 18,
        "fullcodeline": "if (!strncmp(this_opt, \"panel:\", 6)) {"
    },
    {
        "line": 20,
        "fullcodeline": "this_opt += 6;"
    },
    {
        "line": 21,
        "fullcodeline": "for (i = 0; i < num_panels; i++) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (i >= num_panels) {"
    },
    {
        "line": 36,
        "fullcodeline": "print_warn(\"Unsupported option \\\"%s\\\"\", this_opt);"
    },
    {
        "line": 30,
        "fullcodeline": "print_warn(\"Panel '%s' not supported!\", this_opt);"
    },
    {
        "line": 22,
        "fullcodeline": "if (!strncmp(this_opt, known_lcd_panels[i].name,"
    },
    {
        "line": 31,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 24,
        "fullcodeline": "fbdev->panel = &known_lcd_panels[i];"
    },
    {
        "line": 25,
        "fullcodeline": "fbdev->panel_idx = i;"
    },
    {
        "line": 23,
        "fullcodeline": "strlen(this_opt))) {"
    }
]