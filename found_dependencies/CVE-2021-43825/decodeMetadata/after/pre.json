[
    {
        "line": 3,
        "fullcodeline": "std::list<ActiveStreamDecoderFilterPtr>::iterator entry ="
    },
    {
        "line": 4,
        "fullcodeline": "commonDecodePrefix(filter, FilterIterationStartState::CanStartFromCurrent);"
    },
    {
        "line": 6,
        "fullcodeline": "for (; entry != decoder_filters_.end(); entry++) {"
    },
    {
        "line": 20,
        "fullcodeline": "FilterMetadataStatus status = (*entry)->handle_->decodeMetadata(metadata_map);"
    },
    {
        "line": 21,
        "fullcodeline": "ENVOY_STREAM_LOG(trace, \"decode metadata called: filter={} status={}, metadata: {}\", *this,"
    },
    {
        "line": 7,
        "fullcodeline": "if ((*entry)->skipFilter()) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (!(*entry)->decode_headers_called_ || (*entry)->stoppedAll()) {"
    },
    {
        "line": 22,
        "fullcodeline": "static_cast<const void*>((*entry).get()), static_cast<uint64_t>(status),"
    },
    {
        "line": 15,
        "fullcodeline": "Http::MetadataMapPtr metadata_map_ptr = std::make_unique<Http::MetadataMap>(metadata_map);"
    },
    {
        "line": 16,
        "fullcodeline": "(*entry)->getSavedRequestMetadata()->emplace_back(std::move(metadata_map_ptr));"
    }
]