[
    {
        "line": 2,
        "fullcodeline": "Message = apps.get_model(\"zerver\", \"message\")"
    },
    {
        "line": 3,
        "fullcodeline": "UserMessage = apps.get_model(\"zerver\", \"usermessage\")"
    },
    {
        "line": 4,
        "fullcodeline": "Stream = apps.get_model(\"zerver\", \"stream\")"
    },
    {
        "line": 6,
        "fullcodeline": "messages = Message.objects.raw("
    },
    {
        "line": 9,
        "fullcodeline": "if len(messages) == 0:  # RawQuerySet does not have .exists() or .count()"
    },
    {
        "line": 12,
        "fullcodeline": "with ExitStack() as stack:"
    },
    {
        "line": 20,
        "fullcodeline": "stack.enter_context(redirect_stdout(log_file))"
    },
    {
        "line": 22,
        "fullcodeline": "for message in messages:"
    },
    {
        "line": 14,
        "fullcodeline": "log_file: TextIO = stack.enter_context("
    },
    {
        "line": 18,
        "fullcodeline": "log_file = sys.stderr"
    },
    {
        "line": 19,
        "fullcodeline": "print(\"\", file=log_file)"
    },
    {
        "line": 23,
        "fullcodeline": "realm = message.realm"
    },
    {
        "line": 32,
        "fullcodeline": "stream = Stream.objects.only(\"id\").get(recipient_id=message.recipient_id)"
    },
    {
        "line": 41,
        "fullcodeline": "ums = ("
    },
    {
        "line": 15,
        "fullcodeline": "open(\"/var/log/zulip/migrations_0501_delete_dangling_usermessages.log\", \"w\")"
    },
    {
        "line": 25,
        "fullcodeline": "if realm.string_id == \"\":"
    },
    {
        "line": 34,
        "fullcodeline": "f\"{settings.EXTERNAL_URI_SCHEME}{hostname}/#narrow/stream/{stream.id}/near/{message.id}\","
    },
    {
        "line": 37,
        "fullcodeline": "f\"    Moved at {message.timestamp_moved} from stream id {message.moved_from_stream_id} to {message.moved_to_stream_id}\""
    },
    {
        "line": 49,
        "fullcodeline": "f\"    Was still readable by {len(ums)} users, {len(message.extra_usermessage_ids) - len(ums)} bots\","
    },
    {
        "line": 53,
        "fullcodeline": "for um in ums:"
    },
    {
        "line": 26,
        "fullcodeline": "hostname = settings.EXTERNAL_HOST"
    },
    {
        "line": 28,
        "fullcodeline": "hostname = settings.REALM_HOSTS.get("
    },
    {
        "line": 42,
        "fullcodeline": "UserMessage.objects.filter("
    },
    {
        "line": 51,
        "fullcodeline": "if len(message.extra_usermessage_ids) > 25:"
    },
    {
        "line": 54,
        "fullcodeline": "read = \"(read)\" if um.flags & 1 else \"(unread)\""
    },
    {
        "line": 55,
        "fullcodeline": "print(f\"        {um.user_profile.delivery_email} {read}\")"
    },
    {
        "line": 29,
        "fullcodeline": "realm.string_id, f\"{realm.string_id}.{settings.EXTERNAL_HOST}\""
    }
]