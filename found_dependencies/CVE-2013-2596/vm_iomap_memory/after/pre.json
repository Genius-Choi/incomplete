[
    {
        "line": 13,
        "fullcodeline": "len += start & ~PAGE_MASK;"
    },
    {
        "line": 14,
        "fullcodeline": "pfn = start >> PAGE_SHIFT;"
    },
    {
        "line": 15,
        "fullcodeline": "pages = (len + ~PAGE_MASK) >> PAGE_SHIFT;"
    },
    {
        "line": 22,
        "fullcodeline": "pfn += vma->vm_pgoff;"
    },
    {
        "line": 23,
        "fullcodeline": "pages -= vma->vm_pgoff;"
    },
    {
        "line": 26,
        "fullcodeline": "vm_len = vma->vm_end - vma->vm_start;"
    },
    {
        "line": 6,
        "fullcodeline": "if (start + len < start)"
    },
    {
        "line": 16,
        "fullcodeline": "if (pfn + pages < pfn)"
    },
    {
        "line": 20,
        "fullcodeline": "if (vma->vm_pgoff > pages)"
    },
    {
        "line": 31,
        "fullcodeline": "return io_remap_pfn_range(vma, vma->vm_start, pfn, vm_len, vma->vm_page_prot);"
    },
    {
        "line": 27,
        "fullcodeline": "if (vm_len >> PAGE_SHIFT > pages)"
    },
    {
        "line": 7,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 17,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 21,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 28,
        "fullcodeline": "return -EINVAL;"
    }
]