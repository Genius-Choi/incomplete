[
    {
        "line": 3,
        "fullcodeline": "char *args, szSubArgs[1024], szExt[30];"
    },
    {
        "line": 4,
        "fullcodeline": "GF_Filter *file_out, *reframer, *remux=NULL, *src_filter;"
    },
    {
        "line": 6,
        "fullcodeline": "GF_Err e = GF_OK;"
    },
    {
        "line": 7,
        "fullcodeline": "u32 codec_id=0;"
    },
    {
        "line": 8,
        "fullcodeline": "u32 sample_count=0;"
    },
    {
        "line": 9,
        "fullcodeline": "Bool skip_write_filter = GF_FALSE;"
    },
    {
        "line": 10,
        "fullcodeline": "Bool ext_forced = GF_FALSE;"
    },
    {
        "line": 11,
        "fullcodeline": "Bool use_dynext = GF_FALSE;"
    },
    {
        "line": 13,
        "fullcodeline": "args = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "strcpy(szExt, \"\");"
    },
    {
        "line": 145,
        "fullcodeline": "fsess = gf_fs_new_defaults(0);"
    },
    {
        "line": 150,
        "fullcodeline": "file_out = NULL;"
    },
    {
        "line": 151,
        "fullcodeline": "args = NULL;"
    },
    {
        "line": 229,
        "fullcodeline": "args = NULL;"
    },
    {
        "line": 287,
        "fullcodeline": "args = NULL;"
    },
    {
        "line": 290,
        "fullcodeline": "e = gf_dynstrcat(&args, \"reframer:SID=1\", NULL);"
    },
    {
        "line": 295,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":exporter\", NULL);"
    },
    {
        "line": 301,
        "fullcodeline": "reframer = gf_fs_load_filter(fsess, args, &e);"
    },
    {
        "line": 309,
        "fullcodeline": "args = NULL;"
    },
    {
        "line": 354,
        "fullcodeline": "e = gf_fs_run(fsess);"
    },
    {
        "line": 365,
        "fullcodeline": "gf_fs_print_non_connected(fsess);"
    },
    {
        "line": 15,
        "fullcodeline": "if (dumper->trackID && dumper->file) {"
    },
    {
        "line": 146,
        "fullcodeline": "if (!fsess) {"
    },
    {
        "line": 153,
        "fullcodeline": "if (dumper->flags & GF_EXPORT_REMUX) {"
    },
    {
        "line": 232,
        "fullcodeline": "if (dumper->flags & GF_EXPORT_RAW_SAMPLES) {"
    },
    {
        "line": 296,
        "fullcodeline": "if (dumper->flags & GF_EXPORT_SVC_LAYER)"
    },
    {
        "line": 298,
        "fullcodeline": "if (dumper->flags & GF_EXPORT_WEBVTT_NOMERGE)"
    },
    {
        "line": 302,
        "fullcodeline": "if (!reframer || e) {"
    },
    {
        "line": 330,
        "fullcodeline": "if (!src_filter || e) {"
    },
    {
        "line": 355,
        "fullcodeline": "if (e>GF_OK) e = GF_OK;"
    },
    {
        "line": 356,
        "fullcodeline": "if (!e) e = gf_fs_get_last_connect_error(fsess);"
    },
    {
        "line": 357,
        "fullcodeline": "if (!e) e = gf_fs_get_last_process_error(fsess);"
    },
    {
        "line": 359,
        "fullcodeline": "if (!e) {"
    },
    {
        "line": 366,
        "fullcodeline": "if (dumper->print_stats_graph & 1) gf_fs_print_stats(fsess);"
    },
    {
        "line": 16,
        "fullcodeline": "u32 msubtype = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "u32 mtype = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "u32 afmt = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "GF_PixelFormat pfmt = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "const char *export_ext = dumper->out_name ? gf_file_ext_start(dumper->out_name) : NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "u32 track_num = gf_isom_get_track_by_id(dumper->file, dumper->trackID);"
    },
    {
        "line": 27,
        "fullcodeline": "esd = gf_media_map_esd(dumper->file, track_num, 0);"
    },
    {
        "line": 28,
        "fullcodeline": "sample_count = gf_isom_get_sample_count(dumper->file, dumper->trackID);"
    },
    {
        "line": 154,
        "fullcodeline": "file_out = gf_fs_load_destination(fsess, dumper->out_name, NULL, NULL, &e);"
    },
    {
        "line": 233,
        "fullcodeline": "e = gf_dynstrcat(&args, \"writegen:frame\", NULL);"
    },
    {
        "line": 238,
        "fullcodeline": "remux = e ? NULL : gf_fs_load_filter(fsess, args, &e);"
    },
    {
        "line": 292,
        "fullcodeline": "sprintf(szSubArgs, \"#PID=%d\", dumper->trackID);"
    },
    {
        "line": 293,
        "fullcodeline": "e |= gf_dynstrcat(&args, szSubArgs, NULL);"
    },
    {
        "line": 297,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":extract=layer\", NULL);"
    },
    {
        "line": 299,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":merge\", NULL);"
    },
    {
        "line": 314,
        "fullcodeline": "e = gf_dynstrcat(&args, \"mp4dmx:FID=1:noedit:alltk:allt\", NULL);"
    },
    {
        "line": 321,
        "fullcodeline": "src_filter = gf_fs_load_filter(fsess, args, &e);"
    },
    {
        "line": 337,
        "fullcodeline": "const char *mtype = (dumper->track_type==1) ? \"video\" : \"audio\";"
    },
    {
        "line": 348,
        "fullcodeline": "gf_filter_set_source(file_out, remux, (dumper->trackID || dumper->track_type) ? szSubArgs : NULL);"
    },
    {
        "line": 367,
        "fullcodeline": "if (dumper->print_stats_graph & 2) gf_fs_print_connections(fsess);"
    },
    {
        "line": 23,
        "fullcodeline": "if (!track_num) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (esd && esd->decoderConfig) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (!codec_id) {"
    },
    {
        "line": 48,
        "fullcodeline": "mtype = gf_isom_get_media_type(dumper->file, track_num);"
    },
    {
        "line": 49,
        "fullcodeline": "if (!codec_id) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (!codec_id) {"
    },
    {
        "line": 122,
        "fullcodeline": "if (codec_id==GF_CODECID_SUBPIC) {"
    },
    {
        "line": 139,
        "fullcodeline": "const char *export_ext = dumper->out_name ? gf_file_ext_start(dumper->out_name) : NULL;"
    },
    {
        "line": 140,
        "fullcodeline": "skip_write_filter = GF_TRUE;"
    },
    {
        "line": 155,
        "fullcodeline": "if (!file_out) {"
    },
    {
        "line": 239,
        "fullcodeline": "if (!remux || e) {"
    },
    {
        "line": 306,
        "fullcodeline": "return e ? e : GF_FILTER_NOT_FOUND;"
    },
    {
        "line": 315,
        "fullcodeline": "if (!e) {"
    },
    {
        "line": 327,
        "fullcodeline": "src_filter = gf_fs_load_source(fsess, dumper->in_name, \"FID=1:noedit:alltk:allt\", NULL, &e);"
    },
    {
        "line": 332,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_AUTHOR, (\"[Exporter] Cannot load filter for input file \\\"%s\\\": %s\\n\", dumper->in_name, gf_error_to_string(e) ));"
    },
    {
        "line": 24,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_AUTHOR, (\"[Exporter] No tracks with ID %d in file\\n\", dumper->trackID));"
    },
    {
        "line": 45,
        "fullcodeline": "msubtype = gf_isom_get_media_subtype(dumper->file, track_num, 1);"
    },
    {
        "line": 46,
        "fullcodeline": "codec_id = gf_codec_id_from_isobmf(msubtype);"
    },
    {
        "line": 50,
        "fullcodeline": "pfmt = gf_pixel_fmt_from_qt_type(msubtype);"
    },
    {
        "line": 55,
        "fullcodeline": "strcpy(szExt, gf_4cc_to_str(msubtype));"
    },
    {
        "line": 91,
        "fullcodeline": "skip_write_filter = codec_id ? GF_TRUE : GF_FALSE;"
    },
    {
        "line": 111,
        "fullcodeline": "if ((codec_id==GF_CODECID_VORBIS) || (codec_id==GF_CODECID_THEORA) || (codec_id==GF_CODECID_OPUS)) {"
    },
    {
        "line": 112,
        "fullcodeline": "char *outname = dumper->out_name;"
    },
    {
        "line": 124,
        "fullcodeline": "char *dsi = NULL;"
    },
    {
        "line": 125,
        "fullcodeline": "u32 dsi_size = 0;"
    },
    {
        "line": 130,
        "fullcodeline": "e = gf_dump_to_vobsub(dumper, dumper->out_name, track_num, dsi, dsi_size);"
    },
    {
        "line": 162,
        "fullcodeline": "else if (!dumper->dump_file) {"
    },
    {
        "line": 235,
        "fullcodeline": "sprintf(szSubArgs, \":sstart=%d:send=%d\", dumper->sample_num, dumper->sample_num);"
    },
    {
        "line": 236,
        "fullcodeline": "e |= gf_dynstrcat(&args, szSubArgs, NULL);"
    },
    {
        "line": 246,
        "fullcodeline": "else if (dumper->flags & GF_EXPORT_NHNT) {"
    },
    {
        "line": 316,
        "fullcodeline": "sprintf(szSubArgs, \":mov=%p\", dumper->file);"
    },
    {
        "line": 317,
        "fullcodeline": "e = gf_dynstrcat(&args, szSubArgs, NULL);"
    },
    {
        "line": 339,
        "fullcodeline": "sprintf(szSubArgs, \"%s%d\", mtype, dumper->trackID);"
    },
    {
        "line": 361,
        "fullcodeline": "gf_fs_print_unused_args(fsess, NULL);"
    },
    {
        "line": 30,
        "fullcodeline": "if (esd->decoderConfig->objectTypeIndication<GF_CODECID_LAST_MPEG4_MAPPING) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (outname && !strcmp(outname, \"std\")) outname=NULL;"
    },
    {
        "line": 116,
        "fullcodeline": "return gf_dump_to_ogg(dumper, outname, track_num);"
    },
    {
        "line": 142,
        "fullcodeline": "use_dynext = GF_TRUE;"
    },
    {
        "line": 157,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_AUTHOR, (\"[Exporter] Cannot open destination %s\\n\", dumper->out_name));"
    },
    {
        "line": 163,
        "fullcodeline": "Bool no_ext = (dumper->flags & GF_EXPORT_NO_FILE_EXT) ? GF_TRUE : GF_FALSE;"
    },
    {
        "line": 164,
        "fullcodeline": "char *ext = gf_file_ext_start(dumper->out_name);"
    },
    {
        "line": 166,
        "fullcodeline": "e = gf_dynstrcat(&args, \"fout:dst=\", NULL);"
    },
    {
        "line": 167,
        "fullcodeline": "e |= gf_dynstrcat(&args, dumper->out_name, NULL);"
    },
    {
        "line": 220,
        "fullcodeline": "file_out = gf_fs_load_filter(fsess, args, &e);"
    },
    {
        "line": 243,
        "fullcodeline": "return e ? e : GF_FILTER_NOT_FOUND;"
    },
    {
        "line": 247,
        "fullcodeline": "remux = gf_fs_load_filter(fsess, \"nhntw:exporter\", &e);"
    },
    {
        "line": 341,
        "fullcodeline": "sprintf(szSubArgs, \"%s\", mtype);"
    },
    {
        "line": 345,
        "fullcodeline": "sprintf(szSubArgs, \"PID=%d\", dumper->trackID);"
    },
    {
        "line": 363,
        "fullcodeline": "gf_fs_print_unused_args(fsess, \"alltk,allt,noedit\");"
    },
    {
        "line": 31,
        "fullcodeline": "codec_id = gf_codecid_from_oti(esd->decoderConfig->streamType, esd->decoderConfig->objectTypeIndication);"
    },
    {
        "line": 51,
        "fullcodeline": "if (pfmt) codec_id = GF_CODECID_RAW;"
    },
    {
        "line": 57,
        "fullcodeline": "} else if (codec_id==GF_CODECID_RAW) {"
    },
    {
        "line": 96,
        "fullcodeline": "skip_write_filter = GF_TRUE;"
    },
    {
        "line": 104,
        "fullcodeline": "szExt[0] = 0;"
    },
    {
        "line": 105,
        "fullcodeline": "use_dynext = GF_TRUE;"
    },
    {
        "line": 126,
        "fullcodeline": "if (esd && esd->decoderConfig && esd->decoderConfig->decoderSpecificInfo) {"
    },
    {
        "line": 127,
        "fullcodeline": "dsi = esd->decoderConfig->decoderSpecificInfo->data;"
    },
    {
        "line": 128,
        "fullcodeline": "dsi_size = esd->decoderConfig->decoderSpecificInfo->dataLength;"
    },
    {
        "line": 169,
        "fullcodeline": "if (dumper->flags & GF_EXPORT_NHNT) {"
    },
    {
        "line": 183,
        "fullcodeline": "if (dumper->flags & GF_EXPORT_RAW_SAMPLES) {"
    },
    {
        "line": 221,
        "fullcodeline": "if (!file_out) {"
    },
    {
        "line": 248,
        "fullcodeline": "if (!remux) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (esd->decoderConfig->decoderSpecificInfo && (codec_id==GF_CODECID_AAC_MPEG4)) {"
    },
    {
        "line": 41,
        "fullcodeline": "codec_id = esd->decoderConfig->objectTypeIndication;"
    },
    {
        "line": 170,
        "fullcodeline": "strcpy(szExt, \"nhnt\");"
    },
    {
        "line": 171,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":clone\", NULL);"
    },
    {
        "line": 172,
        "fullcodeline": "no_ext = GF_TRUE;"
    },
    {
        "line": 198,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":dynext\", NULL);"
    },
    {
        "line": 254,
        "fullcodeline": "else if (dumper->flags & GF_EXPORT_NHML) {"
    },
    {
        "line": 35,
        "fullcodeline": "gf_m4a_get_config(esd->decoderConfig->decoderSpecificInfo->data, esd->decoderConfig->decoderSpecificInfo->dataLength, &acfg);"
    },
    {
        "line": 75,
        "fullcodeline": "const char *sname = gf_codecid_file_ext(codec_id);"
    },
    {
        "line": 184,
        "fullcodeline": "if (!dumper->sample_num) {"
    },
    {
        "line": 255,
        "fullcodeline": "e = gf_dynstrcat(&args, \"nhmlw:exporter:name=\", NULL);"
    },
    {
        "line": 256,
        "fullcodeline": "e |= gf_dynstrcat(&args, dumper->out_name, NULL);"
    },
    {
        "line": 263,
        "fullcodeline": "remux = e ? NULL : gf_fs_load_filter(fsess, args, &e);"
    },
    {
        "line": 36,
        "fullcodeline": "if (acfg.base_object_type == GF_M4A_USAC)"
    },
    {
        "line": 66,
        "fullcodeline": "afmt = gf_audio_fmt_from_isobmf(msubtype);"
    },
    {
        "line": 71,
        "fullcodeline": "strcpy(szExt, gf_4cc_to_str(msubtype));"
    },
    {
        "line": 174,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":dynext\", NULL);"
    },
    {
        "line": 175,
        "fullcodeline": "} else if (dumper->flags & GF_EXPORT_NHML) {"
    },
    {
        "line": 195,
        "fullcodeline": "ext = gf_file_ext_start(dumper->out_name);"
    },
    {
        "line": 199,
        "fullcodeline": "} else if (dumper->trackID && strlen(szExt) ) {"
    },
    {
        "line": 257,
        "fullcodeline": "if (dumper->flags & GF_EXPORT_NHML_FULL)"
    },
    {
        "line": 264,
        "fullcodeline": "if (!remux || e) {"
    },
    {
        "line": 37,
        "fullcodeline": "codec_id = GF_CODECID_USAC;"
    },
    {
        "line": 76,
        "fullcodeline": "if (export_ext && strstr(sname, export_ext+1)) {"
    },
    {
        "line": 77,
        "fullcodeline": "szExt[0]=0;"
    },
    {
        "line": 176,
        "fullcodeline": "strcpy(szExt, \"nhml\");"
    },
    {
        "line": 177,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":clone\", NULL);"
    },
    {
        "line": 178,
        "fullcodeline": "no_ext = GF_TRUE;"
    },
    {
        "line": 186,
        "fullcodeline": "ext = gf_file_ext_start(args);"
    },
    {
        "line": 258,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":pckp\", NULL);"
    },
    {
        "line": 260,
        "fullcodeline": "sprintf(szSubArgs, \":nhmlonly:filep=%p\", dumper->dump_file);"
    },
    {
        "line": 261,
        "fullcodeline": "e |= gf_dynstrcat(&args, szSubArgs, NULL);"
    },
    {
        "line": 63,
        "fullcodeline": "strcpy(szExt, gf_pixel_fmt_sname(pfmt));"
    },
    {
        "line": 68,
        "fullcodeline": "strcpy(szExt, gf_audio_fmt_name(afmt));"
    },
    {
        "line": 80,
        "fullcodeline": "strncpy(szExt, sname, 29);"
    },
    {
        "line": 81,
        "fullcodeline": "szExt[29]=0;"
    },
    {
        "line": 187,
        "fullcodeline": "if (ext) ext[0] = 0;"
    },
    {
        "line": 189,
        "fullcodeline": "e |= gf_dynstrcat(&args, \"_$num%08d$\", NULL);"
    },
    {
        "line": 196,
        "fullcodeline": "if (ext) e |= gf_dynstrcat(&args, ext, NULL);"
    },
    {
        "line": 268,
        "fullcodeline": "return e ? e : GF_FILTER_NOT_FOUND;"
    },
    {
        "line": 271,
        "fullcodeline": "e = gf_dynstrcat(&args, \"writegen:exporter\", NULL);"
    },
    {
        "line": 278,
        "fullcodeline": "remux = e ? NULL : gf_fs_load_filter(fsess, args, &e);"
    },
    {
        "line": 82,
        "fullcodeline": "sep = strchr(szExt, '|');"
    },
    {
        "line": 180,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":dynext\", NULL);"
    },
    {
        "line": 200,
        "fullcodeline": "if (!no_ext && !gf_file_ext_start(dumper->out_name)) {"
    },
    {
        "line": 202,
        "fullcodeline": "args=NULL;"
    },
    {
        "line": 203,
        "fullcodeline": "e = gf_dynstrcat(&args, \"fout:dst=\", NULL);"
    },
    {
        "line": 204,
        "fullcodeline": "e |= gf_dynstrcat(&args, dumper->out_name, NULL);"
    },
    {
        "line": 205,
        "fullcodeline": "e |= gf_dynstrcat(&args, szExt, \".\");"
    },
    {
        "line": 279,
        "fullcodeline": "if (!remux) {"
    },
    {
        "line": 207,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":ext=\", NULL);"
    },
    {
        "line": 208,
        "fullcodeline": "e |= gf_dynstrcat(&args, szExt, NULL);"
    },
    {
        "line": 210,
        "fullcodeline": "} else if ((dumper->trackID || dumper->track_type) && use_dynext) {"
    },
    {
        "line": 211,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":dynext\", NULL);"
    },
    {
        "line": 274,
        "fullcodeline": "e |= gf_dynstrcat(&args, \":#Extension=\", NULL);"
    },
    {
        "line": 275,
        "fullcodeline": "e |= gf_dynstrcat(&args, szExt, NULL);"
    },
    {
        "line": 191,
        "fullcodeline": "e |= gf_dynstrcat(&args, \"_$num%03d$\", NULL);"
    },
    {
        "line": 193,
        "fullcodeline": "e |= gf_dynstrcat(&args, \"_$num$\", NULL);"
    }
]