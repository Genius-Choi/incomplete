[
    {
        "line": 3,
        "fullcodeline": "GF_Err e = GF_NOT_SUPPORTED;"
    },
    {
        "line": 4,
        "fullcodeline": "char *ext, szExt[50];"
    },
    {
        "line": 6,
        "fullcodeline": "if (!load || (!load->ctx && !load->scene_graph)"
    },
    {
        "line": 12,
        "fullcodeline": "if (!load->type) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (!load->type) return e;"
    },
    {
        "line": 61,
        "fullcodeline": "if (!load->scene_graph) load->scene_graph = load->ctx->scene_graph;"
    },
    {
        "line": 8,
        "fullcodeline": "|| (!load->fileName && !load->isom && !(load->flags & GF_SM_LOAD_FOR_PLAYBACK) )"
    },
    {
        "line": 84,
        "fullcodeline": "e = gf_sm_load_init_xbl(load);"
    },
    {
        "line": 86,
        "fullcodeline": "load->process = gf_sm_load_run_xbl;"
    },
    {
        "line": 87,
        "fullcodeline": "load->done = gf_sm_load_done_xbl;"
    },
    {
        "line": 68,
        "fullcodeline": "return gf_sm_load_init_bt(load);"
    },
    {
        "line": 74,
        "fullcodeline": "return gf_sm_load_init_xmt(load);"
    },
    {
        "line": 81,
        "fullcodeline": "return gf_sm_load_init_svg(load);"
    },
    {
        "line": 93,
        "fullcodeline": "return gf_sm_load_init_swf(load);"
    },
    {
        "line": 98,
        "fullcodeline": "return gf_sm_load_init_isom(load);"
    },
    {
        "line": 103,
        "fullcodeline": "return gf_sm_load_init_qt(load);"
    },
    {
        "line": 15,
        "fullcodeline": "load->type = GF_SM_LOAD_MP4;"
    },
    {
        "line": 19,
        "fullcodeline": "ext = (char *)strrchr(load->fileName, '.');"
    },
    {
        "line": 32,
        "fullcodeline": "strcpy(szExt, &ext[1]);"
    },
    {
        "line": 33,
        "fullcodeline": "strlwr(szExt);"
    },
    {
        "line": 20,
        "fullcodeline": "if (!ext) return GF_NOT_SUPPORTED;"
    },
    {
        "line": 34,
        "fullcodeline": "if (strstr(szExt, \"bt\")) load->type = GF_SM_LOAD_BT;"
    },
    {
        "line": 21,
        "fullcodeline": "if (!stricmp(ext, \".gz\")) {"
    },
    {
        "line": 24,
        "fullcodeline": "anext = (char *)strrchr(load->fileName, '.');"
    },
    {
        "line": 25,
        "fullcodeline": "ext[0] = '.';"
    },
    {
        "line": 26,
        "fullcodeline": "ext = anext;"
    },
    {
        "line": 28,
        "fullcodeline": "if (strlen(ext) < 2 || strlen(ext) > sizeof(szExt)) {"
    },
    {
        "line": 29,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_SCENE, (\"[Scene Manager] invalid extension in file name %s\\n\", load->fileName));"
    },
    {
        "line": 35,
        "fullcodeline": "else if (strstr(szExt, \"wrl\")) load->type = GF_SM_LOAD_VRML;"
    },
    {
        "line": 36,
        "fullcodeline": "else if (strstr(szExt, \"x3dv\")) load->type = GF_SM_LOAD_X3DV;"
    },
    {
        "line": 38,
        "fullcodeline": "else if (strstr(szExt, \"xmt\") || strstr(szExt, \"xmta\")) load->type = GF_SM_LOAD_XMTA;"
    },
    {
        "line": 39,
        "fullcodeline": "else if (strstr(szExt, \"x3d\")) load->type = GF_SM_LOAD_X3D;"
    },
    {
        "line": 41,
        "fullcodeline": "else if (strstr(szExt, \"swf\")) load->type = GF_SM_LOAD_SWF;"
    },
    {
        "line": 42,
        "fullcodeline": "else if (strstr(szExt, \"mov\")) load->type = GF_SM_LOAD_QT;"
    },
    {
        "line": 43,
        "fullcodeline": "else if (strstr(szExt, \"svg\")) load->type = GF_SM_LOAD_SVG;"
    },
    {
        "line": 44,
        "fullcodeline": "else if (strstr(szExt, \"xsr\")) load->type = GF_SM_LOAD_XSR;"
    },
    {
        "line": 45,
        "fullcodeline": "else if (strstr(szExt, \"xbl\")) load->type = GF_SM_LOAD_XBL;"
    },
    {
        "line": 47,
        "fullcodeline": "char *rtype = gf_xml_get_root_type(load->fileName, &e);"
    },
    {
        "line": 49,
        "fullcodeline": "if (!strcmp(rtype, \"SAFSession\")) load->type = GF_SM_LOAD_XSR;"
    },
    {
        "line": 50,
        "fullcodeline": "else if (!strcmp(rtype, \"XMT-A\")) load->type = GF_SM_LOAD_XMTA;"
    },
    {
        "line": 51,
        "fullcodeline": "else if (!strcmp(rtype, \"X3D\")) load->type = GF_SM_LOAD_X3D;"
    },
    {
        "line": 52,
        "fullcodeline": "else if (!strcmp(rtype, \"bindings\")) load->type = GF_SM_LOAD_XBL;"
    }
]