[
    {
        "line": 9,
        "fullcodeline": "krb5_error_code retval = KRB5KDC_ERR_PREAUTH_FAILED;"
    },
    {
        "line": 10,
        "fullcodeline": "PKCS7_ISSUER_AND_SERIAL *is = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "const unsigned char *p = pdid_buf;"
    },
    {
        "line": 12,
        "fullcodeline": "int status = 1;"
    },
    {
        "line": 13,
        "fullcodeline": "X509 *kdc_cert = sk_X509_value(id_cryptoctx->my_certs, id_cryptoctx->cert_index);"
    },
    {
        "line": 15,
        "fullcodeline": "*valid_kdcPkId = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "pkiDebug(\"found kdcPkId in AS REQ\\n\");"
    },
    {
        "line": 17,
        "fullcodeline": "is = d2i_PKCS7_ISSUER_AND_SERIAL(NULL, &p, (int)pkid_len);"
    },
    {
        "line": 21,
        "fullcodeline": "status = X509_NAME_cmp(X509_get_issuer_name(kdc_cert), is->issuer);"
    },
    {
        "line": 28,
        "fullcodeline": "retval = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "X509_NAME_free(is->issuer);"
    },
    {
        "line": 30,
        "fullcodeline": "ASN1_INTEGER_free(is->serial);"
    },
    {
        "line": 31,
        "fullcodeline": "free(is);"
    },
    {
        "line": 18,
        "fullcodeline": "if (is == NULL)"
    },
    {
        "line": 22,
        "fullcodeline": "if (!status) {"
    },
    {
        "line": 23,
        "fullcodeline": "status = ASN1_INTEGER_cmp(X509_get_serialNumber(kdc_cert), is->serial);"
    },
    {
        "line": 24,
        "fullcodeline": "if (!status)"
    },
    {
        "line": 25,
        "fullcodeline": "*valid_kdcPkId = 1;"
    }
]