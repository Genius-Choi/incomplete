[
    {
        "line": 3,
        "fullcodeline": "INITIALIZE_LIBREPORT();"
    },
    {
        "line": 5,
        "fullcodeline": "char *type = problem_data_get_content_or_NULL(problem_data, FILENAME_ANALYZER);"
    },
    {
        "line": 13,
        "fullcodeline": "uid_t uid = (uid_t)-1L;"
    },
    {
        "line": 14,
        "fullcodeline": "char *uid_str = problem_data_get_content_or_NULL(problem_data, FILENAME_UID);"
    },
    {
        "line": 40,
        "fullcodeline": "log_info(\"Saving to %s/%s with uid %d\", base_dir_name, problem_id, uid);"
    },
    {
        "line": 73,
        "fullcodeline": "g_hash_table_iter_init(&iter, problem_data);"
    },
    {
        "line": 105,
        "fullcodeline": "dd_create_basic_files(dd, uid, NULL);"
    },
    {
        "line": 107,
        "fullcodeline": "problem_id[strlen(problem_id) - strlen(NEW_PD_SUFFIX)] = '\\0';"
    },
    {
        "line": 108,
        "fullcodeline": "char* new_path = concat_path_file(base_dir_name, problem_id);"
    },
    {
        "line": 109,
        "fullcodeline": "log_info(\"Renaming from '%s' to '%s'\", dd->dd_dirname, new_path);"
    },
    {
        "line": 110,
        "fullcodeline": "dd_rename(dd, new_path);"
    },
    {
        "line": 113,
        "fullcodeline": "free(problem_id);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!type)"
    },
    {
        "line": 32,
        "fullcodeline": "if (gettimeofday(&tv, NULL) < 0)"
    },
    {
        "line": 67,
        "fullcodeline": "if (!dd) /* try_dd_create() already emitted the error message */"
    },
    {
        "line": 74,
        "fullcodeline": "while (g_hash_table_iter_next(&iter, (void**)&name, (void**)&value))"
    },
    {
        "line": 9,
        "fullcodeline": "error_msg(_(\"Missing required item: '%s'\"), FILENAME_ANALYZER);"
    },
    {
        "line": 19,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "long val = strtol(uid_str, &endptr, 10);"
    },
    {
        "line": 28,
        "fullcodeline": "uid = (uid_t)val;"
    },
    {
        "line": 34,
        "fullcodeline": "perror_msg(\"gettimeofday()\");"
    },
    {
        "line": 44,
        "fullcodeline": "dd = try_dd_create(base_dir_name, problem_id, uid);"
    },
    {
        "line": 97,
        "fullcodeline": "dd_save_text(dd, name, value->content);"
    },
    {
        "line": 22,
        "fullcodeline": "if (errno != 0 || endptr == uid_str || *endptr != '\\0' || INT_MAX < val)"
    },
    {
        "line": 76,
        "fullcodeline": "if (value->flags & CD_FLAG_BIN)"
    },
    {
        "line": 91,
        "fullcodeline": "if (name[0] == '.' || strchr(name, '/'))"
    },
    {
        "line": 24,
        "fullcodeline": "error_msg(_(\"uid value is not valid: '%s'\"), uid_str);"
    },
    {
        "line": 50,
        "fullcodeline": "if (!dd)"
    },
    {
        "line": 63,
        "fullcodeline": "if (!dd)"
    },
    {
        "line": 78,
        "fullcodeline": "char *dest = concat_path_file(dd->dd_dirname, name);"
    },
    {
        "line": 79,
        "fullcodeline": "log_info(\"copying '%s' to '%s'\", value->content, dest);"
    },
    {
        "line": 80,
        "fullcodeline": "off_t copied = copy_file(value->content, dest, DEFAULT_DUMP_DIR_MODE | S_IROTH);"
    },
    {
        "line": 85,
        "fullcodeline": "free(dest);"
    },
    {
        "line": 93,
        "fullcodeline": "error_msg(\"Problem data field name contains disallowed chars: '%s'\", name);"
    },
    {
        "line": 52,
        "fullcodeline": "char *home = getenv(\"HOME\");"
    },
    {
        "line": 64,
        "fullcodeline": "dd = try_dd_create(LARGE_DATA_TMP_DIR, problem_id, uid);"
    },
    {
        "line": 81,
        "fullcodeline": "if (copied < 0)"
    },
    {
        "line": 53,
        "fullcodeline": "if (home && home[0])"
    },
    {
        "line": 82,
        "fullcodeline": "error_msg(\"Can't copy %s to %s\", value->content, dest);"
    },
    {
        "line": 55,
        "fullcodeline": "home = concat_path_file(home, \"tmp\");"
    },
    {
        "line": 57,
        "fullcodeline": "dd = try_dd_create(home, problem_id, uid);"
    },
    {
        "line": 58,
        "fullcodeline": "free(home);"
    },
    {
        "line": 84,
        "fullcodeline": "log_info(\"copied %li bytes\", (unsigned long)copied);"
    }
]