[
    {
        "line": 4,
        "fullcodeline": "const int64_t first_value = Value(first);"
    },
    {
        "line": 5,
        "fullcodeline": "const int64_t second_value = Value(second);"
    },
    {
        "line": 7,
        "fullcodeline": "if (first_value == 0) {"
    },
    {
        "line": 27,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 8,
        "fullcodeline": "*out = first;"
    },
    {
        "line": 9,
        "fullcodeline": "} else if (second_value == 0) {"
    },
    {
        "line": 10,
        "fullcodeline": "*out = MakeDim(second);"
    },
    {
        "line": 11,
        "fullcodeline": "} else if (first_value == 1) {"
    },
    {
        "line": 12,
        "fullcodeline": "*out = MakeDim(second);"
    },
    {
        "line": 13,
        "fullcodeline": "} else if (second_value == 1) {"
    },
    {
        "line": 14,
        "fullcodeline": "*out = first;"
    },
    {
        "line": 15,
        "fullcodeline": "} else if (first_value == kUnknownDim || second_value == kUnknownDim) {"
    },
    {
        "line": 16,
        "fullcodeline": "*out = UnknownDim();"
    },
    {
        "line": 19,
        "fullcodeline": "const int64_t product = first_value * second_value;"
    },
    {
        "line": 25,
        "fullcodeline": "*out = MakeDim(product);"
    },
    {
        "line": 20,
        "fullcodeline": "if (product < 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "return errors::InvalidArgument("
    }
]