[
    {
        "line": 3,
        "fullcodeline": "x3f_t *x3f = x3f_new_from_file(libraw_internal_data.internal_data.input);"
    },
    {
        "line": 6,
        "fullcodeline": "_x3f_data = x3f;"
    },
    {
        "line": 11,
        "fullcodeline": "H = &x3f->header;"
    },
    {
        "line": 13,
        "fullcodeline": "x3f_directory_entry_t *DE = x3f_get_raw(x3f);"
    },
    {
        "line": 17,
        "fullcodeline": "x3f_image_data_t *ID = &DEH->data_subsection.image_data;"
    },
    {
        "line": 18,
        "fullcodeline": "imgdata.sizes.raw_width = ID->columns;"
    },
    {
        "line": 21,
        "fullcodeline": "DE = x3f_get_prop(x3f);"
    },
    {
        "line": 138,
        "fullcodeline": "LibRaw_thumbnail_formats format = LIBRAW_THUMBNAIL_UNKNOWN;"
    },
    {
        "line": 4,
        "fullcodeline": "if(!x3f)"
    },
    {
        "line": 14,
        "fullcodeline": "if(!DE) return;"
    },
    {
        "line": 22,
        "fullcodeline": "if((x3f_load_data(x3f,DE) == X3F_OK))"
    },
    {
        "line": 139,
        "fullcodeline": "if( (DE = x3f_get_thumb_jpeg(x3f)))"
    },
    {
        "line": 26,
        "fullcodeline": "x3f_property_list_t *PL = &DEH->data_subsection.property_list;"
    },
    {
        "line": 141,
        "fullcodeline": "format = LIBRAW_THUMBNAIL_JPEG;"
    },
    {
        "line": 150,
        "fullcodeline": "x3f_image_data_t *ID = &DEH->data_subsection.image_data;"
    },
    {
        "line": 156,
        "fullcodeline": "write_thumb = &LibRaw::x3f_thumb_loader;"
    },
    {
        "line": 143,
        "fullcodeline": "else if( (DE = x3f_get_thumb_plain(x3f)))"
    },
    {
        "line": 30,
        "fullcodeline": "for (i=0; i<PL->num_properties; i++) {"
    },
    {
        "line": 88,
        "fullcodeline": "imgdata.sizes.raw_pitch = imgdata.sizes.raw_width*6;"
    },
    {
        "line": 98,
        "fullcodeline": "if(imgdata.sizes.raw_width == 5888 ||imgdata.sizes.raw_width == 2944"
    },
    {
        "line": 100,
        "fullcodeline": "|| imgdata.sizes.raw_width == 5504 ||imgdata.sizes.raw_width == 2752"
    },
    {
        "line": 112,
        "fullcodeline": "int pos = libraw_internal_data.internal_data.input->tell();"
    },
    {
        "line": 113,
        "fullcodeline": "libraw_internal_data.internal_data.input->seek(0,SEEK_SET);"
    },
    {
        "line": 114,
        "fullcodeline": "unsigned char buf[2048];"
    },
    {
        "line": 115,
        "fullcodeline": "libraw_internal_data.internal_data.input->read(buf,2048,1);"
    },
    {
        "line": 117,
        "fullcodeline": "unsigned char *fnd=(unsigned char*)lr_memmem(buf,2048,\"SIGMA dp\",8);"
    },
    {
        "line": 118,
        "fullcodeline": "unsigned char *fndsd=(unsigned char*)lr_memmem(buf,2048,\"sd Quatt\",8);"
    },
    {
        "line": 145,
        "fullcodeline": "format = LIBRAW_THUMBNAIL_BITMAP;"
    },
    {
        "line": 31,
        "fullcodeline": "char name[100], value[100];"
    },
    {
        "line": 32,
        "fullcodeline": "utf2char(P[i].name,name);"
    },
    {
        "line": 33,
        "fullcodeline": "utf2char(P[i].value,value);"
    },
    {
        "line": 105,
        "fullcodeline": "imgdata.sizes.raw_pitch = imgdata.sizes.raw_width*6;"
    },
    {
        "line": 99,
        "fullcodeline": "|| imgdata.sizes.raw_width == 6656 ||imgdata.sizes.raw_width == 3328"
    },
    {
        "line": 34,
        "fullcodeline": "if (!strcmp (name, \"ISO\"))"
    },
    {
        "line": 36,
        "fullcodeline": "if (!strcmp (name, \"CAMMANUF\"))"
    },
    {
        "line": 37,
        "fullcodeline": "strcpy (imgdata.idata.make, value);"
    },
    {
        "line": 38,
        "fullcodeline": "if (!strcmp (name, \"CAMMODEL\"))"
    },
    {
        "line": 39,
        "fullcodeline": "strcpy (imgdata.idata.model, value);"
    },
    {
        "line": 40,
        "fullcodeline": "if (!strcmp (name, \"CAMSERIAL\"))"
    },
    {
        "line": 41,
        "fullcodeline": "strcpy (imgdata.shootinginfo.BodySerial, value);"
    },
    {
        "line": 42,
        "fullcodeline": "if (!strcmp (name, \"WB_DESC\"))"
    },
    {
        "line": 43,
        "fullcodeline": "strcpy (imgdata.color.model2, value);"
    },
    {
        "line": 44,
        "fullcodeline": "if (!strcmp (name, \"TIME\"))"
    },
    {
        "line": 46,
        "fullcodeline": "if (!strcmp (name, \"SHUTTER\"))"
    },
    {
        "line": 48,
        "fullcodeline": "if (!strcmp (name, \"APERTURE\"))"
    },
    {
        "line": 50,
        "fullcodeline": "if (!strcmp (name, \"FLENGTH\"))"
    },
    {
        "line": 52,
        "fullcodeline": "if (!strcmp (name, \"FLEQ35MM\"))"
    },
    {
        "line": 54,
        "fullcodeline": "if (!strcmp (name, \"LENSARANGE\"))"
    },
    {
        "line": 58,
        "fullcodeline": "sp = strrchr (value, ' ');"
    },
    {
        "line": 66,
        "fullcodeline": "if (!strcmp (name, \"LENSFRANGE\"))"
    },
    {
        "line": 70,
        "fullcodeline": "sp = strrchr (value, ' ');"
    },
    {
        "line": 78,
        "fullcodeline": "if (!strcmp (name, \"LENSMODEL\"))"
    },
    {
        "line": 35,
        "fullcodeline": "imgdata.other.iso_speed = atoi(value);"
    },
    {
        "line": 45,
        "fullcodeline": "imgdata.other.timestamp = atoi(value);"
    },
    {
        "line": 47,
        "fullcodeline": "imgdata.other.shutter = atof(value);"
    },
    {
        "line": 49,
        "fullcodeline": "imgdata.other.aperture = atof(value);"
    },
    {
        "line": 51,
        "fullcodeline": "imgdata.other.focal_len = atof(value);"
    },
    {
        "line": 53,
        "fullcodeline": "imgdata.lens.makernotes.FocalLengthIn35mmFormat = atof(value);"
    },
    {
        "line": 57,
        "fullcodeline": "imgdata.lens.makernotes.MaxAp4CurFocal = imgdata.lens.makernotes.MinAp4CurFocal = atof(value);"
    },
    {
        "line": 69,
        "fullcodeline": "imgdata.lens.makernotes.MinFocal = imgdata.lens.makernotes.MaxFocal = atof(value);"
    },
    {
        "line": 81,
        "fullcodeline": "imgdata.lens.makernotes.LensID = strtol (value, &sp, 16); // atoi(value);"
    },
    {
        "line": 83,
        "fullcodeline": "imgdata.lens.makernotes.LensMount = Sigma_X3F;"
    },
    {
        "line": 122,
        "fullcodeline": "snprintf(imgdata.idata.model,64,\"dp%c Quattro\",*nm<='9' && *nm >='0' ? *nm: '2');"
    },
    {
        "line": 61,
        "fullcodeline": "imgdata.lens.makernotes.MinAp4CurFocal = atof(sp);"
    },
    {
        "line": 73,
        "fullcodeline": "imgdata.lens.makernotes.MaxFocal = atof(sp);"
    },
    {
        "line": 130,
        "fullcodeline": "if(imgdata.sizes.raw_width == 6656 ||imgdata.sizes.raw_width == 3328 )"
    }
]