[
    {
        "line": 6,
        "fullcodeline": "httpie_session = None"
    },
    {
        "line": 7,
        "fullcodeline": "httpie_session_headers = None"
    },
    {
        "line": 17,
        "fullcodeline": "request_kwargs = make_request_kwargs("
    },
    {
        "line": 23,
        "fullcodeline": "send_kwargs = make_send_kwargs(args)"
    },
    {
        "line": 24,
        "fullcodeline": "send_kwargs_mergeable_from_env = make_send_kwargs_mergeable_from_env(args)"
    },
    {
        "line": 25,
        "fullcodeline": "requests_session = build_requests_session("
    },
    {
        "line": 48,
        "fullcodeline": "request = requests.Request(**request_kwargs)"
    },
    {
        "line": 49,
        "fullcodeline": "prepared_request = requests_session.prepare_request(request)"
    },
    {
        "line": 50,
        "fullcodeline": "apply_missing_repeated_headers(prepared_request, request.headers)"
    },
    {
        "line": 61,
        "fullcodeline": "response_count = 0"
    },
    {
        "line": 62,
        "fullcodeline": "expired_cookies = []"
    },
    {
        "line": 8,
        "fullcodeline": "if args.session or args.session_read_only:"
    },
    {
        "line": 56,
        "fullcodeline": "if args.compress and prepared_request.body:"
    },
    {
        "line": 9,
        "fullcodeline": "httpie_session = get_httpie_session("
    },
    {
        "line": 15,
        "fullcodeline": "httpie_session_headers = httpie_session.headers"
    },
    {
        "line": 28,
        "fullcodeline": "verify=bool(send_kwargs_mergeable_from_env['verify'])"
    },
    {
        "line": 32,
        "fullcodeline": "httpie_session.update_headers(request_kwargs['headers'])"
    },
    {
        "line": 33,
        "fullcodeline": "requests_session.cookies = httpie_session.cookies"
    },
    {
        "line": 46,
        "fullcodeline": "dump_request(request_kwargs)"
    },
    {
        "line": 52,
        "fullcodeline": "prepared_request.url = ensure_path_as_is("
    },
    {
        "line": 57,
        "fullcodeline": "compress_request("
    },
    {
        "line": 59,
        "fullcodeline": "always=args.compress > 1,"
    },
    {
        "line": 65,
        "fullcodeline": "if not args.offline:"
    },
    {
        "line": 94,
        "fullcodeline": "if httpie_session.is_new() or not args.session_read_only:"
    },
    {
        "line": 11,
        "fullcodeline": "session_name=args.session or args.session_read_only,"
    },
    {
        "line": 36,
        "fullcodeline": "httpie_session.auth = {"
    },
    {
        "line": 66,
        "fullcodeline": "send_kwargs_merged = requests_session.merge_environment_settings("
    },
    {
        "line": 76,
        "fullcodeline": "response._httpie_headers_parsed_at = monotonic()"
    },
    {
        "line": 77,
        "fullcodeline": "expired_cookies += get_expired_cookies("
    },
    {
        "line": 81,
        "fullcodeline": "response_count += 1"
    },
    {
        "line": 95,
        "fullcodeline": "httpie_session.cookies = requests_session.cookies"
    },
    {
        "line": 96,
        "fullcodeline": "httpie_session.remove_cookies("
    },
    {
        "line": 100,
        "fullcodeline": "httpie_session.save()"
    },
    {
        "line": 12,
        "fullcodeline": "host=args.headers.get('Host'),"
    },
    {
        "line": 70,
        "fullcodeline": "with max_headers(args.max_headers):"
    },
    {
        "line": 42,
        "fullcodeline": "request_kwargs['auth'] = httpie_session.auth"
    },
    {
        "line": 98,
        "fullcodeline": "cookie['name'] for cookie in expired_cookies"
    },
    {
        "line": 71,
        "fullcodeline": "response = requests_session.send("
    },
    {
        "line": 78,
        "fullcodeline": "response.headers.get('Set-Cookie', '')"
    },
    {
        "line": 83,
        "fullcodeline": "if args.max_redirects and response_count == args.max_redirects:"
    },
    {
        "line": 84,
        "fullcodeline": "raise requests.TooManyRedirects"
    },
    {
        "line": 86,
        "fullcodeline": "prepared_request = response.next"
    }
]