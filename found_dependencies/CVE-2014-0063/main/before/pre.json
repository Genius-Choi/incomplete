[
    {
        "line": 31,
        "fullcodeline": "ECPGdebug(1, stderr);"
    },
    {
        "line": 33,
        "fullcodeline": "ts1 = PGTYPEStimestamp_from_asc(\"2003-12-04 17:34:29\", NULL);"
    },
    {
        "line": 34,
        "fullcodeline": "text = PGTYPEStimestamp_to_asc(ts1);"
    },
    {
        "line": 36,
        "fullcodeline": "printf(\"timestamp: %s\\n\", text);"
    },
    {
        "line": 39,
        "fullcodeline": "date1 = PGTYPESdate_from_timestamp(ts1);"
    },
    {
        "line": 40,
        "fullcodeline": "dc = PGTYPESdate_new();"
    },
    {
        "line": 41,
        "fullcodeline": "*dc = date1;"
    },
    {
        "line": 42,
        "fullcodeline": "text = PGTYPESdate_to_asc(*dc);"
    },
    {
        "line": 43,
        "fullcodeline": "printf(\"Date of timestamp: %s\\n\", text);"
    },
    {
        "line": 44,
        "fullcodeline": "free(text);"
    },
    {
        "line": 45,
        "fullcodeline": "PGTYPESdate_free(dc);"
    },
    {
        "line": 81,
        "fullcodeline": "ts1 = PGTYPEStimestamp_from_asc(\"2004-04-04 23:23:23\", NULL);"
    },
    {
        "line": 47,
        "fullcodeline": "for (i = 0; dates[i]; i++)"
    },
    {
        "line": 83,
        "fullcodeline": "for (i = 0; intervals[i]; i++)"
    },
    {
        "line": 49,
        "fullcodeline": "bool err = false;"
    },
    {
        "line": 50,
        "fullcodeline": "date1 = PGTYPESdate_from_asc(dates[i], &endptr);"
    },
    {
        "line": 54,
        "fullcodeline": "text = PGTYPESdate_to_asc(date1);"
    },
    {
        "line": 55,
        "fullcodeline": "printf(\"Date[%d]: %s (%c - %c)\\n\","
    },
    {
        "line": 59,
        "fullcodeline": "free(text);"
    },
    {
        "line": 86,
        "fullcodeline": "i1 = PGTYPESinterval_from_asc(intervals[i], &endptr);"
    },
    {
        "line": 94,
        "fullcodeline": "j = PGTYPEStimestamp_add_interval(&ts1, i1, &ts2);"
    },
    {
        "line": 97,
        "fullcodeline": "text = PGTYPESinterval_to_asc(i1);"
    },
    {
        "line": 98,
        "fullcodeline": "printf(\"interval[%d]: %s\\n\", i, text ? text : \"-\");"
    },
    {
        "line": 101,
        "fullcodeline": "ic = PGTYPESinterval_new();"
    },
    {
        "line": 102,
        "fullcodeline": "PGTYPESinterval_copy(i1, ic);"
    },
    {
        "line": 103,
        "fullcodeline": "text = PGTYPESinterval_to_asc(i1);"
    },
    {
        "line": 104,
        "fullcodeline": "printf(\"interval_copy[%d]: %s\\n\", i, text ? text : \"-\");"
    },
    {
        "line": 105,
        "fullcodeline": "free(text);"
    },
    {
        "line": 106,
        "fullcodeline": "PGTYPESinterval_free(ic);"
    },
    {
        "line": 107,
        "fullcodeline": "PGTYPESinterval_free(i1);"
    },
    {
        "line": 51,
        "fullcodeline": "if (date1 == INT_MIN) {"
    },
    {
        "line": 57,
        "fullcodeline": "endptr ? 'N' : 'Y',"
    },
    {
        "line": 60,
        "fullcodeline": "if (!err)"
    },
    {
        "line": 89,
        "fullcodeline": "if (!i1)"
    },
    {
        "line": 95,
        "fullcodeline": "if (j < 0)"
    },
    {
        "line": 52,
        "fullcodeline": "err = true;"
    },
    {
        "line": 88,
        "fullcodeline": "printf(\"endptr set to %s\\n\", endptr);"
    },
    {
        "line": 91,
        "fullcodeline": "printf(\"Error parsing interval %d\\n\", i);"
    },
    {
        "line": 62,
        "fullcodeline": "for (j = 0; times[j]; j++)"
    },
    {
        "line": 64,
        "fullcodeline": "int length = strlen(dates[i])"
    },
    {
        "line": 68,
        "fullcodeline": "char* t = malloc(length);"
    },
    {
        "line": 69,
        "fullcodeline": "sprintf(t, \"%s %s\", dates[i], times[j]);"
    },
    {
        "line": 70,
        "fullcodeline": "ts1 = PGTYPEStimestamp_from_asc(t, NULL);"
    },
    {
        "line": 71,
        "fullcodeline": "text = PGTYPEStimestamp_to_asc(ts1);"
    },
    {
        "line": 75,
        "fullcodeline": "free(text);"
    },
    {
        "line": 76,
        "fullcodeline": "free(t);"
    },
    {
        "line": 72,
        "fullcodeline": "if (i != 19 || j != 3) /* timestamp as integer or double differ for this case */"
    },
    {
        "line": 73,
        "fullcodeline": "printf(\"TS[%d,%d]: %s\\n\","
    },
    {
        "line": 66,
        "fullcodeline": "+ strlen(times[j])"
    },
    {
        "line": 74,
        "fullcodeline": "i, j, errno ? \"-\" : text);"
    }
]