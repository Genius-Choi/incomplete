[
    {
        "line": 8,
        "fullcodeline": "double\t\tnoresult = 0.0;"
    },
    {
        "line": 12,
        "fullcodeline": "*tm = &tt;"
    },
    {
        "line": 15,
        "fullcodeline": "char\t   *field[MAXDATEFIELDS];"
    },
    {
        "line": 16,
        "fullcodeline": "int\t\t\tftype[MAXDATEFIELDS];"
    },
    {
        "line": 17,
        "fullcodeline": "char\t\tlowstr[MAXDATELEN + MAXDATEFIELDS];"
    },
    {
        "line": 19,
        "fullcodeline": "char\t  **ptr = (endptr != NULL) ? endptr : &realptr;"
    },
    {
        "line": 21,
        "fullcodeline": "if (strlen(str) > MAXDATELEN)"
    },
    {
        "line": 23,
        "fullcodeline": "errno = PGTYPES_TS_BAD_TIMESTAMP;"
    },
    {
        "line": 27,
        "fullcodeline": "if (ParseDateTime(str, lowstr, field, ftype, &nf, ptr) != 0 ||"
    },
    {
        "line": 28,
        "fullcodeline": "DecodeDateTime(field, ftype, nf, &dtype, tm, &fsec, 0) != 0)"
    },
    {
        "line": 45,
        "fullcodeline": "result = SetEpochTimestamp();"
    },
    {
        "line": 49,
        "fullcodeline": "TIMESTAMP_NOEND(result);"
    },
    {
        "line": 53,
        "fullcodeline": "TIMESTAMP_NOBEGIN(result);"
    },
    {
        "line": 37,
        "fullcodeline": "if (tm2timestamp(tm, fsec, NULL, &result) != 0)"
    }
]