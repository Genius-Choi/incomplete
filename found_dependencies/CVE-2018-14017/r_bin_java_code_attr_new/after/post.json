[
    {
        "line": 2,
        "fullcodeline": "RBinJavaAttrInfo *attr = NULL, *_attr = NULL;"
    },
    {
        "line": 3,
        "fullcodeline": "ut32 k = 0, curpos;"
    },
    {
        "line": 4,
        "fullcodeline": "ut64 offset = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "attr = r_bin_java_default_attr_new (buffer, sz, buf_offset);"
    },
    {
        "line": 13,
        "fullcodeline": "offset += 6;"
    },
    {
        "line": 14,
        "fullcodeline": "attr->type = R_BIN_JAVA_ATTR_TYPE_CODE_ATTR;"
    },
    {
        "line": 15,
        "fullcodeline": "attr->info.code_attr.max_stack = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 16,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 17,
        "fullcodeline": "attr->info.code_attr.max_locals = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 18,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 19,
        "fullcodeline": "attr->info.code_attr.code_length = R_BIN_JAVA_UINT (buffer, offset);"
    },
    {
        "line": 20,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 22,
        "fullcodeline": "attr->info.code_attr.code_offset = buf_offset + offset;"
    },
    {
        "line": 23,
        "fullcodeline": "attr->info.code_attr.code = (ut8 *) malloc (attr->info.code_attr.code_length);"
    },
    {
        "line": 29,
        "fullcodeline": "R_BIN_JAVA_GLOBAL_BIN->current_code_attr = attr;"
    },
    {
        "line": 40,
        "fullcodeline": "attr->info.code_attr.exception_table_length = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 41,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 42,
        "fullcodeline": "attr->info.code_attr.exception_table = r_list_newf (free);"
    },
    {
        "line": 65,
        "fullcodeline": "attr->info.code_attr.attributes_count = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 66,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 69,
        "fullcodeline": "attr->info.code_attr.attributes = r_list_newf (r_bin_java_attribute_free);"
    },
    {
        "line": 104,
        "fullcodeline": "attr->size = offset;"
    },
    {
        "line": 6,
        "fullcodeline": "if (!attr) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (sz < 16 || sz > buf_offset) {// sz > buf_offset) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (!attr->info.code_attr.code) {"
    },
    {
        "line": 32,
        "fullcodeline": "memset (attr->info.code_attr.code, 0, len);"
    },
    {
        "line": 37,
        "fullcodeline": "memcpy (attr->info.code_attr.code, buffer + offset, len);"
    },
    {
        "line": 38,
        "fullcodeline": "offset += len;"
    },
    {
        "line": 43,
        "fullcodeline": "for (k = 0; k < attr->info.code_attr.exception_table_length; k++) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (attr->info.code_attr.attributes_count > 0) {"
    },
    {
        "line": 99,
        "fullcodeline": "if (attr->info.code_attr.implicit_frame == NULL) {"
    },
    {
        "line": 10,
        "fullcodeline": "free (attr);"
    },
    {
        "line": 25,
        "fullcodeline": "eprintf (\"Handling Code Attributes: Unable to allocate memory \""
    },
    {
        "line": 33,
        "fullcodeline": "if (offset + len >= sz) {"
    },
    {
        "line": 44,
        "fullcodeline": "curpos = buf_offset + offset;"
    },
    {
        "line": 48,
        "fullcodeline": "RBinJavaExceptionEntry *e = R_NEW0 (RBinJavaExceptionEntry);"
    },
    {
        "line": 53,
        "fullcodeline": "e->file_offset = curpos;"
    },
    {
        "line": 54,
        "fullcodeline": "e->start_pc = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 55,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 56,
        "fullcodeline": "e->end_pc = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 57,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 58,
        "fullcodeline": "e->handler_pc = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 59,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 60,
        "fullcodeline": "e->catch_type = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 61,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 62,
        "fullcodeline": "r_list_append (attr->info.code_attr.exception_table, e);"
    },
    {
        "line": 63,
        "fullcodeline": "e->size = 8;"
    },
    {
        "line": 101,
        "fullcodeline": "attr->info.code_attr.implicit_frame = r_bin_java_default_stack_frame ();"
    },
    {
        "line": 34,
        "fullcodeline": "len = sz;"
    },
    {
        "line": 45,
        "fullcodeline": "if (curpos + 8 > sz) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (!e) {"
    },
    {
        "line": 71,
        "fullcodeline": "for (k = 0; k < attr->info.code_attr.attributes_count; k++) {"
    },
    {
        "line": 50,
        "fullcodeline": "free (attr);"
    },
    {
        "line": 72,
        "fullcodeline": "int size = (offset < sz) ? sz - offset : 0;"
    },
    {
        "line": 76,
        "fullcodeline": "_attr = r_bin_java_read_next_attr_from_buffer (buffer + offset, size, buf_offset + offset);"
    },
    {
        "line": 82,
        "fullcodeline": "offset += _attr->size;"
    },
    {
        "line": 83,
        "fullcodeline": "r_list_append (attr->info.code_attr.attributes, _attr);"
    },
    {
        "line": 73,
        "fullcodeline": "if (size > sz || size <= 0) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (!_attr) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (_attr->type == R_BIN_JAVA_ATTR_TYPE_LOCAL_VARIABLE_TABLE_ATTR) {"
    },
    {
        "line": 78,
        "fullcodeline": "eprintf (\"[X] r_bin_java_code_attr_new: Error unable to parse remainder of classfile after Method's Code Attribute: %d.\\n\", k);"
    },
    {
        "line": 85,
        "fullcodeline": "IFDBG eprintf(\"Parsed the LocalVariableTable, preparing the implicit mthod frame.\\n\");"
    },
    {
        "line": 87,
        "fullcodeline": "attr->info.code_attr.implicit_frame = r_bin_java_build_stack_frame_from_local_variable_table (R_BIN_JAVA_GLOBAL_BIN, _attr);"
    },
    {
        "line": 88,
        "fullcodeline": "attr->info.code_attr.implicit_frame->file_offset = buf_offset;"
    },
    {
        "line": 89,
        "fullcodeline": "IFDBG r_bin_java_print_stack_map_frame_summary(attr->info.code_attr.implicit_frame);"
    }
]