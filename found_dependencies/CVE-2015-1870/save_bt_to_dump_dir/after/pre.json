[
    {
        "line": 3,
        "fullcodeline": "time_t t = time(NULL);"
    },
    {
        "line": 4,
        "fullcodeline": "const char *iso_date = iso_date_string(&t);"
    },
    {
        "line": 6,
        "fullcodeline": "uid_t my_euid = (uid_t)-1L;"
    },
    {
        "line": 7,
        "fullcodeline": "mode_t mode = DEFAULT_DUMP_DIR_MODE | S_IROTH;"
    },
    {
        "line": 23,
        "fullcodeline": "pid_t my_pid = getpid();"
    },
    {
        "line": 25,
        "fullcodeline": "char base[sizeof(\"xorg-YYYY-MM-DD-hh:mm:ss-%lu-%lu\") + 2 * sizeof(long)*3];"
    },
    {
        "line": 26,
        "fullcodeline": "sprintf(base, \"xorg-%s-%lu-%u\", iso_date, (long)my_pid, g_bt_count);"
    },
    {
        "line": 27,
        "fullcodeline": "char *path = concat_path_file(debug_dumps_dir, base);"
    },
    {
        "line": 29,
        "fullcodeline": "struct dump_dir *dd = dd_create(path, /*uid:*/ my_euid, mode);"
    },
    {
        "line": 55,
        "fullcodeline": "free(path);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!(g_opts & OPT_x))"
    },
    {
        "line": 11,
        "fullcodeline": "mode = DEFAULT_DUMP_DIR_MODE;"
    },
    {
        "line": 12,
        "fullcodeline": "my_euid = geteuid();"
    },
    {
        "line": 19,
        "fullcodeline": "mode = DEFAULT_DUMP_DIR_MODE;"
    },
    {
        "line": 20,
        "fullcodeline": "my_euid = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "dd_create_basic_files(dd, /*uid:*/ my_euid, NULL);"
    },
    {
        "line": 33,
        "fullcodeline": "dd_save_text(dd, FILENAME_ABRT_VERSION, VERSION);"
    },
    {
        "line": 34,
        "fullcodeline": "dd_save_text(dd, FILENAME_ANALYZER, \"xorg\");"
    },
    {
        "line": 35,
        "fullcodeline": "dd_save_text(dd, FILENAME_TYPE, \"xorg\");"
    },
    {
        "line": 36,
        "fullcodeline": "dd_save_text(dd, FILENAME_REASON, reason);"
    },
    {
        "line": 37,
        "fullcodeline": "dd_save_text(dd, FILENAME_BACKTRACE, bt);"
    },
    {
        "line": 50,
        "fullcodeline": "dd_save_text(dd, FILENAME_EXECUTABLE, exe);"
    },
    {
        "line": 51,
        "fullcodeline": "dd_close(dd);"
    },
    {
        "line": 52,
        "fullcodeline": "notify_new_path(path);"
    },
    {
        "line": 16,
        "fullcodeline": "if ((g_opts & OPT_x))"
    },
    {
        "line": 44,
        "fullcodeline": "if (!exe)"
    },
    {
        "line": 17,
        "fullcodeline": "log(\"Not going to make dump directories world readable because PrivateReports is on\");"
    },
    {
        "line": 46,
        "fullcodeline": "exe = \"/usr/bin/X\";"
    },
    {
        "line": 47,
        "fullcodeline": "if (access(\"/usr/bin/Xorg\", X_OK) == 0)"
    },
    {
        "line": 48,
        "fullcodeline": "exe = \"/usr/bin/Xorg\";"
    }
]