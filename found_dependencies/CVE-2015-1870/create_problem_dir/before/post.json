[
    {
        "line": 15,
        "fullcodeline": "gchar *dir_basename = g_hash_table_lookup(problem_info, \"basename\");"
    },
    {
        "line": 19,
        "fullcodeline": "char *path = xasprintf(\"%s/%s-%s-%u.new\","
    },
    {
        "line": 26,
        "fullcodeline": "g_hash_table_remove(problem_info, \"basename\");"
    },
    {
        "line": 31,
        "fullcodeline": "struct dump_dir *dd = dd_create(path, client_uid, DEFAULT_DUMP_DIR_MODE);"
    },
    {
        "line": 37,
        "fullcodeline": "dd_create_basic_files(dd, client_uid, NULL);"
    },
    {
        "line": 38,
        "fullcodeline": "dd_save_text(dd, FILENAME_ABRT_VERSION, VERSION);"
    },
    {
        "line": 40,
        "fullcodeline": "gpointer gpkey = g_hash_table_lookup(problem_info, FILENAME_CMDLINE);"
    },
    {
        "line": 53,
        "fullcodeline": "char uid_str[sizeof(long) * 3 + 2];"
    },
    {
        "line": 54,
        "fullcodeline": "sprintf(uid_str, \"%lu\", (long)client_uid);"
    },
    {
        "line": 55,
        "fullcodeline": "dd_save_text(dd, FILENAME_UID, uid_str);"
    },
    {
        "line": 59,
        "fullcodeline": "g_hash_table_iter_init(&iter, problem_info);"
    },
    {
        "line": 65,
        "fullcodeline": "dd_close(dd);"
    },
    {
        "line": 68,
        "fullcodeline": "g_hash_table_destroy(problem_info);"
    },
    {
        "line": 73,
        "fullcodeline": "char *newpath = xstrndup(path, strlen(path) - strlen(\".new\"));"
    },
    {
        "line": 76,
        "fullcodeline": "free(newpath);"
    },
    {
        "line": 78,
        "fullcodeline": "log_notice(\"Saved problem directory of pid %u to '%s'\", pid, path);"
    },
    {
        "line": 83,
        "fullcodeline": "printf(\"HTTP/1.1 201 Created\\r\\n\\r\\n\");"
    },
    {
        "line": 84,
        "fullcodeline": "fflush(NULL);"
    },
    {
        "line": 85,
        "fullcodeline": "close(STDOUT_FILENO);"
    },
    {
        "line": 86,
        "fullcodeline": "xdup2(STDERR_FILENO, STDOUT_FILENO); /* paranoia: don't leave stdout fd closed */"
    },
    {
        "line": 94,
        "fullcodeline": "run_post_create(path);"
    },
    {
        "line": 97,
        "fullcodeline": "exit(0);"
    },
    {
        "line": 4,
        "fullcodeline": "if (g_settings_nMaxCrashReportsSize > 0)"
    },
    {
        "line": 16,
        "fullcodeline": "if (!dir_basename)"
    },
    {
        "line": 32,
        "fullcodeline": "if (!dd)"
    },
    {
        "line": 41,
        "fullcodeline": "if (!gpkey)"
    },
    {
        "line": 60,
        "fullcodeline": "while (g_hash_table_iter_next(&iter, &gpkey, &gpvalue))"
    },
    {
        "line": 74,
        "fullcodeline": "if (rename(path, newpath) == 0)"
    },
    {
        "line": 89,
        "fullcodeline": "if (g_settings_nMaxCrashReportsSize > 0)"
    },
    {
        "line": 17,
        "fullcodeline": "dir_basename = g_hash_table_lookup(problem_info, FILENAME_TYPE);"
    },
    {
        "line": 22,
        "fullcodeline": "iso_date_string(NULL),"
    },
    {
        "line": 34,
        "fullcodeline": "error_msg_and_die(\"Error creating problem directory '%s'\", path);"
    },
    {
        "line": 44,
        "fullcodeline": "char *cmdline = get_cmdline(pid);"
    },
    {
        "line": 62,
        "fullcodeline": "dd_save_text(dd, (gchar *) gpkey, (gchar *) gpvalue);"
    },
    {
        "line": 75,
        "fullcodeline": "strcpy(path, newpath);"
    },
    {
        "line": 91,
        "fullcodeline": "trim_problem_dirs(g_settings_dump_location, g_settings_nMaxCrashReportsSize * (double)(1024*1024), path);"
    },
    {
        "line": 6,
        "fullcodeline": "if (low_free_space(g_settings_nMaxCrashReportsSize, g_settings_dump_location))"
    },
    {
        "line": 7,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 47,
        "fullcodeline": "dd_save_text(dd, FILENAME_CMDLINE, cmdline);"
    },
    {
        "line": 48,
        "fullcodeline": "free(cmdline);"
    }
]