[
    {
        "line": 23,
        "fullcodeline": "const Commitment fullCommitmentToCoinUnderSerialParams(&p->serialNumberSoKCommitmentGroup, coin.getPublicCoin().getValue());"
    },
    {
        "line": 26,
        "fullcodeline": "const Commitment fullCommitmentToCoinUnderAccParams(&p->accumulatorParams.accumulatorPoKCommitmentGroup, coin.getPublicCoin().getValue());"
    },
    {
        "line": 12,
        "fullcodeline": "if (!(witness.VerifyWitness(a, coin.getPublicCoin()))) {"
    },
    {
        "line": 24,
        "fullcodeline": "this->serialCommitmentToCoinValue = fullCommitmentToCoinUnderSerialParams.getCommitmentValue();"
    },
    {
        "line": 27,
        "fullcodeline": "this->accCommitmentToCoinValue = fullCommitmentToCoinUnderAccParams.getCommitmentValue();"
    },
    {
        "line": 30,
        "fullcodeline": "this->commitmentPoK = CommitmentProofOfKnowledge(&p->serialNumberSoKCommitmentGroup, &p->accumulatorParams.accumulatorPoKCommitmentGroup, fullCommitmentToCoinUnderSerialParams, fullCommitmentToCoinUnderAccParams);"
    },
    {
        "line": 34,
        "fullcodeline": "this->accumulatorPoK = AccumulatorProofOfKnowledge(&p->accumulatorParams, fullCommitmentToCoinUnderAccParams, witness, a);"
    },
    {
        "line": 38,
        "fullcodeline": "this->serialNumberSoK = SerialNumberSignatureOfKnowledge(p, coin, fullCommitmentToCoinUnderSerialParams, signatureHash(m));"
    },
    {
        "line": 13,
        "fullcodeline": "throw ZerocoinException(\"Accumulator witness does not verify\");"
    }
]