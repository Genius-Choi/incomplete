[
    {
        "line": 8,
        "fullcodeline": "len = ceph_decode_32(p);"
    },
    {
        "line": 12,
        "fullcodeline": "dout(\"ceph_x_decrypt len %d\\n\", len);"
    },
    {
        "line": 20,
        "fullcodeline": "ret = ceph_decrypt2(secret, &head, &head_len, *obuf, &olen, *p, len);"
    },
    {
        "line": 25,
        "fullcodeline": "*p += len;"
    },
    {
        "line": 9,
        "fullcodeline": "if (*p + len > end)"
    },
    {
        "line": 13,
        "fullcodeline": "if (*obuf == NULL) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (head.struct_v != 1 || le64_to_cpu(head.magic) != CEPHX_ENC_MAGIC)"
    },
    {
        "line": 14,
        "fullcodeline": "*obuf = kmalloc(len, GFP_NOFS);"
    },
    {
        "line": 17,
        "fullcodeline": "olen = len;"
    },
    {
        "line": 10,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 15,
        "fullcodeline": "if (!*obuf)"
    },
    {
        "line": 24,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 16,
        "fullcodeline": "return -ENOMEM;"
    }
]