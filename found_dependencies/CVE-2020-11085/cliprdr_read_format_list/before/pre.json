[
    {
        "line": 9,
        "fullcodeline": "UINT32 dataLen = formatList->dataLen;"
    },
    {
        "line": 10,
        "fullcodeline": "CLIPRDR_FORMAT* formats = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "UINT error = CHANNEL_RC_OK;"
    },
    {
        "line": 13,
        "fullcodeline": "asciiNames = (formatList->msgFlags & CB_ASCII_NAMES) ? TRUE : FALSE;"
    },
    {
        "line": 15,
        "fullcodeline": "index = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "formatList->numFormats = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "position = Stream_GetPosition(s);"
    },
    {
        "line": 19,
        "fullcodeline": "if (!formatList->dataLen)"
    },
    {
        "line": 25,
        "fullcodeline": "else if (!useLongFormatNames)"
    },
    {
        "line": 27,
        "fullcodeline": "formatList->numFormats = (dataLen / 36);"
    },
    {
        "line": 44,
        "fullcodeline": "formatList->formats = formats;"
    },
    {
        "line": 29,
        "fullcodeline": "if ((formatList->numFormats * 36) != dataLen)"
    },
    {
        "line": 38,
        "fullcodeline": "if (!formats)"
    },
    {
        "line": 123,
        "fullcodeline": "dataLen = formatList->dataLen;"
    },
    {
        "line": 124,
        "fullcodeline": "Stream_SetPosition(s, position);"
    },
    {
        "line": 135,
        "fullcodeline": "formatList->formats = formats;"
    },
    {
        "line": 36,
        "fullcodeline": "formats = (CLIPRDR_FORMAT*)calloc(formatList->numFormats, sizeof(CLIPRDR_FORMAT));"
    },
    {
        "line": 48,
        "fullcodeline": "Stream_Read_UINT32(s, formats[index].formatId); /* formatId (4 bytes) */"
    },
    {
        "line": 49,
        "fullcodeline": "dataLen -= 4;"
    },
    {
        "line": 51,
        "fullcodeline": "formats[index].formatName = NULL;"
    },
    {
        "line": 98,
        "fullcodeline": "Stream_Seek(s, 32);"
    },
    {
        "line": 99,
        "fullcodeline": "dataLen -= 32;"
    },
    {
        "line": 129,
        "fullcodeline": "if (!formats)"
    },
    {
        "line": 107,
        "fullcodeline": "Stream_Seek(s, 4); /* formatId (4 bytes) */"
    },
    {
        "line": 108,
        "fullcodeline": "dataLen -= 4;"
    },
    {
        "line": 110,
        "fullcodeline": "wszFormatName = (WCHAR*)Stream_Pointer(s);"
    },
    {
        "line": 117,
        "fullcodeline": "Stream_Seek(s, (formatNameLength + 1) * 2);"
    },
    {
        "line": 118,
        "fullcodeline": "dataLen -= ((formatNameLength + 1) * 2);"
    },
    {
        "line": 120,
        "fullcodeline": "formatList->numFormats++;"
    },
    {
        "line": 127,
        "fullcodeline": "formats = (CLIPRDR_FORMAT*)calloc(formatList->numFormats, sizeof(CLIPRDR_FORMAT));"
    },
    {
        "line": 139,
        "fullcodeline": "Stream_Read_UINT32(s, formats[index].formatId); /* formatId (4 bytes) */"
    },
    {
        "line": 140,
        "fullcodeline": "dataLen -= 4;"
    },
    {
        "line": 142,
        "fullcodeline": "formats[index].formatName = NULL;"
    },
    {
        "line": 144,
        "fullcodeline": "wszFormatName = (WCHAR*)Stream_Pointer(s);"
    },
    {
        "line": 162,
        "fullcodeline": "Stream_Seek(s, (formatNameLength + 1) * 2);"
    },
    {
        "line": 163,
        "fullcodeline": "dataLen -= ((formatNameLength + 1) * 2);"
    },
    {
        "line": 63,
        "fullcodeline": "szFormatName = (char*)Stream_Pointer(s);"
    },
    {
        "line": 112,
        "fullcodeline": "if (!wszFormatName[0])"
    },
    {
        "line": 146,
        "fullcodeline": "if (!wszFormatName[0])"
    },
    {
        "line": 81,
        "fullcodeline": "wszFormatName = (WCHAR*)Stream_Pointer(s);"
    },
    {
        "line": 113,
        "fullcodeline": "formatNameLength = 0;"
    },
    {
        "line": 147,
        "fullcodeline": "formatNameLength = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "formats[index].formatName = (char*)malloc(32 + 1);"
    },
    {
        "line": 76,
        "fullcodeline": "formats[index].formatName[32] = '\\0';"
    },
    {
        "line": 115,
        "fullcodeline": "formatNameLength = _wcslen(wszFormatName);"
    },
    {
        "line": 149,
        "fullcodeline": "formatNameLength = _wcslen(wszFormatName);"
    },
    {
        "line": 69,
        "fullcodeline": "if (!formats[index].formatName)"
    },
    {
        "line": 153,
        "fullcodeline": "if (ConvertFromUnicode(CP_UTF8, 0, wszFormatName, -1, &(formats[index].formatName),"
    },
    {
        "line": 157,
        "fullcodeline": "error = ERROR_INTERNAL_ERROR;"
    },
    {
        "line": 72,
        "fullcodeline": "error = CHANNEL_RC_NO_MEMORY;"
    },
    {
        "line": 88,
        "fullcodeline": "if (ConvertFromUnicode(CP_UTF8, 0, wszFormatName, 16,"
    },
    {
        "line": 92,
        "fullcodeline": "error = ERROR_INTERNAL_ERROR;"
    }
]