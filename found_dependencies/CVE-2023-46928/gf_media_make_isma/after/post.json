[
    {
        "line": 24,
        "fullcodeline": "Tracks = gf_isom_get_track_count(mp4file);"
    },
    {
        "line": 25,
        "fullcodeline": "AID = VID = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "is_image = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "visualPL = 0xFE;"
    },
    {
        "line": 87,
        "fullcodeline": "audioPL = 0xFE;"
    },
    {
        "line": 89,
        "fullcodeline": "od = (GF_ObjectDescriptor *) gf_isom_get_root_od(mp4file);"
    },
    {
        "line": 98,
        "fullcodeline": "bifs = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "odU = (GF_ODUpdate *) gf_odf_com_new(GF_ODF_OD_UPDATE_TAG);"
    },
    {
        "line": 101,
        "fullcodeline": "a_esd = v_esd = NULL;"
    },
    {
        "line": 103,
        "fullcodeline": "gf_isom_set_root_od_id(mp4file, 1);"
    },
    {
        "line": 105,
        "fullcodeline": "bifsID = 1;"
    },
    {
        "line": 106,
        "fullcodeline": "odID = 2;"
    },
    {
        "line": 115,
        "fullcodeline": "VideoTrack = gf_isom_get_track_by_id(mp4file, VID);"
    },
    {
        "line": 116,
        "fullcodeline": "AudioTrack = gf_isom_get_track_by_id(mp4file, AID);"
    },
    {
        "line": 118,
        "fullcodeline": "w = h = 0;"
    },
    {
        "line": 206,
        "fullcodeline": "codec = gf_odf_codec_new();"
    },
    {
        "line": 207,
        "fullcodeline": "samp = gf_isom_sample_new();"
    },
    {
        "line": 208,
        "fullcodeline": "gf_odf_codec_add_com(codec, (GF_ODCom *)odU);"
    },
    {
        "line": 209,
        "fullcodeline": "gf_odf_codec_encode(codec, 1);"
    },
    {
        "line": 210,
        "fullcodeline": "gf_odf_codec_get_au(codec, &samp->data, &samp->dataLength);"
    },
    {
        "line": 211,
        "fullcodeline": "gf_odf_codec_del(codec);"
    },
    {
        "line": 212,
        "fullcodeline": "samp->CTS_Offset = 0;"
    },
    {
        "line": 213,
        "fullcodeline": "samp->DTS = 0;"
    },
    {
        "line": 214,
        "fullcodeline": "samp->IsRAP = RAP;"
    },
    {
        "line": 217,
        "fullcodeline": "odT = gf_isom_new_track(mp4file, odID, GF_ISOM_MEDIA_OD, gf_isom_get_timescale(mp4file));"
    },
    {
        "line": 220,
        "fullcodeline": "_esd = gf_odf_desc_esd_new(SLPredef_MP4);"
    },
    {
        "line": 223,
        "fullcodeline": "_esd->decoderConfig->bufferSizeDB = samp->dataLength;"
    },
    {
        "line": 224,
        "fullcodeline": "_esd->decoderConfig->objectTypeIndication = GF_CODECID_OD_V1;"
    },
    {
        "line": 225,
        "fullcodeline": "_esd->decoderConfig->streamType = GF_STREAM_OD;"
    },
    {
        "line": 226,
        "fullcodeline": "_esd->ESID = odID;"
    },
    {
        "line": 227,
        "fullcodeline": "_esd->OCRESID = no_ocr ? 0 : bifsID;"
    },
    {
        "line": 228,
        "fullcodeline": "gf_isom_new_mpeg4_description(mp4file, odT, _esd, NULL, NULL, &descIndex);"
    },
    {
        "line": 229,
        "fullcodeline": "gf_odf_desc_del((GF_Descriptor *)_esd);"
    },
    {
        "line": 230,
        "fullcodeline": "gf_isom_add_sample(mp4file, odT, 1, samp);"
    },
    {
        "line": 231,
        "fullcodeline": "gf_isom_sample_del(&samp);"
    },
    {
        "line": 233,
        "fullcodeline": "gf_isom_set_track_interleaving_group(mp4file, odT, 1);"
    },
    {
        "line": 236,
        "fullcodeline": "bifsT = gf_isom_new_track(mp4file, bifsID, GF_ISOM_MEDIA_SCENE, gf_isom_get_timescale(mp4file));"
    },
    {
        "line": 239,
        "fullcodeline": "_esd = gf_odf_desc_esd_new(SLPredef_MP4);"
    },
    {
        "line": 242,
        "fullcodeline": "_esd->decoderConfig->bufferSizeDB = 20;"
    },
    {
        "line": 243,
        "fullcodeline": "_esd->decoderConfig->objectTypeIndication = GF_CODECID_BIFS_V2;"
    },
    {
        "line": 244,
        "fullcodeline": "_esd->decoderConfig->streamType = GF_STREAM_SCENE;"
    },
    {
        "line": 245,
        "fullcodeline": "_esd->ESID = bifsID;"
    },
    {
        "line": 246,
        "fullcodeline": "_esd->OCRESID = 0;"
    },
    {
        "line": 249,
        "fullcodeline": "bs = gf_bs_new(NULL, 0, GF_BITSTREAM_WRITE);"
    },
    {
        "line": 251,
        "fullcodeline": "gf_bs_write_int(bs, 0, 17);"
    },
    {
        "line": 253,
        "fullcodeline": "gf_bs_write_int(bs, 1, 1);"
    },
    {
        "line": 255,
        "fullcodeline": "gf_bs_write_int(bs, 1, 1);"
    },
    {
        "line": 257,
        "fullcodeline": "gf_bs_write_int(bs, 1, 1);"
    },
    {
        "line": 258,
        "fullcodeline": "gf_bs_write_int(bs, w, 16);"
    },
    {
        "line": 259,
        "fullcodeline": "gf_bs_write_int(bs, h, 16);"
    },
    {
        "line": 260,
        "fullcodeline": "gf_bs_align(bs);"
    },
    {
        "line": 261,
        "fullcodeline": "gf_bs_get_content(bs, &_esd->decoderConfig->decoderSpecificInfo->data, &_esd->decoderConfig->decoderSpecificInfo->dataLength);"
    },
    {
        "line": 262,
        "fullcodeline": "gf_isom_new_mpeg4_description(mp4file, bifsT, _esd, NULL, NULL, &descIndex);"
    },
    {
        "line": 263,
        "fullcodeline": "gf_odf_desc_del((GF_Descriptor *)_esd);"
    },
    {
        "line": 264,
        "fullcodeline": "gf_bs_del(bs);"
    },
    {
        "line": 265,
        "fullcodeline": "gf_isom_set_visual_info(mp4file, bifsT, descIndex, w, h);"
    },
    {
        "line": 267,
        "fullcodeline": "samp = gf_isom_sample_new();"
    },
    {
        "line": 268,
        "fullcodeline": "samp->CTS_Offset = 0;"
    },
    {
        "line": 269,
        "fullcodeline": "samp->DTS = 0;"
    },
    {
        "line": 295,
        "fullcodeline": "samp->IsRAP = RAP;"
    },
    {
        "line": 297,
        "fullcodeline": "gf_isom_add_sample(mp4file, bifsT, 1, samp);"
    },
    {
        "line": 298,
        "fullcodeline": "samp->data = NULL;"
    },
    {
        "line": 299,
        "fullcodeline": "gf_isom_sample_del(&samp);"
    },
    {
        "line": 300,
        "fullcodeline": "gf_isom_set_track_interleaving_group(mp4file, bifsT, 1);"
    },
    {
        "line": 302,
        "fullcodeline": "gf_isom_set_track_enabled(mp4file, bifsT, GF_TRUE);"
    },
    {
        "line": 303,
        "fullcodeline": "gf_isom_set_track_enabled(mp4file, odT, GF_TRUE);"
    },
    {
        "line": 304,
        "fullcodeline": "gf_isom_add_track_to_root_od(mp4file, bifsT);"
    },
    {
        "line": 305,
        "fullcodeline": "gf_isom_add_track_to_root_od(mp4file, odT);"
    },
    {
        "line": 307,
        "fullcodeline": "gf_isom_set_pl_indication(mp4file, GF_ISOM_PL_SCENE, 1);"
    },
    {
        "line": 308,
        "fullcodeline": "gf_isom_set_pl_indication(mp4file, GF_ISOM_PL_GRAPHICS, 1);"
    },
    {
        "line": 309,
        "fullcodeline": "gf_isom_set_pl_indication(mp4file, GF_ISOM_PL_OD, 1);"
    },
    {
        "line": 310,
        "fullcodeline": "gf_isom_set_pl_indication(mp4file, GF_ISOM_PL_AUDIO, audioPL);"
    },
    {
        "line": 311,
        "fullcodeline": "gf_isom_set_pl_indication(mp4file, GF_ISOM_PL_VISUAL, (u8) (is_image ? 0xFE : visualPL));"
    },
    {
        "line": 313,
        "fullcodeline": "gf_isom_set_brand_info(mp4file, GF_ISOM_BRAND_MP42, 1);"
    },
    {
        "line": 314,
        "fullcodeline": "gf_isom_modify_alternate_brand(mp4file, GF_ISOM_BRAND_ISOM, GF_TRUE);"
    },
    {
        "line": 315,
        "fullcodeline": "gf_isom_modify_alternate_brand(mp4file, GF_ISOM_BRAND_3GP5, GF_TRUE);"
    },
    {
        "line": 14,
        "fullcodeline": "switch (gf_isom_get_mode(mp4file)) {"
    },
    {
        "line": 29,
        "fullcodeline": "for (i=0; i<Tracks; i++) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (!AID && !VID) return GF_OK;"
    },
    {
        "line": 90,
        "fullcodeline": "if (od && (od->tag==GF_ODF_IOD_TAG)) {"
    },
    {
        "line": 203,
        "fullcodeline": "if ((!a_esd && AudioTrack) || (!v_esd && VideoTrack)) return GF_OK;"
    },
    {
        "line": 218,
        "fullcodeline": "if (!odT) return gf_isom_last_error(mp4file);"
    },
    {
        "line": 221,
        "fullcodeline": "if (!_esd) return GF_OUT_OF_MEM;"
    },
    {
        "line": 237,
        "fullcodeline": "if (!bifsT) return gf_isom_last_error(mp4file);"
    },
    {
        "line": 240,
        "fullcodeline": "if (!_esd) return GF_OUT_OF_MEM;"
    },
    {
        "line": 30,
        "fullcodeline": "GF_ESD *esd = gf_isom_get_esd(mp4file, i+1, 1);"
    },
    {
        "line": 32,
        "fullcodeline": "gf_isom_remove_track_from_root_od(mp4file, i+1);"
    },
    {
        "line": 34,
        "fullcodeline": "mType = gf_isom_get_media_type(mp4file, i+1);"
    },
    {
        "line": 94,
        "fullcodeline": "if (od) gf_odf_desc_del((GF_Descriptor *)od);"
    },
    {
        "line": 108,
        "fullcodeline": "bifsID = 1;"
    },
    {
        "line": 110,
        "fullcodeline": "odID = 2;"
    },
    {
        "line": 120,
        "fullcodeline": "bifs = 1;"
    },
    {
        "line": 121,
        "fullcodeline": "od = (GF_ObjectDescriptor *) gf_odf_desc_new(GF_ODF_OD_TAG);"
    },
    {
        "line": 122,
        "fullcodeline": "od->objectDescriptorID = ISMA_VIDEO_OD_ID;"
    },
    {
        "line": 128,
        "fullcodeline": "v_esd = gf_isom_get_esd(mp4file, VideoTrack, 1);"
    },
    {
        "line": 165,
        "fullcodeline": "od = (GF_ObjectDescriptor *) gf_odf_desc_new(GF_ODF_OD_TAG);"
    },
    {
        "line": 166,
        "fullcodeline": "od->objectDescriptorID = ISMA_AUDIO_OD_ID;"
    },
    {
        "line": 172,
        "fullcodeline": "a_esd = gf_isom_get_esd(mp4file, AudioTrack, 1);"
    },
    {
        "line": 199,
        "fullcodeline": "if (v_esd) gf_isom_change_mpeg4_description(mp4file, VideoTrack, 1, v_esd);"
    },
    {
        "line": 200,
        "fullcodeline": "if (a_esd) gf_isom_change_mpeg4_description(mp4file, AudioTrack, 1, a_esd);"
    },
    {
        "line": 290,
        "fullcodeline": "samp->data = (char *) ISMA_BIFS_AUDIO;"
    },
    {
        "line": 291,
        "fullcodeline": "samp->dataLength = 8;"
    },
    {
        "line": 109,
        "fullcodeline": "while ((bifsID==AID) || (bifsID==VID)) bifsID++;"
    },
    {
        "line": 111,
        "fullcodeline": "while ((odID==AID) || (odID==VID) || (odID==bifsID)) odID++;"
    },
    {
        "line": 124,
        "fullcodeline": "if (!keepESIDs && (VID != ISMA_VIDEO_ES_ID)) {"
    },
    {
        "line": 168,
        "fullcodeline": "if (!keepESIDs && (AID != ISMA_AUDIO_ES_ID)) {"
    },
    {
        "line": 39,
        "fullcodeline": "image_track = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "AID = gf_isom_get_track_id(mp4file, i+1);"
    },
    {
        "line": 75,
        "fullcodeline": "gf_isom_remove_track(mp4file, i+1);"
    },
    {
        "line": 76,
        "fullcodeline": "i -= 1;"
    },
    {
        "line": 77,
        "fullcodeline": "Tracks = gf_isom_get_track_count(mp4file);"
    },
    {
        "line": 80,
        "fullcodeline": "if (esd) gf_odf_desc_del((GF_Descriptor*)esd);"
    },
    {
        "line": 91,
        "fullcodeline": "audioPL = ((GF_InitialObjectDescriptor*)od)->audio_profileAndLevel;"
    },
    {
        "line": 92,
        "fullcodeline": "visualPL = ((GF_InitialObjectDescriptor*)od)->visual_profileAndLevel;"
    },
    {
        "line": 125,
        "fullcodeline": "gf_isom_set_track_id(mp4file, VideoTrack, ISMA_VIDEO_ES_ID);"
    },
    {
        "line": 130,
        "fullcodeline": "v_esd->OCRESID = no_ocr ? 0 : bifsID;"
    },
    {
        "line": 132,
        "fullcodeline": "gf_odf_desc_add_desc((GF_Descriptor *)od, (GF_Descriptor *)v_esd);"
    },
    {
        "line": 133,
        "fullcodeline": "gf_list_add(odU->objectDescriptors, od);"
    },
    {
        "line": 135,
        "fullcodeline": "gf_isom_get_track_layout_info(mp4file, VideoTrack, &w, &h, NULL, NULL, NULL);"
    },
    {
        "line": 169,
        "fullcodeline": "gf_isom_set_track_id(mp4file, AudioTrack, ISMA_AUDIO_ES_ID);"
    },
    {
        "line": 174,
        "fullcodeline": "a_esd->OCRESID = no_ocr ? 0 : bifsID;"
    },
    {
        "line": 177,
        "fullcodeline": "gf_odf_desc_add_desc((GF_Descriptor *)od, (GF_Descriptor *)a_esd);"
    },
    {
        "line": 178,
        "fullcodeline": "gf_list_add(odU->objectDescriptors, od);"
    },
    {
        "line": 273,
        "fullcodeline": "samp->data = (char *) ISMA_BIFS_IMAGE;"
    },
    {
        "line": 274,
        "fullcodeline": "samp->dataLength = 10;"
    },
    {
        "line": 282,
        "fullcodeline": "samp->data = (char *) ISMA_BIFS_AI;"
    },
    {
        "line": 283,
        "fullcodeline": "samp->dataLength = 15;"
    },
    {
        "line": 40,
        "fullcodeline": "if (esd && esd->decoderConfig && ((esd->decoderConfig->objectTypeIndication==GF_CODECID_JPEG) || (esd->decoderConfig->objectTypeIndication==GF_CODECID_PNG)) )"
    },
    {
        "line": 44,
        "fullcodeline": "if (keepImage || !image_track) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (mType==GF_ISOM_MEDIA_HINT) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (!w || !h) {"
    },
    {
        "line": 176,
        "fullcodeline": "if (!keepESIDs) a_esd->ESID = ISMA_AUDIO_ES_ID;"
    },
    {
        "line": 179,
        "fullcodeline": "if (!bifs) {"
    },
    {
        "line": 186,
        "fullcodeline": "if (a_esd->decoderConfig && (a_esd->decoderConfig->objectTypeIndication == GF_CODECID_AAC_MPEG4)"
    },
    {
        "line": 276,
        "fullcodeline": "samp->data = (char *) ISMA_GF_BIFS_VIDEO;"
    },
    {
        "line": 277,
        "fullcodeline": "samp->dataLength = 11;"
    },
    {
        "line": 285,
        "fullcodeline": "samp->data = (char *) ISMA_BIFS_AV;"
    },
    {
        "line": 286,
        "fullcodeline": "samp->dataLength = 16;"
    },
    {
        "line": 41,
        "fullcodeline": "image_track = 1;"
    },
    {
        "line": 51,
        "fullcodeline": "VID = gf_isom_get_track_id(mp4file, i+1);"
    },
    {
        "line": 52,
        "fullcodeline": "is_image = image_track;"
    },
    {
        "line": 63,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_MEDIA, (\"[ISMA convert] More than one audio track found, cannot convert file - remove extra track(s)\\n\") );"
    },
    {
        "line": 71,
        "fullcodeline": "GF_LOG(GF_LOG_INFO, GF_LOG_MEDIA, (\"[ISMA convert] Removing Hint track ID %d\\n\", gf_isom_get_track_id(mp4file, i+1) ));"
    },
    {
        "line": 137,
        "fullcodeline": "gf_isom_get_visual_info(mp4file, VideoTrack, 1, &w, &h);"
    },
    {
        "line": 180,
        "fullcodeline": "bifs = 3;"
    },
    {
        "line": 191,
        "fullcodeline": "gf_m4a_get_config(a_esd->decoderConfig->decoderSpecificInfo->data, a_esd->decoderConfig->decoderSpecificInfo->dataLength, &cfg);"
    },
    {
        "line": 192,
        "fullcodeline": "audioPL = cfg.audioPL;"
    },
    {
        "line": 54,
        "fullcodeline": "GF_LOG(GF_LOG_INFO, GF_LOG_MEDIA, (\"[ISMA convert] Visual track ID %d: only one sample found, assuming image and removing track\\n\", gf_isom_get_track_id(mp4file, i+1) ) );"
    },
    {
        "line": 55,
        "fullcodeline": "gf_isom_remove_track(mp4file, i+1);"
    },
    {
        "line": 56,
        "fullcodeline": "i -= 1;"
    },
    {
        "line": 57,
        "fullcodeline": "Tracks = gf_isom_get_track_count(mp4file);"
    },
    {
        "line": 73,
        "fullcodeline": "GF_LOG(GF_LOG_INFO, GF_LOG_MEDIA, (\"[ISMA convert] Removing track ID %d\\n\", gf_isom_get_track_id(mp4file, i+1) ));"
    },
    {
        "line": 139,
        "fullcodeline": "if (v_esd->decoderConfig"
    },
    {
        "line": 182,
        "fullcodeline": "bifs = 2;"
    },
    {
        "line": 48,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_MEDIA, (\"[ISMA convert] More than one video track found, cannot convert file - remove extra track(s)\\n\"));"
    },
    {
        "line": 62,
        "fullcodeline": "if (esd) gf_odf_desc_del((GF_Descriptor*)esd);"
    },
    {
        "line": 146,
        "fullcodeline": "gf_m4v_get_config(v_esd->decoderConfig->decoderSpecificInfo->data, v_esd->decoderConfig->decoderSpecificInfo->dataLength, &dsi);"
    },
    {
        "line": 147,
        "fullcodeline": "if (!is_image && (!w || !h)) {"
    },
    {
        "line": 153,
        "fullcodeline": "if (dsi.par_num && dsi.par_den && (dsi.par_den!=dsi.par_num)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (esd) gf_odf_desc_del((GF_Descriptor*)esd);"
    },
    {
        "line": 141,
        "fullcodeline": "&& (v_esd->decoderConfig->streamType==GF_STREAM_VISUAL)"
    },
    {
        "line": 148,
        "fullcodeline": "w = dsi.width;"
    },
    {
        "line": 149,
        "fullcodeline": "h = dsi.height;"
    },
    {
        "line": 150,
        "fullcodeline": "gf_isom_set_visual_info(mp4file, VideoTrack, 1, w, h);"
    },
    {
        "line": 151,
        "fullcodeline": "GF_LOG(GF_LOG_INFO, GF_LOG_MEDIA, (\"[ISMA convert] Adjusting visual track size to %d x %d\\n\", w, h));"
    },
    {
        "line": 154,
        "fullcodeline": "w *= dsi.par_num;"
    },
    {
        "line": 155,
        "fullcodeline": "w /= dsi.par_den;"
    },
    {
        "line": 157,
        "fullcodeline": "if (dsi.VideoPL) visualPL = dsi.VideoPL;"
    },
    {
        "line": 140,
        "fullcodeline": "&& (v_esd->decoderConfig->objectTypeIndication==GF_CODECID_MPEG4_PART2)"
    }
]