[
    {
        "line": 25,
        "fullcodeline": "return url, False"
    },
    {
        "line": 4,
        "fullcodeline": "invalid = 'Invalid Firebase URL'"
    },
    {
        "line": 8,
        "fullcodeline": "purl = urlparse(url)"
    },
    {
        "line": 12,
        "fullcodeline": "base_url = '{}://{}/.json'.format(purl.scheme, purl.netloc)"
    },
    {
        "line": 14,
        "fullcodeline": "headers = {"
    },
    {
        "line": 18,
        "fullcodeline": "resp = requests.get(base_url, headers=headers,"
    },
    {
        "line": 5,
        "fullcodeline": "if not valid_host(url):"
    },
    {
        "line": 9,
        "fullcodeline": "if not purl.netloc.endswith('firebaseio.com'):"
    },
    {
        "line": 13,
        "fullcodeline": "proxies, verify = upstream_proxy('https')"
    },
    {
        "line": 21,
        "fullcodeline": "if resp.status_code == 200:"
    },
    {
        "line": 6,
        "fullcodeline": "logger.warning(invalid)"
    },
    {
        "line": 10,
        "fullcodeline": "logger.warning(invalid)"
    },
    {
        "line": 24,
        "fullcodeline": "logger.warning('Open Firebase DB detection failed.')"
    },
    {
        "line": 7,
        "fullcodeline": "return url, False"
    },
    {
        "line": 11,
        "fullcodeline": "return url, False"
    },
    {
        "line": 15,
        "fullcodeline": "'User-Agent': ('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1)'"
    },
    {
        "line": 22,
        "fullcodeline": "return base_url, True"
    }
]