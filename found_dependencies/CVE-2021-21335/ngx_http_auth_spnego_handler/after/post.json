[
    {
        "line": 4,
        "fullcodeline": "ngx_int_t ret = NGX_DECLINED;"
    },
    {
        "line": 8,
        "fullcodeline": "alcf = ngx_http_get_module_loc_conf(r, ngx_http_auth_spnego_module);"
    },
    {
        "line": 14,
        "fullcodeline": "ctx = ngx_http_get_module_ctx(r, ngx_http_auth_spnego_module);"
    },
    {
        "line": 27,
        "fullcodeline": "spnego_debug3(\"SSO auth handling IN: token.len=%d, head=%d, ret=%d\","
    },
    {
        "line": 40,
        "fullcodeline": "spnego_debug0(\"Begin auth\");"
    },
    {
        "line": 70,
        "fullcodeline": "spnego_debug0(\"Detect SPNEGO token\");"
    },
    {
        "line": 71,
        "fullcodeline": "ret = ngx_http_auth_spnego_token(r, ctx);"
    },
    {
        "line": 102,
        "fullcodeline": "ngx_str_t *token_out_b64 = NULL;"
    },
    {
        "line": 122,
        "fullcodeline": "spnego_debug3(\"SSO auth handling OUT: token.len=%d, head=%d, ret=%d\","
    },
    {
        "line": 10,
        "fullcodeline": "if (alcf->protect == 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (NULL == ctx) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (ctx->token.len && ctx->head) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (NULL != r->headers_in.user.data) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (NGX_OK == ret) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (NGX_ERROR == ngx_http_auth_spnego_headers(r, ctx, token_out_b64, alcf)) {"
    },
    {
        "line": 16,
        "fullcodeline": "ctx = ngx_palloc(r->pool, sizeof(ngx_http_auth_spnego_ctx_t));"
    },
    {
        "line": 20,
        "fullcodeline": "ctx->token.len = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "ctx->token.data = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "ctx->head = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "ctx->ret = NGX_HTTP_UNAUTHORIZED;"
    },
    {
        "line": 24,
        "fullcodeline": "ngx_http_set_ctx(r, ctx, ngx_http_auth_spnego_module);"
    },
    {
        "line": 31,
        "fullcodeline": "spnego_debug1(\"Found token and head, returning %d\", ctx->ret);"
    },
    {
        "line": 36,
        "fullcodeline": "spnego_debug0(\"User header set\");"
    },
    {
        "line": 43,
        "fullcodeline": "spnego_debug0(\"Detect basic auth\");"
    },
    {
        "line": 44,
        "fullcodeline": "ret = ngx_http_auth_basic_user(r);"
    },
    {
        "line": 73,
        "fullcodeline": "spnego_debug0(\"Client sent a reasonable Negotiate header\");"
    },
    {
        "line": 74,
        "fullcodeline": "ret = ngx_http_auth_spnego_auth_user_gss(r, ctx, alcf);"
    },
    {
        "line": 99,
        "fullcodeline": "spnego_debug0(\"GSSAPI auth succeeded\");"
    },
    {
        "line": 105,
        "fullcodeline": "ctx->ret = NGX_HTTP_UNAUTHORIZED;"
    },
    {
        "line": 108,
        "fullcodeline": "ctx->ret = NGX_OK;"
    },
    {
        "line": 109,
        "fullcodeline": "token_out_b64 = &ctx->token_out_b64;"
    },
    {
        "line": 113,
        "fullcodeline": "ctx->ret = NGX_HTTP_INTERNAL_SERVER_ERROR;"
    },
    {
        "line": 118,
        "fullcodeline": "spnego_debug0(\"Error setting headers\");"
    },
    {
        "line": 119,
        "fullcodeline": "ctx->ret = NGX_HTTP_INTERNAL_SERVER_ERROR;"
    },
    {
        "line": 17,
        "fullcodeline": "if (NULL == ctx) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (NGX_OK == ret) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (NGX_ERROR == ret) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (NGX_DECLINED == ret) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (!ngx_spnego_authorized_principal(r, &r->headers_in.user, alcf)) {"
    },
    {
        "line": 46,
        "fullcodeline": "spnego_debug0(\"Basic auth credentials supplied by client\");"
    },
    {
        "line": 64,
        "fullcodeline": "spnego_debug0(\"Basic auth succeeded\");"
    },
    {
        "line": 76,
        "fullcodeline": "spnego_debug0(\"GSSAPI failed\");"
    },
    {
        "line": 83,
        "fullcodeline": "spnego_debug0(\"GSSAPI failed\");"
    },
    {
        "line": 95,
        "fullcodeline": "spnego_debug0(\"User not authorized\");"
    },
    {
        "line": 50,
        "fullcodeline": "if (NGX_OK != ngx_http_auth_spnego_basic(r, ctx, alcf)) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (!ngx_spnego_authorized_principal(r, &r->headers_in.user, alcf)) {"
    },
    {
        "line": 65,
        "fullcodeline": "return (ctx->ret = NGX_OK);"
    },
    {
        "line": 77,
        "fullcodeline": "return (ctx->ret = NGX_HTTP_INTERNAL_SERVER_ERROR);"
    },
    {
        "line": 84,
        "fullcodeline": "if(!alcf->allow_basic) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (NGX_ERROR == ngx_http_auth_spnego_headers_basic_only(r, ctx, alcf)) {"
    },
    {
        "line": 91,
        "fullcodeline": "return (ctx->ret = NGX_HTTP_UNAUTHORIZED);"
    },
    {
        "line": 96,
        "fullcodeline": "return (ctx->ret = NGX_HTTP_FORBIDDEN);"
    },
    {
        "line": 51,
        "fullcodeline": "spnego_debug0(\"Basic auth failed\");"
    },
    {
        "line": 60,
        "fullcodeline": "spnego_debug0(\"User not authorized\");"
    },
    {
        "line": 88,
        "fullcodeline": "spnego_debug0(\"Error setting headers\");"
    },
    {
        "line": 52,
        "fullcodeline": "if (NGX_ERROR == ngx_http_auth_spnego_headers_basic_only(r, ctx, alcf)) {"
    },
    {
        "line": 56,
        "fullcodeline": "return (ctx->ret = NGX_HTTP_UNAUTHORIZED);"
    },
    {
        "line": 61,
        "fullcodeline": "return (ctx->ret = NGX_HTTP_FORBIDDEN);"
    },
    {
        "line": 85,
        "fullcodeline": "return (ctx->ret = NGX_HTTP_FORBIDDEN);"
    },
    {
        "line": 89,
        "fullcodeline": "return (ctx->ret = NGX_HTTP_INTERNAL_SERVER_ERROR);"
    },
    {
        "line": 53,
        "fullcodeline": "spnego_debug0(\"Error setting headers\");"
    },
    {
        "line": 54,
        "fullcodeline": "return (ctx->ret = NGX_HTTP_INTERNAL_SERVER_ERROR);"
    }
]