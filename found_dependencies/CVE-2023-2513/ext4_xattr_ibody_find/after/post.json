[
    {
        "line": 11,
        "fullcodeline": "raw_inode = ext4_raw_inode(&is->iloc);"
    },
    {
        "line": 12,
        "fullcodeline": "header = IHDR(inode, raw_inode);"
    },
    {
        "line": 13,
        "fullcodeline": "is->s.base = is->s.first = IFIRST(header);"
    },
    {
        "line": 14,
        "fullcodeline": "is->s.here = is->s.first;"
    },
    {
        "line": 15,
        "fullcodeline": "is->s.end = (void *)raw_inode + EXT4_SB(inode->i_sb)->s_inode_size;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!EXT4_INODE_HAS_XATTR_SPACE(inode))"
    },
    {
        "line": 16,
        "fullcodeline": "if (ext4_test_inode_state(inode, EXT4_STATE_XATTR)) {"
    },
    {
        "line": 17,
        "fullcodeline": "error = xattr_check_inode(inode, header, is->s.end);"
    },
    {
        "line": 21,
        "fullcodeline": "error = xattr_find_entry(inode, &is->s.here, is->s.end,"
    },
    {
        "line": 25,
        "fullcodeline": "is->s.not_found = error;"
    },
    {
        "line": 23,
        "fullcodeline": "if (error && error != -ENODATA)"
    }
]