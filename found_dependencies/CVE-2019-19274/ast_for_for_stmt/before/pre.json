[
    {
        "line": 3,
        "fullcodeline": "asdl_seq *_target, *seq = NULL, *suite_seq;"
    },
    {
        "line": 17,
        "fullcodeline": "REQ(n, for_stmt);"
    },
    {
        "line": 19,
        "fullcodeline": "has_type_comment = TYPE(CHILD(n, 5)) == TYPE_COMMENT;"
    },
    {
        "line": 27,
        "fullcodeline": "node_target = CHILD(n, 1);"
    },
    {
        "line": 28,
        "fullcodeline": "_target = ast_for_exprlist(c, node_target, Store);"
    },
    {
        "line": 33,
        "fullcodeline": "first = (expr_ty)asdl_seq_GET(_target, 0);"
    },
    {
        "line": 39,
        "fullcodeline": "expression = ast_for_testlist(c, CHILD(n, 3));"
    },
    {
        "line": 42,
        "fullcodeline": "suite_seq = ast_for_suite(c, CHILD(n, 5 + has_type_comment));"
    },
    {
        "line": 10,
        "fullcodeline": "if (is_async && c->c_feature_version < 5) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (!_target)"
    },
    {
        "line": 40,
        "fullcodeline": "if (!expression)"
    },
    {
        "line": 43,
        "fullcodeline": "if (!suite_seq)"
    },
    {
        "line": 11,
        "fullcodeline": "ast_error(c, n,"
    },
    {
        "line": 21,
        "fullcodeline": "if (NCH(n) == 9 + has_type_comment) {"
    },
    {
        "line": 22,
        "fullcodeline": "seq = ast_for_suite(c, CHILD(n, 8 + has_type_comment));"
    },
    {
        "line": 34,
        "fullcodeline": "if (NCH(node_target) == 1)"
    },
    {
        "line": 35,
        "fullcodeline": "target = first;"
    },
    {
        "line": 47,
        "fullcodeline": "type_comment = NEW_TYPE_COMMENT(CHILD(n, 5));"
    },
    {
        "line": 23,
        "fullcodeline": "if (!seq)"
    },
    {
        "line": 37,
        "fullcodeline": "target = Tuple(_target, Store, first->lineno, first->col_offset, c->c_arena);"
    },
    {
        "line": 49,
        "fullcodeline": "type_comment = NULL;"
    },
    {
        "line": 52,
        "fullcodeline": "return AsyncFor(target, expression, suite_seq, seq,"
    },
    {
        "line": 53,
        "fullcodeline": "type_comment, LINENO(n), n->n_col_offset,"
    },
    {
        "line": 56,
        "fullcodeline": "return For(target, expression, suite_seq, seq,"
    },
    {
        "line": 57,
        "fullcodeline": "type_comment, LINENO(n), n->n_col_offset,"
    }
]