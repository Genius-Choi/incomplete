[
    {
        "line": 22,
        "fullcodeline": "int i, j, k, nposargs = 0, nkwonlyargs = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "int nposdefaults = 0, found_default = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "arg_ty vararg = NULL, kwarg = NULL;"
    },
    {
        "line": 63,
        "fullcodeline": "posargs = (nposargs ? _Ta3_asdl_seq_new(nposargs, c->c_arena) : NULL);"
    },
    {
        "line": 66,
        "fullcodeline": "kwonlyargs = (nkwonlyargs ?"
    },
    {
        "line": 70,
        "fullcodeline": "posdefaults = (nposdefaults ?"
    },
    {
        "line": 77,
        "fullcodeline": "kwdefaults = (nkwonlyargs ?"
    },
    {
        "line": 90,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "j = 0;  /* index for defaults */"
    },
    {
        "line": 92,
        "fullcodeline": "k = 0;  /* index for args */"
    },
    {
        "line": 29,
        "fullcodeline": "if (TYPE(n) == parameters) {"
    },
    {
        "line": 34,
        "fullcodeline": "assert(TYPE(n) == typedargslist || TYPE(n) == varargslist);"
    },
    {
        "line": 40,
        "fullcodeline": "for (i = 0; i < NCH(n); i++) {"
    },
    {
        "line": 58,
        "fullcodeline": "for ( ; i < NCH(n); ++i) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (!posargs && nposargs)"
    },
    {
        "line": 68,
        "fullcodeline": "if (!kwonlyargs && nkwonlyargs)"
    },
    {
        "line": 79,
        "fullcodeline": "if (!kwdefaults && nkwonlyargs)"
    },
    {
        "line": 93,
        "fullcodeline": "while (i < NCH(n)) {"
    },
    {
        "line": 198,
        "fullcodeline": "return arguments(posargs, vararg, kwonlyargs, kwdefaults, kwarg, posdefaults, c->c_arena);"
    },
    {
        "line": 32,
        "fullcodeline": "n = CHILD(n, 1);"
    },
    {
        "line": 41,
        "fullcodeline": "ch = CHILD(n, i);"
    },
    {
        "line": 59,
        "fullcodeline": "ch = CHILD(n, i);"
    },
    {
        "line": 67,
        "fullcodeline": "_Ta3_asdl_seq_new(nkwonlyargs, c->c_arena) : NULL);"
    },
    {
        "line": 71,
        "fullcodeline": "_Ta3_asdl_seq_new(nposdefaults, c->c_arena) : NULL);"
    },
    {
        "line": 72,
        "fullcodeline": "if (!posdefaults && nposdefaults)"
    },
    {
        "line": 78,
        "fullcodeline": "_Ta3_asdl_seq_new(nkwonlyargs, c->c_arena) : NULL);"
    },
    {
        "line": 94,
        "fullcodeline": "ch = CHILD(n, i);"
    },
    {
        "line": 30,
        "fullcodeline": "if (NCH(n) == 2) /* () as argument list */"
    },
    {
        "line": 42,
        "fullcodeline": "if (TYPE(ch) == STAR) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (TYPE(ch) == DOUBLESTAR) break;"
    },
    {
        "line": 53,
        "fullcodeline": "if (TYPE(ch) == vfpdef || TYPE(ch) == tfpdef) nposargs++;"
    },
    {
        "line": 54,
        "fullcodeline": "if (TYPE(ch) == EQUAL) nposdefaults++;"
    },
    {
        "line": 61,
        "fullcodeline": "if (TYPE(ch) == tfpdef || TYPE(ch) == vfpdef) nkwonlyargs++;"
    },
    {
        "line": 95,
        "fullcodeline": "switch (TYPE(ch)) {"
    },
    {
        "line": 44,
        "fullcodeline": "i++;"
    },
    {
        "line": 60,
        "fullcodeline": "if (TYPE(ch) == DOUBLESTAR) break;"
    },
    {
        "line": 115,
        "fullcodeline": "arg = ast_for_arg(c, ch);"
    },
    {
        "line": 118,
        "fullcodeline": "asdl_seq_SET(posargs, k++, arg);"
    },
    {
        "line": 119,
        "fullcodeline": "i += 1; /* the name */"
    },
    {
        "line": 131,
        "fullcodeline": "ch = CHILD(n, i+1);  /* tfpdef or COMMA */"
    },
    {
        "line": 172,
        "fullcodeline": "ch = CHILD(n, i+1);  /* tfpdef */"
    },
    {
        "line": 174,
        "fullcodeline": "kwarg = ast_for_arg(c, ch);"
    },
    {
        "line": 177,
        "fullcodeline": "i += 2; /* the double star and the name */"
    },
    {
        "line": 182,
        "fullcodeline": "assert(i);"
    },
    {
        "line": 188,
        "fullcodeline": "arg->type_comment = NEW_TYPE_COMMENT(ch);"
    },
    {
        "line": 189,
        "fullcodeline": "i += 1;"
    },
    {
        "line": 192,
        "fullcodeline": "PyErr_Format(PyExc_SystemError,"
    },
    {
        "line": 31,
        "fullcodeline": "return arguments(NULL, NULL, NULL, NULL, NULL, NULL, c->c_arena);"
    },
    {
        "line": 116,
        "fullcodeline": "if (!arg)"
    },
    {
        "line": 120,
        "fullcodeline": "if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)"
    },
    {
        "line": 132,
        "fullcodeline": "if (TYPE(ch) == COMMA) {"
    },
    {
        "line": 173,
        "fullcodeline": "assert(TYPE(ch) == tfpdef || TYPE(ch) == vfpdef);"
    },
    {
        "line": 175,
        "fullcodeline": "if (!kwarg)"
    },
    {
        "line": 178,
        "fullcodeline": "if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)"
    },
    {
        "line": 194,
        "fullcodeline": "TYPE(ch), i);"
    },
    {
        "line": 45,
        "fullcodeline": "if (i < NCH(n) && /* skip argument following star */"
    },
    {
        "line": 46,
        "fullcodeline": "(TYPE(CHILD(n, i)) == tfpdef ||"
    },
    {
        "line": 48,
        "fullcodeline": "i++;"
    },
    {
        "line": 101,
        "fullcodeline": "if (i + 1 < NCH(n) && TYPE(CHILD(n, i + 1)) == EQUAL) {"
    },
    {
        "line": 102,
        "fullcodeline": "expr_ty expression = ast_for_expr(c, CHILD(n, i + 2));"
    },
    {
        "line": 106,
        "fullcodeline": "asdl_seq_SET(posdefaults, j++, expression);"
    },
    {
        "line": 107,
        "fullcodeline": "i += 2;"
    },
    {
        "line": 121,
        "fullcodeline": "i += 1; /* the comma, if present */"
    },
    {
        "line": 124,
        "fullcodeline": "if (i+1 >= NCH(n) ||"
    },
    {
        "line": 125,
        "fullcodeline": "(i+2 == NCH(n) && (TYPE(CHILD(n, i+1)) == COMMA"
    },
    {
        "line": 134,
        "fullcodeline": "i += 2; /* now follows keyword only arguments */"
    },
    {
        "line": 142,
        "fullcodeline": "res = handle_keywordonly_args(c, n, i,"
    },
    {
        "line": 145,
        "fullcodeline": "i = res; /* res has new position to process */"
    },
    {
        "line": 179,
        "fullcodeline": "i += 1; /* the comma, if present */"
    },
    {
        "line": 47,
        "fullcodeline": "TYPE(CHILD(n, i)) == vfpdef)) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (!expression)"
    },
    {
        "line": 105,
        "fullcodeline": "assert(posdefaults != NULL);"
    },
    {
        "line": 127,
        "fullcodeline": "ast_error(c, CHILD(n, i),"
    },
    {
        "line": 136,
        "fullcodeline": "if (i < NCH(n) && TYPE(CHILD(n, i)) == TYPE_COMMENT) {"
    },
    {
        "line": 144,
        "fullcodeline": "if (res == -1) return NULL;"
    },
    {
        "line": 148,
        "fullcodeline": "vararg = ast_for_arg(c, ch);"
    },
    {
        "line": 152,
        "fullcodeline": "i += 2; /* the star and the name */"
    },
    {
        "line": 126,
        "fullcodeline": "|| TYPE(CHILD(n, i+1)) == TYPE_COMMENT))) {"
    },
    {
        "line": 149,
        "fullcodeline": "if (!vararg)"
    },
    {
        "line": 153,
        "fullcodeline": "if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)"
    },
    {
        "line": 156,
        "fullcodeline": "if (i < NCH(n) && TYPE(CHILD(n, i)) == TYPE_COMMENT) {"
    },
    {
        "line": 137,
        "fullcodeline": "ast_error(c, CHILD(n, i),"
    },
    {
        "line": 154,
        "fullcodeline": "i += 1; /* the comma, if present */"
    },
    {
        "line": 157,
        "fullcodeline": "vararg->type_comment = NEW_TYPE_COMMENT(CHILD(n, i));"
    },
    {
        "line": 158,
        "fullcodeline": "i += 1;"
    },
    {
        "line": 161,
        "fullcodeline": "if (i < NCH(n) && (TYPE(CHILD(n, i)) == tfpdef"
    },
    {
        "line": 164,
        "fullcodeline": "res = handle_keywordonly_args(c, n, i,"
    },
    {
        "line": 167,
        "fullcodeline": "i = res; /* res has new position to process */"
    },
    {
        "line": 162,
        "fullcodeline": "|| TYPE(CHILD(n, i)) == vfpdef)) {"
    },
    {
        "line": 166,
        "fullcodeline": "if (res == -1) return NULL;"
    }
]