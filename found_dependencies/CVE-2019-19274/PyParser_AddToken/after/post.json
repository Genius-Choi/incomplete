[
    {
        "line": 9,
        "fullcodeline": "D(printf(\"Token %s/'%s' ... \", _PyParser_TokenNames[type], str));"
    },
    {
        "line": 12,
        "fullcodeline": "ilabel = classify(ps, type, str);"
    },
    {
        "line": 13,
        "fullcodeline": "if (ilabel < 0)"
    },
    {
        "line": 22,
        "fullcodeline": "D(printf(\" DFA '%s', state %d:\","
    },
    {
        "line": 107,
        "fullcodeline": "D(printf(\" Error.\\n\"));"
    },
    {
        "line": 26,
        "fullcodeline": "if (s->s_lower <= ilabel && ilabel < s->s_upper) {"
    },
    {
        "line": 97,
        "fullcodeline": "s_pop(&ps->p_stack);"
    },
    {
        "line": 98,
        "fullcodeline": "D(printf(\" Pop ...\\n\"));"
    },
    {
        "line": 28,
        "fullcodeline": "if (x != -1) {"
    },
    {
        "line": 99,
        "fullcodeline": "if (s_empty(&ps->p_stack)) {"
    },
    {
        "line": 109,
        "fullcodeline": "if (s->s_lower == s->s_upper - 1) {"
    },
    {
        "line": 27,
        "fullcodeline": "int x = s->s_accel[ilabel - s->s_lower];"
    },
    {
        "line": 60,
        "fullcodeline": "D(printf(\" Shift.\\n\"));"
    },
    {
        "line": 100,
        "fullcodeline": "D(printf(\" Error: bottom of stack.\\n\"));"
    },
    {
        "line": 29,
        "fullcodeline": "if (x & (1<<7)) {"
    },
    {
        "line": 54,
        "fullcodeline": "if ((err = shift(&ps->p_stack, type, str,"
    },
    {
        "line": 115,
        "fullcodeline": "*expected_ret = -1;"
    },
    {
        "line": 31,
        "fullcodeline": "int nt = (x >> 8) + NT_OFFSET;"
    },
    {
        "line": 32,
        "fullcodeline": "int arrow = x & ((1<<7)-1);"
    },
    {
        "line": 41,
        "fullcodeline": "d1 = PyGrammar_FindDFA("
    },
    {
        "line": 49,
        "fullcodeline": "D(printf(\" Push '%s'\\n\", d1->d_name));"
    },
    {
        "line": 57,
        "fullcodeline": "D(printf(\" MemError: shift.\\n\"));"
    },
    {
        "line": 64,
        "fullcodeline": "s->s_accept && s->s_narcs == 1) {"
    },
    {
        "line": 65,
        "fullcodeline": "D(printf(\"  DFA '%s', state %d: \""
    },
    {
        "line": 77,
        "fullcodeline": "s_pop(&ps->p_stack);"
    },
    {
        "line": 34,
        "fullcodeline": "if (nt == func_body_suite && !(ps->p_flags & PyCF_TYPE_COMMENTS)) {"
    },
    {
        "line": 43,
        "fullcodeline": "if ((err = push(&ps->p_stack, nt, d1,"
    },
    {
        "line": 78,
        "fullcodeline": "if (s_empty(&ps->p_stack)) {"
    },
    {
        "line": 38,
        "fullcodeline": "D(printf(\" [switch func_body_suite to suite]\"));"
    },
    {
        "line": 39,
        "fullcodeline": "nt = suite;"
    },
    {
        "line": 46,
        "fullcodeline": "D(printf(\" MemError: push\\n\"));"
    },
    {
        "line": 79,
        "fullcodeline": "D(printf(\"  ACCEPT.\\n\"));"
    }
]