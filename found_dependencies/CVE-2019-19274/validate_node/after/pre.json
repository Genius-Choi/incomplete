[
    {
        "line": 3,
        "fullcodeline": "int type = TYPE(tree);"
    },
    {
        "line": 4,
        "fullcodeline": "int nch = NCH(tree);"
    },
    {
        "line": 9,
        "fullcodeline": "assert(ISNONTERMINAL(type));"
    },
    {
        "line": 10,
        "fullcodeline": "type -= NT_OFFSET;"
    },
    {
        "line": 15,
        "fullcodeline": "nt_dfa = &_PyParser_Grammar.g_dfa[type];"
    },
    {
        "line": 16,
        "fullcodeline": "REQ(tree, nt_dfa->d_type);"
    },
    {
        "line": 19,
        "fullcodeline": "dfa_state = &nt_dfa->d_state[nt_dfa->d_initial];"
    },
    {
        "line": 11,
        "fullcodeline": "if (type >= _PyParser_Grammar.g_ndfas) {"
    },
    {
        "line": 20,
        "fullcodeline": "for (pos = 0; pos < nch; ++pos) {"
    },
    {
        "line": 63,
        "fullcodeline": "for (arc = 0; arc < dfa_state->s_narcs; ++arc) {"
    },
    {
        "line": 12,
        "fullcodeline": "PyErr_Format(parser_error, \"Unrecognized node type %d.\", TYPE(tree));"
    },
    {
        "line": 21,
        "fullcodeline": "node *ch = CHILD(tree, pos);"
    },
    {
        "line": 22,
        "fullcodeline": "int ch_type = TYPE(ch);"
    },
    {
        "line": 29,
        "fullcodeline": "for (arc = 0; arc < dfa_state->s_narcs; ++arc) {"
    },
    {
        "line": 44,
        "fullcodeline": "short a_label = dfa_state->s_arc->a_lbl;"
    },
    {
        "line": 49,
        "fullcodeline": "next_type = _PyParser_Grammar.g_ll.ll_label[a_label].lb_type;"
    },
    {
        "line": 23,
        "fullcodeline": "if (ch_type == suite && TYPE(tree) == funcdef) {"
    },
    {
        "line": 27,
        "fullcodeline": "ch_type = func_body_suite;"
    },
    {
        "line": 30,
        "fullcodeline": "short a_label = dfa_state->s_arc[arc].a_lbl;"
    },
    {
        "line": 50,
        "fullcodeline": "if (ISNONTERMINAL(next_type))"
    },
    {
        "line": 31,
        "fullcodeline": "assert(a_label < _PyParser_Grammar.g_ll.ll_nlabels);"
    },
    {
        "line": 32,
        "fullcodeline": "if (_PyParser_Grammar.g_ll.ll_label[a_label].lb_type == ch_type) {"
    },
    {
        "line": 38,
        "fullcodeline": "dfa_state = &nt_dfa->d_state[dfa_state->s_arc[arc].a_arrow];"
    },
    {
        "line": 34,
        "fullcodeline": "if (ISNONTERMINAL(ch_type) && !validate_node(ch))"
    }
]