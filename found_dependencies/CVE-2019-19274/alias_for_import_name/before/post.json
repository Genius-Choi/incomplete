[
    {
        "line": 11,
        "fullcodeline": "switch (TYPE(n)) {"
    },
    {
        "line": 103,
        "fullcodeline": "str = PyUnicode_InternFromString(\"*\");"
    },
    {
        "line": 110,
        "fullcodeline": "PyErr_Format(PyExc_SystemError,"
    },
    {
        "line": 13,
        "fullcodeline": "node *name_node = CHILD(n, 0);"
    },
    {
        "line": 14,
        "fullcodeline": "str = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "name = NEW_IDENTIFIER(name_node);"
    },
    {
        "line": 33,
        "fullcodeline": "if (NCH(n) == 1) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (NCH(n) == 1) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (PyArena_AddPyObject(c->c_arena, str) < 0) {"
    },
    {
        "line": 108,
        "fullcodeline": "return alias(str, NULL, c->c_arena);"
    },
    {
        "line": 111,
        "fullcodeline": "\"unexpected import name: %d\", TYPE(n));"
    },
    {
        "line": 16,
        "fullcodeline": "if (!name)"
    },
    {
        "line": 18,
        "fullcodeline": "if (NCH(n) == 3) {"
    },
    {
        "line": 30,
        "fullcodeline": "return alias(name, str, c->c_arena);"
    },
    {
        "line": 34,
        "fullcodeline": "n = CHILD(n, 0);"
    },
    {
        "line": 53,
        "fullcodeline": "node *name_node = CHILD(n, 0);"
    },
    {
        "line": 54,
        "fullcodeline": "name = NEW_IDENTIFIER(name_node);"
    },
    {
        "line": 105,
        "fullcodeline": "Py_DECREF(str);"
    },
    {
        "line": 19,
        "fullcodeline": "node *str_node = CHILD(n, 2);"
    },
    {
        "line": 20,
        "fullcodeline": "str = NEW_IDENTIFIER(str_node);"
    },
    {
        "line": 38,
        "fullcodeline": "node *asname_node = CHILD(n, 2);"
    },
    {
        "line": 39,
        "fullcodeline": "alias_ty a = alias_for_import_name(c, CHILD(n, 0), 0);"
    },
    {
        "line": 42,
        "fullcodeline": "assert(!a->asname);"
    },
    {
        "line": 43,
        "fullcodeline": "a->asname = NEW_IDENTIFIER(asname_node);"
    },
    {
        "line": 55,
        "fullcodeline": "if (!name)"
    },
    {
        "line": 57,
        "fullcodeline": "if (store && forbidden_name(c, name, name_node, 0))"
    },
    {
        "line": 59,
        "fullcodeline": "return alias(name, NULL, c->c_arena);"
    },
    {
        "line": 68,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 72,
        "fullcodeline": "len--; /* the last name doesn't have a dot */"
    },
    {
        "line": 73,
        "fullcodeline": "str = PyBytes_FromStringAndSize(NULL, len);"
    },
    {
        "line": 76,
        "fullcodeline": "s = PyBytes_AS_STRING(str);"
    },
    {
        "line": 85,
        "fullcodeline": "--s;"
    },
    {
        "line": 86,
        "fullcodeline": "*s = '\\0';"
    },
    {
        "line": 87,
        "fullcodeline": "uni = PyUnicode_DecodeUTF8(PyBytes_AS_STRING(str),"
    },
    {
        "line": 90,
        "fullcodeline": "Py_DECREF(str);"
    },
    {
        "line": 93,
        "fullcodeline": "str = uni;"
    },
    {
        "line": 94,
        "fullcodeline": "PyUnicode_InternInPlace(&str);"
    },
    {
        "line": 21,
        "fullcodeline": "if (!str)"
    },
    {
        "line": 23,
        "fullcodeline": "if (store && forbidden_name(c, str, str_node, 0))"
    },
    {
        "line": 40,
        "fullcodeline": "if (!a)"
    },
    {
        "line": 44,
        "fullcodeline": "if (!a->asname)"
    },
    {
        "line": 46,
        "fullcodeline": "if (forbidden_name(c, a->asname, asname_node, 0))"
    },
    {
        "line": 69,
        "fullcodeline": "for (i = 0; i < NCH(n); i += 2)"
    },
    {
        "line": 71,
        "fullcodeline": "len += strlen(STR(CHILD(n, i))) + 1;"
    },
    {
        "line": 74,
        "fullcodeline": "if (!str)"
    },
    {
        "line": 77,
        "fullcodeline": "if (!s)"
    },
    {
        "line": 79,
        "fullcodeline": "for (i = 0; i < NCH(n); i += 2) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (!uni)"
    },
    {
        "line": 95,
        "fullcodeline": "if (PyArena_AddPyObject(c->c_arena, str) < 0) {"
    },
    {
        "line": 99,
        "fullcodeline": "return alias(str, NULL, c->c_arena);"
    },
    {
        "line": 27,
        "fullcodeline": "if (forbidden_name(c, name, name_node, 0))"
    },
    {
        "line": 80,
        "fullcodeline": "char *sch = STR(CHILD(n, i));"
    },
    {
        "line": 81,
        "fullcodeline": "strcpy(s, STR(CHILD(n, i)));"
    },
    {
        "line": 82,
        "fullcodeline": "s += strlen(sch);"
    },
    {
        "line": 83,
        "fullcodeline": "*s++ = '.';"
    },
    {
        "line": 88,
        "fullcodeline": "PyBytes_GET_SIZE(str),"
    },
    {
        "line": 96,
        "fullcodeline": "Py_DECREF(str);"
    }
]