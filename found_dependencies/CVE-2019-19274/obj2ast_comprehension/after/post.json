[
    {
        "line": 3,
        "fullcodeline": "PyObject* tmp = NULL;"
    },
    {
        "line": 78,
        "fullcodeline": "*out = comprehension(target, iter, ifs, is_async, arena);"
    },
    {
        "line": 81,
        "fullcodeline": "Py_XDECREF(tmp);"
    },
    {
        "line": 9,
        "fullcodeline": "if (lookup_attr_id(obj, &PyId_target, &tmp) < 0) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (tmp == NULL) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (lookup_attr_id(obj, &PyId_iter, &tmp) < 0) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (tmp == NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (lookup_attr_id(obj, &PyId_ifs, &tmp) < 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (tmp == NULL) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (lookup_attr_id(obj, &PyId_is_async, &tmp) < 0) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (tmp == NULL) {"
    },
    {
        "line": 13,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"target\\\" missing from comprehension\");"
    },
    {
        "line": 26,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"iter\\\" missing from comprehension\");"
    },
    {
        "line": 39,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"ifs\\\" missing from comprehension\");"
    },
    {
        "line": 69,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"is_async\\\" missing from comprehension\");"
    },
    {
        "line": 18,
        "fullcodeline": "res = obj2ast_expr(tmp, &target, arena);"
    },
    {
        "line": 20,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 31,
        "fullcodeline": "res = obj2ast_expr(tmp, &iter, arena);"
    },
    {
        "line": 33,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 50,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 51,
        "fullcodeline": "ifs = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 63,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 74,
        "fullcodeline": "res = obj2ast_int(tmp, &is_async, arena);"
    },
    {
        "line": 76,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 19,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 32,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 46,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (ifs == NULL) goto failed;"
    },
    {
        "line": 53,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 47,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"comprehension field \\\"ifs\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 55,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"
    },
    {
        "line": 61,
        "fullcodeline": "asdl_seq_SET(ifs, i, val);"
    },
    {
        "line": 56,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 57,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 58,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"comprehension field \\\"ifs\\\" changed size during iteration\");"
    }
]