[
    {
        "line": 8,
        "fullcodeline": "fp = fopen(filename, \"r\");"
    },
    {
        "line": 13,
        "fullcodeline": "g0 = meta_grammar();"
    },
    {
        "line": 14,
        "fullcodeline": "n = Ta3Parser_ParseFile(fp, filename, g0, g0->g_start,"
    },
    {
        "line": 16,
        "fullcodeline": "fclose(fp);"
    },
    {
        "line": 38,
        "fullcodeline": "g = pgen(n);"
    },
    {
        "line": 39,
        "fullcodeline": "Ta3Node_Free(n);"
    },
    {
        "line": 9,
        "fullcodeline": "if (fp == NULL) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (n == NULL) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (g == NULL) {"
    },
    {
        "line": 10,
        "fullcodeline": "perror(filename);"
    },
    {
        "line": 11,
        "fullcodeline": "Py_Exit(1);"
    },
    {
        "line": 15,
        "fullcodeline": "(char *)NULL, (char *)NULL, &err);"
    },
    {
        "line": 18,
        "fullcodeline": "fprintf(stderr, \"Parsing error %d, line %d.\\n\","
    },
    {
        "line": 36,
        "fullcodeline": "Py_Exit(1);"
    },
    {
        "line": 41,
        "fullcodeline": "printf(\"Bad grammar.\\n\");"
    },
    {
        "line": 42,
        "fullcodeline": "Py_Exit(1);"
    },
    {
        "line": 20,
        "fullcodeline": "if (err.text != NULL) {"
    },
    {
        "line": 23,
        "fullcodeline": "fprintf(stderr, \"%s\", err.text);"
    },
    {
        "line": 24,
        "fullcodeline": "len = strlen(err.text);"
    },
    {
        "line": 33,
        "fullcodeline": "fprintf(stderr, \"^\\n\");"
    },
    {
        "line": 34,
        "fullcodeline": "PyObject_FREE(err.text);"
    },
    {
        "line": 25,
        "fullcodeline": "if (len == 0 || err.text[len-1] != '\\n')"
    },
    {
        "line": 27,
        "fullcodeline": "for (i = 0; i < err.offset; i++) {"
    },
    {
        "line": 26,
        "fullcodeline": "fprintf(stderr, \"\\n\");"
    },
    {
        "line": 28,
        "fullcodeline": "if (err.text[i] == '\\t')"
    },
    {
        "line": 29,
        "fullcodeline": "putc('\\t', stderr);"
    },
    {
        "line": 31,
        "fullcodeline": "putc(' ', stderr);"
    }
]