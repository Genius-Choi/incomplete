[
    {
        "line": 5,
        "fullcodeline": "PyObject *tmp = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Module_type);"
    },
    {
        "line": 79,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Interactive_type);"
    },
    {
        "line": 118,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Expression_type);"
    },
    {
        "line": 140,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)FunctionType_type);"
    },
    {
        "line": 191,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Suite_type);"
    },
    {
        "line": 7,
        "fullcodeline": "if (obj == Py_None) {"
    },
    {
        "line": 8,
        "fullcodeline": "*out = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 75,
        "fullcodeline": "*out = Module(body, type_ignores, arena);"
    },
    {
        "line": 80,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 114,
        "fullcodeline": "*out = Interactive(body, arena);"
    },
    {
        "line": 119,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 136,
        "fullcodeline": "*out = Expression(body, arena);"
    },
    {
        "line": 141,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 187,
        "fullcodeline": "*out = FunctionType(argtypes, returns, arena);"
    },
    {
        "line": 192,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 226,
        "fullcodeline": "*out = Suite(body, arena);"
    },
    {
        "line": 19,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_type_ignores)) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 125,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_argtypes)) {"
    },
    {
        "line": 176,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_returns)) {"
    },
    {
        "line": 198,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 23,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 29,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 30,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 51,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_type_ignores);"
    },
    {
        "line": 57,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 58,
        "fullcodeline": "type_ignores = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 70,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 90,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 96,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 97,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 109,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 127,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 129,
        "fullcodeline": "res = obj2ast_expr(tmp, &body, arena);"
    },
    {
        "line": 131,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 152,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_argtypes);"
    },
    {
        "line": 158,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 159,
        "fullcodeline": "argtypes = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 178,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_returns);"
    },
    {
        "line": 180,
        "fullcodeline": "res = obj2ast_expr(tmp, &returns, arena);"
    },
    {
        "line": 182,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 202,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 208,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 209,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 221,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 24,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 31,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 32,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 59,
        "fullcodeline": "if (type_ignores == NULL) goto failed;"
    },
    {
        "line": 60,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 98,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 99,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 128,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 153,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 160,
        "fullcodeline": "if (argtypes == NULL) goto failed;"
    },
    {
        "line": 161,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 179,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 203,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 210,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 211,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 34,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 40,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 53,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 62,
        "fullcodeline": "res = obj2ast_type_ignore(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 68,
        "fullcodeline": "asdl_seq_SET(type_ignores, i, value);"
    },
    {
        "line": 92,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 101,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 107,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 154,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 163,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 169,
        "fullcodeline": "asdl_seq_SET(argtypes, i, value);"
    },
    {
        "line": 204,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 213,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 219,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 36,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 165,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 215,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    }
]