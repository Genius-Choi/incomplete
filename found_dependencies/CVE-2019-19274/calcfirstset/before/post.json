[
    {
        "line": 28,
        "fullcodeline": "d->d_first = dummy;"
    },
    {
        "line": 32,
        "fullcodeline": "result = newbitset(nbits);"
    },
    {
        "line": 37,
        "fullcodeline": "nsyms = 1;"
    },
    {
        "line": 38,
        "fullcodeline": "sym[0] = findlabel(&g->g_ll, d->d_type, (char *)NULL);"
    },
    {
        "line": 74,
        "fullcodeline": "d->d_first = result;"
    },
    {
        "line": 84,
        "fullcodeline": "PyObject_FREE(sym);"
    },
    {
        "line": 18,
        "fullcodeline": "if (dummy == NULL)"
    },
    {
        "line": 20,
        "fullcodeline": "if (d->d_first == dummy) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (d->d_first != NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (sym == NULL)"
    },
    {
        "line": 41,
        "fullcodeline": "for (i = 0; i < s->s_narcs; i++) {"
    },
    {
        "line": 16,
        "fullcodeline": "printf(\"Calculate FIRST set for '%s'\\n\", d->d_name);"
    },
    {
        "line": 19,
        "fullcodeline": "dummy = newbitset(1);"
    },
    {
        "line": 21,
        "fullcodeline": "fprintf(stderr, \"Left-recursion for '%s'\\n\", d->d_name);"
    },
    {
        "line": 25,
        "fullcodeline": "fprintf(stderr, \"Re-calculating FIRST set for '%s' ???\\n\","
    },
    {
        "line": 36,
        "fullcodeline": "Py_FatalError(\"no mem for new sym in calcfirstset\");"
    },
    {
        "line": 76,
        "fullcodeline": "printf(\"FIRST set for '%s': {\", d->d_name);"
    },
    {
        "line": 81,
        "fullcodeline": "printf(\" }\\n\");"
    },
    {
        "line": 43,
        "fullcodeline": "for (j = 0; j < nsyms; j++) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (j >= nsyms) { /* New label */"
    },
    {
        "line": 77,
        "fullcodeline": "for (i = 0; i < nbits; i++) {"
    },
    {
        "line": 48,
        "fullcodeline": "sym = (int *)PyObject_REALLOC(sym,"
    },
    {
        "line": 53,
        "fullcodeline": "sym[nsyms++] = a->a_lbl;"
    },
    {
        "line": 44,
        "fullcodeline": "if (sym[j] == a->a_lbl)"
    },
    {
        "line": 50,
        "fullcodeline": "if (sym == NULL)"
    },
    {
        "line": 55,
        "fullcodeline": "if (ISNONTERMINAL(type)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (testbit(result, i))"
    },
    {
        "line": 51,
        "fullcodeline": "Py_FatalError("
    },
    {
        "line": 56,
        "fullcodeline": "d1 = Ta3Grammar_FindDFA(g, type);"
    },
    {
        "line": 79,
        "fullcodeline": "printf(\" %s\", Ta3Grammar_LabelRepr(&l0[i]));"
    },
    {
        "line": 49,
        "fullcodeline": "sizeof(int) * (nsyms + 1));"
    },
    {
        "line": 57,
        "fullcodeline": "if (d1->d_first == dummy) {"
    },
    {
        "line": 58,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 69,
        "fullcodeline": "else if (ISTERMINAL(type)) {"
    },
    {
        "line": 65,
        "fullcodeline": "mergebitset(result,"
    },
    {
        "line": 70,
        "fullcodeline": "addbit(result, a->a_lbl);"
    },
    {
        "line": 63,
        "fullcodeline": "if (d1->d_first == NULL)"
    },
    {
        "line": 64,
        "fullcodeline": "calcfirstset(g, d1);"
    }
]