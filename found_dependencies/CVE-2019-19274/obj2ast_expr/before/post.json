[
    {
        "line": 5,
        "fullcodeline": "PyObject *tmp = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)BoolOp_type);"
    },
    {
        "line": 86,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)BinOp_type);"
    },
    {
        "line": 132,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)UnaryOp_type);"
    },
    {
        "line": 166,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Lambda_type);"
    },
    {
        "line": 200,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)IfExp_type);"
    },
    {
        "line": 246,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Dict_type);"
    },
    {
        "line": 314,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Set_type);"
    },
    {
        "line": 353,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)ListComp_type);"
    },
    {
        "line": 404,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)SetComp_type);"
    },
    {
        "line": 455,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)DictComp_type);"
    },
    {
        "line": 518,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)GeneratorExp_type);"
    },
    {
        "line": 569,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Await_type);"
    },
    {
        "line": 591,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Yield_type);"
    },
    {
        "line": 612,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)YieldFrom_type);"
    },
    {
        "line": 634,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Compare_type);"
    },
    {
        "line": 714,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Call_type);"
    },
    {
        "line": 794,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Num_type);"
    },
    {
        "line": 816,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Str_type);"
    },
    {
        "line": 850,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)FormattedValue_type);"
    },
    {
        "line": 895,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)JoinedStr_type);"
    },
    {
        "line": 934,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Bytes_type);"
    },
    {
        "line": 956,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)NameConstant_type);"
    },
    {
        "line": 978,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Ellipsis_type);"
    },
    {
        "line": 988,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Constant_type);"
    },
    {
        "line": 1010,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Attribute_type);"
    },
    {
        "line": 1056,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Subscript_type);"
    },
    {
        "line": 1102,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Starred_type);"
    },
    {
        "line": 1136,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Name_type);"
    },
    {
        "line": 1170,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)List_type);"
    },
    {
        "line": 1221,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Tuple_type);"
    },
    {
        "line": 1273,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"expected some sort of expr, but got %R\", obj);"
    },
    {
        "line": 1275,
        "fullcodeline": "Py_XDECREF(tmp);"
    },
    {
        "line": 9,
        "fullcodeline": "if (obj == Py_None) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_lineno)) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_col_offset)) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 201,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 247,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 315,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 354,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 405,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 456,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 519,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 570,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 592,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 613,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 635,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 715,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 795,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 817,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 851,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 896,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 935,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 957,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 979,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 989,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1011,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1057,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1103,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1137,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1171,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1222,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 10,
        "fullcodeline": "*out = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_lineno);"
    },
    {
        "line": 17,
        "fullcodeline": "res = obj2ast_int(tmp, &lineno, arena);"
    },
    {
        "line": 19,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 26,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"
    },
    {
        "line": 28,
        "fullcodeline": "res = obj2ast_int(tmp, &col_offset, arena);"
    },
    {
        "line": 30,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 82,
        "fullcodeline": "*out = BoolOp(op, values, lineno, col_offset, arena);"
    },
    {
        "line": 128,
        "fullcodeline": "*out = BinOp(left, op, right, lineno, col_offset, arena);"
    },
    {
        "line": 162,
        "fullcodeline": "*out = UnaryOp(op, operand, lineno, col_offset, arena);"
    },
    {
        "line": 196,
        "fullcodeline": "*out = Lambda(args, body, lineno, col_offset, arena);"
    },
    {
        "line": 242,
        "fullcodeline": "*out = IfExp(test, body, orelse, lineno, col_offset, arena);"
    },
    {
        "line": 310,
        "fullcodeline": "*out = Dict(keys, values, lineno, col_offset, arena);"
    },
    {
        "line": 349,
        "fullcodeline": "*out = Set(elts, lineno, col_offset, arena);"
    },
    {
        "line": 400,
        "fullcodeline": "*out = ListComp(elt, generators, lineno, col_offset, arena);"
    },
    {
        "line": 451,
        "fullcodeline": "*out = SetComp(elt, generators, lineno, col_offset, arena);"
    },
    {
        "line": 514,
        "fullcodeline": "*out = DictComp(key, value, generators, lineno, col_offset, arena);"
    },
    {
        "line": 565,
        "fullcodeline": "*out = GeneratorExp(elt, generators, lineno, col_offset, arena);"
    },
    {
        "line": 587,
        "fullcodeline": "*out = Await(value, lineno, col_offset, arena);"
    },
    {
        "line": 608,
        "fullcodeline": "*out = Yield(value, lineno, col_offset, arena);"
    },
    {
        "line": 630,
        "fullcodeline": "*out = YieldFrom(value, lineno, col_offset, arena);"
    },
    {
        "line": 710,
        "fullcodeline": "*out = Compare(left, ops, comparators, lineno, col_offset, arena);"
    },
    {
        "line": 790,
        "fullcodeline": "*out = Call(func, args, keywords, lineno, col_offset, arena);"
    },
    {
        "line": 812,
        "fullcodeline": "*out = Num(n, lineno, col_offset, arena);"
    },
    {
        "line": 846,
        "fullcodeline": "*out = Str(s, kind, lineno, col_offset, arena);"
    },
    {
        "line": 890,
        "fullcodeline": "*out = FormattedValue(value, conversion, format_spec, lineno,"
    },
    {
        "line": 930,
        "fullcodeline": "*out = JoinedStr(values, lineno, col_offset, arena);"
    },
    {
        "line": 952,
        "fullcodeline": "*out = Bytes(s, lineno, col_offset, arena);"
    },
    {
        "line": 974,
        "fullcodeline": "*out = NameConstant(value, lineno, col_offset, arena);"
    },
    {
        "line": 984,
        "fullcodeline": "*out = Ellipsis(lineno, col_offset, arena);"
    },
    {
        "line": 1006,
        "fullcodeline": "*out = Constant(value, lineno, col_offset, arena);"
    },
    {
        "line": 1052,
        "fullcodeline": "*out = Attribute(value, attr, ctx, lineno, col_offset, arena);"
    },
    {
        "line": 1098,
        "fullcodeline": "*out = Subscript(value, slice, ctx, lineno, col_offset, arena);"
    },
    {
        "line": 1132,
        "fullcodeline": "*out = Starred(value, ctx, lineno, col_offset, arena);"
    },
    {
        "line": 1166,
        "fullcodeline": "*out = Name(id, ctx, lineno, col_offset, arena);"
    },
    {
        "line": 1217,
        "fullcodeline": "*out = List(elts, ctx, lineno, col_offset, arena);"
    },
    {
        "line": 1268,
        "fullcodeline": "*out = Tuple(elts, ctx, lineno, col_offset, arena);"
    },
    {
        "line": 16,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 18,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 21,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from expr\");"
    },
    {
        "line": 27,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 29,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 32,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"col_offset\\\" missing from expr\");"
    },
    {
        "line": 43,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_op)) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_values)) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 95,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_left)) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_op)) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_right)) {"
    },
    {
        "line": 129,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 140,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_op)) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_operand)) {"
    },
    {
        "line": 163,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 174,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_args)) {"
    },
    {
        "line": 185,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 197,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 209,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_test)) {"
    },
    {
        "line": 220,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 231,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_orelse)) {"
    },
    {
        "line": 243,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 254,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_keys)) {"
    },
    {
        "line": 282,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_values)) {"
    },
    {
        "line": 311,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 321,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_elts)) {"
    },
    {
        "line": 350,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 361,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_elt)) {"
    },
    {
        "line": 372,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_generators)) {"
    },
    {
        "line": 401,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 412,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_elt)) {"
    },
    {
        "line": 423,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_generators)) {"
    },
    {
        "line": 452,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 464,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_key)) {"
    },
    {
        "line": 475,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 486,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_generators)) {"
    },
    {
        "line": 515,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 526,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_elt)) {"
    },
    {
        "line": 537,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_generators)) {"
    },
    {
        "line": 566,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 576,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 588,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 598,
        "fullcodeline": "if (exists_not_none(obj, &PyId_value)) {"
    },
    {
        "line": 609,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 619,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 631,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 643,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_left)) {"
    },
    {
        "line": 654,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_ops)) {"
    },
    {
        "line": 682,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_comparators)) {"
    },
    {
        "line": 711,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 723,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_func)) {"
    },
    {
        "line": 734,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_args)) {"
    },
    {
        "line": 762,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_keywords)) {"
    },
    {
        "line": 791,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 801,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_n)) {"
    },
    {
        "line": 813,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 824,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_s)) {"
    },
    {
        "line": 835,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_kind)) {"
    },
    {
        "line": 847,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 859,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 870,
        "fullcodeline": "if (exists_not_none(obj, &PyId_conversion)) {"
    },
    {
        "line": 880,
        "fullcodeline": "if (exists_not_none(obj, &PyId_format_spec)) {"
    },
    {
        "line": 892,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 902,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_values)) {"
    },
    {
        "line": 931,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 941,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_s)) {"
    },
    {
        "line": 953,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 963,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 975,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 985,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 995,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 1007,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 1019,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 1030,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_attr)) {"
    },
    {
        "line": 1041,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_ctx)) {"
    },
    {
        "line": 1053,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 1065,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 1076,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_slice)) {"
    },
    {
        "line": 1087,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_ctx)) {"
    },
    {
        "line": 1099,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 1110,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 1121,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_ctx)) {"
    },
    {
        "line": 1133,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 1144,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_id)) {"
    },
    {
        "line": 1155,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_ctx)) {"
    },
    {
        "line": 1167,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 1178,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_elts)) {"
    },
    {
        "line": 1206,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_ctx)) {"
    },
    {
        "line": 1218,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 1229,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_elts)) {"
    },
    {
        "line": 1257,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_ctx)) {"
    },
    {
        "line": 1269,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 45,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_op);"
    },
    {
        "line": 47,
        "fullcodeline": "res = obj2ast_boolop(tmp, &op, arena);"
    },
    {
        "line": 49,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 58,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_values);"
    },
    {
        "line": 64,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 65,
        "fullcodeline": "values = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 77,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 97,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_left);"
    },
    {
        "line": 99,
        "fullcodeline": "res = obj2ast_expr(tmp, &left, arena);"
    },
    {
        "line": 101,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 108,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_op);"
    },
    {
        "line": 110,
        "fullcodeline": "res = obj2ast_operator(tmp, &op, arena);"
    },
    {
        "line": 112,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 119,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_right);"
    },
    {
        "line": 121,
        "fullcodeline": "res = obj2ast_expr(tmp, &right, arena);"
    },
    {
        "line": 123,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 142,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_op);"
    },
    {
        "line": 144,
        "fullcodeline": "res = obj2ast_unaryop(tmp, &op, arena);"
    },
    {
        "line": 146,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 153,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_operand);"
    },
    {
        "line": 155,
        "fullcodeline": "res = obj2ast_expr(tmp, &operand, arena);"
    },
    {
        "line": 157,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 176,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_args);"
    },
    {
        "line": 178,
        "fullcodeline": "res = obj2ast_arguments(tmp, &args, arena);"
    },
    {
        "line": 180,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 187,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 189,
        "fullcodeline": "res = obj2ast_expr(tmp, &body, arena);"
    },
    {
        "line": 191,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 211,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_test);"
    },
    {
        "line": 213,
        "fullcodeline": "res = obj2ast_expr(tmp, &test, arena);"
    },
    {
        "line": 215,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 222,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 224,
        "fullcodeline": "res = obj2ast_expr(tmp, &body, arena);"
    },
    {
        "line": 226,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 233,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_orelse);"
    },
    {
        "line": 235,
        "fullcodeline": "res = obj2ast_expr(tmp, &orelse, arena);"
    },
    {
        "line": 237,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 258,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_keys);"
    },
    {
        "line": 264,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 265,
        "fullcodeline": "keys = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 277,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 286,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_values);"
    },
    {
        "line": 292,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 293,
        "fullcodeline": "values = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 305,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 325,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_elts);"
    },
    {
        "line": 331,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 332,
        "fullcodeline": "elts = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 344,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 363,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_elt);"
    },
    {
        "line": 365,
        "fullcodeline": "res = obj2ast_expr(tmp, &elt, arena);"
    },
    {
        "line": 367,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 376,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_generators);"
    },
    {
        "line": 382,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 383,
        "fullcodeline": "generators = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 395,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 414,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_elt);"
    },
    {
        "line": 416,
        "fullcodeline": "res = obj2ast_expr(tmp, &elt, arena);"
    },
    {
        "line": 418,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 427,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_generators);"
    },
    {
        "line": 433,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 434,
        "fullcodeline": "generators = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 446,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 466,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_key);"
    },
    {
        "line": 468,
        "fullcodeline": "res = obj2ast_expr(tmp, &key, arena);"
    },
    {
        "line": 470,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 477,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 479,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 481,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 490,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_generators);"
    },
    {
        "line": 496,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 497,
        "fullcodeline": "generators = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 509,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 528,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_elt);"
    },
    {
        "line": 530,
        "fullcodeline": "res = obj2ast_expr(tmp, &elt, arena);"
    },
    {
        "line": 532,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 541,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_generators);"
    },
    {
        "line": 547,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 548,
        "fullcodeline": "generators = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 560,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 578,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 580,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 582,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 600,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 602,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 604,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 621,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 623,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 625,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 645,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_left);"
    },
    {
        "line": 647,
        "fullcodeline": "res = obj2ast_expr(tmp, &left, arena);"
    },
    {
        "line": 649,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 658,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_ops);"
    },
    {
        "line": 664,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 665,
        "fullcodeline": "ops = _Ta3_asdl_int_seq_new(len, arena);"
    },
    {
        "line": 677,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 686,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_comparators);"
    },
    {
        "line": 692,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 693,
        "fullcodeline": "comparators = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 705,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 725,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_func);"
    },
    {
        "line": 727,
        "fullcodeline": "res = obj2ast_expr(tmp, &func, arena);"
    },
    {
        "line": 729,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 738,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_args);"
    },
    {
        "line": 744,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 745,
        "fullcodeline": "args = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 757,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 766,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_keywords);"
    },
    {
        "line": 772,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 773,
        "fullcodeline": "keywords = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 785,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 803,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_n);"
    },
    {
        "line": 805,
        "fullcodeline": "res = obj2ast_object(tmp, &n, arena);"
    },
    {
        "line": 807,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 826,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_s);"
    },
    {
        "line": 828,
        "fullcodeline": "res = obj2ast_string(tmp, &s, arena);"
    },
    {
        "line": 830,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 837,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_kind);"
    },
    {
        "line": 839,
        "fullcodeline": "res = obj2ast_string(tmp, &kind, arena);"
    },
    {
        "line": 841,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 861,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 863,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 865,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 872,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_conversion);"
    },
    {
        "line": 874,
        "fullcodeline": "res = obj2ast_int(tmp, &conversion, arena);"
    },
    {
        "line": 876,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 882,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_format_spec);"
    },
    {
        "line": 884,
        "fullcodeline": "res = obj2ast_expr(tmp, &format_spec, arena);"
    },
    {
        "line": 886,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 906,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_values);"
    },
    {
        "line": 912,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 913,
        "fullcodeline": "values = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 925,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 943,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_s);"
    },
    {
        "line": 945,
        "fullcodeline": "res = obj2ast_bytes(tmp, &s, arena);"
    },
    {
        "line": 947,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 965,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 967,
        "fullcodeline": "res = obj2ast_singleton(tmp, &value, arena);"
    },
    {
        "line": 969,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 997,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 999,
        "fullcodeline": "res = obj2ast_constant(tmp, &value, arena);"
    },
    {
        "line": 1001,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1021,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 1023,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 1025,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1032,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_attr);"
    },
    {
        "line": 1034,
        "fullcodeline": "res = obj2ast_identifier(tmp, &attr, arena);"
    },
    {
        "line": 1036,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1043,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_ctx);"
    },
    {
        "line": 1045,
        "fullcodeline": "res = obj2ast_expr_context(tmp, &ctx, arena);"
    },
    {
        "line": 1047,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1067,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 1069,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 1071,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1078,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_slice);"
    },
    {
        "line": 1080,
        "fullcodeline": "res = obj2ast_slice(tmp, &slice, arena);"
    },
    {
        "line": 1082,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1089,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_ctx);"
    },
    {
        "line": 1091,
        "fullcodeline": "res = obj2ast_expr_context(tmp, &ctx, arena);"
    },
    {
        "line": 1093,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1112,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 1114,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 1116,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1123,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_ctx);"
    },
    {
        "line": 1125,
        "fullcodeline": "res = obj2ast_expr_context(tmp, &ctx, arena);"
    },
    {
        "line": 1127,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1146,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_id);"
    },
    {
        "line": 1148,
        "fullcodeline": "res = obj2ast_identifier(tmp, &id, arena);"
    },
    {
        "line": 1150,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1157,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_ctx);"
    },
    {
        "line": 1159,
        "fullcodeline": "res = obj2ast_expr_context(tmp, &ctx, arena);"
    },
    {
        "line": 1161,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1182,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_elts);"
    },
    {
        "line": 1188,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1189,
        "fullcodeline": "elts = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1201,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1208,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_ctx);"
    },
    {
        "line": 1210,
        "fullcodeline": "res = obj2ast_expr_context(tmp, &ctx, arena);"
    },
    {
        "line": 1212,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1233,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_elts);"
    },
    {
        "line": 1239,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1240,
        "fullcodeline": "elts = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1252,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1259,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_ctx);"
    },
    {
        "line": 1261,
        "fullcodeline": "res = obj2ast_expr_context(tmp, &ctx, arena);"
    },
    {
        "line": 1263,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 46,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 48,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 51,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"op\\\" missing from BoolOp\");"
    },
    {
        "line": 59,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 60,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (values == NULL) goto failed;"
    },
    {
        "line": 67,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 79,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");"
    },
    {
        "line": 98,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 100,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 103,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"left\\\" missing from BinOp\");"
    },
    {
        "line": 109,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 111,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 114,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"op\\\" missing from BinOp\");"
    },
    {
        "line": 120,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 122,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 125,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"right\\\" missing from BinOp\");"
    },
    {
        "line": 143,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 145,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 148,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"op\\\" missing from UnaryOp\");"
    },
    {
        "line": 154,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 156,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 159,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"operand\\\" missing from UnaryOp\");"
    },
    {
        "line": 177,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 179,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 182,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"args\\\" missing from Lambda\");"
    },
    {
        "line": 188,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 190,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 193,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"body\\\" missing from Lambda\");"
    },
    {
        "line": 212,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 214,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 217,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"test\\\" missing from IfExp\");"
    },
    {
        "line": 223,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 225,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 228,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"body\\\" missing from IfExp\");"
    },
    {
        "line": 234,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 236,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 239,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"orelse\\\" missing from IfExp\");"
    },
    {
        "line": 259,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 260,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 266,
        "fullcodeline": "if (keys == NULL) goto failed;"
    },
    {
        "line": 267,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 279,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"keys\\\" missing from Dict\");"
    },
    {
        "line": 287,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 288,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 294,
        "fullcodeline": "if (values == NULL) goto failed;"
    },
    {
        "line": 295,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 307,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from Dict\");"
    },
    {
        "line": 326,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 327,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 333,
        "fullcodeline": "if (elts == NULL) goto failed;"
    },
    {
        "line": 334,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 346,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"elts\\\" missing from Set\");"
    },
    {
        "line": 364,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 366,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 369,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"elt\\\" missing from ListComp\");"
    },
    {
        "line": 377,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 378,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 384,
        "fullcodeline": "if (generators == NULL) goto failed;"
    },
    {
        "line": 385,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 397,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"generators\\\" missing from ListComp\");"
    },
    {
        "line": 415,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 417,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 420,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"elt\\\" missing from SetComp\");"
    },
    {
        "line": 428,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 429,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 435,
        "fullcodeline": "if (generators == NULL) goto failed;"
    },
    {
        "line": 436,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 448,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"generators\\\" missing from SetComp\");"
    },
    {
        "line": 467,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 469,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 472,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"key\\\" missing from DictComp\");"
    },
    {
        "line": 478,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 480,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 483,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from DictComp\");"
    },
    {
        "line": 491,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 492,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 498,
        "fullcodeline": "if (generators == NULL) goto failed;"
    },
    {
        "line": 499,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 511,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"generators\\\" missing from DictComp\");"
    },
    {
        "line": 529,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 531,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 534,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"elt\\\" missing from GeneratorExp\");"
    },
    {
        "line": 542,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 543,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 549,
        "fullcodeline": "if (generators == NULL) goto failed;"
    },
    {
        "line": 550,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 562,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"generators\\\" missing from GeneratorExp\");"
    },
    {
        "line": 579,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 581,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 584,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Await\");"
    },
    {
        "line": 601,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 603,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 606,
        "fullcodeline": "value = NULL;"
    },
    {
        "line": 622,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 624,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 627,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from YieldFrom\");"
    },
    {
        "line": 646,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 648,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 651,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"left\\\" missing from Compare\");"
    },
    {
        "line": 659,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 660,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 666,
        "fullcodeline": "if (ops == NULL) goto failed;"
    },
    {
        "line": 667,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 679,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"ops\\\" missing from Compare\");"
    },
    {
        "line": 687,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 688,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 694,
        "fullcodeline": "if (comparators == NULL) goto failed;"
    },
    {
        "line": 695,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 707,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"comparators\\\" missing from Compare\");"
    },
    {
        "line": 726,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 728,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 731,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"func\\\" missing from Call\");"
    },
    {
        "line": 739,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 740,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 746,
        "fullcodeline": "if (args == NULL) goto failed;"
    },
    {
        "line": 747,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 759,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"args\\\" missing from Call\");"
    },
    {
        "line": 767,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 768,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 774,
        "fullcodeline": "if (keywords == NULL) goto failed;"
    },
    {
        "line": 775,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 787,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"keywords\\\" missing from Call\");"
    },
    {
        "line": 804,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 806,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 809,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"n\\\" missing from Num\");"
    },
    {
        "line": 827,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 829,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 832,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"s\\\" missing from Str\");"
    },
    {
        "line": 838,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 840,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 843,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"kind\\\" missing from Str\");"
    },
    {
        "line": 862,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 864,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 867,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from FormattedValue\");"
    },
    {
        "line": 873,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 875,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 878,
        "fullcodeline": "conversion = 0;"
    },
    {
        "line": 883,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 885,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 888,
        "fullcodeline": "format_spec = NULL;"
    },
    {
        "line": 907,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 908,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 914,
        "fullcodeline": "if (values == NULL) goto failed;"
    },
    {
        "line": 915,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 927,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from JoinedStr\");"
    },
    {
        "line": 944,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 946,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 949,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"s\\\" missing from Bytes\");"
    },
    {
        "line": 966,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 968,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 971,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from NameConstant\");"
    },
    {
        "line": 998,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1000,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1003,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Constant\");"
    },
    {
        "line": 1022,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1024,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1027,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Attribute\");"
    },
    {
        "line": 1033,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1035,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1038,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"attr\\\" missing from Attribute\");"
    },
    {
        "line": 1044,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1046,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1049,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Attribute\");"
    },
    {
        "line": 1068,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1070,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1073,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Subscript\");"
    },
    {
        "line": 1079,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1081,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1084,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"slice\\\" missing from Subscript\");"
    },
    {
        "line": 1090,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1092,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1095,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Subscript\");"
    },
    {
        "line": 1113,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1115,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1118,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Starred\");"
    },
    {
        "line": 1124,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1126,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1129,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Starred\");"
    },
    {
        "line": 1147,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1149,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1152,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");"
    },
    {
        "line": 1158,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1160,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1163,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Name\");"
    },
    {
        "line": 1183,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1184,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1190,
        "fullcodeline": "if (elts == NULL) goto failed;"
    },
    {
        "line": 1191,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1203,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"elts\\\" missing from List\");"
    },
    {
        "line": 1209,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1211,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1214,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from List\");"
    },
    {
        "line": 1234,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1235,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1241,
        "fullcodeline": "if (elts == NULL) goto failed;"
    },
    {
        "line": 1242,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1254,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"elts\\\" missing from Tuple\");"
    },
    {
        "line": 1260,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1262,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1265,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Tuple\");"
    },
    {
        "line": 61,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 69,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 75,
        "fullcodeline": "asdl_seq_SET(values, i, value);"
    },
    {
        "line": 261,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"Dict field \\\"keys\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 269,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 275,
        "fullcodeline": "asdl_seq_SET(keys, i, value);"
    },
    {
        "line": 289,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"Dict field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 297,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 303,
        "fullcodeline": "asdl_seq_SET(values, i, value);"
    },
    {
        "line": 328,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"Set field \\\"elts\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 336,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 342,
        "fullcodeline": "asdl_seq_SET(elts, i, value);"
    },
    {
        "line": 379,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"ListComp field \\\"generators\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 387,
        "fullcodeline": "res = obj2ast_comprehension(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 393,
        "fullcodeline": "asdl_seq_SET(generators, i, value);"
    },
    {
        "line": 430,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"SetComp field \\\"generators\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 438,
        "fullcodeline": "res = obj2ast_comprehension(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 444,
        "fullcodeline": "asdl_seq_SET(generators, i, value);"
    },
    {
        "line": 493,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"DictComp field \\\"generators\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 501,
        "fullcodeline": "res = obj2ast_comprehension(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 507,
        "fullcodeline": "asdl_seq_SET(generators, i, value);"
    },
    {
        "line": 544,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"GeneratorExp field \\\"generators\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 552,
        "fullcodeline": "res = obj2ast_comprehension(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 558,
        "fullcodeline": "asdl_seq_SET(generators, i, value);"
    },
    {
        "line": 661,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"Compare field \\\"ops\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 669,
        "fullcodeline": "res = obj2ast_cmpop(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 675,
        "fullcodeline": "asdl_seq_SET(ops, i, value);"
    },
    {
        "line": 689,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"Compare field \\\"comparators\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 697,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 703,
        "fullcodeline": "asdl_seq_SET(comparators, i, value);"
    },
    {
        "line": 741,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"Call field \\\"args\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 749,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 755,
        "fullcodeline": "asdl_seq_SET(args, i, value);"
    },
    {
        "line": 769,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"Call field \\\"keywords\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 777,
        "fullcodeline": "res = obj2ast_keyword(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 783,
        "fullcodeline": "asdl_seq_SET(keywords, i, value);"
    },
    {
        "line": 909,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"JoinedStr field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 917,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 923,
        "fullcodeline": "asdl_seq_SET(values, i, value);"
    },
    {
        "line": 1185,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"List field \\\"elts\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 1193,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1199,
        "fullcodeline": "asdl_seq_SET(elts, i, value);"
    },
    {
        "line": 1236,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"Tuple field \\\"elts\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 1244,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1250,
        "fullcodeline": "asdl_seq_SET(elts, i, value);"
    },
    {
        "line": 70,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 71,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 270,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 271,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 298,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 299,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 337,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 338,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 388,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 389,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 439,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 440,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 502,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 503,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 553,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 554,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 670,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 671,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 698,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 699,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 750,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 751,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 778,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 779,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 918,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 919,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1194,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1195,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1245,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 1246,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 72,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"
    },
    {
        "line": 272,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"Dict field \\\"keys\\\" changed size during iteration\");"
    },
    {
        "line": 300,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"Dict field \\\"values\\\" changed size during iteration\");"
    },
    {
        "line": 339,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"Set field \\\"elts\\\" changed size during iteration\");"
    },
    {
        "line": 390,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"ListComp field \\\"generators\\\" changed size during iteration\");"
    },
    {
        "line": 441,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"SetComp field \\\"generators\\\" changed size during iteration\");"
    },
    {
        "line": 504,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"DictComp field \\\"generators\\\" changed size during iteration\");"
    },
    {
        "line": 555,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"GeneratorExp field \\\"generators\\\" changed size during iteration\");"
    },
    {
        "line": 672,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"Compare field \\\"ops\\\" changed size during iteration\");"
    },
    {
        "line": 700,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"Compare field \\\"comparators\\\" changed size during iteration\");"
    },
    {
        "line": 752,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"Call field \\\"args\\\" changed size during iteration\");"
    },
    {
        "line": 780,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"Call field \\\"keywords\\\" changed size during iteration\");"
    },
    {
        "line": 920,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"JoinedStr field \\\"values\\\" changed size during iteration\");"
    },
    {
        "line": 1196,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"List field \\\"elts\\\" changed size during iteration\");"
    },
    {
        "line": 1247,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"Tuple field \\\"elts\\\" changed size during iteration\");"
    }
]