[
    {
        "line": 5,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)Eq_type);"
    },
    {
        "line": 13,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)NotEq_type);"
    },
    {
        "line": 21,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)Lt_type);"
    },
    {
        "line": 29,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)LtE_type);"
    },
    {
        "line": 37,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)Gt_type);"
    },
    {
        "line": 45,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)GtE_type);"
    },
    {
        "line": 53,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)Is_type);"
    },
    {
        "line": 61,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)IsNot_type);"
    },
    {
        "line": 69,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)In_type);"
    },
    {
        "line": 77,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject *)NotIn_type);"
    },
    {
        "line": 86,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"expected some sort of cmpop, but got %R\", obj);"
    },
    {
        "line": 6,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 10,
        "fullcodeline": "*out = Eq;"
    },
    {
        "line": 14,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 18,
        "fullcodeline": "*out = NotEq;"
    },
    {
        "line": 22,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 26,
        "fullcodeline": "*out = Lt;"
    },
    {
        "line": 30,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 34,
        "fullcodeline": "*out = LtE;"
    },
    {
        "line": 38,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 42,
        "fullcodeline": "*out = Gt;"
    },
    {
        "line": 46,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 50,
        "fullcodeline": "*out = GtE;"
    },
    {
        "line": 54,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 58,
        "fullcodeline": "*out = Is;"
    },
    {
        "line": 62,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 66,
        "fullcodeline": "*out = IsNot;"
    },
    {
        "line": 70,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 74,
        "fullcodeline": "*out = In;"
    },
    {
        "line": 78,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 82,
        "fullcodeline": "*out = NotIn;"
    }
]