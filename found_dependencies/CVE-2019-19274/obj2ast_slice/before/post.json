[
    {
        "line": 5,
        "fullcodeline": "PyObject *tmp = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Slice_type);"
    },
    {
        "line": 54,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)ExtSlice_type);"
    },
    {
        "line": 93,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Index_type);"
    },
    {
        "line": 116,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"expected some sort of slice, but got %R\", obj);"
    },
    {
        "line": 118,
        "fullcodeline": "Py_XDECREF(tmp);"
    },
    {
        "line": 7,
        "fullcodeline": "if (obj == Py_None) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 8,
        "fullcodeline": "*out = NULL;"
    },
    {
        "line": 50,
        "fullcodeline": "*out = Slice(lower, upper, step, arena);"
    },
    {
        "line": 89,
        "fullcodeline": "*out = ExtSlice(dims, arena);"
    },
    {
        "line": 111,
        "fullcodeline": "*out = Index(value, arena);"
    },
    {
        "line": 20,
        "fullcodeline": "if (exists_not_none(obj, &PyId_lower)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (exists_not_none(obj, &PyId_upper)) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (exists_not_none(obj, &PyId_step)) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 61,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_dims)) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 100,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (*out == NULL) goto failed;"
    },
    {
        "line": 22,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_lower);"
    },
    {
        "line": 24,
        "fullcodeline": "res = obj2ast_expr(tmp, &lower, arena);"
    },
    {
        "line": 26,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 32,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_upper);"
    },
    {
        "line": 34,
        "fullcodeline": "res = obj2ast_expr(tmp, &upper, arena);"
    },
    {
        "line": 36,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 42,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_step);"
    },
    {
        "line": 44,
        "fullcodeline": "res = obj2ast_expr(tmp, &step, arena);"
    },
    {
        "line": 46,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 65,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_dims);"
    },
    {
        "line": 71,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 72,
        "fullcodeline": "dims = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 84,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 102,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 104,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 106,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 23,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 25,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 28,
        "fullcodeline": "lower = NULL;"
    },
    {
        "line": 33,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 35,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 38,
        "fullcodeline": "upper = NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 45,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 48,
        "fullcodeline": "step = NULL;"
    },
    {
        "line": 66,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 67,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (dims == NULL) goto failed;"
    },
    {
        "line": 74,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 86,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"dims\\\" missing from ExtSlice\");"
    },
    {
        "line": 103,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 105,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 108,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Index\");"
    },
    {
        "line": 68,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"ExtSlice field \\\"dims\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"
    },
    {
        "line": 76,
        "fullcodeline": "res = obj2ast_slice(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 82,
        "fullcodeline": "asdl_seq_SET(dims, i, value);"
    },
    {
        "line": 77,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 78,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 79,
        "fullcodeline": "PyErr_SetString(PyExc_RuntimeError, \"ExtSlice field \\\"dims\\\" changed size during iteration\");"
    }
]