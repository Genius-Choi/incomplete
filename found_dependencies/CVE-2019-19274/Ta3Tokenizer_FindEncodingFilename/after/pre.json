[
    {
        "line": 5,
        "fullcodeline": "char *p_start =NULL , *p_end =NULL , *encoding = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "fd = _Py_dup(fd);"
    },
    {
        "line": 16,
        "fullcodeline": "fp = fdopen(fd, \"r\");"
    },
    {
        "line": 20,
        "fullcodeline": "tok = Ta3Tokenizer_FromFile(fp, NULL, NULL, NULL);"
    },
    {
        "line": 12,
        "fullcodeline": "if (fd < 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (fp == NULL) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (tok == NULL) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (filename != NULL) {"
    },
    {
        "line": 27,
        "fullcodeline": "Py_INCREF(filename);"
    },
    {
        "line": 28,
        "fullcodeline": "tok->filename = filename;"
    },
    {
        "line": 39,
        "fullcodeline": "while (tok->lineno < 2 && tok->done == E_OK) {"
    },
    {
        "line": 40,
        "fullcodeline": "Ta3Tokenizer_Get(tok, &p_start, &p_end);"
    },
    {
        "line": 44,
        "fullcodeline": "encoding = (char *)PyMem_MALLOC(strlen(tok->encoding) + 1);"
    },
    {
        "line": 31,
        "fullcodeline": "tok->filename = PyUnicode_FromString(\"<string>\");"
    },
    {
        "line": 32,
        "fullcodeline": "if (tok->filename == NULL) {"
    },
    {
        "line": 46,
        "fullcodeline": "strcpy(encoding, tok->encoding);"
    }
]