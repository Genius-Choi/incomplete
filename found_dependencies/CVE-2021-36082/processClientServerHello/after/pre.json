[
    {
        "line": 3,
        "fullcodeline": "struct ndpi_packet_struct *packet = &flow->packet;"
    },
    {
        "line": 5,
        "fullcodeline": "u_int8_t invalid_ja3 = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "char ja3_str[JA3_STR_LEN];"
    },
    {
        "line": 9,
        "fullcodeline": "u_char md5_hash[16];"
    },
    {
        "line": 13,
        "fullcodeline": "char buffer[64] = { '\\0' };"
    },
    {
        "line": 14,
        "fullcodeline": "int is_quic = (quic_version != 0);"
    },
    {
        "line": 15,
        "fullcodeline": "int is_dtls = packet->udp && (!is_quic);"
    },
    {
        "line": 21,
        "fullcodeline": "memset(&ja3, 0, sizeof(ja3));"
    },
    {
        "line": 23,
        "fullcodeline": "handshake_type = packet->payload[0];"
    },
    {
        "line": 24,
        "fullcodeline": "total_len = (packet->payload[1] << 16) +  (packet->payload[2] << 8) + packet->payload[3];"
    },
    {
        "line": 29,
        "fullcodeline": "total_len = packet->payload_packet_len;"
    },
    {
        "line": 26,
        "fullcodeline": "if((total_len > packet->payload_packet_len) || (packet->payload[1] != 0x0))"
    },
    {
        "line": 32,
        "fullcodeline": "if(total_len > 4) {"
    },
    {
        "line": 33,
        "fullcodeline": "u_int16_t base_offset    = (!is_dtls) ? 38 : 46;"
    },
    {
        "line": 34,
        "fullcodeline": "u_int16_t version_offset = (!is_dtls) ? 4 : 12;"
    },
    {
        "line": 35,
        "fullcodeline": "u_int16_t offset = (!is_dtls) ? 38 : 46, extension_len, j;"
    },
    {
        "line": 42,
        "fullcodeline": "session_id_len = packet->payload[base_offset];"
    },
    {
        "line": 48,
        "fullcodeline": "tls_version = ntohs(*((u_int16_t*)&packet->payload[version_offset]));"
    },
    {
        "line": 50,
        "fullcodeline": "if(handshake_type == 0x02 /* Server Hello */) {"
    },
    {
        "line": 38,
        "fullcodeline": "if((base_offset >= total_len) ||"
    },
    {
        "line": 39,
        "fullcodeline": "(version_offset + 1) >= total_len)"
    },
    {
        "line": 53,
        "fullcodeline": "ja3.server.tls_handshake_version = tls_version;"
    },
    {
        "line": 83,
        "fullcodeline": "offset += 2 + 1;"
    },
    {
        "line": 93,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 213,
        "fullcodeline": "ja3_str_len = snprintf(ja3_str, JA3_STR_LEN, \"%u,\", ja3.server.tls_handshake_version);"
    },
    {
        "line": 255,
        "fullcodeline": "ndpi_MD5Init(&ctx);"
    },
    {
        "line": 256,
        "fullcodeline": "ndpi_MD5Update(&ctx, (const unsigned char *)ja3_str, strlen(ja3_str));"
    },
    {
        "line": 257,
        "fullcodeline": "ndpi_MD5Final(md5_hash, &ctx);"
    },
    {
        "line": 70,
        "fullcodeline": "if((offset+3) > packet->payload_packet_len)"
    },
    {
        "line": 73,
        "fullcodeline": "ja3.server.num_cipher = 1, ja3.server.cipher[0] = ntohs(*((u_int16_t*)&packet->payload[offset]));"
    },
    {
        "line": 85,
        "fullcodeline": "if((offset + 1) < packet->payload_packet_len) /* +1 because we are goint to read 2 bytes */"
    },
    {
        "line": 95,
        "fullcodeline": "for(i=0; i<extension_len; ) {"
    },
    {
        "line": 215,
        "fullcodeline": "for(i=0; (i<ja3.server.num_cipher) && (JA3_STR_LEN > ja3_str_len); i++) {"
    },
    {
        "line": 221,
        "fullcodeline": "if(JA3_STR_LEN > ja3_str_len) {"
    },
    {
        "line": 228,
        "fullcodeline": "for(i=0; (i<ja3.server.num_tls_extension) && (JA3_STR_LEN > ja3_str_len); i++) {"
    },
    {
        "line": 259,
        "fullcodeline": "for(i=0, j=0; i<16; i++) {"
    },
    {
        "line": 64,
        "fullcodeline": "offset += session_id_len + 1;"
    },
    {
        "line": 74,
        "fullcodeline": "if((flow->protos.tls_quic_stun.tls_quic.server_unsafe_cipher = ndpi_is_safe_ssl_cipher(ja3.server.cipher[0])) == 1)"
    },
    {
        "line": 75,
        "fullcodeline": "ndpi_set_risk(flow, NDPI_TLS_WEAK_CIPHER);"
    },
    {
        "line": 86,
        "fullcodeline": "extension_len = ntohs(*((u_int16_t*)&packet->payload[offset]));"
    },
    {
        "line": 100,
        "fullcodeline": "extension_id  = ntohs(*((u_int16_t*)&packet->payload[offset]));"
    },
    {
        "line": 101,
        "fullcodeline": "extension_len = ntohs(*((u_int16_t*)&packet->payload[offset+2]));"
    },
    {
        "line": 216,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\", (i > 0) ? \"-\" : \"\", ja3.server.cipher[i]);"
    },
    {
        "line": 222,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",\");"
    },
    {
        "line": 229,
        "fullcodeline": "int rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\", (i > 0) ? \"-\" : \"\", ja3.server.tls_extension[i]);"
    },
    {
        "line": 260,
        "fullcodeline": "int rc = snprintf(&flow->protos.tls_quic_stun.tls_quic.ja3_server[j],"
    },
    {
        "line": 88,
        "fullcodeline": "extension_len = 0;"
    },
    {
        "line": 103,
        "fullcodeline": "if(ja3.server.num_tls_extension < MAX_NUM_JA3)"
    },
    {
        "line": 111,
        "fullcodeline": "if(extension_id == 43 /* supported versions */) {"
    },
    {
        "line": 210,
        "fullcodeline": "i += 4 + extension_len, offset += 4 + extension_len;"
    },
    {
        "line": 218,
        "fullcodeline": "if(rc <= 0) break; else ja3_str_len += rc;"
    },
    {
        "line": 223,
        "fullcodeline": "if(rc > 0 && ja3_str_len + rc < JA3_STR_LEN) ja3_str_len += rc;"
    },
    {
        "line": 231,
        "fullcodeline": "if(rc <= 0) break; else ja3_str_len += rc;"
    },
    {
        "line": 235,
        "fullcodeline": "for(i=0; (i<ja3.server.num_elliptic_curve_point_format) && (JA3_STR_LEN > ja3_str_len); i++) {"
    },
    {
        "line": 262,
        "fullcodeline": "if(rc <= 0) break; else j += rc;"
    },
    {
        "line": 270,
        "fullcodeline": "u_int8_t cookie_len = 0;"
    },
    {
        "line": 272,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.ssl_version = ja3.client.tls_handshake_version = tls_version;"
    },
    {
        "line": 364,
        "fullcodeline": "offset = base_offset + session_id_len + cookie_len + cipher_len + 2;"
    },
    {
        "line": 365,
        "fullcodeline": "offset += (!is_dtls) ? 1 : 2;"
    },
    {
        "line": 236,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\","
    },
    {
        "line": 241,
        "fullcodeline": "if((ja3.server.alpn[0] != '\\0') && (JA3_STR_LEN > ja3_str_len)) {"
    },
    {
        "line": 242,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",%s\", ja3.server.alpn);"
    },
    {
        "line": 261,
        "fullcodeline": "sizeof(flow->protos.tls_quic_stun.tls_quic.ja3_server)-j, \"%02x\", md5_hash[i]);"
    },
    {
        "line": 273,
        "fullcodeline": "if(flow->protos.tls_quic_stun.tls_quic.ssl_version < 0x0302) /* TLSv1.1 */"
    },
    {
        "line": 276,
        "fullcodeline": "if((session_id_len+base_offset+3) > packet->payload_packet_len)"
    },
    {
        "line": 279,
        "fullcodeline": "if(!is_dtls) {"
    },
    {
        "line": 297,
        "fullcodeline": "if((cipher_offset+cipher_len) <= total_len) {"
    },
    {
        "line": 367,
        "fullcodeline": "if(offset < total_len) {"
    },
    {
        "line": 67,
        "fullcodeline": "offset += session_id_len+1;"
    },
    {
        "line": 112,
        "fullcodeline": "if(extension_len >= 2) {"
    },
    {
        "line": 238,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;"
    },
    {
        "line": 274,
        "fullcodeline": "ndpi_set_risk(flow, NDPI_TLS_OBSOLETE_VERSION);"
    },
    {
        "line": 280,
        "fullcodeline": "cipher_len = packet->payload[session_id_len+base_offset+2] + (packet->payload[session_id_len+base_offset+1] << 8);"
    },
    {
        "line": 281,
        "fullcodeline": "cipher_offset = base_offset + session_id_len + 3;"
    },
    {
        "line": 298,
        "fullcodeline": "u_int8_t safari_ciphers = 0, chrome_ciphers = 0;"
    },
    {
        "line": 371,
        "fullcodeline": "compression_len = packet->payload[offset];"
    },
    {
        "line": 372,
        "fullcodeline": "offset++;"
    },
    {
        "line": 379,
        "fullcodeline": "offset += compression_len;"
    },
    {
        "line": 104,
        "fullcodeline": "ja3.server.tls_extension[ja3.server.num_tls_extension++] = extension_id;"
    },
    {
        "line": 113,
        "fullcodeline": "u_int16_t tls_version = ntohs(*((u_int16_t*)&packet->payload[offset+4]));"
    },
    {
        "line": 121,
        "fullcodeline": "} else if(extension_id == 16 /* application_layer_protocol_negotiation (ALPN) */) {"
    },
    {
        "line": 243,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;"
    },
    {
        "line": 283,
        "fullcodeline": "cookie_len = packet->payload[base_offset+session_id_len+1];"
    },
    {
        "line": 289,
        "fullcodeline": "cipher_len = ntohs(*((u_int16_t*)&packet->payload[base_offset+session_id_len+cookie_len+2]));"
    },
    {
        "line": 290,
        "fullcodeline": "cipher_offset = base_offset + session_id_len + cookie_len + 4;"
    },
    {
        "line": 300,
        "fullcodeline": "for(i=0; i<cipher_len;) {"
    },
    {
        "line": 358,
        "fullcodeline": "invalid_ja3 = 1;"
    },
    {
        "line": 381,
        "fullcodeline": "if(offset+1 < total_len) {"
    },
    {
        "line": 119,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.ssl_version = ja3.server.tls_supported_version = tls_version;"
    },
    {
        "line": 122,
        "fullcodeline": "u_int16_t s_offset = offset+4;"
    },
    {
        "line": 123,
        "fullcodeline": "u_int16_t tot_alpn_len = ntohs(*((u_int16_t*)&packet->payload[s_offset]));"
    },
    {
        "line": 124,
        "fullcodeline": "char alpn_str[256];"
    },
    {
        "line": 125,
        "fullcodeline": "u_int8_t alpn_str_len = 0, i;"
    },
    {
        "line": 130,
        "fullcodeline": "s_offset += 2;"
    },
    {
        "line": 131,
        "fullcodeline": "tot_alpn_len += s_offset;"
    },
    {
        "line": 163,
        "fullcodeline": "alpn_str[alpn_str_len] = '\\0';"
    },
    {
        "line": 174,
        "fullcodeline": "snprintf(ja3.server.alpn, sizeof(ja3.server.alpn), \"%s\", alpn_str);"
    },
    {
        "line": 237,
        "fullcodeline": "(i > 0) ? \"-\" : \"\", ja3.server.elliptic_curve_point_format[i]);"
    },
    {
        "line": 287,
        "fullcodeline": "if((session_id_len+base_offset+cookie_len+4) > packet->payload_packet_len)"
    },
    {
        "line": 350,
        "fullcodeline": "i += 2;"
    },
    {
        "line": 382,
        "fullcodeline": "extensions_len = ntohs(*((u_int16_t*)&packet->payload[offset]));"
    },
    {
        "line": 383,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 168,
        "fullcodeline": "if(flow->protos.tls_quic_stun.tls_quic.alpn == NULL)"
    },
    {
        "line": 171,
        "fullcodeline": "if(flow->protos.tls_quic_stun.tls_quic.alpn != NULL)"
    },
    {
        "line": 177,
        "fullcodeline": "for(i=0; ja3.server.alpn[i] != '\\0'; i++)"
    },
    {
        "line": 389,
        "fullcodeline": "if((extensions_len+offset) <= total_len) {"
    },
    {
        "line": 133,
        "fullcodeline": "while(s_offset < tot_alpn_len && s_offset < total_len) {"
    },
    {
        "line": 134,
        "fullcodeline": "u_int8_t alpn_i, alpn_len = packet->payload[s_offset++];"
    },
    {
        "line": 169,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.alpn = ndpi_strdup(alpn_str);"
    },
    {
        "line": 172,
        "fullcodeline": "tlsCheckUncommonALPN(flow);"
    },
    {
        "line": 178,
        "fullcodeline": "if(ja3.server.alpn[i] == ',') ja3.server.alpn[i] = '-';"
    },
    {
        "line": 306,
        "fullcodeline": "if((*id == 0) || (packet->payload[cipher_offset+i] != packet->payload[cipher_offset+i+1])) {"
    },
    {
        "line": 307,
        "fullcodeline": "u_int16_t cipher_id = ntohs(*id);"
    },
    {
        "line": 392,
        "fullcodeline": "u_int extension_offset = 0;"
    },
    {
        "line": 136,
        "fullcodeline": "if((s_offset + alpn_len) <= tot_alpn_len) {"
    },
    {
        "line": 180,
        "fullcodeline": "u_int16_t s_offset = offset+4 + 1;"
    },
    {
        "line": 313,
        "fullcodeline": "if(ja3.client.num_cipher < MAX_NUM_JA3)"
    },
    {
        "line": 909,
        "fullcodeline": "if(flow->protos.tls_quic_stun.tls_quic.encrypted_sni.esni &&"
    },
    {
        "line": 185,
        "fullcodeline": "if((s_offset+extension_len-1) <= total_len) {"
    },
    {
        "line": 325,
        "fullcodeline": "safari_ciphers++;"
    },
    {
        "line": 332,
        "fullcodeline": "chrome_ciphers++;"
    },
    {
        "line": 395,
        "fullcodeline": "while(extension_offset < extensions_len &&"
    },
    {
        "line": 396,
        "fullcodeline": "offset+extension_offset+4 <= total_len) {"
    },
    {
        "line": 397,
        "fullcodeline": "u_int16_t extension_id, extension_len, extn_off = offset+extension_offset;"
    },
    {
        "line": 400,
        "fullcodeline": "extension_id = ntohs(*((u_int16_t*)&packet->payload[offset+extension_offset]));"
    },
    {
        "line": 401,
        "fullcodeline": "extension_offset += 2;"
    },
    {
        "line": 403,
        "fullcodeline": "extension_len = ntohs(*((u_int16_t*)&packet->payload[offset+extension_offset]));"
    },
    {
        "line": 404,
        "fullcodeline": "extension_offset += 2;"
    },
    {
        "line": 817,
        "fullcodeline": "extension_offset += extension_len; /* Move to the next extension */"
    },
    {
        "line": 828,
        "fullcodeline": "ja3_str_len = snprintf(ja3_str, JA3_STR_LEN, \"%u,\", ja3.client.tls_handshake_version);"
    },
    {
        "line": 836,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",\");"
    },
    {
        "line": 847,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",\");"
    },
    {
        "line": 858,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",\");"
    },
    {
        "line": 877,
        "fullcodeline": "ndpi_MD5Init(&ctx);"
    },
    {
        "line": 878,
        "fullcodeline": "ndpi_MD5Update(&ctx, (const unsigned char *)ja3_str, strlen(ja3_str));"
    },
    {
        "line": 879,
        "fullcodeline": "ndpi_MD5Final(md5_hash, &ctx);"
    },
    {
        "line": 902,
        "fullcodeline": "if((flow->protos.tls_quic_stun.tls_quic.ssl_version >= 0x0303) /* >= TLSv1.2 */"
    },
    {
        "line": 903,
        "fullcodeline": "&& (flow->protos.tls_quic_stun.tls_quic.alpn == NULL) /* No ALPN */) {"
    },
    {
        "line": 904,
        "fullcodeline": "ndpi_set_risk(flow, NDPI_TLS_NOT_CARRYING_HTTPS);"
    },
    {
        "line": 910,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.client_requested_server_name[0] != '\\0') {"
    },
    {
        "line": 911,
        "fullcodeline": "ndpi_set_risk(flow, NDPI_TLS_SUSPICIOUS_ESNI_USAGE);"
    },
    {
        "line": 915,
        "fullcodeline": "if((flow->protos.tls_quic_stun.tls_quic.client_requested_server_name[0] == 0)"
    },
    {
        "line": 917,
        "fullcodeline": "&& (flow->protos.tls_quic_stun.tls_quic.encrypted_sni.esni == NULL) /* No ESNI */"
    },
    {
        "line": 920,
        "fullcodeline": "ndpi_set_risk(flow, NDPI_TLS_MISSING_SNI);"
    },
    {
        "line": 158,
        "fullcodeline": "ndpi_set_risk(flow, NDPI_TLS_UNCOMMON_ALPN);"
    },
    {
        "line": 316,
        "fullcodeline": "invalid_ja3 = 1;"
    },
    {
        "line": 345,
        "fullcodeline": "safari_ciphers++, chrome_ciphers++;"
    },
    {
        "line": 423,
        "fullcodeline": "if(extension_id == 0 /* server name */) {"
    },
    {
        "line": 830,
        "fullcodeline": "for(i=0; i<ja3.client.num_cipher; i++) {"
    },
    {
        "line": 837,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;"
    },
    {
        "line": 841,
        "fullcodeline": "for(i=0; i<ja3.client.num_tls_extension; i++) {"
    },
    {
        "line": 848,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;"
    },
    {
        "line": 852,
        "fullcodeline": "for(i=0; i<ja3.client.num_elliptic_curve; i++) {"
    },
    {
        "line": 859,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;"
    },
    {
        "line": 861,
        "fullcodeline": "for(i=0; i<ja3.client.num_elliptic_curve_point_format; i++) {"
    },
    {
        "line": 881,
        "fullcodeline": "for(i=0, j=0; i<16; i++) {"
    },
    {
        "line": 892,
        "fullcodeline": "if(ndpi_struct->malicious_ja3_automa.ac_automa != NULL) {"
    },
    {
        "line": 916,
        "fullcodeline": "&& (flow->protos.tls_quic_stun.tls_quic.ssl_version >= 0x0302) /* TLSv1.1 */"
    },
    {
        "line": 141,
        "fullcodeline": "if((alpn_str_len+alpn_len+1) < (sizeof(alpn_str)-1)) {"
    },
    {
        "line": 186,
        "fullcodeline": "for(i=0; i<extension_len-1; i++) {"
    },
    {
        "line": 314,
        "fullcodeline": "ja3.client.cipher[ja3.client.num_cipher++] = cipher_id;"
    },
    {
        "line": 410,
        "fullcodeline": "if((extension_id == 0) || (packet->payload[extn_off] != packet->payload[extn_off+1])) {"
    },
    {
        "line": 831,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\","
    },
    {
        "line": 842,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\","
    },
    {
        "line": 853,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\","
    },
    {
        "line": 862,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\","
    },
    {
        "line": 868,
        "fullcodeline": "rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len,"
    },
    {
        "line": 882,
        "fullcodeline": "rc = snprintf(&flow->protos.tls_quic_stun.tls_quic.ja3_client[j],"
    },
    {
        "line": 893,
        "fullcodeline": "u_int16_t rc1 = ndpi_match_string(ndpi_struct->malicious_ja3_automa.ac_automa,"
    },
    {
        "line": 142,
        "fullcodeline": "if(alpn_str_len > 0) {"
    },
    {
        "line": 147,
        "fullcodeline": "for(alpn_i=0; alpn_i<alpn_len; alpn_i++)"
    },
    {
        "line": 152,
        "fullcodeline": "s_offset += alpn_len, alpn_str_len += alpn_len;;"
    },
    {
        "line": 154,
        "fullcodeline": "ndpi_set_risk(flow, NDPI_TLS_UNCOMMON_ALPN);"
    },
    {
        "line": 187,
        "fullcodeline": "u_int8_t s_group = packet->payload[s_offset+i];"
    },
    {
        "line": 413,
        "fullcodeline": "if(ja3.client.num_tls_extension < MAX_NUM_JA3)"
    },
    {
        "line": 429,
        "fullcodeline": "if((offset+extension_offset+4) < packet->payload_packet_len) {"
    },
    {
        "line": 833,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;"
    },
    {
        "line": 844,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;"
    },
    {
        "line": 855,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;"
    },
    {
        "line": 864,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;"
    },
    {
        "line": 885,
        "fullcodeline": "if(rc > 0) j += rc; else break;"
    },
    {
        "line": 144,
        "fullcodeline": "alpn_str_len++;"
    },
    {
        "line": 149,
        "fullcodeline": "alpn_str[alpn_str_len+alpn_i] = packet->payload[s_offset+alpn_i];"
    },
    {
        "line": 193,
        "fullcodeline": "if(ja3.server.num_elliptic_curve_point_format < MAX_NUM_JA3)"
    },
    {
        "line": 431,
        "fullcodeline": "len = (packet->payload[offset+extension_offset+3] << 8) + packet->payload[offset+extension_offset+4];"
    },
    {
        "line": 432,
        "fullcodeline": "len = (u_int)ndpi_min(len, sizeof(buffer)-1);"
    },
    {
        "line": 481,
        "fullcodeline": "} else if(extension_id == 10 /* supported groups */) {"
    },
    {
        "line": 870,
        "fullcodeline": "if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;"
    },
    {
        "line": 883,
        "fullcodeline": "sizeof(flow->protos.tls_quic_stun.tls_quic.ja3_client)-j, \"%02x\","
    },
    {
        "line": 897,
        "fullcodeline": "ndpi_set_risk(flow, NDPI_MALICIOUS_JA3);"
    },
    {
        "line": 416,
        "fullcodeline": "invalid_ja3 = 1;"
    },
    {
        "line": 434,
        "fullcodeline": "if((offset+extension_offset+5+len) <= packet->payload_packet_len) {"
    },
    {
        "line": 482,
        "fullcodeline": "u_int16_t s_offset = offset+extension_offset + 2;"
    },
    {
        "line": 832,
        "fullcodeline": "(i > 0) ? \"-\" : \"\", ja3.client.cipher[i]);"
    },
    {
        "line": 843,
        "fullcodeline": "(i > 0) ? \"-\" : \"\", ja3.client.tls_extension[i]);"
    },
    {
        "line": 854,
        "fullcodeline": "(i > 0) ? \"-\" : \"\", ja3.client.elliptic_curve[i]);"
    },
    {
        "line": 863,
        "fullcodeline": "(i > 0) ? \"-\" : \"\", ja3.client.elliptic_curve_point_format[i]);"
    },
    {
        "line": 414,
        "fullcodeline": "ja3.client.tls_extension[ja3.client.num_tls_extension++] = extension_id;"
    },
    {
        "line": 436,
        "fullcodeline": "buffer[len] = '\\0';"
    },
    {
        "line": 438,
        "fullcodeline": "cleanupServerName(buffer, sizeof(buffer));"
    },
    {
        "line": 440,
        "fullcodeline": "snprintf(flow->protos.tls_quic_stun.tls_quic.client_requested_server_name,"
    },
    {
        "line": 488,
        "fullcodeline": "if((s_offset+extension_len-2) <= total_len) {"
    },
    {
        "line": 194,
        "fullcodeline": "ja3.server.elliptic_curve_point_format[ja3.server.num_elliptic_curve_point_format++] = s_group;"
    },
    {
        "line": 454,
        "fullcodeline": "if(ndpi_check_dga_name(ndpi_struct, flow,"
    },
    {
        "line": 515,
        "fullcodeline": "} else if(extension_id == 11 /* ec_point_formats groups */) {"
    },
    {
        "line": 456,
        "fullcodeline": "char *sni = flow->protos.tls_quic_stun.tls_quic.client_requested_server_name;"
    },
    {
        "line": 457,
        "fullcodeline": "int len = strlen(sni);"
    },
    {
        "line": 489,
        "fullcodeline": "for(i=0; i<extension_len-2;) {"
    },
    {
        "line": 510,
        "fullcodeline": "invalid_ja3 = 1;"
    },
    {
        "line": 516,
        "fullcodeline": "u_int16_t s_offset = offset+extension_offset + 1;"
    },
    {
        "line": 447,
        "fullcodeline": "if(ndpi_match_hostname_protocol(ndpi_struct, flow, NDPI_PROTOCOL_TLS, buffer, strlen(buffer)))"
    },
    {
        "line": 490,
        "fullcodeline": "u_int16_t s_group = ntohs(*((u_int16_t*)&packet->payload[s_offset+i]));"
    },
    {
        "line": 507,
        "fullcodeline": "i += 2;"
    },
    {
        "line": 521,
        "fullcodeline": "if((s_offset+extension_len-1) <= total_len) {"
    },
    {
        "line": 450,
        "fullcodeline": "if(ndpi_match_hostname_protocol(ndpi_struct, flow, NDPI_PROTOCOL_QUIC, buffer, strlen(buffer)))"
    },
    {
        "line": 463,
        "fullcodeline": "if((len >= 4)"
    },
    {
        "line": 466,
        "fullcodeline": "&& (strncmp(sni, \"www.\", 4) == 0)) /* Not starting with www.... */"
    },
    {
        "line": 467,
        "fullcodeline": "ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_TOR, NDPI_PROTOCOL_TLS);"
    },
    {
        "line": 544,
        "fullcodeline": "} else if(extension_id == 13 /* signature algorithms */) {"
    },
    {
        "line": 465,
        "fullcodeline": "&& ((strcmp(&sni[len-4], \".com\") == 0) || (strcmp(&sni[len-4], \".net\") == 0))"
    },
    {
        "line": 495,
        "fullcodeline": "if((s_group == 0) || (packet->payload[s_offset+i] != packet->payload[s_offset+i+1])) {"
    },
    {
        "line": 522,
        "fullcodeline": "for(i=0; i<extension_len-1; i++) {"
    },
    {
        "line": 539,
        "fullcodeline": "invalid_ja3 = 1;"
    },
    {
        "line": 545,
        "fullcodeline": "u_int16_t s_offset = offset+extension_offset, safari_signature_algorithms = 0, chrome_signature_algorithms = 0;"
    },
    {
        "line": 546,
        "fullcodeline": "u_int16_t tot_signature_algorithms_len = ntohs(*((u_int16_t*)&packet->payload[s_offset]));"
    },
    {
        "line": 552,
        "fullcodeline": "s_offset += 2;"
    },
    {
        "line": 553,
        "fullcodeline": "tot_signature_algorithms_len = ndpi_min((sizeof(ja3.client.signature_algorithms) / 2) - 1, tot_signature_algorithms_len);"
    },
    {
        "line": 601,
        "fullcodeline": "ja3.client.signature_algorithms[i*2] = '\\0';"
    },
    {
        "line": 497,
        "fullcodeline": "if(ja3.client.num_elliptic_curve < MAX_NUM_JA3)"
    },
    {
        "line": 523,
        "fullcodeline": "u_int8_t s_group = packet->payload[s_offset+i];"
    },
    {
        "line": 562,
        "fullcodeline": "for(i=0; i<tot_signature_algorithms_len; i++) {"
    },
    {
        "line": 568,
        "fullcodeline": "for(i=0; i<tot_signature_algorithms_len; i+=2) {"
    },
    {
        "line": 529,
        "fullcodeline": "if(ja3.client.num_elliptic_curve_point_format < MAX_NUM_JA3)"
    },
    {
        "line": 563,
        "fullcodeline": "int rc = snprintf(&ja3.client.signature_algorithms[i*2], sizeof(ja3.client.signature_algorithms)-i*2, \"%02X\", packet->payload[s_offset+i]);"
    },
    {
        "line": 606,
        "fullcodeline": "} else if(extension_id == 16 /* application_layer_protocol_negotiation */) {"
    },
    {
        "line": 500,
        "fullcodeline": "invalid_ja3 = 1;"
    },
    {
        "line": 592,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.browser_euristics.is_safari_tls = 0,"
    },
    {
        "line": 593,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.browser_euristics.is_chrome_tls = 0;"
    },
    {
        "line": 607,
        "fullcodeline": "u_int16_t s_offset = offset+extension_offset;"
    },
    {
        "line": 608,
        "fullcodeline": "u_int16_t tot_alpn_len = ntohs(*((u_int16_t*)&packet->payload[s_offset]));"
    },
    {
        "line": 609,
        "fullcodeline": "char alpn_str[256];"
    },
    {
        "line": 610,
        "fullcodeline": "u_int8_t alpn_str_len = 0, i;"
    },
    {
        "line": 615,
        "fullcodeline": "s_offset += 2;"
    },
    {
        "line": 616,
        "fullcodeline": "tot_alpn_len += s_offset;"
    },
    {
        "line": 643,
        "fullcodeline": "alpn_str[alpn_str_len] = '\\0';"
    },
    {
        "line": 651,
        "fullcodeline": "snprintf(ja3.client.alpn, sizeof(ja3.client.alpn), \"%s\", alpn_str);"
    },
    {
        "line": 498,
        "fullcodeline": "ja3.client.elliptic_curve[ja3.client.num_elliptic_curve++] = s_group;"
    },
    {
        "line": 532,
        "fullcodeline": "invalid_ja3 = 1;"
    },
    {
        "line": 569,
        "fullcodeline": "u_int16_t cipher_id = (u_int16_t)ntohs(*((u_int16_t*)&packet->payload[s_offset+i]));"
    },
    {
        "line": 648,
        "fullcodeline": "if(flow->protos.tls_quic_stun.tls_quic.alpn == NULL)"
    },
    {
        "line": 654,
        "fullcodeline": "for(i=0; ja3.client.alpn[i] != '\\0'; i++)"
    },
    {
        "line": 530,
        "fullcodeline": "ja3.client.elliptic_curve_point_format[ja3.client.num_elliptic_curve_point_format++] = s_group;"
    },
    {
        "line": 586,
        "fullcodeline": "chrome_signature_algorithms++, safari_signature_algorithms++;"
    },
    {
        "line": 618,
        "fullcodeline": "while(s_offset < tot_alpn_len && s_offset < total_len) {"
    },
    {
        "line": 619,
        "fullcodeline": "u_int8_t alpn_i, alpn_len = packet->payload[s_offset++];"
    },
    {
        "line": 649,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.alpn = ndpi_strdup(alpn_str);"
    },
    {
        "line": 655,
        "fullcodeline": "if(ja3.client.alpn[i] == ',') ja3.client.alpn[i] = '-';"
    },
    {
        "line": 657,
        "fullcodeline": "} else if(extension_id == 43 /* supported versions */) {"
    },
    {
        "line": 658,
        "fullcodeline": "u_int16_t s_offset = offset+extension_offset;"
    },
    {
        "line": 659,
        "fullcodeline": "u_int8_t version_len = packet->payload[s_offset];"
    },
    {
        "line": 660,
        "fullcodeline": "char version_str[256];"
    },
    {
        "line": 661,
        "fullcodeline": "u_int8_t version_str_len = 0;"
    },
    {
        "line": 662,
        "fullcodeline": "version_str[0] = 0;"
    },
    {
        "line": 621,
        "fullcodeline": "if((s_offset + alpn_len) <= tot_alpn_len &&"
    },
    {
        "line": 622,
        "fullcodeline": "(s_offset + alpn_len) <= total_len) {"
    },
    {
        "line": 667,
        "fullcodeline": "if(version_len == (extension_len-1)) {"
    },
    {
        "line": 669,
        "fullcodeline": "u_int16_t supported_versions_offset = 0;"
    },
    {
        "line": 671,
        "fullcodeline": "s_offset++;"
    },
    {
        "line": 709,
        "fullcodeline": "} else if(extension_id == 65486 /* encrypted server name */) {"
    },
    {
        "line": 627,
        "fullcodeline": "if((alpn_str_len+alpn_len+1) < (sizeof(alpn_str)-1)) {"
    },
    {
        "line": 674,
        "fullcodeline": "for(j=0; j+1<version_len; j += 2) {"
    },
    {
        "line": 706,
        "fullcodeline": "if(flow->protos.tls_quic_stun.tls_quic.tls_supported_versions == NULL)"
    },
    {
        "line": 714,
        "fullcodeline": "u_int16_t e_offset = offset+extension_offset;"
    },
    {
        "line": 715,
        "fullcodeline": "u_int16_t initial_offset = e_offset;"
    },
    {
        "line": 716,
        "fullcodeline": "u_int16_t e_sni_len, cipher_suite = ntohs(*((u_int16_t*)&packet->payload[e_offset]));"
    },
    {
        "line": 720,
        "fullcodeline": "e_offset += 2; /* Cipher suite len */"
    },
    {
        "line": 723,
        "fullcodeline": "e_offset += 2; /* Group */"
    },
    {
        "line": 724,
        "fullcodeline": "e_offset +=  ntohs(*((u_int16_t*)&packet->payload[e_offset])) + 2; /* Lenght */"
    },
    {
        "line": 628,
        "fullcodeline": "if(alpn_str_len > 0) {"
    },
    {
        "line": 633,
        "fullcodeline": "for(alpn_i=0; alpn_i<alpn_len; alpn_i++)"
    },
    {
        "line": 634,
        "fullcodeline": "alpn_str[alpn_str_len+alpn_i] = packet->payload[s_offset+alpn_i];"
    },
    {
        "line": 636,
        "fullcodeline": "s_offset += alpn_len, alpn_str_len += alpn_len;;"
    },
    {
        "line": 675,
        "fullcodeline": "u_int16_t tls_version = ntohs(*((u_int16_t*)&packet->payload[s_offset+j]));"
    },
    {
        "line": 707,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.tls_supported_versions = ndpi_strdup(version_str);"
    },
    {
        "line": 726,
        "fullcodeline": "if((e_offset+4) < packet->payload_packet_len) {"
    },
    {
        "line": 630,
        "fullcodeline": "alpn_str_len++;"
    },
    {
        "line": 728,
        "fullcodeline": "e_offset +=  ntohs(*((u_int16_t*)&packet->payload[e_offset])) + 2; /* Lenght */"
    },
    {
        "line": 684,
        "fullcodeline": "int rc = snprintf(&version_str[version_str_len],"
    },
    {
        "line": 693,
        "fullcodeline": "rc = snprintf(&ja3.client.supported_versions[supported_versions_offset],"
    },
    {
        "line": 730,
        "fullcodeline": "if((e_offset+4) < packet->payload_packet_len) {"
    },
    {
        "line": 760,
        "fullcodeline": "} else if(extension_id == 65445 || /* QUIC transport parameters (drafts version) */"
    },
    {
        "line": 761,
        "fullcodeline": "extension_id == 57) { /* QUIC transport parameters (final version) */"
    },
    {
        "line": 762,
        "fullcodeline": "u_int16_t s_offset = offset+extension_offset;"
    },
    {
        "line": 764,
        "fullcodeline": "int using_var_int = is_version_with_var_int_transport_params(quic_version);"
    },
    {
        "line": 688,
        "fullcodeline": "if(rc <= 0)"
    },
    {
        "line": 697,
        "fullcodeline": "if(rc > 0)"
    },
    {
        "line": 731,
        "fullcodeline": "e_sni_len = ntohs(*((u_int16_t*)&packet->payload[e_offset]));"
    },
    {
        "line": 732,
        "fullcodeline": "e_offset += 2;"
    },
    {
        "line": 766,
        "fullcodeline": "if(!using_var_int) {"
    },
    {
        "line": 778,
        "fullcodeline": "while(s_offset < final_offset) {"
    },
    {
        "line": 685,
        "fullcodeline": "sizeof(version_str) - version_str_len, \"%s%s\","
    },
    {
        "line": 687,
        "fullcodeline": "ndpi_ssl_version2str(flow, tls_version, &unknown_tls_version));"
    },
    {
        "line": 694,
        "fullcodeline": "sizeof(ja3.client.supported_versions)-supported_versions_offset,"
    },
    {
        "line": 698,
        "fullcodeline": "supported_versions_offset += rc;"
    },
    {
        "line": 813,
        "fullcodeline": "s_offset += param_len;"
    },
    {
        "line": 686,
        "fullcodeline": "(version_str_len > 0) ? \",\" : \"\","
    },
    {
        "line": 691,
        "fullcodeline": "version_str_len += rc;"
    },
    {
        "line": 695,
        "fullcodeline": "\"%s%04X\", (j > 0) ? \"-\" : \"\", tls_version);"
    },
    {
        "line": 734,
        "fullcodeline": "if((e_offset+e_sni_len-extension_len-initial_offset) >= 0 &&"
    },
    {
        "line": 735,
        "fullcodeline": "e_offset+e_sni_len < packet->payload_packet_len) {"
    },
    {
        "line": 767,
        "fullcodeline": "if(s_offset+1 >= total_len) {"
    },
    {
        "line": 775,
        "fullcodeline": "final_offset = MIN(total_len, s_offset + extension_len);"
    },
    {
        "line": 802,
        "fullcodeline": "if(s_offset+param_len > final_offset)"
    },
    {
        "line": 805,
        "fullcodeline": "if(param_type==0x3129) {"
    },
    {
        "line": 740,
        "fullcodeline": "if(flow->protos.tls_quic_stun.tls_quic.encrypted_sni.esni == NULL) {"
    },
    {
        "line": 768,
        "fullcodeline": "final_offset = 0; /* Force skipping extension */"
    },
    {
        "line": 784,
        "fullcodeline": "param_type = ntohs(*((u_int16_t*)&packet->payload[s_offset]));"
    },
    {
        "line": 785,
        "fullcodeline": "param_len = ntohs(*((u_int16_t*)&packet->payload[s_offset + 2]));"
    },
    {
        "line": 786,
        "fullcodeline": "s_offset += 4;"
    },
    {
        "line": 809,
        "fullcodeline": "http_process_user_agent(ndpi_struct, flow,"
    },
    {
        "line": 741,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.encrypted_sni.esni = (char*)ndpi_malloc(e_sni_len*2+1);"
    },
    {
        "line": 770,
        "fullcodeline": "u_int16_t seq_len = ntohs(*((u_int16_t*)&packet->payload[s_offset]));"
    },
    {
        "line": 771,
        "fullcodeline": "s_offset += 2;"
    },
    {
        "line": 772,
        "fullcodeline": "final_offset = MIN(total_len, s_offset + seq_len);"
    },
    {
        "line": 782,
        "fullcodeline": "if(s_offset+3 >= final_offset)"
    },
    {
        "line": 791,
        "fullcodeline": "s_offset += quic_len(&packet->payload[s_offset], &param_type);"
    },
    {
        "line": 796,
        "fullcodeline": "s_offset += quic_len(&packet->payload[s_offset], &param_len);"
    },
    {
        "line": 788,
        "fullcodeline": "if(s_offset >= final_offset ||"
    },
    {
        "line": 793,
        "fullcodeline": "if(s_offset >= final_offset ||"
    },
    {
        "line": 789,
        "fullcodeline": "(s_offset + quic_len_buffer_still_required(packet->payload[s_offset])) >= final_offset)"
    },
    {
        "line": 794,
        "fullcodeline": "(s_offset + quic_len_buffer_still_required(packet->payload[s_offset])) >= final_offset)"
    },
    {
        "line": 746,
        "fullcodeline": "for(i=e_offset, off=0; i<(e_offset+e_sni_len); i++) {"
    },
    {
        "line": 747,
        "fullcodeline": "int rc = sprintf(&flow->protos.tls_quic_stun.tls_quic.encrypted_sni.esni[off], \"%02X\", packet->payload[i] & 0XFF);"
    },
    {
        "line": 749,
        "fullcodeline": "if(rc <= 0) {"
    },
    {
        "line": 750,
        "fullcodeline": "flow->protos.tls_quic_stun.tls_quic.encrypted_sni.esni[off] = '\\0';"
    }
]