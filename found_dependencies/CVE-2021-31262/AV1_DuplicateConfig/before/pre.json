[
    {
        "line": 3,
        "fullcodeline": "GF_AV1Config *out = gf_malloc(sizeof(GF_AV1Config));"
    },
    {
        "line": 5,
        "fullcodeline": "out->marker = cfg->marker;"
    },
    {
        "line": 6,
        "fullcodeline": "out->version = cfg->version;"
    },
    {
        "line": 7,
        "fullcodeline": "out->seq_profile = cfg->seq_profile;"
    },
    {
        "line": 8,
        "fullcodeline": "out->seq_level_idx_0 = cfg->seq_level_idx_0;"
    },
    {
        "line": 9,
        "fullcodeline": "out->seq_tier_0 = cfg->seq_tier_0;"
    },
    {
        "line": 10,
        "fullcodeline": "out->high_bitdepth = cfg->high_bitdepth;"
    },
    {
        "line": 11,
        "fullcodeline": "out->twelve_bit = cfg->twelve_bit;"
    },
    {
        "line": 12,
        "fullcodeline": "out->monochrome = cfg->monochrome;"
    },
    {
        "line": 13,
        "fullcodeline": "out->chroma_subsampling_x = cfg->chroma_subsampling_x;"
    },
    {
        "line": 14,
        "fullcodeline": "out->chroma_subsampling_y = cfg->chroma_subsampling_y;"
    },
    {
        "line": 15,
        "fullcodeline": "out->chroma_sample_position = cfg->chroma_sample_position;"
    },
    {
        "line": 17,
        "fullcodeline": "out->initial_presentation_delay_present = cfg->initial_presentation_delay_present;"
    },
    {
        "line": 18,
        "fullcodeline": "out->initial_presentation_delay_minus_one = cfg->initial_presentation_delay_minus_one;"
    },
    {
        "line": 19,
        "fullcodeline": "out->obu_array = gf_list_new();"
    },
    {
        "line": 20,
        "fullcodeline": "for (i = 0; i<gf_list_count(cfg->obu_array); ++i) {"
    },
    {
        "line": 21,
        "fullcodeline": "GF_AV1_OBUArrayEntry *dst = gf_malloc(sizeof(GF_AV1_OBUArrayEntry)), *src = gf_list_get(cfg->obu_array, i);"
    },
    {
        "line": 22,
        "fullcodeline": "dst->obu_length = src->obu_length;"
    },
    {
        "line": 23,
        "fullcodeline": "dst->obu_type = src->obu_type;"
    },
    {
        "line": 24,
        "fullcodeline": "dst->obu = gf_malloc((size_t)dst->obu_length);"
    },
    {
        "line": 25,
        "fullcodeline": "memcpy(dst->obu, src->obu, (size_t)src->obu_length);"
    },
    {
        "line": 26,
        "fullcodeline": "gf_list_add(out->obu_array, dst);"
    }
]