[
    {
        "line": 3,
        "fullcodeline": "parser = argparse.ArgumentParser(prog='qutebrowser',"
    },
    {
        "line": 5,
        "fullcodeline": "parser.add_argument('-B', '--basedir', help=\"Base directory for all \""
    },
    {
        "line": 7,
        "fullcodeline": "parser.add_argument('-C', '--config-py', help=\"Path to config.py.\","
    },
    {
        "line": 9,
        "fullcodeline": "parser.add_argument('-V', '--version', help=\"Show version and quit.\","
    },
    {
        "line": 11,
        "fullcodeline": "parser.add_argument('-s', '--set', help=\"Set a temporary setting for \""
    },
    {
        "line": 15,
        "fullcodeline": "parser.add_argument('-r', '--restore', help=\"Restore a named session.\","
    },
    {
        "line": 17,
        "fullcodeline": "parser.add_argument('-R', '--override-restore', help=\"Don't restore a \""
    },
    {
        "line": 20,
        "fullcodeline": "parser.add_argument('--target', choices=['auto', 'tab', 'tab-bg',"
    },
    {
        "line": 25,
        "fullcodeline": "parser.add_argument('--backend', choices=['webkit', 'webengine'],"
    },
    {
        "line": 27,
        "fullcodeline": "parser.add_argument('--desktop-file-name',"
    },
    {
        "line": 32,
        "fullcodeline": "parser.add_argument('--untrusted-args',"
    },
    {
        "line": 38,
        "fullcodeline": "parser.add_argument('--json-args', help=argparse.SUPPRESS)"
    },
    {
        "line": 39,
        "fullcodeline": "parser.add_argument('--temp-basedir-restarted',"
    },
    {
        "line": 45,
        "fullcodeline": "parser.add_argument('--enable-webengine-inspector',"
    },
    {
        "line": 49,
        "fullcodeline": "debug = parser.add_argument_group('debug arguments')"
    },
    {
        "line": 50,
        "fullcodeline": "debug.add_argument('-l', '--loglevel', dest='loglevel',"
    },
    {
        "line": 54,
        "fullcodeline": "debug.add_argument('--logfilter', type=logfilter_error,"
    },
    {
        "line": 57,
        "fullcodeline": "debug.add_argument('--loglines',"
    },
    {
        "line": 61,
        "fullcodeline": "debug.add_argument('-d', '--debug', help=\"Turn on debugging options.\","
    },
    {
        "line": 63,
        "fullcodeline": "debug.add_argument('--json-logging', action='store_true', help=\"Output log\""
    },
    {
        "line": 65,
        "fullcodeline": "debug.add_argument('--nocolor', help=\"Turn off colored logging.\","
    },
    {
        "line": 67,
        "fullcodeline": "debug.add_argument('--force-color', help=\"Force colored logging\","
    },
    {
        "line": 69,
        "fullcodeline": "debug.add_argument('--nowindow', action='store_true', help=\"Don't show \""
    },
    {
        "line": 71,
        "fullcodeline": "debug.add_argument('-T', '--temp-basedir', action='store_true', help=\"Use \""
    },
    {
        "line": 73,
        "fullcodeline": "debug.add_argument('--no-err-windows', action='store_true', help=\"Don't \""
    },
    {
        "line": 75,
        "fullcodeline": "debug.add_argument('--qt-arg', help=\"Pass an argument with a value to Qt. \""
    },
    {
        "line": 80,
        "fullcodeline": "debug.add_argument('--qt-flag', help=\"Pass an argument to Qt as flag.\","
    },
    {
        "line": 82,
        "fullcodeline": "debug.add_argument('-D', '--debug-flag', type=debug_flag_error,"
    },
    {
        "line": 85,
        "fullcodeline": "parser.add_argument('command', nargs='*', help=\"Commands to execute on \""
    },
    {
        "line": 88,
        "fullcodeline": "parser.add_argument('url', nargs='*', help=\"URLs to open on startup \""
    },
    {
        "line": 14,
        "fullcodeline": "metavar=('OPTION', 'VALUE'))"
    },
    {
        "line": 23,
        "fullcodeline": "help=\"How URLs should be opened if there is already a \""
    },
    {
        "line": 29,
        "fullcodeline": "help=\"Set the base name of the desktop entry for this \""
    },
    {
        "line": 34,
        "fullcodeline": "help=\"Mark all following arguments as untrusted, which \""
    },
    {
        "line": 52,
        "fullcodeline": "choices=['critical', 'error', 'warning', 'info',"
    },
    {
        "line": 55,
        "fullcodeline": "help=\"Comma-separated list of things to be logged \""
    },
    {
        "line": 58,
        "fullcodeline": "help=\"How many lines of the debug log to keep in RAM \""
    },
    {
        "line": 78,
        "fullcodeline": "\"geometry.\", nargs=2, metavar=('NAME', 'VALUE'),"
    },
    {
        "line": 83,
        "fullcodeline": "default=[], help=\"Pass name of debugging feature to be\""
    }
]