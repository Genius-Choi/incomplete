[
    {
        "line": 3,
        "fullcodeline": "struct super_block *sb = inode->i_sb;"
    },
    {
        "line": 26,
        "fullcodeline": "trace_ext4_collapse_range(inode, offset, len);"
    },
    {
        "line": 28,
        "fullcodeline": "punch_start = offset >> EXT4_BLOCK_SIZE_BITS(sb);"
    },
    {
        "line": 29,
        "fullcodeline": "punch_stop = (offset + len) >> EXT4_BLOCK_SIZE_BITS(sb);"
    },
    {
        "line": 42,
        "fullcodeline": "ioffset = round_down(offset, PAGE_SIZE);"
    },
    {
        "line": 45,
        "fullcodeline": "ret = filemap_write_and_wait_range(inode->i_mapping, ioffset,"
    },
    {
        "line": 51,
        "fullcodeline": "mutex_lock(&inode->i_mutex);"
    },
    {
        "line": 68,
        "fullcodeline": "truncate_pagecache(inode, ioffset);"
    },
    {
        "line": 71,
        "fullcodeline": "ext4_inode_block_unlocked_dio(inode);"
    },
    {
        "line": 72,
        "fullcodeline": "inode_dio_wait(inode);"
    },
    {
        "line": 74,
        "fullcodeline": "credits = ext4_writepage_trans_blocks(inode);"
    },
    {
        "line": 75,
        "fullcodeline": "handle = ext4_journal_start(inode, EXT4_HT_TRUNCATE, credits);"
    },
    {
        "line": 81,
        "fullcodeline": "down_write(&EXT4_I(inode)->i_data_sem);"
    },
    {
        "line": 82,
        "fullcodeline": "ext4_discard_preallocations(inode);"
    },
    {
        "line": 84,
        "fullcodeline": "ret = ext4_es_remove_extent(inode, punch_start,"
    },
    {
        "line": 91,
        "fullcodeline": "ret = ext4_ext_remove_space(inode, punch_start, punch_stop - 1);"
    },
    {
        "line": 96,
        "fullcodeline": "ext4_discard_preallocations(inode);"
    },
    {
        "line": 98,
        "fullcodeline": "ret = ext4_ext_shift_extents(inode, handle, punch_stop,"
    },
    {
        "line": 105,
        "fullcodeline": "new_size = i_size_read(inode) - len;"
    },
    {
        "line": 106,
        "fullcodeline": "i_size_write(inode, new_size);"
    },
    {
        "line": 112,
        "fullcodeline": "inode->i_mtime = inode->i_ctime = ext4_current_time(inode);"
    },
    {
        "line": 113,
        "fullcodeline": "ext4_mark_inode_dirty(handle, inode);"
    },
    {
        "line": 118,
        "fullcodeline": "ext4_inode_resume_unlocked_dio(inode);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS))"
    },
    {
        "line": 32,
        "fullcodeline": "if (ext4_should_journal_data(inode)) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (IS_ERR(handle)) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (IS_SYNC(inode))"
    },
    {
        "line": 19,
        "fullcodeline": "if (offset & (EXT4_CLUSTER_SIZE(sb) - 1) ||"
    },
    {
        "line": 20,
        "fullcodeline": "len & (EXT4_CLUSTER_SIZE(sb) - 1))"
    },
    {
        "line": 23,
        "fullcodeline": "if (!S_ISREG(inode->i_mode))"
    },
    {
        "line": 33,
        "fullcodeline": "ret = ext4_force_commit(inode->i_sb);"
    },
    {
        "line": 57,
        "fullcodeline": "if (offset + len >= i_size_read(inode)) {"
    },
    {
        "line": 58,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 63,
        "fullcodeline": "if (!ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS)) {"
    },
    {
        "line": 64,
        "fullcodeline": "ret = -EOPNOTSUPP;"
    },
    {
        "line": 77,
        "fullcodeline": "ret = PTR_ERR(handle);"
    },
    {
        "line": 85,
        "fullcodeline": "EXT_MAX_BLOCKS - punch_start);"
    },
    {
        "line": 99,
        "fullcodeline": "punch_stop - punch_start, SHIFT_LEFT);"
    },
    {
        "line": 107,
        "fullcodeline": "EXT4_I(inode)->i_disksize = new_size;"
    },
    {
        "line": 111,
        "fullcodeline": "ext4_handle_sync(handle);"
    },
    {
        "line": 16,
        "fullcodeline": "return -EOPNOTSUPP;"
    },
    {
        "line": 21,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 24,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 109,
        "fullcodeline": "up_write(&EXT4_I(inode)->i_data_sem);"
    },
    {
        "line": 87,
        "fullcodeline": "up_write(&EXT4_I(inode)->i_data_sem);"
    },
    {
        "line": 93,
        "fullcodeline": "up_write(&EXT4_I(inode)->i_data_sem);"
    },
    {
        "line": 101,
        "fullcodeline": "up_write(&EXT4_I(inode)->i_data_sem);"
    }
]