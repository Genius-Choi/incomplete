[
    {
        "line": 27,
        "fullcodeline": "marker = frag->data[i];"
    },
    {
        "line": 39,
        "fullcodeline": "marker = frag->data[i];"
    },
    {
        "line": 40,
        "fullcodeline": "start  = i + 1;"
    },
    {
        "line": 11,
        "fullcodeline": "if (frag->data_size < 4) {"
    },
    {
        "line": 16,
        "fullcodeline": "for (i = 0; i + 1 < frag->data_size && frag->data[i] != 0xff; i++);"
    },
    {
        "line": 17,
        "fullcodeline": "if (i > 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "for (++i; i + 1 < frag->data_size && frag->data[i] == 0xff; i++);"
    },
    {
        "line": 22,
        "fullcodeline": "if (i + 1 >= frag->data_size && frag->data[i]) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (marker != JPEG_MARKER_SOI) {"
    },
    {
        "line": 33,
        "fullcodeline": "for (++i; i + 1 < frag->data_size && frag->data[i] == 0xff; i++);"
    },
    {
        "line": 34,
        "fullcodeline": "if (i + 1 >= frag->data_size) {"
    },
    {
        "line": 42,
        "fullcodeline": "for (unit = 0;; unit++) {"
    },
    {
        "line": 18,
        "fullcodeline": "av_log(ctx->log_ctx, AV_LOG_WARNING, \"Discarding %d bytes at \""
    },
    {
        "line": 23,
        "fullcodeline": "av_log(ctx->log_ctx, AV_LOG_ERROR, \"Invalid JPEG image: \""
    },
    {
        "line": 29,
        "fullcodeline": "av_log(ctx->log_ctx, AV_LOG_ERROR, \"Invalid JPEG image: first \""
    },
    {
        "line": 35,
        "fullcodeline": "av_log(ctx->log_ctx, AV_LOG_ERROR, \"Invalid JPEG image: \""
    },
    {
        "line": 124,
        "fullcodeline": "err = ff_cbs_insert_unit_data(ctx, frag, unit, marker,"
    },
    {
        "line": 131,
        "fullcodeline": "marker = next_marker;"
    },
    {
        "line": 132,
        "fullcodeline": "start  = next_start;"
    },
    {
        "line": 43,
        "fullcodeline": "if (marker == JPEG_MARKER_EOI) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (marker == JPEG_MARKER_SOS) {"
    },
    {
        "line": 126,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 129,
        "fullcodeline": "if (next_marker == -1)"
    },
    {
        "line": 93,
        "fullcodeline": "length = AV_RB16(frag->data + start);"
    },
    {
        "line": 98,
        "fullcodeline": "data_ref = NULL;"
    },
    {
        "line": 99,
        "fullcodeline": "data     = av_malloc(end - start +"
    },
    {
        "line": 104,
        "fullcodeline": "memcpy(data, frag->data + start, length);"
    },
    {
        "line": 114,
        "fullcodeline": "data_size = j;"
    },
    {
        "line": 116,
        "fullcodeline": "memset(data + data_size, 0, AV_INPUT_BUFFER_PADDING_SIZE);"
    },
    {
        "line": 95,
        "fullcodeline": "if (length > end - start)"
    },
    {
        "line": 101,
        "fullcodeline": "if (!data)"
    },
    {
        "line": 105,
        "fullcodeline": "for (i = start + length, j = length; i < end; i++, j++) {"
    },
    {
        "line": 119,
        "fullcodeline": "data      = frag->data + start;"
    },
    {
        "line": 120,
        "fullcodeline": "data_size = end - start;"
    },
    {
        "line": 121,
        "fullcodeline": "data_ref  = frag->data_ref;"
    },
    {
        "line": 45,
        "fullcodeline": "} else if (marker == JPEG_MARKER_SOS) {"
    },
    {
        "line": 102,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 106,
        "fullcodeline": "if (frag->data[i] == 0xff) {"
    },
    {
        "line": 46,
        "fullcodeline": "for (i = start; i + 1 < frag->data_size; i++) {"
    },
    {
        "line": 63,
        "fullcodeline": "i = start;"
    },
    {
        "line": 69,
        "fullcodeline": "length = AV_RB16(frag->data + i);"
    },
    {
        "line": 75,
        "fullcodeline": "end = start + length;"
    },
    {
        "line": 77,
        "fullcodeline": "i = end;"
    },
    {
        "line": 109,
        "fullcodeline": "data[j] = 0xff;"
    },
    {
        "line": 49,
        "fullcodeline": "end = i;"
    },
    {
        "line": 64,
        "fullcodeline": "if (i + 2 > frag->data_size) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (i + length > frag->data_size) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (frag->data[i] != 0xff) {"
    },
    {
        "line": 107,
        "fullcodeline": "while (frag->data[i] == 0xff)"
    },
    {
        "line": 108,
        "fullcodeline": "++i;"
    },
    {
        "line": 111,
        "fullcodeline": "data[j] = frag->data[i];"
    },
    {
        "line": 47,
        "fullcodeline": "if (frag->data[i] != 0xff)"
    },
    {
        "line": 50,
        "fullcodeline": "for (++i; i + 1 < frag->data_size &&"
    },
    {
        "line": 51,
        "fullcodeline": "frag->data[i] == 0xff; i++);"
    },
    {
        "line": 52,
        "fullcodeline": "if (i + 1 >= frag->data_size) {"
    },
    {
        "line": 65,
        "fullcodeline": "av_log(ctx->log_ctx, AV_LOG_ERROR, \"Invalid JPEG image: \""
    },
    {
        "line": 71,
        "fullcodeline": "av_log(ctx->log_ctx, AV_LOG_ERROR, \"Invalid JPEG image: \""
    },
    {
        "line": 79,
        "fullcodeline": "next_marker = -1;"
    },
    {
        "line": 53,
        "fullcodeline": "next_marker = -1;"
    },
    {
        "line": 57,
        "fullcodeline": "next_marker = frag->data[i];"
    },
    {
        "line": 58,
        "fullcodeline": "next_start  = i + 1;"
    },
    {
        "line": 81,
        "fullcodeline": "for (++i; i + 1 < frag->data_size &&"
    },
    {
        "line": 82,
        "fullcodeline": "frag->data[i] == 0xff; i++);"
    },
    {
        "line": 83,
        "fullcodeline": "if (i + 1 >= frag->data_size) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (frag->data[i] == 0x00)"
    },
    {
        "line": 84,
        "fullcodeline": "next_marker = -1;"
    },
    {
        "line": 86,
        "fullcodeline": "next_marker = frag->data[i];"
    },
    {
        "line": 87,
        "fullcodeline": "next_start  = i + 1;"
    }
]