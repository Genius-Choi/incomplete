[
    {
        "line": 3,
        "fullcodeline": "problem_data_t *pd = problem_data_new();"
    },
    {
        "line": 6,
        "fullcodeline": "g_variant_get(problem_info, \"a{ss}\", &iter);"
    },
    {
        "line": 22,
        "fullcodeline": "problem_data_add_basics(pd);"
    },
    {
        "line": 24,
        "fullcodeline": "char *problem_id = problem_data_save(pd);"
    },
    {
        "line": 30,
        "fullcodeline": "problem_data_free(pd);"
    },
    {
        "line": 8,
        "fullcodeline": "while (g_variant_iter_loop(iter, \"{ss}\", &key, &value))"
    },
    {
        "line": 13,
        "fullcodeline": "if (caller_uid != 0 || problem_data_get_content_or_NULL(pd, FILENAME_UID) == NULL)"
    },
    {
        "line": 10,
        "fullcodeline": "problem_data_add_text_editable(pd, key, value);"
    },
    {
        "line": 15,
        "fullcodeline": "log_info(\"Adding UID %d to problem data\", caller_uid);"
    },
    {
        "line": 16,
        "fullcodeline": "char buf[sizeof(uid_t) * 3 + 2];"
    },
    {
        "line": 17,
        "fullcodeline": "snprintf(buf, sizeof(buf), \"%d\", caller_uid);"
    },
    {
        "line": 18,
        "fullcodeline": "problem_data_add_text_noteditable(pd, FILENAME_UID, buf);"
    },
    {
        "line": 26,
        "fullcodeline": "notify_new_path(problem_id);"
    },
    {
        "line": 28,
        "fullcodeline": "*error = xasprintf(\"Cannot create a new problem\");"
    }
]