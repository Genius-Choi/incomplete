[
    {
        "line": 5,
        "fullcodeline": "const ut8 *buf = obuf;"
    },
    {
        "line": 6,
        "fullcodeline": "const ut8 *buf_end = obuf + obuf_len;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!spec || !value || !hdr || !obuf || obuf_len < 1) {"
    },
    {
        "line": 40,
        "fullcodeline": "value->encoding.block.length = READ (buf, ut16);"
    },
    {
        "line": 49,
        "fullcodeline": "value->encoding.block.length = READ (buf, ut32);"
    },
    {
        "line": 74,
        "fullcodeline": "buf += (strlen ((const char*)buf) + 1);"
    },
    {
        "line": 77,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->encoding.block.length);"
    },
    {
        "line": 89,
        "fullcodeline": "value->encoding.block.length = READ (buf, ut8);"
    },
    {
        "line": 101,
        "fullcodeline": "buf = r_leb128 (buf, &value->encoding.sdata);"
    },
    {
        "line": 104,
        "fullcodeline": "value->encoding.str_struct.offset = READ (buf, ut32);"
    },
    {
        "line": 41,
        "fullcodeline": "if (value->encoding.block.length > 0) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (value->encoding.block.length > 0) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (!buf) {"
    },
    {
        "line": 98,
        "fullcodeline": "value->encoding.flag = READ (buf, ut8);"
    },
    {
        "line": 105,
        "fullcodeline": "if (debug_str && value->encoding.str_struct.offset < debug_str_len) {"
    },
    {
        "line": 115,
        "fullcodeline": "ut64 ndata = 0;"
    },
    {
        "line": 117,
        "fullcodeline": "buf = r_uleb128 (buf, R_MIN (sizeof (data), (size_t)(buf_end - buf)), &ndata);"
    },
    {
        "line": 123,
        "fullcodeline": "value->encoding.reference = READ (buf, ut64); // addr size of machine"
    },
    {
        "line": 126,
        "fullcodeline": "value->encoding.reference = READ (buf, ut8);"
    },
    {
        "line": 129,
        "fullcodeline": "value->encoding.reference = READ (buf, ut16);"
    },
    {
        "line": 132,
        "fullcodeline": "value->encoding.reference = READ (buf, ut32);"
    },
    {
        "line": 135,
        "fullcodeline": "value->encoding.reference = READ (buf, ut64);"
    },
    {
        "line": 138,
        "fullcodeline": "value->encoding.data = READ (buf, ut8);"
    },
    {
        "line": 51,
        "fullcodeline": "ut8 *data = calloc (sizeof (ut8), value->encoding.block.length);"
    },
    {
        "line": 73,
        "fullcodeline": "value->encoding.str_struct.string = *buf? strdup ((const char*)buf) : NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "value->encoding.address = READ (buf, ut8);"
    },
    {
        "line": 26,
        "fullcodeline": "value->encoding.address = READ (buf, ut16);"
    },
    {
        "line": 29,
        "fullcodeline": "value->encoding.address = READ (buf, ut32);"
    },
    {
        "line": 32,
        "fullcodeline": "value->encoding.address = READ (buf, ut64);"
    },
    {
        "line": 43,
        "fullcodeline": "for (j = 0; j < value->encoding.block.length; j++) {"
    },
    {
        "line": 83,
        "fullcodeline": "for (j = 0; j < value->encoding.block.length; j++) {"
    },
    {
        "line": 92,
        "fullcodeline": "for (j = 0; j < value->encoding.block.length; j++) {"
    },
    {
        "line": 106,
        "fullcodeline": "value->encoding.str_struct.string = strdup ("
    },
    {
        "line": 44,
        "fullcodeline": "value->encoding.block.data[j] = READ (buf, ut8);"
    },
    {
        "line": 53,
        "fullcodeline": "for (j = 0; j < value->encoding.block.length; j++) {"
    },
    {
        "line": 84,
        "fullcodeline": "value->encoding.block.data[j] = READ (buf, ut8);"
    },
    {
        "line": 93,
        "fullcodeline": "value->encoding.block.data[j] = READ (buf, ut8);"
    },
    {
        "line": 54,
        "fullcodeline": "data[j] = READ (buf, ut8);"
    }
]