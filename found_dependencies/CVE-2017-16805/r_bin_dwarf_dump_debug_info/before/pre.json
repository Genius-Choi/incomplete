[
    {
        "line": 5,
        "fullcodeline": "if (!inf || !f) {"
    },
    {
        "line": 9,
        "fullcodeline": "for (i = 0; i < inf->length; i++) {"
    },
    {
        "line": 11,
        "fullcodeline": "fprintf (f, \"   Length:        0x%x\\n\", inf->comp_units [i].hdr.length);"
    },
    {
        "line": 12,
        "fullcodeline": "fprintf (f, \"   Version:       %d\\n\", inf->comp_units [i].hdr.version);"
    },
    {
        "line": 13,
        "fullcodeline": "fprintf (f, \"   Abbrev Offset: 0x%x\\n\", inf->comp_units [i].hdr.abbrev_offset);"
    },
    {
        "line": 14,
        "fullcodeline": "fprintf (f, \"   Pointer Size:  %d\\n\", inf->comp_units [i].hdr.pointer_size);"
    },
    {
        "line": 18,
        "fullcodeline": "for (j = 0; j < inf->comp_units[i].length; j++) {"
    },
    {
        "line": 31,
        "fullcodeline": "values = dies[j].attr_values;"
    },
    {
        "line": 21,
        "fullcodeline": "if (dies[j].tag && dies[j].tag <= DW_TAG_volatile_type &&"
    },
    {
        "line": 33,
        "fullcodeline": "for (k = 0; k < dies[j].length; k++) {"
    },
    {
        "line": 23,
        "fullcodeline": "fprintf (f, \"(%s)\\n\", dwarf_tag_name_encodings[dies[j].tag]);"
    },
    {
        "line": 43,
        "fullcodeline": "r_bin_dwarf_dump_attr_value (&values[k], f);"
    },
    {
        "line": 44,
        "fullcodeline": "fprintf (f, \"\\n\");"
    },
    {
        "line": 25,
        "fullcodeline": "fprintf (f, \"(Unknown abbrev tag)\\n\");"
    },
    {
        "line": 34,
        "fullcodeline": "if (!values[k].name)"
    },
    {
        "line": 37,
        "fullcodeline": "if (values[k].name < DW_AT_vtable_elem_location &&"
    },
    {
        "line": 39,
        "fullcodeline": "fprintf (f, \"     %-18s : \", dwarf_attr_encodings[values[k].name]);"
    },
    {
        "line": 41,
        "fullcodeline": "fprintf (f, \"     TODO\\t\");"
    }
]