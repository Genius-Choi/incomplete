[
    {
        "line": 4,
        "fullcodeline": "for (unsigned i = 0; i < ARRAY_SIZE(validate_uris); i++) {"
    },
    {
        "line": 5,
        "fullcodeline": "int res = uri_parser_process_string(&ures, validate_uris[i].uri);"
    },
    {
        "line": 6,
        "fullcodeline": "TEST_ASSERT_EQUAL_INT(validate_uris[i].full_uri,"
    },
    {
        "line": 8,
        "fullcodeline": "TEST_ASSERT_EQUAL_INT(validate_uris[i].expected, res);"
    },
    {
        "line": 7,
        "fullcodeline": "uri_parser_is_absolute_string(validate_uris[i].uri));"
    },
    {
        "line": 9,
        "fullcodeline": "if (res == 0) {"
    },
    {
        "line": 10,
        "fullcodeline": "VEC_CHECK(scheme, i, _failure_msg);"
    },
    {
        "line": 11,
        "fullcodeline": "VEC_CHECK(userinfo, i, _failure_msg);"
    },
    {
        "line": 12,
        "fullcodeline": "VEC_CHECK(host, i, _failure_msg);"
    },
    {
        "line": 13,
        "fullcodeline": "VEC_CHECK(ipv6addr, i, _failure_msg);"
    },
    {
        "line": 14,
        "fullcodeline": "VEC_CHECK(zoneid, i, _failure_msg);"
    },
    {
        "line": 15,
        "fullcodeline": "VEC_CHECK(port, i, _failure_msg);"
    },
    {
        "line": 16,
        "fullcodeline": "VEC_CHECK(path, i, _failure_msg);"
    },
    {
        "line": 17,
        "fullcodeline": "VEC_CHECK(query, i, _failure_msg);"
    }
]