[
    {
        "line": 4,
        "fullcodeline": "module = AnsibleModule("
    },
    {
        "line": 101,
        "fullcodeline": "lv_name = module.params.get('lv_name')"
    },
    {
        "line": 105,
        "fullcodeline": "lxc_manage = LxcContainerManagement(module=module)"
    },
    {
        "line": 106,
        "fullcodeline": "lxc_manage.run()"
    },
    {
        "line": 96,
        "fullcodeline": "if not HAS_LXC:"
    },
    {
        "line": 102,
        "fullcodeline": "if not lv_name:"
    },
    {
        "line": 5,
        "fullcodeline": "argument_spec=dict("
    },
    {
        "line": 91,
        "fullcodeline": "required_if = (["
    },
    {
        "line": 97,
        "fullcodeline": "module.fail_json("
    },
    {
        "line": 103,
        "fullcodeline": "module.params['lv_name'] = module.params.get('name')"
    },
    {
        "line": 6,
        "fullcodeline": "name=dict("
    },
    {
        "line": 10,
        "fullcodeline": "template=dict("
    },
    {
        "line": 14,
        "fullcodeline": "backing_store=dict("
    },
    {
        "line": 19,
        "fullcodeline": "template_options=dict("
    },
    {
        "line": 22,
        "fullcodeline": "config=dict("
    },
    {
        "line": 25,
        "fullcodeline": "vg_name=dict("
    },
    {
        "line": 29,
        "fullcodeline": "thinpool=dict("
    },
    {
        "line": 32,
        "fullcodeline": "fs_type=dict("
    },
    {
        "line": 36,
        "fullcodeline": "fs_size=dict("
    },
    {
        "line": 40,
        "fullcodeline": "directory=dict("
    },
    {
        "line": 43,
        "fullcodeline": "zfs_root=dict("
    },
    {
        "line": 46,
        "fullcodeline": "lv_name=dict("
    },
    {
        "line": 49,
        "fullcodeline": "lxc_path=dict("
    },
    {
        "line": 52,
        "fullcodeline": "state=dict("
    },
    {
        "line": 56,
        "fullcodeline": "container_command=dict("
    },
    {
        "line": 59,
        "fullcodeline": "container_config=dict("
    },
    {
        "line": 62,
        "fullcodeline": "container_log=dict("
    },
    {
        "line": 66,
        "fullcodeline": "container_log_level=dict("
    },
    {
        "line": 70,
        "fullcodeline": "clone_name=dict("
    },
    {
        "line": 74,
        "fullcodeline": "clone_snapshot=dict("
    },
    {
        "line": 78,
        "fullcodeline": "archive=dict("
    },
    {
        "line": 82,
        "fullcodeline": "archive_path=dict("
    },
    {
        "line": 85,
        "fullcodeline": "archive_compression=dict("
    },
    {
        "line": 92,
        "fullcodeline": "('archive', True, ['archive_path'])"
    },
    {
        "line": 16,
        "fullcodeline": "choices=LXC_BACKING_STORE.keys(),"
    },
    {
        "line": 53,
        "fullcodeline": "choices=LXC_ANSIBLE_STATES.keys(),"
    },
    {
        "line": 86,
        "fullcodeline": "choices=LXC_COMPRESSION_MAP.keys(),"
    },
    {
        "line": 67,
        "fullcodeline": "choices=[n for i in LXC_LOGGING_LEVELS.values() for n in i],"
    }
]