[
    {
        "line": 12,
        "fullcodeline": "import os"
    },
    {
        "line": 13,
        "fullcodeline": "import os.path as path"
    },
    {
        "line": 14,
        "fullcodeline": "import subprocess"
    },
    {
        "line": 15,
        "fullcodeline": "import tempfile"
    },
    {
        "line": 22,
        "fullcodeline": "script_file = path.join('/opt', '.lxc-attach-script')"
    },
    {
        "line": 23,
        "fullcodeline": "f = open(script_file, 'wb')"
    },
    {
        "line": 31,
        "fullcodeline": "os.chmod(script_file, 0700)"
    },
    {
        "line": 34,
        "fullcodeline": "tempdir = tempfile.gettempdir()"
    },
    {
        "line": 37,
        "fullcodeline": "stdout_file = open(path.join(tempdir, 'lxc-attach-script.log'), 'ab')"
    },
    {
        "line": 40,
        "fullcodeline": "stderr_file = open(path.join(tempdir, 'lxc-attach-script.err'), 'ab')"
    },
    {
        "line": 18,
        "fullcodeline": "if not path.isdir('/opt'):"
    },
    {
        "line": 19,
        "fullcodeline": "os.mkdir('/opt')"
    },
    {
        "line": 25,
        "fullcodeline": "f.write(ATTACH_TEMPLATE % {'container_command': command})"
    },
    {
        "line": 26,
        "fullcodeline": "f.flush()"
    },
    {
        "line": 28,
        "fullcodeline": "f.close()"
    },
    {
        "line": 44,
        "fullcodeline": "subprocess.Popen("
    },
    {
        "line": 51,
        "fullcodeline": "stderr_file.close()"
    },
    {
        "line": 52,
        "fullcodeline": "stdout_file.close()"
    },
    {
        "line": 55,
        "fullcodeline": "os.remove(script_file)"
    },
    {
        "line": 45,
        "fullcodeline": "[script_file],"
    }
]