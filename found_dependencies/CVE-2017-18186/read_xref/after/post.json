[
    {
        "line": 4,
        "fullcodeline": "std::set<qpdf_offset_t> visited;"
    },
    {
        "line": 46,
        "fullcodeline": "int size = this->m->trailer.getKey(\"/Size\").getIntValue();"
    },
    {
        "line": 47,
        "fullcodeline": "int max_obj = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "this->m->deleted_objects.clear();"
    },
    {
        "line": 41,
        "fullcodeline": "if (! this->m->trailer.isInitialized())"
    },
    {
        "line": 48,
        "fullcodeline": "if (! this->m->xref_table.empty())"
    },
    {
        "line": 52,
        "fullcodeline": "if (! this->m->deleted_objects.empty())"
    },
    {
        "line": 56,
        "fullcodeline": "if (size != max_obj + 1)"
    },
    {
        "line": 7,
        "fullcodeline": "visited.insert(xref_offset);"
    },
    {
        "line": 8,
        "fullcodeline": "char buf[7];"
    },
    {
        "line": 9,
        "fullcodeline": "memset(buf, 0, sizeof(buf));"
    },
    {
        "line": 10,
        "fullcodeline": "this->m->file->seek(xref_offset, SEEK_SET);"
    },
    {
        "line": 11,
        "fullcodeline": "this->m->file->read(buf, sizeof(buf) - 1);"
    },
    {
        "line": 50,
        "fullcodeline": "max_obj = (*(this->m->xref_table.rbegin())).first.getObj();"
    },
    {
        "line": 54,
        "fullcodeline": "max_obj = std::max(max_obj, *(this->m->deleted_objects.rbegin()));"
    },
    {
        "line": 58,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDF xref size mismatch\");"
    },
    {
        "line": 59,
        "fullcodeline": "warn(QPDFExc(qpdf_e_damaged_pdf, this->m->file->getName(), \"\", 0,"
    },
    {
        "line": 15,
        "fullcodeline": "if ((strncmp(buf, \"xref\", 4) == 0) &&"
    },
    {
        "line": 35,
        "fullcodeline": "if (visited.count(xref_offset) != 0)"
    },
    {
        "line": 43,
        "fullcodeline": "throw QPDFExc(qpdf_e_damaged_pdf, this->m->file->getName(), \"\", 0,"
    },
    {
        "line": 16,
        "fullcodeline": "QUtil::is_space(buf[4]))"
    },
    {
        "line": 18,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDF xref space\","
    },
    {
        "line": 22,
        "fullcodeline": "int skip = 4;"
    },
    {
        "line": 29,
        "fullcodeline": "xref_offset = read_xrefTable(xref_offset + skip);"
    },
    {
        "line": 37,
        "fullcodeline": "xref_offset = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "std::string(\"reported number of objects (\") +"
    },
    {
        "line": 19,
        "fullcodeline": "((buf[4] == '\\n') ? 0 :"
    },
    {
        "line": 25,
        "fullcodeline": "while (QUtil::is_space(buf[skip]))"
    },
    {
        "line": 33,
        "fullcodeline": "xref_offset = read_xrefStream(xref_offset);"
    },
    {
        "line": 20,
        "fullcodeline": "(buf[4] == '\\r') ? 1 :"
    },
    {
        "line": 27,
        "fullcodeline": "++skip;"
    },
    {
        "line": 63,
        "fullcodeline": "QUtil::int_to_string(max_obj + 1) + \")\"));"
    },
    {
        "line": 21,
        "fullcodeline": "(buf[4] == ' ') ? 2 : 9999));"
    },
    {
        "line": 61,
        "fullcodeline": "QUtil::int_to_string(size) +"
    }
]