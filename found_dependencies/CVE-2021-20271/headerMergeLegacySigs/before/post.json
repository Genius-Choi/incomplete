[
    {
        "line": 6,
        "fullcodeline": "hi = headerInitIterator(sigh);"
    },
    {
        "line": 72,
        "fullcodeline": "headerFreeIterator(hi);"
    },
    {
        "line": 7,
        "fullcodeline": "for (; headerNext(hi, &td); rpmtdFreeData(&td))"
    },
    {
        "line": 46,
        "fullcodeline": "if (!headerIsEntry(h, td.tag)) {"
    },
    {
        "line": 12,
        "fullcodeline": "td.tag = RPMTAG_SIGSIZE;"
    },
    {
        "line": 15,
        "fullcodeline": "td.tag = RPMTAG_SIGPGP;"
    },
    {
        "line": 18,
        "fullcodeline": "td.tag = RPMTAG_SIGMD5;"
    },
    {
        "line": 21,
        "fullcodeline": "td.tag = RPMTAG_SIGGPG;"
    },
    {
        "line": 24,
        "fullcodeline": "td.tag = RPMTAG_SIGPGP5;"
    },
    {
        "line": 27,
        "fullcodeline": "td.tag = RPMTAG_ARCHIVESIZE;"
    },
    {
        "line": 30,
        "fullcodeline": "td.tag = RPMTAG_FILESIGNATURES;"
    },
    {
        "line": 33,
        "fullcodeline": "td.tag = RPMTAG_FILESIGNATURELENGTH;"
    },
    {
        "line": 69,
        "fullcodeline": "(void) headerPut(h, &td, HEADERPUT_DEFAULT);"
    },
    {
        "line": 42,
        "fullcodeline": "if (!(td.tag >= HEADER_SIGBASE && td.tag < HEADER_TAGBASE))"
    },
    {
        "line": 56,
        "fullcodeline": "if (td.count != 1)"
    },
    {
        "line": 62,
        "fullcodeline": "if (td.count >= 16*1024)"
    }
]