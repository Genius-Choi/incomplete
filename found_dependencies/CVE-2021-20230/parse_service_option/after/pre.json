[
    {
        "line": 4,
        "fullcodeline": "int endpoints=0;"
    },
    {
        "line": 10,
        "fullcodeline": "section=section_ptr ? *section_ptr : NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "if(cmd==CMD_SET_DEFAULTS || cmd==CMD_SET_COPY) {"
    },
    {
        "line": 13,
        "fullcodeline": "section->ref=1;"
    },
    {
        "line": 36,
        "fullcodeline": "section->local_fd=NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "section->local_fd=NULL;"
    },
    {
        "line": 47,
        "fullcodeline": "str_free(section->local_fd);"
    },
    {
        "line": 52,
        "fullcodeline": "section->option.accept=1;"
    },
    {
        "line": 53,
        "fullcodeline": "name_list_append(&section->local_addr.names, arg);"
    },
    {
        "line": 69,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = [host:]port accept connections on specified host:port\","
    },
    {
        "line": 80,
        "fullcodeline": "section->ca_dir=NULL;"
    },
    {
        "line": 83,
        "fullcodeline": "section->ca_dir=str_dup_detached(new_service_options.ca_dir);"
    },
    {
        "line": 86,
        "fullcodeline": "str_free(section->ca_dir);"
    },
    {
        "line": 106,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = CA certificate directory for 'verify' option\","
    },
    {
        "line": 117,
        "fullcodeline": "section->ca_file=NULL;"
    },
    {
        "line": 120,
        "fullcodeline": "section->ca_file=str_dup_detached(new_service_options.ca_file);"
    },
    {
        "line": 123,
        "fullcodeline": "str_free(section->ca_file);"
    },
    {
        "line": 143,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = CA certificate file for 'verify' option\","
    },
    {
        "line": 151,
        "fullcodeline": "section->cert=NULL;"
    },
    {
        "line": 154,
        "fullcodeline": "section->cert=str_dup_detached(new_service_options.cert);"
    },
    {
        "line": 157,
        "fullcodeline": "str_free(section->cert);"
    },
    {
        "line": 180,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = certificate chain\", \"cert\");"
    },
    {
        "line": 278,
        "fullcodeline": "section->cipher_list=NULL;"
    },
    {
        "line": 281,
        "fullcodeline": "section->cipher_list=str_dup_detached(new_service_options.cipher_list);"
    },
    {
        "line": 284,
        "fullcodeline": "str_free(section->cipher_list);"
    },
    {
        "line": 311,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"ciphers\", stunnel_cipher_list);"
    },
    {
        "line": 315,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = permitted ciphers for TLS 1.2 or older\", \"ciphers\");"
    },
    {
        "line": 323,
        "fullcodeline": "section->ciphersuites=NULL;"
    },
    {
        "line": 326,
        "fullcodeline": "section->ciphersuites=str_dup_detached(new_service_options.ciphersuites);"
    },
    {
        "line": 329,
        "fullcodeline": "str_free(section->ciphersuites);"
    },
    {
        "line": 345,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s %s\", \"ciphersuites\", stunnel_ciphersuites, \"(with TLSv1.3)\");"
    },
    {
        "line": 348,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = permitted ciphersuites for TLS 1.3\", \"ciphersuites\");"
    },
    {
        "line": 378,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no client mode (remote service uses TLS)\","
    },
    {
        "line": 417,
        "fullcodeline": "section->connect_session=NULL;"
    },
    {
        "line": 421,
        "fullcodeline": "section->connect_session=NULL;"
    },
    {
        "line": 428,
        "fullcodeline": "str_free(section->connect_session);"
    },
    {
        "line": 454,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = [host:]port to connect\","
    },
    {
        "line": 462,
        "fullcodeline": "section->crl_dir=NULL;"
    },
    {
        "line": 465,
        "fullcodeline": "section->crl_dir=str_dup_detached(new_service_options.crl_dir);"
    },
    {
        "line": 468,
        "fullcodeline": "str_free(section->crl_dir);"
    },
    {
        "line": 484,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = CRL directory\", \"CRLpath\");"
    },
    {
        "line": 491,
        "fullcodeline": "section->crl_file=NULL;"
    },
    {
        "line": 494,
        "fullcodeline": "section->crl_file=str_dup_detached(new_service_options.crl_file);"
    },
    {
        "line": 497,
        "fullcodeline": "str_free(section->crl_file);"
    },
    {
        "line": 513,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = CRL file\", \"CRLfile\");"
    },
    {
        "line": 522,
        "fullcodeline": "section->curves=str_dup_detached(DEFAULT_CURVES);"
    },
    {
        "line": 525,
        "fullcodeline": "section->curves=str_dup_detached(new_service_options.curves);"
    },
    {
        "line": 528,
        "fullcodeline": "str_free(section->curves);"
    },
    {
        "line": 539,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"curves\", DEFAULT_CURVES);"
    },
    {
        "line": 542,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = ECDH curve names\", \"curves\");"
    },
    {
        "line": 551,
        "fullcodeline": "section->log_level=LOG_NOTICE;"
    },
    {
        "line": 553,
        "fullcodeline": "new_global_options.log_facility=LOG_DAEMON;"
    },
    {
        "line": 557,
        "fullcodeline": "section->log_level=new_service_options.log_level;"
    },
    {
        "line": 569,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"debug\", \"daemon.notice\");"
    },
    {
        "line": 576,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = [facility].level (e.g. daemon.info)\", \"debug\");"
    },
    {
        "line": 586,
        "fullcodeline": "section->option.delayed_lookup=0;"
    },
    {
        "line": 589,
        "fullcodeline": "section->option.delayed_lookup=new_service_options.option.delayed_lookup;"
    },
    {
        "line": 608,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 621,
        "fullcodeline": "section->engine=new_service_options.engine;"
    },
    {
        "line": 628,
        "fullcodeline": "section->engine=engine_get_by_id(arg);"
    },
    {
        "line": 637,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = ID of engine to read the key from\","
    },
    {
        "line": 647,
        "fullcodeline": "section->engine=new_service_options.engine;"
    },
    {
        "line": 669,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = number of engine to read the key from\","
    },
    {
        "line": 679,
        "fullcodeline": "section->exec_name=NULL;"
    },
    {
        "line": 682,
        "fullcodeline": "section->exec_name=str_dup_detached(new_service_options.exec_name);"
    },
    {
        "line": 685,
        "fullcodeline": "str_free(section->exec_name);"
    },
    {
        "line": 691,
        "fullcodeline": "section->exec_name=str_dup_detached(arg);"
    },
    {
        "line": 709,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = file execute local inetd-type program\","
    },
    {
        "line": 717,
        "fullcodeline": "section->exec_args=NULL;"
    },
    {
        "line": 723,
        "fullcodeline": "section->exec_args=arg_dup(new_service_options.exec_args);"
    },
    {
        "line": 730,
        "fullcodeline": "arg_free(section->exec_args);"
    },
    {
        "line": 749,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = arguments for 'exec' (including $0)\","
    },
    {
        "line": 757,
        "fullcodeline": "section->failover=FAILOVER_PRIO;"
    },
    {
        "line": 758,
        "fullcodeline": "section->rr=0;"
    },
    {
        "line": 761,
        "fullcodeline": "section->failover=new_service_options.failover;"
    },
    {
        "line": 762,
        "fullcodeline": "section->rr=new_service_options.rr;"
    },
    {
        "line": 783,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = rr|prio failover strategy\","
    },
    {
        "line": 791,
        "fullcodeline": "section->username=NULL;"
    },
    {
        "line": 794,
        "fullcodeline": "section->username=str_dup_detached(new_service_options.username);"
    },
    {
        "line": 797,
        "fullcodeline": "str_free(section->username);"
    },
    {
        "line": 810,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = username for IDENT (RFC 1413) checking\", \"ident\");"
    },
    {
        "line": 831,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = directory with configuration file snippets\","
    },
    {
        "line": 839,
        "fullcodeline": "section->key=NULL;"
    },
    {
        "line": 842,
        "fullcodeline": "section->key=str_dup_detached(new_service_options.key);"
    },
    {
        "line": 845,
        "fullcodeline": "str_free(section->key);"
    },
    {
        "line": 860,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = certificate private key\", \"key\");"
    },
    {
        "line": 920,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = IP address to be used as source for remote\""
    },
    {
        "line": 928,
        "fullcodeline": "section->log_id=LOG_ID_SEQUENTIAL;"
    },
    {
        "line": 931,
        "fullcodeline": "section->log_id=new_service_options.log_id;"
    },
    {
        "line": 952,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"logId\", \"sequential\");"
    },
    {
        "line": 955,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = connection identifier type\","
    },
    {
        "line": 965,
        "fullcodeline": "section->ocsp_url=NULL;"
    },
    {
        "line": 968,
        "fullcodeline": "section->ocsp_url=str_dup_detached(new_service_options.ocsp_url);"
    },
    {
        "line": 971,
        "fullcodeline": "str_free(section->ocsp_url);"
    },
    {
        "line": 984,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = OCSP responder URL\", \"OCSP\");"
    },
    {
        "line": 1013,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 1022,
        "fullcodeline": "section->ocsp_flags=0;"
    },
    {
        "line": 1025,
        "fullcodeline": "section->ocsp_flags=new_service_options.ocsp_flags;"
    },
    {
        "line": 1044,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = OCSP responder flags\", \"OCSPflag\");"
    },
    {
        "line": 1073,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 1084,
        "fullcodeline": "section->ssl_options_set=0;"
    },
    {
        "line": 1090,
        "fullcodeline": "section->ssl_options_set=new_service_options.ssl_options_set;"
    },
    {
        "line": 1119,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"options\", \"NO_SSLv2\");"
    },
    {
        "line": 1120,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"options\", \"NO_SSLv3\");"
    },
    {
        "line": 1123,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = TLS option to set/reset\", \"options\");"
    },
    {
        "line": 1130,
        "fullcodeline": "section->protocol=NULL;"
    },
    {
        "line": 1133,
        "fullcodeline": "section->protocol=str_dup_detached(new_service_options.protocol);"
    },
    {
        "line": 1136,
        "fullcodeline": "str_free(section->protocol);"
    },
    {
        "line": 1153,
        "fullcodeline": "endpoints+=section->option.protocol_endpoint;"
    },
    {
        "line": 1158,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = protocol to negotiate before TLS initialization\","
    },
    {
        "line": 1160,
        "fullcodeline": "s_log(LOG_NOTICE, \"%25scurrently supported: cifs, connect, imap,\", \"\");"
    },
    {
        "line": 1161,
        "fullcodeline": "s_log(LOG_NOTICE, \"%25s    nntp, pgsql, pop3, proxy, smtp, socks\", \"\");"
    },
    {
        "line": 1168,
        "fullcodeline": "section->protocol_authentication=str_dup_detached(\"basic\");"
    },
    {
        "line": 1171,
        "fullcodeline": "section->protocol_authentication="
    },
    {
        "line": 1175,
        "fullcodeline": "str_free(section->protocol_authentication);"
    },
    {
        "line": 1188,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = authentication type for protocol negotiations\","
    },
    {
        "line": 1196,
        "fullcodeline": "section->protocol_domain=NULL;"
    },
    {
        "line": 1199,
        "fullcodeline": "section->protocol_domain="
    },
    {
        "line": 1203,
        "fullcodeline": "str_free(section->protocol_domain);"
    },
    {
        "line": 1216,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = domain for protocol negotiations\","
    },
    {
        "line": 1224,
        "fullcodeline": "section->protocol_host=NULL;"
    },
    {
        "line": 1227,
        "fullcodeline": "section->protocol_host="
    },
    {
        "line": 1231,
        "fullcodeline": "str_free(section->protocol_host);"
    },
    {
        "line": 1244,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = host:port for protocol negotiations\","
    },
    {
        "line": 1252,
        "fullcodeline": "section->protocol_password=NULL;"
    },
    {
        "line": 1255,
        "fullcodeline": "section->protocol_password="
    },
    {
        "line": 1259,
        "fullcodeline": "str_free(section->protocol_password);"
    },
    {
        "line": 1272,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = password for protocol negotiations\","
    },
    {
        "line": 1280,
        "fullcodeline": "section->protocol_username=NULL;"
    },
    {
        "line": 1283,
        "fullcodeline": "section->protocol_username="
    },
    {
        "line": 1287,
        "fullcodeline": "str_free(section->protocol_username);"
    },
    {
        "line": 1300,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = username for protocol negotiations\","
    },
    {
        "line": 1310,
        "fullcodeline": "section->psk_identity=NULL;"
    },
    {
        "line": 1311,
        "fullcodeline": "section->psk_selected=NULL;"
    },
    {
        "line": 1316,
        "fullcodeline": "section->psk_identity="
    },
    {
        "line": 1320,
        "fullcodeline": "str_free(section->psk_identity);"
    },
    {
        "line": 1332,
        "fullcodeline": "psk_sort(&section->psk_sorted, section->psk_keys);"
    },
    {
        "line": 1351,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = identity for PSK authentication\","
    },
    {
        "line": 1359,
        "fullcodeline": "section->psk_keys=NULL;"
    },
    {
        "line": 1362,
        "fullcodeline": "section->psk_keys=psk_dup(new_service_options.psk_keys);"
    },
    {
        "line": 1365,
        "fullcodeline": "psk_free(section->psk_keys);"
    },
    {
        "line": 1370,
        "fullcodeline": "section->psk_keys=psk_read(arg);"
    },
    {
        "line": 1379,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = secrets for PSK authentication\","
    },
    {
        "line": 1412,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no allocate pseudo terminal for 'exec' option\","
    },
    {
        "line": 1458,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 1489,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no support renegotiation\","
    },
    {
        "line": 1521,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no require client certificate\","
    },
    {
        "line": 1551,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no send TCP RST on error\","
    },
    {
        "line": 1581,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no retry connect+exec section\","
    },
    {
        "line": 1623,
        "fullcodeline": "section->servname=str_dup_detached(\"stunnel\");"
    },
    {
        "line": 1642,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = service name\", \"service\");"
    },
    {
        "line": 1651,
        "fullcodeline": "section->gid=0;"
    },
    {
        "line": 1654,
        "fullcodeline": "section->gid=new_service_options.gid;"
    },
    {
        "line": 1661,
        "fullcodeline": "gr=getgrnam(arg);"
    },
    {
        "line": 1678,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = groupname for setgid()\", \"setgid\");"
    },
    {
        "line": 1687,
        "fullcodeline": "section->uid=0;"
    },
    {
        "line": 1690,
        "fullcodeline": "section->uid=new_service_options.uid;"
    },
    {
        "line": 1697,
        "fullcodeline": "pw=getpwnam(arg);"
    },
    {
        "line": 1714,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = username for setuid()\", \"setuid\");"
    },
    {
        "line": 1722,
        "fullcodeline": "section->session_size=1000L;"
    },
    {
        "line": 1725,
        "fullcodeline": "section->session_size=new_service_options.session_size;"
    },
    {
        "line": 1742,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %ld\", \"sessionCacheSize\", 1000L);"
    },
    {
        "line": 1745,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = session cache size\", \"sessionCacheSize\");"
    },
    {
        "line": 1752,
        "fullcodeline": "section->session_timeout=300L;"
    },
    {
        "line": 1755,
        "fullcodeline": "section->session_timeout=new_service_options.session_timeout;"
    },
    {
        "line": 1772,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %ld seconds\", \"sessionCacheTimeout\", 300L);"
    },
    {
        "line": 1775,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = session cache timeout (in seconds)\","
    },
    {
        "line": 1785,
        "fullcodeline": "section->sessiond_addr.in.sin_family=AF_INET;"
    },
    {
        "line": 1811,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = [host:]port use sessiond at host:port\","
    },
    {
        "line": 1820,
        "fullcodeline": "section->servername_list_head=NULL;"
    },
    {
        "line": 1821,
        "fullcodeline": "section->servername_list_tail=NULL;"
    },
    {
        "line": 1824,
        "fullcodeline": "section->sni="
    },
    {
        "line": 1828,
        "fullcodeline": "str_free(section->sni);"
    },
    {
        "line": 1829,
        "fullcodeline": "sni_free(section);"
    },
    {
        "line": 1849,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = master_service:host_name for an SNI virtual service\","
    },
    {
        "line": 1858,
        "fullcodeline": "section->sock_opts=socket_options_init();"
    },
    {
        "line": 1861,
        "fullcodeline": "section->sock_opts=socket_options_dup(new_service_options.sock_opts);"
    },
    {
        "line": 1864,
        "fullcodeline": "socket_options_free(section->sock_opts);"
    },
    {
        "line": 1877,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = a|l|r:option=value[:value]\", \"socket\");"
    },
    {
        "line": 1878,
        "fullcodeline": "s_log(LOG_NOTICE, \"%25sset an option on accept/local/remote socket\", \"\");"
    },
    {
        "line": 1986,
        "fullcodeline": "tls_methods_set(section, NULL);"
    },
    {
        "line": 1989,
        "fullcodeline": "section->client_method=new_service_options.client_method;"
    },
    {
        "line": 1990,
        "fullcodeline": "section->server_method=new_service_options.server_method;"
    },
    {
        "line": 2008,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = all\""
    },
    {
        "line": 2023,
        "fullcodeline": "section->stack_size=DEFAULT_STACK_SIZE;"
    },
    {
        "line": 2026,
        "fullcodeline": "section->stack_size=new_service_options.stack_size;"
    },
    {
        "line": 2043,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d bytes\", \"stack\", DEFAULT_STACK_SIZE);"
    },
    {
        "line": 2046,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = thread stack size (in bytes)\", \"stack\");"
    },
    {
        "line": 2132,
        "fullcodeline": "section->timeout_busy=300; /* 5 minutes */"
    },
    {
        "line": 2135,
        "fullcodeline": "section->timeout_busy=new_service_options.timeout_busy;"
    },
    {
        "line": 2152,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d seconds\", \"TIMEOUTbusy\", 300);"
    },
    {
        "line": 2155,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = seconds to wait for expected data\", \"TIMEOUTbusy\");"
    },
    {
        "line": 2162,
        "fullcodeline": "section->timeout_close=60; /* 1 minute */"
    },
    {
        "line": 2165,
        "fullcodeline": "section->timeout_close=new_service_options.timeout_close;"
    },
    {
        "line": 2182,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d seconds\", \"TIMEOUTclose\", 60);"
    },
    {
        "line": 2185,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = seconds to wait for close_notify\","
    },
    {
        "line": 2193,
        "fullcodeline": "section->timeout_connect=10; /* 10 seconds */"
    },
    {
        "line": 2196,
        "fullcodeline": "section->timeout_connect=new_service_options.timeout_connect;"
    },
    {
        "line": 2213,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d seconds\", \"TIMEOUTconnect\", 10);"
    },
    {
        "line": 2216,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = seconds to connect remote host\", \"TIMEOUTconnect\");"
    },
    {
        "line": 2223,
        "fullcodeline": "section->timeout_idle=43200; /* 12 hours */"
    },
    {
        "line": 2226,
        "fullcodeline": "section->timeout_idle=new_service_options.timeout_idle;"
    },
    {
        "line": 2243,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d seconds\", \"TIMEOUTidle\", 43200);"
    },
    {
        "line": 2246,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = seconds to keep an idle connection\", \"TIMEOUTidle\");"
    },
    {
        "line": 2288,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 2325,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = none\", \"verify\");"
    },
    {
        "line": 2328,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 2361,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no verify certificate chain\","
    },
    {
        "line": 2406,
        "fullcodeline": "str_free(section->chain);"
    },
    {
        "line": 2411,
        "fullcodeline": "str_free(section->servname);"
    },
    {
        "line": 14,
        "fullcodeline": "if(section==&service_options)"
    },
    {
        "line": 50,
        "fullcodeline": "if(strcasecmp(opt, \"accept\"))"
    },
    {
        "line": 89,
        "fullcodeline": "if(strcasecmp(opt, \"CApath\"))"
    },
    {
        "line": 126,
        "fullcodeline": "if(strcasecmp(opt, \"CAfile\"))"
    },
    {
        "line": 160,
        "fullcodeline": "if(strcasecmp(opt, \"cert\"))"
    },
    {
        "line": 163,
        "fullcodeline": "section->cert=str_dup_detached(arg);"
    },
    {
        "line": 287,
        "fullcodeline": "if(strcasecmp(opt, \"ciphers\"))"
    },
    {
        "line": 290,
        "fullcodeline": "section->cipher_list=str_dup_detached(arg);"
    },
    {
        "line": 293,
        "fullcodeline": "if(!section->cipher_list) {"
    },
    {
        "line": 332,
        "fullcodeline": "if(strcasecmp(opt, \"ciphersuites\"))"
    },
    {
        "line": 335,
        "fullcodeline": "section->ciphersuites=str_dup_detached(arg);"
    },
    {
        "line": 338,
        "fullcodeline": "if(!section->ciphersuites) {"
    },
    {
        "line": 364,
        "fullcodeline": "if(strcasecmp(opt, \"client\"))"
    },
    {
        "line": 431,
        "fullcodeline": "if(strcasecmp(opt, \"connect\"))"
    },
    {
        "line": 471,
        "fullcodeline": "if(strcasecmp(opt, \"CRLpath\"))"
    },
    {
        "line": 500,
        "fullcodeline": "if(strcasecmp(opt, \"CRLfile\"))"
    },
    {
        "line": 534,
        "fullcodeline": "section->curves=str_dup_detached(arg);"
    },
    {
        "line": 562,
        "fullcodeline": "if(strcasecmp(opt, \"debug\"))"
    },
    {
        "line": 564,
        "fullcodeline": "return parse_debug_level(arg, section);"
    },
    {
        "line": 594,
        "fullcodeline": "if(strcasecmp(opt, \"delay\"))"
    },
    {
        "line": 626,
        "fullcodeline": "if(strcasecmp(opt, \"engineId\"))"
    },
    {
        "line": 652,
        "fullcodeline": "if(strcasecmp(opt, \"engineNum\"))"
    },
    {
        "line": 656,
        "fullcodeline": "int tmp_int=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 659,
        "fullcodeline": "section->engine=engine_get_by_num(tmp_int-1);"
    },
    {
        "line": 688,
        "fullcodeline": "if(strcasecmp(opt, \"exec\"))"
    },
    {
        "line": 734,
        "fullcodeline": "if(strcasecmp(opt, \"execArgs\"))"
    },
    {
        "line": 741,
        "fullcodeline": "section->exec_args=arg_alloc(arg);"
    },
    {
        "line": 767,
        "fullcodeline": "if(strcasecmp(opt, \"failover\"))"
    },
    {
        "line": 800,
        "fullcodeline": "if(strcasecmp(opt, \"ident\"))"
    },
    {
        "line": 803,
        "fullcodeline": "section->username=str_dup_detached(arg);"
    },
    {
        "line": 823,
        "fullcodeline": "if(strcasecmp(opt, \"include\"))"
    },
    {
        "line": 825,
        "fullcodeline": "return include_config(arg, section_ptr);"
    },
    {
        "line": 848,
        "fullcodeline": "if(strcasecmp(opt, \"key\"))"
    },
    {
        "line": 851,
        "fullcodeline": "section->key=str_dup_detached(arg);"
    },
    {
        "line": 854,
        "fullcodeline": "if(section->cert && !section->key)"
    },
    {
        "line": 909,
        "fullcodeline": "if(strcasecmp(opt, \"local\"))"
    },
    {
        "line": 936,
        "fullcodeline": "if(strcasecmp(opt, \"logId\"))"
    },
    {
        "line": 974,
        "fullcodeline": "if(strcasecmp(opt, \"ocsp\"))"
    },
    {
        "line": 977,
        "fullcodeline": "section->ocsp_url=str_dup_detached(arg);"
    },
    {
        "line": 999,
        "fullcodeline": "if(strcasecmp(opt, \"OCSPaia\"))"
    },
    {
        "line": 1030,
        "fullcodeline": "if(strcasecmp(opt, \"OCSPflag\"))"
    },
    {
        "line": 1033,
        "fullcodeline": "unsigned long tmp_ulong=parse_ocsp_flag(arg);"
    },
    {
        "line": 1059,
        "fullcodeline": "if(strcasecmp(opt, \"OCSPnonce\"))"
    },
    {
        "line": 1098,
        "fullcodeline": "if(strcasecmp(opt, \"options\"))"
    },
    {
        "line": 1110,
        "fullcodeline": "long unsigned tmp=parse_ssl_option(arg);"
    },
    {
        "line": 1139,
        "fullcodeline": "if(strcasecmp(opt, \"protocol\"))"
    },
    {
        "line": 1142,
        "fullcodeline": "section->protocol=str_dup_detached(arg);"
    },
    {
        "line": 1149,
        "fullcodeline": "char *tmp_str=protocol(NULL, section, PROTOCOL_CHECK);"
    },
    {
        "line": 1172,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_authentication);"
    },
    {
        "line": 1178,
        "fullcodeline": "if(strcasecmp(opt, \"protocolAuthentication\"))"
    },
    {
        "line": 1181,
        "fullcodeline": "section->protocol_authentication=str_dup_detached(arg);"
    },
    {
        "line": 1200,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_domain);"
    },
    {
        "line": 1206,
        "fullcodeline": "if(strcasecmp(opt, \"protocolDomain\"))"
    },
    {
        "line": 1209,
        "fullcodeline": "section->protocol_domain=str_dup_detached(arg);"
    },
    {
        "line": 1228,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_host);"
    },
    {
        "line": 1234,
        "fullcodeline": "if(strcasecmp(opt, \"protocolHost\"))"
    },
    {
        "line": 1237,
        "fullcodeline": "section->protocol_host=str_dup_detached(arg);"
    },
    {
        "line": 1256,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_password);"
    },
    {
        "line": 1262,
        "fullcodeline": "if(strcasecmp(opt, \"protocolPassword\"))"
    },
    {
        "line": 1265,
        "fullcodeline": "section->protocol_password=str_dup_detached(arg);"
    },
    {
        "line": 1284,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_username);"
    },
    {
        "line": 1290,
        "fullcodeline": "if(strcasecmp(opt, \"protocolUsername\"))"
    },
    {
        "line": 1293,
        "fullcodeline": "section->protocol_username=str_dup_detached(arg);"
    },
    {
        "line": 1317,
        "fullcodeline": "str_dup_detached(new_service_options.psk_identity);"
    },
    {
        "line": 1324,
        "fullcodeline": "if(strcasecmp(opt, \"PSKidentity\"))"
    },
    {
        "line": 1327,
        "fullcodeline": "section->psk_identity=str_dup_detached(arg);"
    },
    {
        "line": 1330,
        "fullcodeline": "if(!section->psk_keys) /* PSK not configured */"
    },
    {
        "line": 1368,
        "fullcodeline": "if(strcasecmp(opt, \"PSKsecrets\"))"
    },
    {
        "line": 1398,
        "fullcodeline": "if(strcasecmp(opt, \"pty\"))"
    },
    {
        "line": 1433,
        "fullcodeline": "if(strcasecmp(opt, \"redirect\"))"
    },
    {
        "line": 1475,
        "fullcodeline": "if(strcasecmp(opt, \"renegotiation\"))"
    },
    {
        "line": 1505,
        "fullcodeline": "if(strcasecmp(opt, \"requireCert\"))"
    },
    {
        "line": 1537,
        "fullcodeline": "if(strcasecmp(opt, \"reset\"))"
    },
    {
        "line": 1567,
        "fullcodeline": "if(strcasecmp(opt, \"retry\"))"
    },
    {
        "line": 1632,
        "fullcodeline": "if(strcasecmp(opt, \"service\"))"
    },
    {
        "line": 1635,
        "fullcodeline": "section->servname=str_dup_detached(arg);"
    },
    {
        "line": 1659,
        "fullcodeline": "if(strcasecmp(opt, \"setgid\"))"
    },
    {
        "line": 1695,
        "fullcodeline": "if(strcasecmp(opt, \"setuid\"))"
    },
    {
        "line": 1730,
        "fullcodeline": "if(strcasecmp(opt, \"sessionCacheSize\"))"
    },
    {
        "line": 1795,
        "fullcodeline": "if(strcasecmp(opt, \"sessiond\"))"
    },
    {
        "line": 1825,
        "fullcodeline": "str_dup_detached(new_service_options.sni);"
    },
    {
        "line": 1832,
        "fullcodeline": "if(strcasecmp(opt, \"sni\"))"
    },
    {
        "line": 1835,
        "fullcodeline": "section->sni=str_dup_detached(arg);"
    },
    {
        "line": 1839,
        "fullcodeline": "char *tmp_str=sni_init(section);"
    },
    {
        "line": 1843,
        "fullcodeline": "if(!section->option.client && section->sni)"
    },
    {
        "line": 1867,
        "fullcodeline": "if(strcasecmp(opt, \"socket\"))"
    },
    {
        "line": 1995,
        "fullcodeline": "if(strcasecmp(opt, \"sslVersion\"))"
    },
    {
        "line": 1997,
        "fullcodeline": "return tls_methods_set(section, arg);"
    },
    {
        "line": 2000,
        "fullcodeline": "char *tmp_str=tls_methods_check(section);"
    },
    {
        "line": 2031,
        "fullcodeline": "if(strcasecmp(opt, \"stack\"))"
    },
    {
        "line": 2140,
        "fullcodeline": "if(strcasecmp(opt, \"TIMEOUTbusy\"))"
    },
    {
        "line": 2170,
        "fullcodeline": "if(strcasecmp(opt, \"TIMEOUTclose\"))"
    },
    {
        "line": 2201,
        "fullcodeline": "if(strcasecmp(opt, \"TIMEOUTconnect\"))"
    },
    {
        "line": 2231,
        "fullcodeline": "if(strcasecmp(opt, \"TIMEOUTidle\"))"
    },
    {
        "line": 2264,
        "fullcodeline": "if(strcasecmp(opt, \"transparent\"))"
    },
    {
        "line": 2306,
        "fullcodeline": "if(strcasecmp(opt, \"verify\"))"
    },
    {
        "line": 2310,
        "fullcodeline": "int tmp_int=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2344,
        "fullcodeline": "if(strcasecmp(opt, \"verifyChain\"))"
    },
    {
        "line": 2420,
        "fullcodeline": "if(section!=&new_service_options) { /* daemon mode checks */"
    },
    {
        "line": 15,
        "fullcodeline": "s_log(LOG_ERR, \"INTERNAL ERROR: Initializing deployed section defaults\");"
    },
    {
        "line": 20,
        "fullcodeline": "} else if(cmd==CMD_FREE) {"
    },
    {
        "line": 60,
        "fullcodeline": "section->local_fd=str_alloc_detached(section->local_addr.num*sizeof(SOCKET));"
    },
    {
        "line": 63,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 174,
        "fullcodeline": "if(!section->option.client && !section->cert)"
    },
    {
        "line": 301,
        "fullcodeline": "section->cipher_list=str_dup_detached(stunnel_cipher_list);"
    },
    {
        "line": 341,
        "fullcodeline": "section->ciphersuites=str_dup_detached(stunnel_ciphersuites);"
    },
    {
        "line": 366,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 448,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 531,
        "fullcodeline": "if(strcasecmp(opt, \"curves\") && strcasecmp(opt, \"curve\"))"
    },
    {
        "line": 596,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 704,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 769,
        "fullcodeline": "if(!strcasecmp(arg, \"rr\"))"
    },
    {
        "line": 770,
        "fullcodeline": "section->failover=FAILOVER_RR;"
    },
    {
        "line": 778,
        "fullcodeline": "section->failover=FAILOVER_PRIO;"
    },
    {
        "line": 855,
        "fullcodeline": "section->key=str_dup_detached(section->cert);"
    },
    {
        "line": 911,
        "fullcodeline": "if(!hostport2addr(&section->source_addr, arg, \"0\", 1))"
    },
    {
        "line": 938,
        "fullcodeline": "if(!strcasecmp(arg, \"sequential\"))"
    },
    {
        "line": 1001,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1034,
        "fullcodeline": "if(!tmp_ulong)"
    },
    {
        "line": 1061,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1111,
        "fullcodeline": "if(tmp==INVALID_SSL_OPTION)"
    },
    {
        "line": 1400,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1477,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1507,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 1539,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1569,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1734,
        "fullcodeline": "section->session_size=strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 1760,
        "fullcodeline": "if(strcasecmp(opt, \"sessionCacheTimeout\") && strcasecmp(opt, \"session\"))"
    },
    {
        "line": 1764,
        "fullcodeline": "section->session_timeout=strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 1803,
        "fullcodeline": "if(!name2addr(&section->sessiond_addr, arg, 0))"
    },
    {
        "line": 1844,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 2266,
        "fullcodeline": "if(!strcasecmp(arg, \"none\") || !strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 2283,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 2314,
        "fullcodeline": "section->option.require_cert=(tmp_int>=2);"
    },
    {
        "line": 2315,
        "fullcodeline": "section->option.verify_chain=(tmp_int>=1 && tmp_int<=3);"
    },
    {
        "line": 2316,
        "fullcodeline": "section->option.verify_peer=(tmp_int>=3);"
    },
    {
        "line": 2320,
        "fullcodeline": "if((section->option.verify_chain || section->option.verify_peer) &&"
    },
    {
        "line": 2321,
        "fullcodeline": "!section->ca_file && !section->ca_dir)"
    },
    {
        "line": 2346,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 2379,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 2408,
        "fullcodeline": "SSL_SESSION_free(section->session);"
    },
    {
        "line": 2410,
        "fullcodeline": "SSL_CTX_free(section->ctx);"
    },
    {
        "line": 2412,
        "fullcodeline": "if(section==&service_options || section==&new_service_options)"
    },
    {
        "line": 61,
        "fullcodeline": "for(i=0; i<section->local_addr.num; ++i)"
    },
    {
        "line": 62,
        "fullcodeline": "section->local_fd[i]=INVALID_SOCKET;"
    },
    {
        "line": 93,
        "fullcodeline": "section->ca_dir=str_dup_detached(arg);"
    },
    {
        "line": 130,
        "fullcodeline": "section->ca_file=str_dup_detached(arg);"
    },
    {
        "line": 475,
        "fullcodeline": "section->crl_dir=str_dup_detached(arg);"
    },
    {
        "line": 504,
        "fullcodeline": "section->crl_file=str_dup_detached(arg);"
    },
    {
        "line": 657,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 696,
        "fullcodeline": "section->exec_args=str_alloc_detached(2*sizeof(char *));"
    },
    {
        "line": 697,
        "fullcodeline": "section->exec_args[0]=str_dup_detached(section->exec_name);"
    },
    {
        "line": 1668,
        "fullcodeline": "section->gid=(gid_t)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 1669,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 1704,
        "fullcodeline": "section->uid=(uid_t)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 1705,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 1735,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 1765,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2035,
        "fullcodeline": "section->stack_size=(size_t)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2036,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2144,
        "fullcodeline": "section->timeout_busy=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2145,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2174,
        "fullcodeline": "section->timeout_close=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2175,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2205,
        "fullcodeline": "section->timeout_connect=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2206,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2235,
        "fullcodeline": "section->timeout_idle=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2236,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2311,
        "fullcodeline": "if(tmp_str==arg || *tmp_str || tmp_int<0 || tmp_int>4)"
    },
    {
        "line": 2413,
        "fullcodeline": "memset(section, 0, sizeof(SERVICE_OPTIONS));"
    },
    {
        "line": 16,
        "fullcodeline": "else if(section==&new_service_options)"
    },
    {
        "line": 21,
        "fullcodeline": "if(section==&service_options)"
    },
    {
        "line": 58,
        "fullcodeline": "if(!addrlist_resolve(&section->local_addr))"
    },
    {
        "line": 437,
        "fullcodeline": "if(!section->option.delayed_lookup &&"
    },
    {
        "line": 438,
        "fullcodeline": "!addrlist_resolve(&section->connect_addr)) {"
    },
    {
        "line": 439,
        "fullcodeline": "s_log(LOG_INFO,"
    },
    {
        "line": 441,
        "fullcodeline": "section->connect_addr.num=0;"
    },
    {
        "line": 442,
        "fullcodeline": "section->redirect_addr.num=0;"
    },
    {
        "line": 443,
        "fullcodeline": "section->option.delayed_lookup=1;"
    },
    {
        "line": 446,
        "fullcodeline": "section->connect_session="
    },
    {
        "line": 1335,
        "fullcodeline": "section->psk_selected="
    },
    {
        "line": 1443,
        "fullcodeline": "if(!section->option.delayed_lookup &&"
    },
    {
        "line": 1444,
        "fullcodeline": "!addrlist_resolve(&section->redirect_addr)) {"
    },
    {
        "line": 1451,
        "fullcodeline": "if(!section->option.verify_chain && !section->option.verify_peer)"
    },
    {
        "line": 17,
        "fullcodeline": "s_log(LOG_INFO, \"Initializing inetd mode configuration\");"
    },
    {
        "line": 22,
        "fullcodeline": "s_log(LOG_DEBUG, \"Deallocating deployed section defaults\");"
    },
    {
        "line": 27,
        "fullcodeline": "} else if(cmd==CMD_PRINT_DEFAULTS || cmd==CMD_PRINT_HELP) {"
    },
    {
        "line": 368,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 447,
        "fullcodeline": "str_alloc_detached(section->connect_addr.num*sizeof(SSL_SESSION *));"
    },
    {
        "line": 598,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 771,
        "fullcodeline": "else if(!strcasecmp(arg, \"prio\"))"
    },
    {
        "line": 940,
        "fullcodeline": "else if(!strcasecmp(arg, \"unique\"))"
    },
    {
        "line": 941,
        "fullcodeline": "section->log_id=LOG_ID_UNIQUE;"
    },
    {
        "line": 1003,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1063,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1336,
        "fullcodeline": "psk_find(&section->psk_sorted, section->psk_identity);"
    },
    {
        "line": 1337,
        "fullcodeline": "if(!section->psk_selected)"
    },
    {
        "line": 1340,
        "fullcodeline": "section->psk_selected=section->psk_keys;"
    },
    {
        "line": 1344,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 1402,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1479,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1510,
        "fullcodeline": "} else if(!strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 1541,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1571,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 2269,
        "fullcodeline": "} else if(!strcasecmp(arg, \"source\") || !strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 2350,
        "fullcodeline": "} else if(!strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 2383,
        "fullcodeline": "} else if(!strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 19,
        "fullcodeline": "s_log(LOG_INFO, \"Initializing service [%s]\", section->servname);"
    },
    {
        "line": 28,
        "fullcodeline": "s_log(LOG_NOTICE, \" \");"
    },
    {
        "line": 29,
        "fullcodeline": "s_log(LOG_NOTICE, \"Service-level options:\");"
    },
    {
        "line": 23,
        "fullcodeline": "else if(section==&new_service_options)"
    },
    {
        "line": 24,
        "fullcodeline": "s_log(LOG_DEBUG, \"Deallocating temporary section defaults\");"
    },
    {
        "line": 942,
        "fullcodeline": "else if(!strcasecmp(arg, \"thread\"))"
    },
    {
        "line": 943,
        "fullcodeline": "section->log_id=LOG_ID_THREAD;"
    },
    {
        "line": 2272,
        "fullcodeline": "} else if(!strcasecmp(arg, \"destination\")) {"
    },
    {
        "line": 26,
        "fullcodeline": "s_log(LOG_DEBUG, \"Deallocating section [%s]\", section->servname);"
    },
    {
        "line": 944,
        "fullcodeline": "else if(!strcasecmp(arg, \"process\"))"
    },
    {
        "line": 945,
        "fullcodeline": "section->log_id=LOG_ID_PROCESS;"
    },
    {
        "line": 2275,
        "fullcodeline": "} else if(!strcasecmp(arg, \"both\")) {"
    }
]