[
    {
        "line": 4,
        "fullcodeline": "int endpoints=0;"
    },
    {
        "line": 10,
        "fullcodeline": "section=section_ptr ? *section_ptr : NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "if(cmd==CMD_SET_DEFAULTS || cmd==CMD_SET_COPY) {"
    },
    {
        "line": 13,
        "fullcodeline": "section->ref=1;"
    },
    {
        "line": 28,
        "fullcodeline": "section->local_fd=NULL;"
    },
    {
        "line": 32,
        "fullcodeline": "section->local_fd=NULL;"
    },
    {
        "line": 39,
        "fullcodeline": "str_free(section->local_fd);"
    },
    {
        "line": 44,
        "fullcodeline": "section->option.accept=1;"
    },
    {
        "line": 45,
        "fullcodeline": "name_list_append(&section->local_addr.names, arg);"
    },
    {
        "line": 61,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = [host:]port accept connections on specified host:port\","
    },
    {
        "line": 72,
        "fullcodeline": "section->ca_dir=NULL;"
    },
    {
        "line": 75,
        "fullcodeline": "section->ca_dir=str_dup_detached(new_service_options.ca_dir);"
    },
    {
        "line": 78,
        "fullcodeline": "str_free(section->ca_dir);"
    },
    {
        "line": 98,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = CA certificate directory for 'verify' option\","
    },
    {
        "line": 109,
        "fullcodeline": "section->ca_file=NULL;"
    },
    {
        "line": 112,
        "fullcodeline": "section->ca_file=str_dup_detached(new_service_options.ca_file);"
    },
    {
        "line": 115,
        "fullcodeline": "str_free(section->ca_file);"
    },
    {
        "line": 135,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = CA certificate file for 'verify' option\","
    },
    {
        "line": 143,
        "fullcodeline": "section->cert=NULL;"
    },
    {
        "line": 146,
        "fullcodeline": "section->cert=str_dup_detached(new_service_options.cert);"
    },
    {
        "line": 149,
        "fullcodeline": "str_free(section->cert);"
    },
    {
        "line": 172,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = certificate chain\", \"cert\");"
    },
    {
        "line": 270,
        "fullcodeline": "section->cipher_list=NULL;"
    },
    {
        "line": 273,
        "fullcodeline": "section->cipher_list=str_dup_detached(new_service_options.cipher_list);"
    },
    {
        "line": 276,
        "fullcodeline": "str_free(section->cipher_list);"
    },
    {
        "line": 303,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"ciphers\", stunnel_cipher_list);"
    },
    {
        "line": 307,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = permitted ciphers for TLS 1.2 or older\", \"ciphers\");"
    },
    {
        "line": 315,
        "fullcodeline": "section->ciphersuites=NULL;"
    },
    {
        "line": 318,
        "fullcodeline": "section->ciphersuites=str_dup_detached(new_service_options.ciphersuites);"
    },
    {
        "line": 321,
        "fullcodeline": "str_free(section->ciphersuites);"
    },
    {
        "line": 337,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s %s\", \"ciphersuites\", stunnel_ciphersuites, \"(with TLSv1.3)\");"
    },
    {
        "line": 340,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = permitted ciphersuites for TLS 1.3\", \"ciphersuites\");"
    },
    {
        "line": 370,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no client mode (remote service uses TLS)\","
    },
    {
        "line": 409,
        "fullcodeline": "section->connect_session=NULL;"
    },
    {
        "line": 413,
        "fullcodeline": "section->connect_session=NULL;"
    },
    {
        "line": 420,
        "fullcodeline": "str_free(section->connect_session);"
    },
    {
        "line": 446,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = [host:]port to connect\","
    },
    {
        "line": 454,
        "fullcodeline": "section->crl_dir=NULL;"
    },
    {
        "line": 457,
        "fullcodeline": "section->crl_dir=str_dup_detached(new_service_options.crl_dir);"
    },
    {
        "line": 460,
        "fullcodeline": "str_free(section->crl_dir);"
    },
    {
        "line": 476,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = CRL directory\", \"CRLpath\");"
    },
    {
        "line": 483,
        "fullcodeline": "section->crl_file=NULL;"
    },
    {
        "line": 486,
        "fullcodeline": "section->crl_file=str_dup_detached(new_service_options.crl_file);"
    },
    {
        "line": 489,
        "fullcodeline": "str_free(section->crl_file);"
    },
    {
        "line": 505,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = CRL file\", \"CRLfile\");"
    },
    {
        "line": 514,
        "fullcodeline": "section->curves=str_dup_detached(DEFAULT_CURVES);"
    },
    {
        "line": 517,
        "fullcodeline": "section->curves=str_dup_detached(new_service_options.curves);"
    },
    {
        "line": 520,
        "fullcodeline": "str_free(section->curves);"
    },
    {
        "line": 531,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"curves\", DEFAULT_CURVES);"
    },
    {
        "line": 534,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = ECDH curve names\", \"curves\");"
    },
    {
        "line": 543,
        "fullcodeline": "section->log_level=LOG_NOTICE;"
    },
    {
        "line": 545,
        "fullcodeline": "new_global_options.log_facility=LOG_DAEMON;"
    },
    {
        "line": 549,
        "fullcodeline": "section->log_level=new_service_options.log_level;"
    },
    {
        "line": 561,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"debug\", \"daemon.notice\");"
    },
    {
        "line": 568,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = [facility].level (e.g. daemon.info)\", \"debug\");"
    },
    {
        "line": 578,
        "fullcodeline": "section->option.delayed_lookup=0;"
    },
    {
        "line": 581,
        "fullcodeline": "section->option.delayed_lookup=new_service_options.option.delayed_lookup;"
    },
    {
        "line": 600,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 613,
        "fullcodeline": "section->engine=new_service_options.engine;"
    },
    {
        "line": 620,
        "fullcodeline": "section->engine=engine_get_by_id(arg);"
    },
    {
        "line": 629,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = ID of engine to read the key from\","
    },
    {
        "line": 639,
        "fullcodeline": "section->engine=new_service_options.engine;"
    },
    {
        "line": 661,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = number of engine to read the key from\","
    },
    {
        "line": 671,
        "fullcodeline": "section->exec_name=NULL;"
    },
    {
        "line": 674,
        "fullcodeline": "section->exec_name=str_dup_detached(new_service_options.exec_name);"
    },
    {
        "line": 677,
        "fullcodeline": "str_free(section->exec_name);"
    },
    {
        "line": 683,
        "fullcodeline": "section->exec_name=str_dup_detached(arg);"
    },
    {
        "line": 701,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = file execute local inetd-type program\","
    },
    {
        "line": 709,
        "fullcodeline": "section->exec_args=NULL;"
    },
    {
        "line": 715,
        "fullcodeline": "section->exec_args=arg_dup(new_service_options.exec_args);"
    },
    {
        "line": 722,
        "fullcodeline": "arg_free(section->exec_args);"
    },
    {
        "line": 741,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = arguments for 'exec' (including $0)\","
    },
    {
        "line": 749,
        "fullcodeline": "section->failover=FAILOVER_PRIO;"
    },
    {
        "line": 750,
        "fullcodeline": "section->rr=0;"
    },
    {
        "line": 753,
        "fullcodeline": "section->failover=new_service_options.failover;"
    },
    {
        "line": 754,
        "fullcodeline": "section->rr=new_service_options.rr;"
    },
    {
        "line": 775,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = rr|prio failover strategy\","
    },
    {
        "line": 783,
        "fullcodeline": "section->username=NULL;"
    },
    {
        "line": 786,
        "fullcodeline": "section->username=str_dup_detached(new_service_options.username);"
    },
    {
        "line": 789,
        "fullcodeline": "str_free(section->username);"
    },
    {
        "line": 802,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = username for IDENT (RFC 1413) checking\", \"ident\");"
    },
    {
        "line": 823,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = directory with configuration file snippets\","
    },
    {
        "line": 831,
        "fullcodeline": "section->key=NULL;"
    },
    {
        "line": 834,
        "fullcodeline": "section->key=str_dup_detached(new_service_options.key);"
    },
    {
        "line": 837,
        "fullcodeline": "str_free(section->key);"
    },
    {
        "line": 852,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = certificate private key\", \"key\");"
    },
    {
        "line": 912,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = IP address to be used as source for remote\""
    },
    {
        "line": 920,
        "fullcodeline": "section->log_id=LOG_ID_SEQUENTIAL;"
    },
    {
        "line": 923,
        "fullcodeline": "section->log_id=new_service_options.log_id;"
    },
    {
        "line": 944,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"logId\", \"sequential\");"
    },
    {
        "line": 947,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = connection identifier type\","
    },
    {
        "line": 957,
        "fullcodeline": "section->ocsp_url=NULL;"
    },
    {
        "line": 960,
        "fullcodeline": "section->ocsp_url=str_dup_detached(new_service_options.ocsp_url);"
    },
    {
        "line": 963,
        "fullcodeline": "str_free(section->ocsp_url);"
    },
    {
        "line": 976,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = OCSP responder URL\", \"OCSP\");"
    },
    {
        "line": 1005,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 1014,
        "fullcodeline": "section->ocsp_flags=0;"
    },
    {
        "line": 1017,
        "fullcodeline": "section->ocsp_flags=new_service_options.ocsp_flags;"
    },
    {
        "line": 1036,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = OCSP responder flags\", \"OCSPflag\");"
    },
    {
        "line": 1065,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 1076,
        "fullcodeline": "section->ssl_options_set=0;"
    },
    {
        "line": 1082,
        "fullcodeline": "section->ssl_options_set=new_service_options.ssl_options_set;"
    },
    {
        "line": 1111,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"options\", \"NO_SSLv2\");"
    },
    {
        "line": 1112,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %s\", \"options\", \"NO_SSLv3\");"
    },
    {
        "line": 1115,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = TLS option to set/reset\", \"options\");"
    },
    {
        "line": 1122,
        "fullcodeline": "section->protocol=NULL;"
    },
    {
        "line": 1125,
        "fullcodeline": "section->protocol=str_dup_detached(new_service_options.protocol);"
    },
    {
        "line": 1128,
        "fullcodeline": "str_free(section->protocol);"
    },
    {
        "line": 1145,
        "fullcodeline": "endpoints+=section->option.protocol_endpoint;"
    },
    {
        "line": 1150,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = protocol to negotiate before TLS initialization\","
    },
    {
        "line": 1152,
        "fullcodeline": "s_log(LOG_NOTICE, \"%25scurrently supported: cifs, connect, imap,\", \"\");"
    },
    {
        "line": 1153,
        "fullcodeline": "s_log(LOG_NOTICE, \"%25s    nntp, pgsql, pop3, proxy, smtp, socks\", \"\");"
    },
    {
        "line": 1160,
        "fullcodeline": "section->protocol_authentication=str_dup_detached(\"basic\");"
    },
    {
        "line": 1163,
        "fullcodeline": "section->protocol_authentication="
    },
    {
        "line": 1167,
        "fullcodeline": "str_free(section->protocol_authentication);"
    },
    {
        "line": 1180,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = authentication type for protocol negotiations\","
    },
    {
        "line": 1188,
        "fullcodeline": "section->protocol_domain=NULL;"
    },
    {
        "line": 1191,
        "fullcodeline": "section->protocol_domain="
    },
    {
        "line": 1195,
        "fullcodeline": "str_free(section->protocol_domain);"
    },
    {
        "line": 1208,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = domain for protocol negotiations\","
    },
    {
        "line": 1216,
        "fullcodeline": "section->protocol_host=NULL;"
    },
    {
        "line": 1219,
        "fullcodeline": "section->protocol_host="
    },
    {
        "line": 1223,
        "fullcodeline": "str_free(section->protocol_host);"
    },
    {
        "line": 1236,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = host:port for protocol negotiations\","
    },
    {
        "line": 1244,
        "fullcodeline": "section->protocol_password=NULL;"
    },
    {
        "line": 1247,
        "fullcodeline": "section->protocol_password="
    },
    {
        "line": 1251,
        "fullcodeline": "str_free(section->protocol_password);"
    },
    {
        "line": 1264,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = password for protocol negotiations\","
    },
    {
        "line": 1272,
        "fullcodeline": "section->protocol_username=NULL;"
    },
    {
        "line": 1275,
        "fullcodeline": "section->protocol_username="
    },
    {
        "line": 1279,
        "fullcodeline": "str_free(section->protocol_username);"
    },
    {
        "line": 1292,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = username for protocol negotiations\","
    },
    {
        "line": 1302,
        "fullcodeline": "section->psk_identity=NULL;"
    },
    {
        "line": 1303,
        "fullcodeline": "section->psk_selected=NULL;"
    },
    {
        "line": 1308,
        "fullcodeline": "section->psk_identity="
    },
    {
        "line": 1312,
        "fullcodeline": "str_free(section->psk_identity);"
    },
    {
        "line": 1324,
        "fullcodeline": "psk_sort(&section->psk_sorted, section->psk_keys);"
    },
    {
        "line": 1343,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = identity for PSK authentication\","
    },
    {
        "line": 1351,
        "fullcodeline": "section->psk_keys=NULL;"
    },
    {
        "line": 1354,
        "fullcodeline": "section->psk_keys=psk_dup(new_service_options.psk_keys);"
    },
    {
        "line": 1357,
        "fullcodeline": "psk_free(section->psk_keys);"
    },
    {
        "line": 1362,
        "fullcodeline": "section->psk_keys=psk_read(arg);"
    },
    {
        "line": 1371,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = secrets for PSK authentication\","
    },
    {
        "line": 1404,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no allocate pseudo terminal for 'exec' option\","
    },
    {
        "line": 1450,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 1481,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no support renegotiation\","
    },
    {
        "line": 1513,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no require client certificate\","
    },
    {
        "line": 1543,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no send TCP RST on error\","
    },
    {
        "line": 1573,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no retry connect+exec section\","
    },
    {
        "line": 1582,
        "fullcodeline": "section->servname=str_dup_detached(\"stunnel\");"
    },
    {
        "line": 1601,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = service name\", \"service\");"
    },
    {
        "line": 1610,
        "fullcodeline": "section->gid=0;"
    },
    {
        "line": 1613,
        "fullcodeline": "section->gid=new_service_options.gid;"
    },
    {
        "line": 1620,
        "fullcodeline": "gr=getgrnam(arg);"
    },
    {
        "line": 1637,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = groupname for setgid()\", \"setgid\");"
    },
    {
        "line": 1646,
        "fullcodeline": "section->uid=0;"
    },
    {
        "line": 1649,
        "fullcodeline": "section->uid=new_service_options.uid;"
    },
    {
        "line": 1656,
        "fullcodeline": "pw=getpwnam(arg);"
    },
    {
        "line": 1673,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = username for setuid()\", \"setuid\");"
    },
    {
        "line": 1681,
        "fullcodeline": "section->session_size=1000L;"
    },
    {
        "line": 1684,
        "fullcodeline": "section->session_size=new_service_options.session_size;"
    },
    {
        "line": 1701,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %ld\", \"sessionCacheSize\", 1000L);"
    },
    {
        "line": 1704,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = session cache size\", \"sessionCacheSize\");"
    },
    {
        "line": 1711,
        "fullcodeline": "section->session_timeout=300L;"
    },
    {
        "line": 1714,
        "fullcodeline": "section->session_timeout=new_service_options.session_timeout;"
    },
    {
        "line": 1731,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %ld seconds\", \"sessionCacheTimeout\", 300L);"
    },
    {
        "line": 1734,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = session cache timeout (in seconds)\","
    },
    {
        "line": 1744,
        "fullcodeline": "section->sessiond_addr.in.sin_family=AF_INET;"
    },
    {
        "line": 1770,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = [host:]port use sessiond at host:port\","
    },
    {
        "line": 1779,
        "fullcodeline": "section->servername_list_head=NULL;"
    },
    {
        "line": 1780,
        "fullcodeline": "section->servername_list_tail=NULL;"
    },
    {
        "line": 1783,
        "fullcodeline": "section->sni="
    },
    {
        "line": 1787,
        "fullcodeline": "str_free(section->sni);"
    },
    {
        "line": 1788,
        "fullcodeline": "sni_free(section);"
    },
    {
        "line": 1808,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = master_service:host_name for an SNI virtual service\","
    },
    {
        "line": 1817,
        "fullcodeline": "section->sock_opts=socket_options_init();"
    },
    {
        "line": 1820,
        "fullcodeline": "section->sock_opts=socket_options_dup(new_service_options.sock_opts);"
    },
    {
        "line": 1823,
        "fullcodeline": "socket_options_free(section->sock_opts);"
    },
    {
        "line": 1836,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = a|l|r:option=value[:value]\", \"socket\");"
    },
    {
        "line": 1837,
        "fullcodeline": "s_log(LOG_NOTICE, \"%25sset an option on accept/local/remote socket\", \"\");"
    },
    {
        "line": 1945,
        "fullcodeline": "tls_methods_set(section, NULL);"
    },
    {
        "line": 1948,
        "fullcodeline": "section->client_method=new_service_options.client_method;"
    },
    {
        "line": 1949,
        "fullcodeline": "section->server_method=new_service_options.server_method;"
    },
    {
        "line": 1967,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = all\""
    },
    {
        "line": 1982,
        "fullcodeline": "section->stack_size=DEFAULT_STACK_SIZE;"
    },
    {
        "line": 1985,
        "fullcodeline": "section->stack_size=new_service_options.stack_size;"
    },
    {
        "line": 2002,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d bytes\", \"stack\", DEFAULT_STACK_SIZE);"
    },
    {
        "line": 2005,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = thread stack size (in bytes)\", \"stack\");"
    },
    {
        "line": 2091,
        "fullcodeline": "section->timeout_busy=300; /* 5 minutes */"
    },
    {
        "line": 2094,
        "fullcodeline": "section->timeout_busy=new_service_options.timeout_busy;"
    },
    {
        "line": 2111,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d seconds\", \"TIMEOUTbusy\", 300);"
    },
    {
        "line": 2114,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = seconds to wait for expected data\", \"TIMEOUTbusy\");"
    },
    {
        "line": 2121,
        "fullcodeline": "section->timeout_close=60; /* 1 minute */"
    },
    {
        "line": 2124,
        "fullcodeline": "section->timeout_close=new_service_options.timeout_close;"
    },
    {
        "line": 2141,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d seconds\", \"TIMEOUTclose\", 60);"
    },
    {
        "line": 2144,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = seconds to wait for close_notify\","
    },
    {
        "line": 2152,
        "fullcodeline": "section->timeout_connect=10; /* 10 seconds */"
    },
    {
        "line": 2155,
        "fullcodeline": "section->timeout_connect=new_service_options.timeout_connect;"
    },
    {
        "line": 2172,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d seconds\", \"TIMEOUTconnect\", 10);"
    },
    {
        "line": 2175,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = seconds to connect remote host\", \"TIMEOUTconnect\");"
    },
    {
        "line": 2182,
        "fullcodeline": "section->timeout_idle=43200; /* 12 hours */"
    },
    {
        "line": 2185,
        "fullcodeline": "section->timeout_idle=new_service_options.timeout_idle;"
    },
    {
        "line": 2202,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d seconds\", \"TIMEOUTidle\", 43200);"
    },
    {
        "line": 2205,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = seconds to keep an idle connection\", \"TIMEOUTidle\");"
    },
    {
        "line": 2247,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 2284,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = none\", \"verify\");"
    },
    {
        "line": 2287,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 2289,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 2291,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 2293,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 2295,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 2297,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 2330,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no verify certificate chain\","
    },
    {
        "line": 2375,
        "fullcodeline": "str_free(section->chain);"
    },
    {
        "line": 2380,
        "fullcodeline": "str_free(section->servname);"
    },
    {
        "line": 42,
        "fullcodeline": "if(strcasecmp(opt, \"accept\"))"
    },
    {
        "line": 81,
        "fullcodeline": "if(strcasecmp(opt, \"CApath\"))"
    },
    {
        "line": 118,
        "fullcodeline": "if(strcasecmp(opt, \"CAfile\"))"
    },
    {
        "line": 152,
        "fullcodeline": "if(strcasecmp(opt, \"cert\"))"
    },
    {
        "line": 155,
        "fullcodeline": "section->cert=str_dup_detached(arg);"
    },
    {
        "line": 279,
        "fullcodeline": "if(strcasecmp(opt, \"ciphers\"))"
    },
    {
        "line": 282,
        "fullcodeline": "section->cipher_list=str_dup_detached(arg);"
    },
    {
        "line": 285,
        "fullcodeline": "if(!section->cipher_list) {"
    },
    {
        "line": 324,
        "fullcodeline": "if(strcasecmp(opt, \"ciphersuites\"))"
    },
    {
        "line": 327,
        "fullcodeline": "section->ciphersuites=str_dup_detached(arg);"
    },
    {
        "line": 330,
        "fullcodeline": "if(!section->ciphersuites) {"
    },
    {
        "line": 356,
        "fullcodeline": "if(strcasecmp(opt, \"client\"))"
    },
    {
        "line": 423,
        "fullcodeline": "if(strcasecmp(opt, \"connect\"))"
    },
    {
        "line": 463,
        "fullcodeline": "if(strcasecmp(opt, \"CRLpath\"))"
    },
    {
        "line": 492,
        "fullcodeline": "if(strcasecmp(opt, \"CRLfile\"))"
    },
    {
        "line": 526,
        "fullcodeline": "section->curves=str_dup_detached(arg);"
    },
    {
        "line": 554,
        "fullcodeline": "if(strcasecmp(opt, \"debug\"))"
    },
    {
        "line": 556,
        "fullcodeline": "return parse_debug_level(arg, section);"
    },
    {
        "line": 586,
        "fullcodeline": "if(strcasecmp(opt, \"delay\"))"
    },
    {
        "line": 618,
        "fullcodeline": "if(strcasecmp(opt, \"engineId\"))"
    },
    {
        "line": 644,
        "fullcodeline": "if(strcasecmp(opt, \"engineNum\"))"
    },
    {
        "line": 648,
        "fullcodeline": "int tmp_int=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 651,
        "fullcodeline": "section->engine=engine_get_by_num(tmp_int-1);"
    },
    {
        "line": 680,
        "fullcodeline": "if(strcasecmp(opt, \"exec\"))"
    },
    {
        "line": 726,
        "fullcodeline": "if(strcasecmp(opt, \"execArgs\"))"
    },
    {
        "line": 733,
        "fullcodeline": "section->exec_args=arg_alloc(arg);"
    },
    {
        "line": 759,
        "fullcodeline": "if(strcasecmp(opt, \"failover\"))"
    },
    {
        "line": 792,
        "fullcodeline": "if(strcasecmp(opt, \"ident\"))"
    },
    {
        "line": 795,
        "fullcodeline": "section->username=str_dup_detached(arg);"
    },
    {
        "line": 815,
        "fullcodeline": "if(strcasecmp(opt, \"include\"))"
    },
    {
        "line": 817,
        "fullcodeline": "return include_config(arg, section_ptr);"
    },
    {
        "line": 840,
        "fullcodeline": "if(strcasecmp(opt, \"key\"))"
    },
    {
        "line": 843,
        "fullcodeline": "section->key=str_dup_detached(arg);"
    },
    {
        "line": 846,
        "fullcodeline": "if(section->cert && !section->key)"
    },
    {
        "line": 901,
        "fullcodeline": "if(strcasecmp(opt, \"local\"))"
    },
    {
        "line": 928,
        "fullcodeline": "if(strcasecmp(opt, \"logId\"))"
    },
    {
        "line": 966,
        "fullcodeline": "if(strcasecmp(opt, \"ocsp\"))"
    },
    {
        "line": 969,
        "fullcodeline": "section->ocsp_url=str_dup_detached(arg);"
    },
    {
        "line": 991,
        "fullcodeline": "if(strcasecmp(opt, \"OCSPaia\"))"
    },
    {
        "line": 1022,
        "fullcodeline": "if(strcasecmp(opt, \"OCSPflag\"))"
    },
    {
        "line": 1025,
        "fullcodeline": "unsigned long tmp_ulong=parse_ocsp_flag(arg);"
    },
    {
        "line": 1051,
        "fullcodeline": "if(strcasecmp(opt, \"OCSPnonce\"))"
    },
    {
        "line": 1090,
        "fullcodeline": "if(strcasecmp(opt, \"options\"))"
    },
    {
        "line": 1102,
        "fullcodeline": "long unsigned tmp=parse_ssl_option(arg);"
    },
    {
        "line": 1131,
        "fullcodeline": "if(strcasecmp(opt, \"protocol\"))"
    },
    {
        "line": 1134,
        "fullcodeline": "section->protocol=str_dup_detached(arg);"
    },
    {
        "line": 1141,
        "fullcodeline": "char *tmp_str=protocol(NULL, section, PROTOCOL_CHECK);"
    },
    {
        "line": 1164,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_authentication);"
    },
    {
        "line": 1170,
        "fullcodeline": "if(strcasecmp(opt, \"protocolAuthentication\"))"
    },
    {
        "line": 1173,
        "fullcodeline": "section->protocol_authentication=str_dup_detached(arg);"
    },
    {
        "line": 1192,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_domain);"
    },
    {
        "line": 1198,
        "fullcodeline": "if(strcasecmp(opt, \"protocolDomain\"))"
    },
    {
        "line": 1201,
        "fullcodeline": "section->protocol_domain=str_dup_detached(arg);"
    },
    {
        "line": 1220,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_host);"
    },
    {
        "line": 1226,
        "fullcodeline": "if(strcasecmp(opt, \"protocolHost\"))"
    },
    {
        "line": 1229,
        "fullcodeline": "section->protocol_host=str_dup_detached(arg);"
    },
    {
        "line": 1248,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_password);"
    },
    {
        "line": 1254,
        "fullcodeline": "if(strcasecmp(opt, \"protocolPassword\"))"
    },
    {
        "line": 1257,
        "fullcodeline": "section->protocol_password=str_dup_detached(arg);"
    },
    {
        "line": 1276,
        "fullcodeline": "str_dup_detached(new_service_options.protocol_username);"
    },
    {
        "line": 1282,
        "fullcodeline": "if(strcasecmp(opt, \"protocolUsername\"))"
    },
    {
        "line": 1285,
        "fullcodeline": "section->protocol_username=str_dup_detached(arg);"
    },
    {
        "line": 1309,
        "fullcodeline": "str_dup_detached(new_service_options.psk_identity);"
    },
    {
        "line": 1316,
        "fullcodeline": "if(strcasecmp(opt, \"PSKidentity\"))"
    },
    {
        "line": 1319,
        "fullcodeline": "section->psk_identity=str_dup_detached(arg);"
    },
    {
        "line": 1322,
        "fullcodeline": "if(!section->psk_keys) /* PSK not configured */"
    },
    {
        "line": 1360,
        "fullcodeline": "if(strcasecmp(opt, \"PSKsecrets\"))"
    },
    {
        "line": 1390,
        "fullcodeline": "if(strcasecmp(opt, \"pty\"))"
    },
    {
        "line": 1425,
        "fullcodeline": "if(strcasecmp(opt, \"redirect\"))"
    },
    {
        "line": 1467,
        "fullcodeline": "if(strcasecmp(opt, \"renegotiation\"))"
    },
    {
        "line": 1497,
        "fullcodeline": "if(strcasecmp(opt, \"requireCert\"))"
    },
    {
        "line": 1529,
        "fullcodeline": "if(strcasecmp(opt, \"reset\"))"
    },
    {
        "line": 1559,
        "fullcodeline": "if(strcasecmp(opt, \"retry\"))"
    },
    {
        "line": 1591,
        "fullcodeline": "if(strcasecmp(opt, \"service\"))"
    },
    {
        "line": 1594,
        "fullcodeline": "section->servname=str_dup_detached(arg);"
    },
    {
        "line": 1618,
        "fullcodeline": "if(strcasecmp(opt, \"setgid\"))"
    },
    {
        "line": 1654,
        "fullcodeline": "if(strcasecmp(opt, \"setuid\"))"
    },
    {
        "line": 1689,
        "fullcodeline": "if(strcasecmp(opt, \"sessionCacheSize\"))"
    },
    {
        "line": 1754,
        "fullcodeline": "if(strcasecmp(opt, \"sessiond\"))"
    },
    {
        "line": 1784,
        "fullcodeline": "str_dup_detached(new_service_options.sni);"
    },
    {
        "line": 1791,
        "fullcodeline": "if(strcasecmp(opt, \"sni\"))"
    },
    {
        "line": 1794,
        "fullcodeline": "section->sni=str_dup_detached(arg);"
    },
    {
        "line": 1798,
        "fullcodeline": "char *tmp_str=sni_init(section);"
    },
    {
        "line": 1802,
        "fullcodeline": "if(!section->option.client && section->sni)"
    },
    {
        "line": 1826,
        "fullcodeline": "if(strcasecmp(opt, \"socket\"))"
    },
    {
        "line": 1954,
        "fullcodeline": "if(strcasecmp(opt, \"sslVersion\"))"
    },
    {
        "line": 1956,
        "fullcodeline": "return tls_methods_set(section, arg);"
    },
    {
        "line": 1959,
        "fullcodeline": "char *tmp_str=tls_methods_check(section);"
    },
    {
        "line": 1990,
        "fullcodeline": "if(strcasecmp(opt, \"stack\"))"
    },
    {
        "line": 2099,
        "fullcodeline": "if(strcasecmp(opt, \"TIMEOUTbusy\"))"
    },
    {
        "line": 2129,
        "fullcodeline": "if(strcasecmp(opt, \"TIMEOUTclose\"))"
    },
    {
        "line": 2160,
        "fullcodeline": "if(strcasecmp(opt, \"TIMEOUTconnect\"))"
    },
    {
        "line": 2190,
        "fullcodeline": "if(strcasecmp(opt, \"TIMEOUTidle\"))"
    },
    {
        "line": 2223,
        "fullcodeline": "if(strcasecmp(opt, \"transparent\"))"
    },
    {
        "line": 2265,
        "fullcodeline": "if(strcasecmp(opt, \"verify\"))"
    },
    {
        "line": 2269,
        "fullcodeline": "int tmp_int=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2313,
        "fullcodeline": "if(strcasecmp(opt, \"verifyChain\"))"
    },
    {
        "line": 2381,
        "fullcodeline": "if(section==&service_options)"
    },
    {
        "line": 2389,
        "fullcodeline": "if(section!=&new_service_options) { /* daemon mode checks */"
    },
    {
        "line": 14,
        "fullcodeline": "} else if(cmd==CMD_FREE) {"
    },
    {
        "line": 52,
        "fullcodeline": "section->local_fd=str_alloc_detached(section->local_addr.num*sizeof(SOCKET));"
    },
    {
        "line": 55,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 166,
        "fullcodeline": "if(!section->option.client && !section->cert)"
    },
    {
        "line": 293,
        "fullcodeline": "section->cipher_list=str_dup_detached(stunnel_cipher_list);"
    },
    {
        "line": 333,
        "fullcodeline": "section->ciphersuites=str_dup_detached(stunnel_ciphersuites);"
    },
    {
        "line": 358,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 440,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 523,
        "fullcodeline": "if(strcasecmp(opt, \"curves\") && strcasecmp(opt, \"curve\"))"
    },
    {
        "line": 588,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 696,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 761,
        "fullcodeline": "if(!strcasecmp(arg, \"rr\"))"
    },
    {
        "line": 762,
        "fullcodeline": "section->failover=FAILOVER_RR;"
    },
    {
        "line": 770,
        "fullcodeline": "section->failover=FAILOVER_PRIO;"
    },
    {
        "line": 847,
        "fullcodeline": "section->key=str_dup_detached(section->cert);"
    },
    {
        "line": 903,
        "fullcodeline": "if(!hostport2addr(&section->source_addr, arg, \"0\", 1))"
    },
    {
        "line": 930,
        "fullcodeline": "if(!strcasecmp(arg, \"sequential\"))"
    },
    {
        "line": 993,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1026,
        "fullcodeline": "if(!tmp_ulong)"
    },
    {
        "line": 1053,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1103,
        "fullcodeline": "if(tmp==INVALID_SSL_OPTION)"
    },
    {
        "line": 1392,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1469,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1499,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 1531,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1561,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 1693,
        "fullcodeline": "section->session_size=strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 1719,
        "fullcodeline": "if(strcasecmp(opt, \"sessionCacheTimeout\") && strcasecmp(opt, \"session\"))"
    },
    {
        "line": 1723,
        "fullcodeline": "section->session_timeout=strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 1762,
        "fullcodeline": "if(!name2addr(&section->sessiond_addr, arg, 0))"
    },
    {
        "line": 1803,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 2225,
        "fullcodeline": "if(!strcasecmp(arg, \"none\") || !strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 2242,
        "fullcodeline": "++endpoints;"
    },
    {
        "line": 2273,
        "fullcodeline": "section->option.require_cert=(tmp_int>=2);"
    },
    {
        "line": 2274,
        "fullcodeline": "section->option.verify_chain=(tmp_int>=1 && tmp_int<=3);"
    },
    {
        "line": 2275,
        "fullcodeline": "section->option.verify_peer=(tmp_int>=3);"
    },
    {
        "line": 2279,
        "fullcodeline": "if((section->option.verify_chain || section->option.verify_peer) &&"
    },
    {
        "line": 2280,
        "fullcodeline": "!section->ca_file && !section->ca_dir)"
    },
    {
        "line": 2315,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 2348,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 2377,
        "fullcodeline": "SSL_SESSION_free(section->session);"
    },
    {
        "line": 2379,
        "fullcodeline": "SSL_CTX_free(section->ctx);"
    },
    {
        "line": 53,
        "fullcodeline": "for(i=0; i<section->local_addr.num; ++i)"
    },
    {
        "line": 54,
        "fullcodeline": "section->local_fd[i]=INVALID_SOCKET;"
    },
    {
        "line": 85,
        "fullcodeline": "section->ca_dir=str_dup_detached(arg);"
    },
    {
        "line": 122,
        "fullcodeline": "section->ca_file=str_dup_detached(arg);"
    },
    {
        "line": 467,
        "fullcodeline": "section->crl_dir=str_dup_detached(arg);"
    },
    {
        "line": 496,
        "fullcodeline": "section->crl_file=str_dup_detached(arg);"
    },
    {
        "line": 649,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 688,
        "fullcodeline": "section->exec_args=str_alloc_detached(2*sizeof(char *));"
    },
    {
        "line": 689,
        "fullcodeline": "section->exec_args[0]=str_dup_detached(section->exec_name);"
    },
    {
        "line": 1627,
        "fullcodeline": "section->gid=(gid_t)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 1628,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 1663,
        "fullcodeline": "section->uid=(uid_t)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 1664,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 1694,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 1724,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 1994,
        "fullcodeline": "section->stack_size=(size_t)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 1995,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2103,
        "fullcodeline": "section->timeout_busy=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2104,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2133,
        "fullcodeline": "section->timeout_close=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2134,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2164,
        "fullcodeline": "section->timeout_connect=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2165,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2194,
        "fullcodeline": "section->timeout_idle=(int)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 2195,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 2270,
        "fullcodeline": "if(tmp_str==arg || *tmp_str || tmp_int<0 || tmp_int>4)"
    },
    {
        "line": 2382,
        "fullcodeline": "memset(section, 0, sizeof(SERVICE_OPTIONS));"
    },
    {
        "line": 15,
        "fullcodeline": "if(section==&service_options || section==&new_service_options)"
    },
    {
        "line": 50,
        "fullcodeline": "if(!addrlist_resolve(&section->local_addr))"
    },
    {
        "line": 429,
        "fullcodeline": "if(!section->option.delayed_lookup &&"
    },
    {
        "line": 430,
        "fullcodeline": "!addrlist_resolve(&section->connect_addr)) {"
    },
    {
        "line": 431,
        "fullcodeline": "s_log(LOG_INFO,"
    },
    {
        "line": 433,
        "fullcodeline": "section->connect_addr.num=0;"
    },
    {
        "line": 434,
        "fullcodeline": "section->redirect_addr.num=0;"
    },
    {
        "line": 435,
        "fullcodeline": "section->option.delayed_lookup=1;"
    },
    {
        "line": 438,
        "fullcodeline": "section->connect_session="
    },
    {
        "line": 1327,
        "fullcodeline": "section->psk_selected="
    },
    {
        "line": 1435,
        "fullcodeline": "if(!section->option.delayed_lookup &&"
    },
    {
        "line": 1436,
        "fullcodeline": "!addrlist_resolve(&section->redirect_addr)) {"
    },
    {
        "line": 1443,
        "fullcodeline": "if(!section->option.verify_chain && !section->option.verify_peer)"
    },
    {
        "line": 16,
        "fullcodeline": "s_log(LOG_DEBUG, \"Deallocating section defaults\");"
    },
    {
        "line": 19,
        "fullcodeline": "} else if(cmd==CMD_PRINT_DEFAULTS || cmd==CMD_PRINT_HELP) {"
    },
    {
        "line": 360,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 439,
        "fullcodeline": "str_alloc_detached(section->connect_addr.num*sizeof(SSL_SESSION *));"
    },
    {
        "line": 590,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 763,
        "fullcodeline": "else if(!strcasecmp(arg, \"prio\"))"
    },
    {
        "line": 932,
        "fullcodeline": "else if(!strcasecmp(arg, \"unique\"))"
    },
    {
        "line": 933,
        "fullcodeline": "section->log_id=LOG_ID_UNIQUE;"
    },
    {
        "line": 995,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1055,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1328,
        "fullcodeline": "psk_find(&section->psk_sorted, section->psk_identity);"
    },
    {
        "line": 1329,
        "fullcodeline": "if(!section->psk_selected)"
    },
    {
        "line": 1332,
        "fullcodeline": "section->psk_selected=section->psk_keys;"
    },
    {
        "line": 1336,
        "fullcodeline": "s_log(LOG_NOTICE,"
    },
    {
        "line": 1394,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1471,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1502,
        "fullcodeline": "} else if(!strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 1533,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 1563,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 2228,
        "fullcodeline": "} else if(!strcasecmp(arg, \"source\") || !strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 2319,
        "fullcodeline": "} else if(!strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 2352,
        "fullcodeline": "} else if(!strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 18,
        "fullcodeline": "s_log(LOG_DEBUG, \"Deallocating section [%s]\", section->servname);"
    },
    {
        "line": 20,
        "fullcodeline": "s_log(LOG_NOTICE, \" \");"
    },
    {
        "line": 21,
        "fullcodeline": "s_log(LOG_NOTICE, \"Service-level options:\");"
    },
    {
        "line": 934,
        "fullcodeline": "else if(!strcasecmp(arg, \"thread\"))"
    },
    {
        "line": 935,
        "fullcodeline": "section->log_id=LOG_ID_THREAD;"
    },
    {
        "line": 2231,
        "fullcodeline": "} else if(!strcasecmp(arg, \"destination\")) {"
    },
    {
        "line": 936,
        "fullcodeline": "else if(!strcasecmp(arg, \"process\"))"
    },
    {
        "line": 937,
        "fullcodeline": "section->log_id=LOG_ID_PROCESS;"
    },
    {
        "line": 2234,
        "fullcodeline": "} else if(!strcasecmp(arg, \"both\")) {"
    }
]