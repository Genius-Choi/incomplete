[
    {
        "line": 6,
        "fullcodeline": "b64=BIO_new(BIO_f_base64());"
    },
    {
        "line": 9,
        "fullcodeline": "BIO_set_flags(b64, BIO_FLAGS_BASE64_NO_NL);"
    },
    {
        "line": 10,
        "fullcodeline": "bio=BIO_new(BIO_s_mem());"
    },
    {
        "line": 17,
        "fullcodeline": "BIO_write(bio, in, len);"
    },
    {
        "line": 18,
        "fullcodeline": "(void)BIO_flush(bio); /* ignore the error if any */"
    },
    {
        "line": 25,
        "fullcodeline": "n=BIO_pending(bio);"
    },
    {
        "line": 28,
        "fullcodeline": "out=str_alloc(n<32?32:(size_t)n+1);"
    },
    {
        "line": 29,
        "fullcodeline": "n=BIO_read(bio, out, n);"
    },
    {
        "line": 35,
        "fullcodeline": "BIO_free_all(bio);"
    },
    {
        "line": 7,
        "fullcodeline": "if(!b64)"
    },
    {
        "line": 11,
        "fullcodeline": "if(!bio) {"
    },
    {
        "line": 30,
        "fullcodeline": "if(n<0) {"
    },
    {
        "line": 12,
        "fullcodeline": "str_free(b64);"
    },
    {
        "line": 16,
        "fullcodeline": "bio=BIO_push(b64, bio);"
    },
    {
        "line": 20,
        "fullcodeline": "bio=BIO_pop(bio);"
    },
    {
        "line": 21,
        "fullcodeline": "BIO_free(b64);"
    },
    {
        "line": 31,
        "fullcodeline": "BIO_free_all(bio);"
    },
    {
        "line": 32,
        "fullcodeline": "str_free(out);"
    },
    {
        "line": 23,
        "fullcodeline": "bio=BIO_push(b64, bio);"
    }
]