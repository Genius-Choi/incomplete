[
    {
        "line": 4,
        "fullcodeline": "if (!SSL_get_peer_tmp_key(s, &key)) {"
    },
    {
        "line": 8,
        "fullcodeline": "switch (EVP_PKEY_id(key)) {"
    },
    {
        "line": 5,
        "fullcodeline": "sslerror(\"SSL_get_peer_tmp_key\");"
    },
    {
        "line": 10,
        "fullcodeline": "s_log(LOG_INFO, \"Peer temporary key: RSA, %d bits\", EVP_PKEY_bits(key));"
    },
    {
        "line": 13,
        "fullcodeline": "s_log(LOG_INFO, \"Peer temporary key: DH, %d bits\", EVP_PKEY_bits(key));"
    },
    {
        "line": 18,
        "fullcodeline": "EC_KEY *ec=EVP_PKEY_get1_EC_KEY(key);"
    },
    {
        "line": 19,
        "fullcodeline": "int nid=EC_GROUP_get_curve_name(EC_KEY_get0_group(ec));"
    },
    {
        "line": 20,
        "fullcodeline": "const char *cname=EC_curve_nid2nist(nid);"
    },
    {
        "line": 29,
        "fullcodeline": "s_log(LOG_INFO, \"Peer temporary key: %s, %d bits\", OBJ_nid2sn(EVP_PKEY_id(key)),"
    },
    {
        "line": 30,
        "fullcodeline": "EVP_PKEY_bits(key));"
    },
    {
        "line": 22,
        "fullcodeline": "if (cname == NULL)"
    },
    {
        "line": 24,
        "fullcodeline": "s_log(LOG_INFO, \"Peer temporary key: ECDH, %s, %d bits\", cname, EVP_PKEY_bits(key));"
    },
    {
        "line": 23,
        "fullcodeline": "cname=OBJ_nid2sn(nid);"
    }
]