[
    {
        "line": 4,
        "fullcodeline": "if(cmd==CMD_PRINT_DEFAULTS || cmd==CMD_PRINT_HELP) {"
    },
    {
        "line": 5,
        "fullcodeline": "s_log(LOG_NOTICE, \" \");"
    },
    {
        "line": 6,
        "fullcodeline": "s_log(LOG_NOTICE, \"Global options:\");"
    },
    {
        "line": 41,
        "fullcodeline": "options->compression=COMP_NONE;"
    },
    {
        "line": 68,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = compression type\","
    },
    {
        "line": 80,
        "fullcodeline": "options->egd_sock=NULL;"
    },
    {
        "line": 86,
        "fullcodeline": "tmp=options->egd_sock;"
    },
    {
        "line": 87,
        "fullcodeline": "options->egd_sock=NULL;"
    },
    {
        "line": 88,
        "fullcodeline": "str_free(tmp);"
    },
    {
        "line": 93,
        "fullcodeline": "options->egd_sock=str_dup(arg);"
    },
    {
        "line": 103,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = path to Entropy Gathering Daemon socket\", \"EGD\");"
    },
    {
        "line": 112,
        "fullcodeline": "engine_reset_list();"
    },
    {
        "line": 127,
        "fullcodeline": "engine_init();"
    },
    {
        "line": 132,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = auto|engine_id\","
    },
    {
        "line": 159,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = cmd[:arg]\","
    },
    {
        "line": 181,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = TASK_LIST\","
    },
    {
        "line": 237,
        "fullcodeline": "options->option.foreground=0;"
    },
    {
        "line": 238,
        "fullcodeline": "options->option.log_stderr=0;"
    },
    {
        "line": 264,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|quiet|no foreground mode (don't fork, log to stderr)\","
    },
    {
        "line": 352,
        "fullcodeline": "options->log_file_mode=FILE_MODE_APPEND;"
    },
    {
        "line": 373,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = append|overwrite log file\","
    },
    {
        "line": 381,
        "fullcodeline": "options->output_file=NULL;"
    },
    {
        "line": 386,
        "fullcodeline": "tmp=options->output_file;"
    },
    {
        "line": 387,
        "fullcodeline": "options->output_file=NULL;"
    },
    {
        "line": 388,
        "fullcodeline": "str_free(tmp);"
    },
    {
        "line": 393,
        "fullcodeline": "options->output_file=str_dup(arg);"
    },
    {
        "line": 406,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = file to append log messages\", \"output\");"
    },
    {
        "line": 414,
        "fullcodeline": "options->pidfile=NULL; /* do not create a pid file */"
    },
    {
        "line": 419,
        "fullcodeline": "tmp=options->pidfile;"
    },
    {
        "line": 420,
        "fullcodeline": "options->pidfile=NULL;"
    },
    {
        "line": 421,
        "fullcodeline": "str_free(tmp);"
    },
    {
        "line": 440,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = pid file\", \"pid\");"
    },
    {
        "line": 448,
        "fullcodeline": "options->random_bytes=RANDOM_BYTES;"
    },
    {
        "line": 467,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d\", \"RNDbytes\", RANDOM_BYTES);"
    },
    {
        "line": 470,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = bytes to read from random seed files\", \"RNDbytes\");"
    },
    {
        "line": 480,
        "fullcodeline": "options->rand_file=NULL;"
    },
    {
        "line": 486,
        "fullcodeline": "tmp=options->rand_file;"
    },
    {
        "line": 487,
        "fullcodeline": "options->rand_file=NULL;"
    },
    {
        "line": 488,
        "fullcodeline": "str_free(tmp);"
    },
    {
        "line": 493,
        "fullcodeline": "options->rand_file=str_dup(arg);"
    },
    {
        "line": 503,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = path to file with random seed data\", \"RNDfile\");"
    },
    {
        "line": 510,
        "fullcodeline": "options->option.rand_write=1;"
    },
    {
        "line": 529,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes\", \"RNDoverwrite\");"
    },
    {
        "line": 532,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no overwrite seed datafiles with new random data\","
    },
    {
        "line": 541,
        "fullcodeline": "options->option.log_syslog=1;"
    },
    {
        "line": 562,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no send logging messages to syslog\","
    },
    {
        "line": 606,
        "fullcodeline": "memset(options, 0, sizeof(GLOBAL_OPTIONS));"
    },
    {
        "line": 48,
        "fullcodeline": "if(strcasecmp(opt, \"compression\"))"
    },
    {
        "line": 53,
        "fullcodeline": "if(OpenSSL_version_num()<0x00908051L) /* 0.9.8e-beta1 */"
    },
    {
        "line": 56,
        "fullcodeline": "if(!strcasecmp(arg, \"deflate\"))"
    },
    {
        "line": 91,
        "fullcodeline": "if(strcasecmp(opt, \"EGD\"))"
    },
    {
        "line": 120,
        "fullcodeline": "if(strcasecmp(opt, \"engine\"))"
    },
    {
        "line": 122,
        "fullcodeline": "if(!strcasecmp(arg, \"auto\"))"
    },
    {
        "line": 146,
        "fullcodeline": "if(strcasecmp(opt, \"engineCtrl\"))"
    },
    {
        "line": 149,
        "fullcodeline": "char *tmp_str=strchr(arg, ':');"
    },
    {
        "line": 173,
        "fullcodeline": "if(strcasecmp(opt, \"engineDefault\"))"
    },
    {
        "line": 175,
        "fullcodeline": "return engine_default(arg);"
    },
    {
        "line": 200,
        "fullcodeline": "if(strcasecmp(opt, \"fips\"))"
    },
    {
        "line": 202,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 245,
        "fullcodeline": "if(strcasecmp(opt, \"foreground\"))"
    },
    {
        "line": 247,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 359,
        "fullcodeline": "if(strcasecmp(opt, \"log\"))"
    },
    {
        "line": 361,
        "fullcodeline": "if(!strcasecmp(arg, \"append\"))"
    },
    {
        "line": 391,
        "fullcodeline": "if(strcasecmp(opt, \"output\"))"
    },
    {
        "line": 397,
        "fullcodeline": "if(!options->option.foreground /* daemonize() used */ &&"
    },
    {
        "line": 424,
        "fullcodeline": "if(strcasecmp(opt, \"pid\"))"
    },
    {
        "line": 432,
        "fullcodeline": "if(!options->option.foreground /* daemonize() used */ &&"
    },
    {
        "line": 455,
        "fullcodeline": "if(strcasecmp(opt, \"RNDbytes\"))"
    },
    {
        "line": 459,
        "fullcodeline": "options->random_bytes=(long)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 491,
        "fullcodeline": "if(strcasecmp(opt, \"RNDfile\"))"
    },
    {
        "line": 517,
        "fullcodeline": "if(strcasecmp(opt, \"RNDoverwrite\"))"
    },
    {
        "line": 519,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 548,
        "fullcodeline": "if(strcasecmp(opt, \"syslog\"))"
    },
    {
        "line": 550,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 612,
        "fullcodeline": "if(ssl_configure(options)) /* configure global TLS settings */"
    },
    {
        "line": 57,
        "fullcodeline": "options->compression=COMP_DEFLATE;"
    },
    {
        "line": 152,
        "fullcodeline": "return engine_ctrl(arg, tmp_str);"
    },
    {
        "line": 248,
        "fullcodeline": "options->option.foreground=1;"
    },
    {
        "line": 249,
        "fullcodeline": "options->option.log_stderr=1;"
    },
    {
        "line": 362,
        "fullcodeline": "options->log_file_mode=FILE_MODE_APPEND;"
    },
    {
        "line": 399,
        "fullcodeline": "options->output_file[0]!='/' /* relative path */)"
    },
    {
        "line": 427,
        "fullcodeline": "options->pidfile=str_dup(arg);"
    },
    {
        "line": 434,
        "fullcodeline": "options->pidfile[0]!='/' /* relative path */)"
    },
    {
        "line": 460,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 520,
        "fullcodeline": "options->option.rand_write=1;"
    },
    {
        "line": 551,
        "fullcodeline": "options->option.log_syslog=1;"
    },
    {
        "line": 123,
        "fullcodeline": "return engine_auto();"
    },
    {
        "line": 151,
        "fullcodeline": "*tmp_str++='\\0';"
    },
    {
        "line": 429,
        "fullcodeline": "options->pidfile=NULL; /* empty -> do not create a pid file */"
    },
    {
        "line": 58,
        "fullcodeline": "else if(!strcasecmp(arg, \"zlib\"))"
    },
    {
        "line": 125,
        "fullcodeline": "return engine_open(arg);"
    },
    {
        "line": 208,
        "fullcodeline": "} else if(!strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 250,
        "fullcodeline": "} else if(!strcasecmp(arg, \"quiet\")) {"
    },
    {
        "line": 363,
        "fullcodeline": "else if(!strcasecmp(arg, \"overwrite\"))"
    },
    {
        "line": 521,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 552,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 59,
        "fullcodeline": "options->compression=COMP_ZLIB;"
    },
    {
        "line": 251,
        "fullcodeline": "options->option.foreground=1;"
    },
    {
        "line": 252,
        "fullcodeline": "options->option.log_stderr=0;"
    },
    {
        "line": 364,
        "fullcodeline": "options->log_file_mode=FILE_MODE_OVERWRITE;"
    },
    {
        "line": 522,
        "fullcodeline": "options->option.rand_write=0;"
    },
    {
        "line": 553,
        "fullcodeline": "options->option.log_syslog=0;"
    },
    {
        "line": 253,
        "fullcodeline": "} else if(!strcasecmp(arg, \"no\")) {"
    },
    {
        "line": 254,
        "fullcodeline": "options->option.foreground=0;"
    },
    {
        "line": 255,
        "fullcodeline": "options->option.log_stderr=0;"
    }
]