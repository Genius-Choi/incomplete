[
    {
        "line": 4,
        "fullcodeline": "if(cmd==CMD_PRINT_DEFAULTS || cmd==CMD_PRINT_HELP) {"
    },
    {
        "line": 5,
        "fullcodeline": "s_log(LOG_NOTICE, \" \");"
    },
    {
        "line": 6,
        "fullcodeline": "s_log(LOG_NOTICE, \"Global options:\");"
    },
    {
        "line": 41,
        "fullcodeline": "new_global_options.compression=COMP_NONE;"
    },
    {
        "line": 68,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = compression type\","
    },
    {
        "line": 80,
        "fullcodeline": "new_global_options.egd_sock=NULL;"
    },
    {
        "line": 86,
        "fullcodeline": "tmp=global_options.egd_sock;"
    },
    {
        "line": 103,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = path to Entropy Gathering Daemon socket\", \"EGD\");"
    },
    {
        "line": 132,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = auto|engine_id\","
    },
    {
        "line": 159,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = cmd[:arg]\","
    },
    {
        "line": 181,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = TASK_LIST\","
    },
    {
        "line": 230,
        "fullcodeline": "new_global_options.option.foreground=0;"
    },
    {
        "line": 257,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|quiet|no foreground mode (don't fork, log to stderr)\","
    },
    {
        "line": 345,
        "fullcodeline": "new_global_options.log_file_mode=FILE_MODE_APPEND;"
    },
    {
        "line": 366,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = append|overwrite log file\","
    },
    {
        "line": 374,
        "fullcodeline": "new_global_options.output_file=NULL;"
    },
    {
        "line": 379,
        "fullcodeline": "tmp=global_options.output_file;"
    },
    {
        "line": 399,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = file to append log messages\", \"output\");"
    },
    {
        "line": 407,
        "fullcodeline": "new_global_options.pidfile=NULL; /* do not create a pid file */"
    },
    {
        "line": 412,
        "fullcodeline": "tmp=global_options.pidfile;"
    },
    {
        "line": 433,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = pid file\", \"pid\");"
    },
    {
        "line": 441,
        "fullcodeline": "new_global_options.random_bytes=RANDOM_BYTES;"
    },
    {
        "line": 460,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = %d\", \"RNDbytes\", RANDOM_BYTES);"
    },
    {
        "line": 463,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = bytes to read from random seed files\", \"RNDbytes\");"
    },
    {
        "line": 473,
        "fullcodeline": "new_global_options.rand_file=NULL;"
    },
    {
        "line": 479,
        "fullcodeline": "tmp=global_options.rand_file;"
    },
    {
        "line": 496,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = path to file with random seed data\", \"RNDfile\");"
    },
    {
        "line": 522,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes\", \"RNDoverwrite\");"
    },
    {
        "line": 525,
        "fullcodeline": "s_log(LOG_NOTICE, \"%-22s = yes|no overwrite seed datafiles with new random data\","
    },
    {
        "line": 48,
        "fullcodeline": "if(strcasecmp(opt, \"compression\"))"
    },
    {
        "line": 53,
        "fullcodeline": "if(OpenSSL_version_num()<0x00908051L) /* 0.9.8e-beta1 */"
    },
    {
        "line": 91,
        "fullcodeline": "if(strcasecmp(opt, \"EGD\"))"
    },
    {
        "line": 93,
        "fullcodeline": "new_global_options.egd_sock=str_dup(arg);"
    },
    {
        "line": 120,
        "fullcodeline": "if(strcasecmp(opt, \"engine\"))"
    },
    {
        "line": 146,
        "fullcodeline": "if(strcasecmp(opt, \"engineCtrl\"))"
    },
    {
        "line": 149,
        "fullcodeline": "char *tmp_str=strchr(arg, ':');"
    },
    {
        "line": 173,
        "fullcodeline": "if(strcasecmp(opt, \"engineDefault\"))"
    },
    {
        "line": 175,
        "fullcodeline": "return engine_default(arg);"
    },
    {
        "line": 200,
        "fullcodeline": "if(strcasecmp(opt, \"fips\"))"
    },
    {
        "line": 238,
        "fullcodeline": "if(strcasecmp(opt, \"foreground\"))"
    },
    {
        "line": 352,
        "fullcodeline": "if(strcasecmp(opt, \"log\"))"
    },
    {
        "line": 384,
        "fullcodeline": "if(strcasecmp(opt, \"output\"))"
    },
    {
        "line": 386,
        "fullcodeline": "new_global_options.output_file=str_dup(arg);"
    },
    {
        "line": 417,
        "fullcodeline": "if(strcasecmp(opt, \"pid\"))"
    },
    {
        "line": 448,
        "fullcodeline": "if(strcasecmp(opt, \"RNDbytes\"))"
    },
    {
        "line": 484,
        "fullcodeline": "if(strcasecmp(opt, \"RNDfile\"))"
    },
    {
        "line": 486,
        "fullcodeline": "new_global_options.rand_file=str_dup(arg);"
    },
    {
        "line": 510,
        "fullcodeline": "if(strcasecmp(opt, \"RNDoverwrite\"))"
    },
    {
        "line": 56,
        "fullcodeline": "if(!strcasecmp(arg, \"deflate\"))"
    },
    {
        "line": 57,
        "fullcodeline": "new_global_options.compression=COMP_DEFLATE;"
    },
    {
        "line": 122,
        "fullcodeline": "if(!strcasecmp(arg, \"auto\"))"
    },
    {
        "line": 152,
        "fullcodeline": "return engine_ctrl(arg, tmp_str);"
    },
    {
        "line": 240,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\")) {"
    },
    {
        "line": 354,
        "fullcodeline": "if(!strcasecmp(arg, \"append\"))"
    },
    {
        "line": 390,
        "fullcodeline": "if(!new_global_options.option.foreground /* daemonize() used */ &&"
    },
    {
        "line": 392,
        "fullcodeline": "new_global_options.output_file[0]!='/' /* relative path */)"
    },
    {
        "line": 425,
        "fullcodeline": "if(!new_global_options.option.foreground /* daemonize() used */ &&"
    },
    {
        "line": 427,
        "fullcodeline": "new_global_options.pidfile[0]!='/' /* relative path */)"
    },
    {
        "line": 512,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 543,
        "fullcodeline": "if(!strcasecmp(arg, \"yes\"))"
    },
    {
        "line": 123,
        "fullcodeline": "return engine_auto();"
    },
    {
        "line": 420,
        "fullcodeline": "new_global_options.pidfile=str_dup(arg);"
    },
    {
        "line": 452,
        "fullcodeline": "new_global_options.random_bytes=(long)strtol(arg, &tmp_str, 10);"
    },
    {
        "line": 453,
        "fullcodeline": "if(tmp_str==arg || *tmp_str) /* not a number */"
    },
    {
        "line": 125,
        "fullcodeline": "return engine_open(arg);"
    },
    {
        "line": 58,
        "fullcodeline": "else if(!strcasecmp(arg, \"zlib\"))"
    },
    {
        "line": 59,
        "fullcodeline": "new_global_options.compression=COMP_ZLIB;"
    },
    {
        "line": 151,
        "fullcodeline": "*tmp_str++='\\0';"
    },
    {
        "line": 243,
        "fullcodeline": "} else if(!strcasecmp(arg, \"quiet\")) {"
    },
    {
        "line": 356,
        "fullcodeline": "else if(!strcasecmp(arg, \"overwrite\"))"
    },
    {
        "line": 357,
        "fullcodeline": "new_global_options.log_file_mode=FILE_MODE_OVERWRITE;"
    },
    {
        "line": 514,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 545,
        "fullcodeline": "else if(!strcasecmp(arg, \"no\"))"
    },
    {
        "line": 246,
        "fullcodeline": "} else if(!strcasecmp(arg, \"no\")) {"
    }
]