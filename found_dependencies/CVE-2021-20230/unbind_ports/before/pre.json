[
    {
        "line": 4,
        "fullcodeline": "s_poll_init(fds, 1);"
    },
    {
        "line": 6,
        "fullcodeline": "CRYPTO_THREAD_write_lock(stunnel_locks[LOCK_SECTIONS]);"
    },
    {
        "line": 8,
        "fullcodeline": "opt=service_options.next;"
    },
    {
        "line": 9,
        "fullcodeline": "service_options.next=NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "service_free(&service_options);"
    },
    {
        "line": 41,
        "fullcodeline": "CRYPTO_THREAD_unlock(stunnel_locks[LOCK_SECTIONS]);"
    },
    {
        "line": 14,
        "fullcodeline": "s_log(LOG_DEBUG, \"Unbinding service [%s]\", opt->servname);"
    },
    {
        "line": 31,
        "fullcodeline": "s_log(LOG_DEBUG, \"Service [%s] closed\", opt->servname);"
    },
    {
        "line": 15,
        "fullcodeline": "for(i=0; i<opt->local_addr.num; ++i)"
    },
    {
        "line": 16,
        "fullcodeline": "unbind_port(opt, i);"
    },
    {
        "line": 18,
        "fullcodeline": "if(opt->exec_name && opt->connect_addr.names) {"
    },
    {
        "line": 34,
        "fullcodeline": "SERVICE_OPTIONS *garbage=opt;"
    },
    {
        "line": 35,
        "fullcodeline": "opt=opt->next;"
    },
    {
        "line": 36,
        "fullcodeline": "garbage->next=NULL;"
    },
    {
        "line": 37,
        "fullcodeline": "service_free(garbage);"
    },
    {
        "line": 23,
        "fullcodeline": "opt->option.retry=0;"
    },
    {
        "line": 29,
        "fullcodeline": "SSL_CTX_flush_sessions(opt->ctx,"
    },
    {
        "line": 30,
        "fullcodeline": "(long)time(NULL)+opt->session_timeout+1);"
    }
]