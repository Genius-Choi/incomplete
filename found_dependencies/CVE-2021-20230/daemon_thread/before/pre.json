[
    {
        "line": 2,
        "fullcodeline": "(void)arg; /* squash the unused parameter warning */"
    },
    {
        "line": 4,
        "fullcodeline": "tls_alloc(NULL, NULL, \"main\"); /* new thread-local storage */"
    },
    {
        "line": 5,
        "fullcodeline": "main_init();"
    },
    {
        "line": 6,
        "fullcodeline": "SetEvent(main_initialized); /* unlock the GUI thread */"
    },
    {
        "line": 16,
        "fullcodeline": "PostMessage(hwnd, WM_VALID_CONFIG, 0, 0);"
    },
    {
        "line": 19,
        "fullcodeline": "daemon_loop();"
    },
    {
        "line": 20,
        "fullcodeline": "main_cleanup();"
    },
    {
        "line": 21,
        "fullcodeline": "_endthreadex(0); /* SIGNAL_TERMINATE received */"
    },
    {
        "line": 8,
        "fullcodeline": "while(main_configure(cmdline.config_file, NULL)) {"
    },
    {
        "line": 11,
        "fullcodeline": "unbind_ports(); /* in case initialization failed after bind_ports() */"
    },
    {
        "line": 12,
        "fullcodeline": "log_flush(LOG_MODE_ERROR); /* otherwise logs are buffered */"
    },
    {
        "line": 13,
        "fullcodeline": "PostMessage(hwnd, WM_INVALID_CONFIG, 0, 0); /* display error */"
    },
    {
        "line": 14,
        "fullcodeline": "WaitForSingleObject(config_ready, INFINITE);"
    },
    {
        "line": 9,
        "fullcodeline": "if(cmdline.config_file && *cmdline.config_file=='-')"
    },
    {
        "line": 10,
        "fullcodeline": "cmdline.config_file=NULL; /* don't retry commandline switches */"
    }
]