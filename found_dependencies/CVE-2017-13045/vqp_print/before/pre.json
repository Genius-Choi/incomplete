[
    {
        "line": 12,
        "fullcodeline": "tptr=pptr;"
    },
    {
        "line": 13,
        "fullcodeline": "tlen = len;"
    },
    {
        "line": 14,
        "fullcodeline": "vqp_common_header = (const struct vqp_common_header_t *)pptr;"
    },
    {
        "line": 15,
        "fullcodeline": "ND_TCHECK(*vqp_common_header);"
    },
    {
        "line": 38,
        "fullcodeline": "nitems = vqp_common_header->nitems;"
    },
    {
        "line": 49,
        "fullcodeline": "tptr+=sizeof(const struct vqp_common_header_t);"
    },
    {
        "line": 50,
        "fullcodeline": "tlen-=sizeof(const struct vqp_common_header_t);"
    },
    {
        "line": 20,
        "fullcodeline": "if (VQP_EXTRACT_VERSION(vqp_common_header->version) != VQP_VERSION) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (ndo->ndo_vflag < 1) {"
    },
    {
        "line": 39,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\tVQPv%u, %s Message, error-code %s (%u), seq 0x%08x, items %u, length %u\","
    },
    {
        "line": 21,
        "fullcodeline": "ND_PRINT((ndo, \"VQP version %u packet not supported\","
    },
    {
        "line": 52,
        "fullcodeline": "while (nitems > 0 && tlen > 0) {"
    },
    {
        "line": 54,
        "fullcodeline": "vqp_obj_tlv = (const struct vqp_obj_tlv_t *)tptr;"
    },
    {
        "line": 55,
        "fullcodeline": "vqp_obj_type = EXTRACT_32BITS(vqp_obj_tlv->obj_type);"
    },
    {
        "line": 56,
        "fullcodeline": "vqp_obj_len = EXTRACT_16BITS(vqp_obj_tlv->obj_length);"
    },
    {
        "line": 57,
        "fullcodeline": "tptr+=sizeof(struct vqp_obj_tlv_t);"
    },
    {
        "line": 58,
        "fullcodeline": "tlen-=sizeof(struct vqp_obj_tlv_t);"
    },
    {
        "line": 70,
        "fullcodeline": "ND_TCHECK2(*tptr, vqp_obj_len);"
    },
    {
        "line": 93,
        "fullcodeline": "tptr += vqp_obj_len;"
    },
    {
        "line": 94,
        "fullcodeline": "tlen -= vqp_obj_len;"
    },
    {
        "line": 95,
        "fullcodeline": "nitems--;"
    },
    {
        "line": 28,
        "fullcodeline": "ND_PRINT((ndo, \"VQPv%u %s Message, error-code %s (%u), length %u\","
    },
    {
        "line": 40,
        "fullcodeline": "VQP_EXTRACT_VERSION(vqp_common_header->version),"
    },
    {
        "line": 41,
        "fullcodeline": "tok2str(vqp_msg_type_values, \"unknown (%u)\",vqp_common_header->msg_type),"
    },
    {
        "line": 42,
        "fullcodeline": "tok2str(vqp_error_code_values, \"unknown (%u)\",vqp_common_header->error_code),"
    },
    {
        "line": 44,
        "fullcodeline": "EXTRACT_32BITS(&vqp_common_header->sequence),"
    },
    {
        "line": 60,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  %s Object (0x%08x), length %u, value: \","
    },
    {
        "line": 65,
        "fullcodeline": "if (vqp_obj_type == 0 || vqp_obj_len ==0) {"
    },
    {
        "line": 81,
        "fullcodeline": "safeputs(ndo, tptr, vqp_obj_len);"
    },
    {
        "line": 22,
        "fullcodeline": "VQP_EXTRACT_VERSION(vqp_common_header->version)));"
    },
    {
        "line": 29,
        "fullcodeline": "VQP_EXTRACT_VERSION(vqp_common_header->version),"
    },
    {
        "line": 30,
        "fullcodeline": "tok2str(vqp_msg_type_values, \"unknown (%u)\",vqp_common_header->msg_type),"
    },
    {
        "line": 31,
        "fullcodeline": "tok2str(vqp_error_code_values, \"unknown (%u)\",vqp_common_header->error_code),"
    },
    {
        "line": 61,
        "fullcodeline": "tok2str(vqp_obj_values, \"Unknown\", vqp_obj_type),"
    },
    {
        "line": 74,
        "fullcodeline": "ND_PRINT((ndo, \"%s (0x%08x)\", ipaddr_string(ndo, tptr), EXTRACT_32BITS(tptr)));"
    },
    {
        "line": 86,
        "fullcodeline": "ND_PRINT((ndo, \"%s\", etheraddr_string(ndo, tptr)));"
    },
    {
        "line": 89,
        "fullcodeline": "if (ndo->ndo_vflag <= 1)"
    },
    {
        "line": 90,
        "fullcodeline": "print_unknown_data(ndo,tptr, \"\\n\\t    \", vqp_obj_len);"
    }
]