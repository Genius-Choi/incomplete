[
    {
        "line": 2,
        "fullcodeline": "TString *varname = str_checkname(ls);"
    },
    {
        "line": 3,
        "fullcodeline": "FuncState *fs = ls->fs;"
    },
    {
        "line": 4,
        "fullcodeline": "singlevaraux(fs, varname, var, 1);"
    },
    {
        "line": 5,
        "fullcodeline": "if (var->k == VVOID) {  /* global name? */"
    },
    {
        "line": 7,
        "fullcodeline": "singlevaraux(fs, ls->envn, var, 1);  /* get environment variable */"
    },
    {
        "line": 8,
        "fullcodeline": "lua_assert(var->k != VVOID);  /* this one must exist */"
    },
    {
        "line": 9,
        "fullcodeline": "luaK_exp2anyregup(fs, var);  /* but could be a constant */"
    },
    {
        "line": 10,
        "fullcodeline": "codestring(&key, varname);  /* key is variable name */"
    },
    {
        "line": 11,
        "fullcodeline": "luaK_indexed(fs, var, &key);  /* env[varname] */"
    }
]