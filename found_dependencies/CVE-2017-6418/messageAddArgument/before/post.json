[
    {
        "line": 6,
        "fullcodeline": "assert(m != NULL);"
    },
    {
        "line": 18,
        "fullcodeline": "cli_dbgmsg(\"messageAddArgument, arg='%s'\\n\", arg);"
    },
    {
        "line": 41,
        "fullcodeline": "p = m->mimeArguments[offset] = rfc2231(arg);"
    },
    {
        "line": 8,
        "fullcodeline": "if(arg == NULL)"
    },
    {
        "line": 12,
        "fullcodeline": "arg++;"
    },
    {
        "line": 14,
        "fullcodeline": "if(*arg == '\\0')"
    },
    {
        "line": 20,
        "fullcodeline": "if(!usefulArg(arg))"
    },
    {
        "line": 23,
        "fullcodeline": "for(offset = 0; offset < m->numberOfArguments; offset++)"
    },
    {
        "line": 29,
        "fullcodeline": "if(offset == m->numberOfArguments) {"
    },
    {
        "line": 42,
        "fullcodeline": "if(!p) {"
    },
    {
        "line": 48,
        "fullcodeline": "if(strchr(p, '=') == NULL) {"
    },
    {
        "line": 71,
        "fullcodeline": "if((strncasecmp(p, \"filename=\", 9) == 0) || (strncasecmp(p, \"name=\", 5) == 0))"
    },
    {
        "line": 24,
        "fullcodeline": "if(m->mimeArguments[offset] == NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "m->numberOfArguments++;"
    },
    {
        "line": 33,
        "fullcodeline": "q = (char **)cli_realloc(m->mimeArguments, m->numberOfArguments * sizeof(char *));"
    },
    {
        "line": 38,
        "fullcodeline": "m->mimeArguments = q;"
    },
    {
        "line": 44,
        "fullcodeline": "cli_dbgmsg(\"messageAddArgument, error from rfc2231()\\n\");"
    },
    {
        "line": 34,
        "fullcodeline": "if(q == NULL) {"
    },
    {
        "line": 49,
        "fullcodeline": "if(strncmp(p, \"filename\", 8) == 0) {"
    },
    {
        "line": 72,
        "fullcodeline": "if(messageGetMimeType(m) == NOMIME) {"
    },
    {
        "line": 35,
        "fullcodeline": "m->numberOfArguments--;"
    },
    {
        "line": 54,
        "fullcodeline": "cli_dbgmsg(\"Possible data corruption fixed\\n\");"
    },
    {
        "line": 55,
        "fullcodeline": "p[8] = '=';"
    },
    {
        "line": 73,
        "fullcodeline": "cli_dbgmsg(\"Force mime encoding to application\\n\");"
    },
    {
        "line": 74,
        "fullcodeline": "messageSetMimeType(m, \"application\");"
    },
    {
        "line": 26,
        "fullcodeline": "else if(strcasecmp(arg, m->mimeArguments[offset]) == 0)"
    },
    {
        "line": 59,
        "fullcodeline": "free(m->mimeArguments[offset]);"
    },
    {
        "line": 60,
        "fullcodeline": "m->mimeArguments[offset] = NULL;"
    },
    {
        "line": 58,
        "fullcodeline": "cli_dbgmsg(\"messageAddArgument, '%s' contains no '='\\n\", p);"
    }
]