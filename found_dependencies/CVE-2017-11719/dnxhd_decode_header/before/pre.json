[
    {
        "line": 6,
        "fullcodeline": "int old_bit_depth = ctx->bit_depth, bitdepth;"
    },
    {
        "line": 14,
        "fullcodeline": "header_prefix = ff_dnxhd_parse_header_prefix(buf);"
    },
    {
        "line": 30,
        "fullcodeline": "ctx->mbaff = (buf[0x6] >> 5) & 1;"
    },
    {
        "line": 32,
        "fullcodeline": "ctx->height = AV_RB16(buf + 0x18);"
    },
    {
        "line": 33,
        "fullcodeline": "ctx->width  = AV_RB16(buf + 0x1a);"
    },
    {
        "line": 45,
        "fullcodeline": "cid = AV_RB32(buf + 0x28);"
    },
    {
        "line": 47,
        "fullcodeline": "ctx->avctx->profile = dnxhd_get_profile(cid);"
    },
    {
        "line": 55,
        "fullcodeline": "ctx->act = buf[0x2C] & 7;"
    },
    {
        "line": 88,
        "fullcodeline": "ctx->avctx->bits_per_raw_sample = ctx->bit_depth = bitdepth;"
    },
    {
        "line": 113,
        "fullcodeline": "ctx->mb_height = AV_RB16(buf + 0x16c);"
    },
    {
        "line": 118,
        "fullcodeline": "av_log(ctx->avctx, AV_LOG_VERBOSE, \"%dx%d, 4:%s %d bits, MBAFF=%d ACT=%d\\n\","
    },
    {
        "line": 8,
        "fullcodeline": "if (buf_size < 0x280) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (header_prefix == 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (buf[5] & 2) { /* interlaced */"
    },
    {
        "line": 35,
        "fullcodeline": "switch(buf[0x21] >> 5) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (ctx->mbaff && ctx->cid_table->cid != 1260)"
    },
    {
        "line": 60,
        "fullcodeline": "ctx->is_444 = (buf[0x2C] >> 6) & 1;"
    },
    {
        "line": 89,
        "fullcodeline": "if (ctx->bit_depth != old_bit_depth) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (buf_size < ctx->cid_table->coding_unit_size) {"
    },
    {
        "line": 112,
        "fullcodeline": "ctx->mb_width  = (ctx->width + 15)>> 4;"
    },
    {
        "line": 115,
        "fullcodeline": "if ((ctx->height + 15) >> 4 == ctx->mb_height && frame->interlaced_frame)"
    },
    {
        "line": 135,
        "fullcodeline": "if (buf_size < ctx->data_offset) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (ctx->mb_height > FF_ARRAY_ELEMS(ctx->mb_scan_index)) {"
    },
    {
        "line": 147,
        "fullcodeline": "for (i = 0; i < ctx->mb_height; i++) {"
    },
    {
        "line": 9,
        "fullcodeline": "av_log(ctx->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 22,
        "fullcodeline": "ctx->cur_field = buf[5] & 1;"
    },
    {
        "line": 23,
        "fullcodeline": "frame->interlaced_frame = 1;"
    },
    {
        "line": 25,
        "fullcodeline": "av_log(ctx->avctx, AV_LOG_DEBUG,"
    },
    {
        "line": 36,
        "fullcodeline": "case 1: bitdepth = 8; break;"
    },
    {
        "line": 37,
        "fullcodeline": "case 2: bitdepth = 10; break;"
    },
    {
        "line": 38,
        "fullcodeline": "case 3: bitdepth = 12; break;"
    },
    {
        "line": 49,
        "fullcodeline": "if ((ret = dnxhd_init_vlc(ctx, cid, bitdepth)) < 0)"
    },
    {
        "line": 52,
        "fullcodeline": "av_log(ctx->avctx, AV_LOG_WARNING,"
    },
    {
        "line": 56,
        "fullcodeline": "if (ctx->act && ctx->cid_table->cid != 1256 && ctx->cid_table->cid != 1270)"
    },
    {
        "line": 57,
        "fullcodeline": "av_log(ctx->avctx, AV_LOG_WARNING,"
    },
    {
        "line": 90,
        "fullcodeline": "ff_blockdsp_init(&ctx->bdsp, ctx->avctx);"
    },
    {
        "line": 91,
        "fullcodeline": "ff_idctdsp_init(&ctx->idsp, ctx->avctx);"
    },
    {
        "line": 92,
        "fullcodeline": "ff_init_scantable(ctx->idsp.idct_permutation, &ctx->scantable,"
    },
    {
        "line": 98,
        "fullcodeline": "if (ctx->width != ctx->cid_table->width &&"
    },
    {
        "line": 99,
        "fullcodeline": "ctx->cid_table->width != DNXHD_VARIABLE) {"
    },
    {
        "line": 100,
        "fullcodeline": "av_reduce(&ctx->avctx->sample_aspect_ratio.num,"
    },
    {
        "line": 103,
        "fullcodeline": "ctx->width = ctx->cid_table->width;"
    },
    {
        "line": 116,
        "fullcodeline": "ctx->height <<= 1;"
    },
    {
        "line": 123,
        "fullcodeline": "if (ctx->mb_height > 68 && ff_dnxhd_check_header_prefix_hr(header_prefix)) {"
    },
    {
        "line": 124,
        "fullcodeline": "ctx->data_offset = 0x170 + (ctx->mb_height << 2);"
    },
    {
        "line": 148,
        "fullcodeline": "ctx->mb_scan_index[i] = AV_RB32(buf + 0x170 + (i << 2));"
    },
    {
        "line": 24,
        "fullcodeline": "frame->top_field_first  = first_field ^ ctx->cur_field;"
    },
    {
        "line": 26,
        "fullcodeline": "\"interlaced %d, cur field %d\\n\", buf[5] & 3, ctx->cur_field);"
    },
    {
        "line": 28,
        "fullcodeline": "ctx->cur_field = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "\"Unknown bitdepth indicator (%d)\\n\", buf[0x21] >> 5);"
    },
    {
        "line": 62,
        "fullcodeline": "if (bitdepth == 8) {"
    },
    {
        "line": 132,
        "fullcodeline": "ctx->data_offset = 0x280;"
    },
    {
        "line": 74,
        "fullcodeline": "} else if (bitdepth == 12) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (buf_size - ctx->data_offset < ctx->mb_scan_index[i]) {"
    },
    {
        "line": 75,
        "fullcodeline": "ctx->decode_dct_block = dnxhd_decode_dct_block_12;"
    },
    {
        "line": 76,
        "fullcodeline": "ctx->pix_fmt = AV_PIX_FMT_YUV422P12;"
    },
    {
        "line": 126,
        "fullcodeline": "if (ctx->mb_height > 68 ||"
    },
    {
        "line": 127,
        "fullcodeline": "(ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {"
    },
    {
        "line": 65,
        "fullcodeline": "} else if (bitdepth == 10) {"
    },
    {
        "line": 77,
        "fullcodeline": "} else if (bitdepth == 10) {"
    },
    {
        "line": 67,
        "fullcodeline": "ctx->pix_fmt = ctx->act ? AV_PIX_FMT_YUV444P10"
    },
    {
        "line": 70,
        "fullcodeline": "ctx->decode_dct_block = dnxhd_decode_dct_block_12_444;"
    },
    {
        "line": 82,
        "fullcodeline": "ctx->pix_fmt = AV_PIX_FMT_YUV422P10;"
    },
    {
        "line": 71,
        "fullcodeline": "ctx->pix_fmt = ctx->act ? AV_PIX_FMT_YUV444P12"
    },
    {
        "line": 78,
        "fullcodeline": "if (ctx->avctx->profile == FF_PROFILE_DNXHR_HQX)"
    },
    {
        "line": 84,
        "fullcodeline": "ctx->decode_dct_block = dnxhd_decode_dct_block_8;"
    },
    {
        "line": 85,
        "fullcodeline": "ctx->pix_fmt = AV_PIX_FMT_YUV422P;"
    },
    {
        "line": 81,
        "fullcodeline": "ctx->decode_dct_block = dnxhd_decode_dct_block_10;"
    }
]