[
    {
        "line": 2,
        "fullcodeline": "db = app.db"
    },
    {
        "line": 3,
        "fullcodeline": "requester = create_user_with_scopes(\"admin:users\")"
    },
    {
        "line": 4,
        "fullcodeline": "requester.admin = is_admin"
    },
    {
        "line": 5,
        "fullcodeline": "db.commit()"
    },
    {
        "line": 6,
        "fullcodeline": "names = ['c', 'd']"
    },
    {
        "line": 7,
        "fullcodeline": "r = await api_request("
    },
    {
        "line": 19,
        "fullcodeline": "reply = r.json()"
    },
    {
        "line": 20,
        "fullcodeline": "r_names = [user['name'] for user in reply]"
    },
    {
        "line": 21,
        "fullcodeline": "assert names == r_names"
    },
    {
        "line": 23,
        "fullcodeline": "for name in names:"
    },
    {
        "line": 11,
        "fullcodeline": "data=json.dumps({'usernames': names, 'admin': True}),"
    },
    {
        "line": 15,
        "fullcodeline": "assert r.status_code == 201"
    },
    {
        "line": 17,
        "fullcodeline": "assert r.status_code == 403"
    },
    {
        "line": 24,
        "fullcodeline": "user = find_user(db, name)"
    },
    {
        "line": 25,
        "fullcodeline": "assert user is not None"
    },
    {
        "line": 26,
        "fullcodeline": "assert user.name == name"
    },
    {
        "line": 27,
        "fullcodeline": "assert user.admin"
    },
    {
        "line": 28,
        "fullcodeline": "assert orm.Role.find(db, 'user') in user.roles"
    },
    {
        "line": 29,
        "fullcodeline": "assert orm.Role.find(db, 'admin') in user.roles"
    }
]