[
    {
        "line": 4,
        "fullcodeline": "int i = 1;"
    },
    {
        "line": 7,
        "fullcodeline": "const char *version = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "char *filename_out = NULL;"
    },
    {
        "line": 110,
        "fullcodeline": "i = optind;"
    },
    {
        "line": 112,
        "fullcodeline": "memset (&dwg, 0, sizeof (Dwg_Data));"
    },
    {
        "line": 113,
        "fullcodeline": "dwg.opts = opts;"
    },
    {
        "line": 115,
        "fullcodeline": "filename_in = argv[i];"
    },
    {
        "line": 138,
        "fullcodeline": "printf (\"Reading DWG file %s\\n\", filename_in);"
    },
    {
        "line": 139,
        "fullcodeline": "error = dwg_read_file (filename_in, &dwg);"
    },
    {
        "line": 142,
        "fullcodeline": "num_objects = dwg.num_objects;"
    },
    {
        "line": 156,
        "fullcodeline": "printf (\"Writing DWG file %s\", filename_out);"
    },
    {
        "line": 158,
        "fullcodeline": "error = 1;"
    },
    {
        "line": 209,
        "fullcodeline": "dwg_free (&dwg); // this is slow, but on needed on low memory systems"
    },
    {
        "line": 21,
        "fullcodeline": "if (argc < 2)"
    },
    {
        "line": 29,
        "fullcodeline": "((c = getopt (argc, argv, \":a:v::o:hi\")) != -1)"
    },
    {
        "line": 116,
        "fullcodeline": "if (!filename_in)"
    },
    {
        "line": 121,
        "fullcodeline": "if (!filename_out)"
    },
    {
        "line": 128,
        "fullcodeline": "if (!filename_out || !strcmp (filename_in, filename_out))"
    },
    {
        "line": 140,
        "fullcodeline": "if (error >= DWG_ERR_CRITICAL)"
    },
    {
        "line": 143,
        "fullcodeline": "if (!num_objects)"
    },
    {
        "line": 202,
        "fullcodeline": "if (error >= DWG_ERR_CRITICAL)"
    },
    {
        "line": 224,
        "fullcodeline": "if (filename_out != argv[i + 1])"
    },
    {
        "line": 226,
        "fullcodeline": "return error >= DWG_ERR_CRITICAL ? error : 0;"
    },
    {
        "line": 118,
        "fullcodeline": "puts (\"No input file specified\");"
    },
    {
        "line": 141,
        "fullcodeline": "fprintf (stderr, \"READ ERROR 0x%x\\n\", error);"
    },
    {
        "line": 145,
        "fullcodeline": "printf (\"Read 0 objects\\n\");"
    },
    {
        "line": 155,
        "fullcodeline": "printf (\"\\n\");"
    },
    {
        "line": 204,
        "fullcodeline": "printf (\"WRITE ERROR 0x%x\\n\", error);"
    },
    {
        "line": 225,
        "fullcodeline": "free (filename_out);"
    },
    {
        "line": 22,
        "fullcodeline": "return usage ();"
    },
    {
        "line": 32,
        "fullcodeline": "if (c == -1)"
    },
    {
        "line": 123,
        "fullcodeline": "if (argc > i + 1)"
    },
    {
        "line": 130,
        "fullcodeline": "if (filename_out != argv[i + 1])"
    },
    {
        "line": 132,
        "fullcodeline": "return usage ();"
    },
    {
        "line": 146,
        "fullcodeline": "if (error >= DWG_ERR_CRITICAL)"
    },
    {
        "line": 205,
        "fullcodeline": "if (filename_out != argv[i + 1])"
    },
    {
        "line": 42,
        "fullcodeline": "fprintf (stderr, \"%s: option '-%c' requires an argument\\n\", argv[0],"
    },
    {
        "line": 72,
        "fullcodeline": "filename_out = optarg;"
    },
    {
        "line": 75,
        "fullcodeline": "dwg_version = dwg_version_as (optarg);"
    },
    {
        "line": 81,
        "fullcodeline": "version = optarg;"
    },
    {
        "line": 84,
        "fullcodeline": "i = (optind > 0 && optind < argc) ? optind - 1 : 1;"
    },
    {
        "line": 103,
        "fullcodeline": "fprintf (stderr, \"%s: invalid option '-%c' ignored\\n\", argv[0],"
    },
    {
        "line": 124,
        "fullcodeline": "filename_out = argv[i + 1];"
    },
    {
        "line": 131,
        "fullcodeline": "free (filename_out);"
    },
    {
        "line": 206,
        "fullcodeline": "free (filename_out);"
    },
    {
        "line": 37,
        "fullcodeline": "if (optarg && !strcmp (optarg, \"v\"))"
    },
    {
        "line": 69,
        "fullcodeline": "return opt_version ();"
    },
    {
        "line": 76,
        "fullcodeline": "if (dwg_version == R_INVALID)"
    },
    {
        "line": 85,
        "fullcodeline": "if (!memcmp (argv[i], \"-v\", 2))"
    },
    {
        "line": 89,
        "fullcodeline": "if (opts < 0 || opts > 9)"
    },
    {
        "line": 101,
        "fullcodeline": "return help ();"
    },
    {
        "line": 107,
        "fullcodeline": "return usage ();"
    },
    {
        "line": 126,
        "fullcodeline": "filename_out = suffix (filename_in, \"-rewrite.dwg\");"
    },
    {
        "line": 148,
        "fullcodeline": "if (filename_out != argv[i + 1])"
    },
    {
        "line": 39,
        "fullcodeline": "opts = 1;"
    },
    {
        "line": 78,
        "fullcodeline": "fprintf (stderr, \"Invalid version '%s'\\n\", argv[1]);"
    },
    {
        "line": 87,
        "fullcodeline": "opts = argv[i][2] ? argv[i][2] - '0' : 1;"
    },
    {
        "line": 149,
        "fullcodeline": "free (filename_out);"
    },
    {
        "line": 79,
        "fullcodeline": "return usage ();"
    },
    {
        "line": 90,
        "fullcodeline": "return usage ();"
    }
]