[
    {
        "line": 4,
        "fullcodeline": "struct thread_info *thread = task_thread_info(p);"
    },
    {
        "line": 5,
        "fullcodeline": "struct pt_regs *childregs = task_pt_regs(p);"
    },
    {
        "line": 7,
        "fullcodeline": "memset(&thread->cpu_context, 0, sizeof(struct cpu_context_save));"
    },
    {
        "line": 20,
        "fullcodeline": "thread->cpu_context.pc = (unsigned long)ret_from_fork;"
    },
    {
        "line": 21,
        "fullcodeline": "thread->cpu_context.sp = (unsigned long)childregs;"
    },
    {
        "line": 23,
        "fullcodeline": "clear_ptrace_hw_breakpoint(p);"
    },
    {
        "line": 28,
        "fullcodeline": "thread_notify(THREAD_NOTIFY_COPY, thread);"
    },
    {
        "line": 9,
        "fullcodeline": "if (likely(!(p->flags & PF_KTHREAD))) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (clone_flags & CLONE_SETTLS)"
    },
    {
        "line": 11,
        "fullcodeline": "childregs->ARM_r0 = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "thread->tp_value = childregs->ARM_r3;"
    },
    {
        "line": 15,
        "fullcodeline": "memset(childregs, 0, sizeof(struct pt_regs));"
    },
    {
        "line": 16,
        "fullcodeline": "thread->cpu_context.r4 = stk_sz;"
    },
    {
        "line": 17,
        "fullcodeline": "thread->cpu_context.r5 = stack_start;"
    },
    {
        "line": 18,
        "fullcodeline": "childregs->ARM_cpsr = SVC_MODE;"
    },
    {
        "line": 13,
        "fullcodeline": "childregs->ARM_sp = stack_start;"
    }
]