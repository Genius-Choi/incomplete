[
    {
        "line": 4,
        "fullcodeline": "apr_status_t status = APR_EINVAL;"
    },
    {
        "line": 5,
        "fullcodeline": "ap_assert(stream);"
    },
    {
        "line": 6,
        "fullcodeline": "ap_assert(stream->session);"
    },
    {
        "line": 7,
        "fullcodeline": "ap_assert(stream->session->mplx);"
    },
    {
        "line": 50,
        "fullcodeline": "h2_stream_rst(stream, H2_ERR_INTERNAL_ERROR);"
    },
    {
        "line": 51,
        "fullcodeline": "ap_log_cerror(APLOG_MARK, APLOG_TRACE1, status, stream->session->c,"
    },
    {
        "line": 9,
        "fullcodeline": "if (!stream->scheduled) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (h2_stream_is_ready(stream)) {"
    },
    {
        "line": 11,
        "fullcodeline": "close_input(stream);"
    },
    {
        "line": 16,
        "fullcodeline": "return h2_mplx_process(stream->session->mplx, stream, cmp, ctx);"
    },
    {
        "line": 18,
        "fullcodeline": "else if (!stream->request && stream->rtmp) {"
    },
    {
        "line": 21,
        "fullcodeline": "status = h2_request_end_headers(stream->rtmp, stream->pool, eos);"
    },
    {
        "line": 22,
        "fullcodeline": "if (status == APR_SUCCESS) {"
    },
    {
        "line": 46,
        "fullcodeline": "status = APR_ECONNRESET;"
    },
    {
        "line": 23,
        "fullcodeline": "stream->rtmp->serialize = h2_config_geti(stream->session->config,"
    },
    {
        "line": 26,
        "fullcodeline": "stream->request = stream->rtmp;"
    },
    {
        "line": 27,
        "fullcodeline": "stream->rtmp = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "stream->scheduled = 1;"
    },
    {
        "line": 30,
        "fullcodeline": "stream->push_policy = h2_push_policy_determine(stream->request->headers,"
    },
    {
        "line": 34,
        "fullcodeline": "status = h2_mplx_process(stream->session->mplx, stream, cmp, ctx);"
    }
]