[
    {
        "line": 5,
        "fullcodeline": "ap_assert(stream);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!stream->has_response) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (h2_stream_is_scheduled(stream)) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (name[0] == ':') {"
    },
    {
        "line": 27,
        "fullcodeline": "if (name[0] != ':') {"
    },
    {
        "line": 42,
        "fullcodeline": "return add_trailer(stream, name, nlen, value, vlen);"
    },
    {
        "line": 28,
        "fullcodeline": "++stream->request_headers_added;"
    },
    {
        "line": 45,
        "fullcodeline": "if (!stream->rtmp) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (stream->state != H2_STREAM_ST_OPEN) {"
    },
    {
        "line": 52,
        "fullcodeline": "return h2_request_add_header(stream->rtmp, stream->pool,"
    },
    {
        "line": 9,
        "fullcodeline": "if ((vlen) > stream->session->s->limit_req_line) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (stream->request_headers_added"
    },
    {
        "line": 46,
        "fullcodeline": "stream->rtmp = h2_req_create(stream->id, stream->pool,"
    },
    {
        "line": 11,
        "fullcodeline": "ap_log_cerror(APLOG_MARK, APLOG_TRACE1, 0, stream->session->c,"
    },
    {
        "line": 32,
        "fullcodeline": "ap_log_cerror(APLOG_MARK, APLOG_TRACE1, 0, stream->session->c,"
    },
    {
        "line": 14,
        "fullcodeline": "return h2_stream_set_error(stream,"
    },
    {
        "line": 20,
        "fullcodeline": "ap_log_cerror(APLOG_MARK, APLOG_TRACE1, 0, stream->session->c,"
    },
    {
        "line": 35,
        "fullcodeline": "return h2_stream_set_error(stream,"
    },
    {
        "line": 23,
        "fullcodeline": "return h2_stream_set_error(stream,"
    }
]