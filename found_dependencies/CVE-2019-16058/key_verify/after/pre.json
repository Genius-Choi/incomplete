[
    {
        "line": 3,
        "fullcodeline": "int ok = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "unsigned char challenge[30];"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned char *signature = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "const EVP_MD *md = EVP_sha1();"
    },
    {
        "line": 8,
        "fullcodeline": "EVP_MD_CTX *md_ctx = EVP_MD_CTX_new();"
    },
    {
        "line": 9,
        "fullcodeline": "EVP_PKEY *privkey = PKCS11_get_private_key(authkey);"
    },
    {
        "line": 10,
        "fullcodeline": "EVP_PKEY *pubkey = PKCS11_get_public_key(authkey);"
    },
    {
        "line": 14,
        "fullcodeline": "siglen = EVP_PKEY_size(privkey);"
    },
    {
        "line": 17,
        "fullcodeline": "signature = malloc(siglen);"
    },
    {
        "line": 44,
        "fullcodeline": "ok = 1;"
    },
    {
        "line": 47,
        "fullcodeline": "free(signature);"
    },
    {
        "line": 12,
        "fullcodeline": "if (NULL == privkey)"
    },
    {
        "line": 15,
        "fullcodeline": "if (siglen <= 0)"
    },
    {
        "line": 18,
        "fullcodeline": "if (NULL == signature)"
    },
    {
        "line": 28,
        "fullcodeline": "if (1 != randomize(pamh, challenge, sizeof challenge)) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (NULL == pubkey || NULL == privkey || NULL == md_ctx || NULL == md"
    },
    {
        "line": 48,
        "fullcodeline": "if (NULL != pubkey)"
    },
    {
        "line": 50,
        "fullcodeline": "if (NULL != privkey)"
    },
    {
        "line": 52,
        "fullcodeline": "if (NULL != md_ctx) {"
    },
    {
        "line": 38,
        "fullcodeline": "|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)) {"
    },
    {
        "line": 39,
        "fullcodeline": "pam_syslog(pamh, LOG_DEBUG, \"Error verifying key: %s\\n\","
    },
    {
        "line": 41,
        "fullcodeline": "prompt(flags, pamh, PAM_ERROR_MSG, NULL, _(\"Error verifying key\"));"
    },
    {
        "line": 49,
        "fullcodeline": "EVP_PKEY_free(pubkey);"
    },
    {
        "line": 51,
        "fullcodeline": "EVP_PKEY_free(privkey);"
    },
    {
        "line": 53,
        "fullcodeline": "EVP_MD_CTX_free(md_ctx);"
    },
    {
        "line": 37,
        "fullcodeline": "|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)"
    },
    {
        "line": 40,
        "fullcodeline": "ERR_reason_error_string(ERR_get_error()));"
    },
    {
        "line": 36,
        "fullcodeline": "|| !EVP_VerifyInit(md_ctx, md)"
    },
    {
        "line": 35,
        "fullcodeline": "|| !EVP_MD_CTX_reset(md_ctx)"
    },
    {
        "line": 34,
        "fullcodeline": "|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)"
    },
    {
        "line": 33,
        "fullcodeline": "|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)"
    },
    {
        "line": 32,
        "fullcodeline": "|| !EVP_SignInit(md_ctx, md)"
    }
]