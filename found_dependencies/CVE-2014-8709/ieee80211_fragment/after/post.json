[
    {
        "line": 5,
        "fullcodeline": "struct ieee80211_local *local = tx->local;"
    },
    {
        "line": 8,
        "fullcodeline": "int per_fragm = frag_threshold - hdrlen - FCS_LEN;"
    },
    {
        "line": 9,
        "fullcodeline": "int pos = hdrlen + per_fragm;"
    },
    {
        "line": 10,
        "fullcodeline": "int rem = skb->len - hdrlen - per_fragm;"
    },
    {
        "line": 57,
        "fullcodeline": "skb_trim(skb, hdrlen + per_fragm);"
    },
    {
        "line": 12,
        "fullcodeline": "if (WARN_ON(rem < 0))"
    },
    {
        "line": 18,
        "fullcodeline": "int fraglen = per_fragm;"
    },
    {
        "line": 22,
        "fullcodeline": "rem -= fraglen;"
    },
    {
        "line": 23,
        "fullcodeline": "tmp = dev_alloc_skb(local->tx_headroom +"
    },
    {
        "line": 30,
        "fullcodeline": "__skb_queue_tail(&tx->skbs, tmp);"
    },
    {
        "line": 32,
        "fullcodeline": "skb_reserve(tmp,"
    },
    {
        "line": 36,
        "fullcodeline": "memcpy(tmp->cb, skb->cb, sizeof(tmp->cb));"
    },
    {
        "line": 38,
        "fullcodeline": "info = IEEE80211_SKB_CB(tmp);"
    },
    {
        "line": 39,
        "fullcodeline": "info->flags &= ~(IEEE80211_TX_CTL_CLEAR_PS_FILT |"
    },
    {
        "line": 45,
        "fullcodeline": "skb_copy_queue_mapping(tmp, skb);"
    },
    {
        "line": 46,
        "fullcodeline": "tmp->priority = skb->priority;"
    },
    {
        "line": 47,
        "fullcodeline": "tmp->dev = skb->dev;"
    },
    {
        "line": 50,
        "fullcodeline": "memcpy(skb_put(tmp, hdrlen), skb->data, hdrlen);"
    },
    {
        "line": 51,
        "fullcodeline": "memcpy(skb_put(tmp, fraglen), skb->data + pos, fraglen);"
    },
    {
        "line": 53,
        "fullcodeline": "pos += fraglen;"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 20,
        "fullcodeline": "if (fraglen > rem)"
    },
    {
        "line": 27,
        "fullcodeline": "if (!tmp)"
    },
    {
        "line": 33,
        "fullcodeline": "local->tx_headroom + tx->sdata->encrypt_headroom);"
    },
    {
        "line": 21,
        "fullcodeline": "fraglen = rem;"
    },
    {
        "line": 43,
        "fullcodeline": "info->flags |= IEEE80211_TX_CTL_MORE_FRAMES;"
    },
    {
        "line": 28,
        "fullcodeline": "return -ENOMEM;"
    }
]