[
    {
        "line": 3,
        "fullcodeline": "xmlXPathObject* result = xmlXPathEval((const xmlChar*)xpath.c_str(), ctxt);"
    },
    {
        "line": 20,
        "fullcodeline": "xmlNodeSet* nodeset = result->nodesetval;"
    },
    {
        "line": 21,
        "fullcodeline": "XMLSharedNodeList* nodes = new XMLSharedNodeList();"
    },
    {
        "line": 31,
        "fullcodeline": "xmlXPathFreeObject(result);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!result) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (result->type != XPATH_NODESET) {"
    },
    {
        "line": 6,
        "fullcodeline": "xmlFreeDoc(ctxt->doc);"
    },
    {
        "line": 7,
        "fullcodeline": "xmlXPathFreeContext(ctxt);"
    },
    {
        "line": 13,
        "fullcodeline": "xmlXPathFreeObject(result);"
    },
    {
        "line": 14,
        "fullcodeline": "xmlFreeDoc(ctxt->doc);"
    },
    {
        "line": 15,
        "fullcodeline": "xmlXPathFreeContext(ctxt);"
    },
    {
        "line": 9,
        "fullcodeline": "throw XMLException(\"Invalid XPath: \" + xpath);"
    },
    {
        "line": 17,
        "fullcodeline": "throw XMLException(\"Only nodeset result types are supported.\");"
    },
    {
        "line": 23,
        "fullcodeline": "for (int i = 0; i < nodeset->nodeNr; ++i) {"
    },
    {
        "line": 24,
        "fullcodeline": "XMLNode* node = readnode(nodeset->nodeTab[i]);"
    },
    {
        "line": 25,
        "fullcodeline": "nodes->push_back(boost::shared_ptr<XMLNode>(node));"
    }
]