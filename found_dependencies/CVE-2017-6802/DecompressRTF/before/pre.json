[
    {
        "line": 9,
        "fullcodeline": "comp_Prebuf.size = strlen(RTF_PREBUF);"
    },
    {
        "line": 10,
        "fullcodeline": "comp_Prebuf.data = calloc(comp_Prebuf.size+1, 1);"
    },
    {
        "line": 11,
        "fullcodeline": "ALLOCCHECK_CHAR(comp_Prebuf.data);"
    },
    {
        "line": 12,
        "fullcodeline": "memcpy(comp_Prebuf.data, RTF_PREBUF, comp_Prebuf.size);"
    },
    {
        "line": 14,
        "fullcodeline": "src = p->data;"
    },
    {
        "line": 15,
        "fullcodeline": "in = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "compressedSize = (ULONG)SwapDWord((BYTE*)src + in, 4);"
    },
    {
        "line": 22,
        "fullcodeline": "in += 4;"
    },
    {
        "line": 23,
        "fullcodeline": "uncompressedSize = (ULONG)SwapDWord((BYTE*)src + in, 4);"
    },
    {
        "line": 24,
        "fullcodeline": "in += 4;"
    },
    {
        "line": 25,
        "fullcodeline": "magic = SwapDWord((BYTE*)src + in, 4);"
    },
    {
        "line": 26,
        "fullcodeline": "in += 4;"
    },
    {
        "line": 27,
        "fullcodeline": "in += 4;"
    },
    {
        "line": 17,
        "fullcodeline": "if (p->size < 20) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (compressedSize != p->size - 4) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (magic == 0x414c454d) {"
    },
    {
        "line": 18,
        "fullcodeline": "printf(\"File too small\\n\");"
    },
    {
        "line": 39,
        "fullcodeline": "dst = calloc(uncompressedSize, 1);"
    },
    {
        "line": 40,
        "fullcodeline": "ALLOCCHECK_CHAR(dst);"
    },
    {
        "line": 31,
        "fullcodeline": "printf(\" Size Mismatch: %u != %i\\n\", compressedSize, p->size - 4);"
    },
    {
        "line": 42,
        "fullcodeline": "} else if (magic == 0x75465a4c) {"
    },
    {
        "line": 44,
        "fullcodeline": "int flagCount = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "int flags = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "dst = calloc(comp_Prebuf.size + uncompressedSize, 1);"
    },
    {
        "line": 52,
        "fullcodeline": "ALLOCCHECK_CHAR(dst);"
    },
    {
        "line": 53,
        "fullcodeline": "memcpy(dst, comp_Prebuf.data, comp_Prebuf.size);"
    },
    {
        "line": 54,
        "fullcodeline": "out = comp_Prebuf.size;"
    },
    {
        "line": 88,
        "fullcodeline": "src = dst;"
    },
    {
        "line": 89,
        "fullcodeline": "dst = calloc(uncompressedSize, 1);"
    },
    {
        "line": 90,
        "fullcodeline": "ALLOCCHECK_CHAR(dst);"
    },
    {
        "line": 91,
        "fullcodeline": "memcpy(dst, src + comp_Prebuf.size, uncompressedSize);"
    },
    {
        "line": 47,
        "fullcodeline": "if (comp_Prebuf.size >= INT_MAX - uncompressedSize) {"
    },
    {
        "line": 55,
        "fullcodeline": "while (out < (comp_Prebuf.size + uncompressedSize)) {"
    },
    {
        "line": 57,
        "fullcodeline": "flags = (flagCount++ % 8 == 0) ? src[in++] : flags >> 1;"
    },
    {
        "line": 49,
        "fullcodeline": "exit(-1);"
    },
    {
        "line": 58,
        "fullcodeline": "if ((flags & 1) == 1) { // each flag bit is 1 for reference, 0 for literal"
    },
    {
        "line": 59,
        "fullcodeline": "unsigned int offset = src[in++];"
    },
    {
        "line": 60,
        "fullcodeline": "unsigned int length = src[in++];"
    },
    {
        "line": 62,
        "fullcodeline": "offset = (offset << 4) | (length >> 4); // the offset relative to block start"
    },
    {
        "line": 63,
        "fullcodeline": "length = (length & 0xF) + 2; // the number of bytes to copy"
    },
    {
        "line": 69,
        "fullcodeline": "offset = (out / 4096) * 4096 + offset;"
    },
    {
        "line": 74,
        "fullcodeline": "end = offset + length;"
    },
    {
        "line": 70,
        "fullcodeline": "if (offset >= out) // take from previous block"
    },
    {
        "line": 77,
        "fullcodeline": "dst[out++] = dst[offset++];"
    },
    {
        "line": 84,
        "fullcodeline": "dst[out++] = src[in++];"
    },
    {
        "line": 71,
        "fullcodeline": "offset -= 4096;"
    },
    {
        "line": 75,
        "fullcodeline": "while ((offset < end) && (out < (comp_Prebuf.size + uncompressedSize))"
    },
    {
        "line": 76,
        "fullcodeline": "&& (offset < (comp_Prebuf.size + uncompressedSize)))"
    },
    {
        "line": 79,
        "fullcodeline": "if ((out >= (comp_Prebuf.size + uncompressedSize)) ||"
    },
    {
        "line": 80,
        "fullcodeline": "(in >= p->size)) {"
    },
    {
        "line": 82,
        "fullcodeline": "exit(-1);"
    }
]