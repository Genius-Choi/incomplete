[
    {
        "line": 4,
        "fullcodeline": "const uint8_t *p = pkts;"
    },
    {
        "line": 5,
        "fullcodeline": "const uint8_t *pend = pkts + pktlen;"
    },
    {
        "line": 6,
        "fullcodeline": "pgpDigParams digp = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "pgpDigParams selfsig = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "int alloced = 16; /* plenty for normal cases */"
    },
    {
        "line": 10,
        "fullcodeline": "struct pgpPkt *all = xmalloc(alloced * sizeof(*all));"
    },
    {
        "line": 11,
        "fullcodeline": "int rc = -1; /* assume failure */"
    },
    {
        "line": 12,
        "fullcodeline": "int expect = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int prevtag = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "rc = (digp && (p == pend) && expect == 0) ? 0 : -1;"
    },
    {
        "line": 69,
        "fullcodeline": "free(all);"
    },
    {
        "line": 15,
        "fullcodeline": "while (p < pend) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (ret && rc == 0) {"
    },
    {
        "line": 54,
        "fullcodeline": "prevtag = pkt->tag;"
    },
    {
        "line": 56,
        "fullcodeline": "i++;"
    },
    {
        "line": 57,
        "fullcodeline": "p += (pkt->body - pkt->head) + pkt->blen;"
    },
    {
        "line": 71,
        "fullcodeline": "*ret = digp;"
    },
    {
        "line": 17,
        "fullcodeline": "if (decodePkt(p, (pend - p), pkt))"
    },
    {
        "line": 20,
        "fullcodeline": "if (digp == NULL) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (pgpPrtPkt(pkt, selfsig ? selfsig : digp))"
    },
    {
        "line": 52,
        "fullcodeline": "if (pkt->tag == PGPTAG_PUBLIC_SUBKEY)"
    },
    {
        "line": 58,
        "fullcodeline": "if (pkttype == PGPTAG_SIGNATURE)"
    },
    {
        "line": 61,
        "fullcodeline": "if (alloced <= i) {"
    },
    {
        "line": 73,
        "fullcodeline": "pgpDigParamsFree(digp);"
    },
    {
        "line": 31,
        "fullcodeline": "selfsig = pgpDigParamsNew(pkt->tag);"
    },
    {
        "line": 44,
        "fullcodeline": "int xx = pgpVerifySelf(digp, selfsig, all, i);"
    },
    {
        "line": 46,
        "fullcodeline": "selfsig = pgpDigParamsFree(selfsig);"
    },
    {
        "line": 49,
        "fullcodeline": "expect = 0;"
    },
    {
        "line": 53,
        "fullcodeline": "expect = PGPTAG_SIGNATURE;"
    },
    {
        "line": 62,
        "fullcodeline": "alloced *= 2;"
    },
    {
        "line": 63,
        "fullcodeline": "all = xrealloc(all, alloced * sizeof(*all));"
    },
    {
        "line": 21,
        "fullcodeline": "if (pkttype && pkt->tag != pkttype) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (pkt->tag != expect)"
    },
    {
        "line": 39,
        "fullcodeline": "if (prevtag == PGPTAG_PUBLIC_SUBKEY) {"
    },
    {
        "line": 24,
        "fullcodeline": "digp = pgpDigParamsNew(pkt->tag);"
    },
    {
        "line": 40,
        "fullcodeline": "if (selfsig->sigtype != PGPSIGTYPE_SUBKEY_BINDING)"
    }
]