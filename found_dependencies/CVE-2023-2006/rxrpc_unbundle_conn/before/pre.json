[
    {
        "line": 3,
        "fullcodeline": "struct rxrpc_bundle *bundle = conn->bundle;"
    },
    {
        "line": 4,
        "fullcodeline": "struct rxrpc_local *local = bundle->params.local;"
    },
    {
        "line": 6,
        "fullcodeline": "bool need_drop = false, need_put = false;"
    },
    {
        "line": 9,
        "fullcodeline": "_enter(\"C=%x\", conn->debug_id);"
    },
    {
        "line": 14,
        "fullcodeline": "spin_lock(&bundle->channel_lock);"
    },
    {
        "line": 15,
        "fullcodeline": "bindex = conn->bundle_shift / RXRPC_MAXCALLS;"
    },
    {
        "line": 23,
        "fullcodeline": "spin_unlock(&bundle->channel_lock);"
    },
    {
        "line": 46,
        "fullcodeline": "_leave(\"\");"
    },
    {
        "line": 11,
        "fullcodeline": "if (conn->flags & RXRPC_CONN_FINAL_ACK_MASK)"
    },
    {
        "line": 16,
        "fullcodeline": "if (bundle->conns[bindex] == conn) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (!bundle->avail_chans) {"
    },
    {
        "line": 12,
        "fullcodeline": "rxrpc_process_delayed_final_acks(conn, true);"
    },
    {
        "line": 17,
        "fullcodeline": "_debug(\"clear slot %u\", bindex);"
    },
    {
        "line": 18,
        "fullcodeline": "bundle->conns[bindex] = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "need_drop = true;"
    },
    {
        "line": 27,
        "fullcodeline": "_debug(\"maybe unbundle\");"
    },
    {
        "line": 28,
        "fullcodeline": "spin_lock(&local->client_bundles_lock);"
    },
    {
        "line": 39,
        "fullcodeline": "spin_unlock(&local->client_bundles_lock);"
    },
    {
        "line": 45,
        "fullcodeline": "rxrpc_put_connection(conn);"
    },
    {
        "line": 19,
        "fullcodeline": "for (i = 0; i < RXRPC_MAXCALLS; i++)"
    },
    {
        "line": 20,
        "fullcodeline": "clear_bit(conn->bundle_shift + i, &bundle->avail_chans);"
    },
    {
        "line": 30,
        "fullcodeline": "for (i = 0; i < ARRAY_SIZE(bundle->conns); i++)"
    },
    {
        "line": 33,
        "fullcodeline": "if (i == ARRAY_SIZE(bundle->conns) && !bundle->params.exclusive) {"
    },
    {
        "line": 34,
        "fullcodeline": "_debug(\"erase bundle\");"
    },
    {
        "line": 35,
        "fullcodeline": "rb_erase(&bundle->local_node, &local->client_bundles);"
    },
    {
        "line": 36,
        "fullcodeline": "need_put = true;"
    },
    {
        "line": 41,
        "fullcodeline": "rxrpc_put_bundle(bundle);"
    }
]