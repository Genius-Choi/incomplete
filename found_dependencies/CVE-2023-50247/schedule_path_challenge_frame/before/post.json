[
    {
        "line": 8,
        "fullcodeline": "pending->next = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "pending->is_response = is_response;"
    },
    {
        "line": 10,
        "fullcodeline": "memcpy(pending->data, data, QUICLY_PATH_CHALLENGE_DATA_LEN);"
    },
    {
        "line": 12,
        "fullcodeline": "*conn->egress.path_challenge.tail_ref = pending;"
    },
    {
        "line": 13,
        "fullcodeline": "conn->egress.path_challenge.tail_ref = &pending->next;"
    },
    {
        "line": 15,
        "fullcodeline": "conn->egress.pending_flows |= QUICLY_PENDING_FLOW_OTHERS_BIT;"
    },
    {
        "line": 5,
        "fullcodeline": "if ((pending = malloc(sizeof(struct st_quicly_pending_path_challenge_t))) == NULL)"
    }
]