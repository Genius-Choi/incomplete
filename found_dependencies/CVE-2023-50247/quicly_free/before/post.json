[
    {
        "line": 3,
        "fullcodeline": "lock_now(conn, 0);"
    },
    {
        "line": 5,
        "fullcodeline": "QUICLY_PROBE(FREE, conn, conn->stash.now);"
    },
    {
        "line": 16,
        "fullcodeline": "destroy_all_streams(conn, 0, 1);"
    },
    {
        "line": 17,
        "fullcodeline": "update_open_count(conn->super.ctx, -1);"
    },
    {
        "line": 18,
        "fullcodeline": "clear_datagram_frame_payloads(conn);"
    },
    {
        "line": 30,
        "fullcodeline": "kh_destroy(quicly_stream_t, conn->streams);"
    },
    {
        "line": 32,
        "fullcodeline": "assert(!quicly_linklist_is_linked(&conn->egress.pending_streams.blocked.uni));"
    },
    {
        "line": 33,
        "fullcodeline": "assert(!quicly_linklist_is_linked(&conn->egress.pending_streams.blocked.bidi));"
    },
    {
        "line": 34,
        "fullcodeline": "assert(!quicly_linklist_is_linked(&conn->egress.pending_streams.control));"
    },
    {
        "line": 35,
        "fullcodeline": "assert(!quicly_linklist_is_linked(&conn->super._default_scheduler.active));"
    },
    {
        "line": 36,
        "fullcodeline": "assert(!quicly_linklist_is_linked(&conn->super._default_scheduler.blocked));"
    },
    {
        "line": 38,
        "fullcodeline": "free_handshake_space(&conn->initial);"
    },
    {
        "line": 39,
        "fullcodeline": "free_handshake_space(&conn->handshake);"
    },
    {
        "line": 40,
        "fullcodeline": "free_application_space(&conn->application);"
    },
    {
        "line": 50,
        "fullcodeline": "unlock_now(conn);"
    },
    {
        "line": 53,
        "fullcodeline": "free(conn);"
    },
    {
        "line": 23,
        "fullcodeline": "while (conn->egress.path_challenge.head != NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "struct st_quicly_pending_path_challenge_t *pending = conn->egress.path_challenge.head;"
    },
    {
        "line": 25,
        "fullcodeline": "conn->egress.path_challenge.head = pending->next;"
    },
    {
        "line": 26,
        "fullcodeline": "free(pending);"
    },
    {
        "line": 45,
        "fullcodeline": "*ptls_get_data_ptr(conn->crypto.tls) = NULL;"
    }
]