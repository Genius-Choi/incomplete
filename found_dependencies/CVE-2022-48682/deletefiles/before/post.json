[
    {
        "line": 4,
        "fullcodeline": "int groups = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int curgroup = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "int max = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "curfile = files;"
    },
    {
        "line": 44,
        "fullcodeline": "max++;"
    },
    {
        "line": 46,
        "fullcodeline": "dupelist = (file_t**) malloc(sizeof(file_t*) * max);"
    },
    {
        "line": 47,
        "fullcodeline": "preserve = (int*) malloc(sizeof(int) * max);"
    },
    {
        "line": 48,
        "fullcodeline": "preservestr = (char*) malloc(INPUT_SIZE);"
    },
    {
        "line": 55,
        "fullcodeline": "loginfo = 0;"
    },
    {
        "line": 59,
        "fullcodeline": "register_sigint_handler();"
    },
    {
        "line": 260,
        "fullcodeline": "free(dupelist);"
    },
    {
        "line": 261,
        "fullcodeline": "free(preserve);"
    },
    {
        "line": 262,
        "fullcodeline": "free(preservestr);"
    },
    {
        "line": 50,
        "fullcodeline": "if (!dupelist || !preserve || !preservestr) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (logfile != 0)"
    },
    {
        "line": 41,
        "fullcodeline": "curfile = curfile->next;"
    },
    {
        "line": 51,
        "fullcodeline": "errormsg(\"out of memory\\n\");"
    },
    {
        "line": 52,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 57,
        "fullcodeline": "loginfo = log_open(logfile, &log_error);"
    },
    {
        "line": 254,
        "fullcodeline": "files = files->next;"
    },
    {
        "line": 258,
        "fullcodeline": "log_close(loginfo);"
    },
    {
        "line": 29,
        "fullcodeline": "counter = 1;"
    },
    {
        "line": 30,
        "fullcodeline": "groups++;"
    },
    {
        "line": 32,
        "fullcodeline": "tmpfile = curfile->duplicates;"
    },
    {
        "line": 63,
        "fullcodeline": "curgroup++;"
    },
    {
        "line": 64,
        "fullcodeline": "counter = 1;"
    },
    {
        "line": 65,
        "fullcodeline": "dupelist[counter] = files;"
    },
    {
        "line": 179,
        "fullcodeline": "printf(\"\\n\");"
    },
    {
        "line": 248,
        "fullcodeline": "printf(\"\\n\");"
    },
    {
        "line": 38,
        "fullcodeline": "if (counter > max) max = counter;"
    },
    {
        "line": 91,
        "fullcodeline": "if (!prompt) /* preserve only the first file */"
    },
    {
        "line": 184,
        "fullcodeline": "for (x = 1; x <= counter; x++) {"
    },
    {
        "line": 34,
        "fullcodeline": "counter++;"
    },
    {
        "line": 35,
        "fullcodeline": "tmpfile = tmpfile->duplicates;"
    },
    {
        "line": 78,
        "fullcodeline": "dupelist[++counter] = tmpfile;"
    },
    {
        "line": 86,
        "fullcodeline": "tmpfile = tmpfile->duplicates;"
    },
    {
        "line": 89,
        "fullcodeline": "if (prompt) printf(\"\\n\");"
    },
    {
        "line": 93,
        "fullcodeline": "preserve[1] = 1;"
    },
    {
        "line": 182,
        "fullcodeline": "log_begin_set(loginfo);"
    },
    {
        "line": 251,
        "fullcodeline": "log_end_set(loginfo);"
    },
    {
        "line": 69,
        "fullcodeline": "if (ISFLAG(flags, F_SHOWTIME))"
    },
    {
        "line": 94,
        "fullcodeline": "for (x = 2; x <= counter; x++) preserve[x] = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "printf(\"[%d] [%s] %s\\n\", counter, fmttime(files->mtime), files->d_name);"
    },
    {
        "line": 177,
        "fullcodeline": "} while (sum < 1); /* make sure we've preserved at least one file */"
    },
    {
        "line": 187,
        "fullcodeline": "printf(\"   [+] %s\\n\", dupelist[x]->d_name);"
    },
    {
        "line": 72,
        "fullcodeline": "printf(\"[%d] %s\\n\", counter, files->d_name);"
    },
    {
        "line": 81,
        "fullcodeline": "if (ISFLAG(flags, F_SHOWTIME))"
    },
    {
        "line": 100,
        "fullcodeline": "printf(\"Set %d of %d, preserve files [1 - %d, all, quit]\","
    },
    {
        "line": 104,
        "fullcodeline": "printf(\": \");"
    },
    {
        "line": 105,
        "fullcodeline": "fflush(stdout);"
    },
    {
        "line": 127,
        "fullcodeline": "i = strlen(preservestr) - 1;"
    },
    {
        "line": 163,
        "fullcodeline": "token = strtok(preservestr, \" ,\\n\");"
    },
    {
        "line": 82,
        "fullcodeline": "printf(\"[%d] [%s] %s\\n\", counter, fmttime(tmpfile->mtime), tmpfile->d_name);"
    },
    {
        "line": 102,
        "fullcodeline": "if (ISFLAG(flags, F_SHOWSIZE)) printf(\" (%lld byte%seach)\", (long long int)files->size,"
    },
    {
        "line": 107,
        "fullcodeline": "if (!fgets(preservestr, INPUT_SIZE, tty))"
    },
    {
        "line": 129,
        "fullcodeline": "while (preservestr[i]!='\\n'){ /* tail of buffer must be a newline */"
    },
    {
        "line": 147,
        "fullcodeline": "if (strcmp(preservestr, \"q\\n\") == 0 || strcmp(preservestr, \"quit\\n\") == 0)"
    },
    {
        "line": 161,
        "fullcodeline": "for (x = 1; x <= counter; x++) preserve[x] = 0;"
    },
    {
        "line": 165,
        "fullcodeline": "while (token != NULL) {"
    },
    {
        "line": 176,
        "fullcodeline": "for (sum = 0, x = 1; x <= counter; x++) sum += preserve[x];"
    },
    {
        "line": 190,
        "fullcodeline": "log_file_remaining(loginfo, dupelist[x]->d_name);"
    },
    {
        "line": 193,
        "fullcodeline": "if (ISFLAG(flags, F_DEFERCONFIRMATION))"
    },
    {
        "line": 84,
        "fullcodeline": "printf(\"[%d] %s\\n\", counter, tmpfile->d_name);"
    },
    {
        "line": 109,
        "fullcodeline": "preservestr[0] = '\\n'; /* treat fgets() failure as if nothing was entered */"
    },
    {
        "line": 110,
        "fullcodeline": "preservestr[1] = '\\0';"
    },
    {
        "line": 130,
        "fullcodeline": "tstr = (char*)"
    },
    {
        "line": 137,
        "fullcodeline": "preservestr = tstr;"
    },
    {
        "line": 144,
        "fullcodeline": "i = strlen(preservestr)-1;"
    },
    {
        "line": 152,
        "fullcodeline": "free(dupelist);"
    },
    {
        "line": 153,
        "fullcodeline": "free(preserve);"
    },
    {
        "line": 154,
        "fullcodeline": "free(preservestr);"
    },
    {
        "line": 156,
        "fullcodeline": "printf(\"\\n\");"
    },
    {
        "line": 158,
        "fullcodeline": "exit(0);"
    },
    {
        "line": 169,
        "fullcodeline": "number = 0;"
    },
    {
        "line": 170,
        "fullcodeline": "sscanf(token, \"%d\", &number);"
    },
    {
        "line": 173,
        "fullcodeline": "token = strtok(NULL, \" ,\\n\");"
    },
    {
        "line": 195,
        "fullcodeline": "firstpreserved = 0;"
    },
    {
        "line": 205,
        "fullcodeline": "file1 = fopen(dupelist[x]->d_name, \"rb\");"
    },
    {
        "line": 206,
        "fullcodeline": "file2 = fopen(dupelist[firstpreserved]->d_name, \"rb\");"
    },
    {
        "line": 103,
        "fullcodeline": "(files->size != 1) ? \"s \" : \" \");"
    },
    {
        "line": 132,
        "fullcodeline": "if (!tstr) { /* couldn't allocate memory, treat as fatal */"
    },
    {
        "line": 138,
        "fullcodeline": "if (!fgets(preservestr + i + 1, INPUT_SIZE, tty))"
    },
    {
        "line": 166,
        "fullcodeline": "if (strcasecmp(token, \"all\") == 0 || strcasecmp(token, \"a\") == 0)"
    },
    {
        "line": 171,
        "fullcodeline": "if (number > 0 && number <= counter) preserve[number] = 1;"
    },
    {
        "line": 196,
        "fullcodeline": "for (i = 1; i <= counter; ++i)"
    },
    {
        "line": 208,
        "fullcodeline": "if (file1 && file2)"
    },
    {
        "line": 221,
        "fullcodeline": "ismatch = 1;"
    },
    {
        "line": 225,
        "fullcodeline": "if (remove(dupelist[x]->d_name) == 0) {"
    },
    {
        "line": 240,
        "fullcodeline": "printf(\"   [!] %s\\n\", dupelist[x]->d_name);"
    },
    {
        "line": 241,
        "fullcodeline": "printf(\" -- unable to confirm match; file not deleted!\\n\");"
    },
    {
        "line": 117,
        "fullcodeline": "free(dupelist);"
    },
    {
        "line": 118,
        "fullcodeline": "free(preserve);"
    },
    {
        "line": 119,
        "fullcodeline": "free(preservestr);"
    },
    {
        "line": 121,
        "fullcodeline": "printf(\"\\n\");"
    },
    {
        "line": 123,
        "fullcodeline": "exit(0);"
    },
    {
        "line": 131,
        "fullcodeline": "realloc(preservestr, strlen(preservestr) + 1 + INPUT_SIZE);"
    },
    {
        "line": 133,
        "fullcodeline": "errormsg(\"out of memory!\\n\");"
    },
    {
        "line": 134,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 140,
        "fullcodeline": "preservestr[0] = '\\n'; /* treat fgets() failure as if nothing was entered */"
    },
    {
        "line": 141,
        "fullcodeline": "preservestr[1] = '\\0';"
    },
    {
        "line": 150,
        "fullcodeline": "log_close(loginfo);"
    },
    {
        "line": 209,
        "fullcodeline": "ismatch = confirmmatch(file1, file2);"
    },
    {
        "line": 214,
        "fullcodeline": "fclose(file2);"
    },
    {
        "line": 217,
        "fullcodeline": "fclose(file1);"
    },
    {
        "line": 226,
        "fullcodeline": "printf(\"   [-] %s\\n\", dupelist[x]->d_name);"
    },
    {
        "line": 167,
        "fullcodeline": "for (x = 0; x <= counter; x++) preserve[x] = 1;"
    },
    {
        "line": 211,
        "fullcodeline": "ismatch = 0;"
    },
    {
        "line": 232,
        "fullcodeline": "printf(\"   [!] %s \", dupelist[x]->d_name);"
    },
    {
        "line": 233,
        "fullcodeline": "printf(\"-- unable to delete file!\\n\");"
    },
    {
        "line": 244,
        "fullcodeline": "log_file_remaining(loginfo, dupelist[x]->d_name);"
    },
    {
        "line": 115,
        "fullcodeline": "log_close(loginfo);"
    },
    {
        "line": 200,
        "fullcodeline": "firstpreserved = i;"
    },
    {
        "line": 229,
        "fullcodeline": "log_file_deleted(loginfo, dupelist[x]->d_name);"
    },
    {
        "line": 236,
        "fullcodeline": "log_file_remaining(loginfo, dupelist[x]->d_name);"
    }
]