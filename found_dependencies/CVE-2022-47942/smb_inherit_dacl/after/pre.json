[
    {
        "line": 5,
        "fullcodeline": "const struct smb_sid *psid, *creator = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "struct smb_ntsd *parent_pntsd = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "struct dentry *parent = path->dentry->d_parent;"
    },
    {
        "line": 11,
        "fullcodeline": "struct user_namespace *user_ns = mnt_user_ns(path->mnt);"
    },
    {
        "line": 12,
        "fullcodeline": "int inherited_flags = 0, flags = 0, i, ace_cnt = 0, nt_size = 0, pdacl_size;"
    },
    {
        "line": 13,
        "fullcodeline": "int rc = 0, num_aces, dacloffset, pntsd_type, pntsd_size, acl_len, aces_size;"
    },
    {
        "line": 15,
        "fullcodeline": "bool is_dir = S_ISDIR(d_inode(path->dentry)->i_mode);"
    },
    {
        "line": 17,
        "fullcodeline": "pntsd_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,"
    },
    {
        "line": 21,
        "fullcodeline": "dacloffset = le32_to_cpu(parent_pntsd->dacloffset);"
    },
    {
        "line": 27,
        "fullcodeline": "parent_pdacl = (struct smb_acl *)((char *)parent_pntsd + dacloffset);"
    },
    {
        "line": 28,
        "fullcodeline": "acl_len = pntsd_size - dacloffset;"
    },
    {
        "line": 29,
        "fullcodeline": "num_aces = le32_to_cpu(parent_pdacl->num_aces);"
    },
    {
        "line": 30,
        "fullcodeline": "pntsd_type = le16_to_cpu(parent_pntsd->type);"
    },
    {
        "line": 31,
        "fullcodeline": "pdacl_size = le16_to_cpu(parent_pdacl->size);"
    },
    {
        "line": 38,
        "fullcodeline": "aces_base = kmalloc(sizeof(struct smb_ace) * num_aces * 2, GFP_KERNEL);"
    },
    {
        "line": 44,
        "fullcodeline": "aces = (struct smb_ace *)aces_base;"
    },
    {
        "line": 45,
        "fullcodeline": "parent_aces = (struct smb_ace *)((char *)parent_pdacl +"
    },
    {
        "line": 47,
        "fullcodeline": "aces_size = acl_len - sizeof(struct smb_acl);"
    },
    {
        "line": 19,
        "fullcodeline": "if (pntsd_size <= 0)"
    },
    {
        "line": 39,
        "fullcodeline": "if (!aces_base) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (pntsd_type & DACL_AUTO_INHERITED)"
    },
    {
        "line": 52,
        "fullcodeline": "for (i = 0; i < num_aces; i++) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (nt_size > 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (!dacloffset || (dacloffset + sizeof(struct smb_acl) > pntsd_size)) {"
    },
    {
        "line": 23,
        "fullcodeline": "rc = -EINVAL;"
    },
    {
        "line": 33,
        "fullcodeline": "if (pdacl_size > acl_len || pdacl_size < sizeof(struct smb_acl)) {"
    },
    {
        "line": 34,
        "fullcodeline": "rc = -EINVAL;"
    },
    {
        "line": 40,
        "fullcodeline": "rc = -ENOMEM;"
    },
    {
        "line": 50,
        "fullcodeline": "inherited_flags = INHERITED_ACE;"
    },
    {
        "line": 58,
        "fullcodeline": "pace_size = le16_to_cpu(parent_aces->size);"
    },
    {
        "line": 62,
        "fullcodeline": "aces_size -= pace_size;"
    },
    {
        "line": 64,
        "fullcodeline": "flags = parent_aces->flags;"
    },
    {
        "line": 102,
        "fullcodeline": "smb_set_ace(aces, psid, parent_aces->type, flags | inherited_flags,"
    },
    {
        "line": 104,
        "fullcodeline": "nt_size += le16_to_cpu(aces->size);"
    },
    {
        "line": 105,
        "fullcodeline": "aces = (struct smb_ace *)((char *)aces + le16_to_cpu(aces->size));"
    },
    {
        "line": 106,
        "fullcodeline": "ace_cnt++;"
    },
    {
        "line": 108,
        "fullcodeline": "parent_aces = (struct smb_ace *)((char *)parent_aces + pace_size);"
    },
    {
        "line": 114,
        "fullcodeline": "struct smb_sid *powner_sid = NULL, *pgroup_sid = NULL;"
    },
    {
        "line": 115,
        "fullcodeline": "int powner_sid_size = 0, pgroup_sid_size = 0, pntsd_size;"
    },
    {
        "line": 128,
        "fullcodeline": "pntsd = kzalloc(sizeof(struct smb_ntsd) + powner_sid_size +"
    },
    {
        "line": 136,
        "fullcodeline": "pntsd->revision = cpu_to_le16(1);"
    },
    {
        "line": 137,
        "fullcodeline": "pntsd->type = cpu_to_le16(SELF_RELATIVE | DACL_PRESENT);"
    },
    {
        "line": 140,
        "fullcodeline": "pntsd_size = sizeof(struct smb_ntsd);"
    },
    {
        "line": 141,
        "fullcodeline": "pntsd->osidoffset = parent_pntsd->osidoffset;"
    },
    {
        "line": 142,
        "fullcodeline": "pntsd->gsidoffset = parent_pntsd->gsidoffset;"
    },
    {
        "line": 143,
        "fullcodeline": "pntsd->dacloffset = parent_pntsd->dacloffset;"
    },
    {
        "line": 171,
        "fullcodeline": "ksmbd_vfs_set_sd_xattr(conn, user_ns,"
    },
    {
        "line": 20,
        "fullcodeline": "return -ENOENT;"
    },
    {
        "line": 59,
        "fullcodeline": "if (pace_size > aces_size)"
    },
    {
        "line": 131,
        "fullcodeline": "if (!pntsd) {"
    },
    {
        "line": 138,
        "fullcodeline": "if (le16_to_cpu(parent_pntsd->type) & DACL_AUTO_INHERITED)"
    },
    {
        "line": 65,
        "fullcodeline": "if (!smb_inherit_flags(flags, is_dir))"
    },
    {
        "line": 68,
        "fullcodeline": "flags &= ~(INHERIT_ONLY_ACE | INHERITED_ACE);"
    },
    {
        "line": 77,
        "fullcodeline": "if (!compare_sids(&creator_owner, &parent_aces->sid)) {"
    },
    {
        "line": 78,
        "fullcodeline": "creator = &creator_owner;"
    },
    {
        "line": 79,
        "fullcodeline": "id_to_sid(uid, SIDOWNER, &owner_sid);"
    },
    {
        "line": 80,
        "fullcodeline": "psid = &owner_sid;"
    },
    {
        "line": 90,
        "fullcodeline": "if (is_dir && creator && flags & CONTAINER_INHERIT_ACE) {"
    },
    {
        "line": 91,
        "fullcodeline": "smb_set_ace(aces, psid, parent_aces->type, inherited_flags,"
    },
    {
        "line": 93,
        "fullcodeline": "nt_size += le16_to_cpu(aces->size);"
    },
    {
        "line": 94,
        "fullcodeline": "ace_cnt++;"
    },
    {
        "line": 95,
        "fullcodeline": "aces = (struct smb_ace *)((char *)aces + le16_to_cpu(aces->size));"
    },
    {
        "line": 96,
        "fullcodeline": "flags |= INHERIT_ONLY_ACE;"
    },
    {
        "line": 97,
        "fullcodeline": "psid = creator;"
    },
    {
        "line": 118,
        "fullcodeline": "powner_sid = (struct smb_sid *)((char *)parent_pntsd +"
    },
    {
        "line": 120,
        "fullcodeline": "powner_sid_size = 1 + 1 + 6 + (powner_sid->num_subauth * 4);"
    },
    {
        "line": 123,
        "fullcodeline": "pgroup_sid = (struct smb_sid *)((char *)parent_pntsd +"
    },
    {
        "line": 125,
        "fullcodeline": "pgroup_sid_size = 1 + 1 + 6 + (pgroup_sid->num_subauth * 4);"
    },
    {
        "line": 132,
        "fullcodeline": "rc = -ENOMEM;"
    },
    {
        "line": 139,
        "fullcodeline": "pntsd->type |= cpu_to_le16(DACL_AUTO_INHERITED);"
    },
    {
        "line": 146,
        "fullcodeline": "struct smb_sid *owner_sid = (struct smb_sid *)((char *)pntsd +"
    },
    {
        "line": 148,
        "fullcodeline": "memcpy(owner_sid, powner_sid, powner_sid_size);"
    },
    {
        "line": 149,
        "fullcodeline": "pntsd_size += powner_sid_size;"
    },
    {
        "line": 153,
        "fullcodeline": "struct smb_sid *group_sid = (struct smb_sid *)((char *)pntsd +"
    },
    {
        "line": 155,
        "fullcodeline": "memcpy(group_sid, pgroup_sid, pgroup_sid_size);"
    },
    {
        "line": 156,
        "fullcodeline": "pntsd_size += pgroup_sid_size;"
    },
    {
        "line": 162,
        "fullcodeline": "pdacl = (struct smb_acl *)((char *)pntsd + le32_to_cpu(pntsd->dacloffset));"
    },
    {
        "line": 163,
        "fullcodeline": "pdacl->revision = cpu_to_le16(2);"
    },
    {
        "line": 164,
        "fullcodeline": "pdacl->size = cpu_to_le16(sizeof(struct smb_acl) + nt_size);"
    },
    {
        "line": 165,
        "fullcodeline": "pdacl->num_aces = cpu_to_le32(ace_cnt);"
    },
    {
        "line": 166,
        "fullcodeline": "pace = (struct smb_ace *)((char *)pdacl + sizeof(struct smb_acl));"
    },
    {
        "line": 167,
        "fullcodeline": "memcpy(pace, aces_base, nt_size);"
    },
    {
        "line": 168,
        "fullcodeline": "pntsd_size += sizeof(struct smb_acl) + nt_size;"
    },
    {
        "line": 69,
        "fullcodeline": "if (!(flags & CONTAINER_INHERIT_ACE))"
    },
    {
        "line": 71,
        "fullcodeline": "if (flags & NO_PROPAGATE_INHERIT_ACE)"
    },
    {
        "line": 74,
        "fullcodeline": "flags = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "flags |= INHERIT_ONLY_ACE;"
    },
    {
        "line": 72,
        "fullcodeline": "flags = 0;"
    },
    {
        "line": 98,
        "fullcodeline": "} else if (is_dir && !(parent_aces->flags & NO_PROPAGATE_INHERIT_ACE)) {"
    },
    {
        "line": 81,
        "fullcodeline": "} else if (!compare_sids(&creator_group, &parent_aces->sid)) {"
    },
    {
        "line": 82,
        "fullcodeline": "creator = &creator_group;"
    },
    {
        "line": 83,
        "fullcodeline": "id_to_sid(gid, SIDUNIX_GROUP, &group_sid);"
    },
    {
        "line": 84,
        "fullcodeline": "psid = &group_sid;"
    },
    {
        "line": 99,
        "fullcodeline": "psid = &parent_aces->sid;"
    },
    {
        "line": 119,
        "fullcodeline": "le32_to_cpu(parent_pntsd->osidoffset));"
    },
    {
        "line": 124,
        "fullcodeline": "le32_to_cpu(parent_pntsd->gsidoffset));"
    },
    {
        "line": 147,
        "fullcodeline": "le32_to_cpu(pntsd->osidoffset));"
    },
    {
        "line": 154,
        "fullcodeline": "le32_to_cpu(pntsd->gsidoffset));"
    },
    {
        "line": 86,
        "fullcodeline": "creator = NULL;"
    },
    {
        "line": 87,
        "fullcodeline": "psid = &parent_aces->sid;"
    }
]