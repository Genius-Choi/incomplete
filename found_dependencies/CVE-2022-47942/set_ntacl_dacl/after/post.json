[
    {
        "line": 10,
        "fullcodeline": "int nt_num_aces = le32_to_cpu(nt_dacl->num_aces), num_aces = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned short size = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "pndace = (struct smb_ace *)((char *)pndacl + sizeof(struct smb_acl));"
    },
    {
        "line": 35,
        "fullcodeline": "set_posix_acl_entries_dacl(user_ns, pndace, fattr,"
    },
    {
        "line": 37,
        "fullcodeline": "pndacl->num_aces = cpu_to_le32(num_aces);"
    },
    {
        "line": 38,
        "fullcodeline": "pndacl->size = cpu_to_le16(le16_to_cpu(pndacl->size) + size);"
    },
    {
        "line": 16,
        "fullcodeline": "ntace = (struct smb_ace *)((char *)nt_dacl + sizeof(struct smb_acl));"
    },
    {
        "line": 17,
        "fullcodeline": "for (i = 0; i < nt_num_aces; i++) {"
    },
    {
        "line": 23,
        "fullcodeline": "nt_ace_size = le16_to_cpu(ntace->size);"
    },
    {
        "line": 27,
        "fullcodeline": "memcpy((char *)pndace + size, ntace, nt_ace_size);"
    },
    {
        "line": 28,
        "fullcodeline": "size += nt_ace_size;"
    },
    {
        "line": 29,
        "fullcodeline": "aces_size -= nt_ace_size;"
    },
    {
        "line": 30,
        "fullcodeline": "ntace = (struct smb_ace *)((char *)ntace + nt_ace_size);"
    },
    {
        "line": 31,
        "fullcodeline": "num_aces++;"
    },
    {
        "line": 24,
        "fullcodeline": "if (nt_ace_size > aces_size)"
    }
]