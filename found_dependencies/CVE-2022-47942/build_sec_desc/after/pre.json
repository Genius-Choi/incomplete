[
    {
        "line": 6,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "struct smb_acl *dacl_ptr = NULL; /* no need for SACL ptr */"
    },
    {
        "line": 13,
        "fullcodeline": "unsigned int sid_type = SIDOWNER;"
    },
    {
        "line": 15,
        "fullcodeline": "nowner_sid_ptr = kmalloc(sizeof(struct smb_sid), GFP_KERNEL);"
    },
    {
        "line": 19,
        "fullcodeline": "uid = from_kuid(&init_user_ns, fattr->cf_uid);"
    },
    {
        "line": 22,
        "fullcodeline": "id_to_sid(uid, sid_type, nowner_sid_ptr);"
    },
    {
        "line": 24,
        "fullcodeline": "ngroup_sid_ptr = kmalloc(sizeof(struct smb_sid), GFP_KERNEL);"
    },
    {
        "line": 30,
        "fullcodeline": "gid = from_kgid(&init_user_ns, fattr->cf_gid);"
    },
    {
        "line": 31,
        "fullcodeline": "id_to_sid(gid, SIDUNIX_GROUP, ngroup_sid_ptr);"
    },
    {
        "line": 33,
        "fullcodeline": "offset = sizeof(struct smb_ntsd);"
    },
    {
        "line": 34,
        "fullcodeline": "pntsd->sacloffset = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "pntsd->revision = cpu_to_le16(1);"
    },
    {
        "line": 36,
        "fullcodeline": "pntsd->type = cpu_to_le16(SELF_RELATIVE);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!nowner_sid_ptr)"
    },
    {
        "line": 20,
        "fullcodeline": "if (!uid)"
    },
    {
        "line": 25,
        "fullcodeline": "if (!ngroup_sid_ptr) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (addition_info & OWNER_SECINFO) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (addition_info & GROUP_SECINFO) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (addition_info & DACL_SECINFO) {"
    },
    {
        "line": 21,
        "fullcodeline": "sid_type = SIDUNIX_USER;"
    },
    {
        "line": 38,
        "fullcodeline": "pntsd->type |= ppntsd->type;"
    },
    {
        "line": 41,
        "fullcodeline": "pntsd->osidoffset = cpu_to_le32(offset);"
    },
    {
        "line": 42,
        "fullcodeline": "owner_sid_ptr = (struct smb_sid *)((char *)pntsd + offset);"
    },
    {
        "line": 43,
        "fullcodeline": "smb_copy_sid(owner_sid_ptr, nowner_sid_ptr);"
    },
    {
        "line": 44,
        "fullcodeline": "offset += 1 + 1 + 6 + (nowner_sid_ptr->num_subauth * 4);"
    },
    {
        "line": 48,
        "fullcodeline": "pntsd->gsidoffset = cpu_to_le32(offset);"
    },
    {
        "line": 49,
        "fullcodeline": "group_sid_ptr = (struct smb_sid *)((char *)pntsd + offset);"
    },
    {
        "line": 50,
        "fullcodeline": "smb_copy_sid(group_sid_ptr, ngroup_sid_ptr);"
    },
    {
        "line": 51,
        "fullcodeline": "offset += 1 + 1 + 6 + (ngroup_sid_ptr->num_subauth * 4);"
    },
    {
        "line": 55,
        "fullcodeline": "pntsd->type |= cpu_to_le16(DACL_PRESENT);"
    },
    {
        "line": 56,
        "fullcodeline": "dacl_ptr = (struct smb_acl *)((char *)pntsd + offset);"
    },
    {
        "line": 57,
        "fullcodeline": "dacl_ptr->revision = cpu_to_le16(2);"
    },
    {
        "line": 58,
        "fullcodeline": "dacl_ptr->size = cpu_to_le16(sizeof(struct smb_acl));"
    },
    {
        "line": 59,
        "fullcodeline": "dacl_ptr->num_aces = 0;"
    },
    {
        "line": 84,
        "fullcodeline": "offset += le16_to_cpu(dacl_ptr->size);"
    },
    {
        "line": 17,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 27,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 61,
        "fullcodeline": "if (!ppntsd) {"
    },
    {
        "line": 83,
        "fullcodeline": "pntsd->dacloffset = cpu_to_le32(offset);"
    },
    {
        "line": 62,
        "fullcodeline": "set_mode_dacl(user_ns, dacl_ptr, fattr);"
    },
    {
        "line": 65,
        "fullcodeline": "unsigned int dacl_offset = le32_to_cpu(ppntsd->dacloffset);"
    },
    {
        "line": 66,
        "fullcodeline": "int ppdacl_size, ntacl_size = ppntsd_size - dacl_offset;"
    },
    {
        "line": 72,
        "fullcodeline": "ppdacl_ptr = (struct smb_acl *)((char *)ppntsd + dacl_offset);"
    },
    {
        "line": 73,
        "fullcodeline": "ppdacl_size = le16_to_cpu(ppdacl_ptr->size);"
    },
    {
        "line": 78,
        "fullcodeline": "set_ntacl_dacl(user_ns, dacl_ptr, ppdacl_ptr,"
    },
    {
        "line": 79,
        "fullcodeline": "ntacl_size - sizeof(struct smb_acl),"
    },
    {
        "line": 68,
        "fullcodeline": "if (!dacl_offset ||"
    },
    {
        "line": 69,
        "fullcodeline": "(dacl_offset + sizeof(struct smb_acl) > ppntsd_size))"
    },
    {
        "line": 74,
        "fullcodeline": "if (ppdacl_size > ntacl_size ||"
    },
    {
        "line": 75,
        "fullcodeline": "ppdacl_size < sizeof(struct smb_acl))"
    }
]