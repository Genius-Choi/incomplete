[
    {
        "line": 4,
        "fullcodeline": "int ret = -1;"
    },
    {
        "line": 7,
        "fullcodeline": "flb_sds_t prefix = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "flb_sds_t output_name = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "int toggled_on = -1;"
    },
    {
        "line": 12,
        "fullcodeline": "struct mk_list *props = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "if (result->data.type == MSGPACK_OBJECT_MAP) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (props != NULL) {"
    },
    {
        "line": 81,
        "fullcodeline": "toggled_on = enable_trace_input(hs, input_name, input_nlen, prefix, output_name, props);"
    },
    {
        "line": 89,
        "fullcodeline": "if (prefix) flb_sds_destroy(prefix);"
    },
    {
        "line": 90,
        "fullcodeline": "if (output_name) flb_sds_destroy(output_name);"
    },
    {
        "line": 92,
        "fullcodeline": "flb_kv_release(props);"
    },
    {
        "line": 93,
        "fullcodeline": "flb_free(props);"
    },
    {
        "line": 19,
        "fullcodeline": "for (i = 0; i < result->data.via.map.size; i++) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (output_name == NULL) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (!toggled_on) {"
    },
    {
        "line": 78,
        "fullcodeline": "output_name = flb_sds_create(\"stdout\");"
    },
    {
        "line": 83,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 23,
        "fullcodeline": "if (key->type != MSGPACK_OBJECT_STR) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (strncmp(key->via.str.ptr, \"prefix\", key->via.str.size) == 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 36,
        "fullcodeline": "prefix = flb_sds_create_len(val->via.str.ptr, val->via.str.size);"
    },
    {
        "line": 29,
        "fullcodeline": "if (val->type != MSGPACK_OBJECT_STR) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (prefix != NULL) {"
    },
    {
        "line": 30,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 34,
        "fullcodeline": "flb_sds_destroy(prefix);"
    },
    {
        "line": 38,
        "fullcodeline": "else if (strncmp(key->via.str.ptr, \"output\", key->via.str.size) == 0) {"
    },
    {
        "line": 46,
        "fullcodeline": "output_name = flb_sds_create_len(val->via.str.ptr, val->via.str.size);"
    },
    {
        "line": 39,
        "fullcodeline": "if (val->type != MSGPACK_OBJECT_STR) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (output_name != NULL) {"
    },
    {
        "line": 40,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 44,
        "fullcodeline": "flb_sds_destroy(output_name);"
    },
    {
        "line": 48,
        "fullcodeline": "else if (strncmp(key->via.str.ptr, \"params\", key->via.str.size) == 0) {"
    },
    {
        "line": 56,
        "fullcodeline": "props = flb_calloc(1, sizeof(struct mk_list));"
    },
    {
        "line": 57,
        "fullcodeline": "flb_kv_init(props);"
    },
    {
        "line": 49,
        "fullcodeline": "if (val->type != MSGPACK_OBJECT_MAP) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (props != NULL) {"
    },
    {
        "line": 58,
        "fullcodeline": "for (x = 0; x < val->via.map.size; x++) {"
    },
    {
        "line": 50,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 54,
        "fullcodeline": "flb_free(props);"
    },
    {
        "line": 70,
        "fullcodeline": "flb_kv_item_create_len(props,"
    },
    {
        "line": 60,
        "fullcodeline": "if (param->val.type != MSGPACK_OBJECT_STR) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (param->key.type != MSGPACK_OBJECT_STR) {"
    },
    {
        "line": 71,
        "fullcodeline": "(char *)param_key->ptr, param_key->size,"
    },
    {
        "line": 72,
        "fullcodeline": "(char *)param_val->ptr, param_val->size);"
    },
    {
        "line": 61,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 65,
        "fullcodeline": "ret = -1;"
    }
]