[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 8,
        "fullcodeline": "BT_DBG(\"sock %p, sk %p\", sock, sk);"
    },
    {
        "line": 10,
        "fullcodeline": "err = sock_error(sk);"
    },
    {
        "line": 17,
        "fullcodeline": "buf = kmalloc(len, GFP_KERNEL);"
    },
    {
        "line": 26,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 33,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 34,
        "fullcodeline": "kfree(buf);"
    },
    {
        "line": 14,
        "fullcodeline": "if (msg->msg_flags & MSG_OOB)"
    },
    {
        "line": 18,
        "fullcodeline": "if (!buf)"
    },
    {
        "line": 21,
        "fullcodeline": "if (memcpy_from_msg(buf, msg, len)) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (sk->sk_state == BT_CONNECTED)"
    },
    {
        "line": 22,
        "fullcodeline": "kfree(buf);"
    },
    {
        "line": 29,
        "fullcodeline": "err = sco_send_frame(sk, buf, len, msg->msg_flags);"
    },
    {
        "line": 15,
        "fullcodeline": "return -EOPNOTSUPP;"
    },
    {
        "line": 19,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 23,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 31,
        "fullcodeline": "err = -ENOTCONN;"
    }
]