[
    {
        "line": 3,
        "fullcodeline": "struct buffer_head *bh = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "struct udf_inode_info *iinfo = UDF_I(inode);"
    },
    {
        "line": 8,
        "fullcodeline": "struct udf_sb_info *sbi = UDF_SB(inode->i_sb);"
    },
    {
        "line": 9,
        "fullcodeline": "struct kernel_lb_addr *iloc = &iinfo->i_location;"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned int indirections = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int ret = -EIO;"
    },
    {
        "line": 35,
        "fullcodeline": "bh = udf_read_ptagged(inode->i_sb, iloc, 0, &ident);"
    },
    {
        "line": 48,
        "fullcodeline": "fe = (struct fileEntry *)bh->b_data;"
    },
    {
        "line": 49,
        "fullcodeline": "efe = (struct extendedFileEntry *)bh->b_data;"
    },
    {
        "line": 88,
        "fullcodeline": "iinfo->i_alloc_type = le16_to_cpu(fe->icbTag.flags) &"
    },
    {
        "line": 90,
        "fullcodeline": "iinfo->i_unique = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "iinfo->i_lenEAttr = 0;"
    },
    {
        "line": 92,
        "fullcodeline": "iinfo->i_lenExtents = 0;"
    },
    {
        "line": 93,
        "fullcodeline": "iinfo->i_lenAlloc = 0;"
    },
    {
        "line": 94,
        "fullcodeline": "iinfo->i_next_alloc_block = 0;"
    },
    {
        "line": 95,
        "fullcodeline": "iinfo->i_next_alloc_goal = 0;"
    },
    {
        "line": 131,
        "fullcodeline": "ret = -EIO;"
    },
    {
        "line": 132,
        "fullcodeline": "read_lock(&sbi->s_cred_lock);"
    },
    {
        "line": 133,
        "fullcodeline": "i_uid_write(inode, le32_to_cpu(fe->uid));"
    },
    {
        "line": 139,
        "fullcodeline": "i_gid_write(inode, le32_to_cpu(fe->gid));"
    },
    {
        "line": 153,
        "fullcodeline": "inode->i_mode &= ~sbi->s_umask;"
    },
    {
        "line": 154,
        "fullcodeline": "read_unlock(&sbi->s_cred_lock);"
    },
    {
        "line": 156,
        "fullcodeline": "link_count = le16_to_cpu(fe->fileLinkCount);"
    },
    {
        "line": 164,
        "fullcodeline": "set_nlink(inode, link_count);"
    },
    {
        "line": 166,
        "fullcodeline": "inode->i_size = le64_to_cpu(fe->informationLength);"
    },
    {
        "line": 167,
        "fullcodeline": "iinfo->i_lenExtents = inode->i_size;"
    },
    {
        "line": 209,
        "fullcodeline": "inode->i_generation = iinfo->i_unique;"
    },
    {
        "line": 294,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 296,
        "fullcodeline": "brelse(bh);"
    },
    {
        "line": 16,
        "fullcodeline": "if (iloc->logicalBlockNum >="
    },
    {
        "line": 36,
        "fullcodeline": "if (!bh) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (ident != TAG_IDENT_FE && ident != TAG_IDENT_EFE &&"
    },
    {
        "line": 51,
        "fullcodeline": "if (fe->icbTag.strategyType == cpu_to_le16(4096)) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (fe->icbTag.strategyType == cpu_to_le16(4))"
    },
    {
        "line": 96,
        "fullcodeline": "if (fe->descTag.tagIdent == cpu_to_le16(TAG_IDENT_EFE)) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (!uid_valid(inode->i_uid) ||"
    },
    {
        "line": 140,
        "fullcodeline": "if (!gid_valid(inode->i_gid) ||"
    },
    {
        "line": 145,
        "fullcodeline": "if (fe->icbTag.fileType != ICBTAG_FILE_TYPE_DIRECTORY &&"
    },
    {
        "line": 157,
        "fullcodeline": "if (!link_count) {"
    },
    {
        "line": 169,
        "fullcodeline": "if (iinfo->i_efe == 0) {"
    },
    {
        "line": 215,
        "fullcodeline": "if (iinfo->i_lenEAttr > bs || iinfo->i_lenAlloc > bs)"
    },
    {
        "line": 218,
        "fullcodeline": "if (udf_file_entry_alloc_offset(inode) + iinfo->i_lenAlloc > bs)"
    },
    {
        "line": 221,
        "fullcodeline": "if (iinfo->i_alloc_type == ICBTAG_FLAG_AD_IN_ICB) {"
    },
    {
        "line": 283,
        "fullcodeline": "if (S_ISCHR(inode->i_mode) || S_ISBLK(inode->i_mode)) {"
    },
    {
        "line": 18,
        "fullcodeline": "udf_debug(\"block=%d, partition=%d out of range\\n\","
    },
    {
        "line": 37,
        "fullcodeline": "udf_err(inode->i_sb, \"(ino %ld) failed !bh\\n\", inode->i_ino);"
    },
    {
        "line": 42,
        "fullcodeline": "ident != TAG_IDENT_USE) {"
    },
    {
        "line": 43,
        "fullcodeline": "udf_err(inode->i_sb, \"(ino %ld) failed ident=%d\\n\","
    },
    {
        "line": 54,
        "fullcodeline": "ibh = udf_read_ptagged(inode->i_sb, iloc, 1, &ident);"
    },
    {
        "line": 77,
        "fullcodeline": "brelse(ibh);"
    },
    {
        "line": 84,
        "fullcodeline": "iinfo->i_strat4096 = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "iinfo->i_efe = 1;"
    },
    {
        "line": 98,
        "fullcodeline": "iinfo->i_use = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "ret = udf_alloc_i_data(inode, bs -"
    },
    {
        "line": 103,
        "fullcodeline": "memcpy(iinfo->i_ext.i_data,"
    },
    {
        "line": 136,
        "fullcodeline": "UDF_QUERY_FLAG(inode->i_sb, UDF_FLAG_UID_SET))"
    },
    {
        "line": 142,
        "fullcodeline": "UDF_QUERY_FLAG(inode->i_sb, UDF_FLAG_GID_SET))"
    },
    {
        "line": 146,
        "fullcodeline": "sbi->s_fmode != UDF_INVALID_MODE)"
    },
    {
        "line": 147,
        "fullcodeline": "inode->i_mode = sbi->s_fmode;"
    },
    {
        "line": 162,
        "fullcodeline": "link_count = 1;"
    },
    {
        "line": 170,
        "fullcodeline": "inode->i_blocks = le64_to_cpu(fe->logicalBlocksRecorded) <<"
    },
    {
        "line": 183,
        "fullcodeline": "iinfo->i_unique = le64_to_cpu(fe->uniqueID);"
    },
    {
        "line": 184,
        "fullcodeline": "iinfo->i_lenEAttr = le32_to_cpu(fe->lengthExtendedAttr);"
    },
    {
        "line": 185,
        "fullcodeline": "iinfo->i_lenAlloc = le32_to_cpu(fe->lengthAllocDescs);"
    },
    {
        "line": 186,
        "fullcodeline": "iinfo->i_checkpoint = le32_to_cpu(fe->checkpoint);"
    },
    {
        "line": 235,
        "fullcodeline": "inode->i_op = &udf_dir_inode_operations;"
    },
    {
        "line": 236,
        "fullcodeline": "inode->i_fop = &udf_dir_operations;"
    },
    {
        "line": 237,
        "fullcodeline": "inode->i_mode |= S_IFDIR;"
    },
    {
        "line": 238,
        "fullcodeline": "inc_nlink(inode);"
    },
    {
        "line": 248,
        "fullcodeline": "inode->i_op = &udf_file_inode_operations;"
    },
    {
        "line": 249,
        "fullcodeline": "inode->i_fop = &udf_file_operations;"
    },
    {
        "line": 250,
        "fullcodeline": "inode->i_mode |= S_IFREG;"
    },
    {
        "line": 253,
        "fullcodeline": "inode->i_mode |= S_IFBLK;"
    },
    {
        "line": 256,
        "fullcodeline": "inode->i_mode |= S_IFCHR;"
    },
    {
        "line": 259,
        "fullcodeline": "init_special_inode(inode, inode->i_mode | S_IFIFO, 0);"
    },
    {
        "line": 262,
        "fullcodeline": "init_special_inode(inode, inode->i_mode | S_IFSOCK, 0);"
    },
    {
        "line": 265,
        "fullcodeline": "inode->i_data.a_ops = &udf_symlink_aops;"
    },
    {
        "line": 266,
        "fullcodeline": "inode->i_op = &udf_symlink_inode_operations;"
    },
    {
        "line": 267,
        "fullcodeline": "inode->i_mode = S_IFLNK | S_IRWXUGO;"
    },
    {
        "line": 270,
        "fullcodeline": "udf_debug(\"METADATA FILE-----\\n\");"
    },
    {
        "line": 273,
        "fullcodeline": "udf_debug(\"METADATA MIRROR FILE-----\\n\");"
    },
    {
        "line": 276,
        "fullcodeline": "udf_debug(\"METADATA BITMAP FILE-----\\n\");"
    },
    {
        "line": 279,
        "fullcodeline": "udf_err(inode->i_sb, \"(ino %ld) failed unknown file type=%d\\n\","
    },
    {
        "line": 284,
        "fullcodeline": "struct deviceSpec *dsea ="
    },
    {
        "line": 20,
        "fullcodeline": "return -EIO;"
    },
    {
        "line": 38,
        "fullcodeline": "return -EIO;"
    },
    {
        "line": 55,
        "fullcodeline": "if (ident == TAG_IDENT_IE && ibh) {"
    },
    {
        "line": 86,
        "fullcodeline": "iinfo->i_strat4096 = 1;"
    },
    {
        "line": 104,
        "fullcodeline": "bh->b_data + sizeof(struct extendedFileEntry),"
    },
    {
        "line": 105,
        "fullcodeline": "bs - sizeof(struct extendedFileEntry));"
    },
    {
        "line": 135,
        "fullcodeline": "UDF_QUERY_FLAG(inode->i_sb, UDF_FLAG_UID_IGNORE) ||"
    },
    {
        "line": 141,
        "fullcodeline": "UDF_QUERY_FLAG(inode->i_sb, UDF_FLAG_GID_IGNORE) ||"
    },
    {
        "line": 158,
        "fullcodeline": "if (!hidden_inode) {"
    },
    {
        "line": 173,
        "fullcodeline": "if (!udf_disk_stamp_to_time(&inode->i_atime, fe->accessTime))"
    },
    {
        "line": 176,
        "fullcodeline": "if (!udf_disk_stamp_to_time(&inode->i_mtime,"
    },
    {
        "line": 180,
        "fullcodeline": "if (!udf_disk_stamp_to_time(&inode->i_ctime, fe->attrTime))"
    },
    {
        "line": 188,
        "fullcodeline": "inode->i_blocks = le64_to_cpu(efe->logicalBlocksRecorded) <<"
    },
    {
        "line": 204,
        "fullcodeline": "iinfo->i_unique = le64_to_cpu(efe->uniqueID);"
    },
    {
        "line": 205,
        "fullcodeline": "iinfo->i_lenEAttr = le32_to_cpu(efe->lengthExtendedAttr);"
    },
    {
        "line": 206,
        "fullcodeline": "iinfo->i_lenAlloc = le32_to_cpu(efe->lengthAllocDescs);"
    },
    {
        "line": 207,
        "fullcodeline": "iinfo->i_checkpoint = le32_to_cpu(efe->checkpoint);"
    },
    {
        "line": 226,
        "fullcodeline": "if (iinfo->i_lenAlloc != inode->i_size)"
    },
    {
        "line": 229,
        "fullcodeline": "if (inode->i_size > bs - udf_file_entry_alloc_offset(inode))"
    },
    {
        "line": 244,
        "fullcodeline": "if (iinfo->i_alloc_type == ICBTAG_FLAG_AD_IN_ICB)"
    },
    {
        "line": 285,
        "fullcodeline": "(struct deviceSpec *)udf_get_extendedattr(inode, 12, 1);"
    },
    {
        "line": 59,
        "fullcodeline": "ie = (struct indirectEntry *)ibh->b_data;"
    },
    {
        "line": 60,
        "fullcodeline": "loc = lelb_to_cpu(ie->indirectICB.extLocation);"
    },
    {
        "line": 78,
        "fullcodeline": "} else if (fe->icbTag.strategyType != cpu_to_le16(4)) {"
    },
    {
        "line": 106,
        "fullcodeline": "} else if (fe->descTag.tagIdent == cpu_to_le16(TAG_IDENT_FE)) {"
    },
    {
        "line": 137,
        "fullcodeline": "inode->i_uid = UDF_SB(inode->i_sb)->s_uid;"
    },
    {
        "line": 143,
        "fullcodeline": "inode->i_gid = UDF_SB(inode->i_sb)->s_gid;"
    },
    {
        "line": 148,
        "fullcodeline": "else if (fe->icbTag.fileType == ICBTAG_FILE_TYPE_DIRECTORY &&"
    },
    {
        "line": 159,
        "fullcodeline": "ret = -ESTALE;"
    },
    {
        "line": 171,
        "fullcodeline": "(inode->i_sb->s_blocksize_bits - 9);"
    },
    {
        "line": 174,
        "fullcodeline": "inode->i_atime = sbi->s_record_time;"
    },
    {
        "line": 178,
        "fullcodeline": "inode->i_mtime = sbi->s_record_time;"
    },
    {
        "line": 181,
        "fullcodeline": "inode->i_ctime = sbi->s_record_time;"
    },
    {
        "line": 191,
        "fullcodeline": "if (!udf_disk_stamp_to_time(&inode->i_atime, efe->accessTime))"
    },
    {
        "line": 194,
        "fullcodeline": "if (!udf_disk_stamp_to_time(&inode->i_mtime,"
    },
    {
        "line": 198,
        "fullcodeline": "if (!udf_disk_stamp_to_time(&iinfo->i_crtime, efe->createTime))"
    },
    {
        "line": 201,
        "fullcodeline": "if (!udf_disk_stamp_to_time(&inode->i_ctime, efe->attrTime))"
    },
    {
        "line": 245,
        "fullcodeline": "inode->i_data.a_ops = &udf_adinicb_aops;"
    },
    {
        "line": 287,
        "fullcodeline": "init_special_inode(inode, inode->i_mode,"
    },
    {
        "line": 79,
        "fullcodeline": "udf_err(inode->i_sb, \"unsupported strategy type: %d\\n\","
    },
    {
        "line": 107,
        "fullcodeline": "iinfo->i_efe = 0;"
    },
    {
        "line": 108,
        "fullcodeline": "iinfo->i_use = 0;"
    },
    {
        "line": 109,
        "fullcodeline": "ret = udf_alloc_i_data(inode, bs - sizeof(struct fileEntry));"
    },
    {
        "line": 112,
        "fullcodeline": "memcpy(iinfo->i_ext.i_data,"
    },
    {
        "line": 149,
        "fullcodeline": "sbi->s_dmode != UDF_INVALID_MODE)"
    },
    {
        "line": 150,
        "fullcodeline": "inode->i_mode = sbi->s_dmode;"
    },
    {
        "line": 189,
        "fullcodeline": "(inode->i_sb->s_blocksize_bits - 9);"
    },
    {
        "line": 192,
        "fullcodeline": "inode->i_atime = sbi->s_record_time;"
    },
    {
        "line": 196,
        "fullcodeline": "inode->i_mtime = sbi->s_record_time;"
    },
    {
        "line": 199,
        "fullcodeline": "iinfo->i_crtime = sbi->s_record_time;"
    },
    {
        "line": 202,
        "fullcodeline": "inode->i_ctime = sbi->s_record_time;"
    },
    {
        "line": 247,
        "fullcodeline": "inode->i_data.a_ops = &udf_aops;"
    },
    {
        "line": 288,
        "fullcodeline": "MKDEV(le32_to_cpu(dsea->majorDeviceIdent),"
    },
    {
        "line": 63,
        "fullcodeline": "brelse(ibh);"
    },
    {
        "line": 64,
        "fullcodeline": "memcpy(&iinfo->i_location, &loc,"
    },
    {
        "line": 73,
        "fullcodeline": "brelse(bh);"
    },
    {
        "line": 80,
        "fullcodeline": "le16_to_cpu(fe->icbTag.strategyType));"
    },
    {
        "line": 113,
        "fullcodeline": "bh->b_data + sizeof(struct fileEntry),"
    },
    {
        "line": 114,
        "fullcodeline": "bs - sizeof(struct fileEntry));"
    },
    {
        "line": 152,
        "fullcodeline": "inode->i_mode = udf_convert_permissions(fe);"
    },
    {
        "line": 289,
        "fullcodeline": "le32_to_cpu(dsea->minorDeviceIdent)));"
    },
    {
        "line": 66,
        "fullcodeline": "if (++indirections > UDF_MAX_ICB_NESTING) {"
    },
    {
        "line": 115,
        "fullcodeline": "} else if (fe->descTag.tagIdent == cpu_to_le16(TAG_IDENT_USE)) {"
    },
    {
        "line": 67,
        "fullcodeline": "udf_err(inode->i_sb,"
    },
    {
        "line": 116,
        "fullcodeline": "iinfo->i_efe = 0;"
    },
    {
        "line": 117,
        "fullcodeline": "iinfo->i_use = 1;"
    },
    {
        "line": 118,
        "fullcodeline": "iinfo->i_lenAlloc = le32_to_cpu("
    },
    {
        "line": 121,
        "fullcodeline": "ret = udf_alloc_i_data(inode, bs -"
    },
    {
        "line": 125,
        "fullcodeline": "memcpy(iinfo->i_ext.i_data,"
    },
    {
        "line": 126,
        "fullcodeline": "bh->b_data + sizeof(struct unallocSpaceEntry),"
    },
    {
        "line": 127,
        "fullcodeline": "bs - sizeof(struct unallocSpaceEntry));"
    },
    {
        "line": 119,
        "fullcodeline": "((struct unallocSpaceEntry *)bh->b_data)->"
    }
]