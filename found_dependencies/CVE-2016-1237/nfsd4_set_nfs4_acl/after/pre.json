[
    {
        "line": 8,
        "fullcodeline": "struct posix_acl *pacl = NULL, *dpacl = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned int flags = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "error = fh_verify(rqstp, fhp, 0, NFSD_MAY_SATTR);"
    },
    {
        "line": 16,
        "fullcodeline": "dentry = fhp->fh_dentry;"
    },
    {
        "line": 17,
        "fullcodeline": "inode = d_inode(dentry);"
    },
    {
        "line": 22,
        "fullcodeline": "host_error = nfs4_acl_nfsv4_to_posix(acl, &pacl, &dpacl, flags);"
    },
    {
        "line": 28,
        "fullcodeline": "fh_lock(fhp);"
    },
    {
        "line": 30,
        "fullcodeline": "host_error = set_posix_acl(inode, ACL_TYPE_ACCESS, pacl);"
    },
    {
        "line": 19,
        "fullcodeline": "if (S_ISDIR(inode->i_mode))"
    },
    {
        "line": 23,
        "fullcodeline": "if (host_error == -EINVAL)"
    },
    {
        "line": 25,
        "fullcodeline": "if (host_error < 0)"
    },
    {
        "line": 31,
        "fullcodeline": "if (host_error < 0)"
    },
    {
        "line": 34,
        "fullcodeline": "if (S_ISDIR(inode->i_mode)) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (host_error == -EOPNOTSUPP)"
    },
    {
        "line": 20,
        "fullcodeline": "flags = NFS4_ACL_DIR;"
    },
    {
        "line": 35,
        "fullcodeline": "host_error = set_posix_acl(inode, ACL_TYPE_DEFAULT, dpacl);"
    },
    {
        "line": 47,
        "fullcodeline": "return nfserrno(host_error);"
    }
]