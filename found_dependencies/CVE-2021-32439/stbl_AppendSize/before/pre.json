[
    {
        "line": 4,
        "fullcodeline": "if (!nb_pack) nb_pack = 1;"
    },
    {
        "line": 6,
        "fullcodeline": "if (!stbl->SampleSize->sampleCount) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (stbl->SampleSize->sampleSize && (stbl->SampleSize->sampleSize==size)) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (i=0; i<nb_pack; i++) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (size > stbl->SampleSize->max_size)"
    },
    {
        "line": 7,
        "fullcodeline": "stbl->SampleSize->sampleSize = size;"
    },
    {
        "line": 8,
        "fullcodeline": "stbl->SampleSize->sampleCount += nb_pack;"
    },
    {
        "line": 15,
        "fullcodeline": "if (!stbl->SampleSize->sizes || (stbl->SampleSize->sampleCount+nb_pack > stbl->SampleSize->alloc_size)) {"
    },
    {
        "line": 17,
        "fullcodeline": "ALLOC_INC(stbl->SampleSize->alloc_size);"
    },
    {
        "line": 21,
        "fullcodeline": "stbl->SampleSize->sizes = (u32 *)gf_realloc(stbl->SampleSize->sizes, sizeof(u32)*stbl->SampleSize->alloc_size);"
    },
    {
        "line": 18,
        "fullcodeline": "if (stbl->SampleSize->sampleCount+nb_pack > stbl->SampleSize->alloc_size)"
    },
    {
        "line": 22,
        "fullcodeline": "if (!stbl->SampleSize->sizes) return GF_OUT_OF_MEM;"
    },
    {
        "line": 23,
        "fullcodeline": "memset(&stbl->SampleSize->sizes[stbl->SampleSize->sampleCount], 0, sizeof(u32) * (stbl->SampleSize->alloc_size - stbl->SampleSize->sampleCount) );"
    },
    {
        "line": 16,
        "fullcodeline": "Bool init_table = (stbl->SampleSize->sizes==NULL) ? 1 : 0;"
    },
    {
        "line": 19,
        "fullcodeline": "stbl->SampleSize->alloc_size = stbl->SampleSize->sampleCount+nb_pack;"
    },
    {
        "line": 26,
        "fullcodeline": "for (i=0; i<stbl->SampleSize->sampleCount; i++)"
    }
]