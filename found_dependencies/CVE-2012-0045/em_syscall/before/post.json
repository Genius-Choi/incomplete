[
    {
        "line": 3,
        "fullcodeline": "struct x86_emulate_ops *ops = ctxt->ops;"
    },
    {
        "line": 7,
        "fullcodeline": "u64 efer = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "ops->get_msr(ctxt, MSR_EFER, &efer);"
    },
    {
        "line": 15,
        "fullcodeline": "setup_syscalls_segments(ctxt, &cs, &ss);"
    },
    {
        "line": 17,
        "fullcodeline": "ops->get_msr(ctxt, MSR_STAR, &msr_data);"
    },
    {
        "line": 18,
        "fullcodeline": "msr_data >>= 32;"
    },
    {
        "line": 19,
        "fullcodeline": "cs_sel = (u16)(msr_data & 0xfffc);"
    },
    {
        "line": 20,
        "fullcodeline": "ss_sel = (u16)(msr_data + 8);"
    },
    {
        "line": 26,
        "fullcodeline": "ops->set_segment(ctxt, cs_sel, &cs, 0, VCPU_SREG_CS);"
    },
    {
        "line": 27,
        "fullcodeline": "ops->set_segment(ctxt, ss_sel, &ss, 0, VCPU_SREG_SS);"
    },
    {
        "line": 29,
        "fullcodeline": "ctxt->regs[VCPU_REGS_RCX] = ctxt->_eip;"
    },
    {
        "line": 10,
        "fullcodeline": "if (ctxt->mode == X86EMUL_MODE_REAL ||"
    },
    {
        "line": 22,
        "fullcodeline": "if (efer & EFER_LMA) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (efer & EFER_LMA) {"
    },
    {
        "line": 11,
        "fullcodeline": "ctxt->mode == X86EMUL_MODE_VM86)"
    },
    {
        "line": 23,
        "fullcodeline": "cs.d = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "cs.l = 1;"
    },
    {
        "line": 12,
        "fullcodeline": "return emulate_ud(ctxt);"
    },
    {
        "line": 44,
        "fullcodeline": "ops->get_msr(ctxt, MSR_STAR, &msr_data);"
    },
    {
        "line": 45,
        "fullcodeline": "ctxt->_eip = (u32)msr_data;"
    },
    {
        "line": 47,
        "fullcodeline": "ctxt->eflags &= ~(EFLG_VM | EFLG_IF | EFLG_RF);"
    }
]