[
    {
        "line": 3,
        "fullcodeline": "ScanType type = m_pFrame->ScanTypeOf();"
    },
    {
        "line": 5,
        "fullcodeline": "assert(m_pParser == NULL);"
    },
    {
        "line": 9,
        "fullcodeline": "m_pParser = new(m_pEnviron) class SequentialScan(m_pFrame,this,"
    },
    {
        "line": 16,
        "fullcodeline": "m_pParser = new(m_pEnviron) class SequentialScan(m_pFrame,this,"
    },
    {
        "line": 22,
        "fullcodeline": "m_pParser = new(m_pEnviron) class SequentialScan(m_pFrame,this,"
    },
    {
        "line": 28,
        "fullcodeline": "m_pParser = new(m_pEnviron) class LosslessScan(m_pFrame,this,m_ucScanStart,"
    },
    {
        "line": 32,
        "fullcodeline": "m_pParser = new(m_pEnviron) class LosslessScan(m_pFrame,this,0,"
    },
    {
        "line": 36,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACLosslessScan(m_pFrame,this,m_ucScanStart,"
    },
    {
        "line": 40,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACLosslessScan(m_pFrame,this,0,"
    },
    {
        "line": 44,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACSequentialScan(m_pFrame,this,"
    },
    {
        "line": 50,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACSequentialScan(m_pFrame,this,"
    },
    {
        "line": 142,
        "fullcodeline": "m_pParser = new(m_pEnviron) SequentialScan(m_pFrame,this,"
    },
    {
        "line": 149,
        "fullcodeline": "m_pParser = new(m_pEnviron) ACSequentialScan(m_pFrame,this,"
    },
    {
        "line": 156,
        "fullcodeline": "m_pParser = new(m_pEnviron) SequentialScan(m_pFrame,this,"
    },
    {
        "line": 163,
        "fullcodeline": "m_pParser = new(m_pEnviron) ACSequentialScan(m_pFrame,this,"
    },
    {
        "line": 196,
        "fullcodeline": "JPG_THROW(NOT_IMPLEMENTED,\"Scan::CreateParser\","
    },
    {
        "line": 56,
        "fullcodeline": "if (m_ucHighBit == 0) { // The first scan is parsed off by the regular parser."
    },
    {
        "line": 69,
        "fullcodeline": "if (m_ucHighBit == 0) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (m_ucHighBit == 0) { // The first scan is parsed off by the regular parser."
    },
    {
        "line": 99,
        "fullcodeline": "if (m_ucHighBit == 0) { // The first scan is parsed off by the regular parser."
    },
    {
        "line": 112,
        "fullcodeline": "if (m_ucHighBit == 0) { // The first scan is parsed off by the regular parser."
    },
    {
        "line": 127,
        "fullcodeline": "if (m_ucHighBit == 0) { // The first scan is parsed off by the regular parser."
    },
    {
        "line": 11,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 12,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 18,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 19,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits);"
    },
    {
        "line": 24,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 25,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,true);"
    },
    {
        "line": 29,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits);"
    },
    {
        "line": 33,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,true);"
    },
    {
        "line": 37,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits);"
    },
    {
        "line": 41,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,true);"
    },
    {
        "line": 46,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 47,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits);"
    },
    {
        "line": 52,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 53,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,true);"
    },
    {
        "line": 57,
        "fullcodeline": "m_pParser = new(m_pEnviron) class SequentialScan(m_pFrame,this,"
    },
    {
        "line": 70,
        "fullcodeline": "m_pParser = new(m_pEnviron) class SequentialScan(m_pFrame,this,"
    },
    {
        "line": 85,
        "fullcodeline": "m_pParser = new(m_pEnviron) class SequentialScan(m_pFrame,this,"
    },
    {
        "line": 100,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACSequentialScan(m_pFrame,this,"
    },
    {
        "line": 113,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACSequentialScan(m_pFrame,this,"
    },
    {
        "line": 128,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACSequentialScan(m_pFrame,this,"
    },
    {
        "line": 144,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 145,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 151,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 152,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 158,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 159,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 165,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 166,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 176,
        "fullcodeline": "m_pParser = new(m_pEnviron) class SingleComponentLSScan(m_pFrame,this,"
    },
    {
        "line": 182,
        "fullcodeline": "m_pParser = new(m_pEnviron) class LineInterleavedLSScan(m_pFrame,this,"
    },
    {
        "line": 188,
        "fullcodeline": "m_pParser = new(m_pEnviron) class SampleInterleavedLSScan(m_pFrame,this,"
    },
    {
        "line": 62,
        "fullcodeline": "m_pParser = new(m_pEnviron) class RefinementScan(m_pFrame,this,"
    },
    {
        "line": 76,
        "fullcodeline": "m_pParser = new(m_pEnviron) class RefinementScan(m_pFrame,this,"
    },
    {
        "line": 92,
        "fullcodeline": "m_pParser = new(m_pEnviron) class RefinementScan(m_pFrame,this,"
    },
    {
        "line": 105,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACRefinementScan(m_pFrame,this,"
    },
    {
        "line": 119,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACRefinementScan(m_pFrame,this,"
    },
    {
        "line": 134,
        "fullcodeline": "m_pParser = new(m_pEnviron) class ACRefinementScan(m_pFrame,this,"
    },
    {
        "line": 173,
        "fullcodeline": "if (m_ucCount != 1)"
    },
    {
        "line": 59,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 60,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits);"
    },
    {
        "line": 72,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 73,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 87,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 88,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,true);"
    },
    {
        "line": 102,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 103,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits);"
    },
    {
        "line": 115,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 116,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 130,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 131,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 174,
        "fullcodeline": "JPG_THROW(MALFORMED_STREAM,\"Scan::CreateParser\","
    },
    {
        "line": 179,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits);"
    },
    {
        "line": 185,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits);"
    },
    {
        "line": 191,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits);"
    },
    {
        "line": 64,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 65,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits);"
    },
    {
        "line": 78,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 79,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 94,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 95,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,true);"
    },
    {
        "line": 107,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 108,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits);"
    },
    {
        "line": 121,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 122,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    },
    {
        "line": 136,
        "fullcodeline": "m_ucLowBit + m_ucHiddenBits,"
    },
    {
        "line": 137,
        "fullcodeline": "m_ucHighBit + m_ucHiddenBits,"
    }
]