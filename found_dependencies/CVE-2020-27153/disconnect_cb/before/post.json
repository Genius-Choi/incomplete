[
    {
        "line": 3,
        "fullcodeline": "struct bt_att_chan *chan = user_data;"
    },
    {
        "line": 4,
        "fullcodeline": "struct bt_att *att = chan->att;"
    },
    {
        "line": 17,
        "fullcodeline": "util_debug(chan->att->debug_callback, chan->att->debug_data,"
    },
    {
        "line": 22,
        "fullcodeline": "queue_remove(att->chans, chan);"
    },
    {
        "line": 25,
        "fullcodeline": "queue_remove_all(att->req_queue, NULL, NULL, disc_att_send_op);"
    },
    {
        "line": 26,
        "fullcodeline": "queue_remove_all(att->ind_queue, NULL, NULL, disc_att_send_op);"
    },
    {
        "line": 27,
        "fullcodeline": "queue_remove_all(att->write_queue, NULL, NULL, disc_att_send_op);"
    },
    {
        "line": 39,
        "fullcodeline": "bt_att_chan_free(chan);"
    },
    {
        "line": 45,
        "fullcodeline": "bt_att_ref(att);"
    },
    {
        "line": 47,
        "fullcodeline": "queue_foreach(att->disconn_list, disconn_handler, INT_TO_PTR(err));"
    },
    {
        "line": 49,
        "fullcodeline": "bt_att_unregister_all(att);"
    },
    {
        "line": 50,
        "fullcodeline": "bt_att_unref(att);"
    },
    {
        "line": 10,
        "fullcodeline": "if (getsockopt(chan->fd, SOL_SOCKET, SO_ERROR, &err, &len) < 0) {"
    },
    {
        "line": 19,
        "fullcodeline": "chan, strerror(err));"
    },
    {
        "line": 42,
        "fullcodeline": "if (!queue_isempty(att->chans))"
    },
    {
        "line": 11,
        "fullcodeline": "util_debug(chan->att->debug_callback, chan->att->debug_data,"
    },
    {
        "line": 14,
        "fullcodeline": "err = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "disc_att_send_op(chan->pending_req);"
    },
    {
        "line": 31,
        "fullcodeline": "chan->pending_req = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "disc_att_send_op(chan->pending_ind);"
    },
    {
        "line": 36,
        "fullcodeline": "chan->pending_ind = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "\" error: %s\", chan, strerror(errno));"
    }
]