[
    {
        "line": 8,
        "fullcodeline": "BufLength = le32_to_cpu(buf->InformationBufferLength);"
    },
    {
        "line": 9,
        "fullcodeline": "BufOffset = le32_to_cpu(buf->InformationBufferOffset);"
    },
    {
        "line": 14,
        "fullcodeline": "r = rndis_add_response(params, sizeof(rndis_set_cmplt_type));"
    },
    {
        "line": 10,
        "fullcodeline": "if ((BufLength > RNDIS_MAX_TOTAL_SIZE) ||"
    },
    {
        "line": 15,
        "fullcodeline": "if (!r)"
    },
    {
        "line": 31,
        "fullcodeline": "resp->MessageType = cpu_to_le32(RNDIS_MSG_SET_C);"
    },
    {
        "line": 32,
        "fullcodeline": "resp->MessageLength = cpu_to_le32(16);"
    },
    {
        "line": 34,
        "fullcodeline": "if (gen_ndis_set_resp(params, le32_to_cpu(buf->OID),"
    },
    {
        "line": 11,
        "fullcodeline": "(BufOffset + 8 >= RNDIS_MAX_TOTAL_SIZE))"
    },
    {
        "line": 12,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 16,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 36,
        "fullcodeline": "resp->Status = cpu_to_le32(RNDIS_STATUS_NOT_SUPPORTED);"
    },
    {
        "line": 38,
        "fullcodeline": "resp->Status = cpu_to_le32(RNDIS_STATUS_SUCCESS);"
    }
]