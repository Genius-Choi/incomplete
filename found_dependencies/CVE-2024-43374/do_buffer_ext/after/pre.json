[
    {
        "line": 10,
        "fullcodeline": "int\t\tunload = (action == DOBUF_UNLOAD || action == DOBUF_DEL"
    },
    {
        "line": 368,
        "fullcodeline": "set_curbuf(buf, action);"
    },
    {
        "line": 19,
        "fullcodeline": "if (start == DOBUF_MOD)\t    // find next modified buffer"
    },
    {
        "line": 81,
        "fullcodeline": "if (buf == NULL)\t    // could not find it"
    },
    {
        "line": 302,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 312,
        "fullcodeline": "if (action == DOBUF_SPLIT)\t    // split window first"
    },
    {
        "line": 323,
        "fullcodeline": "if (buf == curbuf)"
    },
    {
        "line": 11,
        "fullcodeline": "|| action == DOBUF_WIPE || action == DOBUF_WIPE_REUSE);"
    },
    {
        "line": 15,
        "fullcodeline": "case DOBUF_FIRST:   buf = firstbuf; break;"
    },
    {
        "line": 16,
        "fullcodeline": "case DOBUF_LAST:    buf = lastbuf;  break;"
    },
    {
        "line": 17,
        "fullcodeline": "default:\t    buf = curbuf;   break;"
    },
    {
        "line": 100,
        "fullcodeline": "action == DOBUF_GOTO"
    },
    {
        "line": 102,
        "fullcodeline": "&& !check_can_set_curbuf_forceit((flags & DOBUF_FORCEIT) ? TRUE : FALSE))"
    },
    {
        "line": 106,
        "fullcodeline": "if ((action == DOBUF_GOTO || action == DOBUF_SPLIT)"
    },
    {
        "line": 107,
        "fullcodeline": "&& (buf->b_flags & BF_DUMMY))"
    },
    {
        "line": 129,
        "fullcodeline": "set_bufref(&bufref, buf);"
    },
    {
        "line": 212,
        "fullcodeline": "buf = NULL;\t// selected buffer"
    },
    {
        "line": 213,
        "fullcodeline": "bp = NULL;\t// used when no loaded buffer found"
    },
    {
        "line": 327,
        "fullcodeline": "if (action == DOBUF_GOTO && !can_abandon(curbuf, (flags & DOBUF_FORCEIT)))"
    },
    {
        "line": 21,
        "fullcodeline": "while (count-- > 0)"
    },
    {
        "line": 31,
        "fullcodeline": "if (!bufIsChanged(buf))"
    },
    {
        "line": 101,
        "fullcodeline": "&& buf != curbuf"
    },
    {
        "line": 110,
        "fullcodeline": "semsg(_(e_buffer_nr_does_not_exist), count);"
    },
    {
        "line": 133,
        "fullcodeline": "if (action != DOBUF_WIPE && action != DOBUF_WIPE_REUSE"
    },
    {
        "line": 171,
        "fullcodeline": "if (buf == curbuf && VIsual_active)"
    },
    {
        "line": 177,
        "fullcodeline": "if (bp->b_p_bl && bp != buf)"
    },
    {
        "line": 194,
        "fullcodeline": "if (buf != curbuf)"
    },
    {
        "line": 254,
        "fullcodeline": "if (buf == NULL)\t// No previous buffer, Try 2'nd approach"
    },
    {
        "line": 283,
        "fullcodeline": "if (buf == NULL)\t// No loaded buffer, use unloaded one"
    },
    {
        "line": 285,
        "fullcodeline": "if (buf == NULL)\t// No loaded buffer, find listed one"
    },
    {
        "line": 291,
        "fullcodeline": "if (buf == NULL)\t// Still no buffer, just take one"
    },
    {
        "line": 306,
        "fullcodeline": "return empty_curbuf(FALSE, (flags & DOBUF_FORCEIT), action);"
    },
    {
        "line": 318,
        "fullcodeline": "if (win_split(0, 0) == FAIL)"
    },
    {
        "line": 33,
        "fullcodeline": "emsg(_(e_no_modified_buffer_found));"
    },
    {
        "line": 37,
        "fullcodeline": "else if (start == DOBUF_FIRST && count) // find specified buffer number"
    },
    {
        "line": 126,
        "fullcodeline": "if (!can_unload_buffer(buf))"
    },
    {
        "line": 134,
        "fullcodeline": "&& buf->b_ml.ml_mfp == NULL && !buf->b_p_bl)"
    },
    {
        "line": 137,
        "fullcodeline": "if ((flags & DOBUF_FORCEIT) == 0 && bufIsChanged(buf))"
    },
    {
        "line": 179,
        "fullcodeline": "if (bp == NULL && buf == curbuf)"
    },
    {
        "line": 185,
        "fullcodeline": "while (buf == curbuf"
    },
    {
        "line": 187,
        "fullcodeline": "&& (!ONE_WINDOW || first_tabpage->tp_next != NULL))"
    },
    {
        "line": 196,
        "fullcodeline": "close_windows(buf, FALSE);"
    },
    {
        "line": 214,
        "fullcodeline": "if (au_new_curbuf.br_buf != NULL && bufref_valid(&au_new_curbuf))"
    },
    {
        "line": 215,
        "fullcodeline": "buf = au_new_curbuf.br_buf;"
    },
    {
        "line": 256,
        "fullcodeline": "forward = TRUE;"
    },
    {
        "line": 257,
        "fullcodeline": "buf = curbuf->b_next;"
    },
    {
        "line": 284,
        "fullcodeline": "buf = bp;"
    },
    {
        "line": 315,
        "fullcodeline": "if (swbuf_goto_win_with_buf(buf) != NULL)"
    },
    {
        "line": 29,
        "fullcodeline": "while (buf != curbuf && !bufIsChanged(buf));"
    },
    {
        "line": 180,
        "fullcodeline": "return empty_curbuf(TRUE, (flags & DOBUF_FORCEIT), action);"
    },
    {
        "line": 186,
        "fullcodeline": "&& !(win_locked(curwin) || curwin->w_buffer->b_locked > 0)"
    },
    {
        "line": 189,
        "fullcodeline": "if (win_close(curwin, FALSE) == FAIL)"
    },
    {
        "line": 293,
        "fullcodeline": "if (curbuf->b_next != NULL)"
    },
    {
        "line": 297,
        "fullcodeline": "if (bt_quickfix(buf))"
    },
    {
        "line": 25,
        "fullcodeline": "buf = buf->b_next;"
    },
    {
        "line": 40,
        "fullcodeline": "buf = buf->b_next;"
    },
    {
        "line": 44,
        "fullcodeline": "bp = NULL;"
    },
    {
        "line": 197,
        "fullcodeline": "if (buf != curbuf && bufref_valid(&bufref) && buf->b_nwindows <= 0)"
    },
    {
        "line": 216,
        "fullcodeline": "else if (curwin->w_jumplistlen > 0)"
    },
    {
        "line": 288,
        "fullcodeline": "if (buf->b_p_bl && buf != curbuf && !bt_quickfix(buf))"
    },
    {
        "line": 294,
        "fullcodeline": "buf = curbuf->b_next;"
    },
    {
        "line": 298,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 39,
        "fullcodeline": "while (buf != NULL && buf->b_fnum != count)"
    },
    {
        "line": 87,
        "fullcodeline": "semsg(_(e_buffer_nr_does_not_exist), count);"
    },
    {
        "line": 220,
        "fullcodeline": "jumpidx = curwin->w_jumplistidx - 1;"
    },
    {
        "line": 224,
        "fullcodeline": "forward = jumpidx;"
    },
    {
        "line": 260,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 269,
        "fullcodeline": "if (buf->b_help == curbuf->b_help && buf->b_p_bl"
    },
    {
        "line": 296,
        "fullcodeline": "buf = curbuf->b_prev;"
    },
    {
        "line": 27,
        "fullcodeline": "buf = firstbuf;"
    },
    {
        "line": 45,
        "fullcodeline": "while (count > 0 || (!unload && !buf->b_p_bl && bp != buf))"
    },
    {
        "line": 90,
        "fullcodeline": "emsg(_(e_cannot_go_beyond_last_buffer));"
    },
    {
        "line": 221,
        "fullcodeline": "if (jumpidx < 0)"
    },
    {
        "line": 225,
        "fullcodeline": "while (jumpidx != curwin->w_jumplistidx)"
    },
    {
        "line": 264,
        "fullcodeline": "buf = curbuf->b_prev;"
    },
    {
        "line": 265,
        "fullcodeline": "forward = FALSE;"
    },
    {
        "line": 270,
        "fullcodeline": "&& !bt_quickfix(buf))"
    },
    {
        "line": 278,
        "fullcodeline": "buf = buf->b_next;"
    },
    {
        "line": 49,
        "fullcodeline": "if (bp == NULL)"
    },
    {
        "line": 51,
        "fullcodeline": "if (dir == FORWARD)"
    },
    {
        "line": 66,
        "fullcodeline": "if (unload || (buf->b_p_bl"
    },
    {
        "line": 72,
        "fullcodeline": "if (bp == buf)"
    },
    {
        "line": 92,
        "fullcodeline": "emsg(_(e_cannot_go_before_first_buffer));"
    },
    {
        "line": 222,
        "fullcodeline": "jumpidx = curwin->w_jumplistlen - 1;"
    },
    {
        "line": 227,
        "fullcodeline": "buf = buflist_findnr(curwin->w_jumplist[jumpidx].fmark.fnum);"
    },
    {
        "line": 272,
        "fullcodeline": "if (buf->b_ml.ml_mfp != NULL)   // found loaded buffer"
    },
    {
        "line": 274,
        "fullcodeline": "if (bp == NULL)\t// remember unloaded buf for later"
    },
    {
        "line": 280,
        "fullcodeline": "buf = buf->b_prev;"
    },
    {
        "line": 50,
        "fullcodeline": "bp = buf;"
    },
    {
        "line": 53,
        "fullcodeline": "buf = buf->b_next;"
    },
    {
        "line": 69,
        "fullcodeline": "--count;"
    },
    {
        "line": 70,
        "fullcodeline": "bp = NULL;\t// use this buffer as new starting point"
    },
    {
        "line": 228,
        "fullcodeline": "if (buf != NULL)"
    },
    {
        "line": 242,
        "fullcodeline": "if (buf != NULL)   // found a valid buffer: stop searching"
    },
    {
        "line": 249,
        "fullcodeline": "if (jumpidx == forward)\t\t// List exhausted for sure"
    },
    {
        "line": 275,
        "fullcodeline": "bp = buf;"
    },
    {
        "line": 54,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 59,
        "fullcodeline": "buf = buf->b_prev;"
    },
    {
        "line": 67,
        "fullcodeline": "&& ((flags & DOBUF_SKIPHELP) == 0 || buf->b_help == bp->b_help)))"
    },
    {
        "line": 75,
        "fullcodeline": "emsg(_(e_there_is_no_listed_buffer));"
    },
    {
        "line": 245,
        "fullcodeline": "if (!jumpidx && curwin->w_jumplistidx == curwin->w_jumplistlen)"
    },
    {
        "line": 247,
        "fullcodeline": "if (--jumpidx < 0)"
    },
    {
        "line": 248,
        "fullcodeline": "jumpidx = curwin->w_jumplistlen - 1;"
    },
    {
        "line": 55,
        "fullcodeline": "buf = firstbuf;"
    },
    {
        "line": 60,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 61,
        "fullcodeline": "buf = lastbuf;"
    },
    {
        "line": 232,
        "fullcodeline": "if (buf == curbuf || !buf->b_p_bl || bt_quickfix(buf))"
    },
    {
        "line": 233,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 234,
        "fullcodeline": "else if (buf->b_ml.ml_mfp == NULL)"
    },
    {
        "line": 239,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 237,
        "fullcodeline": "if (bp == NULL)"
    },
    {
        "line": 238,
        "fullcodeline": "bp = buf;"
    }
]