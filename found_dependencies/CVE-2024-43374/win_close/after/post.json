[
    {
        "line": 4,
        "fullcodeline": "int\t\tother_buffer = FALSE;"
    },
    {
        "line": 5,
        "fullcodeline": "int\t\tclose_curwin = FALSE;"
    },
    {
        "line": 7,
        "fullcodeline": "int\t\thelp_window = FALSE;"
    },
    {
        "line": 8,
        "fullcodeline": "tabpage_T   *prev_curtab = curtab;"
    },
    {
        "line": 117,
        "fullcodeline": "trigger_winclosed(win);"
    },
    {
        "line": 122,
        "fullcodeline": "win_close_buffer(win, free_buf ? DOBUF_UNLOAD : 0, TRUE);"
    },
    {
        "line": 156,
        "fullcodeline": "++split_disallowed;"
    },
    {
        "line": 163,
        "fullcodeline": "wp = win_free_mem(win, &dir, NULL);"
    },
    {
        "line": 217,
        "fullcodeline": "last_status(FALSE);"
    },
    {
        "line": 245,
        "fullcodeline": "--split_disallowed;"
    },
    {
        "line": 279,
        "fullcodeline": "redraw_all_later(UPD_NOT_VALID);"
    },
    {
        "line": 25,
        "fullcodeline": "if (last_window())"
    },
    {
        "line": 30,
        "fullcodeline": "if (window_layout_locked(CMD_close))"
    },
    {
        "line": 33,
        "fullcodeline": "if (win_locked(win) || (win->w_buffer != NULL"
    },
    {
        "line": 36,
        "fullcodeline": "if (win_unlisted(win))"
    },
    {
        "line": 41,
        "fullcodeline": "if ((is_aucmd_win(firstwin) || is_aucmd_win(lastwin)) && one_window())"
    },
    {
        "line": 50,
        "fullcodeline": "if (close_last_window_tabpage(win, free_buf, prev_curtab))"
    },
    {
        "line": 55,
        "fullcodeline": "if (bt_help(win->w_buffer))"
    },
    {
        "line": 60,
        "fullcodeline": "if (win == curwin)"
    },
    {
        "line": 119,
        "fullcodeline": "if (!win_valid_any_tab(win))"
    },
    {
        "line": 124,
        "fullcodeline": "if (win_valid(win) && win->w_buffer == NULL"
    },
    {
        "line": 138,
        "fullcodeline": "if (curtab != prev_curtab && win_valid_any_tab(win)"
    },
    {
        "line": 148,
        "fullcodeline": "if (!win_valid(win) || last_window()"
    },
    {
        "line": 178,
        "fullcodeline": "if (win == curwin)"
    },
    {
        "line": 219,
        "fullcodeline": "if (p_ea && (*p_ead == 'b' || *p_ead == dir))"
    },
    {
        "line": 27,
        "fullcodeline": "emsg(_(e_cannot_close_last_window));"
    },
    {
        "line": 38,
        "fullcodeline": "emsg(_(e_cannot_close_autocmd_or_popup_window));"
    },
    {
        "line": 43,
        "fullcodeline": "emsg(_(e_cannot_close_window_only_autocmd_window_would_remain));"
    },
    {
        "line": 56,
        "fullcodeline": "help_window = TRUE;"
    },
    {
        "line": 69,
        "fullcodeline": "wp = frame2win(win_altframe(win, NULL));"
    },
    {
        "line": 90,
        "fullcodeline": "win->w_locked = TRUE;"
    },
    {
        "line": 91,
        "fullcodeline": "apply_autocmds(EVENT_WINLEAVE, NULL, NULL, FALSE, curbuf);"
    },
    {
        "line": 94,
        "fullcodeline": "win->w_locked = FALSE;"
    },
    {
        "line": 134,
        "fullcodeline": "getout(0);"
    },
    {
        "line": 139,
        "fullcodeline": "&& win->w_buffer == NULL)"
    },
    {
        "line": 142,
        "fullcodeline": "win_close_othertab(win, FALSE, prev_curtab);"
    },
    {
        "line": 149,
        "fullcodeline": "|| close_last_window_tabpage(win, free_buf, prev_curtab))"
    },
    {
        "line": 169,
        "fullcodeline": "win_T *prev_win = get_snapshot_curwin(SNAP_HELP_IDX);"
    },
    {
        "line": 180,
        "fullcodeline": "curwin = wp;"
    },
    {
        "line": 204,
        "fullcodeline": "curbuf = curwin->w_buffer;"
    },
    {
        "line": 205,
        "fullcodeline": "close_curwin = TRUE;"
    },
    {
        "line": 209,
        "fullcodeline": "check_cursor();"
    },
    {
        "line": 222,
        "fullcodeline": "win_equal(curwin, curwin->w_frame->fr_parent == win_frame, dir);"
    },
    {
        "line": 235,
        "fullcodeline": "(void)"
    },
    {
        "line": 254,
        "fullcodeline": "restore_snapshot(SNAP_HELP_IDX, close_curwin);"
    },
    {
        "line": 34,
        "fullcodeline": "&& win->w_buffer->b_locked > 0))"
    },
    {
        "line": 58,
        "fullcodeline": "clear_snapshot(curtab, SNAP_HELP_IDX);"
    },
    {
        "line": 75,
        "fullcodeline": "if (wp->w_buffer != curbuf)"
    },
    {
        "line": 92,
        "fullcodeline": "if (!win_valid(win))"
    },
    {
        "line": 95,
        "fullcodeline": "if (last_window())"
    },
    {
        "line": 132,
        "fullcodeline": "if (curwin->w_buffer == NULL)"
    },
    {
        "line": 171,
        "fullcodeline": "if (win_valid(prev_win))"
    },
    {
        "line": 225,
        "fullcodeline": "win_comp_pos();"
    },
    {
        "line": 226,
        "fullcodeline": "win_fix_scroll(FALSE);"
    },
    {
        "line": 237,
        "fullcodeline": "win_enter_ext(wp,"
    },
    {
        "line": 77,
        "fullcodeline": "reset_VIsual_and_resel();\t// stop Visual mode"
    },
    {
        "line": 79,
        "fullcodeline": "other_buffer = TRUE;"
    },
    {
        "line": 82,
        "fullcodeline": "win->w_locked = TRUE;"
    },
    {
        "line": 83,
        "fullcodeline": "apply_autocmds(EVENT_BUFLEAVE, NULL, NULL, FALSE, curbuf);"
    },
    {
        "line": 86,
        "fullcodeline": "win->w_locked = FALSE;"
    },
    {
        "line": 133,
        "fullcodeline": "curwin->w_buffer = curbuf;"
    },
    {
        "line": 172,
        "fullcodeline": "wp = prev_win;"
    },
    {
        "line": 238,
        "fullcodeline": "WEE_CURWIN_INVALID | WEE_TRIGGER_ENTER_AUTOCMDS"
    },
    {
        "line": 242,
        "fullcodeline": "apply_autocmds(EVENT_BUFENTER, NULL, NULL, FALSE, curbuf);"
    },
    {
        "line": 80,
        "fullcodeline": "if (!win_valid(win))"
    },
    {
        "line": 84,
        "fullcodeline": "if (!win_valid(win))"
    },
    {
        "line": 87,
        "fullcodeline": "if (last_window())"
    }
]