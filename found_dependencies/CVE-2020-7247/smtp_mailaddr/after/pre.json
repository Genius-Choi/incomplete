[
    {
        "line": 12,
        "fullcodeline": "e = strchr(line, '>');"
    },
    {
        "line": 23,
        "fullcodeline": "p = strchr(maddr->user, ':');"
    },
    {
        "line": 6,
        "fullcodeline": "if (line == NULL)"
    },
    {
        "line": 9,
        "fullcodeline": "if (*line != '<')"
    },
    {
        "line": 13,
        "fullcodeline": "if (e == NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "while (*e == ' ')"
    },
    {
        "line": 17,
        "fullcodeline": "e++;"
    },
    {
        "line": 24,
        "fullcodeline": "if (p != NULL) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (maddr->domain[0] == '\\0') {"
    },
    {
        "line": 15,
        "fullcodeline": "*e++ = '\\0';"
    },
    {
        "line": 20,
        "fullcodeline": "if (!text_to_mailaddr(maddr, line + 1))"
    },
    {
        "line": 25,
        "fullcodeline": "p++;"
    },
    {
        "line": 26,
        "fullcodeline": "memmove(maddr->user, p, strlen(p) + 1);"
    },
    {
        "line": 30,
        "fullcodeline": "if (mailfrom && maddr->user[0] == '\\0' && maddr->domain[0] == '\\0')"
    },
    {
        "line": 34,
        "fullcodeline": "if (maddr->user[0] == '\\0' || !valid_localpart(maddr->user))"
    },
    {
        "line": 43,
        "fullcodeline": "if (!valid_domainpart(maddr->domain))"
    },
    {
        "line": 39,
        "fullcodeline": "(void)strlcpy(maddr->domain, domain,"
    }
]