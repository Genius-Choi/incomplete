[
    {
        "line": 4,
        "fullcodeline": "struct vhost_virtqueue *vq = &nvq->vq;"
    },
    {
        "line": 7,
        "fullcodeline": "struct msghdr msg = {"
    },
    {
        "line": 15,
        "fullcodeline": "struct virtio_net_hdr_mrg_rxbuf hdr = {"
    },
    {
        "line": 19,
        "fullcodeline": "size_t total_len = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "mutex_lock(&vq->mutex);"
    },
    {
        "line": 27,
        "fullcodeline": "sock = vq->private_data;"
    },
    {
        "line": 30,
        "fullcodeline": "vhost_disable_notify(&net->dev, vq);"
    },
    {
        "line": 32,
        "fullcodeline": "vhost_hlen = nvq->vhost_hlen;"
    },
    {
        "line": 33,
        "fullcodeline": "sock_hlen = nvq->sock_hlen;"
    },
    {
        "line": 35,
        "fullcodeline": "vq_log = unlikely(vhost_has_feature(&net->dev, VHOST_F_LOG_ALL)) ?"
    },
    {
        "line": 37,
        "fullcodeline": "mergeable = vhost_has_feature(&net->dev, VIRTIO_NET_F_MRG_RXBUF);"
    },
    {
        "line": 107,
        "fullcodeline": "mutex_unlock(&vq->mutex);"
    },
    {
        "line": 28,
        "fullcodeline": "if (!sock)"
    },
    {
        "line": 39,
        "fullcodeline": "while ((sock_len = peek_head_len(sock->sk))) {"
    },
    {
        "line": 40,
        "fullcodeline": "sock_len += sock_hlen;"
    },
    {
        "line": 41,
        "fullcodeline": "vhost_len = sock_len + vhost_hlen;"
    },
    {
        "line": 42,
        "fullcodeline": "headcount = get_rx_bufs(vq, vq->heads, vhost_len,"
    },
    {
        "line": 68,
        "fullcodeline": "msg.msg_iovlen = in;"
    },
    {
        "line": 69,
        "fullcodeline": "err = sock->ops->recvmsg(NULL, sock, &msg,"
    },
    {
        "line": 96,
        "fullcodeline": "vhost_add_used_and_signal_n(&net->dev, vq, vq->heads,"
    },
    {
        "line": 100,
        "fullcodeline": "total_len += vhost_len;"
    },
    {
        "line": 8,
        "fullcodeline": ".msg_name = NULL,"
    },
    {
        "line": 9,
        "fullcodeline": ".msg_namelen = 0,"
    },
    {
        "line": 10,
        "fullcodeline": ".msg_control = NULL, /* FIXME: get and handle RX aux data. */"
    },
    {
        "line": 11,
        "fullcodeline": ".msg_controllen = 0,"
    },
    {
        "line": 12,
        "fullcodeline": ".msg_iov = vq->iov,"
    },
    {
        "line": 13,
        "fullcodeline": ".msg_flags = MSG_DONTWAIT,"
    },
    {
        "line": 16,
        "fullcodeline": ".hdr.flags = 0,"
    },
    {
        "line": 17,
        "fullcodeline": ".hdr.gso_type = VIRTIO_NET_HDR_GSO_NONE"
    },
    {
        "line": 46,
        "fullcodeline": "if (unlikely(headcount < 0))"
    },
    {
        "line": 49,
        "fullcodeline": "if (!headcount) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (unlikely((vhost_hlen)))"
    },
    {
        "line": 74,
        "fullcodeline": "if (unlikely(err != sock_len)) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (unlikely(vhost_hlen) &&"
    },
    {
        "line": 98,
        "fullcodeline": "if (unlikely(vq_log))"
    },
    {
        "line": 101,
        "fullcodeline": "if (unlikely(total_len >= VHOST_NET_WEIGHT)) {"
    },
    {
        "line": 44,
        "fullcodeline": "likely(mergeable) ? UIO_MAXIOV : 1);"
    },
    {
        "line": 63,
        "fullcodeline": "move_iovec_hdr(vq->iov, nvq->hdr, vhost_hlen, in);"
    },
    {
        "line": 70,
        "fullcodeline": "sock_len, MSG_DONTWAIT | MSG_TRUNC);"
    },
    {
        "line": 75,
        "fullcodeline": "pr_debug(\"Discarded rx packet: \""
    },
    {
        "line": 77,
        "fullcodeline": "vhost_discard_vq_desc(vq, headcount);"
    },
    {
        "line": 81,
        "fullcodeline": "memcpy_toiovecend(nvq->hdr, (unsigned char *)&hdr, 0,"
    },
    {
        "line": 83,
        "fullcodeline": "vq_err(vq, \"Unable to write vnet_hdr at addr %p\\n\","
    },
    {
        "line": 92,
        "fullcodeline": "vq_err(vq, \"Failed num_buffers write\");"
    },
    {
        "line": 93,
        "fullcodeline": "vhost_discard_vq_desc(vq, headcount);"
    },
    {
        "line": 99,
        "fullcodeline": "vhost_log_write(vq, vq_log, log, vhost_len);"
    },
    {
        "line": 102,
        "fullcodeline": "vhost_poll_queue(&vq->poll);"
    },
    {
        "line": 50,
        "fullcodeline": "if (unlikely(vhost_enable_notify(&net->dev, vq))) {"
    },
    {
        "line": 67,
        "fullcodeline": "copy_iovec_hdr(vq->iov, nvq->hdr, sock_hlen, in);"
    },
    {
        "line": 53,
        "fullcodeline": "vhost_disable_notify(&net->dev, vq);"
    }
]