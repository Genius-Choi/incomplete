[
    {
        "line": 10,
        "fullcodeline": "int seg = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "int headcount = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int r, nlogs = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "heads[headcount - 1].len += datalen;"
    },
    {
        "line": 44,
        "fullcodeline": "*iovcount = seg;"
    },
    {
        "line": 55,
        "fullcodeline": "vhost_discard_vq_desc(vq, headcount);"
    },
    {
        "line": 15,
        "fullcodeline": "while (datalen > 0 && headcount < quota) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (unlikely(log))"
    },
    {
        "line": 49,
        "fullcodeline": "if (unlikely(datalen > 0)) {"
    },
    {
        "line": 20,
        "fullcodeline": "d = vhost_get_vq_desc(vq->dev, vq, vq->iov + seg,"
    },
    {
        "line": 37,
        "fullcodeline": "heads[headcount].id = d;"
    },
    {
        "line": 38,
        "fullcodeline": "heads[headcount].len = iov_length(vq->iov + seg, in);"
    },
    {
        "line": 39,
        "fullcodeline": "datalen -= heads[headcount].len;"
    },
    {
        "line": 40,
        "fullcodeline": "++headcount;"
    },
    {
        "line": 41,
        "fullcodeline": "seg += in;"
    },
    {
        "line": 46,
        "fullcodeline": "*log_num = nlogs;"
    },
    {
        "line": 50,
        "fullcodeline": "r = UIO_MAXIOV + 1;"
    },
    {
        "line": 16,
        "fullcodeline": "if (unlikely(seg >= UIO_MAXIOV)) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (d == vq->num) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (unlikely(out || in <= 0)) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (unlikely(log)) {"
    },
    {
        "line": 17,
        "fullcodeline": "r = -ENOBUFS;"
    },
    {
        "line": 21,
        "fullcodeline": "ARRAY_SIZE(vq->iov) - seg, &out,"
    },
    {
        "line": 24,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "vq_err(vq, \"unexpected descriptor format for RX: \""
    },
    {
        "line": 30,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 34,
        "fullcodeline": "nlogs += *log_num;"
    },
    {
        "line": 35,
        "fullcodeline": "log += *log_num;"
    }
]