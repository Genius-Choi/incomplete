[
    {
        "line": 10,
        "fullcodeline": "int16_t klinux_family = input->klinux_sa_family;"
    },
    {
        "line": 5,
        "fullcodeline": "if (!input || !output || !output_len || input_len == 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (klinux_family == kLinux_AF_UNIX) {"
    },
    {
        "line": 6,
        "fullcodeline": "output = nullptr;"
    },
    {
        "line": 12,
        "fullcodeline": "struct klinux_sockaddr_un *klinux_sockaddr_un_in ="
    },
    {
        "line": 17,
        "fullcodeline": "sockaddr_un_out.sun_family = AF_UNIX;"
    },
    {
        "line": 19,
        "fullcodeline": "ReinterpretCopyArray("
    },
    {
        "line": 23,
        "fullcodeline": "CopySockaddr(&sockaddr_un_out, sizeof(sockaddr_un_out), output, output_len);"
    },
    {
        "line": 13,
        "fullcodeline": "const_cast<struct klinux_sockaddr_un *>("
    },
    {
        "line": 14,
        "fullcodeline": "reinterpret_cast<const struct klinux_sockaddr_un *>(input));"
    },
    {
        "line": 24,
        "fullcodeline": "} else if (klinux_family == kLinux_AF_INET) {"
    },
    {
        "line": 25,
        "fullcodeline": "struct klinux_sockaddr_in *klinux_sockaddr_in_in ="
    },
    {
        "line": 30,
        "fullcodeline": "sockaddr_in_out.sin_family = AF_INET;"
    },
    {
        "line": 31,
        "fullcodeline": "sockaddr_in_out.sin_port = klinux_sockaddr_in_in->klinux_sin_port;"
    },
    {
        "line": 33,
        "fullcodeline": "ReinterpretCopySingle(&sockaddr_in_out.sin_addr,"
    },
    {
        "line": 36,
        "fullcodeline": "ReinterpretCopyArray(sockaddr_in_out.sin_zero,"
    },
    {
        "line": 38,
        "fullcodeline": "CopySockaddr(&sockaddr_in_out, sizeof(sockaddr_in_out), output, output_len);"
    },
    {
        "line": 26,
        "fullcodeline": "const_cast<struct klinux_sockaddr_in *>("
    },
    {
        "line": 27,
        "fullcodeline": "reinterpret_cast<const struct klinux_sockaddr_in *>(input));"
    },
    {
        "line": 39,
        "fullcodeline": "} else if (klinux_family == kLinux_AF_INET6) {"
    },
    {
        "line": 40,
        "fullcodeline": "struct klinux_sockaddr_in6 *klinux_sockaddr_in6_in ="
    },
    {
        "line": 45,
        "fullcodeline": "sockaddr_in6_out.sin6_family = AF_INET6;"
    },
    {
        "line": 46,
        "fullcodeline": "sockaddr_in6_out.sin6_port = klinux_sockaddr_in6_in->klinux_sin6_port;"
    },
    {
        "line": 47,
        "fullcodeline": "sockaddr_in6_out.sin6_flowinfo ="
    },
    {
        "line": 49,
        "fullcodeline": "sockaddr_in6_out.sin6_scope_id ="
    },
    {
        "line": 52,
        "fullcodeline": "ReinterpretCopySingle(&sockaddr_in6_out.sin6_addr,"
    },
    {
        "line": 54,
        "fullcodeline": "CopySockaddr(&sockaddr_in6_out, sizeof(sockaddr_in6_out), output,"
    },
    {
        "line": 41,
        "fullcodeline": "const_cast<struct klinux_sockaddr_in6 *>("
    },
    {
        "line": 42,
        "fullcodeline": "reinterpret_cast<const struct klinux_sockaddr_in6 *>(input));"
    },
    {
        "line": 56,
        "fullcodeline": "} else if (klinux_family == kLinux_AF_UNSPEC) {"
    },
    {
        "line": 57,
        "fullcodeline": "output = nullptr;"
    },
    {
        "line": 58,
        "fullcodeline": "*output_len = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "if (abort_handler != nullptr) {"
    },
    {
        "line": 61,
        "fullcodeline": "std::string message = absl::StrCat("
    },
    {
        "line": 63,
        "fullcodeline": "abort_handler(message.c_str());"
    },
    {
        "line": 65,
        "fullcodeline": "abort();"
    }
]