[
    {
        "line": 11,
        "fullcodeline": "nsegs = be32_to_cpup(src);"
    },
    {
        "line": 12,
        "fullcodeline": "*dst++ = *src++;"
    },
    {
        "line": 14,
        "fullcodeline": "for (i = nsegs; i; i--) {"
    },
    {
        "line": 8,
        "fullcodeline": "*dst++ = *src++;"
    },
    {
        "line": 19,
        "fullcodeline": "seg_len = be32_to_cpu(*src);"
    },
    {
        "line": 29,
        "fullcodeline": "dst++; src++;"
    },
    {
        "line": 33,
        "fullcodeline": "*dst++ = *src++;"
    },
    {
        "line": 20,
        "fullcodeline": "if (remaining >= seg_len) {"
    },
    {
        "line": 16,
        "fullcodeline": "*dst++ = *src++;"
    },
    {
        "line": 22,
        "fullcodeline": "*dst = *src;"
    },
    {
        "line": 23,
        "fullcodeline": "remaining -= seg_len;"
    },
    {
        "line": 32,
        "fullcodeline": "*dst++ = *src++;"
    },
    {
        "line": 26,
        "fullcodeline": "*dst = cpu_to_be32(remaining);"
    },
    {
        "line": 27,
        "fullcodeline": "remaining = 0;"
    }
]