[
    {
        "line": 3,
        "fullcodeline": "int\t\terr = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "struct svc_rqst *rqstp = vrqstp;"
    },
    {
        "line": 7,
        "fullcodeline": "set_freezable();"
    },
    {
        "line": 10,
        "fullcodeline": "allow_signal(SIGKILL);"
    },
    {
        "line": 45,
        "fullcodeline": "flush_signals(current);"
    },
    {
        "line": 48,
        "fullcodeline": "nlm_shutdown_hosts();"
    },
    {
        "line": 18,
        "fullcodeline": "while (!kthread_should_stop()) {"
    },
    {
        "line": 19,
        "fullcodeline": "long timeout = MAX_SCHEDULE_TIMEOUT;"
    },
    {
        "line": 23,
        "fullcodeline": "rqstp->rq_server->sv_maxconn = nlm_max_connections;"
    },
    {
        "line": 31,
        "fullcodeline": "timeout = nlmsvc_retry_blocked();"
    },
    {
        "line": 37,
        "fullcodeline": "err = svc_recv(rqstp, timeout);"
    },
    {
        "line": 40,
        "fullcodeline": "dprintk(\"lockd: request from %s\\n\","
    },
    {
        "line": 43,
        "fullcodeline": "svc_process(rqstp);"
    },
    {
        "line": 47,
        "fullcodeline": "nlmsvc_invalidate_all();"
    },
    {
        "line": 25,
        "fullcodeline": "if (signalled()) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (err == -EAGAIN || err == -EINTR)"
    },
    {
        "line": 41,
        "fullcodeline": "svc_print_addr(rqstp, buf, sizeof(buf)));"
    },
    {
        "line": 26,
        "fullcodeline": "flush_signals(current);"
    },
    {
        "line": 27,
        "fullcodeline": "restart_grace();"
    }
]