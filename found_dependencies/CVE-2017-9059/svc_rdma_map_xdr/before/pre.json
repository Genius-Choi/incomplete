[
    {
        "line": 19,
        "fullcodeline": "sge_no = 1;"
    },
    {
        "line": 24,
        "fullcodeline": "sge_no++;"
    },
    {
        "line": 27,
        "fullcodeline": "page_no = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "page_bytes = xdr->page_len;"
    },
    {
        "line": 29,
        "fullcodeline": "page_off = xdr->page_base;"
    },
    {
        "line": 60,
        "fullcodeline": "dprintk(\"svcrdma: %s: sge_no %d page_no %d \""
    },
    {
        "line": 12,
        "fullcodeline": "if (xdr->len !="
    },
    {
        "line": 13,
        "fullcodeline": "(xdr->head[0].iov_len + xdr->page_len + xdr->tail[0].iov_len)) {"
    },
    {
        "line": 14,
        "fullcodeline": "pr_err(\"svcrdma: %s: XDR buffer length error\\n\", __func__);"
    },
    {
        "line": 33,
        "fullcodeline": "sge_bytes = min_t(u32, page_bytes, (PAGE_SIZE - page_off));"
    },
    {
        "line": 34,
        "fullcodeline": "page_bytes -= sge_bytes;"
    },
    {
        "line": 37,
        "fullcodeline": "sge_no++;"
    },
    {
        "line": 38,
        "fullcodeline": "page_no++;"
    },
    {
        "line": 39,
        "fullcodeline": "page_off = 0; /* reset for next time through loop */"
    },
    {
        "line": 44,
        "fullcodeline": "unsigned char *base = xdr->tail[0].iov_base;"
    },
    {
        "line": 45,
        "fullcodeline": "size_t len = xdr->tail[0].iov_len;"
    },
    {
        "line": 46,
        "fullcodeline": "u32 xdr_pad = xdr_padsize(xdr->page_len);"
    },
    {
        "line": 15,
        "fullcodeline": "return -EIO;"
    },
    {
        "line": 48,
        "fullcodeline": "if (write_chunk_present && xdr_pad) {"
    },
    {
        "line": 32,
        "fullcodeline": "page_address(xdr->pages[page_no]) + page_off;"
    },
    {
        "line": 49,
        "fullcodeline": "base += xdr_pad;"
    },
    {
        "line": 50,
        "fullcodeline": "len -= xdr_pad;"
    },
    {
        "line": 56,
        "fullcodeline": "sge_no++;"
    }
]