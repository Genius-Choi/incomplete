[
    {
        "line": 4,
        "fullcodeline": "struct svc_rqst *rqstp = vrqstp;"
    },
    {
        "line": 6,
        "fullcodeline": "set_freezable();"
    },
    {
        "line": 20,
        "fullcodeline": "svc_exit_thread(rqstp);"
    },
    {
        "line": 21,
        "fullcodeline": "module_put_and_exit(0);"
    },
    {
        "line": 8,
        "fullcodeline": "while (!kthread_freezable_should_stop(NULL)) {"
    },
    {
        "line": 15,
        "fullcodeline": "err = svc_recv(rqstp, MAX_SCHEDULE_TIMEOUT);"
    },
    {
        "line": 18,
        "fullcodeline": "svc_process(rqstp);"
    },
    {
        "line": 10,
        "fullcodeline": "if (signal_pending(current))"
    },
    {
        "line": 16,
        "fullcodeline": "if (err == -EAGAIN || err == -EINTR)"
    },
    {
        "line": 11,
        "fullcodeline": "flush_signals(current);"
    }
]