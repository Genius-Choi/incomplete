[
    {
        "line": 6,
        "fullcodeline": "u32 max_blocksize = svc_max_payload(rqstp);"
    },
    {
        "line": 8,
        "fullcodeline": "p = decode_fh(p, &args->fh);"
    },
    {
        "line": 11,
        "fullcodeline": "p = xdr_decode_hyper(p, &args->offset);"
    },
    {
        "line": 12,
        "fullcodeline": "args->count = ntohl(*p++);"
    },
    {
        "line": 17,
        "fullcodeline": "len = min(args->count, max_blocksize);"
    },
    {
        "line": 20,
        "fullcodeline": "v=0;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!p)"
    },
    {
        "line": 21,
        "fullcodeline": "while (len > 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (!xdr_argsize_check(rqstp, p))"
    },
    {
        "line": 22,
        "fullcodeline": "struct page *p = *(rqstp->rq_next_page++);"
    },
    {
        "line": 26,
        "fullcodeline": "len -= rqstp->rq_vec[v].iov_len;"
    },
    {
        "line": 27,
        "fullcodeline": "v++;"
    },
    {
        "line": 24,
        "fullcodeline": "rqstp->rq_vec[v].iov_base = page_address(p);"
    }
]