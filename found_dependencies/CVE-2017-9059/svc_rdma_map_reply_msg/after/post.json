[
    {
        "line": 11,
        "fullcodeline": "sge_no = 1;"
    },
    {
        "line": 13,
        "fullcodeline": "ret = svc_rdma_dma_map_buf(rdma, ctxt, sge_no++,"
    },
    {
        "line": 37,
        "fullcodeline": "ppages = xdr->pages + (xdr->page_base >> PAGE_SHIFT);"
    },
    {
        "line": 38,
        "fullcodeline": "page_off = xdr->page_base & ~PAGE_MASK;"
    },
    {
        "line": 39,
        "fullcodeline": "remaining = xdr->page_len;"
    },
    {
        "line": 16,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 61,
        "fullcodeline": "return sge_no - 1;"
    },
    {
        "line": 27,
        "fullcodeline": "xdr_pad = xdr_padsize(xdr->page_len);"
    },
    {
        "line": 41,
        "fullcodeline": "len = min_t(u32, PAGE_SIZE - page_off, remaining);"
    },
    {
        "line": 43,
        "fullcodeline": "ret = svc_rdma_dma_map_page(rdma, ctxt, sge_no++,"
    },
    {
        "line": 48,
        "fullcodeline": "remaining -= len;"
    },
    {
        "line": 49,
        "fullcodeline": "page_off = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "ret = svc_rdma_dma_map_buf(rdma, ctxt, sge_no++, base, len);"
    },
    {
        "line": 29,
        "fullcodeline": "if (len && xdr_pad) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 57,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 30,
        "fullcodeline": "base += xdr_pad;"
    },
    {
        "line": 31,
        "fullcodeline": "len -= xdr_pad;"
    },
    {
        "line": 44,
        "fullcodeline": "*ppages++, page_off, len);"
    }
]