[
    {
        "line": 6,
        "fullcodeline": "unsigned int state = serv->sv_nrthreads-1;"
    },
    {
        "line": 33,
        "fullcodeline": "} while (nrservs > 0);"
    },
    {
        "line": 10,
        "fullcodeline": "nrservs--;"
    },
    {
        "line": 11,
        "fullcodeline": "chosen_pool = choose_pool(serv, pool, &state);"
    },
    {
        "line": 13,
        "fullcodeline": "node = svc_pool_map_get_node(chosen_pool->sp_id);"
    },
    {
        "line": 14,
        "fullcodeline": "rqstp = svc_prepare_thread(serv, chosen_pool, node);"
    },
    {
        "line": 18,
        "fullcodeline": "__module_get(serv->sv_ops->svo_module);"
    },
    {
        "line": 19,
        "fullcodeline": "task = kthread_create_on_node(serv->sv_ops->svo_function, rqstp,"
    },
    {
        "line": 27,
        "fullcodeline": "rqstp->rq_task = task;"
    },
    {
        "line": 31,
        "fullcodeline": "svc_sock_update_bufs(serv);"
    },
    {
        "line": 32,
        "fullcodeline": "wake_up_process(task);"
    },
    {
        "line": 15,
        "fullcodeline": "if (IS_ERR(rqstp))"
    },
    {
        "line": 21,
        "fullcodeline": "if (IS_ERR(task)) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (serv->sv_nrpools > 1)"
    },
    {
        "line": 29,
        "fullcodeline": "svc_pool_map_set_cpumask(task, chosen_pool->sp_id);"
    },
    {
        "line": 16,
        "fullcodeline": "return PTR_ERR(rqstp);"
    },
    {
        "line": 24,
        "fullcodeline": "return PTR_ERR(task);"
    }
]