[
    {
        "line": 3,
        "fullcodeline": "struct svc_xprt *xprt = rqstp->rq_xprt;"
    },
    {
        "line": 7,
        "fullcodeline": "struct xdr_buf *xdr = &rqstp->rq_res;"
    },
    {
        "line": 14,
        "fullcodeline": "rdma_argp = page_address(rqstp->rq_pages[0]);"
    },
    {
        "line": 15,
        "fullcodeline": "svc_rdma_get_write_arrays(rdma_argp, &wr_lst, &rp_ch);"
    },
    {
        "line": 17,
        "fullcodeline": "dprintk(\"svcrdma: preparing response for XID 0x%08x\\n\","
    },
    {
        "line": 26,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 27,
        "fullcodeline": "res_page = alloc_page(GFP_KERNEL);"
    },
    {
        "line": 30,
        "fullcodeline": "rdma_resp = page_address(res_page);"
    },
    {
        "line": 32,
        "fullcodeline": "p = rdma_resp;"
    },
    {
        "line": 33,
        "fullcodeline": "*p++ = *rdma_argp;"
    },
    {
        "line": 34,
        "fullcodeline": "*p++ = *(rdma_argp + 1);"
    },
    {
        "line": 35,
        "fullcodeline": "*p++ = rdma->sc_fc_credits;"
    },
    {
        "line": 36,
        "fullcodeline": "*p++ = rp_ch ? rdma_nomsg : rdma_msg;"
    },
    {
        "line": 40,
        "fullcodeline": "*p++ = xdr_zero;"
    },
    {
        "line": 41,
        "fullcodeline": "*p   = xdr_zero;"
    },
    {
        "line": 57,
        "fullcodeline": "ret = svc_rdma_post_recv(rdma, GFP_KERNEL);"
    },
    {
        "line": 60,
        "fullcodeline": "ret = svc_rdma_send_reply_msg(rdma, rdma_argp, rdma_resp, rqstp,"
    },
    {
        "line": 70,
        "fullcodeline": "ret = svc_rdma_post_recv(rdma, GFP_KERNEL);"
    },
    {
        "line": 73,
        "fullcodeline": "ret = svc_rdma_send_error_msg(rdma, rdma_resp, rqstp);"
    },
    {
        "line": 83,
        "fullcodeline": "set_bit(XPT_CLOSE, &xprt->xpt_flags);"
    },
    {
        "line": 18,
        "fullcodeline": "be32_to_cpup(rdma_argp));"
    },
    {
        "line": 28,
        "fullcodeline": "if (!res_page)"
    },
    {
        "line": 62,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 67,
        "fullcodeline": "if (ret != -E2BIG)"
    },
    {
        "line": 74,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 84,
        "fullcodeline": "return -ENOTCONN;"
    },
    {
        "line": 39,
        "fullcodeline": "*p++ = xdr_zero;"
    },
    {
        "line": 45,
        "fullcodeline": "ret = svc_rdma_send_write_chunk(rdma, wr_lst, xdr);"
    },
    {
        "line": 48,
        "fullcodeline": "svc_rdma_xdr_encode_write_list(rdma_resp, wr_lst, ret);"
    },
    {
        "line": 51,
        "fullcodeline": "ret = svc_rdma_send_reply_chunk(rdma, rp_ch, wr_lst, xdr);"
    },
    {
        "line": 54,
        "fullcodeline": "svc_rdma_xdr_encode_reply_chunk(rdma_resp, rp_ch, ret);"
    },
    {
        "line": 46,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 52,
        "fullcodeline": "if (ret < 0)"
    }
]