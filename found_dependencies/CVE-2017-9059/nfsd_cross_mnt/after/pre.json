[
    {
        "line": 4,
        "fullcodeline": "struct svc_export *exp = *expp, *exp2 = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "struct dentry *dentry = *dpp;"
    },
    {
        "line": 6,
        "fullcodeline": "struct path path = {.mnt = mntget(exp->ex_path.mnt),"
    },
    {
        "line": 8,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "err = follow_down(&path);"
    },
    {
        "line": 20,
        "fullcodeline": "exp2 = rqst_exp_get_by_name(rqstp, &path);"
    },
    {
        "line": 49,
        "fullcodeline": "path_put(&path);"
    },
    {
        "line": 50,
        "fullcodeline": "exp_put(exp2);"
    },
    {
        "line": 11,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 13,
        "fullcodeline": "if (path.mnt == exp->ex_path.mnt && path.dentry == dentry &&"
    },
    {
        "line": 21,
        "fullcodeline": "if (IS_ERR(exp2)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (nfsd_v4client(rqstp) ||"
    },
    {
        "line": 14,
        "fullcodeline": "nfsd_mountpoint(dentry, exp) == 2) {"
    },
    {
        "line": 16,
        "fullcodeline": "path_put(&path);"
    },
    {
        "line": 22,
        "fullcodeline": "err = PTR_ERR(exp2);"
    },
    {
        "line": 32,
        "fullcodeline": "path_put(&path);"
    },
    {
        "line": 36,
        "fullcodeline": "(exp->ex_flags & NFSEXP_CROSSMOUNT) || EX_NOHIDE(exp2)) {"
    },
    {
        "line": 44,
        "fullcodeline": "*dpp = path.dentry;"
    },
    {
        "line": 45,
        "fullcodeline": "path.dentry = dentry;"
    },
    {
        "line": 46,
        "fullcodeline": "*expp = exp2;"
    },
    {
        "line": 47,
        "fullcodeline": "exp2 = exp;"
    },
    {
        "line": 7,
        "fullcodeline": ".dentry = dget(dentry)};"
    },
    {
        "line": 30,
        "fullcodeline": "if (err == -ENOENT && !(exp->ex_flags & NFSEXP_V4ROOT))"
    },
    {
        "line": 31,
        "fullcodeline": "err = 0;"
    }
]