[
    {
        "line": 3,
        "fullcodeline": "struct svc_rqst *rqstp = vrqstp;"
    },
    {
        "line": 4,
        "fullcodeline": "struct svc_serv *serv = rqstp->rq_server;"
    },
    {
        "line": 7,
        "fullcodeline": "DEFINE_WAIT(wq);"
    },
    {
        "line": 9,
        "fullcodeline": "set_freezable();"
    },
    {
        "line": 35,
        "fullcodeline": "svc_exit_thread(rqstp);"
    },
    {
        "line": 36,
        "fullcodeline": "module_put_and_exit(0);"
    },
    {
        "line": 11,
        "fullcodeline": "while (!kthread_freezable_should_stop(NULL)) {"
    },
    {
        "line": 16,
        "fullcodeline": "prepare_to_wait(&serv->sv_cb_waitq, &wq, TASK_INTERRUPTIBLE);"
    },
    {
        "line": 17,
        "fullcodeline": "spin_lock_bh(&serv->sv_cb_lock);"
    },
    {
        "line": 13,
        "fullcodeline": "if (signal_pending(current))"
    },
    {
        "line": 18,
        "fullcodeline": "if (!list_empty(&serv->sv_cb_list)) {"
    },
    {
        "line": 14,
        "fullcodeline": "flush_signals(current);"
    },
    {
        "line": 21,
        "fullcodeline": "list_del(&req->rq_bc_list);"
    },
    {
        "line": 22,
        "fullcodeline": "spin_unlock_bh(&serv->sv_cb_lock);"
    },
    {
        "line": 23,
        "fullcodeline": "finish_wait(&serv->sv_cb_waitq, &wq);"
    },
    {
        "line": 24,
        "fullcodeline": "dprintk(\"Invoking bc_svc_process()\\n\");"
    },
    {
        "line": 25,
        "fullcodeline": "error = bc_svc_process(serv, req, rqstp);"
    },
    {
        "line": 26,
        "fullcodeline": "dprintk(\"bc_svc_process() returned w/ error code= %d\\n\","
    },
    {
        "line": 29,
        "fullcodeline": "spin_unlock_bh(&serv->sv_cb_lock);"
    },
    {
        "line": 32,
        "fullcodeline": "finish_wait(&serv->sv_cb_waitq, &wq);"
    },
    {
        "line": 30,
        "fullcodeline": "if (!kthread_should_stop())"
    },
    {
        "line": 31,
        "fullcodeline": "schedule();"
    }
]