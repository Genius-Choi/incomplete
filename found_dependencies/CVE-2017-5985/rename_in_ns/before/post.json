[
    {
        "line": 3,
        "fullcodeline": "int fd = -1, ofd = -1, ret, ifindex = -1;"
    },
    {
        "line": 4,
        "fullcodeline": "bool grab_newname = false;"
    },
    {
        "line": 6,
        "fullcodeline": "ofd = lxc_preserve_ns(getpid(), \"net\");"
    },
    {
        "line": 12,
        "fullcodeline": "fd = lxc_preserve_ns(pid, \"net\");"
    },
    {
        "line": 22,
        "fullcodeline": "close(fd); fd = -1;"
    },
    {
        "line": 50,
        "fullcodeline": "close(ofd);"
    },
    {
        "line": 7,
        "fullcodeline": "if (ofd < 0) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (fd < 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (setns(fd, 0) < 0) {"
    },
    {
        "line": 31,
        "fullcodeline": "if ((ret = lxc_netdev_rename_by_name(oldname, *newnamep)) < 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (setns(ofd, 0) < 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (ofd >= 0)"
    },
    {
        "line": 57,
        "fullcodeline": "if (setns(ofd, 0) < 0)"
    },
    {
        "line": 59,
        "fullcodeline": "if (fd >= 0)"
    },
    {
        "line": 61,
        "fullcodeline": "return -1;"
    },
    {
        "line": 8,
        "fullcodeline": "fprintf(stderr, \"Failed opening network namespace path for '%d'.\", getpid());"
    },
    {
        "line": 14,
        "fullcodeline": "fprintf(stderr, \"Failed opening network namespace path for '%d'.\", pid);"
    },
    {
        "line": 19,
        "fullcodeline": "fprintf(stderr, \"setns to container network namespace\\n\");"
    },
    {
        "line": 24,
        "fullcodeline": "grab_newname = true;"
    },
    {
        "line": 25,
        "fullcodeline": "*newnamep = VETH_DEF_NAME;"
    },
    {
        "line": 32,
        "fullcodeline": "fprintf(stderr, \"Error %d renaming netdev %s to %s in container\\n\", ret, oldname, *newnamep);"
    },
    {
        "line": 36,
        "fullcodeline": "char ifname[IFNAMSIZ], *namep = ifname;"
    },
    {
        "line": 41,
        "fullcodeline": "*newnamep = strdup(namep);"
    },
    {
        "line": 46,
        "fullcodeline": "fprintf(stderr, \"Error returning to original netns\\n\");"
    },
    {
        "line": 47,
        "fullcodeline": "close(ofd);"
    },
    {
        "line": 56,
        "fullcodeline": "close(ofd);"
    },
    {
        "line": 58,
        "fullcodeline": "fprintf(stderr, \"Error returning to original network namespace\\n\");"
    },
    {
        "line": 60,
        "fullcodeline": "close(fd);"
    },
    {
        "line": 9,
        "fullcodeline": "return -1;"
    },
    {
        "line": 15,
        "fullcodeline": "return -1;"
    },
    {
        "line": 26,
        "fullcodeline": "if (!(ifindex = if_nametoindex(oldname))) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (!if_indextoname(ifindex, namep)) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (!*newnamep)"
    },
    {
        "line": 48,
        "fullcodeline": "return -1;"
    },
    {
        "line": 27,
        "fullcodeline": "fprintf(stderr, \"failed to get netdev index\\n\");"
    },
    {
        "line": 38,
        "fullcodeline": "fprintf(stderr, \"Failed to get new netdev name\\n\");"
    }
]