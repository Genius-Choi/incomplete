[
    {
        "line": 4,
        "fullcodeline": "char s[200];"
    },
    {
        "line": 6,
        "fullcodeline": "bool may_access = false;"
    },
    {
        "line": 8,
        "fullcodeline": "ret = getresuid(&ruid, &euid, &suid);"
    },
    {
        "line": 19,
        "fullcodeline": "ret = snprintf(s, 200, \"/proc/%d/ns/net\", pid);"
    },
    {
        "line": 22,
        "fullcodeline": "ret = access(s, R_OK);"
    },
    {
        "line": 27,
        "fullcodeline": "may_access = ret == 0;"
    },
    {
        "line": 13,
        "fullcodeline": "ret = setresuid(ruid, ruid, euid);"
    },
    {
        "line": 28,
        "fullcodeline": "ret = setresuid(ruid, euid, suid);"
    },
    {
        "line": 10,
        "fullcodeline": "fprintf(stderr, \"Failed to get my uids: %s\\n\", strerror(errno));"
    },
    {
        "line": 20,
        "fullcodeline": "if (ret < 0 || ret >= 200)  // can't happen"
    },
    {
        "line": 24,
        "fullcodeline": "fprintf(stderr, \"Uid %d may not access %s: %s\\n\","
    },
    {
        "line": 32,
        "fullcodeline": "may_access = false;"
    },
    {
        "line": 16,
        "fullcodeline": "(int)ruid, (int)ruid, (int)euid, strerror(errno));"
    },
    {
        "line": 25,
        "fullcodeline": "(int)ruid, s, strerror(errno));"
    },
    {
        "line": 31,
        "fullcodeline": "(int)ruid, (int)euid, (int)suid, strerror(errno));"
    }
]