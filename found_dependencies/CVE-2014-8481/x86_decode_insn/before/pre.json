[
    {
        "line": 3,
        "fullcodeline": "int rc = X86EMUL_CONTINUE;"
    },
    {
        "line": 4,
        "fullcodeline": "int mode = ctxt->mode;"
    },
    {
        "line": 6,
        "fullcodeline": "bool op_prefix = false;"
    },
    {
        "line": 7,
        "fullcodeline": "bool has_seg_override = false;"
    },
    {
        "line": 10,
        "fullcodeline": "ctxt->memop.type = OP_NONE;"
    },
    {
        "line": 11,
        "fullcodeline": "ctxt->memopp = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "ctxt->_eip = ctxt->eip;"
    },
    {
        "line": 13,
        "fullcodeline": "ctxt->fetch.ptr = ctxt->fetch.data;"
    },
    {
        "line": 14,
        "fullcodeline": "ctxt->fetch.end = ctxt->fetch.data + insn_len;"
    },
    {
        "line": 15,
        "fullcodeline": "ctxt->opcode_len = 1;"
    },
    {
        "line": 43,
        "fullcodeline": "ctxt->op_bytes = def_op_bytes;"
    },
    {
        "line": 44,
        "fullcodeline": "ctxt->ad_bytes = def_ad_bytes;"
    },
    {
        "line": 102,
        "fullcodeline": "opcode = opcode_table[ctxt->b];"
    },
    {
        "line": 116,
        "fullcodeline": "ctxt->d = opcode.flags;"
    },
    {
        "line": 174,
        "fullcodeline": "ctxt->execute = opcode.u.execute;"
    },
    {
        "line": 228,
        "fullcodeline": "rc = decode_operand(ctxt, &ctxt->src, (ctxt->d >> SrcShift) & OpMask);"
    },
    {
        "line": 236,
        "fullcodeline": "rc = decode_operand(ctxt, &ctxt->src2, (ctxt->d >> Src2Shift) & OpMask);"
    },
    {
        "line": 241,
        "fullcodeline": "rc = decode_operand(ctxt, &ctxt->dst, (ctxt->d >> DstShift) & OpMask);"
    },
    {
        "line": 16,
        "fullcodeline": "if (insn_len > 0)"
    },
    {
        "line": 98,
        "fullcodeline": "if (ctxt->rex_prefix & 8)"
    },
    {
        "line": 104,
        "fullcodeline": "if (ctxt->b == 0x0f) {"
    },
    {
        "line": 118,
        "fullcodeline": "if (ctxt->d & ModRM)"
    },
    {
        "line": 128,
        "fullcodeline": "while (ctxt->d & GroupMask) {"
    },
    {
        "line": 171,
        "fullcodeline": "if (ctxt->d == 0)"
    },
    {
        "line": 208,
        "fullcodeline": "if (ctxt->d & ModRM) {"
    },
    {
        "line": 216,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 229,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 237,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 247,
        "fullcodeline": "return (rc != X86EMUL_CONTINUE) ? EMULATION_FAILED : EMULATION_OK;"
    },
    {
        "line": 28,
        "fullcodeline": "def_op_bytes = def_ad_bytes = 2;"
    },
    {
        "line": 31,
        "fullcodeline": "def_op_bytes = def_ad_bytes = 4;"
    },
    {
        "line": 92,
        "fullcodeline": "ctxt->rex_prefix = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "ctxt->op_bytes = 8;\t/* REX.W */"
    },
    {
        "line": 105,
        "fullcodeline": "ctxt->opcode_len = 2;"
    },
    {
        "line": 106,
        "fullcodeline": "ctxt->b = insn_fetch(u8, ctxt);"
    },
    {
        "line": 107,
        "fullcodeline": "opcode = twobyte_table[ctxt->b];"
    },
    {
        "line": 119,
        "fullcodeline": "ctxt->modrm = insn_fetch(u8, ctxt);"
    },
    {
        "line": 122,
        "fullcodeline": "if (ctxt->opcode_len == 1 && (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&"
    },
    {
        "line": 123,
        "fullcodeline": "(mode == X86EMUL_MODE_PROT64 ||"
    },
    {
        "line": 125,
        "fullcodeline": "ctxt->d = NotImpl;"
    },
    {
        "line": 166,
        "fullcodeline": "ctxt->d &= ~(u64)GroupMask;"
    },
    {
        "line": 167,
        "fullcodeline": "ctxt->d |= opcode.flags;"
    },
    {
        "line": 176,
        "fullcodeline": "if (unlikely(ctxt->ud) && likely(!(ctxt->d & EmulateOnUD)))"
    },
    {
        "line": 179,
        "fullcodeline": "if (unlikely(ctxt->d &"
    },
    {
        "line": 185,
        "fullcodeline": "ctxt->check_perm = opcode.check_perm;"
    },
    {
        "line": 186,
        "fullcodeline": "ctxt->intercept = opcode.intercept;"
    },
    {
        "line": 209,
        "fullcodeline": "rc = decode_modrm(ctxt, &ctxt->memop);"
    },
    {
        "line": 220,
        "fullcodeline": "ctxt->seg_override = VCPU_SREG_DS;"
    },
    {
        "line": 19,
        "fullcodeline": "rc = __do_insn_fetch_bytes(ctxt, 1);"
    },
    {
        "line": 48,
        "fullcodeline": "switch (ctxt->b = insn_fetch(u8, ctxt)) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (ctxt->b == 0x38) {"
    },
    {
        "line": 124,
        "fullcodeline": "(mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80)))) {"
    },
    {
        "line": 129,
        "fullcodeline": "switch (ctxt->d & GroupMask) {"
    },
    {
        "line": 180,
        "fullcodeline": "(NotImpl|Stack|Op3264|Sse|Mmx|Intercept|CheckPerm))) {"
    },
    {
        "line": 188,
        "fullcodeline": "if (ctxt->d & NotImpl)"
    },
    {
        "line": 194,
        "fullcodeline": "if (ctxt->d & Op3264) {"
    },
    {
        "line": 201,
        "fullcodeline": "if (ctxt->d & Sse)"
    },
    {
        "line": 210,
        "fullcodeline": "if (!has_seg_override) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 50,
        "fullcodeline": "op_prefix = true;"
    },
    {
        "line": 52,
        "fullcodeline": "ctxt->op_bytes = def_op_bytes ^ 6;"
    },
    {
        "line": 66,
        "fullcodeline": "has_seg_override = true;"
    },
    {
        "line": 67,
        "fullcodeline": "ctxt->seg_override = (ctxt->b >> 3) & 3;"
    },
    {
        "line": 71,
        "fullcodeline": "has_seg_override = true;"
    },
    {
        "line": 72,
        "fullcodeline": "ctxt->seg_override = ctxt->b & 7;"
    },
    {
        "line": 77,
        "fullcodeline": "ctxt->rex_prefix = ctxt->b;"
    },
    {
        "line": 80,
        "fullcodeline": "ctxt->lock_prefix = 1;"
    },
    {
        "line": 84,
        "fullcodeline": "ctxt->rep_prefix = ctxt->b;"
    },
    {
        "line": 111,
        "fullcodeline": "ctxt->opcode_len = 3;"
    },
    {
        "line": 112,
        "fullcodeline": "ctxt->b = insn_fetch(u8, ctxt);"
    },
    {
        "line": 113,
        "fullcodeline": "opcode = opcode_map_0f_38[ctxt->b];"
    },
    {
        "line": 132,
        "fullcodeline": "opcode = opcode.u.group[goffset];"
    },
    {
        "line": 143,
        "fullcodeline": "opcode = opcode.u.group[goffset];"
    },
    {
        "line": 191,
        "fullcodeline": "if (mode == X86EMUL_MODE_PROT64 && (ctxt->d & Stack))"
    },
    {
        "line": 192,
        "fullcodeline": "ctxt->op_bytes = 8;"
    },
    {
        "line": 202,
        "fullcodeline": "ctxt->op_bytes = 16;"
    },
    {
        "line": 211,
        "fullcodeline": "has_seg_override = true;"
    },
    {
        "line": 212,
        "fullcodeline": "ctxt->seg_override = ctxt->modrm_seg;"
    },
    {
        "line": 214,
        "fullcodeline": "} else if (ctxt->d & MemAbs)"
    },
    {
        "line": 55,
        "fullcodeline": "if (mode == X86EMUL_MODE_PROT64)"
    },
    {
        "line": 75,
        "fullcodeline": "if (mode != X86EMUL_MODE_PROT64)"
    },
    {
        "line": 131,
        "fullcodeline": "goffset = (ctxt->modrm >> 3) & 7;"
    },
    {
        "line": 135,
        "fullcodeline": "goffset = (ctxt->modrm >> 3) & 7;"
    },
    {
        "line": 142,
        "fullcodeline": "goffset = ctxt->modrm & 7;"
    },
    {
        "line": 146,
        "fullcodeline": "if (ctxt->rep_prefix && op_prefix)"
    },
    {
        "line": 157,
        "fullcodeline": "if (ctxt->modrm > 0xbf)"
    },
    {
        "line": 215,
        "fullcodeline": "rc = decode_abs(ctxt, &ctxt->memop);"
    },
    {
        "line": 57,
        "fullcodeline": "ctxt->ad_bytes = def_ad_bytes ^ 12;"
    },
    {
        "line": 136,
        "fullcodeline": "if ((ctxt->modrm >> 6) == 3)"
    },
    {
        "line": 137,
        "fullcodeline": "opcode = opcode.u.gdual->mod3[goffset];"
    },
    {
        "line": 150,
        "fullcodeline": "case 0x00: opcode = opcode.u.gprefix->pfx_no; break;"
    },
    {
        "line": 151,
        "fullcodeline": "case 0x66: opcode = opcode.u.gprefix->pfx_66; break;"
    },
    {
        "line": 152,
        "fullcodeline": "case 0xf2: opcode = opcode.u.gprefix->pfx_f2; break;"
    },
    {
        "line": 153,
        "fullcodeline": "case 0xf3: opcode = opcode.u.gprefix->pfx_f3; break;"
    },
    {
        "line": 158,
        "fullcodeline": "opcode = opcode.u.esc->high[ctxt->modrm - 0xc0];"
    },
    {
        "line": 196,
        "fullcodeline": "ctxt->op_bytes = 8;"
    },
    {
        "line": 203,
        "fullcodeline": "else if (ctxt->d & Mmx)"
    },
    {
        "line": 60,
        "fullcodeline": "ctxt->ad_bytes = def_ad_bytes ^ 6;"
    },
    {
        "line": 139,
        "fullcodeline": "opcode = opcode.u.gdual->mod012[goffset];"
    },
    {
        "line": 160,
        "fullcodeline": "opcode = opcode.u.esc->op[(ctxt->modrm >> 3) & 7];"
    },
    {
        "line": 198,
        "fullcodeline": "ctxt->op_bytes = 4;"
    },
    {
        "line": 204,
        "fullcodeline": "ctxt->op_bytes = 8;"
    }
]