[
    {
        "line": 3,
        "fullcodeline": "char\t*end = h + r->header.len + 1; // +1 for last \\r"
    },
    {
        "line": 4,
        "fullcodeline": "char\t*key = h;"
    },
    {
        "line": 5,
        "fullcodeline": "char\t*kend = key;"
    },
    {
        "line": 6,
        "fullcodeline": "char\t*val = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "bool\tupgrade = false;"
    },
    {
        "line": 10,
        "fullcodeline": "bool\tws = false;"
    },
    {
        "line": 12,
        "fullcodeline": "if (NULL == r) {"
    },
    {
        "line": 16,
        "fullcodeline": "for (; h < end; h++) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (upgrade && ws) {"
    },
    {
        "line": 13,
        "fullcodeline": "rb_raise(rb_eArgError, \"Request is no longer valid.\");"
    },
    {
        "line": 68,
        "fullcodeline": "r->upgrade = AGOO_UP_WS;"
    },
    {
        "line": 37,
        "fullcodeline": "klen = (int)(kend - key);"
    },
    {
        "line": 38,
        "fullcodeline": "add_header_value(hash, key, klen, val, (int)(vend - val));"
    },
    {
        "line": 58,
        "fullcodeline": "key = h + 1;"
    },
    {
        "line": 59,
        "fullcodeline": "kend = NULL;"
    },
    {
        "line": 60,
        "fullcodeline": "val = NULL;"
    },
    {
        "line": 61,
        "fullcodeline": "vend = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "if (NULL == val) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (NULL != val) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (NULL != key) {"
    },
    {
        "line": 34,
        "fullcodeline": "if ('\\n' == *(h + 1)) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (sizeof(upgrade_key) - 1 == klen && 0 == strncasecmp(key, upgrade_key, sizeof(upgrade_key) - 1)) {"
    },
    {
        "line": 20,
        "fullcodeline": "kend = h;"
    },
    {
        "line": 21,
        "fullcodeline": "val = h + 1;"
    },
    {
        "line": 28,
        "fullcodeline": "vend = h;"
    },
    {
        "line": 35,
        "fullcodeline": "h++;"
    },
    {
        "line": 26,
        "fullcodeline": "for (; ' ' == *val; val++) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (; ' ' == *key; key++) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (sizeof(websocket_val) - 1 == vend - val &&"
    },
    {
        "line": 41,
        "fullcodeline": "0 == strncasecmp(val, websocket_val, sizeof(websocket_val) - 1)) {"
    },
    {
        "line": 42,
        "fullcodeline": "ws = true;"
    },
    {
        "line": 44,
        "fullcodeline": "} else if (sizeof(connection_key) - 1 == klen && 0 == strncasecmp(key, connection_key, sizeof(connection_key) - 1)) {"
    },
    {
        "line": 45,
        "fullcodeline": "char\tbuf[1024];"
    },
    {
        "line": 47,
        "fullcodeline": "strncpy(buf, val, vend - val);"
    },
    {
        "line": 48,
        "fullcodeline": "buf[sizeof(buf)-1] = '\\0';"
    },
    {
        "line": 49,
        "fullcodeline": "if (NULL != strstr(buf, upgrade_key)) {"
    },
    {
        "line": 50,
        "fullcodeline": "upgrade = true;"
    },
    {
        "line": 52,
        "fullcodeline": "} else if (sizeof(accept_key) - 1 == klen && 0 == strncasecmp(key, accept_key, sizeof(accept_key) - 1)) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (sizeof(event_stream_val) - 1 == vend - val &&"
    },
    {
        "line": 54,
        "fullcodeline": "0 == strncasecmp(val, event_stream_val, sizeof(event_stream_val) - 1)) {"
    },
    {
        "line": 55,
        "fullcodeline": "r->upgrade = AGOO_UP_SSE;"
    }
]