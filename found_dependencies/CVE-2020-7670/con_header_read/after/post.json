[
    {
        "line": 2,
        "fullcodeline": "char\t\t*hend = strstr(c->buf, \"\\r\\n\\r\\n\");"
    },
    {
        "line": 5,
        "fullcodeline": "char\t\t*query = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t\t\tclen = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "agooHook\t\thook = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "struct _agooErr\terr = AGOO_ERR_INIT;"
    },
    {
        "line": 90,
        "fullcodeline": "path.start = b;"
    },
    {
        "line": 110,
        "fullcodeline": "mlen = hend - c->buf + 4 + clen;"
    },
    {
        "line": 111,
        "fullcodeline": "*mlenp = mlen;"
    },
    {
        "line": 168,
        "fullcodeline": "c->req->msg[mlen] = '\\0';"
    },
    {
        "line": 169,
        "fullcodeline": "c->req->method = method;"
    },
    {
        "line": 170,
        "fullcodeline": "c->req->upgrade = AGOO_UP_NONE;"
    },
    {
        "line": 171,
        "fullcodeline": "c->req->up = NULL;"
    },
    {
        "line": 172,
        "fullcodeline": "memcpy(c->req->remote, c->remote, sizeof(c->remote));"
    },
    {
        "line": 173,
        "fullcodeline": "c->req->path.start = c->req->msg + (path.start - c->buf);"
    },
    {
        "line": 174,
        "fullcodeline": "c->req->path.len = (int)(path.end - path.start);"
    },
    {
        "line": 175,
        "fullcodeline": "c->req->query.start = c->req->msg + (query - c->buf);"
    },
    {
        "line": 176,
        "fullcodeline": "c->req->query.len = (int)(qend - query);"
    },
    {
        "line": 177,
        "fullcodeline": "c->req->query.start[c->req->query.len] = '\\0';"
    },
    {
        "line": 178,
        "fullcodeline": "c->req->body.start = c->req->msg + (hend - c->buf + 4);"
    },
    {
        "line": 179,
        "fullcodeline": "c->req->body.len = (unsigned int)clen;"
    },
    {
        "line": 180,
        "fullcodeline": "b = strstr(b, \"\\r\\n\");"
    },
    {
        "line": 181,
        "fullcodeline": "c->req->header.start = c->req->msg + (b + 2 - c->buf);"
    },
    {
        "line": 187,
        "fullcodeline": "c->req->res = NULL;"
    },
    {
        "line": 188,
        "fullcodeline": "c->req->hook = hook;"
    },
    {
        "line": 14,
        "fullcodeline": "if (NULL == hend) {"
    },
    {
        "line": 25,
        "fullcodeline": "for (b = c->buf; ' ' != *b; b++) {"
    },
    {
        "line": 85,
        "fullcodeline": "for (; ' ' == *b; b++) {"
    },
    {
        "line": 91,
        "fullcodeline": "for (; ' ' != *b; b++) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (NULL == query) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (AGOO_GET == method) {"
    },
    {
        "line": 157,
        "fullcodeline": "if (NULL == (c->req = agoo_req_create(mlen))) {"
    },
    {
        "line": 160,
        "fullcodeline": "if ((long)c->bcnt <= mlen) {"
    },
    {
        "line": 182,
        "fullcodeline": "if (b < hend) {"
    },
    {
        "line": 21,
        "fullcodeline": "*hend = '\\0';"
    },
    {
        "line": 22,
        "fullcodeline": "agoo_log_cat(&agoo_req_cat, \"%s %llu: %s\", agoo_con_kind_str(c->bind->kind), (unsigned long long)c->id, c->buf);"
    },
    {
        "line": 23,
        "fullcodeline": "*hend = '\\r';"
    },
    {
        "line": 35,
        "fullcodeline": "method = AGOO_GET;"
    },
    {
        "line": 62,
        "fullcodeline": "method = AGOO_DELETE;"
    },
    {
        "line": 68,
        "fullcodeline": "method = AGOO_HEAD;"
    },
    {
        "line": 74,
        "fullcodeline": "method = AGOO_OPTIONS;"
    },
    {
        "line": 80,
        "fullcodeline": "method = AGOO_CONNECT;"
    },
    {
        "line": 104,
        "fullcodeline": "path.end = b;"
    },
    {
        "line": 105,
        "fullcodeline": "query = b;"
    },
    {
        "line": 106,
        "fullcodeline": "qend = b;"
    },
    {
        "line": 114,
        "fullcodeline": "char\t\troot_buf[20148];"
    },
    {
        "line": 115,
        "fullcodeline": "const char\t*root = NULL;"
    },
    {
        "line": 161,
        "fullcodeline": "memcpy(c->req->msg, c->buf, c->bcnt);"
    },
    {
        "line": 183,
        "fullcodeline": "c->req->header.len = (unsigned int)(hend - b - 2);"
    },
    {
        "line": 15,
        "fullcodeline": "if (sizeof(c->buf) - 1 <= c->bcnt) {"
    },
    {
        "line": 26,
        "fullcodeline": "if ('\\0' == *b) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (3 != b - c->buf || 0 != strncmp(\"GET\", c->buf, 3)) {"
    },
    {
        "line": 39,
        "fullcodeline": "int\t\tvlen = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "clen = (size_t)strtoul(v, &vend, 10);"
    },
    {
        "line": 59,
        "fullcodeline": "if (6 != b - c->buf || 0 != strncmp(\"DELETE\", c->buf, 6)) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (4 != b - c->buf || 0 != strncmp(\"HEAD\", c->buf, 4)) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (7 != b - c->buf || 0 != strncmp(\"OPTIONS\", c->buf, 7)) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (7 != b - c->buf || 0 != strncmp(\"CONNECT\", c->buf, 7)) {"
    },
    {
        "line": 83,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    },
    {
        "line": 86,
        "fullcodeline": "if ('\\0' == *b) {"
    },
    {
        "line": 108,
        "fullcodeline": "qend = b;"
    },
    {
        "line": 117,
        "fullcodeline": "if (NULL != (p = agoo_group_get(&err, path.start, (int)(path.end - path.start)))) {"
    },
    {
        "line": 123,
        "fullcodeline": "if (agoo_domain_use()) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (agoo_server.root_first &&"
    },
    {
        "line": 141,
        "fullcodeline": "if (NULL == (hook = agoo_hook_find(agoo_server.hooks, method, &path))) {"
    },
    {
        "line": 158,
        "fullcodeline": "return bad_request(c, 413, __LINE__);"
    },
    {
        "line": 162,
        "fullcodeline": "if ((long)c->bcnt < mlen) {"
    },
    {
        "line": 166,
        "fullcodeline": "memcpy(c->req->msg, c->buf, mlen);"
    },
    {
        "line": 185,
        "fullcodeline": "c->req->header.len = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "if (3 == b - c->buf && 0 == strncmp(\"PUT\", c->buf, 3)) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (NULL == (v = agoo_con_header_value(c->buf, (int)(hend - c->buf), \"Content-Length\", &vlen))) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (vend != v + vlen) {"
    },
    {
        "line": 94,
        "fullcodeline": "path.end = b;"
    },
    {
        "line": 95,
        "fullcodeline": "query = b + 1;"
    },
    {
        "line": 125,
        "fullcodeline": "int\t\tvlen = 0;"
    },
    {
        "line": 130,
        "fullcodeline": "((char*)host)[vlen] = '\\0';"
    },
    {
        "line": 131,
        "fullcodeline": "root = agoo_domain_resolve(host, root_buf, sizeof(root_buf));"
    },
    {
        "line": 132,
        "fullcodeline": "((char*)host)[vlen] = '\\r';"
    },
    {
        "line": 135,
        "fullcodeline": "NULL != (p = agoo_page_get(&err, path.start, (int)(path.end - path.start), root))) {"
    },
    {
        "line": 151,
        "fullcodeline": "hook = agoo_server.hook404;"
    },
    {
        "line": 153,
        "fullcodeline": "} else if (NULL == (hook = agoo_hook_find(agoo_server.hooks, method, &path))) {"
    },
    {
        "line": 163,
        "fullcodeline": "memset(c->req->msg + c->bcnt, 0, mlen - c->bcnt);"
    },
    {
        "line": 16,
        "fullcodeline": "return bad_request(c, 431, __LINE__);"
    },
    {
        "line": 27,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    },
    {
        "line": 33,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    },
    {
        "line": 43,
        "fullcodeline": "method = AGOO_PUT;"
    },
    {
        "line": 60,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    },
    {
        "line": 66,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    },
    {
        "line": 72,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    },
    {
        "line": 78,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    },
    {
        "line": 87,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    },
    {
        "line": 98,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    },
    {
        "line": 118,
        "fullcodeline": "if (page_response(c, p, hend)) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (NULL == (host = agoo_con_header_value(c->buf, (int)(hend - c->buf), \"Host\", &vlen))) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (page_response(c, p, hend)) {"
    },
    {
        "line": 142,
        "fullcodeline": "if (NULL != (p = agoo_page_get(&err, path.start, (int)(path.end - path.start), root))) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (NULL == agoo_server.hook404) {"
    },
    {
        "line": 50,
        "fullcodeline": "return bad_request(c, 411, __LINE__);"
    },
    {
        "line": 54,
        "fullcodeline": "return bad_request(c, 411, __LINE__);"
    },
    {
        "line": 154,
        "fullcodeline": "return bad_request(c, 404, __LINE__);"
    },
    {
        "line": 44,
        "fullcodeline": "} else if (4 == b - c->buf && 0 == strncmp(\"POST\", c->buf, 4)) {"
    },
    {
        "line": 119,
        "fullcodeline": "return bad_request(c, 500, __LINE__);"
    },
    {
        "line": 128,
        "fullcodeline": "return bad_request(c, 411, __LINE__);"
    },
    {
        "line": 137,
        "fullcodeline": "return bad_request(c, 500, __LINE__);"
    },
    {
        "line": 143,
        "fullcodeline": "if (page_response(c, p, hend)) {"
    },
    {
        "line": 149,
        "fullcodeline": "return bad_request(c, 404, __LINE__);"
    },
    {
        "line": 45,
        "fullcodeline": "method = AGOO_POST;"
    },
    {
        "line": 144,
        "fullcodeline": "return bad_request(c, 500, __LINE__);"
    },
    {
        "line": 47,
        "fullcodeline": "return bad_request(c, 400, __LINE__);"
    }
]