[
    {
        "line": 3,
        "fullcodeline": "struct vfsmount *mnt = nsfs_mnt;"
    },
    {
        "line": 4,
        "fullcodeline": "struct qstr qname = { .name = \"\", };"
    },
    {
        "line": 9,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 10,
        "fullcodeline": "d = atomic_long_read(&ns->stashed);"
    },
    {
        "line": 13,
        "fullcodeline": "dentry = (struct dentry *)d;"
    },
    {
        "line": 16,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 17,
        "fullcodeline": "ns->ops->put(ns);"
    },
    {
        "line": 19,
        "fullcodeline": "path->mnt = mntget(mnt);"
    },
    {
        "line": 20,
        "fullcodeline": "path->dentry = dentry;"
    },
    {
        "line": 23,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 24,
        "fullcodeline": "inode = new_inode_pseudo(mnt->mnt_sb);"
    },
    {
        "line": 29,
        "fullcodeline": "inode->i_ino = ns->inum;"
    },
    {
        "line": 30,
        "fullcodeline": "inode->i_mtime = inode->i_atime = inode->i_ctime = current_time(inode);"
    },
    {
        "line": 31,
        "fullcodeline": "inode->i_flags |= S_IMMUTABLE;"
    },
    {
        "line": 32,
        "fullcodeline": "inode->i_mode = S_IFREG | S_IRUGO;"
    },
    {
        "line": 33,
        "fullcodeline": "inode->i_fop = &ns_file_operations;"
    },
    {
        "line": 34,
        "fullcodeline": "inode->i_private = ns;"
    },
    {
        "line": 36,
        "fullcodeline": "dentry = d_alloc_pseudo(mnt->mnt_sb, &qname);"
    },
    {
        "line": 41,
        "fullcodeline": "d_instantiate(dentry, inode);"
    },
    {
        "line": 42,
        "fullcodeline": "dentry->d_fsdata = (void *)ns->ops;"
    },
    {
        "line": 43,
        "fullcodeline": "d = atomic_long_cmpxchg(&ns->stashed, 0, (unsigned long)dentry);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!d)"
    },
    {
        "line": 14,
        "fullcodeline": "if (!lockref_get_not_dead(&dentry->d_lockref))"
    },
    {
        "line": 25,
        "fullcodeline": "if (!inode) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (!dentry) {"
    },
    {
        "line": 45,
        "fullcodeline": "d_delete(dentry);\t/* make sure ->d_prune() does nothing */"
    },
    {
        "line": 27,
        "fullcodeline": "return ERR_PTR(-ENOMEM);"
    },
    {
        "line": 39,
        "fullcodeline": "return ERR_PTR(-ENOMEM);"
    },
    {
        "line": 48,
        "fullcodeline": "return ERR_PTR(-EAGAIN);"
    }
]