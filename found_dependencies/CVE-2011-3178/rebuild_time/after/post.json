[
    {
        "line": 2,
        "fullcodeline": "required_parameters :repository, :arch"
    },
    {
        "line": 6,
        "fullcodeline": "@hosts = begin Integer(params[:hosts] || '40') rescue 40 end"
    },
    {
        "line": 7,
        "fullcodeline": "@scheduler = params[:scheduler] || 'needed'"
    },
    {
        "line": 13,
        "fullcodeline": "bdep = find_cached(BuilddepInfo, :project => @project.name, :repository => @repository, :arch => @arch)"
    },
    {
        "line": 14,
        "fullcodeline": "jobs = find_cached(Jobhislist , :project => @project.name, :repository => @repository, :arch => @arch,"
    },
    {
        "line": 22,
        "fullcodeline": "f = File.open(indir + \"/_builddepinfo.xml\", 'w')"
    },
    {
        "line": 23,
        "fullcodeline": "f.write(bdep.dump_xml)"
    },
    {
        "line": 25,
        "fullcodeline": "f = File.open(indir + \"/_jobhistory.xml\", 'w')"
    },
    {
        "line": 26,
        "fullcodeline": "f.write(jobs.dump_xml)"
    },
    {
        "line": 29,
        "fullcodeline": "logger.debug \"cd #{RAILS_ROOT}/vendor/diststats && perl ./mkdiststats --srcdir=#{indir} --destdir=#{outdir}"
    },
    {
        "line": 32,
        "fullcodeline": "fork do"
    },
    {
        "line": 39,
        "fullcodeline": "f=File.open(outdir + \"/rebuild.png\")"
    },
    {
        "line": 40,
        "fullcodeline": "png=f.read"
    },
    {
        "line": 42,
        "fullcodeline": "@pngkey = Digest::MD5.hexdigest( params.to_s )"
    },
    {
        "line": 43,
        "fullcodeline": "Rails.cache.write(\"rebuild-%s.png\" % @pngkey, png)"
    },
    {
        "line": 44,
        "fullcodeline": "f=File.open(outdir + \"/longest.xml\")"
    },
    {
        "line": 45,
        "fullcodeline": "longest = ActiveXML::LibXMLNode.new(f.read)"
    },
    {
        "line": 46,
        "fullcodeline": "@timings = Hash.new"
    },
    {
        "line": 47,
        "fullcodeline": "longest.timings.each_package do |p|"
    },
    {
        "line": 50,
        "fullcodeline": "@rebuildtime = Integer(longest.value :rebuildtime)"
    },
    {
        "line": 52,
        "fullcodeline": "@longestpaths = Array.new"
    },
    {
        "line": 53,
        "fullcodeline": "longest.longestpath.each_path do |path|"
    },
    {
        "line": 62,
        "fullcodeline": "4.times { @longestpaths << Array.new }"
    },
    {
        "line": 63,
        "fullcodeline": "FileUtils.rm_rf indir"
    },
    {
        "line": 8,
        "fullcodeline": "unless [\"fifo\", \"lifo\", \"random\", \"btime\", \"needed\", \"neededb\", \"longest_data\", \"longested_triedread\", \"longest\"].include? @scheduler"
    },
    {
        "line": 16,
        "fullcodeline": "unless bdep and jobs"
    },
    {
        "line": 64,
        "fullcodeline": "FileUtils.rm_rf outdir"
    },
    {
        "line": 9,
        "fullcodeline": "flash[:error] = \"Invalid scheduler type, check mkdiststats docu - aehm, source\""
    },
    {
        "line": 10,
        "fullcodeline": "redirect_to :action => :show, :project => @project"
    },
    {
        "line": 15,
        "fullcodeline": ":limit => @packages.each.size * 3, :code => ['succeeded', 'unchanged'])"
    },
    {
        "line": 17,
        "fullcodeline": "flash[:error] = \"Could not collect infos about repository #{@repository}/#{@arch}\""
    },
    {
        "line": 18,
        "fullcodeline": "redirect_to :action => :show, :project => @project"
    },
    {
        "line": 30,
        "fullcodeline": "--outfmt=xml #{@project.name}/#{@repository}/#{@arch} --width=910"
    },
    {
        "line": 31,
        "fullcodeline": "--buildhosts=#{@hosts} --scheduler=#{@scheduler}\""
    }
]