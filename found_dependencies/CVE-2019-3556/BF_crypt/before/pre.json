[
    {
        "line": 8,
        "fullcodeline": "static const unsigned char flags_by_subtype[26] ="
    },
    {
        "line": 43,
        "fullcodeline": "count = (BF_word)1 << ((setting[4] - '0') * 10 + (setting[5] - '0'));"
    },
    {
        "line": 55,
        "fullcodeline": "L = R = 0;"
    },
    {
        "line": 64,
        "fullcodeline": "ptr = data.ctx.S[0];"
    },
    {
        "line": 123,
        "fullcodeline": "memcpy(output, setting, 7 + 22 - 1);"
    },
    {
        "line": 124,
        "fullcodeline": "output[7 + 22 - 1] = BF_itoa64[(int)"
    },
    {
        "line": 129,
        "fullcodeline": "BF_swap(data.binary.output, 6);"
    },
    {
        "line": 131,
        "fullcodeline": "output[7 + 22 + 31] = '\\0';"
    },
    {
        "line": 9,
        "fullcodeline": "{2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
    },
    {
        "line": 25,
        "fullcodeline": "if (size < 7 + 22 + 31 + 1) {"
    },
    {
        "line": 56,
        "fullcodeline": "for (i = 0; i < BF_N + 2; i += 2) {"
    },
    {
        "line": 78,
        "fullcodeline": "} while (ptr < &data.ctx.S[3][0xFF]);"
    },
    {
        "line": 110,
        "fullcodeline": "for (i = 0; i < 6; i += 2) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (setting[0] != '$' ||"
    },
    {
        "line": 38,
        "fullcodeline": "setting[6] != '$') {"
    },
    {
        "line": 44,
        "fullcodeline": "if (count < min || BF_decode(data.binary.salt, &setting[7], 16)) {"
    },
    {
        "line": 57,
        "fullcodeline": "L ^= data.binary.salt[i & 2];"
    },
    {
        "line": 58,
        "fullcodeline": "R ^= data.binary.salt[(i & 2) + 1];"
    },
    {
        "line": 60,
        "fullcodeline": "data.ctx.P[i] = L;"
    },
    {
        "line": 61,
        "fullcodeline": "data.ctx.P[i + 1] = R;"
    },
    {
        "line": 66,
        "fullcodeline": "ptr += 4;"
    },
    {
        "line": 67,
        "fullcodeline": "L ^= data.binary.salt[(BF_N + 2) & 3];"
    },
    {
        "line": 68,
        "fullcodeline": "R ^= data.binary.salt[(BF_N + 3) & 3];"
    },
    {
        "line": 73,
        "fullcodeline": "L ^= data.binary.salt[(BF_N + 4) & 3];"
    },
    {
        "line": 74,
        "fullcodeline": "R ^= data.binary.salt[(BF_N + 5) & 3];"
    },
    {
        "line": 111,
        "fullcodeline": "L = BF_magic_w[i];"
    },
    {
        "line": 112,
        "fullcodeline": "R = BF_magic_w[i + 1];"
    },
    {
        "line": 114,
        "fullcodeline": "count = 64;"
    },
    {
        "line": 119,
        "fullcodeline": "data.binary.output[i] = L;"
    },
    {
        "line": 120,
        "fullcodeline": "data.binary.output[i + 1] = R;"
    },
    {
        "line": 37,
        "fullcodeline": "(setting[4] == '3' && setting[5] > '1') ||"
    },
    {
        "line": 83,
        "fullcodeline": "for (i = 0; i < BF_N + 2; i += 2) {"
    },
    {
        "line": 36,
        "fullcodeline": "setting[5] < '0' || setting[5] > '9' ||"
    },
    {
        "line": 70,
        "fullcodeline": "*(ptr - 4) = L;"
    },
    {
        "line": 71,
        "fullcodeline": "*(ptr - 3) = R;"
    },
    {
        "line": 76,
        "fullcodeline": "*(ptr - 2) = L;"
    },
    {
        "line": 77,
        "fullcodeline": "*(ptr - 1) = R;"
    },
    {
        "line": 84,
        "fullcodeline": "data.ctx.P[i] ^= data.expanded_key[i];"
    },
    {
        "line": 85,
        "fullcodeline": "data.ctx.P[i + 1] ^= data.expanded_key[i + 1];"
    },
    {
        "line": 95,
        "fullcodeline": "tmp1 = data.binary.salt[0];"
    },
    {
        "line": 96,
        "fullcodeline": "tmp2 = data.binary.salt[1];"
    },
    {
        "line": 97,
        "fullcodeline": "tmp3 = data.binary.salt[2];"
    },
    {
        "line": 98,
        "fullcodeline": "tmp4 = data.binary.salt[3];"
    },
    {
        "line": 99,
        "fullcodeline": "for (i = 0; i < BF_N; i += 4) {"
    },
    {
        "line": 35,
        "fullcodeline": "setting[4] < '0' || setting[4] > '3' ||"
    },
    {
        "line": 100,
        "fullcodeline": "data.ctx.P[i] ^= tmp1;"
    },
    {
        "line": 101,
        "fullcodeline": "data.ctx.P[i + 1] ^= tmp2;"
    },
    {
        "line": 34,
        "fullcodeline": "setting[3] != '$' ||"
    },
    {
        "line": 33,
        "fullcodeline": "!flags_by_subtype[(unsigned int)(unsigned char)setting[2] - 'a'] ||"
    },
    {
        "line": 32,
        "fullcodeline": "setting[2] < 'a' || setting[2] > 'z' ||"
    },
    {
        "line": 31,
        "fullcodeline": "setting[1] != '2' ||"
    }
]