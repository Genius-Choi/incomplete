[
    {
        "line": 11,
        "fullcodeline": "df = pd.DataFrame(x)"
    },
    {
        "line": 13,
        "fullcodeline": "extra_args = [\"--install-mlflow\"]"
    },
    {
        "line": 17,
        "fullcodeline": "image_name = pyfunc_build_image("
    },
    {
        "line": 22,
        "fullcodeline": "host_port = get_safe_port()"
    },
    {
        "line": 23,
        "fullcodeline": "scoring_proc = pyfunc_serve_from_docker_image_with_env_override("
    },
    {
        "line": 26,
        "fullcodeline": "_validate_with_rest_endpoint(scoring_proc, host_port, df, x, sk_model, enable_mlserver)"
    },
    {
        "line": 2,
        "fullcodeline": "with mlflow.start_run() as active_run:"
    },
    {
        "line": 10,
        "fullcodeline": "x, _ = iris_data"
    },
    {
        "line": 15,
        "fullcodeline": "extra_args.append(\"--enable-mlserver\")"
    },
    {
        "line": 9,
        "fullcodeline": "model_uri = f\"runs:/{active_run.info.run_id}/model\""
    },
    {
        "line": 4,
        "fullcodeline": "mlflow.sklearn.log_model("
    },
    {
        "line": 8,
        "fullcodeline": "mlflow.sklearn.log_model(sk_model, \"model\")"
    },
    {
        "line": 5,
        "fullcodeline": "sk_model, \"model\", extra_pip_requirements=[PROTOBUF_REQUIREMENT]"
    }
]