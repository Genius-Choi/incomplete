[
    {
        "line": 2,
        "fullcodeline": "r_return_val_if_fail (io, -1);"
    },
    {
        "line": 3,
        "fullcodeline": "RIOBank *bank = r_io_bank_get (io, bankid);"
    },
    {
        "line": 20,
        "fullcodeline": "RIOSubMap *sm = (RIOSubMap *)node->data;"
    },
    {
        "line": 24,
        "fullcodeline": "RIOMap *map = r_io_map_get_by_ref (io, &sm->mapref);"
    },
    {
        "line": 28,
        "fullcodeline": "const int read_len = R_MIN (len, r_io_submap_to (sm) - addr + 1);"
    },
    {
        "line": 32,
        "fullcodeline": "const ut64 paddr = addr - r_io_map_from (map) + map->delta;"
    },
    {
        "line": 4,
        "fullcodeline": "if (!bank) {"
    },
    {
        "line": 7,
        "fullcodeline": "if (!len) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (bank->last_used && r_io_submap_contain (((RIOSubMap *)bank->last_used->data), addr)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (map->perm & R_PERM_RELOC) {"
    },
    {
        "line": 33,
        "fullcodeline": "return r_io_fd_read_at (io, map->fd, paddr, buf, read_len);"
    },
    {
        "line": 12,
        "fullcodeline": "node = bank->last_used;"
    },
    {
        "line": 21,
        "fullcodeline": "if (!r_io_submap_contain (sm, addr)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (!map || !(map->perm & R_PERM_R)) {"
    },
    {
        "line": 14,
        "fullcodeline": "node = r_crbtree_find_node (bank->submaps, &addr, _find_sm_by_vaddr_cb, NULL);"
    },
    {
        "line": 26,
        "fullcodeline": "return -1;"
    },
    {
        "line": 30,
        "fullcodeline": "return map->reloc_map->read (io, map, addr, buf, read_len);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!node) {"
    }
]