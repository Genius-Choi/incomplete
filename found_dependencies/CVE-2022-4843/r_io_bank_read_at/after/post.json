[
    {
        "line": 2,
        "fullcodeline": "r_return_val_if_fail (io, false);"
    },
    {
        "line": 3,
        "fullcodeline": "RIOBank *bank = r_io_bank_get (io, bankid);"
    },
    {
        "line": 7,
        "fullcodeline": "RIOSubMap fake_sm = {{0}};"
    },
    {
        "line": 8,
        "fullcodeline": "fake_sm.itv.addr = addr;"
    },
    {
        "line": 9,
        "fullcodeline": "fake_sm.itv.size = len;"
    },
    {
        "line": 16,
        "fullcodeline": "memset (buf, io->Oxff, len);"
    },
    {
        "line": 17,
        "fullcodeline": "RIOSubMap *sm = node ? (RIOSubMap *)node->data : NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "bool ret = true;"
    },
    {
        "line": 4,
        "fullcodeline": "if (!bank) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (R_LIKELY (bank->last_used && r_io_submap_contain (((RIOSubMap *)bank->last_used->data), addr))) {"
    },
    {
        "line": 19,
        "fullcodeline": "while (sm && r_io_submap_overlap ((&fake_sm), sm)) {"
    },
    {
        "line": 12,
        "fullcodeline": "node = bank->last_used;"
    },
    {
        "line": 20,
        "fullcodeline": "bank->last_used = node;"
    },
    {
        "line": 21,
        "fullcodeline": "RIOMap *map = r_io_map_get_by_ref (io, &sm->mapref);"
    },
    {
        "line": 31,
        "fullcodeline": "const ut64 buf_off = R_MAX (addr, r_io_submap_from (sm)) - addr;"
    },
    {
        "line": 32,
        "fullcodeline": "const int read_len = R_MIN (r_io_submap_to ((&fake_sm)),"
    },
    {
        "line": 41,
        "fullcodeline": "node = r_rbnode_next (node);"
    },
    {
        "line": 42,
        "fullcodeline": "sm = node ? (RIOSubMap *)node->data : NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "node = _find_entry_submap_node (bank, &fake_sm);"
    },
    {
        "line": 22,
        "fullcodeline": "if (!map) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (!(map->perm & R_PERM_R)) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (map->perm & R_PERM_RELOC && map->reloc_map) {"
    },
    {
        "line": 27,
        "fullcodeline": "node = r_rbnode_next (node);"
    },
    {
        "line": 28,
        "fullcodeline": "sm = node ? (RIOSubMap *)node->data : NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "ret &= map->reloc_map->read (io, map, addr + buf_off, &buf[buf_off], read_len);"
    },
    {
        "line": 33,
        "fullcodeline": "r_io_submap_to (sm)) - (addr + buf_off) + 1;"
    },
    {
        "line": 37,
        "fullcodeline": "const ut64 paddr = addr + buf_off - r_io_map_from (map) + map->delta;"
    },
    {
        "line": 38,
        "fullcodeline": "ret &= (r_io_fd_read_at (io, map->fd, paddr, &buf[buf_off], read_len) == read_len);"
    }
]