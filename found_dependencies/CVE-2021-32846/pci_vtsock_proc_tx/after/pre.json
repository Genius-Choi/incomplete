[
    {
        "line": 5,
        "fullcodeline": "struct iovec iov_array[VTSOCK_MAXSEGS], *iov = iov_array;"
    },
    {
        "line": 6,
        "fullcodeline": "uint16_t idx, flags[VTSOCK_MAXSEGS];"
    },
    {
        "line": 11,
        "fullcodeline": "iovec_len = vq_getchain(vq, &idx, iov, VTSOCK_MAXSEGS, flags);"
    },
    {
        "line": 21,
        "fullcodeline": "dprint_chain(iov, iovec_len, \"TX\");"
    },
    {
        "line": 25,
        "fullcodeline": "pulled = iovec_pull(&iov, &iovec_len, &hdr, sizeof(hdr));"
    },
    {
        "line": 30,
        "fullcodeline": "dprint_iovec(iov, iovec_len, \"TX\");"
    },
    {
        "line": 50,
        "fullcodeline": "sock = lookup_sock(sc, VIRTIO_VSOCK_TYPE_STREAM,"
    },
    {
        "line": 237,
        "fullcodeline": "close_sock(sc, sock, \"TX\");"
    },
    {
        "line": 12,
        "fullcodeline": "if (iovec_len < 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "assert(iovec_len <= VTSOCK_MAXSEGS);"
    },
    {
        "line": 26,
        "fullcodeline": "assert(pulled == sizeof(hdr));"
    },
    {
        "line": 32,
        "fullcodeline": "if (hdr.src_cid != sc->vssc_cfg.guest_cid ||"
    },
    {
        "line": 34,
        "fullcodeline": "hdr.type != VIRTIO_VSOCK_TYPE_STREAM) {"
    },
    {
        "line": 61,
        "fullcodeline": "sock->peer_buf_alloc = hdr.buf_alloc;"
    },
    {
        "line": 62,
        "fullcodeline": "sock->peer_fwd_cnt = hdr.fwd_cnt;"
    },
    {
        "line": 83,
        "fullcodeline": "sock = connect_sock(sc,"
    },
    {
        "line": 95,
        "fullcodeline": "send_response_sock(sc, VIRTIO_VSOCK_OP_RESPONSE, 0, sock);"
    },
    {
        "line": 112,
        "fullcodeline": "sock->state = SOCK_CONNECTED;"
    },
    {
        "line": 121,
        "fullcodeline": "close_sock(sc, sock, \"TX\");"
    },
    {
        "line": 147,
        "fullcodeline": "shutdown_peer_local_fd(sock, hdr.flags, \"TX\");"
    },
    {
        "line": 200,
        "fullcodeline": "sc->rx_kick_pending = true;"
    },
    {
        "line": 214,
        "fullcodeline": "set_credit_update_required(sc, sock);"
    },
    {
        "line": 225,
        "fullcodeline": "send_response_sock(sc, VIRTIO_VSOCK_OP_RST, 0, sock);"
    },
    {
        "line": 33,
        "fullcodeline": "hdr.dst_cid != VMADDR_CID_HOST ||"
    },
    {
        "line": 51,
        "fullcodeline": "(struct vsock_addr) {"
    },
    {
        "line": 55,
        "fullcodeline": "(struct vsock_addr) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (hdr.dst_cid == sc->vssc_cfg.guest_cid) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (!sock) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (!sock) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (sock->state != SOCK_CONNECTING) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (!sock)"
    },
    {
        "line": 126,
        "fullcodeline": "if (!sock) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (sock->state != SOCK_CONNECTED) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (hdr.flags & ~VIRTIO_VSOCK_FLAG_SHUTDOWN_ALL) {"
    },
    {
        "line": 152,
        "fullcodeline": "if (sock->peer_shutdown == VIRTIO_VSOCK_FLAG_SHUTDOWN_ALL)"
    },
    {
        "line": 179,
        "fullcodeline": "rc = handle_write(sc, sock, hdr.len, iov, iovec_len);"
    },
    {
        "line": 188,
        "fullcodeline": "if (!sock) {"
    },
    {
        "line": 192,
        "fullcodeline": "if (sock->state != SOCK_CONNECTED) {"
    },
    {
        "line": 204,
        "fullcodeline": "if (!sock) {"
    },
    {
        "line": 208,
        "fullcodeline": "if (sock->state != SOCK_CONNECTED) {"
    },
    {
        "line": 227,
        "fullcodeline": "send_response_nosock(sc, VIRTIO_VSOCK_OP_RST, hdr.type,"
    },
    {
        "line": 38,
        "fullcodeline": "(struct vsock_addr) {"
    },
    {
        "line": 42,
        "fullcodeline": "(struct vsock_addr) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (!(hdr.flags & VIRTIO_VSOCK_FLAG_SHUTDOWN_ALL)) {"
    },
    {
        "line": 162,
        "fullcodeline": "if (!sock) {"
    },
    {
        "line": 166,
        "fullcodeline": "if (sock->state != SOCK_CONNECTED) {"
    },
    {
        "line": 171,
        "fullcodeline": "if (sock->peer_shutdown & VIRTIO_VSOCK_FLAG_SHUTDOWN_TX) {"
    },
    {
        "line": 175,
        "fullcodeline": "if (sock->local_shutdown & VIRTIO_VSOCK_FLAG_SHUTDOWN_RX) {"
    },
    {
        "line": 180,
        "fullcodeline": "if (rc < 0) goto do_rst;"
    },
    {
        "line": 52,
        "fullcodeline": ".cid = hdr.dst_cid,"
    },
    {
        "line": 53,
        "fullcodeline": ".port =hdr.dst_port"
    },
    {
        "line": 56,
        "fullcodeline": ".cid = hdr.src_cid,"
    },
    {
        "line": 57,
        "fullcodeline": ".port =hdr.src_port"
    },
    {
        "line": 84,
        "fullcodeline": "(struct vsock_addr){"
    },
    {
        "line": 87,
        "fullcodeline": "(struct vsock_addr){"
    },
    {
        "line": 106,
        "fullcodeline": "PPRINTF((\"TX: RESPONSE to non-connecting sock (state %d)\\n\","
    },
    {
        "line": 132,
        "fullcodeline": "PPRINTF((\"TX: SHUTDOWN to non-connected sock (state %d)\\n\","
    },
    {
        "line": 183,
        "fullcodeline": "set_credit_update_required(sc, sock);"
    },
    {
        "line": 193,
        "fullcodeline": "PPRINTF((\"TX: CREDIT_UPDATE to non-connected sock (state %d)\\n\","
    },
    {
        "line": 209,
        "fullcodeline": "PPRINTF((\"TX: CREDIT_REQUEST to non-connected sock (state %d)\\n\","
    },
    {
        "line": 228,
        "fullcodeline": "(struct vsock_addr) {"
    },
    {
        "line": 232,
        "fullcodeline": "(struct vsock_addr) {"
    },
    {
        "line": 39,
        "fullcodeline": ".cid = hdr.dst_cid,"
    },
    {
        "line": 40,
        "fullcodeline": ".port =hdr.dst_port"
    },
    {
        "line": 43,
        "fullcodeline": ".cid = hdr.src_cid,"
    },
    {
        "line": 44,
        "fullcodeline": ".port =hdr.src_port"
    },
    {
        "line": 167,
        "fullcodeline": "PPRINTF((\"TX: RW to non-connected sock (state %d)\\n\","
    },
    {
        "line": 85,
        "fullcodeline": ".cid = hdr.dst_cid, .port = hdr.dst_port"
    },
    {
        "line": 88,
        "fullcodeline": ".cid = hdr.src_cid, .port = hdr.src_port"
    },
    {
        "line": 229,
        "fullcodeline": ".cid = hdr.dst_cid,"
    },
    {
        "line": 230,
        "fullcodeline": ".port =hdr.dst_port"
    },
    {
        "line": 233,
        "fullcodeline": ".cid = hdr.src_cid,"
    },
    {
        "line": 234,
        "fullcodeline": ".port =hdr.src_port"
    }
]