[
    {
        "line": 102,
        "fullcodeline": "name = os.path.expanduser(name)"
    },
    {
        "line": 104,
        "fullcodeline": "if not ret:"
    },
    {
        "line": 110,
        "fullcodeline": "if source and not sfn:"
    },
    {
        "line": 131,
        "fullcodeline": "if os.path.isfile(name) or os.path.islink(name):"
    },
    {
        "line": 105,
        "fullcodeline": "ret = {'name': name,"
    },
    {
        "line": 112,
        "fullcodeline": "sfn = __salt__['cp.cache_file'](source, saltenv)"
    },
    {
        "line": 116,
        "fullcodeline": "htype = source_sum.get('hash_type', __opts__['hash_type'])"
    },
    {
        "line": 118,
        "fullcodeline": "source_sum = {"
    },
    {
        "line": 295,
        "fullcodeline": "contain_dir = os.path.dirname(name)"
    },
    {
        "line": 297,
        "fullcodeline": "def _set_mode_and_make_dirs(name, dir_mode, mode, user, group):"
    },
    {
        "line": 113,
        "fullcodeline": "if not sfn:"
    },
    {
        "line": 132,
        "fullcodeline": "if os.path.islink(name) and follow_symlinks:"
    },
    {
        "line": 138,
        "fullcodeline": "if source and not (not follow_symlinks and os.path.islink(real_name)):"
    },
    {
        "line": 144,
        "fullcodeline": "if source and (name_sum is None or source_sum.get('hsum', __opts__['hash_type']) != name_sum):"
    },
    {
        "line": 203,
        "fullcodeline": "if contents is not None:"
    },
    {
        "line": 246,
        "fullcodeline": "if os.path.islink(name) and not follow_symlinks:"
    },
    {
        "line": 282,
        "fullcodeline": "ret, _ = check_perms(name, ret, user, group, mode, follow_symlinks)"
    },
    {
        "line": 389,
        "fullcodeline": "if contents is not None:"
    },
    {
        "line": 414,
        "fullcodeline": "if mode is None and not salt.utils.is_windows():"
    },
    {
        "line": 420,
        "fullcodeline": "ret, _ = check_perms(name, ret, user, group, mode)"
    },
    {
        "line": 422,
        "fullcodeline": "if not ret['comment']:"
    },
    {
        "line": 133,
        "fullcodeline": "real_name = os.path.realpath(name)"
    },
    {
        "line": 135,
        "fullcodeline": "real_name = name"
    },
    {
        "line": 139,
        "fullcodeline": "name_sum = get_hash(real_name, source_sum.get('hash_type', __opts__['hash_type']))"
    },
    {
        "line": 141,
        "fullcodeline": "name_sum = None"
    },
    {
        "line": 205,
        "fullcodeline": "tmp = salt.utils.mkstemp(prefix=salt.utils.files.TEMPFILE_PREFIX,"
    },
    {
        "line": 243,
        "fullcodeline": "__clean_tmp(tmp)"
    },
    {
        "line": 279,
        "fullcodeline": "ret['changes']['diff'] = \\"
    },
    {
        "line": 285,
        "fullcodeline": "ret['comment'] = 'File {0} updated'.format(name)"
    },
    {
        "line": 292,
        "fullcodeline": "__clean_tmp(sfn)"
    },
    {
        "line": 320,
        "fullcodeline": "ret['changes']['diff'] = 'New file'"
    },
    {
        "line": 391,
        "fullcodeline": "tmp = salt.utils.mkstemp(prefix=salt.utils.files.TEMPFILE_PREFIX,"
    },
    {
        "line": 403,
        "fullcodeline": "__clean_tmp(tmp)"
    },
    {
        "line": 416,
        "fullcodeline": "mask = os.umask(0)"
    },
    {
        "line": 417,
        "fullcodeline": "os.umask(mask)"
    },
    {
        "line": 419,
        "fullcodeline": "mode = oct((0o777 ^ mask) & 0o666)"
    },
    {
        "line": 423,
        "fullcodeline": "ret['comment'] = 'File ' + name + ' updated'"
    },
    {
        "line": 426,
        "fullcodeline": "ret['comment'] = 'File ' + name + ' not updated'"
    },
    {
        "line": 430,
        "fullcodeline": "__clean_tmp(sfn)"
    },
    {
        "line": 114,
        "fullcodeline": "return _error("
    },
    {
        "line": 120,
        "fullcodeline": "'hsum': get_hash(sfn, form=htype)"
    },
    {
        "line": 123,
        "fullcodeline": "if _urlparse(source).scheme in ('salt', 'file') \\"
    },
    {
        "line": 145,
        "fullcodeline": "if not sfn:"
    },
    {
        "line": 147,
        "fullcodeline": "if not sfn:"
    },
    {
        "line": 153,
        "fullcodeline": "if not skip_verify \\"
    },
    {
        "line": 173,
        "fullcodeline": "if __salt__['config.option']('obfuscate_templates'):"
    },
    {
        "line": 210,
        "fullcodeline": "with salt.utils.fopen(tmp, 'w') as tmp_:"
    },
    {
        "line": 214,
        "fullcodeline": "with salt.utils.fopen(tmp, 'r') as src:"
    },
    {
        "line": 216,
        "fullcodeline": "with salt.utils.fopen(real_name, 'r') as name_:"
    },
    {
        "line": 247,
        "fullcodeline": "if not sfn:"
    },
    {
        "line": 249,
        "fullcodeline": "if not sfn:"
    },
    {
        "line": 254,
        "fullcodeline": "if not skip_verify and _urlparse(source).scheme != 'salt':"
    },
    {
        "line": 287,
        "fullcodeline": "elif not ret['changes'] and ret['result']:"
    },
    {
        "line": 322,
        "fullcodeline": "if not sfn:"
    },
    {
        "line": 324,
        "fullcodeline": "if not sfn:"
    },
    {
        "line": 329,
        "fullcodeline": "if not skip_verify \\"
    },
    {
        "line": 344,
        "fullcodeline": "if not os.path.isdir(contain_dir):"
    },
    {
        "line": 353,
        "fullcodeline": "if not os.path.isdir(contain_dir):"
    },
    {
        "line": 368,
        "fullcodeline": "if contents is None:"
    },
    {
        "line": 396,
        "fullcodeline": "with salt.utils.fopen(tmp, 'w') as tmp_:"
    },
    {
        "line": 399,
        "fullcodeline": "salt.utils.files.copyfile(tmp,"
    },
    {
        "line": 427,
        "fullcodeline": "elif not ret['changes'] and ret['result']:"
    },
    {
        "line": 106,
        "fullcodeline": "'changes': {},"
    },
    {
        "line": 124,
        "fullcodeline": "or source.startswith('/'):"
    },
    {
        "line": 146,
        "fullcodeline": "sfn = __salt__['cp.cache_file'](source, saltenv)"
    },
    {
        "line": 154,
        "fullcodeline": "and _urlparse(source).scheme not in ('salt', ''):"
    },
    {
        "line": 155,
        "fullcodeline": "dl_sum = get_hash(sfn, source_sum['hash_type'])"
    },
    {
        "line": 174,
        "fullcodeline": "ret['changes']['diff'] = '<Obfuscated Template>'"
    },
    {
        "line": 207,
        "fullcodeline": "if salt.utils.is_windows():"
    },
    {
        "line": 208,
        "fullcodeline": "contents = os.linesep.join("
    },
    {
        "line": 248,
        "fullcodeline": "sfn = __salt__['cp.cache_file'](source, saltenv)"
    },
    {
        "line": 255,
        "fullcodeline": "dl_sum = get_hash(sfn, source_sum['hash_type'])"
    },
    {
        "line": 288,
        "fullcodeline": "ret['comment'] = u'File {0} is in the correct state'.format("
    },
    {
        "line": 323,
        "fullcodeline": "sfn = __salt__['cp.cache_file'](source, saltenv)"
    },
    {
        "line": 330,
        "fullcodeline": "and _urlparse(source).scheme != 'salt':"
    },
    {
        "line": 331,
        "fullcodeline": "dl_sum = get_hash(sfn, source_sum['hash_type'])"
    },
    {
        "line": 365,
        "fullcodeline": "current_umask = os.umask(0o77)"
    },
    {
        "line": 387,
        "fullcodeline": "os.umask(current_umask)"
    },
    {
        "line": 393,
        "fullcodeline": "if salt.utils.is_windows():"
    },
    {
        "line": 394,
        "fullcodeline": "contents = os.linesep.join("
    },
    {
        "line": 401,
        "fullcodeline": "__salt__['config.backup_mode'](backup),"
    },
    {
        "line": 410,
        "fullcodeline": "__clean_tmp(sfn)"
    },
    {
        "line": 428,
        "fullcodeline": "ret['comment'] = 'File ' + name + ' is in the correct state'"
    },
    {
        "line": 115,
        "fullcodeline": "ret, 'Source file \\'{0}\\' not found'.format(source))"
    },
    {
        "line": 148,
        "fullcodeline": "return _error("
    },
    {
        "line": 156,
        "fullcodeline": "if dl_sum != source_sum['hsum']:"
    },
    {
        "line": 175,
        "fullcodeline": "elif not show_changes:"
    },
    {
        "line": 194,
        "fullcodeline": "salt.utils.files.copyfile(sfn,"
    },
    {
        "line": 211,
        "fullcodeline": "tmp_.write(str(contents))"
    },
    {
        "line": 215,
        "fullcodeline": "slines = src.readlines()"
    },
    {
        "line": 217,
        "fullcodeline": "nlines = name_.readlines()"
    },
    {
        "line": 218,
        "fullcodeline": "different = ''.join(slines) != ''.join(nlines)"
    },
    {
        "line": 221,
        "fullcodeline": "if __salt__['config.option']('obfuscate_templates'):"
    },
    {
        "line": 250,
        "fullcodeline": "return _error("
    },
    {
        "line": 256,
        "fullcodeline": "if dl_sum != source_sum['hsum']:"
    },
    {
        "line": 270,
        "fullcodeline": "salt.utils.files.copyfile(sfn,"
    },
    {
        "line": 325,
        "fullcodeline": "return _error("
    },
    {
        "line": 332,
        "fullcodeline": "if dl_sum != source_sum['hsum']:"
    },
    {
        "line": 397,
        "fullcodeline": "tmp_.write(str(contents))"
    },
    {
        "line": 406,
        "fullcodeline": "salt.utils.files.copyfile(sfn,"
    },
    {
        "line": 126,
        "fullcodeline": "mode = __salt__['cp.stat_file'](source, saltenv=saltenv, octal=True)"
    },
    {
        "line": 157,
        "fullcodeline": "ret['comment'] = ("
    },
    {
        "line": 169,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 176,
        "fullcodeline": "ret['changes']['diff'] = '<show_changes=False>'"
    },
    {
        "line": 179,
        "fullcodeline": "bdiff = _binary_replace(real_name, sfn)"
    },
    {
        "line": 196,
        "fullcodeline": "__salt__['config.backup_mode'](backup),"
    },
    {
        "line": 199,
        "fullcodeline": "__clean_tmp(sfn)"
    },
    {
        "line": 222,
        "fullcodeline": "ret['changes']['diff'] = '<Obfuscated Template>'"
    },
    {
        "line": 257,
        "fullcodeline": "ret['comment'] = ("
    },
    {
        "line": 266,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 272,
        "fullcodeline": "__salt__['config.backup_mode'](backup),"
    },
    {
        "line": 275,
        "fullcodeline": "__clean_tmp(sfn)"
    },
    {
        "line": 333,
        "fullcodeline": "ret['comment'] = ("
    },
    {
        "line": 342,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 346,
        "fullcodeline": "_set_mode_and_make_dirs(name, dir_mode, mode, user, group)"
    },
    {
        "line": 348,
        "fullcodeline": "__clean_tmp(sfn)"
    },
    {
        "line": 355,
        "fullcodeline": "_set_mode_and_make_dirs(name, dir_mode, mode, user, group)"
    },
    {
        "line": 357,
        "fullcodeline": "__clean_tmp(sfn)"
    },
    {
        "line": 408,
        "fullcodeline": "__salt__['config.backup_mode'](backup),"
    },
    {
        "line": 149,
        "fullcodeline": "ret, 'Source file \\'{0}\\' not found'.format(source))"
    },
    {
        "line": 200,
        "fullcodeline": "return _error("
    },
    {
        "line": 209,
        "fullcodeline": "_splitlines_preserving_trailing_newline(contents))"
    },
    {
        "line": 223,
        "fullcodeline": "elif not show_changes:"
    },
    {
        "line": 235,
        "fullcodeline": "salt.utils.files.copyfile(tmp,"
    },
    {
        "line": 251,
        "fullcodeline": "ret, 'Source file \\'{0}\\' not found'.format(source))"
    },
    {
        "line": 276,
        "fullcodeline": "return _error("
    },
    {
        "line": 326,
        "fullcodeline": "ret, 'Source file \\'{0}\\' not found'.format(source))"
    },
    {
        "line": 350,
        "fullcodeline": "ret['changes'].pop('diff', None)"
    },
    {
        "line": 351,
        "fullcodeline": "return _error(ret, 'Parent directory not present')"
    },
    {
        "line": 359,
        "fullcodeline": "ret['changes'].pop('diff', None)"
    },
    {
        "line": 360,
        "fullcodeline": "return _error(ret, 'Parent directory not present')"
    },
    {
        "line": 370,
        "fullcodeline": "if touch(name):"
    },
    {
        "line": 379,
        "fullcodeline": "if touch(name):"
    },
    {
        "line": 395,
        "fullcodeline": "_splitlines_preserving_trailing_newline(contents))"
    },
    {
        "line": 128,
        "fullcodeline": "log.warning('Unable to stat %s: %s', sfn, exc)"
    },
    {
        "line": 158,
        "fullcodeline": "'Specified {0} checksum for {1} ({2}) does not match '"
    },
    {
        "line": 181,
        "fullcodeline": "ret['changes']['diff'] = bdiff"
    },
    {
        "line": 188,
        "fullcodeline": "sndiff = ''.join(difflib.unified_diff(nlines, slines))"
    },
    {
        "line": 224,
        "fullcodeline": "ret['changes']['diff'] = '<show_changes=False>'"
    },
    {
        "line": 237,
        "fullcodeline": "__salt__['config.backup_mode'](backup),"
    },
    {
        "line": 240,
        "fullcodeline": "__clean_tmp(tmp)"
    },
    {
        "line": 258,
        "fullcodeline": "'Specified {0} checksum for {1} ({2}) does not match '"
    },
    {
        "line": 289,
        "fullcodeline": "salt.utils.locales.sdecode(name)"
    },
    {
        "line": 334,
        "fullcodeline": "'Specified {0} checksum for {1} ({2}) does not match '"
    },
    {
        "line": 371,
        "fullcodeline": "ret['changes']['new'] = 'file {0} created'.format(name)"
    },
    {
        "line": 372,
        "fullcodeline": "ret['comment'] = 'Empty file'"
    },
    {
        "line": 380,
        "fullcodeline": "ret['changes']['diff'] = 'New file'"
    },
    {
        "line": 183,
        "fullcodeline": "with salt.utils.fopen(sfn, 'r') as src:"
    },
    {
        "line": 185,
        "fullcodeline": "with salt.utils.fopen(real_name, 'r') as name_:"
    },
    {
        "line": 201,
        "fullcodeline": "ret, 'Failed to commit change: {0}'.format(io_error))"
    },
    {
        "line": 241,
        "fullcodeline": "return _error("
    },
    {
        "line": 277,
        "fullcodeline": "ret, 'Failed to commit change: {0}'.format(io_error))"
    },
    {
        "line": 374,
        "fullcodeline": "return _error("
    },
    {
        "line": 382,
        "fullcodeline": "return _error("
    },
    {
        "line": 190,
        "fullcodeline": "ret['changes']['diff'] = sndiff"
    },
    {
        "line": 226,
        "fullcodeline": "if salt.utils.istextfile(real_name):"
    },
    {
        "line": 227,
        "fullcodeline": "ret['changes']['diff'] = \\"
    },
    {
        "line": 230,
        "fullcodeline": "ret['changes']['diff'] = \\"
    },
    {
        "line": 184,
        "fullcodeline": "slines = src.readlines()"
    },
    {
        "line": 186,
        "fullcodeline": "nlines = name_.readlines()"
    },
    {
        "line": 242,
        "fullcodeline": "ret, 'Failed to commit change: {0}'.format(io_error))"
    },
    {
        "line": 375,
        "fullcodeline": "ret, 'Empty file {0} not created'.format(name)"
    },
    {
        "line": 383,
        "fullcodeline": "ret, 'File {0} not created'.format(name)"
    },
    {
        "line": 228,
        "fullcodeline": "''.join(difflib.unified_diff(nlines, slines))"
    }
]