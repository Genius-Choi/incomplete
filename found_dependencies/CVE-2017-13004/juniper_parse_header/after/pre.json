[
    {
        "line": 4,
        "fullcodeline": "const struct juniper_cookie_table_t *lp = juniper_cookie_table;"
    },
    {
        "line": 5,
        "fullcodeline": "u_int idx, jnx_ext_len, jnx_header_len = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "l2info->header_len = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "l2info->cookie_len = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "l2info->proto = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "l2info->length = h->len;"
    },
    {
        "line": 18,
        "fullcodeline": "l2info->caplen = h->caplen;"
    },
    {
        "line": 19,
        "fullcodeline": "ND_TCHECK2(p[0], 4);"
    },
    {
        "line": 20,
        "fullcodeline": "l2info->flags = p[3];"
    },
    {
        "line": 21,
        "fullcodeline": "l2info->direction = p[3]&JUNIPER_BPF_PKT_IN;"
    },
    {
        "line": 32,
        "fullcodeline": "jnx_header_len = 4;"
    },
    {
        "line": 134,
        "fullcodeline": "l2info->header_len = jnx_header_len;"
    },
    {
        "line": 135,
        "fullcodeline": "p+=l2info->header_len;"
    },
    {
        "line": 136,
        "fullcodeline": "l2info->length -= l2info->header_len;"
    },
    {
        "line": 137,
        "fullcodeline": "l2info->caplen -= l2info->header_len;"
    },
    {
        "line": 140,
        "fullcodeline": "ND_TCHECK(p[0]);"
    },
    {
        "line": 23,
        "fullcodeline": "if (EXTRACT_24BITS(p) != JUNIPER_MGC_NUMBER) { /* magic number found ? */"
    },
    {
        "line": 34,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 141,
        "fullcodeline": "while (lp->s != NULL) {"
    },
    {
        "line": 315,
        "fullcodeline": "if (ndo->ndo_eflag > 1)"
    },
    {
        "line": 320,
        "fullcodeline": "ND_PRINT((ndo, \"[|juniper_hdr], length %u\", h->len));"
    },
    {
        "line": 24,
        "fullcodeline": "ND_PRINT((ndo, \"no magic-number found!\"));"
    },
    {
        "line": 39,
        "fullcodeline": "if ((l2info->flags & JUNIPER_BPF_EXT ) == JUNIPER_BPF_EXT ) {"
    },
    {
        "line": 41,
        "fullcodeline": "tptr = p+jnx_header_len;"
    },
    {
        "line": 44,
        "fullcodeline": "ND_TCHECK2(tptr[0], 2);"
    },
    {
        "line": 45,
        "fullcodeline": "jnx_ext_len = EXTRACT_16BITS(tptr);"
    },
    {
        "line": 46,
        "fullcodeline": "jnx_header_len += 2;"
    },
    {
        "line": 47,
        "fullcodeline": "tptr +=2;"
    },
    {
        "line": 52,
        "fullcodeline": "jnx_header_len += jnx_ext_len;"
    },
    {
        "line": 57,
        "fullcodeline": "ND_TCHECK2(tptr[0], jnx_ext_len);"
    },
    {
        "line": 117,
        "fullcodeline": "if ((l2info->flags & JUNIPER_BPF_NO_L2 ) == JUNIPER_BPF_NO_L2 ) {"
    },
    {
        "line": 125,
        "fullcodeline": "ND_TCHECK2(p[jnx_header_len + 4], 1);"
    },
    {
        "line": 196,
        "fullcodeline": "++lp;"
    },
    {
        "line": 29,
        "fullcodeline": "ND_PRINT((ndo, \"%3s \", tok2str(juniper_direction_values, \"---\", l2info->direction)));"
    },
    {
        "line": 35,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\tJuniper PCAP Flags [%s]\","
    },
    {
        "line": 54,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 58,
        "fullcodeline": "while (jnx_ext_len > JUNIPER_EXT_TLV_OVERHEAD) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 142,
        "fullcodeline": "if (lp->pictype == l2info->pictype) {"
    },
    {
        "line": 311,
        "fullcodeline": "ND_PRINT((ndo, \"Unknown Juniper DLT_ type %u: \", l2info->pictype));"
    },
    {
        "line": 316,
        "fullcodeline": "ND_PRINT((ndo, \"hlen %u, proto 0x%04x, \", l2info->header_len, l2info->proto));"
    },
    {
        "line": 59,
        "fullcodeline": "tlv_type = *(tptr++);"
    },
    {
        "line": 60,
        "fullcodeline": "tlv_len = *(tptr++);"
    },
    {
        "line": 75,
        "fullcodeline": "tlv_value = juniper_read_tlv_value(tptr, tlv_type, tlv_len);"
    },
    {
        "line": 109,
        "fullcodeline": "tptr+=tlv_len;"
    },
    {
        "line": 110,
        "fullcodeline": "jnx_ext_len -= tlv_len+JUNIPER_EXT_TLV_OVERHEAD;"
    },
    {
        "line": 126,
        "fullcodeline": "if (ip_heuristic_guess(ndo, p + jnx_header_len + 4,"
    },
    {
        "line": 144,
        "fullcodeline": "l2info->cookie_len += lp->cookie_len;"
    },
    {
        "line": 170,
        "fullcodeline": "l2info->header_len += l2info->cookie_len;"
    },
    {
        "line": 193,
        "fullcodeline": "l2info->proto = EXTRACT_16BITS(p+l2info->cookie_len);"
    },
    {
        "line": 36,
        "fullcodeline": "bittok2str(jnx_flag_values, \"none\", l2info->flags)));"
    },
    {
        "line": 55,
        "fullcodeline": "ND_PRINT((ndo, \", PCAP Extension(s) total length %u\", jnx_ext_len));"
    },
    {
        "line": 66,
        "fullcodeline": "if (tlv_len+JUNIPER_EXT_TLV_OVERHEAD > jnx_ext_len)"
    },
    {
        "line": 69,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 114,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t-----original packet-----\\n\\t\"));"
    },
    {
        "line": 119,
        "fullcodeline": "ND_PRINT((ndo, \"no-L2-hdr, \"));"
    },
    {
        "line": 127,
        "fullcodeline": "l2info->length - (jnx_header_len + 4)) == 0)"
    },
    {
        "line": 128,
        "fullcodeline": "ND_PRINT((ndo, \"no IP-hdr found!\"));"
    },
    {
        "line": 179,
        "fullcodeline": "if (l2info->cookie_len > 0) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (tlv_type == 0 || tlv_len == 0)"
    },
    {
        "line": 148,
        "fullcodeline": "l2info->cookie_type = LS_COOKIE_ID;"
    },
    {
        "line": 149,
        "fullcodeline": "l2info->cookie_len += 2;"
    },
    {
        "line": 152,
        "fullcodeline": "l2info->cookie_type = AS_COOKIE_ID;"
    },
    {
        "line": 153,
        "fullcodeline": "l2info->cookie_len = 8;"
    },
    {
        "line": 180,
        "fullcodeline": "ND_TCHECK2(p[0], l2info->cookie_len);"
    },
    {
        "line": 70,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  %s Extension TLV #%u, length %u, value \","
    },
    {
        "line": 82,
        "fullcodeline": "if (tlv_value != -1) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (tlv_value != -1) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (tlv_value != -1) {"
    },
    {
        "line": 175,
        "fullcodeline": "ND_PRINT((ndo, \"%s-PIC, cookie-len %u\","
    },
    {
        "line": 183,
        "fullcodeline": "for (idx = 0; idx < l2info->cookie_len; idx++) {"
    },
    {
        "line": 189,
        "fullcodeline": "if (ndo->ndo_eflag) ND_PRINT((ndo, \": \")); /* print demarc b/w L2/L3*/"
    },
    {
        "line": 71,
        "fullcodeline": "tok2str(jnx_ext_tlv_values,\"Unknown\",tlv_type),"
    },
    {
        "line": 83,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 92,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 103,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 182,
        "fullcodeline": "ND_PRINT((ndo, \", cookie 0x\"));"
    },
    {
        "line": 84,
        "fullcodeline": "ND_PRINT((ndo, \"%s (%u)\","
    },
    {
        "line": 93,
        "fullcodeline": "ND_PRINT((ndo, \"%s (%u)\","
    },
    {
        "line": 104,
        "fullcodeline": "ND_PRINT((ndo, \"%u\", tlv_value));"
    },
    {
        "line": 185,
        "fullcodeline": "if (ndo->ndo_eflag) ND_PRINT((ndo, \"%02x\", p[idx]));"
    },
    {
        "line": 85,
        "fullcodeline": "tok2str(juniper_ifmt_values, \"Unknown\", tlv_value),"
    },
    {
        "line": 94,
        "fullcodeline": "tok2str(juniper_ifle_values, \"Unknown\", tlv_value),"
    }
]