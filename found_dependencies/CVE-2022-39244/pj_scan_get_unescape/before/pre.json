[
    {
        "line": 4,
        "fullcodeline": "register char *s = scanner->curptr;"
    },
    {
        "line": 5,
        "fullcodeline": "char *dst = s;"
    },
    {
        "line": 7,
        "fullcodeline": "pj_assert(pj_cis_match(spec,0)==0);"
    },
    {
        "line": 10,
        "fullcodeline": "pj_assert(pj_cis_match(spec,'%')==0);"
    },
    {
        "line": 18,
        "fullcodeline": "out->ptr = s;"
    },
    {
        "line": 47,
        "fullcodeline": "scanner->curptr = s;"
    },
    {
        "line": 13,
        "fullcodeline": "if (!pj_cis_match(spec, *s) && *s != '%') {"
    },
    {
        "line": 45,
        "fullcodeline": "} while (*s == '%');"
    },
    {
        "line": 48,
        "fullcodeline": "out->slen = (dst - out->ptr);"
    },
    {
        "line": 50,
        "fullcodeline": "if (PJ_SCAN_IS_PROBABLY_SPACE(*s) && scanner->skip_ws) {"
    },
    {
        "line": 14,
        "fullcodeline": "pj_scan_syntax_err(scanner);"
    },
    {
        "line": 20,
        "fullcodeline": "if (*s == '%') {"
    },
    {
        "line": 35,
        "fullcodeline": "if (pj_cis_match(spec, *s)) {"
    },
    {
        "line": 36,
        "fullcodeline": "char *start = s;"
    },
    {
        "line": 42,
        "fullcodeline": "dst += (s-start);"
    },
    {
        "line": 39,
        "fullcodeline": "} while (pj_cis_match(spec, *s));"
    },
    {
        "line": 41,
        "fullcodeline": "if (dst != start) pj_memmove(dst, start, s-start);"
    },
    {
        "line": 21,
        "fullcodeline": "if (s+3 <= scanner->end && pj_isxdigit(*(s+1)) &&"
    },
    {
        "line": 22,
        "fullcodeline": "pj_isxdigit(*(s+2)))"
    },
    {
        "line": 24,
        "fullcodeline": "*dst = (pj_uint8_t) ((pj_hex_digit_to_val(*(s+1)) << 4) +"
    },
    {
        "line": 26,
        "fullcodeline": "++dst;"
    },
    {
        "line": 27,
        "fullcodeline": "s += 3;"
    },
    {
        "line": 38,
        "fullcodeline": "++s;"
    },
    {
        "line": 25,
        "fullcodeline": "pj_hex_digit_to_val(*(s+2)));"
    },
    {
        "line": 29,
        "fullcodeline": "*dst++ = *s++;"
    },
    {
        "line": 30,
        "fullcodeline": "*dst++ = *s++;"
    }
]