[
    {
        "line": 5,
        "fullcodeline": "pj_uint16_t udelta = (pj_uint16_t) (seq - sess->max_seq);"
    },
    {
        "line": 9,
        "fullcodeline": "st.status.value = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "st.diff = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "st.status.flag.probation = 1;"
    },
    {
        "line": 84,
        "fullcodeline": "seq_status->diff = st.diff;"
    },
    {
        "line": 85,
        "fullcodeline": "seq_status->status.value = st.status.value;"
    },
    {
        "line": 20,
        "fullcodeline": "if (seq == sess->max_seq+ 1) {"
    },
    {
        "line": 22,
        "fullcodeline": "st.diff = 1;"
    },
    {
        "line": 23,
        "fullcodeline": "sess->probation--;"
    },
    {
        "line": 24,
        "fullcodeline": "sess->max_seq = seq;"
    },
    {
        "line": 43,
        "fullcodeline": "} else if (udelta == 0) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (sess->probation == 0) {"
    },
    {
        "line": 30,
        "fullcodeline": "st.diff = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "st.status.flag.bad = 1;"
    },
    {
        "line": 38,
        "fullcodeline": "sess->probation = MIN_SEQUENTIAL - 1;"
    },
    {
        "line": 39,
        "fullcodeline": "sess->max_seq = seq;"
    },
    {
        "line": 45,
        "fullcodeline": "st.status.flag.dup = 1;"
    },
    {
        "line": 26,
        "fullcodeline": "st.status.flag.probation = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "if (seq == sess->max_seq)"
    },
    {
        "line": 34,
        "fullcodeline": "st.status.flag.dup = 1;"
    },
    {
        "line": 47,
        "fullcodeline": "} else if (udelta < MAX_DROPOUT) {"
    },
    {
        "line": 36,
        "fullcodeline": "st.status.flag.outorder = 1;"
    },
    {
        "line": 53,
        "fullcodeline": "sess->max_seq = seq;"
    },
    {
        "line": 55,
        "fullcodeline": "st.diff = udelta;"
    },
    {
        "line": 49,
        "fullcodeline": "if (seq < sess->max_seq) {"
    },
    {
        "line": 51,
        "fullcodeline": "sess->cycles += RTP_SEQ_MOD;"
    },
    {
        "line": 57,
        "fullcodeline": "} else if (udelta <= (RTP_SEQ_MOD - MAX_MISORDER)) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (seq == sess->bad_seq) {"
    },
    {
        "line": 79,
        "fullcodeline": "st.status.flag.outorder = 1;"
    },
    {
        "line": 65,
        "fullcodeline": "pjmedia_rtp_seq_restart(sess, seq);"
    },
    {
        "line": 66,
        "fullcodeline": "st.status.flag.restart = 1;"
    },
    {
        "line": 67,
        "fullcodeline": "st.status.flag.probation = 1;"
    },
    {
        "line": 68,
        "fullcodeline": "st.diff = 1;"
    },
    {
        "line": 71,
        "fullcodeline": "sess->bad_seq = (seq + 1) & (RTP_SEQ_MOD-1);"
    },
    {
        "line": 72,
        "fullcodeline": "st.status.flag.bad = 1;"
    },
    {
        "line": 73,
        "fullcodeline": "st.status.flag.outorder = 1;"
    }
]