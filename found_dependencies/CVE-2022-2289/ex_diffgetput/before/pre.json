[
    {
        "line": 5,
        "fullcodeline": "linenr_T\toff = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "int\t\tfound_not_ma = FALSE;"
    },
    {
        "line": 24,
        "fullcodeline": "idx_cur = diff_buf_idx(curbuf);"
    },
    {
        "line": 138,
        "fullcodeline": "dprev = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "if (idx_cur == DB_COUNT)"
    },
    {
        "line": 31,
        "fullcodeline": "if (*eap->arg == NUL)"
    },
    {
        "line": 97,
        "fullcodeline": "if (eap->addr_count == 0)"
    },
    {
        "line": 110,
        "fullcodeline": "if (eap->cmdidx == CMD_diffget)"
    },
    {
        "line": 128,
        "fullcodeline": "if (!curbuf->b_changed)"
    },
    {
        "line": 139,
        "fullcodeline": "for (dp = curtab->tp_first_diff; dp != NULL; )"
    },
    {
        "line": 27,
        "fullcodeline": "emsg(_(e_current_buffer_is_not_in_diff_mode));"
    },
    {
        "line": 112,
        "fullcodeline": "idx_from = idx_other;"
    },
    {
        "line": 113,
        "fullcodeline": "idx_to = idx_cur;"
    },
    {
        "line": 144,
        "fullcodeline": "dfree = NULL;"
    },
    {
        "line": 145,
        "fullcodeline": "lnum = dp->df_lnum[idx_to];"
    },
    {
        "line": 146,
        "fullcodeline": "count = dp->df_count[idx_to];"
    },
    {
        "line": 308,
        "fullcodeline": "ex_diffupdate(NULL);"
    },
    {
        "line": 318,
        "fullcodeline": "diff_need_update = FALSE;"
    },
    {
        "line": 34,
        "fullcodeline": "for (idx_other = 0; idx_other < DB_COUNT; ++idx_other)"
    },
    {
        "line": 43,
        "fullcodeline": "if (idx_other == DB_COUNT)"
    },
    {
        "line": 53,
        "fullcodeline": "for (i = idx_other + 1; i < DB_COUNT; ++i)"
    },
    {
        "line": 65,
        "fullcodeline": "p = eap->arg + STRLEN(eap->arg);"
    },
    {
        "line": 78,
        "fullcodeline": "buf = buflist_findnr(i);"
    },
    {
        "line": 86,
        "fullcodeline": "idx_other = diff_buf_idx(buf);"
    },
    {
        "line": 117,
        "fullcodeline": "idx_from = idx_cur;"
    },
    {
        "line": 118,
        "fullcodeline": "idx_to = idx_other;"
    },
    {
        "line": 122,
        "fullcodeline": "aucmd_prepbuf(&aco, curtab->tp_diffbuf[idx_other]);"
    },
    {
        "line": 131,
        "fullcodeline": "if (diff_buf_idx(curbuf) != idx_to)"
    },
    {
        "line": 141,
        "fullcodeline": "if (dp->df_lnum[idx_cur] > eap->line2 + off)"
    },
    {
        "line": 287,
        "fullcodeline": "if (dfree == NULL)"
    },
    {
        "line": 322,
        "fullcodeline": "diff_redraw(FALSE);"
    },
    {
        "line": 323,
        "fullcodeline": "apply_autocmds(EVENT_DIFFUPDATED, NULL, NULL, FALSE, curbuf);"
    },
    {
        "line": 67,
        "fullcodeline": "--p;"
    },
    {
        "line": 68,
        "fullcodeline": "for (i = 0; vim_isdigit(eap->arg[i]) && eap->arg + i < p; ++i)"
    },
    {
        "line": 70,
        "fullcodeline": "if (eap->arg + i == p)\t    // digits only"
    },
    {
        "line": 79,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 84,
        "fullcodeline": "if (buf == curbuf)"
    },
    {
        "line": 87,
        "fullcodeline": "if (idx_other == DB_COUNT)"
    },
    {
        "line": 101,
        "fullcodeline": "if (eap->cmdidx == CMD_diffget"
    },
    {
        "line": 104,
        "fullcodeline": "&& (eap->line1 == 1 || diff_check(curwin, eap->line1 - 1) == 0))"
    },
    {
        "line": 105,
        "fullcodeline": "++eap->line2;"
    },
    {
        "line": 147,
        "fullcodeline": "if (dp->df_lnum[idx_cur] + dp->df_count[idx_cur] > eap->line1 + off"
    },
    {
        "line": 148,
        "fullcodeline": "&& u_save(lnum - 1, lnum + count) != FAIL)"
    },
    {
        "line": 151,
        "fullcodeline": "start_skip = 0;"
    },
    {
        "line": 152,
        "fullcodeline": "end_skip = 0;"
    },
    {
        "line": 197,
        "fullcodeline": "buf_empty = BUFEMPTY();"
    },
    {
        "line": 198,
        "fullcodeline": "added = 0;"
    },
    {
        "line": 229,
        "fullcodeline": "new_count = dp->df_count[idx_to] + added;"
    },
    {
        "line": 230,
        "fullcodeline": "dp->df_count[idx_to] = new_count;"
    },
    {
        "line": 289,
        "fullcodeline": "dprev = dp;"
    },
    {
        "line": 290,
        "fullcodeline": "dp = dp->df_next;"
    },
    {
        "line": 301,
        "fullcodeline": "u_sync(FALSE);"
    },
    {
        "line": 35,
        "fullcodeline": "if (curtab->tp_diffbuf[idx_other] != curbuf"
    },
    {
        "line": 36,
        "fullcodeline": "&& curtab->tp_diffbuf[idx_other] != NULL)"
    },
    {
        "line": 54,
        "fullcodeline": "if (curtab->tp_diffbuf[i] != curbuf"
    },
    {
        "line": 56,
        "fullcodeline": "&& (eap->cmdidx != CMD_diffput || curtab->tp_diffbuf[i]->b_p_ma))"
    },
    {
        "line": 66,
        "fullcodeline": "while (p > eap->arg && VIM_ISWHITE(p[-1]))"
    },
    {
        "line": 71,
        "fullcodeline": "i = atol((char *)eap->arg);"
    },
    {
        "line": 103,
        "fullcodeline": "&& diff_check(curwin, eap->line1) == 0"
    },
    {
        "line": 133,
        "fullcodeline": "emsg(_(e_buffer_changed_unexpectedly));"
    },
    {
        "line": 199,
        "fullcodeline": "for (i = 0; i < count; ++i)"
    },
    {
        "line": 206,
        "fullcodeline": "for (i = 0; i < dp->df_count[idx_from] - start_skip - end_skip; ++i)"
    },
    {
        "line": 254,
        "fullcodeline": "if (added != 0)"
    },
    {
        "line": 269,
        "fullcodeline": "if (dfree != NULL)"
    },
    {
        "line": 282,
        "fullcodeline": "if (idx_cur == idx_to)"
    },
    {
        "line": 38,
        "fullcodeline": "if (eap->cmdidx != CMD_diffput"
    },
    {
        "line": 55,
        "fullcodeline": "&& curtab->tp_diffbuf[i] != NULL"
    },
    {
        "line": 58,
        "fullcodeline": "emsg(_(e_more_than_two_buffers_in_diff_mode_dont_know_which_one_to_use));"
    },
    {
        "line": 74,
        "fullcodeline": "i = buflist_findpat(eap->arg, p, FALSE, TRUE, FALSE);"
    },
    {
        "line": 81,
        "fullcodeline": "semsg(_(e_cant_find_buffer_str), eap->arg);"
    },
    {
        "line": 89,
        "fullcodeline": "semsg(_(e_buffer_str_is_not_in_diff_mode), eap->arg);"
    },
    {
        "line": 102,
        "fullcodeline": "&& eap->line1 == curbuf->b_ml.ml_line_count"
    },
    {
        "line": 106,
        "fullcodeline": "else if (eap->line1 > 0)"
    },
    {
        "line": 156,
        "fullcodeline": "start_skip = eap->line1 + off - dp->df_lnum[idx_cur];"
    },
    {
        "line": 174,
        "fullcodeline": "end_skip = dp->df_lnum[idx_cur] + dp->df_count[idx_cur] - 1"
    },
    {
        "line": 202,
        "fullcodeline": "buf_empty = curbuf->b_ml.ml_line_count == 1;"
    },
    {
        "line": 203,
        "fullcodeline": "ml_delete(lnum);"
    },
    {
        "line": 204,
        "fullcodeline": "--added;"
    },
    {
        "line": 210,
        "fullcodeline": "nr = dp->df_lnum[idx_from] + start_skip + i;"
    },
    {
        "line": 213,
        "fullcodeline": "p = vim_strsave(ml_get_buf(curtab->tp_diffbuf[idx_from],"
    },
    {
        "line": 232,
        "fullcodeline": "if (start_skip == 0 && end_skip == 0)"
    },
    {
        "line": 256,
        "fullcodeline": "mark_adjust(lnum, lnum + count - 1, (long)MAXLNUM, (long)added);"
    },
    {
        "line": 275,
        "fullcodeline": "vim_free(dfree);"
    },
    {
        "line": 283,
        "fullcodeline": "off += added;"
    },
    {
        "line": 46,
        "fullcodeline": "emsg(_(e_no_other_buffer_in_diff_mode_is_modifiable));"
    },
    {
        "line": 75,
        "fullcodeline": "if (i < 0)"
    },
    {
        "line": 107,
        "fullcodeline": "--eap->line1;"
    },
    {
        "line": 157,
        "fullcodeline": "if (start_skip > 0)"
    },
    {
        "line": 176,
        "fullcodeline": "if (end_skip > 0)"
    },
    {
        "line": 211,
        "fullcodeline": "if (nr > curtab->tp_diffbuf[idx_from]->b_ml.ml_line_count)"
    },
    {
        "line": 215,
        "fullcodeline": "if (p != NULL)"
    },
    {
        "line": 236,
        "fullcodeline": "for (i = 0; i < DB_COUNT; ++i)"
    },
    {
        "line": 241,
        "fullcodeline": "if (i == DB_COUNT)"
    },
    {
        "line": 257,
        "fullcodeline": "if (curwin->w_cursor.lnum >= lnum)"
    },
    {
        "line": 279,
        "fullcodeline": "dp->df_count[idx_to] = new_count;"
    },
    {
        "line": 48,
        "fullcodeline": "emsg(_(e_no_other_buffer_in_diff_mode));"
    },
    {
        "line": 217,
        "fullcodeline": "ml_append(lnum + i - 1, p, 0, FALSE);"
    },
    {
        "line": 219,
        "fullcodeline": "++added;"
    },
    {
        "line": 244,
        "fullcodeline": "dfree = dp;"
    },
    {
        "line": 245,
        "fullcodeline": "dp = dp->df_next;"
    },
    {
        "line": 160,
        "fullcodeline": "if (start_skip > count)"
    },
    {
        "line": 172,
        "fullcodeline": "start_skip = 0;"
    },
    {
        "line": 179,
        "fullcodeline": "if (idx_cur == idx_from)\t// :diffput"
    },
    {
        "line": 194,
        "fullcodeline": "end_skip = 0;"
    },
    {
        "line": 237,
        "fullcodeline": "if (curtab->tp_diffbuf[i] != NULL && i != idx_from"
    },
    {
        "line": 239,
        "fullcodeline": "&& !diff_equal_entry(dp, idx_from, i))"
    },
    {
        "line": 246,
        "fullcodeline": "if (dprev == NULL)"
    },
    {
        "line": 261,
        "fullcodeline": "if (curwin->w_cursor.lnum >= lnum + count)"
    },
    {
        "line": 162,
        "fullcodeline": "lnum += count;"
    },
    {
        "line": 163,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 181,
        "fullcodeline": "i = dp->df_count[idx_cur] - start_skip - end_skip;"
    },
    {
        "line": 220,
        "fullcodeline": "if (buf_empty && curbuf->b_ml.ml_line_count == 2)"
    },
    {
        "line": 224,
        "fullcodeline": "buf_empty = FALSE;"
    },
    {
        "line": 238,
        "fullcodeline": "&& i != idx_to"
    },
    {
        "line": 262,
        "fullcodeline": "curwin->w_cursor.lnum += added;"
    },
    {
        "line": 167,
        "fullcodeline": "count -= start_skip;"
    },
    {
        "line": 168,
        "fullcodeline": "lnum += start_skip;"
    },
    {
        "line": 182,
        "fullcodeline": "if (count > i)"
    },
    {
        "line": 187,
        "fullcodeline": "count -= end_skip;"
    },
    {
        "line": 188,
        "fullcodeline": "end_skip = dp->df_count[idx_from] - start_skip - count;"
    },
    {
        "line": 249,
        "fullcodeline": "dprev->df_next = dp;"
    },
    {
        "line": 183,
        "fullcodeline": "count = i;"
    },
    {
        "line": 189,
        "fullcodeline": "if (end_skip < 0)"
    },
    {
        "line": 263,
        "fullcodeline": "else if (added < 0)"
    },
    {
        "line": 190,
        "fullcodeline": "end_skip = 0;"
    },
    {
        "line": 264,
        "fullcodeline": "curwin->w_cursor.lnum = lnum;"
    }
]