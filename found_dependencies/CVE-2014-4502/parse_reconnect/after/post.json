[
    {
        "line": 4,
        "fullcodeline": "char *url, *port, address[256];"
    },
    {
        "line": 6,
        "fullcodeline": "memset(address, 0, 255);"
    },
    {
        "line": 7,
        "fullcodeline": "url = (char *)json_string_value(json_array_get(val, 0));"
    },
    {
        "line": 31,
        "fullcodeline": "port = (char *)json_string_value(json_array_get(val, 1));"
    },
    {
        "line": 35,
        "fullcodeline": "snprintf(address, 254, \"%s:%s\", url, port);"
    },
    {
        "line": 40,
        "fullcodeline": "applog(LOG_WARNING, \"Stratum reconnect requested from pool %d to %s\", pool->pool_no, address);"
    },
    {
        "line": 42,
        "fullcodeline": "clear_pool_work(pool);"
    },
    {
        "line": 44,
        "fullcodeline": "mutex_lock(&pool->stratum_lock);"
    },
    {
        "line": 45,
        "fullcodeline": "__suspend_stratum(pool);"
    },
    {
        "line": 46,
        "fullcodeline": "tmp = pool->sockaddr_url;"
    },
    {
        "line": 47,
        "fullcodeline": "pool->sockaddr_url = sockaddr_url;"
    },
    {
        "line": 48,
        "fullcodeline": "pool->stratum_url = pool->sockaddr_url;"
    },
    {
        "line": 49,
        "fullcodeline": "free(tmp);"
    },
    {
        "line": 50,
        "fullcodeline": "tmp = pool->stratum_port;"
    },
    {
        "line": 51,
        "fullcodeline": "pool->stratum_port = stratum_port;"
    },
    {
        "line": 52,
        "fullcodeline": "free(tmp);"
    },
    {
        "line": 53,
        "fullcodeline": "mutex_unlock(&pool->stratum_lock);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!url)"
    },
    {
        "line": 32,
        "fullcodeline": "if (!port)"
    },
    {
        "line": 37,
        "fullcodeline": "if (!extract_sockaddr(address, &sockaddr_url, &stratum_port))"
    },
    {
        "line": 55,
        "fullcodeline": "if (!restart_stratum(pool)) {"
    },
    {
        "line": 9,
        "fullcodeline": "url = pool->sockaddr_url;"
    },
    {
        "line": 33,
        "fullcodeline": "port = pool->stratum_port;"
    },
    {
        "line": 56,
        "fullcodeline": "pool_failed(pool);"
    },
    {
        "line": 12,
        "fullcodeline": "dot_pool = strchr(pool->sockaddr_url, '.');"
    },
    {
        "line": 18,
        "fullcodeline": "dot_reconnect = strchr(url, '.');"
    },
    {
        "line": 13,
        "fullcodeline": "if (!dot_pool) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (!dot_reconnect) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (strcmp(dot_pool, dot_reconnect)) {"
    },
    {
        "line": 14,
        "fullcodeline": "applog(LOG_ERR, \"Denied stratum reconnect request for pool without domain '%s'\","
    },
    {
        "line": 20,
        "fullcodeline": "applog(LOG_ERR, \"Denied stratum reconnect request to url without domain '%s'\","
    },
    {
        "line": 25,
        "fullcodeline": "applog(LOG_ERR, \"Denied stratum reconnect request to non-matching domain url '%s'\","
    }
]