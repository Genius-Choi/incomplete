[
    {
        "line": 39,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 40,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 41,
        "fullcodeline": "assert(image != (Image *) NULL);"
    },
    {
        "line": 42,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 45,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 46,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 47,
        "fullcodeline": "status=OpenBlob(image_info,image,WriteBinaryBlobMode,exception);"
    },
    {
        "line": 50,
        "fullcodeline": "packet_size=(size_t) (image->depth > 8 ? 6 : 3);"
    },
    {
        "line": 53,
        "fullcodeline": "psd_info.version=1;"
    },
    {
        "line": 140,
        "fullcodeline": "length=28; /* 0x03EB */"
    },
    {
        "line": 141,
        "fullcodeline": "bim_profile=(StringInfo *) GetImageProfile(image,\"8bim\");"
    },
    {
        "line": 142,
        "fullcodeline": "icc_profile=GetImageProfile(image,\"icc\");"
    },
    {
        "line": 154,
        "fullcodeline": "WriteResolutionResourceBlock(image);"
    },
    {
        "line": 174,
        "fullcodeline": "layer_count=0;"
    },
    {
        "line": 175,
        "fullcodeline": "layer_info_size=2;"
    },
    {
        "line": 176,
        "fullcodeline": "base_image=GetNextImageInList(image);"
    },
    {
        "line": 179,
        "fullcodeline": "next_image=base_image;"
    },
    {
        "line": 43,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 48,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 51,
        "fullcodeline": "if (image->alpha_trait != UndefinedPixelTrait)"
    },
    {
        "line": 57,
        "fullcodeline": "(void) WriteBlob(image,4,(const unsigned char *) \"8BPS\");"
    },
    {
        "line": 58,
        "fullcodeline": "(void) WriteBlobMSBShort(image,psd_info.version);  /* version */"
    },
    {
        "line": 59,
        "fullcodeline": "for (i=1; i <= 6; i++)"
    },
    {
        "line": 61,
        "fullcodeline": "if (SetImageGray(image,exception) != MagickFalse)"
    },
    {
        "line": 76,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short) num_channels);"
    },
    {
        "line": 77,
        "fullcodeline": "(void) WriteBlobMSBLong(image,(unsigned int) image->rows);"
    },
    {
        "line": 78,
        "fullcodeline": "(void) WriteBlobMSBLong(image,(unsigned int) image->columns);"
    },
    {
        "line": 79,
        "fullcodeline": "if (IsImageGray(image) != MagickFalse)"
    },
    {
        "line": 143,
        "fullcodeline": "if (bim_profile != (StringInfo *) NULL)"
    },
    {
        "line": 151,
        "fullcodeline": "if (icc_profile != (const StringInfo *) NULL)"
    },
    {
        "line": 153,
        "fullcodeline": "(void) WriteBlobMSBLong(image,(unsigned int) length);"
    },
    {
        "line": 155,
        "fullcodeline": "if (bim_profile != (StringInfo *) NULL)"
    },
    {
        "line": 161,
        "fullcodeline": "if (icc_profile != (StringInfo *) NULL)"
    },
    {
        "line": 180,
        "fullcodeline": "while ( next_image != NULL )"
    },
    {
        "line": 210,
        "fullcodeline": "if (layer_count == 0)"
    },
    {
        "line": 341,
        "fullcodeline": "if (status != MagickFalse)"
    },
    {
        "line": 344,
        "fullcodeline": "(void) CloseBlob(image);"
    },
    {
        "line": 44,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 54,
        "fullcodeline": "if ((LocaleCompare(image_info->magick,\"PSB\") == 0) ||"
    },
    {
        "line": 55,
        "fullcodeline": "(image->columns > 30000) || (image->rows > 30000))"
    },
    {
        "line": 56,
        "fullcodeline": "psd_info.version=2;"
    },
    {
        "line": 60,
        "fullcodeline": "(void) WriteBlobByte(image, 0);  /* 6 bytes of reserved */"
    },
    {
        "line": 62,
        "fullcodeline": "num_channels=(image->alpha_trait != UndefinedPixelTrait ? 2UL : 1UL);"
    },
    {
        "line": 87,
        "fullcodeline": "monochrome=IsImageMonochrome(image) && (image->depth == 1) ?"
    },
    {
        "line": 114,
        "fullcodeline": "if ((IsImageGray(image) != MagickFalse) ||"
    },
    {
        "line": 115,
        "fullcodeline": "(image->storage_class == DirectClass) || (image->colors > 256))"
    },
    {
        "line": 145,
        "fullcodeline": "bim_profile=CloneStringInfo(bim_profile);"
    },
    {
        "line": 148,
        "fullcodeline": "RemoveResolutionFromResourceBlock(bim_profile);"
    },
    {
        "line": 149,
        "fullcodeline": "length+=PSDQuantum(GetStringInfoLength(bim_profile));"
    },
    {
        "line": 152,
        "fullcodeline": "length+=PSDQuantum(GetStringInfoLength(icc_profile))+12;"
    },
    {
        "line": 177,
        "fullcodeline": "if ((image->alpha_trait != UndefinedPixelTrait) && (base_image == (Image *) NULL))"
    },
    {
        "line": 178,
        "fullcodeline": "base_image=image;"
    },
    {
        "line": 182,
        "fullcodeline": "packet_size=next_image->depth > 8 ? 2UL : 1UL;"
    },
    {
        "line": 193,
        "fullcodeline": "channelLength=(size_t) (next_image->columns*next_image->rows*packet_size+2);"
    },
    {
        "line": 194,
        "fullcodeline": "layer_info_size+=(size_t) (4*4+2+num_channels*6+(psd_info.version == 1 ? 8 :"
    },
    {
        "line": 196,
        "fullcodeline": "property=(const char *) GetImageProperty(next_image,\"label\",exception);"
    },
    {
        "line": 207,
        "fullcodeline": "layer_count++;"
    },
    {
        "line": 208,
        "fullcodeline": "next_image=GetNextImageInList(next_image);"
    },
    {
        "line": 342,
        "fullcodeline": "status=WriteImageChannels(&psd_info,image_info,image,image,MagickFalse,"
    },
    {
        "line": 89,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short)"
    },
    {
        "line": 91,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short)"
    },
    {
        "line": 116,
        "fullcodeline": "(void) WriteBlobMSBLong(image,0);"
    },
    {
        "line": 146,
        "fullcodeline": "if (icc_profile != (StringInfo *) NULL)"
    },
    {
        "line": 157,
        "fullcodeline": "(void) WriteBlob(image,GetStringInfoLength(bim_profile),"
    },
    {
        "line": 159,
        "fullcodeline": "bim_profile=DestroyStringInfo(bim_profile);"
    },
    {
        "line": 163,
        "fullcodeline": "(void) WriteBlob(image,4,(const unsigned char *) \"8BIM\");"
    },
    {
        "line": 164,
        "fullcodeline": "(void) WriteBlobMSBShort(image,0x0000040F);"
    },
    {
        "line": 165,
        "fullcodeline": "(void) WriteBlobMSBShort(image,0);"
    },
    {
        "line": 166,
        "fullcodeline": "(void) WriteBlobMSBLong(image,(unsigned int) GetStringInfoLength("
    },
    {
        "line": 168,
        "fullcodeline": "(void) WriteBlob(image,GetStringInfoLength(icc_profile),"
    },
    {
        "line": 183,
        "fullcodeline": "if (IsImageGray(next_image) != MagickFalse)"
    },
    {
        "line": 197,
        "fullcodeline": "if (property == (const char *) NULL)"
    },
    {
        "line": 211,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,0);"
    },
    {
        "line": 228,
        "fullcodeline": "layer_count=1;"
    },
    {
        "line": 229,
        "fullcodeline": "compression=base_image->compression;"
    },
    {
        "line": 328,
        "fullcodeline": "next_image=base_image;"
    },
    {
        "line": 52,
        "fullcodeline": "packet_size+=image->depth > 8 ? 2 : 1;"
    },
    {
        "line": 96,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short) (image->storage_class =="
    },
    {
        "line": 122,
        "fullcodeline": "(void) WriteBlobMSBLong(image,768);"
    },
    {
        "line": 123,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 125,
        "fullcodeline": "for ( ; i < 256; i++)"
    },
    {
        "line": 127,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 130,
        "fullcodeline": "for ( ; i < 256; i++)"
    },
    {
        "line": 132,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 134,
        "fullcodeline": "for ( ; i < 256; i++)"
    },
    {
        "line": 147,
        "fullcodeline": "RemoveICCProfileFromResourceBlock(bim_profile);"
    },
    {
        "line": 158,
        "fullcodeline": "GetStringInfoDatum(bim_profile));"
    },
    {
        "line": 169,
        "fullcodeline": "GetStringInfoDatum(icc_profile));"
    },
    {
        "line": 171,
        "fullcodeline": "PSDQuantum(GetStringInfoLength(icc_profile)))"
    },
    {
        "line": 184,
        "fullcodeline": "num_channels=next_image->alpha_trait != UndefinedPixelTrait ? 2UL : 1UL;"
    },
    {
        "line": 198,
        "fullcodeline": "layer_info_size+=16;"
    },
    {
        "line": 217,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,layer_info_size+"
    },
    {
        "line": 223,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,rounded_layer_info_size);"
    },
    {
        "line": 224,
        "fullcodeline": "if (image->alpha_trait != UndefinedPixelTrait)"
    },
    {
        "line": 230,
        "fullcodeline": "for (next_image=base_image; next_image != NULL; )"
    },
    {
        "line": 329,
        "fullcodeline": "while (next_image != NULL)"
    },
    {
        "line": 335,
        "fullcodeline": "(void) WriteBlobMSBLong(image,0);  /* user mask data */"
    },
    {
        "line": 64,
        "fullcodeline": "if ((image_info->type != TrueColorType) && (image_info->type !="
    },
    {
        "line": 65,
        "fullcodeline": "TrueColorAlphaType) && (image->storage_class == PseudoClass))"
    },
    {
        "line": 66,
        "fullcodeline": "num_channels=(image->alpha_trait != UndefinedPixelTrait ? 2UL : 1UL);"
    },
    {
        "line": 92,
        "fullcodeline": "(monochrome != MagickFalse ? BitmapMode : GrayscaleMode));"
    },
    {
        "line": 99,
        "fullcodeline": "if (((image_info->colorspace != UndefinedColorspace) ||"
    },
    {
        "line": 101,
        "fullcodeline": "(image_info->colorspace != CMYKColorspace))"
    },
    {
        "line": 124,
        "fullcodeline": "(void) WriteBlobByte(image,ScaleQuantumToChar(image->colormap[i].red));"
    },
    {
        "line": 126,
        "fullcodeline": "(void) WriteBlobByte(image,0);"
    },
    {
        "line": 128,
        "fullcodeline": "(void) WriteBlobByte(image,ScaleQuantumToChar("
    },
    {
        "line": 131,
        "fullcodeline": "(void) WriteBlobByte(image,0);"
    },
    {
        "line": 133,
        "fullcodeline": "(void) WriteBlobByte(image,ScaleQuantumToChar(image->colormap[i].blue));"
    },
    {
        "line": 135,
        "fullcodeline": "(void) WriteBlobByte(image,0);"
    },
    {
        "line": 170,
        "fullcodeline": "if ((MagickOffsetType) GetStringInfoLength(icc_profile) !="
    },
    {
        "line": 172,
        "fullcodeline": "(void) WriteBlobByte(image,0);"
    },
    {
        "line": 195,
        "fullcodeline": "16)+4*1+4+num_channels*channelLength);"
    },
    {
        "line": 204,
        "fullcodeline": "layer_length=strlen(property);"
    },
    {
        "line": 205,
        "fullcodeline": "layer_info_size+=8+layer_length+(4-(layer_length % 4));"
    },
    {
        "line": 219,
        "fullcodeline": "if ((layer_info_size/2) != ((layer_info_size+1)/2))"
    },
    {
        "line": 220,
        "fullcodeline": "rounded_layer_info_size=layer_info_size+1;"
    },
    {
        "line": 232,
        "fullcodeline": "next_image->compression=NoCompression;"
    },
    {
        "line": 239,
        "fullcodeline": "packet_size=next_image->depth > 8 ? 2UL : 1UL;"
    },
    {
        "line": 240,
        "fullcodeline": "channel_size=(unsigned int) ((packet_size*next_image->rows*"
    },
    {
        "line": 298,
        "fullcodeline": "property=(const char *) GetImageProperty(next_image,\"label\",exception);"
    },
    {
        "line": 323,
        "fullcodeline": "next_image=GetNextImageInList(next_image);"
    },
    {
        "line": 331,
        "fullcodeline": "status=WriteImageChannels(&psd_info,image_info,image,next_image,"
    },
    {
        "line": 333,
        "fullcodeline": "next_image=GetNextImageInList(next_image);"
    },
    {
        "line": 90,
        "fullcodeline": "(monochrome != MagickFalse ? 1 : image->depth > 8 ? 16 : 8));"
    },
    {
        "line": 100,
        "fullcodeline": "(image->colorspace != CMYKColorspace)) &&"
    },
    {
        "line": 103,
        "fullcodeline": "(void) TransformImageColorspace(image,sRGBColorspace,exception);"
    },
    {
        "line": 104,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short)"
    },
    {
        "line": 186,
        "fullcodeline": "if (next_image->storage_class == PseudoClass)"
    },
    {
        "line": 222,
        "fullcodeline": "rounded_layer_info_size=layer_info_size;"
    },
    {
        "line": 225,
        "fullcodeline": "(void) WriteBlobMSBShort(image,-(unsigned short) layer_count);"
    },
    {
        "line": 233,
        "fullcodeline": "(void) WriteBlobMSBLong(image,(unsigned int) next_image->page.y);"
    },
    {
        "line": 234,
        "fullcodeline": "(void) WriteBlobMSBLong(image,(unsigned int) next_image->page.x);"
    },
    {
        "line": 235,
        "fullcodeline": "(void) WriteBlobMSBLong(image,(unsigned int) (next_image->page.y+"
    },
    {
        "line": 237,
        "fullcodeline": "(void) WriteBlobMSBLong(image,(unsigned int) (next_image->page.x+"
    },
    {
        "line": 290,
        "fullcodeline": "(void) WriteBlob(image,4,(const unsigned char *) \"8BIM\");"
    },
    {
        "line": 291,
        "fullcodeline": "(void) WriteBlob(image,4,(const unsigned char *)"
    },
    {
        "line": 293,
        "fullcodeline": "(void) WriteBlobByte(image,255); /* layer opacity */"
    },
    {
        "line": 294,
        "fullcodeline": "(void) WriteBlobByte(image,0);"
    },
    {
        "line": 295,
        "fullcodeline": "(void) WriteBlobByte(image,next_image->compose==NoCompositeOp ?"
    },
    {
        "line": 297,
        "fullcodeline": "(void) WriteBlobByte(image,0);"
    },
    {
        "line": 299,
        "fullcodeline": "if (property == (const char *) NULL)"
    },
    {
        "line": 69,
        "fullcodeline": "if (image->storage_class == PseudoClass)"
    },
    {
        "line": 71,
        "fullcodeline": "if (image->colorspace != CMYKColorspace)"
    },
    {
        "line": 109,
        "fullcodeline": "if (image->colorspace != CMYKColorspace)"
    },
    {
        "line": 111,
        "fullcodeline": "(void) WriteBlobMSBShort(image,CMYKMode);"
    },
    {
        "line": 187,
        "fullcodeline": "num_channels=next_image->alpha_trait != UndefinedPixelTrait ? 2UL : 1UL;"
    },
    {
        "line": 218,
        "fullcodeline": "(psd_info.version == 1 ? 8 : 16));"
    },
    {
        "line": 227,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short) layer_count);"
    },
    {
        "line": 242,
        "fullcodeline": "if ((IsImageGray(next_image) != MagickFalse) ||"
    },
    {
        "line": 243,
        "fullcodeline": "(next_image->storage_class == PseudoClass))"
    },
    {
        "line": 302,
        "fullcodeline": "layer_name[MagickPathExtent];"
    },
    {
        "line": 309,
        "fullcodeline": "WritePascalString(image,layer_name,4);"
    },
    {
        "line": 72,
        "fullcodeline": "num_channels=(image->alpha_trait != UndefinedPixelTrait ? 4UL : 3UL);"
    },
    {
        "line": 97,
        "fullcodeline": "PseudoClass ? 8 : image->depth > 8 ? 16 : 8));"
    },
    {
        "line": 105,
        "fullcodeline": "(image->storage_class == PseudoClass ? IndexedMode : RGBMode));"
    },
    {
        "line": 245,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short)"
    },
    {
        "line": 247,
        "fullcodeline": "(void) WriteBlobMSBShort(image,0);"
    },
    {
        "line": 248,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 249,
        "fullcodeline": "if (next_image->alpha_trait != UndefinedPixelTrait)"
    },
    {
        "line": 292,
        "fullcodeline": "CompositeOperatorToPSDBlendMode(next_image->compose));"
    },
    {
        "line": 296,
        "fullcodeline": "1 << 0x02 : 1); /* layer properties - visible, etc. */"
    },
    {
        "line": 304,
        "fullcodeline": "(void) WriteBlobMSBLong(image,16);"
    },
    {
        "line": 305,
        "fullcodeline": "(void) WriteBlobMSBLong(image,0);"
    },
    {
        "line": 306,
        "fullcodeline": "(void) WriteBlobMSBLong(image,0);"
    },
    {
        "line": 307,
        "fullcodeline": "(void) FormatLocaleString(layer_name,MagickPathExtent,\"L%04ld\",(long)"
    },
    {
        "line": 316,
        "fullcodeline": "label_length=strlen(property);"
    },
    {
        "line": 321,
        "fullcodeline": "WritePascalString(image,property,4);"
    },
    {
        "line": 70,
        "fullcodeline": "(void) SetImageStorageClass(image,DirectClass,exception);"
    },
    {
        "line": 74,
        "fullcodeline": "num_channels=(image->alpha_trait != UndefinedPixelTrait ? 5UL : 4UL);"
    },
    {
        "line": 110,
        "fullcodeline": "(void) TransformImageColorspace(image,CMYKColorspace,exception);"
    },
    {
        "line": 189,
        "fullcodeline": "if (next_image->colorspace != CMYKColorspace)"
    },
    {
        "line": 256,
        "fullcodeline": "if (next_image->colorspace != CMYKColorspace)"
    },
    {
        "line": 317,
        "fullcodeline": "(void) WriteBlobMSBLong(image,(unsigned int) (label_length+(4-"
    },
    {
        "line": 319,
        "fullcodeline": "(void) WriteBlobMSBLong(image,0);"
    },
    {
        "line": 320,
        "fullcodeline": "(void) WriteBlobMSBLong(image,0);"
    },
    {
        "line": 190,
        "fullcodeline": "num_channels=next_image->alpha_trait != UndefinedPixelTrait ? 4UL : 3UL;"
    },
    {
        "line": 251,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short) -1);"
    },
    {
        "line": 252,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 308,
        "fullcodeline": "layer_count++);"
    },
    {
        "line": 192,
        "fullcodeline": "num_channels=next_image->alpha_trait != UndefinedPixelTrait ? 5UL : 4UL;"
    },
    {
        "line": 246,
        "fullcodeline": "(next_image->alpha_trait != UndefinedPixelTrait ? 2 : 1));"
    },
    {
        "line": 258,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short)"
    },
    {
        "line": 260,
        "fullcodeline": "(void) WriteBlobMSBShort(image,0);"
    },
    {
        "line": 261,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 262,
        "fullcodeline": "(void) WriteBlobMSBShort(image,1);"
    },
    {
        "line": 263,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 264,
        "fullcodeline": "(void) WriteBlobMSBShort(image,2);"
    },
    {
        "line": 265,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 266,
        "fullcodeline": "if (next_image->alpha_trait != UndefinedPixelTrait)"
    },
    {
        "line": 274,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short)"
    },
    {
        "line": 276,
        "fullcodeline": "(void) WriteBlobMSBShort(image,0);"
    },
    {
        "line": 277,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 278,
        "fullcodeline": "(void) WriteBlobMSBShort(image,1);"
    },
    {
        "line": 279,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 280,
        "fullcodeline": "(void) WriteBlobMSBShort(image,2);"
    },
    {
        "line": 281,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 282,
        "fullcodeline": "(void) WriteBlobMSBShort(image,3);"
    },
    {
        "line": 283,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 268,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short) -1);"
    },
    {
        "line": 269,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 259,
        "fullcodeline": "(next_image->alpha_trait != UndefinedPixelTrait ? 4 : 3));"
    },
    {
        "line": 286,
        "fullcodeline": "(void) WriteBlobMSBShort(image,(unsigned short) -1);"
    },
    {
        "line": 287,
        "fullcodeline": "(void) SetPSDSize(&psd_info,image,channel_size);"
    },
    {
        "line": 318,
        "fullcodeline": "(label_length % 4))+8));"
    }
]