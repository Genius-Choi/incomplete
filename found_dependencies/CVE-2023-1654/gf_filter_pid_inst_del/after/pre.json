[
    {
        "line": 3,
        "fullcodeline": "assert(pidinst);"
    },
    {
        "line": 4,
        "fullcodeline": "gf_filter_pid_inst_reset(pidinst);"
    },
    {
        "line": 6,
        "fullcodeline": "gf_fq_del(pidinst->packets, (gf_destruct_fun) pcki_del);"
    },
    {
        "line": 7,
        "fullcodeline": "gf_mx_del(pidinst->pck_mx);"
    },
    {
        "line": 8,
        "fullcodeline": "gf_list_del(pidinst->pck_reassembly);"
    },
    {
        "line": 23,
        "fullcodeline": "gf_free(pidinst);"
    },
    {
        "line": 10,
        "fullcodeline": "assert(pidinst->props->reference_count);"
    },
    {
        "line": 11,
        "fullcodeline": "gf_mx_p(pidinst->pid->filter->tasks_mx);"
    },
    {
        "line": 21,
        "fullcodeline": "gf_mx_v(pidinst->pid->filter->tasks_mx);"
    },
    {
        "line": 14,
        "fullcodeline": "if (gf_list_find(pidinst->pid->properties, pidinst->props)>=0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (safe_int_dec(&pidinst->props->reference_count) == 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "gf_list_del_item(pidinst->pid->properties, pidinst->props);"
    },
    {
        "line": 18,
        "fullcodeline": "gf_props_del(pidinst->props);"
    }
]