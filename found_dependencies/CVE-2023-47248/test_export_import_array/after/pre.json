[
    {
        "line": 2,
        "fullcodeline": "c_schema = ffi.new(\"struct ArrowSchema*\")"
    },
    {
        "line": 3,
        "fullcodeline": "ptr_schema = int(ffi.cast(\"uintptr_t\", c_schema))"
    },
    {
        "line": 4,
        "fullcodeline": "c_array = ffi.new(\"struct ArrowArray*\")"
    },
    {
        "line": 5,
        "fullcodeline": "ptr_array = int(ffi.cast(\"uintptr_t\", c_array))"
    },
    {
        "line": 7,
        "fullcodeline": "gc.collect()  # Make sure no Arrow data dangles in a ref cycle"
    },
    {
        "line": 8,
        "fullcodeline": "old_allocated = pa.total_allocated_bytes()"
    },
    {
        "line": 11,
        "fullcodeline": "typ = pa.list_(pa.int32())"
    },
    {
        "line": 12,
        "fullcodeline": "arr = pa.array([[1], [2, 42]], type=typ)"
    },
    {
        "line": 13,
        "fullcodeline": "py_value = arr.to_pylist()"
    },
    {
        "line": 14,
        "fullcodeline": "arr._export_to_c(ptr_array)"
    },
    {
        "line": 18,
        "fullcodeline": "arr_new = pa.Array._import_from_c(ptr_array, typ)"
    },
    {
        "line": 22,
        "fullcodeline": "del arr_new, typ"
    },
    {
        "line": 29,
        "fullcodeline": "arr = pa.array([[1], [2, 42]], type=pa.list_(pa.int32()))"
    },
    {
        "line": 30,
        "fullcodeline": "py_value = arr.to_pylist()"
    },
    {
        "line": 31,
        "fullcodeline": "arr._export_to_c(ptr_array, ptr_schema)"
    },
    {
        "line": 33,
        "fullcodeline": "del arr"
    },
    {
        "line": 34,
        "fullcodeline": "arr_new = pa.Array._import_from_c(ptr_array, ptr_schema)"
    },
    {
        "line": 35,
        "fullcodeline": "assert arr_new.to_pylist() == py_value"
    },
    {
        "line": 36,
        "fullcodeline": "assert arr_new.type == pa.list_(pa.int32())"
    },
    {
        "line": 37,
        "fullcodeline": "assert pa.total_allocated_bytes() > old_allocated"
    },
    {
        "line": 38,
        "fullcodeline": "del arr_new"
    },
    {
        "line": 39,
        "fullcodeline": "assert pa.total_allocated_bytes() == old_allocated"
    },
    {
        "line": 15,
        "fullcodeline": "assert pa.total_allocated_bytes() > old_allocated"
    },
    {
        "line": 19,
        "fullcodeline": "assert arr_new.to_pylist() == py_value"
    },
    {
        "line": 20,
        "fullcodeline": "assert arr_new.type == pa.list_(pa.int32())"
    },
    {
        "line": 21,
        "fullcodeline": "assert pa.total_allocated_bytes() > old_allocated"
    },
    {
        "line": 23,
        "fullcodeline": "assert pa.total_allocated_bytes() == old_allocated"
    },
    {
        "line": 25,
        "fullcodeline": "with assert_array_released:"
    },
    {
        "line": 41,
        "fullcodeline": "with assert_schema_released:"
    },
    {
        "line": 26,
        "fullcodeline": "pa.Array._import_from_c(ptr_array, pa.list_(pa.int32()))"
    },
    {
        "line": 42,
        "fullcodeline": "pa.Array._import_from_c(ptr_array, ptr_schema)"
    }
]