[
    {
        "line": 2,
        "fullcodeline": "ty = UuidType()"
    },
    {
        "line": 3,
        "fullcodeline": "expected = uuid4()"
    },
    {
        "line": 4,
        "fullcodeline": "scalar = pa.ExtensionScalar.from_storage(ty, expected.bytes)"
    },
    {
        "line": 5,
        "fullcodeline": "assert scalar.as_py() == expected"
    },
    {
        "line": 8,
        "fullcodeline": "uuids = [uuid4() for _ in range(3)]"
    },
    {
        "line": 9,
        "fullcodeline": "storage = pa.array([uuid.bytes for uuid in uuids], type=pa.binary(16))"
    },
    {
        "line": 10,
        "fullcodeline": "arr = pa.ExtensionArray.from_storage(ty, storage)"
    },
    {
        "line": 21,
        "fullcodeline": "data = ["
    },
    {
        "line": 25,
        "fullcodeline": "carr = pa.chunked_array(data)"
    },
    {
        "line": 13,
        "fullcodeline": "for i, expected in enumerate(uuids):"
    },
    {
        "line": 17,
        "fullcodeline": "for result, expected in zip(arr, uuids):"
    },
    {
        "line": 26,
        "fullcodeline": "for i, expected in enumerate(uuids + uuids):"
    },
    {
        "line": 29,
        "fullcodeline": "for result, expected in zip(carr, uuids + uuids):"
    },
    {
        "line": 14,
        "fullcodeline": "assert arr[i].as_py() == expected"
    },
    {
        "line": 18,
        "fullcodeline": "assert result.as_py() == expected"
    },
    {
        "line": 22,
        "fullcodeline": "pa.ExtensionArray.from_storage(ty, storage),"
    },
    {
        "line": 23,
        "fullcodeline": "pa.ExtensionArray.from_storage(ty, storage)"
    },
    {
        "line": 27,
        "fullcodeline": "assert carr[i].as_py() == expected"
    },
    {
        "line": 30,
        "fullcodeline": "assert result.as_py() == expected"
    }
]