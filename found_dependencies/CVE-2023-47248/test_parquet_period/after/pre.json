[
    {
        "line": 4,
        "fullcodeline": "storage = pa.array([1, 2, 3, 4], pa.int64())"
    },
    {
        "line": 5,
        "fullcodeline": "arr = pa.ExtensionArray.from_storage(period_type, storage)"
    },
    {
        "line": 6,
        "fullcodeline": "table = pa.table([arr], names=[\"ext\"])"
    },
    {
        "line": 8,
        "fullcodeline": "import pyarrow.parquet as pq"
    },
    {
        "line": 10,
        "fullcodeline": "filename = tmpdir / 'period_extension_type.parquet'"
    },
    {
        "line": 11,
        "fullcodeline": "pq.write_table(table, filename)"
    },
    {
        "line": 15,
        "fullcodeline": "meta = pq.read_metadata(filename)"
    },
    {
        "line": 16,
        "fullcodeline": "assert meta.schema.column(0).physical_type == \"INT64\""
    },
    {
        "line": 17,
        "fullcodeline": "assert b\"ARROW:schema\" in meta.metadata"
    },
    {
        "line": 19,
        "fullcodeline": "import base64"
    },
    {
        "line": 20,
        "fullcodeline": "decoded_schema = base64.b64decode(meta.metadata[b\"ARROW:schema\"])"
    },
    {
        "line": 21,
        "fullcodeline": "schema = pa.ipc.read_schema(pa.BufferReader(decoded_schema))"
    },
    {
        "line": 24,
        "fullcodeline": "assert schema.field(\"ext\").metadata == {}"
    },
    {
        "line": 27,
        "fullcodeline": "result = pq.read_table(filename)"
    },
    {
        "line": 28,
        "fullcodeline": "result.validate(full=True)"
    },
    {
        "line": 29,
        "fullcodeline": "assert result.schema.field(\"ext\").type == period_type"
    },
    {
        "line": 30,
        "fullcodeline": "assert result.schema.field(\"ext\").metadata == {}"
    },
    {
        "line": 32,
        "fullcodeline": "result_array = result.column(\"ext\").chunk(0)"
    },
    {
        "line": 33,
        "fullcodeline": "assert type(result_array) is period_class"
    },
    {
        "line": 36,
        "fullcodeline": "pa.unregister_extension_type(period_type.extension_name)"
    },
    {
        "line": 37,
        "fullcodeline": "result = pq.read_table(filename)"
    },
    {
        "line": 38,
        "fullcodeline": "result.validate(full=True)"
    },
    {
        "line": 39,
        "fullcodeline": "assert result.schema.field(\"ext\").type == pa.int64()"
    },
    {
        "line": 41,
        "fullcodeline": "assert result.schema.field(\"ext\").metadata == {"
    },
    {
        "line": 3,
        "fullcodeline": "period_type, period_class = registered_period_type"
    }
]