[
    {
        "line": 2,
        "fullcodeline": "array = pa.array([1, 2, 3], pa.int8())"
    },
    {
        "line": 4,
        "fullcodeline": "tiny_int_arr = array.cast(TinyIntType())"
    },
    {
        "line": 5,
        "fullcodeline": "assert tiny_int_arr.type == TinyIntType()"
    },
    {
        "line": 8,
        "fullcodeline": "msg = (\"Casting from 'extension<.*?<TinyIntType>>' \""
    },
    {
        "line": 19,
        "fullcodeline": "array = pa.array([b'1' * 16, b'2' * 16], pa.binary(16)).cast(UuidType())"
    },
    {
        "line": 20,
        "fullcodeline": "out = array.cast(UuidType())"
    },
    {
        "line": 21,
        "fullcodeline": "assert out.type == UuidType()"
    },
    {
        "line": 14,
        "fullcodeline": "with pytest.raises(TypeError, match=msg):"
    },
    {
        "line": 16,
        "fullcodeline": "tiny_int_arr.cast(pa.int64()).cast(IntegerType())"
    },
    {
        "line": 25,
        "fullcodeline": "with pytest.raises(TypeError, match='Casting from *'):"
    },
    {
        "line": 15,
        "fullcodeline": "tiny_int_arr.cast(IntegerType())"
    },
    {
        "line": 26,
        "fullcodeline": "array.cast(UuidType2())"
    }
]