[
    {
        "line": 2,
        "fullcodeline": "import pandas.core.internals as _int"
    },
    {
        "line": 6,
        "fullcodeline": "df = pd.DataFrame("
    },
    {
        "line": 9,
        "fullcodeline": "table = pa.table(df)"
    },
    {
        "line": 13,
        "fullcodeline": "result = table.to_pandas()"
    },
    {
        "line": 14,
        "fullcodeline": "assert not isinstance(_get_mgr(result).blocks[0], _int.ExtensionBlock)"
    },
    {
        "line": 15,
        "fullcodeline": "assert _get_mgr(result).blocks[0].values.dtype == np.dtype(\"int64\")"
    },
    {
        "line": 16,
        "fullcodeline": "assert isinstance(_get_mgr(result).blocks[1], _int.ExtensionBlock)"
    },
    {
        "line": 17,
        "fullcodeline": "tm.assert_frame_equal(result, df)"
    },
    {
        "line": 20,
        "fullcodeline": "df2 = pd.DataFrame({'a': pd.array([1, 2, None], dtype='Int64')})"
    },
    {
        "line": 21,
        "fullcodeline": "table2 = pa.table(df2)"
    },
    {
        "line": 22,
        "fullcodeline": "result = table2.to_pandas()"
    },
    {
        "line": 23,
        "fullcodeline": "assert isinstance(_get_mgr(result).blocks[0], _int.ExtensionBlock)"
    },
    {
        "line": 24,
        "fullcodeline": "tm.assert_frame_equal(result, df2)"
    },
    {
        "line": 34,
        "fullcodeline": "result = table.to_pandas()"
    },
    {
        "line": 35,
        "fullcodeline": "assert len(_get_mgr(result).blocks) == 1"
    },
    {
        "line": 36,
        "fullcodeline": "assert not isinstance(_get_mgr(result).blocks[0], _int.ExtensionBlock)"
    },
    {
        "line": 27,
        "fullcodeline": "if Version(pd.__version__) < Version(\"1.3.0.dev\"):"
    },
    {
        "line": 28,
        "fullcodeline": "monkeypatch.delattr("
    },
    {
        "line": 31,
        "fullcodeline": "monkeypatch.delattr("
    },
    {
        "line": 7,
        "fullcodeline": "{'a': [1, 2, 3], 'b': pd.array([2, 3, 4], dtype='Int64'),"
    },
    {
        "line": 8,
        "fullcodeline": "'c': [4, 5, 6]})"
    }
]