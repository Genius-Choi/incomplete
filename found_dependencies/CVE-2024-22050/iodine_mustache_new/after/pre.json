[
    {
        "line": 2,
        "fullcodeline": "VALUE filename = Qnil, template = Qnil;"
    },
    {
        "line": 24,
        "fullcodeline": "mustache_s **m = NULL;"
    },
    {
        "line": 3,
        "fullcodeline": "if (argc == 1 && RB_TYPE_P(argv[0], T_HASH)) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (filename == Qnil && template == Qnil)"
    },
    {
        "line": 19,
        "fullcodeline": "if (template != Qnil)"
    },
    {
        "line": 21,
        "fullcodeline": "if (filename != Qnil)"
    },
    {
        "line": 26,
        "fullcodeline": "if (!m) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (!*m)"
    },
    {
        "line": 5,
        "fullcodeline": "filename = rb_hash_aref(argv[0], filename_id);"
    },
    {
        "line": 6,
        "fullcodeline": "template = rb_hash_aref(argv[0], template_id);"
    },
    {
        "line": 17,
        "fullcodeline": "rb_raise(rb_eArgError, \"need either template contents or file name.\");"
    },
    {
        "line": 20,
        "fullcodeline": "Check_Type(template, T_STRING);"
    },
    {
        "line": 22,
        "fullcodeline": "Check_Type(filename, T_STRING);"
    },
    {
        "line": 27,
        "fullcodeline": "rb_raise(rb_eRuntimeError, \"Iodine::Mustache allocation error.\");"
    },
    {
        "line": 11,
        "fullcodeline": "filename = argv[0];"
    },
    {
        "line": 9,
        "fullcodeline": "if (argc == 0 || argc > 2)"
    },
    {
        "line": 12,
        "fullcodeline": "if (argc > 1) {"
    },
    {
        "line": 10,
        "fullcodeline": "rb_raise(rb_eArgError, \"expecting 1..2 arguments or named arguments.\");"
    },
    {
        "line": 13,
        "fullcodeline": "template = argv[1];"
    }
]