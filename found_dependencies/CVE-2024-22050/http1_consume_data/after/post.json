[
    {
        "line": 5,
        "fullcodeline": "ssize_t i = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t org_len = p->buf_len;"
    },
    {
        "line": 7,
        "fullcodeline": "int pipeline_limit = 8;"
    },
    {
        "line": 47,
        "fullcodeline": "p->stop |= 4;"
    },
    {
        "line": 48,
        "fullcodeline": "fio_suspend(uuid);"
    },
    {
        "line": 49,
        "fullcodeline": "FIO_LOG_DEBUG(\"(HTTP/1,1) throttling client at %.*s\","
    },
    {
        "line": 2,
        "fullcodeline": "if (fio_pending(uuid) > 4) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (!p->buf_len)"
    },
    {
        "line": 24,
        "fullcodeline": "} while (i && p->buf_len && pipeline_limit && !p->stop);"
    },
    {
        "line": 26,
        "fullcodeline": "if (p->buf_len && org_len != p->buf_len) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (p->buf_len == HTTP_MAX_HEADER_LENGTH) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (!pipeline_limit) {"
    },
    {
        "line": 22,
        "fullcodeline": "p->buf_len -= i;"
    },
    {
        "line": 23,
        "fullcodeline": "--pipeline_limit;"
    },
    {
        "line": 27,
        "fullcodeline": "memmove(p->buf, p->buf + (org_len - p->buf_len), p->buf_len);"
    },
    {
        "line": 41,
        "fullcodeline": "fio_force_event(uuid, FIO_EVENT_ON_DATA);"
    },
    {
        "line": 50,
        "fullcodeline": "(int)fio_peer_addr(uuid).len, fio_peer_addr(uuid).data);"
    },
    {
        "line": 33,
        "fullcodeline": "http_send_error(&p->request, 413);"
    },
    {
        "line": 35,
        "fullcodeline": "p->request.method = fiobj_str_tmp();"
    },
    {
        "line": 36,
        "fullcodeline": "http_send_error(&p->request, 413);"
    }
]