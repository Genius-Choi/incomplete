[
    {
        "line": 2,
        "fullcodeline": "http1pr_s *p = (http1pr_s *)protocol;"
    },
    {
        "line": 5,
        "fullcodeline": "i = fio_read(uuid, p->buf + p->buf_len, HTTP_MAX_HEADER_LENGTH - p->buf_len);"
    },
    {
        "line": 9,
        "fullcodeline": "p->buf_len += i;"
    },
    {
        "line": 12,
        "fullcodeline": "p->p.protocol.on_data = http1_on_data;"
    },
    {
        "line": 20,
        "fullcodeline": "http1_consume_data(uuid, p);"
    },
    {
        "line": 7,
        "fullcodeline": "if (i <= 0)"
    },
    {
        "line": 13,
        "fullcodeline": "if (i >= 24 && !memcmp(p->buf, \"PRI * HTTP/2.0\\r\\n\\r\\nSM\\r\\n\\r\\n\", 24)) {"
    },
    {
        "line": 14,
        "fullcodeline": "FIO_LOG_WARNING(\"client claimed unsupported HTTP/2 prior knowledge.\");"
    },
    {
        "line": 15,
        "fullcodeline": "fio_close(uuid);"
    }
]