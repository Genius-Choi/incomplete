[
    {
        "line": 8,
        "fullcodeline": "strFileName = m_common->trans2uft8(statBuffer.name, m_mapFileCode[index]);    // \u89e3\u538b\u6587\u4ef6\u540d\uff08\u538b\u7f29\u5305\u4e2d\uff09"
    },
    {
        "line": 11,
        "fullcodeline": "QString strOriginName = strFileName;"
    },
    {
        "line": 24,
        "fullcodeline": "QString strTempFileName = strFileName;"
    },
    {
        "line": 25,
        "fullcodeline": "int iIndex = strFileName.lastIndexOf(QDir::separator());"
    },
    {
        "line": 94,
        "fullcodeline": "bool bIsDirectory = strFileName.endsWith(QDir::separator());    // \u662f\u5426\u4e3a\u6587\u4ef6\u5939"
    },
    {
        "line": 101,
        "fullcodeline": "QString strDestFileName = options.strTargetPath + QDir::separator() + strFileName;"
    },
    {
        "line": 103,
        "fullcodeline": "QFile file(strDestFileName);"
    },
    {
        "line": 130,
        "fullcodeline": "mode_t value = mode_t();"
    },
    {
        "line": 138,
        "fullcodeline": "bool isLink = false;"
    },
    {
        "line": 142,
        "fullcodeline": "QFileDevice::Permissions per = getPermissions(value);"
    },
    {
        "line": 4,
        "fullcodeline": "if (zip_stat_index(archive, zip_uint64_t(index), ZIP_FL_ENC_RAW, &statBuffer) != 0) {"
    },
    {
        "line": 9,
        "fullcodeline": "if(strFileName.contains(QLatin1Char('\\\\')))"
    },
    {
        "line": 27,
        "fullcodeline": "if (iIndex >= 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "if(!m_bDlnfs) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (strFileName.endsWith(QDir::separator())) {"
    },
    {
        "line": 115,
        "fullcodeline": "const bool restoreParentMtime = (parentDir != options.strTargetPath);"
    },
    {
        "line": 139,
        "fullcodeline": "if(S_ISLNK(value)) {"
    },
    {
        "line": 10,
        "fullcodeline": "strFileName = strFileName.replace(QLatin1Char('\\\\'), QDir::separator());"
    },
    {
        "line": 28,
        "fullcodeline": "strFilePath = strFileName.left(iIndex);   // bug114527 left\u51fd\u6570\u53c2\u6570\u4e3a\u622a\u53d6\u7684\u5b57\u7b26\u4e32\u957f\u5ea6"
    },
    {
        "line": 29,
        "fullcodeline": "strTempFileName = strFileName.right(strFileName.length() - iIndex - 1);"
    },
    {
        "line": 34,
        "fullcodeline": "QString sDir = m_common->handleLongNameforPath(strFilePath, strFileName, m_mapLongDirName, m_mapRealDirValue);"
    },
    {
        "line": 73,
        "fullcodeline": "if (!options.strDestination.isEmpty()) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (QDir().exists(options.strTargetPath) == false)"
    },
    {
        "line": 98,
        "fullcodeline": "QDir().mkpath(options.strTargetPath);"
    },
    {
        "line": 108,
        "fullcodeline": "QDir pDir = QFileInfo(strDestFileName).dir();"
    },
    {
        "line": 109,
        "fullcodeline": "pDir.cdUp();"
    },
    {
        "line": 110,
        "fullcodeline": "parentDir = pDir.path();"
    },
    {
        "line": 119,
        "fullcodeline": "parent_mtime = QFileInfo(parentDir).lastModified().toMSecsSinceEpoch() / 1000;"
    },
    {
        "line": 125,
        "fullcodeline": "if (zip_file_get_external_attributes(archive, zip_uint64_t(index), ZIP_FL_UNCHANGED, &opsys, &attributes) == -1) {"
    },
    {
        "line": 133,
        "fullcodeline": "value = attributes >> 16;"
    },
    {
        "line": 140,
        "fullcodeline": "isLink = true;"
    },
    {
        "line": 144,
        "fullcodeline": "if (bIsDirectory && !isLink) {     // \u6587\u4ef6\u5939"
    },
    {
        "line": 149,
        "fullcodeline": "dir.mkpath(strDestFileName);"
    },
    {
        "line": 152,
        "fullcodeline": "per = per | QFileDevice::ReadUser | QFileDevice::WriteUser | QFileDevice::ExeUser ;"
    },
    {
        "line": 324,
        "fullcodeline": "times.modtime = statBuffer.mtime;"
    },
    {
        "line": 325,
        "fullcodeline": "utime(strDestFileName.toUtf8().constData(), &times);"
    },
    {
        "line": 91,
        "fullcodeline": "emit signalCurFileName(strFileName); // \u53d1\u9001\u5f53\u524d\u6b63\u5728\u89e3\u538b\u7684\u6587\u4ef6\u540d"
    },
    {
        "line": 112,
        "fullcodeline": "parentDir = QFileInfo(strDestFileName).path();"
    },
    {
        "line": 145,
        "fullcodeline": "if (PATH_MAX < QString(strFileName).toLocal8Bit().length())"
    },
    {
        "line": 35,
        "fullcodeline": "if(sDir.length() > 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "strFilePath = sDir.endsWith(QDir::separator())?sDir.left(sDir.length() -1):sDir;"
    },
    {
        "line": 46,
        "fullcodeline": "if (NAME_MAX < QString(strTempFileName).toLocal8Bit().length() && !strTempFileName.endsWith(QDir::separator())) {"
    },
    {
        "line": 47,
        "fullcodeline": "QString strTemp = strTempFileName.left(TRUNCATION_FILE_LONG);"
    },
    {
        "line": 55,
        "fullcodeline": "QString sSuffix = QFileInfo(strTempFileName).completeSuffix();"
    },
    {
        "line": 62,
        "fullcodeline": "strTempFileName = strTemp + QString(\"(%1)\").arg(m_mapLongName[tempFilePathName] + 1, LONGFILE_SUFFIX_FieldWidth, BINARY_NUM, QChar('0')) + \".\" + sSuffix;"
    },
    {
        "line": 64,
        "fullcodeline": "strFileName = strTempFileName;"
    },
    {
        "line": 75,
        "fullcodeline": "int nCnt = options.strDestination.count(QDir::separator());"
    },
    {
        "line": 76,
        "fullcodeline": "int nIndex = 0;"
    },
    {
        "line": 81,
        "fullcodeline": "strFileName = strFileName.remove(0, nIndex);"
    },
    {
        "line": 329,
        "fullcodeline": "times.modtime = parent_mtime;"
    },
    {
        "line": 37,
        "fullcodeline": "if(strFileName.endsWith(QDir::separator())) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (m_mapLongName[tempFilePathName] >= LONGFILE_SAME_FILES ) {"
    },
    {
        "line": 77,
        "fullcodeline": "for(int i = 0; i < nCnt; i++){"
    },
    {
        "line": 83,
        "fullcodeline": "strFileName = strFileName.remove(0, options.strDestination.size());"
    },
    {
        "line": 154,
        "fullcodeline": "zip_file_t *zipFile = zip_fopen_index(archive, zip_uint64_t(index), 0);"
    },
    {
        "line": 155,
        "fullcodeline": "char buf[READBYTES] = {0};"
    },
    {
        "line": 156,
        "fullcodeline": "const auto readBytes = zip_fread(zipFile, buf, zip_uint64_t(READBYTES));"
    },
    {
        "line": 165,
        "fullcodeline": "file.close();"
    },
    {
        "line": 330,
        "fullcodeline": "utime(parentDir.toUtf8().constData(), &times);"
    },
    {
        "line": 38,
        "fullcodeline": "strFileName = sDir;"
    },
    {
        "line": 42,
        "fullcodeline": "if(!m_mapLongDirName.isEmpty()) {"
    },
    {
        "line": 56,
        "fullcodeline": "if(10 < sSuffix.length()){"
    },
    {
        "line": 57,
        "fullcodeline": "sSuffix = QFileInfo(strTempFileName).suffix();"
    },
    {
        "line": 66,
        "fullcodeline": "strFileName = strFilePath + QDir::separator() + strTempFileName;"
    },
    {
        "line": 78,
        "fullcodeline": "nIndex = strFileName.indexOf(QDir::separator(), nIndex);"
    },
    {
        "line": 79,
        "fullcodeline": "nIndex++;"
    },
    {
        "line": 214,
        "fullcodeline": "zip_file_t *zipFile = zip_fopen_index(archive, zip_uint64_t(index), 0);"
    },
    {
        "line": 267,
        "fullcodeline": "QDataStream out(&file);"
    },
    {
        "line": 268,
        "fullcodeline": "zip_int64_t sum = 0;"
    },
    {
        "line": 269,
        "fullcodeline": "char buf[READBYTES];"
    },
    {
        "line": 270,
        "fullcodeline": "int writeSize = 0;"
    },
    {
        "line": 271,
        "fullcodeline": "double dScale = 1;"
    },
    {
        "line": 315,
        "fullcodeline": "file.close();"
    },
    {
        "line": 158,
        "fullcodeline": "QString strBuf = QString(buf).toLocal8Bit();"
    },
    {
        "line": 170,
        "fullcodeline": "if (file.exists()) {"
    },
    {
        "line": 216,
        "fullcodeline": "if (nullptr == zipFile) {"
    },
    {
        "line": 276,
        "fullcodeline": "while (sum != zip_int64_t(statBuffer.size)) {"
    },
    {
        "line": 39,
        "fullcodeline": "} else if (NAME_MAX >= QString(strTempFileName).toLocal8Bit().length()) {"
    },
    {
        "line": 58,
        "fullcodeline": "if(10 < sSuffix.length()) {"
    },
    {
        "line": 59,
        "fullcodeline": "sSuffix = sSuffix.right(10);"
    },
    {
        "line": 159,
        "fullcodeline": "if (QFile::link(strBuf, strDestFileName)) {"
    },
    {
        "line": 200,
        "fullcodeline": "m_setLongName << strFileName;"
    },
    {
        "line": 204,
        "fullcodeline": "if (file.exists() && !file.isWritable()) {"
    },
    {
        "line": 205,
        "fullcodeline": "file.remove();"
    },
    {
        "line": 206,
        "fullcodeline": "file.setFileName(strDestFileName);"
    },
    {
        "line": 207,
        "fullcodeline": "file.setPermissions(QFileDevice::WriteUser);"
    },
    {
        "line": 211,
        "fullcodeline": "if (QDir().exists(QFileInfo(strDestFileName).path()) == false)"
    },
    {
        "line": 217,
        "fullcodeline": "int iErr = zip_error_code_zip(zip_get_error(archive));"
    },
    {
        "line": 251,
        "fullcodeline": "if (file.open(QIODevice::WriteOnly) == false) {"
    },
    {
        "line": 274,
        "fullcodeline": "dScale = double(statBuffer.comp_size) / statBuffer.size;"
    },
    {
        "line": 286,
        "fullcodeline": "const auto readBytes = zip_fread(zipFile, buf, zip_uint64_t(READBYTES));"
    },
    {
        "line": 307,
        "fullcodeline": "sum += readBytes;"
    },
    {
        "line": 311,
        "fullcodeline": "qExtractSize += readBytes * dScale;"
    },
    {
        "line": 40,
        "fullcodeline": "strFileName = sDir + strTempFileName;"
    },
    {
        "line": 212,
        "fullcodeline": "QDir().mkpath(QFileInfo(strDestFileName).path());"
    },
    {
        "line": 218,
        "fullcodeline": "if (ZIP_ER_WRONGPASSWD == iErr) {//\u5bc6\u7801\u9519\u8bef"
    },
    {
        "line": 254,
        "fullcodeline": "QList<QString> entryNameList = strDestFileName.split('/');"
    },
    {
        "line": 262,
        "fullcodeline": "emit signalFileWriteErrorName(QFileInfo(file.fileName()).fileName());"
    },
    {
        "line": 288,
        "fullcodeline": "if (readBytes < 0) {"
    },
    {
        "line": 295,
        "fullcodeline": "if (out.writeRawData(buf, int(readBytes)) != readBytes) {"
    },
    {
        "line": 312,
        "fullcodeline": "emit signalprogress((double(qExtractSize)) * m_dScaleSize);"
    },
    {
        "line": 160,
        "fullcodeline": "qInfo() << \"Symlink's created:\" << buf << strFileName;"
    },
    {
        "line": 221,
        "fullcodeline": "bool bCheckFinished = false;"
    },
    {
        "line": 222,
        "fullcodeline": "int iCodecIndex = 0;"
    },
    {
        "line": 289,
        "fullcodeline": "file.close();"
    },
    {
        "line": 296,
        "fullcodeline": "file.close();"
    },
    {
        "line": 162,
        "fullcodeline": "qInfo() << \"Can't create symlink\" << buf << strFileName;"
    },
    {
        "line": 291,
        "fullcodeline": "emit signalFileWriteErrorName(QFileInfo(file.fileName()).fileName());"
    },
    {
        "line": 223,
        "fullcodeline": "while (nullptr == zipFile && false == bCheckFinished) {"
    },
    {
        "line": 243,
        "fullcodeline": "} else if (ZIP_ER_NOPASSWD == iErr) {   // \u65e0\u5bc6\u7801\u8f93\u5165"
    },
    {
        "line": 177,
        "fullcodeline": "OverwriteQuery query(strDestFileName);"
    },
    {
        "line": 179,
        "fullcodeline": "emit signalQuery(&query);"
    },
    {
        "line": 180,
        "fullcodeline": "query.waitForResponse();"
    },
    {
        "line": 224,
        "fullcodeline": "if (m_listCodecs.length() == iCodecIndex) {"
    },
    {
        "line": 182,
        "fullcodeline": "if (query.responseCancelled()) {"
    },
    {
        "line": 302,
        "fullcodeline": "emit signalFileWriteErrorName(QFileInfo(file.fileName()).fileName());"
    },
    {
        "line": 226,
        "fullcodeline": "if (file.exists()) {"
    },
    {
        "line": 233,
        "fullcodeline": "zip_set_default_password(archive, passwordUnicode(m_strPassword, iCodecIndex).data());"
    },
    {
        "line": 234,
        "fullcodeline": "iCodecIndex++;"
    },
    {
        "line": 235,
        "fullcodeline": "zip_error_clear(archive);"
    },
    {
        "line": 236,
        "fullcodeline": "zipFile = zip_fopen_index(archive, zip_uint64_t(index), 0);"
    },
    {
        "line": 237,
        "fullcodeline": "iErr = zip_error_code_zip(zip_get_error(archive));"
    },
    {
        "line": 185,
        "fullcodeline": "} else if (query.responseSkip()) {"
    },
    {
        "line": 238,
        "fullcodeline": "if (iErr != ZIP_ER_WRONGPASSWD && zipFile != nullptr) {//\u5bc6\u7801\u6b63\u786e"
    },
    {
        "line": 239,
        "fullcodeline": "bCheckFinished = true;"
    },
    {
        "line": 188,
        "fullcodeline": "} else if (query.responseSkipAll()) {"
    },
    {
        "line": 189,
        "fullcodeline": "m_bSkipAll = true;"
    }
]