[
    {
        "line": 5,
        "fullcodeline": "u8 rbuf[SC_MAX_APDU_BUFFER_SIZE];"
    },
    {
        "line": 6,
        "fullcodeline": "u8 sbuf[SC_MAX_APDU_BUFFER_SIZE];"
    },
    {
        "line": 10,
        "fullcodeline": "assert(card != NULL && crgram != NULL && out != NULL);"
    },
    {
        "line": 11,
        "fullcodeline": "ctx = card->ctx;"
    },
    {
        "line": 12,
        "fullcodeline": "tcos3=(card->type==SC_CARD_TYPE_TCOS_V3);"
    },
    {
        "line": 13,
        "fullcodeline": "data=(tcos_data *)card->drv_data;"
    },
    {
        "line": 15,
        "fullcodeline": "LOG_FUNC_CALLED(ctx);"
    },
    {
        "line": 16,
        "fullcodeline": "sc_log(ctx,"
    },
    {
        "line": 20,
        "fullcodeline": "sc_format_apdu(card, &apdu, crgram_len>255 ? SC_APDU_CASE_4_EXT : SC_APDU_CASE_4_SHORT, 0x2A, 0x80, 0x86);"
    },
    {
        "line": 21,
        "fullcodeline": "apdu.resp = rbuf;"
    },
    {
        "line": 23,
        "fullcodeline": "apdu.le = crgram_len;"
    },
    {
        "line": 25,
        "fullcodeline": "apdu.data = sbuf;"
    },
    {
        "line": 26,
        "fullcodeline": "apdu.lc = apdu.datalen = crgram_len+1;"
    },
    {
        "line": 27,
        "fullcodeline": "sbuf[0] = tcos3 ? 0x00 : ((data->pad_flags & SC_ALGORITHM_RSA_PAD_PKCS1) ? 0x81 : 0x02);"
    },
    {
        "line": 30,
        "fullcodeline": "memcpy(sbuf+1, crgram, crgram_len);"
    },
    {
        "line": 32,
        "fullcodeline": "r = sc_transmit_apdu(card, &apdu);"
    },
    {
        "line": 33,
        "fullcodeline": "LOG_TEST_RET(card->ctx, r, \"APDU transmit failed\");"
    },
    {
        "line": 45,
        "fullcodeline": "SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, sc_check_sw(card, apdu.sw1, apdu.sw2));"
    },
    {
        "line": 18,
        "fullcodeline": "!!(data->pad_flags & SC_ALGORITHM_RSA_PAD_PKCS1));"
    },
    {
        "line": 28,
        "fullcodeline": "if (sizeof sbuf - 1 < crgram_len)"
    },
    {
        "line": 35,
        "fullcodeline": "if (apdu.sw1==0x90 && apdu.sw2==0x00) {"
    },
    {
        "line": 36,
        "fullcodeline": "size_t len= (apdu.resplen>outlen) ? outlen : apdu.resplen;"
    },
    {
        "line": 37,
        "fullcodeline": "unsigned int offset=0;"
    },
    {
        "line": 42,
        "fullcodeline": "memcpy(out, apdu.resp+offset, len-offset);"
    },
    {
        "line": 43,
        "fullcodeline": "SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, len-offset);"
    },
    {
        "line": 38,
        "fullcodeline": "if(tcos3 && (data->pad_flags & SC_ALGORITHM_RSA_PAD_PKCS1) && apdu.resp[0]==0 && apdu.resp[1]==2) {"
    },
    {
        "line": 39,
        "fullcodeline": "offset=2; while(offset<len && apdu.resp[offset]!=0) ++offset;"
    },
    {
        "line": 40,
        "fullcodeline": "offset=(offset<len-1) ? offset+1 : 0;"
    }
]