[
    {
        "line": 3,
        "fullcodeline": "ZFP_ERROR_NULL(input);"
    },
    {
        "line": 4,
        "fullcodeline": "ZFP_ERROR_NULL(output);"
    },
    {
        "line": 5,
        "fullcodeline": "ZFP_ERROR_NULL(dparams);"
    },
    {
        "line": 6,
        "fullcodeline": "BLOSC_UNUSED_PARAM(chunk);"
    },
    {
        "line": 8,
        "fullcodeline": "blosc2_schunk *sc = dparams->schunk;"
    },
    {
        "line": 9,
        "fullcodeline": "int32_t typesize = sc->typesize;"
    },
    {
        "line": 11,
        "fullcodeline": "double tol = (int8_t) meta;"
    },
    {
        "line": 13,
        "fullcodeline": "int64_t *shape = malloc(8 * sizeof(int64_t));"
    },
    {
        "line": 14,
        "fullcodeline": "int32_t *chunkshape = malloc(8 * sizeof(int32_t));"
    },
    {
        "line": 15,
        "fullcodeline": "int32_t *blockshape = malloc(8 * sizeof(int32_t));"
    },
    {
        "line": 25,
        "fullcodeline": "deserialize_meta(smeta, smeta_len, &ndim, shape, chunkshape, blockshape);"
    },
    {
        "line": 33,
        "fullcodeline": "double tolerance = pow(10, tol);"
    },
    {
        "line": 50,
        "fullcodeline": "zfp = zfp_stream_open(NULL);"
    },
    {
        "line": 51,
        "fullcodeline": "zfp_stream_set_accuracy(zfp, tolerance);"
    },
    {
        "line": 52,
        "fullcodeline": "stream = stream_open((void *) input, input_len);"
    },
    {
        "line": 53,
        "fullcodeline": "zfp_stream_set_bit_stream(zfp, stream);"
    },
    {
        "line": 54,
        "fullcodeline": "zfp_stream_rewind(zfp);"
    },
    {
        "line": 77,
        "fullcodeline": "zfpsize = zfp_decompress(zfp, field);"
    },
    {
        "line": 18,
        "fullcodeline": "if (blosc2_meta_get(sc, \"b2nd\", &smeta, &smeta_len) < 0) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (zfpsize == 0) {"
    },
    {
        "line": 92,
        "fullcodeline": "return (int) output_len;"
    },
    {
        "line": 19,
        "fullcodeline": "BLOSC_TRACE_ERROR(\"Cannot access b2nd meta info\");"
    },
    {
        "line": 20,
        "fullcodeline": "free(shape);"
    },
    {
        "line": 21,
        "fullcodeline": "free(chunkshape);"
    },
    {
        "line": 22,
        "fullcodeline": "free(blockshape);"
    },
    {
        "line": 36,
        "fullcodeline": "case sizeof(float):"
    },
    {
        "line": 37,
        "fullcodeline": "type = zfp_type_float;"
    },
    {
        "line": 39,
        "fullcodeline": "case sizeof(double):"
    },
    {
        "line": 40,
        "fullcodeline": "type = zfp_type_double;"
    },
    {
        "line": 58,
        "fullcodeline": "field = zfp_field_1d((void *) output, type, blockshape[0]);"
    },
    {
        "line": 61,
        "fullcodeline": "field = zfp_field_2d((void *) output, type, blockshape[1], blockshape[0]);"
    },
    {
        "line": 64,
        "fullcodeline": "field = zfp_field_3d((void *) output, type, blockshape[2], blockshape[1], blockshape[0]);"
    },
    {
        "line": 67,
        "fullcodeline": "field = zfp_field_4d((void *) output, type, blockshape[3], blockshape[2], blockshape[1], blockshape[0]);"
    },
    {
        "line": 89,
        "fullcodeline": "return (int) zfpsize;"
    }
]