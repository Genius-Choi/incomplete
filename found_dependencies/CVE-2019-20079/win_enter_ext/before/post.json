[
    {
        "line": 9,
        "fullcodeline": "int\t\tother_buffer = FALSE;"
    },
    {
        "line": 47,
        "fullcodeline": "update_topline();"
    },
    {
        "line": 57,
        "fullcodeline": "curwin = wp;"
    },
    {
        "line": 58,
        "fullcodeline": "curbuf = wp->w_buffer;"
    },
    {
        "line": 59,
        "fullcodeline": "check_cursor();"
    },
    {
        "line": 62,
        "fullcodeline": "changed_line_abv_curs();\t/* assume cursor position needs updating */"
    },
    {
        "line": 110,
        "fullcodeline": "curwin->w_redr_status = TRUE;"
    },
    {
        "line": 116,
        "fullcodeline": "redraw_tabline = TRUE;"
    },
    {
        "line": 134,
        "fullcodeline": "setmouse();\t\t\t// in case jumped to/from help buffer"
    },
    {
        "line": 11,
        "fullcodeline": "if (wp == curwin && !curwin_invalid)\t/* nothing to do */"
    },
    {
        "line": 19,
        "fullcodeline": "if (!curwin_invalid && trigger_leave_autocmds)"
    },
    {
        "line": 42,
        "fullcodeline": "if (undo_sync && curbuf != wp->w_buffer)"
    },
    {
        "line": 50,
        "fullcodeline": "if (wp->w_buffer != curbuf)"
    },
    {
        "line": 52,
        "fullcodeline": "if (!curwin_invalid)"
    },
    {
        "line": 60,
        "fullcodeline": "if (!virtual_active())"
    },
    {
        "line": 64,
        "fullcodeline": "if (curwin->w_localdir != NULL || curtab->tp_localdir != NULL)"
    },
    {
        "line": 121,
        "fullcodeline": "if (curwin->w_height < p_wh && !curwin->w_p_wfh"
    },
    {
        "line": 131,
        "fullcodeline": "if (curwin->w_width < p_wiw && !curwin->w_p_wfw)"
    },
    {
        "line": 31,
        "fullcodeline": "apply_autocmds(EVENT_WINLEAVE, NULL, NULL, FALSE, curbuf);"
    },
    {
        "line": 43,
        "fullcodeline": "u_sync(FALSE);"
    },
    {
        "line": 51,
        "fullcodeline": "buf_copy_options(wp->w_buffer, BCO_ENTER | BCO_NOHELP);"
    },
    {
        "line": 54,
        "fullcodeline": "prevwin = curwin;\t/* remember for CTRL-W p */"
    },
    {
        "line": 55,
        "fullcodeline": "curwin->w_redr_status = TRUE;"
    },
    {
        "line": 61,
        "fullcodeline": "curwin->w_cursor.coladd = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "apply_autocmds(EVENT_WINNEW, NULL, NULL, FALSE, curbuf);"
    },
    {
        "line": 102,
        "fullcodeline": "apply_autocmds(EVENT_WINENTER, NULL, NULL, FALSE, curbuf);"
    },
    {
        "line": 118,
        "fullcodeline": "redraw_later(VALID);\t/* causes status line redraw */"
    },
    {
        "line": 126,
        "fullcodeline": "win_setheight((int)p_wh);"
    },
    {
        "line": 132,
        "fullcodeline": "win_setwidth((int)p_wiw);"
    },
    {
        "line": 24,
        "fullcodeline": "if (wp->w_buffer != curbuf)"
    },
    {
        "line": 32,
        "fullcodeline": "if (!win_valid(wp))"
    },
    {
        "line": 71,
        "fullcodeline": "if (globaldir == NULL)"
    },
    {
        "line": 78,
        "fullcodeline": "if (curwin->w_localdir != NULL)"
    },
    {
        "line": 83,
        "fullcodeline": "if (mch_chdir((char *)dirname) == 0)"
    },
    {
        "line": 26,
        "fullcodeline": "apply_autocmds(EVENT_BUFLEAVE, NULL, NULL, FALSE, curbuf);"
    },
    {
        "line": 27,
        "fullcodeline": "other_buffer = TRUE;"
    },
    {
        "line": 73,
        "fullcodeline": "char_u\tcwd[MAXPATHL];"
    },
    {
        "line": 79,
        "fullcodeline": "dirname = curwin->w_localdir;"
    },
    {
        "line": 84,
        "fullcodeline": "shorten_fnames(TRUE);"
    },
    {
        "line": 86,
        "fullcodeline": "else if (globaldir != NULL)"
    },
    {
        "line": 104,
        "fullcodeline": "apply_autocmds(EVENT_BUFENTER, NULL, NULL, FALSE, curbuf);"
    },
    {
        "line": 127,
        "fullcodeline": "else if (curwin->w_height == 0)"
    },
    {
        "line": 28,
        "fullcodeline": "if (!win_valid(wp))"
    },
    {
        "line": 75,
        "fullcodeline": "if (mch_dirname(cwd, MAXPATHL) == OK)"
    },
    {
        "line": 81,
        "fullcodeline": "dirname = curtab->tp_localdir;"
    },
    {
        "line": 90,
        "fullcodeline": "vim_ignored = mch_chdir((char *)globaldir);"
    },
    {
        "line": 91,
        "fullcodeline": "VIM_CLEAR(globaldir);"
    },
    {
        "line": 92,
        "fullcodeline": "shorten_fnames(TRUE);"
    },
    {
        "line": 128,
        "fullcodeline": "win_setheight(1);"
    },
    {
        "line": 76,
        "fullcodeline": "globaldir = vim_strsave(cwd);"
    }
]