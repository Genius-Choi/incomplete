[
    {
        "line": 4,
        "fullcodeline": "GSList *formats = gdk_pixbuf_get_formats ();"
    },
    {
        "line": 7,
        "fullcodeline": "const char *known_image_formats[] = {"
    },
    {
        "line": 14,
        "fullcodeline": "extensions = g_hash_table_new_full (g_str_hash, g_str_equal,"
    },
    {
        "line": 29,
        "fullcodeline": "g_slist_free (formats);"
    },
    {
        "line": 16,
        "fullcodeline": "for (l = formats; l != NULL; l = l->next) {"
    },
    {
        "line": 32,
        "fullcodeline": "for (i = 0; i < G_N_ELEMENTS (known_image_formats); i++) {"
    },
    {
        "line": 18,
        "fullcodeline": "gchar **ext = gdk_pixbuf_format_get_extensions (l->data);"
    },
    {
        "line": 26,
        "fullcodeline": "g_strfreev (ext);"
    },
    {
        "line": 20,
        "fullcodeline": "for (i = 0; ext[i] != NULL; i++) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (!g_hash_table_lookup (extensions, known_image_formats[i])) {"
    },
    {
        "line": 21,
        "fullcodeline": "g_hash_table_insert (extensions,"
    },
    {
        "line": 34,
        "fullcodeline": "g_hash_table_insert (extensions,"
    },
    {
        "line": 22,
        "fullcodeline": "g_strdup (ext[i]),"
    },
    {
        "line": 23,
        "fullcodeline": "GINT_TO_POINTER (FORMAT_SUPPORTED));"
    },
    {
        "line": 35,
        "fullcodeline": "g_strdup (known_image_formats[i]),"
    },
    {
        "line": 36,
        "fullcodeline": "GINT_TO_POINTER (FORMAT_UNSUPPORTED));"
    }
]