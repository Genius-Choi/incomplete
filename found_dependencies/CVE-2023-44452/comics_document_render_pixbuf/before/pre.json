[
    {
        "line": 7,
        "fullcodeline": "guchar buf[4096];"
    },
    {
        "line": 9,
        "fullcodeline": "gint outpipe = -1;"
    },
    {
        "line": 14,
        "fullcodeline": "ComicsDocument *comics_document = COMICS_DOCUMENT (document);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!comics_document->decompress_tmp) {"
    },
    {
        "line": 17,
        "fullcodeline": "argv = extract_argv (document, rc->page->index);"
    },
    {
        "line": 18,
        "fullcodeline": "success = g_spawn_async_with_pipes (NULL, argv, NULL,"
    },
    {
        "line": 24,
        "fullcodeline": "g_strfreev (argv);"
    },
    {
        "line": 25,
        "fullcodeline": "g_return_val_if_fail (success == TRUE, NULL);"
    },
    {
        "line": 27,
        "fullcodeline": "loader = gdk_pixbuf_loader_new ();"
    },
    {
        "line": 28,
        "fullcodeline": "g_signal_connect (loader, \"size-prepared\","
    },
    {
        "line": 44,
        "fullcodeline": "tmp_pixbuf = gdk_pixbuf_loader_get_pixbuf (loader);"
    },
    {
        "line": 45,
        "fullcodeline": "rotated_pixbuf ="
    },
    {
        "line": 48,
        "fullcodeline": "g_spawn_close_pid (child_pid);"
    },
    {
        "line": 49,
        "fullcodeline": "g_object_unref (loader);"
    },
    {
        "line": 29,
        "fullcodeline": "G_CALLBACK (render_pixbuf_size_prepared_cb),"
    },
    {
        "line": 32,
        "fullcodeline": "while (outpipe >= 0) {"
    },
    {
        "line": 46,
        "fullcodeline": "gdk_pixbuf_rotate_simple (tmp_pixbuf,"
    },
    {
        "line": 51,
        "fullcodeline": "filename ="
    },
    {
        "line": 56,
        "fullcodeline": "gdk_pixbuf_get_file_info (filename, &width, &height);"
    },
    {
        "line": 58,
        "fullcodeline": "tmp_pixbuf ="
    },
    {
        "line": 62,
        "fullcodeline": "rotated_pixbuf ="
    },
    {
        "line": 65,
        "fullcodeline": "g_free (filename);"
    },
    {
        "line": 66,
        "fullcodeline": "g_object_unref (tmp_pixbuf);"
    },
    {
        "line": 19,
        "fullcodeline": "G_SPAWN_SEARCH_PATH |"
    },
    {
        "line": 33,
        "fullcodeline": "bytes = read (outpipe, buf, 4096);"
    },
    {
        "line": 47,
        "fullcodeline": "360 - rc->rotation);"
    },
    {
        "line": 52,
        "fullcodeline": "g_build_filename (comics_document->dir,"
    },
    {
        "line": 59,
        "fullcodeline": "gdk_pixbuf_new_from_file_at_size ("
    },
    {
        "line": 63,
        "fullcodeline": "gdk_pixbuf_rotate_simple (tmp_pixbuf,"
    },
    {
        "line": 35,
        "fullcodeline": "if (bytes > 0) {"
    },
    {
        "line": 53,
        "fullcodeline": "(char *) comics_document->page_names->pdata[rc->page->index],"
    },
    {
        "line": 60,
        "fullcodeline": "filename, width * (rc->scale) + 0.5,"
    },
    {
        "line": 61,
        "fullcodeline": "height * (rc->scale) + 0.5, NULL);"
    },
    {
        "line": 64,
        "fullcodeline": "360 - rc->rotation);"
    },
    {
        "line": 36,
        "fullcodeline": "gdk_pixbuf_loader_write (loader, buf, bytes,"
    },
    {
        "line": 38,
        "fullcodeline": "} else if (bytes <= 0) {"
    },
    {
        "line": 39,
        "fullcodeline": "close (outpipe);"
    },
    {
        "line": 40,
        "fullcodeline": "gdk_pixbuf_loader_close (loader, NULL);"
    },
    {
        "line": 41,
        "fullcodeline": "outpipe = -1;"
    }
]