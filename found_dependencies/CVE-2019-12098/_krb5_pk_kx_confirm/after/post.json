[
    {
        "line": 10,
        "fullcodeline": "krb5_crypto ck_crypto = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "krb5_crypto rk_crypto = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "krb5_data p1 = { sizeof(\"PKINIT\") - 1, \"PKINIT\" };"
    },
    {
        "line": 15,
        "fullcodeline": "krb5_data p2 = { sizeof(\"KEYEXCHANGE\") - 1, \"KEYEXCHANGE\" };"
    },
    {
        "line": 17,
        "fullcodeline": "heim_assert(ctx != NULL, \"PKINIT context is non-NULL\");"
    },
    {
        "line": 18,
        "fullcodeline": "heim_assert(reply_key != NULL, \"reply key is non-NULL\");"
    },
    {
        "line": 19,
        "fullcodeline": "heim_assert(session_key != NULL, \"session key is non-NULL\");"
    },
    {
        "line": 25,
        "fullcodeline": "memset(&ed, 0, sizeof(ed));"
    },
    {
        "line": 26,
        "fullcodeline": "krb5_keyblock_zero(&ck);"
    },
    {
        "line": 27,
        "fullcodeline": "krb5_keyblock_zero(&sk_verify);"
    },
    {
        "line": 28,
        "fullcodeline": "krb5_data_zero(&data);"
    },
    {
        "line": 30,
        "fullcodeline": "ret = decode_EncryptedData(pa_pkinit_kx->padata_value.data,"
    },
    {
        "line": 41,
        "fullcodeline": "ret = krb5_crypto_init(context, reply_key, 0, &rk_crypto);"
    },
    {
        "line": 45,
        "fullcodeline": "ret = krb5_decrypt_EncryptedData(context, rk_crypto,"
    },
    {
        "line": 51,
        "fullcodeline": "ret = decode_EncryptionKey(data.data, data.length,"
    },
    {
        "line": 56,
        "fullcodeline": "ret = krb5_crypto_init(context, &ck, 0, &ck_crypto);"
    },
    {
        "line": 60,
        "fullcodeline": "ret = krb5_crypto_fx_cf2(context, ck_crypto, rk_crypto,"
    },
    {
        "line": 73,
        "fullcodeline": "free_EncryptedData(&ed);"
    },
    {
        "line": 74,
        "fullcodeline": "krb5_free_keyblock_contents(context, &ck);"
    },
    {
        "line": 75,
        "fullcodeline": "krb5_free_keyblock_contents(context, &sk_verify);"
    },
    {
        "line": 80,
        "fullcodeline": "krb5_data_free(&data);"
    },
    {
        "line": 22,
        "fullcodeline": "if (pa_pkinit_kx == NULL)"
    },
    {
        "line": 36,
        "fullcodeline": "if (len != pa_pkinit_kx->padata_value.length) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (sk_verify.keytype != session_key->keytype ||"
    },
    {
        "line": 37,
        "fullcodeline": "ret = KRB5_KDCREP_MODIFIED;"
    },
    {
        "line": 67,
        "fullcodeline": "krb5_data_ct_cmp(&sk_verify.keyvalue, &session_key->keyvalue) != 0) {"
    },
    {
        "line": 68,
        "fullcodeline": "ret = KRB5_KDCREP_MODIFIED;"
    },
    {
        "line": 77,
        "fullcodeline": "krb5_crypto_destroy(context, ck_crypto);"
    },
    {
        "line": 79,
        "fullcodeline": "krb5_crypto_destroy(context, rk_crypto);"
    },
    {
        "line": 23,
        "fullcodeline": "return ctx->anonymous ? KRB5_KDCREP_MODIFIED : 0;"
    }
]