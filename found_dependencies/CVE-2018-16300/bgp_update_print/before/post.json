[
    {
        "line": 10,
        "fullcodeline": "ND_TCHECK2(dat[0], BGP_SIZE);"
    },
    {
        "line": 13,
        "fullcodeline": "memcpy(&bgp, dat, BGP_SIZE);"
    },
    {
        "line": 14,
        "fullcodeline": "p = dat + BGP_SIZE;\t/*XXX*/"
    },
    {
        "line": 15,
        "fullcodeline": "length -= BGP_SIZE;"
    },
    {
        "line": 18,
        "fullcodeline": "ND_TCHECK2(p[0], 2);"
    },
    {
        "line": 21,
        "fullcodeline": "withdrawn_routes_len = EXTRACT_16BITS(p);"
    },
    {
        "line": 22,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 23,
        "fullcodeline": "length -= 2;"
    },
    {
        "line": 38,
        "fullcodeline": "ND_TCHECK2(p[0], 2);"
    },
    {
        "line": 41,
        "fullcodeline": "len = EXTRACT_16BITS(p);"
    },
    {
        "line": 42,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 43,
        "fullcodeline": "length -= 2;"
    },
    {
        "line": 134,
        "fullcodeline": "ND_PRINT((ndo, \"%s\", tstr));"
    },
    {
        "line": 11,
        "fullcodeline": "if (length < BGP_SIZE)"
    },
    {
        "line": 19,
        "fullcodeline": "if (length < 2)"
    },
    {
        "line": 39,
        "fullcodeline": "if (length < 2)"
    },
    {
        "line": 45,
        "fullcodeline": "if (withdrawn_routes_len == 0 && len == 0 && length == 0) {"
    },
    {
        "line": 30,
        "fullcodeline": "ND_TCHECK2(p[0], withdrawn_routes_len);"
    },
    {
        "line": 33,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  Withdrawn routes: %d bytes\", withdrawn_routes_len));"
    },
    {
        "line": 34,
        "fullcodeline": "p += withdrawn_routes_len;"
    },
    {
        "line": 35,
        "fullcodeline": "length -= withdrawn_routes_len;"
    },
    {
        "line": 47,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  End-of-Rib Marker (empty NLRI)\"));"
    },
    {
        "line": 114,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  Updated routes:\"));"
    },
    {
        "line": 31,
        "fullcodeline": "if (length < withdrawn_routes_len)"
    },
    {
        "line": 56,
        "fullcodeline": "ND_TCHECK2(p[0], 2);"
    },
    {
        "line": 61,
        "fullcodeline": "aflags = *p;"
    },
    {
        "line": 63,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 64,
        "fullcodeline": "len -= 2;"
    },
    {
        "line": 65,
        "fullcodeline": "length -= 2;"
    },
    {
        "line": 66,
        "fullcodeline": "alenlen = bgp_attr_lenlen(aflags, p);"
    },
    {
        "line": 67,
        "fullcodeline": "ND_TCHECK2(p[0], alenlen);"
    },
    {
        "line": 72,
        "fullcodeline": "alen = bgp_attr_len(aflags, p);"
    },
    {
        "line": 73,
        "fullcodeline": "p += alenlen;"
    },
    {
        "line": 74,
        "fullcodeline": "len -= alenlen;"
    },
    {
        "line": 75,
        "fullcodeline": "length -= alenlen;"
    },
    {
        "line": 77,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  %s (%u), length: %u\","
    },
    {
        "line": 99,
        "fullcodeline": "p += alen;"
    },
    {
        "line": 100,
        "fullcodeline": "len -= alen;"
    },
    {
        "line": 101,
        "fullcodeline": "length -= alen;"
    },
    {
        "line": 116,
        "fullcodeline": "char buf[MAXHOSTNAMELEN + 100];"
    },
    {
        "line": 117,
        "fullcodeline": "i = decode_prefix4(ndo, p, length, buf, sizeof(buf));"
    },
    {
        "line": 57,
        "fullcodeline": "if (len < 2)"
    },
    {
        "line": 59,
        "fullcodeline": "if (length < 2)"
    },
    {
        "line": 68,
        "fullcodeline": "if (len < alenlen)"
    },
    {
        "line": 70,
        "fullcodeline": "if (length < alenlen)"
    },
    {
        "line": 93,
        "fullcodeline": "if (len < alen)"
    },
    {
        "line": 95,
        "fullcodeline": "if (length < alen)"
    },
    {
        "line": 97,
        "fullcodeline": "if (!bgp_attr_print(ndo, atype, p, alen))"
    },
    {
        "line": 118,
        "fullcodeline": "if (i == -1) {"
    },
    {
        "line": 62,
        "fullcodeline": "atype = *(p + 1);"
    },
    {
        "line": 84,
        "fullcodeline": "ND_PRINT((ndo, \", Flags [%s%s%s%s\","
    },
    {
        "line": 91,
        "fullcodeline": "ND_PRINT((ndo, \"]: \"));"
    },
    {
        "line": 119,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    (illegal prefix length)\"));"
    },
    {
        "line": 78,
        "fullcodeline": "tok2str(bgp_attr_values, \"Unknown Attribute\","
    },
    {
        "line": 89,
        "fullcodeline": "if (aflags & 0xf)"
    },
    {
        "line": 90,
        "fullcodeline": "ND_PRINT((ndo, \"+%x\", aflags & 0xf));"
    },
    {
        "line": 121,
        "fullcodeline": "} else if (i == -2)"
    },
    {
        "line": 85,
        "fullcodeline": "aflags & 0x80 ? \"O\" : \"\","
    },
    {
        "line": 86,
        "fullcodeline": "aflags & 0x40 ? \"T\" : \"\","
    },
    {
        "line": 87,
        "fullcodeline": "aflags & 0x20 ? \"P\" : \"\","
    },
    {
        "line": 88,
        "fullcodeline": "aflags & 0x10 ? \"E\" : \"\"));"
    },
    {
        "line": 123,
        "fullcodeline": "else if (i == -3)"
    },
    {
        "line": 126,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    %s\", buf));"
    },
    {
        "line": 127,
        "fullcodeline": "p += i;"
    },
    {
        "line": 128,
        "fullcodeline": "length -= i;"
    }
]