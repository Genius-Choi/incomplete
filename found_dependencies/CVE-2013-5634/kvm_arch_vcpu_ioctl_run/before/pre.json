[
    {
        "line": 10,
        "fullcodeline": "ret = kvm_vcpu_first_run_init(vcpu);"
    },
    {
        "line": 23,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 24,
        "fullcodeline": "run->exit_reason = KVM_EXIT_UNKNOWN;"
    },
    {
        "line": 7,
        "fullcodeline": "if (unlikely(vcpu->arch.target < 0))"
    },
    {
        "line": 14,
        "fullcodeline": "if (run->exit_reason == KVM_EXIT_MMIO) {"
    },
    {
        "line": 25,
        "fullcodeline": "while (ret > 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "ret = kvm_handle_mmio_return(vcpu, vcpu->run);"
    },
    {
        "line": 21,
        "fullcodeline": "sigprocmask(SIG_SETMASK, &vcpu->sigset, &sigsaved);"
    },
    {
        "line": 31,
        "fullcodeline": "update_vttbr(vcpu->kvm);"
    },
    {
        "line": 36,
        "fullcodeline": "kvm_vgic_flush_hwstate(vcpu);"
    },
    {
        "line": 37,
        "fullcodeline": "kvm_timer_flush_hwstate(vcpu);"
    },
    {
        "line": 61,
        "fullcodeline": "vcpu->mode = IN_GUEST_MODE;"
    },
    {
        "line": 63,
        "fullcodeline": "ret = kvm_call_hyp(__kvm_vcpu_run, vcpu);"
    },
    {
        "line": 65,
        "fullcodeline": "vcpu->mode = OUTSIDE_GUEST_MODE;"
    },
    {
        "line": 85,
        "fullcodeline": "kvm_timer_sync_hwstate(vcpu);"
    },
    {
        "line": 86,
        "fullcodeline": "kvm_vgic_sync_hwstate(vcpu);"
    },
    {
        "line": 88,
        "fullcodeline": "ret = handle_exit(vcpu, run, ret);"
    },
    {
        "line": 92,
        "fullcodeline": "sigprocmask(SIG_SETMASK, &sigsaved, NULL);"
    },
    {
        "line": 8,
        "fullcodeline": "return -ENOEXEC;"
    },
    {
        "line": 44,
        "fullcodeline": "if (signal_pending(current)) {"
    },
    {
        "line": 34,
        "fullcodeline": "vcpu_pause(vcpu);"
    },
    {
        "line": 45,
        "fullcodeline": "ret = -EINTR;"
    },
    {
        "line": 46,
        "fullcodeline": "run->exit_reason = KVM_EXIT_INTR;"
    },
    {
        "line": 49,
        "fullcodeline": "if (ret <= 0 || need_new_vmid_gen(vcpu->kvm)) {"
    },
    {
        "line": 51,
        "fullcodeline": "kvm_timer_sync_hwstate(vcpu);"
    },
    {
        "line": 52,
        "fullcodeline": "kvm_vgic_sync_hwstate(vcpu);"
    },
    {
        "line": 59,
        "fullcodeline": "trace_kvm_entry(*vcpu_pc(vcpu));"
    },
    {
        "line": 68,
        "fullcodeline": "trace_kvm_exit(*vcpu_pc(vcpu));"
    }
]