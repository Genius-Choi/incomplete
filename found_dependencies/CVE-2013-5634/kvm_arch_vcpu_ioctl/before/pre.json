[
    {
        "line": 4,
        "fullcodeline": "struct kvm_vcpu *vcpu = filp->private_data;"
    },
    {
        "line": 28,
        "fullcodeline": "struct kvm_reg_list __user *user_list = argp;"
    },
    {
        "line": 34,
        "fullcodeline": "n = reg_list.n;"
    },
    {
        "line": 35,
        "fullcodeline": "reg_list.n = kvm_arm_num_regs(vcpu);"
    },
    {
        "line": 43,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 11,
        "fullcodeline": "if (copy_from_user(&init, argp, sizeof(init)))"
    },
    {
        "line": 14,
        "fullcodeline": "return kvm_vcpu_set_target(vcpu, &init);"
    },
    {
        "line": 20,
        "fullcodeline": "if (copy_from_user(&reg, argp, sizeof(reg)))"
    },
    {
        "line": 22,
        "fullcodeline": "if (ioctl == KVM_SET_ONE_REG)"
    },
    {
        "line": 32,
        "fullcodeline": "if (copy_from_user(&reg_list, user_list, sizeof(reg_list)))"
    },
    {
        "line": 36,
        "fullcodeline": "if (copy_to_user(user_list, &reg_list, sizeof(reg_list)))"
    },
    {
        "line": 40,
        "fullcodeline": "return kvm_arm_copy_reg_indices(vcpu, user_list->reg);"
    },
    {
        "line": 12,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 21,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 23,
        "fullcodeline": "return kvm_arm_set_reg(vcpu, &reg);"
    },
    {
        "line": 33,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 37,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 39,
        "fullcodeline": "return -E2BIG;"
    },
    {
        "line": 25,
        "fullcodeline": "return kvm_arm_get_reg(vcpu, &reg);"
    }
]