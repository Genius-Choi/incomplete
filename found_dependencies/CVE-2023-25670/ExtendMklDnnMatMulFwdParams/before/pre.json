[
    {
        "line": 4,
        "fullcodeline": "params.dtypes.append(typeid(Tinput).name());"
    },
    {
        "line": 5,
        "fullcodeline": "params.dtypes.append(typeid(Tweight).name());"
    },
    {
        "line": 6,
        "fullcodeline": "params.dtypes.append(typeid(Tbias).name());"
    },
    {
        "line": 7,
        "fullcodeline": "params.dtypes.append(typeid(Toutput).name());"
    },
    {
        "line": 11,
        "fullcodeline": "if (std::is_same<Toutput, quint8>::value ||"
    },
    {
        "line": 16,
        "fullcodeline": "ComputeOutputRangeForInt32(context, &min_output_value, &max_output_value);"
    },
    {
        "line": 17,
        "fullcodeline": "float scale_int32 ="
    },
    {
        "line": 19,
        "fullcodeline": "const float min_freezed_output = context->input(7).flat<float>()(0);"
    },
    {
        "line": 20,
        "fullcodeline": "const float max_freezed_output = context->input(8).flat<float>()(0);"
    },
    {
        "line": 21,
        "fullcodeline": "float scale_eightbit ="
    },
    {
        "line": 23,
        "fullcodeline": "float scale = 1.0;"
    },
    {
        "line": 36,
        "fullcodeline": "output_scale.push_back(scale);"
    },
    {
        "line": 37,
        "fullcodeline": "params.post_op_params.push_back({\"output_scale\", output_scale});"
    },
    {
        "line": 18,
        "fullcodeline": "std::max(std::abs(min_output_value), std::abs(max_output_value));"
    },
    {
        "line": 22,
        "fullcodeline": "std::max(std::abs(min_freezed_output), std::abs(max_freezed_output));"
    },
    {
        "line": 25,
        "fullcodeline": "scale = scale_int32 / scale_eightbit / static_cast<float>(1u << 23);"
    },
    {
        "line": 27,
        "fullcodeline": "scale = scale_int32 / scale_eightbit / static_cast<float>(1u << 24);"
    },
    {
        "line": 29,
        "fullcodeline": "scale = scale_int32 / static_cast<float>(1u << 31);"
    },
    {
        "line": 33,
        "fullcodeline": "scale = scale_int32 / scale_eightbit / static_cast<float>(1u << 24);"
    }
]