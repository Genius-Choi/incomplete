[
    {
        "line": 4,
        "fullcodeline": "ExifMnoteDataPentax *n = (ExifMnoteDataPentax *) en;"
    },
    {
        "line": 5,
        "fullcodeline": "size_t i, tcount, o, datao, base = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "datao = 6 + n->offset;"
    },
    {
        "line": 50,
        "fullcodeline": "c = exif_get_short (buf + datao, n->order);"
    },
    {
        "line": 51,
        "fullcodeline": "datao += 2;"
    },
    {
        "line": 54,
        "fullcodeline": "exif_mnote_data_pentax_clear (n);"
    },
    {
        "line": 57,
        "fullcodeline": "n->entries = exif_mem_alloc (en->mem, sizeof (MnotePentaxEntry) * c);"
    },
    {
        "line": 64,
        "fullcodeline": "tcount = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!n || !buf || !buf_size) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (CHECKOVERFLOW(datao, buf_size, 8)) {"
    },
    {
        "line": 9,
        "fullcodeline": "exif_log (en->log, EXIF_LOG_CODE_CORRUPT_DATA,"
    },
    {
        "line": 21,
        "fullcodeline": "if (!memcmp(buf + datao, \"AOC\", 4)) {"
    },
    {
        "line": 32,
        "fullcodeline": "exif_log (en->log, EXIF_LOG_CODE_DEBUG, \"ExifMnoteDataPentax\","
    },
    {
        "line": 34,
        "fullcodeline": "datao += 4 + 2;"
    },
    {
        "line": 35,
        "fullcodeline": "base = MNOTE_PENTAX2_TAG_BASE;"
    },
    {
        "line": 65,
        "fullcodeline": "for (i = c, o = datao; i; --i, o += 12) {"
    },
    {
        "line": 74,
        "fullcodeline": "n->entries[tcount].tag        = exif_get_short (buf + o + 0, n->order) + base;"
    },
    {
        "line": 75,
        "fullcodeline": "n->entries[tcount].format     = exif_get_short (buf + o + 2, n->order);"
    },
    {
        "line": 76,
        "fullcodeline": "n->entries[tcount].components = exif_get_long  (buf + o + 4, n->order);"
    },
    {
        "line": 79,
        "fullcodeline": "exif_log (en->log, EXIF_LOG_CODE_DEBUG, \"ExifMnotePentax\","
    },
    {
        "line": 96,
        "fullcodeline": "s = exif_format_get_size (n->entries[tcount].format) *"
    },
    {
        "line": 121,
        "fullcodeline": "++tcount;"
    },
    {
        "line": 59,
        "fullcodeline": "EXIF_LOG_NO_MEMORY(en->log, \"ExifMnoteDataPentax\", sizeof (MnotePentaxEntry) * c);"
    },
    {
        "line": 68,
        "fullcodeline": "if (CHECKOVERFLOW(o,buf_size,12)) {"
    },
    {
        "line": 81,
        "fullcodeline": "mnote_pentax_tag_get_name (n->entries[tcount].tag));"
    },
    {
        "line": 22,
        "fullcodeline": "if ((buf[datao + 4] == 'I') && (buf[datao + 5] == 'I')) {"
    },
    {
        "line": 23,
        "fullcodeline": "n->version = pentaxV3;"
    },
    {
        "line": 24,
        "fullcodeline": "n->order = EXIF_BYTE_ORDER_INTEL;"
    },
    {
        "line": 85,
        "fullcodeline": "if (\texif_format_get_size (n->entries[tcount].format) &&"
    },
    {
        "line": 86,
        "fullcodeline": "buf_size / exif_format_get_size (n->entries[tcount].format) < n->entries[tcount].components"
    },
    {
        "line": 100,
        "fullcodeline": "size_t dataofs = o + 8;"
    },
    {
        "line": 112,
        "fullcodeline": "n->entries[tcount].data = exif_mem_alloc (en->mem, s);"
    },
    {
        "line": 36,
        "fullcodeline": "} else if (!memcmp(buf + datao, \"QVC\", 4)) {"
    },
    {
        "line": 37,
        "fullcodeline": "exif_log (en->log, EXIF_LOG_CODE_DEBUG, \"ExifMnoteDataPentax\","
    },
    {
        "line": 39,
        "fullcodeline": "n->version = casioV2;"
    },
    {
        "line": 40,
        "fullcodeline": "base = MNOTE_CASIO2_TAG_BASE;"
    },
    {
        "line": 41,
        "fullcodeline": "datao += 4 + 2;"
    },
    {
        "line": 89,
        "fullcodeline": "\"ExifMnoteDataPentax\", \"Tag size overflow detected (%u * %lu)\", exif_format_get_size (n->entries[tcount].format), n->entries[tcount].components);"
    },
    {
        "line": 101,
        "fullcodeline": "if (s > 4)"
    },
    {
        "line": 105,
        "fullcodeline": "if (CHECKOVERFLOW(dataofs, buf_size, s)) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (!n->entries[tcount].data) {"
    },
    {
        "line": 44,
        "fullcodeline": "exif_log (en->log, EXIF_LOG_CODE_DEBUG, \"ExifMnoteDataPentax\","
    },
    {
        "line": 46,
        "fullcodeline": "n->version = pentaxV1;"
    },
    {
        "line": 103,
        "fullcodeline": "dataofs = exif_get_long (buf + dataofs, n->order) + 6;"
    },
    {
        "line": 106,
        "fullcodeline": "exif_log (en->log, EXIF_LOG_CODE_DEBUG,"
    },
    {
        "line": 114,
        "fullcodeline": "EXIF_LOG_NO_MEMORY(en->log, \"ExifMnoteDataPentax\", s);"
    },
    {
        "line": 25,
        "fullcodeline": "} else if ((buf[datao + 4] == 'M') && (buf[datao + 5] == 'M')) {"
    },
    {
        "line": 26,
        "fullcodeline": "n->version = pentaxV3;"
    },
    {
        "line": 27,
        "fullcodeline": "n->order = EXIF_BYTE_ORDER_MOTOROLA;"
    },
    {
        "line": 30,
        "fullcodeline": "n->version = pentaxV2;"
    }
]