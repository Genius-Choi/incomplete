[
    {
        "line": 4,
        "fullcodeline": "ExifMnoteDataCanon *n = (ExifMnoteDataCanon *) ne;"
    },
    {
        "line": 13,
        "fullcodeline": "datao = 6 + n->offset;"
    },
    {
        "line": 21,
        "fullcodeline": "c = exif_get_short (buf + datao, n->order);"
    },
    {
        "line": 22,
        "fullcodeline": "datao += 2;"
    },
    {
        "line": 25,
        "fullcodeline": "exif_mnote_data_canon_clear (n);"
    },
    {
        "line": 28,
        "fullcodeline": "n->entries = exif_mem_alloc (ne->mem, sizeof (MnoteCanonEntry) * c);"
    },
    {
        "line": 35,
        "fullcodeline": "tcount = 0;"
    },
    {
        "line": 102,
        "fullcodeline": "n->count = tcount;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!n || !buf || !buf_size) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (CHECKOVERFLOW(datao, buf_size, 2)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (!n->entries) {"
    },
    {
        "line": 36,
        "fullcodeline": "for (i = c, o = datao; i; --i, o += 12) {"
    },
    {
        "line": 9,
        "fullcodeline": "exif_log (ne->log, EXIF_LOG_CODE_CORRUPT_DATA,"
    },
    {
        "line": 15,
        "fullcodeline": "exif_log (ne->log, EXIF_LOG_CODE_CORRUPT_DATA,"
    },
    {
        "line": 30,
        "fullcodeline": "EXIF_LOG_NO_MEMORY(ne->log, \"ExifMnoteCanon\", sizeof (MnoteCanonEntry) * c);"
    },
    {
        "line": 39,
        "fullcodeline": "memset(&n->entries[tcount], 0, sizeof(MnoteCanonEntry));"
    },
    {
        "line": 46,
        "fullcodeline": "n->entries[tcount].tag        = exif_get_short (buf + o, n->order);"
    },
    {
        "line": 47,
        "fullcodeline": "n->entries[tcount].format     = exif_get_short (buf + o + 2, n->order);"
    },
    {
        "line": 48,
        "fullcodeline": "n->entries[tcount].components = exif_get_long (buf + o + 4, n->order);"
    },
    {
        "line": 49,
        "fullcodeline": "n->entries[tcount].order      = n->order;"
    },
    {
        "line": 51,
        "fullcodeline": "exif_log (ne->log, EXIF_LOG_CODE_DEBUG, \"ExifMnoteCanon\","
    },
    {
        "line": 69,
        "fullcodeline": "s = exif_format_get_size (n->entries[tcount].format) *"
    },
    {
        "line": 71,
        "fullcodeline": "n->entries[tcount].size = s;"
    },
    {
        "line": 99,
        "fullcodeline": "++tcount;"
    },
    {
        "line": 40,
        "fullcodeline": "if (CHECKOVERFLOW(o,buf_size,12)) {"
    },
    {
        "line": 53,
        "fullcodeline": "mnote_canon_tag_get_name (n->entries[tcount].tag));"
    },
    {
        "line": 57,
        "fullcodeline": "if (\texif_format_get_size (n->entries[tcount].format) &&"
    },
    {
        "line": 72,
        "fullcodeline": "if (!s) {"
    },
    {
        "line": 41,
        "fullcodeline": "exif_log (ne->log, EXIF_LOG_CODE_CORRUPT_DATA,"
    },
    {
        "line": 58,
        "fullcodeline": "buf_size / exif_format_get_size (n->entries[tcount].format) < n->entries[tcount].components"
    },
    {
        "line": 60,
        "fullcodeline": "exif_log (ne->log, EXIF_LOG_CODE_CORRUPT_DATA,"
    },
    {
        "line": 73,
        "fullcodeline": "exif_log (ne->log, EXIF_LOG_CODE_CORRUPT_DATA,"
    },
    {
        "line": 61,
        "fullcodeline": "\"ExifMnoteCanon\", \"Tag size overflow detected (%u * %lu)\", exif_format_get_size (n->entries[tcount].format), n->entries[tcount].components);"
    },
    {
        "line": 79,
        "fullcodeline": "size_t dataofs = o + 8;"
    },
    {
        "line": 90,
        "fullcodeline": "n->entries[tcount].data = exif_mem_alloc (ne->mem, s);"
    },
    {
        "line": 95,
        "fullcodeline": "memcpy (n->entries[tcount].data, buf + dataofs, s);"
    },
    {
        "line": 80,
        "fullcodeline": "if (s > 4) dataofs = exif_get_long (buf + dataofs, n->order) + 6;"
    },
    {
        "line": 82,
        "fullcodeline": "if (CHECKOVERFLOW(dataofs, buf_size, s)) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (!n->entries[tcount].data) {"
    },
    {
        "line": 83,
        "fullcodeline": "exif_log (ne->log, EXIF_LOG_CODE_DEBUG,"
    },
    {
        "line": 92,
        "fullcodeline": "EXIF_LOG_NO_MEMORY(ne->log, \"ExifMnoteCanon\", s);"
    },
    {
        "line": 86,
        "fullcodeline": "(unsigned)(dataofs + s), buf_size);"
    }
]