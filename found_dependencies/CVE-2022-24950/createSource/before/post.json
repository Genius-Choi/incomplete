[
    {
        "line": 5,
        "fullcodeline": "if (pfsr.has_source() && sourceName) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (pfsr.has_source()) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (pfsr.source().has_port()) {"
    },
    {
        "line": 53,
        "fullcodeline": "pfsr.set_error(ex.what());"
    },
    {
        "line": 12,
        "fullcodeline": "source = pfsr.source();"
    },
    {
        "line": 35,
        "fullcodeline": "auto handler = shared_ptr<ForwardSourceHandler>(new ForwardSourceHandler("
    },
    {
        "line": 37,
        "fullcodeline": "sourceHandlers.push_back(handler);"
    },
    {
        "line": 6,
        "fullcodeline": "throw runtime_error("
    },
    {
        "line": 15,
        "fullcodeline": "string sourcePattern ="
    },
    {
        "line": 17,
        "fullcodeline": "string sourceDirectory = string(mkdtemp(&sourcePattern[0]));"
    },
    {
        "line": 18,
        "fullcodeline": "FATAL_FAIL(::chmod(sourceDirectory.c_str(), S_IRUSR | S_IWUSR | S_IXUSR));"
    },
    {
        "line": 19,
        "fullcodeline": "FATAL_FAIL(::chown(sourceDirectory.c_str(), userid, groupid));"
    },
    {
        "line": 20,
        "fullcodeline": "string sourcePath = string(sourceDirectory) + \"/sock\";"
    },
    {
        "line": 22,
        "fullcodeline": "source.set_name(sourcePath);"
    },
    {
        "line": 27,
        "fullcodeline": "*sourceName = sourcePath;"
    },
    {
        "line": 28,
        "fullcodeline": "LOG(INFO) << \"Creating pipe at \" << sourcePath;"
    },
    {
        "line": 31,
        "fullcodeline": "if (sourceName != nullptr) {"
    },
    {
        "line": 38,
        "fullcodeline": "return PortForwardSourceResponse();"
    },
    {
        "line": 44,
        "fullcodeline": "auto handler = shared_ptr<ForwardSourceHandler>(new ForwardSourceHandler("
    },
    {
        "line": 46,
        "fullcodeline": "FATAL_FAIL(::chmod(source.name().c_str(), S_IRUSR | S_IWUSR | S_IXUSR));"
    },
    {
        "line": 47,
        "fullcodeline": "FATAL_FAIL(::chown(source.name().c_str(), userid, groupid));"
    },
    {
        "line": 48,
        "fullcodeline": "sourceHandlers.push_back(handler);"
    },
    {
        "line": 16,
        "fullcodeline": "GetTempDirectory() + string(\"et_forward_sock_XXXXXX\");"
    },
    {
        "line": 23,
        "fullcodeline": "if (sourceName == nullptr) {"
    },
    {
        "line": 32,
        "fullcodeline": "STFATAL << \"Tried to create a port forward but with a place to put \""
    },
    {
        "line": 40,
        "fullcodeline": "if (userid < 0 || groupid < 0) {"
    },
    {
        "line": 49,
        "fullcodeline": "return PortForwardSourceResponse();"
    },
    {
        "line": 24,
        "fullcodeline": "STFATAL"
    },
    {
        "line": 36,
        "fullcodeline": "networkSocketHandler, source, pfsr.destination()));"
    },
    {
        "line": 41,
        "fullcodeline": "STFATAL"
    },
    {
        "line": 45,
        "fullcodeline": "pipeSocketHandler, source, pfsr.destination()));"
    }
]