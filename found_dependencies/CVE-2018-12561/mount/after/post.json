[
    {
        "line": 3,
        "fullcodeline": "if (details.isLocalFile()) {"
    },
    {
        "line": 6,
        "fullcodeline": "if (isConnected() || proc) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (!details.isLocalFile() && !details.isEmpty()) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (!cmd.isEmpty()) {"
    },
    {
        "line": 19,
        "fullcodeline": "bool needAskPass=!details.extraOptions.contains(\"IdentityFile=\");"
    },
    {
        "line": 41,
        "fullcodeline": "QString sshfs=Utils::findExe(\"sshfs\");"
    },
    {
        "line": 46,
        "fullcodeline": "cmd=Utils::findExe(\"setsid\");"
    },
    {
        "line": 70,
        "fullcodeline": "setStatusMessage(tr(\"Connecting...\"));"
    },
    {
        "line": 71,
        "fullcodeline": "proc=new QProcess(this);"
    },
    {
        "line": 72,
        "fullcodeline": "proc->setProperty(\"mount\", true);"
    },
    {
        "line": 80,
        "fullcodeline": "proc->start(cmd, args, QIODevice::ReadOnly);"
    },
    {
        "line": 42,
        "fullcodeline": "if (sshfs.isEmpty()) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (!cmd.isEmpty()) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (!askPass.isEmpty()) {"
    },
    {
        "line": 43,
        "fullcodeline": "emit error(tr(\"\\\"sshfs\\\" is not installed!\"));"
    },
    {
        "line": 48,
        "fullcodeline": "QString mp=mountPoint(details, true);"
    },
    {
        "line": 57,
        "fullcodeline": "args << sshfs << details.url.userName()+QChar('@')+details.url.host()+QChar(':')+details.url.path()<< QLatin1String(\"-p\")"
    },
    {
        "line": 75,
        "fullcodeline": "QProcessEnvironment env = QProcessEnvironment::systemEnvironment();"
    },
    {
        "line": 76,
        "fullcodeline": "env.insert(\"SSH_ASKPASS\", askPass);"
    },
    {
        "line": 77,
        "fullcodeline": "proc->setProcessEnvironment(env);"
    },
    {
        "line": 23,
        "fullcodeline": "if (Utils::KDE==Utils::currentDe()) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (askPass.isEmpty()) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (mp.isEmpty()) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (!QDir(mp).entryList(QDir::NoDot|QDir::NoDotDot|QDir::AllEntries|QDir::Hidden).isEmpty()) {"
    },
    {
        "line": 59,
        "fullcodeline": "<< QLatin1String(\"-o\") << QLatin1String(\"ServerAliveInterval=15\");"
    },
    {
        "line": 61,
        "fullcodeline": "if (!details.extraOptions.isEmpty()) {"
    },
    {
        "line": 65,
        "fullcodeline": "emit error(tr(\"\\\"sshfs\\\" is not installed!\").replace(\"sshfs\", \"setsid\")); // TODO: 2.4 use correct string!"
    },
    {
        "line": 24,
        "fullcodeline": "askPassList << QLatin1String(\"ksshaskpass\") << QLatin1String(\"ssh-askpass\") << QLatin1String(\"ssh-askpass-gnome\");"
    },
    {
        "line": 30,
        "fullcodeline": "askPass=Utils::findExe(ap);"
    },
    {
        "line": 37,
        "fullcodeline": "emit error(tr(\"No suitable ssh-askpass application installed! This is required for entering passwords.\"));"
    },
    {
        "line": 50,
        "fullcodeline": "emit error(\"Failed to determine mount point\"); // TODO: 2.4 make translatable. For now, error should never happen!"
    },
    {
        "line": 53,
        "fullcodeline": "emit error(tr(\"Mount point (\\\"%1\\\") is not empty!\").arg(mp));"
    },
    {
        "line": 62,
        "fullcodeline": "args << details.extraOptions.split(' ', QString::SkipEmptyParts);"
    },
    {
        "line": 26,
        "fullcodeline": "askPassList << QLatin1String(\"ssh-askpass-gnome\") << QLatin1String(\"ssh-askpass\") << QLatin1String(\"ksshaskpass\");"
    },
    {
        "line": 31,
        "fullcodeline": "if (!askPass.isEmpty()) {"
    },
    {
        "line": 58,
        "fullcodeline": "<< QString::number(details.url.port()) << mountPoint(details, true)"
    }
]