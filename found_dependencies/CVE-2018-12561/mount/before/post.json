[
    {
        "line": 3,
        "fullcodeline": "if (details.isLocalFile()) {"
    },
    {
        "line": 6,
        "fullcodeline": "if (isConnected() || proc) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (constSambaAvahiProtocol==details.url.scheme()) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (constSambaProtocol==details.url.scheme()) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (!details.isLocalFile() && !details.isEmpty()) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (!cmd.isEmpty()) {"
    },
    {
        "line": 14,
        "fullcodeline": "Details det=details;"
    },
    {
        "line": 15,
        "fullcodeline": "AvahiService *srv=Avahi::self()->getService(det.serviceName);"
    },
    {
        "line": 28,
        "fullcodeline": "det.url.setScheme(constSambaProtocol);"
    },
    {
        "line": 29,
        "fullcodeline": "det.url.setHost(srv->getHost());"
    },
    {
        "line": 30,
        "fullcodeline": "det.url.setPort(srv->getPort());"
    },
    {
        "line": 31,
        "fullcodeline": "mounter()->mount(det.url.toString(), mountPoint(details, true), getuid(), getgid(), getpid());"
    },
    {
        "line": 32,
        "fullcodeline": "setStatusMessage(tr(\"Connecting...\"));"
    },
    {
        "line": 33,
        "fullcodeline": "messageSent=true;"
    },
    {
        "line": 37,
        "fullcodeline": "Details det=details;"
    },
    {
        "line": 46,
        "fullcodeline": "mounter()->mount(det.url.toString(), mountPoint(details, true), getuid(), getgid(), getpid());"
    },
    {
        "line": 47,
        "fullcodeline": "setStatusMessage(tr(\"Connecting...\"));"
    },
    {
        "line": 48,
        "fullcodeline": "messageSent=true;"
    },
    {
        "line": 57,
        "fullcodeline": "bool needAskPass=!details.extraOptions.contains(\"IdentityFile=\");"
    },
    {
        "line": 79,
        "fullcodeline": "QString sshfs=Utils::findExe(\"sshfs\");"
    },
    {
        "line": 84,
        "fullcodeline": "cmd=Utils::findExe(\"setsid\");"
    },
    {
        "line": 108,
        "fullcodeline": "setStatusMessage(tr(\"Connecting...\"));"
    },
    {
        "line": 109,
        "fullcodeline": "proc=new QProcess(this);"
    },
    {
        "line": 110,
        "fullcodeline": "proc->setProperty(\"mount\", true);"
    },
    {
        "line": 118,
        "fullcodeline": "proc->start(cmd, args, QIODevice::ReadOnly);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!srv || srv->getHost().isEmpty() || 0==srv->getPort()) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (constPromptPassword==det.url.password()) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (constPromptPassword==det.url.password()) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (sshfs.isEmpty()) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (!cmd.isEmpty()) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (!askPass.isEmpty()) {"
    },
    {
        "line": 17,
        "fullcodeline": "emit error(tr(\"Failed to resolve connection details for %1\").arg(details.name));"
    },
    {
        "line": 21,
        "fullcodeline": "bool ok=false;"
    },
    {
        "line": 22,
        "fullcodeline": "QString passwd=InputDialog::getPassword(QString(), &ok, QApplication::activeWindow());"
    },
    {
        "line": 26,
        "fullcodeline": "det.url.setPassword(passwd);"
    },
    {
        "line": 39,
        "fullcodeline": "bool ok=false;"
    },
    {
        "line": 40,
        "fullcodeline": "QString passwd=InputDialog::getPassword(QString(), &ok, QApplication::activeWindow());"
    },
    {
        "line": 44,
        "fullcodeline": "det.url.setPassword(passwd);"
    },
    {
        "line": 81,
        "fullcodeline": "emit error(tr(\"\\\"sshfs\\\" is not installed!\"));"
    },
    {
        "line": 86,
        "fullcodeline": "QString mp=mountPoint(details, true);"
    },
    {
        "line": 95,
        "fullcodeline": "args << sshfs << details.url.userName()+QChar('@')+details.url.host()+QChar(':')+details.url.path()<< QLatin1String(\"-p\")"
    },
    {
        "line": 113,
        "fullcodeline": "QProcessEnvironment env = QProcessEnvironment::systemEnvironment();"
    },
    {
        "line": 114,
        "fullcodeline": "env.insert(\"SSH_ASKPASS\", askPass);"
    },
    {
        "line": 115,
        "fullcodeline": "proc->setProcessEnvironment(env);"
    },
    {
        "line": 23,
        "fullcodeline": "if (!ok) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (!ok) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (Utils::KDE==Utils::currentDe()) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (askPass.isEmpty()) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (mp.isEmpty()) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (!QDir(mp).entryList(QDir::NoDot|QDir::NoDotDot|QDir::AllEntries|QDir::Hidden).isEmpty()) {"
    },
    {
        "line": 97,
        "fullcodeline": "<< QLatin1String(\"-o\") << QLatin1String(\"ServerAliveInterval=15\");"
    },
    {
        "line": 99,
        "fullcodeline": "if (!details.extraOptions.isEmpty()) {"
    },
    {
        "line": 103,
        "fullcodeline": "emit error(tr(\"\\\"sshfs\\\" is not installed!\").replace(\"sshfs\", \"setsid\")); // TODO: 2.4 use correct string!"
    },
    {
        "line": 62,
        "fullcodeline": "askPassList << QLatin1String(\"ksshaskpass\") << QLatin1String(\"ssh-askpass\") << QLatin1String(\"ssh-askpass-gnome\");"
    },
    {
        "line": 68,
        "fullcodeline": "askPass=Utils::findExe(ap);"
    },
    {
        "line": 75,
        "fullcodeline": "emit error(tr(\"No suitable ssh-askpass application installed! This is required for entering passwords.\"));"
    },
    {
        "line": 88,
        "fullcodeline": "emit error(\"Failed to determine mount point\"); // TODO: 2.4 make translatable. For now, error should never happen!"
    },
    {
        "line": 91,
        "fullcodeline": "emit error(tr(\"Mount point (\\\"%1\\\") is not empty!\").arg(mp));"
    },
    {
        "line": 100,
        "fullcodeline": "args << details.extraOptions.split(' ', QString::SkipEmptyParts);"
    },
    {
        "line": 64,
        "fullcodeline": "askPassList << QLatin1String(\"ssh-askpass-gnome\") << QLatin1String(\"ssh-askpass\") << QLatin1String(\"ksshaskpass\");"
    },
    {
        "line": 69,
        "fullcodeline": "if (!askPass.isEmpty()) {"
    },
    {
        "line": 96,
        "fullcodeline": "<< QString::number(details.url.port()) << mountPoint(details, true)"
    }
]