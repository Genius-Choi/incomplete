[
    {
        "line": 3,
        "fullcodeline": "GF_XtraBox *ptr = (GF_XtraBox *)s;"
    },
    {
        "line": 6,
        "fullcodeline": "u32 prop_type = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "char *data=NULL, *data2=NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "ISOM_DECREASE_SIZE_NO_ERR(ptr, 8)"
    },
    {
        "line": 10,
        "fullcodeline": "s32 tag_size = gf_bs_read_u32(bs);"
    },
    {
        "line": 11,
        "fullcodeline": "u32 name_size = gf_bs_read_u32(bs);"
    },
    {
        "line": 14,
        "fullcodeline": "tag_size -= 8;"
    },
    {
        "line": 18,
        "fullcodeline": "ISOM_DECREASE_SIZE_NO_ERR(ptr, 10)"
    },
    {
        "line": 20,
        "fullcodeline": "ISOM_DECREASE_SIZE_NO_ERR(ptr, name_size)"
    },
    {
        "line": 21,
        "fullcodeline": "data = gf_malloc(sizeof(char) * (name_size+1));"
    },
    {
        "line": 22,
        "fullcodeline": "gf_bs_read_data(bs, data, name_size);"
    },
    {
        "line": 23,
        "fullcodeline": "data[name_size] = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "tag_size-=name_size;"
    },
    {
        "line": 26,
        "fullcodeline": "u32 flags = gf_bs_read_u32(bs);"
    },
    {
        "line": 27,
        "fullcodeline": "u32 prop_size = gf_bs_read_u32(bs);"
    },
    {
        "line": 28,
        "fullcodeline": "tag_size-=8;"
    },
    {
        "line": 45,
        "fullcodeline": "GF_SAFEALLOC(tag, GF_XtraTag)"
    },
    {
        "line": 46,
        "fullcodeline": "tag->flags = flags;"
    },
    {
        "line": 47,
        "fullcodeline": "tag->name = data;"
    },
    {
        "line": 48,
        "fullcodeline": "tag->prop_size = prop_size;"
    },
    {
        "line": 49,
        "fullcodeline": "tag->prop_value = data2;"
    },
    {
        "line": 50,
        "fullcodeline": "tag->prop_type = prop_type;"
    },
    {
        "line": 51,
        "fullcodeline": "gf_list_add(ptr->tags, tag);"
    },
    {
        "line": 12,
        "fullcodeline": "if (tag_size < 8) return GF_ISOM_INVALID_FILE;"
    },
    {
        "line": 15,
        "fullcodeline": "if ((tag_size>ptr->size) || (name_size>ptr->size)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (prop_size>4) {"
    },
    {
        "line": 31,
        "fullcodeline": "tag_size-=2;"
    },
    {
        "line": 32,
        "fullcodeline": "prop_type = gf_bs_read_u16(bs);"
    },
    {
        "line": 33,
        "fullcodeline": "prop_size -= 6;"
    },
    {
        "line": 34,
        "fullcodeline": "ISOM_DECREASE_SIZE_NO_ERR(ptr, prop_size)"
    },
    {
        "line": 36,
        "fullcodeline": "data2 = gf_malloc(sizeof(char) * (prop_size+3));"
    },
    {
        "line": 37,
        "fullcodeline": "gf_bs_read_data(bs, data2, prop_size);"
    },
    {
        "line": 38,
        "fullcodeline": "data2[prop_size] = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "data2[prop_size+1] = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "data2[prop_size+2] = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "tag_size-=prop_size;"
    },
    {
        "line": 54,
        "fullcodeline": "GF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[isom] invalid tag size in Xtra !\\n\"));"
    },
    {
        "line": 43,
        "fullcodeline": "prop_size = 0;"
    }
]