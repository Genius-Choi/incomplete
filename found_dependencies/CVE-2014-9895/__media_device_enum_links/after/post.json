[
    {
        "line": 6,
        "fullcodeline": "entity = find_entity(mdev, links->entity);"
    },
    {
        "line": 7,
        "fullcodeline": "if (entity == NULL)"
    },
    {
        "line": 8,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 13,
        "fullcodeline": "for (p = 0; p < entity->num_pads; p++) {"
    },
    {
        "line": 27,
        "fullcodeline": "for (l = 0, ulink = links->links; l < entity->num_links; l++) {"
    },
    {
        "line": 16,
        "fullcodeline": "memset(&pad, 0, sizeof(pad));"
    },
    {
        "line": 17,
        "fullcodeline": "media_device_kpad_to_upad(&entity->pads[p], &pad);"
    },
    {
        "line": 34,
        "fullcodeline": "memset(&link, 0, sizeof(link));"
    },
    {
        "line": 35,
        "fullcodeline": "media_device_kpad_to_upad(entity->links[l].source,"
    },
    {
        "line": 42,
        "fullcodeline": "ulink++;"
    },
    {
        "line": 18,
        "fullcodeline": "if (copy_to_user(&links->pads[p], &pad, sizeof(pad)))"
    },
    {
        "line": 31,
        "fullcodeline": "if (entity->links[l].source->entity != entity)"
    },
    {
        "line": 40,
        "fullcodeline": "if (copy_to_user(ulink, &link, sizeof(*ulink)))"
    },
    {
        "line": 19,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 41,
        "fullcodeline": "return -EFAULT;"
    }
]