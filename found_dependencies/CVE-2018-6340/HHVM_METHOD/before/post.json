[
    {
        "line": 4,
        "fullcodeline": "auto data = Native::data<MemcacheData>(this_);"
    },
    {
        "line": 8,
        "fullcodeline": "stats = memcached_stat(&data->m_memcache, nullptr, &ret);"
    },
    {
        "line": 13,
        "fullcodeline": "int server_count = memcached_server_count(&data->m_memcache);"
    },
    {
        "line": 39,
        "fullcodeline": "free(stats);"
    },
    {
        "line": 9,
        "fullcodeline": "if (ret != MEMCACHED_SUCCESS) {"
    },
    {
        "line": 17,
        "fullcodeline": "for (int server_id = 0; server_id < server_count; server_id++) {"
    },
    {
        "line": 19,
        "fullcodeline": "char stats_key[30] = {0};"
    },
    {
        "line": 22,
        "fullcodeline": "LMCD_SERVER_POSITION_INSTANCE_TYPE instance ="
    },
    {
        "line": 24,
        "fullcodeline": "const char *hostname = LMCD_SERVER_HOSTNAME(instance);"
    },
    {
        "line": 25,
        "fullcodeline": "in_port_t port = LMCD_SERVER_PORT(instance);"
    },
    {
        "line": 27,
        "fullcodeline": "stat = stats + server_id;"
    },
    {
        "line": 29,
        "fullcodeline": "Array server_stats = memcache_build_stats(&data->m_memcache, stat, &ret);"
    },
    {
        "line": 34,
        "fullcodeline": "key_len = snprintf(stats_key, sizeof(stats_key), \"%s:%d\", hostname, port);"
    },
    {
        "line": 36,
        "fullcodeline": "return_val.set(String(stats_key, key_len, CopyString), server_stats);"
    },
    {
        "line": 10,
        "fullcodeline": "return Array();"
    },
    {
        "line": 23,
        "fullcodeline": "memcached_server_instance_by_position(&data->m_memcache, server_id);"
    },
    {
        "line": 30,
        "fullcodeline": "if (ret != MEMCACHED_SUCCESS) {"
    }
]