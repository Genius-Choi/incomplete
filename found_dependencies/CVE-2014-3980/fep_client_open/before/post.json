[
    {
        "line": 24,
        "fullcodeline": "client->filter_running = false;"
    },
    {
        "line": 25,
        "fullcodeline": "client->messages = NULL;"
    },
    {
        "line": 27,
        "fullcodeline": "memset (&sun, 0, sizeof(struct sockaddr_un));"
    },
    {
        "line": 28,
        "fullcodeline": "sun.sun_family = AF_UNIX;"
    },
    {
        "line": 35,
        "fullcodeline": "memcpy (sun.sun_path, address, strlen (address));"
    },
    {
        "line": 39,
        "fullcodeline": "client->control = socket (AF_UNIX, SOCK_STREAM, 0);"
    },
    {
        "line": 46,
        "fullcodeline": "retval = connect (client->control,"
    },
    {
        "line": 8,
        "fullcodeline": "if (!address)"
    },
    {
        "line": 10,
        "fullcodeline": "if (!address)"
    },
    {
        "line": 13,
        "fullcodeline": "if (strlen (address) + 1 >= sizeof(sun.sun_path))"
    },
    {
        "line": 40,
        "fullcodeline": "if (client->control < 0)"
    },
    {
        "line": 49,
        "fullcodeline": "if (retval < 0)"
    },
    {
        "line": 9,
        "fullcodeline": "address = getenv (\"LIBFEP_CONTROL_SOCK\");"
    },
    {
        "line": 15,
        "fullcodeline": "fep_log (FEP_LOG_LEVEL_WARNING,"
    },
    {
        "line": 19,
        "fullcodeline": "free (address);"
    },
    {
        "line": 42,
        "fullcodeline": "free (client);"
    },
    {
        "line": 47,
        "fullcodeline": "(const struct sockaddr *) &sun,"
    },
    {
        "line": 51,
        "fullcodeline": "close (client->control);"
    },
    {
        "line": 52,
        "fullcodeline": "free (client);"
    },
    {
        "line": 17,
        "fullcodeline": "strlen (address),"
    }
]