[
    {
        "line": 8,
        "fullcodeline": "fd = socket (AF_UNIX, SOCK_STREAM, 0);"
    },
    {
        "line": 15,
        "fullcodeline": "path = create_socket_name (\"fep-XXXXXX/control\");"
    },
    {
        "line": 26,
        "fullcodeline": "memset (&sun, 0, sizeof(sun));"
    },
    {
        "line": 27,
        "fullcodeline": "sun.sun_family = AF_UNIX;"
    },
    {
        "line": 29,
        "fullcodeline": "memcpy (sun.sun_path, path, strlen (path));"
    },
    {
        "line": 48,
        "fullcodeline": "fep->server = fd;"
    },
    {
        "line": 49,
        "fullcodeline": "fep->control_socket_path = path;"
    },
    {
        "line": 9,
        "fullcodeline": "if (fd < 0)"
    },
    {
        "line": 16,
        "fullcodeline": "if (strlen (path) + 1 >= sizeof(sun.sun_path))"
    },
    {
        "line": 32,
        "fullcodeline": "if (bind (fd, (const struct sockaddr *) &sun, sun_len) < 0)"
    },
    {
        "line": 40,
        "fullcodeline": "if (listen (fd, 5) < 0)"
    },
    {
        "line": 11,
        "fullcodeline": "perror (\"socket\");"
    },
    {
        "line": 18,
        "fullcodeline": "fep_log (FEP_LOG_LEVEL_WARNING,"
    },
    {
        "line": 22,
        "fullcodeline": "free (path);"
    },
    {
        "line": 34,
        "fullcodeline": "perror (\"bind\");"
    },
    {
        "line": 35,
        "fullcodeline": "free (path);"
    },
    {
        "line": 36,
        "fullcodeline": "close (fd);"
    },
    {
        "line": 42,
        "fullcodeline": "perror (\"listen\");"
    },
    {
        "line": 43,
        "fullcodeline": "free (path);"
    },
    {
        "line": 44,
        "fullcodeline": "close (fd);"
    },
    {
        "line": 12,
        "fullcodeline": "return -1;"
    },
    {
        "line": 20,
        "fullcodeline": "strlen (path),"
    },
    {
        "line": 23,
        "fullcodeline": "return -1;"
    },
    {
        "line": 37,
        "fullcodeline": "return -1;"
    },
    {
        "line": 45,
        "fullcodeline": "return -1;"
    }
]