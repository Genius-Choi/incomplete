[
    {
        "line": 3,
        "fullcodeline": "struct session *sess = s->sess;"
    },
    {
        "line": 4,
        "fullcodeline": "struct http_txn *txn = s->txn;"
    },
    {
        "line": 10,
        "fullcodeline": "int is_cookie2 = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "htx = htxbuf(&res->buf);"
    },
    {
        "line": 14,
        "fullcodeline": "ctx.blk = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "int is_first = 1;"
    },
    {
        "line": 27,
        "fullcodeline": "txn->flags |= TX_SCK_PRESENT;"
    },
    {
        "line": 73,
        "fullcodeline": "hdr_beg = ctx.value.ptr;"
    },
    {
        "line": 74,
        "fullcodeline": "hdr_end = hdr_beg + ctx.value.len;"
    },
    {
        "line": 18,
        "fullcodeline": "if (is_cookie2 || !http_find_header(htx, ist(\"Set-Cookie\"), &ctx, 1)) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (s->be->cookie_name == NULL && sess->fe->capture_name == NULL)"
    },
    {
        "line": 75,
        "fullcodeline": "for (prev = hdr_beg; prev < hdr_end; prev = next) {"
    },
    {
        "line": 21,
        "fullcodeline": "is_cookie2 = 1;"
    },
    {
        "line": 80,
        "fullcodeline": "att_beg = prev;"
    },
    {
        "line": 83,
        "fullcodeline": "is_first = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "equal = att_end = att_beg;"
    },
    {
        "line": 195,
        "fullcodeline": "srv = objt_server(s->target);"
    },
    {
        "line": 19,
        "fullcodeline": "if (!http_find_header(htx, ist(\"Set-Cookie2\"), &ctx, 1))"
    },
    {
        "line": 81,
        "fullcodeline": "if (!is_first)"
    },
    {
        "line": 85,
        "fullcodeline": "while (att_beg < hdr_end && HTTP_IS_SPHT(*att_beg))"
    },
    {
        "line": 86,
        "fullcodeline": "att_beg++;"
    },
    {
        "line": 93,
        "fullcodeline": "while (equal < hdr_end) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (equal < hdr_end && *equal == '=') {"
    },
    {
        "line": 125,
        "fullcodeline": "if (next < hdr_end) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (equal == val_end)"
    },
    {
        "line": 148,
        "fullcodeline": "if (unlikely(att_end != equal || val_beg > equal + 1)) {"
    },
    {
        "line": 179,
        "fullcodeline": "if (sess->fe->capture_name != NULL &&"
    },
    {
        "line": 197,
        "fullcodeline": "if (!(s->flags & SF_IGNORE_PRST) &&"
    },
    {
        "line": 82,
        "fullcodeline": "att_beg++;"
    },
    {
        "line": 98,
        "fullcodeline": "att_end = equal;"
    },
    {
        "line": 108,
        "fullcodeline": "val_beg = equal + 1;"
    },
    {
        "line": 113,
        "fullcodeline": "next = http_find_cookie_value_end(val_beg, hdr_end);"
    },
    {
        "line": 116,
        "fullcodeline": "val_end = next;"
    },
    {
        "line": 149,
        "fullcodeline": "int stripped_before = 0;"
    },
    {
        "line": 150,
        "fullcodeline": "int stripped_after = 0;"
    },
    {
        "line": 166,
        "fullcodeline": "val_end      += stripped_before;"
    },
    {
        "line": 167,
        "fullcodeline": "next         += stripped_before;"
    },
    {
        "line": 168,
        "fullcodeline": "hdr_end      += stripped_before;"
    },
    {
        "line": 170,
        "fullcodeline": "htx_change_blk_value_len(htx, ctx.blk, hdr_end - hdr_beg);"
    },
    {
        "line": 171,
        "fullcodeline": "ctx.value.len = hdr_end - hdr_beg;"
    },
    {
        "line": 182,
        "fullcodeline": "memcmp(att_beg, sess->fe->capture_name, sess->fe->capture_namelen) == 0) {"
    },
    {
        "line": 183,
        "fullcodeline": "int log_len = val_end - att_beg;"
    },
    {
        "line": 199,
        "fullcodeline": "(memcmp(att_beg, s->be->cookie_name, att_end - att_beg) == 0)) {"
    },
    {
        "line": 201,
        "fullcodeline": "txn->flags &= ~TX_SCK_MASK;"
    },
    {
        "line": 202,
        "fullcodeline": "txn->flags |= TX_SCK_FOUND;"
    },
    {
        "line": 94,
        "fullcodeline": "if (*equal == '=' || *equal == ';' || (is_cookie2 && *equal == ','))"
    },
    {
        "line": 96,
        "fullcodeline": "if (HTTP_IS_SPHT(*equal++))"
    },
    {
        "line": 109,
        "fullcodeline": "while (val_beg < hdr_end && HTTP_IS_SPHT(*val_beg))"
    },
    {
        "line": 110,
        "fullcodeline": "val_beg++;"
    },
    {
        "line": 117,
        "fullcodeline": "while (val_end > val_beg && HTTP_IS_SPHT(*(val_end - 1)))"
    },
    {
        "line": 118,
        "fullcodeline": "val_end--;"
    },
    {
        "line": 122,
        "fullcodeline": "val_beg = val_end = next = equal;"
    },
    {
        "line": 152,
        "fullcodeline": "if (att_end != equal) {"
    },
    {
        "line": 159,
        "fullcodeline": "if (val_beg > equal + 1) {"
    },
    {
        "line": 181,
        "fullcodeline": "(val_end - att_beg >= sess->fe->capture_namelen) &&"
    },
    {
        "line": 184,
        "fullcodeline": "if ((txn->srv_cookie = pool_alloc(pool_head_capture)) == NULL) {"
    },
    {
        "line": 198,
        "fullcodeline": "(att_end - att_beg == s->be->cookie_len) && (s->be->cookie_name != NULL) &&"
    },
    {
        "line": 209,
        "fullcodeline": "if (s->be->ck_opts & PR_CK_PSV) {"
    },
    {
        "line": 132,
        "fullcodeline": "next = http_find_hdr_value_end(next, hdr_end);"
    },
    {
        "line": 153,
        "fullcodeline": "memmove(att_end, equal, hdr_end - equal);"
    },
    {
        "line": 154,
        "fullcodeline": "stripped_before = (att_end - equal);"
    },
    {
        "line": 155,
        "fullcodeline": "equal   += stripped_before;"
    },
    {
        "line": 156,
        "fullcodeline": "val_beg += stripped_before;"
    },
    {
        "line": 160,
        "fullcodeline": "memmove(equal + 1, val_beg, hdr_end + stripped_before - val_beg);"
    },
    {
        "line": 161,
        "fullcodeline": "stripped_after = (equal + 1) - val_beg;"
    },
    {
        "line": 162,
        "fullcodeline": "val_beg += stripped_after;"
    },
    {
        "line": 163,
        "fullcodeline": "stripped_before += stripped_after;"
    },
    {
        "line": 180,
        "fullcodeline": "txn->srv_cookie == NULL &&"
    },
    {
        "line": 185,
        "fullcodeline": "ha_alert(\"HTTP logging : out of memory.\\n\");"
    },
    {
        "line": 134,
        "fullcodeline": "next = hdr_end;"
    },
    {
        "line": 190,
        "fullcodeline": "memcpy(txn->srv_cookie, att_beg, log_len);"
    },
    {
        "line": 191,
        "fullcodeline": "txn->srv_cookie[log_len] = 0;"
    },
    {
        "line": 188,
        "fullcodeline": "if (log_len > sess->fe->capture_len)"
    },
    {
        "line": 214,
        "fullcodeline": "else if ((srv && (s->be->ck_opts & PR_CK_INS)) ||"
    },
    {
        "line": 189,
        "fullcodeline": "log_len = sess->fe->capture_len;"
    },
    {
        "line": 215,
        "fullcodeline": "((s->flags & SF_DIRECT) && (s->be->ck_opts & PR_CK_IND))) {"
    },
    {
        "line": 229,
        "fullcodeline": "txn->flags &= ~TX_SCK_MASK;"
    },
    {
        "line": 230,
        "fullcodeline": "txn->flags |= TX_SCK_DELETED;"
    },
    {
        "line": 217,
        "fullcodeline": "if (prev == hdr_beg && next == hdr_end) {"
    },
    {
        "line": 219,
        "fullcodeline": "http_remove_header(htx, &ctx);"
    },
    {
        "line": 233,
        "fullcodeline": "else if (srv && srv->cookie && (s->be->ck_opts & PR_CK_RW)) {"
    },
    {
        "line": 225,
        "fullcodeline": "int delta = http_del_hdr_value(hdr_beg, hdr_end, &prev, next);"
    },
    {
        "line": 226,
        "fullcodeline": "next      = prev;"
    },
    {
        "line": 227,
        "fullcodeline": "hdr_end  += delta;"
    },
    {
        "line": 239,
        "fullcodeline": "ctx.value = ist2(val_beg, val_end - val_beg);"
    },
    {
        "line": 240,
        "fullcodeline": "ctx.lws_before = ctx.lws_after = 0;"
    },
    {
        "line": 241,
        "fullcodeline": "http_replace_header_value(htx, &ctx, ist2(srv->cookie, srv->cklen));"
    },
    {
        "line": 242,
        "fullcodeline": "delta     = srv->cklen - (val_end - val_beg);"
    },
    {
        "line": 243,
        "fullcodeline": "sliding   = (ctx.value.ptr - val_beg);"
    },
    {
        "line": 244,
        "fullcodeline": "hdr_beg  += sliding;"
    },
    {
        "line": 245,
        "fullcodeline": "val_beg  += sliding;"
    },
    {
        "line": 246,
        "fullcodeline": "next     += sliding + delta;"
    },
    {
        "line": 247,
        "fullcodeline": "hdr_end  += sliding + delta;"
    },
    {
        "line": 249,
        "fullcodeline": "txn->flags &= ~TX_SCK_MASK;"
    },
    {
        "line": 250,
        "fullcodeline": "txn->flags |= TX_SCK_REPLACED;"
    },
    {
        "line": 252,
        "fullcodeline": "else if (srv && srv->cookie && (s->be->ck_opts & PR_CK_PFX)) {"
    },
    {
        "line": 257,
        "fullcodeline": "ctx.value = ist2(val_beg, 0);"
    },
    {
        "line": 258,
        "fullcodeline": "ctx.lws_before = ctx.lws_after = 0;"
    },
    {
        "line": 259,
        "fullcodeline": "http_replace_header_value(htx, &ctx, ist2(srv->cookie, srv->cklen + 1));"
    },
    {
        "line": 260,
        "fullcodeline": "delta     = srv->cklen + 1;"
    },
    {
        "line": 261,
        "fullcodeline": "sliding   = (ctx.value.ptr - val_beg);"
    },
    {
        "line": 262,
        "fullcodeline": "hdr_beg  += sliding;"
    },
    {
        "line": 263,
        "fullcodeline": "val_beg  += sliding;"
    },
    {
        "line": 264,
        "fullcodeline": "next     += sliding + delta;"
    },
    {
        "line": 265,
        "fullcodeline": "hdr_end  += sliding + delta;"
    },
    {
        "line": 267,
        "fullcodeline": "val_beg[srv->cklen] = COOKIE_DELIM;"
    },
    {
        "line": 268,
        "fullcodeline": "txn->flags &= ~TX_SCK_MASK;"
    },
    {
        "line": 269,
        "fullcodeline": "txn->flags |= TX_SCK_REPLACED;"
    }
]