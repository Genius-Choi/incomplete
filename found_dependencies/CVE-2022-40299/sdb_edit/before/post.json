[
    {
        "line": 3,
        "fullcodeline": "char * filename = omStrDup(\"/tmp/sd000000\");"
    },
    {
        "line": 4,
        "fullcodeline": "sprintf(filename+7,\"%d\",getpid());"
    },
    {
        "line": 5,
        "fullcodeline": "FILE *fp=fopen(filename,\"w\");"
    },
    {
        "line": 86,
        "fullcodeline": "si_unlink(filename);"
    },
    {
        "line": 87,
        "fullcodeline": "omFree(filename);"
    },
    {
        "line": 6,
        "fullcodeline": "if (fp==NULL)"
    },
    {
        "line": 12,
        "fullcodeline": "if (pi->language!= LANG_SINGULAR)"
    },
    {
        "line": 8,
        "fullcodeline": "Print(\"cannot open %s\\n\",filename);"
    },
    {
        "line": 9,
        "fullcodeline": "omFree(filename);"
    },
    {
        "line": 14,
        "fullcodeline": "Print(\"cannot edit type %d\\n\",pi->language);"
    },
    {
        "line": 15,
        "fullcodeline": "fclose(fp);"
    },
    {
        "line": 16,
        "fullcodeline": "fp=NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "const char *editor=getenv(\"EDITOR\");"
    },
    {
        "line": 25,
        "fullcodeline": "editor=omStrDup(editor);"
    },
    {
        "line": 40,
        "fullcodeline": "fwrite(pi->data.s.body,1,strlen(pi->data.s.body),fp);"
    },
    {
        "line": 41,
        "fullcodeline": "fclose(fp);"
    },
    {
        "line": 43,
        "fullcodeline": "int pid=fork();"
    },
    {
        "line": 68,
        "fullcodeline": "fp=fopen(filename,\"r\");"
    },
    {
        "line": 21,
        "fullcodeline": "if (editor==NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "if (editor==NULL)"
    },
    {
        "line": 27,
        "fullcodeline": "if (pi->data.s.body==NULL)"
    },
    {
        "line": 44,
        "fullcodeline": "if (pid!=0)"
    },
    {
        "line": 69,
        "fullcodeline": "if (fp==NULL)"
    },
    {
        "line": 22,
        "fullcodeline": "editor=getenv(\"VISUAL\");"
    },
    {
        "line": 24,
        "fullcodeline": "editor=\"vi\";"
    },
    {
        "line": 29,
        "fullcodeline": "iiGetLibProcBuffer(pi);"
    },
    {
        "line": 46,
        "fullcodeline": "si_wait(&pid);"
    },
    {
        "line": 71,
        "fullcodeline": "Print(\"cannot read from %s\\n\",filename);"
    },
    {
        "line": 30,
        "fullcodeline": "if (pi->data.s.body==NULL)"
    },
    {
        "line": 75,
        "fullcodeline": "fseek(fp,0L,SEEK_END);"
    },
    {
        "line": 76,
        "fullcodeline": "long len=ftell(fp);"
    },
    {
        "line": 77,
        "fullcodeline": "fseek(fp,0L,SEEK_SET);"
    },
    {
        "line": 79,
        "fullcodeline": "omFree((ADDRESS)pi->data.s.body);"
    },
    {
        "line": 80,
        "fullcodeline": "pi->data.s.body=(char *)omAlloc((int)len+1);"
    },
    {
        "line": 81,
        "fullcodeline": "myfread( pi->data.s.body, len, 1, fp);"
    },
    {
        "line": 82,
        "fullcodeline": "pi->data.s.body[len]='\\0';"
    },
    {
        "line": 83,
        "fullcodeline": "fclose(fp);"
    },
    {
        "line": 32,
        "fullcodeline": "PrintS(\"cannot get the procedure body\\n\");"
    },
    {
        "line": 33,
        "fullcodeline": "fclose(fp);"
    },
    {
        "line": 34,
        "fullcodeline": "si_unlink(filename);"
    },
    {
        "line": 35,
        "fullcodeline": "omFree(filename);"
    },
    {
        "line": 48,
        "fullcodeline": "else if(pid==0)"
    },
    {
        "line": 61,
        "fullcodeline": "exit(0);"
    },
    {
        "line": 50,
        "fullcodeline": "if (strchr(editor,' ')==NULL)"
    },
    {
        "line": 65,
        "fullcodeline": "PrintS(\"cannot fork\\n\");"
    },
    {
        "line": 52,
        "fullcodeline": "execlp(editor,editor,filename,NULL);"
    },
    {
        "line": 53,
        "fullcodeline": "Print(\"cannot exec %s\\n\",editor);"
    },
    {
        "line": 57,
        "fullcodeline": "char *p=(char *)omAlloc(strlen(editor)+strlen(filename)+2);"
    },
    {
        "line": 58,
        "fullcodeline": "sprintf(p,\"%s %s\",editor,filename);"
    },
    {
        "line": 59,
        "fullcodeline": "system(p);"
    }
]