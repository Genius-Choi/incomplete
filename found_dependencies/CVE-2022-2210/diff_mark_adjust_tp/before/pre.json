[
    {
        "line": 16,
        "fullcodeline": "linenr_T\tlnum_deleted = line1;\t// lnum of remaining deletion"
    },
    {
        "line": 48,
        "fullcodeline": "dprev = NULL;"
    },
    {
        "line": 49,
        "fullcodeline": "dp = tp->tp_first_diff;"
    },
    {
        "line": 221,
        "fullcodeline": "dprev = NULL;"
    },
    {
        "line": 222,
        "fullcodeline": "dp = tp->tp_first_diff;"
    },
    {
        "line": 19,
        "fullcodeline": "if (diff_internal())"
    },
    {
        "line": 29,
        "fullcodeline": "if (line2 == MAXLNUM)"
    },
    {
        "line": 223,
        "fullcodeline": "while (dp != NULL)"
    },
    {
        "line": 248,
        "fullcodeline": "if (tp == curtab)"
    },
    {
        "line": 25,
        "fullcodeline": "tp->tp_diff_invalid = TRUE;"
    },
    {
        "line": 26,
        "fullcodeline": "tp->tp_diff_update = TRUE;"
    },
    {
        "line": 32,
        "fullcodeline": "inserted = amount;"
    },
    {
        "line": 33,
        "fullcodeline": "deleted = 0;"
    },
    {
        "line": 96,
        "fullcodeline": "last = dp->df_lnum[idx] + dp->df_count[idx] - 1;"
    },
    {
        "line": 251,
        "fullcodeline": "need_diff_redraw = TRUE;"
    },
    {
        "line": 256,
        "fullcodeline": "diff_need_scrollbind = TRUE;"
    },
    {
        "line": 55,
        "fullcodeline": "if ((dp == NULL || dp->df_lnum[idx] - 1 > line2"
    },
    {
        "line": 81,
        "fullcodeline": "if (dp == NULL)"
    },
    {
        "line": 99,
        "fullcodeline": "if (last >= line1 - 1)"
    },
    {
        "line": 203,
        "fullcodeline": "if (dprev != NULL && dprev->df_lnum[idx] + dprev->df_count[idx]"
    },
    {
        "line": 226,
        "fullcodeline": "for (i = 0; i < DB_COUNT; ++i)"
    },
    {
        "line": 229,
        "fullcodeline": "if (i == DB_COUNT)"
    },
    {
        "line": 35,
        "fullcodeline": "else if (amount_after > 0)"
    },
    {
        "line": 59,
        "fullcodeline": "&& !diff_busy)"
    },
    {
        "line": 61,
        "fullcodeline": "dnext = diff_alloc_new(tp, dprev, dp);"
    },
    {
        "line": 65,
        "fullcodeline": "dnext->df_lnum[idx] = line1;"
    },
    {
        "line": 66,
        "fullcodeline": "dnext->df_count[idx] = inserted;"
    },
    {
        "line": 209,
        "fullcodeline": "dprev->df_next = dp->df_next;"
    },
    {
        "line": 210,
        "fullcodeline": "vim_free(dp);"
    },
    {
        "line": 211,
        "fullcodeline": "dp = dprev->df_next;"
    },
    {
        "line": 231,
        "fullcodeline": "dnext = dp->df_next;"
    },
    {
        "line": 233,
        "fullcodeline": "dp = dnext;"
    },
    {
        "line": 38,
        "fullcodeline": "inserted = amount_after;"
    },
    {
        "line": 39,
        "fullcodeline": "deleted = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "&& (dprev == NULL"
    },
    {
        "line": 62,
        "fullcodeline": "if (dnext == NULL)"
    },
    {
        "line": 67,
        "fullcodeline": "for (i = 0; i < DB_COUNT; ++i)"
    },
    {
        "line": 103,
        "fullcodeline": "if (dp->df_lnum[idx] - (deleted + inserted != 0) > line2)"
    },
    {
        "line": 206,
        "fullcodeline": "for (i = 0; i < DB_COUNT; ++i)"
    },
    {
        "line": 216,
        "fullcodeline": "dprev = dp;"
    },
    {
        "line": 217,
        "fullcodeline": "dp = dp->df_next;"
    },
    {
        "line": 227,
        "fullcodeline": "if (tp->tp_diffbuf[i] != NULL && dp->df_count[i] != 0)"
    },
    {
        "line": 234,
        "fullcodeline": "if (dprev == NULL)"
    },
    {
        "line": 242,
        "fullcodeline": "dprev = dp;"
    },
    {
        "line": 243,
        "fullcodeline": "dp = dp->df_next;"
    },
    {
        "line": 44,
        "fullcodeline": "inserted = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "deleted = -amount_after;"
    },
    {
        "line": 56,
        "fullcodeline": "|| (line2 == MAXLNUM && dp->df_lnum[idx] > line1))"
    },
    {
        "line": 58,
        "fullcodeline": "|| dprev->df_lnum[idx] + dprev->df_count[idx] < line1)"
    },
    {
        "line": 68,
        "fullcodeline": "if (tp->tp_diffbuf[i] != NULL && i != idx)"
    },
    {
        "line": 107,
        "fullcodeline": "dp->df_lnum[idx] += amount_after;"
    },
    {
        "line": 207,
        "fullcodeline": "if (tp->tp_diffbuf[i] != NULL)"
    },
    {
        "line": 235,
        "fullcodeline": "tp->tp_first_diff = dnext;"
    },
    {
        "line": 76,
        "fullcodeline": "dnext->df_count[i] = deleted;"
    },
    {
        "line": 105,
        "fullcodeline": "if (amount_after == 0)"
    },
    {
        "line": 111,
        "fullcodeline": "check_unchanged = FALSE;"
    },
    {
        "line": 208,
        "fullcodeline": "dprev->df_count[i] += dp->df_count[i];"
    },
    {
        "line": 237,
        "fullcodeline": "dprev->df_next = dnext;"
    },
    {
        "line": 70,
        "fullcodeline": "if (dprev == NULL)"
    },
    {
        "line": 114,
        "fullcodeline": "if (deleted > 0)"
    },
    {
        "line": 71,
        "fullcodeline": "dnext->df_lnum[i] = line1;"
    },
    {
        "line": 198,
        "fullcodeline": "diff_check_unchanged(tp, dp);"
    },
    {
        "line": 73,
        "fullcodeline": "dnext->df_lnum[i] = line1"
    },
    {
        "line": 116,
        "fullcodeline": "if (dp->df_lnum[idx] >= line1)"
    },
    {
        "line": 174,
        "fullcodeline": "for (i = 0; i < DB_COUNT; ++i)"
    },
    {
        "line": 118,
        "fullcodeline": "off = dp->df_lnum[idx] - lnum_deleted;"
    },
    {
        "line": 143,
        "fullcodeline": "dp->df_lnum[idx] = line1;"
    },
    {
        "line": 175,
        "fullcodeline": "if (tp->tp_diffbuf[i] != NULL && i != idx)"
    },
    {
        "line": 183,
        "fullcodeline": "if (dp->df_lnum[idx] <= line1)"
    },
    {
        "line": 75,
        "fullcodeline": "- (dprev->df_lnum[idx] + dprev->df_count[idx]);"
    },
    {
        "line": 119,
        "fullcodeline": "if (last <= line2)"
    },
    {
        "line": 147,
        "fullcodeline": "off = 0;"
    },
    {
        "line": 177,
        "fullcodeline": "dp->df_lnum[i] -= off;"
    },
    {
        "line": 178,
        "fullcodeline": "dp->df_count[i] += n;"
    },
    {
        "line": 186,
        "fullcodeline": "dp->df_count[idx] += inserted;"
    },
    {
        "line": 187,
        "fullcodeline": "check_unchanged = TRUE;"
    },
    {
        "line": 74,
        "fullcodeline": "+ (dprev->df_lnum[i] + dprev->df_count[i])"
    },
    {
        "line": 134,
        "fullcodeline": "dp->df_count[idx] = 0;"
    },
    {
        "line": 148,
        "fullcodeline": "if (last < line2)"
    },
    {
        "line": 191,
        "fullcodeline": "dp->df_lnum[idx] += inserted;"
    },
    {
        "line": 122,
        "fullcodeline": "if (dp->df_next != NULL"
    },
    {
        "line": 139,
        "fullcodeline": "n = off;"
    },
    {
        "line": 140,
        "fullcodeline": "dp->df_count[idx] -= line2 - dp->df_lnum[idx] + 1;"
    },
    {
        "line": 141,
        "fullcodeline": "check_unchanged = TRUE;"
    },
    {
        "line": 151,
        "fullcodeline": "dp->df_count[idx] -= last - lnum_deleted + 1;"
    },
    {
        "line": 164,
        "fullcodeline": "check_unchanged = TRUE;"
    },
    {
        "line": 123,
        "fullcodeline": "&& dp->df_next->df_lnum[idx] - 1 <= line2)"
    },
    {
        "line": 127,
        "fullcodeline": "n = dp->df_next->df_lnum[idx] - lnum_deleted;"
    },
    {
        "line": 128,
        "fullcodeline": "deleted -= n;"
    },
    {
        "line": 129,
        "fullcodeline": "n -= dp->df_count[idx];"
    },
    {
        "line": 130,
        "fullcodeline": "lnum_deleted = dp->df_next->df_lnum[idx];"
    },
    {
        "line": 152,
        "fullcodeline": "if (dp->df_next != NULL"
    },
    {
        "line": 169,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 170,
        "fullcodeline": "dp->df_count[idx] -= deleted;"
    },
    {
        "line": 133,
        "fullcodeline": "n = deleted - dp->df_count[idx];"
    },
    {
        "line": 153,
        "fullcodeline": "&& dp->df_next->df_lnum[idx] - 1 <= line2)"
    },
    {
        "line": 157,
        "fullcodeline": "n = dp->df_next->df_lnum[idx] - 1 - last;"
    },
    {
        "line": 158,
        "fullcodeline": "deleted -= dp->df_next->df_lnum[idx]"
    },
    {
        "line": 160,
        "fullcodeline": "lnum_deleted = dp->df_next->df_lnum[idx];"
    },
    {
        "line": 163,
        "fullcodeline": "n = line2 - last;"
    }
]