[
    {
        "line": 5,
        "fullcodeline": "struct http_packet_t *pkt = packet_new(msg);"
    },
    {
        "line": 11,
        "fullcodeline": "size_t want_size = packet_pending_bytes(pkt);"
    },
    {
        "line": 43,
        "fullcodeline": "NOTE(\"TCP: Received %lu bytes\", pkt->filled_size);"
    },
    {
        "line": 6,
        "fullcodeline": "if (pkt == NULL) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (want_size == 0) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (pkt != NULL)"
    },
    {
        "line": 13,
        "fullcodeline": "NOTE(\"TCP: Got %lu from spare buffer\", pkt->filled_size);"
    },
    {
        "line": 17,
        "fullcodeline": "while (want_size != 0 && !msg->is_completed) {"
    },
    {
        "line": 18,
        "fullcodeline": "NOTE(\"TCP: Getting %d bytes\", want_size);"
    },
    {
        "line": 19,
        "fullcodeline": "uint8_t *subbuffer = pkt->buffer + pkt->filled_size;"
    },
    {
        "line": 20,
        "fullcodeline": "ssize_t gotten_size = recv(tcp->sd, subbuffer, want_size, 0);"
    },
    {
        "line": 27,
        "fullcodeline": "NOTE(\"TCP: Got %d bytes\", gotten_size);"
    },
    {
        "line": 38,
        "fullcodeline": "packet_mark_received(pkt, (unsigned) gotten_size);"
    },
    {
        "line": 39,
        "fullcodeline": "want_size = packet_pending_bytes(pkt);"
    },
    {
        "line": 40,
        "fullcodeline": "NOTE(\"TCP: Want more %d bytes; Message %scompleted\", want_size, msg->is_completed ? \"\" : \"not \");"
    },
    {
        "line": 21,
        "fullcodeline": "if (gotten_size < 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (gotten_size == 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "int errno_saved = errno;"
    },
    {
        "line": 24,
        "fullcodeline": "strerror(errno_saved));"
    },
    {
        "line": 30,
        "fullcodeline": "if (pkt->filled_size == 0) {"
    }
]