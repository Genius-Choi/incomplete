[
    {
        "line": 9,
        "fullcodeline": "char *pattern = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "memset(&val, 0, sizeof(pv_value_t));"
    },
    {
        "line": 27,
        "fullcodeline": "val.flags = PV_VAL_INT|PV_TYPE_INT;"
    },
    {
        "line": 30,
        "fullcodeline": "lock_start_read( partition->lock );"
    },
    {
        "line": 11,
        "fullcodeline": "if (!(ip = str2ip(_ip)) && !(ip = str2ip6(_ip))) {"
    },
    {
        "line": 32,
        "fullcodeline": "for(list = (*partition->data)->sets ; list!= NULL; list= list->next) {"
    },
    {
        "line": 88,
        "fullcodeline": "return -1;"
    },
    {
        "line": 12,
        "fullcodeline": "LM_ERR(\"IP val is not IP <%.*s>\\n\",val.rs.len,val.rs.s);"
    },
    {
        "line": 17,
        "fullcodeline": "pattern = pkg_malloc(pattern_s->len + 1);"
    },
    {
        "line": 22,
        "fullcodeline": "memcpy(pattern, pattern_s->s, pattern_s->len);"
    },
    {
        "line": 23,
        "fullcodeline": "pattern[pattern_s->len] = '\\0';"
    },
    {
        "line": 13,
        "fullcodeline": "return -1;"
    },
    {
        "line": 18,
        "fullcodeline": "if (!pattern) {"
    },
    {
        "line": 33,
        "fullcodeline": "if ((set == -1) || (set == list->id)) {"
    },
    {
        "line": 20,
        "fullcodeline": "return -1;"
    },
    {
        "line": 35,
        "fullcodeline": "for(j=0; j<list->nr; j++) {"
    },
    {
        "line": 37,
        "fullcodeline": "for(k=0 ; k<list->dlist[j].ips_cnt ; k++ ) {"
    },
    {
        "line": 38,
        "fullcodeline": "if ( (list->dlist[j].ports[k]==0 || port==0"
    },
    {
        "line": 40,
        "fullcodeline": "ip_addr_cmp( ip, &list->dlist[j].ips[k]) ) {"
    },
    {
        "line": 39,
        "fullcodeline": "|| port==list->dlist[j].ports[k]) &&"
    },
    {
        "line": 60,
        "fullcodeline": "if (partition->attrs_avp_name>= 0) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (partition->script_attrs_avp_name>= 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (active_only && !dst_is_active(list->dlist[j]) )"
    },
    {
        "line": 51,
        "fullcodeline": "if(set==-1 && ds_setid_pvname.s!=0) {"
    },
    {
        "line": 52,
        "fullcodeline": "val.ri = list->id;"
    },
    {
        "line": 61,
        "fullcodeline": "avp_val.s = list->dlist[j].attrs;"
    },
    {
        "line": 68,
        "fullcodeline": "avp_val.s = list->dlist[j].script_attrs;"
    },
    {
        "line": 46,
        "fullcodeline": "if (!list->dlist[j].attrs.s)"
    },
    {
        "line": 48,
        "fullcodeline": "if (fnmatch(pattern, list->dlist[j].attrs.s, FNM_PERIOD) != 0)"
    },
    {
        "line": 53,
        "fullcodeline": "if(pv_set_value(_m, &ds_setid_pv,"
    },
    {
        "line": 62,
        "fullcodeline": "if(add_avp(AVP_VAL_STR|partition->attrs_avp_type,"
    },
    {
        "line": 69,
        "fullcodeline": "if(add_avp(AVP_VAL_STR|partition->script_attrs_avp_type,"
    },
    {
        "line": 54,
        "fullcodeline": "(int)EQ_T, &val)<0)"
    }
]