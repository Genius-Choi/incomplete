[
    {
        "line": 2,
        "fullcodeline": "_total_req_size += read_size;"
    },
    {
        "line": 7,
        "fullcodeline": "LOG_DEBUG(\"read from client: size:%d, content:%.4096s\", read_size, read_buffer);"
    },
    {
        "line": 8,
        "fullcodeline": "ssize_t nparsed = http_parser_execute(&_parser, &_settings, read_buffer, read_size);"
    },
    {
        "line": 3,
        "fullcodeline": "if (_total_req_size > MAX_REQ_SIZE) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (nparsed != read_size) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (_parse_part != PARSE_REQ_OVER) {"
    },
    {
        "line": 4,
        "fullcodeline": "LOG_INFO(\"TOO BIG REQUEST WE WILL REFUSE IT! MAX_REQ_SIZE:%d\", MAX_REQ_SIZE);"
    },
    {
        "line": 10,
        "fullcodeline": "std::string err_msg = \"unkonw\";"
    },
    {
        "line": 14,
        "fullcodeline": "LOG_ERROR(\"parse request error, nparsed:%jd, input size:%d! msg:%s\","
    },
    {
        "line": 5,
        "fullcodeline": "return -1;"
    },
    {
        "line": 15,
        "fullcodeline": "nparsed, read_size, err_msg.c_str());"
    },
    {
        "line": 16,
        "fullcodeline": "return -1;"
    },
    {
        "line": 12,
        "fullcodeline": "err_msg = http_errno_description(HTTP_PARSER_ERRNO(&_parser));"
    }
]