[
    {
        "line": 2,
        "fullcodeline": "EpollContext *epoll_context = (EpollContext *) event.data.ptr;"
    },
    {
        "line": 7,
        "fullcodeline": "int fd = epoll_context->fd;"
    },
    {
        "line": 9,
        "fullcodeline": "int ret = _watcher->on_readable(_epollfd, event);"
    },
    {
        "line": 3,
        "fullcodeline": "if (epoll_context == NULL) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (ret == READ_CLOSE) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (ret == READ_CONTINUE) {"
    },
    {
        "line": 4,
        "fullcodeline": "LOG_WARN(\"Get context from read event fail!\");"
    },
    {
        "line": 14,
        "fullcodeline": "epoll_context->_ctx_status = CONTEXT_READ_OVER;"
    },
    {
        "line": 18,
        "fullcodeline": "event.events = EPOLLIN | EPOLLONESHOT;"
    },
    {
        "line": 19,
        "fullcodeline": "ret = epoll_ctl(_epollfd, EPOLL_CTL_MOD, fd, &event);"
    },
    {
        "line": 5,
        "fullcodeline": "return -1;"
    },
    {
        "line": 11,
        "fullcodeline": "return close_and_release(event);"
    },
    {
        "line": 20,
        "fullcodeline": "} else if (ret == READ_OVER) { // READ_OVER"
    },
    {
        "line": 21,
        "fullcodeline": "event.events = EPOLLOUT | EPOLLONESHOT;"
    },
    {
        "line": 22,
        "fullcodeline": "ret = epoll_ctl(_epollfd, EPOLL_CTL_MOD, fd, &event);"
    },
    {
        "line": 24,
        "fullcodeline": "LOG_ERROR(\"unkonw read ret:%d\", ret);"
    }
]