[
    {
        "line": 13,
        "fullcodeline": "dangerous_profile_dir = Path('profile_default')"
    },
    {
        "line": 15,
        "fullcodeline": "dangerous_startup_dir = dangerous_profile_dir / 'startup'"
    },
    {
        "line": 16,
        "fullcodeline": "dangerous_expected = 'CVE-2022-21699-'+''.join([random.choice(string.ascii_letters) for i in range(10)])"
    },
    {
        "line": 18,
        "fullcodeline": "with TemporaryWorkingDirectory() as t:"
    },
    {
        "line": 19,
        "fullcodeline": "dangerous_startup_dir.mkdir(parents=True)"
    },
    {
        "line": 23,
        "fullcodeline": "cmd = [sys.executable,'-m', 'IPython']"
    },
    {
        "line": 24,
        "fullcodeline": "env = os.environ.copy()"
    },
    {
        "line": 25,
        "fullcodeline": "env['IPY_TEST_SIMPLE_PROMPT'] = '1'"
    },
    {
        "line": 29,
        "fullcodeline": "p_dangerous = subprocess.Popen(cmd + [f'--profile-dir={dangerous_profile_dir}'], env=env, stdin=subprocess.PIPE,"
    },
    {
        "line": 32,
        "fullcodeline": "assert dangerous_expected in out_dangerous.decode()"
    },
    {
        "line": 35,
        "fullcodeline": "p = subprocess.Popen(cmd, env=env, stdin=subprocess.PIPE,"
    },
    {
        "line": 38,
        "fullcodeline": "assert b'IPython' in out"
    },
    {
        "line": 39,
        "fullcodeline": "assert dangerous_expected not in out.decode()"
    },
    {
        "line": 40,
        "fullcodeline": "assert err == b''"
    },
    {
        "line": 20,
        "fullcodeline": "(dangerous_startup_dir/ 'foo.py').write_text(f'print(\"{dangerous_expected}\")')"
    },
    {
        "line": 31,
        "fullcodeline": "out_dangerous, err_dangerouns = p_dangerous.communicate(b\"exit\\r\")"
    },
    {
        "line": 37,
        "fullcodeline": "out, err = p.communicate(b\"exit\\r\")"
    }
]