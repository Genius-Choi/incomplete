[
    {
        "line": 3,
        "fullcodeline": "char ch, *cp, resp, rbuf[2048], visbuf[2048];"
    },
    {
        "line": 8,
        "fullcodeline": "cp = rbuf;"
    },
    {
        "line": 5,
        "fullcodeline": "if (atomicio(read, remin, &resp, sizeof(resp)) != sizeof(resp))"
    },
    {
        "line": 6,
        "fullcodeline": "lostconn(0);"
    },
    {
        "line": 30,
        "fullcodeline": "++errs;"
    },
    {
        "line": 23,
        "fullcodeline": "if (!iamremote) {"
    },
    {
        "line": 13,
        "fullcodeline": "*cp++ = resp;"
    },
    {
        "line": 21,
        "fullcodeline": "} while (cp < &rbuf[sizeof(rbuf) - 1] && ch != '\\n');"
    },
    {
        "line": 25,
        "fullcodeline": "(void) snmprintf(visbuf, sizeof(visbuf),"
    },
    {
        "line": 27,
        "fullcodeline": "(void) atomicio(vwrite, STDERR_FILENO,"
    },
    {
        "line": 32,
        "fullcodeline": "return (-1);"
    },
    {
        "line": 18,
        "fullcodeline": "if (atomicio(read, remin, &ch, sizeof(ch)) != sizeof(ch))"
    },
    {
        "line": 20,
        "fullcodeline": "*cp++ = ch;"
    },
    {
        "line": 28,
        "fullcodeline": "visbuf, strlen(visbuf));"
    }
]