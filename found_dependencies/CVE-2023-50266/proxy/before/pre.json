[
    {
        "line": 2,
        "fullcodeline": "url = protocol + '://' + unquote(url)"
    },
    {
        "line": 3,
        "fullcodeline": "params = request.args"
    },
    {
        "line": 5,
        "fullcodeline": "result = requests.get(url, params, allow_redirects=False, verify=False, timeout=5, headers=headers)"
    },
    {
        "line": 9,
        "fullcodeline": "if result.status_code == 200:"
    },
    {
        "line": 7,
        "fullcodeline": "return dict(status=False, error=repr(e))"
    },
    {
        "line": 15,
        "fullcodeline": "elif result.status_code == 401:"
    },
    {
        "line": 11,
        "fullcodeline": "version = result.json()['version']"
    },
    {
        "line": 12,
        "fullcodeline": "return dict(status=True, version=version)"
    },
    {
        "line": 16,
        "fullcodeline": "return dict(status=False, error='Access Denied. Check API key.')"
    },
    {
        "line": 17,
        "fullcodeline": "elif result.status_code == 404:"
    },
    {
        "line": 14,
        "fullcodeline": "return dict(status=False, error='Error Occurred. Check your settings.')"
    },
    {
        "line": 18,
        "fullcodeline": "return dict(status=False, error='Cannot get version. Maybe unsupported legacy API call?')"
    },
    {
        "line": 19,
        "fullcodeline": "elif 300 <= result.status_code <= 399:"
    },
    {
        "line": 20,
        "fullcodeline": "return dict(status=False, error='Wrong URL Base.')"
    },
    {
        "line": 22,
        "fullcodeline": "return dict(status=False, error=result.raise_for_status())"
    }
]