[
    {
        "line": 9,
        "fullcodeline": "GF_UserDataBox *udta = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "e = CanAccessMovie(movie, GF_ISOM_OPEN_WRITE);"
    },
    {
        "line": 16,
        "fullcodeline": "e = gf_isom_insert_moov(movie);"
    },
    {
        "line": 20,
        "fullcodeline": "isHint = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "mdia = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "tkhd = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "trak = NULL;"
    },
    {
        "line": 88,
        "fullcodeline": "now = gf_isom_get_mp4time();"
    },
    {
        "line": 166,
        "fullcodeline": "movie->last_created_track_id = tkhd->trackID;"
    },
    {
        "line": 174,
        "fullcodeline": "e = moov_on_child_box((GF_Box*)movie->moov, (GF_Box *)trak, GF_FALSE);"
    },
    {
        "line": 22,
        "fullcodeline": "if (MediaType == GF_ISOM_MEDIA_HINT) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (!trak) {"
    },
    {
        "line": 168,
        "fullcodeline": "if (!movie->keep_utc && !gf_sys_is_test_mode() ) {"
    },
    {
        "line": 177,
        "fullcodeline": "if (trakID >= movie->moov->mvhd->nextTrackID)"
    },
    {
        "line": 186,
        "fullcodeline": "return gf_isom_get_track_by_id(movie, trakID);"
    },
    {
        "line": 13,
        "fullcodeline": "gf_isom_set_last_error(movie, e);"
    },
    {
        "line": 24,
        "fullcodeline": "isHint = 1;"
    },
    {
        "line": 60,
        "fullcodeline": "GF_BitStream *bs = gf_bs_new(tk_box, tk_box_size, GF_BITSTREAM_READ);"
    },
    {
        "line": 61,
        "fullcodeline": "gf_bs_set_cookie(bs, GF_ISOM_BS_COOKIE_NO_LOGS|GF_ISOM_BS_COOKIE_CLONE_TRACK);"
    },
    {
        "line": 63,
        "fullcodeline": "e = gf_isom_box_parse_ex((GF_Box**)&trak, bs, GF_ISOM_BOX_TYPE_MOOV, GF_FALSE, 0);"
    },
    {
        "line": 64,
        "fullcodeline": "gf_bs_del(bs);"
    },
    {
        "line": 91,
        "fullcodeline": "trak = (GF_TrackBox *) gf_isom_box_new_parent(&movie->moov->child_boxes, GF_ISOM_BOX_TYPE_TRAK);"
    },
    {
        "line": 96,
        "fullcodeline": "tkhd = (GF_TrackHeaderBox *) gf_isom_box_new_parent(&trak->child_boxes, GF_ISOM_BOX_TYPE_TKHD);"
    },
    {
        "line": 103,
        "fullcodeline": "e = NewMedia(&mdia, MediaType, TimeScale);"
    },
    {
        "line": 108,
        "fullcodeline": "assert(trak->child_boxes);"
    },
    {
        "line": 109,
        "fullcodeline": "gf_list_add(trak->child_boxes, mdia);"
    },
    {
        "line": 112,
        "fullcodeline": "mdia->mediaTrack = trak;"
    },
    {
        "line": 114,
        "fullcodeline": "e = trak_on_child_box((GF_Box*)trak, (GF_Box *) tkhd, GF_FALSE);"
    },
    {
        "line": 116,
        "fullcodeline": "e = trak_on_child_box((GF_Box*)trak, (GF_Box *) mdia, GF_FALSE);"
    },
    {
        "line": 118,
        "fullcodeline": "tkhd->trackID = trakID;"
    },
    {
        "line": 169,
        "fullcodeline": "tkhd->modificationTime = now;"
    },
    {
        "line": 170,
        "fullcodeline": "mdia->mediaHeader->modificationTime = now;"
    },
    {
        "line": 178,
        "fullcodeline": "movie->moov->mvhd->nextTrackID = trakID+1;"
    },
    {
        "line": 181,
        "fullcodeline": "trak->udta = udta;"
    },
    {
        "line": 182,
        "fullcodeline": "gf_list_add(trak->child_boxes, udta);"
    },
    {
        "line": 190,
        "fullcodeline": "if (trak) gf_isom_box_del((GF_Box *)trak);"
    },
    {
        "line": 191,
        "fullcodeline": "if (mdia) gf_isom_box_del((GF_Box *)mdia);"
    },
    {
        "line": 32,
        "fullcodeline": "if (!isHint && (trakID > 0xFFFF)) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (!RequestTrack(movie->moov, trakID)) return 0;"
    },
    {
        "line": 92,
        "fullcodeline": "if (!trak) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (!tkhd) {"
    },
    {
        "line": 120,
        "fullcodeline": "if (gf_sys_is_test_mode() ) {"
    },
    {
        "line": 129,
        "fullcodeline": "tkhd = trak->Header;"
    },
    {
        "line": 130,
        "fullcodeline": "tkhd->trackID = trakID;"
    },
    {
        "line": 131,
        "fullcodeline": "mdia = trak->Media;"
    },
    {
        "line": 132,
        "fullcodeline": "mdia->mediaTrack = trak;"
    },
    {
        "line": 133,
        "fullcodeline": "mdia->mediaHeader->timeScale = TimeScale;"
    },
    {
        "line": 142,
        "fullcodeline": "trak->Header->duration = 0;"
    },
    {
        "line": 143,
        "fullcodeline": "mdia->mediaHeader->duration = 0;"
    },
    {
        "line": 146,
        "fullcodeline": "gf_list_add(movie->moov->child_boxes, trak);"
    },
    {
        "line": 33,
        "fullcodeline": "gf_isom_set_last_error(movie, GF_BAD_PARAM);"
    },
    {
        "line": 40,
        "fullcodeline": "if (!trakID) trakID = 1;"
    },
    {
        "line": 42,
        "fullcodeline": "if (! isHint && (trakID > 0xFFFF)) trakID = 1;"
    },
    {
        "line": 49,
        "fullcodeline": "if (trakID == 0xFFFFFFFF) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (! isHint && (trakID > 0xFFFF)) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (e) trak = NULL;"
    },
    {
        "line": 93,
        "fullcodeline": "gf_isom_set_last_error(movie, GF_OUT_OF_MEM);"
    },
    {
        "line": 98,
        "fullcodeline": "gf_isom_set_last_error(movie, GF_OUT_OF_MEM);"
    },
    {
        "line": 105,
        "fullcodeline": "gf_isom_box_del((GF_Box *)mdia);"
    },
    {
        "line": 121,
        "fullcodeline": "tkhd->creationTime = 0;"
    },
    {
        "line": 122,
        "fullcodeline": "mdia->mediaHeader->creationTime = 0;"
    },
    {
        "line": 134,
        "fullcodeline": "if (mdia->handler->handlerType != MediaType) {"
    },
    {
        "line": 158,
        "fullcodeline": "tkhd->width = 0x01400000;"
    },
    {
        "line": 159,
        "fullcodeline": "tkhd->height = 0x00F00000;"
    },
    {
        "line": 162,
        "fullcodeline": "tkhd->volume = 0x0100;"
    },
    {
        "line": 46,
        "fullcodeline": "trakID += 1;"
    },
    {
        "line": 50,
        "fullcodeline": "gf_isom_set_last_error(movie, GF_BAD_PARAM);"
    },
    {
        "line": 54,
        "fullcodeline": "gf_isom_set_last_error(movie, GF_BAD_PARAM);"
    },
    {
        "line": 124,
        "fullcodeline": "tkhd->creationTime = now;"
    },
    {
        "line": 125,
        "fullcodeline": "mdia->mediaHeader->creationTime = now;"
    },
    {
        "line": 135,
        "fullcodeline": "mdia->handler->handlerType = MediaType;"
    },
    {
        "line": 136,
        "fullcodeline": "tkhd->width = 0;"
    },
    {
        "line": 137,
        "fullcodeline": "tkhd->height = 0;"
    },
    {
        "line": 138,
        "fullcodeline": "tkhd->volume = 0;"
    },
    {
        "line": 145,
        "fullcodeline": "if (!movie->moov->child_boxes) movie->moov->child_boxes = gf_list_new();"
    },
    {
        "line": 45,
        "fullcodeline": "if (RequestTrack(movie->moov, trakID)) break;"
    },
    {
        "line": 47,
        "fullcodeline": "if (trakID == 0xFFFFFFFF) break;"
    },
    {
        "line": 140,
        "fullcodeline": "MediaType = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "udta = trak->udta;"
    },
    {
        "line": 68,
        "fullcodeline": "trak->udta = NULL;"
    },
    {
        "line": 69,
        "fullcodeline": "gf_list_del_item(trak->child_boxes, udta);"
    },
    {
        "line": 70,
        "fullcodeline": "gf_isom_box_del((GF_Box*)trak);"
    },
    {
        "line": 71,
        "fullcodeline": "trak = NULL;"
    },
    {
        "line": 73,
        "fullcodeline": "Bool tpl_ok = GF_TRUE;"
    },
    {
        "line": 74,
        "fullcodeline": "if (!trak->Header || !trak->Media || !trak->Media->handler || !trak->Media->mediaHeader || !trak->Media->information) tpl_ok = GF_FALSE;"
    },
    {
        "line": 81,
        "fullcodeline": "if (!tpl_ok) {"
    },
    {
        "line": 82,
        "fullcodeline": "udta = trak->udta;"
    },
    {
        "line": 83,
        "fullcodeline": "trak->udta = NULL;"
    },
    {
        "line": 84,
        "fullcodeline": "gf_isom_box_del((GF_Box*)trak);"
    },
    {
        "line": 78,
        "fullcodeline": "e = NewMedia(&trak->Media, MediaType, TimeScale);"
    },
    {
        "line": 77,
        "fullcodeline": "if (!MediaType) MediaType = trak->Media->handler->handlerType;"
    },
    {
        "line": 79,
        "fullcodeline": "if (e) tpl_ok = GF_FALSE;"
    }
]