[
    {
        "line": 7,
        "fullcodeline": "e = gf_isom_insert_moov(movie);"
    },
    {
        "line": 15,
        "fullcodeline": "od = (GF_IsomObjectDescriptor *) movie->moov->iods->descriptor;"
    },
    {
        "line": 16,
        "fullcodeline": "iod = (GF_IsomInitialObjectDescriptor*)gf_malloc(sizeof(GF_IsomInitialObjectDescriptor));"
    },
    {
        "line": 19,
        "fullcodeline": "memset(iod, 0, sizeof(GF_IsomInitialObjectDescriptor));"
    },
    {
        "line": 21,
        "fullcodeline": "iod->ES_ID_IncDescriptors = od->ES_ID_IncDescriptors;"
    },
    {
        "line": 22,
        "fullcodeline": "od->ES_ID_IncDescriptors = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "iod->ES_ID_RefDescriptors = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "iod->extensionDescriptors = od->extensionDescriptors;"
    },
    {
        "line": 26,
        "fullcodeline": "od->extensionDescriptors = NULL;"
    },
    {
        "line": 27,
        "fullcodeline": "iod->IPMP_Descriptors = od->IPMP_Descriptors;"
    },
    {
        "line": 28,
        "fullcodeline": "od->IPMP_Descriptors = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "iod->objectDescriptorID = od->objectDescriptorID;"
    },
    {
        "line": 30,
        "fullcodeline": "iod->OCIDescriptors = od->OCIDescriptors;"
    },
    {
        "line": 31,
        "fullcodeline": "od->OCIDescriptors = NULL;"
    },
    {
        "line": 32,
        "fullcodeline": "iod->tag = GF_ODF_ISOM_IOD_TAG;"
    },
    {
        "line": 33,
        "fullcodeline": "iod->URLString = od->URLString;"
    },
    {
        "line": 34,
        "fullcodeline": "od->URLString = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!movie->moov->iods) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (movie->moov->iods->descriptor->tag == GF_ODF_ISOM_IOD_TAG) return GF_OK;"
    },
    {
        "line": 17,
        "fullcodeline": "if (!iod) return GF_OUT_OF_MEM;"
    }
]