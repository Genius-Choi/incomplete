[
    {
        "line": 8,
        "fullcodeline": "CHECK_OBJ_NOTNULL(wrk, WORKER_MAGIC);"
    },
    {
        "line": 9,
        "fullcodeline": "CHECK_OBJ_NOTNULL(bo, BUSYOBJ_MAGIC);"
    },
    {
        "line": 10,
        "fullcodeline": "CHECK_OBJ_NOTNULL(bo->fetch_objcore, OBJCORE_MAGIC);"
    },
    {
        "line": 11,
        "fullcodeline": "AN(bo->fetch_objcore->flags & OC_F_BUSY);"
    },
    {
        "line": 12,
        "fullcodeline": "assert(bo->director_state == DIR_S_NULL);"
    },
    {
        "line": 14,
        "fullcodeline": "wrk->stats->fetch_failed++;"
    },
    {
        "line": 16,
        "fullcodeline": "now = W_TIM_real(wrk);"
    },
    {
        "line": 17,
        "fullcodeline": "VSLb_ts_busyobj(bo, \"Error\", now);"
    },
    {
        "line": 24,
        "fullcodeline": "HTTP_Setup(bo->beresp, bo->ws, bo->vsl, SLT_BerespMethod);"
    },
    {
        "line": 25,
        "fullcodeline": "http_PutResponse(bo->beresp, \"HTTP/1.1\", 503, \"Backend fetch failed\");"
    },
    {
        "line": 26,
        "fullcodeline": "http_TimeHeader(bo->beresp, \"Date: \", now);"
    },
    {
        "line": 27,
        "fullcodeline": "http_SetHeader(bo->beresp, \"Server: Varnish\");"
    },
    {
        "line": 29,
        "fullcodeline": "bo->fetch_objcore->t_origin = now;"
    },
    {
        "line": 47,
        "fullcodeline": "synth_body = VSB_new_auto();"
    },
    {
        "line": 48,
        "fullcodeline": "AN(synth_body);"
    },
    {
        "line": 50,
        "fullcodeline": "VCL_backend_error_method(bo->vcl, wrk, NULL, bo, synth_body);"
    },
    {
        "line": 52,
        "fullcodeline": "AZ(VSB_finish(synth_body));"
    },
    {
        "line": 69,
        "fullcodeline": "bo->vfc->bo = bo;"
    },
    {
        "line": 70,
        "fullcodeline": "bo->vfc->wrk = bo->wrk;"
    },
    {
        "line": 71,
        "fullcodeline": "bo->vfc->oc = bo->fetch_objcore;"
    },
    {
        "line": 72,
        "fullcodeline": "bo->vfc->http = bo->beresp;"
    },
    {
        "line": 73,
        "fullcodeline": "bo->vfc->esi_req = bo->bereq;"
    },
    {
        "line": 81,
        "fullcodeline": "ll = VSB_len(synth_body);"
    },
    {
        "line": 82,
        "fullcodeline": "o = 0;"
    },
    {
        "line": 94,
        "fullcodeline": "HSH_Unbusy(wrk, bo->fetch_objcore);"
    },
    {
        "line": 95,
        "fullcodeline": "ObjSetState(wrk, bo->fetch_objcore, BOS_FINISHED);"
    },
    {
        "line": 19,
        "fullcodeline": "if (bo->fetch_objcore->stobj->stevedore != NULL)"
    },
    {
        "line": 30,
        "fullcodeline": "if (!VTAILQ_EMPTY(&bo->fetch_objcore->objhead->waitinglist)) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (wrk->handling == VCL_RET_ABANDON || wrk->handling == VCL_RET_FAIL) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (wrk->handling == VCL_RET_RETRY) {"
    },
    {
        "line": 67,
        "fullcodeline": "assert(wrk->handling == VCL_RET_DELIVER);"
    },
    {
        "line": 75,
        "fullcodeline": "if (vbf_beresp2obj(bo)) {"
    },
    {
        "line": 83,
        "fullcodeline": "while (ll > 0) {"
    },
    {
        "line": 92,
        "fullcodeline": "AZ(ObjSetU64(wrk, bo->fetch_objcore, OA_LEN, o));"
    },
    {
        "line": 20,
        "fullcodeline": "ObjFreeObj(bo->wrk, bo->fetch_objcore);"
    },
    {
        "line": 38,
        "fullcodeline": "bo->fetch_objcore->ttl = 1;"
    },
    {
        "line": 39,
        "fullcodeline": "bo->fetch_objcore->grace = 5;"
    },
    {
        "line": 40,
        "fullcodeline": "bo->fetch_objcore->keep = 5;"
    },
    {
        "line": 55,
        "fullcodeline": "VSB_destroy(&synth_body);"
    },
    {
        "line": 63,
        "fullcodeline": "VSLb(bo->vsl, SLT_VCL_Error, \"Too many retries, failing\");"
    },
    {
        "line": 84,
        "fullcodeline": "l = ll;"
    },
    {
        "line": 87,
        "fullcodeline": "memcpy(ptr, VSB_data(synth_body) + o, l);"
    },
    {
        "line": 88,
        "fullcodeline": "VFP_Extend(bo->vfc, l);"
    },
    {
        "line": 89,
        "fullcodeline": "ll -= l;"
    },
    {
        "line": 90,
        "fullcodeline": "o += l;"
    },
    {
        "line": 42,
        "fullcodeline": "bo->fetch_objcore->ttl = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "bo->fetch_objcore->grace = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "bo->fetch_objcore->keep = 0;"
    },
    {
        "line": 76,
        "fullcodeline": "(void)VFP_Error(bo->vfc, \"Could not get storage\");"
    },
    {
        "line": 85,
        "fullcodeline": "if (VFP_GetStorage(bo->vfc, &l, &ptr) != VFP_OK)"
    },
    {
        "line": 61,
        "fullcodeline": "if (bo->retries++ < cache_param->max_retries)"
    }
]