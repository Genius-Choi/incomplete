[
    {
        "line": 3,
        "fullcodeline": "ptrdiff_t n = (ptrdiff_t)(e - t->table); /* CAW: fixed to be 64bit nice, still need the crazy negative case... */"
    },
    {
        "line": 9,
        "fullcodeline": "t->count--;"
    },
    {
        "line": 11,
        "fullcodeline": "t->table[n].v = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "t->table[n].k = LH_FREED;"
    },
    {
        "line": 25,
        "fullcodeline": "t->table[n].next = t->table[n].prev = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "if(n < 0) { return -2; }"
    },
    {
        "line": 8,
        "fullcodeline": "if(t->table[n].k == LH_EMPTY || t->table[n].k == LH_FREED) return -1;"
    },
    {
        "line": 13,
        "fullcodeline": "if(t->tail == &t->table[n] && t->head == &t->table[n]) {"
    },
    {
        "line": 10,
        "fullcodeline": "if(t->free_fn) t->free_fn(e);"
    },
    {
        "line": 14,
        "fullcodeline": "t->head = t->tail = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "} else if (t->head == &t->table[n]) {"
    },
    {
        "line": 16,
        "fullcodeline": "t->head->next->prev = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "t->head = t->head->next;"
    },
    {
        "line": 18,
        "fullcodeline": "} else if (t->tail == &t->table[n]) {"
    },
    {
        "line": 19,
        "fullcodeline": "t->tail->prev->next = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "t->tail = t->tail->prev;"
    },
    {
        "line": 23,
        "fullcodeline": "t->table[n].next->prev = t->table[n].prev;"
    }
]