[
    {
        "line": 9,
        "fullcodeline": "t = (struct lh_table*)calloc(1, sizeof(struct lh_table));"
    },
    {
        "line": 11,
        "fullcodeline": "t->count = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "t->size = size;"
    },
    {
        "line": 13,
        "fullcodeline": "t->name = name;"
    },
    {
        "line": 14,
        "fullcodeline": "t->table = (struct lh_entry*)calloc(size, sizeof(struct lh_entry));"
    },
    {
        "line": 16,
        "fullcodeline": "t->free_fn = free_fn;"
    },
    {
        "line": 17,
        "fullcodeline": "t->hash_fn = hash_fn;"
    },
    {
        "line": 18,
        "fullcodeline": "t->equal_fn = equal_fn;"
    },
    {
        "line": 10,
        "fullcodeline": "if(!t) lh_abort(\"lh_table_new: calloc failed\\n\");"
    },
    {
        "line": 15,
        "fullcodeline": "if(!t->table) lh_abort(\"lh_table_new: calloc failed\\n\");"
    },
    {
        "line": 19,
        "fullcodeline": "for(i = 0; i < size; i++) t->table[i].k = LH_EMPTY;"
    }
]