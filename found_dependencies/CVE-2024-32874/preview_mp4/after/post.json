[
    {
        "line": 2,
        "fullcodeline": "file_name = f\"clip_{camera_name}_{start_ts}-{end_ts}.mp4\""
    },
    {
        "line": 15,
        "fullcodeline": "file_name = secure_filename(file_name)"
    },
    {
        "line": 16,
        "fullcodeline": "path = os.path.join(CACHE_DIR, file_name)"
    },
    {
        "line": 147,
        "fullcodeline": "response = make_response()"
    },
    {
        "line": 148,
        "fullcodeline": "response.headers[\"Content-Description\"] = \"File Transfer\""
    },
    {
        "line": 149,
        "fullcodeline": "response.headers[\"Cache-Control\"] = \"no-cache\""
    },
    {
        "line": 150,
        "fullcodeline": "response.headers[\"Content-Type\"] = \"video/mp4\""
    },
    {
        "line": 151,
        "fullcodeline": "response.headers[\"Content-Length\"] = os.path.getsize(path)"
    },
    {
        "line": 152,
        "fullcodeline": "response.headers[\"X-Accel-Redirect\"] = ("
    },
    {
        "line": 4,
        "fullcodeline": "if len(file_name) > 1000:"
    },
    {
        "line": 18,
        "fullcodeline": "if datetime.fromtimestamp(start_ts) < datetime.now().replace(minute=0, second=0):"
    },
    {
        "line": 153,
        "fullcodeline": "f\"/cache/{file_name}\"  # nginx: https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers"
    },
    {
        "line": 46,
        "fullcodeline": "diff = start_ts - preview.start_time"
    },
    {
        "line": 47,
        "fullcodeline": "minutes = int(diff / 60)"
    },
    {
        "line": 48,
        "fullcodeline": "seconds = int(diff % 60)"
    },
    {
        "line": 49,
        "fullcodeline": "ffmpeg_cmd = ["
    },
    {
        "line": 72,
        "fullcodeline": "process = sp.run("
    },
    {
        "line": 86,
        "fullcodeline": "preview_dir = os.path.join(CACHE_DIR, \"preview_frames\")"
    },
    {
        "line": 87,
        "fullcodeline": "file_start = f\"preview_{camera_name}\""
    },
    {
        "line": 88,
        "fullcodeline": "start_file = f\"{file_start}-{start_ts}.{PREVIEW_FRAME_TYPE}\""
    },
    {
        "line": 89,
        "fullcodeline": "end_file = f\"{file_start}-{end_ts}.{PREVIEW_FRAME_TYPE}\""
    },
    {
        "line": 90,
        "fullcodeline": "selected_previews = []"
    },
    {
        "line": 110,
        "fullcodeline": "last_file = selected_previews[-2]"
    },
    {
        "line": 111,
        "fullcodeline": "selected_previews.append(last_file)"
    },
    {
        "line": 113,
        "fullcodeline": "ffmpeg_cmd = ["
    },
    {
        "line": 134,
        "fullcodeline": "process = sp.run("
    },
    {
        "line": 5,
        "fullcodeline": "return make_response("
    },
    {
        "line": 41,
        "fullcodeline": "if not preview:"
    },
    {
        "line": 77,
        "fullcodeline": "if process.returncode != 0:"
    },
    {
        "line": 92,
        "fullcodeline": "for file in sorted(os.listdir(preview_dir)):"
    },
    {
        "line": 105,
        "fullcodeline": "if not selected_previews:"
    },
    {
        "line": 140,
        "fullcodeline": "if process.returncode != 0:"
    },
    {
        "line": 6,
        "fullcodeline": "jsonify("
    },
    {
        "line": 21,
        "fullcodeline": "preview: Previews = ("
    },
    {
        "line": 56,
        "fullcodeline": "f\"00:{minutes}:{seconds}\","
    },
    {
        "line": 58,
        "fullcodeline": "f\"{end_ts - start_ts}\","
    },
    {
        "line": 78,
        "fullcodeline": "logger.error(process.stderr)"
    },
    {
        "line": 136,
        "fullcodeline": "input=str.encode(\"\\n\".join(selected_previews)),"
    },
    {
        "line": 141,
        "fullcodeline": "logger.error(process.stderr)"
    },
    {
        "line": 42,
        "fullcodeline": "return make_response("
    },
    {
        "line": 79,
        "fullcodeline": "return make_response("
    },
    {
        "line": 102,
        "fullcodeline": "selected_previews.append(f\"file '{os.path.join(preview_dir, file)}'\")"
    },
    {
        "line": 103,
        "fullcodeline": "selected_previews.append(\"duration 0.12\")"
    },
    {
        "line": 106,
        "fullcodeline": "return make_response("
    },
    {
        "line": 142,
        "fullcodeline": "return make_response("
    },
    {
        "line": 7,
        "fullcodeline": "{"
    },
    {
        "line": 22,
        "fullcodeline": "Previews.select("
    },
    {
        "line": 39,
        "fullcodeline": "preview = None"
    },
    {
        "line": 43,
        "fullcodeline": "jsonify({\"success\": False, \"message\": \"Preview not found\"}), 404"
    },
    {
        "line": 80,
        "fullcodeline": "jsonify({\"success\": False, \"message\": \"Unable to create preview gif\"}),"
    },
    {
        "line": 93,
        "fullcodeline": "if not file.startswith(file_start):"
    },
    {
        "line": 96,
        "fullcodeline": "if file < start_file:"
    },
    {
        "line": 99,
        "fullcodeline": "if file > end_file:"
    },
    {
        "line": 107,
        "fullcodeline": "jsonify({\"success\": False, \"message\": \"Preview not found\"}), 404"
    },
    {
        "line": 143,
        "fullcodeline": "jsonify({\"success\": False, \"message\": \"Unable to create preview gif\"}),"
    },
    {
        "line": 34,
        "fullcodeline": ".where(Previews.camera == camera_name)"
    },
    {
        "line": 30,
        "fullcodeline": "Previews.start_time.between(start_ts, end_ts)"
    },
    {
        "line": 32,
        "fullcodeline": "| ((start_ts > Previews.start_time) & (end_ts < Previews.end_time))"
    },
    {
        "line": 31,
        "fullcodeline": "| Previews.end_time.between(start_ts, end_ts)"
    }
]