[
    {
        "line": 6,
        "fullcodeline": "krb5_error_code ret = ENOMEM;"
    },
    {
        "line": 7,
        "fullcodeline": "pkinit_cert_matching_data *md = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "krb5_principal *pkinit_sans = NULL, *upn_sans = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "char buf[DN_BUF_LEN];"
    },
    {
        "line": 13,
        "fullcodeline": "*md_out = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "md = calloc(1, sizeof(*md));"
    },
    {
        "line": 20,
        "fullcodeline": "X509_NAME_oneline_ex(X509_get_subject_name(cert), buf, &bufsize,"
    },
    {
        "line": 22,
        "fullcodeline": "md->subject_dn = strdup(buf);"
    },
    {
        "line": 29,
        "fullcodeline": "X509_NAME_oneline_ex(X509_get_issuer_name(cert), buf, &bufsize,"
    },
    {
        "line": 31,
        "fullcodeline": "md->issuer_dn = strdup(buf);"
    },
    {
        "line": 38,
        "fullcodeline": "ret = crypto_retrieve_X509_sans(context, plg_cryptoctx, req_cryptoctx,"
    },
    {
        "line": 43,
        "fullcodeline": "j = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "ret = crypto_retrieve_X509_key_usage(context, plg_cryptoctx,"
    },
    {
        "line": 80,
        "fullcodeline": "*md_out = md;"
    },
    {
        "line": 81,
        "fullcodeline": "md = NULL;"
    },
    {
        "line": 84,
        "fullcodeline": "crypto_cert_free_matching_data(context, md);"
    },
    {
        "line": 16,
        "fullcodeline": "if (md == NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "if (md->subject_dn == NULL) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (md->issuer_dn == NULL) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (pkinit_sans != NULL) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (upn_sans != NULL) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (j != 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 33,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 53,
        "fullcodeline": "md->sans = calloc((size_t)j+1, sizeof(*md->sans));"
    },
    {
        "line": 58,
        "fullcodeline": "j = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "md->sans[j] = NULL;"
    },
    {
        "line": 45,
        "fullcodeline": "for (i = 0; pkinit_sans[i] != NULL; i++)"
    },
    {
        "line": 46,
        "fullcodeline": "j++;"
    },
    {
        "line": 49,
        "fullcodeline": "for (i = 0; upn_sans[i] != NULL; i++)"
    },
    {
        "line": 50,
        "fullcodeline": "j++;"
    },
    {
        "line": 54,
        "fullcodeline": "if (md->sans == NULL) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (pkinit_sans != NULL) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (upn_sans != NULL) {"
    },
    {
        "line": 71,
        "fullcodeline": "md->sans = NULL;"
    },
    {
        "line": 55,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 62,
        "fullcodeline": "free(pkinit_sans);"
    },
    {
        "line": 67,
        "fullcodeline": "free(upn_sans);"
    },
    {
        "line": 60,
        "fullcodeline": "for (i = 0; pkinit_sans[i] != NULL; i++)"
    },
    {
        "line": 61,
        "fullcodeline": "md->sans[j++] = pkinit_sans[i];"
    },
    {
        "line": 65,
        "fullcodeline": "for (i = 0; upn_sans[i] != NULL; i++)"
    },
    {
        "line": 66,
        "fullcodeline": "md->sans[j++] = upn_sans[i];"
    }
]