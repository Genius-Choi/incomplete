[
    {
        "line": 5,
        "fullcodeline": "library_key = CourseKey.from_string(library_key_string)"
    },
    {
        "line": 16,
        "fullcodeline": "library = modulestore().get_library(library_key)"
    },
    {
        "line": 21,
        "fullcodeline": "response_format = 'html'"
    },
    {
        "line": 6,
        "fullcodeline": "if not isinstance(library_key, LibraryLocator):"
    },
    {
        "line": 9,
        "fullcodeline": "if not has_studio_read_access(request.user, library_key):"
    },
    {
        "line": 17,
        "fullcodeline": "if library is None:"
    },
    {
        "line": 23,
        "fullcodeline": "request.GET.get('format', 'html') == 'json' or"
    },
    {
        "line": 28,
        "fullcodeline": "return library_blocks_view(library, request.user, response_format)"
    },
    {
        "line": 7,
        "fullcodeline": "log.exception(\"Non-library key passed to content libraries API.\")  # Should never happen due to url regex"
    },
    {
        "line": 8,
        "fullcodeline": "raise Http404  # This is not a library"
    },
    {
        "line": 10,
        "fullcodeline": "log.exception("
    },
    {
        "line": 14,
        "fullcodeline": "raise PermissionDenied()"
    },
    {
        "line": 18,
        "fullcodeline": "log.exception(\"Library %s not found\", str(library_key))"
    },
    {
        "line": 19,
        "fullcodeline": "raise Http404"
    },
    {
        "line": 24,
        "fullcodeline": "'application/json' in request.META.get('HTTP_ACCEPT', 'text/html')"
    },
    {
        "line": 26,
        "fullcodeline": "response_format = 'json'"
    },
    {
        "line": 12,
        "fullcodeline": "request.user.username, str(library_key)"
    }
]