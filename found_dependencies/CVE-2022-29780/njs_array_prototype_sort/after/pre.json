[
    {
        "line": 11,
        "fullcodeline": "comparefn = njs_arg(args, nargs, 1);"
    },
    {
        "line": 25,
        "fullcodeline": "this = njs_argument(args, 0);"
    },
    {
        "line": 27,
        "fullcodeline": "ret = njs_value_to_object(vm, this);"
    },
    {
        "line": 32,
        "fullcodeline": "ret = njs_value_length(vm, this, &length);"
    },
    {
        "line": 42,
        "fullcodeline": "slots = NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "ctx.vm = vm;"
    },
    {
        "line": 44,
        "fullcodeline": "ctx.strings.separate = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "ctx.strings.pointer = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "ctx.exception = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "fast_path = njs_is_fast_array(this);"
    },
    {
        "line": 138,
        "fullcodeline": "strings = njs_arr_init(vm->mem_pool, &ctx.strings, NULL, len + 1,"
    },
    {
        "line": 145,
        "fullcodeline": "njs_qsort(slots, len, sizeof(njs_array_sort_slot_t), njs_array_compare,"
    },
    {
        "line": 193,
        "fullcodeline": "ret = NJS_OK;"
    },
    {
        "line": 13,
        "fullcodeline": "if (njs_is_defined(comparefn)) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (njs_fast_path(fast_path)) {"
    },
    {
        "line": 197,
        "fullcodeline": "if (slots != NULL) {"
    },
    {
        "line": 19,
        "fullcodeline": "ctx.function = njs_function(comparefn);"
    },
    {
        "line": 28,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (njs_slow_path(length < 2)) {"
    },
    {
        "line": 51,
        "fullcodeline": "array = njs_array(this);"
    },
    {
        "line": 52,
        "fullcodeline": "start = array->start;"
    },
    {
        "line": 54,
        "fullcodeline": "slots = njs_mp_alloc(vm->mem_pool,"
    },
    {
        "line": 60,
        "fullcodeline": "und = 0;"
    },
    {
        "line": 61,
        "fullcodeline": "p = slots;"
    },
    {
        "line": 82,
        "fullcodeline": "len = p - slots;"
    },
    {
        "line": 139,
        "fullcodeline": "sizeof(njs_value_t));"
    },
    {
        "line": 140,
        "fullcodeline": "if (njs_slow_path(strings == NULL)) {"
    },
    {
        "line": 141,
        "fullcodeline": "ret = NJS_ERROR;"
    },
    {
        "line": 149,
        "fullcodeline": "ret = NJS_ERROR;"
    },
    {
        "line": 153,
        "fullcodeline": "if (njs_fast_path(fast_path && njs_is_fast_array(this))) {"
    },
    {
        "line": 154,
        "fullcodeline": "array = njs_array(this);"
    },
    {
        "line": 14,
        "fullcodeline": "if (njs_slow_path(!njs_is_function(comparefn))) {"
    },
    {
        "line": 22,
        "fullcodeline": "ctx.function = NULL;"
    },
    {
        "line": 63,
        "fullcodeline": "for (i = 0; i < length; i++) {"
    },
    {
        "line": 88,
        "fullcodeline": "und = 0;"
    },
    {
        "line": 89,
        "fullcodeline": "p = NULL;"
    },
    {
        "line": 90,
        "fullcodeline": "end = NULL;"
    },
    {
        "line": 135,
        "fullcodeline": "len = p - slots;"
    },
    {
        "line": 157,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 15,
        "fullcodeline": "njs_type_error(vm, \"comparefn must be callable or undefined\");"
    },
    {
        "line": 55,
        "fullcodeline": "sizeof(njs_array_sort_slot_t) * length);"
    },
    {
        "line": 56,
        "fullcodeline": "if (njs_slow_path(slots == NULL)) {"
    },
    {
        "line": 76,
        "fullcodeline": "p->value = start[i];"
    },
    {
        "line": 77,
        "fullcodeline": "p->pos = i;"
    },
    {
        "line": 78,
        "fullcodeline": "p->str = NULL;"
    },
    {
        "line": 79,
        "fullcodeline": "p++;"
    },
    {
        "line": 92,
        "fullcodeline": "for (i = 0; i < length; i++) {"
    },
    {
        "line": 161,
        "fullcodeline": "for (i = len; und-- > 0; i++) {"
    },
    {
        "line": 166,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 175,
        "fullcodeline": "for (i = len; und-- > 0; i++) {"
    },
    {
        "line": 183,
        "fullcodeline": "for (; i < length; i++) {"
    },
    {
        "line": 115,
        "fullcodeline": "ret = njs_value_property_i64(vm, this, i, &p->value);"
    },
    {
        "line": 130,
        "fullcodeline": "p->pos = i;"
    },
    {
        "line": 131,
        "fullcodeline": "p->str = NULL;"
    },
    {
        "line": 132,
        "fullcodeline": "p++;"
    },
    {
        "line": 176,
        "fullcodeline": "ret = njs_value_property_i64_set(vm, this, i,"
    },
    {
        "line": 184,
        "fullcodeline": "ret = njs_value_property_i64_delete(vm, this, i, NULL);"
    },
    {
        "line": 64,
        "fullcodeline": "if (njs_slow_path(!njs_is_valid(&start[i]))) {"
    },
    {
        "line": 65,
        "fullcodeline": "fast_path = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "njs_mp_free(vm->mem_pool, slots);"
    },
    {
        "line": 67,
        "fullcodeline": "slots = NULL;"
    },
    {
        "line": 71,
        "fullcodeline": "if (njs_slow_path(njs_is_undefined(&start[i]))) {"
    },
    {
        "line": 72,
        "fullcodeline": "und++;"
    },
    {
        "line": 93,
        "fullcodeline": "if (p >= end) {"
    },
    {
        "line": 121,
        "fullcodeline": "if (ret == NJS_DECLINED) {"
    },
    {
        "line": 125,
        "fullcodeline": "if (njs_is_undefined(&p->value)) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (slots[i].pos != i) {"
    },
    {
        "line": 94,
        "fullcodeline": "nlen = njs_min(njs_max((p - slots) * 2, 8), length);"
    },
    {
        "line": 95,
        "fullcodeline": "nslots = njs_mp_alloc(vm->mem_pool,"
    },
    {
        "line": 111,
        "fullcodeline": "slots = nslots;"
    },
    {
        "line": 112,
        "fullcodeline": "end = slots + nlen;"
    },
    {
        "line": 116,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 117,
        "fullcodeline": "ret = NJS_ERROR;"
    },
    {
        "line": 126,
        "fullcodeline": "und++;"
    },
    {
        "line": 168,
        "fullcodeline": "ret = njs_value_property_i64_set(vm, this, i, &slots[i].value);"
    },
    {
        "line": 177,
        "fullcodeline": "njs_value_arg(&njs_value_undefined));"
    },
    {
        "line": 178,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 185,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (slots != NULL) {"
    },
    {
        "line": 96,
        "fullcodeline": "sizeof(njs_array_sort_slot_t) * nlen);"
    },
    {
        "line": 97,
        "fullcodeline": "if (njs_slow_path(nslots == NULL)) {"
    },
    {
        "line": 103,
        "fullcodeline": "p = (void *) njs_cpymem(nslots, slots,"
    },
    {
        "line": 105,
        "fullcodeline": "njs_mp_free(vm->mem_pool, slots);"
    },
    {
        "line": 169,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 108,
        "fullcodeline": "p = nslots;"
    },
    {
        "line": 104,
        "fullcodeline": "sizeof(njs_array_sort_slot_t) * (p - slots));"
    }
]