[
    {
        "line": 4,
        "fullcodeline": "struct alg_sock *ask = alg_sk(sk);"
    },
    {
        "line": 5,
        "fullcodeline": "struct skcipher_tfm *tfm = private;"
    },
    {
        "line": 6,
        "fullcodeline": "struct crypto_skcipher *skcipher = tfm->skcipher;"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned int len = sizeof(*ctx) + crypto_skcipher_reqsize(skcipher);"
    },
    {
        "line": 12,
        "fullcodeline": "ctx = sock_kmalloc(sk, len, GFP_KERNEL);"
    },
    {
        "line": 16,
        "fullcodeline": "ctx->iv = sock_kmalloc(sk, crypto_skcipher_ivsize(skcipher),"
    },
    {
        "line": 23,
        "fullcodeline": "memset(ctx->iv, 0, crypto_skcipher_ivsize(skcipher));"
    },
    {
        "line": 25,
        "fullcodeline": "INIT_LIST_HEAD(&ctx->tsgl);"
    },
    {
        "line": 26,
        "fullcodeline": "ctx->len = len;"
    },
    {
        "line": 27,
        "fullcodeline": "ctx->used = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "ctx->more = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "ctx->merge = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "ctx->enc = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "atomic_set(&ctx->inflight, 0);"
    },
    {
        "line": 32,
        "fullcodeline": "af_alg_init_completion(&ctx->completion);"
    },
    {
        "line": 34,
        "fullcodeline": "ask->private = ctx;"
    },
    {
        "line": 36,
        "fullcodeline": "skcipher_request_set_tfm(&ctx->req, skcipher);"
    },
    {
        "line": 37,
        "fullcodeline": "skcipher_request_set_callback(&ctx->req, CRYPTO_TFM_REQ_MAY_BACKLOG,"
    },
    {
        "line": 40,
        "fullcodeline": "sk->sk_destruct = skcipher_sock_destruct;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!tfm->has_key)"
    },
    {
        "line": 13,
        "fullcodeline": "if (!ctx)"
    },
    {
        "line": 18,
        "fullcodeline": "if (!ctx->iv) {"
    },
    {
        "line": 19,
        "fullcodeline": "sock_kfree_s(sk, ctx, len);"
    },
    {
        "line": 10,
        "fullcodeline": "return -ENOKEY;"
    },
    {
        "line": 14,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 20,
        "fullcodeline": "return -ENOMEM;"
    }
]