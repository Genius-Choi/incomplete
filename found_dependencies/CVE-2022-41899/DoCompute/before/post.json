[
    {
        "line": 3,
        "fullcodeline": "OP_REQUIRES_OK(context, model_weights.Initialize(context));"
    },
    {
        "line": 6,
        "fullcodeline": "OP_REQUIRES_OK("
    },
    {
        "line": 13,
        "fullcodeline": "OP_REQUIRES_OK(context,"
    },
    {
        "line": 15,
        "fullcodeline": "TensorShape expected_example_state_shape({examples.num_examples(), 4});"
    },
    {
        "line": 16,
        "fullcodeline": "OP_REQUIRES(context,"
    },
    {
        "line": 24,
        "fullcodeline": "auto example_state_data = mutable_example_state_data_t.matrix<float>();"
    },
    {
        "line": 25,
        "fullcodeline": "OP_REQUIRES_OK(context, context->set_output(\"out_example_state_data\","
    },
    {
        "line": 41,
        "fullcodeline": "std::atomic<std::int64_t> atomic_index(-1);"
    },
    {
        "line": 42,
        "fullcodeline": "auto train_step = [&](const int64_t begin, const int64_t end) {"
    },
    {
        "line": 94,
        "fullcodeline": "const int64_t kCostPerUnit = examples.num_features();"
    },
    {
        "line": 98,
        "fullcodeline": "Shard(worker_threads.num_threads, worker_threads.workers,"
    },
    {
        "line": 101,
        "fullcodeline": "OP_REQUIRES_OK(context, train_step_status.value);"
    },
    {
        "line": 8,
        "fullcodeline": "examples.Initialize(context, model_weights, options.num_sparse_features,"
    },
    {
        "line": 14,
        "fullcodeline": "context->input(\"example_state_data\", &example_state_data_t));"
    },
    {
        "line": 17,
        "fullcodeline": "example_state_data_t->shape() == expected_example_state_shape,"
    },
    {
        "line": 18,
        "fullcodeline": "errors::InvalidArgument("
    },
    {
        "line": 99,
        "fullcodeline": "examples.num_examples(), kCostPerUnit, train_step);"
    },
    {
        "line": 19,
        "fullcodeline": "\"Expected shape \", expected_example_state_shape.DebugString(),"
    },
    {
        "line": 21,
        "fullcodeline": "example_state_data_t->shape().DebugString()));"
    },
    {
        "line": 29,
        "fullcodeline": "OP_REQUIRES_OK(context,"
    },
    {
        "line": 96,
        "fullcodeline": "*context->device()->tensorflow_cpu_worker_threads();"
    },
    {
        "line": 30,
        "fullcodeline": "examples.SampleAdaptiveProbabilities("
    },
    {
        "line": 35,
        "fullcodeline": "examples.RandomShuffle();"
    }
]