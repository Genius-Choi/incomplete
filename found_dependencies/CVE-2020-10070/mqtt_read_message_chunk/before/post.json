[
    {
        "line": 10,
        "fullcodeline": "remaining = length - (buf->end - buf->cur);"
    },
    {
        "line": 22,
        "fullcodeline": "len = mqtt_transport_read(client, buf->end, remaining, false);"
    },
    {
        "line": 33,
        "fullcodeline": "client->internal.rx_buf_datalen += len;"
    },
    {
        "line": 34,
        "fullcodeline": "buf->end += len;"
    },
    {
        "line": 11,
        "fullcodeline": "if (remaining <= 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (buf->end + remaining > client->rx_buf + client->rx_buf_size) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (len < 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (len == 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (len < remaining) {"
    },
    {
        "line": 17,
        "fullcodeline": "MQTT_ERR(\"[CID %p]: Buffer too small to receive the message\","
    },
    {
        "line": 24,
        "fullcodeline": "MQTT_TRC(\"[CID %p]: Transport read error: %d\", client, len);"
    },
    {
        "line": 29,
        "fullcodeline": "MQTT_TRC(\"[CID %p]: Connection closed.\", client);"
    },
    {
        "line": 37,
        "fullcodeline": "MQTT_TRC(\"[CID %p]: Message partially received.\", client);"
    },
    {
        "line": 19,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 30,
        "fullcodeline": "return -ENOTCONN;"
    },
    {
        "line": 38,
        "fullcodeline": "return -EAGAIN;"
    }
]