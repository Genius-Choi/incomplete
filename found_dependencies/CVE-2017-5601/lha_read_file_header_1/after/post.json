[
    {
        "line": 9,
        "fullcodeline": "err = ARCHIVE_OK;"
    },
    {
        "line": 14,
        "fullcodeline": "lha->header_size = p[H1_HEADER_SIZE_OFFSET] + 2;"
    },
    {
        "line": 15,
        "fullcodeline": "headersum = p[H1_HEADER_SUM_OFFSET];"
    },
    {
        "line": 17,
        "fullcodeline": "lha->compsize = archive_le32dec(p + H1_COMP_SIZE_OFFSET);"
    },
    {
        "line": 18,
        "fullcodeline": "lha->origsize = archive_le32dec(p + H1_ORIG_SIZE_OFFSET);"
    },
    {
        "line": 19,
        "fullcodeline": "lha->mtime = lha_dos_time(p + H1_DOS_TIME_OFFSET);"
    },
    {
        "line": 20,
        "fullcodeline": "namelen = p[H1_NAME_LEN_OFFSET];"
    },
    {
        "line": 22,
        "fullcodeline": "padding = ((int)lha->header_size) - H1_FIXED_SIZE - namelen;"
    },
    {
        "line": 34,
        "fullcodeline": "archive_strncpy(&lha->filename, p + H1_FILE_NAME_OFFSET, namelen);"
    },
    {
        "line": 35,
        "fullcodeline": "lha->crc = archive_le16dec(p + H1_FILE_NAME_OFFSET + namelen);"
    },
    {
        "line": 36,
        "fullcodeline": "lha->setflag |= CRC_IS_SET;"
    },
    {
        "line": 38,
        "fullcodeline": "sum_calculated = lha_calcsum(0, p, 2, lha->header_size - 2);"
    },
    {
        "line": 41,
        "fullcodeline": "__archive_read_consume(a, lha->header_size - 2);"
    },
    {
        "line": 44,
        "fullcodeline": "err2 = lha_read_file_extended_header(a, lha, NULL, 2,"
    },
    {
        "line": 51,
        "fullcodeline": "lha->compsize -= extdsize - 2;"
    },
    {
        "line": 63,
        "fullcodeline": "archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,"
    },
    {
        "line": 11,
        "fullcodeline": "if ((p = __archive_read_ahead(a, H1_FIXED_SIZE, NULL)) == NULL)"
    },
    {
        "line": 24,
        "fullcodeline": "if (namelen > 230 || padding < 0)"
    },
    {
        "line": 27,
        "fullcodeline": "if ((p = __archive_read_ahead(a, lha->header_size, NULL)) == NULL)"
    },
    {
        "line": 30,
        "fullcodeline": "for (i = 0; i < namelen; i++) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (err2 < ARCHIVE_WARN)"
    },
    {
        "line": 48,
        "fullcodeline": "if (err2 < err)"
    },
    {
        "line": 53,
        "fullcodeline": "if (lha->compsize < 0)"
    },
    {
        "line": 56,
        "fullcodeline": "if (sum_calculated != headersum) {"
    },
    {
        "line": 45,
        "fullcodeline": "(size_t)(lha->compsize + 2), &extdsize);"
    },
    {
        "line": 49,
        "fullcodeline": "err = err2;"
    },
    {
        "line": 57,
        "fullcodeline": "archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,"
    },
    {
        "line": 12,
        "fullcodeline": "return (truncated_error(a));"
    },
    {
        "line": 28,
        "fullcodeline": "return (truncated_error(a));"
    },
    {
        "line": 31,
        "fullcodeline": "if (p[i + H1_FILE_NAME_OFFSET] == 0xff)"
    }
]