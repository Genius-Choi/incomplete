[
    {
        "line": 5,
        "fullcodeline": "pjmedia_rtcp_common *common = (pjmedia_rtcp_common*) pkt;"
    },
    {
        "line": 6,
        "fullcodeline": "const pjmedia_rtcp_rr *rr = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "const pjmedia_rtcp_sr *sr = NULL;"
    },
    {
        "line": 61,
        "fullcodeline": "sess->stat.tx.loss = (rr->total_lost_2 << 16) +"
    },
    {
        "line": 65,
        "fullcodeline": "TRACE_((sess->name, \"Rx RTCP RR: total_lost_2=%x, 1=%x, 0=%x, lost=%d\","
    },
    {
        "line": 89,
        "fullcodeline": "jitter_samp = pj_ntohl(rr->jitter);"
    },
    {
        "line": 99,
        "fullcodeline": "pj_math_stat_update(&sess->stat.tx.jitter, jitter);"
    },
    {
        "line": 11,
        "fullcodeline": "if (common->pt == RTCP_SR) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (rr == NULL)"
    },
    {
        "line": 74,
        "fullcodeline": "if (sess->stat.tx.loss > last_loss) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (jitter_samp <= 4294)"
    },
    {
        "line": 102,
        "fullcodeline": "if (rr->lsr && rr->dlsr) {"
    },
    {
        "line": 17,
        "fullcodeline": "sr = (pjmedia_rtcp_sr*) (((char*)pkt) + sizeof(pjmedia_rtcp_common));"
    },
    {
        "line": 41,
        "fullcodeline": "sess->rx_lsr = ((pj_ntohl(sr->ntp_sec) & 0x0000FFFF) << 16) |"
    },
    {
        "line": 45,
        "fullcodeline": "pj_get_timestamp(&sess->rx_lsr_time);"
    },
    {
        "line": 47,
        "fullcodeline": "TRACE_((sess->name, \"Rx RTCP SR: ntp_ts=%p\","
    },
    {
        "line": 78,
        "fullcodeline": "period = (sess->stat.tx.loss - last_loss) * sess->pkt_size *"
    },
    {
        "line": 82,
        "fullcodeline": "period *= 1000;"
    },
    {
        "line": 85,
        "fullcodeline": "pj_math_stat_update(&sess->stat.tx.loss_period, period);"
    },
    {
        "line": 92,
        "fullcodeline": "jitter = jitter_samp * 1000000 / sess->clock_rate;"
    },
    {
        "line": 110,
        "fullcodeline": "lsr = pj_ntohl(rr->lsr);"
    },
    {
        "line": 113,
        "fullcodeline": "dlsr = pj_ntohl(rr->dlsr);"
    },
    {
        "line": 116,
        "fullcodeline": "pjmedia_rtcp_get_ntp_time(sess, &ntp);"
    },
    {
        "line": 117,
        "fullcodeline": "now = ((ntp.hi & 0xFFFF) << 16) + (ntp.lo >> 16);"
    },
    {
        "line": 120,
        "fullcodeline": "eedelay = now - lsr - dlsr;"
    },
    {
        "line": 133,
        "fullcodeline": "TRACE_((sess->name, \"Rx RTCP RR: lsr=%p, dlsr=%p (%d:%03dms), \""
    },
    {
        "line": 12,
        "fullcodeline": "if (sizeof (pjmedia_rtcp_common) + sizeof (pjmedia_rtcp_sr) > size) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (common->count > 0 && size >= (sizeof(pjmedia_rtcp_sr_pkt))) {"
    },
    {
        "line": 62,
        "fullcodeline": "(rr->total_lost_1 << 8) +"
    },
    {
        "line": 66,
        "fullcodeline": "(int)rr->total_lost_2,"
    },
    {
        "line": 67,
        "fullcodeline": "(int)rr->total_lost_1,"
    },
    {
        "line": 68,
        "fullcodeline": "(int)rr->total_lost_0,"
    },
    {
        "line": 94,
        "fullcodeline": "jitter = jitter_samp * 1000 / sess->clock_rate;"
    },
    {
        "line": 95,
        "fullcodeline": "jitter *= 1000;"
    },
    {
        "line": 126,
        "fullcodeline": "if (eedelay < 4294) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (now-dlsr >= lsr) {"
    },
    {
        "line": 13,
        "fullcodeline": "TRACE_((sess->name, \"Discarding RTCP SR due to truncated size \""
    },
    {
        "line": 19,
        "fullcodeline": "rr = (pjmedia_rtcp_rr*)(((char*)pkt) + (sizeof(pjmedia_rtcp_common)"
    },
    {
        "line": 22,
        "fullcodeline": "} else if (common->pt == RTCP_RR && common->count > 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "((pj_ntohl(sr->ntp_frac) >> 16) & 0xFFFF);"
    },
    {
        "line": 127,
        "fullcodeline": "eedelay = (eedelay * 1000000) >> 16;"
    },
    {
        "line": 142,
        "fullcodeline": "unsigned rtt = (pj_uint32_t)eedelay;"
    },
    {
        "line": 168,
        "fullcodeline": "TRACE_((sess->name, \"RTCP RTT is set to %d usec\", rtt));"
    },
    {
        "line": 171,
        "fullcodeline": "pj_math_stat_update(&sess->stat.rtt, rtt);"
    },
    {
        "line": 28,
        "fullcodeline": "rr = (pjmedia_rtcp_rr*)(((char*)pkt) + sizeof(pjmedia_rtcp_common));"
    },
    {
        "line": 49,
        "fullcodeline": "(pj_uint32_t)(sess->rx_lsr_time.u64*65536/sess->ts_freq.u64)));"
    },
    {
        "line": 129,
        "fullcodeline": "eedelay = (eedelay * 1000) >> 16;"
    },
    {
        "line": 130,
        "fullcodeline": "eedelay *= 1000;"
    },
    {
        "line": 135,
        "fullcodeline": "lsr, dlsr, dlsr/65536, (dlsr%65536)*1000/65536,"
    },
    {
        "line": 136,
        "fullcodeline": "now, (pj_uint32_t)eedelay));"
    },
    {
        "line": 147,
        "fullcodeline": "if (eedelay > 30 * 1000 * 1000UL) {"
    },
    {
        "line": 174,
        "fullcodeline": "PJ_LOG(5, (sess->name, \"Internal RTCP NTP clock skew detected: \""
    },
    {
        "line": 23,
        "fullcodeline": "if (sizeof (pjmedia_rtcp_common) + sizeof (pjmedia_rtcp_rr) > size) {"
    },
    {
        "line": 149,
        "fullcodeline": "TRACE_((sess->name, \"RTT not making any sense, ignored..\"));"
    },
    {
        "line": 24,
        "fullcodeline": "TRACE_((sess->name, \"Discarding RTCP RR due to truncated size \""
    },
    {
        "line": 177,
        "fullcodeline": "lsr, now, dlsr, dlsr/65536,"
    },
    {
        "line": 178,
        "fullcodeline": "(dlsr%65536)*1000/65536,"
    },
    {
        "line": 179,
        "fullcodeline": "dlsr-(now-lsr)));"
    }
]