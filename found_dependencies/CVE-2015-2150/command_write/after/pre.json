[
    {
        "line": 6,
        "fullcodeline": "struct pci_cmd_info *cmd = data;"
    },
    {
        "line": 8,
        "fullcodeline": "dev_data = pci_get_drvdata(dev);"
    },
    {
        "line": 53,
        "fullcodeline": "err = pci_read_config_word(dev, offset, &val);"
    },
    {
        "line": 57,
        "fullcodeline": "value &= PCI_COMMAND_GUEST;"
    },
    {
        "line": 58,
        "fullcodeline": "value |= val & ~PCI_COMMAND_GUEST;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!pci_is_enabled(dev) && is_enable_cmd(value)) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (value & PCI_COMMAND_INVALIDATE) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (err || val == value)"
    },
    {
        "line": 60,
        "fullcodeline": "return pci_write_config_word(dev, offset, value);"
    },
    {
        "line": 13,
        "fullcodeline": "err = pci_enable_device(dev);"
    },
    {
        "line": 27,
        "fullcodeline": "if (!dev->is_busmaster && is_master_cmd(value)) {"
    },
    {
        "line": 31,
        "fullcodeline": "pci_set_master(dev);"
    },
    {
        "line": 39,
        "fullcodeline": "err = pci_set_mwi(dev);"
    },
    {
        "line": 49,
        "fullcodeline": "if (!permissive && (!dev_data || !dev_data->permissive))"
    },
    {
        "line": 17,
        "fullcodeline": "dev_data->enable_intx = 1;"
    },
    {
        "line": 43,
        "fullcodeline": "value &= ~PCI_COMMAND_INVALIDATE;"
    },
    {
        "line": 18,
        "fullcodeline": "} else if (pci_is_enabled(dev) && !is_enable_cmd(value)) {"
    },
    {
        "line": 22,
        "fullcodeline": "pci_disable_device(dev);"
    },
    {
        "line": 42,
        "fullcodeline": "pci_name(dev), err);"
    },
    {
        "line": 24,
        "fullcodeline": "dev_data->enable_intx = 0;"
    }
]