[
    {
        "line": 6,
        "fullcodeline": "dev_data = pci_get_drvdata(dev);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!pci_is_enabled(dev) && is_enable_cmd(value)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (!dev->is_busmaster && is_master_cmd(value)) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (value & PCI_COMMAND_INVALIDATE) {"
    },
    {
        "line": 45,
        "fullcodeline": "return pci_write_config_word(dev, offset, value);"
    },
    {
        "line": 11,
        "fullcodeline": "err = pci_enable_device(dev);"
    },
    {
        "line": 29,
        "fullcodeline": "pci_set_master(dev);"
    },
    {
        "line": 37,
        "fullcodeline": "err = pci_set_mwi(dev);"
    },
    {
        "line": 15,
        "fullcodeline": "dev_data->enable_intx = 1;"
    },
    {
        "line": 16,
        "fullcodeline": "} else if (pci_is_enabled(dev) && !is_enable_cmd(value)) {"
    },
    {
        "line": 39,
        "fullcodeline": "pr_warn(\"%s: cannot enable memory-write-invalidate (%d)\\n\","
    },
    {
        "line": 41,
        "fullcodeline": "value &= ~PCI_COMMAND_INVALIDATE;"
    },
    {
        "line": 20,
        "fullcodeline": "pci_disable_device(dev);"
    },
    {
        "line": 40,
        "fullcodeline": "pci_name(dev), err);"
    },
    {
        "line": 22,
        "fullcodeline": "dev_data->enable_intx = 0;"
    }
]