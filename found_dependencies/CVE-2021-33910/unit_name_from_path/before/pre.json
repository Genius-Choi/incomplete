[
    {
        "line": 2,
        "fullcodeline": "_cleanup_free_ char *p = NULL, *s = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "assert(path);"
    },
    {
        "line": 6,
        "fullcodeline": "assert(suffix);"
    },
    {
        "line": 7,
        "fullcodeline": "assert(ret);"
    },
    {
        "line": 12,
        "fullcodeline": "r = unit_name_path_escape(path, &p);"
    },
    {
        "line": 16,
        "fullcodeline": "s = strjoin(p, suffix);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!unit_suffix_is_valid(suffix))"
    },
    {
        "line": 13,
        "fullcodeline": "if (r < 0)"
    },
    {
        "line": 17,
        "fullcodeline": "if (!s)"
    },
    {
        "line": 20,
        "fullcodeline": "if (strlen(s) >= UNIT_NAME_MAX) /* Return a slightly more descriptive error for this specific condition */"
    },
    {
        "line": 27,
        "fullcodeline": "*ret = TAKE_PTR(s);"
    },
    {
        "line": 24,
        "fullcodeline": "if (!unit_name_is_valid(s, UNIT_NAME_PLAIN))"
    },
    {
        "line": 10,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 18,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 21,
        "fullcodeline": "return -ENAMETOOLONG;"
    },
    {
        "line": 25,
        "fullcodeline": "return -EINVAL;"
    }
]