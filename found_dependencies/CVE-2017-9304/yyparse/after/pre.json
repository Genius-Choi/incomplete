[
    {
        "line": 28,
        "fullcodeline": "yytype_int16 yyssa[YYINITDEPTH];"
    },
    {
        "line": 33,
        "fullcodeline": "YYSTYPE yyvsa[YYINITDEPTH];"
    },
    {
        "line": 42,
        "fullcodeline": "int yytoken = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "int yylen = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "yyssp = yyss = yyssa;"
    },
    {
        "line": 61,
        "fullcodeline": "yyvsp = yyvs = yyvsa;"
    },
    {
        "line": 62,
        "fullcodeline": "yystacksize = YYINITDEPTH;"
    },
    {
        "line": 64,
        "fullcodeline": "YYDPRINTF ((stderr, \"Starting parse\\n\"));"
    },
    {
        "line": 66,
        "fullcodeline": "yystate = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "yyerrstatus = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "yynerrs = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "yychar = YYEMPTY; /* Cause a token to be read.  */"
    },
    {
        "line": 78,
        "fullcodeline": "yyssp++;"
    },
    {
        "line": 81,
        "fullcodeline": "*yyssp = yystate;"
    },
    {
        "line": 144,
        "fullcodeline": "YYDPRINTF ((stderr, \"Entering state %d\\n\", yystate));"
    },
    {
        "line": 160,
        "fullcodeline": "yyn = yypact[yystate];"
    },
    {
        "line": 186,
        "fullcodeline": "yyn += yytoken;"
    },
    {
        "line": 189,
        "fullcodeline": "yyn = yytable[yyn];"
    },
    {
        "line": 204,
        "fullcodeline": "YY_SYMBOL_PRINT (\"Shifting\", yytoken, &yylval, &yylloc);"
    },
    {
        "line": 207,
        "fullcodeline": "yychar = YYEMPTY;"
    },
    {
        "line": 209,
        "fullcodeline": "yystate = yyn;"
    },
    {
        "line": 210,
        "fullcodeline": "YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN"
    },
    {
        "line": 221,
        "fullcodeline": "yyn = yydefact[yystate];"
    },
    {
        "line": 232,
        "fullcodeline": "yylen = yyr2[yyn];"
    },
    {
        "line": 242,
        "fullcodeline": "yyval = yyvsp[1-yylen];"
    },
    {
        "line": 245,
        "fullcodeline": "YY_REDUCE_PRINT (yyn);"
    },
    {
        "line": 674,
        "fullcodeline": "YY_SYMBOL_PRINT (\"-> $$ =\", yyr1[yyn], &yyval, &yyloc);"
    },
    {
        "line": 676,
        "fullcodeline": "YYPOPSTACK (yylen);"
    },
    {
        "line": 677,
        "fullcodeline": "yylen = 0;"
    },
    {
        "line": 678,
        "fullcodeline": "YY_STACK_PRINT (yyss, yyssp);"
    },
    {
        "line": 680,
        "fullcodeline": "*++yyvsp = yyval;"
    },
    {
        "line": 686,
        "fullcodeline": "yyn = yyr1[yyn];"
    },
    {
        "line": 688,
        "fullcodeline": "yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;"
    },
    {
        "line": 703,
        "fullcodeline": "yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);"
    },
    {
        "line": 795,
        "fullcodeline": "yyerrstatus = 3;      /* Each real token shifted decrements this.  */"
    },
    {
        "line": 823,
        "fullcodeline": "YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN"
    },
    {
        "line": 829,
        "fullcodeline": "YY_SYMBOL_PRINT (\"Shifting\", yystos[yyn], yyvsp, yylsp);"
    },
    {
        "line": 831,
        "fullcodeline": "yystate = yyn;"
    },
    {
        "line": 854,
        "fullcodeline": "yyerror (yyscanner, lex_env, YY_(\"memory exhausted\"));"
    },
    {
        "line": 855,
        "fullcodeline": "yyresult = 2;"
    },
    {
        "line": 870,
        "fullcodeline": "YYPOPSTACK (yylen);"
    },
    {
        "line": 871,
        "fullcodeline": "YY_STACK_PRINT (yyss, yyssp);"
    },
    {
        "line": 83,
        "fullcodeline": "if (yyss + yystacksize - 1 <= yyssp)"
    },
    {
        "line": 146,
        "fullcodeline": "if (yystate == YYFINAL)"
    },
    {
        "line": 161,
        "fullcodeline": "if (yypact_value_is_default (yyn))"
    },
    {
        "line": 167,
        "fullcodeline": "if (yychar == YYEMPTY)"
    },
    {
        "line": 173,
        "fullcodeline": "if (yychar <= YYEOF)"
    },
    {
        "line": 187,
        "fullcodeline": "if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)"
    },
    {
        "line": 190,
        "fullcodeline": "if (yyn <= 0)"
    },
    {
        "line": 222,
        "fullcodeline": "if (yyn == 0)"
    },
    {
        "line": 689,
        "fullcodeline": "if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)"
    },
    {
        "line": 706,
        "fullcodeline": "if (!yyerrstatus)"
    },
    {
        "line": 747,
        "fullcodeline": "if (yyerrstatus == 3)"
    },
    {
        "line": 860,
        "fullcodeline": "if (yychar != YYEMPTY)"
    },
    {
        "line": 872,
        "fullcodeline": "while (yyssp != yyss)"
    },
    {
        "line": 879,
        "fullcodeline": "if (yyss != yyssa)"
    },
    {
        "line": 86,
        "fullcodeline": "YYSIZE_T yysize = yyssp - yyss + 1;"
    },
    {
        "line": 169,
        "fullcodeline": "YYDPRINTF ((stderr, \"Reading a token: \"));"
    },
    {
        "line": 170,
        "fullcodeline": "yychar = yylex (&yylval, yyscanner, lex_env);"
    },
    {
        "line": 175,
        "fullcodeline": "yychar = yytoken = YYEOF;"
    },
    {
        "line": 176,
        "fullcodeline": "YYDPRINTF ((stderr, \"Now at end of input.\\n\"));"
    },
    {
        "line": 194,
        "fullcodeline": "yyn = -yyn;"
    },
    {
        "line": 201,
        "fullcodeline": "yyerrstatus--;"
    },
    {
        "line": 211,
        "fullcodeline": "*++yyvsp = yylval;"
    },
    {
        "line": 690,
        "fullcodeline": "yystate = yytable[yystate];"
    },
    {
        "line": 708,
        "fullcodeline": "++yynerrs;"
    },
    {
        "line": 710,
        "fullcodeline": "yyerror (yyscanner, lex_env, YY_(\"syntax error\"));"
    },
    {
        "line": 799,
        "fullcodeline": "yyn = yypact[yystate];"
    },
    {
        "line": 816,
        "fullcodeline": "yydestruct (\"Error: popping\","
    },
    {
        "line": 818,
        "fullcodeline": "YYPOPSTACK (1);"
    },
    {
        "line": 819,
        "fullcodeline": "yystate = *yyssp;"
    },
    {
        "line": 820,
        "fullcodeline": "YY_STACK_PRINT (yyss, yyssp);"
    },
    {
        "line": 824,
        "fullcodeline": "*++yyvsp = yylval;"
    },
    {
        "line": 864,
        "fullcodeline": "yytoken = YYTRANSLATE (yychar);"
    },
    {
        "line": 865,
        "fullcodeline": "yydestruct (\"Cleanup: discarding lookahead\","
    },
    {
        "line": 874,
        "fullcodeline": "yydestruct (\"Cleanup: popping\","
    },
    {
        "line": 876,
        "fullcodeline": "YYPOPSTACK (1);"
    },
    {
        "line": 880,
        "fullcodeline": "YYSTACK_FREE (yyss);"
    },
    {
        "line": 140,
        "fullcodeline": "if (yyss + yystacksize - 1 <= yyssp)"
    },
    {
        "line": 180,
        "fullcodeline": "yytoken = YYTRANSLATE (yychar);"
    },
    {
        "line": 181,
        "fullcodeline": "YY_SYMBOL_PRINT (\"Next token is\", yytoken, &yylval, &yylloc);"
    },
    {
        "line": 192,
        "fullcodeline": "if (yytable_value_is_error (yyn))"
    },
    {
        "line": 251,
        "fullcodeline": "RE_AST* re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 252,
        "fullcodeline": "re_ast->root_node = (yyvsp[0].re_node);"
    },
    {
        "line": 260,
        "fullcodeline": "(yyval.re_node) = (yyvsp[0].re_node);"
    },
    {
        "line": 268,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 269,
        "fullcodeline": "incr_ast_levels();"
    },
    {
        "line": 271,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_ALT, (yyvsp[-2].re_node), (yyvsp[0].re_node));"
    },
    {
        "line": 273,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-2].re_node));"
    },
    {
        "line": 274,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));"
    },
    {
        "line": 276,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 286,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 287,
        "fullcodeline": "incr_ast_levels();"
    },
    {
        "line": 289,
        "fullcodeline": "node = yr_re_node_create(RE_NODE_EMPTY, NULL, NULL);"
    },
    {
        "line": 291,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 292,
        "fullcodeline": "ERROR_IF(node == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 294,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_ALT, (yyvsp[-1].re_node), node);"
    },
    {
        "line": 296,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 304,
        "fullcodeline": "(yyval.re_node) = (yyvsp[0].re_node);"
    },
    {
        "line": 312,
        "fullcodeline": "incr_ast_levels();"
    },
    {
        "line": 314,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, (yyvsp[-1].re_node), (yyvsp[0].re_node));"
    },
    {
        "line": 316,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 317,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));"
    },
    {
        "line": 318,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 328,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 330,
        "fullcodeline": "re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 331,
        "fullcodeline": "re_ast->flags |= RE_FLAGS_GREEDY;"
    },
    {
        "line": 333,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_STAR, (yyvsp[-1].re_node), NULL);"
    },
    {
        "line": 335,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 336,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 346,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 348,
        "fullcodeline": "re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 349,
        "fullcodeline": "re_ast->flags |= RE_FLAGS_UNGREEDY;"
    },
    {
        "line": 351,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_STAR, (yyvsp[-2].re_node), NULL);"
    },
    {
        "line": 353,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-2].re_node));"
    },
    {
        "line": 354,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 356,
        "fullcodeline": "(yyval.re_node)->greedy = FALSE;"
    },
    {
        "line": 366,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 368,
        "fullcodeline": "re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 369,
        "fullcodeline": "re_ast->flags |= RE_FLAGS_GREEDY;"
    },
    {
        "line": 371,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_PLUS, (yyvsp[-1].re_node), NULL);"
    },
    {
        "line": 373,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 374,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 384,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 386,
        "fullcodeline": "re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 387,
        "fullcodeline": "re_ast->flags |= RE_FLAGS_UNGREEDY;"
    },
    {
        "line": 389,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_PLUS, (yyvsp[-2].re_node), NULL);"
    },
    {
        "line": 391,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-2].re_node));"
    },
    {
        "line": 392,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 394,
        "fullcodeline": "(yyval.re_node)->greedy = FALSE;"
    },
    {
        "line": 402,
        "fullcodeline": "RE_AST* re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 403,
        "fullcodeline": "re_ast->flags |= RE_FLAGS_GREEDY;"
    },
    {
        "line": 417,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 418,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 420,
        "fullcodeline": "(yyval.re_node)->start = 0;"
    },
    {
        "line": 421,
        "fullcodeline": "(yyval.re_node)->end = 1;"
    },
    {
        "line": 429,
        "fullcodeline": "RE_AST* re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 430,
        "fullcodeline": "re_ast->flags |= RE_FLAGS_UNGREEDY;"
    },
    {
        "line": 444,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-2].re_node));"
    },
    {
        "line": 445,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 447,
        "fullcodeline": "(yyval.re_node)->start = 0;"
    },
    {
        "line": 448,
        "fullcodeline": "(yyval.re_node)->end = 1;"
    },
    {
        "line": 449,
        "fullcodeline": "(yyval.re_node)->greedy = FALSE;"
    },
    {
        "line": 457,
        "fullcodeline": "RE_AST* re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 458,
        "fullcodeline": "re_ast->flags |= RE_FLAGS_GREEDY;"
    },
    {
        "line": 472,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 474,
        "fullcodeline": "(yyval.re_node)->start = (yyvsp[0].range) & 0xFFFF;;"
    },
    {
        "line": 475,
        "fullcodeline": "(yyval.re_node)->end = (yyvsp[0].range) >> 16;;"
    },
    {
        "line": 483,
        "fullcodeline": "RE_AST* re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 484,
        "fullcodeline": "re_ast->flags |= RE_FLAGS_UNGREEDY;"
    },
    {
        "line": 498,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 500,
        "fullcodeline": "(yyval.re_node)->start = (yyvsp[-1].range) & 0xFFFF;;"
    },
    {
        "line": 501,
        "fullcodeline": "(yyval.re_node)->end = (yyvsp[-1].range) >> 16;;"
    },
    {
        "line": 502,
        "fullcodeline": "(yyval.re_node)->greedy = FALSE;"
    },
    {
        "line": 510,
        "fullcodeline": "(yyval.re_node) = (yyvsp[0].re_node);"
    },
    {
        "line": 518,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_WORD_BOUNDARY, NULL, NULL);"
    },
    {
        "line": 520,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 528,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_NON_WORD_BOUNDARY, NULL, NULL);"
    },
    {
        "line": 530,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 538,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_ANCHOR_START, NULL, NULL);"
    },
    {
        "line": 540,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 548,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_ANCHOR_END, NULL, NULL);"
    },
    {
        "line": 550,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 558,
        "fullcodeline": "incr_ast_levels();"
    },
    {
        "line": 560,
        "fullcodeline": "(yyval.re_node) = (yyvsp[-1].re_node);"
    },
    {
        "line": 568,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_ANY, NULL, NULL);"
    },
    {
        "line": 570,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 578,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_LITERAL, NULL, NULL);"
    },
    {
        "line": 580,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 582,
        "fullcodeline": "(yyval.re_node)->value = (yyvsp[0].integer);"
    },
    {
        "line": 590,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_WORD_CHAR, NULL, NULL);"
    },
    {
        "line": 592,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 600,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_NON_WORD_CHAR, NULL, NULL);"
    },
    {
        "line": 602,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 610,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_SPACE, NULL, NULL);"
    },
    {
        "line": 612,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 620,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_NON_SPACE, NULL, NULL);"
    },
    {
        "line": 622,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 630,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_DIGIT, NULL, NULL);"
    },
    {
        "line": 632,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 640,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_NON_DIGIT, NULL, NULL);"
    },
    {
        "line": 642,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 650,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_CLASS, NULL, NULL);"
    },
    {
        "line": 652,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 654,
        "fullcodeline": "(yyval.re_node)->class_vector = (yyvsp[0].class_vector);"
    },
    {
        "line": 692,
        "fullcodeline": "yystate = yydefgoto[yyn - YYNTOKENS];"
    },
    {
        "line": 752,
        "fullcodeline": "if (yychar <= YYEOF)"
    },
    {
        "line": 800,
        "fullcodeline": "if (!yypact_value_is_default (yyn))"
    },
    {
        "line": 812,
        "fullcodeline": "if (yyssp == yyss)"
    },
    {
        "line": 405,
        "fullcodeline": "if ((yyvsp[-1].re_node)->type == RE_NODE_ANY)"
    },
    {
        "line": 432,
        "fullcodeline": "if ((yyvsp[-2].re_node)->type == RE_NODE_ANY)"
    },
    {
        "line": 460,
        "fullcodeline": "if ((yyvsp[-1].re_node)->type == RE_NODE_ANY)"
    },
    {
        "line": 486,
        "fullcodeline": "if ((yyvsp[-2].re_node)->type == RE_NODE_ANY)"
    },
    {
        "line": 802,
        "fullcodeline": "yyn += YYTERROR;"
    },
    {
        "line": 407,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE_ANY, NULL, NULL);"
    },
    {
        "line": 408,
        "fullcodeline": "DESTROY_NODE_IF(TRUE, (yyvsp[-1].re_node));"
    },
    {
        "line": 434,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE_ANY, NULL, NULL);"
    },
    {
        "line": 435,
        "fullcodeline": "DESTROY_NODE_IF(TRUE, (yyvsp[-2].re_node));"
    },
    {
        "line": 462,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE_ANY, NULL, NULL);"
    },
    {
        "line": 463,
        "fullcodeline": "DESTROY_NODE_IF(TRUE, (yyvsp[-1].re_node));"
    },
    {
        "line": 488,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE_ANY, NULL, NULL);"
    },
    {
        "line": 489,
        "fullcodeline": "DESTROY_NODE_IF(TRUE, (yyvsp[-2].re_node));"
    },
    {
        "line": 755,
        "fullcodeline": "if (yychar == YYEOF)"
    },
    {
        "line": 760,
        "fullcodeline": "yydestruct (\"Error: discarding\","
    },
    {
        "line": 762,
        "fullcodeline": "yychar = YYEMPTY;"
    },
    {
        "line": 803,
        "fullcodeline": "if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)"
    },
    {
        "line": 412,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 413,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE, (yyvsp[-1].re_node), NULL);"
    },
    {
        "line": 414,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 439,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 440,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE, (yyvsp[-2].re_node), NULL);"
    },
    {
        "line": 441,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-2].re_node));"
    },
    {
        "line": 467,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 468,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE, (yyvsp[-1].re_node), NULL);"
    },
    {
        "line": 469,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 493,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 494,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE, (yyvsp[-2].re_node), NULL);"
    },
    {
        "line": 495,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-2].re_node));"
    },
    {
        "line": 805,
        "fullcodeline": "yyn = yytable[yyn];"
    },
    {
        "line": 806,
        "fullcodeline": "if (0 < yyn)"
    }
]