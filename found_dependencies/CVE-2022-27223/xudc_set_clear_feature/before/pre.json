[
    {
        "line": 3,
        "fullcodeline": "struct xusb_ep *ep0\t= &udc->ep[0];"
    },
    {
        "line": 4,
        "fullcodeline": "struct xusb_req *req\t= udc->req;"
    },
    {
        "line": 9,
        "fullcodeline": "int flag = (udc->setup.bRequest == USB_REQ_SET_FEATURE ? 1 : 0);"
    },
    {
        "line": 73,
        "fullcodeline": "ret = __xudc_ep0_queue(ep0, req);"
    },
    {
        "line": 77,
        "fullcodeline": "dev_err(udc->dev, \"Can't respond to SET/CLEAR FEATURE\\n\");"
    },
    {
        "line": 33,
        "fullcodeline": "if (!udc->setup.wValue) {"
    },
    {
        "line": 28,
        "fullcodeline": "xudc_ep0_stall(udc);"
    },
    {
        "line": 34,
        "fullcodeline": "endpoint = udc->setup.wIndex & USB_ENDPOINT_NUMBER_MASK;"
    },
    {
        "line": 35,
        "fullcodeline": "target_ep = &udc->ep[endpoint];"
    },
    {
        "line": 36,
        "fullcodeline": "outinbit = udc->setup.wIndex & USB_ENDPOINT_DIR_MASK;"
    },
    {
        "line": 37,
        "fullcodeline": "outinbit = outinbit >> 7;"
    },
    {
        "line": 44,
        "fullcodeline": "epcfgreg = udc->read_fn(udc->addr + target_ep->offset);"
    },
    {
        "line": 40,
        "fullcodeline": "if (outinbit != target_ep->is_in) {"
    },
    {
        "line": 23,
        "fullcodeline": "udc->remote_wkp = 1;"
    },
    {
        "line": 41,
        "fullcodeline": "xudc_ep0_stall(udc);"
    },
    {
        "line": 47,
        "fullcodeline": "epcfgreg &= ~XUSB_EP_CFG_STALL_MASK;"
    },
    {
        "line": 48,
        "fullcodeline": "udc->write_fn(udc->addr,"
    },
    {
        "line": 25,
        "fullcodeline": "udc->remote_wkp = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "epcfgreg |= XUSB_EP_CFG_STALL_MASK;"
    },
    {
        "line": 53,
        "fullcodeline": "udc->write_fn(udc->addr,"
    },
    {
        "line": 58,
        "fullcodeline": "epcfgreg &= ~(XUSB_EP_CFG_STALL_MASK |"
    },
    {
        "line": 60,
        "fullcodeline": "udc->write_fn(udc->addr,"
    }
]