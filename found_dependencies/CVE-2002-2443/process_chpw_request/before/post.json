[
    {
        "line": 9,
        "fullcodeline": "krb5_data ap_req, ap_rep = empty_data();"
    },
    {
        "line": 10,
        "fullcodeline": "krb5_data cipher = empty_data(), clear = empty_data();"
    },
    {
        "line": 11,
        "fullcodeline": "krb5_auth_context auth_context = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "krb5_principal changepw = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "krb5_principal client, target = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "krb5_ticket *ticket = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "char strresult[1024];"
    },
    {
        "line": 19,
        "fullcodeline": "char *clientstr = NULL, *targetstr = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "const char *errmsg = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "char addrbuf[100];"
    },
    {
        "line": 26,
        "fullcodeline": "krb5_address *addr = remote_faddr->address;"
    },
    {
        "line": 28,
        "fullcodeline": "*rep = empty_data();"
    },
    {
        "line": 39,
        "fullcodeline": "ptr = req->data;"
    },
    {
        "line": 43,
        "fullcodeline": "plen = (*ptr++ & 0xff);"
    },
    {
        "line": 44,
        "fullcodeline": "plen = (plen<<8) | (*ptr++ & 0xff);"
    },
    {
        "line": 56,
        "fullcodeline": "vno = (*ptr++ & 0xff) ;"
    },
    {
        "line": 57,
        "fullcodeline": "vno = (vno<<8) | (*ptr++ & 0xff);"
    },
    {
        "line": 69,
        "fullcodeline": "ap_req.length = (*ptr++ & 0xff);"
    },
    {
        "line": 70,
        "fullcodeline": "ap_req.length = (ap_req.length<<8) | (*ptr++ & 0xff);"
    },
    {
        "line": 82,
        "fullcodeline": "ap_req.data = ptr;"
    },
    {
        "line": 83,
        "fullcodeline": "ptr += ap_req.length;"
    },
    {
        "line": 85,
        "fullcodeline": "ret = krb5_auth_con_init(context, &auth_context);"
    },
    {
        "line": 93,
        "fullcodeline": "ret = krb5_auth_con_setflags(context, auth_context,"
    },
    {
        "line": 102,
        "fullcodeline": "ret = krb5_build_principal(context, &changepw, strlen(realm), realm,"
    },
    {
        "line": 111,
        "fullcodeline": "ret = krb5_rd_req(context, &auth_context, &ap_req, changepw, keytab,"
    },
    {
        "line": 123,
        "fullcodeline": "ret = krb5_mk_rep(context, auth_context, &ap_rep);"
    },
    {
        "line": 133,
        "fullcodeline": "cipher.length = (req->data + req->length) - ptr;"
    },
    {
        "line": 134,
        "fullcodeline": "cipher.data = ptr;"
    },
    {
        "line": 144,
        "fullcodeline": "ret = krb5_rd_priv(context, auth_context, &cipher, &clear, &replay);"
    },
    {
        "line": 181,
        "fullcodeline": "ret = krb5_unparse_name(context, client, &clientstr);"
    },
    {
        "line": 200,
        "fullcodeline": "ptr = k5memdup0(clear.data, clear.length, &ret);"
    },
    {
        "line": 201,
        "fullcodeline": "ret = schpw_util_wrapper(server_handle, client, target,"
    },
    {
        "line": 208,
        "fullcodeline": "zapfree(clear.data, clear.length);"
    },
    {
        "line": 209,
        "fullcodeline": "zapfree(ptr, clear.length);"
    },
    {
        "line": 210,
        "fullcodeline": "clear = empty_data();"
    },
    {
        "line": 212,
        "fullcodeline": "clen = strlen(clientstr);"
    },
    {
        "line": 213,
        "fullcodeline": "trunc_name(&clen, &cdots);"
    },
    {
        "line": 295,
        "fullcodeline": "clear.length = 2 + strlen(strresult);"
    },
    {
        "line": 296,
        "fullcodeline": "clear.data = (char *) malloc(clear.length);"
    },
    {
        "line": 298,
        "fullcodeline": "ptr = clear.data;"
    },
    {
        "line": 300,
        "fullcodeline": "*ptr++ = (numresult>>8) & 0xff;"
    },
    {
        "line": 301,
        "fullcodeline": "*ptr++ = numresult & 0xff;"
    },
    {
        "line": 303,
        "fullcodeline": "memcpy(ptr, strresult, strlen(strresult));"
    },
    {
        "line": 305,
        "fullcodeline": "cipher = empty_data();"
    },
    {
        "line": 372,
        "fullcodeline": "ret = alloc_data(rep, 6 + ap_rep.length + cipher.length);"
    },
    {
        "line": 375,
        "fullcodeline": "ptr = rep->data;"
    },
    {
        "line": 379,
        "fullcodeline": "*ptr++ = (rep->length>>8) & 0xff;"
    },
    {
        "line": 380,
        "fullcodeline": "*ptr++ = rep->length & 0xff;"
    },
    {
        "line": 384,
        "fullcodeline": "*ptr++ = 0;"
    },
    {
        "line": 385,
        "fullcodeline": "*ptr++ = 1;"
    },
    {
        "line": 389,
        "fullcodeline": "*ptr++ = (ap_rep.length>>8) & 0xff;"
    },
    {
        "line": 390,
        "fullcodeline": "*ptr++ = ap_rep.length & 0xff;"
    },
    {
        "line": 401,
        "fullcodeline": "memcpy(ptr, cipher.data, cipher.length);"
    },
    {
        "line": 404,
        "fullcodeline": "krb5_auth_con_free(context, auth_context);"
    },
    {
        "line": 405,
        "fullcodeline": "krb5_free_principal(context, changepw);"
    },
    {
        "line": 406,
        "fullcodeline": "krb5_free_ticket(context, ticket);"
    },
    {
        "line": 407,
        "fullcodeline": "free(ap_rep.data);"
    },
    {
        "line": 408,
        "fullcodeline": "free(clear.data);"
    },
    {
        "line": 409,
        "fullcodeline": "free(cipher.data);"
    },
    {
        "line": 410,
        "fullcodeline": "krb5_free_principal(context, target);"
    },
    {
        "line": 411,
        "fullcodeline": "krb5_free_unparsed_name(context, targetstr);"
    },
    {
        "line": 412,
        "fullcodeline": "krb5_free_unparsed_name(context, clientstr);"
    },
    {
        "line": 413,
        "fullcodeline": "krb5_free_error_message(context, errmsg);"
    },
    {
        "line": 30,
        "fullcodeline": "if (req->length < 4) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (plen != req->length) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (vno != 1 && vno != RFC3244_VERSION) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (ptr + ap_req.length >= req->data + req->length) {"
    },
    {
        "line": 154,
        "fullcodeline": "if (vno == RFC3244_VERSION) {"
    },
    {
        "line": 190,
        "fullcodeline": "if (vno == 1 &&"
    },
    {
        "line": 243,
        "fullcodeline": "if (getnameinfo(ss2sa(&ss), salen,"
    },
    {
        "line": 248,
        "fullcodeline": "if (vno == RFC3244_VERSION) {"
    },
    {
        "line": 329,
        "fullcodeline": "if (cipher.length == 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_MODIFIED;"
    },
    {
        "line": 34,
        "fullcodeline": "numresult = KRB5_KPASSWD_MALFORMED;"
    },
    {
        "line": 35,
        "fullcodeline": "strlcpy(strresult, \"Request was truncated\", sizeof(strresult));"
    },
    {
        "line": 47,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_MODIFIED;"
    },
    {
        "line": 48,
        "fullcodeline": "numresult = KRB5_KPASSWD_MALFORMED;"
    },
    {
        "line": 49,
        "fullcodeline": "strlcpy(strresult, \"Request length was inconsistent\","
    },
    {
        "line": 60,
        "fullcodeline": "ret = KRB5KDC_ERR_BAD_PVNO;"
    },
    {
        "line": 61,
        "fullcodeline": "numresult = KRB5_KPASSWD_BAD_VERSION;"
    },
    {
        "line": 62,
        "fullcodeline": "snprintf(strresult, sizeof(strresult),"
    },
    {
        "line": 73,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_MODIFIED;"
    },
    {
        "line": 74,
        "fullcodeline": "numresult = KRB5_KPASSWD_MALFORMED;"
    },
    {
        "line": 75,
        "fullcodeline": "strlcpy(strresult, \"Request was truncated in AP-REQ\","
    },
    {
        "line": 87,
        "fullcodeline": "numresult = KRB5_KPASSWD_HARDERROR;"
    },
    {
        "line": 88,
        "fullcodeline": "strlcpy(strresult, \"Failed initializing auth context\","
    },
    {
        "line": 96,
        "fullcodeline": "numresult = KRB5_KPASSWD_HARDERROR;"
    },
    {
        "line": 97,
        "fullcodeline": "strlcpy(strresult, \"Failed initializing auth context\","
    },
    {
        "line": 105,
        "fullcodeline": "numresult = KRB5_KPASSWD_HARDERROR;"
    },
    {
        "line": 106,
        "fullcodeline": "strlcpy(strresult, \"Failed building kadmin/changepw principal\","
    },
    {
        "line": 115,
        "fullcodeline": "numresult = KRB5_KPASSWD_AUTHERROR;"
    },
    {
        "line": 116,
        "fullcodeline": "strlcpy(strresult, \"Failed reading application request\","
    },
    {
        "line": 125,
        "fullcodeline": "numresult = KRB5_KPASSWD_AUTHERROR;"
    },
    {
        "line": 126,
        "fullcodeline": "strlcpy(strresult, \"Failed replying to application request\","
    },
    {
        "line": 146,
        "fullcodeline": "numresult = KRB5_KPASSWD_HARDERROR;"
    },
    {
        "line": 147,
        "fullcodeline": "strlcpy(strresult, \"Failed decrypting request\", sizeof(strresult));"
    },
    {
        "line": 157,
        "fullcodeline": "ret = decode_krb5_setpw_req(&clear, &clear_data, &target);"
    },
    {
        "line": 165,
        "fullcodeline": "zapfree(clear.data, clear.length);"
    },
    {
        "line": 168,
        "fullcodeline": "free(clear_data);"
    },
    {
        "line": 183,
        "fullcodeline": "numresult = KRB5_KPASSWD_HARDERROR;"
    },
    {
        "line": 184,
        "fullcodeline": "strlcpy(strresult, \"Failed unparsing client name for log\","
    },
    {
        "line": 191,
        "fullcodeline": "(ticket->enc_part2->flags & TKT_FLG_INITIAL) == 0) {"
    },
    {
        "line": 192,
        "fullcodeline": "numresult = KRB5_KPASSWD_INITIAL_FLAG_NEEDED;"
    },
    {
        "line": 193,
        "fullcodeline": "strlcpy(strresult, \"Ticket must be derived from a password\","
    },
    {
        "line": 202,
        "fullcodeline": "(ticket->enc_part2->flags & TKT_FLG_INITIAL) != 0,"
    },
    {
        "line": 205,
        "fullcodeline": "errmsg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 246,
        "fullcodeline": "strlcpy(addrbuf, \"<unprintable>\", sizeof(addrbuf));"
    },
    {
        "line": 263,
        "fullcodeline": "krb5_klog_syslog(LOG_NOTICE, _(\"setpw request from %s by %.*s%s for \""
    },
    {
        "line": 274,
        "fullcodeline": "numresult = KRB5_KPASSWD_ACCESSDENIED;"
    },
    {
        "line": 282,
        "fullcodeline": "numresult = KRB5_KPASSWD_SOFTERROR;"
    },
    {
        "line": 285,
        "fullcodeline": "numresult = KRB5_KPASSWD_SUCCESS;"
    },
    {
        "line": 286,
        "fullcodeline": "strlcpy(strresult, \"\", sizeof(strresult));"
    },
    {
        "line": 289,
        "fullcodeline": "numresult = KRB5_KPASSWD_HARDERROR;"
    },
    {
        "line": 308,
        "fullcodeline": "ret = krb5_auth_con_setaddrs(context, auth_context,"
    },
    {
        "line": 338,
        "fullcodeline": "krberror.ctime = 0;"
    },
    {
        "line": 339,
        "fullcodeline": "krberror.cusec = 0;"
    },
    {
        "line": 340,
        "fullcodeline": "krberror.susec = 0;"
    },
    {
        "line": 341,
        "fullcodeline": "ret = krb5_timeofday(context, &krberror.stime);"
    },
    {
        "line": 347,
        "fullcodeline": "krberror.error = ret;"
    },
    {
        "line": 348,
        "fullcodeline": "krberror.error -= ERROR_TABLE_BASE_krb5;"
    },
    {
        "line": 352,
        "fullcodeline": "krberror.client = NULL;"
    },
    {
        "line": 354,
        "fullcodeline": "ret = krb5_build_principal(context, &krberror.server,"
    },
    {
        "line": 359,
        "fullcodeline": "krberror.text.length = 0;"
    },
    {
        "line": 360,
        "fullcodeline": "krberror.e_data = clear;"
    },
    {
        "line": 362,
        "fullcodeline": "ret = krb5_mk_error(context, &krberror, &cipher);"
    },
    {
        "line": 364,
        "fullcodeline": "krb5_free_principal(context, krberror.server);"
    },
    {
        "line": 395,
        "fullcodeline": "memcpy(ptr, ap_rep.data, ap_rep.length);"
    },
    {
        "line": 396,
        "fullcodeline": "ptr += ap_rep.length;"
    },
    {
        "line": 158,
        "fullcodeline": "if (ret != 0) {"
    },
    {
        "line": 170,
        "fullcodeline": "if (target != NULL) {"
    },
    {
        "line": 217,
        "fullcodeline": "struct sockaddr_in *sin = ss2sin(&ss);"
    },
    {
        "line": 219,
        "fullcodeline": "sin->sin_family = AF_INET;"
    },
    {
        "line": 220,
        "fullcodeline": "memcpy(&sin->sin_addr, addr->contents, addr->length);"
    },
    {
        "line": 221,
        "fullcodeline": "sin->sin_port = htons(remote_faddr->port);"
    },
    {
        "line": 226,
        "fullcodeline": "struct sockaddr_in6 *sin6 = ss2sin6(&ss);"
    },
    {
        "line": 228,
        "fullcodeline": "sin6->sin6_family = AF_INET6;"
    },
    {
        "line": 229,
        "fullcodeline": "memcpy(&sin6->sin6_addr, addr->contents, addr->length);"
    },
    {
        "line": 230,
        "fullcodeline": "sin6->sin6_port = htons(remote_faddr->port);"
    },
    {
        "line": 235,
        "fullcodeline": "struct sockaddr *sa = ss2sa(&ss);"
    },
    {
        "line": 237,
        "fullcodeline": "sa->sa_family = AF_UNSPEC;"
    },
    {
        "line": 245,
        "fullcodeline": "NI_NUMERICHOST | NI_NUMERICSERV) != 0)"
    },
    {
        "line": 253,
        "fullcodeline": "if (target == NULL) {"
    },
    {
        "line": 264,
        "fullcodeline": "\"%.*s%s: %s\"), addrbuf, (int) clen,"
    },
    {
        "line": 265,
        "fullcodeline": "clientstr, cdots, (int) tlen, targetp, tdots,"
    },
    {
        "line": 266,
        "fullcodeline": "errmsg ? errmsg : \"success\");"
    },
    {
        "line": 268,
        "fullcodeline": "krb5_klog_syslog(LOG_NOTICE, _(\"chpw request from %s for %.*s%s: %s\"),"
    },
    {
        "line": 349,
        "fullcodeline": "if (krberror.error < 0 || krberror.error > 128)"
    },
    {
        "line": 159,
        "fullcodeline": "numresult = KRB5_KPASSWD_MALFORMED;"
    },
    {
        "line": 160,
        "fullcodeline": "strlcpy(strresult, \"Failed decoding ChangePasswdData\","
    },
    {
        "line": 171,
        "fullcodeline": "ret = krb5_unparse_name(context, target, &targetstr);"
    },
    {
        "line": 254,
        "fullcodeline": "tlen = clen;"
    },
    {
        "line": 255,
        "fullcodeline": "tdots = cdots;"
    },
    {
        "line": 256,
        "fullcodeline": "targetp = targetstr;"
    },
    {
        "line": 269,
        "fullcodeline": "addrbuf, (int) clen, clientstr, cdots,"
    },
    {
        "line": 270,
        "fullcodeline": "errmsg ? errmsg : \"success\");"
    },
    {
        "line": 311,
        "fullcodeline": "numresult = KRB5_KPASSWD_HARDERROR;"
    },
    {
        "line": 312,
        "fullcodeline": "strlcpy(strresult,"
    },
    {
        "line": 334,
        "fullcodeline": "free(ap_rep.data);"
    },
    {
        "line": 335,
        "fullcodeline": "ap_rep = empty_data();"
    },
    {
        "line": 350,
        "fullcodeline": "krberror.error = KRB_ERR_GENERIC;"
    },
    {
        "line": 355,
        "fullcodeline": "strlen(realm), realm,"
    },
    {
        "line": 172,
        "fullcodeline": "if (ret != 0) {"
    },
    {
        "line": 258,
        "fullcodeline": "tlen = strlen(targetstr);"
    },
    {
        "line": 259,
        "fullcodeline": "trunc_name(&tlen, &tdots);"
    },
    {
        "line": 260,
        "fullcodeline": "targetp = clientstr;"
    },
    {
        "line": 316,
        "fullcodeline": "ret = krb5_mk_priv(context, auth_context, &clear, &cipher,"
    },
    {
        "line": 173,
        "fullcodeline": "numresult = KRB5_KPASSWD_HARDERROR;"
    },
    {
        "line": 174,
        "fullcodeline": "strlcpy(strresult, \"Failed unparsing target name for log\","
    },
    {
        "line": 319,
        "fullcodeline": "numresult = KRB5_KPASSWD_HARDERROR;"
    },
    {
        "line": 320,
        "fullcodeline": "strlcpy(strresult, \"Failed encrypting reply\","
    }
]