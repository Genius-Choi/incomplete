[
    {
        "line": 3,
        "fullcodeline": "int len = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "} while (*in && digit4 != '=');"
    },
    {
        "line": 8,
        "fullcodeline": "const unsigned char digit1 = in[0];"
    },
    {
        "line": 11,
        "fullcodeline": "const unsigned char digit2 = in[1];"
    },
    {
        "line": 14,
        "fullcodeline": "const unsigned char digit3 = in[2];"
    },
    {
        "line": 17,
        "fullcodeline": "digit4 = in[3];"
    },
    {
        "line": 20,
        "fullcodeline": "in += 4;"
    },
    {
        "line": 25,
        "fullcodeline": "*out++ = (base64val(digit1) << 2) | (base64val(digit2) >> 4);"
    },
    {
        "line": 26,
        "fullcodeline": "len++;"
    },
    {
        "line": 9,
        "fullcodeline": "if ((digit1 > 127) || (base64val(digit1) == BAD))"
    },
    {
        "line": 12,
        "fullcodeline": "if ((digit2 > 127) || (base64val(digit2) == BAD))"
    },
    {
        "line": 15,
        "fullcodeline": "if ((digit3 > 127) || ((digit3 != '=') && (base64val(digit3) == BAD)))"
    },
    {
        "line": 18,
        "fullcodeline": "if ((digit4 > 127) || ((digit4 != '=') && (base64val(digit4) == BAD)))"
    },
    {
        "line": 23,
        "fullcodeline": "if (len == olen)"
    },
    {
        "line": 27,
        "fullcodeline": "if (digit3 != '=')"
    },
    {
        "line": 31,
        "fullcodeline": "*out++ = ((base64val(digit2) << 4) & 0xf0) | (base64val(digit3) >> 2);"
    },
    {
        "line": 32,
        "fullcodeline": "len++;"
    },
    {
        "line": 10,
        "fullcodeline": "return -1;"
    },
    {
        "line": 13,
        "fullcodeline": "return -1;"
    },
    {
        "line": 16,
        "fullcodeline": "return -1;"
    },
    {
        "line": 19,
        "fullcodeline": "return -1;"
    },
    {
        "line": 29,
        "fullcodeline": "if (len == olen)"
    },
    {
        "line": 33,
        "fullcodeline": "if (digit4 != '=')"
    },
    {
        "line": 37,
        "fullcodeline": "*out++ = ((base64val(digit3) << 6) & 0xc0) | base64val(digit4);"
    },
    {
        "line": 38,
        "fullcodeline": "len++;"
    },
    {
        "line": 35,
        "fullcodeline": "if (len == olen)"
    }
]