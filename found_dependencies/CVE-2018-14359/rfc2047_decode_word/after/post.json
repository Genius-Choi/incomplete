[
    {
        "line": 3,
        "fullcodeline": "const char *it = s;"
    },
    {
        "line": 4,
        "fullcodeline": "const char *end = s + len;"
    },
    {
        "line": 43,
        "fullcodeline": "assert(0); /* The enc parameter has an invalid value */"
    },
    {
        "line": 6,
        "fullcodeline": "if (enc == ENCQUOTEDPRINTABLE)"
    },
    {
        "line": 8,
        "fullcodeline": "struct Buffer buf = { 0 };"
    },
    {
        "line": 26,
        "fullcodeline": "mutt_buffer_addch(&buf, '\\0');"
    },
    {
        "line": 9,
        "fullcodeline": "for (; it < end; ++it)"
    },
    {
        "line": 29,
        "fullcodeline": "else if (enc == ENCBASE64)"
    },
    {
        "line": 11,
        "fullcodeline": "if (*it == '_')"
    },
    {
        "line": 31,
        "fullcodeline": "const int olen = 3 * len / 4 + 1;"
    },
    {
        "line": 32,
        "fullcodeline": "char *out = mutt_mem_malloc(olen);"
    },
    {
        "line": 33,
        "fullcodeline": "int dlen = mutt_b64_decode(out, it, olen);"
    },
    {
        "line": 39,
        "fullcodeline": "out[dlen] = '\\0';"
    },
    {
        "line": 13,
        "fullcodeline": "mutt_buffer_addch(&buf, ' ');"
    },
    {
        "line": 34,
        "fullcodeline": "if (dlen == -1)"
    },
    {
        "line": 36,
        "fullcodeline": "FREE(&out);"
    },
    {
        "line": 15,
        "fullcodeline": "else if ((*it == '=') && (!(it[1] & ~127) && hexval(it[1]) != -1) &&"
    },
    {
        "line": 16,
        "fullcodeline": "(!(it[2] & ~127) && hexval(it[2]) != -1))"
    },
    {
        "line": 18,
        "fullcodeline": "mutt_buffer_addch(&buf, (hexval(it[1]) << 4) | hexval(it[2]));"
    },
    {
        "line": 19,
        "fullcodeline": "it += 2;"
    },
    {
        "line": 23,
        "fullcodeline": "mutt_buffer_addch(&buf, *it);"
    }
]