[
    {
        "line": 25,
        "fullcodeline": "configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );"
    },
    {
        "line": 12,
        "fullcodeline": "if( xIsMessageBuffer == pdTRUE )"
    },
    {
        "line": 29,
        "fullcodeline": "if( xTriggerLevelBytes == ( size_t ) 0 )"
    },
    {
        "line": 42,
        "fullcodeline": "if( xBufferSizeBytes < ( xBufferSizeBytes + 1 + sizeof( StreamBuffer_t ) ) )"
    },
    {
        "line": 53,
        "fullcodeline": "if( pucAllocatedMemory != NULL )"
    },
    {
        "line": 68,
        "fullcodeline": "return ( StreamBufferHandle_t ) pucAllocatedMemory; /*lint !e9087 !e826 Safe cast as allocated memory is aligned. */"
    },
    {
        "line": 15,
        "fullcodeline": "ucFlags = sbFLAGS_IS_MESSAGE_BUFFER;"
    },
    {
        "line": 16,
        "fullcodeline": "configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );"
    },
    {
        "line": 31,
        "fullcodeline": "xTriggerLevelBytes = ( size_t ) 1;"
    },
    {
        "line": 44,
        "fullcodeline": "xBufferSizeBytes++;"
    },
    {
        "line": 45,
        "fullcodeline": "pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /*lint !e9079 malloc() only returns void*. */"
    },
    {
        "line": 55,
        "fullcodeline": "prvInitialiseNewStreamBuffer( ( StreamBuffer_t * ) pucAllocatedMemory,       /* Structure at the start of the allocated memory. */ /*lint !e9087 Safe cast as allocated memory is aligned. */ /*lint !e826 Area is not too small and alignment is guaranteed provided malloc() behaves as expected and returns aligned buffer. */"
    },
    {
        "line": 61,
        "fullcodeline": "traceSTREAM_BUFFER_CREATE( ( ( StreamBuffer_t * ) pucAllocatedMemory ), xIsMessageBuffer );"
    },
    {
        "line": 21,
        "fullcodeline": "ucFlags = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "configASSERT( xBufferSizeBytes > 0 );"
    },
    {
        "line": 49,
        "fullcodeline": "pucAllocatedMemory = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "pucAllocatedMemory + sizeof( StreamBuffer_t ), /* Storage area follows. */ /*lint !e9016 Indexing past structure valid for uint8_t pointer, also storage area has no alignment requirement. */"
    },
    {
        "line": 65,
        "fullcodeline": "traceSTREAM_BUFFER_CREATE_FAILED( xIsMessageBuffer );"
    }
]