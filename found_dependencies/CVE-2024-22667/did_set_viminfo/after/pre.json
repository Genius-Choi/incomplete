[
    {
        "line": 4,
        "fullcodeline": "char\t*errmsg = NULL;"
    },
    {
        "line": 59,
        "fullcodeline": "if (*p_viminfo && errmsg == NULL && get_viminfo_parameter('\\'') < 0)"
    },
    {
        "line": 6,
        "fullcodeline": "for (s = p_viminfo; *s;)"
    },
    {
        "line": 60,
        "fullcodeline": "errmsg = e_must_specify_a_value;"
    },
    {
        "line": 9,
        "fullcodeline": "if (vim_strchr((char_u *)\"!\\\"%'/:<@cfhnrs\", *s) == NULL)"
    },
    {
        "line": 14,
        "fullcodeline": "if (*s == 'n')\t// name is always last one"
    },
    {
        "line": 48,
        "fullcodeline": "if (*s == ',')"
    },
    {
        "line": 11,
        "fullcodeline": "errmsg = illegal_char(args->os_errbuf, args->os_errbuflen, *s);"
    },
    {
        "line": 49,
        "fullcodeline": "++s;"
    },
    {
        "line": 16,
        "fullcodeline": "else if (*s == 'r') // skip until next ','"
    },
    {
        "line": 18,
        "fullcodeline": "while (*++s && *s != ',')"
    },
    {
        "line": 52,
        "fullcodeline": "if (args->os_errbuf != NULL)"
    },
    {
        "line": 21,
        "fullcodeline": "else if (*s == '%')"
    },
    {
        "line": 53,
        "fullcodeline": "errmsg = e_missing_comma;"
    },
    {
        "line": 55,
        "fullcodeline": "errmsg = \"\";"
    },
    {
        "line": 24,
        "fullcodeline": "while (vim_isdigit(*++s))"
    },
    {
        "line": 27,
        "fullcodeline": "else if (*s == '!' || *s == 'h' || *s == 'c')"
    },
    {
        "line": 28,
        "fullcodeline": "++s;\t\t// no extra chars"
    },
    {
        "line": 31,
        "fullcodeline": "while (vim_isdigit(*++s))"
    },
    {
        "line": 34,
        "fullcodeline": "if (!VIM_ISDIGIT(*(s - 1)))"
    },
    {
        "line": 36,
        "fullcodeline": "if (args->os_errbuf != NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "snprintf(args->os_errbuf, args->os_errbuflen,"
    },
    {
        "line": 41,
        "fullcodeline": "errmsg = args->os_errbuf;"
    },
    {
        "line": 39,
        "fullcodeline": "_(e_missing_number_after_angle_str_angle),"
    },
    {
        "line": 40,
        "fullcodeline": "transchar_byte(*(s - 1)));"
    },
    {
        "line": 44,
        "fullcodeline": "errmsg = \"\";"
    }
]