[
    {
        "line": 10,
        "fullcodeline": "static char\terrbuf[ERR_BUFLEN];"
    },
    {
        "line": 11,
        "fullcodeline": "int\t\terrbuflen = ERR_BUFLEN;"
    },
    {
        "line": 13,
        "fullcodeline": "opt_idx = findoption(name);"
    },
    {
        "line": 14,
        "fullcodeline": "if (opt_idx < 0)"
    },
    {
        "line": 40,
        "fullcodeline": "semsg(_(e_unknown_option_str_2), name);"
    },
    {
        "line": 18,
        "fullcodeline": "if (STRLEN(name) == 4 && name[0] == 't' && name[1] == '_'"
    },
    {
        "line": 56,
        "fullcodeline": "varp = get_varp_scope(&(options[opt_idx]), opt_flags);"
    },
    {
        "line": 19,
        "fullcodeline": "&& (key = find_key_option(name, FALSE)) != 0)"
    },
    {
        "line": 21,
        "fullcodeline": "char_u key_name[2];"
    },
    {
        "line": 33,
        "fullcodeline": "add_termcode(key_name, string, FALSE);"
    },
    {
        "line": 36,
        "fullcodeline": "redraw_all_later(UPD_CLEAR);"
    },
    {
        "line": 53,
        "fullcodeline": "if (flags & P_STRING)"
    },
    {
        "line": 57,
        "fullcodeline": "if (varp != NULL)\t// hidden option is not changed"
    },
    {
        "line": 23,
        "fullcodeline": "if (key < 0)"
    },
    {
        "line": 25,
        "fullcodeline": "key_name[0] = KEY2TERMCAP0(key);"
    },
    {
        "line": 26,
        "fullcodeline": "key_name[1] = KEY2TERMCAP1(key);"
    },
    {
        "line": 35,
        "fullcodeline": "ttest(FALSE);"
    },
    {
        "line": 54,
        "fullcodeline": "return set_string_option(opt_idx, string, opt_flags, errbuf, errbuflen);"
    },
    {
        "line": 59,
        "fullcodeline": "if (number == 0 && string != NULL)"
    },
    {
        "line": 78,
        "fullcodeline": "if (flags & P_NUM)"
    },
    {
        "line": 30,
        "fullcodeline": "key_name[0] = KS_KEY;"
    },
    {
        "line": 31,
        "fullcodeline": "key_name[1] = (key & 0xff);"
    },
    {
        "line": 65,
        "fullcodeline": "for (idx = 0; string[idx] == '0'; ++idx)"
    },
    {
        "line": 67,
        "fullcodeline": "if (string[idx] != NUL || idx == 0)"
    },
    {
        "line": 80,
        "fullcodeline": "return set_num_option(opt_idx, varp, number,"
    },
    {
        "line": 72,
        "fullcodeline": "semsg(_(e_number_required_after_str_equal_str),"
    },
    {
        "line": 84,
        "fullcodeline": "return set_bool_option(opt_idx, varp, (int)number, opt_flags);"
    }
]