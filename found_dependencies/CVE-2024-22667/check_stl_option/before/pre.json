[
    {
        "line": 3,
        "fullcodeline": "int\t\tgroupdepth = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "static char errbuf[80];"
    },
    {
        "line": 13,
        "fullcodeline": "s++;"
    },
    {
        "line": 9,
        "fullcodeline": "while (*s && *s != '%')"
    },
    {
        "line": 10,
        "fullcodeline": "s++;"
    },
    {
        "line": 11,
        "fullcodeline": "if (!*s)"
    },
    {
        "line": 14,
        "fullcodeline": "if (*s == '%' || *s == STL_TRUNCMARK || *s == STL_SEPARATE)"
    },
    {
        "line": 19,
        "fullcodeline": "if (*s == ')')"
    },
    {
        "line": 26,
        "fullcodeline": "if (*s == '-')"
    },
    {
        "line": 28,
        "fullcodeline": "while (VIM_ISDIGIT(*s))"
    },
    {
        "line": 29,
        "fullcodeline": "s++;"
    },
    {
        "line": 30,
        "fullcodeline": "if (*s == STL_USER_HL)"
    },
    {
        "line": 32,
        "fullcodeline": "if (*s == '.')"
    },
    {
        "line": 38,
        "fullcodeline": "if (*s == '(')"
    },
    {
        "line": 43,
        "fullcodeline": "if (vim_strchr(STL_ALL, *s) == NULL)"
    },
    {
        "line": 47,
        "fullcodeline": "if (*s == '{')"
    },
    {
        "line": 16,
        "fullcodeline": "s++;"
    },
    {
        "line": 21,
        "fullcodeline": "s++;"
    },
    {
        "line": 27,
        "fullcodeline": "s++;"
    },
    {
        "line": 34,
        "fullcodeline": "s++;"
    },
    {
        "line": 40,
        "fullcodeline": "groupdepth++;"
    },
    {
        "line": 49,
        "fullcodeline": "int reevaluate = (*++s == '%');"
    },
    {
        "line": 22,
        "fullcodeline": "if (--groupdepth < 0)"
    },
    {
        "line": 35,
        "fullcodeline": "while (*s && VIM_ISDIGIT(*s))"
    },
    {
        "line": 36,
        "fullcodeline": "s++;"
    },
    {
        "line": 45,
        "fullcodeline": "return illegal_char(errbuf, *s);"
    },
    {
        "line": 51,
        "fullcodeline": "if (reevaluate && *++s == '}')"
    },
    {
        "line": 54,
        "fullcodeline": "while ((*s != '}' || (reevaluate && s[-1] != '%')) && *s)"
    },
    {
        "line": 55,
        "fullcodeline": "s++;"
    },
    {
        "line": 56,
        "fullcodeline": "if (*s != '}')"
    },
    {
        "line": 53,
        "fullcodeline": "return illegal_char(errbuf, '}');"
    }
]