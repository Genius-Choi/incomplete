[
    {
        "line": 4,
        "fullcodeline": "TF_RETURN_IF_ERROR(ConstantInput(index, &literal));"
    },
    {
        "line": 16,
        "fullcodeline": "std::vector<int64_t> dims;"
    },
    {
        "line": 6,
        "fullcodeline": "if (literal.shape().rank() == 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "TF_RETURN_IF_ERROR(LiteralToInt64Vector(literal, &dims));"
    },
    {
        "line": 18,
        "fullcodeline": "*shape = PartialTensorShape(dims);"
    },
    {
        "line": 19,
        "fullcodeline": "return OkStatus();"
    },
    {
        "line": 8,
        "fullcodeline": "TF_RETURN_IF_ERROR(LiteralToInt64Scalar(literal, &shape_val));"
    },
    {
        "line": 9,
        "fullcodeline": "if (shape_val != -1) {"
    },
    {
        "line": 14,
        "fullcodeline": "return OkStatus();"
    },
    {
        "line": 10,
        "fullcodeline": "return errors::InvalidArgument("
    }
]