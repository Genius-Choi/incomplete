[
    {
        "line": 4,
        "fullcodeline": "auto source_type = source.getValue().dyn_cast_or_null<ShapedType>();"
    },
    {
        "line": 6,
        "fullcodeline": "auto src_ele_type = source_type.getElementType();"
    },
    {
        "line": 7,
        "fullcodeline": "auto qtype = src_ele_type.dyn_cast<quant::QuantizedType>();"
    },
    {
        "line": 20,
        "fullcodeline": "Type final_type = qtype.castFromExpressedType(target);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!source_type) return {};"
    },
    {
        "line": 19,
        "fullcodeline": "if (!qtype) return {};"
    },
    {
        "line": 21,
        "fullcodeline": "if (!final_type) return {};"
    },
    {
        "line": 22,
        "fullcodeline": "return TypeAttr::get(final_type);"
    },
    {
        "line": 10,
        "fullcodeline": "if (auto per_axis ="
    },
    {
        "line": 16,
        "fullcodeline": "qtype ="
    },
    {
        "line": 11,
        "fullcodeline": "qtype.dyn_cast_or_null<quant::UniformQuantizedPerAxisType>()) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (axis == -1) return {};"
    },
    {
        "line": 17,
        "fullcodeline": "ResetAxisAndBroadcast(source_type.getShape(), per_axis, target, axis);"
    }
]