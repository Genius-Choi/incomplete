[
    {
        "line": 4,
        "fullcodeline": "UINT32 left = originalSize;"
    },
    {
        "line": 75,
        "fullcodeline": "memcpy(out, in, 4);"
    },
    {
        "line": 6,
        "fullcodeline": "while (left > 4)"
    },
    {
        "line": 70,
        "fullcodeline": "if ((outSize < 4) || (left < 4))"
    },
    {
        "line": 73,
        "fullcodeline": "if (inSize < 4)"
    },
    {
        "line": 10,
        "fullcodeline": "inSize--;"
    },
    {
        "line": 13,
        "fullcodeline": "UINT32 len = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "if (inSize < 1)"
    },
    {
        "line": 15,
        "fullcodeline": "if (left == 5)"
    },
    {
        "line": 12,
        "fullcodeline": "const BYTE value = *in++;"
    },
    {
        "line": 20,
        "fullcodeline": "outSize--;"
    },
    {
        "line": 21,
        "fullcodeline": "*out++ = value;"
    },
    {
        "line": 22,
        "fullcodeline": "left--;"
    },
    {
        "line": 17,
        "fullcodeline": "if (outSize < 1)"
    },
    {
        "line": 24,
        "fullcodeline": "else if (inSize < 1)"
    },
    {
        "line": 26,
        "fullcodeline": "else if (value == *in)"
    },
    {
        "line": 28,
        "fullcodeline": "inSize--;"
    },
    {
        "line": 29,
        "fullcodeline": "in++;"
    },
    {
        "line": 54,
        "fullcodeline": "outSize -= len;"
    },
    {
        "line": 55,
        "fullcodeline": "FillMemory(out, len, value);"
    },
    {
        "line": 56,
        "fullcodeline": "out += len;"
    },
    {
        "line": 57,
        "fullcodeline": "left -= len;"
    },
    {
        "line": 31,
        "fullcodeline": "if (inSize < 1)"
    },
    {
        "line": 51,
        "fullcodeline": "if (outSize < len)"
    },
    {
        "line": 64,
        "fullcodeline": "outSize--;"
    },
    {
        "line": 65,
        "fullcodeline": "*out++ = value;"
    },
    {
        "line": 66,
        "fullcodeline": "left--;"
    },
    {
        "line": 61,
        "fullcodeline": "if (outSize < 1)"
    },
    {
        "line": 33,
        "fullcodeline": "else if (*in < 0xFF)"
    },
    {
        "line": 35,
        "fullcodeline": "inSize--;"
    },
    {
        "line": 36,
        "fullcodeline": "len = (UINT32)*in++;"
    },
    {
        "line": 37,
        "fullcodeline": "len += 2;"
    },
    {
        "line": 43,
        "fullcodeline": "inSize -= 5;"
    },
    {
        "line": 44,
        "fullcodeline": "in++;"
    },
    {
        "line": 45,
        "fullcodeline": "len = ((UINT32)(*in++));"
    },
    {
        "line": 46,
        "fullcodeline": "len |= ((UINT32)(*in++)) << 8U;"
    },
    {
        "line": 47,
        "fullcodeline": "len |= ((UINT32)(*in++)) << 16U;"
    },
    {
        "line": 48,
        "fullcodeline": "len |= ((UINT32)(*in++)) << 24U;"
    },
    {
        "line": 41,
        "fullcodeline": "if (inSize < 5)"
    }
]