[
    {
        "line": 8,
        "fullcodeline": "char     *parsetime_error = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "char      scan_gtm[12], scan_mtm[12], scan_ltm[12], col_nam[12];"
    },
    {
        "line": 10,
        "fullcodeline": "char      double_str[20], double_str2[20];"
    },
    {
        "line": 11,
        "fullcodeline": "time_t    start_tmp = 0, end_tmp = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "struct option long_options[] = {"
    },
    {
        "line": 82,
        "fullcodeline": "optind = 0;"
    },
    {
        "line": 83,
        "fullcodeline": "opterr = 0;         /* initialize getopt */"
    },
    {
        "line": 84,
        "fullcodeline": "rrd_parsetime(\"end-24h\", &start_tv);"
    },
    {
        "line": 85,
        "fullcodeline": "rrd_parsetime(\"now\", &end_tv);"
    },
    {
        "line": 569,
        "fullcodeline": "pango_cairo_context_set_font_options(pango_layout_get_context(im->layout), im->font_options);"
    },
    {
        "line": 570,
        "fullcodeline": "pango_layout_context_changed(im->layout);"
    },
    {
        "line": 598,
        "fullcodeline": "im->start = start_tmp;"
    },
    {
        "line": 599,
        "fullcodeline": "im->end = end_tmp;"
    },
    {
        "line": 600,
        "fullcodeline": "im->step = max((long) im->step, (im->end - im->start) / im->xsize);"
    },
    {
        "line": 574,
        "fullcodeline": "if (im->logarithmic && im->minval <= 0) {"
    },
    {
        "line": 580,
        "fullcodeline": "if (rrd_proc_start_end(&start_tv, &end_tv, &start_tmp, &end_tmp) == -1) {"
    },
    {
        "line": 585,
        "fullcodeline": "if (start_tmp < 3600 * 24 * 365 * 10) {"
    },
    {
        "line": 592,
        "fullcodeline": "if (end_tmp < start_tmp) {"
    },
    {
        "line": 22,
        "fullcodeline": "{ \"alt-autoscale\",      no_argument,       0, 'A'},"
    },
    {
        "line": 23,
        "fullcodeline": "{ \"imgformat\",          required_argument, 0, 'a'},"
    },
    {
        "line": 24,
        "fullcodeline": "{ \"font-smoothing-threshold\", required_argument, 0, 'B'},"
    },
    {
        "line": 25,
        "fullcodeline": "{ \"base\",               required_argument, 0, 'b'},"
    },
    {
        "line": 26,
        "fullcodeline": "{ \"color\",              required_argument, 0, 'c'},"
    },
    {
        "line": 27,
        "fullcodeline": "{ \"full-size-mode\",     no_argument,       0, 'D'},"
    },
    {
        "line": 28,
        "fullcodeline": "{ \"daemon\",             required_argument, 0, 'd'},"
    },
    {
        "line": 29,
        "fullcodeline": "{ \"slope-mode\",         no_argument,       0, 'E'},"
    },
    {
        "line": 30,
        "fullcodeline": "{ \"end\",                required_argument, 0, 'e'},"
    },
    {
        "line": 31,
        "fullcodeline": "{ \"force-rules-legend\", no_argument,       0, 'F'},"
    },
    {
        "line": 32,
        "fullcodeline": "{ \"imginfo\",            required_argument, 0, 'f'},"
    },
    {
        "line": 33,
        "fullcodeline": "{ \"graph-render-mode\",  required_argument, 0, 'G'},"
    },
    {
        "line": 34,
        "fullcodeline": "{ \"no-legend\",          no_argument,       0, 'g'},"
    },
    {
        "line": 35,
        "fullcodeline": "{ \"height\",             required_argument, 0, 'h'},"
    },
    {
        "line": 36,
        "fullcodeline": "{ \"no-minor\",           no_argument,       0, 'I'},"
    },
    {
        "line": 37,
        "fullcodeline": "{ \"interlaced\",         no_argument,       0, 'i'},"
    },
    {
        "line": 38,
        "fullcodeline": "{ \"alt-autoscale-min\",  no_argument,       0, 'J'},"
    },
    {
        "line": 39,
        "fullcodeline": "{ \"only-graph\",         no_argument,       0, 'j'},"
    },
    {
        "line": 40,
        "fullcodeline": "{ \"units-length\",       required_argument, 0, 'L'},"
    },
    {
        "line": 41,
        "fullcodeline": "{ \"lower-limit\",        required_argument, 0, 'l'},"
    },
    {
        "line": 42,
        "fullcodeline": "{ \"alt-autoscale-max\",  no_argument,       0, 'M'},"
    },
    {
        "line": 43,
        "fullcodeline": "{ \"zoom\",               required_argument, 0, 'm'},"
    },
    {
        "line": 44,
        "fullcodeline": "{ \"no-gridfit\",         no_argument,       0, 'N'},"
    },
    {
        "line": 45,
        "fullcodeline": "{ \"font\",               required_argument, 0, 'n'},"
    },
    {
        "line": 46,
        "fullcodeline": "{ \"logarithmic\",        no_argument,       0, 'o'},"
    },
    {
        "line": 47,
        "fullcodeline": "{ \"pango-markup\",       no_argument,       0, 'P'},"
    },
    {
        "line": 48,
        "fullcodeline": "{ \"font-render-mode\",   required_argument, 0, 'R'},"
    },
    {
        "line": 49,
        "fullcodeline": "{ \"rigid\",              no_argument,       0, 'r'},"
    },
    {
        "line": 50,
        "fullcodeline": "{ \"step\",               required_argument, 0, 'S'},"
    },
    {
        "line": 51,
        "fullcodeline": "{ \"start\",              required_argument, 0, 's'},"
    },
    {
        "line": 52,
        "fullcodeline": "{ \"tabwidth\",           required_argument, 0, 'T'},"
    },
    {
        "line": 53,
        "fullcodeline": "{ \"title\",              required_argument, 0, 't'},"
    },
    {
        "line": 54,
        "fullcodeline": "{ \"upper-limit\",        required_argument, 0, 'u'},"
    },
    {
        "line": 55,
        "fullcodeline": "{ \"vertical-label\",     required_argument, 0, 'v'},"
    },
    {
        "line": 56,
        "fullcodeline": "{ \"watermark\",          required_argument, 0, 'W'},"
    },
    {
        "line": 57,
        "fullcodeline": "{ \"width\",              required_argument, 0, 'w'},"
    },
    {
        "line": 58,
        "fullcodeline": "{ \"units-exponent\",     required_argument, 0, 'X'},"
    },
    {
        "line": 59,
        "fullcodeline": "{ \"x-grid\",             required_argument, 0, 'x'},"
    },
    {
        "line": 60,
        "fullcodeline": "{ \"alt-y-grid\",         no_argument,       0, 'Y'},"
    },
    {
        "line": 61,
        "fullcodeline": "{ \"y-grid\",             required_argument, 0, 'y'},"
    },
    {
        "line": 62,
        "fullcodeline": "{ \"lazy\",               no_argument,       0, 'z'},"
    },
    {
        "line": 63,
        "fullcodeline": "{ \"use-nan-for-all-missing-data\", no_argument,       0, 'Z'},"
    },
    {
        "line": 64,
        "fullcodeline": "{ \"units\",              required_argument, 0, LONGOPT_UNITS_SI},"
    },
    {
        "line": 65,
        "fullcodeline": "{ \"alt-y-mrtg\",         no_argument,       0, 1000},    /* this has no effect it is just here to save old apps from crashing when they use it */"
    },
    {
        "line": 66,
        "fullcodeline": "{ \"disable-rrdtool-tag\",no_argument,       0, 1001},"
    },
    {
        "line": 67,
        "fullcodeline": "{ \"right-axis\",         required_argument, 0, 1002},"
    },
    {
        "line": 68,
        "fullcodeline": "{ \"right-axis-label\",   required_argument, 0, 1003},"
    },
    {
        "line": 69,
        "fullcodeline": "{ \"right-axis-format\",  required_argument, 0, 1004},"
    },
    {
        "line": 70,
        "fullcodeline": "{ \"legend-position\",    required_argument, 0, 1005},"
    },
    {
        "line": 71,
        "fullcodeline": "{ \"legend-direction\",   required_argument, 0, 1006},"
    },
    {
        "line": 72,
        "fullcodeline": "{ \"border\",             required_argument, 0, 1007},"
    },
    {
        "line": 73,
        "fullcodeline": "{ \"grid-dash\",          required_argument, 0, 1008},"
    },
    {
        "line": 74,
        "fullcodeline": "{ \"dynamic-labels\",     no_argument,       0, 1009},"
    },
    {
        "line": 75,
        "fullcodeline": "{ \"week-fmt\",           required_argument, 0, 1010},"
    },
    {
        "line": 76,
        "fullcodeline": "{ \"graph-type\",         required_argument, 0, 1011},"
    },
    {
        "line": 77,
        "fullcodeline": "{ \"left-axis-format\",   required_argument, 0, 1012},"
    },
    {
        "line": 78,
        "fullcodeline": "{  0, 0, 0, 0}"
    },
    {
        "line": 87,
        "fullcodeline": "int       option_index = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "opt = getopt_long(argc, argv,"
    },
    {
        "line": 575,
        "fullcodeline": "rrd_set_error"
    },
    {
        "line": 586,
        "fullcodeline": "rrd_set_error"
    },
    {
        "line": 593,
        "fullcodeline": "rrd_set_error"
    },
    {
        "line": 94,
        "fullcodeline": "if (opt == EOF)"
    },
    {
        "line": 98,
        "fullcodeline": "im->extra_flags |= NOMINOR;"
    },
    {
        "line": 101,
        "fullcodeline": "im->extra_flags |= ALTYGRID;"
    },
    {
        "line": 104,
        "fullcodeline": "im->extra_flags |= ALTAUTOSCALE;"
    },
    {
        "line": 107,
        "fullcodeline": "im->extra_flags |= ALTAUTOSCALE_MIN;"
    },
    {
        "line": 110,
        "fullcodeline": "im->extra_flags |= ALTAUTOSCALE_MAX;"
    },
    {
        "line": 113,
        "fullcodeline": "im->extra_flags |= ONLY_GRAPH;"
    },
    {
        "line": 116,
        "fullcodeline": "im->extra_flags |= NOLEGEND;"
    },
    {
        "line": 119,
        "fullcodeline": "im->extra_flags |= ALLOW_MISSING_DS;"
    },
    {
        "line": 148,
        "fullcodeline": "im->extra_flags |= FORCE_RULES_LEGEND;"
    },
    {
        "line": 151,
        "fullcodeline": "im->extra_flags |= NO_RRDTOOL_TAG;"
    },
    {
        "line": 153,
        "fullcodeline": "case LONGOPT_UNITS_SI:"
    },
    {
        "line": 166,
        "fullcodeline": "im->unitsexponent = atoi(optarg);"
    },
    {
        "line": 169,
        "fullcodeline": "im->unitslength = atoi(optarg);"
    },
    {
        "line": 170,
        "fullcodeline": "im->forceleftspace = 1;"
    },
    {
        "line": 177,
        "fullcodeline": "im->step = atoi(optarg);"
    },
    {
        "line": 180,
        "fullcodeline": "im->gridfit = 0;"
    },
    {
        "line": 183,
        "fullcodeline": "im->with_markup = 1;"
    },
    {
        "line": 259,
        "fullcodeline": "im->draw_3d_border = atoi(optarg);"
    },
    {
        "line": 274,
        "fullcodeline": "im->dynamic_labels = 1;"
    },
    {
        "line": 277,
        "fullcodeline": "strncpy(week_fmt,optarg,sizeof week_fmt);"
    },
    {
        "line": 278,
        "fullcodeline": "week_fmt[(sizeof week_fmt)-1]='\\0';"
    },
    {
        "line": 297,
        "fullcodeline": "im->second_axis_legend=strdup(optarg);"
    },
    {
        "line": 307,
        "fullcodeline": "im->second_axis_format=strdup(optarg);"
    },
    {
        "line": 317,
        "fullcodeline": "im->primary_axis_format=strdup(optarg);"
    },
    {
        "line": 324,
        "fullcodeline": "im->ylegend=strdup(optarg);"
    },
    {
        "line": 341,
        "fullcodeline": "im->base = atol(optarg);"
    },
    {
        "line": 349,
        "fullcodeline": "long_tmp = atol(optarg);"
    },
    {
        "line": 354,
        "fullcodeline": "im->xsize = long_tmp;"
    },
    {
        "line": 357,
        "fullcodeline": "long_tmp = atol(optarg);"
    },
    {
        "line": 362,
        "fullcodeline": "im->ysize = long_tmp;"
    },
    {
        "line": 365,
        "fullcodeline": "im->extra_flags |= FULL_SIZE_MODE;"
    },
    {
        "line": 371,
        "fullcodeline": "im->rigid = 1;"
    },
    {
        "line": 374,
        "fullcodeline": "im->imginfo = optarg;"
    },
    {
        "line": 391,
        "fullcodeline": "im->lazy = 1;"
    },
    {
        "line": 394,
        "fullcodeline": "im->slopemode = 1;"
    },
    {
        "line": 397,
        "fullcodeline": "im->logarithmic = 1;"
    },
    {
        "line": 495,
        "fullcodeline": "im->title=strdup(optarg);"
    },
    {
        "line": 536,
        "fullcodeline": "im->watermark=strdup(optarg);"
    },
    {
        "line": 122,
        "fullcodeline": "if (strcmp(optarg, \"north\") == 0) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (strcmp(optarg, \"topdown\") == 0) {"
    },
    {
        "line": 154,
        "fullcodeline": "if (im->extra_flags & FORCE_UNITS) {"
    },
    {
        "line": 158,
        "fullcodeline": "if (strcmp(optarg, \"si\") == 0)"
    },
    {
        "line": 173,
        "fullcodeline": "if (rrd_strtodbl(optarg, 0, &(im->tabwidth), \"option -T\") != 2)"
    },
    {
        "line": 186,
        "fullcodeline": "if ((parsetime_error = rrd_parsetime(optarg, &start_tv))) {"
    },
    {
        "line": 192,
        "fullcodeline": "if ((parsetime_error = rrd_parsetime(optarg, &end_tv))) {"
    },
    {
        "line": 198,
        "fullcodeline": "if (strcmp(optarg, \"none\") == 0) {"
    },
    {
        "line": 202,
        "fullcodeline": "if (sscanf(optarg,"
    },
    {
        "line": 238,
        "fullcodeline": "if (strcmp(optarg, \"none\") == 0) {"
    },
    {
        "line": 242,
        "fullcodeline": "if (sscanf(optarg, \"%[-0-9.e+]:%d\", double_str , &im->ylabfact) == 2) {"
    },
    {
        "line": 262,
        "fullcodeline": "if(sscanf(optarg,"
    },
    {
        "line": 281,
        "fullcodeline": "if(sscanf(optarg,"
    },
    {
        "line": 298,
        "fullcodeline": "if (!im->second_axis_legend) {"
    },
    {
        "line": 304,
        "fullcodeline": "if (bad_format_axis(optarg)){"
    },
    {
        "line": 308,
        "fullcodeline": "if (!im->second_axis_format) {"
    },
    {
        "line": 314,
        "fullcodeline": "if (bad_format_axis(optarg)){"
    },
    {
        "line": 318,
        "fullcodeline": "if (!im->primary_axis_format) {"
    },
    {
        "line": 325,
        "fullcodeline": "if (!im->ylegend) {"
    },
    {
        "line": 331,
        "fullcodeline": "if (rrd_strtodbl(optarg, 0, &(im->maxval), \"option -u\") != 2){"
    },
    {
        "line": 336,
        "fullcodeline": "if (rrd_strtodbl(optarg, 0, &(im->minval), \"option -l\") != 2){"
    },
    {
        "line": 342,
        "fullcodeline": "if (im->base != 1024 && im->base != 1000) {"
    },
    {
        "line": 350,
        "fullcodeline": "if (long_tmp < 10) {"
    },
    {
        "line": 358,
        "fullcodeline": "if (long_tmp < 10) {"
    },
    {
        "line": 377,
        "fullcodeline": "if ((int)"
    },
    {
        "line": 384,
        "fullcodeline": "if ((int)"
    },
    {
        "line": 400,
        "fullcodeline": "if (sscanf(optarg,"
    },
    {
        "line": 446,
        "fullcodeline": "char      prop[15];"
    },
    {
        "line": 447,
        "fullcodeline": "double    size = 1;"
    },
    {
        "line": 486,
        "fullcodeline": "if (rrd_strtodbl(optarg, 0, &(im->zoom), \"option -m\") != 2){"
    },
    {
        "line": 489,
        "fullcodeline": "if (im->zoom <= 0.0) {"
    },
    {
        "line": 496,
        "fullcodeline": "if (!im->title) {"
    },
    {
        "line": 502,
        "fullcodeline": "if (strcmp(optarg, \"normal\") == 0) {"
    },
    {
        "line": 523,
        "fullcodeline": "if (strcmp(optarg, \"normal\") == 0)"
    },
    {
        "line": 537,
        "fullcodeline": "if (!im->watermark) {"
    },
    {
        "line": 551,
        "fullcodeline": "im->daemon_addr = strdup(optarg);"
    },
    {
        "line": 561,
        "fullcodeline": "if (optopt != 0)"
    },
    {
        "line": 123,
        "fullcodeline": "im->legendposition = NORTH;"
    },
    {
        "line": 137,
        "fullcodeline": "im->legenddirection = TOP_DOWN;"
    },
    {
        "line": 155,
        "fullcodeline": "rrd_set_error(\"--units can only be used once!\");"
    },
    {
        "line": 159,
        "fullcodeline": "im->extra_flags |= FORCE_UNITS_SI;"
    },
    {
        "line": 187,
        "fullcodeline": "rrd_set_error(\"start time: %s\", parsetime_error);"
    },
    {
        "line": 193,
        "fullcodeline": "rrd_set_error(\"end time: %s\", parsetime_error);"
    },
    {
        "line": 199,
        "fullcodeline": "im->draw_x_grid = 0;"
    },
    {
        "line": 210,
        "fullcodeline": "&im->xlab_user.precis, &stroff) == 7 && stroff != 0) {"
    },
    {
        "line": 211,
        "fullcodeline": "im->xlab_form=strdup(optarg + stroff);"
    },
    {
        "line": 230,
        "fullcodeline": "im->xlab_user.minsec = 1;"
    },
    {
        "line": 231,
        "fullcodeline": "im->xlab_user.stst = im->xlab_form ? im->xlab_form : \"\";"
    },
    {
        "line": 239,
        "fullcodeline": "im->draw_y_grid = 0;"
    },
    {
        "line": 286,
        "fullcodeline": "&& rrd_strtodbl( double_str2, 0, &(im->second_axis_shift),NULL) == 2){"
    },
    {
        "line": 299,
        "fullcodeline": "rrd_set_error(\"cannot allocate memory for second_axis_legend\");"
    },
    {
        "line": 309,
        "fullcodeline": "rrd_set_error(\"cannot allocate memory for second_axis_format\");"
    },
    {
        "line": 319,
        "fullcodeline": "rrd_set_error(\"cannot allocate memory for primary_axis_format\");"
    },
    {
        "line": 326,
        "fullcodeline": "rrd_set_error(\"cannot allocate memory for ylegend\");"
    },
    {
        "line": 343,
        "fullcodeline": "rrd_set_error"
    },
    {
        "line": 351,
        "fullcodeline": "rrd_set_error(\"width below 10 pixels\");"
    },
    {
        "line": 359,
        "fullcodeline": "rrd_set_error(\"height below 10 pixels\");"
    },
    {
        "line": 378,
        "fullcodeline": "(im->imgformat = if_conv(optarg)) == -1) {"
    },
    {
        "line": 379,
        "fullcodeline": "rrd_set_error(\"unsupported graphics format '%s'\", optarg);"
    },
    {
        "line": 385,
        "fullcodeline": "(im->graph_type = type_conv(optarg)) == -1) {"
    },
    {
        "line": 386,
        "fullcodeline": "rrd_set_error(\"unsupported graphics type '%s'\", optarg);"
    },
    {
        "line": 404,
        "fullcodeline": "int       col_len = col_end - col_start;"
    },
    {
        "line": 450,
        "fullcodeline": "if (sscanf(optarg, \"%10[A-Z]:%[-0-9.e+]%n\", prop, double_str, &end) >= 2"
    },
    {
        "line": 490,
        "fullcodeline": "rrd_set_error(\"zoom factor must be > 0\");"
    },
    {
        "line": 497,
        "fullcodeline": "rrd_set_error(\"cannot allocate memory for title\");"
    },
    {
        "line": 503,
        "fullcodeline": "cairo_font_options_set_antialias"
    },
    {
        "line": 505,
        "fullcodeline": "cairo_font_options_set_hint_style"
    },
    {
        "line": 524,
        "fullcodeline": "im->graph_antialias = CAIRO_ANTIALIAS_GRAY;"
    },
    {
        "line": 538,
        "fullcodeline": "rrd_set_error(\"cannot allocate memory for watermark\");"
    },
    {
        "line": 544,
        "fullcodeline": "if (im->daemon_addr != NULL)"
    },
    {
        "line": 552,
        "fullcodeline": "if (im->daemon_addr == NULL)"
    },
    {
        "line": 562,
        "fullcodeline": "rrd_set_error(\"unknown option '%c'\", optopt);"
    },
    {
        "line": 161,
        "fullcodeline": "rrd_set_error(\"invalid argument for --units: %s\", optarg);"
    },
    {
        "line": 212,
        "fullcodeline": "if (!im->xlab_form) {"
    },
    {
        "line": 216,
        "fullcodeline": "if ((int)"
    },
    {
        "line": 233,
        "fullcodeline": "rrd_set_error(\"invalid x-grid format\");"
    },
    {
        "line": 243,
        "fullcodeline": "if (rrd_strtodbl( double_str, 0, &(im->ygridstep), \"option -y\") != 2){"
    },
    {
        "line": 246,
        "fullcodeline": "if (im->ygridstep <= 0) {"
    },
    {
        "line": 254,
        "fullcodeline": "rrd_set_error(\"invalid y-grid format\");"
    },
    {
        "line": 266,
        "fullcodeline": "if ( rrd_strtodbl( double_str, 0, &(im->grid_dash_on),NULL) !=2"
    },
    {
        "line": 285,
        "fullcodeline": "&& rrd_strtodbl( double_str, 0, &(im->second_axis_scale),NULL) == 2"
    },
    {
        "line": 287,
        "fullcodeline": "if(im->second_axis_scale==0){"
    },
    {
        "line": 292,
        "fullcodeline": "rrd_set_error(\"invalid right-axis format expected scale:shift\");"
    },
    {
        "line": 434,
        "fullcodeline": "if ((ci = grc_conv(col_nam)) != -1) {"
    },
    {
        "line": 441,
        "fullcodeline": "rrd_set_error(\"invalid color def format\");"
    },
    {
        "line": 451,
        "fullcodeline": "&& rrd_strtodbl( double_str, 0, &size, NULL) == 2) {"
    },
    {
        "line": 546,
        "fullcodeline": "rrd_set_error (\"You cannot specify --daemon \""
    },
    {
        "line": 554,
        "fullcodeline": "rrd_set_error(\"strdup failed\");"
    },
    {
        "line": 564,
        "fullcodeline": "rrd_set_error(\"unknown option '%s'\", argv[optind - 1]);"
    },
    {
        "line": 124,
        "fullcodeline": "} else if (strcmp(optarg, \"west\") == 0) {"
    },
    {
        "line": 138,
        "fullcodeline": "} else if (strcmp(optarg, \"bottomup\") == 0) {"
    },
    {
        "line": 213,
        "fullcodeline": "rrd_set_error(\"cannot allocate memory for xlab_form\");"
    },
    {
        "line": 217,
        "fullcodeline": "(im->xlab_user.gridtm = tmt_conv(scan_gtm)) == -1) {"
    },
    {
        "line": 218,
        "fullcodeline": "rrd_set_error(\"unknown keyword %s\", scan_gtm);"
    },
    {
        "line": 247,
        "fullcodeline": "rrd_set_error(\"grid step must be > 0\");"
    },
    {
        "line": 267,
        "fullcodeline": "|| rrd_strtodbl( double_str2, 0, &(im->grid_dash_off), NULL) != 2 ){"
    },
    {
        "line": 268,
        "fullcodeline": "rrd_set_error(\"expected grid-dash format float:float\");"
    },
    {
        "line": 288,
        "fullcodeline": "rrd_set_error(\"the second_axis_scale  must not be 0\");"
    },
    {
        "line": 408,
        "fullcodeline": "color ="
    },
    {
        "line": 416,
        "fullcodeline": "color ="
    },
    {
        "line": 426,
        "fullcodeline": "color = (color << 8) + 0xff /* shift left by 8 */ ;"
    },
    {
        "line": 431,
        "fullcodeline": "rrd_set_error(\"the color format is #RRGGBB[AA]\");"
    },
    {
        "line": 435,
        "fullcodeline": "im->graph_col[ci] = gfx_hex_to_col(color);"
    },
    {
        "line": 454,
        "fullcodeline": "if ((sindex = text_prop_conv(prop)) != -1) {"
    },
    {
        "line": 480,
        "fullcodeline": "rrd_set_error(\"invalid text property format\");"
    },
    {
        "line": 507,
        "fullcodeline": "} else if (strcmp(optarg, \"light\") == 0) {"
    },
    {
        "line": 525,
        "fullcodeline": "else if (strcmp(optarg, \"mono\") == 0)"
    },
    {
        "line": 125,
        "fullcodeline": "im->legendposition = WEST;"
    },
    {
        "line": 139,
        "fullcodeline": "im->legenddirection = BOTTOM_UP;"
    },
    {
        "line": 409,
        "fullcodeline": "(((color & 0xF00) * 0x110000) | ((color & 0x0F0) *"
    },
    {
        "line": 417,
        "fullcodeline": "(((color & 0xF000) *"
    },
    {
        "line": 437,
        "fullcodeline": "rrd_set_error(\"invalid color name '%s'\", col_nam);"
    },
    {
        "line": 508,
        "fullcodeline": "cairo_font_options_set_antialias"
    },
    {
        "line": 510,
        "fullcodeline": "cairo_font_options_set_hint_style"
    },
    {
        "line": 526,
        "fullcodeline": "im->graph_antialias = CAIRO_ANTIALIAS_NONE;"
    },
    {
        "line": 220,
        "fullcodeline": "} else if ((int)"
    },
    {
        "line": 249,
        "fullcodeline": "} else if (im->ylabfact < 1) {"
    },
    {
        "line": 422,
        "fullcodeline": "((color & 0x000F) * 0x00011)"
    },
    {
        "line": 456,
        "fullcodeline": "propidx < TEXT_PROP_LAST; propidx++) {"
    },
    {
        "line": 476,
        "fullcodeline": "rrd_set_error(\"invalid fonttag '%s'\", prop);"
    },
    {
        "line": 528,
        "fullcodeline": "rrd_set_error(\"unknown graph-render-mode '%s'\", optarg);"
    },
    {
        "line": 126,
        "fullcodeline": "} else if (strcmp(optarg, \"south\") == 0) {"
    },
    {
        "line": 140,
        "fullcodeline": "} else if (strcmp(optarg, \"bottomup2\") == 0) {"
    },
    {
        "line": 222,
        "fullcodeline": "== -1) {"
    },
    {
        "line": 223,
        "fullcodeline": "rrd_set_error(\"unknown keyword %s\", scan_mtm);"
    },
    {
        "line": 250,
        "fullcodeline": "rrd_set_error(\"label factor must be > 0\");"
    },
    {
        "line": 411,
        "fullcodeline": "((color & 0x00F)"
    },
    {
        "line": 419,
        "fullcodeline": "0x01100) | ((color &"
    },
    {
        "line": 455,
        "fullcodeline": "for (propidx = sindex;"
    },
    {
        "line": 512,
        "fullcodeline": "} else if (strcmp(optarg, \"mono\") == 0) {"
    },
    {
        "line": 127,
        "fullcodeline": "im->legendposition = SOUTH;"
    },
    {
        "line": 141,
        "fullcodeline": "im->legenddirection = BOTTOM_UP2;"
    },
    {
        "line": 221,
        "fullcodeline": "(im->xlab_user.mgridtm = tmt_conv(scan_mtm))"
    },
    {
        "line": 418,
        "fullcodeline": "0x11000) | ((color & 0x0F00) *"
    },
    {
        "line": 457,
        "fullcodeline": "if (size > 0) {"
    },
    {
        "line": 460,
        "fullcodeline": "if ((int) strlen(optarg) > end+2) {"
    },
    {
        "line": 472,
        "fullcodeline": "if (propidx == sindex && sindex != 0)"
    },
    {
        "line": 513,
        "fullcodeline": "cairo_font_options_set_antialias"
    },
    {
        "line": 515,
        "fullcodeline": "cairo_font_options_set_hint_style"
    },
    {
        "line": 143,
        "fullcodeline": "rrd_set_error(\"unknown legend-position '%s'\", optarg);"
    },
    {
        "line": 225,
        "fullcodeline": "} else if ((int)"
    },
    {
        "line": 458,
        "fullcodeline": "rrd_set_font_desc(im,propidx,NULL,size);"
    },
    {
        "line": 518,
        "fullcodeline": "rrd_set_error(\"unknown font-render-mode '%s'\", optarg);"
    },
    {
        "line": 128,
        "fullcodeline": "} else if (strcmp(optarg, \"east\") == 0) {"
    },
    {
        "line": 226,
        "fullcodeline": "(im->xlab_user.labtm = tmt_conv(scan_ltm)) == -1) {"
    },
    {
        "line": 227,
        "fullcodeline": "rrd_set_error(\"unknown keyword %s\", scan_ltm);"
    },
    {
        "line": 461,
        "fullcodeline": "if (optarg[end] == ':') {"
    },
    {
        "line": 129,
        "fullcodeline": "im->legendposition = EAST;"
    },
    {
        "line": 462,
        "fullcodeline": "rrd_set_font_desc(im,propidx,optarg + end + 1,0);"
    },
    {
        "line": 131,
        "fullcodeline": "rrd_set_error(\"unknown legend-position '%s'\", optarg);"
    },
    {
        "line": 464,
        "fullcodeline": "rrd_set_error"
    }
]