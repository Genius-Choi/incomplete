[
    {
        "line": 10,
        "fullcodeline": "char      func[30], double_str[21];"
    },
    {
        "line": 13,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "sscanf(str, \"%20[-0-9.e+],%29[A-Z]%n\", double_str, func, &n);"
    },
    {
        "line": 15,
        "fullcodeline": "if ( rrd_strtodbl( double_str, NULL, &param, NULL) != 2 ){"
    },
    {
        "line": 16,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "sscanf(str, \"%29[A-Z]%n\", func, &n);"
    },
    {
        "line": 27,
        "fullcodeline": "if (!strcmp(\"PERCENT\", func))"
    },
    {
        "line": 28,
        "fullcodeline": "gdes->vf.op = VDEF_PERCENT;"
    },
    {
        "line": 18,
        "fullcodeline": "if (n == (int) strlen(str)) {   /* matched */"
    },
    {
        "line": 59,
        "fullcodeline": "if (isnan(param)) { /* no parameter given */"
    },
    {
        "line": 19,
        "fullcodeline": "param = DNAN;"
    },
    {
        "line": 65,
        "fullcodeline": "if (param >= 0.0 && param <= 100.0) {"
    },
    {
        "line": 21,
        "fullcodeline": "rrd_set_error"
    },
    {
        "line": 29,
        "fullcodeline": "else if (!strcmp(\"PERCENTNAN\", func))"
    },
    {
        "line": 30,
        "fullcodeline": "gdes->vf.op = VDEF_PERCENTNAN;"
    },
    {
        "line": 63,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "return -1;"
    },
    {
        "line": 74,
        "fullcodeline": "return -1;"
    },
    {
        "line": 96,
        "fullcodeline": "return -1;"
    },
    {
        "line": 31,
        "fullcodeline": "else if (!strcmp(\"MAXIMUM\", func))"
    },
    {
        "line": 32,
        "fullcodeline": "gdes->vf.op = VDEF_MAXIMUM;"
    },
    {
        "line": 33,
        "fullcodeline": "else if (!strcmp(\"AVERAGE\", func))"
    },
    {
        "line": 34,
        "fullcodeline": "gdes->vf.op = VDEF_AVERAGE;"
    },
    {
        "line": 35,
        "fullcodeline": "else if (!strcmp(\"STDEV\", func))"
    },
    {
        "line": 36,
        "fullcodeline": "gdes->vf.op = VDEF_STDEV;"
    },
    {
        "line": 37,
        "fullcodeline": "else if (!strcmp(\"MINIMUM\", func))"
    },
    {
        "line": 38,
        "fullcodeline": "gdes->vf.op = VDEF_MINIMUM;"
    },
    {
        "line": 39,
        "fullcodeline": "else if (!strcmp(\"TOTAL\", func))"
    },
    {
        "line": 40,
        "fullcodeline": "gdes->vf.op = VDEF_TOTAL;"
    },
    {
        "line": 41,
        "fullcodeline": "else if (!strcmp(\"FIRST\", func))"
    },
    {
        "line": 42,
        "fullcodeline": "gdes->vf.op = VDEF_FIRST;"
    },
    {
        "line": 43,
        "fullcodeline": "else if (!strcmp(\"LAST\", func))"
    },
    {
        "line": 44,
        "fullcodeline": "gdes->vf.op = VDEF_LAST;"
    },
    {
        "line": 45,
        "fullcodeline": "else if (!strcmp(\"LSLSLOPE\", func))"
    },
    {
        "line": 46,
        "fullcodeline": "gdes->vf.op = VDEF_LSLSLOPE;"
    },
    {
        "line": 47,
        "fullcodeline": "else if (!strcmp(\"LSLINT\", func))"
    },
    {
        "line": 48,
        "fullcodeline": "gdes->vf.op = VDEF_LSLINT;"
    },
    {
        "line": 49,
        "fullcodeline": "else if (!strcmp(\"LSLCORREL\", func))"
    },
    {
        "line": 50,
        "fullcodeline": "gdes->vf.op = VDEF_LSLCORREL;"
    },
    {
        "line": 54,
        "fullcodeline": "return -1;"
    }
]