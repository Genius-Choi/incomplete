[
    {
        "line": 7,
        "fullcodeline": "unsigned char nbuf[BUFSIZ];"
    },
    {
        "line": 10,
        "fullcodeline": "if (size != xph_sizeof) {"
    },
    {
        "line": 24,
        "fullcodeline": "off += size;"
    },
    {
        "line": 38,
        "fullcodeline": "len = xph_filesz < sizeof(nbuf) ? xph_filesz : sizeof(nbuf);"
    },
    {
        "line": 43,
        "fullcodeline": "offset = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "if (file_printf(ms, \", corrupted program header size\") == -1)"
    },
    {
        "line": 31,
        "fullcodeline": "if (xph_type != PT_NOTE)"
    },
    {
        "line": 20,
        "fullcodeline": "if (pread(fd, xph_addr, xph_sizeof, off) == -1) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (fsize != SIZE_UNKNOWN && xph_offset > fsize) {"
    },
    {
        "line": 39,
        "fullcodeline": "if ((bufsize = pread(fd, nbuf, len, xph_offset)) == -1) {"
    },
    {
        "line": 47,
        "fullcodeline": "offset = donote(ms, nbuf, offset, (size_t)bufsize,"
    },
    {
        "line": 12,
        "fullcodeline": "return -1;"
    },
    {
        "line": 22,
        "fullcodeline": "return -1;"
    },
    {
        "line": 41,
        "fullcodeline": "return -1;"
    },
    {
        "line": 45,
        "fullcodeline": "if (offset >= (size_t)bufsize)"
    },
    {
        "line": 49,
        "fullcodeline": "if (offset == 0)"
    }
]