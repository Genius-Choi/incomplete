[
    {
        "line": 4,
        "fullcodeline": "unsigned char h[0x40];"
    },
    {
        "line": 6,
        "fullcodeline": "unsigned exe_offset = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "adam_offset = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "fi->seek(adam_offset, SEEK_SET);"
    },
    {
        "line": 49,
        "fullcodeline": "unsigned const imagesize = ih.imagesize;"
    },
    {
        "line": 50,
        "fullcodeline": "unsigned const entry = ih.entry;"
    },
    {
        "line": 51,
        "fullcodeline": "unsigned const relocsize = ih.relocsize;"
    },
    {
        "line": 9,
        "fullcodeline": "for (ic = 0; ic < 20; ic++) {"
    },
    {
        "line": 10,
        "fullcodeline": "fi->seek(adam_offset, SEEK_SET);"
    },
    {
        "line": 11,
        "fullcodeline": "fi->readx(h, sizeof(h));"
    },
    {
        "line": 52,
        "fullcodeline": "if (imagesize < sizeof(ih) || entry < sizeof(ih) || file_size <= imagesize ||"
    },
    {
        "line": 53,
        "fullcodeline": "file_size <= entry || file_size <= relocsize) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (memcmp(h, \"MZ\", 2) == 0) // dos exe"
    },
    {
        "line": 15,
        "fullcodeline": "exe_offset = adam_offset;"
    },
    {
        "line": 16,
        "fullcodeline": "adam_offset += H(2) * 512 + H(1);"
    },
    {
        "line": 17,
        "fullcodeline": "if (H(1))"
    },
    {
        "line": 19,
        "fullcodeline": "if (H(0x18 / 2) == 0x40 && H4(0x3c))"
    },
    {
        "line": 18,
        "fullcodeline": "adam_offset -= 512;"
    },
    {
        "line": 20,
        "fullcodeline": "adam_offset = H4(0x3c);"
    },
    {
        "line": 21,
        "fullcodeline": "} else if (memcmp(h, \"BW\", 2) == 0)"
    },
    {
        "line": 22,
        "fullcodeline": "adam_offset += H(2) * 512 + H(1);"
    },
    {
        "line": 23,
        "fullcodeline": "else if (memcmp(h, \"PMW1\", 4) == 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "fi->seek(adam_offset + H4(0x18), SEEK_SET);"
    },
    {
        "line": 25,
        "fullcodeline": "adam_offset += H4(0x24);"
    },
    {
        "line": 26,
        "fullcodeline": "int objs = H4(0x1c);"
    },
    {
        "line": 27,
        "fullcodeline": "while (objs--) {"
    },
    {
        "line": 28,
        "fullcodeline": "fi->readx(h, 0x18);"
    },
    {
        "line": 29,
        "fullcodeline": "adam_offset += H4(4);"
    },
    {
        "line": 31,
        "fullcodeline": "} else if (memcmp(h, \"LE\", 2) == 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "unsigned offs = exe_offset + (H4(0x14) - 1) * H4(0x28) + H4(0x2c);"
    },
    {
        "line": 34,
        "fullcodeline": "fi->seek(adam_offset + 0x80, SEEK_SET);"
    },
    {
        "line": 35,
        "fullcodeline": "fi->readx(h, 4);"
    },
    {
        "line": 37,
        "fullcodeline": "adam_offset = offs + H4(0);"
    },
    {
        "line": 38,
        "fullcodeline": "} else if (memcmp(h, \"Adam\", 4) == 0)"
    }
]