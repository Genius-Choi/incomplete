[
    {
        "line": 59,
        "fullcodeline": "sk = sk_alloc(net, PF_AX25, GFP_ATOMIC, &ax25_proto, kern);"
    },
    {
        "line": 63,
        "fullcodeline": "ax25 = ax25_sk(sk)->cb = ax25_create_cb();"
    },
    {
        "line": 69,
        "fullcodeline": "sock_init_data(sock, sk);"
    },
    {
        "line": 71,
        "fullcodeline": "sk->sk_destruct = ax25_free_sock;"
    },
    {
        "line": 73,
        "fullcodeline": "sk->sk_protocol = protocol;"
    },
    {
        "line": 7,
        "fullcodeline": "if (protocol < 0 || protocol > SK_PROTOCOL_MAX)"
    },
    {
        "line": 60,
        "fullcodeline": "if (sk == NULL)"
    },
    {
        "line": 10,
        "fullcodeline": "if (!net_eq(net, &init_net))"
    },
    {
        "line": 8,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 11,
        "fullcodeline": "return -EAFNOSUPPORT;"
    },
    {
        "line": 56,
        "fullcodeline": "return -ESOCKTNOSUPPORT;"
    },
    {
        "line": 61,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 66,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 15,
        "fullcodeline": "if (protocol == 0 || protocol == PF_AX25)"
    },
    {
        "line": 16,
        "fullcodeline": "protocol = AX25_P_TEXT;"
    },
    {
        "line": 23,
        "fullcodeline": "protocol = AX25_P_TEXT;"
    },
    {
        "line": 36,
        "fullcodeline": "return -ESOCKTNOSUPPORT;"
    }
]