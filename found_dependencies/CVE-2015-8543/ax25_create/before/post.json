[
    {
        "line": 56,
        "fullcodeline": "sk = sk_alloc(net, PF_AX25, GFP_ATOMIC, &ax25_proto, kern);"
    },
    {
        "line": 60,
        "fullcodeline": "ax25 = ax25_sk(sk)->cb = ax25_create_cb();"
    },
    {
        "line": 66,
        "fullcodeline": "sock_init_data(sock, sk);"
    },
    {
        "line": 68,
        "fullcodeline": "sk->sk_destruct = ax25_free_sock;"
    },
    {
        "line": 69,
        "fullcodeline": "sock->ops    = &ax25_proto_ops;"
    },
    {
        "line": 70,
        "fullcodeline": "sk->sk_protocol = protocol;"
    },
    {
        "line": 72,
        "fullcodeline": "ax25->sk    = sk;"
    },
    {
        "line": 7,
        "fullcodeline": "if (!net_eq(net, &init_net))"
    },
    {
        "line": 57,
        "fullcodeline": "if (sk == NULL)"
    },
    {
        "line": 61,
        "fullcodeline": "if (!ax25) {"
    },
    {
        "line": 62,
        "fullcodeline": "sk_free(sk);"
    },
    {
        "line": 8,
        "fullcodeline": "return -EAFNOSUPPORT;"
    },
    {
        "line": 12,
        "fullcodeline": "if (protocol == 0 || protocol == PF_AX25)"
    },
    {
        "line": 53,
        "fullcodeline": "return -ESOCKTNOSUPPORT;"
    },
    {
        "line": 58,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 63,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 13,
        "fullcodeline": "protocol = AX25_P_TEXT;"
    },
    {
        "line": 20,
        "fullcodeline": "protocol = AX25_P_TEXT;"
    },
    {
        "line": 33,
        "fullcodeline": "return -ESOCKTNOSUPPORT;"
    }
]