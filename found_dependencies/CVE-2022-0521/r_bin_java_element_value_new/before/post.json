[
    {
        "line": 2,
        "fullcodeline": "ut32 i = 0;"
    },
    {
        "line": 3,
        "fullcodeline": "ut64 offset = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "RBinJavaElementValue *element_value = R_NEW0 (RBinJavaElementValue);"
    },
    {
        "line": 8,
        "fullcodeline": "RBinJavaElementValuePair *evps = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "element_value->metas = R_NEW0 (RBinJavaMetaInfo);"
    },
    {
        "line": 14,
        "fullcodeline": "element_value->file_offset = buf_offset;"
    },
    {
        "line": 15,
        "fullcodeline": "element_value->tag = buffer[offset];"
    },
    {
        "line": 16,
        "fullcodeline": "element_value->size += 1;"
    },
    {
        "line": 17,
        "fullcodeline": "offset += 1;"
    },
    {
        "line": 18,
        "fullcodeline": "element_value->metas->type_info = (void *) r_bin_java_get_ev_meta_from_tag (element_value->tag);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!element_value) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (!element_value->metas) {"
    },
    {
        "line": 11,
        "fullcodeline": "R_FREE (element_value);"
    },
    {
        "line": 31,
        "fullcodeline": "element_value->value.const_value.const_value_idx = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 32,
        "fullcodeline": "element_value->size += 2;"
    },
    {
        "line": 34,
        "fullcodeline": "element_value->value.const_value.const_value_cp_obj = r_bin_java_clone_cp_idx (R_BIN_JAVA_GLOBAL_BIN, element_value->value.const_value.const_value_idx);"
    },
    {
        "line": 38,
        "fullcodeline": "element_value->value.enum_const_value.type_name_idx = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 39,
        "fullcodeline": "element_value->size += 2;"
    },
    {
        "line": 40,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 42,
        "fullcodeline": "element_value->value.enum_const_value.const_name_idx = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 43,
        "fullcodeline": "element_value->size += 2;"
    },
    {
        "line": 44,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 47,
        "fullcodeline": "element_value->value.enum_const_value.const_name_cp_obj = r_bin_java_clone_cp_idx (R_BIN_JAVA_GLOBAL_BIN, element_value->value.enum_const_value.const_name_idx);"
    },
    {
        "line": 49,
        "fullcodeline": "element_value->value.enum_const_value.type_name_cp_obj = r_bin_java_clone_cp_idx (R_BIN_JAVA_GLOBAL_BIN, element_value->value.enum_const_value.type_name_idx);"
    },
    {
        "line": 53,
        "fullcodeline": "element_value->value.class_value.class_info_idx = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 54,
        "fullcodeline": "element_value->size += 2;"
    },
    {
        "line": 55,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 58,
        "fullcodeline": "element_value->value.class_value.class_info_cp_obj = r_bin_java_clone_cp_idx (R_BIN_JAVA_GLOBAL_BIN, element_value->value.class_value.class_info_idx);"
    },
    {
        "line": 62,
        "fullcodeline": "element_value->value.array_value.num_values = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 63,
        "fullcodeline": "element_value->size += 2;"
    },
    {
        "line": 64,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 65,
        "fullcodeline": "element_value->value.array_value.values = r_list_new ();"
    },
    {
        "line": 91,
        "fullcodeline": "element_value->value.annotation_value.element_value_pairs = r_list_newf (r_bin_java_element_pair_free);"
    },
    {
        "line": 66,
        "fullcodeline": "for (i = 0; i < element_value->value.array_value.num_values; i++) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (offset + 8 < sz) {"
    },
    {
        "line": 93,
        "fullcodeline": "for (i = 0; i < element_value->value.annotation_value.num_element_value_pairs; i++) {"
    },
    {
        "line": 70,
        "fullcodeline": "RBinJavaElementValue *ev_element = r_bin_java_element_value_new (buffer + offset, sz - offset, buf_offset + offset);"
    },
    {
        "line": 83,
        "fullcodeline": "element_value->value.annotation_value.type_idx = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 84,
        "fullcodeline": "element_value->size += 2;"
    },
    {
        "line": 85,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 87,
        "fullcodeline": "element_value->value.annotation_value.num_element_value_pairs = R_BIN_JAVA_USHORT (buffer, offset);"
    },
    {
        "line": 88,
        "fullcodeline": "element_value->size += 2;"
    },
    {
        "line": 89,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 97,
        "fullcodeline": "evps = r_bin_java_element_pair_new (buffer + offset, sz - offset, buf_offset + offset);"
    },
    {
        "line": 105,
        "fullcodeline": "r_list_append (element_value->value.annotation_value.element_value_pairs, (void *) evps);"
    },
    {
        "line": 67,
        "fullcodeline": "if (offset >= sz) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (offset > sz) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (evps == NULL) {"
    },
    {
        "line": 72,
        "fullcodeline": "element_value->size += ev_element->size;"
    },
    {
        "line": 73,
        "fullcodeline": "offset += ev_element->size;"
    },
    {
        "line": 75,
        "fullcodeline": "r_list_append (element_value->value.array_value.values, (void *) ev_element);"
    },
    {
        "line": 99,
        "fullcodeline": "element_value->size += evps->size;"
    },
    {
        "line": 100,
        "fullcodeline": "offset += evps->size;"
    }
]