[
    {
        "line": 3,
        "fullcodeline": "g_return_if_fail(RS_IS_FILTER(filter));"
    },
    {
        "line": 7,
        "fullcodeline": "GString *str = g_string_new(\"digraph G {\\n\");"
    },
    {
        "line": 9,
        "fullcodeline": "rs_filter_graph_helper(str, filter);"
    },
    {
        "line": 11,
        "fullcodeline": "g_string_append_printf(str, \"}\\n\");"
    },
    {
        "line": 14,
        "fullcodeline": "dot_filename = g_strdup_printf(\"/tmp/rs-filter-graph.%u\", g_random_int());"
    },
    {
        "line": 15,
        "fullcodeline": "png_filename = g_strdup_printf(\"%s.%u.png\", dot_filename, g_random_int());"
    },
    {
        "line": 17,
        "fullcodeline": "g_file_set_contents(dot_filename, str->str, str->len, NULL);"
    },
    {
        "line": 19,
        "fullcodeline": "command_line = g_strdup_printf(\"dot -Tpng >%s <%s\", png_filename, dot_filename);"
    },
    {
        "line": 24,
        "fullcodeline": "command_line = g_strdup_printf(\"gnome-open %s\", png_filename);"
    },
    {
        "line": 27,
        "fullcodeline": "g_free(command_line);"
    },
    {
        "line": 29,
        "fullcodeline": "g_free(dot_filename);"
    },
    {
        "line": 30,
        "fullcodeline": "g_free(png_filename);"
    },
    {
        "line": 31,
        "fullcodeline": "g_string_free(str, TRUE);"
    },
    {
        "line": 25,
        "fullcodeline": "if (0 != system(command_line))"
    },
    {
        "line": 20,
        "fullcodeline": "if (0 != system(command_line))"
    },
    {
        "line": 21,
        "fullcodeline": "g_warning(\"Calling dot failed\");"
    },
    {
        "line": 26,
        "fullcodeline": "g_warning(\"Calling gnome-open failed.\");"
    }
]