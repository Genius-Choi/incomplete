[
    {
        "line": 4,
        "fullcodeline": "PyObject *err_value = NULL, *reason_obj = NULL, *lib_obj = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "PyObject *verify_obj = NULL, *verify_code_obj = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "_Py_IDENTIFIER(reason);"
    },
    {
        "line": 8,
        "fullcodeline": "_Py_IDENTIFIER(library);"
    },
    {
        "line": 9,
        "fullcodeline": "_Py_IDENTIFIER(verify_message);"
    },
    {
        "line": 10,
        "fullcodeline": "_Py_IDENTIFIER(verify_code);"
    },
    {
        "line": 93,
        "fullcodeline": "init_value = Py_BuildValue(\"iN\", ERR_GET_REASON(ssl_errno), msg);"
    },
    {
        "line": 97,
        "fullcodeline": "err_value = PyObject_CallObject(type, init_value);"
    },
    {
        "line": 98,
        "fullcodeline": "Py_DECREF(init_value);"
    },
    {
        "line": 121,
        "fullcodeline": "PyErr_SetObject(type, err_value);"
    },
    {
        "line": 123,
        "fullcodeline": "Py_XDECREF(err_value);"
    },
    {
        "line": 124,
        "fullcodeline": "Py_XDECREF(verify_code_obj);"
    },
    {
        "line": 125,
        "fullcodeline": "Py_XDECREF(verify_obj);"
    },
    {
        "line": 12,
        "fullcodeline": "if (errcode != 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (errstr == NULL)"
    },
    {
        "line": 40,
        "fullcodeline": "if ((sslsock != NULL) && (type == PySSLCertVerificationErrorObject)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (verify_obj && reason_obj && lib_obj)"
    },
    {
        "line": 90,
        "fullcodeline": "if (msg == NULL)"
    },
    {
        "line": 94,
        "fullcodeline": "if (init_value == NULL)"
    },
    {
        "line": 99,
        "fullcodeline": "if (err_value == NULL)"
    },
    {
        "line": 102,
        "fullcodeline": "if (reason_obj == NULL)"
    },
    {
        "line": 104,
        "fullcodeline": "if (_PyObject_SetAttrId(err_value, &PyId_reason, reason_obj))"
    },
    {
        "line": 107,
        "fullcodeline": "if (lib_obj == NULL)"
    },
    {
        "line": 109,
        "fullcodeline": "if (_PyObject_SetAttrId(err_value, &PyId_library, lib_obj))"
    },
    {
        "line": 112,
        "fullcodeline": "if ((sslsock != NULL) && (type == PySSLCertVerificationErrorObject)) {"
    },
    {
        "line": 15,
        "fullcodeline": "lib = ERR_GET_LIB(errcode);"
    },
    {
        "line": 16,
        "fullcodeline": "reason = ERR_GET_REASON(errcode);"
    },
    {
        "line": 17,
        "fullcodeline": "key = Py_BuildValue(\"ii\", lib, reason);"
    },
    {
        "line": 20,
        "fullcodeline": "reason_obj = PyDict_GetItemWithError(err_codes_to_names, key);"
    },
    {
        "line": 21,
        "fullcodeline": "Py_DECREF(key);"
    },
    {
        "line": 25,
        "fullcodeline": "key = PyLong_FromLong(lib);"
    },
    {
        "line": 28,
        "fullcodeline": "lib_obj = PyDict_GetItemWithError(lib_codes_to_names, key);"
    },
    {
        "line": 29,
        "fullcodeline": "Py_DECREF(key);"
    },
    {
        "line": 37,
        "fullcodeline": "errstr = \"unknown error\";"
    },
    {
        "line": 41,
        "fullcodeline": "const char *verify_str = NULL;"
    },
    {
        "line": 44,
        "fullcodeline": "verify_code = SSL_get_verify_result(sslsock->ssl);"
    },
    {
        "line": 45,
        "fullcodeline": "verify_code_obj = PyLong_FromLong(verify_code);"
    },
    {
        "line": 79,
        "fullcodeline": "msg = PyUnicode_FromFormat(\"[%S: %S] %s: %S (_ssl.c:%d)\","
    },
    {
        "line": 103,
        "fullcodeline": "reason_obj = Py_None;"
    },
    {
        "line": 108,
        "fullcodeline": "lib_obj = Py_None;"
    },
    {
        "line": 18,
        "fullcodeline": "if (key == NULL)"
    },
    {
        "line": 22,
        "fullcodeline": "if (reason_obj == NULL && PyErr_Occurred()) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (key == NULL)"
    },
    {
        "line": 30,
        "fullcodeline": "if (lib_obj == NULL && PyErr_Occurred()) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (errstr == NULL)"
    },
    {
        "line": 46,
        "fullcodeline": "if (verify_code_obj == NULL) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (verify_obj == NULL) {"
    },
    {
        "line": 114,
        "fullcodeline": "if (_PyObject_SetAttrId(err_value, &PyId_verify_code,"
    },
    {
        "line": 117,
        "fullcodeline": "if (_PyObject_SetAttrId(err_value, &PyId_verify_message, verify_obj))"
    },
    {
        "line": 34,
        "fullcodeline": "errstr = ERR_reason_error_string(errcode);"
    },
    {
        "line": 52,
        "fullcodeline": "verify_obj = PyUnicode_FromFormat("
    },
    {
        "line": 58,
        "fullcodeline": "verify_obj = PyUnicode_FromFormat("
    },
    {
        "line": 64,
        "fullcodeline": "verify_str = X509_verify_cert_error_string(verify_code);"
    },
    {
        "line": 82,
        "fullcodeline": "else if (reason_obj && lib_obj)"
    },
    {
        "line": 65,
        "fullcodeline": "if (verify_str != NULL) {"
    },
    {
        "line": 83,
        "fullcodeline": "msg = PyUnicode_FromFormat(\"[%S: %S] %s (_ssl.c:%d)\","
    },
    {
        "line": 66,
        "fullcodeline": "verify_obj = PyUnicode_FromString(verify_str);"
    },
    {
        "line": 68,
        "fullcodeline": "verify_obj = Py_None;"
    },
    {
        "line": 69,
        "fullcodeline": "Py_INCREF(verify_obj);"
    },
    {
        "line": 86,
        "fullcodeline": "msg = PyUnicode_FromFormat(\"[%S] %s (_ssl.c:%d)\","
    },
    {
        "line": 89,
        "fullcodeline": "msg = PyUnicode_FromFormat(\"%s (_ssl.c:%d)\", errstr, lineno);"
    }
]