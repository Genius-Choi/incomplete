[
    {
        "line": 14,
        "fullcodeline": "bytes = PyBytes_FromStringAndSize(NULL, len);"
    },
    {
        "line": 31,
        "fullcodeline": "Py_DECREF(bytes);"
    },
    {
        "line": 33,
        "fullcodeline": "err = ERR_get_error();"
    },
    {
        "line": 34,
        "fullcodeline": "errstr = ERR_reason_error_string(err);"
    },
    {
        "line": 35,
        "fullcodeline": "v = Py_BuildValue(\"(ks)\", err, errstr);"
    },
    {
        "line": 9,
        "fullcodeline": "if (len < 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (bytes == NULL)"
    },
    {
        "line": 36,
        "fullcodeline": "if (v != NULL) {"
    },
    {
        "line": 10,
        "fullcodeline": "PyErr_SetString(PyExc_ValueError, \"num must be positive\");"
    },
    {
        "line": 21,
        "fullcodeline": "ok = RAND_pseudo_bytes((unsigned char*)PyBytes_AS_STRING(bytes), len);"
    },
    {
        "line": 37,
        "fullcodeline": "PyErr_SetObject(PySSLErrorObject, v);"
    },
    {
        "line": 38,
        "fullcodeline": "Py_DECREF(v);"
    },
    {
        "line": 23,
        "fullcodeline": "if (ok == 0 || ok == 1)"
    },
    {
        "line": 27,
        "fullcodeline": "ok = RAND_bytes((unsigned char*)PyBytes_AS_STRING(bytes), len);"
    },
    {
        "line": 28,
        "fullcodeline": "if (ok == 1)"
    },
    {
        "line": 24,
        "fullcodeline": "return Py_BuildValue(\"NO\", bytes, ok == 1 ? Py_True : Py_False);"
    }
]