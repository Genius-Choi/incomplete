[
    {
        "line": 5,
        "fullcodeline": "unsigned char md[EVP_MAX_MD_SIZE] = {0};"
    },
    {
        "line": 6,
        "fullcodeline": "unsigned int md_len = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "evp = py_digest_by_digestmod(module, digest);"
    },
    {
        "line": 27,
        "fullcodeline": "result = HMAC("
    },
    {
        "line": 11,
        "fullcodeline": "if (evp == NULL) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (key->len > INT_MAX) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (msg->len > INT_MAX) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (result == NULL) {"
    },
    {
        "line": 39,
        "fullcodeline": "return PyBytes_FromStringAndSize((const char*)md, md_len);"
    },
    {
        "line": 16,
        "fullcodeline": "PyErr_SetString(PyExc_OverflowError,"
    },
    {
        "line": 21,
        "fullcodeline": "PyErr_SetString(PyExc_OverflowError,"
    },
    {
        "line": 29,
        "fullcodeline": "(const void*)key->buf, (int)key->len,"
    },
    {
        "line": 30,
        "fullcodeline": "(const unsigned char*)msg->buf, (int)msg->len,"
    },
    {
        "line": 36,
        "fullcodeline": "_setException(PyExc_ValueError);"
    }
]