[
    {
        "line": 6,
        "fullcodeline": "PyObject *key_obj = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "n = PyLong_AsUnsignedLong(n_obj);"
    },
    {
        "line": 40,
        "fullcodeline": "r = PyLong_AsUnsignedLong(r_obj);"
    },
    {
        "line": 47,
        "fullcodeline": "p = PyLong_AsUnsignedLong(p_obj);"
    },
    {
        "line": 71,
        "fullcodeline": "retval = EVP_PBE_scrypt(NULL, 0, NULL, 0, n, r, p, maxmem, NULL, 0);"
    },
    {
        "line": 79,
        "fullcodeline": "key_obj = PyBytes_FromStringAndSize(NULL, dklen);"
    },
    {
        "line": 83,
        "fullcodeline": "key = PyBytes_AS_STRING(key_obj);"
    },
    {
        "line": 86,
        "fullcodeline": "retval = EVP_PBE_scrypt("
    },
    {
        "line": 11,
        "fullcodeline": "if (password->len > INT_MAX) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (salt->buf == NULL) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (salt->len > INT_MAX) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (n == (unsigned long) -1 && PyErr_Occurred()) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (n < 2 || n & (n - 1)) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (r == (unsigned long) -1 && PyErr_Occurred()) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (p == (unsigned long) -1 && PyErr_Occurred()) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (maxmem < 0 || maxmem > INT_MAX) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (dklen < 1 || dklen > INT_MAX) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (!retval) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (key_obj == NULL) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (!retval) {"
    },
    {
        "line": 12,
        "fullcodeline": "PyErr_SetString(PyExc_OverflowError,"
    },
    {
        "line": 18,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError,"
    },
    {
        "line": 23,
        "fullcodeline": "PyErr_SetString(PyExc_OverflowError,"
    },
    {
        "line": 30,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError,"
    },
    {
        "line": 35,
        "fullcodeline": "PyErr_SetString(PyExc_ValueError,"
    },
    {
        "line": 42,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError,"
    },
    {
        "line": 49,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError,"
    },
    {
        "line": 57,
        "fullcodeline": "PyErr_Format(PyExc_ValueError,"
    },
    {
        "line": 64,
        "fullcodeline": "PyErr_Format(PyExc_ValueError,"
    },
    {
        "line": 74,
        "fullcodeline": "PyErr_SetString(PyExc_ValueError,"
    },
    {
        "line": 87,
        "fullcodeline": "(const char*)password->buf, (size_t)password->len,"
    },
    {
        "line": 88,
        "fullcodeline": "(const unsigned char *)salt->buf, (size_t)salt->len,"
    },
    {
        "line": 90,
        "fullcodeline": "(unsigned char *)key, (size_t)dklen"
    },
    {
        "line": 95,
        "fullcodeline": "Py_CLEAR(key_obj);"
    },
    {
        "line": 96,
        "fullcodeline": "_setException(PyExc_ValueError);"
    }
]