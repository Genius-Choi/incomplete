[
    {
        "line": 5,
        "fullcodeline": "if (_ssl_locks == NULL) {"
    },
    {
        "line": 6,
        "fullcodeline": "_ssl_locks_count = CRYPTO_num_locks();"
    },
    {
        "line": 7,
        "fullcodeline": "_ssl_locks = PyMem_Calloc(_ssl_locks_count,"
    },
    {
        "line": 24,
        "fullcodeline": "CRYPTO_set_locking_callback(_ssl_thread_locking_function);"
    },
    {
        "line": 28,
        "fullcodeline": "CRYPTO_set_id_callback(_ssl_thread_id_function);"
    },
    {
        "line": 9,
        "fullcodeline": "if (_ssl_locks == NULL) {"
    },
    {
        "line": 13,
        "fullcodeline": "for (i = 0;  i < _ssl_locks_count;  i++) {"
    },
    {
        "line": 10,
        "fullcodeline": "PyErr_NoMemory();"
    },
    {
        "line": 14,
        "fullcodeline": "_ssl_locks[i] = PyThread_allocate_lock();"
    },
    {
        "line": 15,
        "fullcodeline": "if (_ssl_locks[i] == NULL) {"
    },
    {
        "line": 20,
        "fullcodeline": "PyMem_Free(_ssl_locks);"
    },
    {
        "line": 17,
        "fullcodeline": "for (j = 0;  j < i;  j++) {"
    },
    {
        "line": 18,
        "fullcodeline": "PyThread_free_lock(_ssl_locks[j]);"
    }
]