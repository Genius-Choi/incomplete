[
    {
        "line": 4,
        "fullcodeline": "HCERTSTORE hCollectionStore = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "PCCERT_CONTEXT pCertCtx = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "PyObject *keyusage = NULL, *cert = NULL, *enc = NULL, *tup = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "PyObject *result = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "result = PySet_New(NULL);"
    },
    {
        "line": 13,
        "fullcodeline": "hCollectionStore = ssl_collect_certificates(store_name);"
    },
    {
        "line": 10,
        "fullcodeline": "if (result == NULL) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (hCollectionStore == NULL) {"
    },
    {
        "line": 19,
        "fullcodeline": "while (pCertCtx = CertEnumCertificatesInStore(hCollectionStore, pCertCtx)) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (result == NULL) {"
    },
    {
        "line": 20,
        "fullcodeline": "cert = PyBytes_FromStringAndSize((const char*)pCertCtx->pbCertEncoded,"
    },
    {
        "line": 30,
        "fullcodeline": "keyusage = parseKeyUsage(pCertCtx, CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG);"
    },
    {
        "line": 43,
        "fullcodeline": "PyTuple_SET_ITEM(tup, 0, cert);"
    },
    {
        "line": 44,
        "fullcodeline": "cert = NULL;"
    },
    {
        "line": 45,
        "fullcodeline": "PyTuple_SET_ITEM(tup, 1, enc);"
    },
    {
        "line": 46,
        "fullcodeline": "enc = NULL;"
    },
    {
        "line": 47,
        "fullcodeline": "PyTuple_SET_ITEM(tup, 2, keyusage);"
    },
    {
        "line": 48,
        "fullcodeline": "keyusage = NULL;"
    },
    {
        "line": 54,
        "fullcodeline": "Py_CLEAR(tup);"
    },
    {
        "line": 70,
        "fullcodeline": "if (!CertCloseStore(hCollectionStore, CERT_CLOSE_STORE_FORCE_FLAG)) {"
    },
    {
        "line": 16,
        "fullcodeline": "return PyErr_SetFromWindowsErr(GetLastError());"
    },
    {
        "line": 22,
        "fullcodeline": "if (!cert) {"
    },
    {
        "line": 26,
        "fullcodeline": "if ((enc = certEncodingType(pCertCtx->dwCertEncodingType)) == NULL) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (keyusage == Py_True) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (keyusage == NULL) {"
    },
    {
        "line": 39,
        "fullcodeline": "if ((tup = PyTuple_New(3)) == NULL) {"
    },
    {
        "line": 73,
        "fullcodeline": "return PyErr_SetFromWindowsErr(GetLastError());"
    },
    {
        "line": 80,
        "fullcodeline": "PyObject *lst = PySequence_List(result);"
    },
    {
        "line": 23,
        "fullcodeline": "Py_CLEAR(result);"
    },
    {
        "line": 27,
        "fullcodeline": "Py_CLEAR(result);"
    },
    {
        "line": 33,
        "fullcodeline": "keyusage = parseKeyUsage(pCertCtx, CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG);"
    },
    {
        "line": 36,
        "fullcodeline": "Py_CLEAR(result);"
    },
    {
        "line": 40,
        "fullcodeline": "Py_CLEAR(result);"
    },
    {
        "line": 49,
        "fullcodeline": "if (PySet_Add(result, tup) == -1) {"
    },
    {
        "line": 50,
        "fullcodeline": "Py_CLEAR(result);"
    },
    {
        "line": 51,
        "fullcodeline": "Py_CLEAR(tup);"
    }
]