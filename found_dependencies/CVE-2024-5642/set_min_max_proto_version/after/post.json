[
    {
        "line": 6,
        "fullcodeline": "if (!PyArg_Parse(arg, \"l\", &v))"
    },
    {
        "line": 8,
        "fullcodeline": "if (v > INT_MAX) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (what == 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (result == 0) {"
    },
    {
        "line": 9,
        "fullcodeline": "PyErr_SetString(PyExc_OverflowError, \"Option is too long\");"
    },
    {
        "line": 19,
        "fullcodeline": "PyErr_SetString("
    },
    {
        "line": 39,
        "fullcodeline": "result = SSL_CTX_set_min_proto_version(self->ctx, v);"
    },
    {
        "line": 56,
        "fullcodeline": "PyErr_Format(PyExc_ValueError,"
    },
    {
        "line": 7,
        "fullcodeline": "return -1;"
    },
    {
        "line": 10,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "return -1;"
    },
    {
        "line": 53,
        "fullcodeline": "result = SSL_CTX_set_max_proto_version(self->ctx, v);"
    },
    {
        "line": 58,
        "fullcodeline": "return -1;"
    },
    {
        "line": 30,
        "fullcodeline": "v = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "v = PY_PROTO_MAXIMUM_AVAILABLE;"
    },
    {
        "line": 44,
        "fullcodeline": "v = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "v = PY_PROTO_MINIMUM_AVAILABLE;"
    }
]