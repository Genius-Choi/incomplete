[
    {
        "line": 10,
        "fullcodeline": "_hashlibstate *state = get_hashlib_state(module);"
    },
    {
        "line": 12,
        "fullcodeline": "mdef = PyModule_GetDef(module);"
    },
    {
        "line": 17,
        "fullcodeline": "state->constructs = PyDict_New();"
    },
    {
        "line": 41,
        "fullcodeline": "proxy = PyDictProxy_New(state->constructs);"
    },
    {
        "line": 13,
        "fullcodeline": "if (mdef == NULL) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (state->constructs == NULL) {"
    },
    {
        "line": 22,
        "fullcodeline": "for (fdef = mdef->m_methods; fdef->ml_name != NULL; fdef++) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (proxy == NULL) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (PyModule_AddObjectRef(module, \"_constructors\", proxy) < 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "name_obj = PyUnicode_FromString(fdef->ml_name + 8);"
    },
    {
        "line": 30,
        "fullcodeline": "func  = PyObject_GetAttrString(module, fdef->ml_name);"
    },
    {
        "line": 37,
        "fullcodeline": "Py_DECREF(func);"
    },
    {
        "line": 38,
        "fullcodeline": "Py_DECREF(name_obj);"
    },
    {
        "line": 14,
        "fullcodeline": "return -1;"
    },
    {
        "line": 19,
        "fullcodeline": "return -1;"
    },
    {
        "line": 23,
        "fullcodeline": "if (strncmp(fdef->ml_name, \"openssl_\", 8)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (name_obj == NULL) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (func == NULL) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (PyDict_SetItem(state->constructs, func, name_obj) < 0) {"
    },
    {
        "line": 43,
        "fullcodeline": "return -1;"
    },
    {
        "line": 46,
        "fullcodeline": "return -1;"
    },
    {
        "line": 28,
        "fullcodeline": "return -1;"
    },
    {
        "line": 32,
        "fullcodeline": "return -1;"
    },
    {
        "line": 35,
        "fullcodeline": "return -1;"
    }
]