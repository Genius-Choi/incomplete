[
    {
        "line": 5,
        "fullcodeline": "PyObject *certfile_bytes = NULL, *keyfile_bytes = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "pem_password_cb *orig_passwd_cb = SSL_CTX_get_default_passwd_cb(self->ctx);"
    },
    {
        "line": 7,
        "fullcodeline": "void *orig_passwd_userdata = SSL_CTX_get_default_passwd_cb_userdata(self->ctx);"
    },
    {
        "line": 8,
        "fullcodeline": "_PySSLPasswordInfo pw_info = { NULL, NULL, NULL, 0, 0 };"
    },
    {
        "line": 11,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "ERR_clear_error();"
    },
    {
        "line": 39,
        "fullcodeline": "PySSL_BEGIN_ALLOW_THREADS_S(pw_info.thread_state);"
    },
    {
        "line": 40,
        "fullcodeline": "r = SSL_CTX_use_certificate_chain_file(self->ctx,"
    },
    {
        "line": 42,
        "fullcodeline": "PySSL_END_ALLOW_THREADS_S(pw_info.thread_state);"
    },
    {
        "line": 57,
        "fullcodeline": "PySSL_BEGIN_ALLOW_THREADS_S(pw_info.thread_state);"
    },
    {
        "line": 58,
        "fullcodeline": "r = SSL_CTX_use_PrivateKey_file(self->ctx,"
    },
    {
        "line": 61,
        "fullcodeline": "PySSL_END_ALLOW_THREADS_S(pw_info.thread_state);"
    },
    {
        "line": 62,
        "fullcodeline": "Py_CLEAR(keyfile_bytes);"
    },
    {
        "line": 63,
        "fullcodeline": "Py_CLEAR(certfile_bytes);"
    },
    {
        "line": 78,
        "fullcodeline": "PySSL_BEGIN_ALLOW_THREADS_S(pw_info.thread_state);"
    },
    {
        "line": 79,
        "fullcodeline": "r = SSL_CTX_check_private_key(self->ctx);"
    },
    {
        "line": 85,
        "fullcodeline": "SSL_CTX_set_default_passwd_cb(self->ctx, orig_passwd_cb);"
    },
    {
        "line": 86,
        "fullcodeline": "SSL_CTX_set_default_passwd_cb_userdata(self->ctx, orig_passwd_userdata);"
    },
    {
        "line": 87,
        "fullcodeline": "PyMem_Free(pw_info.password);"
    },
    {
        "line": 91,
        "fullcodeline": "SSL_CTX_set_default_passwd_cb(self->ctx, orig_passwd_cb);"
    },
    {
        "line": 13,
        "fullcodeline": "if (keyfile == Py_None)"
    },
    {
        "line": 15,
        "fullcodeline": "if (!PyUnicode_FSConverter(certfile, &certfile_bytes)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (password != Py_None) {"
    },
    {
        "line": 14,
        "fullcodeline": "keyfile = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "if (keyfile && !PyUnicode_FSConverter(keyfile, &keyfile_bytes)) {"
    },
    {
        "line": 36,
        "fullcodeline": "SSL_CTX_set_default_passwd_cb(self->ctx, _password_callback);"
    },
    {
        "line": 37,
        "fullcodeline": "SSL_CTX_set_default_passwd_cb_userdata(self->ctx, &pw_info);"
    },
    {
        "line": 41,
        "fullcodeline": "PyBytes_AS_STRING(certfile_bytes));"
    },
    {
        "line": 59,
        "fullcodeline": "PyBytes_AS_STRING(keyfile ? keyfile_bytes : certfile_bytes),"
    },
    {
        "line": 82,
        "fullcodeline": "_setSSLError(NULL, 0, __FILE__, __LINE__);"
    },
    {
        "line": 16,
        "fullcodeline": "if (PyErr_ExceptionMatches(PyExc_TypeError)) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (PyErr_ExceptionMatches(PyExc_TypeError)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (PyCallable_Check(password)) {"
    },
    {
        "line": 17,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError,"
    },
    {
        "line": 31,
        "fullcodeline": "pw_info.callable = password;"
    },
    {
        "line": 32,
        "fullcodeline": "} else if (!_pwinfo_set(&pw_info, password,"
    },
    {
        "line": 53,
        "fullcodeline": "_setSSLError(NULL, 0, __FILE__, __LINE__);"
    },
    {
        "line": 74,
        "fullcodeline": "_setSSLError(NULL, 0, __FILE__, __LINE__);"
    }
]