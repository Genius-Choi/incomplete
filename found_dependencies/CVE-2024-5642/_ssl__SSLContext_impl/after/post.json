[
    {
        "line": 6,
        "fullcodeline": "SSL_CTX *ctx = NULL;"
    },
    {
        "line": 63,
        "fullcodeline": "assert(type != NULL && type->tp_alloc != NULL);"
    },
    {
        "line": 64,
        "fullcodeline": "self = (PySSLContext *) type->tp_alloc(type, 0);"
    },
    {
        "line": 69,
        "fullcodeline": "self->ctx = ctx;"
    },
    {
        "line": 70,
        "fullcodeline": "self->hostflags = X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS;"
    },
    {
        "line": 71,
        "fullcodeline": "self->protocol = proto_version;"
    },
    {
        "line": 72,
        "fullcodeline": "self->msg_cb = NULL;"
    },
    {
        "line": 73,
        "fullcodeline": "self->keylog_filename = NULL;"
    },
    {
        "line": 74,
        "fullcodeline": "self->keylog_bio = NULL;"
    },
    {
        "line": 75,
        "fullcodeline": "self->alpn_protocols = NULL;"
    },
    {
        "line": 76,
        "fullcodeline": "self->set_sni_cb = NULL;"
    },
    {
        "line": 92,
        "fullcodeline": "options = SSL_OP_ALL & ~SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS;"
    },
    {
        "line": 115,
        "fullcodeline": "SSL_CTX_set_options(self->ctx, options);"
    },
    {
        "line": 140,
        "fullcodeline": "SSL_CTX_set_mode(self->ctx, SSL_MODE_RELEASE_BUFFERS);"
    },
    {
        "line": 143,
        "fullcodeline": "SSL_CTX_set_session_id_context(self->ctx, (const unsigned char *) SID_CTX,"
    },
    {
        "line": 147,
        "fullcodeline": "params = SSL_CTX_get0_param(self->ctx);"
    },
    {
        "line": 150,
        "fullcodeline": "X509_VERIFY_PARAM_set_flags(params, X509_V_FLAG_TRUSTED_FIRST);"
    },
    {
        "line": 151,
        "fullcodeline": "X509_VERIFY_PARAM_set_hostflags(params, self->hostflags);"
    },
    {
        "line": 53,
        "fullcodeline": "if (proto_version == -1) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (ctx == NULL) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (self == NULL) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (proto_version == PY_SSL_VERSION_TLS_CLIENT) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (proto_version != PY_SSL_VERSION_SSL2)"
    },
    {
        "line": 95,
        "fullcodeline": "if (proto_version != PY_SSL_VERSION_SSL3)"
    },
    {
        "line": 119,
        "fullcodeline": "if (proto_version != PY_SSL_VERSION_SSL2) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (result == 0) {"
    },
    {
        "line": 158,
        "fullcodeline": "return (PyObject *)self;"
    },
    {
        "line": 40,
        "fullcodeline": "ctx = SSL_CTX_new(TLS_method());"
    },
    {
        "line": 43,
        "fullcodeline": "ctx = SSL_CTX_new(TLS_client_method());"
    },
    {
        "line": 46,
        "fullcodeline": "ctx = SSL_CTX_new(TLS_server_method());"
    },
    {
        "line": 49,
        "fullcodeline": "proto_version = -1;"
    },
    {
        "line": 54,
        "fullcodeline": "PyErr_SetString(PyExc_ValueError,"
    },
    {
        "line": 59,
        "fullcodeline": "_setSSLError(NULL, 0, __FILE__, __LINE__);"
    },
    {
        "line": 66,
        "fullcodeline": "SSL_CTX_free(ctx);"
    },
    {
        "line": 79,
        "fullcodeline": "self->check_hostname = 1;"
    },
    {
        "line": 94,
        "fullcodeline": "options |= SSL_OP_NO_SSLv2;"
    },
    {
        "line": 96,
        "fullcodeline": "options |= SSL_OP_NO_SSLv3;"
    },
    {
        "line": 124,
        "fullcodeline": "result = SSL_CTX_set_cipher_list(ctx, PY_SSL_DEFAULT_CIPHER_STRING);"
    },
    {
        "line": 131,
        "fullcodeline": "Py_DECREF(self);"
    },
    {
        "line": 132,
        "fullcodeline": "ERR_clear_error();"
    },
    {
        "line": 133,
        "fullcodeline": "PyErr_SetString(PySSLErrorObject,"
    },
    {
        "line": 80,
        "fullcodeline": "if (_set_verify_mode(self, PY_SSL_CERT_REQUIRED) == -1) {"
    },
    {
        "line": 85,
        "fullcodeline": "self->check_hostname = 0;"
    },
    {
        "line": 128,
        "fullcodeline": "result = SSL_CTX_set_cipher_list(ctx, \"HIGH:!aNULL:!eNULL\");"
    },
    {
        "line": 81,
        "fullcodeline": "Py_DECREF(self);"
    },
    {
        "line": 86,
        "fullcodeline": "if (_set_verify_mode(self, PY_SSL_CERT_NONE) == -1) {"
    },
    {
        "line": 87,
        "fullcodeline": "Py_DECREF(self);"
    }
]