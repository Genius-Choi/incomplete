[
    {
        "line": 3,
        "fullcodeline": "PyModule_AddStringConstant(m, \"_DEFAULT_CIPHERS\","
    },
    {
        "line": 6,
        "fullcodeline": "PyModule_AddIntConstant(m, \"SSL_ERROR_ZERO_RETURN\","
    },
    {
        "line": 8,
        "fullcodeline": "PyModule_AddIntConstant(m, \"SSL_ERROR_WANT_READ\","
    },
    {
        "line": 10,
        "fullcodeline": "PyModule_AddIntConstant(m, \"SSL_ERROR_WANT_WRITE\","
    },
    {
        "line": 12,
        "fullcodeline": "PyModule_AddIntConstant(m, \"SSL_ERROR_WANT_X509_LOOKUP\","
    },
    {
        "line": 14,
        "fullcodeline": "PyModule_AddIntConstant(m, \"SSL_ERROR_SYSCALL\","
    },
    {
        "line": 16,
        "fullcodeline": "PyModule_AddIntConstant(m, \"SSL_ERROR_SSL\","
    },
    {
        "line": 18,
        "fullcodeline": "PyModule_AddIntConstant(m, \"SSL_ERROR_WANT_CONNECT\","
    },
    {
        "line": 21,
        "fullcodeline": "PyModule_AddIntConstant(m, \"SSL_ERROR_EOF\","
    },
    {
        "line": 23,
        "fullcodeline": "PyModule_AddIntConstant(m, \"SSL_ERROR_INVALID_ERROR_CODE\","
    },
    {
        "line": 26,
        "fullcodeline": "PyModule_AddIntConstant(m, \"CERT_NONE\","
    },
    {
        "line": 28,
        "fullcodeline": "PyModule_AddIntConstant(m, \"CERT_OPTIONAL\","
    },
    {
        "line": 30,
        "fullcodeline": "PyModule_AddIntConstant(m, \"CERT_REQUIRED\","
    },
    {
        "line": 33,
        "fullcodeline": "PyModule_AddIntConstant(m, \"VERIFY_DEFAULT\","
    },
    {
        "line": 35,
        "fullcodeline": "PyModule_AddIntConstant(m, \"VERIFY_CRL_CHECK_LEAF\","
    },
    {
        "line": 37,
        "fullcodeline": "PyModule_AddIntConstant(m, \"VERIFY_CRL_CHECK_CHAIN\","
    },
    {
        "line": 39,
        "fullcodeline": "PyModule_AddIntConstant(m, \"VERIFY_X509_STRICT\","
    },
    {
        "line": 41,
        "fullcodeline": "PyModule_AddIntConstant(m, \"VERIFY_ALLOW_PROXY_CERTS\","
    },
    {
        "line": 43,
        "fullcodeline": "PyModule_AddIntConstant(m, \"VERIFY_X509_TRUSTED_FIRST\","
    },
    {
        "line": 54,
        "fullcodeline": "ADD_AD_CONSTANT(CLOSE_NOTIFY);"
    },
    {
        "line": 55,
        "fullcodeline": "ADD_AD_CONSTANT(UNEXPECTED_MESSAGE);"
    },
    {
        "line": 56,
        "fullcodeline": "ADD_AD_CONSTANT(BAD_RECORD_MAC);"
    },
    {
        "line": 57,
        "fullcodeline": "ADD_AD_CONSTANT(RECORD_OVERFLOW);"
    },
    {
        "line": 58,
        "fullcodeline": "ADD_AD_CONSTANT(DECOMPRESSION_FAILURE);"
    },
    {
        "line": 59,
        "fullcodeline": "ADD_AD_CONSTANT(HANDSHAKE_FAILURE);"
    },
    {
        "line": 60,
        "fullcodeline": "ADD_AD_CONSTANT(BAD_CERTIFICATE);"
    },
    {
        "line": 61,
        "fullcodeline": "ADD_AD_CONSTANT(UNSUPPORTED_CERTIFICATE);"
    },
    {
        "line": 62,
        "fullcodeline": "ADD_AD_CONSTANT(CERTIFICATE_REVOKED);"
    },
    {
        "line": 63,
        "fullcodeline": "ADD_AD_CONSTANT(CERTIFICATE_EXPIRED);"
    },
    {
        "line": 64,
        "fullcodeline": "ADD_AD_CONSTANT(CERTIFICATE_UNKNOWN);"
    },
    {
        "line": 65,
        "fullcodeline": "ADD_AD_CONSTANT(ILLEGAL_PARAMETER);"
    },
    {
        "line": 66,
        "fullcodeline": "ADD_AD_CONSTANT(UNKNOWN_CA);"
    },
    {
        "line": 67,
        "fullcodeline": "ADD_AD_CONSTANT(ACCESS_DENIED);"
    },
    {
        "line": 68,
        "fullcodeline": "ADD_AD_CONSTANT(DECODE_ERROR);"
    },
    {
        "line": 69,
        "fullcodeline": "ADD_AD_CONSTANT(DECRYPT_ERROR);"
    },
    {
        "line": 70,
        "fullcodeline": "ADD_AD_CONSTANT(PROTOCOL_VERSION);"
    },
    {
        "line": 71,
        "fullcodeline": "ADD_AD_CONSTANT(INSUFFICIENT_SECURITY);"
    },
    {
        "line": 72,
        "fullcodeline": "ADD_AD_CONSTANT(INTERNAL_ERROR);"
    },
    {
        "line": 73,
        "fullcodeline": "ADD_AD_CONSTANT(USER_CANCELLED);"
    },
    {
        "line": 74,
        "fullcodeline": "ADD_AD_CONSTANT(NO_RENEGOTIATION);"
    },
    {
        "line": 99,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTOCOL_SSLv2\","
    },
    {
        "line": 103,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTOCOL_SSLv3\","
    },
    {
        "line": 106,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTOCOL_SSLv23\","
    },
    {
        "line": 108,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTOCOL_TLS\","
    },
    {
        "line": 110,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTOCOL_TLS_CLIENT\","
    },
    {
        "line": 112,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTOCOL_TLS_SERVER\","
    },
    {
        "line": 114,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTOCOL_TLSv1\","
    },
    {
        "line": 116,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTOCOL_TLSv1_1\","
    },
    {
        "line": 118,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTOCOL_TLSv1_2\","
    },
    {
        "line": 122,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_ALL\","
    },
    {
        "line": 124,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_NO_SSLv2\", SSL_OP_NO_SSLv2);"
    },
    {
        "line": 125,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_NO_SSLv3\", SSL_OP_NO_SSLv3);"
    },
    {
        "line": 126,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_NO_TLSv1\", SSL_OP_NO_TLSv1);"
    },
    {
        "line": 127,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_NO_TLSv1_1\", SSL_OP_NO_TLSv1_1);"
    },
    {
        "line": 128,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_NO_TLSv1_2\", SSL_OP_NO_TLSv1_2);"
    },
    {
        "line": 132,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_NO_TLSv1_3\", 0);"
    },
    {
        "line": 134,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_CIPHER_SERVER_PREFERENCE\","
    },
    {
        "line": 136,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_SINGLE_DH_USE\", SSL_OP_SINGLE_DH_USE);"
    },
    {
        "line": 137,
        "fullcodeline": "PyModule_AddIntConstant(m, \"OP_NO_TICKET\", SSL_OP_NO_TICKET);"
    },
    {
        "line": 184,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTO_MINIMUM_SUPPORTED\","
    },
    {
        "line": 186,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTO_MAXIMUM_SUPPORTED\","
    },
    {
        "line": 188,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTO_SSLv3\", PY_PROTO_SSLv3);"
    },
    {
        "line": 189,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTO_TLSv1\", PY_PROTO_TLSv1);"
    },
    {
        "line": 190,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTO_TLSv1_1\", PY_PROTO_TLSv1_1);"
    },
    {
        "line": 191,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTO_TLSv1_2\", PY_PROTO_TLSv1_2);"
    },
    {
        "line": 192,
        "fullcodeline": "PyModule_AddIntConstant(m, \"PROTO_TLSv1_3\", PY_PROTO_TLSv1_3);"
    },
    {
        "line": 201,
        "fullcodeline": "addbool(m, \"HAS_SNI\", 1);"
    },
    {
        "line": 202,
        "fullcodeline": "addbool(m, \"HAS_TLS_UNIQUE\", 1);"
    },
    {
        "line": 203,
        "fullcodeline": "addbool(m, \"HAS_ECDH\", 1);"
    },
    {
        "line": 204,
        "fullcodeline": "addbool(m, \"HAS_NPN\", 0);"
    },
    {
        "line": 205,
        "fullcodeline": "addbool(m, \"HAS_ALPN\", 1);"
    },
    {
        "line": 210,
        "fullcodeline": "addbool(m, \"HAS_SSLv2\", 0);"
    },
    {
        "line": 216,
        "fullcodeline": "addbool(m, \"HAS_SSLv3\", 0);"
    },
    {
        "line": 222,
        "fullcodeline": "addbool(m, \"HAS_TLSv1\", 0);"
    },
    {
        "line": 228,
        "fullcodeline": "addbool(m, \"HAS_TLSv1_1\", 0);"
    },
    {
        "line": 234,
        "fullcodeline": "addbool(m, \"HAS_TLSv1_2\", 0);"
    },
    {
        "line": 240,
        "fullcodeline": "addbool(m, \"HAS_TLSv1_3\", 0);"
    },
    {
        "line": 38,
        "fullcodeline": "X509_V_FLAG_CRL_CHECK|X509_V_FLAG_CRL_CHECK_ALL);"
    },
    {
        "line": 123,
        "fullcodeline": "SSL_OP_ALL & ~SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS);"
    }
]