[
    {
        "line": 4,
        "fullcodeline": "uint8_t *addr_vec = (uint8_t *) (rh + 1), *current_address;"
    },
    {
        "line": 7,
        "fullcodeline": "const uint8_t new_seg_left = rh->seg_left - 1;"
    },
    {
        "line": 9,
        "fullcodeline": "assert(rh->seg_left > 0);"
    },
    {
        "line": 10,
        "fullcodeline": "num_addr = (((rh->len * 8) - GNRC_RPL_SRH_PADDING(rh->pad_resv) -"
    },
    {
        "line": 14,
        "fullcodeline": "DEBUG(\"RPL SRH: %u addresses in the routing header\\n\", (unsigned) num_addr);"
    },
    {
        "line": 23,
        "fullcodeline": "current_pos = num_addr - new_seg_left;"
    },
    {
        "line": 24,
        "fullcodeline": "pref_elided = (new_seg_left)"
    },
    {
        "line": 27,
        "fullcodeline": "compri_addr_len = sizeof(ipv6_addr_t) - GNRC_RPL_SRH_COMPRI(rh->compr);"
    },
    {
        "line": 28,
        "fullcodeline": "addr_len = sizeof(ipv6_addr_t) - pref_elided;"
    },
    {
        "line": 29,
        "fullcodeline": "memcpy(&addr, &ipv6->dst, pref_elided);"
    },
    {
        "line": 30,
        "fullcodeline": "current_address = &addr_vec[(current_pos - 1) * compri_addr_len];"
    },
    {
        "line": 31,
        "fullcodeline": "memcpy(&addr.u8[pref_elided], current_address, addr_len);"
    },
    {
        "line": 47,
        "fullcodeline": "rh->seg_left = new_seg_left;"
    },
    {
        "line": 48,
        "fullcodeline": "memcpy(current_address, &ipv6->dst.u8[pref_elided], addr_len);"
    },
    {
        "line": 50,
        "fullcodeline": "DEBUG(\"RPL SRH: Next hop: %s at position %d\\n\","
    },
    {
        "line": 53,
        "fullcodeline": "memcpy(&ipv6->dst, &addr, sizeof(ipv6->dst));"
    },
    {
        "line": 16,
        "fullcodeline": "if (rh->seg_left > num_addr) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (ipv6_addr_is_multicast(&ipv6->dst)) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (ipv6_addr_is_multicast(&addr)) {"
    },
    {
        "line": 43,
        "fullcodeline": "if ((*err_ptr = _contains_multiple_of_my_addr(&ipv6->dst, rh, num_addr,"
    },
    {
        "line": 51,
        "fullcodeline": "ipv6_addr_to_str(addr_str, &addr, sizeof(addr_str)), current_pos);"
    },
    {
        "line": 17,
        "fullcodeline": "DEBUG(\"RPL SRH: number of segments left > number of addresses - \""
    },
    {
        "line": 19,
        "fullcodeline": "*err_ptr = &rh->seg_left;"
    },
    {
        "line": 25,
        "fullcodeline": "? GNRC_RPL_SRH_COMPRI(rh->compr)"
    },
    {
        "line": 26,
        "fullcodeline": ": GNRC_RPL_SRH_COMPRE(rh->compr);"
    },
    {
        "line": 34,
        "fullcodeline": "DEBUG(\"RPL SRH: found a multicast destination address - discard\\n\");"
    },
    {
        "line": 38,
        "fullcodeline": "DEBUG(\"RPL SRH: found a multicast address in next address - discard\\n\");"
    },
    {
        "line": 12,
        "fullcodeline": "(16 - GNRC_RPL_SRH_COMPRI(rh->compr))) + 1;"
    },
    {
        "line": 11,
        "fullcodeline": "(16 - GNRC_RPL_SRH_COMPRE(rh->compr))) /"
    }
]