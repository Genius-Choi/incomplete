[
    {
        "line": 5,
        "fullcodeline": "uint32_t padding = 0, bbidx = 0, sp = 0, leading_sp = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "uint8_t *dptr = dest;"
    },
    {
        "line": 7,
        "fullcodeline": "uint8_t b64[B64_BLOCK] = { 0,0,0,0 };"
    },
    {
        "line": 8,
        "fullcodeline": "bool valid = true;"
    },
    {
        "line": 9,
        "fullcodeline": "Base64Ecode ecode = BASE64_ECODE_OK;"
    },
    {
        "line": 10,
        "fullcodeline": "*decoded_bytes = 0;"
    },
    {
        "line": 100,
        "fullcodeline": "*consumed_bytes += leading_sp;"
    },
    {
        "line": 13,
        "fullcodeline": "for (uint32_t i = 0; i < len; i++) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (bbidx > 0 && bbidx < 4 && ((!valid && mode == BASE64_MODE_RFC4648))) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (valid && bbidx > 0 && (mode != BASE64_MODE_RFC2045)) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (*decoded_bytes == 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "val = GetBase64Value(src[i]);"
    },
    {
        "line": 39,
        "fullcodeline": "b64[bbidx++] = (val > 0 ? (uint8_t)val : 0);"
    },
    {
        "line": 70,
        "fullcodeline": "padding = bbidx > 1 ? B64_BLOCK - bbidx : 2;"
    },
    {
        "line": 71,
        "fullcodeline": "uint32_t numDecoded_blk = ASCII_BLOCK - (padding < B64_BLOCK ? padding : ASCII_BLOCK);"
    },
    {
        "line": 82,
        "fullcodeline": "*decoded_bytes += numDecoded_blk;"
    },
    {
        "line": 83,
        "fullcodeline": "DecodeBase64Block(dptr, b64);"
    },
    {
        "line": 84,
        "fullcodeline": "*consumed_bytes += bbidx;"
    },
    {
        "line": 92,
        "fullcodeline": "*decoded_bytes += ASCII_BLOCK - (B64_BLOCK - bbidx);"
    },
    {
        "line": 93,
        "fullcodeline": "DecodeBase64Block(dptr, b64);"
    },
    {
        "line": 97,
        "fullcodeline": "SCLogDebug(\"base64 decoding failed\");"
    },
    {
        "line": 16,
        "fullcodeline": "if (val < 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (bbidx == B64_BLOCK) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (dest_size < *decoded_bytes + numDecoded_blk) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (dest_size - *decoded_bytes < ASCII_BLOCK)"
    },
    {
        "line": 90,
        "fullcodeline": "if (dest_size - *decoded_bytes < ASCII_BLOCK)"
    },
    {
        "line": 34,
        "fullcodeline": "padding++;"
    },
    {
        "line": 45,
        "fullcodeline": "uint32_t numDecoded_blk = ASCII_BLOCK - (padding < B64_BLOCK ? padding : ASCII_BLOCK);"
    },
    {
        "line": 55,
        "fullcodeline": "DecodeBase64Block(dptr, b64);"
    },
    {
        "line": 56,
        "fullcodeline": "dptr += numDecoded_blk;"
    },
    {
        "line": 57,
        "fullcodeline": "*decoded_bytes += numDecoded_blk;"
    },
    {
        "line": 59,
        "fullcodeline": "bbidx = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "padding = 0;"
    },
    {
        "line": 61,
        "fullcodeline": "*consumed_bytes += B64_BLOCK + sp;"
    },
    {
        "line": 62,
        "fullcodeline": "sp = 0;"
    },
    {
        "line": 63,
        "fullcodeline": "leading_sp = 0;"
    },
    {
        "line": 64,
        "fullcodeline": "memset(&b64, 0, sizeof(b64));"
    },
    {
        "line": 73,
        "fullcodeline": "SCLogDebug(\"Destination buffer full\");"
    },
    {
        "line": 74,
        "fullcodeline": "ecode = BASE64_ECODE_BUF;"
    },
    {
        "line": 17,
        "fullcodeline": "if (mode == BASE64_MODE_RFC2045 && src[i] != '=') {"
    },
    {
        "line": 26,
        "fullcodeline": "if (src[i] != '=') {"
    },
    {
        "line": 46,
        "fullcodeline": "if (dest_size < *decoded_bytes + numDecoded_blk) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (dest_size - *decoded_bytes < ASCII_BLOCK)"
    },
    {
        "line": 22,
        "fullcodeline": "sp++;"
    },
    {
        "line": 27,
        "fullcodeline": "valid = false;"
    },
    {
        "line": 28,
        "fullcodeline": "ecode = BASE64_ECODE_ERR;"
    },
    {
        "line": 47,
        "fullcodeline": "SCLogDebug(\"Destination buffer full\");"
    },
    {
        "line": 48,
        "fullcodeline": "ecode = BASE64_ECODE_BUF;"
    },
    {
        "line": 18,
        "fullcodeline": "if (bbidx == 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (mode == BASE64_MODE_STRICT) {"
    },
    {
        "line": 20,
        "fullcodeline": "leading_sp++;"
    },
    {
        "line": 30,
        "fullcodeline": "*decoded_bytes = 0;"
    }
]