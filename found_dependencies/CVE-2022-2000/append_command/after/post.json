[
    {
        "line": 3,
        "fullcodeline": "size_t  len = STRLEN(IObuff);"
    },
    {
        "line": 4,
        "fullcodeline": "char_u  *s = cmd;"
    },
    {
        "line": 14,
        "fullcodeline": "STRCAT(IObuff, \": \");"
    },
    {
        "line": 15,
        "fullcodeline": "d = IObuff + STRLEN(IObuff);"
    },
    {
        "line": 29,
        "fullcodeline": "*d = NUL;"
    },
    {
        "line": 7,
        "fullcodeline": "if (len > IOSIZE - 100)"
    },
    {
        "line": 16,
        "fullcodeline": "while (*s != NUL && d - IObuff + 5 < IOSIZE)"
    },
    {
        "line": 10,
        "fullcodeline": "d = IObuff + IOSIZE - 100;"
    },
    {
        "line": 11,
        "fullcodeline": "d -= mb_head_off(IObuff, d);"
    },
    {
        "line": 12,
        "fullcodeline": "STRCPY(d, \"...\");"
    },
    {
        "line": 18,
        "fullcodeline": "if (enc_utf8 ? (s[0] == 0xc2 && s[1] == 0xa0) : *s == 0xa0)"
    },
    {
        "line": 20,
        "fullcodeline": "s += enc_utf8 ? 2 : 1;"
    },
    {
        "line": 21,
        "fullcodeline": "STRCPY(d, \"<a0>\");"
    },
    {
        "line": 22,
        "fullcodeline": "d += 4;"
    },
    {
        "line": 24,
        "fullcodeline": "else if (d - IObuff + (*mb_ptr2len)(s) + 1 >= IOSIZE)"
    },
    {
        "line": 27,
        "fullcodeline": "MB_COPY_CHAR(s, d);"
    }
]