[
    {
        "line": 3,
        "fullcodeline": "struct edgeport_port *edge_port = urb->context;"
    },
    {
        "line": 4,
        "fullcodeline": "struct device *dev = &edge_port->port->dev;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned char *data = urb->transfer_buffer;"
    },
    {
        "line": 6,
        "fullcodeline": "int retval = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "int status = urb->status;"
    },
    {
        "line": 32,
        "fullcodeline": "port_number = edge_port->port->port_number;"
    },
    {
        "line": 57,
        "fullcodeline": "spin_lock(&edge_port->ep_lock);"
    },
    {
        "line": 58,
        "fullcodeline": "if (edge_port->ep_read_urb_state == EDGE_READ_URB_RUNNING)"
    },
    {
        "line": 14,
        "fullcodeline": "case -ECONNRESET:"
    },
    {
        "line": 15,
        "fullcodeline": "case -ENOENT:"
    },
    {
        "line": 16,
        "fullcodeline": "case -ESHUTDOWN:"
    },
    {
        "line": 18,
        "fullcodeline": "dev_dbg(&urb->dev->dev, \"%s - urb shutting down with status: %d\\n\", __func__, status);"
    },
    {
        "line": 21,
        "fullcodeline": "dev_err(&urb->dev->dev, \"%s - nonzero read bulk status received: %d\\n\", __func__, status);"
    },
    {
        "line": 24,
        "fullcodeline": "if (status == -EPIPE)"
    },
    {
        "line": 35,
        "fullcodeline": "edge_port->lsr_event = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "dev_dbg(dev, \"%s ===== Port %u LSR Status = %02x, Data = %02x ======\\n\","
    },
    {
        "line": 38,
        "fullcodeline": "handle_new_lsr(edge_port, 1, edge_port->lsr_mask, *data);"
    },
    {
        "line": 40,
        "fullcodeline": "--urb->actual_length;"
    },
    {
        "line": 41,
        "fullcodeline": "++data;"
    },
    {
        "line": 45,
        "fullcodeline": "usb_serial_debug_data(dev, __func__, urb->actual_length, data);"
    },
    {
        "line": 59,
        "fullcodeline": "retval = usb_submit_urb(urb, GFP_ATOMIC);"
    },
    {
        "line": 47,
        "fullcodeline": "dev_dbg(dev, \"%s - close pending, dropping data on the floor\\n\","
    },
    {
        "line": 60,
        "fullcodeline": "else if (edge_port->ep_read_urb_state == EDGE_READ_URB_STOPPING)"
    },
    {
        "line": 50,
        "fullcodeline": "edge_tty_recv(edge_port->port, data,"
    },
    {
        "line": 61,
        "fullcodeline": "edge_port->ep_read_urb_state = EDGE_READ_URB_STOPPED;"
    }
]