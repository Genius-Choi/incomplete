[
    {
        "line": 3,
        "fullcodeline": "FILE *iplist = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "plist_t root_node = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "char *plist_out = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "uint32_t size = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int read_size = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "char *plist_entire = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "options_t *options = parse_arguments(argc, argv);"
    },
    {
        "line": 19,
        "fullcodeline": "iplist = fopen(options->in_file, \"rb\");"
    },
    {
        "line": 25,
        "fullcodeline": "stat(options->in_file, &filestats);"
    },
    {
        "line": 26,
        "fullcodeline": "plist_entire = (char *) malloc(sizeof(char) * (filestats.st_size + 1));"
    },
    {
        "line": 27,
        "fullcodeline": "read_size = fread(plist_entire, sizeof(char), filestats.st_size, iplist);"
    },
    {
        "line": 28,
        "fullcodeline": "fclose(iplist);"
    },
    {
        "line": 41,
        "fullcodeline": "plist_free(root_node);"
    },
    {
        "line": 42,
        "fullcodeline": "free(plist_entire);"
    },
    {
        "line": 65,
        "fullcodeline": "free(options);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!options)"
    },
    {
        "line": 20,
        "fullcodeline": "if (!iplist) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (memcmp(plist_entire, \"bplist00\", 8) == 0)"
    },
    {
        "line": 14,
        "fullcodeline": "print_usage(argc, argv);"
    },
    {
        "line": 21,
        "fullcodeline": "free(options);"
    },
    {
        "line": 33,
        "fullcodeline": "plist_from_bin(plist_entire, read_size, &root_node);"
    },
    {
        "line": 34,
        "fullcodeline": "plist_to_xml(root_node, &plist_out, &size);"
    },
    {
        "line": 60,
        "fullcodeline": "free(plist_out);"
    },
    {
        "line": 38,
        "fullcodeline": "plist_from_xml(plist_entire, read_size, &root_node);"
    },
    {
        "line": 39,
        "fullcodeline": "plist_to_bin(root_node, &plist_out, &size);"
    },
    {
        "line": 46,
        "fullcodeline": "if (options->out_file != NULL)"
    },
    {
        "line": 63,
        "fullcodeline": "printf(\"ERROR: Failed to convert input file.\\n\");"
    },
    {
        "line": 48,
        "fullcodeline": "FILE *oplist = fopen(options->out_file, \"wb\");"
    },
    {
        "line": 53,
        "fullcodeline": "fwrite(plist_out, size, sizeof(char), oplist);"
    },
    {
        "line": 54,
        "fullcodeline": "fclose(oplist);"
    },
    {
        "line": 49,
        "fullcodeline": "if (!oplist) {"
    },
    {
        "line": 58,
        "fullcodeline": "fwrite(plist_out, size, sizeof(char), stdout);"
    },
    {
        "line": 50,
        "fullcodeline": "free(options);"
    }
]