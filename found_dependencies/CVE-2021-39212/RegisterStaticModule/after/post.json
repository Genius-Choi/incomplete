[
    {
        "line": 5,
        "fullcodeline": "module_name[MagickPathExtent];"
    },
    {
        "line": 22,
        "fullcodeline": "assert(module != (const char *) NULL);"
    },
    {
        "line": 23,
        "fullcodeline": "(void) CopyMagickString(module_name,module,MagickPathExtent);"
    },
    {
        "line": 24,
        "fullcodeline": "p=GetCoderInfo(module,exception);"
    },
    {
        "line": 27,
        "fullcodeline": "rights=ReadPolicyRights|WritePolicyRights;"
    },
    {
        "line": 25,
        "fullcodeline": "if (p != (CoderInfo *) NULL)"
    },
    {
        "line": 28,
        "fullcodeline": "if (IsRightsAuthorized(ModulePolicyDomain,rights,module_name) == MagickFalse)"
    },
    {
        "line": 36,
        "fullcodeline": "for (i=0; i < (ssize_t) extent; i++)"
    },
    {
        "line": 26,
        "fullcodeline": "(void) CopyMagickString(module_name,p->name,MagickPathExtent);"
    },
    {
        "line": 30,
        "fullcodeline": "errno=EPERM;"
    },
    {
        "line": 31,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),PolicyError,"
    },
    {
        "line": 37,
        "fullcodeline": "if (LocaleCompare(MagickModules[i].module,module_name) == 0)"
    },
    {
        "line": 39,
        "fullcodeline": "if (MagickModules[i].registered == MagickFalse)"
    },
    {
        "line": 41,
        "fullcodeline": "(void) (MagickModules[i].register_module)();"
    },
    {
        "line": 42,
        "fullcodeline": "MagickModules[i].registered=MagickTrue;"
    }
]