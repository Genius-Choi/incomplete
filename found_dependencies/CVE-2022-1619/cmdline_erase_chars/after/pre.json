[
    {
        "line": 12,
        "fullcodeline": "if (c == K_KDEL)"
    },
    {
        "line": 19,
        "fullcodeline": "if (c == K_DEL && ccline.cmdpos != ccline.cmdlen)"
    },
    {
        "line": 21,
        "fullcodeline": "if (has_mbyte && c == K_DEL)"
    },
    {
        "line": 24,
        "fullcodeline": "if (ccline.cmdpos > 0)"
    },
    {
        "line": 13,
        "fullcodeline": "c = K_DEL;"
    },
    {
        "line": 20,
        "fullcodeline": "++ccline.cmdpos;"
    },
    {
        "line": 22,
        "fullcodeline": "ccline.cmdpos += mb_off_next(ccline.cmdbuff,"
    },
    {
        "line": 28,
        "fullcodeline": "j = ccline.cmdpos;"
    },
    {
        "line": 29,
        "fullcodeline": "p = ccline.cmdbuff + j;"
    },
    {
        "line": 58,
        "fullcodeline": "ccline.cmdpos = (int)(p - ccline.cmdbuff);"
    },
    {
        "line": 59,
        "fullcodeline": "ccline.cmdlen -= j - ccline.cmdpos;"
    },
    {
        "line": 60,
        "fullcodeline": "i = ccline.cmdpos;"
    },
    {
        "line": 65,
        "fullcodeline": "ccline.cmdbuff[ccline.cmdlen] = NUL;"
    },
    {
        "line": 61,
        "fullcodeline": "while (i < ccline.cmdlen)"
    },
    {
        "line": 32,
        "fullcodeline": "p = mb_prevptr(ccline.cmdbuff, p);"
    },
    {
        "line": 77,
        "fullcodeline": "else if (ccline.cmdlen == 0 && c != Ctrl_W"
    },
    {
        "line": 62,
        "fullcodeline": "ccline.cmdbuff[i++] = ccline.cmdbuff[j++];"
    },
    {
        "line": 78,
        "fullcodeline": "&& ccline.cmdprompt == NULL && indent == 0)"
    },
    {
        "line": 103,
        "fullcodeline": "redraw_cmdline = TRUE;"
    },
    {
        "line": 37,
        "fullcodeline": "i = mb_get_class(p);"
    },
    {
        "line": 89,
        "fullcodeline": "if (!cmd_silent)"
    },
    {
        "line": 36,
        "fullcodeline": "p = mb_prevptr(ccline.cmdbuff, p);"
    },
    {
        "line": 39,
        "fullcodeline": "p = mb_prevptr(ccline.cmdbuff, p);"
    },
    {
        "line": 96,
        "fullcodeline": "msg_col = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "while (p > ccline.cmdbuff && vim_isspace(*p))"
    },
    {
        "line": 38,
        "fullcodeline": "while (p > ccline.cmdbuff && mb_get_class(p) == i)"
    },
    {
        "line": 40,
        "fullcodeline": "if (mb_get_class(p) != i)"
    },
    {
        "line": 41,
        "fullcodeline": "p += (*mb_ptr2len)(p);"
    },
    {
        "line": 47,
        "fullcodeline": "--p;"
    },
    {
        "line": 48,
        "fullcodeline": "if (p > ccline.cmdbuff)"
    },
    {
        "line": 57,
        "fullcodeline": "--p;"
    },
    {
        "line": 46,
        "fullcodeline": "while (p > ccline.cmdbuff && vim_isspace(p[-1]))"
    },
    {
        "line": 50,
        "fullcodeline": "i = vim_iswordc(p[-1]);"
    },
    {
        "line": 53,
        "fullcodeline": "--p;"
    },
    {
        "line": 51,
        "fullcodeline": "while (p > ccline.cmdbuff && !vim_isspace(p[-1])"
    },
    {
        "line": 52,
        "fullcodeline": "&& vim_iswordc(p[-1]) == i)"
    }
]