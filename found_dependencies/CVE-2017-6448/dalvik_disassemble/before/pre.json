[
    {
        "line": 2,
        "fullcodeline": "int vA, vB, vC, payload = 0, i = (int) buf[0];"
    },
    {
        "line": 3,
        "fullcodeline": "int size = dalvik_opcodes[i].len;"
    },
    {
        "line": 4,
        "fullcodeline": "char str[1024], *strasm;"
    },
    {
        "line": 8,
        "fullcodeline": "op->buf_asm[0] = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "strasm = NULL;"
    },
    {
        "line": 423,
        "fullcodeline": "op->payload = payload;"
    },
    {
        "line": 424,
        "fullcodeline": "size += payload; // XXX"
    },
    {
        "line": 426,
        "fullcodeline": "op->size = size;"
    },
    {
        "line": 427,
        "fullcodeline": "free (strasm);"
    },
    {
        "line": 9,
        "fullcodeline": "if (buf[0] == 0x00) { /* nop */"
    },
    {
        "line": 57,
        "fullcodeline": "if (size <= len) {"
    },
    {
        "line": 58,
        "fullcodeline": "strncpy (op->buf_asm, dalvik_opcodes[i].name, sizeof (op->buf_asm) - 1);"
    },
    {
        "line": 59,
        "fullcodeline": "strasm = strdup (op->buf_asm);"
    },
    {
        "line": 60,
        "fullcodeline": "size = dalvik_opcodes[i].len;"
    },
    {
        "line": 48,
        "fullcodeline": "size = 8;"
    },
    {
        "line": 49,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 64,
        "fullcodeline": "vA = buf[1] & 0x0f;"
    },
    {
        "line": 65,
        "fullcodeline": "vB = (buf[1] & 0xf0) >> 4;"
    },
    {
        "line": 66,
        "fullcodeline": "sprintf (str, \" v%i, v%i\", vA, vB);"
    },
    {
        "line": 67,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 70,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 71,
        "fullcodeline": "vB = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 72,
        "fullcodeline": "sprintf (str, \" v%i, v%i\", vA, vB);"
    },
    {
        "line": 73,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 76,
        "fullcodeline": "vA = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 77,
        "fullcodeline": "vB = (buf[5] << 8) | buf[4];"
    },
    {
        "line": 78,
        "fullcodeline": "sprintf (str, \" v%i, v%i\", vA, vB);"
    },
    {
        "line": 79,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 82,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 83,
        "fullcodeline": "sprintf (str, \" v%i\", vA);"
    },
    {
        "line": 84,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 87,
        "fullcodeline": "vA = buf[1] & 0x0f;"
    },
    {
        "line": 88,
        "fullcodeline": "vB = (buf[1] & 0xf0) >> 4;"
    },
    {
        "line": 89,
        "fullcodeline": "sprintf (str, \" v%i, %#x\", vA, vB);"
    },
    {
        "line": 90,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 93,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 101,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 102,
        "fullcodeline": "vB = buf[2] | (buf[3] << 8) | (buf[4] << 16) | (buf[5] << 24);"
    },
    {
        "line": 108,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 111,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 113,
        "fullcodeline": "vB = 0 | (buf[2] << 16) | (buf[3] << 24);"
    },
    {
        "line": 119,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 122,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 124,
        "fullcodeline": "llint lB = (llint)buf[2] | ((llint)buf[3] << 8)|"
    },
    {
        "line": 130,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 133,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 134,
        "fullcodeline": "vB = (int) buf[2];"
    },
    {
        "line": 135,
        "fullcodeline": "vC = (int) buf[3];"
    },
    {
        "line": 136,
        "fullcodeline": "sprintf (str, \" v%i, v%i, v%i\", vA, vB, vC);"
    },
    {
        "line": 137,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 140,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 141,
        "fullcodeline": "vB = (int) buf[2];"
    },
    {
        "line": 142,
        "fullcodeline": "vC = (int) buf[3];"
    },
    {
        "line": 143,
        "fullcodeline": "sprintf (str, \" v%i, v%i, %#x\", vA, vB, vC);"
    },
    {
        "line": 144,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 147,
        "fullcodeline": "vA = buf[1] & 0x0f;"
    },
    {
        "line": 148,
        "fullcodeline": "vB = (buf[1] & 0xf0) >> 4;"
    },
    {
        "line": 149,
        "fullcodeline": "vC = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 150,
        "fullcodeline": "sprintf (str, \" v%i, v%i, %#x\", vA, vB, vC);"
    },
    {
        "line": 151,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 154,
        "fullcodeline": "vA = (char) buf[1];"
    },
    {
        "line": 157,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 160,
        "fullcodeline": "vA = (short) (buf[3] << 8 | buf[2]);"
    },
    {
        "line": 162,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 165,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 166,
        "fullcodeline": "vB = (int) (buf[3] << 8 | buf[2]);"
    },
    {
        "line": 169,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 172,
        "fullcodeline": "vA = (int) (buf[2] | (buf[3] << 8) | (buf[4] << 16) | (buf[5] << 24));"
    },
    {
        "line": 175,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 178,
        "fullcodeline": "vA = buf[1] & 0x0f;"
    },
    {
        "line": 179,
        "fullcodeline": "vB = (buf[1] & 0xf0) >> 4;"
    },
    {
        "line": 180,
        "fullcodeline": "vC = (int) (buf[3] << 8 | buf[2]);"
    },
    {
        "line": 183,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 186,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 187,
        "fullcodeline": "vB = (int) (buf[2] | (buf[3] << 8) | (buf[4] << 16) | (buf[5] << 24));"
    },
    {
        "line": 189,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 192,
        "fullcodeline": "vA = (int) (buf[1] & 0x0f);"
    },
    {
        "line": 193,
        "fullcodeline": "vB = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 194,
        "fullcodeline": "*str = 0;"
    },
    {
        "line": 212,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 213,
        "fullcodeline": "sprintf (str, \", [%04x]\", vB);"
    },
    {
        "line": 214,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 218,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 219,
        "fullcodeline": "vB = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 220,
        "fullcodeline": "vC = (buf[5] << 8) | buf[4];"
    },
    {
        "line": 221,
        "fullcodeline": "sprintf (str, \" {v%i..v%i}, [%04x]\", vC, vC + vA - 1, vB);"
    },
    {
        "line": 222,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 225,
        "fullcodeline": "vA = (int) (buf[1] & 0xf0) >> 4;"
    },
    {
        "line": 226,
        "fullcodeline": "vB = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 246,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 247,
        "fullcodeline": "sprintf (str, \", [%04x]\", vB);"
    },
    {
        "line": 248,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 251,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 252,
        "fullcodeline": "vB = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 275,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 278,
        "fullcodeline": "vA = (buf[1] & 0x0f);"
    },
    {
        "line": 279,
        "fullcodeline": "vB = (buf[1] & 0xf0) >> 4;"
    },
    {
        "line": 280,
        "fullcodeline": "vC = (buf[3]<<8) | buf[2];"
    },
    {
        "line": 281,
        "fullcodeline": "offset = R_ASM_GET_OFFSET (a, 'o', vC);"
    },
    {
        "line": 287,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 290,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 291,
        "fullcodeline": "vB = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 292,
        "fullcodeline": "offset = R_ASM_GET_OFFSET (a, 't', vB);"
    },
    {
        "line": 298,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 301,
        "fullcodeline": "vA = (buf[1] & 0x0f);"
    },
    {
        "line": 302,
        "fullcodeline": "vB = (buf[1] & 0xf0) >> 4;"
    },
    {
        "line": 303,
        "fullcodeline": "vC = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 321,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 324,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 325,
        "fullcodeline": "vB = (int) (buf[5] | (buf[4] << 8) | (buf[3] << 16) | (buf[2] << 24));"
    },
    {
        "line": 326,
        "fullcodeline": "offset = R_ASM_GET_OFFSET (a, 's', vB);"
    },
    {
        "line": 333,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 336,
        "fullcodeline": "vA = (int) buf[1];"
    },
    {
        "line": 337,
        "fullcodeline": "vB = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 338,
        "fullcodeline": "vC = (buf[5] << 8) | buf[4];"
    },
    {
        "line": 356,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 359,
        "fullcodeline": "vA = (int) (buf[1] & 0xf0) >> 4;"
    },
    {
        "line": 360,
        "fullcodeline": "vB = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 383,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 400,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 406,
        "fullcodeline": "strcpy (op->buf_asm, \"invalid \");"
    },
    {
        "line": 408,
        "fullcodeline": "strasm = NULL;"
    },
    {
        "line": 409,
        "fullcodeline": "size = 2;"
    },
    {
        "line": 412,
        "fullcodeline": "strncpy (op->buf_asm, strasm, sizeof (op->buf_asm) - 1);"
    },
    {
        "line": 413,
        "fullcodeline": "op->buf_asm[sizeof (op->buf_asm) - 1] = 0;"
    },
    {
        "line": 418,
        "fullcodeline": "} else if (len > 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "unsigned short array_size = buf[2] | (buf[3] << 8);"
    },
    {
        "line": 17,
        "fullcodeline": "int first_key = buf[4] | (buf[5] << 8) | (buf[6] << 16) | (buf[7] << 24);"
    },
    {
        "line": 18,
        "fullcodeline": "sprintf (op->buf_asm, \"packed-switch-payload %d, %d\", array_size, first_key);"
    },
    {
        "line": 19,
        "fullcodeline": "size = 8;"
    },
    {
        "line": 20,
        "fullcodeline": "payload = 2 * (array_size * 2);"
    },
    {
        "line": 21,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "unsigned short array_size = buf[2] | (buf[3] << 8);"
    },
    {
        "line": 30,
        "fullcodeline": "sprintf (op->buf_asm, \"sparse-switch-payload %d\", array_size);"
    },
    {
        "line": 31,
        "fullcodeline": "size = 4;"
    },
    {
        "line": 32,
        "fullcodeline": "payload = 2 * (array_size*4);"
    },
    {
        "line": 33,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "if (len > 7) {"
    },
    {
        "line": 95,
        "fullcodeline": "short sB = (buf[3] << 8) | buf[2];"
    },
    {
        "line": 96,
        "fullcodeline": "sprintf (str, \" v%i, %#04hx\", vA, sB);"
    },
    {
        "line": 97,
        "fullcodeline": "strasm = r_str_concat (strasm, str);"
    },
    {
        "line": 103,
        "fullcodeline": "if (buf[0] == 0x17) { //const-wide/32"
    },
    {
        "line": 114,
        "fullcodeline": "if (buf[0] == 0x19) { // const-wide/high16"
    },
    {
        "line": 253,
        "fullcodeline": "if (buf[0] == 0x1a) {"
    },
    {
        "line": 282,
        "fullcodeline": "if (offset == -1) {"
    },
    {
        "line": 293,
        "fullcodeline": "if (offset == -1) {"
    },
    {
        "line": 304,
        "fullcodeline": "if (buf[0] == 0x20 || buf[0] == 0x23) { //instance-of & new-array"
    },
    {
        "line": 327,
        "fullcodeline": "if (offset == -1) {"
    },
    {
        "line": 339,
        "fullcodeline": "if (buf[0] == 0x25) { // filled-new-array/range"
    },
    {
        "line": 384,
        "fullcodeline": "if (buf[0] == 0x24) { // filled-new-array"
    },
    {
        "line": 416,
        "fullcodeline": "strcpy (op->buf_asm , \"invalid\");"
    },
    {
        "line": 419,
        "fullcodeline": "strcpy (op->buf_asm, \"invalid \");"
    },
    {
        "line": 420,
        "fullcodeline": "op->size = len;"
    },
    {
        "line": 421,
        "fullcodeline": "size = len;"
    },
    {
        "line": 41,
        "fullcodeline": "unsigned short elem_width = buf[2] | (buf[3] << 8);"
    },
    {
        "line": 42,
        "fullcodeline": "unsigned int array_size = buf[4] | (buf[5] << 8) | (buf[6] << 16) | (buf[7] << 24);"
    },
    {
        "line": 43,
        "fullcodeline": "snprintf (op->buf_asm, sizeof (op->buf_asm),"
    },
    {
        "line": 46,
        "fullcodeline": "payload = 2 * ((array_size * elem_width+1)/2);"
    },
    {
        "line": 104,
        "fullcodeline": "snprintf (str, sizeof (str), \" v%i:v%i, 0x%08x\", vA, vA + 1, vB);"
    },
    {
        "line": 115,
        "fullcodeline": "snprintf (str, sizeof (str), \" v%i:v%i, 0x%08x\", vA, vA + 1, vB);"
    },
    {
        "line": 197,
        "fullcodeline": "sprintf (str, \" {v%i}\", buf[4] & 0x0f);"
    },
    {
        "line": 200,
        "fullcodeline": "sprintf (str, \" {v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4);"
    },
    {
        "line": 203,
        "fullcodeline": "sprintf (str, \" {v%i, v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4, buf[5] & 0x0f);"
    },
    {
        "line": 206,
        "fullcodeline": "sprintf (str, \" {v%i, v%i, v%i, v%i}\", buf[4] & 0x0f,"
    },
    {
        "line": 210,
        "fullcodeline": "sprintf (str, \" {}\");"
    },
    {
        "line": 229,
        "fullcodeline": "sprintf (str, \" {v%i}\", buf[4] & 0x0f);"
    },
    {
        "line": 232,
        "fullcodeline": "sprintf (str, \" {v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4);"
    },
    {
        "line": 235,
        "fullcodeline": "sprintf (str, \" {v%i, v%i, v%i}\", buf[4] & 0x0f,"
    },
    {
        "line": 239,
        "fullcodeline": "sprintf (str, \" {v%i, v%i, v%i, v%i}\", buf[4] & 0x0f,"
    },
    {
        "line": 243,
        "fullcodeline": "sprintf (str, \" {}\");"
    },
    {
        "line": 254,
        "fullcodeline": "offset = R_ASM_GET_OFFSET (a, 's', vB);"
    },
    {
        "line": 283,
        "fullcodeline": "sprintf (str, \" v%i, v%i, [obj+%04x]\", vA, vB, vC);"
    },
    {
        "line": 294,
        "fullcodeline": "sprintf (str, \" v%i, thing+%i\", vA, vB);"
    },
    {
        "line": 305,
        "fullcodeline": "flag_str = R_ASM_GET_NAME (a, 'c', vC);"
    },
    {
        "line": 328,
        "fullcodeline": "sprintf (str, \" v%i, string+%i\", vA, vB);"
    },
    {
        "line": 340,
        "fullcodeline": "flag_str = R_ASM_GET_NAME (a, 'c', vB);"
    },
    {
        "line": 363,
        "fullcodeline": "sprintf (str, \" {v%i}\", buf[4] & 0x0f);"
    },
    {
        "line": 366,
        "fullcodeline": "sprintf (str, \" {v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4);"
    },
    {
        "line": 369,
        "fullcodeline": "sprintf (str, \" {v%i, v%i, v%i}\", buf[4] & 0x0f,"
    },
    {
        "line": 373,
        "fullcodeline": "sprintf (str, \" {v%i, v%i, v%i, v%i}\", buf[4] & 0x0f,"
    },
    {
        "line": 377,
        "fullcodeline": "sprintf (str, \" {v%i, v%i, v%i, v%i, v%i}\", buf[4] & 0x0f,"
    },
    {
        "line": 381,
        "fullcodeline": "sprintf (str, \" {}\");"
    },
    {
        "line": 385,
        "fullcodeline": "flag_str = R_ASM_GET_NAME (a, 'c', vB);"
    },
    {
        "line": 106,
        "fullcodeline": "snprintf (str, sizeof (str), \" v%i, 0x%08x\", vA, vB);"
    },
    {
        "line": 117,
        "fullcodeline": "snprintf (str, sizeof (str), \" v%i, 0x%08x\", vA, vB);"
    },
    {
        "line": 207,
        "fullcodeline": "(buf[4] & 0xf0) >> 4, buf[5] & 0x0f, (buf[5] & 0xf0) >> 4);"
    },
    {
        "line": 236,
        "fullcodeline": "(buf[4] & 0xf0) >> 4, buf[5] & 0x0f);"
    },
    {
        "line": 240,
        "fullcodeline": "(buf[4] & 0xf0) >> 4, buf[5] & 0x0f, (buf[5] & 0xf0) >> 4);"
    },
    {
        "line": 255,
        "fullcodeline": "if (offset == -1) {"
    },
    {
        "line": 313,
        "fullcodeline": "flag_str = R_ASM_GET_NAME (a, 'f', vC);"
    },
    {
        "line": 348,
        "fullcodeline": "flag_str = R_ASM_GET_NAME (a, 'm', vB);"
    },
    {
        "line": 370,
        "fullcodeline": "(buf[4] & 0xf0) >> 4, buf[5] & 0x0f);"
    },
    {
        "line": 374,
        "fullcodeline": "(buf[4] & 0xf0) >> 4, buf[5] & 0x0f, (buf[5] & 0xf0) >> 4);"
    },
    {
        "line": 378,
        "fullcodeline": "(buf[4] & 0xf0) >> 4, buf[5] & 0x0f, (buf[5] & 0xf0) >> 4, buf[1] & 0x0f); // TOODO: recheck this"
    },
    {
        "line": 392,
        "fullcodeline": "flag_str = R_ASM_GET_NAME (a, 'm', vB);"
    },
    {
        "line": 127,
        "fullcodeline": "((llint)buf[8] << 48) | ((llint)buf[9] << 56);"
    },
    {
        "line": 256,
        "fullcodeline": "sprintf (str, \" v%i, string+%i\", vA, vB);"
    },
    {
        "line": 260,
        "fullcodeline": "} else if (buf[0] == 0x1c || buf[0] == 0x1f || buf[0] == 0x22) {"
    },
    {
        "line": 307,
        "fullcodeline": "sprintf (str, \" v%i, v%i, %s\", vA, vB, flag_str);"
    },
    {
        "line": 342,
        "fullcodeline": "sprintf (str, \" {v%i..v%i}, %s\", vC, vC + vA - 1, flag_str);"
    },
    {
        "line": 387,
        "fullcodeline": "sprintf (str, \", %s ; 0x%x\", flag_str, vB);"
    },
    {
        "line": 261,
        "fullcodeline": "flag_str = R_ASM_GET_NAME (a, 'c', vB);"
    },
    {
        "line": 310,
        "fullcodeline": "sprintf (str, \" v%i, v%i, class+%i\", vA, vB, vC);"
    },
    {
        "line": 315,
        "fullcodeline": "sprintf (str, \" v%i, v%i, %s\", vA, vB, flag_str);"
    },
    {
        "line": 345,
        "fullcodeline": "sprintf (str, \" {v%i..v%i}, class+%i\", vC, vC + vA - 1, vB);"
    },
    {
        "line": 350,
        "fullcodeline": "sprintf (str, \" {v%i..v%i}, %s\", vC, vC + vA - 1, flag_str);"
    },
    {
        "line": 389,
        "fullcodeline": "sprintf (str, \", class+%i\", vB);"
    },
    {
        "line": 394,
        "fullcodeline": "sprintf (str, \", %s ; 0x%x\", flag_str, vB);"
    },
    {
        "line": 126,
        "fullcodeline": "((llint)buf[6] << 32) | ((llint)buf[7] << 40)|"
    },
    {
        "line": 262,
        "fullcodeline": "if (!flag_str) {"
    },
    {
        "line": 268,
        "fullcodeline": "flag_str = R_ASM_GET_NAME (a, 'f', vB);"
    },
    {
        "line": 318,
        "fullcodeline": "sprintf (str, \" v%i, v%i, field+%i\", vA, vB, vC);"
    },
    {
        "line": 353,
        "fullcodeline": "sprintf (str, \" {v%i..v%i}, method+%i\", vC, vC + vA - 1, vB);"
    },
    {
        "line": 396,
        "fullcodeline": "sprintf (str, \", method+%i\", vB);"
    },
    {
        "line": 263,
        "fullcodeline": "sprintf (str, \" v%i, class+%i\", vA, vB);"
    },
    {
        "line": 269,
        "fullcodeline": "if (!flag_str) {"
    },
    {
        "line": 125,
        "fullcodeline": "((llint)buf[4] << 16) | ((llint)buf[5] << 24)|"
    },
    {
        "line": 265,
        "fullcodeline": "sprintf (str, \" v%i, %s\", vA, flag_str);"
    },
    {
        "line": 270,
        "fullcodeline": "sprintf (str, \" v%i, field+%i\", vA, vB);"
    },
    {
        "line": 272,
        "fullcodeline": "sprintf (str, \" v%i, %s\", vA, flag_str);"
    }
]