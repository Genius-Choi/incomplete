[
    {
        "line": 11,
        "fullcodeline": "headers = kwargs.setdefault('headers', {})"
    },
    {
        "line": 12,
        "fullcodeline": "headers.setdefault(\"Sec-Fetch-Mode\", \"cors\")"
    },
    {
        "line": 19,
        "fullcodeline": "url = ujoin(base_url, 'api', *api_path)"
    },
    {
        "line": 27,
        "fullcodeline": "f = getattr(async_requests, method)"
    },
    {
        "line": 31,
        "fullcodeline": "resp = await f(url, **kwargs)"
    },
    {
        "line": 32,
        "fullcodeline": "assert \"frame-ancestors 'none'\" in resp.headers['Content-Security-Policy']"
    },
    {
        "line": 33,
        "fullcodeline": "assert ("
    },
    {
        "line": 37,
        "fullcodeline": "assert 'http' not in resp.headers['Content-Security-Policy']"
    },
    {
        "line": 13,
        "fullcodeline": "if 'Authorization' not in headers and not noauth and 'cookies' not in kwargs:"
    },
    {
        "line": 21,
        "fullcodeline": "if 'cookies' in kwargs:"
    },
    {
        "line": 34,
        "fullcodeline": "ujoin(app.hub.base_url, \"security/csp-report\")"
    },
    {
        "line": 38,
        "fullcodeline": "if not kwargs.get('stream', False) and resp.content:"
    },
    {
        "line": 10,
        "fullcodeline": "base_url = public_url(app, path='hub')"
    },
    {
        "line": 16,
        "fullcodeline": "h.update(headers)"
    },
    {
        "line": 17,
        "fullcodeline": "h.update(auth_header(app.db, kwargs.pop('name', 'admin')))"
    },
    {
        "line": 29,
        "fullcodeline": "kwargs['cert'] = (app.internal_ssl_cert, app.internal_ssl_key)"
    },
    {
        "line": 30,
        "fullcodeline": "kwargs[\"verify\"] = app.internal_ssl_ca"
    },
    {
        "line": 39,
        "fullcodeline": "assert resp.headers.get('content-type') == 'application/json'"
    },
    {
        "line": 15,
        "fullcodeline": "kwargs['headers'] = h = {}"
    },
    {
        "line": 24,
        "fullcodeline": "if \"_xsrf\" in kwargs['cookies'] and not noauth:"
    },
    {
        "line": 25,
        "fullcodeline": "url = url_concat(url, {\"_xsrf\": kwargs['cookies']['_xsrf']})"
    }
]