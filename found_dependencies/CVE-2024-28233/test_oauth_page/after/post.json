[
    {
        "line": 10,
        "fullcodeline": "service_role = create_temp_role(user_scopes)"
    },
    {
        "line": 11,
        "fullcodeline": "service = mockservice_url"
    },
    {
        "line": 12,
        "fullcodeline": "user = create_user_with_scopes(\"access:services\")"
    },
    {
        "line": 13,
        "fullcodeline": "roles.grant_role(app.db, user, service_role)"
    },
    {
        "line": 14,
        "fullcodeline": "oauth_client = ("
    },
    {
        "line": 19,
        "fullcodeline": "oauth_client.allowed_scopes = sorted(roles.roles_to_scopes([service_role]))"
    },
    {
        "line": 22,
        "fullcodeline": "service_url = url_path_join(public_url(app, service), 'owhoami/?arg=x')"
    },
    {
        "line": 23,
        "fullcodeline": "await browser.goto(service_url)"
    },
    {
        "line": 31,
        "fullcodeline": "expected_client_id = f\"service-{service.name}\""
    },
    {
        "line": 34,
        "fullcodeline": "query_params = parse_qs(urlparse(browser.url).query)"
    },
    {
        "line": 35,
        "fullcodeline": "query_params = parse_qs(urlparse(query_params['next'][0]).query)"
    },
    {
        "line": 38,
        "fullcodeline": "assert expected_client_id == query_params['client_id'][0]"
    },
    {
        "line": 39,
        "fullcodeline": "assert expected_redirect_url == query_params['redirect_uri'][0]"
    },
    {
        "line": 42,
        "fullcodeline": "await login(browser, user.name, password=str(user.name))"
    },
    {
        "line": 43,
        "fullcodeline": "auth_btn = browser.locator('//input[@type=\"submit\"]')"
    },
    {
        "line": 45,
        "fullcodeline": "text_permission = browser.get_by_role(\"paragraph\")"
    },
    {
        "line": 51,
        "fullcodeline": "oauth_form = browser.locator('//form')"
    },
    {
        "line": 52,
        "fullcodeline": "scopes_elements = await oauth_form.locator("
    },
    {
        "line": 57,
        "fullcodeline": "scope_list_oauth_page = ["
    },
    {
        "line": 62,
        "fullcodeline": "scope_list_oauth_page = ["
    },
    {
        "line": 66,
        "fullcodeline": "assert all(x in scope_list_oauth_page for x in user_scopes)"
    },
    {
        "line": 67,
        "fullcodeline": "assert f\"access:services!service={service.name}\" in scope_list_oauth_page"
    },
    {
        "line": 70,
        "fullcodeline": "check_boxes = await oauth_form.get_by_role('checkbox', name=\"raw-scopes\").all()"
    },
    {
        "line": 77,
        "fullcodeline": "descriptions = await oauth_form.locator('//span').all()"
    },
    {
        "line": 78,
        "fullcodeline": "desc_list_form = [await description.text_content() for description in descriptions]"
    },
    {
        "line": 79,
        "fullcodeline": "desc_list_form = [\" \".join(desc.split()) for desc in desc_list_form]"
    },
    {
        "line": 82,
        "fullcodeline": "scope_descriptions = scopes.describe_raw_scopes("
    },
    {
        "line": 85,
        "fullcodeline": "desc_list_expected = ["
    },
    {
        "line": 93,
        "fullcodeline": "assert sorted(desc_list_form) == sorted(desc_list_expected)"
    },
    {
        "line": 96,
        "fullcodeline": "await auth_btn.click()"
    },
    {
        "line": 102,
        "fullcodeline": "text = await browser.locator(\"//body\").text_content()"
    },
    {
        "line": 103,
        "fullcodeline": "user_model = json.loads(text)"
    },
    {
        "line": 104,
        "fullcodeline": "authorized_scopes = user_model[\"scopes\"]"
    },
    {
        "line": 107,
        "fullcodeline": "expected_scopes = scopes.expand_scopes(user_scopes, owner=user.orm_user)"
    },
    {
        "line": 108,
        "fullcodeline": "expected_scopes |= scopes.access_scopes(oauth_client)"
    },
    {
        "line": 109,
        "fullcodeline": "expected_scopes |= scopes.identify_scopes(user.orm_user)"
    },
    {
        "line": 112,
        "fullcodeline": "assert sorted(authorized_scopes) == sorted(expected_scopes)"
    },
    {
        "line": 20,
        "fullcodeline": "app.db.commit()"
    },
    {
        "line": 44,
        "fullcodeline": "await expect(auth_btn).to_be_enabled()"
    },
    {
        "line": 46,
        "fullcodeline": "await expect(text_permission).to_contain_text(f\"JupyterHub service {service.name}\")"
    },
    {
        "line": 47,
        "fullcodeline": "await expect(text_permission).to_contain_text(f\"oauth URL: {expected_redirect_url}\")"
    },
    {
        "line": 71,
        "fullcodeline": "for check_box in check_boxes:"
    },
    {
        "line": 98,
        "fullcodeline": "await expect(browser).to_have_url(service_url)"
    },
    {
        "line": 15,
        "fullcodeline": "app.db.query(orm.OAuthClient)"
    },
    {
        "line": 26,
        "fullcodeline": "expected_redirect_url = url_path_join("
    },
    {
        "line": 30,
        "fullcodeline": "expected_redirect_url = url_path_join(service.prefix, \"oauth_callback\")"
    },
    {
        "line": 83,
        "fullcodeline": "user_scopes or ['(no_scope)'], user.name"
    },
    {
        "line": 27,
        "fullcodeline": "public_url(app, service), \"oauth_callback\""
    },
    {
        "line": 72,
        "fullcodeline": "await expect(check_box).not_to_be_editable()"
    },
    {
        "line": 73,
        "fullcodeline": "await expect(check_box).to_be_disabled()"
    },
    {
        "line": 74,
        "fullcodeline": "await expect(check_box).to_have_value(\"title\", \"This authorization is required\")"
    },
    {
        "line": 63,
        "fullcodeline": "await scopes_element.get_attribute(\"value\")"
    },
    {
        "line": 87,
        "fullcodeline": "f\"{sd['description']} Applies to {sd['filter']}.\""
    },
    {
        "line": 58,
        "fullcodeline": "await expect(scopes_element).not_to_be_visible()"
    },
    {
        "line": 88,
        "fullcodeline": "if sd.get('filter')"
    }
]