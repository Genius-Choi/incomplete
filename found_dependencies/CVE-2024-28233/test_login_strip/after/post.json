[
    {
        "line": 3,
        "fullcodeline": "form_data = {\"username\": form_user, \"password\": form_password}"
    },
    {
        "line": 4,
        "fullcodeline": "expected_auth = {\"username\": auth_user, \"password\": form_password}"
    },
    {
        "line": 5,
        "fullcodeline": "called_with = []"
    },
    {
        "line": 7,
        "fullcodeline": "async def mock_authenticate(handler, data):"
    },
    {
        "line": 23,
        "fullcodeline": "assert called_with == [expected_auth]"
    },
    {
        "line": 10,
        "fullcodeline": "with mock.patch.object(app.authenticator, 'authenticate', mock_authenticate):"
    },
    {
        "line": 11,
        "fullcodeline": "r = await get_page('login', app)"
    },
    {
        "line": 12,
        "fullcodeline": "r.raise_for_status()"
    },
    {
        "line": 13,
        "fullcodeline": "cookies = r.cookies"
    },
    {
        "line": 14,
        "fullcodeline": "xsrf = cookies['_xsrf']"
    },
    {
        "line": 15,
        "fullcodeline": "page = BeautifulSoup(r.text, \"html.parser\")"
    },
    {
        "line": 16,
        "fullcodeline": "action_url = public_host(app) + page.find(\"form\")[\"action\"]"
    },
    {
        "line": 17,
        "fullcodeline": "xsrf_input = page.find(\"form\").find(\"input\", attrs={\"name\": \"_xsrf\"})"
    },
    {
        "line": 18,
        "fullcodeline": "form_data[\"_xsrf\"] = xsrf_input[\"value\"]"
    },
    {
        "line": 19,
        "fullcodeline": "await async_requests.post("
    }
]