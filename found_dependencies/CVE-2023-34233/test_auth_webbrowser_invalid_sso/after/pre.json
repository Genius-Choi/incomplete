[
    {
        "line": 3,
        "fullcodeline": "rest = _init_rest(INVALID_SSO_URL, REF_PROOF_KEY)"
    },
    {
        "line": 6,
        "fullcodeline": "mock_webbrowser = MagicMock()"
    },
    {
        "line": 7,
        "fullcodeline": "mock_webbrowser.open_new.return_value = False"
    },
    {
        "line": 10,
        "fullcodeline": "mock_socket_instance = MagicMock()"
    },
    {
        "line": 11,
        "fullcodeline": "mock_socket_instance.getsockname.return_value = [None, 12345]"
    },
    {
        "line": 13,
        "fullcodeline": "mock_socket_client = MagicMock()"
    },
    {
        "line": 14,
        "fullcodeline": "mock_socket_client.recv.return_value = ("
    },
    {
        "line": 17,
        "fullcodeline": "mock_socket_instance.accept.return_value = (mock_socket_client, None)"
    },
    {
        "line": 18,
        "fullcodeline": "mock_socket = Mock(return_value=mock_socket_instance)"
    },
    {
        "line": 20,
        "fullcodeline": "auth = AuthByWebBrowser("
    },
    {
        "line": 25,
        "fullcodeline": "auth.prepare("
    },
    {
        "line": 33,
        "fullcodeline": "assert rest._connection.errorhandler.called  # an error"
    },
    {
        "line": 34,
        "fullcodeline": "assert auth.assertion_content is None"
    },
    {
        "line": 15,
        "fullcodeline": "\"\\r\\n\".join([\"GET /?token=MOCK_TOKEN HTTP/1.1\", \"User-Agent: snowflake-agent\"])"
    }
]