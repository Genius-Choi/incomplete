[
    {
        "line": 5,
        "fullcodeline": "content_type = ContentType.objects.get_for_model(obj)"
    },
    {
        "line": 6,
        "fullcodeline": "links = CustomLink.objects.filter(content_type=content_type)"
    },
    {
        "line": 11,
        "fullcodeline": "link_context = {"
    },
    {
        "line": 18,
        "fullcodeline": "template_code = \"\""
    },
    {
        "line": 19,
        "fullcodeline": "group_names = OrderedDict()"
    },
    {
        "line": 7,
        "fullcodeline": "if not links:"
    },
    {
        "line": 21,
        "fullcodeline": "for cl in links:"
    },
    {
        "line": 43,
        "fullcodeline": "for group, links in group_names.items():"
    },
    {
        "line": 62,
        "fullcodeline": "return mark_safe(template_code)"
    },
    {
        "line": 13,
        "fullcodeline": "\"debug\": context.get(\"debug\", False),  # django.template.context_processors.debug"
    },
    {
        "line": 44,
        "fullcodeline": "links_rendered = []"
    },
    {
        "line": 23,
        "fullcodeline": "if cl.group_name and cl.group_name in group_names:"
    },
    {
        "line": 46,
        "fullcodeline": "for cl in links:"
    },
    {
        "line": 60,
        "fullcodeline": "template_code += GROUP_BUTTON.format(links[0].button_class, group, \"\".join(links_rendered))"
    },
    {
        "line": 24,
        "fullcodeline": "group_names[cl.group_name].append(cl)"
    },
    {
        "line": 26,
        "fullcodeline": "group_names[cl.group_name] = [cl]"
    },
    {
        "line": 48,
        "fullcodeline": "text_rendered = render_jinja2(cl.text, link_context)"
    },
    {
        "line": 31,
        "fullcodeline": "text_rendered = render_jinja2(cl.text, link_context)"
    },
    {
        "line": 50,
        "fullcodeline": "link_target = ' target=\"_blank\"' if cl.new_window else \"\""
    },
    {
        "line": 51,
        "fullcodeline": "link_rendered = render_jinja2(cl.target_url, link_context)"
    },
    {
        "line": 52,
        "fullcodeline": "links_rendered.append(GROUP_LINK.format(link_rendered, link_target, text_rendered))"
    },
    {
        "line": 54,
        "fullcodeline": "links_rendered.append("
    },
    {
        "line": 33,
        "fullcodeline": "link_rendered = render_jinja2(cl.target_url, link_context)"
    },
    {
        "line": 34,
        "fullcodeline": "link_target = ' target=\"_blank\"' if cl.new_window else \"\""
    },
    {
        "line": 35,
        "fullcodeline": "template_code += LINK_BUTTON.format(link_rendered, link_target, cl.button_class, text_rendered)"
    },
    {
        "line": 37,
        "fullcodeline": "template_code += ("
    },
    {
        "line": 55,
        "fullcodeline": "f'<li><a disabled=\"disabled\" title=\"{e}\"><span class=\"text-muted\">'"
    },
    {
        "line": 38,
        "fullcodeline": "f'<a class=\"btn btn-sm btn-default\" disabled=\"disabled\" title=\"{e}\">'"
    },
    {
        "line": 56,
        "fullcodeline": "f'<i class=\"mdi mdi-alert\"></i> {cl.name}</span></a></li>'"
    },
    {
        "line": 39,
        "fullcodeline": "f'<i class=\"mdi mdi-alert\"></i> {cl.name}</a>\\n'"
    }
]