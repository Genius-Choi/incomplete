[
    {
        "line": 6,
        "fullcodeline": "context = {"
    },
    {
        "line": 15,
        "fullcodeline": "template_extensions = registry[\"plugin_template_extensions\"].get(model_name, [])"
    },
    {
        "line": 16,
        "fullcodeline": "objects = []"
    },
    {
        "line": 17,
        "fullcodeline": "html = \"\""
    },
    {
        "line": 18,
        "fullcodeline": "for template_extension in template_extensions:"
    },
    {
        "line": 37,
        "fullcodeline": "if not return_html:"
    },
    {
        "line": 40,
        "fullcodeline": "return mark_safe(html)"
    },
    {
        "line": 25,
        "fullcodeline": "plugin_name = template_extension.__module__.split(\".\")[0]"
    },
    {
        "line": 26,
        "fullcodeline": "context[\"config\"] = settings.PLUGINS_CONFIG.get(plugin_name, {})"
    },
    {
        "line": 29,
        "fullcodeline": "instance = template_extension(context)"
    },
    {
        "line": 30,
        "fullcodeline": "content = getattr(instance, method)()"
    },
    {
        "line": 21,
        "fullcodeline": "if getattr(template_extension, method) == getattr(TemplateExtension, method):"
    },
    {
        "line": 31,
        "fullcodeline": "if not return_html:"
    },
    {
        "line": 35,
        "fullcodeline": "html += content"
    },
    {
        "line": 32,
        "fullcodeline": "for i, content in enumerate(content):"
    },
    {
        "line": 33,
        "fullcodeline": "objects.append({f\"{plugin_name}:{i+1}\": content})"
    }
]