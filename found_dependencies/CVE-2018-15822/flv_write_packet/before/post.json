[
    {
        "line": 3,
        "fullcodeline": "AVIOContext *pb      = s->pb;"
    },
    {
        "line": 5,
        "fullcodeline": "FLVContext *flv      = s->priv_data;"
    },
    {
        "line": 8,
        "fullcodeline": "int size = pkt->size;"
    },
    {
        "line": 9,
        "fullcodeline": "uint8_t *data = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "int flags = -1, flags_size, ret;"
    },
    {
        "line": 11,
        "fullcodeline": "int64_t cur_offset = avio_tell(pb);"
    },
    {
        "line": 47,
        "fullcodeline": "ts = pkt->dts;"
    },
    {
        "line": 54,
        "fullcodeline": "avio_write_marker(pb, av_rescale(ts, AV_TIME_BASE, 1000),"
    },
    {
        "line": 111,
        "fullcodeline": "avio_wb24(pb, size + flags_size);"
    },
    {
        "line": 112,
        "fullcodeline": "put_timestamp(pb, ts);"
    },
    {
        "line": 113,
        "fullcodeline": "avio_wb24(pb, flv->reserved);"
    },
    {
        "line": 194,
        "fullcodeline": "av_free(data);"
    },
    {
        "line": 13,
        "fullcodeline": "if (par->codec_id == AV_CODEC_ID_VP6F || par->codec_id == AV_CODEC_ID_VP6A ||"
    },
    {
        "line": 21,
        "fullcodeline": "if (par->codec_id == AV_CODEC_ID_AAC || par->codec_id == AV_CODEC_ID_H264"
    },
    {
        "line": 38,
        "fullcodeline": "if (flv->delay == AV_NOPTS_VALUE)"
    },
    {
        "line": 41,
        "fullcodeline": "if (pkt->dts < -flv->delay) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (s->event_flags & AVSTREAM_EVENT_FLAG_METADATA_UPDATED) {"
    },
    {
        "line": 55,
        "fullcodeline": "pkt->flags & AV_PKT_FLAG_KEY && (flv->video_par ? par->codec_type == AVMEDIA_TYPE_VIDEO : 1) ? AVIO_DATA_MARKER_SYNC_POINT : AVIO_DATA_MARKER_BOUNDARY_POINT);"
    },
    {
        "line": 80,
        "fullcodeline": "if (par->codec_id == AV_CODEC_ID_H264 || par->codec_id == AV_CODEC_ID_MPEG4) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (par->codec_id == AV_CODEC_ID_SPEEX && ts - sc->last_ts > 160)"
    },
    {
        "line": 102,
        "fullcodeline": "if (sc->last_ts < ts)"
    },
    {
        "line": 105,
        "fullcodeline": "if (size + flags_size >= 1<<24) {"
    },
    {
        "line": 115,
        "fullcodeline": "if (par->codec_type == AVMEDIA_TYPE_DATA ||"
    },
    {
        "line": 168,
        "fullcodeline": "if (flv->flags & FLV_ADD_KEYFRAME_INDEX) {"
    },
    {
        "line": 14,
        "fullcodeline": "par->codec_id == AV_CODEC_ID_VP6  || par->codec_id == AV_CODEC_ID_AAC)"
    },
    {
        "line": 15,
        "fullcodeline": "flags_size = 2;"
    },
    {
        "line": 22,
        "fullcodeline": "|| par->codec_id == AV_CODEC_ID_MPEG4) {"
    },
    {
        "line": 23,
        "fullcodeline": "int side_size = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "uint8_t *side = av_packet_get_side_data(pkt, AV_PKT_DATA_NEW_EXTRADATA, &side_size);"
    },
    {
        "line": 39,
        "fullcodeline": "flv->delay = -pkt->dts;"
    },
    {
        "line": 42,
        "fullcodeline": "av_log(s, AV_LOG_WARNING,"
    },
    {
        "line": 50,
        "fullcodeline": "write_metadata(s, ts);"
    },
    {
        "line": 51,
        "fullcodeline": "s->event_flags &= ~AVSTREAM_EVENT_FLAG_METADATA_UPDATED;"
    },
    {
        "line": 59,
        "fullcodeline": "avio_w8(pb, FLV_TAG_TYPE_VIDEO);"
    },
    {
        "line": 61,
        "fullcodeline": "flags = ff_codec_get_tag(flv_video_codec_ids, par->codec_id);"
    },
    {
        "line": 63,
        "fullcodeline": "flags |= pkt->flags & AV_PKT_FLAG_KEY ? FLV_FRAME_KEY : FLV_FRAME_INTER;"
    },
    {
        "line": 66,
        "fullcodeline": "flags = get_audio_flags(s, par);"
    },
    {
        "line": 68,
        "fullcodeline": "av_assert0(size);"
    },
    {
        "line": 70,
        "fullcodeline": "avio_w8(pb, FLV_TAG_TYPE_AUDIO);"
    },
    {
        "line": 74,
        "fullcodeline": "avio_w8(pb, FLV_TAG_TYPE_META);"
    },
    {
        "line": 98,
        "fullcodeline": "av_log(s, AV_LOG_WARNING, \"Warning: Speex stream has more than \""
    },
    {
        "line": 103,
        "fullcodeline": "sc->last_ts = ts;"
    },
    {
        "line": 106,
        "fullcodeline": "av_log(s, AV_LOG_ERROR, \"Too large packet with size %u >= %u\\n\","
    },
    {
        "line": 116,
        "fullcodeline": "par->codec_type == AVMEDIA_TYPE_SUBTITLE ) {"
    },
    {
        "line": 118,
        "fullcodeline": "int64_t metadata_size_pos = avio_tell(pb);"
    },
    {
        "line": 138,
        "fullcodeline": "data_size = avio_tell(pb) - metadata_size_pos;"
    },
    {
        "line": 139,
        "fullcodeline": "avio_seek(pb, metadata_size_pos - 10, SEEK_SET);"
    },
    {
        "line": 140,
        "fullcodeline": "avio_wb24(pb, data_size);"
    },
    {
        "line": 141,
        "fullcodeline": "avio_seek(pb, data_size + 10 - 3, SEEK_CUR);"
    },
    {
        "line": 142,
        "fullcodeline": "avio_wb32(pb, data_size + 11);"
    },
    {
        "line": 25,
        "fullcodeline": "if (side && side_size > 0 && (side_size != par->extradata_size || memcmp(side, par->extradata, side_size))) {"
    },
    {
        "line": 44,
        "fullcodeline": "return AVERROR(EINVAL);"
    },
    {
        "line": 77,
        "fullcodeline": "return AVERROR(EINVAL);"
    },
    {
        "line": 82,
        "fullcodeline": "if (par->extradata_size > 0 && *(uint8_t*)par->extradata != 1)"
    },
    {
        "line": 107,
        "fullcodeline": "size + flags_size, 1<<24);"
    },
    {
        "line": 108,
        "fullcodeline": "return AVERROR(EINVAL);"
    },
    {
        "line": 119,
        "fullcodeline": "if (par->codec_id == AV_CODEC_ID_TEXT) {"
    },
    {
        "line": 144,
        "fullcodeline": "av_assert1(flags>=0);"
    },
    {
        "line": 145,
        "fullcodeline": "avio_w8(pb,flags);"
    },
    {
        "line": 161,
        "fullcodeline": "avio_write(pb, data ? data : pkt->data, size);"
    },
    {
        "line": 163,
        "fullcodeline": "avio_wb32(pb, size + flags_size + 11); // previous tag size"
    },
    {
        "line": 164,
        "fullcodeline": "flv->duration = FFMAX(flv->duration,"
    },
    {
        "line": 16,
        "fullcodeline": "else if (par->codec_id == AV_CODEC_ID_H264 || par->codec_id == AV_CODEC_ID_MPEG4)"
    },
    {
        "line": 26,
        "fullcodeline": "av_free(par->extradata);"
    },
    {
        "line": 27,
        "fullcodeline": "par->extradata = av_mallocz(side_size + AV_INPUT_BUFFER_PADDING_SIZE);"
    },
    {
        "line": 32,
        "fullcodeline": "memcpy(par->extradata, side, side_size);"
    },
    {
        "line": 33,
        "fullcodeline": "par->extradata_size = side_size;"
    },
    {
        "line": 34,
        "fullcodeline": "flv_write_codec_header(s, par, pkt->dts);"
    },
    {
        "line": 85,
        "fullcodeline": "} else if (par->codec_id == AV_CODEC_ID_AAC && pkt->size > 2 &&"
    },
    {
        "line": 121,
        "fullcodeline": "avio_w8(pb, AMF_DATA_TYPE_STRING);"
    },
    {
        "line": 122,
        "fullcodeline": "put_amf_string(pb, \"onTextData\");"
    },
    {
        "line": 123,
        "fullcodeline": "avio_w8(pb, AMF_DATA_TYPE_MIXEDARRAY);"
    },
    {
        "line": 124,
        "fullcodeline": "avio_wb32(pb, 2);"
    },
    {
        "line": 125,
        "fullcodeline": "put_amf_string(pb, \"type\");"
    },
    {
        "line": 126,
        "fullcodeline": "avio_w8(pb, AMF_DATA_TYPE_STRING);"
    },
    {
        "line": 127,
        "fullcodeline": "put_amf_string(pb, \"Text\");"
    },
    {
        "line": 128,
        "fullcodeline": "put_amf_string(pb, \"text\");"
    },
    {
        "line": 129,
        "fullcodeline": "avio_w8(pb, AMF_DATA_TYPE_STRING);"
    },
    {
        "line": 130,
        "fullcodeline": "put_amf_string(pb, pkt->data);"
    },
    {
        "line": 131,
        "fullcodeline": "put_amf_string(pb, \"\");"
    },
    {
        "line": 132,
        "fullcodeline": "avio_w8(pb, AMF_END_OF_OBJECT);"
    },
    {
        "line": 146,
        "fullcodeline": "if (par->codec_id == AV_CODEC_ID_VP6)"
    },
    {
        "line": 148,
        "fullcodeline": "if (par->codec_id == AV_CODEC_ID_VP6F || par->codec_id == AV_CODEC_ID_VP6A) {"
    },
    {
        "line": 171,
        "fullcodeline": "flv->videosize += (avio_tell(pb) - cur_offset);"
    },
    {
        "line": 172,
        "fullcodeline": "flv->lasttimestamp = flv->acurframeindex / flv->framerate;"
    },
    {
        "line": 181,
        "fullcodeline": "flv->acurframeindex++;"
    },
    {
        "line": 185,
        "fullcodeline": "flv->audiosize += (avio_tell(pb) - cur_offset);"
    },
    {
        "line": 189,
        "fullcodeline": "av_log(s, AV_LOG_WARNING, \"par->codec_type is type = [%d]\\n\", par->codec_type);"
    },
    {
        "line": 17,
        "fullcodeline": "flags_size = 5;"
    },
    {
        "line": 28,
        "fullcodeline": "if (!par->extradata) {"
    },
    {
        "line": 83,
        "fullcodeline": "if ((ret = ff_avc_parse_nal_units_buf(pkt->data, &data, &size)) < 0)"
    },
    {
        "line": 86,
        "fullcodeline": "(AV_RB16(pkt->data) & 0xfff0) == 0xfff0) {"
    },
    {
        "line": 93,
        "fullcodeline": "av_log(s, AV_LOG_WARNING, \"aac bitstream error\\n\");"
    },
    {
        "line": 135,
        "fullcodeline": "avio_write(pb, data ? data : pkt->data, size);"
    },
    {
        "line": 147,
        "fullcodeline": "avio_w8(pb,0);"
    },
    {
        "line": 165,
        "fullcodeline": "pkt->pts + flv->delay + pkt->duration);"
    },
    {
        "line": 173,
        "fullcodeline": "if (pkt->flags & AV_PKT_FLAG_KEY) {"
    },
    {
        "line": 19,
        "fullcodeline": "flags_size = 1;"
    },
    {
        "line": 29,
        "fullcodeline": "par->extradata_size = 0;"
    },
    {
        "line": 174,
        "fullcodeline": "double ts = flv->acurframeindex / flv->framerate;"
    },
    {
        "line": 175,
        "fullcodeline": "int64_t pos = cur_offset;"
    },
    {
        "line": 177,
        "fullcodeline": "flv->lastkeyframetimestamp = flv->acurframeindex / flv->framerate;"
    },
    {
        "line": 178,
        "fullcodeline": "flv->lastkeyframelocation = pos;"
    },
    {
        "line": 179,
        "fullcodeline": "flv_append_keyframe_info(s, flv, ts, pos);"
    },
    {
        "line": 30,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 88,
        "fullcodeline": "av_log(s, AV_LOG_ERROR, \"Malformed AAC bitstream detected: \""
    },
    {
        "line": 150,
        "fullcodeline": "avio_w8(pb, par->extradata[0]);"
    },
    {
        "line": 154,
        "fullcodeline": "} else if (par->codec_id == AV_CODEC_ID_AAC)"
    },
    {
        "line": 152,
        "fullcodeline": "avio_w8(pb, ((FFALIGN(par->width,  16) - par->width) << 4) |"
    },
    {
        "line": 155,
        "fullcodeline": "avio_w8(pb, 1); // AAC raw"
    },
    {
        "line": 153,
        "fullcodeline": "(FFALIGN(par->height, 16) - par->height));"
    },
    {
        "line": 156,
        "fullcodeline": "else if (par->codec_id == AV_CODEC_ID_H264 || par->codec_id == AV_CODEC_ID_MPEG4) {"
    },
    {
        "line": 157,
        "fullcodeline": "avio_w8(pb, 1); // AVC NALU"
    },
    {
        "line": 158,
        "fullcodeline": "avio_wb24(pb, pkt->pts - pkt->dts);"
    }
]