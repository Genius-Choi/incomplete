[
    {
        "line": 4,
        "fullcodeline": "struct json_object *obj = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "char c = '\\1';"
    },
    {
        "line": 14,
        "fullcodeline": "tok->char_offset = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "tok->err = json_tokener_success;"
    },
    {
        "line": 650,
        "fullcodeline": "MC_DEBUG(\"json_tokener_parse_ex: error %s at offset %d\\n\","
    },
    {
        "line": 22,
        "fullcodeline": "if ((len < -1) || (len == -1 && strlen(str) > INT32_MAX)) {"
    },
    {
        "line": 27,
        "fullcodeline": "while (PEEK_CHAR(c, tok)) {"
    },
    {
        "line": 621,
        "fullcodeline": "if (c &&"
    },
    {
        "line": 628,
        "fullcodeline": "if (!c) { /* We hit an eof char (0) */"
    },
    {
        "line": 639,
        "fullcodeline": "if (tok->err == json_tokener_success)"
    },
    {
        "line": 23,
        "fullcodeline": "tok->err = json_tokener_error_size;"
    },
    {
        "line": 624,
        "fullcodeline": "(tok->flags & JSON_TOKENER_STRICT)) {"
    },
    {
        "line": 626,
        "fullcodeline": "tok->err = json_tokener_error_parse_unexpected;"
    },
    {
        "line": 641,
        "fullcodeline": "json_object *ret = json_object_get(current);"
    },
    {
        "line": 616,
        "fullcodeline": "if (!ADVANCE_CHAR(str, tok))"
    },
    {
        "line": 623,
        "fullcodeline": "(tok->depth == 0) &&"
    },
    {
        "line": 629,
        "fullcodeline": "if(state != json_tokener_state_finish &&"
    },
    {
        "line": 645,
        "fullcodeline": "for(ii = tok->depth; ii >= 0; ii--)"
    },
    {
        "line": 646,
        "fullcodeline": "json_tokener_reset_level(tok, ii);"
    },
    {
        "line": 118,
        "fullcodeline": "obj = json_object_get(current);"
    },
    {
        "line": 119,
        "fullcodeline": "json_tokener_reset_level(tok, tok->depth);"
    },
    {
        "line": 120,
        "fullcodeline": "tok->depth--;"
    },
    {
        "line": 204,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, &c, 1);"
    },
    {
        "line": 239,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, &c, 1);"
    },
    {
        "line": 510,
        "fullcodeline": "json_object_array_add(current, obj);"
    },
    {
        "line": 511,
        "fullcodeline": "saved_state = json_tokener_state_array_sep;"
    },
    {
        "line": 512,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 589,
        "fullcodeline": "state = json_tokener_state_object_value_add;"
    },
    {
        "line": 590,
        "fullcodeline": "tok->depth++;"
    },
    {
        "line": 591,
        "fullcodeline": "json_tokener_reset_level(tok, tok->depth);"
    },
    {
        "line": 595,
        "fullcodeline": "json_object_object_add(current, obj_field_name, obj);"
    },
    {
        "line": 596,
        "fullcodeline": "free(obj_field_name);"
    },
    {
        "line": 597,
        "fullcodeline": "obj_field_name = NULL;"
    },
    {
        "line": 598,
        "fullcodeline": "saved_state = json_tokener_state_object_sep;"
    },
    {
        "line": 599,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 622,
        "fullcodeline": "(state == json_tokener_state_finish) &&"
    },
    {
        "line": 630,
        "fullcodeline": "saved_state != json_tokener_state_finish)"
    },
    {
        "line": 631,
        "fullcodeline": "tok->err = json_tokener_error_parse_eof;"
    },
    {
        "line": 34,
        "fullcodeline": "while (isspace((int)c)) {"
    },
    {
        "line": 38,
        "fullcodeline": "if(c == '/' && !(tok->flags & JSON_TOKENER_STRICT)) {"
    },
    {
        "line": 117,
        "fullcodeline": "if(tok->depth == 0) goto out;"
    },
    {
        "line": 127,
        "fullcodeline": "int is_negative = 0;"
    },
    {
        "line": 129,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, &c, 1);"
    },
    {
        "line": 130,
        "fullcodeline": "size = json_min(tok->st_pos+1, json_null_str_len);"
    },
    {
        "line": 131,
        "fullcodeline": "size_inf = json_min(tok->st_pos+1, json_inf_str_len);"
    },
    {
        "line": 132,
        "fullcodeline": "char *infbuf = tok->pb->buf;"
    },
    {
        "line": 154,
        "fullcodeline": "tok->st_pos++;"
    },
    {
        "line": 161,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, &c, 1);"
    },
    {
        "line": 162,
        "fullcodeline": "size = json_min(tok->st_pos+1, json_null_str_len);"
    },
    {
        "line": 163,
        "fullcodeline": "size_nan = json_min(tok->st_pos+1, json_nan_str_len);"
    },
    {
        "line": 191,
        "fullcodeline": "tok->st_pos++;"
    },
    {
        "line": 196,
        "fullcodeline": "if(c == '*') {"
    },
    {
        "line": 210,
        "fullcodeline": "const char *case_start = str;"
    },
    {
        "line": 217,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, 1+str-case_start);"
    },
    {
        "line": 218,
        "fullcodeline": "state = json_tokener_state_comment_end;"
    },
    {
        "line": 225,
        "fullcodeline": "const char *case_start = str;"
    },
    {
        "line": 232,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, str-case_start);"
    },
    {
        "line": 233,
        "fullcodeline": "MC_DEBUG(\"json_tokener_comment: %s\\n\", tok->pb->buf);"
    },
    {
        "line": 234,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 240,
        "fullcodeline": "if(c == '/') {"
    },
    {
        "line": 251,
        "fullcodeline": "const char *case_start = str;"
    },
    {
        "line": 306,
        "fullcodeline": "unsigned int got_hi_surrogate = 0;"
    },
    {
        "line": 407,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, &c, 1);"
    },
    {
        "line": 408,
        "fullcodeline": "size1 = json_min(tok->st_pos+1, json_true_str_len);"
    },
    {
        "line": 409,
        "fullcodeline": "size2 = json_min(tok->st_pos+1, json_false_str_len);"
    },
    {
        "line": 433,
        "fullcodeline": "tok->st_pos++;"
    },
    {
        "line": 440,
        "fullcodeline": "const char *case_start = str;"
    },
    {
        "line": 441,
        "fullcodeline": "int case_len=0;"
    },
    {
        "line": 480,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 481,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 488,
        "fullcodeline": "if(c == ']') {"
    },
    {
        "line": 516,
        "fullcodeline": "if(c == ']') {"
    },
    {
        "line": 530,
        "fullcodeline": "if(c == '}') {"
    },
    {
        "line": 552,
        "fullcodeline": "const char *case_start = str;"
    },
    {
        "line": 575,
        "fullcodeline": "if(c == ':') {"
    },
    {
        "line": 585,
        "fullcodeline": "if(tok->depth >= tok->max_depth-1) {"
    },
    {
        "line": 603,
        "fullcodeline": "if(c == '}') {"
    },
    {
        "line": 39,
        "fullcodeline": "printbuf_reset(tok->pb);"
    },
    {
        "line": 40,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, &c, 1);"
    },
    {
        "line": 41,
        "fullcodeline": "state = json_tokener_state_comment_start;"
    },
    {
        "line": 51,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 52,
        "fullcodeline": "saved_state = json_tokener_state_object_field_start;"
    },
    {
        "line": 53,
        "fullcodeline": "current = json_object_new_object();"
    },
    {
        "line": 56,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 57,
        "fullcodeline": "saved_state = json_tokener_state_array;"
    },
    {
        "line": 58,
        "fullcodeline": "current = json_object_new_array();"
    },
    {
        "line": 62,
        "fullcodeline": "state = json_tokener_state_inf;"
    },
    {
        "line": 63,
        "fullcodeline": "printbuf_reset(tok->pb);"
    },
    {
        "line": 64,
        "fullcodeline": "tok->st_pos = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "state = json_tokener_state_null; // or NaN"
    },
    {
        "line": 69,
        "fullcodeline": "printbuf_reset(tok->pb);"
    },
    {
        "line": 70,
        "fullcodeline": "tok->st_pos = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "state = json_tokener_state_string;"
    },
    {
        "line": 80,
        "fullcodeline": "printbuf_reset(tok->pb);"
    },
    {
        "line": 81,
        "fullcodeline": "tok->quote_char = c;"
    },
    {
        "line": 87,
        "fullcodeline": "state = json_tokener_state_boolean;"
    },
    {
        "line": 88,
        "fullcodeline": "printbuf_reset(tok->pb);"
    },
    {
        "line": 89,
        "fullcodeline": "tok->st_pos = 0;"
    },
    {
        "line": 106,
        "fullcodeline": "state = json_tokener_state_number;"
    },
    {
        "line": 107,
        "fullcodeline": "printbuf_reset(tok->pb);"
    },
    {
        "line": 108,
        "fullcodeline": "tok->is_double = 0;"
    },
    {
        "line": 111,
        "fullcodeline": "tok->err = json_tokener_error_parse_unexpected;"
    },
    {
        "line": 133,
        "fullcodeline": "if (*infbuf == '-')"
    },
    {
        "line": 138,
        "fullcodeline": "if ((!(tok->flags & JSON_TOKENER_STRICT) &&"
    },
    {
        "line": 164,
        "fullcodeline": "if((!(tok->flags & JSON_TOKENER_STRICT) &&"
    },
    {
        "line": 197,
        "fullcodeline": "state = json_tokener_state_comment;"
    },
    {
        "line": 211,
        "fullcodeline": "while(c != '*') {"
    },
    {
        "line": 226,
        "fullcodeline": "while(c != '\\n') {"
    },
    {
        "line": 241,
        "fullcodeline": "MC_DEBUG(\"json_tokener_comment: %s\\n\", tok->pb->buf);"
    },
    {
        "line": 242,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 278,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, &c, 1);"
    },
    {
        "line": 279,
        "fullcodeline": "state = saved_state;"
    },
    {
        "line": 291,
        "fullcodeline": "state = saved_state;"
    },
    {
        "line": 294,
        "fullcodeline": "tok->ucs_char = 0;"
    },
    {
        "line": 295,
        "fullcodeline": "tok->st_pos = 0;"
    },
    {
        "line": 296,
        "fullcodeline": "state = json_tokener_state_escape_unicode;"
    },
    {
        "line": 299,
        "fullcodeline": "tok->err = json_tokener_error_parse_string;"
    },
    {
        "line": 410,
        "fullcodeline": "if((!(tok->flags & JSON_TOKENER_STRICT) &&"
    },
    {
        "line": 442,
        "fullcodeline": "while(c && strchr(json_number_chars, c)) {"
    },
    {
        "line": 451,
        "fullcodeline": "if (case_len>0)"
    },
    {
        "line": 455,
        "fullcodeline": "if (tok->pb->buf[0] == '-' && case_len == 1 &&"
    },
    {
        "line": 465,
        "fullcodeline": "if (!tok->is_double && json_parse_int64(tok->pb->buf, &num64) == 0) {"
    },
    {
        "line": 495,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 496,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 517,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 518,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 537,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 538,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 576,
        "fullcodeline": "saved_state = json_tokener_state_object_value;"
    },
    {
        "line": 577,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 586,
        "fullcodeline": "tok->err = json_tokener_error_depth;"
    },
    {
        "line": 604,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 605,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 35,
        "fullcodeline": "if ((!ADVANCE_CHAR(str, tok)) || (!PEEK_CHAR(c, tok)))"
    },
    {
        "line": 43,
        "fullcodeline": "state = saved_state;"
    },
    {
        "line": 73,
        "fullcodeline": "if (tok->flags & JSON_TOKENER_STRICT) {"
    },
    {
        "line": 135,
        "fullcodeline": "infbuf++;"
    },
    {
        "line": 136,
        "fullcodeline": "is_negative = 1;"
    },
    {
        "line": 140,
        "fullcodeline": "(strncmp(json_inf_str, infbuf, size_inf) == 0)"
    },
    {
        "line": 166,
        "fullcodeline": "|| (strncmp(json_null_str, tok->pb->buf, size) == 0)"
    },
    {
        "line": 244,
        "fullcodeline": "state = json_tokener_state_comment;"
    },
    {
        "line": 286,
        "fullcodeline": "if(c == 'b') printbuf_memappend_fast(tok->pb, \"\\b\", 1);"
    },
    {
        "line": 412,
        "fullcodeline": "|| (strncmp(json_true_str, tok->pb->buf, size1) == 0)"
    },
    {
        "line": 443,
        "fullcodeline": "++case_len;"
    },
    {
        "line": 452,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, case_len);"
    },
    {
        "line": 456,
        "fullcodeline": "(c == 'i' || c == 'I'))"
    },
    {
        "line": 458,
        "fullcodeline": "state = json_tokener_state_inf;"
    },
    {
        "line": 471,
        "fullcodeline": "current = json_object_new_int64(num64);"
    },
    {
        "line": 489,
        "fullcodeline": "if (state == json_tokener_state_array_after_sep &&"
    },
    {
        "line": 502,
        "fullcodeline": "state = json_tokener_state_array_add;"
    },
    {
        "line": 503,
        "fullcodeline": "tok->depth++;"
    },
    {
        "line": 504,
        "fullcodeline": "json_tokener_reset_level(tok, tok->depth);"
    },
    {
        "line": 531,
        "fullcodeline": "if (state == json_tokener_state_object_field_start_after_sep &&"
    },
    {
        "line": 579,
        "fullcodeline": "tok->err = json_tokener_error_parse_object_key_sep;"
    },
    {
        "line": 75,
        "fullcodeline": "tok->err = json_tokener_error_parse_unexpected;"
    },
    {
        "line": 139,
        "fullcodeline": "strncasecmp(json_inf_str, infbuf, size_inf) == 0) ||"
    },
    {
        "line": 143,
        "fullcodeline": "if (tok->st_pos == json_inf_str_len)"
    },
    {
        "line": 151,
        "fullcodeline": "tok->err = json_tokener_error_parse_unexpected;"
    },
    {
        "line": 165,
        "fullcodeline": "strncasecmp(json_null_str, tok->pb->buf, size) == 0)"
    },
    {
        "line": 168,
        "fullcodeline": "if (tok->st_pos == json_null_str_len) {"
    },
    {
        "line": 198,
        "fullcodeline": "} else if(c == '/') {"
    },
    {
        "line": 212,
        "fullcodeline": "if (!ADVANCE_CHAR(str, tok) || !PEEK_CHAR(c, tok)) {"
    },
    {
        "line": 227,
        "fullcodeline": "if (!ADVANCE_CHAR(str, tok) || !PEEK_CHAR(c, tok)) {"
    },
    {
        "line": 253,
        "fullcodeline": "if(c == tok->quote_char) {"
    },
    {
        "line": 265,
        "fullcodeline": "if (!ADVANCE_CHAR(str, tok) || !PEEK_CHAR(c, tok)) {"
    },
    {
        "line": 310,
        "fullcodeline": "if(strchr(json_hex_chars, c)) {"
    },
    {
        "line": 395,
        "fullcodeline": "if (!ADVANCE_CHAR(str, tok) || !PEEK_CHAR(c, tok)) {"
    },
    {
        "line": 411,
        "fullcodeline": "strncasecmp(json_true_str, tok->pb->buf, size1) == 0)"
    },
    {
        "line": 414,
        "fullcodeline": "if(tok->st_pos == json_true_str_len) {"
    },
    {
        "line": 444,
        "fullcodeline": "if(c == '.' || c == 'e' || c == 'E')"
    },
    {
        "line": 446,
        "fullcodeline": "if (!ADVANCE_CHAR(str, tok) || !PEEK_CHAR(c, tok)) {"
    },
    {
        "line": 466,
        "fullcodeline": "if (num64 && tok->pb->buf[0]=='0' && (tok->flags & JSON_TOKENER_STRICT)) {"
    },
    {
        "line": 490,
        "fullcodeline": "(tok->flags & JSON_TOKENER_STRICT))"
    },
    {
        "line": 492,
        "fullcodeline": "tok->err = json_tokener_error_parse_unexpected;"
    },
    {
        "line": 498,
        "fullcodeline": "if(tok->depth >= tok->max_depth-1) {"
    },
    {
        "line": 519,
        "fullcodeline": "} else if(c == ',') {"
    },
    {
        "line": 532,
        "fullcodeline": "(tok->flags & JSON_TOKENER_STRICT))"
    },
    {
        "line": 534,
        "fullcodeline": "tok->err = json_tokener_error_parse_unexpected;"
    },
    {
        "line": 539,
        "fullcodeline": "} else if (c == '\"' || c == '\\'') {"
    },
    {
        "line": 554,
        "fullcodeline": "if(c == tok->quote_char) {"
    },
    {
        "line": 566,
        "fullcodeline": "if (!ADVANCE_CHAR(str, tok) || !PEEK_CHAR(c, tok)) {"
    },
    {
        "line": 606,
        "fullcodeline": "} else if(c == ',') {"
    },
    {
        "line": 145,
        "fullcodeline": "current = json_object_new_double(is_negative ? -INFINITY : INFINITY);"
    },
    {
        "line": 146,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 147,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 169,
        "fullcodeline": "current = NULL;"
    },
    {
        "line": 170,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 171,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 175,
        "fullcodeline": "else if ((!(tok->flags & JSON_TOKENER_STRICT) &&"
    },
    {
        "line": 199,
        "fullcodeline": "state = json_tokener_state_comment_eol;"
    },
    {
        "line": 213,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, str-case_start);"
    },
    {
        "line": 228,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, str-case_start);"
    },
    {
        "line": 254,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, str-case_start);"
    },
    {
        "line": 255,
        "fullcodeline": "current = json_object_new_string_len(tok->pb->buf, tok->pb->bpos);"
    },
    {
        "line": 256,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 257,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 266,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, str-case_start);"
    },
    {
        "line": 311,
        "fullcodeline": "tok->ucs_char += ((unsigned int)hexdigit(c) << ((3-tok->st_pos++)*4));"
    },
    {
        "line": 415,
        "fullcodeline": "current = json_object_new_boolean(1);"
    },
    {
        "line": 416,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 417,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 420,
        "fullcodeline": "} else if((!(tok->flags & JSON_TOKENER_STRICT) &&"
    },
    {
        "line": 445,
        "fullcodeline": "tok->is_double = 1;"
    },
    {
        "line": 447,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, case_len);"
    },
    {
        "line": 468,
        "fullcodeline": "tok->err = json_tokener_error_parse_number;"
    },
    {
        "line": 473,
        "fullcodeline": "else if(tok->is_double && json_parse_double(tok->pb->buf, &numd) == 0)"
    },
    {
        "line": 499,
        "fullcodeline": "tok->err = json_tokener_error_depth;"
    },
    {
        "line": 520,
        "fullcodeline": "saved_state = json_tokener_state_array_after_sep;"
    },
    {
        "line": 521,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 540,
        "fullcodeline": "tok->quote_char = c;"
    },
    {
        "line": 541,
        "fullcodeline": "printbuf_reset(tok->pb);"
    },
    {
        "line": 542,
        "fullcodeline": "state = json_tokener_state_object_field;"
    },
    {
        "line": 555,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, str-case_start);"
    },
    {
        "line": 556,
        "fullcodeline": "obj_field_name = strdup(tok->pb->buf);"
    },
    {
        "line": 557,
        "fullcodeline": "saved_state = json_tokener_state_object_field_end;"
    },
    {
        "line": 558,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 567,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, str-case_start);"
    },
    {
        "line": 607,
        "fullcodeline": "saved_state = json_tokener_state_object_field_start_after_sep;"
    },
    {
        "line": 608,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 177,
        "fullcodeline": "(strncmp(json_nan_str, tok->pb->buf, size_nan) == 0)"
    },
    {
        "line": 201,
        "fullcodeline": "tok->err = json_tokener_error_parse_comment;"
    },
    {
        "line": 287,
        "fullcodeline": "else if(c == 'n') printbuf_memappend_fast(tok->pb, \"\\n\", 1);"
    },
    {
        "line": 312,
        "fullcodeline": "if(tok->st_pos == 4) {"
    },
    {
        "line": 392,
        "fullcodeline": "tok->err = json_tokener_error_parse_string;"
    },
    {
        "line": 422,
        "fullcodeline": "|| (strncmp(json_false_str, tok->pb->buf, size2) == 0)) {"
    },
    {
        "line": 475,
        "fullcodeline": "current = json_object_new_double_s(numd, tok->pb->buf);"
    },
    {
        "line": 523,
        "fullcodeline": "tok->err = json_tokener_error_parse_array;"
    },
    {
        "line": 544,
        "fullcodeline": "tok->err = json_tokener_error_parse_object_key_name;"
    },
    {
        "line": 610,
        "fullcodeline": "tok->err = json_tokener_error_parse_object_value_sep;"
    },
    {
        "line": 176,
        "fullcodeline": "strncasecmp(json_nan_str, tok->pb->buf, size_nan) == 0) ||"
    },
    {
        "line": 180,
        "fullcodeline": "if (tok->st_pos == json_nan_str_len)"
    },
    {
        "line": 188,
        "fullcodeline": "tok->err = json_tokener_error_parse_null;"
    },
    {
        "line": 259,
        "fullcodeline": "} else if(c == '\\\\') {"
    },
    {
        "line": 313,
        "fullcodeline": "unsigned char unescaped_utf[4];"
    },
    {
        "line": 388,
        "fullcodeline": "state = saved_state;"
    },
    {
        "line": 397,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)utf8_replacement_char, 3);"
    },
    {
        "line": 421,
        "fullcodeline": "strncasecmp(json_false_str, tok->pb->buf, size2) == 0)"
    },
    {
        "line": 423,
        "fullcodeline": "if(tok->st_pos == json_false_str_len) {"
    },
    {
        "line": 430,
        "fullcodeline": "tok->err = json_tokener_error_parse_boolean;"
    },
    {
        "line": 477,
        "fullcodeline": "tok->err = json_tokener_error_parse_number;"
    },
    {
        "line": 560,
        "fullcodeline": "} else if(c == '\\\\') {"
    },
    {
        "line": 182,
        "fullcodeline": "current = json_object_new_double(NAN);"
    },
    {
        "line": 183,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 184,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 260,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, str-case_start);"
    },
    {
        "line": 261,
        "fullcodeline": "saved_state = json_tokener_state_string;"
    },
    {
        "line": 262,
        "fullcodeline": "state = json_tokener_state_string_escape;"
    },
    {
        "line": 327,
        "fullcodeline": "if (tok->ucs_char < 0x80) {"
    },
    {
        "line": 424,
        "fullcodeline": "current = json_object_new_boolean(0);"
    },
    {
        "line": 425,
        "fullcodeline": "saved_state = json_tokener_state_finish;"
    },
    {
        "line": 426,
        "fullcodeline": "state = json_tokener_state_eatws;"
    },
    {
        "line": 561,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, case_start, str-case_start);"
    },
    {
        "line": 562,
        "fullcodeline": "saved_state = json_tokener_state_object_field;"
    },
    {
        "line": 563,
        "fullcodeline": "state = json_tokener_state_string_escape;"
    },
    {
        "line": 288,
        "fullcodeline": "else if(c == 'r') printbuf_memappend_fast(tok->pb, \"\\r\", 1);"
    },
    {
        "line": 324,
        "fullcodeline": "got_hi_surrogate = 0;"
    },
    {
        "line": 328,
        "fullcodeline": "unescaped_utf[0] = tok->ucs_char;"
    },
    {
        "line": 329,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)unescaped_utf, 1);"
    },
    {
        "line": 316,
        "fullcodeline": "if (IS_LOW_SURROGATE(tok->ucs_char)) {"
    },
    {
        "line": 318,
        "fullcodeline": "tok->ucs_char = DECODE_SURROGATE_PAIR(got_hi_surrogate, tok->ucs_char);"
    },
    {
        "line": 330,
        "fullcodeline": "} else if (tok->ucs_char < 0x800) {"
    },
    {
        "line": 289,
        "fullcodeline": "else if(c == 't') printbuf_memappend_fast(tok->pb, \"\\t\", 1);"
    },
    {
        "line": 322,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)utf8_replacement_char, 3);"
    },
    {
        "line": 331,
        "fullcodeline": "unescaped_utf[0] = 0xc0 | (tok->ucs_char >> 6);"
    },
    {
        "line": 332,
        "fullcodeline": "unescaped_utf[1] = 0x80 | (tok->ucs_char & 0x3f);"
    },
    {
        "line": 333,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)unescaped_utf, 2);"
    },
    {
        "line": 334,
        "fullcodeline": "} else if (IS_HIGH_SURROGATE(tok->ucs_char)) {"
    },
    {
        "line": 290,
        "fullcodeline": "else if(c == 'f') printbuf_memappend_fast(tok->pb, \"\\f\", 1);"
    },
    {
        "line": 339,
        "fullcodeline": "got_hi_surrogate = tok->ucs_char;"
    },
    {
        "line": 341,
        "fullcodeline": "if ((tok->char_offset+1 != len) &&"
    },
    {
        "line": 344,
        "fullcodeline": "(str[2] == 'u'))"
    },
    {
        "line": 360,
        "fullcodeline": "tok->ucs_char = 0;"
    },
    {
        "line": 361,
        "fullcodeline": "tok->st_pos = 0;"
    },
    {
        "line": 370,
        "fullcodeline": "} else if (IS_LOW_SURROGATE(tok->ucs_char)) {"
    },
    {
        "line": 343,
        "fullcodeline": "(str[1] == '\\\\') &&"
    },
    {
        "line": 350,
        "fullcodeline": "if( !ADVANCE_CHAR(str, tok) || !ADVANCE_CHAR(str, tok) ) {"
    },
    {
        "line": 356,
        "fullcodeline": "if (!ADVANCE_CHAR(str, tok) || !PEEK_CHAR(c, tok)) {"
    },
    {
        "line": 368,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)utf8_replacement_char, 3);"
    },
    {
        "line": 372,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)utf8_replacement_char, 3);"
    },
    {
        "line": 342,
        "fullcodeline": "(tok->char_offset+2 != len) &&"
    },
    {
        "line": 351,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)utf8_replacement_char, 3);"
    },
    {
        "line": 357,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)utf8_replacement_char, 3);"
    },
    {
        "line": 373,
        "fullcodeline": "} else if (tok->ucs_char < 0x10000) {"
    },
    {
        "line": 374,
        "fullcodeline": "unescaped_utf[0] = 0xe0 | (tok->ucs_char >> 12);"
    },
    {
        "line": 375,
        "fullcodeline": "unescaped_utf[1] = 0x80 | ((tok->ucs_char >> 6) & 0x3f);"
    },
    {
        "line": 376,
        "fullcodeline": "unescaped_utf[2] = 0x80 | (tok->ucs_char & 0x3f);"
    },
    {
        "line": 377,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)unescaped_utf, 3);"
    },
    {
        "line": 378,
        "fullcodeline": "} else if (tok->ucs_char < 0x110000) {"
    },
    {
        "line": 379,
        "fullcodeline": "unescaped_utf[0] = 0xf0 | ((tok->ucs_char >> 18) & 0x07);"
    },
    {
        "line": 380,
        "fullcodeline": "unescaped_utf[1] = 0x80 | ((tok->ucs_char >> 12) & 0x3f);"
    },
    {
        "line": 381,
        "fullcodeline": "unescaped_utf[2] = 0x80 | ((tok->ucs_char >> 6) & 0x3f);"
    },
    {
        "line": 382,
        "fullcodeline": "unescaped_utf[3] = 0x80 | (tok->ucs_char & 0x3f);"
    },
    {
        "line": 383,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)unescaped_utf, 4);"
    },
    {
        "line": 386,
        "fullcodeline": "printbuf_memappend_fast(tok->pb, (char*)utf8_replacement_char, 3);"
    }
]