[
    {
        "line": 5,
        "fullcodeline": "struct btrfs_dir_item *di = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "struct btrfs_root *root = BTRFS_I(inode)->root;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t name_len = strlen(name);"
    },
    {
        "line": 9,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "path = btrfs_alloc_path();"
    },
    {
        "line": 17,
        "fullcodeline": "path->skip_release_on_error = 1;"
    },
    {
        "line": 48,
        "fullcodeline": "ret = btrfs_insert_xattr_item(trans, root, path, btrfs_ino(inode),"
    },
    {
        "line": 11,
        "fullcodeline": "if (name_len + size > BTRFS_MAX_XATTR_SIZE(root))"
    },
    {
        "line": 15,
        "fullcodeline": "if (!path)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (flags & XATTR_REPLACE) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (ret == -EOVERFLOW) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (di && (flags & XATTR_CREATE)) {"
    },
    {
        "line": 20,
        "fullcodeline": "di = btrfs_lookup_xattr(trans, root, path, btrfs_ino(inode),"
    },
    {
        "line": 38,
        "fullcodeline": "di = btrfs_lookup_xattr(NULL, root, path, btrfs_ino(inode),"
    },
    {
        "line": 44,
        "fullcodeline": "btrfs_release_path(path);"
    },
    {
        "line": 45,
        "fullcodeline": "di = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "btrfs_assert_tree_locked(path->nodes[0]);"
    },
    {
        "line": 58,
        "fullcodeline": "di = btrfs_match_dir_item_name(root, path, name, name_len);"
    },
    {
        "line": 72,
        "fullcodeline": "ret = -EEXIST;"
    },
    {
        "line": 84,
        "fullcodeline": "const int slot = path->slots[0];"
    },
    {
        "line": 85,
        "fullcodeline": "struct extent_buffer *leaf = path->nodes[0];"
    },
    {
        "line": 86,
        "fullcodeline": "const u16 old_data_len = btrfs_dir_data_len(leaf, di);"
    },
    {
        "line": 87,
        "fullcodeline": "const u32 item_size = btrfs_item_size_nr(leaf, slot);"
    },
    {
        "line": 88,
        "fullcodeline": "const u32 data_size = sizeof(*di) + name_len + size;"
    },
    {
        "line": 116,
        "fullcodeline": "item = btrfs_item_nr(slot);"
    },
    {
        "line": 118,
        "fullcodeline": "ptr += btrfs_item_size(leaf, item) - data_size;"
    },
    {
        "line": 119,
        "fullcodeline": "di = (struct btrfs_dir_item *)ptr;"
    },
    {
        "line": 120,
        "fullcodeline": "btrfs_set_dir_data_len(leaf, di, size);"
    },
    {
        "line": 121,
        "fullcodeline": "data_ptr = ((unsigned long)(di + 1)) + name_len;"
    },
    {
        "line": 122,
        "fullcodeline": "write_extent_buffer(leaf, value, data_ptr, size);"
    },
    {
        "line": 12,
        "fullcodeline": "return -ENOSPC;"
    },
    {
        "line": 16,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 37,
        "fullcodeline": "ASSERT(mutex_is_locked(&inode->i_mutex));"
    },
    {
        "line": 93,
        "fullcodeline": "if (size > old_data_len) {"
    },
    {
        "line": 21,
        "fullcodeline": "name, name_len, -1);"
    },
    {
        "line": 22,
        "fullcodeline": "if (!di && (flags & XATTR_REPLACE))"
    },
    {
        "line": 23,
        "fullcodeline": "ret = -ENODATA;"
    },
    {
        "line": 41,
        "fullcodeline": "ret = -ENODATA;"
    },
    {
        "line": 59,
        "fullcodeline": "if (!di && !(flags & XATTR_REPLACE)) {"
    },
    {
        "line": 60,
        "fullcodeline": "ret = -ENOSPC;"
    },
    {
        "line": 63,
        "fullcodeline": "} else if (ret == -EEXIST) {"
    },
    {
        "line": 64,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "di = btrfs_match_dir_item_name(root, path, name, name_len);"
    },
    {
        "line": 66,
        "fullcodeline": "ASSERT(di); /* logic error */"
    },
    {
        "line": 103,
        "fullcodeline": "if (size > old_data_len)"
    },
    {
        "line": 110,
        "fullcodeline": "ret = btrfs_delete_one_dir_name(trans, root, path, di);"
    },
    {
        "line": 113,
        "fullcodeline": "btrfs_extend_item(root, path, data_size);"
    },
    {
        "line": 94,
        "fullcodeline": "if (btrfs_leaf_free_space(root, leaf) <"
    },
    {
        "line": 95,
        "fullcodeline": "(size - old_data_len)) {"
    },
    {
        "line": 96,
        "fullcodeline": "ret = -ENOSPC;"
    },
    {
        "line": 104,
        "fullcodeline": "btrfs_extend_item(root, path,"
    },
    {
        "line": 25,
        "fullcodeline": "ret = btrfs_delete_one_dir_name(trans, root, path, di);"
    },
    {
        "line": 105,
        "fullcodeline": "size - old_data_len);"
    },
    {
        "line": 106,
        "fullcodeline": "else if (size < old_data_len)"
    },
    {
        "line": 107,
        "fullcodeline": "btrfs_truncate_item(root, path, data_size, 1);"
    }
]