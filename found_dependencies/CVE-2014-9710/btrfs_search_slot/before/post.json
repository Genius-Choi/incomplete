[
    {
        "line": 10,
        "fullcodeline": "int lowest_unlock = 1;"
    },
    {
        "line": 13,
        "fullcodeline": "int write_lock_level = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "u8 lowest_level = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "lowest_level = p->lowest_level;"
    },
    {
        "line": 19,
        "fullcodeline": "WARN_ON(lowest_level && ins_len > 0);"
    },
    {
        "line": 20,
        "fullcodeline": "WARN_ON(p->nodes[0] != NULL);"
    },
    {
        "line": 21,
        "fullcodeline": "BUG_ON(!cow && ins_len);"
    },
    {
        "line": 45,
        "fullcodeline": "min_write_lock_level = write_lock_level;"
    },
    {
        "line": 48,
        "fullcodeline": "prev_cmp = -1;"
    },
    {
        "line": 52,
        "fullcodeline": "root_lock = BTRFS_READ_LOCK;"
    },
    {
        "line": 53,
        "fullcodeline": "level = 0;"
    },
    {
        "line": 90,
        "fullcodeline": "p->nodes[level] = b;"
    },
    {
        "line": 257,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 23,
        "fullcodeline": "if (ins_len < 0) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (!cow)"
    },
    {
        "line": 42,
        "fullcodeline": "if (cow && (p->keep_locks || p->lowest_level))"
    },
    {
        "line": 91,
        "fullcodeline": "if (!p->skip_locking)"
    },
    {
        "line": 263,
        "fullcodeline": "if (!p->leave_spinning)"
    },
    {
        "line": 265,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 24,
        "fullcodeline": "lowest_unlock = 2;"
    },
    {
        "line": 30,
        "fullcodeline": "write_lock_level = 2;"
    },
    {
        "line": 40,
        "fullcodeline": "write_lock_level = -1;"
    },
    {
        "line": 43,
        "fullcodeline": "write_lock_level = BTRFS_MAX_LEVEL;"
    },
    {
        "line": 61,
        "fullcodeline": "b = root->commit_root;"
    },
    {
        "line": 62,
        "fullcodeline": "extent_buffer_get(b);"
    },
    {
        "line": 63,
        "fullcodeline": "level = btrfs_header_level(b);"
    },
    {
        "line": 92,
        "fullcodeline": "p->locks[level] = root_lock;"
    },
    {
        "line": 95,
        "fullcodeline": "level = btrfs_header_level(b);"
    },
    {
        "line": 133,
        "fullcodeline": "p->nodes[level] = b;"
    },
    {
        "line": 134,
        "fullcodeline": "btrfs_clear_path_blocking(p, NULL, 0);"
    },
    {
        "line": 156,
        "fullcodeline": "ret = key_search(b, key, level, &prev_cmp, &slot);"
    },
    {
        "line": 264,
        "fullcodeline": "btrfs_set_path_blocking(p);"
    },
    {
        "line": 266,
        "fullcodeline": "btrfs_release_path(p);"
    },
    {
        "line": 66,
        "fullcodeline": "if (!p->skip_locking)"
    },
    {
        "line": 147,
        "fullcodeline": "if (!ins_len && !p->keep_locks) {"
    },
    {
        "line": 158,
        "fullcodeline": "if (level != 0) {"
    },
    {
        "line": 31,
        "fullcodeline": "} else if (ins_len > 0) {"
    },
    {
        "line": 60,
        "fullcodeline": "down_read(&root->fs_info->commit_root_sem);"
    },
    {
        "line": 65,
        "fullcodeline": "up_read(&root->fs_info->commit_root_sem);"
    },
    {
        "line": 67,
        "fullcodeline": "btrfs_tree_read_lock(b);"
    },
    {
        "line": 123,
        "fullcodeline": "btrfs_set_path_blocking(p);"
    },
    {
        "line": 124,
        "fullcodeline": "err = btrfs_cow_block(trans, root, b,"
    },
    {
        "line": 148,
        "fullcodeline": "int u = level + 1;"
    },
    {
        "line": 159,
        "fullcodeline": "int dec = 0;"
    },
    {
        "line": 164,
        "fullcodeline": "p->slots[level] = slot;"
    },
    {
        "line": 165,
        "fullcodeline": "err = setup_nodes_for_search(trans, root, p, b, level,"
    },
    {
        "line": 173,
        "fullcodeline": "b = p->nodes[level];"
    },
    {
        "line": 174,
        "fullcodeline": "slot = p->slots[level];"
    },
    {
        "line": 189,
        "fullcodeline": "unlock_up(p, level, lowest_unlock,"
    },
    {
        "line": 198,
        "fullcodeline": "err = read_block_for_search(trans, root, p,"
    },
    {
        "line": 36,
        "fullcodeline": "write_lock_level = 1;"
    },
    {
        "line": 70,
        "fullcodeline": "b = btrfs_root_node(root);"
    },
    {
        "line": 71,
        "fullcodeline": "level = btrfs_header_level(b);"
    },
    {
        "line": 107,
        "fullcodeline": "if (!should_cow_block(trans, root, b))"
    },
    {
        "line": 114,
        "fullcodeline": "if (level > write_lock_level ||"
    },
    {
        "line": 150,
        "fullcodeline": "if (u < BTRFS_MAX_LEVEL && p->locks[u]) {"
    },
    {
        "line": 160,
        "fullcodeline": "if (ret && slot > 0) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (err == -EAGAIN)"
    },
    {
        "line": 182,
        "fullcodeline": "if (slot == 0 && ins_len &&"
    },
    {
        "line": 192,
        "fullcodeline": "if (level == lowest_level) {"
    },
    {
        "line": 200,
        "fullcodeline": "if (err == -EAGAIN)"
    },
    {
        "line": 207,
        "fullcodeline": "if (!p->skip_locking) {"
    },
    {
        "line": 231,
        "fullcodeline": "p->slots[level] = slot;"
    },
    {
        "line": 76,
        "fullcodeline": "b = btrfs_read_lock_root_node(root);"
    },
    {
        "line": 77,
        "fullcodeline": "level = btrfs_header_level(b);"
    },
    {
        "line": 115,
        "fullcodeline": "(level + 1 > write_lock_level &&"
    },
    {
        "line": 118,
        "fullcodeline": "write_lock_level = level + 1;"
    },
    {
        "line": 119,
        "fullcodeline": "btrfs_release_path(p);"
    },
    {
        "line": 128,
        "fullcodeline": "ret = err;"
    },
    {
        "line": 151,
        "fullcodeline": "btrfs_tree_unlock_rw(p->nodes[u], p->locks[u]);"
    },
    {
        "line": 152,
        "fullcodeline": "p->locks[u] = 0;"
    },
    {
        "line": 161,
        "fullcodeline": "dec = 1;"
    },
    {
        "line": 162,
        "fullcodeline": "slot -= 1;"
    },
    {
        "line": 170,
        "fullcodeline": "ret = err;"
    },
    {
        "line": 183,
        "fullcodeline": "write_lock_level < level + 1) {"
    },
    {
        "line": 184,
        "fullcodeline": "write_lock_level = level + 1;"
    },
    {
        "line": 185,
        "fullcodeline": "btrfs_release_path(p);"
    },
    {
        "line": 203,
        "fullcodeline": "ret = err;"
    },
    {
        "line": 208,
        "fullcodeline": "level = btrfs_header_level(b);"
    },
    {
        "line": 228,
        "fullcodeline": "p->nodes[level] = b;"
    },
    {
        "line": 232,
        "fullcodeline": "if (ins_len > 0 &&"
    },
    {
        "line": 251,
        "fullcodeline": "if (!p->search_for_split)"
    },
    {
        "line": 78,
        "fullcodeline": "if (level <= write_lock_level) {"
    },
    {
        "line": 125,
        "fullcodeline": "p->nodes[level + 1],"
    },
    {
        "line": 126,
        "fullcodeline": "p->slots[level + 1], &b);"
    },
    {
        "line": 209,
        "fullcodeline": "if (level <= write_lock_level) {"
    },
    {
        "line": 233,
        "fullcodeline": "btrfs_leaf_free_space(root, b) < ins_len) {"
    },
    {
        "line": 240,
        "fullcodeline": "btrfs_set_path_blocking(p);"
    },
    {
        "line": 241,
        "fullcodeline": "err = split_leaf(trans, root, key,"
    },
    {
        "line": 243,
        "fullcodeline": "btrfs_clear_path_blocking(p, NULL, 0);"
    },
    {
        "line": 245,
        "fullcodeline": "BUG_ON(err > 0);"
    },
    {
        "line": 252,
        "fullcodeline": "unlock_up(p, level, lowest_unlock,"
    },
    {
        "line": 80,
        "fullcodeline": "btrfs_tree_read_unlock(b);"
    },
    {
        "line": 81,
        "fullcodeline": "free_extent_buffer(b);"
    },
    {
        "line": 82,
        "fullcodeline": "b = btrfs_lock_root_node(root);"
    },
    {
        "line": 83,
        "fullcodeline": "root_lock = BTRFS_WRITE_LOCK;"
    },
    {
        "line": 86,
        "fullcodeline": "level = btrfs_header_level(b);"
    },
    {
        "line": 116,
        "fullcodeline": "level + 1 < BTRFS_MAX_LEVEL &&"
    },
    {
        "line": 117,
        "fullcodeline": "p->nodes[level + 1])) {"
    },
    {
        "line": 194,
        "fullcodeline": "p->slots[level]++;"
    },
    {
        "line": 210,
        "fullcodeline": "err = btrfs_try_tree_write_lock(b);"
    },
    {
        "line": 217,
        "fullcodeline": "p->locks[level] = BTRFS_WRITE_LOCK;"
    },
    {
        "line": 234,
        "fullcodeline": "if (write_lock_level < 1) {"
    },
    {
        "line": 211,
        "fullcodeline": "if (!err) {"
    },
    {
        "line": 219,
        "fullcodeline": "err = btrfs_try_tree_read_lock(b);"
    },
    {
        "line": 226,
        "fullcodeline": "p->locks[level] = BTRFS_READ_LOCK;"
    },
    {
        "line": 235,
        "fullcodeline": "write_lock_level = 1;"
    },
    {
        "line": 236,
        "fullcodeline": "btrfs_release_path(p);"
    },
    {
        "line": 242,
        "fullcodeline": "p, ins_len, ret == 0);"
    },
    {
        "line": 247,
        "fullcodeline": "ret = err;"
    },
    {
        "line": 212,
        "fullcodeline": "btrfs_set_path_blocking(p);"
    },
    {
        "line": 213,
        "fullcodeline": "btrfs_tree_lock(b);"
    },
    {
        "line": 214,
        "fullcodeline": "btrfs_clear_path_blocking(p, b,"
    },
    {
        "line": 220,
        "fullcodeline": "if (!err) {"
    },
    {
        "line": 221,
        "fullcodeline": "btrfs_set_path_blocking(p);"
    },
    {
        "line": 222,
        "fullcodeline": "btrfs_tree_read_lock(b);"
    },
    {
        "line": 223,
        "fullcodeline": "btrfs_clear_path_blocking(p, b,"
    }
]