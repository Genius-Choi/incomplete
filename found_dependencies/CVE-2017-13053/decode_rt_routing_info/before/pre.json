[
    {
        "line": 4,
        "fullcodeline": "uint8_t route_target[8];"
    },
    {
        "line": 7,
        "fullcodeline": "ND_TCHECK(pptr[0]);"
    },
    {
        "line": 8,
        "fullcodeline": "plen = pptr[0];   /* get prefix length */"
    },
    {
        "line": 18,
        "fullcodeline": "plen-=32; /* adjust prefix length */"
    },
    {
        "line": 23,
        "fullcodeline": "memset(&route_target, 0, sizeof(route_target));"
    },
    {
        "line": 24,
        "fullcodeline": "ND_TCHECK2(pptr[1], (plen + 7) / 8);"
    },
    {
        "line": 25,
        "fullcodeline": "memcpy(&route_target, &pptr[1], (plen + 7) / 8);"
    },
    {
        "line": 10,
        "fullcodeline": "if (0 == plen) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (32 > plen)"
    },
    {
        "line": 20,
        "fullcodeline": "if (64 < plen)"
    },
    {
        "line": 26,
        "fullcodeline": "if (plen % 8) {"
    },
    {
        "line": 31,
        "fullcodeline": "as_printf(ndo, astostr, sizeof(astostr), EXTRACT_32BITS(pptr+1)),"
    },
    {
        "line": 32,
        "fullcodeline": "bgp_vpn_rd_print(ndo, (u_char *)&route_target));"
    },
    {
        "line": 34,
        "fullcodeline": "return 5 + (plen + 7) / 8;"
    },
    {
        "line": 11,
        "fullcodeline": "snprintf(buf, buflen, \"default route target\");"
    },
    {
        "line": 27,
        "fullcodeline": "((u_char *)&route_target)[(plen + 7) / 8 - 1] &="
    },
    {
        "line": 16,
        "fullcodeline": "return -1;"
    },
    {
        "line": 21,
        "fullcodeline": "return -1;"
    },
    {
        "line": 28,
        "fullcodeline": "((0xff00 >> (plen % 8)) & 0xff);"
    }
]