[
    {
        "line": 7,
        "fullcodeline": "ND_TCHECK(pptr[0]);"
    },
    {
        "line": 8,
        "fullcodeline": "plen = pptr[0];   /* get prefix length */"
    },
    {
        "line": 13,
        "fullcodeline": "plen-=(24+64); /* adjust prefixlen - labellength - RD len*/"
    },
    {
        "line": 18,
        "fullcodeline": "memset(&addr, 0, sizeof(addr));"
    },
    {
        "line": 19,
        "fullcodeline": "ND_TCHECK2(pptr[12], (plen + 7) / 8);"
    },
    {
        "line": 20,
        "fullcodeline": "memcpy(&addr, &pptr[12], (plen + 7) / 8);"
    },
    {
        "line": 26,
        "fullcodeline": "snprintf(buf, buflen, \"RD: %s, %s/%d, label:%u %s\","
    },
    {
        "line": 10,
        "fullcodeline": "if ((24+64) > plen)"
    },
    {
        "line": 15,
        "fullcodeline": "if (32 < plen)"
    },
    {
        "line": 21,
        "fullcodeline": "if (plen % 8) {"
    },
    {
        "line": 27,
        "fullcodeline": "bgp_vpn_rd_print(ndo, pptr+4),"
    },
    {
        "line": 28,
        "fullcodeline": "ipaddr_string(ndo, &addr),"
    },
    {
        "line": 30,
        "fullcodeline": "EXTRACT_24BITS(pptr+1)>>4,"
    },
    {
        "line": 31,
        "fullcodeline": "((pptr[3]&1)==0) ? \"(BOGUS: Bottom of Stack NOT set!)\" : \"(bottom)\" );"
    },
    {
        "line": 33,
        "fullcodeline": "return 12 + (plen + 7) / 8;"
    },
    {
        "line": 22,
        "fullcodeline": "((u_char *)&addr)[(plen + 7) / 8 - 1] &="
    },
    {
        "line": 11,
        "fullcodeline": "return -1;"
    },
    {
        "line": 16,
        "fullcodeline": "return -1;"
    },
    {
        "line": 23,
        "fullcodeline": "((0xff00 >> (plen % 8)) & 0xff);"
    }
]