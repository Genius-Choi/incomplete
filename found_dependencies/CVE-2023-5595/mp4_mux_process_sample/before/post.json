[
    {
        "line": 3,
        "fullcodeline": "GF_Err e=GF_OK;"
    },
    {
        "line": 5,
        "fullcodeline": "u32 prev_size=0;"
    },
    {
        "line": 6,
        "fullcodeline": "u32 duration = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "u32 timescale = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "u32 insert_subsample_dsi_size = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "u32 first_nal_is_audelim = GF_FALSE;"
    },
    {
        "line": 12,
        "fullcodeline": "u32 sample_desc_index = tkw->stsd_idx;"
    },
    {
        "line": 13,
        "fullcodeline": "Bool sample_timing_ok = GF_TRUE;"
    },
    {
        "line": 15,
        "fullcodeline": "timescale = gf_filter_pck_get_timescale(pck);"
    },
    {
        "line": 17,
        "fullcodeline": "prev_dts = tkw->nb_samples ? tkw->sample.DTS : GF_FILTER_NO_TS;"
    },
    {
        "line": 19,
        "fullcodeline": "tkw->sample.CTS_Offset = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "ctx->update_report = GF_TRUE;"
    },
    {
        "line": 29,
        "fullcodeline": "ctx->total_bytes_in += tkw->sample.dataLength;"
    },
    {
        "line": 30,
        "fullcodeline": "ctx->total_samples++;"
    },
    {
        "line": 32,
        "fullcodeline": "tkw->sample.DTS = gf_filter_pck_get_dts(pck);"
    },
    {
        "line": 33,
        "fullcodeline": "cts = gf_filter_pck_get_cts(pck);"
    },
    {
        "line": 101,
        "fullcodeline": "duration = gf_filter_pck_get_duration(pck);"
    },
    {
        "line": 118,
        "fullcodeline": "tkw->sample.IsRAP = 0;"
    },
    {
        "line": 149,
        "fullcodeline": "tkw->sample.DTS += tkw->dts_patch;"
    },
    {
        "line": 184,
        "fullcodeline": "tkw->sample.nb_pack = 0;"
    },
    {
        "line": 371,
        "fullcodeline": "tkw->nb_samples++;"
    },
    {
        "line": 372,
        "fullcodeline": "tkw->samples_in_stsd++;"
    },
    {
        "line": 373,
        "fullcodeline": "tkw->samples_in_frag++;"
    },
    {
        "line": 443,
        "fullcodeline": "subs = gf_filter_pck_get_property(pck, GF_PROP_PCK_SUBS);"
    },
    {
        "line": 518,
        "fullcodeline": "u32 idx = 0;"
    },
    {
        "line": 587,
        "fullcodeline": "tkw->prev_duration = duration;"
    },
    {
        "line": 20,
        "fullcodeline": "if (gf_filter_pck_get_frame_interface(pck)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (tkw->sample.DTS == GF_FILTER_NO_TS) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (tkw->check_seek_ts && !gf_filter_pck_get_seek_flag(pck)) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (timescale != tkw->tk_timescale) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (tkw->codecid==GF_CODECID_RAW) {"
    },
    {
        "line": 128,
        "fullcodeline": "if (sap_type==GF_FILTER_SAP_1)"
    },
    {
        "line": 146,
        "fullcodeline": "if ((tkw->sample.IsRAP == SAP_TYPE_1) || (tkw->sample.IsRAP == SAP_TYPE_2))"
    },
    {
        "line": 150,
        "fullcodeline": "if (tkw->nb_samples && (prev_dts >= tkw->sample.DTS) ) {"
    },
    {
        "line": 196,
        "fullcodeline": "if (tkw->cenc_state && tkw->clear_stsd_idx && !gf_filter_pck_get_crypt_flags(pck)) {"
    },
    {
        "line": 200,
        "fullcodeline": "if (tkw->sparse_inject && (prev_dts!=GF_FILTER_NO_TS) && (tkw->sample.DTS!=GF_FILTER_NO_TS) && tkw->prev_duration) {"
    },
    {
        "line": 377,
        "fullcodeline": "if (!for_fragment && sample_timing_ok) {"
    },
    {
        "line": 399,
        "fullcodeline": "if ((sap_type==3) || tkw->has_open_gop)  {"
    },
    {
        "line": 416,
        "fullcodeline": "if (!ctx->noroll) {"
    },
    {
        "line": 588,
        "fullcodeline": "if (duration && !for_fragment && !tkw->raw_audio_bytes_per_sample)"
    },
    {
        "line": 21,
        "fullcodeline": "tkw->dgl_copy = gf_filter_pck_dangling_copy(pck, tkw->dgl_copy);"
    },
    {
        "line": 23,
        "fullcodeline": "tkw->sample.data = (char *)gf_filter_pck_get_data(tkw->dgl_copy, &tkw->sample.dataLength);"
    },
    {
        "line": 58,
        "fullcodeline": "u64 si_min_ts = tkw->si_min_ts_plus_one - 1;"
    },
    {
        "line": 59,
        "fullcodeline": "tkw->si_min_ts_plus_one = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "tkw->ts_shift = tkw->sample.DTS;"
    },
    {
        "line": 61,
        "fullcodeline": "mp4_mux_update_init_edit(ctx, tkw, si_min_ts, GF_FALSE);"
    },
    {
        "line": 86,
        "fullcodeline": "u64 ts_check = cts;"
    },
    {
        "line": 87,
        "fullcodeline": "subs = gf_filter_pck_get_property(pck, GF_PROP_PCK_SKIP_BEGIN);"
    },
    {
        "line": 104,
        "fullcodeline": "tkw->sample.DTS = gf_timestamp_rescale(tkw->sample.DTS, timescale, tkw->tk_timescale);"
    },
    {
        "line": 106,
        "fullcodeline": "ctso = (s64) tkw->sample.CTS_Offset;"
    },
    {
        "line": 107,
        "fullcodeline": "ctso *= tkw->tk_timescale;"
    },
    {
        "line": 108,
        "fullcodeline": "ctso /= timescale;"
    },
    {
        "line": 109,
        "fullcodeline": "tkw->sample.CTS_Offset = (s32) ctso;"
    },
    {
        "line": 110,
        "fullcodeline": "duration *= tkw->tk_timescale;"
    },
    {
        "line": 111,
        "fullcodeline": "duration /= timescale;"
    },
    {
        "line": 120,
        "fullcodeline": "sap_type = GF_FILTER_SAP_1;"
    },
    {
        "line": 129,
        "fullcodeline": "tkw->sample.IsRAP = SAP_TYPE_1;"
    },
    {
        "line": 147,
        "fullcodeline": "ctx->frag_has_intra = GF_TRUE;"
    },
    {
        "line": 156,
        "fullcodeline": "sample_timing_ok = GF_FALSE;"
    },
    {
        "line": 170,
        "fullcodeline": "tkw->sample.CTS_Offset -= tkw->negctts_shift;"
    },
    {
        "line": 186,
        "fullcodeline": "tkw->sample.nb_pack = tkw->sample.dataLength / tkw->raw_audio_bytes_per_sample;"
    },
    {
        "line": 197,
        "fullcodeline": "sample_desc_index = tkw->clear_stsd_idx;"
    },
    {
        "line": 201,
        "fullcodeline": "u64 est_time = prev_dts + tkw->prev_duration;"
    },
    {
        "line": 224,
        "fullcodeline": "u64 data_offset = gf_filter_pck_get_byte_offset(pck);"
    },
    {
        "line": 386,
        "fullcodeline": "samp_cts = tkw->sample.DTS + tkw->sample.CTS_Offset;"
    },
    {
        "line": 414,
        "fullcodeline": "tkw->has_open_gop = GF_TRUE;"
    },
    {
        "line": 456,
        "fullcodeline": "tkw->has_subs = GF_TRUE;"
    },
    {
        "line": 502,
        "fullcodeline": "u8 dep_flags = gf_filter_pck_get_dependency_flags(pck);"
    },
    {
        "line": 520,
        "fullcodeline": "Bool is_sample_group=GF_FALSE;"
    },
    {
        "line": 521,
        "fullcodeline": "u32 aux_type=0, aux_info=0, sg_flags=0;"
    },
    {
        "line": 523,
        "fullcodeline": "const char *pname=NULL;"
    },
    {
        "line": 524,
        "fullcodeline": "const GF_PropertyValue *p = gf_filter_pck_enum_properties(pck, &idx, &p4cc, &pname);"
    },
    {
        "line": 540,
        "fullcodeline": "pname+=4;"
    },
    {
        "line": 541,
        "fullcodeline": "u32 plen = (u32) strlen(pname);"
    },
    {
        "line": 589,
        "fullcodeline": "gf_isom_set_last_sample_duration(ctx->file, tkw->track_num, duration);"
    },
    {
        "line": 592,
        "fullcodeline": "Bool abort = GF_FALSE;"
    },
    {
        "line": 22,
        "fullcodeline": "if (!tkw->dgl_copy) return GF_IO_ERR;"
    },
    {
        "line": 25,
        "fullcodeline": "tkw->sample.data = (char *)gf_filter_pck_get_data(pck, &tkw->sample.dataLength);"
    },
    {
        "line": 36,
        "fullcodeline": "if (cts == GF_FILTER_NO_TS) {"
    },
    {
        "line": 53,
        "fullcodeline": "tkw->sample.CTS_Offset = (s32) ((s64) cts - (s64) tkw->sample.DTS);"
    },
    {
        "line": 91,
        "fullcodeline": "if (!tkw->min_ts_seek_plus_one) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (cts != GF_FILTER_NO_TS) {"
    },
    {
        "line": 122,
        "fullcodeline": "sap_type = mp4_mux_get_sap(ctx, pck);"
    },
    {
        "line": 152,
        "fullcodeline": "if (!for_fragment && ctx->patch_dts) {"
    },
    {
        "line": 180,
        "fullcodeline": "if (tkw->sample.CTS_Offset < tkw->min_neg_ctts)"
    },
    {
        "line": 202,
        "fullcodeline": "if (est_time < tkw->sample.DTS) {"
    },
    {
        "line": 225,
        "fullcodeline": "if (data_offset != GF_FILTER_NO_BO) {"
    },
    {
        "line": 379,
        "fullcodeline": "if (!tkw->clamp_ts_plus_one) {"
    },
    {
        "line": 387,
        "fullcodeline": "if (!tkw->clamp_ts_plus_one || (samp_cts + 1 < tkw->clamp_ts_plus_one)) {"
    },
    {
        "line": 400,
        "fullcodeline": "if (!ctx->norap) {"
    },
    {
        "line": 417,
        "fullcodeline": "if ((sap_type==GF_FILTER_SAP_4) || (sap_type==GF_FILTER_SAP_4_PROL) || tkw->gdr_type) {"
    },
    {
        "line": 446,
        "fullcodeline": "if (!first_nal_is_audelim && insert_subsample_dsi_size) {"
    },
    {
        "line": 458,
        "fullcodeline": "if (!ctx->bs_r) ctx->bs_r = gf_bs_new(subs->value.data.ptr, subs->value.data.size, GF_BITSTREAM_READ);"
    },
    {
        "line": 461,
        "fullcodeline": "while (gf_bs_available(ctx->bs_r)) {"
    },
    {
        "line": 525,
        "fullcodeline": "if (!p) break;"
    },
    {
        "line": 526,
        "fullcodeline": "if ((p->type!=GF_PROP_DATA) && (p->type!=GF_PROP_CONST_DATA)) continue;"
    },
    {
        "line": 527,
        "fullcodeline": "if (!p->value.data.size || !p->value.data.ptr) continue;"
    },
    {
        "line": 528,
        "fullcodeline": "if (!pname) continue;"
    },
    {
        "line": 530,
        "fullcodeline": "if (!strncmp(pname, \"sai_\", 4)) {"
    },
    {
        "line": 542,
        "fullcodeline": "if (plen==3) {"
    },
    {
        "line": 551,
        "fullcodeline": "if (pname[0] == '_') {"
    },
    {
        "line": 564,
        "fullcodeline": "if (!aux_type) continue;"
    },
    {
        "line": 593,
        "fullcodeline": "if (ctx->dur.num>0) {"
    },
    {
        "line": 89,
        "fullcodeline": "ts_check += subs->value.uint;"
    },
    {
        "line": 92,
        "fullcodeline": "tkw->min_ts_seek_plus_one = ts_check + 1;"
    },
    {
        "line": 114,
        "fullcodeline": "cts = gf_timestamp_rescale(cts, timescale, tkw->tk_timescale);"
    },
    {
        "line": 125,
        "fullcodeline": "if ((tkw->xps_inband==XPS_IB_PPS) && sap_type==GF_FILTER_SAP_3)"
    },
    {
        "line": 130,
        "fullcodeline": "else if (sap_type==GF_FILTER_SAP_2)"
    },
    {
        "line": 153,
        "fullcodeline": "gf_isom_patch_last_sample_duration(ctx->file, tkw->track_num, prev_dts ? prev_dts : 1);"
    },
    {
        "line": 159,
        "fullcodeline": "tkw->dts_patch = prev_dts - tkw->sample.DTS;"
    },
    {
        "line": 160,
        "fullcodeline": "tkw->sample.DTS += tkw->dts_patch+1; //+1 to avoid 0-dur samples"
    },
    {
        "line": 174,
        "fullcodeline": "s32 diff = (s32) ((s64) cts - (s64) tkw->sample.DTS);"
    },
    {
        "line": 178,
        "fullcodeline": "if (tkw->sample.CTS_Offset) tkw->has_ctts = GF_TRUE;"
    },
    {
        "line": 181,
        "fullcodeline": "tkw->min_neg_ctts = tkw->sample.CTS_Offset;"
    },
    {
        "line": 188,
        "fullcodeline": "duration = 1;"
    },
    {
        "line": 205,
        "fullcodeline": "memset(&s, 0, sizeof(GF_ISOSample));"
    },
    {
        "line": 206,
        "fullcodeline": "s.DTS = est_time;"
    },
    {
        "line": 208,
        "fullcodeline": "s.IsRAP = SAP_TYPE_1;"
    },
    {
        "line": 209,
        "fullcodeline": "ins_dur = (u32) (tkw->sample.DTS - est_time);"
    },
    {
        "line": 226,
        "fullcodeline": "e = gf_isom_add_sample_reference(ctx->file, tkw->track_num, sample_desc_index, &tkw->sample, data_offset);"
    },
    {
        "line": 233,
        "fullcodeline": "} else if (tkw->nb_frames_per_sample && (tkw->nb_samples % tkw->nb_frames_per_sample)) {"
    },
    {
        "line": 380,
        "fullcodeline": "const GF_PropertyValue *skp = gf_filter_pck_get_property(pck, GF_PROP_PCK_SKIP_PRES);"
    },
    {
        "line": 418,
        "fullcodeline": "GF_ISOSampleRollType roll_type = 0;"
    },
    {
        "line": 419,
        "fullcodeline": "s16 roll = gf_filter_pck_get_roll_info(pck);"
    },
    {
        "line": 454,
        "fullcodeline": "insert_subsample_dsi_size = 0;"
    },
    {
        "line": 462,
        "fullcodeline": "u32 flags = gf_bs_read_u32(ctx->bs_r);"
    },
    {
        "line": 463,
        "fullcodeline": "u32 subs_size = gf_bs_read_u32(ctx->bs_r);"
    },
    {
        "line": 464,
        "fullcodeline": "u32 reserved = gf_bs_read_u32(ctx->bs_r);"
    },
    {
        "line": 465,
        "fullcodeline": "u8 priority = gf_bs_read_u8(ctx->bs_r);"
    },
    {
        "line": 466,
        "fullcodeline": "u8 discardable = gf_bs_read_u8(ctx->bs_r);"
    },
    {
        "line": 491,
        "fullcodeline": "} else if (for_fragment && tkw->has_subs && ctx->cmaf && (tkw->codecid==GF_CODECID_SUBS_XML)) {"
    },
    {
        "line": 504,
        "fullcodeline": "u32 is_leading = (dep_flags>>6) & 0x3;"
    },
    {
        "line": 505,
        "fullcodeline": "u32 depends_on = (dep_flags>>4) & 0x3;"
    },
    {
        "line": 506,
        "fullcodeline": "u32 depended_on = (dep_flags>>2) & 0x3;"
    },
    {
        "line": 507,
        "fullcodeline": "u32 redundant = (dep_flags) & 0x3;"
    },
    {
        "line": 543,
        "fullcodeline": "aux_type = GF_4CC(pname[0], pname[1], pname[2], ' ');"
    },
    {
        "line": 544,
        "fullcodeline": "pname+=3;"
    },
    {
        "line": 574,
        "fullcodeline": "gf_isom_set_sample_group_description(ctx->file, tkw->track_num, for_fragment ? 0 : tkw->nb_samples, aux_type, aux_info, p->value.data.ptr, p->value.data.size, sg_flags);"
    },
    {
        "line": 594,
        "fullcodeline": "u64 mdur = gf_isom_get_media_duration(ctx->file, tkw->track_num);"
    },
    {
        "line": 628,
        "fullcodeline": "GF_FEVT_INIT(evt, GF_FEVT_STOP, tkw->ipid);"
    },
    {
        "line": 629,
        "fullcodeline": "gf_filter_pid_send_event(tkw->ipid, &evt);"
    },
    {
        "line": 631,
        "fullcodeline": "tkw->aborted = GF_TRUE;"
    },
    {
        "line": 40,
        "fullcodeline": "u32 min_pck_dur = gf_filter_pid_get_min_pck_duration(tkw->ipid);"
    },
    {
        "line": 66,
        "fullcodeline": "if (tkw->sample.DTS <= tkw->ts_shift) {"
    },
    {
        "line": 126,
        "fullcodeline": "sap_type=GF_FILTER_SAP_1;"
    },
    {
        "line": 131,
        "fullcodeline": "tkw->sample.IsRAP = SAP_TYPE_2;"
    },
    {
        "line": 162,
        "fullcodeline": "tkw->sample.DTS += 1;"
    },
    {
        "line": 164,
        "fullcodeline": "duration-=1;"
    },
    {
        "line": 175,
        "fullcodeline": "if (diff < tkw->min_neg_ctts)"
    },
    {
        "line": 189,
        "fullcodeline": "if (tkw->raw_samplerate && (tkw->tk_timescale != tkw->raw_samplerate)) {"
    },
    {
        "line": 243,
        "fullcodeline": "tkw->has_append = GF_TRUE;"
    },
    {
        "line": 381,
        "fullcodeline": "if (skp && skp->value.boolean) {"
    },
    {
        "line": 388,
        "fullcodeline": "if (samp_cts > tkw->max_cts) {"
    },
    {
        "line": 393,
        "fullcodeline": "if (tkw->min_cts > samp_cts)"
    },
    {
        "line": 420,
        "fullcodeline": "if (sap_type==GF_FILTER_SAP_4) roll_type = GF_ISOM_SAMPLE_ROLL;"
    },
    {
        "line": 438,
        "fullcodeline": "if (sap_type && !tkw->gdr_type)"
    },
    {
        "line": 459,
        "fullcodeline": "else gf_bs_reassign_buffer(ctx->bs_r, subs->value.data.ptr, subs->value.data.size);"
    },
    {
        "line": 497,
        "fullcodeline": "gf_isom_fragment_add_subsample(ctx->file, tkw->track_id, 0, tkw->sample.dataLength, 0, 0, 0);"
    },
    {
        "line": 567,
        "fullcodeline": "if (aux_type==GF_ISOM_SAMPLE_GROUP_ESGH) {"
    },
    {
        "line": 597,
        "fullcodeline": "if (gf_sys_old_arch_compat()) {"
    },
    {
        "line": 614,
        "fullcodeline": "if (gf_sys_old_arch_compat()) {"
    },
    {
        "line": 67,
        "fullcodeline": "tkw->sample.DTS = tkw->ts_shift - tkw->sample.DTS;"
    },
    {
        "line": 68,
        "fullcodeline": "cts = tkw->ts_shift - cts;"
    },
    {
        "line": 74,
        "fullcodeline": "if (tkw->sample.DTS >= tkw->ts_shift) {"
    },
    {
        "line": 93,
        "fullcodeline": "} else if (tkw->min_ts_seek_plus_one > ts_check + 1) {"
    },
    {
        "line": 176,
        "fullcodeline": "tkw->min_neg_ctts = diff;"
    },
    {
        "line": 190,
        "fullcodeline": "duration *= tkw->tk_timescale;"
    },
    {
        "line": 191,
        "fullcodeline": "duration /= tkw->raw_samplerate;"
    },
    {
        "line": 212,
        "fullcodeline": "e = gf_isom_fragment_add_sample(ctx->file, tkw->track_id, &s, tkw->stsd_idx, ins_dur, 0, 0, 0);"
    },
    {
        "line": 248,
        "fullcodeline": "Bool inject_pps = ctx->pps_inband;"
    },
    {
        "line": 382,
        "fullcodeline": "tkw->clamp_ts_plus_one = 1 + tkw->sample.DTS + tkw->sample.CTS_Offset;"
    },
    {
        "line": 389,
        "fullcodeline": "tkw->max_cts = samp_cts;"
    },
    {
        "line": 390,
        "fullcodeline": "tkw->max_cts_samp_dur = duration;"
    },
    {
        "line": 394,
        "fullcodeline": "tkw->min_cts = samp_cts;"
    },
    {
        "line": 403,
        "fullcodeline": "e = gf_isom_fragment_set_sample_rap_group(ctx->file, tkw->track_id, tkw->samples_in_frag, (sap_type==3) ? GF_TRUE : GF_FALSE, 0);"
    },
    {
        "line": 428,
        "fullcodeline": "e = gf_isom_fragment_set_sample_roll_group(ctx->file, tkw->track_id, tkw->samples_in_frag, roll_type, roll);"
    },
    {
        "line": 439,
        "fullcodeline": "tkw->gdr_type = sap_type;"
    },
    {
        "line": 449,
        "fullcodeline": "gf_isom_fragment_add_subsample(ctx->file, tkw->track_id, 0, insert_subsample_dsi_size, 0, 0, 0);"
    },
    {
        "line": 470,
        "fullcodeline": "gf_isom_fragment_add_subsample(ctx->file, tkw->track_id, flags, subs_size, priority, reserved, discardable);"
    },
    {
        "line": 488,
        "fullcodeline": "insert_subsample_dsi_size = GF_FALSE;"
    },
    {
        "line": 510,
        "fullcodeline": "gf_isom_fragment_set_sample_flags(ctx->file, tkw->track_id, is_leading, depends_on, depended_on, redundant);"
    },
    {
        "line": 532,
        "fullcodeline": "} else if (!strncmp(pname, \"grp_\", 4)) {"
    },
    {
        "line": 545,
        "fullcodeline": "} else if (plen >= 4) {"
    },
    {
        "line": 553,
        "fullcodeline": "char *flags = strstr(pname, \"_z\");"
    },
    {
        "line": 569,
        "fullcodeline": "gf_isom_set_sample_description_restricted(ctx->file, tkw->track_num, tkw->stsd_idx, GF_4CC( 'e', 's', 's', 'g'));"
    },
    {
        "line": 571,
        "fullcodeline": "sg_flags |= 0x40000000;"
    },
    {
        "line": 609,
        "fullcodeline": "tkw->prog_done = mdur * ctx->dur.den;"
    },
    {
        "line": 610,
        "fullcodeline": "tkw->prog_total =  ((u64)tkw->tk_timescale) * ctx->dur.num;"
    },
    {
        "line": 622,
        "fullcodeline": "if ((s32) tkw->nb_samples >= -ctx->dur.num)"
    },
    {
        "line": 42,
        "fullcodeline": "tkw->sample.DTS = prev_dts;"
    },
    {
        "line": 47,
        "fullcodeline": "tkw->sample.DTS += min_pck_dur;"
    },
    {
        "line": 71,
        "fullcodeline": "sample_timing_ok = GF_FALSE;"
    },
    {
        "line": 75,
        "fullcodeline": "tkw->sample.DTS -= tkw->ts_shift;"
    },
    {
        "line": 76,
        "fullcodeline": "cts -= tkw->ts_shift;"
    },
    {
        "line": 94,
        "fullcodeline": "tkw->min_ts_seek_plus_one = ts_check + 1;"
    },
    {
        "line": 132,
        "fullcodeline": "else if ( (sap_type == GF_FILTER_SAP_4) && (tkw->stream_type != GF_STREAM_VISUAL) )"
    },
    {
        "line": 163,
        "fullcodeline": "if (tkw->sample.CTS_Offset) tkw->sample.CTS_Offset -= 1;"
    },
    {
        "line": 217,
        "fullcodeline": "e = gf_isom_add_sample(ctx->file, tkw->track_num, tkw->stsd_idx, &s);"
    },
    {
        "line": 218,
        "fullcodeline": "gf_isom_set_last_sample_duration(ctx->file, tkw->track_num, ins_dur);"
    },
    {
        "line": 236,
        "fullcodeline": "e = gf_isom_fragment_append_data(ctx->file, tkw->track_id, tkw->sample.data, tkw->sample.dataLength, 0);"
    },
    {
        "line": 249,
        "fullcodeline": "if (ctx->xps_inband==XPS_IB_AUTO) {"
    },
    {
        "line": 255,
        "fullcodeline": "if ((tkw->sample.IsRAP || tkw->force_inband_inject || inject_pps) && tkw->xps_inband) {"
    },
    {
        "line": 363,
        "fullcodeline": "if (!e && tkw->cenc_state) {"
    },
    {
        "line": 433,
        "fullcodeline": "e = gf_isom_set_sample_roll_group(ctx->file, tkw->track_num, tkw->nb_samples, roll_type, roll);"
    },
    {
        "line": 452,
        "fullcodeline": "gf_isom_add_subsample(ctx->file, tkw->track_num, tkw->nb_samples, 0, insert_subsample_dsi_size, 0, 0, 0);"
    },
    {
        "line": 473,
        "fullcodeline": "gf_isom_add_subsample(ctx->file, tkw->track_num, tkw->nb_samples, flags, subs_size, priority, reserved, discardable);"
    },
    {
        "line": 478,
        "fullcodeline": "if (first_nal_is_audelim != subs_size) {"
    },
    {
        "line": 513,
        "fullcodeline": "gf_isom_set_sample_flags(ctx->file, tkw->track_num, tkw->nb_samples, is_leading, depends_on, depended_on, redundant);"
    },
    {
        "line": 535,
        "fullcodeline": "is_sample_group = GF_TRUE;"
    },
    {
        "line": 546,
        "fullcodeline": "aux_type = GF_4CC(pname[0], pname[1], pname[2], pname[3]);"
    },
    {
        "line": 547,
        "fullcodeline": "pname+=4;"
    },
    {
        "line": 561,
        "fullcodeline": "aux_info = atoi(pname);"
    },
    {
        "line": 579,
        "fullcodeline": "gf_isom_fragment_set_sample_aux_info(ctx->file, tkw->track_id, tkw->samples_in_frag, aux_type, aux_info, p->value.data.ptr, p->value.data.size);"
    },
    {
        "line": 598,
        "fullcodeline": "if (tkw->stream_type==GF_STREAM_VISUAL) {"
    },
    {
        "line": 615,
        "fullcodeline": "if (gf_timestamp_greater(mdur, tkw->tk_timescale, ctx->dur.num, ctx->dur.den))"
    },
    {
        "line": 623,
        "fullcodeline": "abort = GF_TRUE;"
    },
    {
        "line": 635,
        "fullcodeline": "tkw->prog_done = tkw->nb_samples + tkw->frame_offset;"
    },
    {
        "line": 636,
        "fullcodeline": "tkw->prog_total = tkw->nb_frames;"
    },
    {
        "line": 44,
        "fullcodeline": "if (timescale != tkw->tk_timescale) {"
    },
    {
        "line": 49,
        "fullcodeline": "tkw->sample.DTS = cts;"
    },
    {
        "line": 79,
        "fullcodeline": "sample_timing_ok = GF_FALSE;"
    },
    {
        "line": 97,
        "fullcodeline": "tkw->check_seek_ts = GF_FALSE;"
    },
    {
        "line": 133,
        "fullcodeline": "tkw->sample.IsRAP = SAP_TYPE_1;"
    },
    {
        "line": 241,
        "fullcodeline": "e = gf_isom_append_sample_data(ctx->file, tkw->track_num, tkw->sample.data, tkw->sample.dataLength);"
    },
    {
        "line": 250,
        "fullcodeline": "const GF_PropertyValue *p = gf_filter_pck_get_property(pck, GF_PROP_PCK_XPS_MASK);"
    },
    {
        "line": 258,
        "fullcodeline": "char *au_delim=NULL;"
    },
    {
        "line": 259,
        "fullcodeline": "u32 au_delim_size=0;"
    },
    {
        "line": 260,
        "fullcodeline": "char *pck_data = tkw->sample.data;"
    },
    {
        "line": 261,
        "fullcodeline": "u32 pck_data_len = tkw->sample.dataLength;"
    },
    {
        "line": 270,
        "fullcodeline": "tkw->sample.data = inband_xps;"
    },
    {
        "line": 271,
        "fullcodeline": "tkw->sample.dataLength = inband_xps_size;"
    },
    {
        "line": 332,
        "fullcodeline": "insert_subsample_dsi_size = inband_xps_size;"
    },
    {
        "line": 364,
        "fullcodeline": "e = mp4_mux_cenc_update(ctx, tkw, pck, for_fragment ? CENC_ADD_FRAG : CENC_ADD_NORMAL, tkw->sample.dataLength, insert_subsample_dsi_size);"
    },
    {
        "line": 407,
        "fullcodeline": "} else if (sap_type==3) {"
    },
    {
        "line": 421,
        "fullcodeline": "else if (sap_type==GF_FILTER_SAP_4_PROL) roll_type = GF_ISOM_SAMPLE_PREROLL;"
    },
    {
        "line": 479,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[MP4Mux] inserting inband param after AU delimiter NALU, but sample has subsample information not aligned on NALU (got %d subsample size but expecting %d) - file might be broken!\\n\", subs_size, first_nal_is_audelim));"
    },
    {
        "line": 483,
        "fullcodeline": "gf_isom_fragment_add_subsample(ctx->file, tkw->track_id, 0, insert_subsample_dsi_size, 0, 0, 0);"
    },
    {
        "line": 534,
        "fullcodeline": "if (!strcmp(pname, \"grp_EMSG\") && (ctx->store>=MP4MX_MODE_FRAG)) continue;"
    },
    {
        "line": 554,
        "fullcodeline": "if (flags) flags[0]=0;"
    },
    {
        "line": 555,
        "fullcodeline": "if (pname[0]) aux_info = atoi(pname);"
    },
    {
        "line": 557,
        "fullcodeline": "sscanf(flags+2, \"%x\", &sg_flags);"
    },
    {
        "line": 558,
        "fullcodeline": "flags[0]='_';"
    },
    {
        "line": 582,
        "fullcodeline": "gf_isom_add_sample_aux_info(ctx->file, tkw->track_num, tkw->nb_samples, aux_type, aux_info, p->value.data.ptr, p->value.data.size);"
    },
    {
        "line": 599,
        "fullcodeline": "mdur = tkw->sample.DTS;"
    },
    {
        "line": 604,
        "fullcodeline": "else if (tkw->ts_shift<tkw->tk_timescale/2) {"
    },
    {
        "line": 616,
        "fullcodeline": "abort = GF_TRUE;"
    },
    {
        "line": 618,
        "fullcodeline": "if (gf_timestamp_greater_or_equal(mdur, tkw->tk_timescale, ctx->dur.num, ctx->dur.den))"
    },
    {
        "line": 638,
        "fullcodeline": "u64 data_offset = gf_filter_pck_get_byte_offset(pck);"
    },
    {
        "line": 45,
        "fullcodeline": "tkw->sample.DTS = gf_timestamp_rescale(tkw->sample.DTS, tkw->tk_timescale, timescale);"
    },
    {
        "line": 251,
        "fullcodeline": "if (p && (p->value.uint & (1<<2) ) )"
    },
    {
        "line": 262,
        "fullcodeline": "if (tkw->sample.IsRAP || tkw->force_inband_inject) {"
    },
    {
        "line": 273,
        "fullcodeline": "if (tkw->is_nalu==NALU_AVC) {"
    },
    {
        "line": 408,
        "fullcodeline": "e = gf_isom_set_sample_rap_group(ctx->file, tkw->track_num, tkw->nb_samples, GF_TRUE /*(sap_type==3) ? GF_TRUE : GF_FALSE*/, 0);"
    },
    {
        "line": 486,
        "fullcodeline": "gf_isom_add_subsample(ctx->file, tkw->track_num, tkw->nb_samples, 0, insert_subsample_dsi_size, 0, 0, 0);"
    },
    {
        "line": 605,
        "fullcodeline": "mdur += tkw->ts_shift;"
    },
    {
        "line": 619,
        "fullcodeline": "abort = GF_TRUE;"
    },
    {
        "line": 639,
        "fullcodeline": "if (data_offset == GF_FILTER_NO_BO) {"
    },
    {
        "line": 642,
        "fullcodeline": "if ((data_offset != GF_FILTER_NO_BO) && tkw->down_size) {"
    },
    {
        "line": 252,
        "fullcodeline": "inject_pps = GF_TRUE;"
    },
    {
        "line": 263,
        "fullcodeline": "inband_xps = tkw->inband_hdr;"
    },
    {
        "line": 264,
        "fullcodeline": "inband_xps_size = tkw->inband_hdr_size;"
    },
    {
        "line": 265,
        "fullcodeline": "tkw->force_inband_inject = GF_FALSE;"
    },
    {
        "line": 294,
        "fullcodeline": "tkw->sample.data = au_delim;"
    },
    {
        "line": 295,
        "fullcodeline": "tkw->sample.dataLength = au_delim_size;"
    },
    {
        "line": 296,
        "fullcodeline": "pck_data += au_delim_size;"
    },
    {
        "line": 297,
        "fullcodeline": "pck_data_len -= au_delim_size;"
    },
    {
        "line": 303,
        "fullcodeline": "void *ref=NULL;"
    },
    {
        "line": 304,
        "fullcodeline": "e = gf_isom_fragment_add_sample_ex(ctx->file, tkw->track_id, &tkw->sample, sample_desc_index, duration, 0, 0, 0, &ref, 0);"
    },
    {
        "line": 366,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[MP4Mux] Failed to set sample CENC information: %s\\n\", gf_error_to_string(e) ));"
    },
    {
        "line": 640,
        "fullcodeline": "data_offset = tkw->down_bytes;"
    },
    {
        "line": 643,
        "fullcodeline": "tkw->prog_done = data_offset;"
    },
    {
        "line": 644,
        "fullcodeline": "tkw->prog_total = tkw->down_size;"
    },
    {
        "line": 267,
        "fullcodeline": "inband_xps = tkw->inband_hdr_non_rap;"
    },
    {
        "line": 268,
        "fullcodeline": "inband_xps_size = tkw->inband_hdr_non_rap_size;"
    },
    {
        "line": 274,
        "fullcodeline": "if (pck_data_len >= 2 + tkw->nal_unit_size) {"
    },
    {
        "line": 305,
        "fullcodeline": "if (!e && au_delim) {"
    },
    {
        "line": 308,
        "fullcodeline": "if (!e) {"
    },
    {
        "line": 326,
        "fullcodeline": "e = gf_isom_add_sample(ctx->file, tkw->track_num, sample_desc_index, &tkw->sample);"
    },
    {
        "line": 422,
        "fullcodeline": "else if (tkw->gdr_type==GF_FILTER_SAP_4_PROL) {"
    },
    {
        "line": 275,
        "fullcodeline": "char *nal = pck_data + tkw->nal_unit_size;"
    },
    {
        "line": 283,
        "fullcodeline": "if (pck_data_len >= 3 + tkw->nal_unit_size) {"
    },
    {
        "line": 306,
        "fullcodeline": "e = gf_isom_fragment_append_data(ctx->file, tkw->track_id, inband_xps, inband_xps_size, 0);"
    },
    {
        "line": 327,
        "fullcodeline": "if (au_delim && !e) {"
    },
    {
        "line": 330,
        "fullcodeline": "if (!e) e = gf_isom_append_sample_data(ctx->file, tkw->track_num, pck_data, pck_data_len);"
    },
    {
        "line": 335,
        "fullcodeline": "if (gf_filter_pck_is_blocking_ref(pck)) {"
    },
    {
        "line": 351,
        "fullcodeline": "e = gf_isom_add_sample(ctx->file, tkw->track_num, sample_desc_index, &tkw->sample);"
    },
    {
        "line": 423,
        "fullcodeline": "roll_type = GF_ISOM_SAMPLE_PREROLL_NONE;"
    },
    {
        "line": 276,
        "fullcodeline": "if ((nal[0] & 0x1F) == GF_AVC_NALU_ACCESS_UNIT) {"
    },
    {
        "line": 284,
        "fullcodeline": "char *nal = pck_data + tkw->nal_unit_size;"
    },
    {
        "line": 309,
        "fullcodeline": "if (gf_filter_pck_is_blocking_ref(pck)) {"
    },
    {
        "line": 328,
        "fullcodeline": "e = gf_isom_append_sample_data(ctx->file, tkw->track_num, inband_xps, inband_xps_size);"
    },
    {
        "line": 336,
        "fullcodeline": "e = gf_isom_fragment_add_sample(ctx->file, tkw->track_id, &tkw->sample, sample_desc_index, duration, 0, 0, 0);"
    },
    {
        "line": 352,
        "fullcodeline": "if (!e && !duration) {"
    },
    {
        "line": 647,
        "fullcodeline": "tkw->prog_done = tkw->sample.DTS * tkw->pid_dur.den;"
    },
    {
        "line": 648,
        "fullcodeline": "tkw->prog_total = tkw->pid_dur.num * tkw->tk_timescale;"
    },
    {
        "line": 277,
        "fullcodeline": "first_nal_is_audelim = au_delim_size = 2 + tkw->nal_unit_size;"
    },
    {
        "line": 278,
        "fullcodeline": "au_delim = pck_data;"
    },
    {
        "line": 285,
        "fullcodeline": "if (((nal[0] & 0x7E)>>1) == GF_HEVC_NALU_ACCESS_UNIT) {"
    },
    {
        "line": 310,
        "fullcodeline": "e = gf_isom_fragment_append_data(ctx->file, tkw->track_id, pck_data, pck_data_len, 0);"
    },
    {
        "line": 338,
        "fullcodeline": "gf_filter_pck_ref(&pck);"
    },
    {
        "line": 339,
        "fullcodeline": "GF_FilterPacket *ref = pck;"
    },
    {
        "line": 340,
        "fullcodeline": "e = gf_isom_fragment_add_sample_ex(ctx->file, tkw->track_id, &tkw->sample, sample_desc_index, duration, 0, 0, 0, (void**) &ref, 0);"
    },
    {
        "line": 353,
        "fullcodeline": "gf_isom_set_last_sample_duration(ctx->file, tkw->track_num, 0);"
    },
    {
        "line": 650,
        "fullcodeline": "tkw->prog_done = 0;"
    },
    {
        "line": 651,
        "fullcodeline": "tkw->prog_total = 1;"
    },
    {
        "line": 279,
        "fullcodeline": "if (au_delim_size >= pck_data_len) au_delim = NULL;"
    },
    {
        "line": 286,
        "fullcodeline": "first_nal_is_audelim = au_delim_size = 3 + tkw->nal_unit_size;"
    },
    {
        "line": 287,
        "fullcodeline": "au_delim = pck_data;"
    },
    {
        "line": 312,
        "fullcodeline": "gf_filter_pck_ref(&pck);"
    },
    {
        "line": 313,
        "fullcodeline": "GF_FilterPacket *ref = pck;"
    },
    {
        "line": 314,
        "fullcodeline": "e = gf_isom_fragment_append_data_ex(ctx->file, tkw->track_id, pck_data, pck_data_len, 0, (void**)&ref, au_delim ? au_delim_size : 0);"
    },
    {
        "line": 341,
        "fullcodeline": "if (!ref) {"
    },
    {
        "line": 288,
        "fullcodeline": "if (au_delim_size >= pck_data_len) au_delim = NULL;"
    },
    {
        "line": 315,
        "fullcodeline": "if (!ref) {"
    },
    {
        "line": 342,
        "fullcodeline": "gf_list_add(ctx->ref_pcks, pck);"
    },
    {
        "line": 316,
        "fullcodeline": "gf_list_add(ctx->ref_pcks, pck);"
    },
    {
        "line": 344,
        "fullcodeline": "gf_filter_pck_unref(pck);"
    },
    {
        "line": 318,
        "fullcodeline": "gf_filter_pck_unref(pck);"
    }
]