[
    {
        "line": 6,
        "fullcodeline": "u32 item_id=0;"
    },
    {
        "line": 7,
        "fullcodeline": "u32 scheme_type=0, scheme_version=0, item_type;"
    },
    {
        "line": 8,
        "fullcodeline": "u32 item_codecid=0;"
    },
    {
        "line": 16,
        "fullcodeline": "item_name = item_mime_type = item_encoding = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "gf_isom_get_meta_item_info(read->mov, GF_TRUE, 0, item_idx, &item_id, &item_type, &scheme_type, &scheme_version, NULL, NULL, NULL, &item_name, &item_mime_type, &item_encoding);"
    },
    {
        "line": 23,
        "fullcodeline": "gf_isom_get_meta_image_props(read->mov, GF_TRUE, 0, item_id, &props, NULL);"
    },
    {
        "line": 39,
        "fullcodeline": "esd = gf_media_map_item_esd(read->mov, item_id);"
    },
    {
        "line": 81,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_STREAM_TYPE, &PROP_UINT(GF_STREAM_VISUAL));"
    },
    {
        "line": 82,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CODECID, &PROP_UINT(item_codecid));"
    },
    {
        "line": 83,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_TIMESCALE, &PROP_UINT(1000));"
    },
    {
        "line": 100,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_HIDDEN, props.hidden ? &PROP_BOOL(GF_TRUE) : NULL);"
    },
    {
        "line": 101,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_ALPHA, props.alpha ? &PROP_BOOL(GF_TRUE) : NULL);"
    },
    {
        "line": 102,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_MIRROR, props.mirror ? &PROP_UINT(props.mirror) : NULL);"
    },
    {
        "line": 103,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_ROTATE, props.alpha ? &PROP_UINT(props.angle) : NULL);"
    },
    {
        "line": 126,
        "fullcodeline": "gf_filter_pid_set_property_str(pid, \"meta:mime\", item_mime_type ? &PROP_STRING(item_mime_type) : NULL );"
    },
    {
        "line": 127,
        "fullcodeline": "gf_filter_pid_set_property_str(pid, \"meta:name\", item_name ? &PROP_STRING(item_name) : NULL );"
    },
    {
        "line": 128,
        "fullcodeline": "gf_filter_pid_set_property_str(pid, \"meta:encoding\", item_encoding ? &PROP_STRING(item_encoding) : NULL );"
    },
    {
        "line": 13,
        "fullcodeline": "if (item_idx>gf_isom_get_meta_item_count(read->mov, GF_TRUE, 0))"
    },
    {
        "line": 19,
        "fullcodeline": "if (!item_id) return GF_FALSE;"
    },
    {
        "line": 20,
        "fullcodeline": "if (item_type==GF_ISOM_ITEM_TYPE_AUXI) return GF_FALSE;"
    },
    {
        "line": 21,
        "fullcodeline": "if (read->play_only_track_id && (read->play_only_track_id!=item_id)) return GF_FALSE;"
    },
    {
        "line": 40,
        "fullcodeline": "if (!esd) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (!ch)"
    },
    {
        "line": 64,
        "fullcodeline": "if (!ch) {"
    },
    {
        "line": 73,
        "fullcodeline": "if ((item_codecid==GF_CODECID_HEVC) && gf_isom_meta_item_has_ref(read->mov, GF_TRUE, 0, item_id, GF_ISOM_REF_TBAS)) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (props.width && props.height) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (gf_isom_get_meta_primary_item_id(read->mov, GF_TRUE, 0) == item_id) {"
    },
    {
        "line": 123,
        "fullcodeline": "if (!gf_sys_is_test_mode() && !read->itt)"
    },
    {
        "line": 130,
        "fullcodeline": "if ((item_type == GF_ISOM_SUBTYPE_UNCV) || (item_type == GF_ISOM_ITEM_TYPE_UNCI)) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (item_codecid == GF_CODECID_HEVC_TILES) {"
    },
    {
        "line": 153,
        "fullcodeline": "if (!ch) {"
    },
    {
        "line": 56,
        "fullcodeline": "pid = gf_filter_pid_new(read->filter);"
    },
    {
        "line": 67,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_ID, &PROP_UINT(esd ? esd->ESID : item_id));"
    },
    {
        "line": 71,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_ITEM_ID, &PROP_UINT(item_id));"
    },
    {
        "line": 74,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_TILE_BASE, &PROP_BOOL(GF_TRUE));"
    },
    {
        "line": 85,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_TIMESCALE, &PROP_UINT(1000));"
    },
    {
        "line": 92,
        "fullcodeline": "gf_odf_desc_del((GF_Descriptor *)esd);"
    },
    {
        "line": 96,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_WIDTH, &PROP_UINT(props.width));"
    },
    {
        "line": 97,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_HEIGHT, &PROP_UINT(props.height));"
    },
    {
        "line": 106,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CLAP_W, &PROP_FRAC_INT(props.clap_wnum,props.clap_wden) );"
    },
    {
        "line": 107,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CLAP_H, &PROP_FRAC_INT(props.clap_hnum,props.clap_hden) );"
    },
    {
        "line": 108,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CLAP_X, &PROP_FRAC_INT(props.clap_honum,props.clap_hoden) );"
    },
    {
        "line": 109,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CLAP_Y, &PROP_FRAC_INT(props.clap_vonum,props.clap_voden) );"
    },
    {
        "line": 118,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_PRIMARY_ITEM, &PROP_BOOL(GF_TRUE));"
    },
    {
        "line": 124,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_ITEM_NUM, &PROP_UINT(item_idx) );"
    },
    {
        "line": 131,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_PIXFMT, &PROP_UINT(GF_PIXEL_UNCV) );"
    },
    {
        "line": 132,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CODECID, &PROP_UINT(GF_CODECID_RAW_UNCV) );"
    },
    {
        "line": 133,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_ISOM_SUBTYPE,  &PROP_4CC(GF_ISOM_ITEM_TYPE_UNCI) );"
    },
    {
        "line": 137,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CROP_POS, &PROP_VEC2I_INT(props.hOffset, props.vOffset) );"
    },
    {
        "line": 139,
        "fullcodeline": "u32 base_id = gf_isom_meta_get_item_ref_id(read->mov, GF_TRUE, 0, item_id, GF_ISOM_REF_TBAS, 1);"
    },
    {
        "line": 140,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_DEPENDENCY_ID, base_id ? &PROP_UINT(base_id) : NULL );"
    },
    {
        "line": 145,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_PROTECTION_SCHEME_TYPE, &PROP_4CC(scheme_type) );"
    },
    {
        "line": 146,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_PROTECTION_SCHEME_VERSION, &PROP_UINT(scheme_version) );"
    },
    {
        "line": 147,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_ENCRYPTED, &PROP_BOOL(GF_TRUE) );"
    },
    {
        "line": 149,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_ORIG_STREAM_TYPE, &PROP_UINT(GF_STREAM_VISUAL));"
    },
    {
        "line": 150,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_STREAM_TYPE, &PROP_UINT(GF_STREAM_ENCRYPTED) );"
    },
    {
        "line": 154,
        "fullcodeline": "ch = isor_create_channel(read, pid, 0, item_id, GF_FALSE);"
    },
    {
        "line": 58,
        "fullcodeline": "pid = ch->pid;"
    },
    {
        "line": 59,
        "fullcodeline": "ch->item_id = item_id;"
    },
    {
        "line": 111,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CLAP_W, NULL);"
    },
    {
        "line": 112,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CLAP_H, NULL);"
    },
    {
        "line": 113,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CLAP_X, NULL);"
    },
    {
        "line": 114,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_CLAP_Y, NULL);"
    },
    {
        "line": 120,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_PRIMARY_ITEM, &PROP_BOOL(GF_FALSE));"
    },
    {
        "line": 155,
        "fullcodeline": "if (ch && scheme_type) {"
    },
    {
        "line": 43,
        "fullcodeline": "item_codecid = GF_CODECID_HEVC_TILES;"
    },
    {
        "line": 47,
        "fullcodeline": "item_idx++;"
    },
    {
        "line": 66,
        "fullcodeline": "gf_filter_pid_copy_properties(pid, read->pid);"
    },
    {
        "line": 87,
        "fullcodeline": "gf_filter_pid_set_property(pid, GF_PROP_PID_DECODER_CONFIG, &PROP_DATA_NO_COPY(esd->decoderConfig->decoderSpecificInfo->data, esd->decoderConfig->decoderSpecificInfo->dataLength));"
    },
    {
        "line": 89,
        "fullcodeline": "esd->decoderConfig->decoderSpecificInfo->data=NULL;"
    },
    {
        "line": 90,
        "fullcodeline": "esd->decoderConfig->decoderSpecificInfo->dataLength=0;"
    },
    {
        "line": 156,
        "fullcodeline": "ch->is_cenc = 1;"
    },
    {
        "line": 157,
        "fullcodeline": "ch->is_encrypted = 1;"
    },
    {
        "line": 159,
        "fullcodeline": "isor_declare_pssh(ch);"
    }
]