[
    {
        "line": 4,
        "fullcodeline": "unsigned char *desc = p;"
    },
    {
        "line": 10,
        "fullcodeline": "ript = get_unaligned_be16(&desc[2]);"
    },
    {
        "line": 11,
        "fullcodeline": "pr_debug(\"XCOPY 0xe4: RELATIVE INITIATOR PORT IDENTIFIER: %hu\\n\", ript);"
    },
    {
        "line": 32,
        "fullcodeline": "desig_len = desc[7];"
    },
    {
        "line": 37,
        "fullcodeline": "pr_debug(\"XCOPY 0xe4: desig_len: %d\\n\", (int)desig_len);"
    },
    {
        "line": 15,
        "fullcodeline": "if ((desc[4] & 0x0f) != 0x1) {"
    },
    {
        "line": 19,
        "fullcodeline": "if ((desc[5] & 0x30) != 0x00) {"
    },
    {
        "line": 23,
        "fullcodeline": "if ((desc[5] & 0x0f) != 0x3) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (desig_len != XCOPY_NAA_IEEE_REGEX_LEN) {"
    },
    {
        "line": 41,
        "fullcodeline": "if ((desc[8] & 0xf0) != 0x60) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (cscd_index != xop->stdi && cscd_index != xop->dtdi) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (cscd_index == xop->stdi) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (cscd_index == xop->dtdi) {"
    },
    {
        "line": 16,
        "fullcodeline": "pr_err(\"XCOPY 0xe4: code set of non binary type not supported\\n\");"
    },
    {
        "line": 20,
        "fullcodeline": "pr_err(\"XCOPY 0xe4: association other than LUN not supported\\n\");"
    },
    {
        "line": 24,
        "fullcodeline": "pr_err(\"XCOPY 0xe4: designator type unsupported: 0x%02x\\n\","
    },
    {
        "line": 34,
        "fullcodeline": "pr_err(\"XCOPY 0xe4: invalid desig_len: %d\\n\", (int)desig_len);"
    },
    {
        "line": 42,
        "fullcodeline": "pr_err(\"XCOPY 0xe4: Unsupported DESIGNATOR TYPE: 0x%02x\\n\","
    },
    {
        "line": 48,
        "fullcodeline": "pr_debug(\"XCOPY 0xe4: ignoring CSCD entry %d - neither src nor \""
    },
    {
        "line": 54,
        "fullcodeline": "memcpy(&xop->src_tid_wwn[0], &desc[8], XCOPY_NAA_IEEE_REGEX_LEN);"
    },
    {
        "line": 68,
        "fullcodeline": "memcpy(&xop->dst_tid_wwn[0], &desc[8], XCOPY_NAA_IEEE_REGEX_LEN);"
    },
    {
        "line": 17,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 21,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 25,
        "fullcodeline": "(desc[5] & 0x0f));"
    },
    {
        "line": 26,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 35,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 43,
        "fullcodeline": "(desc[8] & 0xf0));"
    },
    {
        "line": 44,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 58,
        "fullcodeline": "if (!memcmp(&xop->local_dev_wwn[0], &xop->src_tid_wwn[0],"
    },
    {
        "line": 75,
        "fullcodeline": "if (!memcmp(&xop->local_dev_wwn[0], &xop->dst_tid_wwn[0],"
    },
    {
        "line": 60,
        "fullcodeline": "xop->op_origin = XCOL_SOURCE_RECV_OP;"
    },
    {
        "line": 61,
        "fullcodeline": "xop->src_dev = se_cmd->se_dev;"
    },
    {
        "line": 62,
        "fullcodeline": "pr_debug(\"XCOPY 0xe4: Set xop->src_dev %p from source\""
    },
    {
        "line": 77,
        "fullcodeline": "xop->op_origin = XCOL_DEST_RECV_OP;"
    },
    {
        "line": 78,
        "fullcodeline": "xop->dst_dev = se_cmd->se_dev;"
    },
    {
        "line": 79,
        "fullcodeline": "pr_debug(\"XCOPY 0xe4: Set xop->dst_dev: %p from destination\""
    }
]