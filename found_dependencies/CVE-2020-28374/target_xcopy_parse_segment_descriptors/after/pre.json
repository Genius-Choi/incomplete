[
    {
        "line": 5,
        "fullcodeline": "unsigned char *desc = p;"
    },
    {
        "line": 6,
        "fullcodeline": "unsigned int start = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int offset = sdll % XCOPY_SEGMENT_DESC_LEN, rc, ret = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "*sense_ret = TCM_INVALID_PARAMETER_LIST;"
    },
    {
        "line": 11,
        "fullcodeline": "if (offset != 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (sdll > RCR_OP_MAX_SG_DESC_COUNT * XCOPY_SEGMENT_DESC_LEN) {"
    },
    {
        "line": 25,
        "fullcodeline": "while (start < sdll) {"
    },
    {
        "line": 50,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 12,
        "fullcodeline": "pr_err(\"XCOPY segment descriptor list length is not\""
    },
    {
        "line": 14,
        "fullcodeline": "*sense_ret = TCM_UNSUPPORTED_SEGMENT_DESC_TYPE_CODE;"
    },
    {
        "line": 21,
        "fullcodeline": "*sense_ret = TCM_TOO_MANY_SEGMENT_DESCS;"
    },
    {
        "line": 15,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 22,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 31,
        "fullcodeline": "rc = target_xcopy_parse_segdesc_02(se_cmd, xop, desc);"
    },
    {
        "line": 35,
        "fullcodeline": "ret++;"
    },
    {
        "line": 36,
        "fullcodeline": "start += XCOPY_SEGMENT_DESC_LEN;"
    },
    {
        "line": 37,
        "fullcodeline": "desc += XCOPY_SEGMENT_DESC_LEN;"
    }
]