[
    {
        "line": 13,
        "fullcodeline": "int\t\tno = -1;"
    },
    {
        "line": 14,
        "fullcodeline": "fptr_T\tfunc_all = (fptr_T)NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "fptr_T\tfunc_one = (fptr_T)NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "linenr_T\tclnum = 0;\t// init for GCC"
    },
    {
        "line": 17,
        "fullcodeline": "int\t\tlen = 0;\t// init for GCC"
    },
    {
        "line": 22,
        "fullcodeline": "int\t\tcopy = flags & REGSUB_COPY;"
    },
    {
        "line": 40,
        "fullcodeline": "src = source;"
    },
    {
        "line": 41,
        "fullcodeline": "dst = dest;"
    },
    {
        "line": 25,
        "fullcodeline": "if ((source == NULL && expr == NULL) || dest == NULL)"
    },
    {
        "line": 487,
        "fullcodeline": "return (int)((dst - dest) + 1);"
    },
    {
        "line": 27,
        "fullcodeline": "iemsg(e_null_argument);"
    },
    {
        "line": 46,
        "fullcodeline": "if (expr != NULL || (source[0] == '\\\\' && source[1] == '='))"
    },
    {
        "line": 484,
        "fullcodeline": "*dst = NUL;"
    },
    {
        "line": 189,
        "fullcodeline": "while ((c = *src++) != NUL)"
    },
    {
        "line": 191,
        "fullcodeline": "if (c == '&' && (flags & REGSUB_MAGIC))"
    },
    {
        "line": 192,
        "fullcodeline": "no = 0;"
    },
    {
        "line": 336,
        "fullcodeline": "dst++;"
    },
    {
        "line": 246,
        "fullcodeline": "if (c == '\\\\' && *src != NUL)"
    },
    {
        "line": 280,
        "fullcodeline": "if (func_one != (fptr_T)NULL)"
    },
    {
        "line": 480,
        "fullcodeline": "no = -1;"
    },
    {
        "line": 193,
        "fullcodeline": "else if (c == '\\\\' && *src != NUL)"
    },
    {
        "line": 224,
        "fullcodeline": "if (c == K_SPECIAL && src[0] != NUL && src[1] != NUL)"
    },
    {
        "line": 282,
        "fullcodeline": "func_one = (fptr_T)(func_one(&cc, c));"
    },
    {
        "line": 291,
        "fullcodeline": "int totlen = mb_ptr2len(src - 1);"
    },
    {
        "line": 292,
        "fullcodeline": "int charlen = mb_char2len(cc);"
    },
    {
        "line": 303,
        "fullcodeline": "dst += charlen - 1;"
    },
    {
        "line": 325,
        "fullcodeline": "src += totlen - 1;"
    },
    {
        "line": 363,
        "fullcodeline": "if (s != NULL)"
    },
    {
        "line": 342,
        "fullcodeline": "clnum = rex.reg_mmatch->startpos[no].lnum;"
    },
    {
        "line": 251,
        "fullcodeline": "case 'r':\tc = CAR;\t++src;\tbreak;"
    },
    {
        "line": 252,
        "fullcodeline": "case 'n':\tc = NL;\t\t++src;\tbreak;"
    },
    {
        "line": 253,
        "fullcodeline": "case 't':\tc = TAB;\t++src;\tbreak;"
    },
    {
        "line": 256,
        "fullcodeline": "case 'b':\tc = Ctrl_H;\t++src;\tbreak;"
    },
    {
        "line": 273,
        "fullcodeline": "c = *src++;"
    },
    {
        "line": 283,
        "fullcodeline": "else if (func_all != (fptr_T)NULL)"
    },
    {
        "line": 301,
        "fullcodeline": "mb_char2bytes(cc, dst);"
    },
    {
        "line": 306,
        "fullcodeline": "int clen = utf_ptr2len(src - 1);"
    },
    {
        "line": 357,
        "fullcodeline": "s = rex.reg_match->startp[no];"
    },
    {
        "line": 195,
        "fullcodeline": "if (*src == '&' && !(flags & REGSUB_MAGIC))"
    },
    {
        "line": 197,
        "fullcodeline": "++src;"
    },
    {
        "line": 198,
        "fullcodeline": "no = 0;"
    },
    {
        "line": 240,
        "fullcodeline": "dst += 3;"
    },
    {
        "line": 241,
        "fullcodeline": "src += 2;"
    },
    {
        "line": 260,
        "fullcodeline": "default:\tif (flags & REGSUB_BACKSLASH)"
    },
    {
        "line": 277,
        "fullcodeline": "c = mb_ptr2char(src - 1);"
    },
    {
        "line": 285,
        "fullcodeline": "func_all = (fptr_T)(func_all(&cc, c));"
    },
    {
        "line": 310,
        "fullcodeline": "if (clen < totlen)"
    },
    {
        "line": 334,
        "fullcodeline": "*dst = cc;"
    },
    {
        "line": 343,
        "fullcodeline": "if (clnum < 0 || rex.reg_mmatch->endpos[no].lnum < 0)"
    },
    {
        "line": 344,
        "fullcodeline": "s = NULL;"
    },
    {
        "line": 358,
        "fullcodeline": "if (rex.reg_match->endp[no] == NULL)"
    },
    {
        "line": 234,
        "fullcodeline": "*dst++ = c;"
    },
    {
        "line": 235,
        "fullcodeline": "*dst++ = *src++;"
    },
    {
        "line": 236,
        "fullcodeline": "*dst++ = *src++;"
    },
    {
        "line": 271,
        "fullcodeline": "++dst;"
    },
    {
        "line": 287,
        "fullcodeline": "cc = c;"
    },
    {
        "line": 322,
        "fullcodeline": "dst += totlen - clen;"
    },
    {
        "line": 347,
        "fullcodeline": "s = reg_getline(clnum) + rex.reg_mmatch->startpos[no].col;"
    },
    {
        "line": 359,
        "fullcodeline": "s = NULL;"
    },
    {
        "line": 367,
        "fullcodeline": "if (len == 0)"
    },
    {
        "line": 348,
        "fullcodeline": "if (rex.reg_mmatch->endpos[no].lnum == clnum)"
    },
    {
        "line": 361,
        "fullcodeline": "len = (int)(rex.reg_match->endp[no] - s);"
    },
    {
        "line": 200,
        "fullcodeline": "else if ('0' <= *src && *src <= '9')"
    },
    {
        "line": 202,
        "fullcodeline": "no = *src++ - '0';"
    },
    {
        "line": 269,
        "fullcodeline": "*dst = '\\\\';"
    },
    {
        "line": 349,
        "fullcodeline": "len = rex.reg_mmatch->endpos[no].col"
    },
    {
        "line": 320,
        "fullcodeline": "(size_t)(totlen - clen));"
    },
    {
        "line": 352,
        "fullcodeline": "len = (int)STRLEN(s);"
    },
    {
        "line": 382,
        "fullcodeline": "++dst;"
    },
    {
        "line": 383,
        "fullcodeline": "s = reg_getline(++clnum);"
    },
    {
        "line": 392,
        "fullcodeline": "else if (*s == NUL) // we hit NUL."
    },
    {
        "line": 204,
        "fullcodeline": "else if (vim_strchr((char_u *)\"uUlLeE\", *src))"
    },
    {
        "line": 314,
        "fullcodeline": "if (dst + totlen - clen > dest + destlen)"
    },
    {
        "line": 319,
        "fullcodeline": "mch_memmove(dst + 1, src - 1 + clen,"
    },
    {
        "line": 371,
        "fullcodeline": "if (rex.reg_mmatch->endpos[no].lnum == clnum)"
    },
    {
        "line": 384,
        "fullcodeline": "if (rex.reg_mmatch->endpos[no].lnum == clnum)"
    },
    {
        "line": 380,
        "fullcodeline": "*dst = CAR;"
    },
    {
        "line": 385,
        "fullcodeline": "len = rex.reg_mmatch->endpos[no].col;"
    },
    {
        "line": 475,
        "fullcodeline": "++s;"
    },
    {
        "line": 476,
        "fullcodeline": "--len;"
    },
    {
        "line": 387,
        "fullcodeline": "len = (int)STRLEN(s);"
    },
    {
        "line": 395,
        "fullcodeline": "iemsg(e_damaged_match_string);"
    },
    {
        "line": 206,
        "fullcodeline": "switch (*src++)"
    },
    {
        "line": 208,
        "fullcodeline": "case 'u':   func_one = (fptr_T)do_upper;"
    },
    {
        "line": 210,
        "fullcodeline": "case 'U':   func_all = (fptr_T)do_Upper;"
    },
    {
        "line": 212,
        "fullcodeline": "case 'l':   func_one = (fptr_T)do_lower;"
    },
    {
        "line": 214,
        "fullcodeline": "case 'L':   func_all = (fptr_T)do_Lower;"
    },
    {
        "line": 217,
        "fullcodeline": "case 'E':   func_one = func_all = (fptr_T)NULL;"
    },
    {
        "line": 400,
        "fullcodeline": "if ((flags & REGSUB_BACKSLASH)"
    },
    {
        "line": 401,
        "fullcodeline": "&& (*s == CAR || *s == '\\\\'))"
    },
    {
        "line": 419,
        "fullcodeline": "dst += 2;"
    },
    {
        "line": 472,
        "fullcodeline": "dst++;"
    },
    {
        "line": 416,
        "fullcodeline": "dst[0] = '\\\\';"
    },
    {
        "line": 417,
        "fullcodeline": "dst[1] = *s;"
    },
    {
        "line": 428,
        "fullcodeline": "if (func_one != (fptr_T)NULL)"
    },
    {
        "line": 424,
        "fullcodeline": "c = mb_ptr2char(s);"
    },
    {
        "line": 430,
        "fullcodeline": "func_one = (fptr_T)(func_one(&cc, c));"
    },
    {
        "line": 449,
        "fullcodeline": "s += l;"
    },
    {
        "line": 450,
        "fullcodeline": "len -= l;"
    },
    {
        "line": 451,
        "fullcodeline": "charlen = mb_char2len(cc);"
    },
    {
        "line": 461,
        "fullcodeline": "dst += charlen - 1;"
    },
    {
        "line": 426,
        "fullcodeline": "c = *s;"
    },
    {
        "line": 431,
        "fullcodeline": "else if (func_all != (fptr_T)NULL)"
    },
    {
        "line": 445,
        "fullcodeline": "l = utf_ptr2len(s) - 1;"
    },
    {
        "line": 459,
        "fullcodeline": "mb_char2bytes(cc, dst);"
    },
    {
        "line": 433,
        "fullcodeline": "func_all = (fptr_T)(func_all(&cc, c));"
    },
    {
        "line": 447,
        "fullcodeline": "l = mb_ptr2len(s) - 1;"
    },
    {
        "line": 470,
        "fullcodeline": "*dst = cc;"
    },
    {
        "line": 435,
        "fullcodeline": "cc = c;"
    }
]