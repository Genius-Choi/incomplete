[
    {
        "line": 8,
        "fullcodeline": "while ((s = mcs_recv(&channel, is_fastpath, &fastpath_hdr)) != NULL)"
    },
    {
        "line": 10,
        "fullcodeline": "if (*is_fastpath == True)"
    },
    {
        "line": 24,
        "fullcodeline": "if (g_encryption || (!g_licence_issued && !g_licence_error_result))"
    },
    {
        "line": 85,
        "fullcodeline": "if (channel != MCS_GLOBAL_CHANNEL)"
    },
    {
        "line": 15,
        "fullcodeline": "fastpath_flags = (fastpath_hdr & 0xC0) >> 6;"
    },
    {
        "line": 27,
        "fullcodeline": "in_uint16_le(s, sec_flags);"
    },
    {
        "line": 28,
        "fullcodeline": "in_uint8s(s, 2);\t/* skip sec_flags_hi */"
    },
    {
        "line": 87,
        "fullcodeline": "channel_process(s, channel);"
    },
    {
        "line": 16,
        "fullcodeline": "if (fastpath_flags & FASTPATH_OUTPUT_ENCRYPTED)"
    },
    {
        "line": 18,
        "fullcodeline": "in_uint8s(s, 8);\t/* signature */"
    },
    {
        "line": 19,
        "fullcodeline": "sec_decrypt(s->p, s->end - s->p);"
    },
    {
        "line": 32,
        "fullcodeline": "if (sec_flags & SEC_ENCRYPT)"
    },
    {
        "line": 38,
        "fullcodeline": "if (sec_flags & SEC_LICENSE_PKT)"
    },
    {
        "line": 44,
        "fullcodeline": "if (sec_flags & SEC_REDIRECTION_PKT)"
    },
    {
        "line": 81,
        "fullcodeline": "s->p -= 4;"
    },
    {
        "line": 34,
        "fullcodeline": "in_uint8s(s, 8);\t/* signature */"
    },
    {
        "line": 35,
        "fullcodeline": "sec_decrypt(s->p, s->end - s->p);"
    },
    {
        "line": 40,
        "fullcodeline": "licence_process(s);"
    },
    {
        "line": 48,
        "fullcodeline": "in_uint8s(s, 8);\t/* signature */"
    },
    {
        "line": 49,
        "fullcodeline": "sec_decrypt(s->p, s->end - s->p);"
    },
    {
        "line": 76,
        "fullcodeline": "if (sec_flags & SEC_LICENSE_PKT)"
    },
    {
        "line": 52,
        "fullcodeline": "if (s->p[0] == 0 && s->p[1] == 4)"
    },
    {
        "line": 78,
        "fullcodeline": "licence_process(s);"
    },
    {
        "line": 60,
        "fullcodeline": "swapbyte = s->p[0];"
    },
    {
        "line": 62,
        "fullcodeline": "s->p[2] = swapbyte;"
    },
    {
        "line": 64,
        "fullcodeline": "swapbyte = s->p[1];"
    },
    {
        "line": 66,
        "fullcodeline": "s->p[3] = swapbyte;"
    },
    {
        "line": 68,
        "fullcodeline": "swapbyte = s->p[2];"
    },
    {
        "line": 69,
        "fullcodeline": "s->p[2] = s->p[3];"
    },
    {
        "line": 70,
        "fullcodeline": "s->p[3] = swapbyte;"
    }
]