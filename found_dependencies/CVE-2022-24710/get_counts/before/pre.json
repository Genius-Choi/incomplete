[
    {
        "line": 13,
        "fullcodeline": "form = ReportsForm(request.POST)"
    },
    {
        "line": 19,
        "fullcodeline": "data = generate_counts("
    },
    {
        "line": 29,
        "fullcodeline": "headers = ("
    },
    {
        "line": 78,
        "fullcodeline": "result = [start]"
    },
    {
        "line": 118,
        "fullcodeline": "result.append(end)"
    },
    {
        "line": 3,
        "fullcodeline": "if project is None:"
    },
    {
        "line": 15,
        "fullcodeline": "if not form.is_valid():"
    },
    {
        "line": 26,
        "fullcodeline": "if form.cleaned_data[\"style\"] == \"json\":"
    },
    {
        "line": 80,
        "fullcodeline": "for item in data:"
    },
    {
        "line": 120,
        "fullcodeline": "return HttpResponse(\"\\n\".join(result), content_type=f\"{mime}; charset=utf-8\")"
    },
    {
        "line": 4,
        "fullcodeline": "obj = None"
    },
    {
        "line": 5,
        "fullcodeline": "kwargs = {}"
    },
    {
        "line": 16,
        "fullcodeline": "show_form_errors(request, form)"
    },
    {
        "line": 59,
        "fullcodeline": "start = HTML_HEADING.format(\"\".join(f\"<th>{h}</th>\" for h in headers))"
    },
    {
        "line": 60,
        "fullcodeline": "row_start = \"<tr>\""
    },
    {
        "line": 62,
        "fullcodeline": "row_end = \"</tr>\""
    },
    {
        "line": 63,
        "fullcodeline": "mime = \"text/html\""
    },
    {
        "line": 64,
        "fullcodeline": "end = \"</table>\""
    },
    {
        "line": 66,
        "fullcodeline": "start = \"{0}\\n{1} {2}\\n{0}\".format("
    },
    {
        "line": 71,
        "fullcodeline": "row_start = \"\""
    },
    {
        "line": 72,
        "fullcodeline": "cell_name = \"{0:40} \""
    },
    {
        "line": 73,
        "fullcodeline": "cell_count = \"{0:24} \""
    },
    {
        "line": 74,
        "fullcodeline": "row_end = \"\""
    },
    {
        "line": 75,
        "fullcodeline": "mime = \"text/plain\""
    },
    {
        "line": 76,
        "fullcodeline": "end = RST_HEADING"
    },
    {
        "line": 6,
        "fullcodeline": "elif component is None:"
    },
    {
        "line": 17,
        "fullcodeline": "return redirect_param(obj or \"home\", \"#reports\")"
    },
    {
        "line": 27,
        "fullcodeline": "return JsonResponse(data=data, safe=False)"
    },
    {
        "line": 61,
        "fullcodeline": "cell_name = cell_count = \"<td>{0}</td>\\n\""
    },
    {
        "line": 83,
        "fullcodeline": "result.append("
    },
    {
        "line": 7,
        "fullcodeline": "obj = get_project(request, project)"
    },
    {
        "line": 8,
        "fullcodeline": "kwargs = {\"project\": obj}"
    },
    {
        "line": 10,
        "fullcodeline": "obj = get_component(request, project, component)"
    },
    {
        "line": 11,
        "fullcodeline": "kwargs = {\"component\": obj}"
    },
    {
        "line": 20,
        "fullcodeline": "None if request.user.has_perm(\"reports.view\", obj) else request.user,"
    },
    {
        "line": 82,
        "fullcodeline": "result.append(row_start)"
    },
    {
        "line": 84,
        "fullcodeline": "\"\".join("
    },
    {
        "line": 116,
        "fullcodeline": "result.append(row_end)"
    },
    {
        "line": 68,
        "fullcodeline": "\" \".join(f\"{h:40}\" for h in headers[:2]),"
    },
    {
        "line": 69,
        "fullcodeline": "\" \".join(f\"{h:24}\" for h in headers[2:]),"
    },
    {
        "line": 85,
        "fullcodeline": "("
    },
    {
        "line": 86,
        "fullcodeline": "cell_name.format(item[\"name\"] or \"Anonymous\"),"
    },
    {
        "line": 87,
        "fullcodeline": "cell_name.format(item[\"email\"] or \"\"),"
    },
    {
        "line": 88,
        "fullcodeline": "cell_count.format(item[\"count\"]),"
    },
    {
        "line": 89,
        "fullcodeline": "cell_count.format(item[\"edits\"]),"
    },
    {
        "line": 90,
        "fullcodeline": "cell_count.format(item[\"words\"]),"
    },
    {
        "line": 91,
        "fullcodeline": "cell_count.format(item[\"chars\"]),"
    },
    {
        "line": 92,
        "fullcodeline": "cell_count.format(item[\"t_words\"]),"
    },
    {
        "line": 93,
        "fullcodeline": "cell_count.format(item[\"t_chars\"]),"
    },
    {
        "line": 94,
        "fullcodeline": "cell_count.format(item[\"count_new\"]),"
    },
    {
        "line": 95,
        "fullcodeline": "cell_count.format(item[\"edits_new\"]),"
    },
    {
        "line": 96,
        "fullcodeline": "cell_count.format(item[\"words_new\"]),"
    },
    {
        "line": 97,
        "fullcodeline": "cell_count.format(item[\"chars_new\"]),"
    },
    {
        "line": 98,
        "fullcodeline": "cell_count.format(item[\"t_words_new\"]),"
    },
    {
        "line": 99,
        "fullcodeline": "cell_count.format(item[\"t_chars_new\"]),"
    },
    {
        "line": 100,
        "fullcodeline": "cell_count.format(item[\"count_approve\"]),"
    },
    {
        "line": 101,
        "fullcodeline": "cell_count.format(item[\"edits_approve\"]),"
    },
    {
        "line": 102,
        "fullcodeline": "cell_count.format(item[\"words_approve\"]),"
    },
    {
        "line": 103,
        "fullcodeline": "cell_count.format(item[\"chars_approve\"]),"
    },
    {
        "line": 104,
        "fullcodeline": "cell_count.format(item[\"t_words_approve\"]),"
    },
    {
        "line": 105,
        "fullcodeline": "cell_count.format(item[\"t_chars_approve\"]),"
    },
    {
        "line": 106,
        "fullcodeline": "cell_count.format(item[\"count_edit\"]),"
    },
    {
        "line": 107,
        "fullcodeline": "cell_count.format(item[\"edits_edit\"]),"
    },
    {
        "line": 108,
        "fullcodeline": "cell_count.format(item[\"words_edit\"]),"
    },
    {
        "line": 109,
        "fullcodeline": "cell_count.format(item[\"chars_edit\"]),"
    },
    {
        "line": 110,
        "fullcodeline": "cell_count.format(item[\"t_words_edit\"]),"
    },
    {
        "line": 111,
        "fullcodeline": "cell_count.format(item[\"t_chars_edit\"]),"
    }
]