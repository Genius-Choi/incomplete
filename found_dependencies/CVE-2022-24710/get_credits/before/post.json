[
    {
        "line": 13,
        "fullcodeline": "form = ReportsForm(request.POST)"
    },
    {
        "line": 19,
        "fullcodeline": "data = generate_credits("
    },
    {
        "line": 50,
        "fullcodeline": "result = [start]"
    },
    {
        "line": 63,
        "fullcodeline": "result.append(end)"
    },
    {
        "line": 3,
        "fullcodeline": "if project is None:"
    },
    {
        "line": 15,
        "fullcodeline": "if not form.is_valid():"
    },
    {
        "line": 26,
        "fullcodeline": "if form.cleaned_data[\"style\"] == \"json\":"
    },
    {
        "line": 29,
        "fullcodeline": "if form.cleaned_data[\"style\"] == \"html\":"
    },
    {
        "line": 52,
        "fullcodeline": "for language in data:"
    },
    {
        "line": 65,
        "fullcodeline": "return HttpResponse(\"\\n\".join(result), content_type=f\"{mime}; charset=utf-8\")"
    },
    {
        "line": 4,
        "fullcodeline": "obj = None"
    },
    {
        "line": 5,
        "fullcodeline": "kwargs = {\"translation__isnull\": False}"
    },
    {
        "line": 16,
        "fullcodeline": "show_form_errors(request, form)"
    },
    {
        "line": 20,
        "fullcodeline": "None if request.user.has_perm(\"reports.view\", obj) else request.user,"
    },
    {
        "line": 30,
        "fullcodeline": "start = \"<table>\""
    },
    {
        "line": 31,
        "fullcodeline": "row_start = \"<tr>\""
    },
    {
        "line": 32,
        "fullcodeline": "language_format = \"<th>{0}</th>\""
    },
    {
        "line": 33,
        "fullcodeline": "translator_start = \"<td><ul>\""
    },
    {
        "line": 34,
        "fullcodeline": "translator_format = '<li><a href=\"mailto:{0}\">{1}</a> ({2})</li>'"
    },
    {
        "line": 35,
        "fullcodeline": "translator_end = \"</ul></td>\""
    },
    {
        "line": 36,
        "fullcodeline": "row_end = \"</tr>\""
    },
    {
        "line": 37,
        "fullcodeline": "mime = \"text/html\""
    },
    {
        "line": 38,
        "fullcodeline": "end = \"</table>\""
    },
    {
        "line": 40,
        "fullcodeline": "start = \"\""
    },
    {
        "line": 41,
        "fullcodeline": "row_start = \"\""
    },
    {
        "line": 42,
        "fullcodeline": "language_format = \"* {0}\\n\""
    },
    {
        "line": 43,
        "fullcodeline": "translator_start = \"\""
    },
    {
        "line": 44,
        "fullcodeline": "translator_format = \"    * {1} <{0}> ({2})\""
    },
    {
        "line": 45,
        "fullcodeline": "translator_end = \"\""
    },
    {
        "line": 46,
        "fullcodeline": "row_end = \"\""
    },
    {
        "line": 47,
        "fullcodeline": "mime = \"text/plain\""
    },
    {
        "line": 48,
        "fullcodeline": "end = \"\""
    },
    {
        "line": 6,
        "fullcodeline": "elif component is None:"
    },
    {
        "line": 17,
        "fullcodeline": "return redirect_param(obj or \"home\", \"#reports\")"
    },
    {
        "line": 27,
        "fullcodeline": "return JsonResponse(data=data, safe=False)"
    },
    {
        "line": 54,
        "fullcodeline": "result.append(row_start)"
    },
    {
        "line": 55,
        "fullcodeline": "result.append(language_format.format(name))"
    },
    {
        "line": 56,
        "fullcodeline": "result.append("
    },
    {
        "line": 61,
        "fullcodeline": "result.append(row_end)"
    },
    {
        "line": 7,
        "fullcodeline": "obj = get_project(request, project)"
    },
    {
        "line": 8,
        "fullcodeline": "kwargs = {\"translation__component__project\": obj}"
    },
    {
        "line": 10,
        "fullcodeline": "obj = get_component(request, project, component)"
    },
    {
        "line": 11,
        "fullcodeline": "kwargs = {\"translation__component\": obj}"
    },
    {
        "line": 53,
        "fullcodeline": "name, translators = language.popitem()"
    },
    {
        "line": 57,
        "fullcodeline": "translator_start"
    },
    {
        "line": 58,
        "fullcodeline": "+ \"\\n\".join(translator_format.format(*t) for t in translators)"
    }
]