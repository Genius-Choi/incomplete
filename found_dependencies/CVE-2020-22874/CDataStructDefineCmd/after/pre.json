[
    {
        "line": 5,
        "fullcodeline": "Jsi_RC rc = JSI_OK;"
    },
    {
        "line": 6,
        "fullcodeline": "Jsi_OptionTypedef *st = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "jsi_csInitType(interp);"
    },
    {
        "line": 8,
        "fullcodeline": "Jsi_Value *eval = NULL, *val = Jsi_ValueArrayIndex(interp, args, 0),"
    },
    {
        "line": 9,
        "fullcodeline": "*flds = Jsi_ValueArrayIndex(interp, args, 1);"
    },
    {
        "line": 10,
        "fullcodeline": "int vlen, flen, i, argc, clen = 0, arrCnt=0;"
    },
    {
        "line": 11,
        "fullcodeline": "Jsi_DString fStr = {};"
    },
    {
        "line": 12,
        "fullcodeline": "char **argv = NULL, *cmt, *eq, *cp, *ce, *cpval, ocp;"
    },
    {
        "line": 13,
        "fullcodeline": "const char *vstr = Jsi_ValueString(interp, val, &vlen),"
    },
    {
        "line": 14,
        "fullcodeline": "*fstr = Jsi_ValueString(interp, flds, &flen);"
    },
    {
        "line": 33,
        "fullcodeline": "memset(recs, 0, sizeof(recs));"
    },
    {
        "line": 34,
        "fullcodeline": "sl = recs+argc+1;"
    },
    {
        "line": 36,
        "fullcodeline": "SIGINIT(sl, OPTS_STRUCT);"
    },
    {
        "line": 183,
        "fullcodeline": "recs[argc].id = JSI_OPTION_END;"
    },
    {
        "line": 184,
        "fullcodeline": "rc = jsi_csSetupStruct(interp, sl, recs, recs, argc, &st, arrCnt);"
    },
    {
        "line": 189,
        "fullcodeline": "sl = jsi_csGetStructSpec(st->extData);"
    },
    {
        "line": 190,
        "fullcodeline": "sf = jsi_csGetFieldSpec(sl->extData);"
    },
    {
        "line": 30,
        "fullcodeline": "if (argc>200)"
    },
    {
        "line": 32,
        "fullcodeline": "Jsi_StructSpec *sl, *sf, recs[argc+2];"
    },
    {
        "line": 47,
        "fullcodeline": "if (jsi_csStructGet(interp, sl->name)) {"
    },
    {
        "line": 51,
        "fullcodeline": "for (i = 0; i<argc; i++) {"
    },
    {
        "line": 193,
        "fullcodeline": "for (i = 0; i<argc && flds; i++) {"
    },
    {
        "line": 204,
        "fullcodeline": "if (rc != JSI_OK && st)"
    },
    {
        "line": 18,
        "fullcodeline": "Jsi_DString tStr = {fstr};"
    },
    {
        "line": 19,
        "fullcodeline": "fstr=jsi_TrimStr(Jsi_DSValue(&tStr));"
    },
    {
        "line": 20,
        "fullcodeline": "Jsi_SplitStr(fstr, &argc, &argv, (cmt?\"\\n\":\";\"), &fStr);"
    },
    {
        "line": 38,
        "fullcodeline": "sl->name = Jsi_KeyAdd(interp, vstr);"
    },
    {
        "line": 43,
        "fullcodeline": "if (!Jsi_StrIsAlnum(sl->name)) {"
    },
    {
        "line": 44,
        "fullcodeline": "rc = Jsi_LogError(\"invalid struct name: %s\", sl->name);"
    },
    {
        "line": 48,
        "fullcodeline": "rc = Jsi_LogError(\"struct already exists: %s\", sl->name);"
    },
    {
        "line": 52,
        "fullcodeline": "Jsi_Number numVal = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "Jsi_Value *inival = NULL;"
    },
    {
        "line": 55,
        "fullcodeline": "sf = recs+i;"
    },
    {
        "line": 56,
        "fullcodeline": "SIGINIT(sf, OPTS_FIELD);"
    },
    {
        "line": 163,
        "fullcodeline": "bool isEnum = (sf->type && (sf->type->flags&jsi_CTYP_ENUM));"
    },
    {
        "line": 185,
        "fullcodeline": "if (rc != JSI_OK || !st) {"
    },
    {
        "line": 186,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 192,
        "fullcodeline": "flds = eval;"
    },
    {
        "line": 194,
        "fullcodeline": "val = Jsi_ValueArrayIndex(interp, flds, i);"
    },
    {
        "line": 16,
        "fullcodeline": "cmt = Jsi_Strstr(fstr, \"//\");"
    },
    {
        "line": 17,
        "fullcodeline": "eq = Jsi_Strchr(fstr, '=');"
    },
    {
        "line": 31,
        "fullcodeline": "return Jsi_LogError(\"too many fields: %d>200\", argc);"
    },
    {
        "line": 57,
        "fullcodeline": "if (!argv) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (!cmt && argc>0 && !argv[argc-1][0])"
    },
    {
        "line": 23,
        "fullcodeline": "argc--;"
    },
    {
        "line": 25,
        "fullcodeline": "eval = Jsi_ValueNewArray(interp, NULL, 0);"
    },
    {
        "line": 26,
        "fullcodeline": "Jsi_IncrRefCount(interp, eval);"
    },
    {
        "line": 28,
        "fullcodeline": "} else if (!Jsi_ValueIsArray(interp,flds) || (argc=Jsi_ValueGetLength(interp, flds))<1)"
    },
    {
        "line": 58,
        "fullcodeline": "val = Jsi_ValueArrayIndex(interp, flds, i);"
    },
    {
        "line": 159,
        "fullcodeline": "Jsi_Value *sval = Jsi_ValueNewObj(interp, NULL);"
    },
    {
        "line": 160,
        "fullcodeline": "Jsi_ValueInsert(interp, sval, \"init\", inival, 0);"
    },
    {
        "line": 161,
        "fullcodeline": "Jsi_ValueArraySet(interp, eval, sval, i);"
    },
    {
        "line": 169,
        "fullcodeline": "sf->flags |= JSI_OPT_BITSET_ENUM;"
    },
    {
        "line": 180,
        "fullcodeline": "arrCnt++;"
    },
    {
        "line": 195,
        "fullcodeline": "if (val && Jsi_OptionsProcess(interp, StructFieldOptions, sf+i, val, JSI_OPT_PASS2) < 0) {"
    },
    {
        "line": 196,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 39,
        "fullcodeline": "} else if (Jsi_OptionsProcess(interp, StructOptions, sl, val, 0) < 0) {"
    },
    {
        "line": 40,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 67,
        "fullcodeline": "if (!Jsi_ValueObjLookup(interp, val, \"init\", 0) && (sf->type->flags&jsi_CTYP_STRUCT))"
    },
    {
        "line": 81,
        "fullcodeline": "cp = Jsi_Strchr(argv[i], '=');"
    },
    {
        "line": 100,
        "fullcodeline": "cp = argv[i];"
    },
    {
        "line": 102,
        "fullcodeline": "ce = cp;"
    },
    {
        "line": 104,
        "fullcodeline": "ocp = *ce;"
    },
    {
        "line": 110,
        "fullcodeline": "sf->type = Jsi_TypeLookup(interp, cp);"
    },
    {
        "line": 111,
        "fullcodeline": "*ce = ocp;"
    },
    {
        "line": 119,
        "fullcodeline": "cp = ce+1;"
    },
    {
        "line": 121,
        "fullcodeline": "ce = cp;"
    },
    {
        "line": 123,
        "fullcodeline": "ocp = *ce;"
    },
    {
        "line": 124,
        "fullcodeline": "*ce = 0;"
    },
    {
        "line": 129,
        "fullcodeline": "sf->name = Jsi_KeyAdd(interp, cp);"
    },
    {
        "line": 165,
        "fullcodeline": "if (!isEnum) {"
    },
    {
        "line": 172,
        "fullcodeline": "if (sf->arrSize>interp->maxArrayList) {"
    },
    {
        "line": 176,
        "fullcodeline": "if (sf->bits || isEnum) {"
    },
    {
        "line": 29,
        "fullcodeline": "return Jsi_LogError(\"arg 2 must be string or non-empty array\");"
    },
    {
        "line": 59,
        "fullcodeline": "if (!val || Jsi_OptionsProcess(interp, StructFieldOptions, sf, val, 0) < 0) {"
    },
    {
        "line": 60,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 63,
        "fullcodeline": "if (!Jsi_StrIsAlnum(sf->name) || !sf->type) {"
    },
    {
        "line": 64,
        "fullcodeline": "rc = Jsi_LogError(\"invalid struct field name: %s\", sf->name);"
    },
    {
        "line": 68,
        "fullcodeline": "inival = Jsi_ValueNewBoolean(interp, true);"
    },
    {
        "line": 101,
        "fullcodeline": "while (*cp && isspace(*cp)) cp++;"
    },
    {
        "line": 103,
        "fullcodeline": "while (*ce && !isspace(*ce)) ce++;"
    },
    {
        "line": 105,
        "fullcodeline": "if (!ocp) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (!sf->type) {"
    },
    {
        "line": 116,
        "fullcodeline": "if (!inival && (sf->type->flags&jsi_CTYP_STRUCT))"
    },
    {
        "line": 120,
        "fullcodeline": "while (*cp && isspace(*cp)) cp++;"
    },
    {
        "line": 122,
        "fullcodeline": "while (*ce && (isalnum(*ce) || *ce == '_')) ce++;"
    },
    {
        "line": 125,
        "fullcodeline": "if (!*cp) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (ocp == '@') {"
    },
    {
        "line": 166,
        "fullcodeline": "rc = Jsi_LogError(\"bitset type is not an enum\");"
    },
    {
        "line": 173,
        "fullcodeline": "rc = Jsi_LogError(\"array size too big: %d >= %d\", sf->arrSize, interp->maxArrayList);"
    },
    {
        "line": 177,
        "fullcodeline": "rc = Jsi_LogError(\"array of %s unsupported\", (sf->bits?\"bits\":\"enums\"));"
    },
    {
        "line": 71,
        "fullcodeline": "cp = Jsi_Strstr(argv[i], \"//\");"
    },
    {
        "line": 86,
        "fullcodeline": "cp = jsi_TrimStr(cp);"
    },
    {
        "line": 87,
        "fullcodeline": "int cplen = Jsi_Strlen(cp);"
    },
    {
        "line": 106,
        "fullcodeline": "rc = Jsi_LogError(\"bad field: %s\", cp);"
    },
    {
        "line": 113,
        "fullcodeline": "rc = Jsi_LogError(\"unknown type: %s\", argv[i]);"
    },
    {
        "line": 117,
        "fullcodeline": "inival = Jsi_ValueNewBoolean(interp, true);"
    },
    {
        "line": 126,
        "fullcodeline": "rc = Jsi_LogError(\"missing or bad struct field name\");"
    },
    {
        "line": 131,
        "fullcodeline": "ce++;"
    },
    {
        "line": 132,
        "fullcodeline": "clen = Jsi_Strlen(ce);"
    },
    {
        "line": 78,
        "fullcodeline": "cp = Jsi_Strchr(argv[i], ';');"
    },
    {
        "line": 83,
        "fullcodeline": "if (!eval)"
    },
    {
        "line": 73,
        "fullcodeline": "*cp = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "cp += 2;"
    },
    {
        "line": 75,
        "fullcodeline": "cp = jsi_TrimStr(cp);"
    },
    {
        "line": 76,
        "fullcodeline": "sf->help = Jsi_KeyAdd(interp, cp);"
    },
    {
        "line": 79,
        "fullcodeline": "if (cp) *cp = 0;"
    },
    {
        "line": 85,
        "fullcodeline": "*cp++ = 0;"
    },
    {
        "line": 88,
        "fullcodeline": "if (cplen>1 && (cp[0] == '\\'' || cp[0] == '\"') && cp[0] == cp[cplen-1]) {"
    },
    {
        "line": 89,
        "fullcodeline": "cpval = cp+1;"
    },
    {
        "line": 90,
        "fullcodeline": "cp[cplen-1] = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "inival = Jsi_ValueNewStringDup(interp, cpval);"
    },
    {
        "line": 137,
        "fullcodeline": "if (ocp == ':') {"
    },
    {
        "line": 138,
        "fullcodeline": "int bsiz = -1;"
    },
    {
        "line": 143,
        "fullcodeline": "sf->bits = bsiz;"
    },
    {
        "line": 93,
        "fullcodeline": "else if (Jsi_GetDouble(interp, cp, &numVal) == JSI_OK)"
    },
    {
        "line": 94,
        "fullcodeline": "inival = Jsi_ValueNewNumber(interp, numVal);"
    },
    {
        "line": 139,
        "fullcodeline": "if (Jsi_GetInt(interp, ce, &bsiz,10) != JSI_OK || bsiz<=0 || bsiz>64) {"
    },
    {
        "line": 140,
        "fullcodeline": "rc = Jsi_LogError(\"bad bit size: %s\", ce);"
    },
    {
        "line": 144,
        "fullcodeline": "} else if (ocp == '[' && clen>1 && ce[clen-1]==']') {"
    },
    {
        "line": 145,
        "fullcodeline": "int asiz = -1;"
    },
    {
        "line": 146,
        "fullcodeline": "ce[clen-1] = 0;"
    },
    {
        "line": 151,
        "fullcodeline": "sf->arrSize = asiz;"
    },
    {
        "line": 95,
        "fullcodeline": "else if (Jsi_GetBool(interp, cp, &bVal) == JSI_OK)"
    },
    {
        "line": 96,
        "fullcodeline": "inival = Jsi_ValueNewBoolean(interp, bVal);"
    },
    {
        "line": 147,
        "fullcodeline": "if (Jsi_GetInt(interp, ce, &asiz, 10) != JSI_OK || asiz<=0) {"
    },
    {
        "line": 148,
        "fullcodeline": "rc = Jsi_LogError(\"bad size: %s\", cp);"
    },
    {
        "line": 98,
        "fullcodeline": "inival = Jsi_ValueNewStringDup(interp, cp);"
    },
    {
        "line": 153,
        "fullcodeline": "rc = Jsi_LogError(\"bad field: %s\", cp);"
    }
]