[
    {
        "line": 12,
        "fullcodeline": "interp = (Jsi_Interp *)Jsi_Calloc(1,sizeof(*interp) + sizeof(jsi_Frame));"
    },
    {
        "line": 13,
        "fullcodeline": "interp->framePtr = (jsi_Frame*)(((uchar*)interp)+sizeof(*interp));"
    },
    {
        "line": 26,
        "fullcodeline": "interp->maxDepth = JSI_MAX_EVAL_DEPTH;"
    },
    {
        "line": 27,
        "fullcodeline": "interp->maxIncDepth = JSI_MAX_INCLUDE_DEPTH;"
    },
    {
        "line": 28,
        "fullcodeline": "interp->typeWarnMax = 50;"
    },
    {
        "line": 29,
        "fullcodeline": "interp->subOpts.dblPrec = __DBL_DECIMAL_DIG__-1;"
    },
    {
        "line": 30,
        "fullcodeline": "interp->subOpts.prompt = \"$ \";"
    },
    {
        "line": 31,
        "fullcodeline": "interp->subOpts.prompt2 = \"> \";"
    },
    {
        "line": 38,
        "fullcodeline": "interp->logOpts.file = 1;"
    },
    {
        "line": 39,
        "fullcodeline": "interp->logOpts.func = 1;"
    },
    {
        "line": 40,
        "fullcodeline": "interp->logOpts.Info = 1;"
    },
    {
        "line": 41,
        "fullcodeline": "interp->logOpts.Warn = 1;"
    },
    {
        "line": 42,
        "fullcodeline": "interp->logOpts.Error = 1;"
    },
    {
        "line": 45,
        "fullcodeline": "char *argv0 = (argv?argv[0]:NULL);"
    },
    {
        "line": 46,
        "fullcodeline": "interp->parent = parent;"
    },
    {
        "line": 47,
        "fullcodeline": "interp->topInterp = (parent == NULL ? interp: parent->topInterp);"
    },
    {
        "line": 50,
        "fullcodeline": "interp->mainInterp = jsiIntData.mainInterp; // The first interps handles exit."
    },
    {
        "line": 78,
        "fullcodeline": "interp->confArgs = JSI_CONF_ARGS;"
    },
    {
        "line": 99,
        "fullcodeline": "SIGINIT(interp,INTERP);"
    },
    {
        "line": 100,
        "fullcodeline": "interp->NullValue = Jsi_ValueNewNull(interp);"
    },
    {
        "line": 101,
        "fullcodeline": "Jsi_IncrRefCount(interp, interp->NullValue);"
    },
    {
        "line": 108,
        "fullcodeline": "char buf[JSI_BUFSIZ];"
    },
    {
        "line": 109,
        "fullcodeline": "interp->curDir = getcwd(buf, sizeof(buf));"
    },
    {
        "line": 110,
        "fullcodeline": "interp->curDir = Jsi_Strdup(interp->curDir?interp->curDir:\".\");"
    },
    {
        "line": 112,
        "fullcodeline": "interp->onDeleteTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD, freeOnDeleteTbl);"
    },
    {
        "line": 113,
        "fullcodeline": "interp->assocTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, freeAssocTbl);"
    },
    {
        "line": 114,
        "fullcodeline": "interp->cmdSpecTbl = Jsi_MapNew(interp, JSI_MAP_TREE, JSI_KEYS_STRING, freeCmdSpecTbl);"
    },
    {
        "line": 115,
        "fullcodeline": "interp->eventTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD, freeEventTbl);"
    },
    {
        "line": 116,
        "fullcodeline": "interp->fileTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, jsi_HashFree);"
    },
    {
        "line": 117,
        "fullcodeline": "interp->funcObjTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD, freeFuncObjTbl);"
    },
    {
        "line": 118,
        "fullcodeline": "interp->funcsTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD, freeFuncsTbl);"
    },
    {
        "line": 119,
        "fullcodeline": "interp->bindTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD, freeBindObjTbl);"
    },
    {
        "line": 120,
        "fullcodeline": "interp->protoTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, NULL/*freeValueTbl*/);"
    },
    {
        "line": 121,
        "fullcodeline": "interp->regexpTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, regExpFree);"
    },
    {
        "line": 122,
        "fullcodeline": "interp->preserveTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD, jsi_HashFree);"
    },
    {
        "line": 123,
        "fullcodeline": "interp->loadTbl = (parent?parent->loadTbl:Jsi_HashNew(interp, JSI_KEYS_STRING, jsi_FreeOneLoadHandle));"
    },
    {
        "line": 124,
        "fullcodeline": "interp->packageHash = Jsi_HashNew(interp, JSI_KEYS_STRING, packageHashFree);"
    },
    {
        "line": 125,
        "fullcodeline": "interp->aliasHash = Jsi_HashNew(interp, JSI_KEYS_STRING, jsi_AliasFree);"
    },
    {
        "line": 127,
        "fullcodeline": "interp->lockTimeout = -1;"
    },
    {
        "line": 134,
        "fullcodeline": "interp->subOpts.mutexUnlock = JSI_DO_UNLOCK;"
    },
    {
        "line": 135,
        "fullcodeline": "Jsi_Map_Type mapType = JSI_MAP_HASH;"
    },
    {
        "line": 308,
        "fullcodeline": "jsi_InterpConfFiles(interp);"
    },
    {
        "line": 319,
        "fullcodeline": "static int warnNoDebug = 0;"
    },
    {
        "line": 325,
        "fullcodeline": "interp->threadId = Jsi_CurrentThread();"
    },
    {
        "line": 353,
        "fullcodeline": "interp->thisTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD, freeValueTbl);"
    },
    {
        "line": 354,
        "fullcodeline": "interp->userdataTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, freeUserdataTbl);"
    },
    {
        "line": 355,
        "fullcodeline": "interp->varTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, NULL);"
    },
    {
        "line": 356,
        "fullcodeline": "interp->codeTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, freeCodeTbl);"
    },
    {
        "line": 357,
        "fullcodeline": "interp->genValueTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD,freeValueTbl);"
    },
    {
        "line": 358,
        "fullcodeline": "interp->genObjTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD, freeGenObjTbl);"
    },
    {
        "line": 364,
        "fullcodeline": "interp->maxArrayList = MAX_ARRAY_LIST;"
    },
    {
        "line": 372,
        "fullcodeline": "interp->csc = Jsi_ValueNew1(interp);"
    },
    {
        "line": 373,
        "fullcodeline": "Jsi_ValueMakeObject(interp, &interp->csc, Jsi_ObjNew(interp));"
    },
    {
        "line": 374,
        "fullcodeline": "interp->framePtr->incsc = interp->csc;"
    },
    {
        "line": 379,
        "fullcodeline": "JSIDOINIT(Proto);"
    },
    {
        "line": 384,
        "fullcodeline": "Jsi_Value *modObj = Jsi_ValueNewObj(interp, Jsi_ObjNewType(interp, JSI_OT_OBJECT));"
    },
    {
        "line": 385,
        "fullcodeline": "Jsi_ValueInsert(interp, interp->csc, \"Jsi_Auto\", modObj, JSI_OM_DONTDEL);"
    },
    {
        "line": 388,
        "fullcodeline": "interp->framePtr->ingsc = interp->gsc = jsi_ScopeChainNew(interp, 0);"
    },
    {
        "line": 390,
        "fullcodeline": "interp->ps = jsi_PstateNew(interp); /* Default parser. */"
    },
    {
        "line": 431,
        "fullcodeline": "JSIDOINIT(Options);"
    },
    {
        "line": 432,
        "fullcodeline": "JSIDOINIT(Cmds);"
    },
    {
        "line": 433,
        "fullcodeline": "JSIDOINIT(Interp);"
    },
    {
        "line": 434,
        "fullcodeline": "JSIDOINIT(JSON);"
    },
    {
        "line": 436,
        "fullcodeline": "interp->retValue = Jsi_ValueNew1(interp);"
    },
    {
        "line": 437,
        "fullcodeline": "interp->Mutex = Jsi_MutexNew(interp, -1, JSI_MUTEX_RECURSIVE);"
    },
    {
        "line": 442,
        "fullcodeline": "JSIDOINIT(Lexer);"
    },
    {
        "line": 461,
        "fullcodeline": "Jsi_initSqlite(interp, 0);"
    },
    {
        "line": 486,
        "fullcodeline": "Jsi_PkgProvide(interp, \"Jsi\", JSI_VERSION, NULL);"
    },
    {
        "line": 515,
        "fullcodeline": "interp->startTime = jsi_GetTimestamp();"
    },
    {
        "line": 4,
        "fullcodeline": "if (parent && parent->noSubInterps) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (opts && parent && (Jsi_ValueIsObjType(parent, opts, JSI_OT_OBJECT)==0 ||"
    },
    {
        "line": 14,
        "fullcodeline": "if (!parent)"
    },
    {
        "line": 48,
        "fullcodeline": "if (jsiIntData.mainInterp == NULL)"
    },
    {
        "line": 79,
        "fullcodeline": "for (iocnt = 1; (iocnt+1)<argc; iocnt+=2)"
    },
    {
        "line": 140,
        "fullcodeline": "if (interp == jsiIntData.mainInterp || interp->threadId != jsiIntData.mainInterp->threadId) {"
    },
    {
        "line": 145,
        "fullcodeline": "for (iocnt = 1; (iocnt+1)<argc && !interp->parent; iocnt+=2)"
    },
    {
        "line": 247,
        "fullcodeline": "if (!interp->strKeyTbl)"
    },
    {
        "line": 258,
        "fullcodeline": "if (interp == jsiIntData.mainInterp) {"
    },
    {
        "line": 295,
        "fullcodeline": "if (parent && parent->isSafe) {"
    },
    {
        "line": 309,
        "fullcodeline": "if (!interp->udata) {"
    },
    {
        "line": 313,
        "fullcodeline": "if (interp->subthread && !interp->scriptStr && !interp->scriptFile) {"
    },
    {
        "line": 320,
        "fullcodeline": "if (interp->memDebug && warnNoDebug == 0) {"
    },
    {
        "line": 326,
        "fullcodeline": "if (interp->parent && interp->subthread==0 && interp->threadId != interp->parent->threadId) {"
    },
    {
        "line": 332,
        "fullcodeline": "if (interp->safeMode != jsi_safe_None)"
    },
    {
        "line": 334,
        "fullcodeline": "if (!interp->parent) {"
    },
    {
        "line": 349,
        "fullcodeline": "if (interp == jsiIntData.mainInterp)"
    },
    {
        "line": 362,
        "fullcodeline": "if (interp->typeCheck.all|interp->typeCheck.parse|interp->typeCheck.funcsig)"
    },
    {
        "line": 391,
        "fullcodeline": "if (interp->unitTest&2) {"
    },
    {
        "line": 397,
        "fullcodeline": "if (interp->args && argc) {"
    },
    {
        "line": 402,
        "fullcodeline": "if (interp->maxDepth>JSI_MAX_EVAL_DEPTH)"
    },
    {
        "line": 406,
        "fullcodeline": "if (argc >= 0 && !interp->args) {"
    },
    {
        "line": 438,
        "fullcodeline": "if (1 || interp->subthread) {"
    },
    {
        "line": 443,
        "fullcodeline": "if (interp != jsiIntData.mainInterp && !parent)"
    },
    {
        "line": 446,
        "fullcodeline": "if (!interp->isSafe) {"
    },
    {
        "line": 452,
        "fullcodeline": "if (interp->isSafe == 0 || interp->startSafe || interp->safeWriteDirs!=NULL || interp->safeReadDirs!=NULL) {"
    },
    {
        "line": 487,
        "fullcodeline": "if (argc > 0) {"
    },
    {
        "line": 512,
        "fullcodeline": "if (interp->debugOpts.debugCallback && !interp->debugOpts.hook) {"
    },
    {
        "line": 519,
        "fullcodeline": "if (interp->opts.initProc && (*interp->opts.initProc)(interp, 0) != JSI_OK)"
    },
    {
        "line": 5,
        "fullcodeline": "interp = parent;"
    },
    {
        "line": 6,
        "fullcodeline": "Jsi_LogError(\"subinterps disallowed\");"
    },
    {
        "line": 11,
        "fullcodeline": "opts = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "interp->maxInterpDepth = JSI_MAX_SUBINTERP_DEPTH;"
    },
    {
        "line": 35,
        "fullcodeline": "iopts->interp = interp;"
    },
    {
        "line": 49,
        "fullcodeline": "jsiIntData.mainInterp = interp->topInterp;"
    },
    {
        "line": 53,
        "fullcodeline": "interp->dbPtr = parent->dbPtr;"
    },
    {
        "line": 141,
        "fullcodeline": "interp->strKeyTbl = Jsi_MapNew(interp,  mapType, JSI_KEYS_STRING, NULL);"
    },
    {
        "line": 142,
        "fullcodeline": "interp->subOpts.privKeys = 1;"
    },
    {
        "line": 250,
        "fullcodeline": "interp->inopts = opts = Jsi_ValueDupJSON(interp, opts);"
    },
    {
        "line": 259,
        "fullcodeline": "interp->subthread = 0;"
    },
    {
        "line": 296,
        "fullcodeline": "interp->isSafe = 1;"
    },
    {
        "line": 297,
        "fullcodeline": "interp->safeMode = parent->safeMode;"
    },
    {
        "line": 298,
        "fullcodeline": "interp->maxOpCnt = parent->maxOpCnt;"
    },
    {
        "line": 310,
        "fullcodeline": "interp->udata = Jsi_ValueNewObj(interp, NULL);"
    },
    {
        "line": 311,
        "fullcodeline": "Jsi_IncrRefCount(interp, interp->udata);"
    },
    {
        "line": 314,
        "fullcodeline": "Jsi_LogError(\"subthread interp must be specify either scriptFile or scriptStr\");"
    },
    {
        "line": 315,
        "fullcodeline": "Jsi_InterpDelete(interp);"
    },
    {
        "line": 321,
        "fullcodeline": "Jsi_LogWarn(\"ignoring memDebug as jsi was compiled without memory debugging\");"
    },
    {
        "line": 322,
        "fullcodeline": "warnNoDebug = 1;"
    },
    {
        "line": 327,
        "fullcodeline": "interp->threadId = interp->parent->threadId;"
    },
    {
        "line": 329,
        "fullcodeline": "Jsi_LogWarn(\"non-threaded sub-interp created by different thread than parent\");"
    },
    {
        "line": 333,
        "fullcodeline": "interp->isSafe = interp->startSafe = 1;"
    },
    {
        "line": 350,
        "fullcodeline": "interp->lexkeyTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, NULL);"
    },
    {
        "line": 363,
        "fullcodeline": "interp->staticFuncsTbl = Jsi_HashNew(interp, JSI_KEYS_STRING, NULL);"
    },
    {
        "line": 366,
        "fullcodeline": "jsiIntData.isInit = 1;"
    },
    {
        "line": 367,
        "fullcodeline": "jsi_InitValue(interp, 0);"
    },
    {
        "line": 368,
        "fullcodeline": "jsiIntData.interpsTbl = Jsi_HashNew(interp, JSI_KEYS_ONEWORD, 0);"
    },
    {
        "line": 382,
        "fullcodeline": "interp->pkgDirs->d.obj->__proto__ = interp->Array_prototype;"
    },
    {
        "line": 392,
        "fullcodeline": "interp->logOpts.before = 1;"
    },
    {
        "line": 393,
        "fullcodeline": "interp->logOpts.full = 1;"
    },
    {
        "line": 394,
        "fullcodeline": "interp->tracePuts = 1;"
    },
    {
        "line": 395,
        "fullcodeline": "interp->noStderr = 1;"
    },
    {
        "line": 398,
        "fullcodeline": "Jsi_LogBug(\"args may not be specified both as options and parameter\");"
    },
    {
        "line": 399,
        "fullcodeline": "Jsi_InterpDelete(interp);"
    },
    {
        "line": 403,
        "fullcodeline": "interp->maxDepth = JSI_MAX_EVAL_DEPTH;"
    },
    {
        "line": 407,
        "fullcodeline": "Jsi_Value *iargs = Jsi_ValueNew1(interp);"
    },
    {
        "line": 408,
        "fullcodeline": "iargs->f.bits.dontdel = 1;"
    },
    {
        "line": 409,
        "fullcodeline": "iargs->f.bits.readonly = 1;"
    },
    {
        "line": 410,
        "fullcodeline": "Jsi_Obj *iobj = Jsi_ObjNew(interp);"
    },
    {
        "line": 411,
        "fullcodeline": "Jsi_ValueMakeArrayObject(interp, &iargs, iobj);"
    },
    {
        "line": 412,
        "fullcodeline": "int i = 1, ii = (iocnt>1 ? iocnt : 1);"
    },
    {
        "line": 413,
        "fullcodeline": "int msiz = (argc?argc-iocnt:0);"
    },
    {
        "line": 414,
        "fullcodeline": "Jsi_ObjArraySizer(interp, iobj, msiz);"
    },
    {
        "line": 415,
        "fullcodeline": "iobj->arrMaxSize = msiz;"
    },
    {
        "line": 416,
        "fullcodeline": "iocnt--;"
    },
    {
        "line": 417,
        "fullcodeline": "iobj->arrCnt = argc-iocnt;"
    },
    {
        "line": 423,
        "fullcodeline": "Jsi_ObjSetLength(interp, iobj, msiz);"
    },
    {
        "line": 424,
        "fullcodeline": "interp->args = iargs;"
    },
    {
        "line": 439,
        "fullcodeline": "interp->QMutex = Jsi_MutexNew(interp, -1, JSI_MUTEX_RECURSIVE);"
    },
    {
        "line": 444,
        "fullcodeline": "Jsi_HashSet(jsiIntData.interpsTbl, interp, NULL);"
    },
    {
        "line": 447,
        "fullcodeline": "JSIDOINIT(Load);"
    },
    {
        "line": 488,
        "fullcodeline": "char *ss = argv0;"
    },
    {
        "line": 489,
        "fullcodeline": "char epath[PATH_MAX] = \"\"; // Path of executable"
    },
    {
        "line": 501,
        "fullcodeline": "Jsi_Value *src = Jsi_ValueNewStringDup(interp, ss);"
    },
    {
        "line": 502,
        "fullcodeline": "Jsi_IncrRefCount(interp, src);"
    },
    {
        "line": 503,
        "fullcodeline": "jsiIntData.execName = Jsi_Realpath(interp, src, NULL);"
    },
    {
        "line": 504,
        "fullcodeline": "Jsi_DecrRefCount(interp, src);"
    },
    {
        "line": 506,
        "fullcodeline": "jsiIntData.execValue = Jsi_ValueNewString(interp, jsiIntData.execName, -1);"
    },
    {
        "line": 507,
        "fullcodeline": "Jsi_IncrRefCount(interp, jsiIntData.execValue);"
    },
    {
        "line": 508,
        "fullcodeline": "Jsi_HashSet(interp->genValueTbl, jsiIntData.execValue, jsiIntData.execValue);"
    },
    {
        "line": 513,
        "fullcodeline": "interp->debugOpts.hook = jsi_InterpDebugHook;"
    },
    {
        "line": 520,
        "fullcodeline": "Jsi_LogBug(\"Init failure in initProc\");"
    },
    {
        "line": 10,
        "fullcodeline": "Jsi_TreeSize(opts->d.obj->tree)<=0))"
    },
    {
        "line": 17,
        "fullcodeline": "interp->maxInterpDepth = parent->maxInterpDepth;"
    },
    {
        "line": 18,
        "fullcodeline": "interp->interpDepth = parent->interpDepth+1;"
    },
    {
        "line": 55,
        "fullcodeline": "interp->dbPtr = &interp->dbStatic;"
    },
    {
        "line": 82,
        "fullcodeline": "if (Jsi_Strcmp(aio, \"--T\") == 0 || Jsi_Strcmp(aio, \"--C\") == 0 || Jsi_Strcmp(aio, \"--L\") == 0) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (Jsi_Strcmp(aio, \"--F\") == 0 || Jsi_Strcmp(aio, \"--U\") == 0 || Jsi_Strcmp(aio, \"--V\") == 0) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (!Jsi_Strcmp(aio, \"--I\")) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (Jsi_Strcmp(aio, \"--F\") == 0) {"
    },
    {
        "line": 154,
        "fullcodeline": "if (Jsi_Strcmp(aio, \"--U\") == 0) {"
    },
    {
        "line": 161,
        "fullcodeline": "if (Jsi_Strcmp(aio, \"--V\") == 0) {"
    },
    {
        "line": 169,
        "fullcodeline": "if (Jsi_Strcmp(aio, \"--C\") == 0) {"
    },
    {
        "line": 176,
        "fullcodeline": "if (Jsi_Strcmp(aio, \"--L\") == 0) {"
    },
    {
        "line": 203,
        "fullcodeline": "if (Jsi_Strcmp(aio, \"--T\") == 0) {"
    },
    {
        "line": 211,
        "fullcodeline": "if (!Jsi_Strcmp(aio, \"--I\"))  {"
    },
    {
        "line": 251,
        "fullcodeline": "if (Jsi_OptionsProcess(interp, InterpOptions, interp, opts, 0) < 0) {"
    },
    {
        "line": 299,
        "fullcodeline": "if (interp->safeWriteDirs || interp->safeReadDirs || interp->safeExecPattern) {"
    },
    {
        "line": 418,
        "fullcodeline": "for (i = 1; ii < argc; ++ii, i++) {"
    },
    {
        "line": 498,
        "fullcodeline": "if (ss && *ss != '/' && readlink(PROC_SELF_DIR, epath, sizeof(epath)) && epath[0])"
    },
    {
        "line": 505,
        "fullcodeline": "if (!jsiIntData.execName) jsiIntData.execName = Jsi_Strdup(\"\");"
    },
    {
        "line": 19,
        "fullcodeline": "if (interp->interpDepth > interp->maxInterpDepth) {"
    },
    {
        "line": 65,
        "fullcodeline": "interp->pkgDirs = Jsi_ValueDupJSON(interp, parent->pkgDirs);"
    },
    {
        "line": 86,
        "fullcodeline": "iocnt--;"
    },
    {
        "line": 149,
        "fullcodeline": "interp->traceCall |= (jsi_callTraceFuncs |jsi_callTraceArgs |jsi_callTraceReturn | jsi_callTraceBefore | jsi_callTraceFullPath);"
    },
    {
        "line": 150,
        "fullcodeline": "iocnt--;"
    },
    {
        "line": 151,
        "fullcodeline": "interp->iskips++;"
    },
    {
        "line": 155,
        "fullcodeline": "interp->asserts = 1;"
    },
    {
        "line": 156,
        "fullcodeline": "interp->unitTest = 1;"
    },
    {
        "line": 157,
        "fullcodeline": "iocnt--;"
    },
    {
        "line": 158,
        "fullcodeline": "interp->iskips++;"
    },
    {
        "line": 162,
        "fullcodeline": "interp->asserts = 1;"
    },
    {
        "line": 163,
        "fullcodeline": "interp->unitTest = 5;"
    },
    {
        "line": 164,
        "fullcodeline": "interp->tracePuts = 1;"
    },
    {
        "line": 165,
        "fullcodeline": "iocnt--;"
    },
    {
        "line": 166,
        "fullcodeline": "interp->iskips++;"
    },
    {
        "line": 172,
        "fullcodeline": "interp->confFile = argv[iocnt+1];"
    },
    {
        "line": 173,
        "fullcodeline": "interp->iskips+=2;"
    },
    {
        "line": 178,
        "fullcodeline": "const char* path = argv[iocnt+1]; //TODO: convert to Jsi_Value first?"
    },
    {
        "line": 185,
        "fullcodeline": "interp->isSafe = true;"
    },
    {
        "line": 186,
        "fullcodeline": "interp->safeMode = jsi_safe_Lockdown;"
    },
    {
        "line": 191,
        "fullcodeline": "const char *vda[2] = {};"
    },
    {
        "line": 192,
        "fullcodeline": "char npath[PATH_MAX];"
    },
    {
        "line": 193,
        "fullcodeline": "vda[0] = Jsi_FileRealpathStr(interp, path, npath);"
    },
    {
        "line": 194,
        "fullcodeline": "interp->safeWriteDirs = Jsi_ValueNewArray(interp, vda, 1);"
    },
    {
        "line": 195,
        "fullcodeline": "Jsi_IncrRefCount(interp, interp->safeWriteDirs);"
    },
    {
        "line": 200,
        "fullcodeline": "interp->iskips+=2;"
    },
    {
        "line": 208,
        "fullcodeline": "interp->iskips+=2;"
    },
    {
        "line": 212,
        "fullcodeline": "bool bv = 1;"
    },
    {
        "line": 214,
        "fullcodeline": "argNamS[50], *argNam = aio2;"
    },
    {
        "line": 213,
        "fullcodeline": "char *aio2 = argv[iocnt+1], *aioc = Jsi_Strchr(aio2, ':'),"
    },
    {
        "line": 242,
        "fullcodeline": "interp->iskips+=2;"
    },
    {
        "line": 252,
        "fullcodeline": "Jsi_DecrRefCount(interp, opts);"
    },
    {
        "line": 253,
        "fullcodeline": "interp->inopts = NULL;"
    },
    {
        "line": 254,
        "fullcodeline": "Jsi_InterpDelete(interp);"
    },
    {
        "line": 274,
        "fullcodeline": "if (parent && parent->isSafe) {"
    },
    {
        "line": 278,
        "fullcodeline": "if (interp->subthread && interp->isSafe) {"
    },
    {
        "line": 286,
        "fullcodeline": "if (interp->subthread && interp->strKeyTbl == jsiIntData.mainInterp->strKeyTbl)"
    },
    {
        "line": 300,
        "fullcodeline": "Jsi_LogWarn(\"ignoring safe* options in safe sub-sub-interp\");"
    },
    {
        "line": 303,
        "fullcodeline": "interp->safeWriteDirs = interp->safeReadDirs = NULL;"
    },
    {
        "line": 304,
        "fullcodeline": "interp->safeExecPattern = NULL;"
    },
    {
        "line": 336,
        "fullcodeline": "interp->startSafe = 1;"
    },
    {
        "line": 338,
        "fullcodeline": "Jsi_LogWarn(\"ignoring msgCallback\");"
    },
    {
        "line": 340,
        "fullcodeline": "Jsi_LogWarn(\"ignoring putsCallback\");"
    },
    {
        "line": 342,
        "fullcodeline": "Jsi_LogWarn(\"ignoring busyCallback\");"
    },
    {
        "line": 344,
        "fullcodeline": "Jsi_LogWarn(\"ignoring traceCallback\");"
    },
    {
        "line": 345,
        "fullcodeline": "} else if (interp->busyCallback && interp->threadId != interp->parent->threadId) {"
    },
    {
        "line": 419,
        "fullcodeline": "iobj->arr[i-1] = Jsi_ValueNewStringKey(interp, argv[ii]);"
    },
    {
        "line": 420,
        "fullcodeline": "Jsi_IncrRefCount(interp, iobj->arr[i-1]);"
    },
    {
        "line": 421,
        "fullcodeline": "jsi_ValueDebugLabel(iobj->arr[i-1], \"InterpCreate\", \"args\");"
    },
    {
        "line": 425,
        "fullcodeline": "} else if (interp->parent && interp->args) {"
    },
    {
        "line": 499,
        "fullcodeline": "ss = epath;"
    },
    {
        "line": 20,
        "fullcodeline": "Jsi_Free(interp);"
    },
    {
        "line": 21,
        "fullcodeline": "interp = parent;"
    },
    {
        "line": 22,
        "fullcodeline": "Jsi_LogError(\"exceeded max subinterp depth\");"
    },
    {
        "line": 91,
        "fullcodeline": "if (!Jsi_Strncmp(\"memDebug:\", aio2, sizeof(\"memDebug\")))"
    },
    {
        "line": 179,
        "fullcodeline": "if (!path || stat(path, &sb)"
    },
    {
        "line": 196,
        "fullcodeline": "if (!interp->safeReadDirs) {"
    },
    {
        "line": 204,
        "fullcodeline": "if (jsi_ParseTypeCheckStr(interp, argv[iocnt+1]) != JSI_OK) {"
    },
    {
        "line": 216,
        "fullcodeline": "if (!Jsi_Strcmp(\"traceCall\", aio2))"
    },
    {
        "line": 275,
        "fullcodeline": "interp->isSafe = 1;"
    },
    {
        "line": 276,
        "fullcodeline": "interp->safeMode = parent->safeMode;"
    },
    {
        "line": 279,
        "fullcodeline": "interp->subthread = 0;"
    },
    {
        "line": 280,
        "fullcodeline": "Jsi_LogError(\"threading disallowed in safe mode\");"
    },
    {
        "line": 281,
        "fullcodeline": "Jsi_InterpDelete(interp);"
    },
    {
        "line": 292,
        "fullcodeline": "jsiIntData.mainInterp->strKeyTbl->v.hash->opts.lockHashProc = KeyLocker;"
    },
    {
        "line": 346,
        "fullcodeline": "Jsi_LogWarn(\"disabling busyCallback due to threads\");"
    },
    {
        "line": 347,
        "fullcodeline": "interp->busyCallback = NULL;"
    },
    {
        "line": 427,
        "fullcodeline": "Jsi_Value *nar = Jsi_ValueDupJSON(interp, interp->args);"
    },
    {
        "line": 428,
        "fullcodeline": "Jsi_DecrRefCount(interp, interp->args);"
    },
    {
        "line": 429,
        "fullcodeline": "interp->args = nar;"
    },
    {
        "line": 90,
        "fullcodeline": "const char *aio2 = argv[iocnt+1];"
    },
    {
        "line": 92,
        "fullcodeline": "interp->memDebug=strtol(aio2+sizeof(\"memDebug\"), NULL, 0);"
    },
    {
        "line": 171,
        "fullcodeline": "Jsi_LogWarn(\"overriding confFile: %s\", interp->confFile);"
    },
    {
        "line": 180,
        "fullcodeline": "|| !((S_ISREG(sb.st_mode) && !access(path, W_OK)) || (S_ISDIR(sb.st_mode) && !access(path, X_OK)))) {"
    },
    {
        "line": 181,
        "fullcodeline": "Jsi_LogError(\"Lockdown path must exist and be a writable file or executable dir: %s\", path);"
    },
    {
        "line": 182,
        "fullcodeline": "Jsi_InterpDelete(interp);"
    },
    {
        "line": 188,
        "fullcodeline": "Jsi_LogWarn(\"Overriding safeWriteDirs\");"
    },
    {
        "line": 189,
        "fullcodeline": "Jsi_DecrRefCount(interp, interp->safeWriteDirs);"
    },
    {
        "line": 197,
        "fullcodeline": "interp->safeReadDirs = interp->safeWriteDirs;"
    },
    {
        "line": 198,
        "fullcodeline": "Jsi_IncrRefCount(interp, interp->safeReadDirs);"
    },
    {
        "line": 205,
        "fullcodeline": "Jsi_InterpDelete(interp);"
    },
    {
        "line": 217,
        "fullcodeline": "interp->traceCall |= (jsi_callTraceFuncs |jsi_callTraceArgs |jsi_callTraceReturn | jsi_callTraceBefore | jsi_callTraceFullPath);"
    },
    {
        "line": 262,
        "fullcodeline": "if (interp->subOpts.privKeys && interp->strKeyTbl == jsiIntData.mainInterp->strKeyTbl) {"
    },
    {
        "line": 301,
        "fullcodeline": "if (interp->safeWriteDirs) Jsi_DecrRefCount(interp, interp->safeWriteDirs);"
    },
    {
        "line": 302,
        "fullcodeline": "if (interp->safeReadDirs) Jsi_DecrRefCount(interp, interp->safeReadDirs);"
    },
    {
        "line": 225,
        "fullcodeline": "DECL_VALINIT(argV);"
    },
    {
        "line": 226,
        "fullcodeline": "Jsi_Value *argValue = &argV;"
    },
    {
        "line": 264,
        "fullcodeline": "Jsi_OptionsFree(interp, InterpOptions, interp, 0); /* Reparse options to populate new key table. */"
    },
    {
        "line": 265,
        "fullcodeline": "interp->strKeyTbl = Jsi_MapNew(interp, mapType, JSI_KEYS_STRING, NULL);"
    },
    {
        "line": 93,
        "fullcodeline": "else if (!Jsi_Strncmp(\"compat\", aio2, sizeof(\"compat\")))"
    },
    {
        "line": 228,
        "fullcodeline": "if (!aioc || Jsi_GetBool(interp, argVal, &bv) == JSI_OK) {"
    },
    {
        "line": 237,
        "fullcodeline": "if (JSI_OK != Jsi_OptionsSet(interp, InterpOptions, interp, argNam, argValue, 0)) {"
    },
    {
        "line": 266,
        "fullcodeline": "if (opts->vt != JSI_VT_NULL) Jsi_OptionsProcess(interp, InterpOptions, interp, opts, 0);"
    },
    {
        "line": 94,
        "fullcodeline": "interp->subOpts.compat=strtol(aio2+sizeof(\"compat\"), NULL, 0);"
    },
    {
        "line": 220,
        "fullcodeline": "argNam = argNamS;"
    },
    {
        "line": 221,
        "fullcodeline": "argVal = aioc+1;"
    },
    {
        "line": 222,
        "fullcodeline": "snprintf(argNamS, sizeof(argNamS), \"%.*s\", (int)(aioc-aio2), aio2);"
    },
    {
        "line": 229,
        "fullcodeline": "Jsi_ValueMakeBool(interp, &argValue, bv);"
    },
    {
        "line": 238,
        "fullcodeline": "Jsi_InterpDelete(interp);"
    },
    {
        "line": 267,
        "fullcodeline": "} else if (interp->subOpts.privKeys == 0 && interp->strKeyTbl != jsiIntData.mainInterp->strKeyTbl) {"
    },
    {
        "line": 268,
        "fullcodeline": "Jsi_OptionsFree(interp, InterpOptions, interp, 0); /* Reparse options to populate new key table. */"
    },
    {
        "line": 269,
        "fullcodeline": "Jsi_MapDelete(interp->strKeyTbl);"
    },
    {
        "line": 270,
        "fullcodeline": "interp->strKeyTbl = jsiIntData.mainInterp->strKeyTbl;"
    },
    {
        "line": 230,
        "fullcodeline": "} else if (!Jsi_Strcmp(\"null\", argVal)) {"
    },
    {
        "line": 271,
        "fullcodeline": "if (opts->vt != JSI_VT_NULL) Jsi_OptionsProcess(interp, InterpOptions, interp, opts, 0);"
    },
    {
        "line": 231,
        "fullcodeline": "Jsi_ValueMakeNull(interp, &argValue);"
    },
    {
        "line": 232,
        "fullcodeline": "} else if (Jsi_GetDouble(interp, argVal, &dv) == JSI_OK) {"
    },
    {
        "line": 233,
        "fullcodeline": "Jsi_ValueMakeNumber(interp, &argValue, dv);"
    },
    {
        "line": 235,
        "fullcodeline": "Jsi_ValueMakeStringKey(interp, &argValue, argVal);"
    }
]