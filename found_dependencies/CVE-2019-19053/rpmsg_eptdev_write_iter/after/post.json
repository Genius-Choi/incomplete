[
    {
        "line": 4,
        "fullcodeline": "struct file *filp = iocb->ki_filp;"
    },
    {
        "line": 5,
        "fullcodeline": "struct rpmsg_eptdev *eptdev = filp->private_data;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t len = iov_iter_count(from);"
    },
    {
        "line": 10,
        "fullcodeline": "kbuf = kzalloc(len, GFP_KERNEL);"
    },
    {
        "line": 35,
        "fullcodeline": "mutex_unlock(&eptdev->ept_lock);"
    },
    {
        "line": 38,
        "fullcodeline": "kfree(kbuf);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!kbuf)"
    },
    {
        "line": 14,
        "fullcodeline": "if (!copy_from_iter_full(kbuf, len, from)) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (mutex_lock_interruptible(&eptdev->ept_lock)) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (!eptdev->ept) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (filp->f_flags & O_NONBLOCK)"
    },
    {
        "line": 39,
        "fullcodeline": "return ret < 0 ? ret : len;"
    },
    {
        "line": 15,
        "fullcodeline": "ret = -EFAULT;"
    },
    {
        "line": 20,
        "fullcodeline": "ret = -ERESTARTSYS;"
    },
    {
        "line": 25,
        "fullcodeline": "ret = -EPIPE;"
    },
    {
        "line": 30,
        "fullcodeline": "ret = rpmsg_trysend(eptdev->ept, kbuf, len);"
    },
    {
        "line": 12,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 32,
        "fullcodeline": "ret = rpmsg_send(eptdev->ept, kbuf, len);"
    }
]