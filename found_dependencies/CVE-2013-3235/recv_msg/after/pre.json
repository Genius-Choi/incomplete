[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct tipc_port *tport = tipc_sk_port(sk);"
    },
    {
        "line": 17,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 25,
        "fullcodeline": "m->msg_namelen = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "timeout = sock_rcvtimeo(sk, flags & MSG_DONTWAIT);"
    },
    {
        "line": 48,
        "fullcodeline": "buf = skb_peek(&sk->sk_receive_queue);"
    },
    {
        "line": 49,
        "fullcodeline": "msg = buf_msg(buf);"
    },
    {
        "line": 50,
        "fullcodeline": "sz = msg_data_sz(msg);"
    },
    {
        "line": 51,
        "fullcodeline": "err = msg_errcode(msg);"
    },
    {
        "line": 60,
        "fullcodeline": "set_orig_addr(m, msg);"
    },
    {
        "line": 63,
        "fullcodeline": "res = anc_data_recv(m, msg, tport);"
    },
    {
        "line": 14,
        "fullcodeline": "if (unlikely(!buf_len))"
    },
    {
        "line": 31,
        "fullcodeline": "while (skb_queue_empty(&sk->sk_receive_queue)) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (!err) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (unlikely(sock->state == SS_UNCONNECTED)) {"
    },
    {
        "line": 20,
        "fullcodeline": "res = -ENOTCONN;"
    },
    {
        "line": 40,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 41,
        "fullcodeline": "timeout = wait_event_interruptible_timeout(*sk_sleep(sk),"
    },
    {
        "line": 44,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 54,
        "fullcodeline": "if ((!sz) && (!err)) {"
    },
    {
        "line": 55,
        "fullcodeline": "advance_rx_queue(sk);"
    },
    {
        "line": 73,
        "fullcodeline": "res = skb_copy_datagram_iovec(buf, msg_hdr_sz(msg),"
    },
    {
        "line": 77,
        "fullcodeline": "res = sz;"
    },
    {
        "line": 87,
        "fullcodeline": "if (likely(!(flags & MSG_PEEK))) {"
    },
    {
        "line": 91,
        "fullcodeline": "advance_rx_queue(sk);"
    },
    {
        "line": 15,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 32,
        "fullcodeline": "if (sock->state == SS_DISCONNECTING) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (timeout <= 0L) {"
    },
    {
        "line": 33,
        "fullcodeline": "res = -ENOTCONN;"
    },
    {
        "line": 37,
        "fullcodeline": "res = timeout ? timeout : -EWOULDBLOCK;"
    },
    {
        "line": 42,
        "fullcodeline": "tipc_rx_ready(sock),"
    },
    {
        "line": 69,
        "fullcodeline": "if (unlikely(buf_len < sz)) {"
    },
    {
        "line": 70,
        "fullcodeline": "sz = buf_len;"
    },
    {
        "line": 71,
        "fullcodeline": "m->msg_flags |= MSG_TRUNC;"
    },
    {
        "line": 88,
        "fullcodeline": "if ((sock->state != SS_READY) &&"
    },
    {
        "line": 89,
        "fullcodeline": "(++tport->conn_unacked >= TIPC_FLOW_CONTROL_WIN))"
    },
    {
        "line": 79,
        "fullcodeline": "if ((sock->state == SS_READY) ||"
    },
    {
        "line": 80,
        "fullcodeline": "((err == TIPC_CONN_SHUTDOWN) || m->msg_control))"
    },
    {
        "line": 81,
        "fullcodeline": "res = 0;"
    },
    {
        "line": 83,
        "fullcodeline": "res = -ECONNRESET;"
    }
]