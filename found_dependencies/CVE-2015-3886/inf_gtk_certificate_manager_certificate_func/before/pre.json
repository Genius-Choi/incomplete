[
    {
        "line": 31,
        "fullcodeline": "manager = INF_GTK_CERTIFICATE_MANAGER(user_data);"
    },
    {
        "line": 32,
        "fullcodeline": "priv = INF_GTK_CERTIFICATE_MANAGER_PRIVATE(manager);"
    },
    {
        "line": 34,
        "fullcodeline": "g_object_get(G_OBJECT(connection), \"remote-hostname\", &hostname, NULL);"
    },
    {
        "line": 35,
        "fullcodeline": "presented_cert = inf_certificate_chain_get_own_certificate(chain);"
    },
    {
        "line": 37,
        "fullcodeline": "match_hostname = gnutls_x509_crt_check_hostname(presented_cert, hostname);"
    },
    {
        "line": 40,
        "fullcodeline": "ret = gnutls_certificate_verify_peers2(session, &verify);"
    },
    {
        "line": 41,
        "fullcodeline": "error = NULL;"
    },
    {
        "line": 85,
        "fullcodeline": "table = NULL;"
    },
    {
        "line": 104,
        "fullcodeline": "flags = 0;"
    },
    {
        "line": 239,
        "fullcodeline": "g_free(hostname);"
    },
    {
        "line": 43,
        "fullcodeline": "if(ret != GNUTLS_E_SUCCESS)"
    },
    {
        "line": 48,
        "fullcodeline": "if(error == NULL)"
    },
    {
        "line": 86,
        "fullcodeline": "if(error == NULL)"
    },
    {
        "line": 105,
        "fullcodeline": "if(error == NULL)"
    },
    {
        "line": 145,
        "fullcodeline": "if(error == NULL)"
    },
    {
        "line": 238,
        "fullcodeline": "if(table != NULL) g_hash_table_unref(table);"
    },
    {
        "line": 44,
        "fullcodeline": "inf_gnutls_set_error(&error, ret);"
    },
    {
        "line": 50,
        "fullcodeline": "issuer_known = TRUE;"
    },
    {
        "line": 88,
        "fullcodeline": "known_cert = NULL;"
    },
    {
        "line": 51,
        "fullcodeline": "if(verify & GNUTLS_CERT_SIGNER_NOT_FOUND)"
    },
    {
        "line": 89,
        "fullcodeline": "if(!match_hostname || !issuer_known)"
    },
    {
        "line": 107,
        "fullcodeline": "if(known_cert != NULL)"
    },
    {
        "line": 147,
        "fullcodeline": "if(flags == 0)"
    },
    {
        "line": 234,
        "fullcodeline": "inf_xmpp_connection_certificate_verify_cancel(connection, error);"
    },
    {
        "line": 235,
        "fullcodeline": "g_error_free(error);"
    },
    {
        "line": 53,
        "fullcodeline": "issuer_known = FALSE;"
    },
    {
        "line": 62,
        "fullcodeline": "root_cert = inf_certificate_chain_get_root_certificate(chain);"
    },
    {
        "line": 64,
        "fullcodeline": "ret = gnutls_x509_crt_list_verify("
    },
    {
        "line": 95,
        "fullcodeline": "table = inf_gtk_certificate_manager_ref_known_hosts(manager, &error);"
    },
    {
        "line": 109,
        "fullcodeline": "cert_equal = inf_gtk_certificate_manager_compare_fingerprint("
    },
    {
        "line": 162,
        "fullcodeline": "inf_xmpp_connection_certificate_verify_continue(connection);"
    },
    {
        "line": 75,
        "fullcodeline": "if(ret != GNUTLS_E_SUCCESS)"
    },
    {
        "line": 96,
        "fullcodeline": "if(table != NULL)"
    },
    {
        "line": 115,
        "fullcodeline": "if(error == NULL && cert_equal == FALSE)"
    },
    {
        "line": 149,
        "fullcodeline": "if(match_hostname && issuer_known)"
    },
    {
        "line": 166,
        "fullcodeline": "query = g_slice_new(InfGtkCertificateManagerQuery);"
    },
    {
        "line": 167,
        "fullcodeline": "query->manager = manager;"
    },
    {
        "line": 168,
        "fullcodeline": "query->known_hosts = table;"
    },
    {
        "line": 169,
        "fullcodeline": "query->connection = connection;"
    },
    {
        "line": 170,
        "fullcodeline": "query->dialog = inf_gtk_certificate_dialog_new("
    },
    {
        "line": 177,
        "fullcodeline": "query->certificate_chain = chain;"
    },
    {
        "line": 179,
        "fullcodeline": "table = NULL;"
    },
    {
        "line": 181,
        "fullcodeline": "g_object_ref(query->connection);"
    },
    {
        "line": 182,
        "fullcodeline": "inf_certificate_chain_ref(chain);"
    },
    {
        "line": 184,
        "fullcodeline": "g_signal_connect("
    },
    {
        "line": 191,
        "fullcodeline": "g_signal_connect("
    },
    {
        "line": 198,
        "fullcodeline": "gtk_dialog_add_button("
    },
    {
        "line": 204,
        "fullcodeline": "gtk_dialog_add_button("
    },
    {
        "line": 210,
        "fullcodeline": "text = g_strdup_printf("
    },
    {
        "line": 217,
        "fullcodeline": "label = gtk_label_new(text);"
    },
    {
        "line": 218,
        "fullcodeline": "gtk_label_set_line_wrap(GTK_LABEL(label), TRUE);"
    },
    {
        "line": 219,
        "fullcodeline": "gtk_label_set_line_wrap_mode(GTK_LABEL(label), PANGO_WRAP_WORD_CHAR);"
    },
    {
        "line": 220,
        "fullcodeline": "gtk_label_set_max_width_chars(GTK_LABEL(label), 60);"
    },
    {
        "line": 221,
        "fullcodeline": "gtk_misc_set_alignment(GTK_MISC(label), 0.0, 0.0);"
    },
    {
        "line": 222,
        "fullcodeline": "gtk_widget_show(label);"
    },
    {
        "line": 223,
        "fullcodeline": "g_free(text);"
    },
    {
        "line": 225,
        "fullcodeline": "vbox = gtk_dialog_get_content_area(GTK_DIALOG(query->dialog));"
    },
    {
        "line": 226,
        "fullcodeline": "gtk_box_pack_start(GTK_BOX(vbox), label, FALSE, FALSE, 0);"
    },
    {
        "line": 228,
        "fullcodeline": "priv->queries = g_slist_prepend(priv->queries, query);"
    },
    {
        "line": 229,
        "fullcodeline": "gtk_window_present(GTK_WINDOW(query->dialog));"
    },
    {
        "line": 65,
        "fullcodeline": "inf_certificate_chain_get_raw(chain),"
    },
    {
        "line": 66,
        "fullcodeline": "inf_certificate_chain_get_n_certificates(chain),"
    },
    {
        "line": 76,
        "fullcodeline": "inf_gnutls_set_error(&error, ret);"
    },
    {
        "line": 97,
        "fullcodeline": "known_cert = g_hash_table_lookup(table, hostname);"
    },
    {
        "line": 122,
        "fullcodeline": "flags |= INF_GTK_CERTIFICATE_DIALOG_CERT_UNEXPECTED;"
    },
    {
        "line": 123,
        "fullcodeline": "expiration_time = gnutls_x509_crt_get_expiration_time(known_cert);"
    },
    {
        "line": 136,
        "fullcodeline": "if(!match_hostname)"
    },
    {
        "line": 138,
        "fullcodeline": "if(!issuer_known)"
    },
    {
        "line": 185,
        "fullcodeline": "G_OBJECT(connection),"
    },
    {
        "line": 187,
        "fullcodeline": "G_CALLBACK(inf_gtk_certificate_manager_notify_status_cb),"
    },
    {
        "line": 192,
        "fullcodeline": "G_OBJECT(query->dialog),"
    },
    {
        "line": 194,
        "fullcodeline": "G_CALLBACK(inf_gtk_certificate_manager_response_cb),"
    },
    {
        "line": 199,
        "fullcodeline": "GTK_DIALOG(query->dialog),"
    },
    {
        "line": 200,
        "fullcodeline": "_(\"_Cancel connection\"),"
    },
    {
        "line": 205,
        "fullcodeline": "GTK_DIALOG(query->dialog),"
    },
    {
        "line": 206,
        "fullcodeline": "_(\"C_ontinue connection\"),"
    },
    {
        "line": 117,
        "fullcodeline": "if(!match_hostname)"
    },
    {
        "line": 119,
        "fullcodeline": "if(!issuer_known)"
    },
    {
        "line": 124,
        "fullcodeline": "if(expiration_time != (time_t)(-1))"
    },
    {
        "line": 137,
        "fullcodeline": "flags |= INF_GTK_CERTIFICATE_DIALOG_CERT_HOSTNAME_MISMATCH;"
    },
    {
        "line": 139,
        "fullcodeline": "flags |= INF_GTK_CERTIFICATE_DIALOG_CERT_ISSUER_NOT_KNOWN;"
    },
    {
        "line": 153,
        "fullcodeline": "if(table != NULL && g_hash_table_remove(table, hostname) == TRUE)"
    },
    {
        "line": 211,
        "fullcodeline": "_(\"Do you want to continue the connection to host \\\"%s\\\"? If you \""
    },
    {
        "line": 77,
        "fullcodeline": "else if(verify & GNUTLS_CERT_INVALID)"
    },
    {
        "line": 118,
        "fullcodeline": "flags |= INF_GTK_CERTIFICATE_DIALOG_CERT_HOSTNAME_MISMATCH;"
    },
    {
        "line": 120,
        "fullcodeline": "flags |= INF_GTK_CERTIFICATE_DIALOG_CERT_ISSUER_NOT_KNOWN;"
    },
    {
        "line": 126,
        "fullcodeline": "expiration_time -= INF_GTK_CERTIFICATE_MANAGER_EXPIRATION_TOLERANCE;"
    },
    {
        "line": 155,
        "fullcodeline": "inf_gtk_certificate_manager_write_known_hosts_with_warning("
    },
    {
        "line": 78,
        "fullcodeline": "inf_gnutls_certificate_verification_set_error(&error, verify);"
    },
    {
        "line": 127,
        "fullcodeline": "if(time(NULL) > expiration_time)"
    },
    {
        "line": 129,
        "fullcodeline": "flags |= INF_GTK_CERTIFICATE_DIALOG_CERT_OLD_EXPIRED;"
    }
]