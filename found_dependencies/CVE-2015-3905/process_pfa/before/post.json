[
    {
        "line": 13,
        "fullcodeline": "char buffer[LINESIZE];"
    },
    {
        "line": 14,
        "fullcodeline": "int c = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "int blocktyp = PFA_ASCII;"
    },
    {
        "line": 16,
        "fullcodeline": "char saved_orphan = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "(void)ifp_filename;"
    },
    {
        "line": 103,
        "fullcodeline": "fr->output_end();"
    },
    {
        "line": 19,
        "fullcodeline": "while (c != EOF) {"
    },
    {
        "line": 20,
        "fullcodeline": "char *line = buffer, *last = buffer;"
    },
    {
        "line": 21,
        "fullcodeline": "int crlf = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "*last = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "c = getc(ifp);"
    },
    {
        "line": 23,
        "fullcodeline": "while (c != EOF && c != '\\r' && c != '\\n' && last < buffer + LINESIZE - 1) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (last == buffer + LINESIZE - 1)"
    },
    {
        "line": 48,
        "fullcodeline": "if (blocktyp == PFA_ASCII) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (blocktyp == PFA_EEXEC_TEST) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (all_zeroes(line)) {\t/* XXX not safe */"
    },
    {
        "line": 24,
        "fullcodeline": "*last++ = c;"
    },
    {
        "line": 31,
        "fullcodeline": "ungetc(c, ifp);"
    },
    {
        "line": 80,
        "fullcodeline": "memmove(buffer, line, last - line + 1);"
    },
    {
        "line": 81,
        "fullcodeline": "last = buffer + (last - line);"
    },
    {
        "line": 82,
        "fullcodeline": "line = buffer;"
    },
    {
        "line": 93,
        "fullcodeline": "fr->output_ascii(line, last - line);"
    },
    {
        "line": 94,
        "fullcodeline": "blocktyp = PFA_ASCII;"
    },
    {
        "line": 25,
        "fullcodeline": "c = getc(ifp);"
    },
    {
        "line": 49,
        "fullcodeline": "if (strncmp(line, \"currentfile eexec\", 17) == 0 && isspace(line[17])) {"
    },
    {
        "line": 71,
        "fullcodeline": "for (; line < last && isspace(*line); line++)"
    },
    {
        "line": 73,
        "fullcodeline": "if (line == last)"
    },
    {
        "line": 84,
        "fullcodeline": "if (blocktyp == PFA_BINARY && crlf) {"
    },
    {
        "line": 32,
        "fullcodeline": "else if (c == '\\r' && blocktyp != PFA_BINARY) {"
    },
    {
        "line": 54,
        "fullcodeline": "saved_p = *line;"
    },
    {
        "line": 55,
        "fullcodeline": "*line = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "fr->output_ascii(buffer, line - buffer);"
    },
    {
        "line": 57,
        "fullcodeline": "*line = saved_p;"
    },
    {
        "line": 58,
        "fullcodeline": "blocktyp = PFA_EEXEC_TEST;"
    },
    {
        "line": 85,
        "fullcodeline": "last[-1] = '\\r';"
    },
    {
        "line": 95,
        "fullcodeline": "} else if (blocktyp == PFA_HEX) {"
    },
    {
        "line": 41,
        "fullcodeline": "*last++ = '\\n';"
    },
    {
        "line": 52,
        "fullcodeline": "for (line += 18; isspace(*line); line++)"
    },
    {
        "line": 59,
        "fullcodeline": "if (!*line)"
    },
    {
        "line": 62,
        "fullcodeline": "fr->output_ascii(line, last - line);"
    },
    {
        "line": 86,
        "fullcodeline": "if (crlf == 2)"
    },
    {
        "line": 96,
        "fullcodeline": "int len = translate_hex_string(line, &saved_orphan);"
    },
    {
        "line": 36,
        "fullcodeline": "c = getc(ifp);"
    },
    {
        "line": 37,
        "fullcodeline": "if (c != '\\n')"
    },
    {
        "line": 75,
        "fullcodeline": "else if (last >= line + 4 && isxdigit(line[0]) && isxdigit(line[1])"
    },
    {
        "line": 87,
        "fullcodeline": "*last++ = '\\n';"
    },
    {
        "line": 100,
        "fullcodeline": "fr->output_binary((unsigned char *)line, last - line);"
    },
    {
        "line": 38,
        "fullcodeline": "ungetc(c, ifp), crlf = 1;"
    },
    {
        "line": 42,
        "fullcodeline": "} else if (c != EOF)"
    },
    {
        "line": 76,
        "fullcodeline": "&& isxdigit(line[2]) && isxdigit(line[3]))"
    },
    {
        "line": 77,
        "fullcodeline": "blocktyp = PFA_HEX;"
    },
    {
        "line": 98,
        "fullcodeline": "fr->output_binary((unsigned char *)line, len);"
    },
    {
        "line": 40,
        "fullcodeline": "crlf = 2;"
    },
    {
        "line": 43,
        "fullcodeline": "*last++ = c;"
    },
    {
        "line": 79,
        "fullcodeline": "blocktyp = PFA_BINARY;"
    }
]