[
    {
        "line": 3,
        "fullcodeline": "unsigned char buf[4096];"
    },
    {
        "line": 4,
        "fullcodeline": "int r = 0, i;"
    },
    {
        "line": 5,
        "fullcodeline": "BIO *tmpout = NULL;"
    },
    {
        "line": 52,
        "fullcodeline": "r = 1;"
    },
    {
        "line": 7,
        "fullcodeline": "if (out == NULL)"
    },
    {
        "line": 17,
        "fullcodeline": "if(!tmpout)"
    },
    {
        "line": 43,
        "fullcodeline": "if(flags & CMS_TEXT)"
    },
    {
        "line": 55,
        "fullcodeline": "if (tmpout && (tmpout != out))"
    },
    {
        "line": 8,
        "fullcodeline": "tmpout = BIO_new(BIO_s_null());"
    },
    {
        "line": 19,
        "fullcodeline": "CMSerr(CMS_F_CMS_COPY_CONTENT,ERR_R_MALLOC_FAILURE);"
    },
    {
        "line": 26,
        "fullcodeline": "i=BIO_read(in,buf,sizeof(buf));"
    },
    {
        "line": 56,
        "fullcodeline": "BIO_free(tmpout);"
    },
    {
        "line": 27,
        "fullcodeline": "if (i <= 0)"
    },
    {
        "line": 39,
        "fullcodeline": "if (tmpout && (BIO_write(tmpout, buf, i) != i))"
    },
    {
        "line": 45,
        "fullcodeline": "if(!SMIME_text(tmpout, out))"
    },
    {
        "line": 9,
        "fullcodeline": "else if (flags & CMS_TEXT)"
    },
    {
        "line": 47,
        "fullcodeline": "CMSerr(CMS_F_CMS_COPY_CONTENT,CMS_R_SMIME_TEXT_ERROR);"
    },
    {
        "line": 11,
        "fullcodeline": "tmpout = BIO_new(BIO_s_mem());"
    },
    {
        "line": 12,
        "fullcodeline": "BIO_set_mem_eof_return(tmpout, 0);"
    },
    {
        "line": 29,
        "fullcodeline": "if (BIO_method_type(in) == BIO_TYPE_CIPHER)"
    },
    {
        "line": 34,
        "fullcodeline": "if (i < 0)"
    },
    {
        "line": 15,
        "fullcodeline": "tmpout = out;"
    },
    {
        "line": 31,
        "fullcodeline": "if (!BIO_get_cipher_status(in))"
    }
]