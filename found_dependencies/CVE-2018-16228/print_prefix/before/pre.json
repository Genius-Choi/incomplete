[
    {
        "line": 4,
        "fullcodeline": "char buf[sizeof(\"xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx::/128\")];"
    },
    {
        "line": 6,
        "fullcodeline": "if (prefix[0] >= 96 && max_length >= IPV4_MAPPED_HEADING_LEN + 1 &&"
    },
    {
        "line": 31,
        "fullcodeline": "ND_PRINT((ndo, \"%s\", buf));"
    },
    {
        "line": 7,
        "fullcodeline": "is_ipv4_mapped_address(&prefix[1])) {"
    },
    {
        "line": 11,
        "fullcodeline": "plen = prefix[0]-96;"
    },
    {
        "line": 14,
        "fullcodeline": "max_length -= 1;"
    },
    {
        "line": 16,
        "fullcodeline": "memset(&addr, 0, sizeof(addr));"
    },
    {
        "line": 17,
        "fullcodeline": "plenbytes = (plen + 7) / 8;"
    },
    {
        "line": 20,
        "fullcodeline": "memcpy(&addr, &prefix[1 + IPV4_MAPPED_HEADING_LEN], plenbytes);"
    },
    {
        "line": 25,
        "fullcodeline": "snprintf(buf, sizeof(buf), \"%s/%d\", ipaddr_string(ndo, &addr), plen);"
    },
    {
        "line": 26,
        "fullcodeline": "plenbytes += 1 + IPV4_MAPPED_HEADING_LEN;"
    },
    {
        "line": 12,
        "fullcodeline": "if (32 < plen)"
    },
    {
        "line": 21,
        "fullcodeline": "if (plen % 8) {"
    },
    {
        "line": 28,
        "fullcodeline": "plenbytes = decode_prefix6(ndo, prefix, max_length, buf, sizeof(buf));"
    },
    {
        "line": 13,
        "fullcodeline": "return -1;"
    },
    {
        "line": 19,
        "fullcodeline": "return -3;"
    },
    {
        "line": 23,
        "fullcodeline": "((0xff00 >> (plen % 8)) & 0xff);"
    },
    {
        "line": 22,
        "fullcodeline": "((u_char *)&addr)[plenbytes - 1] &="
    }
]