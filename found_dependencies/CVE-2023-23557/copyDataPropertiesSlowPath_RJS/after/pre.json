[
    {
        "line": 7,
        "fullcodeline": "auto cr = JSObject::getOwnPropertyKeys("
    },
    {
        "line": 17,
        "fullcodeline": "auto keys = *cr;"
    },
    {
        "line": 22,
        "fullcodeline": "GCScopeMarkerRAII marker{runtime};"
    },
    {
        "line": 14,
        "fullcodeline": "if (LLVM_UNLIKELY(cr == ExecutionStatus::EXCEPTION)) {"
    },
    {
        "line": 19,
        "fullcodeline": "MutableHandle<> nextKeyHandle{runtime};"
    },
    {
        "line": 20,
        "fullcodeline": "MutableHandle<> propValueHandle{runtime};"
    },
    {
        "line": 21,
        "fullcodeline": "MutableHandle<SymbolID> tmpSymbolStorage{runtime};"
    },
    {
        "line": 25,
        "fullcodeline": "nextKeyIdx < endIdx;"
    },
    {
        "line": 26,
        "fullcodeline": "++nextKeyIdx) {"
    },
    {
        "line": 89,
        "fullcodeline": "return target.getHermesValue();"
    },
    {
        "line": 10,
        "fullcodeline": "OwnKeysFlags()"
    },
    {
        "line": 24,
        "fullcodeline": "for (uint32_t nextKeyIdx = 0, endIdx = keys->getEndIndex();"
    },
    {
        "line": 28,
        "fullcodeline": "nextKeyHandle = keys->at(runtime, nextKeyIdx).unboxToHV(runtime);"
    },
    {
        "line": 61,
        "fullcodeline": "CallResult<bool> crb = JSObject::getOwnComputedDescriptor("
    },
    {
        "line": 29,
        "fullcodeline": "if (nextKeyHandle->isNumber()) {"
    },
    {
        "line": 35,
        "fullcodeline": "nextKeyHandle = strRes->getHermesValue();"
    },
    {
        "line": 46,
        "fullcodeline": "CallResult<bool> cr = JSObject::getOwnComputedPrimitiveDescriptor("
    },
    {
        "line": 63,
        "fullcodeline": "if (LLVM_UNLIKELY(crb == ExecutionStatus::EXCEPTION))"
    },
    {
        "line": 68,
        "fullcodeline": "if ((*crb && desc.flags.enumerable) || from->isHostObject()) {"
    },
    {
        "line": 70,
        "fullcodeline": "CallResult<PseudoHandle<>> crv ="
    },
    {
        "line": 74,
        "fullcodeline": "propValueHandle = std::move(*crv);"
    },
    {
        "line": 76,
        "fullcodeline": "crb = JSObject::defineOwnComputed("
    },
    {
        "line": 31,
        "fullcodeline": "toString_RJS(runtime, nextKeyHandle);"
    },
    {
        "line": 43,
        "fullcodeline": "!excludedItems->isProxyObject() &&"
    },
    {
        "line": 71,
        "fullcodeline": "JSObject::getComputed_RJS(from, runtime, nextKeyHandle);"
    },
    {
        "line": 85,
        "fullcodeline": "crb != ExecutionStatus::EXCEPTION && *crb &&"
    },
    {
        "line": 30,
        "fullcodeline": "CallResult<PseudoHandle<StringPrimitive>> strRes ="
    },
    {
        "line": 32,
        "fullcodeline": "if (LLVM_UNLIKELY(strRes == ExecutionStatus::EXCEPTION)) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (LLVM_UNLIKELY(cr == ExecutionStatus::EXCEPTION))"
    },
    {
        "line": 72,
        "fullcodeline": "if (LLVM_UNLIKELY(crv == ExecutionStatus::EXCEPTION))"
    },
    {
        "line": 82,
        "fullcodeline": "if (LLVM_UNLIKELY(cr == ExecutionStatus::EXCEPTION))"
    }
]