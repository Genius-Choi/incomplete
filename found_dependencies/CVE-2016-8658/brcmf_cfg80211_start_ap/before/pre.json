[
    {
        "line": 5,
        "fullcodeline": "struct brcmf_cfg80211_info *cfg = wiphy_to_cfg(wiphy);"
    },
    {
        "line": 6,
        "fullcodeline": "struct brcmf_if *ifp = netdev_priv(ndev);"
    },
    {
        "line": 10,
        "fullcodeline": "s32 err = -EPERM;"
    },
    {
        "line": 16,
        "fullcodeline": "u16 chanspec = chandef_to_chanspec(&cfg->d11inf, &settings->chandef);"
    },
    {
        "line": 20,
        "fullcodeline": "brcmf_dbg(TRACE, \"ctrlchn=%d, center=%d, bw=%d, beacon_interval=%d, dtim_period=%d,\\n\","
    },
    {
        "line": 24,
        "fullcodeline": "brcmf_dbg(TRACE, \"ssid=%s(%zu), auth_type=%d, inactivity_timeout=%d\\n\","
    },
    {
        "line": 27,
        "fullcodeline": "dev_role = ifp->vif->wdev.iftype;"
    },
    {
        "line": 28,
        "fullcodeline": "mbss = ifp->vif->mbss;"
    },
    {
        "line": 31,
        "fullcodeline": "brcmf_fil_cmd_int_get(ifp, BRCMF_C_GET_REGULATORY, &ifp->vif->is_11d);"
    },
    {
        "line": 32,
        "fullcodeline": "country_ie = brcmf_parse_tlvs((u8 *)settings->beacon.tail,"
    },
    {
        "line": 35,
        "fullcodeline": "is_11d = country_ie ? 1 : 0;"
    },
    {
        "line": 37,
        "fullcodeline": "memset(&ssid_le, 0, sizeof(ssid_le));"
    },
    {
        "line": 61,
        "fullcodeline": "rsn_ie = brcmf_parse_tlvs((u8 *)settings->beacon.tail,"
    },
    {
        "line": 65,
        "fullcodeline": "wpa_ie = brcmf_find_wpaie((u8 *)settings->beacon.tail,"
    },
    {
        "line": 90,
        "fullcodeline": "brcmf_config_ap_mgmt_ie(ifp->vif, &settings->beacon);"
    },
    {
        "line": 220,
        "fullcodeline": "set_bit(BRCMF_VIF_STATUS_AP_CREATED, &ifp->vif->sme_state);"
    },
    {
        "line": 221,
        "fullcodeline": "brcmf_net_setcarrier(ifp, true);"
    },
    {
        "line": 38,
        "fullcodeline": "if (settings->ssid == NULL || settings->ssid_len == 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (!mbss) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (!mbss) {"
    },
    {
        "line": 143,
        "fullcodeline": "if (dev_role == NL80211_IFTYPE_AP) {"
    },
    {
        "line": 224,
        "fullcodeline": "if ((err) && (!mbss)) {"
    },
    {
        "line": 39,
        "fullcodeline": "ie_offset = DOT11_MGMT_HDR_LEN + DOT11_BCN_PRB_FIXED_LEN;"
    },
    {
        "line": 40,
        "fullcodeline": "ssid_ie = brcmf_parse_tlvs("
    },
    {
        "line": 47,
        "fullcodeline": "memcpy(ssid_le.SSID, ssid_ie->data, ssid_ie->len);"
    },
    {
        "line": 48,
        "fullcodeline": "ssid_le.SSID_len = cpu_to_le32(ssid_ie->len);"
    },
    {
        "line": 49,
        "fullcodeline": "brcmf_dbg(TRACE, \"SSID is (%s) in Head\\n\", ssid_le.SSID);"
    },
    {
        "line": 56,
        "fullcodeline": "brcmf_set_mpc(ifp, 0);"
    },
    {
        "line": 57,
        "fullcodeline": "brcmf_configure_arp_nd_offload(ifp, false);"
    },
    {
        "line": 68,
        "fullcodeline": "if ((wpa_ie != NULL || rsn_ie != NULL)) {"
    },
    {
        "line": 69,
        "fullcodeline": "brcmf_dbg(TRACE, \"WPA(2) IE is found\\n\");"
    },
    {
        "line": 131,
        "fullcodeline": "err = brcmf_fil_cmd_int_set(ifp, BRCMF_C_SET_INFRA, 1);"
    },
    {
        "line": 147,
        "fullcodeline": "err = brcmf_fil_cmd_int_set(ifp, BRCMF_C_SET_AP, 1);"
    },
    {
        "line": 163,
        "fullcodeline": "err = brcmf_fil_cmd_int_set(ifp, BRCMF_C_UP, 1);"
    },
    {
        "line": 171,
        "fullcodeline": "brcmf_cfg80211_reconfigure_wep(ifp);"
    },
    {
        "line": 173,
        "fullcodeline": "memset(&join_params, 0, sizeof(join_params));"
    },
    {
        "line": 177,
        "fullcodeline": "err = brcmf_fil_cmd_data_set(ifp, BRCMF_C_SET_SSID,"
    },
    {
        "line": 225,
        "fullcodeline": "brcmf_set_mpc(ifp, 1);"
    },
    {
        "line": 44,
        "fullcodeline": "if (!ssid_ie)"
    },
    {
        "line": 51,
        "fullcodeline": "memcpy(ssid_le.SSID, settings->ssid, settings->ssid_len);"
    },
    {
        "line": 52,
        "fullcodeline": "ssid_le.SSID_len = cpu_to_le32((u32)settings->ssid_len);"
    },
    {
        "line": 70,
        "fullcodeline": "if (wpa_ie != NULL) {"
    },
    {
        "line": 86,
        "fullcodeline": "brcmf_dbg(TRACE, \"No WPA(2) IEs found\\n\");"
    },
    {
        "line": 87,
        "fullcodeline": "brcmf_configure_opensecurity(ifp);"
    },
    {
        "line": 94,
        "fullcodeline": "if (is_11d != ifp->vif->is_11d) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 144,
        "fullcodeline": "if ((brcmf_feat_is_enabled(ifp, BRCMF_FEAT_MBSS)) && (!mbss))"
    },
    {
        "line": 148,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 152,
        "fullcodeline": "if (!mbss) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 179,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 41,
        "fullcodeline": "(u8 *)&settings->beacon.head[ie_offset],"
    },
    {
        "line": 42,
        "fullcodeline": "settings->beacon.head_len - ie_offset,"
    },
    {
        "line": 72,
        "fullcodeline": "err = brcmf_configure_wpaie(ifp, wpa_ie, false);"
    },
    {
        "line": 95,
        "fullcodeline": "err = brcmf_fil_cmd_int_set(ifp, BRCMF_C_SET_REGULATORY,"
    },
    {
        "line": 103,
        "fullcodeline": "err = brcmf_fil_cmd_int_set(ifp, BRCMF_C_SET_BCNPRD,"
    },
    {
        "line": 112,
        "fullcodeline": "err = brcmf_fil_cmd_int_set(ifp, BRCMF_C_SET_DTIMPRD,"
    },
    {
        "line": 120,
        "fullcodeline": "if ((dev_role == NL80211_IFTYPE_AP) &&"
    },
    {
        "line": 121,
        "fullcodeline": "((ifp->ifidx == 0) ||"
    },
    {
        "line": 123,
        "fullcodeline": "err = brcmf_fil_cmd_int_set(ifp, BRCMF_C_DOWN, 1);"
    },
    {
        "line": 128,
        "fullcodeline": "brcmf_fil_iovar_int_set(ifp, \"apsta\", 0);"
    },
    {
        "line": 133,
        "fullcodeline": "brcmf_err(\"SET INFRA error %d\\n\", err);"
    },
    {
        "line": 145,
        "fullcodeline": "brcmf_fil_iovar_int_set(ifp, \"mbss\", 1);"
    },
    {
        "line": 149,
        "fullcodeline": "brcmf_err(\"setting AP mode failed %d\\n\", err);"
    },
    {
        "line": 156,
        "fullcodeline": "err = brcmf_fil_iovar_int_set(ifp, \"chanspec\", chanspec);"
    },
    {
        "line": 165,
        "fullcodeline": "brcmf_err(\"BRCMF_C_UP error (%d)\\n\", err);"
    },
    {
        "line": 180,
        "fullcodeline": "brcmf_err(\"SET SSID error (%d)\\n\", err);"
    },
    {
        "line": 185,
        "fullcodeline": "err = brcmf_fil_iovar_int_set(ifp, \"closednet\", 1);"
    },
    {
        "line": 193,
        "fullcodeline": "} else if (dev_role == NL80211_IFTYPE_P2P_GO) {"
    },
    {
        "line": 45,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 73,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 78,
        "fullcodeline": "tmp_ie = (struct brcmf_vs_tlv *)rsn_ie;"
    },
    {
        "line": 81,
        "fullcodeline": "err = brcmf_configure_wpaie(ifp, tmp_ie, true);"
    },
    {
        "line": 97,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 114,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 122,
        "fullcodeline": "!brcmf_feat_is_enabled(ifp, BRCMF_FEAT_RSDB))) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 136,
        "fullcodeline": "} else if (WARN_ON(is_11d != ifp->vif->is_11d)) {"
    },
    {
        "line": 138,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 157,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 194,
        "fullcodeline": "err = brcmf_fil_iovar_int_set(ifp, \"chanspec\", chanspec);"
    },
    {
        "line": 200,
        "fullcodeline": "err = brcmf_fil_bsscfg_data_set(ifp, \"ssid\", &ssid_le,"
    },
    {
        "line": 206,
        "fullcodeline": "bss_enable.bsscfgidx = cpu_to_le32(ifp->bsscfgidx);"
    },
    {
        "line": 207,
        "fullcodeline": "bss_enable.enable = cpu_to_le32(1);"
    },
    {
        "line": 208,
        "fullcodeline": "err = brcmf_fil_iovar_data_set(ifp, \"bss\", &bss_enable,"
    },
    {
        "line": 82,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 98,
        "fullcodeline": "brcmf_err(\"Regulatory Set Error, %d\\n\", err);"
    },
    {
        "line": 106,
        "fullcodeline": "brcmf_err(\"Beacon Interval Set Error, %d\\n\","
    },
    {
        "line": 115,
        "fullcodeline": "brcmf_err(\"DTIM Interval Set Error, %d\\n\", err);"
    },
    {
        "line": 125,
        "fullcodeline": "brcmf_err(\"BRCMF_C_DOWN error %d\\n\", err);"
    },
    {
        "line": 158,
        "fullcodeline": "brcmf_err(\"Set Channel failed: chspec=%d, %d\\n\","
    },
    {
        "line": 187,
        "fullcodeline": "brcmf_err(\"closednet error (%d)\\n\", err);"
    },
    {
        "line": 195,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 202,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 210,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 196,
        "fullcodeline": "brcmf_err(\"Set Channel failed: chspec=%d, %d\\n\","
    },
    {
        "line": 203,
        "fullcodeline": "brcmf_err(\"setting ssid failed %d\\n\", err);"
    },
    {
        "line": 211,
        "fullcodeline": "brcmf_err(\"bss_enable config failed %d\\n\", err);"
    }
]