[
    {
        "line": 11,
        "fullcodeline": "assert(image != (Image *) NULL);"
    },
    {
        "line": 12,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 15,
        "fullcodeline": "assert(quantum_info != (QuantumInfo *) NULL);"
    },
    {
        "line": 16,
        "fullcodeline": "assert(quantum_info->signature == MagickCoreSignature);"
    },
    {
        "line": 17,
        "fullcodeline": "quantum_info->depth=depth;"
    },
    {
        "line": 30,
        "fullcodeline": "quantum=(quantum_info->pad+6)*(quantum_info->depth+7)/8;"
    },
    {
        "line": 31,
        "fullcodeline": "extent=image->columns*quantum;"
    },
    {
        "line": 13,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 18,
        "fullcodeline": "if (quantum_info->format == FloatingPointQuantumFormat)"
    },
    {
        "line": 28,
        "fullcodeline": "if (quantum_info->pixels != (unsigned char **) NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "if ((image->columns != 0) && (quantum != (extent/image->columns)))"
    },
    {
        "line": 34,
        "fullcodeline": "return(AcquireQuantumPixels(quantum_info,extent));"
    },
    {
        "line": 14,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 29,
        "fullcodeline": "DestroyQuantumPixels(quantum_info);"
    },
    {
        "line": 20,
        "fullcodeline": "if (quantum_info->depth > 32)"
    },
    {
        "line": 21,
        "fullcodeline": "quantum_info->depth=64;"
    },
    {
        "line": 23,
        "fullcodeline": "if (quantum_info->depth > 16)"
    },
    {
        "line": 24,
        "fullcodeline": "quantum_info->depth=32;"
    },
    {
        "line": 26,
        "fullcodeline": "quantum_info->depth=16;"
    }
]