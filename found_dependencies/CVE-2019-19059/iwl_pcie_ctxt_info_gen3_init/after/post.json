[
    {
        "line": 4,
        "fullcodeline": "struct iwl_trans_pcie *trans_pcie = IWL_TRANS_GET_PCIE_TRANS(trans);"
    },
    {
        "line": 10,
        "fullcodeline": "u32 control_flags = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "int cmdq_size = max_t(u32, IWL_CMD_QUEUE_SIZE,"
    },
    {
        "line": 16,
        "fullcodeline": "prph_scratch = dma_alloc_coherent(trans->dev, sizeof(*prph_scratch),"
    },
    {
        "line": 22,
        "fullcodeline": "prph_sc_ctrl = &prph_scratch->ctrl_cfg;"
    },
    {
        "line": 24,
        "fullcodeline": "prph_sc_ctrl->version.version = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "prph_sc_ctrl->version.mac_id ="
    },
    {
        "line": 27,
        "fullcodeline": "prph_sc_ctrl->version.size = cpu_to_le16(sizeof(*prph_scratch) / 4);"
    },
    {
        "line": 29,
        "fullcodeline": "control_flags = IWL_PRPH_SCRATCH_RB_SIZE_4K |"
    },
    {
        "line": 35,
        "fullcodeline": "prph_sc_ctrl->control.control_flags = cpu_to_le32(control_flags);"
    },
    {
        "line": 38,
        "fullcodeline": "prph_sc_ctrl->rbd_cfg.free_rbd_addr ="
    },
    {
        "line": 52,
        "fullcodeline": "ret = iwl_pcie_init_fw_sec(trans, fw, &prph_scratch->dram);"
    },
    {
        "line": 60,
        "fullcodeline": "prph_info = dma_alloc_coherent(trans->dev, sizeof(*prph_info),"
    },
    {
        "line": 69,
        "fullcodeline": "ctxt_info_gen3 = dma_alloc_coherent(trans->dev,"
    },
    {
        "line": 78,
        "fullcodeline": "ctxt_info_gen3->prph_info_base_addr ="
    },
    {
        "line": 80,
        "fullcodeline": "ctxt_info_gen3->prph_scratch_base_addr ="
    },
    {
        "line": 84,
        "fullcodeline": "ctxt_info_gen3->cr_head_idx_arr_base_addr ="
    },
    {
        "line": 86,
        "fullcodeline": "ctxt_info_gen3->tr_tail_idx_arr_base_addr ="
    },
    {
        "line": 88,
        "fullcodeline": "ctxt_info_gen3->cr_tail_idx_arr_base_addr ="
    },
    {
        "line": 90,
        "fullcodeline": "ctxt_info_gen3->cr_idx_arr_size ="
    },
    {
        "line": 92,
        "fullcodeline": "ctxt_info_gen3->tr_idx_arr_size ="
    },
    {
        "line": 94,
        "fullcodeline": "ctxt_info_gen3->mtr_base_addr ="
    },
    {
        "line": 96,
        "fullcodeline": "ctxt_info_gen3->mcr_base_addr ="
    },
    {
        "line": 98,
        "fullcodeline": "ctxt_info_gen3->mtr_size ="
    },
    {
        "line": 100,
        "fullcodeline": "ctxt_info_gen3->mcr_size ="
    },
    {
        "line": 103,
        "fullcodeline": "trans_pcie->ctxt_info_gen3 = ctxt_info_gen3;"
    },
    {
        "line": 104,
        "fullcodeline": "trans_pcie->prph_info = prph_info;"
    },
    {
        "line": 105,
        "fullcodeline": "trans_pcie->prph_scratch = prph_scratch;"
    },
    {
        "line": 108,
        "fullcodeline": "iml_img = dma_alloc_coherent(trans->dev, trans->iml_len,"
    },
    {
        "line": 113,
        "fullcodeline": "memcpy(iml_img, trans->iml, trans->iml_len);"
    },
    {
        "line": 115,
        "fullcodeline": "iwl_enable_fw_load_int_ctx_info(trans);"
    },
    {
        "line": 118,
        "fullcodeline": "iwl_write64(trans, CSR_CTXT_INFO_ADDR,"
    },
    {
        "line": 120,
        "fullcodeline": "iwl_write64(trans, CSR_IML_DATA_ADDR,"
    },
    {
        "line": 122,
        "fullcodeline": "iwl_write32(trans, CSR_IML_SIZE_ADDR, trans->iml_len);"
    },
    {
        "line": 124,
        "fullcodeline": "iwl_set_bit(trans, CSR_CTXT_INFO_BOOT_CTRL,"
    },
    {
        "line": 134,
        "fullcodeline": "dma_free_coherent(trans->dev,"
    },
    {
        "line": 140,
        "fullcodeline": "dma_free_coherent(trans->dev,"
    },
    {
        "line": 19,
        "fullcodeline": "if (!prph_scratch)"
    },
    {
        "line": 26,
        "fullcodeline": "cpu_to_le16((u16)iwl_read32(trans, CSR_HW_REV));"
    },
    {
        "line": 42,
        "fullcodeline": "if (!iwl_trans_dbg_ini_valid(trans))"
    },
    {
        "line": 63,
        "fullcodeline": "if (!prph_info) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (!ctxt_info_gen3) {"
    },
    {
        "line": 79,
        "fullcodeline": "cpu_to_le64(trans_pcie->prph_info_dma_addr);"
    },
    {
        "line": 81,
        "fullcodeline": "cpu_to_le64(trans_pcie->prph_scratch_dma_addr);"
    },
    {
        "line": 91,
        "fullcodeline": "cpu_to_le16(IWL_NUM_OF_COMPLETION_RINGS);"
    },
    {
        "line": 93,
        "fullcodeline": "cpu_to_le16(IWL_NUM_OF_TRANSFER_RINGS);"
    },
    {
        "line": 99,
        "fullcodeline": "cpu_to_le16(TFD_QUEUE_CB_SIZE(cmdq_size));"
    },
    {
        "line": 101,
        "fullcodeline": "cpu_to_le16(RX_QUEUE_CB_SIZE(MQ_RX_TABLE_SIZE));"
    },
    {
        "line": 110,
        "fullcodeline": "if (!iml_img)"
    },
    {
        "line": 126,
        "fullcodeline": "if (trans->trans_cfg->device_family >= IWL_DEVICE_FAMILY_AX210)"
    },
    {
        "line": 43,
        "fullcodeline": "iwl_pcie_alloc_fw_monitor(trans, 0);"
    },
    {
        "line": 45,
        "fullcodeline": "prph_sc_ctrl->hwm_cfg.hwm_base_addr ="
    },
    {
        "line": 47,
        "fullcodeline": "prph_sc_ctrl->hwm_cfg.hwm_size ="
    },
    {
        "line": 64,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 74,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 127,
        "fullcodeline": "iwl_write_umac_prph(trans, UREG_CPU_INIT_RUN, 1);"
    },
    {
        "line": 20,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 111,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 129,
        "fullcodeline": "iwl_set_bit(trans, CSR_GP_CNTRL, CSR_AUTO_FUNC_INIT);"
    },
    {
        "line": 31,
        "fullcodeline": "(IWL_PRPH_MTR_FORMAT_256B &"
    }
]