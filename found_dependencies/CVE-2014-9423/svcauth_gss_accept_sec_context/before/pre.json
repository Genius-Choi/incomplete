[
    {
        "line": 8,
        "fullcodeline": "OM_uint32\t\t maj_stat = 0, min_stat = 0, ret_flags, seq;"
    },
    {
        "line": 10,
        "fullcodeline": "log_debug(\"in svcauth_gss_accept_context()\");"
    },
    {
        "line": 12,
        "fullcodeline": "gd = SVCAUTH_PRIVATE(rqst->rq_xprt->xp_auth);"
    },
    {
        "line": 13,
        "fullcodeline": "gc = (struct rpc_gss_cred *)rqst->rq_clntcred;"
    },
    {
        "line": 14,
        "fullcodeline": "memset(gr, 0, sizeof(*gr));"
    },
    {
        "line": 17,
        "fullcodeline": "memset(&recv_tok, 0, sizeof(recv_tok));"
    },
    {
        "line": 23,
        "fullcodeline": "gr->gr_major = gss_accept_sec_context(&gr->gr_minor,"
    },
    {
        "line": 35,
        "fullcodeline": "svc_freeargs(rqst->rq_xprt, xdr_rpc_gss_init_args, (caddr_t)&recv_tok);"
    },
    {
        "line": 37,
        "fullcodeline": "log_status(\"accept_sec_context\", gr->gr_major, gr->gr_minor);"
    },
    {
        "line": 52,
        "fullcodeline": "memcpy(gr->gr_ctx.value, gd->ctx, sizeof(gss_union_ctx_id_desc));"
    },
    {
        "line": 56,
        "fullcodeline": "gr->gr_win = sizeof(gd->seqmask) * 8;"
    },
    {
        "line": 59,
        "fullcodeline": "gd->sec.mech = mech;"
    },
    {
        "line": 19,
        "fullcodeline": "if (!svc_getargs(rqst->rq_xprt, xdr_rpc_gss_init_args,"
    },
    {
        "line": 65,
        "fullcodeline": "if (gr->gr_major == GSS_S_COMPLETE) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (gr->gr_major != GSS_S_COMPLETE &&"
    },
    {
        "line": 39,
        "fullcodeline": "gr->gr_major != GSS_S_CONTINUE_NEEDED) {"
    },
    {
        "line": 41,
        "fullcodeline": "gd->ctx = GSS_C_NO_CONTEXT;"
    },
    {
        "line": 48,
        "fullcodeline": "if ((gr->gr_ctx.value = mem_alloc(sizeof(gss_union_ctx_id_desc))) == NULL) {"
    },
    {
        "line": 49,
        "fullcodeline": "fprintf(stderr, \"svcauth_gss_accept_context: out of memory\\n\");"
    },
    {
        "line": 70,
        "fullcodeline": "maj_stat = gss_display_name(&min_stat, gd->client_name,"
    },
    {
        "line": 101,
        "fullcodeline": "seq = htonl(gr->gr_win);"
    },
    {
        "line": 102,
        "fullcodeline": "seqbuf.value = &seq;"
    },
    {
        "line": 103,
        "fullcodeline": "seqbuf.length = sizeof(seq);"
    },
    {
        "line": 105,
        "fullcodeline": "gss_release_buffer(&min_stat, &gd->checksum);"
    },
    {
        "line": 106,
        "fullcodeline": "maj_stat = gss_sign(&min_stat, gd->ctx, GSS_C_QOP_DEFAULT,"
    },
    {
        "line": 114,
        "fullcodeline": "rqst->rq_xprt->xp_verf.oa_flavor = RPCSEC_GSS;"
    },
    {
        "line": 20,
        "fullcodeline": "(caddr_t)&recv_tok))"
    },
    {
        "line": 75,
        "fullcodeline": "if (maj_stat != GSS_S_COMPLETE) {"
    },
    {
        "line": 76,
        "fullcodeline": "log_status(\"display_name\", maj_stat, min_stat);"
    }
]