[
    {
        "line": 7,
        "fullcodeline": "char_u\ttword[MAXWLEN];\t    // good word collected so far"
    },
    {
        "line": 8,
        "fullcodeline": "trystate_T\tstack[MAXWLEN];"
    },
    {
        "line": 9,
        "fullcodeline": "char_u\tpreword[MAXWLEN * 3]; // word found with proper case;"
    },
    {
        "line": 14,
        "fullcodeline": "char_u\tcompflags[MAXWLEN];\t// compound flags, one for each word"
    },
    {
        "line": 22,
        "fullcodeline": "int\t\tn = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "int\t\tfl = 0, tl;"
    },
    {
        "line": 30,
        "fullcodeline": "int\t\trepextra = 0;\t    // extra bytes in fword[] from REP item"
    },
    {
        "line": 31,
        "fullcodeline": "slang_T\t*slang = lp->lp_slang;"
    },
    {
        "line": 38,
        "fullcodeline": "int\t\tbreakcheckcount = 1000;"
    },
    {
        "line": 48,
        "fullcodeline": "depth = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "sp = &stack[0];"
    },
    {
        "line": 50,
        "fullcodeline": "CLEAR_POINTER(sp);"
    },
    {
        "line": 51,
        "fullcodeline": "sp->ts_curi = 1;"
    },
    {
        "line": 98,
        "fullcodeline": "while (depth >= 0 && !got_int)"
    },
    {
        "line": 56,
        "fullcodeline": "byts = fbyts = slang->sl_sbyts;"
    },
    {
        "line": 57,
        "fullcodeline": "idxs = fidxs = slang->sl_sidxs;"
    },
    {
        "line": 58,
        "fullcodeline": "pbyts = NULL;"
    },
    {
        "line": 59,
        "fullcodeline": "pidxs = NULL;"
    },
    {
        "line": 60,
        "fullcodeline": "sp->ts_prefixdepth = PFD_NOPREFIX;"
    },
    {
        "line": 61,
        "fullcodeline": "sp->ts_state = STATE_START;"
    },
    {
        "line": 100,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 67,
        "fullcodeline": "fbyts = slang->sl_fbyts;"
    },
    {
        "line": 68,
        "fullcodeline": "fidxs = slang->sl_fidxs;"
    },
    {
        "line": 69,
        "fullcodeline": "pbyts = slang->sl_pbyts;"
    },
    {
        "line": 70,
        "fullcodeline": "pidxs = slang->sl_pidxs;"
    },
    {
        "line": 71,
        "fullcodeline": "if (pbyts != NULL)"
    },
    {
        "line": 107,
        "fullcodeline": "arridx = sp->ts_arridx;\t    // current node in the tree"
    },
    {
        "line": 108,
        "fullcodeline": "len = byts[arridx];\t\t    // bytes in this node"
    },
    {
        "line": 109,
        "fullcodeline": "arridx += sp->ts_curi;\t    // index of current byte"
    },
    {
        "line": 170,
        "fullcodeline": "++sp->ts_curi;\t\t// eat one NUL byte"
    },
    {
        "line": 172,
        "fullcodeline": "flags = (int)idxs[arridx];"
    },
    {
        "line": 178,
        "fullcodeline": "fword_ends = (fword[sp->ts_fidx] == NUL"
    },
    {
        "line": 182,
        "fullcodeline": "tword[sp->ts_twordlen] = NUL;"
    },
    {
        "line": 223,
        "fullcodeline": "p = NULL;"
    },
    {
        "line": 224,
        "fullcodeline": "compound_ok = TRUE;"
    },
    {
        "line": 347,
        "fullcodeline": "newscore = 0;"
    },
    {
        "line": 624,
        "fullcodeline": "su->su_badflags = sp->ts_save_badflags;"
    },
    {
        "line": 628,
        "fullcodeline": "sp->ts_state = STATE_START;"
    },
    {
        "line": 631,
        "fullcodeline": "byts = fbyts;"
    },
    {
        "line": 632,
        "fullcodeline": "idxs = fidxs;"
    },
    {
        "line": 637,
        "fullcodeline": "su->su_badflags = sp->ts_save_badflags;"
    },
    {
        "line": 646,
        "fullcodeline": "sp->ts_state = STATE_PLAIN;"
    },
    {
        "line": 652,
        "fullcodeline": "arridx = sp->ts_arridx;"
    },
    {
        "line": 815,
        "fullcodeline": "sp->ts_state = STATE_INS_PREP;"
    },
    {
        "line": 816,
        "fullcodeline": "sp->ts_curi = 1;"
    },
    {
        "line": 873,
        "fullcodeline": "n = sp->ts_arridx;"
    },
    {
        "line": 899,
        "fullcodeline": "n = sp->ts_arridx;"
    },
    {
        "line": 912,
        "fullcodeline": "n += sp->ts_curi++;"
    },
    {
        "line": 913,
        "fullcodeline": "c = byts[n];"
    },
    {
        "line": 965,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 966,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1056,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1075,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1144,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1217,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1278,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1327,
        "fullcodeline": "sp->ts_state = STATE_REP;"
    },
    {
        "line": 1334,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1393,
        "fullcodeline": "ftp = (fromto_T *)gap->ga_data + sp->ts_curi - 1;"
    },
    {
        "line": 1394,
        "fullcodeline": "fl = (int)STRLEN(ftp->ft_from);"
    },
    {
        "line": 1395,
        "fullcodeline": "tl = (int)STRLEN(ftp->ft_to);"
    },
    {
        "line": 1396,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1402,
        "fullcodeline": "mch_memmove(p, ftp->ft_from, fl);"
    },
    {
        "line": 1404,
        "fullcodeline": "sp->ts_state = STATE_REP;"
    },
    {
        "line": 1409,
        "fullcodeline": "--depth;"
    },
    {
        "line": 73,
        "fullcodeline": "byts = pbyts;"
    },
    {
        "line": 74,
        "fullcodeline": "idxs = pidxs;"
    },
    {
        "line": 75,
        "fullcodeline": "sp->ts_prefixdepth = PFD_PREFIXTREE;"
    },
    {
        "line": 76,
        "fullcodeline": "sp->ts_state = STATE_NOPREFIX;\t// try without prefix first"
    },
    {
        "line": 111,
        "fullcodeline": "if (sp->ts_prefixdepth == PFD_PREFIXTREE)"
    },
    {
        "line": 175,
        "fullcodeline": "if (flags & WF_NOSUGGEST)"
    },
    {
        "line": 217,
        "fullcodeline": "if (sp->ts_complen == sp->ts_compsplit && fword_ends"
    },
    {
        "line": 225,
        "fullcodeline": "if (sp->ts_complen > sp->ts_compsplit)"
    },
    {
        "line": 327,
        "fullcodeline": "if (!soundfold)"
    },
    {
        "line": 348,
        "fullcodeline": "if (!soundfold)\t// soundfold words don't have flags"
    },
    {
        "line": 638,
        "fullcodeline": "if (fword[sp->ts_fidx] == NUL && sp->ts_tcharlen == 0)"
    },
    {
        "line": 653,
        "fullcodeline": "if (sp->ts_curi > byts[arridx])"
    },
    {
        "line": 807,
        "fullcodeline": "if (has_mbyte && sp->ts_tcharlen > 0)"
    },
    {
        "line": 823,
        "fullcodeline": "if (fword[sp->ts_fidx] != NUL"
    },
    {
        "line": 863,
        "fullcodeline": "if (sp->ts_flags & TSF_DIDDEL)"
    },
    {
        "line": 900,
        "fullcodeline": "if (sp->ts_curi > byts[n])"
    },
    {
        "line": 920,
        "fullcodeline": "if (c != fword[sp->ts_fidx]"
    },
    {
        "line": 967,
        "fullcodeline": "if (c == NUL)"
    },
    {
        "line": 977,
        "fullcodeline": "if (!soundfold && !spell_iswordp(p, curwin))"
    },
    {
        "line": 1006,
        "fullcodeline": "if (c2 == NUL)"
    },
    {
        "line": 1015,
        "fullcodeline": "if (c == c2)"
    },
    {
        "line": 1109,
        "fullcodeline": "if (TRY_DEEPER(su, stack, depth, SCORE_SWAP3))"
    },
    {
        "line": 1165,
        "fullcodeline": "if (!soundfold && !spell_iswordp(p, curwin))"
    },
    {
        "line": 1176,
        "fullcodeline": "if (TRY_DEEPER(su, stack, depth, SCORE_SWAP3))"
    },
    {
        "line": 1237,
        "fullcodeline": "if (TRY_DEEPER(su, stack, depth, SCORE_SWAP3))"
    },
    {
        "line": 1319,
        "fullcodeline": "if (sp->ts_curi < 0)"
    },
    {
        "line": 1340,
        "fullcodeline": "while (sp->ts_curi < gap->ga_len)"
    },
    {
        "line": 1397,
        "fullcodeline": "if (fl != tl)"
    },
    {
        "line": 1419,
        "fullcodeline": "if (--breakcheckcount == 0)"
    },
    {
        "line": 80,
        "fullcodeline": "byts = fbyts;"
    },
    {
        "line": 81,
        "fullcodeline": "idxs = fidxs;"
    },
    {
        "line": 82,
        "fullcodeline": "sp->ts_prefixdepth = PFD_NOPREFIX;"
    },
    {
        "line": 83,
        "fullcodeline": "sp->ts_state = STATE_START;"
    },
    {
        "line": 116,
        "fullcodeline": "sp->ts_curi += n;"
    },
    {
        "line": 119,
        "fullcodeline": "n = (int)sp->ts_state;"
    },
    {
        "line": 121,
        "fullcodeline": "sp->ts_state = STATE_ENDNUL;"
    },
    {
        "line": 122,
        "fullcodeline": "sp->ts_save_badflags = su->su_badflags;"
    },
    {
        "line": 160,
        "fullcodeline": "if (sp->ts_curi > len || byts[arridx] != 0)"
    },
    {
        "line": 164,
        "fullcodeline": "sp->ts_state = STATE_ENDNUL;"
    },
    {
        "line": 165,
        "fullcodeline": "sp->ts_save_badflags = su->su_badflags;"
    },
    {
        "line": 184,
        "fullcodeline": "if (sp->ts_prefixdepth <= PFD_NOTSPECIAL"
    },
    {
        "line": 186,
        "fullcodeline": "&& pbyts != NULL)"
    },
    {
        "line": 192,
        "fullcodeline": "n = stack[sp->ts_prefixdepth].ts_arridx;"
    },
    {
        "line": 193,
        "fullcodeline": "len = pbyts[n++];"
    },
    {
        "line": 218,
        "fullcodeline": "&& (flags & WF_NEEDCOMP))"
    },
    {
        "line": 219,
        "fullcodeline": "goodword_ends = FALSE;"
    },
    {
        "line": 362,
        "fullcodeline": "if (fword_ends"
    },
    {
        "line": 434,
        "fullcodeline": "if ((sp->ts_fidx >= sp->ts_fidxtry || fword_ends)"
    },
    {
        "line": 436,
        "fullcodeline": "&& (!has_mbyte || sp->ts_tcharlen == 0))"
    },
    {
        "line": 446,
        "fullcodeline": "try_split = (sp->ts_fidx - repextra < su->su_badlen)"
    },
    {
        "line": 461,
        "fullcodeline": "try_compound = FALSE;"
    },
    {
        "line": 642,
        "fullcodeline": "sp->ts_state = STATE_DEL;"
    },
    {
        "line": 810,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 817,
        "fullcodeline": "if (soundfold && sp->ts_fidx == 0 && fword[sp->ts_fidx] == '*')"
    },
    {
        "line": 820,
        "fullcodeline": "newscore = 2 * SCORE_DEL / 3;"
    },
    {
        "line": 824,
        "fullcodeline": "&& TRY_DEEPER(su, stack, depth, newscore))"
    },
    {
        "line": 826,
        "fullcodeline": "go_deeper(stack, depth, newscore);"
    },
    {
        "line": 832,
        "fullcodeline": "++depth;"
    },
    {
        "line": 868,
        "fullcodeline": "sp->ts_state = STATE_SWAP;"
    },
    {
        "line": 890,
        "fullcodeline": "++sp->ts_curi;"
    },
    {
        "line": 904,
        "fullcodeline": "sp->ts_state = STATE_SWAP;"
    },
    {
        "line": 914,
        "fullcodeline": "if (soundfold && sp->ts_twordlen == 0 && c == '*')"
    },
    {
        "line": 917,
        "fullcodeline": "newscore = 2 * SCORE_INS / 3;"
    },
    {
        "line": 921,
        "fullcodeline": "&& TRY_DEEPER(su, stack, depth, newscore))"
    },
    {
        "line": 923,
        "fullcodeline": "go_deeper(stack, depth, newscore);"
    },
    {
        "line": 929,
        "fullcodeline": "++depth;"
    },
    {
        "line": 930,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 931,
        "fullcodeline": "tword[sp->ts_twordlen++] = c;"
    },
    {
        "line": 932,
        "fullcodeline": "sp->ts_arridx = idxs[n];"
    },
    {
        "line": 971,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 980,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 986,
        "fullcodeline": "n = MB_CPTR2LEN(p);"
    },
    {
        "line": 987,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 1009,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1018,
        "fullcodeline": "sp->ts_state = STATE_SWAP3;"
    },
    {
        "line": 1021,
        "fullcodeline": "if (c2 != NUL && TRY_DEEPER(su, stack, depth, SCORE_SWAP))"
    },
    {
        "line": 1023,
        "fullcodeline": "go_deeper(stack, depth, SCORE_SWAP);"
    },
    {
        "line": 1030,
        "fullcodeline": "sp->ts_state = STATE_UNSWAP;"
    },
    {
        "line": 1031,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1059,
        "fullcodeline": "n = mb_ptr2len(p);"
    },
    {
        "line": 1060,
        "fullcodeline": "c = mb_ptr2char(p + n);"
    },
    {
        "line": 1061,
        "fullcodeline": "mch_memmove(p + mb_ptr2len(p + n), p, n);"
    },
    {
        "line": 1078,
        "fullcodeline": "n = MB_CPTR2LEN(p);"
    },
    {
        "line": 1079,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 1080,
        "fullcodeline": "fl = MB_CPTR2LEN(p + n);"
    },
    {
        "line": 1081,
        "fullcodeline": "c2 = mb_ptr2char(p + n);"
    },
    {
        "line": 1103,
        "fullcodeline": "if (c == c3 || c3 == NUL)"
    },
    {
        "line": 1106,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1111,
        "fullcodeline": "go_deeper(stack, depth, SCORE_SWAP3);"
    },
    {
        "line": 1118,
        "fullcodeline": "sp->ts_state = STATE_UNSWAP3;"
    },
    {
        "line": 1119,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1147,
        "fullcodeline": "n = mb_ptr2len(p);"
    },
    {
        "line": 1148,
        "fullcodeline": "c2 = mb_ptr2char(p + n);"
    },
    {
        "line": 1149,
        "fullcodeline": "fl = mb_ptr2len(p + n);"
    },
    {
        "line": 1150,
        "fullcodeline": "c = mb_ptr2char(p + n + fl);"
    },
    {
        "line": 1151,
        "fullcodeline": "tl = mb_ptr2len(p + n + fl);"
    },
    {
        "line": 1152,
        "fullcodeline": "mch_memmove(p + fl + tl, p, n);"
    },
    {
        "line": 1153,
        "fullcodeline": "mb_char2bytes(c, p);"
    },
    {
        "line": 1155,
        "fullcodeline": "p = p + tl;"
    },
    {
        "line": 1170,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1178,
        "fullcodeline": "go_deeper(stack, depth, SCORE_SWAP3);"
    },
    {
        "line": 1186,
        "fullcodeline": "sp->ts_state = STATE_UNROT3L;"
    },
    {
        "line": 1187,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1188,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1220,
        "fullcodeline": "n = mb_ptr2len(p);"
    },
    {
        "line": 1221,
        "fullcodeline": "n += mb_ptr2len(p + n);"
    },
    {
        "line": 1222,
        "fullcodeline": "c = mb_ptr2char(p + n);"
    },
    {
        "line": 1223,
        "fullcodeline": "tl = mb_ptr2len(p + n);"
    },
    {
        "line": 1224,
        "fullcodeline": "mch_memmove(p + tl, p, n);"
    },
    {
        "line": 1239,
        "fullcodeline": "go_deeper(stack, depth, SCORE_SWAP3);"
    },
    {
        "line": 1247,
        "fullcodeline": "sp->ts_state = STATE_UNROT3R;"
    },
    {
        "line": 1248,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1249,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1281,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 1282,
        "fullcodeline": "tl = mb_ptr2len(p);"
    },
    {
        "line": 1283,
        "fullcodeline": "n = mb_ptr2len(p + tl);"
    },
    {
        "line": 1284,
        "fullcodeline": "n += mb_ptr2len(p + tl + n);"
    },
    {
        "line": 1285,
        "fullcodeline": "mch_memmove(p, p + tl, n);"
    },
    {
        "line": 1303,
        "fullcodeline": "if ((lp->lp_replang == NULL && !soundfold)"
    },
    {
        "line": 1305,
        "fullcodeline": "|| sp->ts_fidx < sp->ts_fidxtry)"
    },
    {
        "line": 1308,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 1315,
        "fullcodeline": "sp->ts_curi = slang->sl_repsal_first[fword[sp->ts_fidx]];"
    },
    {
        "line": 1322,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 1337,
        "fullcodeline": "gap = &slang->sl_repsal;"
    },
    {
        "line": 1342,
        "fullcodeline": "ftp = (fromto_T *)gap->ga_data + sp->ts_curi++;"
    },
    {
        "line": 1378,
        "fullcodeline": "if (sp->ts_curi >= gap->ga_len && sp->ts_state == STATE_REP)"
    },
    {
        "line": 1382,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 1390,
        "fullcodeline": "gap = &slang->sl_repsal;"
    },
    {
        "line": 1400,
        "fullcodeline": "repextra -= tl - fl;"
    },
    {
        "line": 1411,
        "fullcodeline": "if (depth >= 0 && stack[depth].ts_prefixdepth == PFD_PREFIXTREE)"
    },
    {
        "line": 1414,
        "fullcodeline": "byts = pbyts;"
    },
    {
        "line": 1415,
        "fullcodeline": "idxs = pidxs;"
    },
    {
        "line": 1422,
        "fullcodeline": "breakcheckcount = 1000;"
    },
    {
        "line": 114,
        "fullcodeline": "for (n = 0; n < len && byts[arridx + n] == 0; ++n)"
    },
    {
        "line": 180,
        "fullcodeline": "? VIM_ISWHITE(fword[sp->ts_fidx])"
    },
    {
        "line": 181,
        "fullcodeline": ": !spell_iswordp(fword + sp->ts_fidx, curwin)));"
    },
    {
        "line": 185,
        "fullcodeline": "&& (sp->ts_flags & TSF_PREFIXOK) == 0"
    },
    {
        "line": 194,
        "fullcodeline": "for (c = 0; c < len && pbyts[n + c] == 0; ++c)"
    },
    {
        "line": 196,
        "fullcodeline": "if (c > 0)"
    },
    {
        "line": 221,
        "fullcodeline": "goodword_ends = TRUE;"
    },
    {
        "line": 331,
        "fullcodeline": "if (flags & WF_BANNED)"
    },
    {
        "line": 353,
        "fullcodeline": "if (flags & WF_RARE)"
    },
    {
        "line": 364,
        "fullcodeline": "&& sp->ts_fidx >= sp->ts_fidxtry"
    },
    {
        "line": 486,
        "fullcodeline": "if (slang->sl_nobreak && !slang->sl_nocompoundsugs)"
    },
    {
        "line": 504,
        "fullcodeline": "if (try_split || try_compound)"
    },
    {
        "line": 658,
        "fullcodeline": "if (sp->ts_fidx >= sp->ts_fidxtry)"
    },
    {
        "line": 666,
        "fullcodeline": "c = byts[arridx];"
    },
    {
        "line": 822,
        "fullcodeline": "newscore = SCORE_DEL;"
    },
    {
        "line": 876,
        "fullcodeline": "if (sp->ts_curi > byts[n])"
    },
    {
        "line": 883,
        "fullcodeline": "if (byts[n + sp->ts_curi] != NUL)"
    },
    {
        "line": 919,
        "fullcodeline": "newscore = SCORE_INS;"
    },
    {
        "line": 948,
        "fullcodeline": "if (fl == 1)"
    },
    {
        "line": 988,
        "fullcodeline": "if (p[n] == NUL)"
    },
    {
        "line": 1050,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1066,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1067,
        "fullcodeline": "*p = p[1];"
    },
    {
        "line": 1068,
        "fullcodeline": "p[1] = c;"
    },
    {
        "line": 1082,
        "fullcodeline": "if (!soundfold && !spell_iswordp(p + n + fl, curwin))"
    },
    {
        "line": 1089,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1090,
        "fullcodeline": "c2 = p[1];"
    },
    {
        "line": 1138,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1159,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1160,
        "fullcodeline": "*p = p[2];"
    },
    {
        "line": 1161,
        "fullcodeline": "p[2] = c;"
    },
    {
        "line": 1162,
        "fullcodeline": "++p;"
    },
    {
        "line": 1211,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1229,
        "fullcodeline": "c = p[2];"
    },
    {
        "line": 1230,
        "fullcodeline": "p[2] = p[1];"
    },
    {
        "line": 1231,
        "fullcodeline": "p[1] = *p;"
    },
    {
        "line": 1232,
        "fullcodeline": "*p = c;"
    },
    {
        "line": 1272,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1290,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1291,
        "fullcodeline": "*p = p[1];"
    },
    {
        "line": 1292,
        "fullcodeline": "p[1] = p[2];"
    },
    {
        "line": 1293,
        "fullcodeline": "p[2] = c;"
    },
    {
        "line": 1304,
        "fullcodeline": "|| sp->ts_score + SCORE_REP >= su->su_maxscore"
    },
    {
        "line": 1317,
        "fullcodeline": "sp->ts_curi = lp->lp_replang->sl_rep_first[fword[sp->ts_fidx]];"
    },
    {
        "line": 1339,
        "fullcodeline": "gap = &lp->lp_replang->sl_rep;"
    },
    {
        "line": 1343,
        "fullcodeline": "if (*ftp->ft_from != *p)"
    },
    {
        "line": 1392,
        "fullcodeline": "gap = &lp->lp_replang->sl_rep;"
    },
    {
        "line": 126,
        "fullcodeline": "if (depth < MAXWLEN - 1"
    },
    {
        "line": 127,
        "fullcodeline": "&& (byts[arridx] == 0 || n == (int)STATE_NOPREFIX))"
    },
    {
        "line": 135,
        "fullcodeline": "flags = badword_captype(su->su_badptr, su->su_badptr + n);"
    },
    {
        "line": 136,
        "fullcodeline": "su->su_badflags = badword_captype(su->su_badptr + n,"
    },
    {
        "line": 141,
        "fullcodeline": "go_deeper(stack, depth, 0);"
    },
    {
        "line": 142,
        "fullcodeline": "++depth;"
    },
    {
        "line": 143,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 144,
        "fullcodeline": "sp->ts_prefixdepth = depth - 1;"
    },
    {
        "line": 145,
        "fullcodeline": "byts = fbyts;"
    },
    {
        "line": 146,
        "fullcodeline": "idxs = fidxs;"
    },
    {
        "line": 147,
        "fullcodeline": "sp->ts_arridx = 0;"
    },
    {
        "line": 151,
        "fullcodeline": "tword[sp->ts_twordlen] = NUL;"
    },
    {
        "line": 154,
        "fullcodeline": "sp->ts_prewordlen = (char_u)STRLEN(preword);"
    },
    {
        "line": 155,
        "fullcodeline": "sp->ts_splitoff = sp->ts_twordlen;"
    },
    {
        "line": 198,
        "fullcodeline": "c = valid_word_prefix(c, n, flags,"
    },
    {
        "line": 211,
        "fullcodeline": "sp->ts_flags |= TSF_PREFIXOK;"
    },
    {
        "line": 304,
        "fullcodeline": "else if (flags & WF_KEEPCAP)"
    },
    {
        "line": 333,
        "fullcodeline": "add_banned(su, preword + sp->ts_prewordlen);"
    },
    {
        "line": 336,
        "fullcodeline": "if ((sp->ts_complen == sp->ts_compsplit"
    },
    {
        "line": 338,
        "fullcodeline": "|| WAS_BANNED(su, preword))"
    },
    {
        "line": 343,
        "fullcodeline": "goodword_ends = FALSE;"
    },
    {
        "line": 350,
        "fullcodeline": "if ((flags & WF_REGION)"
    },
    {
        "line": 351,
        "fullcodeline": "&& (((unsigned)flags >> 16) & lp->lp_region) == 0)"
    },
    {
        "line": 352,
        "fullcodeline": "newscore += SCORE_REGION;"
    },
    {
        "line": 354,
        "fullcodeline": "newscore += SCORE_RARE;"
    },
    {
        "line": 356,
        "fullcodeline": "if (!spell_valid_case(su->su_badflags,"
    },
    {
        "line": 358,
        "fullcodeline": "newscore += SCORE_ICASE;"
    },
    {
        "line": 383,
        "fullcodeline": "add_sound_suggest(su, preword, sp->ts_score, lp);"
    },
    {
        "line": 447,
        "fullcodeline": "&& !soundfold;"
    },
    {
        "line": 462,
        "fullcodeline": "if (!soundfold"
    },
    {
        "line": 475,
        "fullcodeline": "&& (can_be_compound(sp, slang,"
    },
    {
        "line": 479,
        "fullcodeline": "try_compound = TRUE;"
    },
    {
        "line": 480,
        "fullcodeline": "compflags[sp->ts_complen] = ((unsigned)flags >> 24);"
    },
    {
        "line": 481,
        "fullcodeline": "compflags[sp->ts_complen + 1] = NUL;"
    },
    {
        "line": 487,
        "fullcodeline": "try_compound = TRUE;"
    },
    {
        "line": 659,
        "fullcodeline": "sp->ts_state = STATE_DEL;"
    },
    {
        "line": 665,
        "fullcodeline": "arridx += sp->ts_curi++;"
    },
    {
        "line": 678,
        "fullcodeline": "if ((newscore == 0"
    },
    {
        "line": 845,
        "fullcodeline": "c = mb_ptr2char(fword + sp->ts_fidx);"
    },
    {
        "line": 846,
        "fullcodeline": "stack[depth].ts_fidx += mb_ptr2len(fword + sp->ts_fidx);"
    },
    {
        "line": 880,
        "fullcodeline": "sp->ts_state = STATE_SWAP;"
    },
    {
        "line": 887,
        "fullcodeline": "sp->ts_state = STATE_INS;"
    },
    {
        "line": 935,
        "fullcodeline": "fl = MB_BYTE2LEN(c);"
    },
    {
        "line": 989,
        "fullcodeline": "c2 = NUL;"
    },
    {
        "line": 997,
        "fullcodeline": "if (p[1] == NUL)"
    },
    {
        "line": 1034,
        "fullcodeline": "fl = mb_char2len(c2);"
    },
    {
        "line": 1035,
        "fullcodeline": "mch_memmove(p, p + n, fl);"
    },
    {
        "line": 1083,
        "fullcodeline": "c3 = c;\t// don't swap non-word char"
    },
    {
        "line": 1091,
        "fullcodeline": "if (!soundfold && !spell_iswordp(p + 2, curwin))"
    },
    {
        "line": 1122,
        "fullcodeline": "tl = mb_char2len(c3);"
    },
    {
        "line": 1123,
        "fullcodeline": "mch_memmove(p, p + n + fl, tl);"
    },
    {
        "line": 1191,
        "fullcodeline": "n = MB_CPTR2LEN(p);"
    },
    {
        "line": 1192,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 1193,
        "fullcodeline": "fl = MB_CPTR2LEN(p + n);"
    },
    {
        "line": 1194,
        "fullcodeline": "fl += MB_CPTR2LEN(p + n + fl);"
    },
    {
        "line": 1195,
        "fullcodeline": "mch_memmove(p, p + n, fl);"
    },
    {
        "line": 1252,
        "fullcodeline": "n = MB_CPTR2LEN(p);"
    },
    {
        "line": 1253,
        "fullcodeline": "n += MB_CPTR2LEN(p + n);"
    },
    {
        "line": 1254,
        "fullcodeline": "c = mb_ptr2char(p + n);"
    },
    {
        "line": 1255,
        "fullcodeline": "tl = MB_CPTR2LEN(p + n);"
    },
    {
        "line": 1256,
        "fullcodeline": "mch_memmove(p + tl, p, n);"
    },
    {
        "line": 1346,
        "fullcodeline": "sp->ts_curi = gap->ga_len;"
    },
    {
        "line": 1349,
        "fullcodeline": "if (STRNCMP(ftp->ft_from, p, STRLEN(ftp->ft_from)) == 0"
    },
    {
        "line": 1350,
        "fullcodeline": "&& TRY_DEEPER(su, stack, depth, SCORE_REP))"
    },
    {
        "line": 1352,
        "fullcodeline": "go_deeper(stack, depth, SCORE_REP);"
    },
    {
        "line": 1360,
        "fullcodeline": "sp->ts_state = STATE_REP_UNDO;"
    },
    {
        "line": 1363,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1364,
        "fullcodeline": "fl = (int)STRLEN(ftp->ft_from);"
    },
    {
        "line": 1365,
        "fullcodeline": "tl = (int)STRLEN(ftp->ft_to);"
    },
    {
        "line": 1371,
        "fullcodeline": "mch_memmove(p, ftp->ft_to, tl);"
    },
    {
        "line": 200,
        "fullcodeline": "if (c == 0)"
    },
    {
        "line": 204,
        "fullcodeline": "if (c & WF_RAREPFX)"
    },
    {
        "line": 270,
        "fullcodeline": "compflags[sp->ts_complen] = ((unsigned)flags >> 24);"
    },
    {
        "line": 271,
        "fullcodeline": "compflags[sp->ts_complen + 1] = NUL;"
    },
    {
        "line": 294,
        "fullcodeline": "p = preword + sp->ts_prewordlen;"
    },
    {
        "line": 295,
        "fullcodeline": "MB_PTR_BACK(preword, p);"
    },
    {
        "line": 306,
        "fullcodeline": "find_keepcap_word(slang, tword + sp->ts_splitoff,"
    },
    {
        "line": 337,
        "fullcodeline": "&& WAS_BANNED(su, preword + sp->ts_prewordlen))"
    },
    {
        "line": 340,
        "fullcodeline": "if (slang->sl_compprog == NULL)"
    },
    {
        "line": 357,
        "fullcodeline": "captype(preword + sp->ts_prewordlen, NULL)))"
    },
    {
        "line": 472,
        "fullcodeline": "&& (slang->sl_compsylmax < MAXWLEN"
    },
    {
        "line": 476,
        "fullcodeline": "compflags, ((unsigned)flags >> 24))))"
    },
    {
        "line": 533,
        "fullcodeline": "if (TRY_DEEPER(su, stack, depth, newscore))"
    },
    {
        "line": 661,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 673,
        "fullcodeline": "if (c == fword[sp->ts_fidx]"
    },
    {
        "line": 674,
        "fullcodeline": "|| (sp->ts_tcharlen > 0 && sp->ts_isdiff != DIFF_NONE))"
    },
    {
        "line": 675,
        "fullcodeline": "newscore = 0;"
    },
    {
        "line": 682,
        "fullcodeline": "&& TRY_DEEPER(su, stack, depth, newscore))"
    },
    {
        "line": 684,
        "fullcodeline": "go_deeper(stack, depth, newscore);"
    },
    {
        "line": 695,
        "fullcodeline": "++depth;"
    },
    {
        "line": 696,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 699,
        "fullcodeline": "tword[sp->ts_twordlen++] = c;"
    },
    {
        "line": 700,
        "fullcodeline": "sp->ts_arridx = idxs[arridx];"
    },
    {
        "line": 847,
        "fullcodeline": "if (enc_utf8 && utf_iscomposing(c))"
    },
    {
        "line": 936,
        "fullcodeline": "if (fl > 1)"
    },
    {
        "line": 947,
        "fullcodeline": "fl = 1;"
    },
    {
        "line": 998,
        "fullcodeline": "c2 = NUL;"
    },
    {
        "line": 1041,
        "fullcodeline": "p[0] = c2;"
    },
    {
        "line": 1042,
        "fullcodeline": "p[1] = c;"
    },
    {
        "line": 1085,
        "fullcodeline": "c3 = mb_ptr2char(p + n + fl);"
    },
    {
        "line": 1092,
        "fullcodeline": "c3 = c;\t// don't swap non-word char"
    },
    {
        "line": 1130,
        "fullcodeline": "p[0] = p[2];"
    },
    {
        "line": 1131,
        "fullcodeline": "p[2] = c;"
    },
    {
        "line": 1201,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1202,
        "fullcodeline": "*p = p[1];"
    },
    {
        "line": 1203,
        "fullcodeline": "p[1] = p[2];"
    },
    {
        "line": 1204,
        "fullcodeline": "p[2] = c;"
    },
    {
        "line": 1262,
        "fullcodeline": "c = p[2];"
    },
    {
        "line": 1263,
        "fullcodeline": "p[2] = p[1];"
    },
    {
        "line": 1264,
        "fullcodeline": "p[1] = *p;"
    },
    {
        "line": 1265,
        "fullcodeline": "*p = c;"
    },
    {
        "line": 1366,
        "fullcodeline": "if (fl != tl)"
    },
    {
        "line": 132,
        "fullcodeline": "n = nofold_len(fword, sp->ts_fidx, su->su_badptr);"
    },
    {
        "line": 205,
        "fullcodeline": "flags |= WF_RARE;"
    },
    {
        "line": 233,
        "fullcodeline": "if (sp->ts_fidx - sp->ts_splitfidx"
    },
    {
        "line": 235,
        "fullcodeline": "&& STRNCMP(fword + sp->ts_splitfidx,"
    },
    {
        "line": 239,
        "fullcodeline": "preword[sp->ts_prewordlen] = NUL;"
    },
    {
        "line": 240,
        "fullcodeline": "newscore = score_wordcount_adj(slang, sp->ts_score,"
    },
    {
        "line": 274,
        "fullcodeline": "sp->ts_twordlen - sp->ts_splitoff);"
    },
    {
        "line": 277,
        "fullcodeline": "if (match_checkcompoundpattern(preword,  sp->ts_prewordlen,"
    },
    {
        "line": 313,
        "fullcodeline": "c = su->su_badflags;"
    },
    {
        "line": 317,
        "fullcodeline": "c |= flags;"
    },
    {
        "line": 385,
        "fullcodeline": "else if (sp->ts_fidx > 0)"
    },
    {
        "line": 468,
        "fullcodeline": "&& (!has_mbyte"
    },
    {
        "line": 473,
        "fullcodeline": "|| sp->ts_complen + 1 - sp->ts_compsplit"
    },
    {
        "line": 506,
        "fullcodeline": "if (!try_compound && (!fword_ends || !goodword_ends))"
    },
    {
        "line": 515,
        "fullcodeline": "p = preword;"
    },
    {
        "line": 529,
        "fullcodeline": "newscore = score_wordcount_adj(slang, newscore,"
    },
    {
        "line": 535,
        "fullcodeline": "go_deeper(stack, depth, newscore);"
    },
    {
        "line": 545,
        "fullcodeline": "sp->ts_save_badflags = su->su_badflags;"
    },
    {
        "line": 547,
        "fullcodeline": "sp->ts_state = STATE_SPLITUNDO;"
    },
    {
        "line": 549,
        "fullcodeline": "++depth;"
    },
    {
        "line": 550,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 555,
        "fullcodeline": "sp->ts_prewordlen = (char_u)STRLEN(preword);"
    },
    {
        "line": 556,
        "fullcodeline": "sp->ts_splitoff = sp->ts_twordlen;"
    },
    {
        "line": 557,
        "fullcodeline": "sp->ts_splitfidx = sp->ts_fidx;"
    },
    {
        "line": 594,
        "fullcodeline": "sp->ts_prefixdepth = PFD_NOPREFIX;"
    },
    {
        "line": 602,
        "fullcodeline": "su->su_badflags = badword_captype(su->su_badptr + n,"
    },
    {
        "line": 606,
        "fullcodeline": "sp->ts_arridx = 0;"
    },
    {
        "line": 677,
        "fullcodeline": "newscore = SCORE_SUBST;"
    },
    {
        "line": 679,
        "fullcodeline": "|| (sp->ts_fidx >= sp->ts_fidxtry"
    },
    {
        "line": 697,
        "fullcodeline": "if (fword[sp->ts_fidx] != NUL)"
    },
    {
        "line": 701,
        "fullcodeline": "if (newscore == SCORE_SUBST)"
    },
    {
        "line": 855,
        "fullcodeline": "if (fword[sp->ts_fidx] == fword[sp->ts_fidx + 1])"
    },
    {
        "line": 941,
        "fullcodeline": "sp->ts_tcharlen = fl;"
    },
    {
        "line": 942,
        "fullcodeline": "sp->ts_tcharidx = 1;"
    },
    {
        "line": 943,
        "fullcodeline": "sp->ts_isdiff = DIFF_INSERT;"
    },
    {
        "line": 954,
        "fullcodeline": "if (sp->ts_twordlen >= 2"
    },
    {
        "line": 955,
        "fullcodeline": "&& tword[sp->ts_twordlen - 2] == c)"
    },
    {
        "line": 956,
        "fullcodeline": "sp->ts_score -= SCORE_INS - SCORE_INSDUP;"
    },
    {
        "line": 990,
        "fullcodeline": "else if (!soundfold && !spell_iswordp(p + n, curwin))"
    },
    {
        "line": 1094,
        "fullcodeline": "c3 = p[2];"
    },
    {
        "line": 1369,
        "fullcodeline": "repextra += tl - fl;"
    },
    {
        "line": 134,
        "fullcodeline": "n = sp->ts_fidx;"
    },
    {
        "line": 234,
        "fullcodeline": "== sp->ts_twordlen - sp->ts_splitoff"
    },
    {
        "line": 244,
        "fullcodeline": "if (newscore <= su->su_maxscore)"
    },
    {
        "line": 258,
        "fullcodeline": "if (((unsigned)flags >> 24) == 0"
    },
    {
        "line": 259,
        "fullcodeline": "|| sp->ts_twordlen - sp->ts_splitoff"
    },
    {
        "line": 264,
        "fullcodeline": "if (has_mbyte"
    },
    {
        "line": 266,
        "fullcodeline": "&& mb_charlen(tword + sp->ts_splitoff)"
    },
    {
        "line": 279,
        "fullcodeline": "compound_ok = FALSE;"
    },
    {
        "line": 283,
        "fullcodeline": "p = preword;"
    },
    {
        "line": 389,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 390,
        "fullcodeline": "MB_PTR_BACK(fword, p);"
    },
    {
        "line": 400,
        "fullcodeline": "score = score_wordcount_adj(slang,"
    },
    {
        "line": 466,
        "fullcodeline": "&& sp->ts_twordlen - sp->ts_splitoff"
    },
    {
        "line": 470,
        "fullcodeline": "|| mb_charlen(tword + sp->ts_splitoff)"
    },
    {
        "line": 492,
        "fullcodeline": "else if (!fword_ends"
    },
    {
        "line": 494,
        "fullcodeline": "&& (sp->ts_flags & TSF_DIDSPLIT) == 0)"
    },
    {
        "line": 496,
        "fullcodeline": "try_compound = FALSE;"
    },
    {
        "line": 497,
        "fullcodeline": "sp->ts_flags |= TSF_DIDSPLIT;"
    },
    {
        "line": 498,
        "fullcodeline": "--sp->ts_curi;\t    // do the same NUL again"
    },
    {
        "line": 499,
        "fullcodeline": "compflags[sp->ts_complen] = NUL;"
    },
    {
        "line": 512,
        "fullcodeline": "if (sp->ts_complen == sp->ts_compsplit"
    },
    {
        "line": 516,
        "fullcodeline": "while (*skiptowhite(p) != NUL)"
    },
    {
        "line": 517,
        "fullcodeline": "p = skipwhite(skiptowhite(p));"
    },
    {
        "line": 518,
        "fullcodeline": "if (sp->ts_complen > sp->ts_compsplit"
    },
    {
        "line": 609,
        "fullcodeline": "if (pbyts != NULL)"
    },
    {
        "line": 680,
        "fullcodeline": "&& ((sp->ts_flags & TSF_DIDDEL) == 0"
    },
    {
        "line": 698,
        "fullcodeline": "++sp->ts_fidx;"
    },
    {
        "line": 702,
        "fullcodeline": "sp->ts_isdiff = DIFF_YES;"
    },
    {
        "line": 848,
        "fullcodeline": "stack[depth].ts_score -= SCORE_DEL - SCORE_DELCOMP;"
    },
    {
        "line": 991,
        "fullcodeline": "c2 = c; // don't swap non-word char"
    },
    {
        "line": 999,
        "fullcodeline": "else if (!soundfold && !spell_iswordp(p + 1, curwin))"
    },
    {
        "line": 237,
        "fullcodeline": "sp->ts_fidx - sp->ts_splitfidx) == 0)"
    },
    {
        "line": 242,
        "fullcodeline": "sp->ts_prewordlen > 0);"
    },
    {
        "line": 245,
        "fullcodeline": "add_suggestion(su, &su->su_ga, preword,"
    },
    {
        "line": 265,
        "fullcodeline": "&& slang->sl_compminlen > 0"
    },
    {
        "line": 284,
        "fullcodeline": "while (*skiptowhite(p) != NUL)"
    },
    {
        "line": 285,
        "fullcodeline": "p = skipwhite(skiptowhite(p));"
    },
    {
        "line": 286,
        "fullcodeline": "if (fword_ends && !can_compound(slang, p,"
    },
    {
        "line": 314,
        "fullcodeline": "if ((c & WF_ALLCAP)"
    },
    {
        "line": 315,
        "fullcodeline": "&& su->su_badlen == (*mb_ptr2len)(su->su_badptr))"
    },
    {
        "line": 316,
        "fullcodeline": "c = WF_ONECAP;"
    },
    {
        "line": 321,
        "fullcodeline": "if (p != NULL && spell_iswordp_nmw(p, curwin))"
    },
    {
        "line": 322,
        "fullcodeline": "c &= ~WF_ONECAP;"
    },
    {
        "line": 391,
        "fullcodeline": "if (!spell_iswordp(p, curwin) && *preword != NUL)"
    },
    {
        "line": 406,
        "fullcodeline": "if (score <= su->su_maxscore)"
    },
    {
        "line": 465,
        "fullcodeline": "&& ((unsigned)flags >> 24) != 0"
    },
    {
        "line": 469,
        "fullcodeline": "|| slang->sl_compminlen == 0"
    },
    {
        "line": 502,
        "fullcodeline": "sp->ts_flags &= ~TSF_DIDSPLIT;"
    },
    {
        "line": 513,
        "fullcodeline": "&& (flags & WF_NEEDCOMP))"
    },
    {
        "line": 519,
        "fullcodeline": "&& !can_compound(slang, p,"
    },
    {
        "line": 524,
        "fullcodeline": "newscore += SCORE_SPLIT_NO;"
    },
    {
        "line": 553,
        "fullcodeline": "if (!try_compound && !fword_ends)"
    },
    {
        "line": 554,
        "fullcodeline": "STRCAT(preword, \" \");"
    },
    {
        "line": 564,
        "fullcodeline": "if (((!try_compound && !spell_iswordp_nmw(fword"
    },
    {
        "line": 573,
        "fullcodeline": "l = mb_ptr2len(fword + sp->ts_fidx);"
    },
    {
        "line": 584,
        "fullcodeline": "sp->ts_fidx += l;"
    },
    {
        "line": 591,
        "fullcodeline": "++sp->ts_complen;"
    },
    {
        "line": 599,
        "fullcodeline": "n = nofold_len(fword, sp->ts_fidx, su->su_badptr);"
    },
    {
        "line": 611,
        "fullcodeline": "byts = pbyts;"
    },
    {
        "line": 612,
        "fullcodeline": "idxs = pidxs;"
    },
    {
        "line": 613,
        "fullcodeline": "sp->ts_prefixdepth = PFD_PREFIXTREE;"
    },
    {
        "line": 615,
        "fullcodeline": "sp->ts_state = STATE_NOPREFIX;"
    },
    {
        "line": 681,
        "fullcodeline": "|| c != fword[sp->ts_delidx])))"
    },
    {
        "line": 708,
        "fullcodeline": "if (sp->ts_tcharlen == 0)"
    },
    {
        "line": 722,
        "fullcodeline": "if (++sp->ts_tcharidx == sp->ts_tcharlen)"
    },
    {
        "line": 856,
        "fullcodeline": "stack[depth].ts_score -= SCORE_DEL - SCORE_DELDUP;"
    },
    {
        "line": 993,
        "fullcodeline": "c2 = mb_ptr2char(p + n);"
    },
    {
        "line": 1000,
        "fullcodeline": "c2 = c; // don't swap non-word char"
    },
    {
        "line": 246,
        "fullcodeline": "sp->ts_splitfidx - repextra,"
    },
    {
        "line": 290,
        "fullcodeline": "compound_ok = FALSE;"
    },
    {
        "line": 393,
        "fullcodeline": "p = preword + STRLEN(preword);"
    },
    {
        "line": 394,
        "fullcodeline": "MB_PTR_BACK(preword, p);"
    },
    {
        "line": 403,
        "fullcodeline": "sp->ts_prewordlen > 0);"
    },
    {
        "line": 408,
        "fullcodeline": "add_suggestion(su, &su->su_ga, preword,"
    },
    {
        "line": 464,
        "fullcodeline": "&& slang->sl_compprog != NULL"
    },
    {
        "line": 526,
        "fullcodeline": "newscore += SCORE_SPLIT;"
    },
    {
        "line": 568,
        "fullcodeline": "&& fword[sp->ts_fidx] != NUL"
    },
    {
        "line": 593,
        "fullcodeline": "sp->ts_compsplit = sp->ts_complen;"
    },
    {
        "line": 601,
        "fullcodeline": "n = sp->ts_fidx;"
    },
    {
        "line": 711,
        "fullcodeline": "sp->ts_tcharidx = 0;"
    },
    {
        "line": 712,
        "fullcodeline": "sp->ts_tcharlen = MB_BYTE2LEN(c);"
    },
    {
        "line": 713,
        "fullcodeline": "sp->ts_fcharstart = sp->ts_fidx - 1;"
    },
    {
        "line": 714,
        "fullcodeline": "sp->ts_isdiff = (newscore != 0)"
    },
    {
        "line": 785,
        "fullcodeline": "sp->ts_tcharlen = 0;"
    },
    {
        "line": 849,
        "fullcodeline": "else if (c == mb_ptr2char(fword + stack[depth].ts_fidx))"
    },
    {
        "line": 1002,
        "fullcodeline": "c2 = p[1];"
    },
    {
        "line": 395,
        "fullcodeline": "if (spell_iswordp(p, curwin))"
    },
    {
        "line": 409,
        "fullcodeline": "sp->ts_fidx - repextra,"
    },
    {
        "line": 412,
        "fullcodeline": "if (su->su_badflags & WF_MIXCAP)"
    },
    {
        "line": 463,
        "fullcodeline": "&& !slang->sl_nocompoundsugs"
    },
    {
        "line": 577,
        "fullcodeline": "mch_memmove(preword + sp->ts_prewordlen,"
    },
    {
        "line": 579,
        "fullcodeline": "sp->ts_prewordlen += l;"
    },
    {
        "line": 580,
        "fullcodeline": "preword[sp->ts_prewordlen] = NUL;"
    },
    {
        "line": 725,
        "fullcodeline": "if (sp->ts_isdiff == DIFF_YES)"
    },
    {
        "line": 793,
        "fullcodeline": "if (newscore != 0"
    },
    {
        "line": 796,
        "fullcodeline": "&& similar_chars(slang,"
    },
    {
        "line": 798,
        "fullcodeline": "sp->ts_score -= SCORE_SUBST - SCORE_SIMILAR;"
    },
    {
        "line": 850,
        "fullcodeline": "stack[depth].ts_score -= SCORE_DEL - SCORE_DELDUP;"
    },
    {
        "line": 396,
        "fullcodeline": "newscore += SCORE_NONWORD;"
    },
    {
        "line": 416,
        "fullcodeline": "c = captype(preword, NULL);"
    },
    {
        "line": 583,
        "fullcodeline": "sp->ts_score -= SCORE_SPLIT - SCORE_SUBST;"
    },
    {
        "line": 729,
        "fullcodeline": "sp->ts_fidx = sp->ts_fcharstart"
    },
    {
        "line": 717,
        "fullcodeline": "else if (sp->ts_isdiff == DIFF_INSERT"
    },
    {
        "line": 718,
        "fullcodeline": "&& sp->ts_fidx > 0)"
    },
    {
        "line": 721,
        "fullcodeline": "--sp->ts_fidx;"
    },
    {
        "line": 794,
        "fullcodeline": "&& !soundfold"
    },
    {
        "line": 797,
        "fullcodeline": "c, fword[sp->ts_fidx - 1]))"
    },
    {
        "line": 417,
        "fullcodeline": "if (c == 0 || c == WF_ALLCAP)"
    },
    {
        "line": 423,
        "fullcodeline": "add_suggestion(su, &su->su_ga, preword,"
    },
    {
        "line": 730,
        "fullcodeline": "+ mb_ptr2len("
    },
    {
        "line": 735,
        "fullcodeline": "if (enc_utf8"
    },
    {
        "line": 740,
        "fullcodeline": "&& utf_iscomposing("
    },
    {
        "line": 743,
        "fullcodeline": "sp->ts_score -="
    },
    {
        "line": 424,
        "fullcodeline": "sp->ts_fidx - repextra,"
    },
    {
        "line": 736,
        "fullcodeline": "&& utf_iscomposing("
    },
    {
        "line": 741,
        "fullcodeline": "utf_ptr2char(fword"
    },
    {
        "line": 744,
        "fullcodeline": "SCORE_SUBST - SCORE_SUBCOMP;"
    },
    {
        "line": 759,
        "fullcodeline": "else if (sp->ts_isdiff == DIFF_INSERT"
    },
    {
        "line": 760,
        "fullcodeline": "&& sp->ts_twordlen > sp->ts_tcharlen)"
    },
    {
        "line": 762,
        "fullcodeline": "p = tword + sp->ts_twordlen - sp->ts_tcharlen;"
    },
    {
        "line": 763,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 737,
        "fullcodeline": "utf_ptr2char(tword"
    },
    {
        "line": 764,
        "fullcodeline": "if (enc_utf8 && utf_iscomposing(c))"
    },
    {
        "line": 748,
        "fullcodeline": "else if (!soundfold"
    },
    {
        "line": 750,
        "fullcodeline": "&& similar_chars(slang,"
    },
    {
        "line": 756,
        "fullcodeline": "sp->ts_score -="
    },
    {
        "line": 768,
        "fullcodeline": "sp->ts_score -= SCORE_INS - SCORE_INSCOMP;"
    },
    {
        "line": 751,
        "fullcodeline": "mb_ptr2char(tword"
    },
    {
        "line": 754,
        "fullcodeline": "mb_ptr2char(fword"
    },
    {
        "line": 757,
        "fullcodeline": "SCORE_SUBST - SCORE_SIMILAR;"
    },
    {
        "line": 777,
        "fullcodeline": "MB_PTR_BACK(tword, p);"
    },
    {
        "line": 778,
        "fullcodeline": "if (c == mb_ptr2char(p))"
    },
    {
        "line": 779,
        "fullcodeline": "sp->ts_score -= SCORE_INS"
    }
]