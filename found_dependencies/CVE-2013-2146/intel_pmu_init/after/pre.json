[
    {
        "line": 26,
        "fullcodeline": "cpuid(10, &eax.full, &ebx.full, &unused, &edx.full);"
    },
    {
        "line": 30,
        "fullcodeline": "version = eax.split.version_id;"
    },
    {
        "line": 37,
        "fullcodeline": "x86_pmu.num_counters\t\t= eax.split.num_counters;"
    },
    {
        "line": 65,
        "fullcodeline": "x86_add_quirk(intel_arch_events_quirk); /* Install first, so it runs last */"
    },
    {
        "line": 237,
        "fullcodeline": "x86_pmu.intel_ctrl = (1 << x86_pmu.num_counters) - 1;"
    },
    {
        "line": 10,
        "fullcodeline": "if (!cpu_has(&boot_cpu_data, X86_FEATURE_ARCH_PERFMON)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (eax.split.mask_length < ARCH_PERFMON_EVENTS_COUNT)"
    },
    {
        "line": 31,
        "fullcodeline": "if (version < 2)"
    },
    {
        "line": 39,
        "fullcodeline": "x86_pmu.cntval_mask\t\t= (1ULL << eax.split.bit_width) - 1;"
    },
    {
        "line": 50,
        "fullcodeline": "if (version > 1)"
    },
    {
        "line": 232,
        "fullcodeline": "if (x86_pmu.num_counters > INTEL_PMC_MAX_GENERIC) {"
    },
    {
        "line": 239,
        "fullcodeline": "if (x86_pmu.num_counters_fixed > INTEL_PMC_MAX_FIXED) {"
    },
    {
        "line": 246,
        "fullcodeline": "((1LL << x86_pmu.num_counters_fixed)-1) << INTEL_PMC_IDX_FIXED;"
    },
    {
        "line": 32,
        "fullcodeline": "x86_pmu = core_pmu;"
    },
    {
        "line": 51,
        "fullcodeline": "x86_pmu.num_counters_fixed = max((int)edx.split.num_counters_fixed, 3);"
    },
    {
        "line": 59,
        "fullcodeline": "rdmsrl(MSR_IA32_PERF_CAPABILITIES, capabilities);"
    },
    {
        "line": 76,
        "fullcodeline": "x86_add_quirk(intel_clovertown_quirk);"
    },
    {
        "line": 80,
        "fullcodeline": "memcpy(hw_cache_event_ids, core2_hw_cache_event_ids,"
    },
    {
        "line": 85,
        "fullcodeline": "x86_pmu.event_constraints = intel_core2_event_constraints;"
    },
    {
        "line": 86,
        "fullcodeline": "x86_pmu.pebs_constraints = intel_core2_pebs_event_constraints;"
    },
    {
        "line": 93,
        "fullcodeline": "memcpy(hw_cache_event_ids, nehalem_hw_cache_event_ids,"
    },
    {
        "line": 100,
        "fullcodeline": "x86_pmu.event_constraints = intel_nehalem_event_constraints;"
    },
    {
        "line": 101,
        "fullcodeline": "x86_pmu.pebs_constraints = intel_nehalem_pebs_event_constraints;"
    },
    {
        "line": 103,
        "fullcodeline": "x86_pmu.extra_regs = intel_nehalem_extra_regs;"
    },
    {
        "line": 112,
        "fullcodeline": "x86_add_quirk(intel_nehalem_quirk);"
    },
    {
        "line": 122,
        "fullcodeline": "memcpy(hw_cache_event_ids, atom_hw_cache_event_ids,"
    },
    {
        "line": 127,
        "fullcodeline": "x86_pmu.event_constraints = intel_gen_event_constraints;"
    },
    {
        "line": 128,
        "fullcodeline": "x86_pmu.pebs_constraints = intel_atom_pebs_event_constraints;"
    },
    {
        "line": 135,
        "fullcodeline": "memcpy(hw_cache_event_ids, westmere_hw_cache_event_ids,"
    },
    {
        "line": 142,
        "fullcodeline": "x86_pmu.event_constraints = intel_westmere_event_constraints;"
    },
    {
        "line": 144,
        "fullcodeline": "x86_pmu.pebs_constraints = intel_westmere_pebs_event_constraints;"
    },
    {
        "line": 145,
        "fullcodeline": "x86_pmu.extra_regs = intel_westmere_extra_regs;"
    },
    {
        "line": 160,
        "fullcodeline": "x86_add_quirk(intel_sandybridge_quirk);"
    },
    {
        "line": 168,
        "fullcodeline": "x86_pmu.event_constraints = intel_snb_event_constraints;"
    },
    {
        "line": 169,
        "fullcodeline": "x86_pmu.pebs_constraints = intel_snb_pebs_event_constraints;"
    },
    {
        "line": 176,
        "fullcodeline": "x86_pmu.er_flags |= ERF_HAS_RSP_1;"
    },
    {
        "line": 197,
        "fullcodeline": "x86_pmu.event_constraints = intel_ivb_event_constraints;"
    },
    {
        "line": 198,
        "fullcodeline": "x86_pmu.pebs_constraints = intel_ivb_pebs_event_constraints;"
    },
    {
        "line": 205,
        "fullcodeline": "x86_pmu.er_flags |= ERF_HAS_RSP_1;"
    },
    {
        "line": 235,
        "fullcodeline": "x86_pmu.num_counters = INTEL_PMC_MAX_GENERIC;"
    },
    {
        "line": 242,
        "fullcodeline": "x86_pmu.num_counters_fixed = INTEL_PMC_MAX_FIXED;"
    },
    {
        "line": 253,
        "fullcodeline": "for_each_event_constraint(c, x86_pmu.event_constraints) {"
    },
    {
        "line": 19,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 28,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 34,
        "fullcodeline": "x86_pmu = intel_pmu;"
    },
    {
        "line": 219,
        "fullcodeline": "x86_pmu.event_constraints = intel_v1_event_constraints;"
    },
    {
        "line": 226,
        "fullcodeline": "x86_pmu.event_constraints = intel_gen_event_constraints;"
    },
    {
        "line": 259,
        "fullcodeline": "c->idxmsk64 |= (1ULL << x86_pmu.num_counters) - 1;"
    },
    {
        "line": 13,
        "fullcodeline": "return p6_pmu_init();"
    },
    {
        "line": 15,
        "fullcodeline": "return knc_pmu_init();"
    },
    {
        "line": 17,
        "fullcodeline": "return p4_pmu_init();"
    },
    {
        "line": 254,
        "fullcodeline": "if (c->cmask != X86_RAW_EVENT_MASK"
    },
    {
        "line": 255,
        "fullcodeline": "|| c->idxmsk64 == INTEL_PMC_MSK_FIXED_REF_CYCLES) {"
    }
]