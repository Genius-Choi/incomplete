[
    {
        "line": 6,
        "fullcodeline": "struct mm_walk mincore_walk = {"
    },
    {
        "line": 13,
        "fullcodeline": "vma = find_vma(current->mm, addr);"
    },
    {
        "line": 16,
        "fullcodeline": "mincore_walk.mm = vma->vm_mm;"
    },
    {
        "line": 17,
        "fullcodeline": "end = min(vma->vm_end, addr + (pages << PAGE_SHIFT));"
    },
    {
        "line": 18,
        "fullcodeline": "err = walk_page_range(addr, end, &mincore_walk);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!vma || addr < vma->vm_start)"
    },
    {
        "line": 19,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 21,
        "fullcodeline": "return (end - addr) >> PAGE_SHIFT;"
    },
    {
        "line": 7,
        "fullcodeline": ".pmd_entry = mincore_pte_range,"
    },
    {
        "line": 8,
        "fullcodeline": ".pte_hole = mincore_unmapped_range,"
    },
    {
        "line": 9,
        "fullcodeline": ".hugetlb_entry = mincore_hugetlb,"
    },
    {
        "line": 10,
        "fullcodeline": ".private = vec,"
    },
    {
        "line": 15,
        "fullcodeline": "return -ENOMEM;"
    }
]