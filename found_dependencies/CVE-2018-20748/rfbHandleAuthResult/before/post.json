[
    {
        "line": 3,
        "fullcodeline": "uint32_t authResult=0, reasonLen=0;"
    },
    {
        "line": 4,
        "fullcodeline": "char *reason=NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "authResult = rfbClientSwap32IfLE(authResult);"
    },
    {
        "line": 35,
        "fullcodeline": "rfbClientLog(\"Unknown VNC authentication result: %d\\n\","
    },
    {
        "line": 6,
        "fullcodeline": "if (!ReadFromRFBServer(client, (char *)&authResult, 4)) return FALSE;"
    },
    {
        "line": 36,
        "fullcodeline": "(int)authResult);"
    },
    {
        "line": 12,
        "fullcodeline": "rfbClientLog(\"VNC authentication succeeded\\n\");"
    },
    {
        "line": 28,
        "fullcodeline": "rfbClientLog(\"VNC authentication failed\\n\");"
    },
    {
        "line": 31,
        "fullcodeline": "rfbClientLog(\"VNC authentication failed - too many tries\\n\");"
    },
    {
        "line": 16,
        "fullcodeline": "if (client->major==3 && client->minor>7)"
    },
    {
        "line": 20,
        "fullcodeline": "reasonLen = rfbClientSwap32IfLE(reasonLen);"
    },
    {
        "line": 21,
        "fullcodeline": "reason = malloc((uint64_t)reasonLen+1);"
    },
    {
        "line": 23,
        "fullcodeline": "reason[reasonLen]=0;"
    },
    {
        "line": 24,
        "fullcodeline": "rfbClientLog(\"VNC connection failed: %s\\n\",reason);"
    },
    {
        "line": 25,
        "fullcodeline": "free(reason);"
    },
    {
        "line": 19,
        "fullcodeline": "if (!ReadFromRFBServer(client, (char *)&reasonLen, 4)) return FALSE;"
    },
    {
        "line": 22,
        "fullcodeline": "if (!ReadFromRFBServer(client, reason, reasonLen)) { free(reason); return FALSE; }"
    }
]