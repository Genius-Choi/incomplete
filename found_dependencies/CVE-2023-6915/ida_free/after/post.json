[
    {
        "line": 3,
        "fullcodeline": "XA_STATE(xas, &ida->xa, id / IDA_BITMAP_BITS);"
    },
    {
        "line": 4,
        "fullcodeline": "unsigned bit = id % IDA_BITMAP_BITS;"
    },
    {
        "line": 11,
        "fullcodeline": "xas_lock_irqsave(&xas, flags);"
    },
    {
        "line": 12,
        "fullcodeline": "bitmap = xas_load(&xas);"
    },
    {
        "line": 35,
        "fullcodeline": "xas_unlock_irqrestore(&xas, flags);"
    },
    {
        "line": 38,
        "fullcodeline": "xas_unlock_irqrestore(&xas, flags);"
    },
    {
        "line": 39,
        "fullcodeline": "WARN(1, \"ida_free called for id=%d which is not allocated.\\n\", id);"
    },
    {
        "line": 8,
        "fullcodeline": "if ((int)id < 0)"
    },
    {
        "line": 14,
        "fullcodeline": "if (xa_is_value(bitmap)) {"
    },
    {
        "line": 15,
        "fullcodeline": "unsigned long v = xa_to_value(bitmap);"
    },
    {
        "line": 20,
        "fullcodeline": "v &= ~(1UL << bit);"
    },
    {
        "line": 23,
        "fullcodeline": "xas_store(&xas, xa_mk_value(v));"
    },
    {
        "line": 16,
        "fullcodeline": "if (bit >= BITS_PER_XA_VALUE)"
    },
    {
        "line": 18,
        "fullcodeline": "if (!(v & (1UL << bit)))"
    },
    {
        "line": 21,
        "fullcodeline": "if (!v)"
    },
    {
        "line": 27,
        "fullcodeline": "__clear_bit(bit, bitmap->bitmap);"
    },
    {
        "line": 28,
        "fullcodeline": "xas_set_mark(&xas, XA_FREE_MARK);"
    },
    {
        "line": 25,
        "fullcodeline": "if (!bitmap || !test_bit(bit, bitmap->bitmap))"
    },
    {
        "line": 29,
        "fullcodeline": "if (bitmap_empty(bitmap->bitmap, IDA_BITMAP_BITS)) {"
    },
    {
        "line": 30,
        "fullcodeline": "kfree(bitmap);"
    },
    {
        "line": 32,
        "fullcodeline": "xas_store(&xas, NULL);"
    }
]