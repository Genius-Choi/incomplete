[
    {
        "line": 3,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "ret = rtxReadBytes (pCborCtxt, &ub, 1);"
    },
    {
        "line": 9,
        "fullcodeline": "tag = ub >> 5;"
    },
    {
        "line": 8,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pCborCtxt, ret);"
    },
    {
        "line": 154,
        "fullcodeline": "ret = cborTagNotSupp (pCborCtxt, tag);"
    },
    {
        "line": 15,
        "fullcodeline": "ret = rtCborDecUInt (pCborCtxt, ub, &value);"
    },
    {
        "line": 20,
        "fullcodeline": "ret = rtJsonEncUInt64Value (pJsonCtxt, value);"
    },
    {
        "line": 29,
        "fullcodeline": "ret = rtCborDecInt (pCborCtxt, ub, &value);"
    },
    {
        "line": 34,
        "fullcodeline": "ret = rtJsonEncInt64Value (pJsonCtxt, value);"
    },
    {
        "line": 43,
        "fullcodeline": "ret = rtCborDecDynByteStr (pCborCtxt, ub, &byteStr);"
    },
    {
        "line": 47,
        "fullcodeline": "ret = rtJsonEncHexStr (pJsonCtxt, byteStr.numocts, byteStr.data);"
    },
    {
        "line": 48,
        "fullcodeline": "rtxMemFreePtr (pCborCtxt, byteStr.data);"
    },
    {
        "line": 55,
        "fullcodeline": "ret = rtCborDecDynUTF8Str (pCborCtxt, ub, (char**)&utf8str);"
    },
    {
        "line": 57,
        "fullcodeline": "ret = rtJsonEncStringValue (pJsonCtxt, utf8str);"
    },
    {
        "line": 58,
        "fullcodeline": "rtxMemFreePtr (pCborCtxt, utf8str);"
    },
    {
        "line": 65,
        "fullcodeline": "OSOCTET len = ub & 0x1F;"
    },
    {
        "line": 66,
        "fullcodeline": "char startChar = (tag == OSRTCBOR_ARRAY) ? '[' : '{';"
    },
    {
        "line": 67,
        "fullcodeline": "char endChar = (tag == OSRTCBOR_ARRAY) ? ']' : '}';"
    },
    {
        "line": 69,
        "fullcodeline": "OSRTSAFEPUTCHAR (pJsonCtxt, startChar);"
    },
    {
        "line": 127,
        "fullcodeline": "OSRTSAFEPUTCHAR (pJsonCtxt, endChar);"
    },
    {
        "line": 132,
        "fullcodeline": "if (tag == OSRTCBOR_FALSEENC || tag == OSRTCBOR_TRUEENC) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pCborCtxt, ret);"
    },
    {
        "line": 24,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pJsonCtxt, ret);"
    },
    {
        "line": 30,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pCborCtxt, ret);"
    },
    {
        "line": 38,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pJsonCtxt, ret);"
    },
    {
        "line": 44,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pCborCtxt, ret);"
    },
    {
        "line": 49,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pJsonCtxt, ret);"
    },
    {
        "line": 59,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pJsonCtxt, ret);"
    },
    {
        "line": 71,
        "fullcodeline": "if (len == OSRTCBOR_INDEF) {"
    },
    {
        "line": 133,
        "fullcodeline": "OSBOOL boolval = (ub == OSRTCBOR_TRUEENC) ? TRUE : FALSE;"
    },
    {
        "line": 134,
        "fullcodeline": "ret = rtJsonEncBoolValue (pJsonCtxt, boolval);"
    },
    {
        "line": 72,
        "fullcodeline": "OSBOOL first = TRUE;"
    },
    {
        "line": 135,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pJsonCtxt, ret);"
    },
    {
        "line": 103,
        "fullcodeline": "ret = rtCborDecSize (pCborCtxt, len, &nitems);"
    },
    {
        "line": 137,
        "fullcodeline": "else if (tag == OSRTCBOR_FLT16ENC ||"
    },
    {
        "line": 104,
        "fullcodeline": "if (0 == ret) {"
    },
    {
        "line": 139,
        "fullcodeline": "tag == OSRTCBOR_FLT64ENC) {"
    },
    {
        "line": 141,
        "fullcodeline": "ret = rtCborDecFloat (pCborCtxt, ub, &fltval);"
    },
    {
        "line": 145,
        "fullcodeline": "ret = rtJsonEncDoubleValue (pJsonCtxt, fltval, 0);"
    },
    {
        "line": 74,
        "fullcodeline": "if (OSRTCBOR_MATCHEOC (pCborCtxt)) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (!first)"
    },
    {
        "line": 85,
        "fullcodeline": "if (tag == OSRTCBOR_MAP) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (0 == ret)"
    },
    {
        "line": 92,
        "fullcodeline": "if (0 != ret) {"
    },
    {
        "line": 138,
        "fullcodeline": "tag == OSRTCBOR_FLT32ENC ||"
    },
    {
        "line": 142,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pCborCtxt, ret);"
    },
    {
        "line": 146,
        "fullcodeline": "if (0 != ret) return LOG_RTERR (pJsonCtxt, ret);"
    },
    {
        "line": 149,
        "fullcodeline": "ret = cborTagNotSupp (pCborCtxt, tag);"
    },
    {
        "line": 80,
        "fullcodeline": "OSRTSAFEPUTCHAR (pJsonCtxt, ',');"
    },
    {
        "line": 86,
        "fullcodeline": "ret = cborElemNameToJson (pCborCtxt, pJsonCtxt);"
    },
    {
        "line": 91,
        "fullcodeline": "ret = cbor2json (pCborCtxt, pJsonCtxt);"
    },
    {
        "line": 93,
        "fullcodeline": "OSCTXT* pctxt ="
    },
    {
        "line": 108,
        "fullcodeline": "for (i = 0; i < nitems; i++) {"
    },
    {
        "line": 82,
        "fullcodeline": "first = FALSE;"
    },
    {
        "line": 94,
        "fullcodeline": "(rtxErrGetErrorCnt(pJsonCtxt) > 0) ? pJsonCtxt : pCborCtxt;"
    },
    {
        "line": 95,
        "fullcodeline": "return LOG_RTERR (pctxt, ret);"
    },
    {
        "line": 109,
        "fullcodeline": "if (0 != i) OSRTSAFEPUTCHAR (pJsonCtxt, ',');"
    },
    {
        "line": 112,
        "fullcodeline": "if (tag == OSRTCBOR_MAP) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (0 == ret)"
    },
    {
        "line": 119,
        "fullcodeline": "if (0 != ret) {"
    },
    {
        "line": 113,
        "fullcodeline": "ret = cborElemNameToJson (pCborCtxt, pJsonCtxt);"
    },
    {
        "line": 118,
        "fullcodeline": "ret = cbor2json (pCborCtxt, pJsonCtxt);"
    },
    {
        "line": 120,
        "fullcodeline": "OSCTXT* pctxt ="
    },
    {
        "line": 121,
        "fullcodeline": "(rtxErrGetErrorCnt(pJsonCtxt) > 0) ? pJsonCtxt : pCborCtxt;"
    },
    {
        "line": 122,
        "fullcodeline": "return LOG_RTERR (pctxt, ret);"
    }
]