[
    {
        "line": 3,
        "fullcodeline": "node->isVisited = false;"
    },
    {
        "line": 4,
        "fullcodeline": "node->childIndex = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "node->v = v;"
    },
    {
        "line": 6,
        "fullcodeline": "if (sort_dicts && tr_variantIsDict(v))"
    },
    {
        "line": 19,
        "fullcodeline": "qsort(tmp, n, sizeof(struct KeyIndex), compareKeyIndex);"
    },
    {
        "line": 21,
        "fullcodeline": "node->sorted = tr_new(tr_variant, 1);"
    },
    {
        "line": 22,
        "fullcodeline": "tr_variantInitDict(node->sorted, n);"
    },
    {
        "line": 29,
        "fullcodeline": "node->sorted->val.l.count = n;"
    },
    {
        "line": 31,
        "fullcodeline": "tr_free(tmp);"
    },
    {
        "line": 33,
        "fullcodeline": "v = node->sorted;"
    },
    {
        "line": 13,
        "fullcodeline": "for (size_t i = 0; i < n; i++)"
    },
    {
        "line": 24,
        "fullcodeline": "for (size_t i = 0; i < n; ++i)"
    },
    {
        "line": 37,
        "fullcodeline": "node->sorted = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "tmp[i].val = v->val.l.vals + i;"
    },
    {
        "line": 16,
        "fullcodeline": "tmp[i].keystr = tr_quark_get_string(tmp[i].val->key, NULL);"
    }
]