[
    {
        "line": 3,
        "fullcodeline": "int stackSize = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "int stackAlloc = 64;"
    },
    {
        "line": 7,
        "fullcodeline": "nodeConstruct(&stack[stackSize++], v, sort_dicts);"
    },
    {
        "line": 109,
        "fullcodeline": "tr_free(stack);"
    },
    {
        "line": 9,
        "fullcodeline": "while (stackSize > 0)"
    },
    {
        "line": 11,
        "fullcodeline": "struct SaveNode* node = &stack[stackSize - 1];"
    },
    {
        "line": 14,
        "fullcodeline": "if (!node->isVisited)"
    },
    {
        "line": 45,
        "fullcodeline": "if (v != NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "v = node->v;"
    },
    {
        "line": 17,
        "fullcodeline": "node->isVisited = true;"
    },
    {
        "line": 19,
        "fullcodeline": "else if (tr_variantIsContainer(node->v) && node->childIndex < node->v->val.l.count)"
    },
    {
        "line": 50,
        "fullcodeline": "walkFuncs->intFunc(v, user_data);"
    },
    {
        "line": 54,
        "fullcodeline": "walkFuncs->boolFunc(v, user_data);"
    },
    {
        "line": 58,
        "fullcodeline": "walkFuncs->realFunc(v, user_data);"
    },
    {
        "line": 62,
        "fullcodeline": "walkFuncs->stringFunc(v, user_data);"
    },
    {
        "line": 103,
        "fullcodeline": "tr_logAddError(\"%s\", _(\"Invalid metadata\"));"
    },
    {
        "line": 21,
        "fullcodeline": "int const index = node->childIndex;"
    },
    {
        "line": 22,
        "fullcodeline": "++node->childIndex;"
    },
    {
        "line": 24,
        "fullcodeline": "v = node->v->val.l.vals + index;"
    },
    {
        "line": 66,
        "fullcodeline": "if (v == node->v)"
    },
    {
        "line": 84,
        "fullcodeline": "if (v == node->v)"
    },
    {
        "line": 26,
        "fullcodeline": "if (tr_variantIsDict(node->v))"
    },
    {
        "line": 40,
        "fullcodeline": "--stackSize;"
    },
    {
        "line": 41,
        "fullcodeline": "nodeDestruct(node);"
    },
    {
        "line": 68,
        "fullcodeline": "walkFuncs->listBeginFunc(v, user_data);"
    },
    {
        "line": 86,
        "fullcodeline": "walkFuncs->dictBeginFunc(v, user_data);"
    },
    {
        "line": 29,
        "fullcodeline": "tr_variantInitQuark(&tmp, v->key);"
    },
    {
        "line": 30,
        "fullcodeline": "walkFuncs->stringFunc(&tmp, user_data);"
    },
    {
        "line": 35,
        "fullcodeline": "if (tr_variantIsContainer(node->v))"
    },
    {
        "line": 78,
        "fullcodeline": "nodeConstruct(&stack[stackSize++], v, sort_dicts);"
    },
    {
        "line": 96,
        "fullcodeline": "nodeConstruct(&stack[stackSize++], v, sort_dicts);"
    },
    {
        "line": 37,
        "fullcodeline": "walkFuncs->containerEndFunc(node->v, user_data);"
    },
    {
        "line": 72,
        "fullcodeline": "if (stackAlloc == stackSize)"
    },
    {
        "line": 90,
        "fullcodeline": "if (stackAlloc == stackSize)"
    },
    {
        "line": 74,
        "fullcodeline": "stackAlloc *= 2;"
    },
    {
        "line": 92,
        "fullcodeline": "stackAlloc *= 2;"
    }
]