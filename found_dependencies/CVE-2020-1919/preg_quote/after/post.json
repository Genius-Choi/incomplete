[
    {
        "line": 3,
        "fullcodeline": "const char* in_str = str.data();"
    },
    {
        "line": 4,
        "fullcodeline": "const char* in_str_end = in_str + str.size();"
    },
    {
        "line": 11,
        "fullcodeline": "char delim_char = 0;      /* Delimiter character to be quoted */"
    },
    {
        "line": 12,
        "fullcodeline": "bool quote_delim = false; /* Whether to quote additional delim char */"
    },
    {
        "line": 20,
        "fullcodeline": "static_assert("
    },
    {
        "line": 23,
        "fullcodeline": "String ret(4 * str.size() + 1, ReserveString);"
    },
    {
        "line": 24,
        "fullcodeline": "char* out_str = ret.mutableData();"
    },
    {
        "line": 55,
        "fullcodeline": "*q = '\\0';"
    },
    {
        "line": 7,
        "fullcodeline": "if (in_str == in_str_end) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (!delimiter.empty()) {"
    },
    {
        "line": 21,
        "fullcodeline": "(StringData::MaxSize * 4 + 1) < std::numeric_limits<int64_t>::max()"
    },
    {
        "line": 29,
        "fullcodeline": "for (p = in_str, q = out_str; p != in_str_end; p++) {"
    },
    {
        "line": 57,
        "fullcodeline": "return ret.setSize(q - out_str);"
    },
    {
        "line": 14,
        "fullcodeline": "delim_char = delimiter.charAt(0);"
    },
    {
        "line": 15,
        "fullcodeline": "quote_delim = true;"
    },
    {
        "line": 37,
        "fullcodeline": "*q++ = '\\\\';"
    },
    {
        "line": 38,
        "fullcodeline": "*q++ = c;"
    },
    {
        "line": 42,
        "fullcodeline": "*q++ = '\\\\';"
    },
    {
        "line": 43,
        "fullcodeline": "*q++ = '0';"
    },
    {
        "line": 44,
        "fullcodeline": "*q++ = '0';"
    },
    {
        "line": 45,
        "fullcodeline": "*q++ = '0';"
    },
    {
        "line": 51,
        "fullcodeline": "*q++ = c;"
    },
    {
        "line": 49,
        "fullcodeline": "if (quote_delim && c == delim_char)"
    },
    {
        "line": 50,
        "fullcodeline": "*q++ = '\\\\';"
    }
]