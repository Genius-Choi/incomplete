[
    {
        "line": 11,
        "fullcodeline": "int pathlen = 0, selfsigned = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "mbedtls_x509_sequence *cur = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "*flags = 0;"
    },
    {
        "line": 78,
        "fullcodeline": "pk_type = mbedtls_pk_get_type( &crt->pk );"
    },
    {
        "line": 19,
        "fullcodeline": "if( profile == NULL )"
    },
    {
        "line": 25,
        "fullcodeline": "if( cn != NULL )"
    },
    {
        "line": 80,
        "fullcodeline": "if( x509_profile_check_pk_alg( profile, pk_type ) != 0 )"
    },
    {
        "line": 83,
        "fullcodeline": "if( x509_profile_check_key( profile, pk_type, &crt->pk ) != 0 )"
    },
    {
        "line": 87,
        "fullcodeline": "for( parent = trust_ca; parent != NULL; parent = parent->next )"
    },
    {
        "line": 93,
        "fullcodeline": "if( parent != NULL )"
    },
    {
        "line": 125,
        "fullcodeline": "if( ret != 0 )"
    },
    {
        "line": 21,
        "fullcodeline": "ret = MBEDTLS_ERR_X509_BAD_INPUT_DATA;"
    },
    {
        "line": 27,
        "fullcodeline": "name = &crt->subject;"
    },
    {
        "line": 28,
        "fullcodeline": "cn_len = strlen( cn );"
    },
    {
        "line": 81,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_BAD_PK;"
    },
    {
        "line": 84,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_BAD_KEY;"
    },
    {
        "line": 95,
        "fullcodeline": "ret = x509_crt_verify_top( crt, parent, ca_crl, profile,"
    },
    {
        "line": 127,
        "fullcodeline": "*flags = (uint32_t) -1;"
    },
    {
        "line": 30,
        "fullcodeline": "if( crt->ext_types & MBEDTLS_X509_EXT_SUBJECT_ALT_NAME )"
    },
    {
        "line": 89,
        "fullcodeline": "if( x509_crt_check_parent( crt, parent, 0, pathlen == 0 ) == 0 )"
    },
    {
        "line": 97,
        "fullcodeline": "if( ret != 0 )"
    },
    {
        "line": 32,
        "fullcodeline": "cur = &crt->subject_alt_names;"
    },
    {
        "line": 103,
        "fullcodeline": "for( parent = crt->next; parent != NULL; parent = parent->next )"
    },
    {
        "line": 108,
        "fullcodeline": "if( parent != NULL )"
    },
    {
        "line": 34,
        "fullcodeline": "while( cur != NULL )"
    },
    {
        "line": 50,
        "fullcodeline": "if( cur == NULL )"
    },
    {
        "line": 104,
        "fullcodeline": "if( x509_crt_check_parent( crt, parent, 0, pathlen == 0 ) == 0 )"
    },
    {
        "line": 110,
        "fullcodeline": "ret = x509_crt_verify_child( crt, parent, trust_ca, ca_crl, profile,"
    },
    {
        "line": 47,
        "fullcodeline": "cur = cur->next;"
    },
    {
        "line": 51,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_CN_MISMATCH;"
    },
    {
        "line": 55,
        "fullcodeline": "while( name != NULL )"
    },
    {
        "line": 72,
        "fullcodeline": "if( name == NULL )"
    },
    {
        "line": 112,
        "fullcodeline": "if( ret != 0 )"
    },
    {
        "line": 117,
        "fullcodeline": "ret = x509_crt_verify_top( crt, trust_ca, ca_crl, profile,"
    },
    {
        "line": 36,
        "fullcodeline": "if( cur->buf.len == cn_len &&"
    },
    {
        "line": 40,
        "fullcodeline": "if( cur->buf.len > 2 &&"
    },
    {
        "line": 69,
        "fullcodeline": "name = name->next;"
    },
    {
        "line": 73,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_CN_MISMATCH;"
    },
    {
        "line": 119,
        "fullcodeline": "if( ret != 0 )"
    },
    {
        "line": 37,
        "fullcodeline": "x509_memcasecmp( cn, cur->buf.p, cn_len ) == 0 )"
    },
    {
        "line": 42,
        "fullcodeline": "x509_check_wildcard( cn, &cur->buf ) == 0 )"
    },
    {
        "line": 57,
        "fullcodeline": "if( MBEDTLS_OID_CMP( MBEDTLS_OID_AT_CN, &name->oid ) == 0 )"
    },
    {
        "line": 41,
        "fullcodeline": "memcmp( cur->buf.p, \"*.\", 2 ) == 0 &&"
    },
    {
        "line": 59,
        "fullcodeline": "if( name->val.len == cn_len &&"
    },
    {
        "line": 63,
        "fullcodeline": "if( name->val.len > 2 &&"
    },
    {
        "line": 60,
        "fullcodeline": "x509_memcasecmp( name->val.p, cn, cn_len ) == 0 )"
    },
    {
        "line": 65,
        "fullcodeline": "x509_check_wildcard( cn, &name->val ) == 0 )"
    },
    {
        "line": 64,
        "fullcodeline": "memcmp( name->val.p, \"*.\", 2 ) == 0 &&"
    }
]