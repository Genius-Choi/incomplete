[
    {
        "line": 10,
        "fullcodeline": "uint32_t parent_flags = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned char hash[MBEDTLS_MD_MAX_SIZE];"
    },
    {
        "line": 38,
        "fullcodeline": "md_info = mbedtls_md_info_from_type( child->sig_md );"
    },
    {
        "line": 128,
        "fullcodeline": "*flags |= parent_flags;"
    },
    {
        "line": 16,
        "fullcodeline": "if( ( path_cnt != 0 ) && x509_name_cmp( &child->issuer, &child->subject ) == 0 )"
    },
    {
        "line": 20,
        "fullcodeline": "if( 1 + path_cnt > MBEDTLS_X509_MAX_INTERMEDIATE_CA )"
    },
    {
        "line": 26,
        "fullcodeline": "if( mbedtls_x509_time_is_past( &child->valid_to ) )"
    },
    {
        "line": 29,
        "fullcodeline": "if( mbedtls_x509_time_is_future( &child->valid_from ) )"
    },
    {
        "line": 32,
        "fullcodeline": "if( x509_profile_check_md_alg( profile, child->sig_md ) != 0 )"
    },
    {
        "line": 35,
        "fullcodeline": "if( x509_profile_check_pk_alg( profile, child->sig_pk ) != 0 )"
    },
    {
        "line": 39,
        "fullcodeline": "if( md_info == NULL )"
    },
    {
        "line": 68,
        "fullcodeline": "grandparent != NULL;"
    },
    {
        "line": 69,
        "fullcodeline": "grandparent = grandparent->next )"
    },
    {
        "line": 76,
        "fullcodeline": "if( grandparent != NULL )"
    },
    {
        "line": 124,
        "fullcodeline": "if( NULL != f_vrfy )"
    },
    {
        "line": 17,
        "fullcodeline": "self_cnt++;"
    },
    {
        "line": 22,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED;"
    },
    {
        "line": 27,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_EXPIRED;"
    },
    {
        "line": 30,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_FUTURE;"
    },
    {
        "line": 33,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_BAD_MD;"
    },
    {
        "line": 36,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_BAD_PK;"
    },
    {
        "line": 44,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED;"
    },
    {
        "line": 67,
        "fullcodeline": "for( grandparent = trust_ca;"
    },
    {
        "line": 78,
        "fullcodeline": "ret = x509_crt_verify_top( parent, grandparent, ca_crl, profile,"
    },
    {
        "line": 48,
        "fullcodeline": "mbedtls_md( md_info, child->tbs.p, child->tbs.len, hash );"
    },
    {
        "line": 71,
        "fullcodeline": "if( x509_crt_check_parent( parent, grandparent,"
    },
    {
        "line": 80,
        "fullcodeline": "if( ret != 0 )"
    },
    {
        "line": 125,
        "fullcodeline": "if( ( ret = f_vrfy( p_vrfy, child, path_cnt, flags ) ) != 0 )"
    },
    {
        "line": 50,
        "fullcodeline": "if( x509_profile_check_key( profile, child->sig_pk, &parent->pk ) != 0 )"
    },
    {
        "line": 53,
        "fullcodeline": "if( mbedtls_pk_verify_ext( child->sig_pk, child->sig_opts, &parent->pk,"
    },
    {
        "line": 79,
        "fullcodeline": "path_cnt + 1, self_cnt, &parent_flags, f_vrfy, p_vrfy );"
    },
    {
        "line": 87,
        "fullcodeline": "grandparent != NULL;"
    },
    {
        "line": 88,
        "fullcodeline": "grandparent = grandparent->next )"
    },
    {
        "line": 105,
        "fullcodeline": "if( grandparent != NULL )"
    },
    {
        "line": 51,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_BAD_KEY;"
    },
    {
        "line": 57,
        "fullcodeline": "*flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED;"
    },
    {
        "line": 72,
        "fullcodeline": "0, path_cnt == 0 ) == 0 )"
    },
    {
        "line": 86,
        "fullcodeline": "for( grandparent = parent->next;"
    },
    {
        "line": 107,
        "fullcodeline": "ret = x509_crt_verify_child( parent, grandparent, trust_ca, ca_crl,"
    },
    {
        "line": 54,
        "fullcodeline": "child->sig_md, hash, mbedtls_md_get_size( md_info ),"
    },
    {
        "line": 93,
        "fullcodeline": "if( grandparent->max_pathlen > 0 &&"
    },
    {
        "line": 99,
        "fullcodeline": "if( x509_crt_check_parent( parent, grandparent,"
    },
    {
        "line": 110,
        "fullcodeline": "if( ret != 0 )"
    },
    {
        "line": 115,
        "fullcodeline": "ret = x509_crt_verify_top( parent, trust_ca, ca_crl, profile,"
    },
    {
        "line": 94,
        "fullcodeline": "grandparent->max_pathlen < 2 + path_cnt - self_cnt )"
    },
    {
        "line": 108,
        "fullcodeline": "profile, path_cnt + 1, self_cnt, &parent_flags,"
    },
    {
        "line": 118,
        "fullcodeline": "if( ret != 0 )"
    },
    {
        "line": 100,
        "fullcodeline": "0, path_cnt == 0 ) == 0 )"
    },
    {
        "line": 116,
        "fullcodeline": "path_cnt + 1, self_cnt, &parent_flags,"
    }
]