[
    {
        "line": 3,
        "fullcodeline": "int timeout = -1;"
    },
    {
        "line": 15,
        "fullcodeline": "ctx->running = 1;"
    },
    {
        "line": 18,
        "fullcodeline": "_UEV_FOREACH(w, ctx->watchers) {"
    },
    {
        "line": 6,
        "fullcodeline": "if (!ctx || ctx->fd < 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (flags & UEV_NONBLOCK)"
    },
    {
        "line": 25,
        "fullcodeline": "while (ctx->running && ctx->watchers) {"
    },
    {
        "line": 7,
        "fullcodeline": "errno = EINVAL;"
    },
    {
        "line": 12,
        "fullcodeline": "timeout = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "if (UEV_CRON_TYPE == w->type)"
    },
    {
        "line": 21,
        "fullcodeline": "if (UEV_TIMER_TYPE == w->type)"
    },
    {
        "line": 26,
        "fullcodeline": "struct epoll_event ee[UEV_MAX_EVENTS];"
    },
    {
        "line": 27,
        "fullcodeline": "int maxevents = ctx->maxevents;"
    },
    {
        "line": 28,
        "fullcodeline": "int i, nfds, rerun = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "ctx->workaround = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "return -1;"
    },
    {
        "line": 20,
        "fullcodeline": "uev_cron_set(w, w->u.c.when, w->u.c.interval);"
    },
    {
        "line": 22,
        "fullcodeline": "uev_timer_set(w, w->u.t.timeout, w->u.t.period);"
    },
    {
        "line": 30,
        "fullcodeline": "if (maxevents > UEV_MAX_EVENTS)"
    },
    {
        "line": 53,
        "fullcodeline": "while ((nfds = epoll_wait(ctx->fd, ee, maxevents, timeout)) < 0) {"
    },
    {
        "line": 66,
        "fullcodeline": "for (i = 0; ctx->running && i < nfds; i++) {"
    },
    {
        "line": 135,
        "fullcodeline": "if (flags & UEV_ONCE)"
    },
    {
        "line": 31,
        "fullcodeline": "maxevents = UEV_MAX_EVENTS;"
    },
    {
        "line": 35,
        "fullcodeline": "_UEV_FOREACH(w, ctx->watchers) {"
    },
    {
        "line": 61,
        "fullcodeline": "uev_exit(ctx);"
    },
    {
        "line": 44,
        "fullcodeline": "rerun++;"
    },
    {
        "line": 45,
        "fullcodeline": "w->cb(w, w->arg, UEV_READ);"
    },
    {
        "line": 54,
        "fullcodeline": "if (!ctx->running)"
    },
    {
        "line": 57,
        "fullcodeline": "if (EINTR == errno)"
    },
    {
        "line": 63,
        "fullcodeline": "return -2;"
    },
    {
        "line": 36,
        "fullcodeline": "if (w->active != -1 || !w->cb)"
    },
    {
        "line": 39,
        "fullcodeline": "if (!has_data(w->fd)) {"
    },
    {
        "line": 132,
        "fullcodeline": "w->cb(w, w->arg, events & UEV_EVENT_MASK);"
    },
    {
        "line": 40,
        "fullcodeline": "w->active = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "_UEV_REMOVE(w, ctx->watchers);"
    },
    {
        "line": 77,
        "fullcodeline": "if (events & (EPOLLHUP | EPOLLERR))"
    },
    {
        "line": 82,
        "fullcodeline": "if (read(w->fd, &fdsi, sz) != sz) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (read(w->fd, &exp, sizeof(exp)) != sizeof(exp)) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (!w->u.t.timeout)"
    },
    {
        "line": 105,
        "fullcodeline": "if (read(w->fd, &exp, sizeof(exp)) != sizeof(exp)) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (!w->u.c.when)"
    },
    {
        "line": 122,
        "fullcodeline": "if (read(w->fd, &exp, sizeof(exp)) != sizeof(exp))"
    },
    {
        "line": 78,
        "fullcodeline": "uev_io_stop(w);"
    },
    {
        "line": 87,
        "fullcodeline": "memset(&w->siginfo, 0, sizeof(w->siginfo));"
    },
    {
        "line": 94,
        "fullcodeline": "uev_timer_stop(w);"
    },
    {
        "line": 95,
        "fullcodeline": "events = UEV_ERROR;"
    },
    {
        "line": 99,
        "fullcodeline": "w->u.t.timeout = 0;"
    },
    {
        "line": 101,
        "fullcodeline": "uev_timer_stop(w);"
    },
    {
        "line": 106,
        "fullcodeline": "events = UEV_HUP;"
    },
    {
        "line": 114,
        "fullcodeline": "w->u.c.when = 0;"
    },
    {
        "line": 118,
        "fullcodeline": "uev_timer_stop(w);"
    },
    {
        "line": 123,
        "fullcodeline": "events = UEV_HUP;"
    },
    {
        "line": 83,
        "fullcodeline": "if (uev_signal_start(w)) {"
    },
    {
        "line": 89,
        "fullcodeline": "w->siginfo = fdsi;"
    },
    {
        "line": 107,
        "fullcodeline": "if (errno != ECANCELED) {"
    },
    {
        "line": 116,
        "fullcodeline": "w->u.c.when += w->u.c.interval;"
    },
    {
        "line": 84,
        "fullcodeline": "uev_signal_stop(w);"
    },
    {
        "line": 85,
        "fullcodeline": "events = UEV_ERROR;"
    },
    {
        "line": 108,
        "fullcodeline": "uev_cron_stop(w);"
    },
    {
        "line": 109,
        "fullcodeline": "events = UEV_ERROR;"
    }
]