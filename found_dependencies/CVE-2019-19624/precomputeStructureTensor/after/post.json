[
    {
        "line": 4,
        "fullcodeline": "float *I0xx_ptr = dst_I0xx.ptr<float>();"
    },
    {
        "line": 5,
        "fullcodeline": "float *I0yy_ptr = dst_I0yy.ptr<float>();"
    },
    {
        "line": 6,
        "fullcodeline": "float *I0xy_ptr = dst_I0xy.ptr<float>();"
    },
    {
        "line": 7,
        "fullcodeline": "float *I0x_ptr = dst_I0x.ptr<float>();"
    },
    {
        "line": 8,
        "fullcodeline": "float *I0y_ptr = dst_I0y.ptr<float>();"
    },
    {
        "line": 10,
        "fullcodeline": "float *I0xx_aux_ptr = I0xx_buf_aux.ptr<float>();"
    },
    {
        "line": 11,
        "fullcodeline": "float *I0yy_aux_ptr = I0yy_buf_aux.ptr<float>();"
    },
    {
        "line": 12,
        "fullcodeline": "float *I0xy_aux_ptr = I0xy_buf_aux.ptr<float>();"
    },
    {
        "line": 13,
        "fullcodeline": "float *I0x_aux_ptr = I0x_buf_aux.ptr<float>();"
    },
    {
        "line": 14,
        "fullcodeline": "float *I0y_aux_ptr = I0y_buf_aux.ptr<float>();"
    },
    {
        "line": 55,
        "fullcodeline": "AutoBuffer<float> sum_xx(ws), sum_yy(ws), sum_xy(ws), sum_x(ws), sum_y(ws);"
    },
    {
        "line": 83,
        "fullcodeline": "int is = 1;"
    },
    {
        "line": 17,
        "fullcodeline": "for (int i = 0; i < h; i++)"
    },
    {
        "line": 56,
        "fullcodeline": "for (int j = 0; j < ws; j++)"
    },
    {
        "line": 66,
        "fullcodeline": "for (int i = 0; i < patch_size; i++)"
    },
    {
        "line": 75,
        "fullcodeline": "for (int j = 0; j < ws; j++)"
    },
    {
        "line": 84,
        "fullcodeline": "for (int i = patch_size; i < h; i++)"
    },
    {
        "line": 19,
        "fullcodeline": "float sum_xx = 0.0f, sum_yy = 0.0f, sum_xy = 0.0f, sum_x = 0.0f, sum_y = 0.0f;"
    },
    {
        "line": 20,
        "fullcodeline": "short *x_row = I0x.ptr<short>(i);"
    },
    {
        "line": 21,
        "fullcodeline": "short *y_row = I0y.ptr<short>(i);"
    },
    {
        "line": 30,
        "fullcodeline": "I0xx_aux_ptr[i * ws] = sum_xx;"
    },
    {
        "line": 31,
        "fullcodeline": "I0yy_aux_ptr[i * ws] = sum_yy;"
    },
    {
        "line": 32,
        "fullcodeline": "I0xy_aux_ptr[i * ws] = sum_xy;"
    },
    {
        "line": 33,
        "fullcodeline": "I0x_aux_ptr[i * ws] = sum_x;"
    },
    {
        "line": 34,
        "fullcodeline": "I0y_aux_ptr[i * ws] = sum_y;"
    },
    {
        "line": 35,
        "fullcodeline": "int js = 1;"
    },
    {
        "line": 58,
        "fullcodeline": "sum_xx[j] = 0.0f;"
    },
    {
        "line": 59,
        "fullcodeline": "sum_yy[j] = 0.0f;"
    },
    {
        "line": 60,
        "fullcodeline": "sum_xy[j] = 0.0f;"
    },
    {
        "line": 61,
        "fullcodeline": "sum_x[j] = 0.0f;"
    },
    {
        "line": 62,
        "fullcodeline": "sum_y[j] = 0.0f;"
    },
    {
        "line": 67,
        "fullcodeline": "for (int j = 0; j < ws; j++)"
    },
    {
        "line": 77,
        "fullcodeline": "I0xx_ptr[j] = sum_xx[j];"
    },
    {
        "line": 78,
        "fullcodeline": "I0yy_ptr[j] = sum_yy[j];"
    },
    {
        "line": 79,
        "fullcodeline": "I0xy_ptr[j] = sum_xy[j];"
    },
    {
        "line": 80,
        "fullcodeline": "I0x_ptr[j] = sum_x[j];"
    },
    {
        "line": 81,
        "fullcodeline": "I0y_ptr[j] = sum_y[j];"
    },
    {
        "line": 22,
        "fullcodeline": "for (int j = 0; j < patch_size; j++)"
    },
    {
        "line": 36,
        "fullcodeline": "for (int j = patch_size; j < w; j++)"
    },
    {
        "line": 69,
        "fullcodeline": "sum_xx[j] += I0xx_aux_ptr[i * ws + j];"
    },
    {
        "line": 70,
        "fullcodeline": "sum_yy[j] += I0yy_aux_ptr[i * ws + j];"
    },
    {
        "line": 71,
        "fullcodeline": "sum_xy[j] += I0xy_aux_ptr[i * ws + j];"
    },
    {
        "line": 72,
        "fullcodeline": "sum_x[j] += I0x_aux_ptr[i * ws + j];"
    },
    {
        "line": 73,
        "fullcodeline": "sum_y[j] += I0y_aux_ptr[i * ws + j];"
    },
    {
        "line": 86,
        "fullcodeline": "for (int j = 0; j < ws; j++)"
    },
    {
        "line": 94,
        "fullcodeline": "if ((i - patch_size + 1) % patch_stride == 0)"
    },
    {
        "line": 24,
        "fullcodeline": "sum_xx += x_row[j] * x_row[j];"
    },
    {
        "line": 25,
        "fullcodeline": "sum_yy += y_row[j] * y_row[j];"
    },
    {
        "line": 26,
        "fullcodeline": "sum_xy += x_row[j] * y_row[j];"
    },
    {
        "line": 27,
        "fullcodeline": "sum_x += x_row[j];"
    },
    {
        "line": 28,
        "fullcodeline": "sum_y += y_row[j];"
    },
    {
        "line": 38,
        "fullcodeline": "sum_xx += (x_row[j] * x_row[j] - x_row[j - patch_size] * x_row[j - patch_size]);"
    },
    {
        "line": 39,
        "fullcodeline": "sum_yy += (y_row[j] * y_row[j] - y_row[j - patch_size] * y_row[j - patch_size]);"
    },
    {
        "line": 40,
        "fullcodeline": "sum_xy += (x_row[j] * y_row[j] - x_row[j - patch_size] * y_row[j - patch_size]);"
    },
    {
        "line": 41,
        "fullcodeline": "sum_x += (x_row[j] - x_row[j - patch_size]);"
    },
    {
        "line": 42,
        "fullcodeline": "sum_y += (y_row[j] - y_row[j - patch_size]);"
    },
    {
        "line": 88,
        "fullcodeline": "sum_xx[j] += (I0xx_aux_ptr[i * ws + j] - I0xx_aux_ptr[(i - patch_size) * ws + j]);"
    },
    {
        "line": 89,
        "fullcodeline": "sum_yy[j] += (I0yy_aux_ptr[i * ws + j] - I0yy_aux_ptr[(i - patch_size) * ws + j]);"
    },
    {
        "line": 90,
        "fullcodeline": "sum_xy[j] += (I0xy_aux_ptr[i * ws + j] - I0xy_aux_ptr[(i - patch_size) * ws + j]);"
    },
    {
        "line": 91,
        "fullcodeline": "sum_x[j] += (I0x_aux_ptr[i * ws + j] - I0x_aux_ptr[(i - patch_size) * ws + j]);"
    },
    {
        "line": 92,
        "fullcodeline": "sum_y[j] += (I0y_aux_ptr[i * ws + j] - I0y_aux_ptr[(i - patch_size) * ws + j]);"
    },
    {
        "line": 104,
        "fullcodeline": "is++;"
    },
    {
        "line": 43,
        "fullcodeline": "if ((j - patch_size + 1) % patch_stride == 0)"
    },
    {
        "line": 96,
        "fullcodeline": "for (int j = 0; j < ws; j++)"
    },
    {
        "line": 45,
        "fullcodeline": "I0xx_aux_ptr[i * ws + js] = sum_xx;"
    },
    {
        "line": 46,
        "fullcodeline": "I0yy_aux_ptr[i * ws + js] = sum_yy;"
    },
    {
        "line": 47,
        "fullcodeline": "I0xy_aux_ptr[i * ws + js] = sum_xy;"
    },
    {
        "line": 48,
        "fullcodeline": "I0x_aux_ptr[i * ws + js] = sum_x;"
    },
    {
        "line": 49,
        "fullcodeline": "I0y_aux_ptr[i * ws + js] = sum_y;"
    },
    {
        "line": 50,
        "fullcodeline": "js++;"
    },
    {
        "line": 98,
        "fullcodeline": "I0xx_ptr[is * ws + j] = sum_xx[j];"
    },
    {
        "line": 99,
        "fullcodeline": "I0yy_ptr[is * ws + j] = sum_yy[j];"
    },
    {
        "line": 100,
        "fullcodeline": "I0xy_ptr[is * ws + j] = sum_xy[j];"
    },
    {
        "line": 101,
        "fullcodeline": "I0x_ptr[is * ws + j] = sum_x[j];"
    },
    {
        "line": 102,
        "fullcodeline": "I0y_ptr[is * ws + j] = sum_y[j];"
    }
]