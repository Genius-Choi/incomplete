[
    {
        "line": 5,
        "fullcodeline": "SCEnter();"
    },
    {
        "line": 8,
        "fullcodeline": "DEBUG_VALIDATE_BUG_ON(s == NULL);"
    },
    {
        "line": 16,
        "fullcodeline": "flags = FileFlowToFlags(s->f, STREAM_TOCLIENT);"
    },
    {
        "line": 17,
        "fullcodeline": "FileContainer *files = &txud->files_tc;"
    },
    {
        "line": 35,
        "fullcodeline": "htp_tx_t *tx = htp_list_get(s->conn->transactions, txid - s->tx_freed);"
    },
    {
        "line": 54,
        "fullcodeline": "htud->file_range = HttpRangeContainerOpenFile(keyurl, keylen, s->f, &crparsed, &htp_sbcfg,"
    },
    {
        "line": 12,
        "fullcodeline": "if (HTPParseAndCheckContentRange(rawvalue, &crparsed, s, htud) != 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (!tx) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (tx->request_hostname != NULL) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (FileOpenFileWithId(files, &htp_sbcfg, s->file_track_id++, filename, filename_len, data,"
    },
    {
        "line": 29,
        "fullcodeline": "if (FileSetRange(files, crparsed.start, crparsed.end) < 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "keylen = bstr_len(tx->request_hostname) + filename_len;"
    },
    {
        "line": 43,
        "fullcodeline": "keyurl = SCMalloc(keylen);"
    },
    {
        "line": 47,
        "fullcodeline": "memcpy(keyurl, bstr_ptr(tx->request_hostname), bstr_len(tx->request_hostname));"
    },
    {
        "line": 48,
        "fullcodeline": "memcpy(keyurl + bstr_len(tx->request_hostname), filename, filename_len);"
    },
    {
        "line": 14,
        "fullcodeline": "return HTPFileOpen(s, txud, filename, filename_len, data, data_len, txid, STREAM_TOCLIENT);"
    },
    {
        "line": 22,
        "fullcodeline": "SCReturnInt(-1);"
    },
    {
        "line": 24,
        "fullcodeline": "const HTPCfgDir *cfg = &s->cfg->response;"
    },
    {
        "line": 25,
        "fullcodeline": "FileSetInspectSizes(files->tail, cfg->inspect_window, cfg->inspect_min_size);"
    },
    {
        "line": 37,
        "fullcodeline": "SCReturnInt(-1);"
    },
    {
        "line": 44,
        "fullcodeline": "if (keyurl == NULL) {"
    },
    {
        "line": 58,
        "fullcodeline": "SCReturnInt(-1);"
    },
    {
        "line": 45,
        "fullcodeline": "SCReturnInt(-1);"
    }
]