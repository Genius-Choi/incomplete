[
    {
        "line": 33,
        "fullcodeline": "raise InvalidType(f\"unknown type {typ}\")"
    },
    {
        "line": 2,
        "fullcodeline": "if isinstance(typ, new.BoolDefinition):"
    },
    {
        "line": 4,
        "fullcodeline": "if isinstance(typ, new.AddressDefinition):"
    },
    {
        "line": 6,
        "fullcodeline": "if isinstance(typ, new.InterfaceDefinition):"
    },
    {
        "line": 8,
        "fullcodeline": "if isinstance(typ, new.BytesMDefinition):"
    },
    {
        "line": 11,
        "fullcodeline": "if isinstance(typ, new.BytesArrayDefinition):"
    },
    {
        "line": 13,
        "fullcodeline": "if isinstance(typ, new.StringDefinition):"
    },
    {
        "line": 15,
        "fullcodeline": "if isinstance(typ, new.DecimalDefinition):"
    },
    {
        "line": 17,
        "fullcodeline": "if isinstance(typ, new.SignedIntegerAbstractType):"
    },
    {
        "line": 20,
        "fullcodeline": "if isinstance(typ, new.UnsignedIntegerAbstractType):"
    },
    {
        "line": 23,
        "fullcodeline": "if isinstance(typ, new.ArrayDefinition):"
    },
    {
        "line": 25,
        "fullcodeline": "if isinstance(typ, new.DynamicArrayDefinition):"
    },
    {
        "line": 27,
        "fullcodeline": "if isinstance(typ, new.TupleDefinition):"
    },
    {
        "line": 29,
        "fullcodeline": "if isinstance(typ, new.StructDefinition):"
    },
    {
        "line": 9,
        "fullcodeline": "m = typ._length  # type: ignore"
    },
    {
        "line": 18,
        "fullcodeline": "bits = typ._bits  # type: ignore"
    },
    {
        "line": 21,
        "fullcodeline": "bits = typ._bits  # type: ignore"
    },
    {
        "line": 3,
        "fullcodeline": "return old.BaseType(\"bool\")"
    },
    {
        "line": 5,
        "fullcodeline": "return old.BaseType(\"address\")"
    },
    {
        "line": 7,
        "fullcodeline": "return old.InterfaceType(typ._id)"
    },
    {
        "line": 10,
        "fullcodeline": "return old.BaseType(f\"bytes{m}\")"
    },
    {
        "line": 12,
        "fullcodeline": "return old.ByteArrayType(typ.length)"
    },
    {
        "line": 14,
        "fullcodeline": "return old.StringType(typ.length)"
    },
    {
        "line": 16,
        "fullcodeline": "return old.BaseType(\"decimal\")"
    },
    {
        "line": 19,
        "fullcodeline": "return old.BaseType(\"int\" + str(bits))"
    },
    {
        "line": 22,
        "fullcodeline": "return old.BaseType(\"uint\" + str(bits))"
    },
    {
        "line": 24,
        "fullcodeline": "return old.SArrayType(new_type_to_old_type(typ.value_type), typ.length)"
    },
    {
        "line": 26,
        "fullcodeline": "return old.DArrayType(new_type_to_old_type(typ.value_type), typ.length)"
    },
    {
        "line": 28,
        "fullcodeline": "return old.TupleType(typ.value_type)"
    },
    {
        "line": 30,
        "fullcodeline": "return old.StructType("
    },
    {
        "line": 31,
        "fullcodeline": "{n: new_type_to_old_type(t) for (n, t) in typ.members.items()}, typ._id"
    }
]