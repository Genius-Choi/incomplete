[
    {
        "line": 2,
        "fullcodeline": "typ = parent.typ"
    },
    {
        "line": 3,
        "fullcodeline": "assert isinstance(typ, TupleLike)"
    },
    {
        "line": 26,
        "fullcodeline": "ofst = 0  # offset from parent start"
    },
    {
        "line": 5,
        "fullcodeline": "if isinstance(typ, StructType):"
    },
    {
        "line": 19,
        "fullcodeline": "if parent.value == \"~empty\":"
    },
    {
        "line": 22,
        "fullcodeline": "if parent.value == \"multi\":"
    },
    {
        "line": 28,
        "fullcodeline": "if parent.encoding == Encoding.ABI:"
    },
    {
        "line": 49,
        "fullcodeline": "return IRnode.from_list("
    },
    {
        "line": 6,
        "fullcodeline": "assert isinstance(key, str)"
    },
    {
        "line": 7,
        "fullcodeline": "subtype = typ.members[key]"
    },
    {
        "line": 8,
        "fullcodeline": "attrs = list(typ.tuple_keys())"
    },
    {
        "line": 9,
        "fullcodeline": "index = attrs.index(key)"
    },
    {
        "line": 10,
        "fullcodeline": "annotation = key"
    },
    {
        "line": 12,
        "fullcodeline": "assert isinstance(key, int)"
    },
    {
        "line": 13,
        "fullcodeline": "subtype = typ.members[key]"
    },
    {
        "line": 14,
        "fullcodeline": "attrs = list(range(len(typ.members)))"
    },
    {
        "line": 15,
        "fullcodeline": "index = key"
    },
    {
        "line": 16,
        "fullcodeline": "annotation = None"
    },
    {
        "line": 32,
        "fullcodeline": "member_t = typ.members[attrs[index]]"
    },
    {
        "line": 50,
        "fullcodeline": "add_ofst(parent, ofst),"
    },
    {
        "line": 20,
        "fullcodeline": "return IRnode.from_list(\"~empty\", typ=subtype)"
    },
    {
        "line": 23,
        "fullcodeline": "assert parent.encoding != Encoding.ABI, \"no abi-encoded literals\""
    },
    {
        "line": 29,
        "fullcodeline": "if parent.location == STORAGE:"
    },
    {
        "line": 34,
        "fullcodeline": "for i in range(index):"
    },
    {
        "line": 38,
        "fullcodeline": "return _getelemptr_abi_helper(parent, member_t, ofst)"
    },
    {
        "line": 41,
        "fullcodeline": "for i in range(index):"
    },
    {
        "line": 30,
        "fullcodeline": "raise CompilerPanic(\"storage variables should not be abi encoded\")  # pragma: notest"
    },
    {
        "line": 35,
        "fullcodeline": "member_abi_t = typ.members[attrs[i]].abi_type"
    },
    {
        "line": 36,
        "fullcodeline": "ofst += member_abi_t.embedded_static_size()"
    },
    {
        "line": 42,
        "fullcodeline": "ofst += typ.members[attrs[i]].storage_size_in_words"
    },
    {
        "line": 44,
        "fullcodeline": "for i in range(index):"
    },
    {
        "line": 47,
        "fullcodeline": "raise CompilerPanic(f\"bad location {parent.location}\")  # pragma: notest"
    },
    {
        "line": 45,
        "fullcodeline": "ofst += typ.members[attrs[i]].memory_bytes_required"
    }
]