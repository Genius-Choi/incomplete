[
    {
        "line": 2,
        "fullcodeline": "new_abi = []"
    },
    {
        "line": 3,
        "fullcodeline": "for func_abi in abi:"
    },
    {
        "line": 23,
        "fullcodeline": "new_abi.append(func_abi)"
    },
    {
        "line": 4,
        "fullcodeline": "if \"stateMutability\" in func_abi:"
    },
    {
        "line": 5,
        "fullcodeline": "mutability = func_abi[\"stateMutability\"]"
    },
    {
        "line": 6,
        "fullcodeline": "del func_abi[\"stateMutability\"]"
    },
    {
        "line": 21,
        "fullcodeline": "func_abi[\"constant\"] = False"
    },
    {
        "line": 22,
        "fullcodeline": "func_abi[\"payable\"] = False"
    },
    {
        "line": 7,
        "fullcodeline": "if mutability == \"payable\":"
    },
    {
        "line": 8,
        "fullcodeline": "func_abi[\"constant\"] = False"
    },
    {
        "line": 9,
        "fullcodeline": "func_abi[\"payable\"] = True"
    },
    {
        "line": 10,
        "fullcodeline": "elif mutability == \"view\":"
    },
    {
        "line": 11,
        "fullcodeline": "func_abi[\"constant\"] = True"
    },
    {
        "line": 12,
        "fullcodeline": "func_abi[\"payable\"] = False"
    },
    {
        "line": 13,
        "fullcodeline": "elif mutability == \"pure\":"
    },
    {
        "line": 15,
        "fullcodeline": "func_abi[\"constant\"] = True"
    },
    {
        "line": 16,
        "fullcodeline": "func_abi[\"payable\"] = False"
    },
    {
        "line": 18,
        "fullcodeline": "func_abi[\"constant\"] = False"
    },
    {
        "line": 19,
        "fullcodeline": "func_abi[\"payable\"] = False"
    }
]