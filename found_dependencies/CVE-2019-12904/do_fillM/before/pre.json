[
    {
        "line": 5,
        "fullcodeline": "M[0 + 0] = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "M[0 + 16] = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "M[8 + 0] = buf_get_be64 (h + 0);"
    },
    {
        "line": 9,
        "fullcodeline": "M[8 + 16] = buf_get_be64 (h + 8);"
    },
    {
        "line": 11,
        "fullcodeline": "for (i = 4; i > 0; i /= 2)"
    },
    {
        "line": 19,
        "fullcodeline": "for (i = 2; i < 16; i *= 2)"
    },
    {
        "line": 26,
        "fullcodeline": "for (i = 0; i < 16; i++)"
    },
    {
        "line": 13,
        "fullcodeline": "M[i + 0] = M[2 * i + 0];"
    },
    {
        "line": 14,
        "fullcodeline": "M[i + 16] = M[2 * i + 16];"
    },
    {
        "line": 16,
        "fullcodeline": "bshift (&M[i], &M[i + 16]);"
    },
    {
        "line": 20,
        "fullcodeline": "for (j = 1; j < i; j++)"
    },
    {
        "line": 28,
        "fullcodeline": "M[i + 32] = (M[i + 0] >> 4) ^ ((u64) gcmR[(M[i + 16] & 0xf) << 4] << 48);"
    },
    {
        "line": 29,
        "fullcodeline": "M[i + 48] = (M[i + 16] >> 4) ^ (M[i + 0] << 60);"
    },
    {
        "line": 22,
        "fullcodeline": "M[(i + j) + 0] = M[i + 0] ^ M[j + 0];"
    },
    {
        "line": 23,
        "fullcodeline": "M[(i + j) + 16] = M[i + 16] ^ M[j + 16];"
    }
]