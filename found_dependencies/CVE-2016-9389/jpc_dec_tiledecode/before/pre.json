[
    {
        "line": 16,
        "fullcodeline": "if (jpc_dec_decodecblks(dec, tile)) {"
    },
    {
        "line": 22,
        "fullcodeline": "for (compno = 0, tcomp = tile->tcomps; compno < dec->numcomps;"
    },
    {
        "line": 47,
        "fullcodeline": "for (compno = 0, tcomp = tile->tcomps; compno < dec->numcomps;"
    },
    {
        "line": 89,
        "fullcodeline": "for (compno = 0, tcomp = tile->tcomps, cmpt = dec->cmpts; compno <"
    },
    {
        "line": 100,
        "fullcodeline": "for (compno = 0, tcomp = tile->tcomps, cmpt = dec->cmpts; compno <"
    },
    {
        "line": 113,
        "fullcodeline": "for (compno = 0, tcomp = tile->tcomps, cmpt = dec->cmpts; compno <"
    },
    {
        "line": 17,
        "fullcodeline": "jas_eprintf(\"jpc_dec_decodecblks failed\\n\");"
    },
    {
        "line": 23,
        "fullcodeline": "++compno, ++tcomp) {"
    },
    {
        "line": 24,
        "fullcodeline": "ccp = &tile->cp->ccps[compno];"
    },
    {
        "line": 48,
        "fullcodeline": "++compno, ++tcomp) {"
    },
    {
        "line": 50,
        "fullcodeline": "jpc_tsfb_synthesize(tcomp->tsfb, tcomp->data);"
    },
    {
        "line": 90,
        "fullcodeline": "dec->numcomps; ++compno, ++tcomp, ++cmpt) {"
    },
    {
        "line": 91,
        "fullcodeline": "adjust = cmpt->sgnd ? 0 : (1 << (cmpt->prec - 1));"
    },
    {
        "line": 101,
        "fullcodeline": "dec->numcomps; ++compno, ++tcomp, ++cmpt) {"
    },
    {
        "line": 104,
        "fullcodeline": "mn = cmpt->sgnd ? (-(1 << (cmpt->prec - 1))) : (0);"
    },
    {
        "line": 105,
        "fullcodeline": "mx = cmpt->sgnd ? ((1 << (cmpt->prec - 1)) - 1) : ((1 <<"
    },
    {
        "line": 107,
        "fullcodeline": "jas_matrix_clip(tcomp->data, mn, mx);"
    },
    {
        "line": 114,
        "fullcodeline": "dec->numcomps; ++compno, ++tcomp, ++cmpt) {"
    },
    {
        "line": 18,
        "fullcodeline": "return -1;"
    },
    {
        "line": 25,
        "fullcodeline": "for (rlvlno = 0, rlvl = tcomp->rlvls; rlvlno < tcomp->numrlvls;"
    },
    {
        "line": 57,
        "fullcodeline": "if (dec->numcomps < 3) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (dec->numcomps < 3) {"
    },
    {
        "line": 76,
        "fullcodeline": "for (compno = 0, tcomp = tile->tcomps; compno < dec->numcomps;"
    },
    {
        "line": 92,
        "fullcodeline": "for (i = 0; i < jas_matrix_numrows(tcomp->data); ++i) {"
    },
    {
        "line": 115,
        "fullcodeline": "if (jas_image_writecmpt(dec->image, compno, tcomp->xstart -"
    },
    {
        "line": 26,
        "fullcodeline": "++rlvlno, ++rlvl) {"
    },
    {
        "line": 77,
        "fullcodeline": "++compno, ++tcomp) {"
    },
    {
        "line": 116,
        "fullcodeline": "JPC_CEILDIV(dec->xstart, cmpt->hstep), tcomp->ystart -"
    },
    {
        "line": 117,
        "fullcodeline": "JPC_CEILDIV(dec->ystart, cmpt->vstep), jas_matrix_numcols("
    },
    {
        "line": 118,
        "fullcodeline": "tcomp->data), jas_matrix_numrows(tcomp->data), tcomp->data)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (!rlvl->bands) {"
    },
    {
        "line": 31,
        "fullcodeline": "bandno < rlvl->numbands; ++bandno, ++band) {"
    },
    {
        "line": 59,
        "fullcodeline": "return -1;"
    },
    {
        "line": 67,
        "fullcodeline": "return -1;"
    },
    {
        "line": 78,
        "fullcodeline": "for (i = 0; i < jas_matrix_numrows(tcomp->data); ++i) {"
    },
    {
        "line": 93,
        "fullcodeline": "for (j = 0; j < jas_matrix_numcols(tcomp->data); ++j) {"
    },
    {
        "line": 120,
        "fullcodeline": "return -1;"
    },
    {
        "line": 35,
        "fullcodeline": "jpc_undo_roi(band->data, band->roishift, ccp->roishift -"
    },
    {
        "line": 30,
        "fullcodeline": "for (bandno = 0, band = rlvl->bands;"
    },
    {
        "line": 32,
        "fullcodeline": "if (!band->data) {"
    },
    {
        "line": 79,
        "fullcodeline": "for (j = 0; j < jas_matrix_numcols(tcomp->data); ++j) {"
    },
    {
        "line": 38,
        "fullcodeline": "jas_matrix_asl(band->data, JPC_FIX_FRACBITS);"
    },
    {
        "line": 39,
        "fullcodeline": "jpc_dequantize(band->data, band->absstepsize);"
    },
    {
        "line": 80,
        "fullcodeline": "v = jas_matrix_get(tcomp->data, i, j);"
    },
    {
        "line": 81,
        "fullcodeline": "v = jpc_fix_round(v);"
    },
    {
        "line": 82,
        "fullcodeline": "jas_matrix_set(tcomp->data, i, j, jpc_fixtoint(v));"
    },
    {
        "line": 94,
        "fullcodeline": "*jas_matrix_getref(tcomp->data, i, j) += adjust;"
    }
]