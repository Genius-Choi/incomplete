[
    {
        "line": 14,
        "fullcodeline": "login_kwargs = {\"redirect\": _flask.request.script_root + _flask.request.full_path}"
    },
    {
        "line": 12,
        "fullcodeline": "from octoprint.server import current_user, userManager"
    },
    {
        "line": 16,
        "fullcodeline": "_flask.request.headers.get(\"X-Preemptive-Recording\", \"no\") == \"no\""
    },
    {
        "line": 17,
        "fullcodeline": "and userManager.has_been_customized()"
    },
    {
        "line": 19,
        "fullcodeline": "requires_login = False"
    },
    {
        "line": 21,
        "fullcodeline": "if permissions is not None and not has_permissions(*permissions):"
    },
    {
        "line": 25,
        "fullcodeline": "if user_id is not None and current_user.get_id() != user_id:"
    },
    {
        "line": 22,
        "fullcodeline": "requires_login = True"
    },
    {
        "line": 23,
        "fullcodeline": "login_kwargs[\"permissions\"] = \",\".join([x.key for x in permissions])"
    },
    {
        "line": 26,
        "fullcodeline": "requires_login = True"
    },
    {
        "line": 27,
        "fullcodeline": "login_kwargs[\"user_id\"] = user_id"
    },
    {
        "line": 30,
        "fullcodeline": "return _flask.redirect(_flask.url_for(\"login\", **login_kwargs))"
    }
]