[
    {
        "line": 2,
        "fullcodeline": "content_type = img.headers.get('content-type')"
    },
    {
        "line": 27,
        "fullcodeline": "tmp_dir = os.path.join(gettempdir(), 'calibre_web')"
    },
    {
        "line": 5,
        "fullcodeline": "if content_type not in ('image/jpeg', 'image/png', 'image/webp', 'image/bmp'):"
    },
    {
        "line": 31,
        "fullcodeline": "ret, message = save_cover_from_filestorage(tmp_dir, \"uploaded_cover.jpg\", img)"
    },
    {
        "line": 40,
        "fullcodeline": "return save_cover_from_filestorage(os.path.join(config.config_calibre_dir, book_path), \"cover.jpg\", img)"
    },
    {
        "line": 6,
        "fullcodeline": "log.error(\"Only jpg/jpeg/png/webp/bmp files are supported as coverfile\")"
    },
    {
        "line": 30,
        "fullcodeline": "os.mkdir(tmp_dir)"
    },
    {
        "line": 7,
        "fullcodeline": "return False, _(\"Only jpg/jpeg/png/webp/bmp files are supported as coverfile\")"
    },
    {
        "line": 24,
        "fullcodeline": "return False, _(\"Only jpg/jpeg files are supported as coverfile\")"
    },
    {
        "line": 29,
        "fullcodeline": "if not os.path.isdir(tmp_dir):"
    },
    {
        "line": 36,
        "fullcodeline": "return True, None"
    },
    {
        "line": 38,
        "fullcodeline": "return False, message"
    },
    {
        "line": 15,
        "fullcodeline": "imgc.format = 'jpeg'"
    },
    {
        "line": 16,
        "fullcodeline": "imgc.transform_colorspace(\"rgb\")"
    },
    {
        "line": 17,
        "fullcodeline": "img = imgc"
    },
    {
        "line": 33,
        "fullcodeline": "gd.uploadFileToEbooksFolder(os.path.join(book_path, 'cover.jpg').replace(\"\\\\\", \"/\"),"
    },
    {
        "line": 34,
        "fullcodeline": "os.path.join(tmp_dir, \"uploaded_cover.jpg\"))"
    },
    {
        "line": 11,
        "fullcodeline": "if hasattr(img, 'stream'):"
    },
    {
        "line": 12,
        "fullcodeline": "imgc = Image(blob=img.stream)"
    },
    {
        "line": 14,
        "fullcodeline": "imgc = Image(blob=io.BytesIO(img.content))"
    },
    {
        "line": 19,
        "fullcodeline": "log.error(\"Invalid cover file content\")"
    },
    {
        "line": 20,
        "fullcodeline": "return False, _(\"Invalid cover file content\")"
    }
]