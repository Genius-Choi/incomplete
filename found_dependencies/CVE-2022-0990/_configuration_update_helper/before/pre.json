[
    {
        "line": 2,
        "fullcodeline": "reboot_required = False"
    },
    {
        "line": 3,
        "fullcodeline": "to_save = request.form.to_dict()"
    },
    {
        "line": 88,
        "fullcodeline": "return _configuration_result(None, reboot_required)"
    },
    {
        "line": 5,
        "fullcodeline": "reboot_required |= _config_int(to_save, \"config_port\")"
    },
    {
        "line": 6,
        "fullcodeline": "reboot_required |= _config_string(to_save, \"config_trustedhosts\")"
    },
    {
        "line": 7,
        "fullcodeline": "reboot_required |= _config_string(to_save, \"config_keyfile\")"
    },
    {
        "line": 11,
        "fullcodeline": "reboot_required |= _config_string(to_save, \"config_certfile\")"
    },
    {
        "line": 15,
        "fullcodeline": "_config_checkbox_int(to_save, \"config_uploading\")"
    },
    {
        "line": 16,
        "fullcodeline": "_config_checkbox_int(to_save, \"config_unicode_filename\")"
    },
    {
        "line": 18,
        "fullcodeline": "reboot_required |= (_config_checkbox_int(to_save, \"config_anonbrowse\")"
    },
    {
        "line": 20,
        "fullcodeline": "_config_checkbox_int(to_save, \"config_public_reg\")"
    },
    {
        "line": 21,
        "fullcodeline": "_config_checkbox_int(to_save, \"config_register_email\")"
    },
    {
        "line": 22,
        "fullcodeline": "reboot_required |= _config_checkbox_int(to_save, \"config_kobo_sync\")"
    },
    {
        "line": 23,
        "fullcodeline": "_config_int(to_save, \"config_external_port\")"
    },
    {
        "line": 24,
        "fullcodeline": "_config_checkbox_int(to_save, \"config_kobo_proxy\")"
    },
    {
        "line": 32,
        "fullcodeline": "_config_string(to_save, \"config_calibre\")"
    },
    {
        "line": 33,
        "fullcodeline": "_config_string(to_save, \"config_converterpath\")"
    },
    {
        "line": 34,
        "fullcodeline": "_config_string(to_save, \"config_kepubifypath\")"
    },
    {
        "line": 36,
        "fullcodeline": "reboot_required |= _config_int(to_save, \"config_login_type\")"
    },
    {
        "line": 46,
        "fullcodeline": "_config_checkbox(to_save, \"config_remote_login\")"
    },
    {
        "line": 51,
        "fullcodeline": "_config_checkbox(to_save, \"config_use_goodreads\")"
    },
    {
        "line": 52,
        "fullcodeline": "_config_string(to_save, \"config_goodreads_api_key\")"
    },
    {
        "line": 53,
        "fullcodeline": "_config_string(to_save, \"config_goodreads_api_secret\")"
    },
    {
        "line": 59,
        "fullcodeline": "_config_int(to_save, \"config_updatechannel\")"
    },
    {
        "line": 62,
        "fullcodeline": "_config_checkbox(to_save, \"config_allow_reverse_proxy_header_login\")"
    },
    {
        "line": 63,
        "fullcodeline": "_config_string(to_save, \"config_reverse_proxy_login_header_name\")"
    },
    {
        "line": 72,
        "fullcodeline": "reboot_required |= reboot"
    },
    {
        "line": 74,
        "fullcodeline": "_config_string(to_save, \"config_rarfile_location\")"
    },
    {
        "line": 8,
        "fullcodeline": "if config.config_keyfile and not os.path.isfile(config.config_keyfile):"
    },
    {
        "line": 12,
        "fullcodeline": "if config.config_certfile and not os.path.isfile(config.config_certfile):"
    },
    {
        "line": 26,
        "fullcodeline": "if \"config_upload_formats\" in to_save:"
    },
    {
        "line": 39,
        "fullcodeline": "if config.config_login_type == constants.LOGIN_LDAP:"
    },
    {
        "line": 47,
        "fullcodeline": "if not config.config_remote_login:"
    },
    {
        "line": 66,
        "fullcodeline": "if config.config_login_type == constants.LOGIN_OAUTH:"
    },
    {
        "line": 69,
        "fullcodeline": "reboot, message = _configuration_logfile_helper(to_save)"
    },
    {
        "line": 19,
        "fullcodeline": "and config.config_login_type == constants.LOGIN_LDAP)"
    },
    {
        "line": 27,
        "fullcodeline": "to_save[\"config_upload_formats\"] = ','.join("
    },
    {
        "line": 29,
        "fullcodeline": "_config_string(to_save, \"config_upload_formats\")"
    },
    {
        "line": 43,
        "fullcodeline": "reboot_required |= reboot"
    },
    {
        "line": 67,
        "fullcodeline": "reboot_required |= _configuration_oauth_helper(to_save)"
    },
    {
        "line": 76,
        "fullcodeline": "unrar_status = helper.check_unrar(config.config_rarfile_location)"
    },
    {
        "line": 9,
        "fullcodeline": "return _configuration_result(_('Keyfile Location is not Valid, Please Enter Correct Path'))"
    },
    {
        "line": 13,
        "fullcodeline": "return _configuration_result(_('Certfile Location is not Valid, Please Enter Correct Path'))"
    },
    {
        "line": 40,
        "fullcodeline": "reboot, message = _configuration_ldap_helper(to_save)"
    },
    {
        "line": 48,
        "fullcodeline": "ub.session.query(ub.RemoteAuthToken).filter(ub.RemoteAuthToken.token_type == 0).delete()"
    },
    {
        "line": 55,
        "fullcodeline": "services.goodreads_support.connect(config.config_goodreads_api_key,"
    },
    {
        "line": 80,
        "fullcodeline": "ub.session.rollback()"
    },
    {
        "line": 82,
        "fullcodeline": "_configuration_result(_(u\"Database error: %(error)s.\", error=e.orig))"
    },
    {
        "line": 30,
        "fullcodeline": "constants.EXTENSIONS_UPLOAD = config.config_upload_formats.split(',')"
    },
    {
        "line": 81,
        "fullcodeline": "log.error_or_exception(\"Settings Database error: {}\".format(e))"
    },
    {
        "line": 28,
        "fullcodeline": "helper.uniq([x.lstrip().rstrip().lower() for x in to_save[\"config_upload_formats\"].split(',')]))"
    },
    {
        "line": 78,
        "fullcodeline": "return _configuration_result(unrar_status)"
    }
]