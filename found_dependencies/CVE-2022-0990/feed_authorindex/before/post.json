[
    {
        "line": 2,
        "fullcodeline": "shift = 0"
    },
    {
        "line": 3,
        "fullcodeline": "off = int(request.args.get(\"offset\") or 0)"
    },
    {
        "line": 4,
        "fullcodeline": "entries = calibre_db.session.query(func.upper(func.substr(db.Authors.sort, 1, 1)).label('id'))\\"
    },
    {
        "line": 8,
        "fullcodeline": "elements = []"
    },
    {
        "line": 17,
        "fullcodeline": "pagination = Pagination((int(off) / (int(config.config_books_per_page)) + 1), config.config_books_per_page,"
    },
    {
        "line": 9,
        "fullcodeline": "if off == 0:"
    },
    {
        "line": 12,
        "fullcodeline": "for entry in entries["
    },
    {
        "line": 19,
        "fullcodeline": "return render_xml_template('feed.xml',"
    },
    {
        "line": 10,
        "fullcodeline": "elements.append({'id': \"00\", 'name':_(\"All\")})"
    },
    {
        "line": 11,
        "fullcodeline": "shift = 1"
    },
    {
        "line": 18,
        "fullcodeline": "len(entries) + 1)"
    },
    {
        "line": 15,
        "fullcodeline": "elements.append({'id': entry.id, 'name': entry.id})"
    },
    {
        "line": 13,
        "fullcodeline": "off + shift - 1:"
    },
    {
        "line": 6,
        "fullcodeline": ".group_by(func.upper(func.substr(db.Authors.sort, 1, 1))).all()"
    },
    {
        "line": 14,
        "fullcodeline": "int(off + int(config.config_books_per_page) - shift)]:"
    },
    {
        "line": 5,
        "fullcodeline": ".join(db.books_authors_link).join(db.Books).filter(calibre_db.common_filters())\\"
    }
]