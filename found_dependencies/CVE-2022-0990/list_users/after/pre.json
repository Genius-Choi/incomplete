[
    {
        "line": 2,
        "fullcodeline": "off = int(request.args.get(\"offset\") or 0)"
    },
    {
        "line": 3,
        "fullcodeline": "limit = int(request.args.get(\"limit\") or 10)"
    },
    {
        "line": 4,
        "fullcodeline": "search = request.args.get(\"search\")"
    },
    {
        "line": 5,
        "fullcodeline": "sort = request.args.get(\"sort\", \"id\")"
    },
    {
        "line": 6,
        "fullcodeline": "state = None"
    },
    {
        "line": 12,
        "fullcodeline": "order = request.args.get(\"order\", \"\").lower()"
    },
    {
        "line": 19,
        "fullcodeline": "all_user = ub.session.query(ub.User)"
    },
    {
        "line": 42,
        "fullcodeline": "table_entries = {'totalNotFiltered': total_count, 'total': filtered_count, \"rows\": users}"
    },
    {
        "line": 43,
        "fullcodeline": "js_list = json.dumps(table_entries, cls=db.AlchemyEncoder)"
    },
    {
        "line": 44,
        "fullcodeline": "response = make_response(js_list)"
    },
    {
        "line": 45,
        "fullcodeline": "response.headers[\"Content-Type\"] = \"application/json; charset=utf-8\""
    },
    {
        "line": 7,
        "fullcodeline": "if sort == \"state\":"
    },
    {
        "line": 14,
        "fullcodeline": "if sort != \"state\" and order:"
    },
    {
        "line": 20,
        "fullcodeline": "if not config.config_anonbrowse:"
    },
    {
        "line": 23,
        "fullcodeline": "total_count = filtered_count = all_user.count()"
    },
    {
        "line": 36,
        "fullcodeline": "for user in users:"
    },
    {
        "line": 8,
        "fullcodeline": "state = json.loads(request.args.get(\"state\", \"[]\"))"
    },
    {
        "line": 15,
        "fullcodeline": "order = text(sort + \" \" + order)"
    },
    {
        "line": 21,
        "fullcodeline": "all_user = all_user.filter(ub.User.role.op('&')(constants.ROLE_ANONYMOUS) != constants.ROLE_ANONYMOUS)"
    },
    {
        "line": 26,
        "fullcodeline": "all_user = all_user.filter(or_(func.lower(ub.User.name).ilike(\"%\" + search + \"%\"),"
    },
    {
        "line": 30,
        "fullcodeline": "users = calibre_db.get_checkbox_sorted(all_user.all(), state, off, limit, request.args.get(\"order\", \"\").lower())"
    },
    {
        "line": 32,
        "fullcodeline": "users = all_user.order_by(order).offset(off).limit(limit).all()"
    },
    {
        "line": 34,
        "fullcodeline": "filtered_count = len(users)"
    },
    {
        "line": 10,
        "fullcodeline": "if sort not in ub.User.__table__.columns.keys():"
    },
    {
        "line": 16,
        "fullcodeline": "elif not state:"
    },
    {
        "line": 11,
        "fullcodeline": "sort = \"id\""
    },
    {
        "line": 17,
        "fullcodeline": "order = ub.User.id.asc()"
    },
    {
        "line": 37,
        "fullcodeline": "if user.default_language == \"all\":"
    },
    {
        "line": 38,
        "fullcodeline": "user.default = _(\"All\")"
    },
    {
        "line": 40,
        "fullcodeline": "user.default = Locale.parse(user.default_language).get_language_name(get_locale())"
    },
    {
        "line": 27,
        "fullcodeline": "func.lower(ub.User.kindle_mail).ilike(\"%\" + search + \"%\"),"
    },
    {
        "line": 28,
        "fullcodeline": "func.lower(ub.User.email).ilike(\"%\" + search + \"%\")))"
    }
]