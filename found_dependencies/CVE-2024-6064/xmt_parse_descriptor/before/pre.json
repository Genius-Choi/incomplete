[
    {
        "line": 5,
        "fullcodeline": "u32 fake_desc = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "char *xmt_desc_name = NULL, *ocr_ref = NULL, *dep_ref = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "u32 binaryID = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "u8 tag = gf_odf_get_tag_by_name(name);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!tag) {"
    },
    {
        "line": 56,
        "fullcodeline": "for (i=0; i<nb_attributes; i++) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (binaryID || xmt_desc_name) {"
    },
    {
        "line": 49,
        "fullcodeline": "tag = parent->tag;"
    },
    {
        "line": 50,
        "fullcodeline": "desc = parent;"
    },
    {
        "line": 57,
        "fullcodeline": "GF_XMLAttribute *att = (GF_XMLAttribute *) &attributes[i];"
    },
    {
        "line": 12,
        "fullcodeline": "if (!parent) return NULL;"
    },
    {
        "line": 52,
        "fullcodeline": "desc = gf_odf_desc_new(tag);"
    },
    {
        "line": 97,
        "fullcodeline": "e = gf_odf_desc_add_desc(parent, desc);"
    },
    {
        "line": 104,
        "fullcodeline": "if (parent->tag == GF_ODF_ESD_TAG) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (!desc) return NULL;"
    },
    {
        "line": 58,
        "fullcodeline": "if (!att->value || !strlen(att->value)) continue;"
    },
    {
        "line": 59,
        "fullcodeline": "if (!strcmp(att->name, \"binaryID\")) binaryID = atoi(att->value);"
    },
    {
        "line": 76,
        "fullcodeline": "if ((tag == GF_ODF_IOD_TAG) || (tag == GF_ODF_OD_TAG))"
    },
    {
        "line": 77,
        "fullcodeline": "xmt_new_od_link(parser, (GF_ObjectDescriptor *)desc, xmt_desc_name, binaryID);"
    },
    {
        "line": 89,
        "fullcodeline": "GF_BIFSConfig *bcfg = (GF_BIFSConfig *)desc;"
    },
    {
        "line": 99,
        "fullcodeline": "xmt_report(parser, GF_OK, \"Invalid child descriptor\");"
    },
    {
        "line": 105,
        "fullcodeline": "GF_ESD *esd = (GF_ESD *)parent;"
    },
    {
        "line": 16,
        "fullcodeline": "if (!strcmp(name, \"Profiles\")) fake_desc = 1;"
    },
    {
        "line": 23,
        "fullcodeline": "if (!strcmp(name, \"decConfigDescr\")) fake_desc = 1;"
    },
    {
        "line": 28,
        "fullcodeline": "if (!strcmp(name, \"decSpecificInfo\")) fake_desc = 1;"
    },
    {
        "line": 32,
        "fullcodeline": "if (!strcmp(name, \"custom\")) fake_desc = 1;"
    },
    {
        "line": 36,
        "fullcodeline": "if (!strcmp(name, \"MP4MuxHints\")) fake_desc = 1;"
    },
    {
        "line": 40,
        "fullcodeline": "if (!strcmp(name, \"commandStream\")) fake_desc = 1;"
    },
    {
        "line": 78,
        "fullcodeline": "else if (tag == GF_ODF_ESD_TAG) {"
    },
    {
        "line": 60,
        "fullcodeline": "else if (!stricmp(att->name, \"objectDescriptorID\")) xmt_desc_name = att->value;"
    },
    {
        "line": 79,
        "fullcodeline": "xmt_new_esd_link(parser, (GF_ESD *) desc, xmt_desc_name, binaryID);"
    },
    {
        "line": 17,
        "fullcodeline": "else if (!strcmp(name, \"Descr\")) fake_desc = 1;"
    },
    {
        "line": 24,
        "fullcodeline": "else if (!strcmp(name, \"slConfigDescr\")) fake_desc = 1;"
    },
    {
        "line": 41,
        "fullcodeline": "else if (!strcmp(name, \"size\")) fake_desc = 2;"
    },
    {
        "line": 82,
        "fullcodeline": "if (ocr_ref) xmt_set_depend_id(parser, (GF_ESD *) desc, ocr_ref, 1);"
    },
    {
        "line": 83,
        "fullcodeline": "if (dep_ref) xmt_set_depend_id(parser, (GF_ESD *) desc, dep_ref, 0);"
    },
    {
        "line": 110,
        "fullcodeline": "if (!esd->decoderConfig->objectTypeIndication) esd->decoderConfig->objectTypeIndication = 1;"
    },
    {
        "line": 112,
        "fullcodeline": "if (parser->scene_es && !parser->base_scene_id && (esd->decoderConfig->streamType==GF_STREAM_SCENE)) {"
    },
    {
        "line": 61,
        "fullcodeline": "else if (!strcmp(att->name, \"ES_ID\")) xmt_desc_name = att->value;"
    },
    {
        "line": 113,
        "fullcodeline": "parser->scene_es->ESID = parser->base_scene_id = esd->ESID;"
    },
    {
        "line": 117,
        "fullcodeline": "GF_StreamContext *sc = gf_sm_stream_new(parser->load->ctx, esd->ESID, esd->decoderConfig->streamType, esd->decoderConfig->objectTypeIndication);"
    },
    {
        "line": 123,
        "fullcodeline": "s_name = xmt_get_es_name(parser, esd->ESID);"
    },
    {
        "line": 18,
        "fullcodeline": "else if (!strcmp(name, \"esDescr\")) fake_desc = 1;"
    },
    {
        "line": 114,
        "fullcodeline": "parser->scene_es->timeScale = (esd->slConfig && esd->slConfig->timestampResolution) ? esd->slConfig->timestampResolution : 1000;"
    },
    {
        "line": 62,
        "fullcodeline": "else if (!strcmp(att->name, \"OCR_ES_ID\")) ocr_ref = att->value;"
    },
    {
        "line": 119,
        "fullcodeline": "if (sc) sc->timeScale = (esd->slConfig && esd->slConfig->timestampResolution) ? esd->slConfig->timestampResolution : 1000;"
    },
    {
        "line": 120,
        "fullcodeline": "if (!parser->base_scene_id && (esd->decoderConfig->streamType==GF_STREAM_SCENE)) parser->base_scene_id = esd->ESID;"
    },
    {
        "line": 124,
        "fullcodeline": "if (sc && s_name && !sc->name) sc->name = gf_strdup(s_name);"
    },
    {
        "line": 19,
        "fullcodeline": "else if (!strcmp(name, \"URL\")) fake_desc = 1;"
    },
    {
        "line": 63,
        "fullcodeline": "else if (!strcmp(att->name, \"dependsOn_ES_ID\")) dep_ref = att->value;"
    },
    {
        "line": 121,
        "fullcodeline": "else if (!parser->base_od_id && (esd->decoderConfig->streamType==GF_STREAM_OD)) parser->base_od_id = esd->ESID;"
    },
    {
        "line": 65,
        "fullcodeline": "e = gf_odf_set_field(desc, att->name, att->value);"
    },
    {
        "line": 66,
        "fullcodeline": "if (e) xmt_report(parser, e, \"Warning: %s not a valid attribute for descriptor %s\", att->name, name);"
    },
    {
        "line": 68,
        "fullcodeline": "if ((desc->tag==GF_ODF_MUXINFO_TAG) && (!stricmp(att->name, \"fileName\") || !stricmp(att->name, \"url\"))) {"
    },
    {
        "line": 69,
        "fullcodeline": "GF_MuxInfo *mux = (GF_MuxInfo *) desc;"
    },
    {
        "line": 71,
        "fullcodeline": "mux->src_url = gf_strdup(parser->load->src_url ? parser->load->src_url : parser->load->fileName);"
    }
]