[
    {
        "line": 3,
        "fullcodeline": "u32 i=0;"
    },
    {
        "line": 4,
        "fullcodeline": "XMT_ODLink *l, *to_del=NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "XMT_ESDLink *esdl, *esdl_del=NULL;"
    },
    {
        "line": 27,
        "fullcodeline": "i=0;"
    },
    {
        "line": 5,
        "fullcodeline": "while ((l = (XMT_ODLink*)gf_list_enum(parser->od_links, &i)) ) {"
    },
    {
        "line": 28,
        "fullcodeline": "while ((esdl = (XMT_ESDLink *)gf_list_enum(parser->esd_links, &i))) {"
    },
    {
        "line": 14,
        "fullcodeline": "i=0;"
    },
    {
        "line": 20,
        "fullcodeline": "gf_list_del_item(parser->od_links, to_del);"
    },
    {
        "line": 22,
        "fullcodeline": "gf_list_del(to_del->mf_urls);"
    },
    {
        "line": 23,
        "fullcodeline": "gf_free(to_del);"
    },
    {
        "line": 37,
        "fullcodeline": "gf_list_del_item(parser->esd_links, esdl_del);"
    },
    {
        "line": 39,
        "fullcodeline": "gf_free(esdl_del);"
    },
    {
        "line": 6,
        "fullcodeline": "if (l->od && l->od == (GF_ObjectDescriptor*)desc) {"
    },
    {
        "line": 16,
        "fullcodeline": "while ((subdesc = gf_list_enum(((GF_ObjectDescriptor*)desc)->ESDescriptors, &i))) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (esdl->esd && esdl->esd == (GF_ESD*)desc) {"
    },
    {
        "line": 7,
        "fullcodeline": "l->od = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "to_del = l;"
    },
    {
        "line": 21,
        "fullcodeline": "if (to_del->desc_name) gf_free(to_del->desc_name);"
    },
    {
        "line": 30,
        "fullcodeline": "esdl->esd = NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "esdl_del = esdl;"
    },
    {
        "line": 38,
        "fullcodeline": "if (esdl_del->desc_name) gf_free(esdl_del->desc_name);"
    },
    {
        "line": 17,
        "fullcodeline": "if (subdesc) xmt_remove_link_for_descriptor(parser, subdesc);"
    }
]