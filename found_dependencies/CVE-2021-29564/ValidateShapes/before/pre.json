[
    {
        "line": 6,
        "fullcodeline": "if (!TensorShapeUtils::IsMatrix(hypothesis_indices.shape()))"
    },
    {
        "line": 54,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 10,
        "fullcodeline": "if (!TensorShapeUtils::IsMatrix(truth_indices.shape()))"
    },
    {
        "line": 14,
        "fullcodeline": "if (!TensorShapeUtils::IsVector(hypothesis_values.shape()))"
    },
    {
        "line": 18,
        "fullcodeline": "if (!TensorShapeUtils::IsVector(truth_values.shape()))"
    },
    {
        "line": 22,
        "fullcodeline": "if (!TensorShapeUtils::IsVector(hypothesis_shape.shape()))"
    },
    {
        "line": 26,
        "fullcodeline": "if (!TensorShapeUtils::IsVector(truth_shape.shape()))"
    },
    {
        "line": 30,
        "fullcodeline": "if (hypothesis_shape.NumElements() != hypothesis_indices.dim_size(1))"
    },
    {
        "line": 36,
        "fullcodeline": "if (truth_shape.NumElements() < 2)"
    },
    {
        "line": 41,
        "fullcodeline": "if (truth_shape.NumElements() != truth_indices.dim_size(1))"
    },
    {
        "line": 47,
        "fullcodeline": "if (truth_shape.NumElements() != hypothesis_shape.NumElements())"
    },
    {
        "line": 7,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 11,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 15,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 19,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 23,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 27,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 31,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 37,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 42,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 48,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 9,
        "fullcodeline": "hypothesis_indices.shape().DebugString());"
    },
    {
        "line": 13,
        "fullcodeline": "truth_indices.shape().DebugString());"
    },
    {
        "line": 17,
        "fullcodeline": "hypothesis_values.shape().DebugString());"
    },
    {
        "line": 21,
        "fullcodeline": "truth_values.shape().DebugString());"
    },
    {
        "line": 25,
        "fullcodeline": "hypothesis_shape.shape().DebugString());"
    },
    {
        "line": 29,
        "fullcodeline": "truth_shape.shape().DebugString());"
    },
    {
        "line": 34,
        "fullcodeline": "hypothesis_shape.shape().DebugString(), \" and \","
    },
    {
        "line": 35,
        "fullcodeline": "hypothesis_indices.shape().DebugString());"
    },
    {
        "line": 40,
        "fullcodeline": "truth_shape.NumElements());"
    },
    {
        "line": 45,
        "fullcodeline": "truth_shape.shape().DebugString(), \" and \","
    },
    {
        "line": 46,
        "fullcodeline": "truth_indices.shape().DebugString());"
    },
    {
        "line": 51,
        "fullcodeline": "truth_shape.shape().DebugString(), \" and \","
    },
    {
        "line": 52,
        "fullcodeline": "hypothesis_shape.shape().DebugString());"
    }
]