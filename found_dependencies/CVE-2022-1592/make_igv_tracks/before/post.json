[
    {
        "line": 15,
        "fullcodeline": "display_obj = {}"
    },
    {
        "line": 16,
        "fullcodeline": "variant_obj = store.variant(document_id=variant_id)"
    },
    {
        "line": 36,
        "fullcodeline": "set_common_tracks(display_obj, build)"
    },
    {
        "line": 39,
        "fullcodeline": "grouped_cases = []"
    },
    {
        "line": 51,
        "fullcodeline": "set_sample_tracks(display_obj, grouped_cases, chromosome)"
    },
    {
        "line": 58,
        "fullcodeline": "set_cloud_public_tracks(display_obj, build)"
    },
    {
        "line": 60,
        "fullcodeline": "display_obj[\"display_center_guide\"] = True"
    },
    {
        "line": 30,
        "fullcodeline": "if \"38\" in str(case_obj.get(\"genome_build\", \"37\")) or chromosome == \"M\":"
    },
    {
        "line": 40,
        "fullcodeline": "for group in case_obj.get(\"group\", []):"
    },
    {
        "line": 46,
        "fullcodeline": "if not grouped_cases:  # Display case individuals tracks only"
    },
    {
        "line": 54,
        "fullcodeline": "if chrom != \"M\":"
    },
    {
        "line": 20,
        "fullcodeline": "start = start or variant_obj[\"position\"]"
    },
    {
        "line": 21,
        "fullcodeline": "stop = stop or variant_obj[\"end\"]"
    },
    {
        "line": 23,
        "fullcodeline": "chromosome = chrom or variant_obj.get(\"chromosome\")"
    },
    {
        "line": 24,
        "fullcodeline": "chromosome = chromosome.replace(\"MT\", \"M\")"
    },
    {
        "line": 25,
        "fullcodeline": "display_obj[\"locus\"] = \"chr{0}:{1}-{2}\".format(chromosome, start, stop)"
    },
    {
        "line": 27,
        "fullcodeline": "chromosome = \"All\""
    },
    {
        "line": 31,
        "fullcodeline": "build = \"38\""
    },
    {
        "line": 33,
        "fullcodeline": "build = \"37\""
    },
    {
        "line": 47,
        "fullcodeline": "case_append_alignments(case_obj)  # Add track data to main case dictionary"
    },
    {
        "line": 48,
        "fullcodeline": "grouped_cases.append(case_obj)"
    },
    {
        "line": 55,
        "fullcodeline": "set_case_specific_tracks(display_obj, case_obj)"
    },
    {
        "line": 41,
        "fullcodeline": "group_cases = list(store.cases(group=group))"
    },
    {
        "line": 42,
        "fullcodeline": "for case in group_cases:"
    },
    {
        "line": 43,
        "fullcodeline": "case_append_alignments(case)  # Add track data to connected case dictionary"
    },
    {
        "line": 44,
        "fullcodeline": "grouped_cases.append(case)"
    }
]