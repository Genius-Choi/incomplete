[
    {
        "line": 5,
        "fullcodeline": "char buf[OGS_ADDRSTRLEN];"
    },
    {
        "line": 7,
        "fullcodeline": "test_sess_t *sess = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "test_bearer_t *bearer = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "S1AP_SuccessfulOutcome_t *successfulOutcome = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "S1AP_HandoverCommand_t *HandoverCommand = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "S1AP_HandoverCommandIEs_t *ie = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "S1AP_MME_UE_S1AP_ID_t *MME_UE_S1AP_ID = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "S1AP_ENB_UE_S1AP_ID_t *ENB_UE_S1AP_ID = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "*E_RABSubjecttoDataForwardingList = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "ogs_assert(test_ue);"
    },
    {
        "line": 21,
        "fullcodeline": "ogs_assert(message);"
    },
    {
        "line": 24,
        "fullcodeline": "ogs_assert(successfulOutcome);"
    },
    {
        "line": 26,
        "fullcodeline": "ogs_assert(HandoverCommand);"
    },
    {
        "line": 28,
        "fullcodeline": "for (i = 0; i < HandoverCommand->protocolIEs.list.count; i++) {"
    },
    {
        "line": 52,
        "fullcodeline": "for (i = 0; i < E_RABSubjecttoDataForwardingList->list.count; i++) {"
    },
    {
        "line": 53,
        "fullcodeline": "S1AP_E_RABDataForwardingItemIEs_t *ie = NULL;"
    },
    {
        "line": 54,
        "fullcodeline": "S1AP_E_RABDataForwardingItem_t *e_rab = NULL;"
    },
    {
        "line": 58,
        "fullcodeline": "ogs_assert(ie);"
    },
    {
        "line": 61,
        "fullcodeline": "bearer = test_bearer_find_by_ue_ebi(test_ue, e_rab->e_RAB_ID);"
    },
    {
        "line": 62,
        "fullcodeline": "ogs_assert(bearer);"
    },
    {
        "line": 67,
        "fullcodeline": "bearer->handover.dl_teid = be32toh(bearer->handover.dl_teid);"
    },
    {
        "line": 70,
        "fullcodeline": "ogs_assert(OGS_OK =="
    },
    {
        "line": 78,
        "fullcodeline": "bearer->handover.ul_teid = be32toh(bearer->handover.ul_teid);"
    },
    {
        "line": 81,
        "fullcodeline": "ogs_assert(OGS_OK =="
    },
    {
        "line": 71,
        "fullcodeline": "ogs_asn_BIT_STRING_to_ip("
    },
    {
        "line": 82,
        "fullcodeline": "ogs_asn_BIT_STRING_to_ip("
    }
]