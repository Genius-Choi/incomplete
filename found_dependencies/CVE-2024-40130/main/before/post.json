[
    {
        "line": 19,
        "fullcodeline": "const char *argv_out[argc];"
    },
    {
        "line": 21,
        "fullcodeline": "memset(&optarg, 0, sizeof(optarg));"
    },
    {
        "line": 23,
        "fullcodeline": "ogs_getopt_init(&options, (char**)argv);"
    },
    {
        "line": 85,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "argv_out[i++] = argv[0];"
    },
    {
        "line": 105,
        "fullcodeline": "argv_out[i] = NULL;"
    },
    {
        "line": 107,
        "fullcodeline": "ogs_signal_init();"
    },
    {
        "line": 108,
        "fullcodeline": "ogs_setup_signal_thread();"
    },
    {
        "line": 110,
        "fullcodeline": "rv = ogs_app_initialize(OPEN5GS_VERSION, DEFAULT_CONFIG_FILENAME, argv_out);"
    },
    {
        "line": 119,
        "fullcodeline": "rv = app_initialize(argv_out);"
    },
    {
        "line": 128,
        "fullcodeline": "atexit(terminate);"
    },
    {
        "line": 129,
        "fullcodeline": "ogs_signal_thread(check_signal);"
    },
    {
        "line": 131,
        "fullcodeline": "ogs_info(\"Open5GS daemon terminating...\");"
    },
    {
        "line": 24,
        "fullcodeline": "while ((opt = ogs_getopt(&options, \"vhDc:l:e:m:dt\")) != -1) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (rv != OGS_OK) {"
    },
    {
        "line": 120,
        "fullcodeline": "if (rv != OGS_OK) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (optarg.enable_debug) optarg.log_level = (char*)\"debug\";"
    },
    {
        "line": 83,
        "fullcodeline": "if (optarg.enable_trace) optarg.log_level = (char*)\"trace\";"
    },
    {
        "line": 89,
        "fullcodeline": "argv_out[i++] = \"-c\";"
    },
    {
        "line": 90,
        "fullcodeline": "argv_out[i++] = optarg.config_file;"
    },
    {
        "line": 93,
        "fullcodeline": "argv_out[i++] = \"-l\";"
    },
    {
        "line": 94,
        "fullcodeline": "argv_out[i++] = optarg.log_file;"
    },
    {
        "line": 97,
        "fullcodeline": "argv_out[i++] = \"-e\";"
    },
    {
        "line": 98,
        "fullcodeline": "argv_out[i++] = optarg.log_level;"
    },
    {
        "line": 101,
        "fullcodeline": "argv_out[i++] = \"-m\";"
    },
    {
        "line": 102,
        "fullcodeline": "argv_out[i++] = optarg.domain_mask;"
    },
    {
        "line": 115,
        "fullcodeline": "ogs_fatal(\"Open5GS initialization failed. Aborted\");"
    },
    {
        "line": 124,
        "fullcodeline": "ogs_fatal(\"Open5GS initialization failed. Aborted\");"
    },
    {
        "line": 112,
        "fullcodeline": "if (rv == OGS_RETRY)"
    },
    {
        "line": 121,
        "fullcodeline": "if (rv == OGS_RETRY)"
    },
    {
        "line": 27,
        "fullcodeline": "show_version();"
    },
    {
        "line": 30,
        "fullcodeline": "show_help(argv[0]);"
    },
    {
        "line": 55,
        "fullcodeline": "optarg.config_file = options.optarg;"
    },
    {
        "line": 58,
        "fullcodeline": "optarg.log_file = options.optarg;"
    },
    {
        "line": 61,
        "fullcodeline": "optarg.log_level = options.optarg;"
    },
    {
        "line": 64,
        "fullcodeline": "optarg.domain_mask = options.optarg;"
    },
    {
        "line": 67,
        "fullcodeline": "optarg.enable_debug = true;"
    },
    {
        "line": 70,
        "fullcodeline": "optarg.enable_trace = true;"
    },
    {
        "line": 73,
        "fullcodeline": "fprintf(stderr, \"%s: %s\\n\", argv[0], options.errmsg);"
    },
    {
        "line": 74,
        "fullcodeline": "show_help(argv[0]);"
    },
    {
        "line": 77,
        "fullcodeline": "fprintf(stderr, \"%s: should not be reached\\n\", OGS_FUNC);"
    },
    {
        "line": 36,
        "fullcodeline": "pid = fork();"
    },
    {
        "line": 38,
        "fullcodeline": "ogs_assert(pid >= 0);"
    },
    {
        "line": 47,
        "fullcodeline": "setsid();"
    },
    {
        "line": 48,
        "fullcodeline": "umask(027);"
    },
    {
        "line": 40,
        "fullcodeline": "if (pid != 0)"
    }
]