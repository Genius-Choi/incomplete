[
    {
        "line": 17,
        "fullcodeline": "pubkey = sshpubkeys.SSHKey(public_key_str, strict=True)"
    },
    {
        "line": 36,
        "fullcodeline": "db_pubkey = PublicKey("
    },
    {
        "line": 53,
        "fullcodeline": "session.commit()"
    },
    {
        "line": 28,
        "fullcodeline": "if \"\\r\" in public_key_str or \"\\n\" in public_key_str:"
    },
    {
        "line": 20,
        "fullcodeline": "pubkey.parse()"
    },
    {
        "line": 29,
        "fullcodeline": "raise PublicKeyParseError(\"Public key cannot have newlines\")"
    },
    {
        "line": 47,
        "fullcodeline": "db_pubkey.add(session)"
    },
    {
        "line": 48,
        "fullcodeline": "Counter.incr(session, \"updates\")"
    },
    {
        "line": 32,
        "fullcodeline": "get_plugin_proxy().will_add_public_key(pubkey)"
    },
    {
        "line": 38,
        "fullcodeline": "public_key=pubkey.keydata.strip(),"
    },
    {
        "line": 39,
        "fullcodeline": "fingerprint=pubkey.hash_md5().replace(\"MD5:\", \"\"),"
    },
    {
        "line": 40,
        "fullcodeline": "fingerprint_sha256=pubkey.hash_sha256().replace(\"SHA256:\", \"\"),"
    },
    {
        "line": 22,
        "fullcodeline": "raise PublicKeyParseError(str(e))"
    },
    {
        "line": 34,
        "fullcodeline": "raise BadPublicKey(str(e))"
    },
    {
        "line": 50,
        "fullcodeline": "session.rollback()"
    },
    {
        "line": 51,
        "fullcodeline": "raise DuplicateKey()"
    }
]