[
    {
        "line": 7,
        "fullcodeline": "uint8_t flag = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "uint8_t type = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "bgp_size_t length = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "uint8_t seen[BGP_ATTR_BITMAP_SIZE];"
    },
    {
        "line": 16,
        "fullcodeline": "struct aspath *as4_path = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "as_t as4_aggregator = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "struct in_addr as4_aggregator_addr = {.s_addr = 0};"
    },
    {
        "line": 22,
        "fullcodeline": "memset(seen, 0, BGP_ATTR_BITMAP_SIZE);"
    },
    {
        "line": 25,
        "fullcodeline": "endp = BGP_INPUT_PNT(peer) + size;"
    },
    {
        "line": 397,
        "fullcodeline": "ret = bgp_attr_check(peer, attr, length);"
    },
    {
        "line": 436,
        "fullcodeline": "ret = BGP_ATTR_PARSE_PROCEED;"
    },
    {
        "line": 450,
        "fullcodeline": "aspath_unintern(&as4_path);"
    },
    {
        "line": 452,
        "fullcodeline": "transit = bgp_attr_get_transit(attr);"
    },
    {
        "line": 485,
        "fullcodeline": "transit = bgp_attr_get_transit(attr);"
    },
    {
        "line": 28,
        "fullcodeline": "while (BGP_INPUT_PNT(peer) < endp) {"
    },
    {
        "line": 360,
        "fullcodeline": "if (!attr->mp_nexthop_len || mp_update->safi != SAFI_LABELED_UNICAST)"
    },
    {
        "line": 364,
        "fullcodeline": "if (BGP_INPUT_PNT(peer) != endp) {"
    },
    {
        "line": 388,
        "fullcodeline": "if (CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_NEXT_HOP))"
    },
    {
        "line": 398,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 417,
        "fullcodeline": "if (CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_AS_PATH))"
    },
    {
        "line": 430,
        "fullcodeline": "if (attr->flag & (ATTR_FLAG_BIT(BGP_ATTR_AS_PATH))) {"
    },
    {
        "line": 459,
        "fullcodeline": "if (ret == BGP_ATTR_PARSE_PROCEED) {"
    },
    {
        "line": 29,
        "fullcodeline": "startp = BGP_INPUT_PNT(peer);"
    },
    {
        "line": 72,
        "fullcodeline": "flag = 0xF0 & stream_getc(BGP_INPUT(peer));"
    },
    {
        "line": 73,
        "fullcodeline": "type = stream_getc(BGP_INPUT(peer));"
    },
    {
        "line": 104,
        "fullcodeline": "attr_endp = BGP_INPUT_PNT(peer) + length;"
    },
    {
        "line": 212,
        "fullcodeline": "SET_BITMAP(seen, type);"
    },
    {
        "line": 214,
        "fullcodeline": "struct bgp_attr_parser_args attr_args = {"
    },
    {
        "line": 361,
        "fullcodeline": "attr->label_index = BGP_INVALID_LABEL_INDEX;"
    },
    {
        "line": 365,
        "fullcodeline": "flog_warn(EC_BGP_ATTRIBUTES_MISMATCH,"
    },
    {
        "line": 368,
        "fullcodeline": "bgp_notify_send(peer->connection, BGP_NOTIFY_UPDATE_ERR,"
    },
    {
        "line": 371,
        "fullcodeline": "ret = BGP_ATTR_PARSE_ERROR;"
    },
    {
        "line": 389,
        "fullcodeline": "&& !CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_REACH_NLRI))) {"
    },
    {
        "line": 418,
        "fullcodeline": "&& bgp_attr_munge_as4_attrs(peer, attr, as4_path, as4_aggregator,"
    },
    {
        "line": 420,
        "fullcodeline": "bgp_notify_send(peer->connection, BGP_NOTIFY_UPDATE_ERR,"
    },
    {
        "line": 422,
        "fullcodeline": "ret = BGP_ATTR_PARSE_ERROR;"
    },
    {
        "line": 431,
        "fullcodeline": "ret = bgp_attr_aspath_check(peer, attr);"
    },
    {
        "line": 487,
        "fullcodeline": "assert(transit->refcnt > 0);"
    },
    {
        "line": 489,
        "fullcodeline": "assert(attr->encap_subtlvs->refcnt > 0);"
    },
    {
        "line": 46,
        "fullcodeline": "if ((endp - startp) < BGP_ATTR_MIN_LEN) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN)"
    },
    {
        "line": 98,
        "fullcodeline": "if (CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN))"
    },
    {
        "line": 106,
        "fullcodeline": "if (attr_endp > endp) {"
    },
    {
        "line": 181,
        "fullcodeline": "if (CHECK_BITMAP(seen, type)) {"
    },
    {
        "line": 230,
        "fullcodeline": "if (bgp_attr_flag_invalid(&attr_args)) {"
    },
    {
        "line": 318,
        "fullcodeline": "if (ret == BGP_ATTR_PARSE_ERROR_NOTIFYPLS) {"
    },
    {
        "line": 325,
        "fullcodeline": "if (ret == BGP_ATTR_PARSE_ERROR) {"
    },
    {
        "line": 331,
        "fullcodeline": "if (ret == BGP_ATTR_PARSE_WITHDRAW) {"
    },
    {
        "line": 341,
        "fullcodeline": "if (BGP_INPUT_PNT(peer) != attr_endp) {"
    },
    {
        "line": 367,
        "fullcodeline": "lookup_msg(attr_str, type, NULL));"
    },
    {
        "line": 390,
        "fullcodeline": "if (bgp_attr_nexthop_valid(peer, attr) < 0) {"
    },
    {
        "line": 432,
        "fullcodeline": "if (ret != BGP_ATTR_PARSE_PROCEED)"
    },
    {
        "line": 481,
        "fullcodeline": "bgp_attr_flush_encap(attr);"
    },
    {
        "line": 48,
        "fullcodeline": "flog_warn("
    },
    {
        "line": 77,
        "fullcodeline": "&& ((endp - startp) < (BGP_ATTR_MIN_LEN + 1))) {"
    },
    {
        "line": 78,
        "fullcodeline": "flog_warn("
    },
    {
        "line": 99,
        "fullcodeline": "length = stream_getw(BGP_INPUT(peer));"
    },
    {
        "line": 107,
        "fullcodeline": "flog_warn("
    },
    {
        "line": 231,
        "fullcodeline": "ret = bgp_attr_malformed("
    },
    {
        "line": 236,
        "fullcodeline": "stream_forward_getp(BGP_INPUT(peer), endp - BGP_INPUT_PNT(peer));"
    },
    {
        "line": 243,
        "fullcodeline": "ret = bgp_attr_origin(&attr_args);"
    },
    {
        "line": 246,
        "fullcodeline": "ret = bgp_attr_aspath(&attr_args);"
    },
    {
        "line": 249,
        "fullcodeline": "ret = bgp_attr_as4_path(&attr_args, &as4_path);"
    },
    {
        "line": 252,
        "fullcodeline": "ret = bgp_attr_nexthop(&attr_args);"
    },
    {
        "line": 255,
        "fullcodeline": "ret = bgp_attr_med(&attr_args);"
    },
    {
        "line": 258,
        "fullcodeline": "ret = bgp_attr_local_pref(&attr_args);"
    },
    {
        "line": 261,
        "fullcodeline": "ret = bgp_attr_atomic(&attr_args);"
    },
    {
        "line": 264,
        "fullcodeline": "ret = bgp_attr_aggregator(&attr_args);"
    },
    {
        "line": 267,
        "fullcodeline": "ret = bgp_attr_as4_aggregator(&attr_args,"
    },
    {
        "line": 272,
        "fullcodeline": "ret = bgp_attr_community(&attr_args);"
    },
    {
        "line": 275,
        "fullcodeline": "ret = bgp_attr_large_community(&attr_args);"
    },
    {
        "line": 278,
        "fullcodeline": "ret = bgp_attr_originator_id(&attr_args);"
    },
    {
        "line": 281,
        "fullcodeline": "ret = bgp_attr_cluster_list(&attr_args);"
    },
    {
        "line": 284,
        "fullcodeline": "ret = bgp_mp_reach_parse(&attr_args, mp_update);"
    },
    {
        "line": 287,
        "fullcodeline": "ret = bgp_mp_unreach_parse(&attr_args, mp_withdraw);"
    },
    {
        "line": 290,
        "fullcodeline": "ret = bgp_attr_ext_communities(&attr_args);"
    },
    {
        "line": 296,
        "fullcodeline": "ret = bgp_attr_encap(&attr_args);"
    },
    {
        "line": 299,
        "fullcodeline": "ret = bgp_attr_prefix_sid(&attr_args);"
    },
    {
        "line": 302,
        "fullcodeline": "ret = bgp_attr_pmsi_tunnel(&attr_args);"
    },
    {
        "line": 305,
        "fullcodeline": "ret = bgp_attr_ipv6_ext_communities(&attr_args);"
    },
    {
        "line": 308,
        "fullcodeline": "ret = bgp_attr_otc(&attr_args);"
    },
    {
        "line": 311,
        "fullcodeline": "ret = bgp_attr_aigp(&attr_args);"
    },
    {
        "line": 314,
        "fullcodeline": "ret = bgp_attr_unknown(&attr_args);"
    },
    {
        "line": 319,
        "fullcodeline": "bgp_notify_send(peer->connection, BGP_NOTIFY_UPDATE_ERR,"
    },
    {
        "line": 321,
        "fullcodeline": "ret = BGP_ATTR_PARSE_ERROR;"
    },
    {
        "line": 326,
        "fullcodeline": "flog_warn(EC_BGP_ATTRIBUTE_PARSE_ERROR,"
    },
    {
        "line": 332,
        "fullcodeline": "flog_warn("
    },
    {
        "line": 336,
        "fullcodeline": "stream_forward_getp(BGP_INPUT(peer), endp - BGP_INPUT_PNT(peer));"
    },
    {
        "line": 342,
        "fullcodeline": "flog_warn(EC_BGP_ATTRIBUTE_FETCH_ERROR,"
    },
    {
        "line": 345,
        "fullcodeline": "bgp_notify_send(peer->connection, BGP_NOTIFY_UPDATE_ERR,"
    },
    {
        "line": 347,
        "fullcodeline": "ret = BGP_ATTR_PARSE_ERROR;"
    },
    {
        "line": 391,
        "fullcodeline": "ret = BGP_ATTR_PARSE_ERROR;"
    },
    {
        "line": 462,
        "fullcodeline": "bgp_attr_set_transit(attr, transit_intern(transit));"
    },
    {
        "line": 464,
        "fullcodeline": "attr->encap_subtlvs = encap_intern(attr->encap_subtlvs,"
    },
    {
        "line": 52,
        "fullcodeline": "(unsigned long)(endp"
    },
    {
        "line": 55,
        "fullcodeline": "if (peer->sort != BGP_PEER_EBGP) {"
    },
    {
        "line": 82,
        "fullcodeline": "(unsigned long)(endp"
    },
    {
        "line": 85,
        "fullcodeline": "if (peer->sort != BGP_PEER_EBGP) {"
    },
    {
        "line": 101,
        "fullcodeline": "length = stream_getc(BGP_INPUT(peer));"
    },
    {
        "line": 114,
        "fullcodeline": "if (peer->sort != BGP_PEER_EBGP) {"
    },
    {
        "line": 183,
        "fullcodeline": "if (peer->sort != BGP_PEER_EBGP ||"
    },
    {
        "line": 215,
        "fullcodeline": ".peer = peer,"
    },
    {
        "line": 216,
        "fullcodeline": ".length = length,"
    },
    {
        "line": 217,
        "fullcodeline": ".attr = attr,"
    },
    {
        "line": 218,
        "fullcodeline": ".type = type,"
    },
    {
        "line": 219,
        "fullcodeline": ".flags = flag,"
    },
    {
        "line": 220,
        "fullcodeline": ".startp = startp,"
    },
    {
        "line": 221,
        "fullcodeline": ".total = attr_endp - startp,"
    },
    {
        "line": 234,
        "fullcodeline": "if (ret == BGP_ATTR_PARSE_PROCEED)"
    },
    {
        "line": 328,
        "fullcodeline": "lookup_msg(attr_str, type, NULL));"
    },
    {
        "line": 335,
        "fullcodeline": "peer->host, lookup_msg(attr_str, type, NULL));"
    },
    {
        "line": 344,
        "fullcodeline": "peer->host, lookup_msg(attr_str, type, NULL));"
    },
    {
        "line": 477,
        "fullcodeline": "transit_free(transit);"
    },
    {
        "line": 478,
        "fullcodeline": "bgp_attr_set_transit(attr, NULL);"
    },
    {
        "line": 56,
        "fullcodeline": "bgp_notify_send(peer->connection,"
    },
    {
        "line": 59,
        "fullcodeline": "ret = BGP_ATTR_PARSE_ERROR;"
    },
    {
        "line": 86,
        "fullcodeline": "bgp_notify_send(peer->connection,"
    },
    {
        "line": 89,
        "fullcodeline": "ret = BGP_ATTR_PARSE_ERROR;"
    },
    {
        "line": 135,
        "fullcodeline": "unsigned char ndata[peer->max_packet_size];"
    },
    {
        "line": 137,
        "fullcodeline": "memset(ndata, 0x00, sizeof(ndata));"
    },
    {
        "line": 138,
        "fullcodeline": "size_t lfl ="
    },
    {
        "line": 141,
        "fullcodeline": "stream_rewind_getp(BGP_INPUT(peer), (1 + lfl));"
    },
    {
        "line": 143,
        "fullcodeline": "stream_get(&ndata[0], BGP_INPUT(peer), 1);"
    },
    {
        "line": 145,
        "fullcodeline": "stream_get(&ndata[1], BGP_INPUT(peer), lfl);"
    },
    {
        "line": 147,
        "fullcodeline": "size_t atl = attr_endp - startp;"
    },
    {
        "line": 148,
        "fullcodeline": "size_t ndl = MIN(atl, STREAM_READABLE(BGP_INPUT(peer)));"
    },
    {
        "line": 150,
        "fullcodeline": "stream_get(&ndata[lfl + 1], BGP_INPUT(peer), ndl);"
    },
    {
        "line": 152,
        "fullcodeline": "bgp_notify_send_with_data(peer->connection,"
    },
    {
        "line": 157,
        "fullcodeline": "ret = BGP_ATTR_PARSE_ERROR;"
    },
    {
        "line": 184,
        "fullcodeline": "type == BGP_ATTR_MP_REACH_NLRI || type == BGP_ATTR_MP_UNREACH_NLRI) {"
    },
    {
        "line": 185,
        "fullcodeline": "flog_warn("
    },
    {
        "line": 190,
        "fullcodeline": "bgp_notify_send(peer->connection,"
    },
    {
        "line": 193,
        "fullcodeline": "ret = BGP_ATTR_PARSE_ERROR;"
    },
    {
        "line": 53,
        "fullcodeline": "- stream_pnt(BGP_INPUT(peer))));"
    },
    {
        "line": 61,
        "fullcodeline": "ret = BGP_ATTR_PARSE_WITHDRAW;"
    },
    {
        "line": 83,
        "fullcodeline": "- stream_pnt(BGP_INPUT(peer))));"
    },
    {
        "line": 91,
        "fullcodeline": "ret = BGP_ATTR_PARSE_WITHDRAW;"
    },
    {
        "line": 139,
        "fullcodeline": "CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN) ? 2 : 1;"
    },
    {
        "line": 155,
        "fullcodeline": "ndata, ndl + lfl + 1);"
    },
    {
        "line": 164,
        "fullcodeline": "flog_warn("
    },
    {
        "line": 168,
        "fullcodeline": "ret = BGP_ATTR_PARSE_WITHDRAW;"
    },
    {
        "line": 169,
        "fullcodeline": "stream_forward_getp(BGP_INPUT(peer), endp - BGP_INPUT_PNT(peer));"
    },
    {
        "line": 196,
        "fullcodeline": "flog_warn("
    },
    {
        "line": 203,
        "fullcodeline": "stream_set_getp(BGP_INPUT(peer),"
    },
    {
        "line": 167,
        "fullcodeline": "peer->host, lookup_msg(attr_str, type, NULL));"
    },
    {
        "line": 204,
        "fullcodeline": "(startp - STREAM_DATA(BGP_INPUT(peer))) + (attr_endp - startp));"
    }
]