[
    {
        "line": 5,
        "fullcodeline": "if (dev == NULL) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (IS_ENABLED(CONFIG_ZONE_DMA) &&"
    },
    {
        "line": 13,
        "fullcodeline": "if (IS_ENABLED(CONFIG_DMA_CMA) && (flags & __GFP_WAIT)) {"
    },
    {
        "line": 6,
        "fullcodeline": "WARN_ONCE(1, \"Use an actual device structure for DMA allocation\\n\");"
    },
    {
        "line": 11,
        "fullcodeline": "dev->coherent_dma_mask <= DMA_BIT_MASK(32))"
    },
    {
        "line": 12,
        "fullcodeline": "flags |= GFP_DMA;"
    },
    {
        "line": 17,
        "fullcodeline": "size = PAGE_ALIGN(size);"
    },
    {
        "line": 18,
        "fullcodeline": "page = dma_alloc_from_contiguous(dev, size >> PAGE_SHIFT,"
    },
    {
        "line": 23,
        "fullcodeline": "*dma_handle = phys_to_dma(dev, page_to_phys(page));"
    },
    {
        "line": 24,
        "fullcodeline": "addr = page_address(page);"
    },
    {
        "line": 20,
        "fullcodeline": "if (!page)"
    },
    {
        "line": 25,
        "fullcodeline": "if (flags & __GFP_ZERO)"
    },
    {
        "line": 19,
        "fullcodeline": "get_order(size));"
    },
    {
        "line": 26,
        "fullcodeline": "memset(addr, 0, size);"
    },
    {
        "line": 29,
        "fullcodeline": "return swiotlb_alloc_coherent(dev, size, dma_handle, flags);"
    }
]