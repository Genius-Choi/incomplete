[
    {
        "line": 6,
        "fullcodeline": "const rpc_tensor * rpc_src = (const rpc_tensor *)input.data();"
    },
    {
        "line": 7,
        "fullcodeline": "const rpc_tensor * rpc_dst = (const rpc_tensor *)(input.data() + sizeof(rpc_src));"
    },
    {
        "line": 9,
        "fullcodeline": "struct ggml_init_params params {"
    },
    {
        "line": 14,
        "fullcodeline": "struct ggml_context * ctx = ggml_init(params);"
    },
    {
        "line": 15,
        "fullcodeline": "ggml_tensor * src = deserialize_tensor(ctx, rpc_src);"
    },
    {
        "line": 16,
        "fullcodeline": "ggml_tensor * dst = deserialize_tensor(ctx, rpc_dst);"
    },
    {
        "line": 22,
        "fullcodeline": "GGML_PRINT_DEBUG(\"[%s] src->buffer: %p, dst->buffer: %p\\n\", __func__, (void*)src->buffer, (void*)dst->buffer);"
    },
    {
        "line": 23,
        "fullcodeline": "bool result = ggml_backend_buffer_copy_tensor(src, dst);"
    },
    {
        "line": 25,
        "fullcodeline": "output.resize(1, 0);"
    },
    {
        "line": 26,
        "fullcodeline": "output[0] = result;"
    },
    {
        "line": 27,
        "fullcodeline": "ggml_free(ctx);"
    },
    {
        "line": 3,
        "fullcodeline": "if (input.size() != 2*sizeof(rpc_tensor)) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (src == nullptr || dst == nullptr) {"
    },
    {
        "line": 10,
        "fullcodeline": "/*.mem_size   =*/ 2*ggml_tensor_overhead(),"
    },
    {
        "line": 18,
        "fullcodeline": "GGML_PRINT_DEBUG(\"[%s] error deserializing tensors\\n\", __func__);"
    },
    {
        "line": 19,
        "fullcodeline": "ggml_free(ctx);"
    }
]