[
    {
        "line": 9,
        "fullcodeline": "BOOL guidNSCodec = FALSE;"
    },
    {
        "line": 10,
        "fullcodeline": "BOOL guidRemoteFx = FALSE;"
    },
    {
        "line": 11,
        "fullcodeline": "BOOL guidRemoteFxImage = FALSE;"
    },
    {
        "line": 16,
        "fullcodeline": "Stream_Read_UINT8(s, bitmapCodecCount); /* bitmapCodecCount (1 byte) */"
    },
    {
        "line": 17,
        "fullcodeline": "remainingLength = length - 5;"
    },
    {
        "line": 13,
        "fullcodeline": "if (length < 5)"
    },
    {
        "line": 19,
        "fullcodeline": "while (bitmapCodecCount > 0)"
    },
    {
        "line": 24,
        "fullcodeline": "rdp_read_bitmap_codec_guid(s, &codecGuid);    /* codecGuid (16 bytes) */"
    },
    {
        "line": 25,
        "fullcodeline": "Stream_Read_UINT8(s, codecId);                /* codecId (1 byte) */"
    },
    {
        "line": 26,
        "fullcodeline": "Stream_Read_UINT16(s, codecPropertiesLength); /* codecPropertiesLength (2 bytes) */"
    },
    {
        "line": 27,
        "fullcodeline": "remainingLength -= 19;"
    },
    {
        "line": 184,
        "fullcodeline": "bitmapCodecCount--;"
    },
    {
        "line": 21,
        "fullcodeline": "if (remainingLength < 19)"
    },
    {
        "line": 29,
        "fullcodeline": "if (remainingLength < codecPropertiesLength)"
    },
    {
        "line": 190,
        "fullcodeline": "settings->RemoteFxCodec = settings->RemoteFxCodec && guidRemoteFx;"
    },
    {
        "line": 191,
        "fullcodeline": "settings->RemoteFxImageCodec = settings->RemoteFxImageCodec && guidRemoteFxImage;"
    },
    {
        "line": 192,
        "fullcodeline": "settings->NSCodec = settings->NSCodec && guidNSCodec;"
    },
    {
        "line": 36,
        "fullcodeline": "beg = (UINT32)Stream_GetPosition(s);"
    },
    {
        "line": 37,
        "fullcodeline": "end = beg + codecPropertiesLength;"
    },
    {
        "line": 176,
        "fullcodeline": "remainingLength -= codecPropertiesLength;"
    },
    {
        "line": 39,
        "fullcodeline": "if (UuidEqual(&codecGuid, &CODEC_GUID_REMOTEFX, &rpc_status))"
    },
    {
        "line": 167,
        "fullcodeline": "if (Stream_GetPosition(s) != end)"
    },
    {
        "line": 180,
        "fullcodeline": "Stream_Seek(s, codecPropertiesLength); /* codecProperties */"
    },
    {
        "line": 181,
        "fullcodeline": "remainingLength -= codecPropertiesLength;"
    },
    {
        "line": 44,
        "fullcodeline": "guidRemoteFx = TRUE;"
    },
    {
        "line": 46,
        "fullcodeline": "Stream_Read_UINT32(s, rfxPropsLength); /* length (4 bytes) */"
    },
    {
        "line": 47,
        "fullcodeline": "Stream_Read_UINT32(s, captureFlags);   /* captureFlags (4 bytes) */"
    },
    {
        "line": 48,
        "fullcodeline": "Stream_Read_UINT32(s, rfxCapsLength);  /* capsLength (4 bytes) */"
    },
    {
        "line": 173,
        "fullcodeline": "Stream_SetPosition(s, end);"
    },
    {
        "line": 50,
        "fullcodeline": "settings->RemoteFxOnly = (captureFlags & CARDP_CAPS_CAPTURE_NON_CAC) ? TRUE : FALSE;"
    },
    {
        "line": 62,
        "fullcodeline": "Stream_Read_UINT16(s, blockType);  /* blockType (2 bytes) */"
    },
    {
        "line": 63,
        "fullcodeline": "Stream_Read_UINT32(s, blockLen);   /* blockLen (4 bytes) */"
    },
    {
        "line": 64,
        "fullcodeline": "Stream_Read_UINT16(s, numCapsets); /* numCapsets (2 bytes) */"
    },
    {
        "line": 76,
        "fullcodeline": "Stream_Read_UINT16(s, blockType);  /* blockType (2 bytes) */"
    },
    {
        "line": 77,
        "fullcodeline": "Stream_Read_UINT32(s, blockLen);   /* blockLen (4 bytes) */"
    },
    {
        "line": 78,
        "fullcodeline": "Stream_Read_UINT8(s, rfxCodecId);  /* codecId (1 byte) */"
    },
    {
        "line": 79,
        "fullcodeline": "Stream_Read_UINT16(s, capsetType); /* capsetType (2 bytes) */"
    },
    {
        "line": 80,
        "fullcodeline": "Stream_Read_UINT16(s, numIcaps);   /* numIcaps (2 bytes) */"
    },
    {
        "line": 81,
        "fullcodeline": "Stream_Read_UINT16(s, icapLen);    /* icapLen (2 bytes) */"
    },
    {
        "line": 131,
        "fullcodeline": "else if (UuidEqual(&codecGuid, &CODEC_GUID_IMAGE_REMOTEFX, &rpc_status))"
    },
    {
        "line": 66,
        "fullcodeline": "if (blockType != 0xCBC0)"
    },
    {
        "line": 69,
        "fullcodeline": "if (blockLen != 8)"
    },
    {
        "line": 72,
        "fullcodeline": "if (numCapsets != 1)"
    },
    {
        "line": 83,
        "fullcodeline": "if (blockType != 0xCBC1)"
    },
    {
        "line": 86,
        "fullcodeline": "if (rfxCodecId != 1)"
    },
    {
        "line": 89,
        "fullcodeline": "if (capsetType != 0xCFC0)"
    },
    {
        "line": 92,
        "fullcodeline": "while (numIcaps--)"
    },
    {
        "line": 134,
        "fullcodeline": "guidRemoteFxImage = TRUE;"
    },
    {
        "line": 135,
        "fullcodeline": "Stream_Seek(s, codecPropertiesLength); /* codecProperties */"
    },
    {
        "line": 101,
        "fullcodeline": "Stream_Read_UINT16(s, version);      /* version (2 bytes) */"
    },
    {
        "line": 102,
        "fullcodeline": "Stream_Read_UINT16(s, tileSize);     /* tileSize (2 bytes) */"
    },
    {
        "line": 103,
        "fullcodeline": "Stream_Read_UINT8(s, codecFlags);    /* flags (1 byte) */"
    },
    {
        "line": 104,
        "fullcodeline": "Stream_Read_UINT8(s, colConvBits);   /* colConvBits (1 byte) */"
    },
    {
        "line": 105,
        "fullcodeline": "Stream_Read_UINT8(s, transformBits); /* transformBits (1 byte) */"
    },
    {
        "line": 106,
        "fullcodeline": "Stream_Read_UINT8(s, entropyBits);   /* entropyBits (1 byte) */"
    },
    {
        "line": 108,
        "fullcodeline": "if (version == 0x0009)"
    },
    {
        "line": 123,
        "fullcodeline": "if (colConvBits != 1)"
    },
    {
        "line": 126,
        "fullcodeline": "if (transformBits != 1)"
    },
    {
        "line": 137,
        "fullcodeline": "else if (UuidEqual(&codecGuid, &CODEC_GUID_NSCODEC, &rpc_status))"
    },
    {
        "line": 142,
        "fullcodeline": "guidNSCodec = TRUE;"
    },
    {
        "line": 144,
        "fullcodeline": "Stream_Read_UINT8(s, fAllowDynamicFidelity); /* fAllowDynamicFidelity (1 byte) */"
    },
    {
        "line": 145,
        "fullcodeline": "Stream_Read_UINT8(s, fAllowSubsampling);     /* fAllowSubsampling (1 byte) */"
    },
    {
        "line": 146,
        "fullcodeline": "Stream_Read_UINT8(s, colorLossLevel);        /* colorLossLevel (1 byte) */"
    },
    {
        "line": 111,
        "fullcodeline": "if (tileSize != 0x0080)"
    },
    {
        "line": 148,
        "fullcodeline": "if (colorLossLevel < 1)"
    },
    {
        "line": 151,
        "fullcodeline": "if (colorLossLevel > 7)"
    },
    {
        "line": 114,
        "fullcodeline": "else if (version == 0x0100)"
    },
    {
        "line": 149,
        "fullcodeline": "colorLossLevel = 1;"
    },
    {
        "line": 152,
        "fullcodeline": "colorLossLevel = 7;"
    },
    {
        "line": 158,
        "fullcodeline": "else if (UuidEqual(&codecGuid, &CODEC_GUID_IGNORE, &rpc_status))"
    },
    {
        "line": 160,
        "fullcodeline": "Stream_Seek(s, codecPropertiesLength); /* codecProperties */"
    },
    {
        "line": 117,
        "fullcodeline": "if (tileSize != 0x0040)"
    },
    {
        "line": 164,
        "fullcodeline": "Stream_Seek(s, codecPropertiesLength); /* codecProperties */"
    }
]