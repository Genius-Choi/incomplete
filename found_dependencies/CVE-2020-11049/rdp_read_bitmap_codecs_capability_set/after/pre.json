[
    {
        "line": 9,
        "fullcodeline": "BOOL guidNSCodec = FALSE;"
    },
    {
        "line": 10,
        "fullcodeline": "BOOL guidRemoteFx = FALSE;"
    },
    {
        "line": 11,
        "fullcodeline": "BOOL guidRemoteFxImage = FALSE;"
    },
    {
        "line": 16,
        "fullcodeline": "Stream_Read_UINT8(s, bitmapCodecCount); /* bitmapCodecCount (1 byte) */"
    },
    {
        "line": 13,
        "fullcodeline": "if (Stream_GetRemainingLength(s) < 1)"
    },
    {
        "line": 18,
        "fullcodeline": "while (bitmapCodecCount > 0)"
    },
    {
        "line": 26,
        "fullcodeline": "Stream_Read_UINT8(s, codecId);                /* codecId (1 byte) */"
    },
    {
        "line": 27,
        "fullcodeline": "Stream_Read_UINT16(s, codecPropertiesLength); /* codecPropertiesLength (2 bytes) */"
    },
    {
        "line": 29,
        "fullcodeline": "Stream_StaticInit(&sub, Stream_Pointer(s), codecPropertiesLength);"
    },
    {
        "line": 180,
        "fullcodeline": "rest = Stream_GetRemainingLength(&sub);"
    },
    {
        "line": 188,
        "fullcodeline": "bitmapCodecCount--;"
    },
    {
        "line": 194,
        "fullcodeline": "settings->RemoteFxCodec = settings->RemoteFxCodec && guidRemoteFx;"
    },
    {
        "line": 195,
        "fullcodeline": "settings->RemoteFxImageCodec = settings->RemoteFxImageCodec && guidRemoteFxImage;"
    },
    {
        "line": 196,
        "fullcodeline": "settings->NSCodec = settings->NSCodec && guidNSCodec;"
    },
    {
        "line": 22,
        "fullcodeline": "if (!rdp_read_bitmap_codec_guid(s, &codecGuid)) /* codecGuid (16 bytes) */"
    },
    {
        "line": 24,
        "fullcodeline": "if (Stream_GetRemainingLength(s) < 3)"
    },
    {
        "line": 30,
        "fullcodeline": "if (!Stream_SafeSeek(s, codecPropertiesLength))"
    },
    {
        "line": 35,
        "fullcodeline": "if (UuidEqual(&codecGuid, &CODEC_GUID_REMOTEFX, &rpc_status))"
    },
    {
        "line": 40,
        "fullcodeline": "guidRemoteFx = TRUE;"
    },
    {
        "line": 44,
        "fullcodeline": "Stream_Read_UINT32(&sub, rfxPropsLength); /* length (4 bytes) */"
    },
    {
        "line": 45,
        "fullcodeline": "Stream_Read_UINT32(&sub, captureFlags);   /* captureFlags (4 bytes) */"
    },
    {
        "line": 46,
        "fullcodeline": "Stream_Read_UINT32(&sub, rfxCapsLength);  /* capsLength (4 bytes) */"
    },
    {
        "line": 176,
        "fullcodeline": "if (!Stream_SafeSeek(&sub, codecPropertiesLength)) /* codecProperties */"
    },
    {
        "line": 42,
        "fullcodeline": "if (Stream_GetRemainingLength(&sub) < 12)"
    },
    {
        "line": 48,
        "fullcodeline": "settings->RemoteFxOnly = (captureFlags & CARDP_CAPS_CAPTURE_NON_CAC) ? TRUE : FALSE;"
    },
    {
        "line": 62,
        "fullcodeline": "Stream_Read_UINT16(&sub, blockType);  /* blockType (2 bytes) */"
    },
    {
        "line": 63,
        "fullcodeline": "Stream_Read_UINT32(&sub, blockLen);   /* blockLen (4 bytes) */"
    },
    {
        "line": 64,
        "fullcodeline": "Stream_Read_UINT16(&sub, numCapsets); /* numCapsets (2 bytes) */"
    },
    {
        "line": 76,
        "fullcodeline": "Stream_Read_UINT16(&sub, blockType);  /* blockType (2 bytes) */"
    },
    {
        "line": 77,
        "fullcodeline": "Stream_Read_UINT32(&sub, blockLen);   /* blockLen (4 bytes) */"
    },
    {
        "line": 78,
        "fullcodeline": "Stream_Read_UINT8(&sub, rfxCodecId);  /* codecId (1 byte) */"
    },
    {
        "line": 79,
        "fullcodeline": "Stream_Read_UINT16(&sub, capsetType); /* capsetType (2 bytes) */"
    },
    {
        "line": 80,
        "fullcodeline": "Stream_Read_UINT16(&sub, numIcaps);   /* numIcaps (2 bytes) */"
    },
    {
        "line": 81,
        "fullcodeline": "Stream_Read_UINT16(&sub, icapLen);    /* icapLen (2 bytes) */"
    },
    {
        "line": 133,
        "fullcodeline": "else if (UuidEqual(&codecGuid, &CODEC_GUID_IMAGE_REMOTEFX, &rpc_status))"
    },
    {
        "line": 66,
        "fullcodeline": "if (blockType != 0xCBC0)"
    },
    {
        "line": 69,
        "fullcodeline": "if (blockLen != 8)"
    },
    {
        "line": 72,
        "fullcodeline": "if (numCapsets != 1)"
    },
    {
        "line": 83,
        "fullcodeline": "if (blockType != 0xCBC1)"
    },
    {
        "line": 86,
        "fullcodeline": "if (rfxCodecId != 1)"
    },
    {
        "line": 89,
        "fullcodeline": "if (capsetType != 0xCFC0)"
    },
    {
        "line": 92,
        "fullcodeline": "while (numIcaps--)"
    },
    {
        "line": 136,
        "fullcodeline": "guidRemoteFxImage = TRUE;"
    },
    {
        "line": 60,
        "fullcodeline": "if (Stream_GetRemainingLength(&sub) < 21)"
    },
    {
        "line": 103,
        "fullcodeline": "Stream_Read_UINT16(&sub, version);      /* version (2 bytes) */"
    },
    {
        "line": 104,
        "fullcodeline": "Stream_Read_UINT16(&sub, tileSize);     /* tileSize (2 bytes) */"
    },
    {
        "line": 105,
        "fullcodeline": "Stream_Read_UINT8(&sub, codecFlags);    /* flags (1 byte) */"
    },
    {
        "line": 106,
        "fullcodeline": "Stream_Read_UINT8(&sub, colConvBits);   /* colConvBits (1 byte) */"
    },
    {
        "line": 107,
        "fullcodeline": "Stream_Read_UINT8(&sub, transformBits); /* transformBits (1 byte) */"
    },
    {
        "line": 108,
        "fullcodeline": "Stream_Read_UINT8(&sub, entropyBits);   /* entropyBits (1 byte) */"
    },
    {
        "line": 110,
        "fullcodeline": "if (version == 0x0009)"
    },
    {
        "line": 125,
        "fullcodeline": "if (colConvBits != 1)"
    },
    {
        "line": 128,
        "fullcodeline": "if (transformBits != 1)"
    },
    {
        "line": 137,
        "fullcodeline": "if (!Stream_SafeSeek(&sub, codecPropertiesLength)) /* codecProperties */"
    },
    {
        "line": 140,
        "fullcodeline": "else if (UuidEqual(&codecGuid, &CODEC_GUID_NSCODEC, &rpc_status))"
    },
    {
        "line": 101,
        "fullcodeline": "if (Stream_GetRemainingLength(&sub) < 8)"
    },
    {
        "line": 145,
        "fullcodeline": "guidNSCodec = TRUE;"
    },
    {
        "line": 149,
        "fullcodeline": "Stream_Read_UINT8(&sub, fAllowDynamicFidelity); /* fAllowDynamicFidelity (1 byte) */"
    },
    {
        "line": 150,
        "fullcodeline": "Stream_Read_UINT8(&sub, fAllowSubsampling);     /* fAllowSubsampling (1 byte) */"
    },
    {
        "line": 151,
        "fullcodeline": "Stream_Read_UINT8(&sub, colorLossLevel);        /* colorLossLevel (1 byte) */"
    },
    {
        "line": 113,
        "fullcodeline": "if (tileSize != 0x0080)"
    },
    {
        "line": 153,
        "fullcodeline": "if (colorLossLevel < 1)"
    },
    {
        "line": 156,
        "fullcodeline": "if (colorLossLevel > 7)"
    },
    {
        "line": 116,
        "fullcodeline": "else if (version == 0x0100)"
    },
    {
        "line": 147,
        "fullcodeline": "if (Stream_GetRemainingLength(&sub) < 3)"
    },
    {
        "line": 154,
        "fullcodeline": "colorLossLevel = 1;"
    },
    {
        "line": 157,
        "fullcodeline": "colorLossLevel = 7;"
    },
    {
        "line": 163,
        "fullcodeline": "else if (UuidEqual(&codecGuid, &CODEC_GUID_IGNORE, &rpc_status))"
    },
    {
        "line": 119,
        "fullcodeline": "if (tileSize != 0x0040)"
    },
    {
        "line": 165,
        "fullcodeline": "if (!Stream_SafeSeek(&sub, codecPropertiesLength)) /* codecProperties */"
    },
    {
        "line": 170,
        "fullcodeline": "if (!Stream_SafeSeek(&sub, codecPropertiesLength)) /* codecProperties */"
    }
]