[
    {
        "line": 2,
        "fullcodeline": "(void)data_total;"
    },
    {
        "line": 4,
        "fullcodeline": "char constr1[40], constr2[40], *arStr = \"\";"
    },
    {
        "line": 17,
        "fullcodeline": "tokenAddress = (uint8_t *)(msg->data_initial_chunk.bytes + 4 + 32 - 20);"
    },
    {
        "line": 18,
        "fullcodeline": "token = tokenByChainAddress(msg->chain_id, tokenAddress);"
    },
    {
        "line": 19,
        "fullcodeline": "bn_from_bytes(msg->data_initial_chunk.bytes + 4 + 32, 32, &tokenAmount);"
    },
    {
        "line": 20,
        "fullcodeline": "bn_from_bytes(msg->data_initial_chunk.bytes + 4 + 2*32, 32, &tokenMinAmount);"
    },
    {
        "line": 21,
        "fullcodeline": "bn_from_bytes(msg->data_initial_chunk.bytes + 4 + 3*32, 32, &ethMinAmount);"
    },
    {
        "line": 22,
        "fullcodeline": "deadlineBytes = (uint8_t *)(msg->data_initial_chunk.bytes + 4 + 6*32 - 8);"
    },
    {
        "line": 23,
        "fullcodeline": "deadline = ((uint64_t)deadlineBytes[0] << 8*7) |"
    },
    {
        "line": 33,
        "fullcodeline": "ethereumFormatAmount(&tokenAmount, token, msg->chain_id, tokbuf, sizeof(tokbuf));"
    },
    {
        "line": 34,
        "fullcodeline": "snprintf(constr1, 32, \"%s\", tokbuf);"
    },
    {
        "line": 35,
        "fullcodeline": "ethereumFormatAmount(&tokenMinAmount, token, msg->chain_id, tokbuf, sizeof(tokbuf));"
    },
    {
        "line": 36,
        "fullcodeline": "snprintf(constr2, 32, \"%s\", tokbuf);"
    },
    {
        "line": 37,
        "fullcodeline": "confirm(ButtonRequestType_ButtonRequest_ConfirmOutput, arStr,"
    },
    {
        "line": 43,
        "fullcodeline": "ethereumFormatAmount(&ethMinAmount, NULL, msg->chain_id, tokbuf, sizeof(tokbuf));"
    },
    {
        "line": 44,
        "fullcodeline": "snprintf(constr1, 32, \"%s\", tokbuf);"
    },
    {
        "line": 45,
        "fullcodeline": "confirm(ButtonRequestType_ButtonRequest_ConfirmOutput, arStr,"
    },
    {
        "line": 9,
        "fullcodeline": "if (isAddLiquidityEthCall(msg)) {"
    },
    {
        "line": 32,
        "fullcodeline": "char tokbuf[32];"
    },
    {
        "line": 10,
        "fullcodeline": "arStr = \"uniswap add liquidity\";"
    },
    {
        "line": 39,
        "fullcodeline": "if (!confirmFromAccountMatch(msg, arStr)) {"
    },
    {
        "line": 29,
        "fullcodeline": "((uint64_t)deadlineBytes[6] << 8*1) |"
    },
    {
        "line": 11,
        "fullcodeline": "} else if (isRemoveLiquidityEthCall(msg)) {"
    },
    {
        "line": 28,
        "fullcodeline": "((uint64_t)deadlineBytes[5] << 8*2) |"
    },
    {
        "line": 12,
        "fullcodeline": "arStr = \"uniswap remove liquidity\";"
    },
    {
        "line": 27,
        "fullcodeline": "((uint64_t)deadlineBytes[4] << 8*3) |"
    },
    {
        "line": 26,
        "fullcodeline": "((uint64_t)deadlineBytes[3] << 8*4) |"
    },
    {
        "line": 25,
        "fullcodeline": "((uint64_t)deadlineBytes[2] << 8*5) |"
    },
    {
        "line": 24,
        "fullcodeline": "((uint64_t)deadlineBytes[1] << 8*6) |"
    }
]