[
    {
        "line": 4,
        "fullcodeline": "double scale_f_d = 1.0;"
    },
    {
        "line": 5,
        "fullcodeline": "const double filter_width_d = DEFAULT_BOX_RADIUS;"
    },
    {
        "line": 17,
        "fullcodeline": "windows_size = 2 * (int)ceil(width_d) + 1;"
    },
    {
        "line": 18,
        "fullcodeline": "res = _gdContributionsAlloc(line_size, windows_size);"
    },
    {
        "line": 10,
        "fullcodeline": "if (scale_d < 1.0) {"
    },
    {
        "line": 20,
        "fullcodeline": "for (u = 0; u < line_size; u++) {"
    },
    {
        "line": 11,
        "fullcodeline": "width_d = filter_width_d / scale_d;"
    },
    {
        "line": 12,
        "fullcodeline": "scale_f_d = scale_d;"
    },
    {
        "line": 21,
        "fullcodeline": "const double dCenter = (double)u / scale_d;"
    },
    {
        "line": 23,
        "fullcodeline": "register int iLeft = MAX(0, (int)floor (dCenter - width_d));"
    },
    {
        "line": 24,
        "fullcodeline": "int iRight = MIN((int)ceil(dCenter + width_d), (int)src_size - 1);"
    },
    {
        "line": 25,
        "fullcodeline": "double dTotalWeight = 0.0;"
    },
    {
        "line": 28,
        "fullcodeline": "res->ContribRow[u].Left = iLeft;"
    },
    {
        "line": 29,
        "fullcodeline": "res->ContribRow[u].Right = iRight;"
    },
    {
        "line": 14,
        "fullcodeline": "width_d= filter_width_d;"
    },
    {
        "line": 32,
        "fullcodeline": "if (iRight - iLeft + 1 > windows_size)  {"
    },
    {
        "line": 40,
        "fullcodeline": "for (iSrc = iLeft; iSrc <= iRight; iSrc++) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (dTotalWeight < 0.0) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (dTotalWeight > 0.0) {"
    },
    {
        "line": 41,
        "fullcodeline": "dTotalWeight += (res->ContribRow[u].Weights[iSrc-iLeft] =  scale_f_d * (*pFilter)(scale_f_d * (dCenter - (double)iSrc)));"
    },
    {
        "line": 45,
        "fullcodeline": "_gdContributionsFree(res);"
    },
    {
        "line": 33,
        "fullcodeline": "if (iLeft < ((int)src_size - 1 / 2))  {"
    },
    {
        "line": 50,
        "fullcodeline": "for (iSrc = iLeft; iSrc <= iRight; iSrc++) {"
    },
    {
        "line": 34,
        "fullcodeline": "iLeft++;"
    },
    {
        "line": 51,
        "fullcodeline": "res->ContribRow[u].Weights[iSrc-iLeft] /= dTotalWeight;"
    },
    {
        "line": 36,
        "fullcodeline": "iRight--;"
    }
]