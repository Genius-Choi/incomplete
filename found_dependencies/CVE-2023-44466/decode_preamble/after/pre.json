[
    {
        "line": 3,
        "fullcodeline": "void *crcp = p + CEPH_PREAMBLE_LEN - CEPH_CRC_LEN;"
    },
    {
        "line": 7,
        "fullcodeline": "crc = crc32c(0, p, crcp - p);"
    },
    {
        "line": 8,
        "fullcodeline": "expected_crc = get_unaligned_le32(crcp);"
    },
    {
        "line": 15,
        "fullcodeline": "memset(desc, 0, sizeof(*desc));"
    },
    {
        "line": 18,
        "fullcodeline": "desc->fd_seg_cnt = ceph_decode_8(&p);"
    },
    {
        "line": 9,
        "fullcodeline": "if (crc != expected_crc) {"
    },
    {
        "line": 17,
        "fullcodeline": "desc->fd_tag = ceph_decode_8(&p);"
    },
    {
        "line": 24,
        "fullcodeline": "for (i = 0; i < desc->fd_seg_cnt; i++) {"
    },
    {
        "line": 10,
        "fullcodeline": "pr_err(\"bad preamble crc, calculated %u, expected %u\\n\","
    },
    {
        "line": 19,
        "fullcodeline": "if (desc->fd_seg_cnt < 1 ||"
    },
    {
        "line": 20,
        "fullcodeline": "desc->fd_seg_cnt > CEPH_FRAME_MAX_SEGMENT_COUNT) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (desc->fd_lens[0] < 0 ||"
    },
    {
        "line": 30,
        "fullcodeline": "desc->fd_lens[0] > CEPH_MSG_MAX_CONTROL_LEN) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (desc->fd_lens[1] < 0 ||"
    },
    {
        "line": 35,
        "fullcodeline": "desc->fd_lens[1] > CEPH_MSG_MAX_FRONT_LEN) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (desc->fd_lens[2] < 0 ||"
    },
    {
        "line": 40,
        "fullcodeline": "desc->fd_lens[2] > CEPH_MSG_MAX_MIDDLE_LEN) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (desc->fd_lens[3] < 0 ||"
    },
    {
        "line": 45,
        "fullcodeline": "desc->fd_lens[3] > CEPH_MSG_MAX_DATA_LEN) {"
    },
    {
        "line": 12,
        "fullcodeline": "return -EBADMSG;"
    },
    {
        "line": 22,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 25,
        "fullcodeline": "desc->fd_lens[i] = ceph_decode_32(&p);"
    },
    {
        "line": 26,
        "fullcodeline": "desc->fd_aligns[i] = ceph_decode_16(&p);"
    },
    {
        "line": 32,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 37,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 42,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 47,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 54,
        "fullcodeline": "if (!desc->fd_lens[desc->fd_seg_cnt - 1]) {"
    },
    {
        "line": 57,
        "fullcodeline": "return -EINVAL;"
    }
]