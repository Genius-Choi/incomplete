[
    {
        "line": 2,
        "fullcodeline": "RedisModule_AutoMemory(ctx);"
    },
    {
        "line": 13,
        "fullcodeline": "RedisModuleKey *key = RedisModule_OpenKey(ctx, argv[1], REDISMODULE_READ);"
    },
    {
        "line": 15,
        "fullcodeline": "int status = cfGetFilter(key, &cf);"
    },
    {
        "line": 20,
        "fullcodeline": "RedisModule_ReplyWithArray(ctx, 2);"
    },
    {
        "line": 36,
        "fullcodeline": "size_t chunkLen = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "const char *chunk = CF_GetEncodedChunk(cf, &pos, &chunkLen, MAX_SCANDUMP_SIZE);"
    },
    {
        "line": 4,
        "fullcodeline": "if (argc != 3) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (RedisModule_StringToLongLong(argv[2], &pos) != REDISMODULE_OK || pos < 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (status != SB_OK) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (!cf->numItems) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (pos == 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (chunk == NULL) {"
    },
    {
        "line": 22,
        "fullcodeline": "RedisModule_ReplyWithLongLong(ctx, 0);"
    },
    {
        "line": 23,
        "fullcodeline": "RedisModule_ReplyWithNull(ctx);"
    },
    {
        "line": 30,
        "fullcodeline": "fillCFHeader(&header, cf);"
    },
    {
        "line": 31,
        "fullcodeline": "RedisModule_ReplyWithLongLong(ctx, 1);"
    },
    {
        "line": 32,
        "fullcodeline": "RedisModule_ReplyWithStringBuffer(ctx, (const char *)&header, sizeof header);"
    },
    {
        "line": 39,
        "fullcodeline": "RedisModule_ReplyWithLongLong(ctx, 0);"
    },
    {
        "line": 40,
        "fullcodeline": "RedisModule_ReplyWithNull(ctx);"
    },
    {
        "line": 5,
        "fullcodeline": "return RedisModule_WrongArity(ctx);"
    },
    {
        "line": 10,
        "fullcodeline": "return RedisModule_ReplyWithError(ctx, \"Invalid position\");"
    },
    {
        "line": 17,
        "fullcodeline": "return RedisModule_ReplyWithError(ctx, statusStrerror(status));"
    },
    {
        "line": 42,
        "fullcodeline": "RedisModule_ReplyWithLongLong(ctx, pos);"
    },
    {
        "line": 43,
        "fullcodeline": "RedisModule_ReplyWithStringBuffer(ctx, chunk, chunkLen);"
    }
]