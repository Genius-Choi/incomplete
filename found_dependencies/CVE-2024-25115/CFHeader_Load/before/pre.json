[
    {
        "line": 2,
        "fullcodeline": "CuckooFilter *filter = RedisModule_Calloc(1, sizeof(*filter));"
    },
    {
        "line": 3,
        "fullcodeline": "filter->numBuckets = header->numBuckets;"
    },
    {
        "line": 4,
        "fullcodeline": "filter->numFilters = header->numFilters;"
    },
    {
        "line": 5,
        "fullcodeline": "filter->numItems = header->numItems;"
    },
    {
        "line": 6,
        "fullcodeline": "filter->numDeletes = header->numDeletes;"
    },
    {
        "line": 7,
        "fullcodeline": "filter->bucketSize = header->bucketSize;"
    },
    {
        "line": 8,
        "fullcodeline": "filter->maxIterations = header->maxIterations;"
    },
    {
        "line": 9,
        "fullcodeline": "filter->expansion = header->expansion;"
    },
    {
        "line": 10,
        "fullcodeline": "filter->filters = RedisModule_Alloc(sizeof(*filter->filters) * header->numFilters);"
    },
    {
        "line": 11,
        "fullcodeline": "for (size_t ii = 0; ii < filter->numFilters; ++ii) {"
    },
    {
        "line": 12,
        "fullcodeline": "SubCF *cur = filter->filters + ii;"
    },
    {
        "line": 13,
        "fullcodeline": "cur->bucketSize = header->bucketSize;"
    },
    {
        "line": 14,
        "fullcodeline": "cur->numBuckets = filter->numBuckets * pow(filter->expansion, ii);"
    },
    {
        "line": 15,
        "fullcodeline": "cur->data ="
    },
    {
        "line": 16,
        "fullcodeline": "RedisModule_Calloc((size_t)cur->numBuckets * filter->bucketSize, sizeof(CuckooBucket));"
    }
]