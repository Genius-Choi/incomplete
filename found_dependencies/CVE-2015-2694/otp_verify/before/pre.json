[
    {
        "line": 7,
        "fullcodeline": "krb5_keyblock *armor_key = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "krb5_pa_otp_req *req = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "enc_tkt_reply->flags |= TKT_FLG_PRE_AUTH;"
    },
    {
        "line": 17,
        "fullcodeline": "armor_key = cb->fast_armor(context, rock);"
    },
    {
        "line": 25,
        "fullcodeline": "d = make_data(pa->contents, pa->length);"
    },
    {
        "line": 26,
        "fullcodeline": "retval = decode_krb5_pa_otp_req(&d, &req);"
    },
    {
        "line": 33,
        "fullcodeline": "retval = decrypt_encdata(context, armor_key, req, &plaintext);"
    },
    {
        "line": 40,
        "fullcodeline": "retval = nonce_verify(context, armor_key, &plaintext);"
    },
    {
        "line": 43,
        "fullcodeline": "krb5_free_data_contents(context, &plaintext);"
    },
    {
        "line": 50,
        "fullcodeline": "rs = k5alloc(sizeof(struct request_state), &retval);"
    },
    {
        "line": 53,
        "fullcodeline": "rs->arg = arg;"
    },
    {
        "line": 54,
        "fullcodeline": "rs->respond = respond;"
    },
    {
        "line": 57,
        "fullcodeline": "retval = cb->get_string(context, rock, \"otp\", &config);"
    },
    {
        "line": 66,
        "fullcodeline": "otp_state_verify((otp_state *)moddata, cb->event_context(context, rock),"
    },
    {
        "line": 68,
        "fullcodeline": "cb->free_string(context, rock, config);"
    },
    {
        "line": 70,
        "fullcodeline": "k5_free_pa_otp_req(context, req);"
    },
    {
        "line": 18,
        "fullcodeline": "if (armor_key == NULL) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (retval != 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (retval != 0) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (retval != 0)"
    },
    {
        "line": 44,
        "fullcodeline": "if (retval != 0) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (rs == NULL)"
    },
    {
        "line": 58,
        "fullcodeline": "if (retval == 0 && config == NULL)"
    },
    {
        "line": 60,
        "fullcodeline": "if (retval != 0) {"
    },
    {
        "line": 19,
        "fullcodeline": "retval = KRB5KDC_ERR_PREAUTH_FAILED;"
    },
    {
        "line": 20,
        "fullcodeline": "com_err(\"otp\", retval, \"No armor key found when verifying padata\");"
    },
    {
        "line": 28,
        "fullcodeline": "com_err(\"otp\", retval, \"Unable to decode OTP request\");"
    },
    {
        "line": 35,
        "fullcodeline": "com_err(\"otp\", retval, \"Unable to decrypt nonce\");"
    },
    {
        "line": 42,
        "fullcodeline": "retval = timestamp_verify(context, &plaintext);"
    },
    {
        "line": 45,
        "fullcodeline": "com_err(\"otp\", retval, \"Unable to verify nonce or timestamp\");"
    },
    {
        "line": 59,
        "fullcodeline": "retval = KRB5_PREAUTH_FAILED;"
    }
]