[
    {
        "line": 4,
        "fullcodeline": "struct device *ddev = &device->intf->dev;"
    },
    {
        "line": 5,
        "fullcodeline": "int   x, i = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "__u8   data   = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "__u16  data16 = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "__u32  data32 = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "int   inputnum = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "__u32 usage = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "__u32 globalval[TAG_GLOB_MAX];"
    },
    {
        "line": 22,
        "fullcodeline": "__u32 oldval[TAG_GLOB_MAX];"
    },
    {
        "line": 25,
        "fullcodeline": "char  maintype = 'x';"
    },
    {
        "line": 26,
        "fullcodeline": "char  globtype[12];"
    },
    {
        "line": 27,
        "fullcodeline": "int   indent = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "char  indentstr[10] = \"\";"
    },
    {
        "line": 31,
        "fullcodeline": "dev_dbg(ddev, \"======>>>>>>PARSE<<<<<<======\\n\");"
    },
    {
        "line": 34,
        "fullcodeline": "while (i < length) {"
    },
    {
        "line": 35,
        "fullcodeline": "prefix = report[i++];"
    },
    {
        "line": 38,
        "fullcodeline": "size = (1U << PREF_SIZE(prefix)) >> 1;"
    },
    {
        "line": 59,
        "fullcodeline": "i += size;"
    },
    {
        "line": 62,
        "fullcodeline": "tag  = PREF_TAG(prefix);"
    },
    {
        "line": 63,
        "fullcodeline": "type = PREF_TYPE(prefix);"
    },
    {
        "line": 39,
        "fullcodeline": "if (i + size > length) {"
    },
    {
        "line": 48,
        "fullcodeline": "data = report[i];"
    },
    {
        "line": 51,
        "fullcodeline": "data16 = get_unaligned_le16(&report[i]);"
    },
    {
        "line": 54,
        "fullcodeline": "data32 = get_unaligned_le32(&report[i]);"
    },
    {
        "line": 66,
        "fullcodeline": "strcpy(globtype, \"\");"
    },
    {
        "line": 268,
        "fullcodeline": "if (tag < TAG_GLOB_MAX) {"
    },
    {
        "line": 77,
        "fullcodeline": "maintype = 'I';"
    },
    {
        "line": 83,
        "fullcodeline": "dev_dbg(ddev, \"::::: Saving Report: %d input #%d Max: 0x%X(%d) Min:0x%X(%d) of %d bits\\n\","
    },
    {
        "line": 141,
        "fullcodeline": "inputnum++;"
    },
    {
        "line": 145,
        "fullcodeline": "maintype = 'O';"
    },
    {
        "line": 149,
        "fullcodeline": "maintype = 'F';"
    },
    {
        "line": 153,
        "fullcodeline": "maintype = 'S';"
    },
    {
        "line": 162,
        "fullcodeline": "indent++;"
    },
    {
        "line": 165,
        "fullcodeline": "indentstr[x] = 0;"
    },
    {
        "line": 174,
        "fullcodeline": "dev_dbg(ddev, \"<<<<<<======\\n\");"
    },
    {
        "line": 175,
        "fullcodeline": "maintype = 'E';"
    },
    {
        "line": 176,
        "fullcodeline": "indent--;"
    },
    {
        "line": 179,
        "fullcodeline": "indentstr[x] = 0;"
    },
    {
        "line": 190,
        "fullcodeline": "dev_dbg(ddev, \"%sMAINTAG:(%d) %c SIZE: %d Data: %s 0x%x\\n\","
    },
    {
        "line": 195,
        "fullcodeline": "dev_dbg(ddev, \"%sMAINTAG:(%d) %c SIZE: %d Data: %s 0x%x\\n\","
    },
    {
        "line": 200,
        "fullcodeline": "dev_dbg(ddev, \"%sMAINTAG:(%d) %c SIZE: %d Data: %s 0x%x\\n\","
    },
    {
        "line": 216,
        "fullcodeline": "strcpy(globtype, \"USAGE\");"
    },
    {
        "line": 220,
        "fullcodeline": "strcpy(globtype, \"LOG_MIN\");"
    },
    {
        "line": 224,
        "fullcodeline": "strcpy(globtype, \"LOG_MAX\");"
    },
    {
        "line": 228,
        "fullcodeline": "strcpy(globtype, \"PHYS_MIN\");"
    },
    {
        "line": 232,
        "fullcodeline": "strcpy(globtype, \"PHYS_MAX\");"
    },
    {
        "line": 236,
        "fullcodeline": "strcpy(globtype, \"EXP\");"
    },
    {
        "line": 240,
        "fullcodeline": "strcpy(globtype, \"UNIT\");"
    },
    {
        "line": 244,
        "fullcodeline": "strcpy(globtype, \"REPORT_SZ\");"
    },
    {
        "line": 248,
        "fullcodeline": "strcpy(globtype, \"REPORT_ID\");"
    },
    {
        "line": 250,
        "fullcodeline": "inputnum = 0;"
    },
    {
        "line": 254,
        "fullcodeline": "strcpy(globtype, \"REPORT_CNT\");"
    },
    {
        "line": 258,
        "fullcodeline": "strcpy(globtype, \"PUSH\");"
    },
    {
        "line": 262,
        "fullcodeline": "strcpy(globtype, \"POP\");"
    },
    {
        "line": 297,
        "fullcodeline": "strcpy(globtype, \"USAGE\");"
    },
    {
        "line": 299,
        "fullcodeline": "usage = data;"
    },
    {
        "line": 303,
        "fullcodeline": "strcpy(globtype, \"MIN\");"
    },
    {
        "line": 307,
        "fullcodeline": "strcpy(globtype, \"MAX\");"
    },
    {
        "line": 311,
        "fullcodeline": "strcpy(globtype, \"UNKNOWN\");"
    },
    {
        "line": 317,
        "fullcodeline": "dev_dbg(ddev, \"%sLOCALTAG:(%d) %s SIZE: %d Data: 0x%x\\n\","
    },
    {
        "line": 322,
        "fullcodeline": "dev_dbg(ddev, \"%sLOCALTAG:(%d) %s SIZE: %d Data: 0x%x\\n\","
    },
    {
        "line": 327,
        "fullcodeline": "dev_dbg(ddev, \"%sLOCALTAG:(%d) %s SIZE: %d Data: 0x%x\\n\","
    },
    {
        "line": 78,
        "fullcodeline": "if (data == 2)"
    },
    {
        "line": 87,
        "fullcodeline": "globalval[TAG_GLOB_REPORT_SZ] * globalval[TAG_GLOB_REPORT_CNT]);"
    },
    {
        "line": 155,
        "fullcodeline": "if (data == 0) {"
    },
    {
        "line": 163,
        "fullcodeline": "for (x = 0; x < indent; x++)"
    },
    {
        "line": 164,
        "fullcodeline": "indentstr[x] = '-';"
    },
    {
        "line": 168,
        "fullcodeline": "for (x = 0; x < TAG_GLOB_MAX; x++)"
    },
    {
        "line": 169,
        "fullcodeline": "oldval[x] = globalval[x];"
    },
    {
        "line": 177,
        "fullcodeline": "for (x = 0; x < indent; x++)"
    },
    {
        "line": 178,
        "fullcodeline": "indentstr[x] = '-';"
    },
    {
        "line": 182,
        "fullcodeline": "for (x = 0; x < TAG_GLOB_MAX; x++)"
    },
    {
        "line": 183,
        "fullcodeline": "globalval[x] = oldval[x];"
    },
    {
        "line": 213,
        "fullcodeline": "if (device->usage == 0)"
    },
    {
        "line": 289,
        "fullcodeline": "dev_dbg(ddev, \"%sGLOBALTAG: ILLEGAL TAG:%d SIZE: %d\\n\","
    },
    {
        "line": 79,
        "fullcodeline": "strcpy(globtype, \"Variable\");"
    },
    {
        "line": 98,
        "fullcodeline": "dev_dbg(ddev, \"GER: X Usage: 0x%x\\n\", usage);"
    },
    {
        "line": 106,
        "fullcodeline": "dev_dbg(ddev, \"GER: Y Usage: 0x%x\\n\", usage);"
    },
    {
        "line": 156,
        "fullcodeline": "dev_dbg(ddev, \"======>>>>>> Physical\\n\");"
    },
    {
        "line": 157,
        "fullcodeline": "strcpy(globtype, \"Physical\");"
    },
    {
        "line": 214,
        "fullcodeline": "device->usage = data;"
    },
    {
        "line": 271,
        "fullcodeline": "dev_dbg(ddev, \"%sGLOBALTAG:%s(%d) SIZE: %d Data: 0x%x\\n\","
    },
    {
        "line": 273,
        "fullcodeline": "globalval[tag] = data;"
    },
    {
        "line": 277,
        "fullcodeline": "dev_dbg(ddev, \"%sGLOBALTAG:%s(%d) SIZE: %d Data: 0x%x\\n\","
    },
    {
        "line": 279,
        "fullcodeline": "globalval[tag] = data16;"
    },
    {
        "line": 283,
        "fullcodeline": "dev_dbg(ddev, \"%sGLOBALTAG:%s(%d) SIZE: %d Data: 0x%x\\n\","
    },
    {
        "line": 285,
        "fullcodeline": "globalval[tag] = data32;"
    },
    {
        "line": 99,
        "fullcodeline": "if (device->max_X == 0) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (device->max_Y == 0) {"
    },
    {
        "line": 115,
        "fullcodeline": "if (usage == DIGITIZER_USAGE_TILT_X) {"
    },
    {
        "line": 123,
        "fullcodeline": "if (usage == DIGITIZER_USAGE_TILT_Y) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (usage == DIGITIZER_USAGE_TIP_PRESSURE) {"
    },
    {
        "line": 159,
        "fullcodeline": "dev_dbg(ddev, \"======>>>>>>\\n\");"
    },
    {
        "line": 80,
        "fullcodeline": "else if (data == 3)"
    },
    {
        "line": 100,
        "fullcodeline": "device->max_X = globalval[TAG_GLOB_LOG_MAX];"
    },
    {
        "line": 101,
        "fullcodeline": "device->min_X = globalval[TAG_GLOB_LOG_MIN];"
    },
    {
        "line": 108,
        "fullcodeline": "device->max_Y = globalval[TAG_GLOB_LOG_MAX];"
    },
    {
        "line": 109,
        "fullcodeline": "device->min_Y = globalval[TAG_GLOB_LOG_MIN];"
    },
    {
        "line": 81,
        "fullcodeline": "strcpy(globtype, \"Var|Const\");"
    },
    {
        "line": 116,
        "fullcodeline": "if (device->maxtilt_X == 0) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (device->maxtilt_Y == 0) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (device->maxpressure == 0) {"
    },
    {
        "line": 117,
        "fullcodeline": "device->maxtilt_X = globalval[TAG_GLOB_LOG_MAX];"
    },
    {
        "line": 118,
        "fullcodeline": "device->mintilt_X = globalval[TAG_GLOB_LOG_MIN];"
    },
    {
        "line": 125,
        "fullcodeline": "device->maxtilt_Y = globalval[TAG_GLOB_LOG_MAX];"
    },
    {
        "line": 126,
        "fullcodeline": "device->mintilt_Y = globalval[TAG_GLOB_LOG_MIN];"
    },
    {
        "line": 133,
        "fullcodeline": "device->maxpressure = globalval[TAG_GLOB_LOG_MAX];"
    },
    {
        "line": 134,
        "fullcodeline": "device->minpressure = globalval[TAG_GLOB_LOG_MIN];"
    }
]