[
    {
        "line": 7,
        "fullcodeline": "ScopedVideoFrameDone scoped_done(std::move(callbacks));"
    },
    {
        "line": 15,
        "fullcodeline": "base::ReadOnlySharedMemoryRegion& shmem_region ="
    },
    {
        "line": 25,
        "fullcodeline": "base::ReadOnlySharedMemoryMapping mapping = shmem_region.Map();"
    },
    {
        "line": 38,
        "fullcodeline": "void* const pixels = const_cast<void*>(mapping.memory());"
    },
    {
        "line": 64,
        "fullcodeline": "view_->OnPaint(damage_rect, info->coded_size, pixels);"
    },
    {
        "line": 9,
        "fullcodeline": "if (info->pixel_format != media::PIXEL_FORMAT_ARGB) {"
    },
    {
        "line": 14,
        "fullcodeline": "CHECK(data->is_read_only_shmem_region());"
    },
    {
        "line": 16,
        "fullcodeline": "data->get_read_only_shmem_region();"
    },
    {
        "line": 23,
        "fullcodeline": "DCHECK(shmem_region.IsValid());"
    },
    {
        "line": 10,
        "fullcodeline": "DLOG(ERROR) << \"Unsupported pixel format \" << info->pixel_format;"
    },
    {
        "line": 26,
        "fullcodeline": "if (!mapping.IsValid()) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (mapping.size() <"
    },
    {
        "line": 31,
        "fullcodeline": "media::VideoFrame::AllocationSize(info->pixel_format, info->coded_size)) {"
    },
    {
        "line": 45,
        "fullcodeline": "damage_rect = gfx::Rect(info->coded_size);"
    },
    {
        "line": 46,
        "fullcodeline": "damage_rect.Intersect(*bounds_in_pixels_);"
    },
    {
        "line": 27,
        "fullcodeline": "DLOG(ERROR) << \"Shared memory mapping failed.\";"
    },
    {
        "line": 32,
        "fullcodeline": "DLOG(ERROR) << \"Shared memory size was less than expected.\";"
    },
    {
        "line": 59,
        "fullcodeline": "if (damage_rect.IsEmpty()) {"
    },
    {
        "line": 57,
        "fullcodeline": "damage_rect = *metadata.capture_update_rect;"
    },
    {
        "line": 60,
        "fullcodeline": "damage_rect = gfx::Rect(info->coded_size);"
    }
]