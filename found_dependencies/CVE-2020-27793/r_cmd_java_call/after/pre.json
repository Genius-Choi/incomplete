[
    {
        "line": 2,
        "fullcodeline": "RCore *core = (RCore *) user;"
    },
    {
        "line": 3,
        "fullcodeline": "int res = false;"
    },
    {
        "line": 4,
        "fullcodeline": "ut32 i = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "if (strncmp (input, \"java\", 4)) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (input[4] != ' ') {"
    },
    {
        "line": 11,
        "fullcodeline": "for (; i < END_CMDS - 1; i++) {"
    },
    {
        "line": 13,
        "fullcodeline": "IFDBG r_cons_printf (\"Checking cmd: %s %d\\n\", JAVA_CMDS[i].name,"
    },
    {
        "line": 9,
        "fullcodeline": "return r_cmd_java_handle_help (core, input);"
    },
    {
        "line": 14,
        "fullcodeline": "strncmp (input+5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len));"
    },
    {
        "line": 26,
        "fullcodeline": "return r_cmd_java_handle_help (core, input);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!strncmp (input + 5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len)) {"
    },
    {
        "line": 16,
        "fullcodeline": "const char *cmd = input + 5 + JAVA_CMDS[i].name_len;"
    },
    {
        "line": 21,
        "fullcodeline": "res =  JAVA_CMDS[i].handler (core, cmd);"
    },
    {
        "line": 17,
        "fullcodeline": "if (*cmd && *cmd == ' ') {"
    },
    {
        "line": 18,
        "fullcodeline": "cmd++;"
    }
]