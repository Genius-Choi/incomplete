[
    {
        "line": 4,
        "fullcodeline": "const struct mp_join *mpj = (const struct mp_join *) opt;"
    },
    {
        "line": 6,
        "fullcodeline": "if (!(opt_len == 12 && flags & TH_SYN) &&"
    },
    {
        "line": 11,
        "fullcodeline": "if (opt_len != 24) {"
    },
    {
        "line": 8,
        "fullcodeline": "!(opt_len == 24 && flags & TH_ACK))"
    },
    {
        "line": 14,
        "fullcodeline": "ND_PRINT((ndo, \" id %u\", mpj->addr_id));"
    },
    {
        "line": 19,
        "fullcodeline": "ND_PRINT((ndo, \" token 0x%x\" \" nonce 0x%x\","
    },
    {
        "line": 7,
        "fullcodeline": "!(opt_len == 16 && (flags & (TH_SYN | TH_ACK)) == (TH_SYN | TH_ACK)) &&"
    },
    {
        "line": 12,
        "fullcodeline": "if (mpj->sub_b & MP_JOIN_B)"
    },
    {
        "line": 30,
        "fullcodeline": "ND_PRINT((ndo, \" hmac 0x\"));"
    },
    {
        "line": 13,
        "fullcodeline": "ND_PRINT((ndo, \" backup\"));"
    },
    {
        "line": 31,
        "fullcodeline": "for (i = 0; i < sizeof(mpj->u.ack.mac); ++i)"
    },
    {
        "line": 32,
        "fullcodeline": "ND_PRINT((ndo, \"%02x\", mpj->u.ack.mac[i]));"
    }
]