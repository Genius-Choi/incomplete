[
    {
        "line": 6,
        "fullcodeline": "PJ_CHECK_STACK();"
    },
    {
        "line": 44,
        "fullcodeline": "node = alloc_node(pool);"
    },
    {
        "line": 47,
        "fullcodeline": "pj_scan_get_char(scanner);"
    },
    {
        "line": 50,
        "fullcodeline": "pj_scan_get_until_chr( scanner, \" />\\t\\r\\n\", &node->name);"
    },
    {
        "line": 112,
        "fullcodeline": "pj_scan_get_until_chr(scanner, \" \\t>\", &end_name);"
    },
    {
        "line": 8,
        "fullcodeline": "if (*scanner->curptr != '<')"
    },
    {
        "line": 12,
        "fullcodeline": "if (*scanner->curptr == '<' && *(scanner->curptr+1) == '?') {"
    },
    {
        "line": 28,
        "fullcodeline": "if (pj_scan_strcmp(scanner, \"<!\", 2) == 0) {"
    },
    {
        "line": 53,
        "fullcodeline": "while (*scanner->curptr != '>' && *scanner->curptr != '/') {"
    },
    {
        "line": 68,
        "fullcodeline": "if (*scanner->curptr == '/') {"
    },
    {
        "line": 76,
        "fullcodeline": "if (pj_scan_get_char(scanner) != '>')"
    },
    {
        "line": 80,
        "fullcodeline": "while (*scanner->curptr == '<' && *(scanner->curptr+1) != '/'"
    },
    {
        "line": 88,
        "fullcodeline": "if (!pj_scan_is_eof(scanner) && *scanner->curptr != '<') {"
    },
    {
        "line": 93,
        "fullcodeline": "if (*scanner->curptr == '<' && *(scanner->curptr+1) == '!' &&"
    },
    {
        "line": 109,
        "fullcodeline": "if (pj_scan_get_char(scanner) != '<' || pj_scan_get_char(scanner) != '/')"
    },
    {
        "line": 115,
        "fullcodeline": "if (pj_stricmp(&node->name, &end_name) != 0)"
    },
    {
        "line": 119,
        "fullcodeline": "if (pj_scan_get_char(scanner) != '>')"
    },
    {
        "line": 9,
        "fullcodeline": "on_syntax_error(scanner);"
    },
    {
        "line": 13,
        "fullcodeline": "pj_scan_advance_n(scanner, 2, PJ_FALSE);"
    },
    {
        "line": 29,
        "fullcodeline": "pj_scan_advance_n(scanner, 2, PJ_FALSE);"
    },
    {
        "line": 54,
        "fullcodeline": "pj_xml_attr *attr = alloc_attr(pool);"
    },
    {
        "line": 56,
        "fullcodeline": "pj_scan_get_until_chr( scanner, \"=> \\t\\r\\n\", &attr->name);"
    },
    {
        "line": 65,
        "fullcodeline": "pj_list_push_back( &node->attr_head, attr );"
    },
    {
        "line": 69,
        "fullcodeline": "pj_scan_get_char(scanner);"
    },
    {
        "line": 77,
        "fullcodeline": "on_syntax_error(scanner);"
    },
    {
        "line": 81,
        "fullcodeline": "&& *(scanner->curptr+1) != '!')"
    },
    {
        "line": 83,
        "fullcodeline": "pj_xml_node *sub_node = xml_parse_node(pool, scanner);"
    },
    {
        "line": 84,
        "fullcodeline": "pj_list_push_back( &node->node_head, sub_node );"
    },
    {
        "line": 89,
        "fullcodeline": "pj_scan_get_until_ch(scanner, '<', &node->content);"
    },
    {
        "line": 94,
        "fullcodeline": "pj_scan_strcmp(scanner, \"<![CDATA[\", 9) == 0)"
    },
    {
        "line": 96,
        "fullcodeline": "pj_scan_advance_n(scanner, 9, PJ_FALSE);"
    },
    {
        "line": 97,
        "fullcodeline": "pj_scan_get_until_ch(scanner, ']', &node->content);"
    },
    {
        "line": 104,
        "fullcodeline": "node->content.slen = scanner->curptr - node->content.ptr;"
    },
    {
        "line": 105,
        "fullcodeline": "pj_scan_advance_n(scanner, 3, PJ_TRUE);"
    },
    {
        "line": 110,
        "fullcodeline": "on_syntax_error(scanner);"
    },
    {
        "line": 116,
        "fullcodeline": "on_syntax_error(scanner);"
    },
    {
        "line": 120,
        "fullcodeline": "on_syntax_error(scanner);"
    },
    {
        "line": 24,
        "fullcodeline": "return xml_parse_node(pool, scanner);"
    },
    {
        "line": 40,
        "fullcodeline": "return xml_parse_node(pool, scanner);"
    },
    {
        "line": 57,
        "fullcodeline": "if (*scanner->curptr == '=') {"
    },
    {
        "line": 70,
        "fullcodeline": "if (pj_scan_get_char(scanner) != '>')"
    },
    {
        "line": 98,
        "fullcodeline": "while (pj_scan_strcmp(scanner, \"]]>\", 3)) {"
    },
    {
        "line": 16,
        "fullcodeline": "pj_scan_get_until_ch(scanner, '?', &dummy);"
    },
    {
        "line": 32,
        "fullcodeline": "pj_scan_get_until_ch(scanner, '>', &dummy);"
    },
    {
        "line": 58,
        "fullcodeline": "pj_scan_get_char( scanner );"
    },
    {
        "line": 59,
        "fullcodeline": "pj_scan_get_quotes(scanner, \"\\\"'\", \"\\\"'\", 2, &attr->value);"
    },
    {
        "line": 62,
        "fullcodeline": "attr->value.slen -= 2;"
    },
    {
        "line": 71,
        "fullcodeline": "on_syntax_error(scanner);"
    },
    {
        "line": 101,
        "fullcodeline": "pj_scan_advance_n(scanner, 1, PJ_FALSE);"
    },
    {
        "line": 102,
        "fullcodeline": "pj_scan_get_until_ch(scanner, ']', &dummy);"
    },
    {
        "line": 17,
        "fullcodeline": "if (*scanner->curptr=='?' && *(scanner->curptr+1)=='>') {"
    },
    {
        "line": 33,
        "fullcodeline": "if (pj_scan_strcmp(scanner, \">\", 1) == 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "pj_scan_advance_n(scanner, 2, PJ_TRUE);"
    },
    {
        "line": 34,
        "fullcodeline": "pj_scan_advance_n(scanner, 1, PJ_TRUE);"
    },
    {
        "line": 21,
        "fullcodeline": "pj_scan_advance_n(scanner, 1, PJ_FALSE);"
    },
    {
        "line": 37,
        "fullcodeline": "pj_scan_advance_n(scanner, 1, PJ_FALSE);"
    }
]