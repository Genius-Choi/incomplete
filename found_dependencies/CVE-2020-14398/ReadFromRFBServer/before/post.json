[
    {
        "line": 61,
        "fullcodeline": "memcpy(out, client->bufoutptr, client->buffered);"
    },
    {
        "line": 63,
        "fullcodeline": "out += client->buffered;"
    },
    {
        "line": 64,
        "fullcodeline": "n -= client->buffered;"
    },
    {
        "line": 66,
        "fullcodeline": "client->bufoutptr = client->buf;"
    },
    {
        "line": 67,
        "fullcodeline": "client->buffered = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "if(!out)"
    },
    {
        "line": 16,
        "fullcodeline": "if (client->serverPort==-1) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (n <= client->buffered) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (n <= RFB_BUF_SIZE) {"
    },
    {
        "line": 18,
        "fullcodeline": "rfbVNCRec* rec = client->vncRec;"
    },
    {
        "line": 52,
        "fullcodeline": "memcpy(out, client->bufoutptr, n);"
    },
    {
        "line": 53,
        "fullcodeline": "client->bufoutptr += n;"
    },
    {
        "line": 54,
        "fullcodeline": "client->buffered -= n;"
    },
    {
        "line": 111,
        "fullcodeline": "memcpy(out, client->bufoutptr, n);"
    },
    {
        "line": 112,
        "fullcodeline": "client->bufoutptr += n;"
    },
    {
        "line": 113,
        "fullcodeline": "client->buffered -= n;"
    },
    {
        "line": 48,
        "fullcodeline": "return (fread(out,1,n,rec->file) != n ? FALSE : TRUE);"
    },
    {
        "line": 71,
        "fullcodeline": "while (client->buffered < n) {"
    },
    {
        "line": 22,
        "fullcodeline": "rec->readTimestamp = FALSE;"
    },
    {
        "line": 26,
        "fullcodeline": "tv.tv_sec = rfbClientSwap32IfLE (tv.tv_sec);"
    },
    {
        "line": 27,
        "fullcodeline": "tv.tv_usec = rfbClientSwap32IfLE (tv.tv_usec);"
    },
    {
        "line": 45,
        "fullcodeline": "rec->tv=tv;"
    },
    {
        "line": 108,
        "fullcodeline": "client->buffered += i;"
    },
    {
        "line": 117,
        "fullcodeline": "while (n > 0) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (!fread(&tv,sizeof(struct timeval),1,rec->file))"
    },
    {
        "line": 29,
        "fullcodeline": "if (rec->tv.tv_sec!=0 && !rec->doNotSleep) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (i <= 0) {"
    },
    {
        "line": 151,
        "fullcodeline": "out += i;"
    },
    {
        "line": 152,
        "fullcodeline": "n -= i;"
    },
    {
        "line": 31,
        "fullcodeline": "diff.tv_sec = tv.tv_sec - rec->tv.tv_sec;"
    },
    {
        "line": 32,
        "fullcodeline": "diff.tv_usec = tv.tv_usec - rec->tv.tv_usec;"
    },
    {
        "line": 38,
        "fullcodeline": "sleep (diff.tv_sec);"
    },
    {
        "line": 39,
        "fullcodeline": "usleep (diff.tv_usec);"
    },
    {
        "line": 74,
        "fullcodeline": "i = ReadFromTLS(client, client->buf + client->buffered, RFB_BUF_SIZE - client->buffered);"
    },
    {
        "line": 129,
        "fullcodeline": "if (i <= 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "if(diff.tv_usec<0) {"
    },
    {
        "line": 81,
        "fullcodeline": "i = read(client->sock, client->buf + client->buffered, RFB_BUF_SIZE - client->buffered);"
    },
    {
        "line": 90,
        "fullcodeline": "if (i < 0) {"
    },
    {
        "line": 120,
        "fullcodeline": "i = ReadFromTLS(client, out, n);"
    },
    {
        "line": 34,
        "fullcodeline": "diff.tv_sec--;"
    },
    {
        "line": 35,
        "fullcodeline": "diff.tv_usec+=1000000;"
    },
    {
        "line": 127,
        "fullcodeline": "i = read(client->sock, out, n);"
    },
    {
        "line": 130,
        "fullcodeline": "if (i < 0) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (errno == EWOULDBLOCK || errno == EAGAIN) {"
    },
    {
        "line": 95,
        "fullcodeline": "WaitForMessage(client, 100000);"
    },
    {
        "line": 96,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 134,
        "fullcodeline": "if (errno == EWOULDBLOCK || errno == EAGAIN) {"
    },
    {
        "line": 98,
        "fullcodeline": "rfbClientErr(\"read (%d: %s)\\n\",errno,strerror(errno));"
    },
    {
        "line": 103,
        "fullcodeline": "rfbClientLog(\"VNC server closed connection\\n\");"
    },
    {
        "line": 138,
        "fullcodeline": "WaitForMessage(client, 100000);"
    },
    {
        "line": 139,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 141,
        "fullcodeline": "rfbClientErr(\"read (%s)\\n\",strerror(errno));"
    },
    {
        "line": 146,
        "fullcodeline": "rfbClientLog(\"VNC server closed connection\\n\");"
    }
]