[
    {
        "line": 12,
        "fullcodeline": "sampleCount = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "UseDefaultSize = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "UseDefaultDur = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "UseDefaultFlag = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "i=0;"
    },
    {
        "line": 48,
        "fullcodeline": "while ((trun = (GF_TrackFragmentRunBox *)gf_list_enum(traf->TrackRuns, &i))) {"
    },
    {
        "line": 16,
        "fullcodeline": "traf->tfhd->flags = GF_ISOM_MOOF_BASE_OFFSET;"
    },
    {
        "line": 34,
        "fullcodeline": "traf->tfhd->flags |= GF_ISOM_TRAF_DUR_EMPTY;"
    },
    {
        "line": 49,
        "fullcodeline": "GF_TrunEntry *first_ent = NULL;"
    },
    {
        "line": 50,
        "fullcodeline": "RunSize = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "RunDur = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "RunFlags = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "NeedFlags = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "trun->flags = 0;"
    },
    {
        "line": 167,
        "fullcodeline": "sampleCount += trun->sample_count;"
    },
    {
        "line": 172,
        "fullcodeline": "traf->tfhd->flags |= GF_ISOM_TRAF_SAMPLE_SIZE;"
    },
    {
        "line": 174,
        "fullcodeline": "traf->tfhd->flags |= GF_ISOM_TRAF_SAMPLE_DUR;"
    },
    {
        "line": 176,
        "fullcodeline": "traf->tfhd->flags |= GF_ISOM_TRAF_SAMPLE_FLAGS;"
    },
    {
        "line": 177,
        "fullcodeline": "if (traf->trex->cannot_use_default || (traf->tfhd->sample_desc_index != traf->trex->def_sample_desc_index))"
    },
    {
        "line": 178,
        "fullcodeline": "traf->tfhd->flags |= GF_ISOM_TRAF_SAMPLE_DESC;"
    },
    {
        "line": 29,
        "fullcodeline": "while (gf_list_count(traf->TrackRuns)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (traf->tfhd->EmptyDuration != traf->trex->def_sample_duration) {"
    },
    {
        "line": 57,
        "fullcodeline": "for (j=0; j<trun->nb_samples; j++) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (!first_ent) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (RunSize && (traf->trex->def_sample_size == RunSize) && !traf->trex->cannot_use_default) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (RunDur && (traf->trex->def_sample_duration == RunDur) && !traf->trex->cannot_use_default) {"
    },
    {
        "line": 30,
        "fullcodeline": "trun = (GF_TrackFragmentRunBox *)gf_list_get(traf->TrackRuns, 0);"
    },
    {
        "line": 31,
        "fullcodeline": "gf_list_rem(traf->TrackRuns, 0);"
    },
    {
        "line": 32,
        "fullcodeline": "gf_isom_box_del_parent(&traf->child_boxes, (GF_Box *)trun);"
    },
    {
        "line": 36,
        "fullcodeline": "traf->tfhd->def_sample_duration = traf->tfhd->EmptyDuration;"
    },
    {
        "line": 37,
        "fullcodeline": "traf->tfhd->flags |= GF_ISOM_TRAF_SAMPLE_DUR;"
    },
    {
        "line": 58,
        "fullcodeline": "ent = &trun->samples[j];"
    },
    {
        "line": 82,
        "fullcodeline": "i--;"
    },
    {
        "line": 83,
        "fullcodeline": "gf_list_rem(traf->TrackRuns, i);"
    },
    {
        "line": 103,
        "fullcodeline": "if (!RunSize) trun->flags |= GF_ISOM_TRUN_SIZE;"
    },
    {
        "line": 113,
        "fullcodeline": "if (!RunDur) trun->flags |= GF_ISOM_TRUN_DURATION;"
    },
    {
        "line": 146,
        "fullcodeline": "trun->flags |= GF_ISOM_TRUN_FLAGS;"
    },
    {
        "line": 160,
        "fullcodeline": "if (UseCTS) trun->flags |= GF_ISOM_TRUN_CTS_OFFSET;"
    },
    {
        "line": 165,
        "fullcodeline": "trun->flags |= GF_ISOM_TRUN_DATA_OFFSET;"
    },
    {
        "line": 21,
        "fullcodeline": "traf->tfhd->flags = GF_ISOM_MOOF_BASE_OFFSET;"
    },
    {
        "line": 59,
        "fullcodeline": "if (!j) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (j || (trun->nb_samples==1)) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (!UseDefaultSize) UseDefaultSize = 2;"
    },
    {
        "line": 107,
        "fullcodeline": "if (!UseDefaultDur) UseDefaultDur = 2;"
    },
    {
        "line": 118,
        "fullcodeline": "if (RunFlags == traf->trex->def_sample_flags && !traf->trex->cannot_use_default) {"
    },
    {
        "line": 23,
        "fullcodeline": "traf->tfhd->flags = GF_ISOM_TRAF_BASE_OFFSET;"
    },
    {
        "line": 60,
        "fullcodeline": "first_ent = ent;"
    },
    {
        "line": 61,
        "fullcodeline": "RunSize = ent->size;"
    },
    {
        "line": 63,
        "fullcodeline": "RunDur = ent->Duration;"
    },
    {
        "line": 67,
        "fullcodeline": "u32 ssize = ent->size;"
    },
    {
        "line": 93,
        "fullcodeline": "} else if (RunSize && (traf->tfhd->def_sample_size == RunSize)) {"
    },
    {
        "line": 109,
        "fullcodeline": "} else if (RunDur && (traf->tfhd->def_sample_duration == RunDur)) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (first_ent->flags != RunFlags) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (j==1 || (trun->nb_samples==1) ) RunFlags = ent->flags;"
    },
    {
        "line": 73,
        "fullcodeline": "if (ssize != RunSize) RunSize = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "if (RunDur && (ent->Duration != RunDur))"
    },
    {
        "line": 76,
        "fullcodeline": "if (j && (RunFlags != ent->flags)) NeedFlags = 1;"
    },
    {
        "line": 120,
        "fullcodeline": "if (!UseDefaultFlag) {"
    },
    {
        "line": 151,
        "fullcodeline": "trun->flags |= GF_ISOM_TRUN_FIRST_FLAG;"
    },
    {
        "line": 62,
        "fullcodeline": "if (ent->nb_pack) RunSize /= ent->nb_pack;"
    },
    {
        "line": 68,
        "fullcodeline": "if (ent->nb_pack) ssize /= ent->nb_pack;"
    },
    {
        "line": 75,
        "fullcodeline": "RunDur = 0;"
    },
    {
        "line": 92,
        "fullcodeline": "else if (UseDefaultSize==1) RunSize = 0;"
    },
    {
        "line": 94,
        "fullcodeline": "if (!UseDefaultSize) UseDefaultSize = 1;"
    },
    {
        "line": 100,
        "fullcodeline": "RunSize=0;"
    },
    {
        "line": 108,
        "fullcodeline": "else if (UseDefaultDur==1) RunDur = 0;"
    },
    {
        "line": 110,
        "fullcodeline": "if (!UseDefaultDur) UseDefaultDur = 1;"
    },
    {
        "line": 122,
        "fullcodeline": "UseDefaultFlag = 2;"
    },
    {
        "line": 128,
        "fullcodeline": "} else if (RunFlags == traf->tfhd->def_sample_flags) {"
    },
    {
        "line": 123,
        "fullcodeline": "} else if (UseDefaultFlag==1) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (!UseDefaultFlag) {"
    },
    {
        "line": 95,
        "fullcodeline": "else if (UseDefaultSize==2) RunSize = 0;"
    },
    {
        "line": 111,
        "fullcodeline": "else if (UseDefaultDur==2) RunDur = 0;"
    },
    {
        "line": 132,
        "fullcodeline": "UseDefaultFlag = 1;"
    },
    {
        "line": 133,
        "fullcodeline": "} else if(UseDefaultFlag==2) {"
    }
]