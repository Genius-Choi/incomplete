[
    {
        "line": 8,
        "fullcodeline": "guint n = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "g_return_val_if_fail (string != NULL, 0);"
    },
    {
        "line": 11,
        "fullcodeline": "g_return_val_if_fail (find != NULL, 0);"
    },
    {
        "line": 12,
        "fullcodeline": "g_return_val_if_fail (replace != NULL, 0);"
    },
    {
        "line": 14,
        "fullcodeline": "f_len = strlen (find);"
    },
    {
        "line": 15,
        "fullcodeline": "r_len = strlen (replace);"
    },
    {
        "line": 16,
        "fullcodeline": "cur = string->str;"
    },
    {
        "line": 18,
        "fullcodeline": "while ((next = strstr (cur, find)) != NULL)"
    },
    {
        "line": 20,
        "fullcodeline": "pos = next - string->str;"
    },
    {
        "line": 21,
        "fullcodeline": "g_string_erase (string, pos, f_len);"
    },
    {
        "line": 22,
        "fullcodeline": "g_string_insert (string, pos, replace);"
    },
    {
        "line": 23,
        "fullcodeline": "cur = string->str + pos + r_len;"
    },
    {
        "line": 24,
        "fullcodeline": "n++;"
    },
    {
        "line": 27,
        "fullcodeline": "if (f_len == 0)"
    },
    {
        "line": 34,
        "fullcodeline": "if (n == limit)"
    },
    {
        "line": 29,
        "fullcodeline": "if (cur[0] == '\\0')"
    },
    {
        "line": 32,
        "fullcodeline": "cur++;"
    }
]