[
    {
        "line": 6,
        "fullcodeline": "gunichar c = g_utf8_get_char_validated (path, -1);"
    },
    {
        "line": 7,
        "fullcodeline": "if (c == (gunichar)-1 || c == (gunichar)-2)"
    },
    {
        "line": 26,
        "fullcodeline": "path = g_utf8_find_next_char (path, NULL);"
    },
    {
        "line": 11,
        "fullcodeline": "g_autofree char *escaped_char = escape_character ((unsigned char)*path);"
    },
    {
        "line": 12,
        "fullcodeline": "g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);"
    },
    {
        "line": 13,
        "fullcodeline": "g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA,"
    },
    {
        "line": 17,
        "fullcodeline": "else if (!is_char_safe (c))"
    },
    {
        "line": 19,
        "fullcodeline": "g_autofree char *escaped_char = escape_character (c);"
    },
    {
        "line": 20,
        "fullcodeline": "g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);"
    }
]