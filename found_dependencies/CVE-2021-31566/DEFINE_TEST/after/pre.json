[
    {
        "line": 26,
        "fullcodeline": "archive_entry_copy_pathname(ae, \"dir\");"
    },
    {
        "line": 27,
        "fullcodeline": "archive_entry_set_mode(ae, AE_IFDIR | 0606);"
    },
    {
        "line": 28,
        "fullcodeline": "assertEqualIntA(ad, 0, archive_write_header(ad, ae));"
    },
    {
        "line": 29,
        "fullcodeline": "assertEqualIntA(ad, 0, archive_write_finish_entry(ad));"
    },
    {
        "line": 34,
        "fullcodeline": "archive_entry_copy_pathname(ae, \"dir\");"
    },
    {
        "line": 35,
        "fullcodeline": "archive_entry_set_mode(ae, AE_IFLNK | 0777);"
    },
    {
        "line": 36,
        "fullcodeline": "archive_entry_set_size(ae, 0);"
    },
    {
        "line": 37,
        "fullcodeline": "archive_entry_copy_symlink(ae, \"victim\");"
    },
    {
        "line": 38,
        "fullcodeline": "assertEqualIntA(ad, 0, r = archive_write_header(ad, ae));"
    },
    {
        "line": 43,
        "fullcodeline": "assertEqualInt(ARCHIVE_OK, archive_write_free(ad));"
    },
    {
        "line": 7,
        "fullcodeline": "if (!canSymlink()) {"
    },
    {
        "line": 13,
        "fullcodeline": "assert((ad = archive_write_disk_new()) != NULL);"
    },
    {
        "line": 25,
        "fullcodeline": "assert((ae = archive_entry_new()) != NULL);"
    },
    {
        "line": 33,
        "fullcodeline": "assert((ae = archive_entry_new()) != NULL);"
    },
    {
        "line": 39,
        "fullcodeline": "if (r >= ARCHIVE_WARN)"
    },
    {
        "line": 8,
        "fullcodeline": "skipping(\"Symlinks not supported\");"
    },
    {
        "line": 40,
        "fullcodeline": "assertEqualIntA(ad, 0, archive_write_finish_entry(ad));"
    }
]