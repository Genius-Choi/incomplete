[
    {
        "line": 3,
        "fullcodeline": "struct archive_write_disk *a = (struct archive_write_disk *)_a;"
    },
    {
        "line": 8,
        "fullcodeline": "archive_check_magic(&a->archive, ARCHIVE_WRITE_DISK_MAGIC,"
    },
    {
        "line": 11,
        "fullcodeline": "ret = _archive_write_disk_finish_entry(&a->archive);"
    },
    {
        "line": 14,
        "fullcodeline": "p = sort_dir_list(a->fixup_list);"
    },
    {
        "line": 77,
        "fullcodeline": "a->fixup_list = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "ARCHIVE_STATE_HEADER | ARCHIVE_STATE_DATA,"
    },
    {
        "line": 16,
        "fullcodeline": "while (p != NULL) {"
    },
    {
        "line": 17,
        "fullcodeline": "fd = -1;"
    },
    {
        "line": 18,
        "fullcodeline": "a->pst = NULL; /* Mark stat cache as out-of-date. */"
    },
    {
        "line": 68,
        "fullcodeline": "next = p->next;"
    },
    {
        "line": 69,
        "fullcodeline": "archive_acl_clear(&p->acl);"
    },
    {
        "line": 70,
        "fullcodeline": "free(p->mac_metadata);"
    },
    {
        "line": 71,
        "fullcodeline": "free(p->name);"
    },
    {
        "line": 74,
        "fullcodeline": "free(p);"
    },
    {
        "line": 75,
        "fullcodeline": "p = next;"
    },
    {
        "line": 19,
        "fullcodeline": "if (p->fixup &"
    },
    {
        "line": 38,
        "fullcodeline": "if (p->fixup & TODO_TIMES) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (p->fixup & TODO_MODE_BASE) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (p->fixup & TODO_ACLS)"
    },
    {
        "line": 61,
        "fullcodeline": "if (p->fixup & TODO_FFLAGS)"
    },
    {
        "line": 64,
        "fullcodeline": "if (p->fixup & TODO_MAC_METADATA)"
    },
    {
        "line": 72,
        "fullcodeline": "if (fd >= 0)"
    },
    {
        "line": 20,
        "fullcodeline": "(TODO_TIMES | TODO_MODE_BASE | TODO_ACLS | TODO_FFLAGS)) {"
    },
    {
        "line": 21,
        "fullcodeline": "fd = open(p->name,"
    },
    {
        "line": 39,
        "fullcodeline": "set_times(a, fd, p->mode, p->name,"
    },
    {
        "line": 59,
        "fullcodeline": "archive_write_disk_set_acls(&a->archive, fd,"
    },
    {
        "line": 62,
        "fullcodeline": "set_fflags_platform(a, fd, p->name,"
    },
    {
        "line": 65,
        "fullcodeline": "set_mac_metadata(a, p->name, p->mac_metadata,"
    },
    {
        "line": 73,
        "fullcodeline": "close(fd);"
    },
    {
        "line": 23,
        "fullcodeline": "if (fd == -1) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (!S_ISLNK(p->mode))"
    },
    {
        "line": 22,
        "fullcodeline": "O_WRONLY | O_BINARY | O_NOFOLLOW | O_CLOEXEC);"
    },
    {
        "line": 55,
        "fullcodeline": "chmod(p->name, p->mode);"
    },
    {
        "line": 25,
        "fullcodeline": "if (lstat(p->name, &st) != 0)"
    },
    {
        "line": 32,
        "fullcodeline": "if (S_ISLNK(st.st_mode)) {"
    },
    {
        "line": 33,
        "fullcodeline": "p->mode &= ~S_IFMT;"
    },
    {
        "line": 34,
        "fullcodeline": "p->mode |= S_IFLNK;"
    }
]