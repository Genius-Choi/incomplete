[
    {
        "line": 3,
        "fullcodeline": "FILE *stream = stdout;"
    },
    {
        "line": 4,
        "fullcodeline": "const char *ptr = writeinfo;"
    },
    {
        "line": 5,
        "fullcodeline": "char *stringp = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "while(ptr && *ptr) {"
    },
    {
        "line": 10,
        "fullcodeline": "if('%' == *ptr) {"
    },
    {
        "line": 11,
        "fullcodeline": "if('%' == ptr[1]) {"
    },
    {
        "line": 13,
        "fullcodeline": "fputc('%', stream);"
    },
    {
        "line": 14,
        "fullcodeline": "ptr += 2;"
    },
    {
        "line": 238,
        "fullcodeline": "else if('\\\\' == *ptr) {"
    },
    {
        "line": 255,
        "fullcodeline": "ptr += 2;"
    },
    {
        "line": 21,
        "fullcodeline": "if('{' == ptr[1]) {"
    },
    {
        "line": 258,
        "fullcodeline": "fputc(*ptr, stream);"
    },
    {
        "line": 259,
        "fullcodeline": "ptr++;"
    },
    {
        "line": 22,
        "fullcodeline": "bool match = FALSE;"
    },
    {
        "line": 23,
        "fullcodeline": "end = strchr(ptr, '}');"
    },
    {
        "line": 24,
        "fullcodeline": "ptr += 2; /* pass the % and the { */"
    },
    {
        "line": 29,
        "fullcodeline": "keepit = *end;"
    },
    {
        "line": 30,
        "fullcodeline": "*end = 0; /* zero terminate */"
    },
    {
        "line": 227,
        "fullcodeline": "ptr = end + 1; /* pass the end */"
    },
    {
        "line": 228,
        "fullcodeline": "*end = keepit;"
    },
    {
        "line": 241,
        "fullcodeline": "fputc('\\r', stream);"
    },
    {
        "line": 244,
        "fullcodeline": "fputc('\\n', stream);"
    },
    {
        "line": 247,
        "fullcodeline": "fputc('\\t', stream);"
    },
    {
        "line": 251,
        "fullcodeline": "fputc(*ptr, stream);"
    },
    {
        "line": 252,
        "fullcodeline": "fputc(ptr[1], stream);"
    },
    {
        "line": 25,
        "fullcodeline": "if(!end) {"
    },
    {
        "line": 31,
        "fullcodeline": "for(i = 0; replacements[i].name; i++) {"
    },
    {
        "line": 224,
        "fullcodeline": "if(!match) {"
    },
    {
        "line": 232,
        "fullcodeline": "fputc('%', stream);"
    },
    {
        "line": 233,
        "fullcodeline": "fputc(ptr[1], stream);"
    },
    {
        "line": 234,
        "fullcodeline": "ptr += 2;"
    },
    {
        "line": 26,
        "fullcodeline": "fputs(\"%{\", stream);"
    },
    {
        "line": 225,
        "fullcodeline": "fprintf(stderr, \"curl: unknown --write-out variable: '%s'\\n\", ptr);"
    },
    {
        "line": 32,
        "fullcodeline": "if(curl_strequal(ptr, replacements[i].name)) {"
    },
    {
        "line": 33,
        "fullcodeline": "match = TRUE;"
    },
    {
        "line": 36,
        "fullcodeline": "if((CURLE_OK =="
    },
    {
        "line": 42,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 47,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 53,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 58,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 63,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 68,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 73,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 79,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 84,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 90,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 95,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 101,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 107,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 113,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 118,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 124,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 130,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 135,
        "fullcodeline": "if((CURLE_OK =="
    },
    {
        "line": 141,
        "fullcodeline": "if((CURLE_OK =="
    },
    {
        "line": 147,
        "fullcodeline": "if((CURLE_OK =="
    },
    {
        "line": 153,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 159,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 169,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 175,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 181,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 187,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 193,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 213,
        "fullcodeline": "if(CURLE_OK =="
    },
    {
        "line": 39,
        "fullcodeline": "fputs(stringp, stream);"
    },
    {
        "line": 43,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_RESPONSE_CODE, &longinfo))"
    },
    {
        "line": 44,
        "fullcodeline": "fprintf(stream, \"%03ld\", longinfo);"
    },
    {
        "line": 48,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_HTTP_CONNECTCODE,"
    },
    {
        "line": 50,
        "fullcodeline": "fprintf(stream, \"%03ld\", longinfo);"
    },
    {
        "line": 54,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_HEADER_SIZE, &longinfo))"
    },
    {
        "line": 55,
        "fullcodeline": "fprintf(stream, \"%ld\", longinfo);"
    },
    {
        "line": 59,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_REQUEST_SIZE, &longinfo))"
    },
    {
        "line": 60,
        "fullcodeline": "fprintf(stream, \"%ld\", longinfo);"
    },
    {
        "line": 64,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_NUM_CONNECTS, &longinfo))"
    },
    {
        "line": 65,
        "fullcodeline": "fprintf(stream, \"%ld\", longinfo);"
    },
    {
        "line": 69,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_REDIRECT_COUNT, &longinfo))"
    },
    {
        "line": 70,
        "fullcodeline": "fprintf(stream, \"%ld\", longinfo);"
    },
    {
        "line": 74,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_REDIRECT_TIME,"
    },
    {
        "line": 76,
        "fullcodeline": "fprintf(stream, \"%.6f\", doubleinfo);"
    },
    {
        "line": 80,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_TOTAL_TIME, &doubleinfo))"
    },
    {
        "line": 81,
        "fullcodeline": "fprintf(stream, \"%.6f\", doubleinfo);"
    },
    {
        "line": 85,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_NAMELOOKUP_TIME,"
    },
    {
        "line": 87,
        "fullcodeline": "fprintf(stream, \"%.6f\", doubleinfo);"
    },
    {
        "line": 91,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_CONNECT_TIME, &doubleinfo))"
    },
    {
        "line": 92,
        "fullcodeline": "fprintf(stream, \"%.6f\", doubleinfo);"
    },
    {
        "line": 96,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_APPCONNECT_TIME,"
    },
    {
        "line": 98,
        "fullcodeline": "fprintf(stream, \"%.6f\", doubleinfo);"
    },
    {
        "line": 102,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_PRETRANSFER_TIME,"
    },
    {
        "line": 104,
        "fullcodeline": "fprintf(stream, \"%.6f\", doubleinfo);"
    },
    {
        "line": 108,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_STARTTRANSFER_TIME,"
    },
    {
        "line": 110,
        "fullcodeline": "fprintf(stream, \"%.6f\", doubleinfo);"
    },
    {
        "line": 114,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_SIZE_UPLOAD, &doubleinfo))"
    },
    {
        "line": 115,
        "fullcodeline": "fprintf(stream, \"%.0f\", doubleinfo);"
    },
    {
        "line": 119,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_SIZE_DOWNLOAD,"
    },
    {
        "line": 121,
        "fullcodeline": "fprintf(stream, \"%.0f\", doubleinfo);"
    },
    {
        "line": 125,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_SPEED_DOWNLOAD,"
    },
    {
        "line": 127,
        "fullcodeline": "fprintf(stream, \"%.3f\", doubleinfo);"
    },
    {
        "line": 131,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_SPEED_UPLOAD, &doubleinfo))"
    },
    {
        "line": 132,
        "fullcodeline": "fprintf(stream, \"%.3f\", doubleinfo);"
    },
    {
        "line": 138,
        "fullcodeline": "fputs(stringp, stream);"
    },
    {
        "line": 144,
        "fullcodeline": "fputs(stringp, stream);"
    },
    {
        "line": 150,
        "fullcodeline": "fputs(stringp, stream);"
    },
    {
        "line": 154,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_SSL_VERIFYRESULT,"
    },
    {
        "line": 156,
        "fullcodeline": "fprintf(stream, \"%ld\", longinfo);"
    },
    {
        "line": 160,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_PROXY_SSL_VERIFYRESULT,"
    },
    {
        "line": 162,
        "fullcodeline": "fprintf(stream, \"%ld\", longinfo);"
    },
    {
        "line": 166,
        "fullcodeline": "fprintf(stream, \"%s\", outs->filename);"
    },
    {
        "line": 170,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_PRIMARY_IP,"
    },
    {
        "line": 172,
        "fullcodeline": "fprintf(stream, \"%s\", stringp);"
    },
    {
        "line": 176,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_PRIMARY_PORT,"
    },
    {
        "line": 178,
        "fullcodeline": "fprintf(stream, \"%ld\", longinfo);"
    },
    {
        "line": 182,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_LOCAL_IP,"
    },
    {
        "line": 184,
        "fullcodeline": "fprintf(stream, \"%s\", stringp);"
    },
    {
        "line": 188,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_LOCAL_PORT,"
    },
    {
        "line": 190,
        "fullcodeline": "fprintf(stream, \"%ld\", longinfo);"
    },
    {
        "line": 194,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_HTTP_VERSION,"
    },
    {
        "line": 196,
        "fullcodeline": "const char *version = \"0\";"
    },
    {
        "line": 209,
        "fullcodeline": "fprintf(stream, version);"
    },
    {
        "line": 214,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_SCHEME,"
    },
    {
        "line": 216,
        "fullcodeline": "fprintf(stream, \"%s\", stringp);"
    },
    {
        "line": 37,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_EFFECTIVE_URL, &stringp))"
    },
    {
        "line": 136,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_CONTENT_TYPE, &stringp))"
    },
    {
        "line": 142,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_FTP_ENTRY_PATH, &stringp))"
    },
    {
        "line": 148,
        "fullcodeline": "curl_easy_getinfo(curl, CURLINFO_REDIRECT_URL, &stringp))"
    },
    {
        "line": 199,
        "fullcodeline": "version = \"1.0\";"
    },
    {
        "line": 202,
        "fullcodeline": "version = \"1.1\";"
    },
    {
        "line": 205,
        "fullcodeline": "version = \"2\";"
    }
]