[
    {
        "line": 4,
        "fullcodeline": "static sdp_payload_attr_t static_payloads[] = {"
    },
    {
        "line": 41,
        "fullcodeline": "lmp = get_associated_lump(msg, cell);"
    },
    {
        "line": 53,
        "fullcodeline": "buff_len = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "buff = pkg_malloc(lmp->len+1);"
    },
    {
        "line": 64,
        "fullcodeline": "is_static = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "payload = cell->payload_attr;"
    },
    {
        "line": 281,
        "fullcodeline": "pkg_free(buff);"
    },
    {
        "line": 42,
        "fullcodeline": "if( lmp == NULL)"
    },
    {
        "line": 49,
        "fullcodeline": "if (lmp->len == 0)"
    },
    {
        "line": 57,
        "fullcodeline": "if( buff == NULL)"
    },
    {
        "line": 226,
        "fullcodeline": "if( op == ADD_TO_FRONT && buff_len >0 )"
    },
    {
        "line": 244,
        "fullcodeline": "if( op == ADD_TO_BACK && buff_len >0 )"
    },
    {
        "line": 262,
        "fullcodeline": "if (lmp->len == 0) {"
    },
    {
        "line": 6,
        "fullcodeline": "{ NULL,0,{ \"0\",1},{\"PCMU\",4},{ \"8000\",4},{NULL,0},{NULL,0} },   /* 0 - PCMU/8000  */"
    },
    {
        "line": 7,
        "fullcodeline": "{ NULL,0,{ \"3\",1},{ \"GSM\",3},{ \"8000\",4},{NULL,0},{NULL,0} },   /* 3 -  GSM/8000  */"
    },
    {
        "line": 8,
        "fullcodeline": "{ NULL,0,{ \"4\",1},{\"G723\",4},{ \"8000\",4},{NULL,0},{NULL,0} },   /* 4 - G723/8000  */"
    },
    {
        "line": 9,
        "fullcodeline": "{ NULL,0,{ \"5\",1},{\"DVI4\",4},{ \"8000\",4},{NULL,0},{NULL,0} },   /* 5 - DVI4/8000  */"
    },
    {
        "line": 10,
        "fullcodeline": "{ NULL,0,{ \"6\",1},{\"DVI4\",4},{\"16000\",5},{NULL,0},{NULL,0} },   /* 6 - DVI4/16000 */"
    },
    {
        "line": 11,
        "fullcodeline": "{ NULL,0,{ \"7\",1},{ \"LPC\",3},{ \"8000\",4},{NULL,0},{NULL,0} },   /* 7 -  LPC/8000  */"
    },
    {
        "line": 12,
        "fullcodeline": "{ NULL,0,{ \"8\",1},{\"PCMA\",4},{ \"8000\",4},{NULL,0},{NULL,0} },   /* 8 - PCMA/8000  */"
    },
    {
        "line": 13,
        "fullcodeline": "{ NULL,0,{ \"9\",1},{\"G722\",4},{ \"8000\",4},{NULL,0},{NULL,0} },   /* 9 - G722/8000  */"
    },
    {
        "line": 14,
        "fullcodeline": "{ NULL,0,{\"10\",2},{ \"L16\",3},{\"44100\",5},{NULL,0},{NULL,0} },   /*10 -  L16/44100 */"
    },
    {
        "line": 15,
        "fullcodeline": "{ NULL,0,{\"11\",2},{ \"L16\",3},{\"44100\",5},{NULL,0},{NULL,0} },   /*11 -  L16/44100 */"
    },
    {
        "line": 16,
        "fullcodeline": "{ NULL,0,{\"12\",2},{\"QCELP\",5},{\"8000\",4},{NULL,0},{NULL,0} },   /*12 -QCELP/8000  */"
    },
    {
        "line": 17,
        "fullcodeline": "{ NULL,0,{\"13\",2},{  \"CN\",2},{ \"8000\",4},{NULL,0},{NULL,0} },   /*13 -   CN/8000  */"
    },
    {
        "line": 18,
        "fullcodeline": "{ NULL,0,{\"14\",2},{ \"MPA\",3},{\"90000\",5},{NULL,0},{NULL,0} },   /*14 -  MPA/90000 */"
    },
    {
        "line": 19,
        "fullcodeline": "{ NULL,0,{\"15\",2},{\"G728\",4},{ \"8000\",4},{NULL,0},{NULL,0} },   /*15 - G728/8000  */"
    },
    {
        "line": 20,
        "fullcodeline": "{ NULL,0,{\"16\",2},{\"DVI4\",4},{\"11025\",5},{NULL,0},{NULL,0} },   /*16 - DVI4/11025 */"
    },
    {
        "line": 21,
        "fullcodeline": "{ NULL,0,{\"17\",2},{\"DVI4\",4},{\"22050\",5},{NULL,0},{NULL,0} },   /*17 - DVI4/22050 */"
    },
    {
        "line": 22,
        "fullcodeline": "{ NULL,0,{\"18\",2},{\"G729\",4},{ \"8000\",4},{NULL,0},{NULL,0} },   /*18 - G729/8000  */"
    },
    {
        "line": 23,
        "fullcodeline": "{ NULL,0,{\"25\",2},{\"CelB\",4},{ \"8000\",4},{NULL,0},{NULL,0} },   /*25 - CelB/8000  */"
    },
    {
        "line": 24,
        "fullcodeline": "{ NULL,0,{\"26\",2},{\"JPEG\",4},{\"90000\",5},{NULL,0},{NULL,0} },   /*26 - JPEG/90000 */"
    },
    {
        "line": 25,
        "fullcodeline": "{ NULL,0,{\"28\",2},{  \"nv\",2},{\"90000\",5},{NULL,0},{NULL,0} },   /*28 -   nv/90000 */"
    },
    {
        "line": 26,
        "fullcodeline": "{ NULL,0,{\"31\",2},{\"H261\",4},{\"90000\",5},{NULL,0},{NULL,0} },   /*31 - H261/90000 */"
    },
    {
        "line": 27,
        "fullcodeline": "{ NULL,0,{\"32\",2},{ \"MPV\",3},{\"90000\",5},{NULL,0},{NULL,0} },   /*32 -  MPV/90000 */"
    },
    {
        "line": 28,
        "fullcodeline": "{ NULL,0,{\"33\",2},{\"MP2T\",4},{\"90000\",5},{NULL,0},{NULL,0} },   /*33 - MP2T/90000 */"
    },
    {
        "line": 29,
        "fullcodeline": "{ NULL,0,{\"34\",2},{\"H263\",4},{\"90000\",5},{NULL,0},{NULL,0} },   /*34 - H263/90000 */"
    },
    {
        "line": 30,
        "fullcodeline": "{ NULL,0,{\"t38\",3},{\"t38\",3},{     \"\",0},{NULL,0},{NULL,0} },   /*T38- fax        */"
    },
    {
        "line": 31,
        "fullcodeline": "{ NULL,0,{NULL,0},{  NULL,0},{   NULL,0},{NULL,0},{NULL,0} }"
    },
    {
        "line": 44,
        "fullcodeline": "LM_ERR(\"There is no lump for this sdp cell\\n\");"
    },
    {
        "line": 59,
        "fullcodeline": "LM_ERR(\"Out of memory\\n\");"
    },
    {
        "line": 76,
        "fullcodeline": "match = 0;"
    },
    {
        "line": 228,
        "fullcodeline": "lmp->u.value = (char*)pkg_realloc(lmp->u.value, lmp->len+buff_len);"
    },
    {
        "line": 238,
        "fullcodeline": "memcpy(lmp->u.value,buff,buff_len);"
    },
    {
        "line": 240,
        "fullcodeline": "lmp->len += buff_len;"
    },
    {
        "line": 247,
        "fullcodeline": "lmp->u.value = (char*)pkg_realloc(lmp->u.value, lmp->len+buff_len);"
    },
    {
        "line": 254,
        "fullcodeline": "memcpy(&lmp->u.value[lmp->len],buff,buff_len);"
    },
    {
        "line": 256,
        "fullcodeline": "lmp->len += buff_len;"
    },
    {
        "line": 265,
        "fullcodeline": "lmp = del_lump(msg, cell->port.s - msg->buf - 1, cell->port.len + 2, 0);"
    },
    {
        "line": 270,
        "fullcodeline": "tmp = pkg_malloc(3);"
    },
    {
        "line": 275,
        "fullcodeline": "memcpy(tmp, \" 0 \", 3);"
    },
    {
        "line": 45,
        "fullcodeline": "return -1;"
    },
    {
        "line": 50,
        "fullcodeline": "return -1;"
    },
    {
        "line": 60,
        "fullcodeline": "return -1;"
    },
    {
        "line": 69,
        "fullcodeline": "if( payload->rtp_enc.s == NULL"
    },
    {
        "line": 78,
        "fullcodeline": "if( description == DESC_REGEXP ||description == DESC_REGEXP_COMPLEMENT )"
    },
    {
        "line": 91,
        "fullcodeline": "if( description == DESC_REGEXP_COMPLEMENT)"
    },
    {
        "line": 94,
        "fullcodeline": "if( description == DESC_NAME  )"
    },
    {
        "line": 100,
        "fullcodeline": "if( description == DESC_NAME_AND_CLOCK)"
    },
    {
        "line": 212,
        "fullcodeline": "if (!is_static) {"
    },
    {
        "line": 229,
        "fullcodeline": "if(!lmp->u.value) {"
    },
    {
        "line": 235,
        "fullcodeline": "for( i = lmp->len -1 ; i>=0;i--)"
    },
    {
        "line": 248,
        "fullcodeline": "if(!lmp->u.value) {"
    },
    {
        "line": 266,
        "fullcodeline": "if (!lmp) {"
    },
    {
        "line": 271,
        "fullcodeline": "if (!tmp) {"
    },
    {
        "line": 276,
        "fullcodeline": "if (!insert_new_lump_after(lmp, tmp, 3, 0))"
    },
    {
        "line": 71,
        "fullcodeline": "|| payload->rtp_payload.s == NULL)"
    },
    {
        "line": 92,
        "fullcodeline": "match = !match;"
    },
    {
        "line": 96,
        "fullcodeline": "match = s->len == payload->rtp_enc.len &&"
    },
    {
        "line": 103,
        "fullcodeline": "match = s->len == payload->rtp_enc.len &&"
    },
    {
        "line": 116,
        "fullcodeline": "match = 0;"
    },
    {
        "line": 118,
        "fullcodeline": "cur = lmp->u.value;"
    },
    {
        "line": 213,
        "fullcodeline": "payload = payload->next;"
    },
    {
        "line": 230,
        "fullcodeline": "LM_ERR(\"No more pkg memory\\n\");"
    },
    {
        "line": 231,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 249,
        "fullcodeline": "LM_ERR(\"No more pkg memory\\n\");"
    },
    {
        "line": 250,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 267,
        "fullcodeline": "LM_ERR(\"could not add lump to disable stream!\\n\");"
    },
    {
        "line": 272,
        "fullcodeline": "LM_ERR(\"oom for port 0\\n\");"
    },
    {
        "line": 277,
        "fullcodeline": "LM_ERR(\"could not insert lump to disable stream!\\n\");"
    },
    {
        "line": 70,
        "fullcodeline": "|| (payload->rtp_clock.s == NULL && ss != NULL)"
    },
    {
        "line": 119,
        "fullcodeline": "while( !match && cur < lmp->u.value + lmp->len)"
    },
    {
        "line": 214,
        "fullcodeline": "if (payload==NULL) {"
    },
    {
        "line": 219,
        "fullcodeline": "payload ++;"
    },
    {
        "line": 236,
        "fullcodeline": "lmp->u.value[i+buff_len] = lmp->u.value[i];"
    },
    {
        "line": 82,
        "fullcodeline": "match = regexec( re, payload->rtp_enc.s, 1, &pmatch, 0) == 0;"
    },
    {
        "line": 97,
        "fullcodeline": "strncasecmp( s->s, payload->rtp_enc.s ,\tpayload->rtp_enc.len) == 0;"
    },
    {
        "line": 107,
        "fullcodeline": "(ss == NULL || ( ss->len == payload->rtp_clock.len &&"
    },
    {
        "line": 122,
        "fullcodeline": "found.s = cur;"
    },
    {
        "line": 127,
        "fullcodeline": "found.len = cur - found.s;"
    },
    {
        "line": 205,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 215,
        "fullcodeline": "payload = static_payloads;"
    },
    {
        "line": 216,
        "fullcodeline": "is_static = 1;"
    },
    {
        "line": 220,
        "fullcodeline": "if (payload->rtp_payload.s==NULL)"
    },
    {
        "line": 84,
        "fullcodeline": "temp = payload->rtp_enc.s[payload->rtp_enc.len];"
    },
    {
        "line": 85,
        "fullcodeline": "payload->rtp_enc.s[payload->rtp_enc.len] = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "match = regexec( re, payload->rtp_enc.s, 1, &pmatch, 0) == 0;"
    },
    {
        "line": 87,
        "fullcodeline": "payload->rtp_enc.s[payload->rtp_enc.len] = temp;"
    },
    {
        "line": 104,
        "fullcodeline": "strncasecmp( s->s, payload->rtp_enc.s ,"
    },
    {
        "line": 124,
        "fullcodeline": "while(  cur < lmp->u.value + lmp->len &&  *cur != ' ' )"
    },
    {
        "line": 125,
        "fullcodeline": "cur++;"
    },
    {
        "line": 130,
        "fullcodeline": "if ( found.len == payload->rtp_payload.len &&"
    },
    {
        "line": 144,
        "fullcodeline": "if(op == FIND)"
    },
    {
        "line": 150,
        "fullcodeline": "if( op == DELETE && !is_static )"
    },
    {
        "line": 190,
        "fullcodeline": "lmp->len -= found.len;"
    },
    {
        "line": 194,
        "fullcodeline": "if( op == ADD_TO_FRONT  || op == ADD_TO_BACK)"
    },
    {
        "line": 221,
        "fullcodeline": "payload=NULL;"
    },
    {
        "line": 108,
        "fullcodeline": "strncasecmp( ss->s, payload->rtp_clock.s ,"
    },
    {
        "line": 131,
        "fullcodeline": "strncmp( found.s,payload->rtp_payload.s,found.len) == 0) {"
    },
    {
        "line": 132,
        "fullcodeline": "match = 1;"
    },
    {
        "line": 146,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 171,
        "fullcodeline": "while (found.s > lmp->u.value && *(found.s - 1) == ' ') {"
    },
    {
        "line": 177,
        "fullcodeline": "if (cur == lmp->u.value + lmp->len) {"
    },
    {
        "line": 186,
        "fullcodeline": "for(tmp=found.s ; tmp< lmp->u.value + lmp->len ; tmp++ )"
    },
    {
        "line": 196,
        "fullcodeline": "memcpy(&buff[buff_len],\" \",1);"
    },
    {
        "line": 197,
        "fullcodeline": "buff_len++;"
    },
    {
        "line": 199,
        "fullcodeline": "memcpy(&buff[buff_len],payload->rtp_payload.s,"
    },
    {
        "line": 202,
        "fullcodeline": "buff_len += payload->rtp_payload.len;"
    },
    {
        "line": 154,
        "fullcodeline": "if( delete_sdp_line( msg, payload->rtp_enc.s, cell) < 0 )"
    },
    {
        "line": 161,
        "fullcodeline": "if( delete_sdp_line( msg, payload->fmtp_string.s, cell) < 0 )"
    },
    {
        "line": 172,
        "fullcodeline": "found.s--;"
    },
    {
        "line": 173,
        "fullcodeline": "found.len++;"
    },
    {
        "line": 178,
        "fullcodeline": "tmp = found.s;"
    },
    {
        "line": 136,
        "fullcodeline": "while( cur < lmp->u.value + lmp->len && * cur == ' '  )"
    },
    {
        "line": 137,
        "fullcodeline": "cur++;"
    },
    {
        "line": 156,
        "fullcodeline": "LM_ERR(\"Unable to add delete lump for a=\\n\");"
    },
    {
        "line": 157,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 163,
        "fullcodeline": "LM_ERR(\"Unable to add delete lump for a=\\n\");"
    },
    {
        "line": 164,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 179,
        "fullcodeline": "while (tmp>lmp->u.value && *(--tmp) == ' ') {"
    },
    {
        "line": 187,
        "fullcodeline": "*tmp  = *(tmp+found.len);"
    },
    {
        "line": 180,
        "fullcodeline": "found.s--;"
    },
    {
        "line": 181,
        "fullcodeline": "found.len++;"
    }
]