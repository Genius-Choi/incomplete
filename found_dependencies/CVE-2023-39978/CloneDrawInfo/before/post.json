[
    {
        "line": 8,
        "fullcodeline": "GetDrawInfo(image_info,clone_info);"
    },
    {
        "line": 17,
        "fullcodeline": "clone_info->compliance=draw_info->compliance;"
    },
    {
        "line": 18,
        "fullcodeline": "clone_info->viewbox=draw_info->viewbox;"
    },
    {
        "line": 19,
        "fullcodeline": "clone_info->affine=draw_info->affine;"
    },
    {
        "line": 20,
        "fullcodeline": "clone_info->gravity=draw_info->gravity;"
    },
    {
        "line": 21,
        "fullcodeline": "clone_info->fill=draw_info->fill;"
    },
    {
        "line": 22,
        "fullcodeline": "clone_info->stroke=draw_info->stroke;"
    },
    {
        "line": 23,
        "fullcodeline": "clone_info->stroke_width=draw_info->stroke_width;"
    },
    {
        "line": 31,
        "fullcodeline": "clone_info->tile=NewImageList();  /* tile is deprecated */"
    },
    {
        "line": 35,
        "fullcodeline": "clone_info->stroke_antialias=draw_info->stroke_antialias;"
    },
    {
        "line": 36,
        "fullcodeline": "clone_info->text_antialias=draw_info->text_antialias;"
    },
    {
        "line": 37,
        "fullcodeline": "clone_info->fill_rule=draw_info->fill_rule;"
    },
    {
        "line": 38,
        "fullcodeline": "clone_info->linecap=draw_info->linecap;"
    },
    {
        "line": 39,
        "fullcodeline": "clone_info->linejoin=draw_info->linejoin;"
    },
    {
        "line": 40,
        "fullcodeline": "clone_info->miterlimit=draw_info->miterlimit;"
    },
    {
        "line": 41,
        "fullcodeline": "clone_info->dash_offset=draw_info->dash_offset;"
    },
    {
        "line": 42,
        "fullcodeline": "clone_info->decorate=draw_info->decorate;"
    },
    {
        "line": 43,
        "fullcodeline": "clone_info->compose=draw_info->compose;"
    },
    {
        "line": 52,
        "fullcodeline": "clone_info->style=draw_info->style;"
    },
    {
        "line": 53,
        "fullcodeline": "clone_info->stretch=draw_info->stretch;"
    },
    {
        "line": 54,
        "fullcodeline": "clone_info->weight=draw_info->weight;"
    },
    {
        "line": 57,
        "fullcodeline": "clone_info->pointsize=draw_info->pointsize;"
    },
    {
        "line": 58,
        "fullcodeline": "clone_info->kerning=draw_info->kerning;"
    },
    {
        "line": 59,
        "fullcodeline": "clone_info->interline_spacing=draw_info->interline_spacing;"
    },
    {
        "line": 60,
        "fullcodeline": "clone_info->interword_spacing=draw_info->interword_spacing;"
    },
    {
        "line": 61,
        "fullcodeline": "clone_info->direction=draw_info->direction;"
    },
    {
        "line": 64,
        "fullcodeline": "clone_info->align=draw_info->align;"
    },
    {
        "line": 65,
        "fullcodeline": "clone_info->undercolor=draw_info->undercolor;"
    },
    {
        "line": 66,
        "fullcodeline": "clone_info->border_color=draw_info->border_color;"
    },
    {
        "line": 85,
        "fullcodeline": "clone_info->gradient=draw_info->gradient;"
    },
    {
        "line": 100,
        "fullcodeline": "clone_info->bounds=draw_info->bounds;"
    },
    {
        "line": 101,
        "fullcodeline": "clone_info->fill_opacity=draw_info->fill_opacity;"
    },
    {
        "line": 102,
        "fullcodeline": "clone_info->stroke_opacity=draw_info->stroke_opacity;"
    },
    {
        "line": 103,
        "fullcodeline": "clone_info->element_reference=draw_info->element_reference;"
    },
    {
        "line": 104,
        "fullcodeline": "clone_info->clip_path=draw_info->clip_path;"
    },
    {
        "line": 105,
        "fullcodeline": "clone_info->clip_units=draw_info->clip_units;"
    },
    {
        "line": 114,
        "fullcodeline": "clone_info->render=draw_info->render;"
    },
    {
        "line": 115,
        "fullcodeline": "clone_info->image_info=CloneImageInfo(draw_info->image_info);"
    },
    {
        "line": 116,
        "fullcodeline": "clone_info->debug=draw_info->debug;"
    },
    {
        "line": 9,
        "fullcodeline": "if (draw_info == (DrawInfo *) NULL)"
    },
    {
        "line": 11,
        "fullcodeline": "if (draw_info->id != (char *) NULL)"
    },
    {
        "line": 13,
        "fullcodeline": "if (draw_info->primitive != (char *) NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "if (draw_info->geometry != (char *) NULL)"
    },
    {
        "line": 24,
        "fullcodeline": "if (draw_info->fill_pattern != (Image *) NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "if (draw_info->stroke_pattern != (Image *) NULL)"
    },
    {
        "line": 44,
        "fullcodeline": "if (draw_info->text != (char *) NULL)"
    },
    {
        "line": 46,
        "fullcodeline": "if (draw_info->font != (char *) NULL)"
    },
    {
        "line": 48,
        "fullcodeline": "if (draw_info->metrics != (char *) NULL)"
    },
    {
        "line": 50,
        "fullcodeline": "if (draw_info->family != (char *) NULL)"
    },
    {
        "line": 55,
        "fullcodeline": "if (draw_info->encoding != (char *) NULL)"
    },
    {
        "line": 62,
        "fullcodeline": "if (draw_info->density != (char *) NULL)"
    },
    {
        "line": 67,
        "fullcodeline": "if (draw_info->server_name != (char *) NULL)"
    },
    {
        "line": 69,
        "fullcodeline": "if (draw_info->dash_pattern != (double *) NULL)"
    },
    {
        "line": 86,
        "fullcodeline": "if (draw_info->gradient.stops != (StopInfo *) NULL)"
    },
    {
        "line": 106,
        "fullcodeline": "if (draw_info->clip_mask != (char *) NULL)"
    },
    {
        "line": 108,
        "fullcodeline": "if (draw_info->clipping_mask != (Image *) NULL)"
    },
    {
        "line": 111,
        "fullcodeline": "if (draw_info->composite_mask != (Image *) NULL)"
    },
    {
        "line": 12,
        "fullcodeline": "(void) CloneString(&clone_info->id,draw_info->id);"
    },
    {
        "line": 14,
        "fullcodeline": "(void) CloneString(&clone_info->primitive,draw_info->primitive);"
    },
    {
        "line": 16,
        "fullcodeline": "(void) CloneString(&clone_info->geometry,draw_info->geometry);"
    },
    {
        "line": 25,
        "fullcodeline": "clone_info->fill_pattern=CloneImage(draw_info->fill_pattern,0,0,MagickTrue,"
    },
    {
        "line": 33,
        "fullcodeline": "clone_info->stroke_pattern=CloneImage(draw_info->stroke_pattern,0,0,"
    },
    {
        "line": 45,
        "fullcodeline": "(void) CloneString(&clone_info->text,draw_info->text);"
    },
    {
        "line": 47,
        "fullcodeline": "(void) CloneString(&clone_info->font,draw_info->font);"
    },
    {
        "line": 49,
        "fullcodeline": "(void) CloneString(&clone_info->metrics,draw_info->metrics);"
    },
    {
        "line": 51,
        "fullcodeline": "(void) CloneString(&clone_info->family,draw_info->family);"
    },
    {
        "line": 56,
        "fullcodeline": "(void) CloneString(&clone_info->encoding,draw_info->encoding);"
    },
    {
        "line": 63,
        "fullcodeline": "(void) CloneString(&clone_info->density,draw_info->density);"
    },
    {
        "line": 68,
        "fullcodeline": "(void) CloneString(&clone_info->server_name,draw_info->server_name);"
    },
    {
        "line": 75,
        "fullcodeline": "clone_info->dash_pattern=(double *) AcquireQuantumMemory((size_t) (2*x+2),"
    },
    {
        "line": 80,
        "fullcodeline": "(void) memset(clone_info->dash_pattern,0,(size_t) (2*x+2)*"
    },
    {
        "line": 82,
        "fullcodeline": "(void) memcpy(clone_info->dash_pattern,draw_info->dash_pattern,(size_t)"
    },
    {
        "line": 92,
        "fullcodeline": "clone_info->gradient.stops=(StopInfo *) AcquireQuantumMemory((size_t)"
    },
    {
        "line": 97,
        "fullcodeline": "(void) memcpy(clone_info->gradient.stops,draw_info->gradient.stops,"
    },
    {
        "line": 107,
        "fullcodeline": "(void) CloneString(&clone_info->clip_mask,draw_info->clip_mask);"
    },
    {
        "line": 109,
        "fullcodeline": "clone_info->clipping_mask=CloneImage(draw_info->clipping_mask,0,0,"
    },
    {
        "line": 112,
        "fullcodeline": "clone_info->composite_mask=CloneImage(draw_info->composite_mask,0,0,"
    },
    {
        "line": 74,
        "fullcodeline": "for (x=0; fabs(draw_info->dash_pattern[x]) >= MagickEpsilon; x++) ;"
    },
    {
        "line": 77,
        "fullcodeline": "if (clone_info->dash_pattern == (double *) NULL)"
    },
    {
        "line": 94,
        "fullcodeline": "if (clone_info->gradient.stops == (StopInfo *) NULL)"
    },
    {
        "line": 28,
        "fullcodeline": "if (draw_info->tile != (Image *) NULL)"
    },
    {
        "line": 78,
        "fullcodeline": "ThrowFatalException(ResourceLimitFatalError,"
    },
    {
        "line": 95,
        "fullcodeline": "ThrowFatalException(ResourceLimitFatalError,"
    },
    {
        "line": 98,
        "fullcodeline": "(size_t) number_stops*sizeof(*clone_info->gradient.stops));"
    },
    {
        "line": 29,
        "fullcodeline": "clone_info->fill_pattern=CloneImage(draw_info->tile,0,0,MagickTrue,"
    },
    {
        "line": 83,
        "fullcodeline": "(x+1)*sizeof(*clone_info->dash_pattern));"
    }
]