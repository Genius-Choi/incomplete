[
    {
        "line": 4,
        "fullcodeline": "txBoolean flag = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "offset = fxArgToByteLength(the, 1, 0);"
    },
    {
        "line": 22,
        "fullcodeline": "info = fxGetBufferInfo(the, mxArgv(0));"
    },
    {
        "line": 25,
        "fullcodeline": "size = fxArgToByteLength(the, 2, -1);"
    },
    {
        "line": 35,
        "fullcodeline": "mxPushSlot(mxTarget);"
    },
    {
        "line": 36,
        "fullcodeline": "fxGetPrototypeFromConstructor(the, &mxDataViewPrototype);"
    },
    {
        "line": 37,
        "fullcodeline": "instance = fxNewDataViewInstance(the);"
    },
    {
        "line": 38,
        "fullcodeline": "mxPullSlot(mxResult);"
    },
    {
        "line": 39,
        "fullcodeline": "view = instance->next;"
    },
    {
        "line": 40,
        "fullcodeline": "buffer = view->next;"
    },
    {
        "line": 41,
        "fullcodeline": "buffer->kind = XS_REFERENCE_KIND;"
    },
    {
        "line": 43,
        "fullcodeline": "info = fxGetBufferInfo(the, buffer);"
    },
    {
        "line": 53,
        "fullcodeline": "view->value.dataView.offset = offset;"
    },
    {
        "line": 54,
        "fullcodeline": "view->value.dataView.size = size;"
    },
    {
        "line": 10,
        "fullcodeline": "if (mxIsUndefined(mxTarget))"
    },
    {
        "line": 12,
        "fullcodeline": "if ((mxArgc > 0) && (mxArgv(0)->kind == XS_REFERENCE_KIND)) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (!flag)"
    },
    {
        "line": 23,
        "fullcodeline": "if (info->value.bufferInfo.length < offset)"
    },
    {
        "line": 26,
        "fullcodeline": "if (size >= 0) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (info->value.bufferInfo.maxLength >= 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "mxTypeError(\"call: DataView\");"
    },
    {
        "line": 19,
        "fullcodeline": "mxTypeError(\"buffer is no ArrayBuffer instance\");"
    },
    {
        "line": 24,
        "fullcodeline": "mxRangeError(\"out of range byteOffset %ld\", offset);"
    },
    {
        "line": 27,
        "fullcodeline": "txInteger end = offset + size;"
    },
    {
        "line": 14,
        "fullcodeline": "if (slot && ((slot->kind == XS_ARRAY_BUFFER_KIND) || (slot->kind == XS_HOST_KIND))) {"
    },
    {
        "line": 28,
        "fullcodeline": "if ((info->value.bufferInfo.length < end) || (end < offset))"
    },
    {
        "line": 42,
        "fullcodeline": "buffer->value.reference = mxArgv(0)->value.reference;"
    },
    {
        "line": 45,
        "fullcodeline": "if (info->value.bufferInfo.length < offset)"
    },
    {
        "line": 15,
        "fullcodeline": "flag = 1;"
    },
    {
        "line": 29,
        "fullcodeline": "mxRangeError(\"out of range byteLength %ld\", size);"
    },
    {
        "line": 32,
        "fullcodeline": "if (info->value.bufferInfo.maxLength < 0)"
    },
    {
        "line": 46,
        "fullcodeline": "mxRangeError(\"out of range byteOffset %ld\", offset);"
    },
    {
        "line": 33,
        "fullcodeline": "size = info->value.bufferInfo.length - offset;"
    },
    {
        "line": 13,
        "fullcodeline": "slot = mxArgv(0)->value.reference->next;"
    },
    {
        "line": 47,
        "fullcodeline": "else if (size >= 0) {"
    },
    {
        "line": 48,
        "fullcodeline": "txInteger end = offset + size;"
    },
    {
        "line": 49,
        "fullcodeline": "if ((info->value.bufferInfo.length < end) || (end < offset))"
    },
    {
        "line": 50,
        "fullcodeline": "mxRangeError(\"out of range byteLength %ld\", size);"
    }
]