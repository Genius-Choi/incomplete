[
    {
        "line": 2,
        "fullcodeline": "import ast"
    },
    {
        "line": 3,
        "fullcodeline": "import base64"
    },
    {
        "line": 4,
        "fullcodeline": "import json"
    },
    {
        "line": 5,
        "fullcodeline": "import os"
    },
    {
        "line": 6,
        "fullcodeline": "from html import unescape"
    },
    {
        "line": 8,
        "fullcodeline": "import requests"
    },
    {
        "line": 10,
        "fullcodeline": "api = f\"http://{domain}:7873/bGVhdmVfcmlnaHRfbm93\""
    },
    {
        "line": 15,
        "fullcodeline": "im_b64 = base64.b64encode(im_bytes).decode(\"utf8\")"
    },
    {
        "line": 17,
        "fullcodeline": "headers = {\"Content-type\": \"application/json\", \"Accept\": \"text/plain\"}"
    },
    {
        "line": 19,
        "fullcodeline": "status = try_get_cached(domain, {\"title\": title, \"singer\": singer, \"album\": album})"
    },
    {
        "line": 20,
        "fullcodeline": "status = ast.literal_eval(str(status))"
    },
    {
        "line": 40,
        "fullcodeline": "cmd = \"del \" + image_file"
    },
    {
        "line": 41,
        "fullcodeline": "os.system(cmd)"
    },
    {
        "line": 12,
        "fullcodeline": "with open(image_file, \"rb\") as f:"
    },
    {
        "line": 22,
        "fullcodeline": "if status is None:"
    },
    {
        "line": 23,
        "fullcodeline": "print(\"Cached version not found. Uploading image with song metadata.\")"
    },
    {
        "line": 24,
        "fullcodeline": "payload = json.dumps("
    },
    {
        "line": 27,
        "fullcodeline": "response = requests.post(api, data=payload, headers=headers)"
    },
    {
        "line": 29,
        "fullcodeline": "data = unescape(response.text)"
    },
    {
        "line": 30,
        "fullcodeline": "print(data)"
    },
    {
        "line": 33,
        "fullcodeline": "print(data)"
    },
    {
        "line": 36,
        "fullcodeline": "data = status"
    },
    {
        "line": 13,
        "fullcodeline": "im_bytes = f.read()"
    },
    {
        "line": 14,
        "fullcodeline": "f.close()"
    },
    {
        "line": 32,
        "fullcodeline": "data = ast.literal_eval(data)[\"entry\"]"
    },
    {
        "line": 25,
        "fullcodeline": "{\"image\": im_b64, \"title\": title, \"singer\": singer, \"album\": album}"
    }
]