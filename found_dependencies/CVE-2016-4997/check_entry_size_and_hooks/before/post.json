[
    {
        "line": 29,
        "fullcodeline": "err = xt_check_entry_offsets(e, e->target_offset, e->next_offset);"
    },
    {
        "line": 51,
        "fullcodeline": "e->counters = ((struct xt_counters) { 0, 0 });"
    },
    {
        "line": 52,
        "fullcodeline": "e->comefrom = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "if ((unsigned long)e % __alignof__(struct arpt_entry) != 0 ||"
    },
    {
        "line": 19,
        "fullcodeline": "if (e->next_offset"
    },
    {
        "line": 26,
        "fullcodeline": "if (!arp_checkentry(&e->arp))"
    },
    {
        "line": 34,
        "fullcodeline": "for (h = 0; h < NF_ARP_NUMHOOKS; h++) {"
    },
    {
        "line": 14,
        "fullcodeline": "(unsigned char *)e + e->next_offset > limit) {"
    },
    {
        "line": 15,
        "fullcodeline": "duprintf(\"Bad offset %p\\n\", e);"
    },
    {
        "line": 21,
        "fullcodeline": "duprintf(\"checking: element %p size %u\\n\","
    },
    {
        "line": 13,
        "fullcodeline": "(unsigned char *)e + sizeof(struct arpt_entry) >= limit ||"
    },
    {
        "line": 16,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 23,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 27,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 35,
        "fullcodeline": "if (!(valid_hooks & (1 << h)))"
    },
    {
        "line": 37,
        "fullcodeline": "if ((unsigned char *)e - base == hook_entries[h])"
    },
    {
        "line": 39,
        "fullcodeline": "if ((unsigned char *)e - base == underflows[h]) {"
    },
    {
        "line": 38,
        "fullcodeline": "newinfo->hook_entry[h] = hook_entries[h];"
    },
    {
        "line": 46,
        "fullcodeline": "newinfo->underflow[h] = underflows[h];"
    },
    {
        "line": 40,
        "fullcodeline": "if (!check_underflow(e)) {"
    },
    {
        "line": 41,
        "fullcodeline": "pr_debug(\"Underflows must be unconditional and \""
    },
    {
        "line": 44,
        "fullcodeline": "return -EINVAL;"
    }
]