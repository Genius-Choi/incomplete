[
    {
        "line": 6,
        "fullcodeline": "_cleanup_closedir_ DIR *d = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "int ret = 0, r;"
    },
    {
        "line": 9,
        "fullcodeline": "assert(fd >= 0);"
    },
    {
        "line": 14,
        "fullcodeline": "d = fdopendir(fd);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!d) {"
    },
    {
        "line": 16,
        "fullcodeline": "safe_close(fd);"
    },
    {
        "line": 20,
        "fullcodeline": "if (!(flags & REMOVE_PHYSICAL)) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (FLAGS_SET(flags, REMOVE_SYNCFS) && syncfs(dirfd(d)) < 0 && ret >= 0)"
    },
    {
        "line": 56,
        "fullcodeline": "ret = -errno;"
    },
    {
        "line": 17,
        "fullcodeline": "return -errno;"
    },
    {
        "line": 23,
        "fullcodeline": "if (fstatfs(dirfd(d), &sfs) < 0)"
    },
    {
        "line": 31,
        "fullcodeline": "_cleanup_free_ char *path = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "return -errno;"
    },
    {
        "line": 33,
        "fullcodeline": "(void) fd_get_path(fd, &path);"
    },
    {
        "line": 34,
        "fullcodeline": "return log_error_errno(SYNTHETIC_ERRNO(EPERM),"
    },
    {
        "line": 36,
        "fullcodeline": "strna(path));"
    }
]