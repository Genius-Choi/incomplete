[
    {
        "line": 3,
        "fullcodeline": "TIFFPredictorState* sp = PredictorState(tif);"
    },
    {
        "line": 4,
        "fullcodeline": "tmsize_t stride = sp->stride;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned char* cp = (unsigned char*) cp0;"
    },
    {
        "line": 7,
        "fullcodeline": "assert((cc%stride)==0);"
    },
    {
        "line": 9,
        "fullcodeline": "if (cc > stride) {"
    },
    {
        "line": 10,
        "fullcodeline": "cc -= stride;"
    },
    {
        "line": 14,
        "fullcodeline": "if (stride == 3) {"
    },
    {
        "line": 16,
        "fullcodeline": "unsigned int r2 = cp[0];"
    },
    {
        "line": 17,
        "fullcodeline": "unsigned int g2 = cp[1];"
    },
    {
        "line": 18,
        "fullcodeline": "unsigned  int b2 = cp[2];"
    },
    {
        "line": 24,
        "fullcodeline": "} while ((cc -= 3) > 0);"
    },
    {
        "line": 20,
        "fullcodeline": "r1 = cp[3]; cp[3] = (unsigned char)((r1-r2)&0xff); r2 = r1;"
    },
    {
        "line": 21,
        "fullcodeline": "g1 = cp[4]; cp[4] = (unsigned char)((g1-g2)&0xff); g2 = g1;"
    },
    {
        "line": 22,
        "fullcodeline": "b1 = cp[5]; cp[5] = (unsigned char)((b1-b2)&0xff); b2 = b1;"
    },
    {
        "line": 23,
        "fullcodeline": "cp += 3;"
    },
    {
        "line": 25,
        "fullcodeline": "} else if (stride == 4) {"
    },
    {
        "line": 27,
        "fullcodeline": "unsigned int r2 = cp[0];"
    },
    {
        "line": 28,
        "fullcodeline": "unsigned int g2 = cp[1];"
    },
    {
        "line": 29,
        "fullcodeline": "unsigned int b2 = cp[2];"
    },
    {
        "line": 30,
        "fullcodeline": "unsigned int a2 = cp[3];"
    },
    {
        "line": 37,
        "fullcodeline": "} while ((cc -= 4) > 0);"
    },
    {
        "line": 39,
        "fullcodeline": "cp += cc - 1;"
    },
    {
        "line": 32,
        "fullcodeline": "r1 = cp[4]; cp[4] = (unsigned char)((r1-r2)&0xff); r2 = r1;"
    },
    {
        "line": 33,
        "fullcodeline": "g1 = cp[5]; cp[5] = (unsigned char)((g1-g2)&0xff); g2 = g1;"
    },
    {
        "line": 34,
        "fullcodeline": "b1 = cp[6]; cp[6] = (unsigned char)((b1-b2)&0xff); b2 = b1;"
    },
    {
        "line": 35,
        "fullcodeline": "a1 = cp[7]; cp[7] = (unsigned char)((a1-a2)&0xff); a2 = a1;"
    },
    {
        "line": 36,
        "fullcodeline": "cp += 4;"
    },
    {
        "line": 42,
        "fullcodeline": "} while ((cc -= stride) > 0);"
    },
    {
        "line": 41,
        "fullcodeline": "REPEAT4(stride, cp[stride] = (unsigned char)((cp[stride] - cp[0])&0xff); cp--)"
    }
]