[
    {
        "line": 9,
        "fullcodeline": "GError *err = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "file = g_file_new_for_uri (uri);"
    },
    {
        "line": 13,
        "fullcodeline": "stream = g_file_read (file, cancellable, &err);"
    },
    {
        "line": 14,
        "fullcodeline": "g_object_unref (file);"
    },
    {
        "line": 16,
        "fullcodeline": "if (stream == NULL &&"
    },
    {
        "line": 28,
        "fullcodeline": "if (stream == NULL) {"
    },
    {
        "line": 51,
        "fullcodeline": "return G_INPUT_STREAM (stream);"
    },
    {
        "line": 17,
        "fullcodeline": "g_error_matches (err, G_IO_ERROR, G_IO_ERROR_NOT_FOUND)) {"
    },
    {
        "line": 18,
        "fullcodeline": "g_clear_error (&err);"
    },
    {
        "line": 20,
        "fullcodeline": "base = g_file_new_for_uri (base_uri);"
    },
    {
        "line": 21,
        "fullcodeline": "file = g_file_resolve_relative_path (base, uri);"
    },
    {
        "line": 22,
        "fullcodeline": "g_object_unref (base);"
    },
    {
        "line": 24,
        "fullcodeline": "stream = g_file_read (file, cancellable, &err);"
    },
    {
        "line": 25,
        "fullcodeline": "g_object_unref (file);"
    },
    {
        "line": 29,
        "fullcodeline": "g_propagate_error (error, err);"
    },
    {
        "line": 37,
        "fullcodeline": "file_info = g_file_input_stream_query_info (stream,"
    },
    {
        "line": 41,
        "fullcodeline": "if (file_info &&"
    },
    {
        "line": 42,
        "fullcodeline": "(content_type = g_file_info_get_content_type (file_info)))"
    },
    {
        "line": 43,
        "fullcodeline": "*out_mime_type = g_content_type_get_mime_type (content_type);"
    }
]