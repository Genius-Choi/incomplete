[
    {
        "line": 5,
        "fullcodeline": "char *arg = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int sz = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "ut32 val_one = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "ut32 val_two = 0;"
    },
    {
        "line": 2,
        "fullcodeline": "if (idx < 0 || idx >= JAVA_OPS_COUNT) {"
    },
    {
        "line": 169,
        "fullcodeline": "if (JAVA_OPS[idx].size > len) {"
    },
    {
        "line": 183,
        "fullcodeline": "return update_bytes_consumed (JAVA_OPS[idx].size);"
    },
    {
        "line": 112,
        "fullcodeline": "sz = enter_switch_op (addr, bytes, len);"
    },
    {
        "line": 170,
        "fullcodeline": "snprintf (output, outlen, \"truncated\");"
    },
    {
        "line": 174,
        "fullcodeline": "case 1: snprintf (output, outlen, \"%s\", JAVA_OPS[idx].name);"
    },
    {
        "line": 176,
        "fullcodeline": "case 2: snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, bytes[1]);"
    },
    {
        "line": 178,
        "fullcodeline": "case 3: snprintf (output, outlen, \"%s 0x%04x 0x%04x\", JAVA_OPS[idx].name, bytes[0], bytes[1]);"
    },
    {
        "line": 180,
        "fullcodeline": "case 5: snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, bytes[1]);"
    },
    {
        "line": 3,
        "fullcodeline": "return -1;"
    },
    {
        "line": 11,
        "fullcodeline": "return handle_switch_op (addr, bytes, len, output, outlen);"
    },
    {
        "line": 17,
        "fullcodeline": "if (len > 1) {"
    },
    {
        "line": 22,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "if (len > 2) {"
    },
    {
        "line": 29,
        "fullcodeline": "return -1;"
    },
    {
        "line": 41,
        "fullcodeline": "if (len > 1) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (len > 1) {"
    },
    {
        "line": 62,
        "fullcodeline": "return -1;"
    },
    {
        "line": 65,
        "fullcodeline": "if (len > 2) {"
    },
    {
        "line": 76,
        "fullcodeline": "return -1;"
    },
    {
        "line": 78,
        "fullcodeline": "if (len > 2) {"
    },
    {
        "line": 85,
        "fullcodeline": "return -1;"
    },
    {
        "line": 102,
        "fullcodeline": "if (len > 3) {"
    },
    {
        "line": 108,
        "fullcodeline": "return -1;"
    },
    {
        "line": 116,
        "fullcodeline": "return update_bytes_consumed (sz);"
    },
    {
        "line": 122,
        "fullcodeline": "if (len > 2) {"
    },
    {
        "line": 133,
        "fullcodeline": "return -1;"
    },
    {
        "line": 138,
        "fullcodeline": "if (len > 2) {"
    },
    {
        "line": 149,
        "fullcodeline": "return -1;"
    },
    {
        "line": 154,
        "fullcodeline": "if (len > 2) {"
    },
    {
        "line": 165,
        "fullcodeline": "return -1;"
    },
    {
        "line": 171,
        "fullcodeline": "return -1;"
    },
    {
        "line": 18,
        "fullcodeline": "snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, (char) bytes[1]);"
    },
    {
        "line": 19,
        "fullcodeline": "output[outlen - 1] = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, (int)USHORT (bytes, 1));"
    },
    {
        "line": 26,
        "fullcodeline": "output[outlen - 1] = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, bytes[1]);"
    },
    {
        "line": 43,
        "fullcodeline": "output[outlen-1] = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "arg = r_bin_java_resolve_without_space (obj, (ut16)bytes[1]);"
    },
    {
        "line": 59,
        "fullcodeline": "output[outlen - 1] = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "arg = r_bin_java_resolve_without_space (obj, (int)USHORT (bytes, 1));"
    },
    {
        "line": 73,
        "fullcodeline": "output[outlen-1] = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "val_one = (ut32)bytes[1];"
    },
    {
        "line": 80,
        "fullcodeline": "val_two = (ut32) bytes[2];"
    },
    {
        "line": 81,
        "fullcodeline": "snprintf (output, outlen, \"%s %d %d\", JAVA_OPS[idx].name, val_one, val_two);"
    },
    {
        "line": 82,
        "fullcodeline": "output[outlen-1] = 0;"
    },
    {
        "line": 103,
        "fullcodeline": "const short delta = USHORT (bytes, 1);"
    },
    {
        "line": 105,
        "fullcodeline": "output[outlen - 1] = 0;"
    },
    {
        "line": 123,
        "fullcodeline": "arg = r_bin_java_resolve_without_space (obj, (int)USHORT (bytes, 1));"
    },
    {
        "line": 130,
        "fullcodeline": "output[outlen - 1] = 0;"
    },
    {
        "line": 139,
        "fullcodeline": "arg = r_bin_java_resolve_without_space (obj, (int)USHORT (bytes, 1));"
    },
    {
        "line": 146,
        "fullcodeline": "output[outlen-1] = 0;"
    },
    {
        "line": 155,
        "fullcodeline": "arg = r_bin_java_resolve_with_space (obj, (int)USHORT (bytes, 1));"
    },
    {
        "line": 162,
        "fullcodeline": "output[outlen - 1] = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "snprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);"
    },
    {
        "line": 55,
        "fullcodeline": "free (arg);"
    },
    {
        "line": 68,
        "fullcodeline": "snprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);"
    },
    {
        "line": 69,
        "fullcodeline": "free (arg);"
    },
    {
        "line": 125,
        "fullcodeline": "snprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);"
    },
    {
        "line": 126,
        "fullcodeline": "free (arg);"
    },
    {
        "line": 141,
        "fullcodeline": "snprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);"
    },
    {
        "line": 142,
        "fullcodeline": "free (arg);"
    },
    {
        "line": 157,
        "fullcodeline": "snprintf (output, outlen, \"%s %s\", JAVA_OPS[idx].name, arg);"
    },
    {
        "line": 158,
        "fullcodeline": "free (arg);"
    },
    {
        "line": 57,
        "fullcodeline": "snprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1));"
    },
    {
        "line": 71,
        "fullcodeline": "snprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1));"
    },
    {
        "line": 128,
        "fullcodeline": "snprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1) );"
    },
    {
        "line": 144,
        "fullcodeline": "snprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1) );"
    },
    {
        "line": 160,
        "fullcodeline": "snprintf (output, outlen, \"%s #%d\", JAVA_OPS[idx].name, USHORT (bytes, 1) );"
    }
]