[
    {
        "line": 9,
        "fullcodeline": "char_u\t*str = str_arg;"
    },
    {
        "line": 14,
        "fullcodeline": "int\t\tflags = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "char_u\t*tofree = NULL;"
    },
    {
        "line": 62,
        "fullcodeline": "res = ins_compl_add(str, len, fname, NULL, NULL, dir, flags, FALSE);"
    },
    {
        "line": 63,
        "fullcodeline": "vim_free(tofree);"
    },
    {
        "line": 18,
        "fullcodeline": "if (p_ic && curbuf->b_p_inf && len > 0)"
    },
    {
        "line": 52,
        "fullcodeline": "min_len = char_len < compl_char_len ? char_len : compl_char_len;"
    },
    {
        "line": 54,
        "fullcodeline": "str = ins_compl_infercase_gettext(str, char_len,"
    },
    {
        "line": 58,
        "fullcodeline": "flags |= CP_CONT_S_IPOS;"
    },
    {
        "line": 60,
        "fullcodeline": "flags |= CP_ICASE;"
    },
    {
        "line": 25,
        "fullcodeline": "p = str;"
    },
    {
        "line": 26,
        "fullcodeline": "char_len = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "p = compl_orig_text;"
    },
    {
        "line": 40,
        "fullcodeline": "compl_char_len = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "while (*p != NUL)"
    },
    {
        "line": 34,
        "fullcodeline": "char_len = len;"
    },
    {
        "line": 41,
        "fullcodeline": "while (*p != NUL)"
    },
    {
        "line": 48,
        "fullcodeline": "compl_char_len = compl_length;"
    },
    {
        "line": 29,
        "fullcodeline": "MB_PTR_ADV(p);"
    },
    {
        "line": 30,
        "fullcodeline": "++char_len;"
    },
    {
        "line": 43,
        "fullcodeline": "MB_PTR_ADV(p);"
    },
    {
        "line": 44,
        "fullcodeline": "++compl_char_len;"
    }
]