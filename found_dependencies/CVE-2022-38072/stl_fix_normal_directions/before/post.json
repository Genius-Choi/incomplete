[
    {
        "line": 5,
        "fullcodeline": "int checked = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "head->next = tail;"
    },
    {
        "line": 27,
        "fullcodeline": "tail->next = tail;"
    },
    {
        "line": 34,
        "fullcodeline": "facet_num = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "norm_sw[facet_num] = 1;"
    },
    {
        "line": 43,
        "fullcodeline": "checked++;"
    },
    {
        "line": 104,
        "fullcodeline": "free(head);"
    },
    {
        "line": 105,
        "fullcodeline": "free(tail);"
    },
    {
        "line": 106,
        "fullcodeline": "free(norm_sw);"
    },
    {
        "line": 23,
        "fullcodeline": "if(head == NULL) perror(\"stl_fix_normal_directions\");"
    },
    {
        "line": 25,
        "fullcodeline": "if(tail == NULL) perror(\"stl_fix_normal_directions\");"
    },
    {
        "line": 31,
        "fullcodeline": "if(norm_sw == NULL) perror(\"stl_fix_normal_directions\");"
    },
    {
        "line": 38,
        "fullcodeline": "if(stl_check_normal_vector(stl, 0, 0) == 2)"
    },
    {
        "line": 39,
        "fullcodeline": "stl_reverse_facet(stl, 0);"
    },
    {
        "line": 48,
        "fullcodeline": "for(j = 0; j < 3; j++) {"
    },
    {
        "line": 71,
        "fullcodeline": "if(head->next != tail) {"
    },
    {
        "line": 77,
        "fullcodeline": "temp = head->next;\t/* Delete this facet from the list. */"
    },
    {
        "line": 79,
        "fullcodeline": "free(temp);"
    },
    {
        "line": 50,
        "fullcodeline": "if(stl->neighbors_start[facet_num].which_vertex_not[j] > 2) {"
    },
    {
        "line": 58,
        "fullcodeline": "if(stl->neighbors_start[facet_num].neighbor[j] != -1) {"
    },
    {
        "line": 73,
        "fullcodeline": "if(norm_sw[facet_num] != 1) { /* If facet is in list mutiple times */"
    },
    {
        "line": 82,
        "fullcodeline": "stl->stats.number_of_parts += 1;"
    },
    {
        "line": 74,
        "fullcodeline": "norm_sw[facet_num] = 1; /* Record this one as being fixed. */"
    },
    {
        "line": 75,
        "fullcodeline": "checked++;"
    },
    {
        "line": 83,
        "fullcodeline": "if(checked >= stl->stats.number_of_facets) {"
    },
    {
        "line": 52,
        "fullcodeline": "if(stl->neighbors_start[facet_num].neighbor[j] != -1) {"
    },
    {
        "line": 60,
        "fullcodeline": "if(norm_sw[stl->neighbors_start[facet_num].neighbor[j]] != 1) {"
    },
    {
        "line": 53,
        "fullcodeline": "stl_reverse_facet"
    },
    {
        "line": 64,
        "fullcodeline": "newn->facet_num = stl->neighbors_start[facet_num].neighbor[j];"
    },
    {
        "line": 65,
        "fullcodeline": "newn->next = head->next;"
    },
    {
        "line": 66,
        "fullcodeline": "head->next = newn;"
    },
    {
        "line": 63,
        "fullcodeline": "if(newn == NULL) perror(\"stl_fix_normal_directions\");"
    },
    {
        "line": 88,
        "fullcodeline": "for(i = 0; i < stl->stats.number_of_facets; i++) {"
    },
    {
        "line": 89,
        "fullcodeline": "if(norm_sw[i] == 0) {"
    },
    {
        "line": 91,
        "fullcodeline": "facet_num = i;"
    },
    {
        "line": 96,
        "fullcodeline": "norm_sw[facet_num] = 1;"
    },
    {
        "line": 97,
        "fullcodeline": "checked++;"
    },
    {
        "line": 92,
        "fullcodeline": "if(stl_check_normal_vector(stl, i, 0) == 2) {"
    },
    {
        "line": 93,
        "fullcodeline": "stl_reverse_facet(stl, i);"
    }
]