[
    {
        "line": 3,
        "fullcodeline": "krb5_error_code retval = KRB5KRB_AP_ERR_BADMATCH;"
    },
    {
        "line": 4,
        "fullcodeline": "char **realms, **cpp, *temp_buf=NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "krb5_data *comp1 = NULL, *comp2 = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "char *comp1_str = NULL;"
    },
    {
        "line": 90,
        "fullcodeline": "free(comp1_str);"
    },
    {
        "line": 21,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_CANONICALIZE) &&"
    },
    {
        "line": 23,
        "fullcodeline": "krb5_princ_size(kdc_context, request->server) == 2) {"
    },
    {
        "line": 25,
        "fullcodeline": "comp1 = krb5_princ_component(kdc_context, request->server, 0);"
    },
    {
        "line": 26,
        "fullcodeline": "comp2 = krb5_princ_component(kdc_context, request->server, 1);"
    },
    {
        "line": 28,
        "fullcodeline": "comp1_str = calloc(1,comp1->length+1);"
    },
    {
        "line": 33,
        "fullcodeline": "strlcpy(comp1_str,comp1->data,comp1->length+1);"
    },
    {
        "line": 22,
        "fullcodeline": "!isflagset(request->kdc_options, KDC_OPT_ENC_TKT_IN_SKEY) &&"
    },
    {
        "line": 29,
        "fullcodeline": "if (!comp1_str) {"
    },
    {
        "line": 35,
        "fullcodeline": "if ((krb5_princ_type(kdc_context, request->server) == KRB5_NT_SRV_HST ||"
    },
    {
        "line": 30,
        "fullcodeline": "retval = ENOMEM;"
    },
    {
        "line": 43,
        "fullcodeline": "(kdc_active_realm->realm_no_host_referral == NULL ||"
    },
    {
        "line": 51,
        "fullcodeline": "temp_buf = calloc(1, comp2->length+1);"
    },
    {
        "line": 56,
        "fullcodeline": "strlcpy(temp_buf, comp2->data,comp2->length+1);"
    },
    {
        "line": 57,
        "fullcodeline": "retval = krb5int_get_domain_realm_mapping(kdc_context, temp_buf, &realms);"
    },
    {
        "line": 58,
        "fullcodeline": "free(temp_buf);"
    },
    {
        "line": 81,
        "fullcodeline": "retval = krb5_build_principal(kdc_context, krbtgt_princ,"
    },
    {
        "line": 37,
        "fullcodeline": "(krb5_princ_type(kdc_context, request->server) == KRB5_NT_UNKNOWN &&"
    },
    {
        "line": 44,
        "fullcodeline": "(krb5_match_config_pattern(kdc_active_realm->realm_no_host_referral,"
    },
    {
        "line": 49,
        "fullcodeline": "if (memchr(comp2->data, '.', comp2->length) == NULL)"
    },
    {
        "line": 52,
        "fullcodeline": "if (!temp_buf) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (realms == 0) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (realms[0] == 0 ||"
    },
    {
        "line": 85,
        "fullcodeline": "for (cpp = realms; *cpp; cpp++)"
    },
    {
        "line": 86,
        "fullcodeline": "free(*cpp);"
    },
    {
        "line": 36,
        "fullcodeline": "krb5_princ_type(kdc_context, request->server) == KRB5_NT_SRV_INST ||"
    },
    {
        "line": 39,
        "fullcodeline": "(krb5_match_config_pattern(kdc_active_realm->realm_host_based_services,"
    },
    {
        "line": 46,
        "fullcodeline": "krb5_match_config_pattern(kdc_active_realm->realm_no_host_referral,"
    },
    {
        "line": 53,
        "fullcodeline": "retval = ENOMEM;"
    },
    {
        "line": 61,
        "fullcodeline": "kdc_err(kdc_context, retval, \"unable to find realm of host\");"
    },
    {
        "line": 65,
        "fullcodeline": "retval = KRB5KRB_AP_ERR_BADMATCH;"
    },
    {
        "line": 71,
        "fullcodeline": "data_eq_string(request->server->realm, realms[0])) {"
    },
    {
        "line": 72,
        "fullcodeline": "free(realms[0]);"
    },
    {
        "line": 73,
        "fullcodeline": "free(realms);"
    },
    {
        "line": 74,
        "fullcodeline": "retval = KRB5KRB_AP_ERR_BADMATCH;"
    },
    {
        "line": 38,
        "fullcodeline": "kdc_active_realm->realm_host_based_services != NULL &&"
    },
    {
        "line": 41,
        "fullcodeline": "krb5_match_config_pattern(kdc_active_realm->realm_host_based_services,"
    }
]