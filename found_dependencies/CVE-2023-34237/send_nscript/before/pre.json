[
    {
        "line": 12,
        "fullcodeline": "title = \"SABnzbd: \" + T(NOTIFICATION.get(gtype, \"other\"))"
    },
    {
        "line": 10,
        "fullcodeline": "if not script:"
    },
    {
        "line": 4,
        "fullcodeline": "script = test.get(\"nscript_script\")"
    },
    {
        "line": 5,
        "fullcodeline": "env = {\"notification_parameters\": test.get(\"nscript_parameters\")}"
    },
    {
        "line": 7,
        "fullcodeline": "script = sabnzbd.cfg.nscript_script()"
    },
    {
        "line": 8,
        "fullcodeline": "env = {\"notification_parameters\": sabnzbd.cfg.nscript_parameters()}"
    },
    {
        "line": 14,
        "fullcodeline": "if force or check_classes(gtype, \"nscript\"):"
    },
    {
        "line": 15,
        "fullcodeline": "script_path = make_script_path(script)"
    },
    {
        "line": 11,
        "fullcodeline": "return T(\"Cannot send, missing required data\")"
    },
    {
        "line": 17,
        "fullcodeline": "ret = -1"
    },
    {
        "line": 32,
        "fullcodeline": "return T('Notification script \"%s\" does not exist') % script_path"
    },
    {
        "line": 20,
        "fullcodeline": "p = build_and_run_command([script_path, gtype, title, msg], env=create_env(extra_env_fields=env))"
    },
    {
        "line": 21,
        "fullcodeline": "output = p.stdout.read()"
    },
    {
        "line": 22,
        "fullcodeline": "ret = p.wait()"
    },
    {
        "line": 27,
        "fullcodeline": "logging.error(T('Script returned exit code %s and output \"%s\"'), ret, output)"
    },
    {
        "line": 28,
        "fullcodeline": "return T('Script returned exit code %s and output \"%s\"') % (ret, output)"
    },
    {
        "line": 24,
        "fullcodeline": "logging.info(\"Failed script %s, Traceback: \", script, exc_info=True)"
    }
]