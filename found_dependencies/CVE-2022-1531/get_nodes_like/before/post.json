[
    {
        "line": 3,
        "fullcodeline": "debug = False"
    },
    {
        "line": 5,
        "fullcodeline": "t0 = timeit.default_timer()"
    },
    {
        "line": 6,
        "fullcodeline": "requested_limit = int(requested_limit)"
    },
    {
        "line": 8,
        "fullcodeline": "values = []"
    },
    {
        "line": 9,
        "fullcodeline": "n_values = 0"
    },
    {
        "line": 14,
        "fullcodeline": "floor = word[:-1]"
    },
    {
        "line": 15,
        "fullcodeline": "ceiling = floor + 'zz'"
    },
    {
        "line": 21,
        "fullcodeline": "cursor.execute(f\"SELECT term FROM terms WHERE term > \\\"{floor}\\\" AND term < \\\"{ceiling}\\\" AND term LIKE \\\"{word}%%\\\" ORDER BY length(term),term LIMIT {requested_limit}\")"
    },
    {
        "line": 22,
        "fullcodeline": "rows = cursor.fetchall()"
    },
    {
        "line": 23,
        "fullcodeline": "values_dict = {}"
    },
    {
        "line": 35,
        "fullcodeline": "t1 = timeit.default_timer()"
    },
    {
        "line": 11,
        "fullcodeline": "if len(word) < 2:"
    },
    {
        "line": 24,
        "fullcodeline": "for row in rows:"
    },
    {
        "line": 40,
        "fullcodeline": "if n_values < requested_limit:"
    },
    {
        "line": 19,
        "fullcodeline": "print(f\"INFO: Query 1\")"
    },
    {
        "line": 37,
        "fullcodeline": "print(f\"INFO: Query 1 in {t1-t0} sec\")"
    },
    {
        "line": 45,
        "fullcodeline": "word_part = word"
    },
    {
        "line": 46,
        "fullcodeline": "found_fragment = None"
    },
    {
        "line": 102,
        "fullcodeline": "t2 = timeit.default_timer()"
    },
    {
        "line": 25,
        "fullcodeline": "term = row[0]"
    },
    {
        "line": 47,
        "fullcodeline": "while len(word_part) > 2:"
    },
    {
        "line": 75,
        "fullcodeline": "if found_fragment is None:"
    },
    {
        "line": 26,
        "fullcodeline": "if term.upper() not in values_dict:"
    },
    {
        "line": 42,
        "fullcodeline": "print(f\"INFO: Query 2\")"
    },
    {
        "line": 48,
        "fullcodeline": "cursor.execute(f\"SELECT rowid, fragment FROM cached_fragments WHERE fragment == \\\"{word_part}\\\"\")"
    },
    {
        "line": 49,
        "fullcodeline": "rows = cursor.fetchall()"
    },
    {
        "line": 54,
        "fullcodeline": "word_part = word_part[:-1]"
    },
    {
        "line": 60,
        "fullcodeline": "cursor.execute(f\"SELECT term FROM cached_fragment_terms WHERE fragment_id = {fragment_id} AND term LIKE \\\"%%{word}%%\\\"\")"
    },
    {
        "line": 61,
        "fullcodeline": "rows = cursor.fetchall()"
    },
    {
        "line": 78,
        "fullcodeline": "cursor.execute(\"INSERT INTO cached_fragments(fragment) VALUES(?)\", (word,))"
    },
    {
        "line": 79,
        "fullcodeline": "fragment_id = cursor.lastrowid"
    },
    {
        "line": 84,
        "fullcodeline": "cursor.execute(\"SELECT term FROM terms WHERE term LIKE \\\"%%%s%%\\\" ORDER BY length(term),term LIMIT %s\" % (word,10000))"
    },
    {
        "line": 85,
        "fullcodeline": "rows = cursor.fetchall()"
    },
    {
        "line": 100,
        "fullcodeline": "conn.commit()"
    },
    {
        "line": 104,
        "fullcodeline": "print(f\"INFO: Query 2 in {t2-t1} sec\")"
    },
    {
        "line": 29,
        "fullcodeline": "properties = { \"curie\": '??', \"name\": term, \"type\": '??' }"
    },
    {
        "line": 30,
        "fullcodeline": "values.append(properties)"
    },
    {
        "line": 31,
        "fullcodeline": "values_dict[term.upper()] = 1"
    },
    {
        "line": 32,
        "fullcodeline": "n_values += 1"
    },
    {
        "line": 50,
        "fullcodeline": "if len(rows) > 0:"
    },
    {
        "line": 63,
        "fullcodeline": "for row in rows:"
    },
    {
        "line": 87,
        "fullcodeline": "for row in rows:"
    },
    {
        "line": 33,
        "fullcodeline": "if n_values >= requested_limit:"
    },
    {
        "line": 58,
        "fullcodeline": "print(f\"Found matching fragment {found_fragment} as fragment_id {fragment_id}\")"
    },
    {
        "line": 81,
        "fullcodeline": "print(f\"fragment_id = {fragment_id}\")"
    },
    {
        "line": 28,
        "fullcodeline": "print(f\"    - {term}\")"
    },
    {
        "line": 64,
        "fullcodeline": "term = row[0]"
    },
    {
        "line": 88,
        "fullcodeline": "term = row[0]"
    },
    {
        "line": 65,
        "fullcodeline": "if term.upper() not in values_dict:"
    },
    {
        "line": 89,
        "fullcodeline": "if term.upper() not in values_dict:"
    },
    {
        "line": 98,
        "fullcodeline": "values_dict[term.upper()] = 1"
    },
    {
        "line": 99,
        "fullcodeline": "cursor.execute(\"INSERT INTO cached_fragment_terms(fragment_id, term) VALUES(?,?)\", (fragment_id, term,))"
    },
    {
        "line": 67,
        "fullcodeline": "if n_values < requested_limit:"
    },
    {
        "line": 91,
        "fullcodeline": "if n_values < requested_limit:"
    },
    {
        "line": 70,
        "fullcodeline": "properties = { \"curie\": '??', \"name\": term, \"type\": '??' }"
    },
    {
        "line": 71,
        "fullcodeline": "values.append(properties)"
    },
    {
        "line": 72,
        "fullcodeline": "n_values += 1"
    },
    {
        "line": 94,
        "fullcodeline": "properties = { \"curie\": '??', \"name\": term, \"type\": '??' }"
    },
    {
        "line": 95,
        "fullcodeline": "values.append(properties)"
    },
    {
        "line": 96,
        "fullcodeline": "n_values += 1"
    },
    {
        "line": 69,
        "fullcodeline": "print(f\"    - {term}\")"
    },
    {
        "line": 93,
        "fullcodeline": "print(f\"    - {term}\")"
    }
]