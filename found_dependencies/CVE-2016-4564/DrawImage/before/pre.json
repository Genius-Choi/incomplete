[
    {
        "line": 11,
        "fullcodeline": "keyword[MagickPathExtent],"
    },
    {
        "line": 12,
        "fullcodeline": "geometry[MagickPathExtent],"
    },
    {
        "line": 13,
        "fullcodeline": "pattern[MagickPathExtent],"
    },
    {
        "line": 70,
        "fullcodeline": "assert(image != (Image *) NULL);"
    },
    {
        "line": 71,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 74,
        "fullcodeline": "assert(draw_info != (DrawInfo *) NULL);"
    },
    {
        "line": 75,
        "fullcodeline": "assert(draw_info->signature == MagickCoreSignature);"
    },
    {
        "line": 89,
        "fullcodeline": "primitive_extent=(double) strlen(primitive);"
    },
    {
        "line": 91,
        "fullcodeline": "n=0;"
    },
    {
        "line": 92,
        "fullcodeline": "number_stops=0;"
    },
    {
        "line": 93,
        "fullcodeline": "stops=(StopInfo *) NULL;"
    },
    {
        "line": 97,
        "fullcodeline": "graphic_context=(DrawInfo **) AcquireMagickMemory("
    },
    {
        "line": 105,
        "fullcodeline": "number_points=6553;"
    },
    {
        "line": 106,
        "fullcodeline": "primitive_info=(PrimitiveInfo *) AcquireQuantumMemory((size_t) number_points,"
    },
    {
        "line": 117,
        "fullcodeline": "graphic_context[n]=CloneDrawInfo((ImageInfo *) NULL,draw_info);"
    },
    {
        "line": 118,
        "fullcodeline": "graphic_context[n]->viewbox=image->page;"
    },
    {
        "line": 124,
        "fullcodeline": "token=AcquireString(primitive);"
    },
    {
        "line": 125,
        "fullcodeline": "extent=strlen(token)+MagickPathExtent;"
    },
    {
        "line": 128,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 72,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 76,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 78,
        "fullcodeline": "if ((draw_info->primitive == (char *) NULL) ||"
    },
    {
        "line": 81,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 83,
        "fullcodeline": "if (*draw_info->primitive != '@')"
    },
    {
        "line": 87,
        "fullcodeline": "if (primitive == (char *) NULL)"
    },
    {
        "line": 90,
        "fullcodeline": "(void) SetImageArtifact(image,\"MVG\",primitive);"
    },
    {
        "line": 99,
        "fullcodeline": "if (graphic_context == (DrawInfo **) NULL)"
    },
    {
        "line": 108,
        "fullcodeline": "if (primitive_info == (PrimitiveInfo *) NULL)"
    },
    {
        "line": 126,
        "fullcodeline": "if (SetImageStorageClass(image,DirectClass,exception) == MagickFalse)"
    },
    {
        "line": 129,
        "fullcodeline": "for (q=primitive; *q != '\\0'; )"
    },
    {
        "line": 1496,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 1501,
        "fullcodeline": "token=DestroyString(token);"
    },
    {
        "line": 1502,
        "fullcodeline": "if (primitive_info != (PrimitiveInfo *) NULL)"
    },
    {
        "line": 1504,
        "fullcodeline": "primitive=DestroyString(primitive);"
    },
    {
        "line": 1505,
        "fullcodeline": "for ( ; n >= 0; n--)"
    },
    {
        "line": 1506,
        "fullcodeline": "graphic_context[n]=DestroyDrawInfo(graphic_context[n]);"
    },
    {
        "line": 1508,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 1511,
        "fullcodeline": "return(status != 0 ? MagickTrue : MagickFalse);"
    },
    {
        "line": 73,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 77,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"...\");"
    },
    {
        "line": 79,
        "fullcodeline": "(*draw_info->primitive == '\\0'))"
    },
    {
        "line": 84,
        "fullcodeline": "primitive=AcquireString(draw_info->primitive);"
    },
    {
        "line": 101,
        "fullcodeline": "primitive=DestroyString(primitive);"
    },
    {
        "line": 102,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 110,
        "fullcodeline": "primitive=DestroyString(primitive);"
    },
    {
        "line": 113,
        "fullcodeline": "graphic_context=(DrawInfo **) RelinquishMagickMemory(graphic_context);"
    },
    {
        "line": 114,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 119,
        "fullcodeline": "if ((image->page.width == 0) || (image->page.height == 0))"
    },
    {
        "line": 134,
        "fullcodeline": "GetNextToken(q,&q,extent,keyword);"
    },
    {
        "line": 146,
        "fullcodeline": "p=q-strlen(keyword)-1;"
    },
    {
        "line": 147,
        "fullcodeline": "primitive_type=UndefinedPrimitive;"
    },
    {
        "line": 148,
        "fullcodeline": "current=graphic_context[n]->affine;"
    },
    {
        "line": 149,
        "fullcodeline": "GetAffineMatrix(&affine);"
    },
    {
        "line": 1135,
        "fullcodeline": "i=0;"
    },
    {
        "line": 1136,
        "fullcodeline": "j=0;"
    },
    {
        "line": 1172,
        "fullcodeline": "primitive_info[j].primitive=primitive_type;"
    },
    {
        "line": 1173,
        "fullcodeline": "primitive_info[j].coordinates=(size_t) x;"
    },
    {
        "line": 1174,
        "fullcodeline": "primitive_info[j].method=FloodfillMethod;"
    },
    {
        "line": 1175,
        "fullcodeline": "primitive_info[j].text=(char *) NULL;"
    },
    {
        "line": 1179,
        "fullcodeline": "bounds.x1=primitive_info[j].point.x;"
    },
    {
        "line": 1180,
        "fullcodeline": "bounds.y1=primitive_info[j].point.y;"
    },
    {
        "line": 1181,
        "fullcodeline": "bounds.x2=primitive_info[j].point.x;"
    },
    {
        "line": 1182,
        "fullcodeline": "bounds.y2=primitive_info[j].point.y;"
    },
    {
        "line": 1198,
        "fullcodeline": "length=primitive_info[j].coordinates;"
    },
    {
        "line": 1489,
        "fullcodeline": "proceed=SetImageProgress(image,RenderImageTag,q-primitive,(MagickSizeType)"
    },
    {
        "line": 1507,
        "fullcodeline": "graphic_context=(DrawInfo **) RelinquishMagickMemory(graphic_context);"
    },
    {
        "line": 82,
        "fullcodeline": "(void) LogMagickEvent(DrawEvent,GetMagickModule(),\"begin draw-image\");"
    },
    {
        "line": 86,
        "fullcodeline": "primitive=FileToString(draw_info->primitive+1,~0UL,exception);"
    },
    {
        "line": 111,
        "fullcodeline": "for ( ; n >= 0; n--)"
    },
    {
        "line": 112,
        "fullcodeline": "graphic_context[n]=DestroyDrawInfo(graphic_context[n]);"
    },
    {
        "line": 135,
        "fullcodeline": "if (*keyword == '\\0')"
    },
    {
        "line": 137,
        "fullcodeline": "if (*keyword == '#')"
    },
    {
        "line": 1095,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 1109,
        "fullcodeline": "if (primitive_type == UndefinedPrimitive)"
    },
    {
        "line": 1139,
        "fullcodeline": "for (x=0; *q != '\\0'; x++)"
    },
    {
        "line": 1183,
        "fullcodeline": "for (k=1; k < (ssize_t) primitive_info[j].coordinates; k++)"
    },
    {
        "line": 1272,
        "fullcodeline": "if ((size_t) (i+length) >= number_points)"
    },
    {
        "line": 1443,
        "fullcodeline": "if (primitive_info == (PrimitiveInfo *) NULL)"
    },
    {
        "line": 1445,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 1447,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 1455,
        "fullcodeline": "for (i=0; primitive_info[i].primitive != UndefinedPrimitive; i++)"
    },
    {
        "line": 1476,
        "fullcodeline": "if (graphic_context[n]->render != MagickFalse)"
    },
    {
        "line": 1486,
        "fullcodeline": "if (primitive_info->text != (char *) NULL)"
    },
    {
        "line": 1491,
        "fullcodeline": "if (proceed == MagickFalse)"
    },
    {
        "line": 1493,
        "fullcodeline": "if (status == 0)"
    },
    {
        "line": 1497,
        "fullcodeline": "(void) LogMagickEvent(DrawEvent,GetMagickModule(),\"end draw-image\");"
    },
    {
        "line": 1097,
        "fullcodeline": "if ((affine.sx != 1.0) || (affine.rx != 0.0) || (affine.ry != 0.0) ||"
    },
    {
        "line": 1098,
        "fullcodeline": "(affine.sy != 1.0) || (affine.tx != 0.0) || (affine.ty != 0.0))"
    },
    {
        "line": 1100,
        "fullcodeline": "graphic_context[n]->affine.sx=current.sx*affine.sx+current.ry*affine.rx;"
    },
    {
        "line": 1101,
        "fullcodeline": "graphic_context[n]->affine.rx=current.rx*affine.sx+current.sy*affine.rx;"
    },
    {
        "line": 1102,
        "fullcodeline": "graphic_context[n]->affine.ry=current.sx*affine.ry+current.ry*affine.sy;"
    },
    {
        "line": 1103,
        "fullcodeline": "graphic_context[n]->affine.sy=current.rx*affine.ry+current.sy*affine.sy;"
    },
    {
        "line": 1104,
        "fullcodeline": "graphic_context[n]->affine.tx=current.sx*affine.tx+current.ry*affine.ty+"
    },
    {
        "line": 1106,
        "fullcodeline": "graphic_context[n]->affine.ty=current.rx*affine.tx+current.sy*affine.ty+"
    },
    {
        "line": 1146,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1147,
        "fullcodeline": "point.x=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 1148,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1151,
        "fullcodeline": "point.y=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 1152,
        "fullcodeline": "GetNextToken(q,(const char **) NULL,extent,token);"
    },
    {
        "line": 1159,
        "fullcodeline": "i++;"
    },
    {
        "line": 1162,
        "fullcodeline": "number_points<<=1;"
    },
    {
        "line": 1163,
        "fullcodeline": "primitive_info=(PrimitiveInfo *) ResizeQuantumMemory(primitive_info,"
    },
    {
        "line": 1185,
        "fullcodeline": "point=primitive_info[j+k].point;"
    },
    {
        "line": 1277,
        "fullcodeline": "number_points+=length+1;"
    },
    {
        "line": 1278,
        "fullcodeline": "primitive_info=(PrimitiveInfo *) ResizeQuantumMemory(primitive_info,"
    },
    {
        "line": 1457,
        "fullcodeline": "point=primitive_info[i].point;"
    },
    {
        "line": 1458,
        "fullcodeline": "primitive_info[i].point.x=graphic_context[n]->affine.sx*point.x+"
    },
    {
        "line": 1460,
        "fullcodeline": "primitive_info[i].point.y=graphic_context[n]->affine.rx*point.x+"
    },
    {
        "line": 1462,
        "fullcodeline": "point=primitive_info[i].point;"
    },
    {
        "line": 1483,
        "fullcodeline": "status&=DrawPrimitive(image,graphic_context[n],primitive_info,"
    },
    {
        "line": 1487,
        "fullcodeline": "primitive_info->text=(char *) RelinquishMagickMemory("
    },
    {
        "line": 1503,
        "fullcodeline": "primitive_info=(PrimitiveInfo *) RelinquishMagickMemory(primitive_info);"
    },
    {
        "line": 143,
        "fullcodeline": "q++;"
    },
    {
        "line": 193,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 211,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 277,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 317,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 334,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 448,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 472,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 506,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 518,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 549,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 776,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 802,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 997,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1058,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1086,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1091,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1111,
        "fullcodeline": "if (*q == '\\0')"
    },
    {
        "line": 1127,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 1144,
        "fullcodeline": "if (IsPoint(q) == MagickFalse)"
    },
    {
        "line": 1149,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 1153,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 1160,
        "fullcodeline": "if (i < (ssize_t) number_points)"
    },
    {
        "line": 1165,
        "fullcodeline": "if (primitive_info == (PrimitiveInfo *) NULL)"
    },
    {
        "line": 1186,
        "fullcodeline": "if (point.x < bounds.x1)"
    },
    {
        "line": 1188,
        "fullcodeline": "if (point.y < bounds.y1)"
    },
    {
        "line": 1190,
        "fullcodeline": "if (point.x > bounds.x2)"
    },
    {
        "line": 1192,
        "fullcodeline": "if (point.y > bounds.y2)"
    },
    {
        "line": 1203,
        "fullcodeline": "length*=5;"
    },
    {
        "line": 1213,
        "fullcodeline": "alpha=bounds.x2-bounds.x1;"
    },
    {
        "line": 1214,
        "fullcodeline": "beta=bounds.y2-bounds.y1;"
    },
    {
        "line": 1215,
        "fullcodeline": "radius=hypot((double) alpha,(double) beta);"
    },
    {
        "line": 1216,
        "fullcodeline": "length*=5;"
    },
    {
        "line": 1217,
        "fullcodeline": "length+=2*((size_t) ceil((double) MagickPI*radius))+6*BezierQuantum+360;"
    },
    {
        "line": 1225,
        "fullcodeline": "length=BezierQuantum*primitive_info[j].coordinates;"
    },
    {
        "line": 1234,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1235,
        "fullcodeline": "length=1;"
    },
    {
        "line": 1236,
        "fullcodeline": "t=token;"
    },
    {
        "line": 1251,
        "fullcodeline": "length=length*BezierQuantum/2;"
    },
    {
        "line": 1263,
        "fullcodeline": "alpha=bounds.x2-bounds.x1;"
    },
    {
        "line": 1264,
        "fullcodeline": "beta=bounds.y2-bounds.y1;"
    },
    {
        "line": 1265,
        "fullcodeline": "radius=hypot((double) alpha,(double) beta);"
    },
    {
        "line": 1266,
        "fullcodeline": "length=2*((size_t) ceil((double) MagickPI*radius))+6*BezierQuantum+360;"
    },
    {
        "line": 1280,
        "fullcodeline": "if (primitive_info == (PrimitiveInfo *) NULL)"
    },
    {
        "line": 1299,
        "fullcodeline": "i=(ssize_t) (j+primitive_info[j].coordinates);"
    },
    {
        "line": 1311,
        "fullcodeline": "i=(ssize_t) (j+primitive_info[j].coordinates);"
    },
    {
        "line": 1323,
        "fullcodeline": "i=(ssize_t) (j+primitive_info[j].coordinates);"
    },
    {
        "line": 1335,
        "fullcodeline": "i=(ssize_t) (j+primitive_info[j].coordinates);"
    },
    {
        "line": 1347,
        "fullcodeline": "i=(ssize_t) (j+primitive_info[j].coordinates);"
    },
    {
        "line": 1359,
        "fullcodeline": "i=(ssize_t) (j+primitive_info[j].coordinates);"
    },
    {
        "line": 1371,
        "fullcodeline": "i=(ssize_t) (j+primitive_info[j].coordinates);"
    },
    {
        "line": 1378,
        "fullcodeline": "primitive_info[i]=primitive_info[j];"
    },
    {
        "line": 1381,
        "fullcodeline": "i++;"
    },
    {
        "line": 1391,
        "fullcodeline": "TraceBezier(primitive_info+j,primitive_info[j].coordinates);"
    },
    {
        "line": 1392,
        "fullcodeline": "i=(ssize_t) (j+primitive_info[j].coordinates);"
    },
    {
        "line": 1397,
        "fullcodeline": "i=(ssize_t) (j+TracePath(primitive_info+j,token));"
    },
    {
        "line": 1411,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1412,
        "fullcodeline": "method=ParseCommandOption(MagickMethodOptions,MagickFalse,token);"
    },
    {
        "line": 1438,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1446,
        "fullcodeline": "(void) LogMagickEvent(DrawEvent,GetMagickModule(),\"  %.*s\",(int) (q-p),p);"
    },
    {
        "line": 1463,
        "fullcodeline": "if (point.x < graphic_context[n]->bounds.x1)"
    },
    {
        "line": 1465,
        "fullcodeline": "if (point.y < graphic_context[n]->bounds.y1)"
    },
    {
        "line": 1467,
        "fullcodeline": "if (point.x > graphic_context[n]->bounds.x2)"
    },
    {
        "line": 1469,
        "fullcodeline": "if (point.y > graphic_context[n]->bounds.y2)"
    },
    {
        "line": 1471,
        "fullcodeline": "if (primitive_info[i].primitive == ImagePrimitive)"
    },
    {
        "line": 1473,
        "fullcodeline": "if (i >= (ssize_t) number_points)"
    },
    {
        "line": 142,
        "fullcodeline": "while ((*q != '\\n') && (*q != '\\0'))"
    },
    {
        "line": 1150,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1154,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1187,
        "fullcodeline": "bounds.x1=point.x;"
    },
    {
        "line": 1189,
        "fullcodeline": "bounds.y1=point.y;"
    },
    {
        "line": 1191,
        "fullcodeline": "bounds.x2=point.x;"
    },
    {
        "line": 1193,
        "fullcodeline": "bounds.y2=point.y;"
    },
    {
        "line": 1222,
        "fullcodeline": "if (primitive_info[j].coordinates > 107)"
    },
    {
        "line": 1237,
        "fullcodeline": "for (s=token; *s != '\\0'; s=t)"
    },
    {
        "line": 1413,
        "fullcodeline": "if (method == -1)"
    },
    {
        "line": 1426,
        "fullcodeline": "if (*token != ',')"
    },
    {
        "line": 1428,
        "fullcodeline": "primitive_info[j].text=AcquireString(token);"
    },
    {
        "line": 1439,
        "fullcodeline": "primitive_info[j].text=AcquireString(token);"
    },
    {
        "line": 1464,
        "fullcodeline": "graphic_context[n]->bounds.x1=point.x;"
    },
    {
        "line": 1466,
        "fullcodeline": "graphic_context[n]->bounds.y1=point.y;"
    },
    {
        "line": 1468,
        "fullcodeline": "graphic_context[n]->bounds.x2=point.x;"
    },
    {
        "line": 1470,
        "fullcodeline": "graphic_context[n]->bounds.y2=point.y;"
    },
    {
        "line": 1474,
        "fullcodeline": "ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 1478,
        "fullcodeline": "if ((n != 0) && (graphic_context[n]->clip_mask != (char *) NULL) &&"
    },
    {
        "line": 1479,
        "fullcodeline": "(LocaleCompare(graphic_context[n]->clip_mask,"
    },
    {
        "line": 1481,
        "fullcodeline": "status&=DrawClipPath(image,graphic_context[n],"
    },
    {
        "line": 157,
        "fullcodeline": "if (LocaleCompare(\"affine\",keyword) == 0)"
    },
    {
        "line": 159,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 160,
        "fullcodeline": "affine.sx=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 161,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 164,
        "fullcodeline": "affine.rx=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 165,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 168,
        "fullcodeline": "affine.ry=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 169,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 172,
        "fullcodeline": "affine.sy=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 173,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 176,
        "fullcodeline": "affine.tx=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 177,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 180,
        "fullcodeline": "affine.ty=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 183,
        "fullcodeline": "if (LocaleCompare(\"alpha\",keyword) == 0)"
    },
    {
        "line": 185,
        "fullcodeline": "primitive_type=AlphaPrimitive;"
    },
    {
        "line": 188,
        "fullcodeline": "if (LocaleCompare(\"arc\",keyword) == 0)"
    },
    {
        "line": 190,
        "fullcodeline": "primitive_type=ArcPrimitive;"
    },
    {
        "line": 199,
        "fullcodeline": "if (LocaleCompare(\"bezier\",keyword) == 0)"
    },
    {
        "line": 201,
        "fullcodeline": "primitive_type=BezierPrimitive;"
    },
    {
        "line": 204,
        "fullcodeline": "if (LocaleCompare(\"border-color\",keyword) == 0)"
    },
    {
        "line": 206,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 217,
        "fullcodeline": "if (LocaleCompare(\"clip-path\",keyword) == 0)"
    },
    {
        "line": 222,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 228,
        "fullcodeline": "if (LocaleCompare(\"clip-rule\",keyword) == 0)"
    },
    {
        "line": 233,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 234,
        "fullcodeline": "fill_rule=ParseCommandOption(MagickFillRuleOptions,MagickFalse,"
    },
    {
        "line": 242,
        "fullcodeline": "if (LocaleCompare(\"clip-units\",keyword) == 0)"
    },
    {
        "line": 247,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 248,
        "fullcodeline": "clip_units=ParseCommandOption(MagickClipPathOptions,MagickFalse,"
    },
    {
        "line": 255,
        "fullcodeline": "graphic_context[n]->clip_units=(ClipPathUnits) clip_units;"
    },
    {
        "line": 267,
        "fullcodeline": "if (LocaleCompare(\"circle\",keyword) == 0)"
    },
    {
        "line": 269,
        "fullcodeline": "primitive_type=CirclePrimitive;"
    },
    {
        "line": 272,
        "fullcodeline": "if (LocaleCompare(\"color\",keyword) == 0)"
    },
    {
        "line": 274,
        "fullcodeline": "primitive_type=ColorPrimitive;"
    },
    {
        "line": 283,
        "fullcodeline": "if (LocaleCompare(\"decorate\",keyword) == 0)"
    },
    {
        "line": 288,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 289,
        "fullcodeline": "decorate=ParseCommandOption(MagickDecorateOptions,MagickFalse,"
    },
    {
        "line": 297,
        "fullcodeline": "if (LocaleCompare(\"density\",keyword) == 0)"
    },
    {
        "line": 299,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 303,
        "fullcodeline": "if (LocaleCompare(\"direction\",keyword) == 0)"
    },
    {
        "line": 308,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 309,
        "fullcodeline": "direction=ParseCommandOption(MagickDirectionOptions,MagickFalse,"
    },
    {
        "line": 323,
        "fullcodeline": "if (LocaleCompare(\"ellipse\",keyword) == 0)"
    },
    {
        "line": 325,
        "fullcodeline": "primitive_type=EllipsePrimitive;"
    },
    {
        "line": 328,
        "fullcodeline": "if (LocaleCompare(\"encoding\",keyword) == 0)"
    },
    {
        "line": 330,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 340,
        "fullcodeline": "if (LocaleCompare(\"fill\",keyword) == 0)"
    },
    {
        "line": 342,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 367,
        "fullcodeline": "if (LocaleCompare(\"fill-opacity\",keyword) == 0)"
    },
    {
        "line": 369,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 370,
        "fullcodeline": "factor=strchr(token,'%') != (char *) NULL ? 0.01 : 1.0;"
    },
    {
        "line": 371,
        "fullcodeline": "graphic_context[n]->fill.alpha=(double) QuantumRange*"
    },
    {
        "line": 375,
        "fullcodeline": "if (LocaleCompare(\"fill-rule\",keyword) == 0)"
    },
    {
        "line": 380,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 381,
        "fullcodeline": "fill_rule=ParseCommandOption(MagickFillRuleOptions,MagickFalse,"
    },
    {
        "line": 389,
        "fullcodeline": "if (LocaleCompare(\"font\",keyword) == 0)"
    },
    {
        "line": 391,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 398,
        "fullcodeline": "if (LocaleCompare(\"font-family\",keyword) == 0)"
    },
    {
        "line": 400,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 404,
        "fullcodeline": "if (LocaleCompare(\"font-size\",keyword) == 0)"
    },
    {
        "line": 406,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 407,
        "fullcodeline": "graphic_context[n]->pointsize=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 410,
        "fullcodeline": "if (LocaleCompare(\"font-stretch\",keyword) == 0)"
    },
    {
        "line": 415,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 416,
        "fullcodeline": "stretch=ParseCommandOption(MagickStretchOptions,MagickFalse,token);"
    },
    {
        "line": 423,
        "fullcodeline": "if (LocaleCompare(\"font-style\",keyword) == 0)"
    },
    {
        "line": 428,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 429,
        "fullcodeline": "style=ParseCommandOption(MagickStyleOptions,MagickFalse,token);"
    },
    {
        "line": 436,
        "fullcodeline": "if (LocaleCompare(\"font-weight\",keyword) == 0)"
    },
    {
        "line": 441,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 442,
        "fullcodeline": "weight=ParseCommandOption(MagickWeightOptions,MagickFalse,token);"
    },
    {
        "line": 445,
        "fullcodeline": "graphic_context[n]->weight=(size_t) weight;"
    },
    {
        "line": 454,
        "fullcodeline": "if (LocaleCompare(\"gradient-units\",keyword) == 0)"
    },
    {
        "line": 456,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 459,
        "fullcodeline": "if (LocaleCompare(\"gravity\",keyword) == 0)"
    },
    {
        "line": 464,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 465,
        "fullcodeline": "gravity=ParseCommandOption(MagickGravityOptions,MagickFalse,token);"
    },
    {
        "line": 478,
        "fullcodeline": "if (LocaleCompare(\"image\",keyword) == 0)"
    },
    {
        "line": 483,
        "fullcodeline": "primitive_type=ImagePrimitive;"
    },
    {
        "line": 484,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 485,
        "fullcodeline": "compose=ParseCommandOption(MagickComposeOptions,MagickFalse,token);"
    },
    {
        "line": 492,
        "fullcodeline": "if (LocaleCompare(\"interline-spacing\",keyword) == 0)"
    },
    {
        "line": 494,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 495,
        "fullcodeline": "graphic_context[n]->interline_spacing=StringToDouble(token,"
    },
    {
        "line": 499,
        "fullcodeline": "if (LocaleCompare(\"interword-spacing\",keyword) == 0)"
    },
    {
        "line": 501,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 502,
        "fullcodeline": "graphic_context[n]->interword_spacing=StringToDouble(token,"
    },
    {
        "line": 512,
        "fullcodeline": "if (LocaleCompare(\"kerning\",keyword) == 0)"
    },
    {
        "line": 514,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 515,
        "fullcodeline": "graphic_context[n]->kerning=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 524,
        "fullcodeline": "if (LocaleCompare(\"line\",keyword) == 0)"
    },
    {
        "line": 525,
        "fullcodeline": "primitive_type=LinePrimitive;"
    },
    {
        "line": 533,
        "fullcodeline": "if (LocaleCompare(\"offset\",keyword) == 0)"
    },
    {
        "line": 535,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 538,
        "fullcodeline": "if (LocaleCompare(\"opacity\",keyword) == 0)"
    },
    {
        "line": 540,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 541,
        "fullcodeline": "factor=strchr(token,'%') != (char *) NULL ? 0.01 : 1.0;"
    },
    {
        "line": 542,
        "fullcodeline": "graphic_context[n]->alpha=ClampToQuantum(QuantumRange*(1.0-((1.0-"
    },
    {
        "line": 545,
        "fullcodeline": "graphic_context[n]->fill.alpha=(double) graphic_context[n]->alpha;"
    },
    {
        "line": 546,
        "fullcodeline": "graphic_context[n]->stroke.alpha=(double) graphic_context[n]->alpha;"
    },
    {
        "line": 555,
        "fullcodeline": "if (LocaleCompare(\"path\",keyword) == 0)"
    },
    {
        "line": 557,
        "fullcodeline": "primitive_type=PathPrimitive;"
    },
    {
        "line": 560,
        "fullcodeline": "if (LocaleCompare(\"point\",keyword) == 0)"
    },
    {
        "line": 562,
        "fullcodeline": "primitive_type=PointPrimitive;"
    },
    {
        "line": 565,
        "fullcodeline": "if (LocaleCompare(\"polyline\",keyword) == 0)"
    },
    {
        "line": 567,
        "fullcodeline": "primitive_type=PolylinePrimitive;"
    },
    {
        "line": 570,
        "fullcodeline": "if (LocaleCompare(\"polygon\",keyword) == 0)"
    },
    {
        "line": 572,
        "fullcodeline": "primitive_type=PolygonPrimitive;"
    },
    {
        "line": 575,
        "fullcodeline": "if (LocaleCompare(\"pop\",keyword) == 0)"
    },
    {
        "line": 577,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 604,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 607,
        "fullcodeline": "if (LocaleCompare(\"push\",keyword) == 0)"
    },
    {
        "line": 609,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 773,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 782,
        "fullcodeline": "if (LocaleCompare(\"rectangle\",keyword) == 0)"
    },
    {
        "line": 784,
        "fullcodeline": "primitive_type=RectanglePrimitive;"
    },
    {
        "line": 787,
        "fullcodeline": "if (LocaleCompare(\"rotate\",keyword) == 0)"
    },
    {
        "line": 789,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 790,
        "fullcodeline": "angle=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 791,
        "fullcodeline": "affine.sx=cos(DegreesToRadians(fmod((double) angle,360.0)));"
    },
    {
        "line": 792,
        "fullcodeline": "affine.rx=sin(DegreesToRadians(fmod((double) angle,360.0)));"
    },
    {
        "line": 793,
        "fullcodeline": "affine.ry=(-sin(DegreesToRadians(fmod((double) angle,360.0))));"
    },
    {
        "line": 794,
        "fullcodeline": "affine.sy=cos(DegreesToRadians(fmod((double) angle,360.0)));"
    },
    {
        "line": 797,
        "fullcodeline": "if (LocaleCompare(\"roundRectangle\",keyword) == 0)"
    },
    {
        "line": 799,
        "fullcodeline": "primitive_type=RoundRectanglePrimitive;"
    },
    {
        "line": 808,
        "fullcodeline": "if (LocaleCompare(\"scale\",keyword) == 0)"
    },
    {
        "line": 810,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 811,
        "fullcodeline": "affine.sx=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 812,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 815,
        "fullcodeline": "affine.sy=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 818,
        "fullcodeline": "if (LocaleCompare(\"skewX\",keyword) == 0)"
    },
    {
        "line": 820,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 821,
        "fullcodeline": "angle=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 822,
        "fullcodeline": "affine.ry=sin(DegreesToRadians(angle));"
    },
    {
        "line": 825,
        "fullcodeline": "if (LocaleCompare(\"skewY\",keyword) == 0)"
    },
    {
        "line": 827,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 828,
        "fullcodeline": "angle=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 829,
        "fullcodeline": "affine.rx=(-tan(DegreesToRadians(angle)/2.0));"
    },
    {
        "line": 832,
        "fullcodeline": "if (LocaleCompare(\"stop-color\",keyword) == 0)"
    },
    {
        "line": 837,
        "fullcodeline": "number_stops++;"
    },
    {
        "line": 850,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 854,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 858,
        "fullcodeline": "if (LocaleCompare(\"stroke\",keyword) == 0)"
    },
    {
        "line": 860,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 885,
        "fullcodeline": "if (LocaleCompare(\"stroke-antialias\",keyword) == 0)"
    },
    {
        "line": 887,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 888,
        "fullcodeline": "graphic_context[n]->stroke_antialias="
    },
    {
        "line": 892,
        "fullcodeline": "if (LocaleCompare(\"stroke-dasharray\",keyword) == 0)"
    },
    {
        "line": 939,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 942,
        "fullcodeline": "if (LocaleCompare(\"stroke-dashoffset\",keyword) == 0)"
    },
    {
        "line": 944,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 945,
        "fullcodeline": "graphic_context[n]->dash_offset=StringToDouble(token,"
    },
    {
        "line": 949,
        "fullcodeline": "if (LocaleCompare(\"stroke-linecap\",keyword) == 0)"
    },
    {
        "line": 954,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 955,
        "fullcodeline": "linecap=ParseCommandOption(MagickLineCapOptions,MagickFalse,token);"
    },
    {
        "line": 962,
        "fullcodeline": "if (LocaleCompare(\"stroke-linejoin\",keyword) == 0)"
    },
    {
        "line": 967,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 968,
        "fullcodeline": "linejoin=ParseCommandOption(MagickLineJoinOptions,MagickFalse,"
    },
    {
        "line": 976,
        "fullcodeline": "if (LocaleCompare(\"stroke-miterlimit\",keyword) == 0)"
    },
    {
        "line": 978,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 979,
        "fullcodeline": "graphic_context[n]->miterlimit=StringToUnsignedLong(token);"
    },
    {
        "line": 982,
        "fullcodeline": "if (LocaleCompare(\"stroke-opacity\",keyword) == 0)"
    },
    {
        "line": 984,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 985,
        "fullcodeline": "factor=strchr(token,'%') != (char *) NULL ? 0.01 : 1.0;"
    },
    {
        "line": 986,
        "fullcodeline": "graphic_context[n]->stroke.alpha=(double) QuantumRange*"
    },
    {
        "line": 990,
        "fullcodeline": "if (LocaleCompare(\"stroke-width\",keyword) == 0)"
    },
    {
        "line": 992,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 993,
        "fullcodeline": "graphic_context[n]->stroke_width=StringToDouble(token,"
    },
    {
        "line": 1003,
        "fullcodeline": "if (LocaleCompare(\"text\",keyword) == 0)"
    },
    {
        "line": 1005,
        "fullcodeline": "primitive_type=TextPrimitive;"
    },
    {
        "line": 1008,
        "fullcodeline": "if (LocaleCompare(\"text-align\",keyword) == 0)"
    },
    {
        "line": 1013,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1014,
        "fullcodeline": "align=ParseCommandOption(MagickAlignOptions,MagickFalse,token);"
    },
    {
        "line": 1021,
        "fullcodeline": "if (LocaleCompare(\"text-anchor\",keyword) == 0)"
    },
    {
        "line": 1026,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1027,
        "fullcodeline": "align=ParseCommandOption(MagickAlignOptions,MagickFalse,token);"
    },
    {
        "line": 1034,
        "fullcodeline": "if (LocaleCompare(\"text-antialias\",keyword) == 0)"
    },
    {
        "line": 1036,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1037,
        "fullcodeline": "graphic_context[n]->text_antialias="
    },
    {
        "line": 1041,
        "fullcodeline": "if (LocaleCompare(\"text-undercolor\",keyword) == 0)"
    },
    {
        "line": 1043,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1048,
        "fullcodeline": "if (LocaleCompare(\"translate\",keyword) == 0)"
    },
    {
        "line": 1050,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1051,
        "fullcodeline": "affine.tx=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 1052,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1055,
        "fullcodeline": "affine.ty=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 1064,
        "fullcodeline": "if (LocaleCompare(\"viewbox\",keyword) == 0)"
    },
    {
        "line": 1066,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1069,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1074,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1079,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1113,
        "fullcodeline": "if (number_stops > 1)"
    },
    {
        "line": 1124,
        "fullcodeline": "if (number_stops > 0)"
    },
    {
        "line": 1128,
        "fullcodeline": "(void) LogMagickEvent(DrawEvent,GetMagickModule(),\"  %.*s\","
    },
    {
        "line": 1167,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),"
    },
    {
        "line": 1242,
        "fullcodeline": "value=StringToDouble(s,&t);"
    },
    {
        "line": 1249,
        "fullcodeline": "length++;"
    },
    {
        "line": 1282,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),"
    },
    {
        "line": 1295,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1306,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1318,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1330,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1354,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1366,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1388,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1408,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1414,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1423,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1427,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1435,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1459,
        "fullcodeline": "graphic_context[n]->affine.ry*point.y+graphic_context[n]->affine.tx;"
    },
    {
        "line": 1461,
        "fullcodeline": "graphic_context[n]->affine.sy*point.y+graphic_context[n]->affine.ty;"
    },
    {
        "line": 162,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 166,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 170,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 174,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 178,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 207,
        "fullcodeline": "(void) QueryColorCompliance(token,AllCompliance,"
    },
    {
        "line": 223,
        "fullcodeline": "(void) CloneString(&graphic_context[n]->clip_mask,token);"
    },
    {
        "line": 224,
        "fullcodeline": "(void) DrawClipPath(image,graphic_context[n],"
    },
    {
        "line": 236,
        "fullcodeline": "if (fill_rule == -1)"
    },
    {
        "line": 250,
        "fullcodeline": "if (clip_units == -1)"
    },
    {
        "line": 256,
        "fullcodeline": "if (clip_units == ObjectBoundingBox)"
    },
    {
        "line": 291,
        "fullcodeline": "if (decorate == -1)"
    },
    {
        "line": 300,
        "fullcodeline": "(void) CloneString(&graphic_context[n]->density,token);"
    },
    {
        "line": 311,
        "fullcodeline": "if (direction == -1)"
    },
    {
        "line": 331,
        "fullcodeline": "(void) CloneString(&graphic_context[n]->encoding,token);"
    },
    {
        "line": 343,
        "fullcodeline": "(void) FormatLocaleString(pattern,MagickPathExtent,\"%s\",token);"
    },
    {
        "line": 383,
        "fullcodeline": "if (fill_rule == -1)"
    },
    {
        "line": 392,
        "fullcodeline": "(void) CloneString(&graphic_context[n]->font,token);"
    },
    {
        "line": 401,
        "fullcodeline": "(void) CloneString(&graphic_context[n]->family,token);"
    },
    {
        "line": 417,
        "fullcodeline": "if (stretch == -1)"
    },
    {
        "line": 430,
        "fullcodeline": "if (style == -1)"
    },
    {
        "line": 443,
        "fullcodeline": "if (weight == -1)"
    },
    {
        "line": 466,
        "fullcodeline": "if (gravity == -1)"
    },
    {
        "line": 486,
        "fullcodeline": "if (compose == -1)"
    },
    {
        "line": 527,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 813,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 838,
        "fullcodeline": "if (number_stops == 1)"
    },
    {
        "line": 843,
        "fullcodeline": "if (stops == (StopInfo *) NULL)"
    },
    {
        "line": 851,
        "fullcodeline": "(void) QueryColorCompliance(token,AllCompliance,&stop_color,"
    },
    {
        "line": 855,
        "fullcodeline": "stops[number_stops-1].offset=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 861,
        "fullcodeline": "(void) FormatLocaleString(pattern,MagickPathExtent,\"%s\",token);"
    },
    {
        "line": 894,
        "fullcodeline": "if (graphic_context[n]->dash_pattern != (double *) NULL)"
    },
    {
        "line": 897,
        "fullcodeline": "if (IsPoint(q) != MagickFalse)"
    },
    {
        "line": 956,
        "fullcodeline": "if (linecap == -1)"
    },
    {
        "line": 970,
        "fullcodeline": "if (linejoin == -1)"
    },
    {
        "line": 1015,
        "fullcodeline": "if (align == -1)"
    },
    {
        "line": 1028,
        "fullcodeline": "if (align == -1)"
    },
    {
        "line": 1044,
        "fullcodeline": "(void) QueryColorCompliance(token,AllCompliance,"
    },
    {
        "line": 1053,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 1070,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 1075,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 1080,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 1118,
        "fullcodeline": "type=LinearGradient;"
    },
    {
        "line": 1125,
        "fullcodeline": "stops=(StopInfo *) RelinquishMagickMemory(stops);"
    },
    {
        "line": 1223,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),DrawError,"
    },
    {
        "line": 1244,
        "fullcodeline": "if (s == t)"
    },
    {
        "line": 163,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 167,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 171,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 175,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 179,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 237,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 252,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 258,
        "fullcodeline": "GetAffineMatrix(&current);"
    },
    {
        "line": 259,
        "fullcodeline": "affine.sx=draw_info->bounds.x2;"
    },
    {
        "line": 260,
        "fullcodeline": "affine.sy=draw_info->bounds.y2;"
    },
    {
        "line": 261,
        "fullcodeline": "affine.tx=draw_info->bounds.x1;"
    },
    {
        "line": 262,
        "fullcodeline": "affine.ty=draw_info->bounds.y1;"
    },
    {
        "line": 292,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 312,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 344,
        "fullcodeline": "if (GetImageArtifact(image,pattern) != (const char *) NULL)"
    },
    {
        "line": 372,
        "fullcodeline": "factor*StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 384,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 393,
        "fullcodeline": "if (LocaleCompare(\"none\",token) == 0)"
    },
    {
        "line": 394,
        "fullcodeline": "graphic_context[n]->font=(char *)"
    },
    {
        "line": 418,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 431,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 444,
        "fullcodeline": "weight=StringToUnsignedLong(token);"
    },
    {
        "line": 467,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 487,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 578,
        "fullcodeline": "if (LocaleCompare(\"clip-path\",token) == 0)"
    },
    {
        "line": 580,
        "fullcodeline": "if (LocaleCompare(\"defs\",token) == 0)"
    },
    {
        "line": 582,
        "fullcodeline": "if (LocaleCompare(\"gradient\",token) == 0)"
    },
    {
        "line": 584,
        "fullcodeline": "if (LocaleCompare(\"graphic-context\",token) == 0)"
    },
    {
        "line": 598,
        "fullcodeline": "graphic_context[n]=DestroyDrawInfo(graphic_context[n]);"
    },
    {
        "line": 599,
        "fullcodeline": "n--;"
    },
    {
        "line": 602,
        "fullcodeline": "if (LocaleCompare(\"pattern\",token) == 0)"
    },
    {
        "line": 610,
        "fullcodeline": "if (LocaleCompare(\"clip-path\",token) == 0)"
    },
    {
        "line": 613,
        "fullcodeline": "name[MagickPathExtent];"
    },
    {
        "line": 615,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 629,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 632,
        "fullcodeline": "if (LocaleCompare(\"gradient\",token) == 0)"
    },
    {
        "line": 635,
        "fullcodeline": "key[2*MagickPathExtent],"
    },
    {
        "line": 636,
        "fullcodeline": "name[MagickPathExtent],"
    },
    {
        "line": 637,
        "fullcodeline": "type[MagickPathExtent];"
    },
    {
        "line": 642,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 644,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 646,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 647,
        "fullcodeline": "segment.x1=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 648,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 651,
        "fullcodeline": "segment.y1=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 652,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 655,
        "fullcodeline": "segment.x2=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 656,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 659,
        "fullcodeline": "segment.y2=StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 677,
        "fullcodeline": "bounds.x1=graphic_context[n]->affine.sx*segment.x1+"
    },
    {
        "line": 680,
        "fullcodeline": "bounds.y1=graphic_context[n]->affine.rx*segment.x1+"
    },
    {
        "line": 683,
        "fullcodeline": "bounds.x2=graphic_context[n]->affine.sx*segment.x2+"
    },
    {
        "line": 686,
        "fullcodeline": "bounds.y2=graphic_context[n]->affine.rx*segment.x2+"
    },
    {
        "line": 700,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 703,
        "fullcodeline": "if (LocaleCompare(\"pattern\",token) == 0)"
    },
    {
        "line": 706,
        "fullcodeline": "key[2*MagickPathExtent],"
    },
    {
        "line": 707,
        "fullcodeline": "name[MagickPathExtent];"
    },
    {
        "line": 712,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 714,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 715,
        "fullcodeline": "pattern_bounds.x=(ssize_t) ceil(StringToDouble(token,"
    },
    {
        "line": 717,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 720,
        "fullcodeline": "pattern_bounds.y=(ssize_t) ceil(StringToDouble(token,"
    },
    {
        "line": 722,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 725,
        "fullcodeline": "pattern_bounds.width=(size_t) floor(StringToDouble(token,"
    },
    {
        "line": 727,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 730,
        "fullcodeline": "pattern_bounds.height=(size_t) floor(StringToDouble(token,"
    },
    {
        "line": 752,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 755,
        "fullcodeline": "if (LocaleCompare(\"graphic-context\",token) == 0)"
    },
    {
        "line": 757,
        "fullcodeline": "n++;"
    },
    {
        "line": 758,
        "fullcodeline": "graphic_context=(DrawInfo **) ResizeQuantumMemory("
    },
    {
        "line": 767,
        "fullcodeline": "graphic_context[n]=CloneDrawInfo((ImageInfo *) NULL,"
    },
    {
        "line": 771,
        "fullcodeline": "if (LocaleCompare(\"defs\",token) == 0)"
    },
    {
        "line": 814,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 839,
        "fullcodeline": "stops=(StopInfo *) AcquireQuantumMemory(2,sizeof(*stops));"
    },
    {
        "line": 862,
        "fullcodeline": "if (GetImageArtifact(image,pattern) != (const char *) NULL)"
    },
    {
        "line": 895,
        "fullcodeline": "graphic_context[n]->dash_pattern=(double *)"
    },
    {
        "line": 902,
        "fullcodeline": "r=q;"
    },
    {
        "line": 903,
        "fullcodeline": "GetNextToken(r,&r,extent,token);"
    },
    {
        "line": 912,
        "fullcodeline": "graphic_context[n]->dash_pattern=(double *)"
    },
    {
        "line": 936,
        "fullcodeline": "graphic_context[n]->dash_pattern[j]=0.0;"
    },
    {
        "line": 957,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 971,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 987,
        "fullcodeline": "factor*StringToDouble(token,(char **) NULL);"
    },
    {
        "line": 1016,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1029,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 1054,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1071,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1076,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1077,
        "fullcodeline": "graphic_context[n]->viewbox.width=(size_t) floor(StringToDouble("
    },
    {
        "line": 1081,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 1082,
        "fullcodeline": "graphic_context[n]->viewbox.height=(size_t) floor(StringToDouble("
    },
    {
        "line": 1119,
        "fullcodeline": "if (draw_info->gradient.type == RadialGradient)"
    },
    {
        "line": 1121,
        "fullcodeline": "(void) GradientImage(image,type,PadSpread,stops,number_stops,"
    },
    {
        "line": 1129,
        "fullcodeline": "(int) (q-p),p);"
    },
    {
        "line": 1246,
        "fullcodeline": "t++;"
    },
    {
        "line": 239,
        "fullcodeline": "graphic_context[n]->fill_rule=(FillRule) fill_rule;"
    },
    {
        "line": 294,
        "fullcodeline": "graphic_context[n]->decorate=(DecorationType) decorate;"
    },
    {
        "line": 314,
        "fullcodeline": "graphic_context[n]->direction=(DirectionType) direction;"
    },
    {
        "line": 345,
        "fullcodeline": "(void) DrawPatternPath(image,draw_info,token,"
    },
    {
        "line": 349,
        "fullcodeline": "status&=QueryColorCompliance(token,AllCompliance,"
    },
    {
        "line": 386,
        "fullcodeline": "graphic_context[n]->fill_rule=(FillRule) fill_rule;"
    },
    {
        "line": 420,
        "fullcodeline": "graphic_context[n]->stretch=(StretchType) stretch;"
    },
    {
        "line": 433,
        "fullcodeline": "graphic_context[n]->style=(StyleType) style;"
    },
    {
        "line": 469,
        "fullcodeline": "graphic_context[n]->gravity=(GravityType) gravity;"
    },
    {
        "line": 489,
        "fullcodeline": "graphic_context[n]->compose=(CompositeOperator) compose;"
    },
    {
        "line": 586,
        "fullcodeline": "if (n <= 0)"
    },
    {
        "line": 593,
        "fullcodeline": "if (graphic_context[n]->clip_mask != (char *) NULL)"
    },
    {
        "line": 616,
        "fullcodeline": "(void) FormatLocaleString(name,MagickPathExtent,\"%s\",token);"
    },
    {
        "line": 617,
        "fullcodeline": "for (p=q; *q != '\\0'; )"
    },
    {
        "line": 627,
        "fullcodeline": "(void) CopyMagickString(token,p,(size_t) (q-p-4+1));"
    },
    {
        "line": 628,
        "fullcodeline": "(void) SetImageArtifact(image,name,token);"
    },
    {
        "line": 643,
        "fullcodeline": "(void) CopyMagickString(name,token,MagickPathExtent);"
    },
    {
        "line": 645,
        "fullcodeline": "(void) CopyMagickString(type,token,MagickPathExtent);"
    },
    {
        "line": 649,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 653,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 657,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 666,
        "fullcodeline": "for (p=q; *q != '\\0'; )"
    },
    {
        "line": 676,
        "fullcodeline": "(void) CopyMagickString(token,p,(size_t) (q-p-4+1));"
    },
    {
        "line": 689,
        "fullcodeline": "(void) FormatLocaleString(key,MagickPathExtent,\"%s\",name);"
    },
    {
        "line": 690,
        "fullcodeline": "(void) SetImageArtifact(image,key,token);"
    },
    {
        "line": 691,
        "fullcodeline": "(void) FormatLocaleString(key,MagickPathExtent,\"%s-type\",name);"
    },
    {
        "line": 692,
        "fullcodeline": "(void) SetImageArtifact(image,key,type);"
    },
    {
        "line": 693,
        "fullcodeline": "(void) FormatLocaleString(key,MagickPathExtent,\"%s-geometry\",name);"
    },
    {
        "line": 694,
        "fullcodeline": "(void) FormatLocaleString(geometry,MagickPathExtent,"
    },
    {
        "line": 699,
        "fullcodeline": "(void) SetImageArtifact(image,key,geometry);"
    },
    {
        "line": 713,
        "fullcodeline": "(void) CopyMagickString(name,token,MagickPathExtent);"
    },
    {
        "line": 718,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 723,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 728,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 732,
        "fullcodeline": "for (p=q; *q != '\\0'; )"
    },
    {
        "line": 742,
        "fullcodeline": "(void) CopyMagickString(token,p,(size_t) (q-p-4+1));"
    },
    {
        "line": 743,
        "fullcodeline": "(void) FormatLocaleString(key,MagickPathExtent,\"%s\",name);"
    },
    {
        "line": 744,
        "fullcodeline": "(void) SetImageArtifact(image,key,token);"
    },
    {
        "line": 745,
        "fullcodeline": "(void) FormatLocaleString(key,MagickPathExtent,\"%s-geometry\","
    },
    {
        "line": 747,
        "fullcodeline": "(void) FormatLocaleString(geometry,MagickPathExtent,"
    },
    {
        "line": 751,
        "fullcodeline": "(void) SetImageArtifact(image,key,geometry);"
    },
    {
        "line": 760,
        "fullcodeline": "if (graphic_context == (DrawInfo **) NULL)"
    },
    {
        "line": 845,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),"
    },
    {
        "line": 853,
        "fullcodeline": "stops[number_stops-1].color=stop_color;"
    },
    {
        "line": 863,
        "fullcodeline": "(void) DrawPatternPath(image,draw_info,token,"
    },
    {
        "line": 867,
        "fullcodeline": "status&=QueryColorCompliance(token,AllCompliance,"
    },
    {
        "line": 889,
        "fullcodeline": "StringToLong(token) != 0 ? MagickTrue : MagickFalse;"
    },
    {
        "line": 904,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 906,
        "fullcodeline": "for (x=0; IsPoint(token) != MagickFalse; x++)"
    },
    {
        "line": 915,
        "fullcodeline": "if (graphic_context[n]->dash_pattern == (double *) NULL)"
    },
    {
        "line": 922,
        "fullcodeline": "for (j=0; j < x; j++)"
    },
    {
        "line": 959,
        "fullcodeline": "graphic_context[n]->linecap=(LineCap) linecap;"
    },
    {
        "line": 973,
        "fullcodeline": "graphic_context[n]->linejoin=(LineJoin) linejoin;"
    },
    {
        "line": 1018,
        "fullcodeline": "graphic_context[n]->align=(AlignType) align;"
    },
    {
        "line": 1031,
        "fullcodeline": "graphic_context[n]->align=(AlignType) align;"
    },
    {
        "line": 1038,
        "fullcodeline": "StringToLong(token) != 0 ? MagickTrue : MagickFalse;"
    },
    {
        "line": 1067,
        "fullcodeline": "graphic_context[n]->viewbox.x=(ssize_t) ceil(StringToDouble(token,"
    },
    {
        "line": 1072,
        "fullcodeline": "graphic_context[n]->viewbox.y=(ssize_t) ceil(StringToDouble(token,"
    },
    {
        "line": 1120,
        "fullcodeline": "type=RadialGradient;"
    },
    {
        "line": 1480,
        "fullcodeline": "graphic_context[n-1]->clip_mask) != 0))"
    },
    {
        "line": 351,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 395,
        "fullcodeline": "RelinquishMagickMemory(graphic_context[n]->font);"
    },
    {
        "line": 590,
        "fullcodeline": "n=0;"
    },
    {
        "line": 619,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 622,
        "fullcodeline": "GetNextToken(q,(const char **) NULL,extent,token);"
    },
    {
        "line": 650,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 654,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 658,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 660,
        "fullcodeline": "if (LocaleCompare(type,\"radial\") == 0)"
    },
    {
        "line": 662,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 668,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 671,
        "fullcodeline": "GetNextToken(q,(const char **) NULL,extent,token);"
    },
    {
        "line": 696,
        "fullcodeline": "MagickMax(fabs(bounds.x2-bounds.x1+1.0),1.0),"
    },
    {
        "line": 697,
        "fullcodeline": "MagickMax(fabs(bounds.y2-bounds.y1+1.0),1.0),"
    },
    {
        "line": 719,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 724,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 729,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 734,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 737,
        "fullcodeline": "GetNextToken(q,(const char **) NULL,extent,token);"
    },
    {
        "line": 840,
        "fullcodeline": "else if (number_stops > 2)"
    },
    {
        "line": 869,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 896,
        "fullcodeline": "RelinquishMagickMemory(graphic_context[n]->dash_pattern);"
    },
    {
        "line": 905,
        "fullcodeline": "GetNextToken(r,&r,extent,token);"
    },
    {
        "line": 908,
        "fullcodeline": "GetNextToken(r,&r,extent,token);"
    },
    {
        "line": 913,
        "fullcodeline": "AcquireQuantumMemory((size_t) (2UL*x+1UL),"
    },
    {
        "line": 924,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 927,
        "fullcodeline": "graphic_context[n]->dash_pattern[j]=StringToDouble(token,"
    },
    {
        "line": 932,
        "fullcodeline": "if ((x & 0x01) != 0)"
    },
    {
        "line": 356,
        "fullcodeline": "pattern_info=AcquireImageInfo();"
    },
    {
        "line": 359,
        "fullcodeline": "graphic_context[n]->fill_pattern=ReadImage(pattern_info,"
    },
    {
        "line": 361,
        "fullcodeline": "CatchException(exception);"
    },
    {
        "line": 544,
        "fullcodeline": "StringToDouble(token,(char **) NULL))));"
    },
    {
        "line": 588,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),"
    },
    {
        "line": 663,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 678,
        "fullcodeline": "graphic_context[n]->affine.ry*segment.y1+"
    },
    {
        "line": 681,
        "fullcodeline": "graphic_context[n]->affine.sy*segment.y1+"
    },
    {
        "line": 684,
        "fullcodeline": "graphic_context[n]->affine.ry*segment.y2+"
    },
    {
        "line": 687,
        "fullcodeline": "graphic_context[n]->affine.sy*segment.y2+"
    },
    {
        "line": 759,
        "fullcodeline": "graphic_context,(size_t) (n+1),sizeof(*graphic_context));"
    },
    {
        "line": 762,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),"
    },
    {
        "line": 768,
        "fullcodeline": "graphic_context[n-1]);"
    },
    {
        "line": 841,
        "fullcodeline": "stops=(StopInfo *) ResizeQuantumMemory(stops,number_stops,"
    },
    {
        "line": 874,
        "fullcodeline": "pattern_info=AcquireImageInfo();"
    },
    {
        "line": 877,
        "fullcodeline": "graphic_context[n]->stroke_pattern=ReadImage(pattern_info,"
    },
    {
        "line": 879,
        "fullcodeline": "CatchException(exception);"
    },
    {
        "line": 909,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 917,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),"
    },
    {
        "line": 925,
        "fullcodeline": "if (*token == ',')"
    },
    {
        "line": 933,
        "fullcodeline": "for ( ; j < (2*x); j++)"
    },
    {
        "line": 357,
        "fullcodeline": "(void) CopyMagickString(pattern_info->filename,token,"
    },
    {
        "line": 362,
        "fullcodeline": "pattern_info=DestroyImageInfo(pattern_info);"
    },
    {
        "line": 594,
        "fullcodeline": "if (LocaleCompare(graphic_context[n]->clip_mask,"
    },
    {
        "line": 620,
        "fullcodeline": "if (LocaleCompare(token,\"pop\") != 0)"
    },
    {
        "line": 623,
        "fullcodeline": "if (LocaleCompare(token,\"clip-path\") != 0)"
    },
    {
        "line": 664,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 669,
        "fullcodeline": "if (LocaleCompare(token,\"pop\") != 0)"
    },
    {
        "line": 672,
        "fullcodeline": "if (LocaleCompare(token,\"gradient\") != 0)"
    },
    {
        "line": 735,
        "fullcodeline": "if (LocaleCompare(token,\"pop\") != 0)"
    },
    {
        "line": 738,
        "fullcodeline": "if (LocaleCompare(token,\"pattern\") != 0)"
    },
    {
        "line": 875,
        "fullcodeline": "(void) CopyMagickString(pattern_info->filename,token,"
    },
    {
        "line": 880,
        "fullcodeline": "pattern_info=DestroyImageInfo(pattern_info);"
    },
    {
        "line": 910,
        "fullcodeline": "GetNextToken(r,&r,extent,token);"
    },
    {
        "line": 926,
        "fullcodeline": "GetNextToken(q,&q,extent,token);"
    },
    {
        "line": 930,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 543,
        "fullcodeline": "QuantumScale*graphic_context[n]->alpha)*factor*"
    },
    {
        "line": 596,
        "fullcodeline": "(void) SetImageMask(image,ReadPixelMask,(Image *) NULL,"
    },
    {
        "line": 935,
        "fullcodeline": "graphic_context[n]->dash_pattern[j-x];"
    },
    {
        "line": 595,
        "fullcodeline": "graphic_context[n-1]->clip_mask) != 0)"
    }
]