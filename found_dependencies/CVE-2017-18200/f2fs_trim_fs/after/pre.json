[
    {
        "line": 3,
        "fullcodeline": "__u64 start = F2FS_BYTES_TO_BLK(range->start);"
    },
    {
        "line": 4,
        "fullcodeline": "__u64 end = start + F2FS_BYTES_TO_BLK(range->len) - 1;"
    },
    {
        "line": 7,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "cpc.trimmed = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "start_segno = (start <= MAIN_BLKADDR(sbi)) ? 0 : GET_SEGNO(sbi, start);"
    },
    {
        "line": 24,
        "fullcodeline": "end_segno = (end >= MAX_BLKADDR(sbi)) ? MAIN_SEGS(sbi) - 1 :"
    },
    {
        "line": 26,
        "fullcodeline": "cpc.reason = CP_DISCARD;"
    },
    {
        "line": 27,
        "fullcodeline": "cpc.trim_minlen = max_t(__u64, 1, F2FS_BYTES_TO_BLK(range->minlen));"
    },
    {
        "line": 52,
        "fullcodeline": "mark_discard_range_all(sbi);"
    },
    {
        "line": 53,
        "fullcodeline": "f2fs_wait_discard_bios(sbi, false);"
    },
    {
        "line": 9,
        "fullcodeline": "if (start >= MAX_BLKADDR(sbi) || range->len < sbi->blocksize)"
    },
    {
        "line": 13,
        "fullcodeline": "if (end <= MAIN_BLKADDR(sbi))"
    },
    {
        "line": 16,
        "fullcodeline": "if (is_sbi_flag_set(sbi, SBI_NEED_FSCK)) {"
    },
    {
        "line": 30,
        "fullcodeline": "for (; start_segno <= end_segno; start_segno = cpc.trim_end + 1) {"
    },
    {
        "line": 55,
        "fullcodeline": "range->len = F2FS_BLK_TO_BYTES(cpc.trimmed);"
    },
    {
        "line": 17,
        "fullcodeline": "f2fs_msg(sbi->sb, KERN_WARNING,"
    },
    {
        "line": 25,
        "fullcodeline": "GET_SEGNO(sbi, end);"
    },
    {
        "line": 31,
        "fullcodeline": "cpc.trim_start = start_segno;"
    },
    {
        "line": 43,
        "fullcodeline": "mutex_lock(&sbi->gc_mutex);"
    },
    {
        "line": 44,
        "fullcodeline": "err = write_checkpoint(sbi, &cpc);"
    },
    {
        "line": 45,
        "fullcodeline": "mutex_unlock(&sbi->gc_mutex);"
    },
    {
        "line": 10,
        "fullcodeline": "return -EINVAL;"
    }
]