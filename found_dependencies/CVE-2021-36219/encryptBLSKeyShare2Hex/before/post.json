[
    {
        "line": 2,
        "fullcodeline": "auto keyArray = make_shared<vector<char>>(BUF_LEN, 0);"
    },
    {
        "line": 3,
        "fullcodeline": "auto encryptedKey = make_shared<vector<uint8_t>>(BUF_LEN, 0);"
    },
    {
        "line": 4,
        "fullcodeline": "auto errMsg = make_shared<vector<char>>(BUF_LEN, 0);"
    },
    {
        "line": 5,
        "fullcodeline": "strncpy(keyArray->data(), _key, BUF_LEN);"
    },
    {
        "line": 6,
        "fullcodeline": "*errStatus = -1;"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned int encryptedLen = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "status = trustedEncryptKeyAES(eid, errStatus, errMsg->data(), keyArray->data(), encryptedKey->data(), &encryptedLen);"
    },
    {
        "line": 13,
        "fullcodeline": "spdlog::debug(\"errStatus is {}\", *errStatus);"
    },
    {
        "line": 14,
        "fullcodeline": "spdlog::debug(\" errMsg is \", errMsg->data());"
    },
    {
        "line": 28,
        "fullcodeline": "char *result = (char *) calloc(2 * BUF_LEN, 1);"
    },
    {
        "line": 30,
        "fullcodeline": "carray2Hex(encryptedKey->data(), encryptedLen, result);"
    },
    {
        "line": 17,
        "fullcodeline": "if (status != SGX_SUCCESS) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (*errStatus != 0) {"
    },
    {
        "line": 19,
        "fullcodeline": "*errStatus = -1;"
    },
    {
        "line": 24,
        "fullcodeline": "throw SGXException(-666, errMsg->data());"
    }
]