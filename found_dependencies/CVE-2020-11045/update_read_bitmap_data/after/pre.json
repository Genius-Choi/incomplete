[
    {
        "line": 3,
        "fullcodeline": "WINPR_UNUSED(update);"
    },
    {
        "line": 7,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->destLeft);"
    },
    {
        "line": 8,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->destTop);"
    },
    {
        "line": 9,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->destRight);"
    },
    {
        "line": 10,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->destBottom);"
    },
    {
        "line": 11,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->width);"
    },
    {
        "line": 12,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->height);"
    },
    {
        "line": 13,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->bitsPerPixel);"
    },
    {
        "line": 14,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->flags);"
    },
    {
        "line": 15,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->bitmapLength);"
    },
    {
        "line": 4,
        "fullcodeline": "if (Stream_GetRemainingLength(s) < 18)"
    },
    {
        "line": 17,
        "fullcodeline": "if (bitmapData->flags & BITMAP_COMPRESSION)"
    },
    {
        "line": 39,
        "fullcodeline": "if (Stream_GetRemainingLength(s) < bitmapData->bitmapLength)"
    },
    {
        "line": 42,
        "fullcodeline": "if (bitmapData->bitmapLength > 0)"
    },
    {
        "line": 44,
        "fullcodeline": "bitmapData->bitmapDataStream = malloc(bitmapData->bitmapLength);"
    },
    {
        "line": 49,
        "fullcodeline": "memcpy(bitmapData->bitmapDataStream, Stream_Pointer(s), bitmapData->bitmapLength);"
    },
    {
        "line": 46,
        "fullcodeline": "if (!bitmapData->bitmapDataStream)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!(bitmapData->flags & NO_BITMAP_COMPRESSION_HDR))"
    },
    {
        "line": 24,
        "fullcodeline": "Stream_Read_UINT16(s,"
    },
    {
        "line": 26,
        "fullcodeline": "Stream_Read_UINT16(s,"
    },
    {
        "line": 28,
        "fullcodeline": "Stream_Read_UINT16(s, bitmapData->cbScanWidth);     /* cbScanWidth (2 bytes) */"
    },
    {
        "line": 29,
        "fullcodeline": "Stream_Read_UINT16(s,"
    },
    {
        "line": 31,
        "fullcodeline": "bitmapData->bitmapLength = bitmapData->cbCompMainBodySize;"
    },
    {
        "line": 21,
        "fullcodeline": "if (Stream_GetRemainingLength(s) < 8)"
    }
]