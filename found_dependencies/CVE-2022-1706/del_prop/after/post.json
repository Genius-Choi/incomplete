[
    {
        "line": 7,
        "fullcodeline": "struct vbg_ioctl_hgcm_call _cleanup_free_ *msg = calloc(1, msg_size);"
    },
    {
        "line": 9,
        "fullcodeline": "init_header(&msg->hdr, msg_size - sizeof(msg->hdr), msg_size - sizeof(msg->hdr));"
    },
    {
        "line": 10,
        "fullcodeline": "msg->client_id = client_id;"
    },
    {
        "line": 11,
        "fullcodeline": "msg->function = GUEST_PROP_FN_DEL_PROP;"
    },
    {
        "line": 12,
        "fullcodeline": "msg->timeout_ms = -1;  // inf"
    },
    {
        "line": 13,
        "fullcodeline": "msg->interruptible = 1;"
    },
    {
        "line": 14,
        "fullcodeline": "msg->parm_count = 1;"
    },
    {
        "line": 17,
        "fullcodeline": "struct vmmdev_hgcm_function_parameter64 *params = (void *) (msg + 1);"
    },
    {
        "line": 19,
        "fullcodeline": "params[0].type = VMMDEV_HGCM_PARM_TYPE_LINADDR_IN;"
    },
    {
        "line": 20,
        "fullcodeline": "params[0].u.pointer.size = strlen(name) + 1;"
    },
    {
        "line": 21,
        "fullcodeline": "params[0].u.pointer.u.linear_addr = (uintptr_t) name;"
    },
    {
        "line": 24,
        "fullcodeline": "if (ioctl(fd, VBG_IOCTL_HGCM_CALL_64(msg_size), msg)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (msg->hdr.rc != VINF_SUCCESS) {"
    }
]