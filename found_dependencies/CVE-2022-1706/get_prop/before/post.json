[
    {
        "line": 3,
        "fullcodeline": "size_t msg_size = sizeof(struct vbg_ioctl_hgcm_call) + 4 * sizeof(struct vmmdev_hgcm_function_parameter64);"
    },
    {
        "line": 4,
        "fullcodeline": "struct vbg_ioctl_hgcm_call _cleanup_free_ *msg = calloc(1, msg_size);"
    },
    {
        "line": 6,
        "fullcodeline": "init_header(&msg->hdr, msg_size - sizeof(msg->hdr), msg_size - sizeof(msg->hdr));"
    },
    {
        "line": 7,
        "fullcodeline": "msg->client_id = client_id;"
    },
    {
        "line": 8,
        "fullcodeline": "msg->function = 1;     // GUEST_PROP_FN_GET_PROP"
    },
    {
        "line": 9,
        "fullcodeline": "msg->timeout_ms = -1;  // inf"
    },
    {
        "line": 10,
        "fullcodeline": "msg->interruptible = 1;"
    },
    {
        "line": 11,
        "fullcodeline": "msg->parm_count = 4;"
    },
    {
        "line": 15,
        "fullcodeline": "struct vmmdev_hgcm_function_parameter64 *params = (void *) (msg + 1);"
    },
    {
        "line": 17,
        "fullcodeline": "params[0].type = VMMDEV_HGCM_PARM_TYPE_LINADDR_IN;"
    },
    {
        "line": 18,
        "fullcodeline": "params[0].u.pointer.size = strlen(name) + 1;"
    },
    {
        "line": 19,
        "fullcodeline": "params[0].u.pointer.u.linear_addr = (uintptr_t) name;"
    },
    {
        "line": 21,
        "fullcodeline": "params[1].type = VMMDEV_HGCM_PARM_TYPE_LINADDR;"
    },
    {
        "line": 22,
        "fullcodeline": "params[1].u.pointer.size = 1;"
    },
    {
        "line": 23,
        "fullcodeline": "params[1].u.pointer.u.linear_addr = (uintptr_t) &ch;"
    },
    {
        "line": 25,
        "fullcodeline": "params[2].type = VMMDEV_HGCM_PARM_TYPE_64BIT;"
    },
    {
        "line": 27,
        "fullcodeline": "params[3].type = VMMDEV_HGCM_PARM_TYPE_32BIT;"
    },
    {
        "line": 30,
        "fullcodeline": "if (ioctl(fd, VBG_IOCTL_HGCM_CALL_64(msg_size), msg)) {"
    },
    {
        "line": 39,
        "fullcodeline": "void _cleanup_free_ *buf = malloc(buf_size);"
    },
    {
        "line": 40,
        "fullcodeline": "params[1].u.pointer.size = buf_size;"
    },
    {
        "line": 41,
        "fullcodeline": "params[1].u.pointer.u.linear_addr = (uintptr_t) buf;"
    },
    {
        "line": 50,
        "fullcodeline": "*value = buf;"
    },
    {
        "line": 51,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 52,
        "fullcodeline": "*size = buf_size;"
    },
    {
        "line": 55,
        "fullcodeline": "*value = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "*size = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "if (ioctl(fd, VBG_IOCTL_HGCM_CALL_64(msg_size), msg)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (msg->hdr.rc != VINF_SUCCESS) {"
    }
]