[
    {
        "line": 21,
        "fullcodeline": "abs_path = os.path.join(job_base_dir, path)"
    },
    {
        "line": 24,
        "fullcodeline": "back_path = os.path.dirname(abs_path).replace(job_base_dir, \"\")"
    },
    {
        "line": 35,
        "fullcodeline": "files_info = []"
    },
    {
        "line": 38,
        "fullcodeline": "files = os.listdir(abs_path)"
    },
    {
        "line": 27,
        "fullcodeline": "if not os.path.exists(abs_path):"
    },
    {
        "line": 41,
        "fullcodeline": "for file in files:"
    },
    {
        "line": 47,
        "fullcodeline": "return render_template('job_dir.html', title=f\"Job {job_id} Directory\","
    },
    {
        "line": 10,
        "fullcodeline": "job_info = query_internal_api(f\"/internal/jobs/{job_id}\", \"get\")"
    },
    {
        "line": 13,
        "fullcodeline": "job_base_dir = os.path.dirname(os.path.dirname(job_info[\"outputdir\"]))"
    },
    {
        "line": 28,
        "fullcodeline": "flash(\"Directory for this job does not exist.\", \"warning\")"
    },
    {
        "line": 32,
        "fullcodeline": "if os.path.isfile(abs_path):"
    },
    {
        "line": 29,
        "fullcodeline": "return redirect(url_for(\"job_page\", job_id=job_id))"
    },
    {
        "line": 33,
        "fullcodeline": "return send_file(abs_path)"
    },
    {
        "line": 42,
        "fullcodeline": "files_info.append({"
    },
    {
        "line": 17,
        "fullcodeline": "flash(str(err), \"danger\")"
    },
    {
        "line": 18,
        "fullcodeline": "return redirect(url_for(\"job_page\", job_id=job_id))"
    },
    {
        "line": 44,
        "fullcodeline": "\"directory\": os.path.isdir(os.path.join(abs_path, file))"
    }
]