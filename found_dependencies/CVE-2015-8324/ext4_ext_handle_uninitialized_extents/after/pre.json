[
    {
        "line": 7,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "ext4_io_end_t *io = EXT4_I(inode)->cur_aio_dio;"
    },
    {
        "line": 11,
        "fullcodeline": "ext_debug(\"ext4_ext_handle_uninitialized_extents: inode %lu, logical\""
    },
    {
        "line": 15,
        "fullcodeline": "ext4_ext_show_leaf(inode, path);"
    },
    {
        "line": 65,
        "fullcodeline": "ret = ext4_ext_convert_to_initialized(handle, inode,"
    },
    {
        "line": 76,
        "fullcodeline": "set_buffer_new(bh_result);"
    },
    {
        "line": 102,
        "fullcodeline": "set_buffer_mapped(bh_result);"
    },
    {
        "line": 106,
        "fullcodeline": "ext4_ext_show_leaf(inode, path);"
    },
    {
        "line": 107,
        "fullcodeline": "bh_result->b_bdev = inode->i_sb->s_bdev;"
    },
    {
        "line": 108,
        "fullcodeline": "bh_result->b_blocknr = newblock;"
    },
    {
        "line": 13,
        "fullcodeline": "inode->i_ino, (unsigned long long)iblock, max_blocks,"
    },
    {
        "line": 18,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_PRE_IO)) {"
    },
    {
        "line": 36,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_CONVERT)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (flags & EXT4_GET_BLOCKS_UNINIT_EXT)"
    },
    {
        "line": 52,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_CREATE) == 0) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (ret >= 0)"
    },
    {
        "line": 71,
        "fullcodeline": "if (ret <= 0) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (allocated > max_blocks) {"
    },
    {
        "line": 98,
        "fullcodeline": "if (flags & EXT4_GET_BLOCKS_DELALLOC_RESERVE)"
    },
    {
        "line": 104,
        "fullcodeline": "if (allocated > max_blocks)"
    },
    {
        "line": 114,
        "fullcodeline": "return err ? err : allocated;"
    },
    {
        "line": 19,
        "fullcodeline": "ret = ext4_split_unwritten_extents(handle,"
    },
    {
        "line": 37,
        "fullcodeline": "ret = ext4_convert_unwritten_extents_endio(handle, inode,"
    },
    {
        "line": 60,
        "fullcodeline": "set_buffer_unwritten(bh_result);"
    },
    {
        "line": 69,
        "fullcodeline": "ext4_update_inode_fsync_trans(handle, inode, 1);"
    },
    {
        "line": 72,
        "fullcodeline": "err = ret;"
    },
    {
        "line": 85,
        "fullcodeline": "unmap_underlying_metadata_blocks(inode->i_sb->s_bdev,"
    },
    {
        "line": 88,
        "fullcodeline": "allocated = max_blocks;"
    },
    {
        "line": 99,
        "fullcodeline": "ext4_da_update_reserve_space(inode, allocated, 0);"
    },
    {
        "line": 105,
        "fullcodeline": "allocated = max_blocks;"
    },
    {
        "line": 111,
        "fullcodeline": "ext4_ext_drop_refs(path);"
    },
    {
        "line": 112,
        "fullcodeline": "kfree(path);"
    },
    {
        "line": 31,
        "fullcodeline": "if (ext4_should_dioread_nolock(inode))"
    },
    {
        "line": 39,
        "fullcodeline": "if (ret >= 0)"
    },
    {
        "line": 75,
        "fullcodeline": "allocated = ret;"
    },
    {
        "line": 87,
        "fullcodeline": "allocated - max_blocks);"
    },
    {
        "line": 28,
        "fullcodeline": "io->flag = EXT4_IO_UNWRITTEN;"
    },
    {
        "line": 32,
        "fullcodeline": "set_buffer_uninit(bh_result);"
    },
    {
        "line": 40,
        "fullcodeline": "ext4_update_inode_fsync_trans(handle, inode, 1);"
    },
    {
        "line": 30,
        "fullcodeline": "ext4_set_inode_state(inode, EXT4_STATE_DIO_UNWRITTEN);"
    }
]