[
    {
        "line": 4,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "struct buffer_head *page_bufs = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "trace_ext4_writepage(inode, page);"
    },
    {
        "line": 11,
        "fullcodeline": "size = i_size_read(inode);"
    },
    {
        "line": 12,
        "fullcodeline": "if (page->index == size >> PAGE_CACHE_SHIFT)"
    },
    {
        "line": 17,
        "fullcodeline": "if (page_has_buffers(page)) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (PageChecked(page) && ext4_should_journal_data(inode)) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (test_opt(inode->i_sb, NOBH) && ext4_should_writeback_data(inode))"
    },
    {
        "line": 13,
        "fullcodeline": "len = size & ~PAGE_CACHE_MASK;"
    },
    {
        "line": 18,
        "fullcodeline": "page_bufs = page_buffers(page);"
    },
    {
        "line": 77,
        "fullcodeline": "ClearPageChecked(page);"
    },
    {
        "line": 82,
        "fullcodeline": "ret = nobh_writepage(page, noalloc_get_block_write, wbc);"
    },
    {
        "line": 15,
        "fullcodeline": "len = PAGE_CACHE_SIZE;"
    },
    {
        "line": 19,
        "fullcodeline": "if (walk_page_buffers(NULL, page_bufs, 0, len, NULL,"
    },
    {
        "line": 47,
        "fullcodeline": "ret = block_prepare_write(page, 0, len,"
    },
    {
        "line": 69,
        "fullcodeline": "block_commit_write(page, 0, len);"
    },
    {
        "line": 78,
        "fullcodeline": "return __ext4_journalled_writepage(page, len);"
    },
    {
        "line": 29,
        "fullcodeline": "redirty_page_for_writepage(wbc, page);"
    },
    {
        "line": 30,
        "fullcodeline": "unlock_page(page);"
    },
    {
        "line": 49,
        "fullcodeline": "if (!ret) {"
    },
    {
        "line": 83,
        "fullcodeline": "else if (page_bufs && buffer_uninit(page_bufs)) {"
    },
    {
        "line": 50,
        "fullcodeline": "page_bufs = page_buffers(page);"
    },
    {
        "line": 84,
        "fullcodeline": "ext4_set_bh_endio(page_bufs, inode);"
    },
    {
        "line": 85,
        "fullcodeline": "ret = block_write_full_page_endio(page, noalloc_get_block_write,"
    },
    {
        "line": 52,
        "fullcodeline": "if (walk_page_buffers(NULL, page_bufs, 0, len, NULL,"
    },
    {
        "line": 64,
        "fullcodeline": "redirty_page_for_writepage(wbc, page);"
    },
    {
        "line": 65,
        "fullcodeline": "unlock_page(page);"
    },
    {
        "line": 88,
        "fullcodeline": "ret = block_write_full_page(page, noalloc_get_block_write,"
    },
    {
        "line": 54,
        "fullcodeline": "redirty_page_for_writepage(wbc, page);"
    },
    {
        "line": 55,
        "fullcodeline": "unlock_page(page);"
    }
]