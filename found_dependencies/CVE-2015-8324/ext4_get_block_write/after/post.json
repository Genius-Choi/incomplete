[
    {
        "line": 4,
        "fullcodeline": "handle_t *handle = ext4_journal_current_handle();"
    },
    {
        "line": 5,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "unsigned max_blocks = bh_result->b_size >> inode->i_blkbits;"
    },
    {
        "line": 8,
        "fullcodeline": "int started = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "ext4_debug(\"ext4_get_block_write: inode %lu, create flag %d\\n\","
    },
    {
        "line": 17,
        "fullcodeline": "create = EXT4_GET_BLOCKS_IO_CREATE_EXT;"
    },
    {
        "line": 31,
        "fullcodeline": "ret = ext4_get_blocks(handle, inode, iblock, max_blocks, bh_result,"
    },
    {
        "line": 19,
        "fullcodeline": "if (!handle) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (ret > 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "dio_credits = ext4_chunk_trans_blocks(inode, max_blocks);"
    },
    {
        "line": 23,
        "fullcodeline": "handle = ext4_journal_start(inode, dio_credits);"
    },
    {
        "line": 28,
        "fullcodeline": "started = 1;"
    },
    {
        "line": 34,
        "fullcodeline": "bh_result->b_size = (ret << inode->i_blkbits);"
    },
    {
        "line": 35,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "ext4_journal_stop(handle);"
    },
    {
        "line": 20,
        "fullcodeline": "if (max_blocks > DIO_MAX_BLOCKS)"
    },
    {
        "line": 24,
        "fullcodeline": "if (IS_ERR(handle)) {"
    },
    {
        "line": 21,
        "fullcodeline": "max_blocks = DIO_MAX_BLOCKS;"
    },
    {
        "line": 25,
        "fullcodeline": "ret = PTR_ERR(handle);"
    }
]