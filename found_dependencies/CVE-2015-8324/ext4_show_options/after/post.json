[
    {
        "line": 5,
        "fullcodeline": "struct super_block *sb = vfs->mnt_sb;"
    },
    {
        "line": 6,
        "fullcodeline": "struct ext4_sb_info *sbi = EXT4_SB(sb);"
    },
    {
        "line": 7,
        "fullcodeline": "struct ext4_super_block *es = sbi->s_es;"
    },
    {
        "line": 9,
        "fullcodeline": "def_mount_opts = le32_to_cpu(es->s_default_mount_opts);"
    },
    {
        "line": 10,
        "fullcodeline": "def_errors     = le16_to_cpu(es->s_errors);"
    },
    {
        "line": 77,
        "fullcodeline": "seq_puts(seq, \",barrier=\");"
    },
    {
        "line": 78,
        "fullcodeline": "seq_puts(seq, test_opt(sb, BARRIER) ? \"1\" : \"0\");"
    },
    {
        "line": 121,
        "fullcodeline": "ext4_show_quota_options(seq, sb);"
    },
    {
        "line": 12,
        "fullcodeline": "if (sbi->s_sb_block != 1)"
    },
    {
        "line": 14,
        "fullcodeline": "if (test_opt(sb, MINIX_DF))"
    },
    {
        "line": 16,
        "fullcodeline": "if (test_opt(sb, GRPID) && !(def_mount_opts & EXT4_DEFM_BSDGROUPS))"
    },
    {
        "line": 18,
        "fullcodeline": "if (!test_opt(sb, GRPID) && (def_mount_opts & EXT4_DEFM_BSDGROUPS))"
    },
    {
        "line": 20,
        "fullcodeline": "if (sbi->s_resuid != EXT4_DEF_RESUID ||"
    },
    {
        "line": 24,
        "fullcodeline": "if (sbi->s_resgid != EXT4_DEF_RESGID ||"
    },
    {
        "line": 28,
        "fullcodeline": "if (test_opt(sb, ERRORS_RO)) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (test_opt(sb, ERRORS_CONT) && def_errors != EXT4_ERRORS_CONTINUE)"
    },
    {
        "line": 36,
        "fullcodeline": "if (test_opt(sb, ERRORS_PANIC) && def_errors != EXT4_ERRORS_PANIC)"
    },
    {
        "line": 38,
        "fullcodeline": "if (test_opt(sb, NO_UID32) && !(def_mount_opts & EXT4_DEFM_UID16))"
    },
    {
        "line": 40,
        "fullcodeline": "if (test_opt(sb, DEBUG) && !(def_mount_opts & EXT4_DEFM_DEBUG))"
    },
    {
        "line": 42,
        "fullcodeline": "if (test_opt(sb, OLDALLOC))"
    },
    {
        "line": 59,
        "fullcodeline": "if (sbi->s_commit_interval != JBD2_DEFAULT_MAX_COMMIT_AGE*HZ) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (sbi->s_min_batch_time != EXT4_DEF_MIN_BATCH_TIME) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (sbi->s_max_batch_time != EXT4_DEF_MAX_BATCH_TIME) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (test_opt(sb, JOURNAL_ASYNC_COMMIT))"
    },
    {
        "line": 81,
        "fullcodeline": "if (test_opt(sb, NOBH))"
    },
    {
        "line": 83,
        "fullcodeline": "if (test_opt(sb, I_VERSION))"
    },
    {
        "line": 85,
        "fullcodeline": "if (!test_opt(sb, DELALLOC))"
    },
    {
        "line": 95,
        "fullcodeline": "if (test_opt(sb, DATA_FLAGS) == EXT4_MOUNT_JOURNAL_DATA)"
    },
    {
        "line": 102,
        "fullcodeline": "if (sbi->s_inode_readahead_blks != EXT4_DEF_INODE_READAHEAD_BLKS)"
    },
    {
        "line": 106,
        "fullcodeline": "if (test_opt(sb, DATA_ERR_ABORT))"
    },
    {
        "line": 109,
        "fullcodeline": "if (test_opt(sb, NO_AUTO_DA_ALLOC))"
    },
    {
        "line": 112,
        "fullcodeline": "if (test_opt(sb, DISCARD))"
    },
    {
        "line": 115,
        "fullcodeline": "if (test_opt(sb, NOLOAD))"
    },
    {
        "line": 118,
        "fullcodeline": "if (test_opt(sb, DIOREAD_NOLOCK))"
    },
    {
        "line": 13,
        "fullcodeline": "seq_printf(seq, \",sb=%llu\", sbi->s_sb_block);"
    },
    {
        "line": 15,
        "fullcodeline": "seq_puts(seq, \",minixdf\");"
    },
    {
        "line": 17,
        "fullcodeline": "seq_puts(seq, \",grpid\");"
    },
    {
        "line": 19,
        "fullcodeline": "seq_puts(seq, \",nogrpid\");"
    },
    {
        "line": 21,
        "fullcodeline": "le16_to_cpu(es->s_def_resuid) != EXT4_DEF_RESUID) {"
    },
    {
        "line": 22,
        "fullcodeline": "seq_printf(seq, \",resuid=%u\", sbi->s_resuid);"
    },
    {
        "line": 25,
        "fullcodeline": "le16_to_cpu(es->s_def_resgid) != EXT4_DEF_RESGID) {"
    },
    {
        "line": 26,
        "fullcodeline": "seq_printf(seq, \",resgid=%u\", sbi->s_resgid);"
    },
    {
        "line": 35,
        "fullcodeline": "seq_puts(seq, \",errors=continue\");"
    },
    {
        "line": 37,
        "fullcodeline": "seq_puts(seq, \",errors=panic\");"
    },
    {
        "line": 39,
        "fullcodeline": "seq_puts(seq, \",nouid32\");"
    },
    {
        "line": 41,
        "fullcodeline": "seq_puts(seq, \",debug\");"
    },
    {
        "line": 43,
        "fullcodeline": "seq_puts(seq, \",oldalloc\");"
    },
    {
        "line": 60,
        "fullcodeline": "seq_printf(seq, \",commit=%u\","
    },
    {
        "line": 64,
        "fullcodeline": "seq_printf(seq, \",min_batch_time=%u\","
    },
    {
        "line": 68,
        "fullcodeline": "seq_printf(seq, \",max_batch_time=%u\","
    },
    {
        "line": 80,
        "fullcodeline": "seq_puts(seq, \",journal_async_commit\");"
    },
    {
        "line": 82,
        "fullcodeline": "seq_puts(seq, \",nobh\");"
    },
    {
        "line": 84,
        "fullcodeline": "seq_puts(seq, \",i_version\");"
    },
    {
        "line": 86,
        "fullcodeline": "seq_puts(seq, \",nodelalloc\");"
    },
    {
        "line": 90,
        "fullcodeline": "seq_printf(seq, \",stripe=%lu\", sbi->s_stripe);"
    },
    {
        "line": 96,
        "fullcodeline": "seq_puts(seq, \",data=journal\");"
    },
    {
        "line": 103,
        "fullcodeline": "seq_printf(seq, \",inode_readahead_blks=%u\","
    },
    {
        "line": 107,
        "fullcodeline": "seq_puts(seq, \",data_err=abort\");"
    },
    {
        "line": 110,
        "fullcodeline": "seq_puts(seq, \",noauto_da_alloc\");"
    },
    {
        "line": 113,
        "fullcodeline": "seq_puts(seq, \",discard\");"
    },
    {
        "line": 116,
        "fullcodeline": "seq_puts(seq, \",norecovery\");"
    },
    {
        "line": 119,
        "fullcodeline": "seq_puts(seq, \",dioread_nolock\");"
    },
    {
        "line": 29,
        "fullcodeline": "if (def_errors == EXT4_ERRORS_PANIC ||"
    },
    {
        "line": 61,
        "fullcodeline": "(unsigned) (sbi->s_commit_interval / HZ));"
    },
    {
        "line": 65,
        "fullcodeline": "(unsigned) sbi->s_min_batch_time);"
    },
    {
        "line": 69,
        "fullcodeline": "(unsigned) sbi->s_min_batch_time);"
    },
    {
        "line": 30,
        "fullcodeline": "def_errors == EXT4_ERRORS_CONTINUE) {"
    },
    {
        "line": 31,
        "fullcodeline": "seq_puts(seq, \",errors=remount-ro\");"
    },
    {
        "line": 97,
        "fullcodeline": "else if (test_opt(sb, DATA_FLAGS) == EXT4_MOUNT_ORDERED_DATA)"
    },
    {
        "line": 98,
        "fullcodeline": "seq_puts(seq, \",data=ordered\");"
    },
    {
        "line": 99,
        "fullcodeline": "else if (test_opt(sb, DATA_FLAGS) == EXT4_MOUNT_WRITEBACK_DATA)"
    },
    {
        "line": 100,
        "fullcodeline": "seq_puts(seq, \",data=writeback\");"
    }
]