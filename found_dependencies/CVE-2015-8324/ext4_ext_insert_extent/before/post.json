[
    {
        "line": 8,
        "fullcodeline": "struct ext4_ext_path *npath = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned uninitialized = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "BUG_ON(ext4_ext_get_actual_len(newext) == 0);"
    },
    {
        "line": 14,
        "fullcodeline": "depth = ext_depth(inode);"
    },
    {
        "line": 16,
        "fullcodeline": "BUG_ON(path[depth].p_hdr == NULL);"
    },
    {
        "line": 48,
        "fullcodeline": "depth = ext_depth(inode);"
    },
    {
        "line": 54,
        "fullcodeline": "fex = EXT_LAST_EXTENT(eh);"
    },
    {
        "line": 55,
        "fullcodeline": "next = ext4_ext_next_leaf_block(inode, path);"
    },
    {
        "line": 79,
        "fullcodeline": "err = ext4_ext_create_new_leaf(handle, inode, path, newext);"
    },
    {
        "line": 82,
        "fullcodeline": "depth = ext_depth(inode);"
    },
    {
        "line": 88,
        "fullcodeline": "err = ext4_ext_get_access(handle, inode, path + depth);"
    },
    {
        "line": 132,
        "fullcodeline": "le16_add_cpu(&eh->eh_entries, 1);"
    },
    {
        "line": 133,
        "fullcodeline": "nearex = path[depth].p_ext;"
    },
    {
        "line": 134,
        "fullcodeline": "nearex->ee_block = newext->ee_block;"
    },
    {
        "line": 135,
        "fullcodeline": "ext4_ext_store_pblock(nearex, ext_pblock(newext));"
    },
    {
        "line": 136,
        "fullcodeline": "nearex->ee_len = newext->ee_len;"
    },
    {
        "line": 146,
        "fullcodeline": "err = ext4_ext_correct_indexes(handle, inode, path);"
    },
    {
        "line": 150,
        "fullcodeline": "err = ext4_ext_dirty(handle, inode, path + depth);"
    },
    {
        "line": 157,
        "fullcodeline": "ext4_ext_invalidate_cache(inode);"
    },
    {
        "line": 19,
        "fullcodeline": "if (ex && (flag != EXT4_GET_BLOCKS_PRE_IO)"
    },
    {
        "line": 50,
        "fullcodeline": "if (le16_to_cpu(eh->eh_entries) < le16_to_cpu(eh->eh_max))"
    },
    {
        "line": 56,
        "fullcodeline": "if (le32_to_cpu(newext->ee_block) > le32_to_cpu(fex->ee_block)"
    },
    {
        "line": 92,
        "fullcodeline": "if (!nearex) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (flag != EXT4_GET_BLOCKS_PRE_IO)"
    },
    {
        "line": 20,
        "fullcodeline": "&& ext4_can_extents_be_merged(inode, ex, newext)) {"
    },
    {
        "line": 21,
        "fullcodeline": "ext_debug(\"append [%d]%d block to %d:[%d]%d (from %llu)\\n\","
    },
    {
        "line": 27,
        "fullcodeline": "err = ext4_ext_get_access(handle, inode, path + depth);"
    },
    {
        "line": 38,
        "fullcodeline": "ex->ee_len = cpu_to_le16(ext4_ext_get_actual_len(ex)"
    },
    {
        "line": 43,
        "fullcodeline": "nearex = ex;"
    },
    {
        "line": 57,
        "fullcodeline": "&& next != EXT_MAX_BLOCK) {"
    },
    {
        "line": 58,
        "fullcodeline": "ext_debug(\"next leaf block - %d\\n\", next);"
    },
    {
        "line": 59,
        "fullcodeline": "BUG_ON(npath != NULL);"
    },
    {
        "line": 60,
        "fullcodeline": "npath = ext4_ext_find_extent(inode, next, NULL);"
    },
    {
        "line": 63,
        "fullcodeline": "BUG_ON(npath->p_depth != path->p_depth);"
    },
    {
        "line": 71,
        "fullcodeline": "ext_debug(\"next leaf has no free space(%d,%d)\\n\","
    },
    {
        "line": 94,
        "fullcodeline": "ext_debug(\"first extent in the leaf: %d:%llu:[%d]%d\\n\","
    },
    {
        "line": 99,
        "fullcodeline": "path[depth].p_ext = EXT_FIRST_EXTENT(eh);"
    },
    {
        "line": 141,
        "fullcodeline": "ext4_ext_try_to_merge(inode, path, nearex);"
    },
    {
        "line": 154,
        "fullcodeline": "ext4_ext_drop_refs(npath);"
    },
    {
        "line": 155,
        "fullcodeline": "kfree(npath);"
    },
    {
        "line": 22,
        "fullcodeline": "ext4_ext_is_uninitialized(newext),"
    },
    {
        "line": 23,
        "fullcodeline": "ext4_ext_get_actual_len(newext),"
    },
    {
        "line": 24,
        "fullcodeline": "le32_to_cpu(ex->ee_block),"
    },
    {
        "line": 25,
        "fullcodeline": "ext4_ext_is_uninitialized(ex),"
    },
    {
        "line": 26,
        "fullcodeline": "ext4_ext_get_actual_len(ex), ext_pblock(ex));"
    },
    {
        "line": 36,
        "fullcodeline": "if (ext4_ext_is_uninitialized(ex))"
    },
    {
        "line": 61,
        "fullcodeline": "if (IS_ERR(npath))"
    },
    {
        "line": 65,
        "fullcodeline": "if (le16_to_cpu(eh->eh_entries) < le16_to_cpu(eh->eh_max)) {"
    },
    {
        "line": 72,
        "fullcodeline": "le16_to_cpu(eh->eh_entries), le16_to_cpu(eh->eh_max));"
    },
    {
        "line": 95,
        "fullcodeline": "le32_to_cpu(newext->ee_block),"
    },
    {
        "line": 96,
        "fullcodeline": "ext_pblock(newext),"
    },
    {
        "line": 97,
        "fullcodeline": "ext4_ext_is_uninitialized(newext),"
    },
    {
        "line": 98,
        "fullcodeline": "ext4_ext_get_actual_len(newext));"
    },
    {
        "line": 37,
        "fullcodeline": "uninitialized = 1;"
    },
    {
        "line": 41,
        "fullcodeline": "ext4_ext_mark_uninitialized(ex);"
    },
    {
        "line": 66,
        "fullcodeline": "ext_debug(\"next leaf isnt full(%d)\\n\","
    },
    {
        "line": 68,
        "fullcodeline": "path = npath;"
    },
    {
        "line": 100,
        "fullcodeline": "} else if (le32_to_cpu(newext->ee_block)"
    },
    {
        "line": 39,
        "fullcodeline": "+ ext4_ext_get_actual_len(newext));"
    },
    {
        "line": 62,
        "fullcodeline": "return PTR_ERR(npath);"
    },
    {
        "line": 67,
        "fullcodeline": "le16_to_cpu(eh->eh_entries));"
    },
    {
        "line": 101,
        "fullcodeline": "> le32_to_cpu(nearex->ee_block)) {"
    },
    {
        "line": 116,
        "fullcodeline": "path[depth].p_ext = nearex + 1;"
    },
    {
        "line": 103,
        "fullcodeline": "if (nearex != EXT_LAST_EXTENT(eh)) {"
    },
    {
        "line": 118,
        "fullcodeline": "BUG_ON(newext->ee_block == nearex->ee_block);"
    },
    {
        "line": 119,
        "fullcodeline": "len = (EXT_MAX_EXTENT(eh) - nearex) * sizeof(struct ext4_extent);"
    },
    {
        "line": 120,
        "fullcodeline": "len = len < 0 ? 0 : len;"
    },
    {
        "line": 121,
        "fullcodeline": "ext_debug(\"insert %d:%llu:[%d]%d before: nearest 0x%p, \""
    },
    {
        "line": 128,
        "fullcodeline": "memmove(nearex + 1, nearex, len);"
    },
    {
        "line": 129,
        "fullcodeline": "path[depth].p_ext = nearex;"
    },
    {
        "line": 104,
        "fullcodeline": "len = EXT_MAX_EXTENT(eh) - nearex;"
    },
    {
        "line": 105,
        "fullcodeline": "len = (len - 1) * sizeof(struct ext4_extent);"
    },
    {
        "line": 106,
        "fullcodeline": "len = len < 0 ? 0 : len;"
    },
    {
        "line": 107,
        "fullcodeline": "ext_debug(\"insert %d:%llu:[%d]%d after: nearest 0x%p, \""
    },
    {
        "line": 114,
        "fullcodeline": "memmove(nearex + 2, nearex + 1, len);"
    },
    {
        "line": 123,
        "fullcodeline": "le32_to_cpu(newext->ee_block),"
    },
    {
        "line": 124,
        "fullcodeline": "ext_pblock(newext),"
    },
    {
        "line": 125,
        "fullcodeline": "ext4_ext_is_uninitialized(newext),"
    },
    {
        "line": 126,
        "fullcodeline": "ext4_ext_get_actual_len(newext),"
    },
    {
        "line": 127,
        "fullcodeline": "nearex, len, nearex + 1, nearex + 2);"
    },
    {
        "line": 109,
        "fullcodeline": "le32_to_cpu(newext->ee_block),"
    },
    {
        "line": 110,
        "fullcodeline": "ext_pblock(newext),"
    },
    {
        "line": 111,
        "fullcodeline": "ext4_ext_is_uninitialized(newext),"
    },
    {
        "line": 112,
        "fullcodeline": "ext4_ext_get_actual_len(newext),"
    },
    {
        "line": 113,
        "fullcodeline": "nearex, len, nearex + 1, nearex + 2);"
    }
]