[
    {
        "line": 6,
        "fullcodeline": "struct ext4_sb_info *sbi = EXT4_SB(sb);"
    },
    {
        "line": 8,
        "fullcodeline": "substring_t args[MAX_OPT_ARGS];"
    },
    {
        "line": 9,
        "fullcodeline": "int data_opt = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "if (!options)"
    },
    {
        "line": 18,
        "fullcodeline": "while ((p = strsep(&options, \",\")) != NULL) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (!*p)"
    },
    {
        "line": 27,
        "fullcodeline": "args[0].to = args[0].from = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "token = match_token(p, tokens, args);"
    },
    {
        "line": 31,
        "fullcodeline": "ext4_msg(sb, KERN_WARNING, deprecated_msg, p, \"2.6.38\");"
    },
    {
        "line": 32,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, MINIX_DF);"
    },
    {
        "line": 35,
        "fullcodeline": "ext4_msg(sb, KERN_WARNING, deprecated_msg, p, \"2.6.38\");"
    },
    {
        "line": 36,
        "fullcodeline": "set_opt(sbi->s_mount_opt, MINIX_DF);"
    },
    {
        "line": 40,
        "fullcodeline": "ext4_msg(sb, KERN_WARNING, deprecated_msg, p, \"2.6.38\");"
    },
    {
        "line": 41,
        "fullcodeline": "set_opt(sbi->s_mount_opt, GRPID);"
    },
    {
        "line": 45,
        "fullcodeline": "ext4_msg(sb, KERN_WARNING, deprecated_msg, p, \"2.6.38\");"
    },
    {
        "line": 46,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, GRPID);"
    },
    {
        "line": 64,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, ERRORS_CONT);"
    },
    {
        "line": 65,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, ERRORS_RO);"
    },
    {
        "line": 66,
        "fullcodeline": "set_opt(sbi->s_mount_opt, ERRORS_PANIC);"
    },
    {
        "line": 69,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, ERRORS_CONT);"
    },
    {
        "line": 70,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, ERRORS_PANIC);"
    },
    {
        "line": 71,
        "fullcodeline": "set_opt(sbi->s_mount_opt, ERRORS_RO);"
    },
    {
        "line": 74,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, ERRORS_RO);"
    },
    {
        "line": 75,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, ERRORS_PANIC);"
    },
    {
        "line": 76,
        "fullcodeline": "set_opt(sbi->s_mount_opt, ERRORS_CONT);"
    },
    {
        "line": 79,
        "fullcodeline": "set_opt(sbi->s_mount_opt, NO_UID32);"
    },
    {
        "line": 82,
        "fullcodeline": "set_opt(sbi->s_mount_opt, DEBUG);"
    },
    {
        "line": 85,
        "fullcodeline": "set_opt(sbi->s_mount_opt, OLDALLOC);"
    },
    {
        "line": 88,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, OLDALLOC);"
    },
    {
        "line": 100,
        "fullcodeline": "ext4_msg(sb, KERN_ERR, \"(no)user_xattr options not supported\");"
    },
    {
        "line": 113,
        "fullcodeline": "ext4_msg(sb, KERN_ERR, \"(no)acl options not supported\");"
    },
    {
        "line": 127,
        "fullcodeline": "set_opt(sbi->s_mount_opt, UPDATE_JOURNAL);"
    },
    {
        "line": 140,
        "fullcodeline": "set_opt(sbi->s_mount_opt, JOURNAL_CHECKSUM);"
    },
    {
        "line": 143,
        "fullcodeline": "set_opt(sbi->s_mount_opt, JOURNAL_ASYNC_COMMIT);"
    },
    {
        "line": 144,
        "fullcodeline": "set_opt(sbi->s_mount_opt, JOURNAL_CHECKSUM);"
    },
    {
        "line": 147,
        "fullcodeline": "set_opt(sbi->s_mount_opt, NOLOAD);"
    },
    {
        "line": 175,
        "fullcodeline": "data_opt = EXT4_MOUNT_JOURNAL_DATA;"
    },
    {
        "line": 178,
        "fullcodeline": "data_opt = EXT4_MOUNT_ORDERED_DATA;"
    },
    {
        "line": 181,
        "fullcodeline": "data_opt = EXT4_MOUNT_WRITEBACK_DATA;"
    },
    {
        "line": 195,
        "fullcodeline": "set_opt(sbi->s_mount_opt, DATA_ERR_ABORT);"
    },
    {
        "line": 198,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, DATA_ERR_ABORT);"
    },
    {
        "line": 259,
        "fullcodeline": "ext4_msg(sb, KERN_ERR,"
    },
    {
        "line": 269,
        "fullcodeline": "ext4_msg(sb, KERN_ERR,"
    },
    {
        "line": 276,
        "fullcodeline": "sbi->s_mount_flags |= EXT4_MF_FS_ABORTED;"
    },
    {
        "line": 279,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, BARRIER);"
    },
    {
        "line": 306,
        "fullcodeline": "set_opt(sbi->s_mount_opt, NOBH);"
    },
    {
        "line": 309,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, NOBH);"
    },
    {
        "line": 312,
        "fullcodeline": "set_opt(sbi->s_mount_opt, I_VERSION);"
    },
    {
        "line": 313,
        "fullcodeline": "sb->s_flags |= MS_I_VERSION;"
    },
    {
        "line": 316,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, DELALLOC);"
    },
    {
        "line": 326,
        "fullcodeline": "set_opt(sbi->s_mount_opt, DELALLOC);"
    },
    {
        "line": 329,
        "fullcodeline": "set_opt(sbi->s_mount_opt, BLOCK_VALIDITY);"
    },
    {
        "line": 332,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, BLOCK_VALIDITY);"
    },
    {
        "line": 356,
        "fullcodeline": "set_opt(sbi->s_mount_opt,NO_AUTO_DA_ALLOC);"
    },
    {
        "line": 370,
        "fullcodeline": "set_opt(sbi->s_mount_opt, DISCARD);"
    },
    {
        "line": 373,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, DISCARD);"
    },
    {
        "line": 50,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 55,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 135,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 150,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 152,
        "fullcodeline": "if (option < 0)"
    },
    {
        "line": 154,
        "fullcodeline": "if (option == 0)"
    },
    {
        "line": 156,
        "fullcodeline": "sbi->s_commit_interval = HZ * option;"
    },
    {
        "line": 159,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 161,
        "fullcodeline": "if (option < 0)"
    },
    {
        "line": 163,
        "fullcodeline": "if (option == 0)"
    },
    {
        "line": 168,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 170,
        "fullcodeline": "if (option < 0)"
    },
    {
        "line": 319,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 321,
        "fullcodeline": "if (option < 0)"
    },
    {
        "line": 335,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 348,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 352,
        "fullcodeline": "*journal_ioprio = IOPRIO_PRIO_VALUE(IOPRIO_CLASS_BE,"
    },
    {
        "line": 155,
        "fullcodeline": "option = JBD2_DEFAULT_MAX_COMMIT_AGE;"
    },
    {
        "line": 164,
        "fullcodeline": "option = EXT4_DEF_MAX_BATCH_TIME;"
    },
    {
        "line": 288,
        "fullcodeline": "set_opt(sbi->s_mount_opt, BARRIER);"
    },
    {
        "line": 301,
        "fullcodeline": "if (match_int(&args[0], &option) != 0)"
    },
    {
        "line": 337,
        "fullcodeline": "if (option < 0 || option > (1 << 30))"
    },
    {
        "line": 339,
        "fullcodeline": "if (!is_power_of_2(option)) {"
    },
    {
        "line": 350,
        "fullcodeline": "if (option < 0 || option > 7)"
    },
    {
        "line": 365,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, NO_AUTO_DA_ALLOC);"
    },
    {
        "line": 190,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, DATA_FLAGS);"
    },
    {
        "line": 191,
        "fullcodeline": "sbi->s_mount_opt |= data_opt;"
    },
    {
        "line": 283,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 286,
        "fullcodeline": "option = 1;\t/* No argument, default to 1 */"
    },
    {
        "line": 290,
        "fullcodeline": "clear_opt(sbi->s_mount_opt, BARRIER);"
    },
    {
        "line": 360,
        "fullcodeline": "if (match_int(&args[0], &option))"
    },
    {
        "line": 363,
        "fullcodeline": "option = 1;\t/* No argument, default to 1 */"
    },
    {
        "line": 367,
        "fullcodeline": "set_opt(sbi->s_mount_opt,NO_AUTO_DA_ALLOC);"
    },
    {
        "line": 184,
        "fullcodeline": "if (test_opt(sb, DATA_FLAGS) != data_opt) {"
    }
]