[
    {
        "line": 6,
        "fullcodeline": "struct ext4_ext_path *path = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "int err = 0, depth, ret, cache_type;"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned int allocated = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "ext4_io_end_t *io = EXT4_I(inode)->cur_aio_dio;"
    },
    {
        "line": 15,
        "fullcodeline": "__clear_bit(BH_New, &bh_result->b_state);"
    },
    {
        "line": 16,
        "fullcodeline": "ext_debug(\"blocks %u/%u requested for inode %lu\\n\","
    },
    {
        "line": 20,
        "fullcodeline": "cache_type = ext4_ext_in_cache(inode, iblock, &newex);"
    },
    {
        "line": 46,
        "fullcodeline": "path = ext4_ext_find_extent(inode, iblock, NULL);"
    },
    {
        "line": 53,
        "fullcodeline": "depth = ext_depth(inode);"
    },
    {
        "line": 67,
        "fullcodeline": "eh = path[depth].p_hdr;"
    },
    {
        "line": 69,
        "fullcodeline": "ex = path[depth].p_ext;"
    },
    {
        "line": 119,
        "fullcodeline": "ar.lleft = iblock;"
    },
    {
        "line": 120,
        "fullcodeline": "err = ext4_ext_search_left(inode, path, &ar.lleft, &ar.pleft);"
    },
    {
        "line": 123,
        "fullcodeline": "ar.lright = iblock;"
    },
    {
        "line": 124,
        "fullcodeline": "err = ext4_ext_search_right(inode, path, &ar.lright, &ar.pright);"
    },
    {
        "line": 142,
        "fullcodeline": "newex.ee_block = cpu_to_le32(iblock);"
    },
    {
        "line": 143,
        "fullcodeline": "newex.ee_len = cpu_to_le16(max_blocks);"
    },
    {
        "line": 144,
        "fullcodeline": "err = ext4_ext_check_overlap(inode, &newex, path);"
    },
    {
        "line": 151,
        "fullcodeline": "ar.inode = inode;"
    },
    {
        "line": 152,
        "fullcodeline": "ar.goal = ext4_ext_find_goal(inode, path, iblock);"
    },
    {
        "line": 153,
        "fullcodeline": "ar.logical = iblock;"
    },
    {
        "line": 154,
        "fullcodeline": "ar.len = allocated;"
    },
    {
        "line": 160,
        "fullcodeline": "newblock = ext4_mb_new_blocks(handle, &ar, &err);"
    },
    {
        "line": 163,
        "fullcodeline": "ext_debug(\"allocate new block: goal %llu, found %llu/%u\\n\","
    },
    {
        "line": 167,
        "fullcodeline": "ext4_ext_store_pblock(&newex, newblock);"
    },
    {
        "line": 168,
        "fullcodeline": "newex.ee_len = cpu_to_le16(ar.len);"
    },
    {
        "line": 202,
        "fullcodeline": "err = ext4_ext_insert_extent(handle, inode, path, &newex, flags);"
    },
    {
        "line": 214,
        "fullcodeline": "newblock = ext_pblock(&newex);"
    },
    {
        "line": 215,
        "fullcodeline": "allocated = ext4_ext_get_actual_len(&newex);"
    },
    {
        "line": 218,
        "fullcodeline": "set_buffer_new(bh_result);"
    },
    {
        "line": 240,
        "fullcodeline": "ext4_ext_show_leaf(inode, path);"
    },
    {
        "line": 47,
        "fullcodeline": "if (IS_ERR(path)) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (path[depth].p_ext == NULL && depth != 0) {"
    },
    {
        "line": 155,
        "fullcodeline": "if (S_ISREG(inode->i_mode))"
    },
    {
        "line": 161,
        "fullcodeline": "if (!newblock)"
    },
    {
        "line": 170,
        "fullcodeline": "if (flags & EXT4_GET_BLOCKS_UNINIT_EXT){"
    },
    {
        "line": 216,
        "fullcodeline": "if (allocated > max_blocks)"
    },
    {
        "line": 224,
        "fullcodeline": "if (flags & EXT4_GET_BLOCKS_DELALLOC_RESERVE)"
    },
    {
        "line": 238,
        "fullcodeline": "if (allocated > max_blocks)"
    },
    {
        "line": 249,
        "fullcodeline": "return err ? err : allocated;"
    },
    {
        "line": 48,
        "fullcodeline": "err = PTR_ERR(path);"
    },
    {
        "line": 49,
        "fullcodeline": "path = NULL;"
    },
    {
        "line": 64,
        "fullcodeline": "err = -EIO;"
    },
    {
        "line": 71,
        "fullcodeline": "ext4_lblk_t ee_block = le32_to_cpu(ex->ee_block);"
    },
    {
        "line": 72,
        "fullcodeline": "ext4_fsblk_t ee_start = ext_pblock(ex);"
    },
    {
        "line": 79,
        "fullcodeline": "ee_len = ext4_ext_get_actual_len(ex);"
    },
    {
        "line": 106,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_CREATE) == 0) {"
    },
    {
        "line": 111,
        "fullcodeline": "ext4_ext_put_gap_in_cache(inode, path, iblock);"
    },
    {
        "line": 134,
        "fullcodeline": "if (max_blocks > EXT_INIT_MAX_LEN &&"
    },
    {
        "line": 135,
        "fullcodeline": "!(flags & EXT4_GET_BLOCKS_UNINIT_EXT))"
    },
    {
        "line": 136,
        "fullcodeline": "max_blocks = EXT_INIT_MAX_LEN;"
    },
    {
        "line": 146,
        "fullcodeline": "allocated = ext4_ext_get_actual_len(&newex);"
    },
    {
        "line": 156,
        "fullcodeline": "ar.flags = EXT4_MB_HINT_DATA;"
    },
    {
        "line": 171,
        "fullcodeline": "ext4_ext_mark_uninitialized(&newex);"
    },
    {
        "line": 190,
        "fullcodeline": "if (unlikely(EXT4_I(inode)->i_flags & EXT4_EOFBLOCKS_FL)) {"
    },
    {
        "line": 207,
        "fullcodeline": "ext4_discard_preallocations(inode);"
    },
    {
        "line": 217,
        "fullcodeline": "allocated = max_blocks;"
    },
    {
        "line": 225,
        "fullcodeline": "ext4_da_update_reserve_space(inode, allocated, 1);"
    },
    {
        "line": 231,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_UNINIT_EXT) == 0) {"
    },
    {
        "line": 232,
        "fullcodeline": "ext4_ext_put_in_cache(inode, iblock, allocated, newblock,"
    },
    {
        "line": 234,
        "fullcodeline": "ext4_update_inode_fsync_trans(handle, inode, 1);"
    },
    {
        "line": 239,
        "fullcodeline": "allocated = max_blocks;"
    },
    {
        "line": 246,
        "fullcodeline": "ext4_ext_drop_refs(path);"
    },
    {
        "line": 22,
        "fullcodeline": "if (cache_type == EXT4_EXT_CACHE_GAP) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (iblock >= ee_block && iblock < ee_block + ee_len) {"
    },
    {
        "line": 148,
        "fullcodeline": "allocated = max_blocks;"
    },
    {
        "line": 159,
        "fullcodeline": "ar.flags = 0;"
    },
    {
        "line": 179,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_PRE_IO)) {"
    },
    {
        "line": 186,
        "fullcodeline": "if (ext4_should_dioread_nolock(inode))"
    },
    {
        "line": 208,
        "fullcodeline": "ext4_free_blocks(handle, inode, 0, ext_pblock(&newex),"
    },
    {
        "line": 209,
        "fullcodeline": "ext4_ext_get_actual_len(&newex), 0);"
    },
    {
        "line": 236,
        "fullcodeline": "ext4_update_inode_fsync_trans(handle, inode, 0);"
    },
    {
        "line": 82,
        "fullcodeline": "newblock = iblock - ee_block + ee_start;"
    },
    {
        "line": 84,
        "fullcodeline": "allocated = ee_len - (iblock - ee_block);"
    },
    {
        "line": 85,
        "fullcodeline": "ext_debug(\"%u fit into %u:%d -> %llu\\n\", iblock,"
    },
    {
        "line": 95,
        "fullcodeline": "ret = ext4_ext_handle_uninitialized_extents(handle,"
    },
    {
        "line": 187,
        "fullcodeline": "set_buffer_uninit(bh_result);"
    },
    {
        "line": 192,
        "fullcodeline": "last_ex = EXT_LAST_EXTENT(eh);"
    },
    {
        "line": 23,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_CREATE) == 0) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (!ext4_ext_is_uninitialized(ex)) {"
    },
    {
        "line": 137,
        "fullcodeline": "else if (max_blocks > EXT_UNINIT_MAX_LEN &&"
    },
    {
        "line": 138,
        "fullcodeline": "(flags & EXT4_GET_BLOCKS_UNINIT_EXT))"
    },
    {
        "line": 139,
        "fullcodeline": "max_blocks = EXT_UNINIT_MAX_LEN;"
    },
    {
        "line": 198,
        "fullcodeline": "ext4_error(inode->i_sb, __func__,"
    },
    {
        "line": 31,
        "fullcodeline": "} else if (cache_type == EXT4_EXT_CACHE_EXTENT) {"
    },
    {
        "line": 90,
        "fullcodeline": "ext4_ext_put_in_cache(inode, ee_block,"
    },
    {
        "line": 181,
        "fullcodeline": "io->flag = EXT4_IO_UNWRITTEN;"
    },
    {
        "line": 197,
        "fullcodeline": "WARN_ON(eh->eh_entries == 0);"
    },
    {
        "line": 33,
        "fullcodeline": "newblock = iblock"
    },
    {
        "line": 37,
        "fullcodeline": "allocated = ext4_ext_get_actual_len(&newex) -"
    },
    {
        "line": 183,
        "fullcodeline": "ext4_set_inode_state(inode,"
    },
    {
        "line": 193,
        "fullcodeline": "if (iblock + ar.len > le32_to_cpu(last_ex->ee_block)"
    },
    {
        "line": 194,
        "fullcodeline": "+ ext4_ext_get_actual_len(last_ex))"
    },
    {
        "line": 195,
        "fullcodeline": "EXT4_I(inode)->i_flags &= ~EXT4_EOFBLOCKS_FL;"
    },
    {
        "line": 41,
        "fullcodeline": "BUG();"
    },
    {
        "line": 35,
        "fullcodeline": "+ ext_pblock(&newex);"
    },
    {
        "line": 38,
        "fullcodeline": "(iblock - le32_to_cpu(newex.ee_block));"
    },
    {
        "line": 34,
        "fullcodeline": "- le32_to_cpu(newex.ee_block)"
    }
]