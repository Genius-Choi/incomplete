[
    {
        "line": 2,
        "fullcodeline": "TIFFSTATE *clientstate = (TIFFSTATE *)state->context;"
    },
    {
        "line": 3,
        "fullcodeline": "char *filename = \"tempfile.tif\";"
    },
    {
        "line": 4,
        "fullcodeline": "char *mode = \"r\";"
    },
    {
        "line": 12,
        "fullcodeline": "TRACE((\"in decoder: bytes %d\\n\", bytes));"
    },
    {
        "line": 13,
        "fullcodeline": "TRACE((\"State: count %d, state %d, x %d, y %d, ystep %d\\n\", state->count, state->state,"
    },
    {
        "line": 15,
        "fullcodeline": "TRACE((\"State: xsize %d, ysize %d, xoff %d, yoff %d \\n\", state->xsize, state->ysize,"
    },
    {
        "line": 17,
        "fullcodeline": "TRACE((\"State: bits %d, bytes %d \\n\", state->bits, state->bytes));"
    },
    {
        "line": 18,
        "fullcodeline": "TRACE((\"Buffer: %p: %c%c%c%c\\n\", buffer, (char)buffer[0], (char)buffer[1],(char)buffer[2], (char)buffer[3]));"
    },
    {
        "line": 19,
        "fullcodeline": "TRACE((\"State->Buffer: %c%c%c%c\\n\", (char)state->buffer[0], (char)state->buffer[1],(char)state->buffer[2], (char)state->buffer[3]));"
    },
    {
        "line": 20,
        "fullcodeline": "TRACE((\"Image: mode %s, type %d, bands: %d, xsize %d, ysize %d \\n\","
    },
    {
        "line": 22,
        "fullcodeline": "TRACE((\"Image: image8 %p, image32 %p, image %p, block %p \\n\","
    },
    {
        "line": 24,
        "fullcodeline": "TRACE((\"Image: pixelsize: %d, linesize %d \\n\","
    },
    {
        "line": 27,
        "fullcodeline": "dump_state(clientstate);"
    },
    {
        "line": 28,
        "fullcodeline": "clientstate->size = bytes;"
    },
    {
        "line": 29,
        "fullcodeline": "clientstate->eof = clientstate->size;"
    },
    {
        "line": 30,
        "fullcodeline": "clientstate->loc = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "clientstate->data = (tdata_t)buffer;"
    },
    {
        "line": 32,
        "fullcodeline": "clientstate->flrealloc = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "dump_state(clientstate);"
    },
    {
        "line": 35,
        "fullcodeline": "TIFFSetWarningHandler(NULL);"
    },
    {
        "line": 36,
        "fullcodeline": "TIFFSetWarningHandlerExt(NULL);"
    },
    {
        "line": 68,
        "fullcodeline": "size = TIFFScanlineSize(tiff);"
    },
    {
        "line": 51,
        "fullcodeline": "if (!tiff){"
    },
    {
        "line": 69,
        "fullcodeline": "TRACE((\"ScanlineSize: %d \\n\", size));"
    },
    {
        "line": 83,
        "fullcodeline": "while(state->y < state->ysize){"
    },
    {
        "line": 103,
        "fullcodeline": "return -1;"
    },
    {
        "line": 39,
        "fullcodeline": "TRACE((\"Opening using fd: %d\\n\",clientstate->fp));"
    },
    {
        "line": 40,
        "fullcodeline": "lseek(clientstate->fp,0,SEEK_SET); // Sometimes, I get it set to the end."
    },
    {
        "line": 41,
        "fullcodeline": "tiff = TIFFFdOpen(clientstate->fp, filename, mode);"
    },
    {
        "line": 52,
        "fullcodeline": "TRACE((\"Error, didn't get the tiff\\n\"));"
    },
    {
        "line": 53,
        "fullcodeline": "state->errcode = IMAGING_CODEC_BROKEN;"
    },
    {
        "line": 59,
        "fullcodeline": "unsigned int ifdoffset = clientstate->ifd;"
    },
    {
        "line": 61,
        "fullcodeline": "rv = TIFFSetSubDirectory(tiff, ifdoffset);"
    },
    {
        "line": 91,
        "fullcodeline": "state->shuffle((UINT8*) im->image[state->y + state->yoff] +"
    },
    {
        "line": 96,
        "fullcodeline": "state->y++;"
    },
    {
        "line": 43,
        "fullcodeline": "TRACE((\"Opening from string\\n\"));"
    },
    {
        "line": 44,
        "fullcodeline": "tiff = TIFFClientOpen(filename, mode,"
    },
    {
        "line": 54,
        "fullcodeline": "return -1;"
    },
    {
        "line": 60,
        "fullcodeline": "TRACE((\"reading tiff ifd %d\\n\", ifdoffset));"
    },
    {
        "line": 74,
        "fullcodeline": "return -1;"
    },
    {
        "line": 84,
        "fullcodeline": "if (TIFFReadScanline(tiff, (tdata_t)state->buffer, (uint32)state->y, 0) == -1) {"
    },
    {
        "line": 92,
        "fullcodeline": "state->xoff * im->pixelsize,"
    },
    {
        "line": 45,
        "fullcodeline": "(thandle_t) clientstate,"
    },
    {
        "line": 64,
        "fullcodeline": "return -1;"
    },
    {
        "line": 85,
        "fullcodeline": "TRACE((\"Decode Error, row %d\\n\", state->y));"
    },
    {
        "line": 88,
        "fullcodeline": "return -1;"
    }
]