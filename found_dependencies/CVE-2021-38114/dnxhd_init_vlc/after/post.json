[
    {
        "line": 39,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "if (cid != ctx->cid) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 5,
        "fullcodeline": "const CIDEntry *cid_table = ff_dnxhd_get_cid_table(cid);"
    },
    {
        "line": 17,
        "fullcodeline": "ctx->cid_table = cid_table;"
    },
    {
        "line": 20,
        "fullcodeline": "ff_free_vlc(&ctx->ac_vlc);"
    },
    {
        "line": 21,
        "fullcodeline": "ff_free_vlc(&ctx->dc_vlc);"
    },
    {
        "line": 22,
        "fullcodeline": "ff_free_vlc(&ctx->run_vlc);"
    },
    {
        "line": 37,
        "fullcodeline": "ctx->cid = cid;"
    },
    {
        "line": 42,
        "fullcodeline": "av_log(ctx->avctx, AV_LOG_ERROR, \"init_vlc failed\\n\");"
    },
    {
        "line": 7,
        "fullcodeline": "if (!cid_table) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (cid_table->bit_depth != bitdepth &&"
    },
    {
        "line": 24,
        "fullcodeline": "if ((ret = init_vlc(&ctx->ac_vlc, DNXHD_VLC_BITS, 257,"
    },
    {
        "line": 28,
        "fullcodeline": "if ((ret = init_vlc(&ctx->dc_vlc, DNXHD_DC_VLC_BITS, bitdepth > 8 ? 14 : 12,"
    },
    {
        "line": 32,
        "fullcodeline": "if ((ret = init_vlc(&ctx->run_vlc, DNXHD_VLC_BITS, 62,"
    },
    {
        "line": 12,
        "fullcodeline": "cid_table->bit_depth != DNXHD_VARIABLE) {"
    },
    {
        "line": 13,
        "fullcodeline": "av_log(ctx->avctx, AV_LOG_ERROR, \"bit depth mismatches %d %d\\n\","
    },
    {
        "line": 9,
        "fullcodeline": "return AVERROR(ENOSYS);"
    }
]