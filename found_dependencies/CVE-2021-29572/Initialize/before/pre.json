[
    {
        "line": 3,
        "fullcodeline": "TF_RETURN_IF_ERROR("
    },
    {
        "line": 6,
        "fullcodeline": "TF_RETURN_IF_ERROR("
    },
    {
        "line": 9,
        "fullcodeline": "TF_RETURN_IF_ERROR("
    },
    {
        "line": 13,
        "fullcodeline": "TF_RETURN_IF_ERROR(context->output_list(\"out_delta_sparse_weights\","
    },
    {
        "line": 17,
        "fullcodeline": "TF_RETURN_IF_ERROR("
    },
    {
        "line": 35,
        "fullcodeline": "const auto initialize_weights ="
    },
    {
        "line": 4,
        "fullcodeline": "context->input_list(\"sparse_indices\", &sparse_indices_inputs));"
    },
    {
        "line": 7,
        "fullcodeline": "context->input_list(\"sparse_weights\", &sparse_weights_inputs));"
    },
    {
        "line": 10,
        "fullcodeline": "context->input_list(\"dense_weights\", &dense_weights_inputs));"
    },
    {
        "line": 18,
        "fullcodeline": "context->output_list(\"out_delta_dense_weights\", &dense_weights_outputs));"
    },
    {
        "line": 20,
        "fullcodeline": "for (int i = 0; i < sparse_weights_inputs.size(); ++i) {"
    },
    {
        "line": 54,
        "fullcodeline": "return initialize_weights(dense_weights_inputs, &dense_weights_outputs,"
    },
    {
        "line": 22,
        "fullcodeline": "TF_RETURN_IF_ERROR(sparse_weights_outputs.allocate("
    },
    {
        "line": 25,
        "fullcodeline": "auto deltas = delta_t->shaped<float, 2>({1, delta_t->NumElements()});"
    },
    {
        "line": 26,
        "fullcodeline": "deltas.setZero();"
    },
    {
        "line": 27,
        "fullcodeline": "sparse_weights_.emplace_back(FeatureWeightsSparseStorage{"
    },
    {
        "line": 23,
        "fullcodeline": "i, sparse_weights_inputs[i].shape(), &delta_t));"
    },
    {
        "line": 28,
        "fullcodeline": "sparse_indices_inputs[i].flat<int64>(),"
    },
    {
        "line": 29,
        "fullcodeline": "sparse_weights_inputs[i].shaped<float, 2>("
    },
    {
        "line": 30,
        "fullcodeline": "{1, sparse_weights_inputs[i].NumElements()}),"
    }
]