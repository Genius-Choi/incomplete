[
    {
        "line": 4,
        "fullcodeline": "unsigned len = len0, remain, olen;"
    },
    {
        "line": 10,
        "fullcodeline": "remain = m->m_len - len;"
    },
    {
        "line": 58,
        "fullcodeline": "n->m_len = remain;"
    },
    {
        "line": 60,
        "fullcodeline": "n->m_next = m->m_next;"
    },
    {
        "line": 6,
        "fullcodeline": "for (m = m0; m && len > m->m_len; m = m->m_next)"
    },
    {
        "line": 7,
        "fullcodeline": "len -= m->m_len;"
    },
    {
        "line": 8,
        "fullcodeline": "if (m == NULL)"
    },
    {
        "line": 11,
        "fullcodeline": "if (m0->m_flags & M_PKTHDR) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (m->m_flags & M_EXT) {"
    },
    {
        "line": 12,
        "fullcodeline": "MGETHDR(n, wait, m0->m_type);"
    },
    {
        "line": 20,
        "fullcodeline": "olen = m0->m_pkthdr.len;"
    },
    {
        "line": 51,
        "fullcodeline": "n->m_ext = m->m_ext;"
    },
    {
        "line": 52,
        "fullcodeline": "MCLADDREFERENCE(m, n);"
    },
    {
        "line": 53,
        "fullcodeline": "n->m_data = m->m_data + len;"
    },
    {
        "line": 13,
        "fullcodeline": "if (n == NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "if (m_dup_pkthdr(n, m0, wait)) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (remain == 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "m_align(n, remain);"
    },
    {
        "line": 56,
        "fullcodeline": "memcpy(mtod(n, caddr_t), mtod(m, caddr_t) + len, remain);"
    },
    {
        "line": 23,
        "fullcodeline": "n->m_next = m->m_next;"
    },
    {
        "line": 25,
        "fullcodeline": "n->m_len = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "if ((m->m_flags & M_EXT) == 0 && remain > MHLEN) {"
    },
    {
        "line": 30,
        "fullcodeline": "m_align(n, 0);"
    },
    {
        "line": 31,
        "fullcodeline": "n->m_next = m_split(m, len, wait);"
    },
    {
        "line": 41,
        "fullcodeline": "} else if (remain == 0) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (n->m_next == NULL) {"
    },
    {
        "line": 42,
        "fullcodeline": "n = m->m_next;"
    },
    {
        "line": 46,
        "fullcodeline": "MGET(n, wait, m->m_type);"
    },
    {
        "line": 33,
        "fullcodeline": "(void) m_free(n);"
    },
    {
        "line": 37,
        "fullcodeline": "n->m_len = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "if (n == NULL)"
    }
]