[
    {
        "line": 4,
        "fullcodeline": "FD_t payload = rpmtePayload(te);"
    },
    {
        "line": 5,
        "fullcodeline": "rpmfi fi = rpmfiNewArchiveReader(payload, files, RPMFI_ITER_READ_ARCHIVE);"
    },
    {
        "line": 6,
        "fullcodeline": "rpmfs fs = rpmteGetFileStates(te);"
    },
    {
        "line": 7,
        "fullcodeline": "rpmPlugins plugins = rpmtsPlugins(ts);"
    },
    {
        "line": 9,
        "fullcodeline": "int saveerrno = errno;"
    },
    {
        "line": 10,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "int nodigest = (rpmtsFlags(ts) & RPMTRANS_FLAG_NOFILEDIGEST) ? 1 : 0;"
    },
    {
        "line": 12,
        "fullcodeline": "int nofcaps = (rpmtsFlags(ts) & RPMTRANS_FLAG_NOCAPS) ? 1 : 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int firsthardlink = -1;"
    },
    {
        "line": 16,
        "fullcodeline": "char *tid = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "char *fpath = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "rasprintf(&tid, \";%08x\", (unsigned)rpmtsGetTid(ts));"
    },
    {
        "line": 29,
        "fullcodeline": "rc = fsmMkdirs(files, fs, plugins);"
    },
    {
        "line": 159,
        "fullcodeline": "rpmswAdd(rpmtsOp(ts, RPMTS_OP_UNCOMPRESS), fdOp(payload, FDSTAT_READ));"
    },
    {
        "line": 160,
        "fullcodeline": "rpmswAdd(rpmtsOp(ts, RPMTS_OP_DIGEST), fdOp(payload, FDSTAT_DIGEST));"
    },
    {
        "line": 165,
        "fullcodeline": "rpmfiArchiveClose(fi);"
    },
    {
        "line": 166,
        "fullcodeline": "rpmfiFree(fi);"
    },
    {
        "line": 167,
        "fullcodeline": "Fclose(payload);"
    },
    {
        "line": 168,
        "fullcodeline": "free(tid);"
    },
    {
        "line": 169,
        "fullcodeline": "free(fpath);"
    },
    {
        "line": 20,
        "fullcodeline": "if (fi == NULL) {"
    },
    {
        "line": 31,
        "fullcodeline": "while (!rc) {"
    },
    {
        "line": 21,
        "fullcodeline": "rc = RPMERR_BAD_MAGIC;"
    },
    {
        "line": 33,
        "fullcodeline": "rc = rpmfiNext(fi);"
    },
    {
        "line": 41,
        "fullcodeline": "action = rpmfsGetAction(fs, rpmfiFX(fi));"
    },
    {
        "line": 42,
        "fullcodeline": "skip = XFA_SKIPPING(action);"
    },
    {
        "line": 43,
        "fullcodeline": "suffix = S_ISDIR(rpmfiFMode(fi)) ? NULL : tid;"
    },
    {
        "line": 51,
        "fullcodeline": "rc = rpmfiStat(fi, 1, &sb);"
    },
    {
        "line": 53,
        "fullcodeline": "fsmDebug(fpath, action, &sb);"
    },
    {
        "line": 60,
        "fullcodeline": "rc = rpmpluginsCallFsmFilePre(plugins, fi, fpath,"
    },
    {
        "line": 154,
        "fullcodeline": "rpmpluginsCallFsmFilePost(plugins, fi, fpath,"
    },
    {
        "line": 156,
        "fullcodeline": "fpath = _free(fpath);"
    },
    {
        "line": 35,
        "fullcodeline": "if (rc < 0) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (action != FA_TOUCH) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (!skip) {"
    },
    {
        "line": 45,
        "fullcodeline": "fpath = fsmFsPath(fi, suffix);"
    },
    {
        "line": 63,
        "fullcodeline": "skip = 1;"
    },
    {
        "line": 69,
        "fullcodeline": "int setmeta = 1;"
    },
    {
        "line": 151,
        "fullcodeline": "*failedFile = xstrdup(fpath);"
    },
    {
        "line": 36,
        "fullcodeline": "if (rc == RPMERR_ITER_END)"
    },
    {
        "line": 47,
        "fullcodeline": "fpath = fsmFsPath(fi, \"\");"
    },
    {
        "line": 65,
        "fullcodeline": "setFileState(fs, rpmfiFX(fi));"
    },
    {
        "line": 72,
        "fullcodeline": "if (!suffix) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (!suffix) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (S_ISREG(sb.st_mode)) {"
    },
    {
        "line": 116,
        "fullcodeline": "if (!rc && setmeta) {"
    },
    {
        "line": 129,
        "fullcodeline": "if (!skip) {"
    },
    {
        "line": 138,
        "fullcodeline": "rpmpsmNotify(psm, RPMCALLBACK_INST_PROGRESS, rpmfiArchiveTell(fi));"
    },
    {
        "line": 37,
        "fullcodeline": "rc = 0;"
    },
    {
        "line": 73,
        "fullcodeline": "rc = fsmBackup(fi, action);"
    },
    {
        "line": 77,
        "fullcodeline": "rc = fsmVerify(fpath, fi);"
    },
    {
        "line": 117,
        "fullcodeline": "rc = fsmSetmeta(fpath, fi, plugins, action, &sb, nofcaps);"
    },
    {
        "line": 119,
        "fullcodeline": "} else if (firsthardlink >= 0 && rpmfiArchiveHasContent(fi)) {"
    },
    {
        "line": 134,
        "fullcodeline": "errno = saveerrno;"
    },
    {
        "line": 140,
        "fullcodeline": "if (!skip) {"
    },
    {
        "line": 79,
        "fullcodeline": "rc = (action == FA_TOUCH) ? 0 : RPMERR_ENOENT;"
    },
    {
        "line": 83,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 122,
        "fullcodeline": "char *fn = rpmfilesFN(files, firsthardlink);"
    },
    {
        "line": 123,
        "fullcodeline": "rc = expandRegular(fi, fn, psm, 0, nodigest, 0);"
    },
    {
        "line": 124,
        "fullcodeline": "firsthardlink = -1;"
    },
    {
        "line": 125,
        "fullcodeline": "free(fn);"
    },
    {
        "line": 131,
        "fullcodeline": "if (suffix && (action != FA_TOUCH)) {"
    },
    {
        "line": 84,
        "fullcodeline": "rc = fsmMkfile(fi, fpath, files, psm, nodigest,"
    },
    {
        "line": 87,
        "fullcodeline": "} else if (S_ISDIR(sb.st_mode)) {"
    },
    {
        "line": 132,
        "fullcodeline": "(void) fsmRemove(fpath, sb.st_mode);"
    },
    {
        "line": 145,
        "fullcodeline": "if (!rc)"
    },
    {
        "line": 143,
        "fullcodeline": "rc = fsmBackup(fi, action);"
    },
    {
        "line": 146,
        "fullcodeline": "rc = fsmCommit(&fpath, fi, action, suffix);"
    },
    {
        "line": 88,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 89,
        "fullcodeline": "mode_t mode = sb.st_mode;"
    },
    {
        "line": 90,
        "fullcodeline": "mode &= ~07777;"
    },
    {
        "line": 91,
        "fullcodeline": "mode |=  00700;"
    },
    {
        "line": 92,
        "fullcodeline": "rc = fsmMkdir(fpath, mode);"
    },
    {
        "line": 94,
        "fullcodeline": "} else if (S_ISLNK(sb.st_mode)) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 96,
        "fullcodeline": "rc = fsmSymlink(rpmfiFLink(fi), fpath);"
    },
    {
        "line": 98,
        "fullcodeline": "} else if (S_ISFIFO(sb.st_mode)) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 101,
        "fullcodeline": "rc = fsmMkfifo(fpath, 0000);"
    },
    {
        "line": 103,
        "fullcodeline": "} else if (S_ISCHR(sb.st_mode) ||"
    },
    {
        "line": 105,
        "fullcodeline": "S_ISSOCK(sb.st_mode))"
    },
    {
        "line": 104,
        "fullcodeline": "S_ISBLK(sb.st_mode) ||"
    },
    {
        "line": 107,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 108,
        "fullcodeline": "rc = fsmMknod(fpath, sb.st_mode, sb.st_rdev);"
    },
    {
        "line": 112,
        "fullcodeline": "if (!IS_DEV_LOG(fpath))"
    },
    {
        "line": 113,
        "fullcodeline": "rc = RPMERR_UNKNOWN_FILETYPE;"
    }
]