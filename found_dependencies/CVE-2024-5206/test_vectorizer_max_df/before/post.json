[
    {
        "line": 2,
        "fullcodeline": "test_data = [\"abc\", \"dea\", \"eat\"]"
    },
    {
        "line": 3,
        "fullcodeline": "vect = CountVectorizer(analyzer=\"char\", max_df=1.0)"
    },
    {
        "line": 4,
        "fullcodeline": "vect.fit(test_data)"
    },
    {
        "line": 5,
        "fullcodeline": "assert \"a\" in vect.vocabulary_.keys()"
    },
    {
        "line": 6,
        "fullcodeline": "assert len(vect.vocabulary_.keys()) == 6"
    },
    {
        "line": 7,
        "fullcodeline": "assert len(vect.stop_words_) == 0"
    },
    {
        "line": 9,
        "fullcodeline": "vect.max_df = 0.5  # 0.5 * 3 documents -> max_doc_count == 1.5"
    },
    {
        "line": 10,
        "fullcodeline": "vect.fit(test_data)"
    },
    {
        "line": 11,
        "fullcodeline": "assert \"a\" not in vect.vocabulary_.keys()  # {ae} ignored"
    },
    {
        "line": 12,
        "fullcodeline": "assert len(vect.vocabulary_.keys()) == 4  # {bcdt} remain"
    },
    {
        "line": 13,
        "fullcodeline": "assert \"a\" in vect.stop_words_"
    },
    {
        "line": 14,
        "fullcodeline": "assert len(vect.stop_words_) == 2"
    },
    {
        "line": 16,
        "fullcodeline": "vect.max_df = 1"
    },
    {
        "line": 17,
        "fullcodeline": "vect.fit(test_data)"
    },
    {
        "line": 18,
        "fullcodeline": "assert \"a\" not in vect.vocabulary_.keys()  # {ae} ignored"
    },
    {
        "line": 19,
        "fullcodeline": "assert len(vect.vocabulary_.keys()) == 4  # {bcdt} remain"
    },
    {
        "line": 20,
        "fullcodeline": "assert \"a\" in vect.stop_words_"
    },
    {
        "line": 21,
        "fullcodeline": "assert len(vect.stop_words_) == 2"
    }
]