[
    {
        "line": 8,
        "fullcodeline": "int     ret = 0, sz;"
    },
    {
        "line": 9,
        "fullcodeline": "byte    buffer[DSA_HALF_SIZE];"
    },
    {
        "line": 16,
        "fullcodeline": "tmp = out;"
    },
    {
        "line": 18,
        "fullcodeline": "sz = min((int)sizeof(buffer), mp_unsigned_bin_size(&key->q));"
    },
    {
        "line": 28,
        "fullcodeline": "qMinus1 = &kInv;"
    },
    {
        "line": 177,
        "fullcodeline": "mp_forcezero(&kInv);"
    },
    {
        "line": 178,
        "fullcodeline": "mp_forcezero(&k);"
    },
    {
        "line": 180,
        "fullcodeline": "mp_forcezero(&b);"
    },
    {
        "line": 12,
        "fullcodeline": "if (digest == NULL || out == NULL || key == NULL || rng == NULL) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (mp_init_multi(&k, &kInv, &r, &s, &H, &b) != MP_OKAY)"
    },
    {
        "line": 36,
        "fullcodeline": "if (mp_sub_d(&key->q, 1, qMinus1))"
    },
    {
        "line": 39,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 157,
        "fullcodeline": "if (ret == 0)  {"
    },
    {
        "line": 37,
        "fullcodeline": "ret = MP_SUB_E;"
    },
    {
        "line": 55,
        "fullcodeline": "if (ret == 0 && mp_add_d(&k, 1, &k) != MP_OKAY)"
    },
    {
        "line": 56,
        "fullcodeline": "ret = MP_MOD_E;"
    },
    {
        "line": 96,
        "fullcodeline": "if (ret == 0 && mp_add_d(&b, 1, &b) != MP_OKAY)"
    },
    {
        "line": 97,
        "fullcodeline": "ret = MP_MOD_E;"
    },
    {
        "line": 100,
        "fullcodeline": "if (ret == 0 && mp_read_unsigned_bin(&H, digest,"
    },
    {
        "line": 102,
        "fullcodeline": "ret = MP_READ_E;"
    },
    {
        "line": 106,
        "fullcodeline": "if (ret == 0 && mp_exptmod_ex(&key->g, &k, key->q.used, &key->p,"
    },
    {
        "line": 108,
        "fullcodeline": "ret = MP_EXPTMOD_E;"
    },
    {
        "line": 115,
        "fullcodeline": "if (ret == 0 && mp_mulmod(&k, &b, &key->q, &k) != MP_OKAY)"
    },
    {
        "line": 116,
        "fullcodeline": "ret = MP_MULMOD_E;"
    },
    {
        "line": 119,
        "fullcodeline": "if (ret == 0 && mp_invmod(&k, &key->q, &kInv) != MP_OKAY)"
    },
    {
        "line": 120,
        "fullcodeline": "ret = MP_INVMOD_E;"
    },
    {
        "line": 122,
        "fullcodeline": "if (ret == 0 && mp_mod(&r, &key->q, &r) != MP_OKAY)"
    },
    {
        "line": 123,
        "fullcodeline": "ret = MP_MOD_E;"
    },
    {
        "line": 126,
        "fullcodeline": "if (ret == 0 && mp_mul(&key->x, &r, &s) != MP_OKAY)"
    },
    {
        "line": 127,
        "fullcodeline": "ret = MP_MUL_E;"
    },
    {
        "line": 130,
        "fullcodeline": "if (ret == 0 && mp_mulmod(&s, &kInv, &key->q, &s) != MP_OKAY)"
    },
    {
        "line": 131,
        "fullcodeline": "ret = MP_MULMOD_E;"
    },
    {
        "line": 134,
        "fullcodeline": "if (ret == 0 && mp_mulmod(&H, &kInv, &key->q, &H) != MP_OKAY)"
    },
    {
        "line": 135,
        "fullcodeline": "ret = MP_MULMOD_E;"
    },
    {
        "line": 139,
        "fullcodeline": "if (ret == 0 && mp_add(&s, &H, &s) != MP_OKAY)"
    },
    {
        "line": 140,
        "fullcodeline": "ret = MP_ADD_E;"
    },
    {
        "line": 144,
        "fullcodeline": "if (ret == 0 && mp_mulmod(&s, &b, &key->q, &s) != MP_OKAY)"
    },
    {
        "line": 145,
        "fullcodeline": "ret = MP_MULMOD_E;"
    },
    {
        "line": 148,
        "fullcodeline": "if (ret == 0 && mp_mod(&s, &key->q, &s) != MP_OKAY)"
    },
    {
        "line": 149,
        "fullcodeline": "ret = MP_MOD_E;"
    },
    {
        "line": 153,
        "fullcodeline": "if (ret == 0 && (mp_iszero(&r) == MP_YES || mp_iszero(&s) == MP_YES))"
    },
    {
        "line": 154,
        "fullcodeline": "ret = MP_ZERO_E;"
    },
    {
        "line": 158,
        "fullcodeline": "int rSz = mp_unsigned_bin_size(&r);"
    },
    {
        "line": 159,
        "fullcodeline": "int sSz = mp_unsigned_bin_size(&s);"
    },
    {
        "line": 161,
        "fullcodeline": "while (rSz++ < DSA_HALF_SIZE) {"
    },
    {
        "line": 42,
        "fullcodeline": "ret = wc_RNG_GenerateBlock(rng, buffer, sz);"
    },
    {
        "line": 52,
        "fullcodeline": "} while (ret == 0 && mp_cmp(&k, qMinus1) != MP_LT);"
    },
    {
        "line": 91,
        "fullcodeline": "ret = wc_RNG_GenerateBlock(rng, buffer, sz);"
    },
    {
        "line": 94,
        "fullcodeline": "} while (ret == 0 && mp_cmp(&b, qMinus1) != MP_LT);"
    },
    {
        "line": 165,
        "fullcodeline": "if (mp_to_unsigned_bin(&r, out) != MP_OKAY)"
    },
    {
        "line": 166,
        "fullcodeline": "ret = MP_TO_E;"
    },
    {
        "line": 168,
        "fullcodeline": "out = tmp + DSA_HALF_SIZE;  /* advance to s in output */"
    },
    {
        "line": 172,
        "fullcodeline": "ret = mp_to_unsigned_bin(&s, out);"
    },
    {
        "line": 45,
        "fullcodeline": "if (ret == 0 && mp_read_unsigned_bin(&k, buffer, sz) != MP_OKAY)"
    },
    {
        "line": 46,
        "fullcodeline": "ret = MP_READ_E;"
    },
    {
        "line": 92,
        "fullcodeline": "if (ret == 0 && mp_read_unsigned_bin(&b, buffer, sz) != MP_OKAY)"
    },
    {
        "line": 93,
        "fullcodeline": "ret = MP_READ_E;"
    },
    {
        "line": 162,
        "fullcodeline": "*out++ = 0x00;  /* pad front with zeros */"
    },
    {
        "line": 169,
        "fullcodeline": "while (sSz++ < DSA_HALF_SIZE) {"
    },
    {
        "line": 170,
        "fullcodeline": "*out++ = 0x00;  /* pad front with zeros */"
    }
]