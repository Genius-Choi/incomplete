[
    {
        "line": 4,
        "fullcodeline": "int len, loop_run = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "while (c->chunked_encoding && !c->chunk_size &&"
    },
    {
        "line": 34,
        "fullcodeline": "if (c->buffer_end > c->buffer_ptr) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (c->buffer_ptr >= c->buffer_end) {"
    },
    {
        "line": 154,
        "fullcodeline": "for(c1 = first_http_ctx; c1; c1 = c1->next) {"
    },
    {
        "line": 159,
        "fullcodeline": "return -1;"
    },
    {
        "line": 7,
        "fullcodeline": "c->buffer_end > c->buffer_ptr) {"
    },
    {
        "line": 9,
        "fullcodeline": "len = recv(c->fd, c->buffer_ptr, 1, 0);"
    },
    {
        "line": 35,
        "fullcodeline": "len = recv(c->fd, c->buffer_ptr,"
    },
    {
        "line": 53,
        "fullcodeline": "if (c->buffer_ptr - c->buffer >= 2 && c->data_count > FFM_PACKET_SIZE) {"
    },
    {
        "line": 62,
        "fullcodeline": "FFServerStream *feed = c->stream;"
    },
    {
        "line": 11,
        "fullcodeline": "if (len < 0) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (len < 0) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (c->data_count > FFM_PACKET_SIZE) {"
    },
    {
        "line": 36,
        "fullcodeline": "FFMIN(c->chunk_size, c->buffer_end - c->buffer_ptr), 0);"
    },
    {
        "line": 54,
        "fullcodeline": "if (c->buffer[0] != 'f' ||"
    },
    {
        "line": 55,
        "fullcodeline": "c->buffer[1] != 'm') {"
    },
    {
        "line": 76,
        "fullcodeline": "feed->feed_write_index += FFM_PACKET_SIZE;"
    },
    {
        "line": 155,
        "fullcodeline": "if (c1->state == HTTPSTATE_WAIT_FEED &&"
    },
    {
        "line": 156,
        "fullcodeline": "c1->stream->feed == c->stream->feed)"
    },
    {
        "line": 157,
        "fullcodeline": "c1->state = HTTPSTATE_SEND_DATA_TRAILER;"
    },
    {
        "line": 12,
        "fullcodeline": "if (ff_neterrno() != AVERROR(EAGAIN) &&"
    },
    {
        "line": 78,
        "fullcodeline": "if (feed->feed_write_index > c->stream->feed_size)"
    },
    {
        "line": 94,
        "fullcodeline": "for(c1 = first_http_ctx; c1; c1 = c1->next) {"
    },
    {
        "line": 101,
        "fullcodeline": "AVFormatContext *s = avformat_alloc_context();"
    },
    {
        "line": 110,
        "fullcodeline": "fmt_in = av_find_input_format(feed->fmt->name);"
    },
    {
        "line": 114,
        "fullcodeline": "pb = avio_alloc_context(c->buffer, c->buffer_end - c->buffer,"
    },
    {
        "line": 119,
        "fullcodeline": "pb->seekable = 0;"
    },
    {
        "line": 121,
        "fullcodeline": "s->pb = pb;"
    },
    {
        "line": 13,
        "fullcodeline": "ff_neterrno() != AVERROR(EINTR))"
    },
    {
        "line": 17,
        "fullcodeline": "} else if (len == 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (ff_neterrno() != AVERROR(EAGAIN) &&"
    },
    {
        "line": 39,
        "fullcodeline": "ff_neterrno() != AVERROR(EINTR))"
    },
    {
        "line": 42,
        "fullcodeline": "} else if (len == 0)"
    },
    {
        "line": 71,
        "fullcodeline": "if (write(c->feed_fd, c->buffer, FFM_PACKET_SIZE) < 0) {"
    },
    {
        "line": 83,
        "fullcodeline": "feed->feed_write_index >= c->stream->feed_max_size)"
    },
    {
        "line": 84,
        "fullcodeline": "feed->feed_write_index = FFM_PACKET_SIZE;"
    },
    {
        "line": 87,
        "fullcodeline": "if (ffm_write_write_index(c->feed_fd, feed->feed_write_index) < 0) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (!s)"
    },
    {
        "line": 111,
        "fullcodeline": "if (!fmt_in)"
    },
    {
        "line": 116,
        "fullcodeline": "if (!pb)"
    },
    {
        "line": 128,
        "fullcodeline": "if (s->nb_streams != feed->nb_streams) {"
    },
    {
        "line": 136,
        "fullcodeline": "for (i = 0; i < s->nb_streams; i++) {"
    },
    {
        "line": 72,
        "fullcodeline": "http_log(\"Error writing to feed file: %s\\n\", strerror(errno));"
    },
    {
        "line": 89,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 122,
        "fullcodeline": "if (avformat_open_input(&s, c->stream->feed_filename, fmt_in, NULL) < 0) {"
    },
    {
        "line": 137,
        "fullcodeline": "LayeredAVStream *fst = feed->streams[i];"
    },
    {
        "line": 138,
        "fullcodeline": "AVStream *st = s->streams[i];"
    },
    {
        "line": 139,
        "fullcodeline": "avcodec_parameters_to_context(fst->codec, st->codecpar);"
    },
    {
        "line": 140,
        "fullcodeline": "avcodec_parameters_from_context(fst->codecpar, fst->codec);"
    },
    {
        "line": 47,
        "fullcodeline": "c->buffer_ptr += len;"
    },
    {
        "line": 48,
        "fullcodeline": "c->data_count += len;"
    },
    {
        "line": 49,
        "fullcodeline": "update_datarate(&c->datarate, c->data_count);"
    },
    {
        "line": 95,
        "fullcodeline": "if (c1->state == HTTPSTATE_WAIT_FEED &&"
    },
    {
        "line": 96,
        "fullcodeline": "c1->stream->feed == c->stream->feed)"
    },
    {
        "line": 97,
        "fullcodeline": "c1->state = HTTPSTATE_SEND_DATA;"
    },
    {
        "line": 20,
        "fullcodeline": "} else if (c->buffer_ptr - c->buffer >= 2 &&"
    },
    {
        "line": 21,
        "fullcodeline": "!memcmp(c->buffer_ptr - 1, \"\\r\\n\", 2)) {"
    },
    {
        "line": 22,
        "fullcodeline": "c->chunk_size = strtol(c->buffer, 0, 16);"
    },
    {
        "line": 25,
        "fullcodeline": "c->buffer_ptr = c->buffer;"
    },
    {
        "line": 23,
        "fullcodeline": "if (c->chunk_size == 0) // end of stream"
    },
    {
        "line": 27,
        "fullcodeline": "} else if (++loop_run > 10)"
    },
    {
        "line": 31,
        "fullcodeline": "c->buffer_ptr++;"
    }
]