[
    {
        "line": 6,
        "fullcodeline": "u32 msg[3];"
    },
    {
        "line": 12,
        "fullcodeline": "memcpy(ctx->dma_buffer, data, writelen);"
    },
    {
        "line": 13,
        "fullcodeline": "paddr = dma_map_single(ctx->dev, ctx->dma_buffer, writelen,"
    },
    {
        "line": 21,
        "fullcodeline": "msg[0] = SLIMPRO_IIC_ENCODE_MSG(SLIMPRO_IIC_BUS, chip, SLIMPRO_IIC_WRITE,"
    },
    {
        "line": 23,
        "fullcodeline": "msg[1] = SLIMPRO_IIC_ENCODE_FLAG_BUFADDR |"
    },
    {
        "line": 26,
        "fullcodeline": "msg[2] = (u32)paddr;"
    },
    {
        "line": 31,
        "fullcodeline": "rc = slimpro_i2c_send_msg(ctx, msg, msg);"
    },
    {
        "line": 33,
        "fullcodeline": "dma_unmap_single(ctx->dev, paddr, writelen, DMA_TO_DEVICE);"
    },
    {
        "line": 9,
        "fullcodeline": "if (writelen > I2C_SMBUS_BLOCK_MAX)"
    },
    {
        "line": 15,
        "fullcodeline": "if (dma_mapping_error(ctx->dev, paddr)) {"
    },
    {
        "line": 16,
        "fullcodeline": "dev_err(&ctx->adapter.dev, \"Error in mapping dma buffer %p\\n\","
    },
    {
        "line": 25,
        "fullcodeline": "SLIMPRO_IIC_ENCODE_ADDR(addr);"
    },
    {
        "line": 29,
        "fullcodeline": "reinit_completion(&ctx->rd_complete);"
    },
    {
        "line": 10,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 18,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 24,
        "fullcodeline": "SLIMPRO_IIC_ENCODE_UPPER_BUFADDR(paddr) |"
    }
]