[
    {
        "line": 6,
        "fullcodeline": "uint32_t types = up->types;"
    },
    {
        "line": 8,
        "fullcodeline": "p->types = types;"
    },
    {
        "line": 9,
        "fullcodeline": "for (n = 0; n < TEE_NUM_PARAMS; n++) {"
    },
    {
        "line": 12,
        "fullcodeline": "uint32_t flags = TEE_MEMORY_ACCESS_READ |"
    },
    {
        "line": 15,
        "fullcodeline": "switch (TEE_PARAM_TYPE_GET(types, n)) {"
    },
    {
        "line": 10,
        "fullcodeline": "uintptr_t a = up->vals[n * 2];"
    },
    {
        "line": 11,
        "fullcodeline": "size_t b = up->vals[n * 2 + 1];"
    },
    {
        "line": 18,
        "fullcodeline": "flags |= TEE_MEMORY_ACCESS_WRITE;"
    },
    {
        "line": 21,
        "fullcodeline": "p->u[n].mem.mobj = &mobj_virt;"
    },
    {
        "line": 22,
        "fullcodeline": "p->u[n].mem.offs = a;"
    },
    {
        "line": 23,
        "fullcodeline": "p->u[n].mem.size = b;"
    },
    {
        "line": 29,
        "fullcodeline": "p->u[n].val.a = a;"
    },
    {
        "line": 30,
        "fullcodeline": "p->u[n].val.b = b;"
    },
    {
        "line": 33,
        "fullcodeline": "memset(&p->u[n], 0, sizeof(p->u[n]));"
    },
    {
        "line": 24,
        "fullcodeline": "if (tee_mmu_check_access_rights(utc, flags, a, b))"
    }
]