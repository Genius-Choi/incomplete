[
    {
        "line": 2,
        "fullcodeline": "RList *secs = sections (bf);"
    },
    {
        "line": 6,
        "fullcodeline": "r_list_foreach (secs, iter, sec) {"
    },
    {
        "line": 41,
        "fullcodeline": "r_list_free (secs);"
    },
    {
        "line": 7,
        "fullcodeline": "type = -1;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!strcmp (sec->name, \".fini_array\")) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (type != -1) {"
    },
    {
        "line": 9,
        "fullcodeline": "type = R_BIN_ENTRY_TYPE_FINI;"
    },
    {
        "line": 16,
        "fullcodeline": "ut8 *buf = calloc (sec->size, 1);"
    },
    {
        "line": 20,
        "fullcodeline": "(void)r_buf_read_at (bf->buf, sec->paddr, buf, sec->size);"
    },
    {
        "line": 38,
        "fullcodeline": "free (buf);"
    },
    {
        "line": 17,
        "fullcodeline": "if (!buf) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (bits == 32) {"
    },
    {
        "line": 10,
        "fullcodeline": "} else if (!strcmp (sec->name, \".init_array\")) {"
    },
    {
        "line": 11,
        "fullcodeline": "type = R_BIN_ENTRY_TYPE_INIT;"
    },
    {
        "line": 22,
        "fullcodeline": "for (i = 0; (i + 3) < sec->size; i += 4) {"
    },
    {
        "line": 23,
        "fullcodeline": "ut32 addr32 = r_read_le32 (buf + i);"
    },
    {
        "line": 30,
        "fullcodeline": "for (i = 0; (i + 7) < sec->size; i += 8) {"
    },
    {
        "line": 12,
        "fullcodeline": "} else if (!strcmp (sec->name, \".preinit_array\")) {"
    },
    {
        "line": 31,
        "fullcodeline": "ut64 addr64 = r_read_le64 (buf + i);"
    },
    {
        "line": 13,
        "fullcodeline": "type = R_BIN_ENTRY_TYPE_PREINIT;"
    },
    {
        "line": 25,
        "fullcodeline": "RBinAddr *ba = newEntry (sec->paddr + i, (ut64)addr32, type, bits);"
    },
    {
        "line": 26,
        "fullcodeline": "r_list_append (ret, ba);"
    },
    {
        "line": 33,
        "fullcodeline": "RBinAddr *ba = newEntry (sec->paddr + i, addr64, type, bits);"
    },
    {
        "line": 34,
        "fullcodeline": "r_list_append (ret, ba);"
    }
]