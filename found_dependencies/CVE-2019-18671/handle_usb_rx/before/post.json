[
    {
        "line": 4,
        "fullcodeline": "uint8_t buf[64];"
    },
    {
        "line": 5,
        "fullcodeline": "memcpy(buf, msg, sizeof(buf));"
    },
    {
        "line": 7,
        "fullcodeline": "uint16_t msgId = buf[4] | ((uint16_t)buf[3]) << 8;"
    },
    {
        "line": 8,
        "fullcodeline": "uint32_t msgSize = buf[8]        |"
    },
    {
        "line": 19,
        "fullcodeline": "const MessagesMap_t *entry = message_map_entry(NORMAL_MSG, msgId, IN_MSG);"
    },
    {
        "line": 25,
        "fullcodeline": "tiny_dispatch(entry, buf + 9, msgSize);"
    },
    {
        "line": 13,
        "fullcodeline": "if (msgSize > 64 - 9) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (!entry) {"
    },
    {
        "line": 27,
        "fullcodeline": "usb_rx_helper(msg, len, NORMAL_MSG);"
    },
    {
        "line": 11,
        "fullcodeline": "((uint32_t)buf[5]) << 24;"
    },
    {
        "line": 14,
        "fullcodeline": "(*msg_failure)(FailureType_Failure_UnexpectedMessage, \"Malformed tiny packet\");"
    },
    {
        "line": 21,
        "fullcodeline": "(*msg_failure)(FailureType_Failure_UnexpectedMessage, \"Unknown message\");"
    },
    {
        "line": 10,
        "fullcodeline": "((uint32_t)buf[6]) << 16 |"
    },
    {
        "line": 9,
        "fullcodeline": "((uint32_t)buf[7]) <<  8 |"
    }
]