[
    {
        "line": 8,
        "fullcodeline": "uint8_t opad[block_size + RLC_MD_LEN];"
    },
    {
        "line": 9,
        "fullcodeline": "uint8_t *ipad = RLC_ALLOCA(uint8_t, block_size + in_len);"
    },
    {
        "line": 10,
        "fullcodeline": "uint8_t _key[RLC_MAX(RLC_MD_LEN, block_size)];"
    },
    {
        "line": 31,
        "fullcodeline": "memcpy(ipad + block_size, in, in_len);"
    },
    {
        "line": 32,
        "fullcodeline": "md_map(opad + block_size, ipad, block_size + in_len);"
    },
    {
        "line": 12,
        "fullcodeline": "if (ipad == NULL) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (key_len > block_size) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (key_len <= block_size) {"
    },
    {
        "line": 27,
        "fullcodeline": "for (int i = 0; i < block_size; i++) {"
    },
    {
        "line": 13,
        "fullcodeline": "RLC_THROW(ERR_NO_MEMORY);"
    },
    {
        "line": 18,
        "fullcodeline": "md_map(_key, key, key_len);"
    },
    {
        "line": 19,
        "fullcodeline": "key = _key;"
    },
    {
        "line": 20,
        "fullcodeline": "key_len = RLC_MD_LEN;"
    },
    {
        "line": 23,
        "fullcodeline": "memcpy(_key, key, key_len);"
    },
    {
        "line": 25,
        "fullcodeline": "key = _key;"
    },
    {
        "line": 28,
        "fullcodeline": "opad[i] = 0x5C ^ key[i];"
    },
    {
        "line": 29,
        "fullcodeline": "ipad[i] = 0x36 ^ key[i];"
    },
    {
        "line": 24,
        "fullcodeline": "memset(_key + key_len, 0, block_size - key_len);"
    }
]