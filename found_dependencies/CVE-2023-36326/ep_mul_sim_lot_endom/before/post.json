[
    {
        "line": 2,
        "fullcodeline": "const int len = RLC_FP_BITS + 1;"
    },
    {
        "line": 3,
        "fullcodeline": "int i, j, m, l, _l[2], sk;"
    },
    {
        "line": 4,
        "fullcodeline": "bn_t _k[2], q, v1[3], v2[3];"
    },
    {
        "line": 5,
        "fullcodeline": "int8_t ptr, *naf = RLC_ALLOCA(int8_t, 2 * n * len);"
    },
    {
        "line": 7,
        "fullcodeline": "bn_null(q);"
    },
    {
        "line": 9,
        "fullcodeline": "if (n <= 10) {"
    },
    {
        "line": 10,
        "fullcodeline": "ep_t *_p = RLC_ALLOCA(ep_t, 2 * n);"
    },
    {
        "line": 16,
        "fullcodeline": "bn_new(q);"
    },
    {
        "line": 33,
        "fullcodeline": "l = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "ep_curve_get_ord(q);"
    },
    {
        "line": 35,
        "fullcodeline": "ep_curve_get_v1(v1);"
    },
    {
        "line": 36,
        "fullcodeline": "ep_curve_get_v2(v2);"
    },
    {
        "line": 57,
        "fullcodeline": "ep_set_infty(r);"
    },
    {
        "line": 71,
        "fullcodeline": "ep_norm(r, r);"
    },
    {
        "line": 73,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 75,
        "fullcodeline": "bn_free(q);"
    },
    {
        "line": 76,
        "fullcodeline": "bn_free(_k[0]);"
    },
    {
        "line": 77,
        "fullcodeline": "bn_free(_k[1]);"
    },
    {
        "line": 81,
        "fullcodeline": "RLC_FREE(_p);"
    },
    {
        "line": 82,
        "fullcodeline": "RLC_FREE(naf);"
    },
    {
        "line": 89,
        "fullcodeline": "const int w = RLC_MAX(2, util_bits_dig(n) - 2), c = (1 << (w - 2));"
    },
    {
        "line": 90,
        "fullcodeline": "ep_t s, t, u, v, *_p = RLC_ALLOCA(ep_t, 2 * c);"
    },
    {
        "line": 92,
        "fullcodeline": "ep_null(s);"
    },
    {
        "line": 93,
        "fullcodeline": "ep_null(t);"
    },
    {
        "line": 94,
        "fullcodeline": "ep_null(u);"
    },
    {
        "line": 95,
        "fullcodeline": "ep_null(v);"
    },
    {
        "line": 13,
        "fullcodeline": "if (naf == NULL || _p == NULL) {"
    },
    {
        "line": 17,
        "fullcodeline": "for (j = 0; j < 2; j++) {"
    },
    {
        "line": 21,
        "fullcodeline": "for (i = 0; i < 2 * n; i++) {"
    },
    {
        "line": 26,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 37,
        "fullcodeline": "for (i = 0; i < n; i++) {"
    },
    {
        "line": 58,
        "fullcodeline": "for (i = l - 1; i >= 0; i--) {"
    },
    {
        "line": 78,
        "fullcodeline": "for (i = 0; i < 2 * n; i++) {"
    },
    {
        "line": 83,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 101,
        "fullcodeline": "bn_new(q);"
    },
    {
        "line": 102,
        "fullcodeline": "ep_new(s);"
    },
    {
        "line": 103,
        "fullcodeline": "ep_new(t);"
    },
    {
        "line": 104,
        "fullcodeline": "ep_new(u);"
    },
    {
        "line": 105,
        "fullcodeline": "ep_new(v);"
    },
    {
        "line": 122,
        "fullcodeline": "l = 0;"
    },
    {
        "line": 123,
        "fullcodeline": "ep_curve_get_ord(q);"
    },
    {
        "line": 124,
        "fullcodeline": "ep_curve_get_v1(v1);"
    },
    {
        "line": 125,
        "fullcodeline": "ep_curve_get_v2(v2);"
    },
    {
        "line": 146,
        "fullcodeline": "ep_set_infty(s);"
    },
    {
        "line": 182,
        "fullcodeline": "ep_norm(r, s);"
    },
    {
        "line": 184,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 186,
        "fullcodeline": "bn_free(q);"
    },
    {
        "line": 187,
        "fullcodeline": "ep_free(s);"
    },
    {
        "line": 188,
        "fullcodeline": "ep_free(t);"
    },
    {
        "line": 189,
        "fullcodeline": "ep_free(u);"
    },
    {
        "line": 190,
        "fullcodeline": "ep_free(v);"
    },
    {
        "line": 197,
        "fullcodeline": "RLC_FREE(_p);"
    },
    {
        "line": 198,
        "fullcodeline": "RLC_FREE(naf);"
    },
    {
        "line": 14,
        "fullcodeline": "RLC_THROW(ERR_NO_MEMORY);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_null(_k[j]);"
    },
    {
        "line": 19,
        "fullcodeline": "bn_new(_k[j]);"
    },
    {
        "line": 22,
        "fullcodeline": "ep_null(_p[i]);"
    },
    {
        "line": 23,
        "fullcodeline": "ep_new(_p[i]);"
    },
    {
        "line": 27,
        "fullcodeline": "bn_null(v1[i]);"
    },
    {
        "line": 28,
        "fullcodeline": "bn_null(v2[i]);"
    },
    {
        "line": 29,
        "fullcodeline": "bn_new(v1[i]);"
    },
    {
        "line": 30,
        "fullcodeline": "bn_new(v2[i]);"
    },
    {
        "line": 38,
        "fullcodeline": "ep_norm(_p[2*i], p[i]);"
    },
    {
        "line": 39,
        "fullcodeline": "ep_psi(_p[2*i + 1], _p[2*i]);"
    },
    {
        "line": 40,
        "fullcodeline": "bn_mod(_k[0], k[i], q);"
    },
    {
        "line": 41,
        "fullcodeline": "sk = bn_sign(_k[0]);"
    },
    {
        "line": 42,
        "fullcodeline": "bn_rec_glv(_k[0], _k[1], _k[0], q, (const bn_t *)v1, (const bn_t *)v2);"
    },
    {
        "line": 59,
        "fullcodeline": "ep_dbl(r, r);"
    },
    {
        "line": 79,
        "fullcodeline": "ep_free(_p[i]);"
    },
    {
        "line": 84,
        "fullcodeline": "bn_free(v1[i]);"
    },
    {
        "line": 85,
        "fullcodeline": "bn_free(v2[i]);"
    },
    {
        "line": 98,
        "fullcodeline": "if (naf == NULL || _p == NULL) {"
    },
    {
        "line": 106,
        "fullcodeline": "for (i = 0; i < 2; i++) {"
    },
    {
        "line": 115,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 126,
        "fullcodeline": "for (i = 0; i < n; i++) {"
    },
    {
        "line": 147,
        "fullcodeline": "for (i = l - 1; i >= 0; i--) {"
    },
    {
        "line": 191,
        "fullcodeline": "for (i = 0; i < 2; i++) {"
    },
    {
        "line": 199,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (sk == RLC_NEG) {"
    },
    {
        "line": 47,
        "fullcodeline": "for (j = 0; j < 2; j++) {"
    },
    {
        "line": 60,
        "fullcodeline": "for (j = 0; j < n; j++) {"
    },
    {
        "line": 99,
        "fullcodeline": "RLC_THROW(ERR_NO_MEMORY);"
    },
    {
        "line": 107,
        "fullcodeline": "bn_null(_k[i]);"
    },
    {
        "line": 108,
        "fullcodeline": "bn_new(_k[i]);"
    },
    {
        "line": 116,
        "fullcodeline": "bn_null(v1[i]);"
    },
    {
        "line": 117,
        "fullcodeline": "bn_null(v2[i]);"
    },
    {
        "line": 118,
        "fullcodeline": "bn_new(v1[i]);"
    },
    {
        "line": 119,
        "fullcodeline": "bn_new(v2[i]);"
    },
    {
        "line": 127,
        "fullcodeline": "bn_mod(_k[0], k[i], q);"
    },
    {
        "line": 128,
        "fullcodeline": "sk = bn_sign(_k[0]);"
    },
    {
        "line": 129,
        "fullcodeline": "bn_rec_glv(_k[0], _k[1], _k[0], q, (const bn_t *)v1, (const bn_t *)v2);"
    },
    {
        "line": 162,
        "fullcodeline": "ep_set_infty(t);"
    },
    {
        "line": 177,
        "fullcodeline": "ep_dbl(s, s);"
    },
    {
        "line": 178,
        "fullcodeline": "ep_add(s, s, t);"
    },
    {
        "line": 192,
        "fullcodeline": "bn_free(_k[i]);"
    },
    {
        "line": 200,
        "fullcodeline": "bn_free(v1[i]);"
    },
    {
        "line": 201,
        "fullcodeline": "bn_free(v2[i]);"
    },
    {
        "line": 44,
        "fullcodeline": "bn_neg(_k[0], _k[0]);"
    },
    {
        "line": 45,
        "fullcodeline": "bn_neg(_k[1], _k[1]);"
    },
    {
        "line": 48,
        "fullcodeline": "_l[j] = len;"
    },
    {
        "line": 49,
        "fullcodeline": "bn_rec_naf(&naf[(2*i + j)*len], &_l[j], _k[j], 2);"
    },
    {
        "line": 53,
        "fullcodeline": "l = RLC_MAX(l, _l[j]);"
    },
    {
        "line": 109,
        "fullcodeline": "for (j = 0; j < c; j++) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (sk == RLC_NEG) {"
    },
    {
        "line": 134,
        "fullcodeline": "for (j = 0; j < 2; j++) {"
    },
    {
        "line": 148,
        "fullcodeline": "for (j = 0; j < n; j++) {"
    },
    {
        "line": 163,
        "fullcodeline": "for (m = 1; m >= 0; m--) {"
    },
    {
        "line": 193,
        "fullcodeline": "for (j = 0; j < c; j++) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (bn_sign(_k[j]) == RLC_NEG) {"
    },
    {
        "line": 61,
        "fullcodeline": "for (m = 0; m < 2; m++) {"
    },
    {
        "line": 110,
        "fullcodeline": "ep_null(_p[i*c + j]);"
    },
    {
        "line": 111,
        "fullcodeline": "ep_new(_p[i*c + j]);"
    },
    {
        "line": 112,
        "fullcodeline": "ep_set_infty(_p[i*c + j]);"
    },
    {
        "line": 131,
        "fullcodeline": "bn_neg(_k[0], _k[0]);"
    },
    {
        "line": 132,
        "fullcodeline": "bn_neg(_k[1], _k[1]);"
    },
    {
        "line": 135,
        "fullcodeline": "_l[j] = len;"
    },
    {
        "line": 136,
        "fullcodeline": "bn_rec_naf(&naf[(2*i + j)*len], &_l[j], _k[j], w);"
    },
    {
        "line": 142,
        "fullcodeline": "l = RLC_MAX(l, _l[j]);"
    },
    {
        "line": 164,
        "fullcodeline": "ep_psi(t, t);"
    },
    {
        "line": 165,
        "fullcodeline": "ep_set_infty(u);"
    },
    {
        "line": 166,
        "fullcodeline": "ep_set_infty(v);"
    },
    {
        "line": 175,
        "fullcodeline": "ep_add(t, t, v);"
    },
    {
        "line": 194,
        "fullcodeline": "ep_free(_p[i*c + j]);"
    },
    {
        "line": 51,
        "fullcodeline": "ep_neg(_p[2*i + j], _p[2*i + j]);"
    },
    {
        "line": 137,
        "fullcodeline": "if (bn_sign(_k[j]) == RLC_NEG) {"
    },
    {
        "line": 149,
        "fullcodeline": "for (m = 0; m < 2; m++) {"
    },
    {
        "line": 167,
        "fullcodeline": "for (j = c - 1; j >= 0; j--) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (naf[(2*j + m)*len + i] > 0) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (naf[(2*j + m)*len + i] < 0) {"
    },
    {
        "line": 150,
        "fullcodeline": "ptr = naf[(2*j + m)*len + i];"
    },
    {
        "line": 168,
        "fullcodeline": "ep_add(u, u, _p[m*c + j]);"
    },
    {
        "line": 172,
        "fullcodeline": "ep_add(v, v, u);"
    },
    {
        "line": 173,
        "fullcodeline": "ep_set_infty(_p[m*c + j]);"
    },
    {
        "line": 63,
        "fullcodeline": "ep_add(r, r, _p[2*j + m]);"
    },
    {
        "line": 66,
        "fullcodeline": "ep_sub(r, r, _p[2*j + m]);"
    },
    {
        "line": 138,
        "fullcodeline": "for (m = 0; m < _l[j]; m++) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (ptr != 0) {"
    },
    {
        "line": 169,
        "fullcodeline": "if (j == 0) {"
    },
    {
        "line": 139,
        "fullcodeline": "naf[(2*i + j)*len + m] = -naf[(2*i + j)*len + m];"
    },
    {
        "line": 152,
        "fullcodeline": "ep_copy(t, p[j]);"
    },
    {
        "line": 157,
        "fullcodeline": "ep_add(_p[m*c + (ptr >> 1)], _p[m*c + (ptr >> 1)], t);"
    },
    {
        "line": 170,
        "fullcodeline": "ep_dbl(v, v);"
    },
    {
        "line": 153,
        "fullcodeline": "if (ptr < 0) {"
    },
    {
        "line": 154,
        "fullcodeline": "ptr = -ptr;"
    },
    {
        "line": 155,
        "fullcodeline": "ep_neg(t, t);"
    }
]