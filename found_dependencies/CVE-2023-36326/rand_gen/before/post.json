[
    {
        "line": 2,
        "fullcodeline": "int m = RLC_CEIL(out_len, RLC_MD_LEN);"
    },
    {
        "line": 3,
        "fullcodeline": "uint8_t hash[RLC_MD_LEN], data[(RLC_RAND_SIZE - 1)/2];"
    },
    {
        "line": 4,
        "fullcodeline": "ctx_t *ctx = core_get();"
    },
    {
        "line": 7,
        "fullcodeline": "memcpy(data, ctx->rand + 1, (RLC_RAND_SIZE - 1)/2);"
    },
    {
        "line": 8,
        "fullcodeline": "for (int i = 0; i < m; i++) {"
    },
    {
        "line": 10,
        "fullcodeline": "md_map(hash, data, sizeof(data));"
    },
    {
        "line": 12,
        "fullcodeline": "memcpy(out, hash, RLC_MIN(RLC_MD_LEN, out_len));"
    },
    {
        "line": 13,
        "fullcodeline": "out += RLC_MD_LEN;"
    },
    {
        "line": 14,
        "fullcodeline": "out_len -= RLC_MD_LEN;"
    },
    {
        "line": 16,
        "fullcodeline": "rand_inc(data, (RLC_RAND_SIZE - 1)/2, 1);"
    }
]