[
    {
        "line": 7,
        "fullcodeline": "const int lpe = (FP_PRIME + ep_param_level() + 7) / 8;"
    },
    {
        "line": 9,
        "fullcodeline": "bn_null(k);"
    },
    {
        "line": 10,
        "fullcodeline": "fp2_null(t);"
    },
    {
        "line": 11,
        "fullcodeline": "ep2_null(q);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_new(k);"
    },
    {
        "line": 19,
        "fullcodeline": "fp2_new(t);"
    },
    {
        "line": 20,
        "fullcodeline": "ep2_new(q);"
    },
    {
        "line": 23,
        "fullcodeline": "const int abNeq0 = (ep2_curve_opt_a() != RLC_ZERO) &&"
    },
    {
        "line": 50,
        "fullcodeline": "EP2_MAP_CONVERT_BYTES(0);"
    },
    {
        "line": 51,
        "fullcodeline": "EP2_MAP_APPLY_MAP(p);"
    },
    {
        "line": 52,
        "fullcodeline": "TMPL_MAP_CALL_ISOMAP(ep2, p);"
    },
    {
        "line": 55,
        "fullcodeline": "EP2_MAP_CONVERT_BYTES(1);"
    },
    {
        "line": 56,
        "fullcodeline": "EP2_MAP_APPLY_MAP(q);"
    },
    {
        "line": 57,
        "fullcodeline": "TMPL_MAP_CALL_ISOMAP(ep2, q);"
    },
    {
        "line": 66,
        "fullcodeline": "ep2_add(p, p, q);"
    },
    {
        "line": 67,
        "fullcodeline": "ep2_norm(p, p);"
    },
    {
        "line": 68,
        "fullcodeline": "ep2_mul_cof(p, p);"
    },
    {
        "line": 71,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 74,
        "fullcodeline": "bn_free(k);"
    },
    {
        "line": 75,
        "fullcodeline": "fp2_free(t);"
    },
    {
        "line": 76,
        "fullcodeline": "ep2_free(q);"
    },
    {
        "line": 14,
        "fullcodeline": "if (len != 2 * lpe) {"
    },
    {
        "line": 15,
        "fullcodeline": "RLC_THROW(ERR_NO_VALID);"
    },
    {
        "line": 24,
        "fullcodeline": "(ep2_curve_opt_b() != RLC_ZERO);"
    }
]