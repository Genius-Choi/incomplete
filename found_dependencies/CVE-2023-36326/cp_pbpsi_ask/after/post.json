[
    {
        "line": 2,
        "fullcodeline": "int i, result = RLC_OK;"
    },
    {
        "line": 3,
        "fullcodeline": "bn_t t, q, *p = RLC_ALLOCA(bn_t, m + 1), *_x = RLC_ALLOCA(bn_t, m + 1);"
    },
    {
        "line": 5,
        "fullcodeline": "bn_null(q);"
    },
    {
        "line": 6,
        "fullcodeline": "bn_null(t);"
    },
    {
        "line": 9,
        "fullcodeline": "bn_new(q);"
    },
    {
        "line": 10,
        "fullcodeline": "bn_new(t);"
    },
    {
        "line": 21,
        "fullcodeline": "pc_get_ord(q);"
    },
    {
        "line": 22,
        "fullcodeline": "bn_rand_mod(r, q);"
    },
    {
        "line": 43,
        "fullcodeline": "result = RLC_ERR;"
    },
    {
        "line": 46,
        "fullcodeline": "bn_free(q);"
    },
    {
        "line": 47,
        "fullcodeline": "bn_free(t);"
    },
    {
        "line": 52,
        "fullcodeline": "RLC_FREE(p);"
    },
    {
        "line": 53,
        "fullcodeline": "RLC_FREE(_x);"
    },
    {
        "line": 11,
        "fullcodeline": "if (p == NULL) {"
    },
    {
        "line": 14,
        "fullcodeline": "for (i = 0; i <= m; i++) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (m == 0) {"
    },
    {
        "line": 48,
        "fullcodeline": "for (i = 0; i <= m; i++) {"
    },
    {
        "line": 12,
        "fullcodeline": "RLC_THROW(ERR_NO_MEMORY);"
    },
    {
        "line": 15,
        "fullcodeline": "bn_null(p[i]);"
    },
    {
        "line": 16,
        "fullcodeline": "bn_new(p[i]);"
    },
    {
        "line": 17,
        "fullcodeline": "bn_null(_x[i]);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_new(_x[i]);"
    },
    {
        "line": 24,
        "fullcodeline": "g2_mul_gen(d[0], r);"
    },
    {
        "line": 49,
        "fullcodeline": "bn_free(p[i]);"
    },
    {
        "line": 50,
        "fullcodeline": "bn_free(_x[i]);"
    },
    {
        "line": 26,
        "fullcodeline": "bn_lag(p, x, q, m);"
    },
    {
        "line": 27,
        "fullcodeline": "g2_mul_sim_lot(d[0], s, p, m + 1);"
    },
    {
        "line": 28,
        "fullcodeline": "g2_mul(d[0], d[0], r);"
    },
    {
        "line": 29,
        "fullcodeline": "for (i = 0; i < m; i++) {"
    },
    {
        "line": 32,
        "fullcodeline": "for (i = 0; i < m; i++) {"
    },
    {
        "line": 30,
        "fullcodeline": "bn_copy(_x[i], x[i]);"
    },
    {
        "line": 33,
        "fullcodeline": "bn_copy(t, _x[i]);"
    },
    {
        "line": 34,
        "fullcodeline": "bn_copy(_x[i], _x[m - 1]);"
    },
    {
        "line": 35,
        "fullcodeline": "bn_lag(p, _x, q, m - 1);"
    },
    {
        "line": 36,
        "fullcodeline": "g2_mul_sim_lot(d[i + 1], s, p, m);"
    },
    {
        "line": 37,
        "fullcodeline": "g2_mul(d[i + 1], d[i + 1], r);"
    },
    {
        "line": 38,
        "fullcodeline": "bn_copy(_x[i], t);"
    }
]