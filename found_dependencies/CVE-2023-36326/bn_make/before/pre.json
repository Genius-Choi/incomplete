[
    {
        "line": 6,
        "fullcodeline": "digits = RLC_MAX(digits, 1);"
    },
    {
        "line": 2,
        "fullcodeline": "if (digits < 0) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (digits % RLC_BN_SIZE != 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (a != NULL) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (a->dp == NULL) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (a != NULL) {"
    },
    {
        "line": 3,
        "fullcodeline": "RLC_THROW(ERR_NO_VALID);"
    },
    {
        "line": 11,
        "fullcodeline": "digits += (RLC_BN_SIZE - digits % RLC_BN_SIZE);"
    },
    {
        "line": 15,
        "fullcodeline": "a->dp = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "a->dp = _aligned_malloc(digits * sizeof(dig_t), ALIGN);"
    },
    {
        "line": 32,
        "fullcodeline": "free((void *)a);"
    },
    {
        "line": 33,
        "fullcodeline": "RLC_THROW(ERR_NO_MEMORY);"
    },
    {
        "line": 45,
        "fullcodeline": "a->used = 1;"
    },
    {
        "line": 46,
        "fullcodeline": "a->dp[0] = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "a->alloc = digits;"
    },
    {
        "line": 48,
        "fullcodeline": "a->sign = RLC_POS;"
    }
]