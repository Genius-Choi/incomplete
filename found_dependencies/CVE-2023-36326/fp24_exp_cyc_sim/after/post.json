[
    {
        "line": 3,
        "fullcodeline": "int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;"
    },
    {
        "line": 4,
        "fullcodeline": "fp24_t r, t0[1 << (EP_WIDTH - 2)];"
    },
    {
        "line": 5,
        "fullcodeline": "fp24_t s, t1[1 << (EP_WIDTH - 2)];"
    },
    {
        "line": 16,
        "fullcodeline": "fp24_null(r);"
    },
    {
        "line": 17,
        "fullcodeline": "fp24_null(s);"
    },
    {
        "line": 8,
        "fullcodeline": "if (bn_is_zero(b)) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (bn_is_zero(d)) {"
    },
    {
        "line": 20,
        "fullcodeline": "fp24_new(r);"
    },
    {
        "line": 21,
        "fullcodeline": "fp24_new(s);"
    },
    {
        "line": 42,
        "fullcodeline": "fp24_copy(t0[0], a);"
    },
    {
        "line": 43,
        "fullcodeline": "fp24_copy(t1[0], c);"
    },
    {
        "line": 45,
        "fullcodeline": "l0 = l1 = RLC_FP_BITS + 1;"
    },
    {
        "line": 46,
        "fullcodeline": "bn_rec_naf(naf0, &l0, b, FP_WIDTH);"
    },
    {
        "line": 47,
        "fullcodeline": "bn_rec_naf(naf1, &l1, d, FP_WIDTH);"
    },
    {
        "line": 49,
        "fullcodeline": "l = RLC_MAX(l0, l1);"
    },
    {
        "line": 61,
        "fullcodeline": "_k = naf0 + l - 1;"
    },
    {
        "line": 62,
        "fullcodeline": "_m = naf1 + l - 1;"
    },
    {
        "line": 64,
        "fullcodeline": "fp24_set_dig(r, 1);"
    },
    {
        "line": 87,
        "fullcodeline": "fp24_copy(e, r);"
    },
    {
        "line": 90,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 93,
        "fullcodeline": "fp24_free(r);"
    },
    {
        "line": 94,
        "fullcodeline": "fp24_free(s);"
    },
    {
        "line": 22,
        "fullcodeline": "for (int i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (bn_sign(b) == RLC_NEG) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (bn_sign(d) == RLC_NEG) {"
    },
    {
        "line": 65,
        "fullcodeline": "for (int i = l - 1; i >= 0; i--, _k--, _m--) {"
    },
    {
        "line": 95,
        "fullcodeline": "for (int i = 0; i < (1 << (FP_WIDTH - 2)); i++) {"
    },
    {
        "line": 9,
        "fullcodeline": "return fp24_exp_cyc(e, c, d);"
    },
    {
        "line": 13,
        "fullcodeline": "return fp24_exp_cyc(e, a, b);"
    },
    {
        "line": 23,
        "fullcodeline": "fp24_null(t0[i]);"
    },
    {
        "line": 24,
        "fullcodeline": "fp24_null(t1[i]);"
    },
    {
        "line": 25,
        "fullcodeline": "fp24_new(t0[i]);"
    },
    {
        "line": 26,
        "fullcodeline": "fp24_new(t1[i]);"
    },
    {
        "line": 66,
        "fullcodeline": "fp24_sqr(r, r);"
    },
    {
        "line": 96,
        "fullcodeline": "fp24_free(t0[i]);"
    },
    {
        "line": 97,
        "fullcodeline": "fp24_free(t1[i]);"
    },
    {
        "line": 51,
        "fullcodeline": "for (size_t i = 0; i < l0; i++) {"
    },
    {
        "line": 56,
        "fullcodeline": "for (size_t i = 0; i < l1; i++) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (n0 > 0) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (n0 < 0) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (n1 > 0) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (n1 < 0) {"
    },
    {
        "line": 52,
        "fullcodeline": "naf0[i] = -naf0[i];"
    },
    {
        "line": 57,
        "fullcodeline": "naf1[i] = -naf1[i];"
    },
    {
        "line": 72,
        "fullcodeline": "fp24_mul(r, r, t0[n0 / 2]);"
    },
    {
        "line": 75,
        "fullcodeline": "fp24_inv_cyc(s, t0[-n0 / 2]);"
    },
    {
        "line": 76,
        "fullcodeline": "fp24_mul(r, r, s);"
    },
    {
        "line": 79,
        "fullcodeline": "fp24_mul(r, r, t1[n1 / 2]);"
    },
    {
        "line": 82,
        "fullcodeline": "fp24_inv_cyc(s, t1[-n1 / 2]);"
    },
    {
        "line": 83,
        "fullcodeline": "fp24_mul(r, r, s);"
    }
]