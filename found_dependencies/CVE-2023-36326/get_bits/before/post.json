[
    {
        "line": 5,
        "fullcodeline": "RLC_RIP(from, f, from);"
    },
    {
        "line": 6,
        "fullcodeline": "RLC_RIP(to, t, to);"
    },
    {
        "line": 8,
        "fullcodeline": "if (f == t) {"
    },
    {
        "line": 11,
        "fullcodeline": "mf = RLC_MASK(from);"
    },
    {
        "line": 18,
        "fullcodeline": "mf = mf ^ mt;"
    },
    {
        "line": 12,
        "fullcodeline": "if (to + 1 >= RLC_DIG) {"
    },
    {
        "line": 20,
        "fullcodeline": "return ((a->dp[f] & (mf)) >> from);"
    },
    {
        "line": 22,
        "fullcodeline": "mf = RLC_MASK(RLC_DIG - from) << from;"
    },
    {
        "line": 23,
        "fullcodeline": "mt = RLC_MASK(to + 1);"
    },
    {
        "line": 13,
        "fullcodeline": "mt = RLC_DMASK;"
    },
    {
        "line": 25,
        "fullcodeline": "return ((a->dp[f] & mf) >> from) |"
    },
    {
        "line": 15,
        "fullcodeline": "mt = RLC_MASK(to + 1);"
    },
    {
        "line": 26,
        "fullcodeline": "((a->dp[t] & mt) << (RLC_DIG - from));"
    }
]