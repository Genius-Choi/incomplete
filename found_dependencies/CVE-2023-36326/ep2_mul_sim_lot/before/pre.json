[
    {
        "line": 2,
        "fullcodeline": "const int len = RLC_FP_BITS + 1;"
    },
    {
        "line": 3,
        "fullcodeline": "int i, j, m, l, _l[4];"
    },
    {
        "line": 4,
        "fullcodeline": "bn_t _k[4], q, x;"
    },
    {
        "line": 5,
        "fullcodeline": "int8_t ptr, *naf = RLC_ALLOCA(int8_t, 4 * n * len);"
    },
    {
        "line": 12,
        "fullcodeline": "bn_null(q);"
    },
    {
        "line": 13,
        "fullcodeline": "bn_null(x);"
    },
    {
        "line": 7,
        "fullcodeline": "if (n == 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (n <= 10) {"
    },
    {
        "line": 8,
        "fullcodeline": "ep2_set_infty(r);"
    },
    {
        "line": 16,
        "fullcodeline": "ep2_t *_p = RLC_ALLOCA(ep2_t, 4 * n);"
    },
    {
        "line": 22,
        "fullcodeline": "bn_new(q);"
    },
    {
        "line": 23,
        "fullcodeline": "bn_new(x);"
    },
    {
        "line": 33,
        "fullcodeline": "l = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "ep2_curve_get_ord(q);"
    },
    {
        "line": 35,
        "fullcodeline": "fp_prime_get_par(x);"
    },
    {
        "line": 54,
        "fullcodeline": "ep2_set_infty(r);"
    },
    {
        "line": 86,
        "fullcodeline": "const int w = RLC_MAX(2, util_bits_dig(n) - 2), c = (1 << (w - 2));"
    },
    {
        "line": 87,
        "fullcodeline": "ep2_t s, t, u, v, *_p = RLC_ALLOCA(ep2_t, 4 * c);"
    },
    {
        "line": 89,
        "fullcodeline": "ep2_null(s);"
    },
    {
        "line": 90,
        "fullcodeline": "ep2_null(t);"
    },
    {
        "line": 91,
        "fullcodeline": "ep2_null(u);"
    },
    {
        "line": 92,
        "fullcodeline": "ep2_null(v);"
    },
    {
        "line": 24,
        "fullcodeline": "for (j = 0; j < 4; j++) {"
    },
    {
        "line": 36,
        "fullcodeline": "for (i = 0; i < n; i++) {"
    },
    {
        "line": 55,
        "fullcodeline": "for (i = l - 1; i >= 0; i--) {"
    },
    {
        "line": 76,
        "fullcodeline": "for (j = 0; j < 4; j++) {"
    },
    {
        "line": 98,
        "fullcodeline": "bn_new(q);"
    },
    {
        "line": 99,
        "fullcodeline": "bn_new(x);"
    },
    {
        "line": 100,
        "fullcodeline": "ep2_new(s);"
    },
    {
        "line": 101,
        "fullcodeline": "ep2_new(t);"
    },
    {
        "line": 102,
        "fullcodeline": "ep2_new(u);"
    },
    {
        "line": 103,
        "fullcodeline": "ep2_new(v);"
    },
    {
        "line": 114,
        "fullcodeline": "l = 0;"
    },
    {
        "line": 115,
        "fullcodeline": "ep2_curve_get_ord(q);"
    },
    {
        "line": 116,
        "fullcodeline": "fp_prime_get_par(x);"
    },
    {
        "line": 132,
        "fullcodeline": "ep2_set_infty(s);"
    },
    {
        "line": 168,
        "fullcodeline": "ep2_norm(r, s);"
    },
    {
        "line": 19,
        "fullcodeline": "if (naf == NULL || _p == NULL) {"
    },
    {
        "line": 25,
        "fullcodeline": "bn_null(_k[j]);"
    },
    {
        "line": 26,
        "fullcodeline": "bn_new(_k[j]);"
    },
    {
        "line": 37,
        "fullcodeline": "ep2_norm(_p[4*i], p[i]);"
    },
    {
        "line": 38,
        "fullcodeline": "ep2_frb(_p[4*i + 1], _p[4*i], 1);"
    },
    {
        "line": 39,
        "fullcodeline": "ep2_frb(_p[4*i + 2], _p[4*i + 1], 1);"
    },
    {
        "line": 40,
        "fullcodeline": "ep2_frb(_p[4*i + 3], _p[4*i + 2], 1);"
    },
    {
        "line": 42,
        "fullcodeline": "bn_mod(_k[0], k[i], q);"
    },
    {
        "line": 43,
        "fullcodeline": "bn_rec_frb(_k, 4, _k[0], x, q, ep_curve_is_pairf() == EP_BN);"
    },
    {
        "line": 56,
        "fullcodeline": "ep2_dbl(r, r);"
    },
    {
        "line": 104,
        "fullcodeline": "for (i = 0; i < 4; i++) {"
    },
    {
        "line": 117,
        "fullcodeline": "for (i = 0; i < n; i++) {"
    },
    {
        "line": 133,
        "fullcodeline": "for (i = l - 1; i >= 0; i--) {"
    },
    {
        "line": 178,
        "fullcodeline": "for (i = 0; i < 4; i++) {"
    },
    {
        "line": 27,
        "fullcodeline": "for (i = 0; i < n; i++) {"
    },
    {
        "line": 44,
        "fullcodeline": "for (j = 0; j < 4; j++) {"
    },
    {
        "line": 57,
        "fullcodeline": "for (j = 0; j < n; j++) {"
    },
    {
        "line": 78,
        "fullcodeline": "for (i = 0; i < n; i++) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (naf == NULL || _p == NULL) {"
    },
    {
        "line": 105,
        "fullcodeline": "bn_null(_k[i]);"
    },
    {
        "line": 106,
        "fullcodeline": "bn_new(_k[i]);"
    },
    {
        "line": 118,
        "fullcodeline": "bn_mod(_k[0], k[i], q);"
    },
    {
        "line": 119,
        "fullcodeline": "bn_rec_frb(_k, 4, _k[0], x, q, ep_curve_is_pairf() == EP_BN);"
    },
    {
        "line": 148,
        "fullcodeline": "ep2_set_infty(t);"
    },
    {
        "line": 163,
        "fullcodeline": "ep2_dbl(s, s);"
    },
    {
        "line": 164,
        "fullcodeline": "ep2_add(s, s, t);"
    },
    {
        "line": 28,
        "fullcodeline": "ep2_null(_p[4*i + j]);"
    },
    {
        "line": 29,
        "fullcodeline": "ep2_new(_p[4*i + j]);"
    },
    {
        "line": 45,
        "fullcodeline": "_l[j] = len;"
    },
    {
        "line": 46,
        "fullcodeline": "bn_rec_naf(&naf[(4*i + j)*len], &_l[j], _k[j], 2);"
    },
    {
        "line": 50,
        "fullcodeline": "l = RLC_MAX(l, _l[j]);"
    },
    {
        "line": 79,
        "fullcodeline": "ep2_free(_p[4*i + j]);"
    },
    {
        "line": 107,
        "fullcodeline": "for (j = 0; j < c; j++) {"
    },
    {
        "line": 120,
        "fullcodeline": "for (j = 0; j < 4; j++) {"
    },
    {
        "line": 134,
        "fullcodeline": "for (j = 0; j < n; j++) {"
    },
    {
        "line": 149,
        "fullcodeline": "for (m = 3; m >= 0; m--) {"
    },
    {
        "line": 180,
        "fullcodeline": "for (j = 0; j < c; j++) {"
    },
    {
        "line": 58,
        "fullcodeline": "for (m = 0; m < 4; m++) {"
    },
    {
        "line": 108,
        "fullcodeline": "ep2_null(_p[i*c + j]);"
    },
    {
        "line": 109,
        "fullcodeline": "ep2_new(_p[i*c + j]);"
    },
    {
        "line": 110,
        "fullcodeline": "ep2_set_infty(_p[i*c + j]);"
    },
    {
        "line": 121,
        "fullcodeline": "_l[j] = len;"
    },
    {
        "line": 122,
        "fullcodeline": "bn_rec_naf(&naf[(4*i + j)*len], &_l[j], _k[j], w);"
    },
    {
        "line": 128,
        "fullcodeline": "l = RLC_MAX(l, _l[j]);"
    },
    {
        "line": 150,
        "fullcodeline": "ep2_frb(t, t, 1);"
    },
    {
        "line": 151,
        "fullcodeline": "ep2_set_infty(u);"
    },
    {
        "line": 152,
        "fullcodeline": "ep2_set_infty(v);"
    },
    {
        "line": 161,
        "fullcodeline": "ep2_add(t, t, v);"
    },
    {
        "line": 181,
        "fullcodeline": "ep2_free(_p[i*c + j]);"
    },
    {
        "line": 47,
        "fullcodeline": "if (bn_sign(_k[j]) == RLC_NEG) {"
    },
    {
        "line": 48,
        "fullcodeline": "ep2_neg(_p[4*i + j], _p[4*i + j]);"
    },
    {
        "line": 135,
        "fullcodeline": "for (m = 0; m < 4; m++) {"
    },
    {
        "line": 153,
        "fullcodeline": "for (j = c - 1; j >= 0; j--) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (naf[(4*j + m)*len + i] > 0) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (naf[(4*j + m)*len + i] < 0) {"
    },
    {
        "line": 123,
        "fullcodeline": "if (bn_sign(_k[j]) == RLC_NEG) {"
    },
    {
        "line": 136,
        "fullcodeline": "ptr = naf[(4*j + m)*len + i];"
    },
    {
        "line": 154,
        "fullcodeline": "ep2_add(u, u, _p[m*c + j]);"
    },
    {
        "line": 158,
        "fullcodeline": "ep2_add(v, v, u);"
    },
    {
        "line": 159,
        "fullcodeline": "ep2_set_infty(_p[m*c + j]);"
    },
    {
        "line": 60,
        "fullcodeline": "ep2_add(r, r, _p[4*j + m]);"
    },
    {
        "line": 63,
        "fullcodeline": "ep2_sub(r, r, _p[4*j + m]);"
    },
    {
        "line": 124,
        "fullcodeline": "for (m = 0; m < _l[j]; m++) {"
    },
    {
        "line": 137,
        "fullcodeline": "if (ptr != 0) {"
    },
    {
        "line": 155,
        "fullcodeline": "if (j == 0) {"
    },
    {
        "line": 125,
        "fullcodeline": "naf[(4*i + j)*len + m] = -naf[(4*i + j)*len + m];"
    },
    {
        "line": 138,
        "fullcodeline": "ep2_copy(t, p[j]);"
    },
    {
        "line": 143,
        "fullcodeline": "ep2_add(_p[m*c + (ptr/2)], _p[m*c + (ptr/2)], t);"
    },
    {
        "line": 156,
        "fullcodeline": "ep2_dbl(v, v);"
    },
    {
        "line": 139,
        "fullcodeline": "if (ptr < 0) {"
    },
    {
        "line": 140,
        "fullcodeline": "ptr = -ptr;"
    },
    {
        "line": 141,
        "fullcodeline": "ep2_neg(t, t);"
    }
]