[
    {
        "line": 3,
        "fullcodeline": "ep_t t[1 << (EP_WIDTH - 1)], q;"
    },
    {
        "line": 5,
        "fullcodeline": "uint8_t win[RLC_FP_BITS + 1];"
    },
    {
        "line": 12,
        "fullcodeline": "ep_null(q);"
    },
    {
        "line": 13,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 14,
        "fullcodeline": "bn_null(_k);"
    },
    {
        "line": 7,
        "fullcodeline": "if (bn_is_zero(k) || ep_is_infty(p)) {"
    },
    {
        "line": 17,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_new(_k);"
    },
    {
        "line": 23,
        "fullcodeline": "ep_new(q);"
    },
    {
        "line": 25,
        "fullcodeline": "ep_copy(t[0], p);"
    },
    {
        "line": 26,
        "fullcodeline": "ep_dbl(q, p);"
    },
    {
        "line": 32,
        "fullcodeline": "ep_curve_get_ord(n);"
    },
    {
        "line": 33,
        "fullcodeline": "bn_mod(_k, k, n);"
    },
    {
        "line": 44,
        "fullcodeline": "ep_set_infty(q);"
    },
    {
        "line": 45,
        "fullcodeline": "l = RLC_FP_BITS + 1;"
    },
    {
        "line": 46,
        "fullcodeline": "bn_rec_slw(win, &l, _k, EP_WIDTH);"
    },
    {
        "line": 58,
        "fullcodeline": "ep_norm(r, q);"
    },
    {
        "line": 64,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 8,
        "fullcodeline": "ep_set_infty(r);"
    },
    {
        "line": 19,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {"
    },
    {
        "line": 36,
        "fullcodeline": "for (i = 1; i < (1 << (EP_WIDTH - 1)); i++) {"
    },
    {
        "line": 47,
        "fullcodeline": "for (i = 0; i < l; i++) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (bn_sign(_k) == RLC_NEG) {"
    },
    {
        "line": 69,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 1)); i++) {"
    },
    {
        "line": 20,
        "fullcodeline": "ep_null(t[i]);"
    },
    {
        "line": 21,
        "fullcodeline": "ep_new(t[i]);"
    },
    {
        "line": 37,
        "fullcodeline": "ep_add(t[i], t[i - 1], q);"
    },
    {
        "line": 48,
        "fullcodeline": "if (win[i] == 0) {"
    },
    {
        "line": 49,
        "fullcodeline": "ep_dbl(q, q);"
    },
    {
        "line": 54,
        "fullcodeline": "ep_add(q, q, t[win[i] >> 1]);"
    },
    {
        "line": 51,
        "fullcodeline": "for (j = 0; j < util_bits_dig(win[i]); j++) {"
    },
    {
        "line": 52,
        "fullcodeline": "ep_dbl(q, q);"
    }
]