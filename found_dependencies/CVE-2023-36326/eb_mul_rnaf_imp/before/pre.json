[
    {
        "line": 3,
        "fullcodeline": "int8_t naf[RLC_FB_BITS + 1];"
    },
    {
        "line": 4,
        "fullcodeline": "eb_t t[1 << (EB_WIDTH - 2)];"
    },
    {
        "line": 15,
        "fullcodeline": "l = sizeof(naf);"
    },
    {
        "line": 16,
        "fullcodeline": "bn_rec_naf(naf, &l, k, EB_WIDTH);"
    },
    {
        "line": 18,
        "fullcodeline": "eb_copy(r, p);"
    },
    {
        "line": 31,
        "fullcodeline": "eb_copy(r, t[0]);"
    },
    {
        "line": 99,
        "fullcodeline": "eb_norm(r, r);"
    },
    {
        "line": 105,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 8,
        "fullcodeline": "for (i = 0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 19,
        "fullcodeline": "for (i = 0; i < l; i++) {"
    },
    {
        "line": 91,
        "fullcodeline": "for (i = 1; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (bn_sign(k) == RLC_NEG) {"
    },
    {
        "line": 109,
        "fullcodeline": "for (i = 0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 9,
        "fullcodeline": "eb_null(t[i]);"
    },
    {
        "line": 10,
        "fullcodeline": "eb_new(t[i]);"
    },
    {
        "line": 11,
        "fullcodeline": "eb_set_infty(t[i]);"
    },
    {
        "line": 20,
        "fullcodeline": "n = naf[i];"
    },
    {
        "line": 28,
        "fullcodeline": "eb_dbl(r, r);"
    },
    {
        "line": 101,
        "fullcodeline": "eb_neg(r, r);"
    },
    {
        "line": 110,
        "fullcodeline": "eb_free(t[i]);"
    },
    {
        "line": 21,
        "fullcodeline": "if (n > 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (n < 0) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (r->coord == BASIC) {"
    },
    {
        "line": 22,
        "fullcodeline": "eb_add(t[n / 2], t[n / 2], r);"
    },
    {
        "line": 25,
        "fullcodeline": "eb_sub(t[-n / 2], t[-n / 2], r);"
    },
    {
        "line": 93,
        "fullcodeline": "eb_add(r, t[i], r);"
    },
    {
        "line": 95,
        "fullcodeline": "eb_add(r, r, t[i]);"
    }
]