[
    {
        "line": 3,
        "fullcodeline": "int i, j, l, _l[4];"
    },
    {
        "line": 4,
        "fullcodeline": "bn_t _k[4], _m[4], n, u;"
    },
    {
        "line": 5,
        "fullcodeline": "int8_t naf0[4][RLC_FP_BITS + 1];"
    },
    {
        "line": 6,
        "fullcodeline": "int8_t naf1[4][RLC_FP_BITS + 1];"
    },
    {
        "line": 7,
        "fullcodeline": "ep2_t _p[4], _q[4];"
    },
    {
        "line": 9,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 10,
        "fullcodeline": "bn_null(u);"
    },
    {
        "line": 13,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 14,
        "fullcodeline": "bn_new(u);"
    },
    {
        "line": 26,
        "fullcodeline": "ep2_norm(_p[0], p);"
    },
    {
        "line": 27,
        "fullcodeline": "ep2_frb(_p[1], _p[0], 1);"
    },
    {
        "line": 28,
        "fullcodeline": "ep2_frb(_p[2], _p[1], 1);"
    },
    {
        "line": 29,
        "fullcodeline": "ep2_frb(_p[3], _p[2], 1);"
    },
    {
        "line": 30,
        "fullcodeline": "ep2_norm(_q[0], q);"
    },
    {
        "line": 31,
        "fullcodeline": "ep2_frb(_q[1], _q[0], 1);"
    },
    {
        "line": 32,
        "fullcodeline": "ep2_frb(_q[2], _q[1], 1);"
    },
    {
        "line": 33,
        "fullcodeline": "ep2_frb(_q[3], _q[2], 1);"
    },
    {
        "line": 35,
        "fullcodeline": "ep2_curve_get_ord(n);"
    },
    {
        "line": 36,
        "fullcodeline": "fp_prime_get_par(u);"
    },
    {
        "line": 37,
        "fullcodeline": "bn_mod(_k[0], k, n);"
    },
    {
        "line": 38,
        "fullcodeline": "bn_rec_frb(_k, 4, _k[0], u, n, ep_curve_is_pairf() == EP_BN);"
    },
    {
        "line": 39,
        "fullcodeline": "bn_mod(_m[0], m, n);"
    },
    {
        "line": 40,
        "fullcodeline": "bn_rec_frb(_m, 4, _m[0], u, n, ep_curve_is_pairf() == EP_BN);"
    },
    {
        "line": 42,
        "fullcodeline": "l = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "ep2_set_infty(r);"
    },
    {
        "line": 78,
        "fullcodeline": "ep2_norm(r, r);"
    },
    {
        "line": 80,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 82,
        "fullcodeline": "bn_free(n);"
    },
    {
        "line": 83,
        "fullcodeline": "bn_free(u);"
    },
    {
        "line": 15,
        "fullcodeline": "for (i = 0; i < 4; i++) {"
    },
    {
        "line": 43,
        "fullcodeline": "for (i = 0; i < 4; i++) {"
    },
    {
        "line": 59,
        "fullcodeline": "for (i = l - 1; i >= 0; i--) {"
    },
    {
        "line": 84,
        "fullcodeline": "for (i = 0; i < 4; i++) {"
    },
    {
        "line": 16,
        "fullcodeline": "bn_null(_k[i]);"
    },
    {
        "line": 17,
        "fullcodeline": "bn_new(_k[i]);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_null(_m[i]);"
    },
    {
        "line": 19,
        "fullcodeline": "bn_new(_m[i]);"
    },
    {
        "line": 20,
        "fullcodeline": "ep2_null(_p[i]);"
    },
    {
        "line": 21,
        "fullcodeline": "ep2_null(_q[i]);"
    },
    {
        "line": 22,
        "fullcodeline": "ep2_new(_p[i]);"
    },
    {
        "line": 23,
        "fullcodeline": "ep2_new(_q[i]);"
    },
    {
        "line": 44,
        "fullcodeline": "_l[i] = RLC_FP_BITS + 1;"
    },
    {
        "line": 45,
        "fullcodeline": "bn_rec_naf(naf0[i], &_l[i], _k[i], 2);"
    },
    {
        "line": 49,
        "fullcodeline": "l = RLC_MAX(l, _l[i]);"
    },
    {
        "line": 50,
        "fullcodeline": "_l[i] = RLC_FP_BITS + 1;"
    },
    {
        "line": 51,
        "fullcodeline": "bn_rec_naf(naf1[i], &_l[i], _m[i], 2);"
    },
    {
        "line": 55,
        "fullcodeline": "l = RLC_MAX(l, _l[i]);"
    },
    {
        "line": 60,
        "fullcodeline": "ep2_dbl(r, r);"
    },
    {
        "line": 85,
        "fullcodeline": "bn_free(_k[i]);"
    },
    {
        "line": 86,
        "fullcodeline": "bn_free(_m[i]);"
    },
    {
        "line": 87,
        "fullcodeline": "ep2_free(_p[i]);"
    },
    {
        "line": 88,
        "fullcodeline": "ep2_free(_q[i]);"
    },
    {
        "line": 46,
        "fullcodeline": "if (bn_sign(_k[i]) == RLC_NEG) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (bn_sign(_m[i]) == RLC_NEG) {"
    },
    {
        "line": 61,
        "fullcodeline": "for (j = 0; j < 4; j++) {"
    },
    {
        "line": 47,
        "fullcodeline": "ep2_neg(_p[i], _p[i]);"
    },
    {
        "line": 53,
        "fullcodeline": "ep2_neg(_q[i], _q[i]);"
    },
    {
        "line": 62,
        "fullcodeline": "if (naf0[j][i] > 0) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (naf0[j][i] < 0) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (naf1[j][i] > 0) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (naf1[j][i] < 0) {"
    },
    {
        "line": 63,
        "fullcodeline": "ep2_add(r, r, _p[j]);"
    },
    {
        "line": 66,
        "fullcodeline": "ep2_sub(r, r, _p[j]);"
    },
    {
        "line": 69,
        "fullcodeline": "ep2_add(r, r, _q[j]);"
    },
    {
        "line": 72,
        "fullcodeline": "ep2_sub(r, r, _q[j]);"
    }
]