[
    {
        "line": 4,
        "fullcodeline": "int8_t u, tnaf0[RLC_FB_BITS + 8], tnaf1[RLC_FB_BITS + 8], *_k, *_m;"
    },
    {
        "line": 5,
        "fullcodeline": "eb_t t0[1 << (EB_WIDTH - 2)];"
    },
    {
        "line": 6,
        "fullcodeline": "eb_t t1[1 << (EB_WIDTH - 2)];"
    },
    {
        "line": 8,
        "fullcodeline": "for (i =  0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 21,
        "fullcodeline": "g = (t == NULL ? 0 : 1);"
    },
    {
        "line": 41,
        "fullcodeline": "eb_tab(t1, q, EB_WIDTH);"
    },
    {
        "line": 50,
        "fullcodeline": "l0 = l1 = RLC_FB_BITS + 8;"
    },
    {
        "line": 51,
        "fullcodeline": "bn_rec_tnaf(tnaf0, &l0, k, u, RLC_FB_BITS, w);"
    },
    {
        "line": 52,
        "fullcodeline": "bn_rec_tnaf(tnaf1, &l1, m, u, RLC_FB_BITS, EB_WIDTH);"
    },
    {
        "line": 54,
        "fullcodeline": "l = RLC_MAX(l0, l1);"
    },
    {
        "line": 75,
        "fullcodeline": "_k = tnaf0 + l - 1;"
    },
    {
        "line": 76,
        "fullcodeline": "_m = tnaf1 + l - 1;"
    },
    {
        "line": 77,
        "fullcodeline": "eb_set_infty(r);"
    },
    {
        "line": 97,
        "fullcodeline": "eb_norm(r, r);"
    },
    {
        "line": 100,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 9,
        "fullcodeline": "eb_null(t0[i]);"
    },
    {
        "line": 10,
        "fullcodeline": "eb_null(t1[i]);"
    },
    {
        "line": 15,
        "fullcodeline": "if (eb_curve_opt_a() == RLC_ZERO) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (!g) {"
    },
    {
        "line": 34,
        "fullcodeline": "for (i =  0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 55,
        "fullcodeline": "_k = tnaf0 + l - 1;"
    },
    {
        "line": 56,
        "fullcodeline": "_m = tnaf1 + l - 1;"
    },
    {
        "line": 57,
        "fullcodeline": "for (i =  l0; i < l; i++) {"
    },
    {
        "line": 60,
        "fullcodeline": "for (i =  l1; i < l; i++) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (bn_sign(k) == RLC_NEG) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (bn_sign(m) == RLC_NEG) {"
    },
    {
        "line": 78,
        "fullcodeline": "for (i =  l - 1; i >= 0; i--, _k--, _m--) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (!g) {"
    },
    {
        "line": 108,
        "fullcodeline": "for (i =  0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 16,
        "fullcodeline": "u = -1;"
    },
    {
        "line": 29,
        "fullcodeline": "eb_tab(t0, p, EB_WIDTH);"
    },
    {
        "line": 30,
        "fullcodeline": "t = (const eb_t *)t0;"
    },
    {
        "line": 35,
        "fullcodeline": "eb_new(t1[i]);"
    },
    {
        "line": 36,
        "fullcodeline": "eb_set_infty(t1[i]);"
    },
    {
        "line": 37,
        "fullcodeline": "fb_set_bit(t1[i]->z, 0, 1);"
    },
    {
        "line": 38,
        "fullcodeline": "t1[i]->coord = BASIC;"
    },
    {
        "line": 45,
        "fullcodeline": "w = EB_DEPTH;"
    },
    {
        "line": 58,
        "fullcodeline": "tnaf0[i] = 0;"
    },
    {
        "line": 61,
        "fullcodeline": "tnaf1[i] = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "eb_frb(r, r);"
    },
    {
        "line": 81,
        "fullcodeline": "n0 = *_k;"
    },
    {
        "line": 82,
        "fullcodeline": "n1 = *_m;"
    },
    {
        "line": 109,
        "fullcodeline": "eb_free(t1[i]);"
    },
    {
        "line": 18,
        "fullcodeline": "u = 1;"
    },
    {
        "line": 23,
        "fullcodeline": "for (i =  0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 47,
        "fullcodeline": "w = EB_WIDTH;"
    },
    {
        "line": 65,
        "fullcodeline": "for (i =  0; i < l0; i++) {"
    },
    {
        "line": 70,
        "fullcodeline": "for (i =  0; i < l1; i++) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (n0 > 0) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (n0 < 0) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (n1 > 0) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (n1 < 0) {"
    },
    {
        "line": 104,
        "fullcodeline": "for (i =  0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 24,
        "fullcodeline": "eb_new(t0[i]);"
    },
    {
        "line": 25,
        "fullcodeline": "eb_set_infty(t0[i]);"
    },
    {
        "line": 26,
        "fullcodeline": "fb_set_bit(t0[i]->z, 0, 1);"
    },
    {
        "line": 27,
        "fullcodeline": "t0[i]->coord = BASIC;"
    },
    {
        "line": 66,
        "fullcodeline": "tnaf0[i] = -tnaf0[i];"
    },
    {
        "line": 71,
        "fullcodeline": "tnaf1[i] = -tnaf1[i];"
    },
    {
        "line": 84,
        "fullcodeline": "eb_add(r, r, t[n0 / 2]);"
    },
    {
        "line": 87,
        "fullcodeline": "eb_sub(r, r, t[-n0 / 2]);"
    },
    {
        "line": 90,
        "fullcodeline": "eb_add(r, r, t1[n1 / 2]);"
    },
    {
        "line": 93,
        "fullcodeline": "eb_sub(r, r, t1[-n1 / 2]);"
    },
    {
        "line": 105,
        "fullcodeline": "eb_free(t0[i]);"
    }
]