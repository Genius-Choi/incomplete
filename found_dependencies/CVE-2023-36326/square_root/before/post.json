[
    {
        "line": 2,
        "fullcodeline": "int bits, code = RLC_ERR;"
    },
    {
        "line": 5,
        "fullcodeline": "bn_null(a);"
    },
    {
        "line": 6,
        "fullcodeline": "bn_null(b);"
    },
    {
        "line": 7,
        "fullcodeline": "bn_null(c);"
    },
    {
        "line": 43,
        "fullcodeline": "code = RLC_OK;"
    },
    {
        "line": 45,
        "fullcodeline": "bn_free(a);"
    },
    {
        "line": 46,
        "fullcodeline": "bn_free(b);"
    },
    {
        "line": 47,
        "fullcodeline": "bn_free(c);"
    },
    {
        "line": 10,
        "fullcodeline": "bn_new(a);"
    },
    {
        "line": 11,
        "fullcodeline": "bn_new(b);"
    },
    {
        "line": 12,
        "fullcodeline": "bn_new(c);"
    },
    {
        "line": 14,
        "fullcodeline": "TEST_ONCE(\"square root extraction is correct\") {"
    },
    {
        "line": 30,
        "fullcodeline": "TEST_ONCE(\"square root of powers of 2 is correct\") {"
    },
    {
        "line": 41,
        "fullcodeline": "RLC_ERROR(end);"
    },
    {
        "line": 15,
        "fullcodeline": "for (bits = 0; bits < RLC_BN_BITS / 2; bits++) {"
    },
    {
        "line": 21,
        "fullcodeline": "for (bits = 0; bits < RLC_BN_BITS; bits++) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (bits = 0; bits < RLC_BN_BITS / 2; bits++) {"
    },
    {
        "line": 16,
        "fullcodeline": "bn_rand(a, RLC_POS, bits);"
    },
    {
        "line": 17,
        "fullcodeline": "bn_sqr(c, a);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_srt(b, c);"
    },
    {
        "line": 19,
        "fullcodeline": "TEST_ASSERT(bn_cmp(a, b) == RLC_EQ, end);"
    },
    {
        "line": 22,
        "fullcodeline": "bn_rand(a, RLC_POS, bits);"
    },
    {
        "line": 23,
        "fullcodeline": "bn_srt(b, a);"
    },
    {
        "line": 24,
        "fullcodeline": "bn_sqr(c, b);"
    },
    {
        "line": 25,
        "fullcodeline": "TEST_ASSERT(bn_cmp(c, a) != RLC_GT, end);"
    },
    {
        "line": 32,
        "fullcodeline": "bn_set_2b(a, bits);"
    },
    {
        "line": 33,
        "fullcodeline": "bn_sqr(c, a);"
    },
    {
        "line": 34,
        "fullcodeline": "bn_srt(b, c);"
    },
    {
        "line": 35,
        "fullcodeline": "TEST_ASSERT(bn_cmp(a, b) == RLC_EQ, end);"
    }
]