[
    {
        "line": 4,
        "fullcodeline": "int8_t naf0[2 * RLC_FP_BITS + 1], naf1[2 * RLC_FP_BITS + 1], *_k, *_m;"
    },
    {
        "line": 5,
        "fullcodeline": "ep4_t t0[1 << (EP_WIDTH - 2)];"
    },
    {
        "line": 6,
        "fullcodeline": "ep4_t t1[1 << (EP_WIDTH - 2)];"
    },
    {
        "line": 10,
        "fullcodeline": "gen = (t == NULL ? 0 : 1);"
    },
    {
        "line": 26,
        "fullcodeline": "ep4_tab(t1, q, EP_WIDTH);"
    },
    {
        "line": 34,
        "fullcodeline": "l0 = l1 = 2 * RLC_FP_BITS + 1;"
    },
    {
        "line": 35,
        "fullcodeline": "bn_rec_naf(naf0, &l0, k, w);"
    },
    {
        "line": 36,
        "fullcodeline": "bn_rec_naf(naf1, &l1, m, EP_WIDTH);"
    },
    {
        "line": 38,
        "fullcodeline": "l = RLC_MAX(l0, l1);"
    },
    {
        "line": 39,
        "fullcodeline": "_k = naf0 + l - 1;"
    },
    {
        "line": 40,
        "fullcodeline": "_m = naf1 + l - 1;"
    },
    {
        "line": 52,
        "fullcodeline": "ep4_set_infty(r);"
    },
    {
        "line": 72,
        "fullcodeline": "ep4_norm(r, r);"
    },
    {
        "line": 75,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!gen) {"
    },
    {
        "line": 21,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (bn_sign(k) == RLC_NEG) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (bn_sign(m) == RLC_NEG) {"
    },
    {
        "line": 53,
        "fullcodeline": "for (i = l - 1; i >= 0; i--, _k--, _m--) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (!gen) {"
    },
    {
        "line": 84,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 16,
        "fullcodeline": "ep4_tab(t0, p, EP_WIDTH);"
    },
    {
        "line": 17,
        "fullcodeline": "t = (ep4_t *)t0;"
    },
    {
        "line": 22,
        "fullcodeline": "ep4_null(t1[i]);"
    },
    {
        "line": 23,
        "fullcodeline": "ep4_new(t1[i]);"
    },
    {
        "line": 30,
        "fullcodeline": "w = EP_DEPTH;"
    },
    {
        "line": 54,
        "fullcodeline": "ep4_dbl(r, r);"
    },
    {
        "line": 85,
        "fullcodeline": "ep4_free(t1[i]);"
    },
    {
        "line": 12,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 32,
        "fullcodeline": "w = EP_WIDTH;"
    },
    {
        "line": 42,
        "fullcodeline": "for (i =  0; i < l0; i++) {"
    },
    {
        "line": 47,
        "fullcodeline": "for (i =  0; i < l1; i++) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (n0 > 0) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (n0 < 0) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (n1 > 0) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (n1 < 0) {"
    },
    {
        "line": 80,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 13,
        "fullcodeline": "ep4_null(t0[i]);"
    },
    {
        "line": 14,
        "fullcodeline": "ep4_new(t0[i]);"
    },
    {
        "line": 43,
        "fullcodeline": "naf0[i] = -naf0[i];"
    },
    {
        "line": 48,
        "fullcodeline": "naf1[i] = -naf1[i];"
    },
    {
        "line": 59,
        "fullcodeline": "ep4_add(r, r, t[n0 / 2]);"
    },
    {
        "line": 62,
        "fullcodeline": "ep4_sub(r, r, t[-n0 / 2]);"
    },
    {
        "line": 65,
        "fullcodeline": "ep4_add(r, r, t1[n1 / 2]);"
    },
    {
        "line": 68,
        "fullcodeline": "ep4_sub(r, r, t1[-n1 / 2]);"
    },
    {
        "line": 81,
        "fullcodeline": "ep4_free(t0[i]);"
    }
]