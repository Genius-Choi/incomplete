[
    {
        "line": 7,
        "fullcodeline": "uint8_t mac[RLC_MD_LEN];"
    },
    {
        "line": 8,
        "fullcodeline": "int len, dlen = strlen(data), result = RLC_OK;"
    },
    {
        "line": 9,
        "fullcodeline": "uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_PC_BYTES + dlen);"
    },
    {
        "line": 11,
        "fullcodeline": "bn_null(k);"
    },
    {
        "line": 12,
        "fullcodeline": "bn_null(m);"
    },
    {
        "line": 13,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 14,
        "fullcodeline": "g1_null(t);"
    },
    {
        "line": 17,
        "fullcodeline": "bn_new(k);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_new(m);"
    },
    {
        "line": 19,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 20,
        "fullcodeline": "g1_new(t);"
    },
    {
        "line": 25,
        "fullcodeline": "pc_get_ord(n);"
    },
    {
        "line": 27,
        "fullcodeline": "bn_rand_mod(k, n);"
    },
    {
        "line": 28,
        "fullcodeline": "bn_rand_mod(m, n);"
    },
    {
        "line": 31,
        "fullcodeline": "g2_mul_gen(s, m);"
    },
    {
        "line": 32,
        "fullcodeline": "g2_neg(s, s);"
    },
    {
        "line": 33,
        "fullcodeline": "g1_mul_gen(c, m);"
    },
    {
        "line": 35,
        "fullcodeline": "bn_mul(m, d, m);"
    },
    {
        "line": 36,
        "fullcodeline": "bn_mod(m, m, n);"
    },
    {
        "line": 37,
        "fullcodeline": "bn_sub(m, k, m);"
    },
    {
        "line": 38,
        "fullcodeline": "bn_mod(m, m, n);"
    },
    {
        "line": 39,
        "fullcodeline": "g1_mul_gen(r, m);"
    },
    {
        "line": 42,
        "fullcodeline": "bn_add(k, x, k);"
    },
    {
        "line": 43,
        "fullcodeline": "bn_mod(k, k, n);"
    },
    {
        "line": 44,
        "fullcodeline": "g1_mul_gen(a, k);"
    },
    {
        "line": 45,
        "fullcodeline": "bn_mul(k, d, msg);"
    },
    {
        "line": 46,
        "fullcodeline": "bn_mod(k, k, n);"
    },
    {
        "line": 47,
        "fullcodeline": "g1_mul(t, h, k);"
    },
    {
        "line": 48,
        "fullcodeline": "g1_add(a, a, t);"
    },
    {
        "line": 49,
        "fullcodeline": "g1_norm(a, a);"
    },
    {
        "line": 51,
        "fullcodeline": "md_hmac(mac, (const uint8_t *)data, dlen, prf, plen);"
    },
    {
        "line": 52,
        "fullcodeline": "bn_read_bin(k, mac, RLC_MD_LEN);"
    },
    {
        "line": 53,
        "fullcodeline": "bn_mod(k, k, n);"
    },
    {
        "line": 54,
        "fullcodeline": "g2_mul_gen(z, k);"
    },
    {
        "line": 55,
        "fullcodeline": "bn_mod_inv(k, k, n);"
    },
    {
        "line": 56,
        "fullcodeline": "g1_mul(a, a, k);"
    },
    {
        "line": 59,
        "fullcodeline": "bn_mod(k, msg, n);"
    },
    {
        "line": 60,
        "fullcodeline": "g1_mul(t, h, k);"
    },
    {
        "line": 61,
        "fullcodeline": "g1_add(c, c, t);"
    },
    {
        "line": 62,
        "fullcodeline": "g1_norm(c, c);"
    },
    {
        "line": 64,
        "fullcodeline": "len = g2_size_bin(z, 0);"
    },
    {
        "line": 65,
        "fullcodeline": "g2_write_bin(buf, len, z, 0);"
    },
    {
        "line": 66,
        "fullcodeline": "memcpy(buf + len, data, dlen);"
    },
    {
        "line": 77,
        "fullcodeline": "result = RLC_ERR;"
    },
    {
        "line": 80,
        "fullcodeline": "bn_free(k);"
    },
    {
        "line": 81,
        "fullcodeline": "bn_free(m);"
    },
    {
        "line": 82,
        "fullcodeline": "bn_free(n);"
    },
    {
        "line": 83,
        "fullcodeline": "g1_free(t);"
    },
    {
        "line": 84,
        "fullcodeline": "RLC_FREE(buf);"
    },
    {
        "line": 21,
        "fullcodeline": "if (buf == NULL) {"
    },
    {
        "line": 22,
        "fullcodeline": "RLC_THROW(ERR_NO_MEMORY);"
    },
    {
        "line": 68,
        "fullcodeline": "cp_bls_sig(sig, buf, len + dlen, sk);"
    },
    {
        "line": 70,
        "fullcodeline": "cp_ecdsa_sig(m, n, buf, len + dlen, 0, sk);"
    },
    {
        "line": 71,
        "fullcodeline": "fp_prime_conv(sig->x, m);"
    },
    {
        "line": 72,
        "fullcodeline": "fp_prime_conv(sig->y, n);"
    },
    {
        "line": 73,
        "fullcodeline": "fp_set_dig(sig->z, 1);"
    }
]