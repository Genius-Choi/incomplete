[
    {
        "line": 13,
        "fullcodeline": "bn_null(n0);"
    },
    {
        "line": 14,
        "fullcodeline": "bn_null(n1);"
    },
    {
        "line": 7,
        "fullcodeline": "if (*len < (2 * bn_bits(k) + 1)) {"
    },
    {
        "line": 17,
        "fullcodeline": "bn_new(n0);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_new(n1);"
    },
    {
        "line": 20,
        "fullcodeline": "bn_abs(n0, k);"
    },
    {
        "line": 21,
        "fullcodeline": "bn_abs(n1, l);"
    },
    {
        "line": 23,
        "fullcodeline": "i = bn_bits(k);"
    },
    {
        "line": 24,
        "fullcodeline": "j = bn_bits(l);"
    },
    {
        "line": 25,
        "fullcodeline": "offset = RLC_MAX(i, j) + 1;"
    },
    {
        "line": 29,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "d0 = d1 = 0;"
    },
    {
        "line": 71,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 8,
        "fullcodeline": "*len = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "RLC_THROW(ERR_NO_BUFFER);"
    },
    {
        "line": 31,
        "fullcodeline": "while (!(bn_is_zero(n0) && d0 == 0) || !(bn_is_zero(n1) && d1 == 0)) {"
    },
    {
        "line": 32,
        "fullcodeline": "bn_get_dig(&l0, n0);"
    },
    {
        "line": 33,
        "fullcodeline": "bn_get_dig(&l1, n1);"
    },
    {
        "line": 35,
        "fullcodeline": "l0 = (l0 + d0) & RLC_MASK(3);"
    },
    {
        "line": 36,
        "fullcodeline": "l1 = (l1 + d1) & RLC_MASK(3);"
    },
    {
        "line": 64,
        "fullcodeline": "i++;"
    },
    {
        "line": 65,
        "fullcodeline": "bn_hlv(n0, n0);"
    },
    {
        "line": 66,
        "fullcodeline": "bn_hlv(n1, n1);"
    },
    {
        "line": 38,
        "fullcodeline": "if (l0 % 2 == 0) {"
    },
    {
        "line": 39,
        "fullcodeline": "u0 = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "if (l1 % 2 == 0) {"
    },
    {
        "line": 48,
        "fullcodeline": "u1 = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "d0 = (int8_t)(1 - d0);"
    },
    {
        "line": 61,
        "fullcodeline": "d1 = (int8_t)(1 - d1);"
    },
    {
        "line": 41,
        "fullcodeline": "u0 = 2 - (l0 & RLC_MASK(2));"
    },
    {
        "line": 50,
        "fullcodeline": "u1 = 2 - (l1 & RLC_MASK(2));"
    },
    {
        "line": 42,
        "fullcodeline": "if ((l0 == 3 || l0 == 5) && ((l1 & RLC_MASK(2)) == 2)) {"
    },
    {
        "line": 43,
        "fullcodeline": "u0 = (int8_t)-u0;"
    },
    {
        "line": 51,
        "fullcodeline": "if ((l1 == 3 || l1 == 5) && ((l0 & RLC_MASK(2)) == 2)) {"
    },
    {
        "line": 52,
        "fullcodeline": "u1 = (int8_t)-u1;"
    }
]