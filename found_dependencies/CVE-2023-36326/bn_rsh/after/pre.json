[
    {
        "line": 2,
        "fullcodeline": "int digits = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "bn_copy(c, a);"
    },
    {
        "line": 6,
        "fullcodeline": "RLC_RIP(bits, digits, bits);"
    },
    {
        "line": 17,
        "fullcodeline": "c->sign = a->sign;"
    },
    {
        "line": 26,
        "fullcodeline": "bn_trim(c);"
    },
    {
        "line": 8,
        "fullcodeline": "if (digits > 0) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (a->used > digits) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (c->used > 0 && bits > 0) {"
    },
    {
        "line": 9,
        "fullcodeline": "dv_rshd(c->dp, a->dp, a->used, digits);"
    },
    {
        "line": 13,
        "fullcodeline": "c->used = a->used - digits;"
    },
    {
        "line": 15,
        "fullcodeline": "c->used = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "if (digits == 0 && c != a) {"
    },
    {
        "line": 21,
        "fullcodeline": "bn_rshb_low(c->dp, a->dp + digits, a->used - digits, bits);"
    },
    {
        "line": 23,
        "fullcodeline": "bn_rshb_low(c->dp, c->dp, c->used, bits);"
    }
]