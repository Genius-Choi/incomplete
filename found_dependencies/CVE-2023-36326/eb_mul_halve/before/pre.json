[
    {
        "line": 3,
        "fullcodeline": "int8_t naf[RLC_FB_BITS + 1], *_k;"
    },
    {
        "line": 4,
        "fullcodeline": "eb_t q, s, t[1 << (EB_WIDTH - 2)];"
    },
    {
        "line": 13,
        "fullcodeline": "bn_null(m);"
    },
    {
        "line": 14,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 15,
        "fullcodeline": "eb_null(q);"
    },
    {
        "line": 16,
        "fullcodeline": "eb_null(s);"
    },
    {
        "line": 20,
        "fullcodeline": "fb_null(u);"
    },
    {
        "line": 21,
        "fullcodeline": "fb_null(v);"
    },
    {
        "line": 22,
        "fullcodeline": "fb_null(w);"
    },
    {
        "line": 23,
        "fullcodeline": "fb_null(z);"
    },
    {
        "line": 8,
        "fullcodeline": "if (bn_is_zero(k) || eb_is_infty(p)) {"
    },
    {
        "line": 17,
        "fullcodeline": "for (i = 0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 26,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 27,
        "fullcodeline": "bn_new(m);"
    },
    {
        "line": 28,
        "fullcodeline": "eb_new(q);"
    },
    {
        "line": 29,
        "fullcodeline": "eb_new(s);"
    },
    {
        "line": 30,
        "fullcodeline": "fb_new(u);"
    },
    {
        "line": 31,
        "fullcodeline": "fb_new(v);"
    },
    {
        "line": 32,
        "fullcodeline": "fb_new(w);"
    },
    {
        "line": 33,
        "fullcodeline": "fb_new(z);"
    },
    {
        "line": 42,
        "fullcodeline": "eb_curve_get_ord(n);"
    },
    {
        "line": 43,
        "fullcodeline": "bn_lsh(m, k, bn_bits(n) - 1);"
    },
    {
        "line": 44,
        "fullcodeline": "bn_mod(m, m, n);"
    },
    {
        "line": 47,
        "fullcodeline": "l = sizeof(naf);"
    },
    {
        "line": 48,
        "fullcodeline": "bn_rec_naf(naf, &l, m, EB_WIDTH);"
    },
    {
        "line": 53,
        "fullcodeline": "l = bn_bits(n);"
    },
    {
        "line": 54,
        "fullcodeline": "_k = naf + l - 1;"
    },
    {
        "line": 56,
        "fullcodeline": "eb_copy(q, p);"
    },
    {
        "line": 57,
        "fullcodeline": "eb_curve_get_cof(n);"
    },
    {
        "line": 66,
        "fullcodeline": "trc = fb_trc(eb_curve_get_a());"
    },
    {
        "line": 135,
        "fullcodeline": "eb_copy(r, t[1]);"
    },
    {
        "line": 139,
        "fullcodeline": "eb_dbl(r, r);"
    },
    {
        "line": 140,
        "fullcodeline": "eb_add(r, r, t[0]);"
    },
    {
        "line": 141,
        "fullcodeline": "eb_norm(r, r);"
    },
    {
        "line": 158,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 9,
        "fullcodeline": "eb_set_infty(r);"
    },
    {
        "line": 18,
        "fullcodeline": "eb_null(t[i]);"
    },
    {
        "line": 36,
        "fullcodeline": "for (i = 0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (naf[bn_bits(n)] == 1) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (bn_cmp_dig(n, 2) == RLC_GT) {"
    },
    {
        "line": 131,
        "fullcodeline": "for (i = (1 << (EB_WIDTH - 1)) - 3; i >= 1; i -= 2) {"
    },
    {
        "line": 136,
        "fullcodeline": "for (i = 2; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 162,
        "fullcodeline": "for (i = 0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 37,
        "fullcodeline": "eb_new(t[i]);"
    },
    {
        "line": 38,
        "fullcodeline": "eb_set_infty(t[i]);"
    },
    {
        "line": 51,
        "fullcodeline": "eb_dbl(t[0], p);"
    },
    {
        "line": 70,
        "fullcodeline": "fb_srt(u, eb_curve_get_a());"
    },
    {
        "line": 71,
        "fullcodeline": "fb_slv(v, u);"
    },
    {
        "line": 73,
        "fullcodeline": "bn_rand(n, RLC_POS, l);"
    },
    {
        "line": 137,
        "fullcodeline": "eb_add(r, r, t[i]);"
    },
    {
        "line": 147,
        "fullcodeline": "eb_hlv(s, r);"
    },
    {
        "line": 75,
        "fullcodeline": "for (i = l - 1; i >= 0; i--, _k--) {"
    },
    {
        "line": 76,
        "fullcodeline": "j = *_k;"
    },
    {
        "line": 87,
        "fullcodeline": "eb_hlv(s, q);"
    },
    {
        "line": 110,
        "fullcodeline": "eb_copy(q, s);"
    },
    {
        "line": 113,
        "fullcodeline": "for (i = l - 1; i >= 0; i--, _k--) {"
    },
    {
        "line": 132,
        "fullcodeline": "eb_add(t[i / 2], t[i / 2], t[(i + 2) / 2]);"
    },
    {
        "line": 148,
        "fullcodeline": "if (fb_trc(s->x) != trc) {"
    },
    {
        "line": 149,
        "fullcodeline": "fb_zero(s->x);"
    },
    {
        "line": 150,
        "fullcodeline": "fb_srt(s->y, eb_curve_get_b());"
    },
    {
        "line": 151,
        "fullcodeline": "fb_set_dig(s->z, 1);"
    },
    {
        "line": 152,
        "fullcodeline": "eb_add(r, r, s);"
    },
    {
        "line": 77,
        "fullcodeline": "if (j > 0) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (j < 0) {"
    },
    {
        "line": 114,
        "fullcodeline": "j = *_k;"
    },
    {
        "line": 123,
        "fullcodeline": "eb_hlv(q, q);"
    },
    {
        "line": 78,
        "fullcodeline": "eb_norm(s, q);"
    },
    {
        "line": 79,
        "fullcodeline": "eb_add(t[j / 2], t[j / 2], s);"
    },
    {
        "line": 82,
        "fullcodeline": "eb_norm(s, q);"
    },
    {
        "line": 83,
        "fullcodeline": "eb_sub(t[-j / 2], t[-j / 2], s);"
    },
    {
        "line": 90,
        "fullcodeline": "if (fb_trc(s->x) != 0) {"
    },
    {
        "line": 92,
        "fullcodeline": "fb_copy(z, s->y);"
    },
    {
        "line": 93,
        "fullcodeline": "fb_srt(w, q->y);"
    },
    {
        "line": 94,
        "fullcodeline": "fb_add(s->y, s->y, w);"
    },
    {
        "line": 95,
        "fullcodeline": "fb_add(s->y, s->y, v);"
    },
    {
        "line": 97,
        "fullcodeline": "fb_add(z, z, q->x);"
    },
    {
        "line": 98,
        "fullcodeline": "fb_add(z, z, v);"
    },
    {
        "line": 99,
        "fullcodeline": "fb_add(z, z, u);"
    },
    {
        "line": 101,
        "fullcodeline": "fb_add(w, w, q->x);"
    },
    {
        "line": 102,
        "fullcodeline": "fb_add(w, w, q->y);"
    },
    {
        "line": 103,
        "fullcodeline": "fb_add(w, w, u);"
    },
    {
        "line": 105,
        "fullcodeline": "fb_mul(w, w, z);"
    },
    {
        "line": 106,
        "fullcodeline": "fb_srt(s->x, w);"
    },
    {
        "line": 107,
        "fullcodeline": "fb_set_dig(s->z, 1);"
    },
    {
        "line": 108,
        "fullcodeline": "s->coord = HALVE;"
    },
    {
        "line": 115,
        "fullcodeline": "if (j > 0) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (j < 0) {"
    },
    {
        "line": 116,
        "fullcodeline": "eb_norm(q, q);"
    },
    {
        "line": 117,
        "fullcodeline": "eb_add(t[j / 2], t[j / 2], q);"
    },
    {
        "line": 120,
        "fullcodeline": "eb_norm(q, q);"
    },
    {
        "line": 121,
        "fullcodeline": "eb_sub(t[-j / 2], t[-j / 2], q);"
    }
]