[
    {
        "line": 12,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 13,
        "fullcodeline": "bn_null(t);"
    },
    {
        "line": 14,
        "fullcodeline": "dv_null(x1);"
    },
    {
        "line": 15,
        "fullcodeline": "dv_null(z1);"
    },
    {
        "line": 16,
        "fullcodeline": "dv_null(x2);"
    },
    {
        "line": 17,
        "fullcodeline": "dv_null(z2);"
    },
    {
        "line": 18,
        "fullcodeline": "dv_null(r1);"
    },
    {
        "line": 19,
        "fullcodeline": "dv_null(r2);"
    },
    {
        "line": 20,
        "fullcodeline": "dv_null(r3);"
    },
    {
        "line": 21,
        "fullcodeline": "dv_null(r4);"
    },
    {
        "line": 22,
        "fullcodeline": "dv_null(r5);"
    },
    {
        "line": 7,
        "fullcodeline": "if (bn_is_zero(k)) {"
    },
    {
        "line": 25,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 26,
        "fullcodeline": "bn_new(t);"
    },
    {
        "line": 27,
        "fullcodeline": "dv_new(x1);"
    },
    {
        "line": 28,
        "fullcodeline": "dv_new(z1);"
    },
    {
        "line": 29,
        "fullcodeline": "dv_new(x2);"
    },
    {
        "line": 30,
        "fullcodeline": "dv_new(z2);"
    },
    {
        "line": 31,
        "fullcodeline": "dv_new(r1);"
    },
    {
        "line": 32,
        "fullcodeline": "dv_new(r2);"
    },
    {
        "line": 33,
        "fullcodeline": "dv_new(r3);"
    },
    {
        "line": 34,
        "fullcodeline": "dv_new(r4);"
    },
    {
        "line": 35,
        "fullcodeline": "dv_new(r5);"
    },
    {
        "line": 37,
        "fullcodeline": "fb_sqr(z2, p->x);"
    },
    {
        "line": 38,
        "fullcodeline": "fb_sqr(x2, z2);"
    },
    {
        "line": 39,
        "fullcodeline": "dv_zero(r5, 2 * RLC_FB_DIGS);"
    },
    {
        "line": 41,
        "fullcodeline": "b = eb_curve_get_b();"
    },
    {
        "line": 42,
        "fullcodeline": "eb_curve_get_ord(n);"
    },
    {
        "line": 43,
        "fullcodeline": "bits = bn_bits(n);"
    },
    {
        "line": 45,
        "fullcodeline": "bn_abs(t, k);"
    },
    {
        "line": 46,
        "fullcodeline": "bn_add(t, t, n);"
    },
    {
        "line": 47,
        "fullcodeline": "bn_add(n, t, n);"
    },
    {
        "line": 48,
        "fullcodeline": "dv_swap_cond(t->dp, n->dp, RLC_MAX(t->used, n->used),"
    },
    {
        "line": 50,
        "fullcodeline": "t->used = RLC_SEL(t->used, n->used, bn_get_bit(t, bits) == 0);"
    },
    {
        "line": 67,
        "fullcodeline": "fb_rand(z1);"
    },
    {
        "line": 68,
        "fullcodeline": "fb_mul(x1, z1, p->x);"
    },
    {
        "line": 69,
        "fullcodeline": "fb_rand(r1);"
    },
    {
        "line": 70,
        "fullcodeline": "fb_mul(z2, z2, r1);"
    },
    {
        "line": 71,
        "fullcodeline": "fb_mul(x2, x2, r1);"
    },
    {
        "line": 163,
        "fullcodeline": "r->coord = BASIC;"
    },
    {
        "line": 169,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 8,
        "fullcodeline": "eb_set_infty(r);"
    },
    {
        "line": 49,
        "fullcodeline": "bn_get_bit(t, bits) == 0);"
    },
    {
        "line": 73,
        "fullcodeline": "for (int i = bits - 1; i >= 0; i--) {"
    },
    {
        "line": 115,
        "fullcodeline": "if (fb_is_zero(z1)) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (bn_sign(k) == RLC_NEG) {"
    },
    {
        "line": 56,
        "fullcodeline": "fb_add_dig(x2, x2, (dig_t)1);"
    },
    {
        "line": 59,
        "fullcodeline": "fb_add_dig(x2, x2, b[0]);"
    },
    {
        "line": 62,
        "fullcodeline": "fb_addn_low(x2, x2, b);"
    },
    {
        "line": 74,
        "fullcodeline": "int j = bn_get_bit(t, i);"
    },
    {
        "line": 75,
        "fullcodeline": "fb_mul(r1, x1, z2);"
    },
    {
        "line": 76,
        "fullcodeline": "fb_mul(r2, x2, z1);"
    },
    {
        "line": 77,
        "fullcodeline": "fb_add(r3, r1, r2);"
    },
    {
        "line": 78,
        "fullcodeline": "fb_muln_low(r4, r1, r2);"
    },
    {
        "line": 79,
        "fullcodeline": "dv_swap_cond(x1, x2, RLC_FB_DIGS, j ^ 1);"
    },
    {
        "line": 80,
        "fullcodeline": "dv_swap_cond(z1, z2, RLC_FB_DIGS, j ^ 1);"
    },
    {
        "line": 81,
        "fullcodeline": "fb_sqr(z1, r3);"
    },
    {
        "line": 82,
        "fullcodeline": "fb_muln_low(r1, z1, p->x);"
    },
    {
        "line": 83,
        "fullcodeline": "fb_addd_low(x1, r1, r4, 2 * RLC_FB_DIGS);"
    },
    {
        "line": 84,
        "fullcodeline": "fb_rdcn_low(x1, x1);"
    },
    {
        "line": 85,
        "fullcodeline": "fb_sqr(r1, z2);"
    },
    {
        "line": 86,
        "fullcodeline": "fb_sqr(r2, x2);"
    },
    {
        "line": 87,
        "fullcodeline": "fb_mul(z2, r1, r2);"
    },
    {
        "line": 111,
        "fullcodeline": "dv_swap_cond(x1, x2, RLC_FB_DIGS, j ^ 1);"
    },
    {
        "line": 112,
        "fullcodeline": "dv_swap_cond(z1, z2, RLC_FB_DIGS, j ^ 1);"
    },
    {
        "line": 117,
        "fullcodeline": "eb_set_infty(r);"
    },
    {
        "line": 90,
        "fullcodeline": "fb_sqr(x2, r2);"
    },
    {
        "line": 93,
        "fullcodeline": "fb_add(r1, r1, r2);"
    },
    {
        "line": 94,
        "fullcodeline": "fb_sqr(x2, r1);"
    },
    {
        "line": 97,
        "fullcodeline": "fb_sqr(r1, r1);"
    },
    {
        "line": 98,
        "fullcodeline": "fb_sqrl_low(x2, r2);"
    },
    {
        "line": 99,
        "fullcodeline": "fb_mul1_low(r5, r1, b[0]);"
    },
    {
        "line": 100,
        "fullcodeline": "fb_addd_low(x2, x2, r5, RLC_FB_DIGS + 1);"
    },
    {
        "line": 101,
        "fullcodeline": "fb_rdcn_low(x2, x2);"
    },
    {
        "line": 104,
        "fullcodeline": "fb_sqr(r1, r1);"
    },
    {
        "line": 105,
        "fullcodeline": "fb_sqrl_low(x2, r2);"
    },
    {
        "line": 106,
        "fullcodeline": "fb_muln_low(r5, r1, b);"
    },
    {
        "line": 107,
        "fullcodeline": "fb_addd_low(x2, x2, r5, 2 * RLC_FB_DIGS);"
    },
    {
        "line": 108,
        "fullcodeline": "fb_rdcn_low(x2, x2);"
    },
    {
        "line": 119,
        "fullcodeline": "if (fb_is_zero(z2)) {"
    },
    {
        "line": 120,
        "fullcodeline": "fb_copy(r->x, p->x);"
    },
    {
        "line": 121,
        "fullcodeline": "fb_add(r->y, p->x, p->y);"
    },
    {
        "line": 122,
        "fullcodeline": "fb_set_dig(r->z, 1);"
    },
    {
        "line": 125,
        "fullcodeline": "fb_mul(r3, z1, z2);"
    },
    {
        "line": 127,
        "fullcodeline": "fb_mul(z1, z1, p->x);"
    },
    {
        "line": 128,
        "fullcodeline": "fb_add(z1, z1, x1);"
    },
    {
        "line": 130,
        "fullcodeline": "fb_mul(z2, z2, p->x);"
    },
    {
        "line": 132,
        "fullcodeline": "fb_mul(x1, x1, z2);"
    },
    {
        "line": 134,
        "fullcodeline": "fb_add(z2, z2, x2);"
    },
    {
        "line": 135,
        "fullcodeline": "fb_mul(z2, z2, z1);"
    },
    {
        "line": 138,
        "fullcodeline": "fb_sqr(r4, p->x);"
    },
    {
        "line": 139,
        "fullcodeline": "fb_add(r4, r4, p->y);"
    },
    {
        "line": 140,
        "fullcodeline": "fb_mul(r4, r4, r3);"
    },
    {
        "line": 141,
        "fullcodeline": "fb_add(r4, r4, z2);"
    },
    {
        "line": 144,
        "fullcodeline": "fb_mul(r3, r3, p->x);"
    },
    {
        "line": 145,
        "fullcodeline": "fb_inv(r3, r3);"
    },
    {
        "line": 147,
        "fullcodeline": "fb_mul(r4, r4, r3);"
    },
    {
        "line": 149,
        "fullcodeline": "fb_mul(x2, x1, r3);"
    },
    {
        "line": 151,
        "fullcodeline": "fb_add(z2, x2, p->x);"
    },
    {
        "line": 154,
        "fullcodeline": "fb_mul(z2, z2, r4);"
    },
    {
        "line": 155,
        "fullcodeline": "fb_add(z2, z2, p->y);"
    },
    {
        "line": 157,
        "fullcodeline": "fb_copy(r->x, x2);"
    },
    {
        "line": 158,
        "fullcodeline": "fb_copy(r->y, z2);"
    },
    {
        "line": 159,
        "fullcodeline": "fb_set_dig(r->z, 1);"
    }
]