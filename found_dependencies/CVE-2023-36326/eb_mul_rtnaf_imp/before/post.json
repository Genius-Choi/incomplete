[
    {
        "line": 3,
        "fullcodeline": "int8_t tnaf[RLC_FB_BITS + 8], u;"
    },
    {
        "line": 4,
        "fullcodeline": "eb_t t[1 << (EB_WIDTH - 2)];"
    },
    {
        "line": 6,
        "fullcodeline": "if (eb_curve_opt_a() == RLC_ZERO) {"
    },
    {
        "line": 22,
        "fullcodeline": "bn_rec_tnaf(tnaf, &l, k, u, RLC_FB_BITS, EB_WIDTH);"
    },
    {
        "line": 24,
        "fullcodeline": "eb_copy(r, p);"
    },
    {
        "line": 39,
        "fullcodeline": "eb_copy(r, t[0]);"
    },
    {
        "line": 272,
        "fullcodeline": "eb_norm(r, r);"
    },
    {
        "line": 278,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 7,
        "fullcodeline": "u = -1;"
    },
    {
        "line": 14,
        "fullcodeline": "for (i = 0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 25,
        "fullcodeline": "for (i = 0; i < l; i++) {"
    },
    {
        "line": 264,
        "fullcodeline": "for (i = 1; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 273,
        "fullcodeline": "if (bn_sign(k) == RLC_NEG) {"
    },
    {
        "line": 282,
        "fullcodeline": "for (i = 0; i < (1 << (EB_WIDTH - 2)); i++) {"
    },
    {
        "line": 9,
        "fullcodeline": "u = 1;"
    },
    {
        "line": 15,
        "fullcodeline": "eb_null(t[i]);"
    },
    {
        "line": 16,
        "fullcodeline": "eb_new(t[i]);"
    },
    {
        "line": 17,
        "fullcodeline": "eb_set_infty(t[i]);"
    },
    {
        "line": 26,
        "fullcodeline": "n = tnaf[i];"
    },
    {
        "line": 35,
        "fullcodeline": "fb_sqr(r->x, r->x);"
    },
    {
        "line": 36,
        "fullcodeline": "fb_sqr(r->y, r->y);"
    },
    {
        "line": 274,
        "fullcodeline": "eb_neg(r, r);"
    },
    {
        "line": 283,
        "fullcodeline": "eb_free(t[i]);"
    },
    {
        "line": 27,
        "fullcodeline": "if (n > 0) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (n < 0) {"
    },
    {
        "line": 265,
        "fullcodeline": "if (r->coord == BASIC) {"
    },
    {
        "line": 28,
        "fullcodeline": "eb_add(t[n / 2], t[n / 2], r);"
    },
    {
        "line": 31,
        "fullcodeline": "eb_sub(t[-n / 2], t[-n / 2], r);"
    },
    {
        "line": 266,
        "fullcodeline": "eb_add(r, t[i], r);"
    },
    {
        "line": 268,
        "fullcodeline": "eb_add(r, r, t[i]);"
    }
]