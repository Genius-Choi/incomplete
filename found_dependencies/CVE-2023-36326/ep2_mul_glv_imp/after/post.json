[
    {
        "line": 2,
        "fullcodeline": "size_t l, _l[4];"
    },
    {
        "line": 3,
        "fullcodeline": "bn_t n, _k[4], u;"
    },
    {
        "line": 4,
        "fullcodeline": "int8_t naf[4][RLC_FP_BITS + 1];"
    },
    {
        "line": 5,
        "fullcodeline": "ep2_t q[4];"
    },
    {
        "line": 7,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 8,
        "fullcodeline": "bn_null(u);"
    },
    {
        "line": 11,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 12,
        "fullcodeline": "bn_new(u);"
    },
    {
        "line": 20,
        "fullcodeline": "ep2_curve_get_ord(n);"
    },
    {
        "line": 21,
        "fullcodeline": "fp_prime_get_par(u);"
    },
    {
        "line": 22,
        "fullcodeline": "bn_mod(_k[0], k, n);"
    },
    {
        "line": 23,
        "fullcodeline": "bn_rec_frb(_k, 4, _k[0], u, n, ep_curve_is_pairf() == EP_BN);"
    },
    {
        "line": 25,
        "fullcodeline": "ep2_norm(q[0], p);"
    },
    {
        "line": 26,
        "fullcodeline": "ep2_frb(q[1], q[0], 1);"
    },
    {
        "line": 27,
        "fullcodeline": "ep2_frb(q[2], q[1], 1);"
    },
    {
        "line": 28,
        "fullcodeline": "ep2_frb(q[3], q[2], 1);"
    },
    {
        "line": 30,
        "fullcodeline": "l = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "ep2_set_infty(r);"
    },
    {
        "line": 55,
        "fullcodeline": "ep2_norm(r, r);"
    },
    {
        "line": 58,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 61,
        "fullcodeline": "bn_free(n);"
    },
    {
        "line": 62,
        "fullcodeline": "bn_free(u);"
    },
    {
        "line": 13,
        "fullcodeline": "for (int i = 0; i < 4; i++) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (int i = 0; i < 4; i++) {"
    },
    {
        "line": 41,
        "fullcodeline": "for (int j = l - 1; j >= 0; j--) {"
    },
    {
        "line": 63,
        "fullcodeline": "for (int i = 0; i < 4; i++) {"
    },
    {
        "line": 14,
        "fullcodeline": "bn_null(_k[i]);"
    },
    {
        "line": 15,
        "fullcodeline": "ep2_null(q[i]);"
    },
    {
        "line": 16,
        "fullcodeline": "bn_new(_k[i]);"
    },
    {
        "line": 17,
        "fullcodeline": "ep2_new(q[i]);"
    },
    {
        "line": 35,
        "fullcodeline": "_l[i] = RLC_FP_BITS + 1;"
    },
    {
        "line": 36,
        "fullcodeline": "bn_rec_naf(naf[i], &_l[i], _k[i], 2);"
    },
    {
        "line": 37,
        "fullcodeline": "l = RLC_MAX(l, _l[i]);"
    },
    {
        "line": 42,
        "fullcodeline": "ep2_dbl(r, r);"
    },
    {
        "line": 64,
        "fullcodeline": "bn_free(_k[i]);"
    },
    {
        "line": 65,
        "fullcodeline": "ep2_free(q[i]);"
    },
    {
        "line": 32,
        "fullcodeline": "if (bn_sign(_k[i]) == RLC_NEG) {"
    },
    {
        "line": 44,
        "fullcodeline": "for (int i = 0; i < 4; i++) {"
    },
    {
        "line": 33,
        "fullcodeline": "ep2_neg(q[i], q[i]);"
    },
    {
        "line": 45,
        "fullcodeline": "if (naf[i][j] > 0) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (naf[i][j] < 0) {"
    },
    {
        "line": 46,
        "fullcodeline": "ep2_add(r, r, q[i]);"
    },
    {
        "line": 49,
        "fullcodeline": "ep2_sub(r, r, q[i]);"
    }
]