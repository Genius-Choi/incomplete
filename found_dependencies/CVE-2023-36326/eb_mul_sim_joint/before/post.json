[
    {
        "line": 3,
        "fullcodeline": "eb_t t[5];"
    },
    {
        "line": 5,
        "fullcodeline": "int8_t jsf[2 * (RLC_FB_BITS + 1)];"
    },
    {
        "line": 7,
        "fullcodeline": "if (bn_is_zero(k) || eb_is_infty(p)) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (bn_is_zero(m) || eb_is_infty(q)) {"
    },
    {
        "line": 22,
        "fullcodeline": "eb_set_infty(t[0]);"
    },
    {
        "line": 23,
        "fullcodeline": "eb_copy(t[1], q);"
    },
    {
        "line": 27,
        "fullcodeline": "eb_copy(t[2], p);"
    },
    {
        "line": 31,
        "fullcodeline": "eb_add(t[3], t[2], t[1]);"
    },
    {
        "line": 32,
        "fullcodeline": "eb_sub(t[4], t[2], t[1]);"
    },
    {
        "line": 37,
        "fullcodeline": "len = 2 * (RLC_FB_BITS + 1);"
    },
    {
        "line": 38,
        "fullcodeline": "bn_rec_jsf(jsf, &len, k, m);"
    },
    {
        "line": 40,
        "fullcodeline": "eb_set_infty(r);"
    },
    {
        "line": 41,
        "fullcodeline": "offset = RLC_MAX(bn_bits(k), bn_bits(m)) + 1;"
    },
    {
        "line": 60,
        "fullcodeline": "eb_norm(r, r);"
    },
    {
        "line": 63,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 8,
        "fullcodeline": "eb_mul(r, q, m);"
    },
    {
        "line": 12,
        "fullcodeline": "eb_mul(r, p, k);"
    },
    {
        "line": 17,
        "fullcodeline": "for (i =  0; i < 5; i++) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (bn_sign(m) == RLC_NEG) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (bn_sign(k) == RLC_NEG) {"
    },
    {
        "line": 42,
        "fullcodeline": "for (i = len - 1; i >= 0; i--) {"
    },
    {
        "line": 66,
        "fullcodeline": "for (i =  0; i < 5; i++) {"
    },
    {
        "line": 18,
        "fullcodeline": "eb_null(t[i]);"
    },
    {
        "line": 19,
        "fullcodeline": "eb_new(t[i]);"
    },
    {
        "line": 25,
        "fullcodeline": "eb_neg(t[1], t[1]);"
    },
    {
        "line": 29,
        "fullcodeline": "eb_neg(t[2], t[2]);"
    },
    {
        "line": 43,
        "fullcodeline": "eb_dbl(r, r);"
    },
    {
        "line": 67,
        "fullcodeline": "eb_free(t[i]);"
    },
    {
        "line": 44,
        "fullcodeline": "if (jsf[i] != 0 && jsf[i] == -jsf[i + offset]) {"
    },
    {
        "line": 45,
        "fullcodeline": "u_i = jsf[i] * 2 + jsf[i + offset];"
    },
    {
        "line": 46,
        "fullcodeline": "if (u_i < 0) {"
    },
    {
        "line": 52,
        "fullcodeline": "u_i = jsf[i] * 2 + jsf[i + offset];"
    },
    {
        "line": 47,
        "fullcodeline": "eb_sub(r, r, t[4]);"
    },
    {
        "line": 53,
        "fullcodeline": "if (u_i < 0) {"
    },
    {
        "line": 49,
        "fullcodeline": "eb_add(r, r, t[4]);"
    },
    {
        "line": 54,
        "fullcodeline": "eb_sub(r, r, t[-u_i]);"
    },
    {
        "line": 56,
        "fullcodeline": "eb_add(r, r, t[u_i]);"
    }
]