[
    {
        "line": 25,
        "fullcodeline": "bn_null(x);"
    },
    {
        "line": 26,
        "fullcodeline": "bn_null(y);"
    },
    {
        "line": 27,
        "fullcodeline": "bn_null(u);"
    },
    {
        "line": 28,
        "fullcodeline": "bn_null(v);"
    },
    {
        "line": 29,
        "fullcodeline": "bn_null(t0);"
    },
    {
        "line": 30,
        "fullcodeline": "bn_null(t1);"
    },
    {
        "line": 31,
        "fullcodeline": "bn_null(t2);"
    },
    {
        "line": 32,
        "fullcodeline": "bn_null(t3);"
    },
    {
        "line": 33,
        "fullcodeline": "bn_null(t4);"
    },
    {
        "line": 7,
        "fullcodeline": "if (bn_is_zero(a)) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (bn_is_zero(b)) {"
    },
    {
        "line": 39,
        "fullcodeline": "bn_new(x);"
    },
    {
        "line": 40,
        "fullcodeline": "bn_new(y);"
    },
    {
        "line": 41,
        "fullcodeline": "bn_new(u);"
    },
    {
        "line": 42,
        "fullcodeline": "bn_new(v);"
    },
    {
        "line": 43,
        "fullcodeline": "bn_new(t0);"
    },
    {
        "line": 44,
        "fullcodeline": "bn_new(t1);"
    },
    {
        "line": 45,
        "fullcodeline": "bn_new(t2);"
    },
    {
        "line": 46,
        "fullcodeline": "bn_new(t3);"
    },
    {
        "line": 47,
        "fullcodeline": "bn_new(t4);"
    },
    {
        "line": 59,
        "fullcodeline": "bn_zero(t4);"
    },
    {
        "line": 60,
        "fullcodeline": "bn_set_dig(d, 1);"
    },
    {
        "line": 228,
        "fullcodeline": "bn_gcd_ext_dig(c, u, v, x, y->dp[0]);"
    },
    {
        "line": 249,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 8,
        "fullcodeline": "bn_abs(c, b);"
    },
    {
        "line": 9,
        "fullcodeline": "bn_zero(d);"
    },
    {
        "line": 49,
        "fullcodeline": "if (bn_cmp_abs(a, b) != RLC_LT) {"
    },
    {
        "line": 62,
        "fullcodeline": "while (y->used > 1) {"
    },
    {
        "line": 244,
        "fullcodeline": "if (e != NULL) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (e != NULL) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (e != NULL) {"
    },
    {
        "line": 50,
        "fullcodeline": "bn_abs(x, a);"
    },
    {
        "line": 51,
        "fullcodeline": "bn_abs(y, b);"
    },
    {
        "line": 52,
        "fullcodeline": "swap = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "_x = u->dp[0];"
    },
    {
        "line": 71,
        "fullcodeline": "_y = v->dp[0];"
    },
    {
        "line": 72,
        "fullcodeline": "_a = _d = 1;"
    },
    {
        "line": 73,
        "fullcodeline": "_b = _c = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "t = 0;"
    },
    {
        "line": 230,
        "fullcodeline": "bn_mul(t0, t4, u);"
    },
    {
        "line": 231,
        "fullcodeline": "bn_mul(t1, d, v);"
    },
    {
        "line": 232,
        "fullcodeline": "bn_add(t4, t0, t1);"
    },
    {
        "line": 233,
        "fullcodeline": "bn_mul(x, b, t4);"
    },
    {
        "line": 234,
        "fullcodeline": "bn_sub(x, c, x);"
    },
    {
        "line": 235,
        "fullcodeline": "bn_div(d, x, a);"
    },
    {
        "line": 245,
        "fullcodeline": "bn_copy(e, t4);"
    },
    {
        "line": 11,
        "fullcodeline": "bn_set_dig(e, 1);"
    },
    {
        "line": 54,
        "fullcodeline": "bn_abs(x, b);"
    },
    {
        "line": 55,
        "fullcodeline": "bn_abs(y, a);"
    },
    {
        "line": 56,
        "fullcodeline": "swap = 1;"
    },
    {
        "line": 63,
        "fullcodeline": "if (bn_bits(x) > RLC_DIG) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (_y != 0) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (t >= ((dig_t)1 << (RLC_DIG / 2))) {"
    },
    {
        "line": 98,
        "fullcodeline": "if (_b == 0) {"
    },
    {
        "line": 237,
        "fullcodeline": "bn_mul(t0, t4, u);"
    },
    {
        "line": 238,
        "fullcodeline": "bn_mul(t1, d, v);"
    },
    {
        "line": 239,
        "fullcodeline": "bn_add(d, t0, t1);"
    },
    {
        "line": 240,
        "fullcodeline": "bn_mul(x, a, d);"
    },
    {
        "line": 241,
        "fullcodeline": "bn_sub(x, c, x);"
    },
    {
        "line": 242,
        "fullcodeline": "bn_div(t4, x, b);"
    },
    {
        "line": 64,
        "fullcodeline": "bn_rsh(u, x, bn_bits(x) - RLC_DIG);"
    },
    {
        "line": 65,
        "fullcodeline": "bn_rsh(v, y, bn_bits(x) - RLC_DIG);"
    },
    {
        "line": 76,
        "fullcodeline": "q = _x / _y;"
    },
    {
        "line": 77,
        "fullcodeline": "t = _x % _y;"
    },
    {
        "line": 99,
        "fullcodeline": "bn_div_rem(t1, t0, x, y);"
    },
    {
        "line": 100,
        "fullcodeline": "bn_copy(x, y);"
    },
    {
        "line": 101,
        "fullcodeline": "bn_copy(y, t0);"
    },
    {
        "line": 102,
        "fullcodeline": "bn_mul(t1, t1, d);"
    },
    {
        "line": 103,
        "fullcodeline": "bn_sub(t1, t4, t1);"
    },
    {
        "line": 104,
        "fullcodeline": "bn_copy(t4, d);"
    },
    {
        "line": 105,
        "fullcodeline": "bn_copy(d, t1);"
    },
    {
        "line": 67,
        "fullcodeline": "bn_copy(u, x);"
    },
    {
        "line": 68,
        "fullcodeline": "bn_copy(v, y);"
    },
    {
        "line": 138,
        "fullcodeline": "bn_add(u, t0, t1);"
    },
    {
        "line": 139,
        "fullcodeline": "bn_add(v, t2, t3);"
    },
    {
        "line": 147,
        "fullcodeline": "_x = t0->dp[0];"
    },
    {
        "line": 148,
        "fullcodeline": "_y = t1->dp[0];"
    },
    {
        "line": 149,
        "fullcodeline": "t = 0;"
    },
    {
        "line": 197,
        "fullcodeline": "bn_add(x, t0, t1);"
    },
    {
        "line": 198,
        "fullcodeline": "bn_add(y, t2, t3);"
    },
    {
        "line": 224,
        "fullcodeline": "bn_add(t4, t0, t1);"
    },
    {
        "line": 225,
        "fullcodeline": "bn_add(d, t2, t3);"
    },
    {
        "line": 81,
        "fullcodeline": "_q = _y / t;"
    },
    {
        "line": 82,
        "fullcodeline": "_t = _y % t;"
    },
    {
        "line": 87,
        "fullcodeline": "_y = t;"
    },
    {
        "line": 88,
        "fullcodeline": "t = _a - q * _c;"
    },
    {
        "line": 89,
        "fullcodeline": "_a = _c;"
    },
    {
        "line": 90,
        "fullcodeline": "_c = t;"
    },
    {
        "line": 91,
        "fullcodeline": "t = _b - q * _d;"
    },
    {
        "line": 92,
        "fullcodeline": "_b = _d;"
    },
    {
        "line": 93,
        "fullcodeline": "_d = t;"
    },
    {
        "line": 94,
        "fullcodeline": "t = _t;"
    },
    {
        "line": 95,
        "fullcodeline": "q = _q;"
    },
    {
        "line": 114,
        "fullcodeline": "if (_a < 0) {"
    },
    {
        "line": 120,
        "fullcodeline": "if (_b < 0) {"
    },
    {
        "line": 126,
        "fullcodeline": "if (_c < 0) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (_d < 0) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (bn_bits(u) > RLC_DIG) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (_y != 0) {"
    },
    {
        "line": 154,
        "fullcodeline": "if (t >= ((dig_t)1 << RLC_DIG / 2)) {"
    },
    {
        "line": 173,
        "fullcodeline": "if (_a < 0) {"
    },
    {
        "line": 179,
        "fullcodeline": "if (_b < 0) {"
    },
    {
        "line": 185,
        "fullcodeline": "if (_c < 0) {"
    },
    {
        "line": 191,
        "fullcodeline": "if (_d < 0) {"
    },
    {
        "line": 200,
        "fullcodeline": "if (_a < 0) {"
    },
    {
        "line": 206,
        "fullcodeline": "if (_b < 0) {"
    },
    {
        "line": 212,
        "fullcodeline": "if (_c < 0) {"
    },
    {
        "line": 218,
        "fullcodeline": "if (_d < 0) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (_t < ((dig_t)1 << (RLC_DIG / 2))) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (bn_bits(x) > 2 * RLC_DIG) {"
    },
    {
        "line": 108,
        "fullcodeline": "bn_rsh(u, x, bn_bits(x) - 2 * RLC_DIG);"
    },
    {
        "line": 109,
        "fullcodeline": "bn_rsh(v, y, bn_bits(x) - 2 * RLC_DIG);"
    },
    {
        "line": 115,
        "fullcodeline": "bn_mul_dig(t0, u, -_a);"
    },
    {
        "line": 116,
        "fullcodeline": "bn_neg(t0, t0);"
    },
    {
        "line": 121,
        "fullcodeline": "bn_mul_dig(t1, v, -_b);"
    },
    {
        "line": 122,
        "fullcodeline": "bn_neg(t1, t1);"
    },
    {
        "line": 127,
        "fullcodeline": "bn_mul_dig(t2, u, -_c);"
    },
    {
        "line": 128,
        "fullcodeline": "bn_neg(t2, t2);"
    },
    {
        "line": 133,
        "fullcodeline": "bn_mul_dig(t3, v, -_d);"
    },
    {
        "line": 134,
        "fullcodeline": "bn_neg(t3, t3);"
    },
    {
        "line": 141,
        "fullcodeline": "bn_rsh(t0, u, bn_bits(u) - RLC_DIG);"
    },
    {
        "line": 142,
        "fullcodeline": "bn_rsh(t1, v, bn_bits(u) - RLC_DIG);"
    },
    {
        "line": 151,
        "fullcodeline": "q = _x / _y;"
    },
    {
        "line": 152,
        "fullcodeline": "t = _x % _y;"
    },
    {
        "line": 174,
        "fullcodeline": "bn_mul_dig(t0, x, -_a);"
    },
    {
        "line": 175,
        "fullcodeline": "bn_neg(t0, t0);"
    },
    {
        "line": 180,
        "fullcodeline": "bn_mul_dig(t1, y, -_b);"
    },
    {
        "line": 181,
        "fullcodeline": "bn_neg(t1, t1);"
    },
    {
        "line": 186,
        "fullcodeline": "bn_mul_dig(t2, x, -_c);"
    },
    {
        "line": 187,
        "fullcodeline": "bn_neg(t2, t2);"
    },
    {
        "line": 192,
        "fullcodeline": "bn_mul_dig(t3, y, -_d);"
    },
    {
        "line": 193,
        "fullcodeline": "bn_neg(t3, t3);"
    },
    {
        "line": 201,
        "fullcodeline": "bn_mul_dig(t0, t4, -_a);"
    },
    {
        "line": 202,
        "fullcodeline": "bn_neg(t0, t0);"
    },
    {
        "line": 207,
        "fullcodeline": "bn_mul_dig(t1, d, -_b);"
    },
    {
        "line": 208,
        "fullcodeline": "bn_neg(t1, t1);"
    },
    {
        "line": 213,
        "fullcodeline": "bn_mul_dig(t2, t4, -_c);"
    },
    {
        "line": 214,
        "fullcodeline": "bn_neg(t2, t2);"
    },
    {
        "line": 219,
        "fullcodeline": "bn_mul_dig(t3, d, -_d);"
    },
    {
        "line": 220,
        "fullcodeline": "bn_neg(t3, t3);"
    },
    {
        "line": 111,
        "fullcodeline": "bn_copy(u, x);"
    },
    {
        "line": 112,
        "fullcodeline": "bn_copy(v, y);"
    },
    {
        "line": 118,
        "fullcodeline": "bn_mul_dig(t0, u, _a);"
    },
    {
        "line": 124,
        "fullcodeline": "bn_mul_dig(t1, v, _b);"
    },
    {
        "line": 130,
        "fullcodeline": "bn_mul_dig(t2, u, _c);"
    },
    {
        "line": 136,
        "fullcodeline": "bn_mul_dig(t3, v, _d);"
    },
    {
        "line": 144,
        "fullcodeline": "bn_copy(t0, u);"
    },
    {
        "line": 145,
        "fullcodeline": "bn_copy(t1, v);"
    },
    {
        "line": 177,
        "fullcodeline": "bn_mul_dig(t0, x, _a);"
    },
    {
        "line": 183,
        "fullcodeline": "bn_mul_dig(t1, y, _b);"
    },
    {
        "line": 189,
        "fullcodeline": "bn_mul_dig(t2, x, _c);"
    },
    {
        "line": 195,
        "fullcodeline": "bn_mul_dig(t3, y, _d);"
    },
    {
        "line": 204,
        "fullcodeline": "bn_mul_dig(t0, t4, _a);"
    },
    {
        "line": 210,
        "fullcodeline": "bn_mul_dig(t1, d, _b);"
    },
    {
        "line": 216,
        "fullcodeline": "bn_mul_dig(t2, t4, _c);"
    },
    {
        "line": 222,
        "fullcodeline": "bn_mul_dig(t3, d, _d);"
    },
    {
        "line": 156,
        "fullcodeline": "_q = _y / t;"
    },
    {
        "line": 157,
        "fullcodeline": "_t = _y % t;"
    },
    {
        "line": 162,
        "fullcodeline": "_y = t;"
    },
    {
        "line": 163,
        "fullcodeline": "t = _a - q * _c;"
    },
    {
        "line": 164,
        "fullcodeline": "_a = _c;"
    },
    {
        "line": 165,
        "fullcodeline": "_c = t;"
    },
    {
        "line": 166,
        "fullcodeline": "t = _b - q * _d;"
    },
    {
        "line": 167,
        "fullcodeline": "_b = _d;"
    },
    {
        "line": 168,
        "fullcodeline": "_d = t;"
    },
    {
        "line": 169,
        "fullcodeline": "t = _t;"
    },
    {
        "line": 170,
        "fullcodeline": "q = _q;"
    },
    {
        "line": 158,
        "fullcodeline": "if (_t < ((dig_t)1 << RLC_DIG / 2)) {"
    }
]