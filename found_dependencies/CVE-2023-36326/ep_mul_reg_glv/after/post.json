[
    {
        "line": 3,
        "fullcodeline": "int8_t _s0, _s1, reg0[RLC_FP_BITS + 1], reg1[RLC_FP_BITS + 1];"
    },
    {
        "line": 4,
        "fullcodeline": "bn_t n, _k, k0, k1, v1[3], v2[3];"
    },
    {
        "line": 5,
        "fullcodeline": "ep_t q, t[1 << (EP_WIDTH - 2)], u, v, w;"
    },
    {
        "line": 8,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 9,
        "fullcodeline": "bn_null(_k);"
    },
    {
        "line": 10,
        "fullcodeline": "bn_null(k0);"
    },
    {
        "line": 11,
        "fullcodeline": "bn_null(k1);"
    },
    {
        "line": 12,
        "fullcodeline": "ep_null(q);"
    },
    {
        "line": 13,
        "fullcodeline": "ep_null(u);"
    },
    {
        "line": 14,
        "fullcodeline": "ep_null(v);"
    },
    {
        "line": 15,
        "fullcodeline": "ep_null(w);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 19,
        "fullcodeline": "bn_new(_k);"
    },
    {
        "line": 20,
        "fullcodeline": "bn_new(k0);"
    },
    {
        "line": 21,
        "fullcodeline": "bn_new(k1);"
    },
    {
        "line": 22,
        "fullcodeline": "ep_new(q);"
    },
    {
        "line": 23,
        "fullcodeline": "ep_new(u);"
    },
    {
        "line": 24,
        "fullcodeline": "ep_new(v);"
    },
    {
        "line": 25,
        "fullcodeline": "ep_new(w);"
    },
    {
        "line": 38,
        "fullcodeline": "ep_curve_get_ord(n);"
    },
    {
        "line": 39,
        "fullcodeline": "ep_curve_get_v1(v1);"
    },
    {
        "line": 40,
        "fullcodeline": "ep_curve_get_v2(v2);"
    },
    {
        "line": 42,
        "fullcodeline": "bn_abs(_k, k);"
    },
    {
        "line": 43,
        "fullcodeline": "bn_mod(_k, _k, n);"
    },
    {
        "line": 45,
        "fullcodeline": "bn_rec_glv(k0, k1, _k, n, (const bn_t *)v1, (const bn_t *)v2);"
    },
    {
        "line": 46,
        "fullcodeline": "s0 = bn_sign(k0);"
    },
    {
        "line": 47,
        "fullcodeline": "s1 = bn_sign(k1);"
    },
    {
        "line": 48,
        "fullcodeline": "bn_abs(k0, k0);"
    },
    {
        "line": 49,
        "fullcodeline": "bn_abs(k1, k1);"
    },
    {
        "line": 50,
        "fullcodeline": "b0 = bn_is_even(k0);"
    },
    {
        "line": 51,
        "fullcodeline": "b1 = bn_is_even(k1);"
    },
    {
        "line": 52,
        "fullcodeline": "k0->dp[0] |= b0;"
    },
    {
        "line": 53,
        "fullcodeline": "k1->dp[0] |= b1;"
    },
    {
        "line": 55,
        "fullcodeline": "ep_copy(q, p);"
    },
    {
        "line": 56,
        "fullcodeline": "ep_neg(t[0], p);"
    },
    {
        "line": 57,
        "fullcodeline": "dv_copy_cond(q->y, t[0]->y, RLC_FP_DIGS, s0 != RLC_POS);"
    },
    {
        "line": 58,
        "fullcodeline": "ep_tab(t, q, EP_WIDTH);"
    },
    {
        "line": 60,
        "fullcodeline": "l = RLC_FP_BITS + 1;"
    },
    {
        "line": 61,
        "fullcodeline": "bn_rec_reg(reg0, &l, k0, bn_bits(n)/2, EP_WIDTH);"
    },
    {
        "line": 62,
        "fullcodeline": "l = RLC_FP_BITS + 1;"
    },
    {
        "line": 63,
        "fullcodeline": "bn_rec_reg(reg1, &l, k1, bn_bits(n)/2, EP_WIDTH);"
    },
    {
        "line": 70,
        "fullcodeline": "u->coord = w->coord = EP_ADD;"
    },
    {
        "line": 72,
        "fullcodeline": "ep_set_infty(r);"
    },
    {
        "line": 108,
        "fullcodeline": "ep_sub(u, r, t[0]);"
    },
    {
        "line": 109,
        "fullcodeline": "dv_copy_cond(r->x, u->x, RLC_FP_DIGS, b0);"
    },
    {
        "line": 110,
        "fullcodeline": "dv_copy_cond(r->y, u->y, RLC_FP_DIGS, b0);"
    },
    {
        "line": 111,
        "fullcodeline": "dv_copy_cond(r->z, u->z, RLC_FP_DIGS, b0);"
    },
    {
        "line": 113,
        "fullcodeline": "ep_psi(w, t[0]);"
    },
    {
        "line": 114,
        "fullcodeline": "ep_neg(q, w);"
    },
    {
        "line": 115,
        "fullcodeline": "dv_copy_cond(w->y, q->y, RLC_FP_DIGS, s0 != s1);"
    },
    {
        "line": 116,
        "fullcodeline": "ep_sub(u, r, w);"
    },
    {
        "line": 117,
        "fullcodeline": "dv_copy_cond(r->x, u->x, RLC_FP_DIGS, b1);"
    },
    {
        "line": 118,
        "fullcodeline": "dv_copy_cond(r->y, u->y, RLC_FP_DIGS, b1);"
    },
    {
        "line": 119,
        "fullcodeline": "dv_copy_cond(r->z, u->z, RLC_FP_DIGS, b1);"
    },
    {
        "line": 122,
        "fullcodeline": "ep_norm(r, r);"
    },
    {
        "line": 123,
        "fullcodeline": "ep_neg(u, r);"
    },
    {
        "line": 124,
        "fullcodeline": "dv_copy_cond(r->y, u->y, RLC_FP_DIGS, bn_sign(k) == RLC_NEG);"
    },
    {
        "line": 127,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 130,
        "fullcodeline": "bn_free(n);"
    },
    {
        "line": 131,
        "fullcodeline": "bn_free(_k);"
    },
    {
        "line": 132,
        "fullcodeline": "bn_free(k0);"
    },
    {
        "line": 133,
        "fullcodeline": "bn_free(k1);"
    },
    {
        "line": 134,
        "fullcodeline": "bn_free(n);"
    },
    {
        "line": 135,
        "fullcodeline": "ep_free(q);"
    },
    {
        "line": 136,
        "fullcodeline": "ep_free(u);"
    },
    {
        "line": 137,
        "fullcodeline": "ep_free(v);"
    },
    {
        "line": 138,
        "fullcodeline": "ep_free(w);"
    },
    {
        "line": 27,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 73,
        "fullcodeline": "for (i = l - 1; i >= 0; i--) {"
    },
    {
        "line": 139,
        "fullcodeline": "for (i = 0; i < 1 << (EP_WIDTH - 2); i++) {"
    },
    {
        "line": 142,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 28,
        "fullcodeline": "ep_null(t[i]);"
    },
    {
        "line": 29,
        "fullcodeline": "ep_new(t[i]);"
    },
    {
        "line": 32,
        "fullcodeline": "bn_null(v1[i]);"
    },
    {
        "line": 33,
        "fullcodeline": "bn_null(v2[i]);"
    },
    {
        "line": 34,
        "fullcodeline": "bn_new(v1[i]);"
    },
    {
        "line": 35,
        "fullcodeline": "bn_new(v2[i]);"
    },
    {
        "line": 78,
        "fullcodeline": "n0 = reg0[i];"
    },
    {
        "line": 79,
        "fullcodeline": "_s0 = (n0 >> 7);"
    },
    {
        "line": 80,
        "fullcodeline": "n0 = ((n0 ^ _s0) - _s0) >> 1;"
    },
    {
        "line": 81,
        "fullcodeline": "n1 = reg1[i];"
    },
    {
        "line": 82,
        "fullcodeline": "_s1 = (n1 >> 7);"
    },
    {
        "line": 83,
        "fullcodeline": "n1 = ((n1 ^ _s1) - _s1) >> 1;"
    },
    {
        "line": 95,
        "fullcodeline": "ep_neg(v, u);"
    },
    {
        "line": 96,
        "fullcodeline": "dv_copy_cond(u->y, v->y, RLC_FP_DIGS, _s0 != 0);"
    },
    {
        "line": 97,
        "fullcodeline": "ep_add(r, r, u);"
    },
    {
        "line": 99,
        "fullcodeline": "ep_psi(w, w);"
    },
    {
        "line": 100,
        "fullcodeline": "ep_neg(q, w);"
    },
    {
        "line": 101,
        "fullcodeline": "dv_copy_cond(w->y, q->y, RLC_FP_DIGS, s0 != s1);"
    },
    {
        "line": 102,
        "fullcodeline": "ep_neg(q, w);"
    },
    {
        "line": 103,
        "fullcodeline": "dv_copy_cond(w->y, q->y, RLC_FP_DIGS, _s1 != 0);"
    },
    {
        "line": 104,
        "fullcodeline": "ep_add(r, r, w);"
    },
    {
        "line": 140,
        "fullcodeline": "ep_free(t[i]);"
    },
    {
        "line": 143,
        "fullcodeline": "bn_free(v1[i]);"
    },
    {
        "line": 144,
        "fullcodeline": "bn_free(v2[i]);"
    },
    {
        "line": 74,
        "fullcodeline": "for (j = 0; j < EP_WIDTH - 1; j++) {"
    },
    {
        "line": 85,
        "fullcodeline": "for (j = 0; j < (1 << (EP_WIDTH - 2)); j++) {"
    },
    {
        "line": 75,
        "fullcodeline": "ep_dbl(r, r);"
    },
    {
        "line": 86,
        "fullcodeline": "dv_copy_cond(u->x, t[j]->x, RLC_FP_DIGS, j == n0);"
    },
    {
        "line": 87,
        "fullcodeline": "dv_copy_cond(w->x, t[j]->x, RLC_FP_DIGS, j == n1);"
    },
    {
        "line": 88,
        "fullcodeline": "dv_copy_cond(u->y, t[j]->y, RLC_FP_DIGS, j == n0);"
    },
    {
        "line": 89,
        "fullcodeline": "dv_copy_cond(w->y, t[j]->y, RLC_FP_DIGS, j == n1);"
    },
    {
        "line": 91,
        "fullcodeline": "dv_copy_cond(u->z, t[j]->z, RLC_FP_DIGS, j == n0);"
    },
    {
        "line": 92,
        "fullcodeline": "dv_copy_cond(w->z, t[j]->z, RLC_FP_DIGS, j == n1);"
    }
]