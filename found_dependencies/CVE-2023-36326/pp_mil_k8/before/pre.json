[
    {
        "line": 3,
        "fullcodeline": "ep_t *_p = RLC_ALLOCA(ep_t, m);"
    },
    {
        "line": 4,
        "fullcodeline": "ep2_t *_q = RLC_ALLOCA(ep2_t, m);"
    },
    {
        "line": 5,
        "fullcodeline": "int i, j, len = bn_bits(a) + 1;"
    },
    {
        "line": 6,
        "fullcodeline": "int8_t s[RLC_FP_BITS + 1];"
    },
    {
        "line": 12,
        "fullcodeline": "fp8_null(l);"
    },
    {
        "line": 8,
        "fullcodeline": "if (m == 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "fp8_new(l);"
    },
    {
        "line": 36,
        "fullcodeline": "fp8_zero(l);"
    },
    {
        "line": 37,
        "fullcodeline": "bn_rec_naf(s, &len, a, 2);"
    },
    {
        "line": 55,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 20,
        "fullcodeline": "for (j = 0; j < m; j++) {"
    },
    {
        "line": 38,
        "fullcodeline": "for (i = len - 2; i >= 0; i--) {"
    },
    {
        "line": 59,
        "fullcodeline": "for (j = 0; j < m; j++) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (_p == NULL || _q == NULL) {"
    },
    {
        "line": 17,
        "fullcodeline": "RLC_THROW(ERR_NO_MEMORY);"
    },
    {
        "line": 21,
        "fullcodeline": "ep_null(_p[j]);"
    },
    {
        "line": 22,
        "fullcodeline": "ep2_null(_q[j]);"
    },
    {
        "line": 23,
        "fullcodeline": "ep_new(_p[j]);"
    },
    {
        "line": 24,
        "fullcodeline": "ep2_new(_q[j]);"
    },
    {
        "line": 25,
        "fullcodeline": "ep2_copy(t[j], q[j]);"
    },
    {
        "line": 26,
        "fullcodeline": "ep2_neg(_q[j], q[j]);"
    },
    {
        "line": 29,
        "fullcodeline": "ep_neg(_p[j], p[j]);"
    },
    {
        "line": 39,
        "fullcodeline": "fp8_sqr(r, r);"
    },
    {
        "line": 60,
        "fullcodeline": "ep_free(_p[j]);"
    },
    {
        "line": 61,
        "fullcodeline": "ep2_free(_q[j]);"
    },
    {
        "line": 40,
        "fullcodeline": "for (j = 0; j < m; j++) {"
    },
    {
        "line": 41,
        "fullcodeline": "pp_dbl_k8(l, t[j], t[j], _p[j]);"
    },
    {
        "line": 42,
        "fullcodeline": "fp8_mul(r, r, l);"
    },
    {
        "line": 43,
        "fullcodeline": "if (s[i] > 0) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (s[i] < 0) {"
    },
    {
        "line": 44,
        "fullcodeline": "pp_add_k8(l, t[j], q[j], _p[j]);"
    },
    {
        "line": 45,
        "fullcodeline": "fp8_mul_dxs(r, r, l);"
    },
    {
        "line": 48,
        "fullcodeline": "pp_add_k8(l, t[j], _q[j], _p[j]);"
    },
    {
        "line": 49,
        "fullcodeline": "fp8_mul_dxs(r, r, l);"
    }
]