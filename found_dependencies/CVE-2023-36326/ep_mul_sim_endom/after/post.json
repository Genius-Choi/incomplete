[
    {
        "line": 3,
        "fullcodeline": "int i, sk0, sk1, sl0, sl1, w, g = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *t0, *t1, u;"
    },
    {
        "line": 5,
        "fullcodeline": "int8_t naf2[RLC_FP_BITS + 1], naf3[RLC_FP_BITS + 1], *t2, *t3;"
    },
    {
        "line": 7,
        "fullcodeline": "bn_t v1[3], v2[3];"
    },
    {
        "line": 9,
        "fullcodeline": "ep_t tab0[1 << (EP_WIDTH - 2)];"
    },
    {
        "line": 10,
        "fullcodeline": "ep_t tab1[1 << (EP_WIDTH - 2)];"
    },
    {
        "line": 13,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 14,
        "fullcodeline": "bn_null(k0);"
    },
    {
        "line": 15,
        "fullcodeline": "bn_null(k1);"
    },
    {
        "line": 16,
        "fullcodeline": "bn_null(m0);"
    },
    {
        "line": 17,
        "fullcodeline": "bn_null(m1);"
    },
    {
        "line": 18,
        "fullcodeline": "ep_null(v);"
    },
    {
        "line": 20,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 26,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 27,
        "fullcodeline": "bn_new(k0);"
    },
    {
        "line": 28,
        "fullcodeline": "bn_new(k1);"
    },
    {
        "line": 29,
        "fullcodeline": "bn_new(m0);"
    },
    {
        "line": 30,
        "fullcodeline": "bn_new(m1);"
    },
    {
        "line": 31,
        "fullcodeline": "ep_new(v);"
    },
    {
        "line": 40,
        "fullcodeline": "ep_curve_get_ord(n);"
    },
    {
        "line": 41,
        "fullcodeline": "ep_curve_get_v1(v1);"
    },
    {
        "line": 42,
        "fullcodeline": "ep_curve_get_v2(v2);"
    },
    {
        "line": 44,
        "fullcodeline": "bn_rec_glv(k0, k1, k, n, (const bn_t *)v1, (const bn_t *)v2);"
    },
    {
        "line": 45,
        "fullcodeline": "sk0 = bn_sign(k0);"
    },
    {
        "line": 46,
        "fullcodeline": "sk1 = bn_sign(k1);"
    },
    {
        "line": 47,
        "fullcodeline": "bn_abs(k0, k0);"
    },
    {
        "line": 48,
        "fullcodeline": "bn_abs(k1, k1);"
    },
    {
        "line": 50,
        "fullcodeline": "bn_rec_glv(m0, m1, m, n, (const bn_t *)v1, (const bn_t *)v2);"
    },
    {
        "line": 51,
        "fullcodeline": "sl0 = bn_sign(m0);"
    },
    {
        "line": 52,
        "fullcodeline": "sl1 = bn_sign(m1);"
    },
    {
        "line": 53,
        "fullcodeline": "bn_abs(m0, m0);"
    },
    {
        "line": 54,
        "fullcodeline": "bn_abs(m1, m1);"
    },
    {
        "line": 56,
        "fullcodeline": "g = (t == NULL ? 0 : 1);"
    },
    {
        "line": 70,
        "fullcodeline": "ep_tab(tab1, q, EP_WIDTH);"
    },
    {
        "line": 78,
        "fullcodeline": "l0 = l1 = l2 = l3 = RLC_FP_BITS + 1;"
    },
    {
        "line": 79,
        "fullcodeline": "bn_rec_naf(naf0, &l0, k0, w);"
    },
    {
        "line": 80,
        "fullcodeline": "bn_rec_naf(naf1, &l1, k1, w);"
    },
    {
        "line": 81,
        "fullcodeline": "bn_rec_naf(naf2, &l2, m0, EP_WIDTH);"
    },
    {
        "line": 82,
        "fullcodeline": "bn_rec_naf(naf3, &l3, m1, EP_WIDTH);"
    },
    {
        "line": 84,
        "fullcodeline": "l = RLC_MAX(RLC_MAX(l0, l1), RLC_MAX(l2, l3));"
    },
    {
        "line": 85,
        "fullcodeline": "t0 = naf0 + l - 1;"
    },
    {
        "line": 86,
        "fullcodeline": "t1 = naf1 + l - 1;"
    },
    {
        "line": 87,
        "fullcodeline": "t2 = naf2 + l - 1;"
    },
    {
        "line": 88,
        "fullcodeline": "t3 = naf3 + l - 1;"
    },
    {
        "line": 107,
        "fullcodeline": "ep_set_infty(r);"
    },
    {
        "line": 174,
        "fullcodeline": "ep_norm(r, r);"
    },
    {
        "line": 177,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 180,
        "fullcodeline": "bn_free(n);"
    },
    {
        "line": 181,
        "fullcodeline": "bn_free(k0);"
    },
    {
        "line": 182,
        "fullcodeline": "bn_free(k1);"
    },
    {
        "line": 183,
        "fullcodeline": "bn_free(m0);"
    },
    {
        "line": 184,
        "fullcodeline": "bn_free(m1);"
    },
    {
        "line": 185,
        "fullcodeline": "ep_free(v);"
    },
    {
        "line": 21,
        "fullcodeline": "ep_null(tab0[i]);"
    },
    {
        "line": 22,
        "fullcodeline": "ep_null(tab1[i]);"
    },
    {
        "line": 33,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (!g) {"
    },
    {
        "line": 66,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (bn_sign(k) == RLC_NEG) {"
    },
    {
        "line": 98,
        "fullcodeline": "if (bn_sign(m) == RLC_NEG) {"
    },
    {
        "line": 108,
        "fullcodeline": "for (i = l - 1; i >= 0; i--, t0--, t1--, t2--, t3--) {"
    },
    {
        "line": 187,
        "fullcodeline": "if (!g) {"
    },
    {
        "line": 193,
        "fullcodeline": "for (i = 0; i < 1 << (EP_WIDTH - 2); i++) {"
    },
    {
        "line": 196,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 34,
        "fullcodeline": "bn_null(v1[i]);"
    },
    {
        "line": 35,
        "fullcodeline": "bn_null(v2[i]);"
    },
    {
        "line": 36,
        "fullcodeline": "bn_new(v1[i]);"
    },
    {
        "line": 37,
        "fullcodeline": "bn_new(v2[i]);"
    },
    {
        "line": 61,
        "fullcodeline": "ep_tab(tab0, p, EP_WIDTH);"
    },
    {
        "line": 62,
        "fullcodeline": "t = (const ep_t *)tab0;"
    },
    {
        "line": 67,
        "fullcodeline": "ep_new(tab1[i]);"
    },
    {
        "line": 74,
        "fullcodeline": "w = EP_DEPTH;"
    },
    {
        "line": 109,
        "fullcodeline": "ep_dbl(r, r);"
    },
    {
        "line": 194,
        "fullcodeline": "ep_free(tab1[i]);"
    },
    {
        "line": 197,
        "fullcodeline": "bn_free(v1[i]);"
    },
    {
        "line": 198,
        "fullcodeline": "bn_free(v2[i]);"
    },
    {
        "line": 58,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 76,
        "fullcodeline": "w = EP_WIDTH;"
    },
    {
        "line": 91,
        "fullcodeline": "for (i =  0; i < l0; i++) {"
    },
    {
        "line": 94,
        "fullcodeline": "for (i =  0; i < l1; i++) {"
    },
    {
        "line": 99,
        "fullcodeline": "for (i =  0; i < l2; i++) {"
    },
    {
        "line": 102,
        "fullcodeline": "for (i =  0; i < l3; i++) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (u > 0) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (u < 0) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (u > 0) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (u < 0) {"
    },
    {
        "line": 143,
        "fullcodeline": "if (u > 0) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (u < 0) {"
    },
    {
        "line": 158,
        "fullcodeline": "if (u > 0) {"
    },
    {
        "line": 165,
        "fullcodeline": "if (u < 0) {"
    },
    {
        "line": 188,
        "fullcodeline": "for (i = 0; i < 1 << (EP_WIDTH - 2); i++) {"
    },
    {
        "line": 59,
        "fullcodeline": "ep_new(tab0[i]);"
    },
    {
        "line": 92,
        "fullcodeline": "naf0[i] = -naf0[i];"
    },
    {
        "line": 95,
        "fullcodeline": "naf1[i] = -naf1[i];"
    },
    {
        "line": 100,
        "fullcodeline": "naf2[i] = -naf2[i];"
    },
    {
        "line": 103,
        "fullcodeline": "naf3[i] = -naf3[i];"
    },
    {
        "line": 128,
        "fullcodeline": "ep_psi(v, t[u / 2]);"
    },
    {
        "line": 132,
        "fullcodeline": "ep_add(r, r, v);"
    },
    {
        "line": 135,
        "fullcodeline": "ep_psi(v, t[-u / 2]);"
    },
    {
        "line": 139,
        "fullcodeline": "ep_sub(r, r, v);"
    },
    {
        "line": 159,
        "fullcodeline": "ep_psi(v, tab1[u / 2]);"
    },
    {
        "line": 163,
        "fullcodeline": "ep_add(r, r, v);"
    },
    {
        "line": 166,
        "fullcodeline": "ep_psi(v, tab1[-u / 2]);"
    },
    {
        "line": 170,
        "fullcodeline": "ep_sub(r, r, v);"
    },
    {
        "line": 189,
        "fullcodeline": "ep_free(tab0[i]);"
    },
    {
        "line": 113,
        "fullcodeline": "if (sk0 == RLC_POS) {"
    },
    {
        "line": 120,
        "fullcodeline": "if (sk0 == RLC_POS) {"
    },
    {
        "line": 129,
        "fullcodeline": "if (sk1 == RLC_NEG) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (sk1 == RLC_NEG) {"
    },
    {
        "line": 144,
        "fullcodeline": "if (sl0 == RLC_POS) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (sl0 == RLC_POS) {"
    },
    {
        "line": 160,
        "fullcodeline": "if (sl1 == RLC_NEG) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (sl1 == RLC_NEG) {"
    },
    {
        "line": 114,
        "fullcodeline": "ep_add(r, r, t[u / 2]);"
    },
    {
        "line": 121,
        "fullcodeline": "ep_sub(r, r, t[-u / 2]);"
    },
    {
        "line": 130,
        "fullcodeline": "ep_neg(v, v);"
    },
    {
        "line": 137,
        "fullcodeline": "ep_neg(v, v);"
    },
    {
        "line": 145,
        "fullcodeline": "ep_add(r, r, tab1[u / 2]);"
    },
    {
        "line": 152,
        "fullcodeline": "ep_sub(r, r, tab1[-u / 2]);"
    },
    {
        "line": 161,
        "fullcodeline": "ep_neg(v, v);"
    },
    {
        "line": 168,
        "fullcodeline": "ep_neg(v, v);"
    },
    {
        "line": 116,
        "fullcodeline": "ep_sub(r, r, t[u / 2]);"
    },
    {
        "line": 123,
        "fullcodeline": "ep_add(r, r, t[-u / 2]);"
    },
    {
        "line": 147,
        "fullcodeline": "ep_sub(r, r, tab1[u / 2]);"
    },
    {
        "line": 154,
        "fullcodeline": "ep_add(r, r, tab1[-u / 2]);"
    }
]