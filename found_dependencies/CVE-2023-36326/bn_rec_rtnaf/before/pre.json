[
    {
        "line": 4,
        "fullcodeline": "int8_t beta[64], gama[64];"
    },
    {
        "line": 9,
        "fullcodeline": "bn_null(r0);"
    },
    {
        "line": 10,
        "fullcodeline": "bn_null(r1);"
    },
    {
        "line": 11,
        "fullcodeline": "bn_null(tmp);"
    },
    {
        "line": 13,
        "fullcodeline": "if (*len < (bn_bits(k) + 1)) {"
    },
    {
        "line": 19,
        "fullcodeline": "bn_new(r0);"
    },
    {
        "line": 20,
        "fullcodeline": "bn_new(r1);"
    },
    {
        "line": 21,
        "fullcodeline": "bn_new(tmp);"
    },
    {
        "line": 25,
        "fullcodeline": "bn_rec_tnaf_get(&t_w, beta, gama, u, w);"
    },
    {
        "line": 26,
        "fullcodeline": "bn_abs(tmp, k);"
    },
    {
        "line": 27,
        "fullcodeline": "bn_rec_tnaf_mod(r0, r1, tmp, u, m);"
    },
    {
        "line": 28,
        "fullcodeline": "mask = RLC_MASK(w);"
    },
    {
        "line": 29,
        "fullcodeline": "l = RLC_CEIL(m + 2, (w - 1));"
    },
    {
        "line": 31,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 103,
        "fullcodeline": "s = r0->dp[0];"
    },
    {
        "line": 104,
        "fullcodeline": "t = r1->dp[0];"
    },
    {
        "line": 134,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 14,
        "fullcodeline": "RLC_THROW(ERR_NO_BUFFER);"
    },
    {
        "line": 32,
        "fullcodeline": "while (i < l) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (bn_sign(r0) == RLC_NEG) {"
    },
    {
        "line": 106,
        "fullcodeline": "s = -s;"
    },
    {
        "line": 108,
        "fullcodeline": "if (bn_sign(r1) == RLC_NEG) {"
    },
    {
        "line": 109,
        "fullcodeline": "t = -t;"
    },
    {
        "line": 111,
        "fullcodeline": "if (s != 0 && t != 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (w == 2) {"
    },
    {
        "line": 89,
        "fullcodeline": "for (int j = 0; j < (w - 1); j++) {"
    },
    {
        "line": 112,
        "fullcodeline": "for (int j = 0; j < (1 << (w - 2)); j++) {"
    },
    {
        "line": 118,
        "fullcodeline": "for (int j = 0; j < (1 << (w - 2)); j++) {"
    },
    {
        "line": 35,
        "fullcodeline": "t0 = r0->dp[0];"
    },
    {
        "line": 39,
        "fullcodeline": "t1 = r1->dp[0];"
    },
    {
        "line": 43,
        "fullcodeline": "u_i = ((t0 - 2 * t1) & mask) - 2;"
    },
    {
        "line": 91,
        "fullcodeline": "bn_hlv(tmp, r0);"
    },
    {
        "line": 99,
        "fullcodeline": "bn_copy(r1, tmp);"
    },
    {
        "line": 100,
        "fullcodeline": "r1->sign = tmp->sign ^ 1;"
    },
    {
        "line": 125,
        "fullcodeline": "if (t != 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (bn_sign(r0) == RLC_NEG) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (bn_sign(r1) == RLC_NEG) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (u_i < 0) {"
    },
    {
        "line": 52,
        "fullcodeline": "t0 = r0->dp[0];"
    },
    {
        "line": 57,
        "fullcodeline": "t1 = r1->dp[0];"
    },
    {
        "line": 62,
        "fullcodeline": "u_i = ((t0 + t_w * t1) & mask) - (1 << (w - 1));"
    },
    {
        "line": 37,
        "fullcodeline": "t0 = (1 << w) - t0;"
    },
    {
        "line": 41,
        "fullcodeline": "t1 = (1 << w) - t1;"
    },
    {
        "line": 44,
        "fullcodeline": "tnaf[i++] = u_i;"
    },
    {
        "line": 46,
        "fullcodeline": "bn_add_dig(r0, r0, -u_i);"
    },
    {
        "line": 53,
        "fullcodeline": "if (bn_sign(r0) == RLC_NEG) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (bn_sign(r1) == RLC_NEG) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (u_i < 0) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (t > 0) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (s > 0) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (u == -1) {"
    },
    {
        "line": 94,
        "fullcodeline": "bn_sub(r0, r1, tmp);"
    },
    {
        "line": 113,
        "fullcodeline": "if (beta[j] == s && gama[j] == t) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (beta[j] == -s && gama[j] == -t) {"
    },
    {
        "line": 48,
        "fullcodeline": "bn_sub_dig(r0, r0, u_i);"
    },
    {
        "line": 54,
        "fullcodeline": "t0 = (1 << w) - t0;"
    },
    {
        "line": 59,
        "fullcodeline": "t1 = (1 << w) - t1;"
    },
    {
        "line": 67,
        "fullcodeline": "t = -beta[u_i];"
    },
    {
        "line": 68,
        "fullcodeline": "s = -gama[u_i];"
    },
    {
        "line": 78,
        "fullcodeline": "bn_sub_dig(r0, r0, t);"
    },
    {
        "line": 84,
        "fullcodeline": "bn_sub_dig(r1, r1, s);"
    },
    {
        "line": 96,
        "fullcodeline": "bn_add(r0, r1, tmp);"
    },
    {
        "line": 120,
        "fullcodeline": "tnaf[i++] = -(2 * j + 1);"
    },
    {
        "line": 126,
        "fullcodeline": "tnaf[i++] = t;"
    },
    {
        "line": 66,
        "fullcodeline": "u_i = (int8_t)(-u_i >> 1);"
    },
    {
        "line": 73,
        "fullcodeline": "t = beta[u_i];"
    },
    {
        "line": 74,
        "fullcodeline": "s = gama[u_i];"
    },
    {
        "line": 80,
        "fullcodeline": "bn_add_dig(r0, r0, -t);"
    },
    {
        "line": 86,
        "fullcodeline": "bn_add_dig(r1, r1, -s);"
    },
    {
        "line": 114,
        "fullcodeline": "tnaf[i++] = 2 * j + 1;"
    },
    {
        "line": 128,
        "fullcodeline": "tnaf[i++] = s;"
    },
    {
        "line": 65,
        "fullcodeline": "tnaf[i++] = u_i;"
    },
    {
        "line": 72,
        "fullcodeline": "u_i = (int8_t)(u_i >> 1);"
    },
    {
        "line": 71,
        "fullcodeline": "tnaf[i++] = u_i;"
    }
]