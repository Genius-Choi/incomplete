[
    {
        "line": 2,
        "fullcodeline": "int i, j, k, w = bn_ham(b);"
    },
    {
        "line": 4,
        "fullcodeline": "if (bn_is_zero(b)) {"
    },
    {
        "line": 8,
        "fullcodeline": "if ((bn_bits(b) > RLC_DIG) && ((w << 3) > bn_bits(b))) {"
    },
    {
        "line": 5,
        "fullcodeline": "return fp48_set_dig(c, 1);"
    },
    {
        "line": 14,
        "fullcodeline": "fp48_new(t);"
    },
    {
        "line": 16,
        "fullcodeline": "fp48_copy(t, a);"
    },
    {
        "line": 24,
        "fullcodeline": "fp48_copy(c, t);"
    },
    {
        "line": 30,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 33,
        "fullcodeline": "fp48_free(t);"
    },
    {
        "line": 36,
        "fullcodeline": "fp48_t t, *u = RLC_ALLOCA(fp48_t, w);"
    },
    {
        "line": 38,
        "fullcodeline": "fp48_null(t);"
    },
    {
        "line": 17,
        "fullcodeline": "for (i = bn_bits(b) - 2; i >= 0; i--) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (bn_sign(b) == RLC_NEG) {"
    },
    {
        "line": 48,
        "fullcodeline": "fp48_new(t);"
    },
    {
        "line": 50,
        "fullcodeline": "j = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "fp48_copy(t, a);"
    },
    {
        "line": 67,
        "fullcodeline": "fp48_back_cyc_sim(u, u, k);"
    },
    {
        "line": 84,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 90,
        "fullcodeline": "fp48_free(t);"
    },
    {
        "line": 91,
        "fullcodeline": "RLC_FREE(u);"
    },
    {
        "line": 18,
        "fullcodeline": "fp48_sqr_cyc(t, t);"
    },
    {
        "line": 26,
        "fullcodeline": "fp48_inv_cyc(c, c);"
    },
    {
        "line": 41,
        "fullcodeline": "if (u == NULL) {"
    },
    {
        "line": 44,
        "fullcodeline": "for (i = 0; i < w; i++) {"
    },
    {
        "line": 52,
        "fullcodeline": "for (i = 1; i < bn_bits(b); i++) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (!bn_is_even(b)) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (!bn_is_even(b)) {"
    },
    {
        "line": 75,
        "fullcodeline": "for (i = j; i < k; i++) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (bn_sign(b) == RLC_NEG) {"
    },
    {
        "line": 87,
        "fullcodeline": "for (i = 0; i < w; i++) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (bn_get_bit(b, i)) {"
    },
    {
        "line": 42,
        "fullcodeline": "RLC_THROW(ERR_NO_MEMORY);"
    },
    {
        "line": 45,
        "fullcodeline": "fp48_null(u[i]);"
    },
    {
        "line": 46,
        "fullcodeline": "fp48_new(u[i]);"
    },
    {
        "line": 53,
        "fullcodeline": "fp48_sqr_pck(t, t);"
    },
    {
        "line": 60,
        "fullcodeline": "j = 0;"
    },
    {
        "line": 61,
        "fullcodeline": "k = w - 1;"
    },
    {
        "line": 70,
        "fullcodeline": "fp48_copy(c, a);"
    },
    {
        "line": 76,
        "fullcodeline": "fp48_mul(c, c, u[i]);"
    },
    {
        "line": 80,
        "fullcodeline": "fp48_inv_cyc(c, c);"
    },
    {
        "line": 88,
        "fullcodeline": "fp48_free(u[i]);"
    },
    {
        "line": 20,
        "fullcodeline": "fp48_mul(t, t, a);"
    },
    {
        "line": 54,
        "fullcodeline": "if (bn_get_bit(b, i)) {"
    },
    {
        "line": 63,
        "fullcodeline": "j = 1;"
    },
    {
        "line": 64,
        "fullcodeline": "k = w;"
    },
    {
        "line": 72,
        "fullcodeline": "fp48_copy(c, u[0]);"
    },
    {
        "line": 55,
        "fullcodeline": "fp48_copy(u[j++], t);"
    }
]