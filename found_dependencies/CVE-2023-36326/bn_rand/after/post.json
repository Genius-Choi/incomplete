[
    {
        "line": 4,
        "fullcodeline": "RLC_RIP(bits, digits, bits);"
    },
    {
        "line": 5,
        "fullcodeline": "digits += (bits > 0 ? 1 : 0);"
    },
    {
        "line": 7,
        "fullcodeline": "bn_grow(a, digits);"
    },
    {
        "line": 9,
        "fullcodeline": "rand_bytes((uint8_t *)a->dp, digits * sizeof(dig_t));"
    },
    {
        "line": 11,
        "fullcodeline": "a->used = digits;"
    },
    {
        "line": 12,
        "fullcodeline": "a->sign = sign;"
    },
    {
        "line": 17,
        "fullcodeline": "bn_trim(a);"
    },
    {
        "line": 13,
        "fullcodeline": "if (bits > 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "dig_t mask = ((dig_t)1 << (dig_t)bits) - 1;"
    },
    {
        "line": 15,
        "fullcodeline": "a->dp[a->used - 1] &= mask;"
    }
]