[
    {
        "line": 5,
        "fullcodeline": "int8_t beta[64], gama[64];"
    },
    {
        "line": 10,
        "fullcodeline": "bn_null(r0);"
    },
    {
        "line": 11,
        "fullcodeline": "bn_null(r1);"
    },
    {
        "line": 12,
        "fullcodeline": "bn_null(tmp);"
    },
    {
        "line": 14,
        "fullcodeline": "if (*len < (bn_bits(k) + 1)) {"
    },
    {
        "line": 21,
        "fullcodeline": "bn_new(r0);"
    },
    {
        "line": 22,
        "fullcodeline": "bn_new(r1);"
    },
    {
        "line": 23,
        "fullcodeline": "bn_new(tmp);"
    },
    {
        "line": 27,
        "fullcodeline": "bn_rec_tnaf_get(&t_w, beta, gama, u, w);"
    },
    {
        "line": 28,
        "fullcodeline": "bn_abs(tmp, k);"
    },
    {
        "line": 29,
        "fullcodeline": "bn_rec_tnaf_mod(r0, r1, tmp, u, m);"
    },
    {
        "line": 31,
        "fullcodeline": "mask = RLC_MASK(w);"
    },
    {
        "line": 32,
        "fullcodeline": "l = 1 << w;"
    },
    {
        "line": 34,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 123,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 15,
        "fullcodeline": "*len = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "RLC_THROW(ERR_NO_BUFFER);"
    },
    {
        "line": 35,
        "fullcodeline": "while (!bn_is_zero(r0) || !bn_is_zero(r1)) {"
    },
    {
        "line": 109,
        "fullcodeline": "bn_hlv(tmp, r0);"
    },
    {
        "line": 117,
        "fullcodeline": "bn_copy(r1, tmp);"
    },
    {
        "line": 118,
        "fullcodeline": "r1->sign = tmp->sign ^ 1;"
    },
    {
        "line": 111,
        "fullcodeline": "if (u == -1) {"
    },
    {
        "line": 36,
        "fullcodeline": "while ((r0->dp[0] & 1) == 0) {"
    },
    {
        "line": 39,
        "fullcodeline": "bn_hlv(tmp, r0);"
    },
    {
        "line": 47,
        "fullcodeline": "bn_copy(r1, tmp);"
    },
    {
        "line": 48,
        "fullcodeline": "r1->sign = tmp->sign ^ 1;"
    },
    {
        "line": 52,
        "fullcodeline": "t0 = r0->dp[0];"
    },
    {
        "line": 56,
        "fullcodeline": "t1 = r1->dp[0];"
    },
    {
        "line": 60,
        "fullcodeline": "u_i = 2 - ((t0 - 2 * t1) & mask);"
    },
    {
        "line": 112,
        "fullcodeline": "bn_sub(r0, r1, tmp);"
    },
    {
        "line": 41,
        "fullcodeline": "if (u == -1) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (bn_sign(r0) == RLC_NEG) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (bn_sign(r1) == RLC_NEG) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (u_i < 0) {"
    },
    {
        "line": 69,
        "fullcodeline": "t0 = r0->dp[0];"
    },
    {
        "line": 74,
        "fullcodeline": "t1 = r1->dp[0];"
    },
    {
        "line": 79,
        "fullcodeline": "u_i = (t0 + t_w * t1) & mask;"
    },
    {
        "line": 114,
        "fullcodeline": "bn_add(r0, r1, tmp);"
    },
    {
        "line": 37,
        "fullcodeline": "tnaf[i++] = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "bn_sub(r0, r1, tmp);"
    },
    {
        "line": 54,
        "fullcodeline": "t0 = l - t0;"
    },
    {
        "line": 58,
        "fullcodeline": "t1 = l - t1;"
    },
    {
        "line": 61,
        "fullcodeline": "tnaf[i++] = u_i;"
    },
    {
        "line": 63,
        "fullcodeline": "bn_add_dig(r0, r0, -u_i);"
    },
    {
        "line": 70,
        "fullcodeline": "if (bn_sign(r0) == RLC_NEG) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (bn_sign(r1) == RLC_NEG) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (u_i >= (l / 2)) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (t > 0) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (s > 0) {"
    },
    {
        "line": 44,
        "fullcodeline": "bn_add(r0, r1, tmp);"
    },
    {
        "line": 65,
        "fullcodeline": "bn_sub_dig(r0, r0, u_i);"
    },
    {
        "line": 71,
        "fullcodeline": "t0 = l - t0;"
    },
    {
        "line": 76,
        "fullcodeline": "t1 = l - t1;"
    },
    {
        "line": 83,
        "fullcodeline": "u_i = (int8_t)(u_i - l);"
    },
    {
        "line": 86,
        "fullcodeline": "t = -beta[u_i];"
    },
    {
        "line": 87,
        "fullcodeline": "s = -gama[u_i];"
    },
    {
        "line": 97,
        "fullcodeline": "bn_sub_dig(r0, r0, t);"
    },
    {
        "line": 103,
        "fullcodeline": "bn_sub_dig(r1, r1, s);"
    },
    {
        "line": 85,
        "fullcodeline": "u_i = (int8_t)(-u_i >> 1);"
    },
    {
        "line": 92,
        "fullcodeline": "t = beta[u_i];"
    },
    {
        "line": 93,
        "fullcodeline": "s = gama[u_i];"
    },
    {
        "line": 99,
        "fullcodeline": "bn_add_dig(r0, r0, -t);"
    },
    {
        "line": 105,
        "fullcodeline": "bn_add_dig(r1, r1, -s);"
    },
    {
        "line": 84,
        "fullcodeline": "tnaf[i++] = u_i;"
    },
    {
        "line": 91,
        "fullcodeline": "u_i = (int8_t)(u_i >> 1);"
    },
    {
        "line": 90,
        "fullcodeline": "tnaf[i++] = u_i;"
    }
]