[
    {
        "line": 3,
        "fullcodeline": "int8_t u, naf[RLC_FP_BITS + 2];"
    },
    {
        "line": 4,
        "fullcodeline": "ep_t t[1 << (EP_WIDTH - 2)];"
    },
    {
        "line": 8,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 9,
        "fullcodeline": "bn_null(_k);"
    },
    {
        "line": 12,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 13,
        "fullcodeline": "bn_new(_k);"
    },
    {
        "line": 20,
        "fullcodeline": "ep_curve_get_ord(n);"
    },
    {
        "line": 21,
        "fullcodeline": "bn_mod(_k, k, n);"
    },
    {
        "line": 24,
        "fullcodeline": "ep_tab(t, p, EP_WIDTH);"
    },
    {
        "line": 27,
        "fullcodeline": "l = RLC_FP_BITS + 2;"
    },
    {
        "line": 28,
        "fullcodeline": "bn_rec_naf(naf, &l, _k, EP_WIDTH);"
    },
    {
        "line": 30,
        "fullcodeline": "ep_set_infty(r);"
    },
    {
        "line": 42,
        "fullcodeline": "ep_norm(r, r);"
    },
    {
        "line": 48,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 51,
        "fullcodeline": "bn_free(n);"
    },
    {
        "line": 52,
        "fullcodeline": "bn_free(_k);"
    },
    {
        "line": 15,
        "fullcodeline": "for (int i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (int i = l - 1; i >= 0; i--) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (bn_sign(_k) == RLC_NEG) {"
    },
    {
        "line": 54,
        "fullcodeline": "for (int i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 16,
        "fullcodeline": "ep_null(t[i]);"
    },
    {
        "line": 17,
        "fullcodeline": "ep_new(t[i]);"
    },
    {
        "line": 32,
        "fullcodeline": "ep_dbl(r, r);"
    },
    {
        "line": 34,
        "fullcodeline": "u = naf[i];"
    },
    {
        "line": 44,
        "fullcodeline": "ep_neg(r, r);"
    },
    {
        "line": 55,
        "fullcodeline": "ep_free(t[i]);"
    },
    {
        "line": 35,
        "fullcodeline": "if (u > 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "ep_add(r, r, t[u / 2]);"
    },
    {
        "line": 37,
        "fullcodeline": "} else if (u < 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "ep_sub(r, r, t[-u / 2]);"
    }
]