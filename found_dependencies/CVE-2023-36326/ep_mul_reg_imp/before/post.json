[
    {
        "line": 4,
        "fullcodeline": "int8_t s, reg[1 + RLC_CEIL(RLC_FP_BITS + 1, EP_WIDTH - 1)];"
    },
    {
        "line": 5,
        "fullcodeline": "ep_t t[1 << (EP_WIDTH - 2)], u, v;"
    },
    {
        "line": 12,
        "fullcodeline": "bn_null(_k);"
    },
    {
        "line": 7,
        "fullcodeline": "if (bn_is_zero(k)) {"
    },
    {
        "line": 15,
        "fullcodeline": "bn_new(_k);"
    },
    {
        "line": 16,
        "fullcodeline": "ep_new(u);"
    },
    {
        "line": 17,
        "fullcodeline": "ep_new(v);"
    },
    {
        "line": 24,
        "fullcodeline": "ep_tab(t, p, EP_WIDTH);"
    },
    {
        "line": 26,
        "fullcodeline": "ep_curve_get_ord(_k);"
    },
    {
        "line": 27,
        "fullcodeline": "n = bn_bits(_k);"
    },
    {
        "line": 30,
        "fullcodeline": "bn_abs(_k, k);"
    },
    {
        "line": 31,
        "fullcodeline": "_k->dp[0] |= 1;"
    },
    {
        "line": 34,
        "fullcodeline": "l = RLC_CEIL(n, EP_WIDTH - 1) + 1;"
    },
    {
        "line": 35,
        "fullcodeline": "bn_rec_reg(reg, &l, _k, n, EP_WIDTH);"
    },
    {
        "line": 41,
        "fullcodeline": "u->coord = EP_ADD;"
    },
    {
        "line": 43,
        "fullcodeline": "ep_set_infty(r);"
    },
    {
        "line": 65,
        "fullcodeline": "ep_sub(u, r, t[0]);"
    },
    {
        "line": 66,
        "fullcodeline": "dv_copy_cond(r->x, u->x, RLC_FP_DIGS, bn_is_even(k));"
    },
    {
        "line": 67,
        "fullcodeline": "dv_copy_cond(r->y, u->y, RLC_FP_DIGS, bn_is_even(k));"
    },
    {
        "line": 68,
        "fullcodeline": "dv_copy_cond(r->z, u->z, RLC_FP_DIGS, bn_is_even(k));"
    },
    {
        "line": 70,
        "fullcodeline": "ep_norm(r, r);"
    },
    {
        "line": 71,
        "fullcodeline": "ep_neg(u, r);"
    },
    {
        "line": 72,
        "fullcodeline": "dv_copy_cond(r->y, u->y, RLC_FP_DIGS, bn_sign(k) == RLC_NEG);"
    },
    {
        "line": 75,
        "fullcodeline": "RLC_THROW(ERR_CAUGHT);"
    },
    {
        "line": 82,
        "fullcodeline": "bn_free(_k);"
    },
    {
        "line": 83,
        "fullcodeline": "ep_free(u);"
    },
    {
        "line": 84,
        "fullcodeline": "ep_free(v);"
    },
    {
        "line": 8,
        "fullcodeline": "ep_set_infty(r);"
    },
    {
        "line": 19,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 44,
        "fullcodeline": "for (i = l - 1; i >= 0; i--) {"
    },
    {
        "line": 79,
        "fullcodeline": "for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"
    },
    {
        "line": 20,
        "fullcodeline": "ep_null(t[i]);"
    },
    {
        "line": 21,
        "fullcodeline": "ep_new(t[i]);"
    },
    {
        "line": 49,
        "fullcodeline": "n = reg[i];"
    },
    {
        "line": 50,
        "fullcodeline": "s = (n >> 7);"
    },
    {
        "line": 51,
        "fullcodeline": "n = ((n ^ s) - s) >> 1;"
    },
    {
        "line": 60,
        "fullcodeline": "ep_neg(v, u);"
    },
    {
        "line": 61,
        "fullcodeline": "dv_copy_cond(u->y, v->y, RLC_FP_DIGS, s != 0);"
    },
    {
        "line": 62,
        "fullcodeline": "ep_add(r, r, u);"
    },
    {
        "line": 80,
        "fullcodeline": "ep_free(t[i]);"
    },
    {
        "line": 45,
        "fullcodeline": "for (j = 0; j < EP_WIDTH - 1; j++) {"
    },
    {
        "line": 53,
        "fullcodeline": "for (j = 0; j < (1 << (EP_WIDTH - 2)); j++) {"
    },
    {
        "line": 46,
        "fullcodeline": "ep_dbl(r, r);"
    },
    {
        "line": 54,
        "fullcodeline": "dv_copy_cond(u->x, t[j]->x, RLC_FP_DIGS, j == n);"
    },
    {
        "line": 55,
        "fullcodeline": "dv_copy_cond(u->y, t[j]->y, RLC_FP_DIGS, j == n);"
    },
    {
        "line": 57,
        "fullcodeline": "dv_copy_cond(u->z, t[j]->z, RLC_FP_DIGS, j == n);"
    }
]