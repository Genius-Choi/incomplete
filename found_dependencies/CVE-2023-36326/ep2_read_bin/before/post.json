[
    {
        "line": 17,
        "fullcodeline": "a->coord = BASIC;"
    },
    {
        "line": 18,
        "fullcodeline": "fp2_set_dig(a->z, 1);"
    },
    {
        "line": 19,
        "fullcodeline": "fp2_read_bin(a->x, bin + 1, 2 * RLC_FP_BYTES);"
    },
    {
        "line": 2,
        "fullcodeline": "if (len == 1) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (len != (2 * RLC_FP_BYTES + 1) && len != (4 * RLC_FP_BYTES + 1)) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (len == 2 * RLC_FP_BYTES + 1) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (len == 4 * RLC_FP_BYTES + 1) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (!ep2_on_curve(a)) {"
    },
    {
        "line": 13,
        "fullcodeline": "RLC_THROW(ERR_NO_BUFFER);"
    },
    {
        "line": 34,
        "fullcodeline": "ep2_upk(a, a);"
    },
    {
        "line": 47,
        "fullcodeline": "RLC_THROW(ERR_NO_VALID);"
    },
    {
        "line": 3,
        "fullcodeline": "if (bin[0] == 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (bin[0] == 4) {"
    },
    {
        "line": 4,
        "fullcodeline": "ep2_set_infty(a);"
    },
    {
        "line": 23,
        "fullcodeline": "fp2_zero(a->y);"
    },
    {
        "line": 26,
        "fullcodeline": "fp2_zero(a->y);"
    },
    {
        "line": 27,
        "fullcodeline": "fp_set_bit(a->y[0], 0, 1);"
    },
    {
        "line": 31,
        "fullcodeline": "RLC_THROW(ERR_NO_VALID);"
    },
    {
        "line": 39,
        "fullcodeline": "fp2_read_bin(a->y, bin + 2 * RLC_FP_BYTES + 1, 2 * RLC_FP_BYTES);"
    },
    {
        "line": 7,
        "fullcodeline": "RLC_THROW(ERR_NO_BUFFER);"
    },
    {
        "line": 41,
        "fullcodeline": "RLC_THROW(ERR_NO_VALID);"
    }
]