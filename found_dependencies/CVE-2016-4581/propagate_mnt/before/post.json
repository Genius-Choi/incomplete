[
    {
        "line": 5,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "last_dest = dest_mnt;"
    },
    {
        "line": 14,
        "fullcodeline": "last_source = source_mnt;"
    },
    {
        "line": 15,
        "fullcodeline": "mp = dest_mp;"
    },
    {
        "line": 16,
        "fullcodeline": "list = tree_list;"
    },
    {
        "line": 17,
        "fullcodeline": "dest_master = dest_mnt->mnt_master;"
    },
    {
        "line": 39,
        "fullcodeline": "read_seqlock_excl(&mount_lock);"
    },
    {
        "line": 40,
        "fullcodeline": "hlist_for_each_entry(n, tree_list, mnt_hash) {"
    },
    {
        "line": 45,
        "fullcodeline": "read_sequnlock_excl(&mount_lock);"
    },
    {
        "line": 20,
        "fullcodeline": "for (n = next_peer(dest_mnt); n != dest_mnt; n = next_peer(n)) {"
    },
    {
        "line": 28,
        "fullcodeline": "m = next_group(m, dest_mnt)) {"
    },
    {
        "line": 41,
        "fullcodeline": "m = n->mnt_parent;"
    },
    {
        "line": 21,
        "fullcodeline": "ret = propagate_one(n);"
    },
    {
        "line": 27,
        "fullcodeline": "for (m = next_group(dest_mnt, dest_mnt); m;"
    },
    {
        "line": 30,
        "fullcodeline": "n = m;"
    },
    {
        "line": 42,
        "fullcodeline": "if (m->mnt_master != dest_mnt->mnt_master)"
    },
    {
        "line": 36,
        "fullcodeline": "} while (n != m);"
    },
    {
        "line": 43,
        "fullcodeline": "CLEAR_MNT_MARK(m->mnt_master);"
    },
    {
        "line": 32,
        "fullcodeline": "ret = propagate_one(n);"
    },
    {
        "line": 35,
        "fullcodeline": "n = next_peer(n);"
    }
]