[
    {
        "line": 14,
        "fullcodeline": "n = paddle.arange(0, M, dtype=dtype)"
    },
    {
        "line": 15,
        "fullcodeline": "w = paddle.exp(-paddle.abs(n - center) / tau)"
    },
    {
        "line": 5,
        "fullcodeline": "if sym and center is not None:"
    },
    {
        "line": 7,
        "fullcodeline": "if _len_guards(M):"
    },
    {
        "line": 9,
        "fullcodeline": "M, needs_trunc = _extend(M, sym)"
    },
    {
        "line": 11,
        "fullcodeline": "if center is None:"
    },
    {
        "line": 17,
        "fullcodeline": "return _truncate(w, needs_trunc)"
    },
    {
        "line": 6,
        "fullcodeline": "raise ValueError(\"If sym==True, center must be None.\")"
    },
    {
        "line": 12,
        "fullcodeline": "center = (M - 1) / 2"
    },
    {
        "line": 8,
        "fullcodeline": "return paddle.ones((M,), dtype=dtype)"
    }
]