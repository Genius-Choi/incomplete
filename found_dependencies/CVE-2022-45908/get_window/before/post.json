[
    {
        "line": 29,
        "fullcodeline": "sym = not fftbins"
    },
    {
        "line": 31,
        "fullcodeline": "args = ()"
    },
    {
        "line": 54,
        "fullcodeline": "params = (win_length,) + args"
    },
    {
        "line": 55,
        "fullcodeline": "kwargs = {'sym': sym}"
    },
    {
        "line": 32,
        "fullcodeline": "if isinstance(window, tuple):"
    },
    {
        "line": 56,
        "fullcodeline": "return winfunc(*params, dtype=dtype, **kwargs)"
    },
    {
        "line": 33,
        "fullcodeline": "winstr = window[0]"
    },
    {
        "line": 50,
        "fullcodeline": "winfunc = eval('_' + winstr)"
    },
    {
        "line": 34,
        "fullcodeline": "if len(window) > 1:"
    },
    {
        "line": 36,
        "fullcodeline": "elif isinstance(window, str):"
    },
    {
        "line": 35,
        "fullcodeline": "args = window[1:]"
    },
    {
        "line": 45,
        "fullcodeline": "raise ValueError("
    },
    {
        "line": 52,
        "fullcodeline": "raise ValueError(\"Unknown window type.\") from e"
    },
    {
        "line": 37,
        "fullcodeline": "if window in ['gaussian', 'exponential']:"
    },
    {
        "line": 38,
        "fullcodeline": "raise ValueError("
    },
    {
        "line": 43,
        "fullcodeline": "winstr = window"
    },
    {
        "line": 46,
        "fullcodeline": "\"%s as window type is not supported.\" % str(type(window))"
    },
    {
        "line": 39,
        "fullcodeline": "\"The '\" + window + \"' window needs one or \""
    }
]