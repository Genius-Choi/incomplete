[
    {
        "line": 9,
        "fullcodeline": "fac = paddle.abs(paddle.linspace(-1, 1, M, dtype=dtype)[1:-1])"
    },
    {
        "line": 10,
        "fullcodeline": "w = (1 - fac) * paddle.cos(math.pi * fac) + 1.0 / math.pi * paddle.sin("
    },
    {
        "line": 13,
        "fullcodeline": "w = _cat([0, w, 0], dtype)"
    },
    {
        "line": 5,
        "fullcodeline": "if _len_guards(M):"
    },
    {
        "line": 7,
        "fullcodeline": "M, needs_trunc = _extend(M, sym)"
    },
    {
        "line": 15,
        "fullcodeline": "return _truncate(w, needs_trunc)"
    },
    {
        "line": 6,
        "fullcodeline": "return paddle.ones((M,), dtype=dtype)"
    },
    {
        "line": 11,
        "fullcodeline": "math.pi * fac"
    }
]