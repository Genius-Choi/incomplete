[
    {
        "line": 10,
        "fullcodeline": "fac = paddle.linspace(-math.pi, math.pi, M, dtype=dtype)"
    },
    {
        "line": 11,
        "fullcodeline": "w = paddle.zeros((M,), dtype=dtype)"
    },
    {
        "line": 7,
        "fullcodeline": "if _len_guards(M):"
    },
    {
        "line": 9,
        "fullcodeline": "M, needs_trunc = _extend(M, sym)"
    },
    {
        "line": 12,
        "fullcodeline": "for k in range(len(a)):"
    },
    {
        "line": 14,
        "fullcodeline": "return _truncate(w, needs_trunc)"
    },
    {
        "line": 8,
        "fullcodeline": "return paddle.ones((M,), dtype=dtype)"
    },
    {
        "line": 13,
        "fullcodeline": "w += a[k] * paddle.cos(k * fac)"
    }
]