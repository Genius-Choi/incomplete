[
    {
        "line": 14,
        "fullcodeline": "B = 10 ** (sll / 20)"
    },
    {
        "line": 15,
        "fullcodeline": "A = _acosh(B) / math.pi"
    },
    {
        "line": 16,
        "fullcodeline": "s2 = nbar**2 / (A**2 + (nbar - 0.5) ** 2)"
    },
    {
        "line": 17,
        "fullcodeline": "ma = paddle.arange(1, nbar, dtype=dtype)"
    },
    {
        "line": 19,
        "fullcodeline": "Fm = paddle.empty((nbar - 1,), dtype=dtype)"
    },
    {
        "line": 20,
        "fullcodeline": "signs = paddle.empty_like(ma)"
    },
    {
        "line": 21,
        "fullcodeline": "signs[::2] = 1"
    },
    {
        "line": 22,
        "fullcodeline": "signs[1::2] = -1"
    },
    {
        "line": 23,
        "fullcodeline": "m2 = ma * ma"
    },
    {
        "line": 41,
        "fullcodeline": "def W(n):"
    },
    {
        "line": 47,
        "fullcodeline": "w = W(paddle.arange(0, M, dtype=dtype))"
    },
    {
        "line": 53,
        "fullcodeline": "w = w.squeeze()"
    },
    {
        "line": 8,
        "fullcodeline": "if _len_guards(M):"
    },
    {
        "line": 10,
        "fullcodeline": "M, needs_trunc = _extend(M, sym)"
    },
    {
        "line": 24,
        "fullcodeline": "for mi in range(len(ma)):"
    },
    {
        "line": 54,
        "fullcodeline": "return _truncate(w, needs_trunc)"
    },
    {
        "line": 51,
        "fullcodeline": "scale = 1.0 / W((M - 1) / 2)"
    },
    {
        "line": 52,
        "fullcodeline": "w *= scale"
    },
    {
        "line": 9,
        "fullcodeline": "return paddle.ones((M,), dtype=dtype)"
    },
    {
        "line": 25,
        "fullcodeline": "numer = signs[mi] * paddle.prod("
    },
    {
        "line": 39,
        "fullcodeline": "Fm[mi] = numer / denom"
    },
    {
        "line": 28,
        "fullcodeline": "if mi == 0:"
    },
    {
        "line": 29,
        "fullcodeline": "denom = 2 * paddle.prod(1 - m2[mi] / m2[mi + 1 :])"
    },
    {
        "line": 26,
        "fullcodeline": "1 - m2[mi] / s2 / (A**2 + (ma - 0.5) ** 2)"
    },
    {
        "line": 30,
        "fullcodeline": "elif mi == len(ma) - 1:"
    },
    {
        "line": 31,
        "fullcodeline": "denom = 2 * paddle.prod(1 - m2[mi] / m2[:mi])"
    },
    {
        "line": 33,
        "fullcodeline": "denom = ("
    },
    {
        "line": 34,
        "fullcodeline": "2"
    },
    {
        "line": 36,
        "fullcodeline": "* paddle.prod(1 - m2[mi] / m2[mi + 1 :])"
    },
    {
        "line": 35,
        "fullcodeline": "* paddle.prod(1 - m2[mi] / m2[:mi])"
    }
]