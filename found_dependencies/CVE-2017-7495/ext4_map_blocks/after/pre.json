[
    {
        "line": 6,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "map->m_flags = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "ext_debug(\"ext4_map_blocks(): inode %lu, flag %d, max_blocks %u,\""
    },
    {
        "line": 60,
        "fullcodeline": "down_read(&EXT4_I(inode)->i_data_sem);"
    },
    {
        "line": 91,
        "fullcodeline": "up_read((&EXT4_I(inode)->i_data_sem));"
    },
    {
        "line": 124,
        "fullcodeline": "map->m_flags &= ~EXT4_MAP_FLAGS;"
    },
    {
        "line": 132,
        "fullcodeline": "down_write(&EXT4_I(inode)->i_data_sem);"
    },
    {
        "line": 21,
        "fullcodeline": "if (unlikely(map->m_len > INT_MAX))"
    },
    {
        "line": 25,
        "fullcodeline": "if (unlikely(map->m_lblk >= EXT_MAX_BLOCKS))"
    },
    {
        "line": 29,
        "fullcodeline": "if (ext4_es_lookup_extent(inode, map->m_lblk, &es)) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS)) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (retval > 0) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (retval > 0 && map->m_flags & EXT4_MAP_MAPPED) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (retval > 0 && map->m_flags & EXT4_MAP_MAPPED)"
    },
    {
        "line": 138,
        "fullcodeline": "if (ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS)) {"
    },
    {
        "line": 163,
        "fullcodeline": "if (retval > 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "map->m_len = INT_MAX;"
    },
    {
        "line": 62,
        "fullcodeline": "retval = ext4_ext_map_blocks(handle, inode, map, flags &"
    },
    {
        "line": 79,
        "fullcodeline": "status = map->m_flags & EXT4_MAP_UNWRITTEN ?"
    },
    {
        "line": 86,
        "fullcodeline": "ret = ext4_es_insert_extent(inode, map->m_lblk,"
    },
    {
        "line": 95,
        "fullcodeline": "ret = check_block_validity(inode, map);"
    },
    {
        "line": 101,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_CREATE) == 0)"
    },
    {
        "line": 139,
        "fullcodeline": "retval = ext4_ext_map_blocks(handle, inode, map, flags);"
    },
    {
        "line": 199,
        "fullcodeline": "status = map->m_flags & EXT4_MAP_UNWRITTEN ?"
    },
    {
        "line": 206,
        "fullcodeline": "ret = ext4_es_insert_extent(inode, map->m_lblk, map->m_len,"
    },
    {
        "line": 216,
        "fullcodeline": "if (retval > 0 && map->m_flags & EXT4_MAP_MAPPED) {"
    },
    {
        "line": 217,
        "fullcodeline": "ret = check_block_validity(inode, map);"
    },
    {
        "line": 26,
        "fullcodeline": "return -EFSCORRUPTED;"
    },
    {
        "line": 65,
        "fullcodeline": "retval = ext4_ind_map_blocks(handle, inode, map, flags &"
    },
    {
        "line": 81,
        "fullcodeline": "if (!(flags & EXT4_GET_BLOCKS_DELALLOC_RESERVE) &&"
    },
    {
        "line": 88,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 96,
        "fullcodeline": "if (ret != 0)"
    },
    {
        "line": 141,
        "fullcodeline": "retval = ext4_ind_map_blocks(handle, inode, map, flags);"
    },
    {
        "line": 208,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 215,
        "fullcodeline": "up_write((&EXT4_I(inode)->i_data_sem));"
    },
    {
        "line": 218,
        "fullcodeline": "if (ret != 0)"
    },
    {
        "line": 30,
        "fullcodeline": "if (ext4_es_is_written(&es) || ext4_es_is_unwritten(&es)) {"
    },
    {
        "line": 31,
        "fullcodeline": "map->m_pblk = ext4_es_pblock(&es) +"
    },
    {
        "line": 33,
        "fullcodeline": "map->m_flags |= ext4_es_is_written(&es) ?"
    },
    {
        "line": 35,
        "fullcodeline": "retval = es.es_len - (map->m_lblk - es.es_lblk);"
    },
    {
        "line": 38,
        "fullcodeline": "map->m_len = retval;"
    },
    {
        "line": 71,
        "fullcodeline": "if (unlikely(retval != map->m_len)) {"
    },
    {
        "line": 72,
        "fullcodeline": "ext4_warning(inode->i_sb,"
    },
    {
        "line": 83,
        "fullcodeline": "ext4_find_delalloc_range(inode, map->m_lblk,"
    },
    {
        "line": 85,
        "fullcodeline": "status |= EXTENT_STATUS_DELAYED;"
    },
    {
        "line": 89,
        "fullcodeline": "retval = ret;"
    },
    {
        "line": 117,
        "fullcodeline": "if (!(flags & EXT4_GET_BLOCKS_CONVERT_UNWRITTEN))"
    },
    {
        "line": 143,
        "fullcodeline": "if (retval > 0 && map->m_flags & EXT4_MAP_NEW) {"
    },
    {
        "line": 166,
        "fullcodeline": "if (unlikely(retval != map->m_len)) {"
    },
    {
        "line": 167,
        "fullcodeline": "ext4_warning(inode->i_sb,"
    },
    {
        "line": 179,
        "fullcodeline": "if (flags & EXT4_GET_BLOCKS_ZERO &&"
    },
    {
        "line": 181,
        "fullcodeline": "map->m_flags & EXT4_MAP_NEW) {"
    },
    {
        "line": 182,
        "fullcodeline": "ret = ext4_issue_zeroout(inode, map->m_lblk,"
    },
    {
        "line": 194,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_PRE_IO) &&"
    },
    {
        "line": 195,
        "fullcodeline": "ext4_es_lookup_extent(inode, map->m_lblk, &es)) {"
    },
    {
        "line": 201,
        "fullcodeline": "if (!(flags & EXT4_GET_BLOCKS_DELALLOC_RESERVE) &&"
    },
    {
        "line": 203,
        "fullcodeline": "ext4_find_delalloc_range(inode, map->m_lblk,"
    },
    {
        "line": 205,
        "fullcodeline": "status |= EXTENT_STATUS_DELAYED;"
    },
    {
        "line": 209,
        "fullcodeline": "retval = ret;"
    },
    {
        "line": 226,
        "fullcodeline": "if (map->m_flags & EXT4_MAP_NEW &&"
    },
    {
        "line": 230,
        "fullcodeline": "ext4_should_order_data(inode)) {"
    },
    {
        "line": 231,
        "fullcodeline": "ret = ext4_jbd2_file_inode(handle, inode);"
    },
    {
        "line": 36,
        "fullcodeline": "if (retval > map->m_len)"
    },
    {
        "line": 82,
        "fullcodeline": "!(status & EXTENT_STATUS_WRITTEN) &&"
    },
    {
        "line": 84,
        "fullcodeline": "map->m_lblk + map->m_len - 1))"
    },
    {
        "line": 149,
        "fullcodeline": "ext4_clear_inode_state(inode, EXT4_STATE_EXT_MIGRATE);"
    },
    {
        "line": 158,
        "fullcodeline": "if ((retval > 0) &&"
    },
    {
        "line": 159,
        "fullcodeline": "(flags & EXT4_GET_BLOCKS_DELALLOC_RESERVE))"
    },
    {
        "line": 160,
        "fullcodeline": "ext4_da_update_reserve_space(inode, retval, 1);"
    },
    {
        "line": 180,
        "fullcodeline": "map->m_flags & EXT4_MAP_MAPPED &&"
    },
    {
        "line": 202,
        "fullcodeline": "!(status & EXTENT_STATUS_WRITTEN) &&"
    },
    {
        "line": 204,
        "fullcodeline": "map->m_lblk + map->m_len - 1))"
    },
    {
        "line": 229,
        "fullcodeline": "!IS_NOQUOTA(inode) &&"
    },
    {
        "line": 37,
        "fullcodeline": "retval = map->m_len;"
    },
    {
        "line": 185,
        "fullcodeline": "retval = ret;"
    },
    {
        "line": 228,
        "fullcodeline": "!(flags & EXT4_GET_BLOCKS_ZERO) &&"
    },
    {
        "line": 39,
        "fullcodeline": "} else if (ext4_es_is_delayed(&es) || ext4_es_is_hole(&es)) {"
    },
    {
        "line": 40,
        "fullcodeline": "map->m_pblk = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "retval = es.es_len - (map->m_lblk - es.es_lblk);"
    },
    {
        "line": 44,
        "fullcodeline": "map->m_len = retval;"
    },
    {
        "line": 45,
        "fullcodeline": "retval = 0;"
    },
    {
        "line": 227,
        "fullcodeline": "!(map->m_flags & EXT4_MAP_UNWRITTEN) &&"
    },
    {
        "line": 42,
        "fullcodeline": "if (retval > map->m_len)"
    },
    {
        "line": 43,
        "fullcodeline": "retval = map->m_len;"
    }
]