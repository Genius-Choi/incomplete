[
    {
        "line": 3,
        "fullcodeline": "int opt, timeout = 1800, family = AF_UNSPEC, hashlength = 0, hashmin = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "int daemonize = FALSE, always_rewrite = FALSE;"
    },
    {
        "line": 5,
        "fullcodeline": "char *listen_addr = NULL, *forward_service = NULL, *reverse_service = NULL,"
    },
    {
        "line": 6,
        "fullcodeline": "*user = NULL, *domain = NULL, *chroot_dir = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "char separator = '=';"
    },
    {
        "line": 8,
        "fullcodeline": "char *secret_file = NULL, *pid_file = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "FILE *pf = NULL, *sf = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "struct passwd *pwd = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "char secretbuf[1024], *secret = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "size_t s1 = 0, s2 = 1;"
    },
    {
        "line": 17,
        "fullcodeline": "struct pollfd fds[4];"
    },
    {
        "line": 18,
        "fullcodeline": "size_t socket_count = 0, sc;"
    },
    {
        "line": 19,
        "fullcodeline": "int sockets[4] = {-1, -1, -1, -1};"
    },
    {
        "line": 20,
        "fullcodeline": "handle_t handler[4] = {0, 0, 0, 0};"
    },
    {
        "line": 23,
        "fullcodeline": "excludes = (const char **)calloc(1, sizeof(char *));"
    },
    {
        "line": 24,
        "fullcodeline": "tmp = strrchr(argv[0], '/');"
    },
    {
        "line": 185,
        "fullcodeline": "maxfd = sysconf(_SC_OPEN_MAX);"
    },
    {
        "line": 220,
        "fullcodeline": "sc = bind_service(listen_addr, forward_service, family,"
    },
    {
        "line": 227,
        "fullcodeline": "sc = bind_service(listen_addr, reverse_service, family,"
    },
    {
        "line": 236,
        "fullcodeline": "openlog(self, LOG_PID | LOG_NDELAY, LOG_MAIL);"
    },
    {
        "line": 238,
        "fullcodeline": "now = time(NULL);"
    },
    {
        "line": 308,
        "fullcodeline": "srs = srs_new();"
    },
    {
        "line": 317,
        "fullcodeline": "srs_set_alwaysrewrite(srs, always_rewrite);"
    },
    {
        "line": 318,
        "fullcodeline": "srs_set_separator(srs, separator);"
    },
    {
        "line": 30,
        "fullcodeline": "while ((opt = getopt(argc, argv, \"46d:a:l:f:r:s:n:N:u:t:p:c:X::ADhev\"))"
    },
    {
        "line": 179,
        "fullcodeline": "if (forward_service == NULL)"
    },
    {
        "line": 181,
        "fullcodeline": "if (reverse_service == NULL)"
    },
    {
        "line": 186,
        "fullcodeline": "for (fd = 3; fd < maxfd; fd++)"
    },
    {
        "line": 187,
        "fullcodeline": "close(fd);"
    },
    {
        "line": 203,
        "fullcodeline": "if (secret_file != NULL)"
    },
    {
        "line": 222,
        "fullcodeline": "if (sc == 0)"
    },
    {
        "line": 225,
        "fullcodeline": "handler[socket_count++] = handle_forward;"
    },
    {
        "line": 229,
        "fullcodeline": "if (sc == 0)"
    },
    {
        "line": 232,
        "fullcodeline": "handler[socket_count++] = handle_reverse;"
    },
    {
        "line": 309,
        "fullcodeline": "while ((secret = fgets(secretbuf, sizeof(secretbuf), sf)))"
    },
    {
        "line": 324,
        "fullcodeline": "for (sc = 0; sc < socket_count; ++sc)"
    },
    {
        "line": 26,
        "fullcodeline": "self = strdup(tmp + 1);"
    },
    {
        "line": 31,
        "fullcodeline": "!= -1)"
    },
    {
        "line": 167,
        "fullcodeline": "if (domain == NULL || *domain == 0)"
    },
    {
        "line": 173,
        "fullcodeline": "if (separator != '=' && separator != '+' && separator != '-')"
    },
    {
        "line": 180,
        "fullcodeline": "forward_service = strdup(\"10001\");"
    },
    {
        "line": 182,
        "fullcodeline": "reverse_service = strdup(\"10002\");"
    },
    {
        "line": 195,
        "fullcodeline": "pf = fopen(pid_file, \"w\");"
    },
    {
        "line": 205,
        "fullcodeline": "sf = fopen(secret_file, \"rb\");"
    },
    {
        "line": 221,
        "fullcodeline": "&sockets[socket_count], 4 - socket_count);"
    },
    {
        "line": 224,
        "fullcodeline": "while (sc-- > 0)"
    },
    {
        "line": 228,
        "fullcodeline": "&sockets[socket_count], 4 - socket_count);"
    },
    {
        "line": 231,
        "fullcodeline": "while (sc-- > 0)"
    },
    {
        "line": 244,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 245,
        "fullcodeline": "pwd = getpwnam(user);"
    },
    {
        "line": 304,
        "fullcodeline": "fprintf(pf, \"%d\", (int)getpid());"
    },
    {
        "line": 311,
        "fullcodeline": "secret = strtok(secret, \"\\r\\n\");"
    },
    {
        "line": 320,
        "fullcodeline": "srs_set_hashlength(srs, hashlength);"
    },
    {
        "line": 322,
        "fullcodeline": "srs_set_hashmin(srs, hashmin);"
    },
    {
        "line": 407,
        "fullcodeline": "waitpid(-1, NULL, WNOHANG);"
    },
    {
        "line": 28,
        "fullcodeline": "self = strdup(argv[0]);"
    },
    {
        "line": 196,
        "fullcodeline": "if (pf == NULL)"
    },
    {
        "line": 206,
        "fullcodeline": "if (sf == NULL)"
    },
    {
        "line": 246,
        "fullcodeline": "if (pwd == NULL)"
    },
    {
        "line": 333,
        "fullcodeline": "char linebuf[1024], *line;"
    },
    {
        "line": 334,
        "fullcodeline": "char keybuf[1024], *key;"
    },
    {
        "line": 347,
        "fullcodeline": "for (sc = 0; sc < socket_count; ++sc)"
    },
    {
        "line": 38,
        "fullcodeline": "family = AF_INET;"
    },
    {
        "line": 41,
        "fullcodeline": "family = AF_INET6;"
    },
    {
        "line": 44,
        "fullcodeline": "domain = strdup(optarg);"
    },
    {
        "line": 47,
        "fullcodeline": "separator = *optarg;"
    },
    {
        "line": 50,
        "fullcodeline": "listen_addr = strdup(optarg);"
    },
    {
        "line": 53,
        "fullcodeline": "forward_service = strdup(optarg);"
    },
    {
        "line": 56,
        "fullcodeline": "reverse_service = strdup(optarg);"
    },
    {
        "line": 59,
        "fullcodeline": "timeout = atoi(optarg);"
    },
    {
        "line": 62,
        "fullcodeline": "secret_file = strdup(optarg);"
    },
    {
        "line": 65,
        "fullcodeline": "hashlength = atoi(optarg);"
    },
    {
        "line": 68,
        "fullcodeline": "hashmin = atoi(optarg);"
    },
    {
        "line": 71,
        "fullcodeline": "pid_file = strdup(optarg);"
    },
    {
        "line": 74,
        "fullcodeline": "user = strdup(optarg);"
    },
    {
        "line": 77,
        "fullcodeline": "chroot_dir = strdup(optarg);"
    },
    {
        "line": 80,
        "fullcodeline": "daemonize = TRUE;"
    },
    {
        "line": 83,
        "fullcodeline": "always_rewrite = TRUE;"
    },
    {
        "line": 157,
        "fullcodeline": "fprintf(stdout, \"%s\\n\", POSTSRSD_VERSION);"
    },
    {
        "line": 259,
        "fullcodeline": "if (chdir(chroot_dir) < 0)"
    },
    {
        "line": 265,
        "fullcodeline": "if (chroot(chroot_dir) < 0)"
    },
    {
        "line": 275,
        "fullcodeline": "if (setgid(pwd->pw_gid) < 0)"
    },
    {
        "line": 281,
        "fullcodeline": "if (setuid(pwd->pw_uid) < 0)"
    },
    {
        "line": 313,
        "fullcodeline": "srs_add_secret(srs, secret);"
    },
    {
        "line": 336,
        "fullcodeline": "if (poll(fds, socket_count, 1000) < 0)"
    },
    {
        "line": 89,
        "fullcodeline": "if (optarg != NULL)"
    },
    {
        "line": 112,
        "fullcodeline": "if (getenv(\"SRS_DOMAIN\") != NULL)"
    },
    {
        "line": 114,
        "fullcodeline": "if (getenv(\"SRS_SEPARATOR\") != NULL)"
    },
    {
        "line": 116,
        "fullcodeline": "if (getenv(\"SRS_HASHLENGTH\") != NULL)"
    },
    {
        "line": 118,
        "fullcodeline": "if (getenv(\"SRS_HASHMIN\") != NULL)"
    },
    {
        "line": 120,
        "fullcodeline": "if (getenv(\"SRS_FORWARD_PORT\") != NULL)"
    },
    {
        "line": 122,
        "fullcodeline": "if (getenv(\"SRS_REVERSE_PORT\") != NULL)"
    },
    {
        "line": 124,
        "fullcodeline": "if (getenv(\"SRS_TIMEOUT\") != NULL)"
    },
    {
        "line": 126,
        "fullcodeline": "if (getenv(\"SRS_SECRET\") != NULL)"
    },
    {
        "line": 128,
        "fullcodeline": "if (getenv(\"SRS_PID_FILE\") != NULL)"
    },
    {
        "line": 130,
        "fullcodeline": "if (getenv(\"RUN_AS\") != NULL)"
    },
    {
        "line": 132,
        "fullcodeline": "if (getenv(\"CHROOT\") != NULL)"
    },
    {
        "line": 134,
        "fullcodeline": "if (getenv(\"SRS_EXCLUDE_DOMAINS\") != NULL)"
    },
    {
        "line": 248,
        "fullcodeline": "if (errno != 0)"
    },
    {
        "line": 262,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 268,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 278,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 284,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 338,
        "fullcodeline": "if (errno == EINTR)"
    },
    {
        "line": 91,
        "fullcodeline": "tmp = strtok(optarg, \",; \\t\\r\\n\");"
    },
    {
        "line": 108,
        "fullcodeline": "excludes[s1] = NULL;"
    },
    {
        "line": 113,
        "fullcodeline": "domain = strdup(getenv(\"SRS_DOMAIN\"));"
    },
    {
        "line": 115,
        "fullcodeline": "separator = *getenv(\"SRS_SEPARATOR\");"
    },
    {
        "line": 117,
        "fullcodeline": "hashlength = atoi(getenv(\"SRS_HASHLENGTH\"));"
    },
    {
        "line": 119,
        "fullcodeline": "hashmin = atoi(getenv(\"SRS_HASHMIN\"));"
    },
    {
        "line": 121,
        "fullcodeline": "forward_service = strdup(getenv(\"SRS_FORWARD_PORT\"));"
    },
    {
        "line": 123,
        "fullcodeline": "reverse_service = strdup(getenv(\"SRS_REVERSE_PORT\"));"
    },
    {
        "line": 125,
        "fullcodeline": "timeout = atoi(getenv(\"SRS_TIMEOUT\"));"
    },
    {
        "line": 127,
        "fullcodeline": "secret_file = strdup(getenv(\"SRS_SECRET\"));"
    },
    {
        "line": 129,
        "fullcodeline": "pid_file = strdup(getenv(\"SRS_PID_FILE\"));"
    },
    {
        "line": 131,
        "fullcodeline": "user = strdup(getenv(\"RUN_AS\"));"
    },
    {
        "line": 133,
        "fullcodeline": "chroot_dir = strdup(getenv(\"CHROOT\"));"
    },
    {
        "line": 136,
        "fullcodeline": "tmp = strtok(getenv(\"SRS_EXCLUDE_DOMAINS\"), \",; \\t\\r\\n\");"
    },
    {
        "line": 153,
        "fullcodeline": "excludes[s1] = NULL;"
    },
    {
        "line": 351,
        "fullcodeline": "conn = accept(fds[sc].fd, NULL, NULL);"
    },
    {
        "line": 250,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 341,
        "fullcodeline": "syslog(LOG_MAIL | LOG_ERR, \"Poll failure: %s\", strerror(errno));"
    },
    {
        "line": 352,
        "fullcodeline": "if (conn < 0)"
    },
    {
        "line": 105,
        "fullcodeline": "excludes[s1++] = strdup(tmp);"
    },
    {
        "line": 106,
        "fullcodeline": "tmp = strtok(NULL, \",; \\t\\r\\n\");"
    },
    {
        "line": 150,
        "fullcodeline": "excludes[s1++] = strdup(tmp);"
    },
    {
        "line": 151,
        "fullcodeline": "tmp = strtok(NULL, \",; \\t\\r\\n\");"
    },
    {
        "line": 344,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 362,
        "fullcodeline": "fp = fdopen(conn, \"r+\");"
    },
    {
        "line": 369,
        "fullcodeline": "line = fgets(linebuf, sizeof(linebuf), fp);"
    },
    {
        "line": 94,
        "fullcodeline": "if (s1 + 1 >= s2)"
    },
    {
        "line": 139,
        "fullcodeline": "if (s1 + 1 >= s2)"
    },
    {
        "line": 359,
        "fullcodeline": "for (i = 0; i < socket_count; ++i)"
    },
    {
        "line": 363,
        "fullcodeline": "if (fp == NULL)"
    },
    {
        "line": 96,
        "fullcodeline": "s2 *= 2;"
    },
    {
        "line": 97,
        "fullcodeline": "excludes = (const char **)realloc("
    },
    {
        "line": 141,
        "fullcodeline": "s2 *= 2;"
    },
    {
        "line": 142,
        "fullcodeline": "excludes = (const char **)realloc("
    },
    {
        "line": 364,
        "fullcodeline": "exit(EXIT_FAILURE);"
    },
    {
        "line": 367,
        "fullcodeline": "if (poll(fds, 1, timeout * 1000) <= 0)"
    },
    {
        "line": 372,
        "fullcodeline": "fseek(fp, 0, SEEK_CUR); /* Workaround for Solaris */"
    },
    {
        "line": 374,
        "fullcodeline": "token = strtok(line, \" \\r\\n\");"
    },
    {
        "line": 381,
        "fullcodeline": "token = strtok(NULL, \"\\r\\n\");"
    },
    {
        "line": 388,
        "fullcodeline": "key = url_decode(keybuf, sizeof(keybuf), token);"
    },
    {
        "line": 395,
        "fullcodeline": "handler[sc](srs, fp, key, domain, excludes);"
    },
    {
        "line": 396,
        "fullcodeline": "fflush(fp);"
    },
    {
        "line": 399,
        "fullcodeline": "line = fgets(linebuf, sizeof(linebuf), fp);"
    },
    {
        "line": 99,
        "fullcodeline": "if (excludes == NULL)"
    },
    {
        "line": 144,
        "fullcodeline": "if (excludes == NULL)"
    },
    {
        "line": 382,
        "fullcodeline": "if (!token)"
    },
    {
        "line": 389,
        "fullcodeline": "if (!key)"
    },
    {
        "line": 375,
        "fullcodeline": "if (token == NULL || strcmp(token, \"get\") != 0)"
    },
    {
        "line": 377,
        "fullcodeline": "fprintf(fp, \"500 Invalid request\\n\");"
    },
    {
        "line": 384,
        "fullcodeline": "fprintf(fp, \"500 Invalid request\\n\");"
    },
    {
        "line": 391,
        "fullcodeline": "fprintf(fp, \"500 Invalid request\\n\");"
    },
    {
        "line": 397,
        "fullcodeline": "if (poll(fds, 1, timeout * 1000) <= 0)"
    },
    {
        "line": 98,
        "fullcodeline": "excludes, s2 * sizeof(char *));"
    },
    {
        "line": 143,
        "fullcodeline": "excludes, s2 * sizeof(char *));"
    }
]