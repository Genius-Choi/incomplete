[
    {
        "line": 4,
        "fullcodeline": "struct msghdr msg = { };"
    },
    {
        "line": 6,
        "fullcodeline": "struct iovec iov[1] = { };"
    },
    {
        "line": 7,
        "fullcodeline": "char null_byte = '\\0';"
    },
    {
        "line": 9,
        "fullcodeline": "iov[0].iov_base = &null_byte;"
    },
    {
        "line": 10,
        "fullcodeline": "iov[0].iov_len = 1;"
    },
    {
        "line": 12,
        "fullcodeline": "msg.msg_iov = iov;"
    },
    {
        "line": 13,
        "fullcodeline": "msg.msg_iovlen = 1;"
    },
    {
        "line": 17,
        "fullcodeline": "msg.msg_controllen = CMSG_SPACE(sizeof(int));"
    },
    {
        "line": 18,
        "fullcodeline": "msg.msg_control = malloc(msg.msg_controllen);"
    },
    {
        "line": 23,
        "fullcodeline": "memset(msg.msg_control, 0, msg.msg_controllen);"
    },
    {
        "line": 25,
        "fullcodeline": "cmsg = CMSG_FIRSTHDR(&msg);"
    },
    {
        "line": 26,
        "fullcodeline": "cmsg->cmsg_level = SOL_SOCKET;"
    },
    {
        "line": 27,
        "fullcodeline": "cmsg->cmsg_type = SCM_RIGHTS;"
    },
    {
        "line": 28,
        "fullcodeline": "cmsg->cmsg_len = CMSG_LEN(sizeof(int));"
    },
    {
        "line": 29,
        "fullcodeline": "memcpy(CMSG_DATA(cmsg), &fd, sizeof(int));"
    },
    {
        "line": 31,
        "fullcodeline": "bytes_written = sendmsg(sockfd, &msg, 0);"
    },
    {
        "line": 33,
        "fullcodeline": "free(msg.msg_control);"
    },
    {
        "line": 19,
        "fullcodeline": "if (msg.msg_control == NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (bytes_written != 1)"
    },
    {
        "line": 20,
        "fullcodeline": "bail(\"Can't allocate memory to send fd.\");"
    },
    {
        "line": 36,
        "fullcodeline": "bail(\"failed to send fd %d via unix socket %d\", fd, sockfd);"
    }
]