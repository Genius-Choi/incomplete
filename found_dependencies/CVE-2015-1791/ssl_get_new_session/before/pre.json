[
    {
        "line": 6,
        "fullcodeline": "SSL_SESSION *ss = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "GEN_SESSION_CB cb = def_generate_session_id;"
    },
    {
        "line": 19,
        "fullcodeline": "s->session = NULL;"
    },
    {
        "line": 123,
        "fullcodeline": "memcpy(ss->sid_ctx, s->sid_ctx, s->sid_ctx_length);"
    },
    {
        "line": 124,
        "fullcodeline": "ss->sid_ctx_length = s->sid_ctx_length;"
    },
    {
        "line": 127,
        "fullcodeline": "ss->verify_result = X509_V_OK;"
    },
    {
        "line": 9,
        "fullcodeline": "if ((ss = SSL_SESSION_new()) == NULL)"
    },
    {
        "line": 13,
        "fullcodeline": "if (s->session_ctx->session_timeout == 0)"
    },
    {
        "line": 118,
        "fullcodeline": "if (s->sid_ctx_length > sizeof ss->sid_ctx) {"
    },
    {
        "line": 14,
        "fullcodeline": "ss->timeout = SSL_get_default_timeout(s);"
    },
    {
        "line": 70,
        "fullcodeline": "CRYPTO_r_lock(CRYPTO_LOCK_SSL_CTX);"
    },
    {
        "line": 77,
        "fullcodeline": "tmp = ss->session_id_length;"
    },
    {
        "line": 96,
        "fullcodeline": "ss->session_id_length = tmp;"
    },
    {
        "line": 16,
        "fullcodeline": "ss->timeout = s->session_ctx->session_timeout;"
    },
    {
        "line": 22,
        "fullcodeline": "if (s->version == SSL3_VERSION) {"
    },
    {
        "line": 98,
        "fullcodeline": "if (SSL_has_matching_session_id(s, ss->session_id,"
    },
    {
        "line": 115,
        "fullcodeline": "ss->session_id_length = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "ss->ssl_version = SSL3_VERSION;"
    },
    {
        "line": 24,
        "fullcodeline": "ss->session_id_length = SSL3_SSL_SESSION_ID_LENGTH;"
    },
    {
        "line": 65,
        "fullcodeline": "ss->session_id_length = 0;"
    },
    {
        "line": 78,
        "fullcodeline": "if (!cb(s, ss->session_id, &tmp)) {"
    },
    {
        "line": 80,
        "fullcodeline": "SSLerr(SSL_F_SSL_GET_NEW_SESSION,"
    },
    {
        "line": 89,
        "fullcodeline": "if (!tmp || (tmp > ss->session_id_length)) {"
    },
    {
        "line": 91,
        "fullcodeline": "SSLerr(SSL_F_SSL_GET_NEW_SESSION,"
    },
    {
        "line": 100,
        "fullcodeline": "SSLerr(SSL_F_SSL_GET_NEW_SESSION, SSL_R_SSL_SESSION_ID_CONFLICT);"
    },
    {
        "line": 107,
        "fullcodeline": "ss->tlsext_hostname = BUF_strdup(s->tlsext_hostname);"
    },
    {
        "line": 108,
        "fullcodeline": "if (ss->tlsext_hostname == NULL) {"
    },
    {
        "line": 25,
        "fullcodeline": "} else if (s->version == TLS1_VERSION) {"
    },
    {
        "line": 26,
        "fullcodeline": "ss->ssl_version = TLS1_VERSION;"
    },
    {
        "line": 27,
        "fullcodeline": "ss->session_id_length = SSL3_SSL_SESSION_ID_LENGTH;"
    },
    {
        "line": 28,
        "fullcodeline": "} else if (s->version == TLS1_1_VERSION) {"
    },
    {
        "line": 29,
        "fullcodeline": "ss->ssl_version = TLS1_1_VERSION;"
    },
    {
        "line": 30,
        "fullcodeline": "ss->session_id_length = SSL3_SSL_SESSION_ID_LENGTH;"
    },
    {
        "line": 31,
        "fullcodeline": "} else if (s->version == TLS1_2_VERSION) {"
    },
    {
        "line": 32,
        "fullcodeline": "ss->ssl_version = TLS1_2_VERSION;"
    },
    {
        "line": 33,
        "fullcodeline": "ss->session_id_length = SSL3_SSL_SESSION_ID_LENGTH;"
    },
    {
        "line": 34,
        "fullcodeline": "} else if (s->version == DTLS1_BAD_VER) {"
    },
    {
        "line": 35,
        "fullcodeline": "ss->ssl_version = DTLS1_BAD_VER;"
    },
    {
        "line": 36,
        "fullcodeline": "ss->session_id_length = SSL3_SSL_SESSION_ID_LENGTH;"
    },
    {
        "line": 37,
        "fullcodeline": "} else if (s->version == DTLS1_VERSION) {"
    },
    {
        "line": 38,
        "fullcodeline": "ss->ssl_version = DTLS1_VERSION;"
    },
    {
        "line": 39,
        "fullcodeline": "ss->session_id_length = SSL3_SSL_SESSION_ID_LENGTH;"
    },
    {
        "line": 40,
        "fullcodeline": "} else if (s->version == DTLS1_2_VERSION) {"
    },
    {
        "line": 41,
        "fullcodeline": "ss->ssl_version = DTLS1_2_VERSION;"
    },
    {
        "line": 42,
        "fullcodeline": "ss->session_id_length = SSL3_SSL_SESSION_ID_LENGTH;"
    },
    {
        "line": 44,
        "fullcodeline": "SSLerr(SSL_F_SSL_GET_NEW_SESSION, SSL_R_UNSUPPORTED_SSL_VERSION);"
    }
]