[
    {
        "line": 3,
        "fullcodeline": "os_ptr op = osp;"
    },
    {
        "line": 4,
        "fullcodeline": "os_ptr op1 = op - 1;"
    },
    {
        "line": 5,
        "fullcodeline": "uint size = r_size(op);"
    },
    {
        "line": 10,
        "fullcodeline": "int incr = forward ? 1 : -1;"
    },
    {
        "line": 12,
        "fullcodeline": "check_read_type(*op1, t_string);"
    },
    {
        "line": 13,
        "fullcodeline": "check_read_type(*op, t_string);"
    },
    {
        "line": 18,
        "fullcodeline": "count = r_size(op1) - size;"
    },
    {
        "line": 19,
        "fullcodeline": "ptr = op1->value.bytes;"
    },
    {
        "line": 24,
        "fullcodeline": "pat = op->value.bytes;"
    },
    {
        "line": 25,
        "fullcodeline": "ch = pat[0];"
    },
    {
        "line": 40,
        "fullcodeline": "op[-1] = *op1;\t\t\t\t\t/* pre */"
    },
    {
        "line": 14,
        "fullcodeline": "if (size > r_size(op1)) {\t/* can't match */"
    },
    {
        "line": 20,
        "fullcodeline": "if (size == 0)"
    },
    {
        "line": 31,
        "fullcodeline": "while (count--);"
    },
    {
        "line": 15,
        "fullcodeline": "make_false(op);"
    },
    {
        "line": 23,
        "fullcodeline": "ptr += count;"
    },
    {
        "line": 29,
        "fullcodeline": "ptr += incr;"
    },
    {
        "line": 43,
        "fullcodeline": "op[-1].tas.rsize = ptr - op[-1].value.bytes;\t/* pre */"
    },
    {
        "line": 27,
        "fullcodeline": "if (*ptr == ch && (size == 1 || !memcmp(ptr, pat, size)))"
    }
]