[
    {
        "line": 7,
        "fullcodeline": "const struct xt_tcpmss_info *info = par->targinfo;"
    },
    {
        "line": 22,
        "fullcodeline": "len = skb->len - tcphoff;"
    },
    {
        "line": 26,
        "fullcodeline": "tcph = (struct tcphdr *)(skb_network_header(skb) + tcphoff);"
    },
    {
        "line": 27,
        "fullcodeline": "tcp_hdrlen = tcph->doff * 4;"
    },
    {
        "line": 46,
        "fullcodeline": "opt = (u_int8_t *)tcph;"
    },
    {
        "line": 92,
        "fullcodeline": "skb_put(skb, TCPOLEN_MSS);"
    },
    {
        "line": 106,
        "fullcodeline": "opt = (u_int8_t *)tcph + sizeof(struct tcphdr);"
    },
    {
        "line": 107,
        "fullcodeline": "memmove(opt + TCPOLEN_MSS, opt, len - sizeof(struct tcphdr));"
    },
    {
        "line": 109,
        "fullcodeline": "inet_proto_csum_replace2(&tcph->check, skb,"
    },
    {
        "line": 111,
        "fullcodeline": "opt[0] = TCPOPT_MSS;"
    },
    {
        "line": 112,
        "fullcodeline": "opt[1] = TCPOLEN_MSS;"
    },
    {
        "line": 113,
        "fullcodeline": "opt[2] = (newmss & 0xff00) >> 8;"
    },
    {
        "line": 114,
        "fullcodeline": "opt[3] = newmss & 0x00ff;"
    },
    {
        "line": 116,
        "fullcodeline": "inet_proto_csum_replace4(&tcph->check, skb, 0, *((__be32 *)opt), false);"
    },
    {
        "line": 119,
        "fullcodeline": "tcph->doff += TCPOLEN_MSS/4;"
    },
    {
        "line": 120,
        "fullcodeline": "inet_proto_csum_replace2(&tcph->check, skb,"
    },
    {
        "line": 16,
        "fullcodeline": "if (par->fragoff != 0)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!skb_make_writable(skb, skb->len))"
    },
    {
        "line": 23,
        "fullcodeline": "if (len < (int)sizeof(struct tcphdr))"
    },
    {
        "line": 29,
        "fullcodeline": "if (len < tcp_hdrlen || tcp_hdrlen < sizeof(struct tcphdr))"
    },
    {
        "line": 32,
        "fullcodeline": "if (info->mss == XT_TCPMSS_CLAMP_PMTU) {"
    },
    {
        "line": 47,
        "fullcodeline": "for (i = sizeof(struct tcphdr); i <= tcp_hdrlen - TCPOLEN_MSS; i += optlen(opt, i)) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (len > tcp_hdrlen)"
    },
    {
        "line": 78,
        "fullcodeline": "if (tcp_hdrlen >= 15 * 4)"
    },
    {
        "line": 84,
        "fullcodeline": "if (skb_tailroom(skb) < TCPOLEN_MSS) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (xt_family(par) == NFPROTO_IPV4)"
    },
    {
        "line": 110,
        "fullcodeline": "htons(len), htons(len + TCPOLEN_MSS), true);"
    },
    {
        "line": 33,
        "fullcodeline": "struct net *net = xt_net(par);"
    },
    {
        "line": 34,
        "fullcodeline": "unsigned int in_mtu = tcpmss_reverse_mtu(net, skb, family);"
    },
    {
        "line": 35,
        "fullcodeline": "unsigned int min_mtu = min(dst_mtu(skb_dst(skb)), in_mtu);"
    },
    {
        "line": 42,
        "fullcodeline": "newmss = min_mtu - minlen;"
    },
    {
        "line": 89,
        "fullcodeline": "tcph = (struct tcphdr *)(skb_network_header(skb) + tcphoff);"
    },
    {
        "line": 102,
        "fullcodeline": "newmss = min(newmss, (u16)536);"
    },
    {
        "line": 118,
        "fullcodeline": "oldval = ((__be16 *)tcph)[6];"
    },
    {
        "line": 121,
        "fullcodeline": "oldval, ((__be16 *)tcph)[6], false);"
    },
    {
        "line": 20,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "return -1;"
    },
    {
        "line": 30,
        "fullcodeline": "return -1;"
    },
    {
        "line": 37,
        "fullcodeline": "if (min_mtu <= minlen) {"
    },
    {
        "line": 44,
        "fullcodeline": "newmss = info->mss;"
    },
    {
        "line": 48,
        "fullcodeline": "if (opt[i] == TCPOPT_MSS && opt[i+1] == TCPOLEN_MSS) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (pskb_expand_head(skb, 0,"
    },
    {
        "line": 104,
        "fullcodeline": "newmss = min(newmss, (u16)1220);"
    },
    {
        "line": 38,
        "fullcodeline": "net_err_ratelimited(\"unknown or invalid path-MTU (%u)\\n\","
    },
    {
        "line": 51,
        "fullcodeline": "oldmss = (opt[i+2] << 8) | opt[i+3];"
    },
    {
        "line": 60,
        "fullcodeline": "opt[i+2] = (newmss & 0xff00) >> 8;"
    },
    {
        "line": 61,
        "fullcodeline": "opt[i+3] = newmss & 0x00ff;"
    },
    {
        "line": 63,
        "fullcodeline": "inet_proto_csum_replace2(&tcph->check, skb,"
    },
    {
        "line": 86,
        "fullcodeline": "TCPOLEN_MSS - skb_tailroom(skb),"
    },
    {
        "line": 40,
        "fullcodeline": "return -1;"
    },
    {
        "line": 57,
        "fullcodeline": "if (oldmss <= newmss)"
    },
    {
        "line": 64,
        "fullcodeline": "htons(oldmss), htons(newmss),"
    },
    {
        "line": 88,
        "fullcodeline": "return -1;"
    }
]