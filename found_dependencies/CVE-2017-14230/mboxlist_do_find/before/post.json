[
    {
        "line": 3,
        "fullcodeline": "const char *userid = rock->userid;"
    },
    {
        "line": 4,
        "fullcodeline": "int isadmin = rock->isadmin;"
    },
    {
        "line": 6,
        "fullcodeline": "int crossdomains = config_getswitch(IMAPOPT_CROSSDOMAINS);"
    },
    {
        "line": 7,
        "fullcodeline": "char inbox[MAX_MAILBOX_BUFFER];"
    },
    {
        "line": 8,
        "fullcodeline": "size_t inboxlen = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "size_t domainlen = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "size_t userlen = userid ? strlen(userid) : 0;"
    },
    {
        "line": 12,
        "fullcodeline": "char domainpat[MAX_MAILBOX_BUFFER]; /* do intra-domain fetches only */"
    },
    {
        "line": 13,
        "fullcodeline": "char commonpat[MAX_MAILBOX_BUFFER];"
    },
    {
        "line": 14,
        "fullcodeline": "int r = 0;"
    },
    {
        "line": 64,
        "fullcodeline": "const char *firstpat = strarray_nth(patterns, 0);"
    },
    {
        "line": 79,
        "fullcodeline": "commonpat[prefixlen] = '\\0';"
    },
    {
        "line": 200,
        "fullcodeline": "r = (*rock->proc)(NULL, rock->procrock);"
    },
    {
        "line": 207,
        "fullcodeline": "ptrarray_fini(&rock->globs);"
    },
    {
        "line": 18,
        "fullcodeline": "if (patterns->count < 1) return 0; /* nothing to do */"
    },
    {
        "line": 20,
        "fullcodeline": "for (i = 0; i < patterns->count; i++) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (config_virtdomains && userid && (p = strchr(userid, '@'))) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (userid && (!(p = strchr(userid, rock->namespace->hier_sep)) ||"
    },
    {
        "line": 65,
        "fullcodeline": "for (prefixlen = 0; firstpat[prefixlen]; prefixlen++) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (patterns->count == 1) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (userid && !isadmin) {"
    },
    {
        "line": 147,
        "fullcodeline": "if (isadmin || rock->namespace->accessible[NAMESPACE_USER]) {"
    },
    {
        "line": 182,
        "fullcodeline": "if (isadmin || rock->namespace->accessible[NAMESPACE_SHARED]) {"
    },
    {
        "line": 203,
        "fullcodeline": "for (i = 0; i < rock->globs.count; i++) {"
    },
    {
        "line": 21,
        "fullcodeline": "glob *g = glob_init(strarray_nth(patterns, i), rock->namespace->hier_sep);"
    },
    {
        "line": 22,
        "fullcodeline": "ptrarray_append(&rock->globs, g);"
    },
    {
        "line": 26,
        "fullcodeline": "userlen = p - userid;"
    },
    {
        "line": 27,
        "fullcodeline": "domainlen = strlen(p); /* includes separator */"
    },
    {
        "line": 28,
        "fullcodeline": "snprintf(domainpat, sizeof(domainpat), \"%s!\", p+1);"
    },
    {
        "line": 36,
        "fullcodeline": "strlen(userid)+7 < MAX_MAILBOX_BUFFER) {"
    },
    {
        "line": 37,
        "fullcodeline": "char *t, *tmpuser = NULL;"
    },
    {
        "line": 54,
        "fullcodeline": "snprintf(inbox+domainlen, sizeof(inbox)-domainlen,"
    },
    {
        "line": 56,
        "fullcodeline": "free(tmpuser);"
    },
    {
        "line": 57,
        "fullcodeline": "inboxlen = strlen(inbox) - 7;"
    },
    {
        "line": 70,
        "fullcodeline": "char c = firstpat[prefixlen];"
    },
    {
        "line": 77,
        "fullcodeline": "commonpat[prefixlen] = c;"
    },
    {
        "line": 95,
        "fullcodeline": "rock->mb_category = MBNAME_INBOX;"
    },
    {
        "line": 96,
        "fullcodeline": "r = cyrusdb_forone(rock->db, inbox, inboxlen, &find_p, &find_cb, rock, NULL);"
    },
    {
        "line": 113,
        "fullcodeline": "rock->mb_category = MBNAME_OWNER;"
    },
    {
        "line": 114,
        "fullcodeline": "r = cyrusdb_foreach(rock->db, inbox, inboxlen+1, &find_p, &find_cb, rock, NULL);"
    },
    {
        "line": 148,
        "fullcodeline": "len = strlen(rock->namespace->prefix[NAMESPACE_USER]);"
    },
    {
        "line": 183,
        "fullcodeline": "len = strlen(rock->namespace->prefix[NAMESPACE_SHARED]);"
    },
    {
        "line": 204,
        "fullcodeline": "glob *g = ptrarray_nth(&rock->globs, i);"
    },
    {
        "line": 205,
        "fullcodeline": "glob_free(&g);"
    },
    {
        "line": 31,
        "fullcodeline": "domainpat[0] = '\\0';"
    },
    {
        "line": 42,
        "fullcodeline": "if (rock->namespace->hier_sep == '/' && (p = strchr(userid, '.'))) {"
    },
    {
        "line": 55,
        "fullcodeline": "\"user.%.*s.INBOX.\", (int)userlen, inboxuser);"
    },
    {
        "line": 60,
        "fullcodeline": "userid = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "if (prefixlen >= MAX_MAILBOX_NAME) {"
    },
    {
        "line": 71,
        "fullcodeline": "for (i = 1; i < patterns->count; i++) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (i < patterns->count) break;"
    },
    {
        "line": 76,
        "fullcodeline": "if (c == '*' || c == '%' || c == '?') break;"
    },
    {
        "line": 83,
        "fullcodeline": "if (!strcmp(firstpat+prefixlen, \"%\"))"
    },
    {
        "line": 86,
        "fullcodeline": "if (!strcmp(firstpat+prefixlen, \"*%\"))"
    },
    {
        "line": 97,
        "fullcodeline": "if (r == CYRUSDB_DONE) r = 0;"
    },
    {
        "line": 115,
        "fullcodeline": "if (r == CYRUSDB_DONE) r = 0;"
    },
    {
        "line": 151,
        "fullcodeline": "if (!strncmp(rock->namespace->prefix[NAMESPACE_USER], commonpat, MIN(len, prefixlen))) {"
    },
    {
        "line": 186,
        "fullcodeline": "if (!strncmp(rock->namespace->prefix[NAMESPACE_SHARED], commonpat, MIN(len, prefixlen))) {"
    },
    {
        "line": 35,
        "fullcodeline": "((p - userid) > (int)userlen)) &&"
    },
    {
        "line": 41,
        "fullcodeline": "snprintf(inbox, sizeof(inbox), \"%s!\", userid+userlen+1);"
    },
    {
        "line": 43,
        "fullcodeline": "tmpuser = xmalloc(userlen);"
    },
    {
        "line": 44,
        "fullcodeline": "memcpy(tmpuser, userid, userlen);"
    },
    {
        "line": 45,
        "fullcodeline": "t = tmpuser + (p - userid);"
    },
    {
        "line": 51,
        "fullcodeline": "inboxuser = tmpuser;"
    },
    {
        "line": 67,
        "fullcodeline": "r = IMAP_MAILBOX_BADNAME;"
    },
    {
        "line": 72,
        "fullcodeline": "const char *pat = strarray_nth(patterns, i);"
    },
    {
        "line": 84,
        "fullcodeline": "rock->singlepercent = 2;"
    },
    {
        "line": 87,
        "fullcodeline": "rock->singlepercent = 1;"
    },
    {
        "line": 102,
        "fullcodeline": "rock->mb_category = MBNAME_INBOXSUB;"
    },
    {
        "line": 103,
        "fullcodeline": "r = cyrusdb_foreach(rock->db, inbox, inboxlen+7, &find_p, &find_cb, rock, NULL);"
    },
    {
        "line": 108,
        "fullcodeline": "r = (*rock->proc)(NULL, rock->procrock);"
    },
    {
        "line": 121,
        "fullcodeline": "r = (*rock->proc)(NULL, rock->procrock);"
    },
    {
        "line": 124,
        "fullcodeline": "rock->mb_category = MBNAME_ALTINBOX;"
    },
    {
        "line": 129,
        "fullcodeline": "r = cyrusdb_forone(rock->db, inbox, inboxlen+6, &find_p, &find_cb, rock, NULL);"
    },
    {
        "line": 134,
        "fullcodeline": "rock->mb_category = MBNAME_ALTPREFIX;"
    },
    {
        "line": 135,
        "fullcodeline": "r = cyrusdb_foreach(rock->db, inbox, inboxlen+1, &find_p, &find_cb, rock, NULL);"
    },
    {
        "line": 149,
        "fullcodeline": "if (len) len--; // trailing separator"
    },
    {
        "line": 162,
        "fullcodeline": "rock->mb_category = MBNAME_OTHERUSER;"
    },
    {
        "line": 165,
        "fullcodeline": "size_t thislen = (isadmin || crossdomains) ? 0 : strlen(domainpat);"
    },
    {
        "line": 168,
        "fullcodeline": "r = (*rock->proc)(NULL, rock->procrock);"
    },
    {
        "line": 171,
        "fullcodeline": "r = mboxlist_find_category(rock, domainpat, thislen);"
    },
    {
        "line": 184,
        "fullcodeline": "if (len) len--; // trailing separator"
    },
    {
        "line": 187,
        "fullcodeline": "rock->mb_category = MBNAME_SHARED;"
    },
    {
        "line": 190,
        "fullcodeline": "r = (*rock->proc)(NULL, rock->procrock);"
    },
    {
        "line": 194,
        "fullcodeline": "r = mboxlist_find_category(rock, domainpat, domainlen);"
    },
    {
        "line": 46,
        "fullcodeline": "while(t < (tmpuser + userlen)) {"
    },
    {
        "line": 53,
        "fullcodeline": "inboxuser = userid;"
    },
    {
        "line": 73,
        "fullcodeline": "if (pat[prefixlen] != c) break;"
    },
    {
        "line": 104,
        "fullcodeline": "if (r == CYRUSDB_DONE) r = 0;"
    },
    {
        "line": 130,
        "fullcodeline": "if (r == CYRUSDB_DONE) goto skipalt;"
    },
    {
        "line": 137,
        "fullcodeline": "if (r == CYRUSDB_DONE) r = 0;"
    },
    {
        "line": 152,
        "fullcodeline": "if (prefixlen < len) {"
    },
    {
        "line": 49,
        "fullcodeline": "t++;"
    },
    {
        "line": 154,
        "fullcodeline": "strlcpy(domainpat+domainlen, \"user.\", sizeof(domainpat)-domainlen);"
    },
    {
        "line": 47,
        "fullcodeline": "if (*t == '.')"
    },
    {
        "line": 158,
        "fullcodeline": "strlcpy(domainpat+domainlen, \"user.\", sizeof(domainpat)-domainlen);"
    },
    {
        "line": 159,
        "fullcodeline": "strlcpy(domainpat+domainlen+5, commonpat+len+1, sizeof(domainpat)-domainlen-5);"
    },
    {
        "line": 48,
        "fullcodeline": "*t = '^';"
    }
]