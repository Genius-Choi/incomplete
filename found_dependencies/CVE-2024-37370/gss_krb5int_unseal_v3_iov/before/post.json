[
    {
        "line": 15,
        "fullcodeline": "unsigned char *ptr = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "int conf_flag = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "header = kg_locate_header_iov(iov, iov_count, toktype);"
    },
    {
        "line": 29,
        "fullcodeline": "assert(header != NULL);"
    },
    {
        "line": 31,
        "fullcodeline": "padding = kg_locate_iov(iov, iov_count, GSS_IOV_BUFFER_TYPE_PADDING);"
    },
    {
        "line": 35,
        "fullcodeline": "trailer = kg_locate_iov(iov, iov_count, GSS_IOV_BUFFER_TYPE_TRAILER);"
    },
    {
        "line": 37,
        "fullcodeline": "acceptor_flag = ctx->initiate ? FLAG_SENDER_IS_ACCEPTOR : 0;"
    },
    {
        "line": 38,
        "fullcodeline": "key_usage = (toktype == KG_TOK_WRAP_MSG"
    },
    {
        "line": 46,
        "fullcodeline": "kg_iov_msglen(iov, iov_count, &data_length, &assoc_data_length);"
    },
    {
        "line": 67,
        "fullcodeline": "assert(key != NULL);"
    },
    {
        "line": 183,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 191,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "if (qop_state != NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "if (padding != NULL && padding->buffer.length != 0)"
    },
    {
        "line": 50,
        "fullcodeline": "if (header->buffer.length < 16) {"
    },
    {
        "line": 55,
        "fullcodeline": "if ((ptr[2] & FLAG_SENDER_IS_ACCEPTOR) != acceptor_flag) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (ctx->have_acceptor_subkey && (ptr[2] & FLAG_ACCEPTOR_SUBKEY)) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (toktype == KG_TOK_WRAP_MSG) {"
    },
    {
        "line": 185,
        "fullcodeline": "if (conf_state != NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "*qop_state = GSS_C_QOP_DEFAULT;"
    },
    {
        "line": 39,
        "fullcodeline": "? (!ctx->initiate"
    },
    {
        "line": 42,
        "fullcodeline": ": (!ctx->initiate"
    },
    {
        "line": 51,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "*minor_status = (OM_uint32)G_BAD_DIRECTION;"
    },
    {
        "line": 61,
        "fullcodeline": "key = ctx->acceptor_subkey;"
    },
    {
        "line": 62,
        "fullcodeline": "cksumtype = ctx->acceptor_subkey_cksumtype;"
    },
    {
        "line": 75,
        "fullcodeline": "conf_flag = ((ptr[2] & FLAG_WRAP_CONFIDENTIAL) != 0);"
    },
    {
        "line": 78,
        "fullcodeline": "ec = load_16_be(ptr + 4);"
    },
    {
        "line": 79,
        "fullcodeline": "rrc = load_16_be(ptr + 6);"
    },
    {
        "line": 80,
        "fullcodeline": "seqnum = load_64_be(ptr + 8);"
    },
    {
        "line": 82,
        "fullcodeline": "code = krb5_c_crypto_length(context, key->keyblock.enctype,"
    },
    {
        "line": 154,
        "fullcodeline": "code = g_seqstate_check(ctx->seqstate, seqnum);"
    },
    {
        "line": 186,
        "fullcodeline": "*conf_state = conf_flag;"
    },
    {
        "line": 64,
        "fullcodeline": "key = ctx->subkey;"
    },
    {
        "line": 65,
        "fullcodeline": "cksumtype = ctx->cksumtype;"
    },
    {
        "line": 73,
        "fullcodeline": "if (load_16_be(ptr) != KG2_TOK_WRAP_MSG)"
    },
    {
        "line": 76,
        "fullcodeline": "if (ptr[3] != 0xFF)"
    },
    {
        "line": 86,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (trailer == NULL) {"
    },
    {
        "line": 83,
        "fullcodeline": "conf_flag ? KRB5_CRYPTO_TYPE_TRAILER :"
    },
    {
        "line": 87,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 93,
        "fullcodeline": "size_t desired_rrc = k5_trailerlen;"
    },
    {
        "line": 114,
        "fullcodeline": "code = kg_decrypt_iov(context, ctx->proto,"
    },
    {
        "line": 155,
        "fullcodeline": "} else if (toktype == KG_TOK_MIC_MSG) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (rrc != desired_rrc)"
    },
    {
        "line": 118,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (trailer == NULL)"
    },
    {
        "line": 129,
        "fullcodeline": "if (load_16_be(althdr) != KG2_TOK_WRAP_MSG"
    },
    {
        "line": 142,
        "fullcodeline": "store_16_be(0, ptr + 4);"
    },
    {
        "line": 143,
        "fullcodeline": "store_16_be(0, ptr + 6);"
    },
    {
        "line": 145,
        "fullcodeline": "code = kg_verify_checksum_iov_v3(context, cksumtype, rrc,"
    },
    {
        "line": 162,
        "fullcodeline": "seqnum = load_64_be(ptr + 8);"
    },
    {
        "line": 166,
        "fullcodeline": "rrc = (trailer != NULL) ? 0 : header->buffer.length - 16;"
    },
    {
        "line": 167,
        "fullcodeline": "code = kg_verify_checksum_iov_v3(context, cksumtype, rrc,"
    },
    {
        "line": 174,
        "fullcodeline": "code = g_seqstate_check(ctx->seqstate, seqnum);"
    },
    {
        "line": 96,
        "fullcodeline": "desired_rrc += 16; /* E(Header) */"
    },
    {
        "line": 105,
        "fullcodeline": "} else if (rrc != 0) {"
    },
    {
        "line": 115,
        "fullcodeline": "((ctx->gss_flags & GSS_C_DCE_STYLE) != 0),"
    },
    {
        "line": 119,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 125,
        "fullcodeline": "althdr = (unsigned char *)header->buffer.value + 16 + ec;"
    },
    {
        "line": 132,
        "fullcodeline": "|| memcmp(althdr + 8, ptr + 8, 8) != 0) {"
    },
    {
        "line": 133,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 138,
        "fullcodeline": "if (ec != k5_trailerlen)"
    },
    {
        "line": 148,
        "fullcodeline": "if (code != 0 || valid == FALSE) {"
    },
    {
        "line": 156,
        "fullcodeline": "if (load_16_be(ptr) != KG2_TOK_MIC_MSG)"
    },
    {
        "line": 160,
        "fullcodeline": "if (ptr[3] != 0xFF)"
    },
    {
        "line": 170,
        "fullcodeline": "if (code != 0 || valid == FALSE) {"
    },
    {
        "line": 98,
        "fullcodeline": "if ((ctx->gss_flags & GSS_C_DCE_STYLE) == 0)"
    },
    {
        "line": 127,
        "fullcodeline": "althdr = (unsigned char *)trailer->buffer.value + ec;"
    },
    {
        "line": 131,
        "fullcodeline": "|| althdr[3] != ptr[3]"
    },
    {
        "line": 149,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 171,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 175,
        "fullcodeline": "} else if (toktype == KG_TOK_DEL_CTX) {"
    },
    {
        "line": 99,
        "fullcodeline": "desired_rrc += ec;"
    },
    {
        "line": 130,
        "fullcodeline": "|| althdr[2] != ptr[2]"
    },
    {
        "line": 176,
        "fullcodeline": "if (load_16_be(ptr) != KG2_TOK_DEL_CTX)"
    }
]