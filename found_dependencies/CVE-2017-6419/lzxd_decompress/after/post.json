[
    {
        "line": 4,
        "fullcodeline": "register int bits_left, i=0;"
    },
    {
        "line": 10,
        "fullcodeline": "unsigned char *window, *runsrc, *rundest, buf[12];"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned int frame_size=0, end_frame, match_offset, window_posn;"
    },
    {
        "line": 19,
        "fullcodeline": "i = lzx->o_end - lzx->o_ptr;"
    },
    {
        "line": 33,
        "fullcodeline": "window = lzx->window;"
    },
    {
        "line": 34,
        "fullcodeline": "window_posn = lzx->window_posn;"
    },
    {
        "line": 35,
        "fullcodeline": "R0 = lzx->R0;"
    },
    {
        "line": 36,
        "fullcodeline": "R1 = lzx->R1;"
    },
    {
        "line": 37,
        "fullcodeline": "R2 = lzx->R2;"
    },
    {
        "line": 39,
        "fullcodeline": "end_frame = (unsigned int)((lzx->offset + out_bytes) / LZX_FRAME_SIZE) + 1;"
    },
    {
        "line": 497,
        "fullcodeline": "lzx->window_posn = window_posn;"
    },
    {
        "line": 498,
        "fullcodeline": "lzx->R0 = R0;"
    },
    {
        "line": 499,
        "fullcodeline": "lzx->R1 = R1;"
    },
    {
        "line": 500,
        "fullcodeline": "lzx->R2 = R2;"
    },
    {
        "line": 15,
        "fullcodeline": "if (!lzx || (out_bytes < 0)) return MSPACK_ERR_ARGS;"
    },
    {
        "line": 20,
        "fullcodeline": "if ((off_t) i > out_bytes) i = (int) out_bytes;"
    },
    {
        "line": 29,
        "fullcodeline": "if (out_bytes == 0) return MSPACK_ERR_OK;"
    },
    {
        "line": 41,
        "fullcodeline": "while (lzx->frame < end_frame) {"
    },
    {
        "line": 25,
        "fullcodeline": "lzx->o_ptr  += i;"
    },
    {
        "line": 26,
        "fullcodeline": "lzx->offset += i;"
    },
    {
        "line": 27,
        "fullcodeline": "out_bytes   -= i;"
    },
    {
        "line": 74,
        "fullcodeline": "frame_size = LZX_FRAME_SIZE;"
    },
    {
        "line": 80,
        "fullcodeline": "bytes_todo = lzx->frame_posn + frame_size - window_posn;"
    },
    {
        "line": 469,
        "fullcodeline": "lzx->o_end = &lzx->o_ptr[frame_size];"
    },
    {
        "line": 472,
        "fullcodeline": "i = (out_bytes < (off_t)frame_size) ? (unsigned int)out_bytes : frame_size;"
    },
    {
        "line": 476,
        "fullcodeline": "lzx->o_ptr  += i;"
    },
    {
        "line": 477,
        "fullcodeline": "lzx->offset += i;"
    },
    {
        "line": 478,
        "fullcodeline": "out_bytes   -= i;"
    },
    {
        "line": 481,
        "fullcodeline": "lzx->frame_posn += frame_size;"
    },
    {
        "line": 482,
        "fullcodeline": "lzx->frame++;"
    },
    {
        "line": 491,
        "fullcodeline": "D((\"bytes left to output\"))"
    },
    {
        "line": 22,
        "fullcodeline": "if (lzx->sys->write(lzx->output, lzx->o_ptr, i) != i) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (lzx->reset_interval && ((lzx->frame % lzx->reset_interval) == 0)) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (!lzx->header_read) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (lzx->length && (lzx->length - lzx->offset) < (off_t)frame_size) {"
    },
    {
        "line": 81,
        "fullcodeline": "while (bytes_todo > 0) {"
    },
    {
        "line": 419,
        "fullcodeline": "if ((window_posn - lzx->frame_posn) != frame_size) {"
    },
    {
        "line": 426,
        "fullcodeline": "if (bits_left > 0) ENSURE_BITS(16);"
    },
    {
        "line": 427,
        "fullcodeline": "if (bits_left & 15) REMOVE_BITS(bits_left & 15);"
    },
    {
        "line": 430,
        "fullcodeline": "if (lzx->o_ptr != lzx->o_end) {"
    },
    {
        "line": 437,
        "fullcodeline": "if (lzx->intel_started && lzx->intel_filesize &&"
    },
    {
        "line": 473,
        "fullcodeline": "if (lzx->sys->write(lzx->output, lzx->o_ptr, i) != i) {"
    },
    {
        "line": 485,
        "fullcodeline": "if (window_posn == lzx->window_size)     window_posn = 0;"
    },
    {
        "line": 486,
        "fullcodeline": "if (lzx->frame_posn == lzx->window_size) lzx->frame_posn = 0;"
    },
    {
        "line": 492,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 50,
        "fullcodeline": "lzxd_reset_state(lzx);"
    },
    {
        "line": 51,
        "fullcodeline": "R0 = lzx->R0;"
    },
    {
        "line": 52,
        "fullcodeline": "R1 = lzx->R1;"
    },
    {
        "line": 53,
        "fullcodeline": "R2 = lzx->R2;"
    },
    {
        "line": 58,
        "fullcodeline": "ENSURE_BITS(16);"
    },
    {
        "line": 59,
        "fullcodeline": "REMOVE_BITS(16);"
    },
    {
        "line": 66,
        "fullcodeline": "j = 0; READ_BITS(i, 1); if (i) { READ_BITS(i, 16); READ_BITS(j, 16); }"
    },
    {
        "line": 67,
        "fullcodeline": "lzx->intel_filesize = (i << 16) | j;"
    },
    {
        "line": 68,
        "fullcodeline": "lzx->header_read = 1;"
    },
    {
        "line": 76,
        "fullcodeline": "frame_size = lzx->length - lzx->offset;"
    },
    {
        "line": 143,
        "fullcodeline": "this_run = lzx->block_remaining;"
    },
    {
        "line": 147,
        "fullcodeline": "bytes_todo           -= this_run;"
    },
    {
        "line": 148,
        "fullcodeline": "lzx->block_remaining -= this_run;"
    },
    {
        "line": 420,
        "fullcodeline": "D((\"decode beyond output frame limits! %d != %d\","
    },
    {
        "line": 431,
        "fullcodeline": "D((\"%ld avail bytes, new %d frame\","
    },
    {
        "line": 438,
        "fullcodeline": "(lzx->frame <= 32768) && (frame_size > 10))"
    },
    {
        "line": 442,
        "fullcodeline": "signed int curpos      = lzx->intel_curpos;"
    },
    {
        "line": 443,
        "fullcodeline": "signed int filesize    = lzx->intel_filesize;"
    },
    {
        "line": 447,
        "fullcodeline": "lzx->o_ptr = data;"
    },
    {
        "line": 448,
        "fullcodeline": "lzx->sys->copy(&lzx->window[lzx->frame_posn], data, frame_size);"
    },
    {
        "line": 463,
        "fullcodeline": "lzx->intel_curpos += frame_size;"
    },
    {
        "line": 23,
        "fullcodeline": "return lzx->error = MSPACK_ERR_WRITE;"
    },
    {
        "line": 83,
        "fullcodeline": "if (lzx->block_remaining == 0) {"
    },
    {
        "line": 144,
        "fullcodeline": "if (this_run > bytes_todo) this_run = bytes_todo;"
    },
    {
        "line": 408,
        "fullcodeline": "if (this_run < 0) {"
    },
    {
        "line": 422,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 433,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 450,
        "fullcodeline": "while (data < dataend) {"
    },
    {
        "line": 466,
        "fullcodeline": "lzx->o_ptr = &lzx->window[lzx->frame_posn];"
    },
    {
        "line": 474,
        "fullcodeline": "return lzx->error = MSPACK_ERR_WRITE;"
    },
    {
        "line": 45,
        "fullcodeline": "D((\"%d bytes remaining at reset interval\", lzx->block_remaining))"
    },
    {
        "line": 93,
        "fullcodeline": "READ_BITS(lzx->block_type, 3);"
    },
    {
        "line": 94,
        "fullcodeline": "READ_BITS(i, 16); READ_BITS(j, 8);"
    },
    {
        "line": 95,
        "fullcodeline": "lzx->block_remaining = lzx->block_length = (i << 8) | j;"
    },
    {
        "line": 386,
        "fullcodeline": "rundest = &window[window_posn];"
    },
    {
        "line": 387,
        "fullcodeline": "window_posn += this_run;"
    },
    {
        "line": 414,
        "fullcodeline": "lzx->block_remaining -= -this_run;"
    },
    {
        "line": 452,
        "fullcodeline": "abs_off = data[0] | (data[1]<<8) | (data[2]<<16) | (data[3]<<24);"
    },
    {
        "line": 460,
        "fullcodeline": "data += 4;"
    },
    {
        "line": 461,
        "fullcodeline": "curpos += 5;"
    },
    {
        "line": 46,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 85,
        "fullcodeline": "if ((lzx->block_type == LZX_BLOCKTYPE_UNCOMPRESSED) &&"
    },
    {
        "line": 153,
        "fullcodeline": "while (this_run > 0) {"
    },
    {
        "line": 256,
        "fullcodeline": "while (this_run > 0) {"
    },
    {
        "line": 382,
        "fullcodeline": "if (window_posn + this_run > lzx->window_size) {"
    },
    {
        "line": 389,
        "fullcodeline": "while (this_run > 0) {"
    },
    {
        "line": 404,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH; /* might as well */"
    },
    {
        "line": 409,
        "fullcodeline": "if ((unsigned int)(-this_run) > lzx->block_remaining) {"
    },
    {
        "line": 421,
        "fullcodeline": "window_posn - lzx->frame_posn, frame_size))"
    },
    {
        "line": 432,
        "fullcodeline": "(long)(lzx->o_end - lzx->o_ptr), frame_size))"
    },
    {
        "line": 441,
        "fullcodeline": "unsigned char *dataend = &lzx->e8_buf[frame_size - 10];"
    },
    {
        "line": 451,
        "fullcodeline": "if (*data++ != 0xE8) { curpos++; continue; }"
    },
    {
        "line": 453,
        "fullcodeline": "if ((abs_off >= -curpos) && (abs_off < filesize)) {"
    },
    {
        "line": 467,
        "fullcodeline": "if (lzx->intel_filesize) lzx->intel_curpos += frame_size;"
    },
    {
        "line": 86,
        "fullcodeline": "(lzx->block_length & 1))"
    },
    {
        "line": 89,
        "fullcodeline": "i_ptr++;"
    },
    {
        "line": 103,
        "fullcodeline": "BUILD_TABLE(ALIGNED);"
    },
    {
        "line": 107,
        "fullcodeline": "READ_LENGTHS(MAINTREE, 0, 256);"
    },
    {
        "line": 108,
        "fullcodeline": "READ_LENGTHS(MAINTREE, 256, LZX_NUM_CHARS + lzx->num_offsets);"
    },
    {
        "line": 109,
        "fullcodeline": "BUILD_TABLE(MAINTREE);"
    },
    {
        "line": 113,
        "fullcodeline": "READ_LENGTHS(LENGTH, 0, LZX_NUM_SECONDARY_LENGTHS);"
    },
    {
        "line": 114,
        "fullcodeline": "BUILD_TABLE_MAYBE_EMPTY(LENGTH);"
    },
    {
        "line": 119,
        "fullcodeline": "lzx->intel_started = 1;"
    },
    {
        "line": 123,
        "fullcodeline": "bits_left = 0; bit_buffer = 0;"
    },
    {
        "line": 130,
        "fullcodeline": "R0 = buf[0] | (buf[1] << 8) | (buf[2]  << 16) | (buf[3]  << 24);"
    },
    {
        "line": 131,
        "fullcodeline": "R1 = buf[4] | (buf[5] << 8) | (buf[6]  << 16) | (buf[7]  << 24);"
    },
    {
        "line": 132,
        "fullcodeline": "R2 = buf[8] | (buf[9] << 8) | (buf[10] << 16) | (buf[11] << 24);"
    },
    {
        "line": 136,
        "fullcodeline": "D((\"bad block type\"))"
    },
    {
        "line": 154,
        "fullcodeline": "READ_HUFFSYM(MAINTREE, main_element);"
    },
    {
        "line": 257,
        "fullcodeline": "READ_HUFFSYM(MAINTREE, main_element);"
    },
    {
        "line": 383,
        "fullcodeline": "D((\"match ran over window boundary\"))"
    },
    {
        "line": 410,
        "fullcodeline": "D((\"overrun went past end of block by %d (%d remaining)\","
    },
    {
        "line": 454,
        "fullcodeline": "rel_off = (abs_off >= 0) ? abs_off - curpos : abs_off + filesize;"
    },
    {
        "line": 455,
        "fullcodeline": "data[0] = (unsigned char) rel_off;"
    },
    {
        "line": 456,
        "fullcodeline": "data[1] = (unsigned char) (rel_off >> 8);"
    },
    {
        "line": 457,
        "fullcodeline": "data[2] = (unsigned char) (rel_off >> 16);"
    },
    {
        "line": 458,
        "fullcodeline": "data[3] = (unsigned char) (rel_off >> 24);"
    },
    {
        "line": 102,
        "fullcodeline": "for (i = 0; i < 8; i++) { READ_BITS(j, 3); lzx->ALIGNED_len[i] = j; }"
    },
    {
        "line": 111,
        "fullcodeline": "if (lzx->MAINTREE_len[0xE8] != 0) lzx->intel_started = 1;"
    },
    {
        "line": 122,
        "fullcodeline": "if (bits_left == 0) ENSURE_BITS(16);"
    },
    {
        "line": 126,
        "fullcodeline": "for (rundest = &buf[0], i = 0; i < 12; i++) {"
    },
    {
        "line": 137,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 155,
        "fullcodeline": "if (main_element < LZX_NUM_CHARS) {"
    },
    {
        "line": 258,
        "fullcodeline": "if (main_element < LZX_NUM_CHARS) {"
    },
    {
        "line": 384,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 390,
        "fullcodeline": "if ((i = i_end - i_ptr) == 0) {"
    },
    {
        "line": 412,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 157,
        "fullcodeline": "window[window_posn++] = main_element;"
    },
    {
        "line": 158,
        "fullcodeline": "this_run--;"
    },
    {
        "line": 260,
        "fullcodeline": "window[window_posn++] = main_element;"
    },
    {
        "line": 261,
        "fullcodeline": "this_run--;"
    },
    {
        "line": 162,
        "fullcodeline": "main_element -= LZX_NUM_CHARS;"
    },
    {
        "line": 165,
        "fullcodeline": "match_length = main_element & LZX_NUM_PRIMARY_LENGTHS;"
    },
    {
        "line": 174,
        "fullcodeline": "match_length += LZX_MIN_MATCH;"
    },
    {
        "line": 221,
        "fullcodeline": "i = match_length;"
    },
    {
        "line": 249,
        "fullcodeline": "this_run    -= match_length;"
    },
    {
        "line": 250,
        "fullcodeline": "window_posn += match_length;"
    },
    {
        "line": 265,
        "fullcodeline": "main_element -= LZX_NUM_CHARS;"
    },
    {
        "line": 268,
        "fullcodeline": "match_length = main_element & LZX_NUM_PRIMARY_LENGTHS;"
    },
    {
        "line": 277,
        "fullcodeline": "match_length += LZX_MIN_MATCH;"
    },
    {
        "line": 345,
        "fullcodeline": "i = match_length;"
    },
    {
        "line": 373,
        "fullcodeline": "this_run    -= match_length;"
    },
    {
        "line": 374,
        "fullcodeline": "window_posn += match_length;"
    },
    {
        "line": 395,
        "fullcodeline": "lzx->sys->copy(i_ptr, rundest, (size_t) i);"
    },
    {
        "line": 396,
        "fullcodeline": "rundest  += i;"
    },
    {
        "line": 397,
        "fullcodeline": "i_ptr    += i;"
    },
    {
        "line": 398,
        "fullcodeline": "this_run -= i;"
    },
    {
        "line": 411,
        "fullcodeline": "-this_run, lzx->block_remaining ))"
    },
    {
        "line": 128,
        "fullcodeline": "*rundest++ = *i_ptr++;"
    },
    {
        "line": 166,
        "fullcodeline": "if (match_length == LZX_NUM_PRIMARY_LENGTHS) {"
    },
    {
        "line": 177,
        "fullcodeline": "switch ((match_offset = (main_element >> 3))) {"
    },
    {
        "line": 190,
        "fullcodeline": "if (match_length == LZX_MAX_MATCH && lzx->is_delta) {"
    },
    {
        "line": 214,
        "fullcodeline": "if ((window_posn + match_length) > lzx->window_size) {"
    },
    {
        "line": 223,
        "fullcodeline": "if (match_offset > window_posn) {"
    },
    {
        "line": 269,
        "fullcodeline": "if (match_length == LZX_NUM_PRIMARY_LENGTHS) {"
    },
    {
        "line": 280,
        "fullcodeline": "switch ((match_offset = (main_element >> 3))) {"
    },
    {
        "line": 314,
        "fullcodeline": "if (match_length == LZX_MAX_MATCH && lzx->is_delta) {"
    },
    {
        "line": 338,
        "fullcodeline": "if ((window_posn + match_length) > lzx->window_size) {"
    },
    {
        "line": 347,
        "fullcodeline": "if (match_offset > window_posn) {"
    },
    {
        "line": 394,
        "fullcodeline": "if (i > this_run) i = this_run;"
    },
    {
        "line": 171,
        "fullcodeline": "READ_HUFFSYM(LENGTH, length_footer);"
    },
    {
        "line": 172,
        "fullcodeline": "match_length += length_footer;"
    },
    {
        "line": 178,
        "fullcodeline": "case 0: match_offset = R0;                                  break;"
    },
    {
        "line": 179,
        "fullcodeline": "case 1: match_offset = R1; R1=R0;        R0 = match_offset; break;"
    },
    {
        "line": 180,
        "fullcodeline": "case 2: match_offset = R2; R2=R0;        R0 = match_offset; break;"
    },
    {
        "line": 181,
        "fullcodeline": "case 3: match_offset = 1;  R2=R1; R1=R0; R0 = match_offset; break;"
    },
    {
        "line": 183,
        "fullcodeline": "extra = (match_offset >= 36) ? 17 : extra_bits[match_offset];"
    },
    {
        "line": 184,
        "fullcodeline": "READ_BITS(verbatim_bits, extra);"
    },
    {
        "line": 185,
        "fullcodeline": "match_offset = position_base[match_offset] - 2 + verbatim_bits;"
    },
    {
        "line": 186,
        "fullcodeline": "R2 = R1; R1 = R0; R0 = match_offset;"
    },
    {
        "line": 191,
        "fullcodeline": "int extra_len = 0;"
    },
    {
        "line": 192,
        "fullcodeline": "ENSURE_BITS(3); /* 4 entry huffman tree */"
    },
    {
        "line": 211,
        "fullcodeline": "match_length += extra_len;"
    },
    {
        "line": 215,
        "fullcodeline": "D((\"match ran over window wrap\"))"
    },
    {
        "line": 231,
        "fullcodeline": "j = match_offset - window_posn;"
    },
    {
        "line": 274,
        "fullcodeline": "READ_HUFFSYM(LENGTH, length_footer);"
    },
    {
        "line": 275,
        "fullcodeline": "match_length += length_footer;"
    },
    {
        "line": 281,
        "fullcodeline": "case 0: match_offset = R0;                             break;"
    },
    {
        "line": 282,
        "fullcodeline": "case 1: match_offset = R1; R1 = R0; R0 = match_offset; break;"
    },
    {
        "line": 283,
        "fullcodeline": "case 2: match_offset = R2; R2 = R0; R0 = match_offset; break;"
    },
    {
        "line": 285,
        "fullcodeline": "extra = (match_offset >= 36) ? 17 : extra_bits[match_offset];"
    },
    {
        "line": 286,
        "fullcodeline": "match_offset = position_base[match_offset] - 2;"
    },
    {
        "line": 310,
        "fullcodeline": "R2 = R1; R1 = R0; R0 = match_offset;"
    },
    {
        "line": 315,
        "fullcodeline": "int extra_len = 0;"
    },
    {
        "line": 316,
        "fullcodeline": "ENSURE_BITS(3); /* 4 entry huffman tree */"
    },
    {
        "line": 335,
        "fullcodeline": "match_length += extra_len;"
    },
    {
        "line": 339,
        "fullcodeline": "D((\"match ran over window wrap\"))"
    },
    {
        "line": 355,
        "fullcodeline": "j = match_offset - window_posn;"
    },
    {
        "line": 193,
        "fullcodeline": "if (PEEK_BITS(1) == 0) {"
    },
    {
        "line": 216,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 224,
        "fullcodeline": "if (match_offset > lzx->offset &&"
    },
    {
        "line": 232,
        "fullcodeline": "if (j > (int) lzx->window_size) {"
    },
    {
        "line": 237,
        "fullcodeline": "if (j < i) {"
    },
    {
        "line": 242,
        "fullcodeline": "while (i-- > 0) *rundest++ = *runsrc++;"
    },
    {
        "line": 245,
        "fullcodeline": "runsrc = rundest - match_offset;"
    },
    {
        "line": 287,
        "fullcodeline": "if (extra > 3) {"
    },
    {
        "line": 317,
        "fullcodeline": "if (PEEK_BITS(1) == 0) {"
    },
    {
        "line": 340,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 348,
        "fullcodeline": "if (match_offset > lzx->offset &&"
    },
    {
        "line": 356,
        "fullcodeline": "if (j > (int) lzx->window_size) {"
    },
    {
        "line": 361,
        "fullcodeline": "if (j < i) {"
    },
    {
        "line": 366,
        "fullcodeline": "while (i-- > 0) *rundest++ = *runsrc++;"
    },
    {
        "line": 369,
        "fullcodeline": "runsrc = rundest - match_offset;"
    },
    {
        "line": 168,
        "fullcodeline": "D((\"LENGTH symbol needed but tree is empty\"))"
    },
    {
        "line": 194,
        "fullcodeline": "REMOVE_BITS(1); /* '0' -> 8 extra length bits */"
    },
    {
        "line": 195,
        "fullcodeline": "READ_BITS(extra_len, 8);"
    },
    {
        "line": 225,
        "fullcodeline": "(match_offset - window_posn) > lzx->ref_data_size)"
    },
    {
        "line": 227,
        "fullcodeline": "D((\"match offset beyond LZX stream\"))"
    },
    {
        "line": 233,
        "fullcodeline": "D((\"match offset beyond window boundaries\"))"
    },
    {
        "line": 239,
        "fullcodeline": "i -= j; while (j-- > 0) *rundest++ = *runsrc++;"
    },
    {
        "line": 240,
        "fullcodeline": "runsrc = window;"
    },
    {
        "line": 246,
        "fullcodeline": "while (i-- > 0) *rundest++ = *runsrc++;"
    },
    {
        "line": 271,
        "fullcodeline": "D((\"LENGTH symbol needed but tree is empty\"))"
    },
    {
        "line": 289,
        "fullcodeline": "extra -= 3;"
    },
    {
        "line": 290,
        "fullcodeline": "READ_BITS(verbatim_bits, extra);"
    },
    {
        "line": 291,
        "fullcodeline": "match_offset += (verbatim_bits << 3);"
    },
    {
        "line": 292,
        "fullcodeline": "READ_HUFFSYM(ALIGNED, aligned_bits);"
    },
    {
        "line": 293,
        "fullcodeline": "match_offset += aligned_bits;"
    },
    {
        "line": 318,
        "fullcodeline": "REMOVE_BITS(1); /* '0' -> 8 extra length bits */"
    },
    {
        "line": 319,
        "fullcodeline": "READ_BITS(extra_len, 8);"
    },
    {
        "line": 349,
        "fullcodeline": "(match_offset - window_posn) > lzx->ref_data_size)"
    },
    {
        "line": 351,
        "fullcodeline": "D((\"match offset beyond LZX stream\"))"
    },
    {
        "line": 357,
        "fullcodeline": "D((\"match offset beyond window boundaries\"))"
    },
    {
        "line": 363,
        "fullcodeline": "i -= j; while (j-- > 0) *rundest++ = *runsrc++;"
    },
    {
        "line": 364,
        "fullcodeline": "runsrc = window;"
    },
    {
        "line": 370,
        "fullcodeline": "while (i-- > 0) *rundest++ = *runsrc++;"
    },
    {
        "line": 169,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 228,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 234,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 236,
        "fullcodeline": "runsrc = &window[lzx->window_size - j];"
    },
    {
        "line": 272,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 352,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 358,
        "fullcodeline": "return lzx->error = MSPACK_ERR_DECRUNCH;"
    },
    {
        "line": 360,
        "fullcodeline": "runsrc = &window[lzx->window_size - j];"
    },
    {
        "line": 197,
        "fullcodeline": "else if (PEEK_BITS(2) == 2) {"
    },
    {
        "line": 295,
        "fullcodeline": "else if (extra == 3) {"
    },
    {
        "line": 321,
        "fullcodeline": "else if (PEEK_BITS(2) == 2) {"
    },
    {
        "line": 198,
        "fullcodeline": "REMOVE_BITS(2); /* '10' -> 10 extra length bits + 0x100 */"
    },
    {
        "line": 199,
        "fullcodeline": "READ_BITS(extra_len, 10);"
    },
    {
        "line": 200,
        "fullcodeline": "extra_len += 0x100;"
    },
    {
        "line": 297,
        "fullcodeline": "READ_HUFFSYM(ALIGNED, aligned_bits);"
    },
    {
        "line": 298,
        "fullcodeline": "match_offset += aligned_bits;"
    },
    {
        "line": 322,
        "fullcodeline": "REMOVE_BITS(2); /* '10' -> 10 extra length bits + 0x100 */"
    },
    {
        "line": 323,
        "fullcodeline": "READ_BITS(extra_len, 10);"
    },
    {
        "line": 324,
        "fullcodeline": "extra_len += 0x100;"
    },
    {
        "line": 202,
        "fullcodeline": "else if (PEEK_BITS(3) == 6) {"
    },
    {
        "line": 300,
        "fullcodeline": "else if (extra > 0) { /* extra==1, extra==2 */"
    },
    {
        "line": 326,
        "fullcodeline": "else if (PEEK_BITS(3) == 6) {"
    },
    {
        "line": 203,
        "fullcodeline": "REMOVE_BITS(3); /* '110' -> 12 extra length bits + 0x500 */"
    },
    {
        "line": 204,
        "fullcodeline": "READ_BITS(extra_len, 12);"
    },
    {
        "line": 205,
        "fullcodeline": "extra_len += 0x500;"
    },
    {
        "line": 302,
        "fullcodeline": "READ_BITS(verbatim_bits, extra);"
    },
    {
        "line": 303,
        "fullcodeline": "match_offset += verbatim_bits;"
    },
    {
        "line": 327,
        "fullcodeline": "REMOVE_BITS(3); /* '110' -> 12 extra length bits + 0x500 */"
    },
    {
        "line": 328,
        "fullcodeline": "READ_BITS(extra_len, 12);"
    },
    {
        "line": 329,
        "fullcodeline": "extra_len += 0x500;"
    },
    {
        "line": 208,
        "fullcodeline": "REMOVE_BITS(3); /* '111' -> 15 extra length bits */"
    },
    {
        "line": 209,
        "fullcodeline": "READ_BITS(extra_len, 15);"
    },
    {
        "line": 307,
        "fullcodeline": "match_offset = 1;"
    },
    {
        "line": 332,
        "fullcodeline": "REMOVE_BITS(3); /* '111' -> 15 extra length bits */"
    },
    {
        "line": 333,
        "fullcodeline": "READ_BITS(extra_len, 15);"
    }
]