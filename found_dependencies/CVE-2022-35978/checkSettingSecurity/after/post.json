[
    {
        "line": 6,
        "fullcodeline": "bool is_mainmenu = false;"
    },
    {
        "line": 8,
        "fullcodeline": "is_mainmenu = ModApiBase::getGuiEngine(L) != nullptr;"
    },
    {
        "line": 17,
        "fullcodeline": "const char *disallowed[] = {"
    },
    {
        "line": 3,
        "fullcodeline": "if (ScriptApiSecurity::isSecure(L) && name.compare(0, 7, \"secure.\") == 0)"
    },
    {
        "line": 10,
        "fullcodeline": "if (!is_mainmenu && (name == \"mg_name\" || name == \"mg_flags\")) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (!is_mainmenu) {"
    },
    {
        "line": 11,
        "fullcodeline": "errorstream << \"Tried to set global setting \" << name << \", ignoring. \""
    },
    {
        "line": 13,
        "fullcodeline": "infostream << script_get_backtrace(L) << std::endl;"
    },
    {
        "line": 4,
        "fullcodeline": "throw LuaError(\"Attempted to set secure setting.\");"
    },
    {
        "line": 14,
        "fullcodeline": "return -1;"
    },
    {
        "line": 23,
        "fullcodeline": "if (name == name2)"
    },
    {
        "line": 24,
        "fullcodeline": "throw LuaError(\"Attempted to set disallowed setting.\");"
    }
]