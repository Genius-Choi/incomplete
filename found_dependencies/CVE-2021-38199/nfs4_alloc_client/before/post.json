[
    {
        "line": 4,
        "fullcodeline": "struct nfs_client *clp = nfs_alloc_client(cl_init);"
    },
    {
        "line": 8,
        "fullcodeline": "err = nfs_get_cb_ident_idr(clp, cl_init->minorversion);"
    },
    {
        "line": 17,
        "fullcodeline": "spin_lock_init(&clp->cl_lock);"
    },
    {
        "line": 18,
        "fullcodeline": "INIT_DELAYED_WORK(&clp->cl_renewd, nfs4_renew_state);"
    },
    {
        "line": 19,
        "fullcodeline": "INIT_LIST_HEAD(&clp->cl_ds_clients);"
    },
    {
        "line": 20,
        "fullcodeline": "rpc_init_wait_queue(&clp->cl_rpcwaitq, \"NFS client\");"
    },
    {
        "line": 21,
        "fullcodeline": "clp->cl_state = 1 << NFS4CLNT_LEASE_EXPIRED;"
    },
    {
        "line": 23,
        "fullcodeline": "clp->cl_mig_gen = 1;"
    },
    {
        "line": 27,
        "fullcodeline": "INIT_LIST_HEAD(&clp->pending_cb_stateids);"
    },
    {
        "line": 31,
        "fullcodeline": "nfs_free_client(clp);"
    },
    {
        "line": 5,
        "fullcodeline": "if (IS_ERR(clp))"
    },
    {
        "line": 12,
        "fullcodeline": "if (cl_init->minorversion > NFS4_MAX_MINOR_VERSION) {"
    },
    {
        "line": 32,
        "fullcodeline": "return ERR_PTR(err);"
    },
    {
        "line": 13,
        "fullcodeline": "err = -EINVAL;"
    }
]