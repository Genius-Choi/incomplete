[
    {
        "line": 5,
        "fullcodeline": "struct r_bin_t *rbin = binfile->rbin;"
    },
    {
        "line": 6,
        "fullcodeline": "const ut8 *p4 = r_buf_get_at (binfile->buf, debug_info_off, NULL);"
    },
    {
        "line": 7,
        "fullcodeline": "const ut8 *p4_end = p4 + binfile->buf->length - debug_info_off;"
    },
    {
        "line": 11,
        "fullcodeline": "ut16 argReg = regsz - ins_size;"
    },
    {
        "line": 12,
        "fullcodeline": "ut64 source_file_idx = c->source_file;"
    },
    {
        "line": 13,
        "fullcodeline": "RList *params, *debug_positions, *emitted_debug_locals = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "bool keep = true;"
    },
    {
        "line": 18,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &line_start);"
    },
    {
        "line": 19,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &parameters_size);"
    },
    {
        "line": 22,
        "fullcodeline": "ut32 address = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "ut32 line = line_start;"
    },
    {
        "line": 32,
        "fullcodeline": "struct dex_debug_local_t debug_locals[regsz];"
    },
    {
        "line": 48,
        "fullcodeline": "RListIter *iter = r_list_iterator (params);"
    },
    {
        "line": 53,
        "fullcodeline": "r_list_foreach (params, iter, type) {"
    },
    {
        "line": 86,
        "fullcodeline": "ut8 opcode = *(p4++) & 0xff;"
    },
    {
        "line": 261,
        "fullcodeline": "char offset[64];"
    },
    {
        "line": 266,
        "fullcodeline": "r_list_foreach (debug_positions, iter1, pos) {"
    },
    {
        "line": 284,
        "fullcodeline": "r_list_foreach (debug_positions, iter2, position) {"
    },
    {
        "line": 293,
        "fullcodeline": "r_list_foreach (emitted_debug_locals, iter3, local) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (argReg > regsz) {"
    },
    {
        "line": 33,
        "fullcodeline": "memset (debug_locals, 0, sizeof (struct dex_debug_local_t) * regsz);"
    },
    {
        "line": 60,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &param_type_idx); // read uleb128p1"
    },
    {
        "line": 61,
        "fullcodeline": "param_type_idx -= 1;"
    },
    {
        "line": 62,
        "fullcodeline": "name = getstr (bin, param_type_idx);"
    },
    {
        "line": 83,
        "fullcodeline": "if (p4 <= 0) {"
    },
    {
        "line": 256,
        "fullcodeline": "if (!binfile->sdb_addrinfo) {"
    },
    {
        "line": 268,
        "fullcodeline": "offset_ptr = sdb_itoa (pos->address + paddr, offset, 16);"
    },
    {
        "line": 269,
        "fullcodeline": "sdb_set (binfile->sdb_addrinfo, offset_ptr, fileline, 0);"
    },
    {
        "line": 273,
        "fullcodeline": "if (!dexdump) {"
    },
    {
        "line": 308,
        "fullcodeline": "for (reg = 0; reg < regsz; reg++) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (!(debug_positions = r_list_newf ((RListFree)free))) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (!(emitted_debug_locals = r_list_newf ((RListFree)free))) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (!(MA & 0x0008)) {"
    },
    {
        "line": 40,
        "fullcodeline": "argReg++;"
    },
    {
        "line": 42,
        "fullcodeline": "if (!(params = dex_method_signature2 (bin, MI))) {"
    },
    {
        "line": 253,
        "fullcodeline": "opcode = *(p4++) & 0xff;"
    },
    {
        "line": 257,
        "fullcodeline": "binfile->sdb_addrinfo = sdb_new0 ();"
    },
    {
        "line": 36,
        "fullcodeline": "debug_locals[argReg].descriptor = r_str_newf(\"%s;\", class_name);"
    },
    {
        "line": 54,
        "fullcodeline": "if ((argReg >= regsz) || !type || parameters_size <= 0) {"
    },
    {
        "line": 95,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &addr_diff);"
    },
    {
        "line": 96,
        "fullcodeline": "address += addr_diff;"
    },
    {
        "line": 101,
        "fullcodeline": "st64 line_diff = r_sleb128 (&p4, p4_end);"
    },
    {
        "line": 102,
        "fullcodeline": "line += line_diff;"
    },
    {
        "line": 110,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &register_num);"
    },
    {
        "line": 111,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &name_idx);"
    },
    {
        "line": 112,
        "fullcodeline": "name_idx -= 1;"
    },
    {
        "line": 113,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &type_idx);"
    },
    {
        "line": 114,
        "fullcodeline": "type_idx -= 1;"
    },
    {
        "line": 138,
        "fullcodeline": "debug_locals[register_num].name = getstr (bin, name_idx);"
    },
    {
        "line": 139,
        "fullcodeline": "debug_locals[register_num].descriptor = dex_type_descriptor (bin, type_idx);"
    },
    {
        "line": 140,
        "fullcodeline": "debug_locals[register_num].startAddress = address;"
    },
    {
        "line": 141,
        "fullcodeline": "debug_locals[register_num].signature = NULL;"
    },
    {
        "line": 142,
        "fullcodeline": "debug_locals[register_num].live = true;"
    },
    {
        "line": 152,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &register_num);"
    },
    {
        "line": 153,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &name_idx);"
    },
    {
        "line": 154,
        "fullcodeline": "name_idx -= 1;"
    },
    {
        "line": 155,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &type_idx);"
    },
    {
        "line": 156,
        "fullcodeline": "type_idx -= 1;"
    },
    {
        "line": 157,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &sig_idx);"
    },
    {
        "line": 158,
        "fullcodeline": "sig_idx -= 1;"
    },
    {
        "line": 184,
        "fullcodeline": "debug_locals[register_num].name = getstr (bin, name_idx);"
    },
    {
        "line": 185,
        "fullcodeline": "debug_locals[register_num].descriptor = dex_type_descriptor (bin, type_idx);"
    },
    {
        "line": 186,
        "fullcodeline": "debug_locals[register_num].startAddress = address;"
    },
    {
        "line": 187,
        "fullcodeline": "debug_locals[register_num].signature = getstr (bin, sig_idx);"
    },
    {
        "line": 188,
        "fullcodeline": "debug_locals[register_num].live = true;"
    },
    {
        "line": 194,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &register_num);"
    },
    {
        "line": 212,
        "fullcodeline": "debug_locals[register_num].live = false;"
    },
    {
        "line": 218,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &register_num);"
    },
    {
        "line": 231,
        "fullcodeline": "p4 = r_uleb128 (p4, p4_end - p4, &source_file_idx);"
    },
    {
        "line": 232,
        "fullcodeline": "source_file_idx--;"
    },
    {
        "line": 237,
        "fullcodeline": "int adjusted_opcode = opcode - 0x0a;"
    },
    {
        "line": 238,
        "fullcodeline": "address += (adjusted_opcode / 15);"
    },
    {
        "line": 239,
        "fullcodeline": "line += -4 + (adjusted_opcode % 15);"
    },
    {
        "line": 240,
        "fullcodeline": "struct dex_debug_position_t *position ="
    },
    {
        "line": 246,
        "fullcodeline": "position->source_file_idx = source_file_idx;"
    },
    {
        "line": 247,
        "fullcodeline": "position->address = address;"
    },
    {
        "line": 248,
        "fullcodeline": "position->line = line;"
    },
    {
        "line": 249,
        "fullcodeline": "r_list_append (debug_positions, position);"
    },
    {
        "line": 115,
        "fullcodeline": "if (register_num >= regsz) {"
    },
    {
        "line": 159,
        "fullcodeline": "if (register_num >= regsz) {"
    },
    {
        "line": 242,
        "fullcodeline": "if (!position) {"
    },
    {
        "line": 311,
        "fullcodeline": "rbin->cb_printf ("
    },
    {
        "line": 123,
        "fullcodeline": "struct dex_debug_local_t *local = malloc ("
    },
    {
        "line": 129,
        "fullcodeline": "local->name = debug_locals[register_num].name;"
    },
    {
        "line": 130,
        "fullcodeline": "local->descriptor = debug_locals[register_num].descriptor;"
    },
    {
        "line": 131,
        "fullcodeline": "local->startAddress = debug_locals[register_num].startAddress;"
    },
    {
        "line": 132,
        "fullcodeline": "local->signature = debug_locals[register_num].signature;"
    },
    {
        "line": 133,
        "fullcodeline": "local->live = true;"
    },
    {
        "line": 134,
        "fullcodeline": "local->reg = register_num;"
    },
    {
        "line": 135,
        "fullcodeline": "local->endAddress = address;"
    },
    {
        "line": 136,
        "fullcodeline": "r_list_append (emitted_debug_locals, local);"
    },
    {
        "line": 168,
        "fullcodeline": "struct dex_debug_local_t *local = malloc ("
    },
    {
        "line": 174,
        "fullcodeline": "local->name = debug_locals[register_num].name;"
    },
    {
        "line": 175,
        "fullcodeline": "local->descriptor = debug_locals[register_num].descriptor;"
    },
    {
        "line": 176,
        "fullcodeline": "local->startAddress = debug_locals[register_num].startAddress;"
    },
    {
        "line": 177,
        "fullcodeline": "local->signature = debug_locals[register_num].signature;"
    },
    {
        "line": 178,
        "fullcodeline": "local->live = true;"
    },
    {
        "line": 179,
        "fullcodeline": "local->reg = register_num;"
    },
    {
        "line": 180,
        "fullcodeline": "local->endAddress = address;"
    },
    {
        "line": 181,
        "fullcodeline": "r_list_append (emitted_debug_locals, local);"
    },
    {
        "line": 197,
        "fullcodeline": "struct dex_debug_local_t *local = malloc ("
    },
    {
        "line": 203,
        "fullcodeline": "local->name = debug_locals[register_num].name;"
    },
    {
        "line": 204,
        "fullcodeline": "local->descriptor = debug_locals[register_num].descriptor;"
    },
    {
        "line": 205,
        "fullcodeline": "local->startAddress = debug_locals[register_num].startAddress;"
    },
    {
        "line": 206,
        "fullcodeline": "local->signature = debug_locals[register_num].signature;"
    },
    {
        "line": 207,
        "fullcodeline": "local->live = true;"
    },
    {
        "line": 208,
        "fullcodeline": "local->reg = register_num;"
    },
    {
        "line": 209,
        "fullcodeline": "local->endAddress = address;"
    },
    {
        "line": 210,
        "fullcodeline": "r_list_append (emitted_debug_locals, local);"
    },
    {
        "line": 220,
        "fullcodeline": "debug_locals[register_num].startAddress = address;"
    },
    {
        "line": 221,
        "fullcodeline": "debug_locals[register_num].live = true;"
    },
    {
        "line": 241,
        "fullcodeline": "malloc (sizeof (struct dex_debug_position_t));"
    },
    {
        "line": 319,
        "fullcodeline": "rbin->cb_printf ("
    },
    {
        "line": 125,
        "fullcodeline": "if (!local) {"
    },
    {
        "line": 170,
        "fullcodeline": "if (!local) {"
    },
    {
        "line": 199,
        "fullcodeline": "if (!local) {"
    }
]