[
    {
        "line": 2,
        "fullcodeline": "char *t = strdup (str);"
    },
    {
        "line": 3,
        "fullcodeline": "int operand = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "char *token = t;"
    },
    {
        "line": 6,
        "fullcodeline": "int imm_count = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int mem_opt = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!token) {"
    },
    {
        "line": 13,
        "fullcodeline": "char *next = strchr (token, ',');"
    },
    {
        "line": 24,
        "fullcodeline": "op->operands[operand].type = ARM_NOTYPE;"
    },
    {
        "line": 25,
        "fullcodeline": "op->operands[operand].reg_type = ARM_UNDEFINED;"
    },
    {
        "line": 26,
        "fullcodeline": "op->operands[operand].shift = ARM_NO_SHIFT;"
    },
    {
        "line": 128,
        "fullcodeline": "token = next;"
    },
    {
        "line": 130,
        "fullcodeline": "operand ++;"
    },
    {
        "line": 17,
        "fullcodeline": "while (token[0] == ' ') {"
    },
    {
        "line": 20,
        "fullcodeline": "if (operand >= MAX_OPERANDS) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (operand > MAX_OPERANDS) {"
    },
    {
        "line": 18,
        "fullcodeline": "token++;"
    },
    {
        "line": 28,
        "fullcodeline": "while (token[0] == ' ' || token[0] == '[' || token[0] == ']') {"
    },
    {
        "line": 29,
        "fullcodeline": "token ++;"
    },
    {
        "line": 32,
        "fullcodeline": "if (!strncmp (token, \"lsl\", 3)) {"
    },
    {
        "line": 33,
        "fullcodeline": "op->operands[operand].shift = ARM_LSL;"
    },
    {
        "line": 39,
        "fullcodeline": "if (strlen (token) > 4 && op->operands[operand].shift != ARM_NO_SHIFT) {"
    },
    {
        "line": 40,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 41,
        "fullcodeline": "op->operands[operand].shift_amount = r_num_math (NULL, token + 4);"
    },
    {
        "line": 45,
        "fullcodeline": "operand ++;"
    },
    {
        "line": 46,
        "fullcodeline": "token = next;"
    },
    {
        "line": 56,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 59,
        "fullcodeline": "op->operands[operand].reg = r_num_math (NULL, token + 1);"
    },
    {
        "line": 65,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 67,
        "fullcodeline": "op->operands[operand].reg_type = ARM_REG32;"
    },
    {
        "line": 68,
        "fullcodeline": "op->operands[operand].reg = r_num_math (NULL, token + 1);"
    },
    {
        "line": 74,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 75,
        "fullcodeline": "op->operands[operand].type = ARM_FP;"
    },
    {
        "line": 94,
        "fullcodeline": "mem_opt = get_mem_option (token);"
    },
    {
        "line": 111,
        "fullcodeline": "mem_opt = get_mem_option (token);"
    },
    {
        "line": 122,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 123,
        "fullcodeline": "op->operands[operand].type = ARM_CONSTANT;"
    },
    {
        "line": 52,
        "fullcodeline": "x = strchr (token, ',');"
    },
    {
        "line": 76,
        "fullcodeline": "op->operands[operand].reg = r_num_math (NULL, token + 1);"
    },
    {
        "line": 95,
        "fullcodeline": "if (mem_opt != -1) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (mem_opt != -1) {"
    },
    {
        "line": 119,
        "fullcodeline": "op->operands[operand].sign = -1;"
    },
    {
        "line": 124,
        "fullcodeline": "op->operands[operand].immediate = r_num_math (NULL, token);"
    },
    {
        "line": 15,
        "fullcodeline": "*next++ = 0;"
    },
    {
        "line": 80,
        "fullcodeline": "if (token[1] == 'P' || token [1] == 'p') {"
    },
    {
        "line": 88,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 96,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 113,
        "fullcodeline": "op->operands_count ++;"
    },
    {
        "line": 34,
        "fullcodeline": "} else if (!strncmp (token, \"lsr\", 3)) {"
    },
    {
        "line": 35,
        "fullcodeline": "op->operands[operand].shift = ARM_LSR;"
    },
    {
        "line": 90,
        "fullcodeline": "op->operands[operand].reg_type = ARM_SP | ARM_REG64;"
    },
    {
        "line": 82,
        "fullcodeline": "for (i = 0; msr_const[i].name; i++) {"
    },
    {
        "line": 36,
        "fullcodeline": "} else if (!strncmp (token, \"asr\", 3)) {"
    },
    {
        "line": 37,
        "fullcodeline": "op->operands[operand].shift = ARM_ASR;"
    },
    {
        "line": 83,
        "fullcodeline": "if (!r_str_ncasecmp (token, msr_const[i].name, strlen (msr_const[i].name))) {"
    }
]