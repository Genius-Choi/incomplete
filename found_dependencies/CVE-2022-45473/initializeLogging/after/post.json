[
    {
        "line": 108,
        "fullcodeline": "m_bLoggingInitialized = true ;"
    },
    {
        "line": 4,
        "fullcodeline": "if( m_bNoConfig || m_Config->getConsoleLogTarget() || m_bConsoleLogging ) {"
    },
    {
        "line": 22,
        "fullcodeline": "if( !m_bNoConfig ) {"
    },
    {
        "line": 112,
        "fullcodeline": "std::cout << \"FAILURE creating logger: \" << e.what() << std::endl;"
    },
    {
        "line": 6,
        "fullcodeline": "m_sinkConsole.reset("
    },
    {
        "line": 9,
        "fullcodeline": "m_sinkConsole->locked_backend()->add_stream( boost::shared_ptr<std::ostream>(&std::clog, boost::null_deleter()));"
    },
    {
        "line": 12,
        "fullcodeline": "m_sinkConsole->locked_backend()->auto_flush(true);"
    },
    {
        "line": 14,
        "fullcodeline": "m_sinkConsole->set_formatter( &my_formatter ) ;"
    },
    {
        "line": 16,
        "fullcodeline": "logging::core::get()->add_sink(m_sinkConsole);"
    },
    {
        "line": 18,
        "fullcodeline": "logging::core::get()->set_filter("
    },
    {
        "line": 103,
        "fullcodeline": "logging::core::get()->set_filter("
    },
    {
        "line": 7,
        "fullcodeline": "new sinks::synchronous_sink< sinks::text_ostream_backend >()"
    },
    {
        "line": 19,
        "fullcodeline": "expr::attr<severity_levels>(\"Severity\") <= m_current_severity_threshold"
    },
    {
        "line": 31,
        "fullcodeline": "if( m_Config->getSyslogTarget( syslogAddress, syslogPort ) ) {"
    },
    {
        "line": 65,
        "fullcodeline": "if( m_Config->getFileLogTarget( name, archiveDirectory, rotationSize, autoFlush, maxSize, minSize, maxFiles ) ) {"
    },
    {
        "line": 104,
        "fullcodeline": "expr::attr<severity_levels>(\"Severity\") <= m_current_severity_threshold"
    },
    {
        "line": 32,
        "fullcodeline": "m_Config->getSyslogFacility( facility ) ;"
    },
    {
        "line": 34,
        "fullcodeline": "m_sinkSysLog.reset("
    },
    {
        "line": 42,
        "fullcodeline": "sinks::syslog::custom_severity_mapping< severity_levels > mapping(\"Severity\");"
    },
    {
        "line": 49,
        "fullcodeline": "m_sinkSysLog->locked_backend()->set_severity_mapper(mapping);"
    },
    {
        "line": 52,
        "fullcodeline": "m_sinkSysLog->locked_backend()->set_target_address( syslogAddress.c_str(), syslogPort );"
    },
    {
        "line": 54,
        "fullcodeline": "logging::core::get()->add_global_attribute(\"RecordID\", attrs::counter< unsigned int >());"
    },
    {
        "line": 57,
        "fullcodeline": "logging::core::get()->add_sink(m_sinkSysLog);"
    },
    {
        "line": 67,
        "fullcodeline": "m_sinkTextFile.reset("
    },
    {
        "line": 85,
        "fullcodeline": "m_sinkTextFile->set_formatter( &my_formatter ) ;"
    },
    {
        "line": 87,
        "fullcodeline": "m_sinkTextFile->locked_backend()->set_file_collector(sinks::file::make_collector("
    },
    {
        "line": 94,
        "fullcodeline": "logging::core::get()->add_sink(m_sinkTextFile);"
    },
    {
        "line": 95,
        "fullcodeline": "boost::filesystem::permissions(name,"
    },
    {
        "line": 35,
        "fullcodeline": "new sinks::synchronous_sink< sinks::syslog_backend >("
    },
    {
        "line": 68,
        "fullcodeline": "new sinks::synchronous_sink< sinks::text_file_backend >("
    },
    {
        "line": 96,
        "fullcodeline": "boost::filesystem::perms::owner_read |"
    },
    {
        "line": 37,
        "fullcodeline": ", keywords::facility = facility"
    },
    {
        "line": 69,
        "fullcodeline": "keywords::file_name = name,"
    },
    {
        "line": 70,
        "fullcodeline": "keywords::rotation_size = rotationSize * 1000000,"
    },
    {
        "line": 71,
        "fullcodeline": "keywords::auto_flush = autoFlush,"
    },
    {
        "line": 72,
        "fullcodeline": "keywords::time_based_rotation = sinks::file::rotation_at_time_point(0, 0, 0),"
    },
    {
        "line": 73,
        "fullcodeline": "keywords::open_mode = (std::ios::out | std::ios::app),"
    },
    {
        "line": 74,
        "fullcodeline": "keywords::format ="
    },
    {
        "line": 88,
        "fullcodeline": "keywords::target = archiveDirectory,"
    },
    {
        "line": 89,
        "fullcodeline": "keywords::max_size = maxSize * 1000000,"
    },
    {
        "line": 90,
        "fullcodeline": "keywords::min_free_space = minSize * 1000000,"
    },
    {
        "line": 91,
        "fullcodeline": "keywords::max_files = maxFiles"
    },
    {
        "line": 76,
        "fullcodeline": "expr::stream"
    },
    {
        "line": 79,
        "fullcodeline": "<< expr::format_date_time< boost::posix_time::ptime >(\"TimeStamp\", \"%Y-%m-%d %H:%M:%S\")"
    },
    {
        "line": 77,
        "fullcodeline": "<< expr::attr< unsigned int >(\"RecordID\")"
    }
]