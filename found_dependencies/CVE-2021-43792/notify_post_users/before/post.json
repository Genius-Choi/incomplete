[
    {
        "line": 6,
        "fullcodeline": "condition = +<<~SQL"
    },
    {
        "line": 38,
        "fullcodeline": "tag_ids = post.topic.topic_tags.pluck('topic_tags.tag_id')"
    },
    {
        "line": 54,
        "fullcodeline": "notify = User.where(condition,"
    },
    {
        "line": 65,
        "fullcodeline": "exclude_user_ids = notified.map(&:id)"
    },
    {
        "line": 68,
        "fullcodeline": "DiscourseEvent.trigger(:before_create_notifications_for_users, notify, post)"
    },
    {
        "line": 70,
        "fullcodeline": "already_seen_user_ids = Set.new TopicUser.where(topic_id: post.topic.id).where(\"highest_seen_post_number >= ?\", post.post_number).pluck(:user_id)"
    },
    {
        "line": 1,
        "fullcodeline": "def notify_post_users(post, notified, include_topic_watchers: true, include_category_watchers: true, include_tag_watchers: true, new_record: false)"
    },
    {
        "line": 2,
        "fullcodeline": "return unless post.topic"
    },
    {
        "line": 40,
        "fullcodeline": "if include_tag_watchers && tag_ids.present?"
    },
    {
        "line": 72,
        "fullcodeline": "each_user_in_batches(notify) do |user|"
    },
    {
        "line": 15,
        "fullcodeline": "condition.sub! \"/*topic*/\", <<~SQL"
    },
    {
        "line": 25,
        "fullcodeline": "condition.sub! \"/*category*/\", <<~SQL"
    },
    {
        "line": 41,
        "fullcodeline": "condition.sub! \"/*tags*/\", <<~SQL"
    },
    {
        "line": 61,
        "fullcodeline": "if post.topic.private_message?"
    },
    {
        "line": 66,
        "fullcodeline": "notify = notify.where(\"id NOT IN (?)\", exclude_user_ids) if exclude_user_ids.present?"
    },
    {
        "line": 57,
        "fullcodeline": "category_id: post.topic.category_id,"
    },
    {
        "line": 62,
        "fullcodeline": "notify = notify.where(staged: false).staff"
    }
]