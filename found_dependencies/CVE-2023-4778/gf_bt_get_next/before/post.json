[
    {
        "line": 4,
        "fullcodeline": "Bool go = 1;"
    },
    {
        "line": 6,
        "fullcodeline": "gf_bt_check_line(parser);"
    },
    {
        "line": 7,
        "fullcodeline": "i=0;"
    },
    {
        "line": 8,
        "fullcodeline": "has_quote = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "parser->cur_buffer[i] = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "parser->line_pos += i;"
    },
    {
        "line": 38,
        "fullcodeline": "parser->cur_buffer[i] = parser->line_buffer[parser->line_pos + i];"
    },
    {
        "line": 39,
        "fullcodeline": "i++;"
    },
    {
        "line": 10,
        "fullcodeline": "if (parser->line_buffer[parser->line_pos + i] == '\\\"') {"
    },
    {
        "line": 18,
        "fullcodeline": "if (!has_quote) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (parser->line_pos+i==parser->line_size) break;"
    },
    {
        "line": 13,
        "fullcodeline": "parser->line_pos += 1;"
    },
    {
        "line": 11,
        "fullcodeline": "if (!has_quote) has_quote = 1;"
    },
    {
        "line": 15,
        "fullcodeline": "if (parser->line_pos+i==parser->line_size) break;"
    },
    {
        "line": 36,
        "fullcodeline": "if (!go) break;"
    },
    {
        "line": 19,
        "fullcodeline": "switch (parser->line_buffer[parser->line_pos + i]) {"
    },
    {
        "line": 30,
        "fullcodeline": "go = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "else has_quote = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "if (point_break) go = 0;"
    }
]