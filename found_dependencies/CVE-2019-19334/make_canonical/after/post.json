[
    {
        "line": 3,
        "fullcodeline": "const uint16_t buf_len = 511;"
    },
    {
        "line": 4,
        "fullcodeline": "char buf[buf_len + 1];"
    },
    {
        "line": 5,
        "fullcodeline": "struct lys_type_bit **bits = NULL;"
    },
    {
        "line": 164,
        "fullcodeline": "if (strcmp(buf, *value)) {"
    },
    {
        "line": 17,
        "fullcodeline": "bits = (struct lys_type_bit **)data1;"
    },
    {
        "line": 20,
        "fullcodeline": "buf[0] = '\\0';"
    },
    {
        "line": 37,
        "fullcodeline": "module_name = (const char *)data1;"
    },
    {
        "line": 49,
        "fullcodeline": "exp = lyxp_parse_expr(ctx, *value);"
    },
    {
        "line": 50,
        "fullcodeline": "LY_CHECK_ERR_RETURN(!exp, LOGINT(ctx), -1);"
    },
    {
        "line": 52,
        "fullcodeline": "module_name = NULL;"
    },
    {
        "line": 53,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 108,
        "fullcodeline": "buf[count] = '\\0';"
    },
    {
        "line": 110,
        "fullcodeline": "lyxp_expr_free(exp);"
    },
    {
        "line": 165,
        "fullcodeline": "lydict_remove(ctx, *value);"
    },
    {
        "line": 166,
        "fullcodeline": "*value = lydict_insert(ctx, buf, 0);"
    },
    {
        "line": 21,
        "fullcodeline": "for (i = 0; i < count; i++) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (!strchr(*value, ':')) {"
    },
    {
        "line": 54,
        "fullcodeline": "for (i = 0; (unsigned)i < exp->used; ++i) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (count > buf_len) {"
    },
    {
        "line": 18,
        "fullcodeline": "count = *((int *)data2);"
    },
    {
        "line": 40,
        "fullcodeline": "LY_CHECK_ERR_RETURN(strlen(module_name) + 1 + strlen(*value) > buf_len, LOGBUF(*value), -1);"
    },
    {
        "line": 41,
        "fullcodeline": "sprintf(buf, \"%s:%s\", module_name, *value);"
    },
    {
        "line": 104,
        "fullcodeline": "LOGINT(ctx);"
    },
    {
        "line": 105,
        "fullcodeline": "lyxp_expr_free(exp);"
    },
    {
        "line": 114,
        "fullcodeline": "num = *((int64_t *)data1);"
    },
    {
        "line": 115,
        "fullcodeline": "c = *((uint8_t *)data2);"
    },
    {
        "line": 136,
        "fullcodeline": "buf[count - 1] = '.';"
    },
    {
        "line": 147,
        "fullcodeline": "num = *((int64_t *)data1);"
    },
    {
        "line": 155,
        "fullcodeline": "unum = *((uint64_t *)data1);"
    },
    {
        "line": 22,
        "fullcodeline": "if (!bits[i]) {"
    },
    {
        "line": 43,
        "fullcodeline": "LY_CHECK_ERR_RETURN(strlen(*value) > buf_len, LOGBUF(*value), -1);"
    },
    {
        "line": 44,
        "fullcodeline": "strcpy(buf, *value);"
    },
    {
        "line": 58,
        "fullcodeline": "if (i && ((end = exp->expr + exp->expr_pos[i - 1] + exp->tok_len[i - 1]) != cur_expr)) {"
    },
    {
        "line": 68,
        "fullcodeline": "if ((exp->tokens[i] == LYXP_TOKEN_NAMETEST) && (end = strnchr(cur_expr, ':', exp->tok_len[i]))) {"
    },
    {
        "line": 106,
        "fullcodeline": "return -1;"
    },
    {
        "line": 118,
        "fullcodeline": "if ( (num > 0 && (count - 1) <= c)"
    },
    {
        "line": 126,
        "fullcodeline": "for (i = c, j = 1; i > 0 ; i--) {"
    },
    {
        "line": 139,
        "fullcodeline": "sprintf(buf, \"0.0\");"
    },
    {
        "line": 27,
        "fullcodeline": "LY_CHECK_ERR_RETURN(strlen(buf) + 1 + strlen(bits[i]->name) > buf_len, LOGBUF(bits[i]->name), -1);"
    },
    {
        "line": 28,
        "fullcodeline": "sprintf(buf + strlen(buf), \" %s\", bits[i]->name);"
    },
    {
        "line": 64,
        "fullcodeline": "strncpy(&buf[count], end, cur_expr - end);"
    },
    {
        "line": 65,
        "fullcodeline": "count += cur_expr - end;"
    },
    {
        "line": 70,
        "fullcodeline": "++end;"
    },
    {
        "line": 71,
        "fullcodeline": "j = end - cur_expr;"
    },
    {
        "line": 83,
        "fullcodeline": "module_name = cur_expr;"
    },
    {
        "line": 91,
        "fullcodeline": "strncpy(&buf[count], end, exp->tok_len[i] - j);"
    },
    {
        "line": 92,
        "fullcodeline": "count += exp->tok_len[i] - j;"
    },
    {
        "line": 119,
        "fullcodeline": "|| (count - 2) <= c ) {"
    },
    {
        "line": 134,
        "fullcodeline": "count--;"
    },
    {
        "line": 30,
        "fullcodeline": "LY_CHECK_ERR_RETURN(strlen(bits[i]->name) > buf_len, LOGBUF(bits[i]->name), -1);"
    },
    {
        "line": 31,
        "fullcodeline": "strcpy(buf, bits[i]->name);"
    },
    {
        "line": 59,
        "fullcodeline": "if (count + (cur_expr - end) > buf_len) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (!module_name || strncmp(cur_expr, module_name, j)) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (count + (exp->tok_len[i] - j) > buf_len) {"
    },
    {
        "line": 99,
        "fullcodeline": "strncpy(&buf[count], &exp->expr[exp->expr_pos[i]], exp->tok_len[i]);"
    },
    {
        "line": 100,
        "fullcodeline": "count += exp->tok_len[i];"
    },
    {
        "line": 127,
        "fullcodeline": "if (j && i > 1 && buf[count - 2] == '0') {"
    },
    {
        "line": 60,
        "fullcodeline": "lyxp_expr_free(exp);"
    },
    {
        "line": 61,
        "fullcodeline": "LOGBUF(end);"
    },
    {
        "line": 80,
        "fullcodeline": "strncpy(&buf[count], cur_expr, j);"
    },
    {
        "line": 81,
        "fullcodeline": "count += j;"
    },
    {
        "line": 87,
        "fullcodeline": "lyxp_expr_free(exp);"
    },
    {
        "line": 88,
        "fullcodeline": "LOGBUF(end);"
    },
    {
        "line": 94,
        "fullcodeline": "if (count + exp->tok_len[i] > buf_len) {"
    },
    {
        "line": 129,
        "fullcodeline": "buf[count - 1] = '\\0';"
    },
    {
        "line": 62,
        "fullcodeline": "return -1;"
    },
    {
        "line": 75,
        "fullcodeline": "if (count + j > buf_len) {"
    },
    {
        "line": 89,
        "fullcodeline": "return -1;"
    },
    {
        "line": 95,
        "fullcodeline": "lyxp_expr_free(exp);"
    },
    {
        "line": 96,
        "fullcodeline": "LOGBUF(&exp->expr[exp->expr_pos[i]]);"
    },
    {
        "line": 131,
        "fullcodeline": "j = 0;"
    },
    {
        "line": 132,
        "fullcodeline": "buf[count - 1] = buf[count - 2];"
    },
    {
        "line": 76,
        "fullcodeline": "lyxp_expr_free(exp);"
    },
    {
        "line": 77,
        "fullcodeline": "LOGBUF(cur_expr);"
    },
    {
        "line": 97,
        "fullcodeline": "return -1;"
    },
    {
        "line": 78,
        "fullcodeline": "return -1;"
    }
]