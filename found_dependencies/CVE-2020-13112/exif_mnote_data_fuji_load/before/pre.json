[
    {
        "line": 4,
        "fullcodeline": "ExifMnoteDataFuji *n = (ExifMnoteDataFuji*) en;"
    },
    {
        "line": 13,
        "fullcodeline": "datao = 6 + n->offset;"
    },
    {
        "line": 20,
        "fullcodeline": "n->order = EXIF_BYTE_ORDER_INTEL;"
    },
    {
        "line": 21,
        "fullcodeline": "datao += exif_get_long (buf + datao + 8, EXIF_BYTE_ORDER_INTEL);"
    },
    {
        "line": 30,
        "fullcodeline": "c = exif_get_short (buf + datao, EXIF_BYTE_ORDER_INTEL);"
    },
    {
        "line": 31,
        "fullcodeline": "datao += 2;"
    },
    {
        "line": 34,
        "fullcodeline": "exif_mnote_data_fuji_clear (n);"
    },
    {
        "line": 37,
        "fullcodeline": "n->entries = exif_mem_alloc (en->mem, sizeof (MnoteFujiEntry) * c);"
    },
    {
        "line": 44,
        "fullcodeline": "tcount = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!n || !buf || !buf_size) {"
    },
    {
        "line": 9,
        "fullcodeline": "exif_log (en->log, EXIF_LOG_CODE_CORRUPT_DATA,"
    },
    {
        "line": 14,
        "fullcodeline": "if ((datao + 12 < datao) || (datao + 12 < 12) || (datao + 12 > buf_size)) {"
    },
    {
        "line": 22,
        "fullcodeline": "if ((datao + 2 < datao) || (datao + 2 < 2) ||"
    },
    {
        "line": 23,
        "fullcodeline": "(datao + 2 > buf_size)) {"
    },
    {
        "line": 45,
        "fullcodeline": "for (i = c, o = datao; i; --i, o += 12) {"
    },
    {
        "line": 53,
        "fullcodeline": "n->entries[tcount].tag        = exif_get_short (buf + o, n->order);"
    },
    {
        "line": 54,
        "fullcodeline": "n->entries[tcount].format     = exif_get_short (buf + o + 2, n->order);"
    },
    {
        "line": 55,
        "fullcodeline": "n->entries[tcount].components = exif_get_long (buf + o + 4, n->order);"
    },
    {
        "line": 58,
        "fullcodeline": "exif_log (en->log, EXIF_LOG_CODE_DEBUG, \"ExifMnoteDataFuji\","
    },
    {
        "line": 66,
        "fullcodeline": "s = exif_format_get_size (n->entries[tcount].format) * n->entries[tcount].components;"
    },
    {
        "line": 90,
        "fullcodeline": "++tcount;"
    },
    {
        "line": 39,
        "fullcodeline": "EXIF_LOG_NO_MEMORY(en->log, \"ExifMnoteDataFuji\", sizeof (MnoteFujiEntry) * c);"
    },
    {
        "line": 60,
        "fullcodeline": "mnote_fuji_tag_get_name (n->entries[tcount].tag));"
    },
    {
        "line": 47,
        "fullcodeline": "if ((o + 12 < o) || (o + 12 < 12) || (o + 12 > buf_size)) {"
    },
    {
        "line": 69,
        "fullcodeline": "size_t dataofs = o + 8;"
    },
    {
        "line": 81,
        "fullcodeline": "n->entries[tcount].data = exif_mem_alloc (en->mem, s);"
    },
    {
        "line": 70,
        "fullcodeline": "if (s > 4)"
    },
    {
        "line": 82,
        "fullcodeline": "if (!n->entries[tcount].data) {"
    },
    {
        "line": 72,
        "fullcodeline": "dataofs = exif_get_long (buf + dataofs, n->order) + 6 + n->offset;"
    },
    {
        "line": 73,
        "fullcodeline": "if ((dataofs + s < dataofs) || (dataofs + s < s) ||"
    },
    {
        "line": 74,
        "fullcodeline": "(dataofs + s >= buf_size)) {"
    },
    {
        "line": 75,
        "fullcodeline": "exif_log (en->log, EXIF_LOG_CODE_CORRUPT_DATA,"
    },
    {
        "line": 83,
        "fullcodeline": "EXIF_LOG_NO_MEMORY(en->log, \"ExifMnoteDataFuji\", s);"
    }
]