[
    {
        "line": 2,
        "fullcodeline": "RList *tmpenvs = r_list_newf (tmpenvs_free);"
    },
    {
        "line": 3,
        "fullcodeline": "const char *quotestr = \"`\";"
    },
    {
        "line": 4,
        "fullcodeline": "const char *tick = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "char *arroba = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "char *grep = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "RIODesc *tmpdesc = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "int pamode = !core->io->va;"
    },
    {
        "line": 10,
        "fullcodeline": "int i, ret = 0, pipefd;"
    },
    {
        "line": 11,
        "fullcodeline": "bool usemyblock = false;"
    },
    {
        "line": 12,
        "fullcodeline": "int scr_html = -1;"
    },
    {
        "line": 13,
        "fullcodeline": "int scr_color = -1;"
    },
    {
        "line": 14,
        "fullcodeline": "bool eos = false;"
    },
    {
        "line": 15,
        "fullcodeline": "bool haveQuote = false;"
    },
    {
        "line": 16,
        "fullcodeline": "bool oldfixedarch = core->fixedarch;"
    },
    {
        "line": 17,
        "fullcodeline": "bool oldfixedbits = core->fixedbits;"
    },
    {
        "line": 18,
        "fullcodeline": "bool cmd_tmpseek = false;"
    },
    {
        "line": 19,
        "fullcodeline": "ut64 tmpbsz = core->blocksize;"
    },
    {
        "line": 20,
        "fullcodeline": "int cmd_ignbithints = -1;"
    },
    {
        "line": 26,
        "fullcodeline": "cmd = r_str_trim_head_tail (cmd);"
    },
    {
        "line": 28,
        "fullcodeline": "char *$0 = strstr (cmd, \"$(\");"
    },
    {
        "line": 203,
        "fullcodeline": "ptr = (char *)r_str_lastbut (cmd, '|', quotestr);"
    },
    {
        "line": 259,
        "fullcodeline": "ptr = (char *)r_str_lastbut (cmd, '&', quotestr);"
    },
    {
        "line": 282,
        "fullcodeline": "R_FREE (core->oobi);"
    },
    {
        "line": 284,
        "fullcodeline": "ptr = strstr (cmd, \"?*\");"
    },
    {
        "line": 374,
        "fullcodeline": "ptr = (char *)r_str_firstbut (cmd, '>', \"\\\"\");"
    },
    {
        "line": 487,
        "fullcodeline": "ptr = strchr (cmd, '`');"
    },
    {
        "line": 592,
        "fullcodeline": "cmd_tmpseek = core->tmpseek = ptr ? true: false;"
    },
    {
        "line": 1035,
        "fullcodeline": "rc = cmd? r_cmd_call (core->rcmd, r_str_trim_head (cmd)): false;"
    },
    {
        "line": 1060,
        "fullcodeline": "rc = -1;"
    },
    {
        "line": 22,
        "fullcodeline": "if (!cmd) {"
    },
    {
        "line": 172,
        "fullcodeline": "if (*cmd != '#') {"
    },
    {
        "line": 182,
        "fullcodeline": "if (*cmd != '#') {"
    },
    {
        "line": 285,
        "fullcodeline": "if (ptr && (ptr == cmd || ptr[-1] != '~')) {"
    },
    {
        "line": 555,
        "fullcodeline": "if (*cmd != '\"' && *cmd) {"
    },
    {
        "line": 577,
        "fullcodeline": "if (*cmd != '.') {"
    },
    {
        "line": 583,
        "fullcodeline": "if (*cmd != '\"') {"
    },
    {
        "line": 1038,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 1042,
        "fullcodeline": "if (scr_color != -1) {"
    },
    {
        "line": 1055,
        "fullcodeline": "if (cmd_ignbithints != -1) {"
    },
    {
        "line": 23,
        "fullcodeline": "r_list_free (tmpenvs);"
    },
    {
        "line": 173,
        "fullcodeline": "ptr = (char *)r_str_firstbut (cmd, '#', \"`\\\"\"); // TODO: use quotestr here"
    },
    {
        "line": 183,
        "fullcodeline": "ptr = (char *)r_str_lastbut (cmd, ';', quotestr);"
    },
    {
        "line": 212,
        "fullcodeline": "char *ptr2 = strchr (cmd, '`');"
    },
    {
        "line": 261,
        "fullcodeline": "while (ptr && *ptr && ptr[1] == '&') {"
    },
    {
        "line": 262,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 263,
        "fullcodeline": "ret = r_cmd_call (core->rcmd, cmd);"
    },
    {
        "line": 278,
        "fullcodeline": "ptr = strchr (cmd, '&');"
    },
    {
        "line": 286,
        "fullcodeline": "ptr[0] = 0;"
    },
    {
        "line": 389,
        "fullcodeline": "int fdn = 1;"
    },
    {
        "line": 390,
        "fullcodeline": "int pipecolor = r_config_get_i (core->config, \"scr.color.pipe\");"
    },
    {
        "line": 392,
        "fullcodeline": "int ocolor = r_config_get_i (core->config, \"scr.color\");"
    },
    {
        "line": 393,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 394,
        "fullcodeline": "str = r_str_trim_head_tail (ptr + 1 + (ptr[1] == '>'));"
    },
    {
        "line": 416,
        "fullcodeline": "r_cons_set_interactive (false);"
    },
    {
        "line": 422,
        "fullcodeline": "const bool appendResult = (ptr[1] == '>');"
    },
    {
        "line": 497,
        "fullcodeline": "int oneline = 1;"
    },
    {
        "line": 503,
        "fullcodeline": "ptr2 = strchr (ptr + 1, '`');"
    },
    {
        "line": 556,
        "fullcodeline": "const char *s = strstr (cmd, \"~?\");"
    },
    {
        "line": 578,
        "fullcodeline": "grep = r_cons_grep_strip (cmd, quotestr);"
    },
    {
        "line": 584,
        "fullcodeline": "ptr = strchr (cmd, '@');"
    },
    {
        "line": 595,
        "fullcodeline": "char *f, *ptr2 = strchr (ptr + 1, '!');"
    },
    {
        "line": 596,
        "fullcodeline": "ut64 addr = core->offset;"
    },
    {
        "line": 598,
        "fullcodeline": "char *tmpbits = NULL;"
    },
    {
        "line": 602,
        "fullcodeline": "char *tmpeval = NULL;"
    },
    {
        "line": 603,
        "fullcodeline": "char *tmpasm = NULL;"
    },
    {
        "line": 605,
        "fullcodeline": "int tmpfd = -1;"
    },
    {
        "line": 611,
        "fullcodeline": "arroba = (ptr[0] && ptr[1] && ptr[2])?"
    },
    {
        "line": 626,
        "fullcodeline": "ptr = r_str_trim_tail (ptr);"
    },
    {
        "line": 870,
        "fullcodeline": "ptr = r_str_trim_head (ptr + 1) - 1;"
    },
    {
        "line": 871,
        "fullcodeline": "cmd = r_str_trim_nc (cmd);"
    },
    {
        "line": 889,
        "fullcodeline": "offstr = r_str_trim_head (ptr + 1);"
    },
    {
        "line": 891,
        "fullcodeline": "addr = r_num_math (core->num, offstr);"
    },
    {
        "line": 919,
        "fullcodeline": "core->fixedblock = !!tmpdesc;"
    },
    {
        "line": 1031,
        "fullcodeline": "rc = ret;"
    },
    {
        "line": 1040,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", scr_html);"
    },
    {
        "line": 1043,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", scr_color);"
    },
    {
        "line": 30,
        "fullcodeline": "char *$1 = strchr ($0 + 2, ')');"
    },
    {
        "line": 43,
        "fullcodeline": "if (cmd[1] == '\"') { /* interpret */"
    },
    {
        "line": 163,
        "fullcodeline": "if (cmd[1] == '>') {"
    },
    {
        "line": 184,
        "fullcodeline": "if (colon && ptr) {"
    },
    {
        "line": 205,
        "fullcodeline": "if (ptr > cmd) {"
    },
    {
        "line": 264,
        "fullcodeline": "if (ret == -1) {"
    },
    {
        "line": 275,
        "fullcodeline": "for (cmd = ptr + 2; cmd && *cmd == ' '; cmd++) {"
    },
    {
        "line": 287,
        "fullcodeline": "if (*cmd != '#') {"
    },
    {
        "line": 377,
        "fullcodeline": "if (ptr > cmd) {"
    },
    {
        "line": 384,
        "fullcodeline": "if (ptr[0] && ptr[1] == '?') {"
    },
    {
        "line": 395,
        "fullcodeline": "if (!*str) {"
    },
    {
        "line": 423,
        "fullcodeline": "if (*str == '$') {"
    },
    {
        "line": 474,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 477,
        "fullcodeline": "if (scr_color != -1) {"
    },
    {
        "line": 489,
        "fullcodeline": "if (ptr > cmd) {"
    },
    {
        "line": 498,
        "fullcodeline": "if (ptr[1] == '`') {"
    },
    {
        "line": 617,
        "fullcodeline": "for (; *ptr == ' '; ptr++) {"
    },
    {
        "line": 620,
        "fullcodeline": "if (*ptr && ptr[1] == ':') {"
    },
    {
        "line": 628,
        "fullcodeline": "if (ptr[1] == '?') {"
    },
    {
        "line": 923,
        "fullcodeline": "if (ptr[1] == '@') {"
    },
    {
        "line": 1005,
        "fullcodeline": "if (tmpfd != -1) {"
    },
    {
        "line": 1020,
        "fullcodeline": "if (tmpbsz != core->blocksize) {"
    },
    {
        "line": 32,
        "fullcodeline": "*$0 = '`';"
    },
    {
        "line": 50,
        "fullcodeline": "int pipefd = -1;"
    },
    {
        "line": 51,
        "fullcodeline": "ut64 oseek = UT64_MAX;"
    },
    {
        "line": 78,
        "fullcodeline": "char op0 = 0;"
    },
    {
        "line": 114,
        "fullcodeline": "line = strdup (cmd);"
    },
    {
        "line": 115,
        "fullcodeline": "line = r_str_replace (line, \"\\\\\\\"\", \"\\\"\", true);"
    },
    {
        "line": 157,
        "fullcodeline": "if (cmd[1] != '*' && !strstr (cmd, \")()\")) {"
    },
    {
        "line": 174,
        "fullcodeline": "if (ptr && (ptr[1] == ' ' || ptr[1] == '\\t')) {"
    },
    {
        "line": 175,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 186,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 191,
        "fullcodeline": "cmd = ptr + 1;"
    },
    {
        "line": 192,
        "fullcodeline": "ret = r_core_cmd_subst (core, cmd);"
    },
    {
        "line": 206,
        "fullcodeline": "char *ch = ptr - 1;"
    },
    {
        "line": 213,
        "fullcodeline": "if (!ptr2 || (ptr2 && ptr2 > ptr)) {"
    },
    {
        "line": 288,
        "fullcodeline": "int detail = 0;"
    },
    {
        "line": 296,
        "fullcodeline": "recursive_help (core, detail, cmd);"
    },
    {
        "line": 378,
        "fullcodeline": "char *ch = ptr - 1;"
    },
    {
        "line": 402,
        "fullcodeline": "if (ptr > (cmd + 1) && IS_WHITECHAR (ptr[-2])) {"
    },
    {
        "line": 417,
        "fullcodeline": "if (!strcmp (str, \"-\")) {"
    },
    {
        "line": 419,
        "fullcodeline": "str = r_file_temp (\"dumpedit\");"
    },
    {
        "line": 420,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", COLOR_MODE_DISABLED);"
    },
    {
        "line": 426,
        "fullcodeline": "char *o = r_core_cmd_str (core, cmd);"
    },
    {
        "line": 445,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 461,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", ocolor);"
    },
    {
        "line": 464,
        "fullcodeline": "const char *editor = r_config_get (core->config, \"cfg.editor\");"
    },
    {
        "line": 471,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", ocolor);"
    },
    {
        "line": 475,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", scr_html);"
    },
    {
        "line": 490,
        "fullcodeline": "char *ch = ptr - 1;"
    },
    {
        "line": 499,
        "fullcodeline": "memmove (ptr, ptr + 1, strlen (ptr));"
    },
    {
        "line": 500,
        "fullcodeline": "oneline = 0;"
    },
    {
        "line": 585,
        "fullcodeline": "if (ptr == cmd + 1 && *cmd == '?') {"
    },
    {
        "line": 609,
        "fullcodeline": "*ptr++ = '\\0';"
    },
    {
        "line": 612,
        "fullcodeline": "strchr (ptr + 2, '@'): NULL;"
    },
    {
        "line": 614,
        "fullcodeline": "*arroba = 0;"
    },
    {
        "line": 629,
        "fullcodeline": "r_core_cmd_help (core, help_msg_at);"
    },
    {
        "line": 894,
        "fullcodeline": "if (isalpha ((ut8)ptr[1]) && !addr) {"
    },
    {
        "line": 907,
        "fullcodeline": "RIODesc *d = tmpdesc;"
    },
    {
        "line": 914,
        "fullcodeline": "ptr = arroba + 1;"
    },
    {
        "line": 915,
        "fullcodeline": "*arroba = '@';"
    },
    {
        "line": 921,
        "fullcodeline": "r_core_block_read (core);"
    },
    {
        "line": 998,
        "fullcodeline": "r_core_block_size (core, tmpbsz);"
    },
    {
        "line": 1001,
        "fullcodeline": "core->fixedarch = oldfixedarch;"
    },
    {
        "line": 1002,
        "fullcodeline": "r_config_set (core->config, \"asm.arch\", tmpasm);"
    },
    {
        "line": 1007,
        "fullcodeline": "r_io_use_fd (core->io, tmpfd);"
    },
    {
        "line": 1014,
        "fullcodeline": "tmpdesc = NULL;"
    },
    {
        "line": 1017,
        "fullcodeline": "r_config_set (core->config, \"asm.bits\", tmpbits);"
    },
    {
        "line": 1018,
        "fullcodeline": "core->fixedbits = oldfixedbits;"
    },
    {
        "line": 1021,
        "fullcodeline": "r_core_block_size (core, tmpbsz);"
    },
    {
        "line": 1024,
        "fullcodeline": "r_core_cmd0 (core, tmpeval);"
    },
    {
        "line": 45,
        "fullcodeline": "return r_cmd_call (core->rcmd, cmd);"
    },
    {
        "line": 53,
        "fullcodeline": "haveQuote = *cmd == '\"';"
    },
    {
        "line": 126,
        "fullcodeline": "if (oseek != UT64_MAX) {"
    },
    {
        "line": 129,
        "fullcodeline": "if (pipefd != -1) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (!p) {"
    },
    {
        "line": 159,
        "fullcodeline": "return r_cmd_call (core->rcmd, cmd);"
    },
    {
        "line": 207,
        "fullcodeline": "if (*ch == '\\\\') {"
    },
    {
        "line": 266,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 269,
        "fullcodeline": "if (scr_color != -1) {"
    },
    {
        "line": 299,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 302,
        "fullcodeline": "if (scr_color != -1) {"
    },
    {
        "line": 379,
        "fullcodeline": "if (*ch == '\\\\') {"
    },
    {
        "line": 403,
        "fullcodeline": "char *fdnum = ptr - 1;"
    },
    {
        "line": 404,
        "fullcodeline": "if (*fdnum == 'H') { // \"H>\""
    },
    {
        "line": 465,
        "fullcodeline": "if (editor && *editor) {"
    },
    {
        "line": 491,
        "fullcodeline": "if (*ch == '\\\\') {"
    },
    {
        "line": 559,
        "fullcodeline": "if (cmd == s) {"
    },
    {
        "line": 623,
        "fullcodeline": "ptr--;"
    },
    {
        "line": 900,
        "fullcodeline": "char ch = *offstr;"
    },
    {
        "line": 924,
        "fullcodeline": "if (ptr[2] == '@') {"
    },
    {
        "line": 935,
        "fullcodeline": "const char *fromvars[] = { \"anal.from\", \"diff.from\", \"graph.from\","
    },
    {
        "line": 937,
        "fullcodeline": "const char *tovars[] = { \"anal.to\", \"diff.to\", \"graph.to\","
    },
    {
        "line": 939,
        "fullcodeline": "ut64 curfrom[R_ARRAY_SIZE (fromvars) - 1], curto[R_ARRAY_SIZE (tovars) - 1];"
    },
    {
        "line": 34,
        "fullcodeline": "memmove ($0 + 1, $0 + 2, strlen ($0 + 2) + 1);"
    },
    {
        "line": 55,
        "fullcodeline": "cmd++;"
    },
    {
        "line": 56,
        "fullcodeline": "p = *cmd ? find_eoq (cmd) : NULL;"
    },
    {
        "line": 116,
        "fullcodeline": "if (p && *p && p[1] == '|') {"
    },
    {
        "line": 117,
        "fullcodeline": "str = p + 2;"
    },
    {
        "line": 121,
        "fullcodeline": "r_core_cmd_pipe (core, cmd, str);"
    },
    {
        "line": 127,
        "fullcodeline": "r_core_seek (core, oseek, 1);"
    },
    {
        "line": 187,
        "fullcodeline": "if (r_core_cmd_subst (core, cmd) == -1) {"
    },
    {
        "line": 214,
        "fullcodeline": "if (!tick || (tick && tick > ptr)) {"
    },
    {
        "line": 215,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 216,
        "fullcodeline": "cmd = r_str_trim_nc (cmd);"
    },
    {
        "line": 267,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", scr_html);"
    },
    {
        "line": 289,
        "fullcodeline": "if (cmd < ptr && ptr[-1] == '?') {"
    },
    {
        "line": 290,
        "fullcodeline": "detail++;"
    },
    {
        "line": 300,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", scr_html);"
    },
    {
        "line": 405,
        "fullcodeline": "scr_html = r_config_get_i (core->config, \"scr.html\");"
    },
    {
        "line": 406,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", true);"
    },
    {
        "line": 407,
        "fullcodeline": "pipecolor = true;"
    },
    {
        "line": 428,
        "fullcodeline": "char *oldText = r_cmd_alias_get (core->rcmd, str, 1);"
    },
    {
        "line": 447,
        "fullcodeline": "} else if (fdn > 0) {"
    },
    {
        "line": 466,
        "fullcodeline": "r_sys_cmdf (\"%s '%s'\", editor, str);"
    },
    {
        "line": 467,
        "fullcodeline": "r_file_rm (str);"
    },
    {
        "line": 506,
        "fullcodeline": "} else if (!ptr2) {"
    },
    {
        "line": 630,
        "fullcodeline": "} else if (ptr[1] == '%') { // \"@%\""
    },
    {
        "line": 873,
        "fullcodeline": "if (strlen (ptr + 1) == 13 && strlen (ptr2 + 1) == 6 &&"
    },
    {
        "line": 875,
        "fullcodeline": "!memcmp (ptr2 + 1, \"0x\", 2)) {"
    },
    {
        "line": 895,
        "fullcodeline": "if (!r_flag_get (core->flags, ptr + 1)) {"
    },
    {
        "line": 909,
        "fullcodeline": "r_io_map_new (core->io, d->fd, d->perm, 0, addr, r_io_desc_size (d));"
    },
    {
        "line": 925,
        "fullcodeline": "char *rule = ptr + 3;"
    },
    {
        "line": 929,
        "fullcodeline": "ret = r_core_cmd_foreach3 (core, cmd, rule);"
    },
    {
        "line": 942,
        "fullcodeline": "if (ptr[1] == '(') {"
    },
    {
        "line": 1011,
        "fullcodeline": "r_config_set_i (core->config, \"io.va\", 0);"
    },
    {
        "line": 63,
        "fullcodeline": "if (!*p) {"
    },
    {
        "line": 67,
        "fullcodeline": "char *sc = strchr (cmd, ';');"
    },
    {
        "line": 71,
        "fullcodeline": "r_core_cmd0 (core, cmd);"
    },
    {
        "line": 75,
        "fullcodeline": "cmd = sc + 1;"
    },
    {
        "line": 81,
        "fullcodeline": "if (p[0] == '@') {"
    },
    {
        "line": 118,
        "fullcodeline": "while (IS_WHITESPACE (*str)) {"
    },
    {
        "line": 123,
        "fullcodeline": "r_cmd_call (core->rcmd, line);"
    },
    {
        "line": 140,
        "fullcodeline": "if (*p == ';') {"
    },
    {
        "line": 151,
        "fullcodeline": "cmd = p + 1;"
    },
    {
        "line": 189,
        "fullcodeline": "return -1;"
    },
    {
        "line": 441,
        "fullcodeline": "char *n = r_str_newf (\"$%s\", o);"
    },
    {
        "line": 442,
        "fullcodeline": "r_cmd_alias_set (core->rcmd, str, n, 1);"
    },
    {
        "line": 449,
        "fullcodeline": "pipefd = r_cons_pipe_open (str, fdn, appendResult);"
    },
    {
        "line": 631,
        "fullcodeline": "char *k = strdup (ptr + 2);"
    },
    {
        "line": 632,
        "fullcodeline": "char *v = strchr (k, '=');"
    },
    {
        "line": 874,
        "fullcodeline": "!memcmp (ptr + 1, \"0x\", 2) &&"
    },
    {
        "line": 901,
        "fullcodeline": "if (ch == '-' || ch == '+') {"
    },
    {
        "line": 902,
        "fullcodeline": "addr = core->offset + addr;"
    },
    {
        "line": 926,
        "fullcodeline": "while (*rule && *rule == ' ') {"
    },
    {
        "line": 931,
        "fullcodeline": "ret = r_core_cmd_foreach (core, cmd, ptr + 2);"
    },
    {
        "line": 943,
        "fullcodeline": "char *range = ptr + 3;"
    },
    {
        "line": 944,
        "fullcodeline": "char *p = strchr (range, ' ');"
    },
    {
        "line": 952,
        "fullcodeline": "*p = '\\x00';"
    },
    {
        "line": 953,
        "fullcodeline": "ut64 from = r_num_math (core->num, range);"
    },
    {
        "line": 954,
        "fullcodeline": "ut64 to = r_num_math (core->num, p + 1);"
    },
    {
        "line": 975,
        "fullcodeline": "ret = r_cmd_call (core->rcmd, r_str_trim_head (cmd));"
    },
    {
        "line": 57,
        "fullcodeline": "if (!p || !*p) {"
    },
    {
        "line": 62,
        "fullcodeline": "*p++ = 0;"
    },
    {
        "line": 72,
        "fullcodeline": "if (!sc) {"
    },
    {
        "line": 82,
        "fullcodeline": "p--;"
    },
    {
        "line": 84,
        "fullcodeline": "while (p[1] == ';' || IS_WHITESPACE (p[1])) {"
    },
    {
        "line": 85,
        "fullcodeline": "p++;"
    },
    {
        "line": 87,
        "fullcodeline": "if (p[1] == '@' || (p[1] && p[2] == '@')) {"
    },
    {
        "line": 88,
        "fullcodeline": "char *q = strchr (p + 1, '\"');"
    },
    {
        "line": 94,
        "fullcodeline": "oseek = core->offset;"
    },
    {
        "line": 95,
        "fullcodeline": "r_core_seek (core, r_num_math (core->num, p + 2), 1);"
    },
    {
        "line": 103,
        "fullcodeline": "if (p && *p && p[1] == '>') {"
    },
    {
        "line": 104,
        "fullcodeline": "str = p + 2;"
    },
    {
        "line": 108,
        "fullcodeline": "str = (char *)r_str_trim_ro (str);"
    },
    {
        "line": 110,
        "fullcodeline": "const bool append = p[2] == '>';"
    },
    {
        "line": 111,
        "fullcodeline": "pipefd = r_cons_pipe_open (str, 1, append);"
    },
    {
        "line": 119,
        "fullcodeline": "str++;"
    },
    {
        "line": 141,
        "fullcodeline": "cmd = p + 1;"
    },
    {
        "line": 208,
        "fullcodeline": "memmove (ch, ptr, strlen (ptr) + 1);"
    },
    {
        "line": 217,
        "fullcodeline": "if (!strcmp (ptr + 1, \"?\")) { // \"|?\""
    },
    {
        "line": 218,
        "fullcodeline": "r_core_cmd_help (core, help_msg_vertical_bar);"
    },
    {
        "line": 291,
        "fullcodeline": "if (cmd < ptr - 1 && ptr[-2] == '?') {"
    },
    {
        "line": 292,
        "fullcodeline": "detail++;"
    },
    {
        "line": 380,
        "fullcodeline": "memmove (ch, ptr, strlen (ptr) + 1);"
    },
    {
        "line": 410,
        "fullcodeline": "if (IS_DIGIT (*fdnum)) {"
    },
    {
        "line": 430,
        "fullcodeline": "char *two = r_str_newf (\"%s%s\", oldText, o);"
    },
    {
        "line": 450,
        "fullcodeline": "if (pipefd != -1) {"
    },
    {
        "line": 492,
        "fullcodeline": "memmove (ch, ptr, strlen (ptr) + 1);"
    },
    {
        "line": 510,
        "fullcodeline": "int value = core->num->value;"
    },
    {
        "line": 511,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 512,
        "fullcodeline": "*ptr2 = '\\0';"
    },
    {
        "line": 540,
        "fullcodeline": "str = r_str_append (str, ptr2 + 1);"
    },
    {
        "line": 541,
        "fullcodeline": "cmd = r_str_append (strdup (cmd), str);"
    },
    {
        "line": 543,
        "fullcodeline": "ret = r_core_cmd_subst (core, cmd);"
    },
    {
        "line": 927,
        "fullcodeline": "rule++;"
    },
    {
        "line": 945,
        "fullcodeline": "if (!p) {"
    },
    {
        "line": 983,
        "fullcodeline": "ret = r_cmd_call (core->rcmd, r_str_trim_head (cmd));"
    },
    {
        "line": 69,
        "fullcodeline": "*sc = 0;"
    },
    {
        "line": 93,
        "fullcodeline": "haveQuote = q != NULL;"
    },
    {
        "line": 105,
        "fullcodeline": "while (*str == '>') {"
    },
    {
        "line": 411,
        "fullcodeline": "fdn = *fdnum - '0';"
    },
    {
        "line": 436,
        "fullcodeline": "char *n = r_str_newf (\"$%s\", o);"
    },
    {
        "line": 437,
        "fullcodeline": "r_cmd_alias_set (core->rcmd, str, n, 1);"
    },
    {
        "line": 454,
        "fullcodeline": "ret = r_core_cmd_subst (core, cmd);"
    },
    {
        "line": 513,
        "fullcodeline": "if (ptr[1] == '!') {"
    },
    {
        "line": 524,
        "fullcodeline": "if (!str) {"
    },
    {
        "line": 533,
        "fullcodeline": "if (oneline && str) {"
    },
    {
        "line": 545,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 566,
        "fullcodeline": "if (!strcmp (s, \"~??\")) {"
    },
    {
        "line": 635,
        "fullcodeline": "r_sys_setenv (k, v);"
    },
    {
        "line": 636,
        "fullcodeline": "r_list_append (tmpenvs, k);"
    },
    {
        "line": 640,
        "fullcodeline": "} else if (ptr[1] == '.') { // \"@.\""
    },
    {
        "line": 877,
        "fullcodeline": "} else if (strlen (ptr + 1) == 9 && strlen (ptr2 + 1) == 4) {"
    },
    {
        "line": 956,
        "fullcodeline": "for (i = 0; fromvars[i]; i++) {"
    },
    {
        "line": 957,
        "fullcodeline": "curfrom[i] = r_config_get_i (core->config, fromvars[i]);"
    },
    {
        "line": 959,
        "fullcodeline": "for (i = 0; tovars[i]; i++) {"
    },
    {
        "line": 960,
        "fullcodeline": "curto[i] = r_config_get_i (core->config, tovars[i]);"
    },
    {
        "line": 963,
        "fullcodeline": "for (i = 0; fromvars[i]; i++) {"
    },
    {
        "line": 964,
        "fullcodeline": "r_config_set_i (core->config, fromvars[i], from);"
    },
    {
        "line": 966,
        "fullcodeline": "for (i = 0; tovars[i]; i++) {"
    },
    {
        "line": 967,
        "fullcodeline": "r_config_set_i (core->config, tovars[i], to);"
    },
    {
        "line": 973,
        "fullcodeline": "core->offset = addr;"
    },
    {
        "line": 988,
        "fullcodeline": "for (i = 0; fromvars[i]; i++) {"
    },
    {
        "line": 989,
        "fullcodeline": "r_config_set_i (core->config, fromvars[i], curfrom[i]);"
    },
    {
        "line": 991,
        "fullcodeline": "for (i = 0; tovars[i]; i++) {"
    },
    {
        "line": 992,
        "fullcodeline": "r_config_set_i (core->config, tovars[i], curto[i]);"
    },
    {
        "line": 90,
        "fullcodeline": "op0 = *q;"
    },
    {
        "line": 91,
        "fullcodeline": "*q = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "*p = '\"';"
    },
    {
        "line": 98,
        "fullcodeline": "p = q;"
    },
    {
        "line": 106,
        "fullcodeline": "str++;"
    },
    {
        "line": 143,
        "fullcodeline": "if (*p == '\"') {"
    },
    {
        "line": 432,
        "fullcodeline": "r_cmd_alias_set (core->rcmd, str, two, 1);"
    },
    {
        "line": 451,
        "fullcodeline": "if (!pipecolor) {"
    },
    {
        "line": 514,
        "fullcodeline": "str = r_core_cmd_str_pipe (core, ptr + 1);"
    },
    {
        "line": 528,
        "fullcodeline": "if (*str == '|' || *str == '*') {"
    },
    {
        "line": 880,
        "fullcodeline": "*ptr2 = '\\0';"
    },
    {
        "line": 884,
        "fullcodeline": "r_core_block_size ("
    },
    {
        "line": 100,
        "fullcodeline": "p = strchr (p + 1, ';');"
    },
    {
        "line": 144,
        "fullcodeline": "cmd = p;"
    },
    {
        "line": 221,
        "fullcodeline": "} else if (!strncmp (ptr + 1, \"H\", 1)) { // \"|H\""
    },
    {
        "line": 222,
        "fullcodeline": "scr_html = r_config_get_i (core->config, \"scr.html\");"
    },
    {
        "line": 223,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", true);"
    },
    {
        "line": 452,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", COLOR_MODE_DISABLED);"
    },
    {
        "line": 517,
        "fullcodeline": "int ocolor = r_config_get_i (core->config, \"scr.color\");"
    },
    {
        "line": 518,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", 0);"
    },
    {
        "line": 519,
        "fullcodeline": "core->cmd_in_backticks = true;"
    },
    {
        "line": 520,
        "fullcodeline": "str = r_core_cmd_str (core, ptr + 1);"
    },
    {
        "line": 521,
        "fullcodeline": "core->cmd_in_backticks = false;"
    },
    {
        "line": 522,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", ocolor);"
    },
    {
        "line": 634,
        "fullcodeline": "*v++ = 0;"
    },
    {
        "line": 641,
        "fullcodeline": "if (ptr[2] == '.') { // \"@..\""
    },
    {
        "line": 881,
        "fullcodeline": "if (!ptr2[1]) {"
    },
    {
        "line": 885,
        "fullcodeline": "core, r_num_math (core->num, ptr2 + 1));"
    },
    {
        "line": 146,
        "fullcodeline": "*p = op0;"
    },
    {
        "line": 147,
        "fullcodeline": "cmd = p;"
    },
    {
        "line": 534,
        "fullcodeline": "for (i = 0; str[i]; i++) {"
    },
    {
        "line": 656,
        "fullcodeline": "} else if (ptr[0] && ptr[1] == ':' && ptr[2]) {"
    },
    {
        "line": 979,
        "fullcodeline": "r_core_seek (core, addr, 1);"
    },
    {
        "line": 980,
        "fullcodeline": "r_core_block_read (core);"
    },
    {
        "line": 535,
        "fullcodeline": "if (str[i] == '\\n') {"
    },
    {
        "line": 642,
        "fullcodeline": "if (ptr[3] == '.') { // \"@...\""
    },
    {
        "line": 856,
        "fullcodeline": "*ptr = '@';"
    },
    {
        "line": 859,
        "fullcodeline": "char *trim = ptr - 2;"
    },
    {
        "line": 224,
        "fullcodeline": "} else if (!strcmp (ptr + 1, \"T\")) { // \"|T\""
    },
    {
        "line": 225,
        "fullcodeline": "scr_color = r_config_get_i (core->config, \"scr.color\");"
    },
    {
        "line": 226,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", COLOR_MODE_DISABLED);"
    },
    {
        "line": 536,
        "fullcodeline": "str[i] = ' ';"
    },
    {
        "line": 643,
        "fullcodeline": "ut64 addr = r_num_tail (core->num, core->offset, ptr + 4);"
    },
    {
        "line": 644,
        "fullcodeline": "r_core_block_size (core, R_ABS ((st64)addr - (st64)core->offset));"
    },
    {
        "line": 860,
        "fullcodeline": "while (trim > cmd) {"
    },
    {
        "line": 647,
        "fullcodeline": "addr = r_num_tail (core->num, core->offset, ptr + 3);"
    },
    {
        "line": 648,
        "fullcodeline": "r_core_seek (core, addr, 1);"
    },
    {
        "line": 649,
        "fullcodeline": "cmd_tmpseek = core->tmpseek = true;"
    },
    {
        "line": 685,
        "fullcodeline": "f = r_file_slurp (ptr + 2, &sz);"
    },
    {
        "line": 741,
        "fullcodeline": "cmd_ignbithints = r_config_get_i (core->config, \"anal.ignbithints\");"
    },
    {
        "line": 742,
        "fullcodeline": "r_config_set_i (core->config, \"anal.ignbithints\", 1);"
    },
    {
        "line": 864,
        "fullcodeline": "*trim = 0;"
    },
    {
        "line": 865,
        "fullcodeline": "trim--;"
    },
    {
        "line": 659,
        "fullcodeline": "flgspc_changed = r_flag_space_push (core->flags, ptr + 2);"
    },
    {
        "line": 663,
        "fullcodeline": "int index = (int)r_num_math (core->num, ptr + 2);"
    },
    {
        "line": 664,
        "fullcodeline": "RAnalBlock *bb = r_anal_bb_from_offset (core->anal, core->offset);"
    },
    {
        "line": 719,
        "fullcodeline": "if (ptr[1] == ':') {"
    },
    {
        "line": 740,
        "fullcodeline": "is_bits_set = set_tmp_bits (core, r_num_math (core->num, ptr + 2), &tmpbits);"
    },
    {
        "line": 746,
        "fullcodeline": "ut64 addr = r_num_math (core->num, ptr + 2);"
    },
    {
        "line": 756,
        "fullcodeline": "char *cmd = parse_tmp_evals (core, ptr + 2);"
    },
    {
        "line": 766,
        "fullcodeline": "if (ptr[1] == ':') {"
    },
    {
        "line": 799,
        "fullcodeline": "char *out = sdb_querys (core->sdb, NULL, 0, ptr + ((ptr[1])? 2: 1));"
    },
    {
        "line": 808,
        "fullcodeline": "if (ptr[1] == ':') {"
    },
    {
        "line": 814,
        "fullcodeline": "if (ptr[1] == ':') {"
    },
    {
        "line": 828,
        "fullcodeline": "len = strlen (ptr + 2);"
    },
    {
        "line": 829,
        "fullcodeline": "r_core_block_size (core, len);"
    },
    {
        "line": 830,
        "fullcodeline": "const ut8 *buf = (const ut8*)r_str_trim_ro (ptr + 2);"
    },
    {
        "line": 228,
        "fullcodeline": "} else if (!strcmp (ptr + 1, \".\")) { // \"|.\""
    },
    {
        "line": 229,
        "fullcodeline": "ret = *cmd ? r_core_cmdf (core, \".%s\", cmd) : 0;"
    },
    {
        "line": 721,
        "fullcodeline": "char *mander = strdup (ptr + 2);"
    },
    {
        "line": 734,
        "fullcodeline": "r_core_seek (core, regval, 1);"
    },
    {
        "line": 735,
        "fullcodeline": "cmd_tmpseek = core->tmpseek = true;"
    },
    {
        "line": 757,
        "fullcodeline": "if (!tmpeval) {"
    },
    {
        "line": 767,
        "fullcodeline": "buf = malloc (strlen (ptr + 2) + 1);"
    },
    {
        "line": 809,
        "fullcodeline": "tmpfd = core->io->desc ? core->io->desc->fd : -1;"
    },
    {
        "line": 810,
        "fullcodeline": "r_io_use_fd (core->io, atoi (ptr + 2));"
    },
    {
        "line": 815,
        "fullcodeline": "char *q = strchr (ptr + 2, ':');"
    },
    {
        "line": 832,
        "fullcodeline": "if (len > 0) {"
    },
    {
        "line": 861,
        "fullcodeline": "if (!IS_WHITESPACE (*trim)) {"
    },
    {
        "line": 688,
        "fullcodeline": "RBuffer *b = r_buf_new_with_bytes ((const ut8*)f, sz);"
    },
    {
        "line": 689,
        "fullcodeline": "RIODesc *d = r_io_open_buffer (core->io, b, R_PERM_RWX, 0);"
    },
    {
        "line": 722,
        "fullcodeline": "char *sep = findSeparator (mander);"
    },
    {
        "line": 748,
        "fullcodeline": "r_core_cmdf (core, \"so %s\", ptr + 2);"
    },
    {
        "line": 750,
        "fullcodeline": "cmd_tmpseek = core->tmpseek = true;"
    },
    {
        "line": 758,
        "fullcodeline": "tmpeval = cmd;"
    },
    {
        "line": 801,
        "fullcodeline": "r_core_seek (core, r_num_math (core->num, out), 1);"
    },
    {
        "line": 821,
        "fullcodeline": "is_arch_set = set_tmp_arch (core, ptr + 2, &tmpasm);"
    },
    {
        "line": 833,
        "fullcodeline": "RBuffer *b = r_buf_new_with_bytes (buf, len);"
    },
    {
        "line": 834,
        "fullcodeline": "RIODesc *d = r_io_open_buffer (core->io, b, R_PERM_RWX, 0);"
    },
    {
        "line": 667,
        "fullcodeline": "if (index < 0) {"
    },
    {
        "line": 724,
        "fullcodeline": "char ch = *sep;"
    },
    {
        "line": 727,
        "fullcodeline": "*sep = ch;"
    },
    {
        "line": 729,
        "fullcodeline": "regval = r_num_math (core->num, numexpr);"
    },
    {
        "line": 730,
        "fullcodeline": "free (numexpr);"
    },
    {
        "line": 760,
        "fullcodeline": "tmpeval = r_str_prepend (tmpeval, cmd);"
    },
    {
        "line": 761,
        "fullcodeline": "free (cmd);"
    },
    {
        "line": 769,
        "fullcodeline": "len = r_hex_str2bin (ptr + 2, buf);"
    },
    {
        "line": 770,
        "fullcodeline": "r_core_block_size (core, R_ABS (len));"
    },
    {
        "line": 818,
        "fullcodeline": "int bits = r_num_math (core->num, q);"
    },
    {
        "line": 835,
        "fullcodeline": "if (!core->io->va) {"
    },
    {
        "line": 233,
        "fullcodeline": "int value = core->num->value;"
    },
    {
        "line": 668,
        "fullcodeline": "index = bb->ninstr + index;"
    },
    {
        "line": 671,
        "fullcodeline": "if (index >= 0 && index < bb->ninstr) {"
    },
    {
        "line": 672,
        "fullcodeline": "ut16 inst_off = r_anal_bb_offset_inst (bb, index);"
    },
    {
        "line": 673,
        "fullcodeline": "r_core_seek (core, bb->addr + inst_off, 1);"
    },
    {
        "line": 674,
        "fullcodeline": "cmd_tmpseek = core->tmpseek = true;"
    },
    {
        "line": 694,
        "fullcodeline": "tmpdesc = d;"
    },
    {
        "line": 698,
        "fullcodeline": "r_io_map_new (core->io, d->fd, d->perm, 0, core->offset, r_buf_size (b));"
    },
    {
        "line": 726,
        "fullcodeline": "regval = r_debug_reg_get (core->dbg, mander);"
    },
    {
        "line": 732,
        "fullcodeline": "regval = r_debug_reg_get (core->dbg, ptr + 2);"
    },
    {
        "line": 771,
        "fullcodeline": "if (len > 0) {"
    },
    {
        "line": 819,
        "fullcodeline": "is_bits_set = set_tmp_bits (core, bits, &tmpbits);"
    },
    {
        "line": 836,
        "fullcodeline": "r_config_set_i (core->config, \"io.va\", 1);"
    },
    {
        "line": 842,
        "fullcodeline": "tmpdesc = d;"
    },
    {
        "line": 846,
        "fullcodeline": "r_io_map_new (core->io, d->fd, d->perm, 0, core->offset, r_buf_size (b));"
    },
    {
        "line": 847,
        "fullcodeline": "r_core_block_size (core, len);"
    },
    {
        "line": 247,
        "fullcodeline": "scr_html = r_config_get_i (core->config, \"scr.html\");"
    },
    {
        "line": 248,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", 0);"
    },
    {
        "line": 249,
        "fullcodeline": "scr_color = r_config_get_i (core->config, \"scr.color\");"
    },
    {
        "line": 250,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", COLOR_MODE_DISABLED);"
    },
    {
        "line": 676,
        "fullcodeline": "eprintf (\"The current basic block has %d instructions\\n\", bb->ninstr);"
    },
    {
        "line": 772,
        "fullcodeline": "RBuffer *b = r_buf_new_with_bytes (buf, len);"
    },
    {
        "line": 773,
        "fullcodeline": "RIODesc *d = r_io_open_buffer (core->io, b, R_PERM_RWX, 0);"
    },
    {
        "line": 817,
        "fullcodeline": "*q++ = 0;"
    },
    {
        "line": 696,
        "fullcodeline": "r_config_set_i (core->config, \"io.va\", 1);"
    },
    {
        "line": 844,
        "fullcodeline": "r_config_set_i (core->config, \"io.va\", 1);"
    },
    {
        "line": 237,
        "fullcodeline": "char *res = r_io_system (core->io, ptr + 1);"
    },
    {
        "line": 778,
        "fullcodeline": "tmpdesc = d;"
    },
    {
        "line": 782,
        "fullcodeline": "r_io_map_new (core->io, d->fd, d->perm, 0, core->offset, r_buf_size (b));"
    },
    {
        "line": 783,
        "fullcodeline": "r_core_block_size (core, len);"
    },
    {
        "line": 784,
        "fullcodeline": "r_core_block_read (core);"
    },
    {
        "line": 239,
        "fullcodeline": "r_cons_printf (\"%s\\n\", res);"
    },
    {
        "line": 780,
        "fullcodeline": "r_config_set_i (core->config, \"io.va\", 1);"
    }
]