[
    {
        "line": 29,
        "fullcodeline": "assert(image != (const Image *) NULL);"
    },
    {
        "line": 30,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 33,
        "fullcodeline": "assert(geometry != (const RectangleInfo *) NULL);"
    },
    {
        "line": 34,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 35,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 37,
        "fullcodeline": "splice_image=CloneImage(image,image->columns+splice_geometry.width,"
    },
    {
        "line": 52,
        "fullcodeline": "(void) SetImageBackgroundColor(splice_image,exception);"
    },
    {
        "line": 110,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 111,
        "fullcodeline": "progress=0;"
    },
    {
        "line": 112,
        "fullcodeline": "columns=MagickMin(splice_geometry.x,(ssize_t) splice_image->columns);"
    },
    {
        "line": 113,
        "fullcodeline": "image_view=AcquireVirtualCacheView(image,exception);"
    },
    {
        "line": 114,
        "fullcodeline": "splice_view=AcquireAuthenticCacheView(splice_image,exception);"
    },
    {
        "line": 322,
        "fullcodeline": "splice_view=DestroyCacheView(splice_view);"
    },
    {
        "line": 323,
        "fullcodeline": "image_view=DestroyCacheView(image_view);"
    },
    {
        "line": 31,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 39,
        "fullcodeline": "if (splice_image == (Image *) NULL)"
    },
    {
        "line": 41,
        "fullcodeline": "if (SetImageStorageClass(splice_image,DirectClass,exception) == MagickFalse)"
    },
    {
        "line": 46,
        "fullcodeline": "if ((IsPixelInfoGray(&splice_image->background_color) == MagickFalse) &&"
    },
    {
        "line": 49,
        "fullcodeline": "if ((splice_image->background_color.alpha_trait != UndefinedPixelTrait) &&"
    },
    {
        "line": 119,
        "fullcodeline": "for (y=0; y < (ssize_t) splice_geometry.y; y++)"
    },
    {
        "line": 222,
        "fullcodeline": "y < (ssize_t) splice_image->rows; y++)"
    },
    {
        "line": 324,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 32,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 38,
        "fullcodeline": "image->rows+splice_geometry.height,MagickTrue,exception);"
    },
    {
        "line": 43,
        "fullcodeline": "splice_image=DestroyImage(splice_image);"
    },
    {
        "line": 47,
        "fullcodeline": "(IsGrayColorspace(splice_image->colorspace) != MagickFalse))"
    },
    {
        "line": 48,
        "fullcodeline": "(void) SetImageColorspace(splice_image,sRGBColorspace,exception);"
    },
    {
        "line": 50,
        "fullcodeline": "(splice_image->alpha_trait == UndefinedPixelTrait))"
    },
    {
        "line": 51,
        "fullcodeline": "(void) SetImageAlpha(splice_image,OpaqueAlpha,exception);"
    },
    {
        "line": 132,
        "fullcodeline": "p=GetCacheViewVirtualPixels(image_view,0,y,splice_image->columns,1,"
    },
    {
        "line": 134,
        "fullcodeline": "q=QueueCacheViewAuthenticPixels(splice_view,0,y,splice_image->columns,1,"
    },
    {
        "line": 221,
        "fullcodeline": "for (y=(ssize_t) (splice_geometry.y+splice_geometry.height);"
    },
    {
        "line": 237,
        "fullcodeline": "p=GetCacheViewVirtualPixels(image_view,0,y-(ssize_t) splice_geometry.height,"
    },
    {
        "line": 239,
        "fullcodeline": "q=QueueCacheViewAuthenticPixels(splice_view,0,y,splice_image->columns,1,"
    },
    {
        "line": 325,
        "fullcodeline": "splice_image=DestroyImage(splice_image);"
    },
    {
        "line": 40,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 44,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 64,
        "fullcodeline": "splice_geometry.x+=(ssize_t) splice_geometry.width/2;"
    },
    {
        "line": 69,
        "fullcodeline": "splice_geometry.x+=(ssize_t) splice_geometry.width;"
    },
    {
        "line": 74,
        "fullcodeline": "splice_geometry.y+=(ssize_t) splice_geometry.width/2;"
    },
    {
        "line": 79,
        "fullcodeline": "splice_geometry.x+=(ssize_t) splice_geometry.width/2;"
    },
    {
        "line": 80,
        "fullcodeline": "splice_geometry.y+=(ssize_t) splice_geometry.height/2;"
    },
    {
        "line": 85,
        "fullcodeline": "splice_geometry.x+=(ssize_t) splice_geometry.width;"
    },
    {
        "line": 86,
        "fullcodeline": "splice_geometry.y+=(ssize_t) splice_geometry.height/2;"
    },
    {
        "line": 91,
        "fullcodeline": "splice_geometry.y+=(ssize_t) splice_geometry.height;"
    },
    {
        "line": 96,
        "fullcodeline": "splice_geometry.x+=(ssize_t) splice_geometry.width/2;"
    },
    {
        "line": 97,
        "fullcodeline": "splice_geometry.y+=(ssize_t) splice_geometry.height;"
    },
    {
        "line": 102,
        "fullcodeline": "splice_geometry.x+=(ssize_t) splice_geometry.width;"
    },
    {
        "line": 103,
        "fullcodeline": "splice_geometry.y+=(ssize_t) splice_geometry.height;"
    },
    {
        "line": 130,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 136,
        "fullcodeline": "if ((p == (const Quantum *) NULL) || (q == (Quantum *) NULL))"
    },
    {
        "line": 141,
        "fullcodeline": "for (x=0; x < columns; x++)"
    },
    {
        "line": 170,
        "fullcodeline": "for ( ; x < (ssize_t) (splice_geometry.x+splice_geometry.width); x++)"
    },
    {
        "line": 171,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 172,
        "fullcodeline": "for ( ; x < (ssize_t) splice_image->columns; x++)"
    },
    {
        "line": 201,
        "fullcodeline": "if (SyncCacheViewAuthenticPixels(splice_view,exception) == MagickFalse)"
    },
    {
        "line": 203,
        "fullcodeline": "if (image->progress_monitor != (MagickProgressMonitor) NULL)"
    },
    {
        "line": 233,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 235,
        "fullcodeline": "if ((y < 0) || (y >= (ssize_t)splice_image->rows))"
    },
    {
        "line": 241,
        "fullcodeline": "if ((p == (const Quantum *) NULL) || (q == (Quantum *) NULL))"
    },
    {
        "line": 246,
        "fullcodeline": "for (x=0; x < columns; x++)"
    },
    {
        "line": 275,
        "fullcodeline": "for ( ; x < (ssize_t) (splice_geometry.x+splice_geometry.width); x++)"
    },
    {
        "line": 276,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 277,
        "fullcodeline": "for ( ; x < (ssize_t) splice_image->columns; x++)"
    },
    {
        "line": 306,
        "fullcodeline": "if (SyncCacheViewAuthenticPixels(splice_view,exception) == MagickFalse)"
    },
    {
        "line": 308,
        "fullcodeline": "if (image->progress_monitor != (MagickProgressMonitor) NULL)"
    },
    {
        "line": 138,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 163,
        "fullcodeline": "SetPixelRed(splice_image,GetPixelRed(image,p),q);"
    },
    {
        "line": 164,
        "fullcodeline": "SetPixelGreen(splice_image,GetPixelGreen(image,p),q);"
    },
    {
        "line": 165,
        "fullcodeline": "SetPixelBlue(splice_image,GetPixelBlue(image,p),q);"
    },
    {
        "line": 166,
        "fullcodeline": "SetPixelAlpha(splice_image,GetPixelAlpha(image,p),q);"
    },
    {
        "line": 167,
        "fullcodeline": "p+=GetPixelChannels(image);"
    },
    {
        "line": 168,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 194,
        "fullcodeline": "SetPixelRed(splice_image,GetPixelRed(image,p),q);"
    },
    {
        "line": 195,
        "fullcodeline": "SetPixelGreen(splice_image,GetPixelGreen(image,p),q);"
    },
    {
        "line": 196,
        "fullcodeline": "SetPixelBlue(splice_image,GetPixelBlue(image,p),q);"
    },
    {
        "line": 197,
        "fullcodeline": "SetPixelAlpha(splice_image,GetPixelAlpha(image,p),q);"
    },
    {
        "line": 198,
        "fullcodeline": "p+=GetPixelChannels(image);"
    },
    {
        "line": 199,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 202,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 211,
        "fullcodeline": "proceed=SetImageProgress(image,SpliceImageTag,progress++,"
    },
    {
        "line": 243,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 268,
        "fullcodeline": "SetPixelRed(splice_image,GetPixelRed(image,p),q);"
    },
    {
        "line": 269,
        "fullcodeline": "SetPixelGreen(splice_image,GetPixelGreen(image,p),q);"
    },
    {
        "line": 270,
        "fullcodeline": "SetPixelBlue(splice_image,GetPixelBlue(image,p),q);"
    },
    {
        "line": 271,
        "fullcodeline": "SetPixelAlpha(splice_image,GetPixelAlpha(image,p),q);"
    },
    {
        "line": 272,
        "fullcodeline": "p+=GetPixelChannels(image);"
    },
    {
        "line": 273,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 299,
        "fullcodeline": "SetPixelRed(splice_image,GetPixelRed(image,p),q);"
    },
    {
        "line": 300,
        "fullcodeline": "SetPixelGreen(splice_image,GetPixelGreen(image,p),q);"
    },
    {
        "line": 301,
        "fullcodeline": "SetPixelBlue(splice_image,GetPixelBlue(image,p),q);"
    },
    {
        "line": 302,
        "fullcodeline": "SetPixelAlpha(splice_image,GetPixelAlpha(image,p),q);"
    },
    {
        "line": 303,
        "fullcodeline": "p+=GetPixelChannels(image);"
    },
    {
        "line": 304,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 307,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 316,
        "fullcodeline": "proceed=SetImageProgress(image,SpliceImageTag,progress++,"
    },
    {
        "line": 146,
        "fullcodeline": "if (GetPixelReadMask(image,p) == 0)"
    },
    {
        "line": 153,
        "fullcodeline": "for (i=0; i < (ssize_t) GetPixelChannels(image); i++)"
    },
    {
        "line": 177,
        "fullcodeline": "if (GetPixelReadMask(image,p) == 0)"
    },
    {
        "line": 184,
        "fullcodeline": "for (i=0; i < (ssize_t) GetPixelChannels(image); i++)"
    },
    {
        "line": 213,
        "fullcodeline": "if (proceed == MagickFalse)"
    },
    {
        "line": 251,
        "fullcodeline": "if (GetPixelReadMask(image,q) == 0)"
    },
    {
        "line": 258,
        "fullcodeline": "for (i=0; i < (ssize_t) GetPixelChannels(image); i++)"
    },
    {
        "line": 282,
        "fullcodeline": "if (GetPixelReadMask(image,q) == 0)"
    },
    {
        "line": 289,
        "fullcodeline": "for (i=0; i < (ssize_t) GetPixelChannels(image); i++)"
    },
    {
        "line": 318,
        "fullcodeline": "if (proceed == MagickFalse)"
    },
    {
        "line": 148,
        "fullcodeline": "SetPixelBackgoundColor(splice_image,q);"
    },
    {
        "line": 149,
        "fullcodeline": "p+=GetPixelChannels(image);"
    },
    {
        "line": 150,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 155,
        "fullcodeline": "PixelChannel channel=GetPixelChannelChannel(image,i);"
    },
    {
        "line": 156,
        "fullcodeline": "PixelTrait traits=GetPixelChannelTraits(image,channel);"
    },
    {
        "line": 157,
        "fullcodeline": "PixelTrait splice_traits=GetPixelChannelTraits(splice_image,channel);"
    },
    {
        "line": 161,
        "fullcodeline": "SetPixelChannel(splice_image,channel,p[i],q);"
    },
    {
        "line": 179,
        "fullcodeline": "SetPixelBackgoundColor(splice_image,q);"
    },
    {
        "line": 180,
        "fullcodeline": "p+=GetPixelChannels(image);"
    },
    {
        "line": 181,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 186,
        "fullcodeline": "PixelChannel channel=GetPixelChannelChannel(image,i);"
    },
    {
        "line": 187,
        "fullcodeline": "PixelTrait traits=GetPixelChannelTraits(image,channel);"
    },
    {
        "line": 188,
        "fullcodeline": "PixelTrait splice_traits=GetPixelChannelTraits(splice_image,channel);"
    },
    {
        "line": 192,
        "fullcodeline": "SetPixelChannel(splice_image,channel,p[i],q);"
    },
    {
        "line": 214,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 253,
        "fullcodeline": "SetPixelBackgoundColor(splice_image,q);"
    },
    {
        "line": 254,
        "fullcodeline": "p+=GetPixelChannels(image);"
    },
    {
        "line": 255,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 260,
        "fullcodeline": "PixelChannel channel=GetPixelChannelChannel(image,i);"
    },
    {
        "line": 261,
        "fullcodeline": "PixelTrait traits=GetPixelChannelTraits(image,channel);"
    },
    {
        "line": 262,
        "fullcodeline": "PixelTrait splice_traits=GetPixelChannelTraits(splice_image,channel);"
    },
    {
        "line": 266,
        "fullcodeline": "SetPixelChannel(splice_image,channel,p[i],q);"
    },
    {
        "line": 284,
        "fullcodeline": "SetPixelBackgoundColor(splice_image,q);"
    },
    {
        "line": 285,
        "fullcodeline": "p+=GetPixelChannels(image);"
    },
    {
        "line": 286,
        "fullcodeline": "q+=GetPixelChannels(splice_image);"
    },
    {
        "line": 291,
        "fullcodeline": "PixelChannel channel=GetPixelChannelChannel(image,i);"
    },
    {
        "line": 292,
        "fullcodeline": "PixelTrait traits=GetPixelChannelTraits(image,channel);"
    },
    {
        "line": 293,
        "fullcodeline": "PixelTrait splice_traits=GetPixelChannelTraits(splice_image,channel);"
    },
    {
        "line": 297,
        "fullcodeline": "SetPixelChannel(splice_image,channel,p[i],q);"
    },
    {
        "line": 319,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 158,
        "fullcodeline": "if ((traits == UndefinedPixelTrait) ||"
    },
    {
        "line": 189,
        "fullcodeline": "if ((traits == UndefinedPixelTrait) ||"
    },
    {
        "line": 263,
        "fullcodeline": "if ((traits == UndefinedPixelTrait) ||"
    },
    {
        "line": 294,
        "fullcodeline": "if ((traits == UndefinedPixelTrait) ||"
    },
    {
        "line": 159,
        "fullcodeline": "(splice_traits == UndefinedPixelTrait))"
    },
    {
        "line": 190,
        "fullcodeline": "(splice_traits == UndefinedPixelTrait))"
    },
    {
        "line": 264,
        "fullcodeline": "(splice_traits == UndefinedPixelTrait))"
    },
    {
        "line": 295,
        "fullcodeline": "(splice_traits == UndefinedPixelTrait))"
    }
]