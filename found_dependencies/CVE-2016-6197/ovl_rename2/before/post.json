[
    {
        "line": 15,
        "fullcodeline": "bool new_create = false;"
    },
    {
        "line": 16,
        "fullcodeline": "bool cleanup_whiteout = false;"
    },
    {
        "line": 17,
        "fullcodeline": "bool overwrite = !(flags & RENAME_EXCHANGE);"
    },
    {
        "line": 18,
        "fullcodeline": "bool is_dir = d_is_dir(old);"
    },
    {
        "line": 19,
        "fullcodeline": "bool new_is_dir = false;"
    },
    {
        "line": 20,
        "fullcodeline": "struct dentry *opaquedir = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "const struct cred *old_cred = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "struct cred *override_cred = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 28,
        "fullcodeline": "flags &= ~RENAME_NOREPLACE;"
    },
    {
        "line": 30,
        "fullcodeline": "err = ovl_check_sticky(old);"
    },
    {
        "line": 35,
        "fullcodeline": "old_type = ovl_path_type(old);"
    },
    {
        "line": 36,
        "fullcodeline": "err = -EXDEV;"
    },
    {
        "line": 71,
        "fullcodeline": "err = ovl_want_write(old);"
    },
    {
        "line": 75,
        "fullcodeline": "err = ovl_copy_up(old);"
    },
    {
        "line": 79,
        "fullcodeline": "err = ovl_copy_up(new->d_parent);"
    },
    {
        "line": 88,
        "fullcodeline": "old_opaque = !OVL_TYPE_PURE_UPPER(old_type);"
    },
    {
        "line": 89,
        "fullcodeline": "new_opaque = !OVL_TYPE_PURE_UPPER(new_type);"
    },
    {
        "line": 136,
        "fullcodeline": "old_upperdir = ovl_dentry_upper(old->d_parent);"
    },
    {
        "line": 137,
        "fullcodeline": "new_upperdir = ovl_dentry_upper(new->d_parent);"
    },
    {
        "line": 139,
        "fullcodeline": "trap = lock_rename(new_upperdir, old_upperdir);"
    },
    {
        "line": 141,
        "fullcodeline": "olddentry = ovl_dentry_upper(old);"
    },
    {
        "line": 142,
        "fullcodeline": "newdentry = ovl_dentry_upper(new);"
    },
    {
        "line": 159,
        "fullcodeline": "err = -ESTALE;"
    },
    {
        "line": 221,
        "fullcodeline": "ovl_dentry_version_inc(old->d_parent);"
    },
    {
        "line": 222,
        "fullcodeline": "ovl_dentry_version_inc(new->d_parent);"
    },
    {
        "line": 225,
        "fullcodeline": "dput(newdentry);"
    },
    {
        "line": 227,
        "fullcodeline": "unlock_rename(new_upperdir, old_upperdir);"
    },
    {
        "line": 234,
        "fullcodeline": "ovl_drop_write(old);"
    },
    {
        "line": 236,
        "fullcodeline": "dput(opaquedir);"
    },
    {
        "line": 25,
        "fullcodeline": "if (flags & ~(RENAME_EXCHANGE | RENAME_NOREPLACE))"
    },
    {
        "line": 37,
        "fullcodeline": "if (OVL_TYPE_MERGE_OR_LOWER(old_type) && is_dir)"
    },
    {
        "line": 82,
        "fullcodeline": "if (!overwrite) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (old_opaque || new_opaque) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (overwrite && OVL_TYPE_MERGE_OR_LOWER(new_type) && new_is_dir) {"
    },
    {
        "line": 160,
        "fullcodeline": "if (olddentry->d_parent != old_upperdir)"
    },
    {
        "line": 162,
        "fullcodeline": "if (newdentry->d_parent != new_upperdir)"
    },
    {
        "line": 164,
        "fullcodeline": "if (olddentry == trap)"
    },
    {
        "line": 166,
        "fullcodeline": "if (newdentry == trap)"
    },
    {
        "line": 169,
        "fullcodeline": "if (is_dir && !old_opaque && new_opaque) {"
    },
    {
        "line": 174,
        "fullcodeline": "if (!overwrite && new_is_dir && old_opaque && !new_opaque) {"
    },
    {
        "line": 180,
        "fullcodeline": "if (old_opaque || new_opaque) {"
    },
    {
        "line": 200,
        "fullcodeline": "if (is_dir && old_opaque && !new_opaque)"
    },
    {
        "line": 202,
        "fullcodeline": "if (!overwrite && new_is_dir && !old_opaque && new_opaque)"
    },
    {
        "line": 212,
        "fullcodeline": "if (old_opaque != new_opaque) {"
    },
    {
        "line": 229,
        "fullcodeline": "if (old_opaque || new_opaque) {"
    },
    {
        "line": 41,
        "fullcodeline": "err = ovl_check_sticky(new);"
    },
    {
        "line": 48,
        "fullcodeline": "new_type = ovl_path_type(new);"
    },
    {
        "line": 49,
        "fullcodeline": "err = -EXDEV;"
    },
    {
        "line": 53,
        "fullcodeline": "err = 0;"
    },
    {
        "line": 83,
        "fullcodeline": "err = ovl_copy_up(new);"
    },
    {
        "line": 92,
        "fullcodeline": "err = -ENOMEM;"
    },
    {
        "line": 93,
        "fullcodeline": "override_cred = prepare_creds();"
    },
    {
        "line": 104,
        "fullcodeline": "cap_raise(override_cred->cap_effective, CAP_SYS_ADMIN);"
    },
    {
        "line": 105,
        "fullcodeline": "cap_raise(override_cred->cap_effective, CAP_DAC_OVERRIDE);"
    },
    {
        "line": 106,
        "fullcodeline": "cap_raise(override_cred->cap_effective, CAP_FOWNER);"
    },
    {
        "line": 107,
        "fullcodeline": "cap_raise(override_cred->cap_effective, CAP_FSETID);"
    },
    {
        "line": 108,
        "fullcodeline": "cap_raise(override_cred->cap_effective, CAP_CHOWN);"
    },
    {
        "line": 109,
        "fullcodeline": "old_cred = override_creds(override_cred);"
    },
    {
        "line": 113,
        "fullcodeline": "opaquedir = ovl_check_empty_and_clear(new);"
    },
    {
        "line": 114,
        "fullcodeline": "err = PTR_ERR(opaquedir);"
    },
    {
        "line": 170,
        "fullcodeline": "err = ovl_set_opaque(olddentry);"
    },
    {
        "line": 175,
        "fullcodeline": "err = ovl_set_opaque(newdentry);"
    },
    {
        "line": 181,
        "fullcodeline": "err = ovl_do_rename(old_upperdir->d_inode, olddentry,"
    },
    {
        "line": 201,
        "fullcodeline": "ovl_remove_opaque(olddentry);"
    },
    {
        "line": 203,
        "fullcodeline": "ovl_remove_opaque(newdentry);"
    },
    {
        "line": 213,
        "fullcodeline": "ovl_dentry_set_opaque(old, new_opaque);"
    },
    {
        "line": 219,
        "fullcodeline": "ovl_cleanup(old_upperdir->d_inode, newdentry);"
    },
    {
        "line": 230,
        "fullcodeline": "revert_creds(old_cred);"
    },
    {
        "line": 231,
        "fullcodeline": "put_cred(override_cred);"
    },
    {
        "line": 45,
        "fullcodeline": "if (d_is_dir(new))"
    },
    {
        "line": 50,
        "fullcodeline": "if (!overwrite && OVL_TYPE_MERGE_OR_LOWER(new_type) && new_is_dir)"
    },
    {
        "line": 54,
        "fullcodeline": "if (!OVL_TYPE_UPPER(new_type) && !OVL_TYPE_UPPER(old_type)) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (OVL_TYPE_UPPER(new_type) && OVL_TYPE_UPPER(old_type)) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (!override_cred)"
    },
    {
        "line": 115,
        "fullcodeline": "if (IS_ERR(opaquedir)) {"
    },
    {
        "line": 151,
        "fullcodeline": "new_create = true;"
    },
    {
        "line": 152,
        "fullcodeline": "newdentry = lookup_one_len(new->d_name.name, new_upperdir,"
    },
    {
        "line": 154,
        "fullcodeline": "err = PTR_ERR(newdentry);"
    },
    {
        "line": 186,
        "fullcodeline": "BUG_ON(flags & ~RENAME_EXCHANGE);"
    },
    {
        "line": 187,
        "fullcodeline": "err = vfs_rename(old_upperdir->d_inode, olddentry,"
    },
    {
        "line": 193,
        "fullcodeline": "if (is_dir && !old_opaque && new_opaque)"
    },
    {
        "line": 195,
        "fullcodeline": "if (!overwrite && new_is_dir && old_opaque && !new_opaque)"
    },
    {
        "line": 214,
        "fullcodeline": "if (!overwrite)"
    },
    {
        "line": 46,
        "fullcodeline": "new_is_dir = true;"
    },
    {
        "line": 65,
        "fullcodeline": "if (ovl_dentry_is_opaque(new))"
    },
    {
        "line": 116,
        "fullcodeline": "opaquedir = NULL;"
    },
    {
        "line": 145,
        "fullcodeline": "newdentry = opaquedir;"
    },
    {
        "line": 146,
        "fullcodeline": "opaquedir = NULL;"
    },
    {
        "line": 155,
        "fullcodeline": "if (IS_ERR(newdentry))"
    },
    {
        "line": 194,
        "fullcodeline": "ovl_remove_opaque(olddentry);"
    },
    {
        "line": 196,
        "fullcodeline": "ovl_remove_opaque(newdentry);"
    },
    {
        "line": 215,
        "fullcodeline": "ovl_dentry_set_opaque(new, old_opaque);"
    },
    {
        "line": 66,
        "fullcodeline": "new_type = __OVL_PATH_UPPER;"
    },
    {
        "line": 123,
        "fullcodeline": "if (new->d_inode || !new_opaque) {"
    },
    {
        "line": 148,
        "fullcodeline": "dget(newdentry);"
    },
    {
        "line": 68,
        "fullcodeline": "new_type = __OVL_PATH_UPPER | __OVL_PATH_PURE;"
    },
    {
        "line": 125,
        "fullcodeline": "flags |= RENAME_WHITEOUT;"
    },
    {
        "line": 130,
        "fullcodeline": "} else if (is_dir && !new->d_inode && new_opaque) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (ovl_dentry_lower(old)->d_inode =="
    },
    {
        "line": 56,
        "fullcodeline": "ovl_dentry_lower(new)->d_inode)"
    },
    {
        "line": 60,
        "fullcodeline": "if (ovl_dentry_upper(old)->d_inode =="
    },
    {
        "line": 61,
        "fullcodeline": "ovl_dentry_upper(new)->d_inode)"
    },
    {
        "line": 128,
        "fullcodeline": "flags |= RENAME_EXCHANGE;"
    },
    {
        "line": 131,
        "fullcodeline": "flags |= RENAME_EXCHANGE;"
    },
    {
        "line": 132,
        "fullcodeline": "cleanup_whiteout = true;"
    }
]