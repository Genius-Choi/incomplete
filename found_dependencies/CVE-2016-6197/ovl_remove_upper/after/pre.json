[
    {
        "line": 3,
        "fullcodeline": "struct dentry *upperdir = ovl_dentry_upper(dentry->d_parent);"
    },
    {
        "line": 4,
        "fullcodeline": "struct inode *dir = upperdir->d_inode;"
    },
    {
        "line": 8,
        "fullcodeline": "inode_lock_nested(dir, I_MUTEX_PARENT);"
    },
    {
        "line": 9,
        "fullcodeline": "upper = lookup_one_len(dentry->d_name.name, upperdir,"
    },
    {
        "line": 11,
        "fullcodeline": "err = PTR_ERR(upper);"
    },
    {
        "line": 15,
        "fullcodeline": "err = -ESTALE;"
    },
    {
        "line": 23,
        "fullcodeline": "dput(upper);"
    },
    {
        "line": 34,
        "fullcodeline": "inode_unlock(dir);"
    },
    {
        "line": 12,
        "fullcodeline": "if (IS_ERR(upper))"
    },
    {
        "line": 16,
        "fullcodeline": "if (upper == ovl_dentry_upper(dentry)) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (!err)"
    },
    {
        "line": 21,
        "fullcodeline": "ovl_dentry_version_inc(dentry->d_parent);"
    },
    {
        "line": 32,
        "fullcodeline": "d_drop(dentry);"
    },
    {
        "line": 18,
        "fullcodeline": "err = vfs_rmdir(dir, upper);"
    },
    {
        "line": 20,
        "fullcodeline": "err = vfs_unlink(dir, upper, NULL);"
    }
]