[
    {
        "line": 2,
        "fullcodeline": "name = \"model\""
    },
    {
        "line": 3,
        "fullcodeline": "mlflow_client.create_registered_model(name)"
    },
    {
        "line": 4,
        "fullcodeline": "exp_id = mlflow_client.create_experiment(\"test\")"
    },
    {
        "line": 5,
        "fullcodeline": "run = mlflow_client.create_run(experiment_id=exp_id)"
    },
    {
        "line": 7,
        "fullcodeline": "response = requests.post("
    },
    {
        "line": 15,
        "fullcodeline": "assert response.status_code == 200"
    },
    {
        "line": 18,
        "fullcodeline": "response = requests.post("
    },
    {
        "line": 26,
        "fullcodeline": "assert response.status_code == 200"
    },
    {
        "line": 28,
        "fullcodeline": "response = requests.post("
    },
    {
        "line": 36,
        "fullcodeline": "assert response.status_code == 200"
    },
    {
        "line": 39,
        "fullcodeline": "response = requests.post("
    },
    {
        "line": 47,
        "fullcodeline": "assert response.status_code == 400"
    },
    {
        "line": 48,
        "fullcodeline": "assert \"If supplying a source as an http, https,\" in response.json()[\"message\"]"
    },
    {
        "line": 50,
        "fullcodeline": "response = requests.post("
    },
    {
        "line": 58,
        "fullcodeline": "assert response.status_code == 400"
    },
    {
        "line": 59,
        "fullcodeline": "assert \"If supplying a source as an http, https,\" in response.json()[\"message\"]"
    },
    {
        "line": 61,
        "fullcodeline": "response = requests.post("
    },
    {
        "line": 69,
        "fullcodeline": "assert response.status_code == 400"
    },
    {
        "line": 70,
        "fullcodeline": "assert \"If supplying a source as an http, https,\" in response.json()[\"message\"]"
    },
    {
        "line": 72,
        "fullcodeline": "response = requests.post("
    },
    {
        "line": 80,
        "fullcodeline": "assert response.status_code == 400"
    },
    {
        "line": 81,
        "fullcodeline": "assert \"If supplying a source as an http, https,\" in response.json()[\"message\"]"
    },
    {
        "line": 83,
        "fullcodeline": "response = requests.post("
    },
    {
        "line": 91,
        "fullcodeline": "assert response.status_code == 400"
    },
    {
        "line": 92,
        "fullcodeline": "assert \"If supplying a source as an http, https,\" in response.json()[\"message\"]"
    },
    {
        "line": 8,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create\","
    },
    {
        "line": 19,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create\","
    },
    {
        "line": 29,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create\","
    },
    {
        "line": 40,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create\","
    },
    {
        "line": 51,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create\","
    },
    {
        "line": 62,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create\","
    },
    {
        "line": 73,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create\","
    },
    {
        "line": 84,
        "fullcodeline": "f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create\","
    },
    {
        "line": 9,
        "fullcodeline": "json={"
    },
    {
        "line": 20,
        "fullcodeline": "json={"
    },
    {
        "line": 30,
        "fullcodeline": "json={"
    },
    {
        "line": 41,
        "fullcodeline": "json={"
    },
    {
        "line": 52,
        "fullcodeline": "json={"
    },
    {
        "line": 63,
        "fullcodeline": "json={"
    },
    {
        "line": 74,
        "fullcodeline": "json={"
    },
    {
        "line": 85,
        "fullcodeline": "json={"
    },
    {
        "line": 11,
        "fullcodeline": "\"source\": run.info.artifact_uri[len(\"file://\") :],"
    }
]