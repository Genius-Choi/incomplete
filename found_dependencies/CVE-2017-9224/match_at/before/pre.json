[
    {
        "line": 7,
        "fullcodeline": "static UChar FinishCode[] = { OP_FINISH };"
    },
    {
        "line": 26,
        "fullcodeline": "UChar *p = reg->p;"
    },
    {
        "line": 27,
        "fullcodeline": "OnigOptionType option = reg->options;"
    },
    {
        "line": 28,
        "fullcodeline": "OnigEncoding encode = reg->enc;"
    },
    {
        "line": 29,
        "fullcodeline": "OnigCaseFoldType case_fold_flag = reg->case_fold_flag;"
    },
    {
        "line": 32,
        "fullcodeline": "pop_level = reg->stack_pop_level;"
    },
    {
        "line": 33,
        "fullcodeline": "num_mem = reg->num_mem;"
    },
    {
        "line": 34,
        "fullcodeline": "STACK_INIT(INIT_MATCH_STACK_SIZE);"
    },
    {
        "line": 47,
        "fullcodeline": "STACK_PUSH_ENSURED(STK_ALT, FinishCode);  /* bottom stack */"
    },
    {
        "line": 48,
        "fullcodeline": "best_len = ONIG_MISMATCH;"
    },
    {
        "line": 49,
        "fullcodeline": "s = (UChar* )sstart;"
    },
    {
        "line": 36,
        "fullcodeline": "for (i = 1; i <= num_mem; i++) {"
    },
    {
        "line": 37,
        "fullcodeline": "mem_start_stk[i] = mem_end_stk[i] = INVALID_STACK_INDEX;"
    },
    {
        "line": 71,
        "fullcodeline": "sbegin = s;"
    },
    {
        "line": 1473,
        "fullcodeline": "sprev = sbegin;"
    },
    {
        "line": 72,
        "fullcodeline": "switch (*p++) {"
    },
    {
        "line": 73,
        "fullcodeline": "case OP_END:  MOP_IN(OP_END);"
    },
    {
        "line": 74,
        "fullcodeline": "n = s - sstart;"
    },
    {
        "line": 184,
        "fullcodeline": "case OP_EXACT1:  MOP_IN(OP_EXACT1);"
    },
    {
        "line": 191,
        "fullcodeline": "DATA_ENSURE(0);"
    },
    {
        "line": 192,
        "fullcodeline": "p++;"
    },
    {
        "line": 196,
        "fullcodeline": "case OP_EXACT1_IC:  MOP_IN(OP_EXACT1_IC);"
    },
    {
        "line": 218,
        "fullcodeline": "case OP_EXACT2:  MOP_IN(OP_EXACT2);"
    },
    {
        "line": 219,
        "fullcodeline": "DATA_ENSURE(2);"
    },
    {
        "line": 221,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 223,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 224,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 229,
        "fullcodeline": "case OP_EXACT3:  MOP_IN(OP_EXACT3);"
    },
    {
        "line": 230,
        "fullcodeline": "DATA_ENSURE(3);"
    },
    {
        "line": 232,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 234,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 236,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 237,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 242,
        "fullcodeline": "case OP_EXACT4:  MOP_IN(OP_EXACT4);"
    },
    {
        "line": 243,
        "fullcodeline": "DATA_ENSURE(4);"
    },
    {
        "line": 245,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 247,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 249,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 251,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 252,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 257,
        "fullcodeline": "case OP_EXACT5:  MOP_IN(OP_EXACT5);"
    },
    {
        "line": 258,
        "fullcodeline": "DATA_ENSURE(5);"
    },
    {
        "line": 260,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 262,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 264,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 266,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 268,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 269,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 274,
        "fullcodeline": "case OP_EXACTN:  MOP_IN(OP_EXACTN);"
    },
    {
        "line": 275,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 276,
        "fullcodeline": "DATA_ENSURE(tlen);"
    },
    {
        "line": 280,
        "fullcodeline": "sprev = s - 1;"
    },
    {
        "line": 285,
        "fullcodeline": "case OP_EXACTN_IC:  MOP_IN(OP_EXACTN_IC);"
    },
    {
        "line": 313,
        "fullcodeline": "case OP_EXACTMB2N1:  MOP_IN(OP_EXACTMB2N1);"
    },
    {
        "line": 314,
        "fullcodeline": "DATA_ENSURE(2);"
    },
    {
        "line": 316,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 318,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 322,
        "fullcodeline": "case OP_EXACTMB2N2:  MOP_IN(OP_EXACTMB2N2);"
    },
    {
        "line": 323,
        "fullcodeline": "DATA_ENSURE(4);"
    },
    {
        "line": 325,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 327,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 328,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 330,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 332,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 337,
        "fullcodeline": "case OP_EXACTMB2N3:  MOP_IN(OP_EXACTMB2N3);"
    },
    {
        "line": 338,
        "fullcodeline": "DATA_ENSURE(6);"
    },
    {
        "line": 340,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 342,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 344,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 346,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 347,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 349,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 351,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 356,
        "fullcodeline": "case OP_EXACTMB2N:  MOP_IN(OP_EXACTMB2N);"
    },
    {
        "line": 357,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 358,
        "fullcodeline": "DATA_ENSURE(tlen * 2);"
    },
    {
        "line": 365,
        "fullcodeline": "sprev = s - 2;"
    },
    {
        "line": 370,
        "fullcodeline": "case OP_EXACTMB3N:  MOP_IN(OP_EXACTMB3N);"
    },
    {
        "line": 371,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 372,
        "fullcodeline": "DATA_ENSURE(tlen * 3);"
    },
    {
        "line": 381,
        "fullcodeline": "sprev = s - 3;"
    },
    {
        "line": 386,
        "fullcodeline": "case OP_EXACTMBN:  MOP_IN(OP_EXACTMBN);"
    },
    {
        "line": 387,
        "fullcodeline": "GET_LENGTH_INC(tlen,  p);  /* mb-len */"
    },
    {
        "line": 388,
        "fullcodeline": "GET_LENGTH_INC(tlen2, p);  /* string len */"
    },
    {
        "line": 389,
        "fullcodeline": "tlen2 *= tlen;"
    },
    {
        "line": 390,
        "fullcodeline": "DATA_ENSURE(tlen2);"
    },
    {
        "line": 395,
        "fullcodeline": "sprev = s - tlen;"
    },
    {
        "line": 400,
        "fullcodeline": "case OP_CCLASS:  MOP_IN(OP_CCLASS);"
    },
    {
        "line": 401,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 403,
        "fullcodeline": "p += SIZE_BITSET;"
    },
    {
        "line": 404,
        "fullcodeline": "s += enclen(encode, s);   /* OP_CCLASS can match mb-code. \\D, \\S */"
    },
    {
        "line": 408,
        "fullcodeline": "case OP_CCLASS_MB:  MOP_IN(OP_CCLASS_MB);"
    },
    {
        "line": 412,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 433,
        "fullcodeline": "p += tlen;"
    },
    {
        "line": 437,
        "fullcodeline": "case OP_CCLASS_MIX:  MOP_IN(OP_CCLASS_MIX);"
    },
    {
        "line": 438,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 455,
        "fullcodeline": "case OP_CCLASS_NOT:  MOP_IN(OP_CCLASS_NOT);"
    },
    {
        "line": 456,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 458,
        "fullcodeline": "p += SIZE_BITSET;"
    },
    {
        "line": 459,
        "fullcodeline": "s += enclen(encode, s);"
    },
    {
        "line": 463,
        "fullcodeline": "case OP_CCLASS_MB_NOT:  MOP_IN(OP_CCLASS_MB_NOT);"
    },
    {
        "line": 464,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 473,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 498,
        "fullcodeline": "p += tlen;"
    },
    {
        "line": 504,
        "fullcodeline": "case OP_CCLASS_MIX_NOT:  MOP_IN(OP_CCLASS_MIX_NOT);"
    },
    {
        "line": 505,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 522,
        "fullcodeline": "case OP_CCLASS_NODE:  MOP_IN(OP_CCLASS_NODE);"
    },
    {
        "line": 541,
        "fullcodeline": "case OP_ANYCHAR:  MOP_IN(OP_ANYCHAR);"
    },
    {
        "line": 542,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 543,
        "fullcodeline": "n = enclen(encode, s);"
    },
    {
        "line": 544,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 546,
        "fullcodeline": "s += n;"
    },
    {
        "line": 550,
        "fullcodeline": "case OP_ANYCHAR_ML:  MOP_IN(OP_ANYCHAR_ML);"
    },
    {
        "line": 551,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 552,
        "fullcodeline": "n = enclen(encode, s);"
    },
    {
        "line": 553,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 554,
        "fullcodeline": "s += n;"
    },
    {
        "line": 558,
        "fullcodeline": "case OP_ANYCHAR_STAR:  MOP_IN(OP_ANYCHAR_STAR);"
    },
    {
        "line": 570,
        "fullcodeline": "case OP_ANYCHAR_ML_STAR:  MOP_IN(OP_ANYCHAR_ML_STAR);"
    },
    {
        "line": 587,
        "fullcodeline": "case OP_ANYCHAR_STAR_PEEK_NEXT:  MOP_IN(OP_ANYCHAR_STAR_PEEK_NEXT);"
    },
    {
        "line": 598,
        "fullcodeline": "p++;"
    },
    {
        "line": 602,
        "fullcodeline": "case OP_ANYCHAR_ML_STAR_PEEK_NEXT:MOP_IN(OP_ANYCHAR_ML_STAR_PEEK_NEXT);"
    },
    {
        "line": 618,
        "fullcodeline": "p++;"
    },
    {
        "line": 663,
        "fullcodeline": "case OP_WORD:  MOP_IN(OP_WORD);"
    },
    {
        "line": 664,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 668,
        "fullcodeline": "s += enclen(encode, s);"
    },
    {
        "line": 672,
        "fullcodeline": "case OP_NOT_WORD:  MOP_IN(OP_NOT_WORD);"
    },
    {
        "line": 673,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 677,
        "fullcodeline": "s += enclen(encode, s);"
    },
    {
        "line": 681,
        "fullcodeline": "case OP_WORD_BOUND:  MOP_IN(OP_WORD_BOUND);"
    },
    {
        "line": 700,
        "fullcodeline": "case OP_NOT_WORD_BOUND:  MOP_IN(OP_NOT_WORD_BOUND);"
    },
    {
        "line": 740,
        "fullcodeline": "case OP_BEGIN_BUF:  MOP_IN(OP_BEGIN_BUF);"
    },
    {
        "line": 747,
        "fullcodeline": "case OP_END_BUF:  MOP_IN(OP_END_BUF);"
    },
    {
        "line": 754,
        "fullcodeline": "case OP_BEGIN_LINE:  MOP_IN(OP_BEGIN_LINE);"
    },
    {
        "line": 767,
        "fullcodeline": "case OP_END_LINE:  MOP_IN(OP_END_LINE);"
    },
    {
        "line": 792,
        "fullcodeline": "case OP_SEMI_END_BUF:  MOP_IN(OP_SEMI_END_BUF);"
    },
    {
        "line": 822,
        "fullcodeline": "case OP_BEGIN_POSITION:  MOP_IN(OP_BEGIN_POSITION);"
    },
    {
        "line": 830,
        "fullcodeline": "case OP_MEMORY_START_PUSH:  MOP_IN(OP_MEMORY_START_PUSH);"
    },
    {
        "line": 831,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);"
    },
    {
        "line": 832,
        "fullcodeline": "STACK_PUSH_MEM_START(mem, s);"
    },
    {
        "line": 837,
        "fullcodeline": "case OP_MEMORY_START:  MOP_IN(OP_MEMORY_START);"
    },
    {
        "line": 838,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);"
    },
    {
        "line": 839,
        "fullcodeline": "mem_start_stk[mem] = (OnigStackIndex )((void* )s);"
    },
    {
        "line": 844,
        "fullcodeline": "case OP_MEMORY_END_PUSH:  MOP_IN(OP_MEMORY_END_PUSH);"
    },
    {
        "line": 845,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);"
    },
    {
        "line": 846,
        "fullcodeline": "STACK_PUSH_MEM_END(mem, s);"
    },
    {
        "line": 851,
        "fullcodeline": "case OP_MEMORY_END:  MOP_IN(OP_MEMORY_END);"
    },
    {
        "line": 852,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);"
    },
    {
        "line": 853,
        "fullcodeline": "mem_end_stk[mem] = (OnigStackIndex )((void* )s);"
    },
    {
        "line": 884,
        "fullcodeline": "case OP_BACKREF1:  MOP_IN(OP_BACKREF1);"
    },
    {
        "line": 885,
        "fullcodeline": "mem = 1;"
    },
    {
        "line": 889,
        "fullcodeline": "case OP_BACKREF2:  MOP_IN(OP_BACKREF2);"
    },
    {
        "line": 890,
        "fullcodeline": "mem = 2;"
    },
    {
        "line": 894,
        "fullcodeline": "case OP_BACKREFN:  MOP_IN(OP_BACKREFN);"
    },
    {
        "line": 895,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);"
    },
    {
        "line": 927,
        "fullcodeline": "case OP_BACKREFN_IC:  MOP_IN(OP_BACKREFN_IC);"
    },
    {
        "line": 928,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);"
    },
    {
        "line": 959,
        "fullcodeline": "case OP_BACKREF_MULTI:  MOP_IN(OP_BACKREF_MULTI);"
    },
    {
        "line": 998,
        "fullcodeline": "case OP_BACKREF_MULTI_IC:  MOP_IN(OP_BACKREF_MULTI_IC);"
    },
    {
        "line": 1081,
        "fullcodeline": "case OP_NULL_CHECK_START:  MOP_IN(OP_NULL_CHECK_START);"
    },
    {
        "line": 1082,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);    /* mem: null check id */"
    },
    {
        "line": 1083,
        "fullcodeline": "STACK_PUSH_NULL_CHECK_START(mem, s);"
    },
    {
        "line": 1088,
        "fullcodeline": "case OP_NULL_CHECK_END:  MOP_IN(OP_NULL_CHECK_END);"
    },
    {
        "line": 1172,
        "fullcodeline": "case OP_JUMP:  MOP_IN(OP_JUMP);"
    },
    {
        "line": 1173,
        "fullcodeline": "GET_RELADDR_INC(addr, p);"
    },
    {
        "line": 1174,
        "fullcodeline": "p += addr;"
    },
    {
        "line": 1180,
        "fullcodeline": "case OP_PUSH:  MOP_IN(OP_PUSH);"
    },
    {
        "line": 1181,
        "fullcodeline": "GET_RELADDR_INC(addr, p);"
    },
    {
        "line": 1182,
        "fullcodeline": "STACK_PUSH_ALT(p + addr, s, sprev);"
    },
    {
        "line": 1224,
        "fullcodeline": "case OP_POP:  MOP_IN(OP_POP);"
    },
    {
        "line": 1230,
        "fullcodeline": "case OP_PUSH_OR_JUMP_EXACT1:  MOP_IN(OP_PUSH_OR_JUMP_EXACT1);"
    },
    {
        "line": 1231,
        "fullcodeline": "GET_RELADDR_INC(addr, p);"
    },
    {
        "line": 1238,
        "fullcodeline": "p += (addr + 1);"
    },
    {
        "line": 1243,
        "fullcodeline": "case OP_PUSH_IF_PEEK_NEXT:  MOP_IN(OP_PUSH_IF_PEEK_NEXT);"
    },
    {
        "line": 1244,
        "fullcodeline": "GET_RELADDR_INC(addr, p);"
    },
    {
        "line": 1251,
        "fullcodeline": "p++;"
    },
    {
        "line": 1256,
        "fullcodeline": "case OP_REPEAT:  MOP_IN(OP_REPEAT);"
    },
    {
        "line": 1273,
        "fullcodeline": "case OP_REPEAT_NG:  MOP_IN(OP_REPEAT_NG);"
    },
    {
        "line": 1291,
        "fullcodeline": "case OP_REPEAT_INC:  MOP_IN(OP_REPEAT_INC);"
    },
    {
        "line": 1292,
        "fullcodeline": "GET_MEMNUM_INC(mem, p); /* mem: OP_REPEAT ID */"
    },
    {
        "line": 1293,
        "fullcodeline": "si = repeat_stk[mem];"
    },
    {
        "line": 1294,
        "fullcodeline": "stkp = STACK_AT(si);"
    },
    {
        "line": 1297,
        "fullcodeline": "stkp->u.repeat.count++;"
    },
    {
        "line": 1308,
        "fullcodeline": "STACK_PUSH_REPEAT_INC(si);"
    },
    {
        "line": 1314,
        "fullcodeline": "case OP_REPEAT_INC_SG:  MOP_IN(OP_REPEAT_INC_SG);"
    },
    {
        "line": 1315,
        "fullcodeline": "GET_MEMNUM_INC(mem, p); /* mem: OP_REPEAT ID */"
    },
    {
        "line": 1316,
        "fullcodeline": "STACK_GET_REPEAT(mem, stkp);"
    },
    {
        "line": 1317,
        "fullcodeline": "si = GET_STACK_INDEX(stkp);"
    },
    {
        "line": 1321,
        "fullcodeline": "case OP_REPEAT_INC_NG:  MOP_IN(OP_REPEAT_INC_NG);"
    },
    {
        "line": 1322,
        "fullcodeline": "GET_MEMNUM_INC(mem, p); /* mem: OP_REPEAT ID */"
    },
    {
        "line": 1323,
        "fullcodeline": "si = repeat_stk[mem];"
    },
    {
        "line": 1324,
        "fullcodeline": "stkp = STACK_AT(si);"
    },
    {
        "line": 1327,
        "fullcodeline": "stkp->u.repeat.count++;"
    },
    {
        "line": 1348,
        "fullcodeline": "case OP_REPEAT_INC_NG_SG:  MOP_IN(OP_REPEAT_INC_NG_SG);"
    },
    {
        "line": 1349,
        "fullcodeline": "GET_MEMNUM_INC(mem, p); /* mem: OP_REPEAT ID */"
    },
    {
        "line": 1350,
        "fullcodeline": "STACK_GET_REPEAT(mem, stkp);"
    },
    {
        "line": 1351,
        "fullcodeline": "si = GET_STACK_INDEX(stkp);"
    },
    {
        "line": 1355,
        "fullcodeline": "case OP_PUSH_POS:  MOP_IN(OP_PUSH_POS);"
    },
    {
        "line": 1356,
        "fullcodeline": "STACK_PUSH_POS(s, sprev);"
    },
    {
        "line": 1361,
        "fullcodeline": "case OP_POP_POS:  MOP_IN(OP_POP_POS);"
    },
    {
        "line": 1371,
        "fullcodeline": "case OP_PUSH_POS_NOT:  MOP_IN(OP_PUSH_POS_NOT);"
    },
    {
        "line": 1372,
        "fullcodeline": "GET_RELADDR_INC(addr, p);"
    },
    {
        "line": 1373,
        "fullcodeline": "STACK_PUSH_POS_NOT(p + addr, s, sprev);"
    },
    {
        "line": 1378,
        "fullcodeline": "case OP_FAIL_POS:  MOP_IN(OP_FAIL_POS);"
    },
    {
        "line": 1383,
        "fullcodeline": "case OP_PUSH_STOP_BT:  MOP_IN(OP_PUSH_STOP_BT);"
    },
    {
        "line": 1389,
        "fullcodeline": "case OP_POP_STOP_BT:  MOP_IN(OP_POP_STOP_BT);"
    },
    {
        "line": 1395,
        "fullcodeline": "case OP_LOOK_BEHIND:  MOP_IN(OP_LOOK_BEHIND);"
    },
    {
        "line": 1396,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 1397,
        "fullcodeline": "s = (UChar* )ONIGENC_STEP_BACK(encode, str, s, (int )tlen);"
    },
    {
        "line": 1399,
        "fullcodeline": "sprev = (UChar* )onigenc_get_prev_char_head(encode, str, s);"
    },
    {
        "line": 1404,
        "fullcodeline": "case OP_PUSH_LOOK_BEHIND_NOT:  MOP_IN(OP_PUSH_LOOK_BEHIND_NOT);"
    },
    {
        "line": 1405,
        "fullcodeline": "GET_RELADDR_INC(addr, p);"
    },
    {
        "line": 1406,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 1407,
        "fullcodeline": "q = (UChar* )ONIGENC_STEP_BACK(encode, str, s, (int )tlen);"
    },
    {
        "line": 1423,
        "fullcodeline": "case OP_FAIL_LOOK_BEHIND_NOT:  MOP_IN(OP_FAIL_LOOK_BEHIND_NOT);"
    },
    {
        "line": 1452,
        "fullcodeline": "case OP_FAIL:  MOP_IN(OP_FAIL);"
    },
    {
        "line": 1454,
        "fullcodeline": "p     = stk->u.state.pcode;"
    },
    {
        "line": 1455,
        "fullcodeline": "s     = stk->u.state.pstr;"
    },
    {
        "line": 1456,
        "fullcodeline": "sprev = stk->u.state.pstr_prev;"
    },
    {
        "line": 75,
        "fullcodeline": "if (n > best_len) {"
    },
    {
        "line": 170,
        "fullcodeline": "if (IS_FIND_CONDITION(option)) {"
    },
    {
        "line": 190,
        "fullcodeline": "if (*p != *s++) goto fail;"
    },
    {
        "line": 199,
        "fullcodeline": "UChar *q, lowbuf[ONIGENC_MBC_CASE_FOLD_MAXLEN];"
    },
    {
        "line": 201,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 202,
        "fullcodeline": "len = ONIGENC_MBC_CASE_FOLD(encode,"
    },
    {
        "line": 206,
        "fullcodeline": "DATA_ENSURE(0);"
    },
    {
        "line": 207,
        "fullcodeline": "q = lowbuf;"
    },
    {
        "line": 220,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 222,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 231,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 233,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 235,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 244,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 246,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 248,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 250,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 259,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 261,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 263,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 265,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 267,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 277,
        "fullcodeline": "while (tlen-- > 0) {"
    },
    {
        "line": 288,
        "fullcodeline": "UChar *q, *endp, lowbuf[ONIGENC_MBC_CASE_FOLD_MAXLEN];"
    },
    {
        "line": 290,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 291,
        "fullcodeline": "endp = p + tlen;"
    },
    {
        "line": 315,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 317,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 324,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 326,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 329,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 331,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 339,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 341,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 343,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 345,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 348,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 350,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 359,
        "fullcodeline": "while (tlen-- > 0) {"
    },
    {
        "line": 373,
        "fullcodeline": "while (tlen-- > 0) {"
    },
    {
        "line": 391,
        "fullcodeline": "while (tlen2-- > 0) {"
    },
    {
        "line": 402,
        "fullcodeline": "if (BITSET_AT(((BitSetRef )p), *s) == 0) goto fail;"
    },
    {
        "line": 409,
        "fullcodeline": "if (! ONIGENC_IS_MBC_HEAD(encode, s)) goto fail;"
    },
    {
        "line": 418,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 419,
        "fullcodeline": "mb_len = enclen(encode, s);"
    },
    {
        "line": 420,
        "fullcodeline": "DATA_ENSURE(mb_len);"
    },
    {
        "line": 421,
        "fullcodeline": "ss = s;"
    },
    {
        "line": 422,
        "fullcodeline": "s += mb_len;"
    },
    {
        "line": 423,
        "fullcodeline": "code = ONIGENC_MBC_TO_CODE(encode, ss, s);"
    },
    {
        "line": 428,
        "fullcodeline": "q = p;"
    },
    {
        "line": 429,
        "fullcodeline": "ALIGNMENT_RIGHT(q);"
    },
    {
        "line": 439,
        "fullcodeline": "if (ONIGENC_IS_MBC_HEAD(encode, s)) {"
    },
    {
        "line": 457,
        "fullcodeline": "if (BITSET_AT(((BitSetRef )p), *s) != 0) goto fail;"
    },
    {
        "line": 465,
        "fullcodeline": "if (! ONIGENC_IS_MBC_HEAD(encode, s)) {"
    },
    {
        "line": 477,
        "fullcodeline": "int mb_len = enclen(encode, s);"
    },
    {
        "line": 486,
        "fullcodeline": "ss = s;"
    },
    {
        "line": 487,
        "fullcodeline": "s += mb_len;"
    },
    {
        "line": 488,
        "fullcodeline": "code = ONIGENC_MBC_TO_CODE(encode, ss, s);"
    },
    {
        "line": 493,
        "fullcodeline": "q = p;"
    },
    {
        "line": 494,
        "fullcodeline": "ALIGNMENT_RIGHT(q);"
    },
    {
        "line": 506,
        "fullcodeline": "if (ONIGENC_IS_MBC_HEAD(encode, s)) {"
    },
    {
        "line": 529,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 530,
        "fullcodeline": "GET_POINTER_INC(node, p);"
    },
    {
        "line": 531,
        "fullcodeline": "mb_len = enclen(encode, s);"
    },
    {
        "line": 532,
        "fullcodeline": "ss = s;"
    },
    {
        "line": 533,
        "fullcodeline": "s += mb_len;"
    },
    {
        "line": 534,
        "fullcodeline": "DATA_ENSURE(0);"
    },
    {
        "line": 535,
        "fullcodeline": "code = ONIGENC_MBC_TO_CODE(encode, ss, s);"
    },
    {
        "line": 545,
        "fullcodeline": "if (ONIGENC_IS_MBC_NEWLINE(encode, s, end)) goto fail;"
    },
    {
        "line": 665,
        "fullcodeline": "if (! ONIGENC_IS_MBC_WORD(encode, s, end))"
    },
    {
        "line": 674,
        "fullcodeline": "if (ONIGENC_IS_MBC_WORD(encode, s, end))"
    },
    {
        "line": 682,
        "fullcodeline": "if (ON_STR_BEGIN(s)) {"
    },
    {
        "line": 701,
        "fullcodeline": "if (ON_STR_BEGIN(s)) {"
    },
    {
        "line": 741,
        "fullcodeline": "if (! ON_STR_BEGIN(s)) goto fail;"
    },
    {
        "line": 748,
        "fullcodeline": "if (! ON_STR_END(s)) goto fail;"
    },
    {
        "line": 755,
        "fullcodeline": "if (ON_STR_BEGIN(s)) {"
    },
    {
        "line": 768,
        "fullcodeline": "if (ON_STR_END(s)) {"
    },
    {
        "line": 793,
        "fullcodeline": "if (ON_STR_END(s)) {"
    },
    {
        "line": 823,
        "fullcodeline": "if (s != msa->start)"
    },
    {
        "line": 912,
        "fullcodeline": "pend = (BIT_STATUS_AT(reg->bt_mem_end, mem)"
    },
    {
        "line": 915,
        "fullcodeline": "n = pend - pstart;"
    },
    {
        "line": 916,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 917,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 918,
        "fullcodeline": "STRING_CMP(pstart, s, n);"
    },
    {
        "line": 944,
        "fullcodeline": "pend = (BIT_STATUS_AT(reg->bt_mem_end, mem)"
    },
    {
        "line": 947,
        "fullcodeline": "n = pend - pstart;"
    },
    {
        "line": 948,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 949,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 950,
        "fullcodeline": "STRING_CMP_IC(case_fold_flag, pstart, &s, n);"
    },
    {
        "line": 964,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 1003,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 1092,
        "fullcodeline": "GET_MEMNUM_INC(mem, p); /* mem: null check id */"
    },
    {
        "line": 1093,
        "fullcodeline": "STACK_NULL_CHECK(isnull, mem, s);"
    },
    {
        "line": 1232,
        "fullcodeline": "if (*p == *s && DATA_ENSURE_CHECK1) {"
    },
    {
        "line": 1245,
        "fullcodeline": "if (*p == *s) {"
    },
    {
        "line": 1258,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);    /* mem: OP_REPEAT ID */"
    },
    {
        "line": 1259,
        "fullcodeline": "GET_RELADDR_INC(addr, p);"
    },
    {
        "line": 1261,
        "fullcodeline": "STACK_ENSURE(1);"
    },
    {
        "line": 1262,
        "fullcodeline": "repeat_stk[mem] = GET_STACK_INDEX(stk);"
    },
    {
        "line": 1263,
        "fullcodeline": "STACK_PUSH_REPEAT(mem, p);"
    },
    {
        "line": 1275,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);    /* mem: OP_REPEAT ID */"
    },
    {
        "line": 1276,
        "fullcodeline": "GET_RELADDR_INC(addr, p);"
    },
    {
        "line": 1278,
        "fullcodeline": "STACK_ENSURE(1);"
    },
    {
        "line": 1279,
        "fullcodeline": "repeat_stk[mem] = GET_STACK_INDEX(stk);"
    },
    {
        "line": 1280,
        "fullcodeline": "STACK_PUSH_REPEAT(mem, p);"
    },
    {
        "line": 1298,
        "fullcodeline": "if (stkp->u.repeat.count >= reg->repeat_range[mem].upper) {"
    },
    {
        "line": 1328,
        "fullcodeline": "if (stkp->u.repeat.count < reg->repeat_range[mem].upper) {"
    },
    {
        "line": 1363,
        "fullcodeline": "STACK_POS_END(stkp);"
    },
    {
        "line": 1364,
        "fullcodeline": "s     = stkp->u.state.pstr;"
    },
    {
        "line": 1365,
        "fullcodeline": "sprev = stkp->u.state.pstr_prev;"
    },
    {
        "line": 1398,
        "fullcodeline": "if (IS_NULL(s)) goto fail;"
    },
    {
        "line": 1408,
        "fullcodeline": "if (IS_NULL(q)) {"
    },
    {
        "line": 87,
        "fullcodeline": "best_len = n;"
    },
    {
        "line": 88,
        "fullcodeline": "region = msa->region;"
    },
    {
        "line": 208,
        "fullcodeline": "while (len-- > 0) {"
    },
    {
        "line": 293,
        "fullcodeline": "while (p < endp) {"
    },
    {
        "line": 361,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 363,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 375,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 377,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 379,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 393,
        "fullcodeline": "p++; s++;"
    },
    {
        "line": 430,
        "fullcodeline": "if (! onig_is_in_code_range(q, code)) goto fail;"
    },
    {
        "line": 440,
        "fullcodeline": "p += SIZE_BITSET;"
    },
    {
        "line": 466,
        "fullcodeline": "s++;"
    },
    {
        "line": 467,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 468,
        "fullcodeline": "p += tlen;"
    },
    {
        "line": 479,
        "fullcodeline": "if (! DATA_ENSURE_CHECK(mb_len)) {"
    },
    {
        "line": 495,
        "fullcodeline": "if (onig_is_in_code_range(q, code)) goto fail;"
    },
    {
        "line": 507,
        "fullcodeline": "p += SIZE_BITSET;"
    },
    {
        "line": 536,
        "fullcodeline": "if (onig_is_code_in_cc_len(mb_len, code, node) == 0) goto fail;"
    },
    {
        "line": 560,
        "fullcodeline": "STACK_PUSH_ALT(p, s, sprev);"
    },
    {
        "line": 561,
        "fullcodeline": "n = enclen(encode, s);"
    },
    {
        "line": 562,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 564,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 565,
        "fullcodeline": "s += n;"
    },
    {
        "line": 572,
        "fullcodeline": "STACK_PUSH_ALT(p, s, sprev);"
    },
    {
        "line": 573,
        "fullcodeline": "n = enclen(encode, s);"
    },
    {
        "line": 592,
        "fullcodeline": "n = enclen(encode, s);"
    },
    {
        "line": 593,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 595,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 596,
        "fullcodeline": "s += n;"
    },
    {
        "line": 607,
        "fullcodeline": "n = enclen(encode, s);"
    },
    {
        "line": 683,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 903,
        "fullcodeline": "if (mem > num_mem) goto fail;"
    },
    {
        "line": 904,
        "fullcodeline": "if (mem_end_stk[mem]   == INVALID_STACK_INDEX) goto fail;"
    },
    {
        "line": 905,
        "fullcodeline": "if (mem_start_stk[mem] == INVALID_STACK_INDEX) goto fail;"
    },
    {
        "line": 907,
        "fullcodeline": "if (BIT_STATUS_AT(reg->bt_mem_start, mem))"
    },
    {
        "line": 919,
        "fullcodeline": "while (sprev + (len = enclen(encode, sprev)) < s)"
    },
    {
        "line": 920,
        "fullcodeline": "sprev += len;"
    },
    {
        "line": 935,
        "fullcodeline": "if (mem > num_mem) goto fail;"
    },
    {
        "line": 936,
        "fullcodeline": "if (mem_end_stk[mem]   == INVALID_STACK_INDEX) goto fail;"
    },
    {
        "line": 937,
        "fullcodeline": "if (mem_start_stk[mem] == INVALID_STACK_INDEX) goto fail;"
    },
    {
        "line": 939,
        "fullcodeline": "if (BIT_STATUS_AT(reg->bt_mem_start, mem))"
    },
    {
        "line": 951,
        "fullcodeline": "while (sprev + (len = enclen(encode, sprev)) < s)"
    },
    {
        "line": 952,
        "fullcodeline": "sprev += len;"
    },
    {
        "line": 965,
        "fullcodeline": "for (i = 0; i < tlen; i++) {"
    },
    {
        "line": 992,
        "fullcodeline": "if (i == tlen) goto fail;"
    },
    {
        "line": 1004,
        "fullcodeline": "for (i = 0; i < tlen; i++) {"
    },
    {
        "line": 1031,
        "fullcodeline": "if (i == tlen) goto fail;"
    },
    {
        "line": 1233,
        "fullcodeline": "p++;"
    },
    {
        "line": 1234,
        "fullcodeline": "STACK_PUSH_ALT(p + addr, s, sprev);"
    },
    {
        "line": 1246,
        "fullcodeline": "p++;"
    },
    {
        "line": 1247,
        "fullcodeline": "STACK_PUSH_ALT(p + addr, s, sprev);"
    },
    {
        "line": 1265,
        "fullcodeline": "if (reg->repeat_range[mem].lower == 0) {"
    },
    {
        "line": 1282,
        "fullcodeline": "if (reg->repeat_range[mem].lower == 0) {"
    },
    {
        "line": 1411,
        "fullcodeline": "p += addr;"
    },
    {
        "line": 171,
        "fullcodeline": "if (IS_FIND_NOT_EMPTY(option) && s == sstart) {"
    },
    {
        "line": 175,
        "fullcodeline": "if (IS_FIND_LONGEST(option) && DATA_ENSURE_CHECK1) {"
    },
    {
        "line": 212,
        "fullcodeline": "p++; q++;"
    },
    {
        "line": 278,
        "fullcodeline": "if (*p++ != *s++) goto fail;"
    },
    {
        "line": 294,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 295,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 296,
        "fullcodeline": "len = ONIGENC_MBC_CASE_FOLD(encode,"
    },
    {
        "line": 300,
        "fullcodeline": "DATA_ENSURE(0);"
    },
    {
        "line": 301,
        "fullcodeline": "q = lowbuf;"
    },
    {
        "line": 360,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 362,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 374,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 376,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 378,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 392,
        "fullcodeline": "if (*p != *s) goto fail;"
    },
    {
        "line": 447,
        "fullcodeline": "p += SIZE_BITSET;"
    },
    {
        "line": 448,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 449,
        "fullcodeline": "p += tlen;"
    },
    {
        "line": 450,
        "fullcodeline": "s++;"
    },
    {
        "line": 480,
        "fullcodeline": "DATA_ENSURE(1);"
    },
    {
        "line": 481,
        "fullcodeline": "s = (UChar* )end;"
    },
    {
        "line": 482,
        "fullcodeline": "p += tlen;"
    },
    {
        "line": 514,
        "fullcodeline": "p += SIZE_BITSET;"
    },
    {
        "line": 515,
        "fullcodeline": "GET_LENGTH_INC(tlen, p);"
    },
    {
        "line": 516,
        "fullcodeline": "p += tlen;"
    },
    {
        "line": 517,
        "fullcodeline": "s++;"
    },
    {
        "line": 563,
        "fullcodeline": "if (ONIGENC_IS_MBC_NEWLINE(encode, s, end))  goto fail;"
    },
    {
        "line": 574,
        "fullcodeline": "if (n > 1) {"
    },
    {
        "line": 589,
        "fullcodeline": "if (*p == *s) {"
    },
    {
        "line": 594,
        "fullcodeline": "if (ONIGENC_IS_MBC_NEWLINE(encode, s, end))  goto fail;"
    },
    {
        "line": 604,
        "fullcodeline": "if (*p == *s) {"
    },
    {
        "line": 608,
        "fullcodeline": "if (n > 1) {"
    },
    {
        "line": 684,
        "fullcodeline": "if (! ONIGENC_IS_MBC_WORD(encode, s, end))"
    },
    {
        "line": 702,
        "fullcodeline": "if (DATA_ENSURE_CHECK1 && ONIGENC_IS_MBC_WORD(encode, s, end))"
    },
    {
        "line": 756,
        "fullcodeline": "if (IS_NOTBOL(msa->options)) goto fail;"
    },
    {
        "line": 770,
        "fullcodeline": "if (IS_EMPTY_STR || !ONIGENC_IS_MBC_NEWLINE(encode, sprev, end)) {"
    },
    {
        "line": 795,
        "fullcodeline": "if (IS_EMPTY_STR || !ONIGENC_IS_MBC_NEWLINE(encode, sprev, end)) {"
    },
    {
        "line": 908,
        "fullcodeline": "pstart = STACK_AT(mem_start_stk[mem])->u.mem.pstr;"
    },
    {
        "line": 914,
        "fullcodeline": ": (UChar* )((void* )mem_end_stk[mem]));"
    },
    {
        "line": 940,
        "fullcodeline": "pstart = STACK_AT(mem_start_stk[mem])->u.mem.pstr;"
    },
    {
        "line": 946,
        "fullcodeline": ": (UChar* )((void* )mem_end_stk[mem]));"
    },
    {
        "line": 966,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);"
    },
    {
        "line": 976,
        "fullcodeline": "pend = (BIT_STATUS_AT(reg->bt_mem_end, mem)"
    },
    {
        "line": 979,
        "fullcodeline": "n = pend - pstart;"
    },
    {
        "line": 980,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 981,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 982,
        "fullcodeline": "swork = s;"
    },
    {
        "line": 983,
        "fullcodeline": "STRING_CMP_VALUE(pstart, swork, n, is_fail);"
    },
    {
        "line": 985,
        "fullcodeline": "s = swork;"
    },
    {
        "line": 989,
        "fullcodeline": "p += (SIZE_MEMNUM * (tlen - i - 1));"
    },
    {
        "line": 1005,
        "fullcodeline": "GET_MEMNUM_INC(mem, p);"
    },
    {
        "line": 1015,
        "fullcodeline": "pend = (BIT_STATUS_AT(reg->bt_mem_end, mem)"
    },
    {
        "line": 1018,
        "fullcodeline": "n = pend - pstart;"
    },
    {
        "line": 1019,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 1020,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 1021,
        "fullcodeline": "swork = s;"
    },
    {
        "line": 1022,
        "fullcodeline": "STRING_CMP_VALUE_IC(case_fold_flag, pstart, &swork, n, is_fail);"
    },
    {
        "line": 1024,
        "fullcodeline": "s = swork;"
    },
    {
        "line": 1028,
        "fullcodeline": "p += (SIZE_MEMNUM * (tlen - i - 1));"
    },
    {
        "line": 1266,
        "fullcodeline": "STACK_PUSH_ALT(p + addr, s, sprev);"
    },
    {
        "line": 1283,
        "fullcodeline": "STACK_PUSH_ALT(p, s, sprev);"
    },
    {
        "line": 1284,
        "fullcodeline": "p += addr;"
    },
    {
        "line": 1329,
        "fullcodeline": "if (stkp->u.repeat.count >= reg->repeat_range[mem].lower) {"
    },
    {
        "line": 1415,
        "fullcodeline": "STACK_PUSH_LOOK_BEHIND_NOT(p + addr, s, sprev);"
    },
    {
        "line": 1416,
        "fullcodeline": "s = q;"
    },
    {
        "line": 1417,
        "fullcodeline": "sprev = (UChar* )onigenc_get_prev_char_head(encode, str, s);"
    },
    {
        "line": 114,
        "fullcodeline": "region->beg[0] = sstart - str;"
    },
    {
        "line": 115,
        "fullcodeline": "region->end[0] = s      - str;"
    },
    {
        "line": 172,
        "fullcodeline": "best_len = ONIG_MISMATCH;"
    },
    {
        "line": 209,
        "fullcodeline": "if (*p != *q) {"
    },
    {
        "line": 302,
        "fullcodeline": "while (len-- > 0) {"
    },
    {
        "line": 444,
        "fullcodeline": "if (BITSET_AT(((BitSetRef )p), *s) == 0)"
    },
    {
        "line": 511,
        "fullcodeline": "if (BITSET_AT(((BitSetRef )p), *s) != 0)"
    },
    {
        "line": 575,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 576,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 577,
        "fullcodeline": "s += n;"
    },
    {
        "line": 590,
        "fullcodeline": "STACK_PUSH_ALT(p + 1, s, sprev);"
    },
    {
        "line": 605,
        "fullcodeline": "STACK_PUSH_ALT(p + 1, s, sprev);"
    },
    {
        "line": 609,
        "fullcodeline": "DATA_ENSURE(n);"
    },
    {
        "line": 610,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 611,
        "fullcodeline": "s += n;"
    },
    {
        "line": 687,
        "fullcodeline": "else if (ON_STR_END(s)) {"
    },
    {
        "line": 705,
        "fullcodeline": "else if (ON_STR_END(s)) {"
    },
    {
        "line": 760,
        "fullcodeline": "else if (ONIGENC_IS_MBC_NEWLINE(encode, sprev, end) && !ON_STR_END(s)) {"
    },
    {
        "line": 779,
        "fullcodeline": "else if (ONIGENC_IS_MBC_NEWLINE(encode, s, end)) {"
    },
    {
        "line": 804,
        "fullcodeline": "else if (ONIGENC_IS_MBC_NEWLINE(encode, s, end) &&"
    },
    {
        "line": 910,
        "fullcodeline": "pstart = (UChar* )((void* )mem_start_stk[mem]);"
    },
    {
        "line": 942,
        "fullcodeline": "pstart = (UChar* )((void* )mem_start_stk[mem]);"
    },
    {
        "line": 968,
        "fullcodeline": "if (mem_end_stk[mem]   == INVALID_STACK_INDEX) continue;"
    },
    {
        "line": 969,
        "fullcodeline": "if (mem_start_stk[mem] == INVALID_STACK_INDEX) continue;"
    },
    {
        "line": 971,
        "fullcodeline": "if (BIT_STATUS_AT(reg->bt_mem_start, mem))"
    },
    {
        "line": 986,
        "fullcodeline": "while (sprev + (len = enclen(encode, sprev)) < s)"
    },
    {
        "line": 987,
        "fullcodeline": "sprev += len;"
    },
    {
        "line": 1007,
        "fullcodeline": "if (mem_end_stk[mem]   == INVALID_STACK_INDEX) continue;"
    },
    {
        "line": 1008,
        "fullcodeline": "if (mem_start_stk[mem] == INVALID_STACK_INDEX) continue;"
    },
    {
        "line": 1010,
        "fullcodeline": "if (BIT_STATUS_AT(reg->bt_mem_start, mem))"
    },
    {
        "line": 1025,
        "fullcodeline": "while (sprev + (len = enclen(encode, sprev)) < s)"
    },
    {
        "line": 1026,
        "fullcodeline": "sprev += len;"
    },
    {
        "line": 1301,
        "fullcodeline": "else if (stkp->u.repeat.count >= reg->repeat_range[mem].lower) {"
    },
    {
        "line": 1330,
        "fullcodeline": "UChar* pcode = stkp->u.repeat.pcode;"
    },
    {
        "line": 1332,
        "fullcodeline": "STACK_PUSH_REPEAT_INC(si);"
    },
    {
        "line": 1333,
        "fullcodeline": "STACK_PUSH_ALT(pcode, s, sprev);"
    },
    {
        "line": 1340,
        "fullcodeline": "else if (stkp->u.repeat.count == reg->repeat_range[mem].upper) {"
    },
    {
        "line": 116,
        "fullcodeline": "for (i = 1; i <= num_mem; i++) {"
    },
    {
        "line": 304,
        "fullcodeline": "p++; q++;"
    },
    {
        "line": 580,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 581,
        "fullcodeline": "s++;"
    },
    {
        "line": 614,
        "fullcodeline": "sprev = s;"
    },
    {
        "line": 615,
        "fullcodeline": "s++;"
    },
    {
        "line": 772,
        "fullcodeline": "if (IS_NOTEOL(msa->options)) goto fail;"
    },
    {
        "line": 797,
        "fullcodeline": "if (IS_NOTEOL(msa->options)) goto fail;"
    },
    {
        "line": 805,
        "fullcodeline": "ON_STR_END(s + enclen(encode, s))) {"
    },
    {
        "line": 972,
        "fullcodeline": "pstart = STACK_AT(mem_start_stk[mem])->u.mem.pstr;"
    },
    {
        "line": 978,
        "fullcodeline": ": (UChar* )((void* )mem_end_stk[mem]));"
    },
    {
        "line": 1011,
        "fullcodeline": "pstart = STACK_AT(mem_start_stk[mem])->u.mem.pstr;"
    },
    {
        "line": 1017,
        "fullcodeline": ": (UChar* )((void* )mem_end_stk[mem]));"
    },
    {
        "line": 1101,
        "fullcodeline": "switch (*p++) {"
    },
    {
        "line": 1104,
        "fullcodeline": "p += SIZE_RELADDR;"
    },
    {
        "line": 1110,
        "fullcodeline": "p += SIZE_MEMNUM;"
    },
    {
        "line": 1302,
        "fullcodeline": "STACK_PUSH_ALT(p, s, sprev);"
    },
    {
        "line": 1303,
        "fullcodeline": "p = STACK_AT(si)->u.repeat.pcode; /* Don't use stkp after PUSH. */"
    },
    {
        "line": 1336,
        "fullcodeline": "p = stkp->u.repeat.pcode;"
    },
    {
        "line": 1337,
        "fullcodeline": "STACK_PUSH_REPEAT_INC(si);"
    },
    {
        "line": 1341,
        "fullcodeline": "STACK_PUSH_REPEAT_INC(si);"
    },
    {
        "line": 303,
        "fullcodeline": "if (*p != *q) goto fail;"
    },
    {
        "line": 688,
        "fullcodeline": "if (! ONIGENC_IS_MBC_WORD(encode, sprev, end))"
    },
    {
        "line": 706,
        "fullcodeline": "if (ONIGENC_IS_MBC_WORD(encode, sprev, end))"
    },
    {
        "line": 913,
        "fullcodeline": "? STACK_AT(mem_end_stk[mem])->u.mem.pstr"
    },
    {
        "line": 945,
        "fullcodeline": "? STACK_AT(mem_end_stk[mem])->u.mem.pstr"
    },
    {
        "line": 974,
        "fullcodeline": "pstart = (UChar* )((void* )mem_start_stk[mem]);"
    },
    {
        "line": 1013,
        "fullcodeline": "pstart = (UChar* )((void* )mem_start_stk[mem]);"
    },
    {
        "line": 1306,
        "fullcodeline": "p = stkp->u.repeat.pcode;"
    },
    {
        "line": 117,
        "fullcodeline": "if (mem_end_stk[i] != INVALID_STACK_INDEX) {"
    },
    {
        "line": 692,
        "fullcodeline": "if (ONIGENC_IS_MBC_WORD(encode, s, end)"
    },
    {
        "line": 710,
        "fullcodeline": "if (ONIGENC_IS_MBC_WORD(encode, s, end)"
    },
    {
        "line": 123,
        "fullcodeline": "region->end[i] = (BIT_STATUS_AT(reg->bt_mem_end, i)"
    },
    {
        "line": 693,
        "fullcodeline": "== ONIGENC_IS_MBC_WORD(encode, sprev, end))"
    },
    {
        "line": 711,
        "fullcodeline": "!= ONIGENC_IS_MBC_WORD(encode, sprev, end))"
    },
    {
        "line": 977,
        "fullcodeline": "? STACK_AT(mem_end_stk[mem])->u.mem.pstr"
    },
    {
        "line": 1016,
        "fullcodeline": "? STACK_AT(mem_end_stk[mem])->u.mem.pstr"
    },
    {
        "line": 118,
        "fullcodeline": "if (BIT_STATUS_AT(reg->bt_mem_start, i))"
    },
    {
        "line": 128,
        "fullcodeline": "region->beg[i] = region->end[i] = ONIG_REGION_NOTPOS;"
    },
    {
        "line": 119,
        "fullcodeline": "region->beg[i] = STACK_AT(mem_start_stk[i])->u.mem.pstr - str;"
    },
    {
        "line": 121,
        "fullcodeline": "region->beg[i] = (UChar* )((void* )mem_start_stk[i]) - str;"
    },
    {
        "line": 125,
        "fullcodeline": ": (UChar* )((void* )mem_end_stk[i])) - str;"
    },
    {
        "line": 124,
        "fullcodeline": "? STACK_AT(mem_end_stk[i])->u.mem.pstr"
    }
]