[
    {
        "line": 3,
        "fullcodeline": "bool uses_password= mysql->passwd[0] != 0;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned char encrypted_password[MAX_CIPHER_LENGTH];"
    },
    {
        "line": 6,
        "fullcodeline": "static char request_public_key= '\\1';"
    },
    {
        "line": 7,
        "fullcodeline": "RSA *public_key= NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "bool got_public_key_from_server= false;"
    },
    {
        "line": 10,
        "fullcodeline": "bool connection_is_secure= false;"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned char scramble_pkt[20];"
    },
    {
        "line": 15,
        "fullcodeline": "DBUG_ENTER(\"sha256_password_auth_client\");"
    },
    {
        "line": 30,
        "fullcodeline": "memcpy(scramble_pkt, pkt, SCRAMBLE_LENGTH);"
    },
    {
        "line": 21,
        "fullcodeline": "if (vio->read_packet(vio, &pkt) != SCRAMBLE_LENGTH)"
    },
    {
        "line": 32,
        "fullcodeline": "if (mysql_get_ssl_cipher(mysql) != NULL)"
    },
    {
        "line": 36,
        "fullcodeline": "if (!connection_is_secure)"
    },
    {
        "line": 43,
        "fullcodeline": "if (!uses_password)"
    },
    {
        "line": 23,
        "fullcodeline": "DBUG_PRINT(\"info\",(\"Scramble is not of correct length.\"));"
    },
    {
        "line": 33,
        "fullcodeline": "connection_is_secure= true;"
    },
    {
        "line": 39,
        "fullcodeline": "public_key= rsa_init(mysql);"
    },
    {
        "line": 46,
        "fullcodeline": "static const unsigned char zero_byte= '\\0';"
    },
    {
        "line": 47,
        "fullcodeline": "if (vio->write_packet(vio, (const unsigned char *) &zero_byte, 1))"
    },
    {
        "line": 53,
        "fullcodeline": "unsigned int passwd_len= strlen(mysql->passwd) + 1;"
    },
    {
        "line": 117,
        "fullcodeline": "memset(mysql->passwd, 0, passwd_len);"
    },
    {
        "line": 54,
        "fullcodeline": "if (!connection_is_secure)"
    },
    {
        "line": 82,
        "fullcodeline": "xor_string(mysql->passwd, strlen(mysql->passwd), (char *) scramble_pkt,"
    },
    {
        "line": 85,
        "fullcodeline": "int cipher_length= RSA_size(public_key);"
    },
    {
        "line": 95,
        "fullcodeline": "RSA_public_encrypt(passwd_len, (unsigned char *) mysql->passwd,"
    },
    {
        "line": 60,
        "fullcodeline": "if (public_key == NULL)"
    },
    {
        "line": 90,
        "fullcodeline": "if (passwd_len + 41 >= (unsigned) cipher_length)"
    },
    {
        "line": 101,
        "fullcodeline": "if (vio->write_packet(vio, (uchar*) encrypted_password, cipher_length))"
    },
    {
        "line": 66,
        "fullcodeline": "int pkt_len= 0;"
    },
    {
        "line": 70,
        "fullcodeline": "BIO* bio= BIO_new_mem_buf(pkt, pkt_len);"
    },
    {
        "line": 71,
        "fullcodeline": "public_key= PEM_read_bio_RSA_PUBKEY(bio, NULL, NULL, NULL);"
    },
    {
        "line": 72,
        "fullcodeline": "BIO_free(bio);"
    },
    {
        "line": 78,
        "fullcodeline": "got_public_key_from_server= true;"
    },
    {
        "line": 99,
        "fullcodeline": "RSA_free(public_key);"
    },
    {
        "line": 113,
        "fullcodeline": "if (vio->write_packet(vio, (uchar*) mysql->passwd, passwd_len))"
    },
    {
        "line": 62,
        "fullcodeline": "if (vio->write_packet(vio, (const unsigned char *) &request_public_key,"
    },
    {
        "line": 68,
        "fullcodeline": "if ((pkt_len= vio->read_packet(vio, &pkt)) == -1)"
    },
    {
        "line": 73,
        "fullcodeline": "if (public_key == 0)"
    },
    {
        "line": 75,
        "fullcodeline": "ERR_clear_error();"
    }
]