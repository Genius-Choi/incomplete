[
    {
        "line": 3,
        "fullcodeline": "int con_port= opt_port;"
    },
    {
        "line": 5,
        "fullcodeline": "my_bool con_ssl= 0, con_compress= 0;"
    },
    {
        "line": 6,
        "fullcodeline": "my_bool con_pipe= 0, con_shm= 0, con_cleartext_enable= 0;"
    },
    {
        "line": 7,
        "fullcodeline": "my_bool con_secure_auth= 1;"
    },
    {
        "line": 22,
        "fullcodeline": "const struct command_arg connect_args[] = {"
    },
    {
        "line": 34,
        "fullcodeline": "DBUG_ENTER(\"do_connect\");"
    },
    {
        "line": 35,
        "fullcodeline": "DBUG_PRINT(\"enter\",(\"connect: %s\", command->first_argument));"
    },
    {
        "line": 37,
        "fullcodeline": "strip_parentheses(command);"
    },
    {
        "line": 38,
        "fullcodeline": "check_command_args(command, command->first_argument, connect_args,"
    },
    {
        "line": 74,
        "fullcodeline": "DBUG_PRINT(\"info\", (\"socket: %s\", ds_sock.str));"
    },
    {
        "line": 78,
        "fullcodeline": "con_options= ds_options.str;"
    },
    {
        "line": 133,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_OPT_LOCAL_INFILE, 0);"
    },
    {
        "line": 134,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_SET_CHARSET_NAME,"
    },
    {
        "line": 237,
        "fullcodeline": "dynstr_free(&ds_connection_name);"
    },
    {
        "line": 238,
        "fullcodeline": "dynstr_free(&ds_host);"
    },
    {
        "line": 239,
        "fullcodeline": "dynstr_free(&ds_user);"
    },
    {
        "line": 240,
        "fullcodeline": "dynstr_free(&ds_password);"
    },
    {
        "line": 241,
        "fullcodeline": "dynstr_free(&ds_database);"
    },
    {
        "line": 242,
        "fullcodeline": "dynstr_free(&ds_port);"
    },
    {
        "line": 243,
        "fullcodeline": "dynstr_free(&ds_sock);"
    },
    {
        "line": 244,
        "fullcodeline": "dynstr_free(&ds_options);"
    },
    {
        "line": 245,
        "fullcodeline": "dynstr_free(&ds_default_auth);"
    },
    {
        "line": 108,
        "fullcodeline": "if (find_connection_by_name(ds_connection_name.str))"
    },
    {
        "line": 111,
        "fullcodeline": "if (next_con != connections_end)"
    },
    {
        "line": 124,
        "fullcodeline": "if (!mysql_init(&con_slot->mysql))"
    },
    {
        "line": 131,
        "fullcodeline": "if (opt_compress || con_compress)"
    },
    {
        "line": 192,
        "fullcodeline": "if (ds_database.length == 0)"
    },
    {
        "line": 195,
        "fullcodeline": "if (opt_plugin_dir && *opt_plugin_dir)"
    },
    {
        "line": 203,
        "fullcodeline": "if (opt_server_public_key && *opt_server_public_key)"
    },
    {
        "line": 212,
        "fullcodeline": "if (!con_secure_auth)"
    },
    {
        "line": 217,
        "fullcodeline": "if (ds_database.length && !strcmp(ds_database.str,\"*NO-ONE*\"))"
    },
    {
        "line": 220,
        "fullcodeline": "if (connect_n_handle_errors(command, &con_slot->mysql,"
    },
    {
        "line": 23,
        "fullcodeline": "{ \"connection name\", ARG_STRING, TRUE, &ds_connection_name, \"Name of the connection\" },"
    },
    {
        "line": 24,
        "fullcodeline": "{ \"host\", ARG_STRING, TRUE, &ds_host, \"Host to connect to\" },"
    },
    {
        "line": 25,
        "fullcodeline": "{ \"user\", ARG_STRING, FALSE, &ds_user, \"User to connect as\" },"
    },
    {
        "line": 26,
        "fullcodeline": "{ \"passsword\", ARG_STRING, FALSE, &ds_password, \"Password used when connecting\" },"
    },
    {
        "line": 27,
        "fullcodeline": "{ \"database\", ARG_STRING, FALSE, &ds_database, \"Database to select after connect\" },"
    },
    {
        "line": 28,
        "fullcodeline": "{ \"port\", ARG_STRING, FALSE, &ds_port, \"Port to connect to\" },"
    },
    {
        "line": 29,
        "fullcodeline": "{ \"socket\", ARG_STRING, FALSE, &ds_sock, \"Socket to connect with\" },"
    },
    {
        "line": 30,
        "fullcodeline": "{ \"options\", ARG_STRING, FALSE, &ds_options, \"Options to use while connecting\" },"
    },
    {
        "line": 31,
        "fullcodeline": "{ \"default_auth\", ARG_STRING, FALSE, &ds_default_auth, \"Default authentication to use\" }"
    },
    {
        "line": 45,
        "fullcodeline": "con_port= atoi(ds_port.str);"
    },
    {
        "line": 86,
        "fullcodeline": "end= con_options;"
    },
    {
        "line": 105,
        "fullcodeline": "con_options= end;"
    },
    {
        "line": 109,
        "fullcodeline": "die(\"Connection %s already exists\", ds_connection_name.str);"
    },
    {
        "line": 112,
        "fullcodeline": "con_slot= next_con;"
    },
    {
        "line": 125,
        "fullcodeline": "die(\"Failed on mysql_init()\");"
    },
    {
        "line": 128,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_OPT_CONNECT_TIMEOUT,"
    },
    {
        "line": 132,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_OPT_COMPRESS, NullS);"
    },
    {
        "line": 137,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_SET_CHARSET_DIR,"
    },
    {
        "line": 170,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_OPT_PROTOCOL, (char*) &opt_protocol);"
    },
    {
        "line": 193,
        "fullcodeline": "dynstr_set(&ds_database, opt_db);"
    },
    {
        "line": 196,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_PLUGIN_DIR, opt_plugin_dir);"
    },
    {
        "line": 199,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_DEFAULT_AUTH, ds_default_auth.str);"
    },
    {
        "line": 204,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_SERVER_PUBLIC_KEY,"
    },
    {
        "line": 209,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_ENABLE_CLEARTEXT_PLUGIN,"
    },
    {
        "line": 213,
        "fullcodeline": "mysql_options(&con_slot->mysql, MYSQL_SECURE_AUTH,"
    },
    {
        "line": 218,
        "fullcodeline": "dynstr_set(&ds_database, \"\");"
    },
    {
        "line": 225,
        "fullcodeline": "DBUG_PRINT(\"info\", (\"Inserting connection %s in connection pool\","
    },
    {
        "line": 230,
        "fullcodeline": "con_slot->name_len= strlen(con_slot->name);"
    },
    {
        "line": 231,
        "fullcodeline": "set_current_connection(con_slot);"
    },
    {
        "line": 46,
        "fullcodeline": "if (con_port == 0)"
    },
    {
        "line": 62,
        "fullcodeline": "if (*ds_sock.str != FN_LIBCHAR)"
    },
    {
        "line": 72,
        "fullcodeline": "dynstr_set(&ds_sock, unix_sock);"
    },
    {
        "line": 83,
        "fullcodeline": "while (*con_options && my_isspace(charset_info, *con_options))"
    },
    {
        "line": 84,
        "fullcodeline": "con_options++;"
    },
    {
        "line": 87,
        "fullcodeline": "while (*end && !my_isspace(charset_info, *end))"
    },
    {
        "line": 88,
        "fullcodeline": "end++;"
    },
    {
        "line": 89,
        "fullcodeline": "if (!strncmp(con_options, \"SSL\", 3))"
    },
    {
        "line": 129,
        "fullcodeline": "(void *) &opt_connect_timeout);"
    },
    {
        "line": 210,
        "fullcodeline": "(char*) &con_cleartext_enable);"
    },
    {
        "line": 214,
        "fullcodeline": "(char*) &con_secure_auth);"
    },
    {
        "line": 227,
        "fullcodeline": "if (!(con_slot->name= my_strdup(PSI_NOT_INSTRUMENTED,"
    },
    {
        "line": 233,
        "fullcodeline": "if (con_slot == next_con)"
    },
    {
        "line": 47,
        "fullcodeline": "die(\"Illegal argument for port: '%s'\", ds_port.str);"
    },
    {
        "line": 64,
        "fullcodeline": "char buff[FN_REFLEN];"
    },
    {
        "line": 65,
        "fullcodeline": "fn_format(buff, ds_sock.str, TMPDIR, \"\", 0);"
    },
    {
        "line": 66,
        "fullcodeline": "dynstr_set(&ds_sock, buff);"
    },
    {
        "line": 90,
        "fullcodeline": "con_ssl= 1;"
    },
    {
        "line": 115,
        "fullcodeline": "if (!(con_slot= find_connection_by_name(\"-closed_connection-\")))"
    },
    {
        "line": 229,
        "fullcodeline": "die(\"Out of memory\");"
    },
    {
        "line": 234,
        "fullcodeline": "next_con++; /* if we used the next_con slot, advance the pointer */"
    },
    {
        "line": 116,
        "fullcodeline": "die(\"Connection limit exhausted, you can have max %d connections\","
    },
    {
        "line": 91,
        "fullcodeline": "else if (!strncmp(con_options, \"COMPRESS\", 8))"
    },
    {
        "line": 228,
        "fullcodeline": "ds_connection_name.str, MYF(MY_WME))))"
    },
    {
        "line": 92,
        "fullcodeline": "con_compress= 1;"
    },
    {
        "line": 93,
        "fullcodeline": "else if (!strncmp(con_options, \"PIPE\", 4))"
    },
    {
        "line": 94,
        "fullcodeline": "con_pipe= 1;"
    },
    {
        "line": 95,
        "fullcodeline": "else if (!strncmp(con_options, \"SHM\", 3))"
    },
    {
        "line": 96,
        "fullcodeline": "con_shm= 1;"
    },
    {
        "line": 97,
        "fullcodeline": "else if (!strncmp(con_options, \"CLEARTEXT\", 9))"
    },
    {
        "line": 98,
        "fullcodeline": "con_cleartext_enable= 1;"
    },
    {
        "line": 99,
        "fullcodeline": "else if (!strncmp(con_options, \"SKIPSECUREAUTH\",14))"
    },
    {
        "line": 100,
        "fullcodeline": "con_secure_auth= 0;"
    },
    {
        "line": 102,
        "fullcodeline": "die(\"Illegal option to connect: %.*s\","
    },
    {
        "line": 103,
        "fullcodeline": "(int) (end - con_options), con_options);"
    }
]