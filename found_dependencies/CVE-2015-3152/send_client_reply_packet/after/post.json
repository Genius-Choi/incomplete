[
    {
        "line": 4,
        "fullcodeline": "MYSQL *mysql= mpvio->mysql;"
    },
    {
        "line": 5,
        "fullcodeline": "NET *net= &mysql->net;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t connect_attrs_len="
    },
    {
        "line": 13,
        "fullcodeline": "DBUG_ASSERT(connect_attrs_len < MAX_CONNECTION_ATTR_STORAGE_LENGTH);"
    },
    {
        "line": 20,
        "fullcodeline": "buff_size= 33 + USERNAME_LENGTH + data_len + 9 + NAME_LEN + NAME_LEN + connect_attrs_len + 9;"
    },
    {
        "line": 21,
        "fullcodeline": "buff= my_alloca(buff_size);"
    },
    {
        "line": 23,
        "fullcodeline": "mysql->client_flag|= mysql->options.client_flag;"
    },
    {
        "line": 24,
        "fullcodeline": "mysql->client_flag|= CLIENT_CAPABILITIES;"
    },
    {
        "line": 47,
        "fullcodeline": "mysql->client_flag= mysql->client_flag &"
    },
    {
        "line": 52,
        "fullcodeline": "mysql->client_flag&= ~CLIENT_COMPRESS;"
    },
    {
        "line": 180,
        "fullcodeline": "DBUG_PRINT(\"info\",(\"Server version = '%s'  capabilites: %lu  status: %u  client_flag: %lu\","
    },
    {
        "line": 184,
        "fullcodeline": "compile_time_assert(MYSQL_USERNAME_LENGTH == USERNAME_LENGTH);"
    },
    {
        "line": 193,
        "fullcodeline": "DBUG_PRINT(\"info\",(\"user: %s\",end));"
    },
    {
        "line": 194,
        "fullcodeline": "end= strend(end) + 1;"
    },
    {
        "line": 239,
        "fullcodeline": "end= (char *) send_client_connect_attrs(mysql, (uchar *) end);"
    },
    {
        "line": 242,
        "fullcodeline": "MYSQL_TRACE(SEND_AUTH_RESPONSE, mysql, (end-buff, (const unsigned char*)buff));"
    },
    {
        "line": 251,
        "fullcodeline": "MYSQL_TRACE(PACKET_SENT, mysql, (end-buff));"
    },
    {
        "line": 252,
        "fullcodeline": "my_afree(buff);"
    },
    {
        "line": 256,
        "fullcodeline": "my_afree(buff);"
    },
    {
        "line": 9,
        "fullcodeline": "(mysql->server_capabilities & CLIENT_CONNECT_ATTRS &&"
    },
    {
        "line": 26,
        "fullcodeline": "if (mysql->client_flag & CLIENT_MULTI_STATEMENTS)"
    },
    {
        "line": 55,
        "fullcodeline": "if (mysql->client_flag & CLIENT_PROTOCOL_41)"
    },
    {
        "line": 229,
        "fullcodeline": "if (mpvio->db && (mysql->server_capabilities & CLIENT_CONNECT_WITH_DB))"
    },
    {
        "line": 236,
        "fullcodeline": "if (mysql->server_capabilities & CLIENT_PLUGIN_AUTH)"
    },
    {
        "line": 243,
        "fullcodeline": "if (my_net_write(net, (uchar*) buff, (size_t) (end-buff)) || net_flush(net))"
    },
    {
        "line": 27,
        "fullcodeline": "mysql->client_flag|= CLIENT_MULTI_RESULTS;"
    },
    {
        "line": 42,
        "fullcodeline": "mysql->client_flag|= CLIENT_CONNECT_WITH_DB;"
    },
    {
        "line": 48,
        "fullcodeline": "(~(CLIENT_COMPRESS | CLIENT_SSL | CLIENT_PROTOCOL_41)"
    },
    {
        "line": 58,
        "fullcodeline": "int4store(buff,mysql->client_flag);"
    },
    {
        "line": 59,
        "fullcodeline": "int4store(buff+4, net->max_packet_size);"
    },
    {
        "line": 61,
        "fullcodeline": "memset(buff+9, 0, 32-9);"
    },
    {
        "line": 62,
        "fullcodeline": "end= buff+32;"
    },
    {
        "line": 188,
        "fullcodeline": "strmake(end, mysql->user, USERNAME_LENGTH);"
    },
    {
        "line": 231,
        "fullcodeline": "end= strmake(end, mpvio->db, NAME_LEN) + 1;"
    },
    {
        "line": 232,
        "fullcodeline": "mysql->db= my_strdup(key_memory_MYSQL,"
    },
    {
        "line": 237,
        "fullcodeline": "end= strmake(end, mpvio->plugin->name, NAME_LEN) + 1;"
    },
    {
        "line": 245,
        "fullcodeline": "set_mysql_extended_error(mysql, CR_SERVER_LOST, unknown_sqlstate,"
    },
    {
        "line": 44,
        "fullcodeline": "mysql->client_flag&= ~CLIENT_CONNECT_WITH_DB;"
    },
    {
        "line": 66,
        "fullcodeline": "int2store(buff, mysql->client_flag);"
    },
    {
        "line": 67,
        "fullcodeline": "int3store(buff+2, net->max_packet_size);"
    },
    {
        "line": 68,
        "fullcodeline": "end= buff+5;"
    },
    {
        "line": 190,
        "fullcodeline": "read_user_name(end);"
    },
    {
        "line": 197,
        "fullcodeline": "if (mysql->server_capabilities & CLIENT_SECURE_CONNECTION)"
    },
    {
        "line": 226,
        "fullcodeline": "*end++= 0;"
    },
    {
        "line": 246,
        "fullcodeline": "ER(CR_SERVER_LOST_EXTENDED),"
    },
    {
        "line": 233,
        "fullcodeline": "mpvio->db, MYF(MY_WME));"
    },
    {
        "line": 207,
        "fullcodeline": "if (mysql->server_capabilities & CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA)"
    },
    {
        "line": 215,
        "fullcodeline": "if (end == NULL)"
    },
    {
        "line": 220,
        "fullcodeline": "DBUG_ASSERT(data_len == SCRAMBLE_LENGTH_323 + 1); /* incl. \\0 at the end */"
    },
    {
        "line": 221,
        "fullcodeline": "memcpy(end, data, data_len);"
    },
    {
        "line": 222,
        "fullcodeline": "end+= data_len;"
    },
    {
        "line": 208,
        "fullcodeline": "end= write_length_encoded_string4(end, (char *)(buff + buff_size),"
    },
    {
        "line": 212,
        "fullcodeline": "end= write_string(end, (char *)(buff + buff_size),"
    },
    {
        "line": 209,
        "fullcodeline": "(char *) data,"
    },
    {
        "line": 210,
        "fullcodeline": "(char *)(data + data_len));"
    },
    {
        "line": 213,
        "fullcodeline": "(char *) data,"
    },
    {
        "line": 214,
        "fullcodeline": "(char *)(data + data_len));"
    }
]