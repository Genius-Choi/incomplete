[
    {
        "line": 7,
        "fullcodeline": "g_autofree gchar *data = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "gchar *ptr;"
    },
    {
        "line": 10,
        "fullcodeline": "gsize data_len = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "data = g_new (gchar, data_len);"
    },
    {
        "line": 21,
        "fullcodeline": "ptr = data;"
    },
    {
        "line": 28,
        "fullcodeline": "fd = glnx_steal_fd (&args_tmpf.fd);"
    },
    {
        "line": 35,
        "fullcodeline": "flatpak_bwrap_add_fd (bwrap, fd);"
    },
    {
        "line": 36,
        "fullcodeline": "g_ptr_array_remove_range (bwrap->argv, start, end - start);"
    },
    {
        "line": 14,
        "fullcodeline": "if (end == -1)"
    },
    {
        "line": 17,
        "fullcodeline": "for (i = start; i < end; i++)"
    },
    {
        "line": 18,
        "fullcodeline": "data_len +=  strlen (bwrap->argv->pdata[i]) + 1;"
    },
    {
        "line": 22,
        "fullcodeline": "for (i = start; i < end; i++)"
    },
    {
        "line": 23,
        "fullcodeline": "ptr = g_stpcpy (ptr, bwrap->argv->pdata[i]) + 1;"
    },
    {
        "line": 25,
        "fullcodeline": "if (!flatpak_buffer_to_sealed_memfd_or_tmpfile (&args_tmpf, \"bwrap-args\", data, data_len, error))"
    },
    {
        "line": 31,
        "fullcodeline": "g_autofree char *commandline = flatpak_quote_argv ((const char **) bwrap->argv->pdata + start, end - start);"
    },
    {
        "line": 32,
        "fullcodeline": "flatpak_debug2 (\"bwrap --args %d = %s\", fd, commandline);"
    },
    {
        "line": 39,
        "fullcodeline": "g_ptr_array_insert (bwrap->argv, start, g_strdup_printf (\"--args=%d\", fd));"
    },
    {
        "line": 43,
        "fullcodeline": "g_ptr_array_insert (bwrap->argv, start, g_strdup (\"--args\"));"
    },
    {
        "line": 44,
        "fullcodeline": "g_ptr_array_insert (bwrap->argv, start + 1, g_strdup_printf (\"%d\", fd));"
    }
]