[
    {
        "line": 6,
        "fullcodeline": "FlatpakContext *context = data;"
    },
    {
        "line": 7,
        "fullcodeline": "g_autoptr(GBytes) env_block = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "fd = g_ascii_strtoull (value, &endptr, 10);"
    },
    {
        "line": 18,
        "fullcodeline": "env_block = glnx_fd_readall_bytes ((int) fd, NULL, error);"
    },
    {
        "line": 23,
        "fullcodeline": "p = g_bytes_get_data (env_block, &remaining);"
    },
    {
        "line": 15,
        "fullcodeline": "if (endptr == NULL || *endptr != '\\0' || fd > G_MAXINT)"
    },
    {
        "line": 20,
        "fullcodeline": "if (env_block == NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "while (remaining > 0)"
    },
    {
        "line": 53,
        "fullcodeline": "if (fd >= 3)"
    },
    {
        "line": 28,
        "fullcodeline": "size_t len = strnlen (p, remaining);"
    },
    {
        "line": 33,
        "fullcodeline": "equals = memchr (p, '=', len);"
    },
    {
        "line": 42,
        "fullcodeline": "p += len;"
    },
    {
        "line": 43,
        "fullcodeline": "remaining -= len;"
    },
    {
        "line": 16,
        "fullcodeline": "return glnx_throw (error, \"Not a valid file descriptor: %s\", value);"
    },
    {
        "line": 31,
        "fullcodeline": "g_assert (len <= remaining);"
    },
    {
        "line": 40,
        "fullcodeline": "g_strndup (p, equals - p),"
    },
    {
        "line": 41,
        "fullcodeline": "g_strndup (equals + 1, len - (equals - p) - 1));"
    },
    {
        "line": 45,
        "fullcodeline": "if (remaining > 0)"
    },
    {
        "line": 35,
        "fullcodeline": "if (equals == NULL || equals == p)"
    },
    {
        "line": 48,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 49,
        "fullcodeline": "remaining -= 1;"
    },
    {
        "line": 36,
        "fullcodeline": "return glnx_throw (error,"
    },
    {
        "line": 47,
        "fullcodeline": "g_assert (*p == '\\0');"
    }
]