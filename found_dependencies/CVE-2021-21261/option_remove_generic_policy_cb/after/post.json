[
    {
        "line": 6,
        "fullcodeline": "FlatpakContext *context = data;"
    },
    {
        "line": 8,
        "fullcodeline": "g_autofree char *key = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "g_autofree char *extended_value = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "t = strchr (value, '=');"
    },
    {
        "line": 19,
        "fullcodeline": "policy_value = t + 1;"
    },
    {
        "line": 20,
        "fullcodeline": "key = g_strndup (value, t - value);"
    },
    {
        "line": 35,
        "fullcodeline": "extended_value = g_strconcat (\"!\", policy_value, NULL);"
    },
    {
        "line": 37,
        "fullcodeline": "flatpak_context_apply_generic_policy (context, key, extended_value);"
    },
    {
        "line": 13,
        "fullcodeline": "if (t == NULL)"
    },
    {
        "line": 21,
        "fullcodeline": "if (strchr (key, '.') == NULL)"
    },
    {
        "line": 28,
        "fullcodeline": "if (policy_value[0] == '!')"
    },
    {
        "line": 15,
        "fullcodeline": "g_set_error (error, G_OPTION_ERROR, G_OPTION_ERROR_BAD_VALUE,"
    },
    {
        "line": 23,
        "fullcodeline": "g_set_error (error, G_OPTION_ERROR, G_OPTION_ERROR_BAD_VALUE,"
    },
    {
        "line": 30,
        "fullcodeline": "g_set_error (error, G_OPTION_ERROR, G_OPTION_ERROR_BAD_VALUE,"
    },
    {
        "line": 16,
        "fullcodeline": "_(\"--remove-policy arguments must be in the form SUBSYSTEM.KEY=VALUE\"));"
    },
    {
        "line": 24,
        "fullcodeline": "_(\"--remove-policy arguments must be in the form SUBSYSTEM.KEY=VALUE\"));"
    },
    {
        "line": 31,
        "fullcodeline": "_(\"--remove-policy values can't start with \\\"!\\\"\"));"
    }
]