[
    {
        "line": 36,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 37,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 41,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 42,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 43,
        "fullcodeline": "image=AcquireImage(image_info,exception);"
    },
    {
        "line": 44,
        "fullcodeline": "status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);"
    },
    {
        "line": 53,
        "fullcodeline": "length=MagickPathExtent;"
    },
    {
        "line": 54,
        "fullcodeline": "sixel_buffer=(char *) AcquireQuantumMemory((size_t) length+MagickPathExtent,"
    },
    {
        "line": 56,
        "fullcodeline": "p=sixel_buffer;"
    },
    {
        "line": 76,
        "fullcodeline": "sixel_buffer[length]='\\0';"
    },
    {
        "line": 85,
        "fullcodeline": "sixel_buffer=(char *) RelinquishMagickMemory(sixel_buffer);"
    },
    {
        "line": 86,
        "fullcodeline": "image->depth=24;"
    },
    {
        "line": 87,
        "fullcodeline": "image->storage_class=PseudoClass;"
    },
    {
        "line": 88,
        "fullcodeline": "status=SetImageExtent(image,image->columns,image->rows,exception);"
    },
    {
        "line": 108,
        "fullcodeline": "j=0;"
    },
    {
        "line": 138,
        "fullcodeline": "sixel_pixels=(unsigned char *) RelinquishMagickMemory(sixel_pixels);"
    },
    {
        "line": 139,
        "fullcodeline": "sixel_palette=(unsigned char *) RelinquishMagickMemory(sixel_palette);"
    },
    {
        "line": 140,
        "fullcodeline": "(void) CloseBlob(image);"
    },
    {
        "line": 38,
        "fullcodeline": "if (image_info->debug != MagickFalse)"
    },
    {
        "line": 45,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 57,
        "fullcodeline": "if (sixel_buffer != (char *) NULL)"
    },
    {
        "line": 74,
        "fullcodeline": "if (sixel_buffer == (char *) NULL)"
    },
    {
        "line": 80,
        "fullcodeline": "if (sixel_decode(image,(unsigned char *) sixel_buffer,&sixel_pixels,&image->columns,&image->rows,&sixel_palette,&image->colors,exception) == MagickFalse)"
    },
    {
        "line": 89,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 96,
        "fullcodeline": "if (AcquireImageColormap(image,image->colors, exception) == MagickFalse)"
    },
    {
        "line": 102,
        "fullcodeline": "for (i = 0; i < (ssize_t) image->colors; ++i) {"
    },
    {
        "line": 109,
        "fullcodeline": "if (image_info->ping == MagickFalse)"
    },
    {
        "line": 141,
        "fullcodeline": "return(GetFirstImageInList(image));"
    },
    {
        "line": 39,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 47,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 75,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 82,
        "fullcodeline": "sixel_buffer=(char *) RelinquishMagickMemory(sixel_buffer);"
    },
    {
        "line": 83,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"CorruptImage\");"
    },
    {
        "line": 91,
        "fullcodeline": "sixel_pixels=(unsigned char *) RelinquishMagickMemory(sixel_pixels);"
    },
    {
        "line": 92,
        "fullcodeline": "sixel_palette=(unsigned char *) RelinquishMagickMemory(sixel_palette);"
    },
    {
        "line": 98,
        "fullcodeline": "sixel_pixels=(unsigned char *) RelinquishMagickMemory(sixel_pixels);"
    },
    {
        "line": 99,
        "fullcodeline": "sixel_palette=(unsigned char *) RelinquishMagickMemory(sixel_palette);"
    },
    {
        "line": 100,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 103,
        "fullcodeline": "image->colormap[i].red   = ScaleCharToQuantum(sixel_palette[i * 4 + 0]);"
    },
    {
        "line": 104,
        "fullcodeline": "image->colormap[i].green = ScaleCharToQuantum(sixel_palette[i * 4 + 1]);"
    },
    {
        "line": 105,
        "fullcodeline": "image->colormap[i].blue  = ScaleCharToQuantum(sixel_palette[i * 4 + 2]);"
    },
    {
        "line": 48,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 58,
        "fullcodeline": "while (ReadBlobString(image,p) != (char *) NULL)"
    },
    {
        "line": 93,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 114,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 128,
        "fullcodeline": "if (y < (ssize_t) image->rows)"
    },
    {
        "line": 64,
        "fullcodeline": "p+=strlen(p);"
    },
    {
        "line": 67,
        "fullcodeline": "length<<=1;"
    },
    {
        "line": 68,
        "fullcodeline": "sixel_buffer=(char *) ResizeQuantumMemory(sixel_buffer,length+"
    },
    {
        "line": 72,
        "fullcodeline": "p=sixel_buffer+strlen(sixel_buffer);"
    },
    {
        "line": 116,
        "fullcodeline": "q=QueueAuthenticPixels(image,0,y,image->columns,1,exception);"
    },
    {
        "line": 130,
        "fullcodeline": "sixel_pixels=(unsigned char *) RelinquishMagickMemory(sixel_pixels);"
    },
    {
        "line": 131,
        "fullcodeline": "sixel_palette=(unsigned char *) RelinquishMagickMemory(sixel_palette);"
    },
    {
        "line": 132,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"NotEnoughPixelData\");"
    },
    {
        "line": 60,
        "fullcodeline": "if ((*p == '#') && ((p == sixel_buffer) || (*(p-1) == '\\n')))"
    },
    {
        "line": 62,
        "fullcodeline": "if ((*p == '}') && (*(p+1) == ';'))"
    },
    {
        "line": 65,
        "fullcodeline": "if ((size_t) (p-sixel_buffer+MagickPathExtent+1) < length)"
    },
    {
        "line": 70,
        "fullcodeline": "if (sixel_buffer == (char *) NULL)"
    },
    {
        "line": 117,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 119,
        "fullcodeline": "for (x=0; x < (ssize_t) image->columns; x++)"
    },
    {
        "line": 125,
        "fullcodeline": "if (SyncAuthenticPixels(image,exception) == MagickFalse)"
    },
    {
        "line": 121,
        "fullcodeline": "j=(ssize_t) sixel_pixels[y * image->columns + x];"
    },
    {
        "line": 122,
        "fullcodeline": "SetPixelIndex(image,j,q);"
    },
    {
        "line": 123,
        "fullcodeline": "q+=GetPixelChannels(image);"
    }
]