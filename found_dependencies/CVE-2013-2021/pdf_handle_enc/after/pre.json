[
    {
        "line": 14,
        "fullcodeline": "obj = find_obj(pdf, pdf->objs, pdf->enc_objid);"
    },
    {
        "line": 19,
        "fullcodeline": "len = obj_size(pdf, obj, 1);"
    },
    {
        "line": 20,
        "fullcodeline": "q = pdf->map + obj->start;"
    },
    {
        "line": 22,
        "fullcodeline": "O = U = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "if (pdf->enc_objid == ~0u)"
    },
    {
        "line": 10,
        "fullcodeline": "if (!pdf->fileID) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (!obj) {"
    },
    {
        "line": 24,
        "fullcodeline": "EM = pdf_readbool(q, len, \"/EncryptMetadata\", 1);"
    },
    {
        "line": 25,
        "fullcodeline": "P = pdf_readint(q, len, \"/P\");"
    },
    {
        "line": 31,
        "fullcodeline": "q2 = cli_memstr(q, len, \"/Standard\", 9);"
    },
    {
        "line": 40,
        "fullcodeline": "length = pdf_readint(q2, len - (q2 - q), \"/Length\");"
    },
    {
        "line": 50,
        "fullcodeline": "R = pdf_readint(q, len, \"/R\");"
    },
    {
        "line": 65,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "O = pdf_readstring(q, len, \"/O\", &n);"
    },
    {
        "line": 83,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 84,
        "fullcodeline": "U = pdf_readstring(q, len, \"/U\", &n);"
    },
    {
        "line": 100,
        "fullcodeline": "cli_dbgmsg(\"cli_pdf: Encrypt R: %d, P %x, length: %d\\n\", R, P, length);"
    },
    {
        "line": 105,
        "fullcodeline": "check_user_password(pdf, R, O, U, P, EM, length, oulen);"
    },
    {
        "line": 16,
        "fullcodeline": "cli_dbgmsg(\"cli_pdf: can't find encrypted object %d %d\\n\", pdf->enc_objid>>8, pdf->enc_objid&0xff);"
    },
    {
        "line": 26,
        "fullcodeline": "if (P == ~0u) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (!q2) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (length == ~0u)"
    },
    {
        "line": 43,
        "fullcodeline": "if (length == ~0u)"
    },
    {
        "line": 45,
        "fullcodeline": "if (length < 40) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (R == ~0u) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (R < 5)"
    },
    {
        "line": 67,
        "fullcodeline": "if (!O || n < oulen) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (n > oulen) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (!U || n < oulen) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (n > oulen) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (length % 8) {"
    },
    {
        "line": 42,
        "fullcodeline": "length = pdf_readint(q, len, \"/Length\");"
    },
    {
        "line": 44,
        "fullcodeline": "length = 40;"
    },
    {
        "line": 47,
        "fullcodeline": "length = 40;"
    },
    {
        "line": 55,
        "fullcodeline": "if ((R > 5) || (R < 2)) {"
    },
    {
        "line": 61,
        "fullcodeline": "oulen = 32;"
    },
    {
        "line": 68,
        "fullcodeline": "cli_dbgmsg(\"cli_pdf: invalid O: %d\\n\", n);"
    },
    {
        "line": 86,
        "fullcodeline": "cli_dbgmsg(\"cli_pdf: invalid U: %d\\n\", n);"
    },
    {
        "line": 63,
        "fullcodeline": "oulen = 48;"
    },
    {
        "line": 74,
        "fullcodeline": "for (i=oulen;i<n;i++)"
    },
    {
        "line": 77,
        "fullcodeline": "if (i != n) {"
    },
    {
        "line": 92,
        "fullcodeline": "for (i=oulen;i<n;i++)"
    },
    {
        "line": 95,
        "fullcodeline": "if (i != n) {"
    },
    {
        "line": 70,
        "fullcodeline": "dbg_printhex(\"invalid O\", O, n);"
    },
    {
        "line": 78,
        "fullcodeline": "dbg_printhex(\"too long O\", O, n);"
    },
    {
        "line": 88,
        "fullcodeline": "dbg_printhex(\"invalid U\", U, n);"
    },
    {
        "line": 96,
        "fullcodeline": "dbg_printhex(\"too long U\", U, n);"
    }
]