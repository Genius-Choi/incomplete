[
    {
        "line": 4,
        "fullcodeline": "char pdfname[64];"
    },
    {
        "line": 6,
        "fullcodeline": "const char *q = obj->start + pdf->map;"
    },
    {
        "line": 9,
        "fullcodeline": "off_t bytesleft = obj_size(pdf, obj, 1);"
    },
    {
        "line": 10,
        "fullcodeline": "unsigned i, filters=0;"
    },
    {
        "line": 11,
        "fullcodeline": "enum objstate objstate = STATE_NONE;"
    },
    {
        "line": 15,
        "fullcodeline": "start = q;"
    },
    {
        "line": 28,
        "fullcodeline": "dict = q3+2;"
    },
    {
        "line": 29,
        "fullcodeline": "q = dict;"
    },
    {
        "line": 30,
        "fullcodeline": "bytesleft = obj_size(pdf, obj, 1) - (q - start);"
    },
    {
        "line": 43,
        "fullcodeline": "obj->flags |= 1 << OBJ_DICT;"
    },
    {
        "line": 44,
        "fullcodeline": "dict_length = q3 - dict;"
    },
    {
        "line": 141,
        "fullcodeline": "cli_dbgmsg(\"cli_pdf: %u %u obj flags: %02x\\n\", obj->id>>8, obj->id&0xff, obj->flags);"
    },
    {
        "line": 13,
        "fullcodeline": "if (bytesleft < 0)"
    },
    {
        "line": 27,
        "fullcodeline": "} while (!q3 || q3[1] != '<');"
    },
    {
        "line": 42,
        "fullcodeline": "} while (!q3 || q3[1] != '>');"
    },
    {
        "line": 47,
        "fullcodeline": "for (q = dict;dict_length > 0;) {"
    },
    {
        "line": 124,
        "fullcodeline": "for (i=0;i<sizeof(pdfname_actions)/sizeof(pdfname_actions[0]);i++) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (filters > 2) { /* more than 2 non-crypt filters */"
    },
    {
        "line": 137,
        "fullcodeline": "if (obj->flags & ((1 << OBJ_SIGNED) | KNOWN_FILTERS))"
    },
    {
        "line": 139,
        "fullcodeline": "if (obj->flags & (1 << OBJ_FILTER_UNKNOWN))"
    },
    {
        "line": 18,
        "fullcodeline": "q2 = pdf_nextobject(q, bytesleft);"
    },
    {
        "line": 19,
        "fullcodeline": "bytesleft -= q2 -q;"
    },
    {
        "line": 23,
        "fullcodeline": "q3 = memchr(q-1, '<', q2-q+1);"
    },
    {
        "line": 24,
        "fullcodeline": "q2++;"
    },
    {
        "line": 25,
        "fullcodeline": "bytesleft--;"
    },
    {
        "line": 26,
        "fullcodeline": "q = q2;"
    },
    {
        "line": 33,
        "fullcodeline": "q2 = pdf_nextobject(q, bytesleft);"
    },
    {
        "line": 34,
        "fullcodeline": "bytesleft -= q2 -q;"
    },
    {
        "line": 38,
        "fullcodeline": "q3 = memchr(q-1, '>', q2-q+1);"
    },
    {
        "line": 39,
        "fullcodeline": "q2++;"
    },
    {
        "line": 40,
        "fullcodeline": "bytesleft--;"
    },
    {
        "line": 41,
        "fullcodeline": "q = q2;"
    },
    {
        "line": 48,
        "fullcodeline": "int escapes = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "q2 = memchr(q, '/', dict_length);"
    },
    {
        "line": 52,
        "fullcodeline": "dict_length -= q2 - q;"
    },
    {
        "line": 53,
        "fullcodeline": "q = q2;"
    },
    {
        "line": 72,
        "fullcodeline": "pdfname[i] = '\\0';"
    },
    {
        "line": 74,
        "fullcodeline": "handle_pdfname(pdf, obj, pdfname, escapes, &objstate);"
    },
    {
        "line": 135,
        "fullcodeline": "pdfobj_flag(pdf, obj, MANY_FILTERS);"
    },
    {
        "line": 138,
        "fullcodeline": "obj->flags &= ~(1 << OBJ_FILTER_UNKNOWN);"
    },
    {
        "line": 140,
        "fullcodeline": "pdfobj_flag(pdf, obj, UNKNOWN_FILTER);"
    },
    {
        "line": 20,
        "fullcodeline": "if (!q2 || bytesleft < 0) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (!q2 || bytesleft < 0) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (!q2)"
    },
    {
        "line": 55,
        "fullcodeline": "for (i = 0;dict_length > 0 && (i < sizeof(pdfname)-1); i++) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (objstate == STATE_LINEARIZED) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (objstate == STATE_LAUNCHACTION)"
    },
    {
        "line": 92,
        "fullcodeline": "if (dict_length > 0 && (objstate == STATE_JAVASCRIPT ||"
    },
    {
        "line": 126,
        "fullcodeline": "if ((obj->flags & (1 << act->set_objflag)) &&"
    },
    {
        "line": 56,
        "fullcodeline": "q++;"
    },
    {
        "line": 57,
        "fullcodeline": "dict_length--;"
    },
    {
        "line": 70,
        "fullcodeline": "pdfname[i] = *q;"
    },
    {
        "line": 77,
        "fullcodeline": "pdfobj_flag(pdf, obj, LINEARIZED_PDF);"
    },
    {
        "line": 78,
        "fullcodeline": "objstate = STATE_NONE;"
    },
    {
        "line": 79,
        "fullcodeline": "trailer_end = pdf_readint(q, dict_length, \"/H\");"
    },
    {
        "line": 91,
        "fullcodeline": "pdfobj_flag(pdf, obj, HAS_LAUNCHACTION);"
    },
    {
        "line": 96,
        "fullcodeline": "q2 = pdf_nextobject(q, dict_length);"
    },
    {
        "line": 121,
        "fullcodeline": "objstate = STATE_NONE;"
    },
    {
        "line": 130,
        "fullcodeline": "act->set_objflag != OBJ_FILTER_STANDARD) {"
    },
    {
        "line": 131,
        "fullcodeline": "filters++;"
    },
    {
        "line": 58,
        "fullcodeline": "if (*q == '#') {"
    },
    {
        "line": 66,
        "fullcodeline": "if (*q == ' ' || *q == '\\t' || *q == '\\r' || *q == '\\n' ||"
    },
    {
        "line": 80,
        "fullcodeline": "if (trailer_end > 0 && trailer_end < pdf->size) {"
    },
    {
        "line": 93,
        "fullcodeline": "objstate == STATE_OPENACTION)) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (objstate == STATE_OPENACTION)"
    },
    {
        "line": 97,
        "fullcodeline": "if (q2 && isdigit(*q2)) {"
    },
    {
        "line": 129,
        "fullcodeline": "act->set_objflag != OBJ_FILTER_CRYPT &&"
    },
    {
        "line": 61,
        "fullcodeline": "q += 2;"
    },
    {
        "line": 62,
        "fullcodeline": "dict_length -= 2;"
    },
    {
        "line": 63,
        "fullcodeline": "escapes = 1;"
    },
    {
        "line": 68,
        "fullcodeline": "|| *q == '(')"
    },
    {
        "line": 81,
        "fullcodeline": "trailer = trailer_end - 1024;"
    },
    {
        "line": 83,
        "fullcodeline": "q2 = pdf->map + trailer;"
    },
    {
        "line": 84,
        "fullcodeline": "cli_dbgmsg(\"cli_pdf: looking for trailer in linearized pdf: %ld - %ld\\n\", trailer, trailer_end);"
    },
    {
        "line": 85,
        "fullcodeline": "pdf_parse_trailer(pdf, q2, trailer_end - trailer);"
    },
    {
        "line": 95,
        "fullcodeline": "pdfobj_flag(pdf, obj, HAS_OPENACTION);"
    },
    {
        "line": 98,
        "fullcodeline": "uint32_t objid = atoi(q2) << 8;"
    },
    {
        "line": 100,
        "fullcodeline": "q2 = pdf_nextobject(q2, dict_length);"
    },
    {
        "line": 128,
        "fullcodeline": "act->to_state == STATE_FILTER &&"
    },
    {
        "line": 59,
        "fullcodeline": "if (cli_hex2str_to(q+1, pdfname+i, 2) == -1)"
    },
    {
        "line": 67,
        "fullcodeline": "*q == '/' || *q == '>' || *q == ']' || *q == '[' || *q == '<'"
    },
    {
        "line": 82,
        "fullcodeline": "if (trailer < 0) trailer = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "while (isdigit(*q2)) q2++;"
    },
    {
        "line": 101,
        "fullcodeline": "if (q2 && isdigit(*q2)) {"
    },
    {
        "line": 127,
        "fullcodeline": "act->from_state == STATE_FILTER &&"
    },
    {
        "line": 87,
        "fullcodeline": "cli_dbgmsg(\"cli_pdf: found fileID\\n\");"
    },
    {
        "line": 102,
        "fullcodeline": "objid |= atoi(q2) & 0xff;"
    },
    {
        "line": 103,
        "fullcodeline": "q2 = pdf_nextobject(q2, dict_length);"
    },
    {
        "line": 104,
        "fullcodeline": "if (q2 && *q2 == 'R') {"
    },
    {
        "line": 106,
        "fullcodeline": "cli_dbgmsg(\"cli_pdf: found %s stored in indirect object %u %u\\n\","
    },
    {
        "line": 109,
        "fullcodeline": "obj2 = find_obj(pdf, obj, objid);"
    },
    {
        "line": 108,
        "fullcodeline": "objid >> 8, objid&0xff);"
    },
    {
        "line": 111,
        "fullcodeline": "enum pdf_objflags flag = objstate == STATE_JAVASCRIPT ?"
    },
    {
        "line": 113,
        "fullcodeline": "obj2->flags |= 1 << flag;"
    },
    {
        "line": 114,
        "fullcodeline": "obj->flags &= ~(1 << flag);"
    },
    {
        "line": 116,
        "fullcodeline": "pdfobj_flag(pdf, obj, BAD_INDOBJ);"
    }
]