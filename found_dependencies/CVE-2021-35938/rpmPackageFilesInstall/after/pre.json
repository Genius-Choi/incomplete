[
    {
        "line": 4,
        "fullcodeline": "FD_t payload = rpmtePayload(te);"
    },
    {
        "line": 5,
        "fullcodeline": "rpmfi fi = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "rpmfs fs = rpmteGetFileStates(te);"
    },
    {
        "line": 7,
        "fullcodeline": "rpmPlugins plugins = rpmtsPlugins(ts);"
    },
    {
        "line": 8,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "int fx = -1;"
    },
    {
        "line": 10,
        "fullcodeline": "int fc = rpmfilesFC(files);"
    },
    {
        "line": 11,
        "fullcodeline": "int nodigest = (rpmtsFlags(ts) & RPMTRANS_FLAG_NOFILEDIGEST) ? 1 : 0;"
    },
    {
        "line": 12,
        "fullcodeline": "int nofcaps = (rpmtsFlags(ts) & RPMTRANS_FLAG_NOCAPS) ? 1 : 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int firstlinkfile = -1;"
    },
    {
        "line": 14,
        "fullcodeline": "char *tid = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "struct filedata_s *fdata = xcalloc(fc, sizeof(*fdata));"
    },
    {
        "line": 16,
        "fullcodeline": "struct filedata_s *firstlink = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "struct diriter_s di = { -1 };"
    },
    {
        "line": 20,
        "fullcodeline": "rasprintf(&tid, \";%08x\", (unsigned)rpmtsGetTid(ts));"
    },
    {
        "line": 23,
        "fullcodeline": "fi = rpmfilesIter(files, RPMFI_ITER_FWD);"
    },
    {
        "line": 47,
        "fullcodeline": "fi = rpmfiFree(fi);"
    },
    {
        "line": 52,
        "fullcodeline": "fi = fsmIter(payload, files,"
    },
    {
        "line": 181,
        "fullcodeline": "fi = fsmIter(NULL, files, RPMFI_ITER_FWD, &di);"
    },
    {
        "line": 206,
        "fullcodeline": "fi = fsmIterFini(fi, &di);"
    },
    {
        "line": 224,
        "fullcodeline": "rpmswAdd(rpmtsOp(ts, RPMTS_OP_UNCOMPRESS), fdOp(payload, FDSTAT_READ));"
    },
    {
        "line": 225,
        "fullcodeline": "rpmswAdd(rpmtsOp(ts, RPMTS_OP_DIGEST), fdOp(payload, FDSTAT_DIGEST));"
    },
    {
        "line": 228,
        "fullcodeline": "fi = fsmIterFini(fi, &di);"
    },
    {
        "line": 229,
        "fullcodeline": "Fclose(payload);"
    },
    {
        "line": 230,
        "fullcodeline": "free(tid);"
    },
    {
        "line": 233,
        "fullcodeline": "free(fdata);"
    },
    {
        "line": 24,
        "fullcodeline": "while (!rc && (fx = rpmfiNext(fi)) >= 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (fi == NULL) {"
    },
    {
        "line": 61,
        "fullcodeline": "while (!rc && (fx = rpmfiNext(fi)) >= 0) {"
    },
    {
        "line": 175,
        "fullcodeline": "fi = fsmIterFini(fi, &di);"
    },
    {
        "line": 177,
        "fullcodeline": "if (!rc && fx < 0 && fx != RPMERR_ITER_END)"
    },
    {
        "line": 182,
        "fullcodeline": "while (!rc && (fx = rpmfiNext(fi)) >= 0) {"
    },
    {
        "line": 231,
        "fullcodeline": "for (int i = 0; i < fc; i++)"
    },
    {
        "line": 25,
        "fullcodeline": "struct filedata_s *fp = &fdata[fx];"
    },
    {
        "line": 30,
        "fullcodeline": "fp->skip = XFA_SKIPPING(fp->action);"
    },
    {
        "line": 33,
        "fullcodeline": "fp->fpath = fsmFsPath(fi, fp->suffix);"
    },
    {
        "line": 36,
        "fullcodeline": "rc = rpmfiStat(fi, 1, &fp->sb);"
    },
    {
        "line": 39,
        "fullcodeline": "fp->setmeta = (fp->skip == 0) &&"
    },
    {
        "line": 42,
        "fullcodeline": "setFileState(fs, fx);"
    },
    {
        "line": 43,
        "fullcodeline": "fsmDebug(fp->fpath, fp->action, &fp->sb);"
    },
    {
        "line": 45,
        "fullcodeline": "fp->stage = FILE_PRE;"
    },
    {
        "line": 53,
        "fullcodeline": "payload ? RPMFI_ITER_READ_ARCHIVE : RPMFI_ITER_FWD, &di);"
    },
    {
        "line": 56,
        "fullcodeline": "rc = RPMERR_BAD_MAGIC;"
    },
    {
        "line": 62,
        "fullcodeline": "struct filedata_s *fp = &fdata[fx];"
    },
    {
        "line": 173,
        "fullcodeline": "fp->stage = FILE_UNPACK;"
    },
    {
        "line": 178,
        "fullcodeline": "rc = fx;"
    },
    {
        "line": 183,
        "fullcodeline": "struct filedata_s *fp = &fdata[fx];"
    },
    {
        "line": 210,
        "fullcodeline": "fi = fsmIter(NULL, files, RPMFI_ITER_BACK, &di);"
    },
    {
        "line": 26,
        "fullcodeline": "if (rpmfiFFlags(fi) & RPMFILE_GHOST)"
    },
    {
        "line": 31,
        "fullcodeline": "if (XFA_CREATING(fp->action) && !S_ISDIR(rpmfiFMode(fi)))"
    },
    {
        "line": 70,
        "fullcodeline": "if (fp->skip && firstlink && rpmfiArchiveHasContent(fi))"
    },
    {
        "line": 73,
        "fullcodeline": "if (!fp->skip) {"
    },
    {
        "line": 185,
        "fullcodeline": "if (!fp->skip) {"
    },
    {
        "line": 211,
        "fullcodeline": "while ((fx = rpmfiNext(fi)) >= 0) {"
    },
    {
        "line": 27,
        "fullcodeline": "fp->action = FA_SKIP;"
    },
    {
        "line": 32,
        "fullcodeline": "fp->suffix = tid;"
    },
    {
        "line": 40,
        "fullcodeline": "(fp->sb.st_nlink == 1 || fp->action == FA_TOUCH);"
    },
    {
        "line": 71,
        "fullcodeline": "fp = firstlink;"
    },
    {
        "line": 74,
        "fullcodeline": "int fd = -1;"
    },
    {
        "line": 86,
        "fullcodeline": "rc = rpmpluginsCallFsmFilePre(plugins, fi, fp->fpath,"
    },
    {
        "line": 170,
        "fullcodeline": "*failedFile = xstrdup(fp->fpath);"
    },
    {
        "line": 202,
        "fullcodeline": "rpmpluginsCallFsmFilePost(plugins, fi, fp->fpath,"
    },
    {
        "line": 212,
        "fullcodeline": "struct filedata_s *fp = &fdata[fx];"
    },
    {
        "line": 29,
        "fullcodeline": "fp->action = rpmfsGetAction(fs, fx);"
    },
    {
        "line": 76,
        "fullcodeline": "if (!fp->suffix && fp != firstlink) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (!fp->suffix) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (rc == RPMERR_ENOENT && fp->action == FA_TOUCH) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (fp->action == FA_TOUCH)"
    },
    {
        "line": 115,
        "fullcodeline": "if (S_ISREG(fp->sb.st_mode)) {"
    },
    {
        "line": 149,
        "fullcodeline": "if (!rc && fd == -1 && !S_ISLNK(fp->sb.st_mode)) {"
    },
    {
        "line": 158,
        "fullcodeline": "if (!rc && fp->setmeta) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (fd != firstlinkfile)"
    },
    {
        "line": 172,
        "fullcodeline": "rpmpsmNotify(psm, RPMCALLBACK_INST_PROGRESS, rpmfiArchiveTell(fi));"
    },
    {
        "line": 186,
        "fullcodeline": "if (!rc)"
    },
    {
        "line": 190,
        "fullcodeline": "if (!rc && fp->suffix)"
    },
    {
        "line": 193,
        "fullcodeline": "if (!rc)"
    },
    {
        "line": 196,
        "fullcodeline": "if (!rc)"
    },
    {
        "line": 215,
        "fullcodeline": "if (ensureDir(NULL, rpmfiDN(fi), 0, 0, 1, &di.dirfd))"
    },
    {
        "line": 218,
        "fullcodeline": "if (fp->stage > FILE_NONE && !fp->skip) {"
    },
    {
        "line": 77,
        "fullcodeline": "rc = fsmBackup(di.dirfd, fi, fp->action);"
    },
    {
        "line": 81,
        "fullcodeline": "rc = ensureDir(plugins, rpmfiDN(fi), 0,"
    },
    {
        "line": 105,
        "fullcodeline": "rpmlog(RPMLOG_DEBUG, \"file %s vanished unexpectedly\\n\","
    },
    {
        "line": 107,
        "fullcodeline": "fp->action = FA_CREATE;"
    },
    {
        "line": 108,
        "fullcodeline": "fsmDebug(fp->fpath, fp->action, &fp->sb);"
    },
    {
        "line": 151,
        "fullcodeline": "fd = fsmOpenat(di.dirfd, fp->fpath,"
    },
    {
        "line": 159,
        "fullcodeline": "rc = fsmSetmeta(fd, di.dirfd, fp->fpath,"
    },
    {
        "line": 165,
        "fullcodeline": "fsmClose(&fd);"
    },
    {
        "line": 187,
        "fullcodeline": "rc = ensureDir(NULL, rpmfiDN(fi), 0, 0, 0, &di.dirfd);"
    },
    {
        "line": 191,
        "fullcodeline": "rc = fsmBackup(di.dirfd, fi, fp->action);"
    },
    {
        "line": 194,
        "fullcodeline": "rc = fsmCommit(di.dirfd, &fp->fpath, fi, fp->action, fp->suffix);"
    },
    {
        "line": 197,
        "fullcodeline": "fp->stage = FILE_COMMIT;"
    },
    {
        "line": 219,
        "fullcodeline": "(void) fsmRemove(di.dirfd, fp->fpath, fp->sb.st_mode);"
    },
    {
        "line": 93,
        "fullcodeline": "if (fp->action == FA_TOUCH) {"
    },
    {
        "line": 100,
        "fullcodeline": "rc = RPMERR_ENOENT;"
    },
    {
        "line": 116,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 153,
        "fullcodeline": "if (fd < 0)"
    },
    {
        "line": 199,
        "fullcodeline": "*failedFile = xstrdup(fp->fpath);"
    },
    {
        "line": 82,
        "fullcodeline": "(fp->action == FA_CREATE), 0, &di.dirfd);"
    },
    {
        "line": 95,
        "fullcodeline": "rc = fsmStat(di.dirfd, fp->fpath, 1, &sb);"
    },
    {
        "line": 117,
        "fullcodeline": "rc = fsmMkfile(di.dirfd, fi, fp, files, psm, nodigest,"
    },
    {
        "line": 120,
        "fullcodeline": "} else if (S_ISDIR(fp->sb.st_mode)) {"
    },
    {
        "line": 152,
        "fullcodeline": "fp->suffix ? AT_SYMLINK_NOFOLLOW : 0);"
    },
    {
        "line": 154,
        "fullcodeline": "rc = RPMERR_OPEN_FAILED;"
    },
    {
        "line": 97,
        "fullcodeline": "rc = fsmVerify(di.dirfd, fp->fpath, fi);"
    },
    {
        "line": 121,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 122,
        "fullcodeline": "mode_t mode = fp->sb.st_mode;"
    },
    {
        "line": 123,
        "fullcodeline": "mode &= ~07777;"
    },
    {
        "line": 124,
        "fullcodeline": "mode |=  00700;"
    },
    {
        "line": 125,
        "fullcodeline": "rc = fsmMkdir(di.dirfd, fp->fpath, mode);"
    },
    {
        "line": 127,
        "fullcodeline": "} else if (S_ISLNK(fp->sb.st_mode)) {"
    },
    {
        "line": 128,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 129,
        "fullcodeline": "rc = fsmSymlink(rpmfiFLink(fi), di.dirfd, fp->fpath);"
    },
    {
        "line": 131,
        "fullcodeline": "} else if (S_ISFIFO(fp->sb.st_mode)) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 134,
        "fullcodeline": "rc = fsmMkfifo(di.dirfd, fp->fpath, 0000);"
    },
    {
        "line": 136,
        "fullcodeline": "} else if (S_ISCHR(fp->sb.st_mode) ||"
    },
    {
        "line": 138,
        "fullcodeline": "S_ISSOCK(fp->sb.st_mode))"
    },
    {
        "line": 137,
        "fullcodeline": "S_ISBLK(fp->sb.st_mode) ||"
    },
    {
        "line": 140,
        "fullcodeline": "if (rc == RPMERR_ENOENT) {"
    },
    {
        "line": 141,
        "fullcodeline": "rc = fsmMknod(di.dirfd, fp->fpath, fp->sb.st_mode, fp->sb.st_rdev);"
    },
    {
        "line": 145,
        "fullcodeline": "if (!IS_DEV_LOG(fp->fpath))"
    },
    {
        "line": 146,
        "fullcodeline": "rc = RPMERR_UNKNOWN_FILETYPE;"
    }
]