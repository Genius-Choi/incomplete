[
    {
        "line": 5,
        "fullcodeline": "struct o2nm_node *node = to_o2nm_node(item);"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned int octets[4];"
    },
    {
        "line": 10,
        "fullcodeline": "__be32 ipv4_addr = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "ret = sscanf(page, \"%3u.%3u.%3u.%3u\", &octets[3], &octets[2],"
    },
    {
        "line": 24,
        "fullcodeline": "cluster = to_o2nm_cluster_from_node(node);"
    },
    {
        "line": 30,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "write_lock(&cluster->cl_nodes_lock);"
    },
    {
        "line": 14,
        "fullcodeline": "if (ret != 4)"
    },
    {
        "line": 17,
        "fullcodeline": "for (i = 0; i < ARRAY_SIZE(octets); i++) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (!cluster) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (o2nm_node_ip_tree_lookup(cluster, ipv4_addr, &p, &parent))"
    },
    {
        "line": 20,
        "fullcodeline": "be32_add_cpu(&ipv4_addr, octets[i] << (i * 8));"
    },
    {
        "line": 33,
        "fullcodeline": "ret = -EEXIST;"
    },
    {
        "line": 15,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 18,
        "fullcodeline": "if (octets[i] > 255)"
    },
    {
        "line": 27,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 34,
        "fullcodeline": "else if (test_and_set_bit(O2NM_NODE_ATTR_ADDRESS,"
    },
    {
        "line": 19,
        "fullcodeline": "return -ERANGE;"
    },
    {
        "line": 36,
        "fullcodeline": "ret = -EBUSY;"
    },
    {
        "line": 38,
        "fullcodeline": "rb_link_node(&node->nd_ip_node, parent, p);"
    }
]