[
    {
        "line": 4,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "uint8_t header = context->in_packet.command;"
    },
    {
        "line": 7,
        "fullcodeline": "int res = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "struct mosquitto_msg_store *msg, *stored = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "struct mosquitto_client_msg *cmsg_stored = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "mosquitto_property *properties = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "uint32_t message_expiry_interval = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "int topic_alias = -1;"
    },
    {
        "line": 18,
        "fullcodeline": "uint8_t reason_code = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "uint16_t mid = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "msg = mosquitto__calloc(1, sizeof(struct mosquitto_msg_store));"
    },
    {
        "line": 30,
        "fullcodeline": "dup = (header & 0x08)>>3;"
    },
    {
        "line": 31,
        "fullcodeline": "msg->qos = (header & 0x06)>>1;"
    },
    {
        "line": 50,
        "fullcodeline": "msg->retain = (header & 0x01);"
    },
    {
        "line": 175,
        "fullcodeline": "msg->payloadlen = context->in_packet.remaining_length - context->in_packet.pos;"
    },
    {
        "line": 176,
        "fullcodeline": "G_PUB_BYTES_RECEIVED_INC(msg->payloadlen);"
    },
    {
        "line": 212,
        "fullcodeline": "rc = mosquitto_acl_check(context, msg->topic, msg->payloadlen, msg->payload, msg->qos, msg->retain, MOSQ_ACL_WRITE);"
    },
    {
        "line": 225,
        "fullcodeline": "log__printf(NULL, MOSQ_LOG_DEBUG, \"Received PUBLISH from %s (d%d, q%d, r%d, m%d, '%s', ... (%ld bytes))\", context->id, dup, msg->qos, msg->retain, msg->source_mid, msg->topic, (long)msg->payloadlen);"
    },
    {
        "line": 336,
        "fullcodeline": "rc = 1;"
    },
    {
        "line": 21,
        "fullcodeline": "if(context->state != mosq_cs_active){"
    },
    {
        "line": 26,
        "fullcodeline": "if(msg == NULL){"
    },
    {
        "line": 32,
        "fullcodeline": "if(dup == 1 && msg->qos == 0){"
    },
    {
        "line": 38,
        "fullcodeline": "if(msg->qos == 3){"
    },
    {
        "line": 44,
        "fullcodeline": "if(msg->qos > context->max_qos){"
    },
    {
        "line": 52,
        "fullcodeline": "if(msg->retain && db.config->retain_available == false){"
    },
    {
        "line": 57,
        "fullcodeline": "if(packet__read_string(&context->in_packet, &msg->topic, &slen)){"
    },
    {
        "line": 61,
        "fullcodeline": "if(!slen && context->protocol != mosq_p_mqtt5){"
    },
    {
        "line": 67,
        "fullcodeline": "if(msg->qos > 0){"
    },
    {
        "line": 82,
        "fullcodeline": "if(context->protocol == mosq_p_mqtt5){"
    },
    {
        "line": 169,
        "fullcodeline": "if(mosquitto_pub_topic_check(msg->topic) != MOSQ_ERR_SUCCESS){"
    },
    {
        "line": 177,
        "fullcodeline": "if(context->listener && context->listener->mount_point){"
    },
    {
        "line": 213,
        "fullcodeline": "if(rc == MOSQ_ERR_ACL_DENIED){"
    },
    {
        "line": 239,
        "fullcodeline": "rc = plugin__handle_message(context, msg);"
    },
    {
        "line": 254,
        "fullcodeline": "if(msg->qos > 0){"
    },
    {
        "line": 269,
        "fullcodeline": "if(!cmsg_stored){"
    },
    {
        "line": 78,
        "fullcodeline": "msg->source_mid = mid;"
    },
    {
        "line": 83,
        "fullcodeline": "rc = property__read_all(CMD_PUBLISH, &context->in_packet, &properties);"
    },
    {
        "line": 89,
        "fullcodeline": "p = properties;"
    },
    {
        "line": 90,
        "fullcodeline": "p_prev = NULL;"
    },
    {
        "line": 91,
        "fullcodeline": "msg->properties = NULL;"
    },
    {
        "line": 142,
        "fullcodeline": "if(topic_alias == 0 || (context->listener && topic_alias > context->listener->max_topic_alias)){"
    },
    {
        "line": 178,
        "fullcodeline": "len = strlen(context->listener->mount_point) + strlen(msg->topic) + 1;"
    },
    {
        "line": 179,
        "fullcodeline": "topic_mount = mosquitto__malloc(len+1);"
    },
    {
        "line": 184,
        "fullcodeline": "snprintf(topic_mount, len, \"%s%s\", context->listener->mount_point, msg->topic);"
    },
    {
        "line": 185,
        "fullcodeline": "topic_mount[len] = '\\0';"
    },
    {
        "line": 188,
        "fullcodeline": "msg->topic = topic_mount;"
    },
    {
        "line": 197,
        "fullcodeline": "msg->payload = mosquitto__malloc(msg->payloadlen+1);"
    },
    {
        "line": 214,
        "fullcodeline": "log__printf(NULL, MOSQ_LOG_DEBUG,"
    },
    {
        "line": 218,
        "fullcodeline": "reason_code = MQTT_RC_NOT_AUTHORIZED;"
    },
    {
        "line": 227,
        "fullcodeline": "if(!strncmp(msg->topic, \"$CONTROL/\", 9)){"
    },
    {
        "line": 233,
        "fullcodeline": "reason_code = MQTT_RC_IMPLEMENTATION_SPECIFIC;"
    },
    {
        "line": 240,
        "fullcodeline": "if(rc == MOSQ_ERR_ACL_DENIED){"
    },
    {
        "line": 255,
        "fullcodeline": "db__message_store_find(context, msg->source_mid, &cmsg_stored);"
    },
    {
        "line": 258,
        "fullcodeline": "if(cmsg_stored && cmsg_stored->store && msg->source_mid != 0 &&"
    },
    {
        "line": 259,
        "fullcodeline": "(cmsg_stored->store->qos != msg->qos"
    },
    {
        "line": 264,
        "fullcodeline": "log__printf(NULL, MOSQ_LOG_WARNING, \"Reused message ID %u from %s detected. Clearing from storage.\", msg->source_mid, context->id);"
    },
    {
        "line": 265,
        "fullcodeline": "db__message_remove_incoming(context, msg->source_mid);"
    },
    {
        "line": 266,
        "fullcodeline": "cmsg_stored = NULL;"
    },
    {
        "line": 282,
        "fullcodeline": "stored = msg;"
    },
    {
        "line": 284,
        "fullcodeline": "dup = 0;"
    },
    {
        "line": 295,
        "fullcodeline": "rc2 = sub__messages_queue(context->id, stored->topic, stored->qos, stored->retain, &stored);"
    },
    {
        "line": 299,
        "fullcodeline": "util__decrement_receive_quota(context);"
    },
    {
        "line": 300,
        "fullcodeline": "rc2 = sub__messages_queue(context->id, stored->topic, stored->qos, stored->retain, &stored);"
    },
    {
        "line": 352,
        "fullcodeline": "rc = MQTT_RC_QUOTA_EXCEEDED;"
    },
    {
        "line": 68,
        "fullcodeline": "if(packet__read_uint16(&context->in_packet, &mid)){"
    },
    {
        "line": 72,
        "fullcodeline": "if(mid == 0){"
    },
    {
        "line": 180,
        "fullcodeline": "if(!topic_mount){"
    },
    {
        "line": 198,
        "fullcodeline": "if(msg->payload == NULL){"
    },
    {
        "line": 205,
        "fullcodeline": "if(packet__read_bytes(&context->in_packet, msg->payload, msg->payloadlen)){"
    },
    {
        "line": 241,
        "fullcodeline": "log__printf(NULL, MOSQ_LOG_DEBUG,"
    },
    {
        "line": 246,
        "fullcodeline": "reason_code = MQTT_RC_NOT_AUTHORIZED;"
    },
    {
        "line": 262,
        "fullcodeline": "|| memcmp(cmsg_stored->store->payload, msg->payload, msg->payloadlen) )){"
    },
    {
        "line": 288,
        "fullcodeline": "stored = cmsg_stored->store;"
    },
    {
        "line": 289,
        "fullcodeline": "cmsg_stored->dup++;"
    },
    {
        "line": 290,
        "fullcodeline": "dup = cmsg_stored->dup;"
    },
    {
        "line": 311,
        "fullcodeline": "if(dup == 0){"
    },
    {
        "line": 320,
        "fullcodeline": "if(!res){"
    },
    {
        "line": 145,
        "fullcodeline": "}else if(topic_alias > 0){"
    },
    {
        "line": 192,
        "fullcodeline": "if(db.config->message_size_limit && msg->payloadlen > db.config->message_size_limit){"
    },
    {
        "line": 193,
        "fullcodeline": "log__printf(NULL, MOSQ_LOG_DEBUG, \"Dropped too large PUBLISH from %s (d%d, q%d, r%d, m%d, '%s', ... (%ld bytes))\", context->id, dup, msg->qos, msg->retain, msg->source_mid, msg->topic, (long)msg->payloadlen);"
    },
    {
        "line": 194,
        "fullcodeline": "reason_code = MQTT_RC_PACKET_TOO_LARGE;"
    },
    {
        "line": 220,
        "fullcodeline": "}else if(rc != MOSQ_ERR_SUCCESS){"
    },
    {
        "line": 261,
        "fullcodeline": "|| strcmp(cmsg_stored->store->topic, msg->topic)"
    },
    {
        "line": 270,
        "fullcodeline": "if(msg->qos == 0"
    },
    {
        "line": 271,
        "fullcodeline": "|| db__ready_for_flight(context, mosq_md_in, msg->qos)"
    },
    {
        "line": 275,
        "fullcodeline": "rc = db__message_store(context, msg, message_expiry_interval, 0, mosq_mo_client);"
    },
    {
        "line": 296,
        "fullcodeline": "if(rc2 > 0) rc = 1;"
    },
    {
        "line": 302,
        "fullcodeline": "if(rc2 == MOSQ_ERR_SUCCESS || context->protocol != mosq_p_mqtt5){"
    },
    {
        "line": 312,
        "fullcodeline": "res = db__message_insert(context, stored->source_mid, mosq_md_in, stored->qos, stored->retain, stored, NULL, false);"
    },
    {
        "line": 340,
        "fullcodeline": "rc = MOSQ_ERR_SUCCESS;"
    },
    {
        "line": 343,
        "fullcodeline": "rc = send__puback(context, msg->source_mid, reason_code, NULL);"
    },
    {
        "line": 346,
        "fullcodeline": "rc = send__pubrec(context, msg->source_mid, reason_code, NULL);"
    },
    {
        "line": 248,
        "fullcodeline": "}else if(rc != MOSQ_ERR_SUCCESS){"
    },
    {
        "line": 260,
        "fullcodeline": "|| cmsg_stored->store->payloadlen != msg->payloadlen"
    },
    {
        "line": 279,
        "fullcodeline": "reason_code = MQTT_RC_QUOTA_EXCEEDED;"
    },
    {
        "line": 303,
        "fullcodeline": "if(send__puback(context, mid, 0, NULL)) rc = 1;"
    },
    {
        "line": 314,
        "fullcodeline": "res = 0;"
    },
    {
        "line": 118,
        "fullcodeline": "topic_alias = p->value.i16;"
    },
    {
        "line": 119,
        "fullcodeline": "p_prev = p;"
    },
    {
        "line": 120,
        "fullcodeline": "p = p->next;"
    },
    {
        "line": 124,
        "fullcodeline": "message_expiry_interval = p->value.i32;"
    },
    {
        "line": 125,
        "fullcodeline": "p_prev = p;"
    },
    {
        "line": 126,
        "fullcodeline": "p = p->next;"
    },
    {
        "line": 130,
        "fullcodeline": "p_prev = p;"
    },
    {
        "line": 131,
        "fullcodeline": "p = p->next;"
    },
    {
        "line": 135,
        "fullcodeline": "p = p->next;"
    },
    {
        "line": 304,
        "fullcodeline": "}else if(rc2 == MOSQ_ERR_NO_SUBSCRIBERS){"
    },
    {
        "line": 321,
        "fullcodeline": "if(dup == 0 || dup == 1){"
    },
    {
        "line": 322,
        "fullcodeline": "rc2 = send__pubrec(context, stored->source_mid, 0, NULL);"
    },
    {
        "line": 147,
        "fullcodeline": "rc = alias__add(context, msg->topic, (uint16_t)topic_alias);"
    },
    {
        "line": 328,
        "fullcodeline": "rc = 1;"
    },
    {
        "line": 108,
        "fullcodeline": "p_prev->next = p->next;"
    },
    {
        "line": 109,
        "fullcodeline": "p = p_prev->next;"
    },
    {
        "line": 305,
        "fullcodeline": "if(send__puback(context, mid, MQTT_RC_NO_MATCHING_SUBSCRIBERS, NULL)) rc = 1;"
    },
    {
        "line": 307,
        "fullcodeline": "rc = rc2;"
    },
    {
        "line": 323,
        "fullcodeline": "if(rc2) rc = rc2;"
    },
    {
        "line": 104,
        "fullcodeline": "msg->properties = p;"
    },
    {
        "line": 111,
        "fullcodeline": "properties = p->next;"
    },
    {
        "line": 112,
        "fullcodeline": "p = properties;"
    },
    {
        "line": 153,
        "fullcodeline": "rc = alias__find(context, &msg->topic, (uint16_t)topic_alias);"
    }
]