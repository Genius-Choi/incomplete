[
    {
        "line": 4,
        "fullcodeline": "char sockpair_data = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "assert(mosq);"
    },
    {
        "line": 7,
        "fullcodeline": "assert(packet);"
    },
    {
        "line": 9,
        "fullcodeline": "packet->pos = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "packet->to_process = packet->packet_length;"
    },
    {
        "line": 12,
        "fullcodeline": "packet->next = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "pthread_mutex_lock(&mosq->out_packet_mutex);"
    },
    {
        "line": 19,
        "fullcodeline": "mosq->out_packet_last = packet;"
    },
    {
        "line": 20,
        "fullcodeline": "mosq->out_packet_count++;"
    },
    {
        "line": 21,
        "fullcodeline": "pthread_mutex_unlock(&mosq->out_packet_mutex);"
    },
    {
        "line": 37,
        "fullcodeline": "if(mosq->sockpairW != INVALID_SOCKET){"
    },
    {
        "line": 46,
        "fullcodeline": "if(mosq->in_callback == false && mosq->threaded == mosq_ts_none){"
    },
    {
        "line": 15,
        "fullcodeline": "mosq->out_packet_last->next = packet;"
    },
    {
        "line": 17,
        "fullcodeline": "mosq->out_packet = packet;"
    },
    {
        "line": 39,
        "fullcodeline": "if(write(mosq->sockpairW, &sockpair_data, 1)){"
    },
    {
        "line": 47,
        "fullcodeline": "return packet__write(mosq);"
    }
]