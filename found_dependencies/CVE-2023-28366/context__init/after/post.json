[
    {
        "line": 4,
        "fullcodeline": "char address[1024];"
    },
    {
        "line": 6,
        "fullcodeline": "context = mosquitto__calloc(1, sizeof(struct mosquitto));"
    },
    {
        "line": 12,
        "fullcodeline": "context->pollfd_index = -1;"
    },
    {
        "line": 14,
        "fullcodeline": "mosquitto__set_state(context, mosq_cs_new);"
    },
    {
        "line": 15,
        "fullcodeline": "context->sock = sock;"
    },
    {
        "line": 17,
        "fullcodeline": "context->next_msg_out = db.now_s + 60;"
    },
    {
        "line": 18,
        "fullcodeline": "context->keepalive = 60; /* Default to 60s */"
    },
    {
        "line": 19,
        "fullcodeline": "context->clean_start = true;"
    },
    {
        "line": 20,
        "fullcodeline": "context->id = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "context->last_mid = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "context->will = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "context->username = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "context->password = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "context->listener = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "context->acl_list = NULL;"
    },
    {
        "line": 27,
        "fullcodeline": "context->retain_available = true;"
    },
    {
        "line": 32,
        "fullcodeline": "context->is_bridge = false;"
    },
    {
        "line": 34,
        "fullcodeline": "context->in_packet.payload = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "packet__cleanup(&context->in_packet);"
    },
    {
        "line": 36,
        "fullcodeline": "context->out_packet = NULL;"
    },
    {
        "line": 37,
        "fullcodeline": "context->current_out_packet = NULL;"
    },
    {
        "line": 38,
        "fullcodeline": "context->out_packet_count = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "context->address = NULL;"
    },
    {
        "line": 51,
        "fullcodeline": "context->bridge = NULL;"
    },
    {
        "line": 52,
        "fullcodeline": "context->msgs_in.inflight_maximum = 1;"
    },
    {
        "line": 54,
        "fullcodeline": "context->msgs_in.inflight_quota = 1;"
    },
    {
        "line": 56,
        "fullcodeline": "context->max_qos = 2;"
    },
    {
        "line": 7,
        "fullcodeline": "if(!context) return NULL;"
    },
    {
        "line": 41,
        "fullcodeline": "if((int)sock >= 0){"
    },
    {
        "line": 61,
        "fullcodeline": "if((int)context->sock >= 0){"
    },
    {
        "line": 62,
        "fullcodeline": "HASH_ADD(hh_sock, db.contexts_by_sock, sock, sizeof(context->sock), context);"
    },
    {
        "line": 42,
        "fullcodeline": "if(!net__socket_get_address(sock, address, 1024, &context->remote_port)){"
    },
    {
        "line": 45,
        "fullcodeline": "if(!context->address){"
    },
    {
        "line": 43,
        "fullcodeline": "context->address = mosquitto__strdup(address);"
    },
    {
        "line": 47,
        "fullcodeline": "mosquitto__free(context);"
    }
]