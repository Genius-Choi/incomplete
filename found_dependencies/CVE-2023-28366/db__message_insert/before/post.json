[
    {
        "line": 5,
        "fullcodeline": "enum mosquitto_msg_state state = mosq_ms_invalid;"
    },
    {
        "line": 6,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "assert(stored);"
    },
    {
        "line": 110,
        "fullcodeline": "assert(state != mosq_ms_invalid);"
    },
    {
        "line": 120,
        "fullcodeline": "msg->prev = NULL;"
    },
    {
        "line": 121,
        "fullcodeline": "msg->next = NULL;"
    },
    {
        "line": 122,
        "fullcodeline": "msg->store = stored;"
    },
    {
        "line": 123,
        "fullcodeline": "db__msg_store_ref_inc(msg->store);"
    },
    {
        "line": 124,
        "fullcodeline": "msg->mid = mid;"
    },
    {
        "line": 126,
        "fullcodeline": "msg->direction = dir;"
    },
    {
        "line": 127,
        "fullcodeline": "msg->state = state;"
    },
    {
        "line": 128,
        "fullcodeline": "msg->dup = false;"
    },
    {
        "line": 134,
        "fullcodeline": "msg->retain = retain;"
    },
    {
        "line": 135,
        "fullcodeline": "msg->properties = properties;"
    },
    {
        "line": 11,
        "fullcodeline": "if(!context) return MOSQ_ERR_INVAL;"
    },
    {
        "line": 12,
        "fullcodeline": "if(!context->id) return MOSQ_ERR_SUCCESS; /* Protect against unlikely \"client is disconnected but not entirely freed\" scenario */"
    },
    {
        "line": 14,
        "fullcodeline": "if(dir == mosq_md_out){"
    },
    {
        "line": 27,
        "fullcodeline": "if(context->protocol != mosq_p_mqtt5"
    },
    {
        "line": 39,
        "fullcodeline": "if(context->sock == INVALID_SOCKET){"
    },
    {
        "line": 58,
        "fullcodeline": "if(context->sock != INVALID_SOCKET){"
    },
    {
        "line": 119,
        "fullcodeline": "if(!msg) return MOSQ_ERR_NOMEM;"
    },
    {
        "line": 129,
        "fullcodeline": "if(qos > context->max_qos){"
    },
    {
        "line": 137,
        "fullcodeline": "if(state == mosq_ms_queued){"
    },
    {
        "line": 145,
        "fullcodeline": "if(db.config->allow_duplicate_messages == false && dir == mosq_md_out && retain == false){"
    },
    {
        "line": 174,
        "fullcodeline": "if(dir == mosq_md_out && msg->qos > 0 && state != mosq_ms_queued){"
    },
    {
        "line": 178,
        "fullcodeline": "if(dir == mosq_md_out && update){"
    },
    {
        "line": 15,
        "fullcodeline": "msg_data = &context->msgs_out;"
    },
    {
        "line": 130,
        "fullcodeline": "msg->qos = context->max_qos;"
    },
    {
        "line": 138,
        "fullcodeline": "DL_APPEND(msg_data->queued, msg);"
    },
    {
        "line": 139,
        "fullcodeline": "db__msg_add_to_queued_stats(msg_data, msg);"
    },
    {
        "line": 153,
        "fullcodeline": "dest_ids = mosquitto__realloc(stored->dest_ids, sizeof(char *)*(size_t)(stored->dest_id_count+1));"
    },
    {
        "line": 175,
        "fullcodeline": "util__decrement_send_quota(context);"
    },
    {
        "line": 179,
        "fullcodeline": "rc = db__message_write_inflight_out_latest(context);"
    },
    {
        "line": 181,
        "fullcodeline": "rc = db__message_write_queued_out(context);"
    },
    {
        "line": 17,
        "fullcodeline": "msg_data = &context->msgs_in;"
    },
    {
        "line": 29,
        "fullcodeline": "&& dir == mosq_md_out && retain == false && stored->dest_ids){"
    },
    {
        "line": 31,
        "fullcodeline": "for(i=0; i<stored->dest_id_count; i++){"
    },
    {
        "line": 41,
        "fullcodeline": "if(qos == 0 && !db.config->queue_qos0_messages){"
    },
    {
        "line": 52,
        "fullcodeline": "if(context->bridge && context->bridge->clean_start_local == true){"
    },
    {
        "line": 59,
        "fullcodeline": "if(db__ready_for_flight(context, dir, qos)){"
    },
    {
        "line": 132,
        "fullcodeline": "msg->qos = qos;"
    },
    {
        "line": 141,
        "fullcodeline": "DL_APPEND(msg_data->inflight, msg);"
    },
    {
        "line": 142,
        "fullcodeline": "db__msg_add_to_inflight_stats(msg_data, msg);"
    },
    {
        "line": 53,
        "fullcodeline": "mosquitto_property_free_all(&properties);"
    },
    {
        "line": 96,
        "fullcodeline": "if (db__ready_for_queue(context, qos, msg_data)){"
    },
    {
        "line": 155,
        "fullcodeline": "stored->dest_ids = dest_ids;"
    },
    {
        "line": 156,
        "fullcodeline": "stored->dest_id_count++;"
    },
    {
        "line": 157,
        "fullcodeline": "stored->dest_ids[stored->dest_id_count-1] = mosquitto__strdup(context->id);"
    },
    {
        "line": 28,
        "fullcodeline": "&& db.config->allow_duplicate_messages == false"
    },
    {
        "line": 32,
        "fullcodeline": "if(stored->dest_ids[i] && !strcmp(stored->dest_ids[i], context->id)){"
    },
    {
        "line": 42,
        "fullcodeline": "if(!context->bridge){"
    },
    {
        "line": 60,
        "fullcodeline": "if(dir == mosq_md_out){"
    },
    {
        "line": 97,
        "fullcodeline": "state = mosq_ms_queued;"
    },
    {
        "line": 158,
        "fullcodeline": "if(!stored->dest_ids[stored->dest_id_count-1]){"
    },
    {
        "line": 34,
        "fullcodeline": "mosquitto_property_free_all(&properties);"
    },
    {
        "line": 43,
        "fullcodeline": "mosquitto_property_free_all(&properties);"
    },
    {
        "line": 80,
        "fullcodeline": "}else if(qos != 0 && db__ready_for_queue(context, qos, msg_data)){"
    },
    {
        "line": 99,
        "fullcodeline": "G_MSGS_DROPPED_INC();"
    },
    {
        "line": 106,
        "fullcodeline": "mosquitto_property_free_all(&properties);"
    },
    {
        "line": 81,
        "fullcodeline": "state = mosq_ms_queued;"
    },
    {
        "line": 82,
        "fullcodeline": "rc = 2;"
    },
    {
        "line": 100,
        "fullcodeline": "if(context->is_dropping == false){"
    },
    {
        "line": 46,
        "fullcodeline": "if(context->bridge->start_type != bst_lazy){"
    },
    {
        "line": 63,
        "fullcodeline": "state = mosq_ms_publish_qos0;"
    },
    {
        "line": 66,
        "fullcodeline": "state = mosq_ms_publish_qos1;"
    },
    {
        "line": 69,
        "fullcodeline": "state = mosq_ms_publish_qos2;"
    },
    {
        "line": 73,
        "fullcodeline": "if(qos == 2){"
    },
    {
        "line": 91,
        "fullcodeline": "G_MSGS_DROPPED_INC();"
    },
    {
        "line": 92,
        "fullcodeline": "mosquitto_property_free_all(&properties);"
    },
    {
        "line": 101,
        "fullcodeline": "context->is_dropping = true;"
    },
    {
        "line": 102,
        "fullcodeline": "log__printf(NULL, MOSQ_LOG_NOTICE,"
    },
    {
        "line": 47,
        "fullcodeline": "mosquitto_property_free_all(&properties);"
    },
    {
        "line": 74,
        "fullcodeline": "state = mosq_ms_wait_for_pubrel;"
    },
    {
        "line": 85,
        "fullcodeline": "if(context->is_dropping == false){"
    },
    {
        "line": 76,
        "fullcodeline": "mosquitto_property_free_all(&properties);"
    },
    {
        "line": 86,
        "fullcodeline": "context->is_dropping = true;"
    },
    {
        "line": 87,
        "fullcodeline": "log__printf(NULL, MOSQ_LOG_NOTICE,"
    }
]