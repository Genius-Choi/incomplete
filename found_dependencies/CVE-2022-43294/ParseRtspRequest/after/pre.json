[
    {
        "line": 7,
        "fullcodeline": "Init();"
    },
    {
        "line": 8,
        "fullcodeline": "CurRequestSize = aRequestSize;"
    },
    {
        "line": 9,
        "fullcodeline": "memcpy(CurRequest,aRequest,aRequestSize);"
    },
    {
        "line": 14,
        "fullcodeline": "char CP[128]; //static char CP[1024];"
    },
    {
        "line": 19,
        "fullcodeline": "ClientPortPtr = strstr(CurRequest,\"client_port\");"
    },
    {
        "line": 49,
        "fullcodeline": "bool parseSucceeded = false;"
    },
    {
        "line": 61,
        "fullcodeline": "CmdName[i] = '\\0';"
    },
    {
        "line": 67,
        "fullcodeline": "printf(\"RTSP received %s\\n\", CmdName);"
    },
    {
        "line": 84,
        "fullcodeline": "unsigned j = i+1;"
    },
    {
        "line": 113,
        "fullcodeline": "parseSucceeded = false;"
    },
    {
        "line": 141,
        "fullcodeline": "parseSucceeded = false;"
    },
    {
        "line": 20,
        "fullcodeline": "if (ClientPortPtr != nullptr)"
    },
    {
        "line": 51,
        "fullcodeline": "for (i = 0; i < sizeof(CmdName)-1 && i < CurRequestSize; ++i)"
    },
    {
        "line": 62,
        "fullcodeline": "if (!parseSucceeded) {"
    },
    {
        "line": 85,
        "fullcodeline": "while (j < CurRequestSize && (CurRequest[j] == ' ' || CurRequest[j] == '\\t')) ++j; // skip over any additional white space"
    },
    {
        "line": 86,
        "fullcodeline": "for (; (int)j < (int)(CurRequestSize-8); ++j)"
    },
    {
        "line": 114,
        "fullcodeline": "for (unsigned k = i+1; (int)k < (int)(CurRequestSize-5); ++k)"
    },
    {
        "line": 142,
        "fullcodeline": "for (j = i; (int)j < (int)(CurRequestSize-5); ++j)"
    },
    {
        "line": 168,
        "fullcodeline": "for (j = i; (int)j < (int)(CurRequestSize-15); ++j)"
    },
    {
        "line": 22,
        "fullcodeline": "TmpPtr = strstr(ClientPortPtr,\"\\r\\n\");"
    },
    {
        "line": 53,
        "fullcodeline": "char c = CurRequest[i];"
    },
    {
        "line": 59,
        "fullcodeline": "CmdName[i] = c;"
    },
    {
        "line": 63,
        "fullcodeline": "printf(\"failed to parse RTSP\\n\");"
    },
    {
        "line": 70,
        "fullcodeline": "if (strstr(CmdName,\"OPTIONS\")   != nullptr) m_RtspCmdType = RTSP_OPTIONS; else"
    },
    {
        "line": 79,
        "fullcodeline": "TmpPtr = strstr(CurRequest,\"RTP/AVP/TCP\");"
    },
    {
        "line": 23,
        "fullcodeline": "if (TmpPtr != nullptr)"
    },
    {
        "line": 54,
        "fullcodeline": "if (c == ' ' || c == '\\t')"
    },
    {
        "line": 25,
        "fullcodeline": "TmpPtr[0] = 0x00;"
    },
    {
        "line": 26,
        "fullcodeline": "Length = strlen(ClientPortPtr);"
    },
    {
        "line": 31,
        "fullcodeline": "strncpy(CP,ClientPortPtr, Length);"
    },
    {
        "line": 32,
        "fullcodeline": "pCP = strstr(CP,\"=\");"
    },
    {
        "line": 56,
        "fullcodeline": "parseSucceeded = true;"
    },
    {
        "line": 88,
        "fullcodeline": "if ((CurRequest[j]   == 'r' || CurRequest[j]   == 'R')   &&"
    },
    {
        "line": 92,
        "fullcodeline": "CurRequest[j+4] == ':' && CurRequest[j+5] == '/')"
    },
    {
        "line": 94,
        "fullcodeline": "j += 6;"
    },
    {
        "line": 107,
        "fullcodeline": "i = j;"
    },
    {
        "line": 116,
        "fullcodeline": "if (CurRequest[k]   == 'R'   && CurRequest[k+1] == 'T'   &&"
    },
    {
        "line": 118,
        "fullcodeline": "CurRequest[k+4] == '/')"
    },
    {
        "line": 121,
        "fullcodeline": "unsigned k1 = k;"
    },
    {
        "line": 124,
        "fullcodeline": "unsigned n = 0, k2 = k1+1;"
    },
    {
        "line": 130,
        "fullcodeline": "n = 0; k2 = i + 1;"
    },
    {
        "line": 133,
        "fullcodeline": "i = k + 7;"
    },
    {
        "line": 134,
        "fullcodeline": "parseSucceeded = true;"
    },
    {
        "line": 144,
        "fullcodeline": "if (CurRequest[j]   == 'C' && CurRequest[j+1] == 'S' &&"
    },
    {
        "line": 146,
        "fullcodeline": "CurRequest[j+4] == ':')"
    },
    {
        "line": 148,
        "fullcodeline": "j += 5;"
    },
    {
        "line": 170,
        "fullcodeline": "if (CurRequest[j]    == 'C'  && CurRequest[j+1]  == 'o'  &&"
    },
    {
        "line": 177,
        "fullcodeline": "CurRequest[j+13] == 'h' && CurRequest[j+14] == ':')"
    },
    {
        "line": 179,
        "fullcodeline": "j += 15;"
    },
    {
        "line": 27,
        "fullcodeline": "if (Length > 128)"
    },
    {
        "line": 33,
        "fullcodeline": "if (pCP != nullptr)"
    },
    {
        "line": 71,
        "fullcodeline": "if (strstr(CmdName,\"DESCRIBE\")  != nullptr) m_RtspCmdType = RTSP_DESCRIBE; else"
    },
    {
        "line": 95,
        "fullcodeline": "if (CurRequest[j] == '/')"
    },
    {
        "line": 117,
        "fullcodeline": "CurRequest[k+2] == 'S'   && CurRequest[k+3] == 'P'   &&"
    },
    {
        "line": 122,
        "fullcodeline": "while (k1 > i && CurRequest[k1] != '/') --k1;"
    },
    {
        "line": 126,
        "fullcodeline": "while (k2 <= k) m_URLSuffix[n++] = CurRequest[k2++];"
    },
    {
        "line": 131,
        "fullcodeline": "while (k2 <= k1 - 1) m_URLPreSuffix[n++] = CurRequest[k2++];"
    },
    {
        "line": 145,
        "fullcodeline": "CurRequest[j+2] == 'e' && CurRequest[j+3] == 'q' &&"
    },
    {
        "line": 149,
        "fullcodeline": "while (j < CurRequestSize && (CurRequest[j] ==  ' ' || CurRequest[j] == '\\t')) ++j;"
    },
    {
        "line": 180,
        "fullcodeline": "while (j < CurRequestSize && (CurRequest[j] ==  ' ' || CurRequest[j] == '\\t')) ++j;"
    },
    {
        "line": 29,
        "fullcodeline": "Length = 128;"
    },
    {
        "line": 35,
        "fullcodeline": "pCP++;"
    },
    {
        "line": 36,
        "fullcodeline": "strcpy(CP,pCP);"
    },
    {
        "line": 37,
        "fullcodeline": "pCP = strstr(CP,\"-\");"
    },
    {
        "line": 91,
        "fullcodeline": "(CurRequest[j+3] == 'p' || CurRequest[j+3] == 'P') &&"
    },
    {
        "line": 97,
        "fullcodeline": "++j;"
    },
    {
        "line": 98,
        "fullcodeline": "unsigned uidx = 0;"
    },
    {
        "line": 120,
        "fullcodeline": "while (--k >= i && CurRequest[k] == ' ') {}"
    },
    {
        "line": 129,
        "fullcodeline": "if (k1 - i > sizeof(m_URLPreSuffix)) return false;"
    },
    {
        "line": 151,
        "fullcodeline": "for (n = 0; n < sizeof(m_CSeq)-1 && j < CurRequestSize; ++n,++j)"
    },
    {
        "line": 153,
        "fullcodeline": "char c = CurRequest[j];"
    },
    {
        "line": 176,
        "fullcodeline": "CurRequest[j+11] == 'g' && CurRequest[j+12]  == 't' &&"
    },
    {
        "line": 182,
        "fullcodeline": "if (sscanf(&CurRequest[j], \"%u\", &num) == 1) m_ContentLength = num;"
    },
    {
        "line": 38,
        "fullcodeline": "if (pCP != nullptr)"
    },
    {
        "line": 90,
        "fullcodeline": "(CurRequest[j+2] == 's' || CurRequest[j+2] == 'S') &&"
    },
    {
        "line": 106,
        "fullcodeline": "else --j;"
    },
    {
        "line": 123,
        "fullcodeline": "if (k - k1 + 1 > sizeof(m_URLSuffix)) return false;"
    },
    {
        "line": 40,
        "fullcodeline": "pCP[0] = 0x00;"
    },
    {
        "line": 41,
        "fullcodeline": "m_ClientRTPPort  = atoi(CP);"
    },
    {
        "line": 42,
        "fullcodeline": "m_ClientRTCPPort = m_ClientRTPPort + 1;"
    },
    {
        "line": 72,
        "fullcodeline": "if (strstr(CmdName,\"SETUP\")     != nullptr) m_RtspCmdType = RTSP_SETUP; else"
    },
    {
        "line": 89,
        "fullcodeline": "(CurRequest[j+1] == 't' || CurRequest[j+1] == 'T') &&"
    },
    {
        "line": 99,
        "fullcodeline": "while (j < CurRequestSize && CurRequest[j] != '/' && CurRequest[j] != ' ' && uidx < sizeof(m_URLHostPort) - 1)"
    },
    {
        "line": 102,
        "fullcodeline": "uidx++;"
    },
    {
        "line": 103,
        "fullcodeline": "++j;"
    },
    {
        "line": 154,
        "fullcodeline": "if (c == '\\r' || c == '\\n')"
    },
    {
        "line": 156,
        "fullcodeline": "parseSucceeded = true;"
    },
    {
        "line": 175,
        "fullcodeline": "CurRequest[j+9]  == 'e'  && CurRequest[j+10] == 'n' &&"
    },
    {
        "line": 174,
        "fullcodeline": "(CurRequest[j+8] == 'L' || CurRequest[j+8]   == 'l') &&"
    },
    {
        "line": 73,
        "fullcodeline": "if (strstr(CmdName,\"PLAY\")      != nullptr) m_RtspCmdType = RTSP_PLAY; else"
    },
    {
        "line": 173,
        "fullcodeline": "CurRequest[j+6]  == 't'  && CurRequest[j+7]  == '-'  &&"
    },
    {
        "line": 172,
        "fullcodeline": "CurRequest[j+4]  == 'e'  && CurRequest[j+5]  == 'n'  &&"
    },
    {
        "line": 74,
        "fullcodeline": "if (strstr(CmdName,\"TEARDOWN\")  != nullptr) m_RtspCmdType = RTSP_TEARDOWN;"
    },
    {
        "line": 171,
        "fullcodeline": "CurRequest[j+2]  == 'n'  && CurRequest[j+3]  == 't'  &&"
    }
]