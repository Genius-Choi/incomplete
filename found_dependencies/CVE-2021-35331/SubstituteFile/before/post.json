[
    {
        "line": 5,
        "fullcodeline": "size_t cbBuffer = 1024;"
    },
    {
        "line": 6,
        "fullcodeline": "static char szBuffer[1024], szCopy[1024];"
    },
    {
        "line": 7,
        "fullcodeline": "char *szResult = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "list_item_t *substPtr = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "fp = fopen(filename, \"rt\");"
    },
    {
        "line": 73,
        "fullcodeline": "fclose(fp);"
    },
    {
        "line": 12,
        "fullcodeline": "if (fp != NULL) {"
    },
    {
        "line": 18,
        "fullcodeline": "sp = fopen(substitutions, \"rt\");"
    },
    {
        "line": 71,
        "fullcodeline": "list_free(&substPtr);"
    },
    {
        "line": 19,
        "fullcodeline": "if (sp != NULL) {"
    },
    {
        "line": 39,
        "fullcodeline": "int n = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "list_item_t *p = NULL;"
    },
    {
        "line": 51,
        "fullcodeline": "while (fgets(szBuffer, cbBuffer, fp) != NULL) {"
    },
    {
        "line": 33,
        "fullcodeline": "fclose(sp);"
    },
    {
        "line": 41,
        "fullcodeline": "for (p = substPtr; p != NULL; p = p->nextPtr, ++n) {"
    },
    {
        "line": 52,
        "fullcodeline": "list_item_t *p = NULL;"
    },
    {
        "line": 68,
        "fullcodeline": "printf(szBuffer);"
    },
    {
        "line": 20,
        "fullcodeline": "while (fgets(szBuffer, cbBuffer, sp) != NULL) {"
    },
    {
        "line": 42,
        "fullcodeline": "fprintf(stderr, \"% 3d '%s' => '%s'\\n\", n, p->key, p->value);"
    },
    {
        "line": 53,
        "fullcodeline": "for (p = substPtr; p != NULL; p = p->nextPtr) {"
    },
    {
        "line": 22,
        "fullcodeline": "ks = (unsigned char*)szBuffer;"
    },
    {
        "line": 24,
        "fullcodeline": "ke = ks;"
    },
    {
        "line": 26,
        "fullcodeline": "vs = ke;"
    },
    {
        "line": 28,
        "fullcodeline": "ve = vs;"
    },
    {
        "line": 30,
        "fullcodeline": "*ke = 0, *ve = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "list_insert(&substPtr, (char*)ks, (char*)vs);"
    },
    {
        "line": 54,
        "fullcodeline": "char *m = strstr(szBuffer, p->key);"
    },
    {
        "line": 23,
        "fullcodeline": "while (ks && *ks && isspace(*ks)) ++ks;"
    },
    {
        "line": 25,
        "fullcodeline": "while (ke && *ke && !isspace(*ke)) ++ke;"
    },
    {
        "line": 27,
        "fullcodeline": "while (vs && *vs && isspace(*vs)) ++vs;"
    },
    {
        "line": 29,
        "fullcodeline": "while (ve && *ve && !(*ve == '\\r' || *ve == '\\n')) ++ve;"
    },
    {
        "line": 57,
        "fullcodeline": "cp = szCopy;"
    },
    {
        "line": 58,
        "fullcodeline": "op = szBuffer;"
    },
    {
        "line": 60,
        "fullcodeline": "sp = p->value;"
    },
    {
        "line": 62,
        "fullcodeline": "op += strlen(p->key);"
    },
    {
        "line": 64,
        "fullcodeline": "*cp = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "memcpy(szBuffer, szCopy, sizeof(szCopy));"
    },
    {
        "line": 59,
        "fullcodeline": "while (op != m) *cp++ = *op++;"
    },
    {
        "line": 61,
        "fullcodeline": "while (sp && *sp) *cp++ = *sp++;"
    },
    {
        "line": 63,
        "fullcodeline": "while (*op) *cp++ = *op++;"
    }
]