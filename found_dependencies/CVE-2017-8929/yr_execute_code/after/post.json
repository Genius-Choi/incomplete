[
    {
        "line": 7,
        "fullcodeline": "int64_t mem[MEM_SIZE];"
    },
    {
        "line": 8,
        "fullcodeline": "int32_t sp = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "uint8_t* ip = rules->code_start;"
    },
    {
        "line": 11,
        "fullcodeline": "YR_VALUE args[MAX_FUNCTION_ARGS];"
    },
    {
        "line": 33,
        "fullcodeline": "int result = ERROR_SUCCESS;"
    },
    {
        "line": 34,
        "fullcodeline": "int stop = FALSE;"
    },
    {
        "line": 35,
        "fullcodeline": "int cycle = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "int tidx = context->tidx;"
    },
    {
        "line": 43,
        "fullcodeline": "yr_get_configuration(YR_CONFIG_STACK_SIZE, (void*) &stack_size);"
    },
    {
        "line": 45,
        "fullcodeline": "stack = (YR_VALUE*) yr_malloc(stack_size * sizeof(YR_VALUE));"
    },
    {
        "line": 50,
        "fullcodeline": "FAIL_ON_ERROR_WITH_CLEANUP("
    },
    {
        "line": 1009,
        "fullcodeline": "obj_ptr = (YR_OBJECT**) yr_arena_base_address(obj_arena);"
    },
    {
        "line": 1019,
        "fullcodeline": "yr_arena_destroy(obj_arena);"
    },
    {
        "line": 1020,
        "fullcodeline": "yr_modules_unload_all(context);"
    },
    {
        "line": 1021,
        "fullcodeline": "yr_free(stack);"
    },
    {
        "line": 47,
        "fullcodeline": "if (stack == NULL)"
    },
    {
        "line": 51,
        "fullcodeline": "yr_arena_create(1024, 0, &obj_arena),"
    },
    {
        "line": 52,
        "fullcodeline": "yr_free(stack));"
    },
    {
        "line": 54,
        "fullcodeline": "while(!stop)"
    },
    {
        "line": 1011,
        "fullcodeline": "while (obj_ptr != NULL)"
    },
    {
        "line": 1006,
        "fullcodeline": "ip++;"
    },
    {
        "line": 1015,
        "fullcodeline": "obj_ptr = (YR_OBJECT**) yr_arena_next_address("
    },
    {
        "line": 986,
        "fullcodeline": "if (timeout > 0)  // timeout == 0 means no timeout"
    },
    {
        "line": 62,
        "fullcodeline": "assert(sp == 0); // When HALT is reached the stack should be empty."
    },
    {
        "line": 63,
        "fullcodeline": "stop = TRUE;"
    },
    {
        "line": 68,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 69,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 73,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 78,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 79,
        "fullcodeline": "mem[r1.i] = 0;"
    },
    {
        "line": 84,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 85,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 92,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 93,
        "fullcodeline": "mem[r1.i]++;"
    },
    {
        "line": 98,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 99,
        "fullcodeline": "r1.i = mem[r1.i];"
    },
    {
        "line": 100,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 105,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 106,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 107,
        "fullcodeline": "mem[r1.i] = r2.i;"
    },
    {
        "line": 112,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 113,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 127,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 128,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 130,
        "fullcodeline": "ip = jmp_if(!is_undef(r1), ip);"
    },
    {
        "line": 134,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 135,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 136,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 137,
        "fullcodeline": "push(r2);"
    },
    {
        "line": 139,
        "fullcodeline": "ip = jmp_if(r1.i <= r2.i, ip);"
    },
    {
        "line": 143,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 144,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 146,
        "fullcodeline": "ip = jmp_if(!is_undef(r1) && r1.i, ip);"
    },
    {
        "line": 150,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 151,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 153,
        "fullcodeline": "ip = jmp_if(is_undef(r1) || !r1.i, ip);"
    },
    {
        "line": 157,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 158,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 165,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 169,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 170,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 188,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 195,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 199,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 200,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 201,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 202,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 207,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 211,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 212,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 213,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 214,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 215,
        "fullcodeline": "r1.i = r1.i >> r2.i;"
    },
    {
        "line": 216,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 220,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 221,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 222,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 223,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 224,
        "fullcodeline": "r1.i = r1.i << r2.i;"
    },
    {
        "line": 225,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 229,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 230,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 231,
        "fullcodeline": "r1.i = ~r1.i;"
    },
    {
        "line": 232,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 236,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 237,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 238,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 239,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 240,
        "fullcodeline": "r1.i = r1.i & r2.i;"
    },
    {
        "line": 241,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 245,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 246,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 247,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 248,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 249,
        "fullcodeline": "r1.i = r1.i | r2.i;"
    },
    {
        "line": 250,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 254,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 255,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 256,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 257,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 258,
        "fullcodeline": "r1.i = r1.i ^ r2.i;"
    },
    {
        "line": 259,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 264,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 265,
        "fullcodeline": "r1.i = rule->t_flags[tidx] & RULE_TFLAGS_MATCH ? 1 : 0;"
    },
    {
        "line": 266,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 273,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 277,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 279,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 291,
        "fullcodeline": "assert(sp == 0);"
    },
    {
        "line": 296,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 298,
        "fullcodeline": "r1.o = (YR_OBJECT*) yr_hash_table_lookup("
    },
    {
        "line": 303,
        "fullcodeline": "assert(r1.o != NULL);"
    },
    {
        "line": 304,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 309,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 311,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 312,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 314,
        "fullcodeline": "r1.o = yr_object_lookup_field(r1.o, identifier);"
    },
    {
        "line": 316,
        "fullcodeline": "assert(r1.o != NULL);"
    },
    {
        "line": 317,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 321,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 322,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 348,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 352,
        "fullcodeline": "pop(r1);  // index"
    },
    {
        "line": 353,
        "fullcodeline": "pop(r2);  // array"
    },
    {
        "line": 355,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 356,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 357,
        "fullcodeline": "assert(r2.o->type == OBJECT_TYPE_ARRAY);"
    },
    {
        "line": 359,
        "fullcodeline": "r1.o = yr_object_array_get_item(r2.o, 0, (int) r1.i);"
    },
    {
        "line": 364,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 368,
        "fullcodeline": "pop(r1);  // key"
    },
    {
        "line": 369,
        "fullcodeline": "pop(r2);  // dictionary"
    },
    {
        "line": 371,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 372,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 373,
        "fullcodeline": "assert(r2.o->type == OBJECT_TYPE_DICTIONARY);"
    },
    {
        "line": 375,
        "fullcodeline": "r1.o = yr_object_dict_get_item("
    },
    {
        "line": 381,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 386,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 388,
        "fullcodeline": "i = (int) strlen(args_fmt);"
    },
    {
        "line": 389,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 404,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 405,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 417,
        "fullcodeline": "function = (YR_OBJECT_FUNCTION*) r2.o;"
    },
    {
        "line": 418,
        "fullcodeline": "result = ERROR_INTERNAL_FATAL_ERROR;"
    },
    {
        "line": 435,
        "fullcodeline": "assert(i < MAX_OVERLOADED_FUNCTIONS);"
    },
    {
        "line": 450,
        "fullcodeline": "stop = (result != ERROR_SUCCESS);"
    },
    {
        "line": 451,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 455,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 456,
        "fullcodeline": "r1.i = r1.s->matches[tidx].tail != NULL ? 1 : 0;"
    },
    {
        "line": 457,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 461,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 462,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 472,
        "fullcodeline": "r3.i = FALSE;"
    },
    {
        "line": 488,
        "fullcodeline": "push(r3);"
    },
    {
        "line": 492,
        "fullcodeline": "pop(r3);"
    },
    {
        "line": 493,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 494,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 496,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 497,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 500,
        "fullcodeline": "r3.i = FALSE;"
    },
    {
        "line": 516,
        "fullcodeline": "push(r3);"
    },
    {
        "line": 520,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 522,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 526,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 527,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 529,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 532,
        "fullcodeline": "i = 1;"
    },
    {
        "line": 533,
        "fullcodeline": "r3.i = UNDEFINED;"
    },
    {
        "line": 544,
        "fullcodeline": "push(r3);"
    },
    {
        "line": 548,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 549,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 551,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 554,
        "fullcodeline": "i = 1;"
    },
    {
        "line": 555,
        "fullcodeline": "r3.i = UNDEFINED;"
    },
    {
        "line": 566,
        "fullcodeline": "push(r3);"
    },
    {
        "line": 570,
        "fullcodeline": "found = 0;"
    },
    {
        "line": 571,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 572,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 582,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 589,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 593,
        "fullcodeline": "r1.i = context->file_size;"
    },
    {
        "line": 594,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 598,
        "fullcodeline": "r1.i = context->entry_point;"
    },
    {
        "line": 599,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 603,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 604,
        "fullcodeline": "r1.i = read_int8_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 605,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 609,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 610,
        "fullcodeline": "r1.i = read_int16_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 611,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 615,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 616,
        "fullcodeline": "r1.i = read_int32_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 617,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 621,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 622,
        "fullcodeline": "r1.i = read_uint8_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 623,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 627,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 628,
        "fullcodeline": "r1.i = read_uint16_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 629,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 633,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 634,
        "fullcodeline": "r1.i = read_uint32_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 635,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 639,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 640,
        "fullcodeline": "r1.i = read_int8_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 641,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 645,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 646,
        "fullcodeline": "r1.i = read_int16_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 647,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 651,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 652,
        "fullcodeline": "r1.i = read_int32_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 653,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 657,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 658,
        "fullcodeline": "r1.i = read_uint8_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 659,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 663,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 664,
        "fullcodeline": "r1.i = read_uint16_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 665,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 669,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 670,
        "fullcodeline": "r1.i = read_uint32_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 671,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 675,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 676,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 678,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 679,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 681,
        "fullcodeline": "r1.i = memmem(r1.ss->c_string, r1.ss->length,"
    },
    {
        "line": 683,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 688,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 690,
        "fullcodeline": "result = yr_modules_load((char*) r1.p, context);"
    },
    {
        "line": 699,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 700,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 702,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 703,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 712,
        "fullcodeline": "result = yr_re_exec("
    },
    {
        "line": 725,
        "fullcodeline": "r1.i = found >= 0;"
    },
    {
        "line": 726,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 731,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 732,
        "fullcodeline": "r2 = stack[sp - r1.i];"
    },
    {
        "line": 740,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 741,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 742,
        "fullcodeline": "r1.i = r1.ss->length > 0;"
    },
    {
        "line": 743,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 747,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 748,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 749,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 750,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 751,
        "fullcodeline": "r1.i = r1.i == r2.i;"
    },
    {
        "line": 752,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 756,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 757,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 758,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 759,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 760,
        "fullcodeline": "r1.i = r1.i != r2.i;"
    },
    {
        "line": 761,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 765,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 766,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 767,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 768,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 769,
        "fullcodeline": "r1.i = r1.i < r2.i;"
    },
    {
        "line": 770,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 774,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 775,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 776,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 777,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 778,
        "fullcodeline": "r1.i = r1.i > r2.i;"
    },
    {
        "line": 779,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 783,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 784,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 785,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 786,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 787,
        "fullcodeline": "r1.i = r1.i <= r2.i;"
    },
    {
        "line": 788,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 792,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 793,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 794,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 795,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 796,
        "fullcodeline": "r1.i = r1.i >= r2.i;"
    },
    {
        "line": 797,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 801,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 802,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 803,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 804,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 805,
        "fullcodeline": "r1.i = r1.i + r2.i;"
    },
    {
        "line": 806,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 810,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 811,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 812,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 813,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 814,
        "fullcodeline": "r1.i = r1.i - r2.i;"
    },
    {
        "line": 815,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 819,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 820,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 821,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 822,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 823,
        "fullcodeline": "r1.i = r1.i * r2.i;"
    },
    {
        "line": 824,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 828,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 829,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 830,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 831,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 836,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 840,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 841,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 842,
        "fullcodeline": "r1.i = -r1.i;"
    },
    {
        "line": 843,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 847,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 848,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 849,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 850,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 851,
        "fullcodeline": "r1.i = r1.d < r2.d;"
    },
    {
        "line": 852,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 856,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 857,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 858,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 859,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 860,
        "fullcodeline": "r1.i = r1.d > r2.d;"
    },
    {
        "line": 861,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 865,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 866,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 867,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 868,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 869,
        "fullcodeline": "r1.i = r1.d <= r2.d;"
    },
    {
        "line": 870,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 874,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 875,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 876,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 877,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 878,
        "fullcodeline": "r1.i = r1.d >= r2.d;"
    },
    {
        "line": 879,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 883,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 884,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 885,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 886,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 887,
        "fullcodeline": "r1.i = r1.d == r2.d;"
    },
    {
        "line": 888,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 892,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 893,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 894,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 895,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 896,
        "fullcodeline": "r1.i = r1.d != r2.d;"
    },
    {
        "line": 897,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 901,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 902,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 903,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 904,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 905,
        "fullcodeline": "r1.d = r1.d + r2.d;"
    },
    {
        "line": 906,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 910,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 911,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 912,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 913,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 914,
        "fullcodeline": "r1.d = r1.d - r2.d;"
    },
    {
        "line": 915,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 919,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 920,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 921,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 922,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 923,
        "fullcodeline": "r1.d = r1.d * r2.d;"
    },
    {
        "line": 924,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 928,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 929,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 930,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 931,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 932,
        "fullcodeline": "r1.d = r1.d / r2.d;"
    },
    {
        "line": 933,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 937,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 938,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 939,
        "fullcodeline": "r1.d = -r1.d;"
    },
    {
        "line": 940,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 950,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 951,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 953,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 954,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 978,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 983,
        "fullcodeline": "assert(FALSE);"
    },
    {
        "line": 86,
        "fullcodeline": "if (!is_undef(r2))"
    },
    {
        "line": 115,
        "fullcodeline": "if (is_undef(r2))"
    },
    {
        "line": 160,
        "fullcodeline": "if (is_undef(r1) || is_undef(r2))"
    },
    {
        "line": 172,
        "fullcodeline": "if (is_undef(r1))"
    },
    {
        "line": 190,
        "fullcodeline": "if (is_undef(r1))"
    },
    {
        "line": 203,
        "fullcodeline": "if (r2.i != 0)"
    },
    {
        "line": 281,
        "fullcodeline": "if (!is_undef(r1) && r1.i)"
    },
    {
        "line": 361,
        "fullcodeline": "if (r1.o == NULL)"
    },
    {
        "line": 378,
        "fullcodeline": "if (r1.o == NULL)"
    },
    {
        "line": 393,
        "fullcodeline": "while (i > 0)"
    },
    {
        "line": 407,
        "fullcodeline": "if (count > 0)"
    },
    {
        "line": 420,
        "fullcodeline": "for (i = 0; i < MAX_OVERLOADED_FUNCTIONS; i++)"
    },
    {
        "line": 441,
        "fullcodeline": "if (result == ERROR_SUCCESS)"
    },
    {
        "line": 447,
        "fullcodeline": "if (result == ERROR_SUCCESS)"
    },
    {
        "line": 464,
        "fullcodeline": "if (is_undef(r1))"
    },
    {
        "line": 474,
        "fullcodeline": "while (match != NULL)"
    },
    {
        "line": 502,
        "fullcodeline": "while (match != NULL && !r3.i)"
    },
    {
        "line": 535,
        "fullcodeline": "while (match != NULL && r3.i == UNDEFINED)"
    },
    {
        "line": 557,
        "fullcodeline": "while (match != NULL && r3.i == UNDEFINED)"
    },
    {
        "line": 574,
        "fullcodeline": "while (!is_undef(r1))"
    },
    {
        "line": 584,
        "fullcodeline": "if (is_undef(r2))"
    },
    {
        "line": 692,
        "fullcodeline": "if (result != ERROR_SUCCESS)"
    },
    {
        "line": 705,
        "fullcodeline": "if (r1.ss->length == 0)"
    },
    {
        "line": 722,
        "fullcodeline": "if (result != ERROR_SUCCESS)"
    },
    {
        "line": 733,
        "fullcodeline": "if (is_undef(r2))"
    },
    {
        "line": 832,
        "fullcodeline": "if (r2.i != 0)"
    },
    {
        "line": 990,
        "fullcodeline": "if (++cycle == 10)"
    },
    {
        "line": 67,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 77,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 83,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 87,
        "fullcodeline": "mem[r1.i] += r2.i;"
    },
    {
        "line": 91,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 97,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 104,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 111,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 117,
        "fullcodeline": "r1.i = mem[r1.i];"
    },
    {
        "line": 118,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 161,
        "fullcodeline": "r1.i = 0;"
    },
    {
        "line": 174,
        "fullcodeline": "push(r2);"
    },
    {
        "line": 191,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 204,
        "fullcodeline": "r1.i = r1.i % r2.i;"
    },
    {
        "line": 263,
        "fullcodeline": "rule = *(YR_RULE**)(ip + 1);"
    },
    {
        "line": 278,
        "fullcodeline": "rule = *(YR_RULE**)(ip + 1);"
    },
    {
        "line": 282,
        "fullcodeline": "rule->t_flags[tidx] |= RULE_TFLAGS_MATCH;"
    },
    {
        "line": 295,
        "fullcodeline": "identifier = *(char**)(ip + 1);"
    },
    {
        "line": 308,
        "fullcodeline": "identifier = *(char**)(ip + 1);"
    },
    {
        "line": 345,
        "fullcodeline": "assert(FALSE);"
    },
    {
        "line": 362,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 379,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 385,
        "fullcodeline": "args_fmt = *(char**)(ip + 1);"
    },
    {
        "line": 395,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 400,
        "fullcodeline": "args[i - 1] = r1;"
    },
    {
        "line": 401,
        "fullcodeline": "i--;"
    },
    {
        "line": 412,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 413,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 442,
        "fullcodeline": "result = yr_object_copy(function->return_obj, &r1.o);"
    },
    {
        "line": 448,
        "fullcodeline": "result = yr_arena_write_data(obj_arena, &r1.o, sizeof(r1.o), NULL);"
    },
    {
        "line": 466,
        "fullcodeline": "r1.i = 0;"
    },
    {
        "line": 467,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 485,
        "fullcodeline": "match = match->next;"
    },
    {
        "line": 513,
        "fullcodeline": "match = match->next;"
    },
    {
        "line": 540,
        "fullcodeline": "i++;"
    },
    {
        "line": 541,
        "fullcodeline": "match = match->next;"
    },
    {
        "line": 562,
        "fullcodeline": "i++;"
    },
    {
        "line": 563,
        "fullcodeline": "match = match->next;"
    },
    {
        "line": 578,
        "fullcodeline": "count++;"
    },
    {
        "line": 579,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 585,
        "fullcodeline": "r1.i = found >= count ? 1 : 0;"
    },
    {
        "line": 687,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 693,
        "fullcodeline": "stop = TRUE;"
    },
    {
        "line": 707,
        "fullcodeline": "r1.i = FALSE;"
    },
    {
        "line": 708,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 714,
        "fullcodeline": "(uint8_t*) r1.ss->c_string,"
    },
    {
        "line": 717,
        "fullcodeline": "r2.re->flags | RE_FLAGS_SCAN,"
    },
    {
        "line": 723,
        "fullcodeline": "stop = TRUE;"
    },
    {
        "line": 730,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 734,
        "fullcodeline": "stack[sp - r1.i].i = UNDEFINED;"
    },
    {
        "line": 833,
        "fullcodeline": "r1.i = r1.i / r2.i;"
    },
    {
        "line": 959,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) == 0);"
    },
    {
        "line": 962,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) != 0);"
    },
    {
        "line": 965,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) < 0);"
    },
    {
        "line": 968,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) <= 0);"
    },
    {
        "line": 971,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) > 0);"
    },
    {
        "line": 974,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) >= 0);"
    },
    {
        "line": 1002,
        "fullcodeline": "cycle = 0;"
    },
    {
        "line": 122,
        "fullcodeline": "push(r2);"
    },
    {
        "line": 163,
        "fullcodeline": "r1.i = r1.i && r2.i;"
    },
    {
        "line": 193,
        "fullcodeline": "r1.i= !r1.i;"
    },
    {
        "line": 206,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 338,
        "fullcodeline": "if (((YR_OBJECT_STRING*) r1.o)->value == NULL)"
    },
    {
        "line": 397,
        "fullcodeline": "if (is_undef(r1))  // count the number of undefined args"
    },
    {
        "line": 422,
        "fullcodeline": "if (function->prototypes[i].arguments_fmt == NULL)"
    },
    {
        "line": 425,
        "fullcodeline": "if (strcmp(function->prototypes[i].arguments_fmt, args_fmt) == 0)"
    },
    {
        "line": 476,
        "fullcodeline": "if (r1.i == match->base + match->offset)"
    },
    {
        "line": 482,
        "fullcodeline": "if (r1.i < match->base + match->offset)"
    },
    {
        "line": 504,
        "fullcodeline": "if (match->base + match->offset >= r1.i &&"
    },
    {
        "line": 510,
        "fullcodeline": "if (match->base + match->offset > r2.i)"
    },
    {
        "line": 537,
        "fullcodeline": "if (r1.i == i)"
    },
    {
        "line": 559,
        "fullcodeline": "if (r1.i == i)"
    },
    {
        "line": 576,
        "fullcodeline": "if (r1.s->matches[tidx].tail != NULL)"
    },
    {
        "line": 587,
        "fullcodeline": "r1.i = found >= r2.i ? 1 : 0;"
    },
    {
        "line": 736,
        "fullcodeline": "stack[sp - r1.i].d = (double) r2.i;"
    },
    {
        "line": 835,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 992,
        "fullcodeline": "if (difftime(time(NULL), start_time) > timeout)"
    },
    {
        "line": 176,
        "fullcodeline": "else if (is_undef(r2))"
    },
    {
        "line": 283,
        "fullcodeline": "else if (RULE_IS_GLOBAL(rule))"
    },
    {
        "line": 327,
        "fullcodeline": "r1.i = ((YR_OBJECT_INTEGER*) r1.o)->value;"
    },
    {
        "line": 332,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 339,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 398,
        "fullcodeline": "count++;"
    },
    {
        "line": 427,
        "fullcodeline": "result = function->prototypes[i].code(args, context, function);"
    },
    {
        "line": 478,
        "fullcodeline": "r3.i = TRUE;"
    },
    {
        "line": 505,
        "fullcodeline": "match->base + match->offset <= r2.i)"
    },
    {
        "line": 507,
        "fullcodeline": "r3.i = TRUE;"
    },
    {
        "line": 538,
        "fullcodeline": "r3.i = match->base + match->offset;"
    },
    {
        "line": 560,
        "fullcodeline": "r3.i = match->match_length;"
    },
    {
        "line": 577,
        "fullcodeline": "found++;"
    },
    {
        "line": 998,
        "fullcodeline": "result = ERROR_SCAN_TIMEOUT;"
    },
    {
        "line": 999,
        "fullcodeline": "stop = TRUE;"
    },
    {
        "line": 178,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 284,
        "fullcodeline": "rule->ns->t_flags[tidx] |= NAMESPACE_TFLAGS_UNSATISFIED_GLOBAL;"
    },
    {
        "line": 331,
        "fullcodeline": "if (isnan(((YR_OBJECT_DOUBLE*) r1.o)->value))"
    },
    {
        "line": 334,
        "fullcodeline": "r1.d = ((YR_OBJECT_DOUBLE*) r1.o)->value;"
    },
    {
        "line": 341,
        "fullcodeline": "r1.p = ((YR_OBJECT_STRING*) r1.o)->value;"
    },
    {
        "line": 182,
        "fullcodeline": "r1.i = r1.i || r2.i;"
    },
    {
        "line": 183,
        "fullcodeline": "push(r1);"
    }
]