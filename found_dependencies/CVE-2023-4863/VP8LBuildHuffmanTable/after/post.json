[
    {
        "line": 3,
        "fullcodeline": "const int total_size ="
    },
    {
        "line": 5,
        "fullcodeline": "assert(code_lengths_size <= MAX_CODE_LENGTHS_SIZE);"
    },
    {
        "line": 4,
        "fullcodeline": "BuildHuffmanTable(NULL, root_bits, code_lengths, code_lengths_size, NULL);"
    },
    {
        "line": 6,
        "fullcodeline": "if (total_size == 0 || root_table == NULL) return total_size;"
    },
    {
        "line": 8,
        "fullcodeline": "if (root_table->curr_segment->curr_table + total_size >="
    },
    {
        "line": 34,
        "fullcodeline": "if (code_lengths_size <= SORTED_SIZE_CUTOFF) {"
    },
    {
        "line": 14,
        "fullcodeline": "struct HuffmanTablesSegment* next ="
    },
    {
        "line": 21,
        "fullcodeline": "next->size = total_size > segment_size ? total_size : segment_size;"
    },
    {
        "line": 22,
        "fullcodeline": "next->start ="
    },
    {
        "line": 28,
        "fullcodeline": "next->curr_table = next->start;"
    },
    {
        "line": 29,
        "fullcodeline": "next->next = NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "root_table->curr_segment->next = next;"
    },
    {
        "line": 32,
        "fullcodeline": "root_table->curr_segment = next;"
    },
    {
        "line": 36,
        "fullcodeline": "uint16_t sorted[SORTED_SIZE_CUTOFF];"
    },
    {
        "line": 37,
        "fullcodeline": "BuildHuffmanTable(root_table->curr_segment->curr_table, root_bits,"
    },
    {
        "line": 15,
        "fullcodeline": "(HuffmanTablesSegment*)WebPSafeMalloc(1, sizeof(*next));"
    },
    {
        "line": 16,
        "fullcodeline": "if (next == NULL) return 0;"
    },
    {
        "line": 23,
        "fullcodeline": "(HuffmanCode*)WebPSafeMalloc(next->size, sizeof(*next->start));"
    },
    {
        "line": 24,
        "fullcodeline": "if (next->start == NULL) {"
    },
    {
        "line": 40,
        "fullcodeline": "uint16_t* const sorted ="
    },
    {
        "line": 43,
        "fullcodeline": "BuildHuffmanTable(root_table->curr_segment->curr_table, root_bits,"
    },
    {
        "line": 45,
        "fullcodeline": "WebPSafeFree(sorted);"
    },
    {
        "line": 25,
        "fullcodeline": "WebPSafeFree(next);"
    },
    {
        "line": 41,
        "fullcodeline": "(uint16_t*)WebPSafeMalloc(code_lengths_size, sizeof(*sorted));"
    },
    {
        "line": 42,
        "fullcodeline": "if (sorted == NULL) return 0;"
    }
]