[
    {
        "line": 5,
        "fullcodeline": "char_u\t**array = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "vim_memset(uep, 0, sizeof(u_entry_T));"
    },
    {
        "line": 16,
        "fullcodeline": "uep->ue_top = undo_read_4c(bi);"
    },
    {
        "line": 17,
        "fullcodeline": "uep->ue_bot = undo_read_4c(bi);"
    },
    {
        "line": 18,
        "fullcodeline": "uep->ue_lcount = undo_read_4c(bi);"
    },
    {
        "line": 19,
        "fullcodeline": "uep->ue_size = undo_read_4c(bi);"
    },
    {
        "line": 31,
        "fullcodeline": "uep->ue_array = array;"
    },
    {
        "line": 10,
        "fullcodeline": "if (uep == NULL)"
    },
    {
        "line": 20,
        "fullcodeline": "if (uep->ue_size > 0)"
    },
    {
        "line": 33,
        "fullcodeline": "for (i = 0; i < uep->ue_size; ++i)"
    },
    {
        "line": 29,
        "fullcodeline": "vim_memset(array, 0, sizeof(char_u *) * uep->ue_size);"
    },
    {
        "line": 35,
        "fullcodeline": "line_len = undo_read_4c(bi);"
    },
    {
        "line": 48,
        "fullcodeline": "array[i] = line;"
    },
    {
        "line": 22,
        "fullcodeline": "if (uep->ue_size < LONG_MAX / (int)sizeof(char_u *))"
    },
    {
        "line": 24,
        "fullcodeline": "if (array == NULL)"
    },
    {
        "line": 36,
        "fullcodeline": "if (line_len >= 0)"
    },
    {
        "line": 43,
        "fullcodeline": "if (line == NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "array = (char_u **)U_ALLOC_LINE(sizeof(char_u *) * uep->ue_size);"
    },
    {
        "line": 26,
        "fullcodeline": "*error = TRUE;"
    },
    {
        "line": 37,
        "fullcodeline": "line = read_string_decrypt(bi, line_len);"
    },
    {
        "line": 45,
        "fullcodeline": "*error = TRUE;"
    },
    {
        "line": 40,
        "fullcodeline": "line = NULL;"
    },
    {
        "line": 41,
        "fullcodeline": "corruption_error(\"line length\", file_name);"
    }
]