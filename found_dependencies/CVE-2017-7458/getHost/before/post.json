[
    {
        "line": 4,
        "fullcodeline": "Host *h = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "if((inet_pton(AF_INET, (const char*)host_ip, &a4) == 0)"
    },
    {
        "line": 8,
        "fullcodeline": "&& (inet_pton(AF_INET6, (const char*)host_ip, &a6) == 0)) {"
    },
    {
        "line": 12,
        "fullcodeline": "memset(&info, 0, sizeof(info));"
    },
    {
        "line": 13,
        "fullcodeline": "info.host_to_find = host_ip, info.vlan_id = vlan_id;"
    },
    {
        "line": 14,
        "fullcodeline": "walker(walker_hosts, find_host_by_name, (void*)&info);"
    },
    {
        "line": 16,
        "fullcodeline": "h = info.h;"
    },
    {
        "line": 18,
        "fullcodeline": "IpAddress *ip = new IpAddress();"
    },
    {
        "line": 21,
        "fullcodeline": "ip->set(host_ip);"
    },
    {
        "line": 32,
        "fullcodeline": "delete ip;"
    },
    {
        "line": 23,
        "fullcodeline": "if(!isView())"
    },
    {
        "line": 24,
        "fullcodeline": "h = hosts_hash->get(vlan_id, ip);"
    },
    {
        "line": 26,
        "fullcodeline": "for(u_int8_t s = 0; s<numSubInterfaces; s++) {"
    },
    {
        "line": 27,
        "fullcodeline": "h = subInterfaces[s]->get_hosts_hash()->get(vlan_id, ip);"
    }
]