[
    {
        "line": 7,
        "fullcodeline": "char_u\ttword[MAXWLEN];\t    // good word collected so far"
    },
    {
        "line": 8,
        "fullcodeline": "trystate_T\tstack[MAXWLEN];"
    },
    {
        "line": 9,
        "fullcodeline": "char_u\tpreword[MAXWLEN * 3]; // word found with proper case;"
    },
    {
        "line": 14,
        "fullcodeline": "char_u\tcompflags[MAXWLEN];\t// compound flags, one for each word"
    },
    {
        "line": 22,
        "fullcodeline": "int\t\tn = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "int\t\tfl = 0, tl;"
    },
    {
        "line": 30,
        "fullcodeline": "int\t\trepextra = 0;\t    // extra bytes in fword[] from REP item"
    },
    {
        "line": 31,
        "fullcodeline": "slang_T\t*slang = lp->lp_slang;"
    },
    {
        "line": 38,
        "fullcodeline": "int\t\tbreakcheckcount = 1000;"
    },
    {
        "line": 45,
        "fullcodeline": "depth = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "sp = &stack[0];"
    },
    {
        "line": 47,
        "fullcodeline": "CLEAR_POINTER(sp);"
    },
    {
        "line": 48,
        "fullcodeline": "sp->ts_curi = 1;"
    },
    {
        "line": 89,
        "fullcodeline": "while (depth >= 0 && !got_int)"
    },
    {
        "line": 53,
        "fullcodeline": "byts = fbyts = slang->sl_sbyts;"
    },
    {
        "line": 54,
        "fullcodeline": "idxs = fidxs = slang->sl_sidxs;"
    },
    {
        "line": 55,
        "fullcodeline": "pbyts = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "pidxs = NULL;"
    },
    {
        "line": 57,
        "fullcodeline": "sp->ts_prefixdepth = PFD_NOPREFIX;"
    },
    {
        "line": 58,
        "fullcodeline": "sp->ts_state = STATE_START;"
    },
    {
        "line": 91,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 64,
        "fullcodeline": "fbyts = slang->sl_fbyts;"
    },
    {
        "line": 65,
        "fullcodeline": "fidxs = slang->sl_fidxs;"
    },
    {
        "line": 66,
        "fullcodeline": "pbyts = slang->sl_pbyts;"
    },
    {
        "line": 67,
        "fullcodeline": "pidxs = slang->sl_pidxs;"
    },
    {
        "line": 68,
        "fullcodeline": "if (pbyts != NULL)"
    },
    {
        "line": 98,
        "fullcodeline": "arridx = sp->ts_arridx;\t    // current node in the tree"
    },
    {
        "line": 99,
        "fullcodeline": "len = byts[arridx];\t\t    // bytes in this node"
    },
    {
        "line": 100,
        "fullcodeline": "arridx += sp->ts_curi;\t    // index of current byte"
    },
    {
        "line": 160,
        "fullcodeline": "++sp->ts_curi;\t\t// eat one NUL byte"
    },
    {
        "line": 162,
        "fullcodeline": "flags = (int)idxs[arridx];"
    },
    {
        "line": 168,
        "fullcodeline": "fword_ends = (fword[sp->ts_fidx] == NUL"
    },
    {
        "line": 172,
        "fullcodeline": "tword[sp->ts_twordlen] = NUL;"
    },
    {
        "line": 213,
        "fullcodeline": "p = NULL;"
    },
    {
        "line": 214,
        "fullcodeline": "compound_ok = TRUE;"
    },
    {
        "line": 337,
        "fullcodeline": "newscore = 0;"
    },
    {
        "line": 614,
        "fullcodeline": "su->su_badflags = sp->ts_save_badflags;"
    },
    {
        "line": 618,
        "fullcodeline": "sp->ts_state = STATE_START;"
    },
    {
        "line": 621,
        "fullcodeline": "byts = fbyts;"
    },
    {
        "line": 622,
        "fullcodeline": "idxs = fidxs;"
    },
    {
        "line": 627,
        "fullcodeline": "su->su_badflags = sp->ts_save_badflags;"
    },
    {
        "line": 636,
        "fullcodeline": "sp->ts_state = STATE_PLAIN;"
    },
    {
        "line": 642,
        "fullcodeline": "arridx = sp->ts_arridx;"
    },
    {
        "line": 803,
        "fullcodeline": "sp->ts_state = STATE_INS_PREP;"
    },
    {
        "line": 804,
        "fullcodeline": "sp->ts_curi = 1;"
    },
    {
        "line": 861,
        "fullcodeline": "n = sp->ts_arridx;"
    },
    {
        "line": 887,
        "fullcodeline": "n = sp->ts_arridx;"
    },
    {
        "line": 900,
        "fullcodeline": "n += sp->ts_curi++;"
    },
    {
        "line": 901,
        "fullcodeline": "c = byts[n];"
    },
    {
        "line": 953,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 954,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1044,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1063,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1132,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1205,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1266,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1315,
        "fullcodeline": "sp->ts_state = STATE_REP;"
    },
    {
        "line": 1322,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1381,
        "fullcodeline": "ftp = (fromto_T *)gap->ga_data + sp->ts_curi - 1;"
    },
    {
        "line": 1382,
        "fullcodeline": "fl = (int)STRLEN(ftp->ft_from);"
    },
    {
        "line": 1383,
        "fullcodeline": "tl = (int)STRLEN(ftp->ft_to);"
    },
    {
        "line": 1384,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1390,
        "fullcodeline": "mch_memmove(p, ftp->ft_from, fl);"
    },
    {
        "line": 1392,
        "fullcodeline": "sp->ts_state = STATE_REP;"
    },
    {
        "line": 1397,
        "fullcodeline": "--depth;"
    },
    {
        "line": 70,
        "fullcodeline": "byts = pbyts;"
    },
    {
        "line": 71,
        "fullcodeline": "idxs = pidxs;"
    },
    {
        "line": 72,
        "fullcodeline": "sp->ts_prefixdepth = PFD_PREFIXTREE;"
    },
    {
        "line": 73,
        "fullcodeline": "sp->ts_state = STATE_NOPREFIX;\t// try without prefix first"
    },
    {
        "line": 102,
        "fullcodeline": "if (sp->ts_prefixdepth == PFD_PREFIXTREE)"
    },
    {
        "line": 165,
        "fullcodeline": "if (flags & WF_NOSUGGEST)"
    },
    {
        "line": 207,
        "fullcodeline": "if (sp->ts_complen == sp->ts_compsplit && fword_ends"
    },
    {
        "line": 215,
        "fullcodeline": "if (sp->ts_complen > sp->ts_compsplit)"
    },
    {
        "line": 317,
        "fullcodeline": "if (!soundfold)"
    },
    {
        "line": 338,
        "fullcodeline": "if (!soundfold)\t// soundfold words don't have flags"
    },
    {
        "line": 628,
        "fullcodeline": "if (fword[sp->ts_fidx] == NUL && sp->ts_tcharlen == 0)"
    },
    {
        "line": 643,
        "fullcodeline": "if (sp->ts_curi > byts[arridx])"
    },
    {
        "line": 795,
        "fullcodeline": "if (has_mbyte && sp->ts_tcharlen > 0)"
    },
    {
        "line": 811,
        "fullcodeline": "if (fword[sp->ts_fidx] != NUL"
    },
    {
        "line": 851,
        "fullcodeline": "if (sp->ts_flags & TSF_DIDDEL)"
    },
    {
        "line": 888,
        "fullcodeline": "if (sp->ts_curi > byts[n])"
    },
    {
        "line": 908,
        "fullcodeline": "if (c != fword[sp->ts_fidx]"
    },
    {
        "line": 955,
        "fullcodeline": "if (c == NUL)"
    },
    {
        "line": 965,
        "fullcodeline": "if (!soundfold && !spell_iswordp(p, curwin))"
    },
    {
        "line": 994,
        "fullcodeline": "if (c2 == NUL)"
    },
    {
        "line": 1003,
        "fullcodeline": "if (c == c2)"
    },
    {
        "line": 1097,
        "fullcodeline": "if (TRY_DEEPER(su, stack, depth, SCORE_SWAP3))"
    },
    {
        "line": 1153,
        "fullcodeline": "if (!soundfold && !spell_iswordp(p, curwin))"
    },
    {
        "line": 1164,
        "fullcodeline": "if (TRY_DEEPER(su, stack, depth, SCORE_SWAP3))"
    },
    {
        "line": 1225,
        "fullcodeline": "if (TRY_DEEPER(su, stack, depth, SCORE_SWAP3))"
    },
    {
        "line": 1307,
        "fullcodeline": "if (sp->ts_curi < 0)"
    },
    {
        "line": 1328,
        "fullcodeline": "while (sp->ts_curi < gap->ga_len)"
    },
    {
        "line": 1385,
        "fullcodeline": "if (fl != tl)"
    },
    {
        "line": 1407,
        "fullcodeline": "if (--breakcheckcount == 0)"
    },
    {
        "line": 77,
        "fullcodeline": "byts = fbyts;"
    },
    {
        "line": 78,
        "fullcodeline": "idxs = fidxs;"
    },
    {
        "line": 79,
        "fullcodeline": "sp->ts_prefixdepth = PFD_NOPREFIX;"
    },
    {
        "line": 80,
        "fullcodeline": "sp->ts_state = STATE_START;"
    },
    {
        "line": 107,
        "fullcodeline": "sp->ts_curi += n;"
    },
    {
        "line": 110,
        "fullcodeline": "n = (int)sp->ts_state;"
    },
    {
        "line": 112,
        "fullcodeline": "sp->ts_state = STATE_ENDNUL;"
    },
    {
        "line": 113,
        "fullcodeline": "sp->ts_save_badflags = su->su_badflags;"
    },
    {
        "line": 150,
        "fullcodeline": "if (sp->ts_curi > len || byts[arridx] != 0)"
    },
    {
        "line": 154,
        "fullcodeline": "sp->ts_state = STATE_ENDNUL;"
    },
    {
        "line": 155,
        "fullcodeline": "sp->ts_save_badflags = su->su_badflags;"
    },
    {
        "line": 174,
        "fullcodeline": "if (sp->ts_prefixdepth <= PFD_NOTSPECIAL"
    },
    {
        "line": 176,
        "fullcodeline": "&& pbyts != NULL)"
    },
    {
        "line": 182,
        "fullcodeline": "n = stack[sp->ts_prefixdepth].ts_arridx;"
    },
    {
        "line": 183,
        "fullcodeline": "len = pbyts[n++];"
    },
    {
        "line": 208,
        "fullcodeline": "&& (flags & WF_NEEDCOMP))"
    },
    {
        "line": 209,
        "fullcodeline": "goodword_ends = FALSE;"
    },
    {
        "line": 352,
        "fullcodeline": "if (fword_ends"
    },
    {
        "line": 424,
        "fullcodeline": "if ((sp->ts_fidx >= sp->ts_fidxtry || fword_ends)"
    },
    {
        "line": 426,
        "fullcodeline": "&& (!has_mbyte || sp->ts_tcharlen == 0))"
    },
    {
        "line": 436,
        "fullcodeline": "try_split = (sp->ts_fidx - repextra < su->su_badlen)"
    },
    {
        "line": 451,
        "fullcodeline": "try_compound = FALSE;"
    },
    {
        "line": 632,
        "fullcodeline": "sp->ts_state = STATE_DEL;"
    },
    {
        "line": 798,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 805,
        "fullcodeline": "if (soundfold && sp->ts_fidx == 0 && fword[sp->ts_fidx] == '*')"
    },
    {
        "line": 808,
        "fullcodeline": "newscore = 2 * SCORE_DEL / 3;"
    },
    {
        "line": 812,
        "fullcodeline": "&& TRY_DEEPER(su, stack, depth, newscore))"
    },
    {
        "line": 814,
        "fullcodeline": "go_deeper(stack, depth, newscore);"
    },
    {
        "line": 820,
        "fullcodeline": "++depth;"
    },
    {
        "line": 856,
        "fullcodeline": "sp->ts_state = STATE_SWAP;"
    },
    {
        "line": 878,
        "fullcodeline": "++sp->ts_curi;"
    },
    {
        "line": 892,
        "fullcodeline": "sp->ts_state = STATE_SWAP;"
    },
    {
        "line": 902,
        "fullcodeline": "if (soundfold && sp->ts_twordlen == 0 && c == '*')"
    },
    {
        "line": 905,
        "fullcodeline": "newscore = 2 * SCORE_INS / 3;"
    },
    {
        "line": 909,
        "fullcodeline": "&& TRY_DEEPER(su, stack, depth, newscore))"
    },
    {
        "line": 911,
        "fullcodeline": "go_deeper(stack, depth, newscore);"
    },
    {
        "line": 917,
        "fullcodeline": "++depth;"
    },
    {
        "line": 918,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 919,
        "fullcodeline": "tword[sp->ts_twordlen++] = c;"
    },
    {
        "line": 920,
        "fullcodeline": "sp->ts_arridx = idxs[n];"
    },
    {
        "line": 959,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 968,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 974,
        "fullcodeline": "n = MB_CPTR2LEN(p);"
    },
    {
        "line": 975,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 997,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1006,
        "fullcodeline": "sp->ts_state = STATE_SWAP3;"
    },
    {
        "line": 1009,
        "fullcodeline": "if (c2 != NUL && TRY_DEEPER(su, stack, depth, SCORE_SWAP))"
    },
    {
        "line": 1011,
        "fullcodeline": "go_deeper(stack, depth, SCORE_SWAP);"
    },
    {
        "line": 1018,
        "fullcodeline": "sp->ts_state = STATE_UNSWAP;"
    },
    {
        "line": 1019,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1047,
        "fullcodeline": "n = mb_ptr2len(p);"
    },
    {
        "line": 1048,
        "fullcodeline": "c = mb_ptr2char(p + n);"
    },
    {
        "line": 1049,
        "fullcodeline": "mch_memmove(p + mb_ptr2len(p + n), p, n);"
    },
    {
        "line": 1066,
        "fullcodeline": "n = MB_CPTR2LEN(p);"
    },
    {
        "line": 1067,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 1068,
        "fullcodeline": "fl = MB_CPTR2LEN(p + n);"
    },
    {
        "line": 1069,
        "fullcodeline": "c2 = mb_ptr2char(p + n);"
    },
    {
        "line": 1091,
        "fullcodeline": "if (c == c3 || c3 == NUL)"
    },
    {
        "line": 1094,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1099,
        "fullcodeline": "go_deeper(stack, depth, SCORE_SWAP3);"
    },
    {
        "line": 1106,
        "fullcodeline": "sp->ts_state = STATE_UNSWAP3;"
    },
    {
        "line": 1107,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1135,
        "fullcodeline": "n = mb_ptr2len(p);"
    },
    {
        "line": 1136,
        "fullcodeline": "c2 = mb_ptr2char(p + n);"
    },
    {
        "line": 1137,
        "fullcodeline": "fl = mb_ptr2len(p + n);"
    },
    {
        "line": 1138,
        "fullcodeline": "c = mb_ptr2char(p + n + fl);"
    },
    {
        "line": 1139,
        "fullcodeline": "tl = mb_ptr2len(p + n + fl);"
    },
    {
        "line": 1140,
        "fullcodeline": "mch_memmove(p + fl + tl, p, n);"
    },
    {
        "line": 1141,
        "fullcodeline": "mb_char2bytes(c, p);"
    },
    {
        "line": 1143,
        "fullcodeline": "p = p + tl;"
    },
    {
        "line": 1158,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1166,
        "fullcodeline": "go_deeper(stack, depth, SCORE_SWAP3);"
    },
    {
        "line": 1174,
        "fullcodeline": "sp->ts_state = STATE_UNROT3L;"
    },
    {
        "line": 1175,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1176,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1208,
        "fullcodeline": "n = mb_ptr2len(p);"
    },
    {
        "line": 1209,
        "fullcodeline": "n += mb_ptr2len(p + n);"
    },
    {
        "line": 1210,
        "fullcodeline": "c = mb_ptr2char(p + n);"
    },
    {
        "line": 1211,
        "fullcodeline": "tl = mb_ptr2len(p + n);"
    },
    {
        "line": 1212,
        "fullcodeline": "mch_memmove(p + tl, p, n);"
    },
    {
        "line": 1227,
        "fullcodeline": "go_deeper(stack, depth, SCORE_SWAP3);"
    },
    {
        "line": 1235,
        "fullcodeline": "sp->ts_state = STATE_UNROT3R;"
    },
    {
        "line": 1236,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1237,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 1269,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 1270,
        "fullcodeline": "tl = mb_ptr2len(p);"
    },
    {
        "line": 1271,
        "fullcodeline": "n = mb_ptr2len(p + tl);"
    },
    {
        "line": 1272,
        "fullcodeline": "n += mb_ptr2len(p + tl + n);"
    },
    {
        "line": 1273,
        "fullcodeline": "mch_memmove(p, p + tl, n);"
    },
    {
        "line": 1291,
        "fullcodeline": "if ((lp->lp_replang == NULL && !soundfold)"
    },
    {
        "line": 1293,
        "fullcodeline": "|| sp->ts_fidx < sp->ts_fidxtry)"
    },
    {
        "line": 1296,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 1303,
        "fullcodeline": "sp->ts_curi = slang->sl_repsal_first[fword[sp->ts_fidx]];"
    },
    {
        "line": 1310,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 1325,
        "fullcodeline": "gap = &slang->sl_repsal;"
    },
    {
        "line": 1330,
        "fullcodeline": "ftp = (fromto_T *)gap->ga_data + sp->ts_curi++;"
    },
    {
        "line": 1366,
        "fullcodeline": "if (sp->ts_curi >= gap->ga_len && sp->ts_state == STATE_REP)"
    },
    {
        "line": 1370,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 1378,
        "fullcodeline": "gap = &slang->sl_repsal;"
    },
    {
        "line": 1388,
        "fullcodeline": "repextra -= tl - fl;"
    },
    {
        "line": 1399,
        "fullcodeline": "if (depth >= 0 && stack[depth].ts_prefixdepth == PFD_PREFIXTREE)"
    },
    {
        "line": 1402,
        "fullcodeline": "byts = pbyts;"
    },
    {
        "line": 1403,
        "fullcodeline": "idxs = pidxs;"
    },
    {
        "line": 1410,
        "fullcodeline": "breakcheckcount = 1000;"
    },
    {
        "line": 105,
        "fullcodeline": "for (n = 0; n < len && byts[arridx + n] == 0; ++n)"
    },
    {
        "line": 170,
        "fullcodeline": "? VIM_ISWHITE(fword[sp->ts_fidx])"
    },
    {
        "line": 171,
        "fullcodeline": ": !spell_iswordp(fword + sp->ts_fidx, curwin)));"
    },
    {
        "line": 175,
        "fullcodeline": "&& (sp->ts_flags & TSF_PREFIXOK) == 0"
    },
    {
        "line": 184,
        "fullcodeline": "for (c = 0; c < len && pbyts[n + c] == 0; ++c)"
    },
    {
        "line": 186,
        "fullcodeline": "if (c > 0)"
    },
    {
        "line": 211,
        "fullcodeline": "goodword_ends = TRUE;"
    },
    {
        "line": 321,
        "fullcodeline": "if (flags & WF_BANNED)"
    },
    {
        "line": 343,
        "fullcodeline": "if (flags & WF_RARE)"
    },
    {
        "line": 354,
        "fullcodeline": "&& sp->ts_fidx >= sp->ts_fidxtry"
    },
    {
        "line": 476,
        "fullcodeline": "if (slang->sl_nobreak && !slang->sl_nocompoundsugs)"
    },
    {
        "line": 494,
        "fullcodeline": "if (try_split || try_compound)"
    },
    {
        "line": 648,
        "fullcodeline": "if (sp->ts_fidx >= sp->ts_fidxtry)"
    },
    {
        "line": 656,
        "fullcodeline": "c = byts[arridx];"
    },
    {
        "line": 810,
        "fullcodeline": "newscore = SCORE_DEL;"
    },
    {
        "line": 864,
        "fullcodeline": "if (sp->ts_curi > byts[n])"
    },
    {
        "line": 871,
        "fullcodeline": "if (byts[n + sp->ts_curi] != NUL)"
    },
    {
        "line": 907,
        "fullcodeline": "newscore = SCORE_INS;"
    },
    {
        "line": 936,
        "fullcodeline": "if (fl == 1)"
    },
    {
        "line": 976,
        "fullcodeline": "if (p[n] == NUL)"
    },
    {
        "line": 1038,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1054,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1055,
        "fullcodeline": "*p = p[1];"
    },
    {
        "line": 1056,
        "fullcodeline": "p[1] = c;"
    },
    {
        "line": 1070,
        "fullcodeline": "if (!soundfold && !spell_iswordp(p + n + fl, curwin))"
    },
    {
        "line": 1077,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1078,
        "fullcodeline": "c2 = p[1];"
    },
    {
        "line": 1126,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1147,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1148,
        "fullcodeline": "*p = p[2];"
    },
    {
        "line": 1149,
        "fullcodeline": "p[2] = c;"
    },
    {
        "line": 1150,
        "fullcodeline": "++p;"
    },
    {
        "line": 1199,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1217,
        "fullcodeline": "c = p[2];"
    },
    {
        "line": 1218,
        "fullcodeline": "p[2] = p[1];"
    },
    {
        "line": 1219,
        "fullcodeline": "p[1] = *p;"
    },
    {
        "line": 1220,
        "fullcodeline": "*p = c;"
    },
    {
        "line": 1260,
        "fullcodeline": "sp->ts_state = STATE_REP_INI;"
    },
    {
        "line": 1278,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1279,
        "fullcodeline": "*p = p[1];"
    },
    {
        "line": 1280,
        "fullcodeline": "p[1] = p[2];"
    },
    {
        "line": 1281,
        "fullcodeline": "p[2] = c;"
    },
    {
        "line": 1292,
        "fullcodeline": "|| sp->ts_score + SCORE_REP >= su->su_maxscore"
    },
    {
        "line": 1305,
        "fullcodeline": "sp->ts_curi = lp->lp_replang->sl_rep_first[fword[sp->ts_fidx]];"
    },
    {
        "line": 1327,
        "fullcodeline": "gap = &lp->lp_replang->sl_rep;"
    },
    {
        "line": 1331,
        "fullcodeline": "if (*ftp->ft_from != *p)"
    },
    {
        "line": 1380,
        "fullcodeline": "gap = &lp->lp_replang->sl_rep;"
    },
    {
        "line": 117,
        "fullcodeline": "if (byts[arridx] == 0 || n == (int)STATE_NOPREFIX)"
    },
    {
        "line": 125,
        "fullcodeline": "flags = badword_captype(su->su_badptr, su->su_badptr + n);"
    },
    {
        "line": 126,
        "fullcodeline": "su->su_badflags = badword_captype(su->su_badptr + n,"
    },
    {
        "line": 131,
        "fullcodeline": "go_deeper(stack, depth, 0);"
    },
    {
        "line": 132,
        "fullcodeline": "++depth;"
    },
    {
        "line": 133,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 134,
        "fullcodeline": "sp->ts_prefixdepth = depth - 1;"
    },
    {
        "line": 135,
        "fullcodeline": "byts = fbyts;"
    },
    {
        "line": 136,
        "fullcodeline": "idxs = fidxs;"
    },
    {
        "line": 137,
        "fullcodeline": "sp->ts_arridx = 0;"
    },
    {
        "line": 141,
        "fullcodeline": "tword[sp->ts_twordlen] = NUL;"
    },
    {
        "line": 144,
        "fullcodeline": "sp->ts_prewordlen = (char_u)STRLEN(preword);"
    },
    {
        "line": 145,
        "fullcodeline": "sp->ts_splitoff = sp->ts_twordlen;"
    },
    {
        "line": 188,
        "fullcodeline": "c = valid_word_prefix(c, n, flags,"
    },
    {
        "line": 201,
        "fullcodeline": "sp->ts_flags |= TSF_PREFIXOK;"
    },
    {
        "line": 294,
        "fullcodeline": "else if (flags & WF_KEEPCAP)"
    },
    {
        "line": 323,
        "fullcodeline": "add_banned(su, preword + sp->ts_prewordlen);"
    },
    {
        "line": 326,
        "fullcodeline": "if ((sp->ts_complen == sp->ts_compsplit"
    },
    {
        "line": 328,
        "fullcodeline": "|| WAS_BANNED(su, preword))"
    },
    {
        "line": 333,
        "fullcodeline": "goodword_ends = FALSE;"
    },
    {
        "line": 340,
        "fullcodeline": "if ((flags & WF_REGION)"
    },
    {
        "line": 341,
        "fullcodeline": "&& (((unsigned)flags >> 16) & lp->lp_region) == 0)"
    },
    {
        "line": 342,
        "fullcodeline": "newscore += SCORE_REGION;"
    },
    {
        "line": 344,
        "fullcodeline": "newscore += SCORE_RARE;"
    },
    {
        "line": 346,
        "fullcodeline": "if (!spell_valid_case(su->su_badflags,"
    },
    {
        "line": 348,
        "fullcodeline": "newscore += SCORE_ICASE;"
    },
    {
        "line": 373,
        "fullcodeline": "add_sound_suggest(su, preword, sp->ts_score, lp);"
    },
    {
        "line": 437,
        "fullcodeline": "&& !soundfold;"
    },
    {
        "line": 452,
        "fullcodeline": "if (!soundfold"
    },
    {
        "line": 465,
        "fullcodeline": "&& (can_be_compound(sp, slang,"
    },
    {
        "line": 469,
        "fullcodeline": "try_compound = TRUE;"
    },
    {
        "line": 470,
        "fullcodeline": "compflags[sp->ts_complen] = ((unsigned)flags >> 24);"
    },
    {
        "line": 471,
        "fullcodeline": "compflags[sp->ts_complen + 1] = NUL;"
    },
    {
        "line": 477,
        "fullcodeline": "try_compound = TRUE;"
    },
    {
        "line": 649,
        "fullcodeline": "sp->ts_state = STATE_DEL;"
    },
    {
        "line": 655,
        "fullcodeline": "arridx += sp->ts_curi++;"
    },
    {
        "line": 668,
        "fullcodeline": "if ((newscore == 0"
    },
    {
        "line": 833,
        "fullcodeline": "c = mb_ptr2char(fword + sp->ts_fidx);"
    },
    {
        "line": 834,
        "fullcodeline": "stack[depth].ts_fidx += mb_ptr2len(fword + sp->ts_fidx);"
    },
    {
        "line": 868,
        "fullcodeline": "sp->ts_state = STATE_SWAP;"
    },
    {
        "line": 875,
        "fullcodeline": "sp->ts_state = STATE_INS;"
    },
    {
        "line": 923,
        "fullcodeline": "fl = MB_BYTE2LEN(c);"
    },
    {
        "line": 977,
        "fullcodeline": "c2 = NUL;"
    },
    {
        "line": 985,
        "fullcodeline": "if (p[1] == NUL)"
    },
    {
        "line": 1022,
        "fullcodeline": "fl = mb_char2len(c2);"
    },
    {
        "line": 1023,
        "fullcodeline": "mch_memmove(p, p + n, fl);"
    },
    {
        "line": 1071,
        "fullcodeline": "c3 = c;\t// don't swap non-word char"
    },
    {
        "line": 1079,
        "fullcodeline": "if (!soundfold && !spell_iswordp(p + 2, curwin))"
    },
    {
        "line": 1110,
        "fullcodeline": "tl = mb_char2len(c3);"
    },
    {
        "line": 1111,
        "fullcodeline": "mch_memmove(p, p + n + fl, tl);"
    },
    {
        "line": 1179,
        "fullcodeline": "n = MB_CPTR2LEN(p);"
    },
    {
        "line": 1180,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 1181,
        "fullcodeline": "fl = MB_CPTR2LEN(p + n);"
    },
    {
        "line": 1182,
        "fullcodeline": "fl += MB_CPTR2LEN(p + n + fl);"
    },
    {
        "line": 1183,
        "fullcodeline": "mch_memmove(p, p + n, fl);"
    },
    {
        "line": 1240,
        "fullcodeline": "n = MB_CPTR2LEN(p);"
    },
    {
        "line": 1241,
        "fullcodeline": "n += MB_CPTR2LEN(p + n);"
    },
    {
        "line": 1242,
        "fullcodeline": "c = mb_ptr2char(p + n);"
    },
    {
        "line": 1243,
        "fullcodeline": "tl = MB_CPTR2LEN(p + n);"
    },
    {
        "line": 1244,
        "fullcodeline": "mch_memmove(p + tl, p, n);"
    },
    {
        "line": 1334,
        "fullcodeline": "sp->ts_curi = gap->ga_len;"
    },
    {
        "line": 1337,
        "fullcodeline": "if (STRNCMP(ftp->ft_from, p, STRLEN(ftp->ft_from)) == 0"
    },
    {
        "line": 1338,
        "fullcodeline": "&& TRY_DEEPER(su, stack, depth, SCORE_REP))"
    },
    {
        "line": 1340,
        "fullcodeline": "go_deeper(stack, depth, SCORE_REP);"
    },
    {
        "line": 1348,
        "fullcodeline": "sp->ts_state = STATE_REP_UNDO;"
    },
    {
        "line": 1351,
        "fullcodeline": "++depth;"
    },
    {
        "line": 1352,
        "fullcodeline": "fl = (int)STRLEN(ftp->ft_from);"
    },
    {
        "line": 1353,
        "fullcodeline": "tl = (int)STRLEN(ftp->ft_to);"
    },
    {
        "line": 1359,
        "fullcodeline": "mch_memmove(p, ftp->ft_to, tl);"
    },
    {
        "line": 190,
        "fullcodeline": "if (c == 0)"
    },
    {
        "line": 194,
        "fullcodeline": "if (c & WF_RAREPFX)"
    },
    {
        "line": 260,
        "fullcodeline": "compflags[sp->ts_complen] = ((unsigned)flags >> 24);"
    },
    {
        "line": 261,
        "fullcodeline": "compflags[sp->ts_complen + 1] = NUL;"
    },
    {
        "line": 284,
        "fullcodeline": "p = preword + sp->ts_prewordlen;"
    },
    {
        "line": 285,
        "fullcodeline": "MB_PTR_BACK(preword, p);"
    },
    {
        "line": 296,
        "fullcodeline": "find_keepcap_word(slang, tword + sp->ts_splitoff,"
    },
    {
        "line": 327,
        "fullcodeline": "&& WAS_BANNED(su, preword + sp->ts_prewordlen))"
    },
    {
        "line": 330,
        "fullcodeline": "if (slang->sl_compprog == NULL)"
    },
    {
        "line": 347,
        "fullcodeline": "captype(preword + sp->ts_prewordlen, NULL)))"
    },
    {
        "line": 462,
        "fullcodeline": "&& (slang->sl_compsylmax < MAXWLEN"
    },
    {
        "line": 466,
        "fullcodeline": "compflags, ((unsigned)flags >> 24))))"
    },
    {
        "line": 523,
        "fullcodeline": "if (TRY_DEEPER(su, stack, depth, newscore))"
    },
    {
        "line": 651,
        "fullcodeline": "sp->ts_state = STATE_FINAL;"
    },
    {
        "line": 663,
        "fullcodeline": "if (c == fword[sp->ts_fidx]"
    },
    {
        "line": 664,
        "fullcodeline": "|| (sp->ts_tcharlen > 0 && sp->ts_isdiff != DIFF_NONE))"
    },
    {
        "line": 665,
        "fullcodeline": "newscore = 0;"
    },
    {
        "line": 672,
        "fullcodeline": "&& TRY_DEEPER(su, stack, depth, newscore))"
    },
    {
        "line": 674,
        "fullcodeline": "go_deeper(stack, depth, newscore);"
    },
    {
        "line": 685,
        "fullcodeline": "++depth;"
    },
    {
        "line": 686,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 687,
        "fullcodeline": "++sp->ts_fidx;"
    },
    {
        "line": 688,
        "fullcodeline": "tword[sp->ts_twordlen++] = c;"
    },
    {
        "line": 689,
        "fullcodeline": "sp->ts_arridx = idxs[arridx];"
    },
    {
        "line": 835,
        "fullcodeline": "if (enc_utf8 && utf_iscomposing(c))"
    },
    {
        "line": 924,
        "fullcodeline": "if (fl > 1)"
    },
    {
        "line": 935,
        "fullcodeline": "fl = 1;"
    },
    {
        "line": 986,
        "fullcodeline": "c2 = NUL;"
    },
    {
        "line": 1029,
        "fullcodeline": "p[0] = c2;"
    },
    {
        "line": 1030,
        "fullcodeline": "p[1] = c;"
    },
    {
        "line": 1073,
        "fullcodeline": "c3 = mb_ptr2char(p + n + fl);"
    },
    {
        "line": 1080,
        "fullcodeline": "c3 = c;\t// don't swap non-word char"
    },
    {
        "line": 1118,
        "fullcodeline": "p[0] = p[2];"
    },
    {
        "line": 1119,
        "fullcodeline": "p[2] = c;"
    },
    {
        "line": 1189,
        "fullcodeline": "c = *p;"
    },
    {
        "line": 1190,
        "fullcodeline": "*p = p[1];"
    },
    {
        "line": 1191,
        "fullcodeline": "p[1] = p[2];"
    },
    {
        "line": 1192,
        "fullcodeline": "p[2] = c;"
    },
    {
        "line": 1250,
        "fullcodeline": "c = p[2];"
    },
    {
        "line": 1251,
        "fullcodeline": "p[2] = p[1];"
    },
    {
        "line": 1252,
        "fullcodeline": "p[1] = *p;"
    },
    {
        "line": 1253,
        "fullcodeline": "*p = c;"
    },
    {
        "line": 1354,
        "fullcodeline": "if (fl != tl)"
    },
    {
        "line": 122,
        "fullcodeline": "n = nofold_len(fword, sp->ts_fidx, su->su_badptr);"
    },
    {
        "line": 195,
        "fullcodeline": "flags |= WF_RARE;"
    },
    {
        "line": 223,
        "fullcodeline": "if (sp->ts_fidx - sp->ts_splitfidx"
    },
    {
        "line": 225,
        "fullcodeline": "&& STRNCMP(fword + sp->ts_splitfidx,"
    },
    {
        "line": 229,
        "fullcodeline": "preword[sp->ts_prewordlen] = NUL;"
    },
    {
        "line": 230,
        "fullcodeline": "newscore = score_wordcount_adj(slang, sp->ts_score,"
    },
    {
        "line": 264,
        "fullcodeline": "sp->ts_twordlen - sp->ts_splitoff);"
    },
    {
        "line": 267,
        "fullcodeline": "if (match_checkcompoundpattern(preword,  sp->ts_prewordlen,"
    },
    {
        "line": 303,
        "fullcodeline": "c = su->su_badflags;"
    },
    {
        "line": 307,
        "fullcodeline": "c |= flags;"
    },
    {
        "line": 375,
        "fullcodeline": "else if (sp->ts_fidx > 0)"
    },
    {
        "line": 458,
        "fullcodeline": "&& (!has_mbyte"
    },
    {
        "line": 463,
        "fullcodeline": "|| sp->ts_complen + 1 - sp->ts_compsplit"
    },
    {
        "line": 496,
        "fullcodeline": "if (!try_compound && (!fword_ends || !goodword_ends))"
    },
    {
        "line": 505,
        "fullcodeline": "p = preword;"
    },
    {
        "line": 519,
        "fullcodeline": "newscore = score_wordcount_adj(slang, newscore,"
    },
    {
        "line": 525,
        "fullcodeline": "go_deeper(stack, depth, newscore);"
    },
    {
        "line": 535,
        "fullcodeline": "sp->ts_save_badflags = su->su_badflags;"
    },
    {
        "line": 537,
        "fullcodeline": "sp->ts_state = STATE_SPLITUNDO;"
    },
    {
        "line": 539,
        "fullcodeline": "++depth;"
    },
    {
        "line": 540,
        "fullcodeline": "sp = &stack[depth];"
    },
    {
        "line": 545,
        "fullcodeline": "sp->ts_prewordlen = (char_u)STRLEN(preword);"
    },
    {
        "line": 546,
        "fullcodeline": "sp->ts_splitoff = sp->ts_twordlen;"
    },
    {
        "line": 547,
        "fullcodeline": "sp->ts_splitfidx = sp->ts_fidx;"
    },
    {
        "line": 584,
        "fullcodeline": "sp->ts_prefixdepth = PFD_NOPREFIX;"
    },
    {
        "line": 592,
        "fullcodeline": "su->su_badflags = badword_captype(su->su_badptr + n,"
    },
    {
        "line": 596,
        "fullcodeline": "sp->ts_arridx = 0;"
    },
    {
        "line": 667,
        "fullcodeline": "newscore = SCORE_SUBST;"
    },
    {
        "line": 669,
        "fullcodeline": "|| (sp->ts_fidx >= sp->ts_fidxtry"
    },
    {
        "line": 690,
        "fullcodeline": "if (newscore == SCORE_SUBST)"
    },
    {
        "line": 843,
        "fullcodeline": "if (fword[sp->ts_fidx] == fword[sp->ts_fidx + 1])"
    },
    {
        "line": 929,
        "fullcodeline": "sp->ts_tcharlen = fl;"
    },
    {
        "line": 930,
        "fullcodeline": "sp->ts_tcharidx = 1;"
    },
    {
        "line": 931,
        "fullcodeline": "sp->ts_isdiff = DIFF_INSERT;"
    },
    {
        "line": 942,
        "fullcodeline": "if (sp->ts_twordlen >= 2"
    },
    {
        "line": 943,
        "fullcodeline": "&& tword[sp->ts_twordlen - 2] == c)"
    },
    {
        "line": 944,
        "fullcodeline": "sp->ts_score -= SCORE_INS - SCORE_INSDUP;"
    },
    {
        "line": 978,
        "fullcodeline": "else if (!soundfold && !spell_iswordp(p + n, curwin))"
    },
    {
        "line": 1082,
        "fullcodeline": "c3 = p[2];"
    },
    {
        "line": 1357,
        "fullcodeline": "repextra += tl - fl;"
    },
    {
        "line": 124,
        "fullcodeline": "n = sp->ts_fidx;"
    },
    {
        "line": 224,
        "fullcodeline": "== sp->ts_twordlen - sp->ts_splitoff"
    },
    {
        "line": 234,
        "fullcodeline": "if (newscore <= su->su_maxscore)"
    },
    {
        "line": 248,
        "fullcodeline": "if (((unsigned)flags >> 24) == 0"
    },
    {
        "line": 249,
        "fullcodeline": "|| sp->ts_twordlen - sp->ts_splitoff"
    },
    {
        "line": 254,
        "fullcodeline": "if (has_mbyte"
    },
    {
        "line": 256,
        "fullcodeline": "&& mb_charlen(tword + sp->ts_splitoff)"
    },
    {
        "line": 269,
        "fullcodeline": "compound_ok = FALSE;"
    },
    {
        "line": 273,
        "fullcodeline": "p = preword;"
    },
    {
        "line": 379,
        "fullcodeline": "p = fword + sp->ts_fidx;"
    },
    {
        "line": 380,
        "fullcodeline": "MB_PTR_BACK(fword, p);"
    },
    {
        "line": 390,
        "fullcodeline": "score = score_wordcount_adj(slang,"
    },
    {
        "line": 456,
        "fullcodeline": "&& sp->ts_twordlen - sp->ts_splitoff"
    },
    {
        "line": 460,
        "fullcodeline": "|| mb_charlen(tword + sp->ts_splitoff)"
    },
    {
        "line": 482,
        "fullcodeline": "else if (!fword_ends"
    },
    {
        "line": 484,
        "fullcodeline": "&& (sp->ts_flags & TSF_DIDSPLIT) == 0)"
    },
    {
        "line": 486,
        "fullcodeline": "try_compound = FALSE;"
    },
    {
        "line": 487,
        "fullcodeline": "sp->ts_flags |= TSF_DIDSPLIT;"
    },
    {
        "line": 488,
        "fullcodeline": "--sp->ts_curi;\t    // do the same NUL again"
    },
    {
        "line": 489,
        "fullcodeline": "compflags[sp->ts_complen] = NUL;"
    },
    {
        "line": 502,
        "fullcodeline": "if (sp->ts_complen == sp->ts_compsplit"
    },
    {
        "line": 506,
        "fullcodeline": "while (*skiptowhite(p) != NUL)"
    },
    {
        "line": 507,
        "fullcodeline": "p = skipwhite(skiptowhite(p));"
    },
    {
        "line": 508,
        "fullcodeline": "if (sp->ts_complen > sp->ts_compsplit"
    },
    {
        "line": 599,
        "fullcodeline": "if (pbyts != NULL)"
    },
    {
        "line": 670,
        "fullcodeline": "&& ((sp->ts_flags & TSF_DIDDEL) == 0"
    },
    {
        "line": 691,
        "fullcodeline": "sp->ts_isdiff = DIFF_YES;"
    },
    {
        "line": 836,
        "fullcodeline": "stack[depth].ts_score -= SCORE_DEL - SCORE_DELCOMP;"
    },
    {
        "line": 979,
        "fullcodeline": "c2 = c; // don't swap non-word char"
    },
    {
        "line": 987,
        "fullcodeline": "else if (!soundfold && !spell_iswordp(p + 1, curwin))"
    },
    {
        "line": 227,
        "fullcodeline": "sp->ts_fidx - sp->ts_splitfidx) == 0)"
    },
    {
        "line": 232,
        "fullcodeline": "sp->ts_prewordlen > 0);"
    },
    {
        "line": 235,
        "fullcodeline": "add_suggestion(su, &su->su_ga, preword,"
    },
    {
        "line": 255,
        "fullcodeline": "&& slang->sl_compminlen > 0"
    },
    {
        "line": 274,
        "fullcodeline": "while (*skiptowhite(p) != NUL)"
    },
    {
        "line": 275,
        "fullcodeline": "p = skipwhite(skiptowhite(p));"
    },
    {
        "line": 276,
        "fullcodeline": "if (fword_ends && !can_compound(slang, p,"
    },
    {
        "line": 304,
        "fullcodeline": "if ((c & WF_ALLCAP)"
    },
    {
        "line": 305,
        "fullcodeline": "&& su->su_badlen == (*mb_ptr2len)(su->su_badptr))"
    },
    {
        "line": 306,
        "fullcodeline": "c = WF_ONECAP;"
    },
    {
        "line": 311,
        "fullcodeline": "if (p != NULL && spell_iswordp_nmw(p, curwin))"
    },
    {
        "line": 312,
        "fullcodeline": "c &= ~WF_ONECAP;"
    },
    {
        "line": 381,
        "fullcodeline": "if (!spell_iswordp(p, curwin))"
    },
    {
        "line": 396,
        "fullcodeline": "if (score <= su->su_maxscore)"
    },
    {
        "line": 455,
        "fullcodeline": "&& ((unsigned)flags >> 24) != 0"
    },
    {
        "line": 459,
        "fullcodeline": "|| slang->sl_compminlen == 0"
    },
    {
        "line": 492,
        "fullcodeline": "sp->ts_flags &= ~TSF_DIDSPLIT;"
    },
    {
        "line": 503,
        "fullcodeline": "&& (flags & WF_NEEDCOMP))"
    },
    {
        "line": 509,
        "fullcodeline": "&& !can_compound(slang, p,"
    },
    {
        "line": 514,
        "fullcodeline": "newscore += SCORE_SPLIT_NO;"
    },
    {
        "line": 543,
        "fullcodeline": "if (!try_compound && !fword_ends)"
    },
    {
        "line": 544,
        "fullcodeline": "STRCAT(preword, \" \");"
    },
    {
        "line": 554,
        "fullcodeline": "if (((!try_compound && !spell_iswordp_nmw(fword"
    },
    {
        "line": 563,
        "fullcodeline": "l = mb_ptr2len(fword + sp->ts_fidx);"
    },
    {
        "line": 574,
        "fullcodeline": "sp->ts_fidx += l;"
    },
    {
        "line": 581,
        "fullcodeline": "++sp->ts_complen;"
    },
    {
        "line": 589,
        "fullcodeline": "n = nofold_len(fword, sp->ts_fidx, su->su_badptr);"
    },
    {
        "line": 601,
        "fullcodeline": "byts = pbyts;"
    },
    {
        "line": 602,
        "fullcodeline": "idxs = pidxs;"
    },
    {
        "line": 603,
        "fullcodeline": "sp->ts_prefixdepth = PFD_PREFIXTREE;"
    },
    {
        "line": 605,
        "fullcodeline": "sp->ts_state = STATE_NOPREFIX;"
    },
    {
        "line": 671,
        "fullcodeline": "|| c != fword[sp->ts_delidx])))"
    },
    {
        "line": 697,
        "fullcodeline": "if (sp->ts_tcharlen == 0)"
    },
    {
        "line": 710,
        "fullcodeline": "if (++sp->ts_tcharidx == sp->ts_tcharlen)"
    },
    {
        "line": 844,
        "fullcodeline": "stack[depth].ts_score -= SCORE_DEL - SCORE_DELDUP;"
    },
    {
        "line": 981,
        "fullcodeline": "c2 = mb_ptr2char(p + n);"
    },
    {
        "line": 988,
        "fullcodeline": "c2 = c; // don't swap non-word char"
    },
    {
        "line": 236,
        "fullcodeline": "sp->ts_splitfidx - repextra,"
    },
    {
        "line": 280,
        "fullcodeline": "compound_ok = FALSE;"
    },
    {
        "line": 383,
        "fullcodeline": "p = preword + STRLEN(preword);"
    },
    {
        "line": 384,
        "fullcodeline": "MB_PTR_BACK(preword, p);"
    },
    {
        "line": 393,
        "fullcodeline": "sp->ts_prewordlen > 0);"
    },
    {
        "line": 398,
        "fullcodeline": "add_suggestion(su, &su->su_ga, preword,"
    },
    {
        "line": 454,
        "fullcodeline": "&& slang->sl_compprog != NULL"
    },
    {
        "line": 516,
        "fullcodeline": "newscore += SCORE_SPLIT;"
    },
    {
        "line": 558,
        "fullcodeline": "&& fword[sp->ts_fidx] != NUL"
    },
    {
        "line": 583,
        "fullcodeline": "sp->ts_compsplit = sp->ts_complen;"
    },
    {
        "line": 591,
        "fullcodeline": "n = sp->ts_fidx;"
    },
    {
        "line": 700,
        "fullcodeline": "sp->ts_tcharidx = 0;"
    },
    {
        "line": 701,
        "fullcodeline": "sp->ts_tcharlen = MB_BYTE2LEN(c);"
    },
    {
        "line": 702,
        "fullcodeline": "sp->ts_fcharstart = sp->ts_fidx - 1;"
    },
    {
        "line": 703,
        "fullcodeline": "sp->ts_isdiff = (newscore != 0)"
    },
    {
        "line": 773,
        "fullcodeline": "sp->ts_tcharlen = 0;"
    },
    {
        "line": 837,
        "fullcodeline": "else if (c == mb_ptr2char(fword + stack[depth].ts_fidx))"
    },
    {
        "line": 990,
        "fullcodeline": "c2 = p[1];"
    },
    {
        "line": 385,
        "fullcodeline": "if (spell_iswordp(p, curwin))"
    },
    {
        "line": 399,
        "fullcodeline": "sp->ts_fidx - repextra,"
    },
    {
        "line": 402,
        "fullcodeline": "if (su->su_badflags & WF_MIXCAP)"
    },
    {
        "line": 453,
        "fullcodeline": "&& !slang->sl_nocompoundsugs"
    },
    {
        "line": 567,
        "fullcodeline": "mch_memmove(preword + sp->ts_prewordlen,"
    },
    {
        "line": 569,
        "fullcodeline": "sp->ts_prewordlen += l;"
    },
    {
        "line": 570,
        "fullcodeline": "preword[sp->ts_prewordlen] = NUL;"
    },
    {
        "line": 713,
        "fullcodeline": "if (sp->ts_isdiff == DIFF_YES)"
    },
    {
        "line": 781,
        "fullcodeline": "if (newscore != 0"
    },
    {
        "line": 784,
        "fullcodeline": "&& similar_chars(slang,"
    },
    {
        "line": 786,
        "fullcodeline": "sp->ts_score -= SCORE_SUBST - SCORE_SIMILAR;"
    },
    {
        "line": 838,
        "fullcodeline": "stack[depth].ts_score -= SCORE_DEL - SCORE_DELDUP;"
    },
    {
        "line": 386,
        "fullcodeline": "newscore += SCORE_NONWORD;"
    },
    {
        "line": 406,
        "fullcodeline": "c = captype(preword, NULL);"
    },
    {
        "line": 573,
        "fullcodeline": "sp->ts_score -= SCORE_SPLIT - SCORE_SUBST;"
    },
    {
        "line": 706,
        "fullcodeline": "else if (sp->ts_isdiff == DIFF_INSERT)"
    },
    {
        "line": 717,
        "fullcodeline": "sp->ts_fidx = sp->ts_fcharstart"
    },
    {
        "line": 709,
        "fullcodeline": "--sp->ts_fidx;"
    },
    {
        "line": 782,
        "fullcodeline": "&& !soundfold"
    },
    {
        "line": 785,
        "fullcodeline": "c, fword[sp->ts_fidx - 1]))"
    },
    {
        "line": 407,
        "fullcodeline": "if (c == 0 || c == WF_ALLCAP)"
    },
    {
        "line": 413,
        "fullcodeline": "add_suggestion(su, &su->su_ga, preword,"
    },
    {
        "line": 718,
        "fullcodeline": "+ mb_ptr2len("
    },
    {
        "line": 723,
        "fullcodeline": "if (enc_utf8"
    },
    {
        "line": 728,
        "fullcodeline": "&& utf_iscomposing("
    },
    {
        "line": 731,
        "fullcodeline": "sp->ts_score -="
    },
    {
        "line": 414,
        "fullcodeline": "sp->ts_fidx - repextra,"
    },
    {
        "line": 724,
        "fullcodeline": "&& utf_iscomposing("
    },
    {
        "line": 729,
        "fullcodeline": "utf_ptr2char(fword"
    },
    {
        "line": 732,
        "fullcodeline": "SCORE_SUBST - SCORE_SUBCOMP;"
    },
    {
        "line": 747,
        "fullcodeline": "else if (sp->ts_isdiff == DIFF_INSERT"
    },
    {
        "line": 748,
        "fullcodeline": "&& sp->ts_twordlen > sp->ts_tcharlen)"
    },
    {
        "line": 750,
        "fullcodeline": "p = tword + sp->ts_twordlen - sp->ts_tcharlen;"
    },
    {
        "line": 751,
        "fullcodeline": "c = mb_ptr2char(p);"
    },
    {
        "line": 725,
        "fullcodeline": "utf_ptr2char(tword"
    },
    {
        "line": 752,
        "fullcodeline": "if (enc_utf8 && utf_iscomposing(c))"
    },
    {
        "line": 736,
        "fullcodeline": "else if (!soundfold"
    },
    {
        "line": 738,
        "fullcodeline": "&& similar_chars(slang,"
    },
    {
        "line": 744,
        "fullcodeline": "sp->ts_score -="
    },
    {
        "line": 756,
        "fullcodeline": "sp->ts_score -= SCORE_INS - SCORE_INSCOMP;"
    },
    {
        "line": 739,
        "fullcodeline": "mb_ptr2char(tword"
    },
    {
        "line": 742,
        "fullcodeline": "mb_ptr2char(fword"
    },
    {
        "line": 745,
        "fullcodeline": "SCORE_SUBST - SCORE_SIMILAR;"
    },
    {
        "line": 765,
        "fullcodeline": "MB_PTR_BACK(tword, p);"
    },
    {
        "line": 766,
        "fullcodeline": "if (c == mb_ptr2char(p))"
    },
    {
        "line": 767,
        "fullcodeline": "sp->ts_score -= SCORE_INS"
    }
]