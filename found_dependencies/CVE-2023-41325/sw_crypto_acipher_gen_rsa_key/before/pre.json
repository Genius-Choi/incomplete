[
    {
        "line": 9,
        "fullcodeline": "ltc_res = rsa_make_key_bn_e(NULL, find_prng(\"prng_crypto\"),"
    },
    {
        "line": 11,
        "fullcodeline": "if (ltc_res != CRYPT_OK) {"
    },
    {
        "line": 10,
        "fullcodeline": "key_size / 8, key->e, &ltc_tmp_key);"
    },
    {
        "line": 12,
        "fullcodeline": "res = TEE_ERROR_BAD_PARAMETERS;"
    },
    {
        "line": 13,
        "fullcodeline": "} else if ((size_t)mp_count_bits(ltc_tmp_key.N) != key_size) {"
    },
    {
        "line": 14,
        "fullcodeline": "rsa_free(&ltc_tmp_key);"
    },
    {
        "line": 15,
        "fullcodeline": "res = TEE_ERROR_BAD_PARAMETERS;"
    },
    {
        "line": 18,
        "fullcodeline": "ltc_mp.copy(ltc_tmp_key.d,  key->d);"
    },
    {
        "line": 19,
        "fullcodeline": "ltc_mp.copy(ltc_tmp_key.N,  key->n);"
    },
    {
        "line": 20,
        "fullcodeline": "ltc_mp.copy(ltc_tmp_key.p,  key->p);"
    },
    {
        "line": 21,
        "fullcodeline": "ltc_mp.copy(ltc_tmp_key.q,  key->q);"
    },
    {
        "line": 22,
        "fullcodeline": "ltc_mp.copy(ltc_tmp_key.qP, key->qp);"
    },
    {
        "line": 23,
        "fullcodeline": "ltc_mp.copy(ltc_tmp_key.dP, key->dp);"
    },
    {
        "line": 24,
        "fullcodeline": "ltc_mp.copy(ltc_tmp_key.dQ, key->dq);"
    },
    {
        "line": 27,
        "fullcodeline": "rsa_free(&ltc_tmp_key);"
    },
    {
        "line": 28,
        "fullcodeline": "res = TEE_SUCCESS;"
    }
]