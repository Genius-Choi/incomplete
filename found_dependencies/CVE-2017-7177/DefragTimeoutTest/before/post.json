[
    {
        "line": 4,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "DefragInit();"
    },
    {
        "line": 32,
        "fullcodeline": "Packet *p = BuildTestPacket(99, 0, 1, 'A' + i, 16);"
    },
    {
        "line": 36,
        "fullcodeline": "p->ts.tv_sec += (defrag_context->timeout + 1);"
    },
    {
        "line": 37,
        "fullcodeline": "Packet *tp = Defrag(NULL, NULL, p, NULL);"
    },
    {
        "line": 44,
        "fullcodeline": "DefragTracker *tracker = DefragLookupTrackerFromHash(p);"
    },
    {
        "line": 51,
        "fullcodeline": "SCFree(p);"
    },
    {
        "line": 53,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 55,
        "fullcodeline": "DefragDestroy();"
    },
    {
        "line": 7,
        "fullcodeline": "if (ConfSet(\"defrag.trackers\", \"16\") != 1) {"
    },
    {
        "line": 15,
        "fullcodeline": "for (i = 0; i < 16; i++) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (p == NULL)"
    },
    {
        "line": 39,
        "fullcodeline": "if (tp != NULL) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (tracker == NULL)"
    },
    {
        "line": 48,
        "fullcodeline": "if (tracker->id != 99)"
    },
    {
        "line": 8,
        "fullcodeline": "printf(\"ConfSet failed: \");"
    },
    {
        "line": 16,
        "fullcodeline": "Packet *p = BuildTestPacket(i, 0, 1, 'A' + i, 16);"
    },
    {
        "line": 20,
        "fullcodeline": "Packet *tp = Defrag(NULL, NULL, p, NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "SCFree(p);"
    },
    {
        "line": 40,
        "fullcodeline": "SCFree(tp);"
    },
    {
        "line": 17,
        "fullcodeline": "if (p == NULL)"
    },
    {
        "line": 24,
        "fullcodeline": "if (tp != NULL) {"
    },
    {
        "line": 25,
        "fullcodeline": "SCFree(tp);"
    }
]