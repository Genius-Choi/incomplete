[
    {
        "line": 28,
        "fullcodeline": "KDCOptions f = b->kdc_options;"
    },
    {
        "line": 30,
        "fullcodeline": "int is_weak = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "memset(&rep, 0, sizeof(rep));"
    },
    {
        "line": 33,
        "fullcodeline": "memset(&et, 0, sizeof(et));"
    },
    {
        "line": 34,
        "fullcodeline": "memset(&ek, 0, sizeof(ek));"
    },
    {
        "line": 36,
        "fullcodeline": "rep.pvno = 5;"
    },
    {
        "line": 37,
        "fullcodeline": "rep.msg_type = krb_tgs_rep;"
    },
    {
        "line": 39,
        "fullcodeline": "et.authtime = tgt->authtime;"
    },
    {
        "line": 40,
        "fullcodeline": "_kdc_fix_time(&b->till);"
    },
    {
        "line": 41,
        "fullcodeline": "et.endtime = min(tgt->endtime, *b->till);"
    },
    {
        "line": 42,
        "fullcodeline": "ALLOC(et.starttime);"
    },
    {
        "line": 43,
        "fullcodeline": "*et.starttime = kdc_time;"
    },
    {
        "line": 45,
        "fullcodeline": "ret = check_tgs_flags(context, config, b, tgt, &et);"
    },
    {
        "line": 68,
        "fullcodeline": "ret = fix_transited_encoding(context, config,"
    },
    {
        "line": 82,
        "fullcodeline": "copy_Realm(&server_principal->realm, &rep.ticket.realm);"
    },
    {
        "line": 83,
        "fullcodeline": "_krb5_principal2principalname(&rep.ticket.sname, server_principal);"
    },
    {
        "line": 84,
        "fullcodeline": "copy_Realm(&tgt_name->realm, &rep.crealm);"
    },
    {
        "line": 90,
        "fullcodeline": "copy_PrincipalName(&tgt_name->name, &rep.cname);"
    },
    {
        "line": 91,
        "fullcodeline": "rep.ticket.tkt_vno = 5;"
    },
    {
        "line": 93,
        "fullcodeline": "ek.caddr = et.caddr;"
    },
    {
        "line": 128,
        "fullcodeline": "*et.starttime = min(*et.starttime, et.endtime);"
    },
    {
        "line": 140,
        "fullcodeline": "et.flags.pre_authent = tgt->flags.pre_authent;"
    },
    {
        "line": 141,
        "fullcodeline": "et.flags.hw_authent  = tgt->flags.hw_authent;"
    },
    {
        "line": 142,
        "fullcodeline": "et.flags.anonymous   = tgt->flags.anonymous;"
    },
    {
        "line": 143,
        "fullcodeline": "et.flags.ok_as_delegate = server->entry.flags.ok_as_delegate;"
    },
    {
        "line": 192,
        "fullcodeline": "ret = krb5_copy_keyblock_contents(context, sessionkey, &et.key);"
    },
    {
        "line": 195,
        "fullcodeline": "et.crealm = tgt_name->realm;"
    },
    {
        "line": 196,
        "fullcodeline": "et.cname = tgt_name->name;"
    },
    {
        "line": 198,
        "fullcodeline": "ek.key = et.key;"
    },
    {
        "line": 200,
        "fullcodeline": "ek.last_req.val = calloc(1, sizeof(*ek.last_req.val));"
    },
    {
        "line": 205,
        "fullcodeline": "ek.last_req.len = 1; /* set after alloc to avoid null deref on cleanup */"
    },
    {
        "line": 206,
        "fullcodeline": "ek.nonce = b->nonce;"
    },
    {
        "line": 207,
        "fullcodeline": "ek.flags = et.flags;"
    },
    {
        "line": 208,
        "fullcodeline": "ek.authtime = et.authtime;"
    },
    {
        "line": 209,
        "fullcodeline": "ek.starttime = et.starttime;"
    },
    {
        "line": 210,
        "fullcodeline": "ek.endtime = et.endtime;"
    },
    {
        "line": 211,
        "fullcodeline": "ek.renew_till = et.renew_till;"
    },
    {
        "line": 212,
        "fullcodeline": "ek.srealm = rep.ticket.realm;"
    },
    {
        "line": 213,
        "fullcodeline": "ek.sname = rep.ticket.sname;"
    },
    {
        "line": 215,
        "fullcodeline": "_kdc_log_timestamp(context, config, \"TGS-REQ\", et.authtime, et.starttime,"
    },
    {
        "line": 265,
        "fullcodeline": "ret = _kdc_encode_reply(context, config, NULL, 0,"
    },
    {
        "line": 274,
        "fullcodeline": "free_TGS_REP(&rep);"
    },
    {
        "line": 275,
        "fullcodeline": "free_TransitedEncoding(&et.transited);"
    },
    {
        "line": 284,
        "fullcodeline": "free_LastReq(&ek.last_req);"
    },
    {
        "line": 285,
        "fullcodeline": "memset(et.key.keyvalue.data, 0, et.key.keyvalue.length);"
    },
    {
        "line": 286,
        "fullcodeline": "free_EncryptionKey(&et.key);"
    },
    {
        "line": 97,
        "fullcodeline": "life = et.endtime - *et.starttime;"
    },
    {
        "line": 102,
        "fullcodeline": "et.endtime = *et.starttime + life;"
    },
    {
        "line": 104,
        "fullcodeline": "if(f.renewable_ok && tgt->flags.renewable &&"
    },
    {
        "line": 130,
        "fullcodeline": "if(*et.starttime == et.endtime){"
    },
    {
        "line": 134,
        "fullcodeline": "if(et.renew_till && et.endtime == *et.renew_till){"
    },
    {
        "line": 201,
        "fullcodeline": "if (ek.last_req.val == NULL) {"
    },
    {
        "line": 220,
        "fullcodeline": "char *r = get_krbtgt_realm(&ek.sname);"
    },
    {
        "line": 247,
        "fullcodeline": "if (krb5_enctype_valid(context, serverkey->keytype) != 0"
    },
    {
        "line": 69,
        "fullcodeline": "!f.disable_transited_check ||"
    },
    {
        "line": 76,
        "fullcodeline": "krb5_principal_get_realm(context, client_principal),"
    },
    {
        "line": 77,
        "fullcodeline": "krb5_principal_get_realm(context, server->entry.principal),"
    },
    {
        "line": 78,
        "fullcodeline": "krb5_principal_get_realm(context, krbtgt->entry.principal));"
    },
    {
        "line": 98,
        "fullcodeline": "if(client && client->entry.max_life)"
    },
    {
        "line": 106,
        "fullcodeline": "tgt->renew_till != NULL)"
    },
    {
        "line": 108,
        "fullcodeline": "et.flags.renewable = 1;"
    },
    {
        "line": 109,
        "fullcodeline": "ALLOC(et.renew_till);"
    },
    {
        "line": 110,
        "fullcodeline": "*et.renew_till = *b->till;"
    },
    {
        "line": 114,
        "fullcodeline": "renew = *et.renew_till - *et.starttime;"
    },
    {
        "line": 119,
        "fullcodeline": "*et.renew_till = *et.starttime + renew;"
    },
    {
        "line": 123,
        "fullcodeline": "*et.renew_till = min(*et.renew_till, *tgt->renew_till);"
    },
    {
        "line": 124,
        "fullcodeline": "*et.starttime = min(*et.starttime, *et.renew_till);"
    },
    {
        "line": 125,
        "fullcodeline": "et.endtime = min(et.endtime, *et.renew_till);"
    },
    {
        "line": 131,
        "fullcodeline": "ret = KRB5KDC_ERR_NEVER_VALID;"
    },
    {
        "line": 136,
        "fullcodeline": "et.renew_till = NULL;"
    },
    {
        "line": 137,
        "fullcodeline": "et.flags.renewable = 0;"
    },
    {
        "line": 150,
        "fullcodeline": "ret = _kdc_tkt_add_if_relevant_ad(context, &et,"
    },
    {
        "line": 157,
        "fullcodeline": "unsigned int i = 0;"
    },
    {
        "line": 178,
        "fullcodeline": "ret = find_KRB5SignedPath(context, et.authorization_data, NULL);"
    },
    {
        "line": 202,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 222,
        "fullcodeline": "if (r == NULL || strcmp(r, ek.srealm) == 0) {"
    },
    {
        "line": 237,
        "fullcodeline": "rep.padata = calloc(1, sizeof(*rep.padata));"
    },
    {
        "line": 242,
        "fullcodeline": "ret = copy_METHOD_DATA(enc_pa_data, rep.padata);"
    },
    {
        "line": 248,
        "fullcodeline": "&& _kdc_is_weak_exception(server->entry.principal, serverkey->keytype))"
    },
    {
        "line": 250,
        "fullcodeline": "krb5_enctype_enable(context, serverkey->keytype);"
    },
    {
        "line": 251,
        "fullcodeline": "is_weak = 1;"
    },
    {
        "line": 271,
        "fullcodeline": "krb5_enctype_disable(context, serverkey->keytype);"
    },
    {
        "line": 277,
        "fullcodeline": "free(et.starttime);"
    },
    {
        "line": 279,
        "fullcodeline": "free(et.renew_till);"
    },
    {
        "line": 281,
        "fullcodeline": "free_AuthorizationData(et.authorization_data);"
    },
    {
        "line": 282,
        "fullcodeline": "free(et.authorization_data);"
    },
    {
        "line": 72,
        "fullcodeline": "!((GLOBAL_ALLOW_PER_PRINCIPAL &&"
    },
    {
        "line": 99,
        "fullcodeline": "life = min(life, *client->entry.max_life);"
    },
    {
        "line": 101,
        "fullcodeline": "life = min(life, *server->entry.max_life);"
    },
    {
        "line": 105,
        "fullcodeline": "et.renew_till == NULL && et.endtime < *b->till &&"
    },
    {
        "line": 115,
        "fullcodeline": "if(client && client->entry.max_renew)"
    },
    {
        "line": 161,
        "fullcodeline": "if (et.authorization_data == NULL) {"
    },
    {
        "line": 169,
        "fullcodeline": "for(i = 0; i < auth_data->len ; i++) {"
    },
    {
        "line": 179,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 223,
        "fullcodeline": "ret = _kdc_add_KRB5SignedPath(context,"
    },
    {
        "line": 238,
        "fullcodeline": "if (rep.padata == NULL) {"
    },
    {
        "line": 116,
        "fullcodeline": "renew = min(renew, *client->entry.max_renew);"
    },
    {
        "line": 118,
        "fullcodeline": "renew = min(renew, *server->entry.max_renew);"
    },
    {
        "line": 162,
        "fullcodeline": "et.authorization_data = calloc(1, sizeof(*et.authorization_data));"
    },
    {
        "line": 170,
        "fullcodeline": "ret = add_AuthorizationData(et.authorization_data, &auth_data->val[i]);"
    },
    {
        "line": 239,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 163,
        "fullcodeline": "if (et.authorization_data == NULL) {"
    },
    {
        "line": 180,
        "fullcodeline": "if (et.authorization_data->len == 1) {"
    },
    {
        "line": 164,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 165,
        "fullcodeline": "krb5_set_error_message(context, ret, \"malloc: out of memory\");"
    },
    {
        "line": 172,
        "fullcodeline": "krb5_set_error_message(context, ret, \"malloc: out of memory\");"
    },
    {
        "line": 181,
        "fullcodeline": "free_AuthorizationData(et.authorization_data);"
    },
    {
        "line": 183,
        "fullcodeline": "et.authorization_data = NULL;"
    },
    {
        "line": 70,
        "fullcodeline": "GLOBAL_FORCE_TRANSITED_CHECK ||"
    },
    {
        "line": 74,
        "fullcodeline": "GLOBAL_ALLOW_DISABLE_TRANSITED_CHECK),"
    },
    {
        "line": 185,
        "fullcodeline": "AuthorizationData *ad = et.authorization_data;"
    },
    {
        "line": 186,
        "fullcodeline": "free_AuthorizationDataElement(&ad->val[ad->len - 1]);"
    },
    {
        "line": 187,
        "fullcodeline": "ad->len--;"
    }
]