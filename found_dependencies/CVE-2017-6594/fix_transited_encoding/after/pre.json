[
    {
        "line": 10,
        "fullcodeline": "krb5_error_code ret = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "ret = krb5_domain_x500_decode(context,"
    },
    {
        "line": 102,
        "fullcodeline": "et->transited.tr_type = DOMAIN_X500_COMPRESS;"
    },
    {
        "line": 103,
        "fullcodeline": "ret = krb5_domain_x500_encode(realms, num_realms, &et->transited.contents);"
    },
    {
        "line": 68,
        "fullcodeline": "if(num_realms == 0) {"
    },
    {
        "line": 107,
        "fullcodeline": "for(i = 0; i < num_realms; i++)"
    },
    {
        "line": 108,
        "fullcodeline": "free(realms[i]);"
    },
    {
        "line": 25,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 41,
        "fullcodeline": "krb5_warn(context, ret,"
    },
    {
        "line": 50,
        "fullcodeline": "if(strcmp(client_realm, tgt_realm) && strcmp(server_realm, tgt_realm)) {"
    },
    {
        "line": 55,
        "fullcodeline": "tmp = realloc(realms, (num_realms + 1) * sizeof(*realms));"
    },
    {
        "line": 60,
        "fullcodeline": "realms = tmp;"
    },
    {
        "line": 61,
        "fullcodeline": "realms[num_realms] = strdup(tgt_realm);"
    },
    {
        "line": 66,
        "fullcodeline": "num_realms++;"
    },
    {
        "line": 92,
        "fullcodeline": "ret = krb5_check_transited(context, client_realm,"
    },
    {
        "line": 105,
        "fullcodeline": "krb5_warn(context, ret, \"Encoding transited encoding\");"
    },
    {
        "line": 23,
        "fullcodeline": "if (tr->contents.length == 0)"
    },
    {
        "line": 56,
        "fullcodeline": "if(tmp == NULL){"
    },
    {
        "line": 62,
        "fullcodeline": "if(realms[num_realms] == NULL){"
    },
    {
        "line": 69,
        "fullcodeline": "if(strcmp(client_realm, server_realm))"
    },
    {
        "line": 73,
        "fullcodeline": "size_t l = 0;"
    },
    {
        "line": 77,
        "fullcodeline": "rs = malloc(l);"
    },
    {
        "line": 51,
        "fullcodeline": "if (num_realms + 1 > UINT_MAX/sizeof(*realms)) {"
    },
    {
        "line": 52,
        "fullcodeline": "ret = ERANGE;"
    },
    {
        "line": 57,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 63,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 70,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 75,
        "fullcodeline": "for(i = 0; i < num_realms; i++)"
    },
    {
        "line": 76,
        "fullcodeline": "l += strlen(realms[i]) + 2;"
    },
    {
        "line": 78,
        "fullcodeline": "if(rs != NULL) {"
    },
    {
        "line": 96,
        "fullcodeline": "krb5_warn(context, ret, \"cross-realm %s -> %s\","
    },
    {
        "line": 79,
        "fullcodeline": "*rs = '\\0';"
    },
    {
        "line": 85,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 80,
        "fullcodeline": "for(i = 0; i < num_realms; i++) {"
    },
    {
        "line": 83,
        "fullcodeline": "strlcat(rs, realms[i], l);"
    },
    {
        "line": 81,
        "fullcodeline": "if(i > 0)"
    },
    {
        "line": 82,
        "fullcodeline": "strlcat(rs, \", \", l);"
    }
]