[
    {
        "line": 17,
        "fullcodeline": "krb5_principal cp = NULL, sp = NULL, rsp = NULL, tp = NULL, dp = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "krb5_principal krbtgt_out_principal = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "char *spn = NULL, *cpn = NULL, *tpn = NULL, *dpn = NULL, *krbtgt_out_n = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "hdb_entry_ex *server = NULL, *client = NULL, *s4u2self_impersonated_client = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "krb5_realm ref_realm = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "EncTicketPart *tgt = &ticket->ticket;"
    },
    {
        "line": 24,
        "fullcodeline": "krb5_principals spp = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "const char *tgt_realm = /* Realm of TGT issuer */"
    },
    {
        "line": 31,
        "fullcodeline": "const char *our_realm = /* Realm of this KDC */"
    },
    {
        "line": 33,
        "fullcodeline": "char **capath = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "size_t num_capath = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "hdb_entry_ex *krbtgt_out = NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "char opt_str[128];"
    },
    {
        "line": 44,
        "fullcodeline": "int signedpath = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "int flags = HDB_F_FOR_TGS_REQ;"
    },
    {
        "line": 50,
        "fullcodeline": "memset(&sessionkey, 0, sizeof(sessionkey));"
    },
    {
        "line": 51,
        "fullcodeline": "memset(&adtkt, 0, sizeof(adtkt));"
    },
    {
        "line": 52,
        "fullcodeline": "krb5_data_zero(&rspac);"
    },
    {
        "line": 53,
        "fullcodeline": "memset(&enc_pa_data, 0, sizeof(enc_pa_data));"
    },
    {
        "line": 55,
        "fullcodeline": "s = b->sname;"
    },
    {
        "line": 56,
        "fullcodeline": "r = b->realm;"
    },
    {
        "line": 61,
        "fullcodeline": "flags |= HDB_F_CANON;"
    },
    {
        "line": 119,
        "fullcodeline": "_krb5_principalname2krb5_principal(context, &sp, *s, r);"
    },
    {
        "line": 120,
        "fullcodeline": "ret = krb5_unparse_name(context, sp, &spn);"
    },
    {
        "line": 123,
        "fullcodeline": "_krb5_principalname2krb5_principal(context, &cp, tgt->cname, tgt->crealm);"
    },
    {
        "line": 124,
        "fullcodeline": "ret = krb5_unparse_name(context, cp, &cpn);"
    },
    {
        "line": 127,
        "fullcodeline": "unparse_flags (KDCOptions2int(b->kdc_options),"
    },
    {
        "line": 143,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, sp, HDB_F_GET_SERVER | flags,"
    },
    {
        "line": 320,
        "fullcodeline": "ret = hdb_enctype2key(context, &krbtgt->entry, NULL, /* XXX use the right kvno! */"
    },
    {
        "line": 334,
        "fullcodeline": "ret = krb5_make_principal(context,"
    },
    {
        "line": 346,
        "fullcodeline": "ret = krb5_unparse_name(context, krbtgt_out_principal, &krbtgt_out_n);"
    },
    {
        "line": 354,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, krbtgt_out_principal,"
    },
    {
        "line": 388,
        "fullcodeline": "ret = _kdc_get_preferred_key(context, config, krbtgt_out, krbtgt_out_n,"
    },
    {
        "line": 395,
        "fullcodeline": "ret = hdb_enctype2key(context, &krbtgt_out->entry, NULL,"
    },
    {
        "line": 403,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, cp, HDB_F_GET_CLIENT | flags,"
    },
    {
        "line": 433,
        "fullcodeline": "ret = check_PAC(context, config, cp, NULL,"
    },
    {
        "line": 448,
        "fullcodeline": "ret = check_KRB5SignedPath(context,"
    },
    {
        "line": 469,
        "fullcodeline": "tp = cp;"
    },
    {
        "line": 470,
        "fullcodeline": "tpn = cpn;"
    },
    {
        "line": 759,
        "fullcodeline": "ret = kdc_check_flags(context, config,"
    },
    {
        "line": 820,
        "fullcodeline": "ret = tgs_make_reply(context,"
    },
    {
        "line": 848,
        "fullcodeline": "free(spn);"
    },
    {
        "line": 849,
        "fullcodeline": "free(cpn);"
    },
    {
        "line": 850,
        "fullcodeline": "free(dpn);"
    },
    {
        "line": 851,
        "fullcodeline": "free(krbtgt_out_n);"
    },
    {
        "line": 852,
        "fullcodeline": "_krb5_free_capath(context, capath);"
    },
    {
        "line": 854,
        "fullcodeline": "krb5_data_free(&rspac);"
    },
    {
        "line": 855,
        "fullcodeline": "krb5_free_keyblock_contents(context, &sessionkey);"
    },
    {
        "line": 867,
        "fullcodeline": "krb5_free_principal(context, cp);"
    },
    {
        "line": 868,
        "fullcodeline": "krb5_free_principal(context, dp);"
    },
    {
        "line": 869,
        "fullcodeline": "krb5_free_principal(context, sp);"
    },
    {
        "line": 870,
        "fullcodeline": "krb5_free_principal(context, krbtgt_out_principal);"
    },
    {
        "line": 871,
        "fullcodeline": "free(ref_realm);"
    },
    {
        "line": 872,
        "fullcodeline": "free_METHOD_DATA(&enc_pa_data);"
    },
    {
        "line": 874,
        "fullcodeline": "free_EncTicketPart(&adtkt);"
    },
    {
        "line": 30,
        "fullcodeline": "krb5_principal_get_realm(context, krbtgt->entry.principal);"
    },
    {
        "line": 32,
        "fullcodeline": "krb5_principal_get_comp_string(context, krbtgt->entry.principal, 1);"
    },
    {
        "line": 146,
        "fullcodeline": "if (ret == HDB_ERR_NOT_FOUND_HERE) {"
    },
    {
        "line": 305,
        "fullcodeline": "ret = krb5_generate_random_keyblock(context, etype, &sessionkey);"
    },
    {
        "line": 375,
        "fullcodeline": "if (strcmp(krb5_principal_get_realm(context, server->entry.principal),"
    },
    {
        "line": 405,
        "fullcodeline": "if(ret == HDB_ERR_NOT_FOUND_HERE) {"
    },
    {
        "line": 611,
        "fullcodeline": "if (client != NULL"
    },
    {
        "line": 766,
        "fullcodeline": "if((b->kdc_options.validate || b->kdc_options.renew) &&"
    },
    {
        "line": 776,
        "fullcodeline": "if(!_kdc_check_addresses(context, config, tgt->caddr, from_addr)) {"
    },
    {
        "line": 846,
        "fullcodeline": "if (tpn != cpn)"
    },
    {
        "line": 865,
        "fullcodeline": "if (tp && tp != cp)"
    },
    {
        "line": 68,
        "fullcodeline": "krb5uint32 second_kvno = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "krb5uint32 *kvno_ptr = NULL;"
    },
    {
        "line": 85,
        "fullcodeline": "_krb5_principalname2krb5_principal(context, &p, t->sname, t->realm);"
    },
    {
        "line": 90,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, p,"
    },
    {
        "line": 93,
        "fullcodeline": "krb5_free_principal(context, p);"
    },
    {
        "line": 99,
        "fullcodeline": "ret = hdb_enctype2key(context, &uu->entry, NULL,"
    },
    {
        "line": 106,
        "fullcodeline": "ret = krb5_decrypt_ticket(context, t, &uukey->key, &adtkt, 0);"
    },
    {
        "line": 107,
        "fullcodeline": "_kdc_free_ent(context, uu);"
    },
    {
        "line": 111,
        "fullcodeline": "ret = verify_flags(context, config, &adtkt, spn);"
    },
    {
        "line": 115,
        "fullcodeline": "s = &adtkt.cname;"
    },
    {
        "line": 116,
        "fullcodeline": "r = adtkt.crealm;"
    },
    {
        "line": 131,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 147,
        "fullcodeline": "kdc_log(context, config, 5, \"target %s does not have secrets at this KDC, need to proxy\", sp);"
    },
    {
        "line": 253,
        "fullcodeline": "rsp = server->entry.principal;"
    },
    {
        "line": 323,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 341,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 348,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 357,
        "fullcodeline": "char *ktpn = NULL;"
    },
    {
        "line": 358,
        "fullcodeline": "ret = krb5_unparse_name(context, krbtgt->entry.principal, &ktpn);"
    },
    {
        "line": 359,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 363,
        "fullcodeline": "free(ktpn);"
    },
    {
        "line": 364,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_NOT_US;"
    },
    {
        "line": 378,
        "fullcodeline": "ret = krb5_unparse_name(context, krbtgt_out->entry.principal, &ktpn);"
    },
    {
        "line": 379,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 384,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_NOT_US;"
    },
    {
        "line": 391,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 398,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 439,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 440,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 443,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 456,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 457,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 460,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 474,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 476,
        "fullcodeline": "sdata = _kdc_find_padata(req, &i, KRB5_PADATA_FOR_USER);"
    },
    {
        "line": 614,
        "fullcodeline": "&& b->kdc_options.enc_tkt_in_skey == 0)"
    },
    {
        "line": 616,
        "fullcodeline": "int ad_signedpath = 0;"
    },
    {
        "line": 634,
        "fullcodeline": "ret = hdb_enctype2key(context, &client->entry,"
    },
    {
        "line": 643,
        "fullcodeline": "ret = krb5_decrypt_ticket(context, t, &clientkey->key, &adtkt, 0);"
    },
    {
        "line": 651,
        "fullcodeline": "ret = _krb5_principalname2krb5_principal(context,"
    },
    {
        "line": 658,
        "fullcodeline": "ret = krb5_unparse_name(context, tp, &tpn);"
    },
    {
        "line": 662,
        "fullcodeline": "ret = _krb5_principalname2krb5_principal(context,"
    },
    {
        "line": 669,
        "fullcodeline": "ret = krb5_unparse_name(context, dp, &dpn);"
    },
    {
        "line": 683,
        "fullcodeline": "ret = check_constrained_delegation(context, config, clientdb,"
    },
    {
        "line": 692,
        "fullcodeline": "ret = verify_flags(context, config, &adtkt, tpn);"
    },
    {
        "line": 697,
        "fullcodeline": "krb5_data_free(&rspac);"
    },
    {
        "line": 705,
        "fullcodeline": "ret = check_PAC(context, config, tp, dp,"
    },
    {
        "line": 723,
        "fullcodeline": "ret = check_KRB5SignedPath(context,"
    },
    {
        "line": 751,
        "fullcodeline": "kdc_log(context, config, 0, \"constrained delegation for %s \""
    },
    {
        "line": 767,
        "fullcodeline": "!krb5_principal_compare(context,"
    },
    {
        "line": 770,
        "fullcodeline": "kdc_log(context, config, 0, \"Inconsistent request.\");"
    },
    {
        "line": 771,
        "fullcodeline": "ret = KRB5KDC_ERR_SERVER_NOMATCH;"
    },
    {
        "line": 777,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_BADADDR;"
    },
    {
        "line": 778,
        "fullcodeline": "kdc_log(context, config, 0, \"Request from wrong address\");"
    },
    {
        "line": 790,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 793,
        "fullcodeline": "ret = krb5_crypto_init(context, &sessionkey, 0, &crypto);"
    },
    {
        "line": 797,
        "fullcodeline": "ret = build_server_referral(context, config, crypto, ref_realm,"
    },
    {
        "line": 799,
        "fullcodeline": "krb5_crypto_destroy(context, crypto);"
    },
    {
        "line": 805,
        "fullcodeline": "pa.padata_type = KRB5_PADATA_SERVER_REFERRAL;"
    },
    {
        "line": 807,
        "fullcodeline": "ret = add_METHOD_DATA(&enc_pa_data, &pa);"
    },
    {
        "line": 808,
        "fullcodeline": "krb5_data_free(&pa.padata_value);"
    },
    {
        "line": 847,
        "fullcodeline": "free(tpn);"
    },
    {
        "line": 857,
        "fullcodeline": "_kdc_free_ent(context, krbtgt_out);"
    },
    {
        "line": 859,
        "fullcodeline": "_kdc_free_ent(context, server);"
    },
    {
        "line": 861,
        "fullcodeline": "_kdc_free_ent(context, client);"
    },
    {
        "line": 863,
        "fullcodeline": "_kdc_free_ent(context, s4u2self_impersonated_client);"
    },
    {
        "line": 866,
        "fullcodeline": "krb5_free_principal(context, tp);"
    },
    {
        "line": 71,
        "fullcodeline": "if(b->additional_tickets == NULL ||"
    },
    {
        "line": 79,
        "fullcodeline": "if(!get_krbtgt_realm(&t->sname)){"
    },
    {
        "line": 135,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 255,
        "fullcodeline": "rsp = sp;"
    },
    {
        "line": 267,
        "fullcodeline": "ekey = &adtkt.key;"
    },
    {
        "line": 278,
        "fullcodeline": "etype = b->etype.val[i];"
    },
    {
        "line": 279,
        "fullcodeline": "kvno = 0;"
    },
    {
        "line": 362,
        "fullcodeline": "krbtgt_out_n, spn, (ret == 0) ? ktpn : \"<unknown>\");"
    },
    {
        "line": 376,
        "fullcodeline": "krb5_principal_get_realm(context, krbtgt_out->entry.principal)) != 0) {"
    },
    {
        "line": 381,
        "fullcodeline": "(ret == 0) ? ktpn : \"<unknown>\");"
    },
    {
        "line": 382,
        "fullcodeline": "if(ret == 0)"
    },
    {
        "line": 613,
        "fullcodeline": "&& b->additional_tickets->len != 0"
    },
    {
        "line": 624,
        "fullcodeline": "if (!signedpath) {"
    },
    {
        "line": 674,
        "fullcodeline": "if (adtkt.flags.forwardable == 0) {"
    },
    {
        "line": 741,
        "fullcodeline": "if (!ad_signedpath) {"
    },
    {
        "line": 72,
        "fullcodeline": "b->additional_tickets->len == 0){"
    },
    {
        "line": 73,
        "fullcodeline": "ret = KRB5KDC_ERR_BADOPTION; /* ? */"
    },
    {
        "line": 74,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 80,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 82,
        "fullcodeline": "ret = KRB5KDC_ERR_POLICY;"
    },
    {
        "line": 88,
        "fullcodeline": "kvno_ptr = &second_kvno;"
    },
    {
        "line": 102,
        "fullcodeline": "_kdc_free_ent(context, uu);"
    },
    {
        "line": 103,
        "fullcodeline": "ret = KRB5KDC_ERR_ETYPE_NOSUPP; /* XXX */"
    },
    {
        "line": 149,
        "fullcodeline": "} else if (ret == HDB_ERR_WRONG_REALM) {"
    },
    {
        "line": 268,
        "fullcodeline": "for(i = 0; i < b->etype.len; i++)"
    },
    {
        "line": 271,
        "fullcodeline": "if(i == b->etype.len) {"
    },
    {
        "line": 283,
        "fullcodeline": "ret = _kdc_find_etype(context,"
    },
    {
        "line": 294,
        "fullcodeline": "ret = _kdc_get_preferred_key(context, config, server, spn,"
    },
    {
        "line": 301,
        "fullcodeline": "ekey = &skey->key;"
    },
    {
        "line": 383,
        "fullcodeline": "free(ktpn);"
    },
    {
        "line": 483,
        "fullcodeline": "ret = decode_PA_S4U2Self(sdata->padata_value.data,"
    },
    {
        "line": 491,
        "fullcodeline": "ret = _krb5_s4u2self_to_checksumdata(context, &self, &datack);"
    },
    {
        "line": 495,
        "fullcodeline": "ret = krb5_crypto_init(context, &tgt->key, 0, &crypto);"
    },
    {
        "line": 505,
        "fullcodeline": "ret = krb5_verify_checksum(context,"
    },
    {
        "line": 511,
        "fullcodeline": "krb5_data_free(&datack);"
    },
    {
        "line": 512,
        "fullcodeline": "krb5_crypto_destroy(context, crypto);"
    },
    {
        "line": 522,
        "fullcodeline": "ret = _krb5_principalname2krb5_principal(context,"
    },
    {
        "line": 526,
        "fullcodeline": "free_PA_S4U2Self(&self);"
    },
    {
        "line": 530,
        "fullcodeline": "ret = krb5_unparse_name(context, tp, &tpn);"
    },
    {
        "line": 582,
        "fullcodeline": "ret = check_s4u2self(context, config, clientdb, client, sp);"
    },
    {
        "line": 602,
        "fullcodeline": "kdc_log(context, config, 0, \"s4u2self %s impersonating %s to \""
    },
    {
        "line": 612,
        "fullcodeline": "&& b->additional_tickets != NULL"
    },
    {
        "line": 625,
        "fullcodeline": "ret = KRB5KDC_ERR_BADOPTION;"
    },
    {
        "line": 626,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 635,
        "fullcodeline": "hdb_kvno2keys(context, &client->entry,"
    },
    {
        "line": 639,
        "fullcodeline": "ret = KRB5KDC_ERR_ETYPE_NOSUPP; /* XXX */"
    },
    {
        "line": 645,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 675,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 679,
        "fullcodeline": "ret = KRB5KDC_ERR_BADOPTION;"
    },
    {
        "line": 686,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 711,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 712,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 716,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 731,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 732,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 737,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 742,
        "fullcodeline": "ret = KRB5KDC_ERR_BADOPTION;"
    },
    {
        "line": 743,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 801,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 810,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 95,
        "fullcodeline": "if (ret == HDB_ERR_NOENTRY)"
    },
    {
        "line": 150,
        "fullcodeline": "free(ref_realm);"
    },
    {
        "line": 151,
        "fullcodeline": "ref_realm = strdup(server->entry.principal->realm);"
    },
    {
        "line": 157,
        "fullcodeline": "kdc_log(context, config, 5,"
    },
    {
        "line": 161,
        "fullcodeline": "krb5_free_principal(context, sp);"
    },
    {
        "line": 162,
        "fullcodeline": "sp = NULL;"
    },
    {
        "line": 163,
        "fullcodeline": "ret = krb5_make_principal(context, &sp, r, KRB5_TGS_NAME,"
    },
    {
        "line": 167,
        "fullcodeline": "free(spn);"
    },
    {
        "line": 168,
        "fullcodeline": "spn = NULL;"
    },
    {
        "line": 169,
        "fullcodeline": "ret = krb5_unparse_name(context, sp, &spn);"
    },
    {
        "line": 272,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 274,
        "fullcodeline": "krb5_clear_error_message(context);"
    },
    {
        "line": 275,
        "fullcodeline": "ret = KRB5KDC_ERR_ETYPE_NOSUPP;"
    },
    {
        "line": 418,
        "fullcodeline": "krbtgt_realm = krb5_principal_get_realm(context, krbtgt_out->entry.principal);"
    },
    {
        "line": 428,
        "fullcodeline": "msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 429,
        "fullcodeline": "kdc_log(context, config, 1, \"Client not found in database: %s\", msg);"
    },
    {
        "line": 430,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 636,
        "fullcodeline": "t->enc_part.kvno ? * t->enc_part.kvno : 0),"
    },
    {
        "line": 96,
        "fullcodeline": "ret = KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN;"
    },
    {
        "line": 152,
        "fullcodeline": "if (ref_realm == NULL) {"
    },
    {
        "line": 284,
        "fullcodeline": "krb5_principal_is_krbtgt(context, sp) ?"
    },
    {
        "line": 290,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 297,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 420,
        "fullcodeline": "if(strcmp(krb5_principal_get_realm(context, cp), krbtgt_realm) == 0) {"
    },
    {
        "line": 487,
        "fullcodeline": "kdc_log(context, config, 0, \"Failed to decode PA-S4U2Self\");"
    },
    {
        "line": 497,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 498,
        "fullcodeline": "free_PA_S4U2Self(&self);"
    },
    {
        "line": 499,
        "fullcodeline": "krb5_data_free(&datack);"
    },
    {
        "line": 500,
        "fullcodeline": "kdc_log(context, config, 0, \"krb5_crypto_init failed: %s\", msg);"
    },
    {
        "line": 501,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 514,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 515,
        "fullcodeline": "free_PA_S4U2Self(&self);"
    },
    {
        "line": 516,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 518,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 536,
        "fullcodeline": "krb5_pac p = NULL;"
    },
    {
        "line": 537,
        "fullcodeline": "krb5_data_free(&rspac);"
    },
    {
        "line": 538,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, tp, HDB_F_GET_CLIENT | flags,"
    },
    {
        "line": 558,
        "fullcodeline": "ret = _kdc_pac_generate(context, s4u2self_impersonated_client, &p);"
    },
    {
        "line": 584,
        "fullcodeline": "kdc_log(context, config, 0, \"S4U2Self: %s is not allowed \""
    },
    {
        "line": 597,
        "fullcodeline": "str = \"[forwardable]\";"
    },
    {
        "line": 153,
        "fullcodeline": "ret = krb5_enomem(context);"
    },
    {
        "line": 423,
        "fullcodeline": "kdc_log(context, config, 1, \"Client no longer in database: %s\","
    },
    {
        "line": 564,
        "fullcodeline": "if (p != NULL) {"
    },
    {
        "line": 599,
        "fullcodeline": "b->kdc_options.forwardable = 0;"
    },
    {
        "line": 600,
        "fullcodeline": "str = \"\";"
    },
    {
        "line": 237,
        "fullcodeline": "msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 238,
        "fullcodeline": "kdc_log(context, config, 0,"
    },
    {
        "line": 240,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 421,
        "fullcodeline": "if (ret == HDB_ERR_NOENTRY)"
    },
    {
        "line": 551,
        "fullcodeline": "msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 552,
        "fullcodeline": "kdc_log(context, config, 1,"
    },
    {
        "line": 555,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 560,
        "fullcodeline": "kdc_log(context, config, 0, \"PAC generation failed for -- %s\","
    },
    {
        "line": 565,
        "fullcodeline": "ret = _krb5_pac_sign(context, p, ticket->ticket.authtime,"
    },
    {
        "line": 569,
        "fullcodeline": "krb5_pac_free(context, p);"
    },
    {
        "line": 179,
        "fullcodeline": "if ((req_rlm = get_krbtgt_realm(&sp->name)) != NULL) {"
    },
    {
        "line": 241,
        "fullcodeline": "if (ret == HDB_ERR_NOENTRY)"
    },
    {
        "line": 422,
        "fullcodeline": "ret = KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN;"
    },
    {
        "line": 549,
        "fullcodeline": "if (ret == HDB_ERR_NOENTRY)"
    },
    {
        "line": 187,
        "fullcodeline": "new_rlm = num_capath > 0 ? capath[--num_capath] : NULL;"
    },
    {
        "line": 242,
        "fullcodeline": "ret = KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN;"
    },
    {
        "line": 550,
        "fullcodeline": "ret = KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN;"
    },
    {
        "line": 571,
        "fullcodeline": "kdc_log(context, config, 0, \"PAC signing failed for -- %s\","
    },
    {
        "line": 180,
        "fullcodeline": "if (capath == NULL) {"
    },
    {
        "line": 182,
        "fullcodeline": "ret = _krb5_find_capath(context, tgt->crealm, our_realm,"
    },
    {
        "line": 189,
        "fullcodeline": "kdc_log(context, config, 5, \"krbtgt from %s via %s for \""
    },
    {
        "line": 193,
        "fullcodeline": "free(ref_realm);"
    },
    {
        "line": 194,
        "fullcodeline": "ref_realm = strdup(new_rlm);"
    },
    {
        "line": 200,
        "fullcodeline": "krb5_free_principal(context, sp);"
    },
    {
        "line": 201,
        "fullcodeline": "sp = NULL;"
    },
    {
        "line": 202,
        "fullcodeline": "krb5_make_principal(context, &sp, r,"
    },
    {
        "line": 204,
        "fullcodeline": "free(spn);"
    },
    {
        "line": 205,
        "fullcodeline": "spn = NULL;"
    },
    {
        "line": 206,
        "fullcodeline": "ret = krb5_unparse_name(context, sp, &spn);"
    },
    {
        "line": 211,
        "fullcodeline": "} else if (need_referral(context, config, &b->kdc_options, sp, &realms)) {"
    },
    {
        "line": 195,
        "fullcodeline": "if (ref_realm == NULL) {"
    },
    {
        "line": 235,
        "fullcodeline": "krb5_free_host_realm(context, realms);"
    },
    {
        "line": 196,
        "fullcodeline": "ret = krb5_enomem(context);"
    },
    {
        "line": 212,
        "fullcodeline": "if (strcmp(realms[0], sp->realm) != 0) {"
    },
    {
        "line": 213,
        "fullcodeline": "kdc_log(context, config, 5,"
    },
    {
        "line": 217,
        "fullcodeline": "krb5_free_principal(context, sp);"
    },
    {
        "line": 218,
        "fullcodeline": "sp = NULL;"
    },
    {
        "line": 219,
        "fullcodeline": "krb5_make_principal(context, &sp, r, KRB5_TGS_NAME,"
    },
    {
        "line": 221,
        "fullcodeline": "free(spn);"
    },
    {
        "line": 222,
        "fullcodeline": "spn = NULL;"
    },
    {
        "line": 223,
        "fullcodeline": "ret = krb5_unparse_name(context, sp, &spn);"
    },
    {
        "line": 229,
        "fullcodeline": "free(ref_realm);"
    },
    {
        "line": 230,
        "fullcodeline": "ref_realm = strdup(realms[0]);"
    },
    {
        "line": 232,
        "fullcodeline": "krb5_free_host_realm(context, realms);"
    },
    {
        "line": 225,
        "fullcodeline": "krb5_free_host_realm(context, realms);"
    }
]