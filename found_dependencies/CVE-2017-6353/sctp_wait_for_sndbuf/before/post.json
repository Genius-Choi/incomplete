[
    {
        "line": 5,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "DEFINE_WAIT(wait);"
    },
    {
        "line": 9,
        "fullcodeline": "pr_debug(\"%s: asoc:%p, timeo:%ld, msg_len:%zu\\n\", __func__, asoc,"
    },
    {
        "line": 13,
        "fullcodeline": "sctp_association_hold(asoc);"
    },
    {
        "line": 42,
        "fullcodeline": "finish_wait(&asoc->wait, &wait);"
    },
    {
        "line": 45,
        "fullcodeline": "sctp_association_put(asoc);"
    },
    {
        "line": 50,
        "fullcodeline": "err = -EPIPE;"
    },
    {
        "line": 54,
        "fullcodeline": "err = sock_intr_errno(*timeo_p);"
    },
    {
        "line": 58,
        "fullcodeline": "err = -EAGAIN;"
    },
    {
        "line": 17,
        "fullcodeline": "prepare_to_wait_exclusive(&asoc->wait, &wait,"
    },
    {
        "line": 32,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 33,
        "fullcodeline": "current_timeo = schedule_timeout(current_timeo);"
    },
    {
        "line": 36,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 38,
        "fullcodeline": "*timeo_p = current_timeo;"
    },
    {
        "line": 19,
        "fullcodeline": "if (!*timeo_p)"
    },
    {
        "line": 21,
        "fullcodeline": "if (sk->sk_err || asoc->state >= SCTP_STATE_SHUTDOWN_PENDING ||"
    },
    {
        "line": 24,
        "fullcodeline": "if (signal_pending(current))"
    },
    {
        "line": 26,
        "fullcodeline": "if (msg_len <= sctp_wspace(asoc))"
    },
    {
        "line": 34,
        "fullcodeline": "if (sk != asoc->base.sk)"
    }
]