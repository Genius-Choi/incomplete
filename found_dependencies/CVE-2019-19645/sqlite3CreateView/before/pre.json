[
    {
        "line": 16,
        "fullcodeline": "Token *pName = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "sqlite3 *db = pParse->db;"
    },
    {
        "line": 24,
        "fullcodeline": "sqlite3StartTable(pParse, pName1, pName2, isTemp, 1, 0, noErr);"
    },
    {
        "line": 25,
        "fullcodeline": "p = pParse->pNewTable;"
    },
    {
        "line": 27,
        "fullcodeline": "sqlite3TwoPartName(pParse, pName1, pName2, &pName);"
    },
    {
        "line": 28,
        "fullcodeline": "iDb = sqlite3SchemaToIndex(db, p->pSchema);"
    },
    {
        "line": 29,
        "fullcodeline": "sqlite3FixInit(&sFix, pParse, iDb, \"view\", pName);"
    },
    {
        "line": 43,
        "fullcodeline": "p->pCheck = sqlite3ExprListDup(db, pCNames, EXPRDUP_REDUCE);"
    },
    {
        "line": 49,
        "fullcodeline": "sEnd = pParse->sLastToken;"
    },
    {
        "line": 50,
        "fullcodeline": "assert( sEnd.z[0]!=0 || sEnd.n==0 );"
    },
    {
        "line": 54,
        "fullcodeline": "sEnd.n = 0;"
    },
    {
        "line": 55,
        "fullcodeline": "n = (int)(sEnd.z - pBegin->z);"
    },
    {
        "line": 56,
        "fullcodeline": "assert( n>0 );"
    },
    {
        "line": 57,
        "fullcodeline": "z = pBegin->z;"
    },
    {
        "line": 59,
        "fullcodeline": "sEnd.z = &z[n-1];"
    },
    {
        "line": 60,
        "fullcodeline": "sEnd.n = 1;"
    },
    {
        "line": 63,
        "fullcodeline": "sqlite3EndTable(pParse, 0, &sEnd, 0, 0);"
    },
    {
        "line": 66,
        "fullcodeline": "sqlite3SelectDelete(db, pSelect);"
    },
    {
        "line": 70,
        "fullcodeline": "sqlite3ExprListDelete(db, pCNames);"
    },
    {
        "line": 20,
        "fullcodeline": "if( pParse->nVar>0 ){"
    },
    {
        "line": 26,
        "fullcodeline": "if( p==0 || pParse->nErr ) goto create_view_fail;"
    },
    {
        "line": 30,
        "fullcodeline": "if( sqlite3FixSelect(&sFix, pSelect) ) goto create_view_fail;"
    },
    {
        "line": 51,
        "fullcodeline": "if( sEnd.z[0]!=';' ){"
    },
    {
        "line": 58,
        "fullcodeline": "while( sqlite3Isspace(z[n-1]) ){ n--; }"
    },
    {
        "line": 21,
        "fullcodeline": "sqlite3ErrorMsg(pParse, \"parameters are not allowed in views\");"
    },
    {
        "line": 38,
        "fullcodeline": "p->pSelect = pSelect;"
    },
    {
        "line": 39,
        "fullcodeline": "pSelect = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "sEnd.z += sEnd.n;"
    },
    {
        "line": 68,
        "fullcodeline": "sqlite3RenameExprlistUnmap(pParse, pCNames);"
    },
    {
        "line": 41,
        "fullcodeline": "p->pSelect = sqlite3SelectDup(db, pSelect, EXPRDUP_REDUCE);"
    }
]