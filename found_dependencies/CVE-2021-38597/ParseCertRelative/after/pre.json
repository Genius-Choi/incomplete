[
    {
        "line": 3,
        "fullcodeline": "int    ret = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "int    checkPathLen = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int    decrementMaxPathLen = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "word32 confirmOID = 0;"
    },
    {
        "line": 379,
        "fullcodeline": "tsip_encRsaKeyIdx = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "if (cert == NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (cert->sigCtx.state == SIG_STATE_BEGIN) {"
    },
    {
        "line": 25,
        "fullcodeline": "cert->badDate = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "cert->criticalExt = 0;"
    },
    {
        "line": 382,
        "fullcodeline": "if (verify != NO_VERIFY && type != CA_TYPE && type != TRUSTED_PEER_TYPE) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (cert->srcIdx < cert->sigIndex) {"
    },
    {
        "line": 178,
        "fullcodeline": "if (confirmOID != cert->signatureOID"
    },
    {
        "line": 27,
        "fullcodeline": "if ((ret = DecodeToKey(cert, verify)) < 0) {"
    },
    {
        "line": 142,
        "fullcodeline": "cert->extensions    = &cert->source[cert->srcIdx];"
    },
    {
        "line": 143,
        "fullcodeline": "cert->extensionsSz  = cert->sigIndex - cert->srcIdx;"
    },
    {
        "line": 144,
        "fullcodeline": "cert->extensionsIdx = cert->srcIdx;   /* for potential later use */"
    },
    {
        "line": 163,
        "fullcodeline": "cert->srcIdx = cert->sigIndex;"
    },
    {
        "line": 166,
        "fullcodeline": "if ((ret = GetAlgoId(cert->source, &cert->srcIdx,"
    },
    {
        "line": 175,
        "fullcodeline": "if ((ret = GetSignature(cert)) < 0)"
    },
    {
        "line": 186,
        "fullcodeline": "if (cert->extSubjKeyIdSet == 0 && cert->publicKey != NULL &&"
    },
    {
        "line": 187,
        "fullcodeline": "cert->pubKeySize > 0) {"
    },
    {
        "line": 188,
        "fullcodeline": "ret = CalcHashId(cert->publicKey, cert->pubKeySize,"
    },
    {
        "line": 195,
        "fullcodeline": "if (!cert->selfSigned || (verify != NO_VERIFY && type != CA_TYPE &&"
    },
    {
        "line": 197,
        "fullcodeline": "cert->ca = NULL;"
    },
    {
        "line": 240,
        "fullcodeline": "cert->maxPathLen = WOLFSSL_MAX_PATH_LEN;"
    },
    {
        "line": 135,
        "fullcodeline": "if (cert->version < 2) {"
    },
    {
        "line": 190,
        "fullcodeline": "if (ret != 0)"
    },
    {
        "line": 196,
        "fullcodeline": "type != TRUSTED_PEER_TYPE)) {"
    },
    {
        "line": 210,
        "fullcodeline": "if (cert->ca == NULL) {"
    },
    {
        "line": 384,
        "fullcodeline": "if (verify == VERIFY || verify == VERIFY_OCSP ||"
    },
    {
        "line": 28,
        "fullcodeline": "if (ret == ASN_BEFORE_DATE_E || ret == ASN_AFTER_DATE_E)"
    },
    {
        "line": 29,
        "fullcodeline": "cert->badDate = ret;"
    },
    {
        "line": 146,
        "fullcodeline": "if ((ret = DecodeCertExtensions(cert)) < 0) {"
    },
    {
        "line": 200,
        "fullcodeline": "cert->ca = GetCA(cm, cert->extAuthKeyId);"
    },
    {
        "line": 202,
        "fullcodeline": "if (cert->ca == NULL && cert->extSubjKeyIdSet"
    },
    {
        "line": 203,
        "fullcodeline": "&& verify != VERIFY_OCSP) {"
    },
    {
        "line": 204,
        "fullcodeline": "cert->ca = GetCA(cm, cert->extSubjKeyId);"
    },
    {
        "line": 206,
        "fullcodeline": "if (cert->ca != NULL && XMEMCMP(cert->issuerHash,"
    },
    {
        "line": 208,
        "fullcodeline": "cert->ca = NULL;"
    },
    {
        "line": 211,
        "fullcodeline": "cert->ca = GetCAByName(cm, cert->issuerHash);"
    },
    {
        "line": 266,
        "fullcodeline": "if (cert->ca && cert->pathLengthSet) {"
    },
    {
        "line": 385,
        "fullcodeline": "verify == VERIFY_SKIP_DATE) {"
    },
    {
        "line": 401,
        "fullcodeline": "if (verify == VERIFY || verify == VERIFY_OCSP ||"
    },
    {
        "line": 402,
        "fullcodeline": "verify == VERIFY_NAME || verify == VERIFY_SKIP_DATE) {"
    },
    {
        "line": 147,
        "fullcodeline": "if (ret == ASN_CRIT_EXT_E)"
    },
    {
        "line": 214,
        "fullcodeline": "if (cert->ca && cert->extAuthKeyIdSet) {"
    },
    {
        "line": 267,
        "fullcodeline": "cert->maxPathLen = cert->pathLength;"
    },
    {
        "line": 148,
        "fullcodeline": "cert->criticalExt = ret;"
    },
    {
        "line": 216,
        "fullcodeline": "cert->ca = NULL;"
    },
    {
        "line": 282,
        "fullcodeline": "if (checkPathLen && cert->pathLengthSet) {"
    },
    {
        "line": 291,
        "fullcodeline": "if (decrementMaxPathLen && cert->ca->maxPathLen > 0) {"
    },
    {
        "line": 387,
        "fullcodeline": "if ((ret = ConfirmSignature(&cert->sigCtx,"
    },
    {
        "line": 405,
        "fullcodeline": "if (!ConfirmNameConstraints(cert->ca, cert)) {"
    },
    {
        "line": 293,
        "fullcodeline": "cert->maxPathLen = cert->ca->maxPathLen - 1;"
    },
    {
        "line": 307,
        "fullcodeline": "} else if (cert->ca && cert->isCA) {"
    },
    {
        "line": 394,
        "fullcodeline": "if (ret != WC_PENDING_E) {"
    },
    {
        "line": 283,
        "fullcodeline": "if (cert->pathLength < cert->ca->maxPathLen) {"
    },
    {
        "line": 294,
        "fullcodeline": "if (verify != NO_VERIFY && type != CA_TYPE &&"
    },
    {
        "line": 389,
        "fullcodeline": "cert->sigIndex - cert->certBegin,"
    },
    {
        "line": 285,
        "fullcodeline": "cert->maxPathLen = cert->pathLength;"
    },
    {
        "line": 295,
        "fullcodeline": "type != TRUSTED_PEER_TYPE) {"
    },
    {
        "line": 309,
        "fullcodeline": "if (cert->ca->maxPathLen > 0) {"
    },
    {
        "line": 278,
        "fullcodeline": "checkPathLen = 1;"
    },
    {
        "line": 287,
        "fullcodeline": "decrementMaxPathLen = 1;"
    },
    {
        "line": 298,
        "fullcodeline": "} else if (decrementMaxPathLen && cert->ca->maxPathLen == 0) {"
    },
    {
        "line": 299,
        "fullcodeline": "cert->maxPathLen = 0;"
    },
    {
        "line": 310,
        "fullcodeline": "cert->maxPathLen = cert->ca->maxPathLen - 1;"
    },
    {
        "line": 272,
        "fullcodeline": "if ((cert->extKeyUsage & KEYUSE_KEY_CERT_SIGN) != 0) {"
    },
    {
        "line": 273,
        "fullcodeline": "checkPathLen = 1;"
    },
    {
        "line": 300,
        "fullcodeline": "if (verify != NO_VERIFY && type != CA_TYPE &&"
    },
    {
        "line": 312,
        "fullcodeline": "cert->maxPathLen = 0;"
    },
    {
        "line": 275,
        "fullcodeline": "decrementMaxPathLen = 1;"
    },
    {
        "line": 301,
        "fullcodeline": "type != TRUSTED_PEER_TYPE) {"
    },
    {
        "line": 313,
        "fullcodeline": "if (verify != NO_VERIFY && type != CA_TYPE &&"
    },
    {
        "line": 314,
        "fullcodeline": "type != TRUSTED_PEER_TYPE) {"
    }
]