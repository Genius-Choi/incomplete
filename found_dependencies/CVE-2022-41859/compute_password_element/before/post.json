[
    {
        "line": 7,
        "fullcodeline": "BIGNUM *x_candidate = NULL, *rnd = NULL, *y_sqrd = NULL, *qr = NULL, *qnr = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "HMAC_CTX *ctx = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "uint8_t pwe_digest[SHA256_DIGEST_LENGTH], *prfbuf = NULL, *xbuf = NULL, *pm1buf = NULL, ctr;"
    },
    {
        "line": 10,
        "fullcodeline": "int nid, is_odd, primebitlen, primebytelen, ret = 0, found = 0, mask;"
    },
    {
        "line": 11,
        "fullcodeline": "int save, i, rbits, qr_or_qnr, save_is_odd = 0, cmp;"
    },
    {
        "line": 14,
        "fullcodeline": "ctx = HMAC_CTX_new();"
    },
    {
        "line": 46,
        "fullcodeline": "session->pwe = NULL;"
    },
    {
        "line": 47,
        "fullcodeline": "session->order = NULL;"
    },
    {
        "line": 48,
        "fullcodeline": "session->prime = NULL;"
    },
    {
        "line": 77,
        "fullcodeline": "primebitlen = BN_num_bits(session->prime);"
    },
    {
        "line": 78,
        "fullcodeline": "primebytelen = BN_num_bytes(session->prime);"
    },
    {
        "line": 106,
        "fullcodeline": "BN_bn2bin(rnd, pm1buf);"
    },
    {
        "line": 108,
        "fullcodeline": "save_is_odd = 0;"
    },
    {
        "line": 109,
        "fullcodeline": "found = 0;"
    },
    {
        "line": 110,
        "fullcodeline": "memset(xbuf, 0, primebytelen);"
    },
    {
        "line": 111,
        "fullcodeline": "ctr = 0;"
    },
    {
        "line": 202,
        "fullcodeline": "BN_bin2bn(xbuf, primebytelen, x_candidate);"
    },
    {
        "line": 208,
        "fullcodeline": "session->group_num = grp_num;"
    },
    {
        "line": 215,
        "fullcodeline": "BN_clear_free(x_candidate);"
    },
    {
        "line": 216,
        "fullcodeline": "BN_clear_free(y_sqrd);"
    },
    {
        "line": 217,
        "fullcodeline": "BN_clear_free(qr);"
    },
    {
        "line": 218,
        "fullcodeline": "BN_clear_free(qnr);"
    },
    {
        "line": 219,
        "fullcodeline": "BN_clear_free(rnd);"
    },
    {
        "line": 225,
        "fullcodeline": "HMAC_CTX_free(ctx);"
    },
    {
        "line": 15,
        "fullcodeline": "if (ctx == NULL) {"
    },
    {
        "line": 50,
        "fullcodeline": "if ((session->group = EC_GROUP_new_by_curve_name(nid)) == NULL) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (((rnd = consttime_BN()) == NULL) ||"
    },
    {
        "line": 67,
        "fullcodeline": "if (!EC_GROUP_get_curve(session->group, session->prime, NULL, NULL, NULL)) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (!EC_GROUP_get_order(session->group, session->order, NULL)) {"
    },
    {
        "line": 79,
        "fullcodeline": "if ((prfbuf = talloc_zero_array(session, uint8_t, primebytelen)) == NULL) {"
    },
    {
        "line": 83,
        "fullcodeline": "if ((xbuf = talloc_zero_array(request, uint8_t, primebytelen)) == NULL) {"
    },
    {
        "line": 87,
        "fullcodeline": "if ((pm1buf = talloc_zero_array(request, uint8_t, primebytelen)) == NULL) {"
    },
    {
        "line": 97,
        "fullcodeline": "} while (legendre(qr, session->prime, session->bnctx) != 1);"
    },
    {
        "line": 101,
        "fullcodeline": "} while (legendre(qnr, session->prime, session->bnctx) != -1);"
    },
    {
        "line": 103,
        "fullcodeline": "if (!BN_sub(rnd, session->prime, BN_value_one())) {"
    },
    {
        "line": 112,
        "fullcodeline": "while (ctr < 40) {"
    },
    {
        "line": 203,
        "fullcodeline": "if (!EC_POINT_set_compressed_coordinates(session->group, session->pwe,"
    },
    {
        "line": 16,
        "fullcodeline": "DEBUG(\"failed allocating HMAC context\");"
    },
    {
        "line": 22,
        "fullcodeline": "nid = NID_X9_62_prime256v1;"
    },
    {
        "line": 26,
        "fullcodeline": "nid = NID_secp384r1;"
    },
    {
        "line": 30,
        "fullcodeline": "nid = NID_secp521r1;"
    },
    {
        "line": 34,
        "fullcodeline": "nid = NID_X9_62_prime192v1;"
    },
    {
        "line": 38,
        "fullcodeline": "nid = NID_secp224r1;"
    },
    {
        "line": 42,
        "fullcodeline": "DEBUG(\"unknown group %d\", grp_num);"
    },
    {
        "line": 51,
        "fullcodeline": "DEBUG(\"unable to create EC_GROUP\");"
    },
    {
        "line": 62,
        "fullcodeline": "((y_sqrd = consttime_BN()) == NULL)) {"
    },
    {
        "line": 63,
        "fullcodeline": "DEBUG(\"unable to create bignums\");"
    },
    {
        "line": 68,
        "fullcodeline": "DEBUG(\"unable to get prime for GFp curve\");"
    },
    {
        "line": 73,
        "fullcodeline": "DEBUG(\"unable to get order for curve\");"
    },
    {
        "line": 80,
        "fullcodeline": "DEBUG(\"unable to alloc space for prf buffer\");"
    },
    {
        "line": 84,
        "fullcodeline": "DEBUG(\"unable to alloc space for x buffer\");"
    },
    {
        "line": 88,
        "fullcodeline": "DEBUG(\"unable to alloc space for pm1 buffer\");"
    },
    {
        "line": 96,
        "fullcodeline": "BN_rand_range(qr, session->prime);"
    },
    {
        "line": 100,
        "fullcodeline": "BN_rand_range(qnr, session->prime);"
    },
    {
        "line": 113,
        "fullcodeline": "ctr++;"
    },
    {
        "line": 120,
        "fullcodeline": "HMAC_Init_ex(ctx, allzero, SHA256_DIGEST_LENGTH, EVP_sha256(),NULL);"
    },
    {
        "line": 121,
        "fullcodeline": "HMAC_Update(ctx, (uint8_t *)token, sizeof(*token));"
    },
    {
        "line": 122,
        "fullcodeline": "HMAC_Update(ctx, (uint8_t const *)id_peer, id_peer_len);"
    },
    {
        "line": 123,
        "fullcodeline": "HMAC_Update(ctx, (uint8_t const *)id_server, id_server_len);"
    },
    {
        "line": 124,
        "fullcodeline": "HMAC_Update(ctx, (uint8_t const *)password, password_len);"
    },
    {
        "line": 125,
        "fullcodeline": "HMAC_Update(ctx, (uint8_t *)&ctr, sizeof(ctr));"
    },
    {
        "line": 126,
        "fullcodeline": "pwd_hmac_final(ctx, pwe_digest);"
    },
    {
        "line": 128,
        "fullcodeline": "BN_bin2bn(pwe_digest, SHA256_DIGEST_LENGTH, rnd);"
    },
    {
        "line": 129,
        "fullcodeline": "eap_pwd_kdf(pwe_digest, SHA256_DIGEST_LENGTH, \"EAP-pwd Hunting And Pecking\","
    },
    {
        "line": 146,
        "fullcodeline": "BN_bin2bn(prfbuf, primebytelen, x_candidate);"
    },
    {
        "line": 153,
        "fullcodeline": "cmp = const_time_memcmp(pm1buf, prfbuf, primebytelen);"
    },
    {
        "line": 154,
        "fullcodeline": "skip = const_time_fill_msb((unsigned int)cmp);"
    },
    {
        "line": 160,
        "fullcodeline": "is_odd = BN_is_odd(rnd) ? 1 : 0;"
    },
    {
        "line": 168,
        "fullcodeline": "do_equation(session->group, y_sqrd, x_candidate, session->bnctx);"
    },
    {
        "line": 169,
        "fullcodeline": "qr_or_qnr = is_quadratic_residue(y_sqrd, session->prime, qr, qnr, session->bnctx);"
    },
    {
        "line": 174,
        "fullcodeline": "qr_or_qnr = const_time_select(skip, 0, qr_or_qnr);"
    },
    {
        "line": 180,
        "fullcodeline": "mask = const_time_select(found, 0, -1);"
    },
    {
        "line": 186,
        "fullcodeline": "save = const_time_select(mask, qr_or_qnr, 0);"
    },
    {
        "line": 192,
        "fullcodeline": "mask = const_time_eq(save, 1);"
    },
    {
        "line": 194,
        "fullcodeline": "const_time_select_bin(mask, prfbuf, xbuf, primebytelen, xbuf);"
    },
    {
        "line": 195,
        "fullcodeline": "save_is_odd = const_time_select(mask, is_odd, save_is_odd);"
    },
    {
        "line": 196,
        "fullcodeline": "found = const_time_select(mask, -1, found);"
    },
    {
        "line": 211,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 221,
        "fullcodeline": "if (prfbuf) talloc_free(prfbuf);"
    },
    {
        "line": 222,
        "fullcodeline": "if (xbuf) talloc_free(xbuf);"
    },
    {
        "line": 223,
        "fullcodeline": "if (pm1buf) talloc_free(pm1buf);"
    },
    {
        "line": 61,
        "fullcodeline": "((x_candidate = consttime_BN()) == NULL) ||"
    },
    {
        "line": 130,
        "fullcodeline": "strlen(\"EAP-pwd Hunting And Pecking\"), prfbuf, primebitlen);"
    },
    {
        "line": 139,
        "fullcodeline": "if (primebitlen % 8) {"
    },
    {
        "line": 60,
        "fullcodeline": "((qnr = consttime_BN()) == NULL) ||"
    },
    {
        "line": 140,
        "fullcodeline": "rbits = 8 - (primebitlen % 8);"
    },
    {
        "line": 144,
        "fullcodeline": "prfbuf[0] >>= rbits;"
    },
    {
        "line": 59,
        "fullcodeline": "((qr = consttime_BN()) == NULL) ||"
    },
    {
        "line": 141,
        "fullcodeline": "for (i = primebytelen - 1; i > 0; i--) {"
    },
    {
        "line": 58,
        "fullcodeline": "((session->prime = consttime_BN()) == NULL) ||"
    },
    {
        "line": 142,
        "fullcodeline": "prfbuf[i] = (prfbuf[i - 1] << (8 - rbits)) | (prfbuf[i] >> rbits);"
    },
    {
        "line": 57,
        "fullcodeline": "((session->order = consttime_BN()) == NULL) ||"
    },
    {
        "line": 56,
        "fullcodeline": "((session->pwe = EC_POINT_new(session->group)) == NULL) ||"
    }
]