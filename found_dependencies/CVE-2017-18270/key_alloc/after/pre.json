[
    {
        "line": 6,
        "fullcodeline": "struct key_user *user = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "key = ERR_PTR(-EINVAL);"
    },
    {
        "line": 23,
        "fullcodeline": "desclen = strlen(desc);"
    },
    {
        "line": 24,
        "fullcodeline": "quotalen = desclen + 1 + type->def_datalen;"
    },
    {
        "line": 27,
        "fullcodeline": "user = key_user_lookup(uid);"
    },
    {
        "line": 53,
        "fullcodeline": "key = kmem_cache_zalloc(key_jar, GFP_KERNEL);"
    },
    {
        "line": 57,
        "fullcodeline": "key->index_key.desc_len = desclen;"
    },
    {
        "line": 58,
        "fullcodeline": "key->index_key.description = kmemdup(desc, desclen + 1, GFP_KERNEL);"
    },
    {
        "line": 62,
        "fullcodeline": "refcount_set(&key->usage, 1);"
    },
    {
        "line": 63,
        "fullcodeline": "init_rwsem(&key->sem);"
    },
    {
        "line": 64,
        "fullcodeline": "lockdep_set_class(&key->sem, &type->lock_class);"
    },
    {
        "line": 65,
        "fullcodeline": "key->index_key.type = type;"
    },
    {
        "line": 66,
        "fullcodeline": "key->user = user;"
    },
    {
        "line": 67,
        "fullcodeline": "key->quotalen = quotalen;"
    },
    {
        "line": 68,
        "fullcodeline": "key->datalen = type->def_datalen;"
    },
    {
        "line": 69,
        "fullcodeline": "key->uid = uid;"
    },
    {
        "line": 70,
        "fullcodeline": "key->gid = gid;"
    },
    {
        "line": 71,
        "fullcodeline": "key->perm = perm;"
    },
    {
        "line": 72,
        "fullcodeline": "key->restrict_link = restrict_link;"
    },
    {
        "line": 86,
        "fullcodeline": "ret = security_key_alloc(key, cred, flags);"
    },
    {
        "line": 91,
        "fullcodeline": "atomic_inc(&user->nkeys);"
    },
    {
        "line": 92,
        "fullcodeline": "key_alloc_serial(key);"
    },
    {
        "line": 98,
        "fullcodeline": "kfree(key->description);"
    },
    {
        "line": 99,
        "fullcodeline": "kmem_cache_free(key_jar, key);"
    },
    {
        "line": 106,
        "fullcodeline": "key_user_put(user);"
    },
    {
        "line": 107,
        "fullcodeline": "key = ERR_PTR(ret);"
    },
    {
        "line": 111,
        "fullcodeline": "kmem_cache_free(key_jar, key);"
    },
    {
        "line": 119,
        "fullcodeline": "key_user_put(user);"
    },
    {
        "line": 121,
        "fullcodeline": "key = ERR_PTR(-ENOMEM);"
    },
    {
        "line": 125,
        "fullcodeline": "spin_unlock(&user->lock);"
    },
    {
        "line": 126,
        "fullcodeline": "key_user_put(user);"
    },
    {
        "line": 127,
        "fullcodeline": "key = ERR_PTR(-EDQUOT);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!desc || !*desc)"
    },
    {
        "line": 28,
        "fullcodeline": "if (!user)"
    },
    {
        "line": 33,
        "fullcodeline": "if (!(flags & KEY_ALLOC_NOT_IN_QUOTA)) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (!key)"
    },
    {
        "line": 59,
        "fullcodeline": "if (!key->index_key.description)"
    },
    {
        "line": 74,
        "fullcodeline": "if (!(flags & KEY_ALLOC_NOT_IN_QUOTA))"
    },
    {
        "line": 76,
        "fullcodeline": "if (flags & KEY_ALLOC_BUILT_IN)"
    },
    {
        "line": 78,
        "fullcodeline": "if (flags & KEY_ALLOC_UID_KEYRING)"
    },
    {
        "line": 87,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 100,
        "fullcodeline": "if (!(flags & KEY_ALLOC_NOT_IN_QUOTA)) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (!(flags & KEY_ALLOC_NOT_IN_QUOTA)) {"
    },
    {
        "line": 16,
        "fullcodeline": "ret = type->vet_description(desc);"
    },
    {
        "line": 34,
        "fullcodeline": "unsigned maxkeys = uid_eq(uid, GLOBAL_ROOT_UID) ?"
    },
    {
        "line": 36,
        "fullcodeline": "unsigned maxbytes = uid_eq(uid, GLOBAL_ROOT_UID) ?"
    },
    {
        "line": 39,
        "fullcodeline": "spin_lock(&user->lock);"
    },
    {
        "line": 47,
        "fullcodeline": "user->qnkeys++;"
    },
    {
        "line": 48,
        "fullcodeline": "user->qnbytes += quotalen;"
    },
    {
        "line": 49,
        "fullcodeline": "spin_unlock(&user->lock);"
    },
    {
        "line": 75,
        "fullcodeline": "key->flags |= 1 << KEY_FLAG_IN_QUOTA;"
    },
    {
        "line": 77,
        "fullcodeline": "key->flags |= 1 << KEY_FLAG_BUILTIN;"
    },
    {
        "line": 79,
        "fullcodeline": "key->flags |= 1 << KEY_FLAG_UID_KEYRING;"
    },
    {
        "line": 101,
        "fullcodeline": "spin_lock(&user->lock);"
    },
    {
        "line": 102,
        "fullcodeline": "user->qnkeys--;"
    },
    {
        "line": 103,
        "fullcodeline": "user->qnbytes -= quotalen;"
    },
    {
        "line": 104,
        "fullcodeline": "spin_unlock(&user->lock);"
    },
    {
        "line": 114,
        "fullcodeline": "spin_lock(&user->lock);"
    },
    {
        "line": 115,
        "fullcodeline": "user->qnkeys--;"
    },
    {
        "line": 116,
        "fullcodeline": "user->qnbytes -= quotalen;"
    },
    {
        "line": 117,
        "fullcodeline": "spin_unlock(&user->lock);"
    },
    {
        "line": 17,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (!(flags & KEY_ALLOC_QUOTA_OVERRUN)) {"
    },
    {
        "line": 18,
        "fullcodeline": "key = ERR_PTR(ret);"
    },
    {
        "line": 41,
        "fullcodeline": "if (user->qnkeys + 1 >= maxkeys ||"
    },
    {
        "line": 43,
        "fullcodeline": "user->qnbytes + quotalen < user->qnbytes)"
    },
    {
        "line": 42,
        "fullcodeline": "user->qnbytes + quotalen >= maxbytes ||"
    }
]