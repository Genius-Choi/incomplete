[
    {
        "line": 8,
        "fullcodeline": "allocator = SimpleStorageAllocator()"
    },
    {
        "line": 10,
        "fullcodeline": "ret: Dict[str, Dict] = {}"
    },
    {
        "line": 12,
        "fullcodeline": "for node in vyper_module.get_children(vy_ast.FunctionDef):"
    },
    {
        "line": 39,
        "fullcodeline": "for node in vyper_module.get_children(vy_ast.VariableDecl):"
    },
    {
        "line": 17,
        "fullcodeline": "variable_name = f\"nonreentrant.{type_.nonreentrant}\""
    },
    {
        "line": 30,
        "fullcodeline": "slot = allocator.allocate_slot(1, variable_name)"
    },
    {
        "line": 32,
        "fullcodeline": "type_.set_reentrancy_key_position(StorageSlot(slot))"
    },
    {
        "line": 36,
        "fullcodeline": "ret[variable_name] = {\"type\": \"nonreentrant lock\", \"slot\": slot}"
    },
    {
        "line": 45,
        "fullcodeline": "type_ = varinfo.typ"
    },
    {
        "line": 51,
        "fullcodeline": "n_slots = type_.storage_size_in_words"
    },
    {
        "line": 52,
        "fullcodeline": "slot = allocator.allocate_slot(n_slots, node.target.id)"
    },
    {
        "line": 54,
        "fullcodeline": "varinfo.set_position(StorageSlot(slot))"
    },
    {
        "line": 58,
        "fullcodeline": "ret[node.target.id] = {\"type\": str(type_), \"slot\": slot}"
    },
    {
        "line": 14,
        "fullcodeline": "if type_.nonreentrant is None:"
    },
    {
        "line": 22,
        "fullcodeline": "if variable_name in ret:"
    },
    {
        "line": 41,
        "fullcodeline": "if node.is_constant or node.is_immutable:"
    },
    {
        "line": 24,
        "fullcodeline": "type_.set_reentrancy_key_position(StorageSlot(_slot))"
    }
]