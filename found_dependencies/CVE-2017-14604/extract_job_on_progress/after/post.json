[
    {
        "line": 6,
        "fullcodeline": "ExtractJob *extract_job = user_data;"
    },
    {
        "line": 7,
        "fullcodeline": "CommonJob *common = user_data;"
    },
    {
        "line": 19,
        "fullcodeline": "source_file = autoar_extractor_get_source_file (extractor);"
    },
    {
        "line": 21,
        "fullcodeline": "nautilus_progress_info_take_status (common->progress,"
    },
    {
        "line": 24,
        "fullcodeline": "archive_total_decompressed_size = autoar_extractor_get_total_size (extractor);"
    },
    {
        "line": 26,
        "fullcodeline": "archive_decompress_progress = (gdouble) archive_current_decompressed_size /"
    },
    {
        "line": 29,
        "fullcodeline": "archive_weight = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "job_progress = archive_decompress_progress * archive_weight + extract_job->base_progress;"
    },
    {
        "line": 38,
        "fullcodeline": "elapsed = g_timer_elapsed (common->time, NULL);"
    },
    {
        "line": 40,
        "fullcodeline": "transfer_rate = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "remaining_time = -1;"
    },
    {
        "line": 43,
        "fullcodeline": "job_completed_size = job_progress * extract_job->total_compressed_size;"
    },
    {
        "line": 81,
        "fullcodeline": "nautilus_progress_info_take_details (common->progress, details);"
    },
    {
        "line": 91,
        "fullcodeline": "nautilus_progress_info_set_progress (common->progress, job_progress, 1);"
    },
    {
        "line": 22,
        "fullcodeline": "f (_(\"Extracting \u201c%B\u201d\"), source_file));"
    },
    {
        "line": 45,
        "fullcodeline": "if (elapsed > 0)"
    },
    {
        "line": 49,
        "fullcodeline": "if (transfer_rate > 0)"
    },
    {
        "line": 55,
        "fullcodeline": "if (elapsed < SECONDS_NEEDED_FOR_RELIABLE_TRANSFER_RATE ||"
    },
    {
        "line": 83,
        "fullcodeline": "if (elapsed > SECONDS_NEEDED_FOR_APROXIMATE_TRANSFER_RATE)"
    },
    {
        "line": 27,
        "fullcodeline": "(gdouble) archive_total_decompressed_size;"
    },
    {
        "line": 32,
        "fullcodeline": "archive_weight = (gdouble) extract_job->archive_compressed_size /"
    },
    {
        "line": 47,
        "fullcodeline": "transfer_rate = job_completed_size / elapsed;"
    },
    {
        "line": 51,
        "fullcodeline": "remaining_time = (extract_job->total_compressed_size - job_completed_size) /"
    },
    {
        "line": 56,
        "fullcodeline": "transfer_rate == 0)"
    },
    {
        "line": 61,
        "fullcodeline": "details = f (_(\"%S / %S\"), job_completed_size, extract_job->total_compressed_size);"
    },
    {
        "line": 85,
        "fullcodeline": "nautilus_progress_info_set_remaining_time (common->progress,"
    },
    {
        "line": 87,
        "fullcodeline": "nautilus_progress_info_set_elapsed_time (common->progress,"
    },
    {
        "line": 73,
        "fullcodeline": "details = f (ngettext (\"%S / %S \\xE2\\x80\\x94 %T left (%S/sec)\","
    },
    {
        "line": 33,
        "fullcodeline": "(gdouble) extract_job->total_compressed_size;"
    },
    {
        "line": 78,
        "fullcodeline": "(goffset) transfer_rate);"
    },
    {
        "line": 75,
        "fullcodeline": "seconds_count_format_time_units (remaining_time)),"
    }
]