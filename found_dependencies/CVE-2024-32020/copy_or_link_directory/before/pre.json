[
    {
        "line": 8,
        "fullcodeline": "mkdir_if_missing(dest->buf, 0777);"
    },
    {
        "line": 10,
        "fullcodeline": "iter = dir_iterator_begin(src->buf, DIR_ITERATOR_PEDANTIC);"
    },
    {
        "line": 15,
        "fullcodeline": "strbuf_addch(src, '/');"
    },
    {
        "line": 16,
        "fullcodeline": "src_len = src->len;"
    },
    {
        "line": 17,
        "fullcodeline": "strbuf_addch(dest, '/');"
    },
    {
        "line": 18,
        "fullcodeline": "dest_len = dest->len;"
    },
    {
        "line": 12,
        "fullcodeline": "if (!iter)"
    },
    {
        "line": 20,
        "fullcodeline": "while ((iter_status = dir_iterator_advance(iter)) == ITER_OK) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (iter_status != ITER_DONE) {"
    },
    {
        "line": 13,
        "fullcodeline": "die_errno(_(\"failed to start iterator over '%s'\"), src->buf);"
    },
    {
        "line": 21,
        "fullcodeline": "strbuf_setlen(src, src_len);"
    },
    {
        "line": 22,
        "fullcodeline": "strbuf_addstr(src, iter->relative_path);"
    },
    {
        "line": 23,
        "fullcodeline": "strbuf_setlen(dest, dest_len);"
    },
    {
        "line": 24,
        "fullcodeline": "strbuf_addstr(dest, iter->relative_path);"
    },
    {
        "line": 74,
        "fullcodeline": "strbuf_setlen(src, src_len);"
    },
    {
        "line": 75,
        "fullcodeline": "die(_(\"failed to iterate over '%s'\"), src->buf);"
    },
    {
        "line": 26,
        "fullcodeline": "if (S_ISLNK(iter->st.st_mode))"
    },
    {
        "line": 30,
        "fullcodeline": "if (S_ISDIR(iter->st.st_mode)) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (!fspathcmp(iter->relative_path, \"info/alternates\")) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (unlink(dest->buf) && errno != ENOENT)"
    },
    {
        "line": 43,
        "fullcodeline": "if (!option_no_hardlinks) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (copy_file_with_time(dest->buf, src->buf, 0666))"
    },
    {
        "line": 27,
        "fullcodeline": "die(_(\"symlink '%s' exists, refusing to clone with --local\"),"
    },
    {
        "line": 31,
        "fullcodeline": "mkdir_if_missing(dest->buf, 0777);"
    },
    {
        "line": 37,
        "fullcodeline": "copy_alternates(src, src_repo);"
    },
    {
        "line": 42,
        "fullcodeline": "die_errno(_(\"failed to unlink '%s'\"), dest->buf);"
    },
    {
        "line": 67,
        "fullcodeline": "option_no_hardlinks = 1;"
    },
    {
        "line": 70,
        "fullcodeline": "die_errno(_(\"failed to copy file to '%s'\"), dest->buf);"
    },
    {
        "line": 44,
        "fullcodeline": "if (!link(src->buf, dest->buf)) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (option_local > 0)"
    },
    {
        "line": 66,
        "fullcodeline": "die_errno(_(\"failed to create link '%s'\"), dest->buf);"
    },
    {
        "line": 53,
        "fullcodeline": "if (lstat(dest->buf, &st))"
    },
    {
        "line": 55,
        "fullcodeline": "if (st.st_mode != iter->st.st_mode ||"
    },
    {
        "line": 54,
        "fullcodeline": "die(_(\"hardlink cannot be checked at '%s'\"), dest->buf);"
    },
    {
        "line": 60,
        "fullcodeline": "st.st_gid != iter->st.st_gid)"
    },
    {
        "line": 61,
        "fullcodeline": "die(_(\"hardlink different from source at '%s'\"), dest->buf);"
    },
    {
        "line": 59,
        "fullcodeline": "st.st_uid != iter->st.st_uid ||"
    },
    {
        "line": 58,
        "fullcodeline": "st.st_size != iter->st.st_size ||"
    },
    {
        "line": 57,
        "fullcodeline": "st.st_dev != iter->st.st_dev ||"
    },
    {
        "line": 56,
        "fullcodeline": "st.st_ino != iter->st.st_ino ||"
    }
]