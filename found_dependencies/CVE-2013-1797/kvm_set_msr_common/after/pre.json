[
    {
        "line": 3,
        "fullcodeline": "bool pr = false;"
    },
    {
        "line": 4,
        "fullcodeline": "u32 msr = msr_info->index;"
    },
    {
        "line": 5,
        "fullcodeline": "u64 data = msr_info->data;"
    },
    {
        "line": 19,
        "fullcodeline": "data &= ~(u64)0x40;\t/* ignore flush filter disable */"
    },
    {
        "line": 20,
        "fullcodeline": "data &= ~(u64)0x100;\t/* ignore ignne emulation enable */"
    },
    {
        "line": 21,
        "fullcodeline": "data &= ~(u64)0x8;\t/* ignore TLB cache disable */"
    },
    {
        "line": 44,
        "fullcodeline": "vcpu_unimpl(vcpu, \"%s: MSR_IA32_DEBUGCTLMSR 0x%llx, nop\\n\","
    },
    {
        "line": 124,
        "fullcodeline": "accumulate_steal_time(vcpu);"
    },
    {
        "line": 127,
        "fullcodeline": "kvm_make_request(KVM_REQ_STEAL_UPDATE, vcpu);"
    },
    {
        "line": 167,
        "fullcodeline": "pr = true;"
    },
    {
        "line": 187,
        "fullcodeline": "case HV_X64_MSR_GUEST_OS_ID ... HV_X64_MSR_SINT15:"
    },
    {
        "line": 17,
        "fullcodeline": "return set_efer(vcpu, data);"
    },
    {
        "line": 22,
        "fullcodeline": "if (data != 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (data != 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (!data) {"
    },
    {
        "line": 48,
        "fullcodeline": "return set_msr_mtrr(vcpu, msr, data);"
    },
    {
        "line": 53,
        "fullcodeline": "return kvm_x2apic_msr_write(vcpu, msr, data);"
    },
    {
        "line": 58,
        "fullcodeline": "if (guest_cpuid_has_tsc_adjust(vcpu)) {"
    },
    {
        "line": 77,
        "fullcodeline": "kvmclock_reset(vcpu);"
    },
    {
        "line": 80,
        "fullcodeline": "kvm_make_request(KVM_REQ_CLOCK_UPDATE, vcpu);"
    },
    {
        "line": 86,
        "fullcodeline": "gpa_offset = data & ~(PAGE_MASK | 1);"
    },
    {
        "line": 109,
        "fullcodeline": "if (data & KVM_STEAL_RESERVED_MASK)"
    },
    {
        "line": 112,
        "fullcodeline": "if (kvm_gfn_to_hva_cache_init(vcpu->kvm, &vcpu->arch.st.stime,"
    },
    {
        "line": 137,
        "fullcodeline": "case MSR_IA32_MC0_CTL ... MSR_IA32_MC0_CTL + 4 * KVM_MAX_MCE_BANKS - 1:"
    },
    {
        "line": 138,
        "fullcodeline": "return set_msr_mce(vcpu, msr, data);"
    },
    {
        "line": 151,
        "fullcodeline": "if (data != 0)"
    },
    {
        "line": 170,
        "fullcodeline": "if (kvm_pmu_msr(vcpu, msr))"
    },
    {
        "line": 188,
        "fullcodeline": "if (kvm_hv_msr_partition_wide(msr)) {"
    },
    {
        "line": 214,
        "fullcodeline": "if (msr && (msr == vcpu->kvm->arch.xen_hvm_config.msr))"
    },
    {
        "line": 216,
        "fullcodeline": "if (kvm_pmu_msr(vcpu, msr))"
    },
    {
        "line": 218,
        "fullcodeline": "if (!ignore_msrs) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (unlikely(!sched_info_on()))"
    },
    {
        "line": 113,
        "fullcodeline": "data & KVM_STEAL_VALID_BITS))"
    },
    {
        "line": 118,
        "fullcodeline": "if (!(data & KVM_MSR_ENABLED))"
    },
    {
        "line": 173,
        "fullcodeline": "if (pr || data != 0)"
    },
    {
        "line": 190,
        "fullcodeline": "mutex_lock(&vcpu->kvm->lock);"
    },
    {
        "line": 191,
        "fullcodeline": "r = set_msr_hyperv_pw(vcpu, msr, data);"
    },
    {
        "line": 204,
        "fullcodeline": "if (!guest_cpuid_has_osvw(vcpu))"
    },
    {
        "line": 209,
        "fullcodeline": "if (!guest_cpuid_has_osvw(vcpu))"
    },
    {
        "line": 83,
        "fullcodeline": "if (!(data & 1))"
    },
    {
        "line": 89,
        "fullcodeline": "if (gpa_offset & (sizeof(struct pvclock_vcpu_time_info) - 1))"
    },
    {
        "line": 93,
        "fullcodeline": "&vcpu->arch.pv_time, data & ~1ULL))"
    },
    {
        "line": 171,
        "fullcodeline": "return kvm_pmu_set_msr(vcpu, msr, data);"
    },
    {
        "line": 215,
        "fullcodeline": "return xen_hvm_config(vcpu, data);"
    },
    {
        "line": 217,
        "fullcodeline": "return kvm_pmu_set_msr(vcpu, msr, data);"
    },
    {
        "line": 39,
        "fullcodeline": "} else if (data & ~(DEBUGCTLMSR_LBR | DEBUGCTLMSR_BTF)) {"
    },
    {
        "line": 60,
        "fullcodeline": "u64 adj = data - vcpu->arch.ia32_tsc_adjust_msr;"
    },
    {
        "line": 195,
        "fullcodeline": "return set_msr_hyperv(vcpu, msr, data);"
    }
]