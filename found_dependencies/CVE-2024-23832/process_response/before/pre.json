[
    {
        "line": 2,
        "fullcodeline": "@response_code = response.code"
    },
    {
        "line": 1,
        "fullcodeline": "def process_response(response, terminal = false)"
    },
    {
        "line": 3,
        "fullcodeline": "return nil if response.code != 200"
    },
    {
        "line": 5,
        "fullcodeline": "if ['application/activity+json', 'application/ld+json'].include?(response.mime_type)"
    },
    {
        "line": 6,
        "fullcodeline": "body = response.body_with_limit"
    },
    {
        "line": 7,
        "fullcodeline": "json = body_to_json(body)"
    },
    {
        "line": 9,
        "fullcodeline": "[json['id'], { prefetched_body: body, id: true }] if supported_context?(json) && (equals_or_includes_any?(json['type'], ActivityPub::FetchRemoteActorService::SUPPORTED_TYPES) || expected_type?(json))"
    },
    {
        "line": 11,
        "fullcodeline": "link_header = response['Link'] && parse_link_header(response)"
    },
    {
        "line": 13,
        "fullcodeline": "if link_header&.find_link(%w(rel alternate))"
    },
    {
        "line": 14,
        "fullcodeline": "process_link_headers(link_header)"
    },
    {
        "line": 15,
        "fullcodeline": "elsif response.mime_type == 'text/html'"
    },
    {
        "line": 16,
        "fullcodeline": "process_html(response)"
    }
]