[
    {
        "line": 5,
        "fullcodeline": "win_T\t*wp_other = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int\t\tused_max_fill_other = FALSE;"
    },
    {
        "line": 7,
        "fullcodeline": "int\t\tused_max_fill_curwin = FALSE;"
    },
    {
        "line": 10,
        "fullcodeline": "need_diff_redraw = FALSE;"
    },
    {
        "line": 40,
        "fullcodeline": "if (wp_other != NULL && curwin->w_p_scb)"
    },
    {
        "line": 14,
        "fullcodeline": "redraw_win_later(wp, SOME_VALID);"
    },
    {
        "line": 23,
        "fullcodeline": "n = diff_check(wp, wp->w_topline);"
    },
    {
        "line": 15,
        "fullcodeline": "if (wp != curwin)"
    },
    {
        "line": 24,
        "fullcodeline": "if ((wp != curwin && wp->w_topfill > 0) || n > 0)"
    },
    {
        "line": 16,
        "fullcodeline": "wp_other = wp;"
    },
    {
        "line": 36,
        "fullcodeline": "check_topfill(wp, FALSE);"
    },
    {
        "line": 45,
        "fullcodeline": "diff_set_topline(wp_other, curwin);"
    },
    {
        "line": 26,
        "fullcodeline": "if (wp->w_topfill > n)"
    },
    {
        "line": 27,
        "fullcodeline": "wp->w_topfill = (n < 0 ? 0 : n);"
    },
    {
        "line": 49,
        "fullcodeline": "diff_set_topline(curwin, wp_other);"
    },
    {
        "line": 28,
        "fullcodeline": "else if (n > 0 && n > wp->w_topfill)"
    },
    {
        "line": 30,
        "fullcodeline": "wp->w_topfill = n;"
    },
    {
        "line": 31,
        "fullcodeline": "if (wp == curwin)"
    },
    {
        "line": 32,
        "fullcodeline": "used_max_fill_curwin = TRUE;"
    },
    {
        "line": 33,
        "fullcodeline": "else if (wp_other != NULL)"
    },
    {
        "line": 34,
        "fullcodeline": "used_max_fill_other = TRUE;"
    }
]