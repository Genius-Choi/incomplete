[
    {
        "line": 2,
        "fullcodeline": "input.respond_to?(:write) or"
    },
    {
        "line": 5,
        "fullcodeline": "opthash = {"
    },
    {
        "line": 9,
        "fullcodeline": "case options.size"
    },
    {
        "line": 29,
        "fullcodeline": "return super(input, opthash) if opthash[:format] != :yaml"
    },
    {
        "line": 38,
        "fullcodeline": "case data"
    },
    {
        "line": 3,
        "fullcodeline": "return ::File.open(input, 'r') { |io| load(io, *options) }"
    },
    {
        "line": 6,
        "fullcodeline": ":format => :yaml,"
    },
    {
        "line": 7,
        "fullcodeline": ":session => false,"
    },
    {
        "line": 10,
        "fullcodeline": "when 0"
    },
    {
        "line": 32,
        "fullcodeline": "data = YAML.load(input)"
    },
    {
        "line": 39,
        "fullcodeline": "when Array"
    },
    {
        "line": 11,
        "fullcodeline": "when 1"
    },
    {
        "line": 41,
        "fullcodeline": "data.each { |cookie|"
    },
    {
        "line": 12,
        "fullcodeline": "case options = options.first"
    },
    {
        "line": 45,
        "fullcodeline": "data.each { |domain, paths|"
    },
    {
        "line": 21,
        "fullcodeline": "opthash[:format], options = options"
    },
    {
        "line": 34,
        "fullcodeline": "@logger.warn \"unloadable YAML cookie data discarded\" if @logger"
    },
    {
        "line": 14,
        "fullcodeline": "opthash[:format] = options"
    },
    {
        "line": 22,
        "fullcodeline": "if hash = Hash.try_convert(options)"
    },
    {
        "line": 16,
        "fullcodeline": "if hash = Hash.try_convert(options)"
    },
    {
        "line": 23,
        "fullcodeline": "opthash.update(hash)"
    },
    {
        "line": 53,
        "fullcodeline": "@logger.warn \"incompatible YAML cookie data discarded\" if @logger"
    },
    {
        "line": 17,
        "fullcodeline": "opthash.update(hash)"
    }
]