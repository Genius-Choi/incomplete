[
    {
        "line": 2,
        "fullcodeline": "output.respond_to?(:write) or"
    },
    {
        "line": 5,
        "fullcodeline": "opthash = {"
    },
    {
        "line": 28,
        "fullcodeline": "nstore = HashStore.new"
    },
    {
        "line": 30,
        "fullcodeline": "each { |cookie|"
    },
    {
        "line": 40,
        "fullcodeline": "yaml = YAML.dump(nstore.instance_variable_get(:@jar))"
    },
    {
        "line": 43,
        "fullcodeline": "yaml.gsub!(%r{^(    [^ ].*: !ruby/object:)HTTP::Cookie$}) {"
    },
    {
        "line": 46,
        "fullcodeline": "yaml.gsub!(%r{^(      expires: )(?:|!!null|(.+?)) *$}) {"
    },
    {
        "line": 9,
        "fullcodeline": "case options.size"
    },
    {
        "line": 25,
        "fullcodeline": "return super(output, opthash) if opthash[:format] != :yaml"
    },
    {
        "line": 3,
        "fullcodeline": "return open(output, 'w') { |io| save(io, *options) }"
    },
    {
        "line": 6,
        "fullcodeline": ":format => :yaml,"
    },
    {
        "line": 7,
        "fullcodeline": ":session => false,"
    },
    {
        "line": 10,
        "fullcodeline": "when 0"
    },
    {
        "line": 11,
        "fullcodeline": "when 1"
    },
    {
        "line": 12,
        "fullcodeline": "case options = options.first"
    },
    {
        "line": 19,
        "fullcodeline": "opthash[:format], options = options"
    },
    {
        "line": 14,
        "fullcodeline": "opthash[:format] = options"
    },
    {
        "line": 20,
        "fullcodeline": "opthash.update(options) if options"
    },
    {
        "line": 16,
        "fullcodeline": "opthash.update(options) if options"
    }
]