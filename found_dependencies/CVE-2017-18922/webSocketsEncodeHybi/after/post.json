[
    {
        "line": 3,
        "fullcodeline": "int blen, ret = -1, sz = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "unsigned char opcode = '\\0'; /* TODO: option! */"
    },
    {
        "line": 6,
        "fullcodeline": "ws_ctx_t *wsctx = (ws_ctx_t *)cl->wsctx;"
    },
    {
        "line": 22,
        "fullcodeline": "header = (ws_header_t *)wsctx->codeBufEncode;"
    },
    {
        "line": 33,
        "fullcodeline": "header->b0 = 0x80 | (opcode & 0x0f);"
    },
    {
        "line": 60,
        "fullcodeline": "*dst = wsctx->codeBufEncode;"
    },
    {
        "line": 17,
        "fullcodeline": "if (!len) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (blen <= 125) {"
    },
    {
        "line": 25,
        "fullcodeline": "opcode = WS_OPCODE_TEXT_FRAME;"
    },
    {
        "line": 27,
        "fullcodeline": "blen = B64LEN(len);"
    },
    {
        "line": 35,
        "fullcodeline": "header->b1 = (uint8_t)blen;"
    },
    {
        "line": 36,
        "fullcodeline": "sz = 2;"
    },
    {
        "line": 29,
        "fullcodeline": "opcode = WS_OPCODE_BINARY_FRAME;"
    },
    {
        "line": 30,
        "fullcodeline": "blen = len;"
    },
    {
        "line": 48,
        "fullcodeline": "if (-1 == (ret = b64_ntop((unsigned char *)src, len, wsctx->codeBufEncode + sz, sizeof(wsctx->codeBufEncode) - sz))) {"
    },
    {
        "line": 56,
        "fullcodeline": "memcpy(wsctx->codeBufEncode + sz, src, len);"
    },
    {
        "line": 57,
        "fullcodeline": "ret =  sz + len;"
    },
    {
        "line": 37,
        "fullcodeline": "} else if (blen <= 65536) {"
    },
    {
        "line": 49,
        "fullcodeline": "rfbErr(\"%s: Base 64 encode failed\\n\", __func__);"
    },
    {
        "line": 38,
        "fullcodeline": "header->b1 = 0x7e;"
    },
    {
        "line": 39,
        "fullcodeline": "header->u.s16.l16 = WS_HTON16((uint16_t)blen);"
    },
    {
        "line": 40,
        "fullcodeline": "sz = 4;"
    },
    {
        "line": 53,
        "fullcodeline": "ret += sz;"
    },
    {
        "line": 42,
        "fullcodeline": "header->b1 = 0x7f;"
    },
    {
        "line": 43,
        "fullcodeline": "header->u.s64.l64 = WS_HTON64(blen);"
    },
    {
        "line": 44,
        "fullcodeline": "sz = 10;"
    },
    {
        "line": 51,
        "fullcodeline": "if (ret != blen)"
    },
    {
        "line": 52,
        "fullcodeline": "rfbErr(\"%s: Base 64 encode; something weird happened\\n\", __func__);"
    }
]