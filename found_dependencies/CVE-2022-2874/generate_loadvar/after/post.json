[
    {
        "line": 12,
        "fullcodeline": "generate_LOAD(cctx, ISN_LOADOPT, 0, name, type);"
    },
    {
        "line": 26,
        "fullcodeline": "generate_LOAD(cctx, ISN_LOADB, 0, name + 2, type);"
    },
    {
        "line": 29,
        "fullcodeline": "generate_LOAD(cctx, ISN_LOADW, 0, name + 2, type);"
    },
    {
        "line": 32,
        "fullcodeline": "generate_LOAD(cctx, ISN_LOADT, 0, name + 2, type);"
    },
    {
        "line": 35,
        "fullcodeline": "compile_load_scriptvar(cctx,"
    },
    {
        "line": 40,
        "fullcodeline": "generate_LOAD(cctx, ISN_LOADENV, 0, name, type);"
    },
    {
        "line": 43,
        "fullcodeline": "generate_LOAD(cctx, ISN_LOADREG, name[1], NULL, &t_string);"
    },
    {
        "line": 46,
        "fullcodeline": "generate_LOADV(cctx, name + 2);"
    },
    {
        "line": 15,
        "fullcodeline": "if (vim_strchr(name, AUTOLOAD_CHAR) == NULL)"
    },
    {
        "line": 36,
        "fullcodeline": "name + (name[1] == ':' ? 2 : 0), NULL, NULL);"
    },
    {
        "line": 49,
        "fullcodeline": "if (cctx->ctx_skip != SKIP_YES)"
    },
    {
        "line": 17,
        "fullcodeline": "if (name[2] == NUL)"
    },
    {
        "line": 23,
        "fullcodeline": "generate_LOAD(cctx, ISN_LOADAUTO, 0, name, type);"
    },
    {
        "line": 51,
        "fullcodeline": "if (lvar->lv_from_outer > 0)"
    },
    {
        "line": 18,
        "fullcodeline": "generate_instr_type(cctx, ISN_LOADGDICT, &t_dict_any);"
    },
    {
        "line": 52,
        "fullcodeline": "generate_LOADOUTER(cctx, lvar->lv_idx, lvar->lv_from_outer,"
    },
    {
        "line": 20,
        "fullcodeline": "generate_LOAD(cctx, ISN_LOADG, 0, name + 2, type);"
    },
    {
        "line": 55,
        "fullcodeline": "generate_LOAD(cctx, ISN_LOAD, lvar->lv_idx, NULL, type);"
    }
]