[
    {
        "line": 5,
        "fullcodeline": "Bit_Chain abs_dat = { NULL };"
    },
    {
        "line": 8,
        "fullcodeline": "BITCODE_BL num = dwg->num_objects;"
    },
    {
        "line": 9,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "int realloced = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "abs_dat = *dat;"
    },
    {
        "line": 17,
        "fullcodeline": "dat->byte = address;"
    },
    {
        "line": 18,
        "fullcodeline": "dat->bit = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "realloced = dwg_add_object (dwg);"
    },
    {
        "line": 31,
        "fullcodeline": "obj = &dwg->object[num];"
    },
    {
        "line": 36,
        "fullcodeline": "obj->size = bit_read_MS (dat);"
    },
    {
        "line": 37,
        "fullcodeline": "LOG_INFO (\", Size: %d [MS]\", obj->size)"
    },
    {
        "line": 38,
        "fullcodeline": "SINCE (R_2010)"
    },
    {
        "line": 47,
        "fullcodeline": "objpos = bit_position (dat); // absolute"
    },
    {
        "line": 48,
        "fullcodeline": "obj->address = dat->byte;"
    },
    {
        "line": 51,
        "fullcodeline": "bit_reset_chain (dat);"
    },
    {
        "line": 58,
        "fullcodeline": "dat->size = obj->size;"
    },
    {
        "line": 60,
        "fullcodeline": "SINCE (R_2010) { obj->type = bit_read_BOT (dat); }"
    },
    {
        "line": 62,
        "fullcodeline": "LOG_INFO (\", Type: %d [%s]\\n\", obj->type, dat->version >= R_2010 ? \"BOT\" : \"BS\");"
    },
    {
        "line": 63,
        "fullcodeline": "restartpos = bit_position (dat); // relative"
    },
    {
        "line": 523,
        "fullcodeline": "restartpos = bit_position (dat);"
    },
    {
        "line": 524,
        "fullcodeline": "*dat = abs_dat;"
    },
    {
        "line": 525,
        "fullcodeline": "bit_set_position (dat, objpos + restartpos);"
    },
    {
        "line": 535,
        "fullcodeline": "bit_set_position (dat, (obj->address + obj->size) * 8 - 2);"
    },
    {
        "line": 26,
        "fullcodeline": "if (realloced > 0)"
    },
    {
        "line": 41,
        "fullcodeline": "obj->handlestream_size = bit_read_UMC (dat);"
    },
    {
        "line": 43,
        "fullcodeline": "obj->bitsize = obj->size * 8 - obj->handlestream_size;"
    },
    {
        "line": 52,
        "fullcodeline": "if (obj->size > dat->size)"
    },
    {
        "line": 512,
        "fullcodeline": "if (dat->byte > 8 * dat->size)"
    },
    {
        "line": 542,
        "fullcodeline": "return realloced ? -1 : error; // re-alloced or not"
    },
    {
        "line": 28,
        "fullcodeline": "*dat = abs_dat;"
    },
    {
        "line": 70,
        "fullcodeline": "error = dwg_decode_TEXT (dat, obj);"
    },
    {
        "line": 73,
        "fullcodeline": "error = dwg_decode_ATTRIB (dat, obj);"
    },
    {
        "line": 76,
        "fullcodeline": "error = dwg_decode_ATTDEF (dat, obj);"
    },
    {
        "line": 79,
        "fullcodeline": "error = dwg_decode_BLOCK (dat, obj);"
    },
    {
        "line": 82,
        "fullcodeline": "error = dwg_decode_ENDBLK (dat, obj);"
    },
    {
        "line": 85,
        "fullcodeline": "error = dwg_decode_SEQEND (dat, obj);"
    },
    {
        "line": 116,
        "fullcodeline": "error = dwg_decode_INSERT (dat, obj);"
    },
    {
        "line": 119,
        "fullcodeline": "error = dwg_decode_MINSERT (dat, obj);"
    },
    {
        "line": 122,
        "fullcodeline": "error = dwg_decode_VERTEX_2D (dat, obj);"
    },
    {
        "line": 125,
        "fullcodeline": "error = dwg_decode_VERTEX_3D (dat, obj);"
    },
    {
        "line": 128,
        "fullcodeline": "error = dwg_decode_VERTEX_MESH (dat, obj);"
    },
    {
        "line": 131,
        "fullcodeline": "error = dwg_decode_VERTEX_PFACE (dat, obj);"
    },
    {
        "line": 134,
        "fullcodeline": "error = dwg_decode_VERTEX_PFACE_FACE (dat, obj);"
    },
    {
        "line": 137,
        "fullcodeline": "error = dwg_decode_POLYLINE_2D (dat, obj);"
    },
    {
        "line": 142,
        "fullcodeline": "error = dwg_decode_POLYLINE_3D (dat, obj);"
    },
    {
        "line": 147,
        "fullcodeline": "error = dwg_decode_ARC (dat, obj);"
    },
    {
        "line": 150,
        "fullcodeline": "error = dwg_decode_CIRCLE (dat, obj);"
    },
    {
        "line": 153,
        "fullcodeline": "error = dwg_decode_LINE (dat, obj);"
    },
    {
        "line": 156,
        "fullcodeline": "error = dwg_decode_DIMENSION_ORDINATE (dat, obj);"
    },
    {
        "line": 159,
        "fullcodeline": "error = dwg_decode_DIMENSION_LINEAR (dat, obj);"
    },
    {
        "line": 162,
        "fullcodeline": "error = dwg_decode_DIMENSION_ALIGNED (dat, obj);"
    },
    {
        "line": 165,
        "fullcodeline": "error = dwg_decode_DIMENSION_ANG3PT (dat, obj);"
    },
    {
        "line": 168,
        "fullcodeline": "error = dwg_decode_DIMENSION_ANG2LN (dat, obj);"
    },
    {
        "line": 171,
        "fullcodeline": "error = dwg_decode_DIMENSION_RADIUS (dat, obj);"
    },
    {
        "line": 174,
        "fullcodeline": "error = dwg_decode_DIMENSION_DIAMETER (dat, obj);"
    },
    {
        "line": 177,
        "fullcodeline": "error = dwg_decode_POINT (dat, obj);"
    },
    {
        "line": 180,
        "fullcodeline": "error = dwg_decode__3DFACE (dat, obj);"
    },
    {
        "line": 183,
        "fullcodeline": "error = dwg_decode_POLYLINE_PFACE (dat, obj);"
    },
    {
        "line": 188,
        "fullcodeline": "error = dwg_decode_POLYLINE_MESH (dat, obj);"
    },
    {
        "line": 193,
        "fullcodeline": "error = dwg_decode_SOLID (dat, obj);"
    },
    {
        "line": 196,
        "fullcodeline": "error = dwg_decode_TRACE (dat, obj);"
    },
    {
        "line": 199,
        "fullcodeline": "error = dwg_decode_SHAPE (dat, obj);"
    },
    {
        "line": 202,
        "fullcodeline": "error = dwg_decode_VIEWPORT (dat, obj);"
    },
    {
        "line": 205,
        "fullcodeline": "error = dwg_decode_ELLIPSE (dat, obj);"
    },
    {
        "line": 208,
        "fullcodeline": "error = dwg_decode_SPLINE (dat, obj);"
    },
    {
        "line": 211,
        "fullcodeline": "error = dwg_decode_REGION (dat, obj);"
    },
    {
        "line": 214,
        "fullcodeline": "error = dwg_decode__3DSOLID (dat, obj);"
    },
    {
        "line": 217,
        "fullcodeline": "error = dwg_decode_BODY (dat, obj);"
    },
    {
        "line": 220,
        "fullcodeline": "error = dwg_decode_RAY (dat, obj);"
    },
    {
        "line": 223,
        "fullcodeline": "error = dwg_decode_XLINE (dat, obj);"
    },
    {
        "line": 226,
        "fullcodeline": "error = dwg_decode_DICTIONARY (dat, obj);"
    },
    {
        "line": 229,
        "fullcodeline": "error = dwg_decode_MTEXT (dat, obj);"
    },
    {
        "line": 232,
        "fullcodeline": "error = dwg_decode_LEADER (dat, obj);"
    },
    {
        "line": 235,
        "fullcodeline": "error = dwg_decode_TOLERANCE (dat, obj);"
    },
    {
        "line": 238,
        "fullcodeline": "error = dwg_decode_MLINE (dat, obj);"
    },
    {
        "line": 241,
        "fullcodeline": "error = dwg_decode_BLOCK_CONTROL (dat, obj);"
    },
    {
        "line": 252,
        "fullcodeline": "error = dwg_decode_BLOCK_HEADER (dat, obj);"
    },
    {
        "line": 260,
        "fullcodeline": "error = dwg_decode_LAYER_CONTROL (dat, obj);"
    },
    {
        "line": 268,
        "fullcodeline": "error = dwg_decode_LAYER (dat, obj);"
    },
    {
        "line": 271,
        "fullcodeline": "error = dwg_decode_STYLE_CONTROL (dat, obj);"
    },
    {
        "line": 279,
        "fullcodeline": "error = dwg_decode_STYLE (dat, obj);"
    },
    {
        "line": 282,
        "fullcodeline": "error = dwg_decode_LTYPE_CONTROL (dat, obj);"
    },
    {
        "line": 290,
        "fullcodeline": "error = dwg_decode_LTYPE (dat, obj);"
    },
    {
        "line": 293,
        "fullcodeline": "error = dwg_decode_VIEW_CONTROL (dat, obj);"
    },
    {
        "line": 301,
        "fullcodeline": "error = dwg_decode_VIEW (dat, obj);"
    },
    {
        "line": 304,
        "fullcodeline": "error = dwg_decode_UCS_CONTROL (dat, obj);"
    },
    {
        "line": 312,
        "fullcodeline": "error = dwg_decode_UCS (dat, obj);"
    },
    {
        "line": 315,
        "fullcodeline": "error = dwg_decode_VPORT_CONTROL (dat, obj);"
    },
    {
        "line": 323,
        "fullcodeline": "error = dwg_decode_VPORT (dat, obj);"
    },
    {
        "line": 326,
        "fullcodeline": "error = dwg_decode_APPID_CONTROL (dat, obj);"
    },
    {
        "line": 334,
        "fullcodeline": "error = dwg_decode_APPID (dat, obj);"
    },
    {
        "line": 337,
        "fullcodeline": "error = dwg_decode_DIMSTYLE_CONTROL (dat, obj);"
    },
    {
        "line": 345,
        "fullcodeline": "error = dwg_decode_DIMSTYLE (dat, obj);"
    },
    {
        "line": 348,
        "fullcodeline": "error = dwg_decode_VPORT_ENTITY_CONTROL (dat, obj);"
    },
    {
        "line": 357,
        "fullcodeline": "error = dwg_decode_VPORT_ENTITY_HEADER (dat, obj);"
    },
    {
        "line": 360,
        "fullcodeline": "error = dwg_decode_GROUP (dat, obj);"
    },
    {
        "line": 363,
        "fullcodeline": "error = dwg_decode_MLINESTYLE (dat, obj);"
    },
    {
        "line": 366,
        "fullcodeline": "error = dwg_decode_OLE2FRAME (dat, obj);"
    },
    {
        "line": 369,
        "fullcodeline": "error = dwg_decode_DUMMY (dat, obj);"
    },
    {
        "line": 372,
        "fullcodeline": "error = dwg_decode_LONG_TRANSACTION (dat, obj);"
    },
    {
        "line": 375,
        "fullcodeline": "error = dwg_decode_LWPOLYLINE (dat, obj);"
    },
    {
        "line": 378,
        "fullcodeline": "error = dwg_decode_HATCH (dat, obj);"
    },
    {
        "line": 381,
        "fullcodeline": "error = dwg_decode_XRECORD (dat, obj);"
    },
    {
        "line": 384,
        "fullcodeline": "error = dwg_decode_PLACEHOLDER (dat, obj);"
    },
    {
        "line": 387,
        "fullcodeline": "error = dwg_decode_OLEFRAME (dat, obj);"
    },
    {
        "line": 392,
        "fullcodeline": "error = DWG_ERR_UNHANDLEDCLASS;"
    },
    {
        "line": 395,
        "fullcodeline": "error = dwg_decode_LAYOUT (dat, obj);"
    },
    {
        "line": 398,
        "fullcodeline": "error = dwg_decode_PROXY_ENTITY (dat, obj);"
    },
    {
        "line": 401,
        "fullcodeline": "error = dwg_decode_PROXY_OBJECT (dat, obj);"
    },
    {
        "line": 507,
        "fullcodeline": "LOG_HANDLE (\" object_map{%lX} = %lu\\n\", obj->handle.value,"
    },
    {
        "line": 530,
        "fullcodeline": "unsigned char r = 8 - dat->bit;"
    },
    {
        "line": 531,
        "fullcodeline": "LOG_HANDLE (\" padding: %X/%X (%d bits)\\n\", dat->chain[dat->byte],"
    },
    {
        "line": 533,
        "fullcodeline": "bit_advance_position (dat, r);"
    },
    {
        "line": 536,
        "fullcodeline": "if (!bit_check_CRC (dat, address, 0xC0C1))"
    },
    {
        "line": 537,
        "fullcodeline": "error |= DWG_ERR_WRONGCRC;"
    },
    {
        "line": 138,
        "fullcodeline": "if (dat->version >= R_2010)"
    },
    {
        "line": 143,
        "fullcodeline": "if (dat->version >= R_2010)"
    },
    {
        "line": 184,
        "fullcodeline": "if (dat->version >= R_2010)"
    },
    {
        "line": 189,
        "fullcodeline": "if (dat->version >= R_2010)"
    },
    {
        "line": 404,
        "fullcodeline": "if (obj->type == dwg->layout_type)"
    },
    {
        "line": 515,
        "fullcodeline": "8 * dat->size);"
    },
    {
        "line": 517,
        "fullcodeline": "return error | DWG_ERR_INVALIDDWG;"
    },
    {
        "line": 532,
        "fullcodeline": "dat->chain[dat->byte] & ((1 << r) - 1), r);"
    },
    {
        "line": 86,
        "fullcodeline": "if (dat->version >= R_13 && obj->tio.entity->ownerhandle)"
    },
    {
        "line": 88,
        "fullcodeline": "Dwg_Object *restrict owner = dwg_resolve_handle ("
    },
    {
        "line": 139,
        "fullcodeline": "check_POLYLINE_handles (obj);"
    },
    {
        "line": 144,
        "fullcodeline": "check_POLYLINE_handles (obj);"
    },
    {
        "line": 185,
        "fullcodeline": "check_POLYLINE_handles (obj);"
    },
    {
        "line": 190,
        "fullcodeline": "check_POLYLINE_handles (obj);"
    },
    {
        "line": 242,
        "fullcodeline": "if (!error && obj->tio.object->tio.BLOCK_CONTROL)"
    },
    {
        "line": 261,
        "fullcodeline": "if (!error && obj->tio.object->tio.LAYER_CONTROL)"
    },
    {
        "line": 272,
        "fullcodeline": "if (!error && obj->tio.object->tio.STYLE_CONTROL)"
    },
    {
        "line": 283,
        "fullcodeline": "if (!error && obj->tio.object->tio.LTYPE_CONTROL)"
    },
    {
        "line": 294,
        "fullcodeline": "if (!error && obj->tio.object->tio.VIEW_CONTROL)"
    },
    {
        "line": 305,
        "fullcodeline": "if (!error && obj->tio.object->tio.UCS_CONTROL)"
    },
    {
        "line": 316,
        "fullcodeline": "if (!error && obj->tio.object->tio.VPORT_CONTROL)"
    },
    {
        "line": 327,
        "fullcodeline": "if (!error && obj->tio.object->tio.APPID_CONTROL)"
    },
    {
        "line": 338,
        "fullcodeline": "if (!error && obj->tio.object->tio.DIMSTYLE_CONTROL)"
    },
    {
        "line": 349,
        "fullcodeline": "if (!error && obj->tio.object->tio.VPORT_ENTITY_CONTROL)"
    },
    {
        "line": 405,
        "fullcodeline": "error = dwg_decode_LAYOUT (dat, obj);"
    },
    {
        "line": 90,
        "fullcodeline": "if (!owner)"
    },
    {
        "line": 407,
        "fullcodeline": "else if ((error = dwg_decode_variable_type (dwg, dat, hdl_dat, obj))"
    },
    {
        "line": 411,
        "fullcodeline": "int i = obj->type - 500;"
    },
    {
        "line": 419,
        "fullcodeline": "bit_set_position (dat, restartpos);"
    },
    {
        "line": 94,
        "fullcodeline": "else if (owner->fixedtype == DWG_TYPE_INSERT"
    },
    {
        "line": 95,
        "fullcodeline": "|| owner->fixedtype == DWG_TYPE_MINSERT)"
    },
    {
        "line": 98,
        "fullcodeline": "hash_set (dwg->object_map, obj->handle.value, (uint32_t)num);"
    },
    {
        "line": 425,
        "fullcodeline": "if (i >= 0 && i < (int)dwg->num_classes)"
    },
    {
        "line": 427,
        "fullcodeline": "klass = &dwg->dwg_class[i];"
    },
    {
        "line": 428,
        "fullcodeline": "is_entity = dwg_class_is_entity (klass);"
    },
    {
        "line": 447,
        "fullcodeline": "if (klass && !is_entity)"
    },
    {
        "line": 449,
        "fullcodeline": "int err = dwg_decode_UNKNOWN_OBJ (dat, obj);"
    },
    {
        "line": 450,
        "fullcodeline": "error |= err;"
    },
    {
        "line": 99,
        "fullcodeline": "(void)dwg_validate_INSERT (owner);"
    },
    {
        "line": 452,
        "fullcodeline": "if (!dat)"
    },
    {
        "line": 432,
        "fullcodeline": "if (i < 0)"
    },
    {
        "line": 444,
        "fullcodeline": "return error | DWG_ERR_VALUEOUTOFBOUNDS;"
    },
    {
        "line": 455,
        "fullcodeline": "*dat = abs_dat;"
    },
    {
        "line": 101,
        "fullcodeline": "else if (owner->fixedtype == DWG_TYPE_POLYLINE_2D"
    },
    {
        "line": 104,
        "fullcodeline": "|| owner->fixedtype == DWG_TYPE_POLYLINE_MESH)"
    },
    {
        "line": 106,
        "fullcodeline": "Dwg_Entity_POLYLINE_2D *restrict _obj"
    },
    {
        "line": 468,
        "fullcodeline": "err = dwg_decode_UNKNOWN_ENT (dat, obj);"
    },
    {
        "line": 469,
        "fullcodeline": "error |= err;"
    },
    {
        "line": 103,
        "fullcodeline": "|| owner->fixedtype == DWG_TYPE_POLYLINE_PFACE"
    },
    {
        "line": 111,
        "fullcodeline": "(void)dwg_validate_POLYLINE (owner);"
    },
    {
        "line": 471,
        "fullcodeline": "if (!dat)"
    },
    {
        "line": 479,
        "fullcodeline": "SINCE (R_2000)"
    },
    {
        "line": 497,
        "fullcodeline": "restartpos = dat->byte;"
    },
    {
        "line": 500,
        "fullcodeline": "dat->byte = restartpos;"
    },
    {
        "line": 102,
        "fullcodeline": "|| owner->fixedtype == DWG_TYPE_POLYLINE_3D"
    },
    {
        "line": 110,
        "fullcodeline": "hash_set (dwg->object_map, obj->handle.value, (uint32_t)num);"
    },
    {
        "line": 474,
        "fullcodeline": "*dat = abs_dat;"
    },
    {
        "line": 481,
        "fullcodeline": "obj->bitsize = bit_read_RL (dat);"
    },
    {
        "line": 499,
        "fullcodeline": "obj->tio.unknown = bit_read_TF (dat, obj->size);"
    },
    {
        "line": 492,
        "fullcodeline": "if (!bit_read_H (dat, &obj->handle))"
    },
    {
        "line": 484,
        "fullcodeline": "if (obj->bitsize > obj->size * 8)"
    },
    {
        "line": 489,
        "fullcodeline": "error |= DWG_ERR_VALUEOUTOFBOUNDS;"
    },
    {
        "line": 488,
        "fullcodeline": "obj->bitsize = obj->size * 8;"
    }
]