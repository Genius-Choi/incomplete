[
    {
        "line": 15,
        "fullcodeline": "val = arg;"
    },
    {
        "line": 21,
        "fullcodeline": "INIT_LIST_HEAD(&tasks);"
    },
    {
        "line": 23,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 24,
        "fullcodeline": "sma = sem_obtain_object_check(ns, semid);"
    },
    {
        "line": 41,
        "fullcodeline": "err = security_sem_semctl(sma, SETVAL);"
    },
    {
        "line": 47,
        "fullcodeline": "sem_lock(sma, NULL, -1);"
    },
    {
        "line": 52,
        "fullcodeline": "list_for_each_entry(un, &sma->list_id, list_id)"
    },
    {
        "line": 53,
        "fullcodeline": "un->semadj[semnum] = 0;"
    },
    {
        "line": 55,
        "fullcodeline": "curr->semval = val;"
    },
    {
        "line": 56,
        "fullcodeline": "curr->sempid = task_tgid_vnr(current);"
    },
    {
        "line": 57,
        "fullcodeline": "sma->sem_ctime = get_seconds();"
    },
    {
        "line": 59,
        "fullcodeline": "do_smart_update(sma, NULL, 0, 0, &tasks);"
    },
    {
        "line": 60,
        "fullcodeline": "sem_unlock(sma, -1);"
    },
    {
        "line": 61,
        "fullcodeline": "wake_up_sem_queue_do(&tasks);"
    },
    {
        "line": 18,
        "fullcodeline": "if (val > SEMVMX || val < 0)"
    },
    {
        "line": 25,
        "fullcodeline": "if (IS_ERR(sma)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (semnum < 0 || semnum >= sma->sem_nsems) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (ipcperms(ns, &sma->sem_perm, S_IWUGO)) {"
    },
    {
        "line": 26,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 31,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 37,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 43,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 19,
        "fullcodeline": "return -ERANGE;"
    },
    {
        "line": 27,
        "fullcodeline": "return PTR_ERR(sma);"
    },
    {
        "line": 32,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 38,
        "fullcodeline": "return -EACCES;"
    },
    {
        "line": 44,
        "fullcodeline": "return -EACCES;"
    }
]