[
    {
        "line": 5,
        "fullcodeline": "ulp = tsk->sysvsem.undo_list;"
    },
    {
        "line": 6,
        "fullcodeline": "if (!ulp)"
    },
    {
        "line": 10,
        "fullcodeline": "if (!atomic_dec_and_test(&ulp->refcnt))"
    },
    {
        "line": 32,
        "fullcodeline": "sma = sem_obtain_object_check(tsk->nsproxy->ipc_ns, un->semid);"
    },
    {
        "line": 39,
        "fullcodeline": "sem_lock(sma, NULL, -1);"
    },
    {
        "line": 40,
        "fullcodeline": "un = __lookup_undo(ulp, semid);"
    },
    {
        "line": 51,
        "fullcodeline": "list_del(&un->list_id);"
    },
    {
        "line": 53,
        "fullcodeline": "spin_lock(&ulp->lock);"
    },
    {
        "line": 54,
        "fullcodeline": "list_del_rcu(&un->list_proc);"
    },
    {
        "line": 55,
        "fullcodeline": "spin_unlock(&ulp->lock);"
    },
    {
        "line": 83,
        "fullcodeline": "INIT_LIST_HEAD(&tasks);"
    },
    {
        "line": 84,
        "fullcodeline": "do_smart_update(sma, NULL, 0, 1, &tasks);"
    },
    {
        "line": 86,
        "fullcodeline": "wake_up_sem_queue_do(&tasks);"
    },
    {
        "line": 88,
        "fullcodeline": "kfree_rcu(un, rcu);"
    },
    {
        "line": 22,
        "fullcodeline": "if (&un->list_proc == &ulp->list_proc)"
    },
    {
        "line": 27,
        "fullcodeline": "if (semid == -1) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (IS_ERR(sma)) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (un == NULL) {"
    },
    {
        "line": 58,
        "fullcodeline": "for (i = 0; i < sma->sem_nsems; i++) {"
    },
    {
        "line": 85,
        "fullcodeline": "sem_unlock(sma, -1);"
    },
    {
        "line": 23,
        "fullcodeline": "semid = -1;"
    },
    {
        "line": 59,
        "fullcodeline": "struct sem * semaphore = &sma->sem_base[i];"
    },
    {
        "line": 25,
        "fullcodeline": "semid = un->semid;"
    },
    {
        "line": 45,
        "fullcodeline": "sem_unlock(sma, -1);"
    },
    {
        "line": 61,
        "fullcodeline": "semaphore->semval += un->semadj[i];"
    },
    {
        "line": 75,
        "fullcodeline": "if (semaphore->semval < 0)"
    },
    {
        "line": 77,
        "fullcodeline": "if (semaphore->semval > SEMVMX)"
    },
    {
        "line": 79,
        "fullcodeline": "semaphore->sempid = task_tgid_vnr(current);"
    },
    {
        "line": 76,
        "fullcodeline": "semaphore->semval = 0;"
    },
    {
        "line": 78,
        "fullcodeline": "semaphore->semval = SEMVMX;"
    }
]