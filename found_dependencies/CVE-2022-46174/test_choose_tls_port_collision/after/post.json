[
    {
        "line": 3,
        "fullcodeline": "sock = MagicMock()"
    },
    {
        "line": 4,
        "fullcodeline": "mocker.patch(\"socket.socket\", return_value=sock)"
    },
    {
        "line": 5,
        "fullcodeline": "mocker.patch("
    },
    {
        "line": 10,
        "fullcodeline": "port_suffix = \".%s\" % str(DEFAULT_TLS_PORT_RANGE_LOW)"
    },
    {
        "line": 11,
        "fullcodeline": "temp_state_file = tempfile.NamedTemporaryFile("
    },
    {
        "line": 15,
        "fullcodeline": "options = {}"
    },
    {
        "line": 19,
        "fullcodeline": "temp_state_file.close()"
    },
    {
        "line": 21,
        "fullcodeline": "assert \"Skip binding TLS port\" in caplog.text"
    },
    {
        "line": 7,
        "fullcodeline": "return_value=range(DEFAULT_TLS_PORT_RANGE_LOW, DEFAULT_TLS_PORT_RANGE_HIGH),"
    },
    {
        "line": 16,
        "fullcodeline": "with caplog.at_level(logging.DEBUG):"
    },
    {
        "line": 20,
        "fullcodeline": "sock.bind.assert_called_once_with((\"localhost\", DEFAULT_TLS_PORT_RANGE_LOW + 1))"
    },
    {
        "line": 17,
        "fullcodeline": "mount_efs.choose_tls_port_and_get_bind_sock(_get_config(), options, tmpdir)"
    }
]