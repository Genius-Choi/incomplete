[
    {
        "line": 2,
        "fullcodeline": "if \"tlsport\" in options:"
    },
    {
        "line": 12,
        "fullcodeline": "if \"netns\" not in options:"
    },
    {
        "line": 25,
        "fullcodeline": "if \"tlsport\" in options:"
    },
    {
        "line": 3,
        "fullcodeline": "ports_to_try = [int(options[\"tlsport\"])]"
    },
    {
        "line": 7,
        "fullcodeline": "ports_to_try = list(range(lower_bound, upper_bound))"
    },
    {
        "line": 10,
        "fullcodeline": "random.shuffle(ports_to_try)"
    },
    {
        "line": 13,
        "fullcodeline": "tls_port_sock = find_tls_port_in_range_and_get_bind_sock("
    },
    {
        "line": 5,
        "fullcodeline": "lower_bound, upper_bound = get_tls_port_range(config)"
    },
    {
        "line": 17,
        "fullcodeline": "with NetNS(nspath=options[\"netns\"]):"
    },
    {
        "line": 27,
        "fullcodeline": "\"Specified port [%s] is unavailable. Try selecting a different port.\""
    },
    {
        "line": 32,
        "fullcodeline": "\"Failed to locate an available port in the range [%d, %d], try specifying a different port range in %s\""
    },
    {
        "line": 33,
        "fullcodeline": "% (lower_bound, upper_bound, CONFIG_FILE)"
    },
    {
        "line": 18,
        "fullcodeline": "tls_port_sock = find_tls_port_in_range_and_get_bind_sock("
    }
]