[
    {
        "line": 2,
        "fullcodeline": "mocker.patch(\"mount_efs.start_watchdog\")"
    },
    {
        "line": 3,
        "fullcodeline": "mocker.patch("
    },
    {
        "line": 7,
        "fullcodeline": "mocker.patch(\"socket.gethostname\", return_value=DNS_NAME)"
    },
    {
        "line": 8,
        "fullcodeline": "mocker.patch("
    },
    {
        "line": 12,
        "fullcodeline": "mocker.patch(\"mount_efs.write_tls_tunnel_state_file\", return_value=\"~mocktempfile\")"
    },
    {
        "line": 13,
        "fullcodeline": "mocker.patch(\"os.kill\")"
    },
    {
        "line": 15,
        "fullcodeline": "write_config_mock = mocker.patch("
    },
    {
        "line": 5,
        "fullcodeline": "return_value=(DEFAULT_TLS_PORT, DEFAULT_TLS_PORT + 10),"
    },
    {
        "line": 10,
        "fullcodeline": "return_value=(DNS_NAME, None),"
    }
]