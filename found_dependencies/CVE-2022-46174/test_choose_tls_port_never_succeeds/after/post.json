[
    {
        "line": 2,
        "fullcodeline": "bad_sock = MagicMock()"
    },
    {
        "line": 3,
        "fullcodeline": "bad_sock.bind.side_effect = socket.error()"
    },
    {
        "line": 4,
        "fullcodeline": "options = {}"
    },
    {
        "line": 6,
        "fullcodeline": "mocker.patch(\"socket.socket\", return_value=bad_sock)"
    },
    {
        "line": 11,
        "fullcodeline": "assert 0 != ex.value.code"
    },
    {
        "line": 14,
        "fullcodeline": "assert \"Failed to locate an available port\" in err"
    },
    {
        "line": 16,
        "fullcodeline": "assert ("
    },
    {
        "line": 8,
        "fullcodeline": "with pytest.raises(SystemExit) as ex:"
    },
    {
        "line": 13,
        "fullcodeline": "out, err = capsys.readouterr()"
    },
    {
        "line": 17,
        "fullcodeline": "DEFAULT_TLS_PORT_RANGE_HIGH - DEFAULT_TLS_PORT_RANGE_LOW"
    },
    {
        "line": 9,
        "fullcodeline": "mount_efs.choose_tls_port_and_get_bind_sock(_get_config(), options, str(tmpdir))"
    }
]