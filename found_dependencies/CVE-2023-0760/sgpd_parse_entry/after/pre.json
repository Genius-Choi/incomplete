[
    {
        "line": 3,
        "fullcodeline": "Bool null_size_ok = GF_FALSE;"
    },
    {
        "line": 286,
        "fullcodeline": "GF_SAFEALLOC(def_ptr, GF_DefaultSampleGroupDescriptionEntry);"
    },
    {
        "line": 287,
        "fullcodeline": "if (!def_ptr) return NULL;"
    },
    {
        "line": 213,
        "fullcodeline": "null_size_ok = GF_TRUE;"
    },
    {
        "line": 217,
        "fullcodeline": "entry_size = 20;"
    },
    {
        "line": 220,
        "fullcodeline": "entry_size = 2;"
    },
    {
        "line": 282,
        "fullcodeline": "if (!entry_size && !null_size_ok) {"
    },
    {
        "line": 289,
        "fullcodeline": "def_ptr->length = entry_size;"
    },
    {
        "line": 290,
        "fullcodeline": "def_ptr->data = (u8 *) gf_malloc(sizeof(u8)*def_ptr->length);"
    },
    {
        "line": 295,
        "fullcodeline": "gf_bs_read_data(bs, (char *) def_ptr->data, def_ptr->length);"
    },
    {
        "line": 11,
        "fullcodeline": "GF_SAFEALLOC(ptr, GF_RollRecoveryEntry);"
    },
    {
        "line": 13,
        "fullcodeline": "ptr->roll_distance = gf_bs_read_int(bs, 16);"
    },
    {
        "line": 20,
        "fullcodeline": "GF_SAFEALLOC(ptr, GF_VisualRandomAccessEntry);"
    },
    {
        "line": 22,
        "fullcodeline": "ptr->num_leading_samples_known = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 23,
        "fullcodeline": "ptr->num_leading_samples = gf_bs_read_int(bs, 7);"
    },
    {
        "line": 30,
        "fullcodeline": "GF_SAFEALLOC(ptr, GF_SAPEntry);"
    },
    {
        "line": 32,
        "fullcodeline": "ptr->dependent_flag = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 33,
        "fullcodeline": "gf_bs_read_int(bs, 3);"
    },
    {
        "line": 34,
        "fullcodeline": "ptr->SAP_type = gf_bs_read_int(bs, 4);"
    },
    {
        "line": 41,
        "fullcodeline": "GF_SAFEALLOC(ptr, GF_SYNCEntry);"
    },
    {
        "line": 43,
        "fullcodeline": "gf_bs_read_int(bs, 2);"
    },
    {
        "line": 44,
        "fullcodeline": "ptr->NALU_type = gf_bs_read_int(bs, 6);"
    },
    {
        "line": 51,
        "fullcodeline": "GF_SAFEALLOC(ptr, GF_TemporalLevelEntry);"
    },
    {
        "line": 53,
        "fullcodeline": "ptr->level_independently_decodable = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 62,
        "fullcodeline": "GF_SAFEALLOC(ptr, GF_CENCSampleEncryptionGroupEntry);"
    },
    {
        "line": 65,
        "fullcodeline": "gf_bs_read_int(bs, 7); //reserved"
    },
    {
        "line": 66,
        "fullcodeline": "ptr->crypt_byte_block = gf_bs_read_int(bs, 4);"
    },
    {
        "line": 67,
        "fullcodeline": "ptr->skip_byte_block = gf_bs_read_int(bs, 4);"
    },
    {
        "line": 68,
        "fullcodeline": "ptr->IsProtected = gf_bs_read_u8(bs);"
    },
    {
        "line": 69,
        "fullcodeline": "bytes_in_box -= 3;"
    },
    {
        "line": 157,
        "fullcodeline": "GF_OperatingPointsInformation *ptr = gf_isom_oinf_new_entry();"
    },
    {
        "line": 158,
        "fullcodeline": "u32 s = (u32) gf_bs_get_position(bs);"
    },
    {
        "line": 159,
        "fullcodeline": "gf_isom_oinf_read_entry(ptr, bs);"
    },
    {
        "line": 168,
        "fullcodeline": "GF_LHVCLayerInformation *ptr = gf_isom_linf_new_entry();"
    },
    {
        "line": 169,
        "fullcodeline": "u32 s = (u32) gf_bs_get_position(bs);"
    },
    {
        "line": 170,
        "fullcodeline": "gf_isom_linf_read_entry(ptr, bs);"
    },
    {
        "line": 179,
        "fullcodeline": "if (! entry_size) {"
    },
    {
        "line": 195,
        "fullcodeline": "if (! entry_size) {"
    },
    {
        "line": 226,
        "fullcodeline": "GF_SAFEALLOC(ptr, GF_SubpictureOrderEntry);"
    },
    {
        "line": 228,
        "fullcodeline": "ptr->subpic_id_info_flag = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 229,
        "fullcodeline": "ptr->num_subpic_ref_idx = gf_bs_read_int(bs, 15);"
    },
    {
        "line": 230,
        "fullcodeline": "*total_bytes = 2;"
    },
    {
        "line": 231,
        "fullcodeline": "ptr->subp_track_ref_idx = gf_malloc(sizeof(u16) * ptr->num_subpic_ref_idx);"
    },
    {
        "line": 259,
        "fullcodeline": "GF_SAFEALLOC(ptr, GF_SubpictureLayoutMapEntry);"
    },
    {
        "line": 261,
        "fullcodeline": "ptr->groupID_info_4cc = gf_bs_read_u32(bs);"
    },
    {
        "line": 262,
        "fullcodeline": "ptr->nb_entries = 1 + gf_bs_read_u16(bs);"
    },
    {
        "line": 263,
        "fullcodeline": "*total_bytes = 6;"
    },
    {
        "line": 264,
        "fullcodeline": "ptr->groupIDs = gf_malloc(sizeof(u16) * ptr->nb_entries);"
    },
    {
        "line": 283,
        "fullcodeline": "GF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[iso file] %s sample group does not indicate entry size and is not implemented, cannot parse!\\n\", gf_4cc_to_str( grouping_type) ));"
    },
    {
        "line": 291,
        "fullcodeline": "if (!def_ptr->data) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (!ptr) return NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "if (!ptr) return NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "if (!ptr) return NULL;"
    },
    {
        "line": 42,
        "fullcodeline": "if (!ptr) return NULL;"
    },
    {
        "line": 52,
        "fullcodeline": "if (!ptr) return NULL;"
    },
    {
        "line": 61,
        "fullcodeline": "if (bytes_in_box<3) return NULL;"
    },
    {
        "line": 63,
        "fullcodeline": "if (!ptr) return NULL;"
    },
    {
        "line": 64,
        "fullcodeline": "Bool use_mkey = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 160,
        "fullcodeline": "*total_bytes = (u32) gf_bs_get_position(bs) - s;"
    },
    {
        "line": 171,
        "fullcodeline": "*total_bytes = (u32) gf_bs_get_position(bs) - s;"
    },
    {
        "line": 180,
        "fullcodeline": "u32 flags = gf_bs_peek_bits(bs, 24, 0);"
    },
    {
        "line": 191,
        "fullcodeline": "GF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[iso file] trif sample group does not indicate entry size, deprecated in spec\\n\"));"
    },
    {
        "line": 196,
        "fullcodeline": "u64 start = gf_bs_get_position(bs);"
    },
    {
        "line": 199,
        "fullcodeline": "gf_bs_read_int(bs, 6);"
    },
    {
        "line": 202,
        "fullcodeline": "entry_count = gf_bs_read_int(bs, large_size ? 16 : 8);"
    },
    {
        "line": 203,
        "fullcodeline": "gf_bs_seek(bs, start);"
    },
    {
        "line": 204,
        "fullcodeline": "entry_size = 1 + (large_size ? 2 : 1);"
    },
    {
        "line": 205,
        "fullcodeline": "entry_size += entry_count * 2;"
    },
    {
        "line": 207,
        "fullcodeline": "GF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[iso file] nalm sample group does not indicate entry size, deprecated in spec\\n\"));"
    },
    {
        "line": 227,
        "fullcodeline": "if (!ptr) return NULL;"
    },
    {
        "line": 232,
        "fullcodeline": "if (!ptr->subp_track_ref_idx) {"
    },
    {
        "line": 236,
        "fullcodeline": "for (i=0; i<ptr->num_subpic_ref_idx; i++) {"
    },
    {
        "line": 260,
        "fullcodeline": "if (!ptr) return NULL;"
    },
    {
        "line": 265,
        "fullcodeline": "if (!ptr->groupIDs) {"
    },
    {
        "line": 269,
        "fullcodeline": "for (i=0; i<ptr->nb_entries; i++) {"
    },
    {
        "line": 71,
        "fullcodeline": "u64 pos = gf_bs_get_position(bs);"
    },
    {
        "line": 72,
        "fullcodeline": "u32 i, count = gf_bs_read_u16(bs);"
    },
    {
        "line": 73,
        "fullcodeline": "bytes_in_box -= 2;"
    },
    {
        "line": 93,
        "fullcodeline": "ptr->key_info_size = 1 + (u32) (gf_bs_get_position(bs) - pos);"
    },
    {
        "line": 94,
        "fullcodeline": "ptr->key_info = gf_malloc(sizeof(u8) * ptr->key_info_size);"
    },
    {
        "line": 99,
        "fullcodeline": "gf_bs_seek(bs, pos);"
    },
    {
        "line": 100,
        "fullcodeline": "ptr->key_info[0] = 1;"
    },
    {
        "line": 181,
        "fullcodeline": "if (flags & 0x10000) entry_size=3;"
    },
    {
        "line": 200,
        "fullcodeline": "large_size = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 201,
        "fullcodeline": "rle = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 238,
        "fullcodeline": "*total_bytes += 2;"
    },
    {
        "line": 74,
        "fullcodeline": "if (bytes_in_box<0) {"
    },
    {
        "line": 78,
        "fullcodeline": "for (i=0; i<count; i++) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (!ptr->key_info) {"
    },
    {
        "line": 101,
        "fullcodeline": "gf_bs_read_data(bs, ptr->key_info + 1, ptr->key_info_size - 1);"
    },
    {
        "line": 102,
        "fullcodeline": "*total_bytes = 3 + ptr->key_info_size - 1;"
    },
    {
        "line": 111,
        "fullcodeline": "u8 const_iv_size = 0;"
    },
    {
        "line": 112,
        "fullcodeline": "u8 iv_size = gf_bs_read_u8(bs);"
    },
    {
        "line": 113,
        "fullcodeline": "gf_bs_read_data(bs, kid, 16);"
    },
    {
        "line": 114,
        "fullcodeline": "bytes_in_box -= 17;"
    },
    {
        "line": 120,
        "fullcodeline": "*total_bytes = 20;"
    },
    {
        "line": 129,
        "fullcodeline": "ptr->key_info_size = 20;"
    },
    {
        "line": 133,
        "fullcodeline": "ptr->key_info = gf_malloc(sizeof(u8) * ptr->key_info_size);"
    },
    {
        "line": 138,
        "fullcodeline": "ptr->key_info[0] = 0;"
    },
    {
        "line": 139,
        "fullcodeline": "ptr->key_info[1] = 0;"
    },
    {
        "line": 140,
        "fullcodeline": "ptr->key_info[2] = 0;"
    },
    {
        "line": 141,
        "fullcodeline": "ptr->key_info[3] = iv_size;"
    },
    {
        "line": 206,
        "fullcodeline": "if (rle) entry_size += entry_count * (large_size ? 2 : 1);"
    },
    {
        "line": 237,
        "fullcodeline": "ptr->subp_track_ref_idx[i] = gf_bs_read_u16(bs);"
    },
    {
        "line": 241,
        "fullcodeline": "ptr->spinfo.subpic_id_len_minus1 = gf_bs_read_int(bs, 4);"
    },
    {
        "line": 242,
        "fullcodeline": "ptr->spinfo.subpic_id_bit_pos = gf_bs_read_int(bs, 12);"
    },
    {
        "line": 243,
        "fullcodeline": "ptr->spinfo.start_code_emul_flag = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 244,
        "fullcodeline": "ptr->spinfo.pps_sps_subpic_id_flag = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 270,
        "fullcodeline": "ptr->groupIDs[i] = gf_bs_read_u16(bs);"
    },
    {
        "line": 79,
        "fullcodeline": "u8 ivsize = gf_bs_read_u8(bs);"
    },
    {
        "line": 80,
        "fullcodeline": "gf_bs_skip_bytes(bs, 16);"
    },
    {
        "line": 81,
        "fullcodeline": "bytes_in_box -= 17;"
    },
    {
        "line": 104,
        "fullcodeline": "if (!gf_cenc_validate_key_info(ptr->key_info, ptr->key_info_size)) {"
    },
    {
        "line": 105,
        "fullcodeline": "gf_free(ptr->key_info);"
    },
    {
        "line": 130,
        "fullcodeline": "if (!iv_size && ptr->IsProtected) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (!ptr->key_info) {"
    },
    {
        "line": 143,
        "fullcodeline": "if (!iv_size && ptr->IsProtected) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (bytes_in_box<0) {"
    },
    {
        "line": 121,
        "fullcodeline": "if ((ptr->IsProtected == 1) && !iv_size) {"
    },
    {
        "line": 122,
        "fullcodeline": "const_iv_size = gf_bs_read_u8(bs);"
    },
    {
        "line": 131,
        "fullcodeline": "ptr->key_info_size += 1 + const_iv_size;"
    },
    {
        "line": 144,
        "fullcodeline": "ptr->key_info[20] = const_iv_size;"
    },
    {
        "line": 145,
        "fullcodeline": "gf_bs_read_data(bs, (char *)ptr->key_info+21, const_iv_size);"
    },
    {
        "line": 183,
        "fullcodeline": "if (flags & 0x80000) entry_size=7;"
    },
    {
        "line": 246,
        "fullcodeline": "ptr->spinfo.xps_id = gf_bs_read_int(bs, 6);"
    },
    {
        "line": 84,
        "fullcodeline": "ivsize = gf_bs_read_u8(bs);"
    },
    {
        "line": 85,
        "fullcodeline": "gf_bs_skip_bytes(bs, ivsize);"
    },
    {
        "line": 86,
        "fullcodeline": "bytes_in_box -= 1 + ivsize;"
    },
    {
        "line": 187,
        "fullcodeline": "u32 nb_entries = gf_bs_peek_bits(bs, 16, entry_size);"
    },
    {
        "line": 188,
        "fullcodeline": "entry_size += 2 + 2*nb_entries;"
    },
    {
        "line": 248,
        "fullcodeline": "ptr->spinfo.xps_id = gf_bs_read_int(bs, 4);"
    },
    {
        "line": 123,
        "fullcodeline": "if ((const_iv_size != 8) && (const_iv_size != 16)) {"
    },
    {
        "line": 184,
        "fullcodeline": "else entry_size=11;"
    }
]