[
    {
        "line": 3,
        "fullcodeline": "assert(input);"
    },
    {
        "line": 4,
        "fullcodeline": "assert(attr);"
    },
    {
        "line": 5,
        "fullcodeline": "const char *pos = input;"
    },
    {
        "line": 6,
        "fullcodeline": "const char *end = input + input_len;"
    },
    {
        "line": 7,
        "fullcodeline": "bool quoted = false;"
    },
    {
        "line": 8,
        "fullcodeline": "bool scan_value = false;"
    },
    {
        "line": 11,
        "fullcodeline": "attr->value = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "attr->key = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "pos++;"
    },
    {
        "line": 20,
        "fullcodeline": "attr->key = pos;"
    },
    {
        "line": 15,
        "fullcodeline": "if (*pos != LF_ATTR_SEPARATOR_C) {"
    },
    {
        "line": 23,
        "fullcodeline": "while (pos < end) {"
    },
    {
        "line": 75,
        "fullcodeline": "return pos - input;"
    },
    {
        "line": 16,
        "fullcodeline": "DEBUG(\"Attribute should start with separator, found %c\\n\", *pos);"
    },
    {
        "line": 45,
        "fullcodeline": "pos++;"
    },
    {
        "line": 24,
        "fullcodeline": "if (*pos == LF_ATTR_SEPARATOR_C || *pos == LF_LINK_SEPARATOR_C) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (*pos == LF_ATTR_VAL_SEPARATOR_C) {"
    },
    {
        "line": 50,
        "fullcodeline": "while (pos < end) {"
    },
    {
        "line": 72,
        "fullcodeline": "attr->key_len = pos - attr->key;"
    },
    {
        "line": 26,
        "fullcodeline": "attr->key_len = pos - attr->key;"
    },
    {
        "line": 31,
        "fullcodeline": "attr->key_len = pos - attr->key;"
    },
    {
        "line": 33,
        "fullcodeline": "pos++;"
    },
    {
        "line": 41,
        "fullcodeline": "attr->value = (char *)pos;"
    },
    {
        "line": 42,
        "fullcodeline": "scan_value = true;"
    },
    {
        "line": 66,
        "fullcodeline": "pos++;"
    },
    {
        "line": 34,
        "fullcodeline": "if (pos == end) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (*pos == '\"' && *(pos - 1) != '\\\\') {"
    },
    {
        "line": 37,
        "fullcodeline": "else if (*pos == '\"') {"
    },
    {
        "line": 54,
        "fullcodeline": "attr->value_len = pos - attr->value;"
    },
    {
        "line": 55,
        "fullcodeline": "pos++;"
    },
    {
        "line": 60,
        "fullcodeline": "if (*pos == LF_ATTR_SEPARATOR_C || *pos == LF_LINK_SEPARATOR_C) {"
    },
    {
        "line": 38,
        "fullcodeline": "quoted = true;"
    },
    {
        "line": 39,
        "fullcodeline": "pos++;"
    },
    {
        "line": 62,
        "fullcodeline": "attr->value_len = pos - attr->value;"
    }
]