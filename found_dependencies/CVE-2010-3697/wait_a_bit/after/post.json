[
    {
        "line": 4,
        "fullcodeline": "REQUEST *request = ctx;"
    },
    {
        "line": 5,
        "fullcodeline": "fr_event_callback_t callback = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "rad_assert(request->magic == REQUEST_MAGIC);"
    },
    {
        "line": 171,
        "fullcodeline": "INSERT_EVENT(callback, request);"
    },
    {
        "line": 165,
        "fullcodeline": "if (!callback) {"
    },
    {
        "line": 130,
        "fullcodeline": "request_stats_final(request);"
    },
    {
        "line": 131,
        "fullcodeline": "cleanup_delay(request);"
    },
    {
        "line": 139,
        "fullcodeline": "request_stats_final(request);"
    },
    {
        "line": 142,
        "fullcodeline": "rad_assert(request->next_callback != NULL);"
    },
    {
        "line": 143,
        "fullcodeline": "rad_assert(request->next_callback != wait_a_bit);"
    },
    {
        "line": 145,
        "fullcodeline": "request->when = request->next_when;"
    },
    {
        "line": 146,
        "fullcodeline": "callback = request->next_callback;"
    },
    {
        "line": 147,
        "fullcodeline": "request->next_callback = NULL;"
    },
    {
        "line": 151,
        "fullcodeline": "rad_panic(\"Internal sanity check failure\");"
    },
    {
        "line": 166,
        "fullcodeline": "RDEBUG(\"WARNING: Internal sanity check failed in event handler for request %u: Discarding the request!\", request->number);"
    },
    {
        "line": 167,
        "fullcodeline": "ev_request_free(&request);"
    },
    {
        "line": 39,
        "fullcodeline": "rad_assert(\"We do not have threads, but the request is marked as queued or running in a child thread\" == NULL);"
    }
]