[
    {
        "line": 11,
        "fullcodeline": "int\t\tis_decl = is_decl_command(cmdidx);"
    },
    {
        "line": 13,
        "fullcodeline": "CLEAR_POINTER(lhs);"
    },
    {
        "line": 14,
        "fullcodeline": "lhs->lhs_dest = dest_local;"
    },
    {
        "line": 15,
        "fullcodeline": "lhs->lhs_vimvaridx = -1;"
    },
    {
        "line": 16,
        "fullcodeline": "lhs->lhs_scriptvar_idx = -1;"
    },
    {
        "line": 21,
        "fullcodeline": "lhs->lhs_dest_end = skip_var_one(var_start, FALSE);"
    },
    {
        "line": 41,
        "fullcodeline": "lhs->lhs_end = lhs->lhs_dest_end;"
    },
    {
        "line": 44,
        "fullcodeline": "lhs->lhs_varlen = var_end - var_start;"
    },
    {
        "line": 45,
        "fullcodeline": "lhs->lhs_varlen_total = lhs->lhs_varlen;"
    },
    {
        "line": 46,
        "fullcodeline": "lhs->lhs_name = vim_strnsave(var_start, lhs->lhs_varlen);"
    },
    {
        "line": 285,
        "fullcodeline": "lhs->lhs_member_type = lhs->lhs_type;"
    },
    {
        "line": 22,
        "fullcodeline": "if (*var_start == '@')"
    },
    {
        "line": 36,
        "fullcodeline": "if (is_decl && lhs->lhs_dest_end == var_start + 2"
    },
    {
        "line": 39,
        "fullcodeline": "if (is_decl && var_end == var_start + 2 && var_end[-1] == ':')"
    },
    {
        "line": 47,
        "fullcodeline": "if (lhs->lhs_name == NULL)"
    },
    {
        "line": 50,
        "fullcodeline": "if (lhs->lhs_dest_end > var_start + lhs->lhs_varlen)"
    },
    {
        "line": 59,
        "fullcodeline": "if (cctx->ctx_skip != SKIP_YES)"
    },
    {
        "line": 217,
        "fullcodeline": "if (lhs->lhs_varlen > 1 || var_start[lhs->lhs_varlen] != ':')"
    },
    {
        "line": 220,
        "fullcodeline": "if (lhs->lhs_dest != dest_option && lhs->lhs_dest != dest_func_option)"
    },
    {
        "line": 243,
        "fullcodeline": "if (oplen == 3 && !heredoc"
    },
    {
        "line": 253,
        "fullcodeline": "if (lhs->lhs_lvar == NULL && lhs->lhs_dest == dest_local"
    },
    {
        "line": 26,
        "fullcodeline": "var_end = var_start + 2;"
    },
    {
        "line": 37,
        "fullcodeline": "&& lhs->lhs_dest_end[-1] == ':')"
    },
    {
        "line": 38,
        "fullcodeline": "--lhs->lhs_dest_end;"
    },
    {
        "line": 40,
        "fullcodeline": "--var_end;"
    },
    {
        "line": 52,
        "fullcodeline": "lhs->lhs_has_index = TRUE;"
    },
    {
        "line": 55,
        "fullcodeline": "lhs->lhs_type = &t_list_string;"
    },
    {
        "line": 61,
        "fullcodeline": "int\t    declare_error = FALSE;"
    },
    {
        "line": 218,
        "fullcodeline": "var_end = lhs->lhs_dest_end;"
    },
    {
        "line": 247,
        "fullcodeline": "&& lhs->lhs_type->tt_type != VAR_ANY)"
    },
    {
        "line": 249,
        "fullcodeline": "emsg(_(e_can_only_concatenate_to_string));"
    },
    {
        "line": 254,
        "fullcodeline": "&& cctx->ctx_skip != SKIP_YES)"
    },
    {
        "line": 276,
        "fullcodeline": "int assign = cmdidx == CMD_final ? ASSIGN_FINAL"
    },
    {
        "line": 278,
        "fullcodeline": "lhs->lhs_lvar = reserve_local(cctx, var_start, lhs->lhs_varlen,"
    },
    {
        "line": 282,
        "fullcodeline": "lhs->lhs_new_local = TRUE;"
    },
    {
        "line": 288,
        "fullcodeline": "char_u\t*after = var_start + lhs->lhs_varlen;"
    },
    {
        "line": 24,
        "fullcodeline": "if (!valid_dest_reg(var_start[1]))"
    },
    {
        "line": 31,
        "fullcodeline": "var_end = skip_option_env_lead(var_start);"
    },
    {
        "line": 32,
        "fullcodeline": "var_end = to_name_end(var_end, TRUE);"
    },
    {
        "line": 57,
        "fullcodeline": "lhs->lhs_type = &t_any;"
    },
    {
        "line": 63,
        "fullcodeline": "if (get_var_dest(lhs->lhs_name, &lhs->lhs_dest, cmdidx,"
    },
    {
        "line": 67,
        "fullcodeline": "if (lhs->lhs_dest != dest_local"
    },
    {
        "line": 222,
        "fullcodeline": "if (is_decl && *var_end == ':')"
    },
    {
        "line": 246,
        "fullcodeline": "&& lhs->lhs_type->tt_type != VAR_STRING"
    },
    {
        "line": 256,
        "fullcodeline": "if (oplen > 1 && !heredoc)"
    },
    {
        "line": 262,
        "fullcodeline": "if (!is_decl || (lhs->lhs_has_index && !has_cmd"
    },
    {
        "line": 270,
        "fullcodeline": "if ((lhs->lhs_type->tt_type == VAR_FUNC"
    },
    {
        "line": 280,
        "fullcodeline": "if (lhs->lhs_lvar == NULL)"
    },
    {
        "line": 292,
        "fullcodeline": "if (is_decl && cctx->ctx_skip != SKIP_YES)"
    },
    {
        "line": 315,
        "fullcodeline": "if (after > var_start + lhs->lhs_varlen)"
    },
    {
        "line": 324,
        "fullcodeline": "if (lhs->lhs_type->tt_member == NULL)"
    },
    {
        "line": 68,
        "fullcodeline": "&& cmdidx != CMD_const && cmdidx != CMD_final)"
    },
    {
        "line": 71,
        "fullcodeline": "declare_error = is_decl;"
    },
    {
        "line": 211,
        "fullcodeline": "vim9_declare_error(lhs->lhs_name);"
    },
    {
        "line": 232,
        "fullcodeline": "p = skipwhite(var_end + 1);"
    },
    {
        "line": 233,
        "fullcodeline": "lhs->lhs_type = parse_type(&p, cctx->ctx_type_list, TRUE);"
    },
    {
        "line": 236,
        "fullcodeline": "lhs->lhs_has_type = TRUE;"
    },
    {
        "line": 237,
        "fullcodeline": "lhs->lhs_end = p;"
    },
    {
        "line": 245,
        "fullcodeline": "&& !lhs->lhs_has_index"
    },
    {
        "line": 259,
        "fullcodeline": "semsg(_(e_cannot_use_operator_on_new_variable), lhs->lhs_name);"
    },
    {
        "line": 265,
        "fullcodeline": "semsg(_(e_unknown_variable_str), lhs->lhs_name);"
    },
    {
        "line": 272,
        "fullcodeline": "&& var_wrong_func_name(lhs->lhs_name, TRUE))"
    },
    {
        "line": 277,
        "fullcodeline": ": cmdidx == CMD_const ? ASSIGN_CONST : ASSIGN_VAR;"
    },
    {
        "line": 307,
        "fullcodeline": "p = skip_index(after);"
    },
    {
        "line": 313,
        "fullcodeline": "after = p;"
    },
    {
        "line": 317,
        "fullcodeline": "lhs->lhs_varlen = after - var_start;"
    },
    {
        "line": 318,
        "fullcodeline": "lhs->lhs_dest = dest_expr;"
    },
    {
        "line": 321,
        "fullcodeline": "lhs->lhs_type = &t_any;"
    },
    {
        "line": 325,
        "fullcodeline": "lhs->lhs_member_type = &t_any;"
    },
    {
        "line": 227,
        "fullcodeline": "if (!VIM_ISWHITE(var_end[1]))"
    },
    {
        "line": 234,
        "fullcodeline": "if (lhs->lhs_type == NULL)"
    },
    {
        "line": 244,
        "fullcodeline": "&& lhs->lhs_dest != dest_global"
    },
    {
        "line": 263,
        "fullcodeline": "&& cctx->ctx_skip != SKIP_YES))"
    },
    {
        "line": 271,
        "fullcodeline": "|| lhs->lhs_type->tt_type == VAR_PARTIAL)"
    },
    {
        "line": 308,
        "fullcodeline": "if (*p != '[' && *p != '.')"
    },
    {
        "line": 327,
        "fullcodeline": "lhs->lhs_member_type = lhs->lhs_type->tt_member;"
    },
    {
        "line": 76,
        "fullcodeline": "if (check_reserved_name(lhs->lhs_name) == FAIL)"
    },
    {
        "line": 79,
        "fullcodeline": "if (lookup_local(var_start, lhs->lhs_varlen,"
    },
    {
        "line": 97,
        "fullcodeline": "if (lhs->lhs_lvar != NULL)"
    },
    {
        "line": 229,
        "fullcodeline": "semsg(_(e_white_space_required_after_str_str), \":\", var_end);"
    },
    {
        "line": 239,
        "fullcodeline": "else if (lhs->lhs_lvar != NULL)"
    },
    {
        "line": 295,
        "fullcodeline": "emsg(_(e_cannot_use_index_when_declaring_variable));"
    },
    {
        "line": 310,
        "fullcodeline": "lhs->lhs_varlen_total = p - var_start;"
    },
    {
        "line": 81,
        "fullcodeline": "lhs->lhs_lvar = &lhs->lhs_local_lvar;"
    },
    {
        "line": 297,
        "fullcodeline": "semsg(_(e_unknown_variable_str), lhs->lhs_name);"
    },
    {
        "line": 84,
        "fullcodeline": "CLEAR_FIELD(lhs->lhs_arg_lvar);"
    },
    {
        "line": 107,
        "fullcodeline": "int script_namespace = lhs->lhs_varlen > 1"
    },
    {
        "line": 109,
        "fullcodeline": "int script_var = (script_namespace"
    },
    {
        "line": 114,
        "fullcodeline": "imported_T  *import ="
    },
    {
        "line": 85,
        "fullcodeline": "if (arg_exists(var_start, lhs->lhs_varlen,"
    },
    {
        "line": 101,
        "fullcodeline": "semsg(_(e_variable_already_declared), lhs->lhs_name);"
    },
    {
        "line": 115,
        "fullcodeline": "find_imported(var_start, lhs->lhs_varlen, FALSE);"
    },
    {
        "line": 117,
        "fullcodeline": "if (script_namespace || script_var || import != NULL)"
    },
    {
        "line": 94,
        "fullcodeline": "lhs->lhs_lvar = &lhs->lhs_arg_lvar;"
    },
    {
        "line": 108,
        "fullcodeline": "&& STRNCMP(var_start, \"s:\", 2) == 0;"
    },
    {
        "line": 119,
        "fullcodeline": "char_u\t*rawname = lhs->lhs_name"
    },
    {
        "line": 147,
        "fullcodeline": "lhs->lhs_dest = dest_script;"
    },
    {
        "line": 110,
        "fullcodeline": "? script_var_exists(var_start + 2, lhs->lhs_varlen - 2,"
    },
    {
        "line": 112,
        "fullcodeline": ": script_var_exists(var_start, lhs->lhs_varlen,"
    },
    {
        "line": 122,
        "fullcodeline": "if (script_namespace && current_script_is_vim9())"
    },
    {
        "line": 151,
        "fullcodeline": "if (import != NULL)"
    },
    {
        "line": 185,
        "fullcodeline": "if (SCRIPT_ID_VALID(lhs->lhs_scriptvar_sid))"
    },
    {
        "line": 91,
        "fullcodeline": "semsg(_(e_str_is_used_as_argument), lhs->lhs_name);"
    },
    {
        "line": 120,
        "fullcodeline": "+ (lhs->lhs_name[1] == ':' ? 2 : 0);"
    },
    {
        "line": 124,
        "fullcodeline": "semsg(_(e_cannot_use_s_colon_in_vim9_script_str),"
    },
    {
        "line": 153,
        "fullcodeline": "char_u\t*dot = vim_strchr(var_start, '.');"
    },
    {
        "line": 163,
        "fullcodeline": "p = skipwhite(dot + 1);"
    },
    {
        "line": 164,
        "fullcodeline": "var_end = to_name_end(p, TRUE);"
    },
    {
        "line": 171,
        "fullcodeline": "vim_free(lhs->lhs_name);"
    },
    {
        "line": 172,
        "fullcodeline": "lhs->lhs_varlen = var_end - p;"
    },
    {
        "line": 173,
        "fullcodeline": "lhs->lhs_name = vim_strnsave(p, lhs->lhs_varlen);"
    },
    {
        "line": 176,
        "fullcodeline": "rawname = lhs->lhs_name;"
    },
    {
        "line": 177,
        "fullcodeline": "lhs->lhs_scriptvar_sid = import->imp_sid;"
    },
    {
        "line": 182,
        "fullcodeline": "lhs->lhs_has_index = lhs->lhs_dest_end"
    },
    {
        "line": 188,
        "fullcodeline": "lhs->lhs_scriptvar_idx = get_script_item_idx("
    },
    {
        "line": 203,
        "fullcodeline": "else if (check_defined(var_start, lhs->lhs_varlen, cctx,"
    },
    {
        "line": 157,
        "fullcodeline": "if (dot == NULL)"
    },
    {
        "line": 165,
        "fullcodeline": "if (var_end == p)"
    },
    {
        "line": 174,
        "fullcodeline": "if (lhs->lhs_name == NULL)"
    },
    {
        "line": 192,
        "fullcodeline": "if (lhs->lhs_scriptvar_idx >= 0)"
    },
    {
        "line": 131,
        "fullcodeline": "semsg(_(e_cannot_declare_script_variable_in_function_str),"
    },
    {
        "line": 138,
        "fullcodeline": "else if (cctx->ctx_ufunc->uf_script_ctx_version"
    },
    {
        "line": 159,
        "fullcodeline": "semsg(_(e_no_dot_after_imported_name_str),"
    },
    {
        "line": 167,
        "fullcodeline": "semsg(_(e_missing_name_after_imported_name_str),"
    },
    {
        "line": 183,
        "fullcodeline": "> skipwhite(var_end);"
    },
    {
        "line": 190,
        "fullcodeline": "lhs->lhs_has_index ? ASSIGN_FINAL : ASSIGN_CONST,"
    },
    {
        "line": 194,
        "fullcodeline": "scriptitem_T *si = SCRIPT_ITEM("
    },
    {
        "line": 196,
        "fullcodeline": "svar_T\t *sv ="
    },
    {
        "line": 199,
        "fullcodeline": "lhs->lhs_type = sv->sv_type;"
    },
    {
        "line": 134,
        "fullcodeline": "semsg(_(e_variable_already_declared_in_script_str),"
    },
    {
        "line": 141,
        "fullcodeline": "&& !script_var && import == NULL)"
    },
    {
        "line": 143,
        "fullcodeline": "semsg(_(e_unknown_variable_str), lhs->lhs_name);"
    },
    {
        "line": 197,
        "fullcodeline": "((svar_T *)si->sn_var_vals.ga_data)"
    }
]