[
    {
        "line": 12,
        "fullcodeline": "if (*name == '&')"
    },
    {
        "line": 19,
        "fullcodeline": "*dest = dest_option;"
    },
    {
        "line": 25,
        "fullcodeline": "p = name;"
    },
    {
        "line": 26,
        "fullcodeline": "p = find_option_end(&p, option_scope);"
    },
    {
        "line": 34,
        "fullcodeline": "*p = NUL;"
    },
    {
        "line": 35,
        "fullcodeline": "opt_type = get_option_value(skip_option_env_lead(name),"
    },
    {
        "line": 37,
        "fullcodeline": "*p = cc;"
    },
    {
        "line": 20,
        "fullcodeline": "if (cmdidx == CMD_final || cmdidx == CMD_const)"
    },
    {
        "line": 27,
        "fullcodeline": "if (p == NULL)"
    },
    {
        "line": 22,
        "fullcodeline": "emsg(_(e_cannot_lock_option));"
    },
    {
        "line": 30,
        "fullcodeline": "emsg(_(e_unexpected_characters_in_assignment));"
    },
    {
        "line": 41,
        "fullcodeline": "semsg(_(e_unknown_option_str), name);"
    },
    {
        "line": 58,
        "fullcodeline": "*type = &t_bool;"
    },
    {
        "line": 62,
        "fullcodeline": "*type = &t_number;"
    },
    {
        "line": 66,
        "fullcodeline": "else if (*name == '$')"
    },
    {
        "line": 45,
        "fullcodeline": "if (opt_p_flags & P_FUNC)"
    },
    {
        "line": 68,
        "fullcodeline": "*dest = dest_env;"
    },
    {
        "line": 69,
        "fullcodeline": "*type = &t_string;"
    },
    {
        "line": 48,
        "fullcodeline": "*type = &t_any;"
    },
    {
        "line": 49,
        "fullcodeline": "*dest = dest_func_option;"
    },
    {
        "line": 53,
        "fullcodeline": "*type = &t_string;"
    },
    {
        "line": 71,
        "fullcodeline": "else if (*name == '@')"
    },
    {
        "line": 75,
        "fullcodeline": "*dest = dest_reg;"
    },
    {
        "line": 76,
        "fullcodeline": "*type = name[1] == '#' ? &t_number_or_string : &t_string;"
    },
    {
        "line": 73,
        "fullcodeline": "if (!valid_dest_reg(name[1]))"
    },
    {
        "line": 78,
        "fullcodeline": "else if (STRNCMP(name, \"g:\", 2) == 0)"
    },
    {
        "line": 80,
        "fullcodeline": "*dest = dest_global;"
    },
    {
        "line": 82,
        "fullcodeline": "else if (STRNCMP(name, \"b:\", 2) == 0)"
    },
    {
        "line": 84,
        "fullcodeline": "*dest = dest_buffer;"
    },
    {
        "line": 86,
        "fullcodeline": "else if (STRNCMP(name, \"w:\", 2) == 0)"
    },
    {
        "line": 88,
        "fullcodeline": "*dest = dest_window;"
    },
    {
        "line": 90,
        "fullcodeline": "else if (STRNCMP(name, \"t:\", 2) == 0)"
    },
    {
        "line": 92,
        "fullcodeline": "*dest = dest_tab;"
    },
    {
        "line": 94,
        "fullcodeline": "else if (STRNCMP(name, \"v:\", 2) == 0)"
    },
    {
        "line": 99,
        "fullcodeline": "*vimvaridx = find_vim_var(name + 2, &di_flags);"
    },
    {
        "line": 108,
        "fullcodeline": "*dest = dest_vimvar;"
    },
    {
        "line": 109,
        "fullcodeline": "vtv = get_vim_var_tv(*vimvaridx);"
    },
    {
        "line": 110,
        "fullcodeline": "*type = typval2type_vimvar(vtv, cctx->ctx_type_list);"
    },
    {
        "line": 100,
        "fullcodeline": "if (*vimvaridx < 0)"
    },
    {
        "line": 106,
        "fullcodeline": "if (var_check_ro(di_flags, name, FALSE))"
    },
    {
        "line": 102,
        "fullcodeline": "semsg(_(e_variable_not_found_str), name);"
    }
]