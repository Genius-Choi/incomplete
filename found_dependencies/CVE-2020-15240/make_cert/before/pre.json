[
    {
        "line": 2,
        "fullcodeline": "cert = OpenSSL::X509::Certificate.new"
    },
    {
        "line": 3,
        "fullcodeline": "cert.issuer = OpenSSL::X509::Name.parse('/C=BE/O=Auth0/OU=Auth0/CN=Auth0')"
    },
    {
        "line": 4,
        "fullcodeline": "cert.subject = cert.issuer"
    },
    {
        "line": 5,
        "fullcodeline": "cert.not_before = Time.now"
    },
    {
        "line": 6,
        "fullcodeline": "cert.not_after = Time.now + 365 * 24 * 60 * 60"
    },
    {
        "line": 7,
        "fullcodeline": "cert.public_key = private_key.public_key"
    },
    {
        "line": 8,
        "fullcodeline": "cert.serial = 0x0"
    },
    {
        "line": 9,
        "fullcodeline": "cert.version = 2"
    },
    {
        "line": 11,
        "fullcodeline": "ef = OpenSSL::X509::ExtensionFactory.new"
    },
    {
        "line": 12,
        "fullcodeline": "ef.subject_certificate = cert"
    },
    {
        "line": 13,
        "fullcodeline": "ef.issuer_certificate = cert"
    },
    {
        "line": 14,
        "fullcodeline": "cert.extensions = ["
    },
    {
        "line": 18,
        "fullcodeline": "cert.add_extension ef.create_extension("
    },
    {
        "line": 23,
        "fullcodeline": "cert.sign private_key, OpenSSL::Digest::SHA1.new"
    },
    {
        "line": 15,
        "fullcodeline": "ef.create_extension('basicConstraints', 'CA:TRUE', true),"
    },
    {
        "line": 16,
        "fullcodeline": "ef.create_extension('subjectKeyIdentifier', 'hash')"
    }
]