[
    {
        "line": 2,
        "fullcodeline": "int rc = SQLITE_OK;"
    },
    {
        "line": 3,
        "fullcodeline": "if( p->pWin && p->pPrior==0 && (p->selFlags & SF_WinRewrite)==0 ){"
    },
    {
        "line": 125,
        "fullcodeline": "if( rc && pParse->nErr==0 ){"
    },
    {
        "line": 4,
        "fullcodeline": "Vdbe *v = sqlite3GetVdbe(pParse);"
    },
    {
        "line": 5,
        "fullcodeline": "sqlite3 *db = pParse->db;"
    },
    {
        "line": 6,
        "fullcodeline": "Select *pSub = 0;             /* The subquery */"
    },
    {
        "line": 7,
        "fullcodeline": "SrcList *pSrc = p->pSrc;"
    },
    {
        "line": 8,
        "fullcodeline": "Expr *pWhere = p->pWhere;"
    },
    {
        "line": 9,
        "fullcodeline": "ExprList *pGroupBy = p->pGroupBy;"
    },
    {
        "line": 10,
        "fullcodeline": "Expr *pHaving = p->pHaving;"
    },
    {
        "line": 11,
        "fullcodeline": "ExprList *pSort = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "ExprList *pSublist = 0;       /* Expression list for sub-query */"
    },
    {
        "line": 14,
        "fullcodeline": "Window *pMWin = p->pWin;      /* Master window object */"
    },
    {
        "line": 18,
        "fullcodeline": "pTab = sqlite3DbMallocZero(db, sizeof(Table));"
    },
    {
        "line": 23,
        "fullcodeline": "p->pSrc = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "p->pWhere = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "p->pGroupBy = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "p->pHaving = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "p->selFlags &= ~SF_Aggregate;"
    },
    {
        "line": 28,
        "fullcodeline": "p->selFlags |= SF_WinRewrite;"
    },
    {
        "line": 33,
        "fullcodeline": "pSort = sqlite3ExprListDup(db, pMWin->pPartition, 0);"
    },
    {
        "line": 34,
        "fullcodeline": "pSort = exprListAppendList(pParse, pSort, pMWin->pOrderBy, 1);"
    },
    {
        "line": 48,
        "fullcodeline": "pMWin->iEphCsr = pParse->nTab++;"
    },
    {
        "line": 49,
        "fullcodeline": "pParse->nTab += 3;"
    },
    {
        "line": 51,
        "fullcodeline": "selectWindowRewriteEList(pParse, pMWin, pSrc, p->pEList, pTab, &pSublist);"
    },
    {
        "line": 52,
        "fullcodeline": "selectWindowRewriteEList(pParse, pMWin, pSrc, p->pOrderBy, pTab, &pSublist);"
    },
    {
        "line": 53,
        "fullcodeline": "pMWin->nBufferCol = (pSublist ? pSublist->nExpr : 0);"
    },
    {
        "line": 58,
        "fullcodeline": "pSublist = exprListAppendList(pParse, pSublist, pMWin->pPartition, 0);"
    },
    {
        "line": 59,
        "fullcodeline": "pSublist = exprListAppendList(pParse, pSublist, pMWin->pOrderBy, 0);"
    },
    {
        "line": 96,
        "fullcodeline": "pSub = sqlite3SelectNew("
    },
    {
        "line": 99,
        "fullcodeline": "p->pSrc = sqlite3SrcListAppend(pParse, 0, 0, 0);"
    },
    {
        "line": 122,
        "fullcodeline": "sqlite3DbFree(db, pTab);"
    },
    {
        "line": 19,
        "fullcodeline": "if( pTab==0 ){"
    },
    {
        "line": 35,
        "fullcodeline": "if( pSort && p->pOrderBy && p->pOrderBy->nExpr<=pSort->nExpr ){"
    },
    {
        "line": 65,
        "fullcodeline": "for(pWin=pMWin; pWin; pWin=pWin->pNextWin){"
    },
    {
        "line": 90,
        "fullcodeline": "if( pSublist==0 ){"
    },
    {
        "line": 127,
        "fullcodeline": "return sqlite3ErrorToParser(pParse->db, SQLITE_NOMEM);"
    },
    {
        "line": 36,
        "fullcodeline": "int nSave = pSort->nExpr;"
    },
    {
        "line": 37,
        "fullcodeline": "pSort->nExpr = p->pOrderBy->nExpr;"
    },
    {
        "line": 42,
        "fullcodeline": "pSort->nExpr = nSave;"
    },
    {
        "line": 79,
        "fullcodeline": "pWin->regAccum = ++pParse->nMem;"
    },
    {
        "line": 80,
        "fullcodeline": "pWin->regResult = ++pParse->nMem;"
    },
    {
        "line": 81,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_Null, 0, pWin->regAccum);"
    },
    {
        "line": 91,
        "fullcodeline": "pSublist = sqlite3ExprListAppend(pParse, 0,"
    },
    {
        "line": 102,
        "fullcodeline": "p->pSrc->a[0].pSelect = pSub;"
    },
    {
        "line": 103,
        "fullcodeline": "sqlite3SrcListAssignCursors(pParse, p->pSrc);"
    },
    {
        "line": 104,
        "fullcodeline": "pSub->selFlags |= SF_Expanded;"
    },
    {
        "line": 105,
        "fullcodeline": "pTab2 = sqlite3ResultSetOfSelect(pParse, pSub, SQLITE_AFF_NONE);"
    },
    {
        "line": 114,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_OpenEphemeral, pMWin->iEphCsr, pSublist->nExpr);"
    },
    {
        "line": 115,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_OpenDup, pMWin->iEphCsr+1, pMWin->iEphCsr);"
    },
    {
        "line": 116,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_OpenDup, pMWin->iEphCsr+2, pMWin->iEphCsr);"
    },
    {
        "line": 117,
        "fullcodeline": "sqlite3VdbeAddOp2(v, OP_OpenDup, pMWin->iEphCsr+3, pMWin->iEphCsr);"
    },
    {
        "line": 121,
        "fullcodeline": "if( db->mallocFailed ) rc = SQLITE_NOMEM;"
    },
    {
        "line": 20,
        "fullcodeline": "return sqlite3ErrorToParser(db, SQLITE_NOMEM);"
    },
    {
        "line": 38,
        "fullcodeline": "if( sqlite3ExprListCompare(pSort, p->pOrderBy, -1)==0 ){"
    },
    {
        "line": 67,
        "fullcodeline": "if( pWin->pFunc->funcFlags & SQLITE_FUNC_SUBTYPE ){"
    },
    {
        "line": 106,
        "fullcodeline": "if( pTab2==0 ){"
    },
    {
        "line": 119,
        "fullcodeline": "sqlite3SelectDelete(db, pSub);"
    },
    {
        "line": 39,
        "fullcodeline": "sqlite3ExprListDelete(db, p->pOrderBy);"
    },
    {
        "line": 40,
        "fullcodeline": "p->pOrderBy = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "selectWindowRewriteEList(pParse, pMWin, pSrc, pArgs, pTab, &pSublist);"
    },
    {
        "line": 69,
        "fullcodeline": "pWin->iArgCol = (pSublist ? pSublist->nExpr : 0);"
    },
    {
        "line": 70,
        "fullcodeline": "pWin->bExprArgs = 1;"
    },
    {
        "line": 76,
        "fullcodeline": "Expr *pFilter = sqlite3ExprDup(db, pWin->pFilter, 0);"
    },
    {
        "line": 77,
        "fullcodeline": "pSublist = sqlite3ExprListAppend(pParse, pSublist, pFilter);"
    },
    {
        "line": 92,
        "fullcodeline": "sqlite3Expr(db, TK_INTEGER, \"0\")"
    },
    {
        "line": 107,
        "fullcodeline": "rc = SQLITE_NOMEM;"
    },
    {
        "line": 72,
        "fullcodeline": "pWin->iArgCol = (pSublist ? pSublist->nExpr : 0);"
    },
    {
        "line": 73,
        "fullcodeline": "pSublist = exprListAppendList(pParse, pSublist, pArgs, 0);"
    },
    {
        "line": 109,
        "fullcodeline": "memcpy(pTab, pTab2, sizeof(Table));"
    },
    {
        "line": 110,
        "fullcodeline": "pTab->tabFlags |= TF_Ephemeral;"
    },
    {
        "line": 111,
        "fullcodeline": "p->pSrc->a[0].pTab = pTab;"
    },
    {
        "line": 112,
        "fullcodeline": "pTab = pTab2;"
    }
]