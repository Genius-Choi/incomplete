[
    {
        "line": 13,
        "fullcodeline": "Dwarf_Small *pubnames_like_ptr = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "Dwarf_Off pubnames_section_offset = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "Dwarf_Small *section_end_ptr = section_data_ptr +section_length;"
    },
    {
        "line": 20,
        "fullcodeline": "Dwarf_Global_Context pubnames_context = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "Dwarf_Bool           pubnames_context_on_list = FALSE;"
    },
    {
        "line": 23,
        "fullcodeline": "Dwarf_Unsigned version = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "Dwarf_Off die_offset_in_cu = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "Dwarf_Unsigned global_count = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "Dwarf_Chain head_chain = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "Dwarf_Chain *plast_chain = &head_chain;"
    },
    {
        "line": 37,
        "fullcodeline": "Dwarf_Global *ret_globals = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "int mres = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "Dwarf_Unsigned i = 0;"
    },
    {
        "line": 62,
        "fullcodeline": "pubnames_like_ptr = section_data_ptr;"
    },
    {
        "line": 395,
        "fullcodeline": "ret_globals = (Dwarf_Global *)"
    },
    {
        "line": 43,
        "fullcodeline": "if (!dbg || dbg->de_magic != DBG_IS_VALID) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (section_data_ptr == NULL) {"
    },
    {
        "line": 392,
        "fullcodeline": "} while (pubnames_like_ptr < section_end_ptr);"
    },
    {
        "line": 397,
        "fullcodeline": "if (ret_globals == NULL) {"
    },
    {
        "line": 411,
        "fullcodeline": "curr_chain = head_chain;"
    },
    {
        "line": 44,
        "fullcodeline": "_dwarf_error_string(NULL, error, DW_DLE_DBG_NULL,"
    },
    {
        "line": 53,
        "fullcodeline": "int res = _dwarf_load_debug_info(dbg, error);"
    },
    {
        "line": 64,
        "fullcodeline": "Dwarf_Unsigned length = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "int local_extension_size = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "int local_length_size = 0;"
    },
    {
        "line": 78,
        "fullcodeline": "pubnames_context_on_list = FALSE;"
    },
    {
        "line": 79,
        "fullcodeline": "pubnames_context = (Dwarf_Global_Context)"
    },
    {
        "line": 103,
        "fullcodeline": "mres = _dwarf_read_area_length_ck_wrapper(dbg,"
    },
    {
        "line": 114,
        "fullcodeline": "pubnames_context->pu_alloc_type = context_DLA_code;"
    },
    {
        "line": 115,
        "fullcodeline": "pubnames_context->pu_length_size = local_length_size;"
    },
    {
        "line": 116,
        "fullcodeline": "pubnames_context->pu_length = length;"
    },
    {
        "line": 117,
        "fullcodeline": "pubnames_context->pu_extension_size = local_extension_size;"
    },
    {
        "line": 118,
        "fullcodeline": "pubnames_context->pu_dbg = dbg;"
    },
    {
        "line": 119,
        "fullcodeline": "pubnames_context->pu_pub_offset = pubnames_section_offset;"
    },
    {
        "line": 120,
        "fullcodeline": "pubnames_ptr_past_end_cu = pubnames_like_ptr + length;"
    },
    {
        "line": 121,
        "fullcodeline": "pubnames_context->pu_pub_entries_end_ptr ="
    },
    {
        "line": 136,
        "fullcodeline": "mres = _dwarf_read_unaligned_ck_wrapper(dbg,"
    },
    {
        "line": 146,
        "fullcodeline": "pubnames_context->pu_version = version;"
    },
    {
        "line": 147,
        "fullcodeline": "pubnames_like_ptr += DWARF_HALF_SIZE;"
    },
    {
        "line": 171,
        "fullcodeline": "mres = _dwarf_read_unaligned_ck_wrapper(dbg,"
    },
    {
        "line": 184,
        "fullcodeline": "pubnames_like_ptr += pubnames_context->pu_length_size;"
    },
    {
        "line": 186,
        "fullcodeline": "FIX_UP_OFFSET_IRIX_BUG(dbg,"
    },
    {
        "line": 189,
        "fullcodeline": "mres = _dwarf_read_unaligned_ck_wrapper(dbg,"
    },
    {
        "line": 201,
        "fullcodeline": "pubnames_like_ptr += pubnames_context->pu_length_size;"
    },
    {
        "line": 215,
        "fullcodeline": "mres = _dwarf_read_unaligned_ck_wrapper(dbg,"
    },
    {
        "line": 227,
        "fullcodeline": "pubnames_like_ptr += pubnames_context->pu_length_size;"
    },
    {
        "line": 228,
        "fullcodeline": "FIX_UP_OFFSET_IRIX_BUG(dbg,"
    },
    {
        "line": 391,
        "fullcodeline": "pubnames_like_ptr = pubnames_ptr_past_end_cu;"
    },
    {
        "line": 396,
        "fullcodeline": "_dwarf_get_alloc(dbg, DW_DLA_LIST, global_count);"
    },
    {
        "line": 401,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 412,
        "fullcodeline": "for (i = 0; i < global_count; i++) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (res != DW_DLV_OK) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (pubnames_context == NULL) {"
    },
    {
        "line": 89,
        "fullcodeline": "if ((pubnames_like_ptr + DWARF_32BIT_SIZE +"
    },
    {
        "line": 107,
        "fullcodeline": "if (mres != DW_DLV_OK) {"
    },
    {
        "line": 124,
        "fullcodeline": "if ((pubnames_like_ptr + (DWARF_HALF_SIZE) ) >"
    },
    {
        "line": 139,
        "fullcodeline": "if (mres != DW_DLV_OK) {"
    },
    {
        "line": 149,
        "fullcodeline": "if (version != DW_PUBNAMES_VERSION2) {"
    },
    {
        "line": 159,
        "fullcodeline": "if ((pubnames_like_ptr + 3*pubnames_context->pu_length_size)>"
    },
    {
        "line": 176,
        "fullcodeline": "if (mres != DW_DLV_OK) {"
    },
    {
        "line": 194,
        "fullcodeline": "if (mres != DW_DLV_OK) {"
    },
    {
        "line": 203,
        "fullcodeline": "if (pubnames_like_ptr > (section_data_ptr + section_length)) {"
    },
    {
        "line": 220,
        "fullcodeline": "if (mres != DW_DLV_OK) {"
    },
    {
        "line": 230,
        "fullcodeline": "if (pubnames_like_ptr > (section_data_ptr + section_length)) {"
    },
    {
        "line": 240,
        "fullcodeline": "if (!die_offset_in_cu) {"
    },
    {
        "line": 367,
        "fullcodeline": "if (pubnames_like_ptr > pubnames_ptr_past_end_cu) {"
    },
    {
        "line": 385,
        "fullcodeline": "Dwarf_Unsigned increment ="
    },
    {
        "line": 389,
        "fullcodeline": "pubnames_section_offset += increment;"
    },
    {
        "line": 416,
        "fullcodeline": "prev = curr_chain;"
    },
    {
        "line": 417,
        "fullcodeline": "curr_chain = curr_chain->ch_next;"
    },
    {
        "line": 418,
        "fullcodeline": "prev->ch_item = 0; /* Not actually necessary. */"
    },
    {
        "line": 419,
        "fullcodeline": "dwarf_dealloc(dbg, prev, DW_DLA_CHAIN);"
    },
    {
        "line": 80,
        "fullcodeline": "_dwarf_get_alloc(dbg, context_DLA_code, 1);"
    },
    {
        "line": 82,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 93,
        "fullcodeline": "pubnames_error_length(dbg,error,"
    },
    {
        "line": 97,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 108,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 127,
        "fullcodeline": "pubnames_error_length(dbg,error,"
    },
    {
        "line": 130,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 140,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 150,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 161,
        "fullcodeline": "pubnames_error_length(dbg,error,"
    },
    {
        "line": 165,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 177,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 195,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 204,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 221,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 231,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 287,
        "fullcodeline": "res = _dwarf_check_string_valid(dbg,section_data_ptr,"
    },
    {
        "line": 299,
        "fullcodeline": "glname = (unsigned char *)pubnames_like_ptr;"
    },
    {
        "line": 300,
        "fullcodeline": "pubnames_like_ptr = pubnames_like_ptr +"
    },
    {
        "line": 304,
        "fullcodeline": "res = _dwarf_make_global_add_to_chain(dbg,"
    },
    {
        "line": 338,
        "fullcodeline": "mres = _dwarf_read_unaligned_ck_wrapper(dbg,"
    },
    {
        "line": 352,
        "fullcodeline": "pubnames_like_ptr += pubnames_context->pu_length_size;"
    },
    {
        "line": 353,
        "fullcodeline": "FIX_UP_OFFSET_IRIX_BUG(dbg,"
    },
    {
        "line": 371,
        "fullcodeline": "_dwarf_error(dbg, error, length_err_num);"
    },
    {
        "line": 399,
        "fullcodeline": "dwarf_dealloc(dbg,pubnames_context,context_DLA_code);"
    },
    {
        "line": 162,
        "fullcodeline": "3*pubnames_context->pu_length_size,"
    },
    {
        "line": 291,
        "fullcodeline": "if (res != DW_DLV_OK) {"
    },
    {
        "line": 313,
        "fullcodeline": "if (res != DW_DLV_OK) {"
    },
    {
        "line": 323,
        "fullcodeline": "if ((pubnames_like_ptr +"
    },
    {
        "line": 344,
        "fullcodeline": "if (mres != DW_DLV_OK) {"
    },
    {
        "line": 355,
        "fullcodeline": "if (pubnames_like_ptr >"
    },
    {
        "line": 152,
        "fullcodeline": "dwarf_dealloc(dbg,pubnames_context,context_DLA_code);"
    },
    {
        "line": 206,
        "fullcodeline": "dwarf_dealloc(dbg,pubnames_context,context_DLA_code);"
    },
    {
        "line": 233,
        "fullcodeline": "dwarf_dealloc(dbg,pubnames_context,context_DLA_code);"
    },
    {
        "line": 254,
        "fullcodeline": "res = _dwarf_make_global_add_to_chain(dbg,"
    },
    {
        "line": 292,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 314,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 326,
        "fullcodeline": "pubnames_error_length(dbg,error,"
    },
    {
        "line": 330,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 361,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 373,
        "fullcodeline": "dwarf_dealloc(dbg,pubnames_context,context_DLA_code);"
    },
    {
        "line": 264,
        "fullcodeline": "if (res != DW_DLV_OK) {"
    },
    {
        "line": 276,
        "fullcodeline": "dwarf_dealloc(dbg,pubnames_context,context_DLA_code);"
    },
    {
        "line": 277,
        "fullcodeline": "pubnames_context = 0;"
    },
    {
        "line": 301,
        "fullcodeline": "strlen((char *) pubnames_like_ptr) + 1;"
    },
    {
        "line": 327,
        "fullcodeline": "2*pubnames_context->pu_length_size,"
    },
    {
        "line": 265,
        "fullcodeline": "dealloc_globals_chain(dbg,head_chain);"
    },
    {
        "line": 346,
        "fullcodeline": "dwarf_dealloc(dbg,pubnames_context,"
    },
    {
        "line": 358,
        "fullcodeline": "dwarf_dealloc(dbg,pubnames_context,"
    }
]