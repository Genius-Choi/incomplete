[
    {
        "line": 4,
        "fullcodeline": "int\t m=STALL;"
    },
    {
        "line": 585,
        "fullcodeline": "if(transfer_count<parallel && parent_mirror)"
    },
    {
        "line": 11,
        "fullcodeline": "remove_this_source_dir=(remove_source_dirs && source_dir.last_char()!='/');"
    },
    {
        "line": 15,
        "fullcodeline": "source_session->Chdir(source_dir);"
    },
    {
        "line": 16,
        "fullcodeline": "source_redirections=0;"
    },
    {
        "line": 17,
        "fullcodeline": "source_session->Roll();"
    },
    {
        "line": 19,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 22,
        "fullcodeline": "HandleChdir(source_session,source_redirections);"
    },
    {
        "line": 90,
        "fullcodeline": "res=target_session->Done();"
    },
    {
        "line": 93,
        "fullcodeline": "target_session->Close();"
    },
    {
        "line": 97,
        "fullcodeline": "target_session->Chdir(target_dir);"
    },
    {
        "line": 98,
        "fullcodeline": "target_redirections=0;"
    },
    {
        "line": 99,
        "fullcodeline": "target_session->Roll();"
    },
    {
        "line": 101,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 104,
        "fullcodeline": "HandleChdir(target_session,target_redirections);"
    },
    {
        "line": 109,
        "fullcodeline": "create_target_dir=false;"
    },
    {
        "line": 115,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 129,
        "fullcodeline": "HandleListInfo(source_list_info,source_set);"
    },
    {
        "line": 130,
        "fullcodeline": "HandleListInfo(target_list_info,target_set,&target_set_excluded);"
    },
    {
        "line": 187,
        "fullcodeline": "to_transfer->CountBytes(&bytes_to_transfer);"
    },
    {
        "line": 191,
        "fullcodeline": "to_rm->Count(&stats.del_dirs,&stats.del_files,&stats.del_symlinks,&stats.del_files);"
    },
    {
        "line": 192,
        "fullcodeline": "to_rm->rewind();"
    },
    {
        "line": 193,
        "fullcodeline": "to_rm_mismatched->Count(&stats.del_dirs,&stats.del_files,&stats.del_symlinks,&stats.del_files);"
    },
    {
        "line": 194,
        "fullcodeline": "to_rm_mismatched->rewind();"
    },
    {
        "line": 205,
        "fullcodeline": "to_mkdir->rewind();"
    },
    {
        "line": 207,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 240,
        "fullcodeline": "to_transfer->rewind();"
    },
    {
        "line": 242,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 286,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 380,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 455,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 495,
        "fullcodeline": "transfer_count++; // parent mirror will decrement it."
    },
    {
        "line": 517,
        "fullcodeline": "same->rewind();"
    },
    {
        "line": 519,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 569,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 570,
        "fullcodeline": "bytes_transferred=0;"
    },
    {
        "line": 586,
        "fullcodeline": "m|=parent_mirror->Roll();"
    },
    {
        "line": 12,
        "fullcodeline": "if(!strcmp(target_dir,\".\") || !strcmp(target_dir,\"..\") || (FlagSet(SCAN_ALL_FIRST) && parent_mirror))"
    },
    {
        "line": 23,
        "fullcodeline": "if(state!=CHANGING_DIR_SOURCE)"
    },
    {
        "line": 25,
        "fullcodeline": "if(source_session->IsOpen())"
    },
    {
        "line": 28,
        "fullcodeline": "source_dir.set(source_session->GetCwd().GetDirectory());"
    },
    {
        "line": 105,
        "fullcodeline": "if(state!=CHANGING_DIR_TARGET)"
    },
    {
        "line": 107,
        "fullcodeline": "if(target_session->IsOpen())"
    },
    {
        "line": 111,
        "fullcodeline": "target_dir.set(target_session->GetCwd().GetDirectory());"
    },
    {
        "line": 131,
        "fullcodeline": "if(state!=GETTING_LIST_INFO)"
    },
    {
        "line": 133,
        "fullcodeline": "if(source_list_info || target_list_info)"
    },
    {
        "line": 151,
        "fullcodeline": "if(FlagSet(SCAN_ALL_FIRST) && parent_mirror)"
    },
    {
        "line": 203,
        "fullcodeline": "if(!to_mkdir)"
    },
    {
        "line": 215,
        "fullcodeline": "if(max_error_count>0 && stats.error_count>=max_error_count)"
    },
    {
        "line": 296,
        "fullcodeline": "if(max_error_count>0 && stats.error_count>=max_error_count)"
    },
    {
        "line": 388,
        "fullcodeline": "if(max_error_count>0 && stats.error_count>=max_error_count)"
    },
    {
        "line": 451,
        "fullcodeline": "if(remove_source_files && (same || to_rm_src))"
    },
    {
        "line": 513,
        "fullcodeline": "if(!same)"
    },
    {
        "line": 13,
        "fullcodeline": "create_target_dir=false;"
    },
    {
        "line": 32,
        "fullcodeline": "if(!create_target_dir)"
    },
    {
        "line": 118,
        "fullcodeline": "if(!target_set && !create_target_dir"
    },
    {
        "line": 120,
        "fullcodeline": "&& !(FlagSet(TARGET_FLAT) && parent_mirror))"
    },
    {
        "line": 138,
        "fullcodeline": "if(FlagSet(DEPTH_FIRST) && source_set && !target_set)"
    },
    {
        "line": 142,
        "fullcodeline": "to_transfer->Unsort();"
    },
    {
        "line": 143,
        "fullcodeline": "to_transfer->SubtractNotDirs();"
    },
    {
        "line": 149,
        "fullcodeline": "stats.dirs++;"
    },
    {
        "line": 153,
        "fullcodeline": "source_set->PrependPath(source_relative_dir);"
    },
    {
        "line": 173,
        "fullcodeline": "transfer_count++; // parent mirror will decrement it."
    },
    {
        "line": 182,
        "fullcodeline": "target_set->Merge(target_set_recursive);"
    },
    {
        "line": 189,
        "fullcodeline": "parent_mirror->AddBytesToTransfer(bytes_to_transfer);"
    },
    {
        "line": 210,
        "fullcodeline": "while((j=FindDoneAwaitedJob())!=0)"
    },
    {
        "line": 213,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 217,
        "fullcodeline": "while(transfer_count<parallel && state==TARGET_MKDIR)"
    },
    {
        "line": 219,
        "fullcodeline": "file=to_mkdir->curr();"
    },
    {
        "line": 222,
        "fullcodeline": "to_mkdir->next();"
    },
    {
        "line": 245,
        "fullcodeline": "while((j=FindDoneAwaitedJob())!=0)"
    },
    {
        "line": 248,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 250,
        "fullcodeline": "if(max_error_count>0 && stats.error_count>=max_error_count)"
    },
    {
        "line": 252,
        "fullcodeline": "while(transfer_count<parallel && state==WAITING_FOR_TRANSFER)"
    },
    {
        "line": 254,
        "fullcodeline": "file=to_transfer->curr();"
    },
    {
        "line": 277,
        "fullcodeline": "to_transfer->next();"
    },
    {
        "line": 278,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 291,
        "fullcodeline": "while((j=FindDoneAwaitedJob())!=0)"
    },
    {
        "line": 294,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 298,
        "fullcodeline": "while(transfer_count<parallel && (state==TARGET_REMOVE_OLD || state==TARGET_REMOVE_OLD_FIRST))"
    },
    {
        "line": 300,
        "fullcodeline": "file=0;"
    },
    {
        "line": 364,
        "fullcodeline": "const char *target_name_rel=dir_file(target_relative_dir,file->name);"
    },
    {
        "line": 383,
        "fullcodeline": "while((j=FindDoneAwaitedJob())!=0)"
    },
    {
        "line": 386,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 390,
        "fullcodeline": "while(transfer_count<parallel && state==TARGET_CHMOD)"
    },
    {
        "line": 392,
        "fullcodeline": "file=to_transfer->curr();"
    },
    {
        "line": 395,
        "fullcodeline": "to_transfer->next();"
    },
    {
        "line": 400,
        "fullcodeline": "mode_t mode_mask=get_mode_mask();"
    },
    {
        "line": 401,
        "fullcodeline": "mode_t def_mode=(file->TypeIs(file->DIRECTORY)?0775:0664)&~mode_mask;"
    },
    {
        "line": 410,
        "fullcodeline": "FileInfo *target=target_set->FindByName(file->name);"
    },
    {
        "line": 439,
        "fullcodeline": "if(target_is_local && !script_only)     // FIXME"
    },
    {
        "line": 441,
        "fullcodeline": "const bool flat=FlagSet(TARGET_FLAT);"
    },
    {
        "line": 442,
        "fullcodeline": "to_transfer->Sort(FileSet::BYNAME_FLAT);"
    },
    {
        "line": 458,
        "fullcodeline": "while((j=FindDoneAwaitedJob())!=0)"
    },
    {
        "line": 461,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 489,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 497,
        "fullcodeline": "parent_mirror->stats.Add(stats);"
    },
    {
        "line": 514,
        "fullcodeline": "same=to_rm_src.borrow();"
    },
    {
        "line": 522,
        "fullcodeline": "while((j=FindDoneAwaitedJob())!=0)"
    },
    {
        "line": 525,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 527,
        "fullcodeline": "if(max_error_count>0 && stats.error_count>=max_error_count)"
    },
    {
        "line": 529,
        "fullcodeline": "while(transfer_count<parallel && state==SOURCE_REMOVING_SAME)"
    },
    {
        "line": 531,
        "fullcodeline": "file=same->curr();"
    },
    {
        "line": 532,
        "fullcodeline": "same->next();"
    },
    {
        "line": 553,
        "fullcodeline": "const char *source_name_rel=dir_file(source_relative_dir,file->name);"
    },
    {
        "line": 559,
        "fullcodeline": "while((j=FindDoneAwaitedJob())!=0)"
    },
    {
        "line": 561,
        "fullcodeline": "RemoveWaiting(j);"
    },
    {
        "line": 563,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 571,
        "fullcodeline": "if(!parent_mirror && FlagSet(LOOP) && stats.HaveSomethingDone(flags) && !stats.error_count)"
    },
    {
        "line": 576,
        "fullcodeline": "source_set=0;"
    },
    {
        "line": 577,
        "fullcodeline": "target_set=0;"
    },
    {
        "line": 119,
        "fullcodeline": "&& (!FlagSet(DEPTH_FIRST) || FlagSet(ONLY_EXISTING))"
    },
    {
        "line": 220,
        "fullcodeline": "if(!file)"
    },
    {
        "line": 227,
        "fullcodeline": "if(!script_only)"
    },
    {
        "line": 255,
        "fullcodeline": "if(!file)"
    },
    {
        "line": 301,
        "fullcodeline": "if(!file && state==TARGET_REMOVE_OLD_FIRST)"
    },
    {
        "line": 311,
        "fullcodeline": "if(!file)"
    },
    {
        "line": 345,
        "fullcodeline": "if(!script_only)"
    },
    {
        "line": 365,
        "fullcodeline": "if(file->TypeIs(file->DIRECTORY))"
    },
    {
        "line": 393,
        "fullcodeline": "if(!file)"
    },
    {
        "line": 396,
        "fullcodeline": "if(file->TypeIs(file->SYMLINK))"
    },
    {
        "line": 402,
        "fullcodeline": "if(target_is_local && file->mode==def_mode)"
    },
    {
        "line": 422,
        "fullcodeline": "if(!script_only)"
    },
    {
        "line": 448,
        "fullcodeline": "if(FlagSet(ALLOW_CHOWN) && same)"
    },
    {
        "line": 533,
        "fullcodeline": "if(!file)"
    },
    {
        "line": 535,
        "fullcodeline": "if(file->TypeIs(file->DIRECTORY))"
    },
    {
        "line": 544,
        "fullcodeline": "if(!script_only)"
    },
    {
        "line": 554,
        "fullcodeline": "Report(_(\"Removing source file `%s'\"),source_name_rel);"
    },
    {
        "line": 574,
        "fullcodeline": "printf(_(\"Retrying mirror...\\n\"));"
    },
    {
        "line": 159,
        "fullcodeline": "target_set->PrependPath(target_relative_dir);"
    },
    {
        "line": 166,
        "fullcodeline": "target_set_excluded->PrependPath(target_relative_dir);"
    },
    {
        "line": 223,
        "fullcodeline": "if(!file->TypeIs(file->DIRECTORY))"
    },
    {
        "line": 226,
        "fullcodeline": "fprintf(script,\"mkdir %s\\n\",target_session->GetFileURL(file->name).get());"
    },
    {
        "line": 229,
        "fullcodeline": "ArgV *a=new ArgV(\"mkdir\");"
    },
    {
        "line": 230,
        "fullcodeline": "a->Append(file->name);"
    },
    {
        "line": 231,
        "fullcodeline": "mkdirJob *mkj=new mkdirJob(target_session->Clone(),a);"
    },
    {
        "line": 232,
        "fullcodeline": "a->CombineTo(mkj->cmdline);"
    },
    {
        "line": 234,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 303,
        "fullcodeline": "file=to_rm_mismatched->curr();"
    },
    {
        "line": 304,
        "fullcodeline": "to_rm_mismatched->next();"
    },
    {
        "line": 306,
        "fullcodeline": "if(!file && (state==TARGET_REMOVE_OLD || FlagSet(REMOVE_FIRST)))"
    },
    {
        "line": 308,
        "fullcodeline": "file=to_rm->curr();"
    },
    {
        "line": 309,
        "fullcodeline": "to_rm->next();"
    },
    {
        "line": 319,
        "fullcodeline": "if(!FlagSet(DELETE))"
    },
    {
        "line": 341,
        "fullcodeline": "args.Append(target_session->GetFileURL(file->name));"
    },
    {
        "line": 343,
        "fullcodeline": "fprintf(script,\"%s\\n\",cmd.get());"
    },
    {
        "line": 347,
        "fullcodeline": "ArgV *args=new ArgV(\"rm\");"
    },
    {
        "line": 348,
        "fullcodeline": "args->Append(file->name);"
    },
    {
        "line": 349,
        "fullcodeline": "args->seek(1);"
    },
    {
        "line": 350,
        "fullcodeline": "rmJob *j=new rmJob(target_session->Clone(),args);"
    },
    {
        "line": 351,
        "fullcodeline": "args->CombineTo(j->cmdline);"
    },
    {
        "line": 352,
        "fullcodeline": "JobStarted(j);"
    },
    {
        "line": 398,
        "fullcodeline": "if(!file->Has(file->MODE))"
    },
    {
        "line": 411,
        "fullcodeline": "if(target && target->filetype==file->DIRECTORY && file->filetype==file->DIRECTORY"
    },
    {
        "line": 412,
        "fullcodeline": "&& target->mode==(file->mode&~mode_mask) && (target->mode&0200))"
    },
    {
        "line": 417,
        "fullcodeline": "args.Append(xstring::format(\"%03lo\",(unsigned long)(file->mode&~mode_mask)));"
    },
    {
        "line": 418,
        "fullcodeline": "args.Append(target_session->GetFileURL(file->name));"
    },
    {
        "line": 420,
        "fullcodeline": "fprintf(script,\"%s\\n\",cmd.get());"
    },
    {
        "line": 424,
        "fullcodeline": "ArgV *a=new ArgV(\"chmod\");"
    },
    {
        "line": 425,
        "fullcodeline": "a->Append(file->name);"
    },
    {
        "line": 426,
        "fullcodeline": "a->seek(1);"
    },
    {
        "line": 427,
        "fullcodeline": "ChmodJob *cj=new ChmodJob(target_session->Clone(),"
    },
    {
        "line": 429,
        "fullcodeline": "a->CombineTo(cj->cmdline);"
    },
    {
        "line": 433,
        "fullcodeline": "m=MOVED;"
    },
    {
        "line": 449,
        "fullcodeline": "same->LocalChown(target_dir,flat);"
    },
    {
        "line": 473,
        "fullcodeline": "args.Append(source_session->GetFileURL(source_dir));"
    },
    {
        "line": 479,
        "fullcodeline": "ArgV *args=new ArgV(\"rmdir\");"
    },
    {
        "line": 480,
        "fullcodeline": "args->Append(source_dir);"
    },
    {
        "line": 481,
        "fullcodeline": "args->seek(1);"
    },
    {
        "line": 482,
        "fullcodeline": "rmJob *j=new rmJob(source_session->Clone(),args);"
    },
    {
        "line": 483,
        "fullcodeline": "args->CombineTo(j->cmdline);"
    },
    {
        "line": 484,
        "fullcodeline": "j->Rmdir();"
    },
    {
        "line": 500,
        "fullcodeline": "if(stats.HaveSomethingDone(flags) && on_change)"
    },
    {
        "line": 540,
        "fullcodeline": "args.Append(source_session->GetFileURL(file->name));"
    },
    {
        "line": 542,
        "fullcodeline": "fprintf(script,\"%s\\n\",cmd.get());"
    },
    {
        "line": 546,
        "fullcodeline": "ArgV *args=new ArgV(\"rm\");"
    },
    {
        "line": 547,
        "fullcodeline": "args->Append(file->name);"
    },
    {
        "line": 548,
        "fullcodeline": "args->seek(1);"
    },
    {
        "line": 549,
        "fullcodeline": "rmJob *j=new rmJob(source_session->Clone(),args);"
    },
    {
        "line": 550,
        "fullcodeline": "args->CombineTo(j->cmdline);"
    },
    {
        "line": 37,
        "fullcodeline": "if((FlagSet(RETR_SYMLINKS)?stat:lstat)(target_dir,&st)!=-1)"
    },
    {
        "line": 313,
        "fullcodeline": "if(waiting_num>0)"
    },
    {
        "line": 315,
        "fullcodeline": "if(state==TARGET_REMOVE_OLD)"
    },
    {
        "line": 334,
        "fullcodeline": "if(file->TypeIs(file->DIRECTORY))"
    },
    {
        "line": 342,
        "fullcodeline": "xstring_ca cmd(args.CombineQuoted());"
    },
    {
        "line": 353,
        "fullcodeline": "if(file->TypeIs(file->DIRECTORY))"
    },
    {
        "line": 366,
        "fullcodeline": "Report(_(\"Removing old directory `%s'\"),target_name_rel);"
    },
    {
        "line": 419,
        "fullcodeline": "xstring_ca cmd(args.CombineQuoted());"
    },
    {
        "line": 430,
        "fullcodeline": "if(!verbose_report)"
    },
    {
        "line": 446,
        "fullcodeline": "if(!FlagSet(NO_PERMS) && same)"
    },
    {
        "line": 474,
        "fullcodeline": "xstring_ca cmd(args.CombineQuoted());"
    },
    {
        "line": 475,
        "fullcodeline": "fprintf(script,\"%s\\n\",cmd.get());"
    },
    {
        "line": 488,
        "fullcodeline": "Report(_(\"Removing source directory `%s'\"),source_relative_dir.get());"
    },
    {
        "line": 502,
        "fullcodeline": "CmdExec *exec=new CmdExec(source_session->Clone(),0);"
    },
    {
        "line": 503,
        "fullcodeline": "AddWaiting(exec);"
    },
    {
        "line": 504,
        "fullcodeline": "exec->FeedCmd(on_change);"
    },
    {
        "line": 516,
        "fullcodeline": "same->Merge(to_rm_src);"
    },
    {
        "line": 541,
        "fullcodeline": "xstring_ca cmd(args.CombineQuoted());"
    },
    {
        "line": 39,
        "fullcodeline": "if(S_ISDIR(st.st_mode))"
    },
    {
        "line": 157,
        "fullcodeline": "root_mirror->source_set_recursive=source_set.borrow();"
    },
    {
        "line": 264,
        "fullcodeline": "SetFlags(NO_RECURSION,true);"
    },
    {
        "line": 368,
        "fullcodeline": "Report(_(\"Removing old file `%s'\"),target_name_rel);"
    },
    {
        "line": 405,
        "fullcodeline": "if(!target_is_local || lstat(dir_file(target_dir,file->name),&st)==-1)"
    },
    {
        "line": 407,
        "fullcodeline": "if((st.st_mode&07777)==(file->mode&~mode_mask))"
    },
    {
        "line": 428,
        "fullcodeline": "file->mode&~mode_mask,a);"
    },
    {
        "line": 431,
        "fullcodeline": "cj->BeQuiet(); // chmod is not supported on all servers; be quiet."
    },
    {
        "line": 268,
        "fullcodeline": "if(FlagSet(NO_EMPTY_DIRS) && stats.dirs==0 && only_dirs)"
    },
    {
        "line": 336,
        "fullcodeline": "if(recursion_mode==RECURSION_NEVER)"
    },
    {
        "line": 355,
        "fullcodeline": "if(recursion_mode==RECURSION_NEVER)"
    },
    {
        "line": 163,
        "fullcodeline": "root_mirror->target_set_recursive=target_set.borrow();"
    },
    {
        "line": 170,
        "fullcodeline": "root_mirror->target_set_excluded=target_set_excluded.borrow();"
    },
    {
        "line": 337,
        "fullcodeline": "args.setarg(0,\"rmdir\");"
    },
    {
        "line": 357,
        "fullcodeline": "args->setarg(0,\"rmdir\");"
    },
    {
        "line": 43,
        "fullcodeline": "if(!script_only && (st.st_mode!=(st.st_mode|0700)))"
    },
    {
        "line": 44,
        "fullcodeline": "chmod(target_dir,st.st_mode|0700);"
    },
    {
        "line": 50,
        "fullcodeline": "Report(_(\"Removing old local file `%s'\"),target_dir.get());"
    },
    {
        "line": 339,
        "fullcodeline": "args.Append(\"-r\");"
    },
    {
        "line": 54,
        "fullcodeline": "args.Append(target_session->GetFileURL(target_dir));"
    },
    {
        "line": 55,
        "fullcodeline": "xstring_ca cmd(args.CombineQuoted());"
    },
    {
        "line": 56,
        "fullcodeline": "fprintf(script,\"%s\\n\",cmd.get());"
    },
    {
        "line": 60,
        "fullcodeline": "if(remove(target_dir)==-1)"
    },
    {
        "line": 61,
        "fullcodeline": "eprintf(\"mirror: remove(%s): %s\\n\",target_dir.get(),strerror(errno));"
    }
]