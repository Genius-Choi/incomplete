[
    {
        "line": 2,
        "fullcodeline": "instances_without_definition=[]"
    },
    {
        "line": 3,
        "fullcodeline": "maintainers=[]"
    },
    {
        "line": 4,
        "fullcodeline": "pkg=nil"
    },
    {
        "line": 5,
        "fullcodeline": "projects=self.expand_all_projects"
    },
    {
        "line": 7,
        "fullcodeline": "match_all = (limit == 0)"
    },
    {
        "line": 8,
        "fullcodeline": "deepest = (limit < 0)"
    },
    {
        "line": 11,
        "fullcodeline": "prjlist = projects.map { |p| \"@project='#{CGI.escape(p.name)}'\" }"
    },
    {
        "line": 12,
        "fullcodeline": "path = \"/search/published/binary/id?match=(@name='\"+CGI.escape(binary_name)+\"'\""
    },
    {
        "line": 13,
        "fullcodeline": "path += \"+and+(\""
    },
    {
        "line": 14,
        "fullcodeline": "path += prjlist.join(\"+or+\")"
    },
    {
        "line": 15,
        "fullcodeline": "path += \"))\""
    },
    {
        "line": 16,
        "fullcodeline": "answer = Suse::Backend.post path, nil"
    },
    {
        "line": 17,
        "fullcodeline": "data = Xmlhash.parse(answer.body)"
    },
    {
        "line": 22,
        "fullcodeline": "already_checked = {}"
    },
    {
        "line": 23,
        "fullcodeline": "deepest_match = nil"
    },
    {
        "line": 24,
        "fullcodeline": "projects.each do |prj| # project link order"
    },
    {
        "line": 1,
        "fullcodeline": "def find_assignees(binary_name, limit=1, devel=true, filter=[\"maintainer\",\"bugowner\"], webui_mode=false)"
    },
    {
        "line": 20,
        "fullcodeline": "return [] if data[\"matches\"].to_i == 0"
    },
    {
        "line": 54,
        "fullcodeline": "return instances_without_definition if webui_mode and maintainers.length < 1"
    },
    {
        "line": 56,
        "fullcodeline": "maintainers << deepest_match if deepest_match"
    }
]