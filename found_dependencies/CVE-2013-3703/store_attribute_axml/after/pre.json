[
    {
        "line": 38,
        "fullcodeline": "changed = false"
    },
    {
        "line": 39,
        "fullcodeline": "a = find_attribute(attrib.namespace, attrib.name, binary)"
    },
    {
        "line": 1,
        "fullcodeline": "def store_attribute_axml( attrib, binary=nil )"
    },
    {
        "line": 3,
        "fullcodeline": "raise SaveError, \"attribute type without a namespace \" if not attrib.has_attribute? :namespace"
    },
    {
        "line": 7,
        "fullcodeline": "if ( not atype = AttribType.find_by_namespace_and_name(attrib.namespace,attrib.name) or atype.blank? )"
    },
    {
        "line": 4,
        "fullcodeline": "raise SaveError, \"attribute type without a name \" if not attrib.has_attribute? :name"
    },
    {
        "line": 11,
        "fullcodeline": "if atype.value_count and attrib.has_element? :value and atype.value_count != attrib.each_value.length"
    },
    {
        "line": 14,
        "fullcodeline": "if atype.value_count and atype.value_count > 0 and not attrib.has_element? :value"
    },
    {
        "line": 17,
        "fullcodeline": "if attrib.has_element? :issue and not atype.issue_list"
    },
    {
        "line": 47,
        "fullcodeline": "changed = true"
    },
    {
        "line": 50,
        "fullcodeline": "changed = true if a.update_from_xml(attrib)"
    },
    {
        "line": 23,
        "fullcodeline": "logger.debug( \"Verify value with allowed\" )"
    },
    {
        "line": 24,
        "fullcodeline": "attrib.each_value.each do |value|"
    },
    {
        "line": 43,
        "fullcodeline": "a = self.attribs.create(:attrib_type => atype, :binary => binary)"
    },
    {
        "line": 45,
        "fullcodeline": "a = self.attribs.create(:attrib_type => atype)"
    }
]