[
    {
        "line": 6,
        "fullcodeline": "otError     error      = OT_ERROR_NONE;"
    },
    {
        "line": 7,
        "fullcodeline": "const char *saltPrefix = \"Thread\";"
    },
    {
        "line": 8,
        "fullcodeline": "uint8_t     salt[OT_PBKDF2_SALT_MAX_LEN];"
    },
    {
        "line": 9,
        "fullcodeline": "uint16_t    saltLen = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "VerifyOrExit((strlen(aPassPhrase) >= OT_COMMISSIONING_PASSPHRASE_MIN_SIZE) &&"
    },
    {
        "line": 16,
        "fullcodeline": "memset(salt, 0, sizeof(salt));"
    },
    {
        "line": 17,
        "fullcodeline": "memcpy(salt, saltPrefix, strlen(saltPrefix));"
    },
    {
        "line": 18,
        "fullcodeline": "saltLen += static_cast<uint16_t>(strlen(saltPrefix));"
    },
    {
        "line": 20,
        "fullcodeline": "memcpy(salt + saltLen, aExtPanId.m8, sizeof(aExtPanId));"
    },
    {
        "line": 21,
        "fullcodeline": "saltLen += OT_EXT_PAN_ID_SIZE;"
    },
    {
        "line": 23,
        "fullcodeline": "memcpy(salt + saltLen, aNetworkName, strlen(aNetworkName));"
    },
    {
        "line": 24,
        "fullcodeline": "saltLen += static_cast<uint16_t>(strlen(aNetworkName));"
    },
    {
        "line": 26,
        "fullcodeline": "otPbkdf2Cmac(reinterpret_cast<const uint8_t *>(aPassPhrase), static_cast<uint16_t>(strlen(aPassPhrase)),"
    },
    {
        "line": 14,
        "fullcodeline": "error = OT_ERROR_INVALID_ARGS);"
    },
    {
        "line": 27,
        "fullcodeline": "reinterpret_cast<const uint8_t *>(salt), saltLen, 16384, OT_PSKC_MAX_SIZE, aPskc.m8);"
    },
    {
        "line": 13,
        "fullcodeline": "(strlen(aNetworkName) <= OT_NETWORK_NAME_MAX_SIZE),"
    },
    {
        "line": 12,
        "fullcodeline": "(strlen(aPassPhrase) <= OT_COMMISSIONING_PASSPHRASE_MAX_SIZE) &&"
    }
]