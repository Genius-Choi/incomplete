[
    {
        "line": 3,
        "fullcodeline": "struct net *net = sock_net(sk);"
    },
    {
        "line": 9,
        "fullcodeline": "pr_debug(\"%s: sk:%p, timeout:%ld\\n\", __func__, sk, timeout);"
    },
    {
        "line": 11,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 12,
        "fullcodeline": "sk->sk_shutdown = SHUTDOWN_MASK;"
    },
    {
        "line": 13,
        "fullcodeline": "sk->sk_state = SCTP_SS_CLOSING;"
    },
    {
        "line": 18,
        "fullcodeline": "data_was_unread = sctp_queue_purge_ulpevents(&sk->sk_receive_queue);"
    },
    {
        "line": 19,
        "fullcodeline": "data_was_unread += sctp_queue_purge_ulpevents(&sctp_sk(sk)->pd_lobby);"
    },
    {
        "line": 22,
        "fullcodeline": "list_for_each_safe(pos, temp, &ep->asocs) {"
    },
    {
        "line": 55,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 60,
        "fullcodeline": "local_bh_disable();"
    },
    {
        "line": 61,
        "fullcodeline": "bh_lock_sock(sk);"
    },
    {
        "line": 66,
        "fullcodeline": "sock_hold(sk);"
    },
    {
        "line": 67,
        "fullcodeline": "sk_common_release(sk);"
    },
    {
        "line": 69,
        "fullcodeline": "bh_unlock_sock(sk);"
    },
    {
        "line": 70,
        "fullcodeline": "local_bh_enable();"
    },
    {
        "line": 72,
        "fullcodeline": "sock_put(sk);"
    },
    {
        "line": 74,
        "fullcodeline": "SCTP_DBG_OBJCNT_DEC(sock);"
    },
    {
        "line": 51,
        "fullcodeline": "if (sctp_style(sk, TCP) && timeout)"
    },
    {
        "line": 15,
        "fullcodeline": "ep = sctp_sk(sk)->ep;"
    },
    {
        "line": 25,
        "fullcodeline": "if (sctp_style(sk, TCP)) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (data_was_unread || !skb_queue_empty(&asoc->ulpq.lobby) ||"
    },
    {
        "line": 52,
        "fullcodeline": "sctp_wait_for_close(sk, timeout);"
    },
    {
        "line": 40,
        "fullcodeline": "(sock_flag(sk, SOCK_LINGER) && !sk->sk_lingertime)) {"
    },
    {
        "line": 43,
        "fullcodeline": "chunk = sctp_make_abort_user(asoc, NULL, 0);"
    },
    {
        "line": 31,
        "fullcodeline": "if (sctp_state(asoc, CLOSED)) {"
    },
    {
        "line": 39,
        "fullcodeline": "!skb_queue_empty(&asoc->ulpq.reasm) ||"
    },
    {
        "line": 47,
        "fullcodeline": "sctp_primitive_SHUTDOWN(net, asoc, NULL);"
    },
    {
        "line": 32,
        "fullcodeline": "sctp_unhash_established(asoc);"
    },
    {
        "line": 33,
        "fullcodeline": "sctp_association_free(asoc);"
    },
    {
        "line": 45,
        "fullcodeline": "sctp_primitive_ABORT(net, asoc, chunk);"
    }
]