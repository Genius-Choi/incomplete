[
    {
        "line": 6,
        "fullcodeline": "u8 *rbuf = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "size_t rbuflen = 0, bodylen, fascnlen, guidlen;"
    },
    {
        "line": 12,
        "fullcodeline": "SC_FUNC_CALLED(card->ctx, SC_LOG_DEBUG_VERBOSE);"
    },
    {
        "line": 25,
        "fullcodeline": "r = piv_get_cached_data(card, PIV_OBJ_CHUI, &rbuf, &rbuflen);"
    },
    {
        "line": 26,
        "fullcodeline": "LOG_TEST_RET(card->ctx, r, \"Failure retrieving CHUI\");"
    },
    {
        "line": 28,
        "fullcodeline": "r = SC_ERROR_INTERNAL;"
    },
    {
        "line": 65,
        "fullcodeline": "card->serialnr = *serial;"
    },
    {
        "line": 66,
        "fullcodeline": "LOG_FUNC_RETURN(card->ctx, r);"
    },
    {
        "line": 29,
        "fullcodeline": "if (rbuflen != 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "*serial = card->serialnr;"
    },
    {
        "line": 15,
        "fullcodeline": "LOG_FUNC_RETURN(card->ctx, SC_SUCCESS);"
    },
    {
        "line": 30,
        "fullcodeline": "body = sc_asn1_find_tag(card->ctx, rbuf, rbuflen, 0x53, &bodylen); /* Pass the outer wrapper asn1 */"
    },
    {
        "line": 31,
        "fullcodeline": "if (body != NULL && bodylen != 0) {"
    },
    {
        "line": 32,
        "fullcodeline": "fascn = sc_asn1_find_tag(card->ctx, body, bodylen, 0x30, &fascnlen); /* Find the FASC-N data */"
    },
    {
        "line": 33,
        "fullcodeline": "guid = sc_asn1_find_tag(card->ctx, body, bodylen, 0x34, &guidlen);"
    },
    {
        "line": 35,
        "fullcodeline": "gbits = 0; /* if guid is valid, gbits will not be zero */"
    },
    {
        "line": 36,
        "fullcodeline": "if (guid && guidlen == 16) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (fascn && fascnlen == 25) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (guid && gbits) {"
    },
    {
        "line": 58,
        "fullcodeline": "serial->len = guidlen;"
    },
    {
        "line": 59,
        "fullcodeline": "memcpy (serial->value, guid, serial->len);"
    },
    {
        "line": 60,
        "fullcodeline": "r = SC_SUCCESS;"
    },
    {
        "line": 37,
        "fullcodeline": "for (i = 0; i < 16; i++) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (!(gbits && fascn[0] == 0xD4 && fascn[1] == 0xE7"
    },
    {
        "line": 38,
        "fullcodeline": "gbits = gbits | guid[i]; /* if all are zero, gbits will be zero */"
    },
    {
        "line": 50,
        "fullcodeline": "serial->len = fascnlen;"
    },
    {
        "line": 51,
        "fullcodeline": "memcpy (serial->value, fascn, serial->len);"
    },
    {
        "line": 52,
        "fullcodeline": "r = SC_SUCCESS;"
    },
    {
        "line": 53,
        "fullcodeline": "gbits = 0; /* set to skip using guid below */"
    },
    {
        "line": 48,
        "fullcodeline": "&& fascn[2] == 0x39 && (fascn[3] | 0x7F) == 0xFF)) {"
    }
]