[
    {
        "line": 5,
        "fullcodeline": "req = {}"
    },
    {
        "line": 19,
        "fullcodeline": "list = []"
    },
    {
        "line": 51,
        "fullcodeline": "list.map { |j| j['mtime'] = DateTime.parse(j['mtime']) }"
    },
    {
        "line": 54,
        "fullcodeline": "@db.select_running_transfers_by_source(FBService::TRANSFER_RUNNING, source['account_id'], source['path']).each { |i|"
    },
    {
        "line": 61,
        "fullcodeline": "list.delete_if { |j| j['name'] =~ /\\.partial$/ }"
    },
    {
        "line": 20,
        "fullcodeline": "if req['protocol'] == 'cifs'"
    },
    {
        "line": 63,
        "fullcodeline": "builder(:list_response, :locals => { :list => list })"
    },
    {
        "line": 65,
        "fullcodeline": "err_msg = \"#{$!.backtrace.join(\"\\n\")}\\n#{$!.message}\\n\""
    },
    {
        "line": 67,
        "fullcodeline": "80.times { STDERR.print '-' }"
    },
    {
        "line": 69,
        "fullcodeline": "STDERR.puts \"Exception time: #{DateTime.parse(Time.now.to_s)}\""
    },
    {
        "line": 70,
        "fullcodeline": "STDERR.puts err_msg"
    },
    {
        "line": 71,
        "fullcodeline": "80.times { STDERR.print '-' }"
    },
    {
        "line": 7,
        "fullcodeline": "req['address'] \t= soap_body.xpath(\"//#{prefix}:Address/text()\").to_s"
    },
    {
        "line": 8,
        "fullcodeline": "req['port'] \t\t= soap_body.xpath(\"//#{prefix}:Port/text()\").to_s"
    },
    {
        "line": 9,
        "fullcodeline": "req['login'] \t\t= soap_body.xpath(\"//#{prefix}:Login/text()\").to_s"
    },
    {
        "line": 10,
        "fullcodeline": "req['password'] = soap_body.xpath(\"//#{prefix}:Password/text()\").to_s"
    },
    {
        "line": 11,
        "fullcodeline": "req['path'] \t\t= soap_body.xpath(\"//#{prefix}:Path/text()\").to_s"
    },
    {
        "line": 14,
        "fullcodeline": "source = @db.select_account(req)"
    },
    {
        "line": 21,
        "fullcodeline": "conn = Connector::CIFS.new"
    },
    {
        "line": 22,
        "fullcodeline": "conn.address \t= req['address']"
    },
    {
        "line": 23,
        "fullcodeline": "conn.login \t\t= req['login']"
    },
    {
        "line": 24,
        "fullcodeline": "conn.password = req['password']"
    },
    {
        "line": 27,
        "fullcodeline": "conn.cd(req['path'])"
    },
    {
        "line": 28,
        "fullcodeline": "list = conn.list(req['path'])"
    },
    {
        "line": 66,
        "fullcodeline": "@stderr_mutex.try_lock"
    },
    {
        "line": 73,
        "fullcodeline": "@stderr_mutex.unlock"
    },
    {
        "line": 75,
        "fullcodeline": "builder(:fault, :locals => { :fault_string => 'failed to list directory', :fault_code => 'Server' })"
    },
    {
        "line": 16,
        "fullcodeline": "source = @db.insert_account(req)"
    },
    {
        "line": 30,
        "fullcodeline": "elsif req['protocol'] == 'ftp'"
    },
    {
        "line": 3,
        "fullcodeline": "prefix = soap_body.root.namespace.prefix"
    },
    {
        "line": 6,
        "fullcodeline": "req['protocol'] = soap_body.xpath(\"//#{prefix}:Protocol/text()\").to_s.downcase"
    },
    {
        "line": 25,
        "fullcodeline": "conn.share \t  = req['path'].split('/')[1]"
    },
    {
        "line": 31,
        "fullcodeline": "conn = Connector::FTP.new"
    },
    {
        "line": 32,
        "fullcodeline": "conn.address \t= req['address']"
    },
    {
        "line": 33,
        "fullcodeline": "conn.port \t\t= req['port']"
    },
    {
        "line": 34,
        "fullcodeline": "conn.login \t\t= req['login']"
    },
    {
        "line": 35,
        "fullcodeline": "conn.password = req['password']"
    },
    {
        "line": 37,
        "fullcodeline": "list = conn.list(req['path'])"
    },
    {
        "line": 39,
        "fullcodeline": "elsif req['protocol'] == 'sftp'"
    },
    {
        "line": 40,
        "fullcodeline": "conn = Connector::SFTP.new"
    },
    {
        "line": 41,
        "fullcodeline": "conn.address \t= req['address']"
    },
    {
        "line": 42,
        "fullcodeline": "conn.port \t\t= req['port']"
    },
    {
        "line": 43,
        "fullcodeline": "conn.login \t\t= req['login']"
    },
    {
        "line": 44,
        "fullcodeline": "conn.password = req['password']"
    },
    {
        "line": 46,
        "fullcodeline": "list = conn.list(req['path'])"
    }
]