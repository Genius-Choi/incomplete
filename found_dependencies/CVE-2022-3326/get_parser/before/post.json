[
    {
        "line": 3,
        "fullcodeline": "parser = configargparse.ArgumentParser("
    },
    {
        "line": 13,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 17,
        "fullcodeline": "parser.add("
    },
    {
        "line": 34,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 41,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 49,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 60,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 68,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 75,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 83,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 90,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 97,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 105,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 112,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 119,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 127,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 133,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 137,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 141,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 147,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 154,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 162,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 169,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 175,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 181,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 189,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 197,
        "fullcodeline": "parser.add_argument('--ldap-tls', '--ldaptls', action='store_true', help='enable TLS')"
    },
    {
        "line": 199,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 207,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 214,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 221,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 229,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 236,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 244,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 252,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 262,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 271,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 280,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 288,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 292,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 299,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 307,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 316,
        "fullcodeline": "parser.add('--quota-set-cmd', '--quotasetcmd', metavar='COMMAND', help=\"command line to set the user's quota.\")"
    },
    {
        "line": 318,
        "fullcodeline": "parser.add('--quota-get-cmd', '--quotagetcmd', metavar='COMMAND', help=\"command line to get the user's quota.\")"
    },
    {
        "line": 320,
        "fullcodeline": "parser.add("
    },
    {
        "line": 324,
        "fullcodeline": "parser.add("
    },
    {
        "line": 332,
        "fullcodeline": "parser.add('--server-host', '--serverhost', metavar='IP', default='127.0.0.1', help='IP address to listen to')"
    },
    {
        "line": 334,
        "fullcodeline": "parser.add("
    },
    {
        "line": 343,
        "fullcodeline": "parser.add("
    },
    {
        "line": 350,
        "fullcodeline": "parser.add("
    },
    {
        "line": 358,
        "fullcodeline": "parser.add("
    },
    {
        "line": 365,
        "fullcodeline": "parser.add("
    },
    {
        "line": 372,
        "fullcodeline": "parser.add("
    },
    {
        "line": 378,
        "fullcodeline": "parser.add("
    },
    {
        "line": 385,
        "fullcodeline": "parser.add("
    },
    {
        "line": 392,
        "fullcodeline": "parser.add("
    },
    {
        "line": 399,
        "fullcodeline": "parser.add_argument('--version', action='version', version='%(prog)s ' + VERSION)"
    },
    {
        "line": 402,
        "fullcodeline": "flags = ['--welcome-msg'] + ['--welcome-msg-' + i for i in ['ca', 'en', 'es', 'fr', 'ru']] + ['--welcomemsg']"
    },
    {
        "line": 403,
        "fullcodeline": "parser.add_argument("
    },
    {
        "line": 64,
        "fullcodeline": "choices=['default', 'blue', 'orange'],"
    },
    {
        "line": 70,
        "fullcodeline": "choices=['development', 'production'],"
    },
    {
        "line": 78,
        "fullcodeline": "choices=['none', 'ssl', 'starttls'],"
    },
    {
        "line": 130,
        "fullcodeline": "default=pkg_resources.resource_filename('rdiffweb', 'static/favicon.ico'),"
    },
    {
        "line": 166,
        "fullcodeline": "choices=['admin', 'maintainer', 'user'],"
    },
    {
        "line": 193,
        "fullcodeline": "choices=['base', 'onelevel', 'subtree'],"
    },
    {
        "line": 259,
        "fullcodeline": "choices=[2, 3],"
    },
    {
        "line": 303,
        "fullcodeline": "choices=['ERROR', 'WARN', 'INFO', 'DEBUG'],"
    },
    {
        "line": 404,
        "fullcodeline": "*flags,"
    },
    {
        "line": 6,
        "fullcodeline": "default_config_files=['/etc/rdiffweb/rdw.conf', '/etc/rdiffweb/rdw.conf.d/*.conf'],"
    }
]