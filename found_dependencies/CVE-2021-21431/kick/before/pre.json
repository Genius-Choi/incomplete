[
    {
        "line": 3,
        "fullcodeline": "chanops = get_chanops(str(trigger.sender), bot.memory['channelmgnt']['jdcache'])"
    },
    {
        "line": 4,
        "fullcodeline": "dodeop = False"
    },
    {
        "line": 11,
        "fullcodeline": "text = trigger.group().split()"
    },
    {
        "line": 12,
        "fullcodeline": "argc = len(text)"
    },
    {
        "line": 15,
        "fullcodeline": "nick = Identifier(text[1])"
    },
    {
        "line": 16,
        "fullcodeline": "reason = ' '.join(text[2:])"
    },
    {
        "line": 6,
        "fullcodeline": "if bot.channels[trigger.sender].privileges[bot.nick] < OP and trigger.account in chanops:"
    },
    {
        "line": 13,
        "fullcodeline": "if argc < 2:"
    },
    {
        "line": 24,
        "fullcodeline": "bot.reply(f'No ChanOps Found. Please ask for assistance in {bot.settings.channelmgnt.support_channel}')"
    },
    {
        "line": 7,
        "fullcodeline": "bot.say('Please wait...')"
    },
    {
        "line": 8,
        "fullcodeline": "bot.say('op ' + trigger.sender, 'ChanServ')"
    },
    {
        "line": 9,
        "fullcodeline": "time.sleep(1)"
    },
    {
        "line": 10,
        "fullcodeline": "dodeop = True"
    },
    {
        "line": 17,
        "fullcodeline": "if nick != bot.config.core.nick and trigger.account in chanops:"
    },
    {
        "line": 18,
        "fullcodeline": "bot.write(['KICK', trigger.sender, nick, ':' + reason])"
    }
]