[
    {
        "line": 7,
        "fullcodeline": "EVP_MD_CTX *hmac = NULL, *mac_ctx;"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned char header[13];"
    },
    {
        "line": 9,
        "fullcodeline": "int stream_mac = (send ? (ssl->mac_flags & SSL_MAC_FLAG_WRITE_MAC_STREAM)"
    },
    {
        "line": 21,
        "fullcodeline": "t = EVP_MD_CTX_size(hash);"
    },
    {
        "line": 22,
        "fullcodeline": "OPENSSL_assert(t >= 0);"
    },
    {
        "line": 23,
        "fullcodeline": "md_size = t;"
    },
    {
        "line": 46,
        "fullcodeline": "header[8] = rec->type;"
    },
    {
        "line": 47,
        "fullcodeline": "header[9] = (unsigned char)(ssl->version >> 8);"
    },
    {
        "line": 48,
        "fullcodeline": "header[10] = (unsigned char)(ssl->version);"
    },
    {
        "line": 49,
        "fullcodeline": "header[11] = (rec->length) >> 8;"
    },
    {
        "line": 50,
        "fullcodeline": "header[12] = (rec->length) & 0xff;"
    },
    {
        "line": 86,
        "fullcodeline": "EVP_MD_CTX_free(hmac);"
    },
    {
        "line": 35,
        "fullcodeline": "if (SSL_IS_DTLS(ssl)) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (!send && !SSL_READ_ETM(ssl) &&"
    },
    {
        "line": 105,
        "fullcodeline": "if (!SSL_IS_DTLS(ssl)) {"
    },
    {
        "line": 10,
        "fullcodeline": ": (ssl->mac_flags & SSL_MAC_FLAG_READ_MAC_STREAM));"
    },
    {
        "line": 14,
        "fullcodeline": "seq = RECORD_LAYER_get_write_sequence(&ssl->rlayer);"
    },
    {
        "line": 15,
        "fullcodeline": "hash = ssl->write_hash;"
    },
    {
        "line": 27,
        "fullcodeline": "mac_ctx = hash;"
    },
    {
        "line": 36,
        "fullcodeline": "unsigned char dtlsseq[8], *p = dtlsseq;"
    },
    {
        "line": 38,
        "fullcodeline": "s2n(send ? DTLS_RECORD_LAYER_get_w_epoch(&ssl->rlayer) :"
    },
    {
        "line": 40,
        "fullcodeline": "memcpy(p, &seq[2], 6);"
    },
    {
        "line": 42,
        "fullcodeline": "memcpy(header, dtlsseq, 8);"
    },
    {
        "line": 54,
        "fullcodeline": "ssl3_cbc_record_digest_supported(mac_ctx)) {"
    },
    {
        "line": 17,
        "fullcodeline": "seq = RECORD_LAYER_get_read_sequence(&ssl->rlayer);"
    },
    {
        "line": 18,
        "fullcodeline": "hash = ssl->read_hash;"
    },
    {
        "line": 29,
        "fullcodeline": "hmac = EVP_MD_CTX_new();"
    },
    {
        "line": 32,
        "fullcodeline": "mac_ctx = hmac;"
    },
    {
        "line": 44,
        "fullcodeline": "memcpy(header, seq, 8);"
    },
    {
        "line": 53,
        "fullcodeline": "EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&"
    },
    {
        "line": 61,
        "fullcodeline": "if (ssl3_cbc_digest_record(mac_ctx,"
    },
    {
        "line": 106,
        "fullcodeline": "for (i = 7; i >= 0; i--) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (hmac == NULL || !EVP_MD_CTX_copy(hmac, hash))"
    },
    {
        "line": 39,
        "fullcodeline": "DTLS_RECORD_LAYER_get_r_epoch(&ssl->rlayer), p);"
    },
    {
        "line": 67,
        "fullcodeline": "EVP_MD_CTX_free(hmac);"
    },
    {
        "line": 71,
        "fullcodeline": "if (EVP_DigestSignUpdate(mac_ctx, header, sizeof(header)) <= 0"
    },
    {
        "line": 77,
        "fullcodeline": "if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())"
    },
    {
        "line": 107,
        "fullcodeline": "++seq[i];"
    },
    {
        "line": 64,
        "fullcodeline": "rec->length + md_size, rec->orig_len,"
    },
    {
        "line": 68,
        "fullcodeline": "return -1;"
    },
    {
        "line": 73,
        "fullcodeline": "|| EVP_DigestSignFinal(mac_ctx, md, &md_size) <= 0) {"
    },
    {
        "line": 74,
        "fullcodeline": "EVP_MD_CTX_free(hmac);"
    },
    {
        "line": 108,
        "fullcodeline": "if (seq[i] != 0)"
    },
    {
        "line": 31,
        "fullcodeline": "return -1;"
    },
    {
        "line": 72,
        "fullcodeline": "|| EVP_DigestSignUpdate(mac_ctx, rec->input, rec->length) <= 0"
    },
    {
        "line": 75,
        "fullcodeline": "return -1;"
    },
    {
        "line": 78,
        "fullcodeline": "if (!tls_fips_digest_extra(ssl->enc_read_ctx,"
    },
    {
        "line": 81,
        "fullcodeline": "EVP_MD_CTX_free(hmac);"
    },
    {
        "line": 82,
        "fullcodeline": "return -1;"
    }
]