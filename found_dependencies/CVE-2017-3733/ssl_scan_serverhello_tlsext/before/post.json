[
    {
        "line": 4,
        "fullcodeline": "int tlsext_servername = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int renegotiate_seen = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "s->s3->next_proto_neg_seen = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "s->tlsext_ticket_expected = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "s->s3->alpn_selected = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "s->tlsext_heartbeat &= ~(SSL_DTLSEXT_HB_ENABLED |"
    },
    {
        "line": 19,
        "fullcodeline": "s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;"
    },
    {
        "line": 21,
        "fullcodeline": "s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;"
    },
    {
        "line": 23,
        "fullcodeline": "if (!PACKET_get_net_2(pkt, &length))"
    },
    {
        "line": 26,
        "fullcodeline": "if (PACKET_remaining(pkt) != length) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (!tls1_check_duplicate_extensions(pkt)) {"
    },
    {
        "line": 36,
        "fullcodeline": "while (PACKET_get_net_2(pkt, &type) && PACKET_get_net_2(pkt, &size)) {"
    },
    {
        "line": 252,
        "fullcodeline": "if (PACKET_remaining(pkt) != 0) {"
    },
    {
        "line": 257,
        "fullcodeline": "if (!s->hit && tlsext_servername == 1) {"
    },
    {
        "line": 282,
        "fullcodeline": "if (!renegotiate_seen && !(s->options & SSL_OP_LEGACY_SERVER_CONNECT)"
    },
    {
        "line": 27,
        "fullcodeline": "*al = SSL_AD_DECODE_ERROR;"
    },
    {
        "line": 32,
        "fullcodeline": "*al = SSL_AD_DECODE_ERROR;"
    },
    {
        "line": 253,
        "fullcodeline": "*al = SSL_AD_DECODE_ERROR;"
    },
    {
        "line": 283,
        "fullcodeline": "&& !(s->options & SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION)) {"
    },
    {
        "line": 284,
        "fullcodeline": "*al = SSL_AD_HANDSHAKE_FAILURE;"
    },
    {
        "line": 285,
        "fullcodeline": "SSLerr(SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT,"
    },
    {
        "line": 40,
        "fullcodeline": "if (!PACKET_get_sub_packet(pkt, &spkt, size)"
    },
    {
        "line": 47,
        "fullcodeline": "if (type == TLSEXT_TYPE_renegotiate) {"
    },
    {
        "line": 295,
        "fullcodeline": "if (!(s->s3->flags & TLS1_FLAGS_RECEIVED_EXTMS) !="
    },
    {
        "line": 41,
        "fullcodeline": "|| !PACKET_peek_bytes(&spkt, &data, size))"
    },
    {
        "line": 45,
        "fullcodeline": "s->tlsext_debug_cb(s, 1, type, data, size, s->tlsext_debug_arg);"
    },
    {
        "line": 50,
        "fullcodeline": "renegotiate_seen = 1;"
    },
    {
        "line": 296,
        "fullcodeline": "!(s->session->flags & SSL_SESS_FLAG_EXTMS)) {"
    },
    {
        "line": 297,
        "fullcodeline": "*al = SSL_AD_HANDSHAKE_FAILURE;"
    },
    {
        "line": 298,
        "fullcodeline": "SSLerr(SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT, SSL_R_INCONSISTENT_EXTMS);"
    },
    {
        "line": 48,
        "fullcodeline": "if (!ssl_parse_serverhello_renegotiate_ext(s, &spkt, al))"
    },
    {
        "line": 259,
        "fullcodeline": "if (s->session->tlsext_hostname == NULL) {"
    },
    {
        "line": 51,
        "fullcodeline": "} else if (s->version == SSL3_VERSION) {"
    },
    {
        "line": 260,
        "fullcodeline": "s->session->tlsext_hostname ="
    },
    {
        "line": 261,
        "fullcodeline": "OPENSSL_strdup(s->tlsext_hostname);"
    },
    {
        "line": 262,
        "fullcodeline": "if (!s->session->tlsext_hostname) {"
    },
    {
        "line": 267,
        "fullcodeline": "*al = SSL_AD_DECODE_ERROR;"
    },
    {
        "line": 263,
        "fullcodeline": "*al = SSL_AD_UNRECOGNIZED_NAME;"
    },
    {
        "line": 52,
        "fullcodeline": "} else if (type == TLSEXT_TYPE_server_name) {"
    },
    {
        "line": 57,
        "fullcodeline": "tlsext_servername = 1;"
    },
    {
        "line": 53,
        "fullcodeline": "if (s->tlsext_hostname == NULL || size > 0) {"
    },
    {
        "line": 54,
        "fullcodeline": "*al = TLS1_AD_UNRECOGNIZED_NAME;"
    },
    {
        "line": 60,
        "fullcodeline": "else if (type == TLSEXT_TYPE_ec_point_formats) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (!PACKET_get_1(&spkt, &ecpointformatlist_length)"
    },
    {
        "line": 67,
        "fullcodeline": "if (!s->hit) {"
    },
    {
        "line": 63,
        "fullcodeline": "|| ecpointformatlist_length != size - 1) {"
    },
    {
        "line": 64,
        "fullcodeline": "*al = TLS1_AD_DECODE_ERROR;"
    },
    {
        "line": 68,
        "fullcodeline": "s->session->tlsext_ecpointformatlist_length = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "OPENSSL_free(s->session->tlsext_ecpointformatlist);"
    },
    {
        "line": 75,
        "fullcodeline": "s->session->tlsext_ecpointformatlist_length ="
    },
    {
        "line": 88,
        "fullcodeline": "else if (type == TLSEXT_TYPE_session_ticket) {"
    },
    {
        "line": 70,
        "fullcodeline": "if ((s->session->tlsext_ecpointformatlist ="
    },
    {
        "line": 77,
        "fullcodeline": "if (!PACKET_copy_bytes(&spkt,"
    },
    {
        "line": 100,
        "fullcodeline": "s->tlsext_ticket_expected = 1;"
    },
    {
        "line": 72,
        "fullcodeline": "*al = TLS1_AD_INTERNAL_ERROR;"
    },
    {
        "line": 80,
        "fullcodeline": "*al = TLS1_AD_DECODE_ERROR;"
    },
    {
        "line": 89,
        "fullcodeline": "if (s->tls_session_ticket_ext_cb &&"
    },
    {
        "line": 96,
        "fullcodeline": "if (!tls_use_ticket(s) || (size > 0)) {"
    },
    {
        "line": 71,
        "fullcodeline": "OPENSSL_malloc(ecpointformatlist_length)) == NULL) {"
    },
    {
        "line": 90,
        "fullcodeline": "!s->tls_session_ticket_ext_cb(s, data, size,"
    },
    {
        "line": 93,
        "fullcodeline": "*al = TLS1_AD_INTERNAL_ERROR;"
    },
    {
        "line": 97,
        "fullcodeline": "*al = TLS1_AD_UNSUPPORTED_EXTENSION;"
    },
    {
        "line": 101,
        "fullcodeline": "} else if (type == TLSEXT_TYPE_status_request) {"
    },
    {
        "line": 111,
        "fullcodeline": "s->tlsext_status_expected = 1;"
    },
    {
        "line": 106,
        "fullcodeline": "if ((s->tlsext_status_type == -1) || (size > 0)) {"
    },
    {
        "line": 107,
        "fullcodeline": "*al = TLS1_AD_UNSUPPORTED_EXTENSION;"
    },
    {
        "line": 119,
        "fullcodeline": "else if (type == TLSEXT_TYPE_signed_certificate_timestamp &&"
    },
    {
        "line": 120,
        "fullcodeline": "s->ct_validation_callback != NULL) {"
    },
    {
        "line": 126,
        "fullcodeline": "s->tlsext_scts_len = size;"
    },
    {
        "line": 122,
        "fullcodeline": "if (s->tlsext_scts != NULL) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (size > 0) {"
    },
    {
        "line": 123,
        "fullcodeline": "OPENSSL_free(s->tlsext_scts);"
    },
    {
        "line": 124,
        "fullcodeline": "s->tlsext_scts = NULL;"
    },
    {
        "line": 128,
        "fullcodeline": "s->tlsext_scts = OPENSSL_malloc(size);"
    },
    {
        "line": 133,
        "fullcodeline": "memcpy(s->tlsext_scts, data, size);"
    },
    {
        "line": 138,
        "fullcodeline": "else if (type == TLSEXT_TYPE_next_proto_neg &&"
    },
    {
        "line": 129,
        "fullcodeline": "if (s->tlsext_scts == NULL) {"
    },
    {
        "line": 139,
        "fullcodeline": "s->s3->tmp.finish_md_len == 0) {"
    },
    {
        "line": 164,
        "fullcodeline": "OPENSSL_free(s->next_proto_negotiated);"
    },
    {
        "line": 165,
        "fullcodeline": "s->next_proto_negotiated = OPENSSL_malloc(selected_len);"
    },
    {
        "line": 170,
        "fullcodeline": "memcpy(s->next_proto_negotiated, selected, selected_len);"
    },
    {
        "line": 171,
        "fullcodeline": "s->next_proto_negotiated_len = selected_len;"
    },
    {
        "line": 172,
        "fullcodeline": "s->s3->next_proto_neg_seen = 1;"
    },
    {
        "line": 130,
        "fullcodeline": "*al = TLS1_AD_INTERNAL_ERROR;"
    },
    {
        "line": 143,
        "fullcodeline": "if (s->ctx->next_proto_select_cb == NULL) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (!ssl_next_proto_validate(&spkt)) {"
    },
    {
        "line": 152,
        "fullcodeline": "if (s->ctx->next_proto_select_cb(s, &selected, &selected_len, data,"
    },
    {
        "line": 166,
        "fullcodeline": "if (s->next_proto_negotiated == NULL) {"
    },
    {
        "line": 144,
        "fullcodeline": "*al = TLS1_AD_UNSUPPORTED_EXTENSION;"
    },
    {
        "line": 149,
        "fullcodeline": "*al = TLS1_AD_DECODE_ERROR;"
    },
    {
        "line": 157,
        "fullcodeline": "*al = TLS1_AD_INTERNAL_ERROR;"
    },
    {
        "line": 167,
        "fullcodeline": "*al = TLS1_AD_INTERNAL_ERROR;"
    },
    {
        "line": 176,
        "fullcodeline": "else if (type == TLSEXT_TYPE_application_layer_protocol_negotiation) {"
    },
    {
        "line": 195,
        "fullcodeline": "OPENSSL_free(s->s3->alpn_selected);"
    },
    {
        "line": 196,
        "fullcodeline": "s->s3->alpn_selected = OPENSSL_malloc(len);"
    },
    {
        "line": 205,
        "fullcodeline": "s->s3->alpn_selected_len = len;"
    },
    {
        "line": 189,
        "fullcodeline": "if (!PACKET_get_net_2(&spkt, &len)"
    },
    {
        "line": 197,
        "fullcodeline": "if (s->s3->alpn_selected == NULL) {"
    },
    {
        "line": 201,
        "fullcodeline": "if (!PACKET_copy_bytes(&spkt, s->s3->alpn_selected, len)) {"
    },
    {
        "line": 180,
        "fullcodeline": "*al = TLS1_AD_UNSUPPORTED_EXTENSION;"
    },
    {
        "line": 191,
        "fullcodeline": "|| PACKET_remaining(&spkt) != len) {"
    },
    {
        "line": 192,
        "fullcodeline": "*al = TLS1_AD_DECODE_ERROR;"
    },
    {
        "line": 198,
        "fullcodeline": "*al = TLS1_AD_INTERNAL_ERROR;"
    },
    {
        "line": 202,
        "fullcodeline": "*al = TLS1_AD_DECODE_ERROR;"
    },
    {
        "line": 208,
        "fullcodeline": "else if (SSL_IS_DTLS(s) && type == TLSEXT_TYPE_heartbeat) {"
    },
    {
        "line": 190,
        "fullcodeline": "|| PACKET_remaining(&spkt) != len || !PACKET_get_1(&spkt, &len)"
    },
    {
        "line": 210,
        "fullcodeline": "if (!PACKET_get_1(&spkt, &hbtype)) {"
    },
    {
        "line": 211,
        "fullcodeline": "*al = SSL_AD_DECODE_ERROR;"
    },
    {
        "line": 216,
        "fullcodeline": "s->tlsext_heartbeat |= SSL_DTLSEXT_HB_ENABLED;"
    },
    {
        "line": 219,
        "fullcodeline": "s->tlsext_heartbeat |= SSL_DTLSEXT_HB_ENABLED;"
    },
    {
        "line": 220,
        "fullcodeline": "s->tlsext_heartbeat |= SSL_DTLSEXT_HB_DONT_SEND_REQUESTS;"
    },
    {
        "line": 223,
        "fullcodeline": "*al = SSL_AD_ILLEGAL_PARAMETER;"
    },
    {
        "line": 229,
        "fullcodeline": "else if (SSL_IS_DTLS(s) && type == TLSEXT_TYPE_use_srtp) {"
    },
    {
        "line": 230,
        "fullcodeline": "if (ssl_parse_serverhello_use_srtp_ext(s, &spkt, al))"
    },
    {
        "line": 234,
        "fullcodeline": "else if (type == TLSEXT_TYPE_encrypt_then_mac) {"
    },
    {
        "line": 236,
        "fullcodeline": "if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD"
    },
    {
        "line": 237,
        "fullcodeline": "&& s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)"
    },
    {
        "line": 238,
        "fullcodeline": "s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;"
    },
    {
        "line": 239,
        "fullcodeline": "} else if (type == TLSEXT_TYPE_extended_master_secret) {"
    },
    {
        "line": 240,
        "fullcodeline": "s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;"
    },
    {
        "line": 241,
        "fullcodeline": "if (!s->hit)"
    },
    {
        "line": 242,
        "fullcodeline": "s->session->flags |= SSL_SESS_FLAG_EXTMS;"
    },
    {
        "line": 248,
        "fullcodeline": "else if (custom_ext_parse(s, 0, type, data, size, al) <= 0)"
    }
]