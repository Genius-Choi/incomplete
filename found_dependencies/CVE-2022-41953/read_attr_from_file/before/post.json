[
    {
        "line": 6,
        "fullcodeline": "char buf[2048];"
    },
    {
        "line": 7,
        "fullcodeline": "int lineno = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "fp = xfdopen(fd, \"r\");"
    },
    {
        "line": 20,
        "fullcodeline": "CALLOC_ARRAY(res, 1);"
    },
    {
        "line": 27,
        "fullcodeline": "fclose(fp);"
    },
    {
        "line": 9,
        "fullcodeline": "if (flags & READ_ATTR_NOFOLLOW)"
    },
    {
        "line": 14,
        "fullcodeline": "if (fd < 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "while (fgets(buf, sizeof(buf), fp)) {"
    },
    {
        "line": 10,
        "fullcodeline": "fd = open_nofollow(path, O_RDONLY);"
    },
    {
        "line": 15,
        "fullcodeline": "warn_on_fopen_errors(path);"
    },
    {
        "line": 22,
        "fullcodeline": "char *bufp = buf;"
    },
    {
        "line": 25,
        "fullcodeline": "handle_attr_line(res, bufp, path, ++lineno, flags);"
    },
    {
        "line": 12,
        "fullcodeline": "fd = open(path, O_RDONLY);"
    },
    {
        "line": 23,
        "fullcodeline": "if (!lineno)"
    },
    {
        "line": 24,
        "fullcodeline": "skip_utf8_bom(&bufp, strlen(bufp));"
    }
]