[
    {
        "line": 5,
        "fullcodeline": "int retval = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "int has_null_sha1 = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int has_full_path = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "int has_empty_name = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "int has_dot = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "int has_dotdot = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "int has_dotgit = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "int has_zero_pad = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int has_bad_modes = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "int has_dup_entries = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "int not_properly_sorted = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "struct name_stack df_dup_candidates = { NULL };"
    },
    {
        "line": 28,
        "fullcodeline": "o_mode = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "o_name = NULL;"
    },
    {
        "line": 145,
        "fullcodeline": "name_stack_clear(&df_dup_candidates);"
    },
    {
        "line": 21,
        "fullcodeline": "if (init_tree_desc_gently(&desc, buffer, size, TREE_DESC_RAW_MODES)) {"
    },
    {
        "line": 22,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 36,
        "fullcodeline": "entry_oid = tree_entry_extract(&desc, &name, &mode);"
    },
    {
        "line": 38,
        "fullcodeline": "has_null_sha1 |= is_null_oid(entry_oid);"
    },
    {
        "line": 39,
        "fullcodeline": "has_full_path |= !!strchr(name, '/');"
    },
    {
        "line": 40,
        "fullcodeline": "has_empty_name |= !*name;"
    },
    {
        "line": 41,
        "fullcodeline": "has_dot |= !strcmp(name, \".\");"
    },
    {
        "line": 42,
        "fullcodeline": "has_dotdot |= !strcmp(name, \"..\");"
    },
    {
        "line": 43,
        "fullcodeline": "has_dotgit |= is_hfs_dotgit(name) || is_ntfs_dotgit(name);"
    },
    {
        "line": 44,
        "fullcodeline": "has_zero_pad |= *(char *)desc.buffer == '0';"
    },
    {
        "line": 141,
        "fullcodeline": "o_mode = mode;"
    },
    {
        "line": 142,
        "fullcodeline": "o_name = name;"
    },
    {
        "line": 148,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 152,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 156,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 160,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 164,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 168,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 172,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 176,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 180,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 184,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 46,
        "fullcodeline": "if (is_hfs_dotgitmodules(name) || is_ntfs_dotgitmodules(name)) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (is_hfs_dotgitattributes(name) || is_ntfs_dotgitattributes(name)) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (S_ISLNK(mode)) {"
    },
    {
        "line": 80,
        "fullcodeline": "if ((backslash = strchr(name, '\\\\'))) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (update_tree_entry_gently(&desc)) {"
    },
    {
        "line": 98,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 108,
        "fullcodeline": "case S_IFREG | 0755:"
    },
    {
        "line": 109,
        "fullcodeline": "case S_IFREG | 0644:"
    },
    {
        "line": 119,
        "fullcodeline": "case S_IFREG | 0664:"
    },
    {
        "line": 124,
        "fullcodeline": "has_bad_modes = 1;"
    },
    {
        "line": 47,
        "fullcodeline": "if (!S_ISLNK(mode))"
    },
    {
        "line": 58,
        "fullcodeline": "if (!S_ISLNK(mode))"
    },
    {
        "line": 68,
        "fullcodeline": "if (is_hfs_dotgitignore(name) ||"
    },
    {
        "line": 73,
        "fullcodeline": "if (is_hfs_dotmailmap(name) ||"
    },
    {
        "line": 120,
        "fullcodeline": "if (!options->strict)"
    },
    {
        "line": 128,
        "fullcodeline": "switch (verify_ordered(o_mode, o_name, mode, name,"
    },
    {
        "line": 48,
        "fullcodeline": "oidset_insert(&options->gitmodules_found,"
    },
    {
        "line": 59,
        "fullcodeline": "oidset_insert(&options->gitattributes_found,"
    },
    {
        "line": 69,
        "fullcodeline": "is_ntfs_dotgitignore(name))"
    },
    {
        "line": 70,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 74,
        "fullcodeline": "is_ntfs_dotmailmap(name))"
    },
    {
        "line": 75,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 82,
        "fullcodeline": "backslash++;"
    },
    {
        "line": 83,
        "fullcodeline": "has_dotgit |= is_ntfs_dotgit(backslash);"
    },
    {
        "line": 93,
        "fullcodeline": "backslash = strchr(backslash, '\\\\');"
    },
    {
        "line": 131,
        "fullcodeline": "not_properly_sorted = 1;"
    },
    {
        "line": 134,
        "fullcodeline": "has_dup_entries = 1;"
    },
    {
        "line": 51,
        "fullcodeline": "retval += report(options,"
    },
    {
        "line": 62,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    },
    {
        "line": 84,
        "fullcodeline": "if (is_ntfs_dotgitmodules(backslash)) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (!S_ISLNK(mode))"
    },
    {
        "line": 86,
        "fullcodeline": "oidset_insert(&options->gitmodules_found,"
    },
    {
        "line": 89,
        "fullcodeline": "retval += report(options, tree_oid, OBJ_TREE,"
    }
]