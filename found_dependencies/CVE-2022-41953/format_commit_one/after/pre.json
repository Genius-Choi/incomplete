[
    {
        "line": 5,
        "fullcodeline": "struct format_commit_context *c = context;"
    },
    {
        "line": 6,
        "fullcodeline": "const struct commit *commit = c->commit;"
    },
    {
        "line": 7,
        "fullcodeline": "const char *msg = c->message;"
    },
    {
        "line": 14,
        "fullcodeline": "res = strbuf_expand_literal_cb(sb, placeholder, NULL);"
    },
    {
        "line": 76,
        "fullcodeline": "if (skip_prefix(placeholder, \"(describe\", &arg)) {"
    },
    {
        "line": 200,
        "fullcodeline": "if (placeholder[0] == 'G') {"
    },
    {
        "line": 256,
        "fullcodeline": "if (!c->commit_header_parsed) {"
    },
    {
        "line": 283,
        "fullcodeline": "if (!c->commit_message_parsed)"
    },
    {
        "line": 299,
        "fullcodeline": "if (skip_prefix(placeholder, \"(trailers\", &arg)) {"
    },
    {
        "line": 77,
        "fullcodeline": "struct child_process cmd = CHILD_PROCESS_INIT;"
    },
    {
        "line": 78,
        "fullcodeline": "struct strbuf out = STRBUF_INIT;"
    },
    {
        "line": 79,
        "fullcodeline": "struct strbuf err = STRBUF_INIT;"
    },
    {
        "line": 82,
        "fullcodeline": "describe_status = c->pretty_ctx->describe_status;"
    },
    {
        "line": 89,
        "fullcodeline": "cmd.git_cmd = 1;"
    },
    {
        "line": 90,
        "fullcodeline": "strvec_push(&cmd.args, \"describe\");"
    },
    {
        "line": 103,
        "fullcodeline": "pipe_command(&cmd, NULL, 0, &out, 0, &err, 0);"
    },
    {
        "line": 104,
        "fullcodeline": "strbuf_rtrim(&out);"
    },
    {
        "line": 105,
        "fullcodeline": "strbuf_addbuf(sb, &out);"
    },
    {
        "line": 113,
        "fullcodeline": "parse_object(the_repository, &commit->object.oid);"
    },
    {
        "line": 117,
        "fullcodeline": "strbuf_addstr(sb, diff_get_color(c->auto_color, DIFF_COMMIT));"
    },
    {
        "line": 118,
        "fullcodeline": "strbuf_addstr(sb, oid_to_hex(&commit->object.oid));"
    },
    {
        "line": 122,
        "fullcodeline": "strbuf_addstr(sb, diff_get_color(c->auto_color, DIFF_COMMIT));"
    },
    {
        "line": 123,
        "fullcodeline": "strbuf_add_unique_abbrev(sb, &commit->object.oid,"
    },
    {
        "line": 162,
        "fullcodeline": "slot = revision_sources_at(c->pretty_ctx->rev->sources, commit);"
    },
    {
        "line": 257,
        "fullcodeline": "msg = c->message ="
    },
    {
        "line": 260,
        "fullcodeline": "parse_commit_header(c);"
    },
    {
        "line": 284,
        "fullcodeline": "parse_commit_message(c);"
    },
    {
        "line": 291,
        "fullcodeline": "eol = strchrnul(msg + c->subject_off, '\\n');"
    },
    {
        "line": 300,
        "fullcodeline": "struct process_trailer_options opts = PROCESS_TRAILER_OPTIONS_INIT;"
    },
    {
        "line": 301,
        "fullcodeline": "struct string_list filter_list = STRING_LIST_INIT_NODUP;"
    },
    {
        "line": 302,
        "fullcodeline": "struct strbuf sepbuf = STRBUF_INIT;"
    },
    {
        "line": 303,
        "fullcodeline": "struct strbuf kvsepbuf = STRBUF_INIT;"
    },
    {
        "line": 304,
        "fullcodeline": "size_t ret = 0;"
    },
    {
        "line": 306,
        "fullcodeline": "opts.no_divider = 1;"
    },
    {
        "line": 37,
        "fullcodeline": "if (placeholder[1] == '(') {"
    },
    {
        "line": 73,
        "fullcodeline": "return parse_padding_placeholder(placeholder, c);"
    },
    {
        "line": 92,
        "fullcodeline": "if (*arg == ':') {"
    },
    {
        "line": 97,
        "fullcodeline": "if (*arg != ')') {"
    },
    {
        "line": 102,
        "fullcodeline": "strvec_push(&cmd.args, oid_to_hex(&commit->object.oid));"
    },
    {
        "line": 108,
        "fullcodeline": "return arg - placeholder + 1;"
    },
    {
        "line": 119,
        "fullcodeline": "strbuf_addstr(sb, diff_get_color(c->auto_color, DIFF_RESET));"
    },
    {
        "line": 125,
        "fullcodeline": "strbuf_addstr(sb, diff_get_color(c->auto_color, DIFF_RESET));"
    },
    {
        "line": 128,
        "fullcodeline": "strbuf_addstr(sb, oid_to_hex(get_commit_tree_oid(commit)));"
    },
    {
        "line": 132,
        "fullcodeline": "get_commit_tree_oid(commit),"
    },
    {
        "line": 136,
        "fullcodeline": "for (p = commit->parents; p; p = p->next) {"
    },
    {
        "line": 143,
        "fullcodeline": "for (p = commit->parents; p; p = p->next) {"
    },
    {
        "line": 151,
        "fullcodeline": "strbuf_addstr(sb, get_revision_mark(NULL, commit));"
    },
    {
        "line": 201,
        "fullcodeline": "if (!c->signature_check.result)"
    },
    {
        "line": 265,
        "fullcodeline": "return format_person_part(sb, placeholder[1],"
    },
    {
        "line": 269,
        "fullcodeline": "return format_person_part(sb, placeholder[1],"
    },
    {
        "line": 292,
        "fullcodeline": "format_sanitized_subject(sb, msg + c->subject_off, eol - (msg + c->subject_off));"
    },
    {
        "line": 308,
        "fullcodeline": "if (*arg == ':') {"
    },
    {
        "line": 313,
        "fullcodeline": "if (*arg == ')') {"
    },
    {
        "line": 21,
        "fullcodeline": "c->auto_color = want_color(c->pretty_ctx->color);"
    },
    {
        "line": 38,
        "fullcodeline": "unsigned long width = 0, indent1 = 0, indent2 = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "const char *start = placeholder + 2;"
    },
    {
        "line": 41,
        "fullcodeline": "const char *end = strchr(start, ')');"
    },
    {
        "line": 93,
        "fullcodeline": "arg++;"
    },
    {
        "line": 94,
        "fullcodeline": "arg += parse_describe_args(arg, &cmd.args);"
    },
    {
        "line": 139,
        "fullcodeline": "strbuf_addstr(sb, oid_to_hex(&p->item->object.oid));"
    },
    {
        "line": 146,
        "fullcodeline": "strbuf_add_unique_abbrev(sb, &p->item->object.oid,"
    },
    {
        "line": 160,
        "fullcodeline": "if (!(c->pretty_ctx->rev && c->pretty_ctx->rev->sources))"
    },
    {
        "line": 163,
        "fullcodeline": "if (!(slot && *slot))"
    },
    {
        "line": 258,
        "fullcodeline": "repo_logmsg_reencode(c->repository, commit,"
    },
    {
        "line": 309,
        "fullcodeline": "arg++;"
    },
    {
        "line": 315,
        "fullcodeline": "ret = arg - placeholder + 1;"
    },
    {
        "line": 22,
        "fullcodeline": "if (c->auto_color && sb->len)"
    },
    {
        "line": 26,
        "fullcodeline": "int ret = parse_color(sb, placeholder, c);"
    },
    {
        "line": 42,
        "fullcodeline": "if (!end)"
    },
    {
        "line": 44,
        "fullcodeline": "if (end > start) {"
    },
    {
        "line": 67,
        "fullcodeline": "return end - placeholder + 1;"
    },
    {
        "line": 84,
        "fullcodeline": "if (!describe_status->max_invocations)"
    },
    {
        "line": 137,
        "fullcodeline": "if (p != commit->parents)"
    },
    {
        "line": 144,
        "fullcodeline": "if (p != commit->parents)"
    },
    {
        "line": 186,
        "fullcodeline": "return format_reflog_person(sb,"
    },
    {
        "line": 247,
        "fullcodeline": "strbuf_addstr(sb, gpg_trust_level_to_str(c->signature_check.trust_level));"
    },
    {
        "line": 310,
        "fullcodeline": "if (format_set_trailers_options(&opts, &filter_list, &sepbuf, &kvsepbuf, &arg, NULL))"
    },
    {
        "line": 23,
        "fullcodeline": "strbuf_addstr(sb, GIT_COLOR_RESET);"
    },
    {
        "line": 45,
        "fullcodeline": "width = strtoul(start, &next, 10);"
    },
    {
        "line": 62,
        "fullcodeline": "if (width > FORMATTING_LIMIT ||"
    },
    {
        "line": 64,
        "fullcodeline": "indent2 > FORMATTING_LIMIT)"
    },
    {
        "line": 138,
        "fullcodeline": "strbuf_addch(sb, ' ');"
    },
    {
        "line": 145,
        "fullcodeline": "strbuf_addch(sb, ' ');"
    },
    {
        "line": 46,
        "fullcodeline": "if (*next == ',') {"
    },
    {
        "line": 63,
        "fullcodeline": "indent1 > FORMATTING_LIMIT ||"
    },
    {
        "line": 176,
        "fullcodeline": "(placeholder[1] == 'd'));"
    },
    {
        "line": 47,
        "fullcodeline": "indent1 = strtoul(next + 1, &next, 10);"
    },
    {
        "line": 48,
        "fullcodeline": "if (*next == ',') {"
    },
    {
        "line": 49,
        "fullcodeline": "indent2 = strtoul(next + 1,"
    }
]