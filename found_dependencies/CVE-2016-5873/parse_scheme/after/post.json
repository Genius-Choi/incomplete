[
    {
        "line": 4,
        "fullcodeline": "const char *tmp = state->ptr;"
    },
    {
        "line": 42,
        "fullcodeline": "state->offset = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "} while (++state->ptr != state->end);"
    },
    {
        "line": 43,
        "fullcodeline": "return state->ptr = tmp;"
    },
    {
        "line": 11,
        "fullcodeline": "state->buffer[state->offset++] = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "state->ptr += mb - 1;"
    },
    {
        "line": 12,
        "fullcodeline": "return ++state->ptr;"
    },
    {
        "line": 17,
        "fullcodeline": "if (state->ptr == tmp) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (!(mb = parse_mb(state, PARSE_SCHEME, state->ptr, state->end, tmp, 1))) {"
    },
    {
        "line": 30,
        "fullcodeline": "state->buffer[state->offset++] = *state->ptr;"
    }
]