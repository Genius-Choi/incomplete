[
    {
        "line": 5,
        "fullcodeline": "Bool is_qt_text = GF_FALSE;"
    },
    {
        "line": 10,
        "fullcodeline": "trak = gf_isom_get_track_from_file(movie, trackNumber);"
    },
    {
        "line": 21,
        "fullcodeline": "txt = (GF_Tx3gSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, descriptionIndex - 1);"
    },
    {
        "line": 33,
        "fullcodeline": "(*out_desc) = (GF_TextSampleDescriptor *) gf_odf_desc_new(GF_ODF_TX3G_TAG);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!descriptionIndex || !out_desc) return GF_BAD_PARAM;"
    },
    {
        "line": 22,
        "fullcodeline": "if (!txt) return GF_BAD_PARAM;"
    },
    {
        "line": 11,
        "fullcodeline": "if (!trak || !trak->Media) return GF_BAD_PARAM;"
    },
    {
        "line": 27,
        "fullcodeline": "is_qt_text = GF_TRUE;"
    },
    {
        "line": 42,
        "fullcodeline": "GF_TextSampleEntryBox *qt_txt = (GF_TextSampleEntryBox *) txt;"
    },
    {
        "line": 51,
        "fullcodeline": "for (i=0; i<txt->font_table->entry_count; i++) {"
    },
    {
        "line": 46,
        "fullcodeline": "(*out_desc)->fonts[0].fontName = gf_strdup(qt_txt->textName);"
    },
    {
        "line": 50,
        "fullcodeline": "(*out_desc)->fonts = (GF_FontRecord *) gf_malloc(sizeof(GF_FontRecord) * txt->font_table->entry_count);"
    },
    {
        "line": 54,
        "fullcodeline": "(*out_desc)->fonts[i].fontName = gf_strdup(txt->font_table->fonts[i].fontName);"
    }
]