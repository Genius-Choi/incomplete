[
    {
        "line": 5,
        "fullcodeline": "GF_TextSampleEntryBox *ptr = (GF_TextSampleEntryBox*)s;"
    },
    {
        "line": 7,
        "fullcodeline": "e = gf_isom_box_write_header(s, bs);"
    },
    {
        "line": 9,
        "fullcodeline": "gf_bs_write_data(bs, ptr->reserved, 6);"
    },
    {
        "line": 10,
        "fullcodeline": "gf_bs_write_u16(bs, ptr->dataReferenceIndex);"
    },
    {
        "line": 12,
        "fullcodeline": "gf_bs_write_u32(bs, ptr->displayFlags);\t\t\t/*Display flags*/"
    },
    {
        "line": 13,
        "fullcodeline": "gf_bs_write_u32(bs, ptr->textJustification);\t/*Text justification*/"
    },
    {
        "line": 14,
        "fullcodeline": "gf_bs_write_data(bs, ptr->background_color, 6);\t/*Background color*/"
    },
    {
        "line": 15,
        "fullcodeline": "gpp_write_box(bs, &ptr->default_box);\t\t\t/*Default text box*/"
    },
    {
        "line": 16,
        "fullcodeline": "gf_bs_write_data(bs, ptr->reserved1, 8);\t\t/*Reserved*/"
    },
    {
        "line": 17,
        "fullcodeline": "gf_bs_write_u16(bs, ptr->fontNumber);\t\t\t/*Font number*/"
    },
    {
        "line": 18,
        "fullcodeline": "gf_bs_write_u16(bs, ptr->fontFace);\t\t\t\t/*Font face*/"
    },
    {
        "line": 19,
        "fullcodeline": "gf_bs_write_u8(bs, ptr->reserved2);\t\t\t\t/*Reserved*/"
    },
    {
        "line": 20,
        "fullcodeline": "gf_bs_write_u16(bs, ptr->reserved3);\t\t\t/*Reserved*/"
    },
    {
        "line": 21,
        "fullcodeline": "gf_bs_write_data(bs, ptr->foreground_color, 6);\t/*Foreground color*/"
    },
    {
        "line": 23,
        "fullcodeline": "if (ptr->textName && (pSize = (u16) strlen(ptr->textName))) {"
    },
    {
        "line": 24,
        "fullcodeline": "gf_bs_write_u8(bs, pSize);\t\t\t\t\t/*a Pascal string begins with its size*/"
    }
]