[
    {
        "line": 4,
        "fullcodeline": "const char *qt_fontname = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "GF_TextSampleEntryBox *qt = (_a->type==GF_ISOM_BOX_TYPE_TEXT) ? (GF_TextSampleEntryBox *)_a : NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "GF_Tx3gSampleEntryBox *ttxt = (_a->type!=GF_ISOM_BOX_TYPE_TEXT) ? (GF_Tx3gSampleEntryBox *)_a : NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "size = 8 + 18 + 8 + 12;"
    },
    {
        "line": 16,
        "fullcodeline": "size += 8 + 2;"
    },
    {
        "line": 17,
        "fullcodeline": "fount_count = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "gf_bs_write_u32(bs, size);"
    },
    {
        "line": 31,
        "fullcodeline": "gf_bs_write_u32(bs, GF_ISOM_BOX_TYPE_TX3G);"
    },
    {
        "line": 32,
        "fullcodeline": "gf_bs_write_data(bs, _a->reserved, 6);"
    },
    {
        "line": 33,
        "fullcodeline": "gf_bs_write_u16(bs, _a->dataReferenceIndex);"
    },
    {
        "line": 34,
        "fullcodeline": "gf_bs_write_u32(bs, _a->displayFlags);"
    },
    {
        "line": 53,
        "fullcodeline": "size -= (8 + 18 + 8 + 12);"
    },
    {
        "line": 54,
        "fullcodeline": "gf_bs_write_u32(bs, size);"
    },
    {
        "line": 55,
        "fullcodeline": "gf_bs_write_u32(bs, GF_ISOM_BOX_TYPE_FTAB);"
    },
    {
        "line": 57,
        "fullcodeline": "gf_bs_write_u16(bs, fount_count);"
    },
    {
        "line": 18,
        "fullcodeline": "if (qt && qt->textName) {"
    },
    {
        "line": 58,
        "fullcodeline": "for (j=0; j<fount_count; j++) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (sidx_offset) gf_bs_write_u8(bs, sidx + sidx_offset);"
    },
    {
        "line": 19,
        "fullcodeline": "qt_fontname = qt->textName;"
    },
    {
        "line": 20,
        "fullcodeline": "fount_count = 1;"
    },
    {
        "line": 37,
        "fullcodeline": "memset(&sr, 0, sizeof(GF_StyleRecord));"
    },
    {
        "line": 38,
        "fullcodeline": "gf_bs_write_u8(bs, qt->textJustification);"
    },
    {
        "line": 39,
        "fullcodeline": "gf_bs_write_u8(bs, (u8) -1);"
    },
    {
        "line": 40,
        "fullcodeline": "gpp_write_rgba(bs, rgb_48_to_32(qt->background_color) );"
    },
    {
        "line": 41,
        "fullcodeline": "gpp_write_box(bs, &qt->default_box);"
    },
    {
        "line": 42,
        "fullcodeline": "sr.text_color = rgb_48_to_32(qt->foreground_color);"
    },
    {
        "line": 43,
        "fullcodeline": "sr.style_flags = qt->fontFace;"
    },
    {
        "line": 44,
        "fullcodeline": "gpp_write_style(bs, &sr);"
    },
    {
        "line": 46,
        "fullcodeline": "gf_bs_write_u8(bs, ttxt->horizontal_justification);"
    },
    {
        "line": 47,
        "fullcodeline": "gf_bs_write_u8(bs, ttxt->vertical_justification);"
    },
    {
        "line": 48,
        "fullcodeline": "gpp_write_rgba(bs, ttxt->back_color);"
    },
    {
        "line": 49,
        "fullcodeline": "gpp_write_box(bs, &ttxt->default_box);"
    },
    {
        "line": 50,
        "fullcodeline": "gpp_write_style(bs, &ttxt->default_style);"
    },
    {
        "line": 21,
        "fullcodeline": "} else if (ttxt && ttxt->font_table) {"
    },
    {
        "line": 60,
        "fullcodeline": "gf_bs_write_u16(bs, 0);"
    },
    {
        "line": 22,
        "fullcodeline": "fount_count = ttxt->font_table->entry_count;"
    },
    {
        "line": 69,
        "fullcodeline": "gf_bs_write_u16(bs, ttxt->font_table->fonts[j].fontID);"
    },
    {
        "line": 23,
        "fullcodeline": "for (j=0; j<fount_count; j++) {"
    },
    {
        "line": 62,
        "fullcodeline": "u32 len = (u32) strlen(qt_fontname);"
    },
    {
        "line": 63,
        "fullcodeline": "gf_bs_write_u8(bs, len);"
    },
    {
        "line": 64,
        "fullcodeline": "gf_bs_write_data(bs, qt_fontname, len);"
    },
    {
        "line": 24,
        "fullcodeline": "size += 3;"
    },
    {
        "line": 66,
        "fullcodeline": "gf_bs_write_u8(bs, 0);"
    },
    {
        "line": 71,
        "fullcodeline": "u32 len = (u32) strlen(ttxt->font_table->fonts[j].fontName);"
    },
    {
        "line": 72,
        "fullcodeline": "gf_bs_write_u8(bs, len);"
    },
    {
        "line": 73,
        "fullcodeline": "gf_bs_write_data(bs, ttxt->font_table->fonts[j].fontName, len);"
    },
    {
        "line": 75,
        "fullcodeline": "gf_bs_write_u8(bs, 0);"
    },
    {
        "line": 26,
        "fullcodeline": "size += (u32) strlen(ttxt->font_table->fonts[j].fontName);"
    }
]