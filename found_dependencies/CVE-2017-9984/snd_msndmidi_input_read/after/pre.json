[
    {
        "line": 4,
        "fullcodeline": "struct snd_msndmidi *mpu = mpuv;"
    },
    {
        "line": 5,
        "fullcodeline": "void *pwMIDQData = mpu->dev->mappedbase + MIDQ_DATA_BUFF;"
    },
    {
        "line": 8,
        "fullcodeline": "spin_lock_irqsave(&mpu->input_lock, flags);"
    },
    {
        "line": 9,
        "fullcodeline": "head = readw(mpu->dev->MIDQ + JQS_wHead);"
    },
    {
        "line": 10,
        "fullcodeline": "tail = readw(mpu->dev->MIDQ + JQS_wTail);"
    },
    {
        "line": 11,
        "fullcodeline": "size = readw(mpu->dev->MIDQ + JQS_wSize);"
    },
    {
        "line": 24,
        "fullcodeline": "spin_unlock_irqrestore(&mpu->input_lock, flags);"
    },
    {
        "line": 12,
        "fullcodeline": "if (head > size || tail > size)"
    },
    {
        "line": 14,
        "fullcodeline": "while (head != tail) {"
    },
    {
        "line": 15,
        "fullcodeline": "unsigned char val = readw(pwMIDQData + 2 * head);"
    },
    {
        "line": 21,
        "fullcodeline": "writew(head, mpu->dev->MIDQ + JQS_wHead);"
    },
    {
        "line": 17,
        "fullcodeline": "if (test_bit(MSNDMIDI_MODE_BIT_INPUT_TRIGGER, &mpu->mode))"
    },
    {
        "line": 19,
        "fullcodeline": "if (++head > size)"
    },
    {
        "line": 18,
        "fullcodeline": "snd_rawmidi_receive(mpu->substream_input, &val, 1);"
    },
    {
        "line": 20,
        "fullcodeline": "head = 0;"
    }
]