[
    {
        "line": 6,
        "fullcodeline": "libecap::headerTransferEncoding.assignHostId(Http::HdrType::TRANSFER_ENCODING);"
    },
    {
        "line": 7,
        "fullcodeline": "libecap::headerReferer.assignHostId(Http::HdrType::REFERER);"
    },
    {
        "line": 8,
        "fullcodeline": "libecap::headerContentLength.assignHostId(Http::HdrType::CONTENT_LENGTH);"
    },
    {
        "line": 9,
        "fullcodeline": "libecap::headerVia.assignHostId(Http::HdrType::VIA);"
    },
    {
        "line": 13,
        "fullcodeline": "libecap::protocolHttp.assignHostId(AnyP::PROTO_HTTP);"
    },
    {
        "line": 14,
        "fullcodeline": "libecap::protocolHttps.assignHostId(AnyP::PROTO_HTTPS);"
    },
    {
        "line": 15,
        "fullcodeline": "libecap::protocolFtp.assignHostId(AnyP::PROTO_FTP);"
    },
    {
        "line": 16,
        "fullcodeline": "libecap::protocolWais.assignHostId(AnyP::PROTO_WAIS);"
    },
    {
        "line": 17,
        "fullcodeline": "libecap::protocolUrn.assignHostId(AnyP::PROTO_URN);"
    },
    {
        "line": 18,
        "fullcodeline": "libecap::protocolWhois.assignHostId(AnyP::PROTO_WHOIS);"
    },
    {
        "line": 19,
        "fullcodeline": "protocolCacheObj.assignHostId(AnyP::PROTO_CACHE_OBJECT);"
    },
    {
        "line": 20,
        "fullcodeline": "protocolIcp.assignHostId(AnyP::PROTO_ICP);"
    },
    {
        "line": 24,
        "fullcodeline": "protocolIcy.assignHostId(AnyP::PROTO_ICY);"
    },
    {
        "line": 25,
        "fullcodeline": "protocolUnknown.assignHostId(AnyP::PROTO_UNKNOWN);"
    },
    {
        "line": 28,
        "fullcodeline": "metaBypassable.assignHostId(1);"
    }
]