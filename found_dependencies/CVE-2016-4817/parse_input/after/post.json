[
    {
        "line": 4,
        "fullcodeline": "int perform_early_exit = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "if (conn->num_streams.pull.half_closed + conn->num_streams.push.half_closed != http2_max_concurrent_requests_per_connection)"
    },
    {
        "line": 10,
        "fullcodeline": "while (conn->state < H2O_HTTP2_CONN_STATE_IS_CLOSING && conn->sock->input->size != 0) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (!h2o_socket_is_reading(conn->sock))"
    },
    {
        "line": 35,
        "fullcodeline": "if (h2o_socket_is_reading(conn->sock))"
    },
    {
        "line": 7,
        "fullcodeline": "perform_early_exit = 1;"
    },
    {
        "line": 15,
        "fullcodeline": "const char *err_desc = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "ssize_t ret = conn->_read_expect(conn, (uint8_t *)conn->sock->input->bytes, conn->sock->input->size, &err_desc);"
    },
    {
        "line": 27,
        "fullcodeline": "h2o_buffer_consume(&conn->sock->input, ret);"
    },
    {
        "line": 31,
        "fullcodeline": "h2o_socket_read_start(conn->sock, on_read);"
    },
    {
        "line": 36,
        "fullcodeline": "h2o_socket_read_stop(conn->sock);"
    },
    {
        "line": 11,
        "fullcodeline": "if (perform_early_exit == 1 &&"
    },
    {
        "line": 17,
        "fullcodeline": "if (ret == H2O_HTTP2_ERROR_INCOMPLETE) {"
    },
    {
        "line": 12,
        "fullcodeline": "conn->num_streams.pull.half_closed + conn->num_streams.push.half_closed == http2_max_concurrent_requests_per_connection)"
    },
    {
        "line": 19,
        "fullcodeline": "} else if (ret < 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (ret != H2O_HTTP2_ERROR_PROTOCOL_CLOSE_IMMEDIATELY) {"
    },
    {
        "line": 24,
        "fullcodeline": "return close_connection(conn);"
    },
    {
        "line": 21,
        "fullcodeline": "enqueue_goaway(conn, (int)ret,"
    },
    {
        "line": 22,
        "fullcodeline": "err_desc != NULL ? (h2o_iovec_t){(char *)err_desc, strlen(err_desc)} : (h2o_iovec_t){});"
    }
]