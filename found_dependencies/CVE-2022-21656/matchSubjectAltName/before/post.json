[
    {
        "line": 5,
        "fullcodeline": "bssl::UniquePtr<GENERAL_NAMES> san_names("
    },
    {
        "line": 7,
        "fullcodeline": "if (san_names == nullptr) {"
    },
    {
        "line": 6,
        "fullcodeline": "static_cast<GENERAL_NAMES*>(X509_get_ext_d2i(cert, NID_subject_alt_name, nullptr, nullptr)));"
    },
    {
        "line": 11,
        "fullcodeline": "const std::string san = Utility::generalNameAsString(general_name);"
    },
    {
        "line": 14,
        "fullcodeline": "if (general_name->type == GEN_DNS &&"
    },
    {
        "line": 17,
        "fullcodeline": "? Utility::dnsNameMatch(config_san_matcher.matcher().exact(), absl::string_view(san))"
    },
    {
        "line": 18,
        "fullcodeline": ": config_san_matcher.match(san)) {"
    },
    {
        "line": 15,
        "fullcodeline": "config_san_matcher.matcher().match_pattern_case() =="
    }
]