[
    {
        "line": 19,
        "fullcodeline": "Envoy::Ssl::ClientValidationStatus validated ="
    },
    {
        "line": 39,
        "fullcodeline": "int validation_status = verify_trusted_ca_"
    },
    {
        "line": 20,
        "fullcodeline": "verifyCertificate(&leaf_cert,"
    },
    {
        "line": 43,
        "fullcodeline": "return allow_untrusted_certificate_ ? 1 : validation_status;"
    },
    {
        "line": 5,
        "fullcodeline": "int ret = X509_verify_cert(store_ctx);"
    },
    {
        "line": 21,
        "fullcodeline": "transport_socket_options != nullptr"
    },
    {
        "line": 40,
        "fullcodeline": "? validated != Envoy::Ssl::ClientValidationStatus::Failed"
    },
    {
        "line": 41,
        "fullcodeline": ": validated == Envoy::Ssl::ClientValidationStatus::Validated;"
    },
    {
        "line": 12,
        "fullcodeline": "if (ret <= 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "? transport_socket_options->verifySubjectAltNameListOverride()"
    },
    {
        "line": 23,
        "fullcodeline": ": std::vector<std::string>{},"
    },
    {
        "line": 27,
        "fullcodeline": "if (ssl_extended_info->certificateValidationStatus() =="
    },
    {
        "line": 7,
        "fullcodeline": "ssl_extended_info->setCertificateValidationStatus("
    },
    {
        "line": 14,
        "fullcodeline": "ENVOY_LOG(debug, \"{}\", Utility::getX509VerificationErrorInfo(store_ctx));"
    },
    {
        "line": 29,
        "fullcodeline": "ssl_extended_info->setCertificateValidationStatus(validated);"
    },
    {
        "line": 15,
        "fullcodeline": "return allow_untrusted_certificate_ ? 1 : ret;"
    },
    {
        "line": 8,
        "fullcodeline": "ret == 1 ? Envoy::Ssl::ClientValidationStatus::Validated"
    },
    {
        "line": 30,
        "fullcodeline": "} else if (validated != Envoy::Ssl::ClientValidationStatus::NotValidated) {"
    },
    {
        "line": 31,
        "fullcodeline": "ssl_extended_info->setCertificateValidationStatus(validated);"
    }
]