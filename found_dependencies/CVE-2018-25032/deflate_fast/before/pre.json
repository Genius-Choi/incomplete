[
    {
        "line": 87,
        "fullcodeline": "s->insert = s->strstart < MIN_MATCH-1 ? s->strstart : MIN_MATCH-1;"
    },
    {
        "line": 88,
        "fullcodeline": "if (flush == Z_FINISH) {"
    },
    {
        "line": 25,
        "fullcodeline": "hash_head = NIL;"
    },
    {
        "line": 14,
        "fullcodeline": "if (s->lookahead < MIN_LOOKAHEAD) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (s->lookahead >= MIN_MATCH) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (s->match_length >= MIN_MATCH) {"
    },
    {
        "line": 15,
        "fullcodeline": "fill_window(s);"
    },
    {
        "line": 27,
        "fullcodeline": "INSERT_STRING(s, s->strstart, hash_head);"
    },
    {
        "line": 33,
        "fullcodeline": "if (hash_head != NIL && s->strstart - hash_head <= MAX_DIST(s)) {"
    },
    {
        "line": 38,
        "fullcodeline": "s->match_length = longest_match (s, hash_head);"
    },
    {
        "line": 42,
        "fullcodeline": "check_match(s, s->strstart, s->match_start, s->match_length);"
    },
    {
        "line": 44,
        "fullcodeline": "_tr_tally_dist(s, s->strstart - s->match_start,"
    },
    {
        "line": 47,
        "fullcodeline": "s->lookahead -= s->match_length;"
    },
    {
        "line": 16,
        "fullcodeline": "if (s->lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (s->lookahead == 0) break; /* flush the current block */"
    },
    {
        "line": 45,
        "fullcodeline": "s->match_length - MIN_MATCH, bflush);"
    },
    {
        "line": 81,
        "fullcodeline": "_tr_tally_lit (s, s->window[s->strstart], bflush);"
    },
    {
        "line": 82,
        "fullcodeline": "s->lookahead--;"
    },
    {
        "line": 83,
        "fullcodeline": "s->strstart++;"
    },
    {
        "line": 53,
        "fullcodeline": "if (s->match_length <= s->max_insert_length &&"
    },
    {
        "line": 54,
        "fullcodeline": "s->lookahead >= MIN_MATCH) {"
    },
    {
        "line": 55,
        "fullcodeline": "s->match_length--; /* string at strstart already in table */"
    },
    {
        "line": 63,
        "fullcodeline": "s->strstart++;"
    },
    {
        "line": 80,
        "fullcodeline": "Tracevv((stderr,\"%c\", s->window[s->strstart]));"
    },
    {
        "line": 67,
        "fullcodeline": "s->strstart += s->match_length;"
    },
    {
        "line": 68,
        "fullcodeline": "s->match_length = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "s->ins_h = s->window[s->strstart];"
    },
    {
        "line": 70,
        "fullcodeline": "UPDATE_HASH(s, s->ins_h, s->window[s->strstart+1]);"
    },
    {
        "line": 57,
        "fullcodeline": "s->strstart++;"
    },
    {
        "line": 58,
        "fullcodeline": "INSERT_STRING(s, s->strstart, hash_head);"
    },
    {
        "line": 62,
        "fullcodeline": "} while (--s->match_length != 0);"
    }
]