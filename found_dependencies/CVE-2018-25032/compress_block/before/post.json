[
    {
        "line": 8,
        "fullcodeline": "unsigned lx = 0;    /* running index in l_buf */"
    },
    {
        "line": 45,
        "fullcodeline": "send_code(s, END_BLOCK, ltree);"
    },
    {
        "line": 12,
        "fullcodeline": "if (s->last_lit != 0) do {"
    },
    {
        "line": 43,
        "fullcodeline": "} while (lx < s->last_lit);"
    },
    {
        "line": 40,
        "fullcodeline": "Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,"
    },
    {
        "line": 15,
        "fullcodeline": "if (dist == 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "lc = s->l_buf[lx++];"
    },
    {
        "line": 16,
        "fullcodeline": "send_code(s, lc, ltree); /* send a literal byte */"
    },
    {
        "line": 17,
        "fullcodeline": "Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));"
    },
    {
        "line": 21,
        "fullcodeline": "send_code(s, code+LITERALS+1, ltree); /* send the length code */"
    },
    {
        "line": 27,
        "fullcodeline": "dist--; /* dist is now the match distance - 1 */"
    },
    {
        "line": 28,
        "fullcodeline": "code = d_code(dist);"
    },
    {
        "line": 29,
        "fullcodeline": "Assert (code < D_CODES, \"bad d_code\");"
    },
    {
        "line": 31,
        "fullcodeline": "send_code(s, code, dtree);       /* send the distance code */"
    },
    {
        "line": 23,
        "fullcodeline": "if (extra != 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (extra != 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "lc -= base_length[code];"
    },
    {
        "line": 25,
        "fullcodeline": "send_bits(s, lc, extra);       /* send the extra length bits */"
    },
    {
        "line": 34,
        "fullcodeline": "dist -= (unsigned)base_dist[code];"
    },
    {
        "line": 35,
        "fullcodeline": "send_bits(s, dist, extra);   /* send the extra distance bits */"
    }
]