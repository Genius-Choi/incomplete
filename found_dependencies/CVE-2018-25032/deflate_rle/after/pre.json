[
    {
        "line": 60,
        "fullcodeline": "s->insert = 0;"
    },
    {
        "line": 61,
        "fullcodeline": "if (flush == Z_FINISH) {"
    },
    {
        "line": 23,
        "fullcodeline": "s->match_length = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "if (s->lookahead <= MAX_MATCH) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (s->match_length >= MIN_MATCH) {"
    },
    {
        "line": 15,
        "fullcodeline": "fill_window(s);"
    },
    {
        "line": 24,
        "fullcodeline": "if (s->lookahead >= MIN_MATCH && s->strstart > 0) {"
    },
    {
        "line": 25,
        "fullcodeline": "scan = s->window + s->strstart - 1;"
    },
    {
        "line": 26,
        "fullcodeline": "prev = *scan;"
    },
    {
        "line": 44,
        "fullcodeline": "check_match(s, s->strstart, s->strstart - 1, s->match_length);"
    },
    {
        "line": 46,
        "fullcodeline": "_tr_tally_dist(s, 1, s->match_length - MIN_MATCH, bflush);"
    },
    {
        "line": 48,
        "fullcodeline": "s->lookahead -= s->match_length;"
    },
    {
        "line": 49,
        "fullcodeline": "s->strstart += s->match_length;"
    },
    {
        "line": 50,
        "fullcodeline": "s->match_length = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "if (s->lookahead <= MAX_MATCH && flush == Z_NO_FLUSH) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (s->lookahead == 0) break; /* flush the current block */"
    },
    {
        "line": 39,
        "fullcodeline": "Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");"
    },
    {
        "line": 54,
        "fullcodeline": "_tr_tally_lit (s, s->window[s->strstart], bflush);"
    },
    {
        "line": 55,
        "fullcodeline": "s->lookahead--;"
    },
    {
        "line": 56,
        "fullcodeline": "s->strstart++;"
    },
    {
        "line": 27,
        "fullcodeline": "if (prev == *++scan && prev == *++scan && prev == *++scan) {"
    },
    {
        "line": 28,
        "fullcodeline": "strend = s->window + s->strstart + MAX_MATCH;"
    },
    {
        "line": 35,
        "fullcodeline": "s->match_length = MAX_MATCH - (uInt)(strend - scan);"
    },
    {
        "line": 53,
        "fullcodeline": "Tracevv((stderr,\"%c\", s->window[s->strstart]));"
    },
    {
        "line": 36,
        "fullcodeline": "if (s->match_length > s->lookahead)"
    },
    {
        "line": 30,
        "fullcodeline": "} while (prev == *++scan && prev == *++scan &&"
    },
    {
        "line": 34,
        "fullcodeline": "scan < strend);"
    },
    {
        "line": 37,
        "fullcodeline": "s->match_length = s->lookahead;"
    },
    {
        "line": 33,
        "fullcodeline": "prev == *++scan && prev == *++scan &&"
    },
    {
        "line": 32,
        "fullcodeline": "prev == *++scan && prev == *++scan &&"
    },
    {
        "line": 31,
        "fullcodeline": "prev == *++scan && prev == *++scan &&"
    }
]