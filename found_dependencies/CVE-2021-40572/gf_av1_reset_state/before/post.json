[
    {
        "line": 20,
        "fullcodeline": "l1 = state->frame_state.frame_obus;"
    },
    {
        "line": 21,
        "fullcodeline": "l2 = state->frame_state.header_obus;"
    },
    {
        "line": 22,
        "fullcodeline": "memset(&state->frame_state, 0, sizeof(AV1StateFrame));"
    },
    {
        "line": 23,
        "fullcodeline": "state->frame_state.is_first_frame = GF_TRUE;"
    },
    {
        "line": 26,
        "fullcodeline": "gf_list_del(l1);"
    },
    {
        "line": 27,
        "fullcodeline": "gf_list_del(l2);"
    },
    {
        "line": 35,
        "fullcodeline": "state->bs = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "while (gf_list_count(state->frame_state.header_obus)) {"
    },
    {
        "line": 14,
        "fullcodeline": "while (gf_list_count(state->frame_state.frame_obus)) {"
    },
    {
        "line": 38,
        "fullcodeline": "state->frame_state.frame_obus = l1;"
    },
    {
        "line": 39,
        "fullcodeline": "state->frame_state.header_obus = l2;"
    },
    {
        "line": 7,
        "fullcodeline": "GF_AV1_OBUArrayEntry *a = (GF_AV1_OBUArrayEntry*)gf_list_pop_back(state->frame_state.header_obus);"
    },
    {
        "line": 9,
        "fullcodeline": "gf_free(a);"
    },
    {
        "line": 15,
        "fullcodeline": "GF_AV1_OBUArrayEntry *a = (GF_AV1_OBUArrayEntry*)gf_list_pop_back(state->frame_state.frame_obus);"
    },
    {
        "line": 17,
        "fullcodeline": "gf_free(a);"
    },
    {
        "line": 33,
        "fullcodeline": "gf_bs_del(state->bs);"
    },
    {
        "line": 29,
        "fullcodeline": "if (gf_bs_get_position(state->bs)) {"
    },
    {
        "line": 41,
        "fullcodeline": "gf_bs_seek(state->bs, 0);"
    },
    {
        "line": 8,
        "fullcodeline": "if (a->obu) gf_free(a->obu);"
    },
    {
        "line": 16,
        "fullcodeline": "if (a->obu) gf_free(a->obu);"
    },
    {
        "line": 31,
        "fullcodeline": "gf_bs_get_content_no_truncate(state->bs, &state->frame_obus, &size, &state->frame_obus_alloc);"
    }
]