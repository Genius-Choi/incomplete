[
    {
        "line": 3,
        "fullcodeline": "struct perf_event *sibling, *leader = event->group_leader;"
    },
    {
        "line": 5,
        "fullcodeline": "DECLARE_BITMAP(fake_used_mask, ARMPMU_MAX_HWEVENTS);"
    },
    {
        "line": 11,
        "fullcodeline": "memset(fake_used_mask, 0, sizeof(fake_used_mask));"
    },
    {
        "line": 12,
        "fullcodeline": "fake_pmu.used_mask = fake_used_mask;"
    },
    {
        "line": 17,
        "fullcodeline": "list_for_each_entry(sibling, &leader->sibling_list, group_entry) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (!validate_event(event->pmu, &fake_pmu, leader))"
    },
    {
        "line": 22,
        "fullcodeline": "if (!validate_event(event->pmu, &fake_pmu, event))"
    },
    {
        "line": 18,
        "fullcodeline": "if (!validate_event(event->pmu, &fake_pmu, sibling))"
    },
    {
        "line": 15,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 23,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 19,
        "fullcodeline": "return -EINVAL;"
    }
]