[
    {
        "line": 3,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "::decode(cephx_header, indata);"
    },
    {
        "line": 167,
        "fullcodeline": "ldout(cct, 10) << \"handle_request unknown op \" << cephx_header.request_type << dendl;"
    },
    {
        "line": 12,
        "fullcodeline": "ldout(cct, 10) << \"handle_request get_auth_session_key for \" << entity_name << dendl;"
    },
    {
        "line": 15,
        "fullcodeline": "::decode(req, indata);"
    },
    {
        "line": 31,
        "fullcodeline": "cephx_calc_client_server_challenge(cct, secret, server_challenge,"
    },
    {
        "line": 39,
        "fullcodeline": "ldout(cct, 20) << \" checking key: req.key=\" << hex << req.key"
    },
    {
        "line": 50,
        "fullcodeline": "bool should_enc_ticket = false;"
    },
    {
        "line": 66,
        "fullcodeline": "info.ticket.init_timestamps(ceph_clock_now(), cct->_conf->auth_mon_ticket_ttl);"
    },
    {
        "line": 67,
        "fullcodeline": "info.ticket.name = entity_name;"
    },
    {
        "line": 68,
        "fullcodeline": "info.ticket.global_id = global_id;"
    },
    {
        "line": 69,
        "fullcodeline": "info.ticket.auid = eauth.auid;"
    },
    {
        "line": 70,
        "fullcodeline": "info.validity += cct->_conf->auth_mon_ticket_ttl;"
    },
    {
        "line": 74,
        "fullcodeline": "key_server->generate_secret(session_key);"
    },
    {
        "line": 76,
        "fullcodeline": "info.session_key = session_key;"
    },
    {
        "line": 77,
        "fullcodeline": "info.service_id = CEPH_ENTITY_TYPE_AUTH;"
    },
    {
        "line": 84,
        "fullcodeline": "vector<CephXSessionAuthInfo> info_vec;"
    },
    {
        "line": 85,
        "fullcodeline": "info_vec.push_back(info);"
    },
    {
        "line": 87,
        "fullcodeline": "build_cephx_response_header(cephx_header.request_type, 0, result_bl);"
    },
    {
        "line": 108,
        "fullcodeline": "ldout(cct, 10) << \"handle_request get_principal_session_key\" << dendl;"
    },
    {
        "line": 118,
        "fullcodeline": "::decode(ticket_req, indata);"
    },
    {
        "line": 119,
        "fullcodeline": "ldout(cct, 10) << \" ticket_req.keys = \" << ticket_req.keys << dendl;"
    },
    {
        "line": 121,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 122,
        "fullcodeline": "vector<CephXSessionAuthInfo> info_vec;"
    },
    {
        "line": 123,
        "fullcodeline": "int found_services = 0;"
    },
    {
        "line": 124,
        "fullcodeline": "int service_err = 0;"
    },
    {
        "line": 150,
        "fullcodeline": "build_cephx_response_header(cephx_header.request_type, ret, result_bl);"
    },
    {
        "line": 151,
        "fullcodeline": "cephx_build_service_ticket_reply(cct, auth_ticket_info.session_key, info_vec, false, no_key, result_bl);"
    },
    {
        "line": 157,
        "fullcodeline": "ldout(cct, 10) << \"handle_request getting rotating secret for \" << entity_name << dendl;"
    },
    {
        "line": 158,
        "fullcodeline": "build_cephx_response_header(cephx_header.request_type, 0, result_bl);"
    },
    {
        "line": 168,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 18,
        "fullcodeline": "if (!key_server->get_secret(entity_name, secret)) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (!server_challenge) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (!error.empty()) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (req.key != expected_key) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (! key_server->get_auth(entity_name, eauth)) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (cephx_decode_ticket(cct, key_server, CEPH_ENTITY_TYPE_AUTH,"
    },
    {
        "line": 78,
        "fullcodeline": "if (!key_server->get_service_secret(CEPH_ENTITY_TYPE_AUTH, info.service_secret, info.secret_id)) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (!cephx_build_service_ticket_reply(cct, eauth.key, info_vec, should_enc_ticket,"
    },
    {
        "line": 93,
        "fullcodeline": "if (!key_server->get_service_caps(entity_name, CEPH_ENTITY_TYPE_MON, caps)) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (!cephx_verify_authorizer(cct, key_server, indata, auth_ticket_info, tmp_bl)) {"
    },
    {
        "line": 125,
        "fullcodeline": "for (uint32_t service_id = 1; service_id <= ticket_req.keys;"
    },
    {
        "line": 126,
        "fullcodeline": "service_id <<= 1) {"
    },
    {
        "line": 145,
        "fullcodeline": "if (!found_services && service_err) {"
    },
    {
        "line": 159,
        "fullcodeline": "if (!key_server->get_rotating_encrypted(entity_name, result_bl)) {"
    },
    {
        "line": 19,
        "fullcodeline": "ldout(cct, 0) << \"couldn't find entity name: \" << entity_name << dendl;"
    },
    {
        "line": 20,
        "fullcodeline": "ret = -EPERM;"
    },
    {
        "line": 25,
        "fullcodeline": "ret = -EPERM;"
    },
    {
        "line": 34,
        "fullcodeline": "ldout(cct, 0) << \" cephx_calc_client_server_challenge error: \" << error << dendl;"
    },
    {
        "line": 35,
        "fullcodeline": "ret = -EPERM;"
    },
    {
        "line": 42,
        "fullcodeline": "ldout(cct, 0) << \" unexpected key: req.key=\" << hex << req.key"
    },
    {
        "line": 44,
        "fullcodeline": "ret = -EPERM;"
    },
    {
        "line": 54,
        "fullcodeline": "ret = -EPERM;"
    },
    {
        "line": 62,
        "fullcodeline": "ldout(cct, 10) << \"decoded old_ticket with global_id=\" << global_id << dendl;"
    },
    {
        "line": 63,
        "fullcodeline": "should_enc_ticket = true;"
    },
    {
        "line": 72,
        "fullcodeline": "if (auid) *auid = eauth.auid;"
    },
    {
        "line": 79,
        "fullcodeline": "ldout(cct, 0) << \" could not get service secret for auth subsystem\" << dendl;"
    },
    {
        "line": 80,
        "fullcodeline": "ret = -EIO;"
    },
    {
        "line": 90,
        "fullcodeline": "ret = -EIO;"
    },
    {
        "line": 94,
        "fullcodeline": "ldout(cct, 0) << \" could not get mon caps for \" << entity_name << dendl;"
    },
    {
        "line": 95,
        "fullcodeline": "ret = -EACCES;"
    },
    {
        "line": 113,
        "fullcodeline": "ret = -EPERM;"
    },
    {
        "line": 146,
        "fullcodeline": "ldout(cct, 10) << __func__ << \" did not find any service keys\" << dendl;"
    },
    {
        "line": 147,
        "fullcodeline": "ret = service_err;"
    },
    {
        "line": 160,
        "fullcodeline": "ret = -EPERM;"
    },
    {
        "line": 97,
        "fullcodeline": "char *caps_str = caps.caps.c_str();"
    },
    {
        "line": 127,
        "fullcodeline": "if (ticket_req.keys & service_id) {"
    },
    {
        "line": 98,
        "fullcodeline": "if (!caps_str || !caps_str[0]) {"
    },
    {
        "line": 128,
        "fullcodeline": "ldout(cct, 10) << \" adding key for service \""
    },
    {
        "line": 131,
        "fullcodeline": "int r = key_server->build_session_auth_info(service_id,"
    },
    {
        "line": 140,
        "fullcodeline": "info.validity += cct->_conf->auth_service_ticket_ttl;"
    },
    {
        "line": 141,
        "fullcodeline": "info_vec.push_back(info);"
    },
    {
        "line": 142,
        "fullcodeline": "++found_services;"
    },
    {
        "line": 99,
        "fullcodeline": "ldout(cct,0) << \"mon caps null for \" << entity_name << dendl;"
    },
    {
        "line": 100,
        "fullcodeline": "ret = -EACCES;"
    },
    {
        "line": 134,
        "fullcodeline": "if (r < 0) {"
    },
    {
        "line": 129,
        "fullcodeline": "<< ceph_entity_type_name(service_id) << dendl;"
    },
    {
        "line": 135,
        "fullcodeline": "ldout(cct, 10) << \"   missing key for service \""
    },
    {
        "line": 137,
        "fullcodeline": "service_err = r;"
    },
    {
        "line": 136,
        "fullcodeline": "<< ceph_entity_type_name(service_id) << dendl;"
    }
]