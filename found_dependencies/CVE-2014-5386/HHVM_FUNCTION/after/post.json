[
    {
        "line": 8,
        "fullcodeline": "int n = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "char *iv = (char*)calloc(size + 1, 1);"
    },
    {
        "line": 2,
        "fullcodeline": "if (size <= 0 || size >= INT_MAX) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (source == RANDOM || source == URANDOM) {"
    },
    {
        "line": 35,
        "fullcodeline": "return String(iv, n, AttachString);"
    },
    {
        "line": 3,
        "fullcodeline": "raise_warning(\"Can not create an IV with a size of less than 1 or \""
    },
    {
        "line": 11,
        "fullcodeline": "int fd = open(source == RANDOM ? \"/dev/random\" : \"/dev/urandom\", O_RDONLY);"
    },
    {
        "line": 21,
        "fullcodeline": "n = read_bytes;"
    },
    {
        "line": 22,
        "fullcodeline": "close(fd);"
    },
    {
        "line": 12,
        "fullcodeline": "if (fd < 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "for (read_bytes = 0; read_bytes < size && n >= 0; read_bytes += n) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (n < size) {"
    },
    {
        "line": 29,
        "fullcodeline": "n = size;"
    },
    {
        "line": 13,
        "fullcodeline": "free(iv);"
    },
    {
        "line": 14,
        "fullcodeline": "raise_warning(\"Cannot open source device\");"
    },
    {
        "line": 19,
        "fullcodeline": "n = read(fd, iv + read_bytes, size - read_bytes);"
    },
    {
        "line": 24,
        "fullcodeline": "free(iv);"
    },
    {
        "line": 25,
        "fullcodeline": "raise_warning(\"Could not gather sufficient random data\");"
    },
    {
        "line": 32,
        "fullcodeline": "iv[--size] = (char)f_rand(0, 255);"
    }
]