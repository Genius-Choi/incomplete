[
    {
        "line": 3,
        "fullcodeline": "bos_token = \"\""
    },
    {
        "line": 4,
        "fullcodeline": "eos_token = \"\""
    },
    {
        "line": 32,
        "fullcodeline": "def raise_exception(message):"
    },
    {
        "line": 36,
        "fullcodeline": "env = Environment()"
    },
    {
        "line": 37,
        "fullcodeline": "env.globals[\"raise_exception\"] = raise_exception"
    },
    {
        "line": 43,
        "fullcodeline": "def _is_system_in_template():"
    },
    {
        "line": 5,
        "fullcodeline": "if chat_template is None:"
    },
    {
        "line": 7,
        "fullcodeline": "def _get_tokenizer_config(hf_model_name):"
    },
    {
        "line": 20,
        "fullcodeline": "tokenizer_config = _get_tokenizer_config(model)"
    },
    {
        "line": 27,
        "fullcodeline": "tokenizer_config = tokenizer_config[\"tokenizer\"]"
    },
    {
        "line": 28,
        "fullcodeline": "bos_token = tokenizer_config[\"bos_token\"]"
    },
    {
        "line": 29,
        "fullcodeline": "eos_token = tokenizer_config[\"eos_token\"]"
    },
    {
        "line": 30,
        "fullcodeline": "chat_template = tokenizer_config[\"chat_template\"]"
    },
    {
        "line": 39,
        "fullcodeline": "template = env.from_string(chat_template)"
    },
    {
        "line": 22,
        "fullcodeline": "tokenizer_config[\"status\"] == \"failure\""
    },
    {
        "line": 59,
        "fullcodeline": "if _is_system_in_template():"
    },
    {
        "line": 23,
        "fullcodeline": "or \"chat_template\" not in tokenizer_config[\"tokenizer\"]"
    },
    {
        "line": 25,
        "fullcodeline": "raise Exception(\"No chat template found\")"
    },
    {
        "line": 41,
        "fullcodeline": "raise e"
    },
    {
        "line": 60,
        "fullcodeline": "rendered_text = template.render("
    },
    {
        "line": 101,
        "fullcodeline": "raise Exception(f\"Error rendering template - {str(e)}\")"
    },
    {
        "line": 66,
        "fullcodeline": "reformatted_messages = []"
    },
    {
        "line": 74,
        "fullcodeline": "rendered_text = template.render("
    },
    {
        "line": 67,
        "fullcodeline": "for message in messages:"
    },
    {
        "line": 80,
        "fullcodeline": "if \"Conversation roles must alternate user/assistant\" in str(e):"
    },
    {
        "line": 68,
        "fullcodeline": "if message[\"role\"] == \"system\":"
    },
    {
        "line": 82,
        "fullcodeline": "new_messages = []"
    },
    {
        "line": 95,
        "fullcodeline": "new_messages.append(reformatted_messages[-1])"
    },
    {
        "line": 96,
        "fullcodeline": "rendered_text = template.render("
    },
    {
        "line": 69,
        "fullcodeline": "reformatted_messages.append("
    },
    {
        "line": 73,
        "fullcodeline": "reformatted_messages.append(message)"
    },
    {
        "line": 83,
        "fullcodeline": "for i in range(len(reformatted_messages) - 1):"
    },
    {
        "line": 70,
        "fullcodeline": "{\"role\": \"user\", \"content\": message[\"content\"]}"
    },
    {
        "line": 84,
        "fullcodeline": "new_messages.append(reformatted_messages[i])"
    },
    {
        "line": 86,
        "fullcodeline": "reformatted_messages[i][\"role\"]"
    },
    {
        "line": 89,
        "fullcodeline": "if reformatted_messages[i][\"role\"] == \"user\":"
    },
    {
        "line": 87,
        "fullcodeline": "== reformatted_messages[i + 1][\"role\"]"
    },
    {
        "line": 90,
        "fullcodeline": "new_messages.append("
    },
    {
        "line": 94,
        "fullcodeline": "new_messages.append({\"role\": \"user\", \"content\": \"\"})"
    },
    {
        "line": 91,
        "fullcodeline": "{\"role\": \"assistant\", \"content\": \"\"}"
    }
]