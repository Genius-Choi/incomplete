[
    {
        "line": 11,
        "fullcodeline": "for (compno = 0; compno < s->ncomponents; compno++) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (s->cdef[0] < 0) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (s->precision <= 8) {"
    },
    {
        "line": 12,
        "fullcodeline": "Jpeg2000Component *comp     = tile->comp + compno;"
    },
    {
        "line": 13,
        "fullcodeline": "Jpeg2000CodingStyle *codsty = tile->codsty + compno;"
    },
    {
        "line": 57,
        "fullcodeline": "ff_dwt_decode(&comp->dwt, codsty->transform == FF_DWT97 ? (void*)comp->f_data : (void*)comp->i_data);"
    },
    {
        "line": 62,
        "fullcodeline": "mct_decode(s, tile);"
    },
    {
        "line": 16,
        "fullcodeline": "for (reslevelno = 0; reslevelno < codsty->nreslevels2decode; reslevelno++) {"
    },
    {
        "line": 65,
        "fullcodeline": "for (x = 0; x < s->ncomponents; x++)"
    },
    {
        "line": 66,
        "fullcodeline": "s->cdef[x] = x + 1;"
    },
    {
        "line": 67,
        "fullcodeline": "if ((s->ncomponents & 1) == 0)"
    },
    {
        "line": 72,
        "fullcodeline": "for (compno = 0; compno < s->ncomponents; compno++) {"
    },
    {
        "line": 17,
        "fullcodeline": "Jpeg2000ResLevel *rlevel = comp->reslevel + reslevelno;"
    },
    {
        "line": 68,
        "fullcodeline": "s->cdef[s->ncomponents-1] = 0;"
    },
    {
        "line": 73,
        "fullcodeline": "Jpeg2000Component *comp = tile->comp + compno;"
    },
    {
        "line": 74,
        "fullcodeline": "Jpeg2000CodingStyle *codsty = tile->codsty + compno;"
    },
    {
        "line": 75,
        "fullcodeline": "float *datap = comp->f_data;"
    },
    {
        "line": 76,
        "fullcodeline": "int32_t *i_datap = comp->i_data;"
    },
    {
        "line": 78,
        "fullcodeline": "int w = tile->comp[compno].coord[0][1] - s->image_offset_x;"
    },
    {
        "line": 79,
        "fullcodeline": "int planar = !!picture->data[2];"
    },
    {
        "line": 80,
        "fullcodeline": "int pixelsize = planar ? 1 : s->ncomponents;"
    },
    {
        "line": 81,
        "fullcodeline": "int plane = 0;"
    },
    {
        "line": 87,
        "fullcodeline": "y    = tile->comp[compno].coord[1][0] - s->image_offset_y;"
    },
    {
        "line": 88,
        "fullcodeline": "line = picture->data[plane] + y / s->cdy[compno] * picture->linesize[plane];"
    },
    {
        "line": 118,
        "fullcodeline": "for (compno = 0; compno < s->ncomponents; compno++) {"
    },
    {
        "line": 19,
        "fullcodeline": "for (bandno = 0; bandno < rlevel->nbands; bandno++) {"
    },
    {
        "line": 89,
        "fullcodeline": "for (; y < tile->comp[compno].coord[1][1] - s->image_offset_y; y += s->cdy[compno]) {"
    },
    {
        "line": 119,
        "fullcodeline": "Jpeg2000Component *comp = tile->comp + compno;"
    },
    {
        "line": 120,
        "fullcodeline": "Jpeg2000CodingStyle *codsty = tile->codsty + compno;"
    },
    {
        "line": 121,
        "fullcodeline": "float *datap = comp->f_data;"
    },
    {
        "line": 122,
        "fullcodeline": "int32_t *i_datap = comp->i_data;"
    },
    {
        "line": 125,
        "fullcodeline": "int w = tile->comp[compno].coord[0][1] - s->image_offset_x;"
    },
    {
        "line": 126,
        "fullcodeline": "int planar = !!picture->data[2];"
    },
    {
        "line": 127,
        "fullcodeline": "int pixelsize = planar ? 1 : s->ncomponents;"
    },
    {
        "line": 128,
        "fullcodeline": "int plane = 0;"
    },
    {
        "line": 133,
        "fullcodeline": "y     = tile->comp[compno].coord[1][0] - s->image_offset_y;"
    },
    {
        "line": 134,
        "fullcodeline": "linel = (uint16_t *)picture->data[plane] + y / s->cdy[compno] * (picture->linesize[plane] >> 1);"
    },
    {
        "line": 21,
        "fullcodeline": "Jpeg2000Band *band = rlevel->band + bandno;"
    },
    {
        "line": 22,
        "fullcodeline": "int cblkno = 0, bandpos;"
    },
    {
        "line": 24,
        "fullcodeline": "bandpos = bandno + (reslevelno > 0);"
    },
    {
        "line": 30,
        "fullcodeline": "nb_precincts = rlevel->num_precincts_x * rlevel->num_precincts_y;"
    },
    {
        "line": 84,
        "fullcodeline": "plane = s->cdef[compno] ? s->cdef[compno]-1 : (s->ncomponents-1);"
    },
    {
        "line": 92,
        "fullcodeline": "x   = tile->comp[compno].coord[0][0] - s->image_offset_x;"
    },
    {
        "line": 93,
        "fullcodeline": "dst = line + x / s->cdx[compno] * pixelsize + compno*!planar;"
    },
    {
        "line": 114,
        "fullcodeline": "line += picture->linesize[plane];"
    },
    {
        "line": 135,
        "fullcodeline": "for (; y < tile->comp[compno].coord[1][1] - s->image_offset_y; y += s->cdy[compno]) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (band->coord[0][0] == band->coord[0][1] ||"
    },
    {
        "line": 32,
        "fullcodeline": "for (precno = 0; precno < nb_precincts; precno++) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (codsty->transform == FF_DWT97) {"
    },
    {
        "line": 131,
        "fullcodeline": "plane = s->cdef[compno] ? s->cdef[compno]-1 : (s->ncomponents-1);"
    },
    {
        "line": 138,
        "fullcodeline": "x   = tile->comp[compno].coord[0][0] - s->image_offset_x;"
    },
    {
        "line": 139,
        "fullcodeline": "dst = linel + (x / s->cdx[compno] * pixelsize + compno*!planar);"
    },
    {
        "line": 161,
        "fullcodeline": "linel += picture->linesize[plane] >> 1;"
    },
    {
        "line": 33,
        "fullcodeline": "Jpeg2000Prec *prec = band->prec + precno;"
    },
    {
        "line": 140,
        "fullcodeline": "if (codsty->transform == FF_DWT97) {"
    },
    {
        "line": 36,
        "fullcodeline": "for (cblkno = 0; cblkno < prec->nb_codeblocks_width * prec->nb_codeblocks_height; cblkno++) {"
    },
    {
        "line": 96,
        "fullcodeline": "for (; x < w; x += s->cdx[compno]) {"
    },
    {
        "line": 38,
        "fullcodeline": "Jpeg2000Cblk *cblk = prec->cblk + cblkno;"
    },
    {
        "line": 39,
        "fullcodeline": "decode_cblk(s, codsty, &t1, cblk,"
    },
    {
        "line": 44,
        "fullcodeline": "x = cblk->coord[0][0];"
    },
    {
        "line": 45,
        "fullcodeline": "y = cblk->coord[1][0];"
    },
    {
        "line": 97,
        "fullcodeline": "int val = lrintf(*datap) + (1 << (cbps - 1));"
    },
    {
        "line": 99,
        "fullcodeline": "val = av_clip(val, 0, (1 << cbps) - 1);"
    },
    {
        "line": 100,
        "fullcodeline": "*dst = val << (8 - cbps);"
    },
    {
        "line": 101,
        "fullcodeline": "datap++;"
    },
    {
        "line": 102,
        "fullcodeline": "dst += pixelsize;"
    },
    {
        "line": 105,
        "fullcodeline": "for (; x < w; x += s->cdx[compno]) {"
    },
    {
        "line": 141,
        "fullcodeline": "for (; x < w; x += s-> cdx[compno]) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (codsty->transform == FF_DWT97)"
    },
    {
        "line": 106,
        "fullcodeline": "int val = *i_datap + (1 << (cbps - 1));"
    },
    {
        "line": 108,
        "fullcodeline": "val = av_clip(val, 0, (1 << cbps) - 1);"
    },
    {
        "line": 109,
        "fullcodeline": "*dst = val << (8 - cbps);"
    },
    {
        "line": 110,
        "fullcodeline": "i_datap++;"
    },
    {
        "line": 111,
        "fullcodeline": "dst += pixelsize;"
    },
    {
        "line": 142,
        "fullcodeline": "int  val = lrintf(*datap) + (1 << (cbps - 1));"
    },
    {
        "line": 144,
        "fullcodeline": "val = av_clip(val, 0, (1 << cbps) - 1);"
    },
    {
        "line": 146,
        "fullcodeline": "*dst = val << (16 - cbps);"
    },
    {
        "line": 147,
        "fullcodeline": "datap++;"
    },
    {
        "line": 148,
        "fullcodeline": "dst += pixelsize;"
    },
    {
        "line": 151,
        "fullcodeline": "for (; x < w; x += s-> cdx[compno]) {"
    },
    {
        "line": 48,
        "fullcodeline": "dequantization_float(x, y, cblk, comp, &t1, band);"
    },
    {
        "line": 152,
        "fullcodeline": "int val = *i_datap + (1 << (cbps - 1));"
    },
    {
        "line": 154,
        "fullcodeline": "val = av_clip(val, 0, (1 << cbps) - 1);"
    },
    {
        "line": 156,
        "fullcodeline": "*dst = val << (16 - cbps);"
    },
    {
        "line": 157,
        "fullcodeline": "i_datap++;"
    },
    {
        "line": 158,
        "fullcodeline": "dst += pixelsize;"
    },
    {
        "line": 50,
        "fullcodeline": "dequantization_int(x, y, cblk, comp, &t1, band);"
    }
]