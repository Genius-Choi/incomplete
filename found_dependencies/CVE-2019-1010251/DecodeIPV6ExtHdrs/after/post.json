[
    {
        "line": 3,
        "fullcodeline": "SCEnter();"
    },
    {
        "line": 5,
        "fullcodeline": "uint8_t *orig_pkt = pkt;"
    },
    {
        "line": 6,
        "fullcodeline": "uint8_t nh = IPV6_GET_NH(p); /* careful, 0 is actually a real type */"
    },
    {
        "line": 7,
        "fullcodeline": "uint16_t hdrextlen = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "uint16_t plen = len;"
    },
    {
        "line": 9,
        "fullcodeline": "char dstopts = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "char exthdr_fh_done = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "int hh = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "int rh = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int eh = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "int ah = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "if (nh == IPPROTO_NONE) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (plen < 2) { /* minimal needed in a hdr */"
    },
    {
        "line": 27,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_TRUNC_EXTHDR);"
    },
    {
        "line": 34,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 35,
        "fullcodeline": "DecodeTCP(tv, dtv, p, pkt, plen, pq);"
    },
    {
        "line": 39,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 40,
        "fullcodeline": "DecodeUDP(tv, dtv, p, pkt, plen, pq);"
    },
    {
        "line": 44,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 45,
        "fullcodeline": "DecodeICMPV6(tv, dtv, p, pkt, plen, pq);"
    },
    {
        "line": 49,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 50,
        "fullcodeline": "DecodeSCTP(tv, dtv, p, pkt, plen, pq);"
    },
    {
        "line": 54,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 55,
        "fullcodeline": "hdrextlen = 8 + (*(pkt+1) * 8);  /* 8 bytes + length in 8 octet units */"
    },
    {
        "line": 74,
        "fullcodeline": "rh = 1;"
    },
    {
        "line": 75,
        "fullcodeline": "IPV6_EXTHDR_SET_RH(p);"
    },
    {
        "line": 81,
        "fullcodeline": "p->ip6eh.rh_type = ip6rh_type;"
    },
    {
        "line": 84,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 85,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 378,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 379,
        "fullcodeline": "DecodeIPv4inIPv6(tv, dtv, p, pkt, plen, pq);"
    },
    {
        "line": 383,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 386,
        "fullcodeline": "ENGINE_SET_EVENT(p,IPV6_WITH_ICMPV4);"
    },
    {
        "line": 392,
        "fullcodeline": "hdrextlen = 8 + (*(pkt+1) * 8);  /* 8 bytes + length in 8 octet units */"
    },
    {
        "line": 398,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 399,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 402,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_UNKNOWN_NEXT_HEADER);"
    },
    {
        "line": 403,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 19,
        "fullcodeline": "if (plen > 0) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (hdrextlen > plen) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (ip6rh_type == 0) {"
    },
    {
        "line": 91,
        "fullcodeline": "IPV6OptHAO hao_s, *hao = &hao_s;"
    },
    {
        "line": 92,
        "fullcodeline": "IPV6OptRA ra_s, *ra = &ra_s;"
    },
    {
        "line": 93,
        "fullcodeline": "IPV6OptJumbo jumbo_s, *jumbo = &jumbo_s;"
    },
    {
        "line": 94,
        "fullcodeline": "uint16_t optslen = 0;"
    },
    {
        "line": 96,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 97,
        "fullcodeline": "hdrextlen =  (*(pkt+1) + 1) << 3;"
    },
    {
        "line": 103,
        "fullcodeline": "uint8_t *ptr = pkt + 2; /* +2 to go past nxthdr and len */"
    },
    {
        "line": 153,
        "fullcodeline": "uint16_t padn_cnt = 0;"
    },
    {
        "line": 154,
        "fullcodeline": "uint16_t other_cnt = 0;"
    },
    {
        "line": 155,
        "fullcodeline": "uint16_t offset = 0;"
    },
    {
        "line": 259,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 260,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 266,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 275,
        "fullcodeline": "uint16_t prev_hdrextlen = hdrextlen;"
    },
    {
        "line": 297,
        "fullcodeline": "IPV6_EXTHDR_SET_FH(p);"
    },
    {
        "line": 300,
        "fullcodeline": "DecodeIPV6FragHeader(p, pkt, hdrextlen, plen, prev_hdrextlen);"
    },
    {
        "line": 316,
        "fullcodeline": "p->flags |= PKT_IS_FRAGMENT;"
    },
    {
        "line": 321,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 333,
        "fullcodeline": "eh = 1;"
    },
    {
        "line": 335,
        "fullcodeline": "nh = IPPROTO_NONE;"
    },
    {
        "line": 336,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 337,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 342,
        "fullcodeline": "IPV6_SET_L4PROTO(p,nh);"
    },
    {
        "line": 357,
        "fullcodeline": "IPV6AuthHdr *ahhdr = (IPV6AuthHdr *)pkt;"
    },
    {
        "line": 370,
        "fullcodeline": "ah = 1;"
    },
    {
        "line": 373,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 374,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 393,
        "fullcodeline": "if (hdrextlen > plen) {"
    },
    {
        "line": 21,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_DATA_AFTER_NONE_HEADER);"
    },
    {
        "line": 60,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_TRUNC_EXTHDR);"
    },
    {
        "line": 65,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_DUPL_RH);"
    },
    {
        "line": 69,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 70,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 77,
        "fullcodeline": "uint8_t ip6rh_type = *(pkt + 2);"
    },
    {
        "line": 79,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_RH_TYPE_0);"
    },
    {
        "line": 98,
        "fullcodeline": "if (hdrextlen > plen) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (nh == IPPROTO_HOPOPTS) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (optslen > plen) {"
    },
    {
        "line": 156,
        "fullcodeline": "while(offset < optslen)"
    },
    {
        "line": 251,
        "fullcodeline": "if (padn_cnt > 0 && other_cnt == 0) {"
    },
    {
        "line": 270,
        "fullcodeline": "if (exthdr_fh_done == 0) {"
    },
    {
        "line": 277,
        "fullcodeline": "if (hdrextlen > plen) {"
    },
    {
        "line": 283,
        "fullcodeline": "if (*(pkt + 1) != 0) {"
    },
    {
        "line": 288,
        "fullcodeline": "if (IPV6_EXTHDR_ISSET_FH(p)) {"
    },
    {
        "line": 306,
        "fullcodeline": "if (p->ip6eh.fh_more_frags_set == 0 && p->ip6eh.fh_offset == 0) {"
    },
    {
        "line": 323,
        "fullcodeline": "if (hdrextlen > plen) {"
    },
    {
        "line": 347,
        "fullcodeline": "if (*(pkt+1) > 0)"
    },
    {
        "line": 352,
        "fullcodeline": "if (hdrextlen > plen) {"
    },
    {
        "line": 358,
        "fullcodeline": "if (ahhdr->ip6ah_reserved != 0x0000) {"
    },
    {
        "line": 394,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_TRUNC_EXTHDR);"
    },
    {
        "line": 99,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_TRUNC_EXTHDR);"
    },
    {
        "line": 118,
        "fullcodeline": "hh = 1;"
    },
    {
        "line": 120,
        "fullcodeline": "optslen = ((*(pkt + 1) + 1 ) << 3) - 2;"
    },
    {
        "line": 144,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_EXTHDR_INVALID_OPTLEN);"
    },
    {
        "line": 148,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 149,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 246,
        "fullcodeline": "uint16_t optlen = (*(ptr + 1) + 2);"
    },
    {
        "line": 247,
        "fullcodeline": "ptr += optlen; /* +2 for opt type and opt len fields */"
    },
    {
        "line": 248,
        "fullcodeline": "offset += optlen;"
    },
    {
        "line": 271,
        "fullcodeline": "p->ip6eh.fh_offset = pkt - orig_pkt;"
    },
    {
        "line": 272,
        "fullcodeline": "exthdr_fh_done = 1;"
    },
    {
        "line": 278,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_TRUNC_EXTHDR);"
    },
    {
        "line": 284,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_FH_NON_ZERO_RES_FIELD);"
    },
    {
        "line": 289,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_DUPL_FH);"
    },
    {
        "line": 291,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 292,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 307,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_USELESS_FH);"
    },
    {
        "line": 310,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 311,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 324,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_TRUNC_EXTHDR);"
    },
    {
        "line": 329,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_DUPL_EH);"
    },
    {
        "line": 348,
        "fullcodeline": "hdrextlen += ((*(pkt+1) - 1) * 4);"
    },
    {
        "line": 353,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_TRUNC_EXTHDR);"
    },
    {
        "line": 359,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_AH_RES_NOT_NULL);"
    },
    {
        "line": 363,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_DUPL_AH);"
    },
    {
        "line": 365,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 366,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 158,
        "fullcodeline": "if (*ptr == IPV6OPT_PAD1)"
    },
    {
        "line": 166,
        "fullcodeline": "if (offset + 1 >= optslen) {"
    },
    {
        "line": 175,
        "fullcodeline": "if ((offset + 1 + ip6_optlen) > optslen) {"
    },
    {
        "line": 180,
        "fullcodeline": "if (*ptr == IPV6OPT_PADN) /* PadN */"
    },
    {
        "line": 252,
        "fullcodeline": "if (nh == IPPROTO_HOPOPTS)"
    },
    {
        "line": 109,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_DUPL_HH);"
    },
    {
        "line": 113,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 114,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 122,
        "fullcodeline": "else if (nh == IPPROTO_DSTOPTS)"
    },
    {
        "line": 160,
        "fullcodeline": "padn_cnt++;"
    },
    {
        "line": 161,
        "fullcodeline": "offset++;"
    },
    {
        "line": 162,
        "fullcodeline": "ptr++;"
    },
    {
        "line": 167,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_EXTHDR_INVALID_OPTLEN);"
    },
    {
        "line": 172,
        "fullcodeline": "uint8_t ip6_optlen = *(ptr + 1);"
    },
    {
        "line": 176,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_EXTHDR_INVALID_OPTLEN);"
    },
    {
        "line": 183,
        "fullcodeline": "padn_cnt++;"
    },
    {
        "line": 253,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_HOPOPTS_ONLY_PADDING);"
    },
    {
        "line": 186,
        "fullcodeline": "if (ip6_optlen == 0)"
    },
    {
        "line": 255,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_DSTOPTS_ONLY_PADDING);"
    },
    {
        "line": 124,
        "fullcodeline": "if (dstopts == 0) {"
    },
    {
        "line": 187,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_ZERO_LEN_PADN);"
    },
    {
        "line": 189,
        "fullcodeline": "else if (*ptr == IPV6OPT_RA) /* RA */"
    },
    {
        "line": 125,
        "fullcodeline": "optslen = ((*(pkt + 1) + 1 ) << 3) - 2;"
    },
    {
        "line": 126,
        "fullcodeline": "dstopts = 1;"
    },
    {
        "line": 191,
        "fullcodeline": "ra->ip6ra_type = *(ptr);"
    },
    {
        "line": 192,
        "fullcodeline": "ra->ip6ra_len  = ip6_optlen;"
    },
    {
        "line": 199,
        "fullcodeline": "memcpy(&ra->ip6ra_value, (ptr + 2), sizeof(ra->ip6ra_value));"
    },
    {
        "line": 200,
        "fullcodeline": "ra->ip6ra_value = SCNtohs(ra->ip6ra_value);"
    },
    {
        "line": 203,
        "fullcodeline": "other_cnt++;"
    },
    {
        "line": 194,
        "fullcodeline": "if (ip6_optlen < sizeof(ra->ip6ra_value)) {"
    },
    {
        "line": 127,
        "fullcodeline": "} else if (dstopts == 1) {"
    },
    {
        "line": 195,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_EXTHDR_INVALID_OPTLEN);"
    },
    {
        "line": 205,
        "fullcodeline": "else if (*ptr == IPV6OPT_JUMBO) /* Jumbo */"
    },
    {
        "line": 128,
        "fullcodeline": "optslen = ((*(pkt + 1) + 1 ) << 3) - 2;"
    },
    {
        "line": 129,
        "fullcodeline": "dstopts = 2;"
    },
    {
        "line": 207,
        "fullcodeline": "jumbo->ip6j_type = *(ptr);"
    },
    {
        "line": 208,
        "fullcodeline": "jumbo->ip6j_len  = ip6_optlen;"
    },
    {
        "line": 215,
        "fullcodeline": "memcpy(&jumbo->ip6j_payload_len, (ptr+2), sizeof(jumbo->ip6j_payload_len));"
    },
    {
        "line": 216,
        "fullcodeline": "jumbo->ip6j_payload_len = SCNtohl(jumbo->ip6j_payload_len);"
    },
    {
        "line": 131,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_EXTHDR_DUPL_DH);"
    },
    {
        "line": 135,
        "fullcodeline": "pkt += hdrextlen;"
    },
    {
        "line": 136,
        "fullcodeline": "plen -= hdrextlen;"
    },
    {
        "line": 210,
        "fullcodeline": "if (ip6_optlen < sizeof(jumbo->ip6j_payload_len)) {"
    },
    {
        "line": 211,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_EXTHDR_INVALID_OPTLEN);"
    },
    {
        "line": 220,
        "fullcodeline": "else if (*ptr == IPV6OPT_HAO) /* HAO */"
    },
    {
        "line": 222,
        "fullcodeline": "hao->ip6hao_type = *(ptr);"
    },
    {
        "line": 223,
        "fullcodeline": "hao->ip6hao_len  = ip6_optlen;"
    },
    {
        "line": 230,
        "fullcodeline": "memcpy(&hao->ip6hao_hoa, (ptr+2), sizeof(hao->ip6hao_hoa));"
    },
    {
        "line": 237,
        "fullcodeline": "other_cnt++;"
    },
    {
        "line": 225,
        "fullcodeline": "if (ip6_optlen < sizeof(hao->ip6hao_hoa)) {"
    },
    {
        "line": 244,
        "fullcodeline": "other_cnt++;"
    },
    {
        "line": 226,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, IPV6_EXTHDR_INVALID_OPTLEN);"
    },
    {
        "line": 239,
        "fullcodeline": "if (nh == IPPROTO_HOPOPTS)"
    },
    {
        "line": 240,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_HOPOPTS_UNKNOWN_OPT);"
    },
    {
        "line": 242,
        "fullcodeline": "ENGINE_SET_EVENT(p, IPV6_DSTOPTS_UNKNOWN_OPT);"
    }
]