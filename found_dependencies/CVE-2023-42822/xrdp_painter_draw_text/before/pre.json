[
    {
        "line": 27,
        "fullcodeline": "LOG_DEVEL(LOG_LEVEL_DEBUG, \"xrdp_painter_draw_text:\");"
    },
    {
        "line": 34,
        "fullcodeline": "len = g_mbstowcs(0, text, 0);"
    },
    {
        "line": 48,
        "fullcodeline": "xrdp_painter_font_needed(self);"
    },
    {
        "line": 142,
        "fullcodeline": "wstr = (twchar *)g_malloc((len + 2) * sizeof(twchar), 0);"
    },
    {
        "line": 143,
        "fullcodeline": "g_mbstowcs(wstr, text, len + 1);"
    },
    {
        "line": 144,
        "fullcodeline": "font = self->font;"
    },
    {
        "line": 145,
        "fullcodeline": "f = 0;"
    },
    {
        "line": 146,
        "fullcodeline": "k = 0;"
    },
    {
        "line": 147,
        "fullcodeline": "total_width = 0;"
    },
    {
        "line": 148,
        "fullcodeline": "total_height = 0;"
    },
    {
        "line": 149,
        "fullcodeline": "data = (char *)g_malloc(len * 4, 1);"
    },
    {
        "line": 168,
        "fullcodeline": "xrdp_bitmap_get_screen_clip(dst, self, &clip_rect, &dx, &dy);"
    },
    {
        "line": 169,
        "fullcodeline": "region = xrdp_region_create(self->wm);"
    },
    {
        "line": 181,
        "fullcodeline": "x += dx;"
    },
    {
        "line": 182,
        "fullcodeline": "y += dy;"
    },
    {
        "line": 183,
        "fullcodeline": "k = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "if (self == 0)"
    },
    {
        "line": 36,
        "fullcodeline": "if (len < 1)"
    },
    {
        "line": 43,
        "fullcodeline": "if (dst->type == 0)"
    },
    {
        "line": 50,
        "fullcodeline": "if (self->font == 0)"
    },
    {
        "line": 55,
        "fullcodeline": "if (self->painter != 0)"
    },
    {
        "line": 151,
        "fullcodeline": "for (index = 0; index < len; index++)"
    },
    {
        "line": 171,
        "fullcodeline": "if (dst->type != WND_TYPE_OFFSCREEN)"
    },
    {
        "line": 153,
        "fullcodeline": "font_item = font->font_items + wstr[index];"
    },
    {
        "line": 154,
        "fullcodeline": "i = xrdp_cache_add_char(self->wm->cache, font_item);"
    },
    {
        "line": 155,
        "fullcodeline": "f = HIWORD(i);"
    },
    {
        "line": 156,
        "fullcodeline": "c = LOWORD(i);"
    },
    {
        "line": 157,
        "fullcodeline": "data[index * 2] = c;"
    },
    {
        "line": 158,
        "fullcodeline": "data[index * 2 + 1] = k;"
    },
    {
        "line": 159,
        "fullcodeline": "k = font_item->incby;"
    },
    {
        "line": 160,
        "fullcodeline": "total_width += k;"
    },
    {
        "line": 163,
        "fullcodeline": "int glyph_height ="
    },
    {
        "line": 165,
        "fullcodeline": "total_height = MAX(total_height, glyph_height);"
    },
    {
        "line": 173,
        "fullcodeline": "xrdp_wm_get_vis_region(self->wm, dst, x, y, total_width, total_height,"
    },
    {
        "line": 185,
        "fullcodeline": "while (xrdp_region_get_rect(region, k, &rect) == 0)"
    },
    {
        "line": 199,
        "fullcodeline": "k++;"
    },
    {
        "line": 178,
        "fullcodeline": "xrdp_region_add_rect(region, &clip_rect);"
    },
    {
        "line": 187,
        "fullcodeline": "if (rect_intersect(&rect, &clip_rect, &draw_rect))"
    },
    {
        "line": 189,
        "fullcodeline": "x1 = x;"
    },
    {
        "line": 190,
        "fullcodeline": "y1 = y + font->body_height;"
    },
    {
        "line": 191,
        "fullcodeline": "flags = 0x03; /* 0x03 0x73; TEXT2_IMPLICIT_X and something else */"
    },
    {
        "line": 192,
        "fullcodeline": "libxrdp_orders_text(self->session, f, flags, 0,"
    },
    {
        "line": 194,
        "fullcodeline": "x - 1, y - 1, x + total_width, y + total_height,"
    },
    {
        "line": 196,
        "fullcodeline": "x1, y1, data, len * 2, &draw_rect);"
    }
]