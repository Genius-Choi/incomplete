[
    {
        "line": 3,
        "fullcodeline": "m_lastErrorString.clear();"
    },
    {
        "line": 5,
        "fullcodeline": "DDevicePartInfo part_info(partDevice);"
    },
    {
        "line": 6,
        "fullcodeline": "const QString part_old_uuid = part_info.uuid();"
    },
    {
        "line": 22,
        "fullcodeline": "bool device_is_mounted = Helper::isMounted(partDevice);"
    },
    {
        "line": 23,
        "fullcodeline": "const QString &mount_root = Helper::temporaryMountDevice(partDevice, QFileInfo(partDevice).fileName());"
    },
    {
        "line": 240,
        "fullcodeline": "dCDebug(\"Restore partition uuid\");"
    },
    {
        "line": 8,
        "fullcodeline": "if (Helper::processExec(\"lsblk -s -d -n -o UUID\") == 0) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (mount_root.isEmpty()) {"
    },
    {
        "line": 31,
        "fullcodeline": "const QString tmp_dir = \"/var/cache/deepin-clone\";"
    },
    {
        "line": 38,
        "fullcodeline": "const QString &repo_path = tmp_dir + \"/repo.iso\";"
    },
    {
        "line": 46,
        "fullcodeline": "bool ok = false;"
    },
    {
        "line": 48,
        "fullcodeline": "const QString &repo_mount_point = mount_root + \"/deepin-clone\";"
    },
    {
        "line": 49,
        "fullcodeline": "QFile file_boot_fix(mount_root + \"/boot_fix.sh\");"
    },
    {
        "line": 183,
        "fullcodeline": "Helper::processExec(\"umount \" + repo_mount_point);"
    },
    {
        "line": 184,
        "fullcodeline": "QDir(mount_root).rmdir(\"deepin-clone\");"
    },
    {
        "line": 185,
        "fullcodeline": "file_boot_fix.remove();"
    },
    {
        "line": 186,
        "fullcodeline": "Helper::processExec(\"umount \" + mount_root + \"/dev/pts\");"
    },
    {
        "line": 187,
        "fullcodeline": "Helper::processExec(\"umount \" + mount_root + \"/dev\");"
    },
    {
        "line": 188,
        "fullcodeline": "Helper::processExec(\"umount \" + mount_root + \"/proc\");"
    },
    {
        "line": 189,
        "fullcodeline": "Helper::processExec(\"umount \" + mount_root + \"/sys\");"
    },
    {
        "line": 190,
        "fullcodeline": "Helper::processExec(\"umount \" + mount_root + \"/boot/efi\");"
    },
    {
        "line": 234,
        "fullcodeline": "if (!device_is_mounted)"
    },
    {
        "line": 237,
        "fullcodeline": "if (m_lastErrorString.isEmpty())"
    },
    {
        "line": 242,
        "fullcodeline": "if (!Helper::resetPartUUID(part_info, part_old_uuid.toLatin1())) {"
    },
    {
        "line": 26,
        "fullcodeline": "m_lastErrorString = QObject::tr(\"Failed to mount partition \\\"%1\\\"\").arg(partDevice);"
    },
    {
        "line": 33,
        "fullcodeline": "if (!QDir::current().mkpath(tmp_dir)) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (!QFile::exists(repo_path)"
    },
    {
        "line": 192,
        "fullcodeline": "if (ok && process.exitCode() == 0) {"
    },
    {
        "line": 235,
        "fullcodeline": "Helper::umountDevice(partDevice);"
    },
    {
        "line": 238,
        "fullcodeline": "m_lastErrorString = QObject::tr(\"Boot for repair system failed\");"
    },
    {
        "line": 243,
        "fullcodeline": "dCWarning(\"Failed to restore partition uuid, part: %s, uuid: %s\", qPrintable(partDevice), qPrintable(part_old_uuid));"
    },
    {
        "line": 9,
        "fullcodeline": "if (Helper::lastProcessStandardOutput().contains(part_old_uuid.toLatin1())) {"
    },
    {
        "line": 34,
        "fullcodeline": "dCError(\"mkpath \\\"%s\\\" failed\", qPrintable(tmp_dir));"
    },
    {
        "line": 41,
        "fullcodeline": "&& !QFile::copy(QString(\":/repo_%1.iso\").arg(HOST_ARCH), repo_path)) {"
    },
    {
        "line": 42,
        "fullcodeline": "dCError(\"copy file failed, new name: %s\", qPrintable(repo_path));"
    },
    {
        "line": 109,
        "fullcodeline": "ok = true;"
    },
    {
        "line": 115,
        "fullcodeline": "const QString &parent_device = Helper::parentDevice(partDevice);"
    },
    {
        "line": 117,
        "fullcodeline": "bool is_efi = false;"
    },
    {
        "line": 52,
        "fullcodeline": "if (!QDir(mount_root).exists(\"deepin-clone\") && !QDir(mount_root).mkdir(\"deepin-clone\")) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (!Helper::mountDevice(repo_path, repo_mount_point, true)) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (file_boot_fix.exists()) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (!QFile::copy(QString(\":/scripts/boot_fix_%1.sh\").arg("
    },
    {
        "line": 84,
        "fullcodeline": "if (!file_boot_fix.setPermissions(file_boot_fix.permissions() | QFile::ExeUser)) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (Helper::processExec(QString(\"mount --bind -v --bind /dev %1/dev\").arg(mount_root)) != 0) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (Helper::processExec(QString(\"mount --bind -v --bind /dev/pts %1/dev/pts\").arg(mount_root)) != 0) {"
    },
    {
        "line": 99,
        "fullcodeline": "if (Helper::processExec(QString(\"mount --bind -v --bind /proc %1/proc\").arg(mount_root)) != 0) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (Helper::processExec(QString(\"mount --bind -v --bind /sys %1/sys\").arg(mount_root)) != 0) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (!parent_device.isEmpty()) {"
    },
    {
        "line": 193,
        "fullcodeline": "if (part_old_uuid != part_info.uuid()) {"
    },
    {
        "line": 226,
        "fullcodeline": "if (!device_is_mounted)"
    },
    {
        "line": 11,
        "fullcodeline": "if (Helper::resetPartUUID(part_info)) {"
    },
    {
        "line": 53,
        "fullcodeline": "dCError(\"Create \\\"deepin-clone\\\" dir failed(\\\"%s\\\")\", qPrintable(mount_root));"
    },
    {
        "line": 58,
        "fullcodeline": "m_lastErrorString = QObject::tr(\"Failed to mount partition \\\"%1\\\"\").arg(repo_path);"
    },
    {
        "line": 63,
        "fullcodeline": "file_boot_fix.remove();"
    },
    {
        "line": 80,
        "fullcodeline": "dCError(\"copy file failed, new name: %s\", qPrintable(file_boot_fix.fileName()));"
    },
    {
        "line": 85,
        "fullcodeline": "dCError(\"Set \\\"%s\\\" permissions failed\", qPrintable(file_boot_fix.fileName()));"
    },
    {
        "line": 90,
        "fullcodeline": "dCError(\"Failed to bind /dev\");"
    },
    {
        "line": 95,
        "fullcodeline": "dCError(\"Failed to bind /dev/pts\");"
    },
    {
        "line": 100,
        "fullcodeline": "dCError(\"Failed to bind /proc\");"
    },
    {
        "line": 105,
        "fullcodeline": "dCError(\"Failed to bind /sys\");"
    },
    {
        "line": 120,
        "fullcodeline": "DDeviceDiskInfo info(parent_device);"
    },
    {
        "line": 122,
        "fullcodeline": "dCDebug(\"Disk partition table type: %d\", info.ptType());"
    },
    {
        "line": 155,
        "fullcodeline": "process.setProcessChannelMode(QProcess::MergedChannels);"
    },
    {
        "line": 156,
        "fullcodeline": "process.start(QString(\"chroot %1 ./boot_fix.sh %2 %3 /deepin-clone\")"
    },
    {
        "line": 167,
        "fullcodeline": "process.waitForFinished(-1);"
    },
    {
        "line": 194,
        "fullcodeline": "dCDebug(\"Reset the uuid from \\\"%s\\\" to \\\"%s\\\"\", qPrintable(part_old_uuid), qPrintable(part_info.uuid()));"
    },
    {
        "line": 197,
        "fullcodeline": "QFile file(mount_root + \"/etc/fstab\");"
    },
    {
        "line": 211,
        "fullcodeline": "file.setFileName(mount_root + \"/etc/crypttab\");"
    },
    {
        "line": 227,
        "fullcodeline": "Helper::umountDevice(partDevice);"
    },
    {
        "line": 12,
        "fullcodeline": "QThread::sleep(1);"
    },
    {
        "line": 13,
        "fullcodeline": "part_info.refresh();"
    },
    {
        "line": 15,
        "fullcodeline": "qDebug() << part_old_uuid << part_info.uuid();"
    },
    {
        "line": 79,
        "fullcodeline": "), file_boot_fix.fileName())) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (info.ptType() == DDeviceDiskInfo::GPT) {"
    },
    {
        "line": 161,
        "fullcodeline": "while (process.waitForReadyRead()) {"
    },
    {
        "line": 169,
        "fullcodeline": "switch (process.exitCode()) {"
    },
    {
        "line": 199,
        "fullcodeline": "if (file.exists() && file.open(QIODevice::ReadWrite)) {"
    },
    {
        "line": 213,
        "fullcodeline": "if (file.exists() && file.open(QIODevice::ReadWrite)) {"
    },
    {
        "line": 17,
        "fullcodeline": "dCWarning(\"Failed to reset uuid\");"
    },
    {
        "line": 159,
        "fullcodeline": ".arg(is_efi ? \"true\" : \"false\"));"
    },
    {
        "line": 162,
        "fullcodeline": "const QByteArray &data = process.readAll().simplified().constData();"
    },
    {
        "line": 164,
        "fullcodeline": "dCDebug(data.constData());"
    },
    {
        "line": 171,
        "fullcodeline": "m_lastErrorString = QObject::tr(\"Boot for install system failed\");"
    },
    {
        "line": 174,
        "fullcodeline": "m_lastErrorString = QObject::tr(\"Boot for update system failed\");"
    },
    {
        "line": 200,
        "fullcodeline": "QByteArray data = file.readAll();"
    },
    {
        "line": 206,
        "fullcodeline": "file.close();"
    },
    {
        "line": 214,
        "fullcodeline": "QByteArray data = file.readAll();"
    },
    {
        "line": 220,
        "fullcodeline": "file.close();"
    },
    {
        "line": 144,
        "fullcodeline": "if (!is_efi && m_lastErrorString.isEmpty()) {"
    },
    {
        "line": 202,
        "fullcodeline": "if (file.seek(0)) {"
    },
    {
        "line": 208,
        "fullcodeline": "dCWarning(\"Failed to update /etc/fstab, error: %s\", qPrintable(file.errorString()));"
    },
    {
        "line": 216,
        "fullcodeline": "if (file.seek(0)) {"
    },
    {
        "line": 222,
        "fullcodeline": "dCWarning(\"Failed to update /etc/crypttab, error: %s\", qPrintable(file.errorString()));"
    },
    {
        "line": 145,
        "fullcodeline": "m_lastErrorString = QObject::tr(\"EFI partition not found\");"
    },
    {
        "line": 146,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 148,
        "fullcodeline": "} else if (info.ptType() == DDeviceDiskInfo::Unknow) {"
    },
    {
        "line": 203,
        "fullcodeline": "file.write(data.replace(part_old_uuid.toLatin1(), part_info.uuid().toLatin1()));"
    },
    {
        "line": 217,
        "fullcodeline": "file.write(data.replace(part_old_uuid.toLatin1(), part_info.uuid().toLatin1()));"
    },
    {
        "line": 126,
        "fullcodeline": "if (part.guidType() == DPartInfo::EFI_SP_None) {"
    },
    {
        "line": 149,
        "fullcodeline": "m_lastErrorString = QObject::tr(\"Unknown partition style\");"
    },
    {
        "line": 150,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 127,
        "fullcodeline": "const QString &efi_path = mount_root + \"/boot/efi\";"
    },
    {
        "line": 129,
        "fullcodeline": "QDir::current().mkpath(efi_path);"
    },
    {
        "line": 138,
        "fullcodeline": "is_efi = true;"
    },
    {
        "line": 131,
        "fullcodeline": "if (Helper::processExec(QString(\"mount %1 %2\").arg(part.filePath()).arg(efi_path)) != 0) {"
    },
    {
        "line": 132,
        "fullcodeline": "dCError(\"Failed to mount EFI partition\");"
    },
    {
        "line": 133,
        "fullcodeline": "m_lastErrorString = QObject::tr(\"Failed to mount partition \\\"%1\\\"\").arg(part.filePath());"
    },
    {
        "line": 134,
        "fullcodeline": "ok = false;"
    }
]