[
    {
        "line": 16,
        "fullcodeline": "PROCNAME(\"pixFewColorsOctcubeQuantMixed\");"
    },
    {
        "line": 35,
        "fullcodeline": "cmap = pixGetColormap(pixc);"
    },
    {
        "line": 36,
        "fullcodeline": "ncolors = pixcmapGetCount(cmap);"
    },
    {
        "line": 37,
        "fullcodeline": "cmapd = pixcmapCreate(8);"
    },
    {
        "line": 38,
        "fullcodeline": "lut = (l_int32 *)LEPT_CALLOC(256, sizeof(l_int32));"
    },
    {
        "line": 63,
        "fullcodeline": "pixGetDimensions(pixs, &w, &h, NULL);"
    },
    {
        "line": 64,
        "fullcodeline": "pixd = pixCreate(w, h, 8);"
    },
    {
        "line": 65,
        "fullcodeline": "pixSetColormap(pixd, cmapd);"
    },
    {
        "line": 66,
        "fullcodeline": "pixm = pixCreate(w, h, 1);"
    },
    {
        "line": 67,
        "fullcodeline": "datac = pixGetData(pixc);"
    },
    {
        "line": 68,
        "fullcodeline": "datam = pixGetData(pixm);"
    },
    {
        "line": 69,
        "fullcodeline": "datad = pixGetData(pixd);"
    },
    {
        "line": 70,
        "fullcodeline": "wplc = pixGetWpl(pixc);"
    },
    {
        "line": 71,
        "fullcodeline": "wplm = pixGetWpl(pixm);"
    },
    {
        "line": 72,
        "fullcodeline": "wpld = pixGetWpl(pixd);"
    },
    {
        "line": 88,
        "fullcodeline": "pixg = pixConvertTo8(pixs, 0);"
    },
    {
        "line": 89,
        "fullcodeline": "pixGrayQuantFromHisto(pixd, pixg, pixm, minfract, maxspan);"
    },
    {
        "line": 18,
        "fullcodeline": "if (!pixs || pixGetDepth(pixs) != 32)"
    },
    {
        "line": 20,
        "fullcodeline": "if (level <= 0) level = 3;"
    },
    {
        "line": 21,
        "fullcodeline": "if (level > 6)"
    },
    {
        "line": 23,
        "fullcodeline": "if (darkthresh <= 0) darkthresh = 20;"
    },
    {
        "line": 24,
        "fullcodeline": "if (lightthresh <= 0) lightthresh = 244;"
    },
    {
        "line": 25,
        "fullcodeline": "if (diffthresh <= 0) diffthresh = 20;"
    },
    {
        "line": 26,
        "fullcodeline": "if (minfract <= 0.0) minfract = 0.05;"
    },
    {
        "line": 27,
        "fullcodeline": "if (maxspan <= 2) maxspan = 15;"
    },
    {
        "line": 30,
        "fullcodeline": "if ((pixc = pixFewColorsOctcubeQuant1(pixs, level)) == NULL)"
    },
    {
        "line": 39,
        "fullcodeline": "for (i = 0; i < 256; i++)"
    },
    {
        "line": 40,
        "fullcodeline": "lut[i] = -1;"
    },
    {
        "line": 41,
        "fullcodeline": "for (i = 0, index = 0; i < ncolors; i++) {"
    },
    {
        "line": 73,
        "fullcodeline": "for (i = 0; i < h; i++) {"
    },
    {
        "line": 42,
        "fullcodeline": "pixcmapGetColor(cmap, i, &rval, &gval, &bval);"
    },
    {
        "line": 43,
        "fullcodeline": "minval = L_MIN(rval, gval);"
    },
    {
        "line": 44,
        "fullcodeline": "minval = L_MIN(minval, bval);"
    },
    {
        "line": 47,
        "fullcodeline": "maxval = L_MAX(rval, gval);"
    },
    {
        "line": 48,
        "fullcodeline": "maxval = L_MAX(maxval, bval);"
    },
    {
        "line": 74,
        "fullcodeline": "linec = datac + i * wplc;"
    },
    {
        "line": 75,
        "fullcodeline": "linem = datam + i * wplm;"
    },
    {
        "line": 76,
        "fullcodeline": "lined = datad + i * wpld;"
    },
    {
        "line": 19,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixs undefined or not 32 bpp\", procName, NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"invalid level\", procName, NULL);"
    },
    {
        "line": 31,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"too many colors\", procName, NULL);"
    },
    {
        "line": 45,
        "fullcodeline": "if (minval > lightthresh)  /* near white */"
    },
    {
        "line": 49,
        "fullcodeline": "if (maxval < darkthresh)  /* near black */"
    },
    {
        "line": 77,
        "fullcodeline": "for (j = 0; j < w; j++) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (maxval - minval >= diffthresh) {"
    },
    {
        "line": 54,
        "fullcodeline": "pixcmapAddColor(cmapd, rval, gval, bval);"
    },
    {
        "line": 55,
        "fullcodeline": "lut[i] = index;"
    },
    {
        "line": 56,
        "fullcodeline": "index++;"
    },
    {
        "line": 78,
        "fullcodeline": "val = GET_DATA_BYTE(linec, j);"
    },
    {
        "line": 79,
        "fullcodeline": "if (lut[val] == -1)"
    },
    {
        "line": 80,
        "fullcodeline": "SET_DATA_BIT(linem, j);"
    },
    {
        "line": 82,
        "fullcodeline": "SET_DATA_BYTE(lined, j, lut[val]);"
    }
]