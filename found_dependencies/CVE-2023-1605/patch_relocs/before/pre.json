[
    {
        "line": 2,
        "fullcodeline": "r_return_val_if_fail (b && b->iob.io && b->iob.io->desc, NULL);"
    },
    {
        "line": 3,
        "fullcodeline": "RBinObject *bo = r_bin_cur_object (b);"
    },
    {
        "line": 4,
        "fullcodeline": "RIO *io = b->iob.io;"
    },
    {
        "line": 8,
        "fullcodeline": "struct r_bin_coff_obj *bin = (struct r_bin_coff_obj*)bo->bin_obj;"
    },
    {
        "line": 19,
        "fullcodeline": "size_t nimports = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "ut64 m_vaddr = UT64_MAX;"
    },
    {
        "line": 5,
        "fullcodeline": "if (!bo || !bo->bin_obj) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (bin->hdr.f_flags & COFF_FLAGS_TI_F_EXEC) {"
    },
    {
        "line": 21,
        "fullcodeline": "for (i = 0; i < bin->hdr.f_nsyms; i++) {"
    },
    {
        "line": 55,
        "fullcodeline": "return _relocs_list (b, bin, true, m_vaddr);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!(io->cached & R_PERM_W)) {"
    },
    {
        "line": 25,
        "fullcodeline": "i += bin->symbols[i].n_numaux;"
    },
    {
        "line": 29,
        "fullcodeline": "ut64 offset = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "RIOBank *bank = b->iob.bank_get (io, io->bank);"
    },
    {
        "line": 33,
        "fullcodeline": "r_list_foreach (bank->maprefs, iter, mapref) {"
    },
    {
        "line": 39,
        "fullcodeline": "m_vaddr = R_ROUND (offset, 16);"
    },
    {
        "line": 42,
        "fullcodeline": "RIODesc *desc = b->iob.open_at (io, muri, R_PERM_R, 0664, m_vaddr);"
    },
    {
        "line": 48,
        "fullcodeline": "RIOMap *map = b->iob.map_get_at (io, m_vaddr);"
    },
    {
        "line": 34,
        "fullcodeline": "RIOMap *map = b->iob.map_get (io, mapref->id);"
    },
    {
        "line": 40,
        "fullcodeline": "ut64 size = nimports * BYTES_PER_IMP_RELOC;"
    },
    {
        "line": 52,
        "fullcodeline": "map->name = strdup (\".imports.r2\");"
    },
    {
        "line": 23,
        "fullcodeline": "nimports++;"
    },
    {
        "line": 35,
        "fullcodeline": "if (r_io_map_end (map) > offset) {"
    },
    {
        "line": 36,
        "fullcodeline": "offset = r_io_map_end (map);"
    }
]