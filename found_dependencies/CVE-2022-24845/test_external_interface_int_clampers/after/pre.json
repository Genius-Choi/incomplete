[
    {
        "line": 2,
        "fullcodeline": "external_contract = f\"\"\""
    },
    {
        "line": 12,
        "fullcodeline": "code = f\"\"\""
    },
    {
        "line": 42,
        "fullcodeline": "bad_c = get_contract(external_contract)"
    },
    {
        "line": 43,
        "fullcodeline": "c = get_contract("
    },
    {
        "line": 48,
        "fullcodeline": "assert bad_c.ok() == 1"
    },
    {
        "line": 49,
        "fullcodeline": "assert bad_c.should_fail() == -(2 ** 255)"
    },
    {
        "line": 51,
        "fullcodeline": "assert c.test_ok() == 1"
    },
    {
        "line": 52,
        "fullcodeline": "assert_tx_failed(lambda: c.test_fail())"
    },
    {
        "line": 53,
        "fullcodeline": "assert_tx_failed(lambda: c.test_fail2())"
    },
    {
        "line": 54,
        "fullcodeline": "assert_tx_failed(lambda: c.test_fail3())"
    },
    {
        "line": 4,
        "fullcodeline": "def ok() -> {typ}:"
    },
    {
        "line": 14,
        "fullcodeline": "def ok() -> {typ}: view"
    },
    {
        "line": 15,
        "fullcodeline": "def should_fail() -> {typ}: view"
    },
    {
        "line": 25,
        "fullcodeline": "def test_ok() -> {typ}:"
    },
    {
        "line": 29,
        "fullcodeline": "def test_fail() -> {typ}:"
    },
    {
        "line": 33,
        "fullcodeline": "def test_fail2() -> {typ}:"
    },
    {
        "line": 34,
        "fullcodeline": "x: {typ} = self.foo.should_fail()"
    },
    {
        "line": 46,
        "fullcodeline": "interface_codes={\"BadCode\": {\"type\": \"vyper\", \"code\": external_contract}},"
    }
]