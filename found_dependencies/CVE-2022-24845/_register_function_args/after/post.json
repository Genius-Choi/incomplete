[
    {
        "line": 2,
        "fullcodeline": "ret = []"
    },
    {
        "line": 5,
        "fullcodeline": "base_args_t = TupleType([arg.typ for arg in sig.base_args])"
    },
    {
        "line": 13,
        "fullcodeline": "for i, arg in enumerate(sig.base_args):"
    },
    {
        "line": 9,
        "fullcodeline": "base_args_ofst = IRnode(0, location=DATA, typ=base_args_t, encoding=Encoding.ABI)"
    },
    {
        "line": 11,
        "fullcodeline": "base_args_ofst = IRnode(4, location=CALLDATA, typ=base_args_t, encoding=Encoding.ABI)"
    },
    {
        "line": 15,
        "fullcodeline": "arg_ir = get_element_ptr(base_args_ofst, i)"
    },
    {
        "line": 17,
        "fullcodeline": "if needs_clamp(arg.typ, Encoding.ABI):"
    },
    {
        "line": 19,
        "fullcodeline": "p = context.new_variable(arg.name, arg.typ, is_mutable=False)"
    },
    {
        "line": 20,
        "fullcodeline": "dst = IRnode(p, typ=arg.typ, location=MEMORY)"
    },
    {
        "line": 22,
        "fullcodeline": "copy_arg = make_setter(dst, arg_ir)"
    },
    {
        "line": 23,
        "fullcodeline": "copy_arg.source_pos = getpos(arg.ast_source)"
    },
    {
        "line": 24,
        "fullcodeline": "ret.append(copy_arg)"
    },
    {
        "line": 26,
        "fullcodeline": "assert abi_encoding_matches_vyper(arg.typ)"
    },
    {
        "line": 28,
        "fullcodeline": "context.vars[arg.name] = VariableRecord("
    }
]