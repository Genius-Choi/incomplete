[
    {
        "line": 3,
        "fullcodeline": "LIST_HEAD(tmp_list);"
    },
    {
        "line": 16,
        "fullcodeline": "list_for_each_entry(p, &tmp_list, mnt_list) {"
    },
    {
        "line": 6,
        "fullcodeline": "if (how & UMOUNT_PROPAGATE)"
    },
    {
        "line": 10,
        "fullcodeline": "for (p = mnt; p; p = next_mnt(p, mnt)) {"
    },
    {
        "line": 17,
        "fullcodeline": "list_del_init(&p->mnt_child);"
    },
    {
        "line": 21,
        "fullcodeline": "if (how & UMOUNT_PROPAGATE)"
    },
    {
        "line": 24,
        "fullcodeline": "while (!list_empty(&tmp_list)) {"
    },
    {
        "line": 7,
        "fullcodeline": "propagate_mount_unlock(mnt);"
    },
    {
        "line": 11,
        "fullcodeline": "p->mnt.mnt_flags |= MNT_UMOUNT;"
    },
    {
        "line": 12,
        "fullcodeline": "list_move(&p->mnt_list, &tmp_list);"
    },
    {
        "line": 22,
        "fullcodeline": "propagate_umount(&tmp_list);"
    },
    {
        "line": 26,
        "fullcodeline": "list_del_init(&p->mnt_expire);"
    },
    {
        "line": 27,
        "fullcodeline": "list_del_init(&p->mnt_list);"
    },
    {
        "line": 28,
        "fullcodeline": "__touch_mnt_namespace(p->mnt_ns);"
    },
    {
        "line": 29,
        "fullcodeline": "p->mnt_ns = NULL;"
    },
    {
        "line": 33,
        "fullcodeline": "pin_insert_group(&p->mnt_umount, &p->mnt_parent->mnt, &unmounted);"
    },
    {
        "line": 38,
        "fullcodeline": "change_mnt_propagation(p, MS_PRIVATE);"
    },
    {
        "line": 30,
        "fullcodeline": "if (how & UMOUNT_SYNC)"
    },
    {
        "line": 34,
        "fullcodeline": "if (mnt_has_parent(p)) {"
    },
    {
        "line": 31,
        "fullcodeline": "p->mnt.mnt_flags |= MNT_SYNC_UMOUNT;"
    },
    {
        "line": 35,
        "fullcodeline": "mnt_add_count(p->mnt_parent, -1);"
    },
    {
        "line": 36,
        "fullcodeline": "umount_mnt(p);"
    }
]