[
    {
        "line": 7,
        "fullcodeline": "const char lldpaddr[] = LLDP_MULTICAST_ADDR;"
    },
    {
        "line": 8,
        "fullcodeline": "const char dot1[] = LLDP_TLV_ORG_DOT1;"
    },
    {
        "line": 9,
        "fullcodeline": "const char dot3[] = LLDP_TLV_ORG_DOT3;"
    },
    {
        "line": 10,
        "fullcodeline": "const char med[] = LLDP_TLV_ORG_MED;"
    },
    {
        "line": 11,
        "fullcodeline": "const char dcbx[] = LLDP_TLV_ORG_DCBX;"
    },
    {
        "line": 12,
        "fullcodeline": "unsigned char orgid[3];"
    },
    {
        "line": 13,
        "fullcodeline": "int length, gotend = 0, ttl_received = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "u_int8_t addr_str_length, addr_str_buffer[32];"
    },
    {
        "line": 32,
        "fullcodeline": "log_debug(\"lldp\", \"receive LLDP PDU on %s\","
    },
    {
        "line": 39,
        "fullcodeline": "TAILQ_INIT(&chassis->c_mgmt);"
    },
    {
        "line": 54,
        "fullcodeline": "length = s;"
    },
    {
        "line": 55,
        "fullcodeline": "pos = (u_int8_t*)frame;"
    },
    {
        "line": 66,
        "fullcodeline": "PEEK_DISCARD(ETHER_ADDR_LEN);\t/* Skip source address */"
    },
    {
        "line": 586,
        "fullcodeline": "*newchassis = chassis;"
    },
    {
        "line": 587,
        "fullcodeline": "*newport = port;"
    },
    {
        "line": 597,
        "fullcodeline": "lldpd_chassis_cleanup(chassis, 1);"
    },
    {
        "line": 598,
        "fullcodeline": "lldpd_port_cleanup(port, 1);"
    },
    {
        "line": 599,
        "fullcodeline": "free(port);"
    },
    {
        "line": 35,
        "fullcodeline": "if ((chassis = calloc(1, sizeof(struct lldpd_chassis))) == NULL) {"
    },
    {
        "line": 40,
        "fullcodeline": "if ((port = calloc(1, sizeof(struct lldpd_port))) == NULL) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (length < 2*ETHER_ADDR_LEN + sizeof(u_int16_t)) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (PEEK_CMP(lldpaddr, ETHER_ADDR_LEN) != 0) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (PEEK_UINT16 != ETHERTYPE_LLDP) {"
    },
    {
        "line": 73,
        "fullcodeline": "while (length && (!gotend)) {"
    },
    {
        "line": 578,
        "fullcodeline": "if ((chassis->c_id == NULL) ||"
    },
    {
        "line": 600,
        "fullcodeline": "return -1;"
    },
    {
        "line": 36,
        "fullcodeline": "log_warn(\"lldp\", \"failed to allocate remote chassis\");"
    },
    {
        "line": 41,
        "fullcodeline": "log_warn(\"lldp\", \"failed to allocate remote port\");"
    },
    {
        "line": 42,
        "fullcodeline": "free(chassis);"
    },
    {
        "line": 58,
        "fullcodeline": "log_warnx(\"lldp\", \"too short frame received on %s\", hardware->h_ifname);"
    },
    {
        "line": 62,
        "fullcodeline": "log_info(\"lldp\", \"frame not targeted at LLDP multicast address received on %s\","
    },
    {
        "line": 68,
        "fullcodeline": "log_info(\"lldp\", \"non LLDP frame received on %s\","
    },
    {
        "line": 79,
        "fullcodeline": "tlv_size = PEEK_UINT16;"
    },
    {
        "line": 80,
        "fullcodeline": "tlv_type = tlv_size >> 9;"
    },
    {
        "line": 81,
        "fullcodeline": "tlv_size = tlv_size & 0x1ff;"
    },
    {
        "line": 82,
        "fullcodeline": "(void)PEEK_SAVE(tlv);"
    },
    {
        "line": 574,
        "fullcodeline": "PEEK_DISCARD(tlv + tlv_size - pos);"
    },
    {
        "line": 581,
        "fullcodeline": "(gotend == 0)) {"
    },
    {
        "line": 582,
        "fullcodeline": "log_warnx(\"lldp\", \"some mandatory tlv are missing for frame received on %s\","
    },
    {
        "line": 37,
        "fullcodeline": "return -1;"
    },
    {
        "line": 43,
        "fullcodeline": "return -1;"
    },
    {
        "line": 74,
        "fullcodeline": "if (length < 2) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (length < tlv_size) {"
    },
    {
        "line": 570,
        "fullcodeline": "if (pos > tlv + tlv_size) {"
    },
    {
        "line": 580,
        "fullcodeline": "(!ttl_received) ||"
    },
    {
        "line": 75,
        "fullcodeline": "log_warnx(\"lldp\", \"tlv header too short received on %s\","
    },
    {
        "line": 84,
        "fullcodeline": "log_warnx(\"lldp\", \"frame too short for tlv received on %s\","
    },
    {
        "line": 98,
        "fullcodeline": "gotend = 1;"
    },
    {
        "line": 102,
        "fullcodeline": "CHECK_TLV_SIZE(2, \"Port Id\");"
    },
    {
        "line": 103,
        "fullcodeline": "tlv_subtype = PEEK_UINT8;"
    },
    {
        "line": 115,
        "fullcodeline": "PEEK_BYTES(b, tlv_size - 1);"
    },
    {
        "line": 127,
        "fullcodeline": "CHECK_TLV_SIZE(2, \"TTL\");"
    },
    {
        "line": 128,
        "fullcodeline": "chassis->c_ttl = PEEK_UINT16;"
    },
    {
        "line": 129,
        "fullcodeline": "ttl_received = 1;"
    },
    {
        "line": 145,
        "fullcodeline": "PEEK_BYTES(b, tlv_size);"
    },
    {
        "line": 153,
        "fullcodeline": "CHECK_TLV_SIZE(4, \"System capabilities\");"
    },
    {
        "line": 154,
        "fullcodeline": "chassis->c_cap_available = PEEK_UINT16;"
    },
    {
        "line": 155,
        "fullcodeline": "chassis->c_cap_enabled = PEEK_UINT16;"
    },
    {
        "line": 158,
        "fullcodeline": "CHECK_TLV_SIZE(1, \"Management address\");"
    },
    {
        "line": 159,
        "fullcodeline": "addr_str_length = PEEK_UINT8;"
    },
    {
        "line": 165,
        "fullcodeline": "CHECK_TLV_SIZE(1 + addr_str_length, \"Management address\");"
    },
    {
        "line": 166,
        "fullcodeline": "PEEK_BYTES(addr_str_buffer, addr_str_length);"
    },
    {
        "line": 167,
        "fullcodeline": "addr_length = addr_str_length - 1;"
    },
    {
        "line": 168,
        "fullcodeline": "addr_family = addr_str_buffer[0];"
    },
    {
        "line": 169,
        "fullcodeline": "addr_ptr = &addr_str_buffer[1];"
    },
    {
        "line": 170,
        "fullcodeline": "CHECK_TLV_SIZE(1 + addr_str_length + 5, \"Management address\");"
    },
    {
        "line": 171,
        "fullcodeline": "iface_subtype = PEEK_UINT8;"
    },
    {
        "line": 172,
        "fullcodeline": "iface_number = PEEK_UINT32;"
    },
    {
        "line": 174,
        "fullcodeline": "af = lldpd_af_from_lldp_proto(addr_family);"
    },
    {
        "line": 181,
        "fullcodeline": "mgmt = lldpd_alloc_mgmt(af, addr_ptr, addr_length, iface);"
    },
    {
        "line": 191,
        "fullcodeline": "TAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);"
    },
    {
        "line": 194,
        "fullcodeline": "CHECK_TLV_SIZE(1 + (int)sizeof(orgid), \"Organisational\");"
    },
    {
        "line": 195,
        "fullcodeline": "PEEK_BYTES(orgid, sizeof(orgid));"
    },
    {
        "line": 196,
        "fullcodeline": "tlv_subtype = PEEK_UINT8;"
    },
    {
        "line": 566,
        "fullcodeline": "log_warnx(\"lldp\", \"unknown tlv (%d) received on %s\","
    },
    {
        "line": 571,
        "fullcodeline": "log_warnx(\"lldp\", \"BUG: already past TLV!\");"
    },
    {
        "line": 579,
        "fullcodeline": "(port->p_id == NULL) ||"
    },
    {
        "line": 90,
        "fullcodeline": "if (tlv_size != 0) {"
    },
    {
        "line": 104,
        "fullcodeline": "if ((tlv_subtype == 0) || (tlv_subtype > 7)) {"
    },
    {
        "line": 109,
        "fullcodeline": "if ((b = (char *)calloc(1, tlv_size - 1)) == NULL) {"
    },
    {
        "line": 116,
        "fullcodeline": "if (tlv_type == LLDP_TLV_PORT_ID) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (tlv_size < 1) {"
    },
    {
        "line": 139,
        "fullcodeline": "if ((b = (char *)calloc(1, tlv_size + 1)) == NULL) {"
    },
    {
        "line": 146,
        "fullcodeline": "if (tlv_type == LLDP_TLV_PORT_DESCR)"
    },
    {
        "line": 160,
        "fullcodeline": "if (addr_str_length > sizeof(addr_str_buffer)) {"
    },
    {
        "line": 175,
        "fullcodeline": "if (af == LLDPD_AF_UNSPEC)"
    },
    {
        "line": 177,
        "fullcodeline": "if (iface_subtype == LLDP_MGMT_IFACE_IFINDEX)"
    },
    {
        "line": 182,
        "fullcodeline": "if (mgmt == NULL) {"
    },
    {
        "line": 197,
        "fullcodeline": "if (memcmp(dot1, orgid, sizeof(orgid)) == 0) {"
    },
    {
        "line": 91,
        "fullcodeline": "log_warnx(\"lldp\", \"lldp end received with size not null on %s\","
    },
    {
        "line": 96,
        "fullcodeline": "log_debug(\"lldp\", \"extra data after lldp end on %s\","
    },
    {
        "line": 105,
        "fullcodeline": "log_warnx(\"lldp\", \"unknown subtype for tlv id received on %s\","
    },
    {
        "line": 110,
        "fullcodeline": "log_warn(\"lldp\", \"unable to allocate memory for id tlv \""
    },
    {
        "line": 117,
        "fullcodeline": "port->p_id_subtype = tlv_subtype;"
    },
    {
        "line": 118,
        "fullcodeline": "port->p_id = b;"
    },
    {
        "line": 119,
        "fullcodeline": "port->p_id_len = tlv_size - 1;"
    },
    {
        "line": 135,
        "fullcodeline": "log_debug(\"lldp\", \"empty tlv received on %s\","
    },
    {
        "line": 140,
        "fullcodeline": "log_warn(\"lldp\", \"unable to allocate memory for string tlv \""
    },
    {
        "line": 147,
        "fullcodeline": "port->p_descr = b;"
    },
    {
        "line": 161,
        "fullcodeline": "log_warnx(\"lldp\", \"too large management address on %s\","
    },
    {
        "line": 178,
        "fullcodeline": "iface = iface_number;"
    },
    {
        "line": 199,
        "fullcodeline": "hardware->h_rx_unrecognized_cnt++;"
    },
    {
        "line": 121,
        "fullcodeline": "chassis->c_id_subtype = tlv_subtype;"
    },
    {
        "line": 122,
        "fullcodeline": "chassis->c_id = b;"
    },
    {
        "line": 123,
        "fullcodeline": "chassis->c_id_len = tlv_size - 1;"
    },
    {
        "line": 180,
        "fullcodeline": "iface = 0;"
    },
    {
        "line": 183,
        "fullcodeline": "if (errno == ENOMEM)"
    },
    {
        "line": 148,
        "fullcodeline": "else if (tlv_type == LLDP_TLV_SYSTEM_NAME)"
    },
    {
        "line": 184,
        "fullcodeline": "log_warn(\"lldp\", \"unable to allocate memory \""
    },
    {
        "line": 288,
        "fullcodeline": "} else if (memcmp(dot3, orgid, sizeof(orgid)) == 0) {"
    },
    {
        "line": 149,
        "fullcodeline": "chassis->c_name = b;"
    },
    {
        "line": 187,
        "fullcodeline": "log_warn(\"lldp\", \"too large management address \""
    },
    {
        "line": 290,
        "fullcodeline": "hardware->h_rx_unrecognized_cnt++;"
    },
    {
        "line": 150,
        "fullcodeline": "else chassis->c_descr = b;"
    },
    {
        "line": 350,
        "fullcodeline": "} else if (memcmp(med, orgid, sizeof(orgid)) == 0) {"
    },
    {
        "line": 353,
        "fullcodeline": "hardware->h_rx_unrecognized_cnt++;"
    },
    {
        "line": 532,
        "fullcodeline": "} else if (memcmp(dcbx, orgid, sizeof(orgid)) == 0) {"
    },
    {
        "line": 533,
        "fullcodeline": "log_debug(\"lldp\", \"unsupported DCBX tlv received on %s - ignore\","
    },
    {
        "line": 535,
        "fullcodeline": "hardware->h_rx_unrecognized_cnt++;"
    },
    {
        "line": 537,
        "fullcodeline": "log_debug(\"lldp\", \"unknown org tlv [%02x:%02x:%02x] received on %s\","
    },
    {
        "line": 540,
        "fullcodeline": "hardware->h_rx_unrecognized_cnt++;"
    }
]