[
    {
        "line": 4,
        "fullcodeline": "struct vb2_queue *q = vb->vb2_queue;"
    },
    {
        "line": 5,
        "fullcodeline": "const struct v4l2_buffer *b = pb;"
    },
    {
        "line": 6,
        "fullcodeline": "struct vb2_v4l2_buffer *vbuf = to_vb2_v4l2_buffer(vb);"
    },
    {
        "line": 10,
        "fullcodeline": "ret = __verify_length(vb, b);"
    },
    {
        "line": 29,
        "fullcodeline": "vb->timestamp = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "vbuf->sequence = 0;"
    },
    {
        "line": 123,
        "fullcodeline": "vbuf->flags = b->flags & ~V4L2_BUFFER_MASK_FLAGS;"
    },
    {
        "line": 11,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (b->field == V4L2_FIELD_ALTERNATE && q->is_output) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (V4L2_TYPE_IS_MULTIPLANAR(b->type)) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (!vb->vb2_queue->copy_timestamp || !V4L2_TYPE_IS_OUTPUT(b->type)) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (V4L2_TYPE_IS_OUTPUT(b->type)) {"
    },
    {
        "line": 12,
        "fullcodeline": "dprintk(1, \"plane parameters verification failed: %d\\n\", ret);"
    },
    {
        "line": 25,
        "fullcodeline": "dprintk(1, \"the field is incorrectly set to ALTERNATE \""
    },
    {
        "line": 130,
        "fullcodeline": "vbuf->flags &= ~V4L2_BUF_FLAG_TSTAMP_SRC_MASK;"
    },
    {
        "line": 140,
        "fullcodeline": "vbuf->flags &= ~V4L2_BUF_FLAG_TIMECODE;"
    },
    {
        "line": 141,
        "fullcodeline": "vbuf->field = b->field;"
    },
    {
        "line": 27,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 33,
        "fullcodeline": "if (b->memory == VB2_MEMORY_USERPTR) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (b->memory == VB2_MEMORY_DMABUF) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (V4L2_TYPE_IS_OUTPUT(b->type)) {"
    },
    {
        "line": 144,
        "fullcodeline": "vbuf->flags &= ~V4L2_BUFFER_OUT_FLAGS;"
    },
    {
        "line": 98,
        "fullcodeline": "if (b->memory == VB2_MEMORY_USERPTR) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (b->memory == VB2_MEMORY_DMABUF) {"
    },
    {
        "line": 108,
        "fullcodeline": "if (V4L2_TYPE_IS_OUTPUT(b->type)) {"
    },
    {
        "line": 34,
        "fullcodeline": "for (plane = 0; plane < vb->num_planes; ++plane) {"
    },
    {
        "line": 42,
        "fullcodeline": "for (plane = 0; plane < vb->num_planes; ++plane) {"
    },
    {
        "line": 68,
        "fullcodeline": "for (plane = 0; plane < vb->num_planes; ++plane) {"
    },
    {
        "line": 100,
        "fullcodeline": "planes[0].length = b->length;"
    },
    {
        "line": 105,
        "fullcodeline": "planes[0].length = b->length;"
    },
    {
        "line": 69,
        "fullcodeline": "struct vb2_plane *pdst = &planes[plane];"
    },
    {
        "line": 80,
        "fullcodeline": "pdst->data_offset = psrc->data_offset;"
    },
    {
        "line": 109,
        "fullcodeline": "if (b->bytesused == 0)"
    },
    {
        "line": 118,
        "fullcodeline": "planes[0].bytesused = 0;"
    },
    {
        "line": 72,
        "fullcodeline": "if (psrc->bytesused == 0)"
    },
    {
        "line": 110,
        "fullcodeline": "vb2_warn_zero_bytesused(vb);"
    },
    {
        "line": 113,
        "fullcodeline": "planes[0].bytesused = b->bytesused;"
    },
    {
        "line": 73,
        "fullcodeline": "vb2_warn_zero_bytesused(vb);"
    },
    {
        "line": 76,
        "fullcodeline": "pdst->bytesused = psrc->bytesused;"
    },
    {
        "line": 115,
        "fullcodeline": "planes[0].bytesused = b->bytesused ?"
    },
    {
        "line": 78,
        "fullcodeline": "pdst->bytesused = psrc->bytesused ?"
    }
]