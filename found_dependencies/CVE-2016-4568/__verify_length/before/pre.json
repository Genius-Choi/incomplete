[
    {
        "line": 7,
        "fullcodeline": "if (!V4L2_TYPE_IS_OUTPUT(b->type))"
    },
    {
        "line": 11,
        "fullcodeline": "for (plane = 0; plane < vb->num_planes; ++plane) {"
    },
    {
        "line": 27,
        "fullcodeline": "length = (b->memory == VB2_MEMORY_USERPTR)"
    },
    {
        "line": 12,
        "fullcodeline": "length = (b->memory == VB2_MEMORY_USERPTR ||"
    },
    {
        "line": 16,
        "fullcodeline": "bytesused = b->m.planes[plane].bytesused"
    },
    {
        "line": 22,
        "fullcodeline": "if (b->m.planes[plane].data_offset > 0 &&"
    },
    {
        "line": 23,
        "fullcodeline": "b->m.planes[plane].data_offset >= bytesused)"
    },
    {
        "line": 31,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 13,
        "fullcodeline": "b->memory == VB2_MEMORY_DMABUF)"
    },
    {
        "line": 20,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 24,
        "fullcodeline": "return -EINVAL;"
    }
]