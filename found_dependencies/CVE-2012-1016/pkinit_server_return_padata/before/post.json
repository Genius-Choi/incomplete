[
    {
        "line": 13,
        "fullcodeline": "krb5_error_code retval = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "krb5_data scratch = {0, 0, NULL};"
    },
    {
        "line": 15,
        "fullcodeline": "krb5_pa_pk_as_req *reqp = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "krb5_pa_pk_as_req_draft9 *reqp9 = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "unsigned char *subjectPublicKey = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "unsigned char *dh_pubkey = NULL, *server_key = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "unsigned int subjectPublicKey_len = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "unsigned int server_key_len = 0, dh_pubkey_len = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "krb5_data *encoded_dhkey_info = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "krb5_pa_pk_as_rep *rep = NULL;"
    },
    {
        "line": 27,
        "fullcodeline": "krb5_pa_pk_as_rep_draft9 *rep9 = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "krb5_data *out_data = NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "krb5_enctype enctype = -1;"
    },
    {
        "line": 33,
        "fullcodeline": "krb5_reply_key_pack *key_pack = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "krb5_reply_key_pack_draft9 *key_pack9 = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "krb5_data *encoded_key_pack = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "int fixed_keypack = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "*send_pa = NULL;"
    },
    {
        "line": 55,
        "fullcodeline": "plgctx = pkinit_find_realm_context(context, moddata, request->server);"
    },
    {
        "line": 61,
        "fullcodeline": "pkiDebug(\"pkinit_return_padata: entered!\\n\");"
    },
    {
        "line": 62,
        "fullcodeline": "reqctx = (pkinit_kdc_req_context)modreq;"
    },
    {
        "line": 398,
        "fullcodeline": "(*send_pa)->magic = KV5M_PA_DATA;"
    },
    {
        "line": 408,
        "fullcodeline": "(*send_pa)->length = out_data->length;"
    },
    {
        "line": 409,
        "fullcodeline": "(*send_pa)->contents = (krb5_octet *) out_data->data;"
    },
    {
        "line": 412,
        "fullcodeline": "pkinit_fini_kdc_req_context(context, reqctx);"
    },
    {
        "line": 413,
        "fullcodeline": "free(scratch.data);"
    },
    {
        "line": 414,
        "fullcodeline": "free(out_data);"
    },
    {
        "line": 419,
        "fullcodeline": "free(dh_pubkey);"
    },
    {
        "line": 420,
        "fullcodeline": "free(server_key);"
    },
    {
        "line": 43,
        "fullcodeline": "if (padata->pa_type == KRB5_PADATA_PKINIT_KX) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (padata->length <= 0 || padata->contents == NULL)"
    },
    {
        "line": 50,
        "fullcodeline": "if (modreq == NULL) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (plgctx == NULL) {"
    },
    {
        "line": 70,
        "fullcodeline": "for(i = 0; i < request->nktypes; i++) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (i == request->nktypes) {"
    },
    {
        "line": 85,
        "fullcodeline": "switch((int)reqctx->pa_type) {"
    },
    {
        "line": 109,
        "fullcodeline": "if (reqctx->rcv_auth_pack != NULL &&"
    },
    {
        "line": 126,
        "fullcodeline": "if (rep != NULL && (rep->choice == choice_pa_pk_as_rep_dhInfo ||"
    },
    {
        "line": 138,
        "fullcodeline": "if ((rep9 != NULL &&"
    },
    {
        "line": 317,
        "fullcodeline": "if ((rep != NULL && rep->choice == choice_pa_pk_as_rep_dhInfo) &&"
    },
    {
        "line": 336,
        "fullcodeline": "switch ((int)padata->pa_type) {"
    },
    {
        "line": 356,
        "fullcodeline": "if ((rep9 != NULL &&"
    },
    {
        "line": 391,
        "fullcodeline": "if (*send_pa == NULL) {"
    },
    {
        "line": 399,
        "fullcodeline": "switch ((int)padata->pa_type) {"
    },
    {
        "line": 415,
        "fullcodeline": "if (encoded_dhkey_info != NULL)"
    },
    {
        "line": 417,
        "fullcodeline": "if (encoded_key_pack != NULL)"
    },
    {
        "line": 422,
        "fullcodeline": "switch ((int)padata->pa_type) {"
    },
    {
        "line": 51,
        "fullcodeline": "pkiDebug(\"missing request context \\n\");"
    },
    {
        "line": 57,
        "fullcodeline": "pkiDebug(\"Unable to locate correct realm context\\n\");"
    },
    {
        "line": 65,
        "fullcodeline": "free(encrypting_key->contents);"
    },
    {
        "line": 66,
        "fullcodeline": "encrypting_key->length = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "encrypting_key->contents = NULL;"
    },
    {
        "line": 81,
        "fullcodeline": "retval = KRB5KDC_ERR_ETYPE_NOSUPP;"
    },
    {
        "line": 87,
        "fullcodeline": "init_krb5_pa_pk_as_rep(&rep);"
    },
    {
        "line": 93,
        "fullcodeline": "rep->choice = choice_pa_pk_as_rep_encKeyPack;"
    },
    {
        "line": 97,
        "fullcodeline": "init_krb5_pa_pk_as_rep_draft9(&rep9);"
    },
    {
        "line": 102,
        "fullcodeline": "rep9->choice = choice_pa_pk_as_rep_draft9_encKeyPack;"
    },
    {
        "line": 105,
        "fullcodeline": "retval = KRB5KDC_ERR_PREAUTH_FAILED;"
    },
    {
        "line": 110,
        "fullcodeline": "reqctx->rcv_auth_pack->clientPublicValue != NULL) {"
    },
    {
        "line": 115,
        "fullcodeline": "rep->choice = choice_pa_pk_as_rep_dhInfo;"
    },
    {
        "line": 128,
        "fullcodeline": "pkiDebug(\"received DH key delivery AS REQ\\n\");"
    },
    {
        "line": 129,
        "fullcodeline": "retval = server_process_dh(context, plgctx->cryptoctx,"
    },
    {
        "line": 140,
        "fullcodeline": "(rep != NULL && rep->choice == choice_pa_pk_as_rep_dhInfo)) {"
    },
    {
        "line": 148,
        "fullcodeline": "dhkey_info.subjectPublicKey.length = dh_pubkey_len;"
    },
    {
        "line": 149,
        "fullcodeline": "dhkey_info.subjectPublicKey.data = dh_pubkey;"
    },
    {
        "line": 150,
        "fullcodeline": "dhkey_info.nonce = request->nonce;"
    },
    {
        "line": 151,
        "fullcodeline": "dhkey_info.dhKeyExpiration = 0;"
    },
    {
        "line": 153,
        "fullcodeline": "retval = k5int_encode_krb5_kdc_dh_key_info(&dhkey_info,"
    },
    {
        "line": 318,
        "fullcodeline": "((reqctx->rcv_auth_pack != NULL &&"
    },
    {
        "line": 338,
        "fullcodeline": "retval = k5int_encode_krb5_pa_pk_as_rep(rep, &out_data);"
    },
    {
        "line": 342,
        "fullcodeline": "retval = k5int_encode_krb5_pa_pk_as_rep_draft9(rep9, &out_data);"
    },
    {
        "line": 346,
        "fullcodeline": "pkiDebug(\"failed to encode AS_REP\\n\");"
    },
    {
        "line": 358,
        "fullcodeline": "(rep != NULL && rep->choice == choice_pa_pk_as_rep_dhInfo)) {"
    },
    {
        "line": 392,
        "fullcodeline": "retval = ENOMEM;"
    },
    {
        "line": 393,
        "fullcodeline": "free(out_data->data);"
    },
    {
        "line": 394,
        "fullcodeline": "free(out_data);"
    },
    {
        "line": 395,
        "fullcodeline": "out_data = NULL;"
    },
    {
        "line": 401,
        "fullcodeline": "(*send_pa)->pa_type = KRB5_PADATA_PK_AS_REP;"
    },
    {
        "line": 405,
        "fullcodeline": "(*send_pa)->pa_type = KRB5_PADATA_PK_AS_REP_OLD;"
    },
    {
        "line": 416,
        "fullcodeline": "krb5_free_data(context, encoded_dhkey_info);"
    },
    {
        "line": 418,
        "fullcodeline": "krb5_free_data(context, encoded_key_pack);"
    },
    {
        "line": 424,
        "fullcodeline": "free_krb5_pa_pk_as_req(&reqp);"
    },
    {
        "line": 425,
        "fullcodeline": "free_krb5_pa_pk_as_rep(&rep);"
    },
    {
        "line": 426,
        "fullcodeline": "free_krb5_reply_key_pack(&key_pack);"
    },
    {
        "line": 430,
        "fullcodeline": "free_krb5_pa_pk_as_req_draft9(&reqp9);"
    },
    {
        "line": 431,
        "fullcodeline": "free_krb5_pa_pk_as_rep_draft9(&rep9);"
    },
    {
        "line": 440,
        "fullcodeline": "pkiDebug(\"pkinit_verify_padata failure\");"
    },
    {
        "line": 44,
        "fullcodeline": "return return_pkinit_kx(context, request, reply,"
    },
    {
        "line": 72,
        "fullcodeline": "if (!krb5_c_valid_enctype(enctype))"
    },
    {
        "line": 88,
        "fullcodeline": "if (rep == NULL) {"
    },
    {
        "line": 98,
        "fullcodeline": "if (rep9 == NULL) {"
    },
    {
        "line": 127,
        "fullcodeline": "rep->choice == choice_pa_pk_as_rep_draft9_dhSignedData)) {"
    },
    {
        "line": 139,
        "fullcodeline": "rep9->choice == choice_pa_pk_as_rep_draft9_dhSignedData) ||"
    },
    {
        "line": 165,
        "fullcodeline": "switch ((int)padata->pa_type) {"
    },
    {
        "line": 194,
        "fullcodeline": "pkiDebug(\"received RSA key delivery AS REQ\\n\");"
    },
    {
        "line": 196,
        "fullcodeline": "retval = krb5_c_make_random_key(context, enctype, encrypting_key);"
    },
    {
        "line": 211,
        "fullcodeline": "pkiDebug(\"%s: return checksum instead of nonce = %d\\n\","
    },
    {
        "line": 319,
        "fullcodeline": "reqctx->rcv_auth_pack->supportedKDFs != NULL))) {"
    },
    {
        "line": 324,
        "fullcodeline": "if (reqctx->rcv_auth_pack != NULL &&"
    },
    {
        "line": 357,
        "fullcodeline": "rep9->choice == choice_pa_pk_as_rep_draft9_dhSignedData) ||"
    },
    {
        "line": 432,
        "fullcodeline": "if (!fixed_keypack)"
    },
    {
        "line": 89,
        "fullcodeline": "retval = ENOMEM;"
    },
    {
        "line": 99,
        "fullcodeline": "retval = ENOMEM;"
    },
    {
        "line": 116,
        "fullcodeline": "} else if (reqctx->rcv_auth_pack9 != NULL &&"
    },
    {
        "line": 134,
        "fullcodeline": "pkiDebug(\"failed to process/create dh paramters\\n\");"
    },
    {
        "line": 156,
        "fullcodeline": "pkiDebug(\"encode_krb5_kdc_dh_key_info failed\\n\");"
    },
    {
        "line": 167,
        "fullcodeline": "retval = cms_signeddata_create(context, plgctx->cryptoctx,"
    },
    {
        "line": 180,
        "fullcodeline": "retval = cms_signeddata_create(context, plgctx->cryptoctx,"
    },
    {
        "line": 205,
        "fullcodeline": "for (i = 0; request->padata[i] != NULL; i++) {"
    },
    {
        "line": 217,
        "fullcodeline": "if ((int)padata->pa_type == KRB5_PADATA_PK_AS_REQ || fixed_keypack) {"
    },
    {
        "line": 252,
        "fullcodeline": "switch ((int)padata->pa_type) {"
    },
    {
        "line": 325,
        "fullcodeline": "reqctx->rcv_auth_pack->supportedKDFs != NULL) {"
    },
    {
        "line": 326,
        "fullcodeline": "retval = pkinit_pick_kdf_alg(context, reqctx->rcv_auth_pack->supportedKDFs,"
    },
    {
        "line": 362,
        "fullcodeline": "secret.data = server_key;"
    },
    {
        "line": 363,
        "fullcodeline": "secret.length = server_key_len;"
    },
    {
        "line": 365,
        "fullcodeline": "retval = pkinit_alg_agility_kdf(context, &secret,"
    },
    {
        "line": 433,
        "fullcodeline": "free_krb5_reply_key_pack_draft9(&key_pack9);"
    },
    {
        "line": 75,
        "fullcodeline": "pkiDebug(\"KDC picked etype = %d\\n\", enctype);"
    },
    {
        "line": 117,
        "fullcodeline": "reqctx->rcv_auth_pack9->clientPublicValue != NULL) {"
    },
    {
        "line": 122,
        "fullcodeline": "rep9->choice = choice_pa_pk_as_rep_draft9_dhSignedData;"
    },
    {
        "line": 198,
        "fullcodeline": "pkiDebug(\"unable to make a session key\\n\");"
    },
    {
        "line": 206,
        "fullcodeline": "pkiDebug(\"%s: Checking pa_type 0x%08x\\n\","
    },
    {
        "line": 218,
        "fullcodeline": "init_krb5_reply_key_pack(&key_pack);"
    },
    {
        "line": 224,
        "fullcodeline": "retval = krb5_c_make_checksum(context, 0,"
    },
    {
        "line": 241,
        "fullcodeline": "krb5_copy_keyblock_contents(context, encrypting_key,"
    },
    {
        "line": 244,
        "fullcodeline": "retval = k5int_encode_krb5_reply_key_pack(key_pack,"
    },
    {
        "line": 254,
        "fullcodeline": "rep->choice = choice_pa_pk_as_rep_encKeyPack;"
    },
    {
        "line": 255,
        "fullcodeline": "retval = cms_envelopeddata_create(context, plgctx->cryptoctx,"
    },
    {
        "line": 284,
        "fullcodeline": "rep9->choice = choice_pa_pk_as_rep_draft9_encKeyPack;"
    },
    {
        "line": 285,
        "fullcodeline": "retval = cms_envelopeddata_create(context, plgctx->cryptoctx,"
    },
    {
        "line": 293,
        "fullcodeline": "pkiDebug(\"failed to create pkcs7 enveloped data: %s\\n\","
    },
    {
        "line": 380,
        "fullcodeline": "retval = pkinit_octetstring2key(context, enctype, server_key,"
    },
    {
        "line": 435,
        "fullcodeline": "free_krb5_reply_key_pack(&key_pack);"
    },
    {
        "line": 169,
        "fullcodeline": "(unsigned char *)encoded_dhkey_info->data,"
    },
    {
        "line": 174,
        "fullcodeline": "pkiDebug(\"failed to create pkcs7 signed data\\n\");"
    },
    {
        "line": 182,
        "fullcodeline": "(unsigned char *)encoded_dhkey_info->data,"
    },
    {
        "line": 187,
        "fullcodeline": "pkiDebug(\"failed to create pkcs7 signed data\\n\");"
    },
    {
        "line": 208,
        "fullcodeline": "if (request->padata[i]->pa_type == 132)"
    },
    {
        "line": 219,
        "fullcodeline": "if (key_pack == NULL) {"
    },
    {
        "line": 266,
        "fullcodeline": "if (!fixed_keypack) {"
    },
    {
        "line": 294,
        "fullcodeline": "error_message(retval));"
    },
    {
        "line": 329,
        "fullcodeline": "pkiDebug(\"pkinit_pick_kdf_alg failed: %s\\n\","
    },
    {
        "line": 369,
        "fullcodeline": "(krb5_octet_data *)req_pkt,"
    },
    {
        "line": 370,
        "fullcodeline": "(krb5_octet_data *)out_data,"
    },
    {
        "line": 373,
        "fullcodeline": "pkiDebug(\"pkinit_alg_agility_kdf failed: %s\\n\","
    },
    {
        "line": 209,
        "fullcodeline": "fixed_keypack = 1;"
    },
    {
        "line": 220,
        "fullcodeline": "retval = ENOMEM;"
    },
    {
        "line": 228,
        "fullcodeline": "pkiDebug(\"unable to calculate AS REQ checksum\\n\");"
    },
    {
        "line": 247,
        "fullcodeline": "pkiDebug(\"failed to encode reply_key_pack\\n\");"
    },
    {
        "line": 257,
        "fullcodeline": "(unsigned char *)encoded_key_pack->data,"
    },
    {
        "line": 267,
        "fullcodeline": "init_krb5_reply_key_pack_draft9(&key_pack9);"
    },
    {
        "line": 273,
        "fullcodeline": "krb5_copy_keyblock_contents(context, encrypting_key,"
    },
    {
        "line": 276,
        "fullcodeline": "retval = k5int_encode_krb5_reply_key_pack_draft9(key_pack9,"
    },
    {
        "line": 287,
        "fullcodeline": "(unsigned char *)encoded_key_pack->data,"
    },
    {
        "line": 330,
        "fullcodeline": "error_message(retval));"
    },
    {
        "line": 374,
        "fullcodeline": "error_message(retval));"
    },
    {
        "line": 383,
        "fullcodeline": "pkiDebug(\"pkinit_octetstring2key failed: %s\\n\","
    },
    {
        "line": 268,
        "fullcodeline": "if (key_pack9 == NULL) {"
    },
    {
        "line": 384,
        "fullcodeline": "error_message(retval));"
    },
    {
        "line": 269,
        "fullcodeline": "retval = ENOMEM;"
    },
    {
        "line": 279,
        "fullcodeline": "pkiDebug(\"failed to encode reply_key_pack\\n\");"
    }
]