[
    {
        "line": 4,
        "fullcodeline": "struct gsm_dlci *dlci = gsm->dlci[0];"
    },
    {
        "line": 7,
        "fullcodeline": "gsm->dead = true;"
    },
    {
        "line": 8,
        "fullcodeline": "mutex_lock(&gsm->mutex);"
    },
    {
        "line": 19,
        "fullcodeline": "del_timer_sync(&gsm->kick_timer);"
    },
    {
        "line": 20,
        "fullcodeline": "del_timer_sync(&gsm->t2_timer);"
    },
    {
        "line": 21,
        "fullcodeline": "del_timer_sync(&gsm->ka_timer);"
    },
    {
        "line": 24,
        "fullcodeline": "flush_work(&gsm->tx_work);"
    },
    {
        "line": 36,
        "fullcodeline": "mutex_unlock(&gsm->mutex);"
    },
    {
        "line": 38,
        "fullcodeline": "tty_ldisc_flush(gsm->tty);"
    },
    {
        "line": 39,
        "fullcodeline": "list_for_each_entry_safe(txq, ntxq, &gsm->tx_ctrl_list, list)"
    },
    {
        "line": 40,
        "fullcodeline": "kfree(txq);"
    },
    {
        "line": 41,
        "fullcodeline": "INIT_LIST_HEAD(&gsm->tx_ctrl_list);"
    },
    {
        "line": 42,
        "fullcodeline": "list_for_each_entry_safe(txq, ntxq, &gsm->tx_data_list, list)"
    },
    {
        "line": 43,
        "fullcodeline": "kfree(txq);"
    },
    {
        "line": 44,
        "fullcodeline": "INIT_LIST_HEAD(&gsm->tx_data_list);"
    },
    {
        "line": 31,
        "fullcodeline": "for (i = NUM_DLCI - 1; i >= 0; i--)"
    },
    {
        "line": 15,
        "fullcodeline": "dlci->dead = true;"
    },
    {
        "line": 28,
        "fullcodeline": "gsm_unregister_devices(gsm_tty_driver, gsm->num);"
    },
    {
        "line": 29,
        "fullcodeline": "gsm->has_devices = false;"
    },
    {
        "line": 11,
        "fullcodeline": "if (disc && dlci->state != DLCI_CLOSED) {"
    },
    {
        "line": 33,
        "fullcodeline": "gsm_dlci_release(gsm->dlci[i]);"
    },
    {
        "line": 34,
        "fullcodeline": "gsm->dlci[i] = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "gsm_dlci_begin_close(dlci);"
    },
    {
        "line": 13,
        "fullcodeline": "wait_event(gsm->event, dlci->state == DLCI_CLOSED);"
    }
]