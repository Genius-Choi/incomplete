[
    {
        "line": 3,
        "fullcodeline": "const int maxElementCount = 0x7fff; // Assume file corruption if more path elements than this"
    },
    {
        "line": 4,
        "fullcodeline": "qreal x0 = 0, y0 = 0;              // starting point"
    },
    {
        "line": 5,
        "fullcodeline": "qreal x = 0, y = 0;                // current point"
    },
    {
        "line": 6,
        "fullcodeline": "char lastMode = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "const QChar *str = dataStr.constData();"
    },
    {
        "line": 9,
        "fullcodeline": "const QChar *end = str + dataStr.size();"
    },
    {
        "line": 11,
        "fullcodeline": "bool ok = true;"
    },
    {
        "line": 12,
        "fullcodeline": "while (ok && str != end) {"
    },
    {
        "line": 16,
        "fullcodeline": "++str;"
    },
    {
        "line": 18,
        "fullcodeline": "*const_cast<QChar *>(end) = u'\\0'; // parseNumbersArray requires 0-termination that QStringView cannot guarantee"
    },
    {
        "line": 19,
        "fullcodeline": "const char *pattern = nullptr;"
    },
    {
        "line": 22,
        "fullcodeline": "QVarLengthArray<qreal, 8> arg;"
    },
    {
        "line": 23,
        "fullcodeline": "parseNumbersArray(str, arg, pattern);"
    },
    {
        "line": 24,
        "fullcodeline": "*const_cast<QChar *>(end) = endc;"
    },
    {
        "line": 27,
        "fullcodeline": "const qreal *num = arg.constData();"
    },
    {
        "line": 28,
        "fullcodeline": "int count = arg.count();"
    },
    {
        "line": 13,
        "fullcodeline": "while (str->isSpace() && (str + 1) != end)"
    },
    {
        "line": 14,
        "fullcodeline": "++str;"
    },
    {
        "line": 20,
        "fullcodeline": "if (pathElem == QLatin1Char('a') || pathElem == QLatin1Char('A'))"
    },
    {
        "line": 25,
        "fullcodeline": "if (pathElem == QLatin1Char('z') || pathElem == QLatin1Char('Z'))"
    },
    {
        "line": 29,
        "fullcodeline": "while (ok && count > 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "pattern = \"rrrffrr\";"
    },
    {
        "line": 26,
        "fullcodeline": "arg.append(0);//dummy"
    },
    {
        "line": 30,
        "fullcodeline": "qreal offsetX = x;        // correction offsets"
    },
    {
        "line": 31,
        "fullcodeline": "qreal offsetY = y;        // for relative commands"
    },
    {
        "line": 321,
        "fullcodeline": "lastMode = pathElem.toLatin1();"
    },
    {
        "line": 32,
        "fullcodeline": "switch (pathElem.unicode()) {"
    },
    {
        "line": 322,
        "fullcodeline": "if (path.elementCount() > maxElementCount)"
    },
    {
        "line": 318,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 323,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 38,
        "fullcodeline": "x = x0 = num[0] + offsetX;"
    },
    {
        "line": 39,
        "fullcodeline": "y = y0 = num[1] + offsetY;"
    },
    {
        "line": 40,
        "fullcodeline": "num += 2;"
    },
    {
        "line": 41,
        "fullcodeline": "count -= 2;"
    },
    {
        "line": 42,
        "fullcodeline": "path.moveTo(x0, y0);"
    },
    {
        "line": 47,
        "fullcodeline": "pathElem = QLatin1Char('l');"
    },
    {
        "line": 55,
        "fullcodeline": "x = x0 = num[0];"
    },
    {
        "line": 56,
        "fullcodeline": "y = y0 = num[1];"
    },
    {
        "line": 57,
        "fullcodeline": "num += 2;"
    },
    {
        "line": 58,
        "fullcodeline": "count -= 2;"
    },
    {
        "line": 59,
        "fullcodeline": "path.moveTo(x0, y0);"
    },
    {
        "line": 64,
        "fullcodeline": "pathElem = QLatin1Char('L');"
    },
    {
        "line": 69,
        "fullcodeline": "x = x0;"
    },
    {
        "line": 70,
        "fullcodeline": "y = y0;"
    },
    {
        "line": 71,
        "fullcodeline": "count--; // skip dummy"
    },
    {
        "line": 72,
        "fullcodeline": "num++;"
    },
    {
        "line": 73,
        "fullcodeline": "path.closeSubpath();"
    },
    {
        "line": 81,
        "fullcodeline": "x = num[0] + offsetX;"
    },
    {
        "line": 82,
        "fullcodeline": "y = num[1] + offsetY;"
    },
    {
        "line": 83,
        "fullcodeline": "num += 2;"
    },
    {
        "line": 84,
        "fullcodeline": "count -= 2;"
    },
    {
        "line": 85,
        "fullcodeline": "path.lineTo(x, y);"
    },
    {
        "line": 94,
        "fullcodeline": "x = num[0];"
    },
    {
        "line": 95,
        "fullcodeline": "y = num[1];"
    },
    {
        "line": 96,
        "fullcodeline": "num += 2;"
    },
    {
        "line": 97,
        "fullcodeline": "count -= 2;"
    },
    {
        "line": 98,
        "fullcodeline": "path.lineTo(x, y);"
    },
    {
        "line": 102,
        "fullcodeline": "x = num[0] + offsetX;"
    },
    {
        "line": 103,
        "fullcodeline": "num++;"
    },
    {
        "line": 104,
        "fullcodeline": "count--;"
    },
    {
        "line": 105,
        "fullcodeline": "path.lineTo(x, y);"
    },
    {
        "line": 109,
        "fullcodeline": "x = num[0];"
    },
    {
        "line": 110,
        "fullcodeline": "num++;"
    },
    {
        "line": 111,
        "fullcodeline": "count--;"
    },
    {
        "line": 112,
        "fullcodeline": "path.lineTo(x, y);"
    },
    {
        "line": 116,
        "fullcodeline": "y = num[0] + offsetY;"
    },
    {
        "line": 117,
        "fullcodeline": "num++;"
    },
    {
        "line": 118,
        "fullcodeline": "count--;"
    },
    {
        "line": 119,
        "fullcodeline": "path.lineTo(x, y);"
    },
    {
        "line": 123,
        "fullcodeline": "y = num[0];"
    },
    {
        "line": 124,
        "fullcodeline": "num++;"
    },
    {
        "line": 125,
        "fullcodeline": "count--;"
    },
    {
        "line": 126,
        "fullcodeline": "path.lineTo(x, y);"
    },
    {
        "line": 134,
        "fullcodeline": "QPointF c1(num[0] + offsetX, num[1] + offsetY);"
    },
    {
        "line": 135,
        "fullcodeline": "QPointF c2(num[2] + offsetX, num[3] + offsetY);"
    },
    {
        "line": 136,
        "fullcodeline": "QPointF e(num[4] + offsetX, num[5] + offsetY);"
    },
    {
        "line": 137,
        "fullcodeline": "num += 6;"
    },
    {
        "line": 138,
        "fullcodeline": "count -= 6;"
    },
    {
        "line": 139,
        "fullcodeline": "path.cubicTo(c1, c2, e);"
    },
    {
        "line": 140,
        "fullcodeline": "ctrlPt = c2;"
    },
    {
        "line": 141,
        "fullcodeline": "x = e.x();"
    },
    {
        "line": 142,
        "fullcodeline": "y = e.y();"
    },
    {
        "line": 150,
        "fullcodeline": "QPointF c1(num[0], num[1]);"
    },
    {
        "line": 151,
        "fullcodeline": "QPointF c2(num[2], num[3]);"
    },
    {
        "line": 152,
        "fullcodeline": "QPointF e(num[4], num[5]);"
    },
    {
        "line": 153,
        "fullcodeline": "num += 6;"
    },
    {
        "line": 154,
        "fullcodeline": "count -= 6;"
    },
    {
        "line": 155,
        "fullcodeline": "path.cubicTo(c1, c2, e);"
    },
    {
        "line": 156,
        "fullcodeline": "ctrlPt = c2;"
    },
    {
        "line": 157,
        "fullcodeline": "x = e.x();"
    },
    {
        "line": 158,
        "fullcodeline": "y = e.y();"
    },
    {
        "line": 172,
        "fullcodeline": "QPointF c2(num[0] + offsetX, num[1] + offsetY);"
    },
    {
        "line": 173,
        "fullcodeline": "QPointF e(num[2] + offsetX, num[3] + offsetY);"
    },
    {
        "line": 174,
        "fullcodeline": "num += 4;"
    },
    {
        "line": 175,
        "fullcodeline": "count -= 4;"
    },
    {
        "line": 176,
        "fullcodeline": "path.cubicTo(c1, c2, e);"
    },
    {
        "line": 177,
        "fullcodeline": "ctrlPt = c2;"
    },
    {
        "line": 178,
        "fullcodeline": "x = e.x();"
    },
    {
        "line": 179,
        "fullcodeline": "y = e.y();"
    },
    {
        "line": 193,
        "fullcodeline": "QPointF c2(num[0], num[1]);"
    },
    {
        "line": 194,
        "fullcodeline": "QPointF e(num[2], num[3]);"
    },
    {
        "line": 195,
        "fullcodeline": "num += 4;"
    },
    {
        "line": 196,
        "fullcodeline": "count -= 4;"
    },
    {
        "line": 197,
        "fullcodeline": "path.cubicTo(c1, c2, e);"
    },
    {
        "line": 198,
        "fullcodeline": "ctrlPt = c2;"
    },
    {
        "line": 199,
        "fullcodeline": "x = e.x();"
    },
    {
        "line": 200,
        "fullcodeline": "y = e.y();"
    },
    {
        "line": 208,
        "fullcodeline": "QPointF c(num[0] + offsetX, num[1] + offsetY);"
    },
    {
        "line": 209,
        "fullcodeline": "QPointF e(num[2] + offsetX, num[3] + offsetY);"
    },
    {
        "line": 210,
        "fullcodeline": "num += 4;"
    },
    {
        "line": 211,
        "fullcodeline": "count -= 4;"
    },
    {
        "line": 212,
        "fullcodeline": "path.quadTo(c, e);"
    },
    {
        "line": 213,
        "fullcodeline": "ctrlPt = c;"
    },
    {
        "line": 214,
        "fullcodeline": "x = e.x();"
    },
    {
        "line": 215,
        "fullcodeline": "y = e.y();"
    },
    {
        "line": 223,
        "fullcodeline": "QPointF c(num[0], num[1]);"
    },
    {
        "line": 224,
        "fullcodeline": "QPointF e(num[2], num[3]);"
    },
    {
        "line": 225,
        "fullcodeline": "num += 4;"
    },
    {
        "line": 226,
        "fullcodeline": "count -= 4;"
    },
    {
        "line": 227,
        "fullcodeline": "path.quadTo(c, e);"
    },
    {
        "line": 228,
        "fullcodeline": "ctrlPt = c;"
    },
    {
        "line": 229,
        "fullcodeline": "x = e.x();"
    },
    {
        "line": 230,
        "fullcodeline": "y = e.y();"
    },
    {
        "line": 238,
        "fullcodeline": "QPointF e(num[0] + offsetX, num[1] + offsetY);"
    },
    {
        "line": 239,
        "fullcodeline": "num += 2;"
    },
    {
        "line": 240,
        "fullcodeline": "count -= 2;"
    },
    {
        "line": 247,
        "fullcodeline": "path.quadTo(c, e);"
    },
    {
        "line": 248,
        "fullcodeline": "ctrlPt = c;"
    },
    {
        "line": 249,
        "fullcodeline": "x = e.x();"
    },
    {
        "line": 250,
        "fullcodeline": "y = e.y();"
    },
    {
        "line": 258,
        "fullcodeline": "QPointF e(num[0], num[1]);"
    },
    {
        "line": 259,
        "fullcodeline": "num += 2;"
    },
    {
        "line": 260,
        "fullcodeline": "count -= 2;"
    },
    {
        "line": 267,
        "fullcodeline": "path.quadTo(c, e);"
    },
    {
        "line": 268,
        "fullcodeline": "ctrlPt = c;"
    },
    {
        "line": 269,
        "fullcodeline": "x = e.x();"
    },
    {
        "line": 270,
        "fullcodeline": "y = e.y();"
    },
    {
        "line": 283,
        "fullcodeline": "qreal ex = (*num++) + offsetX;"
    },
    {
        "line": 284,
        "fullcodeline": "qreal ey = (*num++) + offsetY;"
    },
    {
        "line": 285,
        "fullcodeline": "count -= 7;"
    },
    {
        "line": 286,
        "fullcodeline": "qreal curx = x;"
    },
    {
        "line": 287,
        "fullcodeline": "qreal cury = y;"
    },
    {
        "line": 288,
        "fullcodeline": "pathArc(path, rx, ry, xAxisRotation, int(largeArcFlag),"
    },
    {
        "line": 291,
        "fullcodeline": "x = ex;"
    },
    {
        "line": 292,
        "fullcodeline": "y = ey;"
    },
    {
        "line": 307,
        "fullcodeline": "count -= 7;"
    },
    {
        "line": 308,
        "fullcodeline": "qreal curx = x;"
    },
    {
        "line": 309,
        "fullcodeline": "qreal cury = y;"
    },
    {
        "line": 310,
        "fullcodeline": "pathArc(path, rx, ry, xAxisRotation, int(largeArcFlag),"
    },
    {
        "line": 313,
        "fullcodeline": "x = ex;"
    },
    {
        "line": 314,
        "fullcodeline": "y = ey;"
    },
    {
        "line": 34,
        "fullcodeline": "if (count < 2) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (count < 2) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (count < 2) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (count < 2) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (count < 6) {"
    },
    {
        "line": 146,
        "fullcodeline": "if (count < 6) {"
    },
    {
        "line": 162,
        "fullcodeline": "if (count < 4) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (lastMode == 'c' || lastMode == 'C' ||"
    },
    {
        "line": 183,
        "fullcodeline": "if (count < 4) {"
    },
    {
        "line": 188,
        "fullcodeline": "if (lastMode == 'c' || lastMode == 'C' ||"
    },
    {
        "line": 204,
        "fullcodeline": "if (count < 4) {"
    },
    {
        "line": 219,
        "fullcodeline": "if (count < 4) {"
    },
    {
        "line": 234,
        "fullcodeline": "if (count < 2) {"
    },
    {
        "line": 242,
        "fullcodeline": "if (lastMode == 'q' || lastMode == 'Q' ||"
    },
    {
        "line": 254,
        "fullcodeline": "if (count < 2) {"
    },
    {
        "line": 262,
        "fullcodeline": "if (lastMode == 'q' || lastMode == 'Q' ||"
    },
    {
        "line": 274,
        "fullcodeline": "if (count < 7) {"
    },
    {
        "line": 289,
        "fullcodeline": "int(sweepFlag), ex, ey, curx, cury);"
    },
    {
        "line": 296,
        "fullcodeline": "if (count < 7) {"
    },
    {
        "line": 311,
        "fullcodeline": "int(sweepFlag), ex, ey, curx, cury);"
    },
    {
        "line": 35,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 52,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 78,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 91,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 131,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 147,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 163,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 168,
        "fullcodeline": "lastMode == 's' || lastMode == 'S')"
    },
    {
        "line": 169,
        "fullcodeline": "c1 = QPointF(2*x-ctrlPt.x(), 2*y-ctrlPt.y());"
    },
    {
        "line": 184,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 189,
        "fullcodeline": "lastMode == 's' || lastMode == 'S')"
    },
    {
        "line": 190,
        "fullcodeline": "c1 = QPointF(2*x-ctrlPt.x(), 2*y-ctrlPt.y());"
    },
    {
        "line": 205,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 220,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 235,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 243,
        "fullcodeline": "lastMode == 't' || lastMode == 'T')"
    },
    {
        "line": 244,
        "fullcodeline": "c = QPointF(2*x-ctrlPt.x(), 2*y-ctrlPt.y());"
    },
    {
        "line": 255,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 263,
        "fullcodeline": "lastMode == 't' || lastMode == 'T')"
    },
    {
        "line": 264,
        "fullcodeline": "c = QPointF(2*x-ctrlPt.x(), 2*y-ctrlPt.y());"
    },
    {
        "line": 275,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 278,
        "fullcodeline": "qreal rx = (*num++);"
    },
    {
        "line": 279,
        "fullcodeline": "qreal ry = (*num++);"
    },
    {
        "line": 280,
        "fullcodeline": "qreal xAxisRotation = (*num++);"
    },
    {
        "line": 281,
        "fullcodeline": "qreal largeArcFlag  = (*num++);"
    },
    {
        "line": 282,
        "fullcodeline": "qreal sweepFlag = (*num++);"
    },
    {
        "line": 297,
        "fullcodeline": "ok = false;"
    },
    {
        "line": 300,
        "fullcodeline": "qreal rx = (*num++);"
    },
    {
        "line": 301,
        "fullcodeline": "qreal ry = (*num++);"
    },
    {
        "line": 302,
        "fullcodeline": "qreal xAxisRotation = (*num++);"
    },
    {
        "line": 303,
        "fullcodeline": "qreal largeArcFlag  = (*num++);"
    },
    {
        "line": 304,
        "fullcodeline": "qreal sweepFlag = (*num++);"
    },
    {
        "line": 305,
        "fullcodeline": "qreal ex = (*num++);"
    },
    {
        "line": 306,
        "fullcodeline": "qreal ey = (*num++);"
    },
    {
        "line": 171,
        "fullcodeline": "c1 = QPointF(x, y);"
    },
    {
        "line": 192,
        "fullcodeline": "c1 = QPointF(x, y);"
    },
    {
        "line": 246,
        "fullcodeline": "c = QPointF(x, y);"
    },
    {
        "line": 266,
        "fullcodeline": "c = QPointF(x, y);"
    }
]