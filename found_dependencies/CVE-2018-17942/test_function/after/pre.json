[
    {
        "line": 3,
        "fullcodeline": "char buf[8];"
    },
    {
        "line": 6,
        "fullcodeline": "for (size = 0; size <= 8; size++)"
    },
    {
        "line": 16,
        "fullcodeline": "for (size = 0; size <= 8; size++)"
    },
    {
        "line": 35,
        "fullcodeline": "for (size = 0; size <= 8; size++)"
    },
    {
        "line": 8,
        "fullcodeline": "size_t length = size;"
    },
    {
        "line": 9,
        "fullcodeline": "char *result = my_asnprintf (NULL, &length, \"%d\", 12345);"
    },
    {
        "line": 21,
        "fullcodeline": "memcpy (buf, \"DEADBEEF\", 8);"
    },
    {
        "line": 22,
        "fullcodeline": "length = size;"
    },
    {
        "line": 23,
        "fullcodeline": "result = my_asnprintf (buf, &length, \"%d\", 12345);"
    },
    {
        "line": 40,
        "fullcodeline": "memcpy (buf, \"DEADBEEF\", 8);"
    },
    {
        "line": 41,
        "fullcodeline": "length = size;"
    },
    {
        "line": 42,
        "fullcodeline": "result = my_asnprintf (buf, &length, \"%2.0f\", 1.6314159265358979e+125);"
    },
    {
        "line": 10,
        "fullcodeline": "ASSERT (result != NULL);"
    },
    {
        "line": 11,
        "fullcodeline": "ASSERT (strcmp (result, \"12345\") == 0);"
    },
    {
        "line": 12,
        "fullcodeline": "ASSERT (length == 5);"
    },
    {
        "line": 24,
        "fullcodeline": "ASSERT (result != NULL);"
    },
    {
        "line": 25,
        "fullcodeline": "ASSERT (strcmp (result, \"12345\") == 0);"
    },
    {
        "line": 26,
        "fullcodeline": "ASSERT (length == 5);"
    },
    {
        "line": 27,
        "fullcodeline": "if (size < 5 + 1)"
    },
    {
        "line": 29,
        "fullcodeline": "ASSERT (memcmp (buf + size, &\"DEADBEEF\"[size], 8 - size) == 0);"
    },
    {
        "line": 30,
        "fullcodeline": "if (result != buf)"
    },
    {
        "line": 43,
        "fullcodeline": "ASSERT (result != NULL);"
    },
    {
        "line": 44,
        "fullcodeline": "ASSERT (strcmp (result, \"163141592653589790215729350939528493057529598899734151772468186268423257777068536614838678161083520756952076273094236944990208\") == 0);"
    },
    {
        "line": 45,
        "fullcodeline": "ASSERT (length == 126);"
    },
    {
        "line": 46,
        "fullcodeline": "if (size < 126 + 1)"
    },
    {
        "line": 48,
        "fullcodeline": "ASSERT (memcmp (buf + size, &\"DEADBEEF\"[size], 8 - size) == 0);"
    },
    {
        "line": 49,
        "fullcodeline": "if (result != buf)"
    },
    {
        "line": 28,
        "fullcodeline": "ASSERT (result != buf);"
    },
    {
        "line": 47,
        "fullcodeline": "ASSERT (result != buf);"
    }
]