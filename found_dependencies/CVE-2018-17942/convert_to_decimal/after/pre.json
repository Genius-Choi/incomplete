[
    {
        "line": 3,
        "fullcodeline": "mp_limb_t *a_ptr = a.limbs;"
    },
    {
        "line": 4,
        "fullcodeline": "size_t a_len = a.nlimbs;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t c_len = 9 * ((size_t)(a_len * (GMP_LIMB_BITS * 0.03345f)) + 1);"
    },
    {
        "line": 9,
        "fullcodeline": "char *c_ptr = (char *) malloc (xsum (xsum (extra_zeroes, c_len), 1));"
    },
    {
        "line": 10,
        "fullcodeline": "if (c_ptr != NULL)"
    },
    {
        "line": 12,
        "fullcodeline": "char *d_ptr = c_ptr;"
    },
    {
        "line": 45,
        "fullcodeline": "*d_ptr = '\\0';"
    },
    {
        "line": 13,
        "fullcodeline": "for (; extra_zeroes > 0; extra_zeroes--)"
    },
    {
        "line": 14,
        "fullcodeline": "*d_ptr++ = '0';"
    },
    {
        "line": 15,
        "fullcodeline": "while (a_len > 0)"
    },
    {
        "line": 39,
        "fullcodeline": "while (d_ptr > c_ptr && d_ptr[-1] == '0')"
    },
    {
        "line": 40,
        "fullcodeline": "d_ptr--;"
    },
    {
        "line": 42,
        "fullcodeline": "if (d_ptr == c_ptr)"
    },
    {
        "line": 18,
        "fullcodeline": "mp_limb_t remainder = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "mp_limb_t *ptr = a_ptr + a_len;"
    },
    {
        "line": 43,
        "fullcodeline": "*d_ptr++ = '0';"
    },
    {
        "line": 21,
        "fullcodeline": "for (count = a_len; count > 0; count--)"
    },
    {
        "line": 29,
        "fullcodeline": "for (count = 9; count > 0; count--)"
    },
    {
        "line": 35,
        "fullcodeline": "if (a_ptr[a_len - 1] == 0)"
    },
    {
        "line": 23,
        "fullcodeline": "mp_twolimb_t num ="
    },
    {
        "line": 25,
        "fullcodeline": "*ptr = num / 1000000000;"
    },
    {
        "line": 26,
        "fullcodeline": "remainder = num % 1000000000;"
    },
    {
        "line": 31,
        "fullcodeline": "*d_ptr++ = '0' + (remainder % 10);"
    },
    {
        "line": 32,
        "fullcodeline": "remainder = remainder / 10;"
    },
    {
        "line": 36,
        "fullcodeline": "a_len--;"
    },
    {
        "line": 24,
        "fullcodeline": "((mp_twolimb_t) remainder << GMP_LIMB_BITS) | *--ptr;"
    }
]