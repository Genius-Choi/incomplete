[
    {
        "line": 4,
        "fullcodeline": "struct packet_sock *po = pkt_sk(sk);"
    },
    {
        "line": 8,
        "fullcodeline": "struct net_device *dev = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "bool unlisted = false;"
    },
    {
        "line": 15,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 16,
        "fullcodeline": "spin_lock(&po->bind_lock);"
    },
    {
        "line": 36,
        "fullcodeline": "proto_curr = po->prot_hook.type;"
    },
    {
        "line": 37,
        "fullcodeline": "dev_curr = po->prot_hook.dev;"
    },
    {
        "line": 39,
        "fullcodeline": "need_rehook = proto_curr != proto || dev_curr != dev;"
    },
    {
        "line": 20,
        "fullcodeline": "dev = dev_get_by_name_rcu(sock_net(sk), name);"
    },
    {
        "line": 34,
        "fullcodeline": "dev_hold(dev);"
    },
    {
        "line": 52,
        "fullcodeline": "po->num = proto;"
    },
    {
        "line": 69,
        "fullcodeline": "if (proto == 0 || !need_rehook)"
    },
    {
        "line": 72,
        "fullcodeline": "if (!unlisted && (!dev || (dev->flags & IFF_UP))) {"
    },
    {
        "line": 73,
        "fullcodeline": "register_prot_hook(sk);"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 21,
        "fullcodeline": "if (!dev) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (unlikely(unlisted)) {"
    },
    {
        "line": 75,
        "fullcodeline": "sk->sk_err = ENETDOWN;"
    },
    {
        "line": 22,
        "fullcodeline": "ret = -ENODEV;"
    },
    {
        "line": 44,
        "fullcodeline": "__unregister_prot_hook(sk, true);"
    },
    {
        "line": 46,
        "fullcodeline": "dev_curr = po->prot_hook.dev;"
    },
    {
        "line": 56,
        "fullcodeline": "dev_put(dev);"
    },
    {
        "line": 58,
        "fullcodeline": "po->ifindex = -1;"
    },
    {
        "line": 59,
        "fullcodeline": "packet_cached_dev_reset(po);"
    },
    {
        "line": 26,
        "fullcodeline": "dev = dev_get_by_index_rcu(sock_net(sk), ifindex);"
    },
    {
        "line": 62,
        "fullcodeline": "po->ifindex = dev ? dev->ifindex : 0;"
    },
    {
        "line": 63,
        "fullcodeline": "packet_cached_dev_assign(po, dev);"
    },
    {
        "line": 76,
        "fullcodeline": "if (!sock_flag(sk, SOCK_DEAD))"
    },
    {
        "line": 77,
        "fullcodeline": "sk->sk_error_report(sk);"
    },
    {
        "line": 27,
        "fullcodeline": "if (!dev) {"
    },
    {
        "line": 48,
        "fullcodeline": "unlisted = !dev_get_by_index_rcu(sock_net(sk),"
    },
    {
        "line": 28,
        "fullcodeline": "ret = -ENODEV;"
    }
]