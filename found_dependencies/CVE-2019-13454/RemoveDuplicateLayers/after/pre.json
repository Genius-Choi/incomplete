[
    {
        "line": 10,
        "fullcodeline": "assert((*images) != (const Image *) NULL);"
    },
    {
        "line": 11,
        "fullcodeline": "assert((*images)->signature == MagickCoreSignature);"
    },
    {
        "line": 15,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 16,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 17,
        "fullcodeline": "image=GetFirstImageInList(*images);"
    },
    {
        "line": 41,
        "fullcodeline": "*images=GetFirstImageInList(*images);"
    },
    {
        "line": 12,
        "fullcodeline": "if ((*images)->debug != MagickFalse)"
    },
    {
        "line": 18,
        "fullcodeline": "for ( ; (next=GetNextImageInList(image)) != (Image *) NULL; image=next)"
    },
    {
        "line": 13,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 23,
        "fullcodeline": "bounds=CompareImagesBounds(image,next,CompareAnyLayer,exception);"
    },
    {
        "line": 20,
        "fullcodeline": "if ((image->columns != next->columns) || (image->rows != next->rows) ||"
    },
    {
        "line": 24,
        "fullcodeline": "if (bounds.x < 0)"
    },
    {
        "line": 21,
        "fullcodeline": "(image->page.x != next->page.x) || (image->page.y != next->page.y))"
    },
    {
        "line": 32,
        "fullcodeline": "time=1000*image->delay*PerceptibleReciprocal(image->ticks_per_second);"
    },
    {
        "line": 33,
        "fullcodeline": "time+=1000*next->delay*PerceptibleReciprocal(next->ticks_per_second);"
    },
    {
        "line": 34,
        "fullcodeline": "next->ticks_per_second=100L;"
    },
    {
        "line": 35,
        "fullcodeline": "next->delay=time*image->ticks_per_second/1000;"
    },
    {
        "line": 36,
        "fullcodeline": "next->iterations=image->iterations;"
    },
    {
        "line": 37,
        "fullcodeline": "*images=image;"
    },
    {
        "line": 38,
        "fullcodeline": "(void) DeleteImageFromList(images);"
    }
]