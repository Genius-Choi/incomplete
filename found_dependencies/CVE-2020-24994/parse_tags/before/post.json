[
    {
        "line": 3,
        "fullcodeline": "for (char *q; p < end; p = q) {"
    },
    {
        "line": 8,
        "fullcodeline": "++p;"
    },
    {
        "line": 12,
        "fullcodeline": "q = p;"
    },
    {
        "line": 18,
        "fullcodeline": "char *name_end = q;"
    },
    {
        "line": 21,
        "fullcodeline": "struct arg args[MAX_VALID_NARGS + 1];"
    },
    {
        "line": 22,
        "fullcodeline": "int nargs = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "while (*p != '\\\\' && p != end)"
    },
    {
        "line": 5,
        "fullcodeline": "++p;"
    },
    {
        "line": 6,
        "fullcodeline": "if (*p != '\\\\')"
    },
    {
        "line": 9,
        "fullcodeline": "if (p != end)"
    },
    {
        "line": 13,
        "fullcodeline": "while (*q != '(' && *q != '\\\\' && q != end)"
    },
    {
        "line": 14,
        "fullcodeline": "++q;"
    },
    {
        "line": 15,
        "fullcodeline": "if (q == p)"
    },
    {
        "line": 23,
        "fullcodeline": "for (int i = 0; i <= MAX_VALID_NARGS; ++i)"
    },
    {
        "line": 24,
        "fullcodeline": "args[i].start = args[i].end = \"\";"
    },
    {
        "line": 28,
        "fullcodeline": "if (*q == '(') {"
    },
    {
        "line": 65,
        "fullcodeline": "if (tag(\"xbord\")) {"
    },
    {
        "line": 10,
        "fullcodeline": "skip_spaces(&p);"
    },
    {
        "line": 29,
        "fullcodeline": "++q;"
    },
    {
        "line": 73,
        "fullcodeline": "render_priv->state.border_x = val;"
    },
    {
        "line": 39,
        "fullcodeline": "char *r = q;"
    },
    {
        "line": 68,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 69,
        "fullcodeline": "val = render_priv->state.border_x * (1 - pwr) + val * pwr;"
    },
    {
        "line": 70,
        "fullcodeline": "val = (val < 0) ? 0 : val;"
    },
    {
        "line": 74,
        "fullcodeline": "} else if (tag(\"ybord\")) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (q != end)"
    },
    {
        "line": 40,
        "fullcodeline": "while (*r != ',' && *r != '\\\\' && *r != ')' && r != end)"
    },
    {
        "line": 41,
        "fullcodeline": "++r;"
    },
    {
        "line": 43,
        "fullcodeline": "if (*r == ',') {"
    },
    {
        "line": 82,
        "fullcodeline": "render_priv->state.border_y = val;"
    },
    {
        "line": 32,
        "fullcodeline": "skip_spaces(&q);"
    },
    {
        "line": 44,
        "fullcodeline": "push_arg(args, &nargs, q, r);"
    },
    {
        "line": 45,
        "fullcodeline": "q = r + 1;"
    },
    {
        "line": 51,
        "fullcodeline": "push_arg(args, &nargs, q, r);"
    },
    {
        "line": 52,
        "fullcodeline": "q = r;"
    },
    {
        "line": 77,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 78,
        "fullcodeline": "val = render_priv->state.border_y * (1 - pwr) + val * pwr;"
    },
    {
        "line": 79,
        "fullcodeline": "val = (val < 0) ? 0 : val;"
    },
    {
        "line": 83,
        "fullcodeline": "} else if (tag(\"xshad\")) {"
    },
    {
        "line": 49,
        "fullcodeline": "while (*r != ')' && r != end)"
    },
    {
        "line": 50,
        "fullcodeline": "++r;"
    },
    {
        "line": 54,
        "fullcodeline": "if (q != end)"
    },
    {
        "line": 90,
        "fullcodeline": "render_priv->state.shadow_x = val;"
    },
    {
        "line": 55,
        "fullcodeline": "++q;"
    },
    {
        "line": 86,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 87,
        "fullcodeline": "val = render_priv->state.shadow_x * (1 - pwr) + val * pwr;"
    },
    {
        "line": 91,
        "fullcodeline": "} else if (tag(\"yshad\")) {"
    },
    {
        "line": 98,
        "fullcodeline": "render_priv->state.shadow_y = val;"
    },
    {
        "line": 94,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 95,
        "fullcodeline": "val = render_priv->state.shadow_y * (1 - pwr) + val * pwr;"
    },
    {
        "line": 99,
        "fullcodeline": "} else if (tag(\"fax\")) {"
    },
    {
        "line": 102,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 103,
        "fullcodeline": "render_priv->state.fax ="
    },
    {
        "line": 107,
        "fullcodeline": "} else if (tag(\"fay\")) {"
    },
    {
        "line": 104,
        "fullcodeline": "val * pwr + render_priv->state.fax * (1 - pwr);"
    },
    {
        "line": 106,
        "fullcodeline": "render_priv->state.fax = 0.;"
    },
    {
        "line": 110,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 111,
        "fullcodeline": "render_priv->state.fay ="
    },
    {
        "line": 115,
        "fullcodeline": "} else if (complex_tag(\"iclip\")) {"
    },
    {
        "line": 112,
        "fullcodeline": "val * pwr + render_priv->state.fay * (1 - pwr);"
    },
    {
        "line": 114,
        "fullcodeline": "render_priv->state.fay = 0.;"
    },
    {
        "line": 116,
        "fullcodeline": "if (nargs == 4) {"
    },
    {
        "line": 118,
        "fullcodeline": "x0 = argtoi(args[0]);"
    },
    {
        "line": 119,
        "fullcodeline": "y0 = argtoi(args[1]);"
    },
    {
        "line": 120,
        "fullcodeline": "x1 = argtoi(args[2]);"
    },
    {
        "line": 121,
        "fullcodeline": "y1 = argtoi(args[3]);"
    },
    {
        "line": 122,
        "fullcodeline": "render_priv->state.clip_x0 ="
    },
    {
        "line": 124,
        "fullcodeline": "render_priv->state.clip_x1 ="
    },
    {
        "line": 126,
        "fullcodeline": "render_priv->state.clip_y0 ="
    },
    {
        "line": 128,
        "fullcodeline": "render_priv->state.clip_y1 ="
    },
    {
        "line": 130,
        "fullcodeline": "render_priv->state.clip_mode = 1;"
    },
    {
        "line": 135,
        "fullcodeline": "} else if (tag(\"blur\")) {"
    },
    {
        "line": 123,
        "fullcodeline": "render_priv->state.clip_x0 * (1 - pwr) + x0 * pwr;"
    },
    {
        "line": 125,
        "fullcodeline": "render_priv->state.clip_x1 * (1 - pwr) + x1 * pwr;"
    },
    {
        "line": 127,
        "fullcodeline": "render_priv->state.clip_y0 * (1 - pwr) + y0 * pwr;"
    },
    {
        "line": 129,
        "fullcodeline": "render_priv->state.clip_y1 * (1 - pwr) + y1 * pwr;"
    },
    {
        "line": 138,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 139,
        "fullcodeline": "val = render_priv->state.blur * (1 - pwr) + val * pwr;"
    },
    {
        "line": 140,
        "fullcodeline": "val = (val < 0) ? 0 : val;"
    },
    {
        "line": 141,
        "fullcodeline": "val = (val > BLUR_MAX_RADIUS) ? BLUR_MAX_RADIUS : val;"
    },
    {
        "line": 142,
        "fullcodeline": "render_priv->state.blur = val;"
    },
    {
        "line": 146,
        "fullcodeline": "} else if (tag(\"fscx\")) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (parse_vector_clip(render_priv, args, nargs))"
    },
    {
        "line": 144,
        "fullcodeline": "render_priv->state.blur = 0.0;"
    },
    {
        "line": 154,
        "fullcodeline": "render_priv->state.scale_x = val;"
    },
    {
        "line": 133,
        "fullcodeline": "render_priv->state.clip_drawing_mode = 1;"
    },
    {
        "line": 149,
        "fullcodeline": "val = argtod(*args) / 100;"
    },
    {
        "line": 150,
        "fullcodeline": "val = render_priv->state.scale_x * (1 - pwr) + val * pwr;"
    },
    {
        "line": 151,
        "fullcodeline": "val = (val < 0) ? 0 : val;"
    },
    {
        "line": 155,
        "fullcodeline": "} else if (tag(\"fscy\")) {"
    },
    {
        "line": 163,
        "fullcodeline": "render_priv->state.scale_y = val;"
    },
    {
        "line": 158,
        "fullcodeline": "val = argtod(*args) / 100;"
    },
    {
        "line": 159,
        "fullcodeline": "val = render_priv->state.scale_y * (1 - pwr) + val * pwr;"
    },
    {
        "line": 160,
        "fullcodeline": "val = (val < 0) ? 0 : val;"
    },
    {
        "line": 164,
        "fullcodeline": "} else if (tag(\"fsc\")) {"
    },
    {
        "line": 167,
        "fullcodeline": "} else if (tag(\"fsp\")) {"
    },
    {
        "line": 170,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 171,
        "fullcodeline": "render_priv->state.hspacing ="
    },
    {
        "line": 175,
        "fullcodeline": "} else if (tag(\"fs\")) {"
    },
    {
        "line": 172,
        "fullcodeline": "render_priv->state.hspacing * (1 - pwr) + val * pwr;"
    },
    {
        "line": 176,
        "fullcodeline": "double val = 0;"
    },
    {
        "line": 184,
        "fullcodeline": "if (val <= 0)"
    },
    {
        "line": 178,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 187,
        "fullcodeline": "change_font_size(render_priv, val);"
    },
    {
        "line": 188,
        "fullcodeline": "} else if (tag(\"bord\")) {"
    },
    {
        "line": 179,
        "fullcodeline": "if (*args->start == '+' || *args->start == '-')"
    },
    {
        "line": 198,
        "fullcodeline": "render_priv->state.border_x = xval;"
    },
    {
        "line": 199,
        "fullcodeline": "render_priv->state.border_y = yval;"
    },
    {
        "line": 180,
        "fullcodeline": "val = render_priv->state.font_size * (1 + pwr * val / 10);"
    },
    {
        "line": 182,
        "fullcodeline": "val = render_priv->state.font_size * (1 - pwr) + val * pwr;"
    },
    {
        "line": 191,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 192,
        "fullcodeline": "xval = render_priv->state.border_x * (1 - pwr) + val * pwr;"
    },
    {
        "line": 193,
        "fullcodeline": "yval = render_priv->state.border_y * (1 - pwr) + val * pwr;"
    },
    {
        "line": 194,
        "fullcodeline": "xval = (xval < 0) ? 0 : xval;"
    },
    {
        "line": 195,
        "fullcodeline": "yval = (yval < 0) ? 0 : yval;"
    },
    {
        "line": 200,
        "fullcodeline": "} else if (complex_tag(\"move\")) {"
    },
    {
        "line": 197,
        "fullcodeline": "xval = yval = render_priv->state.style->Outline;"
    },
    {
        "line": 226,
        "fullcodeline": "delta_t = t2 - t1;"
    },
    {
        "line": 227,
        "fullcodeline": "t = render_priv->time - render_priv->state.event->Start;"
    },
    {
        "line": 234,
        "fullcodeline": "x = k * (x2 - x1) + x1;"
    },
    {
        "line": 235,
        "fullcodeline": "y = k * (y2 - y1) + y1;"
    },
    {
        "line": 205,
        "fullcodeline": "if (nargs == 4 || nargs == 6) {"
    },
    {
        "line": 222,
        "fullcodeline": "if (t1 <= 0 && t2 <= 0) {"
    },
    {
        "line": 228,
        "fullcodeline": "if (t <= t1)"
    },
    {
        "line": 236,
        "fullcodeline": "if (render_priv->state.evt_type != EVENT_POSITIONED) {"
    },
    {
        "line": 206,
        "fullcodeline": "x1 = argtod(args[0]);"
    },
    {
        "line": 207,
        "fullcodeline": "y1 = argtod(args[1]);"
    },
    {
        "line": 208,
        "fullcodeline": "x2 = argtod(args[2]);"
    },
    {
        "line": 209,
        "fullcodeline": "y2 = argtod(args[3]);"
    },
    {
        "line": 210,
        "fullcodeline": "t1 = t2 = 0;"
    },
    {
        "line": 223,
        "fullcodeline": "t1 = 0;"
    },
    {
        "line": 229,
        "fullcodeline": "k = 0.;"
    },
    {
        "line": 237,
        "fullcodeline": "render_priv->state.pos_x = x;"
    },
    {
        "line": 238,
        "fullcodeline": "render_priv->state.pos_y = y;"
    },
    {
        "line": 239,
        "fullcodeline": "render_priv->state.detect_collisions = 0;"
    },
    {
        "line": 240,
        "fullcodeline": "render_priv->state.evt_type = EVENT_POSITIONED;"
    },
    {
        "line": 242,
        "fullcodeline": "} else if (tag(\"frx\")) {"
    },
    {
        "line": 211,
        "fullcodeline": "if (nargs == 6) {"
    },
    {
        "line": 212,
        "fullcodeline": "t1 = argtoll(args[4]);"
    },
    {
        "line": 213,
        "fullcodeline": "t2 = argtoll(args[5]);"
    },
    {
        "line": 230,
        "fullcodeline": "else if (t >= t2)"
    },
    {
        "line": 214,
        "fullcodeline": "if (t1 > t2) {"
    },
    {
        "line": 231,
        "fullcodeline": "k = 1.;"
    },
    {
        "line": 245,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 246,
        "fullcodeline": "val *= M_PI / 180;"
    },
    {
        "line": 247,
        "fullcodeline": "render_priv->state.frx ="
    },
    {
        "line": 251,
        "fullcodeline": "} else if (tag(\"fry\")) {"
    },
    {
        "line": 215,
        "fullcodeline": "long long tmp = t2;"
    },
    {
        "line": 216,
        "fullcodeline": "t2 = t1;"
    },
    {
        "line": 217,
        "fullcodeline": "t1 = tmp;"
    },
    {
        "line": 233,
        "fullcodeline": "k = ((double) (t - t1)) / delta_t;"
    },
    {
        "line": 248,
        "fullcodeline": "val * pwr + render_priv->state.frx * (1 - pwr);"
    },
    {
        "line": 250,
        "fullcodeline": "render_priv->state.frx = 0.;"
    },
    {
        "line": 254,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 255,
        "fullcodeline": "val *= M_PI / 180;"
    },
    {
        "line": 256,
        "fullcodeline": "render_priv->state.fry ="
    },
    {
        "line": 260,
        "fullcodeline": "} else if (tag(\"frz\") || tag(\"fr\")) {"
    },
    {
        "line": 257,
        "fullcodeline": "val * pwr + render_priv->state.fry * (1 - pwr);"
    },
    {
        "line": 259,
        "fullcodeline": "render_priv->state.fry = 0.;"
    },
    {
        "line": 263,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 264,
        "fullcodeline": "val *= M_PI / 180;"
    },
    {
        "line": 265,
        "fullcodeline": "render_priv->state.frz ="
    },
    {
        "line": 270,
        "fullcodeline": "} else if (tag(\"fn\")) {"
    },
    {
        "line": 266,
        "fullcodeline": "val * pwr + render_priv->state.frz * (1 - pwr);"
    },
    {
        "line": 268,
        "fullcodeline": "render_priv->state.frz ="
    },
    {
        "line": 272,
        "fullcodeline": "char *start = args->start;"
    },
    {
        "line": 279,
        "fullcodeline": "render_priv->state.family = family;"
    },
    {
        "line": 280,
        "fullcodeline": "update_font(render_priv);"
    },
    {
        "line": 269,
        "fullcodeline": "M_PI * render_priv->state.style->Angle / 180.;"
    },
    {
        "line": 273,
        "fullcodeline": "if (nargs && strncmp(start, \"0\", args->end - start)) {"
    },
    {
        "line": 274,
        "fullcodeline": "skip_spaces(&start);"
    },
    {
        "line": 275,
        "fullcodeline": "family = strndup(start, args->end - start);"
    },
    {
        "line": 281,
        "fullcodeline": "} else if (tag(\"alpha\")) {"
    },
    {
        "line": 277,
        "fullcodeline": "family = strdup(render_priv->state.style->FontName);"
    },
    {
        "line": 284,
        "fullcodeline": "int32_t a = parse_alpha_tag(args->start);"
    },
    {
        "line": 298,
        "fullcodeline": "} else if (tag(\"an\")) {"
    },
    {
        "line": 285,
        "fullcodeline": "for (i = 0; i < 4; ++i)"
    },
    {
        "line": 286,
        "fullcodeline": "change_alpha(&render_priv->state.c[i], a, pwr);"
    },
    {
        "line": 288,
        "fullcodeline": "change_alpha(&render_priv->state.c[0],"
    },
    {
        "line": 290,
        "fullcodeline": "change_alpha(&render_priv->state.c[1],"
    },
    {
        "line": 292,
        "fullcodeline": "change_alpha(&render_priv->state.c[2],"
    },
    {
        "line": 294,
        "fullcodeline": "change_alpha(&render_priv->state.c[3],"
    },
    {
        "line": 299,
        "fullcodeline": "int val = argtoi(*args);"
    },
    {
        "line": 300,
        "fullcodeline": "if ((render_priv->state.parsed_tags & PARSED_A) == 0) {"
    },
    {
        "line": 306,
        "fullcodeline": "render_priv->state.parsed_tags |= PARSED_A;"
    },
    {
        "line": 308,
        "fullcodeline": "} else if (tag(\"a\")) {"
    },
    {
        "line": 301,
        "fullcodeline": "if (val >= 1 && val <= 9)"
    },
    {
        "line": 309,
        "fullcodeline": "int val = argtoi(*args);"
    },
    {
        "line": 302,
        "fullcodeline": "render_priv->state.alignment = numpad2align(val);"
    },
    {
        "line": 310,
        "fullcodeline": "if ((render_priv->state.parsed_tags & PARSED_A) == 0) {"
    },
    {
        "line": 318,
        "fullcodeline": "render_priv->state.parsed_tags |= PARSED_A;"
    },
    {
        "line": 320,
        "fullcodeline": "} else if (complex_tag(\"pos\")) {"
    },
    {
        "line": 311,
        "fullcodeline": "if (val >= 1 && val <= 11)"
    },
    {
        "line": 314,
        "fullcodeline": "render_priv->state.alignment = ((val & 3) == 0) ? 5 : val;"
    },
    {
        "line": 322,
        "fullcodeline": "if (nargs == 2) {"
    },
    {
        "line": 327,
        "fullcodeline": "if (render_priv->state.evt_type == EVENT_POSITIONED) {"
    },
    {
        "line": 323,
        "fullcodeline": "v1 = argtod(args[0]);"
    },
    {
        "line": 324,
        "fullcodeline": "v2 = argtod(args[1]);"
    },
    {
        "line": 328,
        "fullcodeline": "ass_msg(render_priv->library, MSGL_V, \"Subtitle has a new \\\\pos \""
    },
    {
        "line": 336,
        "fullcodeline": "} else if (complex_tag(\"fade\") || complex_tag(\"fad\")) {"
    },
    {
        "line": 331,
        "fullcodeline": "render_priv->state.evt_type = EVENT_POSITIONED;"
    },
    {
        "line": 332,
        "fullcodeline": "render_priv->state.detect_collisions = 0;"
    },
    {
        "line": 333,
        "fullcodeline": "render_priv->state.pos_x = v1;"
    },
    {
        "line": 334,
        "fullcodeline": "render_priv->state.pos_y = v2;"
    },
    {
        "line": 339,
        "fullcodeline": "if (nargs == 2) {"
    },
    {
        "line": 359,
        "fullcodeline": "if (t1 == -1 && t4 == -1) {"
    },
    {
        "line": 364,
        "fullcodeline": "if ((render_priv->state.parsed_tags & PARSED_FADE) == 0) {"
    },
    {
        "line": 341,
        "fullcodeline": "a1 = 0xFF;"
    },
    {
        "line": 342,
        "fullcodeline": "a2 = 0;"
    },
    {
        "line": 343,
        "fullcodeline": "a3 = 0xFF;"
    },
    {
        "line": 344,
        "fullcodeline": "t1 = -1;"
    },
    {
        "line": 345,
        "fullcodeline": "t2 = argtoll(args[0]);"
    },
    {
        "line": 346,
        "fullcodeline": "t3 = argtoll(args[1]);"
    },
    {
        "line": 347,
        "fullcodeline": "t4 = -1;"
    },
    {
        "line": 360,
        "fullcodeline": "t1 = 0;"
    },
    {
        "line": 362,
        "fullcodeline": "t3 = t4 - t3;"
    },
    {
        "line": 365,
        "fullcodeline": "render_priv->state.fade ="
    },
    {
        "line": 369,
        "fullcodeline": "render_priv->state.parsed_tags |= PARSED_FADE;"
    },
    {
        "line": 371,
        "fullcodeline": "} else if (complex_tag(\"org\")) {"
    },
    {
        "line": 366,
        "fullcodeline": "interpolate_alpha(render_priv->time -"
    },
    {
        "line": 348,
        "fullcodeline": "} else if (nargs == 7) {"
    },
    {
        "line": 373,
        "fullcodeline": "if (nargs == 2) {"
    },
    {
        "line": 350,
        "fullcodeline": "a1 = argtoi(args[0]);"
    },
    {
        "line": 351,
        "fullcodeline": "a2 = argtoi(args[1]);"
    },
    {
        "line": 352,
        "fullcodeline": "a3 = argtoi(args[2]);"
    },
    {
        "line": 353,
        "fullcodeline": "t1 = argtoll(args[3]);"
    },
    {
        "line": 354,
        "fullcodeline": "t2 = argtoll(args[4]);"
    },
    {
        "line": 355,
        "fullcodeline": "t3 = argtoll(args[5]);"
    },
    {
        "line": 356,
        "fullcodeline": "t4 = argtoll(args[6]);"
    },
    {
        "line": 374,
        "fullcodeline": "v1 = argtod(args[0]);"
    },
    {
        "line": 375,
        "fullcodeline": "v2 = argtod(args[1]);"
    },
    {
        "line": 379,
        "fullcodeline": "render_priv->state.org_x = v1;"
    },
    {
        "line": 380,
        "fullcodeline": "render_priv->state.org_y = v2;"
    },
    {
        "line": 381,
        "fullcodeline": "render_priv->state.have_origin = 1;"
    },
    {
        "line": 382,
        "fullcodeline": "render_priv->state.detect_collisions = 0;"
    },
    {
        "line": 384,
        "fullcodeline": "} else if (complex_tag(\"t\")) {"
    },
    {
        "line": 386,
        "fullcodeline": "int cnt = nargs - 1;"
    },
    {
        "line": 407,
        "fullcodeline": "render_priv->state.detect_collisions = 0;"
    },
    {
        "line": 410,
        "fullcodeline": "delta_t = t2 - t1;"
    },
    {
        "line": 411,
        "fullcodeline": "t = render_priv->time - render_priv->state.event->Start;        // FIXME: move to render_context"
    },
    {
        "line": 421,
        "fullcodeline": "p = parse_tags(render_priv, p, args[cnt].end, k);    // maybe k*pwr ? no, specs forbid nested \\t's"
    },
    {
        "line": 389,
        "fullcodeline": "if (cnt == 3) {"
    },
    {
        "line": 408,
        "fullcodeline": "if (t2 == 0)"
    },
    {
        "line": 412,
        "fullcodeline": "if (t <= t1)"
    },
    {
        "line": 390,
        "fullcodeline": "t1 = argtoll(args[0]);"
    },
    {
        "line": 391,
        "fullcodeline": "t2 = argtoll(args[1]);"
    },
    {
        "line": 392,
        "fullcodeline": "accel = argtod(args[2]);"
    },
    {
        "line": 413,
        "fullcodeline": "k = 0.;"
    },
    {
        "line": 422,
        "fullcodeline": "} else if (complex_tag(\"clip\")) {"
    },
    {
        "line": 393,
        "fullcodeline": "} else if (cnt == 2) {"
    },
    {
        "line": 414,
        "fullcodeline": "else if (t >= t2)"
    },
    {
        "line": 423,
        "fullcodeline": "if (nargs == 4) {"
    },
    {
        "line": 394,
        "fullcodeline": "t1 = argtoll(args[0]);"
    },
    {
        "line": 395,
        "fullcodeline": "t2 = argtoll(args[1]);"
    },
    {
        "line": 396,
        "fullcodeline": "accel = 1.;"
    },
    {
        "line": 415,
        "fullcodeline": "k = 1.;"
    },
    {
        "line": 425,
        "fullcodeline": "x0 = argtoi(args[0]);"
    },
    {
        "line": 426,
        "fullcodeline": "y0 = argtoi(args[1]);"
    },
    {
        "line": 427,
        "fullcodeline": "x1 = argtoi(args[2]);"
    },
    {
        "line": 428,
        "fullcodeline": "y1 = argtoi(args[3]);"
    },
    {
        "line": 429,
        "fullcodeline": "render_priv->state.clip_x0 ="
    },
    {
        "line": 431,
        "fullcodeline": "render_priv->state.clip_x1 ="
    },
    {
        "line": 433,
        "fullcodeline": "render_priv->state.clip_y0 ="
    },
    {
        "line": 435,
        "fullcodeline": "render_priv->state.clip_y1 ="
    },
    {
        "line": 437,
        "fullcodeline": "render_priv->state.clip_mode = 0;"
    },
    {
        "line": 442,
        "fullcodeline": "} else if (tag(\"c\") || tag(\"1c\")) {"
    },
    {
        "line": 417,
        "fullcodeline": "assert(delta_t != 0.);"
    },
    {
        "line": 418,
        "fullcodeline": "k = pow(((double) (t - t1)) / delta_t, accel);"
    },
    {
        "line": 430,
        "fullcodeline": "render_priv->state.clip_x0 * (1 - pwr) + x0 * pwr;"
    },
    {
        "line": 432,
        "fullcodeline": "render_priv->state.clip_x1 * (1 - pwr) + x1 * pwr;"
    },
    {
        "line": 434,
        "fullcodeline": "render_priv->state.clip_y0 * (1 - pwr) + y0 * pwr;"
    },
    {
        "line": 436,
        "fullcodeline": "render_priv->state.clip_y1 * (1 - pwr) + y1 * pwr;"
    },
    {
        "line": 397,
        "fullcodeline": "} else if (cnt == 1) {"
    },
    {
        "line": 398,
        "fullcodeline": "t1 = 0;"
    },
    {
        "line": 399,
        "fullcodeline": "t2 = 0;"
    },
    {
        "line": 400,
        "fullcodeline": "accel = argtod(args[0]);"
    },
    {
        "line": 444,
        "fullcodeline": "uint32_t val = parse_color_tag(args->start);"
    },
    {
        "line": 445,
        "fullcodeline": "change_color(&render_priv->state.c[0], val, pwr);"
    },
    {
        "line": 449,
        "fullcodeline": "} else if (tag(\"2c\")) {"
    },
    {
        "line": 439,
        "fullcodeline": "if (parse_vector_clip(render_priv, args, nargs))"
    },
    {
        "line": 447,
        "fullcodeline": "change_color(&render_priv->state.c[0],"
    },
    {
        "line": 401,
        "fullcodeline": "} else if (cnt == 0) {"
    },
    {
        "line": 440,
        "fullcodeline": "render_priv->state.clip_drawing_mode = 0;"
    },
    {
        "line": 402,
        "fullcodeline": "t1 = 0;"
    },
    {
        "line": 403,
        "fullcodeline": "t2 = 0;"
    },
    {
        "line": 404,
        "fullcodeline": "accel = 1.;"
    },
    {
        "line": 451,
        "fullcodeline": "uint32_t val = parse_color_tag(args->start);"
    },
    {
        "line": 452,
        "fullcodeline": "change_color(&render_priv->state.c[1], val, pwr);"
    },
    {
        "line": 456,
        "fullcodeline": "} else if (tag(\"3c\")) {"
    },
    {
        "line": 454,
        "fullcodeline": "change_color(&render_priv->state.c[1],"
    },
    {
        "line": 458,
        "fullcodeline": "uint32_t val = parse_color_tag(args->start);"
    },
    {
        "line": 459,
        "fullcodeline": "change_color(&render_priv->state.c[2], val, pwr);"
    },
    {
        "line": 463,
        "fullcodeline": "} else if (tag(\"4c\")) {"
    },
    {
        "line": 461,
        "fullcodeline": "change_color(&render_priv->state.c[2],"
    },
    {
        "line": 465,
        "fullcodeline": "uint32_t val = parse_color_tag(args->start);"
    },
    {
        "line": 466,
        "fullcodeline": "change_color(&render_priv->state.c[3], val, pwr);"
    },
    {
        "line": 470,
        "fullcodeline": "} else if (tag(\"1a\")) {"
    },
    {
        "line": 468,
        "fullcodeline": "change_color(&render_priv->state.c[3],"
    },
    {
        "line": 472,
        "fullcodeline": "uint32_t val = parse_alpha_tag(args->start);"
    },
    {
        "line": 473,
        "fullcodeline": "change_alpha(&render_priv->state.c[0], val, pwr);"
    },
    {
        "line": 477,
        "fullcodeline": "} else if (tag(\"2a\")) {"
    },
    {
        "line": 475,
        "fullcodeline": "change_alpha(&render_priv->state.c[0],"
    },
    {
        "line": 479,
        "fullcodeline": "uint32_t val = parse_alpha_tag(args->start);"
    },
    {
        "line": 480,
        "fullcodeline": "change_alpha(&render_priv->state.c[1], val, pwr);"
    },
    {
        "line": 484,
        "fullcodeline": "} else if (tag(\"3a\")) {"
    },
    {
        "line": 482,
        "fullcodeline": "change_alpha(&render_priv->state.c[1],"
    },
    {
        "line": 486,
        "fullcodeline": "uint32_t val = parse_alpha_tag(args->start);"
    },
    {
        "line": 487,
        "fullcodeline": "change_alpha(&render_priv->state.c[2], val, pwr);"
    },
    {
        "line": 491,
        "fullcodeline": "} else if (tag(\"4a\")) {"
    },
    {
        "line": 489,
        "fullcodeline": "change_alpha(&render_priv->state.c[2],"
    },
    {
        "line": 493,
        "fullcodeline": "uint32_t val = parse_alpha_tag(args->start);"
    },
    {
        "line": 494,
        "fullcodeline": "change_alpha(&render_priv->state.c[3], val, pwr);"
    },
    {
        "line": 498,
        "fullcodeline": "} else if (tag(\"r\")) {"
    },
    {
        "line": 496,
        "fullcodeline": "change_alpha(&render_priv->state.c[3],"
    },
    {
        "line": 500,
        "fullcodeline": "int len = args->end - args->start;"
    },
    {
        "line": 501,
        "fullcodeline": "reset_render_context(render_priv,"
    },
    {
        "line": 505,
        "fullcodeline": "} else if (tag(\"be\")) {"
    },
    {
        "line": 502,
        "fullcodeline": "lookup_style_strict(render_priv->track, args->start, len));"
    },
    {
        "line": 504,
        "fullcodeline": "reset_render_context(render_priv, NULL);"
    },
    {
        "line": 509,
        "fullcodeline": "dval = argtod(*args);"
    },
    {
        "line": 511,
        "fullcodeline": "val = (int) (render_priv->state.be * (1 - pwr) + dval * pwr + 0.5);"
    },
    {
        "line": 513,
        "fullcodeline": "val = (val < 0) ? 0 : val;"
    },
    {
        "line": 514,
        "fullcodeline": "val = (val > MAX_BE) ? MAX_BE : val;"
    },
    {
        "line": 515,
        "fullcodeline": "render_priv->state.be = val;"
    },
    {
        "line": 518,
        "fullcodeline": "} else if (tag(\"b\")) {"
    },
    {
        "line": 517,
        "fullcodeline": "render_priv->state.be = 0;"
    },
    {
        "line": 519,
        "fullcodeline": "int val = argtoi(*args);"
    },
    {
        "line": 522,
        "fullcodeline": "render_priv->state.bold = val;"
    },
    {
        "line": 523,
        "fullcodeline": "update_font(render_priv);"
    },
    {
        "line": 520,
        "fullcodeline": "if (!nargs || !(val == 0 || val == 1 || val >= 100))"
    },
    {
        "line": 524,
        "fullcodeline": "} else if (tag(\"i\")) {"
    },
    {
        "line": 525,
        "fullcodeline": "int val = argtoi(*args);"
    },
    {
        "line": 528,
        "fullcodeline": "render_priv->state.italic = val;"
    },
    {
        "line": 529,
        "fullcodeline": "update_font(render_priv);"
    },
    {
        "line": 526,
        "fullcodeline": "if (!nargs || !(val == 0 || val == 1))"
    },
    {
        "line": 530,
        "fullcodeline": "} else if (tag(\"kf\") || tag(\"K\")) {"
    },
    {
        "line": 531,
        "fullcodeline": "double val = 100;"
    },
    {
        "line": 534,
        "fullcodeline": "render_priv->state.effect_type = EF_KARAOKE_KF;"
    },
    {
        "line": 538,
        "fullcodeline": "render_priv->state.effect_timing = val * 10;"
    },
    {
        "line": 533,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 539,
        "fullcodeline": "} else if (tag(\"ko\")) {"
    },
    {
        "line": 540,
        "fullcodeline": "double val = 100;"
    },
    {
        "line": 543,
        "fullcodeline": "render_priv->state.effect_type = EF_KARAOKE_KO;"
    },
    {
        "line": 547,
        "fullcodeline": "render_priv->state.effect_timing = val * 10;"
    },
    {
        "line": 542,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 548,
        "fullcodeline": "} else if (tag(\"k\")) {"
    },
    {
        "line": 549,
        "fullcodeline": "double val = 100;"
    },
    {
        "line": 552,
        "fullcodeline": "render_priv->state.effect_type = EF_KARAOKE;"
    },
    {
        "line": 556,
        "fullcodeline": "render_priv->state.effect_timing = val * 10;"
    },
    {
        "line": 551,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 557,
        "fullcodeline": "} else if (tag(\"shad\")) {"
    },
    {
        "line": 568,
        "fullcodeline": "render_priv->state.shadow_x = xval;"
    },
    {
        "line": 569,
        "fullcodeline": "render_priv->state.shadow_y = yval;"
    },
    {
        "line": 560,
        "fullcodeline": "val = argtod(*args);"
    },
    {
        "line": 561,
        "fullcodeline": "xval = render_priv->state.shadow_x * (1 - pwr) + val * pwr;"
    },
    {
        "line": 562,
        "fullcodeline": "yval = render_priv->state.shadow_y * (1 - pwr) + val * pwr;"
    },
    {
        "line": 564,
        "fullcodeline": "xval = (xval < 0) ? 0 : xval;"
    },
    {
        "line": 565,
        "fullcodeline": "yval = (yval < 0) ? 0 : yval;"
    },
    {
        "line": 570,
        "fullcodeline": "} else if (tag(\"s\")) {"
    },
    {
        "line": 567,
        "fullcodeline": "xval = yval = render_priv->state.style->Shadow;"
    },
    {
        "line": 571,
        "fullcodeline": "int val = argtoi(*args);"
    },
    {
        "line": 572,
        "fullcodeline": "if (!nargs || !(val == 0 || val == 1))"
    },
    {
        "line": 575,
        "fullcodeline": "render_priv->state.flags |= DECO_STRIKETHROUGH;"
    },
    {
        "line": 578,
        "fullcodeline": "} else if (tag(\"u\")) {"
    },
    {
        "line": 577,
        "fullcodeline": "render_priv->state.flags &= ~DECO_STRIKETHROUGH;"
    },
    {
        "line": 579,
        "fullcodeline": "int val = argtoi(*args);"
    },
    {
        "line": 580,
        "fullcodeline": "if (!nargs || !(val == 0 || val == 1))"
    },
    {
        "line": 583,
        "fullcodeline": "render_priv->state.flags |= DECO_UNDERLINE;"
    },
    {
        "line": 586,
        "fullcodeline": "} else if (tag(\"pbo\")) {"
    },
    {
        "line": 585,
        "fullcodeline": "render_priv->state.flags &= ~DECO_UNDERLINE;"
    },
    {
        "line": 587,
        "fullcodeline": "double val = argtod(*args);"
    },
    {
        "line": 588,
        "fullcodeline": "render_priv->state.pbo = val;"
    },
    {
        "line": 589,
        "fullcodeline": "} else if (tag(\"p\")) {"
    },
    {
        "line": 590,
        "fullcodeline": "int val = argtoi(*args);"
    },
    {
        "line": 591,
        "fullcodeline": "val = (val < 0) ? 0 : val;"
    },
    {
        "line": 592,
        "fullcodeline": "render_priv->state.drawing_scale = val;"
    },
    {
        "line": 593,
        "fullcodeline": "} else if (tag(\"q\")) {"
    },
    {
        "line": 594,
        "fullcodeline": "int val = argtoi(*args);"
    },
    {
        "line": 597,
        "fullcodeline": "render_priv->state.wrap_style = val;"
    },
    {
        "line": 595,
        "fullcodeline": "if (!nargs || !(val >= 0 && val <= 3))"
    },
    {
        "line": 598,
        "fullcodeline": "} else if (tag(\"fe\")) {"
    },
    {
        "line": 604,
        "fullcodeline": "render_priv->state.font_encoding = val;"
    },
    {
        "line": 601,
        "fullcodeline": "val = argtoi(*args);"
    }
]