[
    {
        "line": 2,
        "fullcodeline": "CHECK_NOTNULL(a);"
    },
    {
        "line": 3,
        "fullcodeline": "TensorBuffer* p = nullptr;"
    },
    {
        "line": 7,
        "fullcodeline": "const int64_t N = shape.num_elements();"
    },
    {
        "line": 29,
        "fullcodeline": "shape_ = shape;"
    },
    {
        "line": 32,
        "fullcodeline": "buf_ = p;"
    },
    {
        "line": 4,
        "fullcodeline": "if (!TensorShape::IsValid(proto.tensor_shape())) return false;"
    },
    {
        "line": 5,
        "fullcodeline": "if (proto.dtype() == DT_INVALID) return false;"
    },
    {
        "line": 6,
        "fullcodeline": "TensorShape shape(proto.tensor_shape());"
    },
    {
        "line": 30,
        "fullcodeline": "set_dtype(proto.dtype());"
    },
    {
        "line": 8,
        "fullcodeline": "if (N > 0 && proto.dtype()) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (MemoryLoggingEnabled() && buf_ != nullptr && buf_->data() != nullptr) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (!proto.tensor_content().empty()) {"
    },
    {
        "line": 11,
        "fullcodeline": "const auto& content = proto.tensor_content();"
    },
    {
        "line": 18,
        "fullcodeline": "if (dtype_error || p == nullptr) return false;"
    },
    {
        "line": 12,
        "fullcodeline": "CASES_WITH_DEFAULT(proto.dtype(), p = Helper<T>::Decode(a, content, N),"
    },
    {
        "line": 13,
        "fullcodeline": "dtype_error = true, dtype_error = true);"
    },
    {
        "line": 15,
        "fullcodeline": "CASES_WITH_DEFAULT(proto.dtype(), p = FromProtoField<T>(a, proto, N),"
    },
    {
        "line": 16,
        "fullcodeline": "dtype_error = true, dtype_error = true);"
    }
]