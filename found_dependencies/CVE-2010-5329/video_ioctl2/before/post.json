[
    {
        "line": 4,
        "fullcodeline": "char\tsbuf[128];"
    },
    {
        "line": 5,
        "fullcodeline": "void    *mbuf = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "void\t*parg = (void *)arg;"
    },
    {
        "line": 7,
        "fullcodeline": "long\terr  = -EINVAL;"
    },
    {
        "line": 9,
        "fullcodeline": "size_t  array_size = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "void __user *user_ptr = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "void\t**kernel_ptr = NULL;"
    },
    {
        "line": 41,
        "fullcodeline": "err = check_array_args(cmd, parg, &array_size, &user_ptr, &kernel_ptr);"
    },
    {
        "line": 44,
        "fullcodeline": "has_array_args = err;"
    },
    {
        "line": 64,
        "fullcodeline": "err = __video_do_ioctl(file, cmd, parg);"
    },
    {
        "line": 88,
        "fullcodeline": "kfree(mbuf);"
    },
    {
        "line": 14,
        "fullcodeline": "if (_IOC_DIR(cmd) != _IOC_NONE) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 65,
        "fullcodeline": "if (err == -ENOIOCTLCMD)"
    },
    {
        "line": 74,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 79,
        "fullcodeline": "switch (_IOC_DIR(cmd)) {"
    },
    {
        "line": 25,
        "fullcodeline": "err = -EFAULT;"
    },
    {
        "line": 53,
        "fullcodeline": "mbuf = kmalloc(array_size, GFP_KERNEL);"
    },
    {
        "line": 54,
        "fullcodeline": "err = -ENOMEM;"
    },
    {
        "line": 57,
        "fullcodeline": "err = -EFAULT;"
    },
    {
        "line": 60,
        "fullcodeline": "*kernel_ptr = mbuf;"
    },
    {
        "line": 66,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 69,
        "fullcodeline": "*kernel_ptr = user_ptr;"
    },
    {
        "line": 81,
        "fullcodeline": "case (_IOC_WRITE | _IOC_READ):"
    },
    {
        "line": 15,
        "fullcodeline": "if (_IOC_SIZE(cmd) <= sizeof(sbuf)) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (_IOC_DIR(cmd) & _IOC_WRITE) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (NULL == mbuf)"
    },
    {
        "line": 58,
        "fullcodeline": "if (copy_from_user(mbuf, user_ptr, array_size))"
    },
    {
        "line": 70,
        "fullcodeline": "if (copy_to_user(user_ptr, mbuf, array_size))"
    },
    {
        "line": 16,
        "fullcodeline": "parg = sbuf;"
    },
    {
        "line": 27,
        "fullcodeline": "unsigned long n = cmd_input_size(cmd);"
    },
    {
        "line": 71,
        "fullcodeline": "err = -EFAULT;"
    },
    {
        "line": 83,
        "fullcodeline": "err = -EFAULT;"
    },
    {
        "line": 19,
        "fullcodeline": "mbuf = kmalloc(_IOC_SIZE(cmd), GFP_KERNEL);"
    },
    {
        "line": 22,
        "fullcodeline": "parg = mbuf;"
    },
    {
        "line": 33,
        "fullcodeline": "if (n < _IOC_SIZE(cmd))"
    },
    {
        "line": 37,
        "fullcodeline": "memset(parg, 0, _IOC_SIZE(cmd));"
    },
    {
        "line": 20,
        "fullcodeline": "if (NULL == mbuf)"
    },
    {
        "line": 34,
        "fullcodeline": "memset((u8 *)parg + n, 0, _IOC_SIZE(cmd) - n);"
    },
    {
        "line": 21,
        "fullcodeline": "return -ENOMEM;"
    }
]