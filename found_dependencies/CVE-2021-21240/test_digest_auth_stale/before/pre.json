[
    {
        "line": 3,
        "fullcodeline": "http = httplib2.Http()"
    },
    {
        "line": 4,
        "fullcodeline": "password = tests.gen_password()"
    },
    {
        "line": 5,
        "fullcodeline": "grenew_nonce = [None]"
    },
    {
        "line": 6,
        "fullcodeline": "requests = []"
    },
    {
        "line": 7,
        "fullcodeline": "handler = tests.http_reflect_with_auth("
    },
    {
        "line": 13,
        "fullcodeline": "with tests.server_request(handler, request_count=4) as uri:"
    },
    {
        "line": 9,
        "fullcodeline": "allow_credentials=((\"joe\", password),),"
    },
    {
        "line": 14,
        "fullcodeline": "http.add_credentials(\"joe\", password)"
    },
    {
        "line": 17,
        "fullcodeline": "info = httplib2._parse_www_authenticate("
    },
    {
        "line": 20,
        "fullcodeline": "grenew_nonce[0]()"
    },
    {
        "line": 22,
        "fullcodeline": "assert response.status == 200"
    },
    {
        "line": 23,
        "fullcodeline": "assert not response.fromcache"
    },
    {
        "line": 24,
        "fullcodeline": "assert getattr(response, \"_stale_digest\", False)"
    },
    {
        "line": 25,
        "fullcodeline": "info2 = httplib2._parse_www_authenticate("
    },
    {
        "line": 28,
        "fullcodeline": "nonce1 = info.get(\"digest\", {}).get(\"nonce\", \"\")"
    },
    {
        "line": 29,
        "fullcodeline": "nonce2 = info2.get(\"digest\", {}).get(\"nonce\", \"\")"
    },
    {
        "line": 30,
        "fullcodeline": "assert nonce1 != \"\""
    },
    {
        "line": 31,
        "fullcodeline": "assert nonce2 != \"\""
    },
    {
        "line": 32,
        "fullcodeline": "assert nonce1 != nonce2, (nonce1, nonce2)"
    },
    {
        "line": 15,
        "fullcodeline": "response, _ = http.request(uri, \"GET\")"
    },
    {
        "line": 16,
        "fullcodeline": "assert response.status == 200"
    },
    {
        "line": 21,
        "fullcodeline": "response, _ = http.request(uri, \"GET\")"
    }
]