[
    {
        "line": 19,
        "fullcodeline": "gresult = [None]"
    },
    {
        "line": 20,
        "fullcodeline": "gcounter = [0]"
    },
    {
        "line": 21,
        "fullcodeline": "tls_skip_errors = ["
    },
    {
        "line": 25,
        "fullcodeline": "def tick(request):"
    },
    {
        "line": 33,
        "fullcodeline": "def server_socket_thread(srv):"
    },
    {
        "line": 65,
        "fullcodeline": "bind_hostname = \"localhost\""
    },
    {
        "line": 66,
        "fullcodeline": "server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)"
    },
    {
        "line": 67,
        "fullcodeline": "server.bind((bind_hostname, 0))"
    },
    {
        "line": 72,
        "fullcodeline": "server.listen(10)"
    },
    {
        "line": 73,
        "fullcodeline": "server.settimeout(timeout)"
    },
    {
        "line": 74,
        "fullcodeline": "server_port = server.getsockname()[1]"
    },
    {
        "line": 88,
        "fullcodeline": "t = threading.Thread(target=server_socket_thread, args=(server,))"
    },
    {
        "line": 89,
        "fullcodeline": "t.daemon = True"
    },
    {
        "line": 90,
        "fullcodeline": "t.start()"
    },
    {
        "line": 95,
        "fullcodeline": "server.close()"
    },
    {
        "line": 96,
        "fullcodeline": "t.join()"
    },
    {
        "line": 75,
        "fullcodeline": "if tls is True:"
    },
    {
        "line": 85,
        "fullcodeline": "if scheme == \"\":"
    },
    {
        "line": 91,
        "fullcodeline": "if scheme is None:"
    },
    {
        "line": 97,
        "fullcodeline": "if gresult[0] is not None:"
    },
    {
        "line": 69,
        "fullcodeline": "server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)"
    },
    {
        "line": 76,
        "fullcodeline": "tls = SERVER_CHAIN"
    },
    {
        "line": 78,
        "fullcodeline": "context = ssl_context()"
    },
    {
        "line": 86,
        "fullcodeline": "scheme = \"https\" if tls else \"http\""
    },
    {
        "line": 98,
        "fullcodeline": "raise gresult[0]"
    },
    {
        "line": 79,
        "fullcodeline": "if callable(tls):"
    },
    {
        "line": 71,
        "fullcodeline": "print(\"non critical error on SO_REUSEADDR\", ex)"
    },
    {
        "line": 80,
        "fullcodeline": "context.load_cert_chain(SERVER_CHAIN)"
    },
    {
        "line": 81,
        "fullcodeline": "server = tls(context, server, tls_skip_errors)"
    },
    {
        "line": 83,
        "fullcodeline": "context.load_cert_chain(tls)"
    },
    {
        "line": 84,
        "fullcodeline": "server = context.wrap_socket(server, server_side=True)"
    }
]