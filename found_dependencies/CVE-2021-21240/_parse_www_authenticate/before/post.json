[
    {
        "line": 4,
        "fullcodeline": "retval = {}"
    },
    {
        "line": 5,
        "fullcodeline": "if headername in headers:"
    },
    {
        "line": 8,
        "fullcodeline": "authenticate = headers[headername].strip()"
    },
    {
        "line": 9,
        "fullcodeline": "www_auth = ("
    },
    {
        "line": 10,
        "fullcodeline": "USE_WWW_AUTH_STRICT_PARSING and WWW_AUTH_STRICT or WWW_AUTH_RELAXED"
    },
    {
        "line": 20,
        "fullcodeline": "match = www_auth.search(the_rest)"
    },
    {
        "line": 21,
        "fullcodeline": "auth_params = {}"
    },
    {
        "line": 29,
        "fullcodeline": "retval[auth_scheme.lower()] = auth_params"
    },
    {
        "line": 30,
        "fullcodeline": "authenticate = the_rest.strip()"
    },
    {
        "line": 33,
        "fullcodeline": "raise MalformedHeader(\"WWW-Authenticate\")"
    },
    {
        "line": 14,
        "fullcodeline": "if headername == \"authentication-info\":"
    },
    {
        "line": 28,
        "fullcodeline": "match = www_auth.search(the_rest)"
    },
    {
        "line": 15,
        "fullcodeline": "(auth_scheme, the_rest) = (\"digest\", authenticate)"
    },
    {
        "line": 17,
        "fullcodeline": "(auth_scheme, the_rest) = authenticate.split(\" \", 1)"
    },
    {
        "line": 23,
        "fullcodeline": "if match and len(match.groups()) == 3:"
    },
    {
        "line": 25,
        "fullcodeline": "auth_params[key.lower()] = UNQUOTE_PAIRS.sub("
    },
    {
        "line": 24,
        "fullcodeline": "(key, value, the_rest) = match.groups()"
    }
]