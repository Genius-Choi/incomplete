[
    {
        "line": 14,
        "fullcodeline": "do_write = do_scrub = flags = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "name = NULL;"
    },
    {
        "line": 73,
        "fullcodeline": "dname = NULL;"
    },
    {
        "line": 105,
        "fullcodeline": "pdf_summarize(fp, pdf, dname, flags);"
    },
    {
        "line": 10,
        "fullcodeline": "if (argc < 2)"
    },
    {
        "line": 16,
        "fullcodeline": "for (i=1; i<argc; i++)"
    },
    {
        "line": 32,
        "fullcodeline": "if (!name)"
    },
    {
        "line": 35,
        "fullcodeline": "if (!(fp = fopen(name, \"r\")))"
    },
    {
        "line": 55,
        "fullcodeline": "for (i=0, n_valid=0; i<pdf->n_xrefs; i++)"
    },
    {
        "line": 11,
        "fullcodeline": "usage();"
    },
    {
        "line": 33,
        "fullcodeline": "usage();"
    },
    {
        "line": 37,
        "fullcodeline": "ERR(\"Could not open file '%s'\\n\", argv[1]);"
    },
    {
        "line": 48,
        "fullcodeline": "if (!(pdf = init_pdf(fp, name)))"
    },
    {
        "line": 83,
        "fullcodeline": "dname = safe_calloc(strlen(name) + 16);"
    },
    {
        "line": 84,
        "fullcodeline": "sprintf(dname, \"%s-versions\", name);"
    },
    {
        "line": 109,
        "fullcodeline": "scrub_document(fp, pdf);"
    },
    {
        "line": 113,
        "fullcodeline": "display_creator(fp, pdf);"
    },
    {
        "line": 18,
        "fullcodeline": "if (strncmp(argv[i], \"-w\", 2) == 0)"
    },
    {
        "line": 38,
        "fullcodeline": "return -1;"
    },
    {
        "line": 51,
        "fullcodeline": "return -1;"
    },
    {
        "line": 57,
        "fullcodeline": "++n_valid;"
    },
    {
        "line": 77,
        "fullcodeline": "if ((c = strrchr(name, '/')))"
    },
    {
        "line": 99,
        "fullcodeline": "for (i=0; i<pdf->n_xrefs; i++)"
    },
    {
        "line": 19,
        "fullcodeline": "do_write = 1;"
    },
    {
        "line": 62,
        "fullcodeline": "if (!(flags & (PDF_FLAG_QUIET | PDF_FLAG_DISP_CREATOR)))"
    },
    {
        "line": 63,
        "fullcodeline": "printf(\"%s: There is only one version of this PDF\\n\", pdf->name);"
    },
    {
        "line": 78,
        "fullcodeline": "name = c + 1;"
    },
    {
        "line": 80,
        "fullcodeline": "if ((c = strrchr(name, '.')))"
    },
    {
        "line": 85,
        "fullcodeline": "if (!(dir = opendir(dname)))"
    },
    {
        "line": 86,
        "fullcodeline": "mkdir(dname, S_IRWXU);"
    },
    {
        "line": 40,
        "fullcodeline": "else if (!pdf_is_pdf(fp))"
    },
    {
        "line": 101,
        "fullcodeline": "write_version(fp, name, dname, &pdf->xrefs[i]);"
    },
    {
        "line": 20,
        "fullcodeline": "else if (strncmp(argv[i], \"-i\", 2) == 0)"
    },
    {
        "line": 44,
        "fullcodeline": "return -1;"
    },
    {
        "line": 95,
        "fullcodeline": "return -1;"
    },
    {
        "line": 21,
        "fullcodeline": "flags |= PDF_FLAG_DISP_CREATOR;"
    },
    {
        "line": 22,
        "fullcodeline": "else if (strncmp(argv[i], \"-q\", 2) == 0)"
    },
    {
        "line": 23,
        "fullcodeline": "flags |= PDF_FLAG_QUIET;"
    },
    {
        "line": 24,
        "fullcodeline": "else if (strncmp(argv[i], \"-s\", 2) == 0)"
    },
    {
        "line": 25,
        "fullcodeline": "do_scrub = 1;"
    },
    {
        "line": 26,
        "fullcodeline": "else if (argv[i][0] != '-')"
    },
    {
        "line": 27,
        "fullcodeline": "name = argv[i];"
    },
    {
        "line": 28,
        "fullcodeline": "else if (argv[i][0] == '-')"
    },
    {
        "line": 29,
        "fullcodeline": "usage();"
    }
]