[
    {
        "line": 5,
        "fullcodeline": "GF_Box *a = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "GF_ListItemBox *ptr = (GF_ListItemBox *)s;"
    },
    {
        "line": 8,
        "fullcodeline": "sub_type = gf_bs_peek_bits(bs, 32, 4);"
    },
    {
        "line": 9,
        "fullcodeline": "if (sub_type == GF_ISOM_BOX_TYPE_DATA ) {"
    },
    {
        "line": 10,
        "fullcodeline": "e = gf_isom_box_parse(&a, bs);"
    },
    {
        "line": 21,
        "fullcodeline": "ISOM_DECREASE_SIZE(ptr, a->size);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!e && ptr->size < a->size) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (a && ptr->data) gf_isom_box_del_parent(&ptr->child_boxes, (GF_Box *) ptr->data);"
    },
    {
        "line": 26,
        "fullcodeline": "if (a && a->size > 4 && a->type != GF_ISOM_BOX_TYPE_VOID) {"
    },
    {
        "line": 37,
        "fullcodeline": "u64 pos = gf_bs_get_position(bs);"
    },
    {
        "line": 38,
        "fullcodeline": "u64 prev_size = s->size;"
    },
    {
        "line": 40,
        "fullcodeline": "e = gf_isom_box_array_read(s, bs, NULL);"
    },
    {
        "line": 43,
        "fullcodeline": "gf_isom_box_array_del(s->child_boxes);"
    },
    {
        "line": 44,
        "fullcodeline": "s->child_boxes=NULL;"
    },
    {
        "line": 45,
        "fullcodeline": "gf_bs_seek(bs, pos);"
    },
    {
        "line": 46,
        "fullcodeline": "s->size = prev_size;"
    },
    {
        "line": 48,
        "fullcodeline": "ptr->data = (GF_DataBox *)gf_isom_box_new_parent(&ptr->child_boxes, GF_ISOM_BOX_TYPE_DATA);"
    },
    {
        "line": 50,
        "fullcodeline": "ptr->data->qt_style = GF_TRUE;"
    },
    {
        "line": 51,
        "fullcodeline": "ISOM_DECREASE_SIZE(ptr, 2);"
    },
    {
        "line": 52,
        "fullcodeline": "ptr->data->dataSize = gf_bs_read_u16(bs);"
    },
    {
        "line": 53,
        "fullcodeline": "gf_bs_read_u16(bs);"
    },
    {
        "line": 55,
        "fullcodeline": "ptr->data->data = (char *) gf_malloc(sizeof(char)*(ptr->data->dataSize + 1));"
    },
    {
        "line": 56,
        "fullcodeline": "gf_bs_read_data(bs, ptr->data->data, ptr->data->dataSize);"
    },
    {
        "line": 57,
        "fullcodeline": "ptr->data->data[ptr->data->dataSize] = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "ISOM_DECREASE_SIZE(ptr, ptr->data->dataSize);"
    },
    {
        "line": 13,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[isom] not enough bytes in box %s: %d left, reading %d (file %s, line %d)\\n\", gf_4cc_to_str(ptr->type), ptr->size, a->size, __FILE__, __LINE__ )); \\"
    },
    {
        "line": 14,
        "fullcodeline": "e = GF_ISOM_INVALID_FILE;"
    },
    {
        "line": 27,
        "fullcodeline": "ptr->data = (GF_DataBox *)a;"
    },
    {
        "line": 29,
        "fullcodeline": "gf_list_add(ptr->child_boxes, ptr->data);"
    },
    {
        "line": 41,
        "fullcodeline": "if (e==GF_OK) return GF_OK;"
    },
    {
        "line": 28,
        "fullcodeline": "if (!ptr->child_boxes) ptr->child_boxes = gf_list_new();"
    },
    {
        "line": 31,
        "fullcodeline": "ptr->data = NULL;"
    },
    {
        "line": 32,
        "fullcodeline": "gf_isom_box_del(a);"
    },
    {
        "line": 17,
        "fullcodeline": "if (a) gf_isom_box_del(a);"
    }
]