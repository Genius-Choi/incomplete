[
    {
        "line": 6,
        "fullcodeline": "render->colorspace = output_cs;"
    },
    {
        "line": 7,
        "fullcodeline": "render->format = output_format;"
    },
    {
        "line": 42,
        "fullcodeline": "w = render->ibounds.x1 - render->ibounds.x0;"
    },
    {
        "line": 43,
        "fullcodeline": "min_band_mem = (size_t)bpp * w * min_band_height;"
    },
    {
        "line": 63,
        "fullcodeline": "render->band_height_multiple = reps;"
    },
    {
        "line": 64,
        "fullcodeline": "render->bands_rendered = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "if (min_band_mem > 0)"
    },
    {
        "line": 46,
        "fullcodeline": "if (min_band_mem == 0 || reps < 1)"
    },
    {
        "line": 50,
        "fullcodeline": "if (render->num_workers > 0)"
    },
    {
        "line": 66,
        "fullcodeline": "if (output_format == OUT_PGM || output_format == OUT_PPM)"
    },
    {
        "line": 31,
        "fullcodeline": "bpp = 1;"
    },
    {
        "line": 34,
        "fullcodeline": "bpp = 2;"
    },
    {
        "line": 38,
        "fullcodeline": "bpp = 3;"
    },
    {
        "line": 45,
        "fullcodeline": "reps = (int)(max_band_memory / min_band_mem);"
    },
    {
        "line": 47,
        "fullcodeline": "reps = 1;"
    },
    {
        "line": 53,
        "fullcodeline": "h = render->ibounds.y1 - render->ibounds.y0;"
    },
    {
        "line": 54,
        "fullcodeline": "num_bands = (h + min_band_height - 1) / min_band_height;"
    },
    {
        "line": 56,
        "fullcodeline": "runs = (num_bands + reps-1) / reps;"
    },
    {
        "line": 58,
        "fullcodeline": "runs = ((runs + render->num_workers - 1) / render->num_workers) * render->num_workers;"
    },
    {
        "line": 60,
        "fullcodeline": "reps = (num_bands + runs - 1) / runs;"
    },
    {
        "line": 68,
        "fullcodeline": "render->bander = fz_new_pnm_band_writer(ctx, out);"
    },
    {
        "line": 69,
        "fullcodeline": "render->n = output_format == OUT_PGM ? 1 : 3;"
    },
    {
        "line": 71,
        "fullcodeline": "else if (output_format == OUT_PAM)"
    },
    {
        "line": 73,
        "fullcodeline": "render->bander = fz_new_pam_band_writer(ctx, out);"
    },
    {
        "line": 74,
        "fullcodeline": "render->n = 4;"
    },
    {
        "line": 76,
        "fullcodeline": "else if (output_format == OUT_PBM)"
    },
    {
        "line": 78,
        "fullcodeline": "render->bander = fz_new_pbm_band_writer(ctx, out);"
    },
    {
        "line": 79,
        "fullcodeline": "render->n = 1;"
    },
    {
        "line": 81,
        "fullcodeline": "else if (output_format == OUT_PKM)"
    },
    {
        "line": 83,
        "fullcodeline": "render->bander = fz_new_pkm_band_writer(ctx, out);"
    },
    {
        "line": 84,
        "fullcodeline": "render->n = 4;"
    }
]