[
    {
        "line": 5,
        "fullcodeline": "const char *ul_name = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "const char *atomic_file = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "off_t filesize = (off_t) 0U;"
    },
    {
        "line": 9,
        "fullcodeline": "double started = 0.0;"
    },
    {
        "line": 10,
        "fullcodeline": "signed char overwrite = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "int overflow = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "int ret = -1;"
    },
    {
        "line": 13,
        "fullcodeline": "off_t max_filesize = (off_t) -1;"
    },
    {
        "line": 17,
        "fullcodeline": "const char *name2 = NULL;"
    },
    {
        "line": 75,
        "fullcodeline": "alarm(MAX_SESSION_XFER_IDLE);"
    },
    {
        "line": 124,
        "fullcodeline": "opendata();"
    },
    {
        "line": 129,
        "fullcodeline": "doreply();"
    },
    {
        "line": 135,
        "fullcodeline": "state_needs_update = 1;"
    },
    {
        "line": 136,
        "fullcodeline": "setprocessname(\"pure-ftpd (UPLOAD)\");"
    },
    {
        "line": 137,
        "fullcodeline": "filesize = restartat;"
    },
    {
        "line": 163,
        "fullcodeline": "started = get_usec_time();"
    },
    {
        "line": 173,
        "fullcodeline": "(void) close(f);"
    },
    {
        "line": 174,
        "fullcodeline": "closedata();"
    },
    {
        "line": 192,
        "fullcodeline": "uploaded += (unsigned long long) ulhandler.total_uploaded;"
    },
    {
        "line": 254,
        "fullcodeline": "restartat = (off_t) 0;"
    },
    {
        "line": 19,
        "fullcodeline": "if (type < 1 || (type == 1 && restartat > (off_t) 1)) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (guest != 0 && anon_noupload != 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (ul_check_free_space(name, -1.0) == 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (checknamesanity(name, dot_write_ok) != 0) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (autorename != 0) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (restartat > (off_t) 0 || no_truncate != 0) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (atomic_file != NULL) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (atomic_file == NULL &&"
    },
    {
        "line": 65,
        "fullcodeline": "if (fstat(f, &st) < 0) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (!S_ISREG(st.st_mode)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (st.st_size > (off_t) 0) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (restartat > st.st_size) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (restartat > (off_t) 0 && lseek(f, restartat, SEEK_SET) < (off_t) 0) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (restartat < st.st_size) {"
    },
    {
        "line": 125,
        "fullcodeline": "if (xferfd == -1) {"
    },
    {
        "line": 165,
        "fullcodeline": "if (ul_init(&ulhandler, clientfd, tls_cnx, xferfd, name, f, tls_data_cnx,"
    },
    {
        "line": 242,
        "fullcodeline": "if (overflow > 0) {"
    },
    {
        "line": 255,
        "fullcodeline": "if (atomic_file != NULL) {"
    },
    {
        "line": 20,
        "fullcodeline": "addreply_noformat(503, MSG_NO_ASCII_RESUME);"
    },
    {
        "line": 25,
        "fullcodeline": "addreply_noformat(550, MSG_ANON_CANT_OVERWRITE);"
    },
    {
        "line": 30,
        "fullcodeline": "addreply_noformat(552, MSG_NO_DISK_SPACE);"
    },
    {
        "line": 34,
        "fullcodeline": "addreply(553, MSG_SANITY_FILE_FAILURE, name);"
    },
    {
        "line": 38,
        "fullcodeline": "no_truncate = 1;"
    },
    {
        "line": 53,
        "fullcodeline": "ul_name = atomic_file;"
    },
    {
        "line": 58,
        "fullcodeline": "(f = open(ul_name, O_WRONLY | O_NOFOLLOW)) != -1) {"
    },
    {
        "line": 59,
        "fullcodeline": "overwrite++;"
    },
    {
        "line": 66,
        "fullcodeline": "(void) close(f);"
    },
    {
        "line": 67,
        "fullcodeline": "error(553, MSG_STAT_FAILURE2);"
    },
    {
        "line": 71,
        "fullcodeline": "(void) close(f);"
    },
    {
        "line": 72,
        "fullcodeline": "addreply_noformat(550, MSG_NOT_REGULAR_FILE);"
    },
    {
        "line": 93,
        "fullcodeline": "restartat = st.st_size;"
    },
    {
        "line": 96,
        "fullcodeline": "(void) close(f);"
    },
    {
        "line": 97,
        "fullcodeline": "error(451, \"seek\");"
    },
    {
        "line": 126,
        "fullcodeline": "(void) close(f);"
    },
    {
        "line": 168,
        "fullcodeline": "ret = ul_send(&ulhandler);"
    },
    {
        "line": 169,
        "fullcodeline": "ul_exit(&ulhandler);"
    },
    {
        "line": 198,
        "fullcodeline": "if (overwrite == 0) {"
    },
    {
        "line": 203,
        "fullcodeline": "if (autorename != 0 && restartat == (off_t) 0) {"
    },
    {
        "line": 243,
        "fullcodeline": "addreply(552, MSG_QUOTA_EXCEEDED, name);"
    },
    {
        "line": 256,
        "fullcodeline": "unlink(atomic_file);"
    },
    {
        "line": 257,
        "fullcodeline": "atomic_file = NULL;"
    },
    {
        "line": 41,
        "fullcodeline": "if ((atomic_file = get_atomic_file(name)) == NULL) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (restartat > (off_t) 0 &&"
    },
    {
        "line": 55,
        "fullcodeline": "ul_name = name;"
    },
    {
        "line": 80,
        "fullcodeline": "if (guest != 0) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (append != 0) {"
    },
    {
        "line": 90,
        "fullcodeline": "restartat = (off_t) 0;"
    },
    {
        "line": 101,
        "fullcodeline": "if (ftruncate(f, restartat) < 0) {"
    },
    {
        "line": 166,
        "fullcodeline": "restartat, type == 1, throttling_bandwidth_ul,"
    },
    {
        "line": 171,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 199,
        "fullcodeline": "files_count = 1;"
    },
    {
        "line": 250,
        "fullcodeline": "displayrate(MSG_UPLOADED, ulhandler.total_uploaded, started,"
    },
    {
        "line": 42,
        "fullcodeline": "addreply(553, MSG_SANITY_FILE_FAILURE, name);"
    },
    {
        "line": 46,
        "fullcodeline": "rename(name, atomic_file) != 0 && errno != ENOENT) {"
    },
    {
        "line": 47,
        "fullcodeline": "error(553, MSG_RENAME_FAILURE);"
    },
    {
        "line": 48,
        "fullcodeline": "atomic_file = NULL;"
    },
    {
        "line": 60,
        "fullcodeline": "} else if ((f = open(ul_name, O_CREAT | O_WRONLY | O_NOFOLLOW,"
    },
    {
        "line": 81,
        "fullcodeline": "addreply_noformat(550, MSG_ANON_CANT_OVERWRITE);"
    },
    {
        "line": 82,
        "fullcodeline": "(void) close(f);"
    },
    {
        "line": 87,
        "fullcodeline": "restartat = st.st_size;"
    },
    {
        "line": 102,
        "fullcodeline": "(void) close(f);"
    },
    {
        "line": 103,
        "fullcodeline": "error(451, \"ftruncate\");"
    },
    {
        "line": 201,
        "fullcodeline": "files_count = 0;"
    },
    {
        "line": 204,
        "fullcodeline": "if ((atomic_file_size = get_file_size(atomic_file)) < (off_t) 0) {"
    },
    {
        "line": 207,
        "fullcodeline": "if (tryautorename(atomic_file, name, &name2) != 0) {"
    },
    {
        "line": 245,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 251,
        "fullcodeline": "name2 ? name2 : name, 1);"
    },
    {
        "line": 61,
        "fullcodeline": "(mode_t) 0777 & ~u_mask)) == -1) {"
    },
    {
        "line": 62,
        "fullcodeline": "error(553, MSG_OPEN_FAILURE2);"
    },
    {
        "line": 208,
        "fullcodeline": "error(553, MSG_RENAME_FAILURE);"
    },
    {
        "line": 216,
        "fullcodeline": "} else if (atomic_file != NULL) {"
    },
    {
        "line": 246,
        "fullcodeline": "addreply_noformat(226, MSG_TRANSFER_SUCCESSFUL);"
    },
    {
        "line": 214,
        "fullcodeline": "atomic_file = NULL;"
    },
    {
        "line": 248,
        "fullcodeline": "addreply_noformat(451, MSG_ABORTED);"
    },
    {
        "line": 217,
        "fullcodeline": "if ((atomic_file_size = get_file_size(atomic_file)) < (off_t) 0) {"
    },
    {
        "line": 220,
        "fullcodeline": "if ((original_file_size = get_file_size(name)) < (off_t) 0 ||"
    },
    {
        "line": 224,
        "fullcodeline": "if (rename(atomic_file, name) != 0) {"
    },
    {
        "line": 221,
        "fullcodeline": "restartat > original_file_size) {"
    },
    {
        "line": 222,
        "fullcodeline": "original_file_size = restartat;"
    },
    {
        "line": 225,
        "fullcodeline": "error(553, MSG_RENAME_FAILURE);"
    },
    {
        "line": 232,
        "fullcodeline": "atomic_file = NULL;"
    }
]