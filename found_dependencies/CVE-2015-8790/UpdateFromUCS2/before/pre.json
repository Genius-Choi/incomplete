[
    {
        "line": 4,
        "fullcodeline": "size_t i,Size=0;"
    },
    {
        "line": 14,
        "fullcodeline": "std::string::value_type *tmpStr = new std::string::value_type[Size+1];"
    },
    {
        "line": 27,
        "fullcodeline": "tmpStr[Size] = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "UTF8string = tmpStr; // implicit conversion"
    },
    {
        "line": 29,
        "fullcodeline": "delete [] tmpStr;"
    },
    {
        "line": 5,
        "fullcodeline": "for (i=0; i<_Length; i++) {"
    },
    {
        "line": 15,
        "fullcodeline": "for (i=0, Size=0; i<_Length; i++) {"
    },
    {
        "line": 6,
        "fullcodeline": "if (_Data[i] < 0x80) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (_Data[i] < 0x80) {"
    },
    {
        "line": 7,
        "fullcodeline": "Size++;"
    },
    {
        "line": 17,
        "fullcodeline": "tmpStr[Size++] = _Data[i];"
    },
    {
        "line": 8,
        "fullcodeline": "} else if (_Data[i] < 0x800) {"
    },
    {
        "line": 18,
        "fullcodeline": "} else if (_Data[i] < 0x800) {"
    },
    {
        "line": 9,
        "fullcodeline": "Size += 2;"
    },
    {
        "line": 19,
        "fullcodeline": "tmpStr[Size++] = 0xC0 | (_Data[i] >> 6);"
    },
    {
        "line": 20,
        "fullcodeline": "tmpStr[Size++] = 0x80 | (_Data[i] & 0x3F);"
    },
    {
        "line": 11,
        "fullcodeline": "Size += 3;"
    },
    {
        "line": 22,
        "fullcodeline": "tmpStr[Size++] = 0xE0 | (_Data[i] >> 12);"
    },
    {
        "line": 23,
        "fullcodeline": "tmpStr[Size++] = 0x80 | ((_Data[i] >> 6) & 0x3F);"
    },
    {
        "line": 24,
        "fullcodeline": "tmpStr[Size++] = 0x80 | (_Data[i] & 0x3F);"
    }
]