[
    {
        "line": 4,
        "fullcodeline": "struct sockaddr_l2tpip6 *lsa = (struct sockaddr_l2tpip6 *)uaddr;"
    },
    {
        "line": 5,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 6,
        "fullcodeline": "struct ipv6_pinfo *np = inet6_sk(sk);"
    },
    {
        "line": 7,
        "fullcodeline": "struct l2tp_ip6_sock *lsk = l2tp_ip6_sk(sk);"
    },
    {
        "line": 9,
        "fullcodeline": "lsa->l2tp_family = AF_INET6;"
    },
    {
        "line": 10,
        "fullcodeline": "lsa->l2tp_flowinfo = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "lsa->l2tp_scope_id = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "if (ipv6_addr_type(&lsa->l2tp_addr) & IPV6_ADDR_LINKLOCAL)"
    },
    {
        "line": 15,
        "fullcodeline": "lsa->l2tp_conn_id = lsk->peer_conn_id;"
    },
    {
        "line": 16,
        "fullcodeline": "lsa->l2tp_addr = np->daddr;"
    },
    {
        "line": 28,
        "fullcodeline": "lsa->l2tp_scope_id = sk->sk_bound_dev_if;"
    },
    {
        "line": 13,
        "fullcodeline": "if (!lsk->peer_conn_id)"
    },
    {
        "line": 25,
        "fullcodeline": "lsa->l2tp_conn_id = lsk->conn_id;"
    },
    {
        "line": 18,
        "fullcodeline": "lsa->l2tp_flowinfo = np->flow_label;"
    },
    {
        "line": 20,
        "fullcodeline": "if (ipv6_addr_any(&np->rcv_saddr))"
    },
    {
        "line": 14,
        "fullcodeline": "return -ENOTCONN;"
    },
    {
        "line": 21,
        "fullcodeline": "lsa->l2tp_addr = np->saddr;"
    },
    {
        "line": 23,
        "fullcodeline": "lsa->l2tp_addr = np->rcv_saddr;"
    }
]