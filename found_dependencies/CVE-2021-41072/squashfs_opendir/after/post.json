[
    {
        "line": 5,
        "fullcodeline": "char buffer[sizeof(squashfs_dir_entry_2) + SQUASHFS_NAME_LEN + 1]"
    },
    {
        "line": 7,
        "fullcodeline": "squashfs_dir_entry_2 *dire = (squashfs_dir_entry_2 *) buffer;"
    },
    {
        "line": 9,
        "fullcodeline": "int bytes = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "struct dir_ent *ent, *cur_ent = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "TRACE(\"squashfs_opendir: inode start block %d, offset %d\\n\","
    },
    {
        "line": 17,
        "fullcodeline": "*i = read_inode(block_start, offset);"
    },
    {
        "line": 23,
        "fullcodeline": "dir->dir_count = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "dir->cur_entry = NULL;"
    },
    {
        "line": 30,
        "fullcodeline": "dir->dirs = NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "size = (*i)->data + bytes;"
    },
    {
        "line": 128,
        "fullcodeline": "sort_directory(dir);"
    },
    {
        "line": 136,
        "fullcodeline": "squashfs_closedir(dir);"
    },
    {
        "line": 20,
        "fullcodeline": "if(dir == NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "if ((*i)->data == 0)"
    },
    {
        "line": 45,
        "fullcodeline": "while(bytes < size) {"
    },
    {
        "line": 129,
        "fullcodeline": "if(check_directory(dir) == FALSE) {"
    },
    {
        "line": 21,
        "fullcodeline": "MEM_ERROR();"
    },
    {
        "line": 57,
        "fullcodeline": "dir_count = dirh.count + 1;"
    },
    {
        "line": 58,
        "fullcodeline": "TRACE(\"squashfs_opendir: Read directory header @ byte position \""
    },
    {
        "line": 60,
        "fullcodeline": "bytes += sizeof(dirh);"
    },
    {
        "line": 130,
        "fullcodeline": "ERROR(\"File system corrupted: directory has duplicate names\\n\");"
    },
    {
        "line": 54,
        "fullcodeline": "if(res == FALSE)"
    },
    {
        "line": 63,
        "fullcodeline": "if(dir_count > SQUASHFS_DIR_COUNT) {"
    },
    {
        "line": 68,
        "fullcodeline": "while(dir_count--) {"
    },
    {
        "line": 48,
        "fullcodeline": "res = read_directory_data(&sdirh, &start, &offset, sizeof(sdirh));"
    },
    {
        "line": 64,
        "fullcodeline": "ERROR(\"File system corrupted: too many entries in directory\\n\");"
    },
    {
        "line": 82,
        "fullcodeline": "bytes += sizeof(*dire);"
    },
    {
        "line": 90,
        "fullcodeline": "res = read_directory_data(dire->name, &start, &offset,"
    },
    {
        "line": 96,
        "fullcodeline": "dire->name[dire->size + 1] = '\\0';"
    },
    {
        "line": 104,
        "fullcodeline": "TRACE(\"squashfs_opendir: directory entry %s, inode \""
    },
    {
        "line": 112,
        "fullcodeline": "ent->name = strdup(dire->name);"
    },
    {
        "line": 113,
        "fullcodeline": "ent->start_block = dirh.start_block;"
    },
    {
        "line": 114,
        "fullcodeline": "ent->offset = dire->offset;"
    },
    {
        "line": 115,
        "fullcodeline": "ent->type = dire->type;"
    },
    {
        "line": 116,
        "fullcodeline": "ent->next = NULL;"
    },
    {
        "line": 121,
        "fullcodeline": "cur_ent = ent;"
    },
    {
        "line": 122,
        "fullcodeline": "dir->dir_count ++;"
    },
    {
        "line": 123,
        "fullcodeline": "bytes += dire->size + 1;"
    },
    {
        "line": 52,
        "fullcodeline": "res = read_directory_data(&dirh, &start, &offset, sizeof(dirh));"
    },
    {
        "line": 79,
        "fullcodeline": "if(res == FALSE)"
    },
    {
        "line": 85,
        "fullcodeline": "if(dire->size >= SQUASHFS_NAME_LEN) {"
    },
    {
        "line": 93,
        "fullcodeline": "if(res == FALSE)"
    },
    {
        "line": 99,
        "fullcodeline": "if(check_name(dire->name, dire->size + 1) == FALSE) {"
    },
    {
        "line": 109,
        "fullcodeline": "if(ent == NULL)"
    },
    {
        "line": 117,
        "fullcodeline": "if(cur_ent == NULL)"
    },
    {
        "line": 50,
        "fullcodeline": "SQUASHFS_SWAP_DIR_HEADER_2(&dirh, &sdirh);"
    },
    {
        "line": 71,
        "fullcodeline": "res = read_directory_data(&sdire, &start,"
    },
    {
        "line": 86,
        "fullcodeline": "ERROR(\"File system corrupted: filename too long\\n\");"
    },
    {
        "line": 91,
        "fullcodeline": "dire->size + 1);"
    },
    {
        "line": 100,
        "fullcodeline": "ERROR(\"File system corrupted: invalid characters in name\\n\");"
    },
    {
        "line": 110,
        "fullcodeline": "MEM_ERROR();"
    },
    {
        "line": 118,
        "fullcodeline": "dir->dirs = ent;"
    },
    {
        "line": 76,
        "fullcodeline": "res = read_directory_data(dire, &start,"
    },
    {
        "line": 120,
        "fullcodeline": "cur_ent->next = ent;"
    },
    {
        "line": 74,
        "fullcodeline": "SQUASHFS_SWAP_DIR_ENTRY_2(dire, &sdire);"
    }
]