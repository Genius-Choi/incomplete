[
    {
        "line": 3,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 4,
        "fullcodeline": "struct alg_sock *ask = alg_sk(sk);"
    },
    {
        "line": 5,
        "fullcodeline": "struct hash_ctx *ctx = ask->private;"
    },
    {
        "line": 6,
        "fullcodeline": "struct ahash_request *req = &ctx->req;"
    },
    {
        "line": 7,
        "fullcodeline": "char state[crypto_ahash_statesize(crypto_ahash_reqtfm(req))];"
    },
    {
        "line": 14,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 15,
        "fullcodeline": "more = ctx->more;"
    },
    {
        "line": 16,
        "fullcodeline": "err = more ? crypto_ahash_export(req, state) : 0;"
    },
    {
        "line": 17,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 22,
        "fullcodeline": "err = af_alg_accept(ask->parent, newsock);"
    },
    {
        "line": 26,
        "fullcodeline": "sk2 = newsock->sk;"
    },
    {
        "line": 27,
        "fullcodeline": "ask2 = alg_sk(sk2);"
    },
    {
        "line": 28,
        "fullcodeline": "ctx2 = ask2->private;"
    },
    {
        "line": 29,
        "fullcodeline": "ctx2->more = more;"
    },
    {
        "line": 34,
        "fullcodeline": "err = crypto_ahash_import(&ctx2->req, state);"
    },
    {
        "line": 31,
        "fullcodeline": "if (!more)"
    },
    {
        "line": 36,
        "fullcodeline": "sock_orphan(sk2);"
    },
    {
        "line": 37,
        "fullcodeline": "sock_put(sk2);"
    }
]