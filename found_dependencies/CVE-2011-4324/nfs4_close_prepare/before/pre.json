[
    {
        "line": 3,
        "fullcodeline": "struct nfs4_closedata *calldata = data;"
    },
    {
        "line": 4,
        "fullcodeline": "struct nfs4_state *state = calldata->state;"
    },
    {
        "line": 10,
        "fullcodeline": "clear_rd = clear_wr = clear_rdwr = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "spin_lock(&state->owner->so_lock);"
    },
    {
        "line": 37,
        "fullcodeline": "calldata->timestamp = jiffies;"
    },
    {
        "line": 7,
        "fullcodeline": "if (nfs_wait_on_sequence(calldata->arg.seqid, task) != 0)"
    },
    {
        "line": 24,
        "fullcodeline": "if (!clear_rd && !clear_wr && !clear_rdwr) {"
    },
    {
        "line": 26,
        "fullcodeline": "task->tk_action = NULL;"
    },
    {
        "line": 30,
        "fullcodeline": "if (test_bit(NFS_O_RDONLY_STATE, &state->flags) != 0) {"
    },
    {
        "line": 32,
        "fullcodeline": "calldata->arg.open_flags = FMODE_READ;"
    },
    {
        "line": 15,
        "fullcodeline": "clear_rd |= test_and_clear_bit(NFS_O_RDONLY_STATE, &state->flags);"
    },
    {
        "line": 16,
        "fullcodeline": "clear_rdwr |= test_and_clear_bit(NFS_O_RDWR_STATE, &state->flags);"
    },
    {
        "line": 19,
        "fullcodeline": "clear_wr |= test_and_clear_bit(NFS_O_WRONLY_STATE, &state->flags);"
    },
    {
        "line": 20,
        "fullcodeline": "clear_rdwr |= test_and_clear_bit(NFS_O_RDWR_STATE, &state->flags);"
    },
    {
        "line": 33,
        "fullcodeline": "} else if (test_bit(NFS_O_WRONLY_STATE, &state->flags) != 0) {"
    },
    {
        "line": 35,
        "fullcodeline": "calldata->arg.open_flags = FMODE_WRITE;"
    }
]