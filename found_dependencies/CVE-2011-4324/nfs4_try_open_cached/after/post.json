[
    {
        "line": 3,
        "fullcodeline": "struct nfs4_state *state = opendata->state;"
    },
    {
        "line": 4,
        "fullcodeline": "struct nfs_inode *nfsi = NFS_I(state->inode);"
    },
    {
        "line": 6,
        "fullcodeline": "int open_mode = opendata->o_arg.open_flags & O_EXCL;"
    },
    {
        "line": 9,
        "fullcodeline": "int ret = -EAGAIN;"
    },
    {
        "line": 43,
        "fullcodeline": "atomic_inc(&state->count);"
    },
    {
        "line": 41,
        "fullcodeline": "return ERR_PTR(ret);"
    },
    {
        "line": 21,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 22,
        "fullcodeline": "delegation = rcu_dereference(nfsi->delegation);"
    },
    {
        "line": 29,
        "fullcodeline": "memcpy(stateid.data, delegation->stateid.data, sizeof(stateid.data));"
    },
    {
        "line": 30,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 31,
        "fullcodeline": "ret = nfs_may_open(state->inode, state->owner->so_cred, open_mode);"
    },
    {
        "line": 34,
        "fullcodeline": "ret = -EAGAIN;"
    },
    {
        "line": 12,
        "fullcodeline": "if (can_open_cached(state, fmode, open_mode)) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (delegation == NULL ||"
    },
    {
        "line": 32,
        "fullcodeline": "if (ret != 0)"
    },
    {
        "line": 37,
        "fullcodeline": "if (update_open_stateid(state, NULL, &stateid, fmode))"
    },
    {
        "line": 13,
        "fullcodeline": "spin_lock(&state->owner->so_lock);"
    },
    {
        "line": 19,
        "fullcodeline": "spin_unlock(&state->owner->so_lock);"
    },
    {
        "line": 24,
        "fullcodeline": "!can_open_delegated(delegation, fmode)) {"
    },
    {
        "line": 25,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 14,
        "fullcodeline": "if (can_open_cached(state, fmode, open_mode)) {"
    },
    {
        "line": 15,
        "fullcodeline": "update_open_stateflags(state, fmode);"
    },
    {
        "line": 16,
        "fullcodeline": "spin_unlock(&state->owner->so_lock);"
    }
]