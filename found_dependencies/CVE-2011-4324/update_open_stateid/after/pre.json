[
    {
        "line": 3,
        "fullcodeline": "struct nfs_inode *nfsi = NFS_I(state->inode);"
    },
    {
        "line": 5,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "fmode &= (FMODE_READ|FMODE_WRITE);"
    },
    {
        "line": 9,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 10,
        "fullcodeline": "deleg_cur = rcu_dereference(nfsi->delegation);"
    },
    {
        "line": 14,
        "fullcodeline": "spin_lock(&deleg_cur->lock);"
    },
    {
        "line": 24,
        "fullcodeline": "nfs_mark_delegation_referenced(deleg_cur);"
    },
    {
        "line": 25,
        "fullcodeline": "__update_open_stateid(state, open_stateid, &deleg_cur->stateid, fmode);"
    },
    {
        "line": 26,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 28,
        "fullcodeline": "spin_unlock(&deleg_cur->lock);"
    },
    {
        "line": 30,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 11,
        "fullcodeline": "if (deleg_cur == NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "if (nfsi->delegation != deleg_cur ||"
    },
    {
        "line": 19,
        "fullcodeline": "if (delegation == NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "if (!ret && open_stateid != NULL) {"
    },
    {
        "line": 16,
        "fullcodeline": "(deleg_cur->type & fmode) != fmode)"
    },
    {
        "line": 20,
        "fullcodeline": "delegation = &deleg_cur->stateid;"
    },
    {
        "line": 33,
        "fullcodeline": "__update_open_stateid(state, open_stateid, NULL, fmode);"
    },
    {
        "line": 34,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 21,
        "fullcodeline": "else if (memcmp(deleg_cur->stateid.data, delegation->data, NFS4_STATEID_SIZE) != 0)"
    }
]