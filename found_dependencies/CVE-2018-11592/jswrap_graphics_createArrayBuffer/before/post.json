[
    {
        "line": 11,
        "fullcodeline": "JsVar *parent = jspNewObject(0, \"Graphics\");"
    },
    {
        "line": 15,
        "fullcodeline": "graphicsStructInit(&gfx);"
    },
    {
        "line": 16,
        "fullcodeline": "gfx.data.type = JSGRAPHICSTYPE_ARRAYBUFFER;"
    },
    {
        "line": 17,
        "fullcodeline": "gfx.data.flags = JSGRAPHICSFLAGS_NONE;"
    },
    {
        "line": 18,
        "fullcodeline": "gfx.graphicsVar = parent;"
    },
    {
        "line": 19,
        "fullcodeline": "gfx.data.width = (unsigned short)width;"
    },
    {
        "line": 20,
        "fullcodeline": "gfx.data.height = (unsigned short)height;"
    },
    {
        "line": 21,
        "fullcodeline": "gfx.data.bpp = (unsigned char)bpp;"
    },
    {
        "line": 53,
        "fullcodeline": "lcdInit_ArrayBuffer(&gfx);"
    },
    {
        "line": 54,
        "fullcodeline": "graphicsSetVar(&gfx);"
    },
    {
        "line": 2,
        "fullcodeline": "if (width<=0 || height<=0 || width>32767 || height>32767) {"
    },
    {
        "line": 6,
        "fullcodeline": "if (!isValidBPP(bpp)) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (!parent) return 0; // low memory"
    },
    {
        "line": 23,
        "fullcodeline": "if (jsvIsObject(options)) {"
    },
    {
        "line": 3,
        "fullcodeline": "jsExceptionHere(JSET_ERROR, \"Invalid Size\");"
    },
    {
        "line": 7,
        "fullcodeline": "jsExceptionHere(JSET_ERROR, \"Invalid BPP\");"
    },
    {
        "line": 34,
        "fullcodeline": "JsVar *colorv = jsvObjectGetChild(options, \"color_order\", 0);"
    },
    {
        "line": 24,
        "fullcodeline": "if (jsvGetBoolAndUnLock(jsvObjectGetChild(options, \"zigzag\", 0)))"
    },
    {
        "line": 26,
        "fullcodeline": "if (jsvGetBoolAndUnLock(jsvObjectGetChild(options, \"msb\", 0)))"
    },
    {
        "line": 28,
        "fullcodeline": "if (jsvGetBoolAndUnLock(jsvObjectGetChild(options, \"vertical_byte\", 0))) {"
    },
    {
        "line": 25,
        "fullcodeline": "gfx.data.flags = (JsGraphicsFlags)(gfx.data.flags | JSGRAPHICSFLAGS_ARRAYBUFFER_ZIGZAG);"
    },
    {
        "line": 27,
        "fullcodeline": "gfx.data.flags = (JsGraphicsFlags)(gfx.data.flags | JSGRAPHICSFLAGS_ARRAYBUFFER_MSB);"
    },
    {
        "line": 49,
        "fullcodeline": "jsvUnLock(colorv);"
    },
    {
        "line": 29,
        "fullcodeline": "if (gfx.data.bpp==1)"
    },
    {
        "line": 36,
        "fullcodeline": "if (jsvIsStringEqual(colorv, \"rgb\")) ; // The default"
    },
    {
        "line": 30,
        "fullcodeline": "gfx.data.flags = (JsGraphicsFlags)(gfx.data.flags | JSGRAPHICSFLAGS_ARRAYBUFFER_VERTICAL_BYTE);"
    },
    {
        "line": 32,
        "fullcodeline": "jsWarn(\"vertical_byte only works for 1bpp ArrayBuffers\\n\");"
    },
    {
        "line": 37,
        "fullcodeline": "else if (!jsvIsStringEqual(colorv, \"brg\"))"
    },
    {
        "line": 38,
        "fullcodeline": "gfx.data.flags = (JsGraphicsFlags)(gfx.data.flags | JSGRAPHICSFLAGS_COLOR_BRG);"
    },
    {
        "line": 39,
        "fullcodeline": "else if (!jsvIsStringEqual(colorv, \"bgr\"))"
    },
    {
        "line": 40,
        "fullcodeline": "gfx.data.flags = (JsGraphicsFlags)(gfx.data.flags | JSGRAPHICSFLAGS_COLOR_BGR);"
    },
    {
        "line": 41,
        "fullcodeline": "else if (!jsvIsStringEqual(colorv, \"gbr\"))"
    },
    {
        "line": 42,
        "fullcodeline": "gfx.data.flags = (JsGraphicsFlags)(gfx.data.flags | JSGRAPHICSFLAGS_COLOR_GBR);"
    },
    {
        "line": 43,
        "fullcodeline": "else if (!jsvIsStringEqual(colorv, \"grb\"))"
    },
    {
        "line": 44,
        "fullcodeline": "gfx.data.flags = (JsGraphicsFlags)(gfx.data.flags | JSGRAPHICSFLAGS_COLOR_GRB);"
    },
    {
        "line": 45,
        "fullcodeline": "else if (!jsvIsStringEqual(colorv, \"rbg\"))"
    },
    {
        "line": 46,
        "fullcodeline": "gfx.data.flags = (JsGraphicsFlags)(gfx.data.flags | JSGRAPHICSFLAGS_COLOR_RBG);"
    },
    {
        "line": 48,
        "fullcodeline": "jsWarn(\"color_order must be 3 characters\");"
    }
]