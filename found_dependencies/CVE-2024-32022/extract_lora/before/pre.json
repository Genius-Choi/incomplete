[
    {
        "line": 49,
        "fullcodeline": "run_cmd = ("
    },
    {
        "line": 52,
        "fullcodeline": "run_cmd += f\" --load_precision {load_precision}\""
    },
    {
        "line": 53,
        "fullcodeline": "run_cmd += f\" --save_precision {save_precision}\""
    },
    {
        "line": 54,
        "fullcodeline": "run_cmd += rf' --save_to \"{save_to}\"'"
    },
    {
        "line": 55,
        "fullcodeline": "run_cmd += rf' --model_org \"{model_org}\"'"
    },
    {
        "line": 56,
        "fullcodeline": "run_cmd += rf' --model_tuned \"{model_tuned}\"'"
    },
    {
        "line": 57,
        "fullcodeline": "run_cmd += f\" --dim {dim}\""
    },
    {
        "line": 58,
        "fullcodeline": "run_cmd += f\" --device {device}\""
    },
    {
        "line": 65,
        "fullcodeline": "run_cmd += f\" --clamp_quantile {clamp_quantile}\""
    },
    {
        "line": 66,
        "fullcodeline": "run_cmd += f\" --min_diff {min_diff}\""
    },
    {
        "line": 71,
        "fullcodeline": "log.info(run_cmd)"
    },
    {
        "line": 73,
        "fullcodeline": "env = os.environ.copy()"
    },
    {
        "line": 74,
        "fullcodeline": "env[\"PYTHONPATH\"] = ("
    },
    {
        "line": 18,
        "fullcodeline": "if model_tuned == \"\":"
    },
    {
        "line": 22,
        "fullcodeline": "if model_org == \"\":"
    },
    {
        "line": 50,
        "fullcodeline": "rf'\"{PYTHON}\" \"{scriptdir}/sd-scripts/networks/extract_lora_from_models.py\"'"
    },
    {
        "line": 59,
        "fullcodeline": "if conv_dim > 0:"
    },
    {
        "line": 75,
        "fullcodeline": "rf\"{scriptdir}{os.pathsep}{scriptdir}/sd-scripts{os.pathsep}{env.get('PYTHONPATH', '')}\""
    },
    {
        "line": 19,
        "fullcodeline": "log.info(\"Invalid finetuned model file\")"
    },
    {
        "line": 37,
        "fullcodeline": "save_to = os.path.join(os.path.dirname(model_tuned), save_to)"
    },
    {
        "line": 38,
        "fullcodeline": "if os.path.isdir(save_to):"
    },
    {
        "line": 40,
        "fullcodeline": "save_to = os.path.join(save_to, \"lora.safetensors\")"
    },
    {
        "line": 44,
        "fullcodeline": "save_to = f\"{path}_tmp{ext}\""
    },
    {
        "line": 46,
        "fullcodeline": "if not is_file_writable(save_to):"
    },
    {
        "line": 60,
        "fullcodeline": "run_cmd += f\" --conv_dim {conv_dim}\""
    },
    {
        "line": 62,
        "fullcodeline": "run_cmd += f\" --v2\""
    },
    {
        "line": 64,
        "fullcodeline": "run_cmd += f\" --sdxl\""
    },
    {
        "line": 68,
        "fullcodeline": "run_cmd += f\" --load_original_model_to {load_original_model_to}\""
    },
    {
        "line": 69,
        "fullcodeline": "run_cmd += f\" --load_tuned_model_to {load_tuned_model_to}\""
    },
    {
        "line": 27,
        "fullcodeline": "if not os.path.isfile(model_tuned):"
    },
    {
        "line": 31,
        "fullcodeline": "if not os.path.isfile(model_org):"
    },
    {
        "line": 35,
        "fullcodeline": "if os.path.dirname(save_to) == \"\":"
    },
    {
        "line": 41,
        "fullcodeline": "if os.path.normpath(model_tuned) == os.path.normpath(save_to):"
    },
    {
        "line": 43,
        "fullcodeline": "path, ext = os.path.splitext(save_to)"
    }
]