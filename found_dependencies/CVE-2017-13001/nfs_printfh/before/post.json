[
    {
        "line": 6,
        "fullcodeline": "const char *sfsname = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "Parse_fh((const u_char *)dp, len, &fsid, &ino, NULL, &sfsname, 0);"
    },
    {
        "line": 42,
        "fullcodeline": "if(fsid.Fsid_dev.Minor == 257)"
    },
    {
        "line": 11,
        "fullcodeline": "char const *sep = \"\";"
    },
    {
        "line": 13,
        "fullcodeline": "ND_PRINT((ndo, \" fh[\"));"
    },
    {
        "line": 18,
        "fullcodeline": "ND_PRINT((ndo, \"]\"));"
    },
    {
        "line": 26,
        "fullcodeline": "static char temp[NFSX_V3FHMAX+1];"
    },
    {
        "line": 29,
        "fullcodeline": "strncpy(temp, sfsname, NFSX_V3FHMAX);"
    },
    {
        "line": 30,
        "fullcodeline": "temp[sizeof(temp) - 1] = '\\0';"
    },
    {
        "line": 32,
        "fullcodeline": "spacep = strchr(temp, ' ');"
    },
    {
        "line": 36,
        "fullcodeline": "ND_PRINT((ndo, \" fh %s/\", temp));"
    },
    {
        "line": 44,
        "fullcodeline": "ND_PRINT((ndo, \"%s\", fsid.Opaque_Handle));"
    },
    {
        "line": 14,
        "fullcodeline": "for (i=0; i<len; i++) {"
    },
    {
        "line": 38,
        "fullcodeline": "ND_PRINT((ndo, \" fh %d,%d/\","
    },
    {
        "line": 46,
        "fullcodeline": "ND_PRINT((ndo, \"%ld\", (long) ino));"
    },
    {
        "line": 15,
        "fullcodeline": "ND_PRINT((ndo, \"%s%x\", sep, dp[i]));"
    },
    {
        "line": 16,
        "fullcodeline": "sep = \":\";"
    },
    {
        "line": 34,
        "fullcodeline": "*spacep = '\\0';"
    }
]