[
    {
        "line": 8,
        "fullcodeline": "int n = ci->n;"
    },
    {
        "line": 18,
        "fullcodeline": "regs = mrb->c->ci->stack+1;"
    },
    {
        "line": 30,
        "fullcodeline": "c = mrb_class(mrb, self);"
    },
    {
        "line": 31,
        "fullcodeline": "m = mrb_method_search_vm(mrb, &c, name);"
    },
    {
        "line": 36,
        "fullcodeline": "ci->mid = name;"
    },
    {
        "line": 37,
        "fullcodeline": "ci->u.target_class = c;"
    },
    {
        "line": 10,
        "fullcodeline": "if (ci->cci > CINFO_NONE) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (n == 0) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (MRB_METHOD_UNDEF_P(m)) {            /* call method_mising */"
    },
    {
        "line": 39,
        "fullcodeline": "if (n == 15) {     /* variable length arguments */"
    },
    {
        "line": 53,
        "fullcodeline": "if (MRB_METHOD_CFUNC_P(m)) {"
    },
    {
        "line": 63,
        "fullcodeline": "return exec_irep(mrb, self, MRB_METHOD_PROC(m));"
    },
    {
        "line": 14,
        "fullcodeline": "mrb_get_args(mrb, \"n*&\", &name, &argv, &argc, &block);"
    },
    {
        "line": 21,
        "fullcodeline": "mrb_argnum_error(mrb, 0, 1, -1);"
    },
    {
        "line": 40,
        "fullcodeline": "regs[0] = mrb_ary_subseq(mrb, regs[0], 1, RARRAY_LEN(regs[0]) - 1);"
    },
    {
        "line": 15,
        "fullcodeline": "return mrb_funcall_with_block(mrb, self, name, argc, argv, block);"
    },
    {
        "line": 46,
        "fullcodeline": "regs[n] = regs[n+1];        /* copy kdict or block */"
    },
    {
        "line": 50,
        "fullcodeline": "ci->n--;"
    },
    {
        "line": 54,
        "fullcodeline": "if (MRB_METHOD_NOARG_P(m)) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (MRB_METHOD_PROC_P(m)) {"
    },
    {
        "line": 61,
        "fullcodeline": "return MRB_METHOD_CFUNC(m)(mrb, self);"
    },
    {
        "line": 23,
        "fullcodeline": "else if (n == 15) {"
    },
    {
        "line": 43,
        "fullcodeline": "for (int i=0; i<n; i++) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (ci->nk > 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "check_method_noarg(mrb, ci);"
    },
    {
        "line": 59,
        "fullcodeline": "mrb_vm_ci_proc_set(ci, MRB_METHOD_PROC(m));"
    },
    {
        "line": 24,
        "fullcodeline": "name = mrb_obj_to_sym(mrb, RARRAY_PTR(regs[0])[0]);"
    },
    {
        "line": 44,
        "fullcodeline": "regs[i] = regs[i+1];"
    },
    {
        "line": 48,
        "fullcodeline": "regs[n+1] = regs[n+2];    /* copy block */"
    },
    {
        "line": 27,
        "fullcodeline": "name = mrb_obj_to_sym(mrb, regs[0]);"
    }
]