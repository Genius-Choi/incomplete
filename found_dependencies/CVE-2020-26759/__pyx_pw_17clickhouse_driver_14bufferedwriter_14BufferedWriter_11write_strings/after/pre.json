[
    {
        "line": 2,
        "fullcodeline": "PyObject *__pyx_v_items = 0;"
    },
    {
        "line": 3,
        "fullcodeline": "PyObject *__pyx_v_encoding = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "int __pyx_lineno = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "const char *__pyx_filename = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int __pyx_clineno = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "PyObject *__pyx_r = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "__Pyx_RefNannySetupContext(\"write_strings (wrapper)\", 0);"
    },
    {
        "line": 54,
        "fullcodeline": "__Pyx_RaiseArgtupleInvalid(\"write_strings\", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 49, __pyx_L3_error)"
    },
    {
        "line": 56,
        "fullcodeline": "__Pyx_AddTraceback(\"clickhouse_driver.bufferedwriter.BufferedWriter.write_strings\", __pyx_clineno, __pyx_lineno, __pyx_filename);"
    },
    {
        "line": 57,
        "fullcodeline": "__Pyx_RefNannyFinishContext();"
    },
    {
        "line": 60,
        "fullcodeline": "__pyx_r = __pyx_pf_17clickhouse_driver_14bufferedwriter_14BufferedWriter_10write_strings(((struct __pyx_obj_17clickhouse_driver_14bufferedwriter_BufferedWriter *)__pyx_v_self), __pyx_v_items, __pyx_v_encoding);"
    },
    {
        "line": 11,
        "fullcodeline": "static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_items,&__pyx_n_s_encoding,0};"
    },
    {
        "line": 12,
        "fullcodeline": "PyObject* values[2] = {0,0};"
    },
    {
        "line": 13,
        "fullcodeline": "values[1] = ((PyObject *)Py_None);"
    },
    {
        "line": 49,
        "fullcodeline": "__pyx_v_items = values[0];"
    },
    {
        "line": 50,
        "fullcodeline": "__pyx_v_encoding = values[1];"
    },
    {
        "line": 14,
        "fullcodeline": "if (unlikely(__pyx_kwds)) {"
    },
    {
        "line": 16,
        "fullcodeline": "const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);"
    },
    {
        "line": 25,
        "fullcodeline": "kw_args = PyDict_Size(__pyx_kwds);"
    },
    {
        "line": 18,
        "fullcodeline": "case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 20,
        "fullcodeline": "case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 37,
        "fullcodeline": "if (unlikely(kw_args > 0)) {"
    },
    {
        "line": 41,
        "fullcodeline": "switch (PyTuple_GET_SIZE(__pyx_args)) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_items)) != 0)) kw_args--;"
    },
    {
        "line": 32,
        "fullcodeline": "if (kw_args > 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 44,
        "fullcodeline": "case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 33,
        "fullcodeline": "PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_encoding);"
    },
    {
        "line": 34,
        "fullcodeline": "if (value) { values[1] = value; kw_args--; }"
    }
]