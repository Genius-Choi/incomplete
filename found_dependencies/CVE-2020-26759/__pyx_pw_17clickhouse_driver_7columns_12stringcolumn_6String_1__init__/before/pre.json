[
    {
        "line": 2,
        "fullcodeline": "PyObject *__pyx_v_self = 0;"
    },
    {
        "line": 3,
        "fullcodeline": "PyObject *__pyx_v_encoding = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "PyObject *__pyx_v_kwargs = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "PyObject *__pyx_r = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "__Pyx_RefNannySetupContext(\"__init__ (wrapper)\", 0);"
    },
    {
        "line": 8,
        "fullcodeline": "__pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "__Pyx_GOTREF(__pyx_v_kwargs);"
    },
    {
        "line": 58,
        "fullcodeline": "__Pyx_AddTraceback(\"clickhouse_driver.columns.stringcolumn.String.__init__\", __pyx_clineno, __pyx_lineno, __pyx_filename);"
    },
    {
        "line": 62,
        "fullcodeline": "__pyx_r = __pyx_pf_17clickhouse_driver_7columns_12stringcolumn_6String___init__(__pyx_self, __pyx_v_self, __pyx_v_encoding, __pyx_v_kwargs);"
    },
    {
        "line": 12,
        "fullcodeline": "PyObject* values[2] = {0,0};"
    },
    {
        "line": 13,
        "fullcodeline": "__pyx_defaults *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_self);"
    },
    {
        "line": 14,
        "fullcodeline": "values[1] = __pyx_dynamic_args->__pyx_arg_encoding;"
    },
    {
        "line": 50,
        "fullcodeline": "__pyx_v_self = values[0];"
    },
    {
        "line": 51,
        "fullcodeline": "__pyx_v_encoding = values[1];"
    },
    {
        "line": 55,
        "fullcodeline": "__Pyx_RaiseArgtupleInvalid(\"__init__\", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 22, __pyx_L3_error)"
    },
    {
        "line": 11,
        "fullcodeline": "static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_encoding,0};"
    },
    {
        "line": 15,
        "fullcodeline": "if (unlikely(__pyx_kwds)) {"
    },
    {
        "line": 26,
        "fullcodeline": "kw_args = PyDict_Size(__pyx_kwds);"
    },
    {
        "line": 17,
        "fullcodeline": "const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);"
    },
    {
        "line": 19,
        "fullcodeline": "case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 21,
        "fullcodeline": "case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 38,
        "fullcodeline": "if (unlikely(kw_args > 0)) {"
    },
    {
        "line": 42,
        "fullcodeline": "switch (PyTuple_GET_SIZE(__pyx_args)) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (kw_args > 0) {"
    },
    {
        "line": 43,
        "fullcodeline": "case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 45,
        "fullcodeline": "case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 29,
        "fullcodeline": "if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;"
    },
    {
        "line": 34,
        "fullcodeline": "PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_encoding);"
    },
    {
        "line": 35,
        "fullcodeline": "if (value) { values[1] = value; kw_args--; }"
    }
]