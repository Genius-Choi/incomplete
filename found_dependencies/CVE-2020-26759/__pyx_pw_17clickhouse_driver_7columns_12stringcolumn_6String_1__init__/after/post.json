[
    {
        "line": 2,
        "fullcodeline": "PyObject *__pyx_v_self = 0;"
    },
    {
        "line": 3,
        "fullcodeline": "PyObject *__pyx_v_encoding = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "PyObject *__pyx_v_kwargs = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int __pyx_lineno = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "const char *__pyx_filename = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "int __pyx_clineno = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "PyObject *__pyx_r = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "__Pyx_RefNannySetupContext(\"__init__ (wrapper)\", 0);"
    },
    {
        "line": 11,
        "fullcodeline": "__pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "__Pyx_GOTREF(__pyx_v_kwargs);"
    },
    {
        "line": 58,
        "fullcodeline": "__Pyx_RaiseArgtupleInvalid(\"__init__\", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 22, __pyx_L3_error)"
    },
    {
        "line": 60,
        "fullcodeline": "__Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;"
    },
    {
        "line": 61,
        "fullcodeline": "__Pyx_AddTraceback(\"clickhouse_driver.columns.stringcolumn.String.__init__\", __pyx_clineno, __pyx_lineno, __pyx_filename);"
    },
    {
        "line": 62,
        "fullcodeline": "__Pyx_RefNannyFinishContext();"
    },
    {
        "line": 65,
        "fullcodeline": "__pyx_r = __pyx_pf_17clickhouse_driver_7columns_12stringcolumn_6String___init__(__pyx_self, __pyx_v_self, __pyx_v_encoding, __pyx_v_kwargs);"
    },
    {
        "line": 68,
        "fullcodeline": "__Pyx_XDECREF(__pyx_v_kwargs);"
    },
    {
        "line": 69,
        "fullcodeline": "__Pyx_RefNannyFinishContext();"
    },
    {
        "line": 14,
        "fullcodeline": "static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_encoding,0};"
    },
    {
        "line": 15,
        "fullcodeline": "PyObject* values[2] = {0,0};"
    },
    {
        "line": 16,
        "fullcodeline": "__pyx_defaults *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_self);"
    },
    {
        "line": 17,
        "fullcodeline": "values[1] = __pyx_dynamic_args->__pyx_arg_encoding;"
    },
    {
        "line": 53,
        "fullcodeline": "__pyx_v_self = values[0];"
    },
    {
        "line": 54,
        "fullcodeline": "__pyx_v_encoding = values[1];"
    },
    {
        "line": 18,
        "fullcodeline": "if (unlikely(__pyx_kwds)) {"
    },
    {
        "line": 20,
        "fullcodeline": "const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);"
    },
    {
        "line": 29,
        "fullcodeline": "kw_args = PyDict_Size(__pyx_kwds);"
    },
    {
        "line": 41,
        "fullcodeline": "if (unlikely(kw_args > 0)) {"
    },
    {
        "line": 22,
        "fullcodeline": "case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 24,
        "fullcodeline": "case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 42,
        "fullcodeline": "if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, \"__init__\") < 0)) __PYX_ERR(0, 22, __pyx_L3_error)"
    },
    {
        "line": 45,
        "fullcodeline": "switch (PyTuple_GET_SIZE(__pyx_args)) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;"
    },
    {
        "line": 36,
        "fullcodeline": "if (kw_args > 0) {"
    },
    {
        "line": 46,
        "fullcodeline": "case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 48,
        "fullcodeline": "case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 37,
        "fullcodeline": "PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_encoding);"
    },
    {
        "line": 38,
        "fullcodeline": "if (value) { values[1] = value; kw_args--; }"
    }
]