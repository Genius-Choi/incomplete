[
    {
        "line": 2,
        "fullcodeline": "PyObject *__pyx_v_spec = 0;"
    },
    {
        "line": 3,
        "fullcodeline": "PyObject *__pyx_v_column_options = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "PyObject *__pyx_r = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "__Pyx_RefNannySetupContext(\"create_string_column (wrapper)\", 0);"
    },
    {
        "line": 47,
        "fullcodeline": "__Pyx_RaiseArgtupleInvalid(\"create_string_column\", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 158, __pyx_L3_error)"
    },
    {
        "line": 49,
        "fullcodeline": "__Pyx_AddTraceback(\"clickhouse_driver.columns.stringcolumn.create_string_column\", __pyx_clineno, __pyx_lineno, __pyx_filename);"
    },
    {
        "line": 50,
        "fullcodeline": "__Pyx_RefNannyFinishContext();"
    },
    {
        "line": 53,
        "fullcodeline": "__pyx_r = __pyx_pf_17clickhouse_driver_7columns_12stringcolumn_create_string_column(__pyx_self, __pyx_v_spec, __pyx_v_column_options);"
    },
    {
        "line": 56,
        "fullcodeline": "__Pyx_RefNannyFinishContext();"
    },
    {
        "line": 8,
        "fullcodeline": "static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_spec,&__pyx_n_s_column_options,0};"
    },
    {
        "line": 9,
        "fullcodeline": "PyObject* values[2] = {0,0};"
    },
    {
        "line": 42,
        "fullcodeline": "__pyx_v_spec = values[0];"
    },
    {
        "line": 43,
        "fullcodeline": "__pyx_v_column_options = values[1];"
    },
    {
        "line": 10,
        "fullcodeline": "if (unlikely(__pyx_kwds)) {"
    },
    {
        "line": 12,
        "fullcodeline": "const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);"
    },
    {
        "line": 21,
        "fullcodeline": "kw_args = PyDict_Size(__pyx_kwds);"
    },
    {
        "line": 33,
        "fullcodeline": "if (unlikely(kw_args > 0)) {"
    },
    {
        "line": 14,
        "fullcodeline": "case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 16,
        "fullcodeline": "case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 34,
        "fullcodeline": "if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, \"create_string_column\") < 0)) __PYX_ERR(0, 158, __pyx_L3_error)"
    },
    {
        "line": 36,
        "fullcodeline": "} else if (PyTuple_GET_SIZE(__pyx_args) != 2) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_spec)) != 0)) kw_args--;"
    },
    {
        "line": 28,
        "fullcodeline": "if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_column_options)) != 0)) kw_args--;"
    },
    {
        "line": 39,
        "fullcodeline": "values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 40,
        "fullcodeline": "values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 30,
        "fullcodeline": "__Pyx_RaiseArgtupleInvalid(\"create_string_column\", 1, 2, 2, 1); __PYX_ERR(0, 158, __pyx_L3_error)"
    }
]