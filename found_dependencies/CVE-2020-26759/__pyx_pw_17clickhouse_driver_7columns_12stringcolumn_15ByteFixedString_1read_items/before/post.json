[
    {
        "line": 2,
        "fullcodeline": "PyObject *__pyx_v_self = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "PyObject *__pyx_v_buf = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "PyObject *__pyx_r = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "__Pyx_RefNannySetupContext(\"read_items (wrapper)\", 0);"
    },
    {
        "line": 58,
        "fullcodeline": "__Pyx_RaiseArgtupleInvalid(\"read_items\", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 118, __pyx_L3_error)"
    },
    {
        "line": 60,
        "fullcodeline": "__Pyx_AddTraceback(\"clickhouse_driver.columns.stringcolumn.ByteFixedString.read_items\", __pyx_clineno, __pyx_lineno, __pyx_filename);"
    },
    {
        "line": 61,
        "fullcodeline": "__Pyx_RefNannyFinishContext();"
    },
    {
        "line": 64,
        "fullcodeline": "__pyx_r = __pyx_pf_17clickhouse_driver_7columns_12stringcolumn_15ByteFixedString_read_items(__pyx_self, __pyx_v_self, __pyx_v_n_items, __pyx_v_buf);"
    },
    {
        "line": 67,
        "fullcodeline": "__Pyx_RefNannyFinishContext();"
    },
    {
        "line": 9,
        "fullcodeline": "static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_n_items,&__pyx_n_s_buf,0};"
    },
    {
        "line": 10,
        "fullcodeline": "PyObject* values[3] = {0,0,0};"
    },
    {
        "line": 52,
        "fullcodeline": "__pyx_v_self = values[0];"
    },
    {
        "line": 53,
        "fullcodeline": "__pyx_v_n_items = __Pyx_PyIndex_AsSsize_t(values[1]); if (unlikely((__pyx_v_n_items == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 118, __pyx_L3_error)"
    },
    {
        "line": 54,
        "fullcodeline": "__pyx_v_buf = values[2];"
    },
    {
        "line": 11,
        "fullcodeline": "if (unlikely(__pyx_kwds)) {"
    },
    {
        "line": 13,
        "fullcodeline": "const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);"
    },
    {
        "line": 24,
        "fullcodeline": "kw_args = PyDict_Size(__pyx_kwds);"
    },
    {
        "line": 42,
        "fullcodeline": "if (unlikely(kw_args > 0)) {"
    },
    {
        "line": 15,
        "fullcodeline": "case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);"
    },
    {
        "line": 17,
        "fullcodeline": "case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 19,
        "fullcodeline": "case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 43,
        "fullcodeline": "if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, \"read_items\") < 0)) __PYX_ERR(0, 118, __pyx_L3_error)"
    },
    {
        "line": 45,
        "fullcodeline": "} else if (PyTuple_GET_SIZE(__pyx_args) != 3) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;"
    },
    {
        "line": 31,
        "fullcodeline": "if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_items)) != 0)) kw_args--;"
    },
    {
        "line": 37,
        "fullcodeline": "if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_buf)) != 0)) kw_args--;"
    },
    {
        "line": 48,
        "fullcodeline": "values[0] = PyTuple_GET_ITEM(__pyx_args, 0);"
    },
    {
        "line": 49,
        "fullcodeline": "values[1] = PyTuple_GET_ITEM(__pyx_args, 1);"
    },
    {
        "line": 50,
        "fullcodeline": "values[2] = PyTuple_GET_ITEM(__pyx_args, 2);"
    },
    {
        "line": 33,
        "fullcodeline": "__Pyx_RaiseArgtupleInvalid(\"read_items\", 1, 3, 3, 1); __PYX_ERR(0, 118, __pyx_L3_error)"
    },
    {
        "line": 39,
        "fullcodeline": "__Pyx_RaiseArgtupleInvalid(\"read_items\", 1, 3, 3, 2); __PYX_ERR(0, 118, __pyx_L3_error)"
    }
]