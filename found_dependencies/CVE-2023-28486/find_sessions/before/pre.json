[
    {
        "line": 6,
        "fullcodeline": "size_t sdlen, sessions_len = 0, sessions_size = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "char pathbuf[PATH_MAX], **sessions = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "const bool checked_type = false;"
    },
    {
        "line": 15,
        "fullcodeline": "debug_decl(find_sessions, SUDO_DEBUG_UTIL);"
    },
    {
        "line": 17,
        "fullcodeline": "d = opendir(dir);"
    },
    {
        "line": 22,
        "fullcodeline": "sdlen = strlcpy(pathbuf, dir, sizeof(pathbuf));"
    },
    {
        "line": 27,
        "fullcodeline": "pathbuf[sdlen++] = '/';"
    },
    {
        "line": 28,
        "fullcodeline": "pathbuf[sdlen] = '\\0';"
    },
    {
        "line": 60,
        "fullcodeline": "closedir(d);"
    },
    {
        "line": 89,
        "fullcodeline": "debug_return_int(0);"
    },
    {
        "line": 18,
        "fullcodeline": "if (d == NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "if (sdlen + 1 >= sizeof(pathbuf)) {"
    },
    {
        "line": 31,
        "fullcodeline": "while ((dp = readdir(d)) != NULL) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (sessions != NULL) {"
    },
    {
        "line": 19,
        "fullcodeline": "sudo_fatal(U_(\"unable to open %s\"), dir);"
    },
    {
        "line": 24,
        "fullcodeline": "errno = ENAMETOOLONG;"
    },
    {
        "line": 25,
        "fullcodeline": "sudo_fatal(\"%s/\", dir);"
    },
    {
        "line": 58,
        "fullcodeline": "sessions_len++;"
    },
    {
        "line": 64,
        "fullcodeline": "qsort(sessions, sessions_len, sizeof(char *), session_compare);"
    },
    {
        "line": 86,
        "fullcodeline": "free(sessions);"
    },
    {
        "line": 33,
        "fullcodeline": "if (dp->d_name[0] == '.' && (dp->d_name[1] == '\\0' ||"
    },
    {
        "line": 48,
        "fullcodeline": "if (sessions_len + 1 > sessions_size) {"
    },
    {
        "line": 56,
        "fullcodeline": "if ((sessions[sessions_len] = strdup(dp->d_name)) == NULL)"
    },
    {
        "line": 65,
        "fullcodeline": "for (i = 0; i < sessions_len; i++) {"
    },
    {
        "line": 51,
        "fullcodeline": "sessions = reallocarray(sessions, sessions_size, 2 * sizeof(char *));"
    },
    {
        "line": 54,
        "fullcodeline": "sessions_size *= 2;"
    },
    {
        "line": 57,
        "fullcodeline": "sudo_fatalx(U_(\"%s: %s\"), __func__, U_(\"unable to allocate memory\"));"
    },
    {
        "line": 66,
        "fullcodeline": "len = snprintf(&pathbuf[sdlen], sizeof(pathbuf) - sdlen,"
    },
    {
        "line": 72,
        "fullcodeline": "free(sessions[i]);"
    },
    {
        "line": 34,
        "fullcodeline": "(dp->d_name[1] == '.' && dp->d_name[2] == '\\0')))"
    },
    {
        "line": 49,
        "fullcodeline": "if (sessions_size == 0)"
    },
    {
        "line": 52,
        "fullcodeline": "if (sessions == NULL)"
    },
    {
        "line": 68,
        "fullcodeline": "if (len < 0 || (size_t)len >= sizeof(pathbuf) - sdlen) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (lstat(pathbuf, &sb) == 0 && S_ISREG(sb.st_mode)) {"
    },
    {
        "line": 50,
        "fullcodeline": "sessions_size = 36 * 36 / 2;"
    },
    {
        "line": 53,
        "fullcodeline": "sudo_fatalx(U_(\"%s: %s\"), __func__, U_(\"unable to allocate memory\"));"
    },
    {
        "line": 69,
        "fullcodeline": "errno = ENAMETOOLONG;"
    },
    {
        "line": 70,
        "fullcodeline": "sudo_fatal(\"%s/%s/log\", dir, sessions[i]);"
    },
    {
        "line": 76,
        "fullcodeline": "pathbuf[sdlen + len - 4] = '\\0';"
    },
    {
        "line": 77,
        "fullcodeline": "list_session(pathbuf, re, user, tty);"
    },
    {
        "line": 80,
        "fullcodeline": "pathbuf[sdlen + len - 4] = '\\0';"
    },
    {
        "line": 81,
        "fullcodeline": "if (checked_type ||"
    },
    {
        "line": 82,
        "fullcodeline": "(lstat(pathbuf, &sb) == 0 && S_ISDIR(sb.st_mode)))"
    },
    {
        "line": 83,
        "fullcodeline": "find_sessions(pathbuf, re, user, tty);"
    }
]