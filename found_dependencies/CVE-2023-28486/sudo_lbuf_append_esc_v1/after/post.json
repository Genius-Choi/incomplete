[
    {
        "line": 3,
        "fullcodeline": "unsigned int saved_len = lbuf->len;"
    },
    {
        "line": 4,
        "fullcodeline": "bool ret = false;"
    },
    {
        "line": 7,
        "fullcodeline": "debug_decl(sudo_lbuf_append_esc, SUDO_DEBUG_UTIL);"
    },
    {
        "line": 18,
        "fullcodeline": "va_start(ap, fmt);"
    },
    {
        "line": 59,
        "fullcodeline": "ret = true;"
    },
    {
        "line": 66,
        "fullcodeline": "va_end(ap);"
    },
    {
        "line": 68,
        "fullcodeline": "debug_return_bool(ret);"
    },
    {
        "line": 9,
        "fullcodeline": "if (sudo_lbuf_error(lbuf))"
    },
    {
        "line": 19,
        "fullcodeline": "while (*fmt != '\\0') {"
    },
    {
        "line": 62,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 64,
        "fullcodeline": "if (lbuf->size != 0)"
    },
    {
        "line": 10,
        "fullcodeline": "debug_return_bool(false);"
    },
    {
        "line": 63,
        "fullcodeline": "lbuf->len = saved_len;"
    },
    {
        "line": 65,
        "fullcodeline": "lbuf->buf[lbuf->len] = '\\0';"
    },
    {
        "line": 20,
        "fullcodeline": "if (fmt[0] == '%' && fmt[1] == 's') {"
    },
    {
        "line": 44,
        "fullcodeline": "if (should_escape(*fmt)) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (!sudo_lbuf_expand(lbuf, 1))"
    },
    {
        "line": 41,
        "fullcodeline": "fmt += 2;"
    },
    {
        "line": 57,
        "fullcodeline": "lbuf->buf[lbuf->len++] = *fmt++;"
    },
    {
        "line": 23,
        "fullcodeline": "while (*s != '\\0') {"
    },
    {
        "line": 45,
        "fullcodeline": "if (!sudo_lbuf_expand(lbuf, sizeof(\"#0177\") - 1))"
    },
    {
        "line": 47,
        "fullcodeline": "if (*fmt == '\\'') {"
    },
    {
        "line": 22,
        "fullcodeline": "s = \"(NULL)\";"
    },
    {
        "line": 48,
        "fullcodeline": "lbuf->buf[lbuf->len++] = '\\\\';"
    },
    {
        "line": 24,
        "fullcodeline": "if (should_escape(*s)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (should_quote(*s)) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (!sudo_lbuf_expand(lbuf, 1))"
    },
    {
        "line": 51,
        "fullcodeline": "lbuf->len += escape(*fmt++, lbuf->buf + lbuf->len);"
    },
    {
        "line": 27,
        "fullcodeline": "lbuf->len += escape(*s++, lbuf->buf + lbuf->len);"
    },
    {
        "line": 33,
        "fullcodeline": "lbuf->buf[lbuf->len++] = '\\\\';"
    },
    {
        "line": 39,
        "fullcodeline": "lbuf->buf[lbuf->len++] = *s++;"
    },
    {
        "line": 49,
        "fullcodeline": "lbuf->buf[lbuf->len++] = *fmt++;"
    },
    {
        "line": 25,
        "fullcodeline": "if (!sudo_lbuf_expand(lbuf, sizeof(\"#0177\") - 1))"
    },
    {
        "line": 31,
        "fullcodeline": "if (!sudo_lbuf_expand(lbuf, 2))"
    },
    {
        "line": 34,
        "fullcodeline": "lbuf->buf[lbuf->len++] = *s++;"
    }
]