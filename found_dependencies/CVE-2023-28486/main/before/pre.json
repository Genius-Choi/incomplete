[
    {
        "line": 3,
        "fullcodeline": "int ch, i, iolog_dir_fd, len, exitcode = EXIT_FAILURE;"
    },
    {
        "line": 4,
        "fullcodeline": "bool def_filter = true, listonly = false;"
    },
    {
        "line": 5,
        "fullcodeline": "bool interactive = true, suspend_wait = false, resize = true;"
    },
    {
        "line": 6,
        "fullcodeline": "const char *decimal, *id, *user = NULL, *pattern = NULL, *tty = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "char *cp, *ep, iolog_dir[PATH_MAX];"
    },
    {
        "line": 8,
        "fullcodeline": "struct timespec offset = { 0, 0};"
    },
    {
        "line": 10,
        "fullcodeline": "struct timespec max_delay_storage, *max_delay = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "debug_decl(main, SUDO_DEBUG_MAIN);"
    },
    {
        "line": 21,
        "fullcodeline": "initprogname(argc > 0 ? argv[0] : \"sudoreplay\");"
    },
    {
        "line": 22,
        "fullcodeline": "setlocale(LC_ALL, \"\");"
    },
    {
        "line": 23,
        "fullcodeline": "decimal = localeconv()->decimal_point;"
    },
    {
        "line": 24,
        "fullcodeline": "bindtextdomain(\"sudoers\", LOCALEDIR); /* XXX - should have sudoreplay domain */"
    },
    {
        "line": 25,
        "fullcodeline": "textdomain(\"sudoers\");"
    },
    {
        "line": 28,
        "fullcodeline": "sudo_fatal_callback_register(sudoreplay_cleanup);"
    },
    {
        "line": 33,
        "fullcodeline": "sudo_debug_register(getprogname(), NULL, NULL,"
    },
    {
        "line": 107,
        "fullcodeline": "argc -= optind;"
    },
    {
        "line": 108,
        "fullcodeline": "argv += optind;"
    },
    {
        "line": 126,
        "fullcodeline": "id = argv[0];"
    },
    {
        "line": 172,
        "fullcodeline": "printf(_(\"Replaying sudo session: %s\"), evlog->command);"
    },
    {
        "line": 177,
        "fullcodeline": "setup_terminal(evlog, interactive, resize);"
    },
    {
        "line": 178,
        "fullcodeline": "putchar('\\r');"
    },
    {
        "line": 179,
        "fullcodeline": "putchar('\\n');"
    },
    {
        "line": 182,
        "fullcodeline": "eventlog_free(evlog);"
    },
    {
        "line": 183,
        "fullcodeline": "evlog = NULL;"
    },
    {
        "line": 186,
        "fullcodeline": "exitcode = replay_session(iolog_dir_fd, iolog_dir, &offset, max_delay,"
    },
    {
        "line": 189,
        "fullcodeline": "restore_terminal_size();"
    },
    {
        "line": 190,
        "fullcodeline": "sudo_term_restore(ttyfd, true);"
    },
    {
        "line": 192,
        "fullcodeline": "sudo_debug_exit_int(__func__, __FILE__, __LINE__, sudo_debug_subsys, exitcode);"
    },
    {
        "line": 31,
        "fullcodeline": "if (sudo_conf_read(NULL, SUDO_CONF_DEBUG) == -1)"
    },
    {
        "line": 34,
        "fullcodeline": "sudo_conf_debug_files(getprogname()), -1);"
    },
    {
        "line": 36,
        "fullcodeline": "while ((ch = getopt_long(argc, argv, short_opts, long_opts, NULL)) != -1) {"
    },
    {
        "line": 115,
        "fullcodeline": "if (argc != 1)"
    },
    {
        "line": 127,
        "fullcodeline": "if ((cp = strchr(id, '@')) != NULL) {"
    },
    {
        "line": 135,
        "fullcodeline": "if (VALID_ID(id)) {"
    },
    {
        "line": 154,
        "fullcodeline": "if ((iolog_dir_fd = iolog_openat(AT_FDCWD, iolog_dir, O_RDONLY)) == -1)"
    },
    {
        "line": 156,
        "fullcodeline": "for (i = 0; i < IOFD_MAX; i++) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (!iolog_files[IOFD_TIMING].enabled) {"
    },
    {
        "line": 170,
        "fullcodeline": "if ((evlog = iolog_parse_loginfo(iolog_dir_fd, iolog_dir)) == NULL)"
    },
    {
        "line": 175,
        "fullcodeline": "if (!isatty(STDIN_FILENO) || !isatty(STDOUT_FILENO))"
    },
    {
        "line": 32,
        "fullcodeline": "exit(EXIT_FAILURE);"
    },
    {
        "line": 111,
        "fullcodeline": "exitcode = list_sessions(argc, argv, pattern, user, tty);"
    },
    {
        "line": 116,
        "fullcodeline": "usage();"
    },
    {
        "line": 120,
        "fullcodeline": "iolog_files[IOFD_STDOUT].enabled = true;"
    },
    {
        "line": 121,
        "fullcodeline": "iolog_files[IOFD_STDERR].enabled = true;"
    },
    {
        "line": 122,
        "fullcodeline": "iolog_files[IOFD_TTYOUT].enabled = true;"
    },
    {
        "line": 128,
        "fullcodeline": "ep = iolog_parse_delay(cp + 1, &offset, decimal);"
    },
    {
        "line": 131,
        "fullcodeline": "*cp = '\\0';"
    },
    {
        "line": 136,
        "fullcodeline": "len = snprintf(iolog_dir, sizeof(iolog_dir), \"%s/%.2s/%.2s/%.2s\","
    },
    {
        "line": 155,
        "fullcodeline": "sudo_fatal(\"%s\", iolog_dir);"
    },
    {
        "line": 165,
        "fullcodeline": "sudo_fatal(U_(\"unable to open %s/%s\"), iolog_dir,"
    },
    {
        "line": 176,
        "fullcodeline": "interactive = false;"
    },
    {
        "line": 129,
        "fullcodeline": "if (ep == NULL || *ep != '\\0')"
    },
    {
        "line": 138,
        "fullcodeline": "if (len < 0 || len >= ssizeof(iolog_dir))"
    },
    {
        "line": 157,
        "fullcodeline": "if (!iolog_open(&iolog_files[i], iolog_dir_fd, i, \"r\")) {"
    },
    {
        "line": 166,
        "fullcodeline": "iolog_fd_to_name(IOFD_TIMING));"
    },
    {
        "line": 39,
        "fullcodeline": "session_dir = optarg;"
    },
    {
        "line": 43,
        "fullcodeline": "def_filter = false;"
    },
    {
        "line": 60,
        "fullcodeline": "follow_mode = true;"
    },
    {
        "line": 63,
        "fullcodeline": "help();"
    },
    {
        "line": 66,
        "fullcodeline": "listonly = true;"
    },
    {
        "line": 69,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "dval = strtod(optarg, &ep);"
    },
    {
        "line": 80,
        "fullcodeline": "max_delay = &max_delay_storage;"
    },
    {
        "line": 83,
        "fullcodeline": "interactive = false;"
    },
    {
        "line": 86,
        "fullcodeline": "resize = false;"
    },
    {
        "line": 89,
        "fullcodeline": "suspend_wait = true;"
    },
    {
        "line": 92,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 93,
        "fullcodeline": "speed_factor = strtod(optarg, &ep);"
    },
    {
        "line": 98,
        "fullcodeline": "(void) printf(_(\"%s version %s\\n\"), getprogname(), PACKAGE_VERSION);"
    },
    {
        "line": 99,
        "fullcodeline": "exitcode = EXIT_SUCCESS;"
    },
    {
        "line": 102,
        "fullcodeline": "usage();"
    },
    {
        "line": 130,
        "fullcodeline": "sudo_fatalx(U_(\"invalid time offset %s\"), cp + 1);"
    },
    {
        "line": 139,
        "fullcodeline": "sudo_fatalx(U_(\"%s/%.2s/%.2s/%.2s: %s\"), session_dir,"
    },
    {
        "line": 141,
        "fullcodeline": "} else if (id[0] == '/') {"
    },
    {
        "line": 44,
        "fullcodeline": "for (cp = strtok_r(optarg, \",\", &ep); cp; cp = strtok_r(NULL, \",\", &ep)) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (*ep != '\\0' || errno != 0)"
    },
    {
        "line": 73,
        "fullcodeline": "if (dval <= 0.0) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (*ep != '\\0' || errno != 0)"
    },
    {
        "line": 140,
        "fullcodeline": "id, &id[2], &id[4], strerror(ENAMETOOLONG));"
    },
    {
        "line": 142,
        "fullcodeline": "len = snprintf(iolog_dir, sizeof(iolog_dir), \"%s\", id);"
    },
    {
        "line": 158,
        "fullcodeline": "if (errno != ENOENT) {"
    },
    {
        "line": 72,
        "fullcodeline": "sudo_fatalx(U_(\"invalid max wait: %s\"), optarg);"
    },
    {
        "line": 74,
        "fullcodeline": "sudo_timespecclear(&max_delay_storage);"
    },
    {
        "line": 95,
        "fullcodeline": "sudo_fatalx(U_(\"invalid speed factor: %s\"), optarg);"
    },
    {
        "line": 143,
        "fullcodeline": "if (len < 0 || len >= ssizeof(iolog_dir))"
    },
    {
        "line": 146,
        "fullcodeline": "len = snprintf(iolog_dir, sizeof(iolog_dir), \"%s/%s\", session_dir, id);"
    },
    {
        "line": 159,
        "fullcodeline": "sudo_fatal(U_(\"unable to open %s/%s\"), iolog_dir,"
    },
    {
        "line": 45,
        "fullcodeline": "if (strcmp(cp, \"stdin\") == 0)"
    },
    {
        "line": 76,
        "fullcodeline": "max_delay_storage.tv_sec = dval;"
    },
    {
        "line": 77,
        "fullcodeline": "max_delay_storage.tv_nsec ="
    },
    {
        "line": 144,
        "fullcodeline": "sudo_fatalx(U_(\"%s/timing: %s\"), id, strerror(ENAMETOOLONG));"
    },
    {
        "line": 147,
        "fullcodeline": "if (len < 0 || len >= ssizeof(iolog_dir)) {"
    },
    {
        "line": 160,
        "fullcodeline": "iolog_fd_to_name(i));"
    },
    {
        "line": 46,
        "fullcodeline": "iolog_files[IOFD_STDIN].enabled = true;"
    },
    {
        "line": 78,
        "fullcodeline": "(dval - max_delay_storage.tv_sec) * 1000000000.0;"
    },
    {
        "line": 148,
        "fullcodeline": "sudo_fatalx(U_(\"%s/%s: %s\"), session_dir, id,"
    },
    {
        "line": 149,
        "fullcodeline": "strerror(ENAMETOOLONG));"
    },
    {
        "line": 47,
        "fullcodeline": "else if (strcmp(cp, \"stdout\") == 0)"
    },
    {
        "line": 48,
        "fullcodeline": "iolog_files[IOFD_STDOUT].enabled = true;"
    },
    {
        "line": 49,
        "fullcodeline": "else if (strcmp(cp, \"stderr\") == 0)"
    },
    {
        "line": 50,
        "fullcodeline": "iolog_files[IOFD_STDERR].enabled = true;"
    },
    {
        "line": 51,
        "fullcodeline": "else if (strcmp(cp, \"ttyin\") == 0)"
    },
    {
        "line": 52,
        "fullcodeline": "iolog_files[IOFD_TTYIN].enabled = true;"
    },
    {
        "line": 53,
        "fullcodeline": "else if (strcmp(cp, \"ttyout\") == 0)"
    },
    {
        "line": 54,
        "fullcodeline": "iolog_files[IOFD_TTYOUT].enabled = true;"
    },
    {
        "line": 56,
        "fullcodeline": "sudo_fatalx(U_(\"invalid filter option: %s\"), optarg);"
    }
]