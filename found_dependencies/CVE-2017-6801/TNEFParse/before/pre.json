[
    {
        "line": 23,
        "fullcodeline": "DEBUG(TNEF->Debug, 2, \"Reading Signature\");"
    },
    {
        "line": 32,
        "fullcodeline": "DEBUG(TNEF->Debug, 2, \"Checking Signature\");"
    },
    {
        "line": 41,
        "fullcodeline": "DEBUG(TNEF->Debug, 2, \"Reading Key.\");"
    },
    {
        "line": 51,
        "fullcodeline": "DEBUG(TNEF->Debug, 2, \"Starting Full Processing.\");"
    },
    {
        "line": 10,
        "fullcodeline": "if (TNEF->IO.ReadProc == NULL) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (TNEF->IO.InitProc != NULL) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (TNEF->IO.CloseProc != NULL) {"
    },
    {
        "line": 11,
        "fullcodeline": "printf(\"ERROR: Setup incorrectly: No ReadProc\\n\");"
    },
    {
        "line": 16,
        "fullcodeline": "DEBUG(TNEF->Debug, 2, \"About to initialize\");"
    },
    {
        "line": 20,
        "fullcodeline": "DEBUG(TNEF->Debug, 2, \"Initialization finished\");"
    },
    {
        "line": 24,
        "fullcodeline": "if (TNEF->IO.ReadProc(&TNEF->IO, sizeof(DWORD), 1, &signature) < 1) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (TNEFCheckForSignature(signature) < 0) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (TNEFGetKey(TNEF, &key) < 0) {"
    },
    {
        "line": 53,
        "fullcodeline": "while (TNEFGetHeader(TNEF, &type, &size) == 0) {"
    },
    {
        "line": 54,
        "fullcodeline": "DEBUG2(TNEF->Debug, 2, \"Header says type=0x%X, size=%u\", type, size);"
    },
    {
        "line": 55,
        "fullcodeline": "DEBUG2(TNEF->Debug, 2, \"Header says type=%u, size=%u\", type, size);"
    },
    {
        "line": 56,
        "fullcodeline": "data = calloc(size, sizeof(BYTE));"
    },
    {
        "line": 57,
        "fullcodeline": "ALLOCCHECK(data);"
    },
    {
        "line": 74,
        "fullcodeline": "checksum = SwapWord((BYTE *)&checksum, sizeof(WORD));"
    },
    {
        "line": 26,
        "fullcodeline": "if (TNEF->IO.CloseProc != NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (TNEF->IO.CloseProc != NULL) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (TNEF->IO.CloseProc != NULL) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (checksum != header_checksum) {"
    },
    {
        "line": 83,
        "fullcodeline": "for (i = 0; i < (sizeof(TNEFList) / sizeof(TNEFHandler)); i++) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (TNEF->IO.InitProc(&TNEF->IO) != 0) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (TNEFRawRead(TNEF, data, size, &header_checksum) < 0) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (TNEFRawRead(TNEF, (BYTE *)&checksum, 2, NULL) < 0) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (TNEF->IO.CloseProc != NULL) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (TNEF->IO.CloseProc != NULL) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (TNEF->IO.CloseProc != NULL) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (TNEFList[i].id == type) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (TNEFList[i].handler != NULL) {"
    },
    {
        "line": 97,
        "fullcodeline": "DEBUG2(TNEF->Debug, 1, \"No handler for %s: %u bytes\","
    },
    {
        "line": 86,
        "fullcodeline": "if (TNEFList[i].handler(TNEF, i, (char*)data, size) < 0) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (TNEF->IO.CloseProc != NULL) {"
    }
]