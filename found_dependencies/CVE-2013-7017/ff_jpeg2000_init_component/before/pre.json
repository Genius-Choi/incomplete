[
    {
        "line": 8,
        "fullcodeline": "int reslevelno, bandno, gbandno = 0, ret, i, j;"
    },
    {
        "line": 21,
        "fullcodeline": "csize = (comp->coord[0][1] - comp->coord[0][0]) *"
    },
    {
        "line": 35,
        "fullcodeline": "comp->reslevel = av_malloc_array(codsty->nreslevels, sizeof(*comp->reslevel));"
    },
    {
        "line": 11,
        "fullcodeline": "if (codsty->nreslevels2decode <= 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (ret = ff_jpeg2000_dwt_init(&comp->dwt, comp->coord,"
    },
    {
        "line": 24,
        "fullcodeline": "if (codsty->transform == FF_DWT97) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (!comp->reslevel)"
    },
    {
        "line": 39,
        "fullcodeline": "for (reslevelno = 0; reslevelno < codsty->nreslevels; reslevelno++) {"
    },
    {
        "line": 12,
        "fullcodeline": "av_log(avctx, AV_LOG_ERROR, \"nreslevels2decode %d invalid or uninitialized\\n\", codsty->nreslevels2decode);"
    },
    {
        "line": 22,
        "fullcodeline": "(comp->coord[1][1] - comp->coord[1][0]);"
    },
    {
        "line": 26,
        "fullcodeline": "comp->f_data = av_malloc_array(csize, sizeof(*comp->f_data));"
    },
    {
        "line": 40,
        "fullcodeline": "int declvl = codsty->nreslevels - reslevelno;    // N_L -r see  ISO/IEC 15444-1:2002 B.5"
    },
    {
        "line": 41,
        "fullcodeline": "Jpeg2000ResLevel *reslevel = comp->reslevel + reslevelno;"
    },
    {
        "line": 51,
        "fullcodeline": "reslevel->log2_prec_width  = codsty->log2_prec_widths[reslevelno];"
    },
    {
        "line": 52,
        "fullcodeline": "reslevel->log2_prec_height = codsty->log2_prec_heights[reslevelno];"
    },
    {
        "line": 83,
        "fullcodeline": "reslevel->band = av_malloc_array(reslevel->nbands, sizeof(*reslevel->band));"
    },
    {
        "line": 17,
        "fullcodeline": "codsty->nreslevels2decode - 1,"
    },
    {
        "line": 31,
        "fullcodeline": "comp->i_data = av_malloc_array(csize, sizeof(*comp->i_data));"
    },
    {
        "line": 37,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 46,
        "fullcodeline": "for (i = 0; i < 2; i++)"
    },
    {
        "line": 55,
        "fullcodeline": "if (reslevelno == 0)"
    },
    {
        "line": 67,
        "fullcodeline": "if (reslevel->coord[0][1] == reslevel->coord[0][0])"
    },
    {
        "line": 75,
        "fullcodeline": "if (reslevel->coord[1][1] == reslevel->coord[1][0])"
    },
    {
        "line": 84,
        "fullcodeline": "if (!reslevel->band)"
    },
    {
        "line": 87,
        "fullcodeline": "for (bandno = 0; bandno < reslevel->nbands; bandno++, gbandno++) {"
    },
    {
        "line": 47,
        "fullcodeline": "for (j = 0; j < 2; j++)"
    },
    {
        "line": 56,
        "fullcodeline": "reslevel->nbands = 1;"
    },
    {
        "line": 68,
        "fullcodeline": "reslevel->num_precincts_x = 0;"
    },
    {
        "line": 76,
        "fullcodeline": "reslevel->num_precincts_y = 0;"
    },
    {
        "line": 88,
        "fullcodeline": "Jpeg2000Band *band = reslevel->band + bandno;"
    },
    {
        "line": 179,
        "fullcodeline": "band->prec = av_malloc_array(reslevel->num_precincts_x *"
    },
    {
        "line": 185,
        "fullcodeline": "nb_precincts = reslevel->num_precincts_x * reslevel->num_precincts_y;"
    },
    {
        "line": 28,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 49,
        "fullcodeline": "ff_jpeg2000_ceildivpow2(comp->coord_o[i][j], declvl - 1);"
    },
    {
        "line": 58,
        "fullcodeline": "reslevel->nbands = 3;"
    },
    {
        "line": 70,
        "fullcodeline": "reslevel->num_precincts_x ="
    },
    {
        "line": 78,
        "fullcodeline": "reslevel->num_precincts_y ="
    },
    {
        "line": 85,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 131,
        "fullcodeline": "band->i_stepsize = band->f_stepsize * (1 << 15);"
    },
    {
        "line": 137,
        "fullcodeline": "if (reslevelno == 0) {"
    },
    {
        "line": 174,
        "fullcodeline": "for (j = 0; j < 2; j++)"
    },
    {
        "line": 175,
        "fullcodeline": "band->coord[0][j] = ff_jpeg2000_ceildiv(band->coord[0][j], dx);"
    },
    {
        "line": 176,
        "fullcodeline": "for (j = 0; j < 2; j++)"
    },
    {
        "line": 177,
        "fullcodeline": "band->coord[1][j] = ff_jpeg2000_ceildiv(band->coord[1][j], dy);"
    },
    {
        "line": 182,
        "fullcodeline": "if (!band->prec)"
    },
    {
        "line": 187,
        "fullcodeline": "for (precno = 0; precno < nb_precincts; precno++) {"
    },
    {
        "line": 33,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 71,
        "fullcodeline": "ff_jpeg2000_ceildivpow2(reslevel->coord[0][1],"
    },
    {
        "line": 79,
        "fullcodeline": "ff_jpeg2000_ceildivpow2(reslevel->coord[1][1],"
    },
    {
        "line": 99,
        "fullcodeline": "band->f_stepsize = 1;"
    },
    {
        "line": 103,
        "fullcodeline": "numbps = cbps +"
    },
    {
        "line": 105,
        "fullcodeline": "band->f_stepsize = SHL(2048 + qntsty->mant[gbandno],"
    },
    {
        "line": 117,
        "fullcodeline": "gain            = cbps;"
    },
    {
        "line": 118,
        "fullcodeline": "band->f_stepsize  = pow(2.0, gain - qntsty->expn[gbandno]);"
    },
    {
        "line": 119,
        "fullcodeline": "band->f_stepsize *= qntsty->mant[gbandno] / 2048.0 + 1.0;"
    },
    {
        "line": 122,
        "fullcodeline": "band->f_stepsize = 0;"
    },
    {
        "line": 123,
        "fullcodeline": "av_log(avctx, AV_LOG_ERROR, \"Unknown quantization format\\n\");"
    },
    {
        "line": 128,
        "fullcodeline": "if (!av_codec_is_encoder(avctx->codec))"
    },
    {
        "line": 129,
        "fullcodeline": "band->f_stepsize *= 0.5;"
    },
    {
        "line": 144,
        "fullcodeline": "log2_band_prec_width  = reslevel->log2_prec_width;"
    },
    {
        "line": 145,
        "fullcodeline": "log2_band_prec_height = reslevel->log2_prec_height;"
    },
    {
        "line": 147,
        "fullcodeline": "band->log2_cblk_width  = FFMIN(codsty->log2_cblk_width,"
    },
    {
        "line": 149,
        "fullcodeline": "band->log2_cblk_height = FFMIN(codsty->log2_cblk_height,"
    },
    {
        "line": 188,
        "fullcodeline": "Jpeg2000Prec *prec = band->prec + precno;"
    },
    {
        "line": 194,
        "fullcodeline": "prec->coord[0][0] = (precno % reslevel->num_precincts_x) *"
    },
    {
        "line": 196,
        "fullcodeline": "prec->coord[0][0] = FFMAX(prec->coord[0][0], band->coord[0][0]);"
    },
    {
        "line": 199,
        "fullcodeline": "prec->coord[1][0] = (precno / reslevel->num_precincts_x) *"
    },
    {
        "line": 201,
        "fullcodeline": "prec->coord[1][0] = FFMAX(prec->coord[1][0], band->coord[1][0]);"
    },
    {
        "line": 204,
        "fullcodeline": "prec->coord[0][1] = prec->coord[0][0] +"
    },
    {
        "line": 206,
        "fullcodeline": "prec->coord[0][1] = FFMIN(prec->coord[0][1], band->coord[0][1]);"
    },
    {
        "line": 209,
        "fullcodeline": "prec->coord[1][1] = prec->coord[1][0] +"
    },
    {
        "line": 211,
        "fullcodeline": "prec->coord[1][1] = FFMIN(prec->coord[1][1], band->coord[1][1]);"
    },
    {
        "line": 213,
        "fullcodeline": "prec->nb_codeblocks_width ="
    },
    {
        "line": 217,
        "fullcodeline": "prec->nb_codeblocks_height ="
    },
    {
        "line": 223,
        "fullcodeline": "prec->cblkincl ="
    },
    {
        "line": 229,
        "fullcodeline": "prec->zerobits ="
    },
    {
        "line": 235,
        "fullcodeline": "prec->cblk = av_mallocz_array(prec->nb_codeblocks_width *"
    },
    {
        "line": 73,
        "fullcodeline": "(reslevel->coord[0][0] >> reslevel->log2_prec_width);"
    },
    {
        "line": 81,
        "fullcodeline": "(reslevel->coord[1][0] >> reslevel->log2_prec_height);"
    },
    {
        "line": 139,
        "fullcodeline": "for (i = 0; i < 2; i++)"
    },
    {
        "line": 165,
        "fullcodeline": "band->log2_cblk_width  = FFMIN(codsty->log2_cblk_width,"
    },
    {
        "line": 167,
        "fullcodeline": "band->log2_cblk_height = FFMIN(codsty->log2_cblk_height,"
    },
    {
        "line": 170,
        "fullcodeline": "log2_band_prec_width  = reslevel->log2_prec_width  - 1;"
    },
    {
        "line": 171,
        "fullcodeline": "log2_band_prec_height = reslevel->log2_prec_height - 1;"
    },
    {
        "line": 183,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 214,
        "fullcodeline": "ff_jpeg2000_ceildivpow2(prec->coord[0][1] -"
    },
    {
        "line": 218,
        "fullcodeline": "ff_jpeg2000_ceildivpow2(prec->coord[1][1] -"
    },
    {
        "line": 224,
        "fullcodeline": "ff_jpeg2000_tag_tree_init(prec->nb_codeblocks_width,"
    },
    {
        "line": 230,
        "fullcodeline": "ff_jpeg2000_tag_tree_init(prec->nb_codeblocks_width,"
    },
    {
        "line": 238,
        "fullcodeline": "if (!prec->cblk)"
    },
    {
        "line": 240,
        "fullcodeline": "for (cblkno = 0; cblkno < prec->nb_codeblocks_width * prec->nb_codeblocks_height; cblkno++) {"
    },
    {
        "line": 106,
        "fullcodeline": "2 + numbps - qntsty->expn[gbandno]);"
    },
    {
        "line": 140,
        "fullcodeline": "for (j = 0; j < 2; j++)"
    },
    {
        "line": 154,
        "fullcodeline": "for (i = 0; i < 2; i++)"
    },
    {
        "line": 195,
        "fullcodeline": "(1 << log2_band_prec_width);"
    },
    {
        "line": 200,
        "fullcodeline": "(1 << log2_band_prec_height);"
    },
    {
        "line": 205,
        "fullcodeline": "(1 << log2_band_prec_width);"
    },
    {
        "line": 210,
        "fullcodeline": "(1 << log2_band_prec_height);"
    },
    {
        "line": 246,
        "fullcodeline": "Cx0 = (prec->coord[0][0] >> band->log2_cblk_width) << band->log2_cblk_width;"
    },
    {
        "line": 247,
        "fullcodeline": "Cx0 = Cx0 + ((cblkno % prec->nb_codeblocks_width)  << band->log2_cblk_width);"
    },
    {
        "line": 248,
        "fullcodeline": "cblk->coord[0][0] = FFMAX(Cx0, prec->coord[0][0]);"
    },
    {
        "line": 251,
        "fullcodeline": "Cy0 = (prec->coord[1][0] >> band->log2_cblk_height) << band->log2_cblk_height;"
    },
    {
        "line": 252,
        "fullcodeline": "Cy0 = Cy0 + ((cblkno / prec->nb_codeblocks_width)   << band->log2_cblk_height);"
    },
    {
        "line": 253,
        "fullcodeline": "cblk->coord[1][0] = FFMAX(Cy0, prec->coord[1][0]);"
    },
    {
        "line": 256,
        "fullcodeline": "cblk->coord[0][1] = FFMIN(Cx0 + (1 << band->log2_cblk_width),"
    },
    {
        "line": 260,
        "fullcodeline": "cblk->coord[1][1] = FFMIN(Cy0 + (1 << band->log2_cblk_height),"
    },
    {
        "line": 142,
        "fullcodeline": "ff_jpeg2000_ceildivpow2(comp->coord_o[i][j] - comp->coord_o[i][0],"
    },
    {
        "line": 155,
        "fullcodeline": "for (j = 0; j < 2; j++)"
    },
    {
        "line": 166,
        "fullcodeline": "reslevel->log2_prec_width - 1);"
    },
    {
        "line": 168,
        "fullcodeline": "reslevel->log2_prec_height - 1);"
    },
    {
        "line": 227,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 233,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 239,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 104,
        "fullcodeline": "lut_gain[codsty->transform == FF_DWT53][bandno + (reslevelno > 0)];"
    },
    {
        "line": 143,
        "fullcodeline": "declvl - 1);"
    },
    {
        "line": 158,
        "fullcodeline": "ff_jpeg2000_ceildivpow2(comp->coord_o[i][j] - comp->coord_o[i][0] -"
    },
    {
        "line": 263,
        "fullcodeline": "if ((bandno + !!reslevelno) & 1) {"
    },
    {
        "line": 264,
        "fullcodeline": "cblk->coord[0][0] += comp->reslevel[reslevelno-1].coord[0][1] -"
    },
    {
        "line": 266,
        "fullcodeline": "cblk->coord[0][1] += comp->reslevel[reslevelno-1].coord[0][1] -"
    },
    {
        "line": 269,
        "fullcodeline": "if ((bandno + !!reslevelno) & 2) {"
    },
    {
        "line": 270,
        "fullcodeline": "cblk->coord[1][0] += comp->reslevel[reslevelno-1].coord[1][1] -"
    },
    {
        "line": 272,
        "fullcodeline": "cblk->coord[1][1] += comp->reslevel[reslevelno-1].coord[1][1] -"
    },
    {
        "line": 159,
        "fullcodeline": "(((bandno + 1 >> i) & 1) << declvl - 1),"
    },
    {
        "line": 265,
        "fullcodeline": "comp->reslevel[reslevelno-1].coord[0][0];"
    },
    {
        "line": 267,
        "fullcodeline": "comp->reslevel[reslevelno-1].coord[0][0];"
    },
    {
        "line": 271,
        "fullcodeline": "comp->reslevel[reslevelno-1].coord[1][0];"
    },
    {
        "line": 273,
        "fullcodeline": "comp->reslevel[reslevelno-1].coord[1][0];"
    }
]