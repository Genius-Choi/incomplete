[
    {
        "line": 4,
        "fullcodeline": "char *tmpbuf = nullptr, *resbuf;"
    },
    {
        "line": 8,
        "fullcodeline": "int tmplen, reslen=0;"
    },
    {
        "line": 9,
        "fullcodeline": "int count=0;"
    },
    {
        "line": 10,
        "fullcodeline": "int is_negative=0;"
    },
    {
        "line": 18,
        "fullcodeline": "d = php_math_round(d, dec);"
    },
    {
        "line": 21,
        "fullcodeline": "String tmpstr(63, ReserveString);"
    },
    {
        "line": 22,
        "fullcodeline": "tmpbuf = tmpstr.mutableData();"
    },
    {
        "line": 23,
        "fullcodeline": "tmplen = snprintf(tmpbuf, 64, \"%.*F\", dec, d);"
    },
    {
        "line": 66,
        "fullcodeline": "reslen = integral;"
    },
    {
        "line": 84,
        "fullcodeline": "String resstr(reslen, ReserveString);"
    },
    {
        "line": 85,
        "fullcodeline": "resbuf = resstr.mutableData();"
    },
    {
        "line": 87,
        "fullcodeline": "s = tmpbuf+tmplen-1;"
    },
    {
        "line": 88,
        "fullcodeline": "t = resbuf+reslen-1;"
    },
    {
        "line": 134,
        "fullcodeline": "resstr.setSize(reslen);"
    },
    {
        "line": 12,
        "fullcodeline": "if (d < 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (dec < 0) dec = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "if (tmplen < 0) return empty_string();"
    },
    {
        "line": 25,
        "fullcodeline": "if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (tmplen >= 64) {"
    },
    {
        "line": 119,
        "fullcodeline": "while(s >= tmpbuf) {"
    },
    {
        "line": 13,
        "fullcodeline": "is_negative = 1;"
    },
    {
        "line": 14,
        "fullcodeline": "d = -d;"
    },
    {
        "line": 26,
        "fullcodeline": "tmpstr.setSize(tmplen);"
    },
    {
        "line": 31,
        "fullcodeline": "tmpstr = String(tmplen, ReserveString);"
    },
    {
        "line": 32,
        "fullcodeline": "tmpbuf = tmpstr.mutableData();"
    },
    {
        "line": 33,
        "fullcodeline": "tmplen = snprintf(tmpbuf, tmplen + 1, \"%.*F\", dec, d);"
    },
    {
        "line": 43,
        "fullcodeline": "dp = strpbrk(tmpbuf, \".,\");"
    },
    {
        "line": 50,
        "fullcodeline": "integral = dp - tmpbuf;"
    },
    {
        "line": 57,
        "fullcodeline": "if (!thousand_sep.empty()) {"
    },
    {
        "line": 63,
        "fullcodeline": "integral += ((integral-1) / 3) * thousand_sep.size();"
    },
    {
        "line": 69,
        "fullcodeline": "reslen += dec;"
    },
    {
        "line": 82,
        "fullcodeline": "reslen++;"
    },
    {
        "line": 94,
        "fullcodeline": "int declen = dp ? s - dp : 0;"
    },
    {
        "line": 95,
        "fullcodeline": "int topad = dec > declen ? dec - declen : 0;"
    },
    {
        "line": 34,
        "fullcodeline": "if (tmplen < 0) return empty_string();"
    },
    {
        "line": 45,
        "fullcodeline": "dp = nullptr;"
    },
    {
        "line": 53,
        "fullcodeline": "integral = tmplen;"
    },
    {
        "line": 58,
        "fullcodeline": "if (integral + thousand_sep.size() * ((integral-1) / 3) < integral) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {"
    },
    {
        "line": 36,
        "fullcodeline": "tmpstr.setSize(tmplen);"
    },
    {
        "line": 71,
        "fullcodeline": "if (!dec_point.empty()) {"
    },
    {
        "line": 76,
        "fullcodeline": "reslen += dec_point.size();"
    },
    {
        "line": 103,
        "fullcodeline": "s -= declen + 1; /* +1 to skip the point */"
    },
    {
        "line": 104,
        "fullcodeline": "t -= declen;"
    },
    {
        "line": 111,
        "fullcodeline": "if (!dec_point.empty()) {"
    },
    {
        "line": 113,
        "fullcodeline": "t -= dec_point.size();"
    },
    {
        "line": 120,
        "fullcodeline": "*t-- = *s--;"
    },
    {
        "line": 121,
        "fullcodeline": "if (thousand_sep && (++count%3)==0 && s>=tmpbuf) {"
    },
    {
        "line": 125,
        "fullcodeline": "t -= thousand_sep.size();"
    },
    {
        "line": 112,
        "fullcodeline": "memcpy(t + (1 - dec_point.size()), dec_point.data(), dec_point.size());"
    },
    {
        "line": 123,
        "fullcodeline": "thousand_sep.data(),"
    },
    {
        "line": 124,
        "fullcodeline": "thousand_sep.size());"
    },
    {
        "line": 72,
        "fullcodeline": "if (reslen + dec_point.size() < dec_point.size()) {"
    },
    {
        "line": 99,
        "fullcodeline": "*t-- = '0';"
    },
    {
        "line": 122,
        "fullcodeline": "memcpy(t + (1 - thousand_sep.size()),"
    }
]