[
    {
        "line": 3,
        "fullcodeline": "register int x, y, l = (int)strlen(str);"
    },
    {
        "line": 4,
        "fullcodeline": "size_t estimate = (2 * l) + 1;"
    },
    {
        "line": 7,
        "fullcodeline": "char *p = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "cmd = zend_string_alloc(2 * l, 0);"
    },
    {
        "line": 80,
        "fullcodeline": "ZSTR_VAL(cmd)[y] = '\\0';"
    },
    {
        "line": 88,
        "fullcodeline": "ZSTR_LEN(cmd) = y;"
    },
    {
        "line": 13,
        "fullcodeline": "for (x = 0, y = 0; x < l; x++) {"
    },
    {
        "line": 82,
        "fullcodeline": "if ((estimate - y) > 4096) {"
    },
    {
        "line": 14,
        "fullcodeline": "int mb_len = php_mblen(str + x, (l - x));"
    },
    {
        "line": 85,
        "fullcodeline": "cmd = zend_string_truncate(cmd, y, 0);"
    },
    {
        "line": 17,
        "fullcodeline": "if (mb_len < 0) {"
    },
    {
        "line": 37,
        "fullcodeline": "ZSTR_VAL(cmd)[y++] = str[x];"
    },
    {
        "line": 72,
        "fullcodeline": "ZSTR_VAL(cmd)[y++] = '\\\\';"
    },
    {
        "line": 76,
        "fullcodeline": "ZSTR_VAL(cmd)[y++] = str[x];"
    },
    {
        "line": 30,
        "fullcodeline": "if (!p && (p = memchr(str + x + 1, str[x], l - x - 1))) {"
    },
    {
        "line": 19,
        "fullcodeline": "} else if (mb_len > 1) {"
    },
    {
        "line": 20,
        "fullcodeline": "memcpy(ZSTR_VAL(cmd) + y, str + x, mb_len);"
    },
    {
        "line": 21,
        "fullcodeline": "y += mb_len;"
    },
    {
        "line": 22,
        "fullcodeline": "x += mb_len - 1;"
    },
    {
        "line": 32,
        "fullcodeline": "} else if (p && *p == str[x]) {"
    },
    {
        "line": 33,
        "fullcodeline": "p = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "ZSTR_VAL(cmd)[y++] = '\\\\';"
    }
]