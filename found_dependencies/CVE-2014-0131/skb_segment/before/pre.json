[
    {
        "line": 4,
        "fullcodeline": "struct sk_buff *segs = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "struct sk_buff *tail = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "struct sk_buff *list_skb = skb_shinfo(head_skb)->frag_list;"
    },
    {
        "line": 7,
        "fullcodeline": "skb_frag_t *frag = skb_shinfo(head_skb)->frags;"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned int mss = skb_shinfo(head_skb)->gso_size;"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned int doffset = head_skb->data - skb_mac_header(head_skb);"
    },
    {
        "line": 10,
        "fullcodeline": "unsigned int offset = doffset;"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned int tnl_hlen = skb_tnl_header_len(head_skb);"
    },
    {
        "line": 16,
        "fullcodeline": "int sg = !!(features & NETIF_F_SG);"
    },
    {
        "line": 17,
        "fullcodeline": "int nfrags = skb_shinfo(head_skb)->nr_frags;"
    },
    {
        "line": 18,
        "fullcodeline": "int err = -ENOMEM;"
    },
    {
        "line": 19,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "proto = skb_network_protocol(head_skb);"
    },
    {
        "line": 26,
        "fullcodeline": "csum = !!can_checksum_protocol(features, proto);"
    },
    {
        "line": 27,
        "fullcodeline": "__skb_push(head_skb, doffset);"
    },
    {
        "line": 28,
        "fullcodeline": "headroom = skb_headroom(head_skb);"
    },
    {
        "line": 29,
        "fullcodeline": "pos = skb_headlen(head_skb);"
    },
    {
        "line": 23,
        "fullcodeline": "if (unlikely(!proto))"
    },
    {
        "line": 189,
        "fullcodeline": "} while ((offset += len) < head_skb->len);"
    },
    {
        "line": 195,
        "fullcodeline": "return ERR_PTR(err);"
    },
    {
        "line": 37,
        "fullcodeline": "len = head_skb->len - offset;"
    },
    {
        "line": 41,
        "fullcodeline": "hsize = skb_headlen(head_skb) - offset;"
    },
    {
        "line": 106,
        "fullcodeline": "__copy_skb_header(nskb, head_skb);"
    },
    {
        "line": 107,
        "fullcodeline": "nskb->mac_len = head_skb->mac_len;"
    },
    {
        "line": 109,
        "fullcodeline": "skb_headers_offset_update(nskb, skb_headroom(nskb) - headroom);"
    },
    {
        "line": 111,
        "fullcodeline": "skb_copy_from_linear_data_offset(head_skb, -tnl_hlen,"
    },
    {
        "line": 126,
        "fullcodeline": "nskb_frag = skb_shinfo(nskb)->frags;"
    },
    {
        "line": 128,
        "fullcodeline": "skb_copy_from_linear_data_offset(head_skb, offset,"
    },
    {
        "line": 179,
        "fullcodeline": "nskb->data_len = len - hsize;"
    },
    {
        "line": 180,
        "fullcodeline": "nskb->len += nskb->data_len;"
    },
    {
        "line": 181,
        "fullcodeline": "nskb->truesize += nskb->data_len;"
    },
    {
        "line": 24,
        "fullcodeline": "return ERR_PTR(-EINVAL);"
    },
    {
        "line": 38,
        "fullcodeline": "if (len > mss)"
    },
    {
        "line": 42,
        "fullcodeline": "if (hsize < 0)"
    },
    {
        "line": 112,
        "fullcodeline": "nskb->data - tnl_hlen,"
    },
    {
        "line": 115,
        "fullcodeline": "if (nskb->len == len + doffset)"
    },
    {
        "line": 118,
        "fullcodeline": "if (!sg) {"
    },
    {
        "line": 129,
        "fullcodeline": "skb_put(nskb, hsize), hsize);"
    },
    {
        "line": 131,
        "fullcodeline": "skb_shinfo(nskb)->tx_flags = skb_shinfo(head_skb)->tx_flags &"
    },
    {
        "line": 134,
        "fullcodeline": "while (pos < offset + len) {"
    },
    {
        "line": 39,
        "fullcodeline": "len = mss;"
    },
    {
        "line": 43,
        "fullcodeline": "hsize = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "if (hsize > len || !sg)"
    },
    {
        "line": 45,
        "fullcodeline": "hsize = len;"
    },
    {
        "line": 47,
        "fullcodeline": "if (!hsize && i >= nfrags && skb_headlen(list_skb) &&"
    },
    {
        "line": 48,
        "fullcodeline": "(skb_headlen(list_skb) == len || sg)) {"
    },
    {
        "line": 51,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "nfrags = skb_shinfo(list_skb)->nr_frags;"
    },
    {
        "line": 53,
        "fullcodeline": "frag = skb_shinfo(list_skb)->frags;"
    },
    {
        "line": 54,
        "fullcodeline": "pos += skb_headlen(list_skb);"
    },
    {
        "line": 68,
        "fullcodeline": "nskb = skb_clone(list_skb, GFP_ATOMIC);"
    },
    {
        "line": 69,
        "fullcodeline": "list_skb = list_skb->next;"
    },
    {
        "line": 79,
        "fullcodeline": "hsize = skb_end_offset(nskb);"
    },
    {
        "line": 85,
        "fullcodeline": "nskb->truesize += skb_end_offset(nskb) - hsize;"
    },
    {
        "line": 86,
        "fullcodeline": "skb_release_head_state(nskb);"
    },
    {
        "line": 87,
        "fullcodeline": "__skb_push(nskb, doffset);"
    },
    {
        "line": 119,
        "fullcodeline": "nskb->ip_summed = CHECKSUM_NONE;"
    },
    {
        "line": 120,
        "fullcodeline": "nskb->csum = skb_copy_and_csum_bits(head_skb, offset,"
    },
    {
        "line": 155,
        "fullcodeline": "*nskb_frag = *frag;"
    },
    {
        "line": 156,
        "fullcodeline": "__skb_frag_ref(nskb_frag);"
    },
    {
        "line": 157,
        "fullcodeline": "size = skb_frag_size(nskb_frag);"
    },
    {
        "line": 164,
        "fullcodeline": "skb_shinfo(nskb)->nr_frags++;"
    },
    {
        "line": 175,
        "fullcodeline": "nskb_frag++;"
    },
    {
        "line": 185,
        "fullcodeline": "nskb->csum = skb_checksum(nskb, doffset,"
    },
    {
        "line": 187,
        "fullcodeline": "nskb->ip_summed = CHECKSUM_NONE;"
    },
    {
        "line": 49,
        "fullcodeline": "BUG_ON(skb_headlen(list_skb) > len);"
    },
    {
        "line": 56,
        "fullcodeline": "while (pos < offset + len) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (skb_cow_head(nskb, doffset + headroom)) {"
    },
    {
        "line": 89,
        "fullcodeline": "nskb = __alloc_skb(hsize + doffset + headroom,"
    },
    {
        "line": 96,
        "fullcodeline": "skb_reserve(nskb, headroom);"
    },
    {
        "line": 97,
        "fullcodeline": "__skb_put(nskb, doffset);"
    },
    {
        "line": 103,
        "fullcodeline": "segs = nskb;"
    },
    {
        "line": 135,
        "fullcodeline": "if (i >= nfrags) {"
    },
    {
        "line": 159,
        "fullcodeline": "if (pos < offset) {"
    },
    {
        "line": 57,
        "fullcodeline": "BUG_ON(i >= nfrags);"
    },
    {
        "line": 59,
        "fullcodeline": "size = skb_frag_size(frag);"
    },
    {
        "line": 63,
        "fullcodeline": "i++;"
    },
    {
        "line": 64,
        "fullcodeline": "pos += size;"
    },
    {
        "line": 65,
        "fullcodeline": "frag++;"
    },
    {
        "line": 71,
        "fullcodeline": "if (unlikely(!nskb))"
    },
    {
        "line": 74,
        "fullcodeline": "if (unlikely(pskb_trim(nskb, len))) {"
    },
    {
        "line": 121,
        "fullcodeline": "skb_put(nskb, len),"
    },
    {
        "line": 136,
        "fullcodeline": "BUG_ON(skb_headlen(list_skb));"
    },
    {
        "line": 138,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 139,
        "fullcodeline": "nfrags = skb_shinfo(list_skb)->nr_frags;"
    },
    {
        "line": 140,
        "fullcodeline": "frag = skb_shinfo(list_skb)->frags;"
    },
    {
        "line": 144,
        "fullcodeline": "list_skb = list_skb->next;"
    },
    {
        "line": 147,
        "fullcodeline": "if (unlikely(skb_shinfo(nskb)->nr_frags >="
    },
    {
        "line": 160,
        "fullcodeline": "nskb_frag->page_offset += offset - pos;"
    },
    {
        "line": 161,
        "fullcodeline": "skb_frag_size_sub(nskb_frag, offset - pos);"
    },
    {
        "line": 167,
        "fullcodeline": "i++;"
    },
    {
        "line": 169,
        "fullcodeline": "pos += size;"
    },
    {
        "line": 186,
        "fullcodeline": "nskb->len - doffset, 0);"
    },
    {
        "line": 90,
        "fullcodeline": "GFP_ATOMIC, skb_alloc_rx_flag(head_skb),"
    },
    {
        "line": 93,
        "fullcodeline": "if (unlikely(!nskb))"
    },
    {
        "line": 142,
        "fullcodeline": "BUG_ON(!nfrags);"
    },
    {
        "line": 171,
        "fullcodeline": "skb_frag_size_sub(nskb_frag, pos + size - (offset + len));"
    }
]