[
    {
        "line": 13,
        "fullcodeline": "oline = line"
    },
    {
        "line": 16,
        "fullcodeline": "line = line.strip()"
    },
    {
        "line": 19,
        "fullcodeline": "returncode = 0"
    },
    {
        "line": 26,
        "fullcodeline": "relist = re.findall(r'[^=]\\\"(.+)\\\"', line)"
    },
    {
        "line": 27,
        "fullcodeline": "relist2 = re.findall(r'[^=]\\'(.+)\\'', line)"
    },
    {
        "line": 28,
        "fullcodeline": "relist = relist + relist2"
    },
    {
        "line": 35,
        "fullcodeline": "line = re.sub(r'\\\"(.+?)\\\"', '', line)"
    },
    {
        "line": 36,
        "fullcodeline": "line = re.sub(r'\\'(.+?)\\'', '', line)"
    },
    {
        "line": 66,
        "fullcodeline": "executions = re.findall('\\$\\([^)]+[)]', line)"
    },
    {
        "line": 81,
        "fullcodeline": "executions = re.findall('\\`[^`]+[`]', line)"
    },
    {
        "line": 89,
        "fullcodeline": "curly = re.findall('\\$\\{[^}]+[}]', line)"
    },
    {
        "line": 109,
        "fullcodeline": "lines = []"
    },
    {
        "line": 132,
        "fullcodeline": "line = re.sub('\\)$', '', line)"
    },
    {
        "line": 29,
        "fullcodeline": "for item in relist:"
    },
    {
        "line": 38,
        "fullcodeline": "if re.findall('[:cntrl:].*\\n', line):"
    },
    {
        "line": 46,
        "fullcodeline": "for item in conf['forbidden']:"
    },
    {
        "line": 67,
        "fullcodeline": "for item in executions:"
    },
    {
        "line": 82,
        "fullcodeline": "for item in executions:"
    },
    {
        "line": 90,
        "fullcodeline": "for item in curly:"
    },
    {
        "line": 102,
        "fullcodeline": "if returncode > 0:"
    },
    {
        "line": 113,
        "fullcodeline": "if line[0] in [\"&\", \"|\", \";\"]:"
    },
    {
        "line": 119,
        "fullcodeline": "for i in range(1, len(line)):"
    },
    {
        "line": 128,
        "fullcodeline": "if start != len(line):"
    },
    {
        "line": 133,
        "fullcodeline": "for separate_line in lines:"
    },
    {
        "line": 170,
        "fullcodeline": "return 0, conf"
    },
    {
        "line": 114,
        "fullcodeline": "start = 1"
    },
    {
        "line": 116,
        "fullcodeline": "start = 0"
    },
    {
        "line": 129,
        "fullcodeline": "lines.append(line[start:len(line)])"
    },
    {
        "line": 39,
        "fullcodeline": "ret, conf = warn_count('syntax',"
    },
    {
        "line": 44,
        "fullcodeline": "return ret, conf"
    },
    {
        "line": 72,
        "fullcodeline": "returncode += ret_check_path"
    },
    {
        "line": 78,
        "fullcodeline": "returncode += ret_check_secure"
    },
    {
        "line": 86,
        "fullcodeline": "returncode += ret_check_secure"
    },
    {
        "line": 99,
        "fullcodeline": "returncode += ret_check_path"
    },
    {
        "line": 103,
        "fullcodeline": "return 1, conf"
    },
    {
        "line": 105,
        "fullcodeline": "elif line.startswith('$(') or line.startswith('`'):"
    },
    {
        "line": 134,
        "fullcodeline": "separate_line = \" \".join(separate_line.split())"
    },
    {
        "line": 135,
        "fullcodeline": "splitcmd = separate_line.strip().split(' ')"
    },
    {
        "line": 136,
        "fullcodeline": "command = splitcmd[0]"
    },
    {
        "line": 48,
        "fullcodeline": "if item in ['&', '|']:"
    },
    {
        "line": 69,
        "fullcodeline": "ret_check_path, conf = check_path(item[2:-1].strip(),"
    },
    {
        "line": 75,
        "fullcodeline": "ret_check_secure, conf = check_secure(item[2:-1].strip(),"
    },
    {
        "line": 83,
        "fullcodeline": "ret_check_secure, conf = check_secure(item[1:-1].strip(),"
    },
    {
        "line": 92,
        "fullcodeline": "if re.findall(r'=|\\+|\\?|\\-', item):"
    },
    {
        "line": 96,
        "fullcodeline": "ret_check_path, conf = check_path(variable[1][:-1],"
    },
    {
        "line": 121,
        "fullcodeline": "if line[i] in [\"&\", \"|\", \";\"] and line[i - 1] != \"\\\\\":"
    },
    {
        "line": 137,
        "fullcodeline": "if len(splitcmd) > 1:"
    },
    {
        "line": 143,
        "fullcodeline": "if command == 'sudo':"
    },
    {
        "line": 163,
        "fullcodeline": "if command not in conf['allowed'] and command:"
    },
    {
        "line": 30,
        "fullcodeline": "if os.path.exists(item):"
    },
    {
        "line": 32,
        "fullcodeline": "returncode += ret_check_path"
    },
    {
        "line": 93,
        "fullcodeline": "variable = re.split('=|\\+|\\?|\\-', item, 1)"
    },
    {
        "line": 95,
        "fullcodeline": "variable = item"
    },
    {
        "line": 106,
        "fullcodeline": "return 0, conf"
    },
    {
        "line": 125,
        "fullcodeline": "start = i + 1"
    },
    {
        "line": 138,
        "fullcodeline": "cmdargs = splitcmd"
    },
    {
        "line": 140,
        "fullcodeline": "cmdargs = None"
    },
    {
        "line": 160,
        "fullcodeline": "conf['allowed'] = conf['overssh']"
    },
    {
        "line": 31,
        "fullcodeline": "ret_check_path, conf = check_path(item, conf, strict=strict)"
    },
    {
        "line": 49,
        "fullcodeline": "if re.findall(\"[^\\%s]\\%s[^\\%s]\" % (item, item, item), line):"
    },
    {
        "line": 57,
        "fullcodeline": "if item in line:"
    },
    {
        "line": 123,
        "fullcodeline": "if start != i:"
    },
    {
        "line": 144,
        "fullcodeline": "if type(cmdargs) == list:"
    },
    {
        "line": 164,
        "fullcodeline": "ret, conf = warn_count('command',"
    },
    {
        "line": 169,
        "fullcodeline": "return ret, conf"
    },
    {
        "line": 124,
        "fullcodeline": "lines.append(line[start:i])"
    },
    {
        "line": 50,
        "fullcodeline": "ret, conf = warn_count('syntax',"
    },
    {
        "line": 55,
        "fullcodeline": "return ret, conf"
    },
    {
        "line": 58,
        "fullcodeline": "ret, conf = warn_count('syntax',"
    },
    {
        "line": 63,
        "fullcodeline": "return ret, conf"
    },
    {
        "line": 146,
        "fullcodeline": "if cmdargs[1] == '-u' and cmdargs:"
    },
    {
        "line": 150,
        "fullcodeline": "if sudocmd not in conf['sudo_commands'] and cmdargs:"
    },
    {
        "line": 147,
        "fullcodeline": "sudocmd = cmdargs[3]"
    },
    {
        "line": 149,
        "fullcodeline": "sudocmd = cmdargs[1]"
    },
    {
        "line": 151,
        "fullcodeline": "ret, conf = warn_count('sudo command',"
    },
    {
        "line": 156,
        "fullcodeline": "return ret, conf"
    }
]