[
    {
        "line": 5,
        "fullcodeline": "gss_buffer_desc             client_name = GSS_C_EMPTY_BUFFER;"
    },
    {
        "line": 6,
        "fullcodeline": "gss_buffer_desc             service_name = GSS_C_EMPTY_BUFFER;"
    },
    {
        "line": 10,
        "fullcodeline": "const char                  *errmsg = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "xdr_free(xdr_generic_ret, &ret);"
    },
    {
        "line": 20,
        "fullcodeline": "ret.api_version = handle->api_version;"
    },
    {
        "line": 22,
        "fullcodeline": "funcname = \"kadm5_purgekeys\";"
    },
    {
        "line": 51,
        "fullcodeline": "free(prime_arg);"
    },
    {
        "line": 53,
        "fullcodeline": "gss_release_buffer(&minor_stat, &client_name);"
    },
    {
        "line": 54,
        "fullcodeline": "gss_release_buffer(&minor_stat, &service_name);"
    },
    {
        "line": 55,
        "fullcodeline": "free_server_handle(handle);"
    },
    {
        "line": 14,
        "fullcodeline": "if ((ret.code = new_server_handle(arg->api_version, rqstp, &handle)))"
    },
    {
        "line": 17,
        "fullcodeline": "if ((ret.code = check_handle((void *)handle)))"
    },
    {
        "line": 24,
        "fullcodeline": "if (setup_gss_names(rqstp, &client_name, &service_name) < 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (krb5_unparse_name(handle->context, arg->princ, &prime_arg)) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (!cmp_gss_krb5_name(handle, rqst2name(rqstp), arg->princ) &&"
    },
    {
        "line": 25,
        "fullcodeline": "ret.code = KADM5_FAILURE;"
    },
    {
        "line": 29,
        "fullcodeline": "ret.code = KADM5_BAD_PRINCIPAL;"
    },
    {
        "line": 34,
        "fullcodeline": "(CHANGEPW_SERVICE(rqstp)"
    },
    {
        "line": 37,
        "fullcodeline": "ret.code = KADM5_AUTH_MODIFY;"
    },
    {
        "line": 38,
        "fullcodeline": "log_unauth(funcname, prime_arg, &client_name, &service_name, rqstp);"
    },
    {
        "line": 35,
        "fullcodeline": "|| !kadm5int_acl_check(handle->context, rqst2name(rqstp), ACL_MODIFY,"
    },
    {
        "line": 40,
        "fullcodeline": "ret.code = kadm5_purgekeys((void *)handle, arg->princ,"
    },
    {
        "line": 45,
        "fullcodeline": "log_done(funcname, prime_arg, errmsg,"
    },
    {
        "line": 42,
        "fullcodeline": "if (ret.code != 0)"
    },
    {
        "line": 48,
        "fullcodeline": "if (errmsg != NULL)"
    },
    {
        "line": 43,
        "fullcodeline": "errmsg = krb5_get_error_message(handle->context, ret.code);"
    },
    {
        "line": 49,
        "fullcodeline": "krb5_free_error_message(handle->context, errmsg);"
    }
]