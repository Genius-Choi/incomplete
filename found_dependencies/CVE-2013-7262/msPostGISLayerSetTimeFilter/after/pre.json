[
    {
        "line": 3,
        "fullcodeline": "char **atimes, **aranges = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "int numtimes=0,i=0,numranges=0;"
    },
    {
        "line": 5,
        "fullcodeline": "size_t buffer_size = 512;"
    },
    {
        "line": 6,
        "fullcodeline": "char buffer[512], bufferTmp[512];"
    },
    {
        "line": 8,
        "fullcodeline": "buffer[0] = '\\0';"
    },
    {
        "line": 9,
        "fullcodeline": "bufferTmp[0] = '\\0';"
    },
    {
        "line": 11,
        "fullcodeline": "if (!lp || !timestring || !timefield)"
    },
    {
        "line": 55,
        "fullcodeline": "if(!*buffer) {"
    },
    {
        "line": 59,
        "fullcodeline": "lp->filteritem = msStrdup(timefield);"
    },
    {
        "line": 14,
        "fullcodeline": "if( strchr(timestring,'\\'') || strchr(timestring, '\\\\') ) {"
    },
    {
        "line": 15,
        "fullcodeline": "msSetError(MS_MISCERR, \"Invalid time filter.\", \"msPostGISLayerSetTimeFilter()\");"
    },
    {
        "line": 20,
        "fullcodeline": "if (strstr(timestring, \",\") == NULL &&"
    },
    {
        "line": 21,
        "fullcodeline": "strstr(timestring, \"/\") == NULL) { /* discrete time */"
    },
    {
        "line": 22,
        "fullcodeline": "createPostgresTimeCompareSimple(timefield, timestring, buffer, buffer_size);"
    },
    {
        "line": 26,
        "fullcodeline": "atimes = msStringSplit (timestring, ',', &numtimes);"
    },
    {
        "line": 30,
        "fullcodeline": "strlcat(buffer, \"(\", buffer_size);"
    },
    {
        "line": 52,
        "fullcodeline": "strlcat(buffer, \")\", buffer_size);"
    },
    {
        "line": 63,
        "fullcodeline": "if (lp->filter.type == MS_EXPRESSION) {"
    },
    {
        "line": 31,
        "fullcodeline": "for(i=0; i<numtimes; i++) {"
    },
    {
        "line": 64,
        "fullcodeline": "snprintf(bufferTmp, buffer_size, \"(%s) and %s\", lp->filter.string, buffer);"
    },
    {
        "line": 27,
        "fullcodeline": "if (atimes == NULL || numtimes < 1)"
    },
    {
        "line": 35,
        "fullcodeline": "strlcat(buffer, \"(\", buffer_size);"
    },
    {
        "line": 36,
        "fullcodeline": "aranges = msStringSplit(atimes[i],  '/', &numranges);"
    },
    {
        "line": 49,
        "fullcodeline": "msFreeCharArray(aranges, numranges);"
    },
    {
        "line": 50,
        "fullcodeline": "strlcat(buffer, \")\", buffer_size);"
    },
    {
        "line": 67,
        "fullcodeline": "freeExpression(&lp->filter);"
    },
    {
        "line": 32,
        "fullcodeline": "if(i!=0) {"
    },
    {
        "line": 37,
        "fullcodeline": "if(!aranges) return MS_FALSE;"
    },
    {
        "line": 38,
        "fullcodeline": "if(numranges == 1) {"
    },
    {
        "line": 33,
        "fullcodeline": "strlcat(buffer, \" OR \", buffer_size);"
    },
    {
        "line": 40,
        "fullcodeline": "createPostgresTimeCompareSimple(timefield, atimes[i], bufferTmp, buffer_size);"
    },
    {
        "line": 41,
        "fullcodeline": "strlcat(buffer, bufferTmp, buffer_size);"
    },
    {
        "line": 42,
        "fullcodeline": "} else if(numranges == 2) {"
    },
    {
        "line": 44,
        "fullcodeline": "createPostgresTimeCompareRange(timefield, aranges[0], aranges[1], bufferTmp, buffer_size);"
    },
    {
        "line": 45,
        "fullcodeline": "strlcat(buffer, bufferTmp, buffer_size);"
    }
]