[
    {
        "line": 2,
        "fullcodeline": "for el in findAll(\"[data-span-tag]\", doc):"
    },
    {
        "line": 6,
        "fullcodeline": "tag = el.get(\"data-span-tag\")"
    },
    {
        "line": 7,
        "fullcodeline": "if tag not in doc.md.inlineTagCommands:"
    },
    {
        "line": 11,
        "fullcodeline": "with Popen(command, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True) as p:"
    },
    {
        "line": 4,
        "fullcodeline": "die(\"Found an inline code tag, but arbitrary code execution isn't allowed. See the --allow-execute flag.\")"
    },
    {
        "line": 8,
        "fullcodeline": "die(\"Unknown inline tag '{0}' found:\\n  {1}\", tag, outerHTML(el), el=el)"
    },
    {
        "line": 40,
        "fullcodeline": "replaceContents(el, parseHTML(out))"
    },
    {
        "line": 12,
        "fullcodeline": "out, err = p.communicate(innerHTML(el).encode(\"utf-8\"))"
    },
    {
        "line": 14,
        "fullcodeline": "out = out.decode(\"utf-8\")"
    },
    {
        "line": 23,
        "fullcodeline": "err = err.decode(\"utf-8\")"
    },
    {
        "line": 32,
        "fullcodeline": "die("
    },
    {
        "line": 34,
        "fullcodeline": "outerHTML(el),"
    },
    {
        "line": 16,
        "fullcodeline": "die("
    },
    {
        "line": 25,
        "fullcodeline": "die("
    },
    {
        "line": 18,
        "fullcodeline": "outerHTML(el),"
    },
    {
        "line": 27,
        "fullcodeline": "outerHTML(el),"
    }
]