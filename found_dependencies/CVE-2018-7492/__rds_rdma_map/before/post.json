[
    {
        "line": 4,
        "fullcodeline": "struct rds_mr *mr = NULL, *found;"
    },
    {
        "line": 6,
        "fullcodeline": "struct page **pages = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "nr_pages = rds_pages_in_vec(&args->vec);"
    },
    {
        "line": 39,
        "fullcodeline": "rdsdebug(\"RDS: get_mr addr %llx len %llu nr_pages %u\\n\","
    },
    {
        "line": 43,
        "fullcodeline": "pages = kcalloc(nr_pages, sizeof(struct page *), GFP_KERNEL);"
    },
    {
        "line": 49,
        "fullcodeline": "mr = kzalloc(sizeof(struct rds_mr), GFP_KERNEL);"
    },
    {
        "line": 55,
        "fullcodeline": "refcount_set(&mr->r_refcount, 1);"
    },
    {
        "line": 56,
        "fullcodeline": "RB_CLEAR_NODE(&mr->r_rb_node);"
    },
    {
        "line": 57,
        "fullcodeline": "mr->r_trans = rs->rs_transport;"
    },
    {
        "line": 58,
        "fullcodeline": "mr->r_sock = rs;"
    },
    {
        "line": 77,
        "fullcodeline": "ret = rds_pin_pages(args->vec.addr, nr_pages, pages, 1);"
    },
    {
        "line": 81,
        "fullcodeline": "nents = ret;"
    },
    {
        "line": 82,
        "fullcodeline": "sg = kcalloc(nents, sizeof(*sg), GFP_KERNEL);"
    },
    {
        "line": 87,
        "fullcodeline": "WARN_ON(!nents);"
    },
    {
        "line": 88,
        "fullcodeline": "sg_init_table(sg, nents);"
    },
    {
        "line": 94,
        "fullcodeline": "rdsdebug(\"RDS: trans_private nents is %u\\n\", nents);"
    },
    {
        "line": 100,
        "fullcodeline": "trans_private = rs->rs_transport->get_mr(sg, nents, rs,"
    },
    {
        "line": 111,
        "fullcodeline": "mr->r_trans_private = trans_private;"
    },
    {
        "line": 113,
        "fullcodeline": "rdsdebug(\"RDS: get_mr put_user key is %x cookie_addr %p\\n\","
    },
    {
        "line": 120,
        "fullcodeline": "cookie = rds_rdma_make_cookie(mr->r_key, args->vec.addr & ~PAGE_MASK);"
    },
    {
        "line": 131,
        "fullcodeline": "spin_lock_irqsave(&rs->rs_rdma_lock, flags);"
    },
    {
        "line": 132,
        "fullcodeline": "found = rds_mr_tree_walk(&rs->rs_rdma_keys, mr->r_key, mr);"
    },
    {
        "line": 133,
        "fullcodeline": "spin_unlock_irqrestore(&rs->rs_rdma_lock, flags);"
    },
    {
        "line": 135,
        "fullcodeline": "BUG_ON(found && found != mr);"
    },
    {
        "line": 137,
        "fullcodeline": "rdsdebug(\"RDS: get_mr key is %x\\n\", mr->r_key);"
    },
    {
        "line": 143,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 145,
        "fullcodeline": "kfree(pages);"
    },
    {
        "line": 15,
        "fullcodeline": "if (rs->rs_bound_addr == 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (nr_pages == 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "if ((nr_pages - 1) > (RDS_MAX_MSG_SIZE >> PAGE_SHIFT)) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (!pages) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (!mr) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (args->flags & RDS_RDMA_USE_ONCE)"
    },
    {
        "line": 62,
        "fullcodeline": "if (args->flags & RDS_RDMA_INVALIDATE)"
    },
    {
        "line": 64,
        "fullcodeline": "if (args->flags & RDS_RDMA_READWRITE)"
    },
    {
        "line": 78,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 83,
        "fullcodeline": "if (!sg) {"
    },
    {
        "line": 91,
        "fullcodeline": "for (i = 0 ; i < nents; i++)"
    },
    {
        "line": 92,
        "fullcodeline": "sg_set_page(&sg[i], pages[i], PAGE_SIZE, 0);"
    },
    {
        "line": 103,
        "fullcodeline": "if (IS_ERR(trans_private)) {"
    },
    {
        "line": 114,
        "fullcodeline": "mr->r_key, (void *)(unsigned long) args->cookie_addr);"
    },
    {
        "line": 16,
        "fullcodeline": "ret = -ENOTCONN; /* XXX not a great errno */"
    },
    {
        "line": 21,
        "fullcodeline": "ret = -EOPNOTSUPP;"
    },
    {
        "line": 27,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 35,
        "fullcodeline": "ret = -EMSGSIZE;"
    },
    {
        "line": 45,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 51,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 61,
        "fullcodeline": "mr->r_use_once = 1;"
    },
    {
        "line": 63,
        "fullcodeline": "mr->r_invalidate = 1;"
    },
    {
        "line": 65,
        "fullcodeline": "mr->r_write = 1;"
    },
    {
        "line": 84,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 106,
        "fullcodeline": "kfree(sg);"
    },
    {
        "line": 107,
        "fullcodeline": "ret = PTR_ERR(trans_private);"
    },
    {
        "line": 122,
        "fullcodeline": "*cookie_ret = cookie;"
    },
    {
        "line": 125,
        "fullcodeline": "ret = -EFAULT;"
    },
    {
        "line": 139,
        "fullcodeline": "refcount_inc(&mr->r_refcount);"
    },
    {
        "line": 140,
        "fullcodeline": "*mr_ret = mr;"
    },
    {
        "line": 147,
        "fullcodeline": "rds_mr_put(mr);"
    },
    {
        "line": 104,
        "fullcodeline": "for (i = 0 ; i < nents; i++)"
    },
    {
        "line": 105,
        "fullcodeline": "put_page(sg_page(&sg[i]));"
    }
]