[
    {
        "line": 4,
        "fullcodeline": "int                         l=0, kerberos_principal_object_type=0;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned int                ntrees=0, tre=0;"
    },
    {
        "line": 6,
        "fullcodeline": "krb5_error_code             st=0, tempst=0;"
    },
    {
        "line": 7,
        "fullcodeline": "LDAP                        *ld=NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "LDAPMessage                 *result=NULL, *ent=NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "char                        **subtreelist = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "char                        *user=NULL, *subtree=NULL, *principal_dn=NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "char                        **values=NULL, *strval[10]={NULL}, errbuf[1024];"
    },
    {
        "line": 12,
        "fullcodeline": "char                        *filtuser=NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "struct berval               **bersecretkey=NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "LDAPMod                     **mods=NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "krb5_boolean                create_standalone_prinicipal=FALSE;"
    },
    {
        "line": 16,
        "fullcodeline": "krb5_boolean                krb_identity_exists=FALSE, establish_links=FALSE;"
    },
    {
        "line": 17,
        "fullcodeline": "char                        *standalone_principal_dn=NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "krb5_tl_data                *tl_data=NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "krb5_key_data               **keys=NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "kdb5_dal_handle             *dal_handle=NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "krb5_ldap_context           *ldap_context=NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "krb5_ldap_server_handle     *ldap_server_handle=NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "osa_princ_ent_rec           princ_ent = {0};"
    },
    {
        "line": 24,
        "fullcodeline": "xargs_t                     xargs = {0};"
    },
    {
        "line": 25,
        "fullcodeline": "char                        *polname = NULL;"
    },
    {
        "line": 27,
        "fullcodeline": "krb5_boolean                found_entry = FALSE;"
    },
    {
        "line": 30,
        "fullcodeline": "krb5_clear_error_message(context);"
    },
    {
        "line": 32,
        "fullcodeline": "SETUP_CONTEXT();"
    },
    {
        "line": 37,
        "fullcodeline": "GET_HANDLE();"
    },
    {
        "line": 50,
        "fullcodeline": "filtuser = ldap_filter_correct(user);"
    },
    {
        "line": 780,
        "fullcodeline": "free_xargs(xargs);"
    },
    {
        "line": 793,
        "fullcodeline": "free(subtreelist);"
    },
    {
        "line": 810,
        "fullcodeline": "ldap_mods_free(mods, 1);"
    },
    {
        "line": 811,
        "fullcodeline": "ldap_osa_free_princ_ent(&princ_ent);"
    },
    {
        "line": 812,
        "fullcodeline": "ldap_msgfree(result);"
    },
    {
        "line": 813,
        "fullcodeline": "krb5_ldap_put_handle_to_pool(ldap_context, ldap_server_handle);"
    },
    {
        "line": 33,
        "fullcodeline": "if (ldap_context->lrparams == NULL || ldap_context->container_dn == NULL)"
    },
    {
        "line": 39,
        "fullcodeline": "if (!is_principal_in_realm(ldap_context, entry->princ)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (((st=krb5_unparse_name(context, entry->princ, &user)) != 0) ||"
    },
    {
        "line": 51,
        "fullcodeline": "if (filtuser == NULL) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (entry->mask & KADM5_PRINCIPAL)"
    },
    {
        "line": 66,
        "fullcodeline": "if (((st=krb5_get_princ_type(context, entry, &kerberos_principal_object_type)) != 0) ||"
    },
    {
        "line": 70,
        "fullcodeline": "if ((st=process_db_args(context, db_args, &xargs, optype)) != 0)"
    },
    {
        "line": 73,
        "fullcodeline": "if (entry->mask & KADM5_LOAD) {"
    },
    {
        "line": 162,
        "fullcodeline": "if (principal_dn == NULL && xargs.dn == NULL) { /* creation of standalone principal */"
    },
    {
        "line": 208,
        "fullcodeline": "if (xargs.dn_from_kbd == TRUE) {"
    },
    {
        "line": 303,
        "fullcodeline": "if (xargs.dn != NULL && krb_identity_exists == TRUE) {"
    },
    {
        "line": 311,
        "fullcodeline": "if (xargs.linkdn != NULL) {"
    },
    {
        "line": 361,
        "fullcodeline": "if (entry->mask & KADM5_LAST_SUCCESS) {"
    },
    {
        "line": 372,
        "fullcodeline": "if (entry->mask & KADM5_LAST_FAILED) {"
    },
    {
        "line": 383,
        "fullcodeline": "if (entry->mask & KADM5_FAIL_AUTH_COUNT) {"
    },
    {
        "line": 444,
        "fullcodeline": "if (entry->mask & KADM5_MAX_LIFE) {"
    },
    {
        "line": 449,
        "fullcodeline": "if (entry->mask & KADM5_MAX_RLIFE) {"
    },
    {
        "line": 455,
        "fullcodeline": "if (entry->mask & KADM5_ATTRIBUTES) {"
    },
    {
        "line": 461,
        "fullcodeline": "if (entry->mask & KADM5_PRINCIPAL) {"
    },
    {
        "line": 468,
        "fullcodeline": "if (entry->mask & KADM5_PRINC_EXPIRE_TIME) {"
    },
    {
        "line": 479,
        "fullcodeline": "if (entry->mask & KADM5_PW_EXPIRATION) {"
    },
    {
        "line": 492,
        "fullcodeline": "if (entry->mask & KADM5_POLICY) {"
    },
    {
        "line": 525,
        "fullcodeline": "if (entry->mask & KADM5_POLICY_CLR) {"
    },
    {
        "line": 530,
        "fullcodeline": "if (entry->mask & KADM5_KEY_DATA || entry->mask & KADM5_KVNO) {"
    },
    {
        "line": 587,
        "fullcodeline": "if (entry->tl_data != NULL) {"
    },
    {
        "line": 661,
        "fullcodeline": "if (xargs.tktpolicydn != NULL) {"
    },
    {
        "line": 682,
        "fullcodeline": "if (establish_links == TRUE) {"
    },
    {
        "line": 696,
        "fullcodeline": "if (mods == NULL)"
    },
    {
        "line": 699,
        "fullcodeline": "if (create_standalone_prinicipal == TRUE) {"
    },
    {
        "line": 788,
        "fullcodeline": "if (polname != NULL)"
    },
    {
        "line": 791,
        "fullcodeline": "for (tre = 0; tre < ntrees; tre++)"
    },
    {
        "line": 792,
        "fullcodeline": "free(subtreelist[tre]);"
    },
    {
        "line": 40,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 41,
        "fullcodeline": "k5_setmsg(context, st,"
    },
    {
        "line": 48,
        "fullcodeline": "((st=krb5_ldap_unparse_principal_name(user)) != 0))"
    },
    {
        "line": 52,
        "fullcodeline": "st = ENOMEM;"
    },
    {
        "line": 62,
        "fullcodeline": "optype = ADD_PRINCIPAL;"
    },
    {
        "line": 67,
        "fullcodeline": "((st=krb5_get_userdn(context, entry, &principal_dn)) != 0))"
    },
    {
        "line": 74,
        "fullcodeline": "unsigned int     tree = 0;"
    },
    {
        "line": 75,
        "fullcodeline": "int              numlentries = 0;"
    },
    {
        "line": 76,
        "fullcodeline": "char             *filter = NULL;"
    },
    {
        "line": 95,
        "fullcodeline": "found_entry = FALSE;"
    },
    {
        "line": 143,
        "fullcodeline": "free(filter);"
    },
    {
        "line": 188,
        "fullcodeline": "CHECK_NULL(subtree);"
    },
    {
        "line": 193,
        "fullcodeline": "CHECK_NULL(standalone_principal_dn);"
    },
    {
        "line": 198,
        "fullcodeline": "create_standalone_prinicipal = TRUE;"
    },
    {
        "line": 199,
        "fullcodeline": "free(subtree);"
    },
    {
        "line": 200,
        "fullcodeline": "subtree = NULL;"
    },
    {
        "line": 210,
        "fullcodeline": "int              dnlen=0, subtreelen=0;"
    },
    {
        "line": 211,
        "fullcodeline": "char             *dn=NULL;"
    },
    {
        "line": 212,
        "fullcodeline": "krb5_boolean     outofsubtree=TRUE;"
    },
    {
        "line": 304,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 305,
        "fullcodeline": "snprintf(errbuf, sizeof(errbuf),"
    },
    {
        "line": 307,
        "fullcodeline": "k5_setmsg(context, st, \"%s\", errbuf);"
    },
    {
        "line": 358,
        "fullcodeline": "establish_links = TRUE;"
    },
    {
        "line": 362,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 369,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 373,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 380,
        "fullcodeline": "free(strval[0]);"
    },
    {
        "line": 386,
        "fullcodeline": "fail_auth_count = entry->fail_auth_count;"
    },
    {
        "line": 390,
        "fullcodeline": "st = krb5_add_int_mem_ldap_mod(&mods, \"krbLoginFailedCount\","
    },
    {
        "line": 462,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 463,
        "fullcodeline": "strval[0] = user;"
    },
    {
        "line": 469,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 476,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 480,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 489,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 493,
        "fullcodeline": "memset(&princ_ent, 0, sizeof(princ_ent));"
    },
    {
        "line": 535,
        "fullcodeline": "bersecretkey = krb5_encode_krbsecretkey (entry->key_data,"
    },
    {
        "line": 588,
        "fullcodeline": "int count = 0;"
    },
    {
        "line": 589,
        "fullcodeline": "struct berval **ber_tl_data = NULL;"
    },
    {
        "line": 662,
        "fullcodeline": "int tmask=0;"
    },
    {
        "line": 683,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 684,
        "fullcodeline": "strval[0] = xargs.linkdn;"
    },
    {
        "line": 700,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 701,
        "fullcodeline": "strval[0] = \"krbprincipal\";"
    },
    {
        "line": 702,
        "fullcodeline": "strval[1] = \"krbprincipalaux\";"
    },
    {
        "line": 703,
        "fullcodeline": "strval[2] = \"krbTicketPolicyAux\";"
    },
    {
        "line": 708,
        "fullcodeline": "st = ldap_add_ext_s(ld, standalone_principal_dn, mods, NULL, NULL);"
    },
    {
        "line": 775,
        "fullcodeline": "free(user);"
    },
    {
        "line": 778,
        "fullcodeline": "free(filtuser);"
    },
    {
        "line": 783,
        "fullcodeline": "free(standalone_principal_dn);"
    },
    {
        "line": 786,
        "fullcodeline": "free (principal_dn);"
    },
    {
        "line": 789,
        "fullcodeline": "free(polname);"
    },
    {
        "line": 796,
        "fullcodeline": "free (subtree);"
    },
    {
        "line": 804,
        "fullcodeline": "free (bersecretkey);"
    },
    {
        "line": 808,
        "fullcodeline": "free (keys);"
    },
    {
        "line": 42,
        "fullcodeline": "_(\"Principal does not belong to the default realm\"));"
    },
    {
        "line": 64,
        "fullcodeline": "optype = MODIFY_PRINCIPAL;"
    },
    {
        "line": 92,
        "fullcodeline": "if ((st = krb5_get_subtree_info(ldap_context, &subtreelist, &ntrees)) != 0)"
    },
    {
        "line": 97,
        "fullcodeline": "for (tree = 0; found_entry == FALSE && tree < ntrees; ++tree) {"
    },
    {
        "line": 145,
        "fullcodeline": "if (found_entry == FALSE && principal_dn != NULL) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (entry->princ->length == 2 && entry->princ->data[0].length == strlen(\"krbtgt\") &&"
    },
    {
        "line": 190,
        "fullcodeline": "if (asprintf(&standalone_principal_dn, \"krbprincipalname=%s,%s\","
    },
    {
        "line": 214,
        "fullcodeline": "if (xargs.dn != NULL) {"
    },
    {
        "line": 228,
        "fullcodeline": "if (subtreelist == NULL) {"
    },
    {
        "line": 234,
        "fullcodeline": "for (tre=0; tre<ntrees; ++tre) {"
    },
    {
        "line": 248,
        "fullcodeline": "if (outofsubtree == TRUE) {"
    },
    {
        "line": 261,
        "fullcodeline": "if (standalone_principal_dn == NULL) {"
    },
    {
        "line": 306,
        "fullcodeline": "_(\"ldap object is already kerberized\"));"
    },
    {
        "line": 322,
        "fullcodeline": "if (optype == MODIFY_PRINCIPAL &&"
    },
    {
        "line": 336,
        "fullcodeline": "char **linkdns=NULL;"
    },
    {
        "line": 337,
        "fullcodeline": "int  j=0;"
    },
    {
        "line": 363,
        "fullcodeline": "if ((strval[0]=getstringtime(entry->last_success)) == NULL)"
    },
    {
        "line": 365,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbLastSuccessfulAuth\", LDAP_MOD_REPLACE, strval)) != 0) {"
    },
    {
        "line": 374,
        "fullcodeline": "if ((strval[0]=getstringtime(entry->last_failed)) == NULL)"
    },
    {
        "line": 376,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbLastFailedAuth\", LDAP_MOD_REPLACE, strval)) != 0) {"
    },
    {
        "line": 387,
        "fullcodeline": "if (entry->mask & KADM5_FAIL_AUTH_COUNT_INCREMENT)"
    },
    {
        "line": 393,
        "fullcodeline": "if (st != 0)"
    },
    {
        "line": 445,
        "fullcodeline": "if ((st=krb5_add_int_mem_ldap_mod(&mods, \"krbmaxticketlife\", LDAP_MOD_REPLACE, entry->max_life)) != 0)"
    },
    {
        "line": 450,
        "fullcodeline": "if ((st=krb5_add_int_mem_ldap_mod(&mods, \"krbmaxrenewableage\", LDAP_MOD_REPLACE,"
    },
    {
        "line": 456,
        "fullcodeline": "if ((st=krb5_add_int_mem_ldap_mod(&mods, \"krbticketflags\", LDAP_MOD_REPLACE,"
    },
    {
        "line": 464,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbprincipalname\", LDAP_MOD_REPLACE, strval)) != 0)"
    },
    {
        "line": 470,
        "fullcodeline": "if ((strval[0]=getstringtime(entry->expiration)) == NULL)"
    },
    {
        "line": 472,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbprincipalexpiration\", LDAP_MOD_REPLACE, strval)) != 0) {"
    },
    {
        "line": 481,
        "fullcodeline": "if ((strval[0]=getstringtime(entry->pw_expiration)) == NULL)"
    },
    {
        "line": 483,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbpasswordexpiration\","
    },
    {
        "line": 494,
        "fullcodeline": "for (tl_data=entry->tl_data; tl_data; tl_data=tl_data->tl_data_next) {"
    },
    {
        "line": 503,
        "fullcodeline": "if (princ_ent.aux_attributes & KADM5_POLICY) {"
    },
    {
        "line": 526,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbpwdpolicyreference\", LDAP_MOD_DELETE, NULL)) != 0)"
    },
    {
        "line": 533,
        "fullcodeline": "if ((st=krb5_dbe_lookup_mkvno(context, entry, &mkvno)) != 0)"
    },
    {
        "line": 538,
        "fullcodeline": "if (bersecretkey == NULL) {"
    },
    {
        "line": 544,
        "fullcodeline": "if (bersecretkey[0] != NULL || !create_standalone_prinicipal) {"
    },
    {
        "line": 552,
        "fullcodeline": "if (!(entry->mask & KADM5_PRINCIPAL)) {"
    },
    {
        "line": 572,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 581,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 592,
        "fullcodeline": "for (ptr = entry->tl_data; ptr != NULL; ptr = ptr->tl_data_next) {"
    },
    {
        "line": 604,
        "fullcodeline": "if (count != 0) {"
    },
    {
        "line": 642,
        "fullcodeline": "if ((st=krb5_dbe_lookup_last_admin_unlock(context, entry,"
    },
    {
        "line": 645,
        "fullcodeline": "if (unlock_time != 0) {"
    },
    {
        "line": 664,
        "fullcodeline": "if (strlen(xargs.tktpolicydn) != 0) {"
    },
    {
        "line": 685,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbObjectReferences\", LDAP_MOD_REPLACE, strval)) != 0)"
    },
    {
        "line": 705,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"objectclass\", LDAP_MOD_ADD, strval)) != 0)"
    },
    {
        "line": 709,
        "fullcodeline": "if (st == LDAP_ALREADY_EXISTS && entry->mask & KADM5_LOAD) {"
    },
    {
        "line": 723,
        "fullcodeline": "if (st != LDAP_SUCCESS) {"
    },
    {
        "line": 799,
        "fullcodeline": "for (l=0; bersecretkey[l]; ++l) {"
    },
    {
        "line": 86,
        "fullcodeline": "filter = NULL;"
    },
    {
        "line": 87,
        "fullcodeline": "st = ENOMEM;"
    },
    {
        "line": 135,
        "fullcodeline": "ldap_msgfree(result);"
    },
    {
        "line": 136,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 152,
        "fullcodeline": "create_standalone_prinicipal = TRUE;"
    },
    {
        "line": 153,
        "fullcodeline": "standalone_principal_dn = strdup(principal_dn);"
    },
    {
        "line": 154,
        "fullcodeline": "CHECK_NULL(standalone_principal_dn);"
    },
    {
        "line": 165,
        "fullcodeline": "strncmp(entry->princ->data[0].data, \"krbtgt\", entry->princ->data[0].length) == 0) {"
    },
    {
        "line": 167,
        "fullcodeline": "subtree = strdup(ldap_context->lrparams->realmdn);"
    },
    {
        "line": 192,
        "fullcodeline": "standalone_principal_dn = NULL;"
    },
    {
        "line": 215,
        "fullcodeline": "dn = xargs.dn;"
    },
    {
        "line": 229,
        "fullcodeline": "st = krb5_get_subtree_info(ldap_context, &subtreelist, &ntrees);"
    },
    {
        "line": 249,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 250,
        "fullcodeline": "k5_setmsg(context, st, _(\"DN is out of the realm subtree\"));"
    },
    {
        "line": 272,
        "fullcodeline": "char  *attributes[]={\"krbticketpolicyreference\", \"krbprincipalname\", NULL};"
    },
    {
        "line": 274,
        "fullcodeline": "ldap_msgfree(result);"
    },
    {
        "line": 275,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 276,
        "fullcodeline": "LDAP_SEARCH_1(dn, LDAP_SCOPE_BASE, 0, attributes, IGNORE_STATUS);"
    },
    {
        "line": 323,
        "fullcodeline": "kerberos_principal_object_type != KDB_STANDALONE_PRINCIPAL_OBJECT) {"
    },
    {
        "line": 324,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 325,
        "fullcodeline": "snprintf(errbuf, sizeof(errbuf),"
    },
    {
        "line": 328,
        "fullcodeline": "k5_setmsg(context, st, \"%s\", errbuf);"
    },
    {
        "line": 339,
        "fullcodeline": "if ((st=krb5_get_linkdn(context, entry, &linkdns)) != 0) {"
    },
    {
        "line": 345,
        "fullcodeline": "if (linkdns != NULL) {"
    },
    {
        "line": 366,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 377,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 388,
        "fullcodeline": "fail_auth_count++;"
    },
    {
        "line": 395,
        "fullcodeline": "} else if (entry->mask & KADM5_FAIL_AUTH_COUNT_INCREMENT) {"
    },
    {
        "line": 473,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 486,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 504,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 507,
        "fullcodeline": "strval[0] = polname;"
    },
    {
        "line": 515,
        "fullcodeline": "} else if (entry->mask & KADM5_LOAD && found_entry == TRUE) {"
    },
    {
        "line": 539,
        "fullcodeline": "st = ENOMEM;"
    },
    {
        "line": 545,
        "fullcodeline": "st = krb5_add_ber_mem_ldap_mod(&mods, \"krbprincipalkey\","
    },
    {
        "line": 553,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 562,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 568,
        "fullcodeline": "if ((st=krb5_dbe_lookup_last_pwd_change(context, entry,"
    },
    {
        "line": 573,
        "fullcodeline": "if ((strval[0] = getstringtime(last_pw_changed)) == NULL)"
    },
    {
        "line": 576,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbLastPwdChange\","
    },
    {
        "line": 602,
        "fullcodeline": "count++;"
    },
    {
        "line": 606,
        "fullcodeline": "ber_tl_data = (struct berval **) calloc (count + 1,"
    },
    {
        "line": 638,
        "fullcodeline": "free(ber_tl_data);"
    },
    {
        "line": 647,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 656,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 665,
        "fullcodeline": "st = checkattributevalue(ld, xargs.tktpolicydn, \"objectclass\", policyclass, &tmask);"
    },
    {
        "line": 666,
        "fullcodeline": "CHECK_CLASS_VALIDITY(st, tmask, _(\"ticket policy object value: \"));"
    },
    {
        "line": 668,
        "fullcodeline": "strval[0] = xargs.tktpolicydn;"
    },
    {
        "line": 669,
        "fullcodeline": "strval[1] = NULL;"
    },
    {
        "line": 711,
        "fullcodeline": "st = ldap_delete_ext_s(ld, standalone_principal_dn, NULL, NULL);"
    },
    {
        "line": 724,
        "fullcodeline": "snprintf(errbuf, sizeof(errbuf), _(\"Principal add failed: %s\"),"
    },
    {
        "line": 726,
        "fullcodeline": "st = translate_ldap_error (st, OP_ADD);"
    },
    {
        "line": 727,
        "fullcodeline": "k5_setmsg(context, st, \"%s\", errbuf);"
    },
    {
        "line": 739,
        "fullcodeline": "char *attrvalues[] = {\"krbprincipalaux\", \"krbTicketPolicyAux\", NULL};"
    },
    {
        "line": 740,
        "fullcodeline": "int p, q, r=0, amask=0;"
    },
    {
        "line": 746,
        "fullcodeline": "memset(strval, 0, sizeof(strval));"
    },
    {
        "line": 756,
        "fullcodeline": "if (xargs.dn != NULL)"
    },
    {
        "line": 761,
        "fullcodeline": "if (st != LDAP_SUCCESS) {"
    },
    {
        "line": 769,
        "fullcodeline": "if (entry->mask & KADM5_FAIL_AUTH_COUNT_INCREMENT)"
    },
    {
        "line": 802,
        "fullcodeline": "free (bersecretkey[l]);"
    },
    {
        "line": 98,
        "fullcodeline": "if (principal_dn == NULL) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (st == LDAP_SUCCESS) {"
    },
    {
        "line": 235,
        "fullcodeline": "if (subtreelist[tre] == NULL || strlen(subtreelist[tre]) == 0) {"
    },
    {
        "line": 277,
        "fullcodeline": "if (st == LDAP_SUCCESS) {"
    },
    {
        "line": 326,
        "fullcodeline": "_(\"link information can not be set/updated as the \""
    },
    {
        "line": 340,
        "fullcodeline": "snprintf(errbuf, sizeof(errbuf),"
    },
    {
        "line": 342,
        "fullcodeline": "k5_setmsg(context, st, \"%s\", errbuf);"
    },
    {
        "line": 346,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 347,
        "fullcodeline": "snprintf(errbuf, sizeof(errbuf),"
    },
    {
        "line": 350,
        "fullcodeline": "k5_setmsg(context, st, \"%s\", errbuf);"
    },
    {
        "line": 353,
        "fullcodeline": "free (linkdns);"
    },
    {
        "line": 396,
        "fullcodeline": "int attr_mask = 0;"
    },
    {
        "line": 401,
        "fullcodeline": "st = krb5_get_attributes_mask(context, entry, &attr_mask);"
    },
    {
        "line": 404,
        "fullcodeline": "has_fail_count = ((attr_mask & KDB_FAIL_AUTH_COUNT_ATTR) != 0);"
    },
    {
        "line": 429,
        "fullcodeline": "st = krb5_add_int_mem_ldap_mod(&mods, \"krbLoginFailedCount\","
    },
    {
        "line": 495,
        "fullcodeline": "if (tl_data->tl_data_type == KRB5_TL_KADM_DATA) {"
    },
    {
        "line": 505,
        "fullcodeline": "if ((st = krb5_ldap_name_to_policydn (context, princ_ent.policy, &polname)) != 0)"
    },
    {
        "line": 508,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbpwdpolicyreference\", LDAP_MOD_REPLACE, strval)) != 0)"
    },
    {
        "line": 511,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 512,
        "fullcodeline": "k5_setmsg(context, st, \"Password policy value null\");"
    },
    {
        "line": 548,
        "fullcodeline": "if (st != 0)"
    },
    {
        "line": 554,
        "fullcodeline": "if ((strval[0]=getstringtime(entry->pw_expiration)) == NULL)"
    },
    {
        "line": 556,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods,"
    },
    {
        "line": 578,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 593,
        "fullcodeline": "if (ptr->tl_data_type == KRB5_TL_LAST_PWD_CHANGE"
    },
    {
        "line": 608,
        "fullcodeline": "if (ber_tl_data == NULL) {"
    },
    {
        "line": 612,
        "fullcodeline": "for (j = 0, ptr = entry->tl_data; ptr != NULL; ptr = ptr->tl_data_next) {"
    },
    {
        "line": 628,
        "fullcodeline": "if (st == 0) {"
    },
    {
        "line": 634,
        "fullcodeline": "for (j = 0; ber_tl_data[j] != NULL; j++) {"
    },
    {
        "line": 639,
        "fullcodeline": "if (st != 0)"
    },
    {
        "line": 648,
        "fullcodeline": "if ((strval[0] = getstringtime(unlock_time)) == NULL)"
    },
    {
        "line": 651,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbLastAdminUnlock\","
    },
    {
        "line": 670,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbticketpolicyreference\", LDAP_MOD_REPLACE, strval)) != 0)"
    },
    {
        "line": 712,
        "fullcodeline": "if (st != LDAP_SUCCESS) {"
    },
    {
        "line": 725,
        "fullcodeline": "ldap_err2string(st));"
    },
    {
        "line": 742,
        "fullcodeline": "if ((st=checkattributevalue(ld, (xargs.dn) ? xargs.dn : principal_dn,"
    },
    {
        "line": 747,
        "fullcodeline": "for (p=1, q=0; p<=2; p<<=1, ++q) {"
    },
    {
        "line": 751,
        "fullcodeline": "if (r != 0) {"
    },
    {
        "line": 757,
        "fullcodeline": "st=ldap_modify_ext_s(ld, xargs.dn, mods, NULL, NULL);"
    },
    {
        "line": 762,
        "fullcodeline": "snprintf(errbuf, sizeof(errbuf), _(\"User modification failed: %s\"),"
    },
    {
        "line": 764,
        "fullcodeline": "st = translate_ldap_error (st, OP_MOD);"
    },
    {
        "line": 765,
        "fullcodeline": "k5_setmsg(context, st, \"%s\", errbuf);"
    },
    {
        "line": 770,
        "fullcodeline": "entry->fail_auth_count++;"
    },
    {
        "line": 99,
        "fullcodeline": "LDAP_SEARCH_1(subtreelist[tree], ldap_context->lrparams->search_scope, filter, principal_attributes, IGNORE_STATUS);"
    },
    {
        "line": 105,
        "fullcodeline": "numlentries = ldap_count_entries(ld, result);"
    },
    {
        "line": 216,
        "fullcodeline": "} else if (xargs.linkdn != NULL) {"
    },
    {
        "line": 236,
        "fullcodeline": "outofsubtree = FALSE;"
    },
    {
        "line": 278,
        "fullcodeline": "ent = ldap_first_entry(ld, result);"
    },
    {
        "line": 341,
        "fullcodeline": "_(\"Failed getting object references\"));"
    },
    {
        "line": 348,
        "fullcodeline": "_(\"kerberos principal is already linked to a ldap \""
    },
    {
        "line": 351,
        "fullcodeline": "for (j=0; linkdns[j] != NULL; ++j)"
    },
    {
        "line": 352,
        "fullcodeline": "free (linkdns[j]);"
    },
    {
        "line": 402,
        "fullcodeline": "if (st != 0)"
    },
    {
        "line": 432,
        "fullcodeline": "if (st != 0)"
    },
    {
        "line": 521,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbpwdpolicyreference\", LDAP_MOD_REPLACE, NULL)) != 0)"
    },
    {
        "line": 546,
        "fullcodeline": "LDAP_MOD_REPLACE | LDAP_MOD_BVALUES,"
    },
    {
        "line": 559,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 600,
        "fullcodeline": "|| ptr->tl_data_type == KRB5_TL_LAST_ADMIN_UNLOCK)"
    },
    {
        "line": 609,
        "fullcodeline": "st = ENOMEM;"
    },
    {
        "line": 626,
        "fullcodeline": "j++;"
    },
    {
        "line": 629,
        "fullcodeline": "ber_tl_data[count] = NULL;"
    },
    {
        "line": 630,
        "fullcodeline": "st=krb5_add_ber_mem_ldap_mod(&mods, \"krbExtraData\","
    },
    {
        "line": 636,
        "fullcodeline": "free(ber_tl_data[j]);"
    },
    {
        "line": 653,
        "fullcodeline": "free (strval[0]);"
    },
    {
        "line": 676,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbticketpolicyreference\", LDAP_MOD_DELETE, NULL)) != 0)"
    },
    {
        "line": 713,
        "fullcodeline": "snprintf(errbuf, sizeof(errbuf),"
    },
    {
        "line": 716,
        "fullcodeline": "st = translate_ldap_error (st, OP_ADD);"
    },
    {
        "line": 717,
        "fullcodeline": "k5_setmsg(context, st, \"%s\", errbuf);"
    },
    {
        "line": 759,
        "fullcodeline": "st = ldap_modify_ext_s(ld, principal_dn, mods, NULL, NULL);"
    },
    {
        "line": 763,
        "fullcodeline": "ldap_err2string(st));"
    },
    {
        "line": 102,
        "fullcodeline": "LDAP_SEARCH_1(principal_dn, LDAP_SCOPE_BASE, filter, principal_attributes, IGNORE_STATUS);"
    },
    {
        "line": 106,
        "fullcodeline": "if (numlentries > 1) {"
    },
    {
        "line": 178,
        "fullcodeline": "subtree = strdup(xargs.containerdn);"
    },
    {
        "line": 217,
        "fullcodeline": "dn = xargs.linkdn;"
    },
    {
        "line": 239,
        "fullcodeline": "dnlen = strlen (dn);"
    },
    {
        "line": 240,
        "fullcodeline": "subtreelen = strlen(subtreelist[tre]);"
    },
    {
        "line": 279,
        "fullcodeline": "if (ent != NULL) {"
    },
    {
        "line": 290,
        "fullcodeline": "st = set_ldap_error(context, st, OP_SEARCH);"
    },
    {
        "line": 422,
        "fullcodeline": "st = krb5_add_int_mem_ldap_mod(&mods,"
    },
    {
        "line": 431,
        "fullcodeline": "entry->fail_auth_count + 1);"
    },
    {
        "line": 437,
        "fullcodeline": "} else if (optype == ADD_PRINCIPAL) {"
    },
    {
        "line": 496,
        "fullcodeline": "if ((st = krb5_lookup_tl_kadm_data(tl_data, &princ_ent)) != 0) {"
    },
    {
        "line": 599,
        "fullcodeline": "|| ptr->tl_data_type == KRB5_TL_CONSTRAINED_DELEGATION_ACL"
    },
    {
        "line": 615,
        "fullcodeline": "if (ptr->tl_data_type == KRB5_TL_LAST_PWD_CHANGE"
    },
    {
        "line": 624,
        "fullcodeline": "if ((st = tl_data2berval (ptr, &ber_tl_data[j])) != 0)"
    },
    {
        "line": 714,
        "fullcodeline": "_(\"Principal delete failed (trying to replace \""
    },
    {
        "line": 715,
        "fullcodeline": "\"entry): %s\"), ldap_err2string(st));"
    },
    {
        "line": 720,
        "fullcodeline": "st = ldap_add_ext_s(ld, standalone_principal_dn, mods, NULL, NULL);"
    },
    {
        "line": 748,
        "fullcodeline": "if ((p & amask) == 0)"
    },
    {
        "line": 752,
        "fullcodeline": "if ((st=krb5_add_str_mem_ldap_mod(&mods, \"objectclass\", LDAP_MOD_ADD, strval)) != 0)"
    },
    {
        "line": 107,
        "fullcodeline": "free(filter);"
    },
    {
        "line": 108,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 109,
        "fullcodeline": "k5_setmsg(context, st,"
    },
    {
        "line": 129,
        "fullcodeline": "} else if (st != LDAP_NO_SUCH_OBJECT) {"
    },
    {
        "line": 169,
        "fullcodeline": "if ((st=checkattributevalue(ld, xargs.containerdn, NULL, NULL, NULL)) != 0) {"
    },
    {
        "line": 241,
        "fullcodeline": "if ((dnlen >= subtreelen) && (strcasecmp((dn + dnlen - subtreelen), subtreelist[tre]) == 0)) {"
    },
    {
        "line": 426,
        "fullcodeline": "if (st != 0)"
    },
    {
        "line": 440,
        "fullcodeline": "st = krb5_add_int_mem_ldap_mod(&mods, \"krbLoginFailedCount\","
    },
    {
        "line": 598,
        "fullcodeline": "|| ptr->tl_data_type == KDB_TL_USER_INFO"
    },
    {
        "line": 622,
        "fullcodeline": "|| ptr->tl_data_type == KRB5_TL_LAST_ADMIN_UNLOCK)"
    },
    {
        "line": 631,
        "fullcodeline": "LDAP_MOD_REPLACE |"
    },
    {
        "line": 749,
        "fullcodeline": "strval[r++] = attrvalues[q];"
    },
    {
        "line": 110,
        "fullcodeline": "_(\"operation can not continue, more than one \""
    },
    {
        "line": 131,
        "fullcodeline": "st = set_ldap_error (context, st, 0);"
    },
    {
        "line": 132,
        "fullcodeline": "free(filter);"
    },
    {
        "line": 179,
        "fullcodeline": "} else if (ldap_context->lrparams->containerref && strlen(ldap_context->lrparams->containerref) != 0) {"
    },
    {
        "line": 218,
        "fullcodeline": "} else if (standalone_principal_dn != NULL) {"
    },
    {
        "line": 242,
        "fullcodeline": "outofsubtree = FALSE;"
    },
    {
        "line": 280,
        "fullcodeline": "if ((values=ldap_get_values(ld, ent, \"krbticketpolicyreference\")) != NULL) {"
    },
    {
        "line": 284,
        "fullcodeline": "if ((values=ldap_get_values(ld, ent, \"krbprincipalname\")) != NULL) {"
    },
    {
        "line": 597,
        "fullcodeline": "|| ptr->tl_data_type == KRB5_TL_KADM_DATA"
    },
    {
        "line": 621,
        "fullcodeline": "|| ptr->tl_data_type == KRB5_TL_CONSTRAINED_DELEGATION_ACL"
    },
    {
        "line": 114,
        "fullcodeline": "} else if (numlentries == 1) {"
    },
    {
        "line": 170,
        "fullcodeline": "if (st == KRB5_KDB_NOENTRY || st == KRB5_KDB_CONSTRAINT_VIOLATION) {"
    },
    {
        "line": 184,
        "fullcodeline": "subtree = strdup(ldap_context->lrparams->containerref);"
    },
    {
        "line": 224,
        "fullcodeline": "dn = standalone_principal_dn;"
    },
    {
        "line": 281,
        "fullcodeline": "ldap_value_free(values);"
    },
    {
        "line": 285,
        "fullcodeline": "krb_identity_exists = TRUE;"
    },
    {
        "line": 286,
        "fullcodeline": "ldap_value_free(values);"
    },
    {
        "line": 620,
        "fullcodeline": "|| ptr->tl_data_type == KDB_TL_USER_INFO"
    },
    {
        "line": 115,
        "fullcodeline": "found_entry = TRUE;"
    },
    {
        "line": 171,
        "fullcodeline": "int ost = st;"
    },
    {
        "line": 172,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 173,
        "fullcodeline": "k5_prependmsg(context, ost, st, _(\"'%s' not found\"),"
    },
    {
        "line": 186,
        "fullcodeline": "subtree = strdup(ldap_context->lrparams->realmdn);"
    },
    {
        "line": 619,
        "fullcodeline": "|| ptr->tl_data_type == KRB5_TL_KADM_DATA"
    },
    {
        "line": 116,
        "fullcodeline": "if (principal_dn == NULL) {"
    },
    {
        "line": 117,
        "fullcodeline": "ent = ldap_first_entry(ld, result);"
    },
    {
        "line": 118,
        "fullcodeline": "if (ent != NULL) {"
    },
    {
        "line": 120,
        "fullcodeline": "if ((principal_dn = ldap_get_dn(ld, ent)) == NULL) {"
    },
    {
        "line": 121,
        "fullcodeline": "ldap_get_option (ld, LDAP_OPT_RESULT_CODE, &st);"
    },
    {
        "line": 122,
        "fullcodeline": "st = set_ldap_error (context, st, 0);"
    },
    {
        "line": 123,
        "fullcodeline": "free(filter);"
    }
]