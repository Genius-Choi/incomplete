[
    {
        "line": 8,
        "fullcodeline": "char szDEFName[1000];"
    },
    {
        "line": 10,
        "fullcodeline": "vrml_root_node = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "has_id = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "parser->cur_com = init_com;"
    },
    {
        "line": 18,
        "fullcodeline": "force_new_com = (parser->load->flags & GF_SM_LOAD_CONTEXT_READY) ? 1 : 0;"
    },
    {
        "line": 244,
        "fullcodeline": "gf_bt_resolve_routes(parser, 0);"
    },
    {
        "line": 245,
        "fullcodeline": "gf_bt_check_unresolved_nodes(parser);"
    },
    {
        "line": 22,
        "fullcodeline": "if (parser->is_wrl && !parser->top_nodes) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (!parser->in_com)"
    },
    {
        "line": 41,
        "fullcodeline": "while (!parser->last_error) {"
    },
    {
        "line": 248,
        "fullcodeline": "while (gf_list_count(parser->scripts)) {"
    },
    {
        "line": 14,
        "fullcodeline": "parser->in_com = 0 ;"
    },
    {
        "line": 38,
        "fullcodeline": "parser->stream_id = parser->load->force_es_id;"
    },
    {
        "line": 42,
        "fullcodeline": "str = gf_bt_get_next(parser, 0);"
    },
    {
        "line": 249,
        "fullcodeline": "GF_Node *n = (GF_Node *)gf_list_get(parser->scripts, 0);"
    },
    {
        "line": 250,
        "fullcodeline": "gf_list_rem(parser->scripts, 0);"
    },
    {
        "line": 251,
        "fullcodeline": "gf_sg_script_load(n);"
    },
    {
        "line": 45,
        "fullcodeline": "if (!strcmp(str, \"\")) {"
    },
    {
        "line": 25,
        "fullcodeline": "vrml_root_node = gf_node_new(parser->load->scene_graph, (parser->load->flags & GF_SM_LOAD_MPEG4_STRICT) ? TAG_MPEG4_Group : TAG_X3D_Group);"
    },
    {
        "line": 29,
        "fullcodeline": "gf_node_register(vrml_root_node, NULL);"
    },
    {
        "line": 30,
        "fullcodeline": "gf_node_init(vrml_root_node);"
    },
    {
        "line": 31,
        "fullcodeline": "gf_sg_set_root_node(parser->load->scene_graph, vrml_root_node);"
    },
    {
        "line": 33,
        "fullcodeline": "vrml_root_node = gf_sg_get_root_node(parser->load->scene_graph);"
    },
    {
        "line": 47,
        "fullcodeline": "if (parser->line_pos<parser->line_size) parser->line_pos++;"
    },
    {
        "line": 50,
        "fullcodeline": "else if (!strcmp(str, \"PROFILE\")) gf_bt_force_line(parser);"
    },
    {
        "line": 51,
        "fullcodeline": "else if (!strcmp(str, \"COMPONENT\")) gf_bt_force_line(parser);"
    },
    {
        "line": 52,
        "fullcodeline": "else if (!strcmp(str, \"META\")) gf_bt_force_line(parser);"
    },
    {
        "line": 53,
        "fullcodeline": "else if (!strcmp(str, \"IMPORT\") || !strcmp(str, \"EXPORT\")) {"
    },
    {
        "line": 54,
        "fullcodeline": "gf_bt_report(parser, GF_NOT_SUPPORTED, \"X3D IMPORT/EXPORT not implemented\");"
    },
    {
        "line": 59,
        "fullcodeline": "else if (!strcmp(str, \"InitialObjectDescriptor\") || !strcmp(str, \"ObjectDescriptor\")) {"
    },
    {
        "line": 60,
        "fullcodeline": "parser->load->ctx->root_od = (GF_ObjectDescriptor *) gf_bt_parse_descriptor(parser, str);"
    },
    {
        "line": 63,
        "fullcodeline": "else if (!strcmp(str, \"AT\") || !strcmp(str, \"RAP\")) {"
    },
    {
        "line": 64,
        "fullcodeline": "parser->au_is_rap = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "force_new_com = 0;"
    },
    {
        "line": 75,
        "fullcodeline": "str = gf_bt_get_next(parser, 0);"
    },
    {
        "line": 92,
        "fullcodeline": "parser->stream_id = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "parser->in_com = 1;"
    },
    {
        "line": 65,
        "fullcodeline": "if (!strcmp(str, \"RAP\")) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (str[0] == 'D') {"
    },
    {
        "line": 86,
        "fullcodeline": "if (parser->od_au && (parser->od_au->timing != parser->au_time)) parser->od_au = NULL;"
    },
    {
        "line": 87,
        "fullcodeline": "if (parser->bifs_au && (parser->bifs_au->timing != parser->au_time)) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (!parser->au_time) parser->au_is_rap = 1;"
    },
    {
        "line": 99,
        "fullcodeline": "if (!gf_bt_check_code(parser, '{')) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (init_com && parser->au_time) break;"
    },
    {
        "line": 66,
        "fullcodeline": "parser->au_is_rap = 1;"
    },
    {
        "line": 67,
        "fullcodeline": "str = gf_bt_get_next(parser, 0);"
    },
    {
        "line": 77,
        "fullcodeline": "parser->au_time += atoi(&str[1]);"
    },
    {
        "line": 88,
        "fullcodeline": "gf_bt_check_unresolved_nodes(parser);"
    },
    {
        "line": 89,
        "fullcodeline": "parser->bifs_au = NULL;"
    },
    {
        "line": 100,
        "fullcodeline": "str = gf_bt_get_next(parser, 0);"
    },
    {
        "line": 112,
        "fullcodeline": "else if (!strcmp(str, \"PROTO\") || !strcmp(str, \"EXTERNPROTO\")) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (strcmp(str, \"AT\")) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (!strcmp(str, \"IN\")) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (!gf_bt_check_code(parser, '{')) {"
    },
    {
        "line": 113,
        "fullcodeline": "gf_bt_parse_proto(parser, str, init_com ? init_com->new_proto_list : NULL);"
    },
    {
        "line": 69,
        "fullcodeline": "gf_bt_report(parser, GF_BAD_PARAM, \"AT expected got %s\", str);"
    },
    {
        "line": 70,
        "fullcodeline": "parser->last_error = GF_BAD_PARAM;"
    },
    {
        "line": 79,
        "fullcodeline": "if (sscanf(str, \"%u\", &parser->au_time) != 1) {"
    },
    {
        "line": 102,
        "fullcodeline": "gf_bt_parse_int(parser, \"IN\", (SFInt32*)&parser->stream_id);"
    },
    {
        "line": 106,
        "fullcodeline": "gf_bt_report(parser, GF_BAD_PARAM, \"{ expected\");"
    },
    {
        "line": 80,
        "fullcodeline": "gf_bt_report(parser, GF_BAD_PARAM, \"Number expected got %s\", str);"
    },
    {
        "line": 116,
        "fullcodeline": "else if (!strcmp(str, \"NULL\")) {"
    },
    {
        "line": 118,
        "fullcodeline": "else if (!strcmp(str, \"DEF\")) {"
    },
    {
        "line": 119,
        "fullcodeline": "str = gf_bt_get_next(parser, 0);"
    },
    {
        "line": 120,
        "fullcodeline": "strcpy(szDEFName, str);"
    },
    {
        "line": 121,
        "fullcodeline": "has_id = 1;"
    },
    {
        "line": 123,
        "fullcodeline": "else if (!strcmp(str, \"ROUTE\")) {"
    },
    {
        "line": 124,
        "fullcodeline": "GF_Command *com = NULL;"
    },
    {
        "line": 132,
        "fullcodeline": "r = gf_bt_parse_route(parser, 1, 0, com);"
    },
    {
        "line": 125,
        "fullcodeline": "if (!parser->top_nodes && parser->bifs_au && !parser->is_wrl) {"
    },
    {
        "line": 127,
        "fullcodeline": "com = gf_sg_command_new(parser->load->scene_graph, GF_SG_ROUTE_INSERT);"
    },
    {
        "line": 128,
        "fullcodeline": "gf_list_add(parser->bifs_au->commands, com);"
    },
    {
        "line": 129,
        "fullcodeline": "gf_list_add(parser->inserted_routes, com);"
    },
    {
        "line": 134,
        "fullcodeline": "u32 rID = gf_bt_get_route(parser, szDEFName);"
    },
    {
        "line": 144,
        "fullcodeline": "has_id = 0;"
    },
    {
        "line": 148,
        "fullcodeline": "else if (!strcmp(str, \"UPDATE\") || !strcmp(str, \"REMOVE\")) {"
    },
    {
        "line": 135,
        "fullcodeline": "if (!rID) rID = gf_bt_get_next_route_id(parser);"
    },
    {
        "line": 149,
        "fullcodeline": "Bool is_base_stream = parser->stream_id ? 0 : 1;"
    },
    {
        "line": 163,
        "fullcodeline": "gf_bt_parse_od_command(parser, str);"
    },
    {
        "line": 137,
        "fullcodeline": "com->RouteID = rID;"
    },
    {
        "line": 138,
        "fullcodeline": "com->def_name = gf_strdup(szDEFName);"
    },
    {
        "line": 139,
        "fullcodeline": "gf_sg_set_max_defined_route_id(parser->load->scene_graph, rID);"
    },
    {
        "line": 150,
        "fullcodeline": "if (!parser->stream_id || parser->stream_id==parser->bifs_es->ESID) parser->stream_id = parser->base_od_id;"
    },
    {
        "line": 152,
        "fullcodeline": "if (parser->od_es && (parser->od_es->ESID != parser->stream_id)) {"
    },
    {
        "line": 161,
        "fullcodeline": "if (!parser->od_es) parser->od_es = gf_sm_stream_new(parser->load->ctx, (u16) parser->stream_id, GF_STREAM_OD, GF_CODECID_OD_V1);"
    },
    {
        "line": 162,
        "fullcodeline": "if (!parser->od_au) parser->od_au = gf_sm_stream_au_new(parser->od_es, parser->au_time, 0, parser->au_is_rap);"
    },
    {
        "line": 153,
        "fullcodeline": "GF_StreamContext *prev = parser->od_es;"
    },
    {
        "line": 154,
        "fullcodeline": "parser->od_es = gf_sm_stream_new(parser->load->ctx, (u16) parser->stream_id, GF_STREAM_OD, GF_CODECID_OD_V1);"
    },
    {
        "line": 164,
        "fullcodeline": "if (is_base_stream) parser->stream_id= 0;"
    },
    {
        "line": 167,
        "fullcodeline": "else if (!strcmp(str, \"REPLACE\") || !strcmp(str, \"INSERT\") || !strcmp(str, \"APPEND\") || !strcmp(str, \"DELETE\")"
    },
    {
        "line": 156,
        "fullcodeline": "if (parser->od_es != prev) {"
    },
    {
        "line": 170,
        "fullcodeline": "|| !strcmp(str, \"XREPLACE\")"
    },
    {
        "line": 172,
        "fullcodeline": "Bool is_base_stream = parser->stream_id ? 0 : 1;"
    },
    {
        "line": 194,
        "fullcodeline": "gf_bt_parse_bifs_command(parser, str, parser->bifs_au->commands);"
    },
    {
        "line": 141,
        "fullcodeline": "gf_sg_route_set_id(r, rID);"
    },
    {
        "line": 142,
        "fullcodeline": "gf_sg_route_set_name(r, szDEFName);"
    },
    {
        "line": 157,
        "fullcodeline": "parser->bifs_au = NULL;"
    },
    {
        "line": 158,
        "fullcodeline": "parser->od_au = NULL;"
    },
    {
        "line": 169,
        "fullcodeline": "|| !strcmp(str, \"GLOBALQP\") || !strcmp(str, \"MULTIPLEREPLACE\") || !strcmp(str, \"MULTIPLEINDREPLACE\") || !strcmp(str, \"XDELETE\") || !strcmp(str, \"DELETEPROTO\") || !strcmp(str, \"INSERTPROTO\")"
    },
    {
        "line": 174,
        "fullcodeline": "if (!parser->stream_id) parser->stream_id = parser->base_bifs_id;"
    },
    {
        "line": 175,
        "fullcodeline": "if (!parser->stream_id || (parser->od_es && (parser->stream_id==parser->od_es->ESID)) ) parser->stream_id = parser->base_bifs_id;"
    },
    {
        "line": 177,
        "fullcodeline": "if (parser->bifs_es->ESID != parser->stream_id) {"
    },
    {
        "line": 193,
        "fullcodeline": "if (!parser->bifs_au) parser->bifs_au = gf_sm_stream_au_new(parser->bifs_es, parser->au_time, 0, parser->au_is_rap);"
    },
    {
        "line": 178,
        "fullcodeline": "GF_StreamContext *prev = parser->bifs_es;"
    },
    {
        "line": 179,
        "fullcodeline": "parser->bifs_es = gf_sm_stream_new(parser->load->ctx, (u16) parser->stream_id, GF_STREAM_SCENE, GF_CODECID_BIFS);"
    },
    {
        "line": 187,
        "fullcodeline": "force_new_com = 0;"
    },
    {
        "line": 188,
        "fullcodeline": "parser->bifs_au = gf_list_last(parser->bifs_es->AUs);"
    },
    {
        "line": 189,
        "fullcodeline": "parser->au_time = (u32) (parser->bifs_au ? parser->bifs_au->timing : 0) + 1;"
    },
    {
        "line": 190,
        "fullcodeline": "parser->bifs_au = NULL;"
    },
    {
        "line": 195,
        "fullcodeline": "if (is_base_stream) parser->stream_id= 0;"
    },
    {
        "line": 198,
        "fullcodeline": "else if (!strcmp(str, \"OrderedGroup\")"
    },
    {
        "line": 181,
        "fullcodeline": "if (parser->bifs_es != prev) {"
    },
    {
        "line": 207,
        "fullcodeline": "node = gf_bt_sf_node(parser, str, vrml_root_node, has_id ? szDEFName : NULL);"
    },
    {
        "line": 208,
        "fullcodeline": "has_id = 0;"
    },
    {
        "line": 182,
        "fullcodeline": "gf_bt_check_unresolved_nodes(parser);"
    },
    {
        "line": 183,
        "fullcodeline": "parser->bifs_au = NULL;"
    },
    {
        "line": 201,
        "fullcodeline": "|| !strcmp(str, \"Layer3D\")"
    },
    {
        "line": 209,
        "fullcodeline": "if (!node) break;"
    },
    {
        "line": 241,
        "fullcodeline": "parser->au_is_rap = 0;"
    },
    {
        "line": 200,
        "fullcodeline": "|| !strcmp(str, \"Layer2D\")"
    },
    {
        "line": 211,
        "fullcodeline": "gf_list_add(parser->top_nodes, node);"
    },
    {
        "line": 237,
        "fullcodeline": "if (/*in_com && */gf_bt_check_code(parser, '}')) parser->in_com = 0;"
    },
    {
        "line": 199,
        "fullcodeline": "|| !strcmp(str, \"Group\")"
    },
    {
        "line": 212,
        "fullcodeline": "} else if (!vrml_root_node) {"
    },
    {
        "line": 238,
        "fullcodeline": "else if (strlen(str)) {"
    },
    {
        "line": 223,
        "fullcodeline": "gf_node_insert_child(vrml_root_node, node, -1);"
    },
    {
        "line": 239,
        "fullcodeline": "gf_bt_report(parser, GF_BAD_PARAM, \"%s: Unknown top-level element\", str);"
    },
    {
        "line": 213,
        "fullcodeline": "if (init_com) init_com->node = node;"
    },
    {
        "line": 214,
        "fullcodeline": "else if (parser->load->flags & GF_SM_LOAD_CONTEXT_READY) {"
    },
    {
        "line": 215,
        "fullcodeline": "GF_Command *com = gf_sg_command_new(parser->load->scene_graph, GF_SG_SCENE_REPLACE);"
    },
    {
        "line": 216,
        "fullcodeline": "assert(!parser->bifs_au);"
    },
    {
        "line": 217,
        "fullcodeline": "assert(parser->bifs_es);"
    },
    {
        "line": 218,
        "fullcodeline": "parser->bifs_au = gf_sm_stream_au_new(parser->bifs_es, 0, 0, 1);"
    },
    {
        "line": 219,
        "fullcodeline": "gf_list_add(parser->bifs_au->commands, com);"
    },
    {
        "line": 220,
        "fullcodeline": "com->node = node;"
    }
]