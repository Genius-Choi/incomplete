[
    {
        "line": 13,
        "fullcodeline": "body = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "buf=0;"
    },
    {
        "line": 15,
        "fullcodeline": "to_tag.s = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "to_tag.len = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "received_buf=rport_buf=warning_buf=content_len_buf=0;"
    },
    {
        "line": 18,
        "fullcodeline": "received_len=rport_len=warning_len=content_len_len=0;"
    },
    {
        "line": 30,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "len += SIP_VERSION_LEN + 1/*space*/ + 3/*code*/ + 1/*space*/ +"
    },
    {
        "line": 111,
        "fullcodeline": "len += CRLF_LEN; /*new line*/"
    },
    {
        "line": 114,
        "fullcodeline": "buf = (char*) pkg_malloc( len+1 );"
    },
    {
        "line": 122,
        "fullcodeline": "p=buf;"
    },
    {
        "line": 124,
        "fullcodeline": "memcpy( p , SIP_VERSION , SIP_VERSION_LEN );"
    },
    {
        "line": 125,
        "fullcodeline": "p += SIP_VERSION_LEN;"
    },
    {
        "line": 126,
        "fullcodeline": "*(p++) = ' ' ;"
    },
    {
        "line": 130,
        "fullcodeline": "p += 3;"
    },
    {
        "line": 131,
        "fullcodeline": "*(p++) = ' ' ;"
    },
    {
        "line": 132,
        "fullcodeline": "memcpy( p , text->s , text->len );"
    },
    {
        "line": 133,
        "fullcodeline": "p += text->len;"
    },
    {
        "line": 134,
        "fullcodeline": "memcpy( p, CRLF, CRLF_LEN );"
    },
    {
        "line": 135,
        "fullcodeline": "p+=CRLF_LEN;"
    },
    {
        "line": 258,
        "fullcodeline": "memcpy( p, CRLF, CRLF_LEN );"
    },
    {
        "line": 259,
        "fullcodeline": "p+=CRLF_LEN;"
    },
    {
        "line": 268,
        "fullcodeline": "*(p) = 0;"
    },
    {
        "line": 269,
        "fullcodeline": "*returned_len = len;"
    },
    {
        "line": 281,
        "fullcodeline": "*returned_len=0;"
    },
    {
        "line": 24,
        "fullcodeline": "if (parse_headers( msg, HDR_EOH_F, 0 )==-1) {"
    },
    {
        "line": 33,
        "fullcodeline": "if ( (msg->msg_flags&FL_FORCE_RPORT)||"
    },
    {
        "line": 44,
        "fullcodeline": "if (rport_buf || received_test(msg)) {"
    },
    {
        "line": 67,
        "fullcodeline": "for( hdr=msg->h_via1 ; hdr ; hdr=hdr->sibling) {"
    },
    {
        "line": 73,
        "fullcodeline": "for( hdr=msg->record_route ; hdr ; hdr=hdr->sibling) {"
    },
    {
        "line": 89,
        "fullcodeline": "for(lump=msg->reply_lump;lump;lump=lump->next) {"
    },
    {
        "line": 115,
        "fullcodeline": "if (!buf)"
    },
    {
        "line": 128,
        "fullcodeline": "for ( i=2 , foo = code  ;  i>=0  ;  i-- , foo=foo/10 )"
    },
    {
        "line": 129,
        "fullcodeline": "*(p+i) = '0' + foo - ( foo/10 )*10;"
    },
    {
        "line": 137,
        "fullcodeline": "if ( (hdr=msg->h_via1)!=NULL ) {"
    },
    {
        "line": 182,
        "fullcodeline": "for( hdr=msg->record_route ; hdr ; hdr=hdr->sibling) {"
    },
    {
        "line": 188,
        "fullcodeline": "if ( (hdr=msg->to)!=NULL ) {"
    },
    {
        "line": 234,
        "fullcodeline": "for(lump=msg->reply_lump;lump;lump=lump->next)"
    },
    {
        "line": 265,
        "fullcodeline": "if (len!=(unsigned long)(p-buf))"
    },
    {
        "line": 25,
        "fullcodeline": "LM_ERR(\"parse_headers failed\\n\");"
    },
    {
        "line": 63,
        "fullcodeline": "len += msg->to->len;"
    },
    {
        "line": 69,
        "fullcodeline": "len+=(hdr->body.s+hdr->body.len)-hdr->name.s+CRLF_LEN;"
    },
    {
        "line": 80,
        "fullcodeline": "len += msg->from->len;"
    },
    {
        "line": 83,
        "fullcodeline": "len += msg->callid->len;"
    },
    {
        "line": 86,
        "fullcodeline": "len += msg->cseq->len;"
    },
    {
        "line": 90,
        "fullcodeline": "len += lump->text.len;"
    },
    {
        "line": 96,
        "fullcodeline": "len += server_header->len + CRLF_LEN;"
    },
    {
        "line": 99,
        "fullcodeline": "warning_buf = warning_builder(msg,&warning_len);"
    },
    {
        "line": 105,
        "fullcodeline": "content_len_buf = int2str(body->text.len, (int*)&content_len_len);"
    },
    {
        "line": 106,
        "fullcodeline": "len += CONTENT_LENGTH_LEN + content_len_len + CRLF_LEN;"
    },
    {
        "line": 117,
        "fullcodeline": "LM_ERR(\"out of pkg memory; needs %d\\n\",len);"
    },
    {
        "line": 139,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 172,
        "fullcodeline": "append_str( p, CRLF,CRLF_LEN);"
    },
    {
        "line": 226,
        "fullcodeline": "append_str(p, msg->from->name.s, msg->from->len);"
    },
    {
        "line": 229,
        "fullcodeline": "append_str(p, msg->callid->name.s, msg->callid->len);"
    },
    {
        "line": 232,
        "fullcodeline": "append_str(p, msg->cseq->name.s, msg->cseq->len);"
    },
    {
        "line": 235,
        "fullcodeline": "if (lump->flags&LUMP_RPL_HDR){"
    },
    {
        "line": 241,
        "fullcodeline": "append_str( p, server_header->s, server_header->len);"
    },
    {
        "line": 242,
        "fullcodeline": "append_str( p, CRLF, CRLF_LEN );"
    },
    {
        "line": 246,
        "fullcodeline": "append_str( p, CONTENT_LENGTH, CONTENT_LENGTH_LEN);"
    },
    {
        "line": 247,
        "fullcodeline": "append_str( p, content_len_buf, content_len_len );"
    },
    {
        "line": 248,
        "fullcodeline": "append_str( p, CRLF, CRLF_LEN );"
    },
    {
        "line": 254,
        "fullcodeline": "append_str( p, warning_buf, warning_len );"
    },
    {
        "line": 255,
        "fullcodeline": "append_str( p, CRLF, CRLF_LEN );"
    },
    {
        "line": 262,
        "fullcodeline": "append_str( p, body->text.s, body->text.len );"
    },
    {
        "line": 266,
        "fullcodeline": "LM_CRIT(\"diff len=%d p-buf=%d\\n\", len, (int)(p-buf));"
    },
    {
        "line": 273,
        "fullcodeline": "if (received_buf) pkg_free(received_buf);"
    },
    {
        "line": 274,
        "fullcodeline": "if (rport_buf) pkg_free(rport_buf);"
    },
    {
        "line": 278,
        "fullcodeline": "if (received_buf) pkg_free(received_buf);"
    },
    {
        "line": 279,
        "fullcodeline": "if (rport_buf) pkg_free(rport_buf);"
    },
    {
        "line": 35,
        "fullcodeline": "if ((rport_buf=rport_builder(msg, &rport_len))==0){"
    },
    {
        "line": 45,
        "fullcodeline": "if ((received_buf=received_builder(msg,&received_len))==0) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (new_tag && new_tag->len) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (hdr==msg->h_via1) len += received_len+rport_len;"
    },
    {
        "line": 75,
        "fullcodeline": "if (code>=180 && code<300)"
    },
    {
        "line": 91,
        "fullcodeline": "if (lump->flags&LUMP_RPL_BODY)"
    },
    {
        "line": 108,
        "fullcodeline": "len += CONTENT_LENGTH_LEN + 1/*0*/ + CRLF_LEN;"
    },
    {
        "line": 174,
        "fullcodeline": "for( hdr=hdr->sibling ; hdr ; hdr=hdr->sibling) {"
    },
    {
        "line": 184,
        "fullcodeline": "if (code>=180 && code<300)"
    },
    {
        "line": 189,
        "fullcodeline": "if (new_tag && new_tag->len){"
    },
    {
        "line": 236,
        "fullcodeline": "memcpy(p,lump->text.s,lump->text.len);"
    },
    {
        "line": 237,
        "fullcodeline": "p += lump->text.len;"
    },
    {
        "line": 36,
        "fullcodeline": "LM_ERR(\"rport_builder failed\\n\");"
    },
    {
        "line": 40,
        "fullcodeline": "len -= msg->via1->rport->size+1; /* include ';' */"
    },
    {
        "line": 46,
        "fullcodeline": "LM_ERR(\"received_builder failed\\n\");"
    },
    {
        "line": 76,
        "fullcodeline": "len += hdr->len;"
    },
    {
        "line": 92,
        "fullcodeline": "body = lump;"
    },
    {
        "line": 100,
        "fullcodeline": "if (warning_buf) len += warning_len + CRLF_LEN;"
    },
    {
        "line": 141,
        "fullcodeline": "i = msg->via1->host.s - msg->via1->hdr.s +"
    },
    {
        "line": 145,
        "fullcodeline": "append_str( p, hdr->name.s, i);"
    },
    {
        "line": 147,
        "fullcodeline": "append_str( p, received_buf, received_len);"
    },
    {
        "line": 176,
        "fullcodeline": "append_str( p, hdr->name.s,"
    },
    {
        "line": 178,
        "fullcodeline": "append_str( p, CRLF,CRLF_LEN);"
    },
    {
        "line": 185,
        "fullcodeline": "append_str(p, hdr->name.s, hdr->len);"
    },
    {
        "line": 101,
        "fullcodeline": "else LM_WARN(\"warning skipped -- too big\\n\");"
    },
    {
        "line": 169,
        "fullcodeline": "append_str( p, hdr->name.s+i ,"
    },
    {
        "line": 221,
        "fullcodeline": "append_str(p, hdr->name.s, hdr->len);"
    },
    {
        "line": 57,
        "fullcodeline": "to_tag=get_to(msg)->tag_value;"
    },
    {
        "line": 59,
        "fullcodeline": "len+=new_tag->len-to_tag.len;"
    },
    {
        "line": 142,
        "fullcodeline": "msg->via1->host.len + (msg->via1->port?"
    },
    {
        "line": 152,
        "fullcodeline": "append_str( p, hdr->name.s+i ,"
    },
    {
        "line": 155,
        "fullcodeline": "append_str(p, rport_buf, rport_len);"
    },
    {
        "line": 157,
        "fullcodeline": "append_str(p, msg->via1->rport->start+"
    },
    {
        "line": 170,
        "fullcodeline": "(hdr->body.s+hdr->body.len)-hdr->name.s-i);"
    },
    {
        "line": 192,
        "fullcodeline": "append_str( p, hdr->name.s, to_tag.s-hdr->name.s);"
    },
    {
        "line": 194,
        "fullcodeline": "bmark->to_tag_val.s=p;"
    },
    {
        "line": 195,
        "fullcodeline": "bmark->to_tag_val.len=new_tag->len;"
    },
    {
        "line": 196,
        "fullcodeline": "append_str( p, new_tag->s,new_tag->len);"
    },
    {
        "line": 198,
        "fullcodeline": "append_str( p, to_tag.s+to_tag.len,"
    },
    {
        "line": 61,
        "fullcodeline": "len+=new_tag->len+TOTAG_TOKEN_LEN/*\";tag=\"*/;"
    },
    {
        "line": 143,
        "fullcodeline": "msg->via1->port_str.len + 1 : 0);"
    },
    {
        "line": 153,
        "fullcodeline": "msg->via1->rport->start-hdr->name.s-1-i);"
    },
    {
        "line": 159,
        "fullcodeline": "hdr->body.s+hdr->body.len-"
    },
    {
        "line": 163,
        "fullcodeline": "append_str(p, rport_buf, rport_len);"
    },
    {
        "line": 164,
        "fullcodeline": "append_str( p, hdr->name.s+i ,"
    },
    {
        "line": 199,
        "fullcodeline": "hdr->name.s+hdr->len-(to_tag.s+to_tag.len));"
    },
    {
        "line": 202,
        "fullcodeline": "append_str( p, hdr->name.s, after_body-hdr->name.s);"
    },
    {
        "line": 203,
        "fullcodeline": "append_str(p, TOTAG_TOKEN, TOTAG_TOKEN_LEN);"
    },
    {
        "line": 204,
        "fullcodeline": "bmark->to_tag_val.s=p;"
    },
    {
        "line": 205,
        "fullcodeline": "bmark->to_tag_val.len=new_tag->len;"
    },
    {
        "line": 206,
        "fullcodeline": "append_str( p, new_tag->s,new_tag->len);"
    },
    {
        "line": 207,
        "fullcodeline": "append_str( p, after_body,"
    },
    {
        "line": 214,
        "fullcodeline": "bmark->to_tag_val.s=p+(totags-hdr->name.s);"
    },
    {
        "line": 165,
        "fullcodeline": "(hdr->body.s+hdr->body.len)-hdr->name.s-i);"
    },
    {
        "line": 208,
        "fullcodeline": "hdr->name.s+hdr->len-after_body);"
    },
    {
        "line": 212,
        "fullcodeline": "totags=((struct to_body*)(hdr->parsed))->tag_value.s;"
    },
    {
        "line": 218,
        "fullcodeline": "bmark->to_tag_val.s = NULL;"
    },
    {
        "line": 219,
        "fullcodeline": "bmark->to_tag_val.len = 0;"
    },
    {
        "line": 216,
        "fullcodeline": "((struct to_body*)(hdr->parsed))->tag_value.len;"
    }
]