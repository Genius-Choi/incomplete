[
    {
        "line": 9,
        "fullcodeline": "absl::ReaderMutexLock l(&ssl_ctx_mu_);"
    },
    {
        "line": 10,
        "fullcodeline": "ssl_ctx = ssl_ctx_;"
    },
    {
        "line": 13,
        "fullcodeline": "auto status_or_socket ="
    },
    {
        "line": 14,
        "fullcodeline": "SslSocket::create(std::move(ssl_ctx), InitialState::Client, transport_socket_options,"
    },
    {
        "line": 16,
        "fullcodeline": "if (status_or_socket.ok()) {"
    },
    {
        "line": 19,
        "fullcodeline": "return std::make_unique<ErrorSslSocket>(status_or_socket.status().message());"
    },
    {
        "line": 21,
        "fullcodeline": "ENVOY_LOG(debug, \"Create NotReadySslSocket\");"
    },
    {
        "line": 15,
        "fullcodeline": "config_->createHandshaker());"
    },
    {
        "line": 23,
        "fullcodeline": "return std::make_unique<NotReadySslSocket>();"
    },
    {
        "line": 17,
        "fullcodeline": "return std::move(status_or_socket.value());"
    }
]