[
    {
        "line": 2,
        "fullcodeline": "file_path = File.join(@root_folder, key)"
    },
    {
        "line": 3,
        "fullcodeline": "url_path, is_dir = file_path.sub(Rails.root.join('public').to_s, ''), File.directory?(file_path)"
    },
    {
        "line": 4,
        "fullcodeline": "res = {"
    },
    {
        "line": 14,
        "fullcodeline": "res['key'] = File.join(res['folder_path'], res['name'])"
    },
    {
        "line": 15,
        "fullcodeline": "res[\"thumb\"] = (is_private_uploader? ? '/admin/media/download_private_file?file=' + version_path(key).slice(1..-1) : version_path(res['url'])) if res['file_type'] == 'image' && File.extname(file_path).downcase != '.gif'"
    },
    {
        "line": 16,
        "fullcodeline": "if res['file_type'] == 'image'"
    },
    {
        "line": 17,
        "fullcodeline": "res[\"thumb\"].sub! '.svg', '.jpg'"
    },
    {
        "line": 18,
        "fullcodeline": "im = MiniMagick::Image.open(file_path)"
    },
    {
        "line": 5,
        "fullcodeline": "\"name\" => File.basename(key),"
    },
    {
        "line": 6,
        "fullcodeline": "\"folder_path\" => File.dirname(key),"
    },
    {
        "line": 7,
        "fullcodeline": "\"url\" => is_dir ? '' : (is_private_uploader? ? url_path.sub(\"#{@root_folder}/\", '') : File.join(@current_site.decorate.the_url(as_path: true, locale: false, skip_relative_url_root: true), url_path)),"
    },
    {
        "line": 8,
        "fullcodeline": "\"is_folder\" => is_dir,"
    },
    {
        "line": 9,
        "fullcodeline": "\"file_size\" => is_dir ? 0 : File.size(file_path).round(2),"
    },
    {
        "line": 10,
        "fullcodeline": "\"thumb\" => '',"
    },
    {
        "line": 11,
        "fullcodeline": "'file_type' => self.class.get_file_format(file_path),"
    },
    {
        "line": 12,
        "fullcodeline": "'dimension' => ''"
    },
    {
        "line": 19,
        "fullcodeline": "res['dimension'] = \"#{im[:width]}x#{im[:height]}\" rescue \"0x0\" # Malformed SVGs raise an exception here."
    }
]