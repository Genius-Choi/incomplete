[
    {
        "line": 12,
        "fullcodeline": "vi_lisp = (vim_strchr(p_cpo, CPO_LISP) != NULL);"
    },
    {
        "line": 15,
        "fullcodeline": "curwin->w_cursor.col = 0;"
    },
    {
        "line": 180,
        "fullcodeline": "curwin->w_cursor = realpos;"
    },
    {
        "line": 17,
        "fullcodeline": "if ((pos = findmatch(NULL, '(')) == NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "if (pos != NULL)"
    },
    {
        "line": 18,
        "fullcodeline": "pos = findmatch(NULL, '[');"
    },
    {
        "line": 30,
        "fullcodeline": "amount = -1;"
    },
    {
        "line": 31,
        "fullcodeline": "parencount = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "pos = findmatch(NULL, '[');"
    },
    {
        "line": 33,
        "fullcodeline": "while (--curwin->w_cursor.lnum >= pos->lnum)"
    },
    {
        "line": 82,
        "fullcodeline": "if (amount == -1)"
    },
    {
        "line": 178,
        "fullcodeline": "amount = 0;\t// no matching '(' or '[' found, use zero indent"
    },
    {
        "line": 23,
        "fullcodeline": "if (pos == NULL || LT_POSP(pos, &paren))"
    },
    {
        "line": 84,
        "fullcodeline": "curwin->w_cursor.lnum = pos->lnum;"
    },
    {
        "line": 85,
        "fullcodeline": "curwin->w_cursor.col = pos->col;"
    },
    {
        "line": 86,
        "fullcodeline": "col = pos->col;"
    },
    {
        "line": 88,
        "fullcodeline": "that = ml_get_curline();"
    },
    {
        "line": 24,
        "fullcodeline": "pos = &paren;"
    },
    {
        "line": 35,
        "fullcodeline": "if (linewhite(curwin->w_cursor.lnum))"
    },
    {
        "line": 37,
        "fullcodeline": "for (that = ml_get_curline(); *that != NUL; ++that)"
    },
    {
        "line": 75,
        "fullcodeline": "if (parencount == 0)"
    },
    {
        "line": 90,
        "fullcodeline": "if (vi_lisp && get_indent() == 0)"
    },
    {
        "line": 77,
        "fullcodeline": "amount = get_indent();"
    },
    {
        "line": 91,
        "fullcodeline": "amount = 2;"
    },
    {
        "line": 39,
        "fullcodeline": "if (*that == ';')"
    },
    {
        "line": 45,
        "fullcodeline": "if (*that == '\\\\')"
    },
    {
        "line": 51,
        "fullcodeline": "if (*that == '\"' && *(that + 1) != NUL)"
    },
    {
        "line": 70,
        "fullcodeline": "if (*that == '(' || *that == '[')"
    },
    {
        "line": 94,
        "fullcodeline": "char_u *line = that;"
    },
    {
        "line": 96,
        "fullcodeline": "amount = 0;"
    },
    {
        "line": 71,
        "fullcodeline": "++parencount;"
    },
    {
        "line": 97,
        "fullcodeline": "while (*that && col)"
    },
    {
        "line": 109,
        "fullcodeline": "if (!vi_lisp && (*that == '(' || *that == '[')"
    },
    {
        "line": 41,
        "fullcodeline": "while (*(that + 1) != NUL)"
    },
    {
        "line": 42,
        "fullcodeline": "++that;"
    },
    {
        "line": 47,
        "fullcodeline": "if (*(that + 1) != NUL)"
    },
    {
        "line": 53,
        "fullcodeline": "while (*++that && *that != '\"')"
    },
    {
        "line": 67,
        "fullcodeline": "if (*that == NUL)"
    },
    {
        "line": 99,
        "fullcodeline": "amount += lbr_chartabsize_adv(line, &that, (colnr_T)amount);"
    },
    {
        "line": 100,
        "fullcodeline": "col--;"
    },
    {
        "line": 110,
        "fullcodeline": "&& lisp_match(that + 1))"
    },
    {
        "line": 111,
        "fullcodeline": "amount += 2;"
    },
    {
        "line": 48,
        "fullcodeline": "++that;"
    },
    {
        "line": 72,
        "fullcodeline": "else if (*that == ')' || *that == ']')"
    },
    {
        "line": 114,
        "fullcodeline": "that++;"
    },
    {
        "line": 115,
        "fullcodeline": "amount++;"
    },
    {
        "line": 116,
        "fullcodeline": "firsttry = amount;"
    },
    {
        "line": 56,
        "fullcodeline": "if (*that == '\\\\')"
    },
    {
        "line": 73,
        "fullcodeline": "--parencount;"
    },
    {
        "line": 118,
        "fullcodeline": "while (VIM_ISWHITE(*that))"
    },
    {
        "line": 124,
        "fullcodeline": "if (*that && *that != ';') // not a comment line"
    },
    {
        "line": 120,
        "fullcodeline": "amount += lbr_chartabsize(line, that, (colnr_T)amount);"
    },
    {
        "line": 121,
        "fullcodeline": "++that;"
    },
    {
        "line": 131,
        "fullcodeline": "parencount = 0;"
    },
    {
        "line": 132,
        "fullcodeline": "quotecount = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "if (*++that == NUL)"
    },
    {
        "line": 60,
        "fullcodeline": "if (that[1] == NUL)"
    },
    {
        "line": 128,
        "fullcodeline": "if (!vi_lisp && *that != '(' && *that != '[')"
    },
    {
        "line": 134,
        "fullcodeline": "if (vi_lisp"
    },
    {
        "line": 164,
        "fullcodeline": "while (VIM_ISWHITE(*that))"
    },
    {
        "line": 170,
        "fullcodeline": "if (!*that || *that == ';')"
    },
    {
        "line": 62,
        "fullcodeline": "++that;"
    },
    {
        "line": 129,
        "fullcodeline": "firsttry++;"
    },
    {
        "line": 135,
        "fullcodeline": "|| (*that != '\"'"
    },
    {
        "line": 166,
        "fullcodeline": "amount += lbr_chartabsize("
    },
    {
        "line": 168,
        "fullcodeline": "that++;"
    },
    {
        "line": 171,
        "fullcodeline": "amount = firsttry;"
    },
    {
        "line": 138,
        "fullcodeline": "&& (*that < '0' || *that > '9')))"
    },
    {
        "line": 140,
        "fullcodeline": "while (*that"
    },
    {
        "line": 137,
        "fullcodeline": "&& *that != '#'"
    },
    {
        "line": 144,
        "fullcodeline": "&& (!((*that == '(' || *that == '[')"
    },
    {
        "line": 160,
        "fullcodeline": "amount += lbr_chartabsize_adv("
    },
    {
        "line": 167,
        "fullcodeline": "line, that, (colnr_T)amount);"
    },
    {
        "line": 136,
        "fullcodeline": "&& *that != '\\''"
    },
    {
        "line": 141,
        "fullcodeline": "&& (!VIM_ISWHITE(*that)"
    },
    {
        "line": 149,
        "fullcodeline": "if (*that == '\"')"
    },
    {
        "line": 151,
        "fullcodeline": "if ((*that == '(' || *that == '[')"
    },
    {
        "line": 154,
        "fullcodeline": "if ((*that == ')' || *that == ']')"
    },
    {
        "line": 157,
        "fullcodeline": "if (*that == '\\\\' && *(that+1) != NUL)"
    },
    {
        "line": 150,
        "fullcodeline": "quotecount = !quotecount;"
    },
    {
        "line": 152,
        "fullcodeline": "&& !quotecount)"
    },
    {
        "line": 153,
        "fullcodeline": "++parencount;"
    },
    {
        "line": 155,
        "fullcodeline": "&& !quotecount)"
    },
    {
        "line": 156,
        "fullcodeline": "--parencount;"
    },
    {
        "line": 158,
        "fullcodeline": "amount += lbr_chartabsize_adv("
    },
    {
        "line": 161,
        "fullcodeline": "line, &that, (colnr_T)amount);"
    },
    {
        "line": 146,
        "fullcodeline": "&& !parencount"
    },
    {
        "line": 145,
        "fullcodeline": "&& !quotecount"
    },
    {
        "line": 159,
        "fullcodeline": "line, &that, (colnr_T)amount);"
    }
]