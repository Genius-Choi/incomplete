[
    {
        "line": 14,
        "fullcodeline": "end = pnt + length;"
    },
    {
        "line": 16,
        "fullcodeline": "while (pnt < end) {"
    },
    {
        "line": 26,
        "fullcodeline": "hdr = (struct capability_header *)(pnt + 1);"
    },
    {
        "line": 54,
        "fullcodeline": "capability = lookup_msg(capcode_str, hdr->code, \"Unknown\");"
    },
    {
        "line": 177,
        "fullcodeline": "pnt += hdr->length + 3;"
    },
    {
        "line": 19,
        "fullcodeline": "if (pnt + 3 > end) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (action != CAPABILITY_ACTION_SET"
    },
    {
        "line": 38,
        "fullcodeline": "if (bgp_debug_neighbor_events(peer))"
    },
    {
        "line": 43,
        "fullcodeline": "if ((pnt + hdr->length + 3) > end) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (CHECK_FLAG(peer->flags, PEER_FLAG_OVERRIDE_CAPABILITY))"
    },
    {
        "line": 20,
        "fullcodeline": "zlog_err(\"%pBP: Capability length error\", peer);"
    },
    {
        "line": 21,
        "fullcodeline": "bgp_notify_send(peer->connection, BGP_NOTIFY_CEASE,"
    },
    {
        "line": 30,
        "fullcodeline": "&& action != CAPABILITY_ACTION_UNSET) {"
    },
    {
        "line": 31,
        "fullcodeline": "zlog_err(\"%pBP: Capability Action Value error %d\", peer,"
    },
    {
        "line": 33,
        "fullcodeline": "bgp_notify_send(peer->connection, BGP_NOTIFY_CEASE,"
    },
    {
        "line": 39,
        "fullcodeline": "zlog_debug(\"%pBP: CAPABILITY has action: %d, code: %u, length %u\","
    },
    {
        "line": 44,
        "fullcodeline": "zlog_err(\"%pBP: Capability length error\", peer);"
    },
    {
        "line": 45,
        "fullcodeline": "bgp_notify_send(peer->connection, BGP_NOTIFY_CEASE,"
    },
    {
        "line": 58,
        "fullcodeline": "bgp_dynamic_capability_software_version(pnt, action,"
    },
    {
        "line": 70,
        "fullcodeline": "memcpy(&mpc, pnt + 3, sizeof(struct capability_mp_data));"
    },
    {
        "line": 71,
        "fullcodeline": "pkt_afi = ntohs(mpc.afi);"
    },
    {
        "line": 72,
        "fullcodeline": "pkt_safi = mpc.safi;"
    },
    {
        "line": 122,
        "fullcodeline": "bgp_dynamic_capability_graceful_restart(pnt, action,"
    },
    {
        "line": 126,
        "fullcodeline": "bgp_dynamic_capability_llgr(pnt, action, hdr, peer);"
    },
    {
        "line": 129,
        "fullcodeline": "bgp_dynamic_capability_addpath(pnt, action, hdr, peer);"
    },
    {
        "line": 132,
        "fullcodeline": "bgp_dynamic_capability_paths_limit(pnt, action, hdr,"
    },
    {
        "line": 136,
        "fullcodeline": "bgp_dynamic_capability_orf(pnt, action, hdr, peer);"
    },
    {
        "line": 139,
        "fullcodeline": "bgp_dynamic_capability_fqdn(pnt, action, hdr, peer);"
    },
    {
        "line": 171,
        "fullcodeline": "flog_warn(EC_BGP_UNRECOGNIZED_CAPABILITY,"
    },
    {
        "line": 62,
        "fullcodeline": "if (hdr->length < sizeof(struct capability_mp_data)) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (bgp_map_afi_safi_iana2int(pkt_afi, pkt_safi, &afi,"
    },
    {
        "line": 86,
        "fullcodeline": "if (bgp_debug_neighbor_events(peer))"
    },
    {
        "line": 95,
        "fullcodeline": "if (action == CAPABILITY_ACTION_SET) {"
    },
    {
        "line": 113,
        "fullcodeline": "if ((hdr->length - 2) % 4) {"
    },
    {
        "line": 149,
        "fullcodeline": "if (hdr->length != CAPABILITY_CODE_ROLE_LEN) {"
    },
    {
        "line": 160,
        "fullcodeline": "if (action == CAPABILITY_ACTION_SET) {"
    },
    {
        "line": 63,
        "fullcodeline": "zlog_err(\"%pBP: Capability (%s) structure is not properly filled out, expected at least %zu bytes but header length specified is %d\","
    },
    {
        "line": 87,
        "fullcodeline": "zlog_debug(\"%pBP: CAPABILITY has %s %s CAP for afi/safi: %s/%s\","
    },
    {
        "line": 96,
        "fullcodeline": "peer->afc_recv[afi][safi] = 1;"
    },
    {
        "line": 114,
        "fullcodeline": "zlog_err(\"%pBP: Received invalid Graceful-Restart capability length %d\","
    },
    {
        "line": 116,
        "fullcodeline": "bgp_notify_send(peer->connection,"
    },
    {
        "line": 150,
        "fullcodeline": "zlog_err(\"%pBP: Capability (%s) length error\","
    },
    {
        "line": 152,
        "fullcodeline": "bgp_notify_send(peer->connection,"
    },
    {
        "line": 161,
        "fullcodeline": "SET_FLAG(peer->cap, PEER_CAP_ROLE_RCV);"
    },
    {
        "line": 162,
        "fullcodeline": "memcpy(&role, pnt + 3, sizeof(role));"
    },
    {
        "line": 164,
        "fullcodeline": "peer->remote_role = role;"
    },
    {
        "line": 77,
        "fullcodeline": "if (bgp_debug_neighbor_events(peer))"
    },
    {
        "line": 89,
        "fullcodeline": "action == CAPABILITY_ACTION_SET"
    },
    {
        "line": 92,
        "fullcodeline": "capability, iana_afi2str(pkt_afi),"
    },
    {
        "line": 93,
        "fullcodeline": "iana_safi2str(pkt_safi));"
    },
    {
        "line": 103,
        "fullcodeline": "peer->afc_recv[afi][safi] = 0;"
    },
    {
        "line": 104,
        "fullcodeline": "peer->afc_nego[afi][safi] = 0;"
    },
    {
        "line": 166,
        "fullcodeline": "UNSET_FLAG(peer->cap, PEER_CAP_ROLE_RCV);"
    },
    {
        "line": 167,
        "fullcodeline": "peer->remote_role = ROLE_UNDEFINED;"
    },
    {
        "line": 78,
        "fullcodeline": "zlog_debug(\"%pBP: Dynamic Capability %s afi/safi invalid (%s/%s)\","
    },
    {
        "line": 98,
        "fullcodeline": "peer->afc_nego[afi][safi] = 1;"
    },
    {
        "line": 99,
        "fullcodeline": "bgp_announce_route(peer, afi, safi,"
    },
    {
        "line": 106,
        "fullcodeline": "if (peer_active_nego(peer))"
    },
    {
        "line": 80,
        "fullcodeline": "iana_afi2str(pkt_afi),"
    },
    {
        "line": 81,
        "fullcodeline": "iana_safi2str(pkt_safi));"
    },
    {
        "line": 107,
        "fullcodeline": "bgp_clear_route(peer, afi, safi);"
    }
]