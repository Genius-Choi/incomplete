[
    {
        "line": 2,
        "fullcodeline": "const char *quotestr = \"`\";"
    },
    {
        "line": 3,
        "fullcodeline": "const char *tick = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "char *arroba = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int i, ret = 0, pipefd;"
    },
    {
        "line": 7,
        "fullcodeline": "bool usemyblock = false;"
    },
    {
        "line": 8,
        "fullcodeline": "int scr_html = -1;"
    },
    {
        "line": 9,
        "fullcodeline": "int scr_color = -1;"
    },
    {
        "line": 10,
        "fullcodeline": "bool eos = false;"
    },
    {
        "line": 11,
        "fullcodeline": "bool haveQuote = false;"
    },
    {
        "line": 16,
        "fullcodeline": "cmd = r_str_trim_head_tail (cmd);"
    },
    {
        "line": 170,
        "fullcodeline": "ptr = (char *)r_str_lastbut (cmd, '|', quotestr);"
    },
    {
        "line": 208,
        "fullcodeline": "ptr = (char *)r_str_lastbut (cmd, '&', quotestr);"
    },
    {
        "line": 229,
        "fullcodeline": "core->oobi = NULL;"
    },
    {
        "line": 231,
        "fullcodeline": "ptr = strstr (cmd, \"?*\");"
    },
    {
        "line": 316,
        "fullcodeline": "ptr = strchr (cmd, '>');"
    },
    {
        "line": 387,
        "fullcodeline": "ptr = strchr (cmd, '`');"
    },
    {
        "line": 440,
        "fullcodeline": "core->fixedblock = false;"
    },
    {
        "line": 460,
        "fullcodeline": "core->tmpseek = ptr? true: false;"
    },
    {
        "line": 744,
        "fullcodeline": "rc = cmd? r_cmd_call (core->rcmd, r_str_trim_head (cmd)): false;"
    },
    {
        "line": 756,
        "fullcodeline": "rc = -1;"
    },
    {
        "line": 13,
        "fullcodeline": "if (!cmd) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (*cmd != '#') {"
    },
    {
        "line": 151,
        "fullcodeline": "if (*cmd != '#') {"
    },
    {
        "line": 210,
        "fullcodeline": "while (ptr && ptr[1] == '&') {"
    },
    {
        "line": 446,
        "fullcodeline": "if (*cmd != '.') {"
    },
    {
        "line": 746,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 750,
        "fullcodeline": "if (scr_color != -1) {"
    },
    {
        "line": 142,
        "fullcodeline": "ptr = (char *)r_str_lastbut (cmd, '#', quotestr);"
    },
    {
        "line": 152,
        "fullcodeline": "ptr = (char *)r_str_lastbut (cmd, ';', quotestr);"
    },
    {
        "line": 172,
        "fullcodeline": "char *ptr2 = strchr (cmd, '`');"
    },
    {
        "line": 211,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 212,
        "fullcodeline": "ret = r_cmd_call (core->rcmd, cmd);"
    },
    {
        "line": 224,
        "fullcodeline": "ptr = strchr (cmd, '&');"
    },
    {
        "line": 318,
        "fullcodeline": "int fdn = 1;"
    },
    {
        "line": 319,
        "fullcodeline": "int pipecolor = r_config_get_i (core->config, \"scr.pipecolor\");"
    },
    {
        "line": 321,
        "fullcodeline": "int ocolor = r_config_get_i (core->config, \"scr.color\");"
    },
    {
        "line": 322,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 323,
        "fullcodeline": "str = r_str_trim_head_tail (ptr + 1 + (ptr[1] == '>'));"
    },
    {
        "line": 390,
        "fullcodeline": "int oneline = 1;"
    },
    {
        "line": 396,
        "fullcodeline": "ptr2 = strchr (ptr + 1, '`');"
    },
    {
        "line": 442,
        "fullcodeline": "if (r_str_endswith (cmd, \"~?\") && cmd[2] == '\\0') {"
    },
    {
        "line": 447,
        "fullcodeline": "r_cons_grep_parsecmd (cmd, quotestr);"
    },
    {
        "line": 451,
        "fullcodeline": "if (*cmd!= '(' && *cmd != '\"') {"
    },
    {
        "line": 452,
        "fullcodeline": "ptr = strchr (cmd, '@');"
    },
    {
        "line": 463,
        "fullcodeline": "char *f, *ptr2 = strchr (ptr + 1, '!');"
    },
    {
        "line": 464,
        "fullcodeline": "ut64 addr = UT64_MAX;"
    },
    {
        "line": 465,
        "fullcodeline": "const char *tmpbits = NULL;"
    },
    {
        "line": 467,
        "fullcodeline": "ut64 tmpbsz = core->blocksize;"
    },
    {
        "line": 468,
        "fullcodeline": "char *tmpeval = NULL;"
    },
    {
        "line": 469,
        "fullcodeline": "ut64 tmpoff = core->offset;"
    },
    {
        "line": 470,
        "fullcodeline": "char *tmpasm = NULL;"
    },
    {
        "line": 471,
        "fullcodeline": "int tmpfd = -1;"
    },
    {
        "line": 475,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 484,
        "fullcodeline": "arroba = (ptr[0] && ptr[1] && ptr[2])?"
    },
    {
        "line": 606,
        "fullcodeline": "ptr = r_str_trim_head (ptr + 1);"
    },
    {
        "line": 607,
        "fullcodeline": "ptr--;"
    },
    {
        "line": 609,
        "fullcodeline": "cmd = r_str_clean (cmd);"
    },
    {
        "line": 627,
        "fullcodeline": "offstr = r_str_trim_head (ptr + 1);"
    },
    {
        "line": 629,
        "fullcodeline": "addr = r_num_math (core->num, offstr);"
    },
    {
        "line": 738,
        "fullcodeline": "r_core_seek (core, tmpoff, 1);"
    },
    {
        "line": 740,
        "fullcodeline": "rc = ret;"
    },
    {
        "line": 748,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", scr_html);"
    },
    {
        "line": 21,
        "fullcodeline": "if (cmd[1] == '\"') { /* interpret */"
    },
    {
        "line": 134,
        "fullcodeline": "if (cmd[1] != '*') {"
    },
    {
        "line": 153,
        "fullcodeline": "if (colon && ptr) {"
    },
    {
        "line": 213,
        "fullcodeline": "if (ret == -1) {"
    },
    {
        "line": 223,
        "fullcodeline": "for (cmd = ptr + 2; cmd && *cmd == ' '; cmd++);"
    },
    {
        "line": 233,
        "fullcodeline": "char *prech = ptr - 1;"
    },
    {
        "line": 324,
        "fullcodeline": "if (!*str) {"
    },
    {
        "line": 351,
        "fullcodeline": "if (fdn > 0) {"
    },
    {
        "line": 377,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 380,
        "fullcodeline": "if (scr_color != -1) {"
    },
    {
        "line": 391,
        "fullcodeline": "if (ptr[1] == '`') {"
    },
    {
        "line": 476,
        "fullcodeline": "for (ptr++; *ptr == ' '; ptr++) {"
    },
    {
        "line": 479,
        "fullcodeline": "if (*ptr && ptr[1] == ':') {"
    },
    {
        "line": 490,
        "fullcodeline": "if (ptr[1] == '?') {"
    },
    {
        "line": 647,
        "fullcodeline": "if (ptr[1] == '@') {"
    },
    {
        "line": 727,
        "fullcodeline": "if (tmpfd != -1) {"
    },
    {
        "line": 27,
        "fullcodeline": "int pipefd = -1;"
    },
    {
        "line": 28,
        "fullcodeline": "ut64 oseek = UT64_MAX;"
    },
    {
        "line": 91,
        "fullcodeline": "line = strdup (cmd);"
    },
    {
        "line": 92,
        "fullcodeline": "line = r_str_replace (line, \"\\\\\\\"\", \"\\\"\", true);"
    },
    {
        "line": 143,
        "fullcodeline": "if (ptr && (ptr[1] == ' ' || ptr[1] == '\\t')) {"
    },
    {
        "line": 144,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 155,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 159,
        "fullcodeline": "cmd = ptr + 1;"
    },
    {
        "line": 160,
        "fullcodeline": "ret = r_core_cmd_subst (core, cmd);"
    },
    {
        "line": 173,
        "fullcodeline": "if (!ptr2 || (ptr2 && ptr2 > ptr)) {"
    },
    {
        "line": 235,
        "fullcodeline": "ptr[1] = 0;"
    },
    {
        "line": 331,
        "fullcodeline": "if (ptr > (cmd + 1) && ISWHITECHAR (ptr[-2])) {"
    },
    {
        "line": 346,
        "fullcodeline": "if (!strcmp (str, \"-\")) {"
    },
    {
        "line": 348,
        "fullcodeline": "str = r_file_temp (\"dumpedit\");"
    },
    {
        "line": 349,
        "fullcodeline": "r_config_set (core->config, \"scr.color\", \"false\");"
    },
    {
        "line": 352,
        "fullcodeline": "pipefd = r_cons_pipe_open (str, fdn, ptr[1] == '>');"
    },
    {
        "line": 364,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", ocolor);"
    },
    {
        "line": 367,
        "fullcodeline": "const char *editor = r_config_get (core->config, \"cfg.editor\");"
    },
    {
        "line": 374,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", ocolor);"
    },
    {
        "line": 378,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", scr_html);"
    },
    {
        "line": 392,
        "fullcodeline": "memmove (ptr, ptr + 1, strlen (ptr));"
    },
    {
        "line": 393,
        "fullcodeline": "oneline = 0;"
    },
    {
        "line": 453,
        "fullcodeline": "if (ptr == cmd + 1 && *cmd == '?') {"
    },
    {
        "line": 485,
        "fullcodeline": "strchr (ptr + 2, '@'): NULL;"
    },
    {
        "line": 488,
        "fullcodeline": "*arroba = 0;"
    },
    {
        "line": 491,
        "fullcodeline": "helpCmdAt (core);"
    },
    {
        "line": 630,
        "fullcodeline": "if (isalpha ((unsigned char)ptr[1]) && !addr) {"
    },
    {
        "line": 643,
        "fullcodeline": "ptr = arroba;"
    },
    {
        "line": 644,
        "fullcodeline": "arroba = NULL;"
    },
    {
        "line": 721,
        "fullcodeline": "r_core_block_size (core, tmpbsz);"
    },
    {
        "line": 724,
        "fullcodeline": "r_config_set (core->config, \"asm.arch\", tmpasm);"
    },
    {
        "line": 728,
        "fullcodeline": "r_io_raise (core->io, tmpfd);"
    },
    {
        "line": 731,
        "fullcodeline": "r_config_set (core->config, \"asm.bits\", tmpbits);"
    },
    {
        "line": 735,
        "fullcodeline": "r_core_cmd0 (core, tmpeval);"
    },
    {
        "line": 22,
        "fullcodeline": "return r_cmd_call (core->rcmd, cmd);"
    },
    {
        "line": 30,
        "fullcodeline": "haveQuote = *cmd == '\"';"
    },
    {
        "line": 103,
        "fullcodeline": "if (oseek != UT64_MAX) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (pipefd != -1) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (!p) {"
    },
    {
        "line": 135,
        "fullcodeline": "return r_cmd_call (core->rcmd, cmd);"
    },
    {
        "line": 215,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 218,
        "fullcodeline": "if (scr_color != -1) {"
    },
    {
        "line": 332,
        "fullcodeline": "char *fdnum = ptr - 1;"
    },
    {
        "line": 333,
        "fullcodeline": "if (*fdnum == 'H') { // \"H>\""
    },
    {
        "line": 353,
        "fullcodeline": "if (pipefd != -1) {"
    },
    {
        "line": 368,
        "fullcodeline": "if (editor && *editor) {"
    },
    {
        "line": 482,
        "fullcodeline": "ptr--;"
    },
    {
        "line": 636,
        "fullcodeline": "char ch = *offstr;"
    },
    {
        "line": 649,
        "fullcodeline": "if (ptr[2] == '@') {"
    },
    {
        "line": 659,
        "fullcodeline": "const char *fromvars[] = { \"anal.from\", \"diff.from\", \"graph.from\","
    },
    {
        "line": 661,
        "fullcodeline": "const char *tovars[] = { \"anal.to\", \"diff.to\", \"graph.to\","
    },
    {
        "line": 663,
        "fullcodeline": "ut64 curfrom[R_ARRAY_SIZE (fromvars) - 1], curto[R_ARRAY_SIZE (tovars) - 1];"
    },
    {
        "line": 33,
        "fullcodeline": "cmd++;"
    },
    {
        "line": 34,
        "fullcodeline": "p = find_eoq (cmd + 1);"
    },
    {
        "line": 93,
        "fullcodeline": "if (p && *p && p[1] == '|') {"
    },
    {
        "line": 94,
        "fullcodeline": "str = p + 2;"
    },
    {
        "line": 98,
        "fullcodeline": "r_core_cmd_pipe (core, cmd, str);"
    },
    {
        "line": 104,
        "fullcodeline": "r_core_seek (core, oseek, 1);"
    },
    {
        "line": 156,
        "fullcodeline": "if (r_core_cmd_subst (core, cmd) == -1) {"
    },
    {
        "line": 174,
        "fullcodeline": "if (!tick || (tick && tick > ptr)) {"
    },
    {
        "line": 175,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 176,
        "fullcodeline": "cmd = r_str_clean (cmd);"
    },
    {
        "line": 216,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", scr_html);"
    },
    {
        "line": 236,
        "fullcodeline": "if (*cmd != '#' && strlen (cmd) < 5) {"
    },
    {
        "line": 238,
        "fullcodeline": "recursive_help (core, cmd);"
    },
    {
        "line": 334,
        "fullcodeline": "scr_html = r_config_get_i (core->config, \"scr.html\");"
    },
    {
        "line": 335,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", true);"
    },
    {
        "line": 336,
        "fullcodeline": "pipecolor = true;"
    },
    {
        "line": 357,
        "fullcodeline": "ret = r_core_cmd_subst (core, cmd);"
    },
    {
        "line": 369,
        "fullcodeline": "r_sys_cmdf (\"%s '%s'\", editor, str);"
    },
    {
        "line": 370,
        "fullcodeline": "r_file_rm (str);"
    },
    {
        "line": 399,
        "fullcodeline": "} else if (!ptr2) {"
    },
    {
        "line": 492,
        "fullcodeline": "} else if (ptr[0] && ptr[1] == ':' && ptr[2]) {"
    },
    {
        "line": 611,
        "fullcodeline": "if (strlen (ptr + 1) == 13 && strlen (ptr2 + 1) == 6 &&"
    },
    {
        "line": 613,
        "fullcodeline": "!memcmp (ptr2 + 1, \"0x\", 2)) {"
    },
    {
        "line": 631,
        "fullcodeline": "if (!r_flag_get (core->flags, ptr + 1)) {"
    },
    {
        "line": 650,
        "fullcodeline": "char *rule = ptr + 3;"
    },
    {
        "line": 652,
        "fullcodeline": "ret = r_core_cmd_foreach3 (core, cmd, rule);"
    },
    {
        "line": 40,
        "fullcodeline": "if (!*p) {"
    },
    {
        "line": 44,
        "fullcodeline": "char *sc = strchr (cmd, ';');"
    },
    {
        "line": 48,
        "fullcodeline": "r_core_cmd0 (core, cmd);"
    },
    {
        "line": 52,
        "fullcodeline": "cmd = sc + 1;"
    },
    {
        "line": 57,
        "fullcodeline": "if (p[0] == '@') {"
    },
    {
        "line": 95,
        "fullcodeline": "while (IS_WHITESPACE (*str)) {"
    },
    {
        "line": 100,
        "fullcodeline": "r_cmd_call (core->rcmd, line);"
    },
    {
        "line": 118,
        "fullcodeline": "if (*p == ';') {"
    },
    {
        "line": 129,
        "fullcodeline": "cmd = p + 1;"
    },
    {
        "line": 157,
        "fullcodeline": "return -1;"
    },
    {
        "line": 241,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 244,
        "fullcodeline": "if (scr_color != -1) {"
    },
    {
        "line": 354,
        "fullcodeline": "if (!pipecolor) {"
    },
    {
        "line": 602,
        "fullcodeline": "*ptr = '@';"
    },
    {
        "line": 612,
        "fullcodeline": "!memcmp (ptr + 1, \"0x\", 2) &&"
    },
    {
        "line": 637,
        "fullcodeline": "if (ch == '-' || ch == '+') {"
    },
    {
        "line": 638,
        "fullcodeline": "addr = core->offset + addr;"
    },
    {
        "line": 651,
        "fullcodeline": "while (*rule && *rule == ' ') rule++;"
    },
    {
        "line": 654,
        "fullcodeline": "ret = r_core_cmd_foreach (core, cmd, ptr + 2);"
    },
    {
        "line": 666,
        "fullcodeline": "if (ptr[1] == '.' && ptr[2] == '.') {"
    },
    {
        "line": 667,
        "fullcodeline": "char *range = ptr + 3;"
    },
    {
        "line": 668,
        "fullcodeline": "char *p = strchr (range, ' ');"
    },
    {
        "line": 675,
        "fullcodeline": "*p = '\\x00';"
    },
    {
        "line": 676,
        "fullcodeline": "ut64 from = r_num_math (core->num, range);"
    },
    {
        "line": 677,
        "fullcodeline": "ut64 to = r_num_math (core->num, p + 1);"
    },
    {
        "line": 698,
        "fullcodeline": "ret = r_cmd_call (core->rcmd, r_str_trim_head (cmd));"
    },
    {
        "line": 35,
        "fullcodeline": "if (!p || !*p) {"
    },
    {
        "line": 39,
        "fullcodeline": "*p++ = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "if (!sc) {"
    },
    {
        "line": 58,
        "fullcodeline": "p--;"
    },
    {
        "line": 60,
        "fullcodeline": "while (p[1] == ';' || IS_WHITESPACE (p[1])) {"
    },
    {
        "line": 61,
        "fullcodeline": "p++;"
    },
    {
        "line": 63,
        "fullcodeline": "if (p[1] == '@' || (p[1] && p[2] == '@')) {"
    },
    {
        "line": 64,
        "fullcodeline": "char *q = strchr (p + 1, '\"');"
    },
    {
        "line": 69,
        "fullcodeline": "oseek = core->offset;"
    },
    {
        "line": 70,
        "fullcodeline": "r_core_seek (core,"
    },
    {
        "line": 79,
        "fullcodeline": "if (p && *p && p[1] == '>') {"
    },
    {
        "line": 80,
        "fullcodeline": "str = p + 2;"
    },
    {
        "line": 88,
        "fullcodeline": "pipefd = r_cons_pipe_open (str, 1, p[2] == '>');"
    },
    {
        "line": 96,
        "fullcodeline": "str++;"
    },
    {
        "line": 119,
        "fullcodeline": "cmd = p + 1;"
    },
    {
        "line": 177,
        "fullcodeline": "if (!strcmp (ptr + 1, \"?\")) { // \"|?\""
    },
    {
        "line": 242,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", scr_html);"
    },
    {
        "line": 339,
        "fullcodeline": "if (IS_DIGIT(*fdnum)) {"
    },
    {
        "line": 355,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", 0);"
    },
    {
        "line": 403,
        "fullcodeline": "int value = core->num->value;"
    },
    {
        "line": 404,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 405,
        "fullcodeline": "*ptr2 = '\\0';"
    },
    {
        "line": 427,
        "fullcodeline": "str = r_str_append (str, ptr2 + 1);"
    },
    {
        "line": 428,
        "fullcodeline": "cmd = r_str_append (strdup (cmd), str);"
    },
    {
        "line": 430,
        "fullcodeline": "ret = r_core_cmd_subst (core, cmd);"
    },
    {
        "line": 669,
        "fullcodeline": "if (!p) {"
    },
    {
        "line": 695,
        "fullcodeline": "if (addr != UT64_MAX) {"
    },
    {
        "line": 46,
        "fullcodeline": "*sc = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "haveQuote = q != NULL;"
    },
    {
        "line": 71,
        "fullcodeline": "r_num_math (core->num, p + 2), 1);"
    },
    {
        "line": 81,
        "fullcodeline": "while (*str == '>') {"
    },
    {
        "line": 84,
        "fullcodeline": "while (IS_WHITESPACE (*str)) {"
    },
    {
        "line": 340,
        "fullcodeline": "fdn = *fdnum - '0';"
    },
    {
        "line": 406,
        "fullcodeline": "if (ptr[1] == '!') {"
    },
    {
        "line": 411,
        "fullcodeline": "if (!str) {"
    },
    {
        "line": 420,
        "fullcodeline": "if (oneline && str) {"
    },
    {
        "line": 432,
        "fullcodeline": "if (scr_html != -1) {"
    },
    {
        "line": 496,
        "fullcodeline": "f = r_file_slurp (ptr + 2, &sz);"
    },
    {
        "line": 533,
        "fullcodeline": "tmpbits = strdup (r_config_get (core->config, \"asm.bits\"));"
    },
    {
        "line": 534,
        "fullcodeline": "r_config_set_i (core->config, \"asm.bits\","
    },
    {
        "line": 546,
        "fullcodeline": "tmpeval = parse_tmp_evals (core, ptr + 2);"
    },
    {
        "line": 595,
        "fullcodeline": "len = strlen (ptr + 2);"
    },
    {
        "line": 596,
        "fullcodeline": "r_core_block_size (core, len);"
    },
    {
        "line": 597,
        "fullcodeline": "memcpy (core->block, ptr + 2, len);"
    },
    {
        "line": 615,
        "fullcodeline": "} else if (strlen (ptr + 1) == 9 && strlen (ptr2 + 1) == 4) {"
    },
    {
        "line": 679,
        "fullcodeline": "for (i = 0; fromvars[i]; i++) {"
    },
    {
        "line": 680,
        "fullcodeline": "curfrom[i] = r_config_get_i (core->config, fromvars[i]);"
    },
    {
        "line": 682,
        "fullcodeline": "for (i = 0; tovars[i]; i++) {"
    },
    {
        "line": 683,
        "fullcodeline": "curto[i] = r_config_get_i (core->config, tovars[i]);"
    },
    {
        "line": 686,
        "fullcodeline": "for (i = 0; fromvars[i]; i++) {"
    },
    {
        "line": 687,
        "fullcodeline": "r_config_set_i (core->config, fromvars[i], from);"
    },
    {
        "line": 689,
        "fullcodeline": "for (i = 0; tovars[i]; i++) {"
    },
    {
        "line": 690,
        "fullcodeline": "r_config_set_i (core->config, tovars[i], to);"
    },
    {
        "line": 696,
        "fullcodeline": "core->offset = addr;"
    },
    {
        "line": 700,
        "fullcodeline": "if (addr != UT64_MAX) {"
    },
    {
        "line": 711,
        "fullcodeline": "for (i = 0; fromvars[i]; i++) {"
    },
    {
        "line": 712,
        "fullcodeline": "r_config_set_i (core->config, fromvars[i], curfrom[i]);"
    },
    {
        "line": 714,
        "fullcodeline": "for (i = 0; tovars[i]; i++) {"
    },
    {
        "line": 715,
        "fullcodeline": "r_config_set_i (core->config, tovars[i], curto[i]);"
    },
    {
        "line": 66,
        "fullcodeline": "*q = 0;"
    },
    {
        "line": 73,
        "fullcodeline": "*p = '\"';"
    },
    {
        "line": 74,
        "fullcodeline": "p = q;"
    },
    {
        "line": 82,
        "fullcodeline": "str++;"
    },
    {
        "line": 85,
        "fullcodeline": "str++;"
    },
    {
        "line": 121,
        "fullcodeline": "if (*p == '\"') {"
    },
    {
        "line": 407,
        "fullcodeline": "str = r_core_cmd_str_pipe (core, ptr + 1);"
    },
    {
        "line": 415,
        "fullcodeline": "if (*str == '|' || *str == '*') {"
    },
    {
        "line": 513,
        "fullcodeline": "if (ptr[1] == ':') {"
    },
    {
        "line": 535,
        "fullcodeline": "r_num_math (core->num, ptr + 2));"
    },
    {
        "line": 539,
        "fullcodeline": "ut64 addr = r_num_math (core->num, ptr + 2);"
    },
    {
        "line": 549,
        "fullcodeline": "if (ptr[1] == ':') {"
    },
    {
        "line": 566,
        "fullcodeline": "char *out = sdb_querys (core->sdb, NULL, 0, ptr + ((ptr[1])? 2: 1));"
    },
    {
        "line": 574,
        "fullcodeline": "if (ptr[1] == ':') {"
    },
    {
        "line": 580,
        "fullcodeline": "if (ptr[1] == ':') {"
    },
    {
        "line": 618,
        "fullcodeline": "*ptr2 = '\\0';"
    },
    {
        "line": 622,
        "fullcodeline": "r_core_block_size ("
    },
    {
        "line": 76,
        "fullcodeline": "p = strchr (p + 1, ';');"
    },
    {
        "line": 122,
        "fullcodeline": "cmd = p + 1;"
    },
    {
        "line": 184,
        "fullcodeline": "} else if (!strcmp (ptr + 1, \"H\")) { // \"|H\""
    },
    {
        "line": 185,
        "fullcodeline": "scr_html = r_config_get_i (core->config, \"scr.html\");"
    },
    {
        "line": 186,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", true);"
    },
    {
        "line": 409,
        "fullcodeline": "str = r_core_cmd_str (core, ptr + 1);"
    },
    {
        "line": 498,
        "fullcodeline": "buf = malloc (sz);"
    },
    {
        "line": 515,
        "fullcodeline": "char *mander = strdup (ptr + 2);"
    },
    {
        "line": 528,
        "fullcodeline": "r_core_seek (core, regval, 1);"
    },
    {
        "line": 550,
        "fullcodeline": "buf = malloc (strlen (ptr + 2) + 1);"
    },
    {
        "line": 575,
        "fullcodeline": "tmpfd = core->io->raised;"
    },
    {
        "line": 576,
        "fullcodeline": "r_io_raise (core->io, atoi (ptr + 2));"
    },
    {
        "line": 581,
        "fullcodeline": "char *q = strchr (ptr + 2, ':');"
    },
    {
        "line": 582,
        "fullcodeline": "tmpasm = strdup (r_config_get (core->config, \"asm.arch\"));"
    },
    {
        "line": 588,
        "fullcodeline": "r_config_set (core->config, \"asm.arch\", ptr + 2);"
    },
    {
        "line": 619,
        "fullcodeline": "if (!ptr2[1]) {"
    },
    {
        "line": 623,
        "fullcodeline": "core, r_num_math (core->num, ptr2 + 1));"
    },
    {
        "line": 124,
        "fullcodeline": "*p = '\"';"
    },
    {
        "line": 125,
        "fullcodeline": "cmd = p;"
    },
    {
        "line": 421,
        "fullcodeline": "for (i = 0; str[i]; i++) {"
    },
    {
        "line": 516,
        "fullcodeline": "char *sep = findSeparator (mander);"
    },
    {
        "line": 541,
        "fullcodeline": "r_core_cmdf (core, \"so %s\", ptr + 2);"
    },
    {
        "line": 568,
        "fullcodeline": "r_core_seek (core, r_num_math (core->num, out), 1);"
    },
    {
        "line": 701,
        "fullcodeline": "if (!ptr[1] || r_core_seek (core, addr, 1)) {"
    },
    {
        "line": 702,
        "fullcodeline": "r_core_block_read (core);"
    },
    {
        "line": 703,
        "fullcodeline": "ret = r_cmd_call (core->rcmd, r_str_trim_head (cmd));"
    },
    {
        "line": 422,
        "fullcodeline": "if (str[i] == '\\n') {"
    },
    {
        "line": 501,
        "fullcodeline": "core->block = buf;"
    },
    {
        "line": 502,
        "fullcodeline": "core->blocksize = sz;"
    },
    {
        "line": 503,
        "fullcodeline": "memcpy (core->block, f, sz);"
    },
    {
        "line": 518,
        "fullcodeline": "char ch = *sep;"
    },
    {
        "line": 521,
        "fullcodeline": "*sep = ch;"
    },
    {
        "line": 523,
        "fullcodeline": "regval = r_num_math (core->num, numexpr);"
    },
    {
        "line": 524,
        "fullcodeline": "free (numexpr);"
    },
    {
        "line": 552,
        "fullcodeline": "len = r_hex_str2bin (ptr + 2, buf);"
    },
    {
        "line": 553,
        "fullcodeline": "r_core_block_size (core, R_ABS(len));"
    },
    {
        "line": 554,
        "fullcodeline": "memcpy (core->block, buf, core->blocksize);"
    },
    {
        "line": 555,
        "fullcodeline": "core->fixedblock = true;"
    },
    {
        "line": 585,
        "fullcodeline": "tmpbits = r_config_get (core->config, \"asm.bits\");"
    },
    {
        "line": 586,
        "fullcodeline": "r_config_set (core->config, \"asm.bits\", q);"
    },
    {
        "line": 705,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 188,
        "fullcodeline": "int value = core->num->value;"
    },
    {
        "line": 423,
        "fullcodeline": "str[i] = ' ';"
    },
    {
        "line": 505,
        "fullcodeline": "eprintf (\"cannot alloc %d\", sz);"
    },
    {
        "line": 520,
        "fullcodeline": "regval = r_debug_reg_get (core->dbg, mander);"
    },
    {
        "line": 526,
        "fullcodeline": "regval = r_debug_reg_get (core->dbg, ptr + 2);"
    },
    {
        "line": 197,
        "fullcodeline": "scr_html = r_config_get_i (core->config, \"scr.html\");"
    },
    {
        "line": 198,
        "fullcodeline": "r_config_set_i (core->config, \"scr.html\", 0);"
    },
    {
        "line": 199,
        "fullcodeline": "scr_color = r_config_get_i (core->config, \"scr.color\");"
    },
    {
        "line": 200,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", false);"
    },
    {
        "line": 584,
        "fullcodeline": "*q++ = 0;"
    }
]