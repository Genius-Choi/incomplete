[
    {
        "line": 7,
        "fullcodeline": "session->rd_data = kzalloc(req->rd_size, GFP_KERNEL);"
    },
    {
        "line": 15,
        "fullcodeline": "session->rd_size = req->rd_size;"
    },
    {
        "line": 17,
        "fullcodeline": "hid = hid_allocate_device();"
    },
    {
        "line": 23,
        "fullcodeline": "session->hid = hid;"
    },
    {
        "line": 25,
        "fullcodeline": "hid->driver_data = session;"
    },
    {
        "line": 27,
        "fullcodeline": "hid->bus     = BUS_BLUETOOTH;"
    },
    {
        "line": 28,
        "fullcodeline": "hid->vendor  = req->vendor;"
    },
    {
        "line": 29,
        "fullcodeline": "hid->product = req->product;"
    },
    {
        "line": 30,
        "fullcodeline": "hid->version = req->version;"
    },
    {
        "line": 31,
        "fullcodeline": "hid->country = req->country;"
    },
    {
        "line": 33,
        "fullcodeline": "strncpy(hid->name, req->name, sizeof(req->name) - 1);"
    },
    {
        "line": 35,
        "fullcodeline": "snprintf(hid->phys, sizeof(hid->phys), \"%pMR\","
    },
    {
        "line": 38,
        "fullcodeline": "snprintf(hid->uniq, sizeof(hid->uniq), \"%pMR\","
    },
    {
        "line": 42,
        "fullcodeline": "hid->ll_driver = &hidp_hid_driver;"
    },
    {
        "line": 44,
        "fullcodeline": "hid->hid_get_raw_report = hidp_get_raw_report;"
    },
    {
        "line": 45,
        "fullcodeline": "hid->hid_output_raw_report = hidp_output_raw_report;"
    },
    {
        "line": 57,
        "fullcodeline": "kfree(session->rd_data);"
    },
    {
        "line": 58,
        "fullcodeline": "session->rd_data = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!session->rd_data)"
    },
    {
        "line": 11,
        "fullcodeline": "if (copy_from_user(session->rd_data, req->rd_data, req->rd_size)) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (IS_ERR(hid)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (hid_ignore(hid)) {"
    },
    {
        "line": 12,
        "fullcodeline": "err = -EFAULT;"
    },
    {
        "line": 19,
        "fullcodeline": "err = PTR_ERR(hid);"
    },
    {
        "line": 49,
        "fullcodeline": "hid_destroy_device(session->hid);"
    },
    {
        "line": 50,
        "fullcodeline": "session->hid = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 39,
        "fullcodeline": "&bt_sk(session->ctrl_sock->sk)->dst);"
    },
    {
        "line": 51,
        "fullcodeline": "return -ENODEV;"
    }
]