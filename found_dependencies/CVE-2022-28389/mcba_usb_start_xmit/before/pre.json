[
    {
        "line": 4,
        "fullcodeline": "struct mcba_priv *priv = netdev_priv(netdev);"
    },
    {
        "line": 5,
        "fullcodeline": "struct can_frame *cf = (struct can_frame *)skb->data;"
    },
    {
        "line": 6,
        "fullcodeline": "struct mcba_usb_ctx *ctx = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "struct net_device_stats *stats = &priv->netdev->stats;"
    },
    {
        "line": 10,
        "fullcodeline": "struct mcba_usb_msg_can usb_msg = {"
    },
    {
        "line": 17,
        "fullcodeline": "ctx = mcba_usb_get_free_ctx(priv, cf);"
    },
    {
        "line": 43,
        "fullcodeline": "usb_msg.dlc = cf->len;"
    },
    {
        "line": 45,
        "fullcodeline": "memcpy(usb_msg.data, cf->data, usb_msg.dlc);"
    },
    {
        "line": 50,
        "fullcodeline": "can_put_echo_skb(skb, priv->netdev, ctx->ndx, 0);"
    },
    {
        "line": 59,
        "fullcodeline": "can_free_echo_skb(priv->netdev, ctx->ndx, NULL);"
    },
    {
        "line": 14,
        "fullcodeline": "if (can_dropped_invalid_skb(netdev, skb))"
    },
    {
        "line": 18,
        "fullcodeline": "if (!ctx)"
    },
    {
        "line": 21,
        "fullcodeline": "if (cf->can_id & CAN_EFF_FLAG) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (cf->can_id & CAN_RTR_FLAG)"
    },
    {
        "line": 52,
        "fullcodeline": "err = mcba_usb_xmit(priv, (struct mcba_usb_msg *)&usb_msg, ctx);"
    },
    {
        "line": 25,
        "fullcodeline": "sid = MCBA_SIDL_EXID_MASK;"
    },
    {
        "line": 27,
        "fullcodeline": "sid |= (cf->can_id & 0x1ffc0000) >> 13;"
    },
    {
        "line": 29,
        "fullcodeline": "sid |= (cf->can_id & 0x30000) >> 16;"
    },
    {
        "line": 48,
        "fullcodeline": "usb_msg.dlc |= MCBA_DLC_RTR_MASK;"
    },
    {
        "line": 11,
        "fullcodeline": ".cmd_id = MBCA_CMD_TRANSMIT_MESSAGE_EV"
    },
    {
        "line": 33,
        "fullcodeline": "put_unaligned_be16(cf->can_id & 0xffff, &usb_msg.eid);"
    },
    {
        "line": 40,
        "fullcodeline": "usb_msg.eid = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "put_unaligned_be16((cf->can_id & CAN_SFF_MASK) << 5,"
    }
]