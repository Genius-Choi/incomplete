[
    {
        "line": 3,
        "fullcodeline": "spider = scrapy.Spider(name='foo')"
    },
    {
        "line": 4,
        "fullcodeline": "crawler = _get_crawler({"
    },
    {
        "line": 9,
        "fullcodeline": "cache_mw = HttpCacheMiddleware.from_crawler(crawler)"
    },
    {
        "line": 10,
        "fullcodeline": "mw = _get_mw()"
    },
    {
        "line": 11,
        "fullcodeline": "cookie_mw = _get_cookie_mw()"
    },
    {
        "line": 13,
        "fullcodeline": "def _get_req():"
    },
    {
        "line": 24,
        "fullcodeline": "req = _get_req()"
    },
    {
        "line": 25,
        "fullcodeline": "req = cookie_mw.process_request(req, spider) or req"
    },
    {
        "line": 26,
        "fullcodeline": "req = mw.process_request(req, spider)"
    },
    {
        "line": 27,
        "fullcodeline": "req = cache_mw.process_request(req, spider) or req"
    },
    {
        "line": 28,
        "fullcodeline": "assert isinstance(req, scrapy.Request)  # first call; the cache is empty"
    },
    {
        "line": 30,
        "fullcodeline": "resp_data = {"
    },
    {
        "line": 34,
        "fullcodeline": "resp_body = json.dumps(resp_data).encode('utf8')"
    },
    {
        "line": 35,
        "fullcodeline": "resp = TextResponse(\"http://example.com\","
    },
    {
        "line": 39,
        "fullcodeline": "resp2 = cache_mw.process_response(req, resp, spider)"
    },
    {
        "line": 40,
        "fullcodeline": "resp3 = mw.process_response(req, resp2, spider)"
    },
    {
        "line": 41,
        "fullcodeline": "resp3 = cookie_mw.process_response(req, resp3, spider)"
    },
    {
        "line": 43,
        "fullcodeline": "assert resp3.text == \"<html><body>Hello</body></html>\""
    },
    {
        "line": 44,
        "fullcodeline": "assert resp3.css(\"body\").extract_first() == \"<body>Hello</body>\""
    },
    {
        "line": 45,
        "fullcodeline": "assert resp3.data['render_time'] == 0.5"
    },
    {
        "line": 48,
        "fullcodeline": "req = _get_req()"
    },
    {
        "line": 49,
        "fullcodeline": "req = cookie_mw.process_request(req, spider) or req"
    },
    {
        "line": 50,
        "fullcodeline": "req = mw.process_request(req, spider)"
    },
    {
        "line": 51,
        "fullcodeline": "cached_resp = cache_mw.process_request(req, spider) or req"
    },
    {
        "line": 54,
        "fullcodeline": "assert cached_resp.__class__ is TextResponse"
    },
    {
        "line": 55,
        "fullcodeline": "assert cached_resp.body == resp_body"
    },
    {
        "line": 56,
        "fullcodeline": "resp2_1 = cache_mw.process_response(req, cached_resp, spider)"
    },
    {
        "line": 57,
        "fullcodeline": "resp3_1 = mw.process_response(req, resp2_1, spider)"
    },
    {
        "line": 58,
        "fullcodeline": "resp3_1 = cookie_mw.process_response(req, resp3_1, spider)"
    },
    {
        "line": 60,
        "fullcodeline": "assert isinstance(resp3_1, scrapy_splash.SplashJsonResponse)"
    },
    {
        "line": 61,
        "fullcodeline": "assert resp3_1.body == b\"<html><body>Hello</body></html>\""
    },
    {
        "line": 62,
        "fullcodeline": "assert resp3_1.text == \"<html><body>Hello</body></html>\""
    },
    {
        "line": 63,
        "fullcodeline": "assert resp3_1.css(\"body\").extract_first() == \"<body>Hello</body>\""
    },
    {
        "line": 64,
        "fullcodeline": "assert resp3_1.data['render_time'] == 0.5"
    },
    {
        "line": 65,
        "fullcodeline": "assert resp3_1.headers[b'Content-Type'] == b'text/html; charset=utf-8'"
    },
    {
        "line": 36,
        "fullcodeline": "headers={b'Content-Type': b'application/json'},"
    },
    {
        "line": 5,
        "fullcodeline": "'HTTPCACHE_DIR': str(tmpdir.join('cache')),"
    }
]