[
    {
        "line": 2,
        "fullcodeline": "mw = _get_mw()"
    },
    {
        "line": 3,
        "fullcodeline": "cookie_mw = _get_cookie_mw()"
    },
    {
        "line": 5,
        "fullcodeline": "def cb():"
    },
    {
        "line": 8,
        "fullcodeline": "req = SplashRequest(\"http://example.com/#!start\", cb, 'POST',"
    },
    {
        "line": 21,
        "fullcodeline": "req2 = cookie_mw.process_request(req, None) or req"
    },
    {
        "line": 22,
        "fullcodeline": "req2 = mw.process_request(req2, None)"
    },
    {
        "line": 23,
        "fullcodeline": "assert req2.meta['splash'] == {"
    },
    {
        "line": 43,
        "fullcodeline": "assert req2.callback == cb"
    },
    {
        "line": 44,
        "fullcodeline": "assert req2.headers == {"
    },
    {
        "line": 50,
        "fullcodeline": "res = {"
    },
    {
        "line": 54,
        "fullcodeline": "res_body = json.dumps(res)"
    },
    {
        "line": 55,
        "fullcodeline": "response = TextResponse(\"http://mysplash.example.com/execute\","
    },
    {
        "line": 60,
        "fullcodeline": "response2 = mw.process_response(req2, response, None)"
    },
    {
        "line": 61,
        "fullcodeline": "response2 = cookie_mw.process_response(req2, response2, None)"
    },
    {
        "line": 62,
        "fullcodeline": "assert isinstance(response2, scrapy_splash.SplashJsonResponse)"
    },
    {
        "line": 63,
        "fullcodeline": "assert response2 is not response"
    },
    {
        "line": 64,
        "fullcodeline": "assert response2.real_url == req2.url"
    },
    {
        "line": 65,
        "fullcodeline": "assert response2.url == req.meta['splash']['args']['url']"
    },
    {
        "line": 66,
        "fullcodeline": "assert response2.data == res"
    },
    {
        "line": 67,
        "fullcodeline": "assert response2.body == res_body.encode('utf8')"
    },
    {
        "line": 68,
        "fullcodeline": "assert response2.text == response2.body_as_unicode() == res_body"
    },
    {
        "line": 69,
        "fullcodeline": "assert response2.encoding == 'utf8'"
    },
    {
        "line": 70,
        "fullcodeline": "assert response2.headers == {b'Content-Type': [b'application/json']}"
    },
    {
        "line": 71,
        "fullcodeline": "assert response2.splash_response_headers == response2.headers"
    },
    {
        "line": 72,
        "fullcodeline": "assert response2.status == response2.splash_response_status == 200"
    },
    {
        "line": 59,
        "fullcodeline": "body=res_body.encode('utf8'))"
    },
    {
        "line": 13,
        "fullcodeline": "splash_headers={'X-My-Header': 'value'},"
    },
    {
        "line": 14,
        "fullcodeline": "args={"
    },
    {
        "line": 19,
        "fullcodeline": "headers={'X-My-Header': 'value'}"
    },
    {
        "line": 58,
        "fullcodeline": "headers={b'Content-Type': b'application/json'},"
    },
    {
        "line": 45,
        "fullcodeline": "b'Content-Type': [b'application/json'],"
    },
    {
        "line": 46,
        "fullcodeline": "b'X-My-Header': [b'value'],"
    },
    {
        "line": 27,
        "fullcodeline": "'splash_headers': {'X-My-Header': 'value'},"
    },
    {
        "line": 31,
        "fullcodeline": "'args': {"
    },
    {
        "line": 38,
        "fullcodeline": "'headers': {"
    }
]