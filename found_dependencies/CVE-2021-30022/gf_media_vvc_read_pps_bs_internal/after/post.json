[
    {
        "line": 8,
        "fullcodeline": "pps_id = gf_bs_read_int_log(bs, 6, \"pps_id\");"
    },
    {
        "line": 20,
        "fullcodeline": "pps->sps_id = gf_bs_read_int_log(bs, 4, \"sps_id\");"
    },
    {
        "line": 26,
        "fullcodeline": "vvc->sps_active_idx = pps->sps_id; /*set active sps*/"
    },
    {
        "line": 27,
        "fullcodeline": "pps->mixed_nal_types = gf_bs_read_int_log(bs, 1, \"mixed_nal_types\");"
    },
    {
        "line": 28,
        "fullcodeline": "pps->width = gf_bs_read_ue_log(bs, \"width\");"
    },
    {
        "line": 29,
        "fullcodeline": "pps->height = gf_bs_read_ue_log(bs, \"height\");"
    },
    {
        "line": 30,
        "fullcodeline": "pps->conf_window = gf_bs_read_int_log(bs, 1, \"conformance_window_flag\");"
    },
    {
        "line": 44,
        "fullcodeline": "pps->output_flag_present_flag = gf_bs_read_int_log(bs, 1, \"output_flag_present_flag\");"
    },
    {
        "line": 45,
        "fullcodeline": "pps->no_pic_partition_flag = gf_bs_read_int_log(bs, 1, \"no_pic_partition_flag\");"
    },
    {
        "line": 46,
        "fullcodeline": "pps->subpic_id_mapping_present_flag = gf_bs_read_int_log(bs, 1, \"subpic_id_mapping_present_flag\");"
    },
    {
        "line": 10,
        "fullcodeline": "if ((pps_id < 0) || (pps_id >= 64)) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (!pps->state) {"
    },
    {
        "line": 21,
        "fullcodeline": "if ((pps->sps_id<0) || (pps->sps_id >= 16)) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"scaling_window_explicit_signalling_flag\")) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (!pps->no_pic_partition_flag) {"
    },
    {
        "line": 11,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[VVC] wrong PPS ID %d in PPS\\n\", pps_id));"
    },
    {
        "line": 17,
        "fullcodeline": "pps->id = pps_id;"
    },
    {
        "line": 18,
        "fullcodeline": "pps->state = 1;"
    },
    {
        "line": 22,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[VVC] wrong SPS ID %d in PPS\\n\", pps->sps_id));"
    },
    {
        "line": 23,
        "fullcodeline": "pps->sps_id=0;"
    },
    {
        "line": 32,
        "fullcodeline": "pps->cw_left = gf_bs_read_ue_log(bs, \"conf_win_left_offset\");"
    },
    {
        "line": 33,
        "fullcodeline": "pps->cw_right = gf_bs_read_ue_log(bs, \"conf_win_right_offset\");"
    },
    {
        "line": 34,
        "fullcodeline": "pps->cw_top = gf_bs_read_ue_log(bs, \"conf_win_top_offset\");"
    },
    {
        "line": 35,
        "fullcodeline": "pps->cw_bottom = gf_bs_read_ue_log(bs, \"conf_win_bottom_offset\");"
    },
    {
        "line": 39,
        "fullcodeline": "gf_bs_read_se_log(bs, \"scaling_win_left_offset\");"
    },
    {
        "line": 40,
        "fullcodeline": "gf_bs_read_se_log(bs, \"scaling_win_right_offset\");"
    },
    {
        "line": 41,
        "fullcodeline": "gf_bs_read_se_log(bs, \"scaling_win_top_offset\");"
    },
    {
        "line": 42,
        "fullcodeline": "gf_bs_read_se_log(bs, \"scaling_win_bottom_offset\");"
    },
    {
        "line": 48,
        "fullcodeline": "u32 pps_subpic_id_len, pps_num_subpics=0;"
    },
    {
        "line": 52,
        "fullcodeline": "pps_subpic_id_len = 1 + gf_bs_read_ue(bs);"
    },
    {
        "line": 58,
        "fullcodeline": "gf_bs_read_int_log(bs, 2, \"pps_log2_ctu_size_minus5\");"
    },
    {
        "line": 59,
        "fullcodeline": "u32 num_exp_tile_columns = 1 + gf_bs_read_ue_log(bs, \"num_exp_tile_columns_minus1\");"
    },
    {
        "line": 60,
        "fullcodeline": "u32 num_exp_tile_rows = 1 + gf_bs_read_ue_log(bs, \"num_exp_tile_rows_minus1\");"
    },
    {
        "line": 12,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "return -1;"
    },
    {
        "line": 49,
        "fullcodeline": "if (!pps->no_pic_partition_flag) {"
    },
    {
        "line": 53,
        "fullcodeline": "for (i=0; i<pps_num_subpics; i++) {"
    },
    {
        "line": 61,
        "fullcodeline": "for (i=0; i<num_exp_tile_columns; i++)"
    },
    {
        "line": 62,
        "fullcodeline": "gf_bs_read_ue_log_idx(bs, \"tile_column_width_minus1\", i);"
    },
    {
        "line": 63,
        "fullcodeline": "for (i=0; i<num_exp_tile_rows; i++)"
    },
    {
        "line": 64,
        "fullcodeline": "gf_bs_read_ue_log_idx(bs, \"tile_row_height_minus1\", i);"
    },
    {
        "line": 50,
        "fullcodeline": "pps_num_subpics = 1+gf_bs_read_ue_log(bs, \"pps_num_subpics_minus1\");"
    },
    {
        "line": 54,
        "fullcodeline": "gf_bs_read_int_log_idx(bs, pps_subpic_id_len, \"subpic_id\", i);"
    }
]