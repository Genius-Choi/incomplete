[
    {
        "line": 6,
        "fullcodeline": "gf_bs_enable_emulation_byte_removal(bs, GF_TRUE);"
    },
    {
        "line": 13,
        "fullcodeline": "pps_id = gf_bs_read_ue_log(bs, \"pps_id\");"
    },
    {
        "line": 17,
        "fullcodeline": "pps = &avc->pps[pps_id];"
    },
    {
        "line": 18,
        "fullcodeline": "pps->id = pps_id;"
    },
    {
        "line": 21,
        "fullcodeline": "pps->sps_id = gf_bs_read_ue_log(bs, \"sps_id\");"
    },
    {
        "line": 34,
        "fullcodeline": "pps->slice_group_count = gf_bs_read_ue_log(bs, \"slice_group_count_minus1\") + 1;"
    },
    {
        "line": 68,
        "fullcodeline": "gf_bs_read_int_log(bs, 2, \"weighted_bipred_idc\");"
    },
    {
        "line": 69,
        "fullcodeline": "gf_bs_read_se_log(bs, \"init_qp_minus26\");"
    },
    {
        "line": 70,
        "fullcodeline": "gf_bs_read_se_log(bs, \"init_qs_minus26\");"
    },
    {
        "line": 71,
        "fullcodeline": "gf_bs_read_se_log(bs, \"chroma_qp_index_offset\");"
    },
    {
        "line": 73,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"constrained_intra_pred\");"
    },
    {
        "line": 8,
        "fullcodeline": "if (!nal_hdr) {"
    },
    {
        "line": 14,
        "fullcodeline": "if ((pps_id<0) || (pps_id >= 255)) {"
    },
    {
        "line": 32,
        "fullcodeline": "pps->entropy_coding_mode_flag = gf_bs_read_int_log(bs, 1, \"entropy_coding_mode_flag\");"
    },
    {
        "line": 33,
        "fullcodeline": "pps->pic_order_present = gf_bs_read_int_log(bs, 1, \"pic_order_present\");"
    },
    {
        "line": 35,
        "fullcodeline": "if (pps->slice_group_count > 1) {"
    },
    {
        "line": 60,
        "fullcodeline": "pps->num_ref_idx_l0_default_active_minus1 = gf_bs_read_ue_log(bs, \"num_ref_idx_l0_default_active_minus1\");"
    },
    {
        "line": 61,
        "fullcodeline": "pps->num_ref_idx_l1_default_active_minus1 = gf_bs_read_ue_log(bs, \"num_ref_idx_l1_default_active_minus1\");"
    },
    {
        "line": 67,
        "fullcodeline": "pps->weighted_pred_flag = gf_bs_read_int_log(bs, 1, \"weighted_pred_flag\");"
    },
    {
        "line": 72,
        "fullcodeline": "pps->deblocking_filter_control_present_flag = gf_bs_read_int_log(bs, 1, \"deblocking_filter_control_present_flag\");"
    },
    {
        "line": 74,
        "fullcodeline": "pps->redundant_pic_cnt_present = gf_bs_read_int_log(bs, 1, \"redundant_pic_cnt_present\");"
    },
    {
        "line": 9,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"forbidden_zero_bit\");"
    },
    {
        "line": 10,
        "fullcodeline": "gf_bs_read_int_log(bs, 2, \"nal_ref_idc\");"
    },
    {
        "line": 11,
        "fullcodeline": "gf_bs_read_int_log(bs, 5, \"nal_unit_type\");"
    },
    {
        "line": 22,
        "fullcodeline": "if ((pps->sps_id<0) || (pps->sps_id >= 32)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (!avc->sps[pps->sps_id].state && !avc->sps[pps->sps_id + GF_SVC_SSPS_ID_SHIFT].state) {"
    },
    {
        "line": 37,
        "fullcodeline": "pps->mb_slice_group_map_type = gf_bs_read_ue_log(bs, \"mb_slice_group_map_type\");"
    },
    {
        "line": 15,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "return -1;"
    },
    {
        "line": 28,
        "fullcodeline": "return -1;"
    },
    {
        "line": 38,
        "fullcodeline": "if (pps->mb_slice_group_map_type == 0) {"
    },
    {
        "line": 39,
        "fullcodeline": "for (iGroup = 0; iGroup <= pps->slice_group_count - 1; iGroup++)"
    },
    {
        "line": 40,
        "fullcodeline": "gf_bs_read_ue_log_idx(bs, \"run_length_minus1\", iGroup);"
    },
    {
        "line": 42,
        "fullcodeline": "else if (pps->mb_slice_group_map_type == 2) {"
    },
    {
        "line": 43,
        "fullcodeline": "for (iGroup = 0; iGroup < pps->slice_group_count - 1; iGroup++) {"
    },
    {
        "line": 44,
        "fullcodeline": "gf_bs_read_ue_log_idx(bs, \"top_left\", iGroup);"
    },
    {
        "line": 45,
        "fullcodeline": "gf_bs_read_ue_log_idx(bs, \"bottom_right\", iGroup);"
    },
    {
        "line": 48,
        "fullcodeline": "else if (pps->mb_slice_group_map_type == 3 || pps->mb_slice_group_map_type == 4 || pps->mb_slice_group_map_type == 5) {"
    },
    {
        "line": 49,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"slice_group_change_direction_flag\");"
    },
    {
        "line": 50,
        "fullcodeline": "gf_bs_read_ue_log(bs, \"slice_group_change_rate_minus1\");"
    },
    {
        "line": 54,
        "fullcodeline": "pps->pic_size_in_map_units_minus1 = gf_bs_read_ue_log(bs, \"pic_size_in_map_units_minus1\");"
    },
    {
        "line": 55,
        "fullcodeline": "for (i = 0; i <= pps->pic_size_in_map_units_minus1; i++) {"
    },
    {
        "line": 56,
        "fullcodeline": "gf_bs_read_int_log_idx(bs, (u32)ceil(log(pps->slice_group_count) / log(2)), \"slice_group_id\", i);"
    }
]