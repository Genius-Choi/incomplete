[
    {
        "line": 4,
        "fullcodeline": "u32 num_ref_idx_l0_active = 0, num_ref_idx_l1_active = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "Bool RapPicFlag = GF_FALSE;"
    },
    {
        "line": 9,
        "fullcodeline": "Bool IDRPicFlag = GF_FALSE;"
    },
    {
        "line": 11,
        "fullcodeline": "si->first_slice_segment_in_pic_flag = gf_bs_read_int_log(bs, 1, \"first_slice_segment_in_pic_flag\");"
    },
    {
        "line": 31,
        "fullcodeline": "pps_id = gf_bs_read_ue_log(bs, \"pps_id\");"
    },
    {
        "line": 35,
        "fullcodeline": "pps = &hevc->pps[pps_id];"
    },
    {
        "line": 36,
        "fullcodeline": "sps = &hevc->sps[pps->sps_id];"
    },
    {
        "line": 37,
        "fullcodeline": "si->sps = sps;"
    },
    {
        "line": 38,
        "fullcodeline": "si->pps = pps;"
    },
    {
        "line": 252,
        "fullcodeline": "gf_bs_align(bs);"
    },
    {
        "line": 32,
        "fullcodeline": "if ((pps_id<0) || (pps_id >= 64))"
    },
    {
        "line": 40,
        "fullcodeline": "if (!si->first_slice_segment_in_pic_flag && pps->dependent_slice_segments_enabled_flag) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (!si->first_slice_segment_in_pic_flag) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (!si->dependent_slice_segment_flag) {"
    },
    {
        "line": 16,
        "fullcodeline": "IDRPicFlag = GF_TRUE;"
    },
    {
        "line": 17,
        "fullcodeline": "RapPicFlag = GF_TRUE;"
    },
    {
        "line": 23,
        "fullcodeline": "RapPicFlag = GF_TRUE;"
    },
    {
        "line": 28,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"no_output_of_prior_pics_flag\");"
    },
    {
        "line": 41,
        "fullcodeline": "si->dependent_slice_segment_flag = gf_bs_read_int_log(bs, 1, \"dependent_slice_segment_flag\");"
    },
    {
        "line": 48,
        "fullcodeline": "si->slice_segment_address = gf_bs_read_int_log(bs, sps->bitsSliceSegmentAddress, \"slice_segment_address\");"
    },
    {
        "line": 57,
        "fullcodeline": "Bool slice_sao_luma_flag = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "Bool slice_sao_chroma_flag = 0;"
    },
    {
        "line": 59,
        "fullcodeline": "Bool slice_deblocking_filter_disabled_flag = 0;"
    },
    {
        "line": 62,
        "fullcodeline": "gf_bs_read_int_log(bs, pps->num_extra_slice_header_bits, \"slice_reserved_undetermined_flag\");"
    },
    {
        "line": 64,
        "fullcodeline": "si->slice_type = gf_bs_read_ue_log(bs, \"slice_type\");"
    },
    {
        "line": 214,
        "fullcodeline": "si->entry_point_start_bits = ((u32)gf_bs_get_position(bs) - 1) * 8 + gf_bs_get_bit_position(bs);"
    },
    {
        "line": 217,
        "fullcodeline": "u32 num_entry_point_offsets = gf_bs_read_ue_log(bs, \"num_entry_point_offsets\");"
    },
    {
        "line": 239,
        "fullcodeline": "u32 size_ext = gf_bs_read_ue_log(bs, \"size_ext\");"
    },
    {
        "line": 246,
        "fullcodeline": "si->header_size_bits = (gf_bs_get_position(bs) - 1) * 8 + gf_bs_get_bit_position(bs); // av_parser.c modified on 16 jan. 2019"
    },
    {
        "line": 248,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"byte_align\") == 0) {"
    },
    {
        "line": 253,
        "fullcodeline": "si->payload_start_offset = (s32)gf_bs_get_position(bs);"
    },
    {
        "line": 33,
        "fullcodeline": "return -1;"
    },
    {
        "line": 44,
        "fullcodeline": "si->dependent_slice_segment_flag = GF_FALSE;"
    },
    {
        "line": 51,
        "fullcodeline": "si->slice_segment_address = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "if (sps->separate_colour_plane_flag == 1)"
    },
    {
        "line": 139,
        "fullcodeline": "if (si->slice_type == GF_HEVC_SLICE_TYPE_P || si->slice_type == GF_HEVC_SLICE_TYPE_B) {"
    },
    {
        "line": 185,
        "fullcodeline": "si->slice_qp_delta = gf_bs_read_se_log(bs, \"slice_qp_delta\");"
    },
    {
        "line": 218,
        "fullcodeline": "if (num_entry_point_offsets > 0) {"
    },
    {
        "line": 67,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"pic_output_flag\");"
    },
    {
        "line": 70,
        "fullcodeline": "gf_bs_read_int_log(bs, 2, \"colour_plane_id\");"
    },
    {
        "line": 73,
        "fullcodeline": "si->poc_lsb = 0;"
    },
    {
        "line": 133,
        "fullcodeline": "u32 ChromaArrayType = sps->separate_colour_plane_flag ? 0 : sps->chroma_format_idc;"
    },
    {
        "line": 134,
        "fullcodeline": "slice_sao_luma_flag = gf_bs_read_int_log(bs, 1, \"slice_sao_luma_flag\");"
    },
    {
        "line": 141,
        "fullcodeline": "num_ref_idx_l0_active = pps->num_ref_idx_l0_default_active;"
    },
    {
        "line": 142,
        "fullcodeline": "num_ref_idx_l1_active = 0;"
    },
    {
        "line": 182,
        "fullcodeline": "gf_bs_read_ue_log(bs, \"five_minus_max_num_merge_cand\");"
    },
    {
        "line": 184,
        "fullcodeline": "si->slice_qp_delta_start_bits = (s32) (gf_bs_get_position(bs) - 1) * 8 + gf_bs_get_bit_position(bs);"
    },
    {
        "line": 188,
        "fullcodeline": "gf_bs_read_se_log(bs, \"slice_cb_qp_offset\");"
    },
    {
        "line": 189,
        "fullcodeline": "gf_bs_read_se_log(bs, \"slice_cr_qp_offset\");"
    },
    {
        "line": 196,
        "fullcodeline": "slice_deblocking_filter_disabled_flag = gf_bs_read_int_log(bs, 1, \"slice_deblocking_filter_disabled_flag\");"
    },
    {
        "line": 203,
        "fullcodeline": "&& (slice_sao_luma_flag || slice_sao_chroma_flag || !slice_deblocking_filter_disabled_flag)"
    },
    {
        "line": 205,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"slice_loop_filter_across_slices_enabled_flag\");"
    },
    {
        "line": 219,
        "fullcodeline": "u32 offset = gf_bs_read_ue_log(bs, \"offset\") + 1;"
    },
    {
        "line": 220,
        "fullcodeline": "u32 segments = offset >> 4;"
    },
    {
        "line": 221,
        "fullcodeline": "s32 remain = (offset & 15);"
    },
    {
        "line": 241,
        "fullcodeline": "gf_bs_read_int(bs, 8);"
    },
    {
        "line": 76,
        "fullcodeline": "if (!hevc->full_slice_header_parse) return 0;"
    },
    {
        "line": 80,
        "fullcodeline": "si->poc_lsb = gf_bs_read_int_log(bs, sps->log2_max_pic_order_cnt_lsb, \"poc_lsb\");"
    },
    {
        "line": 143,
        "fullcodeline": "if (si->slice_type == GF_HEVC_SLICE_TYPE_B)"
    },
    {
        "line": 146,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"num_ref_idx_active_override_flag\")) {"
    },
    {
        "line": 159,
        "fullcodeline": "if (si->slice_type == GF_HEVC_SLICE_TYPE_B)"
    },
    {
        "line": 192,
        "fullcodeline": "deblocking_filter_override_flag = gf_bs_read_int_log(bs, 1, \"deblocking_filter_override_flag\");"
    },
    {
        "line": 197,
        "fullcodeline": "if (!slice_deblocking_filter_disabled_flag) {"
    },
    {
        "line": 223,
        "fullcodeline": "for (i = 0; i < num_entry_point_offsets; i++) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (!hevc->full_slice_header_parse) return 0;"
    },
    {
        "line": 136,
        "fullcodeline": "slice_sao_chroma_flag = gf_bs_read_int_log(bs, 1, \"slice_sao_chroma_flag\");"
    },
    {
        "line": 144,
        "fullcodeline": "num_ref_idx_l1_active = pps->num_ref_idx_l1_default_active;"
    },
    {
        "line": 147,
        "fullcodeline": "num_ref_idx_l0_active = 1 + gf_bs_read_ue_log(bs, \"num_ref_idx_l0_active\");"
    },
    {
        "line": 160,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"mvd_l1_zero_flag\");"
    },
    {
        "line": 162,
        "fullcodeline": "gf_bs_read_int_log(bs, 1, \"cabac_init_flag\");"
    },
    {
        "line": 166,
        "fullcodeline": "Bool collocated_from_l0_flag = 1;"
    },
    {
        "line": 177,
        "fullcodeline": "if ((pps->weighted_pred_flag && si->slice_type == GF_HEVC_SLICE_TYPE_P)"
    },
    {
        "line": 178,
        "fullcodeline": "|| (pps->weighted_bipred_flag && si->slice_type == GF_HEVC_SLICE_TYPE_B)"
    },
    {
        "line": 180,
        "fullcodeline": "hevc_pred_weight_table(bs, hevc, si, pps, sps, num_ref_idx_l0_active, num_ref_idx_l1_active);"
    },
    {
        "line": 198,
        "fullcodeline": "gf_bs_read_se_log(bs, \"slice_beta_offset_div2\");"
    },
    {
        "line": 199,
        "fullcodeline": "gf_bs_read_se_log(bs, \"slice_tc_offset_div2\");"
    },
    {
        "line": 85,
        "fullcodeline": "if (gf_bs_read_int_log(bs, 1, \"short_term_ref_pic_set_sps_flag\") == 0) {"
    },
    {
        "line": 86,
        "fullcodeline": "Bool ret = hevc_parse_short_term_ref_pic_set(bs, sps, sps->num_short_term_ref_pic_sets);"
    },
    {
        "line": 101,
        "fullcodeline": "u8 DeltaPocMsbCycleLt[32];"
    },
    {
        "line": 102,
        "fullcodeline": "u32 num_long_term_sps = 0;"
    },
    {
        "line": 105,
        "fullcodeline": "memset(DeltaPocMsbCycleLt, 0, sizeof(u8) * 32);"
    },
    {
        "line": 110,
        "fullcodeline": "num_long_term_pics = gf_bs_read_ue_log(bs, \"num_long_term_pics\");"
    },
    {
        "line": 148,
        "fullcodeline": "if (si->slice_type == GF_HEVC_SLICE_TYPE_B)"
    },
    {
        "line": 167,
        "fullcodeline": "if (si->slice_type == GF_HEVC_SLICE_TYPE_B)"
    },
    {
        "line": 225,
        "fullcodeline": "for (j = 0; j < segments; j++) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (sps->num_long_term_ref_pic_sps > 0) {"
    },
    {
        "line": 112,
        "fullcodeline": "for (i = 0; i < num_long_term_sps + num_long_term_pics; i++) {"
    },
    {
        "line": 130,
        "fullcodeline": "slice_temporal_mvp_enabled_flag = gf_bs_read_int_log(bs, 1, \"slice_temporal_mvp_enabled_flag\");"
    },
    {
        "line": 149,
        "fullcodeline": "num_ref_idx_l1_active = 1 + gf_bs_read_ue_log(bs, \"num_ref_idx_l1_active\");"
    },
    {
        "line": 153,
        "fullcodeline": "if (!ref_pic_lists_modification(bs, si->slice_type, num_ref_idx_l0_active, num_ref_idx_l1_active)) {"
    },
    {
        "line": 168,
        "fullcodeline": "collocated_from_l0_flag = gf_bs_read_int_log(bs, 1, \"collocated_from_l0_flag\");"
    },
    {
        "line": 170,
        "fullcodeline": "if ((collocated_from_l0_flag && (num_ref_idx_l0_active > 1))"
    },
    {
        "line": 171,
        "fullcodeline": "|| (!collocated_from_l0_flag && (num_ref_idx_l1_active > 1))"
    },
    {
        "line": 173,
        "fullcodeline": "gf_bs_read_ue_log(bs, \"collocated_ref_idx\");"
    },
    {
        "line": 227,
        "fullcodeline": "/*res +=*/ gf_bs_read_int(bs, 16);"
    },
    {
        "line": 231,
        "fullcodeline": "/* res += */ gf_bs_read_int(bs, remain);"
    },
    {
        "line": 90,
        "fullcodeline": "else if (sps->num_short_term_ref_pic_sets > 1) {"
    },
    {
        "line": 108,
        "fullcodeline": "num_long_term_sps = gf_bs_read_ue_log(bs, \"num_long_term_sps\");"
    },
    {
        "line": 155,
        "fullcodeline": "return -1;"
    },
    {
        "line": 88,
        "fullcodeline": "return -1;"
    },
    {
        "line": 91,
        "fullcodeline": "u32 numbits = 0;"
    },
    {
        "line": 113,
        "fullcodeline": "if (i < num_long_term_sps) {"
    },
    {
        "line": 121,
        "fullcodeline": "if (gf_bs_read_int_log_idx(bs, 1, \"delta_poc_msb_present_flag\", i)) {"
    },
    {
        "line": 93,
        "fullcodeline": "while ((u32)(1 << numbits) < sps->num_short_term_ref_pic_sets)"
    },
    {
        "line": 94,
        "fullcodeline": "numbits++;"
    },
    {
        "line": 95,
        "fullcodeline": "if (numbits > 0)"
    },
    {
        "line": 96,
        "fullcodeline": "gf_bs_read_int_log(bs, numbits, \"short_term_ref_pic_set_idx\");"
    },
    {
        "line": 114,
        "fullcodeline": "if (sps->num_long_term_ref_pic_sps > 1)"
    },
    {
        "line": 118,
        "fullcodeline": "gf_bs_read_int_log_idx(bs, sps->log2_max_pic_order_cnt_lsb, \"PocLsbLt\", i);"
    },
    {
        "line": 119,
        "fullcodeline": "gf_bs_read_int_log_idx(bs, 1, \"UsedByCurrPicLt\", i);"
    },
    {
        "line": 115,
        "fullcodeline": "gf_bs_read_int_log_idx(bs, gf_get_bit_size(sps->num_long_term_ref_pic_sps), \"lt_idx_sps\", i);"
    },
    {
        "line": 122,
        "fullcodeline": "if (i == 0 || i == num_long_term_sps)"
    },
    {
        "line": 123,
        "fullcodeline": "DeltaPocMsbCycleLt[i] = gf_bs_read_ue_log_idx(bs, \"DeltaPocMsbCycleLt\", i);"
    },
    {
        "line": 125,
        "fullcodeline": "DeltaPocMsbCycleLt[i] = gf_bs_read_ue_log_idx(bs, \"DeltaPocMsbCycleLt\", i) + DeltaPocMsbCycleLt[i - 1];"
    }
]