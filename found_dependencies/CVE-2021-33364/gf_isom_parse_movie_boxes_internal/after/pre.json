[
    {
        "line": 4,
        "fullcodeline": "u64 totSize, mdat_end=0;"
    },
    {
        "line": 5,
        "fullcodeline": "GF_Err e = GF_OK;"
    },
    {
        "line": 13,
        "fullcodeline": "totSize = mov->current_top_box_start;"
    },
    {
        "line": 18,
        "fullcodeline": "gf_bs_seek(mov->movieFileMap->bs, totSize);"
    },
    {
        "line": 8,
        "fullcodeline": "if (mov->single_moof_mode && mov->single_moof_state == 2) {"
    },
    {
        "line": 23,
        "fullcodeline": "while (gf_bs_available(mov->movieFileMap->bs)) {"
    },
    {
        "line": 16,
        "fullcodeline": "totSize -= mov->bytes_removed;"
    },
    {
        "line": 24,
        "fullcodeline": "*bytesMissing = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "mov->current_top_box_start = gf_bs_get_position(mov->movieFileMap->bs) + mov->bytes_removed;"
    },
    {
        "line": 27,
        "fullcodeline": "GF_LOG(GF_LOG_DEBUG, GF_LOG_CONTAINER, (\"[iso file] Parsing a top-level box at position %d\\n\", mov->current_top_box_start));"
    },
    {
        "line": 30,
        "fullcodeline": "e = gf_isom_parse_root_box(&a, mov->movieFileMap->bs, boxType, bytesMissing, progressive_mode);"
    },
    {
        "line": 427,
        "fullcodeline": "if (!mov->moov && !mov->meta"
    },
    {
        "line": 429,
        "fullcodeline": "&& !mov->moof && !mov->is_index_segment"
    },
    {
        "line": 435,
        "fullcodeline": "if (!gf_opts_get_bool(\"core\", \"no-check\")) {"
    },
    {
        "line": 466,
        "fullcodeline": "if (!mov->mdat && (mov->openMode != GF_ISOM_OPEN_READ) && (mov->openMode != GF_ISOM_OPEN_KEEP_FRAGMENTS)) {"
    },
    {
        "line": 467,
        "fullcodeline": "mov->mdat = (GF_MediaDataBox *) gf_isom_box_new(GF_ISOM_BOX_TYPE_MDAT);"
    },
    {
        "line": 469,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, mov->mdat);"
    },
    {
        "line": 15,
        "fullcodeline": "assert(totSize >= mov->bytes_removed);"
    },
    {
        "line": 32,
        "fullcodeline": "if (e >= 0) {"
    },
    {
        "line": 457,
        "fullcodeline": "if ((mov->openMode > GF_ISOM_OPEN_READ) && (mov->openMode != GF_ISOM_OPEN_KEEP_FRAGMENTS) && mov->moov->mvex) {"
    },
    {
        "line": 468,
        "fullcodeline": "if (!mov->mdat) return GF_OUT_OF_MEM;"
    },
    {
        "line": 57,
        "fullcodeline": "mov->moov = (GF_MovieBox *)a;"
    },
    {
        "line": 58,
        "fullcodeline": "mov->original_moov_offset = mov->current_top_box_start;"
    },
    {
        "line": 60,
        "fullcodeline": "mov->moov->mov = mov;"
    },
    {
        "line": 71,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 74,
        "fullcodeline": "totSize += a->size;"
    },
    {
        "line": 119,
        "fullcodeline": "mov->meta = (GF_MetaBox *)a;"
    },
    {
        "line": 120,
        "fullcodeline": "mov->original_meta_offset = mov->current_top_box_start;"
    },
    {
        "line": 121,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 125,
        "fullcodeline": "totSize += a->size;"
    },
    {
        "line": 137,
        "fullcodeline": "totSize += a->size;"
    },
    {
        "line": 182,
        "fullcodeline": "mov->brand = (GF_FileTypeBox *)a;"
    },
    {
        "line": 183,
        "fullcodeline": "totSize += a->size;"
    },
    {
        "line": 184,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 223,
        "fullcodeline": "mov->pdin = (GF_ProgressiveDownloadBox *) a;"
    },
    {
        "line": 224,
        "fullcodeline": "totSize += a->size;"
    },
    {
        "line": 225,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 252,
        "fullcodeline": "totSize += a->size;"
    },
    {
        "line": 288,
        "fullcodeline": "gf_isom_disable_inplace_rewrite(mov);"
    },
    {
        "line": 299,
        "fullcodeline": "((GF_MovieFragmentBox *)a)->mov = mov;"
    },
    {
        "line": 301,
        "fullcodeline": "totSize += a->size;"
    },
    {
        "line": 302,
        "fullcodeline": "mov->moof = (GF_MovieFragmentBox *) a;"
    },
    {
        "line": 305,
        "fullcodeline": "FixTrackID(mov);"
    },
    {
        "line": 380,
        "fullcodeline": "mov->sidx_start_offset = 0;"
    },
    {
        "line": 381,
        "fullcodeline": "mov->sidx_end_offset = 0;"
    },
    {
        "line": 382,
        "fullcodeline": "mov->styp_start_offset = 0;"
    },
    {
        "line": 414,
        "fullcodeline": "totSize += a->size;"
    },
    {
        "line": 415,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 422,
        "fullcodeline": "mov->current_top_box_start = gf_bs_get_position(mov->movieFileMap->bs) + mov->bytes_removed;"
    },
    {
        "line": 436,
        "fullcodeline": "if (mov->moov && !mov->moov->mvhd) {"
    },
    {
        "line": 442,
        "fullcodeline": "if (mov->meta && !mov->meta->handler) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (!mov->moov->mvhd) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (mdat_end && mov->signal_frag_bounds && !(mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG) ) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (!mov->first_data_toplevel_offset) {"
    },
    {
        "line": 138,
        "fullcodeline": "if (mov->openMode == GF_ISOM_OPEN_READ) {"
    },
    {
        "line": 196,
        "fullcodeline": "if (mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG) {"
    },
    {
        "line": 248,
        "fullcodeline": "if (mov->moov && !mov->first_data_toplevel_offset) {"
    },
    {
        "line": 253,
        "fullcodeline": "if (mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG) {"
    },
    {
        "line": 289,
        "fullcodeline": "if (!mov->moov) {"
    },
    {
        "line": 319,
        "fullcodeline": "if (mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG) {"
    },
    {
        "line": 387,
        "fullcodeline": "GF_UnknownBox *box = (GF_UnknownBox*)a;"
    },
    {
        "line": 402,
        "fullcodeline": "if (!(mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG)) {"
    },
    {
        "line": 34,
        "fullcodeline": "} else if (e == GF_ISOM_INCOMPLETE_FILE) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (mov->moov->mvex) mov->moov->mvex->mov = mov;"
    },
    {
        "line": 82,
        "fullcodeline": "gf_isom_meta_restore_items_ref(mov, mov->meta);"
    },
    {
        "line": 107,
        "fullcodeline": "gf_isom_push_mdat_end(mov, mdat_end);"
    },
    {
        "line": 108,
        "fullcodeline": "mdat_end=0;"
    },
    {
        "line": 127,
        "fullcodeline": "gf_isom_meta_restore_items_ref(mov, mov->meta);"
    },
    {
        "line": 134,
        "fullcodeline": "mov->first_data_toplevel_offset = mov->current_top_box_start;"
    },
    {
        "line": 135,
        "fullcodeline": "mov->first_data_toplevel_size = a->size;"
    },
    {
        "line": 197,
        "fullcodeline": "mov->otyp = (GF_Box *)a;"
    },
    {
        "line": 198,
        "fullcodeline": "totSize += a->size;"
    },
    {
        "line": 199,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 249,
        "fullcodeline": "mov->first_data_toplevel_offset = mov->current_top_box_start;"
    },
    {
        "line": 250,
        "fullcodeline": "mov->first_data_toplevel_size = a->size;"
    },
    {
        "line": 254,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 290,
        "fullcodeline": "GF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[iso file] Movie fragment but no moov (yet) - possibly broken parsing!\\n\"));"
    },
    {
        "line": 293,
        "fullcodeline": "mov->single_moof_state++;"
    },
    {
        "line": 306,
        "fullcodeline": "if (! (mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG)) {"
    },
    {
        "line": 307,
        "fullcodeline": "FixSDTPInTRAF(mov->moof);"
    },
    {
        "line": 321,
        "fullcodeline": "gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 370,
        "fullcodeline": "mov->root_sidx = NULL;"
    },
    {
        "line": 373,
        "fullcodeline": "gf_isom_box_del(mov->seg_ssix);"
    },
    {
        "line": 374,
        "fullcodeline": "mov->root_ssix = NULL;"
    },
    {
        "line": 378,
        "fullcodeline": "mov->seg_styp = NULL;"
    },
    {
        "line": 388,
        "fullcodeline": "if (box->original_4cc == GF_ISOM_BOX_TYPE_JP) {"
    },
    {
        "line": 88,
        "fullcodeline": "for (k=0; k<gf_list_count(mov->moov->trackList); k++) {"
    },
    {
        "line": 139,
        "fullcodeline": "if (!mov->mdat) {"
    },
    {
        "line": 152,
        "fullcodeline": "if (mov->signal_frag_bounds && !(mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG) ) {"
    },
    {
        "line": 202,
        "fullcodeline": "GF_FileTypeBox *brand = (GF_FileTypeBox *) gf_isom_box_find_child(a->child_boxes, GF_ISOM_BOX_TYPE_FTYP);"
    },
    {
        "line": 212,
        "fullcodeline": "gf_isom_box_del(a);"
    },
    {
        "line": 238,
        "fullcodeline": "mov->is_index_segment = GF_TRUE;"
    },
    {
        "line": 294,
        "fullcodeline": "if (mov->single_moof_state > 1) {"
    },
    {
        "line": 389,
        "fullcodeline": "u8 *c = (u8 *) box->data;"
    },
    {
        "line": 392,
        "fullcodeline": "gf_isom_box_del(a);"
    },
    {
        "line": 36,
        "fullcodeline": "if (mov->openMode != GF_ISOM_OPEN_READ) {"
    },
    {
        "line": 89,
        "fullcodeline": "GF_TrackBox *trak = (GF_TrackBox *)gf_list_get(mov->moov->trackList, k);"
    },
    {
        "line": 98,
        "fullcodeline": "for (k=0; k<gf_list_count(mov->moov->trackList); k++) {"
    },
    {
        "line": 140,
        "fullcodeline": "mov->mdat = (GF_MediaDataBox *) a;"
    },
    {
        "line": 141,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, mov->mdat);"
    },
    {
        "line": 153,
        "fullcodeline": "mdat_end = gf_bs_get_position(mov->movieFileMap->bs);"
    },
    {
        "line": 163,
        "fullcodeline": "else if (!mov->mdat && (mov->openMode != GF_ISOM_OPEN_READ) && (mov->openMode != GF_ISOM_OPEN_KEEP_FRAGMENTS)) {"
    },
    {
        "line": 310,
        "fullcodeline": "for (k=0; k<gf_list_count(mov->moof->TrackList); k++) {"
    },
    {
        "line": 356,
        "fullcodeline": "} else if (mov->openMode==GF_ISOM_OPEN_KEEP_FRAGMENTS) {"
    },
    {
        "line": 394,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 405,
        "fullcodeline": "gf_isom_box_del(a);"
    },
    {
        "line": 40,
        "fullcodeline": "if ((mov->openMode == GF_ISOM_OPEN_READ) && !progressive_mode) {"
    },
    {
        "line": 41,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Incomplete file while reading for dump - aborting parsing\\n\"));"
    },
    {
        "line": 164,
        "fullcodeline": "gf_isom_box_del(a);"
    },
    {
        "line": 165,
        "fullcodeline": "mov->mdat = (GF_MediaDataBox *) gf_isom_box_new(GF_ISOM_BOX_TYPE_MDAT);"
    },
    {
        "line": 167,
        "fullcodeline": "e = gf_list_add(mov->TopBoxes, mov->mdat);"
    },
    {
        "line": 205,
        "fullcodeline": "gf_list_del_item(a->child_boxes, brand);"
    },
    {
        "line": 206,
        "fullcodeline": "pos = gf_list_del_item(mov->TopBoxes, mov->brand);"
    },
    {
        "line": 208,
        "fullcodeline": "mov->brand = brand;"
    },
    {
        "line": 210,
        "fullcodeline": "gf_list_insert(mov->TopBoxes, brand, pos);"
    },
    {
        "line": 256,
        "fullcodeline": "} else if (mov->signal_frag_bounds && !(mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG)  && (mov->openMode!=GF_ISOM_OPEN_KEEP_FRAGMENTS)"
    },
    {
        "line": 276,
        "fullcodeline": "gf_isom_push_mdat_end(mov, mov->current_top_box_start);"
    },
    {
        "line": 311,
        "fullcodeline": "GF_TrackFragmentBox *traf = (GF_TrackFragmentBox *)gf_list_get(mov->moof->TrackList, k);"
    },
    {
        "line": 324,
        "fullcodeline": "for (k=0; k<gf_list_count(mov->moof->TrackList); k++) {"
    },
    {
        "line": 357,
        "fullcodeline": "mov->NextMoofNumber = mov->moof->mfhd->sequence_number+1;"
    },
    {
        "line": 358,
        "fullcodeline": "mov->moof = NULL;"
    },
    {
        "line": 359,
        "fullcodeline": "gf_isom_box_del(a);"
    },
    {
        "line": 390,
        "fullcodeline": "if ((box->dataSize==4) && (GF_4CC(c[0],c[1],c[2],c[3])==(u32)0x0D0A870A))"
    },
    {
        "line": 391,
        "fullcodeline": "mov->is_jp2 = 1;"
    },
    {
        "line": 407,
        "fullcodeline": "mov->last_producer_ref_time = (GF_ProducerReferenceTimeBox *)a;"
    },
    {
        "line": 92,
        "fullcodeline": "e = senc_Parse(mov->movieFileMap->bs, trak, NULL, trak->sample_encryption);"
    },
    {
        "line": 147,
        "fullcodeline": "else if (mov->FragmentsFlags & GF_ISOM_FRAG_READ_DEBUG) gf_list_add(mov->TopBoxes, a);"
    },
    {
        "line": 155,
        "fullcodeline": "gf_isom_push_mdat_end(mov, mdat_end);"
    },
    {
        "line": 156,
        "fullcodeline": "mdat_end=0;"
    },
    {
        "line": 166,
        "fullcodeline": "if (!mov->mdat) return GF_OUT_OF_MEM;"
    },
    {
        "line": 172,
        "fullcodeline": "gf_isom_box_del(a);"
    },
    {
        "line": 209,
        "fullcodeline": "if (pos<0) pos=0;"
    },
    {
        "line": 258,
        "fullcodeline": "if (a->type==GF_ISOM_BOX_TYPE_SIDX) {"
    },
    {
        "line": 325,
        "fullcodeline": "GF_TrackFragmentBox *traf = gf_list_get(mov->moof->TrackList, k);"
    },
    {
        "line": 347,
        "fullcodeline": "for (k=0; k<gf_list_count(mov->moof->TrackList); k++) {"
    },
    {
        "line": 362,
        "fullcodeline": "e = MergeFragment((GF_MovieFragmentBox *)a, mov);"
    },
    {
        "line": 363,
        "fullcodeline": "gf_isom_box_del(a);"
    },
    {
        "line": 99,
        "fullcodeline": "GF_TrackBox *trak = (GF_TrackBox *)gf_list_get(mov->moov->trackList, k);"
    },
    {
        "line": 260,
        "fullcodeline": "mov->root_sidx = (GF_SegmentIndexBox *) a;"
    },
    {
        "line": 261,
        "fullcodeline": "mov->sidx_start_offset = mov->current_top_box_start;"
    },
    {
        "line": 262,
        "fullcodeline": "mov->sidx_end_offset = gf_bs_get_position(mov->movieFileMap->bs);"
    },
    {
        "line": 313,
        "fullcodeline": "convert_compact_sample_groups(traf->child_boxes, traf->sampleGroups);"
    },
    {
        "line": 326,
        "fullcodeline": "if (traf->tfhd && mov->moov->mvex && mov->moov->mvex->TrackExList) {"
    },
    {
        "line": 338,
        "fullcodeline": "if (traf->trex && traf->tfhd && traf->trex->track && traf->sample_encryption) {"
    },
    {
        "line": 348,
        "fullcodeline": "GF_TrackFragmentBox *traf = gf_list_get(mov->moof->TrackList, k);"
    },
    {
        "line": 149,
        "fullcodeline": "else gf_isom_box_del(a); //in other modes we don't care"
    },
    {
        "line": 277,
        "fullcodeline": "} else if (!mov->NextMoofNumber && (a->type==GF_ISOM_BOX_TYPE_SIDX)) {"
    },
    {
        "line": 279,
        "fullcodeline": "mov->main_sidx = (GF_SegmentIndexBox *) a;"
    },
    {
        "line": 280,
        "fullcodeline": "mov->main_sidx_end_pos = mov->current_top_box_start + a->size;"
    },
    {
        "line": 327,
        "fullcodeline": "GF_TrackBox *trak = gf_isom_get_track_from_id(mov->moov, traf->tfhd->trackID);"
    },
    {
        "line": 328,
        "fullcodeline": "u32 j=0;"
    },
    {
        "line": 339,
        "fullcodeline": "GF_TrackBox *trak = GetTrackbyID(mov->moov, traf->tfhd->trackID);"
    },
    {
        "line": 340,
        "fullcodeline": "trak->current_traf_stsd_idx = traf->tfhd->sample_desc_index ? traf->tfhd->sample_desc_index : traf->trex->def_sample_desc_index;"
    },
    {
        "line": 341,
        "fullcodeline": "e = senc_Parse(mov->movieFileMap->bs, trak, traf, traf->sample_encryption);"
    },
    {
        "line": 343,
        "fullcodeline": "trak->current_traf_stsd_idx = 0;"
    },
    {
        "line": 265,
        "fullcodeline": "else if (a->type==GF_ISOM_BOX_TYPE_STYP) {"
    },
    {
        "line": 282,
        "fullcodeline": "gf_isom_box_del(a);"
    },
    {
        "line": 329,
        "fullcodeline": "while ((traf->trex = (GF_TrackExtendsBox*)gf_list_enum(mov->moov->mvex->TrackExList, &j))) {"
    },
    {
        "line": 350,
        "fullcodeline": "e = senc_Parse(mov->movieFileMap->bs, NULL, traf, traf->sample_encryption);"
    },
    {
        "line": 266,
        "fullcodeline": "mov->styp_start_offset = mov->current_top_box_start;"
    },
    {
        "line": 269,
        "fullcodeline": "mov->seg_styp = a;"
    },
    {
        "line": 330,
        "fullcodeline": "if (traf->trex->trackID == traf->tfhd->trackID) {"
    },
    {
        "line": 270,
        "fullcodeline": "} else if (a->type==GF_ISOM_BOX_TYPE_SSIX) {"
    },
    {
        "line": 272,
        "fullcodeline": "mov->seg_ssix = a;"
    },
    {
        "line": 331,
        "fullcodeline": "if (!traf->trex->track) traf->trex->track = trak;"
    },
    {
        "line": 274,
        "fullcodeline": "gf_isom_box_del(a);"
    }
]