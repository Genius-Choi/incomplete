[
    {
        "line": 4,
        "fullcodeline": "struct netdev_private *np = netdev_priv(dev);"
    },
    {
        "line": 5,
        "fullcodeline": "struct mii_data *miidata = (struct mii_data *) &rq->ifr_ifru;"
    },
    {
        "line": 10,
        "fullcodeline": "phy_addr = np->phy_addr;"
    },
    {
        "line": 15,
        "fullcodeline": "case SIOCDEVPRIVATE + 1:"
    },
    {
        "line": 16,
        "fullcodeline": "miidata->out_value = mii_read (dev, phy_addr, miidata->reg_num);"
    },
    {
        "line": 18,
        "fullcodeline": "case SIOCDEVPRIVATE + 2:"
    },
    {
        "line": 19,
        "fullcodeline": "mii_write (dev, phy_addr, miidata->reg_num, miidata->in_value);"
    },
    {
        "line": 21,
        "fullcodeline": "case SIOCDEVPRIVATE + 3:"
    },
    {
        "line": 23,
        "fullcodeline": "case SIOCDEVPRIVATE + 4:"
    },
    {
        "line": 25,
        "fullcodeline": "case SIOCDEVPRIVATE + 5:"
    },
    {
        "line": 26,
        "fullcodeline": "netif_stop_queue (dev);"
    },
    {
        "line": 28,
        "fullcodeline": "case SIOCDEVPRIVATE + 6:"
    },
    {
        "line": 29,
        "fullcodeline": "netif_wake_queue (dev);"
    },
    {
        "line": 31,
        "fullcodeline": "case SIOCDEVPRIVATE + 7:"
    },
    {
        "line": 32,
        "fullcodeline": "printk"
    },
    {
        "line": 37,
        "fullcodeline": "case SIOCDEVPRIVATE + 8:"
    },
    {
        "line": 38,
        "fullcodeline": "printk(\"TX ring:\\n\");"
    },
    {
        "line": 51,
        "fullcodeline": "printk (\"\\n\");"
    },
    {
        "line": 34,
        "fullcodeline": "netif_queue_stopped(dev), np->cur_tx, np->old_tx, np->cur_rx,"
    },
    {
        "line": 39,
        "fullcodeline": "for (i = 0; i < TX_RING_SIZE; i++) {"
    },
    {
        "line": 55,
        "fullcodeline": "return -EOPNOTSUPP;"
    },
    {
        "line": 41,
        "fullcodeline": "printk"
    },
    {
        "line": 49,
        "fullcodeline": "printk (\"\\n\");"
    },
    {
        "line": 44,
        "fullcodeline": "(u32) (np->tx_ring_dma + i * sizeof (*desc)),"
    },
    {
        "line": 45,
        "fullcodeline": "(u32)le64_to_cpu(desc->next_desc),"
    },
    {
        "line": 46,
        "fullcodeline": "(u32)le64_to_cpu(desc->status),"
    },
    {
        "line": 47,
        "fullcodeline": "(u32)(le64_to_cpu(desc->fraginfo) >> 32),"
    },
    {
        "line": 48,
        "fullcodeline": "(u32)le64_to_cpu(desc->fraginfo));"
    }
]