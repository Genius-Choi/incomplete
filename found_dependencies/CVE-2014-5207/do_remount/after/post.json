[
    {
        "line": 6,
        "fullcodeline": "struct mount *mnt = real_mount(path->mnt);"
    },
    {
        "line": 41,
        "fullcodeline": "err = security_sb_remount(sb, data);"
    },
    {
        "line": 45,
        "fullcodeline": "down_write(&sb->s_umount);"
    },
    {
        "line": 59,
        "fullcodeline": "up_write(&sb->s_umount);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!check_mnt(mnt))"
    },
    {
        "line": 11,
        "fullcodeline": "if (path->dentry != path->mnt->mnt_root)"
    },
    {
        "line": 20,
        "fullcodeline": "if ((mnt->mnt.mnt_flags & MNT_LOCK_READONLY) &&"
    },
    {
        "line": 24,
        "fullcodeline": "if ((mnt->mnt.mnt_flags & MNT_LOCK_NODEV) &&"
    },
    {
        "line": 28,
        "fullcodeline": "if ((mnt->mnt.mnt_flags & MNT_LOCK_NOSUID) &&"
    },
    {
        "line": 32,
        "fullcodeline": "if ((mnt->mnt.mnt_flags & MNT_LOCK_NOEXEC) &&"
    },
    {
        "line": 36,
        "fullcodeline": "if ((mnt->mnt.mnt_flags & MNT_LOCK_ATIME) &&"
    },
    {
        "line": 46,
        "fullcodeline": "if (flags & MS_BIND)"
    },
    {
        "line": 52,
        "fullcodeline": "if (!err) {"
    },
    {
        "line": 21,
        "fullcodeline": "!(mnt_flags & MNT_READONLY)) {"
    },
    {
        "line": 25,
        "fullcodeline": "!(mnt_flags & MNT_NODEV)) {"
    },
    {
        "line": 29,
        "fullcodeline": "!(mnt_flags & MNT_NOSUID)) {"
    },
    {
        "line": 33,
        "fullcodeline": "!(mnt_flags & MNT_NOEXEC)) {"
    },
    {
        "line": 37,
        "fullcodeline": "((mnt->mnt.mnt_flags & MNT_ATIME_MASK) != (mnt_flags & MNT_ATIME_MASK))) {"
    },
    {
        "line": 47,
        "fullcodeline": "err = change_mount_flags(path->mnt, flags);"
    },
    {
        "line": 53,
        "fullcodeline": "lock_mount_hash();"
    },
    {
        "line": 54,
        "fullcodeline": "mnt_flags |= mnt->mnt.mnt_flags & ~MNT_USER_SETTABLE_MASK;"
    },
    {
        "line": 55,
        "fullcodeline": "mnt->mnt.mnt_flags = mnt_flags;"
    },
    {
        "line": 56,
        "fullcodeline": "touch_mnt_namespace(mnt->mnt_ns);"
    },
    {
        "line": 57,
        "fullcodeline": "unlock_mount_hash();"
    },
    {
        "line": 9,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 12,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 22,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 26,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 30,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 34,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 38,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 48,
        "fullcodeline": "else if (!capable(CAP_SYS_ADMIN))"
    },
    {
        "line": 49,
        "fullcodeline": "err = -EPERM;"
    },
    {
        "line": 51,
        "fullcodeline": "err = do_remount_sb(sb, flags, data, 0);"
    }
]