[
    {
        "line": 5,
        "fullcodeline": "struct user_namespace *user_ns = current->nsproxy->mnt_ns->user_ns;"
    },
    {
        "line": 12,
        "fullcodeline": "type = get_fs_type(fstype);"
    },
    {
        "line": 30,
        "fullcodeline": "mnt = vfs_kern_mount(type, flags, name, data);"
    },
    {
        "line": 39,
        "fullcodeline": "err = do_add_mount(real_mount(mnt), path, mnt_flags);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!fstype)"
    },
    {
        "line": 13,
        "fullcodeline": "if (!type)"
    },
    {
        "line": 36,
        "fullcodeline": "if (IS_ERR(mnt))"
    },
    {
        "line": 31,
        "fullcodeline": "if (!IS_ERR(mnt) && (type->fs_flags & FS_HAS_SUBTYPE) &&"
    },
    {
        "line": 32,
        "fullcodeline": "!mnt->mnt_sb->s_subtype)"
    },
    {
        "line": 33,
        "fullcodeline": "mnt = fs_set_subtype(mnt, fstype);"
    },
    {
        "line": 10,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 14,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 37,
        "fullcodeline": "return PTR_ERR(mnt);"
    },
    {
        "line": 17,
        "fullcodeline": "if (!(type->fs_flags & FS_USERNS_MOUNT)) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (!(type->fs_flags & FS_USERNS_DEV_MOUNT)) {"
    },
    {
        "line": 25,
        "fullcodeline": "flags |= MS_NODEV;"
    },
    {
        "line": 26,
        "fullcodeline": "mnt_flags |= MNT_NODEV;"
    },
    {
        "line": 19,
        "fullcodeline": "return -EPERM;"
    }
]