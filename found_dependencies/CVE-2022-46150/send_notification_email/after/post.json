[
    {
        "line": 2,
        "fullcodeline": "post = opts[:post]"
    },
    {
        "line": 3,
        "fullcodeline": "title = opts[:title]"
    },
    {
        "line": 5,
        "fullcodeline": "allow_reply_by_email = opts[:allow_reply_by_email]"
    },
    {
        "line": 6,
        "fullcodeline": "use_site_subject = opts[:use_site_subject]"
    },
    {
        "line": 7,
        "fullcodeline": "add_re_to_subject = opts[:add_re_to_subject] && post.post_number > 1"
    },
    {
        "line": 8,
        "fullcodeline": "use_topic_title_subject = opts[:use_topic_title_subject]"
    },
    {
        "line": 9,
        "fullcodeline": "username = opts[:username]"
    },
    {
        "line": 10,
        "fullcodeline": "from_alias = opts[:from_alias]"
    },
    {
        "line": 11,
        "fullcodeline": "notification_type = opts[:notification_type]"
    },
    {
        "line": 12,
        "fullcodeline": "user = opts[:user]"
    },
    {
        "line": 13,
        "fullcodeline": "group_name = opts[:group_name]"
    },
    {
        "line": 14,
        "fullcodeline": "locale = user_locale(user)"
    },
    {
        "line": 16,
        "fullcodeline": "template = +\"user_notifications.user_#{notification_type}\""
    },
    {
        "line": 74,
        "fullcodeline": "context = +\"\""
    },
    {
        "line": 75,
        "fullcodeline": "tu = TopicUser.get(post.topic_id, user)"
    },
    {
        "line": 76,
        "fullcodeline": "context_posts = self.class.get_context_posts(post, tu, user)"
    },
    {
        "line": 79,
        "fullcodeline": "context_posts = context_posts.to_a"
    },
    {
        "line": 157,
        "fullcodeline": "email_opts = {"
    },
    {
        "line": 195,
        "fullcodeline": "TopicUser.change(user.id, post.topic_id, last_emailed_post_number: post.post_number)"
    },
    {
        "line": 29,
        "fullcodeline": "if opts[:show_category_in_subject] && post.topic_id && category && !category.uncategorized?"
    },
    {
        "line": 41,
        "fullcodeline": "if opts[:show_tags_in_subject] && post.topic_id"
    },
    {
        "line": 188,
        "fullcodeline": "unless translation_override_exists"
    },
    {
        "line": 197,
        "fullcodeline": "build_email(user.email, email_opts)"
    },
    {
        "line": 17,
        "fullcodeline": "if post.topic.private_message?"
    },
    {
        "line": 18,
        "fullcodeline": "template << \"_pm\""
    },
    {
        "line": 28,
        "fullcodeline": "category = Topic.find_by(id: post.topic_id)&.category"
    },
    {
        "line": 30,
        "fullcodeline": "show_category_in_subject = category.name"
    },
    {
        "line": 37,
        "fullcodeline": "show_category_in_subject = nil"
    },
    {
        "line": 42,
        "fullcodeline": "tags ="
    },
    {
        "line": 50,
        "fullcodeline": "show_tags_in_subject = tags.any? ? tags.join(\" \") : nil"
    },
    {
        "line": 55,
        "fullcodeline": "if post.topic.private_message?"
    },
    {
        "line": 57,
        "fullcodeline": "if opts[:show_group_in_subject] && group.present?"
    },
    {
        "line": 67,
        "fullcodeline": "participants = self.class.participants(post, user)"
    },
    {
        "line": 71,
        "fullcodeline": "title = I18n.t(\"system_messages.private_topic_title\", id: post.topic_id)"
    },
    {
        "line": 82,
        "fullcodeline": "context << +\"-- \\n*#{I18n.t('user_notifications.previous_discussion')}*\\n\""
    },
    {
        "line": 83,
        "fullcodeline": "context_posts.each do |cp|"
    },
    {
        "line": 88,
        "fullcodeline": "translation_override_exists = TranslationOverride.where("
    },
    {
        "line": 94,
        "fullcodeline": "invite_template = +\"user_notifications.invited\""
    },
    {
        "line": 97,
        "fullcodeline": "invite_template <<"
    },
    {
        "line": 112,
        "fullcodeline": "message = I18n.t(invite_template,"
    },
    {
        "line": 124,
        "fullcodeline": "reached_limit = SiteSetting.max_emails_per_day_per_user > 0"
    },
    {
        "line": 136,
        "fullcodeline": "first_footer_classes = \"highlight\""
    },
    {
        "line": 158,
        "fullcodeline": "topic_title: Emoji.gsub_emoji_to_unicode(title),"
    },
    {
        "line": 159,
        "fullcodeline": "topic_title_url_encoded: title ? UrlHelper.encode_component(title) : title,"
    },
    {
        "line": 160,
        "fullcodeline": "message: message,"
    },
    {
        "line": 161,
        "fullcodeline": "url: post.url(without_slug: SiteSetting.private_email?),"
    },
    {
        "line": 162,
        "fullcodeline": "post_id: post.id,"
    },
    {
        "line": 163,
        "fullcodeline": "topic_id: post.topic_id,"
    },
    {
        "line": 164,
        "fullcodeline": "context: context,"
    },
    {
        "line": 165,
        "fullcodeline": "username: username,"
    },
    {
        "line": 166,
        "fullcodeline": "group_name: group_name,"
    },
    {
        "line": 167,
        "fullcodeline": "add_unsubscribe_link: !user.staged,"
    },
    {
        "line": 169,
        "fullcodeline": "unsubscribe_url: post.unsubscribe_url(user),"
    },
    {
        "line": 170,
        "fullcodeline": "allow_reply_by_email: allow_reply_by_email,"
    },
    {
        "line": 171,
        "fullcodeline": "only_reply_by_email: allow_reply_by_email && user.staged,"
    },
    {
        "line": 172,
        "fullcodeline": "use_site_subject: use_site_subject,"
    },
    {
        "line": 173,
        "fullcodeline": "add_re_to_subject: add_re_to_subject,"
    },
    {
        "line": 174,
        "fullcodeline": "show_category_in_subject: show_category_in_subject,"
    },
    {
        "line": 175,
        "fullcodeline": "show_tags_in_subject: show_tags_in_subject,"
    },
    {
        "line": 177,
        "fullcodeline": "subject_pm: subject_pm,"
    },
    {
        "line": 178,
        "fullcodeline": "participants: participants,"
    },
    {
        "line": 179,
        "fullcodeline": "include_respond_instructions: !(user.suspended? || user.staged?),"
    },
    {
        "line": 180,
        "fullcodeline": "template: template,"
    },
    {
        "line": 181,
        "fullcodeline": "use_topic_title_subject: use_topic_title_subject,"
    },
    {
        "line": 182,
        "fullcodeline": "site_description: SiteSetting.site_description,"
    },
    {
        "line": 183,
        "fullcodeline": "site_title: SiteSetting.title,"
    },
    {
        "line": 184,
        "fullcodeline": "site_title_url_encoded: UrlHelper.encode_component(SiteSetting.title),"
    },
    {
        "line": 185,
        "fullcodeline": "locale: locale"
    },
    {
        "line": 189,
        "fullcodeline": "email_opts[:html_override] = html"
    },
    {
        "line": 193,
        "fullcodeline": "email_opts[:from_alias] = from_alias if from_alias.present?"
    },
    {
        "line": 43,
        "fullcodeline": "DiscourseTagging"
    },
    {
        "line": 104,
        "fullcodeline": "topic_excerpt = post.excerpt.tr(\"\\n\", \" \") if post.is_first_post? && post.excerpt"
    },
    {
        "line": 125,
        "fullcodeline": "reached_limit &&= (EmailLog.where(user_id: user.id)"
    },
    {
        "line": 137,
        "fullcodeline": "if (allow_reply_by_email && user.staged) || (user.suspended? || user.staged?)"
    },
    {
        "line": 141,
        "fullcodeline": "unless translation_override_exists"
    },
    {
        "line": 21,
        "fullcodeline": "template << \"_group\""
    },
    {
        "line": 34,
        "fullcodeline": "show_category_in_subject = \"#{Category.where(id: category.parent_category_id).pluck_first(:name)}/#{show_category_in_subject}\""
    },
    {
        "line": 53,
        "fullcodeline": "group = post.topic.allowed_groups&.first"
    },
    {
        "line": 63,
        "fullcodeline": "else"
    },
    {
        "line": 90,
        "fullcodeline": "translation_key: \"#{template}.text_body_template\""
    },
    {
        "line": 95,
        "fullcodeline": "invite_template << \"_group\" if group_name"
    },
    {
        "line": 105,
        "fullcodeline": "topic_url = post.topic&.url"
    },
    {
        "line": 108,
        "fullcodeline": "topic_excerpt = \"\""
    },
    {
        "line": 109,
        "fullcodeline": "topic_url = \"\""
    },
    {
        "line": 115,
        "fullcodeline": "topic_title: gsub_emoji_to_unicode(title),"
    },
    {
        "line": 122,
        "fullcodeline": "html = PrettyText.cook(message, sanitize: false).html_safe"
    },
    {
        "line": 129,
        "fullcodeline": "in_reply_to_post = post.reply_to_post if user.user_option.email_in_reply_to"
    },
    {
        "line": 131,
        "fullcodeline": "message = I18n.t('system_messages.contents_hidden')"
    },
    {
        "line": 133,
        "fullcodeline": "message = email_post_markdown(post) + (reached_limit ? \"\\n\\n#{I18n.t \"user_notifications.reached_limit\", count: SiteSetting.max_emails_per_day_per_user}\" : \"\")"
    },
    {
        "line": 138,
        "fullcodeline": "first_footer_classes = \"\""
    },
    {
        "line": 142,
        "fullcodeline": "html = UserNotificationRenderer.render("
    },
    {
        "line": 168,
        "fullcodeline": "mailing_list_mode: user.user_option.mailing_list_mode,"
    },
    {
        "line": 176,
        "fullcodeline": "private_reply: post.topic.private_message?,"
    },
    {
        "line": 33,
        "fullcodeline": "if !category.parent_category_id.nil?"
    },
    {
        "line": 64,
        "fullcodeline": "I18n.t('subject_pm')"
    },
    {
        "line": 98,
        "fullcodeline": "if post.topic.private_message?"
    },
    {
        "line": 23,
        "fullcodeline": "template << \"_staged\""
    },
    {
        "line": 59,
        "fullcodeline": "\"[#{group.full_name}] \""
    },
    {
        "line": 60,
        "fullcodeline": "else"
    },
    {
        "line": 127,
        "fullcodeline": ".count) >= (SiteSetting.max_emails_per_day_per_user - 1)"
    },
    {
        "line": 61,
        "fullcodeline": "\"[#{group.name}] \""
    },
    {
        "line": 145,
        "fullcodeline": "locals: { context_posts: context_posts,"
    },
    {
        "line": 146,
        "fullcodeline": "reached_limit: reached_limit,"
    },
    {
        "line": 147,
        "fullcodeline": "post: post,"
    },
    {
        "line": 148,
        "fullcodeline": "in_reply_to_post: in_reply_to_post,"
    },
    {
        "line": 150,
        "fullcodeline": "first_footer_classes: first_footer_classes,"
    },
    {
        "line": 151,
        "fullcodeline": "reply_above_line: false"
    },
    {
        "line": 149,
        "fullcodeline": "classes: Rtl.new(user).css_class,"
    },
    {
        "line": 44,
        "fullcodeline": ".visible_tags(Guardian.new(user))"
    }
]