[
    {
        "line": 5,
        "fullcodeline": "zval **var = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);"
    },
    {
        "line": 16,
        "fullcodeline": "npoints = NPOINTS;"
    },
    {
        "line": 17,
        "fullcodeline": "col = COL;"
    },
    {
        "line": 19,
        "fullcodeline": "nelem = zend_hash_num_elements(Z_ARRVAL_P(POINTS));"
    },
    {
        "line": 33,
        "fullcodeline": "points = (gdPointPtr) safe_emalloc(npoints, sizeof(gdPoint), 0);"
    },
    {
        "line": 20,
        "fullcodeline": "if (nelem < 6) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (npoints <= 0) {"
    },
    {
        "line": 35,
        "fullcodeline": "for (i = 0; i < npoints; i++) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (nelem < npoints * 2) {"
    },
    {
        "line": 49,
        "fullcodeline": "gdImageFilledPolygon(im, points, npoints, col);"
    },
    {
        "line": 36,
        "fullcodeline": "if (zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2), (void **) &var) == SUCCESS) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2) + 1, (void **) &var) == SUCCESS) {"
    },
    {
        "line": 51,
        "fullcodeline": "gdImagePolygon(im, points, npoints, col);"
    },
    {
        "line": 37,
        "fullcodeline": "SEPARATE_ZVAL((var));"
    },
    {
        "line": 38,
        "fullcodeline": "convert_to_long(*var);"
    },
    {
        "line": 42,
        "fullcodeline": "SEPARATE_ZVAL(var);"
    },
    {
        "line": 43,
        "fullcodeline": "convert_to_long(*var);"
    },
    {
        "line": 39,
        "fullcodeline": "points[i].x = Z_LVAL_PP(var);"
    },
    {
        "line": 44,
        "fullcodeline": "points[i].y = Z_LVAL_PP(var);"
    }
]