[
    {
        "line": 4,
        "fullcodeline": "route = env['PATH_INFO'].split(\"#{@bus.base_route}message-bus/_diagnostics\")[1]"
    },
    {
        "line": 24,
        "fullcodeline": "asset = route.split('/assets/')[1]"
    },
    {
        "line": 2,
        "fullcodeline": "return @app.call(env) unless env['PATH_INFO'].start_with? \"#{@bus.base_route}message-bus/_diagnostics\""
    },
    {
        "line": 10,
        "fullcodeline": "return index unless route"
    },
    {
        "line": 12,
        "fullcodeline": "if route == '/discover'"
    },
    {
        "line": 18,
        "fullcodeline": "if route =~ /^\\/hup\\//"
    },
    {
        "line": 26,
        "fullcodeline": "if asset && JS_ASSETS.include?(asset)"
    },
    {
        "line": 31,
        "fullcodeline": "[404, {}, ['not found']]"
    },
    {
        "line": 6,
        "fullcodeline": "if @bus.is_admin_lookup.nil? || !@bus.is_admin_lookup.call(env)"
    },
    {
        "line": 13,
        "fullcodeline": "user_id = @bus.user_id_lookup.call(env)"
    },
    {
        "line": 19,
        "fullcodeline": "hostname, pid = route.split('/hup/')[1].split('/')"
    },
    {
        "line": 27,
        "fullcodeline": "content = asset_contents(asset)"
    },
    {
        "line": 7,
        "fullcodeline": "return [403, {}, ['not allowed']]"
    },
    {
        "line": 15,
        "fullcodeline": "return [200, {}, ['ok']]"
    },
    {
        "line": 21,
        "fullcodeline": "return [200, {}, ['ok']]"
    },
    {
        "line": 28,
        "fullcodeline": "return [200, { 'Content-Type' => 'application/javascript;charset=UTF-8' }, [content]]"
    },
    {
        "line": 14,
        "fullcodeline": "@bus.publish('/_diagnostics/discover', user_id: user_id)"
    },
    {
        "line": 20,
        "fullcodeline": "@bus.publish('/_diagnostics/hup', hostname: hostname, pid: pid.to_i)"
    }
]