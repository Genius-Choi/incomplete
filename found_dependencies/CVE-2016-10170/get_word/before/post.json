[
    {
        "line": 3,
        "fullcodeline": "register struct entropy_data *c = wps->w.c + chan;"
    },
    {
        "line": 223,
        "fullcodeline": "low &= 0x7fffffff;"
    },
    {
        "line": 224,
        "fullcodeline": "high &= 0x7fffffff;"
    },
    {
        "line": 225,
        "fullcodeline": "mid = (high + low + 1) >> 1;"
    },
    {
        "line": 236,
        "fullcodeline": "sign = getbit (&wps->wvbits);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!(wps->w.c [0].median [0] & ~1) && !wps->w.holding_zero && !wps->w.holding_one && !(wps->w.c [1].median [0] & ~1)) {"
    },
    {
        "line": 191,
        "fullcodeline": "if ((wps->wphdr.flags & HYBRID_FLAG) && !chan)"
    },
    {
        "line": 194,
        "fullcodeline": "if (ones_count == 0) {"
    },
    {
        "line": 227,
        "fullcodeline": "if (!c->error_limit)"
    },
    {
        "line": 238,
        "fullcodeline": "if (bs_is_open (&wps->wvcbits) && c->error_limit) {"
    },
    {
        "line": 245,
        "fullcodeline": "if (wps->wphdr.flags & HYBRID_BITRATE) {"
    },
    {
        "line": 250,
        "fullcodeline": "return sign ? ~mid : mid;"
    },
    {
        "line": 12,
        "fullcodeline": "*correction = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "ones_count = wps->w.holding_zero = 0;"
    },
    {
        "line": 192,
        "fullcodeline": "update_error_limit (wps);"
    },
    {
        "line": 195,
        "fullcodeline": "low = 0;"
    },
    {
        "line": 196,
        "fullcodeline": "high = GET_MED (0) - 1;"
    },
    {
        "line": 197,
        "fullcodeline": "DEC_MED0 ();"
    },
    {
        "line": 228,
        "fullcodeline": "mid = read_code (&wps->wvbits, high - low) + low;"
    },
    {
        "line": 239,
        "fullcodeline": "value = read_code (&wps->wvcbits, high - low) + low;"
    },
    {
        "line": 246,
        "fullcodeline": "c->slow_level -= (c->slow_level + SLO) >> SLS;"
    },
    {
        "line": 247,
        "fullcodeline": "c->slow_level += wp_log2 (mid);"
    },
    {
        "line": 188,
        "fullcodeline": "wps->w.holding_zero = ~wps->w.holding_one & 1;"
    },
    {
        "line": 200,
        "fullcodeline": "low = GET_MED (0);"
    },
    {
        "line": 201,
        "fullcodeline": "INC_MED0 ();"
    },
    {
        "line": 151,
        "fullcodeline": "for (ones_count = 0; ones_count < (LIMIT_ONES + 1) && getbit (&wps->wvbits); ++ones_count);"
    },
    {
        "line": 153,
        "fullcodeline": "if (ones_count >= LIMIT_ONES) {"
    },
    {
        "line": 203,
        "fullcodeline": "if (ones_count == 1) {"
    },
    {
        "line": 229,
        "fullcodeline": "else while (high - low > c->error_limit) {"
    },
    {
        "line": 242,
        "fullcodeline": "*correction = sign ? (mid - value) : (value - mid);"
    },
    {
        "line": 175,
        "fullcodeline": "ones_count += LIMIT_ONES;"
    },
    {
        "line": 180,
        "fullcodeline": "wps->w.holding_one = ones_count & 1;"
    },
    {
        "line": 181,
        "fullcodeline": "ones_count = (ones_count >> 1) + 1;"
    },
    {
        "line": 204,
        "fullcodeline": "high = low + GET_MED (1) - 1;"
    },
    {
        "line": 205,
        "fullcodeline": "DEC_MED1 ();"
    },
    {
        "line": 20,
        "fullcodeline": "c->slow_level -= (c->slow_level + SLO) >> SLS;"
    },
    {
        "line": 25,
        "fullcodeline": "for (cbits = 0; cbits < 33 && getbit (&wps->wvbits); ++cbits);"
    },
    {
        "line": 27,
        "fullcodeline": "if (cbits == 33)"
    },
    {
        "line": 30,
        "fullcodeline": "if (cbits < 2)"
    },
    {
        "line": 157,
        "fullcodeline": "if (ones_count == (LIMIT_ONES + 1))"
    },
    {
        "line": 160,
        "fullcodeline": "for (cbits = 0; cbits < 33 && getbit (&wps->wvbits); ++cbits);"
    },
    {
        "line": 162,
        "fullcodeline": "if (cbits == 33)"
    },
    {
        "line": 165,
        "fullcodeline": "if (cbits < 2)"
    },
    {
        "line": 184,
        "fullcodeline": "wps->w.holding_one = ones_count & 1;"
    },
    {
        "line": 185,
        "fullcodeline": "ones_count >>= 1;"
    },
    {
        "line": 208,
        "fullcodeline": "low += GET_MED (1);"
    },
    {
        "line": 209,
        "fullcodeline": "INC_MED1 ();"
    },
    {
        "line": 230,
        "fullcodeline": "if (getbit (&wps->wvbits))"
    },
    {
        "line": 31,
        "fullcodeline": "wps->w.zeros_acc = cbits;"
    },
    {
        "line": 41,
        "fullcodeline": "c->slow_level -= (c->slow_level + SLO) >> SLS;"
    },
    {
        "line": 42,
        "fullcodeline": "CLEAR (wps->w.c [0].median);"
    },
    {
        "line": 43,
        "fullcodeline": "CLEAR (wps->w.c [1].median);"
    },
    {
        "line": 166,
        "fullcodeline": "ones_count = cbits;"
    },
    {
        "line": 211,
        "fullcodeline": "if (ones_count == 2) {"
    },
    {
        "line": 231,
        "fullcodeline": "mid = (high + (low = mid) + 1) >> 1;"
    },
    {
        "line": 37,
        "fullcodeline": "wps->w.zeros_acc |= mask;"
    },
    {
        "line": 172,
        "fullcodeline": "ones_count |= mask;"
    },
    {
        "line": 212,
        "fullcodeline": "high = low + GET_MED (2) - 1;"
    },
    {
        "line": 213,
        "fullcodeline": "DEC_MED2 ();"
    },
    {
        "line": 233,
        "fullcodeline": "mid = ((high = mid - 1) + low + 1) >> 1;"
    },
    {
        "line": 33,
        "fullcodeline": "for (mask = 1, wps->w.zeros_acc = 0; --cbits; mask <<= 1)"
    },
    {
        "line": 168,
        "fullcodeline": "for (mask = 1, ones_count = 0; --cbits; mask <<= 1)"
    },
    {
        "line": 216,
        "fullcodeline": "low += (ones_count - 2) * GET_MED (2);"
    },
    {
        "line": 217,
        "fullcodeline": "high = low + GET_MED (2) - 1;"
    },
    {
        "line": 218,
        "fullcodeline": "INC_MED2 ();"
    },
    {
        "line": 34,
        "fullcodeline": "if (getbit (&wps->wvbits))"
    },
    {
        "line": 169,
        "fullcodeline": "if (getbit (&wps->wvbits))"
    },
    {
        "line": 35,
        "fullcodeline": "wps->w.zeros_acc |= mask;"
    },
    {
        "line": 170,
        "fullcodeline": "ones_count |= mask;"
    }
]