[
    {
        "line": 3,
        "fullcodeline": "struct netlink_sock *nlk = nlk_sk(sk);"
    },
    {
        "line": 5,
        "fullcodeline": "struct sk_buff *skb = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "int len, err = -ENOBUFS;"
    },
    {
        "line": 12,
        "fullcodeline": "mutex_lock(nlk->cb_mutex);"
    },
    {
        "line": 26,
        "fullcodeline": "cb = &nlk->cb;"
    },
    {
        "line": 51,
        "fullcodeline": "skb_reserve(skb, skb_tailroom(skb) - alloc_size);"
    },
    {
        "line": 52,
        "fullcodeline": "netlink_skb_set_owner_r(skb, sk);"
    },
    {
        "line": 54,
        "fullcodeline": "len = cb->dump(skb, cb);"
    },
    {
        "line": 66,
        "fullcodeline": "nlh = nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(len), NLM_F_MULTI);"
    },
    {
        "line": 70,
        "fullcodeline": "nl_dump_check_consistent(cb, nlh);"
    },
    {
        "line": 82,
        "fullcodeline": "nlk->cb_running = false;"
    },
    {
        "line": 83,
        "fullcodeline": "module = cb->module;"
    },
    {
        "line": 84,
        "fullcodeline": "skb = cb->skb;"
    },
    {
        "line": 13,
        "fullcodeline": "if (!nlk->cb_running) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (atomic_read(&sk->sk_rmem_alloc) >= sk->sk_rcvbuf)"
    },
    {
        "line": 29,
        "fullcodeline": "if (alloc_min_size < nlk->max_recvmsg_len) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (!skb) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (!skb)"
    },
    {
        "line": 56,
        "fullcodeline": "if (len > 0) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (!nlh)"
    },
    {
        "line": 72,
        "fullcodeline": "memcpy(nlmsg_data(nlh), &len, sizeof(len));"
    },
    {
        "line": 74,
        "fullcodeline": "if (sk_filter(sk, skb))"
    },
    {
        "line": 14,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 30,
        "fullcodeline": "alloc_size = nlk->max_recvmsg_len;"
    },
    {
        "line": 31,
        "fullcodeline": "skb = alloc_skb(alloc_size, GFP_KERNEL |"
    },
    {
        "line": 35,
        "fullcodeline": "alloc_size = alloc_min_size;"
    },
    {
        "line": 36,
        "fullcodeline": "skb = alloc_skb(alloc_size, GFP_KERNEL);"
    },
    {
        "line": 57,
        "fullcodeline": "mutex_unlock(nlk->cb_mutex);"
    },
    {
        "line": 80,
        "fullcodeline": "cb->done(cb);"
    },
    {
        "line": 59,
        "fullcodeline": "if (sk_filter(sk, skb))"
    },
    {
        "line": 60,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 62,
        "fullcodeline": "__netlink_sendskb(sk, skb);"
    }
]