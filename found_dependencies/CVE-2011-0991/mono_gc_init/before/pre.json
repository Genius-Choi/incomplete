[
    {
        "line": 3,
        "fullcodeline": "InitializeCriticalSection (&handle_section);"
    },
    {
        "line": 4,
        "fullcodeline": "InitializeCriticalSection (&allocator_section);"
    },
    {
        "line": 6,
        "fullcodeline": "InitializeCriticalSection (&finalizer_mutex);"
    },
    {
        "line": 8,
        "fullcodeline": "MONO_GC_REGISTER_ROOT_FIXED (gc_handles [HANDLE_NORMAL].entries);"
    },
    {
        "line": 9,
        "fullcodeline": "MONO_GC_REGISTER_ROOT_FIXED (gc_handles [HANDLE_PINNED].entries);"
    },
    {
        "line": 11,
        "fullcodeline": "mono_gc_base_init ();"
    },
    {
        "line": 18,
        "fullcodeline": "finalizer_event = CreateEvent (NULL, FALSE, FALSE, NULL);"
    },
    {
        "line": 19,
        "fullcodeline": "pending_done_event = CreateEvent (NULL, TRUE, FALSE, NULL);"
    },
    {
        "line": 20,
        "fullcodeline": "shutdown_event = CreateEvent (NULL, TRUE, FALSE, NULL);"
    },
    {
        "line": 28,
        "fullcodeline": "gc_thread = mono_thread_create_internal (mono_domain_get (), finalizer_thread, NULL, FALSE);"
    },
    {
        "line": 13,
        "fullcodeline": "if (mono_gc_is_disabled ()) {"
    },
    {
        "line": 29,
        "fullcodeline": "ves_icall_System_Threading_Thread_SetName_internal (gc_thread, mono_string_new (mono_domain_get (), \"Finalizer\"));"
    },
    {
        "line": 14,
        "fullcodeline": "gc_disabled = TRUE;"
    },
    {
        "line": 21,
        "fullcodeline": "if (finalizer_event == NULL || pending_done_event == NULL || shutdown_event == NULL) {"
    }
]