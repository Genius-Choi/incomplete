[
    {
        "line": 3,
        "fullcodeline": "run_uuid = args.get(\"run_uuid\")"
    },
    {
        "line": 9,
        "fullcodeline": "path = args.get(\"path\")"
    },
    {
        "line": 15,
        "fullcodeline": "path = validate_path_is_safe(path)"
    },
    {
        "line": 30,
        "fullcodeline": "run = _get_tracking_store().get_run(run_uuid)"
    },
    {
        "line": 33,
        "fullcodeline": "basename = posixpath.basename(path)"
    },
    {
        "line": 34,
        "fullcodeline": "dirname = posixpath.dirname(path)"
    },
    {
        "line": 36,
        "fullcodeline": "def _log_artifact_to_repo(file, run, dirname, artifact_dir):"
    },
    {
        "line": 4,
        "fullcodeline": "if not run_uuid:"
    },
    {
        "line": 10,
        "fullcodeline": "if not path:"
    },
    {
        "line": 17,
        "fullcodeline": "if request.content_length and request.content_length > 10 * 1024 * 1024:"
    },
    {
        "line": 24,
        "fullcodeline": "if not data:"
    },
    {
        "line": 50,
        "fullcodeline": "with tempfile.TemporaryDirectory() as tmpdir:"
    },
    {
        "line": 61,
        "fullcodeline": "return Response(mimetype=\"application/json\")"
    },
    {
        "line": 5,
        "fullcodeline": "raise MlflowException("
    },
    {
        "line": 11,
        "fullcodeline": "raise MlflowException("
    },
    {
        "line": 18,
        "fullcodeline": "raise MlflowException("
    },
    {
        "line": 25,
        "fullcodeline": "raise MlflowException("
    },
    {
        "line": 51,
        "fullcodeline": "dir_path = os.path.join(tmpdir, dirname) if dirname else tmpdir"
    },
    {
        "line": 52,
        "fullcodeline": "file_path = os.path.join(dir_path, basename)"
    },
    {
        "line": 54,
        "fullcodeline": "os.makedirs(dir_path, exist_ok=True)"
    },
    {
        "line": 59,
        "fullcodeline": "_log_artifact_to_repo(file_path, run, dirname, artifact_dir)"
    },
    {
        "line": 56,
        "fullcodeline": "with open(file_path, \"wb\") as f:"
    },
    {
        "line": 57,
        "fullcodeline": "f.write(data)"
    }
]