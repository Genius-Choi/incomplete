[
    {
        "line": 6,
        "fullcodeline": "artifact_path = validate_path_is_safe(artifact_path)"
    },
    {
        "line": 8,
        "fullcodeline": "request_message = _get_request_message("
    },
    {
        "line": 15,
        "fullcodeline": "path = request_message.path"
    },
    {
        "line": 16,
        "fullcodeline": "upload_id = request_message.upload_id"
    },
    {
        "line": 18,
        "fullcodeline": "artifact_repo = _get_artifact_repo_mlflow_artifacts()"
    },
    {
        "line": 19,
        "fullcodeline": "_validate_support_multipart_upload(artifact_repo)"
    },
    {
        "line": 21,
        "fullcodeline": "artifact_repo.abort_multipart_upload("
    },
    {
        "line": 26,
        "fullcodeline": "return _wrap_response(AbortMultipartUpload.Response())"
    },
    {
        "line": 10,
        "fullcodeline": "schema={"
    },
    {
        "line": 11,
        "fullcodeline": "\"path\": [_assert_required, _assert_string],"
    },
    {
        "line": 12,
        "fullcodeline": "\"upload_id\": [_assert_string],"
    }
]