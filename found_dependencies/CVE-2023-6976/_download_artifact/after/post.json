[
    {
        "line": 6,
        "fullcodeline": "artifact_path = validate_path_is_safe(artifact_path)"
    },
    {
        "line": 7,
        "fullcodeline": "tmp_dir = tempfile.TemporaryDirectory()"
    },
    {
        "line": 8,
        "fullcodeline": "artifact_repo = _get_artifact_repo_mlflow_artifacts()"
    },
    {
        "line": 9,
        "fullcodeline": "dst = artifact_repo.download_artifacts(artifact_path, tmp_dir.name)"
    },
    {
        "line": 12,
        "fullcodeline": "file_handle = open(dst, \"rb\")  # noqa: SIM115"
    },
    {
        "line": 14,
        "fullcodeline": "def stream_and_remove_file():"
    },
    {
        "line": 19,
        "fullcodeline": "file_sender_response = current_app.response_class(stream_and_remove_file())"
    },
    {
        "line": 21,
        "fullcodeline": "return _response_with_file_attachment_headers(artifact_path, file_sender_response)"
    }
]