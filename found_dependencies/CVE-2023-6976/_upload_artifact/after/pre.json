[
    {
        "line": 6,
        "fullcodeline": "artifact_path = validate_path_is_safe(artifact_path)"
    },
    {
        "line": 7,
        "fullcodeline": "head, tail = posixpath.split(artifact_path)"
    },
    {
        "line": 8,
        "fullcodeline": "with tempfile.TemporaryDirectory() as tmp_dir:"
    },
    {
        "line": 21,
        "fullcodeline": "return _wrap_response(UploadArtifact.Response())"
    },
    {
        "line": 9,
        "fullcodeline": "tmp_path = os.path.join(tmp_dir, tail)"
    },
    {
        "line": 18,
        "fullcodeline": "artifact_repo = _get_artifact_repo_mlflow_artifacts()"
    },
    {
        "line": 19,
        "fullcodeline": "artifact_repo.log_artifact(tmp_path, artifact_path=head or None)"
    },
    {
        "line": 10,
        "fullcodeline": "with open(tmp_path, \"wb\") as f:"
    },
    {
        "line": 11,
        "fullcodeline": "chunk_size = 1024 * 1024  # 1 MB"
    },
    {
        "line": 13,
        "fullcodeline": "chunk = request.stream.read(chunk_size)"
    },
    {
        "line": 16,
        "fullcodeline": "f.write(chunk)"
    },
    {
        "line": 14,
        "fullcodeline": "if len(chunk) == 0:"
    }
]