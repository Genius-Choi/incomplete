[
    {
        "line": 6,
        "fullcodeline": "request_message = _get_request_message(ListArtifactsMlflowArtifacts())"
    },
    {
        "line": 12,
        "fullcodeline": "artifact_repo = _get_artifact_repo_mlflow_artifacts()"
    },
    {
        "line": 13,
        "fullcodeline": "files = []"
    },
    {
        "line": 18,
        "fullcodeline": "response_message = ListArtifacts.Response()"
    },
    {
        "line": 20,
        "fullcodeline": "response = Response(mimetype=\"application/json\")"
    },
    {
        "line": 21,
        "fullcodeline": "response.set_data(message_to_json(response_message))"
    },
    {
        "line": 7,
        "fullcodeline": "if request_message.HasField(\"path\"):"
    },
    {
        "line": 14,
        "fullcodeline": "for file_info in artifact_repo.list_artifacts(path):"
    },
    {
        "line": 19,
        "fullcodeline": "response_message.files.extend(files)"
    },
    {
        "line": 8,
        "fullcodeline": "validate_path_is_safe(request_message.path)"
    },
    {
        "line": 9,
        "fullcodeline": "path = request_message.path"
    },
    {
        "line": 11,
        "fullcodeline": "path = None"
    },
    {
        "line": 15,
        "fullcodeline": "basename = posixpath.basename(file_info.path)"
    },
    {
        "line": 16,
        "fullcodeline": "new_file_info = FileInfo(basename, file_info.is_dir, file_info.file_size)"
    },
    {
        "line": 17,
        "fullcodeline": "files.append(new_file_info.to_proto())"
    }
]