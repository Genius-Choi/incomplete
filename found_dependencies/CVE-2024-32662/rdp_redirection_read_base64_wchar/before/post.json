[
    {
        "line": 4,
        "fullcodeline": "BOOL rc = FALSE;"
    },
    {
        "line": 5,
        "fullcodeline": "char buffer[64] = { 0 };"
    },
    {
        "line": 6,
        "fullcodeline": "const BYTE* ptr = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "const WCHAR* wchar = (const WCHAR*)ptr;"
    },
    {
        "line": 12,
        "fullcodeline": "size_t utf8_len = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "char* utf8 = ConvertWCharNToUtf8Alloc(wchar, *pLength, &utf8_len);"
    },
    {
        "line": 17,
        "fullcodeline": "redirection_free_data(pData, NULL);"
    },
    {
        "line": 19,
        "fullcodeline": "utf8_len = strnlen(utf8, utf8_len);"
    },
    {
        "line": 20,
        "fullcodeline": "*pData = calloc(utf8_len, sizeof(BYTE));"
    },
    {
        "line": 24,
        "fullcodeline": "size_t rlen = utf8_len;"
    },
    {
        "line": 25,
        "fullcodeline": "size_t wpos = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "char* tok = strtok(utf8, \"\\r\\n\");"
    },
    {
        "line": 43,
        "fullcodeline": "*pLength = wpos;"
    },
    {
        "line": 45,
        "fullcodeline": "WLog_DBG(TAG, \"%s:\", rdp_redirection_flags_to_string(flag, buffer, sizeof(buffer)));"
    },
    {
        "line": 47,
        "fullcodeline": "rc = TRUE;"
    },
    {
        "line": 51,
        "fullcodeline": "free(utf8);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!rdp_redirection_get_data(s, pLength, &ptr))"
    },
    {
        "line": 14,
        "fullcodeline": "if (!utf8)"
    },
    {
        "line": 21,
        "fullcodeline": "if (!*pData)"
    },
    {
        "line": 49,
        "fullcodeline": "if (!rc)"
    },
    {
        "line": 29,
        "fullcodeline": "const size_t len = strnlen(tok, rlen);"
    },
    {
        "line": 30,
        "fullcodeline": "rlen -= len;"
    },
    {
        "line": 32,
        "fullcodeline": "size_t bplen = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "BYTE* bptr = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "crypto_base64_decode(tok, len, &bptr, &bplen);"
    },
    {
        "line": 37,
        "fullcodeline": "memcpy(&(*pData)[wpos], bptr, bplen);"
    },
    {
        "line": 38,
        "fullcodeline": "wpos += bplen;"
    },
    {
        "line": 39,
        "fullcodeline": "free(bptr);"
    },
    {
        "line": 41,
        "fullcodeline": "tok = strtok(NULL, \"\\r\\n\");"
    },
    {
        "line": 50,
        "fullcodeline": "WLog_ERR(TAG, \"failed to read base64 data\");"
    },
    {
        "line": 35,
        "fullcodeline": "if (!bptr)"
    }
]