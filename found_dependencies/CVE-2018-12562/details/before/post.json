[
    {
        "line": 3,
        "fullcodeline": "int t=type->itemData(type->currentIndex()).toInt();"
    },
    {
        "line": 6,
        "fullcodeline": "det.name=name->text().trimmed();"
    },
    {
        "line": 27,
        "fullcodeline": "det.url.setHost(smbHost->text().trimmed());"
    },
    {
        "line": 28,
        "fullcodeline": "det.url.setUserName(smbUser->text().trimmed());"
    },
    {
        "line": 29,
        "fullcodeline": "det.url.setPath(smbShare->text().trimmed());"
    },
    {
        "line": 30,
        "fullcodeline": "det.url.setPort(smbPort->value());"
    },
    {
        "line": 31,
        "fullcodeline": "det.url.setScheme(RemoteFsDevice::constSambaProtocol);"
    },
    {
        "line": 32,
        "fullcodeline": "det.url.setPassword(smbPassword->text().trimmed());"
    },
    {
        "line": 40,
        "fullcodeline": "det.url.setUserName(smbAvahiUser->text().trimmed());"
    },
    {
        "line": 41,
        "fullcodeline": "det.url.setPath(smbAvahiShare->text().trimmed());"
    },
    {
        "line": 42,
        "fullcodeline": "det.url.setPort(0);"
    },
    {
        "line": 43,
        "fullcodeline": "det.url.setScheme(RemoteFsDevice::constSambaAvahiProtocol);"
    },
    {
        "line": 44,
        "fullcodeline": "det.url.setPassword(smbAvahiPassword->text().trimmed());"
    },
    {
        "line": 9,
        "fullcodeline": "det.url.setHost(sshHost->text().trimmed());"
    },
    {
        "line": 10,
        "fullcodeline": "det.url.setUserName(sshUser->text().trimmed());"
    },
    {
        "line": 11,
        "fullcodeline": "det.url.setPath(sshFolder->text().trimmed());"
    },
    {
        "line": 12,
        "fullcodeline": "det.url.setPort(sshPort->value());"
    },
    {
        "line": 13,
        "fullcodeline": "det.url.setScheme(RemoteFsDevice::constSshfsProtocol);"
    },
    {
        "line": 14,
        "fullcodeline": "det.extraOptions=sshExtra->text().trimmed();"
    },
    {
        "line": 18,
        "fullcodeline": "QString path=fileFolder->text().trimmed();"
    },
    {
        "line": 22,
        "fullcodeline": "det.url.setPath(path);"
    },
    {
        "line": 23,
        "fullcodeline": "det.url.setScheme(RemoteFsDevice::constFileProtocol);"
    },
    {
        "line": 33,
        "fullcodeline": "if (!smbDomain->text().trimmed().isEmpty()) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (!smbDomain->text().trimmed().isEmpty() || !smbAvahiName->text().trimmed().isEmpty()) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (path.isEmpty()) {"
    },
    {
        "line": 35,
        "fullcodeline": "q.addQueryItem(RemoteFsDevice::constDomainQuery, smbDomain->text().trimmed());"
    },
    {
        "line": 36,
        "fullcodeline": "det.url.setQuery(q);"
    },
    {
        "line": 54,
        "fullcodeline": "det.url.setQuery(q);"
    },
    {
        "line": 20,
        "fullcodeline": "path=\"/\";"
    },
    {
        "line": 47,
        "fullcodeline": "if (!smbDomain->text().trimmed().isEmpty()) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (!smbAvahiName->text().trimmed().isEmpty()) {"
    },
    {
        "line": 48,
        "fullcodeline": "q.addQueryItem(RemoteFsDevice::constDomainQuery, smbAvahiDomain->text().trimmed());"
    },
    {
        "line": 51,
        "fullcodeline": "det.serviceName=smbAvahiName->text().trimmed();"
    },
    {
        "line": 52,
        "fullcodeline": "q.addQueryItem(RemoteFsDevice::constServiceNameQuery, det.serviceName);"
    }
]