[
    {
        "line": 3,
        "fullcodeline": "obj = c->argv[3];"
    },
    {
        "line": 5,
        "fullcodeline": "long removed = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "subject = lookupKeyWriteOrReply(c,c->argv[1],shared.czero);"
    },
    {
        "line": 7,
        "fullcodeline": "if ((getLongFromObjectOrReply(c, c->argv[2], &toremove, NULL) != C_OK))"
    },
    {
        "line": 14,
        "fullcodeline": "if (toremove < 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "while (listTypeNext(li,&entry)) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (subject == NULL || checkType(c,subject,OBJ_LIST)) return;"
    },
    {
        "line": 15,
        "fullcodeline": "toremove = -toremove;"
    },
    {
        "line": 16,
        "fullcodeline": "li = listTypeInitIterator(subject,-1,LIST_HEAD);"
    },
    {
        "line": 33,
        "fullcodeline": "signalModifiedKey(c,c->db,c->argv[1]);"
    },
    {
        "line": 34,
        "fullcodeline": "notifyKeyspaceEvent(NOTIFY_LIST,\"lrem\",c->argv[1],c->db->id);"
    },
    {
        "line": 37,
        "fullcodeline": "if (listTypeLength(subject) == 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "dbDelete(c->db,c->argv[1]);"
    },
    {
        "line": 39,
        "fullcodeline": "notifyKeyspaceEvent(NOTIFY_GENERIC,\"del\",c->argv[1],c->db->id);"
    },
    {
        "line": 18,
        "fullcodeline": "li = listTypeInitIterator(subject,0,LIST_TAIL);"
    },
    {
        "line": 23,
        "fullcodeline": "if (listTypeEqual(&entry,obj)) {"
    },
    {
        "line": 24,
        "fullcodeline": "listTypeDelete(li, &entry);"
    },
    {
        "line": 26,
        "fullcodeline": "removed++;"
    },
    {
        "line": 27,
        "fullcodeline": "if (toremove && removed == toremove) break;"
    }
]