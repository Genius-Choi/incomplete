[
    {
        "line": 3,
        "fullcodeline": "int id_given = 0; /* Was an ID different than \"*\" specified? */"
    },
    {
        "line": 4,
        "fullcodeline": "long long maxlen = -1;  /* If left to -1 no trimming is performed. */"
    },
    {
        "line": 5,
        "fullcodeline": "int approx_maxlen = 0;  /* If 1 only delete whole radix tree nodes, so"
    },
    {
        "line": 7,
        "fullcodeline": "int maxlen_arg_idx = 0; /* Index of the count in MAXLEN, for rewriting. */"
    },
    {
        "line": 10,
        "fullcodeline": "int i = 2; /* This is the first argument position where we could"
    },
    {
        "line": 45,
        "fullcodeline": "int field_pos = i+1;"
    },
    {
        "line": 65,
        "fullcodeline": "s = o->ptr;"
    },
    {
        "line": 83,
        "fullcodeline": "addReplyStreamID(c,&id);"
    },
    {
        "line": 85,
        "fullcodeline": "signalModifiedKey(c,c->db,c->argv[1]);"
    },
    {
        "line": 86,
        "fullcodeline": "notifyKeyspaceEvent(NOTIFY_STREAM,\"xadd\",c->argv[1],c->db->id);"
    },
    {
        "line": 99,
        "fullcodeline": "robj *idarg = createObjectFromStreamID(&id);"
    },
    {
        "line": 100,
        "fullcodeline": "rewriteClientCommandArgument(c,i,idarg);"
    },
    {
        "line": 12,
        "fullcodeline": "for (; i < c->argc; i++) {"
    },
    {
        "line": 64,
        "fullcodeline": "if ((o = streamTypeLookupWriteOrCreate(c,c->argv[1])) == NULL) return;"
    },
    {
        "line": 75,
        "fullcodeline": "if (streamAppendItem(s,c->argv+field_pos,(c->argc-field_pos)/2,"
    },
    {
        "line": 89,
        "fullcodeline": "if (maxlen >= 0) {"
    },
    {
        "line": 13,
        "fullcodeline": "int moreargs = (c->argc-1) - i; /* Number of additional arguments. */"
    },
    {
        "line": 14,
        "fullcodeline": "char *opt = c->argv[i]->ptr;"
    },
    {
        "line": 48,
        "fullcodeline": "if ((c->argc - field_pos) < 2 || ((c->argc-field_pos) % 2) == 1) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (id_given && id.ms == 0 && id.seq == 0) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (s->last_id.ms == UINT64_MAX && s->last_id.seq == UINT64_MAX) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (opt[0] == '*' && opt[1] == '\\0') {"
    },
    {
        "line": 91,
        "fullcodeline": "if (streamTrimByLength(s,maxlen,approx_maxlen)) {"
    },
    {
        "line": 92,
        "fullcodeline": "notifyKeyspaceEvent(NOTIFY_STREAM,\"xtrim\",c->argv[1],c->db->id);"
    },
    {
        "line": 94,
        "fullcodeline": "if (approx_maxlen) streamRewriteApproxMaxlen(c,s,maxlen_arg_idx);"
    },
    {
        "line": 19,
        "fullcodeline": "} else if (!strcasecmp(opt,\"maxlen\") && moreargs) {"
    },
    {
        "line": 20,
        "fullcodeline": "approx_maxlen = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "char *next = c->argv[i+1]->ptr;"
    },
    {
        "line": 36,
        "fullcodeline": "i++;"
    },
    {
        "line": 37,
        "fullcodeline": "maxlen_arg_idx = i;"
    },
    {
        "line": 23,
        "fullcodeline": "if (moreargs >= 2 && next[0] == '~' && next[1] == '\\0') {"
    },
    {
        "line": 29,
        "fullcodeline": "if (getLongLongFromObjectOrReply(c,c->argv[i+1],&maxlen,NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "if (maxlen < 0) {"
    },
    {
        "line": 41,
        "fullcodeline": "id_given = 1;"
    },
    {
        "line": 24,
        "fullcodeline": "approx_maxlen = 1;"
    },
    {
        "line": 25,
        "fullcodeline": "i++;"
    },
    {
        "line": 40,
        "fullcodeline": "if (streamParseStrictIDOrReply(c,c->argv[i],&id,0) != C_OK) return;"
    },
    {
        "line": 26,
        "fullcodeline": "} else if (moreargs >= 2 && next[0] == '=' && next[1] == '\\0') {"
    },
    {
        "line": 27,
        "fullcodeline": "i++;"
    }
]