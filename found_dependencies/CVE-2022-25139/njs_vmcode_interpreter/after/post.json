[
    {
        "line": 890,
        "fullcodeline": "if (njs_is_error(&vm->retval)) {"
    },
    {
        "line": 41,
        "fullcodeline": "vmcode = (njs_vmcode_generic_t *) pc;"
    },
    {
        "line": 59,
        "fullcodeline": "value2 = (njs_value_t *) vmcode->operand1;"
    },
    {
        "line": 60,
        "fullcodeline": "value1 = NULL;"
    },
    {
        "line": 885,
        "fullcodeline": "pc += ret;"
    },
    {
        "line": 891,
        "fullcodeline": "vm->active_frame->native.pc = pc;"
    },
    {
        "line": 892,
        "fullcodeline": "(void) njs_error_stack_attach(vm, &vm->retval);"
    },
    {
        "line": 896,
        "fullcodeline": "native = vm->top_frame;"
    },
    {
        "line": 909,
        "fullcodeline": "previous = native->previous;"
    },
    {
        "line": 914,
        "fullcodeline": "lambda_call = (native == &vm->active_frame->native);"
    },
    {
        "line": 916,
        "fullcodeline": "njs_vm_scopes_restore(vm, native, previous);"
    },
    {
        "line": 83,
        "fullcodeline": "if (op > NJS_VMCODE_NORET) {"
    },
    {
        "line": 898,
        "fullcodeline": "if (!native->native) {"
    },
    {
        "line": 910,
        "fullcodeline": "if (previous == NULL) {"
    },
    {
        "line": 918,
        "fullcodeline": "if (native->size != 0) {"
    },
    {
        "line": 65,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand3, value2);"
    },
    {
        "line": 70,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand2, value1);"
    },
    {
        "line": 545,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 546,
        "fullcodeline": "njs_release(vm, retval);"
    },
    {
        "line": 547,
        "fullcodeline": "*retval = vm->retval;"
    },
    {
        "line": 899,
        "fullcodeline": "frame = (njs_frame_t *) native;"
    },
    {
        "line": 919,
        "fullcodeline": "vm->stack_size -= native->size;"
    },
    {
        "line": 920,
        "fullcodeline": "njs_mp_free(vm->mem_pool, native);"
    },
    {
        "line": 85,
        "fullcodeline": "if (op == NJS_VMCODE_MOVE) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (op == NJS_VMCODE_PROPERTY_GET) {"
    },
    {
        "line": 541,
        "fullcodeline": "if (njs_slow_path(ret < 0 && ret >= NJS_PREEMPT)) {"
    },
    {
        "line": 902,
        "fullcodeline": "if (catch != NULL) {"
    },
    {
        "line": 86,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 87,
        "fullcodeline": "*retval = *value1;"
    },
    {
        "line": 89,
        "fullcodeline": "pc += sizeof(njs_vmcode_move_t);"
    },
    {
        "line": 94,
        "fullcodeline": "get = (njs_vmcode_prop_get_t *) pc;"
    },
    {
        "line": 95,
        "fullcodeline": "njs_vmcode_operand(vm, get->value, retval);"
    },
    {
        "line": 97,
        "fullcodeline": "ret = njs_value_property(vm, value1, value2, retval);"
    },
    {
        "line": 102,
        "fullcodeline": "pc += sizeof(njs_vmcode_prop_get_t);"
    },
    {
        "line": 123,
        "fullcodeline": "njs_set_number(value1,"
    },
    {
        "line": 126,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 135,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 139,
        "fullcodeline": "get = (njs_vmcode_prop_get_t *) pc;"
    },
    {
        "line": 140,
        "fullcodeline": "njs_vmcode_operand(vm, get->value, retval);"
    },
    {
        "line": 142,
        "fullcodeline": "ret = njs_value_property(vm, value1, value2, retval);"
    },
    {
        "line": 147,
        "fullcodeline": "pc += sizeof(njs_vmcode_prop_get_t);"
    },
    {
        "line": 160,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 161,
        "fullcodeline": "*retval = *value1;"
    },
    {
        "line": 163,
        "fullcodeline": "try_return = (njs_vmcode_try_return_t *) pc;"
    },
    {
        "line": 164,
        "fullcodeline": "pc += try_return->offset;"
    },
    {
        "line": 202,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 248,
        "fullcodeline": "ret = njs_primitive_values_compare(vm, value1, value2);"
    },
    {
        "line": 257,
        "fullcodeline": "njs_set_boolean(retval, ret);"
    },
    {
        "line": 259,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 264,
        "fullcodeline": "ret = njs_values_equal(vm, value1, value2);"
    },
    {
        "line": 269,
        "fullcodeline": "ret ^= op - NJS_VMCODE_EQUAL;"
    },
    {
        "line": 271,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 272,
        "fullcodeline": "njs_set_boolean(retval, ret);"
    },
    {
        "line": 274,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 306,
        "fullcodeline": "num = njs_number(value1);"
    },
    {
        "line": 308,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 309,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 391,
        "fullcodeline": "njs_set_number(retval, num);"
    },
    {
        "line": 395,
        "fullcodeline": "ret = njs_vmcode_object_copy(vm, value1, value2);"
    },
    {
        "line": 399,
        "fullcodeline": "ret = njs_vmcode_template_literal(vm, value1, value2);"
    },
    {
        "line": 403,
        "fullcodeline": "ret = njs_vmcode_property_in(vm, value1, value2);"
    },
    {
        "line": 407,
        "fullcodeline": "ret = njs_value_property_delete(vm, value1, value2, NULL);"
    },
    {
        "line": 417,
        "fullcodeline": "ret = njs_vmcode_property_foreach(vm, value1, value2, pc);"
    },
    {
        "line": 422,
        "fullcodeline": "ret = njs_values_strict_equal(value1, value2);"
    },
    {
        "line": 424,
        "fullcodeline": "ret ^= op - NJS_VMCODE_STRICT_EQUAL;"
    },
    {
        "line": 426,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 427,
        "fullcodeline": "njs_set_boolean(retval, ret);"
    },
    {
        "line": 429,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 451,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 452,
        "fullcodeline": "*retval = *value1;"
    },
    {
        "line": 454,
        "fullcodeline": "pc += ret;"
    },
    {
        "line": 469,
        "fullcodeline": "num = njs_number(value1);"
    },
    {
        "line": 470,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 485,
        "fullcodeline": "pc += sizeof(njs_vmcode_2addr_t);"
    },
    {
        "line": 489,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 490,
        "fullcodeline": "njs_set_boolean(retval, !njs_is_true(value1));"
    },
    {
        "line": 492,
        "fullcodeline": "pc += sizeof(njs_vmcode_2addr_t);"
    },
    {
        "line": 496,
        "fullcodeline": "ret = njs_vmcode_object(vm);"
    },
    {
        "line": 500,
        "fullcodeline": "ret = njs_vmcode_array(vm, pc);"
    },
    {
        "line": 504,
        "fullcodeline": "ret = njs_vmcode_function(vm, pc);"
    },
    {
        "line": 508,
        "fullcodeline": "ret = njs_vmcode_regexp(vm, pc);"
    },
    {
        "line": 512,
        "fullcodeline": "ret = njs_vmcode_instance_of(vm, value1, value2);"
    },
    {
        "line": 516,
        "fullcodeline": "ret = njs_vmcode_typeof(vm, value1, value2);"
    },
    {
        "line": 520,
        "fullcodeline": "njs_set_undefined(&vm->retval);"
    },
    {
        "line": 526,
        "fullcodeline": "njs_release(vm, value1);"
    },
    {
        "line": 527,
        "fullcodeline": "vm->retval = njs_value_true;"
    },
    {
        "line": 533,
        "fullcodeline": "ret = njs_vmcode_debugger(vm);"
    },
    {
        "line": 537,
        "fullcodeline": "njs_internal_error(vm, \"%d has retval\", op);"
    },
    {
        "line": 903,
        "fullcodeline": "pc = catch;"
    },
    {
        "line": 98,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (njs_slow_path(!njs_is_numeric(value2))) {"
    },
    {
        "line": 124,
        "fullcodeline": "num + (1 - 2 * ((op - NJS_VMCODE_INCREMENT) >> 1)));"
    },
    {
        "line": 128,
        "fullcodeline": "if (op & 1) {"
    },
    {
        "line": 143,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 149,
        "fullcodeline": "if (ret == NJS_OK) {"
    },
    {
        "line": 172,
        "fullcodeline": "if (njs_slow_path(!njs_is_primitive(value1))) {"
    },
    {
        "line": 182,
        "fullcodeline": "if (njs_slow_path(!njs_is_primitive(value2))) {"
    },
    {
        "line": 192,
        "fullcodeline": "if (njs_slow_path(njs_is_symbol(value1)"
    },
    {
        "line": 204,
        "fullcodeline": "if (op == NJS_VMCODE_ADDITION) {"
    },
    {
        "line": 241,
        "fullcodeline": "if ((uint8_t) (op - NJS_VMCODE_GREATER) < 2) {"
    },
    {
        "line": 250,
        "fullcodeline": "if (op < NJS_VMCODE_LESS_OR_EQUAL) {"
    },
    {
        "line": 265,
        "fullcodeline": "if (njs_slow_path(ret < 0)) {"
    },
    {
        "line": 288,
        "fullcodeline": "if (njs_slow_path(!njs_is_numeric(value1))) {"
    },
    {
        "line": 297,
        "fullcodeline": "if (njs_slow_path(!njs_is_numeric(value2))) {"
    },
    {
        "line": 408,
        "fullcodeline": "if (njs_fast_path(ret != NJS_ERROR)) {"
    },
    {
        "line": 435,
        "fullcodeline": "if (op == NJS_VMCODE_COALESCE) {"
    },
    {
        "line": 460,
        "fullcodeline": "if (njs_slow_path(!njs_is_numeric(value1))) {"
    },
    {
        "line": 553,
        "fullcodeline": "move_arg = (njs_vmcode_move_arg_t *) pc;"
    },
    {
        "line": 554,
        "fullcodeline": "native = vm->top_frame;"
    },
    {
        "line": 556,
        "fullcodeline": "hint = move_arg->dst;"
    },
    {
        "line": 559,
        "fullcodeline": "njs_vmcode_operand(vm, move_arg->src, value2);"
    },
    {
        "line": 567,
        "fullcodeline": "njs_vmcode_operand(vm, (njs_index_t) value2, value2);"
    },
    {
        "line": 573,
        "fullcodeline": "ret = (njs_jump_off_t) value2;"
    },
    {
        "line": 577,
        "fullcodeline": "set = (njs_vmcode_prop_set_t *) pc;"
    },
    {
        "line": 578,
        "fullcodeline": "njs_vmcode_operand(vm, set->value, retval);"
    },
    {
        "line": 580,
        "fullcodeline": "ret = njs_value_property_set(vm, value1, value2, retval);"
    },
    {
        "line": 589,
        "fullcodeline": "accessor = (njs_vmcode_prop_accessor_t *) pc;"
    },
    {
        "line": 590,
        "fullcodeline": "njs_vmcode_operand(vm, accessor->value, function);"
    },
    {
        "line": 592,
        "fullcodeline": "ret = njs_value_to_key(vm, &name, value2);"
    },
    {
        "line": 600,
        "fullcodeline": "ret = njs_object_prop_define(vm, value1, &name, function,"
    },
    {
        "line": 611,
        "fullcodeline": "ret = njs_is_true(value1);"
    },
    {
        "line": 613,
        "fullcodeline": "ret ^= op - NJS_VMCODE_IF_TRUE_JUMP;"
    },
    {
        "line": 615,
        "fullcodeline": "ret = ret ? (njs_jump_off_t) value2"
    },
    {
        "line": 632,
        "fullcodeline": "set = (njs_vmcode_prop_set_t *) pc;"
    },
    {
        "line": 633,
        "fullcodeline": "njs_vmcode_operand(vm, set->value, retval);"
    },
    {
        "line": 634,
        "fullcodeline": "ret = njs_vmcode_property_init(vm, value1, value2, retval);"
    },
    {
        "line": 642,
        "fullcodeline": "njs_vmcode_operand(vm, (njs_index_t) value2, value2);"
    },
    {
        "line": 646,
        "fullcodeline": "fcopy = (njs_vmcode_function_copy_t *) pc;"
    },
    {
        "line": 647,
        "fullcodeline": "ret = njs_vmcode_function_copy(vm, fcopy->function,"
    },
    {
        "line": 652,
        "fullcodeline": "function_frame = (njs_vmcode_function_frame_t *) pc;"
    },
    {
        "line": 656,
        "fullcodeline": "ret = njs_function_frame_create(vm, value1,"
    },
    {
        "line": 669,
        "fullcodeline": "method_frame = (njs_vmcode_method_frame_t *) pc;"
    },
    {
        "line": 671,
        "fullcodeline": "ret = njs_value_property(vm, value1, value2, &dst);"
    },
    {
        "line": 689,
        "fullcodeline": "ret = njs_function_frame_create(vm, &dst, value1,"
    },
    {
        "line": 701,
        "fullcodeline": "vm->active_frame->native.pc = pc;"
    },
    {
        "line": 703,
        "fullcodeline": "njs_vmcode_operand(vm, (njs_index_t) value2, value2);"
    },
    {
        "line": 705,
        "fullcodeline": "ret = njs_function_frame_invoke(vm, value2);"
    },
    {
        "line": 714,
        "fullcodeline": "pnext = (njs_vmcode_prop_next_t *) pc;"
    },
    {
        "line": 715,
        "fullcodeline": "retval = njs_scope_value(vm, pnext->retval);"
    },
    {
        "line": 726,
        "fullcodeline": "njs_mp_free(vm->mem_pool, next);"
    },
    {
        "line": 732,
        "fullcodeline": "ret = njs_vmcode_arguments(vm, pc);"
    },
    {
        "line": 740,
        "fullcodeline": "set = (njs_vmcode_prop_set_t *) pc;"
    },
    {
        "line": 741,
        "fullcodeline": "njs_vmcode_operand(vm, set->value, retval);"
    },
    {
        "line": 742,
        "fullcodeline": "ret = njs_vmcode_proto_init(vm, value1, value2, retval);"
    },
    {
        "line": 750,
        "fullcodeline": "await = (njs_vmcode_await_t *) pc;"
    },
    {
        "line": 754,
        "fullcodeline": "ret = njs_vmcode_try_start(vm, value1, value2, pc);"
    },
    {
        "line": 762,
        "fullcodeline": "njs_vmcode_operand(vm, (njs_index_t) value2, value2);"
    },
    {
        "line": 767,
        "fullcodeline": "try_trampoline = (njs_vmcode_try_trampoline_t *) pc;"
    },
    {
        "line": 768,
        "fullcodeline": "value1 = njs_scope_value(vm, try_trampoline->exit_value);"
    },
    {
        "line": 770,
        "fullcodeline": "ret = njs_vmcode_try_break(vm, value1, value2);"
    },
    {
        "line": 774,
        "fullcodeline": "try_trampoline = (njs_vmcode_try_trampoline_t *) pc;"
    },
    {
        "line": 775,
        "fullcodeline": "value1 = njs_scope_value(vm, try_trampoline->exit_value);"
    },
    {
        "line": 777,
        "fullcodeline": "ret = njs_vmcode_try_continue(vm, value1, value2);"
    },
    {
        "line": 781,
        "fullcodeline": "ret = njs_vmcode_try_end(vm, value1, value2);"
    },
    {
        "line": 793,
        "fullcodeline": "*value1 = vm->retval;"
    },
    {
        "line": 807,
        "fullcodeline": "finally = (njs_vmcode_finally_t *) pc;"
    },
    {
        "line": 808,
        "fullcodeline": "value1 = njs_scope_value(vm, finally->exit_value);"
    },
    {
        "line": 810,
        "fullcodeline": "ret = njs_vmcode_finally(vm, value1, value2, pc);"
    },
    {
        "line": 822,
        "fullcodeline": "var = (njs_vmcode_variable_t *) pc;"
    },
    {
        "line": 823,
        "fullcodeline": "value1 = njs_scope_value(vm, var->dst);"
    },
    {
        "line": 834,
        "fullcodeline": "njs_set_undefined(value1);"
    },
    {
        "line": 840,
        "fullcodeline": "var = (njs_vmcode_variable_t *) pc;"
    },
    {
        "line": 841,
        "fullcodeline": "value2 = njs_scope_value(vm, var->dst);"
    },
    {
        "line": 843,
        "fullcodeline": "value1 = njs_mp_alloc(vm->mem_pool, sizeof(njs_value_t));"
    },
    {
        "line": 850,
        "fullcodeline": "njs_scope_value_set(vm, var->dst, value1);"
    },
    {
        "line": 856,
        "fullcodeline": "var = (njs_vmcode_variable_t *) pc;"
    },
    {
        "line": 857,
        "fullcodeline": "value1 = njs_scope_value(vm, var->dst);"
    },
    {
        "line": 867,
        "fullcodeline": "njs_reference_error(vm, \"cannot access variable \""
    },
    {
        "line": 872,
        "fullcodeline": "njs_vmcode_error(vm, pc);"
    },
    {
        "line": 876,
        "fullcodeline": "njs_type_error(vm, \"assignment to constant variable\");"
    },
    {
        "line": 880,
        "fullcodeline": "njs_internal_error(vm, \"%d has NO retval\", op);"
    },
    {
        "line": 112,
        "fullcodeline": "ret = njs_value_to_numeric(vm, value2, &numeric1);"
    },
    {
        "line": 117,
        "fullcodeline": "num = njs_number(&numeric1);"
    },
    {
        "line": 129,
        "fullcodeline": "njs_set_number(retval, num);"
    },
    {
        "line": 150,
        "fullcodeline": "pc += sizeof(njs_vmcode_error_t);"
    },
    {
        "line": 173,
        "fullcodeline": "hint = (op == NJS_VMCODE_ADDITION) && njs_is_date(value1);"
    },
    {
        "line": 174,
        "fullcodeline": "ret = njs_value_to_primitive(vm, &primitive1, value1, hint);"
    },
    {
        "line": 179,
        "fullcodeline": "value1 = &primitive1;"
    },
    {
        "line": 183,
        "fullcodeline": "hint = (op == NJS_VMCODE_ADDITION) && njs_is_date(value2);"
    },
    {
        "line": 184,
        "fullcodeline": "ret = njs_value_to_primitive(vm, &primitive2, value2, hint);"
    },
    {
        "line": 189,
        "fullcodeline": "value2 = &primitive2;"
    },
    {
        "line": 195,
        "fullcodeline": "njs_symbol_conversion_failed(vm,"
    },
    {
        "line": 225,
        "fullcodeline": "ret = njs_primitive_value_to_string(vm, &dst, src);"
    },
    {
        "line": 230,
        "fullcodeline": "ret = njs_string_concat(vm, s1, s2);"
    },
    {
        "line": 235,
        "fullcodeline": "*retval = vm->retval;"
    },
    {
        "line": 237,
        "fullcodeline": "pc += ret;"
    },
    {
        "line": 243,
        "fullcodeline": "src = value1;"
    },
    {
        "line": 244,
        "fullcodeline": "value1 = value2;"
    },
    {
        "line": 245,
        "fullcodeline": "value2 = src;"
    },
    {
        "line": 251,
        "fullcodeline": "ret = ret > 0;"
    },
    {
        "line": 289,
        "fullcodeline": "ret = njs_value_to_numeric(vm, value1, &numeric1);"
    },
    {
        "line": 294,
        "fullcodeline": "value1 = &numeric1;"
    },
    {
        "line": 298,
        "fullcodeline": "ret = njs_value_to_numeric(vm, value2, &numeric2);"
    },
    {
        "line": 303,
        "fullcodeline": "value2 = &numeric2;"
    },
    {
        "line": 313,
        "fullcodeline": "num -= njs_number(value2);"
    },
    {
        "line": 317,
        "fullcodeline": "num *= njs_number(value2);"
    },
    {
        "line": 321,
        "fullcodeline": "exponent = njs_number(value2);"
    },
    {
        "line": 328,
        "fullcodeline": "valid = njs_expect(1, fabs(num) != 1"
    },
    {
        "line": 332,
        "fullcodeline": "num = valid ? pow(num, exponent) : NAN;"
    },
    {
        "line": 336,
        "fullcodeline": "num /= njs_number(value2);"
    },
    {
        "line": 340,
        "fullcodeline": "num = fmod(num, njs_number(value2));"
    },
    {
        "line": 346,
        "fullcodeline": "i32 = njs_number_to_int32(njs_number(value2));"
    },
    {
        "line": 362,
        "fullcodeline": "njs_set_int32(retval, i32);"
    },
    {
        "line": 366,
        "fullcodeline": "u32 = njs_number_to_uint32(njs_number(value2)) & 0x1f;"
    },
    {
        "line": 409,
        "fullcodeline": "vm->retval = njs_value_true;"
    },
    {
        "line": 436,
        "fullcodeline": "ret = !njs_is_null_or_undefined(value1);"
    },
    {
        "line": 444,
        "fullcodeline": "test_jump = (njs_vmcode_test_jump_t *) pc;"
    },
    {
        "line": 445,
        "fullcodeline": "ret = test_jump->offset;"
    },
    {
        "line": 461,
        "fullcodeline": "ret = njs_value_to_numeric(vm, value1, &numeric1);"
    },
    {
        "line": 466,
        "fullcodeline": "value1 = &numeric1;"
    },
    {
        "line": 474,
        "fullcodeline": "num = -num;"
    },
    {
        "line": 478,
        "fullcodeline": "njs_set_number(retval, num);"
    },
    {
        "line": 482,
        "fullcodeline": "njs_set_int32(retval, ~njs_number_to_uint32(num));"
    },
    {
        "line": 581,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 593,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 602,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 621,
        "fullcodeline": "if (njs_values_strict_equal(value1, value2)) {"
    },
    {
        "line": 635,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 643,
        "fullcodeline": "return njs_vmcode_return(vm, NULL, value2);"
    },
    {
        "line": 661,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 672,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 676,
        "fullcodeline": "if (njs_slow_path(!njs_is_function(&dst))) {"
    },
    {
        "line": 693,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 706,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 719,
        "fullcodeline": "if (next->index < next->array->length) {"
    },
    {
        "line": 733,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 743,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 751,
        "fullcodeline": "return njs_vmcode_await(vm, await, promise_cap, async_ctx);"
    },
    {
        "line": 755,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 795,
        "fullcodeline": "if ((njs_jump_off_t) value2 == sizeof(njs_vmcode_catch_t)) {"
    },
    {
        "line": 825,
        "fullcodeline": "if (njs_is_valid(value1)) {"
    },
    {
        "line": 844,
        "fullcodeline": "if (njs_slow_path(value1 == NULL)) {"
    },
    {
        "line": 859,
        "fullcodeline": "if (njs_is_valid(value1)) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 120,
        "fullcodeline": "num = njs_number(value2);"
    },
    {
        "line": 132,
        "fullcodeline": "*retval = *value1;"
    },
    {
        "line": 175,
        "fullcodeline": "if (ret != NJS_OK) {"
    },
    {
        "line": 185,
        "fullcodeline": "if (ret != NJS_OK) {"
    },
    {
        "line": 193,
        "fullcodeline": "|| njs_is_symbol(value2)))"
    },
    {
        "line": 196,
        "fullcodeline": "(op == NJS_VMCODE_ADDITION) &&"
    },
    {
        "line": 205,
        "fullcodeline": "if (njs_fast_path(njs_is_numeric(value1)"
    },
    {
        "line": 214,
        "fullcodeline": "if (njs_is_string(value1)) {"
    },
    {
        "line": 226,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 231,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 254,
        "fullcodeline": "ret = ret == 0;"
    },
    {
        "line": 290,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 299,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 439,
        "fullcodeline": "ret = njs_is_true(value1);"
    },
    {
        "line": 440,
        "fullcodeline": "ret ^= op - NJS_VMCODE_TEST_IF_TRUE;"
    },
    {
        "line": 462,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 594,
        "fullcodeline": "njs_internal_error(vm, \"failed conversion of type \\\"%s\\\" \""
    },
    {
        "line": 622,
        "fullcodeline": "equal = (njs_vmcode_equal_jump_t *) pc;"
    },
    {
        "line": 623,
        "fullcodeline": "ret = equal->offset;"
    },
    {
        "line": 658,
        "fullcodeline": "(uintptr_t) value2,"
    },
    {
        "line": 677,
        "fullcodeline": "ret = njs_value_to_key(vm, value2, value2);"
    },
    {
        "line": 682,
        "fullcodeline": "njs_key_string_get(vm, value2, &string);"
    },
    {
        "line": 683,
        "fullcodeline": "njs_type_error(vm,"
    },
    {
        "line": 722,
        "fullcodeline": "ret = pnext->offset;"
    },
    {
        "line": 796,
        "fullcodeline": "ret = njs_vmcode_try_end(vm, value1, value2);"
    },
    {
        "line": 826,
        "fullcodeline": "value1 = njs_mp_alloc(vm->mem_pool, sizeof(njs_value_t));"
    },
    {
        "line": 831,
        "fullcodeline": "njs_scope_value_set(vm, var->dst, value1);"
    },
    {
        "line": 197,
        "fullcodeline": "(njs_is_string(value1) || njs_is_string(value2)));"
    },
    {
        "line": 208,
        "fullcodeline": "njs_set_number(retval, njs_number(value1)"
    },
    {
        "line": 210,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 215,
        "fullcodeline": "s1 = value1;"
    },
    {
        "line": 216,
        "fullcodeline": "s2 = &dst;"
    },
    {
        "line": 217,
        "fullcodeline": "src = value2;"
    },
    {
        "line": 350,
        "fullcodeline": "i32 &= njs_number_to_int32(num);"
    },
    {
        "line": 354,
        "fullcodeline": "i32 |= njs_number_to_int32(num);"
    },
    {
        "line": 358,
        "fullcodeline": "i32 ^= njs_number_to_int32(num);"
    },
    {
        "line": 371,
        "fullcodeline": "i32 = njs_number_to_int32(num);"
    },
    {
        "line": 380,
        "fullcodeline": "njs_set_int32(retval, i32);"
    },
    {
        "line": 384,
        "fullcodeline": "njs_set_uint32(retval,"
    },
    {
        "line": 596,
        "fullcodeline": "njs_type_string(value2->type));"
    },
    {
        "line": 678,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 799,
        "fullcodeline": "frame = (njs_frame_t *) vm->top_frame;"
    },
    {
        "line": 800,
        "fullcodeline": "frame->exception.catch = pc + (njs_jump_off_t) value2;"
    },
    {
        "line": 827,
        "fullcodeline": "if (njs_slow_path(value1 == NULL)) {"
    },
    {
        "line": 206,
        "fullcodeline": "&& njs_is_numeric(value2)))"
    },
    {
        "line": 220,
        "fullcodeline": "s1 = &dst;"
    },
    {
        "line": 221,
        "fullcodeline": "s2 = value2;"
    },
    {
        "line": 222,
        "fullcodeline": "src = value1;"
    },
    {
        "line": 329,
        "fullcodeline": "|| (!isnan(exponent)"
    },
    {
        "line": 373,
        "fullcodeline": "if (op == NJS_VMCODE_LEFT_SHIFT) {"
    },
    {
        "line": 385,
        "fullcodeline": "njs_number_to_uint32(num) >> u32);"
    },
    {
        "line": 720,
        "fullcodeline": "*retval = next->array->start[next->index++];"
    },
    {
        "line": 209,
        "fullcodeline": "+ njs_number(value2));"
    },
    {
        "line": 330,
        "fullcodeline": "&& !isinf(exponent)));"
    },
    {
        "line": 375,
        "fullcodeline": "i32 = (uint32_t) i32 << u32;"
    },
    {
        "line": 377,
        "fullcodeline": "i32 >>= u32;"
    }
]