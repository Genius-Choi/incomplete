[
    {
        "line": 889,
        "fullcodeline": "if (njs_is_error(&vm->retval)) {"
    },
    {
        "line": 40,
        "fullcodeline": "vmcode = (njs_vmcode_generic_t *) pc;"
    },
    {
        "line": 58,
        "fullcodeline": "value2 = (njs_value_t *) vmcode->operand1;"
    },
    {
        "line": 59,
        "fullcodeline": "value1 = NULL;"
    },
    {
        "line": 884,
        "fullcodeline": "pc += ret;"
    },
    {
        "line": 890,
        "fullcodeline": "vm->active_frame->native.pc = pc;"
    },
    {
        "line": 891,
        "fullcodeline": "(void) njs_error_stack_attach(vm, &vm->retval);"
    },
    {
        "line": 895,
        "fullcodeline": "native = vm->top_frame;"
    },
    {
        "line": 908,
        "fullcodeline": "previous = native->previous;"
    },
    {
        "line": 913,
        "fullcodeline": "lambda_call = (native == &vm->active_frame->native);"
    },
    {
        "line": 915,
        "fullcodeline": "njs_vm_scopes_restore(vm, native, previous);"
    },
    {
        "line": 82,
        "fullcodeline": "if (op > NJS_VMCODE_NORET) {"
    },
    {
        "line": 897,
        "fullcodeline": "if (!native->native) {"
    },
    {
        "line": 909,
        "fullcodeline": "if (previous == NULL) {"
    },
    {
        "line": 917,
        "fullcodeline": "if (native->size != 0) {"
    },
    {
        "line": 64,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand3, value2);"
    },
    {
        "line": 69,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand2, value1);"
    },
    {
        "line": 544,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 545,
        "fullcodeline": "njs_release(vm, retval);"
    },
    {
        "line": 546,
        "fullcodeline": "*retval = vm->retval;"
    },
    {
        "line": 898,
        "fullcodeline": "frame = (njs_frame_t *) native;"
    },
    {
        "line": 918,
        "fullcodeline": "vm->stack_size -= native->size;"
    },
    {
        "line": 919,
        "fullcodeline": "njs_mp_free(vm->mem_pool, native);"
    },
    {
        "line": 84,
        "fullcodeline": "if (op == NJS_VMCODE_MOVE) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (op == NJS_VMCODE_PROPERTY_GET) {"
    },
    {
        "line": 540,
        "fullcodeline": "if (njs_slow_path(ret < 0 && ret >= NJS_PREEMPT)) {"
    },
    {
        "line": 901,
        "fullcodeline": "if (catch != NULL) {"
    },
    {
        "line": 85,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 86,
        "fullcodeline": "*retval = *value1;"
    },
    {
        "line": 88,
        "fullcodeline": "pc += sizeof(njs_vmcode_move_t);"
    },
    {
        "line": 93,
        "fullcodeline": "get = (njs_vmcode_prop_get_t *) pc;"
    },
    {
        "line": 94,
        "fullcodeline": "njs_vmcode_operand(vm, get->value, retval);"
    },
    {
        "line": 96,
        "fullcodeline": "ret = njs_value_property(vm, value1, value2, retval);"
    },
    {
        "line": 101,
        "fullcodeline": "pc += sizeof(njs_vmcode_prop_get_t);"
    },
    {
        "line": 122,
        "fullcodeline": "njs_set_number(value1,"
    },
    {
        "line": 125,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 134,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 138,
        "fullcodeline": "get = (njs_vmcode_prop_get_t *) pc;"
    },
    {
        "line": 139,
        "fullcodeline": "njs_vmcode_operand(vm, get->value, retval);"
    },
    {
        "line": 141,
        "fullcodeline": "ret = njs_value_property(vm, value1, value2, retval);"
    },
    {
        "line": 146,
        "fullcodeline": "pc += sizeof(njs_vmcode_prop_get_t);"
    },
    {
        "line": 159,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 160,
        "fullcodeline": "*retval = *value1;"
    },
    {
        "line": 162,
        "fullcodeline": "try_return = (njs_vmcode_try_return_t *) pc;"
    },
    {
        "line": 163,
        "fullcodeline": "pc += try_return->offset;"
    },
    {
        "line": 201,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 247,
        "fullcodeline": "ret = njs_primitive_values_compare(vm, value1, value2);"
    },
    {
        "line": 256,
        "fullcodeline": "njs_set_boolean(retval, ret);"
    },
    {
        "line": 258,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 263,
        "fullcodeline": "ret = njs_values_equal(vm, value1, value2);"
    },
    {
        "line": 268,
        "fullcodeline": "ret ^= op - NJS_VMCODE_EQUAL;"
    },
    {
        "line": 270,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 271,
        "fullcodeline": "njs_set_boolean(retval, ret);"
    },
    {
        "line": 273,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 305,
        "fullcodeline": "num = njs_number(value1);"
    },
    {
        "line": 307,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 308,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 390,
        "fullcodeline": "njs_set_number(retval, num);"
    },
    {
        "line": 394,
        "fullcodeline": "ret = njs_vmcode_object_copy(vm, value1, value2);"
    },
    {
        "line": 398,
        "fullcodeline": "ret = njs_vmcode_template_literal(vm, value1, value2);"
    },
    {
        "line": 402,
        "fullcodeline": "ret = njs_vmcode_property_in(vm, value1, value2);"
    },
    {
        "line": 406,
        "fullcodeline": "ret = njs_value_property_delete(vm, value1, value2, NULL);"
    },
    {
        "line": 416,
        "fullcodeline": "ret = njs_vmcode_property_foreach(vm, value1, value2, pc);"
    },
    {
        "line": 421,
        "fullcodeline": "ret = njs_values_strict_equal(value1, value2);"
    },
    {
        "line": 423,
        "fullcodeline": "ret ^= op - NJS_VMCODE_STRICT_EQUAL;"
    },
    {
        "line": 425,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 426,
        "fullcodeline": "njs_set_boolean(retval, ret);"
    },
    {
        "line": 428,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 450,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 451,
        "fullcodeline": "*retval = *value1;"
    },
    {
        "line": 453,
        "fullcodeline": "pc += ret;"
    },
    {
        "line": 468,
        "fullcodeline": "num = njs_number(value1);"
    },
    {
        "line": 469,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 484,
        "fullcodeline": "pc += sizeof(njs_vmcode_2addr_t);"
    },
    {
        "line": 488,
        "fullcodeline": "njs_vmcode_operand(vm, vmcode->operand1, retval);"
    },
    {
        "line": 489,
        "fullcodeline": "njs_set_boolean(retval, !njs_is_true(value1));"
    },
    {
        "line": 491,
        "fullcodeline": "pc += sizeof(njs_vmcode_2addr_t);"
    },
    {
        "line": 495,
        "fullcodeline": "ret = njs_vmcode_object(vm);"
    },
    {
        "line": 499,
        "fullcodeline": "ret = njs_vmcode_array(vm, pc);"
    },
    {
        "line": 503,
        "fullcodeline": "ret = njs_vmcode_function(vm, pc);"
    },
    {
        "line": 507,
        "fullcodeline": "ret = njs_vmcode_regexp(vm, pc);"
    },
    {
        "line": 511,
        "fullcodeline": "ret = njs_vmcode_instance_of(vm, value1, value2);"
    },
    {
        "line": 515,
        "fullcodeline": "ret = njs_vmcode_typeof(vm, value1, value2);"
    },
    {
        "line": 519,
        "fullcodeline": "njs_set_undefined(&vm->retval);"
    },
    {
        "line": 525,
        "fullcodeline": "njs_release(vm, value1);"
    },
    {
        "line": 526,
        "fullcodeline": "vm->retval = njs_value_true;"
    },
    {
        "line": 532,
        "fullcodeline": "ret = njs_vmcode_debugger(vm);"
    },
    {
        "line": 536,
        "fullcodeline": "njs_internal_error(vm, \"%d has retval\", op);"
    },
    {
        "line": 902,
        "fullcodeline": "pc = catch;"
    },
    {
        "line": 97,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (njs_slow_path(!njs_is_numeric(value2))) {"
    },
    {
        "line": 123,
        "fullcodeline": "num + (1 - 2 * ((op - NJS_VMCODE_INCREMENT) >> 1)));"
    },
    {
        "line": 127,
        "fullcodeline": "if (op & 1) {"
    },
    {
        "line": 142,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (ret == NJS_OK) {"
    },
    {
        "line": 171,
        "fullcodeline": "if (njs_slow_path(!njs_is_primitive(value1))) {"
    },
    {
        "line": 181,
        "fullcodeline": "if (njs_slow_path(!njs_is_primitive(value2))) {"
    },
    {
        "line": 191,
        "fullcodeline": "if (njs_slow_path(njs_is_symbol(value1)"
    },
    {
        "line": 203,
        "fullcodeline": "if (op == NJS_VMCODE_ADDITION) {"
    },
    {
        "line": 240,
        "fullcodeline": "if ((uint8_t) (op - NJS_VMCODE_GREATER) < 2) {"
    },
    {
        "line": 249,
        "fullcodeline": "if (op < NJS_VMCODE_LESS_OR_EQUAL) {"
    },
    {
        "line": 264,
        "fullcodeline": "if (njs_slow_path(ret < 0)) {"
    },
    {
        "line": 287,
        "fullcodeline": "if (njs_slow_path(!njs_is_numeric(value1))) {"
    },
    {
        "line": 296,
        "fullcodeline": "if (njs_slow_path(!njs_is_numeric(value2))) {"
    },
    {
        "line": 407,
        "fullcodeline": "if (njs_fast_path(ret != NJS_ERROR)) {"
    },
    {
        "line": 434,
        "fullcodeline": "if (op == NJS_VMCODE_COALESCE) {"
    },
    {
        "line": 459,
        "fullcodeline": "if (njs_slow_path(!njs_is_numeric(value1))) {"
    },
    {
        "line": 552,
        "fullcodeline": "move_arg = (njs_vmcode_move_arg_t *) pc;"
    },
    {
        "line": 553,
        "fullcodeline": "native = vm->top_frame;"
    },
    {
        "line": 555,
        "fullcodeline": "hint = move_arg->dst;"
    },
    {
        "line": 558,
        "fullcodeline": "njs_vmcode_operand(vm, move_arg->src, value2);"
    },
    {
        "line": 566,
        "fullcodeline": "njs_vmcode_operand(vm, (njs_index_t) value2, value2);"
    },
    {
        "line": 572,
        "fullcodeline": "ret = (njs_jump_off_t) value2;"
    },
    {
        "line": 576,
        "fullcodeline": "set = (njs_vmcode_prop_set_t *) pc;"
    },
    {
        "line": 577,
        "fullcodeline": "njs_vmcode_operand(vm, set->value, retval);"
    },
    {
        "line": 579,
        "fullcodeline": "ret = njs_value_property_set(vm, value1, value2, retval);"
    },
    {
        "line": 588,
        "fullcodeline": "accessor = (njs_vmcode_prop_accessor_t *) pc;"
    },
    {
        "line": 589,
        "fullcodeline": "njs_vmcode_operand(vm, accessor->value, function);"
    },
    {
        "line": 591,
        "fullcodeline": "ret = njs_value_to_key(vm, &name, value2);"
    },
    {
        "line": 599,
        "fullcodeline": "ret = njs_object_prop_define(vm, value1, &name, function,"
    },
    {
        "line": 610,
        "fullcodeline": "ret = njs_is_true(value1);"
    },
    {
        "line": 612,
        "fullcodeline": "ret ^= op - NJS_VMCODE_IF_TRUE_JUMP;"
    },
    {
        "line": 614,
        "fullcodeline": "ret = ret ? (njs_jump_off_t) value2"
    },
    {
        "line": 631,
        "fullcodeline": "set = (njs_vmcode_prop_set_t *) pc;"
    },
    {
        "line": 632,
        "fullcodeline": "njs_vmcode_operand(vm, set->value, retval);"
    },
    {
        "line": 633,
        "fullcodeline": "ret = njs_vmcode_property_init(vm, value1, value2, retval);"
    },
    {
        "line": 641,
        "fullcodeline": "njs_vmcode_operand(vm, (njs_index_t) value2, value2);"
    },
    {
        "line": 645,
        "fullcodeline": "fcopy = (njs_vmcode_function_copy_t *) pc;"
    },
    {
        "line": 646,
        "fullcodeline": "ret = njs_vmcode_function_copy(vm, fcopy->function,"
    },
    {
        "line": 651,
        "fullcodeline": "function_frame = (njs_vmcode_function_frame_t *) pc;"
    },
    {
        "line": 655,
        "fullcodeline": "ret = njs_function_frame_create(vm, value1,"
    },
    {
        "line": 668,
        "fullcodeline": "method_frame = (njs_vmcode_method_frame_t *) pc;"
    },
    {
        "line": 670,
        "fullcodeline": "ret = njs_value_property(vm, value1, value2, &dst);"
    },
    {
        "line": 688,
        "fullcodeline": "ret = njs_function_frame_create(vm, &dst, value1,"
    },
    {
        "line": 700,
        "fullcodeline": "vm->active_frame->native.pc = pc;"
    },
    {
        "line": 702,
        "fullcodeline": "njs_vmcode_operand(vm, (njs_index_t) value2, value2);"
    },
    {
        "line": 704,
        "fullcodeline": "ret = njs_function_frame_invoke(vm, value2);"
    },
    {
        "line": 713,
        "fullcodeline": "pnext = (njs_vmcode_prop_next_t *) pc;"
    },
    {
        "line": 714,
        "fullcodeline": "retval = njs_scope_value(vm, pnext->retval);"
    },
    {
        "line": 725,
        "fullcodeline": "njs_mp_free(vm->mem_pool, next);"
    },
    {
        "line": 731,
        "fullcodeline": "ret = njs_vmcode_arguments(vm, pc);"
    },
    {
        "line": 739,
        "fullcodeline": "set = (njs_vmcode_prop_set_t *) pc;"
    },
    {
        "line": 740,
        "fullcodeline": "njs_vmcode_operand(vm, set->value, retval);"
    },
    {
        "line": 741,
        "fullcodeline": "ret = njs_vmcode_proto_init(vm, value1, value2, retval);"
    },
    {
        "line": 749,
        "fullcodeline": "await = (njs_vmcode_await_t *) pc;"
    },
    {
        "line": 753,
        "fullcodeline": "ret = njs_vmcode_try_start(vm, value1, value2, pc);"
    },
    {
        "line": 761,
        "fullcodeline": "njs_vmcode_operand(vm, (njs_index_t) value2, value2);"
    },
    {
        "line": 766,
        "fullcodeline": "try_trampoline = (njs_vmcode_try_trampoline_t *) pc;"
    },
    {
        "line": 767,
        "fullcodeline": "value1 = njs_scope_value(vm, try_trampoline->exit_value);"
    },
    {
        "line": 769,
        "fullcodeline": "ret = njs_vmcode_try_break(vm, value1, value2);"
    },
    {
        "line": 773,
        "fullcodeline": "try_trampoline = (njs_vmcode_try_trampoline_t *) pc;"
    },
    {
        "line": 774,
        "fullcodeline": "value1 = njs_scope_value(vm, try_trampoline->exit_value);"
    },
    {
        "line": 776,
        "fullcodeline": "ret = njs_vmcode_try_continue(vm, value1, value2);"
    },
    {
        "line": 780,
        "fullcodeline": "ret = njs_vmcode_try_end(vm, value1, value2);"
    },
    {
        "line": 792,
        "fullcodeline": "*value1 = vm->retval;"
    },
    {
        "line": 806,
        "fullcodeline": "finally = (njs_vmcode_finally_t *) pc;"
    },
    {
        "line": 807,
        "fullcodeline": "value1 = njs_scope_value(vm, finally->exit_value);"
    },
    {
        "line": 809,
        "fullcodeline": "ret = njs_vmcode_finally(vm, value1, value2, pc);"
    },
    {
        "line": 821,
        "fullcodeline": "var = (njs_vmcode_variable_t *) pc;"
    },
    {
        "line": 822,
        "fullcodeline": "value1 = njs_scope_value(vm, var->dst);"
    },
    {
        "line": 833,
        "fullcodeline": "njs_set_undefined(value1);"
    },
    {
        "line": 839,
        "fullcodeline": "var = (njs_vmcode_variable_t *) pc;"
    },
    {
        "line": 840,
        "fullcodeline": "value2 = njs_scope_value(vm, var->dst);"
    },
    {
        "line": 842,
        "fullcodeline": "value1 = njs_mp_alloc(vm->mem_pool, sizeof(njs_value_t));"
    },
    {
        "line": 849,
        "fullcodeline": "njs_scope_value_set(vm, var->dst, value1);"
    },
    {
        "line": 855,
        "fullcodeline": "var = (njs_vmcode_variable_t *) pc;"
    },
    {
        "line": 856,
        "fullcodeline": "value1 = njs_scope_value(vm, var->dst);"
    },
    {
        "line": 866,
        "fullcodeline": "njs_reference_error(vm, \"cannot access variable \""
    },
    {
        "line": 871,
        "fullcodeline": "njs_vmcode_error(vm, pc);"
    },
    {
        "line": 875,
        "fullcodeline": "njs_type_error(vm, \"assignment to constant variable\");"
    },
    {
        "line": 879,
        "fullcodeline": "njs_internal_error(vm, \"%d has NO retval\", op);"
    },
    {
        "line": 111,
        "fullcodeline": "ret = njs_value_to_numeric(vm, value2, &numeric1);"
    },
    {
        "line": 116,
        "fullcodeline": "num = njs_number(&numeric1);"
    },
    {
        "line": 128,
        "fullcodeline": "njs_set_number(retval, num);"
    },
    {
        "line": 149,
        "fullcodeline": "pc += sizeof(njs_vmcode_error_t);"
    },
    {
        "line": 172,
        "fullcodeline": "hint = (op == NJS_VMCODE_ADDITION) && njs_is_date(value1);"
    },
    {
        "line": 173,
        "fullcodeline": "ret = njs_value_to_primitive(vm, &primitive1, value1, hint);"
    },
    {
        "line": 178,
        "fullcodeline": "value1 = &primitive1;"
    },
    {
        "line": 182,
        "fullcodeline": "hint = (op == NJS_VMCODE_ADDITION) && njs_is_date(value2);"
    },
    {
        "line": 183,
        "fullcodeline": "ret = njs_value_to_primitive(vm, &primitive2, value2, hint);"
    },
    {
        "line": 188,
        "fullcodeline": "value2 = &primitive2;"
    },
    {
        "line": 194,
        "fullcodeline": "njs_symbol_conversion_failed(vm,"
    },
    {
        "line": 224,
        "fullcodeline": "ret = njs_primitive_value_to_string(vm, &dst, src);"
    },
    {
        "line": 229,
        "fullcodeline": "ret = njs_string_concat(vm, s1, s2);"
    },
    {
        "line": 234,
        "fullcodeline": "*retval = vm->retval;"
    },
    {
        "line": 236,
        "fullcodeline": "pc += ret;"
    },
    {
        "line": 242,
        "fullcodeline": "src = value1;"
    },
    {
        "line": 243,
        "fullcodeline": "value1 = value2;"
    },
    {
        "line": 244,
        "fullcodeline": "value2 = src;"
    },
    {
        "line": 250,
        "fullcodeline": "ret = ret > 0;"
    },
    {
        "line": 288,
        "fullcodeline": "ret = njs_value_to_numeric(vm, value1, &numeric1);"
    },
    {
        "line": 293,
        "fullcodeline": "value1 = &numeric1;"
    },
    {
        "line": 297,
        "fullcodeline": "ret = njs_value_to_numeric(vm, value2, &numeric2);"
    },
    {
        "line": 302,
        "fullcodeline": "value2 = &numeric2;"
    },
    {
        "line": 312,
        "fullcodeline": "num -= njs_number(value2);"
    },
    {
        "line": 316,
        "fullcodeline": "num *= njs_number(value2);"
    },
    {
        "line": 320,
        "fullcodeline": "exponent = njs_number(value2);"
    },
    {
        "line": 327,
        "fullcodeline": "valid = njs_expect(1, fabs(num) != 1"
    },
    {
        "line": 331,
        "fullcodeline": "num = valid ? pow(num, exponent) : NAN;"
    },
    {
        "line": 335,
        "fullcodeline": "num /= njs_number(value2);"
    },
    {
        "line": 339,
        "fullcodeline": "num = fmod(num, njs_number(value2));"
    },
    {
        "line": 345,
        "fullcodeline": "i32 = njs_number_to_int32(njs_number(value2));"
    },
    {
        "line": 361,
        "fullcodeline": "njs_set_int32(retval, i32);"
    },
    {
        "line": 365,
        "fullcodeline": "u32 = njs_number_to_uint32(njs_number(value2)) & 0x1f;"
    },
    {
        "line": 408,
        "fullcodeline": "vm->retval = njs_value_true;"
    },
    {
        "line": 435,
        "fullcodeline": "ret = !njs_is_null_or_undefined(value1);"
    },
    {
        "line": 443,
        "fullcodeline": "test_jump = (njs_vmcode_test_jump_t *) pc;"
    },
    {
        "line": 444,
        "fullcodeline": "ret = test_jump->offset;"
    },
    {
        "line": 460,
        "fullcodeline": "ret = njs_value_to_numeric(vm, value1, &numeric1);"
    },
    {
        "line": 465,
        "fullcodeline": "value1 = &numeric1;"
    },
    {
        "line": 473,
        "fullcodeline": "num = -num;"
    },
    {
        "line": 477,
        "fullcodeline": "njs_set_number(retval, num);"
    },
    {
        "line": 481,
        "fullcodeline": "njs_set_int32(retval, ~njs_number_to_uint32(num));"
    },
    {
        "line": 580,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 592,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 601,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 620,
        "fullcodeline": "if (njs_values_strict_equal(value1, value2)) {"
    },
    {
        "line": 634,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 642,
        "fullcodeline": "return njs_vmcode_return(vm, NULL, value2);"
    },
    {
        "line": 660,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 671,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 675,
        "fullcodeline": "if (njs_slow_path(!njs_is_function(&dst))) {"
    },
    {
        "line": 692,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 705,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 718,
        "fullcodeline": "if (next->index < next->array->length) {"
    },
    {
        "line": 732,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 742,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 750,
        "fullcodeline": "return njs_vmcode_await(vm, await);"
    },
    {
        "line": 754,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 794,
        "fullcodeline": "if ((njs_jump_off_t) value2 == sizeof(njs_vmcode_catch_t)) {"
    },
    {
        "line": 824,
        "fullcodeline": "if (njs_is_valid(value1)) {"
    },
    {
        "line": 843,
        "fullcodeline": "if (njs_slow_path(value1 == NULL)) {"
    },
    {
        "line": 858,
        "fullcodeline": "if (njs_is_valid(value1)) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 119,
        "fullcodeline": "num = njs_number(value2);"
    },
    {
        "line": 131,
        "fullcodeline": "*retval = *value1;"
    },
    {
        "line": 174,
        "fullcodeline": "if (ret != NJS_OK) {"
    },
    {
        "line": 184,
        "fullcodeline": "if (ret != NJS_OK) {"
    },
    {
        "line": 192,
        "fullcodeline": "|| njs_is_symbol(value2)))"
    },
    {
        "line": 195,
        "fullcodeline": "(op == NJS_VMCODE_ADDITION) &&"
    },
    {
        "line": 204,
        "fullcodeline": "if (njs_fast_path(njs_is_numeric(value1)"
    },
    {
        "line": 213,
        "fullcodeline": "if (njs_is_string(value1)) {"
    },
    {
        "line": 225,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 230,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 253,
        "fullcodeline": "ret = ret == 0;"
    },
    {
        "line": 289,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 298,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 438,
        "fullcodeline": "ret = njs_is_true(value1);"
    },
    {
        "line": 439,
        "fullcodeline": "ret ^= op - NJS_VMCODE_TEST_IF_TRUE;"
    },
    {
        "line": 461,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 593,
        "fullcodeline": "njs_internal_error(vm, \"failed conversion of type \\\"%s\\\" \""
    },
    {
        "line": 621,
        "fullcodeline": "equal = (njs_vmcode_equal_jump_t *) pc;"
    },
    {
        "line": 622,
        "fullcodeline": "ret = equal->offset;"
    },
    {
        "line": 657,
        "fullcodeline": "(uintptr_t) value2,"
    },
    {
        "line": 676,
        "fullcodeline": "ret = njs_value_to_key(vm, value2, value2);"
    },
    {
        "line": 681,
        "fullcodeline": "njs_key_string_get(vm, value2, &string);"
    },
    {
        "line": 682,
        "fullcodeline": "njs_type_error(vm,"
    },
    {
        "line": 721,
        "fullcodeline": "ret = pnext->offset;"
    },
    {
        "line": 795,
        "fullcodeline": "ret = njs_vmcode_try_end(vm, value1, value2);"
    },
    {
        "line": 825,
        "fullcodeline": "value1 = njs_mp_alloc(vm->mem_pool, sizeof(njs_value_t));"
    },
    {
        "line": 830,
        "fullcodeline": "njs_scope_value_set(vm, var->dst, value1);"
    },
    {
        "line": 196,
        "fullcodeline": "(njs_is_string(value1) || njs_is_string(value2)));"
    },
    {
        "line": 207,
        "fullcodeline": "njs_set_number(retval, njs_number(value1)"
    },
    {
        "line": 209,
        "fullcodeline": "pc += sizeof(njs_vmcode_3addr_t);"
    },
    {
        "line": 214,
        "fullcodeline": "s1 = value1;"
    },
    {
        "line": 215,
        "fullcodeline": "s2 = &dst;"
    },
    {
        "line": 216,
        "fullcodeline": "src = value2;"
    },
    {
        "line": 349,
        "fullcodeline": "i32 &= njs_number_to_int32(num);"
    },
    {
        "line": 353,
        "fullcodeline": "i32 |= njs_number_to_int32(num);"
    },
    {
        "line": 357,
        "fullcodeline": "i32 ^= njs_number_to_int32(num);"
    },
    {
        "line": 370,
        "fullcodeline": "i32 = njs_number_to_int32(num);"
    },
    {
        "line": 379,
        "fullcodeline": "njs_set_int32(retval, i32);"
    },
    {
        "line": 383,
        "fullcodeline": "njs_set_uint32(retval,"
    },
    {
        "line": 595,
        "fullcodeline": "njs_type_string(value2->type));"
    },
    {
        "line": 677,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 798,
        "fullcodeline": "frame = (njs_frame_t *) vm->top_frame;"
    },
    {
        "line": 799,
        "fullcodeline": "frame->exception.catch = pc + (njs_jump_off_t) value2;"
    },
    {
        "line": 826,
        "fullcodeline": "if (njs_slow_path(value1 == NULL)) {"
    },
    {
        "line": 205,
        "fullcodeline": "&& njs_is_numeric(value2)))"
    },
    {
        "line": 219,
        "fullcodeline": "s1 = &dst;"
    },
    {
        "line": 220,
        "fullcodeline": "s2 = value2;"
    },
    {
        "line": 221,
        "fullcodeline": "src = value1;"
    },
    {
        "line": 328,
        "fullcodeline": "|| (!isnan(exponent)"
    },
    {
        "line": 372,
        "fullcodeline": "if (op == NJS_VMCODE_LEFT_SHIFT) {"
    },
    {
        "line": 384,
        "fullcodeline": "njs_number_to_uint32(num) >> u32);"
    },
    {
        "line": 719,
        "fullcodeline": "*retval = next->array->start[next->index++];"
    },
    {
        "line": 208,
        "fullcodeline": "+ njs_number(value2));"
    },
    {
        "line": 329,
        "fullcodeline": "&& !isinf(exponent)));"
    },
    {
        "line": 374,
        "fullcodeline": "i32 = (uint32_t) i32 << u32;"
    },
    {
        "line": 376,
        "fullcodeline": "i32 >>= u32;"
    }
]