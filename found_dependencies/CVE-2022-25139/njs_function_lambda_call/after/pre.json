[
    {
        "line": 12,
        "fullcodeline": "frame = (njs_frame_t *) vm->top_frame;"
    },
    {
        "line": 13,
        "fullcodeline": "function = frame->native.function;"
    },
    {
        "line": 15,
        "fullcodeline": "njs_assert(function->context == NULL);"
    },
    {
        "line": 24,
        "fullcodeline": "lambda = function->u.lambda;"
    },
    {
        "line": 26,
        "fullcodeline": "args = vm->top_frame->arguments;"
    },
    {
        "line": 27,
        "fullcodeline": "local = vm->top_frame->local + function->args_offset;"
    },
    {
        "line": 41,
        "fullcodeline": "cur_local = vm->levels[NJS_LEVEL_LOCAL];"
    },
    {
        "line": 42,
        "fullcodeline": "cur_closures = vm->levels[NJS_LEVEL_CLOSURE];"
    },
    {
        "line": 43,
        "fullcodeline": "cur_temp = vm->levels[NJS_LEVEL_TEMP];"
    },
    {
        "line": 68,
        "fullcodeline": "vm->active_frame = frame;"
    },
    {
        "line": 72,
        "fullcodeline": "n = lambda->ndeclarations;"
    },
    {
        "line": 93,
        "fullcodeline": "ret = njs_vmcode_interpreter(vm, lambda->start, promise_cap, async_ctx);"
    },
    {
        "line": 17,
        "fullcodeline": "if (function->global && !function->closure_copied) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (n = 0; n < function->args_count; n++) {"
    },
    {
        "line": 48,
        "fullcodeline": "vm->levels[NJS_LEVEL_CLOSURE] = njs_function_closures(function);"
    },
    {
        "line": 60,
        "fullcodeline": "if (lambda->self != NJS_INDEX_NONE) {"
    },
    {
        "line": 74,
        "fullcodeline": "while (n != 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "ret = njs_function_capture_global_closures(vm, function);"
    },
    {
        "line": 52,
        "fullcodeline": "ret = njs_function_rest_parameters_init(vm, &frame->native);"
    },
    {
        "line": 61,
        "fullcodeline": "value = njs_scope_value(vm, lambda->self);"
    },
    {
        "line": 75,
        "fullcodeline": "n--;"
    },
    {
        "line": 77,
        "fullcodeline": "declr = &lambda->declarations[n];"
    },
    {
        "line": 78,
        "fullcodeline": "value = njs_scope_value(vm, declr->index);"
    },
    {
        "line": 80,
        "fullcodeline": "*value = *declr->value;"
    },
    {
        "line": 82,
        "fullcodeline": "function = njs_function_value_copy(vm, value);"
    },
    {
        "line": 87,
        "fullcodeline": "ret = njs_function_capture_closure(vm, function, function->u.lambda);"
    },
    {
        "line": 19,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 36,
        "fullcodeline": "*local++ = args++;"
    },
    {
        "line": 32,
        "fullcodeline": "if (!njs_is_valid(args)) {"
    },
    {
        "line": 33,
        "fullcodeline": "njs_set_undefined(args);"
    },
    {
        "line": 53,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (!njs_is_valid(value)) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (njs_slow_path(function == NULL)) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    }
]