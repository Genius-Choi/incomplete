[
    {
        "line": 12,
        "fullcodeline": "value = njs_arg(args, nargs, 1);"
    },
    {
        "line": 17,
        "fullcodeline": "async_frame = ctx->await;"
    },
    {
        "line": 18,
        "fullcodeline": "async = &async_frame->native;"
    },
    {
        "line": 19,
        "fullcodeline": "async->previous = vm->top_frame;"
    },
    {
        "line": 24,
        "fullcodeline": "top = vm->top_frame;"
    },
    {
        "line": 25,
        "fullcodeline": "frame = vm->active_frame;"
    },
    {
        "line": 27,
        "fullcodeline": "vm->levels[NJS_LEVEL_LOCAL] = async->local;"
    },
    {
        "line": 28,
        "fullcodeline": "vm->levels[NJS_LEVEL_CLOSURE] = njs_function_closures(async->function);"
    },
    {
        "line": 29,
        "fullcodeline": "vm->levels[NJS_LEVEL_TEMP] = async->temp;"
    },
    {
        "line": 31,
        "fullcodeline": "vm->top_frame = async;"
    },
    {
        "line": 32,
        "fullcodeline": "vm->active_frame = async_frame;"
    },
    {
        "line": 37,
        "fullcodeline": "vm->top_frame->retval = &vm->retval;"
    },
    {
        "line": 39,
        "fullcodeline": "ret = njs_vmcode_interpreter(vm, ctx->pc, ctx->capability, ctx);"
    },
    {
        "line": 41,
        "fullcodeline": "vm->levels[NJS_LEVEL_LOCAL] = cur_local;"
    },
    {
        "line": 42,
        "fullcodeline": "vm->levels[NJS_LEVEL_CLOSURE] = cur_closures;"
    },
    {
        "line": 43,
        "fullcodeline": "vm->levels[NJS_LEVEL_TEMP] = cur_temp;"
    },
    {
        "line": 45,
        "fullcodeline": "vm->top_frame = top;"
    },
    {
        "line": 46,
        "fullcodeline": "vm->active_frame = frame;"
    },
    {
        "line": 71,
        "fullcodeline": "(void) njs_function_call(vm, njs_function(&ctx->capability->reject),"
    },
    {
        "line": 74,
        "fullcodeline": "njs_async_context_free(vm, ctx);"
    },
    {
        "line": 13,
        "fullcodeline": "if (njs_is_error(value)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (ret == NJS_OK) {"
    },
    {
        "line": 34,
        "fullcodeline": "*njs_scope_value(vm, ctx->index) = *value;"
    },
    {
        "line": 49,
        "fullcodeline": "ret = njs_function_call(vm, njs_function(&ctx->capability->resolve),"
    },
    {
        "line": 52,
        "fullcodeline": "njs_async_context_free(vm, ctx);"
    },
    {
        "line": 54,
        "fullcodeline": "} else if (ret == NJS_AGAIN) {"
    },
    {
        "line": 55,
        "fullcodeline": "ret = NJS_OK;"
    },
    {
        "line": 57,
        "fullcodeline": "} else if (ret == NJS_ERROR) {"
    },
    {
        "line": 62,
        "fullcodeline": "value = &vm->retval;"
    },
    {
        "line": 58,
        "fullcodeline": "if (njs_is_memory_error(vm, &vm->retval)) {"
    }
]