[
    {
        "line": 4,
        "fullcodeline": "setActive(false);"
    },
    {
        "line": 5,
        "fullcodeline": "setAt(QSql::BeforeFirstRow);"
    },
    {
        "line": 8,
        "fullcodeline": "d->rInf.clear();"
    },
    {
        "line": 16,
        "fullcodeline": "r  = SQLAllocHandle(SQL_HANDLE_STMT,"
    },
    {
        "line": 24,
        "fullcodeline": "d->updateStmtHandleState();"
    },
    {
        "line": 44,
        "fullcodeline": "r = SQLPrepare(d->hStmt,"
    },
    {
        "line": 9,
        "fullcodeline": "if (d->hStmt && d->isStmtHandleValid()) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (r != SQL_SUCCESS) {"
    },
    {
        "line": 10,
        "fullcodeline": "r = SQLFreeHandle(SQL_HANDLE_STMT, d->hStmt);"
    },
    {
        "line": 17,
        "fullcodeline": "d->dpDbc(),"
    },
    {
        "line": 27,
        "fullcodeline": "r = SQLSetStmtAttr(d->hStmt,"
    },
    {
        "line": 37,
        "fullcodeline": "if (r != SQL_SUCCESS && r != SQL_SUCCESS_WITH_INFO) {"
    },
    {
        "line": 45,
        "fullcodeline": "toSQLTCHAR(query).data(),"
    },
    {
        "line": 11,
        "fullcodeline": "if (r != SQL_SUCCESS) {"
    },
    {
        "line": 32,
        "fullcodeline": "r = SQLSetStmtAttr(d->hStmt,"
    },
    {
        "line": 38,
        "fullcodeline": "setLastError(qMakeError(QCoreApplication::translate(\"QODBCResult\","
    },
    {
        "line": 46,
        "fullcodeline": "(SQLINTEGER) query.length());"
    },
    {
        "line": 49,
        "fullcodeline": "setLastError(qMakeError(QCoreApplication::translate(\"QODBCResult\","
    },
    {
        "line": 12,
        "fullcodeline": "qSqlWarning(\"QODBCResult::prepare: Unable to close statement\"_L1, d);"
    },
    {
        "line": 29,
        "fullcodeline": "(SQLPOINTER)SQL_CURSOR_FORWARD_ONLY,"
    },
    {
        "line": 34,
        "fullcodeline": "(SQLPOINTER)SQL_CURSOR_STATIC,"
    }
]