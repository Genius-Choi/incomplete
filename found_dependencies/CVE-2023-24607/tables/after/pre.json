[
    {
        "line": 9,
        "fullcodeline": "SQLRETURN r = SQLAllocHandle(SQL_HANDLE_STMT,"
    },
    {
        "line": 66,
        "fullcodeline": "r = SQLFreeHandle(SQL_HANDLE_STMT, hStmt);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!isOpen())"
    },
    {
        "line": 12,
        "fullcodeline": "if (r != SQL_SUCCESS) {"
    },
    {
        "line": 16,
        "fullcodeline": "r = SQLSetStmtAttr(hStmt,"
    },
    {
        "line": 21,
        "fullcodeline": "if (type & QSql::Tables)"
    },
    {
        "line": 23,
        "fullcodeline": "if (type & QSql::Views)"
    },
    {
        "line": 27,
        "fullcodeline": "if (tableType.isEmpty())"
    },
    {
        "line": 31,
        "fullcodeline": "auto joinedTableTypeString = toSQLTCHAR(tableType.join(u','));"
    },
    {
        "line": 33,
        "fullcodeline": "r = SQLTables(hStmt,"
    },
    {
        "line": 40,
        "fullcodeline": "if (r != SQL_SUCCESS)"
    },
    {
        "line": 55,
        "fullcodeline": "while (r == SQL_SUCCESS) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (r!= SQL_SUCCESS)"
    },
    {
        "line": 18,
        "fullcodeline": "(SQLPOINTER)SQL_CURSOR_FORWARD_ONLY,"
    },
    {
        "line": 22,
        "fullcodeline": "tableType += \"TABLE\"_L1;"
    },
    {
        "line": 24,
        "fullcodeline": "tableType += \"VIEW\"_L1;"
    },
    {
        "line": 26,
        "fullcodeline": "tableType += \"SYSTEM TABLE\"_L1;"
    },
    {
        "line": 41,
        "fullcodeline": "qSqlWarning(\"QODBCDriver::tables Unable to execute table list\"_L1, d);"
    },
    {
        "line": 44,
        "fullcodeline": "r = SQLFetchScroll(hStmt,"
    },
    {
        "line": 50,
        "fullcodeline": "if (r != SQL_SUCCESS && r != SQL_SUCCESS_WITH_INFO && r != SQL_NO_DATA) {"
    },
    {
        "line": 56,
        "fullcodeline": "tl.append(qGetStringData(hStmt, 2, -1, d->unicode).toString());"
    },
    {
        "line": 37,
        "fullcodeline": "joinedTableTypeString.data(), joinedTableTypeString.size());"
    },
    {
        "line": 48,
        "fullcodeline": "r = SQLFetch(hStmt);"
    },
    {
        "line": 51,
        "fullcodeline": "qWarning() << \"QODBCDriver::tables failed to retrieve table/view list: (\" << r << \",\" << qWarnODBCHandle(SQL_HANDLE_STMT, hStmt) << \")\";"
    },
    {
        "line": 52,
        "fullcodeline": "return QStringList();"
    },
    {
        "line": 59,
        "fullcodeline": "r = SQLFetchScroll(hStmt,"
    },
    {
        "line": 68,
        "fullcodeline": "qSqlWarning(\"QODBCDriver: Unable to free statement handle\"_L1 + QString::number(r), d);"
    },
    {
        "line": 63,
        "fullcodeline": "r = SQLFetch(hStmt);"
    }
]