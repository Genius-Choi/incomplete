[
    {
        "line": 2,
        "fullcodeline": "int len = op->size;"
    },
    {
        "line": 6,
        "fullcodeline": "ut8 *buf = op->bytes;"
    },
    {
        "line": 7,
        "fullcodeline": "const ut64 addr = op->addr;"
    },
    {
        "line": 8,
        "fullcodeline": "ut64 dst = 0LL;"
    },
    {
        "line": 15,
        "fullcodeline": "r_strbuf_init (&op->esil);"
    },
    {
        "line": 3,
        "fullcodeline": "if (len < 1) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (!op) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (mask & R_ARCH_OP_MASK_DISASM) {"
    },
    {
        "line": 17,
        "fullcodeline": "op->id = getid (buf[0]);"
    },
    {
        "line": 20,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_CJMP;"
    },
    {
        "line": 24,
        "fullcodeline": "RArch *a = as->arch;"
    },
    {
        "line": 25,
        "fullcodeline": "RIOReadAt read_at = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "RBin *bin = R_UNWRAP2 (a, binb.bin);"
    },
    {
        "line": 32,
        "fullcodeline": "r_strbuf_set (&op->esil, \"1,pc,-,brk,=[4],4,brk,+=\");"
    },
    {
        "line": 84,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_UJMP;"
    },
    {
        "line": 89,
        "fullcodeline": "op->size = countChar (buf, len, '>');"
    },
    {
        "line": 94,
        "fullcodeline": "op->size = countChar (buf, len, '<');"
    },
    {
        "line": 98,
        "fullcodeline": "op->size = countChar (buf, len, '+');"
    },
    {
        "line": 104,
        "fullcodeline": "op->size = countChar (buf, len, '-');"
    },
    {
        "line": 109,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_STORE;"
    },
    {
        "line": 113,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_LOAD;"
    },
    {
        "line": 118,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_TRAP;"
    },
    {
        "line": 121,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_NOP;"
    },
    {
        "line": 13,
        "fullcodeline": "(void) disassemble (op, buf, len);"
    },
    {
        "line": 27,
        "fullcodeline": "if (bin && bin->iob.read_at) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (len > 1) {"
    },
    {
        "line": 28,
        "fullcodeline": "RIOReadAt read_at = bin->iob.read_at;"
    },
    {
        "line": 29,
        "fullcodeline": "buf = malloc (0xff);"
    },
    {
        "line": 30,
        "fullcodeline": "read_at (bin->iob.io, op->addr, buf, 0xff);"
    },
    {
        "line": 35,
        "fullcodeline": "const ut8 *p = buf + 1;"
    },
    {
        "line": 36,
        "fullcodeline": "int lev = 0, i = 1;"
    },
    {
        "line": 37,
        "fullcodeline": "len--;"
    },
    {
        "line": 38,
        "fullcodeline": "while (i < len && *p) {"
    },
    {
        "line": 75,
        "fullcodeline": "p++;"
    },
    {
        "line": 76,
        "fullcodeline": "i++;"
    },
    {
        "line": 41,
        "fullcodeline": "lev++;"
    },
    {
        "line": 44,
        "fullcodeline": "lev--;"
    },
    {
        "line": 55,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_ILL;"
    },
    {
        "line": 58,
        "fullcodeline": "if (read_at && i == len - 1) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (lev < 1) {"
    },
    {
        "line": 46,
        "fullcodeline": "size_t delta = p - buf;"
    },
    {
        "line": 47,
        "fullcodeline": "dst = addr + (size_t)delta + 1;"
    }
]