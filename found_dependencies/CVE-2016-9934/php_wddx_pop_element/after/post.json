[
    {
        "line": 4,
        "fullcodeline": "wddx_stack \t\t\t*stack = (wddx_stack *)user_data;"
    },
    {
        "line": 9,
        "fullcodeline": "TSRMLS_FETCH();"
    },
    {
        "line": 12,
        "fullcodeline": "if (stack->top == 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (!strcmp(name, EL_STRING) || !strcmp(name, EL_NUMBER) ||"
    },
    {
        "line": 20,
        "fullcodeline": "!strcmp(name, EL_DATETIME)) {"
    },
    {
        "line": 21,
        "fullcodeline": "wddx_stack_top(stack, (void**)&ent1);"
    },
    {
        "line": 19,
        "fullcodeline": "!strcmp(name, EL_RECORDSET) || !strcmp(name, EL_BINARY) ||"
    },
    {
        "line": 23,
        "fullcodeline": "if (!ent1->data) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (!strcmp(name, EL_BINARY)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (Z_TYPE_P(ent1->data) == IS_OBJECT) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (stack->top > 1) {"
    },
    {
        "line": 34,
        "fullcodeline": "int new_len=0;"
    },
    {
        "line": 37,
        "fullcodeline": "new_str = php_base64_decode(Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data), &new_len);"
    },
    {
        "line": 38,
        "fullcodeline": "STR_FREE(Z_STRVAL_P(ent1->data));"
    },
    {
        "line": 49,
        "fullcodeline": "zval *fname, *retval = NULL;"
    },
    {
        "line": 51,
        "fullcodeline": "MAKE_STD_ZVAL(fname);"
    },
    {
        "line": 52,
        "fullcodeline": "ZVAL_STRING(fname, \"__wakeup\", 1);"
    },
    {
        "line": 56,
        "fullcodeline": "zval_dtor(fname);"
    },
    {
        "line": 57,
        "fullcodeline": "FREE_ZVAL(fname);"
    },
    {
        "line": 64,
        "fullcodeline": "stack->top--;"
    },
    {
        "line": 65,
        "fullcodeline": "wddx_stack_top(stack, (void**)&ent2);"
    },
    {
        "line": 131,
        "fullcodeline": "efree(ent1);"
    },
    {
        "line": 135,
        "fullcodeline": "} else if (!strcmp(name, EL_VAR) && stack->varname) {"
    },
    {
        "line": 18,
        "fullcodeline": "!strcmp(name, EL_ARRAY) || !strcmp(name, EL_STRUCT) ||"
    },
    {
        "line": 24,
        "fullcodeline": "if (stack->top > 1) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (ent2->data == NULL) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (Z_TYPE_P(ent2->data) == IS_ARRAY || Z_TYPE_P(ent2->data) == IS_OBJECT) {"
    },
    {
        "line": 133,
        "fullcodeline": "stack->done = 1;"
    },
    {
        "line": 136,
        "fullcodeline": "efree(stack->varname);"
    },
    {
        "line": 137,
        "fullcodeline": "stack->varname = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "stack->top--;"
    },
    {
        "line": 26,
        "fullcodeline": "efree(ent1);"
    },
    {
        "line": 40,
        "fullcodeline": "Z_STRVAL_P(ent1->data) = new_str;"
    },
    {
        "line": 41,
        "fullcodeline": "Z_STRLEN_P(ent1->data) = new_len;"
    },
    {
        "line": 59,
        "fullcodeline": "zval_ptr_dtor(&retval);"
    },
    {
        "line": 69,
        "fullcodeline": "zval_ptr_dtor(&ent1->data);"
    },
    {
        "line": 70,
        "fullcodeline": "efree(ent1);"
    },
    {
        "line": 75,
        "fullcodeline": "target_hash = HASH_OF(ent2->data);"
    },
    {
        "line": 17,
        "fullcodeline": "!strcmp(name, EL_BOOLEAN) || !strcmp(name, EL_NULL) ||"
    },
    {
        "line": 28,
        "fullcodeline": "stack->done = 1;"
    },
    {
        "line": 43,
        "fullcodeline": "ZVAL_EMPTY_STRING(ent1->data);"
    },
    {
        "line": 138,
        "fullcodeline": "} else if (!strcmp(name, EL_FIELD)) {"
    },
    {
        "line": 126,
        "fullcodeline": "efree(ent1->varname);"
    },
    {
        "line": 140,
        "fullcodeline": "wddx_stack_top(stack, (void **)&ent);"
    },
    {
        "line": 141,
        "fullcodeline": "efree(ent);"
    },
    {
        "line": 142,
        "fullcodeline": "stack->top--;"
    },
    {
        "line": 78,
        "fullcodeline": "if (!strcmp(ent1->varname, PHP_CLASS_NAME_VAR) &&"
    },
    {
        "line": 128,
        "fullcodeline": "zend_hash_next_index_insert(target_hash, &ent1->data, sizeof(zval *), NULL);"
    },
    {
        "line": 80,
        "fullcodeline": "ent2->type == ST_STRUCT && Z_TYPE_P(ent2->data) == IS_ARRAY) {"
    },
    {
        "line": 81,
        "fullcodeline": "zend_bool incomplete_class = 0;"
    },
    {
        "line": 83,
        "fullcodeline": "zend_str_tolower(Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data));"
    },
    {
        "line": 115,
        "fullcodeline": "zval_ptr_dtor(&ent1->data);"
    },
    {
        "line": 84,
        "fullcodeline": "if (zend_hash_find(EG(class_table), Z_STRVAL_P(ent1->data),"
    },
    {
        "line": 90,
        "fullcodeline": "if (pce != &PHP_IC_ENTRY && ((*pce)->serialize || (*pce)->unserialize)) {"
    },
    {
        "line": 79,
        "fullcodeline": "Z_TYPE_P(ent1->data) == IS_STRING && Z_STRLEN_P(ent1->data) &&"
    },
    {
        "line": 86,
        "fullcodeline": "incomplete_class = 1;"
    },
    {
        "line": 87,
        "fullcodeline": "pce = &PHP_IC_ENTRY;"
    },
    {
        "line": 91,
        "fullcodeline": "ent2->data = NULL;"
    },
    {
        "line": 116,
        "fullcodeline": "} else if (Z_TYPE_P(ent2->data) == IS_OBJECT) {"
    },
    {
        "line": 85,
        "fullcodeline": "Z_STRLEN_P(ent1->data)+1, (void **) &pce)==FAILURE) {"
    },
    {
        "line": 95,
        "fullcodeline": "MAKE_STD_ZVAL(obj);"
    },
    {
        "line": 96,
        "fullcodeline": "object_init_ex(obj, *pce);"
    },
    {
        "line": 99,
        "fullcodeline": "zend_hash_merge(Z_OBJPROP_P(obj),"
    },
    {
        "line": 109,
        "fullcodeline": "zval_ptr_dtor(&ent2->data);"
    },
    {
        "line": 112,
        "fullcodeline": "ent2->data = obj;"
    },
    {
        "line": 117,
        "fullcodeline": "zend_class_entry *old_scope = EG(scope);"
    },
    {
        "line": 119,
        "fullcodeline": "EG(scope) = Z_OBJCE_P(ent2->data);"
    },
    {
        "line": 120,
        "fullcodeline": "Z_DELREF_P(ent1->data);"
    },
    {
        "line": 121,
        "fullcodeline": "add_property_zval(ent2->data, ent1->varname, ent1->data);"
    },
    {
        "line": 122,
        "fullcodeline": "EG(scope) = old_scope;"
    },
    {
        "line": 100,
        "fullcodeline": "Z_ARRVAL_P(ent2->data),"
    },
    {
        "line": 101,
        "fullcodeline": "(void (*)(void *)) zval_add_ref,"
    },
    {
        "line": 102,
        "fullcodeline": "(void *) &tmp, sizeof(zval *), 0);"
    },
    {
        "line": 124,
        "fullcodeline": "zend_symtable_update(target_hash, ent1->varname, strlen(ent1->varname)+1, &ent1->data, sizeof(zval *), NULL);"
    },
    {
        "line": 105,
        "fullcodeline": "php_store_class_name(obj, Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data));"
    }
]