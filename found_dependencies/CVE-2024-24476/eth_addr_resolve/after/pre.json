[
    {
        "line": 4,
        "fullcodeline": "const guint8 *addr = tp->addr;"
    },
    {
        "line": 5,
        "fullcodeline": "size_t addr_size = sizeof(tp->addr);"
    },
    {
        "line": 7,
        "fullcodeline": "if ( (eth = get_ethbyaddr(addr)) != NULL) {"
    },
    {
        "line": 8,
        "fullcodeline": "(void) g_strlcpy(tp->resolved_name, eth->name, MAXNAMELEN);"
    },
    {
        "line": 9,
        "fullcodeline": "tp->status = HASHETHER_STATUS_RESOLVED_NAME;"
    },
    {
        "line": 18,
        "fullcodeline": "mask = 7;"
    },
    {
        "line": 29,
        "fullcodeline": "mask = 7;"
    },
    {
        "line": 40,
        "fullcodeline": "mask = 7;"
    },
    {
        "line": 52,
        "fullcodeline": "manuf_value = manuf_name_lookup(addr, addr_size);"
    },
    {
        "line": 62,
        "fullcodeline": "mask = 7;"
    },
    {
        "line": 74,
        "fullcodeline": "mask = 7;"
    },
    {
        "line": 86,
        "fullcodeline": "mask = 7;"
    },
    {
        "line": 99,
        "fullcodeline": "set_address(&ether_addr, AT_ETHER, 6, addr);"
    },
    {
        "line": 100,
        "fullcodeline": "address_to_str_buf(&ether_addr, tp->resolved_name, MAXNAMELEN);"
    },
    {
        "line": 101,
        "fullcodeline": "tp->status = HASHETHER_STATUS_RESOLVED_DUMMY;"
    },
    {
        "line": 27,
        "fullcodeline": "} while (mask--);"
    },
    {
        "line": 38,
        "fullcodeline": "} while (mask--);"
    },
    {
        "line": 49,
        "fullcodeline": "} while (mask--);"
    },
    {
        "line": 72,
        "fullcodeline": "} while (mask--);"
    },
    {
        "line": 84,
        "fullcodeline": "} while (mask--);"
    },
    {
        "line": 96,
        "fullcodeline": "} while (--mask); /* Work down to the last bit */"
    },
    {
        "line": 53,
        "fullcodeline": "if ((manuf_value != NULL) && (manuf_value->status != HASHETHER_STATUS_UNRESOLVED)) {"
    },
    {
        "line": 54,
        "fullcodeline": "snprintf(tp->resolved_name, MAXNAMELEN, \"%s_%02x:%02x:%02x\","
    },
    {
        "line": 56,
        "fullcodeline": "tp->status = HASHETHER_STATUS_RESOLVED_DUMMY;"
    },
    {
        "line": 21,
        "fullcodeline": "if ((name = wka_name_lookup(addr, mask+40)) != NULL) {"
    },
    {
        "line": 32,
        "fullcodeline": "if ((name = wka_name_lookup(addr, mask+32)) != NULL) {"
    },
    {
        "line": 43,
        "fullcodeline": "if ((name = wka_name_lookup(addr, mask+24)) != NULL) {"
    },
    {
        "line": 65,
        "fullcodeline": "if ((name = wka_name_lookup(addr, mask+16)) != NULL) {"
    },
    {
        "line": 77,
        "fullcodeline": "if ((name = wka_name_lookup(addr, mask+8)) != NULL) {"
    },
    {
        "line": 22,
        "fullcodeline": "snprintf(tp->resolved_name, MAXNAMELEN, \"%s_%02x\","
    },
    {
        "line": 24,
        "fullcodeline": "tp->status = HASHETHER_STATUS_RESOLVED_DUMMY;"
    },
    {
        "line": 33,
        "fullcodeline": "snprintf(tp->resolved_name, MAXNAMELEN, \"%s_%02x:%02x\","
    },
    {
        "line": 35,
        "fullcodeline": "tp->status = HASHETHER_STATUS_RESOLVED_DUMMY;"
    },
    {
        "line": 44,
        "fullcodeline": "snprintf(tp->resolved_name, MAXNAMELEN, \"%s_%02x:%02x:%02x\","
    },
    {
        "line": 46,
        "fullcodeline": "tp->status = HASHETHER_STATUS_RESOLVED_DUMMY;"
    },
    {
        "line": 66,
        "fullcodeline": "snprintf(tp->resolved_name, MAXNAMELEN, \"%s_%02x:%02x:%02x:%02x\","
    },
    {
        "line": 69,
        "fullcodeline": "tp->status = HASHETHER_STATUS_RESOLVED_DUMMY;"
    },
    {
        "line": 78,
        "fullcodeline": "snprintf(tp->resolved_name, MAXNAMELEN, \"%s_%02x:%02x:%02x:%02x:%02x\","
    },
    {
        "line": 81,
        "fullcodeline": "tp->status = HASHETHER_STATUS_RESOLVED_DUMMY;"
    },
    {
        "line": 89,
        "fullcodeline": "if ((name = wka_name_lookup(addr, mask)) != NULL) {"
    },
    {
        "line": 90,
        "fullcodeline": "snprintf(tp->resolved_name, MAXNAMELEN, \"%s_%02x:%02x:%02x:%02x:%02x:%02x\","
    },
    {
        "line": 93,
        "fullcodeline": "tp->status = HASHETHER_STATUS_RESOLVED_DUMMY;"
    },
    {
        "line": 23,
        "fullcodeline": "name, addr[5] & (0xFF >> mask));"
    },
    {
        "line": 34,
        "fullcodeline": "name, addr[4] & (0xFF >> mask), addr[5]);"
    },
    {
        "line": 45,
        "fullcodeline": "name, addr[3] & (0xFF >> mask), addr[4], addr[5]);"
    },
    {
        "line": 67,
        "fullcodeline": "name, addr[2] & (0xFF >> mask), addr[3], addr[4],"
    },
    {
        "line": 79,
        "fullcodeline": "name, addr[1] & (0xFF >> mask), addr[2], addr[3],"
    },
    {
        "line": 91,
        "fullcodeline": "name, addr[0] & (0xFF >> mask), addr[1], addr[2],"
    }
]