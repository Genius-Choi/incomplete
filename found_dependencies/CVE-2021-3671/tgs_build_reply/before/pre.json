[
    {
        "line": 11,
        "fullcodeline": "krb5_context context = priv->context;"
    },
    {
        "line": 12,
        "fullcodeline": "krb5_kdc_configuration *config = priv->config;"
    },
    {
        "line": 13,
        "fullcodeline": "KDC_REQ *req = &priv->req;"
    },
    {
        "line": 14,
        "fullcodeline": "KDC_REQ_BODY *b = &priv->req.req_body;"
    },
    {
        "line": 15,
        "fullcodeline": "const char *from = priv->from;"
    },
    {
        "line": 17,
        "fullcodeline": "krb5_principal cp = NULL, sp = NULL, rsp = NULL, tp = NULL, dp = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "krb5_principal krbtgt_out_principal = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "char *spn = NULL, *cpn = NULL, *tpn = NULL, *dpn = NULL, *krbtgt_out_n = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "hdb_entry_ex *server = NULL, *client = NULL, *s4u2self_impersonated_client = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "krb5_realm ref_realm = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "EncTicketPart *tgt = &ticket->ticket;"
    },
    {
        "line": 24,
        "fullcodeline": "krb5_principals spp = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "const char *tgt_realm = /* Realm of TGT issuer */"
    },
    {
        "line": 31,
        "fullcodeline": "const char *our_realm = /* Realm of this KDC */"
    },
    {
        "line": 33,
        "fullcodeline": "char **capath = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "size_t num_capath = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "hdb_entry_ex *krbtgt_out = NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "char opt_str[128];"
    },
    {
        "line": 44,
        "fullcodeline": "int signedpath = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "int flags = HDB_F_FOR_TGS_REQ;"
    },
    {
        "line": 50,
        "fullcodeline": "memset(&sessionkey, 0, sizeof(sessionkey));"
    },
    {
        "line": 51,
        "fullcodeline": "memset(&adtkt, 0, sizeof(adtkt));"
    },
    {
        "line": 52,
        "fullcodeline": "krb5_data_zero(&rspac);"
    },
    {
        "line": 53,
        "fullcodeline": "memset(&enc_pa_data, 0, sizeof(enc_pa_data));"
    },
    {
        "line": 55,
        "fullcodeline": "s = b->sname;"
    },
    {
        "line": 56,
        "fullcodeline": "r = b->realm;"
    },
    {
        "line": 140,
        "fullcodeline": "_krb5_principalname2krb5_principal(context, &sp, *s, r);"
    },
    {
        "line": 141,
        "fullcodeline": "ret = krb5_unparse_name(context, sp, &priv->sname);"
    },
    {
        "line": 144,
        "fullcodeline": "spn = priv->sname;"
    },
    {
        "line": 145,
        "fullcodeline": "_krb5_principalname2krb5_principal(context, &cp, tgt->cname, tgt->crealm);"
    },
    {
        "line": 146,
        "fullcodeline": "ret = krb5_unparse_name(context, cp, &priv->cname);"
    },
    {
        "line": 149,
        "fullcodeline": "cpn = priv->cname;"
    },
    {
        "line": 150,
        "fullcodeline": "unparse_flags (KDCOptions2int(b->kdc_options),"
    },
    {
        "line": 166,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, sp,"
    },
    {
        "line": 169,
        "fullcodeline": "priv->server = server;"
    },
    {
        "line": 358,
        "fullcodeline": "ret = hdb_enctype2key(context, &krbtgt->entry, NULL, /* XXX use the right kvno! */"
    },
    {
        "line": 374,
        "fullcodeline": "ret = krb5_make_principal(context,"
    },
    {
        "line": 386,
        "fullcodeline": "ret = krb5_unparse_name(context, krbtgt_out_principal, &krbtgt_out_n);"
    },
    {
        "line": 394,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, krbtgt_out_principal,"
    },
    {
        "line": 429,
        "fullcodeline": "ret = _kdc_get_preferred_key(context, config, krbtgt_out, krbtgt_out_n,"
    },
    {
        "line": 438,
        "fullcodeline": "ret = hdb_enctype2key(context, &krbtgt_out->entry, NULL,"
    },
    {
        "line": 467,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, cp, HDB_F_GET_CLIENT | flags,"
    },
    {
        "line": 469,
        "fullcodeline": "flags &= ~HDB_F_SYNTHETIC_OK;"
    },
    {
        "line": 470,
        "fullcodeline": "priv->client = client;"
    },
    {
        "line": 507,
        "fullcodeline": "ret = check_PAC(context, config, cp, NULL,"
    },
    {
        "line": 523,
        "fullcodeline": "ret = check_KRB5SignedPath(context,"
    },
    {
        "line": 545,
        "fullcodeline": "tp = cp;"
    },
    {
        "line": 546,
        "fullcodeline": "tpn = cpn;"
    },
    {
        "line": 915,
        "fullcodeline": "ret = kdc_check_flags(priv, FALSE);"
    },
    {
        "line": 988,
        "fullcodeline": "ret = tgs_make_reply(priv,"
    },
    {
        "line": 1011,
        "fullcodeline": "free(dpn);"
    },
    {
        "line": 1012,
        "fullcodeline": "free(krbtgt_out_n);"
    },
    {
        "line": 1013,
        "fullcodeline": "_krb5_free_capath(context, capath);"
    },
    {
        "line": 1015,
        "fullcodeline": "krb5_data_free(&rspac);"
    },
    {
        "line": 1016,
        "fullcodeline": "krb5_free_keyblock_contents(context, &sessionkey);"
    },
    {
        "line": 1028,
        "fullcodeline": "krb5_free_principal(context, cp);"
    },
    {
        "line": 1029,
        "fullcodeline": "krb5_free_principal(context, dp);"
    },
    {
        "line": 1030,
        "fullcodeline": "krb5_free_principal(context, sp);"
    },
    {
        "line": 1031,
        "fullcodeline": "krb5_free_principal(context, krbtgt_out_principal);"
    },
    {
        "line": 1032,
        "fullcodeline": "free(ref_realm);"
    },
    {
        "line": 1033,
        "fullcodeline": "free_METHOD_DATA(&enc_pa_data);"
    },
    {
        "line": 1035,
        "fullcodeline": "free_EncTicketPart(&adtkt);"
    },
    {
        "line": 30,
        "fullcodeline": "krb5_principal_get_realm(context, krbtgt->entry.principal);"
    },
    {
        "line": 32,
        "fullcodeline": "krb5_principal_get_comp_string(context, krbtgt->entry.principal, 1);"
    },
    {
        "line": 170,
        "fullcodeline": "if (ret == HDB_ERR_NOT_FOUND_HERE) {"
    },
    {
        "line": 343,
        "fullcodeline": "ret = krb5_generate_random_keyblock(context, etype, &sessionkey);"
    },
    {
        "line": 415,
        "fullcodeline": "if (strcmp(krb5_principal_get_realm(context, server->entry.principal),"
    },
    {
        "line": 459,
        "fullcodeline": "ret = krb5_ticket_get_authorization_data_type(context, ticket,"
    },
    {
        "line": 471,
        "fullcodeline": "if(ret == HDB_ERR_NOT_FOUND_HERE) {"
    },
    {
        "line": 749,
        "fullcodeline": "if (client != NULL"
    },
    {
        "line": 919,
        "fullcodeline": "if((b->kdc_options.validate || b->kdc_options.renew) &&"
    },
    {
        "line": 930,
        "fullcodeline": "if (!_kdc_check_addresses(priv, tgt->caddr, from_addr)) {"
    },
    {
        "line": 943,
        "fullcodeline": "if (is_anon_tgs_request_p(b, tgt)) {"
    },
    {
        "line": 1009,
        "fullcodeline": "if (tpn != cpn)"
    },
    {
        "line": 1026,
        "fullcodeline": "if (tp && tp != cp)"
    },
    {
        "line": 65,
        "fullcodeline": "flags |= HDB_F_CANON;"
    },
    {
        "line": 72,
        "fullcodeline": "krb5uint32 second_kvno = 0;"
    },
    {
        "line": 73,
        "fullcodeline": "krb5uint32 *kvno_ptr = NULL;"
    },
    {
        "line": 84,
        "fullcodeline": "t = &b->additional_tickets->val[0];"
    },
    {
        "line": 93,
        "fullcodeline": "_krb5_principalname2krb5_principal(context, &p, t->sname, t->realm);"
    },
    {
        "line": 94,
        "fullcodeline": "ret = krb5_unparse_name(context, p, &tpn);"
    },
    {
        "line": 101,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, p,"
    },
    {
        "line": 104,
        "fullcodeline": "krb5_free_principal(context, p);"
    },
    {
        "line": 112,
        "fullcodeline": "ret = hdb_enctype2key(context, &uu->entry, NULL,"
    },
    {
        "line": 121,
        "fullcodeline": "ret = krb5_decrypt_ticket(context, t, &uukey->key, &adtkt, 0);"
    },
    {
        "line": 122,
        "fullcodeline": "_kdc_free_ent(context, uu);"
    },
    {
        "line": 129,
        "fullcodeline": "ret = verify_flags(context, config, &adtkt, tpn);"
    },
    {
        "line": 136,
        "fullcodeline": "s = &adtkt.cname;"
    },
    {
        "line": 137,
        "fullcodeline": "r = adtkt.crealm;"
    },
    {
        "line": 154,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 167,
        "fullcodeline": "HDB_F_GET_SERVER | HDB_F_DELAY_NEW_KEYS | flags,"
    },
    {
        "line": 171,
        "fullcodeline": "kdc_log(context, config, 5, \"target %s does not have secrets at this KDC, need to proxy\", spn);"
    },
    {
        "line": 172,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"Target not found here\");"
    },
    {
        "line": 288,
        "fullcodeline": "rsp = server->entry.principal;"
    },
    {
        "line": 361,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 363,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 381,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 388,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 397,
        "fullcodeline": "char *ktpn = NULL;"
    },
    {
        "line": 398,
        "fullcodeline": "ret = krb5_unparse_name(context, krbtgt->entry.principal, &ktpn);"
    },
    {
        "line": 399,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 403,
        "fullcodeline": "free(ktpn);"
    },
    {
        "line": 404,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_NOT_US;"
    },
    {
        "line": 418,
        "fullcodeline": "ret = krb5_unparse_name(context, krbtgt_out->entry.principal, &ktpn);"
    },
    {
        "line": 419,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 424,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_NOT_US;"
    },
    {
        "line": 425,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"Request with wrong TGT\");"
    },
    {
        "line": 432,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 434,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 441,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 443,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 462,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 513,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 514,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"PAC check failed\");"
    },
    {
        "line": 515,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 518,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 531,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 532,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"KRB5SignedPath check failed\");"
    },
    {
        "line": 533,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 536,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 550,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 552,
        "fullcodeline": "sdata = _kdc_find_padata(req, &i, KRB5_PADATA_FOR_USER);"
    },
    {
        "line": 753,
        "fullcodeline": "&& b->kdc_options.enc_tkt_in_skey == 0)"
    },
    {
        "line": 755,
        "fullcodeline": "int ad_signedpath = 0;"
    },
    {
        "line": 772,
        "fullcodeline": "t = &b->additional_tickets->val[0];"
    },
    {
        "line": 774,
        "fullcodeline": "ret = hdb_enctype2key(context, &client->entry,"
    },
    {
        "line": 783,
        "fullcodeline": "ret = krb5_decrypt_ticket(context, t, &clientkey->key, &adtkt, 0);"
    },
    {
        "line": 793,
        "fullcodeline": "ret = _krb5_principalname2krb5_principal(context,"
    },
    {
        "line": 800,
        "fullcodeline": "ret = krb5_unparse_name(context, tp, &tpn);"
    },
    {
        "line": 804,
        "fullcodeline": "_kdc_audit_addkv((kdc_request_t)priv, 0, \"impersonatee\", \"%s\", tpn);"
    },
    {
        "line": 806,
        "fullcodeline": "ret = _krb5_principalname2krb5_principal(context,"
    },
    {
        "line": 813,
        "fullcodeline": "ret = krb5_unparse_name(context, dp, &dpn);"
    },
    {
        "line": 829,
        "fullcodeline": "ret = check_constrained_delegation(context, config, clientdb,"
    },
    {
        "line": 840,
        "fullcodeline": "ret = verify_flags(context, config, &adtkt, tpn);"
    },
    {
        "line": 847,
        "fullcodeline": "krb5_data_free(&rspac);"
    },
    {
        "line": 855,
        "fullcodeline": "ret = check_PAC(context, config, tp, dp,"
    },
    {
        "line": 875,
        "fullcodeline": "ret = check_KRB5SignedPath(context,"
    },
    {
        "line": 907,
        "fullcodeline": "kdc_log(context, config, 4, \"constrained delegation for %s \""
    },
    {
        "line": 920,
        "fullcodeline": "!krb5_principal_compare(context,"
    },
    {
        "line": 923,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"Inconsistent request\");"
    },
    {
        "line": 924,
        "fullcodeline": "kdc_log(context, config, 4, \"Inconsistent request.\");"
    },
    {
        "line": 925,
        "fullcodeline": "ret = KRB5KDC_ERR_SERVER_NOMATCH;"
    },
    {
        "line": 944,
        "fullcodeline": "ret = _kdc_check_anon_policy(priv);"
    },
    {
        "line": 957,
        "fullcodeline": "kdc_log(context, config, 3,"
    },
    {
        "line": 960,
        "fullcodeline": "ret = krb5_crypto_init(context, &sessionkey, 0, &crypto);"
    },
    {
        "line": 964,
        "fullcodeline": "ret = build_server_referral(context, config, crypto, ref_realm,"
    },
    {
        "line": 966,
        "fullcodeline": "krb5_crypto_destroy(context, crypto);"
    },
    {
        "line": 973,
        "fullcodeline": "pa.padata_type = KRB5_PADATA_SERVER_REFERRAL;"
    },
    {
        "line": 975,
        "fullcodeline": "ret = add_METHOD_DATA(&enc_pa_data, &pa);"
    },
    {
        "line": 976,
        "fullcodeline": "krb5_data_free(&pa.padata_value);"
    },
    {
        "line": 1010,
        "fullcodeline": "free(tpn);"
    },
    {
        "line": 1018,
        "fullcodeline": "_kdc_free_ent(context, krbtgt_out);"
    },
    {
        "line": 1020,
        "fullcodeline": "_kdc_free_ent(context, server);"
    },
    {
        "line": 1022,
        "fullcodeline": "_kdc_free_ent(context, client);"
    },
    {
        "line": 1024,
        "fullcodeline": "_kdc_free_ent(context, s4u2self_impersonated_client);"
    },
    {
        "line": 1027,
        "fullcodeline": "krb5_free_principal(context, tp);"
    },
    {
        "line": 75,
        "fullcodeline": "if(b->additional_tickets == NULL ||"
    },
    {
        "line": 85,
        "fullcodeline": "if(!get_krbtgt_realm(&t->sname)){"
    },
    {
        "line": 158,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 290,
        "fullcodeline": "rsp = sp;"
    },
    {
        "line": 301,
        "fullcodeline": "ekey = &adtkt.key;"
    },
    {
        "line": 314,
        "fullcodeline": "etype = b->etype.val[i];"
    },
    {
        "line": 315,
        "fullcodeline": "kvno = 0;"
    },
    {
        "line": 402,
        "fullcodeline": "krbtgt_out_n, spn, (ret == 0) ? ktpn : \"<unknown>\");"
    },
    {
        "line": 416,
        "fullcodeline": "krb5_principal_get_realm(context, krbtgt_out->entry.principal)) != 0) {"
    },
    {
        "line": 421,
        "fullcodeline": "(ret == 0) ? ktpn : \"<unknown>\");"
    },
    {
        "line": 422,
        "fullcodeline": "if(ret == 0)"
    },
    {
        "line": 463,
        "fullcodeline": "krb5_data_free(&verified_cas);"
    },
    {
        "line": 464,
        "fullcodeline": "flags |= HDB_F_SYNTHETIC_OK;"
    },
    {
        "line": 763,
        "fullcodeline": "if (!signedpath) {"
    },
    {
        "line": 818,
        "fullcodeline": "if (adtkt.flags.forwardable == 0) {"
    },
    {
        "line": 895,
        "fullcodeline": "if (!ad_signedpath) {"
    },
    {
        "line": 76,
        "fullcodeline": "b->additional_tickets->len == 0){"
    },
    {
        "line": 77,
        "fullcodeline": "ret = KRB5KDC_ERR_BADOPTION; /* ? */"
    },
    {
        "line": 78,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 80,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 86,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 88,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 90,
        "fullcodeline": "ret = KRB5KDC_ERR_POLICY;"
    },
    {
        "line": 98,
        "fullcodeline": "second_kvno = *t->enc_part.kvno;"
    },
    {
        "line": 99,
        "fullcodeline": "kvno_ptr = &second_kvno;"
    },
    {
        "line": 108,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 115,
        "fullcodeline": "_kdc_free_ent(context, uu);"
    },
    {
        "line": 116,
        "fullcodeline": "ret = KRB5KDC_ERR_ETYPE_NOSUPP; /* XXX */"
    },
    {
        "line": 117,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 124,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 131,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 174,
        "fullcodeline": "} else if (ret == HDB_ERR_WRONG_REALM) {"
    },
    {
        "line": 302,
        "fullcodeline": "for(i = 0; i < b->etype.len; i++)"
    },
    {
        "line": 305,
        "fullcodeline": "if(i == b->etype.len) {"
    },
    {
        "line": 319,
        "fullcodeline": "ret = _kdc_find_etype(priv, krb5_principal_is_krbtgt(context, sp)"
    },
    {
        "line": 330,
        "fullcodeline": "ret = _kdc_get_preferred_key(context, config, server, spn,"
    },
    {
        "line": 339,
        "fullcodeline": "ekey = &skey->key;"
    },
    {
        "line": 340,
        "fullcodeline": "kvno = server->entry.kvno;"
    },
    {
        "line": 423,
        "fullcodeline": "free(ktpn);"
    },
    {
        "line": 560,
        "fullcodeline": "ret = decode_PA_S4U2Self(sdata->padata_value.data,"
    },
    {
        "line": 579,
        "fullcodeline": "ret = _krb5_s4u2self_to_checksumdata(context, &self, &datack);"
    },
    {
        "line": 583,
        "fullcodeline": "ret = krb5_crypto_init(context, &tgt->key, 0, &crypto);"
    },
    {
        "line": 621,
        "fullcodeline": "krb5_data_free(&datack);"
    },
    {
        "line": 622,
        "fullcodeline": "krb5_crypto_destroy(context, crypto);"
    },
    {
        "line": 634,
        "fullcodeline": "ret = _krb5_principalname2krb5_principal(context,"
    },
    {
        "line": 638,
        "fullcodeline": "free_PA_S4U2Self(&self);"
    },
    {
        "line": 642,
        "fullcodeline": "ret = krb5_unparse_name(context, tp, &tpn);"
    },
    {
        "line": 650,
        "fullcodeline": "ret = _kdc_db_fetch(context, config, tp, HDB_F_GET_CLIENT | flags,"
    },
    {
        "line": 676,
        "fullcodeline": "s4u2self_impersonated_client->entry.flags.require_pwchange = FALSE;"
    },
    {
        "line": 678,
        "fullcodeline": "s4u2self_impersonated_client->entry.pw_end = NULL;"
    },
    {
        "line": 680,
        "fullcodeline": "imp_req = *priv;"
    },
    {
        "line": 681,
        "fullcodeline": "imp_req.client = s4u2self_impersonated_client;"
    },
    {
        "line": 682,
        "fullcodeline": "imp_req.client_princ = tp;"
    },
    {
        "line": 684,
        "fullcodeline": "ret = kdc_check_flags(&imp_req, FALSE);"
    },
    {
        "line": 718,
        "fullcodeline": "ret = check_s4u2self(context, config, clientdb, client, sp);"
    },
    {
        "line": 740,
        "fullcodeline": "kdc_log(context, config, 4, \"s4u2self %s impersonating %s to \""
    },
    {
        "line": 751,
        "fullcodeline": "&& b->additional_tickets->len != 0"
    },
    {
        "line": 764,
        "fullcodeline": "ret = KRB5KDC_ERR_BADOPTION;"
    },
    {
        "line": 765,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"KRB5SignedPath missing\");"
    },
    {
        "line": 766,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 775,
        "fullcodeline": "hdb_kvno2keys(context, &client->entry,"
    },
    {
        "line": 779,
        "fullcodeline": "ret = KRB5KDC_ERR_ETYPE_NOSUPP; /* XXX */"
    },
    {
        "line": 785,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 787,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 819,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 821,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 825,
        "fullcodeline": "ret = KRB5KDC_ERR_BADOPTION;"
    },
    {
        "line": 832,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 834,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 842,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 861,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 862,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 864,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 868,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 883,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 884,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 889,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 890,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 896,
        "fullcodeline": "ret = KRB5KDC_ERR_BADOPTION;"
    },
    {
        "line": 897,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 902,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 932,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_BADADDR;"
    },
    {
        "line": 933,
        "fullcodeline": "_kdc_audit_addkv((kdc_request_t)priv, 0, \"wrongaddr\", \"yes\");"
    },
    {
        "line": 934,
        "fullcodeline": "kdc_log(context, config, 4, \"Request from wrong address\");"
    },
    {
        "line": 935,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"Request from wrong address\");"
    },
    {
        "line": 968,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"Referral build failed\");"
    },
    {
        "line": 969,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 978,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 106,
        "fullcodeline": "if (ret == HDB_ERR_NOENTRY)"
    },
    {
        "line": 176,
        "fullcodeline": "ref_realm = strdup(server->entry.principal->realm);"
    },
    {
        "line": 182,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 186,
        "fullcodeline": "krb5_free_principal(context, sp);"
    },
    {
        "line": 187,
        "fullcodeline": "sp = NULL;"
    },
    {
        "line": 188,
        "fullcodeline": "ret = krb5_make_principal(context, &sp, r, KRB5_TGS_NAME,"
    },
    {
        "line": 193,
        "fullcodeline": "priv->sname = NULL;"
    },
    {
        "line": 194,
        "fullcodeline": "ret = krb5_unparse_name(context, sp, &priv->sname);"
    },
    {
        "line": 197,
        "fullcodeline": "spn = priv->sname;"
    },
    {
        "line": 303,
        "fullcodeline": "if (b->etype.val[i] == adtkt.key.keytype)"
    },
    {
        "line": 306,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 308,
        "fullcodeline": "krb5_clear_error_message(context);"
    },
    {
        "line": 309,
        "fullcodeline": "ret = KRB5KDC_ERR_ETYPE_NOSUPP;"
    },
    {
        "line": 310,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 484,
        "fullcodeline": "krbtgt_realm = krb5_principal_get_realm(context, krbtgt_out->entry.principal);"
    },
    {
        "line": 495,
        "fullcodeline": "msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 496,
        "fullcodeline": "kdc_log(context, config, 4, \"Client not found in database: %s\", msg);"
    },
    {
        "line": 497,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"Client does not exist\");"
    },
    {
        "line": 498,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 570,
        "fullcodeline": "if (!krb5_checksum_is_keyed(context, self.cksum.cksumtype)) {"
    },
    {
        "line": 594,
        "fullcodeline": "if (self.cksum.cksumtype == CKSUMTYPE_HMAC_MD5) {"
    },
    {
        "line": 733,
        "fullcodeline": "if (client->entry.flags.trusted_for_delegation &&"
    },
    {
        "line": 750,
        "fullcodeline": "&& b->additional_tickets != NULL"
    },
    {
        "line": 776,
        "fullcodeline": "t->enc_part.kvno ? * t->enc_part.kvno : 0),"
    },
    {
        "line": 107,
        "fullcodeline": "ret = KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN;"
    },
    {
        "line": 177,
        "fullcodeline": "if (ref_realm == NULL) {"
    },
    {
        "line": 324,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 326,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 333,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 335,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 486,
        "fullcodeline": "if(strcmp(krb5_principal_get_realm(context, cp), krbtgt_realm) == 0) {"
    },
    {
        "line": 564,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 566,
        "fullcodeline": "kdc_log(context, config, 4, \"Failed to decode PA-S4U2Self\");"
    },
    {
        "line": 571,
        "fullcodeline": "free_PA_S4U2Self(&self);"
    },
    {
        "line": 572,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 574,
        "fullcodeline": "kdc_log(context, config, 4, \"Reject PA-S4U2Self with unkeyed checksum\");"
    },
    {
        "line": 575,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_INAPP_CKSUM;"
    },
    {
        "line": 585,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 586,
        "fullcodeline": "free_PA_S4U2Self(&self);"
    },
    {
        "line": 587,
        "fullcodeline": "krb5_data_free(&datack);"
    },
    {
        "line": 588,
        "fullcodeline": "kdc_log(context, config, 4, \"krb5_crypto_init failed: %s\", msg);"
    },
    {
        "line": 589,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 596,
        "fullcodeline": "unsigned char csdata[16];"
    },
    {
        "line": 599,
        "fullcodeline": "cs.checksum.length = sizeof(csdata);"
    },
    {
        "line": 600,
        "fullcodeline": "cs.checksum.data = &csdata;"
    },
    {
        "line": 602,
        "fullcodeline": "iov.data.data = datack.data;"
    },
    {
        "line": 603,
        "fullcodeline": "iov.data.length = datack.length;"
    },
    {
        "line": 604,
        "fullcodeline": "iov.flags = KRB5_CRYPTO_TYPE_DATA;"
    },
    {
        "line": 606,
        "fullcodeline": "ret = _krb5_HMAC_MD5_checksum(context, NULL, &crypto->key,"
    },
    {
        "line": 624,
        "fullcodeline": "const char *msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 625,
        "fullcodeline": "free_PA_S4U2Self(&self);"
    },
    {
        "line": 626,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 628,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 630,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 664,
        "fullcodeline": "msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 665,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 667,
        "fullcodeline": "kdc_log(context, config, 2,"
    },
    {
        "line": 670,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 690,
        "fullcodeline": "krb5_pac p = NULL;"
    },
    {
        "line": 691,
        "fullcodeline": "krb5_data_free(&rspac);"
    },
    {
        "line": 692,
        "fullcodeline": "ret = _kdc_pac_generate(context, s4u2self_impersonated_client, &p);"
    },
    {
        "line": 720,
        "fullcodeline": "kdc_log(context, config, 4, \"S4U2Self: %s is not allowed \""
    },
    {
        "line": 735,
        "fullcodeline": "str = \"[forwardable]\";"
    },
    {
        "line": 178,
        "fullcodeline": "ret = krb5_enomem(context);"
    },
    {
        "line": 489,
        "fullcodeline": "kdc_log(context, config, 4, \"Client no longer in database: %s\","
    },
    {
        "line": 491,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"Client no longer in HDB\");"
    },
    {
        "line": 499,
        "fullcodeline": "} else if (ret == 0 &&"
    },
    {
        "line": 609,
        "fullcodeline": "if (ret == 0 &&"
    },
    {
        "line": 614,
        "fullcodeline": "ret = krb5_verify_checksum(context,"
    },
    {
        "line": 662,
        "fullcodeline": "if (ret == HDB_ERR_NOENTRY)"
    },
    {
        "line": 700,
        "fullcodeline": "if (p != NULL) {"
    },
    {
        "line": 737,
        "fullcodeline": "b->kdc_options.forwardable = 0;"
    },
    {
        "line": 738,
        "fullcodeline": "str = \"\";"
    },
    {
        "line": 938,
        "fullcodeline": "_kdc_audit_addkv((kdc_request_t)priv, 0, \"wrongaddr\", \"yes\");"
    },
    {
        "line": 269,
        "fullcodeline": "msg = krb5_get_error_message(context, ret);"
    },
    {
        "line": 270,
        "fullcodeline": "kdc_log(context, config, 3,"
    },
    {
        "line": 272,
        "fullcodeline": "krb5_free_error_message(context, msg);"
    },
    {
        "line": 275,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 487,
        "fullcodeline": "if (ret == HDB_ERR_NOENTRY)"
    },
    {
        "line": 500,
        "fullcodeline": "(client->entry.flags.invalid || !client->entry.flags.client)) {"
    },
    {
        "line": 501,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv, \"Client has invalid bit set\");"
    },
    {
        "line": 502,
        "fullcodeline": "kdc_log(context, config, 4, \"Client has invalid bit set\");"
    },
    {
        "line": 503,
        "fullcodeline": "ret = KRB5KDC_ERR_POLICY;"
    },
    {
        "line": 610,
        "fullcodeline": "krb5_data_ct_cmp(&cs.checksum, &self.cksum.checksum) != 0)"
    },
    {
        "line": 611,
        "fullcodeline": "ret = KRB5KRB_AP_ERR_BAD_INTEGRITY;"
    },
    {
        "line": 663,
        "fullcodeline": "ret = KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN;"
    },
    {
        "line": 694,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 696,
        "fullcodeline": "kdc_log(context, config, 4, \"PAC generation failed for -- %s\","
    },
    {
        "line": 701,
        "fullcodeline": "ret = _krb5_pac_sign(context, p, ticket->ticket.authtime,"
    },
    {
        "line": 705,
        "fullcodeline": "krb5_pac_free(context, p);"
    },
    {
        "line": 205,
        "fullcodeline": "if ((req_rlm = get_krbtgt_realm(&sp->name)) != NULL) {"
    },
    {
        "line": 273,
        "fullcodeline": "if (ret == HDB_ERR_NOENTRY)"
    },
    {
        "line": 488,
        "fullcodeline": "ret = KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN;"
    },
    {
        "line": 217,
        "fullcodeline": "new_rlm = num_capath > 0 ? capath[--num_capath] : NULL;"
    },
    {
        "line": 274,
        "fullcodeline": "ret = KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN;"
    },
    {
        "line": 707,
        "fullcodeline": "kdc_log(context, config, 4, \"PAC signing failed for -- %s\","
    },
    {
        "line": 206,
        "fullcodeline": "if (capath == NULL) {"
    },
    {
        "line": 208,
        "fullcodeline": "ret2 = _krb5_find_capath(context, tgt->crealm, our_realm,"
    },
    {
        "line": 219,
        "fullcodeline": "kdc_log(context, config, 5, \"krbtgt from %s via %s for \""
    },
    {
        "line": 224,
        "fullcodeline": "ref_realm = strdup(new_rlm);"
    },
    {
        "line": 230,
        "fullcodeline": "krb5_free_principal(context, sp);"
    },
    {
        "line": 231,
        "fullcodeline": "sp = NULL;"
    },
    {
        "line": 232,
        "fullcodeline": "krb5_make_principal(context, &sp, r,"
    },
    {
        "line": 235,
        "fullcodeline": "priv->sname = NULL;"
    },
    {
        "line": 236,
        "fullcodeline": "ret = krb5_unparse_name(context, sp, &priv->sname);"
    },
    {
        "line": 239,
        "fullcodeline": "spn = priv->sname;"
    },
    {
        "line": 242,
        "fullcodeline": "} else if (need_referral(context, config, &b->kdc_options, sp, &realms)) {"
    },
    {
        "line": 225,
        "fullcodeline": "if (ref_realm == NULL) {"
    },
    {
        "line": 267,
        "fullcodeline": "krb5_free_host_realm(context, realms);"
    },
    {
        "line": 211,
        "fullcodeline": "ret = ret2;"
    },
    {
        "line": 212,
        "fullcodeline": "_kdc_audit_addreason((kdc_request_t)priv,"
    },
    {
        "line": 226,
        "fullcodeline": "ret = krb5_enomem(context);"
    },
    {
        "line": 243,
        "fullcodeline": "if (strcmp(realms[0], sp->realm) != 0) {"
    },
    {
        "line": 244,
        "fullcodeline": "kdc_log(context, config, 4,"
    },
    {
        "line": 248,
        "fullcodeline": "krb5_free_principal(context, sp);"
    },
    {
        "line": 249,
        "fullcodeline": "sp = NULL;"
    },
    {
        "line": 250,
        "fullcodeline": "krb5_make_principal(context, &sp, r, KRB5_TGS_NAME,"
    },
    {
        "line": 253,
        "fullcodeline": "priv->sname = NULL;"
    },
    {
        "line": 254,
        "fullcodeline": "ret = krb5_unparse_name(context, sp, &priv->sname);"
    },
    {
        "line": 259,
        "fullcodeline": "spn = priv->sname;"
    },
    {
        "line": 262,
        "fullcodeline": "ref_realm = strdup(realms[0]);"
    },
    {
        "line": 264,
        "fullcodeline": "krb5_free_host_realm(context, realms);"
    },
    {
        "line": 256,
        "fullcodeline": "krb5_free_host_realm(context, realms);"
    }
]