[
    {
        "line": 11,
        "fullcodeline": "buffer_size = params->buffer.fragment_size * params->buffer.fragments;"
    },
    {
        "line": 22,
        "fullcodeline": "stream->runtime->fragment_size = params->buffer.fragment_size;"
    },
    {
        "line": 23,
        "fullcodeline": "stream->runtime->fragments = params->buffer.fragments;"
    },
    {
        "line": 24,
        "fullcodeline": "stream->runtime->buffer = buffer;"
    },
    {
        "line": 25,
        "fullcodeline": "stream->runtime->buffer_size = buffer_size;"
    },
    {
        "line": 7,
        "fullcodeline": "if (params->buffer.fragment_size == 0 ||"
    },
    {
        "line": 8,
        "fullcodeline": "params->buffer.fragments > SIZE_MAX / params->buffer.fragment_size)"
    },
    {
        "line": 13,
        "fullcodeline": "buffer = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 18,
        "fullcodeline": "buffer = kmalloc(buffer_size, GFP_KERNEL);"
    },
    {
        "line": 19,
        "fullcodeline": "if (!buffer)"
    },
    {
        "line": 20,
        "fullcodeline": "return -ENOMEM;"
    }
]