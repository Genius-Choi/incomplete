[
    {
        "line": 13,
        "fullcodeline": "std::string decoded = std::string(b64it(std::begin(encoded)),"
    },
    {
        "line": 16,
        "fullcodeline": "uint32_t numPadding = std::count(encoded.begin(), encoded.end(), '=');"
    },
    {
        "line": 17,
        "fullcodeline": "decoded.erase(decoded.end() - numPadding, decoded.end());"
    },
    {
        "line": 4,
        "fullcodeline": "if (encoded.size() == 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "b64it(std::end(encoded)));"
    }
]