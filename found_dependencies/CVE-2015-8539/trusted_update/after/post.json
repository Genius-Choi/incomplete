[
    {
        "line": 6,
        "fullcodeline": "size_t datalen = prep->datalen;"
    },
    {
        "line": 8,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "datablob = kmalloc(datalen + 1, GFP_KERNEL);"
    },
    {
        "line": 21,
        "fullcodeline": "new_o = trusted_options_alloc();"
    },
    {
        "line": 26,
        "fullcodeline": "new_p = trusted_payload_alloc(key);"
    },
    {
        "line": 32,
        "fullcodeline": "memcpy(datablob, prep->data, datalen);"
    },
    {
        "line": 33,
        "fullcodeline": "datablob[datalen] = '\\0';"
    },
    {
        "line": 34,
        "fullcodeline": "ret = datablob_parse(datablob, new_p, new_o);"
    },
    {
        "line": 48,
        "fullcodeline": "new_p->migratable = p->migratable;"
    },
    {
        "line": 49,
        "fullcodeline": "new_p->key_len = p->key_len;"
    },
    {
        "line": 50,
        "fullcodeline": "memcpy(new_p->key, p->key, p->key_len);"
    },
    {
        "line": 51,
        "fullcodeline": "dump_payload(p);"
    },
    {
        "line": 52,
        "fullcodeline": "dump_payload(new_p);"
    },
    {
        "line": 54,
        "fullcodeline": "ret = key_seal(new_p, new_o);"
    },
    {
        "line": 68,
        "fullcodeline": "rcu_assign_keypointer(key, new_p);"
    },
    {
        "line": 69,
        "fullcodeline": "call_rcu(&p->rcu, trusted_rcu_free);"
    },
    {
        "line": 71,
        "fullcodeline": "kfree(datablob);"
    },
    {
        "line": 72,
        "fullcodeline": "kfree(new_o);"
    },
    {
        "line": 10,
        "fullcodeline": "if (test_bit(KEY_FLAG_NEGATIVE, &key->flags))"
    },
    {
        "line": 13,
        "fullcodeline": "if (!p->migratable)"
    },
    {
        "line": 15,
        "fullcodeline": "if (datalen <= 0 || datalen > 32767 || !prep->data)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!datablob)"
    },
    {
        "line": 22,
        "fullcodeline": "if (!new_o) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (!new_p) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (ret != Opt_update) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (!new_o->keyhandle) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 23,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 28,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 36,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 37,
        "fullcodeline": "kfree(new_p);"
    },
    {
        "line": 42,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 43,
        "fullcodeline": "kfree(new_p);"
    },
    {
        "line": 56,
        "fullcodeline": "pr_info(\"trusted_key: key_seal failed (%d)\\n\", ret);"
    },
    {
        "line": 57,
        "fullcodeline": "kfree(new_p);"
    },
    {
        "line": 61,
        "fullcodeline": "ret = pcrlock(new_o->pcrlock);"
    },
    {
        "line": 11,
        "fullcodeline": "return -ENOKEY;"
    },
    {
        "line": 14,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 16,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 20,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 62,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 63,
        "fullcodeline": "pr_info(\"trusted_key: pcrlock failed (%d)\\n\", ret);"
    },
    {
        "line": 64,
        "fullcodeline": "kfree(new_p);"
    }
]