[
    {
        "line": 4,
        "fullcodeline": "struct sock_iocb *siocb = kiocb_to_siocb(kiocb);"
    },
    {
        "line": 5,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 6,
        "fullcodeline": "struct sock *other = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "int sent = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "bool fds_sent = false;"
    },
    {
        "line": 16,
        "fullcodeline": "wait_for_unix_gc();"
    },
    {
        "line": 17,
        "fullcodeline": "err = scm_send(sock, msg, siocb->scm, false);"
    },
    {
        "line": 21,
        "fullcodeline": "err = -EOPNOTSUPP;"
    },
    {
        "line": 114,
        "fullcodeline": "err = -EPIPE;"
    },
    {
        "line": 14,
        "fullcodeline": "if (NULL == siocb->scm)"
    },
    {
        "line": 18,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 22,
        "fullcodeline": "if (msg->msg_flags&MSG_OOB)"
    },
    {
        "line": 35,
        "fullcodeline": "if (sk->sk_shutdown & SEND_SHUTDOWN)"
    },
    {
        "line": 38,
        "fullcodeline": "while (sent < len) {"
    },
    {
        "line": 118,
        "fullcodeline": "return sent ? : err;"
    },
    {
        "line": 15,
        "fullcodeline": "siocb->scm = &tmp_scm;"
    },
    {
        "line": 26,
        "fullcodeline": "err = sk->sk_state == TCP_ESTABLISHED ? -EISCONN : -EOPNOTSUPP;"
    },
    {
        "line": 44,
        "fullcodeline": "size = len-sent;"
    },
    {
        "line": 57,
        "fullcodeline": "skb = sock_alloc_send_skb(sk, size, msg->msg_flags&MSG_DONTWAIT,"
    },
    {
        "line": 74,
        "fullcodeline": "err = unix_scm_to_skb(siocb->scm, skb, !fds_sent);"
    },
    {
        "line": 79,
        "fullcodeline": "max_level = err + 1;"
    },
    {
        "line": 80,
        "fullcodeline": "fds_sent = true;"
    },
    {
        "line": 82,
        "fullcodeline": "err = memcpy_fromiovec(skb_put(skb, size), msg->msg_iov, size);"
    },
    {
        "line": 88,
        "fullcodeline": "unix_state_lock(other);"
    },
    {
        "line": 94,
        "fullcodeline": "maybe_add_creds(skb, sock, other);"
    },
    {
        "line": 95,
        "fullcodeline": "skb_queue_tail(&other->sk_receive_queue, skb);"
    },
    {
        "line": 98,
        "fullcodeline": "unix_state_unlock(other);"
    },
    {
        "line": 99,
        "fullcodeline": "other->sk_data_ready(other, size);"
    },
    {
        "line": 100,
        "fullcodeline": "sent += size;"
    },
    {
        "line": 112,
        "fullcodeline": "if (sent == 0 && !(msg->msg_flags&MSG_NOSIGNAL))"
    },
    {
        "line": 113,
        "fullcodeline": "send_sig(SIGPIPE, current, 0);"
    },
    {
        "line": 29,
        "fullcodeline": "err = -ENOTCONN;"
    },
    {
        "line": 30,
        "fullcodeline": "other = unix_peer(sk);"
    },
    {
        "line": 47,
        "fullcodeline": "if (size > ((sk->sk_sndbuf >> 1) - 64))"
    },
    {
        "line": 50,
        "fullcodeline": "if (size > SKB_MAX_ALLOC)"
    },
    {
        "line": 60,
        "fullcodeline": "if (skb == NULL)"
    },
    {
        "line": 75,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (max_level > unix_sk(other)->recursion_level)"
    },
    {
        "line": 31,
        "fullcodeline": "if (!other)"
    },
    {
        "line": 48,
        "fullcodeline": "size = (sk->sk_sndbuf >> 1) - 64;"
    },
    {
        "line": 51,
        "fullcodeline": "size = SKB_MAX_ALLOC;"
    },
    {
        "line": 90,
        "fullcodeline": "if (sock_flag(other, SOCK_DEAD) ||"
    },
    {
        "line": 91,
        "fullcodeline": "(other->sk_shutdown & RCV_SHUTDOWN))"
    },
    {
        "line": 97,
        "fullcodeline": "unix_sk(other)->recursion_level = max_level;"
    }
]