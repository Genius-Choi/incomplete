[
    {
        "line": 4,
        "fullcodeline": "struct sock_iocb *siocb = kiocb_to_siocb(kiocb);"
    },
    {
        "line": 5,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 6,
        "fullcodeline": "struct netlink_sock *nlk = nlk_sk(sk);"
    },
    {
        "line": 7,
        "fullcodeline": "struct sockaddr_nl *addr = msg->msg_name;"
    },
    {
        "line": 20,
        "fullcodeline": "err = scm_send(sock, msg, siocb->scm, true);"
    },
    {
        "line": 44,
        "fullcodeline": "err = -EMSGSIZE;"
    },
    {
        "line": 47,
        "fullcodeline": "err = -ENOBUFS;"
    },
    {
        "line": 48,
        "fullcodeline": "skb = alloc_skb(len, GFP_KERNEL);"
    },
    {
        "line": 52,
        "fullcodeline": "NETLINK_CB(skb).pid\t= nlk->pid;"
    },
    {
        "line": 53,
        "fullcodeline": "NETLINK_CB(skb).dst_group = dst_group;"
    },
    {
        "line": 54,
        "fullcodeline": "memcpy(NETLINK_CREDS(skb), &siocb->scm->creds, sizeof(struct ucred));"
    },
    {
        "line": 56,
        "fullcodeline": "err = -EFAULT;"
    },
    {
        "line": 62,
        "fullcodeline": "err = security_netlink_send(sk, skb);"
    },
    {
        "line": 72,
        "fullcodeline": "err = netlink_unicast(sk, skb, dst_pid, msg->msg_flags&MSG_DONTWAIT);"
    },
    {
        "line": 75,
        "fullcodeline": "scm_destroy(siocb->scm);"
    },
    {
        "line": 14,
        "fullcodeline": "if (msg->msg_flags&MSG_OOB)"
    },
    {
        "line": 17,
        "fullcodeline": "if (NULL == siocb->scm)"
    },
    {
        "line": 21,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 38,
        "fullcodeline": "if (!nlk->pid) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (len > sk->sk_sndbuf - 32)"
    },
    {
        "line": 49,
        "fullcodeline": "if (skb == NULL)"
    },
    {
        "line": 57,
        "fullcodeline": "if (memcpy_fromiovec(skb_put(skb, len), msg->msg_iov, len)) {"
    },
    {
        "line": 18,
        "fullcodeline": "siocb->scm = &scm;"
    },
    {
        "line": 25,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 28,
        "fullcodeline": "dst_pid = addr->nl_pid;"
    },
    {
        "line": 29,
        "fullcodeline": "dst_group = ffs(addr->nl_groups);"
    },
    {
        "line": 30,
        "fullcodeline": "err =  -EPERM;"
    },
    {
        "line": 39,
        "fullcodeline": "err = netlink_autobind(sock);"
    },
    {
        "line": 58,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 64,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 69,
        "fullcodeline": "atomic_inc(&skb->users);"
    },
    {
        "line": 70,
        "fullcodeline": "netlink_broadcast(sk, skb, dst_pid, dst_group, GFP_KERNEL);"
    },
    {
        "line": 15,
        "fullcodeline": "return -EOPNOTSUPP;"
    },
    {
        "line": 26,
        "fullcodeline": "if (addr->nl_family != AF_NETLINK)"
    },
    {
        "line": 31,
        "fullcodeline": "if (dst_group && !netlink_capable(sock, NL_NONROOT_SEND))"
    },
    {
        "line": 34,
        "fullcodeline": "dst_pid = nlk->dst_pid;"
    },
    {
        "line": 35,
        "fullcodeline": "dst_group = nlk->dst_group;"
    }
]