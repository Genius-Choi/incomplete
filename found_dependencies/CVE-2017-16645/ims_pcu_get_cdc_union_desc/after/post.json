[
    {
        "line": 42,
        "fullcodeline": "dev_err(&intf->dev, \"Missing CDC union descriptor\\n\");"
    },
    {
        "line": 7,
        "fullcodeline": "if (!buf) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (!buflen) {"
    },
    {
        "line": 17,
        "fullcodeline": "while (buflen >= sizeof(*union_desc)) {"
    },
    {
        "line": 8,
        "fullcodeline": "dev_err(&intf->dev, \"Missing descriptor data\\n\");"
    },
    {
        "line": 13,
        "fullcodeline": "dev_err(&intf->dev, \"Zero length descriptor\\n\");"
    },
    {
        "line": 18,
        "fullcodeline": "union_desc = (struct usb_cdc_union_desc *)buf;"
    },
    {
        "line": 38,
        "fullcodeline": "buflen -= union_desc->bLength;"
    },
    {
        "line": 39,
        "fullcodeline": "buf += union_desc->bLength;"
    },
    {
        "line": 20,
        "fullcodeline": "if (union_desc->bLength > buflen) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (union_desc->bDescriptorType == USB_DT_CS_INTERFACE &&"
    },
    {
        "line": 21,
        "fullcodeline": "dev_err(&intf->dev, \"Too large descriptor\\n\");"
    },
    {
        "line": 26,
        "fullcodeline": "union_desc->bDescriptorSubType == USB_CDC_UNION_TYPE) {"
    },
    {
        "line": 27,
        "fullcodeline": "dev_dbg(&intf->dev, \"Found union header\\n\");"
    },
    {
        "line": 32,
        "fullcodeline": "dev_err(&intf->dev,"
    },
    {
        "line": 29,
        "fullcodeline": "if (union_desc->bLength >= sizeof(*union_desc))"
    }
]