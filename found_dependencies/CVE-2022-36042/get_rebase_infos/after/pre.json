[
    {
        "line": 2,
        "fullcodeline": "RzDyldRebaseInfos *result = RZ_NEW0(RzDyldRebaseInfos);"
    },
    {
        "line": 3,
        "fullcodeline": "if (!result) {"
    },
    {
        "line": 7,
        "fullcodeline": "if (!cache->hdr->slideInfoOffset || !cache->hdr->slideInfoSize) {"
    },
    {
        "line": 8,
        "fullcodeline": "size_t total_slide_infos = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "ut32 n_slide_infos[MAX_N_HDR];"
    },
    {
        "line": 29,
        "fullcodeline": "RzDyldRebaseInfosEntry *infos = RZ_NEWS0(RzDyldRebaseInfosEntry, total_slide_infos);"
    },
    {
        "line": 34,
        "fullcodeline": "ut32 k = 0;"
    },
    {
        "line": 87,
        "fullcodeline": "result->entries = infos;"
    },
    {
        "line": 88,
        "fullcodeline": "result->length = k;"
    },
    {
        "line": 93,
        "fullcodeline": "RzDyldRebaseInfosEntry *infos = RZ_NEWS0(RzDyldRebaseInfosEntry, 1);"
    },
    {
        "line": 98,
        "fullcodeline": "infos[0].start = cache->maps[1].fileOffset;"
    },
    {
        "line": 102,
        "fullcodeline": "result->entries = infos;"
    },
    {
        "line": 103,
        "fullcodeline": "result->length = 1;"
    },
    {
        "line": 12,
        "fullcodeline": "for (i = 0; i < cache->n_hdr && i < MAX_N_HDR; i++) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (!total_slide_infos) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (!infos) {"
    },
    {
        "line": 35,
        "fullcodeline": "for (i = 0; i < cache->n_hdr && i < MAX_N_HDR; i++) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (!k) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (k < total_slide_infos) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (!infos) {"
    },
    {
        "line": 100,
        "fullcodeline": "infos[0].info = get_rebase_info(cache, cache->hdr->slideInfoOffset, cache->hdr->slideInfoSize, infos[0].start, UT64_MAX);"
    },
    {
        "line": 13,
        "fullcodeline": "ut64 hdr_offset = cache->hdr_offset[i];"
    },
    {
        "line": 17,
        "fullcodeline": "ut32 total = total_slide_infos + n_slide_infos[i];"
    },
    {
        "line": 22,
        "fullcodeline": "total_slide_infos = total;"
    },
    {
        "line": 36,
        "fullcodeline": "ut64 hdr_offset = cache->hdr_offset[i];"
    },
    {
        "line": 44,
        "fullcodeline": "ut64 slide_infos_offset = sio;"
    },
    {
        "line": 48,
        "fullcodeline": "slide_infos_offset += hdr_offset;"
    },
    {
        "line": 51,
        "fullcodeline": "RzDyldRebaseInfo *prev_info = NULL;"
    },
    {
        "line": 76,
        "fullcodeline": "RzDyldRebaseInfosEntry *pruned_infos = RZ_NEWS0(RzDyldRebaseInfosEntry, k);"
    },
    {
        "line": 82,
        "fullcodeline": "memcpy(pruned_infos, infos, sizeof(RzDyldRebaseInfosEntry) * k);"
    },
    {
        "line": 84,
        "fullcodeline": "infos = pruned_infos;"
    },
    {
        "line": 18,
        "fullcodeline": "if (total < total_slide_infos) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (!n_slide_infos[i]) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (!slide_infos_offset) {"
    },
    {
        "line": 52,
        "fullcodeline": "for (j = 0; j < n_slide_infos[i]; j++) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (!pruned_infos) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (!rz_buf_read_le32_at(cache->buf, 0x13c + hdr_offset, &n_slide_infos[i])) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (!rz_buf_read_le32_at(cache->buf, 0x138 + hdr_offset, &sio)) {"
    },
    {
        "line": 53,
        "fullcodeline": "ut64 offset = slide_infos_offset + j * sizeof(cache_mapping_slide);"
    },
    {
        "line": 59,
        "fullcodeline": "if (entry.slideInfoOffset && entry.slideInfoSize) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (rz_buf_fread_at(cache->buf, offset, (ut8 *)&entry, \"6lii\", 1) != sizeof(cache_mapping_slide)) {"
    },
    {
        "line": 60,
        "fullcodeline": "infos[k].start = entry.fileOffset + hdr_offset;"
    },
    {
        "line": 62,
        "fullcodeline": "ut64 slide = prev_info ? prev_info->slide : UT64_MAX;"
    },
    {
        "line": 63,
        "fullcodeline": "infos[k].info = get_rebase_info(cache, entry.slideInfoOffset + hdr_offset, entry.slideInfoSize, entry.fileOffset + hdr_offset, slide);"
    },
    {
        "line": 64,
        "fullcodeline": "prev_info = infos[k].info;"
    },
    {
        "line": 65,
        "fullcodeline": "k++;"
    }
]