[
    {
        "line": 12,
        "fullcodeline": "KeyIdentifier_t encKeyID = NWK_KEY;"
    },
    {
        "line": 19,
        "fullcodeline": "memcpy1( decJoinAccept, encJoinAccept, encJoinAcceptSize );"
    },
    {
        "line": 28,
        "fullcodeline": "*versionMinor = ( ( decJoinAccept[11] & 0x80 ) == 0x80 ) ? 1 : 0;"
    },
    {
        "line": 30,
        "fullcodeline": "uint32_t mic = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "mic = ( ( uint32_t ) decJoinAccept[encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE] << 0 );"
    },
    {
        "line": 33,
        "fullcodeline": "mic |= ( ( uint32_t ) decJoinAccept[encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE + 1] << 8 );"
    },
    {
        "line": 34,
        "fullcodeline": "mic |= ( ( uint32_t ) decJoinAccept[encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE + 2] << 16 );"
    },
    {
        "line": 35,
        "fullcodeline": "mic |= ( ( uint32_t ) decJoinAccept[encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE + 3] << 24 );"
    },
    {
        "line": 6,
        "fullcodeline": "if( ( encJoinAccept == NULL ) || ( decJoinAccept == NULL ) || ( versionMinor == NULL ) )"
    },
    {
        "line": 14,
        "fullcodeline": "if( joinReqType != JOIN_REQ )"
    },
    {
        "line": 22,
        "fullcodeline": "if( SecureElementAesEncrypt( encJoinAccept + LORAMAC_MHDR_FIELD_SIZE, encJoinAcceptSize - LORAMAC_MHDR_FIELD_SIZE,"
    },
    {
        "line": 42,
        "fullcodeline": "if( *versionMinor == 0 )"
    },
    {
        "line": 16,
        "fullcodeline": "encKeyID = J_S_ENC_KEY;"
    },
    {
        "line": 23,
        "fullcodeline": "encKeyID, decJoinAccept + LORAMAC_MHDR_FIELD_SIZE ) != SECURE_ELEMENT_SUCCESS )"
    },
    {
        "line": 47,
        "fullcodeline": "if( SecureElementVerifyAesCmac( decJoinAccept, ( encJoinAcceptSize - LORAMAC_MIC_FIELD_SIZE ), mic, NWK_KEY ) !="
    }
]