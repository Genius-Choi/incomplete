[
    {
        "line": 12,
        "fullcodeline": "xfs_agino_t\t\tagino = XFS_INO_TO_AGINO(mp, ino);"
    },
    {
        "line": 15,
        "fullcodeline": "ip = xfs_inode_alloc(mp, ino);"
    },
    {
        "line": 19,
        "fullcodeline": "error = xfs_iread(mp, tp, ip, flags);"
    },
    {
        "line": 28,
        "fullcodeline": "trace_xfs_iget_miss(ip);"
    },
    {
        "line": 85,
        "fullcodeline": "iflags = XFS_INEW;"
    },
    {
        "line": 88,
        "fullcodeline": "ip->i_udquot = NULL;"
    },
    {
        "line": 89,
        "fullcodeline": "ip->i_gdquot = NULL;"
    },
    {
        "line": 90,
        "fullcodeline": "ip->i_pdquot = NULL;"
    },
    {
        "line": 91,
        "fullcodeline": "xfs_iflags_set(ip, iflags);"
    },
    {
        "line": 94,
        "fullcodeline": "spin_lock(&pag->pag_ici_lock);"
    },
    {
        "line": 95,
        "fullcodeline": "error = radix_tree_insert(&pag->pag_ici_root, agino, ip);"
    },
    {
        "line": 102,
        "fullcodeline": "spin_unlock(&pag->pag_ici_lock);"
    },
    {
        "line": 103,
        "fullcodeline": "radix_tree_preload_end();"
    },
    {
        "line": 105,
        "fullcodeline": "*ipp = ip;"
    },
    {
        "line": 109,
        "fullcodeline": "spin_unlock(&pag->pag_ici_lock);"
    },
    {
        "line": 110,
        "fullcodeline": "radix_tree_preload_end();"
    },
    {
        "line": 114,
        "fullcodeline": "__destroy_inode(VFS_I(ip));"
    },
    {
        "line": 115,
        "fullcodeline": "xfs_inode_free(ip);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!ip)"
    },
    {
        "line": 23,
        "fullcodeline": "if (!xfs_inode_verify_forks(ip)) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (flags & XFS_IGET_CREATE) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (radix_tree_preload(GFP_NOFS)) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (flags & XFS_IGET_DONTCACHE)"
    },
    {
        "line": 96,
        "fullcodeline": "if (unlikely(error)) {"
    },
    {
        "line": 24,
        "fullcodeline": "error = -EFSCORRUPTED;"
    },
    {
        "line": 63,
        "fullcodeline": "error = -EAGAIN;"
    },
    {
        "line": 87,
        "fullcodeline": "iflags |= XFS_IDONTCACHE;"
    },
    {
        "line": 97,
        "fullcodeline": "WARN_ON(error != -EEXIST);"
    },
    {
        "line": 98,
        "fullcodeline": "XFS_STATS_INC(mp, xs_ig_dup);"
    },
    {
        "line": 99,
        "fullcodeline": "error = -EAGAIN;"
    },
    {
        "line": 112,
        "fullcodeline": "xfs_iunlock(ip, lock_flags);"
    },
    {
        "line": 17,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 37,
        "fullcodeline": "if (VFS_I(ip)->i_mode != 0) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (ip->i_d.di_nblocks != 0) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (!xfs_ilock_nowait(ip, lock_flags))"
    },
    {
        "line": 38,
        "fullcodeline": "xfs_warn(mp,"
    },
    {
        "line": 41,
        "fullcodeline": "error = -EFSCORRUPTED;"
    },
    {
        "line": 45,
        "fullcodeline": "xfs_warn(mp,"
    },
    {
        "line": 48,
        "fullcodeline": "error = -EFSCORRUPTED;"
    },
    {
        "line": 51,
        "fullcodeline": "} else if (VFS_I(ip)->i_mode == 0) {"
    },
    {
        "line": 73,
        "fullcodeline": "BUG();"
    },
    {
        "line": 52,
        "fullcodeline": "error = -ENOENT;"
    }
]