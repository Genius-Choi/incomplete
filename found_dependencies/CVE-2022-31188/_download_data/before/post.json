[
    {
        "line": 2,
        "fullcodeline": "job = rq.get_current_job()"
    },
    {
        "line": 3,
        "fullcodeline": "local_files = {}"
    },
    {
        "line": 4,
        "fullcodeline": "for url in urls:"
    },
    {
        "line": 22,
        "fullcodeline": "return list(local_files.keys())"
    },
    {
        "line": 5,
        "fullcodeline": "name = os.path.basename(urlrequest.url2pathname(urlparse.urlparse(url).path))"
    },
    {
        "line": 9,
        "fullcodeline": "job.meta['status'] = '{} is being downloaded..'.format(url)"
    },
    {
        "line": 10,
        "fullcodeline": "job.save_meta()"
    },
    {
        "line": 12,
        "fullcodeline": "response = requests.get(url, stream=True)"
    },
    {
        "line": 20,
        "fullcodeline": "local_files[name] = True"
    },
    {
        "line": 6,
        "fullcodeline": "if name in local_files:"
    },
    {
        "line": 8,
        "fullcodeline": "slogger.glob.info(\"Downloading: {}\".format(url))"
    },
    {
        "line": 13,
        "fullcodeline": "if response.status_code == 200:"
    },
    {
        "line": 7,
        "fullcodeline": "raise Exception(\"filename collision: {}\".format(name))"
    },
    {
        "line": 14,
        "fullcodeline": "response.raw.decode_content = True"
    },
    {
        "line": 18,
        "fullcodeline": "raise Exception(\"Failed to download \" + url)"
    },
    {
        "line": 15,
        "fullcodeline": "with open(os.path.join(upload_dir, name), 'wb') as output_file:"
    },
    {
        "line": 16,
        "fullcodeline": "shutil.copyfileobj(response.raw, output_file)"
    }
]