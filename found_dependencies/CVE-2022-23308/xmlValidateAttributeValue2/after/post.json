[
    {
        "line": 3,
        "fullcodeline": "int ret = 1;"
    },
    {
        "line": 16,
        "fullcodeline": "ent = xmlGetDocEntity(doc, value);"
    },
    {
        "line": 38,
        "fullcodeline": "xmlChar *dup, *nam = NULL, *cur, save;"
    },
    {
        "line": 41,
        "fullcodeline": "dup = xmlStrdup(value);"
    },
    {
        "line": 44,
        "fullcodeline": "cur = dup;"
    },
    {
        "line": 69,
        "fullcodeline": "xmlFree(dup);"
    },
    {
        "line": 75,
        "fullcodeline": "nota = xmlGetDtdNotationDesc(doc->intSubset, value);"
    },
    {
        "line": 18,
        "fullcodeline": "if ((ent == NULL) && (doc->standalone == 1)) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (ent == NULL) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (dup == NULL)"
    },
    {
        "line": 45,
        "fullcodeline": "while (*cur != 0) {"
    },
    {
        "line": 76,
        "fullcodeline": "if ((nota == NULL) && (doc->extSubset != NULL))"
    },
    {
        "line": 79,
        "fullcodeline": "if (nota == NULL) {"
    },
    {
        "line": 19,
        "fullcodeline": "doc->standalone = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "ent = xmlGetDocEntity(doc, value);"
    },
    {
        "line": 23,
        "fullcodeline": "xmlErrValidNode(ctxt, (xmlNodePtr) doc,"
    },
    {
        "line": 27,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "nam = cur;"
    },
    {
        "line": 48,
        "fullcodeline": "save = *cur;"
    },
    {
        "line": 49,
        "fullcodeline": "*cur = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "ent = xmlGetDocEntity(doc, nam);"
    },
    {
        "line": 66,
        "fullcodeline": "*cur = save;"
    },
    {
        "line": 77,
        "fullcodeline": "nota = xmlGetDtdNotationDesc(doc->extSubset, value);"
    },
    {
        "line": 80,
        "fullcodeline": "xmlErrValidNode(ctxt, (xmlNodePtr) doc,"
    },
    {
        "line": 84,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "while ((*cur != 0) && (!IS_BLANK_CH(*cur))) cur++;"
    },
    {
        "line": 51,
        "fullcodeline": "if (ent == NULL) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (save == 0)"
    },
    {
        "line": 67,
        "fullcodeline": "while (IS_BLANK_CH(*cur)) cur++;"
    },
    {
        "line": 28,
        "fullcodeline": "} else if (ent->etype != XML_EXTERNAL_GENERAL_UNPARSED_ENTITY) {"
    },
    {
        "line": 52,
        "fullcodeline": "xmlErrValidNode(ctxt, (xmlNodePtr) doc,"
    },
    {
        "line": 56,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "xmlErrValidNode(ctxt, (xmlNodePtr) doc,"
    },
    {
        "line": 33,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "} else if (ent->etype != XML_EXTERNAL_GENERAL_UNPARSED_ENTITY) {"
    },
    {
        "line": 58,
        "fullcodeline": "xmlErrValidNode(ctxt, (xmlNodePtr) doc,"
    },
    {
        "line": 62,
        "fullcodeline": "ret = 0;"
    }
]