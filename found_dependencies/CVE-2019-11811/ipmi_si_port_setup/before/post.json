[
    {
        "line": 3,
        "fullcodeline": "unsigned int addr = io->addr_data;"
    },
    {
        "line": 9,
        "fullcodeline": "io->io_cleanup = port_cleanup;"
    },
    {
        "line": 6,
        "fullcodeline": "if (!addr)"
    },
    {
        "line": 40,
        "fullcodeline": "for (idx = 0; idx < io->io_size; idx++) {"
    },
    {
        "line": 17,
        "fullcodeline": "io->inputb = port_inb;"
    },
    {
        "line": 18,
        "fullcodeline": "io->outputb = port_outb;"
    },
    {
        "line": 21,
        "fullcodeline": "io->inputb = port_inw;"
    },
    {
        "line": 22,
        "fullcodeline": "io->outputb = port_outw;"
    },
    {
        "line": 25,
        "fullcodeline": "io->inputb = port_inl;"
    },
    {
        "line": 26,
        "fullcodeline": "io->outputb = port_outl;"
    },
    {
        "line": 29,
        "fullcodeline": "dev_warn(io->dev, \"Invalid register size: %d\\n\","
    },
    {
        "line": 7,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 31,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 41,
        "fullcodeline": "if (request_region(addr + idx * io->regspacing,"
    },
    {
        "line": 44,
        "fullcodeline": "while (idx--)"
    },
    {
        "line": 45,
        "fullcodeline": "release_region(addr + idx * io->regspacing,"
    },
    {
        "line": 47,
        "fullcodeline": "return -EIO;"
    }
]