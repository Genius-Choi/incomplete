[
    {
        "line": 3,
        "fullcodeline": "unsigned long addr = io->addr_data;"
    },
    {
        "line": 9,
        "fullcodeline": "io->io_cleanup = mem_cleanup;"
    },
    {
        "line": 62,
        "fullcodeline": "mapsize = ((io->io_size * io->regspacing)"
    },
    {
        "line": 64,
        "fullcodeline": "io->addr = ioremap(addr, mapsize);"
    },
    {
        "line": 6,
        "fullcodeline": "if (!addr)"
    },
    {
        "line": 46,
        "fullcodeline": "for (idx = 0; idx < io->io_size; idx++) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (io->addr == NULL) {"
    },
    {
        "line": 17,
        "fullcodeline": "io->inputb = intf_mem_inb;"
    },
    {
        "line": 18,
        "fullcodeline": "io->outputb = intf_mem_outb;"
    },
    {
        "line": 21,
        "fullcodeline": "io->inputb = intf_mem_inw;"
    },
    {
        "line": 22,
        "fullcodeline": "io->outputb = intf_mem_outw;"
    },
    {
        "line": 25,
        "fullcodeline": "io->inputb = intf_mem_inl;"
    },
    {
        "line": 26,
        "fullcodeline": "io->outputb = intf_mem_outl;"
    },
    {
        "line": 63,
        "fullcodeline": "- (io->regspacing - io->regsize));"
    },
    {
        "line": 7,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 37,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 47,
        "fullcodeline": "if (request_mem_region(addr + idx * io->regspacing,"
    },
    {
        "line": 67,
        "fullcodeline": "return -EIO;"
    },
    {
        "line": 51,
        "fullcodeline": "return -EIO;"
    }
]