[
    {
        "line": 4,
        "fullcodeline": "int\t\thistype1 = HIST_CMD;"
    },
    {
        "line": 5,
        "fullcodeline": "int\t\thistype2 = HIST_CMD;"
    },
    {
        "line": 6,
        "fullcodeline": "int\t\thisidx1 = 1;"
    },
    {
        "line": 7,
        "fullcodeline": "int\t\thisidx2 = -1;"
    },
    {
        "line": 11,
        "fullcodeline": "char_u\t*arg = eap->arg;"
    },
    {
        "line": 13,
        "fullcodeline": "if (hislen == 0)"
    },
    {
        "line": 57,
        "fullcodeline": "for (; !got_int && histype1 <= histype2; ++histype1)"
    },
    {
        "line": 15,
        "fullcodeline": "msg(_(\"'history' option is zero\"));"
    },
    {
        "line": 19,
        "fullcodeline": "if (!(VIM_ISDIGIT(*arg) || *arg == '-' || *arg == ','))"
    },
    {
        "line": 21,
        "fullcodeline": "end = arg;"
    },
    {
        "line": 25,
        "fullcodeline": "i = *end;"
    },
    {
        "line": 27,
        "fullcodeline": "histype1 = get_histtype(arg);"
    },
    {
        "line": 44,
        "fullcodeline": "*end = i;"
    },
    {
        "line": 48,
        "fullcodeline": "if (!get_list_range(&end, &hisidx1, &hisidx2) || *end != NUL)"
    },
    {
        "line": 59,
        "fullcodeline": "STRCPY(IObuff, \"\\n      #  \");"
    },
    {
        "line": 62,
        "fullcodeline": "idx = hisidx[histype1];"
    },
    {
        "line": 64,
        "fullcodeline": "j = hisidx1;"
    },
    {
        "line": 65,
        "fullcodeline": "k = hisidx2;"
    },
    {
        "line": 24,
        "fullcodeline": "end++;"
    },
    {
        "line": 28,
        "fullcodeline": "if (histype1 == -1)"
    },
    {
        "line": 47,
        "fullcodeline": "end = arg;"
    },
    {
        "line": 50,
        "fullcodeline": "if (*end != NUL)"
    },
    {
        "line": 60,
        "fullcodeline": "STRCAT(STRCAT(IObuff, history_names[histype1]), \" history\");"
    },
    {
        "line": 66,
        "fullcodeline": "if (j < 0)"
    },
    {
        "line": 68,
        "fullcodeline": "if (k < 0)"
    },
    {
        "line": 22,
        "fullcodeline": "while (ASCII_ISALPHA(*end)"
    },
    {
        "line": 23,
        "fullcodeline": "|| vim_strchr((char_u *)\":=@>/?\", *end) != NULL)"
    },
    {
        "line": 67,
        "fullcodeline": "j = (-j > hislen) ? 0 : hist[(hislen+j+idx+1) % hislen].hisnum;"
    },
    {
        "line": 69,
        "fullcodeline": "k = (-k > hislen) ? 0 : hist[(hislen+k+idx+1) % hislen].hisnum;"
    },
    {
        "line": 70,
        "fullcodeline": "if (idx >= 0 && j <= k)"
    },
    {
        "line": 43,
        "fullcodeline": "histype2 = histype1;"
    },
    {
        "line": 51,
        "fullcodeline": "semsg(_(e_trailing_characters_str), end);"
    },
    {
        "line": 71,
        "fullcodeline": "for (i = idx + 1; !got_int; ++i)"
    },
    {
        "line": 30,
        "fullcodeline": "if (STRNICMP(arg, \"all\", STRLEN(arg)) == 0)"
    },
    {
        "line": 32,
        "fullcodeline": "histype1 = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "histype2 = HIST_COUNT-1;"
    },
    {
        "line": 53,
        "fullcodeline": "semsg(_(e_val_too_large), arg);"
    },
    {
        "line": 73,
        "fullcodeline": "if (i == hislen)"
    },
    {
        "line": 89,
        "fullcodeline": "if (i == idx)"
    },
    {
        "line": 38,
        "fullcodeline": "semsg(_(e_trailing_characters_str), arg);"
    },
    {
        "line": 74,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 75,
        "fullcodeline": "if (hist[i].hisstr != NULL"
    },
    {
        "line": 76,
        "fullcodeline": "&& hist[i].hisnum >= j && hist[i].hisnum <= k)"
    },
    {
        "line": 86,
        "fullcodeline": "msg_outtrans(IObuff);"
    },
    {
        "line": 79,
        "fullcodeline": "sprintf((char *)IObuff, \"%c%6d  \", i == idx ? '>' : ' ',"
    },
    {
        "line": 81,
        "fullcodeline": "if (vim_strsize(hist[i].hisstr) > (int)Columns - 10)"
    },
    {
        "line": 83,
        "fullcodeline": "(int)Columns - 10, IOSIZE - (int)STRLEN(IObuff));"
    },
    {
        "line": 85,
        "fullcodeline": "STRCAT(IObuff, hist[i].hisstr);"
    },
    {
        "line": 82,
        "fullcodeline": "trunc_string(hist[i].hisstr, IObuff + STRLEN(IObuff),"
    }
]