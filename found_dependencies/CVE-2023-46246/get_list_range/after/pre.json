[
    {
        "line": 4,
        "fullcodeline": "int\t\tfirst = FALSE;"
    },
    {
        "line": 7,
        "fullcodeline": "*str = skipwhite(*str);"
    },
    {
        "line": 19,
        "fullcodeline": "*str = skipwhite(*str);"
    },
    {
        "line": 8,
        "fullcodeline": "if (**str == '-' || vim_isdigit(**str))  // parse \"from\" part of range"
    },
    {
        "line": 20,
        "fullcodeline": "if (**str == ',')\t\t\t// parse \"to\" part of range"
    },
    {
        "line": 10,
        "fullcodeline": "vim_str2nr(*str, NULL, &len, 0, &num, NULL, 0, FALSE, NULL);"
    },
    {
        "line": 11,
        "fullcodeline": "*str += len;"
    },
    {
        "line": 16,
        "fullcodeline": "*num1 = (int)num;"
    },
    {
        "line": 17,
        "fullcodeline": "first = TRUE;"
    },
    {
        "line": 22,
        "fullcodeline": "*str = skipwhite(*str + 1);"
    },
    {
        "line": 23,
        "fullcodeline": "vim_str2nr(*str, NULL, &len, 0, &num, NULL, 0, FALSE, NULL);"
    },
    {
        "line": 13,
        "fullcodeline": "if (num > INT_MAX)"
    },
    {
        "line": 24,
        "fullcodeline": "if (len > 0)"
    },
    {
        "line": 26,
        "fullcodeline": "*str = skipwhite(*str + len);"
    },
    {
        "line": 28,
        "fullcodeline": "if (num > INT_MAX)"
    }
]