[
    {
        "line": 6,
        "fullcodeline": "const struct mimeentry tab[] = {"
    },
    {
        "line": 39,
        "fullcodeline": "size_t i = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "struct mg_str k, v, s = mg_str(extra);"
    },
    {
        "line": 44,
        "fullcodeline": "path.ptr += path.len - i;"
    },
    {
        "line": 45,
        "fullcodeline": "path.len = i;"
    },
    {
        "line": 43,
        "fullcodeline": "while (i < path.len && path.ptr[path.len - i - 1] != '.') i++;"
    },
    {
        "line": 48,
        "fullcodeline": "while (mg_commalist(&s, &k, &v)) {"
    },
    {
        "line": 53,
        "fullcodeline": "for (i = 0; tab[i].extension.ptr != NULL; i++) {"
    },
    {
        "line": 57,
        "fullcodeline": "return mg_str(\"text/plain; charset=utf-8\");"
    },
    {
        "line": 7,
        "fullcodeline": "MIME_ENTRY(\"html\", \"text/html; charset=utf-8\"),"
    },
    {
        "line": 8,
        "fullcodeline": "MIME_ENTRY(\"htm\", \"text/html; charset=utf-8\"),"
    },
    {
        "line": 9,
        "fullcodeline": "MIME_ENTRY(\"css\", \"text/css; charset=utf-8\"),"
    },
    {
        "line": 10,
        "fullcodeline": "MIME_ENTRY(\"js\", \"text/javascript; charset=utf-8\"),"
    },
    {
        "line": 11,
        "fullcodeline": "MIME_ENTRY(\"gif\", \"image/gif\"),"
    },
    {
        "line": 12,
        "fullcodeline": "MIME_ENTRY(\"png\", \"image/png\"),"
    },
    {
        "line": 13,
        "fullcodeline": "MIME_ENTRY(\"jpg\", \"image/jpeg\"),"
    },
    {
        "line": 14,
        "fullcodeline": "MIME_ENTRY(\"jpeg\", \"image/jpeg\"),"
    },
    {
        "line": 15,
        "fullcodeline": "MIME_ENTRY(\"woff\", \"font/woff\"),"
    },
    {
        "line": 16,
        "fullcodeline": "MIME_ENTRY(\"ttf\", \"font/ttf\"),"
    },
    {
        "line": 17,
        "fullcodeline": "MIME_ENTRY(\"svg\", \"image/svg+xml\"),"
    },
    {
        "line": 18,
        "fullcodeline": "MIME_ENTRY(\"txt\", \"text/plain; charset=utf-8\"),"
    },
    {
        "line": 19,
        "fullcodeline": "MIME_ENTRY(\"avi\", \"video/x-msvideo\"),"
    },
    {
        "line": 20,
        "fullcodeline": "MIME_ENTRY(\"csv\", \"text/csv\"),"
    },
    {
        "line": 21,
        "fullcodeline": "MIME_ENTRY(\"doc\", \"application/msword\"),"
    },
    {
        "line": 22,
        "fullcodeline": "MIME_ENTRY(\"exe\", \"application/octet-stream\"),"
    },
    {
        "line": 23,
        "fullcodeline": "MIME_ENTRY(\"gz\", \"application/gzip\"),"
    },
    {
        "line": 24,
        "fullcodeline": "MIME_ENTRY(\"ico\", \"image/x-icon\"),"
    },
    {
        "line": 25,
        "fullcodeline": "MIME_ENTRY(\"json\", \"application/json\"),"
    },
    {
        "line": 26,
        "fullcodeline": "MIME_ENTRY(\"mov\", \"video/quicktime\"),"
    },
    {
        "line": 27,
        "fullcodeline": "MIME_ENTRY(\"mp3\", \"audio/mpeg\"),"
    },
    {
        "line": 28,
        "fullcodeline": "MIME_ENTRY(\"mp4\", \"video/mp4\"),"
    },
    {
        "line": 29,
        "fullcodeline": "MIME_ENTRY(\"mpeg\", \"video/mpeg\"),"
    },
    {
        "line": 30,
        "fullcodeline": "MIME_ENTRY(\"pdf\", \"application/pdf\"),"
    },
    {
        "line": 31,
        "fullcodeline": "MIME_ENTRY(\"shtml\", \"text/html; charset=utf-8\"),"
    },
    {
        "line": 32,
        "fullcodeline": "MIME_ENTRY(\"tgz\", \"application/tar-gz\"),"
    },
    {
        "line": 33,
        "fullcodeline": "MIME_ENTRY(\"wav\", \"audio/wav\"),"
    },
    {
        "line": 34,
        "fullcodeline": "MIME_ENTRY(\"webp\", \"image/webp\"),"
    },
    {
        "line": 35,
        "fullcodeline": "MIME_ENTRY(\"zip\", \"application/zip\"),"
    },
    {
        "line": 36,
        "fullcodeline": "MIME_ENTRY(\"3gp\", \"video/3gpp\"),"
    },
    {
        "line": 37,
        "fullcodeline": "{{0, 0}, {0, 0}},"
    },
    {
        "line": 49,
        "fullcodeline": "if (mg_strcmp(path, k) == 0) return v;"
    },
    {
        "line": 54,
        "fullcodeline": "if (mg_strcmp(path, tab[i].extension) == 0) return tab[i].value;"
    }
]