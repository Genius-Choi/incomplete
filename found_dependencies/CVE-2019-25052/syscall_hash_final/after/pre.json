[
    {
        "line": 6,
        "fullcodeline": "size_t hlen = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "res = tee_ta_get_current_session(&sess);"
    },
    {
        "line": 18,
        "fullcodeline": "res = tee_mmu_check_access_rights(to_user_ta_ctx(sess->ctx),"
    },
    {
        "line": 25,
        "fullcodeline": "res = get_user_u64_as_size_t(&hlen, hash_len);"
    },
    {
        "line": 29,
        "fullcodeline": "res = tee_mmu_check_access_rights(to_user_ta_ctx(sess->ctx),"
    },
    {
        "line": 37,
        "fullcodeline": "res = tee_svc_cryp_get_state(sess, tee_svc_uref_to_vaddr(state), &cs);"
    },
    {
        "line": 91,
        "fullcodeline": "res2 = put_user_u64(hash_len, hash_size);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!chunk && chunk_size)"
    },
    {
        "line": 15,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 22,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 26,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 34,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 38,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 41,
        "fullcodeline": "if (cs->state != CRYP_STATE_INITIALIZED)"
    },
    {
        "line": 44,
        "fullcodeline": "switch (TEE_ALG_GET_CLASS(cs->algo)) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (res2 != TEE_SUCCESS)"
    },
    {
        "line": 19,
        "fullcodeline": "TEE_MEMORY_ACCESS_READ |"
    },
    {
        "line": 30,
        "fullcodeline": "TEE_MEMORY_ACCESS_READ |"
    },
    {
        "line": 46,
        "fullcodeline": "res = tee_hash_get_digest_size(cs->algo, &hash_size);"
    },
    {
        "line": 61,
        "fullcodeline": "res = crypto_hash_final(cs->ctx, cs->algo, hash, hash_size);"
    },
    {
        "line": 67,
        "fullcodeline": "res = tee_mac_get_digest_size(cs->algo, &hash_size);"
    },
    {
        "line": 82,
        "fullcodeline": "res = crypto_mac_final(cs->ctx, cs->algo, hash, hash_size);"
    },
    {
        "line": 47,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 49,
        "fullcodeline": "if (hlen < hash_size) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 68,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 70,
        "fullcodeline": "if (hlen < hash_size) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 50,
        "fullcodeline": "res = TEE_ERROR_SHORT_BUFFER;"
    },
    {
        "line": 55,
        "fullcodeline": "res = crypto_hash_update(cs->ctx, cs->algo, chunk,"
    },
    {
        "line": 71,
        "fullcodeline": "res = TEE_ERROR_SHORT_BUFFER;"
    },
    {
        "line": 76,
        "fullcodeline": "res = crypto_mac_update(cs->ctx, cs->algo, chunk,"
    },
    {
        "line": 57,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 78,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    }
]