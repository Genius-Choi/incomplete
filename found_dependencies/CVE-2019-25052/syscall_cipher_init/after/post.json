[
    {
        "line": 11,
        "fullcodeline": "res = tee_ta_get_current_session(&sess);"
    },
    {
        "line": 14,
        "fullcodeline": "utc = to_user_ta_ctx(sess->ctx);"
    },
    {
        "line": 16,
        "fullcodeline": "res = tee_svc_cryp_get_state(sess, tee_svc_uref_to_vaddr(state), &cs);"
    },
    {
        "line": 23,
        "fullcodeline": "res = tee_mmu_check_access_rights(utc,"
    },
    {
        "line": 30,
        "fullcodeline": "res = tee_obj_get(utc, cs->key1, &o);"
    },
    {
        "line": 36,
        "fullcodeline": "key1 = o->attr;"
    },
    {
        "line": 56,
        "fullcodeline": "cs->ctx_finalize = crypto_cipher_final;"
    },
    {
        "line": 57,
        "fullcodeline": "cs->state = CRYP_STATE_INITIALIZED;"
    },
    {
        "line": 12,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 17,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 20,
        "fullcodeline": "if (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_CIPHER)"
    },
    {
        "line": 27,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 31,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 33,
        "fullcodeline": "if ((o->info.handleFlags & TEE_HANDLE_FLAG_INITIALIZED) == 0)"
    },
    {
        "line": 38,
        "fullcodeline": "if (tee_obj_get(utc, cs->key2, &o) == TEE_SUCCESS) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 24,
        "fullcodeline": "TEE_MEMORY_ACCESS_READ |"
    },
    {
        "line": 26,
        "fullcodeline": "(uaddr_t) iv, iv_len);"
    },
    {
        "line": 39,
        "fullcodeline": "struct tee_cryp_obj_secret *key2 = o->attr;"
    },
    {
        "line": 44,
        "fullcodeline": "res = crypto_cipher_init(cs->ctx, cs->algo, cs->mode,"
    },
    {
        "line": 41,
        "fullcodeline": "if ((o->info.handleFlags & TEE_HANDLE_FLAG_INITIALIZED) == 0)"
    },
    {
        "line": 49,
        "fullcodeline": "res = crypto_cipher_init(cs->ctx, cs->algo, cs->mode,"
    },
    {
        "line": 45,
        "fullcodeline": "(uint8_t *)(key1 + 1), key1->key_size,"
    },
    {
        "line": 46,
        "fullcodeline": "(uint8_t *)(key2 + 1), key2->key_size,"
    },
    {
        "line": 50,
        "fullcodeline": "(uint8_t *)(key1 + 1), key1->key_size,"
    }
]