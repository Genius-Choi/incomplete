[
    {
        "line": 16,
        "fullcodeline": "res = tee_ta_get_current_session(&sess);"
    },
    {
        "line": 20,
        "fullcodeline": "res = tee_mmu_check_access_rights(to_user_ta_ctx(sess->ctx),"
    },
    {
        "line": 27,
        "fullcodeline": "res = tee_svc_cryp_get_state(sess, tee_svc_uref_to_vaddr(state), &cs);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!chunk && chunk_size)"
    },
    {
        "line": 13,
        "fullcodeline": "if (!chunk_size)"
    },
    {
        "line": 17,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 24,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 28,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 31,
        "fullcodeline": "if (cs->state != CRYP_STATE_INITIALIZED)"
    },
    {
        "line": 34,
        "fullcodeline": "switch (TEE_ALG_GET_CLASS(cs->algo)) {"
    },
    {
        "line": 21,
        "fullcodeline": "TEE_MEMORY_ACCESS_READ |"
    },
    {
        "line": 36,
        "fullcodeline": "res = crypto_hash_update(cs->ctx, cs->algo, chunk, chunk_size);"
    },
    {
        "line": 41,
        "fullcodeline": "res = crypto_mac_update(cs->ctx, cs->algo, chunk, chunk_size);"
    },
    {
        "line": 37,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 42,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    }
]