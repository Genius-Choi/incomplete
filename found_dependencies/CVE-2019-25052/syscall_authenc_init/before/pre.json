[
    {
        "line": 11,
        "fullcodeline": "res = tee_ta_get_current_session(&sess);"
    },
    {
        "line": 15,
        "fullcodeline": "res = tee_mmu_check_access_rights(to_user_ta_ctx(sess->ctx),"
    },
    {
        "line": 22,
        "fullcodeline": "res = tee_svc_cryp_get_state(sess, tee_svc_uref_to_vaddr(state), &cs);"
    },
    {
        "line": 26,
        "fullcodeline": "res = tee_obj_get(to_user_ta_ctx(sess->ctx), cs->key1, &o);"
    },
    {
        "line": 32,
        "fullcodeline": "key = o->attr;"
    },
    {
        "line": 33,
        "fullcodeline": "res = crypto_authenc_init(cs->ctx, cs->algo, cs->mode,"
    },
    {
        "line": 12,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 19,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 23,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 27,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 37,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 40,
        "fullcodeline": "cs->ctx_finalize = (tee_cryp_ctx_finalize_func_t)crypto_authenc_final;"
    },
    {
        "line": 16,
        "fullcodeline": "TEE_MEMORY_ACCESS_READ |"
    },
    {
        "line": 29,
        "fullcodeline": "if ((o->info.handleFlags & TEE_HANDLE_FLAG_INITIALIZED) == 0)"
    }
]