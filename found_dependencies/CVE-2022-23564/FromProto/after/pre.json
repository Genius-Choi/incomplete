[
    {
        "line": 2,
        "fullcodeline": "set_device(proto.device());"
    },
    {
        "line": 3,
        "fullcodeline": "set_container(proto.container());"
    },
    {
        "line": 4,
        "fullcodeline": "set_name(proto.name());"
    },
    {
        "line": 5,
        "fullcodeline": "set_hash_code(proto.hash_code());"
    },
    {
        "line": 6,
        "fullcodeline": "set_maybe_type_name(proto.maybe_type_name());"
    },
    {
        "line": 7,
        "fullcodeline": "std::vector<DtypeAndPartialTensorShape> dtypes_and_shapes;"
    },
    {
        "line": 18,
        "fullcodeline": "dtypes_and_shapes_ = std::move(dtypes_and_shapes);"
    },
    {
        "line": 19,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 9,
        "fullcodeline": "DataType dtype = dtype_and_shape.dtype();"
    },
    {
        "line": 11,
        "fullcodeline": "Status s = PartialTensorShape::BuildPartialTensorShape("
    },
    {
        "line": 16,
        "fullcodeline": "dtypes_and_shapes.push_back(DtypeAndPartialTensorShape{dtype, shape});"
    },
    {
        "line": 13,
        "fullcodeline": "if (!s.ok()) {"
    },
    {
        "line": 12,
        "fullcodeline": "dtype_and_shape.shape(), &shape);"
    }
]