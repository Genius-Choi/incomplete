[
    {
        "line": 4,
        "fullcodeline": "FriBidiChar *logical = NULL; /* input fribidi unicode buffer */"
    },
    {
        "line": 5,
        "fullcodeline": "FriBidiChar *visual = NULL;\t /* output fribidi unicode buffer */"
    },
    {
        "line": 6,
        "fullcodeline": "char *visual_utf8 = NULL;    /* output fribidi UTF-8 buffer */"
    },
    {
        "line": 7,
        "fullcodeline": "FriBidiStrIndex new_len = 0; /* length of the UTF-8 buffer */"
    },
    {
        "line": 8,
        "fullcodeline": "PyObject *result = NULL;\t /* failure */"
    },
    {
        "line": 12,
        "fullcodeline": "logical = PyMem_New (FriBidiChar, unicode_length + 1);"
    },
    {
        "line": 20,
        "fullcodeline": "visual = PyMem_New (FriBidiChar, unicode_length + 1);"
    },
    {
        "line": 29,
        "fullcodeline": "fribidi_set_reorder_nsm(reordernsm);"
    },
    {
        "line": 30,
        "fullcodeline": "fribidi_utf8_to_unicode (PyString_AS_STRING (string),"
    },
    {
        "line": 57,
        "fullcodeline": "new_len = fribidi_unicode_to_utf8 (visual, unicode_length, visual_utf8);"
    },
    {
        "line": 59,
        "fullcodeline": "result = PyString_FromStringAndSize (visual_utf8, new_len);"
    },
    {
        "line": 66,
        "fullcodeline": "PyMem_Del (logical);"
    },
    {
        "line": 67,
        "fullcodeline": "PyMem_Del (visual);"
    },
    {
        "line": 68,
        "fullcodeline": "PyMem_Del (visual_utf8);"
    },
    {
        "line": 13,
        "fullcodeline": "if (logical == NULL)"
    },
    {
        "line": 21,
        "fullcodeline": "if (visual == NULL)"
    },
    {
        "line": 31,
        "fullcodeline": "PyString_GET_SIZE (string), logical);"
    },
    {
        "line": 33,
        "fullcodeline": "if (!fribidi_log2vis (logical, unicode_length, &base_direction, visual,"
    },
    {
        "line": 48,
        "fullcodeline": "if (visual_utf8 == NULL)"
    },
    {
        "line": 60,
        "fullcodeline": "if (result == NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "PyErr_SetString (PyExc_MemoryError,"
    },
    {
        "line": 23,
        "fullcodeline": "PyErr_SetString (PyExc_MemoryError,"
    },
    {
        "line": 36,
        "fullcodeline": "PyErr_SetString (PyExc_RuntimeError,"
    },
    {
        "line": 43,
        "fullcodeline": "fribidi_remove_bidi_marks (visual, unicode_length, NULL, NULL, NULL);"
    },
    {
        "line": 50,
        "fullcodeline": "PyErr_SetString (PyExc_MemoryError,"
    }
]