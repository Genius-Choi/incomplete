[
    {
        "line": 3,
        "fullcodeline": "PyUnicodeObject *logical = NULL;\t/* input unicode or string object */"
    },
    {
        "line": 4,
        "fullcodeline": "FriBidiParType base = FRIBIDI_TYPE_RTL;\t/* optional direction */"
    },
    {
        "line": 5,
        "fullcodeline": "int clean = 0; /* optional flag to clean the string */"
    },
    {
        "line": 6,
        "fullcodeline": "int reordernsm = 1; /* optional flag to allow reordering of non spacing marks*/"
    },
    {
        "line": 8,
        "fullcodeline": "static char *kwargs[] ="
    },
    {
        "line": 9,
        "fullcodeline": "{ \"logical\", \"base_direction\", \"clean\", \"reordernsm\", NULL };"
    },
    {
        "line": 11,
        "fullcodeline": "if (!PyArg_ParseTupleAndKeywords (args, kw, \"U|iii\", kwargs,"
    },
    {
        "line": 26,
        "fullcodeline": "return unicode_log2vis (logical, base, clean, reordernsm);"
    },
    {
        "line": 18,
        "fullcodeline": "if (!(base == FRIBIDI_TYPE_RTL"
    },
    {
        "line": 20,
        "fullcodeline": "|| base == FRIBIDI_TYPE_ON)) {"
    },
    {
        "line": 21,
        "fullcodeline": "return PyErr_Format (PyExc_ValueError,"
    },
    {
        "line": 19,
        "fullcodeline": "|| base == FRIBIDI_TYPE_LTR"
    }
]