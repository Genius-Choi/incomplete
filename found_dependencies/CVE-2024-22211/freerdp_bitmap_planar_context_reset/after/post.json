[
    {
        "line": 7,
        "fullcodeline": "context->bgr = FALSE;"
    },
    {
        "line": 8,
        "fullcodeline": "context->maxWidth = PLANAR_ALIGN(width, 4);"
    },
    {
        "line": 9,
        "fullcodeline": "context->maxHeight = PLANAR_ALIGN(height, 4);"
    },
    {
        "line": 10,
        "fullcodeline": "const UINT64 tmp = (UINT64)context->maxWidth * context->maxHeight;"
    },
    {
        "line": 13,
        "fullcodeline": "context->maxPlaneSize = tmp;"
    },
    {
        "line": 17,
        "fullcodeline": "context->nTempStep = context->maxWidth * 4;"
    },
    {
        "line": 19,
        "fullcodeline": "memset(context->planes, 0, sizeof(context->planes));"
    },
    {
        "line": 20,
        "fullcodeline": "memset(context->rlePlanes, 0, sizeof(context->rlePlanes));"
    },
    {
        "line": 21,
        "fullcodeline": "memset(context->deltaPlanes, 0, sizeof(context->deltaPlanes));"
    },
    {
        "line": 4,
        "fullcodeline": "if (!context)"
    },
    {
        "line": 11,
        "fullcodeline": "if (tmp > UINT32_MAX)"
    },
    {
        "line": 15,
        "fullcodeline": "if (context->maxWidth > UINT32_MAX / 4)"
    },
    {
        "line": 23,
        "fullcodeline": "if (context->maxPlaneSize > 0)"
    },
    {
        "line": 25,
        "fullcodeline": "void* tmp = winpr_aligned_recalloc(context->planesBuffer, context->maxPlaneSize, 4, 32);"
    },
    {
        "line": 28,
        "fullcodeline": "context->planesBuffer = tmp;"
    },
    {
        "line": 30,
        "fullcodeline": "tmp = winpr_aligned_recalloc(context->pTempData, context->maxPlaneSize, 6, 32);"
    },
    {
        "line": 33,
        "fullcodeline": "context->pTempData = tmp;"
    },
    {
        "line": 35,
        "fullcodeline": "tmp = winpr_aligned_recalloc(context->deltaPlanesBuffer, context->maxPlaneSize, 4, 32);"
    },
    {
        "line": 38,
        "fullcodeline": "context->deltaPlanesBuffer = tmp;"
    },
    {
        "line": 40,
        "fullcodeline": "tmp = winpr_aligned_recalloc(context->rlePlanesBuffer, context->maxPlaneSize, 4, 32);"
    },
    {
        "line": 43,
        "fullcodeline": "context->rlePlanesBuffer = tmp;"
    },
    {
        "line": 45,
        "fullcodeline": "context->planes[0] = &context->planesBuffer[context->maxPlaneSize * 0];"
    },
    {
        "line": 46,
        "fullcodeline": "context->planes[1] = &context->planesBuffer[context->maxPlaneSize * 1];"
    },
    {
        "line": 47,
        "fullcodeline": "context->planes[2] = &context->planesBuffer[context->maxPlaneSize * 2];"
    },
    {
        "line": 48,
        "fullcodeline": "context->planes[3] = &context->planesBuffer[context->maxPlaneSize * 3];"
    },
    {
        "line": 49,
        "fullcodeline": "context->deltaPlanes[0] = &context->deltaPlanesBuffer[context->maxPlaneSize * 0];"
    },
    {
        "line": 50,
        "fullcodeline": "context->deltaPlanes[1] = &context->deltaPlanesBuffer[context->maxPlaneSize * 1];"
    },
    {
        "line": 51,
        "fullcodeline": "context->deltaPlanes[2] = &context->deltaPlanesBuffer[context->maxPlaneSize * 2];"
    },
    {
        "line": 52,
        "fullcodeline": "context->deltaPlanes[3] = &context->deltaPlanesBuffer[context->maxPlaneSize * 3];"
    },
    {
        "line": 26,
        "fullcodeline": "if (!tmp)"
    },
    {
        "line": 31,
        "fullcodeline": "if (!tmp)"
    },
    {
        "line": 36,
        "fullcodeline": "if (!tmp)"
    },
    {
        "line": 41,
        "fullcodeline": "if (!tmp)"
    }
]