[
    {
        "line": 11,
        "fullcodeline": "char\t*errmsg = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "int\t\tdid_chartab = FALSE;"
    },
    {
        "line": 15,
        "fullcodeline": "long_u\tfree_oldval = (get_option_flags(opt_idx) & P_ALLOCED);"
    },
    {
        "line": 20,
        "fullcodeline": "int\t\tvalue_changed = FALSE;"
    },
    {
        "line": 27,
        "fullcodeline": "gvarp = (char_u **)get_option_varp_scope(opt_idx, OPT_GLOBAL);"
    },
    {
        "line": 30,
        "fullcodeline": "if ((secure"
    },
    {
        "line": 1716,
        "fullcodeline": "if (errmsg != NULL)"
    },
    {
        "line": 1828,
        "fullcodeline": "if (varp == &p_mouse)"
    },
    {
        "line": 1841,
        "fullcodeline": "if (curwin->w_curswant != MAXCOL"
    },
    {
        "line": 1845,
        "fullcodeline": "if ((opt_flags & OPT_NO_REDRAW) == 0)"
    },
    {
        "line": 34,
        "fullcodeline": ") && (get_option_flags(opt_idx) & P_SECURE))"
    },
    {
        "line": 35,
        "fullcodeline": "errmsg = e_secure;"
    },
    {
        "line": 1720,
        "fullcodeline": "*varp = oldval;"
    },
    {
        "line": 1842,
        "fullcodeline": "&& (get_option_flags(opt_idx) & (P_CURSWANT | P_RALL)) != 0)"
    },
    {
        "line": 1843,
        "fullcodeline": "curwin->w_set_curswant = TRUE;"
    },
    {
        "line": 1851,
        "fullcodeline": "check_redraw(get_option_flags(opt_idx));"
    },
    {
        "line": 1724,
        "fullcodeline": "if (varp == &p_hl)"
    },
    {
        "line": 1830,
        "fullcodeline": "if (*p_mouse == NUL)"
    },
    {
        "line": 40,
        "fullcodeline": "else if (((get_option_flags(opt_idx) & P_NFNAME)"
    },
    {
        "line": 1719,
        "fullcodeline": "free_string_option(*varp);"
    },
    {
        "line": 1723,
        "fullcodeline": "(void)init_chartab();"
    },
    {
        "line": 1725,
        "fullcodeline": "(void)highlight_changed();"
    },
    {
        "line": 1743,
        "fullcodeline": "if ((opt_flags & (OPT_LOCAL | OPT_GLOBAL)) == 0"
    },
    {
        "line": 1831,
        "fullcodeline": "mch_setmouse(FALSE);    // switch mouse off"
    },
    {
        "line": 43,
        "fullcodeline": "|| ((get_option_flags(opt_idx) & P_NDNAME)"
    },
    {
        "line": 45,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1737,
        "fullcodeline": "free_string_option(oldval);"
    },
    {
        "line": 1739,
        "fullcodeline": "set_option_flag(opt_idx, P_ALLOCED);"
    },
    {
        "line": 1744,
        "fullcodeline": "&& is_global_local_option(opt_idx))"
    },
    {
        "line": 1748,
        "fullcodeline": "p = get_option_varp_scope(opt_idx, OPT_LOCAL);"
    },
    {
        "line": 1750,
        "fullcodeline": "*(char_u **)p = empty_option;"
    },
    {
        "line": 1833,
        "fullcodeline": "setmouse();\t\t    // in case 'mouse' changed"
    },
    {
        "line": 41,
        "fullcodeline": "&& vim_strpbrk(*varp, (char_u *)(secure"
    },
    {
        "line": 44,
        "fullcodeline": "&& vim_strpbrk(*varp, (char_u *)\"*?[|;&<>\\r\\n\") != NULL))"
    },
    {
        "line": 1741,
        "fullcodeline": "clear_option_flag(opt_idx, P_ALLOCED);"
    },
    {
        "line": 48,
        "fullcodeline": "else if (varp == &T_NAME)"
    },
    {
        "line": 1749,
        "fullcodeline": "free_string_option(*(char_u **)p);"
    },
    {
        "line": 1754,
        "fullcodeline": "else if (!(opt_flags & OPT_LOCAL) && opt_flags != OPT_GLOBAL)"
    },
    {
        "line": 1755,
        "fullcodeline": "set_string_option_global(opt_idx, varp);"
    },
    {
        "line": 50,
        "fullcodeline": "if (T_NAME[0] == NUL)"
    },
    {
        "line": 51,
        "fullcodeline": "errmsg = N_(\"E529: Cannot set 'term' to empty string\");"
    },
    {
        "line": 73,
        "fullcodeline": "else if (gvarp == &p_bkc)"
    },
    {
        "line": 1773,
        "fullcodeline": "else if (varp == &(curbuf->b_p_ft))"
    },
    {
        "line": 75,
        "fullcodeline": "char_u\t\t*bkc = p_bkc;"
    },
    {
        "line": 76,
        "fullcodeline": "unsigned int\t*flags = &bkc_flags;"
    },
    {
        "line": 58,
        "fullcodeline": "else if (set_termname(T_NAME) == FAIL)"
    },
    {
        "line": 78,
        "fullcodeline": "if (opt_flags & OPT_LOCAL)"
    },
    {
        "line": 84,
        "fullcodeline": "if ((opt_flags & OPT_LOCAL) && *bkc == NUL)"
    },
    {
        "line": 1778,
        "fullcodeline": "if (!(opt_flags & OPT_MODELINE) || value_changed)"
    },
    {
        "line": 59,
        "fullcodeline": "errmsg = N_(\"E522: Not found in termcap\");"
    },
    {
        "line": 86,
        "fullcodeline": "*flags = 0;"
    },
    {
        "line": 103,
        "fullcodeline": "else if (varp == &p_bex || varp == &p_pm)"
    },
    {
        "line": 1780,
        "fullcodeline": "static int  ft_recursive = 0;"
    },
    {
        "line": 1781,
        "fullcodeline": "int\t    secure_save = secure;"
    },
    {
        "line": 1785,
        "fullcodeline": "secure = 0;"
    },
    {
        "line": 1787,
        "fullcodeline": "++ft_recursive;"
    },
    {
        "line": 1788,
        "fullcodeline": "did_filetype = TRUE;"
    },
    {
        "line": 1791,
        "fullcodeline": "apply_autocmds(EVENT_FILETYPE, curbuf->b_p_ft, curbuf->b_fname,"
    },
    {
        "line": 1793,
        "fullcodeline": "--ft_recursive;"
    },
    {
        "line": 1798,
        "fullcodeline": "secure = secure_save;"
    },
    {
        "line": 63,
        "fullcodeline": "redraw_later_clear();"
    },
    {
        "line": 67,
        "fullcodeline": "opt_idx = findoption((char_u *)\"term\");"
    },
    {
        "line": 68,
        "fullcodeline": "free_oldval = (get_option_flags(opt_idx) & P_ALLOCED);"
    },
    {
        "line": 1792,
        "fullcodeline": "value_changed || ft_recursive == 1, curbuf);"
    },
    {
        "line": 1795,
        "fullcodeline": "if (varp != &(curbuf->b_p_ft))"
    },
    {
        "line": 89,
        "fullcodeline": "if (opt_strings_flags(bkc, p_bkc_values, flags, TRUE) != OK)"
    },
    {
        "line": 91,
        "fullcodeline": "if ((((int)*flags & BKC_AUTO) != 0)"
    },
    {
        "line": 105,
        "fullcodeline": "if (STRCMP(*p_bex == '.' ? p_bex + 1 : p_bex,"
    },
    {
        "line": 1796,
        "fullcodeline": "varp = NULL;"
    },
    {
        "line": 90,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 96,
        "fullcodeline": "(void)opt_strings_flags(oldval, p_bkc_values, flags, TRUE);"
    },
    {
        "line": 97,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 107,
        "fullcodeline": "errmsg = N_(\"E589: 'backupext' and 'patchmode' are equal\");"
    },
    {
        "line": 121,
        "fullcodeline": "else if (  varp == &p_isi"
    },
    {
        "line": 93,
        "fullcodeline": "+ (((int)*flags & BKC_NO) != 0) != 1)"
    },
    {
        "line": 106,
        "fullcodeline": "*p_pm == '.' ? p_pm + 1 : p_pm) == 0)"
    },
    {
        "line": 124,
        "fullcodeline": "|| varp == &p_isf)"
    },
    {
        "line": 92,
        "fullcodeline": "+ (((int)*flags & BKC_YES) != 0)"
    },
    {
        "line": 123,
        "fullcodeline": "|| varp == &p_isp"
    },
    {
        "line": 126,
        "fullcodeline": "if (init_chartab() == FAIL)"
    },
    {
        "line": 122,
        "fullcodeline": "|| varp == &(curbuf->b_p_isk)"
    },
    {
        "line": 128,
        "fullcodeline": "did_chartab = TRUE;\t    // need to restore it below"
    },
    {
        "line": 129,
        "fullcodeline": "errmsg = e_invarg;\t    // error in value"
    },
    {
        "line": 134,
        "fullcodeline": "else if (varp == &p_hf)"
    },
    {
        "line": 139,
        "fullcodeline": "vim_setenv((char_u *)\"VIM\", (char_u *)\"\");"
    },
    {
        "line": 140,
        "fullcodeline": "didset_vim = FALSE;"
    },
    {
        "line": 144,
        "fullcodeline": "vim_setenv((char_u *)\"VIMRUNTIME\", (char_u *)\"\");"
    },
    {
        "line": 145,
        "fullcodeline": "didset_vimruntime = FALSE;"
    },
    {
        "line": 182,
        "fullcodeline": "else if (varp == &p_hl)"
    },
    {
        "line": 184,
        "fullcodeline": "if (highlight_changed() == FAIL)"
    },
    {
        "line": 185,
        "fullcodeline": "errmsg = e_invarg;\t// invalid flags"
    },
    {
        "line": 189,
        "fullcodeline": "else if (gvarp == &p_nf)"
    },
    {
        "line": 191,
        "fullcodeline": "if (check_opt_strings(*varp, p_nf_values, TRUE) != OK)"
    },
    {
        "line": 192,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 217,
        "fullcodeline": "else if (varp == &p_sbo)"
    },
    {
        "line": 219,
        "fullcodeline": "if (check_opt_strings(p_sbo, p_scbopt_values, TRUE) != OK)"
    },
    {
        "line": 220,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 224,
        "fullcodeline": "else if (varp == &p_ambw || varp == &p_emoji)"
    },
    {
        "line": 226,
        "fullcodeline": "if (check_opt_strings(p_ambw, p_ambw_values, FALSE) != OK)"
    },
    {
        "line": 227,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 249,
        "fullcodeline": "else if (varp == &p_bg)"
    },
    {
        "line": 228,
        "fullcodeline": "else if (set_chars_option(curwin, &p_fcs) != NULL)"
    },
    {
        "line": 251,
        "fullcodeline": "if (check_opt_strings(p_bg, p_bg_values, FALSE) == OK)"
    },
    {
        "line": 229,
        "fullcodeline": "errmsg = _(\"E835: Conflicts with value of 'fillchars'\");"
    },
    {
        "line": 257,
        "fullcodeline": "init_highlight(FALSE, FALSE);"
    },
    {
        "line": 282,
        "fullcodeline": "else if (varp == &p_wim)"
    },
    {
        "line": 235,
        "fullcodeline": "FOR_ALL_TAB_WINDOWS(tp, wp)"
    },
    {
        "line": 278,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 284,
        "fullcodeline": "if (check_opt_wim() == FAIL)"
    },
    {
        "line": 237,
        "fullcodeline": "if (set_chars_option(wp, &wp->w_p_lcs) != NULL)"
    },
    {
        "line": 285,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 289,
        "fullcodeline": "else if (varp == &p_wop)"
    },
    {
        "line": 239,
        "fullcodeline": "errmsg = _(\"E834: Conflicts with value of 'listchars'\");"
    },
    {
        "line": 291,
        "fullcodeline": "if (check_opt_strings(p_wop, p_wop_values, TRUE) != OK)"
    },
    {
        "line": 292,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 317,
        "fullcodeline": "else if (varp == &p_ei)"
    },
    {
        "line": 319,
        "fullcodeline": "if (check_ei() == FAIL)"
    },
    {
        "line": 320,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 324,
        "fullcodeline": "else if (varp == &p_enc || gvarp == &p_fenc || varp == &p_tenc"
    },
    {
        "line": 325,
        "fullcodeline": "|| gvarp == &p_menc)"
    },
    {
        "line": 327,
        "fullcodeline": "if (gvarp == &p_fenc)"
    },
    {
        "line": 345,
        "fullcodeline": "if (errmsg == NULL)"
    },
    {
        "line": 372,
        "fullcodeline": "if (errmsg == NULL)"
    },
    {
        "line": 348,
        "fullcodeline": "p = enc_canonize(*varp);"
    },
    {
        "line": 486,
        "fullcodeline": "else if (gvarp == &p_ff)"
    },
    {
        "line": 329,
        "fullcodeline": "if (!curbuf->b_p_ma && opt_flags != OPT_GLOBAL)"
    },
    {
        "line": 349,
        "fullcodeline": "if (p != NULL)"
    },
    {
        "line": 354,
        "fullcodeline": "if (varp == &p_enc)"
    },
    {
        "line": 384,
        "fullcodeline": "if (((varp == &p_enc && *p_tenc != NUL) || varp == &p_tenc))"
    },
    {
        "line": 330,
        "fullcodeline": "errmsg = e_cannot_make_changes_modifiable_is_off;"
    },
    {
        "line": 351,
        "fullcodeline": "vim_free(*varp);"
    },
    {
        "line": 352,
        "fullcodeline": "*varp = p;"
    },
    {
        "line": 356,
        "fullcodeline": "errmsg = mb_init();"
    },
    {
        "line": 488,
        "fullcodeline": "if (!curbuf->b_p_ma && !(opt_flags & OPT_GLOBAL))"
    },
    {
        "line": 386,
        "fullcodeline": "if (convert_setup(&input_conv, p_tenc, p_enc) == FAIL"
    },
    {
        "line": 489,
        "fullcodeline": "errmsg = e_cannot_make_changes_modifiable_is_off;"
    },
    {
        "line": 512,
        "fullcodeline": "else if (varp == &p_ffs)"
    },
    {
        "line": 331,
        "fullcodeline": "else if (vim_strchr(*varp, ',') != NULL)"
    },
    {
        "line": 387,
        "fullcodeline": "|| convert_setup(&output_conv, p_enc, p_tenc) == FAIL)"
    },
    {
        "line": 389,
        "fullcodeline": "semsg(_(\"E950: Cannot convert between %s and %s\"),"
    },
    {
        "line": 391,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 334,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 490,
        "fullcodeline": "else if (check_opt_strings(*varp, p_ff_values, FALSE) != OK)"
    },
    {
        "line": 514,
        "fullcodeline": "if (check_opt_strings(p_ffs, p_ff_values, TRUE) != OK)"
    },
    {
        "line": 342,
        "fullcodeline": "ml_setflags(curbuf);"
    },
    {
        "line": 491,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 515,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 601,
        "fullcodeline": "else if (gvarp == &p_mps)"
    },
    {
        "line": 503,
        "fullcodeline": "ml_setflags(curbuf);"
    },
    {
        "line": 495,
        "fullcodeline": "if (get_fileformat(curbuf) == EOL_DOS)"
    },
    {
        "line": 506,
        "fullcodeline": "if (get_fileformat(curbuf) == EOL_MAC || *oldval == 'm')"
    },
    {
        "line": 519,
        "fullcodeline": "if (*p_ffs == NUL)"
    },
    {
        "line": 496,
        "fullcodeline": "curbuf->b_p_tx = TRUE;"
    },
    {
        "line": 507,
        "fullcodeline": "redraw_curbuf_later(NOT_VALID);"
    },
    {
        "line": 520,
        "fullcodeline": "p_ta = FALSE;"
    },
    {
        "line": 645,
        "fullcodeline": "else if (gvarp == &p_com)"
    },
    {
        "line": 498,
        "fullcodeline": "curbuf->b_p_tx = FALSE;"
    },
    {
        "line": 522,
        "fullcodeline": "p_ta = TRUE;"
    },
    {
        "line": 605,
        "fullcodeline": "for (p = *varp; *p != NUL; ++p)"
    },
    {
        "line": 607,
        "fullcodeline": "int x2 = -1;"
    },
    {
        "line": 608,
        "fullcodeline": "int x3 = -1;"
    },
    {
        "line": 631,
        "fullcodeline": "for (p = *varp; *p != NUL; p += 4)"
    },
    {
        "line": 610,
        "fullcodeline": "if (*p != NUL)"
    },
    {
        "line": 612,
        "fullcodeline": "if (*p != NUL)"
    },
    {
        "line": 614,
        "fullcodeline": "if (*p != NUL)"
    },
    {
        "line": 619,
        "fullcodeline": "if (x2 != ':' || x3 == -1 || (*p != NUL && *p != ','))"
    },
    {
        "line": 624,
        "fullcodeline": "if (*p == NUL)"
    },
    {
        "line": 647,
        "fullcodeline": "for (s = *varp; *s; )"
    },
    {
        "line": 671,
        "fullcodeline": "s = skip_to_option_part(s);"
    },
    {
        "line": 676,
        "fullcodeline": "else if (varp == &p_lcs)"
    },
    {
        "line": 611,
        "fullcodeline": "p += mb_ptr2len(p);"
    },
    {
        "line": 616,
        "fullcodeline": "x3 = mb_ptr2char(p);"
    },
    {
        "line": 617,
        "fullcodeline": "p += mb_ptr2len(p);"
    },
    {
        "line": 621,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 633,
        "fullcodeline": "if (p[1] != ':' || p[2] == NUL || (p[3] != NUL && p[3] != ','))"
    },
    {
        "line": 638,
        "fullcodeline": "if (p[3] == NUL)"
    },
    {
        "line": 649,
        "fullcodeline": "while (*s && *s != ':')"
    },
    {
        "line": 659,
        "fullcodeline": "if (*s++ == NUL)"
    },
    {
        "line": 663,
        "fullcodeline": "if (errmsg != NULL)"
    },
    {
        "line": 665,
        "fullcodeline": "while (*s && *s != ',')"
    },
    {
        "line": 678,
        "fullcodeline": "errmsg = set_chars_option(curwin, varp);"
    },
    {
        "line": 635,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 657,
        "fullcodeline": "++s;"
    },
    {
        "line": 660,
        "fullcodeline": "errmsg = N_(\"E524: Missing colon\");"
    },
    {
        "line": 669,
        "fullcodeline": "++s;"
    },
    {
        "line": 679,
        "fullcodeline": "if (errmsg == NULL)"
    },
    {
        "line": 613,
        "fullcodeline": "x2 = *p++;"
    },
    {
        "line": 651,
        "fullcodeline": "if (vim_strchr((char_u *)COM_ALL, *s) == NULL"
    },
    {
        "line": 667,
        "fullcodeline": "if (*s == '\\\\' && s[1] != NUL)"
    },
    {
        "line": 688,
        "fullcodeline": "FOR_ALL_TAB_WINDOWS(tp, wp)"
    },
    {
        "line": 694,
        "fullcodeline": "redraw_all_later(NOT_VALID);"
    },
    {
        "line": 699,
        "fullcodeline": "else if (varp == &curwin->w_p_lcs)"
    },
    {
        "line": 652,
        "fullcodeline": "&& !VIM_ISDIGIT(*s) && *s != '-')"
    },
    {
        "line": 654,
        "fullcodeline": "errmsg = illegal_char(errbuf, *s);"
    },
    {
        "line": 661,
        "fullcodeline": "else if (*s == ',' || *s == NUL)"
    },
    {
        "line": 668,
        "fullcodeline": "++s;"
    },
    {
        "line": 686,
        "fullcodeline": "if (!(opt_flags & OPT_GLOBAL))"
    },
    {
        "line": 690,
        "fullcodeline": "errmsg = set_chars_option(wp, &wp->w_p_lcs);"
    },
    {
        "line": 700,
        "fullcodeline": "errmsg = set_chars_option(curwin, varp);"
    },
    {
        "line": 662,
        "fullcodeline": "errmsg = N_(\"E525: Zero length string\");"
    },
    {
        "line": 687,
        "fullcodeline": "clear_string_option(&curwin->w_p_lcs);"
    },
    {
        "line": 703,
        "fullcodeline": "else if (varp == &p_fcs)"
    },
    {
        "line": 705,
        "fullcodeline": "errmsg = set_chars_option(curwin, varp);"
    },
    {
        "line": 717,
        "fullcodeline": "else if (varp == &p_vfile)"
    },
    {
        "line": 719,
        "fullcodeline": "verbose_stop();"
    },
    {
        "line": 720,
        "fullcodeline": "if (*p_vfile != NUL && verbose_open() == FAIL)"
    },
    {
        "line": 721,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 786,
        "fullcodeline": "else if (istermoption_idx(opt_idx) && full_screen)"
    },
    {
        "line": 816,
        "fullcodeline": "ttest(FALSE);"
    },
    {
        "line": 789,
        "fullcodeline": "if (varp == &T_CCO)"
    },
    {
        "line": 817,
        "fullcodeline": "if (varp == &T_ME)"
    },
    {
        "line": 831,
        "fullcodeline": "if (varp == &T_BE && termcap_active)"
    },
    {
        "line": 791,
        "fullcodeline": "int colors = atoi((char *)T_CCO);"
    },
    {
        "line": 819,
        "fullcodeline": "out_str(T_ME);"
    },
    {
        "line": 820,
        "fullcodeline": "redraw_later(CLEAR);"
    },
    {
        "line": 1012,
        "fullcodeline": "else if (varp == &p_sel)"
    },
    {
        "line": 796,
        "fullcodeline": "if (colors != t_colors)"
    },
    {
        "line": 836,
        "fullcodeline": "if (*T_BE == NUL)"
    },
    {
        "line": 798,
        "fullcodeline": "t_colors = colors;"
    },
    {
        "line": 813,
        "fullcodeline": "init_highlight(TRUE, FALSE);"
    },
    {
        "line": 839,
        "fullcodeline": "out_str(T_BD);"
    },
    {
        "line": 1014,
        "fullcodeline": "if (*p_sel == NUL"
    },
    {
        "line": 799,
        "fullcodeline": "if (t_colors <= 1)"
    },
    {
        "line": 841,
        "fullcodeline": "out_str(T_BE);"
    },
    {
        "line": 1015,
        "fullcodeline": "|| check_opt_strings(p_sel, p_sel_values, FALSE) != OK)"
    },
    {
        "line": 1016,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1020,
        "fullcodeline": "else if (varp == &p_slm)"
    },
    {
        "line": 803,
        "fullcodeline": "T_CCO = empty_option;"
    },
    {
        "line": 1022,
        "fullcodeline": "if (check_opt_strings(p_slm, p_slm_values, TRUE) != OK)"
    },
    {
        "line": 802,
        "fullcodeline": "vim_free(T_CCO);"
    },
    {
        "line": 1023,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1037,
        "fullcodeline": "else if (varp == &p_km)"
    },
    {
        "line": 1039,
        "fullcodeline": "if (check_opt_strings(p_km, p_km_values, TRUE) != OK)"
    },
    {
        "line": 1040,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1049,
        "fullcodeline": "else if (varp == &p_mousem)"
    },
    {
        "line": 1043,
        "fullcodeline": "km_stopsel = (vim_strchr(p_km, 'o') != NULL);"
    },
    {
        "line": 1044,
        "fullcodeline": "km_startsel = (vim_strchr(p_km, 'a') != NULL);"
    },
    {
        "line": 1051,
        "fullcodeline": "if (check_opt_strings(p_mousem, p_mousem_values, FALSE) != OK)"
    },
    {
        "line": 1052,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1062,
        "fullcodeline": "else if (varp == &p_swb)"
    },
    {
        "line": 1064,
        "fullcodeline": "if (opt_strings_flags(p_swb, p_swb_values, &swb_flags, TRUE) != OK)"
    },
    {
        "line": 1065,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1069,
        "fullcodeline": "else if (varp == &p_debug)"
    },
    {
        "line": 1071,
        "fullcodeline": "if (check_opt_strings(p_debug, p_debug_values, TRUE) != OK)"
    },
    {
        "line": 1072,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1076,
        "fullcodeline": "else if (varp == &p_dy)"
    },
    {
        "line": 1078,
        "fullcodeline": "if (opt_strings_flags(p_dy, p_dy_values, &dy_flags, TRUE) != OK)"
    },
    {
        "line": 1079,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1086,
        "fullcodeline": "else if (varp == &p_ead)"
    },
    {
        "line": 1081,
        "fullcodeline": "(void)init_chartab();"
    },
    {
        "line": 1088,
        "fullcodeline": "if (check_opt_strings(p_ead, p_ead_values, FALSE) != OK)"
    },
    {
        "line": 1089,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1138,
        "fullcodeline": "else if (gvarp == &p_bh)"
    },
    {
        "line": 1140,
        "fullcodeline": "if (check_opt_strings(curbuf->b_p_bh, p_bufhidden_values, FALSE) != OK)"
    },
    {
        "line": 1141,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1145,
        "fullcodeline": "else if (gvarp == &p_bt)"
    },
    {
        "line": 1147,
        "fullcodeline": "if (check_opt_strings(curbuf->b_p_bt, p_buftype_values, FALSE) != OK)"
    },
    {
        "line": 1148,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1192,
        "fullcodeline": "else if (gvarp == &p_cpt)"
    },
    {
        "line": 1156,
        "fullcodeline": "curbuf->b_help = (curbuf->b_p_bt[0] == 'h');"
    },
    {
        "line": 1153,
        "fullcodeline": "curwin->w_redr_status = TRUE;"
    },
    {
        "line": 1154,
        "fullcodeline": "redraw_later(VALID);"
    },
    {
        "line": 1194,
        "fullcodeline": "for (s = *varp; *s;)"
    },
    {
        "line": 1235,
        "fullcodeline": "else if (varp == &p_cot)"
    },
    {
        "line": 1196,
        "fullcodeline": "while (*s == ',' || *s == ' ')"
    },
    {
        "line": 1197,
        "fullcodeline": "s++;"
    },
    {
        "line": 1198,
        "fullcodeline": "if (!*s)"
    },
    {
        "line": 1200,
        "fullcodeline": "if (vim_strchr((char_u *)\".wbuksid]tU\", *s) == NULL)"
    },
    {
        "line": 1205,
        "fullcodeline": "if (*++s != NUL && *s != ',' && *s != ' ')"
    },
    {
        "line": 1202,
        "fullcodeline": "errmsg = illegal_char(errbuf, *s);"
    },
    {
        "line": 1237,
        "fullcodeline": "if (check_opt_strings(p_cot, p_cot_values, TRUE) != OK)"
    },
    {
        "line": 1207,
        "fullcodeline": "if (s[-1] == 'k' || s[-1] == 's')"
    },
    {
        "line": 1238,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1301,
        "fullcodeline": "else if (varp == &p_pt)"
    },
    {
        "line": 1240,
        "fullcodeline": "completeopt_was_set();"
    },
    {
        "line": 1210,
        "fullcodeline": "while (*s && *s != ',' && *s != ' ')"
    },
    {
        "line": 1214,
        "fullcodeline": "++s;"
    },
    {
        "line": 1219,
        "fullcodeline": "if (errbuf != NULL)"
    },
    {
        "line": 1305,
        "fullcodeline": "(void)replace_termcodes(p_pt, &p,"
    },
    {
        "line": 1318,
        "fullcodeline": "else if (varp == &p_bs)"
    },
    {
        "line": 1212,
        "fullcodeline": "if (*s == '\\\\' && s[1] != NUL)"
    },
    {
        "line": 1221,
        "fullcodeline": "sprintf((char *)errbuf,"
    },
    {
        "line": 1224,
        "fullcodeline": "errmsg = errbuf;"
    },
    {
        "line": 1307,
        "fullcodeline": "if (p != NULL)"
    },
    {
        "line": 1213,
        "fullcodeline": "++s;"
    },
    {
        "line": 1222,
        "fullcodeline": "_(\"E535: Illegal character after <%c>\"),"
    },
    {
        "line": 1227,
        "fullcodeline": "errmsg = \"\";"
    },
    {
        "line": 1306,
        "fullcodeline": "REPTERM_FROM_PART | REPTERM_DO_LT, NULL);"
    },
    {
        "line": 1311,
        "fullcodeline": "p_pt = p;"
    },
    {
        "line": 1312,
        "fullcodeline": "new_value_alloced = TRUE;"
    },
    {
        "line": 1223,
        "fullcodeline": "*--s);"
    },
    {
        "line": 1328,
        "fullcodeline": "else if (varp == &p_bo)"
    },
    {
        "line": 1310,
        "fullcodeline": "free_string_option(p_pt);"
    },
    {
        "line": 1322,
        "fullcodeline": "if (*p_bs > '3' || p_bs[1] != NUL)"
    },
    {
        "line": 1323,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1325,
        "fullcodeline": "else if (check_opt_strings(p_bs, p_bs_values, TRUE) != OK)"
    },
    {
        "line": 1330,
        "fullcodeline": "if (opt_strings_flags(p_bo, p_bo_values, &bo_flags, TRUE) != OK)"
    },
    {
        "line": 1326,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1331,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1335,
        "fullcodeline": "else if (gvarp == &p_tc)"
    },
    {
        "line": 1339,
        "fullcodeline": "if (opt_flags & OPT_LOCAL)"
    },
    {
        "line": 1350,
        "fullcodeline": "if ((opt_flags & OPT_LOCAL) && *p == NUL)"
    },
    {
        "line": 1352,
        "fullcodeline": "*flags = 0;"
    },
    {
        "line": 1359,
        "fullcodeline": "else if (varp == &p_cmp)"
    },
    {
        "line": 1346,
        "fullcodeline": "p = p_tc;"
    },
    {
        "line": 1347,
        "fullcodeline": "flags = &tc_flags;"
    },
    {
        "line": 1353,
        "fullcodeline": "else if (*p == NUL"
    },
    {
        "line": 1361,
        "fullcodeline": "if (opt_strings_flags(p_cmp, p_cmp_values, &cmp_flags, TRUE) != OK)"
    },
    {
        "line": 1354,
        "fullcodeline": "|| opt_strings_flags(p, p_tc_values, flags, FALSE) != OK)"
    },
    {
        "line": 1355,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1362,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1434,
        "fullcodeline": "else if (gvarp == &p_ve)"
    },
    {
        "line": 1436,
        "fullcodeline": "char_u\t\t*ve = p_ve;"
    },
    {
        "line": 1437,
        "fullcodeline": "unsigned int\t*flags = &ve_flags;"
    },
    {
        "line": 1439,
        "fullcodeline": "if (opt_flags & OPT_LOCAL)"
    },
    {
        "line": 1445,
        "fullcodeline": "if ((opt_flags & OPT_LOCAL) && *ve == NUL)"
    },
    {
        "line": 1447,
        "fullcodeline": "*flags = 0;"
    },
    {
        "line": 1505,
        "fullcodeline": "else if (gvarp == &p_ft)"
    },
    {
        "line": 1450,
        "fullcodeline": "if (opt_strings_flags(ve, p_ve_values, flags, TRUE) != OK)"
    },
    {
        "line": 1507,
        "fullcodeline": "if (!valid_filetype(*varp))"
    },
    {
        "line": 1683,
        "fullcodeline": "p = NULL;"
    },
    {
        "line": 1451,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1508,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1684,
        "fullcodeline": "if (varp == &p_ww) // 'whichwrap'"
    },
    {
        "line": 1686,
        "fullcodeline": "if (varp == &p_shm) // 'shortmess'"
    },
    {
        "line": 1704,
        "fullcodeline": "if (p != NULL)"
    },
    {
        "line": 1511,
        "fullcodeline": "value_changed = STRCMP(oldval, *varp) != 0;"
    },
    {
        "line": 1515,
        "fullcodeline": "*value_checked = TRUE;"
    },
    {
        "line": 1685,
        "fullcodeline": "p = (char_u *)WW_ALL;"
    },
    {
        "line": 1687,
        "fullcodeline": "p = (char_u *)SHM_ALL;"
    },
    {
        "line": 1452,
        "fullcodeline": "else if (STRCMP(p_ve, oldval) != 0)"
    },
    {
        "line": 1706,
        "fullcodeline": "for (s = *varp; *s; ++s)"
    },
    {
        "line": 1456,
        "fullcodeline": "validate_virtcol();"
    },
    {
        "line": 1688,
        "fullcodeline": "else if (varp == &(p_cpo)) // 'cpoptions'"
    },
    {
        "line": 1707,
        "fullcodeline": "if (vim_strchr(p, *s) == NULL)"
    },
    {
        "line": 1689,
        "fullcodeline": "p = (char_u *)CPO_ALL;"
    },
    {
        "line": 1709,
        "fullcodeline": "errmsg = illegal_char(errbuf, *s);"
    },
    {
        "line": 1690,
        "fullcodeline": "else if (varp == &(curbuf->b_p_fo)) // 'formatoptions'"
    },
    {
        "line": 1691,
        "fullcodeline": "p = (char_u *)FO_ALL;"
    },
    {
        "line": 1696,
        "fullcodeline": "else if (varp == &p_mouse) // 'mouse'"
    },
    {
        "line": 1698,
        "fullcodeline": "p = (char_u *)MOUSE_ALL;"
    }
]