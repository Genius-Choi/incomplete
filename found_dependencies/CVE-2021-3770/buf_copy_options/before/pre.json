[
    {
        "line": 3,
        "fullcodeline": "int\t\tshould_copy = TRUE;"
    },
    {
        "line": 4,
        "fullcodeline": "char_u\t*save_p_isk = NULL;\t    // init for GCC"
    },
    {
        "line": 6,
        "fullcodeline": "int\t\tdid_isk = FALSE;"
    },
    {
        "line": 330,
        "fullcodeline": "check_buf_options(buf);\t    // make sure we don't have NULLs"
    },
    {
        "line": 12,
        "fullcodeline": "if (p_cpo != NULL)"
    },
    {
        "line": 332,
        "fullcodeline": "(void)buf_init_chartab(buf, FALSE);"
    },
    {
        "line": 26,
        "fullcodeline": "if ((vim_strchr(p_cpo, CPO_BUFOPTGLOB) == NULL || !(flags & BCO_ENTER))"
    },
    {
        "line": 32,
        "fullcodeline": "if (should_copy || (flags & BCO_ALWAYS))"
    },
    {
        "line": 27,
        "fullcodeline": "&& (buf->b_p_initialized"
    },
    {
        "line": 30,
        "fullcodeline": "should_copy = FALSE;"
    },
    {
        "line": 41,
        "fullcodeline": "dont_do_help = ((flags & BCO_NOHELP) && buf->b_help)"
    },
    {
        "line": 77,
        "fullcodeline": "buf->b_p_ai = p_ai;"
    },
    {
        "line": 78,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_AI);"
    },
    {
        "line": 79,
        "fullcodeline": "buf->b_p_ai_nopaste = p_ai_nopaste;"
    },
    {
        "line": 80,
        "fullcodeline": "buf->b_p_sw = p_sw;"
    },
    {
        "line": 81,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_SW);"
    },
    {
        "line": 82,
        "fullcodeline": "buf->b_p_tw = p_tw;"
    },
    {
        "line": 83,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_TW);"
    },
    {
        "line": 84,
        "fullcodeline": "buf->b_p_tw_nopaste = p_tw_nopaste;"
    },
    {
        "line": 85,
        "fullcodeline": "buf->b_p_tw_nobin = p_tw_nobin;"
    },
    {
        "line": 86,
        "fullcodeline": "buf->b_p_wm = p_wm;"
    },
    {
        "line": 87,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_WM);"
    },
    {
        "line": 88,
        "fullcodeline": "buf->b_p_wm_nopaste = p_wm_nopaste;"
    },
    {
        "line": 89,
        "fullcodeline": "buf->b_p_wm_nobin = p_wm_nobin;"
    },
    {
        "line": 90,
        "fullcodeline": "buf->b_p_bin = p_bin;"
    },
    {
        "line": 91,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_BIN);"
    },
    {
        "line": 92,
        "fullcodeline": "buf->b_p_bomb = p_bomb;"
    },
    {
        "line": 93,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_BOMB);"
    },
    {
        "line": 94,
        "fullcodeline": "buf->b_p_fixeol = p_fixeol;"
    },
    {
        "line": 95,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_FIXEOL);"
    },
    {
        "line": 96,
        "fullcodeline": "buf->b_p_et = p_et;"
    },
    {
        "line": 97,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_ET);"
    },
    {
        "line": 98,
        "fullcodeline": "buf->b_p_et_nobin = p_et_nobin;"
    },
    {
        "line": 99,
        "fullcodeline": "buf->b_p_et_nopaste = p_et_nopaste;"
    },
    {
        "line": 100,
        "fullcodeline": "buf->b_p_ml = p_ml;"
    },
    {
        "line": 101,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_ML);"
    },
    {
        "line": 102,
        "fullcodeline": "buf->b_p_ml_nobin = p_ml_nobin;"
    },
    {
        "line": 103,
        "fullcodeline": "buf->b_p_inf = p_inf;"
    },
    {
        "line": 104,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_INF);"
    },
    {
        "line": 112,
        "fullcodeline": "buf->b_p_cpt = vim_strsave(p_cpt);"
    },
    {
        "line": 113,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_CPT);"
    },
    {
        "line": 128,
        "fullcodeline": "buf->b_p_sts = p_sts;"
    },
    {
        "line": 129,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_STS);"
    },
    {
        "line": 130,
        "fullcodeline": "buf->b_p_sts_nopaste = p_sts_nopaste;"
    },
    {
        "line": 141,
        "fullcodeline": "buf->b_p_sn = p_sn;"
    },
    {
        "line": 142,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_SN);"
    },
    {
        "line": 143,
        "fullcodeline": "buf->b_p_com = vim_strsave(p_com);"
    },
    {
        "line": 144,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_COM);"
    },
    {
        "line": 149,
        "fullcodeline": "buf->b_p_fo = vim_strsave(p_fo);"
    },
    {
        "line": 150,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_FO);"
    },
    {
        "line": 151,
        "fullcodeline": "buf->b_p_flp = vim_strsave(p_flp);"
    },
    {
        "line": 152,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_FLP);"
    },
    {
        "line": 155,
        "fullcodeline": "buf->b_p_nf = vim_strsave(p_nf);"
    },
    {
        "line": 156,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_NF);"
    },
    {
        "line": 157,
        "fullcodeline": "buf->b_p_mps = vim_strsave(p_mps);"
    },
    {
        "line": 158,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_MPS);"
    },
    {
        "line": 163,
        "fullcodeline": "buf->b_p_ci = p_ci;"
    },
    {
        "line": 164,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_CI);"
    },
    {
        "line": 174,
        "fullcodeline": "buf->b_p_ft = empty_option;"
    },
    {
        "line": 175,
        "fullcodeline": "buf->b_p_pi = p_pi;"
    },
    {
        "line": 176,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_PI);"
    },
    {
        "line": 209,
        "fullcodeline": "buf->b_p_fp = empty_option;"
    },
    {
        "line": 233,
        "fullcodeline": "buf->b_p_iminsert = p_iminsert;"
    },
    {
        "line": 234,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_IMI);"
    },
    {
        "line": 235,
        "fullcodeline": "buf->b_p_imsearch = p_imsearch;"
    },
    {
        "line": 236,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_IMS);"
    },
    {
        "line": 240,
        "fullcodeline": "buf->b_p_ar = -1;"
    },
    {
        "line": 241,
        "fullcodeline": "buf->b_p_ul = NO_LOCAL_UNDOLEVEL;"
    },
    {
        "line": 242,
        "fullcodeline": "buf->b_p_bkc = empty_option;"
    },
    {
        "line": 243,
        "fullcodeline": "buf->b_bkc_flags = 0;"
    },
    {
        "line": 249,
        "fullcodeline": "buf->b_p_ep = empty_option;"
    },
    {
        "line": 250,
        "fullcodeline": "buf->b_p_kp = empty_option;"
    },
    {
        "line": 251,
        "fullcodeline": "buf->b_p_path = empty_option;"
    },
    {
        "line": 252,
        "fullcodeline": "buf->b_p_tags = empty_option;"
    },
    {
        "line": 253,
        "fullcodeline": "buf->b_p_tc = empty_option;"
    },
    {
        "line": 254,
        "fullcodeline": "buf->b_tc_flags = 0;"
    },
    {
        "line": 263,
        "fullcodeline": "buf->b_p_dict = empty_option;"
    },
    {
        "line": 264,
        "fullcodeline": "buf->b_p_tsr = empty_option;"
    },
    {
        "line": 282,
        "fullcodeline": "buf->b_p_menc = empty_option;"
    },
    {
        "line": 327,
        "fullcodeline": "buf->b_p_initialized = TRUE;"
    },
    {
        "line": 28,
        "fullcodeline": "|| (!(flags & BCO_ENTER)"
    },
    {
        "line": 52,
        "fullcodeline": "if (!buf->b_p_initialized)"
    },
    {
        "line": 105,
        "fullcodeline": "if (cmdmod.cmod_flags & CMOD_NOSWAPFILE)"
    },
    {
        "line": 29,
        "fullcodeline": "&& vim_strchr(p_cpo, CPO_BUFOPT) != NULL)))"
    },
    {
        "line": 45,
        "fullcodeline": "save_p_isk = buf->b_p_isk;"
    },
    {
        "line": 46,
        "fullcodeline": "buf->b_p_isk = NULL;"
    },
    {
        "line": 54,
        "fullcodeline": "free_buf_options(buf, TRUE);"
    },
    {
        "line": 55,
        "fullcodeline": "buf->b_p_ro = FALSE;\t\t// don't copy readonly"
    },
    {
        "line": 56,
        "fullcodeline": "buf->b_p_tx = p_tx;"
    },
    {
        "line": 57,
        "fullcodeline": "buf->b_p_fenc = vim_strsave(p_fenc);"
    },
    {
        "line": 71,
        "fullcodeline": "buf->b_p_bh = empty_option;"
    },
    {
        "line": 72,
        "fullcodeline": "buf->b_p_bt = empty_option;"
    },
    {
        "line": 106,
        "fullcodeline": "buf->b_p_swf = FALSE;"
    },
    {
        "line": 292,
        "fullcodeline": "buf->b_p_isk = save_p_isk;"
    },
    {
        "line": 69,
        "fullcodeline": "if (buf->b_p_ff != NULL)"
    },
    {
        "line": 75,
        "fullcodeline": "free_buf_options(buf, FALSE);"
    },
    {
        "line": 109,
        "fullcodeline": "buf->b_p_swf = p_swf;"
    },
    {
        "line": 110,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_INF);"
    },
    {
        "line": 302,
        "fullcodeline": "buf->b_p_isk = vim_strsave(p_isk);"
    },
    {
        "line": 303,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_ISK);"
    },
    {
        "line": 304,
        "fullcodeline": "did_isk = TRUE;"
    },
    {
        "line": 305,
        "fullcodeline": "buf->b_p_ts = p_ts;"
    },
    {
        "line": 314,
        "fullcodeline": "buf->b_help = FALSE;"
    },
    {
        "line": 317,
        "fullcodeline": "buf->b_p_ma = p_ma;"
    },
    {
        "line": 318,
        "fullcodeline": "COPY_OPT_SCTX(buf, BV_MA);"
    },
    {
        "line": 61,
        "fullcodeline": "buf->b_p_ff = vim_strsave((char_u *)FF_MAC); break;"
    },
    {
        "line": 63,
        "fullcodeline": "buf->b_p_ff = vim_strsave((char_u *)FF_DOS); break;"
    },
    {
        "line": 65,
        "fullcodeline": "buf->b_p_ff = vim_strsave((char_u *)FF_UNIX); break;"
    },
    {
        "line": 67,
        "fullcodeline": "buf->b_p_ff = vim_strsave(p_ff);"
    },
    {
        "line": 70,
        "fullcodeline": "buf->b_start_ffc = *buf->b_p_ff;"
    },
    {
        "line": 315,
        "fullcodeline": "if (buf->b_p_bt[0] == 'h')"
    },
    {
        "line": 316,
        "fullcodeline": "clear_string_option(&buf->b_p_bt);"
    }
]