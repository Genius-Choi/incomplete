[
    {
        "line": 6,
        "fullcodeline": "wStream* licenseStream = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "BOOL ret = FALSE;"
    },
    {
        "line": 8,
        "fullcodeline": "BYTE computedMac[16];"
    },
    {
        "line": 11,
        "fullcodeline": "DEBUG_LICENSE(\"Receiving Server New/Upgrade License Packet\");"
    },
    {
        "line": 13,
        "fullcodeline": "calBlob = license_new_binary_blob(BB_DATA_BLOB);"
    },
    {
        "line": 37,
        "fullcodeline": "licenseStream = Stream_New(calBlob->data, calBlob->length);"
    },
    {
        "line": 44,
        "fullcodeline": "Stream_Read_UINT16(licenseStream, os_minor);"
    },
    {
        "line": 45,
        "fullcodeline": "Stream_Read_UINT16(licenseStream, os_major);"
    },
    {
        "line": 48,
        "fullcodeline": "Stream_Read_UINT32(licenseStream, cbScope);"
    },
    {
        "line": 55,
        "fullcodeline": "Stream_Seek(licenseStream, cbScope);"
    },
    {
        "line": 60,
        "fullcodeline": "Stream_Read_UINT32(licenseStream, cbCompanyName);"
    },
    {
        "line": 67,
        "fullcodeline": "Stream_Seek(licenseStream, cbCompanyName);"
    },
    {
        "line": 72,
        "fullcodeline": "Stream_Read_UINT32(licenseStream, cbProductId);"
    },
    {
        "line": 79,
        "fullcodeline": "Stream_Seek(licenseStream, cbProductId);"
    },
    {
        "line": 84,
        "fullcodeline": "Stream_Read_UINT32(licenseStream, cbLicenseInfo);"
    },
    {
        "line": 88,
        "fullcodeline": "license->state = LICENSE_STATE_COMPLETED;"
    },
    {
        "line": 90,
        "fullcodeline": "ret = TRUE;"
    },
    {
        "line": 96,
        "fullcodeline": "Stream_Free(licenseStream, FALSE);"
    },
    {
        "line": 98,
        "fullcodeline": "license_free_binary_blob(calBlob);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!calBlob)"
    },
    {
        "line": 18,
        "fullcodeline": "if (!license_read_encrypted_blob(license, s, calBlob))"
    },
    {
        "line": 22,
        "fullcodeline": "if (Stream_GetRemainingLength(s) < 16)"
    },
    {
        "line": 25,
        "fullcodeline": "if (!security_mac_data(license->MacSaltKey, calBlob->data, calBlob->length, computedMac))"
    },
    {
        "line": 28,
        "fullcodeline": "if (memcmp(computedMac, Stream_Pointer(s), sizeof(computedMac)) != 0)"
    },
    {
        "line": 34,
        "fullcodeline": "if (!Stream_SafeSeek(s, 16))"
    },
    {
        "line": 38,
        "fullcodeline": "if (!licenseStream)"
    },
    {
        "line": 41,
        "fullcodeline": "if (Stream_GetRemainingLength(licenseStream) < 8)"
    },
    {
        "line": 49,
        "fullcodeline": "if (Stream_GetRemainingLength(licenseStream) < cbScope)"
    },
    {
        "line": 58,
        "fullcodeline": "if (Stream_GetRemainingLength(licenseStream) < 4)"
    },
    {
        "line": 61,
        "fullcodeline": "if (Stream_GetRemainingLength(licenseStream) < cbCompanyName)"
    },
    {
        "line": 70,
        "fullcodeline": "if (Stream_GetRemainingLength(licenseStream) < 4)"
    },
    {
        "line": 73,
        "fullcodeline": "if (Stream_GetRemainingLength(licenseStream) < cbProductId)"
    },
    {
        "line": 82,
        "fullcodeline": "if (Stream_GetRemainingLength(licenseStream) < 4)"
    },
    {
        "line": 85,
        "fullcodeline": "if (Stream_GetRemainingLength(licenseStream) < cbLicenseInfo)"
    },
    {
        "line": 30,
        "fullcodeline": "WLog_ERR(TAG, \"new or upgrade license MAC mismatch\");"
    },
    {
        "line": 92,
        "fullcodeline": "ret = saveCal(license->rdp->settings, Stream_Pointer(licenseStream), cbLicenseInfo,"
    }
]