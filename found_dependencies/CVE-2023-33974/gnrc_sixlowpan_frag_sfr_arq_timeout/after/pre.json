[
    {
        "line": 3,
        "fullcodeline": "uint32_t now = xtimer_now_usec() / US_PER_MS;"
    },
    {
        "line": 4,
        "fullcodeline": "_frag_desc_t *frag_desc = (_frag_desc_t *)fbuf->sfr.window.next;"
    },
    {
        "line": 5,
        "fullcodeline": "uint32_t next_arq_offset = fbuf->sfr.arq_timeout;"
    },
    {
        "line": 6,
        "fullcodeline": "bool reschedule_arq_timeout = false;"
    },
    {
        "line": 7,
        "fullcodeline": "int error_no = ETIMEDOUT;   /* assume time out for fbuf->pkt */"
    },
    {
        "line": 9,
        "fullcodeline": "DEBUG(\"6lo sfr: ARQ timeout for datagram %u\\n\", fbuf->tag);"
    },
    {
        "line": 22,
        "fullcodeline": "_frag_desc_t * const head = frag_desc;"
    },
    {
        "line": 122,
        "fullcodeline": "_send_abort_frag(fbuf->pkt, fbuf, false, 0);"
    },
    {
        "line": 10,
        "fullcodeline": "if (IS_ACTIVE(CONFIG_GNRC_SIXLOWPAN_SFR_MOCK_ARQ_TIMER)) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_SFR_CONGURE) && frag_desc) {"
    },
    {
        "line": 115,
        "fullcodeline": "assert(fbuf->sfr.frags_sent == clist_count(&fbuf->sfr.window));"
    },
    {
        "line": 12,
        "fullcodeline": "now -= (fbuf->sfr.arq_timeout * US_PER_MS) + 1;"
    },
    {
        "line": 16,
        "fullcodeline": "gnrc_sixlowpan_frag_sfr_congure_snd_report_frags_timeout(fbuf);"
    },
    {
        "line": 17,
        "fullcodeline": "_shrink_window(fbuf);   /* potentially shrink window */"
    },
    {
        "line": 19,
        "fullcodeline": "frag_desc = (_frag_desc_t *)fbuf->sfr.window.next;"
    },
    {
        "line": 108,
        "fullcodeline": "clist_foreach(&fbuf->sfr.window, _report_non_ack_req_window_sent, fbuf);"
    },
    {
        "line": 104,
        "fullcodeline": "} while (frag_desc != head);"
    },
    {
        "line": 113,
        "fullcodeline": "error_no = GNRC_NETERR_SUCCESS;"
    },
    {
        "line": 27,
        "fullcodeline": "frag_desc = (_frag_desc_t *)frag_desc->super.super.next;"
    },
    {
        "line": 28,
        "fullcodeline": "diff = now - frag_desc->super.send_time;"
    },
    {
        "line": 29,
        "fullcodeline": "if (diff < fbuf->sfr.arq_timeout) {"
    },
    {
        "line": 32,
        "fullcodeline": "uint32_t offset = fbuf->sfr.arq_timeout - diff;"
    },
    {
        "line": 34,
        "fullcodeline": "DEBUG(\"6lo sfr: wait for fragment %u in next reschedule\\n\","
    },
    {
        "line": 45,
        "fullcodeline": "reschedule_arq_timeout = true;"
    },
    {
        "line": 35,
        "fullcodeline": "_frag_seq(frag_desc));"
    },
    {
        "line": 36,
        "fullcodeline": "if (offset < next_arq_offset) {"
    },
    {
        "line": 38,
        "fullcodeline": "next_arq_offset = offset;"
    },
    {
        "line": 39,
        "fullcodeline": "DEBUG(\"         (next ARQ timeout in %lu)\\n\","
    },
    {
        "line": 47,
        "fullcodeline": "else if (_frag_ack_req(frag_desc)) {"
    },
    {
        "line": 40,
        "fullcodeline": "(long unsigned)next_arq_offset);"
    },
    {
        "line": 50,
        "fullcodeline": "if ((frag_desc->super.resends++) < CONFIG_GNRC_SIXLOWPAN_SFR_FRAG_RETRIES) {"
    },
    {
        "line": 101,
        "fullcodeline": "DEBUG(\"6lo sfr: nothing to do for fragment %u\\n\","
    },
    {
        "line": 52,
        "fullcodeline": "DEBUG(\"6lo sfr: %u retries left for fragment (tag: %u, \""
    },
    {
        "line": 78,
        "fullcodeline": "reschedule_arq_timeout = true;"
    },
    {
        "line": 102,
        "fullcodeline": "_frag_seq(frag_desc));"
    },
    {
        "line": 54,
        "fullcodeline": "CONFIG_GNRC_SIXLOWPAN_SFR_FRAG_RETRIES -"
    },
    {
        "line": 56,
        "fullcodeline": "_frag_ack_req(frag_desc), _frag_seq(frag_desc),"
    },
    {
        "line": 57,
        "fullcodeline": "_frag_size(frag_desc), frag_desc->offset);"
    },
    {
        "line": 58,
        "fullcodeline": "if (_resend_frag(&frag_desc->super.super, fbuf) != 0) {"
    },
    {
        "line": 82,
        "fullcodeline": "DEBUG(\"6lo sfr: no retries left for fragment \""
    },
    {
        "line": 91,
        "fullcodeline": "_retry_datagram(fbuf);"
    },
    {
        "line": 55,
        "fullcodeline": "(frag_desc->super.resends - 1), (uint8_t)fbuf->tag,"
    },
    {
        "line": 61,
        "fullcodeline": "error_no = ENOMEM;"
    },
    {
        "line": 85,
        "fullcodeline": "(uint8_t)fbuf->tag, _frag_ack_req(frag_desc),"
    },
    {
        "line": 86,
        "fullcodeline": "_frag_seq(frag_desc), _frag_size(frag_desc),"
    },
    {
        "line": 65,
        "fullcodeline": "if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_SFR_CONGURE)) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG_SFR_STATS)) {"
    },
    {
        "line": 68,
        "fullcodeline": "gnrc_sixlowpan_frag_sfr_congure_snd_report_frag_sent(fbuf);"
    },
    {
        "line": 73,
        "fullcodeline": "_stats.fragment_resends.by_timeout++;"
    }
]