[
    {
        "line": 9,
        "fullcodeline": "const uint8_t *packet_type = buffer->data;"
    },
    {
        "line": 4,
        "fullcodeline": "if (!fastd_peer_may_connect(peer)) {"
    },
    {
        "line": 5,
        "fullcodeline": "fastd_buffer_free(buffer);"
    },
    {
        "line": 23,
        "fullcodeline": "conf.protocol->handle_recv(peer, buffer);"
    },
    {
        "line": 27,
        "fullcodeline": "fastd_handshake_handle(sock, local_addr, remote_addr, peer, buffer);"
    },
    {
        "line": 31,
        "fullcodeline": "fastd_buffer_free(buffer);"
    },
    {
        "line": 32,
        "fullcodeline": "pr_debug(\"received packet with invalid type from %P[%I]\", peer, remote_addr);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!fastd_peer_is_established(peer) || !fastd_peer_address_equal(&peer->local_address, local_addr)) {"
    },
    {
        "line": 14,
        "fullcodeline": "fastd_buffer_free(buffer);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!backoff_unknown(remote_addr)) {"
    },
    {
        "line": 17,
        "fullcodeline": "pr_debug(\"unexpectedly received payload data from %P[%I]\", peer, remote_addr);"
    },
    {
        "line": 18,
        "fullcodeline": "conf.protocol->handshake_init(sock, local_addr, remote_addr, NULL);"
    }
]