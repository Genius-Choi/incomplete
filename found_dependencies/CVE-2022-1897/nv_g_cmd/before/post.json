[
    {
        "line": 3,
        "fullcodeline": "oparg_T\t*oap = cap->oap;"
    },
    {
        "line": 30,
        "fullcodeline": "cap->arg = TRUE;"
    },
    {
        "line": 31,
        "fullcodeline": "nv_Replace(cap);"
    },
    {
        "line": 35,
        "fullcodeline": "nv_vreplace(cap);"
    },
    {
        "line": 39,
        "fullcodeline": "do_cmdline_cmd((char_u *)\"%s//~/&\");"
    },
    {
        "line": 45,
        "fullcodeline": "nv_gv_cmd(cap);"
    },
    {
        "line": 51,
        "fullcodeline": "VIsual_reselect = FALSE;"
    },
    {
        "line": 58,
        "fullcodeline": "cap->nchar = Ctrl_H;"
    },
    {
        "line": 63,
        "fullcodeline": "cap->cmdchar = cap->nchar + ('v' - 'h');"
    },
    {
        "line": 64,
        "fullcodeline": "cap->arg = TRUE;"
    },
    {
        "line": 65,
        "fullcodeline": "nv_visual(cap);"
    },
    {
        "line": 109,
        "fullcodeline": "nv_join(cap);"
    },
    {
        "line": 119,
        "fullcodeline": "nv_g_home_m_cmd(cap);"
    },
    {
        "line": 138,
        "fullcodeline": "nv_g_underscore_cmd(cap);"
    },
    {
        "line": 145,
        "fullcodeline": "nv_g_dollar_cmd(cap);"
    },
    {
        "line": 156,
        "fullcodeline": "nv_ident(cap);"
    },
    {
        "line": 162,
        "fullcodeline": "oap->motion_type = MCHAR;"
    },
    {
        "line": 163,
        "fullcodeline": "curwin->w_set_curswant = TRUE;"
    },
    {
        "line": 164,
        "fullcodeline": "oap->inclusive = TRUE;"
    },
    {
        "line": 171,
        "fullcodeline": "cursor_pos_info(NULL);"
    },
    {
        "line": 176,
        "fullcodeline": "nv_gi_cmd(cap);"
    },
    {
        "line": 181,
        "fullcodeline": "beginline(0);"
    },
    {
        "line": 197,
        "fullcodeline": "cap->arg = TRUE;"
    },
    {
        "line": 200,
        "fullcodeline": "nv_gomark(cap);"
    },
    {
        "line": 205,
        "fullcodeline": "do_sleep(cap->count1 * 1000L, FALSE);"
    },
    {
        "line": 211,
        "fullcodeline": "do_ascii(NULL);"
    },
    {
        "line": 226,
        "fullcodeline": "show_sb_text();"
    },
    {
        "line": 232,
        "fullcodeline": "cap->arg = FALSE;"
    },
    {
        "line": 233,
        "fullcodeline": "nv_goto(cap);"
    },
    {
        "line": 253,
        "fullcodeline": "nv_operator(cap);"
    },
    {
        "line": 261,
        "fullcodeline": "nv_gd(oap, cap->nchar, (int)cap->count0);"
    },
    {
        "line": 281,
        "fullcodeline": "mod_mask = MOD_MASK_CTRL;"
    },
    {
        "line": 282,
        "fullcodeline": "(void)do_mouse(oap, cap->nchar, BACKWARD, cap->count1, 0);"
    },
    {
        "line": 291,
        "fullcodeline": "nv_put(cap);"
    },
    {
        "line": 315,
        "fullcodeline": "nv_pcmark(cap);"
    },
    {
        "line": 319,
        "fullcodeline": "cap->count1 = -cap->count1;"
    },
    {
        "line": 320,
        "fullcodeline": "nv_pcmark(cap);"
    },
    {
        "line": 345,
        "fullcodeline": "clearopbeep(oap);"
    },
    {
        "line": 73,
        "fullcodeline": "if (!current_search(cap->count1, cap->nchar == 'n'))"
    },
    {
        "line": 89,
        "fullcodeline": "if (i == FAIL)"
    },
    {
        "line": 103,
        "fullcodeline": "if (i == FAIL)"
    },
    {
        "line": 124,
        "fullcodeline": "oap->motion_type = MCHAR;"
    },
    {
        "line": 125,
        "fullcodeline": "oap->inclusive = FALSE;"
    },
    {
        "line": 126,
        "fullcodeline": "i = linetabsize(ml_get_curline());"
    },
    {
        "line": 131,
        "fullcodeline": "curwin->w_set_curswant = TRUE;"
    },
    {
        "line": 165,
        "fullcodeline": "if (bckend_word(cap->count1, cap->nchar == 'E', FALSE) == FAIL)"
    },
    {
        "line": 182,
        "fullcodeline": "if (!checkclearopq(oap))"
    },
    {
        "line": 218,
        "fullcodeline": "if (cap->count0 == 8)"
    },
    {
        "line": 303,
        "fullcodeline": "if (text_locked())"
    },
    {
        "line": 310,
        "fullcodeline": "if (!checkclearopq(oap))"
    },
    {
        "line": 324,
        "fullcodeline": "if (!checkclearop(oap))"
    },
    {
        "line": 328,
        "fullcodeline": "if (!checkclearop(oap))"
    },
    {
        "line": 333,
        "fullcodeline": "if (!checkclearop(oap) && goto_tabpage_lastused() == FAIL)"
    },
    {
        "line": 339,
        "fullcodeline": "if (!checkclearopq(oap))"
    },
    {
        "line": 19,
        "fullcodeline": "cap->arg = TRUE;"
    },
    {
        "line": 20,
        "fullcodeline": "cap->cmdchar = cap->nchar;"
    },
    {
        "line": 21,
        "fullcodeline": "cap->nchar = NUL;"
    },
    {
        "line": 22,
        "fullcodeline": "nv_addsub(cap);"
    },
    {
        "line": 74,
        "fullcodeline": "clearopbeep(oap);"
    },
    {
        "line": 84,
        "fullcodeline": "oap->motion_type = MLINE;"
    },
    {
        "line": 85,
        "fullcodeline": "i = cursor_down(cap->count1, oap->op_type == OP_NOP);"
    },
    {
        "line": 90,
        "fullcodeline": "clearopbeep(oap);"
    },
    {
        "line": 98,
        "fullcodeline": "oap->motion_type = MLINE;"
    },
    {
        "line": 99,
        "fullcodeline": "i = cursor_up(cap->count1, oap->op_type == OP_NOP);"
    },
    {
        "line": 104,
        "fullcodeline": "clearopbeep(oap);"
    },
    {
        "line": 127,
        "fullcodeline": "if (cap->count0 > 0 && cap->count0 <= 100)"
    },
    {
        "line": 166,
        "fullcodeline": "clearopbeep(oap);"
    },
    {
        "line": 183,
        "fullcodeline": "invoke_edit(cap, FALSE, 'g', FALSE);"
    },
    {
        "line": 219,
        "fullcodeline": "utf_find_illegal();"
    },
    {
        "line": 305,
        "fullcodeline": "clearopbeep(cap->oap);"
    },
    {
        "line": 306,
        "fullcodeline": "text_locked_msg();"
    },
    {
        "line": 311,
        "fullcodeline": "do_exmode(TRUE);"
    },
    {
        "line": 325,
        "fullcodeline": "goto_tabpage((int)cap->count0);"
    },
    {
        "line": 329,
        "fullcodeline": "goto_tabpage(-(int)cap->count1);"
    },
    {
        "line": 334,
        "fullcodeline": "clearopbeep(oap);"
    },
    {
        "line": 340,
        "fullcodeline": "undo_time(cap->nchar == '-' ? -cap->count1 : cap->count1,"
    },
    {
        "line": 25,
        "fullcodeline": "clearopbeep(oap);"
    },
    {
        "line": 88,
        "fullcodeline": "i = nv_screengo(oap, FORWARD, cap->count1);"
    },
    {
        "line": 102,
        "fullcodeline": "i = nv_screengo(oap, BACKWARD, cap->count1);"
    },
    {
        "line": 128,
        "fullcodeline": "coladvance((colnr_T)(i * cap->count0 / 100));"
    },
    {
        "line": 221,
        "fullcodeline": "show_utf8();"
    },
    {
        "line": 130,
        "fullcodeline": "coladvance((colnr_T)(i / 2));"
    }
]