[
    {
        "line": 3,
        "fullcodeline": "oparg_T\t*oap = cap->oap;"
    },
    {
        "line": 30,
        "fullcodeline": "cap->arg = TRUE;"
    },
    {
        "line": 51,
        "fullcodeline": "VIsual_reselect = FALSE;"
    },
    {
        "line": 58,
        "fullcodeline": "cap->nchar = Ctrl_H;"
    },
    {
        "line": 63,
        "fullcodeline": "cap->cmdchar = cap->nchar + ('v' - 'h');"
    },
    {
        "line": 64,
        "fullcodeline": "cap->arg = TRUE;"
    },
    {
        "line": 162,
        "fullcodeline": "oap->motion_type = MCHAR;"
    },
    {
        "line": 164,
        "fullcodeline": "oap->inclusive = TRUE;"
    },
    {
        "line": 197,
        "fullcodeline": "cap->arg = TRUE;"
    },
    {
        "line": 232,
        "fullcodeline": "cap->arg = FALSE;"
    },
    {
        "line": 281,
        "fullcodeline": "mod_mask = MOD_MASK_CTRL;"
    },
    {
        "line": 312,
        "fullcodeline": "cap->count1 = -cap->count1;"
    },
    {
        "line": 126,
        "fullcodeline": "i = linetabsize(ml_get_curline());"
    },
    {
        "line": 205,
        "fullcodeline": "do_sleep(cap->count1 * 1000L, FALSE);"
    },
    {
        "line": 282,
        "fullcodeline": "(void)do_mouse(oap, cap->nchar, BACKWARD, cap->count1, 0);"
    },
    {
        "line": 19,
        "fullcodeline": "cap->arg = TRUE;"
    },
    {
        "line": 20,
        "fullcodeline": "cap->cmdchar = cap->nchar;"
    },
    {
        "line": 21,
        "fullcodeline": "cap->nchar = NUL;"
    },
    {
        "line": 22,
        "fullcodeline": "nv_addsub(cap);"
    },
    {
        "line": 73,
        "fullcodeline": "if (!current_search(cap->count1, cap->nchar == 'n'))"
    },
    {
        "line": 84,
        "fullcodeline": "oap->motion_type = MLINE;"
    },
    {
        "line": 85,
        "fullcodeline": "i = cursor_down(cap->count1, oap->op_type == OP_NOP);"
    },
    {
        "line": 98,
        "fullcodeline": "oap->motion_type = MLINE;"
    },
    {
        "line": 99,
        "fullcodeline": "i = cursor_up(cap->count1, oap->op_type == OP_NOP);"
    },
    {
        "line": 165,
        "fullcodeline": "if (bckend_word(cap->count1, cap->nchar == 'E', FALSE) == FAIL)"
    },
    {
        "line": 182,
        "fullcodeline": "if (!checkclearopq(oap))"
    },
    {
        "line": 303,
        "fullcodeline": "if (!check_text_locked(cap->oap) && !checkclearopq(oap))"
    },
    {
        "line": 317,
        "fullcodeline": "if (!checkclearop(oap))"
    },
    {
        "line": 321,
        "fullcodeline": "if (!checkclearop(oap))"
    },
    {
        "line": 326,
        "fullcodeline": "if (!checkclearop(oap) && goto_tabpage_lastused() == FAIL)"
    },
    {
        "line": 332,
        "fullcodeline": "if (!checkclearopq(oap))"
    },
    {
        "line": 25,
        "fullcodeline": "clearopbeep(oap);"
    },
    {
        "line": 88,
        "fullcodeline": "i = nv_screengo(oap, FORWARD, cap->count1);"
    },
    {
        "line": 102,
        "fullcodeline": "i = nv_screengo(oap, BACKWARD, cap->count1);"
    },
    {
        "line": 127,
        "fullcodeline": "if (cap->count0 > 0 && cap->count0 <= 100)"
    },
    {
        "line": 322,
        "fullcodeline": "goto_tabpage(-(int)cap->count1);"
    },
    {
        "line": 128,
        "fullcodeline": "coladvance((colnr_T)(i * cap->count0 / 100));"
    },
    {
        "line": 333,
        "fullcodeline": "undo_time(cap->nchar == '-' ? -cap->count1 : cap->count1,"
    },
    {
        "line": 130,
        "fullcodeline": "coladvance((colnr_T)(i / 2));"
    }
]