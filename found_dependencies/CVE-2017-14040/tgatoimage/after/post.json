[
    {
        "line": 7,
        "fullcodeline": "int flip_image = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "opj_image_cmptparm_t cmptparm[4];   /* maximum 4 components */"
    },
    {
        "line": 16,
        "fullcodeline": "f = fopen(filename, \"rb\");"
    },
    {
        "line": 35,
        "fullcodeline": "memset(&cmptparm[0], 0, 4 * sizeof(opj_image_cmptparm_t));"
    },
    {
        "line": 37,
        "fullcodeline": "mono = (pixel_bit_depth == 8) ||"
    },
    {
        "line": 39,
        "fullcodeline": "save_alpha = (pixel_bit_depth == 16) ||"
    },
    {
        "line": 68,
        "fullcodeline": "subsampling_dx = parameters->subsampling_dx;"
    },
    {
        "line": 69,
        "fullcodeline": "subsampling_dy = parameters->subsampling_dy;"
    },
    {
        "line": 82,
        "fullcodeline": "image = opj_image_create((OPJ_UINT32)numcomps, &cmptparm[0], color_space);"
    },
    {
        "line": 91,
        "fullcodeline": "image->x0 = (OPJ_UINT32)parameters->image_offset_x0;"
    },
    {
        "line": 92,
        "fullcodeline": "image->y0 = (OPJ_UINT32)parameters->image_offset_y0;"
    },
    {
        "line": 93,
        "fullcodeline": "image->x1 = !image->x0 ? (OPJ_UINT32)(image_width - 1)  *"
    },
    {
        "line": 96,
        "fullcodeline": "image->y1 = !image->y0 ? (OPJ_UINT32)(image_height - 1) *"
    },
    {
        "line": 183,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 17,
        "fullcodeline": "if (!f) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (!tga_readheader(f, &pixel_bit_depth, &image_width, &image_height,"
    },
    {
        "line": 29,
        "fullcodeline": "if (!((pixel_bit_depth == 24) || (pixel_bit_depth == 32))) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (image_height != 0 && image_width > 10000000 / image_height / numcomps) {"
    },
    {
        "line": 71,
        "fullcodeline": "for (i = 0; i < numcomps; i++) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (!image) {"
    },
    {
        "line": 101,
        "fullcodeline": "for (y = 0; y < image_height; y++) {"
    },
    {
        "line": 18,
        "fullcodeline": "fprintf(stderr, \"Failed to open %s for reading !!\\n\", filename);"
    },
    {
        "line": 24,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 30,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 38,
        "fullcodeline": "(pixel_bit_depth == 16);  /* Mono with & without alpha. */"
    },
    {
        "line": 40,
        "fullcodeline": "(pixel_bit_depth == 32); /* Mono with alpha, or RGB with alpha */"
    },
    {
        "line": 43,
        "fullcodeline": "color_space = OPJ_CLRSPC_GRAY;"
    },
    {
        "line": 44,
        "fullcodeline": "numcomps = save_alpha ? 2 : 1;"
    },
    {
        "line": 54,
        "fullcodeline": "OPJ_UINT64 expected_file_size ="
    },
    {
        "line": 56,
        "fullcodeline": "long curpos = ftell(f);"
    },
    {
        "line": 60,
        "fullcodeline": "fseek(f, (long)expected_file_size - 1, SEEK_SET);"
    },
    {
        "line": 65,
        "fullcodeline": "fseek(f, curpos, SEEK_SET);"
    },
    {
        "line": 72,
        "fullcodeline": "cmptparm[i].prec = 8;"
    },
    {
        "line": 73,
        "fullcodeline": "cmptparm[i].bpp = 8;"
    },
    {
        "line": 74,
        "fullcodeline": "cmptparm[i].sgnd = 0;"
    },
    {
        "line": 75,
        "fullcodeline": "cmptparm[i].dx = (OPJ_UINT32)subsampling_dx;"
    },
    {
        "line": 76,
        "fullcodeline": "cmptparm[i].dy = (OPJ_UINT32)subsampling_dy;"
    },
    {
        "line": 77,
        "fullcodeline": "cmptparm[i].w = image_width;"
    },
    {
        "line": 78,
        "fullcodeline": "cmptparm[i].h = image_height;"
    },
    {
        "line": 85,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 94,
        "fullcodeline": "(OPJ_UINT32)subsampling_dx + 1 : image->x0 + (OPJ_UINT32)(image_width - 1)  *"
    },
    {
        "line": 97,
        "fullcodeline": "(OPJ_UINT32)subsampling_dy + 1 : image->y0 + (OPJ_UINT32)(image_height - 1) *"
    },
    {
        "line": 46,
        "fullcodeline": "numcomps = save_alpha ? 4 : 3;"
    },
    {
        "line": 47,
        "fullcodeline": "color_space = OPJ_CLRSPC_SRGB;"
    },
    {
        "line": 55,
        "fullcodeline": "(OPJ_UINT64)image_width * image_height * numcomps;"
    },
    {
        "line": 57,
        "fullcodeline": "if (expected_file_size > (OPJ_UINT64)INT_MAX) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (fread(&ch, 1, 1, f) != 1) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (numcomps == 3) {"
    },
    {
        "line": 58,
        "fullcodeline": "expected_file_size = (OPJ_UINT64)INT_MAX;"
    },
    {
        "line": 62,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 105,
        "fullcodeline": "index = (int)((image_height - y - 1) * image_width);"
    },
    {
        "line": 95,
        "fullcodeline": "(OPJ_UINT32)subsampling_dx + 1;"
    },
    {
        "line": 98,
        "fullcodeline": "(OPJ_UINT32)subsampling_dy + 1;"
    },
    {
        "line": 107,
        "fullcodeline": "index = (int)(y * image_width);"
    },
    {
        "line": 111,
        "fullcodeline": "for (x = 0; x < image_width; x++) {"
    },
    {
        "line": 136,
        "fullcodeline": "image->comps[0].data[index] = r;"
    },
    {
        "line": 137,
        "fullcodeline": "image->comps[1].data[index] = g;"
    },
    {
        "line": 138,
        "fullcodeline": "image->comps[2].data[index] = b;"
    },
    {
        "line": 139,
        "fullcodeline": "index++;"
    },
    {
        "line": 141,
        "fullcodeline": "} else if (numcomps == 4) {"
    },
    {
        "line": 114,
        "fullcodeline": "if (!fread(&b, 1, 1, f)) {"
    },
    {
        "line": 121,
        "fullcodeline": "if (!fread(&g, 1, 1, f)) {"
    },
    {
        "line": 128,
        "fullcodeline": "if (!fread(&r, 1, 1, f)) {"
    },
    {
        "line": 115,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 117,
        "fullcodeline": "opj_image_destroy(image);"
    },
    {
        "line": 118,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 122,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 124,
        "fullcodeline": "opj_image_destroy(image);"
    },
    {
        "line": 125,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 129,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 131,
        "fullcodeline": "opj_image_destroy(image);"
    },
    {
        "line": 132,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 142,
        "fullcodeline": "for (x = 0; x < image_width; x++) {"
    },
    {
        "line": 180,
        "fullcodeline": "fprintf(stderr, \"Currently unsupported bit depth : %s\\n\", filename);"
    },
    {
        "line": 173,
        "fullcodeline": "image->comps[0].data[index] = r;"
    },
    {
        "line": 174,
        "fullcodeline": "image->comps[1].data[index] = g;"
    },
    {
        "line": 175,
        "fullcodeline": "image->comps[2].data[index] = b;"
    },
    {
        "line": 176,
        "fullcodeline": "image->comps[3].data[index] = a;"
    },
    {
        "line": 177,
        "fullcodeline": "index++;"
    },
    {
        "line": 144,
        "fullcodeline": "if (!fread(&b, 1, 1, f)) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (!fread(&g, 1, 1, f)) {"
    },
    {
        "line": 158,
        "fullcodeline": "if (!fread(&r, 1, 1, f)) {"
    },
    {
        "line": 165,
        "fullcodeline": "if (!fread(&a, 1, 1, f)) {"
    },
    {
        "line": 145,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 147,
        "fullcodeline": "opj_image_destroy(image);"
    },
    {
        "line": 148,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 152,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 154,
        "fullcodeline": "opj_image_destroy(image);"
    },
    {
        "line": 155,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 159,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 161,
        "fullcodeline": "opj_image_destroy(image);"
    },
    {
        "line": 162,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 166,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 168,
        "fullcodeline": "opj_image_destroy(image);"
    },
    {
        "line": 169,
        "fullcodeline": "fclose(f);"
    }
]