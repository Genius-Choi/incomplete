[
    {
        "line": 5,
        "fullcodeline": "unsigned char tga[TGA_HEADER_SIZE];"
    },
    {
        "line": 20,
        "fullcodeline": "id_len = tga[0];"
    },
    {
        "line": 22,
        "fullcodeline": "image_type = tga[2];"
    },
    {
        "line": 24,
        "fullcodeline": "cmap_len = get_tga_ushort(&tga[5]);"
    },
    {
        "line": 25,
        "fullcodeline": "cmap_entry_size = tga[7];"
    },
    {
        "line": 32,
        "fullcodeline": "image_w = get_tga_ushort(&tga[12]);"
    },
    {
        "line": 33,
        "fullcodeline": "image_h = get_tga_ushort(&tga[14]);"
    },
    {
        "line": 34,
        "fullcodeline": "pixel_depth = tga[16];"
    },
    {
        "line": 35,
        "fullcodeline": "image_desc  = tga[17];"
    },
    {
        "line": 37,
        "fullcodeline": "*bits_per_pixel = (unsigned int)pixel_depth;"
    },
    {
        "line": 38,
        "fullcodeline": "*width  = (unsigned int)image_w;"
    },
    {
        "line": 39,
        "fullcodeline": "*height = (unsigned int)image_h;"
    },
    {
        "line": 65,
        "fullcodeline": "*flip_image = !(image_desc & 32);"
    },
    {
        "line": 68,
        "fullcodeline": "palette_size = cmap_len * (cmap_entry_size / 8);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!bits_per_pixel || !width || !height || !flip_image) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (fread(tga, TGA_HEADER_SIZE, 1, fp) != 1) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (image_type > 8) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (palette_size > 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 43,
        "fullcodeline": "unsigned char *id = (unsigned char *) malloc(id_len);"
    },
    {
        "line": 54,
        "fullcodeline": "free(id);"
    },
    {
        "line": 61,
        "fullcodeline": "fprintf(stderr, \"Sorry, compressed tga files are not currently supported.\\n\");"
    },
    {
        "line": 71,
        "fullcodeline": "fprintf(stderr, \"File contains a palette - not yet supported.\");"
    },
    {
        "line": 72,
        "fullcodeline": "fseek(fp, palette_size, SEEK_CUR);"
    },
    {
        "line": 44,
        "fullcodeline": "if (id == 0) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (!fread(id, id_len, 1, fp)) {"
    },
    {
        "line": 45,
        "fullcodeline": "fprintf(stderr, \"tga_readheader: memory out\\n\");"
    },
    {
        "line": 49,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 51,
        "fullcodeline": "free(id);"
    }
]