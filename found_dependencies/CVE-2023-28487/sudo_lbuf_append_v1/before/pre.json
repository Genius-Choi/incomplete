[
    {
        "line": 3,
        "fullcodeline": "unsigned int saved_len = lbuf->len;"
    },
    {
        "line": 4,
        "fullcodeline": "bool ret = false;"
    },
    {
        "line": 8,
        "fullcodeline": "debug_decl(sudo_lbuf_append, SUDO_DEBUG_UTIL);"
    },
    {
        "line": 13,
        "fullcodeline": "va_start(ap, fmt);"
    },
    {
        "line": 30,
        "fullcodeline": "ret = true;"
    },
    {
        "line": 37,
        "fullcodeline": "va_end(ap);"
    },
    {
        "line": 39,
        "fullcodeline": "debug_return_bool(ret);"
    },
    {
        "line": 10,
        "fullcodeline": "if (sudo_lbuf_error(lbuf))"
    },
    {
        "line": 14,
        "fullcodeline": "while (*fmt != '\\0') {"
    },
    {
        "line": 33,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 35,
        "fullcodeline": "if (lbuf->size != 0)"
    },
    {
        "line": 11,
        "fullcodeline": "debug_return_bool(false);"
    },
    {
        "line": 28,
        "fullcodeline": "lbuf->buf[lbuf->len++] = *fmt++;"
    },
    {
        "line": 34,
        "fullcodeline": "lbuf->len = saved_len;"
    },
    {
        "line": 36,
        "fullcodeline": "lbuf->buf[lbuf->len] = '\\0';"
    },
    {
        "line": 15,
        "fullcodeline": "if (fmt[0] == '%' && fmt[1] == 's') {"
    },
    {
        "line": 26,
        "fullcodeline": "if (!sudo_lbuf_expand(lbuf, 1))"
    },
    {
        "line": 18,
        "fullcodeline": "len = strlen(s);"
    },
    {
        "line": 21,
        "fullcodeline": "memcpy(lbuf->buf + lbuf->len, s, len);"
    },
    {
        "line": 22,
        "fullcodeline": "lbuf->len += len;"
    },
    {
        "line": 23,
        "fullcodeline": "fmt += 2;"
    },
    {
        "line": 19,
        "fullcodeline": "if (!sudo_lbuf_expand(lbuf, len))"
    },
    {
        "line": 17,
        "fullcodeline": "s = \"(NULL)\";"
    }
]