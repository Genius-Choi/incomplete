[
    {
        "line": 3,
        "fullcodeline": "const struct eventlog_config *evl_conf = eventlog_getconf();"
    },
    {
        "line": 4,
        "fullcodeline": "const char *cp, *timefmt = evl_conf->time_fmt;"
    },
    {
        "line": 6,
        "fullcodeline": "char timebuf[1024];"
    },
    {
        "line": 11,
        "fullcodeline": "int fd, len, pfd[2], status;"
    },
    {
        "line": 18,
        "fullcodeline": "debug_decl(send_mail, SUDO_DEBUG_UTIL);"
    },
    {
        "line": 28,
        "fullcodeline": "time(&now);"
    },
    {
        "line": 33,
        "fullcodeline": "sigemptyset(&chldmask);"
    },
    {
        "line": 34,
        "fullcodeline": "sigaddset(&chldmask, SIGCHLD);"
    },
    {
        "line": 35,
        "fullcodeline": "(void)sigprocmask(SIG_BLOCK, &chldmask, NULL);"
    },
    {
        "line": 83,
        "fullcodeline": "memset(&sa, 0, sizeof(sa));"
    },
    {
        "line": 85,
        "fullcodeline": "sa.sa_flags = SA_RESTART;"
    },
    {
        "line": 86,
        "fullcodeline": "sa.sa_handler = SIG_DFL;"
    },
    {
        "line": 87,
        "fullcodeline": "(void)sigaction(SIGCHLD, &sa, NULL);"
    },
    {
        "line": 88,
        "fullcodeline": "(void)sigprocmask(SIG_UNBLOCK, &chldmask, NULL);"
    },
    {
        "line": 95,
        "fullcodeline": "fd = open(_PATH_DEVNULL, O_RDWR, S_IRUSR|S_IWUSR|S_IRGRP|S_IROTH);"
    },
    {
        "line": 103,
        "fullcodeline": "closefrom_nodebug(STDERR_FILENO + 1);"
    },
    {
        "line": 129,
        "fullcodeline": "(void) close(pfd[0]);"
    },
    {
        "line": 139,
        "fullcodeline": "(void) fprintf(mail, \"To: %s\\nFrom: %s\\nAuto-Submitted: %s\\nSubject: \","
    },
    {
        "line": 170,
        "fullcodeline": "timebuf[sizeof(timebuf) - 1] = '\\0';"
    },
    {
        "line": 171,
        "fullcodeline": "len = strftime(timebuf, sizeof(timebuf), timefmt, &tm);"
    },
    {
        "line": 188,
        "fullcodeline": "va_start(ap, fmt);"
    },
    {
        "line": 189,
        "fullcodeline": "(void) vfprintf(mail, fmt, ap);"
    },
    {
        "line": 190,
        "fullcodeline": "va_end(ap);"
    },
    {
        "line": 191,
        "fullcodeline": "fputs(\"\\n\\n\", mail);"
    },
    {
        "line": 193,
        "fullcodeline": "fclose(mail);"
    },
    {
        "line": 201,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_INFO|SUDO_DEBUG_LINENO,"
    },
    {
        "line": 203,
        "fullcodeline": "sudo_debug_exit(__func__, __FILE__, __LINE__, sudo_debug_subsys);"
    },
    {
        "line": 204,
        "fullcodeline": "_exit(EXIT_SUCCESS);"
    },
    {
        "line": 21,
        "fullcodeline": "if (evl_conf->mailerpath == NULL || evl_conf->mailto == NULL)"
    },
    {
        "line": 25,
        "fullcodeline": "if (stat(evl_conf->mailerpath, &sb) != 0 || !S_ISREG(sb.st_mode))"
    },
    {
        "line": 29,
        "fullcodeline": "if (localtime_r(&now, &tm) == NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "switch (pid = sudo_debug_fork()) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (setsid() == -1)"
    },
    {
        "line": 93,
        "fullcodeline": "if (chdir(\"/\") == -1)"
    },
    {
        "line": 96,
        "fullcodeline": "if (fd != -1) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (pipe2(pfd, O_CLOEXEC) == -1) {"
    },
    {
        "line": 113,
        "fullcodeline": "switch (pid = sudo_debug_fork()) {"
    },
    {
        "line": 130,
        "fullcodeline": "if ((mail = fdopen(pfd[1], \"w\")) == NULL) {"
    },
    {
        "line": 144,
        "fullcodeline": "for (cp = _(evl_conf->mailsub); *cp; cp++) {"
    },
    {
        "line": 172,
        "fullcodeline": "if (len == 0 || timebuf[sizeof(timebuf) - 1] != '\\0') {"
    },
    {
        "line": 182,
        "fullcodeline": "if (evlog != NULL) {"
    },
    {
        "line": 202,
        "fullcodeline": "\"child (%d) exit value %d\", (int)rv, status);"
    },
    {
        "line": 22,
        "fullcodeline": "debug_return_bool(true);"
    },
    {
        "line": 26,
        "fullcodeline": "debug_return_bool(false);"
    },
    {
        "line": 30,
        "fullcodeline": "debug_return_bool(false);"
    },
    {
        "line": 39,
        "fullcodeline": "case -1:"
    },
    {
        "line": 41,
        "fullcodeline": "sudo_warn(\"%s\", U_(\"unable to fork\"));"
    },
    {
        "line": 44,
        "fullcodeline": "(void)sigprocmask(SIG_UNBLOCK, &chldmask, NULL);"
    },
    {
        "line": 45,
        "fullcodeline": "debug_return_bool(false);"
    },
    {
        "line": 74,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_INFO|SUDO_DEBUG_LINENO,"
    },
    {
        "line": 78,
        "fullcodeline": "(void)sigprocmask(SIG_UNBLOCK, &chldmask, NULL);"
    },
    {
        "line": 79,
        "fullcodeline": "debug_return_bool(true);"
    },
    {
        "line": 92,
        "fullcodeline": "sudo_warn(\"setsid\");"
    },
    {
        "line": 94,
        "fullcodeline": "sudo_warn(\"chdir(/)\");"
    },
    {
        "line": 97,
        "fullcodeline": "(void) dup2(fd, STDIN_FILENO);"
    },
    {
        "line": 98,
        "fullcodeline": "(void) dup2(fd, STDOUT_FILENO);"
    },
    {
        "line": 99,
        "fullcodeline": "(void) dup2(fd, STDERR_FILENO);"
    },
    {
        "line": 106,
        "fullcodeline": "syslog(LOG_ERR, _(\"unable to open pipe: %m\")); // -V618"
    },
    {
        "line": 107,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_ERROR, \"unable to open pipe: %s\","
    },
    {
        "line": 109,
        "fullcodeline": "sudo_debug_exit(__func__, __FILE__, __LINE__, sudo_debug_subsys);"
    },
    {
        "line": 110,
        "fullcodeline": "_exit(EXIT_FAILURE);"
    },
    {
        "line": 114,
        "fullcodeline": "case -1:"
    },
    {
        "line": 116,
        "fullcodeline": "syslog(LOG_ERR, _(\"unable to fork: %m\")); // -V618"
    },
    {
        "line": 117,
        "fullcodeline": "sudo_debug_printf("
    },
    {
        "line": 120,
        "fullcodeline": "sudo_debug_exit(__func__, __FILE__, __LINE__, sudo_debug_subsys);"
    },
    {
        "line": 121,
        "fullcodeline": "_exit(EXIT_FAILURE);"
    },
    {
        "line": 125,
        "fullcodeline": "exec_mailer(pfd[0]);"
    },
    {
        "line": 131,
        "fullcodeline": "syslog(LOG_ERR, \"fdopen: %m\");"
    },
    {
        "line": 132,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_ERROR|SUDO_DEBUG_LINENO|SUDO_DEBUG_ERRNO,"
    },
    {
        "line": 134,
        "fullcodeline": "sudo_debug_exit(__func__, __FILE__, __LINE__, sudo_debug_subsys);"
    },
    {
        "line": 135,
        "fullcodeline": "_exit(EXIT_FAILURE);"
    },
    {
        "line": 141,
        "fullcodeline": "evl_conf->mailfrom ? evl_conf->mailfrom :"
    },
    {
        "line": 173,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_INFO|SUDO_DEBUG_ERROR,"
    },
    {
        "line": 176,
        "fullcodeline": "timebuf[sizeof(timebuf) - 1] = '\\0';"
    },
    {
        "line": 177,
        "fullcodeline": "len = strftime(timebuf, sizeof(timebuf), \"%h %e %T\", &tm);"
    },
    {
        "line": 183,
        "fullcodeline": "(void) fprintf(mail, \"\\n\\n%s : %s : %s : \", evlog->submithost, timebuf,"
    },
    {
        "line": 195,
        "fullcodeline": "rv = waitpid(pid, &status, 0);"
    },
    {
        "line": 48,
        "fullcodeline": "switch (fork()) {"
    },
    {
        "line": 75,
        "fullcodeline": "\"child (%d) exit value %d\", (int)rv, status);"
    },
    {
        "line": 108,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 118,
        "fullcodeline": "SUDO_DEBUG_ERROR|SUDO_DEBUG_LINENO|SUDO_DEBUG_ERRNO,"
    },
    {
        "line": 142,
        "fullcodeline": "(evlog ? evlog->submituser : \"root\"),"
    },
    {
        "line": 146,
        "fullcodeline": "if (*cp == '%' && *(cp+1) != '%') {"
    },
    {
        "line": 178,
        "fullcodeline": "if (len == 0 || timebuf[sizeof(timebuf) - 1] != '\\0') {"
    },
    {
        "line": 186,
        "fullcodeline": "(void) fprintf(mail, \"\\n\\n%s : \", timebuf);"
    },
    {
        "line": 196,
        "fullcodeline": "if (rv == -1 && errno != EINTR)"
    },
    {
        "line": 198,
        "fullcodeline": "if (rv != -1 && !WIFSTOPPED(status))"
    },
    {
        "line": 49,
        "fullcodeline": "case -1:"
    },
    {
        "line": 51,
        "fullcodeline": "syslog(LOG_ERR, _(\"unable to fork: %m\")); // -V618"
    },
    {
        "line": 52,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_ERROR, \"unable to fork: %s\","
    },
    {
        "line": 54,
        "fullcodeline": "sudo_debug_exit(__func__, __FILE__, __LINE__, sudo_debug_subsys);"
    },
    {
        "line": 55,
        "fullcodeline": "_exit(EXIT_FAILURE);"
    },
    {
        "line": 58,
        "fullcodeline": "sudo_debug_enter(__func__, __FILE__, __LINE__, sudo_debug_subsys);"
    },
    {
        "line": 62,
        "fullcodeline": "_exit(EXIT_SUCCESS);"
    },
    {
        "line": 68,
        "fullcodeline": "rv = waitpid(pid, &status, 0);"
    },
    {
        "line": 179,
        "fullcodeline": "timebuf[0] = '\\0';\t\t/* give up */"
    },
    {
        "line": 53,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 69,
        "fullcodeline": "if (rv == -1 && errno != EINTR)"
    },
    {
        "line": 71,
        "fullcodeline": "if (rv != -1 && !WIFSTOPPED(status))"
    },
    {
        "line": 161,
        "fullcodeline": "(void) fputc(*cp, mail);"
    },
    {
        "line": 147,
        "fullcodeline": "switch (*(++cp)) {"
    },
    {
        "line": 157,
        "fullcodeline": "cp--;"
    },
    {
        "line": 149,
        "fullcodeline": "if (evlog != NULL)"
    },
    {
        "line": 153,
        "fullcodeline": "if (evlog != NULL)"
    },
    {
        "line": 150,
        "fullcodeline": "(void) fputs(evlog->submithost, mail);"
    },
    {
        "line": 154,
        "fullcodeline": "(void) fputs(evlog->submituser, mail);"
    }
]