[
    {
        "line": 4,
        "fullcodeline": "const struct eventlog_config *evl_conf = eventlog_getconf();"
    },
    {
        "line": 6,
        "fullcodeline": "const char *tty, *tsid = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "char exit_str[(((sizeof(int) * 8) + 2) / 3) + 2];"
    },
    {
        "line": 8,
        "fullcodeline": "char sessid[7], offsetstr[64] = \"\";"
    },
    {
        "line": 11,
        "fullcodeline": "debug_decl(new_logline, SUDO_DEBUG_UTIL);"
    },
    {
        "line": 13,
        "fullcodeline": "sudo_lbuf_init(&lbuf, NULL, 0, NULL, 0);"
    },
    {
        "line": 30,
        "fullcodeline": "iolog_file = evlog->iolog_file;"
    },
    {
        "line": 145,
        "fullcodeline": "sudo_lbuf_destroy(&lbuf);"
    },
    {
        "line": 146,
        "fullcodeline": "sudo_warnx(U_(\"%s: %s\"), __func__, U_(\"unable to allocate memory\"));"
    },
    {
        "line": 147,
        "fullcodeline": "debug_return_str(NULL);"
    },
    {
        "line": 15,
        "fullcodeline": "if (ISSET(flags, EVLOG_RAW) || evlog == NULL) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (iolog_file != NULL) {"
    },
    {
        "line": 58,
        "fullcodeline": "if ((tty = evlog->ttyname) != NULL) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (args->reason != NULL) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (args->errstr != NULL) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (evlog->submithost != NULL && !evl_conf->omit_hostname) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (tty != NULL) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (evlog->runchroot != NULL) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (evlog->runcwd != NULL) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (evlog->runuser != NULL) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (evlog->rungroup != NULL) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (tsid != NULL) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (evlog->env_add != NULL && evlog->env_add[0] != NULL) {"
    },
    {
        "line": 109,
        "fullcodeline": "if (evlog->command != NULL) {"
    },
    {
        "line": 142,
        "fullcodeline": "if (!sudo_lbuf_error(&lbuf))"
    },
    {
        "line": 26,
        "fullcodeline": "debug_return_str(lbuf.buf);"
    },
    {
        "line": 68,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"%s%s\", args->reason,"
    },
    {
        "line": 72,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"%s ; \", args->errstr);"
    },
    {
        "line": 75,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"HOST=%s ; \","
    },
    {
        "line": 79,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"TTY=%s ; \", tty);"
    },
    {
        "line": 82,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"CHROOT=%s ; \","
    },
    {
        "line": 86,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"PWD=%s ; \","
    },
    {
        "line": 90,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"USER=%s ; \","
    },
    {
        "line": 94,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"GROUP=%s ; \","
    },
    {
        "line": 98,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"TSID=%s%s ; \", tsid,"
    },
    {
        "line": 102,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"ENV=%s\","
    },
    {
        "line": 110,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL|LBUF_ESC_BLANK,"
    },
    {
        "line": 143,
        "fullcodeline": "debug_return_str(lbuf.buf);"
    },
    {
        "line": 16,
        "fullcodeline": "if (args->reason != NULL) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (IS_SESSID(iolog_file)) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (sudo_timespecisset(&evlog->iolog_offset)) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (strncmp(tty, _PATH_DEV, sizeof(_PATH_DEV) - 1) == 0)"
    },
    {
        "line": 104,
        "fullcodeline": "for (i = 1; evlog->env_add[i] != NULL; i++) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (evlog->argv != NULL && evlog->argv[0] != NULL) {"
    },
    {
        "line": 129,
        "fullcodeline": "if (event_type == EVLOG_EXIT) {"
    },
    {
        "line": 33,
        "fullcodeline": "sessid[0] = iolog_file[0];"
    },
    {
        "line": 34,
        "fullcodeline": "sessid[1] = iolog_file[1];"
    },
    {
        "line": 35,
        "fullcodeline": "sessid[2] = iolog_file[3];"
    },
    {
        "line": 36,
        "fullcodeline": "sessid[3] = iolog_file[4];"
    },
    {
        "line": 37,
        "fullcodeline": "sessid[4] = iolog_file[6];"
    },
    {
        "line": 38,
        "fullcodeline": "sessid[5] = iolog_file[7];"
    },
    {
        "line": 39,
        "fullcodeline": "sessid[6] = '\\0';"
    },
    {
        "line": 40,
        "fullcodeline": "tsid = sessid;"
    },
    {
        "line": 60,
        "fullcodeline": "tty += sizeof(_PATH_DEV) - 1;"
    },
    {
        "line": 105,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \" %s\","
    },
    {
        "line": 17,
        "fullcodeline": "if (args->errstr != NULL) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (sudo_lbuf_error(&lbuf))"
    },
    {
        "line": 42,
        "fullcodeline": "tsid = iolog_file;"
    },
    {
        "line": 46,
        "fullcodeline": "if (evlog->iolog_offset.tv_nsec > 10000000) {"
    },
    {
        "line": 113,
        "fullcodeline": "for (i = 1; evlog->argv[i] != NULL; i++) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (evlog->signal_name != NULL) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (evlog->exit_value != -1) {"
    },
    {
        "line": 18,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"%s: %s\","
    },
    {
        "line": 47,
        "fullcodeline": "(void)snprintf(offsetstr, sizeof(offsetstr), \"@%lld.%02ld\","
    },
    {
        "line": 114,
        "fullcodeline": "sudo_lbuf_append(&lbuf, \" \");"
    },
    {
        "line": 131,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \" ; SIGNAL=%s\","
    },
    {
        "line": 135,
        "fullcodeline": "(void)snprintf(exit_str, sizeof(exit_str), \"%d\","
    },
    {
        "line": 137,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \" ; EXIT=%s\","
    },
    {
        "line": 21,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"%s\", args->reason);"
    },
    {
        "line": 115,
        "fullcodeline": "if (strchr(evlog->argv[i], ' ') != NULL) {"
    },
    {
        "line": 48,
        "fullcodeline": "(long long)evlog->iolog_offset.tv_sec,"
    },
    {
        "line": 49,
        "fullcodeline": "evlog->iolog_offset.tv_nsec / 10000000);"
    },
    {
        "line": 50,
        "fullcodeline": "} else if (evlog->iolog_offset.tv_sec != 0) {"
    },
    {
        "line": 117,
        "fullcodeline": "sudo_lbuf_append(&lbuf, \"'\");"
    },
    {
        "line": 118,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL|LBUF_ESC_QUOTE,"
    },
    {
        "line": 120,
        "fullcodeline": "sudo_lbuf_append(&lbuf, \"'\");"
    },
    {
        "line": 51,
        "fullcodeline": "(void)snprintf(offsetstr, sizeof(offsetstr), \"@%lld\","
    },
    {
        "line": 123,
        "fullcodeline": "sudo_lbuf_append_esc(&lbuf,"
    },
    {
        "line": 124,
        "fullcodeline": "LBUF_ESC_CNTRL|LBUF_ESC_BLANK|LBUF_ESC_QUOTE,"
    },
    {
        "line": 52,
        "fullcodeline": "(long long)evlog->iolog_offset.tv_sec);"
    }
]