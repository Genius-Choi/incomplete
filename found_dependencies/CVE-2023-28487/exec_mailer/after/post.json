[
    {
        "line": 3,
        "fullcodeline": "const struct eventlog_config *evl_conf = eventlog_getconf();"
    },
    {
        "line": 4,
        "fullcodeline": "char *last, *mflags, *p, *argv[MAX_MAILFLAGS + 1];"
    },
    {
        "line": 5,
        "fullcodeline": "const char *mpath = evl_conf->mailerpath;"
    },
    {
        "line": 7,
        "fullcodeline": "const char * const root_envp[] = {"
    },
    {
        "line": 17,
        "fullcodeline": "debug_decl(exec_mailer, SUDO_DEBUG_UTIL);"
    },
    {
        "line": 34,
        "fullcodeline": "argv[0] = sudo_basename(mpath);"
    },
    {
        "line": 36,
        "fullcodeline": "i = 1;"
    },
    {
        "line": 42,
        "fullcodeline": "argv[i] = NULL;"
    },
    {
        "line": 58,
        "fullcodeline": "sudo_debug_exit(__func__, __FILE__, __LINE__, sudo_debug_subsys);"
    },
    {
        "line": 63,
        "fullcodeline": "syslog(LOG_ERR, _(\"unable to execute %s: %m\"), mpath); // -V618"
    },
    {
        "line": 64,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_ERROR, \"unable to execute %s: %s\","
    },
    {
        "line": 66,
        "fullcodeline": "_exit(127);"
    },
    {
        "line": 20,
        "fullcodeline": "if (dup3(pipein, STDIN_FILENO, 0) == -1) {"
    },
    {
        "line": 29,
        "fullcodeline": "if ((mflags = strdup(evl_conf->mailerflags)) == NULL) {"
    },
    {
        "line": 37,
        "fullcodeline": "if ((p = strtok_r(mflags, \" \\t\", &last))) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (setuid(ROOT_UID) != 0) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (evl_conf->mailuid != ROOT_UID) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (evl_conf->mailuid == ROOT_UID)"
    },
    {
        "line": 65,
        "fullcodeline": "mpath, strerror(errno));"
    },
    {
        "line": 21,
        "fullcodeline": "syslog(LOG_ERR, _(\"unable to dup stdin: %m\")); // -V618"
    },
    {
        "line": 22,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_ERROR,"
    },
    {
        "line": 24,
        "fullcodeline": "sudo_debug_exit(__func__, __FILE__, __LINE__, sudo_debug_subsys);"
    },
    {
        "line": 25,
        "fullcodeline": "_exit(127);"
    },
    {
        "line": 30,
        "fullcodeline": "syslog(LOG_ERR, _(\"unable to allocate memory\")); // -V618"
    },
    {
        "line": 31,
        "fullcodeline": "sudo_debug_exit(__func__, __FILE__, __LINE__, sudo_debug_subsys);"
    },
    {
        "line": 32,
        "fullcodeline": "_exit(127);"
    },
    {
        "line": 49,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_ERROR, \"unable to change uid to %u\","
    },
    {
        "line": 60,
        "fullcodeline": "execve(mpath, argv, (char **)root_envp);"
    },
    {
        "line": 23,
        "fullcodeline": "\"unable to dup stdin: %s\", strerror(errno));"
    },
    {
        "line": 40,
        "fullcodeline": "} while (++i < MAX_MAILFLAGS && (p = strtok_r(NULL, \" \\t\", &last)));"
    },
    {
        "line": 53,
        "fullcodeline": "if (setuid(evl_conf->mailuid) != 0) {"
    },
    {
        "line": 62,
        "fullcodeline": "execv(mpath, argv);"
    },
    {
        "line": 39,
        "fullcodeline": "argv[i] = p;"
    },
    {
        "line": 54,
        "fullcodeline": "sudo_debug_printf(SUDO_DEBUG_ERROR, \"unable to change uid to %u\","
    },
    {
        "line": 55,
        "fullcodeline": "(unsigned int)evl_conf->mailuid);"
    }
]