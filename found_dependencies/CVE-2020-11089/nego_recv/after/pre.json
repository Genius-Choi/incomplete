[
    {
        "line": 6,
        "fullcodeline": "rdpNego* nego = (rdpNego*)extra;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!tpkt_read_header(s, &length))"
    },
    {
        "line": 14,
        "fullcodeline": "if (li > 6)"
    },
    {
        "line": 11,
        "fullcodeline": "if (!tpdu_read_connection_confirm(s, &li, length))"
    },
    {
        "line": 17,
        "fullcodeline": "Stream_Read_UINT8(s, type); /* Type */"
    },
    {
        "line": 70,
        "fullcodeline": "if (!tpkt_ensure_stream_consumed(s, length))"
    },
    {
        "line": 9,
        "fullcodeline": "return -1;"
    },
    {
        "line": 12,
        "fullcodeline": "return -1;"
    },
    {
        "line": 71,
        "fullcodeline": "return -1;"
    },
    {
        "line": 22,
        "fullcodeline": "if (!nego_process_negotiation_response(nego, s))"
    },
    {
        "line": 50,
        "fullcodeline": "if (!nego_process_negotiation_failure(nego, s))"
    },
    {
        "line": 23,
        "fullcodeline": "return -1;"
    },
    {
        "line": 51,
        "fullcodeline": "return -1;"
    },
    {
        "line": 30,
        "fullcodeline": "if ((nego->SelectedProtocol == PROTOCOL_HYBRID) &&"
    },
    {
        "line": 31,
        "fullcodeline": "(!nego->EnabledProtocols[PROTOCOL_HYBRID]))"
    },
    {
        "line": 36,
        "fullcodeline": "if ((nego->SelectedProtocol == PROTOCOL_SSL) &&"
    },
    {
        "line": 37,
        "fullcodeline": "(!nego->EnabledProtocols[PROTOCOL_SSL]))"
    },
    {
        "line": 62,
        "fullcodeline": "nego->state = NEGO_STATE_FINAL;"
    }
]