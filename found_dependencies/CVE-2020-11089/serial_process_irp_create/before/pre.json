[
    {
        "line": 11,
        "fullcodeline": "Stream_Read_UINT32(irp->input, DesiredAccess);     /* DesiredAccess (4 bytes) */"
    },
    {
        "line": 12,
        "fullcodeline": "Stream_Seek_UINT64(irp->input);                    /* AllocationSize (8 bytes) */"
    },
    {
        "line": 13,
        "fullcodeline": "Stream_Seek_UINT32(irp->input);                    /* FileAttributes (4 bytes) */"
    },
    {
        "line": 14,
        "fullcodeline": "Stream_Read_UINT32(irp->input, SharedAccess);      /* SharedAccess (4 bytes) */"
    },
    {
        "line": 15,
        "fullcodeline": "Stream_Read_UINT32(irp->input, CreateDisposition); /* CreateDisposition (4 bytes) */"
    },
    {
        "line": 16,
        "fullcodeline": "Stream_Seek_UINT32(irp->input);                    /* CreateOptions (4 bytes) */"
    },
    {
        "line": 17,
        "fullcodeline": "Stream_Read_UINT32(irp->input, PathLength);        /* PathLength (4 bytes) */"
    },
    {
        "line": 22,
        "fullcodeline": "Stream_Seek(irp->input, PathLength); /* Path (variable) */"
    },
    {
        "line": 45,
        "fullcodeline": "DesiredAccess = GENERIC_READ | GENERIC_WRITE;"
    },
    {
        "line": 46,
        "fullcodeline": "SharedAccess = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "CreateDisposition = OPEN_EXISTING;"
    },
    {
        "line": 49,
        "fullcodeline": "serial->hComm ="
    },
    {
        "line": 62,
        "fullcodeline": "_comm_setServerSerialDriver(serial->hComm, serial->ServerSerialDriverId);"
    },
    {
        "line": 73,
        "fullcodeline": "irp->FileId = irp->devman->id_sequence++; /* FIXME: why not ((WINPR_COMM*)hComm)->fd? */"
    },
    {
        "line": 74,
        "fullcodeline": "irp->IoStatus = STATUS_SUCCESS;"
    },
    {
        "line": 78,
        "fullcodeline": "Stream_Write_UINT32(irp->output, irp->FileId); /* FileId (4 bytes) */"
    },
    {
        "line": 8,
        "fullcodeline": "if (Stream_GetRemainingLength(irp->input) < 32)"
    },
    {
        "line": 19,
        "fullcodeline": "if (Stream_GetRemainingLength(irp->input) < PathLength)"
    },
    {
        "line": 23,
        "fullcodeline": "assert(PathLength == 0);             /* MS-RDPESP 2.2.2.2 */"
    },
    {
        "line": 50,
        "fullcodeline": "CreateFile(serial->device.name, DesiredAccess, SharedAccess, NULL, /* SecurityAttributes */"
    },
    {
        "line": 72,
        "fullcodeline": "assert(irp->FileId == 0);"
    },
    {
        "line": 54,
        "fullcodeline": "if (!serial->hComm || (serial->hComm == INVALID_HANDLE_VALUE))"
    },
    {
        "line": 58,
        "fullcodeline": "irp->IoStatus = STATUS_UNSUCCESSFUL;"
    }
]