[
    {
        "line": 3,
        "fullcodeline": "git_pkt *pkt = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "const char *line_end = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "gitno_buffer *buf = &transport->buffer;"
    },
    {
        "line": 7,
        "fullcodeline": "git_buf data_pkt_buf = GIT_BUF_INIT;"
    },
    {
        "line": 82,
        "fullcodeline": "git_buf_free(&data_pkt_buf);"
    },
    {
        "line": 35,
        "fullcodeline": "gitno_consume(buf, line_end);"
    },
    {
        "line": 37,
        "fullcodeline": "error = 0;"
    },
    {
        "line": 63,
        "fullcodeline": "git_pkt_free(pkt);"
    },
    {
        "line": 10,
        "fullcodeline": "if (buf->offset > 0)"
    },
    {
        "line": 16,
        "fullcodeline": "if (error < 0 && error != GIT_EBUFS) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (error == GIT_EBUFS) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (pkt == NULL)"
    },
    {
        "line": 66,
        "fullcodeline": "if (error == GIT_ITEROVER) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (error < 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "error = git_pkt_parse_line(&pkt, buf->data,"
    },
    {
        "line": 17,
        "fullcodeline": "error = -1;"
    },
    {
        "line": 45,
        "fullcodeline": "error = add_push_report_sideband_pkt(push, (git_pkt_data *)pkt, &data_pkt_buf);"
    },
    {
        "line": 48,
        "fullcodeline": "giterr_set(GITERR_NET, \"report-status: Error reported: %s\","
    },
    {
        "line": 50,
        "fullcodeline": "error = -1;"
    },
    {
        "line": 59,
        "fullcodeline": "error = add_push_report_pkt(push, pkt);"
    },
    {
        "line": 67,
        "fullcodeline": "error = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "error = GIT_EBUFS;"
    },
    {
        "line": 22,
        "fullcodeline": "if ((recvd = gitno_recv(buf)) < 0) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (recvd == 0) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (data_pkt_buf.size > 0) {"
    },
    {
        "line": 23,
        "fullcodeline": "error = recvd;"
    },
    {
        "line": 28,
        "fullcodeline": "giterr_set(GITERR_NET, \"early EOF\");"
    },
    {
        "line": 29,
        "fullcodeline": "error = GIT_EEOF;"
    },
    {
        "line": 49,
        "fullcodeline": "((git_pkt_err *)pkt)->error);"
    },
    {
        "line": 54,
        "fullcodeline": "git_pkt_progress *p = (git_pkt_progress *) pkt;"
    },
    {
        "line": 55,
        "fullcodeline": "error = transport->progress_cb(p->data, p->len, transport->message_cb_payload);"
    },
    {
        "line": 71,
        "fullcodeline": "giterr_set(GITERR_NET, \"Incomplete pack data pkt-line\");"
    },
    {
        "line": 72,
        "fullcodeline": "error = GIT_ERROR;"
    }
]