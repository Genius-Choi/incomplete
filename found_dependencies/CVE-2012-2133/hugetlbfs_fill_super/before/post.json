[
    {
        "line": 9,
        "fullcodeline": "save_mount_options(sb, data);"
    },
    {
        "line": 11,
        "fullcodeline": "config.nr_blocks = -1; /* No limit on size by default */"
    },
    {
        "line": 12,
        "fullcodeline": "config.nr_inodes = -1; /* No limit on number of inodes by default */"
    },
    {
        "line": 13,
        "fullcodeline": "config.uid = current_fsuid();"
    },
    {
        "line": 14,
        "fullcodeline": "config.gid = current_fsgid();"
    },
    {
        "line": 15,
        "fullcodeline": "config.mode = 0755;"
    },
    {
        "line": 16,
        "fullcodeline": "config.hstate = &default_hstate;"
    },
    {
        "line": 17,
        "fullcodeline": "ret = hugetlbfs_parse_options(data, &config);"
    },
    {
        "line": 21,
        "fullcodeline": "sbinfo = kmalloc(sizeof(struct hugetlbfs_sb_info), GFP_KERNEL);"
    },
    {
        "line": 24,
        "fullcodeline": "sb->s_fs_info = sbinfo;"
    },
    {
        "line": 25,
        "fullcodeline": "sbinfo->hstate = config.hstate;"
    },
    {
        "line": 26,
        "fullcodeline": "spin_lock_init(&sbinfo->stat_lock);"
    },
    {
        "line": 27,
        "fullcodeline": "sbinfo->max_blocks = config.nr_blocks;"
    },
    {
        "line": 28,
        "fullcodeline": "sbinfo->free_blocks = config.nr_blocks;"
    },
    {
        "line": 29,
        "fullcodeline": "sbinfo->max_inodes = config.nr_inodes;"
    },
    {
        "line": 30,
        "fullcodeline": "sbinfo->free_inodes = config.nr_inodes;"
    },
    {
        "line": 31,
        "fullcodeline": "sb->s_maxbytes = MAX_LFS_FILESIZE;"
    },
    {
        "line": 32,
        "fullcodeline": "sb->s_blocksize = huge_page_size(config.hstate);"
    },
    {
        "line": 33,
        "fullcodeline": "sb->s_blocksize_bits = huge_page_shift(config.hstate);"
    },
    {
        "line": 34,
        "fullcodeline": "sb->s_magic = HUGETLBFS_MAGIC;"
    },
    {
        "line": 35,
        "fullcodeline": "sb->s_op = &hugetlbfs_ops;"
    },
    {
        "line": 36,
        "fullcodeline": "sb->s_time_gran = 1;"
    },
    {
        "line": 37,
        "fullcodeline": "inode = hugetlbfs_get_root(sb, &config);"
    },
    {
        "line": 41,
        "fullcodeline": "root = d_alloc_root(inode);"
    },
    {
        "line": 46,
        "fullcodeline": "sb->s_root = root;"
    },
    {
        "line": 49,
        "fullcodeline": "kfree(sbinfo);"
    },
    {
        "line": 22,
        "fullcodeline": "if (!sbinfo)"
    },
    {
        "line": 38,
        "fullcodeline": "if (!inode)"
    },
    {
        "line": 42,
        "fullcodeline": "if (!root) {"
    },
    {
        "line": 50,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 43,
        "fullcodeline": "iput(inode);"
    },
    {
        "line": 23,
        "fullcodeline": "return -ENOMEM;"
    }
]