[
    {
        "line": 7,
        "fullcodeline": "unsigned long vaddr = *position;"
    },
    {
        "line": 8,
        "fullcodeline": "int remainder = *length;"
    },
    {
        "line": 9,
        "fullcodeline": "struct hstate *h = hstate_vma(vma);"
    },
    {
        "line": 11,
        "fullcodeline": "spin_lock(&mm->page_table_lock);"
    },
    {
        "line": 77,
        "fullcodeline": "spin_unlock(&mm->page_table_lock);"
    },
    {
        "line": 78,
        "fullcodeline": "*length = remainder;"
    },
    {
        "line": 79,
        "fullcodeline": "*position = vaddr;"
    },
    {
        "line": 12,
        "fullcodeline": "while (vaddr < vma->vm_end && remainder) {"
    },
    {
        "line": 81,
        "fullcodeline": "return i ? i : -EFAULT;"
    },
    {
        "line": 22,
        "fullcodeline": "pte = huge_pte_offset(mm, vaddr & huge_page_mask(h));"
    },
    {
        "line": 23,
        "fullcodeline": "absent = !pte || huge_pte_none(huge_ptep_get(pte));"
    },
    {
        "line": 53,
        "fullcodeline": "pfn_offset = (vaddr & ~huge_page_mask(h)) >> PAGE_SHIFT;"
    },
    {
        "line": 54,
        "fullcodeline": "page = pte_page(huge_ptep_get(pte));"
    },
    {
        "line": 64,
        "fullcodeline": "vaddr += PAGE_SIZE;"
    },
    {
        "line": 65,
        "fullcodeline": "++pfn_offset;"
    },
    {
        "line": 66,
        "fullcodeline": "--remainder;"
    },
    {
        "line": 67,
        "fullcodeline": "++i;"
    },
    {
        "line": 32,
        "fullcodeline": "if (absent && (flags & FOLL_DUMP) &&"
    },
    {
        "line": 38,
        "fullcodeline": "if (absent ||"
    },
    {
        "line": 68,
        "fullcodeline": "if (vaddr < vma->vm_end && remainder &&"
    },
    {
        "line": 33,
        "fullcodeline": "!hugetlbfs_pagecache_present(h, vma, vaddr)) {"
    },
    {
        "line": 34,
        "fullcodeline": "remainder = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "((flags & FOLL_WRITE) && !pte_write(huge_ptep_get(pte)))) {"
    },
    {
        "line": 42,
        "fullcodeline": "spin_unlock(&mm->page_table_lock);"
    },
    {
        "line": 43,
        "fullcodeline": "ret = hugetlb_fault(mm, vma, vaddr,"
    },
    {
        "line": 45,
        "fullcodeline": "spin_lock(&mm->page_table_lock);"
    },
    {
        "line": 49,
        "fullcodeline": "remainder = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "pages[i] = mem_map_offset(page, pfn_offset);"
    },
    {
        "line": 58,
        "fullcodeline": "get_page(pages[i]);"
    },
    {
        "line": 62,
        "fullcodeline": "vmas[i] = vma;"
    },
    {
        "line": 69,
        "fullcodeline": "pfn_offset < pages_per_huge_page(h)) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (!(ret & VM_FAULT_ERROR))"
    },
    {
        "line": 44,
        "fullcodeline": "(flags & FOLL_WRITE) ? FAULT_FLAG_WRITE : 0);"
    }
]