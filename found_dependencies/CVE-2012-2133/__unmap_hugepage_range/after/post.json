[
    {
        "line": 4,
        "fullcodeline": "struct mm_struct *mm = vma->vm_mm;"
    },
    {
        "line": 10,
        "fullcodeline": "struct hstate *h = hstate_vma(vma);"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned long sz = huge_page_size(h);"
    },
    {
        "line": 18,
        "fullcodeline": "LIST_HEAD(page_list);"
    },
    {
        "line": 20,
        "fullcodeline": "WARN_ON(!is_vm_hugetlb_page(vma));"
    },
    {
        "line": 21,
        "fullcodeline": "BUG_ON(start & ~huge_page_mask(h));"
    },
    {
        "line": 22,
        "fullcodeline": "BUG_ON(end & ~huge_page_mask(h));"
    },
    {
        "line": 24,
        "fullcodeline": "mmu_notifier_invalidate_range_start(mm, start, end);"
    },
    {
        "line": 25,
        "fullcodeline": "spin_lock(&mm->page_table_lock);"
    },
    {
        "line": 74,
        "fullcodeline": "flush_tlb_range(vma, start, end);"
    },
    {
        "line": 75,
        "fullcodeline": "spin_unlock(&mm->page_table_lock);"
    },
    {
        "line": 76,
        "fullcodeline": "mmu_notifier_invalidate_range_end(mm, start, end);"
    },
    {
        "line": 77,
        "fullcodeline": "list_for_each_entry_safe(page, tmp, &page_list, lru) {"
    },
    {
        "line": 26,
        "fullcodeline": "for (address = start; address < end; address += sz) {"
    },
    {
        "line": 78,
        "fullcodeline": "page_remove_rmap(page);"
    },
    {
        "line": 79,
        "fullcodeline": "list_del(&page->lru);"
    },
    {
        "line": 80,
        "fullcodeline": "put_page(page);"
    },
    {
        "line": 27,
        "fullcodeline": "ptep = huge_pte_offset(mm, address);"
    },
    {
        "line": 55,
        "fullcodeline": "pte = huge_ptep_get_and_clear(mm, address, ptep);"
    },
    {
        "line": 65,
        "fullcodeline": "page = pte_page(pte);"
    },
    {
        "line": 68,
        "fullcodeline": "list_add(&page->lru, &page_list);"
    },
    {
        "line": 28,
        "fullcodeline": "if (!ptep)"
    },
    {
        "line": 31,
        "fullcodeline": "if (huge_pmd_unshare(mm, &address, ptep))"
    },
    {
        "line": 56,
        "fullcodeline": "if (huge_pte_none(pte))"
    },
    {
        "line": 62,
        "fullcodeline": "if (unlikely(is_hugetlb_entry_hwpoisoned(pte)))"
    },
    {
        "line": 66,
        "fullcodeline": "if (pte_dirty(pte))"
    },
    {
        "line": 40,
        "fullcodeline": "pte = huge_ptep_get(ptep);"
    },
    {
        "line": 43,
        "fullcodeline": "page = pte_page(pte);"
    },
    {
        "line": 52,
        "fullcodeline": "set_vma_resv_flags(vma, HPAGE_RESV_UNMAPPED);"
    },
    {
        "line": 67,
        "fullcodeline": "set_page_dirty(page);"
    },
    {
        "line": 41,
        "fullcodeline": "if (huge_pte_none(pte))"
    },
    {
        "line": 44,
        "fullcodeline": "if (page != ref_page)"
    }
]