[
    {
        "line": 4,
        "fullcodeline": "struct hstate *h = hstate_vma(vma);"
    },
    {
        "line": 6,
        "fullcodeline": "struct address_space *mapping = vma->vm_file->f_mapping;"
    },
    {
        "line": 7,
        "fullcodeline": "struct inode *inode = mapping->host;"
    },
    {
        "line": 17,
        "fullcodeline": "chg = vma_needs_reservation(h, vma, addr);"
    },
    {
        "line": 24,
        "fullcodeline": "spin_lock(&hugetlb_lock);"
    },
    {
        "line": 25,
        "fullcodeline": "page = dequeue_huge_page_vma(h, vma, addr, avoid_reserve);"
    },
    {
        "line": 36,
        "fullcodeline": "set_page_private(page, (unsigned long) mapping);"
    },
    {
        "line": 18,
        "fullcodeline": "if (chg < 0)"
    },
    {
        "line": 28,
        "fullcodeline": "if (!page) {"
    },
    {
        "line": 29,
        "fullcodeline": "page = alloc_buddy_huge_page(h, NUMA_NO_NODE);"
    },
    {
        "line": 19,
        "fullcodeline": "return ERR_PTR(-VM_FAULT_OOM);"
    },
    {
        "line": 21,
        "fullcodeline": "if (hugetlb_get_quota(inode->i_mapping, chg))"
    },
    {
        "line": 30,
        "fullcodeline": "if (!page) {"
    },
    {
        "line": 22,
        "fullcodeline": "return ERR_PTR(-VM_FAULT_SIGBUS);"
    },
    {
        "line": 32,
        "fullcodeline": "return ERR_PTR(-VM_FAULT_SIGBUS);"
    }
]