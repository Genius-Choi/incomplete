[
    {
        "line": 3,
        "fullcodeline": "static int dtr_up = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "term_set_hupcl(tty_fd, 0);"
    },
    {
        "line": 14,
        "fullcodeline": "term_flush(tty_fd);"
    },
    {
        "line": 15,
        "fullcodeline": "term_apply(tty_fd);"
    },
    {
        "line": 16,
        "fullcodeline": "term_erase(tty_fd);"
    },
    {
        "line": 19,
        "fullcodeline": "show_status(dtr_up);"
    },
    {
        "line": 22,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** pulse DTR ***\\r\\n\");"
    },
    {
        "line": 32,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** DTR: %s ***\\r\\n\","
    },
    {
        "line": 41,
        "fullcodeline": "term_set_baudrate(tty_fd, opts.baud);"
    },
    {
        "line": 42,
        "fullcodeline": "tty_q.len = 0; term_flush(tty_fd);"
    },
    {
        "line": 43,
        "fullcodeline": "term_apply(tty_fd);"
    },
    {
        "line": 44,
        "fullcodeline": "newbaud = term_get_baudrate(tty_fd, NULL);"
    },
    {
        "line": 51,
        "fullcodeline": "set_tty_write_sz(newbaud);"
    },
    {
        "line": 54,
        "fullcodeline": "opts.flow = flow_next(opts.flow);"
    },
    {
        "line": 55,
        "fullcodeline": "term_set_flowcntrl(tty_fd, opts.flow);"
    },
    {
        "line": 56,
        "fullcodeline": "tty_q.len = 0; term_flush(tty_fd);"
    },
    {
        "line": 57,
        "fullcodeline": "term_apply(tty_fd);"
    },
    {
        "line": 58,
        "fullcodeline": "newflow = term_get_flowcntrl(tty_fd);"
    },
    {
        "line": 68,
        "fullcodeline": "opts.parity = parity_next(opts.parity);"
    },
    {
        "line": 69,
        "fullcodeline": "term_set_parity(tty_fd, opts.parity);"
    },
    {
        "line": 70,
        "fullcodeline": "tty_q.len = 0; term_flush(tty_fd);"
    },
    {
        "line": 71,
        "fullcodeline": "term_apply(tty_fd);"
    },
    {
        "line": 72,
        "fullcodeline": "newparity = term_get_parity(tty_fd);"
    },
    {
        "line": 83,
        "fullcodeline": "opts.databits = bits_next(opts.databits);"
    },
    {
        "line": 84,
        "fullcodeline": "term_set_databits(tty_fd, opts.databits);"
    },
    {
        "line": 85,
        "fullcodeline": "tty_q.len = 0; term_flush(tty_fd);"
    },
    {
        "line": 86,
        "fullcodeline": "term_apply(tty_fd);"
    },
    {
        "line": 87,
        "fullcodeline": "newbits = term_get_databits(tty_fd);"
    },
    {
        "line": 97,
        "fullcodeline": "opts.lecho = ! opts.lecho;"
    },
    {
        "line": 98,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** local echo: %s ***\\r\\n\","
    },
    {
        "line": 108,
        "fullcodeline": "fname = read_filename();"
    },
    {
        "line": 113,
        "fullcodeline": "run_cmd(tty_fd, xfr_cmd, fname);"
    },
    {
        "line": 114,
        "fullcodeline": "free(fname);"
    },
    {
        "line": 117,
        "fullcodeline": "term_break(tty_fd);"
    },
    {
        "line": 118,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** break sent ***\\r\\n\");"
    },
    {
        "line": 23,
        "fullcodeline": "if ( term_pulse_dtr(tty_fd) < 0 )"
    },
    {
        "line": 31,
        "fullcodeline": "if ( r >= 0 ) dtr_up = ! dtr_up;"
    },
    {
        "line": 33,
        "fullcodeline": "dtr_up ? \"up\" : \"down\");"
    },
    {
        "line": 37,
        "fullcodeline": "if (c == KEY_BAUD_UP)"
    },
    {
        "line": 45,
        "fullcodeline": "if ( opts.baud != newbaud ) {"
    },
    {
        "line": 59,
        "fullcodeline": "if ( opts.flow != newflow ) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (opts.parity != newparity ) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (opts.databits != newbits ) {"
    },
    {
        "line": 99,
        "fullcodeline": "opts.lecho ? \"yes\" : \"no\");"
    },
    {
        "line": 104,
        "fullcodeline": "if ( xfr_cmd[0] == '\\0' ) {"
    },
    {
        "line": 109,
        "fullcodeline": "if (fname == NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "fd_printf(STO, \"*** FAILED\\r\\n\");"
    },
    {
        "line": 28,
        "fullcodeline": "r = term_lower_dtr(tty_fd);"
    },
    {
        "line": 38,
        "fullcodeline": "opts.baud = baud_up(opts.baud);"
    },
    {
        "line": 46,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** baud: %d (%d) ***\\r\\n\","
    },
    {
        "line": 60,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** flow: %s (%s) ***\\r\\n\","
    },
    {
        "line": 74,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** parity: %s (%s) ***\\r\\n\","
    },
    {
        "line": 89,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** databits: %d (%d) ***\\r\\n\","
    },
    {
        "line": 103,
        "fullcodeline": "xfr_cmd = (c == KEY_SEND) ? opts.send_cmd : opts.receive_cmd;"
    },
    {
        "line": 105,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** command disabled ***\\r\\n\");"
    },
    {
        "line": 110,
        "fullcodeline": "fd_printf(STO, \"*** cannot read filename ***\\r\\n\");"
    },
    {
        "line": 30,
        "fullcodeline": "r = term_raise_dtr(tty_fd);"
    },
    {
        "line": 40,
        "fullcodeline": "opts.baud = baud_down(opts.baud);"
    },
    {
        "line": 49,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** baud: %d ***\\r\\n\", opts.baud);"
    },
    {
        "line": 63,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** flow: %s ***\\r\\n\","
    },
    {
        "line": 78,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** parity: %s ***\\r\\n\","
    },
    {
        "line": 92,
        "fullcodeline": "fd_printf(STO, \"\\r\\n*** databits: %d ***\\r\\n\","
    }
]