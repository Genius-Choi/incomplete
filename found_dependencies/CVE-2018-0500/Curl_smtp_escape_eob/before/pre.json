[
    {
        "line": 11,
        "fullcodeline": "struct Curl_easy *data = conn->data;"
    },
    {
        "line": 12,
        "fullcodeline": "struct SMTP *smtp = data->req.protop;"
    },
    {
        "line": 13,
        "fullcodeline": "char *scratch = data->state.scratch;"
    },
    {
        "line": 14,
        "fullcodeline": "char *newscratch = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "char *oldscratch = NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "eob_sent = smtp->eob;"
    },
    {
        "line": 19,
        "fullcodeline": "if(!scratch || data->set.crlf) {"
    },
    {
        "line": 35,
        "fullcodeline": "for(i = 0, si = 0; i < nread; i++) {"
    },
    {
        "line": 75,
        "fullcodeline": "if(smtp->eob - eob_sent) {"
    },
    {
        "line": 82,
        "fullcodeline": "if(si != nread) {"
    },
    {
        "line": 20,
        "fullcodeline": "oldscratch = scratch;"
    },
    {
        "line": 22,
        "fullcodeline": "scratch = newscratch = malloc(2 * data->set.buffer_size);"
    },
    {
        "line": 78,
        "fullcodeline": "si += smtp->eob - eob_sent;"
    },
    {
        "line": 23,
        "fullcodeline": "if(!newscratch) {"
    },
    {
        "line": 36,
        "fullcodeline": "if(SMTP_EOB[smtp->eob] == data->req.upload_fromhere[i]) {"
    },
    {
        "line": 63,
        "fullcodeline": "if(SMTP_EOB_FIND_LEN == smtp->eob) {"
    },
    {
        "line": 77,
        "fullcodeline": "memcpy(&scratch[si], &SMTP_EOB[eob_sent], smtp->eob - eob_sent);"
    },
    {
        "line": 24,
        "fullcodeline": "failf(data, \"Failed to alloc scratch buffer!\");"
    },
    {
        "line": 37,
        "fullcodeline": "smtp->eob++;"
    },
    {
        "line": 65,
        "fullcodeline": "memcpy(&scratch[si], &SMTP_EOB_REPL[eob_sent],"
    },
    {
        "line": 67,
        "fullcodeline": "si += SMTP_EOB_REPL_LEN - eob_sent;"
    },
    {
        "line": 68,
        "fullcodeline": "smtp->eob = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "eob_sent = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "SMTP_EOB_REPL_LEN - eob_sent);"
    },
    {
        "line": 40,
        "fullcodeline": "if(2 == smtp->eob || SMTP_EOB_LEN == smtp->eob)"
    },
    {
        "line": 41,
        "fullcodeline": "smtp->trailing_crlf = TRUE;"
    },
    {
        "line": 71,
        "fullcodeline": "else if(!smtp->eob)"
    },
    {
        "line": 47,
        "fullcodeline": "memcpy(&scratch[si], &SMTP_EOB[eob_sent], smtp->eob - eob_sent);"
    },
    {
        "line": 48,
        "fullcodeline": "si += smtp->eob - eob_sent;"
    },
    {
        "line": 56,
        "fullcodeline": "eob_sent = 0;"
    },
    {
        "line": 72,
        "fullcodeline": "scratch[si++] = data->req.upload_fromhere[i];"
    },
    {
        "line": 51,
        "fullcodeline": "if(SMTP_EOB[0] == data->req.upload_fromhere[i])"
    },
    {
        "line": 52,
        "fullcodeline": "smtp->eob = 1;"
    },
    {
        "line": 54,
        "fullcodeline": "smtp->eob = 0;"
    }
]