[
    {
        "line": 11,
        "fullcodeline": "struct Curl_easy *data = conn->data;"
    },
    {
        "line": 14,
        "fullcodeline": "char *newscratch = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "char *oldscratch = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "DEBUGASSERT(UPLOAD_BUFSIZE >= nread);"
    },
    {
        "line": 32,
        "fullcodeline": "eob_sent = smtp->eob;"
    },
    {
        "line": 19,
        "fullcodeline": "if(!scratch || data->set.crlf) {"
    },
    {
        "line": 36,
        "fullcodeline": "for(i = 0, si = 0; i < nread; i++) {"
    },
    {
        "line": 76,
        "fullcodeline": "if(smtp->eob - eob_sent) {"
    },
    {
        "line": 83,
        "fullcodeline": "if(si != nread) {"
    },
    {
        "line": 20,
        "fullcodeline": "oldscratch = scratch;"
    },
    {
        "line": 22,
        "fullcodeline": "scratch = newscratch = malloc(2 * UPLOAD_BUFSIZE);"
    },
    {
        "line": 78,
        "fullcodeline": "memcpy(&scratch[si], &SMTP_EOB[eob_sent], smtp->eob - eob_sent);"
    },
    {
        "line": 79,
        "fullcodeline": "si += smtp->eob - eob_sent;"
    },
    {
        "line": 85,
        "fullcodeline": "data->req.upload_fromhere = scratch;"
    },
    {
        "line": 88,
        "fullcodeline": "data->state.scratch = scratch;"
    },
    {
        "line": 91,
        "fullcodeline": "free(oldscratch);"
    },
    {
        "line": 94,
        "fullcodeline": "data->req.upload_present = si;"
    },
    {
        "line": 23,
        "fullcodeline": "if(!newscratch) {"
    },
    {
        "line": 37,
        "fullcodeline": "if(SMTP_EOB[smtp->eob] == data->req.upload_fromhere[i]) {"
    },
    {
        "line": 64,
        "fullcodeline": "if(SMTP_EOB_FIND_LEN == smtp->eob) {"
    },
    {
        "line": 97,
        "fullcodeline": "free(newscratch);"
    },
    {
        "line": 24,
        "fullcodeline": "failf(data, \"Failed to alloc scratch buffer!\");"
    },
    {
        "line": 38,
        "fullcodeline": "smtp->eob++;"
    },
    {
        "line": 66,
        "fullcodeline": "memcpy(&scratch[si], &SMTP_EOB_REPL[eob_sent],"
    },
    {
        "line": 68,
        "fullcodeline": "si += SMTP_EOB_REPL_LEN - eob_sent;"
    },
    {
        "line": 69,
        "fullcodeline": "smtp->eob = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "eob_sent = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "if(2 == smtp->eob || SMTP_EOB_LEN == smtp->eob)"
    },
    {
        "line": 67,
        "fullcodeline": "SMTP_EOB_REPL_LEN - eob_sent);"
    },
    {
        "line": 42,
        "fullcodeline": "smtp->trailing_crlf = TRUE;"
    },
    {
        "line": 72,
        "fullcodeline": "else if(!smtp->eob)"
    },
    {
        "line": 44,
        "fullcodeline": "smtp->trailing_crlf = FALSE;"
    },
    {
        "line": 48,
        "fullcodeline": "memcpy(&scratch[si], &SMTP_EOB[eob_sent], smtp->eob - eob_sent);"
    },
    {
        "line": 49,
        "fullcodeline": "si += smtp->eob - eob_sent;"
    },
    {
        "line": 57,
        "fullcodeline": "eob_sent = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "smtp->trailing_crlf = FALSE;"
    },
    {
        "line": 73,
        "fullcodeline": "scratch[si++] = data->req.upload_fromhere[i];"
    },
    {
        "line": 52,
        "fullcodeline": "if(SMTP_EOB[0] == data->req.upload_fromhere[i])"
    },
    {
        "line": 53,
        "fullcodeline": "smtp->eob = 1;"
    },
    {
        "line": 55,
        "fullcodeline": "smtp->eob = 0;"
    }
]