[
    {
        "line": 4,
        "fullcodeline": "u_int caplen = h->caplen;"
    },
    {
        "line": 8,
        "fullcodeline": "uint16_t panid = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "hdrlen = 3;"
    },
    {
        "line": 16,
        "fullcodeline": "fc = EXTRACT_LE_16BITS(p);"
    },
    {
        "line": 17,
        "fullcodeline": "seq = EXTRACT_LE_8BITS(p + 2);"
    },
    {
        "line": 19,
        "fullcodeline": "p += 3;"
    },
    {
        "line": 20,
        "fullcodeline": "caplen -= 3;"
    },
    {
        "line": 10,
        "fullcodeline": "if (caplen < 3) {"
    },
    {
        "line": 22,
        "fullcodeline": "ND_PRINT((ndo,\"IEEE 802.15.4 %s packet \", ftypes[FC_FRAME_TYPE(fc)]));"
    },
    {
        "line": 29,
        "fullcodeline": "switch (FC_DEST_ADDRESSING_MODE(fc)) {"
    },
    {
        "line": 92,
        "fullcodeline": "switch (FC_SRC_ADDRESSING_MODE(fc)) {"
    },
    {
        "line": 11,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    },
    {
        "line": 52,
        "fullcodeline": "panid = EXTRACT_LE_16BITS(p);"
    },
    {
        "line": 53,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 54,
        "fullcodeline": "caplen -= 2;"
    },
    {
        "line": 55,
        "fullcodeline": "hdrlen += 2;"
    },
    {
        "line": 62,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 63,
        "fullcodeline": "caplen -= 2;"
    },
    {
        "line": 64,
        "fullcodeline": "hdrlen += 2;"
    },
    {
        "line": 71,
        "fullcodeline": "panid = EXTRACT_LE_16BITS(p);"
    },
    {
        "line": 72,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 73,
        "fullcodeline": "caplen -= 2;"
    },
    {
        "line": 74,
        "fullcodeline": "hdrlen += 2;"
    },
    {
        "line": 81,
        "fullcodeline": "p += 8;"
    },
    {
        "line": 82,
        "fullcodeline": "caplen -= 8;"
    },
    {
        "line": 83,
        "fullcodeline": "hdrlen += 8;"
    },
    {
        "line": 123,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 124,
        "fullcodeline": "caplen -= 2;"
    },
    {
        "line": 125,
        "fullcodeline": "hdrlen += 2;"
    },
    {
        "line": 149,
        "fullcodeline": "p += 8;"
    },
    {
        "line": 150,
        "fullcodeline": "caplen -= 8;"
    },
    {
        "line": 151,
        "fullcodeline": "hdrlen += 8;"
    },
    {
        "line": 24,
        "fullcodeline": "ND_PRINT((ndo,\"seq %02x \", seq));"
    },
    {
        "line": 31,
        "fullcodeline": "if (fc & FC_PAN_ID_COMPRESSION) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (caplen < 2) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (caplen < 2) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (caplen < 2) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (caplen < 8) {"
    },
    {
        "line": 87,
        "fullcodeline": "ND_PRINT((ndo,\"< \"));"
    },
    {
        "line": 117,
        "fullcodeline": "if (caplen < 2) {"
    },
    {
        "line": 143,
        "fullcodeline": "if (caplen < 8) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (!(fc & FC_PAN_ID_COMPRESSION)) {"
    },
    {
        "line": 112,
        "fullcodeline": "panid = EXTRACT_LE_16BITS(p);"
    },
    {
        "line": 113,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 114,
        "fullcodeline": "caplen -= 2;"
    },
    {
        "line": 115,
        "fullcodeline": "hdrlen += 2;"
    },
    {
        "line": 128,
        "fullcodeline": "if (!(fc & FC_PAN_ID_COMPRESSION)) {"
    },
    {
        "line": 138,
        "fullcodeline": "panid = EXTRACT_LE_16BITS(p);"
    },
    {
        "line": 139,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 140,
        "fullcodeline": "caplen -= 2;"
    },
    {
        "line": 141,
        "fullcodeline": "hdrlen += 2;"
    },
    {
        "line": 37,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    },
    {
        "line": 41,
        "fullcodeline": "ND_PRINT((ndo,\"none \"));"
    },
    {
        "line": 45,
        "fullcodeline": "ND_PRINT((ndo,\"reserved destination addressing mode\"));"
    },
    {
        "line": 49,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    },
    {
        "line": 57,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    },
    {
        "line": 61,
        "fullcodeline": "ND_PRINT((ndo,\"%04x:%04x \", panid, EXTRACT_LE_16BITS(p + 2)));"
    },
    {
        "line": 68,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    },
    {
        "line": 76,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    },
    {
        "line": 80,
        "fullcodeline": "ND_PRINT((ndo,\"%04x:%s \", panid, le64addr_string(ndo, p)));"
    },
    {
        "line": 95,
        "fullcodeline": "ND_PRINT((ndo,\"none \"));"
    },
    {
        "line": 99,
        "fullcodeline": "ND_PRINT((ndo,\"reserved source addressing mode\"));"
    },
    {
        "line": 108,
        "fullcodeline": "if (caplen < 2) {"
    },
    {
        "line": 118,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    },
    {
        "line": 122,
        "fullcodeline": "ND_PRINT((ndo,\"%04x:%04x \", panid, EXTRACT_LE_16BITS(p)));"
    },
    {
        "line": 134,
        "fullcodeline": "if (caplen < 2) {"
    },
    {
        "line": 144,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    },
    {
        "line": 148,
        "fullcodeline": "ND_PRINT((ndo,\"%04x:%s \", panid, le64addr_string(ndo, p)));"
    },
    {
        "line": 109,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    },
    {
        "line": 135,
        "fullcodeline": "ND_PRINT((ndo, \"[|802.15.4]\"));"
    }
]