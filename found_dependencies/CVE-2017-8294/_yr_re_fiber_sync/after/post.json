[
    {
        "line": 11,
        "fullcodeline": "RE_SPLIT_ID_TYPE splits_executed[RE_MAX_SPLIT_ID];"
    },
    {
        "line": 12,
        "fullcodeline": "RE_SPLIT_ID_TYPE splits_executed_count = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "fiber = fiber_to_sync;"
    },
    {
        "line": 28,
        "fullcodeline": "prev = fiber_to_sync->prev;"
    },
    {
        "line": 29,
        "fullcodeline": "last = fiber_to_sync->next;"
    },
    {
        "line": 31,
        "fullcodeline": "while(fiber != last)"
    },
    {
        "line": 41,
        "fullcodeline": "split_already_executed = FALSE;"
    },
    {
        "line": 94,
        "fullcodeline": "repeat_args = (RE_REPEAT_ARGS*)(fiber->ip + 1);"
    },
    {
        "line": 95,
        "fullcodeline": "assert(repeat_args->max > 0);"
    },
    {
        "line": 96,
        "fullcodeline": "branch_a = fiber;"
    },
    {
        "line": 109,
        "fullcodeline": "branch_a->stack[++branch_a->sp] = 0;"
    },
    {
        "line": 110,
        "fullcodeline": "branch_a->ip += (1 + sizeof(RE_REPEAT_ARGS));"
    },
    {
        "line": 116,
        "fullcodeline": "repeat_args = (RE_REPEAT_ARGS*)(fiber->ip + 1);"
    },
    {
        "line": 117,
        "fullcodeline": "fiber->stack[fiber->sp]++;"
    },
    {
        "line": 125,
        "fullcodeline": "branch_a = fiber;"
    },
    {
        "line": 139,
        "fullcodeline": "branch_a->ip += (1 + sizeof(RE_REPEAT_ARGS));"
    },
    {
        "line": 145,
        "fullcodeline": "repeat_any_args = (RE_REPEAT_ANY_ARGS*)(fiber->ip + 1);"
    },
    {
        "line": 202,
        "fullcodeline": "fiber->ip += *(int16_t*)(fiber->ip + 1);"
    },
    {
        "line": 44,
        "fullcodeline": "splits_executed_idx < splits_executed_count;"
    },
    {
        "line": 45,
        "fullcodeline": "splits_executed_idx++)"
    },
    {
        "line": 98,
        "fullcodeline": "if (repeat_args->min == 0)"
    },
    {
        "line": 119,
        "fullcodeline": "if (fiber->stack[fiber->sp] < repeat_args->min)"
    },
    {
        "line": 127,
        "fullcodeline": "if (fiber->stack[fiber->sp] < repeat_args->max)"
    },
    {
        "line": 151,
        "fullcodeline": "if (fiber->rc == -1)"
    },
    {
        "line": 154,
        "fullcodeline": "if (fiber->rc < repeat_any_args->min)"
    },
    {
        "line": 206,
        "fullcodeline": "if (_yr_re_fiber_exists(fiber_list, fiber, prev))"
    },
    {
        "line": 40,
        "fullcodeline": "split_id = *(RE_SPLIT_ID_TYPE*)(fiber->ip + 1);"
    },
    {
        "line": 43,
        "fullcodeline": "for (splits_executed_idx = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "fiber = _yr_re_fiber_kill(fiber_list, fiber_pool, fiber);"
    },
    {
        "line": 100,
        "fullcodeline": "FAIL_ON_ERROR(_yr_re_fiber_split("
    },
    {
        "line": 106,
        "fullcodeline": "branch_b->ip += repeat_args->offset;"
    },
    {
        "line": 121,
        "fullcodeline": "fiber->ip += repeat_args->offset;"
    },
    {
        "line": 129,
        "fullcodeline": "FAIL_ON_ERROR(_yr_re_fiber_split("
    },
    {
        "line": 135,
        "fullcodeline": "branch_a->sp--;"
    },
    {
        "line": 136,
        "fullcodeline": "branch_b->ip += repeat_args->offset;"
    },
    {
        "line": 152,
        "fullcodeline": "fiber->rc = 0;"
    },
    {
        "line": 161,
        "fullcodeline": "fiber->rc++;"
    },
    {
        "line": 162,
        "fullcodeline": "fiber = fiber->next;"
    },
    {
        "line": 207,
        "fullcodeline": "fiber = _yr_re_fiber_kill(fiber_list, fiber_pool, fiber);"
    },
    {
        "line": 47,
        "fullcodeline": "if (split_id == splits_executed[splits_executed_idx])"
    },
    {
        "line": 60,
        "fullcodeline": "branch_a = fiber;"
    },
    {
        "line": 62,
        "fullcodeline": "FAIL_ON_ERROR(_yr_re_fiber_split("
    },
    {
        "line": 75,
        "fullcodeline": "branch_a->ip += (sizeof(RE_SPLIT_ID_TYPE) + 3);"
    },
    {
        "line": 80,
        "fullcodeline": "branch_b->ip += *(int16_t*)("
    },
    {
        "line": 85,
        "fullcodeline": "splits_executed[splits_executed_count] = split_id;"
    },
    {
        "line": 86,
        "fullcodeline": "splits_executed_count++;"
    },
    {
        "line": 209,
        "fullcodeline": "fiber = fiber->next;"
    },
    {
        "line": 49,
        "fullcodeline": "split_already_executed = TRUE;"
    },
    {
        "line": 164,
        "fullcodeline": "else if (fiber->rc < repeat_any_args->max)"
    },
    {
        "line": 171,
        "fullcodeline": "next = fiber->next;"
    },
    {
        "line": 172,
        "fullcodeline": "branch_a = fiber;"
    },
    {
        "line": 174,
        "fullcodeline": "FAIL_ON_ERROR(_yr_re_fiber_split("
    },
    {
        "line": 180,
        "fullcodeline": "branch_a->rc++;"
    },
    {
        "line": 181,
        "fullcodeline": "branch_b->ip += (1 + sizeof(RE_REPEAT_ANY_ARGS));"
    },
    {
        "line": 182,
        "fullcodeline": "branch_b->rc = -1;"
    },
    {
        "line": 184,
        "fullcodeline": "_yr_re_fiber_sync(fiber_list, fiber_pool, branch_b);"
    },
    {
        "line": 186,
        "fullcodeline": "fiber = next;"
    },
    {
        "line": 81,
        "fullcodeline": "branch_b->ip"
    },
    {
        "line": 195,
        "fullcodeline": "fiber->ip += (1 + sizeof(RE_REPEAT_ANY_ARGS));"
    },
    {
        "line": 196,
        "fullcodeline": "fiber->rc = -1;"
    }
]