[
    {
        "line": 7,
        "fullcodeline": "int64_t mem[MEM_SIZE];"
    },
    {
        "line": 8,
        "fullcodeline": "int32_t sp = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "uint8_t* ip = rules->code_start;"
    },
    {
        "line": 11,
        "fullcodeline": "YR_VALUE args[MAX_FUNCTION_ARGS];"
    },
    {
        "line": 31,
        "fullcodeline": "int result = ERROR_SUCCESS;"
    },
    {
        "line": 32,
        "fullcodeline": "int stop = FALSE;"
    },
    {
        "line": 33,
        "fullcodeline": "int cycle = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "int tidx = context->tidx;"
    },
    {
        "line": 41,
        "fullcodeline": "yr_get_configuration(YR_CONFIG_STACK_SIZE, (void*) &stack_size);"
    },
    {
        "line": 43,
        "fullcodeline": "stack = (YR_VALUE*) yr_malloc(stack_size * sizeof(YR_VALUE));"
    },
    {
        "line": 984,
        "fullcodeline": "yr_modules_unload_all(context);"
    },
    {
        "line": 985,
        "fullcodeline": "yr_free(stack);"
    },
    {
        "line": 45,
        "fullcodeline": "if (stack == NULL)"
    },
    {
        "line": 48,
        "fullcodeline": "while(!stop)"
    },
    {
        "line": 981,
        "fullcodeline": "ip++;"
    },
    {
        "line": 961,
        "fullcodeline": "if (timeout > 0)  // timeout == 0 means no timeout"
    },
    {
        "line": 53,
        "fullcodeline": "assert(sp == 0); // When HALT is reached the stack should be empty."
    },
    {
        "line": 54,
        "fullcodeline": "stop = TRUE;"
    },
    {
        "line": 59,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 60,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 64,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 69,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 70,
        "fullcodeline": "mem[r1.i] = 0;"
    },
    {
        "line": 75,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 76,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 83,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 84,
        "fullcodeline": "mem[r1.i]++;"
    },
    {
        "line": 89,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 90,
        "fullcodeline": "r1.i = mem[r1.i];"
    },
    {
        "line": 91,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 96,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 97,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 98,
        "fullcodeline": "mem[r1.i] = r2.i;"
    },
    {
        "line": 103,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 104,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 118,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 119,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 121,
        "fullcodeline": "ip = jmp_if(!is_undef(r1), ip);"
    },
    {
        "line": 125,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 126,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 127,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 128,
        "fullcodeline": "push(r2);"
    },
    {
        "line": 130,
        "fullcodeline": "ip = jmp_if(r1.i <= r2.i, ip);"
    },
    {
        "line": 134,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 135,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 137,
        "fullcodeline": "ip = jmp_if(!is_undef(r1) && r1.i, ip);"
    },
    {
        "line": 141,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 142,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 144,
        "fullcodeline": "ip = jmp_if(is_undef(r1) || !r1.i, ip);"
    },
    {
        "line": 148,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 149,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 156,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 160,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 161,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 179,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 186,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 190,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 191,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 192,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 193,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 198,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 202,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 203,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 204,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 205,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 206,
        "fullcodeline": "r1.i = r1.i >> r2.i;"
    },
    {
        "line": 207,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 211,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 212,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 213,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 214,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 215,
        "fullcodeline": "r1.i = r1.i << r2.i;"
    },
    {
        "line": 216,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 220,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 221,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 222,
        "fullcodeline": "r1.i = ~r1.i;"
    },
    {
        "line": 223,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 227,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 228,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 229,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 230,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 231,
        "fullcodeline": "r1.i = r1.i & r2.i;"
    },
    {
        "line": 232,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 236,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 237,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 238,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 239,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 240,
        "fullcodeline": "r1.i = r1.i | r2.i;"
    },
    {
        "line": 241,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 245,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 246,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 247,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 248,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 249,
        "fullcodeline": "r1.i = r1.i ^ r2.i;"
    },
    {
        "line": 250,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 255,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 256,
        "fullcodeline": "r1.i = rule->t_flags[tidx] & RULE_TFLAGS_MATCH ? 1 : 0;"
    },
    {
        "line": 257,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 264,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 268,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 270,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 285,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 287,
        "fullcodeline": "r1.o = (YR_OBJECT*) yr_hash_table_lookup("
    },
    {
        "line": 292,
        "fullcodeline": "assert(r1.o != NULL);"
    },
    {
        "line": 293,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 298,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 300,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 301,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 303,
        "fullcodeline": "r1.o = yr_object_lookup_field(r1.o, identifier);"
    },
    {
        "line": 305,
        "fullcodeline": "assert(r1.o != NULL);"
    },
    {
        "line": 306,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 310,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 311,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 337,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 341,
        "fullcodeline": "pop(r1);  // index"
    },
    {
        "line": 342,
        "fullcodeline": "pop(r2);  // array"
    },
    {
        "line": 344,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 345,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 346,
        "fullcodeline": "assert(r2.o->type == OBJECT_TYPE_ARRAY);"
    },
    {
        "line": 348,
        "fullcodeline": "r1.o = yr_object_array_get_item(r2.o, 0, (int) r1.i);"
    },
    {
        "line": 353,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 357,
        "fullcodeline": "pop(r1);  // key"
    },
    {
        "line": 358,
        "fullcodeline": "pop(r2);  // dictionary"
    },
    {
        "line": 360,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 361,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 362,
        "fullcodeline": "assert(r2.o->type == OBJECT_TYPE_DICTIONARY);"
    },
    {
        "line": 364,
        "fullcodeline": "r1.o = yr_object_dict_get_item("
    },
    {
        "line": 370,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 375,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 377,
        "fullcodeline": "i = (int) strlen(args_fmt);"
    },
    {
        "line": 378,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 393,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 394,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 406,
        "fullcodeline": "function = (YR_OBJECT_FUNCTION*) r2.o;"
    },
    {
        "line": 407,
        "fullcodeline": "result = ERROR_INTERNAL_FATAL_ERROR;"
    },
    {
        "line": 421,
        "fullcodeline": "assert(i < MAX_OVERLOADED_FUNCTIONS);"
    },
    {
        "line": 436,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 437,
        "fullcodeline": "r1.i = r1.s->matches[tidx].tail != NULL ? 1 : 0;"
    },
    {
        "line": 438,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 442,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 443,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 453,
        "fullcodeline": "r3.i = FALSE;"
    },
    {
        "line": 469,
        "fullcodeline": "push(r3);"
    },
    {
        "line": 473,
        "fullcodeline": "pop(r3);"
    },
    {
        "line": 474,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 475,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 477,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 478,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 481,
        "fullcodeline": "r3.i = FALSE;"
    },
    {
        "line": 497,
        "fullcodeline": "push(r3);"
    },
    {
        "line": 501,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 503,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 507,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 508,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 510,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 513,
        "fullcodeline": "i = 1;"
    },
    {
        "line": 514,
        "fullcodeline": "r3.i = UNDEFINED;"
    },
    {
        "line": 525,
        "fullcodeline": "push(r3);"
    },
    {
        "line": 529,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 530,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 532,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 535,
        "fullcodeline": "i = 1;"
    },
    {
        "line": 536,
        "fullcodeline": "r3.i = UNDEFINED;"
    },
    {
        "line": 547,
        "fullcodeline": "push(r3);"
    },
    {
        "line": 551,
        "fullcodeline": "found = 0;"
    },
    {
        "line": 552,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 553,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 563,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 570,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 574,
        "fullcodeline": "r1.i = context->file_size;"
    },
    {
        "line": 575,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 579,
        "fullcodeline": "r1.i = context->entry_point;"
    },
    {
        "line": 580,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 584,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 585,
        "fullcodeline": "r1.i = read_int8_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 586,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 590,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 591,
        "fullcodeline": "r1.i = read_int16_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 592,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 596,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 597,
        "fullcodeline": "r1.i = read_int32_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 598,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 602,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 603,
        "fullcodeline": "r1.i = read_uint8_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 604,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 608,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 609,
        "fullcodeline": "r1.i = read_uint16_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 610,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 614,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 615,
        "fullcodeline": "r1.i = read_uint32_t_little_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 616,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 620,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 621,
        "fullcodeline": "r1.i = read_int8_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 622,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 626,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 627,
        "fullcodeline": "r1.i = read_int16_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 628,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 632,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 633,
        "fullcodeline": "r1.i = read_int32_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 634,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 638,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 639,
        "fullcodeline": "r1.i = read_uint8_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 640,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 644,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 645,
        "fullcodeline": "r1.i = read_uint16_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 646,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 650,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 651,
        "fullcodeline": "r1.i = read_uint32_t_big_endian(context->iterator, (size_t) r1.i);"
    },
    {
        "line": 652,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 656,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 657,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 659,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 660,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 662,
        "fullcodeline": "r1.i = memmem(r1.ss->c_string, r1.ss->length,"
    },
    {
        "line": 664,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 669,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 671,
        "fullcodeline": "result = yr_modules_load((char*) r1.p, context);"
    },
    {
        "line": 680,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 681,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 683,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 684,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 693,
        "fullcodeline": "r1.i = yr_re_exec("
    },
    {
        "line": 701,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 706,
        "fullcodeline": "ip += sizeof(uint64_t);"
    },
    {
        "line": 707,
        "fullcodeline": "r2 = stack[sp - r1.i];"
    },
    {
        "line": 715,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 716,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 717,
        "fullcodeline": "r1.i = r1.ss->length > 0;"
    },
    {
        "line": 718,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 722,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 723,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 724,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 725,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 726,
        "fullcodeline": "r1.i = r1.i == r2.i;"
    },
    {
        "line": 727,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 731,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 732,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 733,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 734,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 735,
        "fullcodeline": "r1.i = r1.i != r2.i;"
    },
    {
        "line": 736,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 740,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 741,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 742,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 743,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 744,
        "fullcodeline": "r1.i = r1.i < r2.i;"
    },
    {
        "line": 745,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 749,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 750,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 751,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 752,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 753,
        "fullcodeline": "r1.i = r1.i > r2.i;"
    },
    {
        "line": 754,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 758,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 759,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 760,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 761,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 762,
        "fullcodeline": "r1.i = r1.i <= r2.i;"
    },
    {
        "line": 763,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 767,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 768,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 769,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 770,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 771,
        "fullcodeline": "r1.i = r1.i >= r2.i;"
    },
    {
        "line": 772,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 776,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 777,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 778,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 779,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 780,
        "fullcodeline": "r1.i = r1.i + r2.i;"
    },
    {
        "line": 781,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 785,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 786,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 787,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 788,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 789,
        "fullcodeline": "r1.i = r1.i - r2.i;"
    },
    {
        "line": 790,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 794,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 795,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 796,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 797,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 798,
        "fullcodeline": "r1.i = r1.i * r2.i;"
    },
    {
        "line": 799,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 803,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 804,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 805,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 806,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 811,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 815,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 816,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 817,
        "fullcodeline": "r1.i = -r1.i;"
    },
    {
        "line": 818,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 822,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 823,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 824,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 825,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 826,
        "fullcodeline": "r1.i = r1.d < r2.d;"
    },
    {
        "line": 827,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 831,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 832,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 833,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 834,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 835,
        "fullcodeline": "r1.i = r1.d > r2.d;"
    },
    {
        "line": 836,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 840,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 841,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 842,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 843,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 844,
        "fullcodeline": "r1.i = r1.d <= r2.d;"
    },
    {
        "line": 845,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 849,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 850,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 851,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 852,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 853,
        "fullcodeline": "r1.i = r1.d >= r2.d;"
    },
    {
        "line": 854,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 858,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 859,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 860,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 861,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 862,
        "fullcodeline": "r1.i = r1.d == r2.d;"
    },
    {
        "line": 863,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 867,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 868,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 869,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 870,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 871,
        "fullcodeline": "r1.i = r1.d != r2.d;"
    },
    {
        "line": 872,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 876,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 877,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 878,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 879,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 880,
        "fullcodeline": "r1.d = r1.d + r2.d;"
    },
    {
        "line": 881,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 885,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 886,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 887,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 888,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 889,
        "fullcodeline": "r1.d = r1.d - r2.d;"
    },
    {
        "line": 890,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 894,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 895,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 896,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 897,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 898,
        "fullcodeline": "r1.d = r1.d * r2.d;"
    },
    {
        "line": 899,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 903,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 904,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 905,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 906,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 907,
        "fullcodeline": "r1.d = r1.d / r2.d;"
    },
    {
        "line": 908,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 912,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 913,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 914,
        "fullcodeline": "r1.d = -r1.d;"
    },
    {
        "line": 915,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 925,
        "fullcodeline": "pop(r2);"
    },
    {
        "line": 926,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 928,
        "fullcodeline": "ensure_defined(r1);"
    },
    {
        "line": 929,
        "fullcodeline": "ensure_defined(r2);"
    },
    {
        "line": 953,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 958,
        "fullcodeline": "assert(FALSE);"
    },
    {
        "line": 77,
        "fullcodeline": "if (!is_undef(r2))"
    },
    {
        "line": 106,
        "fullcodeline": "if (is_undef(r2))"
    },
    {
        "line": 151,
        "fullcodeline": "if (is_undef(r1) || is_undef(r2))"
    },
    {
        "line": 163,
        "fullcodeline": "if (is_undef(r1))"
    },
    {
        "line": 181,
        "fullcodeline": "if (is_undef(r1))"
    },
    {
        "line": 194,
        "fullcodeline": "if (r2.i != 0)"
    },
    {
        "line": 272,
        "fullcodeline": "if (!is_undef(r1) && r1.i)"
    },
    {
        "line": 350,
        "fullcodeline": "if (r1.o == NULL)"
    },
    {
        "line": 367,
        "fullcodeline": "if (r1.o == NULL)"
    },
    {
        "line": 382,
        "fullcodeline": "while (i > 0)"
    },
    {
        "line": 396,
        "fullcodeline": "if (count > 0)"
    },
    {
        "line": 409,
        "fullcodeline": "for (i = 0; i < MAX_OVERLOADED_FUNCTIONS; i++)"
    },
    {
        "line": 423,
        "fullcodeline": "if (result == ERROR_SUCCESS)"
    },
    {
        "line": 445,
        "fullcodeline": "if (is_undef(r1))"
    },
    {
        "line": 455,
        "fullcodeline": "while (match != NULL)"
    },
    {
        "line": 483,
        "fullcodeline": "while (match != NULL && !r3.i)"
    },
    {
        "line": 516,
        "fullcodeline": "while (match != NULL && r3.i == UNDEFINED)"
    },
    {
        "line": 538,
        "fullcodeline": "while (match != NULL && r3.i == UNDEFINED)"
    },
    {
        "line": 555,
        "fullcodeline": "while (!is_undef(r1))"
    },
    {
        "line": 565,
        "fullcodeline": "if (is_undef(r2))"
    },
    {
        "line": 673,
        "fullcodeline": "if (result != ERROR_SUCCESS)"
    },
    {
        "line": 686,
        "fullcodeline": "if (r1.ss->length == 0)"
    },
    {
        "line": 708,
        "fullcodeline": "if (is_undef(r2))"
    },
    {
        "line": 807,
        "fullcodeline": "if (r2.i != 0)"
    },
    {
        "line": 965,
        "fullcodeline": "if (++cycle == 10)"
    },
    {
        "line": 58,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 68,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 74,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 78,
        "fullcodeline": "mem[r1.i] += r2.i;"
    },
    {
        "line": 82,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 88,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 95,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 102,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 108,
        "fullcodeline": "r1.i = mem[r1.i];"
    },
    {
        "line": 109,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 152,
        "fullcodeline": "r1.i = 0;"
    },
    {
        "line": 165,
        "fullcodeline": "push(r2);"
    },
    {
        "line": 182,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 195,
        "fullcodeline": "r1.i = r1.i % r2.i;"
    },
    {
        "line": 254,
        "fullcodeline": "rule = *(YR_RULE**)(ip + 1);"
    },
    {
        "line": 269,
        "fullcodeline": "rule = *(YR_RULE**)(ip + 1);"
    },
    {
        "line": 273,
        "fullcodeline": "rule->t_flags[tidx] |= RULE_TFLAGS_MATCH;"
    },
    {
        "line": 284,
        "fullcodeline": "identifier = *(char**)(ip + 1);"
    },
    {
        "line": 297,
        "fullcodeline": "identifier = *(char**)(ip + 1);"
    },
    {
        "line": 334,
        "fullcodeline": "assert(FALSE);"
    },
    {
        "line": 351,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 368,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 374,
        "fullcodeline": "args_fmt = *(char**)(ip + 1);"
    },
    {
        "line": 384,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 389,
        "fullcodeline": "args[i - 1] = r1;"
    },
    {
        "line": 390,
        "fullcodeline": "i--;"
    },
    {
        "line": 401,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 402,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 425,
        "fullcodeline": "r1.o = function->return_obj;"
    },
    {
        "line": 426,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 447,
        "fullcodeline": "r1.i = 0;"
    },
    {
        "line": 448,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 466,
        "fullcodeline": "match = match->next;"
    },
    {
        "line": 494,
        "fullcodeline": "match = match->next;"
    },
    {
        "line": 521,
        "fullcodeline": "i++;"
    },
    {
        "line": 522,
        "fullcodeline": "match = match->next;"
    },
    {
        "line": 543,
        "fullcodeline": "i++;"
    },
    {
        "line": 544,
        "fullcodeline": "match = match->next;"
    },
    {
        "line": 559,
        "fullcodeline": "count++;"
    },
    {
        "line": 560,
        "fullcodeline": "pop(r1);"
    },
    {
        "line": 566,
        "fullcodeline": "r1.i = found >= count ? 1 : 0;"
    },
    {
        "line": 668,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 674,
        "fullcodeline": "stop = TRUE;"
    },
    {
        "line": 688,
        "fullcodeline": "r1.i = FALSE;"
    },
    {
        "line": 689,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 705,
        "fullcodeline": "r1.i = *(uint64_t*)(ip + 1);"
    },
    {
        "line": 709,
        "fullcodeline": "stack[sp - r1.i].i = UNDEFINED;"
    },
    {
        "line": 808,
        "fullcodeline": "r1.i = r1.i / r2.i;"
    },
    {
        "line": 934,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) == 0);"
    },
    {
        "line": 937,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) != 0);"
    },
    {
        "line": 940,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) < 0);"
    },
    {
        "line": 943,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) <= 0);"
    },
    {
        "line": 946,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) > 0);"
    },
    {
        "line": 949,
        "fullcodeline": "r1.i = (sized_string_cmp(r1.ss, r2.ss) >= 0);"
    },
    {
        "line": 977,
        "fullcodeline": "cycle = 0;"
    },
    {
        "line": 113,
        "fullcodeline": "push(r2);"
    },
    {
        "line": 154,
        "fullcodeline": "r1.i = r1.i && r2.i;"
    },
    {
        "line": 184,
        "fullcodeline": "r1.i= !r1.i;"
    },
    {
        "line": 197,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 327,
        "fullcodeline": "if (((YR_OBJECT_STRING*) r1.o)->value == NULL)"
    },
    {
        "line": 386,
        "fullcodeline": "if (is_undef(r1))  // count the number of undefined args"
    },
    {
        "line": 411,
        "fullcodeline": "if (function->prototypes[i].arguments_fmt == NULL)"
    },
    {
        "line": 414,
        "fullcodeline": "if (strcmp(function->prototypes[i].arguments_fmt, args_fmt) == 0)"
    },
    {
        "line": 430,
        "fullcodeline": "stop = TRUE;"
    },
    {
        "line": 457,
        "fullcodeline": "if (r1.i == match->base + match->offset)"
    },
    {
        "line": 463,
        "fullcodeline": "if (r1.i < match->base + match->offset)"
    },
    {
        "line": 485,
        "fullcodeline": "if (match->base + match->offset >= r1.i &&"
    },
    {
        "line": 491,
        "fullcodeline": "if (match->base + match->offset > r2.i)"
    },
    {
        "line": 518,
        "fullcodeline": "if (r1.i == i)"
    },
    {
        "line": 540,
        "fullcodeline": "if (r1.i == i)"
    },
    {
        "line": 557,
        "fullcodeline": "if (r1.s->matches[tidx].tail != NULL)"
    },
    {
        "line": 568,
        "fullcodeline": "r1.i = found >= r2.i ? 1 : 0;"
    },
    {
        "line": 695,
        "fullcodeline": "(uint8_t*) r1.ss->c_string,"
    },
    {
        "line": 697,
        "fullcodeline": "r2.re->flags | RE_FLAGS_SCAN,"
    },
    {
        "line": 711,
        "fullcodeline": "stack[sp - r1.i].d = (double) r2.i;"
    },
    {
        "line": 810,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 967,
        "fullcodeline": "if (difftime(time(NULL), start_time) > timeout)"
    },
    {
        "line": 167,
        "fullcodeline": "else if (is_undef(r2))"
    },
    {
        "line": 274,
        "fullcodeline": "else if (RULE_IS_GLOBAL(rule))"
    },
    {
        "line": 316,
        "fullcodeline": "r1.i = ((YR_OBJECT_INTEGER*) r1.o)->value;"
    },
    {
        "line": 321,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 328,
        "fullcodeline": "r1.i = UNDEFINED;"
    },
    {
        "line": 387,
        "fullcodeline": "count++;"
    },
    {
        "line": 416,
        "fullcodeline": "result = function->prototypes[i].code(args, context, function);"
    },
    {
        "line": 459,
        "fullcodeline": "r3.i = TRUE;"
    },
    {
        "line": 486,
        "fullcodeline": "match->base + match->offset <= r2.i)"
    },
    {
        "line": 488,
        "fullcodeline": "r3.i = TRUE;"
    },
    {
        "line": 519,
        "fullcodeline": "r3.i = match->base + match->offset;"
    },
    {
        "line": 541,
        "fullcodeline": "r3.i = match->match_length;"
    },
    {
        "line": 558,
        "fullcodeline": "found++;"
    },
    {
        "line": 973,
        "fullcodeline": "result = ERROR_SCAN_TIMEOUT;"
    },
    {
        "line": 974,
        "fullcodeline": "stop = TRUE;"
    },
    {
        "line": 169,
        "fullcodeline": "push(r1);"
    },
    {
        "line": 275,
        "fullcodeline": "rule->ns->t_flags[tidx] |= NAMESPACE_TFLAGS_UNSATISFIED_GLOBAL;"
    },
    {
        "line": 320,
        "fullcodeline": "if (isnan(((YR_OBJECT_DOUBLE*) r1.o)->value))"
    },
    {
        "line": 323,
        "fullcodeline": "r1.d = ((YR_OBJECT_DOUBLE*) r1.o)->value;"
    },
    {
        "line": 330,
        "fullcodeline": "r1.p = ((YR_OBJECT_STRING*) r1.o)->value;"
    },
    {
        "line": 173,
        "fullcodeline": "r1.i = r1.i || r2.i;"
    },
    {
        "line": 174,
        "fullcodeline": "push(r1);"
    }
]