[
    {
        "line": 9,
        "fullcodeline": "if request.method == 'GET':"
    },
    {
        "line": 10,
        "fullcodeline": "project = Project.objects.get(name=project_name)"
    },
    {
        "line": 11,
        "fullcodeline": "project = model_to_dict(project)"
    },
    {
        "line": 12,
        "fullcodeline": "project['configuration'] = json.loads(project['configuration']) if project['configuration'] else None"
    },
    {
        "line": 13,
        "fullcodeline": "return JsonResponse(project)"
    },
    {
        "line": 16,
        "fullcodeline": "elif request.method == 'POST':"
    },
    {
        "line": 17,
        "fullcodeline": "project = Project.objects.filter(name=project_name)"
    },
    {
        "line": 18,
        "fullcodeline": "data = json.loads(request.body)"
    },
    {
        "line": 19,
        "fullcodeline": "configuration = json.dumps(data.get('configuration'), ensure_ascii=False)"
    },
    {
        "line": 20,
        "fullcodeline": "project.update(**{'configuration': configuration})"
    },
    {
        "line": 23,
        "fullcodeline": "project_name = re.sub('[\\!\\@\\#\\$\\;\\&\\*\\~\\\"\\'\\{\\}\\]\\[\\-\\+\\%\\^]+', '', project_name)"
    },
    {
        "line": 25,
        "fullcodeline": "cmd = ' '.join(['gerapy', 'generate', project_name])"
    },
    {
        "line": 26,
        "fullcodeline": "p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)"
    },
    {
        "line": 27,
        "fullcodeline": "stdout, stderr = bytes2str(p.stdout.read()), bytes2str(p.stderr.read())"
    },
    {
        "line": 29,
        "fullcodeline": "if not stderr:"
    },
    {
        "line": 30,
        "fullcodeline": "return JsonResponse({'status': '1'})"
    },
    {
        "line": 32,
        "fullcodeline": "return JsonResponse({'status': '0', 'message': stderr})"
    }
]