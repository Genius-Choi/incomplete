[
    {
        "line": 2,
        "fullcodeline": "U_ASSERT(!isApproximate);"
    },
    {
        "line": 13,
        "fullcodeline": "int32_t upperPos = std::min(precision + scale, lOptPos) - scale - 1;"
    },
    {
        "line": 14,
        "fullcodeline": "int32_t lowerPos = std::max(scale, rOptPos) - scale;"
    },
    {
        "line": 15,
        "fullcodeline": "int32_t p = upperPos;"
    },
    {
        "line": 16,
        "fullcodeline": "result.append(u'0' + getDigitPos(p));"
    },
    {
        "line": 23,
        "fullcodeline": "result.append(u'E');"
    },
    {
        "line": 24,
        "fullcodeline": "int32_t _scale = upperPos + scale;"
    },
    {
        "line": 37,
        "fullcodeline": "int32_t insertIndex = result.length();"
    },
    {
        "line": 4,
        "fullcodeline": "if (isNegative()) {"
    },
    {
        "line": 7,
        "fullcodeline": "if (precision == 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "if ((--p) >= lowerPos) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (_scale == INT32_MIN) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (_scale == 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "while (_scale > 0) {"
    },
    {
        "line": 5,
        "fullcodeline": "result.append(u'-');"
    },
    {
        "line": 8,
        "fullcodeline": "result.append(u\"0E+0\", -1);"
    },
    {
        "line": 18,
        "fullcodeline": "result.append(u'.');"
    },
    {
        "line": 26,
        "fullcodeline": "result.append({u\"-2147483648\", -1});"
    },
    {
        "line": 35,
        "fullcodeline": "result.append(u'0');"
    },
    {
        "line": 39,
        "fullcodeline": "std::div_t res = std::div(_scale, 10);"
    },
    {
        "line": 40,
        "fullcodeline": "result.insert(insertIndex, u'0' + res.rem);"
    },
    {
        "line": 41,
        "fullcodeline": "_scale = res.quot;"
    },
    {
        "line": 19,
        "fullcodeline": "for (; p >= lowerPos; p--) {"
    },
    {
        "line": 20,
        "fullcodeline": "result.append(u'0' + getDigitPos(p));"
    },
    {
        "line": 28,
        "fullcodeline": "} else if (_scale < 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "_scale *= -1;"
    },
    {
        "line": 30,
        "fullcodeline": "result.append(u'-');"
    },
    {
        "line": 32,
        "fullcodeline": "result.append(u'+');"
    }
]