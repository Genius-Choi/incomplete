[
    {
        "line": 3,
        "fullcodeline": "struct perf_event_context *ctx = event->ctx;"
    },
    {
        "line": 4,
        "fullcodeline": "struct task_struct *task = ctx->task;"
    },
    {
        "line": 14,
        "fullcodeline": "raw_spin_lock_irq(&ctx->lock);"
    },
    {
        "line": 34,
        "fullcodeline": "raw_spin_unlock_irq(&ctx->lock);"
    },
    {
        "line": 39,
        "fullcodeline": "raw_spin_lock_irq(&ctx->lock);"
    },
    {
        "line": 6,
        "fullcodeline": "if (!task) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (event->state >= PERF_EVENT_STATE_INACTIVE)"
    },
    {
        "line": 25,
        "fullcodeline": "if (event->state == PERF_EVENT_STATE_ERROR)"
    },
    {
        "line": 29,
        "fullcodeline": "if (!ctx->is_active) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (ctx->is_active && event->state == PERF_EVENT_STATE_OFF) {"
    },
    {
        "line": 10,
        "fullcodeline": "cpu_function_call(event->cpu, __perf_event_enable, event);"
    },
    {
        "line": 26,
        "fullcodeline": "event->state = PERF_EVENT_STATE_OFF;"
    },
    {
        "line": 36,
        "fullcodeline": "if (!task_function_call(task, __perf_event_enable, event))"
    },
    {
        "line": 50,
        "fullcodeline": "task = ctx->task;"
    }
]