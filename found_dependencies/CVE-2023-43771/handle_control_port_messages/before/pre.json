[
    {
        "line": 4,
        "fullcodeline": "if (recv_len != -1) {"
    },
    {
        "line": 5,
        "fullcodeline": "buf[recv_len - 1] = 0; // make sure there's a null in it!"
    },
    {
        "line": 6,
        "fullcodeline": "debug(2, \"New control port message: \\\"%s\\\".\", buf);"
    },
    {
        "line": 8,
        "fullcodeline": "char *ip_list = buf;"
    },
    {
        "line": 9,
        "fullcodeline": "char *smi_name = strsep(&ip_list, \" \");"
    },
    {
        "line": 10,
        "fullcodeline": "char *command = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "if (smi_name != NULL) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (ip_list != NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "if ((strcmp(command, \"B\") == 0) && (ip_list == NULL)) {"
    },
    {
        "line": 13,
        "fullcodeline": "command = strsep(&ip_list, \" \");"
    },
    {
        "line": 24,
        "fullcodeline": "debug(2, \"Play.\");"
    },
    {
        "line": 59,
        "fullcodeline": "clock_is_active = 1;"
    },
    {
        "line": 60,
        "fullcodeline": "clock_validity_expiration_time = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "debug(2, \"clock is already active\");"
    },
    {
        "line": 61,
        "fullcodeline": "} else if ((strcmp(command, \"E\") == 0) && (ip_list == NULL)) {"
    },
    {
        "line": 36,
        "fullcodeline": "int will_ask_for_a_reset = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "if (clock_validity_expiration_time == 0) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (will_ask_for_a_reset != 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "debug(1, \"no clock_validity_expiration_time.\");"
    },
    {
        "line": 39,
        "fullcodeline": "will_ask_for_a_reset = 1;"
    },
    {
        "line": 55,
        "fullcodeline": "debug(2, \"Reset clock smoothing\");"
    },
    {
        "line": 56,
        "fullcodeline": "reset_clock_smoothing = 1;"
    },
    {
        "line": 71,
        "fullcodeline": "} else if ((strcmp(command, \"P\") == 0) && (ip_list == NULL)) {"
    },
    {
        "line": 41,
        "fullcodeline": "int64_t time_to_clock_expiration = clock_validity_expiration_time - reception_time;"
    },
    {
        "line": 49,
        "fullcodeline": "if (time_to_clock_expiration < 0) {"
    },
    {
        "line": 50,
        "fullcodeline": "debug(2, \"Clock validity may have expired, so ask for a reset.\");"
    },
    {
        "line": 51,
        "fullcodeline": "will_ask_for_a_reset = 1;"
    },
    {
        "line": 75,
        "fullcodeline": "} else if ((command == NULL) || ((strcmp(command, \"T\") == 0) && (ip_list == NULL))) {"
    },
    {
        "line": 81,
        "fullcodeline": "for (gc = 0; gc < MAX_CLOCKS; gc++) {"
    },
    {
        "line": 89,
        "fullcodeline": "for (gc = 0; gc < MAX_CLOCKS; gc++) {"
    },
    {
        "line": 90,
        "fullcodeline": "memset(&clock_private_info[gc], 0, sizeof(clock_source_private_data));"
    },
    {
        "line": 95,
        "fullcodeline": "if (strcmp(command, \"T\") == 0) {"
    },
    {
        "line": 97,
        "fullcodeline": "for (i = 0; i < MAX_CLOCKS; i++) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (ip_list != NULL) {"
    },
    {
        "line": 107,
        "fullcodeline": "char *new_ip = strsep(&ip_list, \" \");"
    },
    {
        "line": 109,
        "fullcodeline": "if ((new_ip != NULL) && (new_ip[0] != 0)) {"
    },
    {
        "line": 110,
        "fullcodeline": "int t = find_clock_source_record(new_ip, clock_private_info);"
    },
    {
        "line": 111,
        "fullcodeline": "if (t == -1)"
    },
    {
        "line": 112,
        "fullcodeline": "t = create_clock_source_record(new_ip, clock_private_info);"
    },
    {
        "line": 113,
        "fullcodeline": "if (t != -1) { // if the clock table is not full, okay"
    }
]