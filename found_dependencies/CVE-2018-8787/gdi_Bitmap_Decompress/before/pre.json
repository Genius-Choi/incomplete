[
    {
        "line": 6,
        "fullcodeline": "UINT32 SrcSize = length;"
    },
    {
        "line": 7,
        "fullcodeline": "rdpGdi* gdi = context->gdi;"
    },
    {
        "line": 8,
        "fullcodeline": "bitmap->compressed = FALSE;"
    },
    {
        "line": 9,
        "fullcodeline": "bitmap->format = gdi->dstFormat;"
    },
    {
        "line": 10,
        "fullcodeline": "bitmap->length = DstWidth * DstHeight * GetBytesPerPixel(bitmap->format);"
    },
    {
        "line": 11,
        "fullcodeline": "bitmap->data = (BYTE*) _aligned_malloc(bitmap->length, 16);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!bitmap->data)"
    },
    {
        "line": 18,
        "fullcodeline": "if (bpp < 32)"
    },
    {
        "line": 40,
        "fullcodeline": "const UINT32 SrcFormat = gdi_get_pixel_format(bpp);"
    },
    {
        "line": 41,
        "fullcodeline": "const size_t sbpp = GetBytesPerPixel(SrcFormat);"
    },
    {
        "line": 42,
        "fullcodeline": "const size_t dbpp = GetBytesPerPixel(bitmap->format);"
    },
    {
        "line": 44,
        "fullcodeline": "if ((sbpp == 0) || (dbpp == 0))"
    },
    {
        "line": 54,
        "fullcodeline": "if (!freerdp_image_copy(bitmap->data, bitmap->format, 0, 0, 0,"
    },
    {
        "line": 20,
        "fullcodeline": "if (!interleaved_decompress(context->codecs->interleaved,"
    },
    {
        "line": 48,
        "fullcodeline": "const size_t dstSize = SrcSize * dbpp / sbpp;"
    },
    {
        "line": 31,
        "fullcodeline": "if (!planar_decompress(context->codecs->planar, pSrcData, SrcSize,"
    }
]