[
    {
        "line": 8,
        "fullcodeline": "dprintk(\"nfsd_dispatch: vers %d proc %d\\n\","
    },
    {
        "line": 10,
        "fullcodeline": "proc = rqstp->rq_procinfo;"
    },
    {
        "line": 16,
        "fullcodeline": "rqstp->rq_cachetype = proc->pc_cachetype;"
    },
    {
        "line": 18,
        "fullcodeline": "xdr = proc->pc_decode;"
    },
    {
        "line": 39,
        "fullcodeline": "nfserrp = rqstp->rq_res.head[0].iov_base"
    },
    {
        "line": 44,
        "fullcodeline": "nfserr = proc->pc_func(rqstp, rqstp->rq_argp, rqstp->rq_resp);"
    },
    {
        "line": 45,
        "fullcodeline": "nfserr = map_new_errors(rqstp->rq_vers, nfserr);"
    },
    {
        "line": 19,
        "fullcodeline": "if (xdr && !xdr(rqstp, (__be32*)rqstp->rq_arg.head[0].iov_base,"
    },
    {
        "line": 27,
        "fullcodeline": "switch (nfsd_cache_lookup(rqstp)) {"
    },
    {
        "line": 41,
        "fullcodeline": "rqstp->rq_res.head[0].iov_len += sizeof(__be32);"
    },
    {
        "line": 52,
        "fullcodeline": "if (rqstp->rq_proc != 0)"
    },
    {
        "line": 21,
        "fullcodeline": "dprintk(\"nfsd: failed to decode arguments!\\n\");"
    },
    {
        "line": 22,
        "fullcodeline": "*statp = rpc_garbage_args;"
    },
    {
        "line": 46,
        "fullcodeline": "if (nfserr == nfserr_dropit || test_bit(RQ_DROPME, &rqstp->rq_flags)) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (!(nfserr && rqstp->rq_vers == 2)) {"
    },
    {
        "line": 59,
        "fullcodeline": "xdr = proc->pc_encode;"
    },
    {
        "line": 53,
        "fullcodeline": "*nfserrp++ = nfserr;"
    },
    {
        "line": 60,
        "fullcodeline": "if (xdr && !xdr(rqstp, nfserrp,"
    },
    {
        "line": 65,
        "fullcodeline": "*statp = rpc_system_err;"
    }
]