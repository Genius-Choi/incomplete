[
    {
        "line": 4,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "token_t *key_token = &tokens[KEY_TOKEN];"
    },
    {
        "line": 8,
        "fullcodeline": "assert(c != NULL);"
    },
    {
        "line": 164,
        "fullcodeline": "c->icurr = c->ilist;"
    },
    {
        "line": 165,
        "fullcodeline": "c->ileft = i;"
    },
    {
        "line": 162,
        "fullcodeline": "} while(key_token->value != NULL);"
    },
    {
        "line": 166,
        "fullcodeline": "if (return_cas || !settings.inline_ascii_response) {"
    },
    {
        "line": 171,
        "fullcodeline": "if (settings.verbose > 1)"
    },
    {
        "line": 179,
        "fullcodeline": "if (key_token->value != NULL || add_iov(c, \"END\\r\\n\", 5) != 0"
    },
    {
        "line": 167,
        "fullcodeline": "c->suffixcurr = c->suffixlist;"
    },
    {
        "line": 168,
        "fullcodeline": "c->suffixleft = i;"
    },
    {
        "line": 172,
        "fullcodeline": "fprintf(stderr, \">%d END\\n\", c->sfd);"
    },
    {
        "line": 180,
        "fullcodeline": "|| (IS_UDP(c->transport) && build_udp_headers(c) != 0)) {"
    },
    {
        "line": 181,
        "fullcodeline": "out_of_memory(c, \"SERVER_ERROR out of memory writing get response\");"
    },
    {
        "line": 11,
        "fullcodeline": "while(key_token->length != 0) {"
    },
    {
        "line": 157,
        "fullcodeline": "if(key_token->value != NULL) {"
    },
    {
        "line": 184,
        "fullcodeline": "conn_set_state(c, conn_mwrite);"
    },
    {
        "line": 185,
        "fullcodeline": "c->msgcurr = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "key = key_token->value;"
    },
    {
        "line": 14,
        "fullcodeline": "nkey = key_token->length;"
    },
    {
        "line": 24,
        "fullcodeline": "it = item_get(key, nkey, c, DO_UPDATE);"
    },
    {
        "line": 150,
        "fullcodeline": "key_token++;"
    },
    {
        "line": 158,
        "fullcodeline": "ntokens = tokenize_command(key_token->value, tokens, MAX_TOKENS);"
    },
    {
        "line": 159,
        "fullcodeline": "key_token = tokens;"
    },
    {
        "line": 16,
        "fullcodeline": "if(nkey > KEY_MAX_LENGTH) {"
    },
    {
        "line": 17,
        "fullcodeline": "out_string(c, \"CLIENT_ERROR bad command line format\");"
    },
    {
        "line": 26,
        "fullcodeline": "stats_prefix_record_get(key, nkey, NULL != it);"
    },
    {
        "line": 135,
        "fullcodeline": "pthread_mutex_lock(&c->thread->stats.mutex);"
    },
    {
        "line": 138,
        "fullcodeline": "pthread_mutex_unlock(&c->thread->stats.mutex);"
    },
    {
        "line": 139,
        "fullcodeline": "*(c->ilist + i) = it;"
    },
    {
        "line": 140,
        "fullcodeline": "i++;"
    },
    {
        "line": 18,
        "fullcodeline": "while (i-- > 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (i >= c->isize) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (return_cas || !settings.inline_ascii_response)"
    },
    {
        "line": 125,
        "fullcodeline": "if (settings.verbose > 1) {"
    },
    {
        "line": 143,
        "fullcodeline": "pthread_mutex_lock(&c->thread->stats.mutex);"
    },
    {
        "line": 146,
        "fullcodeline": "pthread_mutex_unlock(&c->thread->stats.mutex);"
    },
    {
        "line": 147,
        "fullcodeline": "MEMCACHED_COMMAND_GET(c->sfd, key, nkey, -1, 0);"
    },
    {
        "line": 30,
        "fullcodeline": "item **new_list = realloc(c->ilist, sizeof(item *) * c->isize * 2);"
    },
    {
        "line": 53,
        "fullcodeline": "MEMCACHED_COMMAND_GET(c->sfd, ITEM_key(it), it->nkey,"
    },
    {
        "line": 71,
        "fullcodeline": "suffix = do_cache_alloc(c->thread->suffix_cache);"
    },
    {
        "line": 83,
        "fullcodeline": "*(c->suffixlist + i) = suffix;"
    },
    {
        "line": 84,
        "fullcodeline": "int suffix_len = make_ascii_get_suffix(suffix, it, return_cas);"
    },
    {
        "line": 127,
        "fullcodeline": "fprintf(stderr, \">%d sending key \", c->sfd);"
    },
    {
        "line": 131,
        "fullcodeline": "fprintf(stderr, \"\\n\");"
    },
    {
        "line": 54,
        "fullcodeline": "it->nbytes, ITEM_get_cas(it));"
    },
    {
        "line": 56,
        "fullcodeline": "if (i >= c->suffixsize) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (suffix == NULL) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (add_iov(c, \"VALUE \", 6) != 0 ||"
    },
    {
        "line": 93,
        "fullcodeline": "if ((it->it_flags & ITEM_CHUNKED) == 0) {"
    },
    {
        "line": 102,
        "fullcodeline": "MEMCACHED_COMMAND_GET(c->sfd, ITEM_key(it), it->nkey,"
    },
    {
        "line": 128,
        "fullcodeline": "for (ii = 0; ii < it->nkey; ++ii) {"
    },
    {
        "line": 136,
        "fullcodeline": "c->thread->stats.slab_stats[ITEM_clsid(it)].get_hits++;"
    },
    {
        "line": 19,
        "fullcodeline": "item_remove(*(c->ilist + i));"
    },
    {
        "line": 32,
        "fullcodeline": "c->isize *= 2;"
    },
    {
        "line": 33,
        "fullcodeline": "c->ilist = new_list;"
    },
    {
        "line": 57,
        "fullcodeline": "char **new_suffix_list = realloc(c->suffixlist,"
    },
    {
        "line": 73,
        "fullcodeline": "STATS_LOCK();"
    },
    {
        "line": 74,
        "fullcodeline": "stats.malloc_fails++;"
    },
    {
        "line": 75,
        "fullcodeline": "STATS_UNLOCK();"
    },
    {
        "line": 76,
        "fullcodeline": "out_of_memory(c, \"SERVER_ERROR out of memory making CAS suffix\");"
    },
    {
        "line": 77,
        "fullcodeline": "item_remove(it);"
    },
    {
        "line": 88,
        "fullcodeline": "add_iov(c, suffix, suffix_len) != 0)"
    },
    {
        "line": 90,
        "fullcodeline": "item_remove(it);"
    },
    {
        "line": 94,
        "fullcodeline": "add_iov(c, ITEM_data(it), it->nbytes);"
    },
    {
        "line": 103,
        "fullcodeline": "it->nbytes, ITEM_get_cas(it));"
    },
    {
        "line": 104,
        "fullcodeline": "if (add_iov(c, \"VALUE \", 6) != 0 ||"
    },
    {
        "line": 110,
        "fullcodeline": "if ((it->it_flags & ITEM_CHUNKED) == 0)"
    },
    {
        "line": 129,
        "fullcodeline": "fprintf(stderr, \"%c\", key[ii]);"
    },
    {
        "line": 35,
        "fullcodeline": "STATS_LOCK();"
    },
    {
        "line": 36,
        "fullcodeline": "stats.malloc_fails++;"
    },
    {
        "line": 37,
        "fullcodeline": "STATS_UNLOCK();"
    },
    {
        "line": 38,
        "fullcodeline": "item_remove(it);"
    },
    {
        "line": 78,
        "fullcodeline": "while (i-- > 0) {"
    },
    {
        "line": 87,
        "fullcodeline": "(settings.inline_ascii_response && add_iov(c, ITEM_suffix(it), it->nsuffix - 2) != 0) ||"
    },
    {
        "line": 105,
        "fullcodeline": "add_iov(c, ITEM_key(it), it->nkey) != 0)"
    },
    {
        "line": 107,
        "fullcodeline": "item_remove(it);"
    },
    {
        "line": 58,
        "fullcodeline": "sizeof(char *) * c->suffixsize * 2);"
    },
    {
        "line": 60,
        "fullcodeline": "c->suffixsize *= 2;"
    },
    {
        "line": 61,
        "fullcodeline": "c->suffixlist  = new_suffix_list;"
    },
    {
        "line": 86,
        "fullcodeline": "add_iov(c, ITEM_key(it), it->nkey) != 0 ||"
    },
    {
        "line": 95,
        "fullcodeline": "} else if (add_chunked_item_iovs(c, it, it->nbytes) != 0) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (add_iov(c, ITEM_suffix(it), it->nsuffix + it->nbytes) != 0)"
    },
    {
        "line": 63,
        "fullcodeline": "STATS_LOCK();"
    },
    {
        "line": 64,
        "fullcodeline": "stats.malloc_fails++;"
    },
    {
        "line": 65,
        "fullcodeline": "STATS_UNLOCK();"
    },
    {
        "line": 66,
        "fullcodeline": "item_remove(it);"
    },
    {
        "line": 96,
        "fullcodeline": "item_remove(it);"
    },
    {
        "line": 114,
        "fullcodeline": "item_remove(it);"
    },
    {
        "line": 117,
        "fullcodeline": "} else if (add_iov(c, ITEM_suffix(it), it->nsuffix) != 0 ||"
    },
    {
        "line": 79,
        "fullcodeline": "item_remove(*(c->ilist + i));"
    },
    {
        "line": 118,
        "fullcodeline": "add_chunked_item_iovs(c, it, it->nbytes) != 0) {"
    },
    {
        "line": 119,
        "fullcodeline": "item_remove(it);"
    }
]