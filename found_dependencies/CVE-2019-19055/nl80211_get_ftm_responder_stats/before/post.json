[
    {
        "line": 6,
        "fullcodeline": "struct wireless_dev *wdev = dev->ieee80211_ptr;"
    },
    {
        "line": 7,
        "fullcodeline": "struct cfg80211_ftm_responder_stats ftm_stats = {};"
    },
    {
        "line": 16,
        "fullcodeline": "err = rdev_get_ftm_responder_stats(rdev, dev, &ftm_stats);"
    },
    {
        "line": 23,
        "fullcodeline": "msg = nlmsg_new(NLMSG_DEFAULT_SIZE, GFP_KERNEL);"
    },
    {
        "line": 27,
        "fullcodeline": "hdr = nl80211hdr_put(msg, info->snd_portid, info->snd_seq, 0,"
    },
    {
        "line": 35,
        "fullcodeline": "ftm_stats_attr = nla_nest_start_noflag(msg,"
    },
    {
        "line": 51,
        "fullcodeline": "SET_FTM(success_num, SUCCESS_NUM, u32);"
    },
    {
        "line": 52,
        "fullcodeline": "SET_FTM(partial_num, PARTIAL_NUM, u32);"
    },
    {
        "line": 53,
        "fullcodeline": "SET_FTM(failed_num, FAILED_NUM, u32);"
    },
    {
        "line": 54,
        "fullcodeline": "SET_FTM(asap_num, ASAP_NUM, u32);"
    },
    {
        "line": 55,
        "fullcodeline": "SET_FTM(non_asap_num, NON_ASAP_NUM, u32);"
    },
    {
        "line": 56,
        "fullcodeline": "SET_FTM_U64(total_duration_ms, TOTAL_DURATION_MSEC);"
    },
    {
        "line": 57,
        "fullcodeline": "SET_FTM(unknown_triggers_num, UNKNOWN_TRIGGERS_NUM, u32);"
    },
    {
        "line": 58,
        "fullcodeline": "SET_FTM(reschedule_requests_num, RESCHEDULE_REQUESTS_NUM, u32);"
    },
    {
        "line": 59,
        "fullcodeline": "SET_FTM(out_of_window_triggers_num, OUT_OF_WINDOW_TRIGGERS_NUM, u32);"
    },
    {
        "line": 62,
        "fullcodeline": "nla_nest_end(msg, ftm_stats_attr);"
    },
    {
        "line": 64,
        "fullcodeline": "genlmsg_end(msg, hdr);"
    },
    {
        "line": 68,
        "fullcodeline": "nlmsg_free(msg);"
    },
    {
        "line": 13,
        "fullcodeline": "if (wdev->iftype != NL80211_IFTYPE_AP || !wdev->beacon_interval)"
    },
    {
        "line": 20,
        "fullcodeline": "if (!ftm_stats.filled)"
    },
    {
        "line": 24,
        "fullcodeline": "if (!msg)"
    },
    {
        "line": 29,
        "fullcodeline": "if (!hdr)"
    },
    {
        "line": 32,
        "fullcodeline": "if (nla_put_u32(msg, NL80211_ATTR_IFINDEX, dev->ifindex))"
    },
    {
        "line": 37,
        "fullcodeline": "if (!ftm_stats_attr)"
    },
    {
        "line": 65,
        "fullcodeline": "return genlmsg_reply(msg, info);"
    },
    {
        "line": 69,
        "fullcodeline": "return -ENOBUFS;"
    },
    {
        "line": 14,
        "fullcodeline": "return -EOPNOTSUPP;"
    },
    {
        "line": 21,
        "fullcodeline": "return -ENODATA;"
    },
    {
        "line": 25,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 30,
        "fullcodeline": "return -ENOBUFS;"
    }
]