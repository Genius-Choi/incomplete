[
    {
        "line": 14,
        "fullcodeline": "sock_flags_new = sock_flags_old & ~O_NONBLOCK;"
    },
    {
        "line": 33,
        "fullcodeline": "msg(LOG_INFO, \"Authorized client\");"
    },
    {
        "line": 84,
        "fullcodeline": "msg(LOG_INFO, \"Starting to serve\");"
    },
    {
        "line": 85,
        "fullcodeline": "serveconnection(client);"
    },
    {
        "line": 86,
        "fullcodeline": "exit(EXIT_SUCCESS);"
    },
    {
        "line": 89,
        "fullcodeline": "g_free(client);"
    },
    {
        "line": 90,
        "fullcodeline": "close(net);"
    },
    {
        "line": 6,
        "fullcodeline": "if(serve->max_connections > 0 &&"
    },
    {
        "line": 11,
        "fullcodeline": "if((sock_flags_old = fcntl(net, F_GETFL, 0)) == -1) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (sock_flags_new != sock_flags_old &&"
    },
    {
        "line": 19,
        "fullcodeline": "if(!client) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (set_peername(net, client)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (!authorized_client(client)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (!dontfork) {"
    },
    {
        "line": 7,
        "fullcodeline": "g_hash_table_size(children) >= serve->max_connections) {"
    },
    {
        "line": 8,
        "fullcodeline": "msg(LOG_INFO, \"Max connections reached\");"
    },
    {
        "line": 12,
        "fullcodeline": "err(\"fcntl F_GETFL\");"
    },
    {
        "line": 16,
        "fullcodeline": "fcntl(net, F_SETFL, sock_flags_new) == -1) {"
    },
    {
        "line": 17,
        "fullcodeline": "err(\"fcntl F_SETFL ~O_NONBLOCK\");"
    },
    {
        "line": 20,
        "fullcodeline": "client = g_new0(CLIENT, 1);"
    },
    {
        "line": 21,
        "fullcodeline": "client->server=serve;"
    },
    {
        "line": 22,
        "fullcodeline": "client->exportsize=OFFT_MAX;"
    },
    {
        "line": 23,
        "fullcodeline": "client->net=net;"
    },
    {
        "line": 24,
        "fullcodeline": "client->transactionlogfd = -1;"
    },
    {
        "line": 30,
        "fullcodeline": "msg(LOG_INFO, \"Unauthorized client\");"
    },
    {
        "line": 41,
        "fullcodeline": "sigemptyset(&newset);"
    },
    {
        "line": 42,
        "fullcodeline": "sigaddset(&newset, SIGCHLD);"
    },
    {
        "line": 43,
        "fullcodeline": "sigaddset(&newset, SIGTERM);"
    },
    {
        "line": 44,
        "fullcodeline": "sigprocmask(SIG_BLOCK, &newset, &oldset);"
    },
    {
        "line": 60,
        "fullcodeline": "signal(SIGCHLD, SIG_DFL);"
    },
    {
        "line": 61,
        "fullcodeline": "signal(SIGTERM, SIG_DFL);"
    },
    {
        "line": 62,
        "fullcodeline": "signal(SIGHUP, SIG_DFL);"
    },
    {
        "line": 63,
        "fullcodeline": "sigprocmask(SIG_SETMASK, &oldset, NULL);"
    },
    {
        "line": 65,
        "fullcodeline": "g_hash_table_destroy(children);"
    },
    {
        "line": 66,
        "fullcodeline": "children = NULL;"
    },
    {
        "line": 77,
        "fullcodeline": "g_array_free(servers, FALSE);"
    },
    {
        "line": 81,
        "fullcodeline": "g_array_free(modernsocks, TRUE);"
    },
    {
        "line": 45,
        "fullcodeline": "if ((pid = fork()) < 0) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (pid > 0) { /* parent */"
    },
    {
        "line": 67,
        "fullcodeline": "for(i=0;i<servers->len;i++) {"
    },
    {
        "line": 78,
        "fullcodeline": "for(i=0;i<modernsocks->len;i++) {"
    },
    {
        "line": 46,
        "fullcodeline": "msg(LOG_INFO, \"Could not fork (%s)\", strerror(errno));"
    },
    {
        "line": 47,
        "fullcodeline": "sigprocmask(SIG_SETMASK, &oldset, NULL);"
    },
    {
        "line": 53,
        "fullcodeline": "pidp = g_malloc(sizeof(pid_t));"
    },
    {
        "line": 54,
        "fullcodeline": "*pidp = pid;"
    },
    {
        "line": 55,
        "fullcodeline": "g_hash_table_insert(children, pidp, pidp);"
    },
    {
        "line": 56,
        "fullcodeline": "sigprocmask(SIG_SETMASK, &oldset, NULL);"
    },
    {
        "line": 68,
        "fullcodeline": "serve=&g_array_index(servers, SERVER, i);"
    },
    {
        "line": 69,
        "fullcodeline": "close(serve->socket);"
    }
]