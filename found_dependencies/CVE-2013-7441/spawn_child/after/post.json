[
    {
        "line": 7,
        "fullcodeline": "sigemptyset(&newset);"
    },
    {
        "line": 8,
        "fullcodeline": "sigaddset(&newset, SIGCHLD);"
    },
    {
        "line": 9,
        "fullcodeline": "sigaddset(&newset, SIGTERM);"
    },
    {
        "line": 10,
        "fullcodeline": "sigprocmask(SIG_BLOCK, &newset, &oldset);"
    },
    {
        "line": 11,
        "fullcodeline": "pid = fork();"
    },
    {
        "line": 25,
        "fullcodeline": "signal(SIGCHLD, SIG_DFL);"
    },
    {
        "line": 26,
        "fullcodeline": "signal(SIGTERM, SIG_DFL);"
    },
    {
        "line": 27,
        "fullcodeline": "signal(SIGHUP, SIG_DFL);"
    },
    {
        "line": 29,
        "fullcodeline": "sigprocmask(SIG_SETMASK, &oldset, NULL);"
    },
    {
        "line": 12,
        "fullcodeline": "if (pid < 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (pid > 0) { /* Parent */"
    },
    {
        "line": 13,
        "fullcodeline": "msg(LOG_ERR, \"Could not fork (%s)\", strerror(errno));"
    },
    {
        "line": 20,
        "fullcodeline": "*pidp = pid;"
    },
    {
        "line": 21,
        "fullcodeline": "g_hash_table_insert(children, pidp, pidp);"
    }
]