[
    {
        "line": 4,
        "fullcodeline": "const char *start = s;"
    },
    {
        "line": 5,
        "fullcodeline": "const char *next = start;"
    },
    {
        "line": 6,
        "fullcodeline": "parser->m_eventPtr = start;"
    },
    {
        "line": 9,
        "fullcodeline": "tok = XmlPrologTok(parser->m_encoding, start, end, &next);"
    },
    {
        "line": 14,
        "fullcodeline": "parser->m_eventEndPtr = next;"
    },
    {
        "line": 79,
        "fullcodeline": "start = next;"
    },
    {
        "line": 80,
        "fullcodeline": "parser->m_eventPtr = start;"
    },
    {
        "line": 15,
        "fullcodeline": "if (tok <= 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (! parser->m_parsingStatus.finalBuffer && tok != XML_TOK_INVALID) {"
    },
    {
        "line": 32,
        "fullcodeline": "return storeEntityValue(parser, parser->m_encoding, s, end,"
    },
    {
        "line": 17,
        "fullcodeline": "*nextPtr = s;"
    },
    {
        "line": 34,
        "fullcodeline": "} else if (tok == XML_TOK_XML_DECL) {"
    },
    {
        "line": 36,
        "fullcodeline": "result = processXmlDecl(parser, 0, start, next);"
    },
    {
        "line": 46,
        "fullcodeline": "*nextPtr = next;"
    },
    {
        "line": 48,
        "fullcodeline": "parser->m_processor = entityValueProcessor;"
    },
    {
        "line": 37,
        "fullcodeline": "if (result != XML_ERROR_NONE)"
    },
    {
        "line": 44,
        "fullcodeline": "if (parser->m_parsingStatus.parsing == XML_FINISHED)"
    },
    {
        "line": 49,
        "fullcodeline": "return entityValueProcessor(parser, next, end, nextPtr);"
    },
    {
        "line": 59,
        "fullcodeline": "else if (tok == XML_TOK_BOM) {"
    },
    {
        "line": 68,
        "fullcodeline": "*nextPtr = next;"
    },
    {
        "line": 69,
        "fullcodeline": "s = next;"
    },
    {
        "line": 75,
        "fullcodeline": "else if (tok == XML_TOK_INSTANCE_START) {"
    }
]