[
    {
        "line": 4,
        "fullcodeline": "DTD *const dtd = parser->m_dtd; /* save one level of indirection */"
    },
    {
        "line": 6,
        "fullcodeline": "UNUSED_P(account);"
    },
    {
        "line": 10,
        "fullcodeline": "const char *next"
    },
    {
        "line": 12,
        "fullcodeline": "int tok = XmlAttributeValueTok(enc, ptr, end, &next);"
    },
    {
        "line": 195,
        "fullcodeline": "ptr = next;"
    },
    {
        "line": 62,
        "fullcodeline": "next = ptr + enc->minBytesPerChar;"
    },
    {
        "line": 23,
        "fullcodeline": "if (enc == parser->m_encoding)"
    },
    {
        "line": 27,
        "fullcodeline": "if (enc == parser->m_encoding)"
    },
    {
        "line": 31,
        "fullcodeline": "XML_Char buf[XML_ENCODE_MAX];"
    },
    {
        "line": 33,
        "fullcodeline": "int n = XmlCharRefNumber(enc, ptr);"
    },
    {
        "line": 42,
        "fullcodeline": "n = XmlEncode(n, (ICHAR *)buf);"
    },
    {
        "line": 58,
        "fullcodeline": "if (! poolAppend(pool, enc, ptr, next))"
    },
    {
        "line": 66,
        "fullcodeline": "if (! isCdata && (poolLength(pool) == 0 || poolLastChar(pool) == 0x20))"
    },
    {
        "line": 68,
        "fullcodeline": "if (! poolAppendChar(pool, 0x20))"
    },
    {
        "line": 75,
        "fullcodeline": "XML_Char ch = (XML_Char)XmlPredefinedEntityName("
    },
    {
        "line": 90,
        "fullcodeline": "name = poolStoreString(&parser->m_temp2Pool, enc,"
    },
    {
        "line": 95,
        "fullcodeline": "entity = (ENTITY *)lookup(parser, &dtd->generalEntities, name, 0);"
    },
    {
        "line": 96,
        "fullcodeline": "poolDiscard(&parser->m_temp2Pool);"
    },
    {
        "line": 190,
        "fullcodeline": "if (enc == parser->m_encoding)"
    },
    {
        "line": 24,
        "fullcodeline": "parser->m_eventPtr = next;"
    },
    {
        "line": 28,
        "fullcodeline": "parser->m_eventPtr = ptr;"
    },
    {
        "line": 34,
        "fullcodeline": "if (n < 0) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (! isCdata && n == 0x20 /* space */"
    },
    {
        "line": 52,
        "fullcodeline": "for (i = 0; i < n; i++) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (! name)"
    },
    {
        "line": 100,
        "fullcodeline": "if (pool == &dtd->pool) /* are we called from prolog? */"
    },
    {
        "line": 155,
        "fullcodeline": "if (! entity->textPtr) {"
    },
    {
        "line": 191,
        "fullcodeline": "parser->m_eventPtr = ptr;"
    },
    {
        "line": 40,
        "fullcodeline": "&& (poolLength(pool) == 0 || poolLastChar(pool) == 0x20))"
    },
    {
        "line": 91,
        "fullcodeline": "ptr + enc->minBytesPerChar,"
    },
    {
        "line": 92,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 101,
        "fullcodeline": "checkEntityDecl ="
    },
    {
        "line": 35,
        "fullcodeline": "if (enc == parser->m_encoding)"
    },
    {
        "line": 53,
        "fullcodeline": "if (! poolAppendChar(pool, buf[i]))"
    },
    {
        "line": 76,
        "fullcodeline": "enc, ptr + enc->minBytesPerChar, next - enc->minBytesPerChar);"
    },
    {
        "line": 86,
        "fullcodeline": "if (! poolAppendChar(pool, ch))"
    },
    {
        "line": 105,
        "fullcodeline": "(dtd->standalone ? ! parser->m_openInternalEntities"
    },
    {
        "line": 108,
        "fullcodeline": "checkEntityDecl = ! dtd->hasParamEntityRefs || dtd->standalone;"
    },
    {
        "line": 110,
        "fullcodeline": "if (! entity)"
    },
    {
        "line": 128,
        "fullcodeline": "if (enc == parser->m_encoding) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (enc == parser->m_encoding)"
    },
    {
        "line": 156,
        "fullcodeline": "if (enc == parser->m_encoding)"
    },
    {
        "line": 161,
        "fullcodeline": "const XML_Char *textEnd = entity->textPtr + entity->textLen;"
    },
    {
        "line": 162,
        "fullcodeline": "entity->open = XML_TRUE;"
    },
    {
        "line": 166,
        "fullcodeline": "result = appendAttributeValue(parser, parser->m_internalEncoding,"
    },
    {
        "line": 173,
        "fullcodeline": "entity->open = XML_FALSE;"
    },
    {
        "line": 36,
        "fullcodeline": "parser->m_eventPtr = ptr;"
    },
    {
        "line": 106,
        "fullcodeline": ": ! dtd->hasParamEntityRefs);"
    },
    {
        "line": 114,
        "fullcodeline": "} else if (! entity) {"
    },
    {
        "line": 146,
        "fullcodeline": "parser->m_eventPtr = ptr; /* LCOV_EXCL_LINE */"
    },
    {
        "line": 152,
        "fullcodeline": "parser->m_eventPtr = ptr;"
    },
    {
        "line": 157,
        "fullcodeline": "parser->m_eventPtr = ptr;"
    },
    {
        "line": 167,
        "fullcodeline": "isCdata, (const char *)entity->textPtr,"
    },
    {
        "line": 168,
        "fullcodeline": "(const char *)textEnd, pool,"
    },
    {
        "line": 112,
        "fullcodeline": "else if (! entity->is_internal)"
    }
]