[
    {
        "line": 7,
        "fullcodeline": "static const XML_Char atypeCDATA[]"
    },
    {
        "line": 9,
        "fullcodeline": "static const XML_Char atypeID[] = {ASCII_I, ASCII_D, '\\0'};"
    },
    {
        "line": 10,
        "fullcodeline": "static const XML_Char atypeIDREF[]"
    },
    {
        "line": 12,
        "fullcodeline": "static const XML_Char atypeIDREFS[]"
    },
    {
        "line": 14,
        "fullcodeline": "static const XML_Char atypeENTITY[]"
    },
    {
        "line": 16,
        "fullcodeline": "static const XML_Char atypeENTITIES[]"
    },
    {
        "line": 19,
        "fullcodeline": "static const XML_Char atypeNMTOKEN[]"
    },
    {
        "line": 21,
        "fullcodeline": "static const XML_Char atypeNMTOKENS[]"
    },
    {
        "line": 24,
        "fullcodeline": "static const XML_Char notationPrefix[]"
    },
    {
        "line": 27,
        "fullcodeline": "static const XML_Char enumValueSep[] = {ASCII_PIPE, '\\0'};"
    },
    {
        "line": 28,
        "fullcodeline": "static const XML_Char enumValueStart[] = {ASCII_LPAREN, '\\0'};"
    },
    {
        "line": 31,
        "fullcodeline": "UNUSED_P(account);"
    },
    {
        "line": 35,
        "fullcodeline": "DTD *const dtd = parser->m_dtd;"
    },
    {
        "line": 8,
        "fullcodeline": "= {ASCII_C, ASCII_D, ASCII_A, ASCII_T, ASCII_A, '\\0'};"
    },
    {
        "line": 11,
        "fullcodeline": "= {ASCII_I, ASCII_D, ASCII_R, ASCII_E, ASCII_F, '\\0'};"
    },
    {
        "line": 13,
        "fullcodeline": "= {ASCII_I, ASCII_D, ASCII_R, ASCII_E, ASCII_F, ASCII_S, '\\0'};"
    },
    {
        "line": 15,
        "fullcodeline": "= {ASCII_E, ASCII_N, ASCII_T, ASCII_I, ASCII_T, ASCII_Y, '\\0'};"
    },
    {
        "line": 17,
        "fullcodeline": "= {ASCII_E, ASCII_N, ASCII_T, ASCII_I, ASCII_T,"
    },
    {
        "line": 20,
        "fullcodeline": "= {ASCII_N, ASCII_M, ASCII_T, ASCII_O, ASCII_K, ASCII_E, ASCII_N, '\\0'};"
    },
    {
        "line": 22,
        "fullcodeline": "= {ASCII_N, ASCII_M, ASCII_T, ASCII_O, ASCII_K,"
    },
    {
        "line": 25,
        "fullcodeline": "= {ASCII_N, ASCII_O, ASCII_T, ASCII_A,      ASCII_T,"
    },
    {
        "line": 41,
        "fullcodeline": "if (enc == parser->m_encoding) {"
    },
    {
        "line": 42,
        "fullcodeline": "eventPP = &parser->m_eventPtr;"
    },
    {
        "line": 43,
        "fullcodeline": "eventEndPP = &parser->m_eventEndPtr;"
    },
    {
        "line": 51,
        "fullcodeline": "XML_Bool handleDefault = XML_TRUE;"
    },
    {
        "line": 52,
        "fullcodeline": "*eventPP = s;"
    },
    {
        "line": 53,
        "fullcodeline": "*eventEndPP = next;"
    },
    {
        "line": 97,
        "fullcodeline": "role = XmlTokenRole(&parser->m_prologState, tok, s, next, enc);"
    },
    {
        "line": 45,
        "fullcodeline": "eventPP = &(parser->m_openInternalEntities->internalEventPtr);"
    },
    {
        "line": 46,
        "fullcodeline": "eventEndPP = &(parser->m_openInternalEntities->internalEventEndPtr);"
    },
    {
        "line": 54,
        "fullcodeline": "if (tok <= 0) {"
    },
    {
        "line": 1016,
        "fullcodeline": "if (handleDefault && parser->m_defaultHandler)"
    },
    {
        "line": 131,
        "fullcodeline": "parser->m_doctypeSysid = NULL; /* always initialize to NULL */"
    },
    {
        "line": 160,
        "fullcodeline": "dtd->hasParamEntityRefs = XML_TRUE;"
    },
    {
        "line": 291,
        "fullcodeline": "parser->m_processor = contentProcessor;"
    },
    {
        "line": 294,
        "fullcodeline": "parser->m_declElementType = getElementType(parser, enc, s, next);"
    },
    {
        "line": 299,
        "fullcodeline": "parser->m_declAttributeId = getAttributeId(parser, enc, s, next);"
    },
    {
        "line": 302,
        "fullcodeline": "parser->m_declAttributeIsCdata = XML_FALSE;"
    },
    {
        "line": 303,
        "fullcodeline": "parser->m_declAttributeType = NULL;"
    },
    {
        "line": 304,
        "fullcodeline": "parser->m_declAttributeIsId = XML_FALSE;"
    },
    {
        "line": 307,
        "fullcodeline": "parser->m_declAttributeIsCdata = XML_TRUE;"
    },
    {
        "line": 308,
        "fullcodeline": "parser->m_declAttributeType = atypeCDATA;"
    },
    {
        "line": 311,
        "fullcodeline": "parser->m_declAttributeIsId = XML_TRUE;"
    },
    {
        "line": 312,
        "fullcodeline": "parser->m_declAttributeType = atypeID;"
    },
    {
        "line": 315,
        "fullcodeline": "parser->m_declAttributeType = atypeIDREF;"
    },
    {
        "line": 318,
        "fullcodeline": "parser->m_declAttributeType = atypeIDREFS;"
    },
    {
        "line": 321,
        "fullcodeline": "parser->m_declAttributeType = atypeENTITY;"
    },
    {
        "line": 324,
        "fullcodeline": "parser->m_declAttributeType = atypeENTITIES;"
    },
    {
        "line": 327,
        "fullcodeline": "parser->m_declAttributeType = atypeNMTOKEN;"
    },
    {
        "line": 330,
        "fullcodeline": "parser->m_declAttributeType = atypeNMTOKENS;"
    },
    {
        "line": 380,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 448,
        "fullcodeline": "dtd->hasParamEntityRefs = XML_TRUE;"
    },
    {
        "line": 597,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 601,
        "fullcodeline": "parser->m_declNotationPublicId = NULL;"
    },
    {
        "line": 602,
        "fullcodeline": "parser->m_declNotationName = NULL;"
    },
    {
        "line": 641,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 651,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 723,
        "fullcodeline": "parser->m_groupConnector[parser->m_prologState.level] = 0;"
    },
    {
        "line": 739,
        "fullcodeline": "parser->m_groupConnector[parser->m_prologState.level] = ASCII_COMMA;"
    },
    {
        "line": 755,
        "fullcodeline": "parser->m_groupConnector[parser->m_prologState.level] = ASCII_PIPE;"
    },
    {
        "line": 902,
        "fullcodeline": "quant = XML_CQUANT_NONE;"
    },
    {
        "line": 905,
        "fullcodeline": "quant = XML_CQUANT_OPT;"
    },
    {
        "line": 908,
        "fullcodeline": "quant = XML_CQUANT_REP;"
    },
    {
        "line": 911,
        "fullcodeline": "quant = XML_CQUANT_PLUS;"
    },
    {
        "line": 945,
        "fullcodeline": "quant = XML_CQUANT_NONE;"
    },
    {
        "line": 948,
        "fullcodeline": "quant = XML_CQUANT_OPT;"
    },
    {
        "line": 951,
        "fullcodeline": "quant = XML_CQUANT_REP;"
    },
    {
        "line": 954,
        "fullcodeline": "quant = XML_CQUANT_PLUS;"
    },
    {
        "line": 980,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 985,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 1017,
        "fullcodeline": "reportDefault(parser, enc, s, next);"
    },
    {
        "line": 1026,
        "fullcodeline": "s = next;"
    },
    {
        "line": 1027,
        "fullcodeline": "tok = XmlPrologTok(enc, s, end, &next);"
    },
    {
        "line": 55,
        "fullcodeline": "if (haveMore && tok != XML_TOK_INVALID) {"
    },
    {
        "line": 115,
        "fullcodeline": "enum XML_Error result = processXmlDecl(parser, 0, s, next);"
    },
    {
        "line": 118,
        "fullcodeline": "enc = parser->m_encoding;"
    },
    {
        "line": 119,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 178,
        "fullcodeline": "if (! XmlIsPublicId(enc, s, next, eventPP))"
    },
    {
        "line": 181,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity) {"
    },
    {
        "line": 198,
        "fullcodeline": "if (allowClosingDoctype != XML_TRUE) {"
    },
    {
        "line": 292,
        "fullcodeline": "return contentProcessor(parser, s, end, nextPtr);"
    },
    {
        "line": 295,
        "fullcodeline": "if (! parser->m_declElementType)"
    },
    {
        "line": 300,
        "fullcodeline": "if (! parser->m_declAttributeId)"
    },
    {
        "line": 332,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_attlistDeclHandler)"
    },
    {
        "line": 337,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_attlistDeclHandler) {"
    },
    {
        "line": 464,
        "fullcodeline": "if (! dtd->standalone"
    },
    {
        "line": 484,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity) {"
    },
    {
        "line": 500,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity"
    },
    {
        "line": 511,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity) {"
    },
    {
        "line": 613,
        "fullcodeline": "if (! XmlIsPublicId(enc, s, next, eventPP))"
    },
    {
        "line": 629,
        "fullcodeline": "if (parser->m_declNotationName && parser->m_notationDeclHandler) {"
    },
    {
        "line": 644,
        "fullcodeline": "if (parser->m_declNotationPublicId && parser->m_notationDeclHandler) {"
    },
    {
        "line": 680,
        "fullcodeline": "if (parser->m_prologState.level >= parser->m_groupSize) {"
    },
    {
        "line": 737,
        "fullcodeline": "if (parser->m_groupConnector[parser->m_prologState.level] == ASCII_PIPE)"
    },
    {
        "line": 740,
        "fullcodeline": "if (dtd->in_eldecl && parser->m_elementDeclHandler)"
    },
    {
        "line": 744,
        "fullcodeline": "if (parser->m_groupConnector[parser->m_prologState.level] == ASCII_COMMA)"
    },
    {
        "line": 746,
        "fullcodeline": "if (dtd->in_eldecl"
    },
    {
        "line": 850,
        "fullcodeline": "if (! dtd->standalone && parser->m_notStandaloneHandler"
    },
    {
        "line": 978,
        "fullcodeline": "if (! reportProcessingInstruction(parser, enc, s, next))"
    },
    {
        "line": 983,
        "fullcodeline": "if (! reportComment(parser, enc, s, next))"
    },
    {
        "line": 999,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_entityDeclHandler)"
    },
    {
        "line": 1007,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_attlistDeclHandler)"
    },
    {
        "line": 56,
        "fullcodeline": "*nextPtr = s;"
    },
    {
        "line": 67,
        "fullcodeline": "case -XML_TOK_PROLOG_S:"
    },
    {
        "line": 68,
        "fullcodeline": "tok = -tok;"
    },
    {
        "line": 92,
        "fullcodeline": "tok = -tok;"
    },
    {
        "line": 93,
        "fullcodeline": "next = end;"
    },
    {
        "line": 116,
        "fullcodeline": "if (result != XML_ERROR_NONE)"
    },
    {
        "line": 123,
        "fullcodeline": "parser->m_doctypeName"
    },
    {
        "line": 127,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 128,
        "fullcodeline": "parser->m_doctypePubid = NULL;"
    },
    {
        "line": 129,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 135,
        "fullcodeline": "parser->m_startDoctypeDeclHandler("
    },
    {
        "line": 138,
        "fullcodeline": "parser->m_doctypeName = NULL;"
    },
    {
        "line": 139,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 140,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 165,
        "fullcodeline": "pubId = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 170,
        "fullcodeline": "normalizePublicId(pubId);"
    },
    {
        "line": 171,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 172,
        "fullcodeline": "parser->m_doctypePubid = pubId;"
    },
    {
        "line": 173,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 182,
        "fullcodeline": "XML_Char *tem"
    },
    {
        "line": 187,
        "fullcodeline": "normalizePublicId(tem);"
    },
    {
        "line": 188,
        "fullcodeline": "parser->m_declEntity->publicId = tem;"
    },
    {
        "line": 189,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 204,
        "fullcodeline": "parser->m_startDoctypeDeclHandler("
    },
    {
        "line": 207,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 208,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 253,
        "fullcodeline": "parser->m_endDoctypeDeclHandler(parser->m_handlerArg);"
    },
    {
        "line": 254,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 333,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 349,
        "fullcodeline": "parser->m_declAttributeType = parser->m_tempPool.start;"
    },
    {
        "line": 350,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 386,
        "fullcodeline": "enum XML_Error result = storeAttributeValue("
    },
    {
        "line": 392,
        "fullcodeline": "attVal = poolStart(&dtd->pool);"
    },
    {
        "line": 393,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 422,
        "fullcodeline": "enum XML_Error result"
    },
    {
        "line": 450,
        "fullcodeline": "parser->m_doctypeSysid = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 455,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 456,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 469,
        "fullcodeline": "&& ! parser->m_notStandaloneHandler(parser->m_handlerArg))"
    },
    {
        "line": 485,
        "fullcodeline": "parser->m_declEntity->systemId"
    },
    {
        "line": 490,
        "fullcodeline": "parser->m_declEntity->base = parser->m_curBase;"
    },
    {
        "line": 491,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 502,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 503,
        "fullcodeline": "parser->m_entityDeclHandler("
    },
    {
        "line": 507,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 512,
        "fullcodeline": "parser->m_declEntity->notation"
    },
    {
        "line": 516,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 535,
        "fullcodeline": "if (XmlPredefinedEntityName(enc, s, next)) {"
    },
    {
        "line": 604,
        "fullcodeline": "parser->m_declNotationName"
    },
    {
        "line": 608,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 609,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 617,
        "fullcodeline": "XML_Char *tem = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 622,
        "fullcodeline": "normalizePublicId(tem);"
    },
    {
        "line": 623,
        "fullcodeline": "parser->m_declNotationPublicId = tem;"
    },
    {
        "line": 624,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 625,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 630,
        "fullcodeline": "const XML_Char *systemId = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 635,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 636,
        "fullcodeline": "parser->m_notationDeclHandler("
    },
    {
        "line": 639,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 645,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 646,
        "fullcodeline": "parser->m_notationDeclHandler("
    },
    {
        "line": 649,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 725,
        "fullcodeline": "int myindex = nextScaffoldPart(parser);"
    },
    {
        "line": 728,
        "fullcodeline": "assert(dtd->scaffIndex != NULL);"
    },
    {
        "line": 729,
        "fullcodeline": "dtd->scaffIndex[dtd->scaffLevel] = myindex;"
    },
    {
        "line": 730,
        "fullcodeline": "dtd->scaffLevel++;"
    },
    {
        "line": 731,
        "fullcodeline": "dtd->scaffold[myindex].type = XML_CTYPE_SEQ;"
    },
    {
        "line": 741,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 748,
        "fullcodeline": "&& (dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel - 1]].type"
    },
    {
        "line": 750,
        "fullcodeline": "dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel - 1]].type"
    },
    {
        "line": 851,
        "fullcodeline": "&& ! parser->m_notStandaloneHandler(parser->m_handlerArg))"
    },
    {
        "line": 859,
        "fullcodeline": "parser->m_declElementType = getElementType(parser, enc, s, next);"
    },
    {
        "line": 862,
        "fullcodeline": "dtd->scaffLevel = 0;"
    },
    {
        "line": 863,
        "fullcodeline": "dtd->scaffCount = 0;"
    },
    {
        "line": 864,
        "fullcodeline": "dtd->in_eldecl = XML_TRUE;"
    },
    {
        "line": 865,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 888,
        "fullcodeline": "dtd->in_eldecl = XML_FALSE;"
    },
    {
        "line": 894,
        "fullcodeline": "dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel - 1]].type"
    },
    {
        "line": 917,
        "fullcodeline": "const char *nxt"
    },
    {
        "line": 919,
        "fullcodeline": "int myindex = nextScaffoldPart(parser);"
    },
    {
        "line": 922,
        "fullcodeline": "dtd->scaffold[myindex].type = XML_CTYPE_NAME;"
    },
    {
        "line": 923,
        "fullcodeline": "dtd->scaffold[myindex].quant = quant;"
    },
    {
        "line": 924,
        "fullcodeline": "el = getElementType(parser, enc, s, nxt);"
    },
    {
        "line": 927,
        "fullcodeline": "name = el->name;"
    },
    {
        "line": 928,
        "fullcodeline": "dtd->scaffold[myindex].name = name;"
    },
    {
        "line": 929,
        "fullcodeline": "nameLen = 0;"
    },
    {
        "line": 938,
        "fullcodeline": "dtd->contentStringLen += (unsigned)nameLen;"
    },
    {
        "line": 959,
        "fullcodeline": "dtd->scaffLevel--;"
    },
    {
        "line": 960,
        "fullcodeline": "dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel]].quant = quant;"
    },
    {
        "line": 990,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 996,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 1000,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 1004,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 1008,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 1012,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 124,
        "fullcodeline": "= poolStoreString(&parser->m_tempPool, enc, s, next);"
    },
    {
        "line": 125,
        "fullcodeline": "if (! parser->m_doctypeName)"
    },
    {
        "line": 163,
        "fullcodeline": "if (! XmlIsPublicId(enc, s, next, eventPP))"
    },
    {
        "line": 168,
        "fullcodeline": "if (! pubId)"
    },
    {
        "line": 183,
        "fullcodeline": "= poolStoreString(&dtd->pool, enc, s + enc->minBytesPerChar,"
    },
    {
        "line": 185,
        "fullcodeline": "if (! tem)"
    },
    {
        "line": 193,
        "fullcodeline": "if (parser->m_entityDeclHandler && role == XML_ROLE_ENTITY_PUBLIC_ID)"
    },
    {
        "line": 345,
        "fullcodeline": "if (! poolAppendString(&parser->m_tempPool, prefix))"
    },
    {
        "line": 347,
        "fullcodeline": "if (! poolAppend(&parser->m_tempPool, enc, s, next))"
    },
    {
        "line": 356,
        "fullcodeline": "if (! defineAttribute(parser->m_declElementType,"
    },
    {
        "line": 361,
        "fullcodeline": "if (parser->m_attlistDeclHandler && parser->m_declAttributeType) {"
    },
    {
        "line": 395,
        "fullcodeline": "if (! defineAttribute("
    },
    {
        "line": 399,
        "fullcodeline": "if (parser->m_attlistDeclHandler && parser->m_declAttributeType) {"
    },
    {
        "line": 423,
        "fullcodeline": "= storeEntityValue(parser, enc, s + enc->minBytesPerChar,"
    },
    {
        "line": 440,
        "fullcodeline": "if (result != XML_ERROR_NONE)"
    },
    {
        "line": 453,
        "fullcodeline": "if (parser->m_doctypeSysid == NULL)"
    },
    {
        "line": 486,
        "fullcodeline": "= poolStoreString(&dtd->pool, enc, s + enc->minBytesPerChar,"
    },
    {
        "line": 488,
        "fullcodeline": "if (! parser->m_declEntity->systemId)"
    },
    {
        "line": 495,
        "fullcodeline": "if (parser->m_entityDeclHandler && role == XML_ROLE_ENTITY_SYSTEM_ID)"
    },
    {
        "line": 513,
        "fullcodeline": "= poolStoreString(&dtd->pool, enc, s, next);"
    },
    {
        "line": 514,
        "fullcodeline": "if (! parser->m_declEntity->notation)"
    },
    {
        "line": 536,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 540,
        "fullcodeline": "const XML_Char *name = poolStoreString(&dtd->pool, enc, s, next);"
    },
    {
        "line": 543,
        "fullcodeline": "parser->m_declEntity = (ENTITY *)lookup(parser, &dtd->generalEntities,"
    },
    {
        "line": 605,
        "fullcodeline": "= poolStoreString(&parser->m_tempPool, enc, s, next);"
    },
    {
        "line": 606,
        "fullcodeline": "if (! parser->m_declNotationName)"
    },
    {
        "line": 620,
        "fullcodeline": "if (! tem)"
    },
    {
        "line": 633,
        "fullcodeline": "if (! systemId)"
    },
    {
        "line": 726,
        "fullcodeline": "if (myindex < 0)"
    },
    {
        "line": 747,
        "fullcodeline": "&& ! parser->m_groupConnector[parser->m_prologState.level]"
    },
    {
        "line": 860,
        "fullcodeline": "if (! parser->m_declElementType)"
    },
    {
        "line": 918,
        "fullcodeline": "= (quant == XML_CQUANT_NONE ? next : next - enc->minBytesPerChar);"
    },
    {
        "line": 920,
        "fullcodeline": "if (myindex < 0)"
    },
    {
        "line": 925,
        "fullcodeline": "if (! el)"
    },
    {
        "line": 934,
        "fullcodeline": "if (nameLen > UINT_MAX - dtd->contentStringLen) {"
    },
    {
        "line": 961,
        "fullcodeline": "if (dtd->scaffLevel == 0) {"
    },
    {
        "line": 167,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 184,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 194,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 340,
        "fullcodeline": "prefix = enumValueSep;"
    },
    {
        "line": 372,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 373,
        "fullcodeline": "parser->m_attlistDeclHandler("
    },
    {
        "line": 377,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 388,
        "fullcodeline": "s + enc->minBytesPerChar, next - enc->minBytesPerChar, &dtd->pool,"
    },
    {
        "line": 410,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 411,
        "fullcodeline": "parser->m_attlistDeclHandler("
    },
    {
        "line": 415,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 416,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 424,
        "fullcodeline": "next - enc->minBytesPerChar, XML_ACCOUNT_NONE);"
    },
    {
        "line": 426,
        "fullcodeline": "parser->m_declEntity->textPtr = poolStart(&dtd->entityValuePool);"
    },
    {
        "line": 427,
        "fullcodeline": "parser->m_declEntity->textLen"
    },
    {
        "line": 429,
        "fullcodeline": "poolFinish(&dtd->entityValuePool);"
    },
    {
        "line": 452,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 487,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 496,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 518,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 519,
        "fullcodeline": "parser->m_unparsedEntityDeclHandler("
    },
    {
        "line": 523,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 541,
        "fullcodeline": "if (! name)"
    },
    {
        "line": 545,
        "fullcodeline": "if (! parser->m_declEntity)"
    },
    {
        "line": 547,
        "fullcodeline": "if (parser->m_declEntity->name != name) {"
    },
    {
        "line": 563,
        "fullcodeline": "poolDiscard(&dtd->pool);"
    },
    {
        "line": 564,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 619,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 632,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 733,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 753,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 873,
        "fullcodeline": "XML_Content *content"
    },
    {
        "line": 877,
        "fullcodeline": "content->quant = XML_CQUANT_NONE;"
    },
    {
        "line": 878,
        "fullcodeline": "content->name = NULL;"
    },
    {
        "line": 879,
        "fullcodeline": "content->numchildren = 0;"
    },
    {
        "line": 880,
        "fullcodeline": "content->children = NULL;"
    },
    {
        "line": 881,
        "fullcodeline": "content->type = ((role == XML_ROLE_CONTENT_ANY) ? XML_CTYPE_ANY"
    },
    {
        "line": 883,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 884,
        "fullcodeline": "parser->m_elementDeclHandler("
    },
    {
        "line": 886,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 897,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 930,
        "fullcodeline": "for (; name[nameLen++];)"
    },
    {
        "line": 940,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 958,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 970,
        "fullcodeline": "dtd->in_eldecl = XML_FALSE;"
    },
    {
        "line": 971,
        "fullcodeline": "dtd->contentStringLen = 0;"
    },
    {
        "line": 342,
        "fullcodeline": "prefix = (role == XML_ROLE_ATTRIBUTE_NOTATION_VALUE ? notationPrefix"
    },
    {
        "line": 362,
        "fullcodeline": "if (*parser->m_declAttributeType == XML_T(ASCII_LPAREN)"
    },
    {
        "line": 376,
        "fullcodeline": "role == XML_ROLE_REQUIRED_ATTRIBUTE_VALUE);"
    },
    {
        "line": 400,
        "fullcodeline": "if (*parser->m_declAttributeType == XML_T(ASCII_LPAREN)"
    },
    {
        "line": 414,
        "fullcodeline": "attVal, role == XML_ROLE_FIXED_ATTRIBUTE_VALUE);"
    },
    {
        "line": 428,
        "fullcodeline": "= (int)(poolLength(&dtd->entityValuePool));"
    },
    {
        "line": 439,
        "fullcodeline": "poolDiscard(&dtd->entityValuePool);"
    },
    {
        "line": 548,
        "fullcodeline": "poolDiscard(&dtd->pool);"
    },
    {
        "line": 549,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 688,
        "fullcodeline": "char *const new_connector = (char *)REALLOC("
    },
    {
        "line": 694,
        "fullcodeline": "parser->m_groupConnector = new_connector;"
    },
    {
        "line": 715,
        "fullcodeline": "parser->m_groupConnector"
    },
    {
        "line": 874,
        "fullcodeline": "= (XML_Content *)MALLOC(parser, sizeof(XML_Content));"
    },
    {
        "line": 875,
        "fullcodeline": "if (! content)"
    },
    {
        "line": 962,
        "fullcodeline": "if (! handleDefault) {"
    },
    {
        "line": 363,
        "fullcodeline": "|| (*parser->m_declAttributeType == XML_T(ASCII_N)"
    },
    {
        "line": 369,
        "fullcodeline": "parser->m_declAttributeType = parser->m_tempPool.start;"
    },
    {
        "line": 370,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 401,
        "fullcodeline": "|| (*parser->m_declAttributeType == XML_T(ASCII_N)"
    },
    {
        "line": 407,
        "fullcodeline": "parser->m_declAttributeType = parser->m_tempPool.start;"
    },
    {
        "line": 408,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 431,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 432,
        "fullcodeline": "parser->m_entityDeclHandler("
    },
    {
        "line": 436,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 544,
        "fullcodeline": "name, sizeof(ENTITY));"
    },
    {
        "line": 551,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 552,
        "fullcodeline": "parser->m_declEntity->publicId = NULL;"
    },
    {
        "line": 553,
        "fullcodeline": "parser->m_declEntity->is_param = XML_FALSE;"
    },
    {
        "line": 557,
        "fullcodeline": "parser->m_declEntity->is_internal"
    },
    {
        "line": 684,
        "fullcodeline": "if (parser->m_groupSize > (unsigned int)(-1) / 2u) {"
    },
    {
        "line": 690,
        "fullcodeline": "if (new_connector == NULL) {"
    },
    {
        "line": 708,
        "fullcodeline": "int *const new_scaff_index = (int *)REALLOC("
    },
    {
        "line": 712,
        "fullcodeline": "dtd->scaffIndex = new_scaff_index;"
    },
    {
        "line": 716,
        "fullcodeline": "= (char *)MALLOC(parser, parser->m_groupSize = 32);"
    },
    {
        "line": 717,
        "fullcodeline": "if (! parser->m_groupConnector) {"
    },
    {
        "line": 963,
        "fullcodeline": "XML_Content *model = build_model(parser);"
    },
    {
        "line": 966,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 967,
        "fullcodeline": "parser->m_elementDeclHandler("
    },
    {
        "line": 364,
        "fullcodeline": "&& parser->m_declAttributeType[1] == XML_T(ASCII_O))) {"
    },
    {
        "line": 366,
        "fullcodeline": "if (! poolAppendChar(&parser->m_tempPool, XML_T(ASCII_RPAREN))"
    },
    {
        "line": 402,
        "fullcodeline": "&& parser->m_declAttributeType[1] == XML_T(ASCII_O))) {"
    },
    {
        "line": 404,
        "fullcodeline": "if (! poolAppendChar(&parser->m_tempPool, XML_T(ASCII_RPAREN))"
    },
    {
        "line": 525,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 526,
        "fullcodeline": "parser->m_entityDeclHandler("
    },
    {
        "line": 530,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 558,
        "fullcodeline": "= ! (parser->m_parentParser || parser->m_openInternalEntities);"
    },
    {
        "line": 703,
        "fullcodeline": "if (parser->m_groupSize > (size_t)(-1) / sizeof(int)) {"
    },
    {
        "line": 710,
        "fullcodeline": "if (new_scaff_index == NULL)"
    },
    {
        "line": 964,
        "fullcodeline": "if (! model)"
    },
    {
        "line": 367,
        "fullcodeline": "|| ! poolAppendChar(&parser->m_tempPool, XML_T('\\0')))"
    },
    {
        "line": 405,
        "fullcodeline": "|| ! poolAppendChar(&parser->m_tempPool, XML_T('\\0')))"
    },
    {
        "line": 560,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 689,
        "fullcodeline": "parser, parser->m_groupConnector, parser->m_groupSize *= 2);"
    },
    {
        "line": 709,
        "fullcodeline": "parser, dtd->scaffIndex, parser->m_groupSize * sizeof(int));"
    }
]