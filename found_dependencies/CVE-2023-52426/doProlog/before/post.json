[
    {
        "line": 7,
        "fullcodeline": "static const XML_Char atypeCDATA[]"
    },
    {
        "line": 9,
        "fullcodeline": "static const XML_Char atypeID[] = {ASCII_I, ASCII_D, '\\0'};"
    },
    {
        "line": 10,
        "fullcodeline": "static const XML_Char atypeIDREF[]"
    },
    {
        "line": 12,
        "fullcodeline": "static const XML_Char atypeIDREFS[]"
    },
    {
        "line": 14,
        "fullcodeline": "static const XML_Char atypeENTITY[]"
    },
    {
        "line": 16,
        "fullcodeline": "static const XML_Char atypeENTITIES[]"
    },
    {
        "line": 19,
        "fullcodeline": "static const XML_Char atypeNMTOKEN[]"
    },
    {
        "line": 21,
        "fullcodeline": "static const XML_Char atypeNMTOKENS[]"
    },
    {
        "line": 24,
        "fullcodeline": "static const XML_Char notationPrefix[]"
    },
    {
        "line": 27,
        "fullcodeline": "static const XML_Char enumValueSep[] = {ASCII_PIPE, '\\0'};"
    },
    {
        "line": 28,
        "fullcodeline": "static const XML_Char enumValueStart[] = {ASCII_LPAREN, '\\0'};"
    },
    {
        "line": 31,
        "fullcodeline": "UNUSED_P(account);"
    },
    {
        "line": 35,
        "fullcodeline": "DTD *const dtd = parser->m_dtd;"
    },
    {
        "line": 8,
        "fullcodeline": "= {ASCII_C, ASCII_D, ASCII_A, ASCII_T, ASCII_A, '\\0'};"
    },
    {
        "line": 11,
        "fullcodeline": "= {ASCII_I, ASCII_D, ASCII_R, ASCII_E, ASCII_F, '\\0'};"
    },
    {
        "line": 13,
        "fullcodeline": "= {ASCII_I, ASCII_D, ASCII_R, ASCII_E, ASCII_F, ASCII_S, '\\0'};"
    },
    {
        "line": 15,
        "fullcodeline": "= {ASCII_E, ASCII_N, ASCII_T, ASCII_I, ASCII_T, ASCII_Y, '\\0'};"
    },
    {
        "line": 17,
        "fullcodeline": "= {ASCII_E, ASCII_N, ASCII_T, ASCII_I, ASCII_T,"
    },
    {
        "line": 20,
        "fullcodeline": "= {ASCII_N, ASCII_M, ASCII_T, ASCII_O, ASCII_K, ASCII_E, ASCII_N, '\\0'};"
    },
    {
        "line": 22,
        "fullcodeline": "= {ASCII_N, ASCII_M, ASCII_T, ASCII_O, ASCII_K,"
    },
    {
        "line": 25,
        "fullcodeline": "= {ASCII_N, ASCII_O, ASCII_T, ASCII_A,      ASCII_T,"
    },
    {
        "line": 41,
        "fullcodeline": "if (enc == parser->m_encoding) {"
    },
    {
        "line": 42,
        "fullcodeline": "eventPP = &parser->m_eventPtr;"
    },
    {
        "line": 43,
        "fullcodeline": "eventEndPP = &parser->m_eventEndPtr;"
    },
    {
        "line": 51,
        "fullcodeline": "XML_Bool handleDefault = XML_TRUE;"
    },
    {
        "line": 52,
        "fullcodeline": "*eventPP = s;"
    },
    {
        "line": 53,
        "fullcodeline": "*eventEndPP = next;"
    },
    {
        "line": 97,
        "fullcodeline": "role = XmlTokenRole(&parser->m_prologState, tok, s, next, enc);"
    },
    {
        "line": 54,
        "fullcodeline": "if (tok <= 0) {"
    },
    {
        "line": 1014,
        "fullcodeline": "if (handleDefault && parser->m_defaultHandler)"
    },
    {
        "line": 129,
        "fullcodeline": "parser->m_doctypeSysid = NULL; /* always initialize to NULL */"
    },
    {
        "line": 158,
        "fullcodeline": "dtd->hasParamEntityRefs = XML_TRUE;"
    },
    {
        "line": 289,
        "fullcodeline": "parser->m_processor = contentProcessor;"
    },
    {
        "line": 292,
        "fullcodeline": "parser->m_declElementType = getElementType(parser, enc, s, next);"
    },
    {
        "line": 297,
        "fullcodeline": "parser->m_declAttributeId = getAttributeId(parser, enc, s, next);"
    },
    {
        "line": 300,
        "fullcodeline": "parser->m_declAttributeIsCdata = XML_FALSE;"
    },
    {
        "line": 301,
        "fullcodeline": "parser->m_declAttributeType = NULL;"
    },
    {
        "line": 302,
        "fullcodeline": "parser->m_declAttributeIsId = XML_FALSE;"
    },
    {
        "line": 305,
        "fullcodeline": "parser->m_declAttributeIsCdata = XML_TRUE;"
    },
    {
        "line": 306,
        "fullcodeline": "parser->m_declAttributeType = atypeCDATA;"
    },
    {
        "line": 309,
        "fullcodeline": "parser->m_declAttributeIsId = XML_TRUE;"
    },
    {
        "line": 310,
        "fullcodeline": "parser->m_declAttributeType = atypeID;"
    },
    {
        "line": 313,
        "fullcodeline": "parser->m_declAttributeType = atypeIDREF;"
    },
    {
        "line": 316,
        "fullcodeline": "parser->m_declAttributeType = atypeIDREFS;"
    },
    {
        "line": 319,
        "fullcodeline": "parser->m_declAttributeType = atypeENTITY;"
    },
    {
        "line": 322,
        "fullcodeline": "parser->m_declAttributeType = atypeENTITIES;"
    },
    {
        "line": 325,
        "fullcodeline": "parser->m_declAttributeType = atypeNMTOKEN;"
    },
    {
        "line": 328,
        "fullcodeline": "parser->m_declAttributeType = atypeNMTOKENS;"
    },
    {
        "line": 378,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 446,
        "fullcodeline": "dtd->hasParamEntityRefs = XML_TRUE;"
    },
    {
        "line": 595,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 599,
        "fullcodeline": "parser->m_declNotationPublicId = NULL;"
    },
    {
        "line": 600,
        "fullcodeline": "parser->m_declNotationName = NULL;"
    },
    {
        "line": 639,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 649,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 721,
        "fullcodeline": "parser->m_groupConnector[parser->m_prologState.level] = 0;"
    },
    {
        "line": 737,
        "fullcodeline": "parser->m_groupConnector[parser->m_prologState.level] = ASCII_COMMA;"
    },
    {
        "line": 753,
        "fullcodeline": "parser->m_groupConnector[parser->m_prologState.level] = ASCII_PIPE;"
    },
    {
        "line": 900,
        "fullcodeline": "quant = XML_CQUANT_NONE;"
    },
    {
        "line": 903,
        "fullcodeline": "quant = XML_CQUANT_OPT;"
    },
    {
        "line": 906,
        "fullcodeline": "quant = XML_CQUANT_REP;"
    },
    {
        "line": 909,
        "fullcodeline": "quant = XML_CQUANT_PLUS;"
    },
    {
        "line": 943,
        "fullcodeline": "quant = XML_CQUANT_NONE;"
    },
    {
        "line": 946,
        "fullcodeline": "quant = XML_CQUANT_OPT;"
    },
    {
        "line": 949,
        "fullcodeline": "quant = XML_CQUANT_REP;"
    },
    {
        "line": 952,
        "fullcodeline": "quant = XML_CQUANT_PLUS;"
    },
    {
        "line": 978,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 983,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 1015,
        "fullcodeline": "reportDefault(parser, enc, s, next);"
    },
    {
        "line": 1019,
        "fullcodeline": "*nextPtr = next;"
    },
    {
        "line": 1024,
        "fullcodeline": "s = next;"
    },
    {
        "line": 1025,
        "fullcodeline": "tok = XmlPrologTok(enc, s, end, &next);"
    },
    {
        "line": 55,
        "fullcodeline": "if (haveMore && tok != XML_TOK_INVALID) {"
    },
    {
        "line": 113,
        "fullcodeline": "enum XML_Error result = processXmlDecl(parser, 0, s, next);"
    },
    {
        "line": 116,
        "fullcodeline": "enc = parser->m_encoding;"
    },
    {
        "line": 117,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 176,
        "fullcodeline": "if (! XmlIsPublicId(enc, s, next, eventPP))"
    },
    {
        "line": 179,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity) {"
    },
    {
        "line": 196,
        "fullcodeline": "if (allowClosingDoctype != XML_TRUE) {"
    },
    {
        "line": 290,
        "fullcodeline": "return contentProcessor(parser, s, end, nextPtr);"
    },
    {
        "line": 293,
        "fullcodeline": "if (! parser->m_declElementType)"
    },
    {
        "line": 298,
        "fullcodeline": "if (! parser->m_declAttributeId)"
    },
    {
        "line": 330,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_attlistDeclHandler)"
    },
    {
        "line": 335,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_attlistDeclHandler) {"
    },
    {
        "line": 462,
        "fullcodeline": "if (! dtd->standalone"
    },
    {
        "line": 482,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity) {"
    },
    {
        "line": 498,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity"
    },
    {
        "line": 509,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity) {"
    },
    {
        "line": 611,
        "fullcodeline": "if (! XmlIsPublicId(enc, s, next, eventPP))"
    },
    {
        "line": 627,
        "fullcodeline": "if (parser->m_declNotationName && parser->m_notationDeclHandler) {"
    },
    {
        "line": 642,
        "fullcodeline": "if (parser->m_declNotationPublicId && parser->m_notationDeclHandler) {"
    },
    {
        "line": 678,
        "fullcodeline": "if (parser->m_prologState.level >= parser->m_groupSize) {"
    },
    {
        "line": 735,
        "fullcodeline": "if (parser->m_groupConnector[parser->m_prologState.level] == ASCII_PIPE)"
    },
    {
        "line": 738,
        "fullcodeline": "if (dtd->in_eldecl && parser->m_elementDeclHandler)"
    },
    {
        "line": 742,
        "fullcodeline": "if (parser->m_groupConnector[parser->m_prologState.level] == ASCII_COMMA)"
    },
    {
        "line": 744,
        "fullcodeline": "if (dtd->in_eldecl"
    },
    {
        "line": 848,
        "fullcodeline": "if (! dtd->standalone && parser->m_notStandaloneHandler"
    },
    {
        "line": 976,
        "fullcodeline": "if (! reportProcessingInstruction(parser, enc, s, next))"
    },
    {
        "line": 981,
        "fullcodeline": "if (! reportComment(parser, enc, s, next))"
    },
    {
        "line": 997,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_entityDeclHandler)"
    },
    {
        "line": 1005,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_attlistDeclHandler)"
    },
    {
        "line": 56,
        "fullcodeline": "*nextPtr = s;"
    },
    {
        "line": 61,
        "fullcodeline": "*eventPP = next;"
    },
    {
        "line": 67,
        "fullcodeline": "case -XML_TOK_PROLOG_S:"
    },
    {
        "line": 68,
        "fullcodeline": "tok = -tok;"
    },
    {
        "line": 92,
        "fullcodeline": "tok = -tok;"
    },
    {
        "line": 93,
        "fullcodeline": "next = end;"
    },
    {
        "line": 114,
        "fullcodeline": "if (result != XML_ERROR_NONE)"
    },
    {
        "line": 121,
        "fullcodeline": "parser->m_doctypeName"
    },
    {
        "line": 125,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 126,
        "fullcodeline": "parser->m_doctypePubid = NULL;"
    },
    {
        "line": 127,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 133,
        "fullcodeline": "parser->m_startDoctypeDeclHandler("
    },
    {
        "line": 136,
        "fullcodeline": "parser->m_doctypeName = NULL;"
    },
    {
        "line": 137,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 138,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 163,
        "fullcodeline": "pubId = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 168,
        "fullcodeline": "normalizePublicId(pubId);"
    },
    {
        "line": 169,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 170,
        "fullcodeline": "parser->m_doctypePubid = pubId;"
    },
    {
        "line": 171,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 180,
        "fullcodeline": "XML_Char *tem"
    },
    {
        "line": 185,
        "fullcodeline": "normalizePublicId(tem);"
    },
    {
        "line": 186,
        "fullcodeline": "parser->m_declEntity->publicId = tem;"
    },
    {
        "line": 187,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 202,
        "fullcodeline": "parser->m_startDoctypeDeclHandler("
    },
    {
        "line": 205,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 206,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 251,
        "fullcodeline": "parser->m_endDoctypeDeclHandler(parser->m_handlerArg);"
    },
    {
        "line": 252,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 331,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 348,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 384,
        "fullcodeline": "enum XML_Error result = storeAttributeValue("
    },
    {
        "line": 390,
        "fullcodeline": "attVal = poolStart(&dtd->pool);"
    },
    {
        "line": 391,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 420,
        "fullcodeline": "enum XML_Error result"
    },
    {
        "line": 448,
        "fullcodeline": "parser->m_doctypeSysid = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 453,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 454,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 467,
        "fullcodeline": "&& ! parser->m_notStandaloneHandler(parser->m_handlerArg))"
    },
    {
        "line": 483,
        "fullcodeline": "parser->m_declEntity->systemId"
    },
    {
        "line": 488,
        "fullcodeline": "parser->m_declEntity->base = parser->m_curBase;"
    },
    {
        "line": 489,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 500,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 501,
        "fullcodeline": "parser->m_entityDeclHandler("
    },
    {
        "line": 505,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 510,
        "fullcodeline": "parser->m_declEntity->notation"
    },
    {
        "line": 514,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 533,
        "fullcodeline": "if (XmlPredefinedEntityName(enc, s, next)) {"
    },
    {
        "line": 602,
        "fullcodeline": "parser->m_declNotationName"
    },
    {
        "line": 606,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 607,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 615,
        "fullcodeline": "XML_Char *tem = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 620,
        "fullcodeline": "normalizePublicId(tem);"
    },
    {
        "line": 621,
        "fullcodeline": "parser->m_declNotationPublicId = tem;"
    },
    {
        "line": 622,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 623,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 628,
        "fullcodeline": "const XML_Char *systemId = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 633,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 634,
        "fullcodeline": "parser->m_notationDeclHandler("
    },
    {
        "line": 637,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 643,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 644,
        "fullcodeline": "parser->m_notationDeclHandler("
    },
    {
        "line": 647,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 723,
        "fullcodeline": "int myindex = nextScaffoldPart(parser);"
    },
    {
        "line": 726,
        "fullcodeline": "assert(dtd->scaffIndex != NULL);"
    },
    {
        "line": 727,
        "fullcodeline": "dtd->scaffIndex[dtd->scaffLevel] = myindex;"
    },
    {
        "line": 728,
        "fullcodeline": "dtd->scaffLevel++;"
    },
    {
        "line": 729,
        "fullcodeline": "dtd->scaffold[myindex].type = XML_CTYPE_SEQ;"
    },
    {
        "line": 739,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 746,
        "fullcodeline": "&& (dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel - 1]].type"
    },
    {
        "line": 748,
        "fullcodeline": "dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel - 1]].type"
    },
    {
        "line": 849,
        "fullcodeline": "&& ! parser->m_notStandaloneHandler(parser->m_handlerArg))"
    },
    {
        "line": 857,
        "fullcodeline": "parser->m_declElementType = getElementType(parser, enc, s, next);"
    },
    {
        "line": 860,
        "fullcodeline": "dtd->scaffLevel = 0;"
    },
    {
        "line": 861,
        "fullcodeline": "dtd->scaffCount = 0;"
    },
    {
        "line": 862,
        "fullcodeline": "dtd->in_eldecl = XML_TRUE;"
    },
    {
        "line": 863,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 886,
        "fullcodeline": "dtd->in_eldecl = XML_FALSE;"
    },
    {
        "line": 892,
        "fullcodeline": "dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel - 1]].type"
    },
    {
        "line": 915,
        "fullcodeline": "const char *nxt"
    },
    {
        "line": 917,
        "fullcodeline": "int myindex = nextScaffoldPart(parser);"
    },
    {
        "line": 920,
        "fullcodeline": "dtd->scaffold[myindex].type = XML_CTYPE_NAME;"
    },
    {
        "line": 921,
        "fullcodeline": "dtd->scaffold[myindex].quant = quant;"
    },
    {
        "line": 922,
        "fullcodeline": "el = getElementType(parser, enc, s, nxt);"
    },
    {
        "line": 925,
        "fullcodeline": "name = el->name;"
    },
    {
        "line": 926,
        "fullcodeline": "dtd->scaffold[myindex].name = name;"
    },
    {
        "line": 927,
        "fullcodeline": "nameLen = 0;"
    },
    {
        "line": 936,
        "fullcodeline": "dtd->contentStringLen += (unsigned)nameLen;"
    },
    {
        "line": 957,
        "fullcodeline": "dtd->scaffLevel--;"
    },
    {
        "line": 958,
        "fullcodeline": "dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel]].quant = quant;"
    },
    {
        "line": 988,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 994,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 998,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 1002,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 1006,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 1010,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 122,
        "fullcodeline": "= poolStoreString(&parser->m_tempPool, enc, s, next);"
    },
    {
        "line": 123,
        "fullcodeline": "if (! parser->m_doctypeName)"
    },
    {
        "line": 161,
        "fullcodeline": "if (! XmlIsPublicId(enc, s, next, eventPP))"
    },
    {
        "line": 166,
        "fullcodeline": "if (! pubId)"
    },
    {
        "line": 181,
        "fullcodeline": "= poolStoreString(&dtd->pool, enc, s + enc->minBytesPerChar,"
    },
    {
        "line": 183,
        "fullcodeline": "if (! tem)"
    },
    {
        "line": 191,
        "fullcodeline": "if (parser->m_entityDeclHandler && role == XML_ROLE_ENTITY_PUBLIC_ID)"
    },
    {
        "line": 343,
        "fullcodeline": "if (! poolAppendString(&parser->m_tempPool, prefix))"
    },
    {
        "line": 345,
        "fullcodeline": "if (! poolAppend(&parser->m_tempPool, enc, s, next))"
    },
    {
        "line": 354,
        "fullcodeline": "if (! defineAttribute(parser->m_declElementType,"
    },
    {
        "line": 359,
        "fullcodeline": "if (parser->m_attlistDeclHandler && parser->m_declAttributeType) {"
    },
    {
        "line": 393,
        "fullcodeline": "if (! defineAttribute("
    },
    {
        "line": 397,
        "fullcodeline": "if (parser->m_attlistDeclHandler && parser->m_declAttributeType) {"
    },
    {
        "line": 421,
        "fullcodeline": "= storeEntityValue(parser, enc, s + enc->minBytesPerChar,"
    },
    {
        "line": 438,
        "fullcodeline": "if (result != XML_ERROR_NONE)"
    },
    {
        "line": 451,
        "fullcodeline": "if (parser->m_doctypeSysid == NULL)"
    },
    {
        "line": 484,
        "fullcodeline": "= poolStoreString(&dtd->pool, enc, s + enc->minBytesPerChar,"
    },
    {
        "line": 486,
        "fullcodeline": "if (! parser->m_declEntity->systemId)"
    },
    {
        "line": 493,
        "fullcodeline": "if (parser->m_entityDeclHandler && role == XML_ROLE_ENTITY_SYSTEM_ID)"
    },
    {
        "line": 511,
        "fullcodeline": "= poolStoreString(&dtd->pool, enc, s, next);"
    },
    {
        "line": 512,
        "fullcodeline": "if (! parser->m_declEntity->notation)"
    },
    {
        "line": 534,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 538,
        "fullcodeline": "const XML_Char *name = poolStoreString(&dtd->pool, enc, s, next);"
    },
    {
        "line": 541,
        "fullcodeline": "parser->m_declEntity = (ENTITY *)lookup(parser, &dtd->generalEntities,"
    },
    {
        "line": 603,
        "fullcodeline": "= poolStoreString(&parser->m_tempPool, enc, s, next);"
    },
    {
        "line": 604,
        "fullcodeline": "if (! parser->m_declNotationName)"
    },
    {
        "line": 618,
        "fullcodeline": "if (! tem)"
    },
    {
        "line": 631,
        "fullcodeline": "if (! systemId)"
    },
    {
        "line": 724,
        "fullcodeline": "if (myindex < 0)"
    },
    {
        "line": 745,
        "fullcodeline": "&& ! parser->m_groupConnector[parser->m_prologState.level]"
    },
    {
        "line": 858,
        "fullcodeline": "if (! parser->m_declElementType)"
    },
    {
        "line": 916,
        "fullcodeline": "= (quant == XML_CQUANT_NONE ? next : next - enc->minBytesPerChar);"
    },
    {
        "line": 918,
        "fullcodeline": "if (myindex < 0)"
    },
    {
        "line": 923,
        "fullcodeline": "if (! el)"
    },
    {
        "line": 932,
        "fullcodeline": "if (nameLen > UINT_MAX - dtd->contentStringLen) {"
    },
    {
        "line": 959,
        "fullcodeline": "if (dtd->scaffLevel == 0) {"
    },
    {
        "line": 164,
        "fullcodeline": "s + enc->minBytesPerChar,"
    },
    {
        "line": 165,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 182,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 192,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 338,
        "fullcodeline": "prefix = enumValueSep;"
    },
    {
        "line": 370,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 371,
        "fullcodeline": "parser->m_attlistDeclHandler("
    },
    {
        "line": 375,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 386,
        "fullcodeline": "s + enc->minBytesPerChar, next - enc->minBytesPerChar, &dtd->pool,"
    },
    {
        "line": 408,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 409,
        "fullcodeline": "parser->m_attlistDeclHandler("
    },
    {
        "line": 413,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 414,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 422,
        "fullcodeline": "next - enc->minBytesPerChar, XML_ACCOUNT_NONE);"
    },
    {
        "line": 424,
        "fullcodeline": "parser->m_declEntity->textPtr = poolStart(&dtd->entityValuePool);"
    },
    {
        "line": 425,
        "fullcodeline": "parser->m_declEntity->textLen"
    },
    {
        "line": 427,
        "fullcodeline": "poolFinish(&dtd->entityValuePool);"
    },
    {
        "line": 449,
        "fullcodeline": "s + enc->minBytesPerChar,"
    },
    {
        "line": 450,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 485,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 494,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 516,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 517,
        "fullcodeline": "parser->m_unparsedEntityDeclHandler("
    },
    {
        "line": 521,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 539,
        "fullcodeline": "if (! name)"
    },
    {
        "line": 543,
        "fullcodeline": "if (! parser->m_declEntity)"
    },
    {
        "line": 545,
        "fullcodeline": "if (parser->m_declEntity->name != name) {"
    },
    {
        "line": 561,
        "fullcodeline": "poolDiscard(&dtd->pool);"
    },
    {
        "line": 562,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 616,
        "fullcodeline": "s + enc->minBytesPerChar,"
    },
    {
        "line": 617,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 629,
        "fullcodeline": "s + enc->minBytesPerChar,"
    },
    {
        "line": 630,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 731,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 751,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 871,
        "fullcodeline": "XML_Content *content"
    },
    {
        "line": 875,
        "fullcodeline": "content->quant = XML_CQUANT_NONE;"
    },
    {
        "line": 876,
        "fullcodeline": "content->name = NULL;"
    },
    {
        "line": 877,
        "fullcodeline": "content->numchildren = 0;"
    },
    {
        "line": 878,
        "fullcodeline": "content->children = NULL;"
    },
    {
        "line": 879,
        "fullcodeline": "content->type = ((role == XML_ROLE_CONTENT_ANY) ? XML_CTYPE_ANY"
    },
    {
        "line": 881,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 882,
        "fullcodeline": "parser->m_elementDeclHandler("
    },
    {
        "line": 884,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 895,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 928,
        "fullcodeline": "for (; name[nameLen++];)"
    },
    {
        "line": 938,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 956,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 968,
        "fullcodeline": "dtd->in_eldecl = XML_FALSE;"
    },
    {
        "line": 969,
        "fullcodeline": "dtd->contentStringLen = 0;"
    },
    {
        "line": 340,
        "fullcodeline": "prefix = (role == XML_ROLE_ATTRIBUTE_NOTATION_VALUE ? notationPrefix"
    },
    {
        "line": 360,
        "fullcodeline": "if (*parser->m_declAttributeType == XML_T(ASCII_LPAREN)"
    },
    {
        "line": 374,
        "fullcodeline": "role == XML_ROLE_REQUIRED_ATTRIBUTE_VALUE);"
    },
    {
        "line": 398,
        "fullcodeline": "if (*parser->m_declAttributeType == XML_T(ASCII_LPAREN)"
    },
    {
        "line": 412,
        "fullcodeline": "attVal, role == XML_ROLE_FIXED_ATTRIBUTE_VALUE);"
    },
    {
        "line": 426,
        "fullcodeline": "= (int)(poolLength(&dtd->entityValuePool));"
    },
    {
        "line": 437,
        "fullcodeline": "poolDiscard(&dtd->entityValuePool);"
    },
    {
        "line": 546,
        "fullcodeline": "poolDiscard(&dtd->pool);"
    },
    {
        "line": 547,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 686,
        "fullcodeline": "char *const new_connector = (char *)REALLOC("
    },
    {
        "line": 692,
        "fullcodeline": "parser->m_groupConnector = new_connector;"
    },
    {
        "line": 713,
        "fullcodeline": "parser->m_groupConnector"
    },
    {
        "line": 872,
        "fullcodeline": "= (XML_Content *)MALLOC(parser, sizeof(XML_Content));"
    },
    {
        "line": 873,
        "fullcodeline": "if (! content)"
    },
    {
        "line": 960,
        "fullcodeline": "if (! handleDefault) {"
    },
    {
        "line": 361,
        "fullcodeline": "|| (*parser->m_declAttributeType == XML_T(ASCII_N)"
    },
    {
        "line": 368,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 399,
        "fullcodeline": "|| (*parser->m_declAttributeType == XML_T(ASCII_N)"
    },
    {
        "line": 406,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 429,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 430,
        "fullcodeline": "parser->m_entityDeclHandler("
    },
    {
        "line": 434,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 549,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 550,
        "fullcodeline": "parser->m_declEntity->publicId = NULL;"
    },
    {
        "line": 551,
        "fullcodeline": "parser->m_declEntity->is_param = XML_FALSE;"
    },
    {
        "line": 555,
        "fullcodeline": "parser->m_declEntity->is_internal"
    },
    {
        "line": 682,
        "fullcodeline": "if (parser->m_groupSize > (unsigned int)(-1) / 2u) {"
    },
    {
        "line": 688,
        "fullcodeline": "if (new_connector == NULL) {"
    },
    {
        "line": 706,
        "fullcodeline": "int *const new_scaff_index = (int *)REALLOC("
    },
    {
        "line": 710,
        "fullcodeline": "dtd->scaffIndex = new_scaff_index;"
    },
    {
        "line": 714,
        "fullcodeline": "= (char *)MALLOC(parser, parser->m_groupSize = 32);"
    },
    {
        "line": 715,
        "fullcodeline": "if (! parser->m_groupConnector) {"
    },
    {
        "line": 961,
        "fullcodeline": "XML_Content *model = build_model(parser);"
    },
    {
        "line": 964,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 965,
        "fullcodeline": "parser->m_elementDeclHandler("
    },
    {
        "line": 362,
        "fullcodeline": "&& parser->m_declAttributeType[1] == XML_T(ASCII_O))) {"
    },
    {
        "line": 364,
        "fullcodeline": "if (! poolAppendChar(&parser->m_tempPool, XML_T(ASCII_RPAREN))"
    },
    {
        "line": 400,
        "fullcodeline": "&& parser->m_declAttributeType[1] == XML_T(ASCII_O))) {"
    },
    {
        "line": 402,
        "fullcodeline": "if (! poolAppendChar(&parser->m_tempPool, XML_T(ASCII_RPAREN))"
    },
    {
        "line": 523,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 524,
        "fullcodeline": "parser->m_entityDeclHandler("
    },
    {
        "line": 528,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 556,
        "fullcodeline": "= ! (parser->m_parentParser || parser->m_openInternalEntities);"
    },
    {
        "line": 689,
        "fullcodeline": "parser->m_groupSize /= 2;"
    },
    {
        "line": 701,
        "fullcodeline": "if (parser->m_groupSize > (size_t)(-1) / sizeof(int)) {"
    },
    {
        "line": 708,
        "fullcodeline": "if (new_scaff_index == NULL)"
    },
    {
        "line": 716,
        "fullcodeline": "parser->m_groupSize = 0;"
    },
    {
        "line": 962,
        "fullcodeline": "if (! model)"
    },
    {
        "line": 365,
        "fullcodeline": "|| ! poolAppendChar(&parser->m_tempPool, XML_T('\\0')))"
    },
    {
        "line": 403,
        "fullcodeline": "|| ! poolAppendChar(&parser->m_tempPool, XML_T('\\0')))"
    },
    {
        "line": 558,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 687,
        "fullcodeline": "parser, parser->m_groupConnector, parser->m_groupSize *= 2);"
    },
    {
        "line": 707,
        "fullcodeline": "parser, dtd->scaffIndex, parser->m_groupSize * sizeof(int));"
    }
]