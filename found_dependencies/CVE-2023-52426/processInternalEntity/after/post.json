[
    {
        "line": 16,
        "fullcodeline": "entity->open = XML_TRUE;"
    },
    {
        "line": 20,
        "fullcodeline": "entity->processed = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "openEntity->next = parser->m_openInternalEntities;"
    },
    {
        "line": 22,
        "fullcodeline": "parser->m_openInternalEntities = openEntity;"
    },
    {
        "line": 23,
        "fullcodeline": "openEntity->entity = entity;"
    },
    {
        "line": 24,
        "fullcodeline": "openEntity->startTagLevel = parser->m_tagLevel;"
    },
    {
        "line": 25,
        "fullcodeline": "openEntity->betweenDecl = betweenDecl;"
    },
    {
        "line": 26,
        "fullcodeline": "openEntity->internalEventPtr = NULL;"
    },
    {
        "line": 27,
        "fullcodeline": "openEntity->internalEventEndPtr = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "textStart = (const char *)entity->textPtr;"
    },
    {
        "line": 29,
        "fullcodeline": "textEnd = (const char *)(entity->textPtr + entity->textLen);"
    },
    {
        "line": 31,
        "fullcodeline": "next = textStart;"
    },
    {
        "line": 42,
        "fullcodeline": "result = doContent(parser, parser->m_tagLevel, parser->m_internalEncoding,"
    },
    {
        "line": 46,
        "fullcodeline": "if (result == XML_ERROR_NONE) {"
    },
    {
        "line": 8,
        "fullcodeline": "openEntity = parser->m_freeInternalEntities;"
    },
    {
        "line": 9,
        "fullcodeline": "parser->m_freeInternalEntities = openEntity->next;"
    },
    {
        "line": 11,
        "fullcodeline": "openEntity"
    },
    {
        "line": 47,
        "fullcodeline": "if (textEnd != next && parser->m_parsingStatus.parsing == XML_SUSPENDED) {"
    },
    {
        "line": 12,
        "fullcodeline": "= (OPEN_INTERNAL_ENTITY *)MALLOC(parser, sizeof(OPEN_INTERNAL_ENTITY));"
    },
    {
        "line": 13,
        "fullcodeline": "if (! openEntity)"
    },
    {
        "line": 48,
        "fullcodeline": "entity->processed = (int)(next - textStart);"
    },
    {
        "line": 49,
        "fullcodeline": "parser->m_processor = internalEntityProcessor;"
    },
    {
        "line": 54,
        "fullcodeline": "entity->open = XML_FALSE;"
    },
    {
        "line": 55,
        "fullcodeline": "parser->m_openInternalEntities = openEntity->next;"
    },
    {
        "line": 57,
        "fullcodeline": "openEntity->next = parser->m_freeInternalEntities;"
    },
    {
        "line": 58,
        "fullcodeline": "parser->m_freeInternalEntities = openEntity;"
    }
]