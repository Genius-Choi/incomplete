[
    {
        "line": 3,
        "fullcodeline": "std::shared_ptr<cloud_trace::CloudTraceSpan> trace_span("
    },
    {
        "line": 45,
        "fullcodeline": "context->FillCheckRequestInfo(&info);"
    },
    {
        "line": 46,
        "fullcodeline": "context->service_context()->service_control()->Check("
    },
    {
        "line": 7,
        "fullcodeline": "if (!context->method()) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (context->api_key().empty()) {"
    },
    {
        "line": 47,
        "fullcodeline": "info, trace_span.get(),"
    },
    {
        "line": 4,
        "fullcodeline": "CreateSpan(context->cloud_trace(), \"CheckServiceControl\"));"
    },
    {
        "line": 34,
        "fullcodeline": "TRACE(trace_span) << \"Failed at checking caller identity.\";"
    },
    {
        "line": 35,
        "fullcodeline": "continuation("
    },
    {
        "line": 8,
        "fullcodeline": "if (context->GetRequestHTTPMethodWithOverride() == \"OPTIONS\") {"
    },
    {
        "line": 27,
        "fullcodeline": "if (context->method()->allow_unregistered_calls()) {"
    },
    {
        "line": 36,
        "fullcodeline": "Status(Code::UNAUTHENTICATED,"
    },
    {
        "line": 9,
        "fullcodeline": "TRACE(trace_span) << \"OPTIONS request is rejected\";"
    },
    {
        "line": 10,
        "fullcodeline": "continuation(Status(Code::PERMISSION_DENIED,"
    },
    {
        "line": 19,
        "fullcodeline": "} else if (!context->service_context()->service_control() ||"
    },
    {
        "line": 29,
        "fullcodeline": "TRACE(trace_span) << \"Service control check is not needed\";"
    },
    {
        "line": 14,
        "fullcodeline": "TRACE(trace_span) << \"Method is not configured in the service config\";"
    },
    {
        "line": 15,
        "fullcodeline": "continuation(Status(Code::NOT_FOUND, \"Method does not exist.\","
    },
    {
        "line": 20,
        "fullcodeline": "context->method()->skip_service_control()) {"
    },
    {
        "line": 21,
        "fullcodeline": "TRACE(trace_span) << \"Service control check is not needed\";"
    }
]