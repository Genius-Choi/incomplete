[
    {
        "line": 3,
        "fullcodeline": "EXPECT_CALL(*raw_request_, FindHeader(\"x-goog-iap-jwt-assertion\", _))"
    },
    {
        "line": 8,
        "fullcodeline": "EXPECT_CALL(*raw_request_, FindHeader(kAuthHeader, _))"
    },
    {
        "line": 13,
        "fullcodeline": "EXPECT_CALL(*raw_request_, SetAuthToken(auth_token)).Times(1);"
    },
    {
        "line": 14,
        "fullcodeline": "EXPECT_CALL(*raw_env_, DoRunHTTPRequest(_))"
    },
    {
        "line": 28,
        "fullcodeline": "std::cout << \"need be replaced: \" << user_info << std::endl;"
    },
    {
        "line": 29,
        "fullcodeline": "EXPECT_CALL(*raw_request_,"
    },
    {
        "line": 33,
        "fullcodeline": "CheckAuth(context_, [](Status status) { ASSERT_TRUE(status.ok()); });"
    },
    {
        "line": 4,
        "fullcodeline": ".WillOnce(Invoke([](const std::string &, std::string *token) {"
    },
    {
        "line": 9,
        "fullcodeline": ".WillOnce(Invoke([auth_token](const std::string &, std::string *token) {"
    },
    {
        "line": 22,
        "fullcodeline": ".WillOnce(Invoke([](HTTPRequest *req) {"
    },
    {
        "line": 16,
        "fullcodeline": ".WillOnce(Invoke([](HTTPRequest *req) {"
    },
    {
        "line": 30,
        "fullcodeline": "AddHeaderToBackend(kEndpointApiUserInfo, user_info))"
    }
]