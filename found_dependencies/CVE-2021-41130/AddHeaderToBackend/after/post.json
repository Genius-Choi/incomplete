[
    {
        "line": 42,
        "fullcodeline": "ngx_log_debug3("
    },
    {
        "line": 15,
        "fullcodeline": "if (headers.empty()) {"
    },
    {
        "line": 34,
        "fullcodeline": "for (size_t i = 0; i < headers.size(); ++i) {"
    },
    {
        "line": 16,
        "fullcodeline": "ngx_table_elt_t *h = reinterpret_cast<ngx_table_elt_t *>("
    },
    {
        "line": 22,
        "fullcodeline": "h->lowcase_key ="
    },
    {
        "line": 27,
        "fullcodeline": "h->hash = ngx_hash_strlow("
    },
    {
        "line": 31,
        "fullcodeline": "headers.push_back(h);"
    },
    {
        "line": 35,
        "fullcodeline": "ngx_table_elt_t *it = headers[i];"
    },
    {
        "line": 6,
        "fullcodeline": "if (key.size() == h_in.key.len &&"
    },
    {
        "line": 18,
        "fullcodeline": "if (h == nullptr) {"
    },
    {
        "line": 23,
        "fullcodeline": "reinterpret_cast<u_char *>(ngx_pcalloc(r_->pool, key.size()));"
    },
    {
        "line": 24,
        "fullcodeline": "if (h->lowcase_key == nullptr) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (ngx_str_copy_from_std(r_->pool, key, &it->key) != NGX_OK ||"
    },
    {
        "line": 7,
        "fullcodeline": "strncasecmp(key.c_str(), reinterpret_cast<const char *>(h_in.key.data),"
    },
    {
        "line": 9,
        "fullcodeline": "headers.push_back(&h_in);"
    },
    {
        "line": 29,
        "fullcodeline": "reinterpret_cast<u_char *>(const_cast<char *>(key.c_str())),"
    },
    {
        "line": 30,
        "fullcodeline": "key.size());"
    },
    {
        "line": 37,
        "fullcodeline": "ngx_str_copy_from_std(r_->pool, value, &it->value) != NGX_OK) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (!changeAllOccurrence) {"
    },
    {
        "line": 19,
        "fullcodeline": "return utils::Status(Code::INTERNAL, \"Out of memory\");"
    },
    {
        "line": 25,
        "fullcodeline": "return utils::Status(Code::INTERNAL, \"Out of memory\");"
    },
    {
        "line": 38,
        "fullcodeline": "return utils::Status(Code::INTERNAL, \"Out of memory\");"
    }
]