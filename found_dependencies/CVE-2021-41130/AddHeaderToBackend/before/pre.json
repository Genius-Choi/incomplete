[
    {
        "line": 3,
        "fullcodeline": "ngx_table_elt_t *h = nullptr;"
    },
    {
        "line": 34,
        "fullcodeline": "ngx_log_debug2(NGX_LOG_DEBUG_HTTP, r_->connection->log, 0,"
    },
    {
        "line": 12,
        "fullcodeline": "if (h == nullptr) {"
    },
    {
        "line": 13,
        "fullcodeline": "h = reinterpret_cast<ngx_table_elt_t *>("
    },
    {
        "line": 19,
        "fullcodeline": "h->lowcase_key ="
    },
    {
        "line": 30,
        "fullcodeline": "if (ngx_str_copy_from_std(r_->pool, key, &h->key) != NGX_OK ||"
    },
    {
        "line": 31,
        "fullcodeline": "ngx_str_copy_from_std(r_->pool, value, &h->value) != NGX_OK) {"
    },
    {
        "line": 5,
        "fullcodeline": "if (key.size() == h_in.key.len &&"
    },
    {
        "line": 15,
        "fullcodeline": "if (h == nullptr) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (h->lowcase_key == nullptr) {"
    },
    {
        "line": 24,
        "fullcodeline": "h->hash = ngx_hash_strlow("
    },
    {
        "line": 32,
        "fullcodeline": "return utils::Status(Code::INTERNAL, \"Out of memory\");"
    },
    {
        "line": 6,
        "fullcodeline": "strncasecmp(key.c_str(), reinterpret_cast<const char *>(h_in.key.data),"
    },
    {
        "line": 14,
        "fullcodeline": "ngx_list_push(&r_->headers_in.headers));"
    },
    {
        "line": 20,
        "fullcodeline": "reinterpret_cast<u_char *>(ngx_pcalloc(r_->pool, key.size()));"
    },
    {
        "line": 27,
        "fullcodeline": "key.size());"
    },
    {
        "line": 16,
        "fullcodeline": "return utils::Status(Code::INTERNAL, \"Out of memory\");"
    },
    {
        "line": 22,
        "fullcodeline": "return utils::Status(Code::INTERNAL, \"Out of memory\");"
    },
    {
        "line": 26,
        "fullcodeline": "reinterpret_cast<u_char *>(const_cast<char *>(key.c_str())),"
    }
]