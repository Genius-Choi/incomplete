[
    {
        "line": 3,
        "fullcodeline": "RList *list = r_list_newf ((RListFree)free);"
    },
    {
        "line": 115,
        "fullcodeline": "r_list_free (list);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!list || !obj) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (obj->hdr->flags & FLAT_FLAG_GOTPIC) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (obj->hdr->reloc_count > 0) {"
    },
    {
        "line": 6,
        "fullcodeline": "r_list_free (list);"
    },
    {
        "line": 10,
        "fullcodeline": "n_got = get_ngot_entries (obj);"
    },
    {
        "line": 41,
        "fullcodeline": "int n_reloc = obj->hdr->reloc_count;"
    },
    {
        "line": 43,
        "fullcodeline": "amount = n_reloc * sizeof (struct reloc_struct_t);"
    },
    {
        "line": 47,
        "fullcodeline": "struct reloc_struct_t *reloc_table = calloc (1, amount + 1);"
    },
    {
        "line": 51,
        "fullcodeline": "amount = n_reloc * sizeof (ut32);"
    },
    {
        "line": 56,
        "fullcodeline": "ut32 *reloc_pointer_table = calloc (1, amount + 1);"
    },
    {
        "line": 67,
        "fullcodeline": "len = r_buf_read_at (obj->b, obj->hdr->reloc_start,"
    },
    {
        "line": 110,
        "fullcodeline": "free (reloc_pointer_table);"
    },
    {
        "line": 111,
        "fullcodeline": "obj->reloc_table = reloc_table;"
    },
    {
        "line": 44,
        "fullcodeline": "if (amount < n_reloc || amount > UT32_MAX) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (!reloc_table) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (amount < n_reloc || amount > UT32_MAX) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (!reloc_pointer_table) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (obj->hdr->reloc_start + amount > obj->size ||"
    },
    {
        "line": 69,
        "fullcodeline": "if (len != amount) {"
    },
    {
        "line": 74,
        "fullcodeline": "for (i = 0; i < obj->hdr->reloc_count; i++) {"
    },
    {
        "line": 12,
        "fullcodeline": "amount = n_got *  sizeof (ut32);"
    },
    {
        "line": 16,
        "fullcodeline": "struct reloc_struct_t *got_table = calloc ("
    },
    {
        "line": 53,
        "fullcodeline": "free (reloc_table);"
    },
    {
        "line": 58,
        "fullcodeline": "free (reloc_table);"
    },
    {
        "line": 62,
        "fullcodeline": "obj->hdr->reloc_start + amount < amount) {"
    },
    {
        "line": 63,
        "fullcodeline": "free (reloc_table);"
    },
    {
        "line": 64,
        "fullcodeline": "free (reloc_pointer_table);"
    },
    {
        "line": 68,
        "fullcodeline": "(ut8 *)reloc_pointer_table, amount);"
    },
    {
        "line": 70,
        "fullcodeline": "free (reloc_table);"
    },
    {
        "line": 71,
        "fullcodeline": "free (reloc_pointer_table);"
    },
    {
        "line": 76,
        "fullcodeline": "ut32 reloc_offset ="
    },
    {
        "line": 13,
        "fullcodeline": "if (amount < n_got || amount > UT32_MAX) {"
    },
    {
        "line": 77,
        "fullcodeline": "r_swap_ut32 (reloc_pointer_table[i]) +"
    },
    {
        "line": 80,
        "fullcodeline": "if (reloc_offset < obj->hdr->bss_end && reloc_offset < obj->size) {"
    },
    {
        "line": 17,
        "fullcodeline": "1, n_got * sizeof (struct reloc_struct_t));"
    },
    {
        "line": 19,
        "fullcodeline": "ut32 offset = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "obj->n_got = n_got;"
    },
    {
        "line": 35,
        "fullcodeline": "obj->got_table = got_table;"
    },
    {
        "line": 88,
        "fullcodeline": "len = r_buf_read_at (obj->b, reloc_offset,"
    },
    {
        "line": 97,
        "fullcodeline": "reloc_data_offset = r_swap_ut32 (reloc_fixed) + BFLT_HDR_SIZE;"
    },
    {
        "line": 98,
        "fullcodeline": "reloc_table[i].addr_to_patch = reloc_offset;"
    },
    {
        "line": 99,
        "fullcodeline": "reloc_table[i].data_offset = reloc_data_offset;"
    },
    {
        "line": 101,
        "fullcodeline": "RBinReloc *reloc = R_NEW0 (RBinReloc);"
    },
    {
        "line": 20,
        "fullcodeline": "for (i = 0; i < n_got ; offset += 4, i++) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (reloc_offset + sizeof (ut32) > obj->size ||"
    },
    {
        "line": 91,
        "fullcodeline": "if (len != sizeof (ut32)) {"
    },
    {
        "line": 26,
        "fullcodeline": "len = r_buf_read_at (obj->b, obj->hdr->data_start + offset,"
    },
    {
        "line": 31,
        "fullcodeline": "got_table[i].addr_to_patch = got_entry;"
    },
    {
        "line": 32,
        "fullcodeline": "got_table[i].data_offset = got_entry + BFLT_HDR_SIZE;"
    },
    {
        "line": 83,
        "fullcodeline": "reloc_offset + sizeof (ut32) < reloc_offset) {"
    },
    {
        "line": 84,
        "fullcodeline": "free (reloc_table);"
    },
    {
        "line": 85,
        "fullcodeline": "free (reloc_pointer_table);"
    },
    {
        "line": 89,
        "fullcodeline": "(ut8 *)&reloc_fixed,"
    },
    {
        "line": 92,
        "fullcodeline": "eprintf (\"problem while reading relocation entries\\n\");"
    },
    {
        "line": 93,
        "fullcodeline": "free (reloc_table);"
    },
    {
        "line": 94,
        "fullcodeline": "free (reloc_pointer_table);"
    },
    {
        "line": 103,
        "fullcodeline": "reloc->type = R_BIN_RELOC_32;"
    },
    {
        "line": 104,
        "fullcodeline": "reloc->paddr = reloc_table[i].addr_to_patch;"
    },
    {
        "line": 105,
        "fullcodeline": "reloc->vaddr = reloc->paddr;"
    },
    {
        "line": 106,
        "fullcodeline": "r_list_append (list, reloc);"
    },
    {
        "line": 22,
        "fullcodeline": "if (obj->hdr->data_start + offset + 4 > obj->size ||"
    },
    {
        "line": 28,
        "fullcodeline": "if (!VALID_GOT_ENTRY (got_entry) || len != sizeof (ut32)) {"
    },
    {
        "line": 23,
        "fullcodeline": "obj->hdr->data_start + offset + 4 < offset) {"
    },
    {
        "line": 27,
        "fullcodeline": "(ut8 *)&got_entry, sizeof (ut32));"
    }
]