[
    {
        "line": 2,
        "fullcodeline": "unsigned char *data = packet->data + packet->size;"
    },
    {
        "line": 3,
        "fullcodeline": "unsigned int act_size = data_len + (cptype == MT_CPTYPE_PLAINDATA ? 0 : MT_CPHEADER_LEN);"
    },
    {
        "line": 22,
        "fullcodeline": "memcpy(data, mt_mactelnet_cpmagic, sizeof(mt_mactelnet_cpmagic));"
    },
    {
        "line": 25,
        "fullcodeline": "data[4] = cptype;"
    },
    {
        "line": 7,
        "fullcodeline": "if (act_size > MT_PACKET_LEN - packet->size) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (cptype == MT_CPTYPE_PLAINDATA) {"
    },
    {
        "line": 31,
        "fullcodeline": "templen = htonl(data_len);"
    },
    {
        "line": 39,
        "fullcodeline": "if (data_len > 0) {"
    },
    {
        "line": 8,
        "fullcodeline": "fprintf(stderr, _(\"add_control_packet: ERROR, too large packet. Exceeds %d bytes\\n\"), MT_PACKET_LEN);"
    },
    {
        "line": 16,
        "fullcodeline": "memcpy(data, cpdata, data_len);"
    },
    {
        "line": 9,
        "fullcodeline": "return -1;"
    }
]