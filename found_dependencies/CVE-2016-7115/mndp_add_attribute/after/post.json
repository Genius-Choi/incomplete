[
    {
        "line": 2,
        "fullcodeline": "unsigned char *data = packet->data + packet->size;"
    },
    {
        "line": 3,
        "fullcodeline": "unsigned short type = attrtype;"
    },
    {
        "line": 4,
        "fullcodeline": "unsigned short len = data_len;"
    },
    {
        "line": 12,
        "fullcodeline": "type = htons(type);"
    },
    {
        "line": 13,
        "fullcodeline": "memcpy(data, &type, sizeof(type));"
    },
    {
        "line": 15,
        "fullcodeline": "len = htons(len);"
    },
    {
        "line": 16,
        "fullcodeline": "memcpy(data + 2, &len, sizeof(len));"
    },
    {
        "line": 18,
        "fullcodeline": "memcpy(data + 4, attrdata, data_len);"
    },
    {
        "line": 20,
        "fullcodeline": "packet->size += 4 + data_len;"
    },
    {
        "line": 7,
        "fullcodeline": "if (data_len > MT_PACKET_LEN - 4 - packet->size) {"
    },
    {
        "line": 22,
        "fullcodeline": "return 4 + data_len;"
    },
    {
        "line": 8,
        "fullcodeline": "fprintf(stderr, _(\"mndp_add_attribute: ERROR, too large packet. Exceeds %d bytes\\n\"), MT_PACKET_LEN);"
    },
    {
        "line": 9,
        "fullcodeline": "return -1;"
    }
]