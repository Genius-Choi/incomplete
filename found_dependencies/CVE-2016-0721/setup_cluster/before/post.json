[
    {
        "line": 5,
        "fullcodeline": "$logger.info(\"Setting up cluster: \" + params.inspect)"
    },
    {
        "line": 6,
        "fullcodeline": "nodes_rrp = params[:nodes].split(';')"
    },
    {
        "line": 7,
        "fullcodeline": "options = []"
    },
    {
        "line": 8,
        "fullcodeline": "myoptions = JSON.parse(params[:options])"
    },
    {
        "line": 9,
        "fullcodeline": "transport_udp = false"
    },
    {
        "line": 10,
        "fullcodeline": "options_udp = []"
    },
    {
        "line": 11,
        "fullcodeline": "myoptions.each { |o,v|"
    },
    {
        "line": 48,
        "fullcodeline": "nodes_options = nodes + options"
    },
    {
        "line": 50,
        "fullcodeline": "stdout, stderr, retval = run_cmd("
    },
    {
        "line": 2,
        "fullcodeline": "if not allowed_for_superuser(session)"
    },
    {
        "line": 54,
        "fullcodeline": "if retval != 0"
    },
    {
        "line": 43,
        "fullcodeline": "nodes = []"
    },
    {
        "line": 44,
        "fullcodeline": "nodes_rrp.each { |node| nodes << node.split(',')[0] }"
    },
    {
        "line": 46,
        "fullcodeline": "nodes = nodes_rrp"
    },
    {
        "line": 49,
        "fullcodeline": "nodes_options += options_udp if transport_udp"
    },
    {
        "line": 52,
        "fullcodeline": "\"--name\", params[:clustername], *nodes_options"
    },
    {
        "line": 55,
        "fullcodeline": "return ["
    },
    {
        "line": 57,
        "fullcodeline": "(stdout + [''] + stderr).collect { |line| line.rstrip() }.join(\"\\n\")"
    }
]