[
    {
        "line": 14,
        "fullcodeline": "$logger.info(\"Adding #{new_nodename} to pcs_settings.conf\")"
    },
    {
        "line": 15,
        "fullcodeline": "corosync_nodes = get_corosync_nodes()"
    },
    {
        "line": 16,
        "fullcodeline": "pcs_config = PCSConfig.new(Cfgsync::PcsdSettings.from_file('{}').text())"
    },
    {
        "line": 17,
        "fullcodeline": "pcs_config.update_cluster($cluster_name, corosync_nodes)"
    },
    {
        "line": 18,
        "fullcodeline": "sync_config = Cfgsync::PcsdSettings.from_text(pcs_config.text())"
    },
    {
        "line": 21,
        "fullcodeline": "Cfgsync::save_sync_new_version("
    },
    {
        "line": 1,
        "fullcodeline": "def add_node(auth_user, new_nodename, all=false, auto_start=true)"
    },
    {
        "line": 24,
        "fullcodeline": "return retval, out.join(\"\\n\") + stderror.join(\"\\n\")"
    },
    {
        "line": 3,
        "fullcodeline": "command = [PCS, \"cluster\", \"node\", \"add\", new_nodename]"
    },
    {
        "line": 8,
        "fullcodeline": "out, stderror, retval = run_cmd(auth_user, *command)"
    },
    {
        "line": 10,
        "fullcodeline": "out, stderror, retval = run_cmd("
    },
    {
        "line": 5,
        "fullcodeline": "command << '--start'"
    },
    {
        "line": 6,
        "fullcodeline": "command << '--enable'"
    }
]