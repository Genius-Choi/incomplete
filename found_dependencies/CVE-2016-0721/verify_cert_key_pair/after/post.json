[
    {
        "line": 2,
        "fullcodeline": "errors = []"
    },
    {
        "line": 3,
        "fullcodeline": "cert_modulus = nil"
    },
    {
        "line": 4,
        "fullcodeline": "key_modulus = nil"
    },
    {
        "line": 6,
        "fullcodeline": "stdout, stderr, retval = run_cmd_options("
    },
    {
        "line": 19,
        "fullcodeline": "stdout, stderr, retval = run_cmd_options("
    },
    {
        "line": 13,
        "fullcodeline": "if retval != 0"
    },
    {
        "line": 26,
        "fullcodeline": "if retval != 0"
    },
    {
        "line": 32,
        "fullcodeline": "if errors.empty? and cert_modulus and key_modulus"
    },
    {
        "line": 7,
        "fullcodeline": "PCSAuth.getSuperuserAuth(),"
    },
    {
        "line": 14,
        "fullcodeline": "errors << \"Invalid certificate: #{stderr.join}\""
    },
    {
        "line": 20,
        "fullcodeline": "PCSAuth.getSuperuserAuth(),"
    },
    {
        "line": 27,
        "fullcodeline": "errors << \"Invalid key: #{stderr.join}\""
    },
    {
        "line": 8,
        "fullcodeline": "{"
    },
    {
        "line": 9,
        "fullcodeline": "'stdin' => cert,"
    },
    {
        "line": 21,
        "fullcodeline": "{"
    },
    {
        "line": 22,
        "fullcodeline": "'stdin' => key,"
    },
    {
        "line": 33,
        "fullcodeline": "if cert_modulus != key_modulus"
    },
    {
        "line": 16,
        "fullcodeline": "cert_modulus = stdout.join.strip"
    },
    {
        "line": 29,
        "fullcodeline": "key_modulus = stdout.join.strip"
    },
    {
        "line": 34,
        "fullcodeline": "errors << 'Certificate does not match the key'"
    }
]