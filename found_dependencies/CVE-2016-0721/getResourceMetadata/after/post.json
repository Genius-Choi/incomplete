[
    {
        "line": 2,
        "fullcodeline": "options_required = {}"
    },
    {
        "line": 3,
        "fullcodeline": "options_optional = {}"
    },
    {
        "line": 4,
        "fullcodeline": "long_desc = \"\""
    },
    {
        "line": 5,
        "fullcodeline": "short_desc = \"\""
    },
    {
        "line": 8,
        "fullcodeline": "resource_dirs = ["
    },
    {
        "line": 40,
        "fullcodeline": "doc.elements.each('resource-agent/longdesc') {|ld|"
    },
    {
        "line": 43,
        "fullcodeline": "doc.elements.each('resource-agent/shortdesc') {|ld|"
    },
    {
        "line": 47,
        "fullcodeline": "doc.elements.each('resource-agent/parameters/parameter') { |param|"
    },
    {
        "line": 11,
        "fullcodeline": "if not resource_dirs.any? { |allowed| resourcepath.start_with?(allowed) }"
    },
    {
        "line": 19,
        "fullcodeline": "if resourcepath.end_with?('.xml')"
    },
    {
        "line": 75,
        "fullcodeline": "[options_required, options_optional, [short_desc, long_desc]]"
    },
    {
        "line": 12,
        "fullcodeline": "$logger.error("
    },
    {
        "line": 26,
        "fullcodeline": "ENV['OCF_ROOT'] = OCF_ROOT"
    },
    {
        "line": 27,
        "fullcodeline": "stdout, stderr, retval = run_cmd(auth_user, resourcepath, 'meta-data')"
    },
    {
        "line": 28,
        "fullcodeline": "metadata = stdout.join"
    },
    {
        "line": 32,
        "fullcodeline": "doc = REXML::Document.new(metadata)"
    },
    {
        "line": 13,
        "fullcodeline": "\"Unable to get metadata of resource agent '#{resourcepath}': \" +"
    },
    {
        "line": 16,
        "fullcodeline": "return [options_required, options_optional, [short_desc, long_desc]]"
    },
    {
        "line": 34,
        "fullcodeline": "$logger.error("
    },
    {
        "line": 7,
        "fullcodeline": "resourcepath = Pathname.new(resourcepath).cleanpath.to_s"
    },
    {
        "line": 21,
        "fullcodeline": "metadata = IO.read(resourcepath)"
    },
    {
        "line": 35,
        "fullcodeline": "\"Unable to parse metadata of resource agent '#{resourcepath}': #{e}\""
    },
    {
        "line": 37,
        "fullcodeline": "return [options_required, options_optional, [short_desc, long_desc]]"
    },
    {
        "line": 23,
        "fullcodeline": "metadata = \"\""
    }
]