[
    {
        "line": 6,
        "fullcodeline": "cib_dom = get_cib_dom(session)"
    },
    {
        "line": 7,
        "fullcodeline": "@cur_resource = get_resource_by_id(params[:resource], cib_dom)"
    },
    {
        "line": 8,
        "fullcodeline": "@groups = get_resource_groups(cib_dom)"
    },
    {
        "line": 9,
        "fullcodeline": "@version = params[:version]"
    },
    {
        "line": 2,
        "fullcodeline": "if not allowed_for_local_cluster(session, Permissions::READ)"
    },
    {
        "line": 11,
        "fullcodeline": "if @cur_resource.instance_of?(ClusterEntity::Primitive) and !@cur_resource.stonith"
    },
    {
        "line": 15,
        "fullcodeline": "@resource = ResourceAgent.new(@cur_resource.agentname)"
    },
    {
        "line": 23,
        "fullcodeline": "@existing_resource = true"
    },
    {
        "line": 16,
        "fullcodeline": "if @cur_resource.provider == 'heartbeat'"
    },
    {
        "line": 30,
        "fullcodeline": "\"Resource #{params[:resource]} doesn't exist\""
    },
    {
        "line": 12,
        "fullcodeline": "@cur_resource_group = @cur_resource.get_group"
    },
    {
        "line": 13,
        "fullcodeline": "@cur_resource_clone = @cur_resource.get_clone"
    },
    {
        "line": 14,
        "fullcodeline": "@cur_resource_ms = @cur_resource.get_master"
    },
    {
        "line": 17,
        "fullcodeline": "@resource.required_options, @resource.optional_options, @resource.info = getResourceMetadata(session, HEARTBEAT_AGENTS_DIR + @cur_resource.type)"
    },
    {
        "line": 18,
        "fullcodeline": "elsif @cur_resource.provider == 'pacemaker'"
    },
    {
        "line": 25,
        "fullcodeline": "erb :resourceagentform"
    },
    {
        "line": 19,
        "fullcodeline": "@resource.required_options, @resource.optional_options, @resource.info = getResourceMetadata(session, PACEMAKER_AGENTS_DIR + @cur_resource.type)"
    },
    {
        "line": 20,
        "fullcodeline": "elsif @cur_resource._class == 'nagios'"
    },
    {
        "line": 21,
        "fullcodeline": "@resource.required_options, @resource.optional_options, @resource.info = getResourceMetadata(session, NAGIOS_METADATA_DIR + @cur_resource.type + '.xml')"
    }
]