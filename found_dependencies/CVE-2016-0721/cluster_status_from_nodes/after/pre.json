[
    {
        "line": 2,
        "fullcodeline": "node_map = {}"
    },
    {
        "line": 3,
        "fullcodeline": "forbidden_nodes = {}"
    },
    {
        "line": 4,
        "fullcodeline": "overview = {"
    },
    {
        "line": 14,
        "fullcodeline": "threads = []"
    },
    {
        "line": 15,
        "fullcodeline": "cluster_nodes.uniq.each { |node|"
    },
    {
        "line": 63,
        "fullcodeline": "threads.each { |t| t.join }"
    },
    {
        "line": 65,
        "fullcodeline": "cluster_nodes_map = {}"
    },
    {
        "line": 66,
        "fullcodeline": "node_status_list = []"
    },
    {
        "line": 67,
        "fullcodeline": "quorate_nodes = []"
    },
    {
        "line": 68,
        "fullcodeline": "not_authorized_nodes = []"
    },
    {
        "line": 69,
        "fullcodeline": "old_status = false"
    },
    {
        "line": 70,
        "fullcodeline": "node_map.each { |node_name, cluster_status|"
    },
    {
        "line": 84,
        "fullcodeline": "node_status_list.each { |node|"
    },
    {
        "line": 123,
        "fullcodeline": "status.delete(:node)"
    },
    {
        "line": 87,
        "fullcodeline": "if cluster_nodes_map.length < 1"
    },
    {
        "line": 146,
        "fullcodeline": "if not_authorized_nodes.length > 0"
    },
    {
        "line": 197,
        "fullcodeline": "status[:status] = 'ok' if status[:status] == 'unknown'"
    },
    {
        "line": 5,
        "fullcodeline": ":cluster_name => cluster_name,"
    },
    {
        "line": 6,
        "fullcodeline": ":error_list => [],"
    },
    {
        "line": 7,
        "fullcodeline": ":warning_list => [],"
    },
    {
        "line": 8,
        "fullcodeline": ":quorate => nil,"
    },
    {
        "line": 9,
        "fullcodeline": ":status => 'unknown',"
    },
    {
        "line": 10,
        "fullcodeline": ":node_list => [],"
    },
    {
        "line": 11,
        "fullcodeline": ":resource_list => [],"
    },
    {
        "line": 93,
        "fullcodeline": "status = overview.update(cluster_nodes_map[quorate_nodes[0]])"
    },
    {
        "line": 94,
        "fullcodeline": "status[:quorate] = true"
    },
    {
        "line": 95,
        "fullcodeline": "status[:node_list] = node_status_list"
    },
    {
        "line": 126,
        "fullcodeline": "fence_count = 0"
    },
    {
        "line": 167,
        "fullcodeline": "status[:status] == 'unknown'"
    },
    {
        "line": 171,
        "fullcodeline": "if status[:error_list].length > 0 or (not status[:quorate].nil? and not status[:quorate])"
    },
    {
        "line": 172,
        "fullcodeline": "status[:status] = 'error'"
    },
    {
        "line": 186,
        "fullcodeline": "if status[:status] != 'error'"
    },
    {
        "line": 100,
        "fullcodeline": "node_to_use = cluster_nodes_map.values[0]"
    },
    {
        "line": 107,
        "fullcodeline": "status = overview.update(node_to_use)"
    },
    {
        "line": 108,
        "fullcodeline": "status[:quorate] = false"
    },
    {
        "line": 109,
        "fullcodeline": "status[:node_list] = node_status_list"
    },
    {
        "line": 112,
        "fullcodeline": "status = overview"
    },
    {
        "line": 113,
        "fullcodeline": "status[:quorate] = nil"
    },
    {
        "line": 114,
        "fullcodeline": "status[:node_list] = node_status_list"
    },
    {
        "line": 127,
        "fullcodeline": "status[:resource_list].each { |r|"
    },
    {
        "line": 139,
        "fullcodeline": "not is_cib_true(status[:cluster_settings]['stonith-enabled'.to_sym])"
    },
    {
        "line": 147,
        "fullcodeline": "status[:warning_list] << {"
    },
    {
        "line": 148,
        "fullcodeline": ":message => 'Not authorized against node(s) '\\"
    },
    {
        "line": 150,
        "fullcodeline": ":type => 'nodes_not_authorized',"
    },
    {
        "line": 151,
        "fullcodeline": ":node_list => not_authorized_nodes,"
    },
    {
        "line": 175,
        "fullcodeline": "status[:status] = 'warning'"
    },
    {
        "line": 177,
        "fullcodeline": "status[:node_list].each { |node|"
    },
    {
        "line": 133,
        "fullcodeline": "status[:warning_list] << {"
    },
    {
        "line": 134,
        "fullcodeline": ":message => 'No fence devices configured in the cluster',"
    },
    {
        "line": 140,
        "fullcodeline": "status[:warning_list] << {"
    },
    {
        "line": 141,
        "fullcodeline": ":message => 'Stonith is not enabled',"
    },
    {
        "line": 149,
        "fullcodeline": "+ not_authorized_nodes.join(', '),"
    },
    {
        "line": 157,
        "fullcodeline": "status[:warning_list] << {"
    },
    {
        "line": 158,
        "fullcodeline": ":message => 'Cluster is running an old version of pcs/pcsd which '\\"
    },
    {
        "line": 160,
        "fullcodeline": ":type => 'old_pcsd'"
    },
    {
        "line": 163,
        "fullcodeline": "status[:error_list] << {"
    },
    {
        "line": 164,
        "fullcodeline": ":message => 'Unable to connect to the cluster.'"
    },
    {
        "line": 187,
        "fullcodeline": "status[:resource_list].each { |resource|"
    }
]