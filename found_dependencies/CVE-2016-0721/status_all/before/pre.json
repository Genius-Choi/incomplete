[
    {
        "line": 6,
        "fullcodeline": "final_response = {}"
    },
    {
        "line": 7,
        "fullcodeline": "threads = []"
    },
    {
        "line": 8,
        "fullcodeline": "forbidden_nodes = {}"
    },
    {
        "line": 32,
        "fullcodeline": "node_list = []"
    },
    {
        "line": 33,
        "fullcodeline": "final_response.each { |fr,n|"
    },
    {
        "line": 1,
        "fullcodeline": "def status_all(params, request, session, nodes=[], dont_update_config=false)"
    },
    {
        "line": 2,
        "fullcodeline": "if nodes == nil"
    },
    {
        "line": 41,
        "fullcodeline": "if node_list.length > 0"
    },
    {
        "line": 57,
        "fullcodeline": "return JSON.generate(final_response)"
    },
    {
        "line": 42,
        "fullcodeline": "config = PCSConfig.new(Cfgsync::PcsdSettings.from_file('{}').text())"
    },
    {
        "line": 43,
        "fullcodeline": "old_node_list = config.get_nodes(params[:cluster])"
    },
    {
        "line": 56,
        "fullcodeline": "$logger.debug(\"NODE LIST: \" + node_list.inspect)"
    },
    {
        "line": 3,
        "fullcodeline": "return JSON.generate({\"error\" => \"true\"})"
    },
    {
        "line": 44,
        "fullcodeline": "if !(dont_update_config or config.cluster_nodes_equal?(params[:cluster], node_list))"
    },
    {
        "line": 46,
        "fullcodeline": "config.update_cluster(params[:cluster], node_list)"
    },
    {
        "line": 47,
        "fullcodeline": "sync_config = Cfgsync::PcsdSettings.from_text(config.text())"
    },
    {
        "line": 50,
        "fullcodeline": "Cfgsync::save_sync_new_version("
    },
    {
        "line": 45,
        "fullcodeline": "$logger.info(\"Updating node list for: #{params[:cluster]} #{old_node_list}->#{node_list}\")"
    },
    {
        "line": 51,
        "fullcodeline": "sync_config, get_corosync_nodes(), $cluster_name, true"
    },
    {
        "line": 53,
        "fullcodeline": "return status_all(params, request, session, node_list, true)"
    }
]