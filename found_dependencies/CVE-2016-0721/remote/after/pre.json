[
    {
        "line": 2,
        "fullcodeline": "remote_cmd_without_pacemaker = {"
    },
    {
        "line": 51,
        "fullcodeline": "remote_cmd_with_pacemaker = {"
    },
    {
        "line": 87,
        "fullcodeline": "command = params[:command].to_sym"
    },
    {
        "line": 89,
        "fullcodeline": "if remote_cmd_without_pacemaker.include? command"
    },
    {
        "line": 3,
        "fullcodeline": ":status => method(:node_status),"
    },
    {
        "line": 4,
        "fullcodeline": ":status_all => method(:status_all),"
    },
    {
        "line": 5,
        "fullcodeline": ":cluster_status => method(:cluster_status_remote),"
    },
    {
        "line": 6,
        "fullcodeline": ":auth => method(:auth),"
    },
    {
        "line": 7,
        "fullcodeline": ":check_auth => method(:check_auth),"
    },
    {
        "line": 8,
        "fullcodeline": ":setup_cluster => method(:setup_cluster),"
    },
    {
        "line": 9,
        "fullcodeline": ":create_cluster => method(:create_cluster),"
    },
    {
        "line": 10,
        "fullcodeline": ":get_quorum_info => method(:get_quorum_info),"
    },
    {
        "line": 11,
        "fullcodeline": ":get_cib => method(:get_cib),"
    },
    {
        "line": 12,
        "fullcodeline": ":get_corosync_conf => method(:get_corosync_conf_remote),"
    },
    {
        "line": 13,
        "fullcodeline": ":set_cluster_conf => method(:set_cluster_conf),"
    },
    {
        "line": 14,
        "fullcodeline": ":set_corosync_conf => method(:set_corosync_conf),"
    },
    {
        "line": 15,
        "fullcodeline": ":get_sync_capabilities => method(:get_sync_capabilities),"
    },
    {
        "line": 16,
        "fullcodeline": ":set_sync_options => method(:set_sync_options),"
    },
    {
        "line": 17,
        "fullcodeline": ":get_configs => method(:get_configs),"
    },
    {
        "line": 18,
        "fullcodeline": ":set_configs => method(:set_configs),"
    },
    {
        "line": 19,
        "fullcodeline": ":set_certs => method(:set_certs),"
    },
    {
        "line": 20,
        "fullcodeline": ":pcsd_restart => method(:remote_pcsd_restart),"
    },
    {
        "line": 21,
        "fullcodeline": ":get_permissions => method(:get_permissions_remote),"
    },
    {
        "line": 22,
        "fullcodeline": ":set_permissions => method(:set_permissions_remote),"
    },
    {
        "line": 23,
        "fullcodeline": ":cluster_start => method(:cluster_start),"
    },
    {
        "line": 24,
        "fullcodeline": ":cluster_stop => method(:cluster_stop),"
    },
    {
        "line": 25,
        "fullcodeline": ":config_backup => method(:config_backup),"
    },
    {
        "line": 26,
        "fullcodeline": ":config_restore => method(:config_restore),"
    },
    {
        "line": 27,
        "fullcodeline": ":node_restart => method(:node_restart),"
    },
    {
        "line": 28,
        "fullcodeline": ":node_standby => method(:node_standby),"
    },
    {
        "line": 29,
        "fullcodeline": ":node_unstandby => method(:node_unstandby),"
    },
    {
        "line": 30,
        "fullcodeline": ":cluster_enable => method(:cluster_enable),"
    },
    {
        "line": 31,
        "fullcodeline": ":cluster_disable => method(:cluster_disable),"
    },
    {
        "line": 32,
        "fullcodeline": ":resource_status => method(:resource_status),"
    },
    {
        "line": 33,
        "fullcodeline": ":get_sw_versions => method(:get_sw_versions),"
    },
    {
        "line": 34,
        "fullcodeline": ":node_available => method(:remote_node_available),"
    },
    {
        "line": 35,
        "fullcodeline": ":add_node_all => lambda { |params_, request_, auth_user_|"
    },
    {
        "line": 38,
        "fullcodeline": ":add_node => lambda { |params_, request_, auth_user_|"
    },
    {
        "line": 41,
        "fullcodeline": ":remove_nodes => method(:remote_remove_nodes),"
    },
    {
        "line": 42,
        "fullcodeline": ":remove_node => method(:remote_remove_node),"
    },
    {
        "line": 43,
        "fullcodeline": ":cluster_destroy => method(:cluster_destroy),"
    },
    {
        "line": 44,
        "fullcodeline": ":get_wizard => method(:get_wizard),"
    },
    {
        "line": 45,
        "fullcodeline": ":wizard_submit => method(:wizard_submit),"
    },
    {
        "line": 46,
        "fullcodeline": ":get_tokens => method(:get_tokens),"
    },
    {
        "line": 47,
        "fullcodeline": ":get_cluster_tokens => method(:get_cluster_tokens),"
    },
    {
        "line": 48,
        "fullcodeline": ":save_tokens => method(:save_tokens),"
    },
    {
        "line": 49,
        "fullcodeline": ":get_cluster_properties_definition => method(:get_cluster_properties_definition)"
    },
    {
        "line": 52,
        "fullcodeline": ":resource_start => method(:resource_start),"
    },
    {
        "line": 53,
        "fullcodeline": ":resource_stop => method(:resource_stop),"
    },
    {
        "line": 54,
        "fullcodeline": ":resource_cleanup => method(:resource_cleanup),"
    },
    {
        "line": 55,
        "fullcodeline": ":resource_form => method(:resource_form),"
    },
    {
        "line": 56,
        "fullcodeline": ":fence_device_form => method(:fence_device_form),"
    },
    {
        "line": 57,
        "fullcodeline": ":update_resource => method(:update_resource),"
    },
    {
        "line": 58,
        "fullcodeline": ":update_fence_device => method(:update_fence_device),"
    },
    {
        "line": 59,
        "fullcodeline": ":resource_metadata => method(:resource_metadata),"
    },
    {
        "line": 60,
        "fullcodeline": ":fence_device_metadata => method(:fence_device_metadata),"
    },
    {
        "line": 61,
        "fullcodeline": ":get_avail_resource_agents => method(:get_avail_resource_agents),"
    },
    {
        "line": 62,
        "fullcodeline": ":get_avail_fence_agents => method(:get_avail_fence_agents),"
    },
    {
        "line": 63,
        "fullcodeline": ":remove_resource => method(:remove_resource),"
    },
    {
        "line": 64,
        "fullcodeline": ":add_constraint_remote => method(:add_constraint_remote),"
    },
    {
        "line": 65,
        "fullcodeline": ":add_constraint_rule_remote => method(:add_constraint_rule_remote),"
    },
    {
        "line": 66,
        "fullcodeline": ":add_constraint_set_remote => method(:add_constraint_set_remote),"
    },
    {
        "line": 67,
        "fullcodeline": ":remove_constraint_remote => method(:remove_constraint_remote),"
    },
    {
        "line": 68,
        "fullcodeline": ":remove_constraint_rule_remote => method(:remove_constraint_rule_remote),"
    },
    {
        "line": 69,
        "fullcodeline": ":add_meta_attr_remote => method(:add_meta_attr_remote),"
    },
    {
        "line": 70,
        "fullcodeline": ":add_group => method(:add_group),"
    },
    {
        "line": 71,
        "fullcodeline": ":update_cluster_settings => method(:update_cluster_settings),"
    },
    {
        "line": 72,
        "fullcodeline": ":add_fence_level_remote => method(:add_fence_level_remote),"
    },
    {
        "line": 73,
        "fullcodeline": ":add_node_attr_remote => method(:add_node_attr_remote),"
    },
    {
        "line": 74,
        "fullcodeline": ":add_acl_role => method(:add_acl_role_remote),"
    },
    {
        "line": 75,
        "fullcodeline": ":remove_acl_roles => method(:remove_acl_roles_remote),"
    },
    {
        "line": 76,
        "fullcodeline": ":add_acl => method(:add_acl_remote),"
    },
    {
        "line": 77,
        "fullcodeline": ":remove_acl => method(:remove_acl_remote),"
    },
    {
        "line": 78,
        "fullcodeline": ":resource_change_group => method(:resource_change_group),"
    },
    {
        "line": 79,
        "fullcodeline": ":resource_master => method(:resource_master),"
    },
    {
        "line": 80,
        "fullcodeline": ":resource_clone => method(:resource_clone),"
    },
    {
        "line": 81,
        "fullcodeline": ":resource_unclone => method(:resource_unclone),"
    },
    {
        "line": 82,
        "fullcodeline": ":resource_ungroup => method(:resource_ungroup),"
    },
    {
        "line": 83,
        "fullcodeline": ":set_resource_utilization => method(:set_resource_utilization),"
    },
    {
        "line": 84,
        "fullcodeline": ":set_node_utilization => method(:set_node_utilization)"
    },
    {
        "line": 90,
        "fullcodeline": "return remote_cmd_without_pacemaker[command].call("
    },
    {
        "line": 93,
        "fullcodeline": "elsif remote_cmd_with_pacemaker.include? command"
    },
    {
        "line": 100,
        "fullcodeline": "return [404, \"Unknown Request\"]"
    },
    {
        "line": 95,
        "fullcodeline": "return remote_cmd_with_pacemaker[command].call(params, request, auth_user)"
    },
    {
        "line": 97,
        "fullcodeline": "return [200,'{\"pacemaker_not_running\":true}']"
    }
]