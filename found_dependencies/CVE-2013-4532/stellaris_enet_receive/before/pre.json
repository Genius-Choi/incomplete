[
    {
        "line": 3,
        "fullcodeline": "stellaris_enet_state *s = qemu_get_nic_opaque(nc);"
    },
    {
        "line": 15,
        "fullcodeline": "DPRINTF(\"Received packet len=%zu\\n\", size);"
    },
    {
        "line": 16,
        "fullcodeline": "n = s->next_packet + s->np;"
    },
    {
        "line": 19,
        "fullcodeline": "s->np++;"
    },
    {
        "line": 22,
        "fullcodeline": "p = s->rx[n].data;"
    },
    {
        "line": 25,
        "fullcodeline": "memcpy (p, buf, size);"
    },
    {
        "line": 26,
        "fullcodeline": "p += size;"
    },
    {
        "line": 27,
        "fullcodeline": "crc = crc32(~0, buf, size);"
    },
    {
        "line": 37,
        "fullcodeline": "s->ris |= SE_INT_RX;"
    },
    {
        "line": 8,
        "fullcodeline": "if ((s->rctl & SE_RCTL_RXEN) == 0)"
    },
    {
        "line": 10,
        "fullcodeline": "if (s->np >= 31) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (n >= 31)"
    },
    {
        "line": 24,
        "fullcodeline": "*(p++) = (size + 6) >> 8;"
    },
    {
        "line": 29,
        "fullcodeline": "*(p++) = crc >> 8;"
    },
    {
        "line": 30,
        "fullcodeline": "*(p++) = crc >> 16;"
    },
    {
        "line": 31,
        "fullcodeline": "*(p++) = crc >> 24;"
    },
    {
        "line": 23,
        "fullcodeline": "*(p++) = (size + 6);"
    },
    {
        "line": 28,
        "fullcodeline": "*(p++) = crc;"
    },
    {
        "line": 33,
        "fullcodeline": "if ((size & 3) != 2) {"
    },
    {
        "line": 9,
        "fullcodeline": "return -1;"
    },
    {
        "line": 12,
        "fullcodeline": "return -1;"
    },
    {
        "line": 34,
        "fullcodeline": "memset(p, 0, (6 - size) & 3);"
    }
]