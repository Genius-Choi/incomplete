[
    {
        "line": 5,
        "fullcodeline": "input_file = tmp_path / 'input_file.pkl'"
    },
    {
        "line": 6,
        "fullcodeline": "token_file = tmp_path / 'token.txt'"
    },
    {
        "line": 7,
        "fullcodeline": "output_file = tmp_path / 'output.pkl'"
    },
    {
        "line": 9,
        "fullcodeline": "environ = {'INPUT_FILE': str(input_file),"
    },
    {
        "line": 14,
        "fullcodeline": "os.environ = environ"
    },
    {
        "line": 16,
        "fullcodeline": "input_args = {'query': 'select *'}"
    },
    {
        "line": 24,
        "fullcodeline": "dispatch_rpc.return_value = pd.DataFrame()"
    },
    {
        "line": 25,
        "fullcodeline": "SPARQLWrapper.return_value.query.return_value.convert.return_value = \\"
    },
    {
        "line": 28,
        "fullcodeline": "wrapper.sparql_wrapper(MODULE_NAME)"
    },
    {
        "line": 30,
        "fullcodeline": "dispatch_rpc.assert_called_once()"
    },
    {
        "line": 32,
        "fullcodeline": "target_df = pd.DataFrame([[1, 2]], columns=['column1', 'column2'])"
    },
    {
        "line": 18,
        "fullcodeline": "with input_file.open('wb') as f:"
    },
    {
        "line": 21,
        "fullcodeline": "with token_file.open('w') as f:"
    },
    {
        "line": 26,
        "fullcodeline": "DATA.encode()"
    },
    {
        "line": 33,
        "fullcodeline": "pd.testing.assert_frame_equal(target_df, dispatch_rpc.call_args[0][0])"
    },
    {
        "line": 10,
        "fullcodeline": "'TOKEN_FILE': str(token_file),"
    },
    {
        "line": 12,
        "fullcodeline": "'OUTPUT_FILE': str(output_file)}"
    },
    {
        "line": 19,
        "fullcodeline": "json.dumps(input_args, f)"
    },
    {
        "line": 22,
        "fullcodeline": "f.write(TOKEN)"
    }
]