[
    {
        "line": 3,
        "fullcodeline": "int chunks = srclen / chunklen; // complete chunks!"
    },
    {
        "line": 4,
        "fullcodeline": "int restlen = srclen - chunks * chunklen; /* srclen % chunklen */"
    },
    {
        "line": 6,
        "fullcodeline": "int out_len = (chunks + 1) * endlen + srclen;"
    },
    {
        "line": 7,
        "fullcodeline": "String ret(out_len, ReserveString);"
    },
    {
        "line": 11,
        "fullcodeline": "const char *pMax = src + srclen - chunklen + 1;"
    },
    {
        "line": 27,
        "fullcodeline": "ret.setSize(q - dest);"
    },
    {
        "line": 12,
        "fullcodeline": "for (p = src, q = dest; p < pMax; ) {"
    },
    {
        "line": 8,
        "fullcodeline": "char *dest = ret.bufferSlice().ptr;"
    },
    {
        "line": 13,
        "fullcodeline": "memcpy(q, p, chunklen);"
    },
    {
        "line": 14,
        "fullcodeline": "q += chunklen;"
    },
    {
        "line": 15,
        "fullcodeline": "memcpy(q, end, endlen);"
    },
    {
        "line": 16,
        "fullcodeline": "q += endlen;"
    },
    {
        "line": 17,
        "fullcodeline": "p += chunklen;"
    },
    {
        "line": 21,
        "fullcodeline": "memcpy(q, p, restlen);"
    },
    {
        "line": 22,
        "fullcodeline": "q += restlen;"
    },
    {
        "line": 23,
        "fullcodeline": "memcpy(q, end, endlen);"
    },
    {
        "line": 24,
        "fullcodeline": "q += endlen;"
    }
]