[
    {
        "line": 9,
        "fullcodeline": "name = python_safe_name(docker_reference.replace(\"docker://\", \"\"))"
    },
    {
        "line": 10,
        "fullcodeline": "filename = f\"{name}.tar\""
    },
    {
        "line": 11,
        "fullcodeline": "download_directory = to or tempfile.mkdtemp()"
    },
    {
        "line": 12,
        "fullcodeline": "output_file = Path(download_directory, filename)"
    },
    {
        "line": 13,
        "fullcodeline": "target = f\"docker-archive:{output_file}\""
    },
    {
        "line": 15,
        "fullcodeline": "skopeo_executable = _get_skopeo_location()"
    },
    {
        "line": 16,
        "fullcodeline": "platform_args = []"
    },
    {
        "line": 17,
        "fullcodeline": "platform = get_docker_image_platform(docker_reference)"
    },
    {
        "line": 26,
        "fullcodeline": "platform_args = \" \".join(platform_args)"
    },
    {
        "line": 28,
        "fullcodeline": "cmd = ("
    },
    {
        "line": 32,
        "fullcodeline": "logger.info(f\"Fetching image with: {cmd}\")"
    },
    {
        "line": 34,
        "fullcodeline": "logger.info(output)"
    },
    {
        "line": 38,
        "fullcodeline": "checksums = multi_checksums(output_file, (\"md5\", \"sha1\"))"
    },
    {
        "line": 29,
        "fullcodeline": "f\"{skopeo_executable} copy --insecure-policy \""
    },
    {
        "line": 33,
        "fullcodeline": "exitcode, output = pipes.run_command(cmd)"
    },
    {
        "line": 35,
        "fullcodeline": "if exitcode != 0:"
    },
    {
        "line": 40,
        "fullcodeline": "return Download("
    },
    {
        "line": 30,
        "fullcodeline": "f\"{platform_args} {docker_reference} {target}\""
    },
    {
        "line": 36,
        "fullcodeline": "raise FetchDockerImageError(output)"
    },
    {
        "line": 19,
        "fullcodeline": "os, arch, variant = platform"
    },
    {
        "line": 45,
        "fullcodeline": "size=output_file.stat().st_size,"
    },
    {
        "line": 21,
        "fullcodeline": "platform_args.append(f\"--override-os={os}\")"
    },
    {
        "line": 23,
        "fullcodeline": "platform_args.append(f\"--override-arch={arch}\")"
    },
    {
        "line": 25,
        "fullcodeline": "platform_args.append(f\"--override-variant={variant}\")"
    }
]