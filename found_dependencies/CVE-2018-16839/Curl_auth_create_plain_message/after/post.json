[
    {
        "line": 12,
        "fullcodeline": "*outlen = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "*outptr = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "ulen = strlen(userp);"
    },
    {
        "line": 15,
        "fullcodeline": "plen = strlen(passwdp);"
    },
    {
        "line": 20,
        "fullcodeline": "plainlen = 2 * ulen + plen + 2;"
    },
    {
        "line": 22,
        "fullcodeline": "plainauth = malloc(plainlen);"
    },
    {
        "line": 27,
        "fullcodeline": "memcpy(plainauth, userp, ulen);"
    },
    {
        "line": 28,
        "fullcodeline": "plainauth[ulen] = '\\0';"
    },
    {
        "line": 29,
        "fullcodeline": "memcpy(plainauth + ulen + 1, userp, ulen);"
    },
    {
        "line": 30,
        "fullcodeline": "plainauth[2 * ulen + 1] = '\\0';"
    },
    {
        "line": 31,
        "fullcodeline": "memcpy(plainauth + 2 * ulen + 2, passwdp, plen);"
    },
    {
        "line": 34,
        "fullcodeline": "result = Curl_base64_encode(data, plainauth, plainlen, outptr, outlen);"
    },
    {
        "line": 35,
        "fullcodeline": "free(plainauth);"
    },
    {
        "line": 18,
        "fullcodeline": "if((ulen > SIZE_T_MAX/4) || (plen > (SIZE_T_MAX/2 - 2)))"
    },
    {
        "line": 23,
        "fullcodeline": "if(!plainauth)"
    }
]