[
    {
        "line": 4,
        "fullcodeline": "krb5_keyblock * subkey = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "krb5_keyblock *header_key = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "krb5_kdc_req *request = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "krb5_db_entry *server = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "krb5_db_entry *stkt_server = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "krb5_ticket ticket_reply, *header_ticket = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "int st_idx = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "int newtransited = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "krb5_error_code retval = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "krb5_timestamp kdc_time, authtime = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "krb5_keyblock *reply_key = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "krb5_principal cprinc = NULL, sprinc = NULL, altcprinc = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "krb5_last_req_entry *nolrarray[2], nolrentry;"
    },
    {
        "line": 24,
        "fullcodeline": "const char        *status = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "krb5_enc_tkt_part *header_enc_tkt = NULL; /* TGT */"
    },
    {
        "line": 26,
        "fullcodeline": "krb5_enc_tkt_part *subject_tkt = NULL; /* TGT or evidence ticket */"
    },
    {
        "line": 27,
        "fullcodeline": "krb5_db_entry *client = NULL, *header_server = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "krb5_db_entry *local_tgt, *local_tgt_storage = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "krb5_pa_s4u_x509_user *s4u_x509_user = NULL; /* protocol transition request */"
    },
    {
        "line": 30,
        "fullcodeline": "krb5_authdata **kdc_issued_auth_data = NULL; /* auth data issued by KDC */"
    },
    {
        "line": 31,
        "fullcodeline": "unsigned int c_flags = 0, s_flags = 0;       /* client/server KDB flags */"
    },
    {
        "line": 33,
        "fullcodeline": "const char *emsg = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "krb5_kvno ticket_kvno = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "struct kdc_request_state *state = NULL;"
    },
    {
        "line": 38,
        "fullcodeline": "krb5_pa_data **e_data = NULL;"
    },
    {
        "line": 39,
        "fullcodeline": "kdc_realm_t *kdc_active_realm = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "krb5_audit_state *au_state = NULL;"
    },
    {
        "line": 41,
        "fullcodeline": "krb5_data **auth_indicators = NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "memset(&reply, 0, sizeof(reply));"
    },
    {
        "line": 44,
        "fullcodeline": "memset(&reply_encpart, 0, sizeof(reply_encpart));"
    },
    {
        "line": 45,
        "fullcodeline": "memset(&ticket_reply, 0, sizeof(ticket_reply));"
    },
    {
        "line": 46,
        "fullcodeline": "memset(&enc_tkt_reply, 0, sizeof(enc_tkt_reply));"
    },
    {
        "line": 47,
        "fullcodeline": "session_key.contents = NULL;"
    },
    {
        "line": 49,
        "fullcodeline": "retval = decode_krb5_tgs_req(pkt, &request);"
    },
    {
        "line": 54,
        "fullcodeline": "sprinc = request->server;"
    },
    {
        "line": 64,
        "fullcodeline": "kdc_active_realm = setup_server_realm(handle, request->server);"
    },
    {
        "line": 69,
        "fullcodeline": "errcode = kdc_make_rstate(kdc_active_realm, &state);"
    },
    {
        "line": 76,
        "fullcodeline": "errcode = kau_init_kdc_req(kdc_context, request, from, &au_state);"
    },
    {
        "line": 82,
        "fullcodeline": "kau_tgs_req(kdc_context, TRUE, au_state);"
    },
    {
        "line": 84,
        "fullcodeline": "errcode = kdc_process_tgs_req(kdc_active_realm,"
    },
    {
        "line": 101,
        "fullcodeline": "errcode = kau_make_tkt_id(kdc_context, header_ticket,"
    },
    {
        "line": 108,
        "fullcodeline": "scratch.length = pa_tgs_req->length;"
    },
    {
        "line": 109,
        "fullcodeline": "scratch.data = (char *) pa_tgs_req->contents;"
    },
    {
        "line": 110,
        "fullcodeline": "errcode = kdc_find_fast(&request, &scratch, subkey,"
    },
    {
        "line": 113,
        "fullcodeline": "sprinc = request->server;"
    },
    {
        "line": 119,
        "fullcodeline": "errcode = get_local_tgt(kdc_context, &sprinc->realm, header_server,"
    },
    {
        "line": 127,
        "fullcodeline": "au_state->request = request;"
    },
    {
        "line": 135,
        "fullcodeline": "header_enc_tkt = header_ticket->enc_part2;"
    },
    {
        "line": 143,
        "fullcodeline": "au_state->stage = SRVC_PRINC;"
    },
    {
        "line": 148,
        "fullcodeline": "setflag(s_flags, KRB5_KDB_FLAG_ALIAS_OK);"
    },
    {
        "line": 154,
        "fullcodeline": "errcode = search_sprinc(kdc_active_realm, request, s_flags, &server,"
    },
    {
        "line": 158,
        "fullcodeline": "sprinc = server->princ;"
    },
    {
        "line": 162,
        "fullcodeline": "is_referral = is_cross_tgs_principal(server->princ) &&"
    },
    {
        "line": 165,
        "fullcodeline": "au_state->stage = VALIDATE_POL;"
    },
    {
        "line": 187,
        "fullcodeline": "errcode = kdc_process_s4u2self_req(kdc_active_realm,"
    },
    {
        "line": 221,
        "fullcodeline": "errcode = decrypt_2ndtkt(kdc_active_realm, request, c_flags,"
    },
    {
        "line": 264,
        "fullcodeline": "au_state->stage = ISSUE_TKT;"
    },
    {
        "line": 266,
        "fullcodeline": "errcode = gen_session_key(kdc_active_realm, request, server, &session_key,"
    },
    {
        "line": 295,
        "fullcodeline": "errcode = check_indicators(kdc_context, server, auth_indicators);"
    },
    {
        "line": 306,
        "fullcodeline": "enc_tkt_reply.flags = OPTS2FLAGS(request->kdc_options);"
    },
    {
        "line": 307,
        "fullcodeline": "enc_tkt_reply.flags |= COPY_TKT_FLAGS(header_enc_tkt->flags);"
    },
    {
        "line": 308,
        "fullcodeline": "enc_tkt_reply.times.starttime = 0;"
    },
    {
        "line": 314,
        "fullcodeline": "setflag(enc_tkt_reply.flags, TKT_FLG_ENC_PA_REP);"
    },
    {
        "line": 318,
        "fullcodeline": "enc_tkt_reply.caddrs = header_enc_tkt->caddrs;"
    },
    {
        "line": 320,
        "fullcodeline": "reply_encpart.caddrs = 0;/* optional...don't put it in */"
    },
    {
        "line": 321,
        "fullcodeline": "reply_encpart.enc_padata = NULL;"
    },
    {
        "line": 418,
        "fullcodeline": "kdc_get_ticket_renewtime(kdc_active_realm, request, header_enc_tkt, client,"
    },
    {
        "line": 424,
        "fullcodeline": "enc_tkt_reply.times.authtime = authtime;"
    },
    {
        "line": 502,
        "fullcodeline": "enc_tkt_reply.session = &session_key;"
    },
    {
        "line": 503,
        "fullcodeline": "enc_tkt_reply.transited.tr_type = KRB5_DOMAIN_X500_COMPRESS;"
    },
    {
        "line": 504,
        "fullcodeline": "enc_tkt_reply.transited.tr_contents = empty_string; /* equivalent of \"\" */"
    },
    {
        "line": 570,
        "fullcodeline": "errcode = handle_authdata(kdc_context, c_flags, client, server,"
    },
    {
        "line": 590,
        "fullcodeline": "ticket_reply.enc_part2 = &enc_tkt_reply;"
    },
    {
        "line": 622,
        "fullcodeline": "errcode = krb5_encrypt_tkt_part(kdc_context, &encrypting_key,"
    },
    {
        "line": 630,
        "fullcodeline": "ticket_reply.enc_part.kvno = ticket_kvno;"
    },
    {
        "line": 632,
        "fullcodeline": "au_state->stage = ENCR_REP;"
    },
    {
        "line": 633,
        "fullcodeline": "reply.msg_type = KRB5_TGS_REP;"
    },
    {
        "line": 652,
        "fullcodeline": "reply.client = enc_tkt_reply.client;"
    },
    {
        "line": 653,
        "fullcodeline": "reply.enc_part.kvno = 0;/* We are using the session key */"
    },
    {
        "line": 654,
        "fullcodeline": "reply.ticket = &ticket_reply;"
    },
    {
        "line": 656,
        "fullcodeline": "reply_encpart.session = &session_key;"
    },
    {
        "line": 657,
        "fullcodeline": "reply_encpart.nonce = request->nonce;"
    },
    {
        "line": 660,
        "fullcodeline": "reply_encpart.times = enc_tkt_reply.times;"
    },
    {
        "line": 662,
        "fullcodeline": "nolrentry.lr_type = KRB5_LRQ_NONE;"
    },
    {
        "line": 663,
        "fullcodeline": "nolrentry.value = 0;"
    },
    {
        "line": 664,
        "fullcodeline": "nolrentry.magic = 0;"
    },
    {
        "line": 665,
        "fullcodeline": "nolrarray[0] = &nolrentry;"
    },
    {
        "line": 666,
        "fullcodeline": "nolrarray[1] = 0;"
    },
    {
        "line": 667,
        "fullcodeline": "reply_encpart.last_req = nolrarray;        /* not available for TGS reqs */"
    },
    {
        "line": 668,
        "fullcodeline": "reply_encpart.key_exp = 0;/* ditto */"
    },
    {
        "line": 669,
        "fullcodeline": "reply_encpart.flags = enc_tkt_reply.flags;"
    },
    {
        "line": 670,
        "fullcodeline": "reply_encpart.server = ticket_reply.server;"
    },
    {
        "line": 674,
        "fullcodeline": "reply.enc_part.enctype = subkey ? subkey->enctype :"
    },
    {
        "line": 676,
        "fullcodeline": "errcode  = kdc_fast_response_handle_padata(state, request, &reply,"
    },
    {
        "line": 682,
        "fullcodeline": "errcode =kdc_fast_handle_reply_key(state,"
    },
    {
        "line": 688,
        "fullcodeline": "errcode = return_enc_padata(kdc_context, pkt, request,"
    },
    {
        "line": 698,
        "fullcodeline": "errcode = kau_make_tkt_id(kdc_context, &ticket_reply, &au_state->tkt_out_id);"
    },
    {
        "line": 706,
        "fullcodeline": "errcode = krb5_encode_kdc_rep(kdc_context, KRB5_TGS_REP, &reply_encpart,"
    },
    {
        "line": 716,
        "fullcodeline": "memset(ticket_reply.enc_part.ciphertext.data, 0,"
    },
    {
        "line": 718,
        "fullcodeline": "free(ticket_reply.enc_part.ciphertext.data);"
    },
    {
        "line": 721,
        "fullcodeline": "memset(reply.enc_part.ciphertext.data, 0,"
    },
    {
        "line": 723,
        "fullcodeline": "free(reply.enc_part.ciphertext.data);"
    },
    {
        "line": 726,
        "fullcodeline": "assert(status != NULL);"
    },
    {
        "line": 732,
        "fullcodeline": "au_state->status = status;"
    },
    {
        "line": 735,
        "fullcodeline": "kau_tgs_req(kdc_context, errcode ? FALSE : TRUE, au_state);"
    },
    {
        "line": 736,
        "fullcodeline": "kau_free_kdc_req(au_state);"
    },
    {
        "line": 738,
        "fullcodeline": "log_tgs_req(kdc_context, from, request, &reply, cprinc,"
    },
    {
        "line": 771,
        "fullcodeline": "krb5_db_free_principal(kdc_context, server);"
    },
    {
        "line": 772,
        "fullcodeline": "krb5_db_free_principal(kdc_context, stkt_server);"
    },
    {
        "line": 773,
        "fullcodeline": "krb5_db_free_principal(kdc_context, header_server);"
    },
    {
        "line": 774,
        "fullcodeline": "krb5_db_free_principal(kdc_context, client);"
    },
    {
        "line": 775,
        "fullcodeline": "krb5_db_free_principal(kdc_context, local_tgt_storage);"
    },
    {
        "line": 794,
        "fullcodeline": "krb5_free_pa_data(kdc_context, e_data);"
    },
    {
        "line": 795,
        "fullcodeline": "k5_free_data_ptr_list(auth_indicators);"
    },
    {
        "line": 56,
        "fullcodeline": "if (request->msg_type != KRB5_TGS_REQ) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (kdc_active_realm == NULL) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (errcode !=0) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (header_ticket && header_ticket->enc_part2)"
    },
    {
        "line": 96,
        "fullcodeline": "if (!header_ticket) {"
    },
    {
        "line": 114,
        "fullcodeline": "if (errcode !=0) {"
    },
    {
        "line": 149,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_CANONICALIZE)) {"
    },
    {
        "line": 156,
        "fullcodeline": "if (errcode != 0)"
    },
    {
        "line": 167,
        "fullcodeline": "if ((errcode = krb5_timeofday(kdc_context, &kdc_time))) {"
    },
    {
        "line": 172,
        "fullcodeline": "if ((retval = validate_tgs_request(kdc_active_realm,"
    },
    {
        "line": 183,
        "fullcodeline": "if (!is_local_principal(kdc_active_realm, header_enc_tkt->client))"
    },
    {
        "line": 197,
        "fullcodeline": "if (s4u_x509_user != NULL || errcode != 0) {"
    },
    {
        "line": 209,
        "fullcodeline": "if (s4u_x509_user != NULL) {"
    },
    {
        "line": 226,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_CNAME_IN_ADDL_TKT)) {"
    },
    {
        "line": 278,
        "fullcodeline": "if (isflagset(c_flags, KRB5_KDB_FLAG_CONSTRAINED_DELEGATION))"
    },
    {
        "line": 286,
        "fullcodeline": "if (s4u_x509_user == NULL) {"
    },
    {
        "line": 310,
        "fullcodeline": "if (isflagset(server->attributes, KRB5_KDB_OK_AS_DELEGATE))"
    },
    {
        "line": 329,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_FORWARDABLE)) {"
    },
    {
        "line": 360,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_FORWARDED) ||"
    },
    {
        "line": 370,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_REQUEST_ANONYMOUS) &&"
    },
    {
        "line": 374,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_POSTDATED)) {"
    },
    {
        "line": 380,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_VALIDATE)) {"
    },
    {
        "line": 390,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_RENEW)) {"
    },
    {
        "line": 428,
        "fullcodeline": "if (enc_tkt_reply.times.starttime == enc_tkt_reply.times.authtime)"
    },
    {
        "line": 431,
        "fullcodeline": "if (isflagset(c_flags, KRB5_KDB_FLAG_PROTOCOL_TRANSITION)) {"
    },
    {
        "line": 438,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_ENC_TKT_IN_SKEY)) {"
    },
    {
        "line": 466,
        "fullcodeline": "if (isflagset(c_flags, KRB5_KDB_FLAG_CONSTRAINED_DELEGATION)) {"
    },
    {
        "line": 474,
        "fullcodeline": "if (isflagset(server->attributes, KRB5_KDB_NO_AUTH_DATA_REQUIRED) == 0) {"
    },
    {
        "line": 496,
        "fullcodeline": "if (isflagset(c_flags, KRB5_KDB_FLAG_PROTOCOL_TRANSITION) &&"
    },
    {
        "line": 514,
        "fullcodeline": "if (krb5_realm_compare(kdc_context, header_ticket->server, tgs_server) ||"
    },
    {
        "line": 541,
        "fullcodeline": "if (isflagset(c_flags, KRB5_KDB_FLAG_CROSS_REALM)) {"
    },
    {
        "line": 549,
        "fullcodeline": "if (!isflagset (request->kdc_options, KDC_OPT_DISABLE_TRANSITED_CHECK)) {"
    },
    {
        "line": 562,
        "fullcodeline": "if (kdc_active_realm->realm_reject_bad_transit &&"
    },
    {
        "line": 598,
        "fullcodeline": "if (isflagset(request->kdc_options, KDC_OPT_ENC_TKT_IN_SKEY)) {"
    },
    {
        "line": 624,
        "fullcodeline": "if (!isflagset(request->kdc_options, KDC_OPT_ENC_TKT_IN_SKEY))"
    },
    {
        "line": 634,
        "fullcodeline": "if (isflagset(c_flags, KRB5_KDB_FLAG_PROTOCOL_TRANSITION) &&"
    },
    {
        "line": 678,
        "fullcodeline": "if (errcode !=0 ) {"
    },
    {
        "line": 704,
        "fullcodeline": "if (kdc_fast_hide_client(state))"
    },
    {
        "line": 733,
        "fullcodeline": "if (!errcode)"
    },
    {
        "line": 765,
        "fullcodeline": "if (header_ticket != NULL)"
    },
    {
        "line": 767,
        "fullcodeline": "if (request != NULL)"
    },
    {
        "line": 776,
        "fullcodeline": "if (session_key.contents != NULL)"
    },
    {
        "line": 780,
        "fullcodeline": "if (s4u_x509_user != NULL)"
    },
    {
        "line": 782,
        "fullcodeline": "if (kdc_issued_auth_data != NULL)"
    },
    {
        "line": 784,
        "fullcodeline": "if (subkey != NULL)"
    },
    {
        "line": 786,
        "fullcodeline": "if (header_key != NULL)"
    },
    {
        "line": 792,
        "fullcodeline": "if (enc_tkt_reply.authorization_data != NULL)"
    },
    {
        "line": 57,
        "fullcodeline": "krb5_free_kdc_req(handle->kdc_err_context, request);"
    },
    {
        "line": 66,
        "fullcodeline": "krb5_free_kdc_req(handle->kdc_err_context, request);"
    },
    {
        "line": 71,
        "fullcodeline": "krb5_free_kdc_req(handle->kdc_err_context, request);"
    },
    {
        "line": 78,
        "fullcodeline": "krb5_free_kdc_req(handle->kdc_err_context, request);"
    },
    {
        "line": 92,
        "fullcodeline": "status = \"PROCESS_TGS\";"
    },
    {
        "line": 97,
        "fullcodeline": "errcode = KRB5_NO_TKT_SUPPLIED;        /* XXX? */"
    },
    {
        "line": 98,
        "fullcodeline": "status=\"UNEXPECTED NULL in header_ticket\";"
    },
    {
        "line": 104,
        "fullcodeline": "status = \"GENERATE_TICKET_ID\";"
    },
    {
        "line": 115,
        "fullcodeline": "status = \"FIND_FAST\";"
    },
    {
        "line": 122,
        "fullcodeline": "status = \"GET_LOCAL_TGT\";"
    },
    {
        "line": 150,
        "fullcodeline": "setflag(c_flags, KRB5_KDB_FLAG_CANONICALIZE);"
    },
    {
        "line": 151,
        "fullcodeline": "setflag(s_flags, KRB5_KDB_FLAG_CANONICALIZE);"
    },
    {
        "line": 163,
        "fullcodeline": "!krb5_principal_compare(kdc_context, request->server, server->princ);"
    },
    {
        "line": 168,
        "fullcodeline": "status = \"TIME_OF_DAY\";"
    },
    {
        "line": 179,
        "fullcodeline": "errcode = retval + ERROR_TABLE_BASE_krb5;"
    },
    {
        "line": 184,
        "fullcodeline": "setflag(c_flags, KRB5_KDB_FLAG_CROSS_REALM);"
    },
    {
        "line": 202,
        "fullcodeline": "au_state->status = status;"
    },
    {
        "line": 203,
        "fullcodeline": "kau_s4u2self(kdc_context, errcode ? FALSE : TRUE, au_state);"
    },
    {
        "line": 204,
        "fullcodeline": "au_state->s4u2self_user = NULL;"
    },
    {
        "line": 210,
        "fullcodeline": "setflag(c_flags, KRB5_KDB_FLAG_PROTOCOL_TRANSITION);"
    },
    {
        "line": 228,
        "fullcodeline": "errcode = kdc_process_s4u2proxy_req(kdc_active_realm,"
    },
    {
        "line": 239,
        "fullcodeline": "au_state->status = status;"
    },
    {
        "line": 240,
        "fullcodeline": "retval = kau_make_tkt_id(kdc_context, request->second_ticket[st_idx],"
    },
    {
        "line": 247,
        "fullcodeline": "kau_s4u2proxy(kdc_context, errcode ? FALSE : TRUE, au_state);"
    },
    {
        "line": 251,
        "fullcodeline": "setflag(c_flags, KRB5_KDB_FLAG_CONSTRAINED_DELEGATION);"
    },
    {
        "line": 253,
        "fullcodeline": "assert(krb5_is_tgs_principal(header_ticket->server));"
    },
    {
        "line": 255,
        "fullcodeline": "assert(client == NULL); /* assured by kdc_process_s4u2self_req() */"
    },
    {
        "line": 256,
        "fullcodeline": "client = stkt_server;"
    },
    {
        "line": 257,
        "fullcodeline": "stkt_server = NULL;"
    },
    {
        "line": 279,
        "fullcodeline": "subject_tkt = request->second_ticket[st_idx]->enc_part2;"
    },
    {
        "line": 287,
        "fullcodeline": "errcode = get_auth_indicators(kdc_context, subject_tkt, local_tgt,"
    },
    {
        "line": 297,
        "fullcodeline": "status = \"HIGHER_AUTHENTICATION_REQUIRED\";"
    },
    {
        "line": 302,
        "fullcodeline": "ticket_reply.server = server->princ;"
    },
    {
        "line": 311,
        "fullcodeline": "setflag(enc_tkt_reply.flags, TKT_FLG_OK_AS_DELEGATE);"
    },
    {
        "line": 361,
        "fullcodeline": "isflagset(request->kdc_options, KDC_OPT_PROXY)) {"
    },
    {
        "line": 365,
        "fullcodeline": "enc_tkt_reply.caddrs = request->addresses;"
    },
    {
        "line": 366,
        "fullcodeline": "reply_encpart.caddrs = request->addresses;"
    },
    {
        "line": 371,
        "fullcodeline": "!isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS))"
    },
    {
        "line": 372,
        "fullcodeline": "clear(enc_tkt_reply.flags, TKT_FLG_ANONYMOUS);"
    },
    {
        "line": 375,
        "fullcodeline": "setflag(enc_tkt_reply.flags, TKT_FLG_INVALID);"
    },
    {
        "line": 376,
        "fullcodeline": "enc_tkt_reply.times.starttime = request->from;"
    },
    {
        "line": 381,
        "fullcodeline": "assert(isflagset(c_flags, KRB5_KDB_FLAGS_S4U) == 0);"
    },
    {
        "line": 386,
        "fullcodeline": "enc_tkt_reply.authorization_data = NULL;"
    },
    {
        "line": 387,
        "fullcodeline": "clear(enc_tkt_reply.flags, TKT_FLG_INVALID);"
    },
    {
        "line": 394,
        "fullcodeline": "assert(isflagset(c_flags, KRB5_KDB_FLAGS_S4U) == 0);"
    },
    {
        "line": 399,
        "fullcodeline": "enc_tkt_reply.authorization_data = NULL;"
    },
    {
        "line": 403,
        "fullcodeline": "old_life = ts_delta(enc_tkt_reply.times.endtime, old_starttime);"
    },
    {
        "line": 405,
        "fullcodeline": "enc_tkt_reply.times.starttime = kdc_time;"
    },
    {
        "line": 406,
        "fullcodeline": "enc_tkt_reply.times.endtime ="
    },
    {
        "line": 429,
        "fullcodeline": "enc_tkt_reply.times.starttime = 0;"
    },
    {
        "line": 439,
        "fullcodeline": "krb5_enc_tkt_part *t2enc = request->second_ticket[st_idx]->enc_part2;"
    },
    {
        "line": 472,
        "fullcodeline": "clear(server->attributes, KRB5_KDB_NO_AUTH_DATA_REQUIRED);"
    },
    {
        "line": 497,
        "fullcodeline": "!isflagset(c_flags, KRB5_KDB_FLAG_CROSS_REALM))"
    },
    {
        "line": 515,
        "fullcodeline": "krb5_realm_compare(kdc_context, header_ticket->server,"
    },
    {
        "line": 518,
        "fullcodeline": "enc_tkt_reply.transited = header_enc_tkt->transited;"
    },
    {
        "line": 542,
        "fullcodeline": "errcode = validate_transit_path(kdc_context, header_enc_tkt->client,"
    },
    {
        "line": 550,
        "fullcodeline": "errcode = kdc_check_transited_list (kdc_active_realm,"
    },
    {
        "line": 563,
        "fullcodeline": "!isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED)) {"
    },
    {
        "line": 564,
        "fullcodeline": "errcode = KRB5KDC_ERR_POLICY;"
    },
    {
        "line": 565,
        "fullcodeline": "status = \"BAD_TRANSIT\";"
    },
    {
        "line": 566,
        "fullcodeline": "au_state->violation = LOCAL_POLICY;"
    },
    {
        "line": 572,
        "fullcodeline": "subkey != NULL ? subkey :"
    },
    {
        "line": 578,
        "fullcodeline": "s4u_x509_user ?"
    },
    {
        "line": 584,
        "fullcodeline": "krb5_klog_syslog(LOG_INFO, _(\"TGS_REQ : handle_authdata (%d)\"),"
    },
    {
        "line": 586,
        "fullcodeline": "status = \"HANDLE_AUTHDATA\";"
    },
    {
        "line": 603,
        "fullcodeline": "krb5_enc_tkt_part *t2enc = request->second_ticket[st_idx]->enc_part2;"
    },
    {
        "line": 604,
        "fullcodeline": "krb5_principal client2 = t2enc->client;"
    },
    {
        "line": 614,
        "fullcodeline": "ticket_kvno = 0;"
    },
    {
        "line": 616,
        "fullcodeline": "kau_u2u(kdc_context, TRUE, au_state);"
    },
    {
        "line": 617,
        "fullcodeline": "st_idx++;"
    },
    {
        "line": 625,
        "fullcodeline": "krb5_free_keyblock_contents(kdc_context, &encrypting_key);"
    },
    {
        "line": 627,
        "fullcodeline": "status = \"ENCRYPT_TICKET\";"
    },
    {
        "line": 635,
        "fullcodeline": "krb5int_find_pa_data(kdc_context, request->padata,"
    },
    {
        "line": 637,
        "fullcodeline": "errcode = kdc_make_s4u2self_rep(kdc_context,"
    },
    {
        "line": 647,
        "fullcodeline": "kau_s4u2self(kdc_context, errcode ? FALSE : TRUE, au_state);"
    },
    {
        "line": 677,
        "fullcodeline": "subkey ? subkey->enctype : header_ticket->enc_part2->session->enctype);"
    },
    {
        "line": 679,
        "fullcodeline": "status = \"MAKE_FAST_RESPONSE\";"
    },
    {
        "line": 683,
        "fullcodeline": "subkey?subkey:header_ticket->enc_part2->session, &reply_key);"
    },
    {
        "line": 685,
        "fullcodeline": "status  = \"MAKE_FAST_REPLY_KEY\";"
    },
    {
        "line": 690,
        "fullcodeline": "is_referral &&"
    },
    {
        "line": 694,
        "fullcodeline": "status = \"KDC_RETURN_ENC_PADATA\";"
    },
    {
        "line": 700,
        "fullcodeline": "status = \"GENERATE_TICKET_ID\";"
    },
    {
        "line": 705,
        "fullcodeline": "reply.client = (krb5_principal)krb5_anonymous_principal();"
    },
    {
        "line": 707,
        "fullcodeline": "subkey ? 1 : 0,"
    },
    {
        "line": 711,
        "fullcodeline": "status = \"ENCODE_KDC_REP\";"
    },
    {
        "line": 728,
        "fullcodeline": "krb5_free_keyblock(kdc_context, reply_key);"
    },
    {
        "line": 730,
        "fullcodeline": "emsg = krb5_get_error_message (kdc_context, errcode);"
    },
    {
        "line": 734,
        "fullcodeline": "au_state->reply = &reply;"
    },
    {
        "line": 742,
        "fullcodeline": "krb5_free_error_message (kdc_context, emsg);"
    },
    {
        "line": 743,
        "fullcodeline": "emsg = NULL;"
    },
    {
        "line": 747,
        "fullcodeline": "int got_err = 0;"
    },
    {
        "line": 752,
        "fullcodeline": "errcode -= ERROR_TABLE_BASE_krb5;"
    },
    {
        "line": 756,
        "fullcodeline": "retval = prepare_error_tgs(state, request, header_ticket, errcode,"
    },
    {
        "line": 766,
        "fullcodeline": "krb5_free_ticket(kdc_context, header_ticket);"
    },
    {
        "line": 768,
        "fullcodeline": "krb5_free_kdc_req(kdc_context, request);"
    },
    {
        "line": 770,
        "fullcodeline": "kdc_free_rstate(state);"
    },
    {
        "line": 777,
        "fullcodeline": "krb5_free_keyblock_contents(kdc_context, &session_key);"
    },
    {
        "line": 781,
        "fullcodeline": "krb5_free_pa_s4u_x509_user(kdc_context, s4u_x509_user);"
    },
    {
        "line": 783,
        "fullcodeline": "krb5_free_authdata(kdc_context, kdc_issued_auth_data);"
    },
    {
        "line": 785,
        "fullcodeline": "krb5_free_keyblock(kdc_context, subkey);"
    },
    {
        "line": 787,
        "fullcodeline": "krb5_free_keyblock(kdc_context, header_key);"
    },
    {
        "line": 789,
        "fullcodeline": "krb5_free_pa_data(kdc_context, reply.padata);"
    },
    {
        "line": 791,
        "fullcodeline": "krb5_free_pa_data(kdc_context, reply_encpart.enc_padata);"
    },
    {
        "line": 793,
        "fullcodeline": "krb5_free_authdata(kdc_context, enc_tkt_reply.authorization_data);"
    },
    {
        "line": 175,
        "fullcodeline": "if (!status)"
    },
    {
        "line": 177,
        "fullcodeline": "if (retval == KDC_ERR_POLICY || retval == KDC_ERR_BADOPTION)"
    },
    {
        "line": 198,
        "fullcodeline": "if (s4u_x509_user != NULL)"
    },
    {
        "line": 200,
        "fullcodeline": "if (errcode == KDC_ERR_POLICY || errcode == KDC_ERR_BADOPTION)"
    },
    {
        "line": 235,
        "fullcodeline": "if (errcode == KDC_ERR_POLICY || errcode == KDC_ERR_BADOPTION)"
    },
    {
        "line": 281,
        "fullcodeline": "subject_tkt = header_enc_tkt;"
    },
    {
        "line": 304,
        "fullcodeline": "ticket_reply.server = request->server; /* XXX careful for realm... */"
    },
    {
        "line": 331,
        "fullcodeline": "if (isflagset(c_flags, KRB5_KDB_FLAG_PROTOCOL_TRANSITION)) {"
    },
    {
        "line": 378,
        "fullcodeline": "enc_tkt_reply.times.starttime = kdc_time;"
    },
    {
        "line": 407,
        "fullcodeline": "ts_min(header_ticket->enc_part2->times.renew_till,"
    },
    {
        "line": 411,
        "fullcodeline": "enc_tkt_reply.times.starttime = kdc_time;"
    },
    {
        "line": 413,
        "fullcodeline": "kdc_get_ticket_endtime(kdc_active_realm, enc_tkt_reply.times.starttime,"
    },
    {
        "line": 483,
        "fullcodeline": "if (!isflagset(c_flags, KRB5_KDB_FLAGS_S4U)) {"
    },
    {
        "line": 500,
        "fullcodeline": "enc_tkt_reply.client = subject_tkt->client;"
    },
    {
        "line": 528,
        "fullcodeline": "memset(&enc_tkt_reply.transited, 0, sizeof(enc_tkt_reply.transited));"
    },
    {
        "line": 529,
        "fullcodeline": "enc_tkt_reply.transited.tr_type = KRB5_DOMAIN_X500_COMPRESS;"
    },
    {
        "line": 539,
        "fullcodeline": "newtransited = 1;"
    },
    {
        "line": 554,
        "fullcodeline": "if (errcode == 0) {"
    },
    {
        "line": 561,
        "fullcodeline": "krb5_klog_syslog(LOG_INFO, _(\"not checking transit path\"));"
    },
    {
        "line": 605,
        "fullcodeline": "if (!krb5_principal_compare(kdc_context, request->server, client2)) {"
    },
    {
        "line": 619,
        "fullcodeline": "ticket_kvno = server_key->key_data_kvno;"
    },
    {
        "line": 691,
        "fullcodeline": "isflagset(s_flags,"
    },
    {
        "line": 713,
        "fullcodeline": "status = \"ISSUE\";"
    },
    {
        "line": 748,
        "fullcodeline": "if (status == 0) {"
    },
    {
        "line": 753,
        "fullcodeline": "if (errcode < 0 || errcode > KRB_ERR_MAX)"
    },
    {
        "line": 176,
        "fullcodeline": "status = \"UNKNOWN_REASON\";"
    },
    {
        "line": 178,
        "fullcodeline": "au_state->violation = PROT_CONSTRAINT;"
    },
    {
        "line": 201,
        "fullcodeline": "au_state->violation = PROT_CONSTRAINT;"
    },
    {
        "line": 214,
        "fullcodeline": "errcode = KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN;"
    },
    {
        "line": 215,
        "fullcodeline": "status = \"LOOKING_UP_SERVER\";"
    },
    {
        "line": 236,
        "fullcodeline": "au_state->violation = PROT_CONSTRAINT;"
    },
    {
        "line": 243,
        "fullcodeline": "status = \"GENERATE_TICKET_ID\";"
    },
    {
        "line": 244,
        "fullcodeline": "errcode = retval;"
    },
    {
        "line": 258,
        "fullcodeline": "} else if (request->kdc_options & KDC_OPT_ENC_TKT_IN_SKEY) {"
    },
    {
        "line": 290,
        "fullcodeline": "status = \"GET_AUTH_INDICATORS\";"
    },
    {
        "line": 408,
        "fullcodeline": "ts_incr(kdc_time, old_life));"
    },
    {
        "line": 433,
        "fullcodeline": "} else if (isflagset(c_flags, KRB5_KDB_FLAG_CONSTRAINED_DELEGATION)) {"
    },
    {
        "line": 445,
        "fullcodeline": "if ((errcode = krb5_dbe_find_enctype(kdc_context, server,"
    },
    {
        "line": 458,
        "fullcodeline": "if ((errcode = krb5_dbe_decrypt_key_data(kdc_context, NULL,"
    },
    {
        "line": 485,
        "fullcodeline": "setflag(c_flags, KRB5_KDB_FLAG_INCLUDE_PAC);"
    },
    {
        "line": 487,
        "fullcodeline": "setflag(c_flags, KRB5_KDB_FLAG_MAP_PRINCIPALS);"
    },
    {
        "line": 489,
        "fullcodeline": "assert(client == NULL); /* should not have been set already */"
    },
    {
        "line": 491,
        "fullcodeline": "errcode = krb5_db_get_principal(kdc_context, subject_tkt->client,"
    },
    {
        "line": 522,
        "fullcodeline": "if (header_enc_tkt->transited.tr_type !="
    },
    {
        "line": 530,
        "fullcodeline": "if ((errcode ="
    },
    {
        "line": 545,
        "fullcodeline": "status = \"NON_TRANSITIVE\";"
    },
    {
        "line": 552,
        "fullcodeline": "krb5_princ_realm (kdc_context, header_enc_tkt->client),"
    },
    {
        "line": 553,
        "fullcodeline": "krb5_princ_realm (kdc_context, request->server));"
    },
    {
        "line": 555,
        "fullcodeline": "setflag (enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED);"
    },
    {
        "line": 606,
        "fullcodeline": "altcprinc = client2;"
    },
    {
        "line": 607,
        "fullcodeline": "errcode = KRB5KDC_ERR_SERVER_NOMATCH;"
    },
    {
        "line": 608,
        "fullcodeline": "status = \"2ND_TKT_MISMATCH\";"
    },
    {
        "line": 609,
        "fullcodeline": "au_state->status = status;"
    },
    {
        "line": 610,
        "fullcodeline": "kau_u2u(kdc_context, FALSE, au_state);"
    },
    {
        "line": 644,
        "fullcodeline": "status = \"MAKE_S4U2SELF_PADATA\";"
    },
    {
        "line": 645,
        "fullcodeline": "au_state->status = status;"
    },
    {
        "line": 749,
        "fullcodeline": "status = krb5_get_error_message (kdc_context, errcode);"
    },
    {
        "line": 750,
        "fullcodeline": "got_err = 1;"
    },
    {
        "line": 754,
        "fullcodeline": "errcode = KRB_ERR_GENERIC;"
    },
    {
        "line": 757,
        "fullcodeline": "(server != NULL) ? server->princ : NULL,"
    },
    {
        "line": 760,
        "fullcodeline": "krb5_free_error_message (kdc_context, status);"
    },
    {
        "line": 761,
        "fullcodeline": "status = 0;"
    },
    {
        "line": 259,
        "fullcodeline": "krb5_db_free_principal(kdc_context, stkt_server);"
    },
    {
        "line": 260,
        "fullcodeline": "stkt_server = NULL;"
    },
    {
        "line": 341,
        "fullcodeline": "if (client != NULL &&"
    },
    {
        "line": 434,
        "fullcodeline": "altcprinc = subject_tkt->client;"
    },
    {
        "line": 450,
        "fullcodeline": "status = \"FINDING_SERVER_KEY\";"
    },
    {
        "line": 461,
        "fullcodeline": "status = \"DECRYPT_SERVER_KEY\";"
    },
    {
        "line": 524,
        "fullcodeline": "status = \"VALIDATE_TRANSIT_TYPE\";"
    },
    {
        "line": 525,
        "fullcodeline": "errcode = KRB5KDC_ERR_TRTYPE_NOSUPP;"
    },
    {
        "line": 531,
        "fullcodeline": "add_to_transited(&header_enc_tkt->transited.tr_contents,"
    },
    {
        "line": 536,
        "fullcodeline": "status = \"ADD_TO_TRANSITED_LIST\";"
    },
    {
        "line": 557,
        "fullcodeline": "log_tgs_badtrans(kdc_context, cprinc, sprinc,"
    },
    {
        "line": 262,
        "fullcodeline": "assert(stkt_server == NULL);"
    },
    {
        "line": 342,
        "fullcodeline": "isflagset(client->attributes, KRB5_KDB_DISALLOW_FORWARDABLE))"
    },
    {
        "line": 343,
        "fullcodeline": "clear(enc_tkt_reply.flags, TKT_FLG_FORWARDABLE);"
    },
    {
        "line": 436,
        "fullcodeline": "altcprinc = NULL;"
    },
    {
        "line": 446,
        "fullcodeline": "-1, /* ignore keytype */"
    },
    {
        "line": 447,
        "fullcodeline": "-1, /* Ignore salttype */"
    },
    {
        "line": 238,
        "fullcodeline": "au_state->violation = LOCAL_POLICY;"
    },
    {
        "line": 347,
        "fullcodeline": "else if (!isflagset(header_enc_tkt->flags, TKT_FLG_FORWARDABLE))"
    },
    {
        "line": 348,
        "fullcodeline": "clear(enc_tkt_reply.flags, TKT_FLG_FORWARDABLE);"
    },
    {
        "line": 353,
        "fullcodeline": "else if (!is_referral &&"
    },
    {
        "line": 354,
        "fullcodeline": "!isflagset(server->attributes,"
    },
    {
        "line": 356,
        "fullcodeline": "clear(enc_tkt_reply.flags, TKT_FLG_FORWARDABLE);"
    }
]