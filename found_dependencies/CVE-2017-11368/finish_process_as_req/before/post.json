[
    {
        "line": 4,
        "fullcodeline": "krb5_keyblock *as_encrypting_key = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "krb5_data *response = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "const char *emsg = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int did_log = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "kdc_realm_t *kdc_active_realm = state->active_realm;"
    },
    {
        "line": 11,
        "fullcodeline": "krb5_audit_state *au_state = state->au_state;"
    },
    {
        "line": 13,
        "fullcodeline": "assert(state);"
    },
    {
        "line": 14,
        "fullcodeline": "oldrespond = state->respond;"
    },
    {
        "line": 15,
        "fullcodeline": "oldarg = state->arg;"
    },
    {
        "line": 20,
        "fullcodeline": "au_state->stage = ENCR_REP;"
    },
    {
        "line": 29,
        "fullcodeline": "errcode = check_indicators(kdc_context, state->server,"
    },
    {
        "line": 36,
        "fullcodeline": "state->ticket_reply.enc_part2 = &state->enc_tkt_reply;"
    },
    {
        "line": 65,
        "fullcodeline": "state->reply.msg_type = KRB5_AS_REP;"
    },
    {
        "line": 67,
        "fullcodeline": "state->reply.ticket = &state->ticket_reply;"
    },
    {
        "line": 68,
        "fullcodeline": "state->reply_encpart.session = &state->session_key;"
    },
    {
        "line": 75,
        "fullcodeline": "state->reply_encpart.key_exp = get_key_exp(state->client);"
    },
    {
        "line": 83,
        "fullcodeline": "state->reply_encpart.times.authtime = state->authtime = state->kdc_time;"
    },
    {
        "line": 86,
        "fullcodeline": "state->reply_encpart.enc_padata = NULL;"
    },
    {
        "line": 91,
        "fullcodeline": "errcode = return_padata(kdc_context, &state->rock, state->req_pkt,"
    },
    {
        "line": 107,
        "fullcodeline": "errcode = handle_authdata(kdc_context,"
    },
    {
        "line": 129,
        "fullcodeline": "errcode = krb5_encrypt_tkt_part(kdc_context, &state->server_keyblock,"
    },
    {
        "line": 136,
        "fullcodeline": "errcode = kau_make_tkt_id(kdc_context, &state->ticket_reply,"
    },
    {
        "line": 143,
        "fullcodeline": "state->ticket_reply.enc_part.kvno = server_key->key_data_kvno;"
    },
    {
        "line": 144,
        "fullcodeline": "errcode = kdc_fast_response_handle_padata(state->rstate,"
    },
    {
        "line": 155,
        "fullcodeline": "state->reply.enc_part.enctype = state->client_keyblock.enctype;"
    },
    {
        "line": 157,
        "fullcodeline": "errcode = kdc_fast_handle_reply_key(state->rstate, &state->client_keyblock,"
    },
    {
        "line": 163,
        "fullcodeline": "errcode = return_enc_padata(kdc_context, state->req_pkt, state->request,"
    },
    {
        "line": 173,
        "fullcodeline": "errcode = krb5_encode_kdc_rep(kdc_context, KRB5_AS_REP,"
    },
    {
        "line": 186,
        "fullcodeline": "memset(state->reply.enc_part.ciphertext.data, 0,"
    },
    {
        "line": 188,
        "fullcodeline": "free(state->reply.enc_part.ciphertext.data);"
    },
    {
        "line": 190,
        "fullcodeline": "log_as_req(kdc_context, state->local_addr, state->remote_addr,"
    },
    {
        "line": 193,
        "fullcodeline": "did_log = 1;"
    },
    {
        "line": 199,
        "fullcodeline": "au_state->status = state->status;"
    },
    {
        "line": 200,
        "fullcodeline": "au_state->reply = &state->reply;"
    },
    {
        "line": 201,
        "fullcodeline": "kau_as_req(kdc_context,"
    },
    {
        "line": 203,
        "fullcodeline": "kau_free_kdc_req(au_state);"
    },
    {
        "line": 205,
        "fullcodeline": "free_padata_context(kdc_context, state->pa_context);"
    },
    {
        "line": 255,
        "fullcodeline": "krb5_db_free_principal(kdc_context, state->client);"
    },
    {
        "line": 256,
        "fullcodeline": "krb5_db_free_principal(kdc_context, state->server);"
    },
    {
        "line": 257,
        "fullcodeline": "krb5_db_free_principal(kdc_context, state->local_tgt_storage);"
    },
    {
        "line": 266,
        "fullcodeline": "krb5_free_pa_data(kdc_context, state->e_data);"
    },
    {
        "line": 267,
        "fullcodeline": "krb5_free_data(kdc_context, state->inner_body);"
    },
    {
        "line": 268,
        "fullcodeline": "kdc_free_rstate(state->rstate);"
    },
    {
        "line": 269,
        "fullcodeline": "krb5_free_kdc_req(kdc_context, state->request);"
    },
    {
        "line": 270,
        "fullcodeline": "k5_free_data_ptr_list(state->auth_indicators);"
    },
    {
        "line": 271,
        "fullcodeline": "assert(did_log != 0);"
    },
    {
        "line": 273,
        "fullcodeline": "free(state);"
    },
    {
        "line": 274,
        "fullcodeline": "(*oldrespond)(oldarg, errcode, response);"
    },
    {
        "line": 22,
        "fullcodeline": "if ((errcode = validate_forwardable(state->request, *state->client,"
    },
    {
        "line": 41,
        "fullcodeline": "if ((errcode = krb5_dbe_find_enctype(kdc_context, state->server,"
    },
    {
        "line": 56,
        "fullcodeline": "if ((errcode = krb5_dbe_decrypt_key_data(kdc_context, NULL,"
    },
    {
        "line": 69,
        "fullcodeline": "if ((errcode = fetch_last_req_info(state->client,"
    },
    {
        "line": 101,
        "fullcodeline": "if (state->client_keyblock.enctype == ENCTYPE_NULL) {"
    },
    {
        "line": 171,
        "fullcodeline": "if (kdc_fast_hide_client(state->rstate))"
    },
    {
        "line": 177,
        "fullcodeline": "if (state->client_key != NULL)"
    },
    {
        "line": 196,
        "fullcodeline": "if (errcode != 0)"
    },
    {
        "line": 202,
        "fullcodeline": "(errcode || state->preauth_err) ? FALSE : TRUE, au_state);"
    },
    {
        "line": 239,
        "fullcodeline": "if (state->enc_tkt_reply.authorization_data != NULL)"
    },
    {
        "line": 242,
        "fullcodeline": "if (state->server_keyblock.contents != NULL)"
    },
    {
        "line": 244,
        "fullcodeline": "if (state->client_keyblock.contents != NULL)"
    },
    {
        "line": 246,
        "fullcodeline": "if (state->reply.padata != NULL)"
    },
    {
        "line": 251,
        "fullcodeline": "if (state->cname != NULL)"
    },
    {
        "line": 253,
        "fullcodeline": "if (state->sname != NULL)"
    },
    {
        "line": 258,
        "fullcodeline": "if (state->session_key.contents != NULL)"
    },
    {
        "line": 260,
        "fullcodeline": "if (state->ticket_reply.enc_part.ciphertext.data != NULL) {"
    },
    {
        "line": 25,
        "fullcodeline": "errcode += ERROR_TABLE_BASE_krb5;"
    },
    {
        "line": 32,
        "fullcodeline": "state->status = \"HIGHER_AUTHENTICATION_REQUIRED\";"
    },
    {
        "line": 46,
        "fullcodeline": "state->status = \"FINDING_SERVER_KEY\";"
    },
    {
        "line": 60,
        "fullcodeline": "state->status = \"DECRYPT_SERVER_KEY\";"
    },
    {
        "line": 71,
        "fullcodeline": "state->status = \"FETCH_LAST_REQ\";"
    },
    {
        "line": 95,
        "fullcodeline": "state->status = \"KDC_RETURN_PADATA\";"
    },
    {
        "line": 102,
        "fullcodeline": "state->status = \"CANT_FIND_CLIENT_KEY\";"
    },
    {
        "line": 103,
        "fullcodeline": "errcode = KRB5KDC_ERR_ETYPE_NOSUPP;"
    },
    {
        "line": 123,
        "fullcodeline": "krb5_klog_syslog(LOG_INFO, _(\"AS_REQ : handle_authdata (%d)\"),"
    },
    {
        "line": 125,
        "fullcodeline": "state->status = \"HANDLE_AUTHDATA\";"
    },
    {
        "line": 132,
        "fullcodeline": "state->status = \"ENCRYPT_TICKET\";"
    },
    {
        "line": 139,
        "fullcodeline": "state->status = \"GENERATE_TICKET_ID\";"
    },
    {
        "line": 149,
        "fullcodeline": "state->status = \"MAKE_FAST_RESPONSE\";"
    },
    {
        "line": 160,
        "fullcodeline": "state->status = \"MAKE_FAST_REPLY_KEY\";"
    },
    {
        "line": 167,
        "fullcodeline": "state->status = \"KDC_RETURN_ENC_PADATA\";"
    },
    {
        "line": 172,
        "fullcodeline": "state->reply.client = (krb5_principal)krb5_anonymous_principal();"
    },
    {
        "line": 180,
        "fullcodeline": "state->status = \"ENCODE_KDC_REP\";"
    },
    {
        "line": 197,
        "fullcodeline": "assert (state->status != 0);"
    },
    {
        "line": 207,
        "fullcodeline": "krb5_free_keyblock(kdc_context, as_encrypting_key);"
    },
    {
        "line": 209,
        "fullcodeline": "emsg = krb5_get_error_message(kdc_context, errcode);"
    },
    {
        "line": 212,
        "fullcodeline": "log_as_req(kdc_context, state->local_addr, state->remote_addr,"
    },
    {
        "line": 216,
        "fullcodeline": "did_log = 1;"
    },
    {
        "line": 238,
        "fullcodeline": "krb5_free_error_message(kdc_context, emsg);"
    },
    {
        "line": 240,
        "fullcodeline": "krb5_free_authdata(kdc_context,"
    },
    {
        "line": 243,
        "fullcodeline": "krb5_free_keyblock_contents(kdc_context, &state->server_keyblock);"
    },
    {
        "line": 245,
        "fullcodeline": "krb5_free_keyblock_contents(kdc_context, &state->client_keyblock);"
    },
    {
        "line": 247,
        "fullcodeline": "krb5_free_pa_data(kdc_context, state->reply.padata);"
    },
    {
        "line": 249,
        "fullcodeline": "krb5_free_pa_data(kdc_context, state->reply_encpart.enc_padata);"
    },
    {
        "line": 252,
        "fullcodeline": "free(state->cname);"
    },
    {
        "line": 254,
        "fullcodeline": "free(state->sname);"
    },
    {
        "line": 259,
        "fullcodeline": "krb5_free_keyblock_contents(kdc_context, &state->session_key);"
    },
    {
        "line": 261,
        "fullcodeline": "memset(state->ticket_reply.enc_part.ciphertext.data , 0,"
    },
    {
        "line": 263,
        "fullcodeline": "free(state->ticket_reply.enc_part.ciphertext.data);"
    },
    {
        "line": 42,
        "fullcodeline": "-1, /* ignore keytype   */"
    },
    {
        "line": 43,
        "fullcodeline": "-1, /* Ignore salttype  */"
    },
    {
        "line": 219,
        "fullcodeline": "if (state->status == 0) {"
    },
    {
        "line": 222,
        "fullcodeline": "if (errcode != KRB5KDC_ERR_DISCARD) {"
    },
    {
        "line": 220,
        "fullcodeline": "state->status = emsg;"
    },
    {
        "line": 223,
        "fullcodeline": "errcode -= ERROR_TABLE_BASE_krb5;"
    },
    {
        "line": 227,
        "fullcodeline": "errcode = prepare_error_as(state->rstate, state->request,"
    },
    {
        "line": 233,
        "fullcodeline": "state->status = 0;"
    },
    {
        "line": 224,
        "fullcodeline": "if (errcode < 0 || errcode > KRB_ERR_MAX)"
    },
    {
        "line": 225,
        "fullcodeline": "errcode = KRB_ERR_GENERIC;"
    },
    {
        "line": 230,
        "fullcodeline": "((state->client != NULL) ?"
    }
]