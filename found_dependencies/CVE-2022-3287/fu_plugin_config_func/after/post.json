[
    {
        "line": 3,
        "fullcodeline": "GStatBuf statbuf = {0};"
    },
    {
        "line": 6,
        "fullcodeline": "g_autofree gchar *conf_dir = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "g_autofree gchar *conf_file = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "g_autofree gchar *fn = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "g_autofree gchar *testdatadir = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "g_autofree gchar *value = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "g_autoptr(FuPlugin) plugin = fu_plugin_new(NULL);"
    },
    {
        "line": 12,
        "fullcodeline": "g_autoptr(GError) error = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "testdatadir = g_test_build_filename(G_TEST_BUILT, \"tests\", NULL);"
    },
    {
        "line": 16,
        "fullcodeline": "(void)g_setenv(\"FWUPD_SYSCONFDIR\", testdatadir, TRUE);"
    },
    {
        "line": 17,
        "fullcodeline": "conf_dir = fu_path_from_kind(FU_PATH_KIND_SYSCONFDIR_PKG);"
    },
    {
        "line": 20,
        "fullcodeline": "fu_plugin_set_name(plugin, \"test\");"
    },
    {
        "line": 21,
        "fullcodeline": "conf_file = g_strdup_printf(\"%s.conf\", fu_plugin_get_name(plugin));"
    },
    {
        "line": 22,
        "fullcodeline": "fn = g_build_filename(conf_dir, conf_file, NULL);"
    },
    {
        "line": 23,
        "fullcodeline": "ret = fu_path_mkdir_parent(fn, &error);"
    },
    {
        "line": 24,
        "fullcodeline": "g_assert_no_error(error);"
    },
    {
        "line": 25,
        "fullcodeline": "g_assert_true(ret);"
    },
    {
        "line": 26,
        "fullcodeline": "g_remove(fn);"
    },
    {
        "line": 27,
        "fullcodeline": "ret = g_file_set_contents(fn, \"\", -1, &error);"
    },
    {
        "line": 28,
        "fullcodeline": "g_assert_no_error(error);"
    },
    {
        "line": 29,
        "fullcodeline": "g_assert_true(ret);"
    },
    {
        "line": 32,
        "fullcodeline": "ret = fu_plugin_set_config_value(plugin, \"Key\", \"True\", &error);"
    },
    {
        "line": 33,
        "fullcodeline": "g_assert_no_error(error);"
    },
    {
        "line": 34,
        "fullcodeline": "g_assert_true(ret);"
    },
    {
        "line": 38,
        "fullcodeline": "rc = g_stat(fn, &statbuf);"
    },
    {
        "line": 43,
        "fullcodeline": "value = fu_plugin_get_config_value(plugin, \"Key\");"
    },
    {
        "line": 45,
        "fullcodeline": "g_assert_true(fu_plugin_get_config_value_boolean(plugin, \"Key\"));"
    },
    {
        "line": 48,
        "fullcodeline": "ret = fu_plugin_set_secure_config_value(plugin, \"Key\", \"False\", &error);"
    },
    {
        "line": 49,
        "fullcodeline": "g_assert_no_error(error);"
    },
    {
        "line": 50,
        "fullcodeline": "g_assert_true(ret);"
    },
    {
        "line": 51,
        "fullcodeline": "rc = g_stat(fn, &statbuf);"
    }
]