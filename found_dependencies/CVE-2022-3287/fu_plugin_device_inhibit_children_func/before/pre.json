[
    {
        "line": 3,
        "fullcodeline": "g_autoptr(FuDevice) parent = fu_device_new(NULL);"
    },
    {
        "line": 4,
        "fullcodeline": "g_autoptr(FuDevice) child1 = fu_device_new(NULL);"
    },
    {
        "line": 5,
        "fullcodeline": "g_autoptr(FuDevice) child2 = fu_device_new(NULL);"
    },
    {
        "line": 7,
        "fullcodeline": "fu_device_set_id(parent, \"testdev\");"
    },
    {
        "line": 8,
        "fullcodeline": "fu_device_set_name(parent, \"testdev\");"
    },
    {
        "line": 9,
        "fullcodeline": "fu_device_add_flag(parent, FWUPD_DEVICE_FLAG_UPDATABLE);"
    },
    {
        "line": 10,
        "fullcodeline": "fu_device_set_id(child1, \"child1\");"
    },
    {
        "line": 11,
        "fullcodeline": "fu_device_set_name(child1, \"child1\");"
    },
    {
        "line": 12,
        "fullcodeline": "fu_device_add_flag(child1, FWUPD_DEVICE_FLAG_UPDATABLE);"
    },
    {
        "line": 13,
        "fullcodeline": "fu_device_add_child(parent, child1);"
    },
    {
        "line": 16,
        "fullcodeline": "fu_device_inhibit(parent, \"test\", \"because\");"
    },
    {
        "line": 19,
        "fullcodeline": "fu_device_uninhibit(parent, \"test\");"
    },
    {
        "line": 22,
        "fullcodeline": "fu_device_add_internal_flag(parent, FU_DEVICE_INTERNAL_FLAG_INHIBIT_CHILDREN);"
    },
    {
        "line": 23,
        "fullcodeline": "fu_device_inhibit(parent, \"test\", \"because\");"
    },
    {
        "line": 28,
        "fullcodeline": "fu_device_set_id(child2, \"child2\");"
    },
    {
        "line": 29,
        "fullcodeline": "fu_device_set_name(child2, \"child2\");"
    },
    {
        "line": 30,
        "fullcodeline": "fu_device_add_flag(child2, FWUPD_DEVICE_FLAG_UPDATABLE);"
    },
    {
        "line": 31,
        "fullcodeline": "fu_device_add_child(parent, child2);"
    }
]