[
    {
        "line": 3,
        "fullcodeline": "g_autofree gchar *testdatadir = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "g_test_init(&argc, &argv, NULL);"
    },
    {
        "line": 6,
        "fullcodeline": "g_type_ensure(FU_TYPE_IFD_BIOS);"
    },
    {
        "line": 9,
        "fullcodeline": "g_log_set_fatal_mask(NULL, G_LOG_LEVEL_ERROR | G_LOG_LEVEL_CRITICAL);"
    },
    {
        "line": 10,
        "fullcodeline": "(void)g_setenv(\"G_MESSAGES_DEBUG\", \"all\", TRUE);"
    },
    {
        "line": 12,
        "fullcodeline": "testdatadir = g_test_build_filename(G_TEST_DIST, \"tests\", NULL);"
    },
    {
        "line": 13,
        "fullcodeline": "(void)g_setenv(\"FWUPD_DATADIR\", testdatadir, TRUE);"
    },
    {
        "line": 14,
        "fullcodeline": "(void)g_setenv(\"FWUPD_PLUGINDIR\", testdatadir, TRUE);"
    },
    {
        "line": 15,
        "fullcodeline": "(void)g_setenv(\"FWUPD_SYSCONFDIR\", testdatadir, TRUE);"
    },
    {
        "line": 16,
        "fullcodeline": "(void)g_setenv(\"FWUPD_SYSFSFWATTRIBDIR\", testdatadir, TRUE);"
    },
    {
        "line": 17,
        "fullcodeline": "(void)g_setenv(\"FWUPD_OFFLINE_TRIGGER\", \"/tmp/fwupd-self-test/system-update\", TRUE);"
    },
    {
        "line": 18,
        "fullcodeline": "(void)g_setenv(\"FWUPD_LOCALSTATEDIR\", \"/tmp/fwupd-self-test/var\", TRUE);"
    },
    {
        "line": 19,
        "fullcodeline": "(void)g_setenv(\"FWUPD_PROFILE\", \"1\", TRUE);"
    },
    {
        "line": 21,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{strnsplit}\", fu_strsplit_func);"
    },
    {
        "line": 22,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{memmem}\", fu_common_memmem_func);"
    },
    {
        "line": 23,
        "fullcodeline": "g_test_add_func(\"/fwupd/progress\", fu_progress_func);"
    },
    {
        "line": 24,
        "fullcodeline": "g_test_add_func(\"/fwupd/progress{child}\", fu_progress_child_func);"
    },
    {
        "line": 25,
        "fullcodeline": "g_test_add_func(\"/fwupd/progress{child-finished}\", fu_progress_child_finished);"
    },
    {
        "line": 26,
        "fullcodeline": "g_test_add_func(\"/fwupd/progress{parent-1-step}\", fu_progress_parent_one_step_proxy_func);"
    },
    {
        "line": 27,
        "fullcodeline": "g_test_add_func(\"/fwupd/progress{no-equal}\", fu_progress_non_equal_steps_func);"
    },
    {
        "line": 28,
        "fullcodeline": "g_test_add_func(\"/fwupd/progress{finish}\", fu_progress_finish_func);"
    },
    {
        "line": 29,
        "fullcodeline": "g_test_add_func(\"/fwupd/bios-attrs{load}\", fu_bios_settings_load_func);"
    },
    {
        "line": 30,
        "fullcodeline": "g_test_add_func(\"/fwupd/security-attrs{hsi}\", fu_security_attrs_hsi_func);"
    },
    {
        "line": 31,
        "fullcodeline": "g_test_add_func(\"/fwupd/plugin{devices}\", fu_plugin_devices_func);"
    },
    {
        "line": 32,
        "fullcodeline": "g_test_add_func(\"/fwupd/plugin{device-inhibit-children}\","
    },
    {
        "line": 34,
        "fullcodeline": "g_test_add_func(\"/fwupd/plugin{delay}\", fu_plugin_delay_func);"
    },
    {
        "line": 35,
        "fullcodeline": "g_test_add_func(\"/fwupd/plugin{quirks}\", fu_plugin_quirks_func);"
    },
    {
        "line": 36,
        "fullcodeline": "g_test_add_func(\"/fwupd/plugin{quirks-performance}\", fu_plugin_quirks_performance_func);"
    },
    {
        "line": 37,
        "fullcodeline": "g_test_add_func(\"/fwupd/plugin{quirks-device}\", fu_plugin_quirks_device_func);"
    },
    {
        "line": 38,
        "fullcodeline": "g_test_add_func(\"/fwupd/backend\", fu_backend_func);"
    },
    {
        "line": 39,
        "fullcodeline": "g_test_add_func(\"/fwupd/chunk\", fu_chunk_func);"
    },
    {
        "line": 40,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{align-up}\", fu_common_align_up_func);"
    },
    {
        "line": 41,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{gpt-type}\", fu_common_gpt_type_func);"
    },
    {
        "line": 42,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{byte-array}\", fu_common_byte_array_func);"
    },
    {
        "line": 43,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{crc}\", fu_common_crc_func);"
    },
    {
        "line": 44,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{string-append-kv}\", fu_string_append_func);"
    },
    {
        "line": 45,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{version-guess-format}\", fu_version_guess_format_func);"
    },
    {
        "line": 46,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{strtoull}\", fu_strtoull_func);"
    },
    {
        "line": 47,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{version}\", fu_common_version_func);"
    },
    {
        "line": 48,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{version-semver}\", fu_version_semver_func);"
    },
    {
        "line": 49,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{vercmp}\", fu_common_vercmp_func);"
    },
    {
        "line": 50,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{strstrip}\", fu_strstrip_func);"
    },
    {
        "line": 51,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{endian}\", fu_common_endian_func);"
    },
    {
        "line": 52,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{cabinet}\", fu_common_cabinet_func);"
    },
    {
        "line": 53,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{bytes-get-data}\", fu_common_bytes_get_data_func);"
    },
    {
        "line": 54,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{kernel-lockdown}\", fu_common_kernel_lockdown_func);"
    },
    {
        "line": 55,
        "fullcodeline": "g_test_add_func(\"/fwupd/common{strsafe}\", fu_strsafe_func);"
    },
    {
        "line": 56,
        "fullcodeline": "g_test_add_func(\"/fwupd/efivar\", fu_efivar_func);"
    },
    {
        "line": 57,
        "fullcodeline": "g_test_add_func(\"/fwupd/hwids\", fu_hwids_func);"
    },
    {
        "line": 58,
        "fullcodeline": "g_test_add_func(\"/fwupd/smbios\", fu_smbios_func);"
    },
    {
        "line": 59,
        "fullcodeline": "g_test_add_func(\"/fwupd/smbios3\", fu_smbios3_func);"
    },
    {
        "line": 60,
        "fullcodeline": "g_test_add_func(\"/fwupd/smbios{dt}\", fu_smbios_dt_func);"
    },
    {
        "line": 61,
        "fullcodeline": "g_test_add_func(\"/fwupd/smbios{dt-fallback}\", fu_smbios_dt_fallback_func);"
    },
    {
        "line": 62,
        "fullcodeline": "g_test_add_func(\"/fwupd/smbios{class}\", fu_smbios_class_func);"
    },
    {
        "line": 63,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware\", fu_firmware_func);"
    },
    {
        "line": 64,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{common}\", fu_firmware_common_func);"
    },
    {
        "line": 65,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{linear}\", fu_firmware_linear_func);"
    },
    {
        "line": 66,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{dedupe}\", fu_firmware_dedupe_func);"
    },
    {
        "line": 67,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{build}\", fu_firmware_build_func);"
    },
    {
        "line": 68,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{raw-aligned}\", fu_firmware_raw_aligned_func);"
    },
    {
        "line": 69,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{ihex}\", fu_firmware_ihex_func);"
    },
    {
        "line": 70,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{ihex-offset}\", fu_firmware_ihex_offset_func);"
    },
    {
        "line": 71,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{ihex-signed}\", fu_firmware_ihex_signed_func);"
    },
    {
        "line": 72,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{srec-tokenization}\", fu_firmware_srec_tokenization_func);"
    },
    {
        "line": 73,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{srec}\", fu_firmware_srec_func);"
    },
    {
        "line": 74,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{fdt}\", fu_firmware_fdt_func);"
    },
    {
        "line": 75,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{fit}\", fu_firmware_fit_func);"
    },
    {
        "line": 76,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{ifwi-cpd}\", fu_firmware_ifwi_cpd_func);"
    },
    {
        "line": 77,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{ifwi-fpt}\", fu_firmware_ifwi_fpt_func);"
    },
    {
        "line": 78,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{oprom}\", fu_firmware_oprom_func);"
    },
    {
        "line": 79,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{dfu}\", fu_firmware_dfu_func);"
    },
    {
        "line": 80,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{dfu-patch}\", fu_firmware_dfu_patch_func);"
    },
    {
        "line": 81,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{dfuse}\", fu_firmware_dfuse_func);"
    },
    {
        "line": 82,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{builder-round-trip}\", fu_firmware_builder_round_trip_func);"
    },
    {
        "line": 83,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{fmap}\", fu_firmware_fmap_func);"
    },
    {
        "line": 84,
        "fullcodeline": "g_test_add_func(\"/fwupd/firmware{gtypes}\", fu_firmware_new_from_gtypes_func);"
    },
    {
        "line": 85,
        "fullcodeline": "g_test_add_func(\"/fwupd/archive{invalid}\", fu_archive_invalid_func);"
    },
    {
        "line": 86,
        "fullcodeline": "g_test_add_func(\"/fwupd/archive{cab}\", fu_archive_cab_func);"
    },
    {
        "line": 87,
        "fullcodeline": "g_test_add_func(\"/fwupd/device\", fu_device_func);"
    },
    {
        "line": 88,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{instance-ids}\", fu_device_instance_ids_func);"
    },
    {
        "line": 89,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{composite-id}\", fu_device_composite_id_func);"
    },
    {
        "line": 90,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{flags}\", fu_device_flags_func);"
    },
    {
        "line": 91,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{custom-flags}\", fu_device_private_flags_func);"
    },
    {
        "line": 92,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{inhibit}\", fu_device_inhibit_func);"
    },
    {
        "line": 93,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{inhibit-updateable}\", fu_device_inhibit_updateable_func);"
    },
    {
        "line": 94,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{parent}\", fu_device_parent_func);"
    },
    {
        "line": 95,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{children}\", fu_device_children_func);"
    },
    {
        "line": 96,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{incorporate}\", fu_device_incorporate_func);"
    },
    {
        "line": 99,
        "fullcodeline": "g_test_add_func(\"/fwupd/device-locker{success}\", fu_device_locker_func);"
    },
    {
        "line": 100,
        "fullcodeline": "g_test_add_func(\"/fwupd/device-locker{fail}\", fu_device_locker_fail_func);"
    },
    {
        "line": 101,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{name}\", fu_device_name_func);"
    },
    {
        "line": 102,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{metadata}\", fu_device_metadata_func);"
    },
    {
        "line": 103,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{open-refcount}\", fu_device_open_refcount_func);"
    },
    {
        "line": 104,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{version-format}\", fu_device_version_format_func);"
    },
    {
        "line": 105,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{retry-success}\", fu_device_retry_success_func);"
    },
    {
        "line": 106,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{retry-failed}\", fu_device_retry_failed_func);"
    },
    {
        "line": 107,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{retry-hardware}\", fu_device_retry_hardware_func);"
    },
    {
        "line": 108,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{cfi-device}\", fu_device_cfi_device_func);"
    },
    {
        "line": 97,
        "fullcodeline": "if (g_test_slow())"
    },
    {
        "line": 109,
        "fullcodeline": "return g_test_run();"
    },
    {
        "line": 98,
        "fullcodeline": "g_test_add_func(\"/fwupd/device{poll}\", fu_device_poll_func);"
    }
]