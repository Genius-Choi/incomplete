[
    {
        "line": 5,
        "fullcodeline": "AudioFWTDNContext *s = ctx->priv;"
    },
    {
        "line": 6,
        "fullcodeline": "AVFrame *in = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "FF_FILTER_FORWARD_STATUS_BACK(outlink, inlink);"
    },
    {
        "line": 12,
        "fullcodeline": "ret = ff_inlink_consume_samples(inlink, s->nb_samples, s->nb_samples, &in);"
    },
    {
        "line": 29,
        "fullcodeline": "FF_FILTER_FORWARD_WANTED(outlink, inlink);"
    },
    {
        "line": 13,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 15,
        "fullcodeline": "if (ret > 0)"
    },
    {
        "line": 18,
        "fullcodeline": "if (ff_inlink_acknowledge_status(inlink, &status, &pts)) {"
    },
    {
        "line": 16,
        "fullcodeline": "return filter_frame(inlink, in);"
    },
    {
        "line": 19,
        "fullcodeline": "if (status == AVERROR_EOF) {"
    },
    {
        "line": 25,
        "fullcodeline": "ff_outlink_set_status(outlink, status, pts);"
    },
    {
        "line": 20,
        "fullcodeline": "while (s->padd_samples != 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "ret = filter_frame(inlink, NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "if (ret < 0)"
    }
]