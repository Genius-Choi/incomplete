[
    {
        "line": 3,
        "fullcodeline": "AVFilterLink *inlink = ctx->inputs[0];"
    },
    {
        "line": 4,
        "fullcodeline": "AVFilterLink *outlink = ctx->outputs[0];"
    },
    {
        "line": 5,
        "fullcodeline": "AudioFWTDNContext *s = ctx->priv;"
    },
    {
        "line": 6,
        "fullcodeline": "AVFrame *in = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "FF_FILTER_FORWARD_STATUS_BACK(outlink, inlink);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!s->eof) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (ff_inlink_acknowledge_status(inlink, &status, &pts)) {"
    },
    {
        "line": 13,
        "fullcodeline": "ret = ff_inlink_consume_samples(inlink, s->nb_samples, s->nb_samples, &in);"
    },
    {
        "line": 25,
        "fullcodeline": "if (s->eof && s->padd_samples != 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 21,
        "fullcodeline": "if (status == AVERROR_EOF)"
    },
    {
        "line": 26,
        "fullcodeline": "return filter_frame(inlink, NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "s->eof = 1;"
    },
    {
        "line": 17,
        "fullcodeline": "return filter_frame(inlink, in);"
    }
]