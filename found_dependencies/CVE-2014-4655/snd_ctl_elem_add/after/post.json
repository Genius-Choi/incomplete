[
    {
        "line": 4,
        "fullcodeline": "struct snd_card *card = file->card;"
    },
    {
        "line": 13,
        "fullcodeline": "access = info->access == 0 ? SNDRV_CTL_ELEM_ACCESS_READWRITE :"
    },
    {
        "line": 17,
        "fullcodeline": "info->id.numid = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "memset(&kctl, 0, sizeof(kctl));"
    },
    {
        "line": 29,
        "fullcodeline": "memcpy(&kctl.id, &info->id, sizeof(info->id));"
    },
    {
        "line": 30,
        "fullcodeline": "kctl.count = info->owner ? info->owner : 1;"
    },
    {
        "line": 31,
        "fullcodeline": "access |= SNDRV_CTL_ELEM_ACCESS_USER;"
    },
    {
        "line": 74,
        "fullcodeline": "private_size *= info->count;"
    },
    {
        "line": 75,
        "fullcodeline": "ue = kzalloc(sizeof(struct user_element) + private_size, GFP_KERNEL);"
    },
    {
        "line": 78,
        "fullcodeline": "ue->card = card;"
    },
    {
        "line": 80,
        "fullcodeline": "ue->info.access = 0;"
    },
    {
        "line": 81,
        "fullcodeline": "ue->elem_data = (char *)ue + sizeof(*ue);"
    },
    {
        "line": 82,
        "fullcodeline": "ue->elem_data_size = private_size;"
    },
    {
        "line": 90,
        "fullcodeline": "kctl.private_free = snd_ctl_elem_user_free;"
    },
    {
        "line": 91,
        "fullcodeline": "_kctl = snd_ctl_new(&kctl, access);"
    },
    {
        "line": 97,
        "fullcodeline": "_kctl->private_data = ue;"
    },
    {
        "line": 100,
        "fullcodeline": "err = snd_ctl_add(card, _kctl);"
    },
    {
        "line": 104,
        "fullcodeline": "down_write(&card->controls_rwsem);"
    },
    {
        "line": 105,
        "fullcodeline": "card->user_ctl_count++;"
    },
    {
        "line": 106,
        "fullcodeline": "up_write(&card->controls_rwsem);"
    },
    {
        "line": 11,
        "fullcodeline": "if (info->count < 1)"
    },
    {
        "line": 26,
        "fullcodeline": "if (card->user_ctl_count >= MAX_USER_CONTROLS)"
    },
    {
        "line": 32,
        "fullcodeline": "if (info->type == SNDRV_CTL_ELEM_TYPE_ENUMERATED)"
    },
    {
        "line": 36,
        "fullcodeline": "if (access & SNDRV_CTL_ELEM_ACCESS_READ)"
    },
    {
        "line": 38,
        "fullcodeline": "if (access & SNDRV_CTL_ELEM_ACCESS_WRITE)"
    },
    {
        "line": 40,
        "fullcodeline": "if (access & SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (ue == NULL)"
    },
    {
        "line": 83,
        "fullcodeline": "if (ue->info.type == SNDRV_CTL_ELEM_TYPE_ENUMERATED) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (_kctl == NULL) {"
    },
    {
        "line": 98,
        "fullcodeline": "for (idx = 0; idx < _kctl->count; idx++)"
    },
    {
        "line": 99,
        "fullcodeline": "_kctl->vd[idx].owner = file;"
    },
    {
        "line": 101,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 14,
        "fullcodeline": "(info->access & (SNDRV_CTL_ELEM_ACCESS_READWRITE|"
    },
    {
        "line": 21,
        "fullcodeline": "err = snd_ctl_remove_user_ctl(file, &info->id);"
    },
    {
        "line": 33,
        "fullcodeline": "kctl.info = snd_ctl_elem_user_enum_info;"
    },
    {
        "line": 37,
        "fullcodeline": "kctl.get = snd_ctl_elem_user_get;"
    },
    {
        "line": 39,
        "fullcodeline": "kctl.put = snd_ctl_elem_user_put;"
    },
    {
        "line": 41,
        "fullcodeline": "kctl.tlv.c = snd_ctl_elem_user_tlv;"
    },
    {
        "line": 42,
        "fullcodeline": "access |= SNDRV_CTL_ELEM_ACCESS_TLV_CALLBACK;"
    },
    {
        "line": 84,
        "fullcodeline": "err = snd_ctl_elem_init_enum_names(ue);"
    },
    {
        "line": 93,
        "fullcodeline": "kfree(ue->priv_data);"
    },
    {
        "line": 94,
        "fullcodeline": "kfree(ue);"
    },
    {
        "line": 12,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 27,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 35,
        "fullcodeline": "kctl.info = snd_ctl_elem_user_info;"
    },
    {
        "line": 48,
        "fullcodeline": "if (info->count > 128)"
    },
    {
        "line": 53,
        "fullcodeline": "if (info->count > 64)"
    },
    {
        "line": 58,
        "fullcodeline": "if (info->count > 128 || info->value.enumerated.items == 0)"
    },
    {
        "line": 63,
        "fullcodeline": "if (info->count > 512)"
    },
    {
        "line": 68,
        "fullcodeline": "if (info->count != 1)"
    },
    {
        "line": 72,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 77,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 85,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 95,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 86,
        "fullcodeline": "kfree(ue);"
    },
    {
        "line": 49,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 54,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 59,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 64,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 69,
        "fullcodeline": "return -EINVAL;"
    }
]