[
    {
        "line": 5,
        "fullcodeline": "struct device *dev = mdev_dev(mdev);"
    },
    {
        "line": 7,
        "fullcodeline": "int ret = -ENOMEM;"
    },
    {
        "line": 12,
        "fullcodeline": "mdev_state = kzalloc(sizeof(struct mdev_state), GFP_KERNEL);"
    },
    {
        "line": 15,
        "fullcodeline": "vfio_init_group_dev(&mdev_state->vdev, &mdev->dev, &mbochs_dev_ops);"
    },
    {
        "line": 17,
        "fullcodeline": "mdev_state->vconfig = kzalloc(MBOCHS_CONFIG_SPACE_SIZE, GFP_KERNEL);"
    },
    {
        "line": 21,
        "fullcodeline": "mdev_state->memsize = type->mbytes * 1024 * 1024;"
    },
    {
        "line": 22,
        "fullcodeline": "mdev_state->pagecount = mdev_state->memsize >> PAGE_SHIFT;"
    },
    {
        "line": 23,
        "fullcodeline": "mdev_state->pages = kcalloc(mdev_state->pagecount,"
    },
    {
        "line": 29,
        "fullcodeline": "dev_info(dev, \"%s: %s, %d MB, %ld pages\\n\", __func__,"
    },
    {
        "line": 32,
        "fullcodeline": "mutex_init(&mdev_state->ops_lock);"
    },
    {
        "line": 33,
        "fullcodeline": "mdev_state->mdev = mdev;"
    },
    {
        "line": 34,
        "fullcodeline": "INIT_LIST_HEAD(&mdev_state->dmabufs);"
    },
    {
        "line": 35,
        "fullcodeline": "mdev_state->next_id = 1;"
    },
    {
        "line": 37,
        "fullcodeline": "mdev_state->type = type;"
    },
    {
        "line": 38,
        "fullcodeline": "mdev_state->edid_regs.max_xres = type->max_x;"
    },
    {
        "line": 39,
        "fullcodeline": "mdev_state->edid_regs.max_yres = type->max_y;"
    },
    {
        "line": 40,
        "fullcodeline": "mdev_state->edid_regs.edid_offset = MBOCHS_EDID_BLOB_OFFSET;"
    },
    {
        "line": 42,
        "fullcodeline": "mbochs_create_config_space(mdev_state);"
    },
    {
        "line": 43,
        "fullcodeline": "mbochs_reset(mdev_state);"
    },
    {
        "line": 45,
        "fullcodeline": "mbochs_used_mbytes += type->mbytes;"
    },
    {
        "line": 47,
        "fullcodeline": "ret = vfio_register_group_dev(&mdev_state->vdev);"
    },
    {
        "line": 50,
        "fullcodeline": "dev_set_drvdata(&mdev->dev, mdev_state);"
    },
    {
        "line": 54,
        "fullcodeline": "kfree(mdev_state->vconfig);"
    },
    {
        "line": 55,
        "fullcodeline": "kfree(mdev_state);"
    },
    {
        "line": 9,
        "fullcodeline": "if (type->mbytes + mbochs_used_mbytes > max_mbytes)"
    },
    {
        "line": 13,
        "fullcodeline": "if (mdev_state == NULL)"
    },
    {
        "line": 18,
        "fullcodeline": "if (mdev_state->vconfig == NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "if (!mdev_state->pages)"
    },
    {
        "line": 4,
        "fullcodeline": "&mbochs_types[mdev_get_type_group_id(mdev)];"
    },
    {
        "line": 10,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 14,
        "fullcodeline": "return -ENOMEM;"
    }
]