[
    {
        "line": 4,
        "fullcodeline": "struct vm_area_struct *vma = walk->private;"
    },
    {
        "line": 9,
        "fullcodeline": "split_huge_page_pmd(walk->mm, pmd);"
    },
    {
        "line": 13,
        "fullcodeline": "pte = pte_offset_map_lock(vma->vm_mm, pmd, addr, &ptl);"
    },
    {
        "line": 30,
        "fullcodeline": "pte_unmap_unlock(pte - 1, ptl);"
    },
    {
        "line": 31,
        "fullcodeline": "cond_resched();"
    },
    {
        "line": 10,
        "fullcodeline": "if (pmd_trans_unstable(pmd))"
    },
    {
        "line": 14,
        "fullcodeline": "for (; addr != end; pte++, addr += PAGE_SIZE) {"
    },
    {
        "line": 19,
        "fullcodeline": "page = vm_normal_page(vma, addr, ptent);"
    },
    {
        "line": 27,
        "fullcodeline": "ptep_test_and_clear_young(vma, addr, pte);"
    },
    {
        "line": 28,
        "fullcodeline": "ClearPageReferenced(page);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!pte_present(ptent))"
    },
    {
        "line": 20,
        "fullcodeline": "if (!page)"
    },
    {
        "line": 23,
        "fullcodeline": "if (PageReserved(page))"
    }
]