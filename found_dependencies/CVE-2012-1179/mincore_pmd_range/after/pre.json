[
    {
        "line": 8,
        "fullcodeline": "pmd = pmd_offset(pud, addr);"
    },
    {
        "line": 10,
        "fullcodeline": "next = pmd_addr_end(addr, end);"
    },
    {
        "line": 22,
        "fullcodeline": "vec += (next - addr) >> PAGE_SHIFT;"
    },
    {
        "line": 23,
        "fullcodeline": "} while (pmd++, addr = next, addr != end);"
    },
    {
        "line": 11,
        "fullcodeline": "if (pmd_trans_huge(*pmd)) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (pmd_none_or_trans_huge_or_clear_bad(pmd))"
    },
    {
        "line": 19,
        "fullcodeline": "mincore_unmapped_range(vma, addr, next, vec);"
    },
    {
        "line": 12,
        "fullcodeline": "if (mincore_huge_pmd(vma, pmd, addr, next, vec)) {"
    },
    {
        "line": 21,
        "fullcodeline": "mincore_pte_range(vma, pmd, addr, next, vec);"
    },
    {
        "line": 13,
        "fullcodeline": "vec += (next - addr) >> PAGE_SHIFT;"
    }
]