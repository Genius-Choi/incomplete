[
    {
        "line": 6,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "pmd = pmd_offset(pud, addr);"
    },
    {
        "line": 11,
        "fullcodeline": "next = pmd_addr_end(addr, end);"
    },
    {
        "line": 35,
        "fullcodeline": "split_huge_page_pmd(walk->mm, pmd);"
    },
    {
        "line": 38,
        "fullcodeline": "err = walk_pte_range(pmd, addr, next, walk);"
    },
    {
        "line": 41,
        "fullcodeline": "} while (pmd++, addr = next, addr != end);"
    },
    {
        "line": 12,
        "fullcodeline": "if (pmd_none(*pmd)) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (!walk->pte_entry)"
    },
    {
        "line": 36,
        "fullcodeline": "if (pmd_none_or_trans_huge_or_clear_bad(pmd))"
    },
    {
        "line": 24,
        "fullcodeline": "err = walk->pmd_entry(pmd, addr, next, walk);"
    },
    {
        "line": 14,
        "fullcodeline": "err = walk->pte_hole(addr, next, walk);"
    }
]