[
    {
        "line": 2,
        "fullcodeline": "client = test_client_factory(make_app_max_parts(max_fields=2000, max_files=2000))"
    },
    {
        "line": 3,
        "fullcodeline": "fields = []"
    },
    {
        "line": 13,
        "fullcodeline": "data = \"\".join(fields).encode(\"utf-8\")"
    },
    {
        "line": 14,
        "fullcodeline": "data += b\"--B--\\r\\n\""
    },
    {
        "line": 15,
        "fullcodeline": "res = client.post("
    },
    {
        "line": 20,
        "fullcodeline": "assert res.status_code == 200"
    },
    {
        "line": 21,
        "fullcodeline": "res_data = res.json()"
    },
    {
        "line": 22,
        "fullcodeline": "assert res_data[\"N1999\"] == \"\""
    },
    {
        "line": 23,
        "fullcodeline": "assert res_data[\"F1999\"] == {"
    },
    {
        "line": 4,
        "fullcodeline": "for i in range(2000):"
    },
    {
        "line": 5,
        "fullcodeline": "fields.append("
    },
    {
        "line": 8,
        "fullcodeline": "fields.append("
    },
    {
        "line": 18,
        "fullcodeline": "headers={\"Content-Type\": (\"multipart/form-data; boundary=B\")},"
    },
    {
        "line": 6,
        "fullcodeline": "\"--B\\r\\n\" f'Content-Disposition: form-data; name=\"N{i}\";\\r\\n\\r\\n' \"\\r\\n\""
    },
    {
        "line": 9,
        "fullcodeline": "\"--B\\r\\n\""
    },
    {
        "line": 10,
        "fullcodeline": "f'Content-Disposition: form-data; name=\"F{i}\"; filename=\"F{i}\";\\r\\n\\r\\n'"
    }
]