[
    {
        "line": 5,
        "fullcodeline": "int n = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "apr_size_t len = 1;"
    },
    {
        "line": 7,
        "fullcodeline": "apr_size_t plen = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned short payload_short = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "apr_uint64_t payload_long = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "request_rec *r = ap_lua_check_request_rec(L, 1);"
    },
    {
        "line": 16,
        "fullcodeline": "plaintext = ap_lua_ssl_is_https(r->connection) ? 0 : 1;"
    },
    {
        "line": 19,
        "fullcodeline": "mask_bytes = apr_pcalloc(r->pool, 4);"
    },
    {
        "line": 20,
        "fullcodeline": "sock = ap_get_conn_socket(r->connection);"
    },
    {
        "line": 29,
        "fullcodeline": "if (rv == APR_SUCCESS) {"
    },
    {
        "line": 24,
        "fullcodeline": "rv = apr_socket_recv(sock, &byte, &len);"
    },
    {
        "line": 31,
        "fullcodeline": "ubyte = (unsigned char)byte;"
    },
    {
        "line": 33,
        "fullcodeline": "fin = ubyte >> (CHAR_BIT - 1);"
    },
    {
        "line": 35,
        "fullcodeline": "opcode = ubyte & 0xf;"
    },
    {
        "line": 27,
        "fullcodeline": "rv = lua_websocket_readbytes(r->connection, &byte, 1);"
    },
    {
        "line": 44,
        "fullcodeline": "if (rv == APR_SUCCESS) {"
    },
    {
        "line": 39,
        "fullcodeline": "rv = apr_socket_recv(sock, &byte, &len);"
    },
    {
        "line": 45,
        "fullcodeline": "ubyte = (unsigned char)byte;"
    },
    {
        "line": 47,
        "fullcodeline": "mask = ubyte >> (CHAR_BIT - 1);"
    },
    {
        "line": 49,
        "fullcodeline": "payload = ubyte & 0x7f;"
    },
    {
        "line": 50,
        "fullcodeline": "plen = payload;"
    },
    {
        "line": 42,
        "fullcodeline": "rv = lua_websocket_readbytes(r->connection, &byte, 1);"
    },
    {
        "line": 53,
        "fullcodeline": "if (payload == 126) {"
    },
    {
        "line": 54,
        "fullcodeline": "len = 2;"
    },
    {
        "line": 63,
        "fullcodeline": "payload_short = ntohs(payload_short);"
    },
    {
        "line": 74,
        "fullcodeline": "len = 8;"
    },
    {
        "line": 96,
        "fullcodeline": "len = 4;"
    },
    {
        "line": 108,
        "fullcodeline": "if (plen < (HUGE_STRING_LEN*1024) && plen > 0) {"
    },
    {
        "line": 109,
        "fullcodeline": "apr_size_t remaining = plen;"
    },
    {
        "line": 111,
        "fullcodeline": "apr_off_t at = 0;"
    },
    {
        "line": 112,
        "fullcodeline": "char *buffer = apr_palloc(r->pool, plen+1);"
    },
    {
        "line": 113,
        "fullcodeline": "buffer[plen] = 0;"
    },
    {
        "line": 142,
        "fullcodeline": "lua_pushlstring(L, buffer, (size_t) plen); /* push to stack */"
    },
    {
        "line": 150,
        "fullcodeline": "char frame[2];"
    },
    {
        "line": 151,
        "fullcodeline": "plen = 2;"
    },
    {
        "line": 152,
        "fullcodeline": "frame[0] = 0x8A;"
    },
    {
        "line": 153,
        "fullcodeline": "frame[1] = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "if (rv == APR_SUCCESS) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (rv == APR_SUCCESS) {"
    },
    {
        "line": 57,
        "fullcodeline": "rv = apr_socket_recv(sock, (char*) &payload_short, &len);"
    },
    {
        "line": 66,
        "fullcodeline": "plen = payload_short;"
    },
    {
        "line": 76,
        "fullcodeline": "rv = apr_socket_recv(sock, (char*) &payload_long, &len);"
    },
    {
        "line": 83,
        "fullcodeline": "plen = ap_ntoh64(&payload_long);"
    },
    {
        "line": 98,
        "fullcodeline": "rv = apr_socket_recv(sock, (char*) mask_bytes, &len);"
    },
    {
        "line": 60,
        "fullcodeline": "rv = lua_websocket_readbytes(r->connection,"
    },
    {
        "line": 79,
        "fullcodeline": "rv = lua_websocket_readbytes(r->connection,"
    },
    {
        "line": 101,
        "fullcodeline": "rv = lua_websocket_readbytes(r->connection,"
    },
    {
        "line": 116,
        "fullcodeline": "while (remaining > 0) {"
    },
    {
        "line": 137,
        "fullcodeline": "for (n = 0; n < plen; n++) {"
    },
    {
        "line": 117,
        "fullcodeline": "received = remaining;"
    },
    {
        "line": 129,
        "fullcodeline": "rv = lua_websocket_readbytes(r->connection, buffer,"
    },
    {
        "line": 138,
        "fullcodeline": "buffer[n] ^= mask_bytes[n%4];"
    },
    {
        "line": 61,
        "fullcodeline": "(char*) &payload_short, 2);"
    },
    {
        "line": 118,
        "fullcodeline": "rv = apr_socket_recv(sock, buffer+at, &received);"
    },
    {
        "line": 119,
        "fullcodeline": "if (received > 0 ) {"
    },
    {
        "line": 120,
        "fullcodeline": "remaining -= received;"
    },
    {
        "line": 121,
        "fullcodeline": "at += received;"
    }
]