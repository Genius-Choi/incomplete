[
    {
        "line": 5,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 6,
        "fullcodeline": "struct pfkey_sock *pfk = pfkey_sk(sk);"
    },
    {
        "line": 10,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 14,
        "fullcodeline": "msg->msg_namelen = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "skb = skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err);"
    },
    {
        "line": 19,
        "fullcodeline": "copied = skb->len;"
    },
    {
        "line": 25,
        "fullcodeline": "skb_reset_transport_header(skb);"
    },
    {
        "line": 26,
        "fullcodeline": "err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied);"
    },
    {
        "line": 30,
        "fullcodeline": "sock_recv_ts_and_drops(msg, sk, skb);"
    },
    {
        "line": 32,
        "fullcodeline": "err = (flags & MSG_TRUNC) ? skb->len : copied;"
    },
    {
        "line": 39,
        "fullcodeline": "skb_free_datagram(sk, skb);"
    },
    {
        "line": 11,
        "fullcodeline": "if (flags & ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT))"
    },
    {
        "line": 16,
        "fullcodeline": "if (skb == NULL)"
    },
    {
        "line": 20,
        "fullcodeline": "if (copied > len) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (pfk->dump.dump != NULL &&"
    },
    {
        "line": 21,
        "fullcodeline": "msg->msg_flags |= MSG_TRUNC;"
    },
    {
        "line": 22,
        "fullcodeline": "copied = len;"
    },
    {
        "line": 35,
        "fullcodeline": "3 * atomic_read(&sk->sk_rmem_alloc) <= sk->sk_rcvbuf)"
    },
    {
        "line": 36,
        "fullcodeline": "pfkey_do_dump(pfk);"
    }
]