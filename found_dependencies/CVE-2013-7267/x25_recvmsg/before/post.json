[
    {
        "line": 5,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 6,
        "fullcodeline": "struct x25_sock *x25 = x25_sk(sk);"
    },
    {
        "line": 7,
        "fullcodeline": "struct sockaddr_x25 *sx25 = (struct sockaddr_x25 *)msg->msg_name;"
    },
    {
        "line": 12,
        "fullcodeline": "int rc = -ENOTCONN;"
    },
    {
        "line": 14,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 19,
        "fullcodeline": "header_len = x25->neighbour->extended ?"
    },
    {
        "line": 73,
        "fullcodeline": "skb_reset_transport_header(skb);"
    },
    {
        "line": 74,
        "fullcodeline": "copied = skb->len;"
    },
    {
        "line": 82,
        "fullcodeline": "msg->msg_flags |= MSG_EOR;"
    },
    {
        "line": 84,
        "fullcodeline": "rc = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied);"
    },
    {
        "line": 95,
        "fullcodeline": "x25_check_rbuf(sk);"
    },
    {
        "line": 96,
        "fullcodeline": "rc = copied;"
    },
    {
        "line": 98,
        "fullcodeline": "skb_free_datagram(sk, skb);"
    },
    {
        "line": 100,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 16,
        "fullcodeline": "if (x25->neighbour == NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "if (sk->sk_state != TCP_ESTABLISHED)"
    },
    {
        "line": 29,
        "fullcodeline": "if (flags & MSG_OOB) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (copied > size) {"
    },
    {
        "line": 30,
        "fullcodeline": "rc = -EINVAL;"
    },
    {
        "line": 35,
        "fullcodeline": "skb = skb_dequeue(&x25->interrupt_in_queue);"
    },
    {
        "line": 40,
        "fullcodeline": "skb_pull(skb, X25_STD_MIN_LEN);"
    },
    {
        "line": 50,
        "fullcodeline": "msg->msg_flags |= MSG_OOB;"
    },
    {
        "line": 77,
        "fullcodeline": "copied = size;"
    },
    {
        "line": 78,
        "fullcodeline": "msg->msg_flags |= MSG_TRUNC;"
    },
    {
        "line": 89,
        "fullcodeline": "sx25->sx25_family = AF_X25;"
    },
    {
        "line": 90,
        "fullcodeline": "sx25->sx25_addr   = x25->dest_addr;"
    },
    {
        "line": 31,
        "fullcodeline": "if (sock_flag(sk, SOCK_URGINLINE) ||"
    },
    {
        "line": 37,
        "fullcodeline": "if (!pskb_may_pull(skb, X25_STD_MIN_LEN))"
    },
    {
        "line": 45,
        "fullcodeline": "if (test_bit(X25_Q_BIT_FLAG, &x25->flags)) {"
    },
    {
        "line": 53,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 54,
        "fullcodeline": "skb = skb_recv_datagram(sk, flags & ~MSG_DONTWAIT,"
    },
    {
        "line": 56,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 63,
        "fullcodeline": "qbit = (skb->data[0] & X25_Q_BIT) == X25_Q_BIT;"
    },
    {
        "line": 65,
        "fullcodeline": "skb_pull(skb, header_len);"
    },
    {
        "line": 32,
        "fullcodeline": "!skb_peek(&x25->interrupt_in_queue))"
    },
    {
        "line": 46,
        "fullcodeline": "asmptr  = skb_push(skb, 1);"
    },
    {
        "line": 47,
        "fullcodeline": "*asmptr = 0x00;"
    },
    {
        "line": 57,
        "fullcodeline": "if (!skb)"
    },
    {
        "line": 60,
        "fullcodeline": "if (!pskb_may_pull(skb, header_len))"
    },
    {
        "line": 67,
        "fullcodeline": "if (test_bit(X25_Q_BIT_FLAG, &x25->flags)) {"
    },
    {
        "line": 55,
        "fullcodeline": "flags & MSG_DONTWAIT, &rc);"
    },
    {
        "line": 68,
        "fullcodeline": "asmptr  = skb_push(skb, 1);"
    },
    {
        "line": 69,
        "fullcodeline": "*asmptr = qbit;"
    }
]