[
    {
        "line": 7,
        "fullcodeline": "const struct x86_emulate_ops *ops = ctxt->ops;"
    },
    {
        "line": 8,
        "fullcodeline": "int cpl = ctxt->ops->cpl(ctxt);"
    },
    {
        "line": 10,
        "fullcodeline": "old_eip = ctxt->_eip;"
    },
    {
        "line": 11,
        "fullcodeline": "ops->get_segment(ctxt, &old_cs, &old_desc, NULL, VCPU_SREG_CS);"
    },
    {
        "line": 13,
        "fullcodeline": "memcpy(&sel, ctxt->src.valptr + ctxt->op_bytes, 2);"
    },
    {
        "line": 14,
        "fullcodeline": "rc = __load_segment_descriptor(ctxt, sel, VCPU_SREG_CS, cpl, false,"
    },
    {
        "line": 19,
        "fullcodeline": "rc = assign_eip_far(ctxt, ctxt->src.val, new_desc.l);"
    },
    {
        "line": 23,
        "fullcodeline": "ctxt->src.val = old_cs;"
    },
    {
        "line": 24,
        "fullcodeline": "rc = em_push(ctxt);"
    },
    {
        "line": 28,
        "fullcodeline": "ctxt->src.val = old_eip;"
    },
    {
        "line": 29,
        "fullcodeline": "rc = em_push(ctxt);"
    },
    {
        "line": 36,
        "fullcodeline": "ops->set_segment(ctxt, old_cs, &old_desc, 0, VCPU_SREG_CS);"
    },
    {
        "line": 16,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 20,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 25,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 32,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    }
]