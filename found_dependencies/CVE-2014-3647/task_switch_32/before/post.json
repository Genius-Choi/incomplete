[
    {
        "line": 5,
        "fullcodeline": "const struct x86_emulate_ops *ops = ctxt->ops;"
    },
    {
        "line": 8,
        "fullcodeline": "u32 new_tss_base = get_desc_base(new_desc);"
    },
    {
        "line": 12,
        "fullcodeline": "ret = ops->read_std(ctxt, old_tss_base, &tss_seg, sizeof tss_seg,"
    },
    {
        "line": 18,
        "fullcodeline": "save_state_to_tss32(ctxt, &tss_seg);"
    },
    {
        "line": 21,
        "fullcodeline": "ret = ops->write_std(ctxt, old_tss_base + eip_offset, &tss_seg.eip,"
    },
    {
        "line": 27,
        "fullcodeline": "ret = ops->read_std(ctxt, new_tss_base, &tss_seg, sizeof tss_seg,"
    },
    {
        "line": 14,
        "fullcodeline": "if (ret != X86EMUL_CONTINUE)"
    },
    {
        "line": 23,
        "fullcodeline": "if (ret != X86EMUL_CONTINUE)"
    },
    {
        "line": 29,
        "fullcodeline": "if (ret != X86EMUL_CONTINUE)"
    },
    {
        "line": 33,
        "fullcodeline": "if (old_tss_sel != 0xffff) {"
    },
    {
        "line": 45,
        "fullcodeline": "return load_state_from_tss32(ctxt, &tss_seg);"
    },
    {
        "line": 22,
        "fullcodeline": "ldt_sel_offset - eip_offset, &ctxt->exception);"
    },
    {
        "line": 34,
        "fullcodeline": "tss_seg.prev_task_link = old_tss_sel;"
    },
    {
        "line": 36,
        "fullcodeline": "ret = ops->write_std(ctxt, new_tss_base,"
    },
    {
        "line": 40,
        "fullcodeline": "if (ret != X86EMUL_CONTINUE)"
    }
]