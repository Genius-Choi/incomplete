[
    {
        "line": 3,
        "fullcodeline": "const uint8_t* msg = (void*)(client->msg_buffer + client->buffer_index);"
    },
    {
        "line": 8,
        "fullcodeline": "size_t username_len = msg[0];"
    },
    {
        "line": 12,
        "fullcodeline": "size_t password_len = msg[1 + username_len];"
    },
    {
        "line": 17,
        "fullcodeline": "struct nvnc* server = client->server;"
    },
    {
        "line": 19,
        "fullcodeline": "char username[256];"
    },
    {
        "line": 20,
        "fullcodeline": "char password[256];"
    },
    {
        "line": 22,
        "fullcodeline": "memcpy(username, (const char*)(msg + 1), username_len);"
    },
    {
        "line": 23,
        "fullcodeline": "username[username_len] = '\\0';"
    },
    {
        "line": 24,
        "fullcodeline": "memcpy(password, (const char*)(msg + 2 + username_len), password_len);"
    },
    {
        "line": 25,
        "fullcodeline": "password[password_len] = '\\0';"
    },
    {
        "line": 5,
        "fullcodeline": "if (client->buffer_len - client->buffer_index < 2)"
    },
    {
        "line": 9,
        "fullcodeline": "if (client->buffer_len - client->buffer_index < 2 + username_len)"
    },
    {
        "line": 13,
        "fullcodeline": "if (client->buffer_len - client->buffer_index < 2 + username_len +"
    },
    {
        "line": 27,
        "fullcodeline": "if (server->auth_fn(username, password, server->auth_ud)) {"
    },
    {
        "line": 35,
        "fullcodeline": "return 2 + username_len + password_len;"
    },
    {
        "line": 28,
        "fullcodeline": "security_handshake_ok(client, username);"
    },
    {
        "line": 29,
        "fullcodeline": "client->state = VNC_CLIENT_STATE_WAITING_FOR_INIT;"
    },
    {
        "line": 31,
        "fullcodeline": "security_handshake_failed(client, username,"
    }
]