[
    {
        "line": 11,
        "fullcodeline": "char *mount_data = mount_data_global;"
    },
    {
        "line": 19,
        "fullcodeline": "rc = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "tcon = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "pSesInfo = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "srvTcp = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "full_path = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "tlink = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "xid = GetXid();"
    },
    {
        "line": 28,
        "fullcodeline": "volume_info = kzalloc(sizeof(struct smb_vol), GFP_KERNEL);"
    },
    {
        "line": 66,
        "fullcodeline": "cifs_sb->local_nls = volume_info->local_nls;"
    },
    {
        "line": 69,
        "fullcodeline": "srvTcp = cifs_get_tcp_session(volume_info);"
    },
    {
        "line": 76,
        "fullcodeline": "pSesInfo = cifs_get_smb_ses(srvTcp, volume_info);"
    },
    {
        "line": 83,
        "fullcodeline": "setup_cifs_sb(volume_info, cifs_sb);"
    },
    {
        "line": 90,
        "fullcodeline": "sb->s_time_gran = 100;"
    },
    {
        "line": 93,
        "fullcodeline": "tcon = cifs_get_tcon(pSesInfo, volume_info);"
    },
    {
        "line": 212,
        "fullcodeline": "tlink = kzalloc(sizeof *tlink, GFP_KERNEL);"
    },
    {
        "line": 218,
        "fullcodeline": "tlink->tl_uid = pSesInfo->linux_uid;"
    },
    {
        "line": 219,
        "fullcodeline": "tlink->tl_tcon = tcon;"
    },
    {
        "line": 220,
        "fullcodeline": "tlink->tl_time = jiffies;"
    },
    {
        "line": 221,
        "fullcodeline": "set_bit(TCON_LINK_MASTER, &tlink->tl_flags);"
    },
    {
        "line": 222,
        "fullcodeline": "set_bit(TCON_LINK_IN_TREE, &tlink->tl_flags);"
    },
    {
        "line": 224,
        "fullcodeline": "cifs_sb->master_tlink = tlink;"
    },
    {
        "line": 225,
        "fullcodeline": "spin_lock(&cifs_sb->tlink_tree_lock);"
    },
    {
        "line": 226,
        "fullcodeline": "tlink_rb_insert(&cifs_sb->tlink_tree, tlink);"
    },
    {
        "line": 227,
        "fullcodeline": "spin_unlock(&cifs_sb->tlink_tree_lock);"
    },
    {
        "line": 229,
        "fullcodeline": "queue_delayed_work(system_nrt_wq, &cifs_sb->prune_tlinks,"
    },
    {
        "line": 254,
        "fullcodeline": "cleanup_volume_info(&volume_info);"
    },
    {
        "line": 255,
        "fullcodeline": "FreeXid(xid);"
    },
    {
        "line": 29,
        "fullcodeline": "if (!volume_info) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (cifs_parse_mount_options(mount_data, devname, volume_info)) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (volume_info->iocharset == NULL) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (IS_ERR(srvTcp)) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (IS_ERR(pSesInfo)) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (pSesInfo->capabilities & CAP_LARGE_FILES)"
    },
    {
        "line": 94,
        "fullcodeline": "if (IS_ERR(tcon)) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (!tcon->ipc) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (tcon->ses->capabilities & CAP_UNIX)"
    },
    {
        "line": 115,
        "fullcodeline": "if ((cifs_sb->mnt_cifs_flags & CIFS_MOUNT_POSIX_PATHS) == 0)"
    },
    {
        "line": 118,
        "fullcodeline": "if ((tcon->unix_ext == 0) && (cifs_sb->rsize > (1024 * 127))) {"
    },
    {
        "line": 122,
        "fullcodeline": "if (!(tcon->ses->capabilities & CAP_LARGE_WRITE_X))"
    },
    {
        "line": 125,
        "fullcodeline": "if (!(tcon->ses->capabilities & CAP_LARGE_READ_X))"
    },
    {
        "line": 131,
        "fullcodeline": "if (!rc && tcon) {"
    },
    {
        "line": 147,
        "fullcodeline": "if (rc == -EREMOTE) {"
    },
    {
        "line": 213,
        "fullcodeline": "if (tlink == NULL) {"
    },
    {
        "line": 30,
        "fullcodeline": "rc = -ENOMEM;"
    },
    {
        "line": 35,
        "fullcodeline": "rc = -EINVAL;"
    },
    {
        "line": 40,
        "fullcodeline": "cFYI(1, \"null user\");"
    },
    {
        "line": 41,
        "fullcodeline": "volume_info->username = \"\";"
    },
    {
        "line": 56,
        "fullcodeline": "volume_info->local_nls = load_nls_default();"
    },
    {
        "line": 71,
        "fullcodeline": "rc = PTR_ERR(srvTcp);"
    },
    {
        "line": 78,
        "fullcodeline": "rc = PTR_ERR(pSesInfo);"
    },
    {
        "line": 79,
        "fullcodeline": "pSesInfo = NULL;"
    },
    {
        "line": 85,
        "fullcodeline": "sb->s_maxbytes = MAX_LFS_FILESIZE;"
    },
    {
        "line": 95,
        "fullcodeline": "rc = PTR_ERR(tcon);"
    },
    {
        "line": 96,
        "fullcodeline": "tcon = NULL;"
    },
    {
        "line": 102,
        "fullcodeline": "CIFSSMBQFSDeviceInfo(xid, tcon);"
    },
    {
        "line": 103,
        "fullcodeline": "CIFSSMBQFSAttributeInfo(xid, tcon);"
    },
    {
        "line": 110,
        "fullcodeline": "reset_cifs_unix_caps(xid, tcon, sb, volume_info);"
    },
    {
        "line": 116,
        "fullcodeline": "convert_delimiter(cifs_sb->prepath, CIFS_DIR_SEP(cifs_sb));"
    },
    {
        "line": 119,
        "fullcodeline": "cifs_sb->rsize = 1024 * 127;"
    },
    {
        "line": 120,
        "fullcodeline": "cFYI(DBG2, \"no very large read support, rsize now 127K\");"
    },
    {
        "line": 123,
        "fullcodeline": "cifs_sb->wsize = min(cifs_sb->wsize,"
    },
    {
        "line": 126,
        "fullcodeline": "cifs_sb->rsize = min(cifs_sb->rsize,"
    },
    {
        "line": 133,
        "fullcodeline": "full_path = cifs_build_path_to_root(cifs_sb, tcon);"
    },
    {
        "line": 138,
        "fullcodeline": "rc = is_path_accessible(xid, tcon, cifs_sb, full_path);"
    },
    {
        "line": 143,
        "fullcodeline": "kfree(full_path);"
    },
    {
        "line": 204,
        "fullcodeline": "rc = -EOPNOTSUPP;"
    },
    {
        "line": 214,
        "fullcodeline": "rc = -ENOMEM;"
    },
    {
        "line": 58,
        "fullcodeline": "volume_info->local_nls = load_nls(volume_info->iocharset);"
    },
    {
        "line": 87,
        "fullcodeline": "sb->s_maxbytes = MAX_NON_LFS;"
    },
    {
        "line": 112,
        "fullcodeline": "tcon->unix_ext = 0; /* server does not support them */"
    },
    {
        "line": 134,
        "fullcodeline": "if (full_path == NULL) {"
    },
    {
        "line": 139,
        "fullcodeline": "if (rc != 0 && rc != -EREMOTE) {"
    },
    {
        "line": 235,
        "fullcodeline": "if (mount_data != mount_data_global)"
    },
    {
        "line": 59,
        "fullcodeline": "if (volume_info->local_nls == NULL) {"
    },
    {
        "line": 124,
        "fullcodeline": "(tcon->ses->server->maxBuf - MAX_CIFS_HDR_SIZE));"
    },
    {
        "line": 127,
        "fullcodeline": "(tcon->ses->server->maxBuf - MAX_CIFS_HDR_SIZE));"
    },
    {
        "line": 135,
        "fullcodeline": "rc = -ENOMEM;"
    },
    {
        "line": 140,
        "fullcodeline": "kfree(full_path);"
    },
    {
        "line": 236,
        "fullcodeline": "kfree(mount_data);"
    },
    {
        "line": 240,
        "fullcodeline": "cifs_put_tcon(tcon);"
    },
    {
        "line": 44,
        "fullcodeline": "cFYI(1, \"Username: %s\", volume_info->username);"
    },
    {
        "line": 60,
        "fullcodeline": "cERROR(1, \"CIFS mount error: iocharset %s not found\","
    },
    {
        "line": 62,
        "fullcodeline": "rc = -ELIBACC;"
    },
    {
        "line": 46,
        "fullcodeline": "cifserror(\"No username specified\");"
    },
    {
        "line": 49,
        "fullcodeline": "rc = -EINVAL;"
    },
    {
        "line": 242,
        "fullcodeline": "cifs_put_smb_ses(pSesInfo);"
    },
    {
        "line": 244,
        "fullcodeline": "cifs_put_tcp_session(srvTcp);"
    }
]