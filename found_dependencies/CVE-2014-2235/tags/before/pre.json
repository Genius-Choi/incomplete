[
    {
        "line": 4,
        "fullcodeline": "sortby = request.GET.get('sort', 'used')"
    },
    {
        "line": 15,
        "fullcodeline": "query = request.GET.get('query', '').strip()"
    },
    {
        "line": 16,
        "fullcodeline": "tag_list_type = askbot_settings.TAG_LIST_FORMAT"
    },
    {
        "line": 19,
        "fullcodeline": "query_params = {'deleted': False}"
    },
    {
        "line": 23,
        "fullcodeline": "tags_qs = Tag.objects.filter(**query_params).exclude(used_count=0)"
    },
    {
        "line": 25,
        "fullcodeline": "tags_qs = tags_qs.order_by(order_by)"
    },
    {
        "line": 28,
        "fullcodeline": "data = {"
    },
    {
        "line": 64,
        "fullcodeline": "data['tags'] = tags"
    },
    {
        "line": 10,
        "fullcodeline": "if sortby == 'name':"
    },
    {
        "line": 20,
        "fullcodeline": "if query != '':"
    },
    {
        "line": 38,
        "fullcodeline": "if tag_list_type == 'list':"
    },
    {
        "line": 66,
        "fullcodeline": "return render(request, 'tags.html', data)"
    },
    {
        "line": 6,
        "fullcodeline": "page = int(request.GET.get('page', '1'))"
    },
    {
        "line": 11,
        "fullcodeline": "order_by = 'name'"
    },
    {
        "line": 13,
        "fullcodeline": "order_by = '-used_count'"
    },
    {
        "line": 21,
        "fullcodeline": "query_params['name__icontains': query]"
    },
    {
        "line": 40,
        "fullcodeline": "objects_list = Paginator(tags_qs, DEFAULT_PAGE_SIZE)"
    },
    {
        "line": 46,
        "fullcodeline": "paginator_data = {"
    },
    {
        "line": 56,
        "fullcodeline": "paginator_context = functions.setup_paginator(paginator_data)"
    },
    {
        "line": 57,
        "fullcodeline": "data['paginator_context'] = paginator_context"
    },
    {
        "line": 60,
        "fullcodeline": "tags = tags_qs"
    },
    {
        "line": 61,
        "fullcodeline": "font_size = extra_tags.get_tag_font_size(tags)"
    },
    {
        "line": 62,
        "fullcodeline": "data['font_size'] = font_size"
    },
    {
        "line": 35,
        "fullcodeline": "'search_state': SearchState(*[None for x in range(7)])"
    },
    {
        "line": 8,
        "fullcodeline": "page = 1"
    },
    {
        "line": 42,
        "fullcodeline": "tags = objects_list.page(page)"
    },
    {
        "line": 47,
        "fullcodeline": "'is_paginated' : (objects_list.num_pages > 1),"
    },
    {
        "line": 50,
        "fullcodeline": "'has_previous': tags.has_previous(),"
    },
    {
        "line": 51,
        "fullcodeline": "'has_next': tags.has_next(),"
    },
    {
        "line": 52,
        "fullcodeline": "'previous': tags.previous_page_number(),"
    },
    {
        "line": 53,
        "fullcodeline": "'next': tags.next_page_number(),"
    },
    {
        "line": 54,
        "fullcodeline": "'base_url' : reverse('tags') + '?sort=%s&amp;' % sortby"
    },
    {
        "line": 44,
        "fullcodeline": "tags = objects_list.page(objects_list.num_pages)"
    }
]