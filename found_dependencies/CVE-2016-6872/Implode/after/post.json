[
    {
        "line": 6,
        "fullcodeline": "int size = getContainerSize(items);"
    },
    {
        "line": 9,
        "fullcodeline": "req::vector<String> sitems;"
    },
    {
        "line": 10,
        "fullcodeline": "sitems.reserve(size);"
    },
    {
        "line": 11,
        "fullcodeline": "size_t len = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "size_t lenDelim = delim.size();"
    },
    {
        "line": 17,
        "fullcodeline": "len -= lenDelim; // always one delimiter less than count of items"
    },
    {
        "line": 18,
        "fullcodeline": "assert(sitems.size() == size);"
    },
    {
        "line": 20,
        "fullcodeline": "String s = String(len, ReserveString);"
    },
    {
        "line": 21,
        "fullcodeline": "char *buffer = s.mutableData();"
    },
    {
        "line": 22,
        "fullcodeline": "const char *sdelim = delim.data();"
    },
    {
        "line": 23,
        "fullcodeline": "char *p = buffer;"
    },
    {
        "line": 24,
        "fullcodeline": "String &init_str = sitems[0];"
    },
    {
        "line": 25,
        "fullcodeline": "int init_len = init_str.size();"
    },
    {
        "line": 26,
        "fullcodeline": "memcpy(p, init_str.data(), init_len);"
    },
    {
        "line": 27,
        "fullcodeline": "p += init_len;"
    },
    {
        "line": 36,
        "fullcodeline": "assert(p - buffer == len);"
    },
    {
        "line": 37,
        "fullcodeline": "s.setSize(len);"
    },
    {
        "line": 3,
        "fullcodeline": "if (checkIsContainer && !isContainer(items)) {"
    },
    {
        "line": 7,
        "fullcodeline": "if (size == 0) return empty_string();"
    },
    {
        "line": 13,
        "fullcodeline": "for (ArrayIter iter(items); iter; ++iter) {"
    },
    {
        "line": 28,
        "fullcodeline": "for (int i = 1; i < size; i++) {"
    },
    {
        "line": 4,
        "fullcodeline": "throw_param_is_not_container();"
    },
    {
        "line": 14,
        "fullcodeline": "sitems.emplace_back(iter.second().toString());"
    },
    {
        "line": 15,
        "fullcodeline": "len += sitems.back().size() + lenDelim;"
    },
    {
        "line": 29,
        "fullcodeline": "String &item = sitems[i];"
    },
    {
        "line": 30,
        "fullcodeline": "memcpy(p, sdelim, lenDelim);"
    },
    {
        "line": 31,
        "fullcodeline": "p += lenDelim;"
    },
    {
        "line": 32,
        "fullcodeline": "int lenItem = item.size();"
    },
    {
        "line": 33,
        "fullcodeline": "memcpy(p, item.data(), lenItem);"
    },
    {
        "line": 34,
        "fullcodeline": "p += lenItem;"
    }
]