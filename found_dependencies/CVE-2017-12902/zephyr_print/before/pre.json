[
    {
        "line": 4,
        "fullcodeline": "const char *parse = (const char *) cp;"
    },
    {
        "line": 5,
        "fullcodeline": "int parselen = length;"
    },
    {
        "line": 7,
        "fullcodeline": "int lose = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "z.kind = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "z.class = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "z.inst = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "z.opcode = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "z.sender = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "z.recipient = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "PARSE_FIELD_STR(z.version);"
    },
    {
        "line": 32,
        "fullcodeline": "if (strncmp(z.version, \"ZEPH\", 4))"
    },
    {
        "line": 35,
        "fullcodeline": "PARSE_FIELD_INT(z.numfields);"
    },
    {
        "line": 36,
        "fullcodeline": "PARSE_FIELD_INT(z.kind);"
    },
    {
        "line": 37,
        "fullcodeline": "PARSE_FIELD_STR(z.uid);"
    },
    {
        "line": 38,
        "fullcodeline": "PARSE_FIELD_INT(z.port);"
    },
    {
        "line": 39,
        "fullcodeline": "PARSE_FIELD_INT(z.auth);"
    },
    {
        "line": 40,
        "fullcodeline": "PARSE_FIELD_INT(z.authlen);"
    },
    {
        "line": 41,
        "fullcodeline": "PARSE_FIELD_STR(z.authdata);"
    },
    {
        "line": 42,
        "fullcodeline": "PARSE_FIELD_STR(z.class);"
    },
    {
        "line": 43,
        "fullcodeline": "PARSE_FIELD_STR(z.inst);"
    },
    {
        "line": 44,
        "fullcodeline": "PARSE_FIELD_STR(z.opcode);"
    },
    {
        "line": 45,
        "fullcodeline": "PARSE_FIELD_STR(z.sender);"
    },
    {
        "line": 46,
        "fullcodeline": "PARSE_FIELD_STR(z.recipient);"
    },
    {
        "line": 47,
        "fullcodeline": "PARSE_FIELD_STR(z.format);"
    },
    {
        "line": 48,
        "fullcodeline": "PARSE_FIELD_INT(z.cksum);"
    },
    {
        "line": 49,
        "fullcodeline": "PARSE_FIELD_INT(z.multi);"
    },
    {
        "line": 50,
        "fullcodeline": "PARSE_FIELD_STR(z.multi_uid);"
    },
    {
        "line": 57,
        "fullcodeline": "ND_PRINT((ndo, \" zephyr\"));"
    },
    {
        "line": 63,
        "fullcodeline": "ND_PRINT((ndo, \" %s\", tok2str(z_types, \"type %d\", z.kind)));"
    },
    {
        "line": 64,
        "fullcodeline": "if (z.kind == Z_PACKET_SERVACK) {"
    },
    {
        "line": 181,
        "fullcodeline": "if (!*z.recipient)"
    },
    {
        "line": 184,
        "fullcodeline": "ND_PRINT((ndo, \" to %s\", z_triple(z.class, z.inst, z.recipient)));"
    },
    {
        "line": 66,
        "fullcodeline": "const char *ackdata = NULL;"
    },
    {
        "line": 73,
        "fullcodeline": "if (!strcmp(z.class, \"USER_LOCATE\")) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (!strcmp(z.class, \"ZEPHYR_ADMIN\")) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (!strcmp(z.class, \"ZEPHYR_CTL\")) {"
    },
    {
        "line": 145,
        "fullcodeline": "if (!strcmp(z.class, \"HM_CTL\")) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (!strcmp(z.class, \"HM_STAT\")) {"
    },
    {
        "line": 158,
        "fullcodeline": "if (!strcmp(z.class, \"WG_CTL\")) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (!strcmp(z.class, \"LOGIN\")) {"
    },
    {
        "line": 182,
        "fullcodeline": "z.recipient = \"*\";"
    },
    {
        "line": 53,
        "fullcodeline": "ND_PRINT((ndo, \" [|zephyr] (%d)\", length));"
    },
    {
        "line": 59,
        "fullcodeline": "ND_PRINT((ndo, \" v%s\", z.version+4));"
    },
    {
        "line": 67,
        "fullcodeline": "PARSE_FIELD_STR(ackdata);"
    },
    {
        "line": 71,
        "fullcodeline": "if (*z.sender) ND_PRINT((ndo, \" %s\", z.sender));"
    },
    {
        "line": 84,
        "fullcodeline": "ND_PRINT((ndo, \" zephyr-admin %s\", str_to_lower(z.opcode)));"
    },
    {
        "line": 146,
        "fullcodeline": "ND_PRINT((ndo, \" hm_ctl %s\", str_to_lower(z.inst)));"
    },
    {
        "line": 147,
        "fullcodeline": "ND_PRINT((ndo, \" %s\", str_to_lower(z.opcode)));"
    },
    {
        "line": 159,
        "fullcodeline": "ND_PRINT((ndo, \" wg_ctl %s\", str_to_lower(z.inst)));"
    },
    {
        "line": 160,
        "fullcodeline": "ND_PRINT((ndo, \" %s\", str_to_lower(z.opcode)));"
    },
    {
        "line": 186,
        "fullcodeline": "ND_PRINT((ndo, \" op %s\", z.opcode));"
    },
    {
        "line": 68,
        "fullcodeline": "if (!lose && strcmp(ackdata, \"SENT\"))"
    },
    {
        "line": 74,
        "fullcodeline": "if (!strcmp(z.opcode, \"USER_HIDE\"))"
    },
    {
        "line": 89,
        "fullcodeline": "if (!strcmp(z.inst, \"CLIENT\")) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (!strcmp(z.inst, \"HM\")) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (!strcmp(z.inst, \"REALM\")) {"
    },
    {
        "line": 152,
        "fullcodeline": "if (!strcmp(z.inst, \"HMST_CLIENT\") && !strcmp(z.opcode, \"GIMMESTATS\")) {"
    },
    {
        "line": 165,
        "fullcodeline": "if (!strcmp(z.opcode, \"USER_FLUSH\")) {"
    },
    {
        "line": 170,
        "fullcodeline": "if (!strcmp(z.opcode, \"NONE\") ||"
    },
    {
        "line": 175,
        "fullcodeline": "!strcmp(z.opcode, \"NET-ANNOUNCED\")) {"
    },
    {
        "line": 69,
        "fullcodeline": "ND_PRINT((ndo, \"/%s\", str_to_lower(ackdata)));"
    },
    {
        "line": 75,
        "fullcodeline": "ND_PRINT((ndo, \" hide\"));"
    },
    {
        "line": 123,
        "fullcodeline": "ND_PRINT((ndo, \" %s\", str_to_lower(z.opcode)));"
    },
    {
        "line": 128,
        "fullcodeline": "ND_PRINT((ndo, \" %s\", str_to_lower(z.opcode)));"
    },
    {
        "line": 153,
        "fullcodeline": "ND_PRINT((ndo, \" get-client-stats\"));"
    },
    {
        "line": 166,
        "fullcodeline": "ND_PRINT((ndo, \" flush_locs\"));"
    },
    {
        "line": 174,
        "fullcodeline": "!strcmp(z.opcode, \"NET-VISIBLE\") ||"
    },
    {
        "line": 176,
        "fullcodeline": "ND_PRINT((ndo, \" set-exposure %s\", str_to_lower(z.opcode)));"
    },
    {
        "line": 90,
        "fullcodeline": "if (!strcmp(z.opcode, \"SUBSCRIBE\") ||"
    },
    {
        "line": 92,
        "fullcodeline": "!strcmp(z.opcode, \"UNSUBSCRIBE\")) {"
    },
    {
        "line": 108,
        "fullcodeline": "if (!strcmp(z.opcode, \"GIMME\")) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (!strcmp(z.opcode, \"GIMMEDEFS\")) {"
    },
    {
        "line": 118,
        "fullcodeline": "if (!strcmp(z.opcode, \"CLEARSUB\")) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (!strcmp(z.opcode, \"ADD_SUBSCRIBE\"))"
    },
    {
        "line": 135,
        "fullcodeline": "if (!strcmp(z.opcode, \"REQ_SUBSCRIBE\"))"
    },
    {
        "line": 137,
        "fullcodeline": "if (!strcmp(z.opcode, \"RLM_SUBSCRIBE\"))"
    },
    {
        "line": 139,
        "fullcodeline": "if (!strcmp(z.opcode, \"RLM_UNSUBSCRIBE\"))"
    },
    {
        "line": 173,
        "fullcodeline": "!strcmp(z.opcode, \"REALM-ANNOUNCED\") ||"
    },
    {
        "line": 76,
        "fullcodeline": "else if (!strcmp(z.opcode, \"USER_UNHIDE\"))"
    },
    {
        "line": 91,
        "fullcodeline": "!strcmp(z.opcode, \"SUBSCRIBE_NODEFS\") ||"
    },
    {
        "line": 94,
        "fullcodeline": "ND_PRINT((ndo, \" %ssub%s\", strcmp(z.opcode, \"SUBSCRIBE\") ? \"un\" : \"\","
    },
    {
        "line": 109,
        "fullcodeline": "ND_PRINT((ndo, \" ret\"));"
    },
    {
        "line": 114,
        "fullcodeline": "ND_PRINT((ndo, \" gimme-defs\"));"
    },
    {
        "line": 119,
        "fullcodeline": "ND_PRINT((ndo, \" clear-subs\"));"
    },
    {
        "line": 134,
        "fullcodeline": "ND_PRINT((ndo, \" realm add-subs\"));"
    },
    {
        "line": 136,
        "fullcodeline": "ND_PRINT((ndo, \" realm req-subs\"));"
    },
    {
        "line": 138,
        "fullcodeline": "ND_PRINT((ndo, \" realm rlm-sub\"));"
    },
    {
        "line": 140,
        "fullcodeline": "ND_PRINT((ndo, \" realm rlm-unsub\"));"
    },
    {
        "line": 172,
        "fullcodeline": "!strcmp(z.opcode, \"REALM-VISIBLE\") ||"
    },
    {
        "line": 77,
        "fullcodeline": "ND_PRINT((ndo, \" unhide\"));"
    },
    {
        "line": 99,
        "fullcodeline": "const char *c = NULL, *i = NULL, *r = NULL;"
    },
    {
        "line": 171,
        "fullcodeline": "!strcmp(z.opcode, \"OPSTAFF\") ||"
    },
    {
        "line": 79,
        "fullcodeline": "ND_PRINT((ndo, \" locate %s\", z.inst));"
    },
    {
        "line": 100,
        "fullcodeline": "PARSE_FIELD_STR(c);"
    },
    {
        "line": 101,
        "fullcodeline": "PARSE_FIELD_STR(i);"
    },
    {
        "line": 102,
        "fullcodeline": "PARSE_FIELD_STR(r);"
    },
    {
        "line": 103,
        "fullcodeline": "if (!lose) ND_PRINT((ndo, \" %s\", z_triple(c, i, r)));"
    }
]