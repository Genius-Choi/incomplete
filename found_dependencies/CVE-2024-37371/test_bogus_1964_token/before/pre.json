[
    {
        "line": 4,
        "fullcodeline": "unsigned char tokbuf[128];"
    },
    {
        "line": 8,
        "fullcodeline": "store_16_be(KG_TOK_SIGN_MSG, tokbuf);"
    },
    {
        "line": 9,
        "fullcodeline": "store_16_le(SGN_ALG_HMAC_MD5, tokbuf + 2);"
    },
    {
        "line": 10,
        "fullcodeline": "store_16_le(SEAL_ALG_NONE, tokbuf + 4);"
    },
    {
        "line": 11,
        "fullcodeline": "store_16_le(0xFFFF, tokbuf + 6);"
    },
    {
        "line": 12,
        "fullcodeline": "memset(tokbuf + 8, 0, 16);"
    },
    {
        "line": 13,
        "fullcodeline": "make_token(tokbuf, 24, &in);"
    },
    {
        "line": 15,
        "fullcodeline": "major = gss_unwrap(&minor, ctx, &in, &out, NULL, NULL);"
    },
    {
        "line": 18,
        "fullcodeline": "(void)gss_release_buffer(&minor, &out);"
    },
    {
        "line": 20,
        "fullcodeline": "iov.type = GSS_IOV_BUFFER_TYPE_HEADER;"
    },
    {
        "line": 21,
        "fullcodeline": "iov.buffer = in;"
    },
    {
        "line": 22,
        "fullcodeline": "major = gss_unwrap_iov(&minor, ctx, NULL, NULL, &iov, 1);"
    },
    {
        "line": 26,
        "fullcodeline": "free(in.value);"
    },
    {
        "line": 16,
        "fullcodeline": "if (major != GSS_S_DEFECTIVE_TOKEN)"
    },
    {
        "line": 23,
        "fullcodeline": "if (major != GSS_S_DEFECTIVE_TOKEN)"
    }
]