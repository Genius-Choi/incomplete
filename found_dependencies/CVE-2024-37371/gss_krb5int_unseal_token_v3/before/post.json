[
    {
        "line": 9,
        "fullcodeline": "krb5_data plain = empty_data();"
    },
    {
        "line": 23,
        "fullcodeline": "acceptor_flag = ctx->initiate ? FLAG_SENDER_IS_ACCEPTOR : 0;"
    },
    {
        "line": 24,
        "fullcodeline": "key_usage = (toktype == KG_TOK_WRAP_MSG"
    },
    {
        "line": 34,
        "fullcodeline": "ptr -= 2;"
    },
    {
        "line": 35,
        "fullcodeline": "bodysize += 2;"
    },
    {
        "line": 69,
        "fullcodeline": "assert(key != NULL);"
    },
    {
        "line": 37,
        "fullcodeline": "if (bodysize < 16) {"
    },
    {
        "line": 42,
        "fullcodeline": "if ((ptr[2] & FLAG_SENDER_IS_ACCEPTOR) != acceptor_flag) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (ctx->have_acceptor_subkey && (ptr[2] & FLAG_ACCEPTOR_SUBKEY)) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (toktype == KG_TOK_WRAP_MSG) {"
    },
    {
        "line": 21,
        "fullcodeline": "*qop_state = GSS_C_QOP_DEFAULT;"
    },
    {
        "line": 25,
        "fullcodeline": "? (!ctx->initiate"
    },
    {
        "line": 28,
        "fullcodeline": ": (!ctx->initiate"
    },
    {
        "line": 39,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "*minor_status = (OM_uint32)G_BAD_DIRECTION;"
    },
    {
        "line": 63,
        "fullcodeline": "key = ctx->acceptor_subkey;"
    },
    {
        "line": 64,
        "fullcodeline": "cksumtype = ctx->acceptor_subkey_cksumtype;"
    },
    {
        "line": 76,
        "fullcodeline": "ec = load_16_be(ptr+4);"
    },
    {
        "line": 77,
        "fullcodeline": "rrc = load_16_be(ptr+6);"
    },
    {
        "line": 78,
        "fullcodeline": "seqnum = load_64_be(ptr+8);"
    },
    {
        "line": 169,
        "fullcodeline": "err = g_seqstate_check(ctx->seqstate, seqnum);"
    },
    {
        "line": 170,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "key = ctx->subkey;"
    },
    {
        "line": 67,
        "fullcodeline": "cksumtype = ctx->cksumtype;"
    },
    {
        "line": 72,
        "fullcodeline": "if (load_16_be(ptr) != KG2_TOK_WRAP_MSG)"
    },
    {
        "line": 74,
        "fullcodeline": "if (ptr[3] != 0xff)"
    },
    {
        "line": 79,
        "fullcodeline": "if (!gss_krb5int_rotate_left(ptr+16, bodysize-16, rrc)) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (ptr[2] & FLAG_WRAP_CONFIDENTIAL) {"
    },
    {
        "line": 81,
        "fullcodeline": "*minor_status = ENOMEM;"
    },
    {
        "line": 96,
        "fullcodeline": "cipher.ciphertext.length = bodysize - 16;"
    },
    {
        "line": 97,
        "fullcodeline": "cipher.ciphertext.data = (char *)ptr + 16;"
    },
    {
        "line": 98,
        "fullcodeline": "plain.length = bodysize - 16;"
    },
    {
        "line": 99,
        "fullcodeline": "plain.data = gssalloc_malloc(plain.length);"
    },
    {
        "line": 102,
        "fullcodeline": "err = krb5_k_decrypt(context, key, key_usage, 0,"
    },
    {
        "line": 111,
        "fullcodeline": "althdr = (unsigned char *)plain.data + plain.length - 16;"
    },
    {
        "line": 119,
        "fullcodeline": "message_buffer->value = plain.data;"
    },
    {
        "line": 120,
        "fullcodeline": "message_buffer->length = plain.length - ec - 16;"
    },
    {
        "line": 172,
        "fullcodeline": "} else if (toktype == KG_TOK_MIC_MSG) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (plain.data == NULL)"
    },
    {
        "line": 112,
        "fullcodeline": "if (load_16_be(althdr) != KG2_TOK_WRAP_MSG"
    },
    {
        "line": 121,
        "fullcodeline": "if(message_buffer->length == 0) {"
    },
    {
        "line": 128,
        "fullcodeline": "err = krb5_c_checksum_length(context, cksumtype, &cksumsize);"
    },
    {
        "line": 143,
        "fullcodeline": "store_16_be(0, ptr+4);"
    },
    {
        "line": 144,
        "fullcodeline": "store_16_be(0, ptr+6);"
    },
    {
        "line": 145,
        "fullcodeline": "plain = make_data(ptr, bodysize - ec);"
    },
    {
        "line": 148,
        "fullcodeline": "sum.length = ec;"
    },
    {
        "line": 153,
        "fullcodeline": "sum.contents = ptr+bodysize-ec;"
    },
    {
        "line": 154,
        "fullcodeline": "sum.checksum_type = cksumtype;"
    },
    {
        "line": 155,
        "fullcodeline": "err = krb5_k_verify_checksum(context, key, key_usage,"
    },
    {
        "line": 163,
        "fullcodeline": "message_buffer->length = plain.length - 16;"
    },
    {
        "line": 164,
        "fullcodeline": "message_buffer->value = gssalloc_malloc(message_buffer->length);"
    },
    {
        "line": 167,
        "fullcodeline": "memcpy(message_buffer->value, plain.data, message_buffer->length);"
    },
    {
        "line": 181,
        "fullcodeline": "seqnum = load_64_be(ptr+8);"
    },
    {
        "line": 182,
        "fullcodeline": "plain.length = message_buffer->length + 16;"
    },
    {
        "line": 183,
        "fullcodeline": "plain.data = malloc(plain.length);"
    },
    {
        "line": 188,
        "fullcodeline": "memcpy(plain.data + message_buffer->length, ptr, 16);"
    },
    {
        "line": 189,
        "fullcodeline": "sum.length = bodysize - 16;"
    },
    {
        "line": 190,
        "fullcodeline": "sum.contents = ptr + 16;"
    },
    {
        "line": 191,
        "fullcodeline": "sum.checksum_type = cksumtype;"
    },
    {
        "line": 192,
        "fullcodeline": "err = krb5_k_verify_checksum(context, key, key_usage,"
    },
    {
        "line": 194,
        "fullcodeline": "free(plain.data);"
    },
    {
        "line": 195,
        "fullcodeline": "plain.data = NULL;"
    },
    {
        "line": 206,
        "fullcodeline": "err = g_seqstate_check(ctx->seqstate, seqnum);"
    },
    {
        "line": 207,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 90,
        "fullcodeline": "*conf_state = 1;"
    },
    {
        "line": 105,
        "fullcodeline": "gssalloc_free(plain.data);"
    },
    {
        "line": 115,
        "fullcodeline": "|| memcmp(althdr+8, ptr+8, 8)) {"
    },
    {
        "line": 116,
        "fullcodeline": "free(plain.data);"
    },
    {
        "line": 122,
        "fullcodeline": "gssalloc_free(message_buffer->value);"
    },
    {
        "line": 123,
        "fullcodeline": "message_buffer->value = NULL;"
    },
    {
        "line": 135,
        "fullcodeline": "if (ec + 16 < ec)"
    },
    {
        "line": 138,
        "fullcodeline": "if (ec + 16 > bodysize)"
    },
    {
        "line": 146,
        "fullcodeline": "if (!gss_krb5int_rotate_left(ptr, bodysize-ec, 16))"
    },
    {
        "line": 149,
        "fullcodeline": "if (sum.length != cksumsize) {"
    },
    {
        "line": 159,
        "fullcodeline": "if (!valid) {"
    },
    {
        "line": 165,
        "fullcodeline": "if (message_buffer->value == NULL)"
    },
    {
        "line": 174,
        "fullcodeline": "if (load_16_be(ptr) != KG2_TOK_MIC_MSG)"
    },
    {
        "line": 177,
        "fullcodeline": "if (ptr[3] != 0xff)"
    },
    {
        "line": 179,
        "fullcodeline": "if (load_32_be(ptr+4) != 0xffffffffL)"
    },
    {
        "line": 184,
        "fullcodeline": "if (plain.data == NULL)"
    },
    {
        "line": 202,
        "fullcodeline": "if (!valid) {"
    },
    {
        "line": 114,
        "fullcodeline": "|| althdr[3] != ptr[3]"
    },
    {
        "line": 134,
        "fullcodeline": "*conf_state = 0;"
    },
    {
        "line": 150,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 160,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 187,
        "fullcodeline": "memcpy(plain.data, message_buffer->value, message_buffer->length);"
    },
    {
        "line": 198,
        "fullcodeline": "*minor_status = err;"
    },
    {
        "line": 199,
        "fullcodeline": "save_error_info(*minor_status, context);"
    },
    {
        "line": 203,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 209,
        "fullcodeline": "} else if (toktype == KG_TOK_DEL_CTX) {"
    },
    {
        "line": 113,
        "fullcodeline": "|| althdr[2] != ptr[2]"
    },
    {
        "line": 212,
        "fullcodeline": "message_buffer = (gss_buffer_t)&empty_message;"
    },
    {
        "line": 210,
        "fullcodeline": "if (load_16_be(ptr) != KG2_TOK_DEL_CTX)"
    }
]