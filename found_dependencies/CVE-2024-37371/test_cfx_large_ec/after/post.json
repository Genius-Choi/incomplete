[
    {
        "line": 4,
        "fullcodeline": "uint8_t tokbuf[128] = { 0 }, plainbuf[20];"
    },
    {
        "line": 10,
        "fullcodeline": "write_cfx_header(5, tokbuf);"
    },
    {
        "line": 13,
        "fullcodeline": "memcpy(plainbuf, \"abcd\", 4);"
    },
    {
        "line": 14,
        "fullcodeline": "memcpy(plainbuf + 4, tokbuf, 16);"
    },
    {
        "line": 15,
        "fullcodeline": "plain = make_data(plainbuf, 20);"
    },
    {
        "line": 16,
        "fullcodeline": "cipher.ciphertext.data = (char *)tokbuf + 16;"
    },
    {
        "line": 17,
        "fullcodeline": "cipher.ciphertext.length = sizeof(tokbuf) - 16;"
    },
    {
        "line": 24,
        "fullcodeline": "in.value = tokbuf;"
    },
    {
        "line": 25,
        "fullcodeline": "in.length = 16 + cipher.ciphertext.length;"
    },
    {
        "line": 26,
        "fullcodeline": "major = gss_unwrap(&minor, ctx, &in, &out, NULL, NULL);"
    },
    {
        "line": 29,
        "fullcodeline": "(void)gss_release_buffer(&minor, &out);"
    },
    {
        "line": 19,
        "fullcodeline": "if (krb5_k_encrypt(NULL, subkey, KG_USAGE_INITIATOR_SEAL, NULL,"
    },
    {
        "line": 27,
        "fullcodeline": "if (major != GSS_S_DEFECTIVE_TOKEN)"
    },
    {
        "line": 21,
        "fullcodeline": "abort();"
    },
    {
        "line": 28,
        "fullcodeline": "abort();"
    }
]