[
    {
        "line": 11,
        "fullcodeline": "**value = '\\0';"
    },
    {
        "line": 13,
        "fullcodeline": "*value = skip_over_blank(*value + 1);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!name || !value || !cp)"
    },
    {
        "line": 12,
        "fullcodeline": "*name = strip_line(*cp);"
    },
    {
        "line": 15,
        "fullcodeline": "if (**value == '\"') {"
    },
    {
        "line": 8,
        "fullcodeline": "if (!(*value = strchr(*cp, '=')))"
    },
    {
        "line": 16,
        "fullcodeline": "char *p = end = *value + 1;"
    },
    {
        "line": 38,
        "fullcodeline": "*end = '\\0';"
    },
    {
        "line": 39,
        "fullcodeline": "end = ++p;"
    },
    {
        "line": 6,
        "fullcodeline": "return -BLKID_ERR_PARAM;"
    },
    {
        "line": 41,
        "fullcodeline": "end = skip_over_word(*value);"
    },
    {
        "line": 28,
        "fullcodeline": "p++;"
    },
    {
        "line": 33,
        "fullcodeline": "DBG(READ, ul_debug(\"unbalanced quotes at: %s\", *value));"
    },
    {
        "line": 20,
        "fullcodeline": "if (*p == '\\\\') {"
    },
    {
        "line": 35,
        "fullcodeline": "return -BLKID_ERR_CACHE;"
    },
    {
        "line": 43,
        "fullcodeline": "*end = '\\0';"
    },
    {
        "line": 44,
        "fullcodeline": "end++;"
    },
    {
        "line": 21,
        "fullcodeline": "p++;"
    },
    {
        "line": 22,
        "fullcodeline": "*end = *p;"
    },
    {
        "line": 24,
        "fullcodeline": "*end = *p;"
    },
    {
        "line": 25,
        "fullcodeline": "if (*p == '\"')"
    }
]