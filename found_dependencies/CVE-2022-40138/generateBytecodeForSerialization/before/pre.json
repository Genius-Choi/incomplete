[
    {
        "line": 10,
        "fullcodeline": "if (cl::BytecodeFormat == cl::BytecodeFormatKind::HBC) {"
    },
    {
        "line": 11,
        "fullcodeline": "std::unique_ptr<hbc::BCProviderFromBuffer> baseBCProvider = nullptr;"
    },
    {
        "line": 12,
        "fullcodeline": "auto itr = baseBytecodeMap.find(segment ? *segment : 0);"
    },
    {
        "line": 19,
        "fullcodeline": "auto bytecodeModule = hbc::generateBytecode("
    },
    {
        "line": 13,
        "fullcodeline": "if (itr != baseBytecodeMap.end()) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (cl::DumpTarget == DumpBytecode) {"
    },
    {
        "line": 33,
        "fullcodeline": "llvm_unreachable(\"Invalid bytecode kind\");"
    },
    {
        "line": 14,
        "fullcodeline": "baseBCProvider = std::move(itr->second);"
    },
    {
        "line": 17,
        "fullcodeline": "baseBytecodeMap.erase(itr);"
    },
    {
        "line": 26,
        "fullcodeline": "std::move(baseBCProvider));"
    },
    {
        "line": 29,
        "fullcodeline": "disassembleBytecode(hbc::BCProviderFromSrc::createBCProviderFromSrc("
    },
    {
        "line": 30,
        "fullcodeline": "std::move(bytecodeModule)));"
    }
]