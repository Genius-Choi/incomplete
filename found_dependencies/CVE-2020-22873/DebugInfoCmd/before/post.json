[
    {
        "line": 8,
        "fullcodeline": "int argc = Jsi_ValueGetLength(interp, args);"
    },
    {
        "line": 11,
        "fullcodeline": "Jsi_Value *val = Jsi_ValueArrayIndex(interp, args, 0);"
    },
    {
        "line": 13,
        "fullcodeline": "char nbuf[100];"
    },
    {
        "line": 17,
        "fullcodeline": "snprintf(nbuf, sizeof(nbuf), \"%d\", num);"
    },
    {
        "line": 18,
        "fullcodeline": "Jsi_HashEntry *hPtr = Jsi_HashEntryFind(interp->breakpointHash, nbuf);"
    },
    {
        "line": 21,
        "fullcodeline": "jsi_BreakPoint* bp = (jsi_BreakPoint*)Jsi_HashValueGet(hPtr);"
    },
    {
        "line": 23,
        "fullcodeline": "Jsi_DString dStr = {};"
    },
    {
        "line": 30,
        "fullcodeline": "Jsi_RC rc = Jsi_JSONParse(interp, Jsi_DSValue(&dStr), ret, 0);"
    },
    {
        "line": 31,
        "fullcodeline": "Jsi_DSFree(&dStr);"
    },
    {
        "line": 4,
        "fullcodeline": "if (!interp->breakpointHash) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (argc == 0)"
    },
    {
        "line": 14,
        "fullcodeline": "if (Jsi_GetIntFromValue(interp, val, &num) != JSI_OK)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!hPtr)"
    },
    {
        "line": 22,
        "fullcodeline": "if (!bp) return JSI_ERROR;"
    },
    {
        "line": 5,
        "fullcodeline": "Jsi_ValueMakeArrayObject(interp, ret, NULL);"
    },
    {
        "line": 25,
        "fullcodeline": "Jsi_DSPrintf(&dStr, \"{id:%d, type:\\\"func\\\", func:\\\"%s\\\", hits:%d, enabled:%s, temporary:%s}\","
    },
    {
        "line": 10,
        "fullcodeline": "return Jsi_HashKeysDump(interp, interp->breakpointHash, ret, 0);"
    },
    {
        "line": 15,
        "fullcodeline": "return Jsi_LogError(\"bad number\");"
    },
    {
        "line": 20,
        "fullcodeline": "return Jsi_LogError(\"unknown breakpoint\");"
    },
    {
        "line": 26,
        "fullcodeline": "bp->id, bp->func, bp->hits, bp->enabled?\"true\":\"false\", bp->temp?\"true\":\"false\");"
    },
    {
        "line": 28,
        "fullcodeline": "Jsi_DSPrintf(&dStr, \"{id:%d, type:\\\"line\\\", file:\\\"%s\\\", line:%d, hits:%d, enabled:%s}\","
    },
    {
        "line": 29,
        "fullcodeline": "bp->id, bp->file?bp->file:\"\", bp->line, bp->hits, bp->enabled?\"true\":\"false\");"
    }
]