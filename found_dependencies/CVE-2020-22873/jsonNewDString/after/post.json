[
    {
        "line": 3,
        "fullcodeline": "char buf[JSI_MAX_NUMBER_STRING], *dp = buf;"
    },
    {
        "line": 4,
        "fullcodeline": "const char *cp = str;"
    },
    {
        "line": 37,
        "fullcodeline": "*dp = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "Jsi_DSAppendLen(dStr, buf, dp-buf);"
    },
    {
        "line": 7,
        "fullcodeline": "while ((cp-str)<len) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (*cp == '\\\\') {"
    },
    {
        "line": 31,
        "fullcodeline": "if ((dp-buf)>90) {"
    },
    {
        "line": 27,
        "fullcodeline": "cp+=2;"
    },
    {
        "line": 32,
        "fullcodeline": "*dp = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "Jsi_DSAppendLen(dStr, buf, dp-buf);"
    },
    {
        "line": 34,
        "fullcodeline": "dp = buf;"
    },
    {
        "line": 10,
        "fullcodeline": "case 'b': *dp++ = '\\b'; break;"
    },
    {
        "line": 11,
        "fullcodeline": "case 'n': *dp++ = '\\n'; break;"
    },
    {
        "line": 12,
        "fullcodeline": "case 'r': *dp++ = '\\r'; break;"
    },
    {
        "line": 13,
        "fullcodeline": "case 'f': *dp++ = '\\f'; break;"
    },
    {
        "line": 14,
        "fullcodeline": "case 't': *dp++ = '\\t'; break;"
    },
    {
        "line": 15,
        "fullcodeline": "case '\\\"': *dp++ = '\\\"'; break;"
    },
    {
        "line": 16,
        "fullcodeline": "case '\\\\': *dp++ = '\\\\'; break;"
    },
    {
        "line": 18,
        "fullcodeline": "if ((ulen=Jsi_UtfDecode(cp+2, dp))) {"
    },
    {
        "line": 29,
        "fullcodeline": "*dp++ = *cp++;"
    },
    {
        "line": 19,
        "fullcodeline": "dp += ulen;"
    },
    {
        "line": 20,
        "fullcodeline": "cp += 4;"
    },
    {
        "line": 22,
        "fullcodeline": "*dp++ = '\\\\';"
    },
    {
        "line": 23,
        "fullcodeline": "*dp++ = 'u';"
    }
]