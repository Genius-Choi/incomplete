[
    {
        "line": 4,
        "fullcodeline": "int regexec_flags = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "regex_t *reg = &re->reg;"
    },
    {
        "line": 12,
        "fullcodeline": "regmatch_t pos = {};"
    },
    {
        "line": 16,
        "fullcodeline": "int r  = regexec(reg, v, 1, &pos, regexec_flags);"
    },
    {
        "line": 7,
        "fullcodeline": "if (pattern == NULL || pattern->vt != JSI_VT_OBJECT || pattern->d.obj->ot != JSI_OT_REGEXP)"
    },
    {
        "line": 18,
        "fullcodeline": "if (r >= REG_BADPAT) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (r != REG_NOMATCH) {"
    },
    {
        "line": 6,
        "fullcodeline": "*rc = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "Jsi_DSInit(dStr);"
    },
    {
        "line": 19,
        "fullcodeline": "char buf[JSI_MAX_NUMBER_STRING];"
    },
    {
        "line": 21,
        "fullcodeline": "regerror(r, reg, buf, sizeof(buf));"
    },
    {
        "line": 8,
        "fullcodeline": "return Jsi_LogError(\"expected pattern\");"
    },
    {
        "line": 22,
        "fullcodeline": "return Jsi_LogError(\"error while matching pattern: %s\", buf);"
    },
    {
        "line": 26,
        "fullcodeline": "if (dStr && pos.rm_so >= 0 && pos.rm_eo >= 0 &&  pos.rm_eo >= pos.rm_so)"
    },
    {
        "line": 25,
        "fullcodeline": "if (rc) *rc = 1;"
    },
    {
        "line": 27,
        "fullcodeline": "Jsi_DSAppendLen(dStr, v + pos.rm_so, pos.rm_eo - pos.rm_so);"
    }
]