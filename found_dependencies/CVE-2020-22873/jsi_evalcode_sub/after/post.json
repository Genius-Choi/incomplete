[
    {
        "line": 5,
        "fullcodeline": "Jsi_Interp* interp = ps->interp;"
    },
    {
        "line": 7,
        "fullcodeline": "Jsi_RC rc = JSI_OK;"
    },
    {
        "line": 8,
        "fullcodeline": "int curLine = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "int context_id = ps->_context_id++, lop = -1;"
    },
    {
        "line": 11,
        "fullcodeline": "jsi_TryList  *trylist = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "bool strict = interp->strict;"
    },
    {
        "line": 13,
        "fullcodeline": "const char *curFile = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "if (currentScope->vt != JSI_VT_OBJECT) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (interp->maxDepth>0 && interp->level > interp->maxDepth)"
    },
    {
        "line": 22,
        "fullcodeline": "while(ip < end && rc == JSI_OK) {"
    },
    {
        "line": 16,
        "fullcodeline": "Jsi_LogBug(\"Eval: current scope is not a object\");"
    },
    {
        "line": 20,
        "fullcodeline": "rc = Jsi_LogError(\"Exceeded call depth: %d\", interp->level);"
    },
    {
        "line": 23,
        "fullcodeline": "int plop = ip->op;"
    },
    {
        "line": 78,
        "fullcodeline": "interp->opCnt++;"
    },
    {
        "line": 103,
        "fullcodeline": "ip->hit=1;"
    },
    {
        "line": 108,
        "fullcodeline": "jsiPush(interp,0);"
    },
    {
        "line": 109,
        "fullcodeline": "interp->curIp = ip;"
    },
    {
        "line": 981,
        "fullcodeline": "lop = plop;"
    },
    {
        "line": 982,
        "fullcodeline": "ip++;"
    },
    {
        "line": 986,
        "fullcodeline": "JSI_RESTORE_SCOPE();"
    },
    {
        "line": 987,
        "fullcodeline": "pop_try(trylist);"
    },
    {
        "line": 79,
        "fullcodeline": "if (interp->maxOpCnt && interp->opCnt > interp->maxOpCnt) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (interp->parent && interp->busyCallback && (interp->opCnt%(interp->busyInterval<=0?100000:interp->busyInterval))==0) {"
    },
    {
        "line": 105,
        "fullcodeline": "if ((interp->maxStack-interp->framePtr->Sp)<STACK_MIN_PAD)"
    },
    {
        "line": 111,
        "fullcodeline": "if (!ip->Line)"
    },
    {
        "line": 115,
        "fullcodeline": "if (!ip->fname)"
    },
    {
        "line": 26,
        "fullcodeline": "interp->curIp = ip;"
    },
    {
        "line": 71,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 75,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 80,
        "fullcodeline": "puts(\"EXEC CAP EXCEED\");"
    },
    {
        "line": 81,
        "fullcodeline": "interp->maxOpCnt += 1000;"
    },
    {
        "line": 82,
        "fullcodeline": "rc = Jsi_LogError(\"Exceeded execution cap: %d\", interp->opCnt);"
    },
    {
        "line": 83,
        "fullcodeline": "interp->exited = 1;"
    },
    {
        "line": 84,
        "fullcodeline": "interp->exitCode = 99;"
    },
    {
        "line": 88,
        "fullcodeline": "jsiDumpInstr(interp, ps, _this, trylist, ip, opcodes);"
    },
    {
        "line": 106,
        "fullcodeline": "jsiSetupStack(interp);"
    },
    {
        "line": 112,
        "fullcodeline": "ip->Line = curLine;"
    },
    {
        "line": 116,
        "fullcodeline": "ip->fname = curFile;"
    },
    {
        "line": 120,
        "fullcodeline": "interp->framePtr->fileName = curFile;"
    },
    {
        "line": 121,
        "fullcodeline": "interp->framePtr->line = curLine;"
    },
    {
        "line": 131,
        "fullcodeline": "Jsi_ValueMakeUndef(interp, &_jsi_STACKIDX(interp->framePtr->Sp));"
    },
    {
        "line": 132,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 135,
        "fullcodeline": "Jsi_ValueMakeNull(interp, &_jsi_STACKIDX(interp->framePtr->Sp));"
    },
    {
        "line": 136,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 139,
        "fullcodeline": "Jsi_ValueMakeBool(interp, &_jsi_STACKIDX(interp->framePtr->Sp), (uintptr_t)ip->data);"
    },
    {
        "line": 140,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 143,
        "fullcodeline": "Jsi_ValueMakeNumber(interp, &_jsi_STACKIDX(interp->framePtr->Sp), (*((Jsi_Number *)ip->data)));"
    },
    {
        "line": 144,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 251,
        "fullcodeline": "Jsi_ValueCopy(interp,_jsi_STACKIDX(interp->framePtr->Sp), interp->framePtr->arguments);"
    },
    {
        "line": 252,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 265,
        "fullcodeline": "Jsi_ValueCopy(interp,_jsi_STACKIDX(interp->framePtr->Sp), _jsi_TOP);"
    },
    {
        "line": 266,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 269,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 317,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 318,
        "fullcodeline": "Jsi_ValueToNumber(interp, _jsi_TOP);"
    },
    {
        "line": 319,
        "fullcodeline": "rc = _jsi_StrictChk(_jsi_TOP);"
    },
    {
        "line": 320,
        "fullcodeline": "_jsi_TOP->d.num = -(_jsi_TOP->d.num);"
    },
    {
        "line": 323,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 324,
        "fullcodeline": "Jsi_ValueToNumber(interp, _jsi_TOP);"
    },
    {
        "line": 325,
        "fullcodeline": "rc = _jsi_StrictChk(_jsi_TOP);"
    },
    {
        "line": 450,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 451,
        "fullcodeline": "rc = jsi_logic_less(interp,2,1);"
    },
    {
        "line": 452,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 455,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 456,
        "fullcodeline": "rc = jsi_logic_less(interp,1,2);"
    },
    {
        "line": 457,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 460,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 461,
        "fullcodeline": "rc = jsi_logic_less(interp,1,2);"
    },
    {
        "line": 464,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 467,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 468,
        "fullcodeline": "rc = jsi_logic_less(interp,2,1);"
    },
    {
        "line": 471,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 657,
        "fullcodeline": "jsiPop(interp, ((jsi_JmpPopInfo *)ip->data)->topop);"
    },
    {
        "line": 978,
        "fullcodeline": "Jsi_LogBug(\"invalid op ceod: %d\", ip->op);"
    },
    {
        "line": 65,
        "fullcodeline": "if (!interp->framePtr->tryDepth) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (jsi_FuncIsNoop(interp, interp->busyCallback))"
    },
    {
        "line": 114,
        "fullcodeline": "curLine = ip->Line;"
    },
    {
        "line": 118,
        "fullcodeline": "curFile = ip->fname;"
    },
    {
        "line": 122,
        "fullcodeline": "if ((rc = (*interp->debugOpts.hook)(interp, curFile, curLine, interp->framePtr->level, interp->curFunction, jsi_opcode_string(ip->op), ip, NULL)) != JSI_OK)"
    },
    {
        "line": 147,
        "fullcodeline": "Jsi_Value **v = &_jsi_STACKIDX(interp->framePtr->Sp);"
    },
    {
        "line": 148,
        "fullcodeline": "Jsi_ValueMakeStringKey(interp, v, (char*)ip->data);"
    },
    {
        "line": 149,
        "fullcodeline": "interp->lastPushStr = Jsi_ValueString(interp, *v, NULL);"
    },
    {
        "line": 150,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 154,
        "fullcodeline": "Jsi_String *s = (Jsi_String *)ip->data;"
    },
    {
        "line": 155,
        "fullcodeline": "Jsi_Value **v = &_jsi_STACKIDX(interp->framePtr->Sp);"
    },
    {
        "line": 162,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 166,
        "fullcodeline": "rc = jsi_PushVar(ps, ip, scope, currentScope, context_id);"
    },
    {
        "line": 170,
        "fullcodeline": "jsi_PushFunc(ps, ip, scope, currentScope);"
    },
    {
        "line": 174,
        "fullcodeline": "if (interp->maxUserObjs && interp->userObjCnt > interp->maxUserObjs) {"
    },
    {
        "line": 180,
        "fullcodeline": "int discard = ((ip+1)<end && ip[1].op == OP_POP);"
    },
    {
        "line": 191,
        "fullcodeline": "strict = interp->strict;"
    },
    {
        "line": 196,
        "fullcodeline": "rc = jsi_evalSubscript(interp, _jsi_TOQ, _jsi_TOP, ip, end, currentScope);"
    },
    {
        "line": 200,
        "fullcodeline": "Jsi_Value *sval = _jsi_TOP, *dval = _jsi_TOQ;"
    },
    {
        "line": 201,
        "fullcodeline": "bool globThis = (sval->vt == JSI_VT_OBJECT && sval->d.obj == interp->csc->d.obj);"
    },
    {
        "line": 231,
        "fullcodeline": "Jsi_Obj *obj = Jsi_ObjNewType(interp, JSI_OT_REGEXP);"
    },
    {
        "line": 232,
        "fullcodeline": "obj->d.robj = (Jsi_Regex *)ip->data;"
    },
    {
        "line": 233,
        "fullcodeline": "Jsi_ValueMakeObject(interp, &_jsi_STACKIDX(interp->framePtr->Sp), obj);"
    },
    {
        "line": 234,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 240,
        "fullcodeline": "if (!interp->framePtr->arguments) {"
    },
    {
        "line": 255,
        "fullcodeline": "Jsi_Value *tval = _jsi_STACKIDX(interp->framePtr->Sp);"
    },
    {
        "line": 256,
        "fullcodeline": "Jsi_ValueCopy(interp, tval, _this);"
    },
    {
        "line": 261,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 272,
        "fullcodeline": "Jsi_Value *vp1 = _jsi_STACKIDX(interp->framePtr->Sp);"
    },
    {
        "line": 273,
        "fullcodeline": "Jsi_Value *vp2 = _jsi_STACKIDX(interp->framePtr->Sp+1);"
    },
    {
        "line": 298,
        "fullcodeline": "Jsi_Value key = VALINIT, *kPtr = &key; // Note we use a string key so no reset needed."
    },
    {
        "line": 299,
        "fullcodeline": "Jsi_ValueMakeStringKey(interp, &kPtr, (char*)ip->data);"
    },
    {
        "line": 300,
        "fullcodeline": "jsi_ValueObjKeyAssign(interp, currentScope, kPtr, NULL, JSI_OM_DONTENUM);"
    },
    {
        "line": 301,
        "fullcodeline": "context_id = ps->_context_id++;"
    },
    {
        "line": 305,
        "fullcodeline": "Jsi_Value *tval = _jsi_TOP;"
    },
    {
        "line": 313,
        "fullcodeline": "jsiPop(interp, (uintptr_t)ip->data);"
    },
    {
        "line": 328,
        "fullcodeline": "int val = 0;"
    },
    {
        "line": 329,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 331,
        "fullcodeline": "val = Jsi_ValueIsTrue(interp, _jsi_TOP);"
    },
    {
        "line": 333,
        "fullcodeline": "jsiClearStack(interp,1);"
    },
    {
        "line": 334,
        "fullcodeline": "Jsi_ValueMakeBool(interp, &_jsi_TOP, !val);"
    },
    {
        "line": 338,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 339,
        "fullcodeline": "jsi_ValueToOInt32(interp, _jsi_TOP);"
    },
    {
        "line": 340,
        "fullcodeline": "rc = _jsi_StrictChk(_jsi_TOP);"
    },
    {
        "line": 341,
        "fullcodeline": "_jsi_TOP->d.num = (Jsi_Number)(~((int)_jsi_TOP->d.num));"
    },
    {
        "line": 345,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 346,
        "fullcodeline": "Jsi_Value *v, *v1 = _jsi_TOP, *v2 = _jsi_TOQ;"
    },
    {
        "line": 353,
        "fullcodeline": "char *s1 = Jsi_ValueString(interp, v1, &l1);"
    },
    {
        "line": 354,
        "fullcodeline": "char *s2 = Jsi_ValueString(interp, v2, &l2);"
    },
    {
        "line": 380,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 385,
        "fullcodeline": "const char *cp = NULL;"
    },
    {
        "line": 387,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 388,
        "fullcodeline": "vl = _jsi_TOQ;"
    },
    {
        "line": 389,
        "fullcodeline": "v = _jsi_TOP;"
    },
    {
        "line": 413,
        "fullcodeline": "int bval = 0;"
    },
    {
        "line": 414,
        "fullcodeline": "char nbuf[JSI_MAX_NUMBER_STRING];"
    },
    {
        "line": 416,
        "fullcodeline": "Jsi_Obj *obj = v->d.obj;"
    },
    {
        "line": 426,
        "fullcodeline": "bval = (vv != 0);"
    },
    {
        "line": 427,
        "fullcodeline": "Jsi_ValueMakeBool(interp, &_jsi_TOQ, bval);"
    },
    {
        "line": 428,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 438,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 443,
        "fullcodeline": "rc = _jsi_StrictChk2(_jsi_TOP,_jsi_TOQ);"
    },
    {
        "line": 446,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 462,
        "fullcodeline": "if (rc == JSI_OK)"
    },
    {
        "line": 469,
        "fullcodeline": "if (rc == JSI_OK)"
    },
    {
        "line": 475,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 476,
        "fullcodeline": "int r = Jsi_ValueCmp(interp, _jsi_TOP, _jsi_TOQ, 0);"
    },
    {
        "line": 477,
        "fullcodeline": "r = (ip->op == OP_EQUAL ? !r : r);"
    },
    {
        "line": 478,
        "fullcodeline": "jsiClearStack(interp,2);"
    },
    {
        "line": 479,
        "fullcodeline": "Jsi_ValueMakeBool(interp, &_jsi_TOQ, r);"
    },
    {
        "line": 480,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 485,
        "fullcodeline": "int r = 0;"
    },
    {
        "line": 486,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 487,
        "fullcodeline": "rc = _jsi_StrictUChk3(_jsi_TOQ, _jsi_TOP);"
    },
    {
        "line": 488,
        "fullcodeline": "r = !Jsi_ValueIsEqual(interp, _jsi_TOP, _jsi_TOQ);"
    },
    {
        "line": 489,
        "fullcodeline": "r = (ip->op == OP_STRICTEQU ? !r : r);"
    },
    {
        "line": 490,
        "fullcodeline": "jsiClearStack(interp,2);"
    },
    {
        "line": 491,
        "fullcodeline": "Jsi_ValueMakeBool(interp, &_jsi_TOQ, r);"
    },
    {
        "line": 492,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 502,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 503,
        "fullcodeline": "jsi_ValueToOInt32(interp, _jsi_TOQ);"
    },
    {
        "line": 504,
        "fullcodeline": "jsi_ValueToOInt32(interp, _jsi_TOP);"
    },
    {
        "line": 506,
        "fullcodeline": "int t2 = ((unsigned int)_jsi_TOP->d.num) & 0x1f;"
    },
    {
        "line": 520,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 524,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 531,
        "fullcodeline": "Jsi_Value *spret = Jsi_ValueNew1(interp);"
    },
    {
        "line": 532,
        "fullcodeline": "jsi_ValueObjGetKeys(interp, _jsi_TOP, spret, ip->isof);"
    },
    {
        "line": 533,
        "fullcodeline": "Jsi_ValueReplace(interp, _jsi_STACK+interp->framePtr->Sp, spret);"
    },
    {
        "line": 534,
        "fullcodeline": "Jsi_DecrRefCount(interp, spret);"
    },
    {
        "line": 535,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 539,
        "fullcodeline": "Jsi_Value *toq = _jsi_TOQ, *top = _jsi_TOP;"
    },
    {
        "line": 606,
        "fullcodeline": "int inc = ip->op == OP_INC ? 1 : -1;"
    },
    {
        "line": 613,
        "fullcodeline": "SIGASSERT(v, VALUE);"
    },
    {
        "line": 614,
        "fullcodeline": "Jsi_ValueToNumber(interp, v);"
    },
    {
        "line": 615,
        "fullcodeline": "rc = _jsi_StrictChk(v);"
    },
    {
        "line": 616,
        "fullcodeline": "v->d.num += inc;"
    },
    {
        "line": 618,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 626,
        "fullcodeline": "Jsi_Value *v = _jsi_TOP;"
    },
    {
        "line": 631,
        "fullcodeline": "typ = Jsi_ValueTypeStr(interp, v);"
    },
    {
        "line": 632,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 633,
        "fullcodeline": "Jsi_ValueMakeStringKey(interp, &_jsi_TOP, (char*)typ);"
    },
    {
        "line": 638,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 639,
        "fullcodeline": "int bval = Jsi_ValueInstanceOf(interp, _jsi_TOQ, _jsi_TOP);"
    },
    {
        "line": 640,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 641,
        "fullcodeline": "Jsi_ValueMakeBool(interp, &_jsi_TOP, bval);"
    },
    {
        "line": 648,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 649,
        "fullcodeline": "int off = (uintptr_t)ip->data - 1;"
    },
    {
        "line": 650,
        "fullcodeline": "int r = Jsi_ValueIsTrue(interp, _jsi_TOP);"
    },
    {
        "line": 653,
        "fullcodeline": "ip += ((ip->op == OP_JTRUE || ip->op == OP_JTRUE_NP) ^ r) ? 0 : off;"
    },
    {
        "line": 659,
        "fullcodeline": "int off = (ip->op == OP_JMP ? (uintptr_t)ip->data - 1"
    },
    {
        "line": 692,
        "fullcodeline": "ip += off;"
    },
    {
        "line": 696,
        "fullcodeline": "int stackargc = (uintptr_t)ip->data;"
    },
    {
        "line": 697,
        "fullcodeline": "jsiVarDeref(interp, stackargc);"
    },
    {
        "line": 699,
        "fullcodeline": "int r = 0;"
    },
    {
        "line": 700,
        "fullcodeline": "Jsi_Value *spPtr = Jsi_ValueNew1(interp);"
    },
    {
        "line": 717,
        "fullcodeline": "jsiPop(interp, stackargc);"
    },
    {
        "line": 718,
        "fullcodeline": "Jsi_ValueCopy(interp, _jsi_STACK[interp->framePtr->Sp], spPtr); /*TODO: is this correct?*/"
    },
    {
        "line": 719,
        "fullcodeline": "Jsi_DecrRefCount(interp, spPtr);"
    },
    {
        "line": 720,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 732,
        "fullcodeline": "jsiPop(interp, (uintptr_t)ip->data);"
    },
    {
        "line": 733,
        "fullcodeline": "interp->didReturn = 1;"
    },
    {
        "line": 742,
        "fullcodeline": "ip = end;"
    },
    {
        "line": 746,
        "fullcodeline": "int count = (uintptr_t)ip->data;"
    },
    {
        "line": 776,
        "fullcodeline": "int itemcount = (uintptr_t)ip->data;"
    },
    {
        "line": 777,
        "fullcodeline": "Assert(itemcount>=0);"
    },
    {
        "line": 778,
        "fullcodeline": "jsiVarDeref(interp, itemcount * 2);"
    },
    {
        "line": 779,
        "fullcodeline": "Jsi_Obj *obj = Jsi_ObjNewObj(interp, _jsi_STACK+(interp->framePtr->Sp-itemcount*2), itemcount*2);"
    },
    {
        "line": 780,
        "fullcodeline": "jsiPop(interp, itemcount * 2 - 1);       /* one left */"
    },
    {
        "line": 781,
        "fullcodeline": "jsiClearStack(interp,1);"
    },
    {
        "line": 782,
        "fullcodeline": "Jsi_ValueMakeObject(interp, &_jsi_TOP, obj);"
    },
    {
        "line": 786,
        "fullcodeline": "int itemcount = (uintptr_t)ip->data;"
    },
    {
        "line": 787,
        "fullcodeline": "Assert(itemcount>=0);"
    },
    {
        "line": 788,
        "fullcodeline": "jsiVarDeref(interp, itemcount);"
    },
    {
        "line": 789,
        "fullcodeline": "Jsi_Obj *obj = Jsi_ObjNewArray(interp, _jsi_STACK+(interp->framePtr->Sp-itemcount), itemcount, 1);"
    },
    {
        "line": 790,
        "fullcodeline": "jsiPop(interp, itemcount - 1);"
    },
    {
        "line": 791,
        "fullcodeline": "jsiClearStack(interp,1);"
    },
    {
        "line": 792,
        "fullcodeline": "Jsi_ValueMakeObject(interp, &_jsi_TOP, obj);"
    },
    {
        "line": 796,
        "fullcodeline": "jsi_TryInfo *ti = (jsi_TryInfo *)ip->data;"
    },
    {
        "line": 797,
        "fullcodeline": "jsi_TryList *n = jsi_trylist_new(jsi_TL_TRY, scope, currentScope);"
    },
    {
        "line": 799,
        "fullcodeline": "n->d.td.tstart = ip;                            /* make every thing pointed to right pos */"
    },
    {
        "line": 800,
        "fullcodeline": "n->d.td.tend = n->d.td.tstart + ti->trylen;"
    },
    {
        "line": 801,
        "fullcodeline": "n->d.td.cstart = n->d.td.tend + 1;"
    },
    {
        "line": 802,
        "fullcodeline": "n->d.td.cend = n->d.td.tend + ti->catchlen;"
    },
    {
        "line": 803,
        "fullcodeline": "n->d.td.fstart = n->d.td.cend + 1;"
    },
    {
        "line": 804,
        "fullcodeline": "n->d.td.fend = n->d.td.cend + ti->finallen;"
    },
    {
        "line": 805,
        "fullcodeline": "n->d.td.tsp = interp->framePtr->Sp;"
    },
    {
        "line": 806,
        "fullcodeline": "n->inCatch=0;"
    },
    {
        "line": 807,
        "fullcodeline": "n->inFinal=0;"
    },
    {
        "line": 809,
        "fullcodeline": "jsi_push_try(interp, &trylist, n);"
    },
    {
        "line": 816,
        "fullcodeline": "ip = trylist->d.td.fstart - 1;"
    },
    {
        "line": 854,
        "fullcodeline": "trylist->inCatch=0;"
    },
    {
        "line": 855,
        "fullcodeline": "ip = trylist->d.td.fstart - 1;"
    },
    {
        "line": 863,
        "fullcodeline": "trylist->inFinal = 1;"
    },
    {
        "line": 864,
        "fullcodeline": "JSI_RESTORE_SCOPE();"
    },
    {
        "line": 871,
        "fullcodeline": "trylist->inFinal = 0;"
    },
    {
        "line": 873,
        "fullcodeline": "jsi_OpCode *tojmp = (last_op == jsi_LOP_JMP ? trylist->d.td.ld.tojmp : 0);"
    },
    {
        "line": 875,
        "fullcodeline": "pop_try(trylist);"
    },
    {
        "line": 914,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 915,
        "fullcodeline": "Jsi_ValueDup2(interp,&ps->last_exception, _jsi_TOP);"
    },
    {
        "line": 916,
        "fullcodeline": "interp->didReturn = 1; /* TODO: could possibly hide _jsi_STACK problem */"
    },
    {
        "line": 917,
        "fullcodeline": "JSI_DO_THROW(\"throw\");"
    },
    {
        "line": 921,
        "fullcodeline": "static int warnwith = 1;"
    },
    {
        "line": 927,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 928,
        "fullcodeline": "Jsi_ValueToObject(interp, _jsi_TOP);"
    },
    {
        "line": 930,
        "fullcodeline": "jsi_TryList *n = jsi_trylist_new(jsi_TL_WITH, scope, currentScope);"
    },
    {
        "line": 932,
        "fullcodeline": "n->d.wd.wstart = ip;"
    },
    {
        "line": 933,
        "fullcodeline": "n->d.wd.wend = n->d.wd.wstart + (uintptr_t)ip->data;"
    },
    {
        "line": 935,
        "fullcodeline": "jsi_push_try(interp, &trylist, n);"
    },
    {
        "line": 936,
        "fullcodeline": "interp->framePtr->withDepth++;"
    },
    {
        "line": 939,
        "fullcodeline": "scope = jsi_ScopeChainDupNext(interp, scope, currentScope);"
    },
    {
        "line": 940,
        "fullcodeline": "currentScope = Jsi_ValueNew1(interp);"
    },
    {
        "line": 941,
        "fullcodeline": "interp->framePtr->ingsc = scope;"
    },
    {
        "line": 942,
        "fullcodeline": "interp->framePtr->incsc = currentScope;"
    },
    {
        "line": 943,
        "fullcodeline": "Jsi_ValueCopy(interp, currentScope, _jsi_TOP);"
    },
    {
        "line": 944,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 946,
        "fullcodeline": "context_id = ps->_context_id++;"
    },
    {
        "line": 953,
        "fullcodeline": "JSI_RESTORE_SCOPE();"
    },
    {
        "line": 955,
        "fullcodeline": "pop_try(trylist);"
    },
    {
        "line": 956,
        "fullcodeline": "interp->framePtr->withDepth--;"
    },
    {
        "line": 960,
        "fullcodeline": "jsi_DebuggerStmt();"
    },
    {
        "line": 961,
        "fullcodeline": "jsiPush(interp,1);"
    },
    {
        "line": 965,
        "fullcodeline": "jsi_ReservedInfo *ri = (jsi_ReservedInfo *)ip->data;"
    },
    {
        "line": 966,
        "fullcodeline": "const char *cmd = ri->type == RES_CONTINUE ? \"continue\" : \"break\";"
    },
    {
        "line": 973,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 66,
        "fullcodeline": "Jsi_LogError(\"program interrupted: function=%s\", interp->framePtr->funcName);"
    },
    {
        "line": 67,
        "fullcodeline": "interp->interrupted = 0;"
    },
    {
        "line": 93,
        "fullcodeline": "Jsi_EventProcess(interp->parent, -1);"
    },
    {
        "line": 156,
        "fullcodeline": "if (s->flags&1)"
    },
    {
        "line": 175,
        "fullcodeline": "rc = Jsi_LogError(\"Max 'new' count exceeded\");"
    },
    {
        "line": 181,
        "fullcodeline": "switch (jsiEvalFunction(ps, ip, discard)) {        /* throw an execption */"
    },
    {
        "line": 202,
        "fullcodeline": "if ((uintptr_t)ip->data == 1) {"
    },
    {
        "line": 223,
        "fullcodeline": "if (interp->framePtr->level<=1 && globThis && rc == JSI_OK && dval && dval->vt == JSI_VT_VARIABLE) {"
    },
    {
        "line": 241,
        "fullcodeline": "interp->framePtr->arguments = Jsi_ValueNewObj(interp,"
    },
    {
        "line": 243,
        "fullcodeline": "Jsi_IncrRefCount(interp, interp->framePtr->arguments);"
    },
    {
        "line": 274,
        "fullcodeline": "if (!vp1 || !vp2)"
    },
    {
        "line": 306,
        "fullcodeline": "if ((interp->evalFlags&JSI_EVAL_RETURN) && (ip+1) >= end &&"
    },
    {
        "line": 355,
        "fullcodeline": "if (s1 || s2) {"
    },
    {
        "line": 390,
        "fullcodeline": "if (Jsi_ValueIsString(interp,vl))"
    },
    {
        "line": 402,
        "fullcodeline": "if (v->vt == JSI_VT_VARIABLE) {"
    },
    {
        "line": 406,
        "fullcodeline": "if (v->vt != JSI_VT_OBJECT || v->d.obj->ot != JSI_OT_OBJECT) {"
    },
    {
        "line": 417,
        "fullcodeline": "if (!cp) {"
    },
    {
        "line": 439,
        "fullcodeline": "if (!Jsi_ValueIsType(interp,_jsi_TOP, JSI_VT_NUMBER))"
    },
    {
        "line": 441,
        "fullcodeline": "if (!Jsi_ValueIsType(interp,_jsi_TOQ, JSI_VT_NUMBER))"
    },
    {
        "line": 444,
        "fullcodeline": "if (rc == JSI_OK)"
    },
    {
        "line": 463,
        "fullcodeline": "_jsi_TOQ->d.val = !_jsi_TOQ->d.val;"
    },
    {
        "line": 470,
        "fullcodeline": "_jsi_TOQ->d.val = !_jsi_TOQ->d.val;"
    },
    {
        "line": 525,
        "fullcodeline": "if (ip->isof && !Jsi_ValueIsArray(interp, _jsi_TOP)) {"
    },
    {
        "line": 529,
        "fullcodeline": "if (_jsi_TOP->vt != JSI_VT_UNDEF && _jsi_TOP->vt != JSI_VT_NULL)"
    },
    {
        "line": 540,
        "fullcodeline": "if (toq->vt != JSI_VT_OBJECT || toq->d.obj->ot != JSI_OT_ITER) Jsi_LogBug(\"next: toq not a iter\\n\");"
    },
    {
        "line": 541,
        "fullcodeline": "if (top->vt != JSI_VT_VARIABLE) {"
    },
    {
        "line": 545,
        "fullcodeline": "if (strict && top->f.bits.local==0) {"
    },
    {
        "line": 608,
        "fullcodeline": "if (_jsi_TOP->vt != JSI_VT_VARIABLE) {"
    },
    {
        "line": 627,
        "fullcodeline": "if (v->vt == JSI_VT_VARIABLE) {"
    },
    {
        "line": 652,
        "fullcodeline": "if (ip->op == OP_JTRUE || ip->op == OP_JFALSE) jsiPop(interp,1);"
    },
    {
        "line": 701,
        "fullcodeline": "if (stackargc > 0) {"
    },
    {
        "line": 728,
        "fullcodeline": "if (interp->framePtr->Sp>=1 && ip->data) {"
    },
    {
        "line": 747,
        "fullcodeline": "if (count == 1) { // Non-standard."
    },
    {
        "line": 813,
        "fullcodeline": "if (trylist == NULL || trylist->type != jsi_TL_TRY)"
    },
    {
        "line": 820,
        "fullcodeline": "if (trylist == NULL || trylist->type != jsi_TL_TRY)"
    },
    {
        "line": 823,
        "fullcodeline": "if (!ip->data) {"
    },
    {
        "line": 851,
        "fullcodeline": "if (trylist == NULL || trylist->type != jsi_TL_TRY)"
    },
    {
        "line": 859,
        "fullcodeline": "if (trylist == NULL || trylist->type != jsi_TL_TRY)"
    },
    {
        "line": 868,
        "fullcodeline": "if (trylist == NULL || trylist->type != jsi_TL_TRY)"
    },
    {
        "line": 877,
        "fullcodeline": "if (last_op == jsi_LOP_THROW) {"
    },
    {
        "line": 922,
        "fullcodeline": "if (strict && warnwith && interp->typeCheck.nowith) {"
    },
    {
        "line": 950,
        "fullcodeline": "if (trylist == NULL || trylist->type != jsi_TL_WITH)"
    },
    {
        "line": 29,
        "fullcodeline": "if (!interp->asserts) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (!interp->logOpts.Debug && !(interp->framePtr->logflag &(1<<jsi_Oplf_debug))) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (!interp->logOpts.Test && !(interp->framePtr->logflag &(1<<jsi_Oplf_test))) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (!interp->logOpts.Trace && !(interp->framePtr->logflag &(1<<jsi_Oplf_trace))) {"
    },
    {
        "line": 69,
        "fullcodeline": "interp->interrupted++;"
    },
    {
        "line": 96,
        "fullcodeline": "Jsi_DSInit(&nStr);"
    },
    {
        "line": 97,
        "fullcodeline": "Jsi_DSPrintf(&nStr, \"[\\\"#Interp_%d\\\", %d]\", interp->objId, interp->opCnt);//TODO: use actual time interval rather than opCnt."
    },
    {
        "line": 100,
        "fullcodeline": "Jsi_DSFree(&nStr);"
    },
    {
        "line": 157,
        "fullcodeline": "jsi_ValueMakeBlobDup(interp,v, (uchar*)s->str, s->len);"
    },
    {
        "line": 186,
        "fullcodeline": "JSI_DO_THROW(\"help\");"
    },
    {
        "line": 189,
        "fullcodeline": "JSI_DO_THROW(\"fcall\");"
    },
    {
        "line": 203,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 204,
        "fullcodeline": "rc = jsi_ValueAssign(interp, dval, sval, lop);"
    },
    {
        "line": 207,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 226,
        "fullcodeline": "Jsi_HashSet(interp->genValueTbl, dval, dval);"
    },
    {
        "line": 275,
        "fullcodeline": "rc = Jsi_LogError(\"Invalid lookup/push\");"
    },
    {
        "line": 285,
        "fullcodeline": "int t = interp->framePtr->Sp - 2;"
    },
    {
        "line": 286,
        "fullcodeline": "Assert(t>=0);"
    },
    {
        "line": 287,
        "fullcodeline": "Jsi_Value *v = _jsi_THISIDX(t);"
    },
    {
        "line": 288,
        "fullcodeline": "jsiClearThis(interp, t);"
    },
    {
        "line": 289,
        "fullcodeline": "Jsi_ValueCopy(interp, v, _jsi_TOQ);"
    },
    {
        "line": 293,
        "fullcodeline": "Jsi_ValueToObject(interp, v);"
    },
    {
        "line": 307,
        "fullcodeline": "(Jsi_ValueIsObjType(interp, tval, JSI_OT_ITER)==0 &&"
    },
    {
        "line": 310,
        "fullcodeline": "Jsi_ValueMove(interp, vret, tval); /*TODO***: correct ***/"
    },
    {
        "line": 311,
        "fullcodeline": "tval->vt = JSI_VT_UNDEF;"
    },
    {
        "line": 364,
        "fullcodeline": "Assert(l1>=0 && l1<=JSI_MAX_ALLOC_BUF);"
    },
    {
        "line": 365,
        "fullcodeline": "Assert(l2>=0 && l2<=JSI_MAX_ALLOC_BUF);"
    },
    {
        "line": 366,
        "fullcodeline": "str = (char*)Jsi_Malloc(l1+l2+1);"
    },
    {
        "line": 367,
        "fullcodeline": "memcpy(str, s2, l2);"
    },
    {
        "line": 368,
        "fullcodeline": "memcpy(str+l2, s1, l1);"
    },
    {
        "line": 369,
        "fullcodeline": "str[l1+l2] = 0;"
    },
    {
        "line": 370,
        "fullcodeline": "jsiClearStack(interp,2);"
    },
    {
        "line": 371,
        "fullcodeline": "Jsi_ValueMakeBlob(interp, &v2, (uchar*)str, l1+l2);"
    },
    {
        "line": 391,
        "fullcodeline": "cp = Jsi_ValueGetStringLen(interp, vl, NULL);"
    },
    {
        "line": 404,
        "fullcodeline": "SIGASSERT(v, VALUE);"
    },
    {
        "line": 409,
        "fullcodeline": "Jsi_ValueMakeBool(interp, &_jsi_TOQ, 0);"
    },
    {
        "line": 410,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 418,
        "fullcodeline": "snprintf(nbuf, sizeof(nbuf), \"%d\", (int)nval);"
    },
    {
        "line": 419,
        "fullcodeline": "cp = nbuf;"
    },
    {
        "line": 422,
        "fullcodeline": "vv = jsi_ObjArrayLookup(interp, obj, (char*)cp);"
    },
    {
        "line": 440,
        "fullcodeline": "Jsi_ValueToNumber(interp, _jsi_TOP);"
    },
    {
        "line": 442,
        "fullcodeline": "Jsi_ValueToNumber(interp, _jsi_TOQ);"
    },
    {
        "line": 445,
        "fullcodeline": "_jsi_TOQ->d.num = fmod(_jsi_TOQ->d.num, _jsi_TOP->d.num);"
    },
    {
        "line": 526,
        "fullcodeline": "rc = Jsi_LogError(\"operand not an array\");"
    },
    {
        "line": 530,
        "fullcodeline": "Jsi_ValueToObject(interp, _jsi_TOP);"
    },
    {
        "line": 542,
        "fullcodeline": "rc = Jsi_LogError (\"invalid for/in left hand-side\");"
    },
    {
        "line": 546,
        "fullcodeline": "const char *varname = \"\";"
    },
    {
        "line": 551,
        "fullcodeline": "rc = Jsi_LogError(\"function created global: \\\"%s\\\"\", varname);"
    },
    {
        "line": 557,
        "fullcodeline": "io->iterCmd(io, top, _jsi_STACKIDX(interp->framePtr->Sp-3), io->iter++);"
    },
    {
        "line": 609,
        "fullcodeline": "rc = Jsi_LogError(\"operand not left value\");"
    },
    {
        "line": 620,
        "fullcodeline": "_jsi_TOP->d.num -= inc;"
    },
    {
        "line": 629,
        "fullcodeline": "SIGASSERT(v, VALUE);"
    },
    {
        "line": 660,
        "fullcodeline": ": (uintptr_t)((jsi_JmpPopInfo *)ip->data)->off - 1);"
    },
    {
        "line": 664,
        "fullcodeline": "jsi_OpCode *tojmp = ip + off;"
    },
    {
        "line": 707,
        "fullcodeline": "char *pro = Jsi_ValueString(interp, _jsi_STACKIDX(interp->framePtr->Sp - stackargc), &plen);"
    },
    {
        "line": 723,
        "fullcodeline": "JSI_DO_THROW(\"eval\");"
    },
    {
        "line": 729,
        "fullcodeline": "jsiVarDeref(interp,1);"
    },
    {
        "line": 730,
        "fullcodeline": "Jsi_ValueMove(interp, vret, _jsi_TOP);"
    },
    {
        "line": 761,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 814,
        "fullcodeline": "Jsi_LogBug(\"Unexpected ETRY opcode??\");"
    },
    {
        "line": 821,
        "fullcodeline": "Jsi_LogBug(\"Unexpected SCATCH opcode??\");"
    },
    {
        "line": 824,
        "fullcodeline": "JSI_DO_THROW(\"catch\");"
    },
    {
        "line": 852,
        "fullcodeline": "Jsi_LogBug(\"Unexpected ECATCH opcode??\");"
    },
    {
        "line": 860,
        "fullcodeline": "Jsi_LogBug(\"Unexpected SFINAL opcode??\");"
    },
    {
        "line": 869,
        "fullcodeline": "Jsi_LogBug(\"Unexpected EFINAL opcode??\");"
    },
    {
        "line": 878,
        "fullcodeline": "JSI_DO_THROW(\"finally\");"
    },
    {
        "line": 923,
        "fullcodeline": "warnwith = 0;"
    },
    {
        "line": 924,
        "fullcodeline": "rc = Jsi_LogError(\"use of with is illegal due to \\\"use nowith\\\"\");"
    },
    {
        "line": 951,
        "fullcodeline": "Jsi_LogBug(\"Unexpected EWITH opcode??\");"
    },
    {
        "line": 969,
        "fullcodeline": "Jsi_LogError(\"%s: label(%s) not found\", cmd, ri->label);"
    },
    {
        "line": 30,
        "fullcodeline": "ip++;"
    },
    {
        "line": 38,
        "fullcodeline": "ip++;"
    },
    {
        "line": 46,
        "fullcodeline": "ip++;"
    },
    {
        "line": 54,
        "fullcodeline": "ip++;"
    },
    {
        "line": 98,
        "fullcodeline": "if (Jsi_FunctionInvokeJSON(interp->parent, interp->busyCallback, Jsi_DSValue(&nStr), NULL) != JSI_OK)"
    },
    {
        "line": 159,
        "fullcodeline": "Jsi_ValueMakeStringKey(interp, v, s->str);"
    },
    {
        "line": 160,
        "fullcodeline": "interp->lastPushStr = s->str;"
    },
    {
        "line": 184,
        "fullcodeline": "if (interp->framePtr->tryDepth<=0)"
    },
    {
        "line": 205,
        "fullcodeline": "if (strict && sval->vt == JSI_VT_UNDEF)"
    },
    {
        "line": 209,
        "fullcodeline": "jsiVarDeref(interp, 3);"
    },
    {
        "line": 210,
        "fullcodeline": "Jsi_Value *v3 = _jsi_STACKIDX(interp->framePtr->Sp-3);"
    },
    {
        "line": 218,
        "fullcodeline": "jsiClearStack(interp,3);"
    },
    {
        "line": 219,
        "fullcodeline": "Jsi_ValueCopy(interp,v3, sval);"
    },
    {
        "line": 220,
        "fullcodeline": "dval = v3;"
    },
    {
        "line": 221,
        "fullcodeline": "jsiPop(interp, 2);"
    },
    {
        "line": 242,
        "fullcodeline": "Jsi_ObjNewArray(interp, currentScope->d.obj->arr, currentScope->d.obj->arrCnt, 0));"
    },
    {
        "line": 245,
        "fullcodeline": "Jsi_Value *callee = Jsi_ValueObjLookup(interp, currentScope, \"\\1callee\\1\", 0);"
    },
    {
        "line": 277,
        "fullcodeline": "Jsi_ValueCopy(interp, vp1, _jsi_TOQ);"
    },
    {
        "line": 278,
        "fullcodeline": "Jsi_ValueCopy(interp, vp2, _jsi_TOP);"
    },
    {
        "line": 279,
        "fullcodeline": "jsiPush(interp, 2);"
    },
    {
        "line": 290,
        "fullcodeline": "if (v->vt == JSI_VT_VARIABLE) {"
    },
    {
        "line": 308,
        "fullcodeline": "Jsi_ValueIsObjType(interp, tval, JSI_OT_FUNCTION)==0)) {"
    },
    {
        "line": 349,
        "fullcodeline": "if (Jsi_ValueIsUndef(interp, v1) || Jsi_ValueIsUndef(interp, v2)) {"
    },
    {
        "line": 357,
        "fullcodeline": "if (!(s1 && s2)) {"
    },
    {
        "line": 373,
        "fullcodeline": "Jsi_ValueToNumber(interp, v1);"
    },
    {
        "line": 374,
        "fullcodeline": "Jsi_ValueToNumber(interp, v2);"
    },
    {
        "line": 375,
        "fullcodeline": "rc = _jsi_StrictChk2(v1, v2);"
    },
    {
        "line": 377,
        "fullcodeline": "jsiClearStack(interp,2);"
    },
    {
        "line": 378,
        "fullcodeline": "Jsi_ValueMakeNumber(interp, &v2, n);"
    },
    {
        "line": 424,
        "fullcodeline": "vv = Jsi_TreeObjGetValue(obj, (char*)cp, 1);"
    },
    {
        "line": 508,
        "fullcodeline": "if ((uintptr_t)ip->data == 2) {   /* unsigned shift */"
    },
    {
        "line": 517,
        "fullcodeline": "t1 <<= t2;"
    },
    {
        "line": 518,
        "fullcodeline": "Jsi_ValueMakeNumber(interp, &_jsi_TOQ, t1);"
    },
    {
        "line": 663,
        "fullcodeline": "if (trylist == NULL) break;"
    },
    {
        "line": 669,
        "fullcodeline": "if (trylist->type == jsi_TL_TRY) {"
    },
    {
        "line": 702,
        "fullcodeline": "if (_jsi_STACKIDX(interp->framePtr->Sp - stackargc)->vt == JSI_VT_UNDEF) {"
    },
    {
        "line": 748,
        "fullcodeline": "if (_jsi_TOP->vt != JSI_VT_VARIABLE)"
    },
    {
        "line": 826,
        "fullcodeline": "trylist->inCatch=1;"
    },
    {
        "line": 828,
        "fullcodeline": "scope = jsi_ScopeChainDupNext(interp, scope, currentScope);"
    },
    {
        "line": 829,
        "fullcodeline": "currentScope = jsi_ObjValueNew(interp);"
    },
    {
        "line": 830,
        "fullcodeline": "interp->framePtr->ingsc = scope;  //TODO: changing frame"
    },
    {
        "line": 831,
        "fullcodeline": "interp->framePtr->incsc = currentScope;"
    },
    {
        "line": 832,
        "fullcodeline": "Jsi_IncrRefCount(interp, currentScope);"
    },
    {
        "line": 833,
        "fullcodeline": "Jsi_Value *excpt = Jsi_ValueNew1(interp);"
    },
    {
        "line": 844,
        "fullcodeline": "Jsi_ValueInsert(interp, currentScope, (char*)ip->data, excpt, JSI_OM_DONTENUM);"
    },
    {
        "line": 845,
        "fullcodeline": "Jsi_DecrRefCount(interp, excpt);"
    },
    {
        "line": 846,
        "fullcodeline": "context_id = ps->_context_id++;"
    },
    {
        "line": 971,
        "fullcodeline": "Jsi_LogError(\"%s must be inside loop(or switch)\", cmd);"
    },
    {
        "line": 31,
        "fullcodeline": "if (ip->logflag != jsi_Oplf_assert && (ip->op == OP_POP || ip->op == OP_RET))"
    },
    {
        "line": 39,
        "fullcodeline": "if (ip->logflag != jsi_Oplf_debug && (ip->op == OP_POP || ip->op == OP_RET))"
    },
    {
        "line": 47,
        "fullcodeline": "if (ip->logflag != jsi_Oplf_test && (ip->op == OP_POP || ip->op == OP_RET))"
    },
    {
        "line": 55,
        "fullcodeline": "if (ip->logflag != jsi_Oplf_trace && (ip->op == OP_POP || ip->op == OP_RET))"
    },
    {
        "line": 99,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 185,
        "fullcodeline": "interp->isHelp = 1;"
    },
    {
        "line": 206,
        "fullcodeline": "rc = jsi_ValueAssignCheck(interp, sval, lop);"
    },
    {
        "line": 211,
        "fullcodeline": "if (v3->vt == JSI_VT_OBJECT) {"
    },
    {
        "line": 291,
        "fullcodeline": "Jsi_ValueCopy(interp, v, v->d.lval);"
    },
    {
        "line": 350,
        "fullcodeline": "rc = Jsi_LogError(\"operand value to + is undefined\");"
    },
    {
        "line": 358,
        "fullcodeline": "v = (s1 ? v2 : v1);"
    },
    {
        "line": 359,
        "fullcodeline": "jsi_ValueToPrimitive(interp, &v);"
    },
    {
        "line": 360,
        "fullcodeline": "Jsi_ValueToString(interp, v, NULL);"
    },
    {
        "line": 361,
        "fullcodeline": "str = Jsi_ValueString(interp, v, (s1?&l2:&l1));"
    },
    {
        "line": 392,
        "fullcodeline": "else if (Jsi_ValueIsNumber(interp,vl))"
    },
    {
        "line": 408,
        "fullcodeline": "Jsi_LogWarn(\"expected object after IN\");"
    },
    {
        "line": 509,
        "fullcodeline": "unsigned int t3 = (unsigned int)t1;"
    },
    {
        "line": 510,
        "fullcodeline": "t3 >>= t2;"
    },
    {
        "line": 511,
        "fullcodeline": "Jsi_ValueMakeNumber(interp, &_jsi_TOQ, t3);"
    },
    {
        "line": 559,
        "fullcodeline": "while (io->iter < io->count) {"
    },
    {
        "line": 580,
        "fullcodeline": "if (io->iter >= io->count) {"
    },
    {
        "line": 703,
        "fullcodeline": "Jsi_LogError(\"undefined value to eval()\");"
    },
    {
        "line": 709,
        "fullcodeline": "pro = Jsi_StrdupLen(pro, plen);"
    },
    {
        "line": 710,
        "fullcodeline": "r = jsiEvalOp(interp, ps, pro, scope, currentScope, _this, &spPtr);"
    },
    {
        "line": 711,
        "fullcodeline": "Jsi_Free(pro);"
    },
    {
        "line": 738,
        "fullcodeline": "pop_try(trylist);"
    },
    {
        "line": 749,
        "fullcodeline": "rc = Jsi_LogError(\"delete a right value\");"
    },
    {
        "line": 762,
        "fullcodeline": "} else if (count == 2) {"
    },
    {
        "line": 834,
        "fullcodeline": "if (ps->last_exception && ps->last_exception->vt != JSI_VT_UNDEF) {"
    },
    {
        "line": 879,
        "fullcodeline": "} else if (last_op == jsi_LOP_JMP) {"
    },
    {
        "line": 32,
        "fullcodeline": "ip++;"
    },
    {
        "line": 40,
        "fullcodeline": "ip++;"
    },
    {
        "line": 48,
        "fullcodeline": "ip++;"
    },
    {
        "line": 56,
        "fullcodeline": "ip++;"
    },
    {
        "line": 214,
        "fullcodeline": "jsi_ValueObjKeyAssign(interp, v3, dval, sval, 0);"
    },
    {
        "line": 215,
        "fullcodeline": "jsi_ValueDebugLabel(sval, \"assign\", NULL);"
    },
    {
        "line": 247,
        "fullcodeline": "Jsi_ValueInsert(interp, interp->framePtr->arguments, \"\\1callee\\1\", callee, JSI_OM_DONTENUM);"
    },
    {
        "line": 393,
        "fullcodeline": "Jsi_ValueGetNumber(interp, vl, &nval);"
    },
    {
        "line": 513,
        "fullcodeline": "t1 >>= t2;"
    },
    {
        "line": 514,
        "fullcodeline": "Jsi_ValueMakeNumber(interp, &_jsi_TOQ, t1);"
    },
    {
        "line": 578,
        "fullcodeline": "io->iter++;"
    },
    {
        "line": 581,
        "fullcodeline": "jsiClearStack(interp,1);"
    },
    {
        "line": 582,
        "fullcodeline": "Jsi_ValueMakeNumber(interp, &_jsi_TOP, 0);"
    },
    {
        "line": 670,
        "fullcodeline": "if (tojmp >= trylist->d.td.tstart && tojmp < trylist->d.td.fend) break;"
    },
    {
        "line": 672,
        "fullcodeline": "if (ip >= trylist->d.td.tstart && ip < trylist->d.td.cend) {"
    },
    {
        "line": 687,
        "fullcodeline": "JSI_RESTORE_SCOPE();"
    },
    {
        "line": 688,
        "fullcodeline": "pop_try(trylist);"
    },
    {
        "line": 713,
        "fullcodeline": "Jsi_ValueCopy(interp, spPtr, _jsi_STACKIDX(interp->framePtr->Sp - stackargc));"
    },
    {
        "line": 736,
        "fullcodeline": "if (trylist->type == jsi_TL_TRY && trylist->inCatch)"
    },
    {
        "line": 752,
        "fullcodeline": "SIGASSERT(v, VALUE);"
    },
    {
        "line": 763,
        "fullcodeline": "jsiVarDeref(interp,2);"
    },
    {
        "line": 764,
        "fullcodeline": "assert(interp->framePtr->Sp>=2);"
    },
    {
        "line": 769,
        "fullcodeline": "jsi_ValueObjDelete(interp, _jsi_TOQ, _jsi_TOP, 0);"
    },
    {
        "line": 771,
        "fullcodeline": "jsiPop(interp,2);"
    },
    {
        "line": 837,
        "fullcodeline": "Jsi_Value *ple = ps->last_exception;"
    },
    {
        "line": 838,
        "fullcodeline": "Jsi_ValueCopy(interp, excpt, ple);"
    },
    {
        "line": 839,
        "fullcodeline": "Jsi_ValueReset(interp, &ps->last_exception);"
    },
    {
        "line": 212,
        "fullcodeline": "if (strict && sval->vt == JSI_VT_UNDEF)"
    },
    {
        "line": 362,
        "fullcodeline": "if (s1) s2 = str; else s1 = str;"
    },
    {
        "line": 397,
        "fullcodeline": "Jsi_ValueMakeBool(interp, &_jsi_TOQ, 0);"
    },
    {
        "line": 398,
        "fullcodeline": "jsiPop(interp,1);"
    },
    {
        "line": 560,
        "fullcodeline": "if (!io->isArrayList) {"
    },
    {
        "line": 585,
        "fullcodeline": "SIGASSERT(v, VALUE);"
    },
    {
        "line": 586,
        "fullcodeline": "Jsi_ValueReset(interp, vPtr);"
    },
    {
        "line": 596,
        "fullcodeline": "io->iter++;"
    },
    {
        "line": 598,
        "fullcodeline": "jsiClearStack(interp,1);"
    },
    {
        "line": 599,
        "fullcodeline": "Jsi_ValueMakeNumber(interp, &_jsi_TOP, 1);"
    },
    {
        "line": 673,
        "fullcodeline": "trylist->d.td.last_op = jsi_LOP_JMP;"
    },
    {
        "line": 674,
        "fullcodeline": "trylist->d.td.ld.tojmp = tojmp;"
    },
    {
        "line": 676,
        "fullcodeline": "ip = trylist->d.td.fstart - 1;"
    },
    {
        "line": 677,
        "fullcodeline": "off = 0;"
    },
    {
        "line": 685,
        "fullcodeline": "if (tojmp >= trylist->d.wd.wstart && tojmp < trylist->d.wd.wend) break;"
    },
    {
        "line": 737,
        "fullcodeline": "JSI_RESTORE_SCOPE();"
    },
    {
        "line": 772,
        "fullcodeline": "} else Jsi_LogBug(\"delete\");"
    },
    {
        "line": 213,
        "fullcodeline": "rc = jsi_ValueAssignCheck(interp, sval, lop);"
    },
    {
        "line": 217,
        "fullcodeline": "rc = Jsi_LogError(\"assign to a non-exist object\");"
    },
    {
        "line": 396,
        "fullcodeline": "Jsi_LogWarn(\"expected string or number before IN\");"
    },
    {
        "line": 561,
        "fullcodeline": "if (Jsi_ValueKeyPresent(interp, _jsi_STACKIDX(interp->framePtr->Sp-3), io->keys[io->iter],1))"
    },
    {
        "line": 679,
        "fullcodeline": "} else if (ip >= trylist->d.td.fstart && ip < trylist->d.td.fend) {"
    },
    {
        "line": 766,
        "fullcodeline": "if (_jsi_TOQ->vt != JSI_VT_OBJECT) Jsi_LogWarn(\"delete non-object key, ignore\");"
    },
    {
        "line": 767,
        "fullcodeline": "if (_jsi_TOQ->d.obj == currentScope->d.obj) Jsi_LogWarn(\"Delete arguments\");"
    },
    {
        "line": 841,
        "fullcodeline": "Jsi_ValueMakeStringDup(interp, &excpt, interp->errMsgBuf);"
    },
    {
        "line": 842,
        "fullcodeline": "interp->errMsgBuf[0] = 0;"
    },
    {
        "line": 881,
        "fullcodeline": "if (trylist == NULL) {"
    },
    {
        "line": 886,
        "fullcodeline": "if (trylist->type == jsi_TL_TRY) {"
    },
    {
        "line": 564,
        "fullcodeline": "while (io->cur < io->obj->arrCnt) {"
    },
    {
        "line": 568,
        "fullcodeline": "if (io->cur >= io->obj->arrCnt) {"
    },
    {
        "line": 588,
        "fullcodeline": "if (!io->isof)"
    },
    {
        "line": 595,
        "fullcodeline": "Jsi_ValueMakeStringKey(interp, &v, io->keys[io->iter]);"
    },
    {
        "line": 680,
        "fullcodeline": "pop_try(trylist);"
    },
    {
        "line": 754,
        "fullcodeline": "if (strict) rc = Jsi_LogWarn(\"delete not allowed\");"
    },
    {
        "line": 755,
        "fullcodeline": "} else if (v != currentScope) {"
    },
    {
        "line": 882,
        "fullcodeline": "ip = tojmp;"
    },
    {
        "line": 566,
        "fullcodeline": "io->cur++;"
    },
    {
        "line": 571,
        "fullcodeline": "io->iter = io->count;"
    },
    {
        "line": 589,
        "fullcodeline": "Jsi_ValueMakeNumber(interp, &v, io->cur-1);"
    },
    {
        "line": 681,
        "fullcodeline": "} else Jsi_LogBug(\"jmp within a try, but not in its scope?\");"
    },
    {
        "line": 756,
        "fullcodeline": "Jsi_ValueReset(interp,vPtr);     /* not allow to delete arguments */"
    },
    {
        "line": 887,
        "fullcodeline": "if (tojmp >= trylist->d.td.tstart && tojmp < trylist->d.td.fend) {"
    },
    {
        "line": 892,
        "fullcodeline": "if (ip >= trylist->d.td.tstart && ip < trylist->d.td.cend) {"
    },
    {
        "line": 906,
        "fullcodeline": "JSI_RESTORE_SCOPE();"
    },
    {
        "line": 907,
        "fullcodeline": "pop_try(trylist);"
    },
    {
        "line": 888,
        "fullcodeline": "ip = tojmp;"
    },
    {
        "line": 893,
        "fullcodeline": "trylist->d.td.last_op = jsi_LOP_JMP;"
    },
    {
        "line": 894,
        "fullcodeline": "trylist->d.td.ld.tojmp = tojmp;"
    },
    {
        "line": 896,
        "fullcodeline": "ip = trylist->d.td.fstart - 1;"
    },
    {
        "line": 902,
        "fullcodeline": "if (tojmp >= trylist->d.wd.wstart && tojmp < trylist->d.wd.wend) {"
    },
    {
        "line": 590,
        "fullcodeline": "else if (!io->obj->arr[io->cur-1])"
    },
    {
        "line": 903,
        "fullcodeline": "ip = tojmp;"
    },
    {
        "line": 574,
        "fullcodeline": "io->cur++;"
    },
    {
        "line": 591,
        "fullcodeline": "Jsi_ValueMakeNull(interp, &v);"
    },
    {
        "line": 759,
        "fullcodeline": "Jsi_LogWarn(\"Delete arguments\");"
    },
    {
        "line": 898,
        "fullcodeline": "} else if (ip >= trylist->d.td.fstart && ip < trylist->d.td.fend) {"
    },
    {
        "line": 593,
        "fullcodeline": "Jsi_ValueCopy(interp, v, io->obj->arr[io->cur-1]);"
    },
    {
        "line": 899,
        "fullcodeline": "pop_try(trylist);"
    },
    {
        "line": 900,
        "fullcodeline": "} else Jsi_LogBug(\"jmp within a try, but not in its scope?\");"
    }
]