[
    {
        "line": 3,
        "fullcodeline": "Jsi_HashEntry *hPtr = Jsi_HashEntryFind(interp->packageHash, name);"
    },
    {
        "line": 4,
        "fullcodeline": "if (hPtr && ((ptr = (jsi_PkgInfo*)Jsi_HashValueGet(hPtr)))) {"
    },
    {
        "line": 5,
        "fullcodeline": "Jsi_Obj *nobj = Jsi_ObjNew(interp);"
    },
    {
        "line": 6,
        "fullcodeline": "Jsi_ValueMakeObject(interp, ret, nobj);"
    },
    {
        "line": 7,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"name\", Jsi_ValueNewStringDup(interp, name), 0);"
    },
    {
        "line": 8,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"version\", Jsi_ValueNewNumber(interp, ptr->version), 0);"
    },
    {
        "line": 9,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"lastReq\", Jsi_ValueNewNumber(interp, ptr->lastReq), 0);"
    },
    {
        "line": 10,
        "fullcodeline": "char buf[JSI_MAX_NUMBER_STRING*2];"
    },
    {
        "line": 11,
        "fullcodeline": "jsi_VersionNormalize(ptr->version, buf, sizeof(buf));"
    },
    {
        "line": 12,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"verStr\", Jsi_ValueNewStringDup(interp, buf), 0);"
    },
    {
        "line": 13,
        "fullcodeline": "const char *cp = (ptr->loadFile?ptr->loadFile:\"\");"
    },
    {
        "line": 14,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"loadFile\", Jsi_ValueNewStringDup(interp, cp), 0);"
    },
    {
        "line": 15,
        "fullcodeline": "Jsi_Value *fval2, *fval = Jsi_NameLookup(interp, name);"
    },
    {
        "line": 18,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"func\", fval, 0);"
    },
    {
        "line": 31,
        "fullcodeline": "fval = interp->NullValue;"
    },
    {
        "line": 36,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"status\", fval, 0);"
    },
    {
        "line": 40,
        "fullcodeline": "fval = Jsi_ValueNew1(interp);"
    },
    {
        "line": 41,
        "fullcodeline": "Jsi_OptionsConf(interp, jsiModuleOptions, &ptr->popts.modConf, NULL, &fval, 0);"
    },
    {
        "line": 42,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"moduleOpts\", fval, 0);"
    },
    {
        "line": 43,
        "fullcodeline": "Jsi_DecrRefCount(interp, fval);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!fval || !Jsi_ValueIsFunction(interp, fval))"
    },
    {
        "line": 20,
        "fullcodeline": "if (!fval) fval = interp->NullValue;"
    },
    {
        "line": 21,
        "fullcodeline": "if (!Jsi_ValueIsObjType(interp, fval, JSI_OT_FUNCTION))"
    },
    {
        "line": 37,
        "fullcodeline": "if (fval != interp->NullValue)"
    },
    {
        "line": 17,
        "fullcodeline": "fval = Jsi_ValueNewNull(interp);"
    },
    {
        "line": 22,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"info\", fval, 0);"
    },
    {
        "line": 33,
        "fullcodeline": "fval = Jsi_ValueNew1(interp);"
    },
    {
        "line": 34,
        "fullcodeline": "Jsi_OptionsConf(interp, ptr->popts.spec, ptr->popts.data, NULL, &fval, 0);"
    },
    {
        "line": 38,
        "fullcodeline": "Jsi_DecrRefCount(interp, fval);"
    },
    {
        "line": 24,
        "fullcodeline": "fval2 = Jsi_ValueNew1(interp);"
    },
    {
        "line": 25,
        "fullcodeline": "Jsi_RC rc = Jsi_FunctionInvoke(interp, fval, NULL, &fval2, NULL);"
    },
    {
        "line": 28,
        "fullcodeline": "Jsi_ObjInsert(interp, nobj, \"info\", fval2, 0);"
    },
    {
        "line": 29,
        "fullcodeline": "Jsi_DecrRefCount(interp, fval2);"
    },
    {
        "line": 26,
        "fullcodeline": "if (rc != JSI_OK)"
    },
    {
        "line": 27,
        "fullcodeline": "Jsi_LogWarn(\"status call failed\");"
    }
]