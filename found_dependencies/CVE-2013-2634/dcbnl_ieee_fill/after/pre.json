[
    {
        "line": 5,
        "fullcodeline": "const struct dcbnl_rtnl_ops *ops = netdev->dcbnl_ops;"
    },
    {
        "line": 12,
        "fullcodeline": "ieee = nla_nest_start(skb, DCB_ATTR_IEEE);"
    },
    {
        "line": 46,
        "fullcodeline": "app = nla_nest_start(skb, DCB_ATTR_IEEE_APP_TABLE);"
    },
    {
        "line": 50,
        "fullcodeline": "spin_lock(&dcb_lock);"
    },
    {
        "line": 51,
        "fullcodeline": "list_for_each_entry(itr, &dcb_app_list, list) {"
    },
    {
        "line": 68,
        "fullcodeline": "nla_nest_end(skb, app);"
    },
    {
        "line": 98,
        "fullcodeline": "nla_nest_end(skb, ieee);"
    },
    {
        "line": 9,
        "fullcodeline": "if (nla_put_string(skb, DCB_ATTR_IFNAME, netdev->name))"
    },
    {
        "line": 13,
        "fullcodeline": "if (!ieee)"
    },
    {
        "line": 47,
        "fullcodeline": "if (!app)"
    },
    {
        "line": 99,
        "fullcodeline": "if (dcbx >= 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "memset(&ets, 0, sizeof(ets));"
    },
    {
        "line": 19,
        "fullcodeline": "err = ops->ieee_getets(netdev, &ets);"
    },
    {
        "line": 27,
        "fullcodeline": "memset(&maxrate, 0, sizeof(maxrate));"
    },
    {
        "line": 28,
        "fullcodeline": "err = ops->ieee_getmaxrate(netdev, &maxrate);"
    },
    {
        "line": 39,
        "fullcodeline": "memset(&pfc, 0, sizeof(pfc));"
    },
    {
        "line": 40,
        "fullcodeline": "err = ops->ieee_getpfc(netdev, &pfc);"
    },
    {
        "line": 52,
        "fullcodeline": "if (itr->ifindex == netdev->ifindex) {"
    },
    {
        "line": 63,
        "fullcodeline": "dcbx = netdev->dcbnl_ops->getdcbx(netdev);"
    },
    {
        "line": 73,
        "fullcodeline": "memset(&ets, 0, sizeof(ets));"
    },
    {
        "line": 74,
        "fullcodeline": "err = ops->ieee_peer_getets(netdev, &ets);"
    },
    {
        "line": 82,
        "fullcodeline": "memset(&pfc, 0, sizeof(pfc));"
    },
    {
        "line": 83,
        "fullcodeline": "err = ops->ieee_peer_getpfc(netdev, &pfc);"
    },
    {
        "line": 10,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 14,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 48,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 65,
        "fullcodeline": "dcbx = -EOPNOTSUPP;"
    },
    {
        "line": 90,
        "fullcodeline": "err = dcbnl_build_peer_app(netdev, skb,"
    },
    {
        "line": 100,
        "fullcodeline": "err = nla_put_u8(skb, DCB_ATTR_DCBX, dcbx);"
    },
    {
        "line": 20,
        "fullcodeline": "if (!err &&"
    },
    {
        "line": 21,
        "fullcodeline": "nla_put(skb, DCB_ATTR_IEEE_ETS, sizeof(ets), &ets))"
    },
    {
        "line": 41,
        "fullcodeline": "if (!err &&"
    },
    {
        "line": 42,
        "fullcodeline": "nla_put(skb, DCB_ATTR_IEEE_PFC, sizeof(pfc), &pfc))"
    },
    {
        "line": 53,
        "fullcodeline": "err = nla_put(skb, DCB_ATTR_IEEE_APP, sizeof(itr->app),"
    },
    {
        "line": 75,
        "fullcodeline": "if (!err &&"
    },
    {
        "line": 76,
        "fullcodeline": "nla_put(skb, DCB_ATTR_IEEE_PEER_ETS, sizeof(ets), &ets))"
    },
    {
        "line": 84,
        "fullcodeline": "if (!err &&"
    },
    {
        "line": 85,
        "fullcodeline": "nla_put(skb, DCB_ATTR_IEEE_PEER_PFC, sizeof(pfc), &pfc))"
    },
    {
        "line": 22,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 30,
        "fullcodeline": "err = nla_put(skb, DCB_ATTR_IEEE_MAXRATE,"
    },
    {
        "line": 43,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 77,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 86,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 95,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 102,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 57,
        "fullcodeline": "return -EMSGSIZE;"
    },
    {
        "line": 33,
        "fullcodeline": "return -EMSGSIZE;"
    }
]