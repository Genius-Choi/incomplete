[
    {
        "line": 4,
        "fullcodeline": "execution_info = await initializable.initialized().call()"
    },
    {
        "line": 5,
        "fullcodeline": "assert execution_info.result == (FALSE,)"
    },
    {
        "line": 10,
        "fullcodeline": "assert validity_info.result.response[0] == TRUE"
    },
    {
        "line": 12,
        "fullcodeline": "execution_info = await initializable.initialized().call()"
    },
    {
        "line": 13,
        "fullcodeline": "assert execution_info.result == (TRUE,)"
    },
    {
        "line": 16,
        "fullcodeline": "await assert_revert("
    },
    {
        "line": 2,
        "fullcodeline": "account, _, initializable, *_ = account_factory"
    },
    {
        "line": 7,
        "fullcodeline": "_, hash, signature = await signer.send_transactions(account, [(initializable.contract_address, 'initialize', [])])"
    },
    {
        "line": 9,
        "fullcodeline": "validity_info, *_ = await signer.send_transactions(account, [(account.contract_address, 'is_valid_signature', [hash, len(signature), *signature])])"
    },
    {
        "line": 17,
        "fullcodeline": "signer.send_transactions(account, [(account.contract_address, 'is_valid_signature', [hash-1, len(signature), *signature])]),"
    }
]