[
    {
        "line": 5,
        "fullcodeline": "Handle<JSObject> intern = runtime.makeHandle(JSObject::create(runtime));"
    },
    {
        "line": 6,
        "fullcodeline": "GCScope gcScope{runtime};"
    },
    {
        "line": 8,
        "fullcodeline": "DefinePropertyFlags constantDPF ="
    },
    {
        "line": 10,
        "fullcodeline": "constantDPF.enumerable = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "constantDPF.writable = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "constantDPF.configurable = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "auto defineInternMethod ="
    },
    {
        "line": 26,
        "fullcodeline": "auto defineInternMethodAndSymbol ="
    },
    {
        "line": 42,
        "fullcodeline": "(void)defineInternMethodAndSymbol;"
    },
    {
        "line": 49,
        "fullcodeline": "auto propRes = JSObject::getNamed_RJS("
    },
    {
        "line": 53,
        "fullcodeline": "assert("
    },
    {
        "line": 56,
        "fullcodeline": "auto putRes = JSObject::defineOwnProperty("
    },
    {
        "line": 62,
        "fullcodeline": "assert("
    },
    {
        "line": 65,
        "fullcodeline": "(void)putRes;"
    },
    {
        "line": 70,
        "fullcodeline": "defineInternMethod(P::hasPromise, hermesInternalHasPromise);"
    },
    {
        "line": 71,
        "fullcodeline": "defineInternMethod(P::enqueueJob, hermesInternalEnqueueJob);"
    },
    {
        "line": 72,
        "fullcodeline": "defineInternMethod("
    },
    {
        "line": 75,
        "fullcodeline": "defineInternMethod("
    },
    {
        "line": 78,
        "fullcodeline": "defineInternMethod(P::useEngineQueue, hermesInternalUseEngineQueue);"
    },
    {
        "line": 92,
        "fullcodeline": "defineInternMethod(P::getEpilogues, hermesInternalGetEpilogues);"
    },
    {
        "line": 93,
        "fullcodeline": "defineInternMethod("
    },
    {
        "line": 95,
        "fullcodeline": "defineInternMethod("
    },
    {
        "line": 97,
        "fullcodeline": "defineInternMethod(P::ttiReached, hermesInternalTTIReached);"
    },
    {
        "line": 98,
        "fullcodeline": "defineInternMethod(P::ttrcReached, hermesInternalTTRCReached);"
    },
    {
        "line": 99,
        "fullcodeline": "defineInternMethod(P::getFunctionLocation, hermesInternalGetFunctionLocation);"
    },
    {
        "line": 54,
        "fullcodeline": "propRes != ExecutionStatus::EXCEPTION && !(*propRes)->isUndefined() &&"
    },
    {
        "line": 63,
        "fullcodeline": "putRes != ExecutionStatus::EXCEPTION && *putRes &&"
    },
    {
        "line": 85,
        "fullcodeline": "if (!flags.enableHermesInternal) {"
    },
    {
        "line": 50,
        "fullcodeline": "runtime.makeHandle<JSObject>(runtime.stringPrototype),"
    },
    {
        "line": 59,
        "fullcodeline": "Predefined::getSymbolID(Predefined::concat),"
    },
    {
        "line": 61,
        "fullcodeline": "runtime.makeHandle(std::move(*propRes)));"
    },
    {
        "line": 104,
        "fullcodeline": "defineInternMethod("
    },
    {
        "line": 106,
        "fullcodeline": "defineInternMethod(P::getWeakSize, hermesInternalGetWeakSize);"
    },
    {
        "line": 107,
        "fullcodeline": "defineInternMethod("
    },
    {
        "line": 109,
        "fullcodeline": "defineInternMethodAndSymbol(\"isProxy\", hermesInternalIsProxy);"
    },
    {
        "line": 110,
        "fullcodeline": "defineInternMethod(P::drainJobs, hermesInternalDrainJobs);"
    }
]