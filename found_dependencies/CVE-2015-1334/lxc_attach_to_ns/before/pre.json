[
    {
        "line": 3,
        "fullcodeline": "char path[MAXPATHLEN];"
    },
    {
        "line": 8,
        "fullcodeline": "static char *ns[] = { \"user\", \"mnt\", \"pid\", \"uts\", \"ipc\", \"net\" };"
    },
    {
        "line": 9,
        "fullcodeline": "static int flags[] = {"
    },
    {
        "line": 13,
        "fullcodeline": "static const int size = sizeof(ns) / sizeof(char *);"
    },
    {
        "line": 14,
        "fullcodeline": "int fd[size];"
    },
    {
        "line": 18,
        "fullcodeline": "snprintf(path, MAXPATHLEN, \"/proc/%d/ns\", pid);"
    },
    {
        "line": 19,
        "fullcodeline": "if (access(path, X_OK)) {"
    },
    {
        "line": 24,
        "fullcodeline": "for (i = 0; i < size; i++) {"
    },
    {
        "line": 50,
        "fullcodeline": "for (i = 0; i < size; i++) {"
    },
    {
        "line": 20,
        "fullcodeline": "ERROR(\"Does this kernel version support 'attach' ?\");"
    },
    {
        "line": 33,
        "fullcodeline": "snprintf(path, MAXPATHLEN, \"/proc/%d/ns/%s\", pid, ns[i]);"
    },
    {
        "line": 34,
        "fullcodeline": "fd[i] = open(path, O_RDONLY | O_CLOEXEC);"
    },
    {
        "line": 62,
        "fullcodeline": "close(fd[i]);"
    },
    {
        "line": 21,
        "fullcodeline": "return -1;"
    },
    {
        "line": 35,
        "fullcodeline": "if (fd[i] < 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (which != -1 && !(which & flags[i])) {"
    },
    {
        "line": 29,
        "fullcodeline": "fd[i] = -1;"
    },
    {
        "line": 36,
        "fullcodeline": "saved_errno = errno;"
    },
    {
        "line": 51,
        "fullcodeline": "if (fd[i] >= 0 && setns(fd[i], 0) != 0) {"
    },
    {
        "line": 52,
        "fullcodeline": "saved_errno = errno;"
    },
    {
        "line": 41,
        "fullcodeline": "for (j = 0; j < i; j++)"
    },
    {
        "line": 46,
        "fullcodeline": "return -1;"
    },
    {
        "line": 54,
        "fullcodeline": "for (j = i; j < size; j++)"
    },
    {
        "line": 59,
        "fullcodeline": "return -1;"
    }
]