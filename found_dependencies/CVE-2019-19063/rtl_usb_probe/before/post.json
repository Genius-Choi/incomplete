[
    {
        "line": 6,
        "fullcodeline": "struct ieee80211_hw *hw = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "struct rtl_priv *rtlpriv = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "hw = ieee80211_alloc_hw(sizeof(struct rtl_priv) +"
    },
    {
        "line": 17,
        "fullcodeline": "rtlpriv = hw->priv;"
    },
    {
        "line": 18,
        "fullcodeline": "rtlpriv->hw = hw;"
    },
    {
        "line": 19,
        "fullcodeline": "rtlpriv->usb_data = kcalloc(RTL_USB_MAX_RX_COUNT, sizeof(u32),"
    },
    {
        "line": 26,
        "fullcodeline": "INIT_WORK(&rtlpriv->works.fill_h2c_cmd,"
    },
    {
        "line": 28,
        "fullcodeline": "INIT_WORK(&rtlpriv->works.lps_change_work,"
    },
    {
        "line": 31,
        "fullcodeline": "rtlpriv->usb_data_index = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "init_completion(&rtlpriv->firmware_loading_complete);"
    },
    {
        "line": 33,
        "fullcodeline": "SET_IEEE80211_DEV(hw, &intf->dev);"
    },
    {
        "line": 34,
        "fullcodeline": "udev = interface_to_usbdev(intf);"
    },
    {
        "line": 35,
        "fullcodeline": "usb_get_dev(udev);"
    },
    {
        "line": 36,
        "fullcodeline": "usb_priv = rtl_usbpriv(hw);"
    },
    {
        "line": 37,
        "fullcodeline": "memset(usb_priv, 0, sizeof(*usb_priv));"
    },
    {
        "line": 38,
        "fullcodeline": "usb_priv->dev.intf = intf;"
    },
    {
        "line": 39,
        "fullcodeline": "usb_priv->dev.udev = udev;"
    },
    {
        "line": 40,
        "fullcodeline": "usb_set_intfdata(intf, hw);"
    },
    {
        "line": 42,
        "fullcodeline": "rtlpriv->rtlhal.interface = INTF_USB;"
    },
    {
        "line": 43,
        "fullcodeline": "rtlpriv->cfg = rtl_hal_cfg;"
    },
    {
        "line": 44,
        "fullcodeline": "rtlpriv->intf_ops = &rtl_usb_ops;"
    },
    {
        "line": 46,
        "fullcodeline": "_rtl_usb_io_handler_init(&udev->dev, hw);"
    },
    {
        "line": 47,
        "fullcodeline": "rtlpriv->cfg->ops->read_chip_version(hw);"
    },
    {
        "line": 49,
        "fullcodeline": "rtlpriv->cfg->ops->read_eeprom_info(hw);"
    },
    {
        "line": 50,
        "fullcodeline": "err = _rtl_usb_init(hw);"
    },
    {
        "line": 53,
        "fullcodeline": "rtl_usb_init_sw(hw);"
    },
    {
        "line": 55,
        "fullcodeline": "err = rtl_init_core(hw);"
    },
    {
        "line": 64,
        "fullcodeline": "rtlpriv->cfg->ops->init_sw_leds(hw);"
    },
    {
        "line": 66,
        "fullcodeline": "err = ieee80211_register_hw(hw);"
    },
    {
        "line": 72,
        "fullcodeline": "rtlpriv->mac80211.mac80211_registered = 1;"
    },
    {
        "line": 74,
        "fullcodeline": "set_bit(RTL_STATUS_INTERFACE_START, &rtlpriv->status);"
    },
    {
        "line": 78,
        "fullcodeline": "rtl_deinit_core(hw);"
    },
    {
        "line": 80,
        "fullcodeline": "_rtl_usb_io_handler_release(hw);"
    },
    {
        "line": 81,
        "fullcodeline": "usb_put_dev(udev);"
    },
    {
        "line": 82,
        "fullcodeline": "complete(&rtlpriv->firmware_loading_complete);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!hw) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (!rtlpriv->usb_data)"
    },
    {
        "line": 60,
        "fullcodeline": "if (rtlpriv->cfg->ops->init_sw_vars(hw)) {"
    },
    {
        "line": 83,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 14,
        "fullcodeline": "WARN_ONCE(true, \"rtl_usb: ieee80211 alloc failed\\n\");"
    },
    {
        "line": 57,
        "fullcodeline": "pr_err(\"Can't allocate sw for mac80211\\n\");"
    },
    {
        "line": 61,
        "fullcodeline": "pr_err(\"Can't init_sw_vars\\n\");"
    },
    {
        "line": 68,
        "fullcodeline": "pr_err(\"Can't register mac80211 hw.\\n\");"
    },
    {
        "line": 69,
        "fullcodeline": "err = -ENODEV;"
    },
    {
        "line": 15,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 22,
        "fullcodeline": "return -ENOMEM;"
    }
]