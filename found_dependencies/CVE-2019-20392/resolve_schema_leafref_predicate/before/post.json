[
    {
        "line": 6,
        "fullcodeline": "int pke_len, sour_len, sour_pref_len, dest_len, dest_pref_len, pke_parsed, parsed = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "parsed += i;"
    },
    {
        "line": 17,
        "fullcodeline": "path += i;"
    },
    {
        "line": 25,
        "fullcodeline": "rc = lys_getnext_data(trg_mod, context_node, source, sour_len, LYS_LEAF | LYS_LEAFLIST, &src_node);"
    },
    {
        "line": 32,
        "fullcodeline": "dest_parent_times = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "pke_parsed = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "pke_parsed += i;"
    },
    {
        "line": 11,
        "fullcodeline": "if ((i = parse_path_predicate(path, &sour_pref, &sour_pref_len, &source, &sour_len, &path_key_expr,"
    },
    {
        "line": 34,
        "fullcodeline": "if ((i = parse_path_key_expr(path_key_expr, &dest_pref, &dest_pref_len, &dest, &dest_len,"
    },
    {
        "line": 41,
        "fullcodeline": "for (i = 0, dst_node = parent; i < dest_parent_times; ++i) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (dst_node->nodetype != src_node->nodetype) {"
    },
    {
        "line": 13,
        "fullcodeline": "LOGVAL(ctx, LYE_INCHAR, LY_VLOG_LYS, parent, path[-i], path-i);"
    },
    {
        "line": 21,
        "fullcodeline": "trg_mod = lyp_get_module(lys_node_module(parent), NULL, 0, sour_pref, sour_pref_len, 0);"
    },
    {
        "line": 27,
        "fullcodeline": "LOGVAL(ctx, LYE_NORESOLV, LY_VLOG_LYS, parent, \"leafref predicate\", path-parsed);"
    },
    {
        "line": 36,
        "fullcodeline": "LOGVAL(ctx, LYE_INCHAR, LY_VLOG_LYS, parent, path_key_expr[-i], path_key_expr-i);"
    },
    {
        "line": 68,
        "fullcodeline": "rc = lys_getnext_data(trg_mod, dst_node, dest, dest_len, LYS_CONTAINER | LYS_LIST | LYS_LEAF, &dst_node);"
    },
    {
        "line": 84,
        "fullcodeline": "pke_parsed += i;"
    },
    {
        "line": 89,
        "fullcodeline": "LOGVAL(ctx, LYE_NORESOLV, LY_VLOG_LYS, parent, \"leafref predicate\", path - parsed);"
    },
    {
        "line": 90,
        "fullcodeline": "LOGVAL(ctx, LYE_SPEC, LY_VLOG_PREV, NULL, \"Destination node is not a %s, but a %s.\","
    },
    {
        "line": 14,
        "fullcodeline": "return -parsed+i;"
    },
    {
        "line": 23,
        "fullcodeline": "trg_mod = lys_node_module(parent);"
    },
    {
        "line": 37,
        "fullcodeline": "return -parsed;"
    },
    {
        "line": 42,
        "fullcodeline": "if (!dst_node) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (dst_node->parent && (dst_node->parent->nodetype == LYS_AUGMENT)"
    },
    {
        "line": 59,
        "fullcodeline": "dst_node && !(dst_node->nodetype & (LYS_CONTAINER | LYS_LIST | LYS_ACTION | LYS_NOTIF | LYS_RPC));"
    },
    {
        "line": 60,
        "fullcodeline": "dst_node = lys_parent(dst_node));"
    },
    {
        "line": 74,
        "fullcodeline": "if (pke_len == pke_parsed) {"
    },
    {
        "line": 78,
        "fullcodeline": "if ((i = parse_path_key_expr(path_key_expr + pke_parsed, &dest_pref, &dest_pref_len, &dest, &dest_len,"
    },
    {
        "line": 91,
        "fullcodeline": "strnodetype(src_node->nodetype), strnodetype(dst_node->nodetype));"
    },
    {
        "line": 92,
        "fullcodeline": "return -parsed;"
    },
    {
        "line": 44,
        "fullcodeline": "LOGVAL(ctx, LYE_NORESOLV, LY_VLOG_LYS, parent, \"leafref predicate\", path_key_expr);"
    },
    {
        "line": 51,
        "fullcodeline": "LOGVAL(ctx, LYE_SPEC, LY_VLOG_LYS, dst_node->parent,"
    },
    {
        "line": 58,
        "fullcodeline": "for (dst_node = lys_parent(dst_node);"
    },
    {
        "line": 64,
        "fullcodeline": "trg_mod = lyp_get_module(lys_node_module(parent), NULL, 0, dest_pref, dest_pref_len, 0);"
    },
    {
        "line": 70,
        "fullcodeline": "LOGVAL(ctx, LYE_NORESOLV, LY_VLOG_LYS, parent, \"leafref predicate\", path_key_expr);"
    },
    {
        "line": 80,
        "fullcodeline": "LOGVAL(ctx, LYE_INCHAR, LY_VLOG_LYS, parent,"
    },
    {
        "line": 66,
        "fullcodeline": "trg_mod = lys_node_module(parent);"
    },
    {
        "line": 81,
        "fullcodeline": "(path_key_expr + pke_parsed)[-i], (path_key_expr + pke_parsed)-i);"
    },
    {
        "line": 82,
        "fullcodeline": "return -parsed;"
    },
    {
        "line": 49,
        "fullcodeline": "&& !((struct lys_node_augment *)dst_node->parent)->target) {"
    }
]