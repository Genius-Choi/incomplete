[
    {
        "line": 4,
        "fullcodeline": "int linearSample = (state.sample1 * coefficient[0] +"
    },
    {
        "line": 7,
        "fullcodeline": "linearSample += ((code & 0x08) ? (code - 0x10) : code) * state.delta;"
    },
    {
        "line": 9,
        "fullcodeline": "linearSample = clamp(linearSample, MIN_INT16, MAX_INT16);"
    },
    {
        "line": 11,
        "fullcodeline": "int delta = (state.delta * adaptationTable[code]) >> 8;"
    },
    {
        "line": 15,
        "fullcodeline": "state.delta = delta;"
    },
    {
        "line": 16,
        "fullcodeline": "state.sample2 = state.sample1;"
    },
    {
        "line": 17,
        "fullcodeline": "state.sample1 = linearSample;"
    },
    {
        "line": 12,
        "fullcodeline": "if (delta < 16)"
    },
    {
        "line": 19,
        "fullcodeline": "return static_cast<int16_t>(linearSample);"
    },
    {
        "line": 13,
        "fullcodeline": "delta = 16;"
    },
    {
        "line": 5,
        "fullcodeline": "state.sample2 * coefficient[1]) >> 8;"
    }
]