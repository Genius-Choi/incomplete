[
    {
        "line": 3,
        "fullcodeline": "char *encoded = NULL, *p = NULL, *e_tag = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "unsigned char *ciphertext = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "unsigned char tag[OIDC_CACHE_TAG_LEN];"
    },
    {
        "line": 9,
        "fullcodeline": "plaintext_len = strlen(plaintext) + 1;"
    },
    {
        "line": 10,
        "fullcodeline": "ciphertext = apr_pcalloc(r->pool,"
    },
    {
        "line": 13,
        "fullcodeline": "ciphertext_len = oidc_cache_crypto_encrypt_impl(r,"
    },
    {
        "line": 20,
        "fullcodeline": "encoded_len = oidc_base64url_encode(r, &encoded, (const char *) ciphertext,"
    },
    {
        "line": 22,
        "fullcodeline": "if (encoded_len > 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "(plaintext_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER)));"
    },
    {
        "line": 14,
        "fullcodeline": "(unsigned char *) plaintext, plaintext_len,"
    },
    {
        "line": 23,
        "fullcodeline": "p = encoded;"
    },
    {
        "line": 26,
        "fullcodeline": "e_tag_len = oidc_base64url_encode(r, &e_tag, (const char *) tag,"
    },
    {
        "line": 30,
        "fullcodeline": "encoded = apr_pcalloc(r->pool, encoded_len + 1 + e_tag_len + 1);"
    },
    {
        "line": 31,
        "fullcodeline": "memcpy(encoded, p, encoded_len);"
    },
    {
        "line": 32,
        "fullcodeline": "p = encoded + encoded_len;"
    },
    {
        "line": 33,
        "fullcodeline": "*p = OIDC_CHAR_DOT;"
    },
    {
        "line": 34,
        "fullcodeline": "p++;"
    },
    {
        "line": 37,
        "fullcodeline": "memcpy(p, e_tag, e_tag_len);"
    },
    {
        "line": 38,
        "fullcodeline": "encoded_len += e_tag_len + 1;"
    },
    {
        "line": 41,
        "fullcodeline": "encoded[encoded_len] = '\\0';"
    },
    {
        "line": 43,
        "fullcodeline": "*result = encoded;"
    }
]