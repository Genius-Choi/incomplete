[
    {
        "line": 3,
        "fullcodeline": "directory_config *dcfg = (directory_config *)apr_pcalloc(mp, sizeof(directory_config));"
    },
    {
        "line": 10,
        "fullcodeline": "dcfg->mp = mp;"
    },
    {
        "line": 11,
        "fullcodeline": "dcfg->is_enabled = NOT_SET;"
    },
    {
        "line": 13,
        "fullcodeline": "dcfg->reqbody_access = NOT_SET;"
    },
    {
        "line": 14,
        "fullcodeline": "dcfg->reqintercept_oe = NOT_SET;"
    },
    {
        "line": 15,
        "fullcodeline": "dcfg->reqbody_buffering = NOT_SET;"
    },
    {
        "line": 16,
        "fullcodeline": "dcfg->reqbody_inmemory_limit = NOT_SET;"
    },
    {
        "line": 17,
        "fullcodeline": "dcfg->reqbody_limit = NOT_SET;"
    },
    {
        "line": 18,
        "fullcodeline": "dcfg->reqbody_no_files_limit = NOT_SET;"
    },
    {
        "line": 19,
        "fullcodeline": "dcfg->resbody_access = NOT_SET;"
    },
    {
        "line": 21,
        "fullcodeline": "dcfg->debuglog_name = NOT_SET_P;"
    },
    {
        "line": 22,
        "fullcodeline": "dcfg->debuglog_level = NOT_SET;"
    },
    {
        "line": 23,
        "fullcodeline": "dcfg->debuglog_fd = NOT_SET_P;"
    },
    {
        "line": 25,
        "fullcodeline": "dcfg->of_limit = NOT_SET;"
    },
    {
        "line": 26,
        "fullcodeline": "dcfg->if_limit_action = NOT_SET;"
    },
    {
        "line": 27,
        "fullcodeline": "dcfg->of_limit_action = NOT_SET;"
    },
    {
        "line": 28,
        "fullcodeline": "dcfg->of_mime_types = NOT_SET_P;"
    },
    {
        "line": 29,
        "fullcodeline": "dcfg->of_mime_types_cleared = NOT_SET;"
    },
    {
        "line": 31,
        "fullcodeline": "dcfg->cookie_format = NOT_SET;"
    },
    {
        "line": 32,
        "fullcodeline": "dcfg->argument_separator = NOT_SET;"
    },
    {
        "line": 33,
        "fullcodeline": "dcfg->cookiev0_separator = NOT_SET_P;"
    },
    {
        "line": 35,
        "fullcodeline": "dcfg->rule_inheritance = NOT_SET;"
    },
    {
        "line": 36,
        "fullcodeline": "dcfg->rule_exceptions = apr_array_make(mp, 16, sizeof(rule_exception *));"
    },
    {
        "line": 37,
        "fullcodeline": "dcfg->hash_method = apr_array_make(mp, 16, sizeof(hash_method *));"
    },
    {
        "line": 40,
        "fullcodeline": "dcfg->auditlog_flag = NOT_SET;"
    },
    {
        "line": 41,
        "fullcodeline": "dcfg->auditlog_type = NOT_SET;"
    },
    {
        "line": 42,
        "fullcodeline": "dcfg->max_rule_time = NOT_SET;"
    },
    {
        "line": 43,
        "fullcodeline": "dcfg->auditlog_dirperms = NOT_SET;"
    },
    {
        "line": 44,
        "fullcodeline": "dcfg->auditlog_fileperms = NOT_SET;"
    },
    {
        "line": 45,
        "fullcodeline": "dcfg->auditlog_name = NOT_SET_P;"
    },
    {
        "line": 46,
        "fullcodeline": "dcfg->auditlog2_name = NOT_SET_P;"
    },
    {
        "line": 47,
        "fullcodeline": "dcfg->auditlog_fd = NOT_SET_P;"
    },
    {
        "line": 48,
        "fullcodeline": "dcfg->auditlog2_fd = NOT_SET_P;"
    },
    {
        "line": 49,
        "fullcodeline": "dcfg->auditlog_storage_dir = NOT_SET_P;"
    },
    {
        "line": 50,
        "fullcodeline": "dcfg->auditlog_parts = NOT_SET_P;"
    },
    {
        "line": 51,
        "fullcodeline": "dcfg->auditlog_relevant_regex = NOT_SET_P;"
    },
    {
        "line": 53,
        "fullcodeline": "dcfg->ruleset = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "dcfg->tmp_dir = NOT_SET_P;"
    },
    {
        "line": 57,
        "fullcodeline": "dcfg->upload_dir = NOT_SET_P;"
    },
    {
        "line": 58,
        "fullcodeline": "dcfg->upload_keep_files = NOT_SET;"
    },
    {
        "line": 59,
        "fullcodeline": "dcfg->upload_validates_files = NOT_SET;"
    },
    {
        "line": 60,
        "fullcodeline": "dcfg->upload_filemode = NOT_SET;"
    },
    {
        "line": 61,
        "fullcodeline": "dcfg->upload_file_limit = NOT_SET;"
    },
    {
        "line": 64,
        "fullcodeline": "dcfg->tmp_chain_starter = NULL;"
    },
    {
        "line": 65,
        "fullcodeline": "dcfg->tmp_default_actionset = NULL;"
    },
    {
        "line": 66,
        "fullcodeline": "dcfg->tmp_rule_placeholders = NULL;"
    },
    {
        "line": 69,
        "fullcodeline": "dcfg->data_dir = NOT_SET_P;"
    },
    {
        "line": 70,
        "fullcodeline": "dcfg->webappid = NOT_SET_P;"
    },
    {
        "line": 71,
        "fullcodeline": "dcfg->sensor_id = NOT_SET_P;"
    },
    {
        "line": 72,
        "fullcodeline": "dcfg->httpBlkey = NOT_SET_P;"
    },
    {
        "line": 75,
        "fullcodeline": "dcfg->content_injection_enabled = NOT_SET;"
    },
    {
        "line": 78,
        "fullcodeline": "dcfg->stream_inbody_inspection = NOT_SET;"
    },
    {
        "line": 79,
        "fullcodeline": "dcfg->stream_outbody_inspection = NOT_SET;"
    },
    {
        "line": 82,
        "fullcodeline": "dcfg->geo = NOT_SET_P;"
    },
    {
        "line": 85,
        "fullcodeline": "dcfg->gsb = NOT_SET_P;"
    },
    {
        "line": 88,
        "fullcodeline": "dcfg->u_map = NOT_SET_P;"
    },
    {
        "line": 91,
        "fullcodeline": "dcfg->cache_trans = NOT_SET;"
    },
    {
        "line": 92,
        "fullcodeline": "dcfg->cache_trans_incremental = NOT_SET;"
    },
    {
        "line": 93,
        "fullcodeline": "dcfg->cache_trans_min = NOT_SET;"
    },
    {
        "line": 94,
        "fullcodeline": "dcfg->cache_trans_max = NOT_SET;"
    },
    {
        "line": 95,
        "fullcodeline": "dcfg->cache_trans_maxitems = NOT_SET;"
    },
    {
        "line": 98,
        "fullcodeline": "dcfg->rule_id_htab = apr_hash_make(mp);"
    },
    {
        "line": 99,
        "fullcodeline": "dcfg->component_signatures = apr_array_make(mp, 16, sizeof(char *));"
    },
    {
        "line": 101,
        "fullcodeline": "dcfg->request_encoding = NOT_SET_P;"
    },
    {
        "line": 102,
        "fullcodeline": "dcfg->disable_backend_compression = NOT_SET;"
    },
    {
        "line": 105,
        "fullcodeline": "dcfg->col_timeout = NOT_SET;"
    },
    {
        "line": 107,
        "fullcodeline": "dcfg->crypto_key = NOT_SET_P;"
    },
    {
        "line": 108,
        "fullcodeline": "dcfg->crypto_key_len = NOT_SET;"
    },
    {
        "line": 109,
        "fullcodeline": "dcfg->crypto_key_add = NOT_SET;"
    },
    {
        "line": 110,
        "fullcodeline": "dcfg->crypto_param_name = NOT_SET_P;"
    },
    {
        "line": 111,
        "fullcodeline": "dcfg->hash_is_enabled = NOT_SET;"
    },
    {
        "line": 112,
        "fullcodeline": "dcfg->hash_enforcement = NOT_SET;"
    },
    {
        "line": 113,
        "fullcodeline": "dcfg->crypto_hash_href_rx = NOT_SET;"
    },
    {
        "line": 114,
        "fullcodeline": "dcfg->crypto_hash_faction_rx = NOT_SET;"
    },
    {
        "line": 115,
        "fullcodeline": "dcfg->crypto_hash_location_rx = NOT_SET;"
    },
    {
        "line": 116,
        "fullcodeline": "dcfg->crypto_hash_iframesrc_rx = NOT_SET;"
    },
    {
        "line": 117,
        "fullcodeline": "dcfg->crypto_hash_framesrc_rx = NOT_SET;"
    },
    {
        "line": 118,
        "fullcodeline": "dcfg->crypto_hash_href_pm = NOT_SET;"
    },
    {
        "line": 119,
        "fullcodeline": "dcfg->crypto_hash_faction_pm = NOT_SET;"
    },
    {
        "line": 120,
        "fullcodeline": "dcfg->crypto_hash_location_pm = NOT_SET;"
    },
    {
        "line": 121,
        "fullcodeline": "dcfg->crypto_hash_iframesrc_pm = NOT_SET;"
    },
    {
        "line": 122,
        "fullcodeline": "dcfg->crypto_hash_framesrc_pm = NOT_SET;"
    },
    {
        "line": 4,
        "fullcodeline": "if (dcfg == NULL) return NULL;"
    }
]