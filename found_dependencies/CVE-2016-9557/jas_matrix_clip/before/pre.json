[
    {
        "line": 11,
        "fullcodeline": "if (jas_matrix_numrows(matrix) > 0 && jas_matrix_numcols(matrix) > 0) {"
    },
    {
        "line": 12,
        "fullcodeline": "assert(matrix->rows_);"
    },
    {
        "line": 13,
        "fullcodeline": "rowstep = jas_matrix_rowstep(matrix);"
    },
    {
        "line": 14,
        "fullcodeline": "for (i = matrix->numrows_, rowstart = matrix->rows_[0]; i > 0; --i,"
    },
    {
        "line": 15,
        "fullcodeline": "rowstart += rowstep) {"
    },
    {
        "line": 17,
        "fullcodeline": "for (j = matrix->numcols_, data = rowstart; j > 0; --j,"
    },
    {
        "line": 18,
        "fullcodeline": "++data) {"
    },
    {
        "line": 19,
        "fullcodeline": "v = *data;"
    },
    {
        "line": 20,
        "fullcodeline": "if (v < minval) {"
    },
    {
        "line": 21,
        "fullcodeline": "*data = minval;"
    },
    {
        "line": 22,
        "fullcodeline": "} else if (v > maxval) {"
    },
    {
        "line": 23,
        "fullcodeline": "*data = maxval;"
    }
]