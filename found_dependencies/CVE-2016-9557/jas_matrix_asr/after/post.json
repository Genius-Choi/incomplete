[
    {
        "line": 9,
        "fullcodeline": "assert(n >= 0);"
    },
    {
        "line": 10,
        "fullcodeline": "if (jas_matrix_numrows(matrix) > 0 && jas_matrix_numcols(matrix) > 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "assert(matrix->rows_);"
    },
    {
        "line": 12,
        "fullcodeline": "rowstep = jas_matrix_rowstep(matrix);"
    },
    {
        "line": 13,
        "fullcodeline": "for (i = matrix->numrows_, rowstart = matrix->rows_[0]; i > 0; --i,"
    },
    {
        "line": 14,
        "fullcodeline": "rowstart += rowstep) {"
    },
    {
        "line": 15,
        "fullcodeline": "for (j = matrix->numcols_, data = rowstart; j > 0; --j,"
    },
    {
        "line": 16,
        "fullcodeline": "++data) {"
    },
    {
        "line": 18,
        "fullcodeline": "*data = jas_seqent_asr(*data, n);"
    }
]