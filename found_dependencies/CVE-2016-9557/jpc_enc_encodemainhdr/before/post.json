[
    {
        "line": 13,
        "fullcodeline": "jpc_tsfb_band_t bandinfos[JPC_MAXBANDS];"
    },
    {
        "line": 23,
        "fullcodeline": "char buf[1024];"
    },
    {
        "line": 26,
        "fullcodeline": "cp = enc->cp;"
    },
    {
        "line": 28,
        "fullcodeline": "startoff = jas_stream_getrwcount(enc->out);"
    },
    {
        "line": 38,
        "fullcodeline": "jpc_ms_destroy(enc->mrk);"
    },
    {
        "line": 39,
        "fullcodeline": "enc->mrk = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "siz->caps = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "siz->xoff = cp->imgareatlx;"
    },
    {
        "line": 48,
        "fullcodeline": "siz->yoff = cp->imgareatly;"
    },
    {
        "line": 49,
        "fullcodeline": "siz->width = cp->refgrdwidth;"
    },
    {
        "line": 50,
        "fullcodeline": "siz->height = cp->refgrdheight;"
    },
    {
        "line": 51,
        "fullcodeline": "siz->tilexoff = cp->tilegrdoffx;"
    },
    {
        "line": 52,
        "fullcodeline": "siz->tileyoff = cp->tilegrdoffy;"
    },
    {
        "line": 53,
        "fullcodeline": "siz->tilewidth = cp->tilewidth;"
    },
    {
        "line": 54,
        "fullcodeline": "siz->tileheight = cp->tileheight;"
    },
    {
        "line": 55,
        "fullcodeline": "siz->numcomps = cp->numcmpts;"
    },
    {
        "line": 56,
        "fullcodeline": "siz->comps = jas_alloc2(siz->numcomps, sizeof(jpc_sizcomp_t));"
    },
    {
        "line": 57,
        "fullcodeline": "assert(siz->comps);"
    },
    {
        "line": 58,
        "fullcodeline": "for (i = 0; i < JAS_CAST(int, cp->numcmpts); ++i) {"
    },
    {
        "line": 68,
        "fullcodeline": "jpc_ms_destroy(enc->mrk);"
    },
    {
        "line": 69,
        "fullcodeline": "enc->mrk = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "sprintf(buf, \"Creator: JasPer Version %s\", jas_getversion());"
    },
    {
        "line": 76,
        "fullcodeline": "com->len = JAS_CAST(uint_fast16_t, strlen(buf));"
    },
    {
        "line": 77,
        "fullcodeline": "com->regid = JPC_COM_LATIN;"
    },
    {
        "line": 85,
        "fullcodeline": "jpc_ms_destroy(enc->mrk);"
    },
    {
        "line": 86,
        "fullcodeline": "enc->mrk = 0;"
    },
    {
        "line": 102,
        "fullcodeline": "tcp = &cp->tcp;"
    },
    {
        "line": 103,
        "fullcodeline": "tccp = &cp->tccp;"
    },
    {
        "line": 133,
        "fullcodeline": "cod->csty = cp->tccp.csty | cp->tcp.csty;"
    },
    {
        "line": 134,
        "fullcodeline": "cod->compparms.csty = cp->tccp.csty | cp->tcp.csty;"
    },
    {
        "line": 135,
        "fullcodeline": "cod->compparms.numdlvls = cp->tccp.maxrlvls - 1;"
    },
    {
        "line": 136,
        "fullcodeline": "cod->compparms.numrlvls = cp->tccp.maxrlvls;"
    },
    {
        "line": 139,
        "fullcodeline": "cod->compparms.cblkwidthval = JPC_COX_CBLKSIZEEXPN(cp->tccp.cblkwidthexpn);"
    },
    {
        "line": 140,
        "fullcodeline": "cod->compparms.cblkheightval = JPC_COX_CBLKSIZEEXPN(cp->tccp.cblkheightexpn);"
    },
    {
        "line": 143,
        "fullcodeline": "cod->mctrans = (cp->tcp.mctid != JPC_MCT_NONE);"
    },
    {
        "line": 154,
        "fullcodeline": "jpc_ms_destroy(enc->mrk);"
    },
    {
        "line": 155,
        "fullcodeline": "enc->mrk = 0;"
    },
    {
        "line": 161,
        "fullcodeline": "qcd->compparms.qntsty = (tccp->qmfbid == JPC_COX_INS) ?"
    },
    {
        "line": 170,
        "fullcodeline": "qcd->compparms.stepsizes = 0;"
    },
    {
        "line": 171,
        "fullcodeline": "jpc_ms_destroy(enc->mrk);"
    },
    {
        "line": 172,
        "fullcodeline": "enc->mrk = 0;"
    },
    {
        "line": 174,
        "fullcodeline": "tccp = &cp->tccp;"
    },
    {
        "line": 196,
        "fullcodeline": "mainhdrlen = jas_stream_getrwcount(enc->out) - startoff;"
    },
    {
        "line": 197,
        "fullcodeline": "enc->len += mainhdrlen;"
    },
    {
        "line": 31,
        "fullcodeline": "if (!(enc->mrk = jpc_ms_create(JPC_MS_SOC))) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (jpc_putms(enc->out, enc->cstate, enc->mrk)) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (!(enc->mrk = jpc_ms_create(JPC_MS_SIZ))) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (jpc_putms(enc->out, enc->cstate, enc->mrk)) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (!(enc->mrk = jpc_ms_create(JPC_MS_COM))) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (jpc_putms(enc->out, enc->cstate, enc->mrk)) {"
    },
    {
        "line": 104,
        "fullcodeline": "for (cmptno = 0; cmptno < cp->numcmpts; ++cmptno) {"
    },
    {
        "line": 129,
        "fullcodeline": "if (!(enc->mrk = jpc_ms_create(JPC_MS_COD))) {"
    },
    {
        "line": 144,
        "fullcodeline": "if (tccp->csty & JPC_COX_PRT) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (jpc_putms(enc->out, enc->cstate, enc->mrk)) {"
    },
    {
        "line": 157,
        "fullcodeline": "if (!(enc->mrk = jpc_ms_create(JPC_MS_QCD))) {"
    },
    {
        "line": 166,
        "fullcodeline": "if (jpc_putms(enc->out, enc->cstate, enc->mrk)) {"
    },
    {
        "line": 175,
        "fullcodeline": "for (cmptno = 1; cmptno < cp->numcmpts; ++cmptno) {"
    },
    {
        "line": 198,
        "fullcodeline": "if (enc->cp->totalsize != UINT_FAST32_MAX) {"
    },
    {
        "line": 35,
        "fullcodeline": "jas_eprintf(\"cannot write SOC marker\\n\");"
    },
    {
        "line": 65,
        "fullcodeline": "jas_eprintf(\"cannot write SIZ marker\\n\");"
    },
    {
        "line": 79,
        "fullcodeline": "abort();"
    },
    {
        "line": 82,
        "fullcodeline": "jas_eprintf(\"cannot write COM marker\\n\");"
    },
    {
        "line": 105,
        "fullcodeline": "tsfb = jpc_cod_gettsfb(tccp->qmfbid, tccp->maxrlvls - 1);"
    },
    {
        "line": 106,
        "fullcodeline": "jpc_tsfb_getbands(tsfb, 0, 0, 1 << tccp->maxrlvls, 1 << tccp->maxrlvls,"
    },
    {
        "line": 108,
        "fullcodeline": "jpc_tsfb_destroy(tsfb);"
    },
    {
        "line": 109,
        "fullcodeline": "mctsynweight = jpc_mct_getsynweight(tcp->mctid, cmptno);"
    },
    {
        "line": 110,
        "fullcodeline": "numbands = 3 * tccp->maxrlvls - 2;"
    },
    {
        "line": 126,
        "fullcodeline": "cp->ccps[cmptno].numstepsizes = numbands;"
    },
    {
        "line": 151,
        "fullcodeline": "jas_eprintf(\"cannot write COD marker\\n\");"
    },
    {
        "line": 180,
        "fullcodeline": "qcc->compno = cmptno;"
    },
    {
        "line": 181,
        "fullcodeline": "qcc->compparms.qntsty = (tccp->qmfbid == JPC_COX_INS) ?"
    },
    {
        "line": 185,
        "fullcodeline": "qcc->compparms.stepsizes = cp->ccps[cmptno].stepsizes;"
    },
    {
        "line": 190,
        "fullcodeline": "qcc->compparms.stepsizes = 0;"
    },
    {
        "line": 191,
        "fullcodeline": "jpc_ms_destroy(enc->mrk);"
    },
    {
        "line": 192,
        "fullcodeline": "enc->mrk = 0;"
    },
    {
        "line": 200,
        "fullcodeline": "overhead = mainhdrlen + MAINTLRLEN;"
    },
    {
        "line": 201,
        "fullcodeline": "enc->mainbodysize = (enc->cp->totalsize >= overhead) ?"
    },
    {
        "line": 32,
        "fullcodeline": "return -1;"
    },
    {
        "line": 36,
        "fullcodeline": "return -1;"
    },
    {
        "line": 43,
        "fullcodeline": "return -1;"
    },
    {
        "line": 66,
        "fullcodeline": "return -1;"
    },
    {
        "line": 72,
        "fullcodeline": "return -1;"
    },
    {
        "line": 83,
        "fullcodeline": "return -1;"
    },
    {
        "line": 111,
        "fullcodeline": "for (bandno = 0, bandinfo = bandinfos; bandno < numbands;"
    },
    {
        "line": 112,
        "fullcodeline": "++bandno, ++bandinfo) {"
    },
    {
        "line": 130,
        "fullcodeline": "return -1;"
    },
    {
        "line": 145,
        "fullcodeline": "for (rlvlno = 0; rlvlno < tccp->maxrlvls; ++rlvlno) {"
    },
    {
        "line": 152,
        "fullcodeline": "return -1;"
    },
    {
        "line": 158,
        "fullcodeline": "return -1;"
    },
    {
        "line": 167,
        "fullcodeline": "return -1;"
    },
    {
        "line": 176,
        "fullcodeline": "if (!(enc->mrk = jpc_ms_create(JPC_MS_QCC))) {"
    },
    {
        "line": 186,
        "fullcodeline": "if (jpc_putms(enc->out, enc->cstate, enc->mrk)) {"
    },
    {
        "line": 204,
        "fullcodeline": "enc->mainbodysize = UINT_FAST32_MAX;"
    },
    {
        "line": 113,
        "fullcodeline": "rlvlno = (bandno) ? ((bandno - 1) / 3 + 1) : 0;"
    },
    {
        "line": 114,
        "fullcodeline": "analgain = JPC_NOMINALGAIN(tccp->qmfbid, tccp->maxrlvls,"
    },
    {
        "line": 122,
        "fullcodeline": "cp->ccps[cmptno].stepsizes[bandno] ="
    },
    {
        "line": 202,
        "fullcodeline": "(enc->cp->totalsize - overhead) : 0;"
    },
    {
        "line": 116,
        "fullcodeline": "if (!tcp->intmode) {"
    },
    {
        "line": 123,
        "fullcodeline": "jpc_abstorelstepsize(absstepsize,"
    },
    {
        "line": 177,
        "fullcodeline": "return -1;"
    },
    {
        "line": 187,
        "fullcodeline": "return -1;"
    },
    {
        "line": 117,
        "fullcodeline": "absstepsize = jpc_fix_div(jpc_inttofix(1 <<"
    },
    {
        "line": 124,
        "fullcodeline": "cp->ccps[cmptno].prec + analgain);"
    },
    {
        "line": 120,
        "fullcodeline": "absstepsize = jpc_inttofix(1);"
    },
    {
        "line": 118,
        "fullcodeline": "(analgain + 1)), bandinfo->synenergywt);"
    }
]