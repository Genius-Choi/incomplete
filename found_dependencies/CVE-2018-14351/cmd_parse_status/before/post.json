[
    {
        "line": 3,
        "fullcodeline": "char *value = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "struct Buffy *inc = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "struct ImapStatus *status = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "short new = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "short new_msg_count = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "char *mailbox = imap_next_word(s);"
    },
    {
        "line": 35,
        "fullcodeline": "status = imap_mboxcache_get(idata, mailbox, 1);"
    },
    {
        "line": 36,
        "fullcodeline": "olduv = status->uidvalidity;"
    },
    {
        "line": 37,
        "fullcodeline": "oldun = status->uidnext;"
    },
    {
        "line": 75,
        "fullcodeline": "mutt_debug(3, \"%s (UIDVALIDITY: %u, UIDNEXT: %u) %d messages, %d recent, %d unseen\\n\","
    },
    {
        "line": 86,
        "fullcodeline": "mutt_debug(3, \"Running default STATUS handler\\n\");"
    },
    {
        "line": 15,
        "fullcodeline": "if (imap_get_literal_count(mailbox, &litlen) == 0)"
    },
    {
        "line": 39,
        "fullcodeline": "if (*s++ != '(')"
    },
    {
        "line": 44,
        "fullcodeline": "while (*s && *s != ')')"
    },
    {
        "line": 80,
        "fullcodeline": "if (idata->cmddata && idata->cmdtype == IMAP_CT_STATUS)"
    },
    {
        "line": 89,
        "fullcodeline": "for (inc = Incoming; inc; inc = inc->next)"
    },
    {
        "line": 22,
        "fullcodeline": "mailbox = idata->buf;"
    },
    {
        "line": 23,
        "fullcodeline": "s = mailbox + litlen;"
    },
    {
        "line": 24,
        "fullcodeline": "*s = '\\0';"
    },
    {
        "line": 25,
        "fullcodeline": "s++;"
    },
    {
        "line": 26,
        "fullcodeline": "SKIPWS(s);"
    },
    {
        "line": 41,
        "fullcodeline": "mutt_debug(1, \"Error parsing STATUS\\n\");"
    },
    {
        "line": 46,
        "fullcodeline": "value = imap_next_word(s);"
    },
    {
        "line": 48,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "const unsigned long ulcount = strtoul(value, &value, 10);"
    },
    {
        "line": 55,
        "fullcodeline": "const unsigned int count = (unsigned int) ulcount;"
    },
    {
        "line": 71,
        "fullcodeline": "s = value;"
    },
    {
        "line": 82,
        "fullcodeline": "memcpy(idata->cmddata, status, sizeof(struct ImapStatus));"
    },
    {
        "line": 160,
        "fullcodeline": "FREE(&mx.mbox);"
    },
    {
        "line": 17,
        "fullcodeline": "if (imap_cmd_step(idata) != IMAP_CMD_CONTINUE)"
    },
    {
        "line": 30,
        "fullcodeline": "s = imap_next_word(mailbox);"
    },
    {
        "line": 31,
        "fullcodeline": "*(s - 1) = '\\0';"
    },
    {
        "line": 32,
        "fullcodeline": "imap_unmunge_mbox_name(idata, mailbox);"
    },
    {
        "line": 50,
        "fullcodeline": "if (((errno == ERANGE) && (ulcount == ULONG_MAX)) || ((unsigned int) ulcount != ulcount))"
    },
    {
        "line": 57,
        "fullcodeline": "if (mutt_str_strncmp(\"MESSAGES\", s, 8) == 0)"
    },
    {
        "line": 72,
        "fullcodeline": "if (*s && *s != ')')"
    },
    {
        "line": 91,
        "fullcodeline": "if (inc->magic != MUTT_IMAP)"
    },
    {
        "line": 94,
        "fullcodeline": "if (imap_parse_path(inc->path, &mx) < 0)"
    },
    {
        "line": 19,
        "fullcodeline": "idata->status = IMAP_FATAL;"
    },
    {
        "line": 52,
        "fullcodeline": "mutt_debug(1, \"Error parsing STATUS number\\n\");"
    },
    {
        "line": 59,
        "fullcodeline": "status->messages = count;"
    },
    {
        "line": 60,
        "fullcodeline": "new_msg_count = 1;"
    },
    {
        "line": 73,
        "fullcodeline": "s = imap_next_word(s);"
    },
    {
        "line": 96,
        "fullcodeline": "mutt_debug(1, \"Error parsing mailbox %s, skipping\\n\", inc->path);"
    },
    {
        "line": 157,
        "fullcodeline": "FREE(&value);"
    },
    {
        "line": 111,
        "fullcodeline": "if (value && (imap_mxcmp(mailbox, value) == 0))"
    },
    {
        "line": 62,
        "fullcodeline": "else if (mutt_str_strncmp(\"RECENT\", s, 6) == 0)"
    },
    {
        "line": 104,
        "fullcodeline": "value = mutt_str_strdup(mx.mbox);"
    },
    {
        "line": 105,
        "fullcodeline": "imap_fix_path(idata, mx.mbox, value, mutt_str_strlen(value) + 1);"
    },
    {
        "line": 106,
        "fullcodeline": "FREE(&mx.mbox);"
    },
    {
        "line": 113,
        "fullcodeline": "mutt_debug(3, \"Found %s in buffy list (OV: %u ON: %u U: %d)\\n\", mailbox,"
    },
    {
        "line": 141,
        "fullcodeline": "inc->new = new;"
    },
    {
        "line": 144,
        "fullcodeline": "inc->msg_unread = status->unseen;"
    },
    {
        "line": 153,
        "fullcodeline": "FREE(&value);"
    },
    {
        "line": 63,
        "fullcodeline": "status->recent = count;"
    },
    {
        "line": 109,
        "fullcodeline": "value = mutt_str_strdup(\"INBOX\");"
    },
    {
        "line": 143,
        "fullcodeline": "inc->msg_count = status->messages;"
    },
    {
        "line": 150,
        "fullcodeline": "status->uidnext = oldun;"
    },
    {
        "line": 64,
        "fullcodeline": "else if (mutt_str_strncmp(\"UIDNEXT\", s, 7) == 0)"
    },
    {
        "line": 118,
        "fullcodeline": "if (olduv && olduv == status->uidvalidity)"
    },
    {
        "line": 132,
        "fullcodeline": "new = (status->unseen > 0);"
    },
    {
        "line": 65,
        "fullcodeline": "status->uidnext = count;"
    },
    {
        "line": 120,
        "fullcodeline": "if (oldun < status->uidnext)"
    },
    {
        "line": 66,
        "fullcodeline": "else if (mutt_str_strncmp(\"UIDVALIDITY\", s, 11) == 0)"
    },
    {
        "line": 121,
        "fullcodeline": "new = (status->unseen > 0);"
    },
    {
        "line": 123,
        "fullcodeline": "else if (!olduv && !oldun)"
    },
    {
        "line": 67,
        "fullcodeline": "status->uidvalidity = count;"
    },
    {
        "line": 126,
        "fullcodeline": "new = (status->recent > 0);"
    },
    {
        "line": 129,
        "fullcodeline": "new = (status->unseen > 0);"
    },
    {
        "line": 68,
        "fullcodeline": "else if (mutt_str_strncmp(\"UNSEEN\", s, 6) == 0)"
    },
    {
        "line": 69,
        "fullcodeline": "status->unseen = count;"
    }
]