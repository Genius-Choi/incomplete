[
    {
        "line": 11,
        "fullcodeline": "std::cout << \"[\" << cl->getClientIP() << \"] \" << req->methodIntToStr(req->getMethod()) << \" \" << req->getRequestUri() << std::endl;"
    },
    {
        "line": 19,
        "fullcodeline": "ResourceHost* resHost = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "std::string host = \"\";"
    },
    {
        "line": 4,
        "fullcodeline": "if (!req->parse()) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (resHost == NULL) {"
    },
    {
        "line": 49,
        "fullcodeline": "switch (req->getMethod()) {"
    },
    {
        "line": 5,
        "fullcodeline": "std::cout << \"[\" << cl->getClientIP() << \"] There was an error processing the request of type: \" << req->methodIntToStr(req->getMethod()) << std::endl;"
    },
    {
        "line": 6,
        "fullcodeline": "std::cout << req->getParseError() << std::endl;"
    },
    {
        "line": 7,
        "fullcodeline": "sendStatusResponse(cl, Status(BAD_REQUEST), req->getParseError());"
    },
    {
        "line": 23,
        "fullcodeline": "if (req->getVersion().compare(HTTP_VERSION_11) == 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "host = req->getHeaderValue(\"Host\");"
    },
    {
        "line": 31,
        "fullcodeline": "std::unordered_map<std::string, ResourceHost*>::const_iterator it = vhosts.find(host);"
    },
    {
        "line": 50,
        "fullcodeline": "case Method(HEAD):"
    },
    {
        "line": 51,
        "fullcodeline": "case Method(GET):"
    },
    {
        "line": 54,
        "fullcodeline": "case Method(OPTIONS):"
    },
    {
        "line": 57,
        "fullcodeline": "case Method(TRACE):"
    },
    {
        "line": 33,
        "fullcodeline": "if (it != vhosts.end())"
    },
    {
        "line": 44,
        "fullcodeline": "sendStatusResponse(cl, Status(BAD_REQUEST), \"Invalid/No Host specified: \" + host);"
    },
    {
        "line": 61,
        "fullcodeline": "std::cout << \"[\" << cl->getClientIP() << \"] Could not handle or determine request of type \" << req->methodIntToStr(req->getMethod()) << std::endl;"
    },
    {
        "line": 62,
        "fullcodeline": "sendStatusResponse(cl, Status(NOT_IMPLEMENTED));"
    },
    {
        "line": 27,
        "fullcodeline": "if (host.find(\":\") == std::string::npos) {"
    },
    {
        "line": 28,
        "fullcodeline": "host.append(\":\" + std::to_string(listenPort));"
    },
    {
        "line": 34,
        "fullcodeline": "resHost = it->second;"
    },
    {
        "line": 38,
        "fullcodeline": "if (hostList.size() > 0)"
    },
    {
        "line": 39,
        "fullcodeline": "resHost = hostList[0];"
    }
]