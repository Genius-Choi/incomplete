[
    {
        "line": 2,
        "fullcodeline": "const int ver_cmd = buf[PROXY_PROTO_V2_SIGNATURE_LEN];"
    },
    {
        "line": 3,
        "fullcodeline": "uint8_t upper_byte = buf[PROXY_PROTO_V2_HEADER_LEN - 2];"
    },
    {
        "line": 4,
        "fullcodeline": "uint8_t lower_byte = buf[PROXY_PROTO_V2_HEADER_LEN - 1];"
    },
    {
        "line": 5,
        "fullcodeline": "size_t hdr_addr_len = (upper_byte << 8) + lower_byte;"
    },
    {
        "line": 75,
        "fullcodeline": "ENVOY_LOG(debug, \"Unsupported command or address family or transport\");"
    },
    {
        "line": 7,
        "fullcodeline": "if ((ver_cmd & 0xf) == PROXY_PROTO_V2_LOCAL) {"
    },
    {
        "line": 17,
        "fullcodeline": "if ((ver_cmd & 0xf) == PROXY_PROTO_V2_ONBEHALF_OF) {"
    },
    {
        "line": 10,
        "fullcodeline": "proxy_protocol_header_.emplace(WireHeader{PROXY_PROTO_V2_HEADER_LEN, hdr_addr_len, 0, 0});"
    },
    {
        "line": 18,
        "fullcodeline": "uint8_t proto_family = buf[PROXY_PROTO_V2_SIGNATURE_LEN + 1];"
    },
    {
        "line": 19,
        "fullcodeline": "if (((proto_family & 0x0f) == PROXY_PROTO_V2_TRANSPORT_STREAM) ||"
    },
    {
        "line": 20,
        "fullcodeline": "((proto_family & 0x0f) == PROXY_PROTO_V2_TRANSPORT_DGRAM)) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (((proto_family & 0xf0) >> 4) == PROXY_PROTO_V2_AF_INET) {"
    },
    {
        "line": 29,
        "fullcodeline": "v4 = reinterpret_cast<const pp_ipv4_addr*>(&buf[PROXY_PROTO_V2_HEADER_LEN]);"
    },
    {
        "line": 31,
        "fullcodeline": "memset(&ra4, 0, sizeof(ra4));"
    },
    {
        "line": 32,
        "fullcodeline": "memset(&la4, 0, sizeof(la4));"
    },
    {
        "line": 33,
        "fullcodeline": "ra4.sin_family = AF_INET;"
    },
    {
        "line": 34,
        "fullcodeline": "ra4.sin_port = v4->src_port;"
    },
    {
        "line": 35,
        "fullcodeline": "ra4.sin_addr.s_addr = v4->src_addr;"
    },
    {
        "line": 37,
        "fullcodeline": "la4.sin_family = AF_INET;"
    },
    {
        "line": 38,
        "fullcodeline": "la4.sin_port = v4->dst_port;"
    },
    {
        "line": 39,
        "fullcodeline": "la4.sin_addr.s_addr = v4->dst_addr;"
    },
    {
        "line": 40,
        "fullcodeline": "proxy_protocol_header_.emplace("
    },
    {
        "line": 41,
        "fullcodeline": "WireHeader{PROXY_PROTO_V2_HEADER_LEN, hdr_addr_len, PROXY_PROTO_V2_ADDR_LEN_INET,"
    },
    {
        "line": 46,
        "fullcodeline": "} else if (((proto_family & 0xf0) >> 4) == PROXY_PROTO_V2_AF_INET6) {"
    },
    {
        "line": 42,
        "fullcodeline": "hdr_addr_len - PROXY_PROTO_V2_ADDR_LEN_INET, Network::Address::IpVersion::v4,"
    },
    {
        "line": 43,
        "fullcodeline": "std::make_shared<Network::Address::Ipv4Instance>(&ra4),"
    },
    {
        "line": 44,
        "fullcodeline": "std::make_shared<Network::Address::Ipv4Instance>(&la4)});"
    },
    {
        "line": 54,
        "fullcodeline": "v6 = reinterpret_cast<const pp_ipv6_addr*>(&buf[PROXY_PROTO_V2_HEADER_LEN]);"
    },
    {
        "line": 56,
        "fullcodeline": "memset(&ra6, 0, sizeof(ra6));"
    },
    {
        "line": 57,
        "fullcodeline": "memset(&la6, 0, sizeof(la6));"
    },
    {
        "line": 58,
        "fullcodeline": "ra6.sin6_family = AF_INET6;"
    },
    {
        "line": 59,
        "fullcodeline": "ra6.sin6_port = v6->src_port;"
    },
    {
        "line": 60,
        "fullcodeline": "safeMemcpy(&(ra6.sin6_addr.s6_addr), &(v6->src_addr));"
    },
    {
        "line": 62,
        "fullcodeline": "la6.sin6_family = AF_INET6;"
    },
    {
        "line": 63,
        "fullcodeline": "la6.sin6_port = v6->dst_port;"
    },
    {
        "line": 64,
        "fullcodeline": "safeMemcpy(&(la6.sin6_addr.s6_addr), &(v6->dst_addr));"
    },
    {
        "line": 66,
        "fullcodeline": "proxy_protocol_header_.emplace(WireHeader{"
    },
    {
        "line": 68,
        "fullcodeline": "hdr_addr_len - PROXY_PROTO_V2_ADDR_LEN_INET6, Network::Address::IpVersion::v6,"
    },
    {
        "line": 69,
        "fullcodeline": "std::make_shared<Network::Address::Ipv6Instance>(ra6),"
    },
    {
        "line": 70,
        "fullcodeline": "std::make_shared<Network::Address::Ipv6Instance>(la6)});"
    }
]