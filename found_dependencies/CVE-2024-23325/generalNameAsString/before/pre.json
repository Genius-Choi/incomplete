[
    {
        "line": 5,
        "fullcodeline": "ASN1_STRING* str = general_name->d.dNSName;"
    },
    {
        "line": 6,
        "fullcodeline": "san.assign(reinterpret_cast<const char*>(ASN1_STRING_data(str)), ASN1_STRING_length(str));"
    },
    {
        "line": 10,
        "fullcodeline": "ASN1_STRING* str = general_name->d.uniformResourceIdentifier;"
    },
    {
        "line": 11,
        "fullcodeline": "san.assign(reinterpret_cast<const char*>(ASN1_STRING_data(str)), ASN1_STRING_length(str));"
    },
    {
        "line": 15,
        "fullcodeline": "ASN1_STRING* str = general_name->d.rfc822Name;"
    },
    {
        "line": 16,
        "fullcodeline": "san.assign(reinterpret_cast<const char*>(ASN1_STRING_data(str)), ASN1_STRING_length(str));"
    },
    {
        "line": 20,
        "fullcodeline": "if (general_name->d.ip->length == 4) {"
    },
    {
        "line": 22,
        "fullcodeline": "memset(&sin, 0, sizeof(sin));"
    },
    {
        "line": 23,
        "fullcodeline": "sin.sin_port = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "sin.sin_family = AF_INET;"
    },
    {
        "line": 25,
        "fullcodeline": "safeMemcpyUnsafeSrc(&sin.sin_addr, general_name->d.ip->data);"
    },
    {
        "line": 26,
        "fullcodeline": "Network::Address::Ipv4Instance addr(&sin);"
    },
    {
        "line": 27,
        "fullcodeline": "san = addr.ip()->addressAsString();"
    },
    {
        "line": 28,
        "fullcodeline": "} else if (general_name->d.ip->length == 16) {"
    },
    {
        "line": 30,
        "fullcodeline": "memset(&sin6, 0, sizeof(sin6));"
    },
    {
        "line": 31,
        "fullcodeline": "sin6.sin6_port = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "sin6.sin6_family = AF_INET6;"
    },
    {
        "line": 33,
        "fullcodeline": "safeMemcpyUnsafeSrc(&sin6.sin6_addr, general_name->d.ip->data);"
    },
    {
        "line": 34,
        "fullcodeline": "Network::Address::Ipv6Instance addr(sin6);"
    },
    {
        "line": 35,
        "fullcodeline": "san = addr.ip()->addressAsString();"
    }
]