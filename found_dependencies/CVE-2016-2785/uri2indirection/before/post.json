[
    {
        "line": 4,
        "fullcodeline": "url_prefix = \"/#{indirection_type}/#{version}\""
    },
    {
        "line": 5,
        "fullcodeline": "environment = params.delete(:environment)"
    },
    {
        "line": 12,
        "fullcodeline": "method = indirection_method(http_method, indirection_name)"
    },
    {
        "line": 20,
        "fullcodeline": "indirection = Puppet::Indirector::Indirection.instance(indirection_name.to_sym)"
    },
    {
        "line": 34,
        "fullcodeline": "configured_environment = Puppet.lookup(:environments).get(environment)"
    },
    {
        "line": 40,
        "fullcodeline": "check_authorization(method, \"#{url_prefix}/#{indirection_name}/#{key}\", params)"
    },
    {
        "line": 46,
        "fullcodeline": "params.delete(:bucket_path)"
    },
    {
        "line": 52,
        "fullcodeline": "key = URI.unescape(key)"
    },
    {
        "line": 7,
        "fullcodeline": "if indirection_name !~ /^\\w+$/"
    },
    {
        "line": 16,
        "fullcodeline": "if url_prefix != IndirectionType.url_prefix_for(indirection_name)"
    },
    {
        "line": 21,
        "fullcodeline": "if !indirection"
    },
    {
        "line": 26,
        "fullcodeline": "if !environment"
    },
    {
        "line": 30,
        "fullcodeline": "if ! Puppet::Node::Environment.valid_name?(environment)"
    },
    {
        "line": 35,
        "fullcodeline": "unless configured_environment.nil?"
    },
    {
        "line": 48,
        "fullcodeline": "if key == \"\" or key.nil?"
    },
    {
        "line": 54,
        "fullcodeline": "[indirection, method, key, params]"
    },
    {
        "line": 3,
        "fullcodeline": "indirection_type, version, indirection_name, key = uri.split(\"/\", 5)[1..-1]"
    },
    {
        "line": 36,
        "fullcodeline": "configured_environment = configured_environment.override_from_commandline(Puppet.settings)"
    },
    {
        "line": 37,
        "fullcodeline": "params[:environment] = configured_environment"
    },
    {
        "line": 22,
        "fullcodeline": "raise Puppet::Network::HTTP::Error::HTTPNotFoundError.new("
    },
    {
        "line": 23,
        "fullcodeline": "\"Could not find indirection '#{indirection_name}'\", Puppet::Network::HTTP::Issues::HANDLER_NOT_FOUND)"
    }
]