[
    {
        "line": 4,
        "fullcodeline": "nghttp2_inbound_frame *iframe = &session->iframe;"
    },
    {
        "line": 8,
        "fullcodeline": "int busy = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "first = in;"
    },
    {
        "line": 20,
        "fullcodeline": "last = in + inlen;"
    },
    {
        "line": 22,
        "fullcodeline": "DEBUGF(\"recv: connection recv_window_size=%d, local_window=%d\\n\","
    },
    {
        "line": 25,
        "fullcodeline": "mem = &session->mem;"
    },
    {
        "line": 30,
        "fullcodeline": "rv = nghttp2_session_adjust_idle_stream(session);"
    },
    {
        "line": 1484,
        "fullcodeline": "assert(in == last);"
    },
    {
        "line": 14,
        "fullcodeline": "if (in == NULL) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (!nghttp2_session_want_read(session)) {"
    },
    {
        "line": 1486,
        "fullcodeline": "return (nghttp2_ssize)(in - first);"
    },
    {
        "line": 15,
        "fullcodeline": "assert(inlen == 0);"
    },
    {
        "line": 16,
        "fullcodeline": "in = static_in;"
    },
    {
        "line": 1481,
        "fullcodeline": "busy = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1477,
        "fullcodeline": "if (!busy && in == last) {"
    },
    {
        "line": 42,
        "fullcodeline": "readlen = nghttp2_min(inlen, iframe->payloadleft);"
    },
    {
        "line": 50,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 51,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 60,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_FIRST_SETTINGS]\\n\");"
    },
    {
        "line": 62,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 63,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 91,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEAD;"
    },
    {
        "line": 593,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_NBYTE]\\n\");"
    },
    {
        "line": 595,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 596,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 597,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 599,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu, left=%zu\\n\", readlen,"
    },
    {
        "line": 977,
        "fullcodeline": "DEBUGF(\"recv: [IB_IGN_PAYLOAD]\\n\");"
    },
    {
        "line": 979,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 980,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 981,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 983,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1001,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1005,
        "fullcodeline": "DEBUGF(\"recv: [IB_FRAME_SIZE_ERROR]\\n\");"
    },
    {
        "line": 1007,
        "fullcodeline": "rv = session_handle_frame_size_error(session);"
    },
    {
        "line": 1012,
        "fullcodeline": "assert(iframe->state == NGHTTP2_IB_IGN_ALL);"
    },
    {
        "line": 1016,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_SETTINGS]\\n\");"
    },
    {
        "line": 1018,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 1019,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1020,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1022,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1037,
        "fullcodeline": "rv = session_process_settings_frame(session);"
    },
    {
        "line": 1047,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1051,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_GOAWAY_DEBUG]\\n\");"
    },
    {
        "line": 1053,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1062,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1071,
        "fullcodeline": "rv = session_process_goaway_frame(session);"
    },
    {
        "line": 1081,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1094,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 1095,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1101,
        "fullcodeline": "nghttp2_frame_unpack_frame_hd(&cont_hd, iframe->sbuf.pos);"
    },
    {
        "line": 1102,
        "fullcodeline": "iframe->payloadleft = cont_hd.length;"
    },
    {
        "line": 1104,
        "fullcodeline": "DEBUGF(\"recv: payloadlen=%zu, type=%u, flags=0x%02x, stream_id=%d\\n\","
    },
    {
        "line": 1125,
        "fullcodeline": "iframe->frame.hd.flags ="
    },
    {
        "line": 1128,
        "fullcodeline": "iframe->frame.hd.length += cont_hd.length;"
    },
    {
        "line": 1130,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1146,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_PAD_DATA]\\n\");"
    },
    {
        "line": 1148,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 1149,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1150,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1152,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu, left=%zu\\n\", readlen,"
    },
    {
        "line": 1160,
        "fullcodeline": "rv = nghttp2_session_update_recv_connection_window_size(session, readlen);"
    },
    {
        "line": 1170,
        "fullcodeline": "rv ="
    },
    {
        "line": 1181,
        "fullcodeline": "stream = nghttp2_session_get_stream(session, iframe->frame.hd.stream_id);"
    },
    {
        "line": 1192,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1194,
        "fullcodeline": "padlen = inbound_frame_compute_pad(iframe);"
    },
    {
        "line": 1204,
        "fullcodeline": "iframe->frame.data.padlen = (size_t)padlen;"
    },
    {
        "line": 1206,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_DATA;"
    },
    {
        "line": 1210,
        "fullcodeline": "stream = nghttp2_session_get_stream(session, iframe->frame.hd.stream_id);"
    },
    {
        "line": 1218,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_DATA]\\n\");"
    },
    {
        "line": 1220,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1221,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1222,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1224,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1320,
        "fullcodeline": "rv = session_process_data_frame(session);"
    },
    {
        "line": 1325,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1329,
        "fullcodeline": "DEBUGF(\"recv: [IB_IGN_DATA]\\n\");"
    },
    {
        "line": 1331,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1332,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1333,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1335,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1370,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1376,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_EXTENSION_PAYLOAD]\\n\");"
    },
    {
        "line": 1378,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1379,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1380,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1382,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1405,
        "fullcodeline": "rv = session_process_extension_frame(session);"
    },
    {
        "line": 1410,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1414,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_ALTSVC_PAYLOAD]\\n\");"
    },
    {
        "line": 1416,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1424,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1433,
        "fullcodeline": "rv = session_process_altsvc_frame(session);"
    },
    {
        "line": 1438,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1442,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_ORIGIN_PAYLOAD]\\n\");"
    },
    {
        "line": 1444,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1453,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1462,
        "fullcodeline": "rv = session_process_origin_frame(session);"
    },
    {
        "line": 1472,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 44,
        "fullcodeline": "if (memcmp(&NGHTTP2_CLIENT_MAGIC[NGHTTP2_CLIENT_MAGIC_LEN -"
    },
    {
        "line": 53,
        "fullcodeline": "if (iframe->payloadleft == 0) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (iframe->sbuf.pos[3] != NGHTTP2_SETTINGS ||"
    },
    {
        "line": 95,
        "fullcodeline": "int on_begin_frame_called = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_HEAD]\\n\");"
    },
    {
        "line": 99,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 100,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 106,
        "fullcodeline": "nghttp2_frame_unpack_frame_hd(&iframe->frame.hd, iframe->sbuf.pos);"
    },
    {
        "line": 109,
        "fullcodeline": "DEBUGF(\"recv: payloadlen=%zu, type=%u, flags=0x%02x, stream_id=%d\\n\","
    },
    {
        "line": 600,
        "fullcodeline": "iframe->payloadleft, nghttp2_buf_mark_avail(&iframe->sbuf));"
    },
    {
        "line": 602,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 867,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 869,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 872,
        "fullcodeline": "data_readlen = inbound_frame_effective_readlen("
    },
    {
        "line": 880,
        "fullcodeline": "trail_padlen = nghttp2_frame_trail_padlen(&iframe->frame, iframe->padlen);"
    },
    {
        "line": 882,
        "fullcodeline": "final = (iframe->frame.hd.flags & NGHTTP2_FLAG_END_HEADERS) &&"
    },
    {
        "line": 1008,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1014,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1025,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 1029,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1039,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1043,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1055,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1073,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1077,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1097,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 1107,
        "fullcodeline": "if (cont_hd.type != NGHTTP2_CONTINUATION ||"
    },
    {
        "line": 1126,
        "fullcodeline": "(uint8_t)(iframe->frame.hd.flags |"
    },
    {
        "line": 1132,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_EXPECT_CONTINUATION) {"
    },
    {
        "line": 1153,
        "fullcodeline": "iframe->payloadleft, nghttp2_buf_mark_avail(&iframe->sbuf));"
    },
    {
        "line": 1155,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 1161,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1165,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1171,
        "fullcodeline": "nghttp2_session_consume(session, iframe->frame.hd.stream_id, readlen);"
    },
    {
        "line": 1173,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1177,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1195,
        "fullcodeline": "if (padlen < 0) {"
    },
    {
        "line": 1212,
        "fullcodeline": "if (!stream) {"
    },
    {
        "line": 1227,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1321,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1338,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1374,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1385,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1401,
        "fullcodeline": "if (iframe->payloadleft > 0) {"
    },
    {
        "line": 1406,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1417,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1434,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1446,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1464,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1468,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 54,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 55,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_FIRST_SETTINGS;"
    },
    {
        "line": 70,
        "fullcodeline": "(iframe->sbuf.pos[4] & NGHTTP2_FLAG_ACK)) {"
    },
    {
        "line": 71,
        "fullcodeline": "rv = session_call_error_callback("
    },
    {
        "line": 81,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 102,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (iframe->frame.hd.length > session->local_settings.max_frame_size) {"
    },
    {
        "line": 573,
        "fullcodeline": "if (!on_begin_frame_called) {"
    },
    {
        "line": 638,
        "fullcodeline": "rv = session_process_headers_frame(session);"
    },
    {
        "line": 643,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 664,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 680,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 684,
        "fullcodeline": "rv = session_process_rst_stream_frame(session);"
    },
    {
        "line": 693,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 726,
        "fullcodeline": "rv = session_process_push_promise_frame(session);"
    },
    {
        "line": 731,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 753,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 757,
        "fullcodeline": "rv = session_process_ping_frame(session);"
    },
    {
        "line": 766,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 792,
        "fullcodeline": "rv = session_process_window_update_frame(session);"
    },
    {
        "line": 801,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 849,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 870,
        "fullcodeline": "iframe->payloadleft - readlen);"
    },
    {
        "line": 875,
        "fullcodeline": "if (data_readlen == -1) {"
    },
    {
        "line": 885,
        "fullcodeline": "if (data_readlen > 0 || (data_readlen == 0 && final)) {"
    },
    {
        "line": 954,
        "fullcodeline": "if ((iframe->frame.hd.flags & NGHTTP2_FLAG_END_HEADERS) == 0) {"
    },
    {
        "line": 995,
        "fullcodeline": "session->hd_inflater.ctx.bad = 1;"
    },
    {
        "line": 1030,
        "fullcodeline": "inbound_frame_set_settings_entry(iframe);"
    },
    {
        "line": 1033,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH);"
    },
    {
        "line": 1056,
        "fullcodeline": "iframe->lbuf.last = nghttp2_cpymem(iframe->lbuf.last, in, readlen);"
    },
    {
        "line": 1058,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1059,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1066,
        "fullcodeline": "assert(nghttp2_buf_avail(&iframe->lbuf) > 0);"
    },
    {
        "line": 1108,
        "fullcodeline": "cont_hd.stream_id != iframe->frame.hd.stream_id) {"
    },
    {
        "line": 1109,
        "fullcodeline": "DEBUGF(\"recv: expected stream_id=%d, type=%d, but got stream_id=%d, \""
    },
    {
        "line": 1113,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 1133,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 1135,
        "fullcodeline": "rv = session_call_on_begin_frame(session, &cont_hd);"
    },
    {
        "line": 1183,
        "fullcodeline": "rv = nghttp2_session_update_recv_stream_window_size("
    },
    {
        "line": 1196,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 1213,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1214,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_DATA;"
    },
    {
        "line": 1230,
        "fullcodeline": "rv = nghttp2_session_update_recv_connection_window_size(session,"
    },
    {
        "line": 1240,
        "fullcodeline": "rv = nghttp2_session_update_recv_stream_window_size("
    },
    {
        "line": 1248,
        "fullcodeline": "data_readlen = inbound_frame_effective_readlen("
    },
    {
        "line": 1256,
        "fullcodeline": "padlen = (nghttp2_ssize)readlen - data_readlen;"
    },
    {
        "line": 1272,
        "fullcodeline": "DEBUGF(\"recv: data_readlen=%td\\n\", data_readlen);"
    },
    {
        "line": 1341,
        "fullcodeline": "rv = nghttp2_session_update_recv_connection_window_size(session,"
    },
    {
        "line": 1386,
        "fullcodeline": "rv = session_call_on_extension_chunk_recv_callback("
    },
    {
        "line": 1418,
        "fullcodeline": "iframe->lbuf.last = nghttp2_cpymem(iframe->lbuf.last, in, readlen);"
    },
    {
        "line": 1420,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1421,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1428,
        "fullcodeline": "assert(nghttp2_buf_avail(&iframe->lbuf) > 0);"
    },
    {
        "line": 1447,
        "fullcodeline": "iframe->lbuf.last = nghttp2_cpymem(iframe->lbuf.last, in, readlen);"
    },
    {
        "line": 1449,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1450,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1457,
        "fullcodeline": "assert(nghttp2_buf_avail(&iframe->lbuf) > 0);"
    },
    {
        "line": 66,
        "fullcodeline": "return (nghttp2_ssize)(in - first);"
    },
    {
        "line": 77,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 88,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 114,
        "fullcodeline": "DEBUGF(\"recv: length is too large %zu > %u\\n\", iframe->frame.hd.length,"
    },
    {
        "line": 117,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 174,
        "fullcodeline": "DEBUGF(\"recv: HEADERS\\n\");"
    },
    {
        "line": 176,
        "fullcodeline": "iframe->frame.hd.flags &="
    },
    {
        "line": 180,
        "fullcodeline": "rv = inbound_frame_handle_pad(iframe, &iframe->frame.hd);"
    },
    {
        "line": 196,
        "fullcodeline": "pri_fieldlen = nghttp2_frame_priority_len(iframe->frame.hd.flags);"
    },
    {
        "line": 215,
        "fullcodeline": "rv = session_call_on_begin_frame(session, &iframe->frame.hd);"
    },
    {
        "line": 221,
        "fullcodeline": "on_begin_frame_called = 1;"
    },
    {
        "line": 223,
        "fullcodeline": "rv = session_process_headers_frame(session);"
    },
    {
        "line": 228,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 249,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 253,
        "fullcodeline": "DEBUGF(\"recv: PRIORITY\\n\");"
    },
    {
        "line": 255,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 265,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 267,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_PRIORITY_SPECLEN);"
    },
    {
        "line": 283,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 291,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 293,
        "fullcodeline": "inbound_frame_set_mark(iframe, 4);"
    },
    {
        "line": 297,
        "fullcodeline": "DEBUGF(\"recv: SETTINGS\\n\");"
    },
    {
        "line": 299,
        "fullcodeline": "iframe->frame.hd.flags &= NGHTTP2_FLAG_ACK;"
    },
    {
        "line": 315,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_SETTINGS;"
    },
    {
        "line": 351,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 353,
        "fullcodeline": "inbound_frame_set_mark(iframe, 0);"
    },
    {
        "line": 357,
        "fullcodeline": "DEBUGF(\"recv: PUSH_PROMISE\\n\");"
    },
    {
        "line": 359,
        "fullcodeline": "iframe->frame.hd.flags &="
    },
    {
        "line": 362,
        "fullcodeline": "rv = inbound_frame_handle_pad(iframe, &iframe->frame.hd);"
    },
    {
        "line": 384,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 386,
        "fullcodeline": "inbound_frame_set_mark(iframe, 4);"
    },
    {
        "line": 390,
        "fullcodeline": "DEBUGF(\"recv: PING\\n\");"
    },
    {
        "line": 392,
        "fullcodeline": "iframe->frame.hd.flags &= NGHTTP2_FLAG_ACK;"
    },
    {
        "line": 400,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 401,
        "fullcodeline": "inbound_frame_set_mark(iframe, 8);"
    },
    {
        "line": 405,
        "fullcodeline": "DEBUGF(\"recv: GOAWAY\\n\");"
    },
    {
        "line": 407,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 415,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 416,
        "fullcodeline": "inbound_frame_set_mark(iframe, 8);"
    },
    {
        "line": 420,
        "fullcodeline": "DEBUGF(\"recv: unexpected CONTINUATION\\n\");"
    },
    {
        "line": 424,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 432,
        "fullcodeline": "DEBUGF(\"recv: extension frame\\n\");"
    },
    {
        "line": 603,
        "fullcodeline": "return (nghttp2_ssize)(in - first);"
    },
    {
        "line": 608,
        "fullcodeline": "if (iframe->padlen == 0 &&"
    },
    {
        "line": 639,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 645,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 649,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 659,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_HEADER_BLOCK) {"
    },
    {
        "line": 668,
        "fullcodeline": "if (!session_no_rfc7540_pri_no_fallback(session) &&"
    },
    {
        "line": 685,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 689,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 697,
        "fullcodeline": "if (iframe->padlen == 0 &&"
    },
    {
        "line": 727,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 733,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 737,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 748,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_HEADER_BLOCK) {"
    },
    {
        "line": 758,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 762,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 773,
        "fullcodeline": "debuglen = iframe->frame.hd.length - 8;"
    },
    {
        "line": 785,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 787,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_GOAWAY_DEBUG;"
    },
    {
        "line": 793,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 797,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 807,
        "fullcodeline": "origin_len = nghttp2_get_uint16(iframe->sbuf.pos);"
    },
    {
        "line": 809,
        "fullcodeline": "DEBUGF(\"recv: origin_len=%zu\\n\", origin_len);"
    },
    {
        "line": 829,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 831,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_ALTSVC_PAYLOAD;"
    },
    {
        "line": 835,
        "fullcodeline": "DEBUGF(\"recv: prioritized_stream_id=%d\\n\","
    },
    {
        "line": 838,
        "fullcodeline": "rv = session_process_priority_update_frame(session);"
    },
    {
        "line": 843,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 873,
        "fullcodeline": "iframe, iframe->payloadleft - readlen, readlen);"
    },
    {
        "line": 877,
        "fullcodeline": "data_readlen = 0;"
    },
    {
        "line": 883,
        "fullcodeline": "iframe->payloadleft - (size_t)data_readlen == trail_padlen;"
    },
    {
        "line": 886,
        "fullcodeline": "size_t hd_proclen = 0;"
    },
    {
        "line": 888,
        "fullcodeline": "DEBUGF(\"recv: block final=%d\\n\", final);"
    },
    {
        "line": 890,
        "fullcodeline": "rv ="
    },
    {
        "line": 932,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 933,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 956,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_FRAME_HDLEN);"
    },
    {
        "line": 958,
        "fullcodeline": "iframe->padlen = 0;"
    },
    {
        "line": 1044,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1078,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1098,
        "fullcodeline": "return (nghttp2_ssize)(in - first);"
    },
    {
        "line": 1116,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1120,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1127,
        "fullcodeline": "(cont_hd.flags & NGHTTP2_FLAG_END_HEADERS));"
    },
    {
        "line": 1137,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1141,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 1156,
        "fullcodeline": "return (nghttp2_ssize)(in - first);"
    },
    {
        "line": 1166,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1178,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1187,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1198,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1201,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1232,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1236,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1244,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1251,
        "fullcodeline": "if (data_readlen == -1) {"
    },
    {
        "line": 1258,
        "fullcodeline": "if (padlen > 0) {"
    },
    {
        "line": 1274,
        "fullcodeline": "if (data_readlen > 0) {"
    },
    {
        "line": 1343,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1347,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1351,
        "fullcodeline": "if (session->opt_flags & NGHTTP2_OPTMASK_NO_AUTO_WINDOW_UPDATE) {"
    },
    {
        "line": 1388,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1392,
        "fullcodeline": "if (rv != 0) {"
    },
    {
        "line": 1469,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 103,
        "fullcodeline": "return (nghttp2_ssize)(in - first);"
    },
    {
        "line": 120,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 124,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 129,
        "fullcodeline": "DEBUGF(\"recv: DATA\\n\");"
    },
    {
        "line": 131,
        "fullcodeline": "iframe->frame.hd.flags &="
    },
    {
        "line": 135,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 137,
        "fullcodeline": "rv = session_on_data_received_fail_fast(session);"
    },
    {
        "line": 152,
        "fullcodeline": "rv = inbound_frame_handle_pad(iframe, &iframe->frame.hd);"
    },
    {
        "line": 169,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_DATA;"
    },
    {
        "line": 177,
        "fullcodeline": "(NGHTTP2_FLAG_END_STREAM | NGHTTP2_FLAG_END_HEADERS |"
    },
    {
        "line": 181,
        "fullcodeline": "if (rv < 0) {"
    },
    {
        "line": 191,
        "fullcodeline": "if (rv == 1) {"
    },
    {
        "line": 198,
        "fullcodeline": "if (pri_fieldlen > 0) {"
    },
    {
        "line": 217,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 224,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 230,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 234,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 244,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_HEADER_BLOCK) {"
    },
    {
        "line": 257,
        "fullcodeline": "if (iframe->payloadleft != NGHTTP2_PRIORITY_SPECLEN) {"
    },
    {
        "line": 285,
        "fullcodeline": "if (iframe->payloadleft != 4) {"
    },
    {
        "line": 301,
        "fullcodeline": "if ((iframe->frame.hd.length % NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH) ||"
    },
    {
        "line": 310,
        "fullcodeline": "if (session->obq_flood_counter_ >= session->max_outbound_ack &&"
    },
    {
        "line": 360,
        "fullcodeline": "(NGHTTP2_FLAG_END_HEADERS | NGHTTP2_FLAG_PADDED);"
    },
    {
        "line": 363,
        "fullcodeline": "if (rv < 0) {"
    },
    {
        "line": 373,
        "fullcodeline": "if (rv == 1) {"
    },
    {
        "line": 378,
        "fullcodeline": "if (iframe->payloadleft < 4) {"
    },
    {
        "line": 394,
        "fullcodeline": "if (iframe->payloadleft != 8) {"
    },
    {
        "line": 409,
        "fullcodeline": "if (iframe->payloadleft < 8) {"
    },
    {
        "line": 426,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 430,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 434,
        "fullcodeline": "if (check_ext_type_set(session->user_recv_ext_types,"
    },
    {
        "line": 609,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_PADDED)) {"
    },
    {
        "line": 610,
        "fullcodeline": "pri_fieldlen = nghttp2_frame_priority_len(iframe->frame.hd.flags);"
    },
    {
        "line": 611,
        "fullcodeline": "padlen = inbound_frame_compute_pad(iframe);"
    },
    {
        "line": 621,
        "fullcodeline": "iframe->frame.headers.padlen = (size_t)padlen;"
    },
    {
        "line": 650,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 655,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 660,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 669,
        "fullcodeline": "session->remote_settings.no_rfc7540_priorities != 1) {"
    },
    {
        "line": 670,
        "fullcodeline": "rv = session_process_priority_frame(session);"
    },
    {
        "line": 698,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_PADDED)) {"
    },
    {
        "line": 699,
        "fullcodeline": "padlen = inbound_frame_compute_pad(iframe);"
    },
    {
        "line": 711,
        "fullcodeline": "iframe->frame.push_promise.padlen = (size_t)padlen;"
    },
    {
        "line": 719,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 721,
        "fullcodeline": "inbound_frame_set_mark(iframe, 4);"
    },
    {
        "line": 738,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 744,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 749,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 775,
        "fullcodeline": "if (debuglen > 0) {"
    },
    {
        "line": 811,
        "fullcodeline": "if (origin_len > iframe->payloadleft) {"
    },
    {
        "line": 817,
        "fullcodeline": "if (iframe->frame.hd.length > 2) {"
    },
    {
        "line": 836,
        "fullcodeline": "nghttp2_get_uint32(iframe->sbuf.pos) & NGHTTP2_STREAM_ID_MASK);"
    },
    {
        "line": 839,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 891,
        "fullcodeline": "inflate_header_block(session, &iframe->frame, &hd_proclen,"
    },
    {
        "line": 895,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 899,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 903,
        "fullcodeline": "if (rv == NGHTTP2_ERR_PAUSE) {"
    },
    {
        "line": 910,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 935,
        "fullcodeline": "if (rv == NGHTTP2_ERR_HEADER_COMP) {"
    },
    {
        "line": 946,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 947,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 960,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_READ_HEADER_BLOCK) {"
    },
    {
        "line": 972,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1185,
        "fullcodeline": "iframe->payloadleft ||"
    },
    {
        "line": 1242,
        "fullcodeline": "iframe->payloadleft ||"
    },
    {
        "line": 1253,
        "fullcodeline": "data_readlen = 0;"
    },
    {
        "line": 1260,
        "fullcodeline": "rv = nghttp2_session_consume(session, iframe->frame.hd.stream_id,"
    },
    {
        "line": 1354,
        "fullcodeline": "rv = session_update_connection_consumed_size(session, readlen);"
    },
    {
        "line": 1387,
        "fullcodeline": "session, in - readlen, readlen);"
    },
    {
        "line": 1393,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1395,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 132,
        "fullcodeline": "(NGHTTP2_FLAG_END_STREAM | NGHTTP2_FLAG_PADDED);"
    },
    {
        "line": 138,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_PAYLOAD) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 153,
        "fullcodeline": "if (rv < 0) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (rv == 1) {"
    },
    {
        "line": 182,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 192,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 205,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 207,
        "fullcodeline": "inbound_frame_set_mark(iframe, pri_fieldlen);"
    },
    {
        "line": 235,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 240,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 245,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 258,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 260,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 286,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 287,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 302,
        "fullcodeline": "((iframe->frame.hd.flags & NGHTTP2_FLAG_ACK) &&"
    },
    {
        "line": 304,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 305,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 311,
        "fullcodeline": "!(iframe->frame.hd.flags & NGHTTP2_FLAG_ACK)) {"
    },
    {
        "line": 322,
        "fullcodeline": "iframe->max_niv ="
    },
    {
        "line": 335,
        "fullcodeline": "iframe->iv = nghttp2_mem_malloc(mem, sizeof(nghttp2_settings_entry) *"
    },
    {
        "line": 342,
        "fullcodeline": "min_header_table_size_entry = &iframe->iv[iframe->max_niv - 1];"
    },
    {
        "line": 343,
        "fullcodeline": "min_header_table_size_entry->settings_id ="
    },
    {
        "line": 345,
        "fullcodeline": "min_header_table_size_entry->value = UINT32_MAX;"
    },
    {
        "line": 347,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH);"
    },
    {
        "line": 364,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 374,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 379,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 380,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 395,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 396,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 410,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 411,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 446,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 448,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_EXTENSION_PAYLOAD;"
    },
    {
        "line": 582,
        "fullcodeline": "rv = session_call_on_begin_frame(session, &iframe->frame.hd);"
    },
    {
        "line": 612,
        "fullcodeline": "if (padlen < 0 ||"
    },
    {
        "line": 623,
        "fullcodeline": "if (pri_fieldlen > 0) {"
    },
    {
        "line": 646,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 652,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 671,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 675,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 690,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 700,
        "fullcodeline": "if (padlen < 0 || (size_t)padlen + 4 /* promised stream id */"
    },
    {
        "line": 713,
        "fullcodeline": "if (iframe->payloadleft < 4) {"
    },
    {
        "line": 734,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 741,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 763,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 776,
        "fullcodeline": "iframe->raw_lbuf = nghttp2_mem_malloc(mem, debuglen);"
    },
    {
        "line": 782,
        "fullcodeline": "nghttp2_buf_wrap_init(&iframe->lbuf, iframe->raw_lbuf, debuglen);"
    },
    {
        "line": 798,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 812,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 813,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 818,
        "fullcodeline": "iframe->raw_lbuf ="
    },
    {
        "line": 825,
        "fullcodeline": "nghttp2_buf_wrap_init(&iframe->lbuf, iframe->raw_lbuf,"
    },
    {
        "line": 892,
        "fullcodeline": "(uint8_t *)in, (size_t)data_readlen, final,"
    },
    {
        "line": 893,
        "fullcodeline": "iframe->state == NGHTTP2_IB_READ_HEADER_BLOCK);"
    },
    {
        "line": 904,
        "fullcodeline": "in += hd_proclen;"
    },
    {
        "line": 905,
        "fullcodeline": "iframe->payloadleft -= hd_proclen;"
    },
    {
        "line": 914,
        "fullcodeline": "in += hd_proclen;"
    },
    {
        "line": 915,
        "fullcodeline": "iframe->payloadleft -= hd_proclen;"
    },
    {
        "line": 918,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 927,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 928,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 961,
        "fullcodeline": "iframe->state = NGHTTP2_IB_EXPECT_CONTINUATION;"
    },
    {
        "line": 966,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_READ_HEADER_BLOCK) {"
    },
    {
        "line": 1186,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_END_STREAM) == 0);"
    },
    {
        "line": 1237,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1243,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_END_STREAM) == 0);"
    },
    {
        "line": 1263,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1267,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1275,
        "fullcodeline": "if (session_enforce_http_messaging(session)) {"
    },
    {
        "line": 1348,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1356,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1360,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 142,
        "fullcodeline": "DEBUGF(\"recv: DATA not allowed stream_id=%d\\n\","
    },
    {
        "line": 144,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_DATA;"
    },
    {
        "line": 154,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 165,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_PAD_DATA;"
    },
    {
        "line": 185,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 188,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 199,
        "fullcodeline": "if (iframe->payloadleft < pri_fieldlen) {"
    },
    {
        "line": 231,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 237,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 303,
        "fullcodeline": "iframe->payloadleft > 0)) {"
    },
    {
        "line": 323,
        "fullcodeline": "iframe->frame.hd.length / NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH + 1;"
    },
    {
        "line": 325,
        "fullcodeline": "if (iframe->max_niv - 1 > session->max_settings) {"
    },
    {
        "line": 338,
        "fullcodeline": "if (!iframe->iv) {"
    },
    {
        "line": 367,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 370,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 584,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 613,
        "fullcodeline": "(size_t)padlen + pri_fieldlen > 1 + iframe->payloadleft) {"
    },
    {
        "line": 614,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 629,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 630,
        "fullcodeline": "inbound_frame_set_mark(iframe, pri_fieldlen);"
    },
    {
        "line": 702,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 714,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 715,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 778,
        "fullcodeline": "if (iframe->raw_lbuf == NULL) {"
    },
    {
        "line": 819,
        "fullcodeline": "nghttp2_mem_malloc(mem, iframe->frame.hd.length - 2);"
    },
    {
        "line": 821,
        "fullcodeline": "if (iframe->raw_lbuf == NULL) {"
    },
    {
        "line": 900,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 907,
        "fullcodeline": "return (nghttp2_ssize)(in - first);"
    },
    {
        "line": 924,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 937,
        "fullcodeline": "if (iframe->payloadleft == 0) {"
    },
    {
        "line": 963,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_CONTINUATION;"
    },
    {
        "line": 967,
        "fullcodeline": "rv = session_after_header_block_received(session);"
    },
    {
        "line": 1261,
        "fullcodeline": "(size_t)padlen);"
    },
    {
        "line": 1302,
        "fullcodeline": "rv = session->callbacks.on_data_chunk_recv_callback("
    },
    {
        "line": 139,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 158,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 161,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 200,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 201,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 326,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 439,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 441,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 616,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 619,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 624,
        "fullcodeline": "if (iframe->payloadleft < pri_fieldlen) {"
    },
    {
        "line": 634,
        "fullcodeline": "inbound_frame_set_mark(iframe, 0);"
    },
    {
        "line": 676,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 701,
        "fullcodeline": "> 1 + iframe->payloadleft) {"
    },
    {
        "line": 705,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 708,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 938,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 968,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1268,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1276,
        "fullcodeline": "if (nghttp2_http_on_data_chunk(stream, (size_t)data_readlen) != 0) {"
    },
    {
        "line": 1305,
        "fullcodeline": "if (rv == NGHTTP2_ERR_PAUSE) {"
    },
    {
        "line": 1309,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1361,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 329,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 332,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 461,
        "fullcodeline": "DEBUGF(\"recv: ALTSVC\\n\");"
    },
    {
        "line": 463,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 478,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 480,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 481,
        "fullcodeline": "inbound_frame_set_mark(iframe, 2);"
    },
    {
        "line": 491,
        "fullcodeline": "DEBUGF(\"recv: ORIGIN\\n\");"
    },
    {
        "line": 502,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 517,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_ORIGIN_PAYLOAD;"
    },
    {
        "line": 528,
        "fullcodeline": "DEBUGF(\"recv: PRIORITY_UPDATE\\n\");"
    },
    {
        "line": 530,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 557,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 559,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 560,
        "fullcodeline": "inbound_frame_set_mark(iframe, iframe->payloadleft);"
    },
    {
        "line": 564,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 566,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 625,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 626,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 920,
        "fullcodeline": "iframe->frame.hd.type == NGHTTP2_PUSH_PROMISE"
    },
    {
        "line": 940,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 941,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 1291,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 1296,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1297,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_DATA;"
    },
    {
        "line": 1304,
        "fullcodeline": "in - readlen, (size_t)data_readlen, session->user_data);"
    },
    {
        "line": 454,
        "fullcodeline": "if ((session->builtin_recv_ext_types & NGHTTP2_TYPEMASK_ALTSVC) =="
    },
    {
        "line": 472,
        "fullcodeline": "if (iframe->payloadleft < 2) {"
    },
    {
        "line": 485,
        "fullcodeline": "if (!(session->builtin_recv_ext_types & NGHTTP2_TYPEMASK_ORIGIN)) {"
    },
    {
        "line": 495,
        "fullcodeline": "if (session->server || iframe->frame.hd.stream_id ||"
    },
    {
        "line": 521,
        "fullcodeline": "if ((session->builtin_recv_ext_types &"
    },
    {
        "line": 534,
        "fullcodeline": "if (!session->server) {"
    },
    {
        "line": 544,
        "fullcodeline": "if (iframe->payloadleft < 4) {"
    },
    {
        "line": 550,
        "fullcodeline": "if (!session_no_rfc7540_pri_no_fallback(session) ||"
    },
    {
        "line": 1277,
        "fullcodeline": "if (session->opt_flags & NGHTTP2_OPTMASK_NO_AUTO_WINDOW_UPDATE) {"
    },
    {
        "line": 1293,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1306,
        "fullcodeline": "return (nghttp2_ssize)(in - first);"
    },
    {
        "line": 456,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 457,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 467,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 468,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 473,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 474,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 486,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 487,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 496,
        "fullcodeline": "(iframe->frame.hd.flags & 0xf0)) {"
    },
    {
        "line": 497,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 498,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 505,
        "fullcodeline": "iframe->raw_lbuf = nghttp2_mem_malloc(mem, iframe->payloadleft);"
    },
    {
        "line": 511,
        "fullcodeline": "nghttp2_buf_wrap_init(&iframe->lbuf, iframe->raw_lbuf,"
    },
    {
        "line": 523,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 524,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 535,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 545,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 546,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 551,
        "fullcodeline": "iframe->payloadleft > sizeof(iframe->raw_sbuf)) {"
    },
    {
        "line": 552,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 553,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 1279,
        "fullcodeline": "rv = session_update_connection_consumed_size("
    },
    {
        "line": 507,
        "fullcodeline": "if (iframe->raw_lbuf == NULL) {"
    },
    {
        "line": 514,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 538,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 541,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    },
    {
        "line": 1282,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1286,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_DATA) {"
    },
    {
        "line": 1280,
        "fullcodeline": "session, (size_t)data_readlen);"
    },
    {
        "line": 1287,
        "fullcodeline": "return (nghttp2_ssize)inlen;"
    }
]