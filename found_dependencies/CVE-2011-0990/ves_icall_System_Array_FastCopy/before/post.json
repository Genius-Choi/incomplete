[
    {
        "line": 15,
        "fullcodeline": "if (source->bounds || dest->bounds)"
    },
    {
        "line": 19,
        "fullcodeline": "if ((dest_idx + length > mono_array_length (dest)) ||"
    },
    {
        "line": 31,
        "fullcodeline": "if (src_class == mono_defaults.object_class && dest_class->valuetype) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (src_class != dest_class) {"
    },
    {
        "line": 20,
        "fullcodeline": "(source_idx + length > mono_array_length (source)))"
    },
    {
        "line": 32,
        "fullcodeline": "int has_refs = dest_class->has_references;"
    },
    {
        "line": 39,
        "fullcodeline": "element_size = mono_array_element_size (dest->obj.vtable->klass);"
    },
    {
        "line": 40,
        "fullcodeline": "memset (mono_array_addr_with_size (dest, element_size, dest_idx), 0, element_size * length);"
    },
    {
        "line": 73,
        "fullcodeline": "element_size = mono_array_element_size (source->obj.vtable->klass);"
    },
    {
        "line": 74,
        "fullcodeline": "source_addr = mono_array_addr_with_size (source, element_size, source_idx);"
    },
    {
        "line": 33,
        "fullcodeline": "for (i = source_idx; i < source_idx + length; ++i) {"
    },
    {
        "line": 41,
        "fullcodeline": "for (i = 0; i < length; ++i) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (dest_class->valuetype || dest_class->enumtype || src_class->valuetype || src_class->enumtype)"
    },
    {
        "line": 59,
        "fullcodeline": "if (mono_class_is_subclass_of (src_class, dest_class, FALSE))"
    },
    {
        "line": 82,
        "fullcodeline": "mono_array_memcpy_refs (dest, dest_idx, source, source_idx, length);"
    },
    {
        "line": 43,
        "fullcodeline": "void *addr = mono_array_addr_with_size (dest, element_size, dest_idx + i);"
    },
    {
        "line": 76,
        "fullcodeline": "mono_value_copy_array (dest, dest_idx, source_addr, length);"
    },
    {
        "line": 35,
        "fullcodeline": "if (elem && !mono_object_isinst (elem, dest_class))"
    },
    {
        "line": 44,
        "fullcodeline": "if (!elem)"
    },
    {
        "line": 78,
        "fullcodeline": "dest_addr = mono_array_addr_with_size (dest, element_size, dest_idx);"
    },
    {
        "line": 79,
        "fullcodeline": "memmove (dest_addr, source_addr, element_size * length);"
    },
    {
        "line": 47,
        "fullcodeline": "mono_value_copy (addr, (char *)elem + sizeof (MonoObject), dest_class);"
    },
    {
        "line": 62,
        "fullcodeline": "else if (mono_class_is_subclass_of (dest_class, src_class, FALSE))"
    },
    {
        "line": 49,
        "fullcodeline": "memcpy (addr, (char *)elem + sizeof (MonoObject), element_size);"
    },
    {
        "line": 63,
        "fullcodeline": "for (i = source_idx; i < source_idx + length; ++i) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (elem && !mono_object_isinst (elem, dest_class))"
    }
]