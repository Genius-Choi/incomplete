[
    {
        "line": 8,
        "fullcodeline": "const unsigned char *p = (const unsigned char *)ptr;"
    },
    {
        "line": 13,
        "fullcodeline": "*ppac = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "cbuffers = load_32_le(p);"
    },
    {
        "line": 19,
        "fullcodeline": "p += 4;"
    },
    {
        "line": 20,
        "fullcodeline": "version = load_32_le(p);"
    },
    {
        "line": 21,
        "fullcodeline": "p += 4;"
    },
    {
        "line": 29,
        "fullcodeline": "header_len = PACTYPE_LENGTH + (cbuffers * PAC_INFO_BUFFER_LENGTH);"
    },
    {
        "line": 33,
        "fullcodeline": "ret = krb5_pac_init(context, &pac);"
    },
    {
        "line": 37,
        "fullcodeline": "pac->pac = (PACTYPE *)realloc(pac->pac,"
    },
    {
        "line": 44,
        "fullcodeline": "pac->pac->cBuffers = cbuffers;"
    },
    {
        "line": 68,
        "fullcodeline": "pac->data.data = realloc(pac->data.data, len);"
    },
    {
        "line": 73,
        "fullcodeline": "memcpy(pac->data.data, ptr, len);"
    },
    {
        "line": 15,
        "fullcodeline": "if (len < PACTYPE_LENGTH)"
    },
    {
        "line": 23,
        "fullcodeline": "if (version != 0)"
    },
    {
        "line": 30,
        "fullcodeline": "if (len < header_len)"
    },
    {
        "line": 34,
        "fullcodeline": "if (ret != 0)"
    },
    {
        "line": 39,
        "fullcodeline": "if (pac->pac == NULL) {"
    },
    {
        "line": 47,
        "fullcodeline": "for (i = 0; i < pac->pac->cBuffers; i++) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (pac->data.data == NULL) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (cbuffers < 1 || cbuffers > MAX_BUFFERS)"
    },
    {
        "line": 48,
        "fullcodeline": "PAC_INFO_BUFFER *buffer = &pac->pac->Buffers[i];"
    },
    {
        "line": 51,
        "fullcodeline": "p += 4;"
    },
    {
        "line": 52,
        "fullcodeline": "buffer->cbBufferSize = load_32_le(p);"
    },
    {
        "line": 53,
        "fullcodeline": "p += 4;"
    },
    {
        "line": 54,
        "fullcodeline": "buffer->Offset = load_64_le(p);"
    },
    {
        "line": 55,
        "fullcodeline": "p += 8;"
    },
    {
        "line": 50,
        "fullcodeline": "buffer->ulType = load_32_le(p);"
    },
    {
        "line": 57,
        "fullcodeline": "if (buffer->Offset % PAC_ALIGNMENT) {"
    },
    {
        "line": 38,
        "fullcodeline": "sizeof(PACTYPE) + ((cbuffers - 1) * sizeof(PAC_INFO_BUFFER)));"
    },
    {
        "line": 61,
        "fullcodeline": "if (buffer->Offset < header_len || buffer->Offset > len ||"
    },
    {
        "line": 62,
        "fullcodeline": "buffer->cbBufferSize > len - buffer->Offset) {"
    }
]