[
    {
        "line": 3,
        "fullcodeline": "std::string &remark = node.Remark, original_remark = node.Remark, returned_remark, real_rule;"
    },
    {
        "line": 32,
        "fullcodeline": "if(remark.empty())"
    },
    {
        "line": 33,
        "fullcodeline": "remark = original_remark;"
    },
    {
        "line": 7,
        "fullcodeline": "if(!x.Script.empty() && ext.authorized)"
    },
    {
        "line": 29,
        "fullcodeline": "if(applyMatcher(x.Match, real_rule, node) && real_rule.size())"
    },
    {
        "line": 9,
        "fullcodeline": "script_safe_runner(ext.js_runtime, ext.js_context, [&](qjs::Context &ctx)"
    },
    {
        "line": 30,
        "fullcodeline": "remark = regReplace(remark, real_rule, x.Replace);"
    }
]