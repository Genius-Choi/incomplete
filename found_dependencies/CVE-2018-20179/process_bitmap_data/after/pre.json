[
    {
        "line": 7,
        "fullcodeline": "logger(Protocol, Debug, \"%s()\", __func__);"
    },
    {
        "line": 9,
        "fullcodeline": "struct stream packet = *s;"
    },
    {
        "line": 11,
        "fullcodeline": "in_uint16_le(s, left); /* destLeft */"
    },
    {
        "line": 12,
        "fullcodeline": "in_uint16_le(s, top); /* destTop */"
    },
    {
        "line": 13,
        "fullcodeline": "in_uint16_le(s, right); /* destRight */"
    },
    {
        "line": 14,
        "fullcodeline": "in_uint16_le(s, bottom); /* destBottom */"
    },
    {
        "line": 15,
        "fullcodeline": "in_uint16_le(s, width); /* width */"
    },
    {
        "line": 16,
        "fullcodeline": "in_uint16_le(s, height); /* height */"
    },
    {
        "line": 17,
        "fullcodeline": "in_uint16_le(s, bpp); /*bitsPerPixel */"
    },
    {
        "line": 18,
        "fullcodeline": "Bpp = (bpp + 7) / 8;"
    },
    {
        "line": 19,
        "fullcodeline": "in_uint16_le(s, flags); /* flags */"
    },
    {
        "line": 20,
        "fullcodeline": "in_uint16_le(s, bufsize); /* bitmapLength */"
    },
    {
        "line": 22,
        "fullcodeline": "cx = right - left + 1;"
    },
    {
        "line": 23,
        "fullcodeline": "cy = bottom - top + 1;"
    },
    {
        "line": 80,
        "fullcodeline": "in_uint8p(s, data, size);"
    },
    {
        "line": 81,
        "fullcodeline": "bmpdata = (uint8 *) xmalloc(width * height * Bpp);"
    },
    {
        "line": 33,
        "fullcodeline": "if (Bpp == 0 || width == 0 || height == 0)"
    },
    {
        "line": 40,
        "fullcodeline": "if ((RD_UINT32_MAX / Bpp) <= (width * height))"
    },
    {
        "line": 47,
        "fullcodeline": "if (flags == 0)"
    },
    {
        "line": 62,
        "fullcodeline": "if (flags & NO_BITMAP_COMPRESSION_HDR)"
    },
    {
        "line": 82,
        "fullcodeline": "if (bitmap_decompress(bmpdata, width, height, data, size, Bpp))"
    },
    {
        "line": 35,
        "fullcodeline": "logger(Protocol, Warning, \"%s(), [%d,%d,%d,%d], [%d,%d], bpp=%d, flags=%x\", __func__,"
    },
    {
        "line": 37,
        "fullcodeline": "rdp_protocol_error(\"TS_BITMAP_DATA, unsafe size of bitmap data received from server\", &packet);"
    },
    {
        "line": 42,
        "fullcodeline": "logger(Protocol, Warning, \"%s(), [%d,%d,%d,%d], [%d,%d], bpp=%d, flags=%x\", __func__,"
    },
    {
        "line": 44,
        "fullcodeline": "rdp_protocol_error(\"TS_BITMAP_DATA, unsafe size of bitmap data received from server\", &packet);"
    },
    {
        "line": 51,
        "fullcodeline": "bmpdata = (uint8 *) xmalloc(width * height * Bpp);"
    },
    {
        "line": 57,
        "fullcodeline": "ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);"
    },
    {
        "line": 58,
        "fullcodeline": "xfree(bmpdata);"
    },
    {
        "line": 64,
        "fullcodeline": "size = bufsize;"
    },
    {
        "line": 76,
        "fullcodeline": "if (!s_check_rem(s, size))"
    },
    {
        "line": 84,
        "fullcodeline": "ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);"
    },
    {
        "line": 52,
        "fullcodeline": "for (y = 0; y < height; y++)"
    },
    {
        "line": 69,
        "fullcodeline": "in_uint8s(s, 2);        /* skip cbCompFirstRowSize (must be 0x0000) */"
    },
    {
        "line": 70,
        "fullcodeline": "in_uint16_le(s, size);  /* cbCompMainBodySize */"
    },
    {
        "line": 71,
        "fullcodeline": "in_uint8s(s, 2);        /* skip cbScanWidth */"
    },
    {
        "line": 72,
        "fullcodeline": "in_uint8s(s, 2);        /* skip cbUncompressedSize */"
    },
    {
        "line": 54,
        "fullcodeline": "in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)], width * Bpp);"
    }
]