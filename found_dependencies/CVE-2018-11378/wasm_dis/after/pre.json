[
    {
        "line": 2,
        "fullcodeline": "op->len = 1;"
    },
    {
        "line": 3,
        "fullcodeline": "op->op = buf[0];"
    },
    {
        "line": 8,
        "fullcodeline": "WasmOpDef *opdef = &opcodes[op->op];"
    },
    {
        "line": 4,
        "fullcodeline": "if (op->op > 0xbf) {"
    },
    {
        "line": 148,
        "fullcodeline": "st32 val = 0;"
    },
    {
        "line": 149,
        "fullcodeline": "size_t n = read_i32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 178,
        "fullcodeline": "ut32 val = 0;"
    },
    {
        "line": 179,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 187,
        "fullcodeline": "ut32 count = 0, *table = NULL, def = 0;"
    },
    {
        "line": 188,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &count);"
    },
    {
        "line": 196,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 204,
        "fullcodeline": "n = read_u32_leb128 (buf + op->len, buf + buf_len, &def);"
    },
    {
        "line": 209,
        "fullcodeline": "snprintf (op->txt, R_ASM_BUFSIZE, \"%s %d \", opdef->txt, count);"
    },
    {
        "line": 210,
        "fullcodeline": "char *txt = op->txt;"
    },
    {
        "line": 211,
        "fullcodeline": "int txtLen = strlen (op->txt);"
    },
    {
        "line": 212,
        "fullcodeline": "int txtLeft = R_ASM_BUFSIZE - txtLen;"
    },
    {
        "line": 213,
        "fullcodeline": "txt += txtLen;"
    },
    {
        "line": 230,
        "fullcodeline": "ut32 val = 0, reserved = 0;"
    },
    {
        "line": 231,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 233,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 234,
        "fullcodeline": "n = read_u32_leb128 (buf + op->len, buf + buf_len, &reserved);"
    },
    {
        "line": 236,
        "fullcodeline": "reserved &= 0x1;"
    },
    {
        "line": 247,
        "fullcodeline": "ut32 val = 0;"
    },
    {
        "line": 248,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 278,
        "fullcodeline": "ut32 flag = 0, offset = 0;"
    },
    {
        "line": 279,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &flag);"
    },
    {
        "line": 281,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 282,
        "fullcodeline": "n = read_u32_leb128 (buf + op->len, buf + buf_len, &offset);"
    },
    {
        "line": 291,
        "fullcodeline": "ut32 reserved = 0;"
    },
    {
        "line": 292,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &reserved);"
    },
    {
        "line": 294,
        "fullcodeline": "reserved &= 0x1;"
    },
    {
        "line": 302,
        "fullcodeline": "st32 val = 0;"
    },
    {
        "line": 303,
        "fullcodeline": "size_t n = read_i32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 311,
        "fullcodeline": "st64 val = 0;"
    },
    {
        "line": 312,
        "fullcodeline": "size_t n = read_i64_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 320,
        "fullcodeline": "ut32 val = 0;"
    },
    {
        "line": 321,
        "fullcodeline": "size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 330,
        "fullcodeline": "ut64 val = 0;"
    },
    {
        "line": 331,
        "fullcodeline": "size_t n = read_u64_leb128 (buf + 1, buf + buf_len, &val);"
    },
    {
        "line": 197,
        "fullcodeline": "for (i = 0; i < count; i++) {"
    },
    {
        "line": 214,
        "fullcodeline": "for (i = 0; i < count && txtLen + 10 < R_ASM_BUFSIZE; i++) {"
    },
    {
        "line": 220,
        "fullcodeline": "snprintf (txt, txtLeft - 1, \"%d\", def);"
    },
    {
        "line": 150,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 180,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 189,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) {"
    },
    {
        "line": 192,
        "fullcodeline": "if (!(table = calloc (count, sizeof (ut32)))) {"
    },
    {
        "line": 198,
        "fullcodeline": "n = read_u32_leb128 (buf + op->len, buf + buf_len, &table[i]);"
    },
    {
        "line": 202,
        "fullcodeline": "op->len += n;"
    },
    {
        "line": 205,
        "fullcodeline": "if (!(n > 0 && n + op->len < buf_len)) {"
    },
    {
        "line": 215,
        "fullcodeline": "snprintf (txt, txtLeft, \"%d \", table[i]);"
    },
    {
        "line": 216,
        "fullcodeline": "txtLen = strlen (txt);"
    },
    {
        "line": 217,
        "fullcodeline": "txt += txtLen;"
    },
    {
        "line": 218,
        "fullcodeline": "txtLeft -= txtLen;"
    },
    {
        "line": 232,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 235,
        "fullcodeline": "if (!(n == 1 && op->len + n <= buf_len)) goto err;"
    },
    {
        "line": 249,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 280,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 283,
        "fullcodeline": "if (!(n > 0 && op->len + n <= buf_len)) goto err;"
    },
    {
        "line": 293,
        "fullcodeline": "if (!(n == 1 && n < buf_len)) goto err;"
    },
    {
        "line": 304,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 313,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 322,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 332,
        "fullcodeline": "if (!(n > 0 && n < buf_len)) goto err;"
    },
    {
        "line": 199,
        "fullcodeline": "if (!(op->len + n <= buf_len)) {"
    }
]