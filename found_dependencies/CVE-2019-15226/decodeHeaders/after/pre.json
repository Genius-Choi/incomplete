[
    {
        "line": 3,
        "fullcodeline": "ENVOY_LOG(debug,"
    },
    {
        "line": 17,
        "fullcodeline": "const auto shadow_engine ="
    },
    {
        "line": 53,
        "fullcodeline": "const auto engine ="
    },
    {
        "line": 6,
        "fullcodeline": "callbacks_->connection()->remoteAddress()->asString(),"
    },
    {
        "line": 7,
        "fullcodeline": "callbacks_->connection()->localAddress()->asString(),"
    },
    {
        "line": 8,
        "fullcodeline": "callbacks_->connection()->ssl()"
    },
    {
        "line": 14,
        "fullcodeline": "headers, callbacks_->streamInfo().dynamicMetadata().DebugString());"
    },
    {
        "line": 18,
        "fullcodeline": "config_->engine(callbacks_->route(), Filters::Common::RBAC::EnforcementMode::Shadow);"
    },
    {
        "line": 20,
        "fullcodeline": "if (shadow_engine != nullptr) {"
    },
    {
        "line": 54,
        "fullcodeline": "config_->engine(callbacks_->route(), Filters::Common::RBAC::EnforcementMode::Enforced);"
    },
    {
        "line": 55,
        "fullcodeline": "if (engine != nullptr) {"
    },
    {
        "line": 9,
        "fullcodeline": "? \"uriSanPeerCertificate: \" +"
    },
    {
        "line": 21,
        "fullcodeline": "std::string shadow_resp_code ="
    },
    {
        "line": 26,
        "fullcodeline": "headers.refreshByteSize();"
    },
    {
        "line": 40,
        "fullcodeline": "auto& fields = *metrics.mutable_fields();"
    },
    {
        "line": 47,
        "fullcodeline": "*fields[Filters::Common::RBAC::DynamicMetadataKeysSingleton::get().ShadowEngineResultField]"
    },
    {
        "line": 50,
        "fullcodeline": "callbacks_->streamInfo().setDynamicMetadata(HttpFilterNames::get().Rbac, metrics);"
    },
    {
        "line": 59,
        "fullcodeline": "headers.refreshByteSize();"
    },
    {
        "line": 12,
        "fullcodeline": "callbacks_->connection()->ssl()->subjectPeerCertificate()"
    },
    {
        "line": 27,
        "fullcodeline": "if (shadow_engine->allowed(*callbacks_->connection(), headers, callbacks_->streamInfo(),"
    },
    {
        "line": 41,
        "fullcodeline": "if (!effective_policy_id.empty()) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (engine->allowed(*callbacks_->connection(), headers, callbacks_->streamInfo(), nullptr)) {"
    },
    {
        "line": 29,
        "fullcodeline": "ENVOY_LOG(debug, \"shadow allowed\");"
    },
    {
        "line": 30,
        "fullcodeline": "config_->stats().shadow_allowed_.inc();"
    },
    {
        "line": 42,
        "fullcodeline": "*fields[Filters::Common::RBAC::DynamicMetadataKeysSingleton::get()"
    },
    {
        "line": 61,
        "fullcodeline": "ENVOY_LOG(debug, \"enforced allowed\");"
    },
    {
        "line": 62,
        "fullcodeline": "config_->stats().allowed_.inc();"
    },
    {
        "line": 10,
        "fullcodeline": "absl::StrJoin(callbacks_->connection()->ssl()->uriSanPeerCertificate(), \",\") +"
    },
    {
        "line": 32,
        "fullcodeline": "ENVOY_LOG(debug, \"shadow denied\");"
    },
    {
        "line": 33,
        "fullcodeline": "config_->stats().shadow_denied_.inc();"
    },
    {
        "line": 34,
        "fullcodeline": "shadow_resp_code ="
    }
]