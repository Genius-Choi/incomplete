[
    {
        "line": 6,
        "fullcodeline": "config_helper_.addConfigModifier("
    },
    {
        "line": 9,
        "fullcodeline": "max_request_headers_kb_ = max_size;"
    },
    {
        "line": 10,
        "fullcodeline": "Http::TestHeaderMapImpl request_trailers{{\"trailer\", \"trailer\"}};"
    },
    {
        "line": 11,
        "fullcodeline": "request_trailers.addCopy(\"big\", std::string(size * 1024, 'a'));"
    },
    {
        "line": 13,
        "fullcodeline": "initialize();"
    },
    {
        "line": 15,
        "fullcodeline": "codec_client_ = makeHttpConnection(lookupPort(\"http\"));"
    },
    {
        "line": 16,
        "fullcodeline": "fake_upstreams_[0]->set_allow_unexpected_disconnects(true);"
    },
    {
        "line": 18,
        "fullcodeline": "auto encoder_decoder = codec_client_->startRequest(default_request_headers_);"
    },
    {
        "line": 19,
        "fullcodeline": "request_encoder_ = &encoder_decoder.first;"
    },
    {
        "line": 20,
        "fullcodeline": "auto response = std::move(encoder_decoder.second);"
    },
    {
        "line": 21,
        "fullcodeline": "codec_client_->sendData(*request_encoder_, 10, false);"
    },
    {
        "line": 22,
        "fullcodeline": "codec_client_->sendTrailers(*request_encoder_, request_trailers);"
    },
    {
        "line": 24,
        "fullcodeline": "if (size >= max_size && downstream_protocol_ == Http::CodecClient::Type::HTTP2) {"
    },
    {
        "line": 27,
        "fullcodeline": "response->waitForReset();"
    },
    {
        "line": 28,
        "fullcodeline": "codec_client_->close();"
    },
    {
        "line": 29,
        "fullcodeline": "EXPECT_FALSE(response->complete());"
    },
    {
        "line": 33,
        "fullcodeline": "upstream_request_->encodeHeaders(default_response_headers_, true);"
    },
    {
        "line": 34,
        "fullcodeline": "response->waitForEndStream();"
    },
    {
        "line": 35,
        "fullcodeline": "EXPECT_TRUE(response->complete());"
    }
]