[
    {
        "line": 2,
        "fullcodeline": "ggml_tensor * result = ggml_new_tensor_4d(ctx, (ggml_type) tensor->type,"
    },
    {
        "line": 7,
        "fullcodeline": "result->buffer = reinterpret_cast<ggml_backend_buffer_t>(tensor->buffer);"
    },
    {
        "line": 11,
        "fullcodeline": "result->op = (ggml_op) tensor->op;"
    },
    {
        "line": 15,
        "fullcodeline": "result->flags = tensor->flags;"
    },
    {
        "line": 16,
        "fullcodeline": "result->data = reinterpret_cast<void *>(tensor->data);"
    },
    {
        "line": 17,
        "fullcodeline": "ggml_set_name(result, tensor->name);"
    },
    {
        "line": 4,
        "fullcodeline": "for (uint32_t i = 0; i < GGML_MAX_DIMS; i++) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (result->buffer && buffers.find(result->buffer) == buffers.end()) {"
    },
    {
        "line": 12,
        "fullcodeline": "for (uint32_t i = 0; i < GGML_MAX_OP_PARAMS / sizeof(int32_t); i++) {"
    }
]