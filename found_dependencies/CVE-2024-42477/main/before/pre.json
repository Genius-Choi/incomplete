[
    {
        "line": 7,
        "fullcodeline": "ggml_backend_t backend = create_backend();"
    },
    {
        "line": 12,
        "fullcodeline": "std::string endpoint = params.host + \":\" + std::to_string(params.port);"
    },
    {
        "line": 21,
        "fullcodeline": "start_rpc_server(backend, endpoint.c_str(), free_mem, total_mem);"
    },
    {
        "line": 3,
        "fullcodeline": "if (!rpc_server_params_parse(argc, argv, params)) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (!backend) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (params.backend_mem > 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "printf(\"Starting RPC server on %s, backend memory: %zu MB\\n\", endpoint.c_str(), free_mem / (1024 * 1024));"
    },
    {
        "line": 4,
        "fullcodeline": "fprintf(stderr, \"Invalid parameters\\n\");"
    },
    {
        "line": 15,
        "fullcodeline": "free_mem = params.backend_mem;"
    },
    {
        "line": 16,
        "fullcodeline": "total_mem = params.backend_mem;"
    },
    {
        "line": 18,
        "fullcodeline": "get_backend_memory(&free_mem, &total_mem);"
    }
]