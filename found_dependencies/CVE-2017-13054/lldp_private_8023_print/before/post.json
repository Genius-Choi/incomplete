[
    {
        "line": 4,
        "fullcodeline": "int subtype, hexdump = FALSE;"
    },
    {
        "line": 11,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  %s Subtype (%u)\","
    },
    {
        "line": 6,
        "fullcodeline": "if (tlv_len < 4) {"
    },
    {
        "line": 9,
        "fullcodeline": "subtype = *(tptr+3);"
    },
    {
        "line": 20,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    autonegotiation [%s] (0x%02x)\","
    },
    {
        "line": 23,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    PMD autoneg capability [%s] (0x%04x)\","
    },
    {
        "line": 26,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    MAU type %s (0x%04x)\","
    },
    {
        "line": 35,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    MDI power support [%s], power pair %s, power class %s\","
    },
    {
        "line": 45,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    aggregation status [%s], aggregation port ID %u\","
    },
    {
        "line": 51,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    MTU size %u\", EXTRACT_16BITS(tptr + 4)));"
    },
    {
        "line": 55,
        "fullcodeline": "hexdump = TRUE;"
    },
    {
        "line": 12,
        "fullcodeline": "tok2str(lldp_8023_subtype_values, \"unknown\", subtype),"
    },
    {
        "line": 17,
        "fullcodeline": "if (tlv_len < 9) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (tlv_len < 7) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (tlv_len < 9) {"
    },
    {
        "line": 21,
        "fullcodeline": "bittok2str(lldp_8023_autonegotiation_values, \"none\", *(tptr+4)),"
    },
    {
        "line": 24,
        "fullcodeline": "bittok2str(lldp_pmd_capability_values,\"unknown\", EXTRACT_16BITS(tptr+5)),"
    },
    {
        "line": 25,
        "fullcodeline": "EXTRACT_16BITS(tptr + 5)));"
    },
    {
        "line": 27,
        "fullcodeline": "tok2str(lldp_mau_types_values, \"unknown\", EXTRACT_16BITS(tptr+7)),"
    },
    {
        "line": 28,
        "fullcodeline": "EXTRACT_16BITS(tptr + 7)));"
    },
    {
        "line": 36,
        "fullcodeline": "bittok2str(lldp_mdi_values, \"none\", *(tptr+4)),"
    },
    {
        "line": 37,
        "fullcodeline": "tok2str(lldp_mdi_power_pairs_values, \"unknown\", *(tptr+5)),"
    },
    {
        "line": 38,
        "fullcodeline": "tok2str(lldp_mdi_power_class_values, \"unknown\", *(tptr + 6))));"
    },
    {
        "line": 46,
        "fullcodeline": "bittok2str(lldp_aggregation_values, \"none\", *(tptr+4)),"
    },
    {
        "line": 47,
        "fullcodeline": "EXTRACT_32BITS(tptr + 5)));"
    },
    {
        "line": 22,
        "fullcodeline": "*(tptr + 4)));"
    }
]