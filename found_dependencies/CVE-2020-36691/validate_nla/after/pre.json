[
    {
        "line": 5,
        "fullcodeline": "u16 strict_start_type = policy[0].strict_start_type;"
    },
    {
        "line": 7,
        "fullcodeline": "int minlen = 0, attrlen = nla_len(nla), type = nla_type(nla);"
    },
    {
        "line": 8,
        "fullcodeline": "int err = -ERANGE;"
    },
    {
        "line": 16,
        "fullcodeline": "pt = &policy[type];"
    },
    {
        "line": 10,
        "fullcodeline": "if (strict_start_type && type >= strict_start_type)"
    },
    {
        "line": 13,
        "fullcodeline": "if (type <= 0 || type > maxtype)"
    },
    {
        "line": 18,
        "fullcodeline": "BUG_ON(pt->type > NLA_TYPE_MAX);"
    },
    {
        "line": 31,
        "fullcodeline": "if (validate & NL_VALIDATE_NESTED) {"
    },
    {
        "line": 11,
        "fullcodeline": "validate |= NL_VALIDATE_STRICT;"
    },
    {
        "line": 20,
        "fullcodeline": "if ((nla_attr_len[pt->type] && attrlen != nla_attr_len[pt->type]) ||"
    },
    {
        "line": 21,
        "fullcodeline": "(pt->type == NLA_EXACT_LEN_WARN && attrlen != pt->len)) {"
    },
    {
        "line": 58,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 70,
        "fullcodeline": "err = validate_nla_bitfield32(nla, pt->bitfield32_valid);"
    },
    {
        "line": 183,
        "fullcodeline": "err = nla_validate_int_range(pt, nla, extack);"
    },
    {
        "line": 24,
        "fullcodeline": "if (validate & NL_VALIDATE_STRICT_ATTRS) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (attrlen != pt->len)"
    },
    {
        "line": 53,
        "fullcodeline": "if (extack && pt->reject_message) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (attrlen < 1)"
    },
    {
        "line": 103,
        "fullcodeline": "if (pt->len && attrlen > pt->len)"
    },
    {
        "line": 111,
        "fullcodeline": "if (attrlen == 0)"
    },
    {
        "line": 133,
        "fullcodeline": "if (attrlen == 0)"
    },
    {
        "line": 154,
        "fullcodeline": "if (validate & NL_VALIDATE_UNSPEC) {"
    },
    {
        "line": 161,
        "fullcodeline": "if (attrlen < pt->len)"
    },
    {
        "line": 32,
        "fullcodeline": "if ((pt->type == NLA_NESTED || pt->type == NLA_NESTED_ARRAY) &&"
    },
    {
        "line": 33,
        "fullcodeline": "!(nla->nla_type & NLA_F_NESTED)) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (pt->type != NLA_NESTED && pt->type != NLA_NESTED_ARRAY &&"
    },
    {
        "line": 39,
        "fullcodeline": "pt->type != NLA_UNSPEC && (nla->nla_type & NLA_F_NESTED)) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (attrlen != sizeof(struct nla_bitfield32))"
    },
    {
        "line": 81,
        "fullcodeline": "if (!minlen || memchr(nla_data(nla), '\\0', minlen) == NULL) {"
    },
    {
        "line": 82,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 92,
        "fullcodeline": "char *buf = nla_data(nla);"
    },
    {
        "line": 116,
        "fullcodeline": "err = __nla_validate_parse(nla_data(nla), nla_len(nla),"
    },
    {
        "line": 140,
        "fullcodeline": "err = nla_validate_array(nla_data(nla), nla_len(nla),"
    },
    {
        "line": 167,
        "fullcodeline": "minlen = pt->len;"
    },
    {
        "line": 189,
        "fullcodeline": "err = pt->validate(nla, extack);"
    },
    {
        "line": 27,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 36,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 42,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 56,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 97,
        "fullcodeline": "if (attrlen > pt->len)"
    },
    {
        "line": 120,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 143,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 157,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 169,
        "fullcodeline": "minlen = nla_attr_minlen[pt->type];"
    },
    {
        "line": 95,
        "fullcodeline": "attrlen--;"
    },
    {
        "line": 94,
        "fullcodeline": "if (buf[attrlen - 1] == '\\0')"
    }
]