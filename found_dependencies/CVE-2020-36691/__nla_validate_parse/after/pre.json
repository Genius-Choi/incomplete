[
    {
        "line": 19,
        "fullcodeline": "nla_for_each_attr(nla, head, len, rem) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (depth >= MAX_POLICY_RECURSION_DEPTH) {"
    },
    {
        "line": 20,
        "fullcodeline": "u16 type = nla_type(nla);"
    },
    {
        "line": 11,
        "fullcodeline": "NL_SET_ERR_MSG(extack,"
    },
    {
        "line": 42,
        "fullcodeline": "if (unlikely(rem > 0)) {"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 17,
        "fullcodeline": "memset(tb, 0, sizeof(struct nlattr *) * (maxtype + 1));"
    },
    {
        "line": 22,
        "fullcodeline": "if (type == 0 || type > maxtype) {"
    },
    {
        "line": 31,
        "fullcodeline": "int err = validate_nla(nla, maxtype, policy,"
    },
    {
        "line": 46,
        "fullcodeline": "if (validate & NL_VALIDATE_TRAILING)"
    },
    {
        "line": 23,
        "fullcodeline": "if (validate & NL_VALIDATE_MAXTYPE) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 47,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 26,
        "fullcodeline": "return -EINVAL;"
    }
]