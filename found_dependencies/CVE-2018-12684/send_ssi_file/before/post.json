[
    {
        "line": 6,
        "fullcodeline": "char buf[MG_BUF_LEN];"
    },
    {
        "line": 14,
        "fullcodeline": "in_tag = in_ssi_tag = len = offset = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "if (include_level > 10) {"
    },
    {
        "line": 17,
        "fullcodeline": "while ((ch = mg_fgetc(filep, offset++)) != EOF) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (len > 0) {"
    },
    {
        "line": 10,
        "fullcodeline": "mg_cry_internal(conn, \"SSI #include level is too deep (%s)\", path);"
    },
    {
        "line": 101,
        "fullcodeline": "mg_write(conn, buf, (size_t)len);"
    },
    {
        "line": 22,
        "fullcodeline": "if (ch == '>') {"
    },
    {
        "line": 24,
        "fullcodeline": "buf[len++] = '>';"
    },
    {
        "line": 73,
        "fullcodeline": "if (ch == '<') {"
    },
    {
        "line": 56,
        "fullcodeline": "buf[len++] = (char)(ch & 0xff);"
    },
    {
        "line": 75,
        "fullcodeline": "in_tag = 1;"
    },
    {
        "line": 83,
        "fullcodeline": "len = 1;"
    },
    {
        "line": 84,
        "fullcodeline": "buf[0] = '<';"
    },
    {
        "line": 28,
        "fullcodeline": "buf[len] = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "in_ssi_tag = in_tag = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "if ((len == 5) && !memcmp(buf, \"<!--#\", 5)) {"
    },
    {
        "line": 63,
        "fullcodeline": "if ((len + 2) > (int)sizeof(buf)) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (len > 0) {"
    },
    {
        "line": 89,
        "fullcodeline": "buf[len++] = (char)(ch & 0xff);"
    },
    {
        "line": 30,
        "fullcodeline": "if (!memcmp(buf + 5, \"include\", 7)) {"
    },
    {
        "line": 49,
        "fullcodeline": "(void)mg_write(conn, buf, (size_t)len);"
    },
    {
        "line": 50,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "in_tag = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "in_ssi_tag = 1;"
    },
    {
        "line": 65,
        "fullcodeline": "mg_cry_internal(conn, \"%s: tag is too large\", path);"
    },
    {
        "line": 80,
        "fullcodeline": "(void)mg_write(conn, buf, (size_t)len);"
    },
    {
        "line": 91,
        "fullcodeline": "if (len == (int)sizeof(buf)) {"
    },
    {
        "line": 31,
        "fullcodeline": "do_ssi_include(conn, path, buf + 12, include_level + 1);"
    },
    {
        "line": 92,
        "fullcodeline": "mg_write(conn, buf, (size_t)len);"
    },
    {
        "line": 93,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "} else if (!memcmp(buf + 5, \"exec\", 4)) {"
    },
    {
        "line": 34,
        "fullcodeline": "do_ssi_exec(conn, buf + 9);"
    },
    {
        "line": 37,
        "fullcodeline": "mg_cry_internal(conn,"
    }
]