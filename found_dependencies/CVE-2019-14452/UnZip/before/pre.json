[
    {
        "line": 3,
        "fullcodeline": "int res = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "QDir dir(destpath);"
    },
    {
        "line": 13,
        "fullcodeline": "unzFile zfile = unzOpen64(QDir::toNativeSeparators(zippath).toUtf8().constData());"
    },
    {
        "line": 20,
        "fullcodeline": "res = unzGoToFirstFile(zfile);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!cp437) {"
    },
    {
        "line": 16,
        "fullcodeline": "if ((zfile == NULL) || (!IsFileReadable(zippath)) || (!dir.exists())) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (res == UNZ_OK) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (res != UNZ_END_OF_LIST_OF_FILE) {"
    },
    {
        "line": 6,
        "fullcodeline": "cp437 = new QCodePage437Codec();"
    },
    {
        "line": 98,
        "fullcodeline": "} while ((res = unzGoToNextFile(zfile)) == UNZ_OK);"
    },
    {
        "line": 25,
        "fullcodeline": "char file_name[MAX_PATH] = {0};"
    },
    {
        "line": 27,
        "fullcodeline": "unzGetCurrentFileInfo64(zfile, &file_info, file_name, MAX_PATH, NULL, 0, NULL, 0);"
    },
    {
        "line": 30,
        "fullcodeline": "qfile_name = QString::fromUtf8(file_name);"
    },
    {
        "line": 31,
        "fullcodeline": "if (!(file_info.flag & (1<<11))) {"
    },
    {
        "line": 34,
        "fullcodeline": "cp437_file_name = cp437->toUnicode(file_name);"
    },
    {
        "line": 38,
        "fullcodeline": "if (!qfile_name.isEmpty()) {"
    },
    {
        "line": 42,
        "fullcodeline": "QString file_path = destpath + \"/\" + qfile_name;"
    },
    {
        "line": 43,
        "fullcodeline": "QFileInfo qfile_info(file_path);"
    },
    {
        "line": 60,
        "fullcodeline": "QFile entry(file_path);"
    },
    {
        "line": 69,
        "fullcodeline": "char buff[BUFF_SIZE] = {0};"
    },
    {
        "line": 76,
        "fullcodeline": "entry.close();"
    },
    {
        "line": 54,
        "fullcodeline": "if (unzOpenCurrentFile(zfile) != UNZ_OK) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (unzCloseCurrentFile(zfile) == UNZ_CRCERROR) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (file_info.uncompressed_size == 0 && qfile_name.endsWith('/')) {"
    },
    {
        "line": 47,
        "fullcodeline": "dir.mkpath(qfile_name);"
    },
    {
        "line": 62,
        "fullcodeline": "if (!entry.open(QIODevice::WriteOnly | QIODevice::Truncate)) {"
    },
    {
        "line": 63,
        "fullcodeline": "unzCloseCurrentFile(zfile);"
    },
    {
        "line": 72,
        "fullcodeline": "while ((read = unzReadCurrentFile(zfile, buff, BUFF_SIZE)) > 0) {"
    },
    {
        "line": 73,
        "fullcodeline": "entry.write(buff, read);"
    },
    {
        "line": 80,
        "fullcodeline": "unzCloseCurrentFile(zfile);"
    },
    {
        "line": 93,
        "fullcodeline": "if (!cp437_file_name.isEmpty() && cp437_file_name != qfile_name) {"
    },
    {
        "line": 94,
        "fullcodeline": "QString cp437_file_path = destpath + \"/\" + cp437_file_name;"
    },
    {
        "line": 50,
        "fullcodeline": "dir.mkpath(qfile_info.path());"
    }
]