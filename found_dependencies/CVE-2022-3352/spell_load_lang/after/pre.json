[
    {
        "line": 3,
        "fullcodeline": "char_u\tfname_enc[85];"
    },
    {
        "line": 10,
        "fullcodeline": "STRCPY(sl.sl_lang, lang);"
    },
    {
        "line": 11,
        "fullcodeline": "sl.sl_slang = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "sl.sl_nobreak = FALSE;"
    },
    {
        "line": 16,
        "fullcodeline": "++curbuf->b_locked;"
    },
    {
        "line": 72,
        "fullcodeline": "--curbuf->b_locked;"
    },
    {
        "line": 20,
        "fullcodeline": "for (round = 1; round <= 2; ++round)"
    },
    {
        "line": 55,
        "fullcodeline": "if (r == FAIL)"
    },
    {
        "line": 25,
        "fullcodeline": "vim_snprintf((char *)fname_enc, sizeof(fname_enc) - 5,"
    },
    {
        "line": 32,
        "fullcodeline": "r = do_in_runtimepath(fname_enc, 0, spell_load_cb, &sl);"
    },
    {
        "line": 57,
        "fullcodeline": "smsg("
    },
    {
        "line": 34,
        "fullcodeline": "if (r == FAIL && *sl.sl_lang != NUL)"
    },
    {
        "line": 61,
        "fullcodeline": "_(\"Warning: Cannot find word list \\\"%s.%s.spl\\\" or \\\"%s.ascii.spl\\\"\"),"
    },
    {
        "line": 37,
        "fullcodeline": "vim_snprintf((char *)fname_enc, sizeof(fname_enc) - 5,"
    },
    {
        "line": 44,
        "fullcodeline": "r = do_in_runtimepath(fname_enc, 0, spell_load_cb, &sl);"
    },
    {
        "line": 65,
        "fullcodeline": "else if (sl.sl_slang != NULL)"
    },
    {
        "line": 46,
        "fullcodeline": "if (r == FAIL && *sl.sl_lang != NUL && round == 1"
    },
    {
        "line": 68,
        "fullcodeline": "STRCPY(fname_enc + STRLEN(fname_enc) - 3, \"add.spl\");"
    },
    {
        "line": 69,
        "fullcodeline": "do_in_runtimepath(fname_enc, DIP_ALL, spell_load_cb, &sl);"
    },
    {
        "line": 47,
        "fullcodeline": "&& apply_autocmds(EVENT_SPELLFILEMISSING, lang,"
    }
]