[
    {
        "line": 3,
        "fullcodeline": "assert(stream != NULL);"
    },
    {
        "line": 4,
        "fullcodeline": "assert(fmt != NULL);"
    },
    {
        "line": 8,
        "fullcodeline": "if (*fmt == '%') {"
    },
    {
        "line": 10,
        "fullcodeline": "++fmt;"
    },
    {
        "line": 11,
        "fullcodeline": "UInt32 len = eatLength(&fmt);"
    },
    {
        "line": 158,
        "fullcodeline": "++fmt;"
    },
    {
        "line": 162,
        "fullcodeline": "char buffer[1];"
    },
    {
        "line": 163,
        "fullcodeline": "read(stream, buffer, 1);"
    },
    {
        "line": 172,
        "fullcodeline": "++fmt;"
    },
    {
        "line": 154,
        "fullcodeline": "assert(0 && \"invalid format specifier\");"
    },
    {
        "line": 166,
        "fullcodeline": "if (buffer[0] != *fmt) {"
    },
    {
        "line": 15,
        "fullcodeline": "assert(len == 1 || len == 2 || len == 4);"
    },
    {
        "line": 18,
        "fullcodeline": "UInt8 buffer[4];"
    },
    {
        "line": 19,
        "fullcodeline": "read(stream, buffer, len);"
    },
    {
        "line": 54,
        "fullcodeline": "assert(len == 1 || len == 2 || len == 4);"
    },
    {
        "line": 57,
        "fullcodeline": "UInt8 buffer[4];"
    },
    {
        "line": 58,
        "fullcodeline": "read(stream, buffer, 4);"
    },
    {
        "line": 59,
        "fullcodeline": "UInt32 n = (static_cast<UInt32>(buffer[0]) << 24) |"
    },
    {
        "line": 106,
        "fullcodeline": "assert(len == 0);"
    },
    {
        "line": 109,
        "fullcodeline": "UInt8 buffer[128];"
    },
    {
        "line": 110,
        "fullcodeline": "read(stream, buffer, 4);"
    },
    {
        "line": 111,
        "fullcodeline": "UInt32 len = (static_cast<UInt32>(buffer[0]) << 24) |"
    },
    {
        "line": 117,
        "fullcodeline": "const bool useFixed = (len <= sizeof(buffer));"
    },
    {
        "line": 120,
        "fullcodeline": "UInt8* sBuffer = buffer;"
    },
    {
        "line": 140,
        "fullcodeline": "dst->assign((const char*)sBuffer, len);"
    },
    {
        "line": 150,
        "fullcodeline": "assert(len == 0);"
    },
    {
        "line": 121,
        "fullcodeline": "if (!useFixed) {"
    },
    {
        "line": 26,
        "fullcodeline": "*static_cast<UInt8*>(v) = buffer[0];"
    },
    {
        "line": 32,
        "fullcodeline": "*static_cast<UInt16*>(v) ="
    },
    {
        "line": 41,
        "fullcodeline": "*static_cast<UInt32*>(v) ="
    },
    {
        "line": 114,
        "fullcodeline": "static_cast<UInt32>(buffer[3]);"
    },
    {
        "line": 122,
        "fullcodeline": "sBuffer = new UInt8[len];"
    },
    {
        "line": 127,
        "fullcodeline": "read(stream, sBuffer, len);"
    },
    {
        "line": 144,
        "fullcodeline": "delete[] sBuffer;"
    },
    {
        "line": 33,
        "fullcodeline": "static_cast<UInt16>("
    },
    {
        "line": 42,
        "fullcodeline": "(static_cast<UInt32>(buffer[0]) << 24) |"
    },
    {
        "line": 61,
        "fullcodeline": "(static_cast<UInt32>(buffer[2]) <<  8) |"
    },
    {
        "line": 69,
        "fullcodeline": "for (UInt32 i = 0; i < n; ++i) {"
    },
    {
        "line": 79,
        "fullcodeline": "for (UInt32 i = 0; i < n; ++i) {"
    },
    {
        "line": 91,
        "fullcodeline": "for (UInt32 i = 0; i < n; ++i) {"
    },
    {
        "line": 113,
        "fullcodeline": "(static_cast<UInt32>(buffer[2]) <<  8) |"
    },
    {
        "line": 34,
        "fullcodeline": "(static_cast<UInt16>(buffer[0]) << 8) |"
    },
    {
        "line": 60,
        "fullcodeline": "(static_cast<UInt32>(buffer[1]) << 16) |"
    },
    {
        "line": 70,
        "fullcodeline": "read(stream, buffer, 1);"
    },
    {
        "line": 71,
        "fullcodeline": "static_cast<std::vector<UInt8>*>(v)->push_back("
    },
    {
        "line": 80,
        "fullcodeline": "read(stream, buffer, 2);"
    },
    {
        "line": 81,
        "fullcodeline": "static_cast<std::vector<UInt16>*>(v)->push_back("
    },
    {
        "line": 92,
        "fullcodeline": "read(stream, buffer, 4);"
    },
    {
        "line": 93,
        "fullcodeline": "static_cast<std::vector<UInt32>*>(v)->push_back("
    },
    {
        "line": 112,
        "fullcodeline": "(static_cast<UInt32>(buffer[1]) << 16) |"
    },
    {
        "line": 130,
        "fullcodeline": "if (!useFixed) {"
    },
    {
        "line": 44,
        "fullcodeline": "(static_cast<UInt32>(buffer[2]) <<  8) |"
    },
    {
        "line": 82,
        "fullcodeline": "static_cast<UInt16>("
    },
    {
        "line": 94,
        "fullcodeline": "(static_cast<UInt32>(buffer[0]) << 24) |"
    },
    {
        "line": 131,
        "fullcodeline": "delete[] sBuffer;"
    },
    {
        "line": 43,
        "fullcodeline": "(static_cast<UInt32>(buffer[1]) << 16) |"
    },
    {
        "line": 83,
        "fullcodeline": "(static_cast<UInt16>(buffer[0]) << 8) |"
    },
    {
        "line": 96,
        "fullcodeline": "(static_cast<UInt32>(buffer[2]) <<  8) |"
    },
    {
        "line": 95,
        "fullcodeline": "(static_cast<UInt32>(buffer[1]) << 16) |"
    }
]