[
    {
        "line": 7,
        "fullcodeline": "char_u  buf[NUMBUFLEN];"
    },
    {
        "line": 10,
        "fullcodeline": "if (str == NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "for (p = str; *p != NUL; ++p)"
    },
    {
        "line": 12,
        "fullcodeline": "ga_concat(gap, (char_u *)\"NULL\");"
    },
    {
        "line": 18,
        "fullcodeline": "same_len = 1;"
    },
    {
        "line": 19,
        "fullcodeline": "s = p;"
    },
    {
        "line": 20,
        "fullcodeline": "c = mb_ptr2char_adv(&s);"
    },
    {
        "line": 21,
        "fullcodeline": "clen = s - p;"
    },
    {
        "line": 27,
        "fullcodeline": "if (same_len > 20)"
    },
    {
        "line": 22,
        "fullcodeline": "while (*s != NUL && c == mb_ptr2char(s))"
    },
    {
        "line": 24,
        "fullcodeline": "++same_len;"
    },
    {
        "line": 25,
        "fullcodeline": "s += clen;"
    },
    {
        "line": 29,
        "fullcodeline": "ga_concat(gap, (char_u *)\"\\\\[\");"
    },
    {
        "line": 30,
        "fullcodeline": "ga_concat_esc(gap, p, clen);"
    },
    {
        "line": 31,
        "fullcodeline": "ga_concat(gap, (char_u *)\" occurs \");"
    },
    {
        "line": 33,
        "fullcodeline": "ga_concat(gap, buf);"
    },
    {
        "line": 34,
        "fullcodeline": "ga_concat(gap, (char_u *)\" times]\");"
    },
    {
        "line": 35,
        "fullcodeline": "p = s - 1;"
    },
    {
        "line": 38,
        "fullcodeline": "ga_concat_esc(gap, p, clen);"
    }
]