[
    {
        "line": 3,
        "fullcodeline": "struct cil_args_build *args = extra_args;"
    },
    {
        "line": 4,
        "fullcodeline": "struct cil_tree_node *ast = args->ast;"
    },
    {
        "line": 6,
        "fullcodeline": "if (ast->flavor == CIL_ROOT) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (ast->flavor == CIL_TUNABLEIF) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (ast->flavor == CIL_IN) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (ast->flavor == CIL_MACRO) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (ast->flavor == CIL_OPTIONAL) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (ast->flavor == CIL_BOOLEANIF) {"
    },
    {
        "line": 25,
        "fullcodeline": "struct cil_tree_node *n = ast->parent;"
    },
    {
        "line": 28,
        "fullcodeline": "while (n && n->flavor != CIL_ROOT) {"
    },
    {
        "line": 33,
        "fullcodeline": "n = n->parent;"
    },
    {
        "line": 29,
        "fullcodeline": "if (n->flavor == CIL_OPTIONAL) {"
    }
]