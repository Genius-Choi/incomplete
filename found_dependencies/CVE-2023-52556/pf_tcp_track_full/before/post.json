[
    {
        "line": 6,
        "fullcodeline": "u_int16_t\t\t win = ntohs(th->th_win);"
    },
    {
        "line": 36,
        "fullcodeline": "orig_seq = seq = ntohl(th->th_seq);"
    },
    {
        "line": 138,
        "fullcodeline": "ackskew = dst->seqlo - ack;"
    },
    {
        "line": 11,
        "fullcodeline": "if ((pd->dir == (*stp)->direction && !reverse) ||"
    },
    {
        "line": 24,
        "fullcodeline": "if (src->wscale && dst->wscale && !(th->th_flags & TH_SYN)) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (src->seqlo == 0) {"
    },
    {
        "line": 118,
        "fullcodeline": "if ((th->th_flags & TH_ACK) == 0) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (seq == end) {"
    },
    {
        "line": 153,
        "fullcodeline": "if (dst->seqdiff && (th->th_off << 2) > sizeof(struct tcphdr)) {"
    },
    {
        "line": 160,
        "fullcodeline": "if (SEQ_GEQ(src->seqhi, data_end) &&"
    },
    {
        "line": 12,
        "fullcodeline": "(pd->dir != (*stp)->direction && reverse)) {"
    },
    {
        "line": 15,
        "fullcodeline": "psrc = PF_PEER_SRC;"
    },
    {
        "line": 16,
        "fullcodeline": "pdst = PF_PEER_DST;"
    },
    {
        "line": 25,
        "fullcodeline": "sws = src->wscale & PF_WSCALE_MASK;"
    },
    {
        "line": 26,
        "fullcodeline": "dws = dst->wscale & PF_WSCALE_MASK;"
    },
    {
        "line": 61,
        "fullcodeline": "end = seq + pd->p_len;"
    },
    {
        "line": 83,
        "fullcodeline": "data_end = end;"
    },
    {
        "line": 87,
        "fullcodeline": "src->seqlo = seq;"
    },
    {
        "line": 120,
        "fullcodeline": "ack = dst->seqlo;"
    },
    {
        "line": 134,
        "fullcodeline": "seq = src->seqlo;"
    },
    {
        "line": 135,
        "fullcodeline": "data_end = end = seq;"
    },
    {
        "line": 168,
        "fullcodeline": "((th->th_flags & TH_RST) == 0 || orig_seq == src->seqlo ||"
    },
    {
        "line": 213,
        "fullcodeline": "(*stp)->expire = getuptime();"
    },
    {
        "line": 20,
        "fullcodeline": "psrc = PF_PEER_DST;"
    },
    {
        "line": 21,
        "fullcodeline": "pdst = PF_PEER_SRC;"
    },
    {
        "line": 28,
        "fullcodeline": "sws = dws = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "if (((*stp)->state_flags & PFSTATE_SCRUB_TCP || dst->scrub) &&"
    },
    {
        "line": 49,
        "fullcodeline": "if (dst->seqdiff && !src->seqdiff) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (th->th_flags & TH_SYN) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (th->th_flags & TH_FIN)"
    },
    {
        "line": 88,
        "fullcodeline": "if (src->state < TCPS_SYN_SENT)"
    },
    {
        "line": 96,
        "fullcodeline": "if (src->seqhi == 1 ||"
    },
    {
        "line": 99,
        "fullcodeline": "if (win > src->max_win)"
    },
    {
        "line": 103,
        "fullcodeline": "ack = ntohl(th->th_ack) - dst->seqdiff;"
    },
    {
        "line": 110,
        "fullcodeline": "end = seq + pd->p_len;"
    },
    {
        "line": 113,
        "fullcodeline": "data_end = end;"
    },
    {
        "line": 154,
        "fullcodeline": "if (pf_modulate_sack(pd, dst))"
    },
    {
        "line": 166,
        "fullcodeline": "(ackskew <= (MAXACKWINDOW << sws)) &&"
    },
    {
        "line": 169,
        "fullcodeline": "(orig_seq == src->seqlo + 1) || (orig_seq + 1 == src->seqlo))) {"
    },
    {
        "line": 172,
        "fullcodeline": "if (dst->scrub || src->scrub) {"
    },
    {
        "line": 179,
        "fullcodeline": "if (src->max_win < win)"
    },
    {
        "line": 182,
        "fullcodeline": "if (SEQ_GT(end, src->seqlo))"
    },
    {
        "line": 185,
        "fullcodeline": "if (SEQ_GEQ(ack + (win << sws), dst->seqhi))"
    },
    {
        "line": 189,
        "fullcodeline": "if (th->th_flags & TH_SYN)"
    },
    {
        "line": 192,
        "fullcodeline": "if (th->th_flags & TH_FIN)"
    },
    {
        "line": 195,
        "fullcodeline": "if (th->th_flags & TH_ACK) {"
    },
    {
        "line": 209,
        "fullcodeline": "if (th->th_flags & TH_RST)"
    },
    {
        "line": 214,
        "fullcodeline": "if (src->state >= TCPS_FIN_WAIT_2 &&"
    },
    {
        "line": 41,
        "fullcodeline": "src->scrub == NULL) {"
    },
    {
        "line": 53,
        "fullcodeline": "ack = ntohl(th->th_ack) - dst->seqdiff;"
    },
    {
        "line": 54,
        "fullcodeline": "pf_patch_32(pd, &th->th_seq, htonl(seq + src->seqdiff));"
    },
    {
        "line": 55,
        "fullcodeline": "pf_patch_32(pd, &th->th_ack, htonl(ack));"
    },
    {
        "line": 56,
        "fullcodeline": "*copyback = 1;"
    },
    {
        "line": 63,
        "fullcodeline": "end++;"
    },
    {
        "line": 85,
        "fullcodeline": "end++;"
    },
    {
        "line": 89,
        "fullcodeline": "pf_set_protostate(*stp, psrc, TCPS_SYN_SENT);"
    },
    {
        "line": 97,
        "fullcodeline": "SEQ_GEQ(end + MAX(1, dst->max_win << dws), src->seqhi))"
    },
    {
        "line": 98,
        "fullcodeline": "src->seqhi = end + MAX(1, dst->max_win << dws);"
    },
    {
        "line": 100,
        "fullcodeline": "src->max_win = win;"
    },
    {
        "line": 111,
        "fullcodeline": "if (th->th_flags & TH_SYN)"
    },
    {
        "line": 114,
        "fullcodeline": "if (th->th_flags & TH_FIN)"
    },
    {
        "line": 121,
        "fullcodeline": "} else if ((ack == 0 &&"
    },
    {
        "line": 155,
        "fullcodeline": "*copyback = 1;"
    },
    {
        "line": 164,
        "fullcodeline": "(ackskew >= -MAXACKWINDOW) &&"
    },
    {
        "line": 180,
        "fullcodeline": "src->max_win = win;"
    },
    {
        "line": 183,
        "fullcodeline": "src->seqlo = end;"
    },
    {
        "line": 186,
        "fullcodeline": "dst->seqhi = ack + MAX((win << sws), 1);"
    },
    {
        "line": 210,
        "fullcodeline": "pf_set_protostate(*stp, PF_PEER_BOTH, TCPS_TIME_WAIT);"
    },
    {
        "line": 215,
        "fullcodeline": "dst->state >= TCPS_FIN_WAIT_2)"
    },
    {
        "line": 216,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_CLOSED;"
    },
    {
        "line": 230,
        "fullcodeline": "} else if ((dst->state < TCPS_SYN_SENT ||"
    },
    {
        "line": 42,
        "fullcodeline": "if (pf_normalize_tcp_init(pd, src)) {"
    },
    {
        "line": 51,
        "fullcodeline": "while ((src->seqdiff = arc4random() - seq) == 0)"
    },
    {
        "line": 58,
        "fullcodeline": "ack = ntohl(th->th_ack);"
    },
    {
        "line": 64,
        "fullcodeline": "if (dst->wscale & PF_WSCALE_FLAG) {"
    },
    {
        "line": 106,
        "fullcodeline": "pf_patch_32(pd, &th->th_seq, htonl(seq + src->seqdiff));"
    },
    {
        "line": 107,
        "fullcodeline": "pf_patch_32(pd, &th->th_ack, htonl(ack));"
    },
    {
        "line": 108,
        "fullcodeline": "*copyback = 1;"
    },
    {
        "line": 112,
        "fullcodeline": "end++;"
    },
    {
        "line": 115,
        "fullcodeline": "end++;"
    },
    {
        "line": 124,
        "fullcodeline": "(dst->state < TCPS_SYN_SENT)) {"
    },
    {
        "line": 129,
        "fullcodeline": "ack = dst->seqlo;"
    },
    {
        "line": 162,
        "fullcodeline": "SEQ_GEQ(seq, src->seqlo - (dst->max_win << dws)) &&"
    },
    {
        "line": 173,
        "fullcodeline": "if (pf_normalize_tcp_stateful(pd, reason, *stp, src,"
    },
    {
        "line": 190,
        "fullcodeline": "if (src->state < TCPS_SYN_SENT)"
    },
    {
        "line": 193,
        "fullcodeline": "if (src->state < TCPS_CLOSING)"
    },
    {
        "line": 196,
        "fullcodeline": "if (dst->state == TCPS_SYN_SENT) {"
    },
    {
        "line": 235,
        "fullcodeline": "SEQ_GEQ(seq, src->seqlo - MAXACKWINDOW)) {"
    },
    {
        "line": 43,
        "fullcodeline": "REASON_SET(reason, PFRES_MEMORY);"
    },
    {
        "line": 65,
        "fullcodeline": "src->wscale = pf_get_wscale(pd);"
    },
    {
        "line": 122,
        "fullcodeline": "(th->th_flags & (TH_ACK|TH_RST)) == (TH_ACK|TH_RST)) ||"
    },
    {
        "line": 191,
        "fullcodeline": "pf_set_protostate(*stp, psrc, TCPS_SYN_SENT);"
    },
    {
        "line": 194,
        "fullcodeline": "pf_set_protostate(*stp, psrc, TCPS_CLOSING);"
    },
    {
        "line": 197,
        "fullcodeline": "pf_set_protostate(*stp, pdst,"
    },
    {
        "line": 217,
        "fullcodeline": "else if (src->state >= TCPS_CLOSING &&"
    },
    {
        "line": 233,
        "fullcodeline": "SEQ_GEQ(src->seqhi + MAXACKWINDOW, data_end) &&"
    },
    {
        "line": 259,
        "fullcodeline": "if (pf_status.debug >= LOG_NOTICE) {"
    },
    {
        "line": 271,
        "fullcodeline": "if (dst->scrub || src->scrub) {"
    },
    {
        "line": 278,
        "fullcodeline": "if (src->max_win < win)"
    },
    {
        "line": 281,
        "fullcodeline": "if (SEQ_GT(end, src->seqlo))"
    },
    {
        "line": 284,
        "fullcodeline": "if (SEQ_GEQ(ack + (win << sws), dst->seqhi))"
    },
    {
        "line": 291,
        "fullcodeline": "if (th->th_flags & TH_FIN)"
    },
    {
        "line": 294,
        "fullcodeline": "if (th->th_flags & TH_RST)"
    },
    {
        "line": 332,
        "fullcodeline": "REASON_SET(reason, PFRES_BADSTATE);"
    },
    {
        "line": 66,
        "fullcodeline": "if (src->wscale & PF_WSCALE_FLAG) {"
    },
    {
        "line": 199,
        "fullcodeline": "if (src->state == TCPS_ESTABLISHED &&"
    },
    {
        "line": 218,
        "fullcodeline": "dst->state >= TCPS_CLOSING)"
    },
    {
        "line": 219,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_FIN_WAIT;"
    },
    {
        "line": 232,
        "fullcodeline": "src->state >= TCPS_FIN_WAIT_2) &&"
    },
    {
        "line": 260,
        "fullcodeline": "log(LOG_NOTICE, \"pf: loose state match: \");"
    },
    {
        "line": 261,
        "fullcodeline": "pf_print_state(*stp);"
    },
    {
        "line": 262,
        "fullcodeline": "pf_print_flags(th->th_flags);"
    },
    {
        "line": 263,
        "fullcodeline": "addlog(\" seq=%u (%u) ack=%u len=%u ackskew=%d \""
    },
    {
        "line": 279,
        "fullcodeline": "src->max_win = win;"
    },
    {
        "line": 282,
        "fullcodeline": "src->seqlo = end;"
    },
    {
        "line": 285,
        "fullcodeline": "dst->seqhi = ack + MAX((win << sws), 1);"
    },
    {
        "line": 295,
        "fullcodeline": "pf_set_protostate(*stp, PF_PEER_BOTH, TCPS_TIME_WAIT);"
    },
    {
        "line": 299,
        "fullcodeline": "if ((*stp)->dst.state == TCPS_SYN_SENT &&"
    },
    {
        "line": 69,
        "fullcodeline": "sws = src->wscale & PF_WSCALE_MASK;"
    },
    {
        "line": 70,
        "fullcodeline": "win = ((u_int32_t)win + (1 << sws) - 1)"
    },
    {
        "line": 72,
        "fullcodeline": "dws = dst->wscale & PF_WSCALE_MASK;"
    },
    {
        "line": 201,
        "fullcodeline": "pf_src_connlimit(stp)) {"
    },
    {
        "line": 202,
        "fullcodeline": "REASON_SET(reason, PFRES_SRCLIMIT);"
    },
    {
        "line": 205,
        "fullcodeline": "} else if (dst->state == TCPS_CLOSING)"
    },
    {
        "line": 231,
        "fullcodeline": "dst->state >= TCPS_FIN_WAIT_2 ||"
    },
    {
        "line": 267,
        "fullcodeline": "pd->dir == PF_IN ? \"in\" : \"out\","
    },
    {
        "line": 268,
        "fullcodeline": "pd->dir == (*stp)->direction ? \"fwd\" : \"rev\");"
    },
    {
        "line": 272,
        "fullcodeline": "if (pf_normalize_tcp_stateful(pd, reason, *stp, src,"
    },
    {
        "line": 292,
        "fullcodeline": "if (src->state < TCPS_CLOSING)"
    },
    {
        "line": 300,
        "fullcodeline": "(*stp)->src.state == TCPS_SYN_SENT) {"
    },
    {
        "line": 309,
        "fullcodeline": "src->seqlo = 0;"
    },
    {
        "line": 310,
        "fullcodeline": "src->seqhi = 1;"
    },
    {
        "line": 311,
        "fullcodeline": "src->max_win = 1;"
    },
    {
        "line": 75,
        "fullcodeline": "dst->max_win = MIN(TCP_MAXWIN,"
    },
    {
        "line": 79,
        "fullcodeline": "dst->wscale = 0;"
    },
    {
        "line": 200,
        "fullcodeline": "!SLIST_EMPTY(&(*stp)->src_nodes) &&"
    },
    {
        "line": 206,
        "fullcodeline": "pf_set_protostate(*stp, pdst,"
    },
    {
        "line": 220,
        "fullcodeline": "else if (src->state < TCPS_ESTABLISHED ||"
    },
    {
        "line": 293,
        "fullcodeline": "pf_set_protostate(*stp, psrc, TCPS_CLOSING);"
    },
    {
        "line": 302,
        "fullcodeline": "if (!(th->th_flags & TH_RST))"
    },
    {
        "line": 221,
        "fullcodeline": "dst->state < TCPS_ESTABLISHED)"
    },
    {
        "line": 222,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_OPENING;"
    },
    {
        "line": 303,
        "fullcodeline": "pf_send_tcp((*stp)->rule.ptr, pd->af,"
    },
    {
        "line": 312,
        "fullcodeline": "} else if (pf_status.debug >= LOG_NOTICE) {"
    },
    {
        "line": 76,
        "fullcodeline": "(u_int32_t)dst->max_win <<"
    },
    {
        "line": 305,
        "fullcodeline": "th->th_sport, ntohl(th->th_ack), 0,"
    },
    {
        "line": 313,
        "fullcodeline": "log(LOG_NOTICE, \"pf: BAD state: \");"
    },
    {
        "line": 314,
        "fullcodeline": "pf_print_state(*stp);"
    },
    {
        "line": 315,
        "fullcodeline": "pf_print_flags(th->th_flags);"
    },
    {
        "line": 316,
        "fullcodeline": "addlog(\" seq=%u (%u) ack=%u len=%u ackskew=%d \""
    },
    {
        "line": 322,
        "fullcodeline": "addlog(\"pf: State failure on: %c %c %c %c | %c %c\\n\","
    },
    {
        "line": 77,
        "fullcodeline": "(dst->wscale & PF_WSCALE_MASK));"
    },
    {
        "line": 223,
        "fullcodeline": "else if (src->state >= TCPS_CLOSING ||"
    },
    {
        "line": 320,
        "fullcodeline": "pd->dir == PF_IN ? \"in\" : \"out\","
    },
    {
        "line": 321,
        "fullcodeline": "pd->dir == (*stp)->direction ? \"fwd\" : \"rev\");"
    },
    {
        "line": 323,
        "fullcodeline": "SEQ_GEQ(src->seqhi, data_end) ? ' ' : '1',"
    },
    {
        "line": 324,
        "fullcodeline": "SEQ_GEQ(seq, src->seqlo - (dst->max_win << dws)) ?"
    },
    {
        "line": 326,
        "fullcodeline": "(ackskew >= -MAXACKWINDOW) ? ' ' : '3',"
    },
    {
        "line": 327,
        "fullcodeline": "(ackskew <= (MAXACKWINDOW << sws)) ? ' ' : '4',"
    },
    {
        "line": 328,
        "fullcodeline": "SEQ_GEQ(src->seqhi + MAXACKWINDOW, data_end) ?"
    },
    {
        "line": 330,
        "fullcodeline": "SEQ_GEQ(seq, src->seqlo - MAXACKWINDOW) ?' ' :'6');"
    },
    {
        "line": 224,
        "fullcodeline": "dst->state >= TCPS_CLOSING)"
    },
    {
        "line": 225,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_CLOSING;"
    },
    {
        "line": 227,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_ESTABLISHED;"
    }
]