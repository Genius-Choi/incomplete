[
    {
        "line": 3,
        "fullcodeline": "PF_ASSERT_LOCKED();"
    },
    {
        "line": 8,
        "fullcodeline": "st->timeout = PFTM_UNLINKED;"
    },
    {
        "line": 11,
        "fullcodeline": "pf_postprocess_addr(st);"
    },
    {
        "line": 26,
        "fullcodeline": "RBT_REMOVE(pf_state_tree_id, &tree_id, st);"
    },
    {
        "line": 34,
        "fullcodeline": "pf_src_tree_remove_state(st);"
    },
    {
        "line": 35,
        "fullcodeline": "pf_detach_state(st);"
    },
    {
        "line": 5,
        "fullcodeline": "if (st->timeout == PFTM_UNLINKED)"
    },
    {
        "line": 13,
        "fullcodeline": "if (st->src.state == PF_TCPS_PROXY_DST) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (st->key[PF_SK_STACK]->proto == IPPROTO_TCP)"
    },
    {
        "line": 14,
        "fullcodeline": "pf_send_tcp(st->rule.ptr, st->key[PF_SK_WIRE]->af,"
    },
    {
        "line": 24,
        "fullcodeline": "pf_set_protostate(st, PF_PEER_BOTH, TCPS_CLOSED);"
    },
    {
        "line": 19,
        "fullcodeline": "st->src.seqhi, st->src.seqlo + 1,"
    },
    {
        "line": 20,
        "fullcodeline": "TH_RST|TH_ACK, 0, 0, 0, 1, st->tag,"
    }
]