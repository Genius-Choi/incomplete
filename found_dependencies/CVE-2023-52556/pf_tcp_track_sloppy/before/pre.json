[
    {
        "line": 4,
        "fullcodeline": "struct tcphdr\t\t*th = &pd->hdr.tcp;"
    },
    {
        "line": 8,
        "fullcodeline": "if (pd->dir == (*stp)->direction) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (th->th_flags & TH_SYN)"
    },
    {
        "line": 23,
        "fullcodeline": "if (th->th_flags & TH_FIN)"
    },
    {
        "line": 26,
        "fullcodeline": "if (th->th_flags & TH_ACK) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (th->th_flags & TH_RST)"
    },
    {
        "line": 9,
        "fullcodeline": "src = &(*stp)->src;"
    },
    {
        "line": 10,
        "fullcodeline": "dst = &(*stp)->dst;"
    },
    {
        "line": 11,
        "fullcodeline": "psrc = PF_PEER_SRC;"
    },
    {
        "line": 12,
        "fullcodeline": "pdst = PF_PEER_DST;"
    },
    {
        "line": 64,
        "fullcodeline": "pf_set_protostate(*stp, PF_PEER_BOTH, TCPS_TIME_WAIT);"
    },
    {
        "line": 68,
        "fullcodeline": "if (src->state >= TCPS_FIN_WAIT_2 &&"
    },
    {
        "line": 69,
        "fullcodeline": "dst->state >= TCPS_FIN_WAIT_2)"
    },
    {
        "line": 70,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_CLOSED;"
    },
    {
        "line": 14,
        "fullcodeline": "src = &(*stp)->dst;"
    },
    {
        "line": 15,
        "fullcodeline": "dst = &(*stp)->src;"
    },
    {
        "line": 16,
        "fullcodeline": "psrc = PF_PEER_DST;"
    },
    {
        "line": 17,
        "fullcodeline": "pdst = PF_PEER_SRC;"
    },
    {
        "line": 21,
        "fullcodeline": "if (src->state < TCPS_SYN_SENT)"
    },
    {
        "line": 24,
        "fullcodeline": "if (src->state < TCPS_CLOSING)"
    },
    {
        "line": 27,
        "fullcodeline": "if (dst->state == TCPS_SYN_SENT) {"
    },
    {
        "line": 22,
        "fullcodeline": "pf_set_protostate(*stp, psrc, TCPS_SYN_SENT);"
    },
    {
        "line": 25,
        "fullcodeline": "pf_set_protostate(*stp, psrc, TCPS_CLOSING);"
    },
    {
        "line": 28,
        "fullcodeline": "pf_set_protostate(*stp, pdst, TCPS_ESTABLISHED);"
    },
    {
        "line": 71,
        "fullcodeline": "else if (src->state >= TCPS_CLOSING &&"
    },
    {
        "line": 29,
        "fullcodeline": "if (src->state == TCPS_ESTABLISHED &&"
    },
    {
        "line": 72,
        "fullcodeline": "dst->state >= TCPS_CLOSING)"
    },
    {
        "line": 73,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_FIN_WAIT;"
    },
    {
        "line": 31,
        "fullcodeline": "pf_src_connlimit(stp)) {"
    },
    {
        "line": 32,
        "fullcodeline": "REASON_SET(reason, PFRES_SRCLIMIT);"
    },
    {
        "line": 35,
        "fullcodeline": "} else if (dst->state == TCPS_CLOSING) {"
    },
    {
        "line": 30,
        "fullcodeline": "!SLIST_EMPTY(&(*stp)->src_nodes) &&"
    },
    {
        "line": 36,
        "fullcodeline": "pf_set_protostate(*stp, pdst, TCPS_FIN_WAIT_2);"
    },
    {
        "line": 74,
        "fullcodeline": "else if (src->state < TCPS_ESTABLISHED ||"
    },
    {
        "line": 75,
        "fullcodeline": "dst->state < TCPS_ESTABLISHED)"
    },
    {
        "line": 76,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_OPENING;"
    },
    {
        "line": 37,
        "fullcodeline": "} else if (src->state == TCPS_SYN_SENT &&"
    },
    {
        "line": 38,
        "fullcodeline": "dst->state < TCPS_SYN_SENT) {"
    },
    {
        "line": 45,
        "fullcodeline": "pf_set_protostate(*stp, PF_PEER_BOTH,"
    },
    {
        "line": 77,
        "fullcodeline": "else if (src->state >= TCPS_CLOSING ||"
    },
    {
        "line": 78,
        "fullcodeline": "dst->state >= TCPS_CLOSING)"
    },
    {
        "line": 79,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_CLOSING;"
    },
    {
        "line": 47,
        "fullcodeline": "if (!SLIST_EMPTY(&(*stp)->src_nodes) &&"
    },
    {
        "line": 48,
        "fullcodeline": "pf_src_connlimit(stp)) {"
    },
    {
        "line": 81,
        "fullcodeline": "(*stp)->timeout = PFTM_TCP_ESTABLISHED;"
    },
    {
        "line": 52,
        "fullcodeline": "} else if (src->state == TCPS_CLOSING &&"
    },
    {
        "line": 54,
        "fullcodeline": "dst->seqlo == 0) {"
    },
    {
        "line": 60,
        "fullcodeline": "pf_set_protostate(*stp, pdst, TCPS_CLOSING);"
    },
    {
        "line": 53,
        "fullcodeline": "dst->state == TCPS_ESTABLISHED &&"
    }
]