[
    {
        "line": 7,
        "fullcodeline": "pgfrom = pages + (pgbase >> PAGE_CACHE_SHIFT);"
    },
    {
        "line": 8,
        "fullcodeline": "pgbase &= ~PAGE_CACHE_MASK;"
    },
    {
        "line": 26,
        "fullcodeline": "} while ((len -= copy) != 0);"
    },
    {
        "line": 11,
        "fullcodeline": "copy = PAGE_CACHE_SIZE - pgbase;"
    },
    {
        "line": 15,
        "fullcodeline": "vfrom = kmap_atomic(*pgfrom, KM_USER0);"
    },
    {
        "line": 16,
        "fullcodeline": "memcpy(p, vfrom + pgbase, copy);"
    },
    {
        "line": 17,
        "fullcodeline": "kunmap_atomic(vfrom, KM_USER0);"
    },
    {
        "line": 19,
        "fullcodeline": "pgbase += copy;"
    },
    {
        "line": 24,
        "fullcodeline": "p += copy;"
    },
    {
        "line": 12,
        "fullcodeline": "if (copy > len)"
    },
    {
        "line": 20,
        "fullcodeline": "if (pgbase == PAGE_CACHE_SIZE) {"
    },
    {
        "line": 13,
        "fullcodeline": "copy = len;"
    },
    {
        "line": 21,
        "fullcodeline": "pgbase = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "pgfrom++;"
    }
]