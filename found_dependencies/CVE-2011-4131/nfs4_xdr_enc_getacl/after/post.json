[
    {
        "line": 4,
        "fullcodeline": "struct compound_hdr hdr = {"
    },
    {
        "line": 9,
        "fullcodeline": "encode_compound_hdr(xdr, req, &hdr);"
    },
    {
        "line": 10,
        "fullcodeline": "encode_sequence(xdr, &args->seq_args, &hdr);"
    },
    {
        "line": 11,
        "fullcodeline": "encode_putfh(xdr, args->fh, &hdr);"
    },
    {
        "line": 12,
        "fullcodeline": "replen = hdr.replen + op_decode_hdr_maxsz + 1;"
    },
    {
        "line": 13,
        "fullcodeline": "encode_getattr_two(xdr, FATTR4_WORD0_ACL, 0, &hdr);"
    },
    {
        "line": 15,
        "fullcodeline": "xdr_inline_pages(&req->rq_rcv_buf, replen << 2,"
    },
    {
        "line": 17,
        "fullcodeline": "xdr_set_scratch_buffer(xdr, page_address(args->acl_scratch), PAGE_SIZE);"
    },
    {
        "line": 19,
        "fullcodeline": "encode_nops(&hdr);"
    },
    {
        "line": 5,
        "fullcodeline": ".minorversion = nfs4_xdr_minorversion(&args->seq_args),"
    }
]