[
    {
        "line": 12,
        "fullcodeline": "assert envelope.tag == '{%s}Envelope' % soapenv.NAMESPACE"
    },
    {
        "line": 13,
        "fullcodeline": "assert len(envelope) >= 1"
    },
    {
        "line": 14,
        "fullcodeline": "content = {\"header\": [], \"body\": None}"
    },
    {
        "line": 16,
        "fullcodeline": "for part in envelope:"
    },
    {
        "line": 8,
        "fullcodeline": "envelope = ElementTree.fromstring(text)"
    },
    {
        "line": 10,
        "fullcodeline": "raise XmlParseError(\"%s\" % exc)"
    },
    {
        "line": 17,
        "fullcodeline": "if part.tag == '{%s}Body' % soapenv.NAMESPACE:"
    },
    {
        "line": 18,
        "fullcodeline": "assert len(part) == 1"
    },
    {
        "line": 19,
        "fullcodeline": "content[\"body\"] = ElementTree.tostring(part[0], encoding=\"UTF-8\")"
    },
    {
        "line": 20,
        "fullcodeline": "elif part.tag == \"{%s}Header\" % soapenv.NAMESPACE:"
    },
    {
        "line": 21,
        "fullcodeline": "for item in part:"
    },
    {
        "line": 22,
        "fullcodeline": "_str = ElementTree.tostring(item, encoding=\"UTF-8\")"
    },
    {
        "line": 23,
        "fullcodeline": "content[\"header\"].append(_str)"
    }
]