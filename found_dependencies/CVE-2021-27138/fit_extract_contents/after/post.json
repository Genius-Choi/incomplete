[
    {
        "line": 6,
        "fullcodeline": "const void *fit = ptr;"
    },
    {
        "line": 7,
        "fullcodeline": "int count = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "p = IMAGE_INDENT_STRING;"
    },
    {
        "line": 19,
        "fullcodeline": "images_noffset = fdt_path_offset(fit, FIT_IMAGES_PATH);"
    },
    {
        "line": 27,
        "fullcodeline": "count = fit_get_subimage_count(fit, images_noffset);"
    },
    {
        "line": 13,
        "fullcodeline": "if (fit_check_format(fit, IMAGE_SIZE_INVAL)) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (images_noffset < 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "if ((params->pflag < 0) || (count <= params->pflag)) {"
    },
    {
        "line": 36,
        "fullcodeline": "(noffset >= 0) && (ndepth > 0);"
    },
    {
        "line": 37,
        "fullcodeline": "noffset = fdt_next_node(fit, noffset, &ndepth)) {"
    },
    {
        "line": 14,
        "fullcodeline": "printf(\"Bad FIT image format\\n\");"
    },
    {
        "line": 21,
        "fullcodeline": "printf(\"Can't find images parent node '%s' (%s)\\n\","
    },
    {
        "line": 29,
        "fullcodeline": "printf(\"No such component at '%d'\\n\", params->pflag);"
    },
    {
        "line": 34,
        "fullcodeline": "for (ndepth = 0, count = 0,"
    },
    {
        "line": 15,
        "fullcodeline": "return -1;"
    },
    {
        "line": 22,
        "fullcodeline": "FIT_IMAGES_PATH, fdt_strerror(images_noffset));"
    },
    {
        "line": 23,
        "fullcodeline": "return -1;"
    },
    {
        "line": 30,
        "fullcodeline": "return -1;"
    },
    {
        "line": 35,
        "fullcodeline": "noffset = fdt_next_node(fit, images_noffset, &ndepth);"
    },
    {
        "line": 38,
        "fullcodeline": "if (ndepth == 1) {"
    },
    {
        "line": 53,
        "fullcodeline": "count++;"
    },
    {
        "line": 43,
        "fullcodeline": "if (params->pflag == count) {"
    },
    {
        "line": 44,
        "fullcodeline": "printf(\"Extracted:\\n%s Image %u (%s)\\n\", p,"
    },
    {
        "line": 47,
        "fullcodeline": "fit_image_print(fit, noffset, p);"
    },
    {
        "line": 45,
        "fullcodeline": "count, fit_get_name(fit, noffset, NULL));"
    },
    {
        "line": 49,
        "fullcodeline": "return fit_image_extract(fit, noffset,"
    }
]