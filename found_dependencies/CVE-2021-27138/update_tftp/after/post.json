[
    {
        "line": 7,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "printf(\"Auto-update from TFTP: \");"
    },
    {
        "line": 27,
        "fullcodeline": "filename = env_get(UPDATE_FILE_ENV);"
    },
    {
        "line": 34,
        "fullcodeline": "printf(\"trying update file '%s'\\n\", filename);"
    },
    {
        "line": 37,
        "fullcodeline": "env_addr = env_get(\"loadaddr\");"
    },
    {
        "line": 51,
        "fullcodeline": "fit = map_sysmem(addr, 0);"
    },
    {
        "line": 60,
        "fullcodeline": "images_noffset = fdt_path_offset(fit, FIT_IMAGES_PATH);"
    },
    {
        "line": 62,
        "fullcodeline": "ndepth = 0;"
    },
    {
        "line": 63,
        "fullcodeline": "noffset = fdt_next_node(fit, images_noffset, &ndepth);"
    },
    {
        "line": 10,
        "fullcodeline": "if (interface == NULL && devstring == NULL) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (filename == NULL) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (update_load(filename, CONFIG_UPDATE_TFTP_MSEC_MAX,"
    },
    {
        "line": 53,
        "fullcodeline": "if (fit_check_format((void *)fit, IMAGE_SIZE_INVAL)) {"
    },
    {
        "line": 64,
        "fullcodeline": "while (noffset >= 0 && ndepth > 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "update_tftp_dfu = false;"
    },
    {
        "line": 29,
        "fullcodeline": "printf(\"failed, env. variable '%s' not found\\n\","
    },
    {
        "line": 39,
        "fullcodeline": "addr = simple_strtoul(env_addr, NULL, 16);"
    },
    {
        "line": 46,
        "fullcodeline": "printf(\"Can't load update file, aborting auto-update\\n\");"
    },
    {
        "line": 54,
        "fullcodeline": "printf(\"Bad FIT format of the update file, aborting \""
    },
    {
        "line": 68,
        "fullcodeline": "fit_image_name = (char *)fit_get_name(fit, noffset, NULL);"
    },
    {
        "line": 69,
        "fullcodeline": "printf(\"Processing update '%s' :\", fit_image_name);"
    },
    {
        "line": 77,
        "fullcodeline": "printf(\"\\n\");"
    },
    {
        "line": 102,
        "fullcodeline": "noffset = fdt_next_node(fit, noffset, &ndepth);"
    },
    {
        "line": 41,
        "fullcodeline": "addr = CONFIG_UPDATE_LOAD_ADDR;"
    },
    {
        "line": 65,
        "fullcodeline": "if (ndepth != 1)"
    },
    {
        "line": 71,
        "fullcodeline": "if (!fit_image_verify(fit, noffset)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (update_fit_getparams(fit, noffset, &update_addr,"
    },
    {
        "line": 85,
        "fullcodeline": "if (!update_tftp_dfu) {"
    },
    {
        "line": 12,
        "fullcodeline": "} else if (interface && devstring) {"
    },
    {
        "line": 72,
        "fullcodeline": "printf(\"Error: invalid update hash, aborting\\n\");"
    },
    {
        "line": 73,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 80,
        "fullcodeline": "printf(\"Error: can't get update parameters, aborting\\n\");"
    },
    {
        "line": 81,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 13,
        "fullcodeline": "update_tftp_dfu = true;"
    },
    {
        "line": 86,
        "fullcodeline": "if (update_flash(update_addr, update_fladdr,"
    },
    {
        "line": 15,
        "fullcodeline": "pr_err(\"Interface: %s and devstring: %s not supported!\\n\","
    },
    {
        "line": 88,
        "fullcodeline": "printf(\"Error: can't flash update, aborting\\n\");"
    },
    {
        "line": 89,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 92,
        "fullcodeline": "} else if (fit_image_check_type(fit, noffset,"
    },
    {
        "line": 17,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 94,
        "fullcodeline": "ret = dfu_write_by_name(fit_image_name,"
    },
    {
        "line": 95,
        "fullcodeline": "(void *)update_addr,"
    }
]