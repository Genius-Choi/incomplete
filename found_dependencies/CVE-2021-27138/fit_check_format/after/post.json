[
    {
        "line": 6,
        "fullcodeline": "ret = fdt_check_header(fit);"
    },
    {
        "line": 13,
        "fullcodeline": "if (CONFIG_IS_ENABLED(FIT_FULL_CHECK)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (!fdt_getprop(fit, 0, FIT_DESC_PROP, NULL)) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (fdt_path_offset(fit, FIT_IMAGES_PATH) < 0) {"
    },
    {
        "line": 8,
        "fullcodeline": "log_debug(\"Wrong FIT format: not a flattened device tree (err=%d)\\n\","
    },
    {
        "line": 21,
        "fullcodeline": "ret = fdt_check_full(fit, size);"
    },
    {
        "line": 48,
        "fullcodeline": "log_debug(\"Wrong FIT format: no description\\n\");"
    },
    {
        "line": 62,
        "fullcodeline": "log_debug(\"Wrong FIT format: no images parent node\\n\");"
    },
    {
        "line": 10,
        "fullcodeline": "return -ENOEXEC;"
    },
    {
        "line": 19,
        "fullcodeline": "if (size == IMAGE_SIZE_INVAL)"
    },
    {
        "line": 32,
        "fullcodeline": "if (!ret && CONFIG_IS_ENABLED(FIT_SIGNATURE)) {"
    },
    {
        "line": 49,
        "fullcodeline": "return -ENOMSG;"
    },
    {
        "line": 54,
        "fullcodeline": "if (!fdt_getprop(fit, 0, FIT_TIMESTAMP_PROP, NULL)) {"
    },
    {
        "line": 63,
        "fullcodeline": "return -ENOENT;"
    },
    {
        "line": 20,
        "fullcodeline": "size = fdt_totalsize(fit);"
    },
    {
        "line": 23,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 33,
        "fullcodeline": "ret = fdt_check_no_at(fit, 0);"
    },
    {
        "line": 41,
        "fullcodeline": "log_debug(\"FIT check error %d\\n\", ret);"
    },
    {
        "line": 55,
        "fullcodeline": "log_debug(\"Wrong FIT format: no timestamp\\n\");"
    },
    {
        "line": 56,
        "fullcodeline": "return -ENODATA;"
    },
    {
        "line": 36,
        "fullcodeline": "log_debug(\"FIT check error %d\\n\", ret);"
    }
]