[
    {
        "line": 10,
        "fullcodeline": "bool is_splash_external = false;"
    },
    {
        "line": 17,
        "fullcodeline": "res = splash_storage_read_raw(location, bmp_load_addr, header_size);"
    },
    {
        "line": 21,
        "fullcodeline": "img_header = (struct image_header *)bmp_load_addr;"
    },
    {
        "line": 27,
        "fullcodeline": "fit_size = fdt_totalsize(img_header);"
    },
    {
        "line": 30,
        "fullcodeline": "fit_header = (const u32 *)(bmp_load_addr + header_size);"
    },
    {
        "line": 31,
        "fullcodeline": "res = splash_storage_read_raw(location, (u32)fit_header, fit_size);"
    },
    {
        "line": 35,
        "fullcodeline": "res = fit_check_format(fit_header);"
    },
    {
        "line": 42,
        "fullcodeline": "splash_file = env_get(\"splashfile\");"
    },
    {
        "line": 46,
        "fullcodeline": "node_offset = fit_image_get_node(fit_header, splash_file);"
    },
    {
        "line": 18,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 22,
        "fullcodeline": "if (image_get_magic(img_header) != FDT_MAGIC) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 36,
        "fullcodeline": "if (!res) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (!splash_file)"
    },
    {
        "line": 47,
        "fullcodeline": "if (node_offset < 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (!fit_image_get_data(fit_header, node_offset, &internal_splash_data, &internal_splash_size))"
    },
    {
        "line": 23,
        "fullcodeline": "printf(\"Could not find FDT magic\\n\");"
    },
    {
        "line": 37,
        "fullcodeline": "debug(\"Could not find valid FIT image\\n\");"
    },
    {
        "line": 44,
        "fullcodeline": "splash_file = SPLASH_SOURCE_DEFAULT_FILE_NAME;"
    },
    {
        "line": 48,
        "fullcodeline": "debug(\"Could not find splash image '%s' in FIT\\n\","
    },
    {
        "line": 56,
        "fullcodeline": "memmove((void *)bmp_load_addr, internal_splash_data, internal_splash_size);"
    },
    {
        "line": 73,
        "fullcodeline": "res = fit_image_get_data_size(fit_header, node_offset, &external_splash_size);"
    },
    {
        "line": 80,
        "fullcodeline": "location->offset = external_splash_addr;"
    },
    {
        "line": 81,
        "fullcodeline": "res = splash_storage_read_raw(location, bmp_load_addr, external_splash_size);"
    },
    {
        "line": 24,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 38,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 50,
        "fullcodeline": "return -ENOENT;"
    },
    {
        "line": 74,
        "fullcodeline": "if (res < 0) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 58,
        "fullcodeline": "else if (!fit_image_get_data_position(fit_header, node_offset, &external_splash_addr))"
    },
    {
        "line": 75,
        "fullcodeline": "printf(\"Failed to get size of splash image (err=%d)\\n\", res);"
    },
    {
        "line": 59,
        "fullcodeline": "is_splash_external = true;"
    },
    {
        "line": 61,
        "fullcodeline": "else if (!fit_image_get_data_offset(fit_header, node_offset, &external_splash_addr)) {"
    },
    {
        "line": 63,
        "fullcodeline": "fit_size = ALIGN(fdt_totalsize(fit_header), 4);"
    },
    {
        "line": 65,
        "fullcodeline": "external_splash_addr += location->offset + fit_size;"
    },
    {
        "line": 66,
        "fullcodeline": "is_splash_external = true;"
    },
    {
        "line": 68,
        "fullcodeline": "printf(\"Failed to get splash image from FIT\\n\");"
    },
    {
        "line": 69,
        "fullcodeline": "return -ENODATA;"
    }
]