[
    {
        "line": 7,
        "fullcodeline": "imgdata = malloc(len);"
    },
    {
        "line": 15,
        "fullcodeline": "ret = nand_read_skip_bad(mtd, off, &len, NULL, mtd->size, imgdata);"
    },
    {
        "line": 26,
        "fullcodeline": "printf(\"FIT Image at NAND device %d offset %08llX:\\n\", nand_dev, off);"
    },
    {
        "line": 28,
        "fullcodeline": "fit_print_contents(imgdata);"
    },
    {
        "line": 29,
        "fullcodeline": "free(imgdata);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!imgdata) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (ret < 0 && ret != -EUCLEAN) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (fit_check_format(imgdata, IMAGE_SIZE_INVAL)) {"
    },
    {
        "line": 9,
        "fullcodeline": "printf(\"May be a FIT Image at NAND device %d offset %08llX:\\n\","
    },
    {
        "line": 11,
        "fullcodeline": "printf(\"   Low memory(cannot allocate memory for image)\\n\");"
    },
    {
        "line": 17,
        "fullcodeline": "free(imgdata);"
    },
    {
        "line": 22,
        "fullcodeline": "free(imgdata);"
    },
    {
        "line": 12,
        "fullcodeline": "return -ENOMEM;"
    }
]