[
    {
        "line": 28,
        "fullcodeline": "packets=(ssize_t) number_compact_pixels;"
    },
    {
        "line": 29,
        "fullcodeline": "for (i=0; (packets > 1) && (i < (ssize_t) number_pixels); )"
    },
    {
        "line": 31,
        "fullcodeline": "packets--;"
    },
    {
        "line": 32,
        "fullcodeline": "length=(size_t) (*compact_pixels++);"
    },
    {
        "line": 83,
        "fullcodeline": "length++;"
    },
    {
        "line": 33,
        "fullcodeline": "if (length == 128)"
    },
    {
        "line": 35,
        "fullcodeline": "if (length > 128)"
    },
    {
        "line": 84,
        "fullcodeline": "for (j=0; j < (ssize_t) length; j++)"
    },
    {
        "line": 37,
        "fullcodeline": "length=256-length+1;"
    },
    {
        "line": 38,
        "fullcodeline": "CheckNumberCompactPixels;"
    },
    {
        "line": 39,
        "fullcodeline": "pixel=(*compact_pixels++);"
    },
    {
        "line": 124,
        "fullcodeline": "CheckNumberCompactPixels;"
    },
    {
        "line": 125,
        "fullcodeline": "compact_pixels++;"
    },
    {
        "line": 40,
        "fullcodeline": "for (j=0; j < (ssize_t) length; j++)"
    },
    {
        "line": 90,
        "fullcodeline": "CheckNumberPixels(8);"
    },
    {
        "line": 91,
        "fullcodeline": "*pixels++=(*compact_pixels >> 7) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 92,
        "fullcodeline": "*pixels++=(*compact_pixels >> 6) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 93,
        "fullcodeline": "*pixels++=(*compact_pixels >> 5) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 94,
        "fullcodeline": "*pixels++=(*compact_pixels >> 4) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 95,
        "fullcodeline": "*pixels++=(*compact_pixels >> 3) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 96,
        "fullcodeline": "*pixels++=(*compact_pixels >> 2) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 97,
        "fullcodeline": "*pixels++=(*compact_pixels >> 1) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 98,
        "fullcodeline": "*pixels++=(*compact_pixels >> 0) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 103,
        "fullcodeline": "CheckNumberPixels(4);"
    },
    {
        "line": 104,
        "fullcodeline": "*pixels++=(*compact_pixels >> 6) & 0x03;"
    },
    {
        "line": 105,
        "fullcodeline": "*pixels++=(*compact_pixels >> 4) & 0x03;"
    },
    {
        "line": 106,
        "fullcodeline": "*pixels++=(*compact_pixels >> 2) & 0x03;"
    },
    {
        "line": 107,
        "fullcodeline": "*pixels++=(*compact_pixels & 0x03) & 0x03;"
    },
    {
        "line": 112,
        "fullcodeline": "CheckNumberPixels(2);"
    },
    {
        "line": 113,
        "fullcodeline": "*pixels++=(*compact_pixels >> 4) & 0xff;"
    },
    {
        "line": 114,
        "fullcodeline": "*pixels++=(*compact_pixels & 0x0f) & 0xff;"
    },
    {
        "line": 119,
        "fullcodeline": "CheckNumberPixels(1);"
    },
    {
        "line": 120,
        "fullcodeline": "*pixels++=(*compact_pixels);"
    },
    {
        "line": 46,
        "fullcodeline": "CheckNumberPixels(8);"
    },
    {
        "line": 47,
        "fullcodeline": "*pixels++=(pixel >> 7) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 48,
        "fullcodeline": "*pixels++=(pixel >> 6) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 49,
        "fullcodeline": "*pixels++=(pixel >> 5) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 50,
        "fullcodeline": "*pixels++=(pixel >> 4) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 51,
        "fullcodeline": "*pixels++=(pixel >> 3) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 52,
        "fullcodeline": "*pixels++=(pixel >> 2) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 53,
        "fullcodeline": "*pixels++=(pixel >> 1) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 54,
        "fullcodeline": "*pixels++=(pixel >> 0) & 0x01 ? 0U : 255U;"
    },
    {
        "line": 59,
        "fullcodeline": "CheckNumberPixels(4);"
    },
    {
        "line": 60,
        "fullcodeline": "*pixels++=(unsigned char) ((pixel >> 6) & 0x03);"
    },
    {
        "line": 61,
        "fullcodeline": "*pixels++=(unsigned char) ((pixel >> 4) & 0x03);"
    },
    {
        "line": 62,
        "fullcodeline": "*pixels++=(unsigned char) ((pixel >> 2) & 0x03);"
    },
    {
        "line": 63,
        "fullcodeline": "*pixels++=(unsigned char) ((pixel & 0x03) & 0x03);"
    },
    {
        "line": 68,
        "fullcodeline": "CheckNumberPixels(2);"
    },
    {
        "line": 69,
        "fullcodeline": "*pixels++=(unsigned char) ((pixel >> 4) & 0xff);"
    },
    {
        "line": 70,
        "fullcodeline": "*pixels++=(unsigned char) ((pixel & 0x0f) & 0xff);"
    },
    {
        "line": 75,
        "fullcodeline": "CheckNumberPixels(1);"
    },
    {
        "line": 76,
        "fullcodeline": "*pixels++=(unsigned char) pixel;"
    }
]