[
    {
        "line": 2,
        "fullcodeline": "config_disabled = ("
    },
    {
        "line": 3,
        "fullcodeline": "app.config['CONFIG_DISABLE'] or"
    },
    {
        "line": 5,
        "fullcodeline": "if request.method == 'GET':"
    },
    {
        "line": 4,
        "fullcodeline": "not valid_user_session(session))"
    },
    {
        "line": 6,
        "fullcodeline": "return json.dumps(g.user_config.__dict__)"
    },
    {
        "line": 7,
        "fullcodeline": "elif request.method == 'PUT' and not config_disabled:"
    },
    {
        "line": 8,
        "fullcodeline": "if 'name' in request.args:"
    },
    {
        "line": 9,
        "fullcodeline": "config_pkl = os.path.join("
    },
    {
        "line": 12,
        "fullcodeline": "session['config'] = (pickle.load(open(config_pkl, 'rb'))"
    },
    {
        "line": 19,
        "fullcodeline": "config_data = request.form.to_dict()"
    },
    {
        "line": 15,
        "fullcodeline": "return json.dumps(session['config'])"
    },
    {
        "line": 17,
        "fullcodeline": "return json.dumps({})"
    },
    {
        "line": 24,
        "fullcodeline": "if 'name' in request.args:"
    },
    {
        "line": 32,
        "fullcodeline": "return redirect(config_data['url'])"
    },
    {
        "line": 34,
        "fullcodeline": "return redirect(url_for('.index'), code=403)"
    },
    {
        "line": 20,
        "fullcodeline": "if 'url' not in config_data or not config_data['url']:"
    },
    {
        "line": 21,
        "fullcodeline": "config_data['url'] = g.user_config.url"
    },
    {
        "line": 25,
        "fullcodeline": "pickle.dump("
    },
    {
        "line": 13,
        "fullcodeline": "if os.path.exists(config_pkl)"
    },
    {
        "line": 27,
        "fullcodeline": "open(os.path.join("
    },
    {
        "line": 11,
        "fullcodeline": "request.args.get('name'))"
    },
    {
        "line": 29,
        "fullcodeline": "request.args.get('name')), 'wb'))"
    }
]