[
    {
        "line": 5,
        "fullcodeline": "int resp_buftype, rc = -EACCES;"
    },
    {
        "line": 6,
        "fullcodeline": "struct smb2_read_plain_req *req = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "struct smb2_read_rsp *rsp = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "struct kvec iov[1];"
    },
    {
        "line": 11,
        "fullcodeline": "int flags = CIFS_LOG_ERROR;"
    },
    {
        "line": 14,
        "fullcodeline": "*nbytes = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "rc = smb2_new_read_req((void **)&req, &total_len, io_parms, NULL, 0, 0);"
    },
    {
        "line": 22,
        "fullcodeline": "iov[0].iov_base = (char *)req;"
    },
    {
        "line": 23,
        "fullcodeline": "iov[0].iov_len = total_len;"
    },
    {
        "line": 25,
        "fullcodeline": "memset(&rqst, 0, sizeof(struct smb_rqst));"
    },
    {
        "line": 26,
        "fullcodeline": "rqst.rq_iov = iov;"
    },
    {
        "line": 27,
        "fullcodeline": "rqst.rq_nvec = 1;"
    },
    {
        "line": 29,
        "fullcodeline": "rc = cifs_send_recv(xid, ses, &rqst, &resp_buftype, flags, &rsp_iov);"
    },
    {
        "line": 30,
        "fullcodeline": "rsp = (struct smb2_read_rsp *)rsp_iov.iov_base;"
    },
    {
        "line": 51,
        "fullcodeline": "cifs_small_buf_release(req);"
    },
    {
        "line": 53,
        "fullcodeline": "*nbytes = le32_to_cpu(rsp->DataLength);"
    },
    {
        "line": 19,
        "fullcodeline": "if (smb3_encryption_required(io_parms->tcon))"
    },
    {
        "line": 54,
        "fullcodeline": "if ((*nbytes > CIFS_MAX_MSGSIZE) ||"
    },
    {
        "line": 20,
        "fullcodeline": "flags |= CIFS_TRANSFORM_REQ;"
    },
    {
        "line": 44,
        "fullcodeline": "free_rsp_buf(resp_buftype, rsp_iov.iov_base);"
    },
    {
        "line": 55,
        "fullcodeline": "(*nbytes > io_parms->length)) {"
    },
    {
        "line": 56,
        "fullcodeline": "cifs_dbg(FYI, \"bad length %d for count %d\\n\","
    },
    {
        "line": 58,
        "fullcodeline": "rc = -EIO;"
    },
    {
        "line": 59,
        "fullcodeline": "*nbytes = 0;"
    },
    {
        "line": 63,
        "fullcodeline": "memcpy(*buf, (char *)rsp + rsp->DataOffset, *nbytes);"
    },
    {
        "line": 64,
        "fullcodeline": "free_rsp_buf(resp_buftype, rsp_iov.iov_base);"
    },
    {
        "line": 33,
        "fullcodeline": "if (rc != -ENODATA) {"
    },
    {
        "line": 45,
        "fullcodeline": "return rc == -ENODATA ? 0 : rc;"
    },
    {
        "line": 47,
        "fullcodeline": "trace_smb3_read_done(xid, req->PersistentFileId,"
    },
    {
        "line": 34,
        "fullcodeline": "cifs_stats_fail_inc(io_parms->tcon, SMB2_READ_HE);"
    },
    {
        "line": 35,
        "fullcodeline": "cifs_dbg(VFS, \"Send error in read = %d\\n\", rc);"
    },
    {
        "line": 36,
        "fullcodeline": "trace_smb3_read_err(xid, req->PersistentFileId,"
    },
    {
        "line": 65,
        "fullcodeline": "} else if (resp_buftype != CIFS_NO_BUFFER) {"
    },
    {
        "line": 41,
        "fullcodeline": "trace_smb3_read_done(xid, req->PersistentFileId,"
    },
    {
        "line": 66,
        "fullcodeline": "*buf = rsp_iov.iov_base;"
    },
    {
        "line": 67,
        "fullcodeline": "if (resp_buftype == CIFS_SMALL_BUFFER)"
    },
    {
        "line": 68,
        "fullcodeline": "*buf_type = CIFS_SMALL_BUFFER;"
    },
    {
        "line": 69,
        "fullcodeline": "else if (resp_buftype == CIFS_LARGE_BUFFER)"
    },
    {
        "line": 70,
        "fullcodeline": "*buf_type = CIFS_LARGE_BUFFER;"
    }
]