[
    {
        "line": 6,
        "fullcodeline": "gc_init (&gc);"
    },
    {
        "line": 127,
        "fullcodeline": "gc_free (&gc);"
    },
    {
        "line": 131,
        "fullcodeline": "crypto_clear_error();"
    },
    {
        "line": 132,
        "fullcodeline": "buf->len = 0;"
    },
    {
        "line": 133,
        "fullcodeline": "gc_free (&gc);"
    },
    {
        "line": 8,
        "fullcodeline": "if (buf->len > 0 && opt->key_ctx_bi)"
    },
    {
        "line": 124,
        "fullcodeline": "*buf = work;"
    },
    {
        "line": 15,
        "fullcodeline": "uint8_t iv_buf[OPENVPN_MAX_IV_LENGTH];"
    },
    {
        "line": 16,
        "fullcodeline": "const int iv_size = cipher_ctx_iv_length (ctx->cipher);"
    },
    {
        "line": 17,
        "fullcodeline": "const unsigned int mode = cipher_ctx_mode (ctx->cipher);"
    },
    {
        "line": 55,
        "fullcodeline": "ASSERT (buf_init (&work, FRAME_HEADROOM (frame)));"
    },
    {
        "line": 61,
        "fullcodeline": "dmsg (D_PACKET_CONTENT, \"ENCRYPT FROM: %s\","
    },
    {
        "line": 65,
        "fullcodeline": "ASSERT (cipher_ctx_reset(ctx->cipher, iv_buf));"
    },
    {
        "line": 82,
        "fullcodeline": "ASSERT (cipher_ctx_update (ctx->cipher, BPTR (&work), &outlen, BPTR (buf), BLEN (buf)));"
    },
    {
        "line": 83,
        "fullcodeline": "work.len += outlen;"
    },
    {
        "line": 86,
        "fullcodeline": "ASSERT(cipher_ctx_final(ctx->cipher, BPTR (&work) + outlen, &outlen));"
    },
    {
        "line": 87,
        "fullcodeline": "work.len += outlen;"
    },
    {
        "line": 88,
        "fullcodeline": "ASSERT (outlen == iv_size);"
    },
    {
        "line": 98,
        "fullcodeline": "dmsg (D_PACKET_CONTENT, \"ENCRYPT TO: %s\","
    },
    {
        "line": 115,
        "fullcodeline": "uint8_t *output = NULL;"
    },
    {
        "line": 117,
        "fullcodeline": "hmac_ctx_reset (ctx->hmac);"
    },
    {
        "line": 118,
        "fullcodeline": "hmac_ctx_update (ctx->hmac, BPTR(&work), BLEN(&work));"
    },
    {
        "line": 119,
        "fullcodeline": "output = buf_prepend (&work, hmac_ctx_size(ctx->hmac));"
    },
    {
        "line": 120,
        "fullcodeline": "ASSERT (output);"
    },
    {
        "line": 121,
        "fullcodeline": "hmac_ctx_final (ctx->hmac, output);"
    },
    {
        "line": 20,
        "fullcodeline": "if (mode == OPENVPN_MODE_CBC)"
    },
    {
        "line": 58,
        "fullcodeline": "if (opt->flags & CO_USE_IV)"
    },
    {
        "line": 62,
        "fullcodeline": "format_hex (BPTR (buf), BLEN (buf), 80, &gc));"
    },
    {
        "line": 68,
        "fullcodeline": "if (!buf_safe (&work, buf->len + cipher_ctx_block_size(ctx->cipher)))"
    },
    {
        "line": 91,
        "fullcodeline": "if (opt->flags & CO_USE_IV)"
    },
    {
        "line": 99,
        "fullcodeline": "format_hex (BPTR (&work), BLEN (&work), 80, &gc));"
    },
    {
        "line": 22,
        "fullcodeline": "CLEAR (iv_buf);"
    },
    {
        "line": 59,
        "fullcodeline": "dmsg (D_PACKET_CONTENT, \"ENCRYPT IV: %s\", format_hex (iv_buf, iv_size, 0, &gc));"
    },
    {
        "line": 70,
        "fullcodeline": "msg (D_CRYPT_ERRORS, \"ENCRYPT: buffer size error, bc=%d bo=%d bl=%d wc=%d wo=%d wl=%d cbs=%d\","
    },
    {
        "line": 93,
        "fullcodeline": "uint8_t *output = buf_prepend (&work, iv_size);"
    },
    {
        "line": 94,
        "fullcodeline": "ASSERT (output);"
    },
    {
        "line": 95,
        "fullcodeline": "memcpy (output, iv_buf, iv_size);"
    },
    {
        "line": 25,
        "fullcodeline": "if (opt->flags & CO_USE_IV)"
    },
    {
        "line": 77,
        "fullcodeline": "cipher_ctx_block_size (ctx->cipher));"
    },
    {
        "line": 106,
        "fullcodeline": "packet_id_alloc_outgoing (&opt->packet_id->send, &pin, BOOL_CAST (opt->flags & CO_PACKET_ID_LONG_FORM));"
    },
    {
        "line": 107,
        "fullcodeline": "ASSERT (packet_id_write (&pin, buf, BOOL_CAST (opt->flags & CO_PACKET_ID_LONG_FORM), true));"
    },
    {
        "line": 26,
        "fullcodeline": "prng_bytes (iv_buf, iv_size);"
    },
    {
        "line": 32,
        "fullcodeline": "packet_id_alloc_outgoing (&opt->packet_id->send, &pin, BOOL_CAST (opt->flags & CO_PACKET_ID_LONG_FORM));"
    },
    {
        "line": 33,
        "fullcodeline": "ASSERT (packet_id_write (&pin, buf, BOOL_CAST (opt->flags & CO_PACKET_ID_LONG_FORM), true));"
    },
    {
        "line": 36,
        "fullcodeline": "else if (mode == OPENVPN_MODE_CFB || mode == OPENVPN_MODE_OFB)"
    },
    {
        "line": 41,
        "fullcodeline": "ASSERT (opt->flags & CO_USE_IV);    /* IV and packet-ID required */"
    },
    {
        "line": 42,
        "fullcodeline": "ASSERT (opt->packet_id); /*  for this mode. */"
    },
    {
        "line": 44,
        "fullcodeline": "packet_id_alloc_outgoing (&opt->packet_id->send, &pin, true);"
    },
    {
        "line": 45,
        "fullcodeline": "memset (iv_buf, 0, iv_size);"
    },
    {
        "line": 46,
        "fullcodeline": "buf_set_write (&b, iv_buf, iv_size);"
    },
    {
        "line": 47,
        "fullcodeline": "ASSERT (packet_id_write (&pin, &b, true, false));"
    },
    {
        "line": 51,
        "fullcodeline": "ASSERT (0);"
    }
]