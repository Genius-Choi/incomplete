[
    {
        "line": 5,
        "fullcodeline": "static const char error_prefix[] = \"Authenticate/Decrypt packet error\";"
    },
    {
        "line": 7,
        "fullcodeline": "gc_init (&gc);"
    },
    {
        "line": 150,
        "fullcodeline": "gc_free (&gc);"
    },
    {
        "line": 154,
        "fullcodeline": "crypto_clear_error();"
    },
    {
        "line": 155,
        "fullcodeline": "buf->len = 0;"
    },
    {
        "line": 156,
        "fullcodeline": "gc_free (&gc);"
    },
    {
        "line": 9,
        "fullcodeline": "if (buf->len > 0 && opt->key_ctx_bi)"
    },
    {
        "line": 13,
        "fullcodeline": "bool have_pin = false;"
    },
    {
        "line": 147,
        "fullcodeline": "*buf = work;"
    },
    {
        "line": 19,
        "fullcodeline": "uint8_t local_hmac[MAX_HMAC_KEY_LENGTH]; /* HMAC of ciphertext computed locally */"
    },
    {
        "line": 21,
        "fullcodeline": "hmac_ctx_reset(ctx->hmac);"
    },
    {
        "line": 24,
        "fullcodeline": "hmac_len = hmac_ctx_size (ctx->hmac);"
    },
    {
        "line": 30,
        "fullcodeline": "hmac_ctx_update (ctx->hmac, BPTR (buf) + hmac_len, BLEN (buf) - hmac_len);"
    },
    {
        "line": 31,
        "fullcodeline": "hmac_ctx_final (ctx->hmac, local_hmac);"
    },
    {
        "line": 37,
        "fullcodeline": "ASSERT (buf_advance (buf, hmac_len));"
    },
    {
        "line": 44,
        "fullcodeline": "const unsigned int mode = cipher_ctx_mode (ctx->cipher);"
    },
    {
        "line": 45,
        "fullcodeline": "const int iv_size = cipher_ctx_iv_length (ctx->cipher);"
    },
    {
        "line": 46,
        "fullcodeline": "uint8_t iv_buf[OPENVPN_MAX_IV_LENGTH];"
    },
    {
        "line": 50,
        "fullcodeline": "ASSERT (buf_init (&work, FRAME_HEADROOM_ADJ (frame, FRAME_HEADROOM_MARKER_DECRYPT)));"
    },
    {
        "line": 53,
        "fullcodeline": "CLEAR (iv_buf);"
    },
    {
        "line": 80,
        "fullcodeline": "work.len += outlen;"
    },
    {
        "line": 85,
        "fullcodeline": "work.len += outlen;"
    },
    {
        "line": 87,
        "fullcodeline": "dmsg (D_PACKET_CONTENT, \"DECRYPT TO: %s\","
    },
    {
        "line": 27,
        "fullcodeline": "if (buf->len < hmac_len)"
    },
    {
        "line": 34,
        "fullcodeline": "if (memcmp (local_hmac, BPTR (buf), hmac_len))"
    },
    {
        "line": 54,
        "fullcodeline": "if (opt->flags & CO_USE_IV)"
    },
    {
        "line": 63,
        "fullcodeline": "if (opt->flags & CO_USE_IV)"
    },
    {
        "line": 66,
        "fullcodeline": "if (buf->len < 1)"
    },
    {
        "line": 70,
        "fullcodeline": "if (!cipher_ctx_reset (ctx->cipher, iv_buf))"
    },
    {
        "line": 74,
        "fullcodeline": "if (!buf_safe (&work, buf->len))"
    },
    {
        "line": 78,
        "fullcodeline": "if (!cipher_ctx_update (ctx->cipher, BPTR (&work), &outlen, BPTR (buf), BLEN (buf)))"
    },
    {
        "line": 83,
        "fullcodeline": "if (!cipher_ctx_final (ctx->cipher, BPTR (&work) + outlen, &outlen))"
    },
    {
        "line": 88,
        "fullcodeline": "format_hex (BPTR (&work), BLEN (&work), 80, &gc));"
    },
    {
        "line": 133,
        "fullcodeline": "if (packet_id_test (&opt->packet_id->rec, &pin))"
    },
    {
        "line": 28,
        "fullcodeline": "CRYPT_ERROR (\"missing authentication info\");"
    },
    {
        "line": 35,
        "fullcodeline": "CRYPT_ERROR (\"packet HMAC authentication failed\");"
    },
    {
        "line": 58,
        "fullcodeline": "memcpy (iv_buf, BPTR (buf), iv_size);"
    },
    {
        "line": 59,
        "fullcodeline": "ASSERT (buf_advance (buf, iv_size));"
    },
    {
        "line": 64,
        "fullcodeline": "dmsg (D_PACKET_CONTENT, \"DECRYPT IV: %s\", format_hex (iv_buf, iv_size, 0, &gc));"
    },
    {
        "line": 67,
        "fullcodeline": "CRYPT_ERROR (\"missing payload\");"
    },
    {
        "line": 71,
        "fullcodeline": "CRYPT_ERROR (\"cipher init failed\");"
    },
    {
        "line": 75,
        "fullcodeline": "CRYPT_ERROR (\"buffer overflow\");"
    },
    {
        "line": 79,
        "fullcodeline": "CRYPT_ERROR (\"cipher update failed\");"
    },
    {
        "line": 84,
        "fullcodeline": "CRYPT_ERROR (\"cipher final failed\");"
    },
    {
        "line": 92,
        "fullcodeline": "if (mode == OPENVPN_MODE_CBC)"
    },
    {
        "line": 135,
        "fullcodeline": "packet_id_add (&opt->packet_id->rec, &pin);"
    },
    {
        "line": 56,
        "fullcodeline": "if (buf->len < iv_size)"
    },
    {
        "line": 126,
        "fullcodeline": "have_pin = !BOOL_CAST (opt->flags & CO_IGNORE_PACKET_ID);"
    },
    {
        "line": 136,
        "fullcodeline": "if (opt->pid_persist && (opt->flags & CO_PACKET_ID_LONG_FORM))"
    },
    {
        "line": 57,
        "fullcodeline": "CRYPT_ERROR (\"missing IV info\");"
    },
    {
        "line": 124,
        "fullcodeline": "if (!packet_id_read (&pin, &work, BOOL_CAST (opt->flags & CO_PACKET_ID_LONG_FORM)))"
    },
    {
        "line": 137,
        "fullcodeline": "packet_id_persist_save_obj (opt->pid_persist, opt->packet_id);"
    },
    {
        "line": 141,
        "fullcodeline": "if (!(opt->flags & CO_MUTE_REPLAY_WARNINGS))"
    },
    {
        "line": 98,
        "fullcodeline": "have_pin = true;"
    },
    {
        "line": 101,
        "fullcodeline": "else if (mode == OPENVPN_MODE_CFB || mode == OPENVPN_MODE_OFB)"
    },
    {
        "line": 125,
        "fullcodeline": "CRYPT_ERROR (\"error reading packet-id\");"
    },
    {
        "line": 142,
        "fullcodeline": "msg (D_REPLAY_ERRORS, \"%s: bad packet ID (may be a replay): %s -- see the man page entry for --no-replay and --replay-window for more info or silence this warning with --mute-replay-warnings\","
    },
    {
        "line": 96,
        "fullcodeline": "if (!packet_id_read (&pin, &work, BOOL_CAST (opt->flags & CO_PACKET_ID_LONG_FORM)))"
    },
    {
        "line": 105,
        "fullcodeline": "ASSERT (opt->flags & CO_USE_IV);    /* IV and packet-ID required */"
    },
    {
        "line": 106,
        "fullcodeline": "ASSERT (opt->packet_id); /*  for this mode. */"
    },
    {
        "line": 108,
        "fullcodeline": "buf_set_read (&b, iv_buf, iv_size);"
    },
    {
        "line": 111,
        "fullcodeline": "have_pin = true;"
    },
    {
        "line": 143,
        "fullcodeline": "error_prefix, packet_id_net_print (&pin, true, &gc));"
    },
    {
        "line": 97,
        "fullcodeline": "CRYPT_ERROR (\"error reading CBC packet-id\");"
    },
    {
        "line": 109,
        "fullcodeline": "if (!packet_id_read (&pin, &b, true))"
    },
    {
        "line": 115,
        "fullcodeline": "ASSERT (0);"
    },
    {
        "line": 110,
        "fullcodeline": "CRYPT_ERROR (\"error reading CFB/OFB packet-id\");"
    }
]