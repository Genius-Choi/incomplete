[
    {
        "line": 4,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "*off = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "*len = 0;"
    },
    {
        "line": 90,
        "fullcodeline": "if (*off > 4096) {"
    },
    {
        "line": 16,
        "fullcodeline": "*off = le16_to_cpu(((struct smb2_sess_setup_req *)hdr)->SecurityBufferOffset);"
    },
    {
        "line": 17,
        "fullcodeline": "*len = le16_to_cpu(((struct smb2_sess_setup_req *)hdr)->SecurityBufferLength);"
    },
    {
        "line": 20,
        "fullcodeline": "*off = le16_to_cpu(((struct smb2_tree_connect_req *)hdr)->PathOffset);"
    },
    {
        "line": 21,
        "fullcodeline": "*len = le16_to_cpu(((struct smb2_tree_connect_req *)hdr)->PathLength);"
    },
    {
        "line": 38,
        "fullcodeline": "*off = le16_to_cpu(((struct smb2_query_info_req *)hdr)->InputBufferOffset);"
    },
    {
        "line": 39,
        "fullcodeline": "*len = le32_to_cpu(((struct smb2_query_info_req *)hdr)->InputBufferLength);"
    },
    {
        "line": 42,
        "fullcodeline": "*off = le16_to_cpu(((struct smb2_set_info_req *)hdr)->BufferOffset);"
    },
    {
        "line": 43,
        "fullcodeline": "*len = le32_to_cpu(((struct smb2_set_info_req *)hdr)->BufferLength);"
    },
    {
        "line": 46,
        "fullcodeline": "*off = le16_to_cpu(((struct smb2_read_req *)hdr)->ReadChannelInfoOffset);"
    },
    {
        "line": 47,
        "fullcodeline": "*len = le16_to_cpu(((struct smb2_read_req *)hdr)->ReadChannelInfoLength);"
    },
    {
        "line": 59,
        "fullcodeline": "*off = le16_to_cpu(((struct smb2_write_req *)hdr)->WriteChannelInfoOffset);"
    },
    {
        "line": 60,
        "fullcodeline": "*len = le16_to_cpu(((struct smb2_write_req *)hdr)->WriteChannelInfoLength);"
    },
    {
        "line": 63,
        "fullcodeline": "*off = le16_to_cpu(((struct smb2_query_directory_req *)hdr)->FileNameOffset);"
    },
    {
        "line": 64,
        "fullcodeline": "*len = le16_to_cpu(((struct smb2_query_directory_req *)hdr)->FileNameLength);"
    },
    {
        "line": 82,
        "fullcodeline": "*off = le32_to_cpu(((struct smb2_ioctl_req *)hdr)->InputOffset);"
    },
    {
        "line": 83,
        "fullcodeline": "*len = le32_to_cpu(((struct smb2_ioctl_req *)hdr)->InputCount);"
    },
    {
        "line": 86,
        "fullcodeline": "ksmbd_debug(SMB, \"no length check for command\\n\");"
    },
    {
        "line": 91,
        "fullcodeline": "ksmbd_debug(SMB, \"offset %d too large\\n\", *off);"
    },
    {
        "line": 92,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 33,
        "fullcodeline": "*off = le16_to_cpu(((struct smb2_create_req *)hdr)->NameOffset);"
    },
    {
        "line": 34,
        "fullcodeline": "*len = le16_to_cpu(((struct smb2_create_req *)hdr)->NameLength);"
    },
    {
        "line": 50,
        "fullcodeline": "if (((struct smb2_write_req *)hdr)->DataOffset ||"
    },
    {
        "line": 74,
        "fullcodeline": "lock_count = le16_to_cpu(((struct smb2_lock_req *)hdr)->LockCount) - 1;"
    },
    {
        "line": 55,
        "fullcodeline": "*len = le32_to_cpu(((struct smb2_write_req *)hdr)->Length);"
    },
    {
        "line": 75,
        "fullcodeline": "if (lock_count > 0) {"
    },
    {
        "line": 93,
        "fullcodeline": "} else if ((u64)*off + *len > MAX_STREAM_PROT_LEN) {"
    },
    {
        "line": 26,
        "fullcodeline": "*off = le32_to_cpu(((struct smb2_create_req *)"
    },
    {
        "line": 28,
        "fullcodeline": "*len = le32_to_cpu(((struct smb2_create_req *)"
    },
    {
        "line": 76,
        "fullcodeline": "*off = __SMB2_HEADER_STRUCTURE_SIZE + 48;"
    },
    {
        "line": 77,
        "fullcodeline": "*len = sizeof(struct smb2_lock_element) * lock_count;"
    },
    {
        "line": 94,
        "fullcodeline": "ksmbd_debug(SMB, \"Request is larger than maximum stream protocol length(%u): %llu\\n\","
    },
    {
        "line": 96,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 95,
        "fullcodeline": "MAX_STREAM_PROT_LEN, (u64)*off + *len);"
    }
]