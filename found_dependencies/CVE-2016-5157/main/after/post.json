[
    {
        "line": 4,
        "fullcodeline": "FILE *fbase=NULL, *ftest=NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "int same = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "char lbase[512];"
    },
    {
        "line": 7,
        "fullcodeline": "char strbase[512];"
    },
    {
        "line": 8,
        "fullcodeline": "char ltest[512];"
    },
    {
        "line": 9,
        "fullcodeline": "char strtest[512];"
    },
    {
        "line": 18,
        "fullcodeline": "printf(\"******Parameters********* \\n\");"
    },
    {
        "line": 19,
        "fullcodeline": "printf(\" base_filename = %s\\n\""
    },
    {
        "line": 22,
        "fullcodeline": "printf(\"************************* \\n\");"
    },
    {
        "line": 25,
        "fullcodeline": "printf(\"Try to open: %s for reading ... \", inParam.base_filename);"
    },
    {
        "line": 30,
        "fullcodeline": "printf(\"Ok.\\n\");"
    },
    {
        "line": 33,
        "fullcodeline": "printf(\"Try to open: %s for reading ... \", inParam.test_filename);"
    },
    {
        "line": 38,
        "fullcodeline": "printf(\"Ok.\\n\");"
    },
    {
        "line": 57,
        "fullcodeline": "same = 1;"
    },
    {
        "line": 58,
        "fullcodeline": "printf(\"\\n***** TEST SUCCEED: Files are the same. *****\\n\");"
    },
    {
        "line": 65,
        "fullcodeline": "free(inParam.base_filename);"
    },
    {
        "line": 66,
        "fullcodeline": "free(inParam.test_filename);"
    },
    {
        "line": 11,
        "fullcodeline": "if( parse_cmdline_cmp(argc, argv, &inParam) == 1 )"
    },
    {
        "line": 26,
        "fullcodeline": "if((fbase = fopen(inParam.base_filename, \"rb\"))==NULL)"
    },
    {
        "line": 34,
        "fullcodeline": "if((ftest = fopen(inParam.test_filename, \"rb\"))==NULL)"
    },
    {
        "line": 40,
        "fullcodeline": "while (fgets(lbase, sizeof(lbase), fbase) && fgets(ltest,sizeof(ltest),ftest))"
    },
    {
        "line": 68,
        "fullcodeline": "return same ? EXIT_SUCCESS : EXIT_FAILURE;"
    },
    {
        "line": 13,
        "fullcodeline": "compare_dump_files_help_display();"
    },
    {
        "line": 42,
        "fullcodeline": "int nbase = sscanf(lbase, \"%511[^\\r\\n]\", strbase);"
    },
    {
        "line": 43,
        "fullcodeline": "int ntest = sscanf(ltest, \"%511[^\\r\\n]\", strtest);"
    },
    {
        "line": 44,
        "fullcodeline": "assert( nbase != 511 && ntest != 511 );"
    },
    {
        "line": 61,
        "fullcodeline": "if(fbase) fclose(fbase);"
    },
    {
        "line": 62,
        "fullcodeline": "if(ftest) fclose(ftest);"
    },
    {
        "line": 45,
        "fullcodeline": "if( nbase != 1 || ntest != 1 )"
    },
    {
        "line": 50,
        "fullcodeline": "if( strcmp( strbase, strtest ) != 0 )"
    },
    {
        "line": 47,
        "fullcodeline": "fprintf(stderr, \"could not parse line from files\\n\" );"
    },
    {
        "line": 52,
        "fullcodeline": "fprintf(stderr,\"<%s> vs. <%s>\\n\", strbase, strtest);"
    }
]