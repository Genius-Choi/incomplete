[
    {
        "line": 8,
        "fullcodeline": "struct object *obj = &tree->object;"
    },
    {
        "line": 11,
        "fullcodeline": "enum interesting match = revs->diffopt.pathspec.nr == 0 ?"
    },
    {
        "line": 13,
        "fullcodeline": "int baselen = base->len;"
    },
    {
        "line": 27,
        "fullcodeline": "obj->flags |= SEEN;"
    },
    {
        "line": 28,
        "fullcodeline": "strbuf_addstr(base, name);"
    },
    {
        "line": 29,
        "fullcodeline": "show(obj, base->buf, cb_data);"
    },
    {
        "line": 33,
        "fullcodeline": "init_tree_desc(&desc, tree->buffer, tree->size);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!revs->tree_objects)"
    },
    {
        "line": 17,
        "fullcodeline": "if (!obj)"
    },
    {
        "line": 19,
        "fullcodeline": "if (obj->flags & (UNINTERESTING | SEEN))"
    },
    {
        "line": 35,
        "fullcodeline": "while (tree_entry(&desc, &entry)) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (parse_tree_gently(tree, revs->ignore_missing_links) < 0) {"
    },
    {
        "line": 31,
        "fullcodeline": "strbuf_addch(base, '/');"
    },
    {
        "line": 24,
        "fullcodeline": "die(\"bad tree object %s\", oid_to_hex(&obj->oid));"
    },
    {
        "line": 45,
        "fullcodeline": "if (S_ISDIR(entry.mode))"
    },
    {
        "line": 37,
        "fullcodeline": "match = tree_entry_interesting(&entry, base, 0,"
    },
    {
        "line": 46,
        "fullcodeline": "process_tree(revs,"
    },
    {
        "line": 39,
        "fullcodeline": "if (match == all_entries_not_interesting)"
    },
    {
        "line": 41,
        "fullcodeline": "if (match == entry_not_interesting)"
    },
    {
        "line": 47,
        "fullcodeline": "lookup_tree(entry.sha1),"
    },
    {
        "line": 50,
        "fullcodeline": "else if (S_ISGITLINK(entry.mode))"
    },
    {
        "line": 51,
        "fullcodeline": "process_gitlink(revs, entry.sha1,"
    },
    {
        "line": 55,
        "fullcodeline": "process_blob(revs,"
    },
    {
        "line": 56,
        "fullcodeline": "lookup_blob(entry.sha1),"
    }
]