[
    {
        "line": 4,
        "fullcodeline": "char line[1000];"
    },
    {
        "line": 5,
        "fullcodeline": "int flags = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "init_revisions(&revs, NULL);"
    },
    {
        "line": 8,
        "fullcodeline": "save_commit_buffer = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "setup_revisions(ac, av, &revs, NULL);"
    },
    {
        "line": 12,
        "fullcodeline": "is_repository_shallow();"
    },
    {
        "line": 45,
        "fullcodeline": "mark_edges_uninteresting(&revs, show_edge);"
    },
    {
        "line": 46,
        "fullcodeline": "traverse_commit_list(&revs, show_commit, show_object, NULL);"
    },
    {
        "line": 64,
        "fullcodeline": "sha1_array_clear(&recent_objects);"
    },
    {
        "line": 14,
        "fullcodeline": "while (fgets(line, sizeof(line), stdin) != NULL) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (use_bitmap_index && !get_object_list_from_bitmap(&revs))"
    },
    {
        "line": 43,
        "fullcodeline": "if (prepare_revision_walk(&revs))"
    },
    {
        "line": 15,
        "fullcodeline": "int len = strlen(line);"
    },
    {
        "line": 44,
        "fullcodeline": "die(\"revision walk setup failed\");"
    },
    {
        "line": 49,
        "fullcodeline": "revs.ignore_missing_links = 1;"
    },
    {
        "line": 55,
        "fullcodeline": "traverse_commit_list(&revs, record_recent_commit,"
    },
    {
        "line": 60,
        "fullcodeline": "add_objects_in_unpacked_packs(&revs);"
    },
    {
        "line": 62,
        "fullcodeline": "loosen_unused_packed_objects(&revs);"
    },
    {
        "line": 16,
        "fullcodeline": "if (len && line[len - 1] == '\\n')"
    },
    {
        "line": 18,
        "fullcodeline": "if (!len)"
    },
    {
        "line": 20,
        "fullcodeline": "if (*line == '-') {"
    },
    {
        "line": 36,
        "fullcodeline": "if (handle_revision_arg(line, &revs, flags, REVARG_CANNOT_BE_FILENAME))"
    },
    {
        "line": 50,
        "fullcodeline": "if (add_unseen_recent_objects_to_traversal(&revs,"
    },
    {
        "line": 53,
        "fullcodeline": "if (prepare_revision_walk(&revs))"
    },
    {
        "line": 17,
        "fullcodeline": "line[--len] = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "die(\"not a rev '%s'\", line);"
    },
    {
        "line": 37,
        "fullcodeline": "die(\"bad revision '%s'\", line);"
    },
    {
        "line": 52,
        "fullcodeline": "die(\"unable to add recent objects\");"
    },
    {
        "line": 54,
        "fullcodeline": "die(\"revision walk setup failed\");"
    },
    {
        "line": 21,
        "fullcodeline": "if (!strcmp(line, \"--not\")) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (starts_with(line, \"--shallow \")) {"
    },
    {
        "line": 22,
        "fullcodeline": "flags ^= UNINTERESTING;"
    },
    {
        "line": 23,
        "fullcodeline": "write_bitmap_index = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "unsigned char sha1[20];"
    },
    {
        "line": 30,
        "fullcodeline": "register_shallow(sha1);"
    },
    {
        "line": 31,
        "fullcodeline": "use_bitmap_index = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "if (get_sha1_hex(line + 10, sha1))"
    },
    {
        "line": 29,
        "fullcodeline": "die(\"not an SHA-1 '%s'\", line + 10);"
    }
]