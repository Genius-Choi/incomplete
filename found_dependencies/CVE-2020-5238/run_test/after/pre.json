[
    {
        "line": 2,
        "fullcodeline": "parser = argparse.ArgumentParser(description='Run cmark tests.')"
    },
    {
        "line": 3,
        "fullcodeline": "parser.add_argument('--program', dest='program', nargs='?', default=None,"
    },
    {
        "line": 5,
        "fullcodeline": "parser.add_argument('--library-dir', dest='library_dir', nargs='?',"
    },
    {
        "line": 7,
        "fullcodeline": "args = parser.parse_args(sys.argv[1:])"
    },
    {
        "line": 8,
        "fullcodeline": "cmark = CMark(prog=args.program, library_dir=args.library_dir, extensions=\"table\")"
    },
    {
        "line": 10,
        "fullcodeline": "[rc, actual, err] = cmark.to_html(inp)"
    },
    {
        "line": 11,
        "fullcodeline": "if rc != 0:"
    },
    {
        "line": 12,
        "fullcodeline": "print('[ERRORED (return code %d)]' % rc)"
    },
    {
        "line": 13,
        "fullcodeline": "print(err)"
    },
    {
        "line": 14,
        "fullcodeline": "exit(1)"
    },
    {
        "line": 15,
        "fullcodeline": "elif regex.search(actual):"
    },
    {
        "line": 19,
        "fullcodeline": "print(repr(actual))"
    }
]