[
    {
        "line": 4,
        "fullcodeline": "gboolean matched = FALSE, has_dns_name = FALSE;"
    },
    {
        "line": 8,
        "fullcodeline": "STACK_OF(GENERAL_NAME) * gens;"
    },
    {
        "line": 11,
        "fullcodeline": "gens = X509_get_ext_d2i(cert, NID_subject_alt_name, 0, 0);"
    },
    {
        "line": 13,
        "fullcodeline": "gen_count = sk_GENERAL_NAME_num(gens);"
    },
    {
        "line": 30,
        "fullcodeline": "sk_GENERAL_NAME_pop_free(gens, GENERAL_NAME_free);"
    },
    {
        "line": 14,
        "fullcodeline": "for (gen_index = 0; gen_index < gen_count && !matched; ++gen_index) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (! matched) {"
    },
    {
        "line": 40,
        "fullcodeline": "cert_subject_cn = tls_text_name(X509_get_subject_name(cert), NID_commonName);"
    },
    {
        "line": 15,
        "fullcodeline": "gn = sk_GENERAL_NAME_value(gens, gen_index);"
    },
    {
        "line": 22,
        "fullcodeline": "has_dns_name = TRUE;"
    },
    {
        "line": 23,
        "fullcodeline": "cert_dns_name = tls_dns_name(gn);"
    },
    {
        "line": 36,
        "fullcodeline": "g_warning(\"None of the Subject Alt Names in the certificate match hostname '%s'\", hostname);"
    },
    {
        "line": 41,
        "fullcodeline": "if (cert_subject_cn && *cert_subject_cn) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (gn->type != GEN_DNS)"
    },
    {
        "line": 24,
        "fullcodeline": "if (cert_dns_name && *cert_dns_name) {"
    },
    {
        "line": 42,
        "fullcodeline": "matched = match_hostname(cert_subject_cn, hostname);"
    },
    {
        "line": 25,
        "fullcodeline": "matched = match_hostname(cert_dns_name, hostname);"
    },
    {
        "line": 43,
        "fullcodeline": "if (! matched) {"
    },
    {
        "line": 44,
        "fullcodeline": "g_warning(\"SSL certificate common name '%s' doesn't match host name '%s'\", cert_subject_cn, hostname);"
    }
]