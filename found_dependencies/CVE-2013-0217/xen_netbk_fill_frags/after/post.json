[
    {
        "line": 3,
        "fullcodeline": "struct skb_shared_info *shinfo = skb_shinfo(skb);"
    },
    {
        "line": 4,
        "fullcodeline": "int nr_frags = shinfo->nr_frags;"
    },
    {
        "line": 7,
        "fullcodeline": "for (i = 0; i < nr_frags; i++) {"
    },
    {
        "line": 8,
        "fullcodeline": "skb_frag_t *frag = shinfo->frags + i;"
    },
    {
        "line": 13,
        "fullcodeline": "pending_idx = frag_get_pending_idx(frag);"
    },
    {
        "line": 16,
        "fullcodeline": "page = virt_to_page(idx_to_kaddr(netbk, pending_idx));"
    },
    {
        "line": 17,
        "fullcodeline": "__skb_fill_page_desc(skb, i, page, txp->offset, txp->size);"
    },
    {
        "line": 18,
        "fullcodeline": "skb->len += txp->size;"
    },
    {
        "line": 19,
        "fullcodeline": "skb->data_len += txp->size;"
    },
    {
        "line": 20,
        "fullcodeline": "skb->truesize += txp->size;"
    },
    {
        "line": 24,
        "fullcodeline": "xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY);"
    }
]