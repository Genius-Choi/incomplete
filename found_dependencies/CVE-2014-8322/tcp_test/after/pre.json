[
    {
        "line": 5,
        "fullcodeline": "int packetsize = 1024;"
    },
    {
        "line": 6,
        "fullcodeline": "unsigned char packet[packetsize];"
    },
    {
        "line": 8,
        "fullcodeline": "int caplen = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "int times[REQUESTS];"
    },
    {
        "line": 13,
        "fullcodeline": "tv3.tv_sec=0;"
    },
    {
        "line": 14,
        "fullcodeline": "tv3.tv_usec=1;"
    },
    {
        "line": 16,
        "fullcodeline": "s_in.sin_family = PF_INET;"
    },
    {
        "line": 17,
        "fullcodeline": "s_in.sin_port = htons(port);"
    },
    {
        "line": 31,
        "fullcodeline": "gettimeofday( &tv, NULL );"
    },
    {
        "line": 67,
        "fullcodeline": "memset(&nh, 0, sizeof(nh));"
    },
    {
        "line": 69,
        "fullcodeline": "nh.nh_type\t= 2;"
    },
    {
        "line": 70,
        "fullcodeline": "nh.nh_len\t= htonl(0);"
    },
    {
        "line": 78,
        "fullcodeline": "gettimeofday( &tv, NULL );"
    },
    {
        "line": 79,
        "fullcodeline": "i=0;"
    },
    {
        "line": 191,
        "fullcodeline": "min = INT_MAX;"
    },
    {
        "line": 192,
        "fullcodeline": "avg = 0;"
    },
    {
        "line": 193,
        "fullcodeline": "max = 0;"
    },
    {
        "line": 201,
        "fullcodeline": "avg /= REQUESTS;"
    },
    {
        "line": 18,
        "fullcodeline": "if (!inet_aton(ip_str, &s_in.sin_addr))"
    },
    {
        "line": 140,
        "fullcodeline": "for(i=0; i<REQUESTS; i++)"
    },
    {
        "line": 195,
        "fullcodeline": "for(i=0; i<REQUESTS; i++)"
    },
    {
        "line": 203,
        "fullcodeline": "PCT; printf(\"ping %s:%d (min/avg/max): %.3fms/%.3fms/%.3fms\\n\", ip_str, port, min/1000.0, avg/1000.0, max/1000.0);"
    },
    {
        "line": 21,
        "fullcodeline": "if ((sock = socket(s_in.sin_family, SOCK_STREAM, IPPROTO_TCP)) == -1)"
    },
    {
        "line": 25,
        "fullcodeline": "if( fcntl( sock, F_SETFL, O_NONBLOCK ) < 0 )"
    },
    {
        "line": 53,
        "fullcodeline": "gettimeofday( &tv2, NULL );"
    },
    {
        "line": 72,
        "fullcodeline": "if (send(sock, &nh, sizeof(nh), 0) != sizeof(nh))"
    },
    {
        "line": 83,
        "fullcodeline": "caplen = read(sock, &nh, sizeof(nh));"
    },
    {
        "line": 119,
        "fullcodeline": "gettimeofday( &tv2, NULL );"
    },
    {
        "line": 154,
        "fullcodeline": "gettimeofday( &tv, NULL );"
    },
    {
        "line": 185,
        "fullcodeline": "times[i] = ((tv2.tv_sec*1000000 - tv.tv_sec*1000000) + (tv2.tv_usec - tv.tv_usec));"
    },
    {
        "line": 186,
        "fullcodeline": "printf( \"\\r%d/%d\\r\", i, REQUESTS);"
    },
    {
        "line": 187,
        "fullcodeline": "fflush(stdout);"
    },
    {
        "line": 199,
        "fullcodeline": "avg += times[i];"
    },
    {
        "line": 19,
        "fullcodeline": "return -1;"
    },
    {
        "line": 22,
        "fullcodeline": "return -1;"
    },
    {
        "line": 75,
        "fullcodeline": "return -1;"
    },
    {
        "line": 85,
        "fullcodeline": "if(caplen == -1)"
    },
    {
        "line": 197,
        "fullcodeline": "if(times[i] < min) min = times[i];"
    },
    {
        "line": 198,
        "fullcodeline": "if(times[i] > max) max = times[i];"
    },
    {
        "line": 35,
        "fullcodeline": "if (connect(sock, (struct sockaddr*) &s_in, sizeof(s_in)) == -1)"
    },
    {
        "line": 55,
        "fullcodeline": "if (((tv2.tv_sec*1000000 - tv.tv_sec*1000000) + (tv2.tv_usec - tv.tv_usec)) > (3000*1000))"
    },
    {
        "line": 96,
        "fullcodeline": "len = ntohl(nh.nh_len);"
    },
    {
        "line": 121,
        "fullcodeline": "if (((tv2.tv_sec*1000000 - tv.tv_sec*1000000) + (tv2.tv_usec - tv.tv_usec)) > (1000*1000))"
    },
    {
        "line": 125,
        "fullcodeline": "if(caplen == -1)"
    },
    {
        "line": 142,
        "fullcodeline": "if ((sock = socket(s_in.sin_family, SOCK_STREAM, IPPROTO_TCP)) == -1)"
    },
    {
        "line": 146,
        "fullcodeline": "if( fcntl( sock, F_SETFL, O_NONBLOCK ) < 0 )"
    },
    {
        "line": 176,
        "fullcodeline": "gettimeofday( &tv2, NULL );"
    },
    {
        "line": 183,
        "fullcodeline": "select(1, NULL, NULL, NULL, &tv3);"
    },
    {
        "line": 37,
        "fullcodeline": "if(errno != EINPROGRESS && errno != EALREADY)"
    },
    {
        "line": 49,
        "fullcodeline": "gettimeofday( &tv2, NULL );"
    },
    {
        "line": 59,
        "fullcodeline": "return(-1);"
    },
    {
        "line": 87,
        "fullcodeline": "if( errno != EAGAIN )"
    },
    {
        "line": 143,
        "fullcodeline": "return -1;"
    },
    {
        "line": 97,
        "fullcodeline": "if (len > 1024 || len < 0)"
    },
    {
        "line": 99,
        "fullcodeline": "if( nh.nh_type == 1 && i==0 )"
    },
    {
        "line": 102,
        "fullcodeline": "caplen = read(sock, packet, len);"
    },
    {
        "line": 158,
        "fullcodeline": "if (connect(sock, (struct sockaddr*) &s_in, sizeof(s_in)) == -1)"
    },
    {
        "line": 178,
        "fullcodeline": "if (((tv2.tv_sec*1000000 - tv.tv_sec*1000000) + (tv2.tv_usec - tv.tv_usec)) > (1000*1000))"
    },
    {
        "line": 44,
        "fullcodeline": "return -1;"
    },
    {
        "line": 90,
        "fullcodeline": "return -1;"
    },
    {
        "line": 103,
        "fullcodeline": "if(caplen == len)"
    },
    {
        "line": 115,
        "fullcodeline": "caplen = read(sock, packet, len);"
    },
    {
        "line": 172,
        "fullcodeline": "gettimeofday( &tv2, NULL );"
    },
    {
        "line": 105,
        "fullcodeline": "i=2;"
    },
    {
        "line": 160,
        "fullcodeline": "if(errno != EINPROGRESS && errno != EALREADY)"
    },
    {
        "line": 110,
        "fullcodeline": "i=0;"
    },
    {
        "line": 167,
        "fullcodeline": "return -1;"
    }
]