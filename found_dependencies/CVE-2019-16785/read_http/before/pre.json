[
    {
        "line": 13,
        "fullcodeline": "header_lines = []"
    },
    {
        "line": 20,
        "fullcodeline": "headers = dict()"
    },
    {
        "line": 10,
        "fullcodeline": "if not response_line:"
    },
    {
        "line": 21,
        "fullcodeline": "for x in header_lines:"
    },
    {
        "line": 31,
        "fullcodeline": "if \"content-length\" in headers:"
    },
    {
        "line": 45,
        "fullcodeline": "return response_line, headers, body"
    },
    {
        "line": 3,
        "fullcodeline": "response_line = fp.readline()"
    },
    {
        "line": 11,
        "fullcodeline": "raise ConnectionClosed"
    },
    {
        "line": 15,
        "fullcodeline": "line = fp.readline()"
    },
    {
        "line": 32,
        "fullcodeline": "num = int(headers[\"content-length\"])"
    },
    {
        "line": 33,
        "fullcodeline": "body = b\"\""
    },
    {
        "line": 34,
        "fullcodeline": "left = num"
    },
    {
        "line": 43,
        "fullcodeline": "body = fp.read()"
    },
    {
        "line": 16,
        "fullcodeline": "if line in (b\"\\r\\n\", b\"\\n\", b\"\"):"
    },
    {
        "line": 22,
        "fullcodeline": "x = x.strip()"
    },
    {
        "line": 26,
        "fullcodeline": "key = key.decode(\"iso-8859-1\").lower()"
    },
    {
        "line": 27,
        "fullcodeline": "value = value.decode(\"iso-8859-1\")"
    },
    {
        "line": 28,
        "fullcodeline": "assert key not in headers, \"%s header duplicated\" % key"
    },
    {
        "line": 29,
        "fullcodeline": "headers[key] = value"
    },
    {
        "line": 35,
        "fullcodeline": "while left > 0:"
    },
    {
        "line": 5,
        "fullcodeline": "fp.close()"
    },
    {
        "line": 9,
        "fullcodeline": "raise"
    },
    {
        "line": 19,
        "fullcodeline": "header_lines.append(line)"
    },
    {
        "line": 23,
        "fullcodeline": "if not x:"
    },
    {
        "line": 25,
        "fullcodeline": "key, value = x.split(b\": \", 1)"
    },
    {
        "line": 36,
        "fullcodeline": "data = fp.read(left)"
    },
    {
        "line": 39,
        "fullcodeline": "body += data"
    },
    {
        "line": 40,
        "fullcodeline": "left -= len(data)"
    },
    {
        "line": 7,
        "fullcodeline": "if get_errno(exc) in (errno.ECONNABORTED, errno.ECONNRESET, 104, 10054):"
    },
    {
        "line": 37,
        "fullcodeline": "if not data:"
    },
    {
        "line": 8,
        "fullcodeline": "raise ConnectionClosed"
    }
]