[
    {
        "line": 10,
        "fullcodeline": "if not all("
    },
    {
        "line": 4,
        "fullcodeline": "tree = ast.parse(expression, mode=\"eval\")"
    },
    {
        "line": 24,
        "fullcodeline": "result = \"Not a valid mathematical expression!\""
    },
    {
        "line": 25,
        "fullcodeline": "embed = discord.Embed(color=0x5B8F3C, title=\"\ud83e\uddee  Math\", description=result)"
    },
    {
        "line": 26,
        "fullcodeline": "await ctx.respond(embed=embed)"
    },
    {
        "line": 28,
        "fullcodeline": "result = eval(compile(tree, filename=\"\", mode=\"eval\"))"
    },
    {
        "line": 29,
        "fullcodeline": "embed = discord.Embed(color=0x5B8F3C, title=\"\ud83e\uddee  Math\", description=result)"
    },
    {
        "line": 30,
        "fullcodeline": "await ctx.respond(embed=embed)"
    },
    {
        "line": 6,
        "fullcodeline": "result = \"Not a valid Python expression!\""
    },
    {
        "line": 7,
        "fullcodeline": "embed = discord.Embed(color=0x5B8F3C, title=\"\ud83e\uddee  Math\", description=result)"
    },
    {
        "line": 8,
        "fullcodeline": "await ctx.respond(embed=embed)"
    },
    {
        "line": 11,
        "fullcodeline": "isinstance("
    },
    {
        "line": 22,
        "fullcodeline": "for node in ast.walk(tree)"
    },
    {
        "line": 13,
        "fullcodeline": "("
    }
]