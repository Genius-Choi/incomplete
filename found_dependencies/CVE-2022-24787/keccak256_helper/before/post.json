[
    {
        "line": 2,
        "fullcodeline": "sub = ir_arg  # TODO get rid of useless variable"
    },
    {
        "line": 3,
        "fullcodeline": "_check_byteslike(sub.typ, expr)"
    },
    {
        "line": 22,
        "fullcodeline": "sub = ensure_in_memory(sub, context)"
    },
    {
        "line": 7,
        "fullcodeline": "if isinstance(sub, bytes):"
    },
    {
        "line": 11,
        "fullcodeline": "if is_base_type(sub.typ, \"bytes32\"):"
    },
    {
        "line": 24,
        "fullcodeline": "return IRnode.from_list("
    },
    {
        "line": 25,
        "fullcodeline": "["
    },
    {
        "line": 31,
        "fullcodeline": "typ=BaseType(\"bytes32\"),"
    },
    {
        "line": 33,
        "fullcodeline": "add_gas_estimate=_gas_bound(ceil(sub.typ.maxlen / 32)),"
    },
    {
        "line": 8,
        "fullcodeline": "return IRnode.from_list(bytes_to_int(keccak256(sub)), typ=BaseType(\"bytes32\"))"
    },
    {
        "line": 12,
        "fullcodeline": "return IRnode.from_list("
    },
    {
        "line": 29,
        "fullcodeline": "[\"sha3\", [\"add\", \"_buf\", 32], [\"mload\", \"_buf\"]],"
    },
    {
        "line": 13,
        "fullcodeline": "["
    },
    {
        "line": 18,
        "fullcodeline": "typ=BaseType(\"bytes32\"),"
    },
    {
        "line": 19,
        "fullcodeline": "add_gas_estimate=_gas_bound(1),"
    },
    {
        "line": 15,
        "fullcodeline": "[\"mstore\", MemoryPositions.FREE_VAR_SPACE, sub],"
    },
    {
        "line": 16,
        "fullcodeline": "[\"sha3\", MemoryPositions.FREE_VAR_SPACE, 32],"
    }
]