[
    {
        "line": 2,
        "fullcodeline": "assert isinstance(src.typ, _BytestringT)"
    },
    {
        "line": 3,
        "fullcodeline": "assert isinstance(dst.typ, _BytestringT)"
    },
    {
        "line": 5,
        "fullcodeline": "_check_assign_bytes(dst, src)"
    },
    {
        "line": 8,
        "fullcodeline": "if src.value == \"~empty\":"
    },
    {
        "line": 12,
        "fullcodeline": "with src.cache_when_complex(\"src\") as (b1, src):"
    },
    {
        "line": 10,
        "fullcodeline": "return STORE(dst, 0)"
    },
    {
        "line": 13,
        "fullcodeline": "with get_bytearray_length(src).cache_when_complex(\"len\") as (b2, len_):"
    },
    {
        "line": 16,
        "fullcodeline": "ret = [\"seq\"]"
    },
    {
        "line": 18,
        "fullcodeline": "dst_ = bytes_data_ptr(dst)"
    },
    {
        "line": 19,
        "fullcodeline": "src_ = bytes_data_ptr(src)"
    },
    {
        "line": 21,
        "fullcodeline": "ret.append(copy_bytes(dst_, src_, len_, max_bytes))"
    },
    {
        "line": 24,
        "fullcodeline": "ret.append(STORE(dst, len_))"
    },
    {
        "line": 26,
        "fullcodeline": "return b1.resolve(b2.resolve(ret))"
    }
]