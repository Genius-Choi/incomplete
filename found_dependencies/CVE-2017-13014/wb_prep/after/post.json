[
    {
        "line": 6,
        "fullcodeline": "const u_char *ep = ndo->ndo_snapend;"
    },
    {
        "line": 8,
        "fullcodeline": "ND_PRINT((ndo, \" wb-prep:\"));"
    },
    {
        "line": 11,
        "fullcodeline": "n = EXTRACT_32BITS(&prep->pp_n);"
    },
    {
        "line": 12,
        "fullcodeline": "ps = (const struct pgstate *)(prep + 1);"
    },
    {
        "line": 9,
        "fullcodeline": "if (len < sizeof(*prep) || !ND_TTEST(*prep))"
    },
    {
        "line": 13,
        "fullcodeline": "while (--n >= 0 && ND_TTEST(*ps)) {"
    },
    {
        "line": 30,
        "fullcodeline": "return ((const u_char *)ps <= ep? 0 : -1);"
    },
    {
        "line": 15,
        "fullcodeline": "char c = '<';"
    },
    {
        "line": 17,
        "fullcodeline": "ND_PRINT((ndo, \" %u/%s:%u\","
    },
    {
        "line": 21,
        "fullcodeline": "io = (const struct id_off *)(ps + 1);"
    },
    {
        "line": 27,
        "fullcodeline": "ND_PRINT((ndo, \">\"));"
    },
    {
        "line": 28,
        "fullcodeline": "ps = (const struct pgstate *)io;"
    },
    {
        "line": 10,
        "fullcodeline": "return (-1);"
    },
    {
        "line": 22,
        "fullcodeline": "for (ie = io + ps->nid; io < ie && ND_TTEST(*io); ++io) {"
    },
    {
        "line": 23,
        "fullcodeline": "ND_PRINT((ndo, \"%c%s:%u\", c, ipaddr_string(ndo, &io->id),"
    },
    {
        "line": 25,
        "fullcodeline": "c = ',';"
    },
    {
        "line": 18,
        "fullcodeline": "EXTRACT_32BITS(&ps->slot),"
    },
    {
        "line": 19,
        "fullcodeline": "ipaddr_string(ndo, &ps->page.p_sid),"
    },
    {
        "line": 24,
        "fullcodeline": "EXTRACT_32BITS(&io->off)));"
    }
]