[
    {
        "line": 9,
        "fullcodeline": "struct sctp_packet *packet = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "struct sctp_chunk *chunk = arg;"
    },
    {
        "line": 13,
        "fullcodeline": "packet = sctp_ootb_pkt_new(net, asoc, chunk);"
    },
    {
        "line": 20,
        "fullcodeline": "shut = sctp_make_shutdown_complete(asoc, chunk);"
    },
    {
        "line": 33,
        "fullcodeline": "sctp_packet_append_chunk(packet, shut);"
    },
    {
        "line": 35,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_SEND_PKT,"
    },
    {
        "line": 38,
        "fullcodeline": "SCTP_INC_STATS(net, SCTP_MIB_OUTCTRLCHUNKS);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!packet)"
    },
    {
        "line": 21,
        "fullcodeline": "if (!shut) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (sctp_test_T_bit(shut))"
    },
    {
        "line": 36,
        "fullcodeline": "SCTP_PACKET(packet));"
    },
    {
        "line": 44,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 28,
        "fullcodeline": "packet->vtag = ntohl(chunk->sctp_hdr->vtag);"
    }
]