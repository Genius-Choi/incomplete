[
    {
        "line": 8,
        "fullcodeline": "struct sctp_paramhdr *err_param = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "struct sctp_chunk *asconf_ack = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "struct sctp_chunk *chunk = arg;"
    },
    {
        "line": 36,
        "fullcodeline": "serial = ntohl(hdr->serial);"
    },
    {
        "line": 104,
        "fullcodeline": "asconf_ack->dest = chunk->source;"
    },
    {
        "line": 105,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_REPLY, SCTP_CHUNK(asconf_ack));"
    },
    {
        "line": 14,
        "fullcodeline": "if (!sctp_vtag_verify(chunk, asoc)) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (!sctp_chunk_length_valid(chunk, sizeof(struct sctp_addip_chunk)))"
    },
    {
        "line": 31,
        "fullcodeline": "if (!asoc->peer.asconf_capable ||"
    },
    {
        "line": 39,
        "fullcodeline": "if (!sctp_verify_asconf(asoc, chunk, true, &err_param))"
    },
    {
        "line": 47,
        "fullcodeline": "if (serial == asoc->peer.addip_serial + 1) {"
    },
    {
        "line": 15,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_REPORT_BAD_TAG,"
    },
    {
        "line": 32,
        "fullcodeline": "(!net->sctp.addip_noauth && !chunk->auth))"
    },
    {
        "line": 62,
        "fullcodeline": "asconf_ack = sctp_process_asconf((struct sctp_association *)"
    },
    {
        "line": 107,
        "fullcodeline": "sctp_sf_heartbeat(ep, asoc, type, asoc->new_transport, commands);"
    },
    {
        "line": 108,
        "fullcodeline": "((struct sctp_association *)asoc)->new_transport = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 22,
        "fullcodeline": "return sctp_sf_violation_chunklen(net, ep, asoc, type, arg,"
    },
    {
        "line": 33,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 40,
        "fullcodeline": "return sctp_sf_violation_paramlen(net, ep, asoc, type, arg,"
    },
    {
        "line": 51,
        "fullcodeline": "if (!chunk->has_asconf)"
    },
    {
        "line": 64,
        "fullcodeline": "if (!asconf_ack)"
    },
    {
        "line": 41,
        "fullcodeline": "(void *)err_param, commands);"
    },
    {
        "line": 52,
        "fullcodeline": "sctp_assoc_clean_asconf_ack_cache(asoc);"
    },
    {
        "line": 66,
        "fullcodeline": "} else if (serial < asoc->peer.addip_serial + 1) {"
    },
    {
        "line": 79,
        "fullcodeline": "asconf_ack = sctp_assoc_lookup_asconf_ack(asoc, hdr->serial);"
    },
    {
        "line": 87,
        "fullcodeline": "asconf_ack->transport = NULL;"
    },
    {
        "line": 80,
        "fullcodeline": "if (!asconf_ack)"
    }
]