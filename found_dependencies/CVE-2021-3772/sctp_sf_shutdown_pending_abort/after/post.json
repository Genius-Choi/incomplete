[
    {
        "line": 9,
        "fullcodeline": "struct sctp_chunk *chunk = arg;"
    },
    {
        "line": 11,
        "fullcodeline": "if (!sctp_vtag_verify_either(chunk, asoc))"
    },
    {
        "line": 24,
        "fullcodeline": "if (!sctp_chunk_length_valid(chunk, sizeof(struct sctp_abort_chunk)))"
    },
    {
        "line": 32,
        "fullcodeline": "if (SCTP_ADDR_DEL =="
    },
    {
        "line": 36,
        "fullcodeline": "if (!sctp_err_chunk_valid(chunk))"
    },
    {
        "line": 39,
        "fullcodeline": "return __sctp_sf_do_9_1_abort(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 33,
        "fullcodeline": "sctp_bind_addr_state(&asoc->base.bind_addr, &chunk->dest))"
    },
    {
        "line": 12,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 25,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 34,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 37,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    }
]