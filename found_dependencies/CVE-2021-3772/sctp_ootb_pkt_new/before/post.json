[
    {
        "line": 12,
        "fullcodeline": "sport = ntohs(chunk->sctp_hdr->dest);"
    },
    {
        "line": 13,
        "fullcodeline": "dport = ntohs(chunk->sctp_hdr->source);"
    },
    {
        "line": 55,
        "fullcodeline": "transport = sctp_transport_new(net, sctp_source(chunk), GFP_ATOMIC);"
    },
    {
        "line": 64,
        "fullcodeline": "sctp_transport_route(transport, (union sctp_addr *)&chunk->dest,"
    },
    {
        "line": 67,
        "fullcodeline": "packet = &transport->packet;"
    },
    {
        "line": 68,
        "fullcodeline": "sctp_packet_init(packet, transport, sport, dport);"
    },
    {
        "line": 69,
        "fullcodeline": "sctp_packet_config(packet, vtag, 0);"
    },
    {
        "line": 56,
        "fullcodeline": "if (!transport)"
    },
    {
        "line": 59,
        "fullcodeline": "transport->encap_port = SCTP_INPUT_CB(chunk->skb)->encap_port;"
    },
    {
        "line": 27,
        "fullcodeline": "initack = (struct sctp_initack_chunk *)chunk->chunk_hdr;"
    },
    {
        "line": 28,
        "fullcodeline": "vtag = ntohl(initack->init_hdr.init_tag);"
    },
    {
        "line": 49,
        "fullcodeline": "vtag = ntohl(chunk->sctp_hdr->vtag);"
    },
    {
        "line": 44,
        "fullcodeline": "init = (struct sctp_init_chunk *)chunk->chunk_hdr;"
    },
    {
        "line": 45,
        "fullcodeline": "vtag = ntohl(init->init_hdr.init_tag);"
    }
]