[
    {
        "line": 8,
        "fullcodeline": "struct sctp_ulpevent *ev, *ai_ev = NULL, *auth_ev = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "struct sctp_chunk *chunk = arg;"
    },
    {
        "line": 15,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "sk = ep->base.sk;"
    },
    {
        "line": 55,
        "fullcodeline": "new_asoc = sctp_unpack_cookie(ep, asoc, chunk, GFP_ATOMIC, &error,"
    },
    {
        "line": 92,
        "fullcodeline": "peer_init = &chunk->subh.cookie_hdr->c.peer_init[0];"
    },
    {
        "line": 112,
        "fullcodeline": "repl = sctp_make_cookie_ack(new_asoc, chunk);"
    },
    {
        "line": 122,
        "fullcodeline": "ev = sctp_ulpevent_make_assoc_change(new_asoc, 0, SCTP_COMM_UP, 0,"
    },
    {
        "line": 154,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_NEW_ASOC, SCTP_ASOC(new_asoc));"
    },
    {
        "line": 155,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_NEW_STATE,"
    },
    {
        "line": 157,
        "fullcodeline": "SCTP_INC_STATS(net, SCTP_MIB_CURRESTAB);"
    },
    {
        "line": 158,
        "fullcodeline": "SCTP_INC_STATS(net, SCTP_MIB_PASSIVEESTABS);"
    },
    {
        "line": 159,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_HB_TIMERS_START, SCTP_NULL());"
    },
    {
        "line": 166,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_REPLY, SCTP_CHUNK(repl));"
    },
    {
        "line": 169,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_EVENT_ULP, SCTP_ULPEVENT(ev));"
    },
    {
        "line": 20,
        "fullcodeline": "if (ep == sctp_sk(net->sctp.ctl_sock)->ep) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (!new_asoc) {"
    },
    {
        "line": 103,
        "fullcodeline": "error = sctp_auth_asoc_init_active_key(new_asoc, GFP_ATOMIC);"
    },
    {
        "line": 113,
        "fullcodeline": "if (!repl)"
    },
    {
        "line": 126,
        "fullcodeline": "if (!ev)"
    },
    {
        "line": 156,
        "fullcodeline": "SCTP_STATE(SCTP_STATE_ESTABLISHED));"
    },
    {
        "line": 21,
        "fullcodeline": "SCTP_INC_STATS(net, SCTP_MIB_OUTOFBLUES);"
    },
    {
        "line": 30,
        "fullcodeline": "if (!sctp_chunk_length_valid(chunk, sizeof(struct sctp_chunkhdr)))"
    },
    {
        "line": 38,
        "fullcodeline": "if (!sctp_sstate(sk, LISTENING) ||"
    },
    {
        "line": 39,
        "fullcodeline": "(sctp_style(sk, TCP) && sk_acceptq_is_full(sk)))"
    },
    {
        "line": 47,
        "fullcodeline": "if (!pskb_pull(chunk->skb, ntohs(chunk->chunk_hdr->length) -"
    },
    {
        "line": 94,
        "fullcodeline": "if (!sctp_process_init(new_asoc, chunk,"
    },
    {
        "line": 107,
        "fullcodeline": "if (!sctp_auth_chunk_verify(net, chunk, new_asoc)) {"
    },
    {
        "line": 135,
        "fullcodeline": "ai_ev = sctp_ulpevent_make_adaptation_indication(new_asoc,"
    },
    {
        "line": 142,
        "fullcodeline": "auth_ev = sctp_ulpevent_make_authkey(new_asoc, 0,"
    },
    {
        "line": 162,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_START,"
    },
    {
        "line": 173,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_EVENT_ULP,"
    },
    {
        "line": 22,
        "fullcodeline": "return sctp_sf_tabort_8_4_8(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 31,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 40,
        "fullcodeline": "return sctp_sf_tabort_8_4_8(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 109,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 137,
        "fullcodeline": "if (!ai_ev)"
    },
    {
        "line": 145,
        "fullcodeline": "if (!auth_ev)"
    },
    {
        "line": 163,
        "fullcodeline": "SCTP_TO(SCTP_EVENT_TIMEOUT_AUTOCLOSE));"
    },
    {
        "line": 174,
        "fullcodeline": "SCTP_ULPEVENT(ai_ev));"
    },
    {
        "line": 178,
        "fullcodeline": "SCTP_ULPEVENT(auth_ev));"
    },
    {
        "line": 69,
        "fullcodeline": "case -SCTP_IERROR_NOMEM:"
    },
    {
        "line": 72,
        "fullcodeline": "case -SCTP_IERROR_STALE_COOKIE:"
    },
    {
        "line": 73,
        "fullcodeline": "sctp_send_stale_cookie_err(net, ep, asoc, chunk, commands,"
    },
    {
        "line": 77,
        "fullcodeline": "case -SCTP_IERROR_BAD_SIG:"
    },
    {
        "line": 75,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 79,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    }
]