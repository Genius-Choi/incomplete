[
    {
        "line": 9,
        "fullcodeline": "struct sctp_chunk *chunk = arg, *repl, *err_chunk;"
    },
    {
        "line": 57,
        "fullcodeline": "err_chunk = NULL;"
    },
    {
        "line": 93,
        "fullcodeline": "new_asoc = sctp_make_temp_asoc(ep, chunk, GFP_ATOMIC);"
    },
    {
        "line": 123,
        "fullcodeline": "sctp_tietags_populate(new_asoc, asoc);"
    },
    {
        "line": 130,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 136,
        "fullcodeline": "repl = sctp_make_init_ack(new_asoc, chunk, GFP_ATOMIC, len);"
    },
    {
        "line": 161,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_NEW_ASOC, SCTP_ASOC(new_asoc));"
    },
    {
        "line": 162,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_REPLY, SCTP_CHUNK(repl));"
    },
    {
        "line": 169,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_DELETE_TCB, SCTP_NULL());"
    },
    {
        "line": 170,
        "fullcodeline": "retval = SCTP_DISPOSITION_CONSUME;"
    },
    {
        "line": 175,
        "fullcodeline": "retval = SCTP_DISPOSITION_NOMEM;"
    },
    {
        "line": 17,
        "fullcodeline": "if (security_sctp_assoc_request((struct sctp_endpoint *)ep,"
    },
    {
        "line": 30,
        "fullcodeline": "if (!chunk->singleton)"
    },
    {
        "line": 54,
        "fullcodeline": "chunk->param_hdr.v = skb_pull(chunk->skb, sizeof(struct sctp_inithdr));"
    },
    {
        "line": 94,
        "fullcodeline": "if (!new_asoc)"
    },
    {
        "line": 137,
        "fullcodeline": "if (!repl)"
    },
    {
        "line": 43,
        "fullcodeline": "if (!sctp_chunk_length_valid(chunk, sizeof(struct sctp_init_chunk)))"
    },
    {
        "line": 58,
        "fullcodeline": "if (!sctp_verify_init(net, ep, asoc, chunk->chunk_hdr->type,"
    },
    {
        "line": 97,
        "fullcodeline": "if (sctp_assoc_set_bind_addr_from_ep(new_asoc,"
    },
    {
        "line": 105,
        "fullcodeline": "if (!sctp_process_init(new_asoc, chunk, sctp_source(chunk),"
    },
    {
        "line": 115,
        "fullcodeline": "if (!sctp_state(asoc, COOKIE_WAIT)) {"
    },
    {
        "line": 132,
        "fullcodeline": "len = ntohs(err_chunk->chunk_hdr->length) -"
    },
    {
        "line": 152,
        "fullcodeline": "unk_param = (struct sctp_unrecognized_param *)"
    },
    {
        "line": 158,
        "fullcodeline": "sctp_addto_chunk(repl, len, unk_param);"
    },
    {
        "line": 19,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 31,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 37,
        "fullcodeline": "return sctp_sf_tabort_8_4_8(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 44,
        "fullcodeline": "return sctp_sf_violation_chunklen(net, ep, asoc, type, arg,"
    },
    {
        "line": 47,
        "fullcodeline": "if (SCTP_INPUT_CB(chunk->skb)->encap_port != chunk->transport->encap_port)"
    },
    {
        "line": 48,
        "fullcodeline": "return sctp_sf_new_encap_port(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 98,
        "fullcodeline": "sctp_scope(sctp_source(chunk)), GFP_ATOMIC) < 0)"
    },
    {
        "line": 65,
        "fullcodeline": "packet = sctp_abort_pkt_new(net, ep, asoc, arg,"
    },
    {
        "line": 116,
        "fullcodeline": "if (!sctp_sf_check_restart_addrs(new_asoc, asoc, chunk,"
    },
    {
        "line": 118,
        "fullcodeline": "retval = SCTP_DISPOSITION_CONSUME;"
    },
    {
        "line": 68,
        "fullcodeline": "ntohs(err_chunk->chunk_hdr->length) -"
    },
    {
        "line": 72,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_SEND_PKT,"
    },
    {
        "line": 74,
        "fullcodeline": "SCTP_INC_STATS(net, SCTP_MIB_OUTCTRLCHUNKS);"
    },
    {
        "line": 75,
        "fullcodeline": "retval = SCTP_DISPOSITION_CONSUME;"
    },
    {
        "line": 81,
        "fullcodeline": "return sctp_sf_tabort_8_4_8(net, ep, asoc, type, arg,"
    },
    {
        "line": 73,
        "fullcodeline": "SCTP_PACKET(packet));"
    },
    {
        "line": 77,
        "fullcodeline": "retval = SCTP_DISPOSITION_NOMEM;"
    }
]