[
    {
        "line": 4,
        "fullcodeline": "gsize writesize = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "gboolean result = TRUE;"
    },
    {
        "line": 18,
        "fullcodeline": "gpointer currentfilename = g_malloc0(512);"
    },
    {
        "line": 19,
        "fullcodeline": "unzGetCurrentFileInfo64(epub_document->epubDocument,&info,currentfilename,512,NULL,0,NULL,0) ;"
    },
    {
        "line": 20,
        "fullcodeline": "directory = g_strrstr(currentfilename,\"/\") ;"
    },
    {
        "line": 25,
        "fullcodeline": "gfilepath = g_string_new(epub_document->tmp_archive_dir) ;"
    },
    {
        "line": 26,
        "fullcodeline": "g_string_append_printf(gfilepath,\"/%s\",(gchar*)currentfilename);"
    },
    {
        "line": 32,
        "fullcodeline": "outfile = g_file_new_for_path (gfilepath->str);"
    },
    {
        "line": 33,
        "fullcodeline": "g_autofree gchar *rpath = g_file_get_relative_path (tmp_gfile, outfile);"
    },
    {
        "line": 74,
        "fullcodeline": "outstream = g_file_create(outfile,G_FILE_CREATE_PRIVATE,NULL,error);"
    },
    {
        "line": 75,
        "fullcodeline": "gpointer buffer = g_malloc0(512);"
    },
    {
        "line": 84,
        "fullcodeline": "g_free(buffer);"
    },
    {
        "line": 85,
        "fullcodeline": "g_output_stream_close((GOutputStream*)outstream,NULL,error);"
    },
    {
        "line": 86,
        "fullcodeline": "g_object_unref(outfile) ;"
    },
    {
        "line": 87,
        "fullcodeline": "g_object_unref(outstream) ;"
    },
    {
        "line": 90,
        "fullcodeline": "unzCloseCurrentFile (epub_document->epubDocument) ;"
    },
    {
        "line": 91,
        "fullcodeline": "g_string_free(gfilepath,TRUE);"
    },
    {
        "line": 92,
        "fullcodeline": "g_free(currentfilename);"
    },
    {
        "line": 11,
        "fullcodeline": "if ( unzOpenCurrentFile(epub_document->epubDocument) != UNZ_OK )"
    },
    {
        "line": 22,
        "fullcodeline": "if ( directory != NULL )"
    },
    {
        "line": 29,
        "fullcodeline": "if (g_strrstr(currentfilename, \".html\") != NULL)"
    },
    {
        "line": 35,
        "fullcodeline": "if (rpath == NULL)"
    },
    {
        "line": 48,
        "fullcodeline": "if (directory != NULL && *directory == '\\0')"
    },
    {
        "line": 76,
        "fullcodeline": "while ( (writesize = unzReadCurrentFile(epub_document->epubDocument,buffer,512) ) != 0 )"
    },
    {
        "line": 23,
        "fullcodeline": "directory++;"
    },
    {
        "line": 30,
        "fullcodeline": "g_string_insert_c (gfilepath, gfilepath->len-4, 'x');"
    },
    {
        "line": 37,
        "fullcodeline": "g_set_error_literal (error,"
    },
    {
        "line": 41,
        "fullcodeline": "g_critical (\"Invalid filename in Epub container - '%s'\", (gchar *) currentfilename);"
    },
    {
        "line": 42,
        "fullcodeline": "g_object_unref (outfile);"
    },
    {
        "line": 43,
        "fullcodeline": "result = FALSE;"
    },
    {
        "line": 50,
        "fullcodeline": "g_mkdir(gfilepath->str,0777);"
    },
    {
        "line": 40,
        "fullcodeline": "_(\"epub file is invalid or corrupt\"));"
    },
    {
        "line": 78,
        "fullcodeline": "if ( g_output_stream_write((GOutputStream*)outstream,buffer,writesize,NULL,error) == -1 )"
    },
    {
        "line": 53,
        "fullcodeline": "else if (directory != NULL && *directory != '\\0' ) {"
    },
    {
        "line": 80,
        "fullcodeline": "result = FALSE;"
    },
    {
        "line": 54,
        "fullcodeline": "gchar* createdir = currentfilename;"
    },
    {
        "line": 56,
        "fullcodeline": "gchar *createdirname = g_malloc0(strlen(currentfilename));"
    },
    {
        "line": 58,
        "fullcodeline": "gchar *createdirnametemp = createdirname;"
    },
    {
        "line": 64,
        "fullcodeline": "(*createdirnametemp) = '\\0';"
    },
    {
        "line": 66,
        "fullcodeline": "dir_create = g_string_new(epub_document->tmp_archive_dir);"
    },
    {
        "line": 67,
        "fullcodeline": "g_string_append_printf(dir_create,\"/%s\",createdirname);"
    },
    {
        "line": 68,
        "fullcodeline": "g_free(createdirname);"
    },
    {
        "line": 70,
        "fullcodeline": "g_mkdir_with_parents(dir_create->str,0777);"
    },
    {
        "line": 71,
        "fullcodeline": "g_string_free(dir_create,TRUE);"
    },
    {
        "line": 59,
        "fullcodeline": "while ( createdir != directory ) {"
    },
    {
        "line": 61,
        "fullcodeline": "createdirnametemp++;"
    },
    {
        "line": 62,
        "fullcodeline": "createdir++;"
    }
]