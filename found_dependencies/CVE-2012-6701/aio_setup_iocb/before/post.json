[
    {
        "line": 3,
        "fullcodeline": "struct file *file = kiocb->ki_filp;"
    },
    {
        "line": 4,
        "fullcodeline": "ssize_t ret = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "if (!kiocb->ki_retry)"
    },
    {
        "line": 8,
        "fullcodeline": "ret = -EBADF;"
    },
    {
        "line": 11,
        "fullcodeline": "ret = -EFAULT;"
    },
    {
        "line": 15,
        "fullcodeline": "ret = security_file_permission(file, MAY_READ);"
    },
    {
        "line": 18,
        "fullcodeline": "ret = aio_setup_single_vector(kiocb);"
    },
    {
        "line": 21,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 26,
        "fullcodeline": "ret = -EBADF;"
    },
    {
        "line": 29,
        "fullcodeline": "ret = -EFAULT;"
    },
    {
        "line": 33,
        "fullcodeline": "ret = security_file_permission(file, MAY_WRITE);"
    },
    {
        "line": 36,
        "fullcodeline": "ret = aio_setup_single_vector(kiocb);"
    },
    {
        "line": 39,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 44,
        "fullcodeline": "ret = -EBADF;"
    },
    {
        "line": 47,
        "fullcodeline": "ret = security_file_permission(file, MAY_READ);"
    },
    {
        "line": 50,
        "fullcodeline": "ret = aio_setup_vectored_rw(READ, kiocb, compat);"
    },
    {
        "line": 53,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 58,
        "fullcodeline": "ret = -EBADF;"
    },
    {
        "line": 61,
        "fullcodeline": "ret = security_file_permission(file, MAY_WRITE);"
    },
    {
        "line": 64,
        "fullcodeline": "ret = aio_setup_vectored_rw(WRITE, kiocb, compat);"
    },
    {
        "line": 67,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 72,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 77,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 82,
        "fullcodeline": "dprintk(\"EINVAL: io_submit: no operation provided\\n\");"
    },
    {
        "line": 83,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 9,
        "fullcodeline": "if (unlikely(!(file->f_mode & FMODE_READ)))"
    },
    {
        "line": 12,
        "fullcodeline": "if (unlikely(!access_ok(VERIFY_WRITE, kiocb->ki_buf,"
    },
    {
        "line": 16,
        "fullcodeline": "if (unlikely(ret))"
    },
    {
        "line": 27,
        "fullcodeline": "if (unlikely(!(file->f_mode & FMODE_WRITE)))"
    },
    {
        "line": 30,
        "fullcodeline": "if (unlikely(!access_ok(VERIFY_READ, kiocb->ki_buf,"
    },
    {
        "line": 34,
        "fullcodeline": "if (unlikely(ret))"
    },
    {
        "line": 45,
        "fullcodeline": "if (unlikely(!(file->f_mode & FMODE_READ)))"
    },
    {
        "line": 48,
        "fullcodeline": "if (unlikely(ret))"
    },
    {
        "line": 59,
        "fullcodeline": "if (unlikely(!(file->f_mode & FMODE_WRITE)))"
    },
    {
        "line": 62,
        "fullcodeline": "if (unlikely(ret))"
    },
    {
        "line": 23,
        "fullcodeline": "kiocb->ki_retry = aio_rw_vect_retry;"
    },
    {
        "line": 41,
        "fullcodeline": "kiocb->ki_retry = aio_rw_vect_retry;"
    },
    {
        "line": 55,
        "fullcodeline": "kiocb->ki_retry = aio_rw_vect_retry;"
    },
    {
        "line": 69,
        "fullcodeline": "kiocb->ki_retry = aio_rw_vect_retry;"
    },
    {
        "line": 74,
        "fullcodeline": "kiocb->ki_retry = aio_fdsync;"
    },
    {
        "line": 79,
        "fullcodeline": "kiocb->ki_retry = aio_fsync;"
    }
]