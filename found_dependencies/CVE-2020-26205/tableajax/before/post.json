[
    {
        "line": 5,
        "fullcodeline": "get_data = json.loads(get_data)"
    },
    {
        "line": 6,
        "fullcodeline": "draw = get_data.get('draw', 0)"
    },
    {
        "line": 7,
        "fullcodeline": "start = int(get_data.get('start', 0))"
    },
    {
        "line": 8,
        "fullcodeline": "length = int(get_data.get('length', 0))"
    },
    {
        "line": 9,
        "fullcodeline": "search_value = ''"
    },
    {
        "line": 15,
        "fullcodeline": "order_column = 2"
    },
    {
        "line": 16,
        "fullcodeline": "order_direction = 'desc'"
    },
    {
        "line": 17,
        "fullcodeline": "order_name = ''"
    },
    {
        "line": 26,
        "fullcodeline": "plugin_object = process_plugin(plugin_name, group_type, group_id)"
    },
    {
        "line": 27,
        "fullcodeline": "queryset = plugin_object.get_queryset("
    },
    {
        "line": 30,
        "fullcodeline": "machines = machines.values('id', 'hostname', 'console_user', 'last_checkin')"
    },
    {
        "line": 46,
        "fullcodeline": "limited_machines = searched_machines[start:(start + length)]"
    },
    {
        "line": 48,
        "fullcodeline": "return_data = {}"
    },
    {
        "line": 49,
        "fullcodeline": "return_data['title'] = title"
    },
    {
        "line": 50,
        "fullcodeline": "return_data['draw'] = int(draw)"
    },
    {
        "line": 51,
        "fullcodeline": "return_data['recordsTotal'] = machines.count()"
    },
    {
        "line": 52,
        "fullcodeline": "return_data['recordsFiltered'] = return_data['recordsTotal']"
    },
    {
        "line": 54,
        "fullcodeline": "return_data['data'] = []"
    },
    {
        "line": 55,
        "fullcodeline": "settings_time_zone = None"
    },
    {
        "line": 10,
        "fullcodeline": "if 'search' in get_data:"
    },
    {
        "line": 18,
        "fullcodeline": "if 'order' in get_data:"
    },
    {
        "line": 21,
        "fullcodeline": "for column in get_data.get('columns', None):"
    },
    {
        "line": 29,
        "fullcodeline": "machines, title = plugin_object.filter_machines(queryset, data)"
    },
    {
        "line": 32,
        "fullcodeline": "if len(order_name) != 0:"
    },
    {
        "line": 38,
        "fullcodeline": "if len(search_value) != 0:"
    },
    {
        "line": 61,
        "fullcodeline": "for machine in limited_machines:"
    },
    {
        "line": 77,
        "fullcodeline": "return JsonResponse(return_data)"
    },
    {
        "line": 39,
        "fullcodeline": "hostname_q = Q(hostname__icontains=search_value)"
    },
    {
        "line": 40,
        "fullcodeline": "user_q = Q(console_user__icontains=search_value)"
    },
    {
        "line": 41,
        "fullcodeline": "checkin_q = Q(last_checkin__icontains=search_value)"
    },
    {
        "line": 42,
        "fullcodeline": "searched_machines = machines.filter(hostname_q | user_q | checkin_q).order_by(order_string)"
    },
    {
        "line": 44,
        "fullcodeline": "searched_machines = machines.order_by(order_string)"
    },
    {
        "line": 57,
        "fullcodeline": "settings_time_zone = pytz.timezone(settings.TIME_ZONE)"
    },
    {
        "line": 11,
        "fullcodeline": "if 'value' in get_data['search']:"
    },
    {
        "line": 33,
        "fullcodeline": "if order_direction == 'desc':"
    },
    {
        "line": 71,
        "fullcodeline": "hostname_link = \"<a href=\\\"%s\\\">%s</a>\" % ("
    },
    {
        "line": 74,
        "fullcodeline": "list_data = [hostname_link, machine['console_user'], formatted_date]"
    },
    {
        "line": 22,
        "fullcodeline": "if column['data'] == order_column:"
    },
    {
        "line": 34,
        "fullcodeline": "order_string = \"-%s\" % order_name"
    },
    {
        "line": 36,
        "fullcodeline": "order_string = \"%s\" % order_name"
    },
    {
        "line": 59,
        "fullcodeline": "pass"
    },
    {
        "line": 75,
        "fullcodeline": "return_data['data'].append(list_data)"
    },
    {
        "line": 23,
        "fullcodeline": "order_name = column['name']"
    },
    {
        "line": 70,
        "fullcodeline": "formatted_date = \"\""
    },
    {
        "line": 72,
        "fullcodeline": "reverse('machine_detail', args=[machine['id']]), machine['hostname'])"
    },
    {
        "line": 65,
        "fullcodeline": "formatted_date = machine['last_checkin'].astimezone("
    },
    {
        "line": 68,
        "fullcodeline": "formatted_date = machine['last_checkin'].strftime(\"%Y-%m-%d %H:%M\")"
    }
]