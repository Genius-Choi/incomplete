[
    {
        "line": 26,
        "fullcodeline": "machine = process_checkin_serial(serial)"
    },
    {
        "line": 27,
        "fullcodeline": "machine_group = get_object_or_404("
    },
    {
        "line": 30,
        "fullcodeline": "machine.machine_group = machine_group"
    },
    {
        "line": 31,
        "fullcodeline": "machine.broken_client = False"
    },
    {
        "line": 32,
        "fullcodeline": "machine.save()"
    },
    {
        "line": 33,
        "fullcodeline": "clean_related(machine)"
    },
    {
        "line": 35,
        "fullcodeline": "object_queue = {"
    },
    {
        "line": 45,
        "fullcodeline": "plugin_results = submission.pop(\"plugin_results\", {})"
    },
    {
        "line": 55,
        "fullcodeline": "object_queue = process_managed_item_histories(object_queue, machine)"
    },
    {
        "line": 70,
        "fullcodeline": "msg = f\"Sal report submitted for {machine.serial}\""
    },
    {
        "line": 71,
        "fullcodeline": "logger.debug(msg)"
    },
    {
        "line": 2,
        "fullcodeline": "if request.content_type != \"application/json\":"
    },
    {
        "line": 21,
        "fullcodeline": "if not serial:"
    },
    {
        "line": 46,
        "fullcodeline": "for management_source_name, management_data in submission.items():"
    },
    {
        "line": 59,
        "fullcodeline": "server.utils.process_plugin_script(plugin_results, machine)"
    },
    {
        "line": 60,
        "fullcodeline": "server.utils.run_plugin_processing(machine, submission)"
    },
    {
        "line": 72,
        "fullcodeline": "return HttpResponse(msg)"
    },
    {
        "line": 8,
        "fullcodeline": "submission = json.loads(request.body.decode())"
    },
    {
        "line": 11,
        "fullcodeline": "if not isinstance(submission, dict) or \"Machine\" not in submission:"
    },
    {
        "line": 16,
        "fullcodeline": "serial = submission[\"Machine\"][\"extra_data\"].get(\"serial\")"
    },
    {
        "line": 62,
        "fullcodeline": "if server.utils.get_setting(\"send_data\") in (None, True):"
    },
    {
        "line": 3,
        "fullcodeline": "return HttpResponseBadRequest("
    },
    {
        "line": 12,
        "fullcodeline": "return HttpResponseBadRequest('Checkin JSON is missing required key \"Machine\"!')"
    },
    {
        "line": 22,
        "fullcodeline": "return HttpResponseBadRequest("
    },
    {
        "line": 28,
        "fullcodeline": "MachineGroup, key=submission[\"Sal\"][\"extra_data\"].get(\"key\")"
    },
    {
        "line": 51,
        "fullcodeline": "object_queue = process_management_submission("
    },
    {
        "line": 47,
        "fullcodeline": "management_source, _ = ManagementSource.objects.get_or_create("
    },
    {
        "line": 10,
        "fullcodeline": "return HttpResponseBadRequest(\"Checkin has invalid JSON!\")"
    },
    {
        "line": 18,
        "fullcodeline": "return HttpResponseBadRequest("
    },
    {
        "line": 66,
        "fullcodeline": "server.utils.send_report()"
    },
    {
        "line": 68,
        "fullcodeline": "logger.debug(e)"
    }
]