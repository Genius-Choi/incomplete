[
    {
        "line": 5,
        "fullcodeline": "char sdpLine[20000];"
    },
    {
        "line": 6,
        "fullcodeline": "char mediaName[30], payloadName[30];"
    },
    {
        "line": 9,
        "fullcodeline": "Width = Height = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "gf_isom_sdp_clean_track(tkHint->file, tkHint->TrackNum);"
    },
    {
        "line": 11,
        "fullcodeline": "mtype = gf_isom_get_media_type(tkHint->file, tkHint->TrackNum);"
    },
    {
        "line": 15,
        "fullcodeline": "gf_rtp_builder_get_payload_name(tkHint->rtp_p, payloadName, mediaName);"
    },
    {
        "line": 18,
        "fullcodeline": "sprintf(sdpLine, \"m=%s 0 RTP/%s %d\", mediaName, tkHint->rtp_p->slMap.IV_length ? \"SAVP\" : \"AVP\", tkHint->rtp_p->PayloadType);"
    },
    {
        "line": 19,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 29,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 36,
        "fullcodeline": "sprintf(sdpLine, \"a=control:trackID=%d\", gf_isom_get_track_id(tkHint->file, tkHint->HintTrack));"
    },
    {
        "line": 37,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 211,
        "fullcodeline": "esd = gf_isom_get_esd(tkHint->file, tkHint->TrackNum, 1);"
    },
    {
        "line": 227,
        "fullcodeline": "gf_isom_set_track_enabled(tkHint->file, tkHint->HintTrack, GF_TRUE);"
    },
    {
        "line": 12,
        "fullcodeline": "if (gf_isom_is_video_handler_type(mtype))"
    },
    {
        "line": 40,
        "fullcodeline": "if (tkHint->rtp_p->rtp_payt == GF_RTP_PAYT_H263) {"
    },
    {
        "line": 206,
        "fullcodeline": "if (Width && Height) {"
    },
    {
        "line": 13,
        "fullcodeline": "gf_isom_get_visual_info(tkHint->file, tkHint->TrackNum, 1, &Width, &Height);"
    },
    {
        "line": 21,
        "fullcodeline": "sprintf(sdpLine, \"b=AS:%d\", tkHint->bandwidth);"
    },
    {
        "line": 22,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 25,
        "fullcodeline": "sprintf(sdpLine, \"a=rtpmap:%d %s/%d/%d\", tkHint->rtp_p->PayloadType, payloadName, tkHint->rtp_p->sl_config.timestampResolution, tkHint->nb_chan);"
    },
    {
        "line": 32,
        "fullcodeline": "sprintf(sdpLine, \"a=mpeg4-esid:%d\", gf_isom_get_track_id(tkHint->file, tkHint->TrackNum));"
    },
    {
        "line": 33,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 41,
        "fullcodeline": "sprintf(sdpLine, \"a=cliprect:0,0,%d,%d\", Height, Width);"
    },
    {
        "line": 42,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 207,
        "fullcodeline": "sprintf(sdpLine, \"a=framesize:%d %d-%d\", tkHint->rtp_p->PayloadType, Width, Height);"
    },
    {
        "line": 208,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 212,
        "fullcodeline": "if (esd && esd->decoderConfig && (esd->decoderConfig->rvc_config || esd->decoderConfig->predefined_rvc_config)) {"
    },
    {
        "line": 223,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 27,
        "fullcodeline": "sprintf(sdpLine, \"a=rtpmap:%d %s/%d\", tkHint->rtp_p->PayloadType, payloadName, tkHint->rtp_p->sl_config.timestampResolution);"
    },
    {
        "line": 45,
        "fullcodeline": "else if ((tkHint->rtp_p->rtp_payt == GF_RTP_PAYT_AMR) || (tkHint->rtp_p->rtp_payt == GF_RTP_PAYT_AMR_WB)) {"
    },
    {
        "line": 214,
        "fullcodeline": "sprintf(sdpLine, \"a=rvc-config-predef:%d\", esd->decoderConfig->predefined_rvc_config);"
    },
    {
        "line": 46,
        "fullcodeline": "sprintf(sdpLine, \"a=fmtp:%d octet-align=1\", tkHint->rtp_p->PayloadType);"
    },
    {
        "line": 47,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 50,
        "fullcodeline": "else if (tkHint->rtp_p->rtp_payt == GF_RTP_PAYT_3GPP_TEXT) {"
    },
    {
        "line": 217,
        "fullcodeline": "if ((esd->decoderConfig->objectTypeIndication==GF_CODECID_AVC) || (esd->decoderConfig->objectTypeIndication==GF_CODECID_SVC)) {"
    },
    {
        "line": 218,
        "fullcodeline": "sprintf(sdpLine, \"a=rvc-config:%s\", \"http://download.tsi.telecom-paristech.fr/gpac/RVC/rvc_config_avc.xml\");"
    },
    {
        "line": 55,
        "fullcodeline": "gf_isom_get_track_layout_info(tkHint->file, tkHint->TrackNum, &w, &h, &tx, &ty, &l);"
    },
    {
        "line": 56,
        "fullcodeline": "m_w = w;"
    },
    {
        "line": 57,
        "fullcodeline": "m_h = h;"
    },
    {
        "line": 73,
        "fullcodeline": "gf_media_format_ttxt_sdp(tkHint->rtp_p, payloadName, sdpLine, w, h, tx, ty, l, m_w, m_h, NULL);"
    },
    {
        "line": 75,
        "fullcodeline": "strcat(sdpLine, \"; tx3g=\");"
    },
    {
        "line": 87,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 220,
        "fullcodeline": "sprintf(sdpLine, \"a=rvc-config:%s\", \"http://download.tsi.telecom-paristech.fr/gpac/RVC/rvc_config_sp.xml\");"
    },
    {
        "line": 58,
        "fullcodeline": "for (i=0; i<gf_isom_get_track_count(tkHint->file); i++) {"
    },
    {
        "line": 76,
        "fullcodeline": "for (i=0; i<gf_isom_get_sample_description_count(tkHint->file, tkHint->TrackNum); i++) {"
    },
    {
        "line": 78,
        "fullcodeline": "char buffer[2000];"
    },
    {
        "line": 80,
        "fullcodeline": "gf_isom_text_get_encoded_tx3g(tkHint->file, tkHint->TrackNum, i+1, GF_RTP_TX3G_SIDX_OFFSET, &tx3g, &tx3g_len);"
    },
    {
        "line": 82,
        "fullcodeline": "gf_free(tx3g);"
    },
    {
        "line": 83,
        "fullcodeline": "buffer[len] = 0;"
    },
    {
        "line": 85,
        "fullcodeline": "strcat(sdpLine, buffer);"
    },
    {
        "line": 90,
        "fullcodeline": "else if ((tkHint->rtp_p->rtp_payt == GF_RTP_PAYT_EVRC_SMV) && (tkHint->rtp_p->auh_size>1)) {"
    },
    {
        "line": 59,
        "fullcodeline": "switch (gf_isom_get_media_type(tkHint->file, i+1)) {"
    },
    {
        "line": 81,
        "fullcodeline": "len = gf_base64_encode(tx3g, tx3g_len, buffer, 2000);"
    },
    {
        "line": 91,
        "fullcodeline": "sprintf(sdpLine, \"a=fmtp:%d maxptime=%d\", tkHint->rtp_p->PayloadType, tkHint->rtp_p->auh_size*20);"
    },
    {
        "line": 92,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 64,
        "fullcodeline": "gf_isom_get_track_layout_info(tkHint->file, i+1, &w, &h, &tx, &ty, &l);"
    },
    {
        "line": 84,
        "fullcodeline": "if (i) strcat(sdpLine, \", \");"
    },
    {
        "line": 65,
        "fullcodeline": "if (w>m_w) m_w = w;"
    },
    {
        "line": 66,
        "fullcodeline": "if (h>m_h) m_h = h;"
    },
    {
        "line": 95,
        "fullcodeline": "else if ((tkHint->rtp_p->rtp_payt == GF_RTP_PAYT_H264_AVC) || (tkHint->rtp_p->rtp_payt == GF_RTP_PAYT_H264_SVC))  {"
    },
    {
        "line": 96,
        "fullcodeline": "GF_AVCConfig *avcc = gf_isom_avc_config_get(tkHint->file, tkHint->TrackNum, 1);"
    },
    {
        "line": 97,
        "fullcodeline": "GF_AVCConfig *svcc = gf_isom_svc_config_get(tkHint->file, tkHint->TrackNum, 1);"
    },
    {
        "line": 108,
        "fullcodeline": "write_avc_config(sdpLine, avcc, svcc);"
    },
    {
        "line": 110,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 101,
        "fullcodeline": "sprintf(sdpLine, \"a=fmtp:%d profile-level-id=%02X%02X%02X; packetization-mode=1\", tkHint->rtp_p->PayloadType, avcc->AVCProfileIndication, avcc->profile_compatibility, avcc->AVCLevelIndication);"
    },
    {
        "line": 115,
        "fullcodeline": "else if (tkHint->rtp_p->rtp_payt==GF_RTP_PAYT_MPEG4) {"
    },
    {
        "line": 105,
        "fullcodeline": "sprintf(sdpLine, \"a=fmtp:%d profile-level-id=%02X%02X%02X; packetization-mode=1\", tkHint->rtp_p->PayloadType, svcc->AVCProfileIndication, svcc->profile_compatibility, svcc->AVCLevelIndication);"
    },
    {
        "line": 116,
        "fullcodeline": "esd = gf_isom_get_esd(tkHint->file, tkHint->TrackNum, 1);"
    },
    {
        "line": 136,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 103,
        "fullcodeline": "if (!svcc)"
    },
    {
        "line": 118,
        "fullcodeline": "if (esd && esd->decoderConfig && esd->decoderConfig->decoderSpecificInfo && esd->decoderConfig->decoderSpecificInfo->data) {"
    },
    {
        "line": 119,
        "fullcodeline": "gf_rtp_builder_format_sdp(tkHint->rtp_p, payloadName, sdpLine, esd->decoderConfig->decoderSpecificInfo->data, esd->decoderConfig->decoderSpecificInfo->dataLength);"
    },
    {
        "line": 127,
        "fullcodeline": "gf_isom_get_ismacryp_info(tkHint->file, tkHint->TrackNum, 1, NULL, NULL, NULL, NULL, &kms, NULL, NULL, NULL);"
    },
    {
        "line": 133,
        "fullcodeline": "strcat(sdpLine, kms);"
    },
    {
        "line": 139,
        "fullcodeline": "else if (tkHint->rtp_p->rtp_payt==GF_RTP_PAYT_LATM) {"
    },
    {
        "line": 121,
        "fullcodeline": "gf_rtp_builder_format_sdp(tkHint->rtp_p, payloadName, sdpLine, NULL, 0);"
    },
    {
        "line": 145,
        "fullcodeline": "bs = gf_bs_new(NULL, 32, GF_BITSTREAM_WRITE);"
    },
    {
        "line": 146,
        "fullcodeline": "gf_bs_write_int(bs, 0, 1); /* AudioMuxVersion */"
    },
    {
        "line": 147,
        "fullcodeline": "gf_bs_write_int(bs, 1, 1); /* all streams same time */"
    },
    {
        "line": 148,
        "fullcodeline": "gf_bs_write_int(bs, 0, 6); /* numSubFrames */"
    },
    {
        "line": 149,
        "fullcodeline": "gf_bs_write_int(bs, 0, 4); /* numPrograms */"
    },
    {
        "line": 150,
        "fullcodeline": "gf_bs_write_int(bs, 0, 3); /* numLayer */"
    },
    {
        "line": 153,
        "fullcodeline": "esd = gf_isom_get_esd(tkHint->file, tkHint->TrackNum, 1);"
    },
    {
        "line": 161,
        "fullcodeline": "gf_bs_write_int(bs, 0, 3); /* frameLengthType */"
    },
    {
        "line": 162,
        "fullcodeline": "gf_bs_write_int(bs, 0xff, 8); /* latmBufferFullness */"
    },
    {
        "line": 163,
        "fullcodeline": "gf_bs_write_int(bs, 0, 1); /* otherDataPresent */"
    },
    {
        "line": 164,
        "fullcodeline": "gf_bs_write_int(bs, 0, 1); /* crcCheckPresent */"
    },
    {
        "line": 165,
        "fullcodeline": "gf_bs_get_content(bs, &config_bytes, &config_size);"
    },
    {
        "line": 168,
        "fullcodeline": "gf_rtp_builder_format_sdp(tkHint->rtp_p, payloadName, sdpLine, config_bytes, config_size);"
    },
    {
        "line": 169,
        "fullcodeline": "gf_isom_sdp_add_track_line(tkHint->file, tkHint->HintTrack, sdpLine);"
    },
    {
        "line": 128,
        "fullcodeline": "if (!strnicmp(kms, \"(key)\", 5) || !strnicmp(kms, \"(ipmp)\", 6) || !strnicmp(kms, \"(uri)\", 5)) {"
    },
    {
        "line": 129,
        "fullcodeline": "strcat(sdpLine, \"; ISMACrypKey=\");"
    },
    {
        "line": 154,
        "fullcodeline": "if (esd && esd->decoderConfig && esd->decoderConfig->decoderSpecificInfo) {"
    },
    {
        "line": 131,
        "fullcodeline": "strcat(sdpLine, \"; ISMACrypKey=(uri)\");"
    },
    {
        "line": 156,
        "fullcodeline": "gf_bs_write_data(bs, esd->decoderConfig->decoderSpecificInfo->data, MIN(esd->decoderConfig->decoderSpecificInfo->dataLength, 2) );"
    }
]