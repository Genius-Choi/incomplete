[
    {
        "line": 6,
        "fullcodeline": "conduit.info(3, 'Updating Subscription Management repositories.')"
    },
    {
        "line": 9,
        "fullcodeline": "from subscription_manager.identity import ConsumerIdentity"
    },
    {
        "line": 11,
        "fullcodeline": "cert_file = ConsumerIdentity.certpath()"
    },
    {
        "line": 12,
        "fullcodeline": "key_file = ConsumerIdentity.keypath()"
    },
    {
        "line": 14,
        "fullcodeline": "identity = inj.require(inj.IDENTITY)"
    },
    {
        "line": 32,
        "fullcodeline": "rl = RepoActionInvoker(cache_only=cache_only, locker=YumRepoLocker(conduit=conduit))"
    },
    {
        "line": 33,
        "fullcodeline": "rl.update()"
    },
    {
        "line": 3,
        "fullcodeline": "if os.getuid() != 0:"
    },
    {
        "line": 18,
        "fullcodeline": "if identity.is_valid():"
    },
    {
        "line": 29,
        "fullcodeline": "if config.in_container():"
    },
    {
        "line": 4,
        "fullcodeline": "conduit.info(3, 'Not root, Subscription Management repositories not updated')"
    },
    {
        "line": 27,
        "fullcodeline": "conduit.info(3, \"Unable to read consumer identity\")"
    },
    {
        "line": 30,
        "fullcodeline": "conduit.info(3, \"Subscription Manager is operating in container mode.\")"
    },
    {
        "line": 20,
        "fullcodeline": "connection.UEPConnection(cert_file=cert_file, key_file=key_file)"
    },
    {
        "line": 24,
        "fullcodeline": "conduit.info(2, \"Unable to connect to Subscription Management Service\")"
    }
]