[
    {
        "line": 9,
        "fullcodeline": "struct ntreg_hbin_block *block ="
    },
    {
        "line": 12,
        "fullcodeline": "size_t len = block_len (h, blkoff, NULL);"
    },
    {
        "line": 6,
        "fullcodeline": "if (_hivex_add_to_offset_list (blocks, blkoff) == -1)"
    },
    {
        "line": 17,
        "fullcodeline": "if (block->id[0] == 'l' && (block->id[1] == 'f' || block->id[1] == 'h')) {"
    },
    {
        "line": 18,
        "fullcodeline": "struct ntreg_lf_record *lf = (struct ntreg_lf_record *) block;"
    },
    {
        "line": 23,
        "fullcodeline": "size_t nr_subkeys_in_lf = le16toh (lf->nr_keys);"
    },
    {
        "line": 7,
        "fullcodeline": "return -1;"
    },
    {
        "line": 25,
        "fullcodeline": "if (8 + nr_subkeys_in_lf * 8 > len) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (i = 0; i < nr_subkeys_in_lf; ++i) {"
    },
    {
        "line": 32,
        "fullcodeline": "hive_node_h subkey = le32toh (lf->keys[i].offset);"
    },
    {
        "line": 33,
        "fullcodeline": "subkey += 0x1000;"
    },
    {
        "line": 47,
        "fullcodeline": "else if (block->id[0] == 'l' && block->id[1] == 'i') {"
    },
    {
        "line": 27,
        "fullcodeline": "return -1;"
    },
    {
        "line": 52,
        "fullcodeline": "struct ntreg_ri_record *ri = (struct ntreg_ri_record *) block;"
    },
    {
        "line": 57,
        "fullcodeline": "size_t nr_offsets = le16toh (ri->nr_offsets);"
    },
    {
        "line": 34,
        "fullcodeline": "if (check_child_is_nk_block (h, subkey, flags) == -1) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (_hivex_add_to_offset_list (children, subkey) == -1)"
    },
    {
        "line": 59,
        "fullcodeline": "if (8 + nr_offsets * 4 > len) {"
    },
    {
        "line": 65,
        "fullcodeline": "for (i = 0; i < nr_offsets; ++i) {"
    },
    {
        "line": 43,
        "fullcodeline": "return -1;"
    },
    {
        "line": 66,
        "fullcodeline": "hive_node_h subkey = le32toh (ri->offset[i]);"
    },
    {
        "line": 67,
        "fullcodeline": "subkey += 0x1000;"
    },
    {
        "line": 61,
        "fullcodeline": "return -1;"
    },
    {
        "line": 81,
        "fullcodeline": "else if (block->id[0] == 'r' && block->id[1] == 'i') {"
    },
    {
        "line": 82,
        "fullcodeline": "struct ntreg_ri_record *ri = (struct ntreg_ri_record *) block;"
    },
    {
        "line": 84,
        "fullcodeline": "size_t nr_offsets = le16toh (ri->nr_offsets);"
    },
    {
        "line": 68,
        "fullcodeline": "if (check_child_is_nk_block (h, subkey, flags) == -1) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (_hivex_add_to_offset_list (children, subkey) == -1)"
    },
    {
        "line": 86,
        "fullcodeline": "if (8 + nr_offsets * 4 > len) {"
    },
    {
        "line": 93,
        "fullcodeline": "for (i = 0; i < nr_offsets; ++i) {"
    },
    {
        "line": 111,
        "fullcodeline": "SET_ERRNO (ENOTSUP,"
    },
    {
        "line": 39,
        "fullcodeline": "return -1;"
    },
    {
        "line": 77,
        "fullcodeline": "return -1;"
    },
    {
        "line": 94,
        "fullcodeline": "hive_node_h offset = le32toh (ri->offset[i]);"
    },
    {
        "line": 95,
        "fullcodeline": "offset += 0x1000;"
    },
    {
        "line": 114,
        "fullcodeline": "return -1;"
    },
    {
        "line": 88,
        "fullcodeline": "return -1;"
    },
    {
        "line": 96,
        "fullcodeline": "if (!IS_VALID_BLOCK (h, offset)) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (_get_children (h, offset, children, blocks, flags) == -1)"
    },
    {
        "line": 73,
        "fullcodeline": "return -1;"
    },
    {
        "line": 107,
        "fullcodeline": "return -1;"
    },
    {
        "line": 102,
        "fullcodeline": "return -1;"
    }
]