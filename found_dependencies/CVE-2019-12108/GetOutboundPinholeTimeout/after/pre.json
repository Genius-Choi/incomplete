[
    {
        "line": 5,
        "fullcodeline": "static const char resp[] ="
    },
    {
        "line": 11,
        "fullcodeline": "char body[512];"
    },
    {
        "line": 15,
        "fullcodeline": "int opt=0;"
    },
    {
        "line": 25,
        "fullcodeline": "ParseNameValue(h->req_buf + h->req_contentoff, h->req_contentlen, &data);"
    },
    {
        "line": 26,
        "fullcodeline": "int_ip = GetValueFromNameValueList(&data, \"InternalClient\");"
    },
    {
        "line": 27,
        "fullcodeline": "int_port = GetValueFromNameValueList(&data, \"InternalPort\");"
    },
    {
        "line": 28,
        "fullcodeline": "rem_host = GetValueFromNameValueList(&data, \"RemoteHost\");"
    },
    {
        "line": 29,
        "fullcodeline": "rem_port = GetValueFromNameValueList(&data, \"RemotePort\");"
    },
    {
        "line": 30,
        "fullcodeline": "protocol = GetValueFromNameValueList(&data, \"Protocol\");"
    },
    {
        "line": 39,
        "fullcodeline": "rport = (unsigned short)atoi(rem_port);"
    },
    {
        "line": 40,
        "fullcodeline": "iport = (unsigned short)atoi(int_port);"
    },
    {
        "line": 43,
        "fullcodeline": "syslog(LOG_INFO, \"%s: retrieving timeout for outbound pinhole from [%s]:%hu to [%s]:%hu protocol %s\", action, int_ip, iport,rem_host, rport, protocol);"
    },
    {
        "line": 19,
        "fullcodeline": "if (GETFLAG(IPV6FCFWDISABLEDMASK))"
    },
    {
        "line": 46,
        "fullcodeline": "r = -1;/*upnp_check_outbound_pinhole(proto, &opt);*/"
    },
    {
        "line": 21,
        "fullcodeline": "SoapError(h, 702, \"FirewallDisabled\");"
    },
    {
        "line": 32,
        "fullcodeline": "if (!int_port || !rem_port || !protocol)"
    },
    {
        "line": 51,
        "fullcodeline": "bodylen = snprintf(body, sizeof(body), resp,"
    }
]