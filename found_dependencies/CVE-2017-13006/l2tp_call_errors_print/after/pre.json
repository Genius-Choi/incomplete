[
    {
        "line": 3,
        "fullcodeline": "const uint16_t *ptr = (const uint16_t *)dat;"
    },
    {
        "line": 10,
        "fullcodeline": "ptr++;\t\t/* skip \"Reserved\" */"
    },
    {
        "line": 11,
        "fullcodeline": "length -= 2;"
    },
    {
        "line": 17,
        "fullcodeline": "val_h = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 18,
        "fullcodeline": "val_l = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 25,
        "fullcodeline": "val_h = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 26,
        "fullcodeline": "val_l = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 33,
        "fullcodeline": "val_h = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 34,
        "fullcodeline": "val_l = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 41,
        "fullcodeline": "val_h = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 42,
        "fullcodeline": "val_l = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 49,
        "fullcodeline": "val_h = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 50,
        "fullcodeline": "val_l = EXTRACT_16BITS(ptr); ptr++; length -= 2;"
    },
    {
        "line": 57,
        "fullcodeline": "val_h = EXTRACT_16BITS(ptr); ptr++;"
    },
    {
        "line": 58,
        "fullcodeline": "val_l = EXTRACT_16BITS(ptr); ptr++;"
    },
    {
        "line": 6,
        "fullcodeline": "if (length < 2) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (length < 4) {"
    },
    {
        "line": 19,
        "fullcodeline": "ND_PRINT((ndo, \"CRCErr=%u \", (val_h<<16) + val_l));"
    },
    {
        "line": 21,
        "fullcodeline": "if (length < 4) {"
    },
    {
        "line": 27,
        "fullcodeline": "ND_PRINT((ndo, \"FrameErr=%u \", (val_h<<16) + val_l));"
    },
    {
        "line": 29,
        "fullcodeline": "if (length < 4) {"
    },
    {
        "line": 35,
        "fullcodeline": "ND_PRINT((ndo, \"HardOver=%u \", (val_h<<16) + val_l));"
    },
    {
        "line": 37,
        "fullcodeline": "if (length < 4) {"
    },
    {
        "line": 43,
        "fullcodeline": "ND_PRINT((ndo, \"BufOver=%u \", (val_h<<16) + val_l));"
    },
    {
        "line": 45,
        "fullcodeline": "if (length < 4) {"
    },
    {
        "line": 51,
        "fullcodeline": "ND_PRINT((ndo, \"Timeout=%u \", (val_h<<16) + val_l));"
    },
    {
        "line": 59,
        "fullcodeline": "ND_PRINT((ndo, \"AlignErr=%u \", (val_h<<16) + val_l));"
    },
    {
        "line": 7,
        "fullcodeline": "ND_PRINT((ndo, \"AVP too short\"));"
    },
    {
        "line": 14,
        "fullcodeline": "ND_PRINT((ndo, \"AVP too short\"));"
    },
    {
        "line": 22,
        "fullcodeline": "ND_PRINT((ndo, \"AVP too short\"));"
    },
    {
        "line": 30,
        "fullcodeline": "ND_PRINT((ndo, \"AVP too short\"));"
    },
    {
        "line": 38,
        "fullcodeline": "ND_PRINT((ndo, \"AVP too short\"));"
    },
    {
        "line": 46,
        "fullcodeline": "ND_PRINT((ndo, \"AVP too short\"));"
    },
    {
        "line": 54,
        "fullcodeline": "ND_PRINT((ndo, \"AVP too short\"));"
    }
]