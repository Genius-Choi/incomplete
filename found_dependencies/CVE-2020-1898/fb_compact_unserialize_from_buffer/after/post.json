[
    {
        "line": 7,
        "fullcodeline": "CHECK_ENOUGH(1, p, n);"
    },
    {
        "line": 8,
        "fullcodeline": "int code = (unsigned char)buf[p];"
    },
    {
        "line": 22,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 23,
        "fullcodeline": "code &= kCodeMask;"
    },
    {
        "line": 3,
        "fullcodeline": "if (UNLIKELY(depth > 1024)) {"
    },
    {
        "line": 9,
        "fullcodeline": "if ((code & ~kCodeMask) != kCodePrefix ||"
    },
    {
        "line": 12,
        "fullcodeline": "(code & kCodeMask) == FB_CS_INT64) {"
    },
    {
        "line": 15,
        "fullcodeline": "int err = fb_compact_unserialize_int64_from_buffer(val, buf, n, p);"
    },
    {
        "line": 19,
        "fullcodeline": "out = (int64_t)val;"
    },
    {
        "line": 26,
        "fullcodeline": "out = uninit_null();"
    },
    {
        "line": 30,
        "fullcodeline": "out = true;"
    },
    {
        "line": 34,
        "fullcodeline": "out = false;"
    },
    {
        "line": 11,
        "fullcodeline": "(code & kCodeMask) == FB_CS_INT32 ||"
    },
    {
        "line": 39,
        "fullcodeline": "CHECK_ENOUGH(8, p, n);"
    },
    {
        "line": 41,
        "fullcodeline": "p += 8;"
    },
    {
        "line": 42,
        "fullcodeline": "out = d;"
    },
    {
        "line": 48,
        "fullcodeline": "out = s_empty;"
    },
    {
        "line": 55,
        "fullcodeline": "int64_t len = 1;"
    },
    {
        "line": 63,
        "fullcodeline": "CHECK_ENOUGH(len, p, n);"
    },
    {
        "line": 64,
        "fullcodeline": "out = Variant::attach(StringData::Make(buf + p, len, CopyString));"
    },
    {
        "line": 65,
        "fullcodeline": "p += len;"
    },
    {
        "line": 71,
        "fullcodeline": "Array arr = Array::CreateVArray();"
    },
    {
        "line": 83,
        "fullcodeline": "CHECK_ENOUGH(1, p, n);"
    },
    {
        "line": 84,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 86,
        "fullcodeline": "out = arr;"
    },
    {
        "line": 92,
        "fullcodeline": "Array arr = Array::CreateDArray();"
    },
    {
        "line": 93,
        "fullcodeline": "int64_t i = 0;"
    },
    {
        "line": 110,
        "fullcodeline": "CHECK_ENOUGH(1, p, n);"
    },
    {
        "line": 111,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 113,
        "fullcodeline": "out = arr;"
    },
    {
        "line": 119,
        "fullcodeline": "Array arr = Array::CreateDArray();"
    },
    {
        "line": 143,
        "fullcodeline": "CHECK_ENOUGH(1, p, n);"
    },
    {
        "line": 144,
        "fullcodeline": "p += 1;"
    },
    {
        "line": 146,
        "fullcodeline": "out = arr;"
    },
    {
        "line": 10,
        "fullcodeline": "(code & kCodeMask) == FB_CS_INT16 ||"
    },
    {
        "line": 56,
        "fullcodeline": "if (code == FB_CS_STRING_N) {"
    },
    {
        "line": 72,
        "fullcodeline": "while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {"
    },
    {
        "line": 94,
        "fullcodeline": "while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {"
    },
    {
        "line": 120,
        "fullcodeline": "while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {"
    },
    {
        "line": 40,
        "fullcodeline": "double d = *reinterpret_cast<const double*>(buf + p);"
    },
    {
        "line": 57,
        "fullcodeline": "int err = fb_compact_unserialize_int64_from_buffer(len, buf, n, p);"
    },
    {
        "line": 74,
        "fullcodeline": "int err ="
    },
    {
        "line": 79,
        "fullcodeline": "arr.append(value);"
    },
    {
        "line": 122,
        "fullcodeline": "int err = fb_compact_unserialize_from_buffer(key, buf, n, p, depth + 1);"
    },
    {
        "line": 127,
        "fullcodeline": "err = fb_compact_unserialize_from_buffer(value, buf, n, p, depth + 1);"
    },
    {
        "line": 75,
        "fullcodeline": "fb_compact_unserialize_from_buffer(value, buf, n, p, depth + 1);"
    },
    {
        "line": 95,
        "fullcodeline": "if (buf[p] == (char)(kCodePrefix | FB_CS_SKIP)) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (key.getType() == KindOfInt64) {"
    },
    {
        "line": 96,
        "fullcodeline": "++i;"
    },
    {
        "line": 97,
        "fullcodeline": "++p;"
    },
    {
        "line": 132,
        "fullcodeline": "arr.set(key.toInt64(), value);"
    },
    {
        "line": 100,
        "fullcodeline": "int err ="
    },
    {
        "line": 105,
        "fullcodeline": "arr.set(i++, value);"
    },
    {
        "line": 101,
        "fullcodeline": "fb_compact_unserialize_from_buffer(value, buf, n, p, depth + 1);"
    },
    {
        "line": 133,
        "fullcodeline": "} else if (key.getType() == KindOfString ||"
    },
    {
        "line": 134,
        "fullcodeline": "key.getType() == KindOfPersistentString) {"
    },
    {
        "line": 135,
        "fullcodeline": "mapSetAndConvertStaticKeys("
    },
    {
        "line": 136,
        "fullcodeline": "arr, key.asStrRef().get(), std::move(value));"
    }
]