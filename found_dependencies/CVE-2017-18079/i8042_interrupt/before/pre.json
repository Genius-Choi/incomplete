[
    {
        "line": 10,
        "fullcodeline": "int ret = 1;"
    },
    {
        "line": 12,
        "fullcodeline": "spin_lock_irqsave(&i8042_lock, flags);"
    },
    {
        "line": 14,
        "fullcodeline": "str = i8042_read_status();"
    },
    {
        "line": 23,
        "fullcodeline": "data = i8042_read_data();"
    },
    {
        "line": 72,
        "fullcodeline": "port = &i8042_ports[port_no];"
    },
    {
        "line": 73,
        "fullcodeline": "serio = port->exists ? port->serio : NULL;"
    },
    {
        "line": 75,
        "fullcodeline": "filter_dbg(port->driver_bound, data, \"<- i8042 (interrupt, %d, %d%s%s)\\n\","
    },
    {
        "line": 80,
        "fullcodeline": "filtered = i8042_filter(data, str, serio);"
    },
    {
        "line": 82,
        "fullcodeline": "spin_unlock_irqrestore(&i8042_lock, flags);"
    },
    {
        "line": 15,
        "fullcodeline": "if (unlikely(~str & I8042_STR_OBF)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (i8042_mux_present && (str & I8042_STR_AUXDATA)) {"
    },
    {
        "line": 77,
        "fullcodeline": "dfl & SERIO_PARITY ? \", bad parity\" : \"\","
    },
    {
        "line": 78,
        "fullcodeline": "dfl & SERIO_TIMEOUT ? \", timeout\" : \"\");"
    },
    {
        "line": 84,
        "fullcodeline": "if (likely(port->exists && !filtered))"
    },
    {
        "line": 88,
        "fullcodeline": "return IRQ_RETVAL(ret);"
    },
    {
        "line": 16,
        "fullcodeline": "spin_unlock_irqrestore(&i8042_lock, flags);"
    },
    {
        "line": 19,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "dfl = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "port_no = I8042_MUX_PORT_NO + ((str >> 6) & 3);"
    },
    {
        "line": 61,
        "fullcodeline": "last_str = str;"
    },
    {
        "line": 62,
        "fullcodeline": "last_transmit = jiffies;"
    },
    {
        "line": 85,
        "fullcodeline": "serio_interrupt(serio, data, dfl);"
    },
    {
        "line": 30,
        "fullcodeline": "if (str & I8042_STR_MUXERR) {"
    },
    {
        "line": 65,
        "fullcodeline": "dfl = ((str & I8042_STR_PARITY) ? SERIO_PARITY : 0) |"
    },
    {
        "line": 68,
        "fullcodeline": "port_no = (str & I8042_STR_AUXDATA) ?"
    },
    {
        "line": 18,
        "fullcodeline": "dbg(\"Interrupt %d, without any data\\n\", irq);"
    },
    {
        "line": 31,
        "fullcodeline": "dbg(\"MUX error, status is %02x, data is %02x\\n\","
    },
    {
        "line": 66,
        "fullcodeline": "((str & I8042_STR_TIMEOUT && !i8042_notimeout) ? SERIO_TIMEOUT : 0);"
    },
    {
        "line": 55,
        "fullcodeline": "case 0xfe: dfl = SERIO_TIMEOUT; data = 0xfe; break;"
    },
    {
        "line": 56,
        "fullcodeline": "case 0xff: dfl = SERIO_PARITY;  data = 0xfe; break;"
    },
    {
        "line": 48,
        "fullcodeline": "if (time_before(jiffies, last_transmit + HZ/10)) {"
    },
    {
        "line": 49,
        "fullcodeline": "str = last_str;"
    }
]