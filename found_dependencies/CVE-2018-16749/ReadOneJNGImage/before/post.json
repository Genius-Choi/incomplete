[
    {
        "line": 60,
        "fullcodeline": "jng_alpha_compression_method=0;"
    },
    {
        "line": 61,
        "fullcodeline": "jng_alpha_sample_depth=8;"
    },
    {
        "line": 62,
        "fullcodeline": "jng_color_type=0;"
    },
    {
        "line": 63,
        "fullcodeline": "jng_height=0;"
    },
    {
        "line": 64,
        "fullcodeline": "jng_width=0;"
    },
    {
        "line": 65,
        "fullcodeline": "alpha_image=(Image *) NULL;"
    },
    {
        "line": 66,
        "fullcodeline": "color_image=(Image *) NULL;"
    },
    {
        "line": 67,
        "fullcodeline": "alpha_image_info=(ImageInfo *) NULL;"
    },
    {
        "line": 68,
        "fullcodeline": "color_image_info=(ImageInfo *) NULL;"
    },
    {
        "line": 69,
        "fullcodeline": "unique_filenames=0;"
    },
    {
        "line": 71,
        "fullcodeline": "logging=LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 74,
        "fullcodeline": "image=mng_info->image;"
    },
    {
        "line": 92,
        "fullcodeline": "mng_info->image=image;"
    },
    {
        "line": 98,
        "fullcodeline": "read_JSEP=MagickFalse;"
    },
    {
        "line": 99,
        "fullcodeline": "reading_idat=MagickFalse;"
    },
    {
        "line": 588,
        "fullcodeline": "(void) SeekBlob(color_image,0,SEEK_SET);"
    },
    {
        "line": 594,
        "fullcodeline": "assert(color_image_info != (ImageInfo *) NULL);"
    },
    {
        "line": 595,
        "fullcodeline": "(void) FormatLocaleString(color_image_info->filename,MaxTextExtent,\"%s\","
    },
    {
        "line": 598,
        "fullcodeline": "color_image_info->ping=MagickFalse;   /* To do: avoid this */"
    },
    {
        "line": 599,
        "fullcodeline": "jng_image=ReadImage(color_image_info,exception);"
    },
    {
        "line": 601,
        "fullcodeline": "(void) RelinquishUniqueFileResource(color_image->filename);"
    },
    {
        "line": 602,
        "fullcodeline": "unique_filenames--;"
    },
    {
        "line": 603,
        "fullcodeline": "color_image=DestroyImage(color_image);"
    },
    {
        "line": 604,
        "fullcodeline": "color_image_info=DestroyImageInfo(color_image_info);"
    },
    {
        "line": 616,
        "fullcodeline": "image->columns=jng_width;"
    },
    {
        "line": 617,
        "fullcodeline": "image->rows=jng_height;"
    },
    {
        "line": 618,
        "fullcodeline": "length=image->columns*sizeof(PixelPacket);"
    },
    {
        "line": 620,
        "fullcodeline": "status=SetImageExtent(image,image->columns,image->rows);"
    },
    {
        "line": 651,
        "fullcodeline": "jng_image=DestroyImage(jng_image);"
    },
    {
        "line": 733,
        "fullcodeline": "mng_info->image_found++;"
    },
    {
        "line": 734,
        "fullcodeline": "status=SetImageProgress(image,LoadImagesTag,2*TellBlob(image),"
    },
    {
        "line": 76,
        "fullcodeline": "if (GetAuthenticPixelQueue(image) != (PixelPacket *) NULL)"
    },
    {
        "line": 575,
        "fullcodeline": "if (color_image_info == (ImageInfo *) NULL)"
    },
    {
        "line": 582,
        "fullcodeline": "if (color_image == (Image *) NULL)"
    },
    {
        "line": 590,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 606,
        "fullcodeline": "if (jng_image == (Image *) NULL)"
    },
    {
        "line": 613,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 621,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 629,
        "fullcodeline": "if ((image->columns != jng_image->columns) ||"
    },
    {
        "line": 639,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 653,
        "fullcodeline": "if ((image_info->ping == MagickFalse) && (jng_color_type >= 12))"
    },
    {
        "line": 710,
        "fullcodeline": "if (mng_info->mng_type == 0)"
    },
    {
        "line": 716,
        "fullcodeline": "if (image->page.width == 0 && image->page.height == 0)"
    },
    {
        "line": 722,
        "fullcodeline": "if (image->page.x == 0 && image->page.y == 0)"
    },
    {
        "line": 737,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 740,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 85,
        "fullcodeline": "AcquireNextImage(image_info,image);"
    },
    {
        "line": 90,
        "fullcodeline": "image=SyncNextImageInList(image);"
    },
    {
        "line": 103,
        "fullcodeline": "type[MaxTextExtent];"
    },
    {
        "line": 114,
        "fullcodeline": "status=SetImageProgress(image,LoadImagesTag,TellBlob(image),"
    },
    {
        "line": 120,
        "fullcodeline": "type[0]='\\0';"
    },
    {
        "line": 121,
        "fullcodeline": "(void) ConcatenateMagickString(type,\"errr\",MaxTextExtent);"
    },
    {
        "line": 122,
        "fullcodeline": "length=(size_t) ReadBlobMSBLong(image);"
    },
    {
        "line": 123,
        "fullcodeline": "count=(unsigned int) ReadBlob(image,4,(unsigned char *) type);"
    },
    {
        "line": 137,
        "fullcodeline": "p=NULL;"
    },
    {
        "line": 138,
        "fullcodeline": "chunk=(unsigned char *) NULL;"
    },
    {
        "line": 170,
        "fullcodeline": "(void) ReadBlobMSBLong(image);  /* read crc word */"
    },
    {
        "line": 543,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 577,
        "fullcodeline": "assert(color_image == (Image *) NULL);"
    },
    {
        "line": 578,
        "fullcodeline": "assert(alpha_image == (Image *) NULL);"
    },
    {
        "line": 584,
        "fullcodeline": "assert(alpha_image == (Image *) NULL);"
    },
    {
        "line": 591,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 608,
        "fullcodeline": "DestroyJNG(NULL,NULL,NULL,&alpha_image,&alpha_image_info);"
    },
    {
        "line": 614,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 623,
        "fullcodeline": "jng_image=DestroyImageList(jng_image);"
    },
    {
        "line": 624,
        "fullcodeline": "DestroyJNG(NULL,&color_image,&color_image_info,&alpha_image,"
    },
    {
        "line": 626,
        "fullcodeline": "InheritException(exception,&image->exception);"
    },
    {
        "line": 630,
        "fullcodeline": "(image->rows != jng_image->rows))"
    },
    {
        "line": 632,
        "fullcodeline": "jng_image=DestroyImageList(jng_image);"
    },
    {
        "line": 633,
        "fullcodeline": "DestroyJNG(NULL,&color_image,&color_image_info,&alpha_image,"
    },
    {
        "line": 635,
        "fullcodeline": "InheritException(exception,&image->exception);"
    },
    {
        "line": 641,
        "fullcodeline": "s=GetVirtualPixels(jng_image,0,y,image->columns,1,&image->exception);"
    },
    {
        "line": 642,
        "fullcodeline": "q=GetAuthenticPixels(image,0,y,image->columns,1,exception);"
    },
    {
        "line": 645,
        "fullcodeline": "(void) memcpy(q,s,length);"
    },
    {
        "line": 666,
        "fullcodeline": "(void) SeekBlob(alpha_image,0,SEEK_SET);"
    },
    {
        "line": 672,
        "fullcodeline": "(void) FormatLocaleString(alpha_image_info->filename,MaxTextExtent,"
    },
    {
        "line": 675,
        "fullcodeline": "jng_image=ReadImage(alpha_image_info,exception);"
    },
    {
        "line": 700,
        "fullcodeline": "(void) RelinquishUniqueFileResource(alpha_image->filename);"
    },
    {
        "line": 701,
        "fullcodeline": "unique_filenames--;"
    },
    {
        "line": 702,
        "fullcodeline": "alpha_image=DestroyImage(alpha_image);"
    },
    {
        "line": 703,
        "fullcodeline": "alpha_image_info=DestroyImageInfo(alpha_image_info);"
    },
    {
        "line": 712,
        "fullcodeline": "mng_info->mng_width=jng_width;"
    },
    {
        "line": 713,
        "fullcodeline": "mng_info->mng_height=jng_height;"
    },
    {
        "line": 718,
        "fullcodeline": "image->page.width=jng_width;"
    },
    {
        "line": 719,
        "fullcodeline": "image->page.height=jng_height;"
    },
    {
        "line": 735,
        "fullcodeline": "2*GetBlobSize(image));"
    },
    {
        "line": 741,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 81,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 87,
        "fullcodeline": "if (GetNextImageInList(image) == (Image *) NULL)"
    },
    {
        "line": 117,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 125,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 130,
        "fullcodeline": "if (length > PNG_UINT_31_MAX || count == 0)"
    },
    {
        "line": 140,
        "fullcodeline": "if (length != 0)"
    },
    {
        "line": 172,
        "fullcodeline": "if (memcmp(type,mng_JHDR,4) == 0)"
    },
    {
        "line": 242,
        "fullcodeline": "if ((reading_idat == MagickFalse) && (read_JSEP == MagickFalse) &&"
    },
    {
        "line": 357,
        "fullcodeline": "if (memcmp(type,mng_JDAT,4) == 0)"
    },
    {
        "line": 374,
        "fullcodeline": "if (memcmp(type,mng_IDAT,4) == 0)"
    },
    {
        "line": 401,
        "fullcodeline": "if ((memcmp(type,mng_JDAA,4) == 0) || (memcmp(type,mng_JdAA,4) == 0))"
    },
    {
        "line": 419,
        "fullcodeline": "if (memcmp(type,mng_JSEP,4) == 0)"
    },
    {
        "line": 428,
        "fullcodeline": "if (memcmp(type,mng_bKGD,4) == 0)"
    },
    {
        "line": 448,
        "fullcodeline": "if (memcmp(type,mng_gAMA,4) == 0)"
    },
    {
        "line": 457,
        "fullcodeline": "if (memcmp(type,mng_cHRM,4) == 0)"
    },
    {
        "line": 475,
        "fullcodeline": "if (memcmp(type,mng_sRGB,4) == 0)"
    },
    {
        "line": 496,
        "fullcodeline": "if (memcmp(type,mng_oFFs,4) == 0)"
    },
    {
        "line": 515,
        "fullcodeline": "if (memcmp(type,mng_pHYs,4) == 0)"
    },
    {
        "line": 545,
        "fullcodeline": "if (memcmp(type,mng_IEND,4))"
    },
    {
        "line": 579,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 585,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 609,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 627,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 636,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 643,
        "fullcodeline": "if ((s == (const PixelPacket *) NULL) || (q == (PixelPacket *) NULL))"
    },
    {
        "line": 647,
        "fullcodeline": "if (SyncAuthenticPixels(image,exception) == MagickFalse)"
    },
    {
        "line": 655,
        "fullcodeline": "if (jng_alpha_compression_method == 0)"
    },
    {
        "line": 668,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 677,
        "fullcodeline": "if (jng_image != (Image *) NULL)"
    },
    {
        "line": 704,
        "fullcodeline": "if (jng_image != (Image *) NULL)"
    },
    {
        "line": 738,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 82,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 115,
        "fullcodeline": "2*GetBlobSize(image));"
    },
    {
        "line": 126,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 132,
        "fullcodeline": "DestroyJNG(NULL,&color_image,&color_image_info,"
    },
    {
        "line": 134,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"CorruptImage\");"
    },
    {
        "line": 149,
        "fullcodeline": "chunk=(unsigned char *) AcquireQuantumMemory(length,sizeof(*chunk));"
    },
    {
        "line": 167,
        "fullcodeline": "p=chunk;"
    },
    {
        "line": 224,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 243,
        "fullcodeline": "((memcmp(type,mng_JDAT,4) == 0) || (memcmp(type,mng_JdAA,4) == 0) ||"
    },
    {
        "line": 266,
        "fullcodeline": "GetImageInfo(color_image_info);"
    },
    {
        "line": 267,
        "fullcodeline": "color_image=AcquireImage(color_image_info);"
    },
    {
        "line": 275,
        "fullcodeline": "(void) AcquireUniqueFilename(color_image->filename);"
    },
    {
        "line": 276,
        "fullcodeline": "unique_filenames++;"
    },
    {
        "line": 277,
        "fullcodeline": "status=OpenBlob(color_image_info,color_image,WriteBinaryBlobMode,"
    },
    {
        "line": 354,
        "fullcodeline": "reading_idat=MagickTrue;"
    },
    {
        "line": 377,
        "fullcodeline": "data[5];"
    },
    {
        "line": 396,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 414,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 421,
        "fullcodeline": "read_JSEP=MagickTrue;"
    },
    {
        "line": 423,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 444,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 453,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 471,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 492,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 510,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 529,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 658,
        "fullcodeline": "data[5];"
    },
    {
        "line": 659,
        "fullcodeline": "(void) WriteBlobMSBULong(alpha_image,0x00000000L);"
    },
    {
        "line": 660,
        "fullcodeline": "PNGType(data,mng_IEND);"
    },
    {
        "line": 661,
        "fullcodeline": "LogPNGChunk(logging,mng_IEND,0L);"
    },
    {
        "line": 662,
        "fullcodeline": "(void) WriteBlob(alpha_image,4,data);"
    },
    {
        "line": 663,
        "fullcodeline": "(void) WriteBlobMSBULong(alpha_image,crc32(0,data,4));"
    },
    {
        "line": 669,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 705,
        "fullcodeline": "jng_image=DestroyImage(jng_image);"
    },
    {
        "line": 88,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 142,
        "fullcodeline": "if (length > GetBlobSize(image))"
    },
    {
        "line": 151,
        "fullcodeline": "if (chunk == (unsigned char *) NULL)"
    },
    {
        "line": 154,
        "fullcodeline": "for (i=0; i < (ssize_t) length; i++)"
    },
    {
        "line": 164,
        "fullcodeline": "for ( ; i < (ssize_t) length; i++)"
    },
    {
        "line": 165,
        "fullcodeline": "chunk[i]='\\0';"
    },
    {
        "line": 174,
        "fullcodeline": "if (length == 16)"
    },
    {
        "line": 226,
        "fullcodeline": "if (jng_width > 65535 || jng_height > 65535 ||"
    },
    {
        "line": 244,
        "fullcodeline": "(memcmp(type,mng_IDAT,4) == 0) || (memcmp(type,mng_JDAA,4) == 0)))"
    },
    {
        "line": 253,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 259,
        "fullcodeline": "if (color_image_info == (ImageInfo *) NULL)"
    },
    {
        "line": 268,
        "fullcodeline": "if (color_image == (Image *) NULL)"
    },
    {
        "line": 280,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 287,
        "fullcodeline": "if ((image_info->ping == MagickFalse) && (jng_color_type >= 12))"
    },
    {
        "line": 361,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 365,
        "fullcodeline": "if (length != 0)"
    },
    {
        "line": 381,
        "fullcodeline": "if (alpha_image != NULL && image_info->ping == MagickFalse)"
    },
    {
        "line": 405,
        "fullcodeline": "if (alpha_image != NULL && image_info->ping == MagickFalse)"
    },
    {
        "line": 430,
        "fullcodeline": "if (length == 2)"
    },
    {
        "line": 437,
        "fullcodeline": "if (length == 6)"
    },
    {
        "line": 450,
        "fullcodeline": "if (length == 4)"
    },
    {
        "line": 459,
        "fullcodeline": "if (length == 32)"
    },
    {
        "line": 477,
        "fullcodeline": "if (length == 1)"
    },
    {
        "line": 498,
        "fullcodeline": "if (length > 8)"
    },
    {
        "line": 517,
        "fullcodeline": "if (length > 8)"
    },
    {
        "line": 678,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 128,
        "fullcodeline": "type[0],type[1],type[2],type[3],(double) length);"
    },
    {
        "line": 144,
        "fullcodeline": "DestroyJNG(NULL,&color_image,&color_image_info,"
    },
    {
        "line": 146,
        "fullcodeline": "ThrowReaderException(CorruptImageError,"
    },
    {
        "line": 152,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 159,
        "fullcodeline": "c=ReadBlobByte(image);"
    },
    {
        "line": 162,
        "fullcodeline": "chunk[i]=(unsigned char) c;"
    },
    {
        "line": 176,
        "fullcodeline": "jng_width=(png_uint_32)mng_get_long(p);"
    },
    {
        "line": 177,
        "fullcodeline": "jng_height=(png_uint_32)mng_get_long(&p[4]);"
    },
    {
        "line": 185,
        "fullcodeline": "jng_color_type=p[8];"
    },
    {
        "line": 186,
        "fullcodeline": "jng_image_sample_depth=p[9];"
    },
    {
        "line": 187,
        "fullcodeline": "jng_image_compression_method=p[10];"
    },
    {
        "line": 188,
        "fullcodeline": "jng_image_interlace_method=p[11];"
    },
    {
        "line": 190,
        "fullcodeline": "image->interlace=jng_image_interlace_method != 0 ? PNGInterlace :"
    },
    {
        "line": 193,
        "fullcodeline": "jng_alpha_sample_depth=p[12];"
    },
    {
        "line": 194,
        "fullcodeline": "jng_alpha_compression_method=p[13];"
    },
    {
        "line": 195,
        "fullcodeline": "jng_alpha_filter_method=p[14];"
    },
    {
        "line": 196,
        "fullcodeline": "jng_alpha_interlace_method=p[15];"
    },
    {
        "line": 228,
        "fullcodeline": "(long) jng_height > GetMagickResourceLimit(HeightResource))"
    },
    {
        "line": 230,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 233,
        "fullcodeline": "DestroyJNG(chunk,&color_image,&color_image_info,"
    },
    {
        "line": 235,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");"
    },
    {
        "line": 254,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 261,
        "fullcodeline": "DestroyJNG(chunk,&color_image,&color_image_info,"
    },
    {
        "line": 263,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 270,
        "fullcodeline": "DestroyJNG(chunk,&color_image,&color_image_info,"
    },
    {
        "line": 272,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 282,
        "fullcodeline": "DestroyJNG(chunk,&color_image,&color_image_info,"
    },
    {
        "line": 300,
        "fullcodeline": "GetImageInfo(alpha_image_info);"
    },
    {
        "line": 301,
        "fullcodeline": "alpha_image=AcquireImage(alpha_image_info);"
    },
    {
        "line": 315,
        "fullcodeline": "(void) AcquireUniqueFilename(alpha_image->filename);"
    },
    {
        "line": 316,
        "fullcodeline": "unique_filenames++;"
    },
    {
        "line": 317,
        "fullcodeline": "status=OpenBlob(alpha_image_info,alpha_image,WriteBinaryBlobMode,"
    },
    {
        "line": 362,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 367,
        "fullcodeline": "(void) WriteBlob(color_image,length,chunk);"
    },
    {
        "line": 368,
        "fullcodeline": "chunk=(unsigned char *) RelinquishMagickMemory(chunk);"
    },
    {
        "line": 387,
        "fullcodeline": "(void) WriteBlobMSBULong(alpha_image,(size_t) length);"
    },
    {
        "line": 388,
        "fullcodeline": "PNGType(data,mng_IDAT);"
    },
    {
        "line": 389,
        "fullcodeline": "LogPNGChunk(logging,mng_IDAT,length);"
    },
    {
        "line": 390,
        "fullcodeline": "(void) WriteBlob(alpha_image,4,data);"
    },
    {
        "line": 391,
        "fullcodeline": "(void) WriteBlob(alpha_image,length,chunk);"
    },
    {
        "line": 392,
        "fullcodeline": "(void) WriteBlobMSBULong(alpha_image,"
    },
    {
        "line": 411,
        "fullcodeline": "(void) WriteBlob(alpha_image,length,chunk);"
    },
    {
        "line": 432,
        "fullcodeline": "image->background_color.red=ScaleCharToQuantum(p[1]);"
    },
    {
        "line": 433,
        "fullcodeline": "image->background_color.green=image->background_color.red;"
    },
    {
        "line": 434,
        "fullcodeline": "image->background_color.blue=image->background_color.red;"
    },
    {
        "line": 439,
        "fullcodeline": "image->background_color.red=ScaleCharToQuantum(p[1]);"
    },
    {
        "line": 440,
        "fullcodeline": "image->background_color.green=ScaleCharToQuantum(p[3]);"
    },
    {
        "line": 441,
        "fullcodeline": "image->background_color.blue=ScaleCharToQuantum(p[5]);"
    },
    {
        "line": 451,
        "fullcodeline": "image->gamma=((float) mng_get_long(p))*0.00001;"
    },
    {
        "line": 461,
        "fullcodeline": "image->chromaticity.white_point.x=0.00001*mng_get_long(p);"
    },
    {
        "line": 462,
        "fullcodeline": "image->chromaticity.white_point.y=0.00001*mng_get_long(&p[4]);"
    },
    {
        "line": 463,
        "fullcodeline": "image->chromaticity.red_primary.x=0.00001*mng_get_long(&p[8]);"
    },
    {
        "line": 464,
        "fullcodeline": "image->chromaticity.red_primary.y=0.00001*mng_get_long(&p[12]);"
    },
    {
        "line": 465,
        "fullcodeline": "image->chromaticity.green_primary.x=0.00001*mng_get_long(&p[16]);"
    },
    {
        "line": 466,
        "fullcodeline": "image->chromaticity.green_primary.y=0.00001*mng_get_long(&p[20]);"
    },
    {
        "line": 467,
        "fullcodeline": "image->chromaticity.blue_primary.x=0.00001*mng_get_long(&p[24]);"
    },
    {
        "line": 468,
        "fullcodeline": "image->chromaticity.blue_primary.y=0.00001*mng_get_long(&p[28]);"
    },
    {
        "line": 479,
        "fullcodeline": "image->rendering_intent="
    },
    {
        "line": 481,
        "fullcodeline": "image->gamma=1.000f/2.200f;"
    },
    {
        "line": 482,
        "fullcodeline": "image->chromaticity.red_primary.x=0.6400f;"
    },
    {
        "line": 483,
        "fullcodeline": "image->chromaticity.red_primary.y=0.3300f;"
    },
    {
        "line": 484,
        "fullcodeline": "image->chromaticity.green_primary.x=0.3000f;"
    },
    {
        "line": 485,
        "fullcodeline": "image->chromaticity.green_primary.y=0.6000f;"
    },
    {
        "line": 486,
        "fullcodeline": "image->chromaticity.blue_primary.x=0.1500f;"
    },
    {
        "line": 487,
        "fullcodeline": "image->chromaticity.blue_primary.y=0.0600f;"
    },
    {
        "line": 488,
        "fullcodeline": "image->chromaticity.white_point.x=0.3127f;"
    },
    {
        "line": 489,
        "fullcodeline": "image->chromaticity.white_point.y=0.3290f;"
    },
    {
        "line": 500,
        "fullcodeline": "image->page.x=(ssize_t) mng_get_long(p);"
    },
    {
        "line": 501,
        "fullcodeline": "image->page.y=(ssize_t) mng_get_long(&p[4]);"
    },
    {
        "line": 519,
        "fullcodeline": "image->x_resolution=(double) mng_get_long(p);"
    },
    {
        "line": 520,
        "fullcodeline": "image->y_resolution=(double) mng_get_long(&p[4]);"
    },
    {
        "line": 680,
        "fullcodeline": "s=GetVirtualPixels(jng_image,0,y,image->columns,1,&image->exception);"
    },
    {
        "line": 681,
        "fullcodeline": "q=GetAuthenticPixels(image,0,y,image->columns,1,exception);"
    },
    {
        "line": 160,
        "fullcodeline": "if (c == EOF)"
    },
    {
        "line": 178,
        "fullcodeline": "if ((jng_width == 0) || (jng_height == 0))"
    },
    {
        "line": 198,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 227,
        "fullcodeline": "(long) jng_width > GetMagickResourceLimit(WidthResource) ||"
    },
    {
        "line": 284,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 292,
        "fullcodeline": "if (alpha_image_info == (ImageInfo *) NULL)"
    },
    {
        "line": 303,
        "fullcodeline": "if (alpha_image == (Image *) NULL)"
    },
    {
        "line": 311,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 320,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 328,
        "fullcodeline": "if (jng_alpha_compression_method == 0)"
    },
    {
        "line": 383,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 407,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 480,
        "fullcodeline": "Magick_RenderingIntent_from_PNG_RenderingIntent(p[0]);"
    },
    {
        "line": 503,
        "fullcodeline": "if ((int) p[8] != 0)"
    },
    {
        "line": 521,
        "fullcodeline": "if ((int) p[8] == PNG_RESOLUTION_METER)"
    },
    {
        "line": 682,
        "fullcodeline": "if ((s == (const PixelPacket *) NULL) || (q == (PixelPacket *) NULL))"
    },
    {
        "line": 685,
        "fullcodeline": "if (image->matte != MagickFalse)"
    },
    {
        "line": 697,
        "fullcodeline": "if (SyncAuthenticPixels(image,exception) == MagickFalse)"
    },
    {
        "line": 180,
        "fullcodeline": "DestroyJNG(chunk,&color_image,&color_image_info,"
    },
    {
        "line": 183,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"NegativeOrZeroImageSize\");"
    },
    {
        "line": 200,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 208,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 214,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 232,
        "fullcodeline": "(long) jng_width, (long) jng_height);"
    },
    {
        "line": 294,
        "fullcodeline": "DestroyJNG(chunk,&color_image,&color_image_info,"
    },
    {
        "line": 296,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,"
    },
    {
        "line": 305,
        "fullcodeline": "DestroyJNG(chunk,&color_image,&color_image_info,"
    },
    {
        "line": 307,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,"
    },
    {
        "line": 312,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 322,
        "fullcodeline": "alpha_image=DestroyImage(alpha_image);"
    },
    {
        "line": 323,
        "fullcodeline": "alpha_image_info=DestroyImageInfo(alpha_image_info);"
    },
    {
        "line": 324,
        "fullcodeline": "color_image=DestroyImage(color_image);"
    },
    {
        "line": 331,
        "fullcodeline": "data[18];"
    },
    {
        "line": 337,
        "fullcodeline": "(void) WriteBlob(alpha_image,8,(const unsigned char *)"
    },
    {
        "line": 340,
        "fullcodeline": "(void) WriteBlobMSBULong(alpha_image,13L);"
    },
    {
        "line": 341,
        "fullcodeline": "PNGType(data,mng_IHDR);"
    },
    {
        "line": 342,
        "fullcodeline": "LogPNGChunk(logging,mng_IHDR,13L);"
    },
    {
        "line": 343,
        "fullcodeline": "PNGLong(data+4,jng_width);"
    },
    {
        "line": 344,
        "fullcodeline": "PNGLong(data+8,jng_height);"
    },
    {
        "line": 345,
        "fullcodeline": "data[12]=jng_alpha_sample_depth;"
    },
    {
        "line": 346,
        "fullcodeline": "data[13]=0; /* color_type gray */"
    },
    {
        "line": 347,
        "fullcodeline": "data[14]=0; /* compression method 0 */"
    },
    {
        "line": 348,
        "fullcodeline": "data[15]=0; /* filter_method 0 */"
    },
    {
        "line": 349,
        "fullcodeline": "data[16]=0; /* interlace_method 0 */"
    },
    {
        "line": 350,
        "fullcodeline": "(void) WriteBlob(alpha_image,17,data);"
    },
    {
        "line": 351,
        "fullcodeline": "(void) WriteBlobMSBULong(alpha_image,crc32(0,data,17));"
    },
    {
        "line": 384,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 393,
        "fullcodeline": "crc32(crc32(0,data,4),chunk,(uInt) length));"
    },
    {
        "line": 408,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 505,
        "fullcodeline": "image->page.x/=10000;"
    },
    {
        "line": 506,
        "fullcodeline": "image->page.y/=10000;"
    },
    {
        "line": 523,
        "fullcodeline": "image->units=PixelsPerCentimeterResolution;"
    },
    {
        "line": 524,
        "fullcodeline": "image->x_resolution=image->x_resolution/100.0f;"
    },
    {
        "line": 525,
        "fullcodeline": "image->y_resolution=image->y_resolution/100.0f;"
    },
    {
        "line": 325,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 333,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 686,
        "fullcodeline": "for (x=(ssize_t) image->columns; x != 0; x--,q++,s++)"
    },
    {
        "line": 687,
        "fullcodeline": "SetPixelOpacity(q,QuantumRange-GetPixelRed(s));"
    },
    {
        "line": 204,
        "fullcodeline": "(unsigned long) jng_width, (unsigned long) jng_height,"
    },
    {
        "line": 334,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 690,
        "fullcodeline": "for (x=(ssize_t) image->columns; x != 0; x--,q++,s++)"
    },
    {
        "line": 692,
        "fullcodeline": "SetPixelAlpha(q,GetPixelRed(s));"
    },
    {
        "line": 693,
        "fullcodeline": "if (GetPixelOpacity(q) != OpaqueOpacity)"
    },
    {
        "line": 694,
        "fullcodeline": "image->matte=MagickTrue;"
    }
]