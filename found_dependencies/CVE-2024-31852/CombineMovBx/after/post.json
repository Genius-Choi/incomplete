[
    {
        "line": 2,
        "fullcodeline": "MachineBasicBlock::iterator MBBI = MBB.getFirstTerminator();"
    },
    {
        "line": 7,
        "fullcodeline": "MachineBasicBlock::iterator Prev = MBBI;"
    },
    {
        "line": 8,
        "fullcodeline": "--Prev;"
    },
    {
        "line": 24,
        "fullcodeline": "llvm_unreachable(\"tMOVr doesn't kill a reg before tBX_RET?\");"
    },
    {
        "line": 3,
        "fullcodeline": "if (MBBI == MBB.begin() || MBBI == MBB.end() ||"
    },
    {
        "line": 9,
        "fullcodeline": "if (Prev->getOpcode() != ARM::tMOVr || !Prev->definesRegister(ARM::LR))"
    },
    {
        "line": 4,
        "fullcodeline": "MBBI->getOpcode() != ARM::tBX_RET)"
    },
    {
        "line": 13,
        "fullcodeline": "if (Use.isKill()) {"
    },
    {
        "line": 14,
        "fullcodeline": "assert(STI->hasV4TOps());"
    },
    {
        "line": 15,
        "fullcodeline": "BuildMI(MBB, MBBI, MBBI->getDebugLoc(), TII->get(ARM::tBX))"
    },
    {
        "line": 19,
        "fullcodeline": "MBB.erase(MBBI);"
    },
    {
        "line": 20,
        "fullcodeline": "MBB.erase(Prev);"
    },
    {
        "line": 16,
        "fullcodeline": ".addReg(Use.getReg(), RegState::Kill)"
    }
]