[
    {
        "line": 3,
        "fullcodeline": "struct inet_sock *inet = inet_sk(sk);"
    },
    {
        "line": 4,
        "fullcodeline": "struct ipv6_pinfo *np = inet6_sk(sk);"
    },
    {
        "line": 5,
        "fullcodeline": "struct sockaddr_l2tpip6 *addr = (struct sockaddr_l2tpip6 *) uaddr;"
    },
    {
        "line": 6,
        "fullcodeline": "struct net *net = sock_net(sk);"
    },
    {
        "line": 7,
        "fullcodeline": "__be32 v4addr = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "addr_type = ipv6_addr_type(&addr->l2tp_addr);"
    },
    {
        "line": 26,
        "fullcodeline": "err = -EADDRINUSE;"
    },
    {
        "line": 27,
        "fullcodeline": "read_lock_bh(&l2tp_ip6_lock);"
    },
    {
        "line": 31,
        "fullcodeline": "read_unlock_bh(&l2tp_ip6_lock);"
    },
    {
        "line": 33,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 35,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 43,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 76,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 78,
        "fullcodeline": "inet->inet_rcv_saddr = inet->inet_saddr = v4addr;"
    },
    {
        "line": 79,
        "fullcodeline": "sk->sk_v6_rcv_saddr = addr->l2tp_addr;"
    },
    {
        "line": 80,
        "fullcodeline": "np->saddr = addr->l2tp_addr;"
    },
    {
        "line": 82,
        "fullcodeline": "l2tp_ip6_sk(sk)->conn_id = addr->l2tp_conn_id;"
    },
    {
        "line": 84,
        "fullcodeline": "write_lock_bh(&l2tp_ip6_lock);"
    },
    {
        "line": 85,
        "fullcodeline": "sk_add_bind_node(sk, &l2tp_ip6_bind_table);"
    },
    {
        "line": 86,
        "fullcodeline": "sk_del_node_init(sk);"
    },
    {
        "line": 87,
        "fullcodeline": "write_unlock_bh(&l2tp_ip6_lock);"
    },
    {
        "line": 89,
        "fullcodeline": "sock_reset_flag(sk, SOCK_ZAPPED);"
    },
    {
        "line": 90,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 94,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 96,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 100,
        "fullcodeline": "read_unlock_bh(&l2tp_ip6_lock);"
    },
    {
        "line": 11,
        "fullcodeline": "if (addr->l2tp_family != AF_INET6)"
    },
    {
        "line": 13,
        "fullcodeline": "if (addr_len < sizeof(*addr))"
    },
    {
        "line": 19,
        "fullcodeline": "if (addr_type == IPV6_ADDR_MAPPED)"
    },
    {
        "line": 23,
        "fullcodeline": "if (addr_type & IPV6_ADDR_MULTICAST)"
    },
    {
        "line": 28,
        "fullcodeline": "if (__l2tp_ip6_bind_lookup(net, &addr->l2tp_addr,"
    },
    {
        "line": 36,
        "fullcodeline": "if (!sock_flag(sk, SOCK_ZAPPED))"
    },
    {
        "line": 39,
        "fullcodeline": "if (sk->sk_state != TCP_CLOSE)"
    },
    {
        "line": 44,
        "fullcodeline": "if (addr_type != IPV6_ADDR_ANY) {"
    },
    {
        "line": 45,
        "fullcodeline": "struct net_device *dev = NULL;"
    },
    {
        "line": 71,
        "fullcodeline": "v4addr = LOOPBACK4_IPV6;"
    },
    {
        "line": 72,
        "fullcodeline": "err = -EADDRNOTAVAIL;"
    },
    {
        "line": 12,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 14,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 20,
        "fullcodeline": "return -EADDRNOTAVAIL;"
    },
    {
        "line": 24,
        "fullcodeline": "return -EADDRNOTAVAIL;"
    },
    {
        "line": 47,
        "fullcodeline": "if (addr_type & IPV6_ADDR_LINKLOCAL) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (!ipv6_chk_addr(sock_net(sk), &addr->l2tp_addr, dev, 0))"
    },
    {
        "line": 61,
        "fullcodeline": "err = -ENODEV;"
    },
    {
        "line": 62,
        "fullcodeline": "dev = dev_get_by_index_rcu(sock_net(sk),"
    },
    {
        "line": 48,
        "fullcodeline": "if (addr_len >= sizeof(struct sockaddr_in6) &&"
    },
    {
        "line": 58,
        "fullcodeline": "if (!sk->sk_bound_dev_if)"
    },
    {
        "line": 64,
        "fullcodeline": "if (!dev)"
    },
    {
        "line": 53,
        "fullcodeline": "sk->sk_bound_dev_if = addr->l2tp_scope_id;"
    }
]