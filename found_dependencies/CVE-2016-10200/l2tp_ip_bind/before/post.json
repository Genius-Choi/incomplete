[
    {
        "line": 3,
        "fullcodeline": "struct inet_sock *inet = inet_sk(sk);"
    },
    {
        "line": 4,
        "fullcodeline": "struct sockaddr_l2tpip *addr = (struct sockaddr_l2tpip *) uaddr;"
    },
    {
        "line": 5,
        "fullcodeline": "struct net *net = sock_net(sk);"
    },
    {
        "line": 16,
        "fullcodeline": "ret = -EADDRINUSE;"
    },
    {
        "line": 17,
        "fullcodeline": "read_lock_bh(&l2tp_ip_lock);"
    },
    {
        "line": 22,
        "fullcodeline": "read_unlock_bh(&l2tp_ip_lock);"
    },
    {
        "line": 24,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 28,
        "fullcodeline": "chk_addr_ret = inet_addr_type(net, addr->l2tp_addr.s_addr);"
    },
    {
        "line": 29,
        "fullcodeline": "ret = -EADDRNOTAVAIL;"
    },
    {
        "line": 38,
        "fullcodeline": "sk_dst_reset(sk);"
    },
    {
        "line": 40,
        "fullcodeline": "l2tp_ip_sk(sk)->conn_id = addr->l2tp_conn_id;"
    },
    {
        "line": 42,
        "fullcodeline": "write_lock_bh(&l2tp_ip_lock);"
    },
    {
        "line": 43,
        "fullcodeline": "sk_add_bind_node(sk, &l2tp_ip_bind_table);"
    },
    {
        "line": 44,
        "fullcodeline": "sk_del_node_init(sk);"
    },
    {
        "line": 45,
        "fullcodeline": "write_unlock_bh(&l2tp_ip_lock);"
    },
    {
        "line": 46,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "sock_reset_flag(sk, SOCK_ZAPPED);"
    },
    {
        "line": 50,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 55,
        "fullcodeline": "read_unlock_bh(&l2tp_ip_lock);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!sock_flag(sk, SOCK_ZAPPED))"
    },
    {
        "line": 11,
        "fullcodeline": "if (addr_len < sizeof(struct sockaddr_l2tpip))"
    },
    {
        "line": 13,
        "fullcodeline": "if (addr->l2tp_family != AF_INET)"
    },
    {
        "line": 18,
        "fullcodeline": "if (__l2tp_ip_bind_lookup(net, addr->l2tp_addr.s_addr,"
    },
    {
        "line": 25,
        "fullcodeline": "if (sk->sk_state != TCP_CLOSE || addr_len < sizeof(struct sockaddr_l2tpip))"
    },
    {
        "line": 30,
        "fullcodeline": "if (addr->l2tp_addr.s_addr && chk_addr_ret != RTN_LOCAL &&"
    },
    {
        "line": 36,
        "fullcodeline": "if (chk_addr_ret == RTN_MULTICAST || chk_addr_ret == RTN_BROADCAST)"
    },
    {
        "line": 31,
        "fullcodeline": "chk_addr_ret != RTN_MULTICAST && chk_addr_ret != RTN_BROADCAST)"
    },
    {
        "line": 35,
        "fullcodeline": "inet->inet_rcv_saddr = inet->inet_saddr = addr->l2tp_addr.s_addr;"
    },
    {
        "line": 37,
        "fullcodeline": "inet->inet_saddr = 0;  /* Use device */"
    },
    {
        "line": 10,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 12,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 14,
        "fullcodeline": "return -EINVAL;"
    }
]