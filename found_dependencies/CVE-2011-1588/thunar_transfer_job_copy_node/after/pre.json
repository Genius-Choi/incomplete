[
    {
        "line": 12,
        "fullcodeline": "GError               *err = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "GFile                *real_target_file = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "_thunar_return_if_fail (THUNAR_IS_TRANSFER_JOB (job));"
    },
    {
        "line": 17,
        "fullcodeline": "_thunar_return_if_fail (node != NULL && G_IS_FILE (node->source_file));"
    },
    {
        "line": 18,
        "fullcodeline": "_thunar_return_if_fail (target_file == NULL || node->next == NULL);"
    },
    {
        "line": 19,
        "fullcodeline": "_thunar_return_if_fail ((target_file == NULL && target_parent_file != NULL) || (target_file != NULL && target_parent_file == NULL));"
    },
    {
        "line": 20,
        "fullcodeline": "_thunar_return_if_fail (error == NULL || *error == NULL);"
    },
    {
        "line": 28,
        "fullcodeline": "application = thunar_application_get ();"
    },
    {
        "line": 29,
        "fullcodeline": "thumbnail_cache = thunar_application_get_thumbnail_cache (application);"
    },
    {
        "line": 30,
        "fullcodeline": "g_object_unref (application);"
    },
    {
        "line": 159,
        "fullcodeline": "g_object_unref (thumbnail_cache);"
    },
    {
        "line": 32,
        "fullcodeline": "for (; err == NULL && node != NULL; node = node->next)"
    },
    {
        "line": 162,
        "fullcodeline": "if (G_UNLIKELY (err != NULL))"
    },
    {
        "line": 45,
        "fullcodeline": "info = g_file_query_info (node->source_file,"
    },
    {
        "line": 59,
        "fullcodeline": "exo_job_info_message (EXO_JOB (job), \"%s\", g_file_info_get_display_name (info));"
    },
    {
        "line": 63,
        "fullcodeline": "real_target_file = thunar_transfer_job_copy_file (job, node->source_file,"
    },
    {
        "line": 151,
        "fullcodeline": "g_object_unref (target_file);"
    },
    {
        "line": 152,
        "fullcodeline": "target_file = NULL;"
    },
    {
        "line": 155,
        "fullcodeline": "g_object_unref (info);"
    },
    {
        "line": 163,
        "fullcodeline": "g_propagate_error (error, err);"
    },
    {
        "line": 35,
        "fullcodeline": "if (G_LIKELY (target_file == NULL))"
    },
    {
        "line": 52,
        "fullcodeline": "if (info == NULL)"
    },
    {
        "line": 65,
        "fullcodeline": "if (G_LIKELY (real_target_file != NULL))"
    },
    {
        "line": 37,
        "fullcodeline": "base_name = g_file_get_basename (node->source_file);"
    },
    {
        "line": 38,
        "fullcodeline": "target_file = g_file_get_child (target_parent_file, base_name);"
    },
    {
        "line": 39,
        "fullcodeline": "g_free (base_name);"
    },
    {
        "line": 48,
        "fullcodeline": "exo_job_get_cancellable (EXO_JOB (job)),"
    },
    {
        "line": 54,
        "fullcodeline": "g_object_unref (target_file);"
    },
    {
        "line": 131,
        "fullcodeline": "g_object_unref (real_target_file);"
    },
    {
        "line": 42,
        "fullcodeline": "target_file = g_object_ref (target_file);"
    },
    {
        "line": 68,
        "fullcodeline": "if (G_LIKELY (node->source_file != real_target_file))"
    },
    {
        "line": 71,
        "fullcodeline": "thunar_thumbnail_cache_copy_file (thumbnail_cache,"
    },
    {
        "line": 133,
        "fullcodeline": "else if (err != NULL)"
    },
    {
        "line": 76,
        "fullcodeline": "if (node->children != NULL)"
    },
    {
        "line": 96,
        "fullcodeline": "if (G_LIKELY (target_file_list_return != NULL))"
    },
    {
        "line": 105,
        "fullcodeline": "if (job->type == THUNAR_TRANSFER_JOB_MOVE)"
    },
    {
        "line": 79,
        "fullcodeline": "thunar_transfer_job_copy_node (job, node->children, NULL, real_target_file, NULL, &err);"
    },
    {
        "line": 82,
        "fullcodeline": "thunar_transfer_node_free (node->children);"
    },
    {
        "line": 83,
        "fullcodeline": "node->children = NULL;"
    },
    {
        "line": 87,
        "fullcodeline": "if (G_UNLIKELY (err != NULL))"
    },
    {
        "line": 90,
        "fullcodeline": "g_object_unref (real_target_file);"
    },
    {
        "line": 91,
        "fullcodeline": "g_object_unref (target_file);"
    },
    {
        "line": 98,
        "fullcodeline": "*target_file_list_return ="
    },
    {
        "line": 136,
        "fullcodeline": "if (err->domain != G_IO_ERROR || err->code != G_IO_ERROR_NO_SPACE)"
    },
    {
        "line": 99,
        "fullcodeline": "thunar_g_file_list_prepend (*target_file_list_return,"
    },
    {
        "line": 107,
        "fullcodeline": "if (g_file_delete (node->source_file,"
    },
    {
        "line": 139,
        "fullcodeline": "response = thunar_job_ask_skip (THUNAR_JOB (job), \"%s\", err->message);"
    },
    {
        "line": 142,
        "fullcodeline": "g_clear_error (&err);"
    },
    {
        "line": 108,
        "fullcodeline": "exo_job_get_cancellable (EXO_JOB (job)),"
    },
    {
        "line": 112,
        "fullcodeline": "thunar_thumbnail_cache_delete_file (thumbnail_cache,"
    },
    {
        "line": 145,
        "fullcodeline": "if (G_UNLIKELY (response == THUNAR_JOB_RESPONSE_RETRY))"
    },
    {
        "line": 118,
        "fullcodeline": "response = thunar_job_ask_skip (THUNAR_JOB (job), \"%s\","
    },
    {
        "line": 122,
        "fullcodeline": "g_clear_error (&err);"
    },
    {
        "line": 125,
        "fullcodeline": "if (G_UNLIKELY (response == THUNAR_JOB_RESPONSE_RETRY))"
    }
]