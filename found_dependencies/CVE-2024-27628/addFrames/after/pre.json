[
    {
        "line": 6,
        "fullcodeline": "FGFrameContent *fg = new FGFrameContent();"
    },
    {
        "line": 7,
        "fullcodeline": "fg->setStackID(\"1\");"
    },
    {
        "line": 8,
        "fullcodeline": "OFCHECK(fg);"
    },
    {
        "line": 3,
        "fullcodeline": "if (!ct)"
    },
    {
        "line": 11,
        "fullcodeline": "EctEnhancedCT::FramesType frames = ct->getFrames();"
    },
    {
        "line": 12,
        "fullcodeline": "for (Uint16 frameNo = 1; frameNo <= NUM_FRAMES; frameNo++)"
    },
    {
        "line": 22,
        "fullcodeline": "groups.push_back(fg);"
    },
    {
        "line": 24,
        "fullcodeline": "Uint16 *data = new Uint16[NUM_PIXELS_PER_FRAME];"
    },
    {
        "line": 14,
        "fullcodeline": "OFCHECK(fg->setFrameAcquisitionNumber(frameNo).good());"
    },
    {
        "line": 15,
        "fullcodeline": "OFCHECK(fg->setFrameReferenceDateTime(\"20190816092557\").good());"
    },
    {
        "line": 16,
        "fullcodeline": "OFCHECK(fg->setFrameAcquisitionDateTime(\"20190816092557\").good());"
    },
    {
        "line": 17,
        "fullcodeline": "OFCHECK(fg->setFrameAcquisitionDuration(0.001).good());"
    },
    {
        "line": 18,
        "fullcodeline": "OFCHECK(fg->setInStackPositionNumber(frameNo).good());"
    },
    {
        "line": 19,
        "fullcodeline": "OFCHECK(fg->setDimensionIndexValues(1, 0).good());"
    },
    {
        "line": 20,
        "fullcodeline": "OFCHECK(fg->setDimensionIndexValues(frameNo, 1).good());"
    },
    {
        "line": 25,
        "fullcodeline": "for (size_t i = 0; i < NUM_PIXELS_PER_FRAME; ++i)"
    },
    {
        "line": 30,
        "fullcodeline": "OFget<EctEnhancedCT::Frames<Uint16>>(&frames)->addFrame(data, NUM_PIXELS_PER_FRAME, groups).good());"
    },
    {
        "line": 27,
        "fullcodeline": "data[i] = 0x4141;"
    }
]