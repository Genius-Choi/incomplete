[
    {
        "line": 37,
        "fullcodeline": "FGCTAcquisitionDetails::FGCTAcquisitionDetailsItem *item = new FGCTAcquisitionDetails::FGCTAcquisitionDetailsItem();"
    },
    {
        "line": 48,
        "fullcodeline": "FGCTTableDynamics::FGCTTableDynamicsItem *dyn_item = new FGCTTableDynamics::FGCTTableDynamicsItem;"
    },
    {
        "line": 49,
        "fullcodeline": "OFCHECK(dyn_item);"
    },
    {
        "line": 64,
        "fullcodeline": "FGCTGeometry::FGCTGeometryItem *geo_item = new FGCTGeometry::FGCTGeometryItem;"
    },
    {
        "line": 84,
        "fullcodeline": "FGCTExposure::FGCTExposureItem *exp_item = new FGCTExposure::FGCTExposureItem;"
    },
    {
        "line": 102,
        "fullcodeline": "FGCTXRayDetails::FGCTXRayDetailsItem *det_item = new FGCTXRayDetails::FGCTXRayDetailsItem;"
    },
    {
        "line": 116,
        "fullcodeline": "trans.setFGType(FGPixelValueTransformation::E_PixelValTrans_CT);"
    },
    {
        "line": 117,
        "fullcodeline": "trans.setRescaleIntercept(\"0\");"
    },
    {
        "line": 118,
        "fullcodeline": "trans.setRescaleSlope(\"1\");"
    },
    {
        "line": 119,
        "fullcodeline": "trans.setRescaleType(\"HU\");"
    },
    {
        "line": 122,
        "fullcodeline": "FGCTAdditionalXRaySource::FGCTAdditionalXRaySourceItem *asrc_item = new FGCTAdditionalXRaySource::FGCTAdditionalXRaySourceItem;"
    },
    {
        "line": 3,
        "fullcodeline": "if (!ct)"
    },
    {
        "line": 7,
        "fullcodeline": "OFCHECK(meas.setPixelSpacing(\"0.1\\\\0.1\").good());"
    },
    {
        "line": 8,
        "fullcodeline": "OFCHECK(meas.setSliceThickness(\"1.0\").good());"
    },
    {
        "line": 9,
        "fullcodeline": "OFCHECK(meas.setSpacingBetweenSlices(\"0.05\").good());"
    },
    {
        "line": 12,
        "fullcodeline": "OFCHECK(planpo.setImagePositionPatient(\"0.0\", \"0.0\", \"0.0\").good());"
    },
    {
        "line": 15,
        "fullcodeline": "OFCHECK(planor.setImageOrientationPatient(\"1.0\", \"0.0\", \"0.0\", \"0.0\", \"1.0\", \"0.0\").good());"
    },
    {
        "line": 18,
        "fullcodeline": "OFCHECK(ana.setLaterality(FGFrameAnatomy::LATERALITY_BOTH).good());"
    },
    {
        "line": 19,
        "fullcodeline": "OFCHECK(ana.getAnatomy().getAnatomicRegion().set(\"12738006\", \"SCT\", \"Brain\").good());"
    },
    {
        "line": 22,
        "fullcodeline": "OFCHECK(irr.setIrradiationEventUID(\"2.25.30853892236613436472911970638347155062\").good());"
    },
    {
        "line": 25,
        "fullcodeline": "OFCHECK(itype.setFrameType(\"ORIGINAL\\\\PRIMARY\\\\VOLUME\\\\MAXIMUM\").good());"
    },
    {
        "line": 26,
        "fullcodeline": "OFCHECK(itype.setPixelPresentation(FGCTImageFrameType::E_PixelPres_Monochrome).good());"
    },
    {
        "line": 27,
        "fullcodeline": "OFCHECK(itype.setVolumetricProperties(FGCTImageFrameType::E_VolProp_Volume).good());"
    },
    {
        "line": 28,
        "fullcodeline": "OFCHECK(itype.setVolumeBasedCalculationTechnique(FGCTImageFrameType::DT_VolBasedCalcTechnique_VolumeRender).good());"
    },
    {
        "line": 31,
        "fullcodeline": "OFCHECK(atype.setAcquisitionType(FGCTAcquisitionType::DT_AcquisitionType_ConstantAngle).good());"
    },
    {
        "line": 32,
        "fullcodeline": "OFCHECK(atype.setTubeAngle(0.1).good());"
    },
    {
        "line": 33,
        "fullcodeline": "OFCHECK(atype.setConstantVolumeFlag(FGCTAcquisitionType::E_ConstVol_Yes).good());"
    },
    {
        "line": 34,
        "fullcodeline": "OFCHECK(atype.setFluoroscopyFlag(FGCTAcquisitionType::E_Fluoroscopy_No).good());"
    },
    {
        "line": 38,
        "fullcodeline": "OFCHECK(item->setRotationDirection(FGCTAcquisitionDetails::E_RotationDirection_CW).good());"
    },
    {
        "line": 39,
        "fullcodeline": "OFCHECK(item->setRevolutionTime(5).good());"
    },
    {
        "line": 40,
        "fullcodeline": "OFCHECK(item->setSingleCollimationWidth(1).good());"
    },
    {
        "line": 41,
        "fullcodeline": "OFCHECK(item->setTotalCollimationWidth(10).good());"
    },
    {
        "line": 42,
        "fullcodeline": "OFCHECK(item->setTableHeight(50).good());"
    },
    {
        "line": 43,
        "fullcodeline": "OFCHECK(item->setGantryDetectorTilt(5).good());"
    },
    {
        "line": 44,
        "fullcodeline": "OFCHECK(item->setDataCollectionDiameter(20).good());"
    },
    {
        "line": 45,
        "fullcodeline": "adetails.getCTAcquisitionDetailsItems().push_back(item);"
    },
    {
        "line": 59,
        "fullcodeline": "OFCHECK(pos.setTablePosition(100.0).good());"
    },
    {
        "line": 60,
        "fullcodeline": "OFCHECK(pos.setReconstructionTargetCenterPatient(OFVector<Float64>(3, 1.0)).good());"
    },
    {
        "line": 61,
        "fullcodeline": "OFCHECK(pos.setDataCollectionCenterPatient(OFVector<Float64>(3, 2.0)).good());"
    },
    {
        "line": 73,
        "fullcodeline": "OFCHECK(rec.setConvolutionKernel(\"DUMMY\").good());"
    },
    {
        "line": 74,
        "fullcodeline": "OFCHECK(rec.setConvolutionKernelGroup(\"DUMMYGROUP\").good());"
    },
    {
        "line": 75,
        "fullcodeline": "OFCHECK(rec.setImageFilter(\"FILTER\").good());"
    },
    {
        "line": 76,
        "fullcodeline": "OFCHECK(rec.setReconstructionAlgorithm(\"ALGO\").good());"
    },
    {
        "line": 77,
        "fullcodeline": "OFCHECK(rec.setReconstructionAngle(90.0).good());"
    },
    {
        "line": 78,
        "fullcodeline": "OFCHECK(rec.setReconstructionDiameter(100.0).good());"
    },
    {
        "line": 81,
        "fullcodeline": "OFCHECK(rec.setReconstructionPixelSpacing(0.1, 0.1).good());"
    },
    {
        "line": 136,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(meas).good());"
    },
    {
        "line": 137,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(planpo).good());"
    },
    {
        "line": 138,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(planor).good());"
    },
    {
        "line": 139,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(ana).good());"
    },
    {
        "line": 140,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(irr).good());"
    },
    {
        "line": 141,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(itype).good());"
    },
    {
        "line": 142,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(atype).good());"
    },
    {
        "line": 143,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(adetails).good());"
    },
    {
        "line": 144,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(dyn).good());"
    },
    {
        "line": 145,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(pos).good());"
    },
    {
        "line": 146,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(geo).good());"
    },
    {
        "line": 147,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(rec).good());"
    },
    {
        "line": 148,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(exp).good());"
    },
    {
        "line": 149,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(det).good());"
    },
    {
        "line": 150,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(trans).good());"
    },
    {
        "line": 151,
        "fullcodeline": "OFCHECK(ct->addForAllFrames(asrc).good());"
    },
    {
        "line": 88,
        "fullcodeline": "CodeSequenceMacro *phantom_item = new CodeSequenceMacro(\"113682\", \"DCM\", \"ACR Accreditation Phantom - CT\");"
    },
    {
        "line": 95,
        "fullcodeline": "CodeSequenceMacro *water_code = new CodeSequenceMacro(\"113987\", \"DCM\", \"AAPM 220\");"
    },
    {
        "line": 52,
        "fullcodeline": "OFCHECK(dyn_item->setTableSpeed(1.0).good());"
    },
    {
        "line": 53,
        "fullcodeline": "OFCHECK(dyn_item->setTableFeedPerRotation(0.1).good());"
    },
    {
        "line": 54,
        "fullcodeline": "OFCHECK(dyn_item->setSpiralPitchFactor(0.2).good());"
    },
    {
        "line": 55,
        "fullcodeline": "dyn.getCTTableDynamicsItems().push_back(dyn_item);"
    },
    {
        "line": 67,
        "fullcodeline": "OFCHECK(geo_item->setDistanceSourceToDataCollectionCenter(5.0).good());"
    },
    {
        "line": 68,
        "fullcodeline": "OFCHECK(geo_item->setDistanceSourceToDetector(0.5).good());"
    },
    {
        "line": 69,
        "fullcodeline": "geo.getCTGeometryItems().push_back(geo_item);"
    },
    {
        "line": 87,
        "fullcodeline": "OFCHECK(exp_item->setCTDIVol(0.1).good());"
    },
    {
        "line": 89,
        "fullcodeline": "exp_item->getCTDIPhantomTypeCodeSequence().push_back(phantom_item);"
    },
    {
        "line": 90,
        "fullcodeline": "OFCHECK(exp_item->setExposureInMas(0.3).good());"
    },
    {
        "line": 91,
        "fullcodeline": "OFCHECK(exp_item->setExposureModulationType(\"WEIRD\").good());"
    },
    {
        "line": 92,
        "fullcodeline": "OFCHECK(exp_item->setExposureTimeInMs(0.4).good());"
    },
    {
        "line": 93,
        "fullcodeline": "OFCHECK(exp_item->setImageAndFluoroscopyAreaDoseProduct(0.5).good());"
    },
    {
        "line": 94,
        "fullcodeline": "OFCHECK(exp_item->setWaterEquivalentDiameter(0.6).good());"
    },
    {
        "line": 96,
        "fullcodeline": "exp_item->getWaterEquivalentDiameterCalculationMethodCodeSequence().push_back(water_code);"
    },
    {
        "line": 97,
        "fullcodeline": "OFCHECK(exp_item->setXRayTubeCurrentInMa(0.7).good());"
    },
    {
        "line": 98,
        "fullcodeline": "exp.getCTExposureItems().push_back(exp_item);"
    },
    {
        "line": 105,
        "fullcodeline": "OFCHECK(det_item->setCalciumScoringMassFactorDevice(OFVector<Float32>(3, 1)).good());"
    },
    {
        "line": 106,
        "fullcodeline": "OFCHECK(det_item->setCalciumScoringMassFactorPatient(2).good());"
    },
    {
        "line": 107,
        "fullcodeline": "OFCHECK(det_item->setEnergyWeightingFactor(3).good());"
    },
    {
        "line": 108,
        "fullcodeline": "OFCHECK(det_item->setFilterMaterial(\"FILTER_MATERIAL\").good());"
    },
    {
        "line": 109,
        "fullcodeline": "OFCHECK(det_item->setFilterType(\"FILTER_TYPE\").good());"
    },
    {
        "line": 110,
        "fullcodeline": "OFCHECK(det_item->setFocalSpots(OFVector<Float64>(4, 4.4)).good());"
    },
    {
        "line": 111,
        "fullcodeline": "OFCHECK(det_item->setKVP(5.0).good());"
    },
    {
        "line": 112,
        "fullcodeline": "det.getCTXRayDetailsItems().push_back(det_item);"
    },
    {
        "line": 125,
        "fullcodeline": "OFCHECK(asrc_item->setDataCollectionDiameter(1.0).good());"
    },
    {
        "line": 126,
        "fullcodeline": "OFCHECK(asrc_item->setEnergyWeightingFactor(2.0).good());"
    },
    {
        "line": 127,
        "fullcodeline": "OFCHECK(asrc_item->setExposureInmAs(3.0).good());"
    },
    {
        "line": 128,
        "fullcodeline": "OFCHECK(asrc_item->setFilterMaterial(\"FILTER_MATERIAL\").good());"
    },
    {
        "line": 129,
        "fullcodeline": "OFCHECK(asrc_item->setFilterType(\"FILTER_TYPE\").good());"
    },
    {
        "line": 130,
        "fullcodeline": "OFCHECK(asrc_item->setFocalSpots(OFVector<Float64>(4, 4.4)).good());"
    },
    {
        "line": 131,
        "fullcodeline": "OFCHECK(asrc_item->setKVP(5).good());"
    },
    {
        "line": 132,
        "fullcodeline": "OFCHECK(asrc_item->setXRayTubeCurrentInmA(6).good());"
    },
    {
        "line": 133,
        "fullcodeline": "asrc.getCTAdditionalXRaySourceItems().push_back(asrc_item);"
    }
]