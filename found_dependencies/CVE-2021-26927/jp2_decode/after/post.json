[
    {
        "line": 24,
        "fullcodeline": "dec = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "image = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "JAS_DBGLOG(100, (\"jp2_decode(%p, \\\"%s\\\")\\n\", in, optstr));"
    },
    {
        "line": 47,
        "fullcodeline": "jp2_box_destroy(box);"
    },
    {
        "line": 48,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "jp2_box_destroy(box);"
    },
    {
        "line": 59,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 62,
        "fullcodeline": "found = 0;"
    },
    {
        "line": 148,
        "fullcodeline": "samedtype = true;"
    },
    {
        "line": 149,
        "fullcodeline": "dtype = jas_image_cmptdtype(dec->image, 0);"
    },
    {
        "line": 240,
        "fullcodeline": "dec->numchans = dec->cmap ? dec->cmap->data.cmap.numchans :"
    },
    {
        "line": 370,
        "fullcodeline": "image = dec->image;"
    },
    {
        "line": 371,
        "fullcodeline": "dec->image = 0;"
    },
    {
        "line": 373,
        "fullcodeline": "jp2_dec_destroy(dec);"
    },
    {
        "line": 30,
        "fullcodeline": "if (!(dec = jp2_dec_create())) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (!(box = jp2_box_get(in))) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (box->type != JP2_BOX_JP) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (box->data.jp.magic != JP2_JP_MAGIC) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (!(box = jp2_box_get(in))) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (box->type != JP2_BOX_FTYP) {"
    },
    {
        "line": 63,
        "fullcodeline": "while ((box = jp2_box_get(in))) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (!found) {"
    },
    {
        "line": 122,
        "fullcodeline": "if (!(dec->image = jpc_decode(in, optstr))) {"
    },
    {
        "line": 128,
        "fullcodeline": "if (!dec->ihdr) {"
    },
    {
        "line": 135,
        "fullcodeline": "if (dec->ihdr->data.ihdr.numcmpts != JAS_CAST(jas_uint,"
    },
    {
        "line": 142,
        "fullcodeline": "if (!jas_image_numcmpts(dec->image)) {"
    },
    {
        "line": 150,
        "fullcodeline": "for (i = 1; i < JAS_CAST(jas_uint, jas_image_numcmpts(dec->image)); ++i) {"
    },
    {
        "line": 159,
        "fullcodeline": "if ((samedtype && dec->ihdr->data.ihdr.bpc != JP2_DTYPETOBPC(dtype)) ||"
    },
    {
        "line": 166,
        "fullcodeline": "if (dec->ihdr->data.ihdr.comptype != JP2_IHDR_COMPTYPE) {"
    },
    {
        "line": 196,
        "fullcodeline": "if (!dec->colr) {"
    },
    {
        "line": 225,
        "fullcodeline": "if (dec->cmap && !dec->pclr) {"
    },
    {
        "line": 232,
        "fullcodeline": "if (!dec->cmap && dec->pclr) {"
    },
    {
        "line": 262,
        "fullcodeline": "if (!(dec->chantocmptlut = jas_alloc2(dec->numchans,"
    },
    {
        "line": 268,
        "fullcodeline": "if (!dec->cmap) {"
    },
    {
        "line": 320,
        "fullcodeline": "if (dec->numchans != jas_image_numcmpts(dec->image)) {"
    },
    {
        "line": 328,
        "fullcodeline": "for (i = 0; i < JAS_CAST(jas_uint, jas_image_numcmpts(dec->image)); ++i) {"
    },
    {
        "line": 354,
        "fullcodeline": "for (i = jas_image_numcmpts(dec->image); i > 0; --i) {"
    },
    {
        "line": 361,
        "fullcodeline": "if (!jas_image_numcmpts(dec->image)) {"
    },
    {
        "line": 36,
        "fullcodeline": "jas_eprintf(\"error: cannot get box\\n\");"
    },
    {
        "line": 40,
        "fullcodeline": "jas_eprintf(\"error: expecting signature box\\n\");"
    },
    {
        "line": 44,
        "fullcodeline": "jas_eprintf(\"incorrect magic number\\n\");"
    },
    {
        "line": 55,
        "fullcodeline": "jas_eprintf(\"expecting file type box\\n\");"
    },
    {
        "line": 118,
        "fullcodeline": "jas_eprintf(\"error: no code stream found\\n\");"
    },
    {
        "line": 123,
        "fullcodeline": "jas_eprintf(\"error: cannot decode code stream\\n\");"
    },
    {
        "line": 129,
        "fullcodeline": "jas_eprintf(\"error: missing IHDR box\\n\");"
    },
    {
        "line": 137,
        "fullcodeline": "jas_eprintf(\"error: number of components mismatch (IHDR)\\n\");"
    },
    {
        "line": 143,
        "fullcodeline": "jas_eprintf(\"error: no components\\n\");"
    },
    {
        "line": 160,
        "fullcodeline": "(!samedtype && dec->ihdr->data.ihdr.bpc != JP2_IHDR_BPCNULL)) {"
    },
    {
        "line": 161,
        "fullcodeline": "jas_eprintf(\"error: component data type mismatch (IHDR)\\n\");"
    },
    {
        "line": 167,
        "fullcodeline": "jas_eprintf(\"error: unsupported compression type\\n\");"
    },
    {
        "line": 197,
        "fullcodeline": "jas_eprintf(\"error: no COLR box\\n\");"
    },
    {
        "line": 203,
        "fullcodeline": "jas_image_setclrspc(dec->image, jp2_getcs(&dec->colr->data.colr));"
    },
    {
        "line": 206,
        "fullcodeline": "iccprof = jas_iccprof_createfrombuf(dec->colr->data.colr.iccp,"
    },
    {
        "line": 212,
        "fullcodeline": "jas_iccprof_gethdr(iccprof, &icchdr);"
    },
    {
        "line": 213,
        "fullcodeline": "jas_eprintf(\"ICC Profile CS %08x\\n\", icchdr.colorspc);"
    },
    {
        "line": 214,
        "fullcodeline": "jas_image_setclrspc(dec->image, fromiccpcs(icchdr.colorspc));"
    },
    {
        "line": 215,
        "fullcodeline": "dec->image->cmprof_ = jas_cmprof_createfromiccprof(iccprof);"
    },
    {
        "line": 220,
        "fullcodeline": "jas_iccprof_destroy(iccprof);"
    },
    {
        "line": 226,
        "fullcodeline": "jas_eprintf(\"warning: missing PCLR box or superfluous CMAP box\\n\");"
    },
    {
        "line": 227,
        "fullcodeline": "jp2_box_destroy(dec->cmap);"
    },
    {
        "line": 228,
        "fullcodeline": "dec->cmap = 0;"
    },
    {
        "line": 233,
        "fullcodeline": "jas_eprintf(\"warning: missing CMAP box or superfluous PCLR box\\n\");"
    },
    {
        "line": 234,
        "fullcodeline": "jp2_box_destroy(dec->pclr);"
    },
    {
        "line": 235,
        "fullcodeline": "dec->pclr = 0;"
    },
    {
        "line": 241,
        "fullcodeline": "JAS_CAST(jas_uint, jas_image_numcmpts(dec->image));"
    },
    {
        "line": 264,
        "fullcodeline": "jas_eprintf(\"error: no memory\\n\");"
    },
    {
        "line": 321,
        "fullcodeline": "jas_eprintf(\"error: mismatch in number of components (%d != %d)\\n\","
    },
    {
        "line": 329,
        "fullcodeline": "jas_image_setcmpttype(dec->image, i, JAS_IMAGE_CT_UNKNOWN);"
    },
    {
        "line": 362,
        "fullcodeline": "jas_eprintf(\"error: no components\\n\");"
    },
    {
        "line": 379,
        "fullcodeline": "jp2_box_destroy(box);"
    },
    {
        "line": 382,
        "fullcodeline": "jp2_dec_destroy(dec);"
    },
    {
        "line": 64,
        "fullcodeline": "if (jas_getdbglevel() >= 1) {"
    },
    {
        "line": 136,
        "fullcodeline": "jas_image_numcmpts(dec->image))) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (jas_image_cmptdtype(dec->image, i) != dtype) {"
    },
    {
        "line": 174,
        "fullcodeline": "if (dec->bpcc->data.bpcc.numcmpts !="
    },
    {
        "line": 181,
        "fullcodeline": "if (!samedtype) {"
    },
    {
        "line": 208,
        "fullcodeline": "if (!iccprof) {"
    },
    {
        "line": 216,
        "fullcodeline": "if (!dec->image->cmprof_) {"
    },
    {
        "line": 245,
        "fullcodeline": "for (i = 0; i < dec->numchans; ++i) {"
    },
    {
        "line": 269,
        "fullcodeline": "for (i = 0; i < dec->numchans; ++i) {"
    },
    {
        "line": 274,
        "fullcodeline": "pclrd = &dec->pclr->data.pclr;"
    },
    {
        "line": 322,
        "fullcodeline": "dec->numchans, jas_image_numcmpts(dec->image));"
    },
    {
        "line": 334,
        "fullcodeline": "for (i = 0; i < dec->cdef->data.cdef.numchans; ++i) {"
    },
    {
        "line": 355,
        "fullcodeline": "if (jas_image_cmpttype(dec->image, i - 1) == JAS_IMAGE_CT_UNKNOWN) {"
    },
    {
        "line": 65,
        "fullcodeline": "jas_eprintf(\"got box type %s\\n\", box->info->name);"
    },
    {
        "line": 69,
        "fullcodeline": "found = 1;"
    },
    {
        "line": 109,
        "fullcodeline": "jp2_box_destroy(box);"
    },
    {
        "line": 110,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 152,
        "fullcodeline": "samedtype = false;"
    },
    {
        "line": 175,
        "fullcodeline": "JAS_CAST(jas_uint, jas_image_numcmpts(dec->image))) {"
    },
    {
        "line": 176,
        "fullcodeline": "jas_eprintf(\"error: number of components mismatch (BPCC)\\n\");"
    },
    {
        "line": 209,
        "fullcodeline": "jas_eprintf(\"error: failed to parse ICC profile\\n\");"
    },
    {
        "line": 217,
        "fullcodeline": "jas_iccprof_destroy(iccprof);"
    },
    {
        "line": 270,
        "fullcodeline": "dec->chantocmptlut[i] = i;"
    },
    {
        "line": 276,
        "fullcodeline": "for (channo = 0; channo < cmapd->numchans; ++channo) {"
    },
    {
        "line": 340,
        "fullcodeline": "jas_image_setcmpttype(dec->image,"
    },
    {
        "line": 347,
        "fullcodeline": "for (i = 0; i < dec->numchans; ++i) {"
    },
    {
        "line": 356,
        "fullcodeline": "jas_image_delcmpt(dec->image, i - 1);"
    },
    {
        "line": 72,
        "fullcodeline": "if (!dec->ihdr) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (!dec->bpcc) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (!dec->cdef) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (!dec->pclr) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (!dec->cmap) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (!dec->colr) {"
    },
    {
        "line": 182,
        "fullcodeline": "for (i = 0; i < JAS_CAST(jas_uint, jas_image_numcmpts(dec->image));"
    },
    {
        "line": 183,
        "fullcodeline": "++i) {"
    },
    {
        "line": 191,
        "fullcodeline": "jas_eprintf(\"warning: superfluous BPCC box\\n\");"
    },
    {
        "line": 247,
        "fullcodeline": "if (dec->cmap->data.cmap.ents[i].cmptno >= JAS_CAST(jas_uint,"
    },
    {
        "line": 336,
        "fullcodeline": "if (dec->cdef->data.cdef.ents[i].channo >= dec->numchans) {"
    },
    {
        "line": 342,
        "fullcodeline": "jp2_getct(jas_image_clrspc(dec->image),"
    },
    {
        "line": 348,
        "fullcodeline": "jas_image_setcmpttype(dec->image, dec->chantocmptlut[i],"
    },
    {
        "line": 73,
        "fullcodeline": "dec->ihdr = box;"
    },
    {
        "line": 74,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "dec->bpcc = box;"
    },
    {
        "line": 80,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 85,
        "fullcodeline": "dec->cdef = box;"
    },
    {
        "line": 86,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "dec->pclr = box;"
    },
    {
        "line": 92,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "dec->cmap = box;"
    },
    {
        "line": 98,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 103,
        "fullcodeline": "dec->colr = box;"
    },
    {
        "line": 104,
        "fullcodeline": "box = 0;"
    },
    {
        "line": 249,
        "fullcodeline": "jas_eprintf(\"error: invalid component number in CMAP box\\n\");"
    },
    {
        "line": 255,
        "fullcodeline": "jas_eprintf(\"error: invalid CMAP LUT index\\n\");"
    },
    {
        "line": 278,
        "fullcodeline": "if (cmapent->map == JP2_CMAP_DIRECT) {"
    },
    {
        "line": 337,
        "fullcodeline": "jas_eprintf(\"error: invalid channel number in CDEF box\\n\");"
    },
    {
        "line": 349,
        "fullcodeline": "jp2_getct(jas_image_clrspc(dec->image), 0, i + 1));"
    },
    {
        "line": 184,
        "fullcodeline": "if (jas_image_cmptdtype(dec->image, i) !="
    },
    {
        "line": 248,
        "fullcodeline": "jas_image_numcmpts(dec->image))) {"
    },
    {
        "line": 279,
        "fullcodeline": "dec->chantocmptlut[channo] = channo;"
    },
    {
        "line": 186,
        "fullcodeline": "jas_eprintf(\"error: component data type mismatch (BPCC)\\n\");"
    },
    {
        "line": 280,
        "fullcodeline": "} else if (cmapent->map == JP2_CMAP_PALETTE) {"
    },
    {
        "line": 284,
        "fullcodeline": "lutents = jas_alloc2(pclrd->numlutents, sizeof(int_fast32_t));"
    },
    {
        "line": 291,
        "fullcodeline": "newcmptno = jas_image_numcmpts(dec->image);"
    },
    {
        "line": 292,
        "fullcodeline": "jas_image_depalettize(dec->image, cmapent->cmptno,"
    },
    {
        "line": 295,
        "fullcodeline": "dec->chantocmptlut[channo] = newcmptno;"
    },
    {
        "line": 296,
        "fullcodeline": "jas_free(lutents);"
    },
    {
        "line": 309,
        "fullcodeline": "(void)cdefd;"
    },
    {
        "line": 281,
        "fullcodeline": "if (!pclrd->numlutents) {"
    },
    {
        "line": 285,
        "fullcodeline": "if (!lutents) {"
    },
    {
        "line": 288,
        "fullcodeline": "for (i = 0; i < pclrd->numlutents; ++i) {"
    },
    {
        "line": 312,
        "fullcodeline": "jas_eprintf(\"error: invalid MTYP in CMAP box\\n\");"
    },
    {
        "line": 289,
        "fullcodeline": "lutents[i] = pclrd->lutdata[cmapent->pcol + i * pclrd->numchans];"
    }
]