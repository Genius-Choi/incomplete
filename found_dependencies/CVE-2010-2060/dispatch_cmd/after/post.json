[
    {
        "line": 3,
        "fullcodeline": "int r, i, timeout = -1;"
    },
    {
        "line": 12,
        "fullcodeline": "tube t = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "c->cmd[c->cmd_len - 2] = '\\0';"
    },
    {
        "line": 22,
        "fullcodeline": "type = which_cmd(c);"
    },
    {
        "line": 23,
        "fullcodeline": "dprintf(\"got %s command: \\\"%s\\\"\\n\", op_names[(int) type], c->cmd);"
    },
    {
        "line": 18,
        "fullcodeline": "if (strlen(c->cmd) != c->cmd_len - 2) {"
    },
    {
        "line": 27,
        "fullcodeline": "r = read_pri(&pri, c->cmd + 4, &delay_buf);"
    },
    {
        "line": 30,
        "fullcodeline": "r = read_delay(&delay, delay_buf, &ttr_buf);"
    },
    {
        "line": 33,
        "fullcodeline": "r = read_ttr(&ttr, ttr_buf, &size_buf);"
    },
    {
        "line": 36,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "body_size = strtoul(size_buf, &end_buf, 10);"
    },
    {
        "line": 48,
        "fullcodeline": "conn_set_producer(c);"
    },
    {
        "line": 50,
        "fullcodeline": "c->in_job = make_job(pri, delay, ttr ? : 1, body_size + 2, c->use);"
    },
    {
        "line": 59,
        "fullcodeline": "fill_extra_data(c);"
    },
    {
        "line": 62,
        "fullcodeline": "maybe_enqueue_incoming_job(c);"
    },
    {
        "line": 72,
        "fullcodeline": "j = job_copy(pq_peek(&c->use->ready));"
    },
    {
        "line": 76,
        "fullcodeline": "reply_job(c, j, MSG_FOUND);"
    },
    {
        "line": 85,
        "fullcodeline": "j = job_copy(pq_peek(&c->use->delay));"
    },
    {
        "line": 89,
        "fullcodeline": "reply_job(c, j, MSG_FOUND);"
    },
    {
        "line": 98,
        "fullcodeline": "j = job_copy(buried_job_p(c->use)? j = c->use->buried.next : NULL);"
    },
    {
        "line": 102,
        "fullcodeline": "reply_job(c, j, MSG_FOUND);"
    },
    {
        "line": 105,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 106,
        "fullcodeline": "id = strtoull(c->cmd + CMD_PEEKJOB_LEN, &end_buf, 10);"
    },
    {
        "line": 113,
        "fullcodeline": "j = job_copy(peek_job(id));"
    },
    {
        "line": 117,
        "fullcodeline": "reply_job(c, j, MSG_FOUND);"
    },
    {
        "line": 120,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 121,
        "fullcodeline": "timeout = strtol(c->cmd + CMD_RESERVE_TIMEOUT_LEN, &end_buf, 10);"
    },
    {
        "line": 130,
        "fullcodeline": "conn_set_worker(c);"
    },
    {
        "line": 137,
        "fullcodeline": "wait_for_job(c, timeout);"
    },
    {
        "line": 138,
        "fullcodeline": "process_queue();"
    },
    {
        "line": 141,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 142,
        "fullcodeline": "id = strtoull(c->cmd + CMD_DELETE_LEN, &end_buf, 10);"
    },
    {
        "line": 146,
        "fullcodeline": "j = job_find(id);"
    },
    {
        "line": 147,
        "fullcodeline": "j = remove_reserved_job(c, j) ? :"
    },
    {
        "line": 153,
        "fullcodeline": "j->state = JOB_STATE_INVALID;"
    },
    {
        "line": 154,
        "fullcodeline": "r = binlog_write_job(j);"
    },
    {
        "line": 155,
        "fullcodeline": "job_free(j);"
    },
    {
        "line": 159,
        "fullcodeline": "reply(c, MSG_DELETED, MSG_DELETED_LEN, STATE_SENDWORD);"
    },
    {
        "line": 162,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 163,
        "fullcodeline": "id = strtoull(c->cmd + CMD_RELEASE_LEN, &pri_buf, 10);"
    },
    {
        "line": 166,
        "fullcodeline": "r = read_pri(&pri, pri_buf, &delay_buf);"
    },
    {
        "line": 169,
        "fullcodeline": "r = read_delay(&delay, delay_buf, NULL);"
    },
    {
        "line": 173,
        "fullcodeline": "j = remove_reserved_job(c, job_find(id));"
    },
    {
        "line": 185,
        "fullcodeline": "j->pri = pri;"
    },
    {
        "line": 186,
        "fullcodeline": "j->delay = delay;"
    },
    {
        "line": 187,
        "fullcodeline": "j->release_ct++;"
    },
    {
        "line": 189,
        "fullcodeline": "r = enqueue_job(j, delay, !!delay);"
    },
    {
        "line": 196,
        "fullcodeline": "bury_job(j, 0);"
    },
    {
        "line": 197,
        "fullcodeline": "reply(c, MSG_BURIED, MSG_BURIED_LEN, STATE_SENDWORD);"
    },
    {
        "line": 200,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 201,
        "fullcodeline": "id = strtoull(c->cmd + CMD_BURY_LEN, &pri_buf, 10);"
    },
    {
        "line": 204,
        "fullcodeline": "r = read_pri(&pri, pri_buf, NULL);"
    },
    {
        "line": 208,
        "fullcodeline": "j = remove_reserved_job(c, job_find(id));"
    },
    {
        "line": 212,
        "fullcodeline": "j->pri = pri;"
    },
    {
        "line": 213,
        "fullcodeline": "r = bury_job(j, 1);"
    },
    {
        "line": 215,
        "fullcodeline": "reply(c, MSG_BURIED, MSG_BURIED_LEN, STATE_SENDWORD);"
    },
    {
        "line": 218,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 219,
        "fullcodeline": "count = strtoul(c->cmd + CMD_KICK_LEN, &end_buf, 10);"
    },
    {
        "line": 227,
        "fullcodeline": "i = kick_jobs(c->use, count);"
    },
    {
        "line": 231,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 232,
        "fullcodeline": "id = strtoull(c->cmd + CMD_TOUCH_LEN, &end_buf, 10);"
    },
    {
        "line": 237,
        "fullcodeline": "j = touch_job(c, job_find(id));"
    },
    {
        "line": 253,
        "fullcodeline": "do_stats(c, fmt_stats, NULL);"
    },
    {
        "line": 256,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 257,
        "fullcodeline": "id = strtoull(c->cmd + CMD_JOBSTATS_LEN, &end_buf, 10);"
    },
    {
        "line": 262,
        "fullcodeline": "j = peek_job(id);"
    },
    {
        "line": 266,
        "fullcodeline": "do_stats(c, (fmt_fn) fmt_job_stats, j);"
    },
    {
        "line": 269,
        "fullcodeline": "name = c->cmd + CMD_STATS_TUBE_LEN;"
    },
    {
        "line": 274,
        "fullcodeline": "t = tube_find(name);"
    },
    {
        "line": 277,
        "fullcodeline": "do_stats(c, (fmt_fn) fmt_stats_tube, t);"
    },
    {
        "line": 278,
        "fullcodeline": "t = NULL;"
    },
    {
        "line": 287,
        "fullcodeline": "do_list_tubes(c, &tubes);"
    },
    {
        "line": 296,
        "fullcodeline": "reply_line(c, STATE_SENDWORD, \"USING %s\\r\\n\", c->use->name);"
    },
    {
        "line": 305,
        "fullcodeline": "do_list_tubes(c, &c->watch);"
    },
    {
        "line": 308,
        "fullcodeline": "name = c->cmd + CMD_USE_LEN;"
    },
    {
        "line": 312,
        "fullcodeline": "TUBE_ASSIGN(t, tube_find_or_make(name));"
    },
    {
        "line": 316,
        "fullcodeline": "TUBE_ASSIGN(c->use, t);"
    },
    {
        "line": 317,
        "fullcodeline": "TUBE_ASSIGN(t, NULL);"
    },
    {
        "line": 318,
        "fullcodeline": "c->use->using_ct++;"
    },
    {
        "line": 320,
        "fullcodeline": "reply_line(c, STATE_SENDWORD, \"USING %s\\r\\n\", c->use->name);"
    },
    {
        "line": 323,
        "fullcodeline": "name = c->cmd + CMD_WATCH_LEN;"
    },
    {
        "line": 327,
        "fullcodeline": "TUBE_ASSIGN(t, tube_find_or_make(name));"
    },
    {
        "line": 330,
        "fullcodeline": "r = 1;"
    },
    {
        "line": 332,
        "fullcodeline": "TUBE_ASSIGN(t, NULL);"
    },
    {
        "line": 335,
        "fullcodeline": "reply_line(c, STATE_SENDWORD, \"WATCHING %d\\r\\n\", c->watch.used);"
    },
    {
        "line": 338,
        "fullcodeline": "name = c->cmd + CMD_IGNORE_LEN;"
    },
    {
        "line": 342,
        "fullcodeline": "t = NULL;"
    },
    {
        "line": 352,
        "fullcodeline": "t = NULL;"
    },
    {
        "line": 354,
        "fullcodeline": "reply_line(c, STATE_SENDWORD, \"WATCHING %d\\r\\n\", c->watch.used);"
    },
    {
        "line": 357,
        "fullcodeline": "conn_close(c);"
    },
    {
        "line": 362,
        "fullcodeline": "r = read_tube_name(&name, c->cmd + CMD_PAUSE_TUBE_LEN, &delay_buf);"
    },
    {
        "line": 365,
        "fullcodeline": "r = read_delay(&delay, delay_buf, NULL);"
    },
    {
        "line": 368,
        "fullcodeline": "*delay_buf = '\\0';"
    },
    {
        "line": 369,
        "fullcodeline": "t = tube_find(name);"
    },
    {
        "line": 372,
        "fullcodeline": "t->deadline_at = now_usec() + delay;"
    },
    {
        "line": 373,
        "fullcodeline": "t->pause = delay;"
    },
    {
        "line": 375,
        "fullcodeline": "set_main_delay_timeout();"
    },
    {
        "line": 377,
        "fullcodeline": "reply_line(c, STATE_SENDWORD, \"PAUSED\\r\\n\");"
    },
    {
        "line": 19,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 40,
        "fullcodeline": "if (body_size > job_data_size_limit) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (end_buf[0] != '\\0') return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 53,
        "fullcodeline": "if (!c->in_job) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (c->cmd_len != CMD_PEEK_READY_LEN + 2) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (!j) return reply(c, MSG_NOTFOUND, MSG_NOTFOUND_LEN, STATE_SENDWORD);"
    },
    {
        "line": 80,
        "fullcodeline": "if (c->cmd_len != CMD_PEEK_DELAYED_LEN + 2) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (!j) return reply(c, MSG_NOTFOUND, MSG_NOTFOUND_LEN, STATE_SENDWORD);"
    },
    {
        "line": 93,
        "fullcodeline": "if (c->cmd_len != CMD_PEEK_BURIED_LEN + 2) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (!j) return reply(c, MSG_NOTFOUND, MSG_NOTFOUND_LEN, STATE_SENDWORD);"
    },
    {
        "line": 115,
        "fullcodeline": "if (!j) return reply(c, MSG_NOTFOUND, MSG_NOTFOUND_LEN, STATE_SENDWORD);"
    },
    {
        "line": 125,
        "fullcodeline": "if (type == OP_RESERVE && c->cmd_len != CMD_RESERVE_LEN + 2) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (conn_has_close_deadline(c) && !conn_ready(c)) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (!j) return reply(c, MSG_NOTFOUND, MSG_NOTFOUND_LEN, STATE_SENDWORD);"
    },
    {
        "line": 157,
        "fullcodeline": "if (!r) return reply_serr(c, MSG_INTERNAL_ERROR);"
    },
    {
        "line": 175,
        "fullcodeline": "if (!j) return reply(c, MSG_NOTFOUND, MSG_NOTFOUND_LEN, STATE_SENDWORD);"
    },
    {
        "line": 190,
        "fullcodeline": "if (r < 0) return reply_serr(c, MSG_INTERNAL_ERROR);"
    },
    {
        "line": 191,
        "fullcodeline": "if (r == 1) {"
    },
    {
        "line": 210,
        "fullcodeline": "if (!j) return reply(c, MSG_NOTFOUND, MSG_NOTFOUND_LEN, STATE_SENDWORD);"
    },
    {
        "line": 214,
        "fullcodeline": "if (!r) return reply_serr(c, MSG_INTERNAL_ERROR);"
    },
    {
        "line": 220,
        "fullcodeline": "if (end_buf == c->cmd + CMD_KICK_LEN) {"
    },
    {
        "line": 229,
        "fullcodeline": "return reply_line(c, STATE_SENDWORD, \"KICKED %u\\r\\n\", i);"
    },
    {
        "line": 247,
        "fullcodeline": "if (c->cmd_len != CMD_STATS_LEN + 2) {"
    },
    {
        "line": 263,
        "fullcodeline": "if (!j) return reply(c, MSG_NOTFOUND, MSG_NOTFOUND_LEN, STATE_SENDWORD);"
    },
    {
        "line": 265,
        "fullcodeline": "if (!j->tube) return reply_serr(c, MSG_INTERNAL_ERROR);"
    },
    {
        "line": 270,
        "fullcodeline": "if (!name_is_ok(name, 200)) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 275,
        "fullcodeline": "if (!t) return reply_msg(c, MSG_NOTFOUND);"
    },
    {
        "line": 282,
        "fullcodeline": "if (c->cmd_len != CMD_LIST_TUBES_LEN + 2) {"
    },
    {
        "line": 291,
        "fullcodeline": "if (c->cmd_len != CMD_LIST_TUBE_USED_LEN + 2) {"
    },
    {
        "line": 300,
        "fullcodeline": "if (c->cmd_len != CMD_LIST_TUBES_WATCHED_LEN + 2) {"
    },
    {
        "line": 309,
        "fullcodeline": "if (!name_is_ok(name, 200)) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 313,
        "fullcodeline": "if (!t) return reply_serr(c, MSG_OUT_OF_MEMORY);"
    },
    {
        "line": 324,
        "fullcodeline": "if (!name_is_ok(name, 200)) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 328,
        "fullcodeline": "if (!t) return reply_serr(c, MSG_OUT_OF_MEMORY);"
    },
    {
        "line": 331,
        "fullcodeline": "if (!ms_contains(&c->watch, t)) r = ms_append(&c->watch, t);"
    },
    {
        "line": 333,
        "fullcodeline": "if (!r) return reply_serr(c, MSG_OUT_OF_MEMORY);"
    },
    {
        "line": 339,
        "fullcodeline": "if (!name_is_ok(name, 200)) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 343,
        "fullcodeline": "for (i = 0; i < c->watch.used; i++) {"
    },
    {
        "line": 349,
        "fullcodeline": "if (t && c->watch.used < 2) return reply_msg(c, MSG_NOT_IGNORED);"
    },
    {
        "line": 370,
        "fullcodeline": "if (!t) return reply_msg(c, MSG_NOTFOUND);"
    },
    {
        "line": 380,
        "fullcodeline": "return reply_msg(c, MSG_UNKNOWN_COMMAND);"
    },
    {
        "line": 148,
        "fullcodeline": "remove_ready_job(j) ? :"
    },
    {
        "line": 180,
        "fullcodeline": "z = binlog_reserve_space_update(j);"
    },
    {
        "line": 182,
        "fullcodeline": "j->reserved_binlog_space += z;"
    },
    {
        "line": 240,
        "fullcodeline": "reply(c, MSG_TOUCHED, MSG_TOUCHED_LEN, STATE_SENDWORD);"
    },
    {
        "line": 346,
        "fullcodeline": "t = NULL;"
    },
    {
        "line": 351,
        "fullcodeline": "if (t) ms_remove(&c->watch, t); /* may free t if refcount => 0 */"
    },
    {
        "line": 28,
        "fullcodeline": "if (r) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 31,
        "fullcodeline": "if (r) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 34,
        "fullcodeline": "if (r) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 38,
        "fullcodeline": "if (errno) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 42,
        "fullcodeline": "return skip(c, body_size + 2, MSG_JOB_TOO_BIG);"
    },
    {
        "line": 56,
        "fullcodeline": "return skip(c, body_size + 2, MSG_OUT_OF_MEMORY);"
    },
    {
        "line": 68,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 81,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 94,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 107,
        "fullcodeline": "if (errno) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 122,
        "fullcodeline": "if (errno) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 126,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 133,
        "fullcodeline": "return reply_msg(c, MSG_DEADLINE_SOON);"
    },
    {
        "line": 143,
        "fullcodeline": "if (errno) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 149,
        "fullcodeline": "remove_buried_job(j);"
    },
    {
        "line": 164,
        "fullcodeline": "if (errno) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 167,
        "fullcodeline": "if (r) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 170,
        "fullcodeline": "if (r) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 181,
        "fullcodeline": "if (!z) return reply_serr(c, MSG_OUT_OF_MEMORY);"
    },
    {
        "line": 192,
        "fullcodeline": "return reply(c, MSG_RELEASED, MSG_RELEASED_LEN, STATE_SENDWORD);"
    },
    {
        "line": 202,
        "fullcodeline": "if (errno) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 205,
        "fullcodeline": "if (r) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 221,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 223,
        "fullcodeline": "if (errno) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 233,
        "fullcodeline": "if (errno) return twarn(\"strtoull\"), reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 248,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 258,
        "fullcodeline": "if (errno) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 283,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 292,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 301,
        "fullcodeline": "return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 345,
        "fullcodeline": "if (strncmp(t->name, name, MAX_TUBE_NAME_LEN) == 0) break;"
    },
    {
        "line": 363,
        "fullcodeline": "if (r) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 366,
        "fullcodeline": "if (r) return reply_msg(c, MSG_BAD_FORMAT);"
    },
    {
        "line": 242,
        "fullcodeline": "return reply(c, MSG_NOTFOUND, MSG_NOTFOUND_LEN, STATE_SENDWORD);"
    }
]