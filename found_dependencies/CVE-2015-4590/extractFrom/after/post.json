[
    {
        "line": 2,
        "fullcodeline": "char *startPtr = input + 1;  // skip the quote"
    },
    {
        "line": 3,
        "fullcodeline": "char *readPtr = startPtr;"
    },
    {
        "line": 4,
        "fullcodeline": "char *writePtr = startPtr;"
    },
    {
        "line": 8,
        "fullcodeline": "char stopChar = firstChar;  // closing quote is the same as opening quote"
    },
    {
        "line": 30,
        "fullcodeline": "*writePtr = '\\0';"
    },
    {
        "line": 33,
        "fullcodeline": "*endPtr = readPtr;"
    },
    {
        "line": 10,
        "fullcodeline": "if (!isQuote(firstChar)) goto ERROR_OPENING_QUOTE_MISSING;"
    },
    {
        "line": 25,
        "fullcodeline": "*writePtr++ = c;"
    },
    {
        "line": 15,
        "fullcodeline": "if (c == '\\0') goto ERROR_CLOSING_QUOTE_MISSING;"
    },
    {
        "line": 17,
        "fullcodeline": "if (c == stopChar) goto SUCCESS;"
    },
    {
        "line": 19,
        "fullcodeline": "if (c == '\\\\') {"
    },
    {
        "line": 13,
        "fullcodeline": "c = *readPtr++;"
    },
    {
        "line": 21,
        "fullcodeline": "c = unescapeChar(*readPtr++);"
    },
    {
        "line": 22,
        "fullcodeline": "if (c == '\\0') goto ERROR_ESCAPE_SEQUENCE_INTERRUPTED;"
    }
]