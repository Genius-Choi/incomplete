[
    {
        "line": 2,
        "fullcodeline": "setup_logging_console()"
    },
    {
        "line": 3,
        "fullcodeline": "ctx = parse_flags()"
    },
    {
        "line": 4,
        "fullcodeline": "logfile = setup_logging_logfile(ctx.log_file)"
    },
    {
        "line": 9,
        "fullcodeline": "log.info(f\"=== Starting training for language {ctx.lang_code}\")"
    },
    {
        "line": 10,
        "fullcodeline": "ctx = language_specific.set_lang_specific_parameters(ctx, ctx.lang_code)"
    },
    {
        "line": 12,
        "fullcodeline": "initialize_fontconfig(ctx)"
    },
    {
        "line": 13,
        "fullcodeline": "phase_I_generate_image(ctx, par_factor=8)"
    },
    {
        "line": 14,
        "fullcodeline": "phase_UP_generate_unicharset(ctx)"
    },
    {
        "line": 20,
        "fullcodeline": "log.removeHandler(logfile)"
    },
    {
        "line": 21,
        "fullcodeline": "logfile.close()"
    },
    {
        "line": 22,
        "fullcodeline": "cleanup(ctx)"
    },
    {
        "line": 23,
        "fullcodeline": "log.info(\"All done!\")"
    },
    {
        "line": 5,
        "fullcodeline": "if not ctx.linedata:"
    },
    {
        "line": 6,
        "fullcodeline": "log.error(\"--linedata_only is required since only LSTM is supported\")"
    },
    {
        "line": 7,
        "fullcodeline": "sys.exit(1)"
    },
    {
        "line": 17,
        "fullcodeline": "phase_E_extract_features(ctx, [\"lstm.train\"], \"lstmf\")"
    },
    {
        "line": 18,
        "fullcodeline": "make_lstmdata(ctx)"
    }
]