[
    {
        "line": 7,
        "fullcodeline": "int found_at = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "u->port = u->field_set = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "s = is_connect ? s_req_server_start : s_req_spaces_before_url;"
    },
    {
        "line": 15,
        "fullcodeline": "old_uf = UF_MAX;"
    },
    {
        "line": 9,
        "fullcodeline": "if (buflen == 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "for (p = buf; p < buf + buflen; p++) {"
    },
    {
        "line": 77,
        "fullcodeline": "if ((u->field_set & (1 << UF_SCHEMA)) &&"
    },
    {
        "line": 82,
        "fullcodeline": "if (u->field_set & (1 << UF_HOST)) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (is_connect && u->field_set != ((1 << UF_HOST)|(1 << UF_PORT))) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (u->field_set & (1 << UF_PORT)) {"
    },
    {
        "line": 18,
        "fullcodeline": "s = parse_url_char(s, *p);"
    },
    {
        "line": 68,
        "fullcodeline": "u->field_data[uf].off = (uint16_t)(p - buf);"
    },
    {
        "line": 69,
        "fullcodeline": "u->field_data[uf].len = 1;"
    },
    {
        "line": 71,
        "fullcodeline": "u->field_set |= (1 << uf);"
    },
    {
        "line": 72,
        "fullcodeline": "old_uf = uf;"
    },
    {
        "line": 78,
        "fullcodeline": "(u->field_set & (1 << UF_HOST)) == 0) {"
    },
    {
        "line": 102,
        "fullcodeline": "end = buf + off + len;"
    },
    {
        "line": 105,
        "fullcodeline": "assert(off + len <= buflen && \"Port number overflow\");"
    },
    {
        "line": 106,
        "fullcodeline": "v = 0;"
    },
    {
        "line": 117,
        "fullcodeline": "u->port = (uint16_t) v;"
    },
    {
        "line": 63,
        "fullcodeline": "if (uf == old_uf) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (http_parse_host(buf, u, found_at) != 0) {"
    },
    {
        "line": 107,
        "fullcodeline": "for (p = buf + off; p < end; p++) {"
    },
    {
        "line": 34,
        "fullcodeline": "uf = UF_SCHEMA;"
    },
    {
        "line": 38,
        "fullcodeline": "found_at = 1;"
    },
    {
        "line": 42,
        "fullcodeline": "uf = UF_HOST;"
    },
    {
        "line": 46,
        "fullcodeline": "uf = UF_PATH;"
    },
    {
        "line": 50,
        "fullcodeline": "uf = UF_QUERY;"
    },
    {
        "line": 54,
        "fullcodeline": "uf = UF_FRAGMENT;"
    },
    {
        "line": 58,
        "fullcodeline": "assert(!\"Unexpected state\");"
    },
    {
        "line": 108,
        "fullcodeline": "v *= 10;"
    },
    {
        "line": 109,
        "fullcodeline": "v += *p - '0';"
    },
    {
        "line": 112,
        "fullcodeline": "if (v > 0xffff) {"
    }
]