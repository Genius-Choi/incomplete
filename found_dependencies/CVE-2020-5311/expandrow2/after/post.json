[
    {
        "line": 6,
        "fullcodeline": "for (;n > 0; n--)"
    },
    {
        "line": 8,
        "fullcodeline": "pixel = src[1];"
    },
    {
        "line": 9,
        "fullcodeline": "src+=2;"
    },
    {
        "line": 12,
        "fullcodeline": "count = pixel & RLE_MAX_RUN;"
    },
    {
        "line": 10,
        "fullcodeline": "if (n == 1 && pixel != 0)"
    },
    {
        "line": 13,
        "fullcodeline": "if (!count)"
    },
    {
        "line": 15,
        "fullcodeline": "if (count > xsize) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (pixel & RLE_COPY_FLAG) {"
    },
    {
        "line": 16,
        "fullcodeline": "return -1;"
    },
    {
        "line": 19,
        "fullcodeline": "while(count--) {"
    },
    {
        "line": 30,
        "fullcodeline": "src+=2;"
    },
    {
        "line": 20,
        "fullcodeline": "memcpy(dest, src, 2);"
    },
    {
        "line": 21,
        "fullcodeline": "src += 2;"
    },
    {
        "line": 22,
        "fullcodeline": "dest += z * 2;"
    },
    {
        "line": 26,
        "fullcodeline": "while (count--) {"
    },
    {
        "line": 27,
        "fullcodeline": "memcpy(dest, src, 2);"
    },
    {
        "line": 28,
        "fullcodeline": "dest += z * 2;"
    }
]