[
    {
        "line": 6,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "c = (SGISTATE*)state->context;"
    },
    {
        "line": 10,
        "fullcodeline": "_imaging_seek_pyFd(state->fd, 0L, SEEK_END);"
    },
    {
        "line": 11,
        "fullcodeline": "c->bufsize = _imaging_tell_pyFd(state->fd);"
    },
    {
        "line": 12,
        "fullcodeline": "c->bufsize -= SGI_HEADER_SIZE;"
    },
    {
        "line": 13,
        "fullcodeline": "ptr = malloc(sizeof(UINT8) * c->bufsize);"
    },
    {
        "line": 17,
        "fullcodeline": "_imaging_seek_pyFd(state->fd, SGI_HEADER_SIZE, SEEK_SET);"
    },
    {
        "line": 18,
        "fullcodeline": "_imaging_read_pyFd(state->fd, (char*)ptr, c->bufsize);"
    },
    {
        "line": 22,
        "fullcodeline": "state->count = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "state->y = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "free(state->buffer);"
    },
    {
        "line": 38,
        "fullcodeline": "state->buffer = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "state->buffer = calloc(im->xsize * im->bands, sizeof(UINT8) * 2);"
    },
    {
        "line": 41,
        "fullcodeline": "c->tablen = im->bands * im->ysize;"
    },
    {
        "line": 42,
        "fullcodeline": "c->starttab = calloc(c->tablen, sizeof(UINT32));"
    },
    {
        "line": 43,
        "fullcodeline": "c->lengthtab = calloc(c->tablen, sizeof(UINT32));"
    },
    {
        "line": 57,
        "fullcodeline": "state->count += c->tablen * sizeof(UINT32) * 2;"
    },
    {
        "line": 91,
        "fullcodeline": "c->bufsize++;"
    },
    {
        "line": 95,
        "fullcodeline": "free(c->starttab);"
    },
    {
        "line": 96,
        "fullcodeline": "free(c->lengthtab);"
    },
    {
        "line": 97,
        "fullcodeline": "free(ptr);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!ptr) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (state->ystep < 0) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (im->xsize > INT_MAX / im->bands ||"
    },
    {
        "line": 44,
        "fullcodeline": "if (!state->buffer ||"
    },
    {
        "line": 51,
        "fullcodeline": "for (c->tabindex = 0, c->bufindex = 0; c->tabindex < c->tablen; c->tabindex++, c->bufindex+=4)"
    },
    {
        "line": 52,
        "fullcodeline": "read4B(&c->starttab[c->tabindex], &ptr[c->bufindex]);"
    },
    {
        "line": 54,
        "fullcodeline": "for (c->tabindex = 0, c->bufindex = c->tablen * sizeof(UINT32); c->tabindex < c->tablen; c->tabindex++, c->bufindex+=4)"
    },
    {
        "line": 55,
        "fullcodeline": "read4B(&c->lengthtab[c->tabindex], &ptr[c->bufindex]);"
    },
    {
        "line": 60,
        "fullcodeline": "for (c->rowno = 0; c->rowno < im->ysize; c->rowno++, state->y += state->ystep)"
    },
    {
        "line": 98,
        "fullcodeline": "if (err != 0){"
    },
    {
        "line": 101,
        "fullcodeline": "return state->count - c->bufsize;"
    },
    {
        "line": 25,
        "fullcodeline": "state->y = im->ysize - 1;"
    },
    {
        "line": 31,
        "fullcodeline": "im->ysize > INT_MAX / im->bands) {"
    },
    {
        "line": 32,
        "fullcodeline": "err = IMAGING_CODEC_MEMORY;"
    },
    {
        "line": 46,
        "fullcodeline": "!c->lengthtab) {"
    },
    {
        "line": 47,
        "fullcodeline": "err = IMAGING_CODEC_MEMORY;"
    },
    {
        "line": 87,
        "fullcodeline": "state->shuffle((UINT8*)im->image[state->y], state->buffer, im->xsize);"
    },
    {
        "line": 27,
        "fullcodeline": "state->ystep = 1;"
    },
    {
        "line": 45,
        "fullcodeline": "!c->starttab ||"
    },
    {
        "line": 62,
        "fullcodeline": "for (c->channo = 0; c->channo < im->bands; c->channo++)"
    },
    {
        "line": 66,
        "fullcodeline": "c->rleoffset -= SGI_HEADER_SIZE;"
    },
    {
        "line": 83,
        "fullcodeline": "state->count += c->rlelength;"
    },
    {
        "line": 68,
        "fullcodeline": "if (c->rleoffset + c->rlelength > c->bufsize) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (c->bpc ==1) {"
    },
    {
        "line": 64,
        "fullcodeline": "c->rleoffset = c->starttab[c->rowno + c->channo * im->ysize];"
    },
    {
        "line": 65,
        "fullcodeline": "c->rlelength = c->lengthtab[c->rowno + c->channo * im->ysize];"
    },
    {
        "line": 69,
        "fullcodeline": "state->errcode = IMAGING_CODEC_OVERRUN;"
    },
    {
        "line": 70,
        "fullcodeline": "return -1;"
    },
    {
        "line": 75,
        "fullcodeline": "if(expandrow(&state->buffer[c->channo], &ptr[c->rleoffset], c->rlelength, im->bands))"
    },
    {
        "line": 79,
        "fullcodeline": "if(expandrow2(&state->buffer[c->channo * 2], &ptr[c->rleoffset], c->rlelength, im->bands))"
    }
]