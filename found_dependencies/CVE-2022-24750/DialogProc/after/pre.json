[
    {
        "line": 8,
        "fullcodeline": "vncProperties *_this = helper::SafeGetWindowUserData<vncProperties>(hwnd);"
    },
    {
        "line": 15,
        "fullcodeline": "vnclog.Print(LL_INTINFO, VNCLOG(\"INITDIALOG properties\\n\"));"
    },
    {
        "line": 18,
        "fullcodeline": "helper::SafeSetWindowUserData(hwnd, lParam);"
    },
    {
        "line": 20,
        "fullcodeline": "_this = (vncProperties *) lParam;"
    },
    {
        "line": 21,
        "fullcodeline": "_this->m_dlgvisible = TRUE;"
    },
    {
        "line": 39,
        "fullcodeline": "HWND hConnectSock = GetDlgItem(hwnd, IDC_CONNECT_SOCK);"
    },
    {
        "line": 42,
        "fullcodeline": "BOOL bConnectSock = _this->m_server->SockConnected();"
    },
    {
        "line": 43,
        "fullcodeline": "SendMessage(hConnectSock, BM_SETCHECK, bConnectSock, 0);"
    },
    {
        "line": 46,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_PASSWORD, \"~~~~~~~~\");"
    },
    {
        "line": 47,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PASSWORD), bConnectSock);"
    },
    {
        "line": 50,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_PASSWORD2, \"~~~~~~~~\"); //PGM"
    },
    {
        "line": 51,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PASSWORD2), bConnectSock); //PGM"
    },
    {
        "line": 62,
        "fullcodeline": "_this->InitPortSettings(hwnd);"
    },
    {
        "line": 64,
        "fullcodeline": "HWND hConnectHTTP = GetDlgItem(hwnd, IDC_CONNECT_HTTP);"
    },
    {
        "line": 65,
        "fullcodeline": "SendMessage(hConnectHTTP,"
    },
    {
        "line": 71,
        "fullcodeline": "HWND hFileTransfer = GetDlgItem(hwnd, IDC_FILETRANSFER);"
    },
    {
        "line": 72,
        "fullcodeline": "SendMessage(hFileTransfer, BM_SETCHECK, _this->m_server->FileTransferEnabled(), 0);"
    },
    {
        "line": 74,
        "fullcodeline": "HWND hFileTransferUserImp = GetDlgItem(hwnd, IDC_FTUSERIMPERSONATION_CHECK);"
    },
    {
        "line": 75,
        "fullcodeline": "SendMessage(hFileTransferUserImp, BM_SETCHECK, _this->m_server->FTUserImpersonation(), 0);"
    },
    {
        "line": 77,
        "fullcodeline": "HWND hBlank = GetDlgItem(hwnd, IDC_BLANK);"
    },
    {
        "line": 78,
        "fullcodeline": "SendMessage(hBlank, BM_SETCHECK, _this->m_server->BlankMonitorEnabled(), 0);"
    },
    {
        "line": 83,
        "fullcodeline": "HWND hBlank2 = GetDlgItem(hwnd, IDC_BLANK2); //PGM"
    },
    {
        "line": 84,
        "fullcodeline": "SendMessage(hBlank2, BM_SETCHECK, _this->m_server->BlankInputsOnly(), 0); //PGM"
    },
    {
        "line": 86,
        "fullcodeline": "HWND hLoopback = GetDlgItem(hwnd, IDC_ALLOWLOOPBACK);"
    },
    {
        "line": 87,
        "fullcodeline": "BOOL fLoopback = _this->m_server->LoopbackOk();"
    },
    {
        "line": 88,
        "fullcodeline": "SendMessage(hLoopback, BM_SETCHECK, fLoopback, 0);"
    },
    {
        "line": 94,
        "fullcodeline": "HWND hIPV6 = GetDlgItem(hwnd, IDC_IPV6);"
    },
    {
        "line": 95,
        "fullcodeline": "EnableWindow(hIPV6, false);"
    },
    {
        "line": 97,
        "fullcodeline": "HWND hLoopbackonly = GetDlgItem(hwnd, IDC_LOOPBACKONLY);"
    },
    {
        "line": 98,
        "fullcodeline": "BOOL fLoopbackonly = _this->m_server->LoopbackOnly();"
    },
    {
        "line": 99,
        "fullcodeline": "SendMessage(hLoopbackonly, BM_SETCHECK, fLoopbackonly, 0);"
    },
    {
        "line": 101,
        "fullcodeline": "HWND hTrayicon = GetDlgItem(hwnd, IDC_DISABLETRAY);"
    },
    {
        "line": 102,
        "fullcodeline": "BOOL fTrayicon = _this->m_server->GetDisableTrayIcon();"
    },
    {
        "line": 103,
        "fullcodeline": "SendMessage(hTrayicon, BM_SETCHECK, fTrayicon, 0);"
    },
    {
        "line": 105,
        "fullcodeline": "HWND hrdpmode = GetDlgItem(hwnd, IDC_RDPMODE);"
    },
    {
        "line": 106,
        "fullcodeline": "BOOL frdpmode = _this->m_server->GetRdpmode();"
    },
    {
        "line": 107,
        "fullcodeline": "SendMessage(hrdpmode, BM_SETCHECK, frdpmode, 0);"
    },
    {
        "line": 109,
        "fullcodeline": "HWND hNoScreensaver= GetDlgItem(hwnd,IDC_NOSCREENSAVER);"
    },
    {
        "line": 110,
        "fullcodeline": "BOOL fNoScrensaver = _this->m_server->GetNoScreensaver();"
    },
    {
        "line": 111,
        "fullcodeline": "SendMessage(hNoScreensaver, BM_SETCHECK, fNoScrensaver, 0);"
    },
    {
        "line": 113,
        "fullcodeline": "HWND hAllowshutdown = GetDlgItem(hwnd, IDC_ALLOWSHUTDOWN);"
    },
    {
        "line": 114,
        "fullcodeline": "SendMessage(hAllowshutdown, BM_SETCHECK, !_this->m_allowshutdown , 0);"
    },
    {
        "line": 116,
        "fullcodeline": "HWND hm_alloweditclients = GetDlgItem(hwnd, IDC_ALLOWEDITCLIENTS);"
    },
    {
        "line": 117,
        "fullcodeline": "SendMessage(hm_alloweditclients, BM_SETCHECK, !_this->m_alloweditclients , 0);"
    },
    {
        "line": 118,
        "fullcodeline": "_this->m_server->SetAllowEditClients(_this->m_alloweditclients);"
    },
    {
        "line": 127,
        "fullcodeline": "ShowWindow (GetDlgItem(hwnd, IDC_CLEAR), SW_HIDE);"
    },
    {
        "line": 128,
        "fullcodeline": "ShowWindow (GetDlgItem(hwnd, IDC_VIDEO), SW_HIDE);"
    },
    {
        "line": 147,
        "fullcodeline": "HWND hSecure = GetDlgItem(hwnd, IDC_SAVEPASSWORDSECURE);"
    },
    {
        "line": 148,
        "fullcodeline": "SendMessage(hSecure, BM_SETCHECK, _this->m_server->Secure(), 0);"
    },
    {
        "line": 150,
        "fullcodeline": "HWND hMSLogon = GetDlgItem(hwnd, IDC_MSLOGON_CHECKD);"
    },
    {
        "line": 151,
        "fullcodeline": "SendMessage(hMSLogon, BM_SETCHECK, _this->m_server->MSLogonRequired(), 0);"
    },
    {
        "line": 153,
        "fullcodeline": "HWND hNewMSLogon = GetDlgItem(hwnd, IDC_NEW_MSLOGON);"
    },
    {
        "line": 154,
        "fullcodeline": "SendMessage(hNewMSLogon, BM_SETCHECK, _this->m_server->GetNewMSLogon(), 0);"
    },
    {
        "line": 156,
        "fullcodeline": "HWND hReverseAuth = GetDlgItem(hwnd, IDC_REVERSEAUTH);"
    },
    {
        "line": 157,
        "fullcodeline": "SendMessage(hReverseAuth, BM_SETCHECK, _this->m_server->GetReverseAuthRequired(), 0);"
    },
    {
        "line": 159,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_NEW_MSLOGON), _this->m_server->MSLogonRequired());"
    },
    {
        "line": 160,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_MSLOGON), _this->m_server->MSLogonRequired());"
    },
    {
        "line": 163,
        "fullcodeline": "SetDlgItemInt(hwnd, IDC_SCALE, _this->m_server->GetDefaultScale(), false);"
    },
    {
        "line": 167,
        "fullcodeline": "HWND hEnableRemoteInputs = GetDlgItem(hwnd, IDC_DISABLE_INPUTS);"
    },
    {
        "line": 168,
        "fullcodeline": "SendMessage(hEnableRemoteInputs,"
    },
    {
        "line": 174,
        "fullcodeline": "HWND hDisableLocalInputs = GetDlgItem(hwnd, IDC_DISABLE_LOCAL_INPUTS);"
    },
    {
        "line": 175,
        "fullcodeline": "SendMessage(hDisableLocalInputs,"
    },
    {
        "line": 181,
        "fullcodeline": "HWND hJapInputs = GetDlgItem(hwnd, IDC_JAP_INPUTS);"
    },
    {
        "line": 182,
        "fullcodeline": "SendMessage(hJapInputs,"
    },
    {
        "line": 187,
        "fullcodeline": "HWND hUnicodeInputs = GetDlgItem(hwnd, IDC_UNICODE_INPUTS);"
    },
    {
        "line": 188,
        "fullcodeline": "SendMessage(hUnicodeInputs,"
    },
    {
        "line": 193,
        "fullcodeline": "HWND hwinhelper = GetDlgItem(hwnd, IDC_WIN8_HELPER);"
    },
    {
        "line": 194,
        "fullcodeline": "SendMessage(hwinhelper,"
    },
    {
        "line": 200,
        "fullcodeline": "HWND hRemoveWallpaper = GetDlgItem(hwnd, IDC_REMOVE_WALLPAPER);"
    },
    {
        "line": 201,
        "fullcodeline": "SendMessage(hRemoveWallpaper,"
    },
    {
        "line": 218,
        "fullcodeline": "SendMessage(hLockSetting,"
    },
    {
        "line": 233,
        "fullcodeline": "SendMessage(hNotificationSelection,"
    },
    {
        "line": 238,
        "fullcodeline": "HWND hmvSetting = 0;"
    },
    {
        "line": 253,
        "fullcodeline": "SendMessage(hmvSetting,"
    },
    {
        "line": 270,
        "fullcodeline": "SendMessage(hQuerySetting,"
    },
    {
        "line": 286,
        "fullcodeline": "SendMessage(hMaxViewerSetting,"
    },
    {
        "line": 291,
        "fullcodeline": "HWND hCollabo = GetDlgItem(hwnd, IDC_COLLABO);"
    },
    {
        "line": 292,
        "fullcodeline": "SendMessage(hCollabo,"
    },
    {
        "line": 297,
        "fullcodeline": "HWND hwndDlg = GetDlgItem(hwnd, IDC_FRAME);"
    },
    {
        "line": 298,
        "fullcodeline": "SendMessage(hwndDlg,"
    },
    {
        "line": 303,
        "fullcodeline": "hwndDlg = GetDlgItem(hwnd, IDC_NOTIFOCATION);"
    },
    {
        "line": 304,
        "fullcodeline": "SendMessage(hwndDlg,"
    },
    {
        "line": 309,
        "fullcodeline": "hwndDlg = GetDlgItem(hwnd, IDC_OSD);"
    },
    {
        "line": 310,
        "fullcodeline": "SendMessage(hwndDlg,"
    },
    {
        "line": 315,
        "fullcodeline": "char maxviewersChar[128];"
    },
    {
        "line": 316,
        "fullcodeline": "UINT maxviewers = _this->m_server->getMaxViewers();"
    },
    {
        "line": 317,
        "fullcodeline": "sprintf_s(maxviewersChar, \"%d\", (int)maxviewers);"
    },
    {
        "line": 318,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_MAXVIEWERS, (const char*)maxviewersChar);"
    },
    {
        "line": 321,
        "fullcodeline": "HWND hPlugins = GetDlgItem(hwnd, IDC_PLUGINS_COMBO);"
    },
    {
        "line": 322,
        "fullcodeline": "int nPlugins = _this->m_server->GetDSMPluginPointer()->ListPlugins(hPlugins);"
    },
    {
        "line": 332,
        "fullcodeline": "SendMessage(GetDlgItem(hwnd, IDC_PLUGIN_CHECK), BM_SETCHECK, _this->m_server->IsDSMPluginEnabled(), 0);"
    },
    {
        "line": 333,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PLUGIN_BUTTON),  (_this->m_server->AuthClientCount() == 0 ? _this->m_server->IsDSMPluginEnabled(): false));"
    },
    {
        "line": 336,
        "fullcodeline": "BOOL queryEnabled = (_this->m_server->QuerySetting() == 4);"
    },
    {
        "line": 337,
        "fullcodeline": "SendMessage(GetDlgItem(hwnd, IDQUERY), BM_SETCHECK, queryEnabled, 0);"
    },
    {
        "line": 338,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDQUERYTIMEOUT), queryEnabled);"
    },
    {
        "line": 339,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_QUERYDISABLETIME), queryEnabled);"
    },
    {
        "line": 340,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_DREFUSE), queryEnabled);"
    },
    {
        "line": 341,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_DACCEPT), queryEnabled);"
    },
    {
        "line": 343,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_SERVICE_COMMANDLINE, _this->service_commandline);"
    },
    {
        "line": 344,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_EDITQUERYTEXT, _this->accept_reject_mesg);"
    },
    {
        "line": 347,
        "fullcodeline": "char timeout[128];"
    },
    {
        "line": 348,
        "fullcodeline": "UINT t = _this->m_server->QueryTimeout();"
    },
    {
        "line": 349,
        "fullcodeline": "sprintf_s(timeout, \"%d\", (int)t);"
    },
    {
        "line": 350,
        "fullcodeline": "SetDlgItemText(hwnd, IDQUERYTIMEOUT, (const char *) timeout);"
    },
    {
        "line": 352,
        "fullcodeline": "char disableTime[128];"
    },
    {
        "line": 353,
        "fullcodeline": "UINT tt = _this->m_server->QueryDisableTime();"
    },
    {
        "line": 354,
        "fullcodeline": "sprintf_s(disableTime, \"%d\", (int)tt);"
    },
    {
        "line": 355,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_QUERYDISABLETIME, (const char *) disableTime);"
    },
    {
        "line": 357,
        "fullcodeline": "_this->ExpandBox(hwnd, !_this->m_bExpanded);"
    },
    {
        "line": 358,
        "fullcodeline": "SendMessage(GetDlgItem(hwnd, IDC_BUTTON_EXPAND), BM_SETIMAGE, (WPARAM)IMAGE_BITMAP, (LPARAM)_this->hBmpExpand);"
    },
    {
        "line": 360,
        "fullcodeline": "SetForegroundWindow(hwnd);"
    },
    {
        "line": 366,
        "fullcodeline": "switch (LOWORD(wParam))"
    },
    {
        "line": 67,
        "fullcodeline": "_this->m_server->HTTPConnectEnabled(),"
    },
    {
        "line": 79,
        "fullcodeline": "if (!VNC_OSVersion::getInstance()->OS_WIN10_TRANS && VNC_OSVersion::getInstance()->OS_WIN10)"
    },
    {
        "line": 121,
        "fullcodeline": "if (vnclog.GetMode() >= 2)"
    },
    {
        "line": 130,
        "fullcodeline": "if (vnclog.GetVideo())"
    },
    {
        "line": 170,
        "fullcodeline": "!(_this->m_server->RemoteInputsEnabled()),"
    },
    {
        "line": 177,
        "fullcodeline": "_this->m_server->LocalInputsDisabled(),"
    },
    {
        "line": 184,
        "fullcodeline": "_this->m_server->JapInputEnabled(),"
    },
    {
        "line": 190,
        "fullcodeline": "_this->m_server->UnicodeInputEnabled(),"
    },
    {
        "line": 196,
        "fullcodeline": "_this->m_server->Win8HelperEnabled(),"
    },
    {
        "line": 203,
        "fullcodeline": "_this->m_server->RemoveWallpaperEnabled(),"
    },
    {
        "line": 208,
        "fullcodeline": "switch (_this->m_server->LockSettings()) {"
    },
    {
        "line": 224,
        "fullcodeline": "switch (_this->m_server->getNotificationSelection()) {"
    },
    {
        "line": 239,
        "fullcodeline": "switch (_this->m_server->ConnectPriority()) {"
    },
    {
        "line": 260,
        "fullcodeline": "switch (_this->m_server->QueryAccept()) {"
    },
    {
        "line": 276,
        "fullcodeline": "switch (_this->m_server->getMaxViewerSetting()) {"
    },
    {
        "line": 294,
        "fullcodeline": "_this->m_server->getCollabo(),"
    },
    {
        "line": 300,
        "fullcodeline": "_this->m_server->getFrame(),"
    },
    {
        "line": 306,
        "fullcodeline": "_this->m_server->getNotification(),"
    },
    {
        "line": 312,
        "fullcodeline": "_this->m_server->getOSD(),"
    },
    {
        "line": 323,
        "fullcodeline": "if (!nPlugins)"
    },
    {
        "line": 752,
        "fullcodeline": "EndDialog(hwnd, IDCANCEL);"
    },
    {
        "line": 24,
        "fullcodeline": "_this->Load(_this->m_usersettings);"
    },
    {
        "line": 56,
        "fullcodeline": "SetFocus(GetDlgItem(hwnd, IDC_PASSWORD));"
    },
    {
        "line": 57,
        "fullcodeline": "SendDlgItemMessage(hwnd, IDC_PASSWORD, EM_SETSEL, 0, (LPARAM)-1);"
    },
    {
        "line": 80,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_BLANK, \"Enable Blank Monitor on Viewer Request require Min Win10 build 19041 \");"
    },
    {
        "line": 82,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_BLANK, \"Enable Blank Monitor on Viewer Not supported on windows 8 \");"
    },
    {
        "line": 122,
        "fullcodeline": "CheckDlgButton(hwnd, IDC_LOG, BST_CHECKED);"
    },
    {
        "line": 132,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_EDIT_PATH, vnclog.GetPath());"
    },
    {
        "line": 134,
        "fullcodeline": "CheckDlgButton(hwnd, IDC_VIDEO, BST_CHECKED);"
    },
    {
        "line": 210,
        "fullcodeline": "hLockSetting = GetDlgItem(hwnd, IDC_LOCKSETTING_LOCK);"
    },
    {
        "line": 213,
        "fullcodeline": "hLockSetting = GetDlgItem(hwnd, IDC_LOCKSETTING_LOGOFF);"
    },
    {
        "line": 216,
        "fullcodeline": "hLockSetting = GetDlgItem(hwnd, IDC_LOCKSETTING_NOTHING);"
    },
    {
        "line": 226,
        "fullcodeline": "hNotificationSelection = GetDlgItem(hwnd, IDC_RADIONOTIFICATIONIFPROVIDED);"
    },
    {
        "line": 229,
        "fullcodeline": "hNotificationSelection = GetDlgItem(hwnd,"
    },
    {
        "line": 241,
        "fullcodeline": "hmvSetting = GetDlgItem(hwnd, IDC_MV1);"
    },
    {
        "line": 244,
        "fullcodeline": "hmvSetting = GetDlgItem(hwnd, IDC_MV2);"
    },
    {
        "line": 247,
        "fullcodeline": "hmvSetting = GetDlgItem(hwnd, IDC_MV3);"
    },
    {
        "line": 250,
        "fullcodeline": "hmvSetting = GetDlgItem(hwnd, IDC_MV4);"
    },
    {
        "line": 262,
        "fullcodeline": "hQuerySetting = GetDlgItem(hwnd, IDC_DREFUSE);"
    },
    {
        "line": 265,
        "fullcodeline": "hQuerySetting = GetDlgItem(hwnd, IDC_DACCEPT);"
    },
    {
        "line": 268,
        "fullcodeline": "hQuerySetting = GetDlgItem(hwnd, IDC_DREFUSE);"
    },
    {
        "line": 278,
        "fullcodeline": "hMaxViewerSetting = GetDlgItem(hwnd, IDC_MAXREFUSE);"
    },
    {
        "line": 281,
        "fullcodeline": "hMaxViewerSetting = GetDlgItem(hwnd, IDC_MAXDISCONNECT);"
    },
    {
        "line": 284,
        "fullcodeline": "hMaxViewerSetting = GetDlgItem(hwnd, IDC_MAXREFUSE);"
    },
    {
        "line": 325,
        "fullcodeline": "SendMessage(hPlugins, CB_ADDSTRING, 0, (LPARAM) sz_ID_NO_PLUGIN_DETECT);"
    },
    {
        "line": 326,
        "fullcodeline": "SendMessage(hPlugins, CB_SETCURSEL, 0, 0);"
    },
    {
        "line": 370,
        "fullcodeline": "_this->ExpandBox(hwnd, !_this->m_bExpanded);"
    },
    {
        "line": 377,
        "fullcodeline": "char path[512];"
    },
    {
        "line": 378,
        "fullcodeline": "int lenpath = GetDlgItemText(hwnd, IDC_EDIT_PATH, (LPSTR) &path, 512);"
    },
    {
        "line": 388,
        "fullcodeline": "bool Secure_old = _this->m_server->Secure();"
    },
    {
        "line": 389,
        "fullcodeline": "HWND hSecure = GetDlgItem(hwnd, IDC_SAVEPASSWORDSECURE);"
    },
    {
        "line": 390,
        "fullcodeline": "_this->m_server->Secure(SendMessage(hSecure, BM_GETCHECK, 0, 0) == BST_CHECKED);"
    },
    {
        "line": 393,
        "fullcodeline": "char passwd[MAXPWLEN+1];"
    },
    {
        "line": 394,
        "fullcodeline": "char passwd2[MAXPWLEN+1];"
    },
    {
        "line": 395,
        "fullcodeline": "memset(passwd, '\\0', MAXPWLEN + 1); //PGM"
    },
    {
        "line": 396,
        "fullcodeline": "memset(passwd2, '\\0', MAXPWLEN + 1); //PGM"
    },
    {
        "line": 398,
        "fullcodeline": "int lenPassword = GetDlgItemText(hwnd, IDC_PASSWORD, (LPSTR) &passwd, MAXPWLEN+1);"
    },
    {
        "line": 399,
        "fullcodeline": "int lenPassword2 = GetDlgItemText(hwnd, IDC_PASSWORD2, (LPSTR)&passwd2, MAXPWLEN + 1); //PGM"
    },
    {
        "line": 401,
        "fullcodeline": "bool bSecure = _this->m_server->Secure() ? true : false;"
    },
    {
        "line": 456,
        "fullcodeline": "int state = (int)SendDlgItemMessage(hwnd, IDC_PORTNO_AUTO, BM_GETCHECK, 0, 0);"
    },
    {
        "line": 457,
        "fullcodeline": "_this->m_server->SetAutoPortSelect(state == BST_CHECKED);"
    },
    {
        "line": 478,
        "fullcodeline": "HWND hConnectSock = GetDlgItem(hwnd, IDC_CONNECT_SOCK);"
    },
    {
        "line": 479,
        "fullcodeline": "_this->m_server->SockConnect("
    },
    {
        "line": 489,
        "fullcodeline": "HWND hConnectHTTP = GetDlgItem(hwnd, IDC_CONNECT_HTTP);"
    },
    {
        "line": 490,
        "fullcodeline": "_this->m_server->EnableHTTPConnect("
    },
    {
        "line": 495,
        "fullcodeline": "HWND hEnableRemoteInputs = GetDlgItem(hwnd, IDC_DISABLE_INPUTS);"
    },
    {
        "line": 496,
        "fullcodeline": "_this->m_server->EnableRemoteInputs("
    },
    {
        "line": 501,
        "fullcodeline": "HWND hDisableLocalInputs = GetDlgItem(hwnd, IDC_DISABLE_LOCAL_INPUTS);"
    },
    {
        "line": 502,
        "fullcodeline": "_this->m_server->DisableLocalInputs("
    },
    {
        "line": 507,
        "fullcodeline": "HWND hJapInputs = GetDlgItem(hwnd, IDC_JAP_INPUTS);"
    },
    {
        "line": 508,
        "fullcodeline": "_this->m_server->EnableJapInput("
    },
    {
        "line": 513,
        "fullcodeline": "HWND hUnicodeInputs = GetDlgItem(hwnd, IDC_UNICODE_INPUTS);"
    },
    {
        "line": 514,
        "fullcodeline": "_this->m_server->EnableUnicodeInput("
    },
    {
        "line": 518,
        "fullcodeline": "HWND hwinhelper = GetDlgItem(hwnd, IDC_WIN8_HELPER);"
    },
    {
        "line": 519,
        "fullcodeline": "_this->m_server->Win8HelperEnabled("
    },
    {
        "line": 524,
        "fullcodeline": "HWND hRemoveWallpaper = GetDlgItem(hwnd, IDC_REMOVE_WALLPAPER);"
    },
    {
        "line": 525,
        "fullcodeline": "_this->m_server->EnableRemoveWallpaper("
    },
    {
        "line": 566,
        "fullcodeline": "char maxViewerChar[256];"
    },
    {
        "line": 567,
        "fullcodeline": "strcpy_s(maxViewerChar, \"128\");"
    },
    {
        "line": 577,
        "fullcodeline": "HWND hCollabo = GetDlgItem(hwnd, IDC_COLLABO);"
    },
    {
        "line": 578,
        "fullcodeline": "_this->m_server->setCollabo("
    },
    {
        "line": 582,
        "fullcodeline": "HWND hwndDlg = GetDlgItem(hwnd, IDC_FRAME);"
    },
    {
        "line": 583,
        "fullcodeline": "_this->m_server->setFrame("
    },
    {
        "line": 587,
        "fullcodeline": "hwndDlg = GetDlgItem(hwnd, IDC_NOTIFOCATION);"
    },
    {
        "line": 588,
        "fullcodeline": "_this->m_server->setNotification("
    },
    {
        "line": 592,
        "fullcodeline": "hwndDlg = GetDlgItem(hwnd, IDC_OSD);"
    },
    {
        "line": 593,
        "fullcodeline": "_this->m_server->setOSD("
    },
    {
        "line": 613,
        "fullcodeline": "HWND hFileTransfer = GetDlgItem(hwnd, IDC_FILETRANSFER);"
    },
    {
        "line": 614,
        "fullcodeline": "_this->m_server->EnableFileTransfer(SendMessage(hFileTransfer, BM_GETCHECK, 0, 0) == BST_CHECKED);"
    },
    {
        "line": 616,
        "fullcodeline": "HWND hFileTransferUserImp = GetDlgItem(hwnd, IDC_FTUSERIMPERSONATION_CHECK);"
    },
    {
        "line": 617,
        "fullcodeline": "_this->m_server->FTUserImpersonation(SendMessage(hFileTransferUserImp, BM_GETCHECK, 0, 0) == BST_CHECKED);"
    },
    {
        "line": 619,
        "fullcodeline": "HWND hBlank = GetDlgItem(hwnd, IDC_BLANK);"
    },
    {
        "line": 620,
        "fullcodeline": "_this->m_server->BlankMonitorEnabled(SendMessage(hBlank, BM_GETCHECK, 0, 0) == BST_CHECKED);"
    },
    {
        "line": 621,
        "fullcodeline": "HWND hBlank2 = GetDlgItem(hwnd, IDC_BLANK2); //PGM"
    },
    {
        "line": 622,
        "fullcodeline": "_this->m_server->BlankInputsOnly(SendMessage(hBlank2, BM_GETCHECK, 0, 0) == BST_CHECKED); //PGM"
    },
    {
        "line": 624,
        "fullcodeline": "_this->m_server->SetLoopbackOk(IsDlgButtonChecked(hwnd, IDC_ALLOWLOOPBACK));"
    },
    {
        "line": 628,
        "fullcodeline": "_this->m_server->SetLoopbackOnly(IsDlgButtonChecked(hwnd, IDC_LOOPBACKONLY));"
    },
    {
        "line": 630,
        "fullcodeline": "_this->m_server->SetDisableTrayIcon(IsDlgButtonChecked(hwnd, IDC_DISABLETRAY));"
    },
    {
        "line": 631,
        "fullcodeline": "_this->m_server->SetRdpmode(IsDlgButtonChecked(hwnd, IDC_RDPMODE));"
    },
    {
        "line": 632,
        "fullcodeline": "_this->m_server->SetNoScreensaver(IsDlgButtonChecked(hwnd, IDC_NOSCREENSAVER));"
    },
    {
        "line": 633,
        "fullcodeline": "_this->m_allowshutdown=!IsDlgButtonChecked(hwnd, IDC_ALLOWSHUTDOWN);"
    },
    {
        "line": 634,
        "fullcodeline": "_this->m_alloweditclients=!IsDlgButtonChecked(hwnd, IDC_ALLOWEDITCLIENTS);"
    },
    {
        "line": 635,
        "fullcodeline": "_this->m_server->SetAllowEditClients(_this->m_alloweditclients);"
    },
    {
        "line": 657,
        "fullcodeline": "HWND hMSLogon = GetDlgItem(hwnd, IDC_MSLOGON_CHECKD);"
    },
    {
        "line": 658,
        "fullcodeline": "_this->m_server->RequireMSLogon(SendMessage(hMSLogon, BM_GETCHECK, 0, 0) == BST_CHECKED);"
    },
    {
        "line": 660,
        "fullcodeline": "HWND hNewMSLogon = GetDlgItem(hwnd, IDC_NEW_MSLOGON);"
    },
    {
        "line": 661,
        "fullcodeline": "_this->m_server->SetNewMSLogon(SendMessage(hNewMSLogon, BM_GETCHECK, 0, 0) == BST_CHECKED);"
    },
    {
        "line": 664,
        "fullcodeline": "HWND hReverseAuth = GetDlgItem(hwnd, IDC_REVERSEAUTH);"
    },
    {
        "line": 665,
        "fullcodeline": "_this->m_server->SetReverseAuthRequired(SendMessage(hReverseAuth, BM_GETCHECK, 0, 0) == BST_CHECKED);"
    },
    {
        "line": 667,
        "fullcodeline": "int nDScale = GetDlgItemInt(hwnd, IDC_SCALE, NULL, FALSE);"
    },
    {
        "line": 669,
        "fullcodeline": "_this->m_server->SetDefaultScale(nDScale);"
    },
    {
        "line": 691,
        "fullcodeline": "_this->m_server->SetDSMPluginConfig(_this->m_pref_DSMPluginConfig);"
    },
    {
        "line": 694,
        "fullcodeline": "char timeout[256];"
    },
    {
        "line": 695,
        "fullcodeline": "strcpy_s(timeout,\"5\");"
    },
    {
        "line": 701,
        "fullcodeline": "char disabletime[256];"
    },
    {
        "line": 702,
        "fullcodeline": "strcpy_s(disabletime,\"5\");"
    },
    {
        "line": 708,
        "fullcodeline": "GetDlgItemText(hwnd, IDC_SERVICE_COMMANDLINE, _this->service_commandline, 1024);"
    },
    {
        "line": 709,
        "fullcodeline": "GetDlgItemText(hwnd, IDC_EDITQUERYTEXT, _this->accept_reject_mesg, 512);"
    },
    {
        "line": 712,
        "fullcodeline": "HWND hQuery = GetDlgItem(hwnd, IDQUERY);"
    },
    {
        "line": 713,
        "fullcodeline": "_this->m_server->SetQuerySetting((SendMessage(hQuery, BM_GETCHECK, 0, 0) == BST_CHECKED) ? 4 : 2);"
    },
    {
        "line": 748,
        "fullcodeline": "vnclog.Print(LL_INTINFO, VNCLOG(\"enddialog (CANCEL)\\n\"));"
    },
    {
        "line": 760,
        "fullcodeline": "HWND hBlank = ::GetDlgItem(hwnd, IDC_BLANK);"
    },
    {
        "line": 761,
        "fullcodeline": "HWND hBlank2 = ::GetDlgItem(hwnd, IDC_BLANK2); //PGM"
    },
    {
        "line": 798,
        "fullcodeline": "BOOL bConnectSock ="
    },
    {
        "line": 802,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PASSWORD), bConnectSock);"
    },
    {
        "line": 804,
        "fullcodeline": "HWND hPortNoAuto = GetDlgItem(hwnd, IDC_PORTNO_AUTO);"
    },
    {
        "line": 805,
        "fullcodeline": "EnableWindow(hPortNoAuto, bConnectSock);"
    },
    {
        "line": 806,
        "fullcodeline": "HWND hSpecDisplay = GetDlgItem(hwnd, IDC_SPECDISPLAY);"
    },
    {
        "line": 807,
        "fullcodeline": "EnableWindow(hSpecDisplay, bConnectSock);"
    },
    {
        "line": 808,
        "fullcodeline": "HWND hSpecPort = GetDlgItem(hwnd, IDC_SPECPORT);"
    },
    {
        "line": 809,
        "fullcodeline": "EnableWindow(hSpecPort, bConnectSock);"
    },
    {
        "line": 823,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_DISPLAYNO), FALSE);"
    },
    {
        "line": 824,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PORTRFB), FALSE);"
    },
    {
        "line": 827,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_DISPLAYNO, \"\");"
    },
    {
        "line": 828,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_PORTRFB, \"\");"
    },
    {
        "line": 835,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_DISPLAYNO), TRUE);"
    },
    {
        "line": 836,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PORTRFB), FALSE);"
    },
    {
        "line": 837,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PORTHTTP), FALSE);"
    },
    {
        "line": 839,
        "fullcodeline": "int display = PORT_TO_DISPLAY(_this->m_server->GetPort());"
    },
    {
        "line": 842,
        "fullcodeline": "SetDlgItemInt(hwnd, IDC_DISPLAYNO, display, FALSE);"
    },
    {
        "line": 843,
        "fullcodeline": "SetDlgItemInt(hwnd, IDC_PORTRFB, _this->m_server->GetPort(), FALSE);"
    },
    {
        "line": 844,
        "fullcodeline": "SetDlgItemInt(hwnd, IDC_PORTHTTP, _this->m_server->GetHttpPort(), FALSE);"
    },
    {
        "line": 854,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_DISPLAYNO), FALSE);"
    },
    {
        "line": 855,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PORTRFB), TRUE);"
    },
    {
        "line": 856,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PORTHTTP), TRUE);"
    },
    {
        "line": 858,
        "fullcodeline": "int d1 = PORT_TO_DISPLAY(_this->m_server->GetPort());"
    },
    {
        "line": 859,
        "fullcodeline": "int d2 = HPORT_TO_DISPLAY(_this->m_server->GetHttpPort());"
    },
    {
        "line": 865,
        "fullcodeline": "SetDlgItemInt(hwnd, IDC_PORTRFB, _this->m_server->GetPort(), FALSE);"
    },
    {
        "line": 866,
        "fullcodeline": "SetDlgItemInt(hwnd, IDC_PORTHTTP, _this->m_server->GetHttpPort(), FALSE);"
    },
    {
        "line": 877,
        "fullcodeline": "HWND hQuery = GetDlgItem(hwnd, IDQUERY);"
    },
    {
        "line": 878,
        "fullcodeline": "BOOL queryon = (SendMessage(hQuery, BM_GETCHECK, 0, 0) == BST_CHECKED);"
    },
    {
        "line": 879,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDQUERYTIMEOUT), queryon);"
    },
    {
        "line": 880,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_QUERYDISABLETIME), queryon);"
    },
    {
        "line": 881,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_DREFUSE), queryon);"
    },
    {
        "line": 888,
        "fullcodeline": "vncConnDialog *newconn = new vncConnDialog(_this->m_server);"
    },
    {
        "line": 908,
        "fullcodeline": "BOOL bMSLogonChecked ="
    },
    {
        "line": 912,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_NEW_MSLOGON), bMSLogonChecked);"
    },
    {
        "line": 978,
        "fullcodeline": "HWND hPlugin = GetDlgItem(hwnd, IDC_PLUGIN_CHECK);"
    },
    {
        "line": 35,
        "fullcodeline": "_this->LoadFromIniFile();"
    },
    {
        "line": 60,
        "fullcodeline": "SetFocus(hConnectSock);"
    },
    {
        "line": 124,
        "fullcodeline": "CheckDlgButton(hwnd, IDC_LOG, BST_UNCHECKED);"
    },
    {
        "line": 138,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_EDIT_PATH, vnclog.GetPath());"
    },
    {
        "line": 140,
        "fullcodeline": "CheckDlgButton(hwnd, IDC_VIDEO, BST_UNCHECKED);"
    },
    {
        "line": 329,
        "fullcodeline": "SendMessage(hPlugins, CB_SELECTSTRING, 0, (LPARAM)_this->m_server->GetDSMPluginName());"
    },
    {
        "line": 402,
        "fullcodeline": "if (Secure_old != bSecure) {"
    },
    {
        "line": 433,
        "fullcodeline": "if (strcmp(passwd2, \"~~~~~~~~\") != 0) { //PGM"
    },
    {
        "line": 480,
        "fullcodeline": "SendMessage(hConnectSock, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 484,
        "fullcodeline": "if (LOWORD(wParam) == IDC_APPLY)"
    },
    {
        "line": 491,
        "fullcodeline": "SendMessage(hConnectHTTP, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 497,
        "fullcodeline": "SendMessage(hEnableRemoteInputs, BM_GETCHECK, 0, 0) != BST_CHECKED"
    },
    {
        "line": 503,
        "fullcodeline": "SendMessage(hDisableLocalInputs, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 509,
        "fullcodeline": "SendMessage(hJapInputs, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 515,
        "fullcodeline": "SendMessage(hUnicodeInputs, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 520,
        "fullcodeline": "SendMessage(hwinhelper, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 526,
        "fullcodeline": "SendMessage(hRemoveWallpaper, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 530,
        "fullcodeline": "if (SendMessage(GetDlgItem(hwnd, IDC_LOCKSETTING_LOCK), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 540,
        "fullcodeline": "if (SendMessage(GetDlgItem(hwnd, IDC_RADIONOTIFICATIONON), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 549,
        "fullcodeline": "if (SendMessage(GetDlgItem(hwnd, IDC_DREFUSE), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 557,
        "fullcodeline": "if (SendMessage(GetDlgItem(hwnd, IDC_MAXREFUSE), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 579,
        "fullcodeline": "SendMessage(hCollabo, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 584,
        "fullcodeline": "SendMessage(hwndDlg, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 589,
        "fullcodeline": "SendMessage(hwndDlg, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 594,
        "fullcodeline": "SendMessage(hwndDlg, BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 597,
        "fullcodeline": "if (SendMessage(GetDlgItem(hwnd, IDC_MV1), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 636,
        "fullcodeline": "if (IsDlgButtonChecked(hwnd, IDC_LOG))"
    },
    {
        "line": 645,
        "fullcodeline": "if (IsDlgButtonChecked(hwnd, IDC_VIDEO))"
    },
    {
        "line": 673,
        "fullcodeline": "if (SendMessage(GetDlgItem(hwnd, IDC_PLUGIN_CHECK), BM_GETCHECK, 0, 0) == BST_CHECKED)"
    },
    {
        "line": 731,
        "fullcodeline": "if (LOWORD(wParam) == IDOK)"
    },
    {
        "line": 762,
        "fullcodeline": "::EnableWindow(hBlank2, ::SendMessage(hBlank, BM_GETCHECK, 0, 0) == BST_CHECKED); //PGM"
    },
    {
        "line": 769,
        "fullcodeline": "HWND hBlank = ::GetDlgItem(hwnd, IDC_BLANK2); //PGM"
    },
    {
        "line": 775,
        "fullcodeline": "if (IsDlgButtonChecked(hwnd, IDC_VIDEO))"
    },
    {
        "line": 799,
        "fullcodeline": "(SendDlgItemMessage(hwnd, IDC_CONNECT_SOCK,"
    },
    {
        "line": 811,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_DISPLAYNO), bConnectSock &&"
    },
    {
        "line": 813,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PORTRFB), bConnectSock &&"
    },
    {
        "line": 815,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PORTHTTP), bConnectSock &&"
    },
    {
        "line": 825,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PORTHTTP), FALSE);"
    },
    {
        "line": 847,
        "fullcodeline": "SetFocus(GetDlgItem(hwnd, IDC_DISPLAYNO));"
    },
    {
        "line": 848,
        "fullcodeline": "SendDlgItemMessage(hwnd, IDC_DISPLAYNO, EM_SETSEL, 0, (LPARAM)-1);"
    },
    {
        "line": 869,
        "fullcodeline": "SetFocus(GetDlgItem(hwnd, IDC_PORTRFB));"
    },
    {
        "line": 870,
        "fullcodeline": "SendDlgItemMessage(hwnd, IDC_PORTRFB, EM_SETSEL, 0, (LPARAM)-1);"
    },
    {
        "line": 882,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_DACCEPT), queryon);"
    },
    {
        "line": 899,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_PLUGIN_BUTTON), _this->m_server->AuthClientCount() == 0"
    },
    {
        "line": 909,
        "fullcodeline": "(SendDlgItemMessage(hwnd, IDC_MSLOGON_CHECKD,"
    },
    {
        "line": 913,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_MSLOGON), bMSLogonChecked);"
    },
    {
        "line": 923,
        "fullcodeline": "(SendDlgItemMessage(hwnd, IDC_NEW_MSLOGON,"
    },
    {
        "line": 28,
        "fullcodeline": "SetWindowText(hwnd, sz_ID_CURRENT_USER_PROP);"
    },
    {
        "line": 381,
        "fullcodeline": "vnclog.SetPath(path);"
    },
    {
        "line": 405,
        "fullcodeline": "char password[MAXPWLEN];"
    },
    {
        "line": 406,
        "fullcodeline": "char password2[MAXPWLEN];"
    },
    {
        "line": 407,
        "fullcodeline": "_this->m_server->GetPassword(password);"
    },
    {
        "line": 408,
        "fullcodeline": "vncPasswd::ToText plain(password, Secure_old);"
    },
    {
        "line": 409,
        "fullcodeline": "_this->m_server->GetPassword2(password2);"
    },
    {
        "line": 411,
        "fullcodeline": "memset(passwd, '\\0', MAXPWLEN + 1); //PGM"
    },
    {
        "line": 412,
        "fullcodeline": "memset(passwd2, '\\0', MAXPWLEN + 1); //PGM"
    },
    {
        "line": 413,
        "fullcodeline": "strcpy_s(passwd,plain);"
    },
    {
        "line": 414,
        "fullcodeline": "strcpy_s(passwd2, plain2);"
    },
    {
        "line": 415,
        "fullcodeline": "lenPassword = (int)strlen(passwd);"
    },
    {
        "line": 416,
        "fullcodeline": "lenPassword2 = (int)strlen(passwd2);"
    },
    {
        "line": 419,
        "fullcodeline": "if (strcmp(passwd, \"~~~~~~~~\") != 0) {"
    },
    {
        "line": 448,
        "fullcodeline": "if (strcmp(passwd, \"~~~~~~~~\") != 0 && strcmp(passwd2, \"~~~~~~~~\") != 0) {"
    },
    {
        "line": 460,
        "fullcodeline": "if (!_this->m_server->AutoPortSelect()) {"
    },
    {
        "line": 485,
        "fullcodeline": "_this->InitPortSettings(hwnd);"
    },
    {
        "line": 532,
        "fullcodeline": "_this->m_server->SetLockSettings(1);"
    },
    {
        "line": 542,
        "fullcodeline": "_this->m_server->setNotificationSelection(0);"
    },
    {
        "line": 551,
        "fullcodeline": "_this->m_server->SetQueryAccept(0);"
    },
    {
        "line": 559,
        "fullcodeline": "_this->m_server->setMaxViewerSetting(0);"
    },
    {
        "line": 568,
        "fullcodeline": "if (GetDlgItemText(hwnd, IDC_MAXVIEWERS, (LPSTR)&maxViewerChar, 256) == 0) {"
    },
    {
        "line": 569,
        "fullcodeline": "int value = atoi(maxViewerChar);"
    },
    {
        "line": 572,
        "fullcodeline": "_this->m_server->setMaxViewers(value);"
    },
    {
        "line": 599,
        "fullcodeline": "_this->m_server->SetConnectPriority(0);"
    },
    {
        "line": 638,
        "fullcodeline": "vnclog.SetMode(2);"
    },
    {
        "line": 639,
        "fullcodeline": "vnclog.SetLevel(10);"
    },
    {
        "line": 647,
        "fullcodeline": "vnclog.SetVideo(true);"
    },
    {
        "line": 668,
        "fullcodeline": "if (nDScale < 1 || nDScale > 9) nDScale = 1;"
    },
    {
        "line": 675,
        "fullcodeline": "TCHAR szPlugin[MAX_PATH];"
    },
    {
        "line": 676,
        "fullcodeline": "GetDlgItemText(hwnd, IDC_PLUGINS_COMBO, szPlugin, MAX_PATH);"
    },
    {
        "line": 677,
        "fullcodeline": "_this->m_server->SetDSMPluginName(szPlugin);"
    },
    {
        "line": 678,
        "fullcodeline": "_this->m_server->EnableDSMPlugin(true);"
    },
    {
        "line": 696,
        "fullcodeline": "if (GetDlgItemText(hwnd, IDQUERYTIMEOUT, (LPSTR) &timeout, 256) == 0)"
    },
    {
        "line": 697,
        "fullcodeline": "_this->m_server->SetQueryTimeout(atoi(timeout));"
    },
    {
        "line": 703,
        "fullcodeline": "if (GetDlgItemText(hwnd, IDC_QUERYDISABLETIME, (LPSTR) &disabletime, 256) == 0)"
    },
    {
        "line": 704,
        "fullcodeline": "_this->m_server->SetQueryDisableTime(atoi(disabletime));"
    },
    {
        "line": 812,
        "fullcodeline": "(SendMessage(hSpecDisplay, BM_GETCHECK, 0, 0) == BST_CHECKED));"
    },
    {
        "line": 814,
        "fullcodeline": "(SendMessage(hSpecPort, BM_GETCHECK, 0, 0) == BST_CHECKED));"
    },
    {
        "line": 816,
        "fullcodeline": "(SendMessage(hSpecPort, BM_GETCHECK, 0, 0) == BST_CHECKED));"
    },
    {
        "line": 840,
        "fullcodeline": "if (display < 0 || display > 99)"
    },
    {
        "line": 841,
        "fullcodeline": "display = 0;"
    },
    {
        "line": 860,
        "fullcodeline": "if (d1 == d2 && d1 >= 0 && d1 <= 99) {"
    },
    {
        "line": 861,
        "fullcodeline": "SetDlgItemInt(hwnd, IDC_DISPLAYNO, d1, FALSE);"
    },
    {
        "line": 900,
        "fullcodeline": "? SendMessage(GetDlgItem(hwnd, IDC_PLUGIN_CHECK), BM_GETCHECK, 0, 0) == BST_CHECKED"
    },
    {
        "line": 928,
        "fullcodeline": "DWORD id = vncService::GetExplorerLogonPid();"
    },
    {
        "line": 979,
        "fullcodeline": "if (SendMessage(hPlugin, BM_GETCHECK, 0, 0) == BST_CHECKED)"
    },
    {
        "line": 981,
        "fullcodeline": "TCHAR szPlugin[MAX_PATH];"
    },
    {
        "line": 982,
        "fullcodeline": "GetDlgItemText(hwnd, IDC_PLUGINS_COMBO, szPlugin, MAX_PATH);"
    },
    {
        "line": 983,
        "fullcodeline": "PathStripPathA(szPlugin);"
    },
    {
        "line": 30,
        "fullcodeline": "SetWindowText(hwnd, sz_ID_DEFAULT_SYST_PROP);"
    },
    {
        "line": 385,
        "fullcodeline": "strcpy_s(path,\"\");"
    },
    {
        "line": 386,
        "fullcodeline": "vnclog.SetPath(path);"
    },
    {
        "line": 461,
        "fullcodeline": "if ( SendDlgItemMessage(hwnd, IDC_SPECDISPLAY,"
    },
    {
        "line": 570,
        "fullcodeline": "if (value > 128)"
    },
    {
        "line": 575,
        "fullcodeline": "_this->m_server->setMaxViewers(atoi(maxViewerChar));"
    },
    {
        "line": 643,
        "fullcodeline": "vnclog.SetMode(0);"
    },
    {
        "line": 651,
        "fullcodeline": "vnclog.SetVideo(false);"
    },
    {
        "line": 682,
        "fullcodeline": "_this->m_server->EnableDSMPlugin(false);"
    },
    {
        "line": 699,
        "fullcodeline": "_this->m_server->SetQueryTimeout(atoi(timeout));"
    },
    {
        "line": 706,
        "fullcodeline": "_this->m_server->SetQueryDisableTime(atoi(disabletime));"
    },
    {
        "line": 725,
        "fullcodeline": "_this->Save();"
    },
    {
        "line": 734,
        "fullcodeline": "vnclog.Print(LL_INTINFO, VNCLOG(\"enddialog (OK)\\n\"));"
    },
    {
        "line": 777,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_EDIT_PATH), true);"
    },
    {
        "line": 863,
        "fullcodeline": "SetDlgItemText(hwnd, IDC_DISPLAYNO, \"\");"
    },
    {
        "line": 929,
        "fullcodeline": "if (id!=0)"
    },
    {
        "line": 965,
        "fullcodeline": "_this->m_vncauth.Init(_this->m_server);"
    },
    {
        "line": 966,
        "fullcodeline": "_this->m_vncauth.SetTemp(_this->m_Tempfile);"
    },
    {
        "line": 967,
        "fullcodeline": "_this->m_vncauth.Show(TRUE);"
    },
    {
        "line": 423,
        "fullcodeline": "_this->m_server->SetPassword(crypt);"
    },
    {
        "line": 437,
        "fullcodeline": "_this->m_server->SetPassword2(crypt2); //PGM"
    },
    {
        "line": 449,
        "fullcodeline": "if (strcmp(passwd,passwd2)==0)"
    },
    {
        "line": 451,
        "fullcodeline": "MessageBox(NULL,\"View only and full password are the same\\nView only ignored\",\"Warning\",0);"
    },
    {
        "line": 465,
        "fullcodeline": "UINT display = GetDlgItemInt(hwnd, IDC_DISPLAYNO, &ok, TRUE);"
    },
    {
        "line": 533,
        "fullcodeline": "} else if (SendMessage(GetDlgItem(hwnd, IDC_LOCKSETTING_LOGOFF), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 544,
        "fullcodeline": "else if (SendMessage(GetDlgItem(hwnd, IDC_RADIONOTIFICATIONIFPROVIDED), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 552,
        "fullcodeline": "} else if (SendMessage(GetDlgItem(hwnd, IDC_DACCEPT), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 561,
        "fullcodeline": "else if (SendMessage(GetDlgItem(hwnd, IDC_MAXDISCONNECT), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 571,
        "fullcodeline": "value = 128;"
    },
    {
        "line": 600,
        "fullcodeline": "} else if (SendMessage(GetDlgItem(hwnd, IDC_MV2), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 727,
        "fullcodeline": "_this->SaveToIniFile();"
    },
    {
        "line": 782,
        "fullcodeline": "EnableWindow(GetDlgItem(hwnd, IDC_EDIT_PATH), false);"
    },
    {
        "line": 931,
        "fullcodeline": "hProcess = OpenProcess(MAXIMUM_ALLOWED,FALSE,id);"
    },
    {
        "line": 937,
        "fullcodeline": "char dir[MAX_PATH];"
    },
    {
        "line": 938,
        "fullcodeline": "char exe_file_name[MAX_PATH];"
    },
    {
        "line": 939,
        "fullcodeline": "GetModuleFileName(0, exe_file_name, MAX_PATH);"
    },
    {
        "line": 940,
        "fullcodeline": "strcpy_s(dir, exe_file_name);"
    },
    {
        "line": 941,
        "fullcodeline": "strcat_s(dir, \" -securityeditorhelper\");"
    },
    {
        "line": 985,
        "fullcodeline": "if (!_this->m_server->GetDSMPluginPointer()->IsLoaded())"
    },
    {
        "line": 986,
        "fullcodeline": "_this->m_server->GetDSMPluginPointer()->LoadPlugin(szPlugin, false);"
    },
    {
        "line": 999,
        "fullcodeline": "if (_this->m_server->GetDSMPluginPointer()->IsLoaded())"
    },
    {
        "line": 422,
        "fullcodeline": "vncPasswd::FromClear crypt(_this->m_server->Secure());"
    },
    {
        "line": 427,
        "fullcodeline": "vncPasswd::FromText crypt(passwd, _this->m_server->Secure());"
    },
    {
        "line": 428,
        "fullcodeline": "_this->m_server->SetPassword(crypt);"
    },
    {
        "line": 436,
        "fullcodeline": "vncPasswd::FromClear crypt2(_this->m_server->Secure()); //PGM"
    },
    {
        "line": 441,
        "fullcodeline": "vncPasswd::FromText crypt2(passwd2, _this->m_server->Secure()); //PGM"
    },
    {
        "line": 442,
        "fullcodeline": "_this->m_server->SetPassword2(crypt2); //PGM"
    },
    {
        "line": 472,
        "fullcodeline": "UINT port_rfb = GetDlgItemInt(hwnd, IDC_PORTRFB, &ok1, TRUE);"
    },
    {
        "line": 473,
        "fullcodeline": "UINT port_http = GetDlgItemInt(hwnd, IDC_PORTHTTP, &ok2, TRUE);"
    },
    {
        "line": 535,
        "fullcodeline": "_this->m_server->SetLockSettings(2);"
    },
    {
        "line": 546,
        "fullcodeline": "_this->m_server->setNotificationSelection(1);"
    },
    {
        "line": 554,
        "fullcodeline": "_this->m_server->SetQueryAccept(1);"
    },
    {
        "line": 563,
        "fullcodeline": "_this->m_server->setMaxViewerSetting(1);"
    },
    {
        "line": 602,
        "fullcodeline": "_this->m_server->SetConnectPriority(1);"
    },
    {
        "line": 683,
        "fullcodeline": "if (_this->m_server->GetDSMPluginPointer()->IsLoaded())"
    },
    {
        "line": 932,
        "fullcodeline": "if (!hProcess) goto error;"
    },
    {
        "line": 946,
        "fullcodeline": "ZeroMemory(&StartUPInfo,sizeof(STARTUPINFO));"
    },
    {
        "line": 947,
        "fullcodeline": "ZeroMemory(&ProcessInfo,sizeof(PROCESS_INFORMATION));"
    },
    {
        "line": 948,
        "fullcodeline": "StartUPInfo.wShowWindow = SW_SHOW;"
    },
    {
        "line": 949,
        "fullcodeline": "StartUPInfo.lpDesktop = \"Winsta0\\\\Default\";"
    },
    {
        "line": 950,
        "fullcodeline": "StartUPInfo.cb = sizeof(STARTUPINFO);"
    },
    {
        "line": 952,
        "fullcodeline": "CreateProcessAsUser(hPToken,NULL,dir,NULL,NULL,FALSE,DETACHED_PROCESS,NULL,NULL,&StartUPInfo,&ProcessInfo);"
    },
    {
        "line": 953,
        "fullcodeline": "DWORD errorcode=GetLastError();"
    },
    {
        "line": 1005,
        "fullcodeline": "MessageBoxSecure(NULL,"
    },
    {
        "line": 467,
        "fullcodeline": "_this->m_server->SetPorts(DISPLAY_TO_PORT(display),"
    },
    {
        "line": 537,
        "fullcodeline": "_this->m_server->SetLockSettings(0);"
    },
    {
        "line": 685,
        "fullcodeline": "_this->m_server->GetDSMPluginPointer()->UnloadPlugin();"
    },
    {
        "line": 686,
        "fullcodeline": "_this->m_server->GetDSMPluginPointer()->SetEnabled(false);"
    },
    {
        "line": 933,
        "fullcodeline": "if(!OpenProcessToken(hProcess,TOKEN_ADJUST_PRIVILEGES|TOKEN_QUERY"
    },
    {
        "line": 991,
        "fullcodeline": "_this->m_server->GetDSMPluginPointer()->DescribePlugin();"
    },
    {
        "line": 992,
        "fullcodeline": "if (_stricmp(_this->m_server->GetDSMPluginPointer()->GetPluginFileName(), szPlugin))"
    },
    {
        "line": 1007,
        "fullcodeline": "sz_ID_PLUGIN_LOADIN, MB_OK | MB_ICONEXCLAMATION );"
    },
    {
        "line": 468,
        "fullcodeline": "DISPLAY_TO_HPORT(display));"
    },
    {
        "line": 475,
        "fullcodeline": "_this->m_server->SetPorts(port_rfb, port_http);"
    },
    {
        "line": 604,
        "fullcodeline": "else if (SendMessage(GetDlgItem(hwnd, IDC_MV3), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 995,
        "fullcodeline": "_this->m_server->GetDSMPluginPointer()->LoadPlugin(szPlugin, false);"
    },
    {
        "line": 606,
        "fullcodeline": "_this->m_server->SetConnectPriority(2);"
    },
    {
        "line": 994,
        "fullcodeline": "_this->m_server->GetDSMPluginPointer()->UnloadPlugin();"
    },
    {
        "line": 607,
        "fullcodeline": "} else if (SendMessage(GetDlgItem(hwnd, IDC_MV4), BM_GETCHECK, 0, 0)"
    },
    {
        "line": 609,
        "fullcodeline": "_this->m_server->SetConnectPriority(3);"
    }
]