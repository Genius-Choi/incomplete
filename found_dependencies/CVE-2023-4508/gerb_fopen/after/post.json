[
    {
        "line": 6,
        "fullcodeline": "dprintf(\"---> Entering gerb_fopen, filename = %s\\n\", filename);"
    },
    {
        "line": 8,
        "fullcodeline": "fd = g_new(gerb_file_t, 1);"
    },
    {
        "line": 13,
        "fullcodeline": "dprintf(\"     Doing fopen\\n\");"
    },
    {
        "line": 15,
        "fullcodeline": "fd->fd = g_fopen(filename, \"rb\");"
    },
    {
        "line": 21,
        "fullcodeline": "dprintf(\"     Doing fstat\\n\");"
    },
    {
        "line": 22,
        "fullcodeline": "fd->ptr = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "fd->fileno = fileno(fd->fd);"
    },
    {
        "line": 30,
        "fullcodeline": "dprintf(\"     Checking S_ISREG\\n\");"
    },
    {
        "line": 38,
        "fullcodeline": "dprintf(\"     Checking statinfo.st_size\\n\");"
    },
    {
        "line": 61,
        "fullcodeline": "dprintf(\"     Doing calloc\\n\");"
    },
    {
        "line": 62,
        "fullcodeline": "fd->datalen = (int)statinfo.st_size;"
    },
    {
        "line": 63,
        "fullcodeline": "fd->data = calloc(1, statinfo.st_size + 1);"
    },
    {
        "line": 75,
        "fullcodeline": "rewind (fd->fd);"
    },
    {
        "line": 79,
        "fullcodeline": "dprintf(\"     Setting filename\\n\");"
    },
    {
        "line": 80,
        "fullcodeline": "fd->filename = g_strdup(filename);"
    },
    {
        "line": 82,
        "fullcodeline": "dprintf(\"<--- Leaving gerb_fopen\\n\");"
    },
    {
        "line": 9,
        "fullcodeline": "if (fd == NULL) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (fd->fd == NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (fstat(fd->fileno, &statinfo) < 0) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (!S_ISREG(statinfo.st_mode)) {"
    },
    {
        "line": 39,
        "fullcodeline": "if ((int)statinfo.st_size == 0) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (fd->data == NULL) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (fread((void*)fd->data, 1, statinfo.st_size, fd->fd) != statinfo.st_size) {"
    },
    {
        "line": 17,
        "fullcodeline": "g_free(fd);"
    },
    {
        "line": 25,
        "fullcodeline": "fclose(fd->fd);"
    },
    {
        "line": 26,
        "fullcodeline": "g_free(fd);"
    },
    {
        "line": 32,
        "fullcodeline": "fclose(fd->fd);"
    },
    {
        "line": 33,
        "fullcodeline": "g_free(fd);"
    },
    {
        "line": 34,
        "fullcodeline": "errno = EISDIR;"
    },
    {
        "line": 40,
        "fullcodeline": "fclose(fd->fd);"
    },
    {
        "line": 41,
        "fullcodeline": "g_free(fd);"
    },
    {
        "line": 42,
        "fullcodeline": "errno = EIO; /* More compatible with the world outside Linux */"
    },
    {
        "line": 65,
        "fullcodeline": "fclose(fd->fd);"
    },
    {
        "line": 66,
        "fullcodeline": "g_free(fd);"
    },
    {
        "line": 70,
        "fullcodeline": "fclose(fd->fd);"
    },
    {
        "line": 71,
        "fullcodeline": "g_free(fd->data);"
    },
    {
        "line": 72,
        "fullcodeline": "g_free(fd);"
    }
]