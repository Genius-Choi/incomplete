[
    {
        "line": 5,
        "fullcodeline": "gerbv_image_t *parsed_image = NULL, *parsed_image2 = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "gint retv = -1;"
    },
    {
        "line": 7,
        "fullcodeline": "gboolean isPnpFile = FALSE, foundBinary;"
    },
    {
        "line": 8,
        "fullcodeline": "gerbv_HID_Attribute *attr_list = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "int n_attr = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "dprintf(\"In open_image, about to try opening filename = %s\\n\", filename);"
    },
    {
        "line": 40,
        "fullcodeline": "fd = gerb_fopen(filename);"
    },
    {
        "line": 48,
        "fullcodeline": "fd->filename = g_strdup(filename);"
    },
    {
        "line": 118,
        "fullcodeline": "g_free(fd->filename);"
    },
    {
        "line": 29,
        "fullcodeline": "if ((idx+1) >= gerbvProject->max_files) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (fd == NULL) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (gerber_is_rs274x_p(fd, &foundBinary)) {"
    },
    {
        "line": 120,
        "fullcodeline": "if (parsed_image == NULL) {"
    },
    {
        "line": 16,
        "fullcodeline": "attr_list =  gerbvProject->file[idx]->image->info->attr_list;"
    },
    {
        "line": 17,
        "fullcodeline": "n_attr =  gerbvProject->file[idx]->image->info->n_attr;"
    },
    {
        "line": 33,
        "fullcodeline": "gerbvProject->file[gerbvProject->max_files] = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "gerbvProject->file[gerbvProject->max_files+1] = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "gerbvProject->max_files += 2;"
    },
    {
        "line": 42,
        "fullcodeline": "GERB_COMPILE_ERROR(_(\"Trying to open \\\"%s\\\": %s\"),"
    },
    {
        "line": 126,
        "fullcodeline": "gchar *baseName = g_path_get_basename (filename);"
    },
    {
        "line": 132,
        "fullcodeline": "retv = gerbv_add_parsed_image_to_project (gerbvProject, parsed_image, filename, displayedName, idx, reload);"
    },
    {
        "line": 144,
        "fullcodeline": "gchar *baseName = g_path_get_basename (filename);"
    },
    {
        "line": 146,
        "fullcodeline": "displayedName = g_strconcat (baseName, _(\" (bottom)\"), NULL);"
    },
    {
        "line": 147,
        "fullcodeline": "retv = gerbv_add_parsed_image_to_project (gerbvProject, parsed_image2, filename, displayedName, idx + 1, reload);"
    },
    {
        "line": 24,
        "fullcodeline": "attr_list = fattr;"
    },
    {
        "line": 25,
        "fullcodeline": "n_attr = n_fattr;"
    },
    {
        "line": 43,
        "fullcodeline": "filename, strerror(errno));"
    },
    {
        "line": 44,
        "fullcodeline": "return -1;"
    },
    {
        "line": 121,
        "fullcodeline": "return -1;"
    },
    {
        "line": 59,
        "fullcodeline": "if (!foundBinary || forceLoadFile) {"
    },
    {
        "line": 62,
        "fullcodeline": "gchar *currentLoadDirectory = g_path_get_dirname (filename);"
    },
    {
        "line": 63,
        "fullcodeline": "parsed_image = parse_gerb(fd, currentLoadDirectory);"
    },
    {
        "line": 66,
        "fullcodeline": "} else if(drill_file_p(fd, &foundBinary)) {"
    },
    {
        "line": 129,
        "fullcodeline": "displayedName = g_strconcat (baseName, _(\" (top)\"), NULL);"
    },
    {
        "line": 131,
        "fullcodeline": "displayedName = g_strdup (baseName);"
    },
    {
        "line": 68,
        "fullcodeline": "if (!foundBinary || forceLoadFile)"
    },
    {
        "line": 69,
        "fullcodeline": "parsed_image = parse_drillfile(fd, attr_list, n_attr, reload);"
    },
    {
        "line": 71,
        "fullcodeline": "} else if (pick_and_place_check_file_type(fd, &foundBinary)) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (!foundBinary || forceLoadFile) {"
    },
    {
        "line": 95,
        "fullcodeline": "isPnpFile = TRUE;"
    },
    {
        "line": 97,
        "fullcodeline": "} else if (gerber_is_rs274d_p(fd)) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (!reload) {"
    },
    {
        "line": 98,
        "fullcodeline": "gchar *str = g_strdup_printf(_(\"Most likely found a RS-274D file \""
    },
    {
        "line": 100,
        "fullcodeline": "dprintf(\"%s\", str);"
    },
    {
        "line": 101,
        "fullcodeline": "g_warning(\"%s\", str);"
    },
    {
        "line": 75,
        "fullcodeline": "pick_and_place_parse_file_to_images(fd, &parsed_image, &parsed_image2);"
    },
    {
        "line": 114,
        "fullcodeline": "GERB_COMPILE_ERROR(_(\"%s: Unknown file type.\"), filename);"
    },
    {
        "line": 115,
        "fullcodeline": "parsed_image = NULL;"
    },
    {
        "line": 104,
        "fullcodeline": "if (!foundBinary || forceLoadFile) {"
    },
    {
        "line": 107,
        "fullcodeline": "gchar *currentLoadDirectory = g_path_get_dirname (filename);"
    },
    {
        "line": 108,
        "fullcodeline": "parsed_image = parse_gerb(fd, currentLoadDirectory);"
    },
    {
        "line": 80,
        "fullcodeline": "parsed_image2 = (void *)!NULL;"
    },
    {
        "line": 81,
        "fullcodeline": "pick_and_place_parse_file_to_images(fd, &parsed_image, &parsed_image2);"
    },
    {
        "line": 82,
        "fullcodeline": "parsed_image2 = NULL;"
    },
    {
        "line": 86,
        "fullcodeline": "parsed_image2 = (void *)!NULL;"
    },
    {
        "line": 87,
        "fullcodeline": "pick_and_place_parse_file_to_images(fd, &parsed_image2, &parsed_image);"
    },
    {
        "line": 88,
        "fullcodeline": "parsed_image2 = NULL;"
    },
    {
        "line": 91,
        "fullcodeline": "GERB_COMPILE_ERROR(_(\"%s: unknown pick-and-place board side to reload\"), filename);"
    }
]