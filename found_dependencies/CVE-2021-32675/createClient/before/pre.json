[
    {
        "line": 2,
        "fullcodeline": "client *c = zmalloc(sizeof(client));"
    },
    {
        "line": 17,
        "fullcodeline": "selectDb(c,0);"
    },
    {
        "line": 18,
        "fullcodeline": "uint64_t client_id = ++server.next_client_id;"
    },
    {
        "line": 19,
        "fullcodeline": "c->id = client_id;"
    },
    {
        "line": 20,
        "fullcodeline": "c->resp = 2;"
    },
    {
        "line": 21,
        "fullcodeline": "c->conn = conn;"
    },
    {
        "line": 22,
        "fullcodeline": "c->name = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "c->bufpos = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "c->qb_pos = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "c->querybuf = sdsempty();"
    },
    {
        "line": 26,
        "fullcodeline": "c->pending_querybuf = sdsempty();"
    },
    {
        "line": 27,
        "fullcodeline": "c->querybuf_peak = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "c->reqtype = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "c->argc = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "c->argv = NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "c->argv_len_sum = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "c->cmd = c->lastcmd = NULL;"
    },
    {
        "line": 33,
        "fullcodeline": "c->user = DefaultUser;"
    },
    {
        "line": 34,
        "fullcodeline": "c->multibulklen = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "c->bulklen = -1;"
    },
    {
        "line": 36,
        "fullcodeline": "c->sentlen = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "c->flags = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "c->ctime = c->lastinteraction = server.unixtime;"
    },
    {
        "line": 41,
        "fullcodeline": "c->authenticated = (c->user->flags & USER_FLAG_NOPASS) &&"
    },
    {
        "line": 43,
        "fullcodeline": "c->replstate = REPL_STATE_NONE;"
    },
    {
        "line": 44,
        "fullcodeline": "c->repl_put_online_on_ack = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "c->reploff = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "c->read_reploff = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "c->repl_ack_off = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "c->repl_ack_time = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "c->repl_last_partial_write = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "c->slave_listening_port = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "c->slave_ip[0] = '\\0';"
    },
    {
        "line": 52,
        "fullcodeline": "c->slave_capa = SLAVE_CAPA_NONE;"
    },
    {
        "line": 53,
        "fullcodeline": "c->reply = listCreate();"
    },
    {
        "line": 54,
        "fullcodeline": "c->reply_bytes = 0;"
    },
    {
        "line": 55,
        "fullcodeline": "c->obuf_soft_limit_reached_time = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "listSetFreeMethod(c->reply,freeClientReplyValue);"
    },
    {
        "line": 57,
        "fullcodeline": "listSetDupMethod(c->reply,dupClientReplyValue);"
    },
    {
        "line": 58,
        "fullcodeline": "c->btype = BLOCKED_NONE;"
    },
    {
        "line": 59,
        "fullcodeline": "c->bpop.timeout = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "c->bpop.keys = dictCreate(&objectKeyHeapPointerValueDictType,NULL);"
    },
    {
        "line": 61,
        "fullcodeline": "c->bpop.target = NULL;"
    },
    {
        "line": 62,
        "fullcodeline": "c->bpop.xread_group = NULL;"
    },
    {
        "line": 63,
        "fullcodeline": "c->bpop.xread_consumer = NULL;"
    },
    {
        "line": 64,
        "fullcodeline": "c->bpop.xread_group_noack = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "c->bpop.numreplicas = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "c->bpop.reploffset = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "c->woff = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "c->watched_keys = listCreate();"
    },
    {
        "line": 69,
        "fullcodeline": "c->pubsub_channels = dictCreate(&objectKeyPointerValueDictType,NULL);"
    },
    {
        "line": 70,
        "fullcodeline": "c->pubsub_patterns = listCreate();"
    },
    {
        "line": 71,
        "fullcodeline": "c->peerid = NULL;"
    },
    {
        "line": 72,
        "fullcodeline": "c->client_list_node = NULL;"
    },
    {
        "line": 73,
        "fullcodeline": "c->client_tracking_redirection = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "c->client_tracking_prefixes = NULL;"
    },
    {
        "line": 75,
        "fullcodeline": "c->client_cron_last_memory_usage = 0;"
    },
    {
        "line": 76,
        "fullcodeline": "c->client_cron_last_memory_type = CLIENT_TYPE_NORMAL;"
    },
    {
        "line": 77,
        "fullcodeline": "c->auth_callback = NULL;"
    },
    {
        "line": 78,
        "fullcodeline": "c->auth_callback_privdata = NULL;"
    },
    {
        "line": 79,
        "fullcodeline": "c->auth_module = NULL;"
    },
    {
        "line": 80,
        "fullcodeline": "listSetFreeMethod(c->pubsub_patterns,decrRefCountVoid);"
    },
    {
        "line": 81,
        "fullcodeline": "listSetMatchMethod(c->pubsub_patterns,listMatchObjects);"
    },
    {
        "line": 83,
        "fullcodeline": "initClientMultiState(c);"
    },
    {
        "line": 9,
        "fullcodeline": "connNonBlock(conn);"
    },
    {
        "line": 10,
        "fullcodeline": "connEnableTcpNoDelay(conn);"
    },
    {
        "line": 13,
        "fullcodeline": "connSetReadHandler(conn, readQueryFromClient);"
    },
    {
        "line": 14,
        "fullcodeline": "connSetPrivateData(conn, c);"
    },
    {
        "line": 42,
        "fullcodeline": "!(c->user->flags & USER_FLAG_DISABLED);"
    },
    {
        "line": 82,
        "fullcodeline": "if (conn) linkClient(c);"
    },
    {
        "line": 12,
        "fullcodeline": "connKeepAlive(conn,server.tcpkeepalive);"
    }
]