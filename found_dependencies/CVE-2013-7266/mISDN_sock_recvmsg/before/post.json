[
    {
        "line": 5,
        "fullcodeline": "struct sock\t\t*sk = sock->sk;"
    },
    {
        "line": 20,
        "fullcodeline": "skb = skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err);"
    },
    {
        "line": 46,
        "fullcodeline": "copied = skb->len + MISDN_HEADER_LEN;"
    },
    {
        "line": 54,
        "fullcodeline": "memcpy(skb_push(skb, MISDN_HEADER_LEN), mISDN_HEAD_P(skb),"
    },
    {
        "line": 57,
        "fullcodeline": "err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied);"
    },
    {
        "line": 59,
        "fullcodeline": "mISDN_sock_cmsg(sk, msg, skb);"
    },
    {
        "line": 61,
        "fullcodeline": "skb_free_datagram(sk, skb);"
    },
    {
        "line": 14,
        "fullcodeline": "if (flags & (MSG_OOB))"
    },
    {
        "line": 17,
        "fullcodeline": "if (sk->sk_state == MISDN_CLOSED)"
    },
    {
        "line": 21,
        "fullcodeline": "if (!skb)"
    },
    {
        "line": 24,
        "fullcodeline": "if (msg->msg_namelen >= sizeof(struct sockaddr_mISDN)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (len < copied) {"
    },
    {
        "line": 63,
        "fullcodeline": "return err ? : copied;"
    },
    {
        "line": 26,
        "fullcodeline": "maddr = (struct sockaddr_mISDN *)msg->msg_name;"
    },
    {
        "line": 27,
        "fullcodeline": "maddr->family = AF_ISDN;"
    },
    {
        "line": 15,
        "fullcodeline": "return -EOPNOTSUPP;"
    },
    {
        "line": 29,
        "fullcodeline": "if ((sk->sk_protocol == ISDN_P_LAPD_TE) ||"
    },
    {
        "line": 43,
        "fullcodeline": "msg->msg_namelen = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "if (flags & MSG_PEEK)"
    },
    {
        "line": 52,
        "fullcodeline": "return -ENOSPC;"
    },
    {
        "line": 30,
        "fullcodeline": "(sk->sk_protocol == ISDN_P_LAPD_NT)) {"
    },
    {
        "line": 31,
        "fullcodeline": "maddr->channel = (mISDN_HEAD_ID(skb) >> 16) & 0xff;"
    },
    {
        "line": 32,
        "fullcodeline": "maddr->tei =  (mISDN_HEAD_ID(skb) >> 8) & 0xff;"
    },
    {
        "line": 33,
        "fullcodeline": "maddr->sapi = mISDN_HEAD_ID(skb) & 0xff;"
    },
    {
        "line": 49,
        "fullcodeline": "atomic_dec(&skb->users);"
    },
    {
        "line": 28,
        "fullcodeline": "maddr->dev = _pms(sk)->dev->id;"
    },
    {
        "line": 36,
        "fullcodeline": "maddr->sapi = _pms(sk)->ch.addr & 0xFF;"
    },
    {
        "line": 37,
        "fullcodeline": "maddr->tei =  (_pms(sk)->ch.addr >> 8) & 0xFF;"
    },
    {
        "line": 51,
        "fullcodeline": "skb_queue_head(&sk->sk_receive_queue, skb);"
    },
    {
        "line": 35,
        "fullcodeline": "maddr->channel = _pms(sk)->ch.nr;"
    }
]