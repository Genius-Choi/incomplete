[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct alg_sock *ask = alg_sk(sk);"
    },
    {
        "line": 6,
        "fullcodeline": "struct skcipher_ctx *ctx = ask->private;"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned bs = crypto_ablkcipher_blocksize(crypto_ablkcipher_reqtfm("
    },
    {
        "line": 13,
        "fullcodeline": "int err = -EAGAIN;"
    },
    {
        "line": 15,
        "fullcodeline": "long copied = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 18,
        "fullcodeline": "msg->msg_namelen = 0;"
    },
    {
        "line": 76,
        "fullcodeline": "err = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "skcipher_wmem_wakeup(sk);"
    },
    {
        "line": 80,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 19,
        "fullcodeline": "for (iov = msg->msg_iov, iovlen = msg->msg_iovlen; iovlen > 0;"
    },
    {
        "line": 20,
        "fullcodeline": "iovlen--, iov++) {"
    },
    {
        "line": 82,
        "fullcodeline": "return copied ?: err;"
    },
    {
        "line": 21,
        "fullcodeline": "unsigned long seglen = iov->iov_len;"
    },
    {
        "line": 22,
        "fullcodeline": "char __user *from = iov->iov_base;"
    },
    {
        "line": 32,
        "fullcodeline": "used = ctx->used;"
    },
    {
        "line": 41,
        "fullcodeline": "used = af_alg_make_sg(&ctx->rsgl, from, used, 1);"
    },
    {
        "line": 42,
        "fullcodeline": "err = used;"
    },
    {
        "line": 49,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 53,
        "fullcodeline": "ablkcipher_request_set_crypt(&ctx->req, sg,"
    },
    {
        "line": 57,
        "fullcodeline": "err = af_alg_wait_for_completion("
    },
    {
        "line": 64,
        "fullcodeline": "af_alg_free_sg(&ctx->rsgl);"
    },
    {
        "line": 69,
        "fullcodeline": "copied += used;"
    },
    {
        "line": 70,
        "fullcodeline": "from += used;"
    },
    {
        "line": 71,
        "fullcodeline": "seglen -= used;"
    },
    {
        "line": 72,
        "fullcodeline": "skcipher_pull_sgl(sk, used);"
    },
    {
        "line": 29,
        "fullcodeline": "while (!sg->length)"
    },
    {
        "line": 30,
        "fullcodeline": "sg++;"
    },
    {
        "line": 33,
        "fullcodeline": "if (!used) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 46,
        "fullcodeline": "if (ctx->more || used < ctx->used)"
    },
    {
        "line": 50,
        "fullcodeline": "if (!used)"
    },
    {
        "line": 34,
        "fullcodeline": "err = skcipher_wait_for_data(sk, flags);"
    },
    {
        "line": 47,
        "fullcodeline": "used -= used % bs;"
    },
    {
        "line": 58,
        "fullcodeline": "ctx->enc ?"
    },
    {
        "line": 59,
        "fullcodeline": "crypto_ablkcipher_encrypt(&ctx->req) :"
    },
    {
        "line": 60,
        "fullcodeline": "crypto_ablkcipher_decrypt(&ctx->req),"
    }
]