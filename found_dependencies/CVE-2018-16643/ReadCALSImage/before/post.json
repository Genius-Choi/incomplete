[
    {
        "line": 5,
        "fullcodeline": "filename[MagickPathExtent],"
    },
    {
        "line": 6,
        "fullcodeline": "header[MagickPathExtent],"
    },
    {
        "line": 7,
        "fullcodeline": "message[MagickPathExtent];"
    },
    {
        "line": 40,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 41,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 45,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 46,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 47,
        "fullcodeline": "image=AcquireImage(image_info,exception);"
    },
    {
        "line": 48,
        "fullcodeline": "status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);"
    },
    {
        "line": 57,
        "fullcodeline": "(void) memset(header,0,sizeof(header));"
    },
    {
        "line": 58,
        "fullcodeline": "density=0;"
    },
    {
        "line": 59,
        "fullcodeline": "direction=0;"
    },
    {
        "line": 60,
        "fullcodeline": "orientation=1;"
    },
    {
        "line": 61,
        "fullcodeline": "pel_path=0;"
    },
    {
        "line": 62,
        "fullcodeline": "type=1;"
    },
    {
        "line": 63,
        "fullcodeline": "width=0;"
    },
    {
        "line": 64,
        "fullcodeline": "height=0;"
    },
    {
        "line": 111,
        "fullcodeline": "file=(FILE *) NULL;"
    },
    {
        "line": 112,
        "fullcodeline": "unique_file=AcquireUniqueFileResource(filename);"
    },
    {
        "line": 119,
        "fullcodeline": "(void) fclose(file);"
    },
    {
        "line": 120,
        "fullcodeline": "(void) CloseBlob(image);"
    },
    {
        "line": 121,
        "fullcodeline": "image=DestroyImage(image);"
    },
    {
        "line": 122,
        "fullcodeline": "read_info=CloneImageInfo(image_info);"
    },
    {
        "line": 123,
        "fullcodeline": "SetImageInfoBlob(read_info,(void *) NULL,0);"
    },
    {
        "line": 124,
        "fullcodeline": "(void) FormatLocaleString(read_info->filename,MagickPathExtent,\"group4:%s\","
    },
    {
        "line": 126,
        "fullcodeline": "(void) FormatLocaleString(message,MagickPathExtent,\"%lux%lu\",width,height);"
    },
    {
        "line": 127,
        "fullcodeline": "(void) CloneString(&read_info->size,message);"
    },
    {
        "line": 128,
        "fullcodeline": "(void) FormatLocaleString(message,MagickPathExtent,\"%lu\",density);"
    },
    {
        "line": 129,
        "fullcodeline": "(void) CloneString(&read_info->density,message);"
    },
    {
        "line": 130,
        "fullcodeline": "read_info->orientation=(OrientationType) orientation;"
    },
    {
        "line": 131,
        "fullcodeline": "image=ReadImage(read_info,exception);"
    },
    {
        "line": 140,
        "fullcodeline": "read_info=DestroyImageInfo(read_info);"
    },
    {
        "line": 141,
        "fullcodeline": "(void) RelinquishUniqueFileResource(filename);"
    },
    {
        "line": 42,
        "fullcodeline": "if (image_info->debug != MagickFalse)"
    },
    {
        "line": 49,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 65,
        "fullcodeline": "for (i=0; i < 16; i++)"
    },
    {
        "line": 113,
        "fullcodeline": "if (unique_file != -1)"
    },
    {
        "line": 115,
        "fullcodeline": "if ((unique_file == -1) || (file == (FILE *) NULL))"
    },
    {
        "line": 117,
        "fullcodeline": "while ((c=ReadBlobByte(image)) != EOF)"
    },
    {
        "line": 118,
        "fullcodeline": "(void) fputc(c,file);"
    },
    {
        "line": 132,
        "fullcodeline": "if (image != (Image *) NULL)"
    },
    {
        "line": 43,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 51,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 114,
        "fullcodeline": "file=fdopen(unique_file,\"wb\");"
    },
    {
        "line": 116,
        "fullcodeline": "ThrowImageException(FileOpenError,\"UnableToCreateTemporaryFile\");"
    },
    {
        "line": 134,
        "fullcodeline": "(void) CopyMagickString(image->filename,image_info->filename,"
    },
    {
        "line": 136,
        "fullcodeline": "(void) CopyMagickString(image->magick_filename,image_info->filename,"
    },
    {
        "line": 138,
        "fullcodeline": "(void) CopyMagickString(image->magick,\"CALS\",MagickPathExtent);"
    },
    {
        "line": 52,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 67,
        "fullcodeline": "if (ReadBlob(image,128,(unsigned char *) header) != 128)"
    },
    {
        "line": 74,
        "fullcodeline": "if (LocaleNCompare(header,\"rdensty:\",8) == 0)"
    },
    {
        "line": 79,
        "fullcodeline": "if (LocaleNCompare(header,\"rpelcnt:\",8) == 0)"
    },
    {
        "line": 84,
        "fullcodeline": "if (LocaleNCompare(header,\"rorient:\",8) == 0)"
    },
    {
        "line": 99,
        "fullcodeline": "if (LocaleNCompare(header,\"rtype:\",6) == 0)"
    },
    {
        "line": 76,
        "fullcodeline": "(void) sscanf(header+8,\"%lu\",&density);"
    },
    {
        "line": 81,
        "fullcodeline": "(void) sscanf(header+8,\"%lu,%lu\",&width,&height);"
    },
    {
        "line": 86,
        "fullcodeline": "(void) sscanf(header+8,\"%lu,%lu\",&pel_path,&direction);"
    },
    {
        "line": 101,
        "fullcodeline": "(void) sscanf(header+6,\"%lu\",&type);"
    },
    {
        "line": 87,
        "fullcodeline": "if (pel_path == 90)"
    },
    {
        "line": 95,
        "fullcodeline": "if (direction == 90)"
    },
    {
        "line": 88,
        "fullcodeline": "orientation=5;"
    },
    {
        "line": 96,
        "fullcodeline": "orientation++;"
    },
    {
        "line": 90,
        "fullcodeline": "if (pel_path == 180)"
    },
    {
        "line": 91,
        "fullcodeline": "orientation=3;"
    },
    {
        "line": 93,
        "fullcodeline": "if (pel_path == 270)"
    },
    {
        "line": 94,
        "fullcodeline": "orientation=7;"
    }
]