[
    {
        "line": 12,
        "fullcodeline": "memcpy(wsctx->writePos, wsctx->carryBuf, wsctx->carrylen);"
    },
    {
        "line": 13,
        "fullcodeline": "wsctx->writePos += wsctx->carrylen;"
    },
    {
        "line": 16,
        "fullcodeline": "bufsize = wsctx->codeBufDecode + ARRAYSIZE(wsctx->codeBufDecode) - wsctx->writePos - 1;"
    },
    {
        "line": 17,
        "fullcodeline": "ws_dbg(\"bufsize=%d\\n\", bufsize);"
    },
    {
        "line": 24,
        "fullcodeline": "ws_dbg(\"calling read with buf=%p and len=%d (decodebuf=%p headerLen=%d)\\n\", wsctx->writePos, nextRead, wsctx->codeBufDecode, wsctx->header.headerLen);"
    },
    {
        "line": 44,
        "fullcodeline": "wsctx->nReadPayload += n;"
    },
    {
        "line": 45,
        "fullcodeline": "wsctx->writePos += n;"
    },
    {
        "line": 53,
        "fullcodeline": "toDecode = n + wsctx->carrylen + nInBuf;"
    },
    {
        "line": 54,
        "fullcodeline": "ws_dbg(\"toDecode=%d from n=%d carrylen=%d headerLen=%d\\n\", toDecode, n, wsctx->carrylen, wsctx->header.headerLen);"
    },
    {
        "line": 64,
        "fullcodeline": "data = (unsigned char *)(wsctx->writePos - toDecode);"
    },
    {
        "line": 72,
        "fullcodeline": "ws_dbg(\"mask decoding; i=%d toDecode=%d\\n\", i, toDecode);"
    },
    {
        "line": 96,
        "fullcodeline": "toReturn = toDecode - wsctx->carrylen;"
    },
    {
        "line": 130,
        "fullcodeline": "wsctx->readPos = data;"
    },
    {
        "line": 18,
        "fullcodeline": "if (hybiRemaining(wsctx) > bufsize) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (nextRead > 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (toDecode < 0) {"
    },
    {
        "line": 66,
        "fullcodeline": "for (i = 0; i < (toDecode >> 2); i++) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (wsctx->hybiDecodeState == WS_HYBI_STATE_FRAME_COMPLETE) {"
    },
    {
        "line": 132,
        "fullcodeline": "return hybiReturnData(dst, len, wsctx, sockRet);"
    },
    {
        "line": 19,
        "fullcodeline": "nextRead = bufsize;"
    },
    {
        "line": 47,
        "fullcodeline": "if (hybiRemaining(wsctx) == 0) {"
    },
    {
        "line": 48,
        "fullcodeline": "wsctx->hybiDecodeState = WS_HYBI_STATE_FRAME_COMPLETE;"
    },
    {
        "line": 68,
        "fullcodeline": "memcpy(&tmp, data + i * sizeof(tmp), sizeof(tmp));"
    },
    {
        "line": 70,
        "fullcodeline": "memcpy(data + i * sizeof(tmp), &tmp, sizeof(tmp));"
    },
    {
        "line": 81,
        "fullcodeline": "wsctx->carrylen = 0;"
    },
    {
        "line": 115,
        "fullcodeline": "data[toReturn] = '\\0';"
    },
    {
        "line": 116,
        "fullcodeline": "ws_dbg(\"Initiate Base64 decoding in %p with max size %d and '\\\\0' at %p\\n\", data, bufsize, data + toReturn);"
    },
    {
        "line": 120,
        "fullcodeline": "wsctx->writePos = hybiPayloadStart(wsctx);"
    },
    {
        "line": 123,
        "fullcodeline": "wsctx->readlen = toReturn;"
    },
    {
        "line": 124,
        "fullcodeline": "wsctx->writePos = hybiPayloadStart(wsctx);"
    },
    {
        "line": 125,
        "fullcodeline": "ws_dbg(\"set readlen=%d writePos=%p\\n\", wsctx->readlen, wsctx->writePos);"
    },
    {
        "line": 21,
        "fullcodeline": "nextRead = hybiRemaining(wsctx);"
    },
    {
        "line": 28,
        "fullcodeline": "if (-1 == (n = wsctx->ctxInfo.readFunc(wsctx->ctxInfo.ctxPtr, wsctx->writePos, nextRead))) {"
    },
    {
        "line": 41,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "*sockRet = -1;"
    },
    {
        "line": 76,
        "fullcodeline": "for (i*=4; i < toDecode; i++) {"
    },
    {
        "line": 84,
        "fullcodeline": "wsctx->carrylen = toDecode - (i * 4);"
    },
    {
        "line": 91,
        "fullcodeline": "ws_dbg(\"carrying over %d bytes from %p to %p\\n\", wsctx->carrylen, wsctx->writePos + (i * 4), wsctx->carryBuf);"
    },
    {
        "line": 92,
        "fullcodeline": "memcpy(wsctx->carryBuf, data + (i * 4), wsctx->carrylen);"
    },
    {
        "line": 93,
        "fullcodeline": "wsctx->writePos -= wsctx->carrylen;"
    },
    {
        "line": 101,
        "fullcodeline": "if (hybiWsFrameComplete(wsctx)) {"
    },
    {
        "line": 29,
        "fullcodeline": "int olderrno = errno;"
    },
    {
        "line": 30,
        "fullcodeline": "rfbErr(\"%s: read; %s\", __func__, strerror(errno));"
    },
    {
        "line": 31,
        "fullcodeline": "errno = olderrno;"
    },
    {
        "line": 32,
        "fullcodeline": "*sockRet = -1;"
    },
    {
        "line": 77,
        "fullcodeline": "data[i] ^= wsctx->header.mask.c[i % 4];"
    },
    {
        "line": 102,
        "fullcodeline": "*(wsctx->writePos) = '\\0';"
    },
    {
        "line": 104,
        "fullcodeline": "errno = ECONNRESET;"
    },
    {
        "line": 117,
        "fullcodeline": "if (-1 == (wsctx->readlen = rfbBase64PtoN((char *)data, data, bufsize))) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (wsctx->carrylen < 0 || wsctx->carrylen > ARRAYSIZE(wsctx->carryBuf)) {"
    },
    {
        "line": 103,
        "fullcodeline": "ws_dbg(\"got close cmd %d, reason %d: %s\\n\", (int)(wsctx->writePos - hybiPayloadStart(wsctx)), WS_NTOH16(((uint16_t *)hybiPayloadStart(wsctx))[0]), &hybiPayloadStart(wsctx)[2]);"
    },
    {
        "line": 105,
        "fullcodeline": "*sockRet = -1;"
    },
    {
        "line": 110,
        "fullcodeline": "errno = EAGAIN;"
    },
    {
        "line": 118,
        "fullcodeline": "rfbErr(\"%s: Base64 decode error; %s\\n\", __func__, strerror(errno));"
    },
    {
        "line": 34,
        "fullcodeline": "} else if (n == 0) {"
    },
    {
        "line": 87,
        "fullcodeline": "*sockRet = -1;"
    },
    {
        "line": 108,
        "fullcodeline": "ws_dbg(\"got close cmd; waiting for %d more bytes to arrive\\n\", hybiRemaining(wsctx));"
    },
    {
        "line": 109,
        "fullcodeline": "*sockRet = -1;"
    },
    {
        "line": 38,
        "fullcodeline": "ws_dbg(\"read %d bytes from socket; nRead=%d\\n\", n, wsctx->nReadPayload);"
    }
]