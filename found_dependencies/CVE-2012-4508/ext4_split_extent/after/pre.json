[
    {
        "line": 11,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "depth = ext_depth(inode);"
    },
    {
        "line": 16,
        "fullcodeline": "ex = path[depth].p_ext;"
    },
    {
        "line": 17,
        "fullcodeline": "ee_block = le32_to_cpu(ex->ee_block);"
    },
    {
        "line": 18,
        "fullcodeline": "ee_len = ext4_ext_get_actual_len(ex);"
    },
    {
        "line": 19,
        "fullcodeline": "uninitialized = ext4_ext_is_uninitialized(ex);"
    },
    {
        "line": 35,
        "fullcodeline": "ext4_ext_drop_refs(path);"
    },
    {
        "line": 36,
        "fullcodeline": "path = ext4_ext_find_extent(inode, map->m_lblk, path);"
    },
    {
        "line": 21,
        "fullcodeline": "if (map->m_lblk + map->m_len < ee_block + ee_len) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (IS_ERR(path))"
    },
    {
        "line": 40,
        "fullcodeline": "if (map->m_lblk >= ee_block) {"
    },
    {
        "line": 55,
        "fullcodeline": "return err ? err : map->m_len;"
    },
    {
        "line": 22,
        "fullcodeline": "split_flag1 = split_flag & EXT4_EXT_MAY_ZEROOUT;"
    },
    {
        "line": 23,
        "fullcodeline": "flags1 = flags | EXT4_GET_BLOCKS_PRE_IO;"
    },
    {
        "line": 29,
        "fullcodeline": "err = ext4_split_extent_at(handle, inode, path,"
    },
    {
        "line": 41,
        "fullcodeline": "split_flag1 = split_flag & (EXT4_EXT_MAY_ZEROOUT |"
    },
    {
        "line": 47,
        "fullcodeline": "err = ext4_split_extent_at(handle, inode, path,"
    },
    {
        "line": 27,
        "fullcodeline": "if (split_flag & EXT4_EXT_DATA_VALID2)"
    },
    {
        "line": 38,
        "fullcodeline": "return PTR_ERR(path);"
    },
    {
        "line": 45,
        "fullcodeline": "if (split_flag & EXT4_EXT_MARK_UNINIT2)"
    },
    {
        "line": 25,
        "fullcodeline": "split_flag1 |= EXT4_EXT_MARK_UNINIT1 |"
    },
    {
        "line": 28,
        "fullcodeline": "split_flag1 |= EXT4_EXT_DATA_VALID1;"
    },
    {
        "line": 30,
        "fullcodeline": "map->m_lblk + map->m_len, split_flag1, flags1);"
    },
    {
        "line": 44,
        "fullcodeline": "split_flag1 |= EXT4_EXT_MARK_UNINIT1;"
    },
    {
        "line": 46,
        "fullcodeline": "split_flag1 |= EXT4_EXT_MARK_UNINIT2;"
    }
]