[
    {
        "line": 11,
        "fullcodeline": "struct ext4_extent *ex2 = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "BUG_ON((split_flag & (EXT4_EXT_DATA_VALID1 | EXT4_EXT_DATA_VALID2)) =="
    },
    {
        "line": 18,
        "fullcodeline": "ext_debug(\"ext4_split_extents_at: inode %lu, logical\""
    },
    {
        "line": 21,
        "fullcodeline": "ext4_ext_show_leaf(inode, path);"
    },
    {
        "line": 23,
        "fullcodeline": "depth = ext_depth(inode);"
    },
    {
        "line": 24,
        "fullcodeline": "ex = path[depth].p_ext;"
    },
    {
        "line": 25,
        "fullcodeline": "ee_block = le32_to_cpu(ex->ee_block);"
    },
    {
        "line": 26,
        "fullcodeline": "ee_len = ext4_ext_get_actual_len(ex);"
    },
    {
        "line": 27,
        "fullcodeline": "newblock = split - ee_block + ext4_ext_pblock(ex);"
    },
    {
        "line": 29,
        "fullcodeline": "BUG_ON(split < ee_block || split >= (ee_block + ee_len));"
    },
    {
        "line": 31,
        "fullcodeline": "err = ext4_ext_get_access(handle, inode, path + depth);"
    },
    {
        "line": 54,
        "fullcodeline": "memcpy(&orig_ex, ex, sizeof(orig_ex));"
    },
    {
        "line": 55,
        "fullcodeline": "ex->ee_len = cpu_to_le16(split - ee_block);"
    },
    {
        "line": 63,
        "fullcodeline": "err = ext4_ext_dirty(handle, inode, path + depth);"
    },
    {
        "line": 67,
        "fullcodeline": "ex2 = &newex;"
    },
    {
        "line": 68,
        "fullcodeline": "ex2->ee_block = cpu_to_le32(split);"
    },
    {
        "line": 69,
        "fullcodeline": "ex2->ee_len   = cpu_to_le16(ee_len - (split - ee_block));"
    },
    {
        "line": 70,
        "fullcodeline": "ext4_ext_store_pblock(ex2, newblock);"
    },
    {
        "line": 74,
        "fullcodeline": "err = ext4_ext_insert_extent(handle, inode, path, &newex, flags);"
    },
    {
        "line": 95,
        "fullcodeline": "ext4_ext_show_leaf(inode, path);"
    },
    {
        "line": 35,
        "fullcodeline": "if (split == ee_block) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (split_flag & EXT4_EXT_MARK_UNINIT1)"
    },
    {
        "line": 71,
        "fullcodeline": "if (split_flag & EXT4_EXT_MARK_UNINIT2)"
    },
    {
        "line": 75,
        "fullcodeline": "if (err == -ENOSPC && (EXT4_EXT_MAY_ZEROOUT & split_flag)) {"
    },
    {
        "line": 16,
        "fullcodeline": "(EXT4_EXT_DATA_VALID1 | EXT4_EXT_DATA_VALID2));"
    },
    {
        "line": 49,
        "fullcodeline": "err = ext4_ext_dirty(handle, inode, path + path->p_depth);"
    },
    {
        "line": 57,
        "fullcodeline": "ext4_ext_mark_uninitialized(ex);"
    },
    {
        "line": 72,
        "fullcodeline": "ext4_ext_mark_uninitialized(ex2);"
    },
    {
        "line": 87,
        "fullcodeline": "ex->ee_len = cpu_to_le16(ee_len);"
    },
    {
        "line": 88,
        "fullcodeline": "ext4_ext_try_to_merge(handle, inode, path, ex);"
    },
    {
        "line": 89,
        "fullcodeline": "err = ext4_ext_dirty(handle, inode, path + path->p_depth);"
    },
    {
        "line": 41,
        "fullcodeline": "if (split_flag & EXT4_EXT_MARK_UNINIT2)"
    },
    {
        "line": 46,
        "fullcodeline": "if (!(flags & EXT4_GET_BLOCKS_PRE_IO))"
    },
    {
        "line": 76,
        "fullcodeline": "if (split_flag & (EXT4_EXT_DATA_VALID1|EXT4_EXT_DATA_VALID2)) {"
    },
    {
        "line": 42,
        "fullcodeline": "ext4_ext_mark_uninitialized(ex);"
    },
    {
        "line": 47,
        "fullcodeline": "ext4_ext_try_to_merge(handle, inode, path, ex);"
    },
    {
        "line": 44,
        "fullcodeline": "ext4_ext_mark_initialized(ex);"
    },
    {
        "line": 77,
        "fullcodeline": "if (split_flag & EXT4_EXT_DATA_VALID1)"
    },
    {
        "line": 82,
        "fullcodeline": "err = ext4_ext_zeroout(inode, &orig_ex);"
    },
    {
        "line": 78,
        "fullcodeline": "err = ext4_ext_zeroout(inode, ex2);"
    },
    {
        "line": 80,
        "fullcodeline": "err = ext4_ext_zeroout(inode, ex);"
    }
]