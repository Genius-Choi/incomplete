[
    {
        "line": 2,
        "fullcodeline": "enum try_read_result gotdata = READ_NO_DATA_RECEIVED;"
    },
    {
        "line": 5,
        "fullcodeline": "assert(c != NULL);"
    },
    {
        "line": 7,
        "fullcodeline": "if (c->rcurr != c->rbuf) {"
    },
    {
        "line": 10,
        "fullcodeline": "c->rcurr = c->rbuf;"
    },
    {
        "line": 28,
        "fullcodeline": "int avail = c->rsize - c->rbytes;"
    },
    {
        "line": 29,
        "fullcodeline": "res = read(c->sfd, c->rbuf + c->rbytes, avail);"
    },
    {
        "line": 8,
        "fullcodeline": "if (c->rbytes != 0) /* otherwise there's nothing to copy */"
    },
    {
        "line": 14,
        "fullcodeline": "if (c->rbytes >= c->rsize) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (res > 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (res == 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (res == -1) {"
    },
    {
        "line": 9,
        "fullcodeline": "memmove(c->rbuf, c->rcurr, c->rbytes);"
    },
    {
        "line": 15,
        "fullcodeline": "char *new_rbuf = realloc(c->rbuf, c->rsize * 2);"
    },
    {
        "line": 24,
        "fullcodeline": "c->rcurr = c->rbuf = new_rbuf;"
    },
    {
        "line": 25,
        "fullcodeline": "c->rsize *= 2;"
    },
    {
        "line": 31,
        "fullcodeline": "pthread_mutex_lock(&c->thread->stats.mutex);"
    },
    {
        "line": 32,
        "fullcodeline": "c->thread->stats.bytes_read += res;"
    },
    {
        "line": 33,
        "fullcodeline": "pthread_mutex_unlock(&c->thread->stats.mutex);"
    },
    {
        "line": 34,
        "fullcodeline": "gotdata = READ_DATA_RECEIVED;"
    },
    {
        "line": 35,
        "fullcodeline": "c->rbytes += res;"
    },
    {
        "line": 16,
        "fullcodeline": "if (!new_rbuf) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (res == avail) {"
    },
    {
        "line": 19,
        "fullcodeline": "c->rbytes = 0; /* ignore what we read */"
    },
    {
        "line": 20,
        "fullcodeline": "out_string(c, \"SERVER_ERROR out of memory reading request\");"
    },
    {
        "line": 21,
        "fullcodeline": "c->write_and_go = conn_closing;"
    },
    {
        "line": 46,
        "fullcodeline": "if (errno == EAGAIN || errno == EWOULDBLOCK) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (settings.verbose > 0)"
    },
    {
        "line": 18,
        "fullcodeline": "fprintf(stderr, \"Couldn't realloc input buffer\\n\");"
    }
]