[
    {
        "line": 5,
        "fullcodeline": "size_t length = stream_data->getSize();"
    },
    {
        "line": 6,
        "fullcodeline": "PointerHolder<InputSource> input ="
    },
    {
        "line": 9,
        "fullcodeline": "tokenizer.allowEOF();"
    },
    {
        "line": 10,
        "fullcodeline": "bool empty = false;"
    },
    {
        "line": 7,
        "fullcodeline": "new BufferInputSource(description, stream_data.getPointer());"
    },
    {
        "line": 11,
        "fullcodeline": "while (static_cast<size_t>(input->tell()) < length)"
    },
    {
        "line": 13,
        "fullcodeline": "QPDFObjectHandle obj ="
    },
    {
        "line": 21,
        "fullcodeline": "callbacks->handleObject(obj);"
    },
    {
        "line": 14,
        "fullcodeline": "parseInternal(input, \"content\", tokenizer, empty, 0, 0, true);"
    },
    {
        "line": 15,
        "fullcodeline": "if (! obj.isInitialized())"
    },
    {
        "line": 22,
        "fullcodeline": "if (obj.isOperator() && (obj.getOperatorValue() == \"ID\"))"
    },
    {
        "line": 27,
        "fullcodeline": "input->read(&ch, 1);"
    },
    {
        "line": 28,
        "fullcodeline": "char buf[4];"
    },
    {
        "line": 29,
        "fullcodeline": "memset(buf, '\\0', sizeof(buf));"
    },
    {
        "line": 30,
        "fullcodeline": "bool done = false;"
    },
    {
        "line": 61,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDFObjectHandle inline image token\");"
    },
    {
        "line": 62,
        "fullcodeline": "callbacks->handleObject("
    },
    {
        "line": 32,
        "fullcodeline": "while (! done)"
    },
    {
        "line": 63,
        "fullcodeline": "QPDFObjectHandle::newInlineImage(inline_image));"
    },
    {
        "line": 41,
        "fullcodeline": "inline_image += ch;"
    },
    {
        "line": 42,
        "fullcodeline": "memmove(buf, buf + 1, sizeof(buf) - 1);"
    },
    {
        "line": 43,
        "fullcodeline": "buf[sizeof(buf) - 1] = ch;"
    },
    {
        "line": 34,
        "fullcodeline": "if (input->read(&ch, 1) == 0)"
    },
    {
        "line": 44,
        "fullcodeline": "if (strchr(\" \\t\\n\\v\\f\\r\", buf[0]) &&"
    },
    {
        "line": 36,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDFObjectHandle EOF in inline image\");"
    },
    {
        "line": 47,
        "fullcodeline": "strchr(\" \\t\\n\\v\\f\\r\", buf[3]))"
    },
    {
        "line": 50,
        "fullcodeline": "done = true;"
    },
    {
        "line": 51,
        "fullcodeline": "input->seek(-3, SEEK_CUR);"
    },
    {
        "line": 37,
        "fullcodeline": "throw QPDFExc(qpdf_e_damaged_pdf, input->getName(),"
    },
    {
        "line": 46,
        "fullcodeline": "(buf[2] == 'I') &&"
    },
    {
        "line": 52,
        "fullcodeline": "for (int i = 0; i < 4; ++i)"
    },
    {
        "line": 38,
        "fullcodeline": "\"stream data\", input->tell(),"
    },
    {
        "line": 45,
        "fullcodeline": "(buf[1] == 'E') &&"
    },
    {
        "line": 54,
        "fullcodeline": "if (inline_image.length() > 0)"
    },
    {
        "line": 56,
        "fullcodeline": "inline_image.erase(inline_image.length() - 1);"
    }
]