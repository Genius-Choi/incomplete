[
    {
        "line": 13,
        "fullcodeline": "empty = false;"
    },
    {
        "line": 25,
        "fullcodeline": "qpdf_offset_t offset = input->tell();"
    },
    {
        "line": 26,
        "fullcodeline": "std::vector<QPDFObjectHandle> olist;"
    },
    {
        "line": 27,
        "fullcodeline": "bool done = false;"
    },
    {
        "line": 14,
        "fullcodeline": "if (in_dictionary && in_array)"
    },
    {
        "line": 28,
        "fullcodeline": "while (! done)"
    },
    {
        "line": 30,
        "fullcodeline": "object = QPDFObjectHandle();"
    },
    {
        "line": 32,
        "fullcodeline": "QPDFTokenizer::Token token ="
    },
    {
        "line": 229,
        "fullcodeline": "object = newArray(olist);"
    },
    {
        "line": 19,
        "fullcodeline": "throw std::logic_error("
    },
    {
        "line": 33,
        "fullcodeline": "tokenizer.readToken(input, object_description);"
    },
    {
        "line": 35,
        "fullcodeline": "switch (token.getType())"
    },
    {
        "line": 205,
        "fullcodeline": "if (in_dictionary || in_array)"
    },
    {
        "line": 54,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDFObjectHandle bad brace\");"
    },
    {
        "line": 55,
        "fullcodeline": "warn(context,"
    },
    {
        "line": 60,
        "fullcodeline": "object = newNull();"
    },
    {
        "line": 98,
        "fullcodeline": "object = parseInternal("
    },
    {
        "line": 104,
        "fullcodeline": "object = parseInternal("
    },
    {
        "line": 110,
        "fullcodeline": "object = newBool((token.getValue() == \"true\"));"
    },
    {
        "line": 114,
        "fullcodeline": "object = newNull();"
    },
    {
        "line": 118,
        "fullcodeline": "object = newInteger(QUtil::string_to_ll(token.getValue().c_str()));"
    },
    {
        "line": 122,
        "fullcodeline": "object = newReal(token.getValue());"
    },
    {
        "line": 126,
        "fullcodeline": "object = newName(token.getValue());"
    },
    {
        "line": 195,
        "fullcodeline": "warn(context,"
    },
    {
        "line": 201,
        "fullcodeline": "object = newNull();"
    },
    {
        "line": 56,
        "fullcodeline": "QPDFExc(qpdf_e_damaged_pdf, input->getName(),"
    },
    {
        "line": 131,
        "fullcodeline": "std::string const& value = token.getValue();"
    },
    {
        "line": 184,
        "fullcodeline": "std::string val = token.getValue();"
    },
    {
        "line": 189,
        "fullcodeline": "object = QPDFObjectHandle::newString(val);"
    },
    {
        "line": 196,
        "fullcodeline": "QPDFExc(qpdf_e_damaged_pdf, input->getName(),"
    },
    {
        "line": 207,
        "fullcodeline": "if (! done)"
    },
    {
        "line": 236,
        "fullcodeline": "std::set<std::string> names;"
    },
    {
        "line": 246,
        "fullcodeline": "std::map<std::string, QPDFObjectHandle> dict;"
    },
    {
        "line": 247,
        "fullcodeline": "int next_fake_key = 1;"
    },
    {
        "line": 291,
        "fullcodeline": "object = newDictionary(dict);"
    },
    {
        "line": 58,
        "fullcodeline": "input->getLastOffset(),"
    },
    {
        "line": 66,
        "fullcodeline": "done = true;"
    },
    {
        "line": 83,
        "fullcodeline": "done = true;"
    },
    {
        "line": 198,
        "fullcodeline": "input->getLastOffset(),"
    },
    {
        "line": 209,
        "fullcodeline": "olist.push_back(object);"
    },
    {
        "line": 212,
        "fullcodeline": "else if (! object.isInitialized())"
    },
    {
        "line": 238,
        "fullcodeline": "iter != olist.end(); ++iter)"
    },
    {
        "line": 248,
        "fullcodeline": "for (unsigned int i = 0; i < olist.size(); ++i)"
    },
    {
        "line": 70,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDFObjectHandle bad array close\");"
    },
    {
        "line": 71,
        "fullcodeline": "warn(context,"
    },
    {
        "line": 76,
        "fullcodeline": "object = newNull();"
    },
    {
        "line": 87,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDFObjectHandle bad dictionary close\");"
    },
    {
        "line": 88,
        "fullcodeline": "warn(context,"
    },
    {
        "line": 93,
        "fullcodeline": "object = newNull();"
    },
    {
        "line": 134,
        "fullcodeline": "object = QPDFObjectHandle::newOperator(value);"
    },
    {
        "line": 187,
        "fullcodeline": "decrypter->decryptString(val);"
    },
    {
        "line": 214,
        "fullcodeline": "warn(context,"
    },
    {
        "line": 219,
        "fullcodeline": "object = newNull();"
    },
    {
        "line": 237,
        "fullcodeline": "for (std::vector<QPDFObjectHandle>::iterator iter = olist.begin();"
    },
    {
        "line": 250,
        "fullcodeline": "QPDFObjectHandle key_obj = olist.at(i);"
    },
    {
        "line": 289,
        "fullcodeline": "dict[key_obj.getName()] = val;"
    },
    {
        "line": 47,
        "fullcodeline": "throw std::logic_error("
    },
    {
        "line": 72,
        "fullcodeline": "QPDFExc(qpdf_e_damaged_pdf, input->getName(),"
    },
    {
        "line": 89,
        "fullcodeline": "QPDFExc(qpdf_e_damaged_pdf, input->getName(),"
    },
    {
        "line": 215,
        "fullcodeline": "QPDFExc(qpdf_e_damaged_pdf, input->getName(),"
    },
    {
        "line": 223,
        "fullcodeline": "done = true;"
    },
    {
        "line": 240,
        "fullcodeline": "if ((! (*iter).isIndirect()) && (*iter).isName())"
    },
    {
        "line": 252,
        "fullcodeline": "if (key_obj.isIndirect() || (! key_obj.isName()))"
    },
    {
        "line": 74,
        "fullcodeline": "input->getLastOffset(),"
    },
    {
        "line": 91,
        "fullcodeline": "input->getLastOffset(),"
    },
    {
        "line": 136,
        "fullcodeline": "else if ((value == \"R\") && (in_array || in_dictionary) &&"
    },
    {
        "line": 217,
        "fullcodeline": "input->getLastOffset(),"
    },
    {
        "line": 242,
        "fullcodeline": "names.insert((*iter).getName());"
    },
    {
        "line": 254,
        "fullcodeline": "bool found_fake = false;"
    },
    {
        "line": 264,
        "fullcodeline": "warn(context,"
    },
    {
        "line": 271,
        "fullcodeline": "val = key_obj;"
    },
    {
        "line": 272,
        "fullcodeline": "key_obj = newName(candidate);"
    },
    {
        "line": 141,
        "fullcodeline": "(olist.at(olist.size() - 2).isInteger()))"
    },
    {
        "line": 151,
        "fullcodeline": "object = newIndirect("
    },
    {
        "line": 155,
        "fullcodeline": "olist.pop_back();"
    },
    {
        "line": 156,
        "fullcodeline": "olist.pop_back();"
    },
    {
        "line": 256,
        "fullcodeline": "while (! found_fake)"
    },
    {
        "line": 265,
        "fullcodeline": "QPDFExc("
    },
    {
        "line": 140,
        "fullcodeline": "(! olist.at(olist.size() - 2).isIndirect()) &&"
    },
    {
        "line": 143,
        "fullcodeline": "if (context == 0)"
    },
    {
        "line": 258,
        "fullcodeline": "candidate ="
    },
    {
        "line": 260,
        "fullcodeline": "found_fake = (names.count(candidate) == 0);"
    },
    {
        "line": 261,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDFObjectHandle found fake\","
    },
    {
        "line": 267,
        "fullcodeline": "input->getName(), object_description, offset,"
    },
    {
        "line": 268,
        "fullcodeline": "\"expected dictionary key but found\""
    },
    {
        "line": 274,
        "fullcodeline": "else if (i + 1 >= olist.size())"
    },
    {
        "line": 139,
        "fullcodeline": "(olist.at(olist.size() - 1).isInteger()) &&"
    },
    {
        "line": 145,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDFObjectHandle indirect without context\");"
    },
    {
        "line": 153,
        "fullcodeline": "olist.at(olist.size() - 2).getIntValue(),"
    },
    {
        "line": 154,
        "fullcodeline": "olist.at(olist.size() - 1).getIntValue());"
    },
    {
        "line": 158,
        "fullcodeline": "else if ((value == \"endobj\") &&"
    },
    {
        "line": 259,
        "fullcodeline": "\"/QPDFFake\" + QUtil::int_to_string(next_fake_key++);"
    },
    {
        "line": 262,
        "fullcodeline": "(found_fake ? 0 : 1));"
    },
    {
        "line": 276,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDFObjectHandle no val for last key\");"
    },
    {
        "line": 277,
        "fullcodeline": "warn(context,"
    },
    {
        "line": 283,
        "fullcodeline": "val = newNull();"
    },
    {
        "line": 138,
        "fullcodeline": "(! olist.at(olist.size() - 1).isIndirect()) &&"
    },
    {
        "line": 146,
        "fullcodeline": "throw std::logic_error("
    },
    {
        "line": 159,
        "fullcodeline": "(! (in_array || in_dictionary)))"
    },
    {
        "line": 164,
        "fullcodeline": "object = newNull();"
    },
    {
        "line": 165,
        "fullcodeline": "input->seek(input->getLastOffset(), SEEK_SET);"
    },
    {
        "line": 166,
        "fullcodeline": "empty = true;"
    },
    {
        "line": 278,
        "fullcodeline": "QPDFExc("
    },
    {
        "line": 287,
        "fullcodeline": "val = olist.at(++i);"
    },
    {
        "line": 137,
        "fullcodeline": "(olist.size() >= 2) &&"
    },
    {
        "line": 170,
        "fullcodeline": "QTC::TC(\"qpdf\", \"QPDFObjectHandle treat word as string\");"
    },
    {
        "line": 171,
        "fullcodeline": "warn(context,"
    },
    {
        "line": 177,
        "fullcodeline": "object = newString(value);"
    },
    {
        "line": 280,
        "fullcodeline": "input->getName(), object_description, offset,"
    },
    {
        "line": 172,
        "fullcodeline": "QPDFExc(qpdf_e_damaged_pdf, input->getName(),"
    },
    {
        "line": 174,
        "fullcodeline": "input->getLastOffset(),"
    }
]