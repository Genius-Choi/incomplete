[
    {
        "line": 2,
        "fullcodeline": "redirect_request = source_request.replace("
    },
    {
        "line": 7,
        "fullcodeline": "has_cookie_header = \"Cookie\" in redirect_request.headers"
    },
    {
        "line": 8,
        "fullcodeline": "has_authorization_header = \"Authorization\" in redirect_request.headers"
    },
    {
        "line": 9,
        "fullcodeline": "if has_cookie_header or has_authorization_header:"
    },
    {
        "line": 10,
        "fullcodeline": "default_ports = {\"http\": 80, \"https\": 443}"
    },
    {
        "line": 12,
        "fullcodeline": "parsed_source_request = urlparse_cached(source_request)"
    },
    {
        "line": 20,
        "fullcodeline": "parsed_redirect_request = urlparse_cached(redirect_request)"
    },
    {
        "line": 13,
        "fullcodeline": "source_scheme, source_host, source_port = ("
    },
    {
        "line": 21,
        "fullcodeline": "redirect_scheme, redirect_host, redirect_port = ("
    },
    {
        "line": 28,
        "fullcodeline": "if has_cookie_header and ("
    },
    {
        "line": 35,
        "fullcodeline": "if has_authorization_header and ("
    },
    {
        "line": 29,
        "fullcodeline": "(source_scheme != redirect_scheme and redirect_scheme != \"https\")"
    },
    {
        "line": 36,
        "fullcodeline": "source_scheme != redirect_scheme"
    },
    {
        "line": 16,
        "fullcodeline": "parsed_source_request.port"
    },
    {
        "line": 24,
        "fullcodeline": "parsed_redirect_request.port"
    },
    {
        "line": 30,
        "fullcodeline": "or source_host != redirect_host"
    },
    {
        "line": 37,
        "fullcodeline": "or source_host != redirect_host"
    },
    {
        "line": 17,
        "fullcodeline": "or default_ports.get(parsed_source_request.scheme),"
    },
    {
        "line": 25,
        "fullcodeline": "or default_ports.get(parsed_redirect_request.scheme),"
    }
]