[
    {
        "line": 10,
        "fullcodeline": "if not force_reload_whois and Domain.objects.filter(name=ip_domain).exists() and Domain.objects.get(name=ip_domain).domain_info:"
    },
    {
        "line": 11,
        "fullcodeline": "domain = Domain.objects.get(name=ip_domain)"
    },
    {
        "line": 14,
        "fullcodeline": "domain.save()"
    },
    {
        "line": 15,
        "fullcodeline": "domain_info_db = domain.domain_info"
    },
    {
        "line": 16,
        "fullcodeline": "domain_info = DottedDict("
    },
    {
        "line": 68,
        "fullcodeline": "txt_records = []"
    },
    {
        "line": 69,
        "fullcodeline": "mx_records = []"
    },
    {
        "line": 73,
        "fullcodeline": "a_records.append(dns['name'])"
    },
    {
        "line": 75,
        "fullcodeline": "txt_records.append(dns['name'])"
    },
    {
        "line": 77,
        "fullcodeline": "mx_records.append(dns['name'])"
    },
    {
        "line": 78,
        "fullcodeline": "domain_info.a_records = a_records"
    },
    {
        "line": 79,
        "fullcodeline": "domain_info.txt_records = txt_records"
    },
    {
        "line": 80,
        "fullcodeline": "domain_info.mx_records = mx_records"
    },
    {
        "line": 82,
        "fullcodeline": "logger.info(f'Domain info for \"{ip_domain}\" not found in DB, querying whois')"
    },
    {
        "line": 83,
        "fullcodeline": "domain_info = DottedDict()"
    },
    {
        "line": 87,
        "fullcodeline": "domain_info.historical_ips = historical_ips"
    },
    {
        "line": 89,
        "fullcodeline": "logger.error(f'HistoricalIP for {ip_domain} not found!\\nError: {str(e)}')"
    },
    {
        "line": 90,
        "fullcodeline": "historical_ips = []"
    },
    {
        "line": 95,
        "fullcodeline": "logger.error(f'Associated domain not found for {ip_domain}\\nError: {str(e)}')"
    },
    {
        "line": 100,
        "fullcodeline": "output_path = '/tmp/ip_domain_tlsx.txt'"
    },
    {
        "line": 101,
        "fullcodeline": "tlsx_command = f'tlsx -san -cn -silent -ro -host {ip_domain} -o {output_path}'"
    },
    {
        "line": 102,
        "fullcodeline": "run_command("
    },
    {
        "line": 106,
        "fullcodeline": "tlsx_output = []"
    },
    {
        "line": 110,
        "fullcodeline": "tldextract_target = tldextract.extract(ip_domain)"
    },
    {
        "line": 113,
        "fullcodeline": "tldextract_res = tldextract.extract(doms)"
    },
    {
        "line": 117,
        "fullcodeline": "related_tlds = list(set(related_tlds))"
    },
    {
        "line": 118,
        "fullcodeline": "domain_info.related_tlds = related_tlds"
    },
    {
        "line": 120,
        "fullcodeline": "logger.error(f'Associated domain not found for {ip_domain}\\nError: {str(e)}')"
    },
    {
        "line": 121,
        "fullcodeline": "similar_domains = []"
    },
    {
        "line": 123,
        "fullcodeline": "related_domains_list = []"
    },
    {
        "line": 126,
        "fullcodeline": "db_domain_info = domain.domain_info if domain.domain_info else DomainInfo()"
    },
    {
        "line": 127,
        "fullcodeline": "db_domain_info.save()"
    },
    {
        "line": 133,
        "fullcodeline": "related_domains_list.append(_domain['name'])"
    },
    {
        "line": 149,
        "fullcodeline": "domain.domain_info = db_domain_info"
    },
    {
        "line": 150,
        "fullcodeline": "domain.save()"
    },
    {
        "line": 152,
        "fullcodeline": "command = f'netlas host {ip_domain} -f json'"
    },
    {
        "line": 154,
        "fullcodeline": "netlas_key = get_netlas_key()"
    },
    {
        "line": 155,
        "fullcodeline": "command += f' -a {netlas_key}' if netlas_key else ''"
    },
    {
        "line": 157,
        "fullcodeline": "result = subprocess.check_output(command.split()).decode('utf-8')"
    },
    {
        "line": 168,
        "fullcodeline": "logger.info(result)"
    },
    {
        "line": 169,
        "fullcodeline": "whois = result.get('whois') if result.get('whois') else {}"
    },
    {
        "line": 171,
        "fullcodeline": "domain_info.created = whois.get('created_date')"
    },
    {
        "line": 172,
        "fullcodeline": "domain_info.expires = whois.get('expiration_date')"
    },
    {
        "line": 173,
        "fullcodeline": "domain_info.updated = whois.get('updated_date')"
    },
    {
        "line": 174,
        "fullcodeline": "domain_info.whois_server = whois.get('whois_server')"
    },
    {
        "line": 179,
        "fullcodeline": "domain_info.registrant_name = registrant.get('name')"
    },
    {
        "line": 180,
        "fullcodeline": "domain_info.registrant_country = registrant.get('country')"
    },
    {
        "line": 181,
        "fullcodeline": "domain_info.registrant_id = registrant.get('id')"
    },
    {
        "line": 182,
        "fullcodeline": "domain_info.registrant_state = registrant.get('province')"
    },
    {
        "line": 183,
        "fullcodeline": "domain_info.registrant_city = registrant.get('city')"
    },
    {
        "line": 184,
        "fullcodeline": "domain_info.registrant_phone = registrant.get('phone')"
    },
    {
        "line": 185,
        "fullcodeline": "domain_info.registrant_address = registrant.get('street')"
    },
    {
        "line": 186,
        "fullcodeline": "domain_info.registrant_organization = registrant.get('organization')"
    },
    {
        "line": 187,
        "fullcodeline": "domain_info.registrant_fax = registrant.get('fax')"
    },
    {
        "line": 188,
        "fullcodeline": "domain_info.registrant_zip_code = registrant.get('postal_code')"
    },
    {
        "line": 189,
        "fullcodeline": "email_search = EMAIL_REGEX.search(str(registrant.get('email')))"
    },
    {
        "line": 190,
        "fullcodeline": "field_content = email_search.group(0) if email_search else None"
    },
    {
        "line": 191,
        "fullcodeline": "domain_info.registrant_email = field_content"
    },
    {
        "line": 195,
        "fullcodeline": "domain_info.admin_name = administrative.get('name')"
    },
    {
        "line": 196,
        "fullcodeline": "domain_info.admin_country = administrative.get('country')"
    },
    {
        "line": 197,
        "fullcodeline": "domain_info.admin_id = administrative.get('id')"
    },
    {
        "line": 198,
        "fullcodeline": "domain_info.admin_state = administrative.get('province')"
    },
    {
        "line": 199,
        "fullcodeline": "domain_info.admin_city = administrative.get('city')"
    },
    {
        "line": 200,
        "fullcodeline": "domain_info.admin_phone = administrative.get('phone')"
    },
    {
        "line": 201,
        "fullcodeline": "domain_info.admin_address = administrative.get('street')"
    },
    {
        "line": 202,
        "fullcodeline": "domain_info.admin_organization = administrative.get('organization')"
    },
    {
        "line": 203,
        "fullcodeline": "domain_info.admin_fax = administrative.get('fax')"
    },
    {
        "line": 204,
        "fullcodeline": "domain_info.admin_zip_code = administrative.get('postal_code')"
    },
    {
        "line": 205,
        "fullcodeline": "mail_search = EMAIL_REGEX.search(str(administrative.get('email')))"
    },
    {
        "line": 206,
        "fullcodeline": "field_content = email_search.group(0) if email_search else None"
    },
    {
        "line": 207,
        "fullcodeline": "domain_info.admin_email = field_content"
    },
    {
        "line": 211,
        "fullcodeline": "domain_info.tech_name = technical.get('name')"
    },
    {
        "line": 212,
        "fullcodeline": "domain_info.tech_country = technical.get('country')"
    },
    {
        "line": 213,
        "fullcodeline": "domain_info.tech_state = technical.get('province')"
    },
    {
        "line": 214,
        "fullcodeline": "domain_info.tech_id = technical.get('id')"
    },
    {
        "line": 215,
        "fullcodeline": "domain_info.tech_city = technical.get('city')"
    },
    {
        "line": 216,
        "fullcodeline": "domain_info.tech_phone = technical.get('phone')"
    },
    {
        "line": 217,
        "fullcodeline": "domain_info.tech_address = technical.get('street')"
    },
    {
        "line": 218,
        "fullcodeline": "domain_info.tech_organization = technical.get('organization')"
    },
    {
        "line": 219,
        "fullcodeline": "domain_info.tech_fax = technical.get('fax')"
    },
    {
        "line": 220,
        "fullcodeline": "domain_info.tech_zip_code = technical.get('postal_code')"
    },
    {
        "line": 221,
        "fullcodeline": "mail_search = EMAIL_REGEX.search(str(technical.get('email')))"
    },
    {
        "line": 222,
        "fullcodeline": "field_content = email_search.group(0) if email_search else None"
    },
    {
        "line": 223,
        "fullcodeline": "domain_info.tech_email = field_content"
    },
    {
        "line": 227,
        "fullcodeline": "domain_info.mx_records = dns.get('mx')"
    },
    {
        "line": 228,
        "fullcodeline": "domain_info.txt_records = dns.get('txt')"
    },
    {
        "line": 229,
        "fullcodeline": "domain_info.a_records = dns.get('a')"
    },
    {
        "line": 231,
        "fullcodeline": "domain_info.ns_records = whois.get('name_servers')"
    },
    {
        "line": 232,
        "fullcodeline": "domain_info.dnssec = True if whois.get('dnssec') else False"
    },
    {
        "line": 233,
        "fullcodeline": "domain_info.status = whois.get('status')"
    },
    {
        "line": 237,
        "fullcodeline": "domain_info.registrar_name = registrar.get('name')"
    },
    {
        "line": 238,
        "fullcodeline": "domain_info.registrar_email = registrar.get('email')"
    },
    {
        "line": 239,
        "fullcodeline": "domain_info.registrar_phone = registrar.get('phone')"
    },
    {
        "line": 240,
        "fullcodeline": "domain_info.registrar_url = registrar.get('url')"
    },
    {
        "line": 243,
        "fullcodeline": "related_domains = reverse_whois(domain_info.get('registrant_email')) if domain_info.get('registrant_email') else []"
    },
    {
        "line": 248,
        "fullcodeline": "related_domains_list = list(set(related_domains_list))"
    },
    {
        "line": 249,
        "fullcodeline": "domain_info.related_domains = related_domains_list"
    },
    {
        "line": 254,
        "fullcodeline": "db_domain_info = domain.domain_info if domain.domain_info else DomainInfo()"
    },
    {
        "line": 255,
        "fullcodeline": "db_domain_info.save()"
    },
    {
        "line": 262,
        "fullcodeline": "db_domain_info.dnssec = domain_info.get('dnssec')"
    },
    {
        "line": 264,
        "fullcodeline": "db_domain_info.created = domain_info.get('created')"
    },
    {
        "line": 265,
        "fullcodeline": "db_domain_info.updated = domain_info.get('updated')"
    },
    {
        "line": 266,
        "fullcodeline": "db_domain_info.expires = domain_info.get('expires')"
    },
    {
        "line": 268,
        "fullcodeline": "db_domain_info.registrar = Registrar.objects.get_or_create("
    },
    {
        "line": 274,
        "fullcodeline": "db_domain_info.registrant = DomainRegistration.objects.get_or_create("
    },
    {
        "line": 287,
        "fullcodeline": "db_domain_info.admin = DomainRegistration.objects.get_or_create("
    },
    {
        "line": 300,
        "fullcodeline": "db_domain_info.tech = DomainRegistration.objects.get_or_create("
    },
    {
        "line": 317,
        "fullcodeline": "_status.save()"
    },
    {
        "line": 324,
        "fullcodeline": "_ns.save()"
    },
    {
        "line": 332,
        "fullcodeline": "_a.save()"
    },
    {
        "line": 339,
        "fullcodeline": "_mx.save()"
    },
    {
        "line": 346,
        "fullcodeline": "_txt.save()"
    },
    {
        "line": 349,
        "fullcodeline": "db_domain_info.geolocation_iso = domain_info.get('registrant_country')"
    },
    {
        "line": 350,
        "fullcodeline": "db_domain_info.whois_server = domain_info.get('whois_server')"
    },
    {
        "line": 351,
        "fullcodeline": "db_domain_info.save()"
    },
    {
        "line": 352,
        "fullcodeline": "domain.domain_info = db_domain_info"
    },
    {
        "line": 353,
        "fullcodeline": "domain.save()"
    },
    {
        "line": 363,
        "fullcodeline": "return {"
    },
    {
        "line": 132,
        "fullcodeline": "db_domain_info.related_domains.add(domain_related)"
    },
    {
        "line": 139,
        "fullcodeline": "db_domain_info.related_tlds.add(domain_related)"
    },
    {
        "line": 148,
        "fullcodeline": "db_domain_info.historical_ips.add(historical_ip)"
    },
    {
        "line": 260,
        "fullcodeline": "db_domain_info.related_domains.add(domain_rel)"
    },
    {
        "line": 318,
        "fullcodeline": "db_domain_info.status.add(_status)"
    },
    {
        "line": 325,
        "fullcodeline": "db_domain_info.name_servers.add(_ns)"
    },
    {
        "line": 333,
        "fullcodeline": "db_domain_info.dns_records.add(_a)"
    },
    {
        "line": 340,
        "fullcodeline": "db_domain_info.dns_records.add(_mx)"
    },
    {
        "line": 347,
        "fullcodeline": "db_domain_info.dns_records.add(_txt)"
    },
    {
        "line": 366,
        "fullcodeline": "'dnssec': domain_info.get('dnssec'),"
    },
    {
        "line": 367,
        "fullcodeline": "'created': domain_info.get('created'),"
    },
    {
        "line": 368,
        "fullcodeline": "'updated': domain_info.get('updated'),"
    },
    {
        "line": 369,
        "fullcodeline": "'expires': domain_info.get('expires'),"
    },
    {
        "line": 370,
        "fullcodeline": "'geolocation_iso': domain_info.get('registrant_country'),"
    },
    {
        "line": 371,
        "fullcodeline": "'domain_statuses': domain_info.get('status'),"
    },
    {
        "line": 372,
        "fullcodeline": "'whois_server': domain_info.get('whois_server'),"
    },
    {
        "line": 423,
        "fullcodeline": "'nameservers': domain_info.get('ns_records'),"
    },
    {
        "line": 425,
        "fullcodeline": "'related_domains': domain_info.get('related_domains'),"
    },
    {
        "line": 426,
        "fullcodeline": "'related_tlds': domain_info.get('related_tlds'),"
    },
    {
        "line": 427,
        "fullcodeline": "'historical_ips': domain_info.get('historical_ips'),"
    },
    {
        "line": 70,
        "fullcodeline": "dns_records = [{'name': dns['name'], 'type': dns['type']} for dns in DomainDNSRecordSerializer(domain_info_db.dns_records, many=True).data]"
    },
    {
        "line": 356,
        "fullcodeline": "return {"
    },
    {
        "line": 373,
        "fullcodeline": "'dns': {"
    },
    {
        "line": 378,
        "fullcodeline": "'registrar': {"
    },
    {
        "line": 384,
        "fullcodeline": "'registrant': {"
    },
    {
        "line": 397,
        "fullcodeline": "'admin': {"
    },
    {
        "line": 410,
        "fullcodeline": "'technical_contact': {"
    },
    {
        "line": 22,
        "fullcodeline": "status=[status['name'] for status in DomainWhoisStatusSerializer(domain_info_db.status, many=True).data],"
    },
    {
        "line": 24,
        "fullcodeline": "ns_records=[ns['name'] for ns in NameServersSerializer(domain_info_db.name_servers, many=True).data],"
    },
    {
        "line": 62,
        "fullcodeline": "related_tlds=[domain['name'] for domain in RelatedDomainSerializer(domain_info_db.related_tlds, many=True).data],"
    },
    {
        "line": 63,
        "fullcodeline": "related_domains=[domain['name'] for domain in RelatedDomainSerializer(domain_info_db.related_domains, many=True).data],"
    },
    {
        "line": 64,
        "fullcodeline": "historical_ips=[ip for ip in HistoricalIPSerializer(domain_info_db.historical_ips, many=True).data],"
    },
    {
        "line": 360,
        "fullcodeline": "'message': str(e)"
    },
    {
        "line": 374,
        "fullcodeline": "'a': domain_info.get('a_records'),"
    },
    {
        "line": 375,
        "fullcodeline": "'mx': domain_info.get('mx_records'),"
    },
    {
        "line": 376,
        "fullcodeline": "'txt': domain_info.get('txt_records'),"
    },
    {
        "line": 379,
        "fullcodeline": "'name': domain_info.get('registrar_name'),"
    },
    {
        "line": 380,
        "fullcodeline": "'phone': domain_info.get('registrar_phone'),"
    },
    {
        "line": 381,
        "fullcodeline": "'email': domain_info.get('registrar_email'),"
    },
    {
        "line": 382,
        "fullcodeline": "'url': domain_info.get('registrar_url'),"
    },
    {
        "line": 385,
        "fullcodeline": "'name': domain_info.get('registrant_name'),"
    },
    {
        "line": 386,
        "fullcodeline": "'id': domain_info.get('registrant_id'),"
    },
    {
        "line": 387,
        "fullcodeline": "'organization': domain_info.get('registrant_organization'),"
    },
    {
        "line": 388,
        "fullcodeline": "'address': domain_info.get('registrant_address'),"
    },
    {
        "line": 389,
        "fullcodeline": "'city': domain_info.get('registrant_city'),"
    },
    {
        "line": 390,
        "fullcodeline": "'state': domain_info.get('registrant_state'),"
    },
    {
        "line": 391,
        "fullcodeline": "'zipcode': domain_info.get('registrant_zip_code'),"
    },
    {
        "line": 392,
        "fullcodeline": "'country': domain_info.get('registrant_country'),"
    },
    {
        "line": 393,
        "fullcodeline": "'phone': domain_info.get('registrant_phone'),"
    },
    {
        "line": 394,
        "fullcodeline": "'fax': domain_info.get('registrant_fax'),"
    },
    {
        "line": 395,
        "fullcodeline": "'email': domain_info.get('registrant_email'),"
    },
    {
        "line": 398,
        "fullcodeline": "'name': domain_info.get('admin_name'),"
    },
    {
        "line": 399,
        "fullcodeline": "'id': domain_info.get('admin_id'),"
    },
    {
        "line": 400,
        "fullcodeline": "'organization': domain_info.get('admin_organization'),"
    },
    {
        "line": 401,
        "fullcodeline": "'address':domain_info.get('admin_address'),"
    },
    {
        "line": 402,
        "fullcodeline": "'city': domain_info.get('admin_city'),"
    },
    {
        "line": 403,
        "fullcodeline": "'state': domain_info.get('admin_state'),"
    },
    {
        "line": 404,
        "fullcodeline": "'zipcode': domain_info.get('admin_zip_code'),"
    },
    {
        "line": 405,
        "fullcodeline": "'country': domain_info.get('admin_country'),"
    },
    {
        "line": 406,
        "fullcodeline": "'phone': domain_info.get('admin_phone'),"
    },
    {
        "line": 407,
        "fullcodeline": "'fax': domain_info.get('admin_fax'),"
    },
    {
        "line": 408,
        "fullcodeline": "'email': domain_info.get('admin_email'),"
    },
    {
        "line": 411,
        "fullcodeline": "'name': domain_info.get('tech_name'),"
    },
    {
        "line": 412,
        "fullcodeline": "'id': domain_info.get('tech_id'),"
    },
    {
        "line": 413,
        "fullcodeline": "'organization': domain_info.get('tech_organization'),"
    },
    {
        "line": 414,
        "fullcodeline": "'address': domain_info.get('tech_address'),"
    },
    {
        "line": 415,
        "fullcodeline": "'city': domain_info.get('tech_city'),"
    },
    {
        "line": 416,
        "fullcodeline": "'state': domain_info.get('tech_state'),"
    },
    {
        "line": 417,
        "fullcodeline": "'zipcode': domain_info.get('tech_zip_code'),"
    },
    {
        "line": 418,
        "fullcodeline": "'country': domain_info.get('tech_country'),"
    },
    {
        "line": 419,
        "fullcodeline": "'phone': domain_info.get('tech_phone'),"
    },
    {
        "line": 420,
        "fullcodeline": "'fax': domain_info.get('tech_fax'),"
    },
    {
        "line": 421,
        "fullcodeline": "'email': domain_info.get('tech_email'),"
    },
    {
        "line": 269,
        "fullcodeline": "name=domain_info.get('registrar_name'),"
    },
    {
        "line": 270,
        "fullcodeline": "email=domain_info.get('registrar_email'),"
    },
    {
        "line": 271,
        "fullcodeline": "phone=domain_info.get('registrar_phone'),"
    },
    {
        "line": 272,
        "fullcodeline": "url=domain_info.get('registrar_url'),"
    },
    {
        "line": 275,
        "fullcodeline": "name=domain_info.get('registrant_name'),"
    },
    {
        "line": 276,
        "fullcodeline": "organization=domain_info.get('registrant_organization'),"
    },
    {
        "line": 277,
        "fullcodeline": "address=domain_info.get('registrant_address'),"
    },
    {
        "line": 278,
        "fullcodeline": "city=domain_info.get('registrant_city'),"
    },
    {
        "line": 279,
        "fullcodeline": "state=domain_info.get('registrant_state'),"
    },
    {
        "line": 280,
        "fullcodeline": "zip_code=domain_info.get('registrant_zip_code'),"
    },
    {
        "line": 281,
        "fullcodeline": "country=domain_info.get('registrant_country'),"
    },
    {
        "line": 282,
        "fullcodeline": "email=domain_info.get('registrant_email'),"
    },
    {
        "line": 283,
        "fullcodeline": "phone=domain_info.get('registrant_phone'),"
    },
    {
        "line": 284,
        "fullcodeline": "fax=domain_info.get('registrant_fax'),"
    },
    {
        "line": 285,
        "fullcodeline": "id_str=domain_info.get('registrant_id'),"
    },
    {
        "line": 288,
        "fullcodeline": "name=domain_info.get('admin_name'),"
    },
    {
        "line": 289,
        "fullcodeline": "organization=domain_info.get('admin_organization'),"
    },
    {
        "line": 290,
        "fullcodeline": "address=domain_info.get('admin_address'),"
    },
    {
        "line": 291,
        "fullcodeline": "city=domain_info.get('admin_city'),"
    },
    {
        "line": 292,
        "fullcodeline": "state=domain_info.get('admin_state'),"
    },
    {
        "line": 293,
        "fullcodeline": "zip_code=domain_info.get('admin_zip_code'),"
    },
    {
        "line": 294,
        "fullcodeline": "country=domain_info.get('admin_country'),"
    },
    {
        "line": 295,
        "fullcodeline": "email=domain_info.get('admin_email'),"
    },
    {
        "line": 296,
        "fullcodeline": "phone=domain_info.get('admin_phone'),"
    },
    {
        "line": 297,
        "fullcodeline": "fax=domain_info.get('admin_fax'),"
    },
    {
        "line": 298,
        "fullcodeline": "id_str=domain_info.get('admin_id'),"
    },
    {
        "line": 301,
        "fullcodeline": "name=domain_info.get('tech_name'),"
    },
    {
        "line": 302,
        "fullcodeline": "organization=domain_info.get('tech_organization'),"
    },
    {
        "line": 303,
        "fullcodeline": "address=domain_info.get('tech_address'),"
    },
    {
        "line": 304,
        "fullcodeline": "city=domain_info.get('tech_city'),"
    },
    {
        "line": 305,
        "fullcodeline": "state=domain_info.get('tech_state'),"
    },
    {
        "line": 306,
        "fullcodeline": "zip_code=domain_info.get('tech_zip_code'),"
    },
    {
        "line": 307,
        "fullcodeline": "country=domain_info.get('tech_country'),"
    },
    {
        "line": 308,
        "fullcodeline": "email=domain_info.get('tech_email'),"
    },
    {
        "line": 309,
        "fullcodeline": "phone=domain_info.get('tech_phone'),"
    },
    {
        "line": 310,
        "fullcodeline": "fax=domain_info.get('tech_fax'),"
    },
    {
        "line": 311,
        "fullcodeline": "id_str=domain_info.get('tech_id'),"
    }
]