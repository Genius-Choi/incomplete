[
    {
        "line": 3,
        "fullcodeline": "if (!dynsym || !dynstr) {"
    },
    {
        "line": 6,
        "fullcodeline": "for (unsigned relnum= 0; 0 < sz; (sz -= sizeof(Elf64_Rela)), ++rela, ++relnum) {"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned const symnum = get_te64(&rela->r_info) >> 32;"
    },
    {
        "line": 8,
        "fullcodeline": "char const *const symnam = get_dynsym_name(symnum, relnum);"
    },
    {
        "line": 9,
        "fullcodeline": "if (0==strcmp(symnam, \"__libc_start_main\")  // glibc"
    },
    {
        "line": 12,
        "fullcodeline": "||  0==strcmp(symnam, \"__uClibc_start_main\"))"
    },
    {
        "line": 11,
        "fullcodeline": "||  0==strcmp(symnam, \"__uClibc_main\")"
    },
    {
        "line": 10,
        "fullcodeline": "||  0==strcmp(symnam, \"__libc_init\")  // Android"
    }
]