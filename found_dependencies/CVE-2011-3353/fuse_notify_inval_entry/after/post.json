[
    {
        "line": 5,
        "fullcodeline": "int err = -ENOMEM;"
    },
    {
        "line": 9,
        "fullcodeline": "buf = kzalloc(FUSE_NAME_MAX + 1, GFP_KERNEL);"
    },
    {
        "line": 13,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 17,
        "fullcodeline": "err = fuse_copy_one(cs, &outarg, sizeof(outarg));"
    },
    {
        "line": 21,
        "fullcodeline": "err = -ENAMETOOLONG;"
    },
    {
        "line": 25,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 29,
        "fullcodeline": "name.name = buf;"
    },
    {
        "line": 31,
        "fullcodeline": "err = fuse_copy_one(cs, buf, outarg.namelen + 1);"
    },
    {
        "line": 34,
        "fullcodeline": "fuse_copy_finish(cs);"
    },
    {
        "line": 35,
        "fullcodeline": "buf[outarg.namelen] = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "name.hash = full_name_hash(name.name, name.len);"
    },
    {
        "line": 38,
        "fullcodeline": "down_read(&fc->killsb);"
    },
    {
        "line": 39,
        "fullcodeline": "err = -ENOENT;"
    },
    {
        "line": 42,
        "fullcodeline": "up_read(&fc->killsb);"
    },
    {
        "line": 43,
        "fullcodeline": "kfree(buf);"
    },
    {
        "line": 47,
        "fullcodeline": "kfree(buf);"
    },
    {
        "line": 48,
        "fullcodeline": "fuse_copy_finish(cs);"
    },
    {
        "line": 10,
        "fullcodeline": "if (!buf)"
    },
    {
        "line": 14,
        "fullcodeline": "if (size < sizeof(outarg))"
    },
    {
        "line": 22,
        "fullcodeline": "if (outarg.namelen > FUSE_NAME_MAX)"
    },
    {
        "line": 26,
        "fullcodeline": "if (size != sizeof(outarg) + outarg.namelen + 1)"
    },
    {
        "line": 41,
        "fullcodeline": "err = fuse_reverse_inval_entry(fc->sb, outarg.parent, &name);"
    }
]