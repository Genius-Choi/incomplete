[
    {
        "line": 10,
        "fullcodeline": "assert(image_info != (ImageInfo *) NULL);"
    },
    {
        "line": 13,
        "fullcodeline": "ReadCommandlLine(argc,&argv);"
    },
    {
        "line": 16,
        "fullcodeline": "cli_wand=AcquireMagickCLI(image_info,exception);"
    },
    {
        "line": 17,
        "fullcodeline": "cli_wand->location=\"Initializing\";"
    },
    {
        "line": 18,
        "fullcodeline": "cli_wand->filename=argv[0];"
    },
    {
        "line": 19,
        "fullcodeline": "cli_wand->line=1;"
    },
    {
        "line": 26,
        "fullcodeline": "GetPathComponent(argv[0],TailPath,cli_wand->wand.name);"
    },
    {
        "line": 27,
        "fullcodeline": "SetClientName(cli_wand->wand.name);"
    },
    {
        "line": 28,
        "fullcodeline": "ConcatenateMagickString(cli_wand->wand.name,\"-CLI\",MagickPathExtent);"
    },
    {
        "line": 30,
        "fullcodeline": "len=strlen(argv[0]);  /* precaution */"
    },
    {
        "line": 114,
        "fullcodeline": "cli_wand->location=\"Cleanup\";"
    },
    {
        "line": 115,
        "fullcodeline": "cli_wand->filename=argv[0];"
    },
    {
        "line": 130,
        "fullcodeline": "assert(cli_wand->wand.image_info == image_info);"
    },
    {
        "line": 131,
        "fullcodeline": "assert(cli_wand->wand.exception == exception);"
    },
    {
        "line": 155,
        "fullcodeline": "cli_wand->location=\"Exiting\";"
    },
    {
        "line": 156,
        "fullcodeline": "cli_wand->filename=argv[0];"
    },
    {
        "line": 162,
        "fullcodeline": "cli_wand->wand.image_info = (ImageInfo *) NULL; /* not these */"
    },
    {
        "line": 163,
        "fullcodeline": "cli_wand->wand.exception = (ExceptionInfo *) NULL;"
    },
    {
        "line": 164,
        "fullcodeline": "cli_wand=DestroyMagickCLI(cli_wand);"
    },
    {
        "line": 21,
        "fullcodeline": "if (cli_wand->wand.debug != MagickFalse)"
    },
    {
        "line": 33,
        "fullcodeline": "if (len>=7 && LocaleCompare(\"convert\",argv[0]+len-7) == 0) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (len>=6 && LocaleCompare(\"script\",argv[0]+len-6) == 0) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (argc == 2) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (argc < 3) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (LocaleCompare(\"-concatenate\",argv[1]) == 0) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (argc == 3 && LocaleCompare(\"-list\",argv[1]) == 0) {"
    },
    {
        "line": 99,
        "fullcodeline": "if (LocaleCompare(\"-script\",argv[1]) == 0) {"
    },
    {
        "line": 116,
        "fullcodeline": "if (cli_wand->wand.debug != MagickFalse)"
    },
    {
        "line": 122,
        "fullcodeline": "while ((cli_wand->image_list_stack != (Stack *) NULL) &&"
    },
    {
        "line": 124,
        "fullcodeline": "CLIOption(cli_wand,\")\");"
    },
    {
        "line": 125,
        "fullcodeline": "while ((cli_wand->image_info_stack != (Stack *) NULL) &&"
    },
    {
        "line": 127,
        "fullcodeline": "CLIOption(cli_wand,\"}\");"
    },
    {
        "line": 134,
        "fullcodeline": "if (metadata != (char **) NULL) {"
    },
    {
        "line": 157,
        "fullcodeline": "if (cli_wand->wand.debug != MagickFalse)"
    },
    {
        "line": 166,
        "fullcodeline": "return(exception->severity < ErrorException ? MagickTrue : MagickFalse);"
    },
    {
        "line": 22,
        "fullcodeline": "(void) CLILogEvent(cli_wand,CommandEvent,GetMagickModule(),"
    },
    {
        "line": 34,
        "fullcodeline": "cli_wand->process_flags = ConvertCommandOptionFlags;"
    },
    {
        "line": 35,
        "fullcodeline": "(void) FormatLocaleFile(stderr,\"WARNING: %s\\n\","
    },
    {
        "line": 75,
        "fullcodeline": "(void) FormatLocaleFile(stderr,"
    },
    {
        "line": 77,
        "fullcodeline": "MagickUsage(MagickFalse);"
    },
    {
        "line": 86,
        "fullcodeline": "ConcatenateImages(argc,argv,exception);"
    },
    {
        "line": 92,
        "fullcodeline": "CLIOption(cli_wand, argv[1], argv[2]);"
    },
    {
        "line": 104,
        "fullcodeline": "GetPathComponent(argv[2],TailPath,cli_wand->wand.name);"
    },
    {
        "line": 105,
        "fullcodeline": "ProcessScriptOptions(cli_wand,argv[2],argc,argv,3);"
    },
    {
        "line": 117,
        "fullcodeline": "(void) CLILogEvent(cli_wand,CommandEvent,GetMagickModule(),"
    },
    {
        "line": 123,
        "fullcodeline": "(cli_wand->image_list_stack->next != (Stack *) NULL))"
    },
    {
        "line": 126,
        "fullcodeline": "(cli_wand->image_info_stack->next != (Stack *) NULL))"
    },
    {
        "line": 141,
        "fullcodeline": "format=\"%w,%h,%m\";   // Get this from image_info Option splaytree"
    },
    {
        "line": 143,
        "fullcodeline": "text=InterpretImageProperties(image_info,cli_wand->wand.images,format,"
    },
    {
        "line": 158,
        "fullcodeline": "(void) CLILogEvent(cli_wand,CommandEvent,GetMagickModule(),"
    },
    {
        "line": 41,
        "fullcodeline": "if (argc >= 2 && (  (*(argv[1]) != '-') || (strlen(argv[1]) == 1) )) {"
    },
    {
        "line": 50,
        "fullcodeline": "if ((LocaleCompare(\"-version\",argv[1]) == 0)   || /* GNU standard option */"
    },
    {
        "line": 55,
        "fullcodeline": "if ((LocaleCompare(\"-help\",argv[1]) == 0)   || /* GNU standard option */"
    },
    {
        "line": 63,
        "fullcodeline": "if (LocaleCompare(\"-usage\",argv[1]) == 0) {   /* both version & usage */"
    },
    {
        "line": 83,
        "fullcodeline": "if (cli_wand->wand.debug != MagickFalse)"
    },
    {
        "line": 109,
        "fullcodeline": "ProcessCommandOptions(cli_wand,argc,argv,1);"
    },
    {
        "line": 145,
        "fullcodeline": "if (text == (char *) NULL)"
    },
    {
        "line": 42,
        "fullcodeline": "GetPathComponent(argv[1],TailPath,cli_wand->wand.name);"
    },
    {
        "line": 43,
        "fullcodeline": "ProcessScriptOptions(cli_wand,argv[1],argc,argv,2);"
    },
    {
        "line": 51,
        "fullcodeline": "(LocaleCompare(\"--version\",argv[1]) == 0) ) { /* just version */"
    },
    {
        "line": 52,
        "fullcodeline": "CLIOption(cli_wand, \"-version\");"
    },
    {
        "line": 56,
        "fullcodeline": "(LocaleCompare(\"--help\",argv[1]) == 0) ) { /* just a brief summary */"
    },
    {
        "line": 60,
        "fullcodeline": "MagickUsage(MagickFalse);"
    },
    {
        "line": 67,
        "fullcodeline": "CLIOption(cli_wand, \"-version\" );"
    },
    {
        "line": 68,
        "fullcodeline": "MagickUsage(MagickTrue);"
    },
    {
        "line": 84,
        "fullcodeline": "(void) CLILogEvent(cli_wand,CommandEvent,GetMagickModule(),"
    },
    {
        "line": 146,
        "fullcodeline": "ThrowMagickException(exception,GetMagickModule(),ResourceLimitError,"
    },
    {
        "line": 57,
        "fullcodeline": "if (cli_wand->wand.debug != MagickFalse)"
    },
    {
        "line": 64,
        "fullcodeline": "if (cli_wand->wand.debug != MagickFalse)"
    },
    {
        "line": 147,
        "fullcodeline": "\"MemoryAllocationFailed\",\"`%s'\", GetExceptionMessage(errno));"
    },
    {
        "line": 149,
        "fullcodeline": "(void) ConcatenateString(&(*metadata),text);"
    },
    {
        "line": 150,
        "fullcodeline": "text=DestroyString(text);"
    },
    {
        "line": 58,
        "fullcodeline": "(void) CLILogEvent(cli_wand,CommandEvent,GetMagickModule(),"
    },
    {
        "line": 65,
        "fullcodeline": "(void) CLILogEvent(cli_wand,CommandEvent,GetMagickModule(),"
    }
]