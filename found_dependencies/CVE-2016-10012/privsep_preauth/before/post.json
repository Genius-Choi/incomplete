[
    {
        "line": 5,
        "fullcodeline": "struct ssh_sandbox *box = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "pmonitor = monitor_init();"
    },
    {
        "line": 14,
        "fullcodeline": "pid = fork();"
    },
    {
        "line": 12,
        "fullcodeline": "if (use_privsep == PRIVSEP_ON)"
    },
    {
        "line": 15,
        "fullcodeline": "if (pid == -1) {"
    },
    {
        "line": 13,
        "fullcodeline": "box = ssh_sandbox_init();"
    },
    {
        "line": 16,
        "fullcodeline": "fatal(\"fork of unprivileged child failed\");"
    },
    {
        "line": 17,
        "fullcodeline": "} else if (pid != 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "debug2(\"Network child is on pid %ld\", (long)pid);"
    },
    {
        "line": 20,
        "fullcodeline": "pmonitor->m_pid = pid;"
    },
    {
        "line": 31,
        "fullcodeline": "monitor_child_preauth(authctxt, pmonitor);"
    },
    {
        "line": 34,
        "fullcodeline": "monitor_sync(pmonitor);"
    },
    {
        "line": 43,
        "fullcodeline": "privsep_is_preauth = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "pmonitor->m_pid = -1;"
    },
    {
        "line": 29,
        "fullcodeline": "if (box != NULL)"
    },
    {
        "line": 37,
        "fullcodeline": "while (waitpid(pid, &status, 0) < 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (WIFEXITED(status)) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (box != NULL)"
    },
    {
        "line": 57,
        "fullcodeline": "close(pmonitor->m_sendfd);"
    },
    {
        "line": 58,
        "fullcodeline": "close(pmonitor->m_log_recvfd);"
    },
    {
        "line": 61,
        "fullcodeline": "set_log_handler(mm_log_handler, pmonitor);"
    },
    {
        "line": 63,
        "fullcodeline": "privsep_preauth_child();"
    },
    {
        "line": 64,
        "fullcodeline": "setproctitle(\"%s\", \"[net]\");"
    },
    {
        "line": 22,
        "fullcodeline": "r = ssh_get_authentication_socket(&auth_sock);"
    },
    {
        "line": 30,
        "fullcodeline": "ssh_sandbox_parent_preauth(box, pid);"
    },
    {
        "line": 40,
        "fullcodeline": "pmonitor->m_pid = -1;"
    },
    {
        "line": 41,
        "fullcodeline": "fatal(\"%s: waitpid: %s\", __func__, strerror(errno));"
    },
    {
        "line": 53,
        "fullcodeline": "ssh_sandbox_parent_finish(box);"
    },
    {
        "line": 65,
        "fullcodeline": "if (box != NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "if (r != 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (errno == EINTR)"
    },
    {
        "line": 46,
        "fullcodeline": "if (WEXITSTATUS(status) != 0)"
    },
    {
        "line": 66,
        "fullcodeline": "ssh_sandbox_child(box);"
    },
    {
        "line": 24,
        "fullcodeline": "error(\"Could not get agent socket: %s\","
    },
    {
        "line": 26,
        "fullcodeline": "have_agent = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "fatal(\"%s: preauth child exited with status %d\","
    },
    {
        "line": 49,
        "fullcodeline": "} else if (WIFSIGNALED(status))"
    },
    {
        "line": 25,
        "fullcodeline": "ssh_err(r));"
    },
    {
        "line": 48,
        "fullcodeline": "__func__, WEXITSTATUS(status));"
    },
    {
        "line": 50,
        "fullcodeline": "fatal(\"%s: preauth child terminated by signal %d\","
    },
    {
        "line": 51,
        "fullcodeline": "__func__, WTERMSIG(status));"
    }
]