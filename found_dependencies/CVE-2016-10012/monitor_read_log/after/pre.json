[
    {
        "line": 7,
        "fullcodeline": "buffer_init(&logmsg);"
    },
    {
        "line": 10,
        "fullcodeline": "buffer_append_space(&logmsg, 4);"
    },
    {
        "line": 22,
        "fullcodeline": "len = buffer_get_int(&logmsg);"
    },
    {
        "line": 27,
        "fullcodeline": "buffer_clear(&logmsg);"
    },
    {
        "line": 28,
        "fullcodeline": "buffer_append_space(&logmsg, len);"
    },
    {
        "line": 34,
        "fullcodeline": "level = buffer_get_int(&logmsg);"
    },
    {
        "line": 35,
        "fullcodeline": "msg = buffer_get_string(&logmsg, NULL);"
    },
    {
        "line": 39,
        "fullcodeline": "do_log2(level, \"%s [preauth]\", msg);"
    },
    {
        "line": 11,
        "fullcodeline": "if (atomicio(read, pmonitor->m_log_recvfd,"
    },
    {
        "line": 12,
        "fullcodeline": "buffer_ptr(&logmsg), buffer_len(&logmsg)) != buffer_len(&logmsg)) {"
    },
    {
        "line": 20,
        "fullcodeline": "fatal(\"%s: log fd read: %s\", __func__, strerror(errno));"
    },
    {
        "line": 23,
        "fullcodeline": "if (len <= 4 || len > 8192)"
    },
    {
        "line": 24,
        "fullcodeline": "fatal(\"%s: invalid log message length %u\", __func__, len);"
    },
    {
        "line": 29,
        "fullcodeline": "if (atomicio(read, pmonitor->m_log_recvfd,"
    },
    {
        "line": 30,
        "fullcodeline": "buffer_ptr(&logmsg), buffer_len(&logmsg)) != buffer_len(&logmsg))"
    },
    {
        "line": 31,
        "fullcodeline": "fatal(\"%s: log fd read: %s\", __func__, strerror(errno));"
    },
    {
        "line": 36,
        "fullcodeline": "if (log_level_name(level) == NULL)"
    },
    {
        "line": 37,
        "fullcodeline": "fatal(\"%s: invalid log level %u (corrupted message?)\","
    },
    {
        "line": 13,
        "fullcodeline": "if (errno == EPIPE) {"
    },
    {
        "line": 14,
        "fullcodeline": "buffer_free(&logmsg);"
    },
    {
        "line": 15,
        "fullcodeline": "debug(\"%s: child log fd closed\", __func__);"
    },
    {
        "line": 16,
        "fullcodeline": "close(pmonitor->m_log_recvfd);"
    },
    {
        "line": 17,
        "fullcodeline": "pmonitor->m_log_recvfd = -1;"
    },
    {
        "line": 18,
        "fullcodeline": "return -1;"
    }
]