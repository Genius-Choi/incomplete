[
    {
        "line": 16,
        "fullcodeline": "mm->mmalloc = mmalloc;"
    },
    {
        "line": 18,
        "fullcodeline": "address = mmap(NULL, size, PROT_WRITE|PROT_READ, MAP_ANON|MAP_SHARED,"
    },
    {
        "line": 23,
        "fullcodeline": "mm->address = address;"
    },
    {
        "line": 24,
        "fullcodeline": "mm->size = size;"
    },
    {
        "line": 26,
        "fullcodeline": "RB_INIT(&mm->rb_free);"
    },
    {
        "line": 27,
        "fullcodeline": "RB_INIT(&mm->rb_allocated);"
    },
    {
        "line": 29,
        "fullcodeline": "mm_make_entry(mm, &mm->rb_free, address, size);"
    },
    {
        "line": 6,
        "fullcodeline": "if (mmalloc == NULL)"
    },
    {
        "line": 20,
        "fullcodeline": "if (address == MAP_FAILED)"
    },
    {
        "line": 7,
        "fullcodeline": "mm = xcalloc(1, sizeof(struct mm_master));"
    },
    {
        "line": 19,
        "fullcodeline": "-1, 0);"
    },
    {
        "line": 21,
        "fullcodeline": "fatal(\"mmap(%zu): %s\", size, strerror(errno));"
    },
    {
        "line": 9,
        "fullcodeline": "mm = mm_xmalloc(mmalloc, sizeof(struct mm_master));"
    }
]