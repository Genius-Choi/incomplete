[
    {
        "line": 3,
        "fullcodeline": "char *myproposal[PROPOSAL_MAX] = { KEX_CLIENT };"
    },
    {
        "line": 8,
        "fullcodeline": "xxx_host = host;"
    },
    {
        "line": 9,
        "fullcodeline": "xxx_hostaddr = hostaddr;"
    },
    {
        "line": 13,
        "fullcodeline": "myproposal[PROPOSAL_KEX_ALGS] = compat_kex_proposal(s);"
    },
    {
        "line": 14,
        "fullcodeline": "myproposal[PROPOSAL_ENC_ALGS_CTOS] ="
    },
    {
        "line": 16,
        "fullcodeline": "myproposal[PROPOSAL_ENC_ALGS_STOC] ="
    },
    {
        "line": 18,
        "fullcodeline": "myproposal[PROPOSAL_COMP_ALGS_CTOS] ="
    },
    {
        "line": 21,
        "fullcodeline": "myproposal[PROPOSAL_MAC_ALGS_CTOS] ="
    },
    {
        "line": 45,
        "fullcodeline": "kex = active_state->kex;"
    },
    {
        "line": 56,
        "fullcodeline": "kex->kex[KEX_C25519_SHA256] = kexc25519_client;"
    },
    {
        "line": 57,
        "fullcodeline": "kex->client_version_string=client_version_string;"
    },
    {
        "line": 58,
        "fullcodeline": "kex->server_version_string=server_version_string;"
    },
    {
        "line": 59,
        "fullcodeline": "kex->verify_host_key=&verify_host_key_callback;"
    },
    {
        "line": 61,
        "fullcodeline": "dispatch_run(DISPATCH_BLOCK, &kex->done, active_state);"
    },
    {
        "line": 64,
        "fullcodeline": "myproposal[PROPOSAL_KEX_ALGS] ="
    },
    {
        "line": 69,
        "fullcodeline": "session_id2 = kex->session_id;"
    },
    {
        "line": 70,
        "fullcodeline": "session_id2_len = kex->session_id_len;"
    },
    {
        "line": 11,
        "fullcodeline": "if ((s = kex_names_cat(options.kex_algorithms, \"ext-info-c\")) == NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "compat_cipher_proposal(options.ciphers);"
    },
    {
        "line": 17,
        "fullcodeline": "compat_cipher_proposal(options.ciphers);"
    },
    {
        "line": 19,
        "fullcodeline": "myproposal[PROPOSAL_COMP_ALGS_STOC] = options.compression ?"
    },
    {
        "line": 22,
        "fullcodeline": "myproposal[PROPOSAL_MAC_ALGS_STOC] = options.macs;"
    },
    {
        "line": 23,
        "fullcodeline": "if (options.hostkeyalgorithms != NULL) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (options.rekey_limit || options.rekey_interval)"
    },
    {
        "line": 43,
        "fullcodeline": "if ((r = kex_setup(active_state, myproposal)) != 0)"
    },
    {
        "line": 65,
        "fullcodeline": "compat_kex_proposal(options.kex_algorithms);"
    },
    {
        "line": 66,
        "fullcodeline": "if ((r = kex_prop2buf(kex->my, myproposal)) != 0)"
    },
    {
        "line": 12,
        "fullcodeline": "fatal(\"%s: kex_names_cat\", __func__);"
    },
    {
        "line": 27,
        "fullcodeline": "myproposal[PROPOSAL_SERVER_HOST_KEY_ALGS] ="
    },
    {
        "line": 39,
        "fullcodeline": "packet_set_rekey_limits((u_int32_t)options.rekey_limit,"
    },
    {
        "line": 44,
        "fullcodeline": "fatal(\"kex_setup: %s\", ssh_err(r));"
    },
    {
        "line": 67,
        "fullcodeline": "fatal(\"kex_prop2buf: %s\", ssh_err(r));"
    },
    {
        "line": 24,
        "fullcodeline": "if (kex_assemble_names(KEX_DEFAULT_PK_ALG,"
    },
    {
        "line": 28,
        "fullcodeline": "compat_pkalg_proposal(options.hostkeyalgorithms);"
    },
    {
        "line": 31,
        "fullcodeline": "options.hostkeyalgorithms = xstrdup(KEX_DEFAULT_PK_ALG);"
    },
    {
        "line": 33,
        "fullcodeline": "myproposal[PROPOSAL_SERVER_HOST_KEY_ALGS] ="
    },
    {
        "line": 40,
        "fullcodeline": "(time_t)options.rekey_interval);"
    },
    {
        "line": 26,
        "fullcodeline": "fatal(\"%s: kex_assemble_namelist\", __func__);"
    },
    {
        "line": 34,
        "fullcodeline": "compat_pkalg_proposal("
    },
    {
        "line": 35,
        "fullcodeline": "order_hostkeyalgs(host, hostaddr, port));"
    }
]