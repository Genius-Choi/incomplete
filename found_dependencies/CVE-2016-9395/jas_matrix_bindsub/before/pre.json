[
    {
        "line": 17,
        "fullcodeline": "mat0->flags_ |= JAS_MATRIX_REF;"
    },
    {
        "line": 18,
        "fullcodeline": "mat0->numrows_ = r1 - r0 + 1;"
    },
    {
        "line": 19,
        "fullcodeline": "mat0->numcols_ = c1 - c0 + 1;"
    },
    {
        "line": 20,
        "fullcodeline": "mat0->maxrows_ = mat0->numrows_;"
    },
    {
        "line": 36,
        "fullcodeline": "mat0->xstart_ = mat1->xstart_ + c0;"
    },
    {
        "line": 37,
        "fullcodeline": "mat0->ystart_ = mat1->ystart_ + r0;"
    },
    {
        "line": 38,
        "fullcodeline": "mat0->xend_ = mat0->xstart_ + mat0->numcols_;"
    },
    {
        "line": 39,
        "fullcodeline": "mat0->yend_ = mat0->ystart_ + mat0->numrows_;"
    },
    {
        "line": 21,
        "fullcodeline": "if (!(mat0->rows_ = jas_alloc2(mat0->maxrows_, sizeof(jas_seqent_t *)))) {"
    },
    {
        "line": 32,
        "fullcodeline": "for (i = 0; i < mat0->numrows_; ++i) {"
    },
    {
        "line": 10,
        "fullcodeline": "mat0->data_ = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "mat0->datasize_ = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "jas_free(mat0->rows_);"
    },
    {
        "line": 15,
        "fullcodeline": "mat0->rows_ = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "mat0->rows_[i] = mat1->rows_[r0 + i] + c0;"
    },
    {
        "line": 7,
        "fullcodeline": "if (!(mat0->flags_ & JAS_MATRIX_REF)) {"
    },
    {
        "line": 8,
        "fullcodeline": "jas_free(mat0->data_);"
    }
]