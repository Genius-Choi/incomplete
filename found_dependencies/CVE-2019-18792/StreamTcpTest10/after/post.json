[
    {
        "line": 3,
        "fullcodeline": "Packet *p = SCMalloc(SIZE_OF_PACKET);"
    },
    {
        "line": 4,
        "fullcodeline": "FAIL_IF(unlikely(p == NULL));"
    },
    {
        "line": 9,
        "fullcodeline": "uint8_t payload[4];"
    },
    {
        "line": 10,
        "fullcodeline": "memset(p, 0, SIZE_OF_PACKET);"
    },
    {
        "line": 12,
        "fullcodeline": "memset(&pq,0,sizeof(PacketQueue));"
    },
    {
        "line": 13,
        "fullcodeline": "memset (&f, 0, sizeof(Flow));"
    },
    {
        "line": 14,
        "fullcodeline": "memset(&tv, 0, sizeof (ThreadVars));"
    },
    {
        "line": 15,
        "fullcodeline": "memset(&stt, 0, sizeof (StreamTcpThread));"
    },
    {
        "line": 16,
        "fullcodeline": "memset(&tcph, 0, sizeof (TCPHdr));"
    },
    {
        "line": 17,
        "fullcodeline": "FLOW_INITIALIZE(&f);"
    },
    {
        "line": 18,
        "fullcodeline": "p->flow = &f;"
    },
    {
        "line": 20,
        "fullcodeline": "StreamTcpUTInit(&stt.ra_ctx);"
    },
    {
        "line": 21,
        "fullcodeline": "stream_config.async_oneside = TRUE;"
    },
    {
        "line": 23,
        "fullcodeline": "tcph.th_win = htons(5480);"
    },
    {
        "line": 24,
        "fullcodeline": "tcph.th_seq = htonl(10);"
    },
    {
        "line": 25,
        "fullcodeline": "tcph.th_ack = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "tcph.th_flags = TH_SYN;"
    },
    {
        "line": 27,
        "fullcodeline": "p->tcph = &tcph;"
    },
    {
        "line": 29,
        "fullcodeline": "FAIL_IF(StreamTcpPacket(&tv, p, &stt, &pq) == -1);"
    },
    {
        "line": 31,
        "fullcodeline": "p->tcph->th_seq = htonl(11);"
    },
    {
        "line": 32,
        "fullcodeline": "p->tcph->th_ack = htonl(11);"
    },
    {
        "line": 33,
        "fullcodeline": "p->tcph->th_flags = TH_ACK;"
    },
    {
        "line": 34,
        "fullcodeline": "p->flowflags = FLOW_PKT_TOSERVER;"
    },
    {
        "line": 36,
        "fullcodeline": "FAIL_IF(StreamTcpPacket(&tv, p, &stt, &pq) == -1);"
    },
    {
        "line": 38,
        "fullcodeline": "p->tcph->th_seq = htonl(11);"
    },
    {
        "line": 39,
        "fullcodeline": "p->tcph->th_ack = htonl(11);"
    },
    {
        "line": 40,
        "fullcodeline": "p->tcph->th_flags = TH_ACK|TH_PUSH;"
    },
    {
        "line": 41,
        "fullcodeline": "p->flowflags = FLOW_PKT_TOSERVER;"
    },
    {
        "line": 43,
        "fullcodeline": "StreamTcpCreateTestPacket(payload, 0x42, 3, 4); /*BBB*/"
    },
    {
        "line": 44,
        "fullcodeline": "p->payload = payload;"
    },
    {
        "line": 45,
        "fullcodeline": "p->payload_len = 3;"
    },
    {
        "line": 47,
        "fullcodeline": "FAIL_IF(StreamTcpPacket(&tv, p, &stt, &pq) == -1);"
    },
    {
        "line": 49,
        "fullcodeline": "p->tcph->th_seq = htonl(6);"
    },
    {
        "line": 50,
        "fullcodeline": "p->tcph->th_ack = htonl(11);"
    },
    {
        "line": 51,
        "fullcodeline": "p->tcph->th_flags = TH_ACK|TH_PUSH;"
    },
    {
        "line": 52,
        "fullcodeline": "p->flowflags = FLOW_PKT_TOSERVER;"
    },
    {
        "line": 54,
        "fullcodeline": "StreamTcpCreateTestPacket(payload, 0x42, 3, 4); /*BBB*/"
    },
    {
        "line": 55,
        "fullcodeline": "p->payload = payload;"
    },
    {
        "line": 56,
        "fullcodeline": "p->payload_len = 3;"
    },
    {
        "line": 58,
        "fullcodeline": "FAIL_IF(StreamTcpPacket(&tv, p, &stt, &pq) == -1);"
    },
    {
        "line": 60,
        "fullcodeline": "FAIL_IF(((TcpSession *)(p->flow->protoctx))->state != TCP_ESTABLISHED);"
    },
    {
        "line": 62,
        "fullcodeline": "FAIL_IF(! (((TcpSession *)(p->flow->protoctx))->flags & STREAMTCP_FLAG_ASYNC));"
    },
    {
        "line": 64,
        "fullcodeline": "FAIL_IF(((TcpSession *)(p->flow->protoctx))->client.last_ack != 6 &&"
    },
    {
        "line": 69,
        "fullcodeline": "SCFree(p);"
    },
    {
        "line": 70,
        "fullcodeline": "FLOW_DESTROY(&f);"
    },
    {
        "line": 71,
        "fullcodeline": "StreamTcpUTDeinit(stt.ra_ctx);"
    },
    {
        "line": 65,
        "fullcodeline": "((TcpSession *)(p->flow->protoctx))->server.next_seq != 11);"
    }
]