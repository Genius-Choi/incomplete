[
    {
        "line": 4,
        "fullcodeline": "zend_ulong h, nIndex, max_index = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "uint32_t size = cp_zend_hash_check_size(nNumOfElements);"
    },
    {
        "line": 16,
        "fullcodeline": "ZVAL_NEW_ARR(zvalue);"
    },
    {
        "line": 18,
        "fullcodeline": "zend_array *ht = Z_ARR_P(zvalue);"
    },
    {
        "line": 19,
        "fullcodeline": "ht->nTableSize = size;"
    },
    {
        "line": 20,
        "fullcodeline": "ht->nNumUsed = nNumOfElements;"
    },
    {
        "line": 21,
        "fullcodeline": "ht->nNumOfElements = nNumOfElements;"
    },
    {
        "line": 22,
        "fullcodeline": "ht->nNextFreeElement = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "ht->nTableMask = -(ht->nTableSize);"
    },
    {
        "line": 27,
        "fullcodeline": "ht->pDestructor = ZVAL_PTR_DTOR;"
    },
    {
        "line": 29,
        "fullcodeline": "GC_SET_REFCOUNT(ht, 1);"
    },
    {
        "line": 30,
        "fullcodeline": "GC_TYPE_INFO(ht) = IS_ARRAY;"
    },
    {
        "line": 34,
        "fullcodeline": "HT_SET_DATA_ADDR(ht, emalloc(HT_SIZE(ht)));"
    },
    {
        "line": 35,
        "fullcodeline": "ht->u.flags |= HASH_FLAG_INITIALIZED;"
    },
    {
        "line": 36,
        "fullcodeline": "int ht_hash_size = HT_HASH_SIZE((ht)->nTableMask);"
    },
    {
        "line": 42,
        "fullcodeline": "HT_HASH_RESET(ht);"
    },
    {
        "line": 192,
        "fullcodeline": "ht->nNextFreeElement = max_index;"
    },
    {
        "line": 7,
        "fullcodeline": "if (!size)"
    },
    {
        "line": 11,
        "fullcodeline": "if (!buffer)"
    },
    {
        "line": 37,
        "fullcodeline": "if (ht_hash_size <= 0)"
    },
    {
        "line": 48,
        "fullcodeline": "for(idx = 0; idx < nNumOfElements; idx++)"
    },
    {
        "line": 56,
        "fullcodeline": "buffer += sizeof (SBucketType);"
    },
    {
        "line": 57,
        "fullcodeline": "p = ht->arData + idx;"
    },
    {
        "line": 130,
        "fullcodeline": "nIndex = h | ht->nTableMask;"
    },
    {
        "line": 131,
        "fullcodeline": "Z_NEXT(p->val) = HT_HASH(ht, nIndex);"
    },
    {
        "line": 132,
        "fullcodeline": "HT_HASH(ht, nIndex) = HT_IDX_TO_HASH(idx);"
    },
    {
        "line": 135,
        "fullcodeline": "p->val.u1.v.type = type.data_type;"
    },
    {
        "line": 136,
        "fullcodeline": "Z_TYPE_FLAGS(p->val) = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "if (!buffer)"
    },
    {
        "line": 59,
        "fullcodeline": "if (type.key_type == KEY_TYPE_STRING)"
    },
    {
        "line": 139,
        "fullcodeline": "if (type.data_type == IS_STRING)"
    },
    {
        "line": 55,
        "fullcodeline": "SBucketType type = *((SBucketType*) buffer);"
    },
    {
        "line": 168,
        "fullcodeline": "Z_TYPE_INFO(p->val) = IS_STRING_EX;"
    },
    {
        "line": 62,
        "fullcodeline": "if (type.key_len == 3)"
    },
    {
        "line": 142,
        "fullcodeline": "if (type.data_len == 3)"
    },
    {
        "line": 64,
        "fullcodeline": "void *str_pool_addr = get_pack_string_len_addr(&buffer, &key_len);"
    },
    {
        "line": 65,
        "fullcodeline": "p->key = zend_string_init((char*) str_pool_addr, key_len, 0);"
    },
    {
        "line": 66,
        "fullcodeline": "h = zend_inline_hash_func((char*) str_pool_addr, key_len);"
    },
    {
        "line": 67,
        "fullcodeline": "p->key->h = p->h = h;"
    },
    {
        "line": 96,
        "fullcodeline": "if (type.key_len == 0)"
    },
    {
        "line": 144,
        "fullcodeline": "void *str_pool_addr = get_pack_string_len_addr(&buffer, &data_len);"
    },
    {
        "line": 145,
        "fullcodeline": "p->val.value.str = zend_string_init((char*) str_pool_addr, data_len, 0);"
    },
    {
        "line": 170,
        "fullcodeline": "else if (type.data_type == IS_ARRAY)"
    },
    {
        "line": 87,
        "fullcodeline": "p->key = zend_string_init((char*) buffer, key_len, 0);"
    },
    {
        "line": 89,
        "fullcodeline": "h = zend_inline_hash_func((char*) buffer, key_len);"
    },
    {
        "line": 90,
        "fullcodeline": "buffer += key_len;"
    },
    {
        "line": 91,
        "fullcodeline": "p->key->h = p->h = h;"
    },
    {
        "line": 99,
        "fullcodeline": "h = p->h = idx;"
    },
    {
        "line": 100,
        "fullcodeline": "p->key = NULL;"
    },
    {
        "line": 101,
        "fullcodeline": "max_index = p->h + 1;"
    },
    {
        "line": 165,
        "fullcodeline": "p->val.value.str = zend_string_init((char*) buffer, data_len, 0);"
    },
    {
        "line": 166,
        "fullcodeline": "buffer += data_len;"
    },
    {
        "line": 172,
        "fullcodeline": "uint32_t num = 0;"
    },
    {
        "line": 173,
        "fullcodeline": "buffer = get_array_real_len(buffer, type.data_len, &num);"
    },
    {
        "line": 174,
        "fullcodeline": "buffer = swoole_unserialize_arr(buffer, &p->val, num, flag);"
    },
    {
        "line": 71,
        "fullcodeline": "if (type.key_len == 1)"
    },
    {
        "line": 121,
        "fullcodeline": "p->h = h;"
    },
    {
        "line": 122,
        "fullcodeline": "p->key = NULL;"
    },
    {
        "line": 149,
        "fullcodeline": "if (type.data_len == 1)"
    },
    {
        "line": 74,
        "fullcodeline": "buffer += sizeof (zend_uchar);"
    },
    {
        "line": 106,
        "fullcodeline": "if (type.key_len == 1)"
    },
    {
        "line": 123,
        "fullcodeline": "if (h >= max_index)"
    },
    {
        "line": 152,
        "fullcodeline": "buffer += sizeof (zend_uchar);"
    },
    {
        "line": 176,
        "fullcodeline": "else if (type.data_type == IS_LONG)"
    },
    {
        "line": 109,
        "fullcodeline": "buffer += sizeof (zend_uchar);"
    },
    {
        "line": 125,
        "fullcodeline": "max_index = h + 1;"
    },
    {
        "line": 178,
        "fullcodeline": "buffer = swoole_unserialize_long(buffer, &p->val, type);"
    },
    {
        "line": 73,
        "fullcodeline": "key_len = *((zend_uchar*) buffer);"
    },
    {
        "line": 76,
        "fullcodeline": "else if (type.key_len == 2)"
    },
    {
        "line": 151,
        "fullcodeline": "data_len = *((zend_uchar*) buffer);"
    },
    {
        "line": 154,
        "fullcodeline": "else if (type.data_len == 2)"
    },
    {
        "line": 79,
        "fullcodeline": "buffer += sizeof (unsigned short);"
    },
    {
        "line": 108,
        "fullcodeline": "h = *((zend_uchar*) buffer);"
    },
    {
        "line": 111,
        "fullcodeline": "else if (type.key_len == 2)"
    },
    {
        "line": 157,
        "fullcodeline": "buffer += sizeof (unsigned short);"
    },
    {
        "line": 180,
        "fullcodeline": "else if (type.data_type == IS_DOUBLE)"
    },
    {
        "line": 84,
        "fullcodeline": "buffer += sizeof (size_t);"
    },
    {
        "line": 114,
        "fullcodeline": "buffer += sizeof (unsigned short);"
    },
    {
        "line": 162,
        "fullcodeline": "buffer += sizeof (size_t);"
    },
    {
        "line": 183,
        "fullcodeline": "buffer += sizeof (zend_value);"
    },
    {
        "line": 78,
        "fullcodeline": "key_len = *((unsigned short*) buffer);"
    },
    {
        "line": 119,
        "fullcodeline": "buffer += sizeof (zend_ulong);"
    },
    {
        "line": 156,
        "fullcodeline": "data_len = *((unsigned short*) buffer);"
    },
    {
        "line": 83,
        "fullcodeline": "key_len = *((size_t*) buffer);"
    },
    {
        "line": 113,
        "fullcodeline": "h = *((unsigned short*) buffer);"
    },
    {
        "line": 161,
        "fullcodeline": "data_len = *((size_t*) buffer);"
    },
    {
        "line": 182,
        "fullcodeline": "p->val.value = *((zend_value*) buffer);"
    },
    {
        "line": 185,
        "fullcodeline": "else if (type.data_type == IS_UNDEF)"
    },
    {
        "line": 118,
        "fullcodeline": "h = *((zend_ulong*) buffer);"
    },
    {
        "line": 187,
        "fullcodeline": "buffer = swoole_unserialize_object(buffer, &p->val, type.data_len, NULL, flag);"
    },
    {
        "line": 188,
        "fullcodeline": "Z_TYPE_INFO(p->val) = IS_OBJECT_EX;"
    }
]