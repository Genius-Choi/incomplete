[
    {
        "line": 4,
        "fullcodeline": "zend_uchar real_type = type.data_type;"
    },
    {
        "line": 5,
        "fullcodeline": "unseri_buffer_end = buffer + len;"
    },
    {
        "line": 6,
        "fullcodeline": "buffer += sizeof (SBucketType);"
    },
    {
        "line": 3,
        "fullcodeline": "SBucketType type = *(SBucketType*) (buffer);"
    },
    {
        "line": 12,
        "fullcodeline": "Z_TYPE_INFO_P(return_value) = real_type;"
    },
    {
        "line": 15,
        "fullcodeline": "swoole_unserialize_long(buffer, return_value, type);"
    },
    {
        "line": 16,
        "fullcodeline": "Z_TYPE_INFO_P(return_value) = real_type;"
    },
    {
        "line": 19,
        "fullcodeline": "swoole_unserialize_raw(buffer, return_value);"
    },
    {
        "line": 20,
        "fullcodeline": "Z_TYPE_INFO_P(return_value) = real_type;"
    },
    {
        "line": 23,
        "fullcodeline": "len -= sizeof (SBucketType);"
    },
    {
        "line": 24,
        "fullcodeline": "zend_string *str = swoole_unserialize_string(buffer, len);"
    },
    {
        "line": 25,
        "fullcodeline": "ZVAL_STR(return_value, str);"
    },
    {
        "line": 49,
        "fullcodeline": "unser_start = buffer - sizeof (SBucketType);"
    },
    {
        "line": 34,
        "fullcodeline": "unser_start = buffer - sizeof (SBucketType);"
    },
    {
        "line": 35,
        "fullcodeline": "uint32_t num = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "buffer = get_array_real_len(buffer, type.data_len, &num);"
    },
    {
        "line": 44,
        "fullcodeline": "if (swoole_seria_check_eof(buffer, len) < 0)"
    },
    {
        "line": 50,
        "fullcodeline": "if (!swoole_unserialize_object(buffer, return_value, type.data_len, object_args, flag))"
    },
    {
        "line": 29,
        "fullcodeline": "if (swoole_seria_check_eof(buffer, len) < 0)"
    },
    {
        "line": 37,
        "fullcodeline": "if (!swoole_unserialize_arr(buffer, return_value, num, flag))"
    }
]