[
    {
        "line": 7,
        "fullcodeline": "new_blkg = blkg_alloc(&blkcg_root, q, GFP_KERNEL);"
    },
    {
        "line": 11,
        "fullcodeline": "preloaded = !radix_tree_preload(GFP_KERNEL);"
    },
    {
        "line": 18,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 19,
        "fullcodeline": "spin_lock_irq(q->queue_lock);"
    },
    {
        "line": 20,
        "fullcodeline": "blkg = blkg_create(&blkcg_root, q, new_blkg);"
    },
    {
        "line": 21,
        "fullcodeline": "spin_unlock_irq(q->queue_lock);"
    },
    {
        "line": 22,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 30,
        "fullcodeline": "q->root_blkg = blkg;"
    },
    {
        "line": 31,
        "fullcodeline": "q->root_rl.blkg = blkg;"
    },
    {
        "line": 33,
        "fullcodeline": "ret = blk_throtl_init(q);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!new_blkg)"
    },
    {
        "line": 27,
        "fullcodeline": "if (IS_ERR(blkg))"
    },
    {
        "line": 25,
        "fullcodeline": "radix_tree_preload_end();"
    },
    {
        "line": 35,
        "fullcodeline": "spin_lock_irq(q->queue_lock);"
    },
    {
        "line": 36,
        "fullcodeline": "blkg_destroy_all(q);"
    },
    {
        "line": 37,
        "fullcodeline": "spin_unlock_irq(q->queue_lock);"
    },
    {
        "line": 9,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 28,
        "fullcodeline": "return PTR_ERR(blkg);"
    }
]