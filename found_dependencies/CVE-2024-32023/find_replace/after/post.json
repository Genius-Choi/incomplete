[
    {
        "line": 19,
        "fullcodeline": "log.info(\"Running caption find/replace\")"
    },
    {
        "line": 22,
        "fullcodeline": "if not search_text or not has_ext_files(folder_path, caption_file_ext):"
    },
    {
        "line": 34,
        "fullcodeline": "if caption_file_ext not in [\".caption\", \".txt\", \".txt2\", \".cap\"]:"
    },
    {
        "line": 42,
        "fullcodeline": "if not os.path.exists(folder_path):"
    },
    {
        "line": 54,
        "fullcodeline": "for caption_file in caption_files:"
    },
    {
        "line": 24,
        "fullcodeline": "msgbox("
    },
    {
        "line": 27,
        "fullcodeline": "log.warning("
    },
    {
        "line": 35,
        "fullcodeline": "log.error("
    },
    {
        "line": 43,
        "fullcodeline": "log.error(f\"The provided path '{folder_path}' is not a valid folder.\")"
    },
    {
        "line": 48,
        "fullcodeline": "caption_files = [f for f in os.listdir(folder_path) if f.endswith(caption_file_ext)]"
    },
    {
        "line": 25,
        "fullcodeline": "f\"No files with extension {caption_file_ext} were found in {folder_path}...\""
    },
    {
        "line": 36,
        "fullcodeline": "f\"Unsupported file extension {caption_file_ext} for caption files. Please use .caption, .txt, .txt2, or .cap.\""
    },
    {
        "line": 56,
        "fullcodeline": "file_path = os.path.join(folder_path, caption_file)"
    },
    {
        "line": 50,
        "fullcodeline": "log.error(f\"Error accessing folder {folder_path}: {e}\")"
    },
    {
        "line": 59,
        "fullcodeline": "with open(file_path, \"r\", errors=\"ignore\") as f:"
    },
    {
        "line": 63,
        "fullcodeline": "with open(file_path, \"w\") as f:"
    },
    {
        "line": 66,
        "fullcodeline": "log.error(f\"Error processing file {file_path}: {e}\")"
    },
    {
        "line": 60,
        "fullcodeline": "content = f.read().replace(search_text, replace_text)"
    },
    {
        "line": 64,
        "fullcodeline": "f.write(content)"
    }
]