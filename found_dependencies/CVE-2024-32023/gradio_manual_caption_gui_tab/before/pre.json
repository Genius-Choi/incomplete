[
    {
        "line": 2,
        "fullcodeline": "from .common_gui import create_refresh_button"
    },
    {
        "line": 4,
        "fullcodeline": "default_images_dir = ("
    },
    {
        "line": 9,
        "fullcodeline": "current_images_dir = default_images_dir"
    },
    {
        "line": 12,
        "fullcodeline": "def list_images_dirs(path):"
    },
    {
        "line": 5,
        "fullcodeline": "default_images_dir"
    },
    {
        "line": 18,
        "fullcodeline": "with gr.Tab(\"Manual Captioning\"):"
    },
    {
        "line": 6,
        "fullcodeline": "if default_images_dir is not None"
    },
    {
        "line": 7,
        "fullcodeline": "else os.path.join(scriptdir, \"data\")"
    },
    {
        "line": 19,
        "fullcodeline": "gr.Markdown(\"This utility allows quick captioning and tagging of images.\")"
    },
    {
        "line": 20,
        "fullcodeline": "page = gr.Number(value=-1, visible=False)"
    },
    {
        "line": 21,
        "fullcodeline": "max_page = gr.Number(value=1, visible=False)"
    },
    {
        "line": 22,
        "fullcodeline": "loaded_images_dir = gr.Text(visible=False)"
    },
    {
        "line": 84,
        "fullcodeline": "def render_pagination():"
    },
    {
        "line": 112,
        "fullcodeline": "image_rows = []"
    },
    {
        "line": 113,
        "fullcodeline": "image_files = []"
    },
    {
        "line": 114,
        "fullcodeline": "image_images = []"
    },
    {
        "line": 115,
        "fullcodeline": "image_caption_texts = []"
    },
    {
        "line": 116,
        "fullcodeline": "image_tag_checks = []"
    },
    {
        "line": 117,
        "fullcodeline": "save_buttons = []"
    },
    {
        "line": 186,
        "fullcodeline": "quick_tags_text.change("
    },
    {
        "line": 193,
        "fullcodeline": "import_tags_button.click("
    },
    {
        "line": 205,
        "fullcodeline": "load_images_button.click("
    },
    {
        "line": 220,
        "fullcodeline": "image_update_key = gr.Text(visible=False)"
    },
    {
        "line": 221,
        "fullcodeline": "image_update_key.change("
    },
    {
        "line": 233,
        "fullcodeline": "listener_kwargs = {"
    },
    {
        "line": 238,
        "fullcodeline": "page.change(**listener_kwargs)"
    },
    {
        "line": 239,
        "fullcodeline": "loaded_images_dir.change(**listener_kwargs)"
    },
    {
        "line": 243,
        "fullcodeline": "auto_save.change("
    },
    {
        "line": 250,
        "fullcodeline": "page.change("
    },
    {
        "line": 23,
        "fullcodeline": "with gr.Group(), gr.Row():"
    },
    {
        "line": 67,
        "fullcodeline": "with gr.Group(), gr.Row():"
    },
    {
        "line": 108,
        "fullcodeline": "with gr.Row(visible=False) as pagination_row1:"
    },
    {
        "line": 118,
        "fullcodeline": "for _ in range(IMAGES_TO_SHOW):"
    },
    {
        "line": 182,
        "fullcodeline": "with gr.Row(visible=False) as pagination_row2:"
    },
    {
        "line": 188,
        "fullcodeline": "inputs=[quick_tags_text] + image_caption_texts,"
    },
    {
        "line": 195,
        "fullcodeline": "inputs=["
    },
    {
        "line": 207,
        "fullcodeline": "inputs=["
    },
    {
        "line": 214,
        "fullcodeline": "outputs=[loaded_images_dir, page, max_page],"
    },
    {
        "line": 223,
        "fullcodeline": "inputs=[loaded_images_dir, caption_ext, quick_tags_text, page],"
    },
    {
        "line": 224,
        "fullcodeline": "outputs=image_rows"
    },
    {
        "line": 252,
        "fullcodeline": "inputs=[page, max_page],"
    },
    {
        "line": 253,
        "fullcodeline": "outputs=[page_count1, page_count2],"
    },
    {
        "line": 229,
        "fullcodeline": "+ [pagination_row1, pagination_row2],"
    },
    {
        "line": 109,
        "fullcodeline": "page_count1 = render_pagination()"
    },
    {
        "line": 183,
        "fullcodeline": "page_count2 = render_pagination()"
    },
    {
        "line": 235,
        "fullcodeline": "\"inputs\": [page, loaded_images_dir],"
    },
    {
        "line": 119,
        "fullcodeline": "with gr.Row(visible=False) as row:"
    },
    {
        "line": 24,
        "fullcodeline": "images_dir = gr.Dropdown("
    },
    {
        "line": 31,
        "fullcodeline": "create_refresh_button("
    },
    {
        "line": 37,
        "fullcodeline": "folder_button = gr.Button("
    },
    {
        "line": 43,
        "fullcodeline": "folder_button.click("
    },
    {
        "line": 48,
        "fullcodeline": "load_images_button = gr.Button(\"Load\", elem_id=\"open_folder\")"
    },
    {
        "line": 49,
        "fullcodeline": "caption_ext = gr.Textbox("
    },
    {
        "line": 55,
        "fullcodeline": "auto_save = gr.Checkbox("
    },
    {
        "line": 59,
        "fullcodeline": "images_dir.change("
    },
    {
        "line": 68,
        "fullcodeline": "quick_tags_text = gr.Textbox("
    },
    {
        "line": 73,
        "fullcodeline": "import_tags_button = gr.Button(\"Import\", elem_id=\"open_folder\")"
    },
    {
        "line": 74,
        "fullcodeline": "ignore_load_tags_word_count = gr.Slider("
    },
    {
        "line": 120,
        "fullcodeline": "image_file = gr.Text(visible=False)"
    },
    {
        "line": 121,
        "fullcodeline": "image_files.append(image_file)"
    },
    {
        "line": 122,
        "fullcodeline": "image_image = gr.Image(type=\"filepath\")"
    },
    {
        "line": 123,
        "fullcodeline": "image_images.append(image_image)"
    },
    {
        "line": 124,
        "fullcodeline": "image_caption_text = gr.TextArea("
    },
    {
        "line": 129,
        "fullcodeline": "image_caption_texts.append(image_caption_text)"
    },
    {
        "line": 130,
        "fullcodeline": "tag_checkboxes = gr.CheckboxGroup([], label=\"Tags\", interactive=True)"
    },
    {
        "line": 131,
        "fullcodeline": "save_button = gr.Button("
    },
    {
        "line": 137,
        "fullcodeline": "save_buttons.append(save_button)"
    },
    {
        "line": 140,
        "fullcodeline": "image_caption_text.input("
    },
    {
        "line": 154,
        "fullcodeline": "tag_checkboxes.input("
    },
    {
        "line": 168,
        "fullcodeline": "save_button.click("
    },
    {
        "line": 178,
        "fullcodeline": "image_tag_checks.append(tag_checkboxes)"
    },
    {
        "line": 179,
        "fullcodeline": "image_rows.append(row)"
    },
    {
        "line": 142,
        "fullcodeline": "inputs=["
    },
    {
        "line": 156,
        "fullcodeline": "inputs=["
    },
    {
        "line": 164,
        "fullcodeline": "outputs=[image_caption_text],"
    },
    {
        "line": 170,
        "fullcodeline": "inputs=["
    },
    {
        "line": 26,
        "fullcodeline": "choices=[\"\"] + list_images_dirs(default_images_dir),"
    },
    {
        "line": 40,
        "fullcodeline": "elem_classes=[\"tool\"],"
    },
    {
        "line": 41,
        "fullcodeline": "visible=(not headless),"
    },
    {
        "line": 134,
        "fullcodeline": "elem_classes=[\"tool\"],"
    }
]