[
    {
        "line": 28,
        "fullcodeline": "const int metadata_idx = 2 * level;"
    },
    {
        "line": 29,
        "fullcodeline": "const int shape_of_level = dim_metadata_[metadata_idx][0];"
    },
    {
        "line": 4,
        "fullcodeline": "if (level == indices.size()) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (format_[level] == kTfLiteDimDense) {"
    },
    {
        "line": 5,
        "fullcodeline": "int orig_rank = dense_shape_.size();"
    },
    {
        "line": 7,
        "fullcodeline": "orig_idx.resize(orig_rank);"
    },
    {
        "line": 8,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "dest_data[GetFlattenedIndex(orig_idx, dense_shape_)] ="
    },
    {
        "line": 24,
        "fullcodeline": "*src_data_ptr = *src_data_ptr + 1;"
    },
    {
        "line": 9,
        "fullcodeline": "for (; i < orig_idx.size(); i++) {"
    },
    {
        "line": 14,
        "fullcodeline": "for (; i < indices.size(); i++) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (int i = 0; i < shape_of_level; i++) {"
    },
    {
        "line": 37,
        "fullcodeline": "const auto& array_segments = dim_metadata_[metadata_idx];"
    },
    {
        "line": 38,
        "fullcodeline": "const auto& array_indices = dim_metadata_[metadata_idx + 1];"
    },
    {
        "line": 10,
        "fullcodeline": "int orig_dim = traversal_order_[i];"
    },
    {
        "line": 11,
        "fullcodeline": "orig_idx[orig_dim] = indices[i];"
    },
    {
        "line": 15,
        "fullcodeline": "const int block_idx = traversal_order_[i] - orig_rank;"
    },
    {
        "line": 16,
        "fullcodeline": "const int orig_dim = block_map_[block_idx];"
    },
    {
        "line": 17,
        "fullcodeline": "orig_idx[orig_dim] ="
    },
    {
        "line": 32,
        "fullcodeline": "indices[level] = i;"
    },
    {
        "line": 39,
        "fullcodeline": "for (int i = array_segments[prev_idx]; i < array_segments[prev_idx + 1];"
    },
    {
        "line": 40,
        "fullcodeline": "i++) {"
    },
    {
        "line": 18,
        "fullcodeline": "orig_idx[orig_dim] * block_size_[block_idx] + indices[i];"
    },
    {
        "line": 41,
        "fullcodeline": "indices[level] = array_indices[i];"
    },
    {
        "line": 42,
        "fullcodeline": "Populate(src_data, indices, level + 1, i, src_data_ptr, dest_data);"
    },
    {
        "line": 33,
        "fullcodeline": "Populate(src_data, indices, level + 1, prev_idx * shape_of_level + i,"
    }
]