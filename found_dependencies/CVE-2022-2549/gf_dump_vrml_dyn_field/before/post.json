[
    {
        "line": 6,
        "fullcodeline": "if (gf_sg_vrml_is_sf_field(field.fieldType)) {"
    },
    {
        "line": 7,
        "fullcodeline": "DUMP_IND(sdump);"
    },
    {
        "line": 17,
        "fullcodeline": "if ((field.eventType == GF_SG_EVENT_FIELD) || (field.eventType == GF_SG_EVENT_EXPOSED_FIELD)) {"
    },
    {
        "line": 55,
        "fullcodeline": "gf_fprintf(sdump->trace, \"%s %s %s\", gf_sg_vrml_get_event_type_name(field.eventType, sdump->X3DDump), gf_sg_vrml_get_field_type_name(field.fieldType), field.name);"
    },
    {
        "line": 64,
        "fullcodeline": "gf_fprintf(sdump->trace, \"\\n\");"
    },
    {
        "line": 67,
        "fullcodeline": "GenMFField *mffield = (GenMFField *) field.far_ptr;"
    },
    {
        "line": 68,
        "fullcodeline": "sf_type = gf_sg_vrml_get_sf_type(field.fieldType);"
    },
    {
        "line": 70,
        "fullcodeline": "DUMP_IND(sdump);"
    },
    {
        "line": 10,
        "fullcodeline": "gf_fprintf(sdump->trace, \"<field name=\\\"%s\\\" type=\\\"%s\\\" accessType=\\\"%s\\\"\","
    },
    {
        "line": 56,
        "fullcodeline": "if ((field.eventType==GF_SG_EVENT_FIELD) || (field.eventType==GF_SG_EVENT_EXPOSED_FIELD)) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (!sdump->XMLDump) {"
    },
    {
        "line": 11,
        "fullcodeline": "field.name, gf_sg_vrml_get_field_type_name(field.fieldType), gf_sg_vrml_get_event_type_name(field.eventType, 1));"
    },
    {
        "line": 13,
        "fullcodeline": "gf_fprintf(sdump->trace, \"<field name=\\\"%s\\\" type=\\\"%s\\\" vrml97Hint=\\\"%s\\\"\","
    },
    {
        "line": 18,
        "fullcodeline": "if (field.fieldType == GF_SG_VRML_SFNODE) {"
    },
    {
        "line": 52,
        "fullcodeline": "gf_fprintf(sdump->trace, \"/>\\n\");"
    },
    {
        "line": 57,
        "fullcodeline": "gf_fprintf(sdump->trace, \" \");"
    },
    {
        "line": 72,
        "fullcodeline": "gf_fprintf(sdump->trace, \"%s %s %s\", gf_sg_vrml_get_event_type_name(field.eventType, sdump->X3DDump), gf_sg_vrml_get_field_type_name(field.fieldType), field.name);"
    },
    {
        "line": 97,
        "fullcodeline": "gf_fprintf(sdump->trace, \"\\n\");"
    },
    {
        "line": 14,
        "fullcodeline": "field.name, GetXMTFieldTypeName(field.fieldType), gf_sg_vrml_get_event_type_name(field.eventType, 0));"
    },
    {
        "line": 37,
        "fullcodeline": "DUMP_IND(sdump);"
    },
    {
        "line": 58,
        "fullcodeline": "if (field.fieldType == GF_SG_VRML_SFNODE) {"
    },
    {
        "line": 73,
        "fullcodeline": "if ((field.eventType==GF_SG_EVENT_FIELD) || (field.eventType==GF_SG_EVENT_EXPOSED_FIELD)) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (!sdump->X3DDump) {"
    },
    {
        "line": 59,
        "fullcodeline": "gf_dump_vrml_node(sdump, field.far_ptr ? *(GF_Node **)field.far_ptr : NULL, 0, NULL);"
    },
    {
        "line": 74,
        "fullcodeline": "gf_fprintf(sdump->trace, \" [\");"
    },
    {
        "line": 95,
        "fullcodeline": "gf_fprintf(sdump->trace, \"]\");"
    },
    {
        "line": 107,
        "fullcodeline": "if ((field.eventType==GF_SG_EVENT_FIELD) || (field.eventType==GF_SG_EVENT_EXPOSED_FIELD)) {"
    },
    {
        "line": 20,
        "fullcodeline": "gf_fprintf(sdump->trace, \">\\n\");"
    },
    {
        "line": 21,
        "fullcodeline": "sdump->indent++;"
    },
    {
        "line": 22,
        "fullcodeline": "gf_fprintf(sdump->trace, \"<node>\");"
    },
    {
        "line": 23,
        "fullcodeline": "gf_dump_vrml_node(sdump, field.far_ptr ? *(GF_Node **)field.far_ptr : NULL, 0, NULL);"
    },
    {
        "line": 24,
        "fullcodeline": "gf_fprintf(sdump->trace, \"</node>\");"
    },
    {
        "line": 25,
        "fullcodeline": "sdump->indent--;"
    },
    {
        "line": 76,
        "fullcodeline": "if (sf_type == GF_SG_VRML_SFNODE) {"
    },
    {
        "line": 100,
        "fullcodeline": "gf_fprintf(sdump->trace, \"<field name=\\\"%s\\\" type=\\\"%s\\\" accessType=\\\"%s\\\"\","
    },
    {
        "line": 26,
        "fullcodeline": "if (!has_sublist)"
    },
    {
        "line": 40,
        "fullcodeline": "gf_fprintf(sdump->trace, \" value=\\\"\");"
    },
    {
        "line": 45,
        "fullcodeline": "gf_dump_vrml_sffield(sdump, field.fieldType, field.far_ptr, 0, node);"
    },
    {
        "line": 47,
        "fullcodeline": "gf_fprintf(sdump->trace, \"\\\">\\n\");"
    },
    {
        "line": 78,
        "fullcodeline": "gf_fprintf(sdump->trace, \"\\n\");"
    },
    {
        "line": 79,
        "fullcodeline": "sdump->indent++;"
    },
    {
        "line": 84,
        "fullcodeline": "sdump->indent--;"
    },
    {
        "line": 85,
        "fullcodeline": "DUMP_IND(sdump);"
    },
    {
        "line": 101,
        "fullcodeline": "field.name, gf_sg_vrml_get_field_type_name(field.fieldType), gf_sg_vrml_get_event_type_name(field.eventType, 1));"
    },
    {
        "line": 103,
        "fullcodeline": "gf_fprintf(sdump->trace, \"<field name=\\\"%s\\\" type=\\\"%s\\\" vrml97Hint=\\\"%s\\\"\","
    },
    {
        "line": 108,
        "fullcodeline": "if (sf_type == GF_SG_VRML_SFNODE) {"
    },
    {
        "line": 141,
        "fullcodeline": "gf_fprintf(sdump->trace, \"/>\\n\");"
    },
    {
        "line": 27,
        "fullcodeline": "gf_fprintf(sdump->trace, \"</field>\\n\");"
    },
    {
        "line": 42,
        "fullcodeline": "gf_fprintf(sdump->trace, \" %s=\\\"\", GetXMTFieldTypeValueName(field.fieldType));"
    },
    {
        "line": 49,
        "fullcodeline": "gf_fprintf(sdump->trace, \"\\\"/>\\n\");"
    },
    {
        "line": 61,
        "fullcodeline": "gf_dump_vrml_simple_field(sdump, field, node);"
    },
    {
        "line": 104,
        "fullcodeline": "field.name, GetXMTFieldTypeName(field.fieldType), gf_sg_vrml_get_event_type_name(field.eventType, 0));"
    },
    {
        "line": 110,
        "fullcodeline": "gf_fprintf(sdump->trace, \">\\n\");"
    },
    {
        "line": 111,
        "fullcodeline": "sdump->indent++;"
    },
    {
        "line": 118,
        "fullcodeline": "sdump->indent++;"
    },
    {
        "line": 119,
        "fullcodeline": "DUMP_IND(sdump);"
    },
    {
        "line": 30,
        "fullcodeline": "gf_fprintf(sdump->trace, \">\\n\");"
    },
    {
        "line": 31,
        "fullcodeline": "gf_dump_vrml_node(sdump, *(GF_Node **)field.far_ptr, 0, NULL);"
    },
    {
        "line": 32,
        "fullcodeline": "gf_fprintf(sdump->trace, \"</field>\\n\");"
    },
    {
        "line": 77,
        "fullcodeline": "GF_ChildNodeItem *l = *(GF_ChildNodeItem **)field.far_ptr;"
    },
    {
        "line": 81,
        "fullcodeline": "gf_dump_vrml_node(sdump, l->node, 1, NULL);"
    },
    {
        "line": 82,
        "fullcodeline": "l = l->next;"
    },
    {
        "line": 87,
        "fullcodeline": "for (i=0; i<mffield->count; i++) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (!sdump->X3DDump) gf_fprintf(sdump->trace, \"<nodes>\");"
    },
    {
        "line": 117,
        "fullcodeline": "if (!sdump->X3DDump) gf_fprintf(sdump->trace, \"</nodes>\");"
    },
    {
        "line": 120,
        "fullcodeline": "if (!has_sublist)"
    },
    {
        "line": 34,
        "fullcodeline": "gf_fprintf(sdump->trace, \"/>\\n\");"
    },
    {
        "line": 109,
        "fullcodeline": "GF_ChildNodeItem *list = *(GF_ChildNodeItem **)field.far_ptr;"
    },
    {
        "line": 114,
        "fullcodeline": "gf_dump_vrml_node(sdump, list->node, 1, NULL);"
    },
    {
        "line": 115,
        "fullcodeline": "list = list->next;"
    },
    {
        "line": 121,
        "fullcodeline": "gf_fprintf(sdump->trace, \"</field>\\n\");"
    },
    {
        "line": 128,
        "fullcodeline": "for (i=0; i<mffield->count; i++) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (field.fieldType != GF_SG_VRML_MFNODE) {"
    },
    {
        "line": 124,
        "fullcodeline": "gf_fprintf(sdump->trace, \" value=\\\"\");"
    },
    {
        "line": 136,
        "fullcodeline": "gf_fprintf(sdump->trace, \"\\\">\\n\");"
    },
    {
        "line": 88,
        "fullcodeline": "if (i) gf_fprintf(sdump->trace, \" \");"
    },
    {
        "line": 90,
        "fullcodeline": "gf_sg_vrml_mf_get_item(field.far_ptr, field.fieldType, &slot_ptr, i);"
    },
    {
        "line": 91,
        "fullcodeline": "gf_dump_vrml_sffield(sdump, sf_type, slot_ptr, (mffield->count>1) ? 1 : 0, node);"
    },
    {
        "line": 126,
        "fullcodeline": "gf_fprintf(sdump->trace, \" %s=\\\"\", GetXMTFieldTypeValueName(field.fieldType));"
    },
    {
        "line": 130,
        "fullcodeline": "if (field.fieldType != GF_SG_VRML_MFNODE) {"
    },
    {
        "line": 138,
        "fullcodeline": "gf_fprintf(sdump->trace, \"\\\"/>\\n\");"
    },
    {
        "line": 129,
        "fullcodeline": "if (i) gf_fprintf(sdump->trace, \" \");"
    },
    {
        "line": 131,
        "fullcodeline": "gf_sg_vrml_mf_get_item(field.far_ptr, field.fieldType, &slot_ptr, i);"
    },
    {
        "line": 132,
        "fullcodeline": "gf_dump_vrml_sffield(sdump, sf_type, slot_ptr, (mffield->count>1) ? 1 : 0, node);"
    }
]