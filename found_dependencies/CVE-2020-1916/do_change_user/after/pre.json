[
    {
        "line": 3,
        "fullcodeline": "lwp_read(afdt_fd, uname);"
    },
    {
        "line": 6,
        "fullcodeline": "StructuredLogEntry* log = nullptr;"
    },
    {
        "line": 16,
        "fullcodeline": "auto buf = PasswdBuffer{};"
    },
    {
        "line": 4,
        "fullcodeline": "if (!uname.length()) return;"
    },
    {
        "line": 18,
        "fullcodeline": "if (getpwnam_r(uname.c_str(), &buf.ent, buf.data.get(), buf.size, &pw)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (!pw) {"
    },
    {
        "line": 19,
        "fullcodeline": "err = errno;"
    },
    {
        "line": 20,
        "fullcodeline": "log = new StructuredLogEntry();"
    },
    {
        "line": 28,
        "fullcodeline": "log = new StructuredLogEntry();"
    },
    {
        "line": 36,
        "fullcodeline": "if (initgroups(pw->pw_name, pw->pw_gid)) {"
    },
    {
        "line": 38,
        "fullcodeline": "log = new StructuredLogEntry();"
    },
    {
        "line": 39,
        "fullcodeline": "log->setStr(\"function\", \"initgroups\");"
    },
    {
        "line": 42,
        "fullcodeline": "if (!log) {"
    },
    {
        "line": 23,
        "fullcodeline": "throw std::runtime_error{\"getpwnam_r(): \" + folly::errnoStr(err)};"
    },
    {
        "line": 31,
        "fullcodeline": "throw std::runtime_error{\"getpwnam_r(): not found\"};"
    },
    {
        "line": 43,
        "fullcodeline": "err = errno;"
    },
    {
        "line": 44,
        "fullcodeline": "log = new StructuredLogEntry();"
    },
    {
        "line": 45,
        "fullcodeline": "log->setStr(\"function\", \"setgid\");"
    },
    {
        "line": 55,
        "fullcodeline": "err = errno;"
    },
    {
        "line": 56,
        "fullcodeline": "log = new StructuredLogEntry();"
    },
    {
        "line": 47,
        "fullcodeline": "throw std::runtime_error{\"setgid():\" + folly::errnoStr(err)};"
    },
    {
        "line": 59,
        "fullcodeline": "throw std::runtime_error{\"setuid():\" + folly::errnoStr(err)};"
    }
]