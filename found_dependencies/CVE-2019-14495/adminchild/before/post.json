[
    {
        "line": 4,
        "fullcodeline": "char username[256];"
    },
    {
        "line": 6,
        "fullcodeline": "char *req = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "int contentlen = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "int isform = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "pp.inbuf = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "pp.cp = param;"
    },
    {
        "line": 14,
        "fullcodeline": "buf = myalloc(LINESIZE);"
    },
    {
        "line": 16,
        "fullcodeline": "i = sockgetlinebuf(param, CLIENT, (unsigned char *)buf, LINESIZE - 1, '\\n', conf.timeouts[STRING_S]);"
    },
    {
        "line": 22,
        "fullcodeline": "buf[i] = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "sb = strchr(buf+5, ' ');"
    },
    {
        "line": 27,
        "fullcodeline": "*sb = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "req = mystrdup(buf + ((*buf == 'P')? 6 : 5));"
    },
    {
        "line": 65,
        "fullcodeline": "param->operation = ADMIN;"
    },
    {
        "line": 70,
        "fullcodeline": "res = (*param->srv->authfunc)(param);"
    },
    {
        "line": 79,
        "fullcodeline": "sprintf(buf, ok, conf.stringtable?(char *)conf.stringtable[2]:\"3proxy\", conf.stringtable?(char *)conf.stringtable[2]:\"3[APA3A] tiny proxy\", conf.stringtable?(char *)conf.stringtable[3]:\"\");"
    },
    {
        "line": 236,
        "fullcodeline": "printstr(&pp, NULL);"
    },
    {
        "line": 238,
        "fullcodeline": "(*param->srv->logfunc)(param, (unsigned char *)req);"
    },
    {
        "line": 240,
        "fullcodeline": "freeparam(param);"
    },
    {
        "line": 15,
        "fullcodeline": "if(!buf) {RETURN(555);}"
    },
    {
        "line": 17,
        "fullcodeline": "if(i<5 || ((buf[0]!='G' || buf[1]!='E' || buf[2]!='T' || buf[3]!=' ' || buf[4]!='/') &&"
    },
    {
        "line": 24,
        "fullcodeline": "if(!sb){"
    },
    {
        "line": 29,
        "fullcodeline": "while((i = sockgetlinebuf(param, CLIENT, (unsigned char *)buf, LINESIZE - 1, '\\n', conf.timeouts[STRING_S])) > 2){"
    },
    {
        "line": 66,
        "fullcodeline": "if(isform && contentlen) {"
    },
    {
        "line": 71,
        "fullcodeline": "if(res && res != 10) {"
    },
    {
        "line": 75,
        "fullcodeline": "if(param->srv->singlepacket || param->redirected){"
    },
    {
        "line": 80,
        "fullcodeline": "if(*req != 'S') printstr(&pp, buf);"
    },
    {
        "line": 231,
        "fullcodeline": "if(*req != 'S') printstr(&pp, tail);"
    },
    {
        "line": 20,
        "fullcodeline": "RETURN(701);"
    },
    {
        "line": 25,
        "fullcodeline": "RETURN(702);"
    },
    {
        "line": 30,
        "fullcodeline": "buf[i] = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "printstr(&pp, \"HTTP/1.0 100 Continue\\r\\n\\r\\n\");"
    },
    {
        "line": 68,
        "fullcodeline": "stdpr(&pp, NULL, 0);"
    },
    {
        "line": 72,
        "fullcodeline": "printstr(&pp, authreq);"
    },
    {
        "line": 73,
        "fullcodeline": "RETURN(res);"
    },
    {
        "line": 83,
        "fullcodeline": "printstr(&pp, counters);"
    },
    {
        "line": 158,
        "fullcodeline": "printstr(&pp, counterstail);"
    },
    {
        "line": 162,
        "fullcodeline": "conf.needreload = 1;"
    },
    {
        "line": 163,
        "fullcodeline": "printstr(&pp, \"<h3>Reload scheduled</h3>\");"
    },
    {
        "line": 228,
        "fullcodeline": "printstr(&pp, (char *)conf.stringtable[WEBBANNERS]);"
    },
    {
        "line": 237,
        "fullcodeline": "if(buf) myfree(buf);"
    },
    {
        "line": 239,
        "fullcodeline": "if(req)myfree(req);"
    },
    {
        "line": 18,
        "fullcodeline": "(buf[0]!='P' || buf[1]!='O' || buf[2]!='S' || buf[3]!='T' || buf[4]!=' ' || buf[5]!='/')))"
    },
    {
        "line": 31,
        "fullcodeline": "if(i > 19 && (!strncasecmp(buf, \"authorization\", 13))){"
    },
    {
        "line": 76,
        "fullcodeline": "if(*req == 'C') req[1] = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "int num = 0;"
    },
    {
        "line": 171,
        "fullcodeline": "printstr(&pp, xml);"
    },
    {
        "line": 172,
        "fullcodeline": "printval(conf.services, TYPE_SERVER, 0, &pp);"
    },
    {
        "line": 173,
        "fullcodeline": "printstr(&pp, postxml);"
    },
    {
        "line": 179,
        "fullcodeline": "char buf[256];"
    },
    {
        "line": 181,
        "fullcodeline": "fp = confopen();"
    },
    {
        "line": 186,
        "fullcodeline": "printstr(&pp, \"<h3>Please be careful editing config file remotely</h3>\");"
    },
    {
        "line": 187,
        "fullcodeline": "printstr(&pp, \"<form method=\\\"POST\\\" action=\\\"/U\\\"><textarea cols=\\\"80\\\" rows=\\\"30\\\" name=\\\"conffile\\\">\");"
    },
    {
        "line": 192,
        "fullcodeline": "printstr(&pp, \"</textarea><br><input type=\\\"Submit\\\"></form>\");"
    },
    {
        "line": 197,
        "fullcodeline": "int l=0;"
    },
    {
        "line": 198,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 222,
        "fullcodeline": "printstr(&pp, error?    \"<h3><font color=\\\"red\\\">Config file is not writable</font></h3>Make sure you have \\\"writable\\\" command in configuration file\":"
    },
    {
        "line": 32,
        "fullcodeline": "sb = strchr(buf, ':');"
    },
    {
        "line": 34,
        "fullcodeline": "++sb;"
    },
    {
        "line": 39,
        "fullcodeline": "sb+=5;"
    },
    {
        "line": 41,
        "fullcodeline": "i = de64((unsigned char *)sb, (unsigned char *)username, 255);"
    },
    {
        "line": 43,
        "fullcodeline": "username[i] = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "sb = strchr((char *)username, ':');"
    },
    {
        "line": 51,
        "fullcodeline": "param->username = (unsigned char *)mystrdup(username);"
    },
    {
        "line": 87,
        "fullcodeline": "for(cp = conf.trafcounter; cp; cp = cp->next, num++){"
    },
    {
        "line": 167,
        "fullcodeline": "if(req[1] == 'X'){"
    },
    {
        "line": 182,
        "fullcodeline": "if(!fp){"
    },
    {
        "line": 188,
        "fullcodeline": "while(fgets(buf, 256, fp)){"
    },
    {
        "line": 191,
        "fullcodeline": "if(!writable) fclose(fp);"
    },
    {
        "line": 200,
        "fullcodeline": "if(!writable || fseek(writable, 0, 0)){"
    },
    {
        "line": 203,
        "fullcodeline": "while((i = sockgetlinebuf(param, CLIENT, (unsigned char *)buf, LINESIZE - 1, '+', conf.timeouts[STRING_S])) > 0){"
    },
    {
        "line": 216,
        "fullcodeline": "if(writable && !error){"
    },
    {
        "line": 33,
        "fullcodeline": "if(!sb)continue;"
    },
    {
        "line": 35,
        "fullcodeline": "while(isspace(*sb))sb++;"
    },
    {
        "line": 36,
        "fullcodeline": "if(!*sb || strncasecmp(sb, \"basic\", 5)){"
    },
    {
        "line": 40,
        "fullcodeline": "while(isspace(*sb))sb++;"
    },
    {
        "line": 42,
        "fullcodeline": "if(i<=0)continue;"
    },
    {
        "line": 77,
        "fullcodeline": "else *req = 0;"
    },
    {
        "line": 88,
        "fullcodeline": "int inbuf = 0;"
    },
    {
        "line": 95,
        "fullcodeline": "inbuf += sprintf(buf,\t\"<tr>\""
    },
    {
        "line": 108,
        "fullcodeline": "inbuf += sprintf(buf+inbuf, \"</td><td>\");"
    },
    {
        "line": 115,
        "fullcodeline": "inbuf += sprintf(buf+inbuf, \"</td><td>\");"
    },
    {
        "line": 122,
        "fullcodeline": "inbuf += sprintf(buf+inbuf, \"</td><td>\");"
    },
    {
        "line": 154,
        "fullcodeline": "printstr(&pp, buf);"
    },
    {
        "line": 168,
        "fullcodeline": "printstr(&pp, style);"
    },
    {
        "line": 183,
        "fullcodeline": "printstr(&pp, \"<h3><font color=\\\"red\\\">Failed to open config file</font></h3>\");"
    },
    {
        "line": 189,
        "fullcodeline": "printstr(&pp, buf);"
    },
    {
        "line": 201,
        "fullcodeline": "error = 1;"
    },
    {
        "line": 205,
        "fullcodeline": "buf[i] = 0;"
    },
    {
        "line": 213,
        "fullcodeline": "l += i;"
    },
    {
        "line": 217,
        "fullcodeline": "fflush(writable);"
    },
    {
        "line": 219,
        "fullcodeline": "ftruncate(fileno(writable), ftell(writable));"
    },
    {
        "line": 46,
        "fullcodeline": "*sb = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "param->password = (unsigned char *)mystrdup(sb+1);"
    },
    {
        "line": 50,
        "fullcodeline": "if(param->username) myfree(param->username);"
    },
    {
        "line": 54,
        "fullcodeline": "else if(i > 15 && (!strncasecmp(buf, \"content-length:\", 15))){"
    },
    {
        "line": 90,
        "fullcodeline": "if(cp->ace && (param->srv->singlepacket || param->redirected)){"
    },
    {
        "line": 93,
        "fullcodeline": "if(req[1] == 'S' && atoi(req+2) == num) cp->disabled=0;"
    },
    {
        "line": 94,
        "fullcodeline": "if(req[1] == 'D' && atoi(req+2) == num) cp->disabled=1;"
    },
    {
        "line": 102,
        "fullcodeline": "if(!cp->ace || !cp->ace->users){"
    },
    {
        "line": 109,
        "fullcodeline": "if(!cp->ace || !cp->ace->src){"
    },
    {
        "line": 116,
        "fullcodeline": "if(!cp->ace || !cp->ace->dst){"
    },
    {
        "line": 123,
        "fullcodeline": "if(!cp->ace || !cp->ace->ports){"
    },
    {
        "line": 129,
        "fullcodeline": "if(cp->type == NONE) {"
    },
    {
        "line": 204,
        "fullcodeline": "if(i > (contentlen - l)) i = (contentlen - l);"
    },
    {
        "line": 206,
        "fullcodeline": "if(!l){"
    },
    {
        "line": 209,
        "fullcodeline": "if(!error){"
    },
    {
        "line": 214,
        "fullcodeline": "if(l >= contentlen) break;"
    },
    {
        "line": 55,
        "fullcodeline": "sb = buf + 15;"
    },
    {
        "line": 57,
        "fullcodeline": "contentlen = atoi(sb);"
    },
    {
        "line": 97,
        "fullcodeline": "(cp->comment)?cp->comment:\"&nbsp;\","
    },
    {
        "line": 98,
        "fullcodeline": "(cp->disabled)?'S':'D',"
    },
    {
        "line": 100,
        "fullcodeline": "(cp->disabled)?\"NO\":\"YES\""
    },
    {
        "line": 103,
        "fullcodeline": "inbuf += sprintf(buf+inbuf, \"<center>ANY</center>\");"
    },
    {
        "line": 110,
        "fullcodeline": "inbuf += sprintf(buf+inbuf, \"<center>ANY</center>\");"
    },
    {
        "line": 117,
        "fullcodeline": "inbuf += sprintf(buf+inbuf, \"<center>ANY</center>\");"
    },
    {
        "line": 124,
        "fullcodeline": "inbuf += sprintf(buf+inbuf, \"<center>ANY</center>\");"
    },
    {
        "line": 130,
        "fullcodeline": "inbuf += sprintf(buf+inbuf,"
    },
    {
        "line": 210,
        "fullcodeline": "decodeurl((unsigned char *)buf, 1);"
    },
    {
        "line": 211,
        "fullcodeline": "fprintf(writable, \"%s\", l? buf : buf + 9);"
    },
    {
        "line": 47,
        "fullcodeline": "if(param->password)myfree(param->password);"
    },
    {
        "line": 56,
        "fullcodeline": "while(isspace(*sb))sb++;"
    },
    {
        "line": 91,
        "fullcodeline": "if(!ACLmatches(cp->ace, param))continue;"
    },
    {
        "line": 106,
        "fullcodeline": "inbuf += printuserlist(buf+inbuf, LINESIZE-800, cp->ace->users, \",<br />\\r\\n\");"
    },
    {
        "line": 113,
        "fullcodeline": "inbuf += printiplist(buf+inbuf, LINESIZE-512, cp->ace->src, \",<br />\\r\\n\");"
    },
    {
        "line": 120,
        "fullcodeline": "inbuf += printiplist(buf+inbuf, LINESIZE-512, cp->ace->dst, \",<br />\\r\\n\");"
    },
    {
        "line": 127,
        "fullcodeline": "inbuf += printportlist(buf+inbuf, LINESIZE-128, cp->ace->ports, \",<br />\\r\\n\");"
    },
    {
        "line": 145,
        "fullcodeline": "inbuf += sprintf(buf + inbuf,"
    },
    {
        "line": 207,
        "fullcodeline": "if(strncasecmp(buf, \"conffile=\", 9)) error = 1;"
    },
    {
        "line": 59,
        "fullcodeline": "else if(i > 13 && (!strncasecmp(buf, \"content-type:\", 13))){"
    },
    {
        "line": 60,
        "fullcodeline": "sb = buf + 13;"
    },
    {
        "line": 150,
        "fullcodeline": "cp->updated?ctime(&cp->updated):\"never\","
    },
    {
        "line": 61,
        "fullcodeline": "while(isspace(*sb))sb++;"
    },
    {
        "line": 62,
        "fullcodeline": "if(!strncasecmp(sb, \"x-www-form-urlencoded\", 21)) isform = 1;"
    }
]