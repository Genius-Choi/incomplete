[
    {
        "line": 5,
        "fullcodeline": "struct sk_buff *p, **pp = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned int off = skb_gro_offset(skb);"
    },
    {
        "line": 8,
        "fullcodeline": "int flush = 1;"
    },
    {
        "line": 17,
        "fullcodeline": "NAPI_GRO_CB(skb)->udp_mark = 1;"
    },
    {
        "line": 19,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 20,
        "fullcodeline": "uo_priv = rcu_dereference(udp_offload_base);"
    },
    {
        "line": 30,
        "fullcodeline": "flush = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "skb_gro_pull(skb, sizeof(struct udphdr)); /* pull encapsulating udp header */"
    },
    {
        "line": 49,
        "fullcodeline": "skb_gro_postpull_rcsum(skb, uh, sizeof(struct udphdr));"
    },
    {
        "line": 51,
        "fullcodeline": "pp = uo_priv->offload->callbacks.gro_receive(head, skb,"
    },
    {
        "line": 55,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 57,
        "fullcodeline": "NAPI_GRO_CB(skb)->flush |= flush;"
    },
    {
        "line": 10,
        "fullcodeline": "if (NAPI_GRO_CB(skb)->udp_mark ||"
    },
    {
        "line": 21,
        "fullcodeline": "for (; uo_priv != NULL; uo_priv = rcu_dereference(uo_priv->next)) {"
    },
    {
        "line": 32,
        "fullcodeline": "for (p = *head; p; p = p->next) {"
    },
    {
        "line": 11,
        "fullcodeline": "(skb->ip_summed != CHECKSUM_PARTIAL &&"
    },
    {
        "line": 36,
        "fullcodeline": "uh2 = (struct udphdr   *)(p->data + off);"
    },
    {
        "line": 50,
        "fullcodeline": "NAPI_GRO_CB(skb)->proto = uo_priv->offload->ipproto;"
    },
    {
        "line": 22,
        "fullcodeline": "if (net_eq(read_pnet(&uo_priv->net), dev_net(skb->dev)) &&"
    },
    {
        "line": 33,
        "fullcodeline": "if (!NAPI_GRO_CB(p)->same_flow)"
    },
    {
        "line": 41,
        "fullcodeline": "if ((*(u32 *)&uh->source != *(u32 *)&uh2->source) ||"
    },
    {
        "line": 12,
        "fullcodeline": "NAPI_GRO_CB(skb)->csum_cnt == 0 &&"
    },
    {
        "line": 42,
        "fullcodeline": "(!uh->check ^ !uh2->check)) {"
    },
    {
        "line": 43,
        "fullcodeline": "NAPI_GRO_CB(p)->same_flow = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "!NAPI_GRO_CB(skb)->csum_valid))"
    },
    {
        "line": 23,
        "fullcodeline": "uo_priv->offload->port == uh->dest &&"
    }
]