[
    {
        "line": 2,
        "fullcodeline": "self = RaggedArray.from_nested(["
    },
    {
        "line": 13,
        "fullcodeline": "target = [2, 0, 1, 2, 3, 4, 5,"
    },
    {
        "line": 18,
        "fullcodeline": "assert np.frombuffer(self.dumps(), np.intc).tolist() == target"
    },
    {
        "line": 21,
        "fullcodeline": "assert np.array_equal(self.starts, parsed.starts)"
    },
    {
        "line": 22,
        "fullcodeline": "assert np.array_equal(self.ends, parsed.ends)"
    },
    {
        "line": 23,
        "fullcodeline": "assert np.array_equal(self.flat, parsed.flat)"
    },
    {
        "line": 20,
        "fullcodeline": "parsed, _ = RaggedArray.loads(self.dumps(), dtype=np.dtype(np.intc) * 3)"
    },
    {
        "line": 3,
        "fullcodeline": "[[0, 1, 2], [3, 4, 5]],"
    },
    {
        "line": 4,
        "fullcodeline": "[[6, 7, 8], [9, 10, 11]],"
    },
    {
        "line": 5,
        "fullcodeline": "[[12, 13, 14], [15, 16, 17], [18, 19, 20]],"
    }
]