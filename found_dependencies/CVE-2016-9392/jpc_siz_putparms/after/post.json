[
    {
        "line": 7,
        "fullcodeline": "cstate = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "assert(siz->width && siz->height && siz->tilewidth &&"
    },
    {
        "line": 11,
        "fullcodeline": "if (jpc_putuint16(out, siz->caps) ||"
    },
    {
        "line": 23,
        "fullcodeline": "for (i = 0; i < siz->numcomps; ++i) {"
    },
    {
        "line": 20,
        "fullcodeline": "jpc_putuint16(out, siz->numcomps)) {"
    },
    {
        "line": 19,
        "fullcodeline": "jpc_putuint32(out, siz->tileyoff) ||"
    },
    {
        "line": 21,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "if (jpc_putuint8(out, ((siz->comps[i].sgnd & 1) << 7) |"
    },
    {
        "line": 18,
        "fullcodeline": "jpc_putuint32(out, siz->tilexoff) ||"
    },
    {
        "line": 27,
        "fullcodeline": "jpc_putuint8(out, siz->comps[i].vsamp)) {"
    },
    {
        "line": 17,
        "fullcodeline": "jpc_putuint32(out, siz->tileheight) ||"
    },
    {
        "line": 26,
        "fullcodeline": "jpc_putuint8(out, siz->comps[i].hsamp) ||"
    },
    {
        "line": 28,
        "fullcodeline": "return -1;"
    },
    {
        "line": 16,
        "fullcodeline": "jpc_putuint32(out, siz->tilewidth) ||"
    },
    {
        "line": 15,
        "fullcodeline": "jpc_putuint32(out, siz->yoff) ||"
    },
    {
        "line": 25,
        "fullcodeline": "((siz->comps[i].prec - 1) & 0x7f)) ||"
    },
    {
        "line": 14,
        "fullcodeline": "jpc_putuint32(out, siz->xoff) ||"
    },
    {
        "line": 13,
        "fullcodeline": "jpc_putuint32(out, siz->height) ||"
    },
    {
        "line": 12,
        "fullcodeline": "jpc_putuint32(out, siz->width) ||"
    }
]