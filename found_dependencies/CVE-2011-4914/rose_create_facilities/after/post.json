[
    {
        "line": 3,
        "fullcodeline": "unsigned char *p = buffer + 1;"
    },
    {
        "line": 5,
        "fullcodeline": "char buf[11];"
    },
    {
        "line": 57,
        "fullcodeline": "*p++ = 0x00;"
    },
    {
        "line": 58,
        "fullcodeline": "*p++ = FAC_CCITT;"
    },
    {
        "line": 60,
        "fullcodeline": "*p++ = FAC_CCITT_DEST_NSAP;"
    },
    {
        "line": 62,
        "fullcodeline": "callsign = ax2asc(buf, &rose->dest_call);"
    },
    {
        "line": 64,
        "fullcodeline": "*p++ = strlen(callsign) + 10;"
    },
    {
        "line": 65,
        "fullcodeline": "*p++ = (strlen(callsign) + 9) * 2;\t\t/* ??? */"
    },
    {
        "line": 67,
        "fullcodeline": "*p++ = 0x47; *p++ = 0x00; *p++ = 0x11;"
    },
    {
        "line": 68,
        "fullcodeline": "*p++ = ROSE_ADDR_LEN * 2;"
    },
    {
        "line": 69,
        "fullcodeline": "memcpy(p, &rose->dest_addr, ROSE_ADDR_LEN);"
    },
    {
        "line": 70,
        "fullcodeline": "p   += ROSE_ADDR_LEN;"
    },
    {
        "line": 72,
        "fullcodeline": "memcpy(p, callsign, strlen(callsign));"
    },
    {
        "line": 73,
        "fullcodeline": "p   += strlen(callsign);"
    },
    {
        "line": 75,
        "fullcodeline": "*p++ = FAC_CCITT_SRC_NSAP;"
    },
    {
        "line": 77,
        "fullcodeline": "callsign = ax2asc(buf, &rose->source_call);"
    },
    {
        "line": 79,
        "fullcodeline": "*p++ = strlen(callsign) + 10;"
    },
    {
        "line": 80,
        "fullcodeline": "*p++ = (strlen(callsign) + 9) * 2;\t\t/* ??? */"
    },
    {
        "line": 82,
        "fullcodeline": "*p++ = 0x47; *p++ = 0x00; *p++ = 0x11;"
    },
    {
        "line": 83,
        "fullcodeline": "*p++ = ROSE_ADDR_LEN * 2;"
    },
    {
        "line": 84,
        "fullcodeline": "memcpy(p, &rose->source_addr, ROSE_ADDR_LEN);"
    },
    {
        "line": 85,
        "fullcodeline": "p   += ROSE_ADDR_LEN;"
    },
    {
        "line": 87,
        "fullcodeline": "memcpy(p, callsign, strlen(callsign));"
    },
    {
        "line": 88,
        "fullcodeline": "p   += strlen(callsign);"
    },
    {
        "line": 90,
        "fullcodeline": "len       = p - buffer;"
    },
    {
        "line": 91,
        "fullcodeline": "buffer[0] = len - 1;"
    },
    {
        "line": 9,
        "fullcodeline": "if (rose->rand != 0 || rose->source_ndigis == 1 || rose->dest_ndigis == 1) {"
    },
    {
        "line": 10,
        "fullcodeline": "*p++ = 0x00;"
    },
    {
        "line": 11,
        "fullcodeline": "*p++ = FAC_NATIONAL;"
    },
    {
        "line": 13,
        "fullcodeline": "if (rose->rand != 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "if ((rose->source_ndigis > 0) || (rose->dest_ndigis > 0)) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (rose->source_ndigis > 0) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (rose->dest_ndigis > 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "*p++ = FAC_NATIONAL_RAND;"
    },
    {
        "line": 15,
        "fullcodeline": "*p++ = (rose->rand >> 8) & 0xFF;"
    },
    {
        "line": 16,
        "fullcodeline": "*p++ = (rose->rand >> 0) & 0xFF;"
    },
    {
        "line": 21,
        "fullcodeline": "int maxdigi = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "*p++ = FAC_NATIONAL_DIGIS;"
    },
    {
        "line": 23,
        "fullcodeline": "*p++ = AX25_ADDR_LEN * (rose->source_ndigis + rose->dest_ndigis);"
    },
    {
        "line": 42,
        "fullcodeline": "*p++ = FAC_NATIONAL_SRC_DIGI;"
    },
    {
        "line": 43,
        "fullcodeline": "*p++ = AX25_ADDR_LEN;"
    },
    {
        "line": 44,
        "fullcodeline": "memcpy(p, &rose->source_digis[0], AX25_ADDR_LEN);"
    },
    {
        "line": 45,
        "fullcodeline": "p   += AX25_ADDR_LEN;"
    },
    {
        "line": 50,
        "fullcodeline": "*p++ = FAC_NATIONAL_DEST_DIGI;"
    },
    {
        "line": 51,
        "fullcodeline": "*p++ = AX25_ADDR_LEN;"
    },
    {
        "line": 52,
        "fullcodeline": "memcpy(p, &rose->dest_digis[0], AX25_ADDR_LEN);"
    },
    {
        "line": 53,
        "fullcodeline": "p   += AX25_ADDR_LEN;"
    },
    {
        "line": 24,
        "fullcodeline": "for (nb = 0 ; nb < rose->source_ndigis ; nb++) {"
    },
    {
        "line": 31,
        "fullcodeline": "for (nb = 0 ; nb < rose->dest_ndigis ; nb++) {"
    },
    {
        "line": 27,
        "fullcodeline": "memcpy(p, &rose->source_digis[nb], AX25_ADDR_LEN);"
    },
    {
        "line": 28,
        "fullcodeline": "p[6] |= AX25_HBIT;"
    },
    {
        "line": 29,
        "fullcodeline": "p += AX25_ADDR_LEN;"
    },
    {
        "line": 34,
        "fullcodeline": "memcpy(p, &rose->dest_digis[nb], AX25_ADDR_LEN);"
    },
    {
        "line": 35,
        "fullcodeline": "p[6] &= ~AX25_HBIT;"
    },
    {
        "line": 36,
        "fullcodeline": "p += AX25_ADDR_LEN;"
    },
    {
        "line": 25,
        "fullcodeline": "if (++maxdigi >= ROSE_MAX_DIGIS)"
    },
    {
        "line": 32,
        "fullcodeline": "if (++maxdigi >= ROSE_MAX_DIGIS)"
    }
]