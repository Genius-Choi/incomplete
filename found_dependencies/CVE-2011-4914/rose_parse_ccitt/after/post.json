[
    {
        "line": 3,
        "fullcodeline": "unsigned char l, n = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "char callsign[11];"
    },
    {
        "line": 58,
        "fullcodeline": "} while (*p != 0x00 && len > 0);"
    },
    {
        "line": 7,
        "fullcodeline": "switch (*p & 0xC0) {"
    },
    {
        "line": 11,
        "fullcodeline": "p   += 2;"
    },
    {
        "line": 12,
        "fullcodeline": "n   += 2;"
    },
    {
        "line": 13,
        "fullcodeline": "len -= 2;"
    },
    {
        "line": 19,
        "fullcodeline": "p   += 3;"
    },
    {
        "line": 20,
        "fullcodeline": "n   += 3;"
    },
    {
        "line": 21,
        "fullcodeline": "len -= 3;"
    },
    {
        "line": 27,
        "fullcodeline": "p   += 4;"
    },
    {
        "line": 28,
        "fullcodeline": "n   += 4;"
    },
    {
        "line": 29,
        "fullcodeline": "len -= 4;"
    },
    {
        "line": 35,
        "fullcodeline": "l = p[1];"
    },
    {
        "line": 53,
        "fullcodeline": "p   += l + 2;"
    },
    {
        "line": 54,
        "fullcodeline": "n   += l + 2;"
    },
    {
        "line": 55,
        "fullcodeline": "len -= l + 2;"
    },
    {
        "line": 9,
        "fullcodeline": "if (len < 2)"
    },
    {
        "line": 17,
        "fullcodeline": "if (len < 3)"
    },
    {
        "line": 25,
        "fullcodeline": "if (len < 4)"
    },
    {
        "line": 33,
        "fullcodeline": "if (len < 2)"
    },
    {
        "line": 38,
        "fullcodeline": "if (l < 10 || l > 20)"
    },
    {
        "line": 41,
        "fullcodeline": "if (*p == FAC_CCITT_DEST_NSAP) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (*p == FAC_CCITT_SRC_NSAP) {"
    },
    {
        "line": 42,
        "fullcodeline": "memcpy(&facilities->source_addr, p + 7, ROSE_ADDR_LEN);"
    },
    {
        "line": 43,
        "fullcodeline": "memcpy(callsign, p + 12,   l - 10);"
    },
    {
        "line": 44,
        "fullcodeline": "callsign[l - 10] = '\\0';"
    },
    {
        "line": 45,
        "fullcodeline": "asc2ax(&facilities->source_call, callsign);"
    },
    {
        "line": 48,
        "fullcodeline": "memcpy(&facilities->dest_addr, p + 7, ROSE_ADDR_LEN);"
    },
    {
        "line": 49,
        "fullcodeline": "memcpy(callsign, p + 12, l - 10);"
    },
    {
        "line": 50,
        "fullcodeline": "callsign[l - 10] = '\\0';"
    },
    {
        "line": 51,
        "fullcodeline": "asc2ax(&facilities->dest_call, callsign);"
    },
    {
        "line": 10,
        "fullcodeline": "return -1;"
    },
    {
        "line": 18,
        "fullcodeline": "return -1;"
    },
    {
        "line": 26,
        "fullcodeline": "return -1;"
    },
    {
        "line": 34,
        "fullcodeline": "return -1;"
    },
    {
        "line": 39,
        "fullcodeline": "return -1;"
    }
]