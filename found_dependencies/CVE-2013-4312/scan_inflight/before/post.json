[
    {
        "line": 8,
        "fullcodeline": "skb_queue_walk_safe(&x->sk_receive_queue, skb, next) {"
    },
    {
        "line": 40,
        "fullcodeline": "spin_unlock(&x->sk_receive_queue.lock);"
    },
    {
        "line": 10,
        "fullcodeline": "if (UNIXCB(skb).fp) {"
    },
    {
        "line": 11,
        "fullcodeline": "bool hit = false;"
    },
    {
        "line": 16,
        "fullcodeline": "while (nfd--) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (hit && hitlist != NULL) {"
    },
    {
        "line": 18,
        "fullcodeline": "struct sock *sk = unix_get_socket(*fp++);"
    },
    {
        "line": 35,
        "fullcodeline": "__skb_unlink(skb, &x->sk_receive_queue);"
    },
    {
        "line": 36,
        "fullcodeline": "__skb_queue_tail(hitlist, skb);"
    },
    {
        "line": 13,
        "fullcodeline": "int nfd = UNIXCB(skb).fp->count;"
    },
    {
        "line": 14,
        "fullcodeline": "struct file **fp = UNIXCB(skb).fp->fp;"
    },
    {
        "line": 21,
        "fullcodeline": "struct unix_sock *u = unix_sk(sk);"
    },
    {
        "line": 27,
        "fullcodeline": "if (test_bit(UNIX_GC_CANDIDATE, &u->gc_flags)) {"
    },
    {
        "line": 28,
        "fullcodeline": "hit = true;"
    },
    {
        "line": 30,
        "fullcodeline": "func(u);"
    }
]