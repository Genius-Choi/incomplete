[
    {
        "line": 12,
        "fullcodeline": "mem = nghttp2_mem_default();"
    },
    {
        "line": 14,
        "fullcodeline": "frame_pack_bufs_init(&bufs);"
    },
    {
        "line": 16,
        "fullcodeline": "iv.settings_id = NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS;"
    },
    {
        "line": 17,
        "fullcodeline": "iv.value = 2;"
    },
    {
        "line": 19,
        "fullcodeline": "rv = nghttp2_submit_settings(session, NGHTTP2_FLAG_NONE, &iv, 1);"
    },
    {
        "line": 21,
        "fullcodeline": "CU_ASSERT(0 == rv);"
    },
    {
        "line": 23,
        "fullcodeline": "rv = nghttp2_session_send(session);"
    },
    {
        "line": 25,
        "fullcodeline": "CU_ASSERT(0 == rv);"
    },
    {
        "line": 42,
        "fullcodeline": "nghttp2_session_close_stream(session, 3, NGHTTP2_NO_ERROR);"
    },
    {
        "line": 44,
        "fullcodeline": "rv = pack_headers(&bufs, deflater, 5,"
    },
    {
        "line": 48,
        "fullcodeline": "CU_ASSERT(0 == rv);"
    },
    {
        "line": 51,
        "fullcodeline": "nread = nghttp2_session_mem_recv(session, bufs.head->buf.pos,"
    },
    {
        "line": 54,
        "fullcodeline": "CU_ASSERT((ssize_t)nghttp2_bufs_len(&bufs) == nread);"
    },
    {
        "line": 56,
        "fullcodeline": "stream = nghttp2_session_get_stream_raw(session, 3);"
    },
    {
        "line": 58,
        "fullcodeline": "CU_ASSERT(NULL == stream);"
    },
    {
        "line": 63,
        "fullcodeline": "nghttp2_bufs_reset(&bufs);"
    },
    {
        "line": 64,
        "fullcodeline": "rv = pack_headers(&bufs, deflater, 3,"
    },
    {
        "line": 68,
        "fullcodeline": "CU_ASSERT(0 == rv);"
    },
    {
        "line": 70,
        "fullcodeline": "nread = nghttp2_session_mem_recv(session, bufs.head->buf.pos,"
    },
    {
        "line": 73,
        "fullcodeline": "CU_ASSERT((ssize_t)nghttp2_bufs_len(&bufs) == nread);"
    },
    {
        "line": 74,
        "fullcodeline": "CU_ASSERT(NULL == nghttp2_session_get_next_ob_item(session));"
    },
    {
        "line": 76,
        "fullcodeline": "nghttp2_frame_hd_init(&hd, 0, NGHTTP2_DATA, NGHTTP2_FLAG_NONE, 3);"
    },
    {
        "line": 77,
        "fullcodeline": "nghttp2_bufs_reset(&bufs);"
    },
    {
        "line": 78,
        "fullcodeline": "nghttp2_frame_pack_frame_hd(bufs.head->buf.last, &hd);"
    },
    {
        "line": 79,
        "fullcodeline": "bufs.head->buf.last += NGHTTP2_FRAME_HDLEN;"
    },
    {
        "line": 81,
        "fullcodeline": "nread = nghttp2_session_mem_recv(session, bufs.head->buf.pos,"
    },
    {
        "line": 84,
        "fullcodeline": "CU_ASSERT((ssize_t)nghttp2_bufs_len(&bufs) == nread);"
    },
    {
        "line": 85,
        "fullcodeline": "CU_ASSERT(NULL == nghttp2_session_get_next_ob_item(session));"
    },
    {
        "line": 88,
        "fullcodeline": "nghttp2_frame_hd_init(&hd, 0, NGHTTP2_SETTINGS, NGHTTP2_FLAG_ACK, 0);"
    },
    {
        "line": 89,
        "fullcodeline": "nghttp2_bufs_reset(&bufs);"
    },
    {
        "line": 90,
        "fullcodeline": "nghttp2_frame_pack_frame_hd(bufs.head->buf.last, &hd);"
    },
    {
        "line": 91,
        "fullcodeline": "bufs.head->buf.last += NGHTTP2_FRAME_HDLEN;"
    },
    {
        "line": 93,
        "fullcodeline": "nread = nghttp2_session_mem_recv(session, bufs.head->buf.pos,"
    },
    {
        "line": 96,
        "fullcodeline": "CU_ASSERT((ssize_t)nghttp2_bufs_len(&bufs) == nread);"
    },
    {
        "line": 98,
        "fullcodeline": "nghttp2_bufs_free(&bufs);"
    },
    {
        "line": 27,
        "fullcodeline": "for (i = 1; i <= 3; i += 2) {"
    },
    {
        "line": 28,
        "fullcodeline": "rv = pack_headers(&bufs, deflater, i,"
    },
    {
        "line": 32,
        "fullcodeline": "CU_ASSERT(0 == rv);"
    },
    {
        "line": 34,
        "fullcodeline": "nread = nghttp2_session_mem_recv(session, bufs.head->buf.pos,"
    },
    {
        "line": 37,
        "fullcodeline": "CU_ASSERT((ssize_t)nghttp2_bufs_len(&bufs) == nread);"
    },
    {
        "line": 39,
        "fullcodeline": "nghttp2_bufs_reset(&bufs);"
    },
    {
        "line": 45,
        "fullcodeline": "NGHTTP2_FLAG_END_HEADERS | NGHTTP2_FLAG_END_STREAM, reqnv,"
    },
    {
        "line": 46,
        "fullcodeline": "ARRLEN(reqnv), mem);"
    },
    {
        "line": 52,
        "fullcodeline": "nghttp2_bufs_len(&bufs));"
    },
    {
        "line": 65,
        "fullcodeline": "NGHTTP2_FLAG_END_HEADERS | NGHTTP2_FLAG_END_STREAM,"
    },
    {
        "line": 66,
        "fullcodeline": "trailernv, ARRLEN(trailernv), mem);"
    },
    {
        "line": 71,
        "fullcodeline": "nghttp2_bufs_len(&bufs));"
    },
    {
        "line": 82,
        "fullcodeline": "nghttp2_bufs_len(&bufs));"
    },
    {
        "line": 94,
        "fullcodeline": "nghttp2_bufs_len(&bufs));"
    },
    {
        "line": 29,
        "fullcodeline": "NGHTTP2_FLAG_END_HEADERS | NGHTTP2_FLAG_END_STREAM, reqnv,"
    },
    {
        "line": 30,
        "fullcodeline": "ARRLEN(reqnv), mem);"
    },
    {
        "line": 35,
        "fullcodeline": "nghttp2_bufs_len(&bufs));"
    }
]