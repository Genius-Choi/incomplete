[
    {
        "line": 7,
        "fullcodeline": "size_t max_deflate_dynamic_table_size ="
    },
    {
        "line": 14,
        "fullcodeline": "*session_ptr = nghttp2_mem_calloc(mem, 1, sizeof(nghttp2_session));"
    },
    {
        "line": 20,
        "fullcodeline": "(*session_ptr)->mem = *mem;"
    },
    {
        "line": 21,
        "fullcodeline": "mem = &(*session_ptr)->mem;"
    },
    {
        "line": 26,
        "fullcodeline": "nghttp2_stream_init(&(*session_ptr)->root, 0, NGHTTP2_STREAM_FLAG_NONE,"
    },
    {
        "line": 30,
        "fullcodeline": "(*session_ptr)->remote_window_size = NGHTTP2_INITIAL_CONNECTION_WINDOW_SIZE;"
    },
    {
        "line": 31,
        "fullcodeline": "(*session_ptr)->recv_window_size = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "(*session_ptr)->consumed_size = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "(*session_ptr)->recv_reduction = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "(*session_ptr)->local_window_size = NGHTTP2_INITIAL_CONNECTION_WINDOW_SIZE;"
    },
    {
        "line": 36,
        "fullcodeline": "(*session_ptr)->goaway_flags = NGHTTP2_GOAWAY_NONE;"
    },
    {
        "line": 37,
        "fullcodeline": "(*session_ptr)->local_last_stream_id = (1u << 31) - 1;"
    },
    {
        "line": 38,
        "fullcodeline": "(*session_ptr)->remote_last_stream_id = (1u << 31) - 1;"
    },
    {
        "line": 40,
        "fullcodeline": "(*session_ptr)->pending_local_max_concurrent_stream ="
    },
    {
        "line": 42,
        "fullcodeline": "(*session_ptr)->pending_enable_push = 1;"
    },
    {
        "line": 48,
        "fullcodeline": "init_settings(&(*session_ptr)->remote_settings);"
    },
    {
        "line": 49,
        "fullcodeline": "init_settings(&(*session_ptr)->local_settings);"
    },
    {
        "line": 51,
        "fullcodeline": "(*session_ptr)->max_incoming_reserved_streams ="
    },
    {
        "line": 55,
        "fullcodeline": "(*session_ptr)->remote_settings.max_concurrent_streams = 100;"
    },
    {
        "line": 57,
        "fullcodeline": "(*session_ptr)->max_send_header_block_length = NGHTTP2_MAX_HEADERSLEN;"
    },
    {
        "line": 58,
        "fullcodeline": "(*session_ptr)->max_outbound_ack = NGHTTP2_DEFAULT_MAX_OBQ_FLOOD_ITEM;"
    },
    {
        "line": 124,
        "fullcodeline": "rv = nghttp2_hd_deflate_init2(&(*session_ptr)->hd_deflater,"
    },
    {
        "line": 129,
        "fullcodeline": "rv = nghttp2_hd_inflate_init(&(*session_ptr)->hd_inflater, mem);"
    },
    {
        "line": 133,
        "fullcodeline": "rv = nghttp2_map_init(&(*session_ptr)->streams, mem);"
    },
    {
        "line": 138,
        "fullcodeline": "nbuffer = ((*session_ptr)->max_send_header_block_length +"
    },
    {
        "line": 147,
        "fullcodeline": "rv = nghttp2_bufs_init3(&(*session_ptr)->aob.framebufs,"
    },
    {
        "line": 154,
        "fullcodeline": "active_outbound_item_reset(&(*session_ptr)->aob, mem);"
    },
    {
        "line": 156,
        "fullcodeline": "(*session_ptr)->callbacks = *callbacks;"
    },
    {
        "line": 157,
        "fullcodeline": "(*session_ptr)->user_data = user_data;"
    },
    {
        "line": 159,
        "fullcodeline": "session_inbound_frame_reset(*session_ptr);"
    },
    {
        "line": 10,
        "fullcodeline": "if (mem == NULL) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (*session_ptr == NULL) {"
    },
    {
        "line": 126,
        "fullcodeline": "if (rv != 0) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (rv != 0) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (rv != 0) {"
    },
    {
        "line": 142,
        "fullcodeline": "if (nbuffer == 0) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (rv != 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "mem = nghttp2_mem_default();"
    },
    {
        "line": 16,
        "fullcodeline": "rv = NGHTTP2_ERR_NOMEM;"
    },
    {
        "line": 45,
        "fullcodeline": "(*session_ptr)->server = 1;"
    },
    {
        "line": 143,
        "fullcodeline": "nbuffer = 1;"
    },
    {
        "line": 149,
        "fullcodeline": "NGHTTP2_FRAME_HDLEN + 1, mem);"
    },
    {
        "line": 162,
        "fullcodeline": "nghttp2_inbound_frame *iframe = &(*session_ptr)->iframe;"
    },
    {
        "line": 61,
        "fullcodeline": "if ((option->opt_set_mask & NGHTTP2_OPT_NO_AUTO_WINDOW_UPDATE) &&"
    },
    {
        "line": 67,
        "fullcodeline": "if (option->opt_set_mask & NGHTTP2_OPT_PEER_MAX_CONCURRENT_STREAMS) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (option->opt_set_mask & NGHTTP2_OPT_MAX_RESERVED_REMOTE_STREAMS) {"
    },
    {
        "line": 79,
        "fullcodeline": "if ((option->opt_set_mask & NGHTTP2_OPT_NO_RECV_CLIENT_MAGIC) &&"
    },
    {
        "line": 85,
        "fullcodeline": "if ((option->opt_set_mask & NGHTTP2_OPT_NO_HTTP_MESSAGING) &&"
    },
    {
        "line": 91,
        "fullcodeline": "if (option->opt_set_mask & NGHTTP2_OPT_USER_RECV_EXT_TYPES) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (option->opt_set_mask & NGHTTP2_OPT_BUILTIN_RECV_EXT_TYPES) {"
    },
    {
        "line": 100,
        "fullcodeline": "if ((option->opt_set_mask & NGHTTP2_OPT_NO_AUTO_PING_ACK) &&"
    },
    {
        "line": 105,
        "fullcodeline": "if (option->opt_set_mask & NGHTTP2_OPT_MAX_SEND_HEADER_BLOCK_LENGTH) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (option->opt_set_mask & NGHTTP2_OPT_MAX_DEFLATE_DYNAMIC_TABLE_SIZE) {"
    },
    {
        "line": 114,
        "fullcodeline": "if ((option->opt_set_mask & NGHTTP2_OPT_NO_CLOSED_STREAMS) &&"
    },
    {
        "line": 119,
        "fullcodeline": "if (option->opt_set_mask & NGHTTP2_OPT_MAX_OUTBOUND_ACK) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (server && ((*session_ptr)->opt_flags &"
    },
    {
        "line": 172,
        "fullcodeline": "if (!server) {"
    },
    {
        "line": 64,
        "fullcodeline": "(*session_ptr)->opt_flags |= NGHTTP2_OPTMASK_NO_AUTO_WINDOW_UPDATE;"
    },
    {
        "line": 69,
        "fullcodeline": "(*session_ptr)->remote_settings.max_concurrent_streams ="
    },
    {
        "line": 75,
        "fullcodeline": "(*session_ptr)->max_incoming_reserved_streams ="
    },
    {
        "line": 82,
        "fullcodeline": "(*session_ptr)->opt_flags |= NGHTTP2_OPTMASK_NO_RECV_CLIENT_MAGIC;"
    },
    {
        "line": 88,
        "fullcodeline": "(*session_ptr)->opt_flags |= NGHTTP2_OPTMASK_NO_HTTP_MESSAGING;"
    },
    {
        "line": 92,
        "fullcodeline": "memcpy((*session_ptr)->user_recv_ext_types, option->user_recv_ext_types,"
    },
    {
        "line": 97,
        "fullcodeline": "(*session_ptr)->builtin_recv_ext_types = option->builtin_recv_ext_types;"
    },
    {
        "line": 102,
        "fullcodeline": "(*session_ptr)->opt_flags |= NGHTTP2_OPTMASK_NO_AUTO_PING_ACK;"
    },
    {
        "line": 106,
        "fullcodeline": "(*session_ptr)->max_send_header_block_length ="
    },
    {
        "line": 111,
        "fullcodeline": "max_deflate_dynamic_table_size = option->max_deflate_dynamic_table_size;"
    },
    {
        "line": 116,
        "fullcodeline": "(*session_ptr)->opt_flags |= NGHTTP2_OPTMASK_NO_CLOSED_STREAMS;"
    },
    {
        "line": 120,
        "fullcodeline": "(*session_ptr)->max_outbound_ack = option->max_outbound_ack;"
    },
    {
        "line": 166,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_CLIENT_MAGIC;"
    },
    {
        "line": 167,
        "fullcodeline": "iframe->payloadleft = NGHTTP2_CLIENT_MAGIC_LEN;"
    },
    {
        "line": 173,
        "fullcodeline": "(*session_ptr)->aob.state = NGHTTP2_OB_SEND_CLIENT_MAGIC;"
    },
    {
        "line": 174,
        "fullcodeline": "nghttp2_bufs_add(&(*session_ptr)->aob.framebufs, NGHTTP2_CLIENT_MAGIC,"
    },
    {
        "line": 169,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_FIRST_SETTINGS;"
    }
]