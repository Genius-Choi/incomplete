[
    {
        "line": 3,
        "fullcodeline": "const uint8_t *first = in, *last = in + inlen;"
    },
    {
        "line": 4,
        "fullcodeline": "nghttp2_inbound_frame *iframe = &session->iframe;"
    },
    {
        "line": 8,
        "fullcodeline": "int busy = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "DEBUGF(\"recv: connection recv_window_size=%d, local_window=%d\\n\","
    },
    {
        "line": 17,
        "fullcodeline": "mem = &session->mem;"
    },
    {
        "line": 22,
        "fullcodeline": "rv = nghttp2_session_adjust_idle_stream(session);"
    },
    {
        "line": 1411,
        "fullcodeline": "assert(in == last);"
    },
    {
        "line": 23,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (!nghttp2_session_want_read(session)) {"
    },
    {
        "line": 1413,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 1408,
        "fullcodeline": "busy = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1404,
        "fullcodeline": "if (!busy && in == last) {"
    },
    {
        "line": 34,
        "fullcodeline": "readlen = nghttp2_min(inlen, iframe->payloadleft);"
    },
    {
        "line": 42,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 43,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 52,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_FIRST_SETTINGS]\\n\");"
    },
    {
        "line": 54,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 55,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 83,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEAD;"
    },
    {
        "line": 536,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_NBYTE]\\n\");"
    },
    {
        "line": 538,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 539,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 540,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 542,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu, left=%zd\\n\", readlen,"
    },
    {
        "line": 905,
        "fullcodeline": "DEBUGF(\"recv: [IB_IGN_PAYLOAD]\\n\");"
    },
    {
        "line": 907,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 908,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 909,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 911,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 929,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 933,
        "fullcodeline": "DEBUGF(\"recv: [IB_FRAME_SIZE_ERROR]\\n\");"
    },
    {
        "line": 935,
        "fullcodeline": "rv = session_handle_frame_size_error(session);"
    },
    {
        "line": 940,
        "fullcodeline": "assert(iframe->state == NGHTTP2_IB_IGN_ALL);"
    },
    {
        "line": 944,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_SETTINGS]\\n\");"
    },
    {
        "line": 946,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 947,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 948,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 950,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 965,
        "fullcodeline": "rv = session_process_settings_frame(session);"
    },
    {
        "line": 975,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 979,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_GOAWAY_DEBUG]\\n\");"
    },
    {
        "line": 981,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 990,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 999,
        "fullcodeline": "rv = session_process_goaway_frame(session);"
    },
    {
        "line": 1009,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1022,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 1023,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1029,
        "fullcodeline": "nghttp2_frame_unpack_frame_hd(&cont_hd, iframe->sbuf.pos);"
    },
    {
        "line": 1030,
        "fullcodeline": "iframe->payloadleft = cont_hd.length;"
    },
    {
        "line": 1032,
        "fullcodeline": "DEBUGF(\"recv: payloadlen=%zu, type=%u, flags=0x%02x, stream_id=%d\\n\","
    },
    {
        "line": 1053,
        "fullcodeline": "iframe->frame.hd.flags = (uint8_t)("
    },
    {
        "line": 1055,
        "fullcodeline": "iframe->frame.hd.length += cont_hd.length;"
    },
    {
        "line": 1057,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1073,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_PAD_DATA]\\n\");"
    },
    {
        "line": 1075,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 1076,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1077,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1079,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu, left=%zu\\n\", readlen,"
    },
    {
        "line": 1087,
        "fullcodeline": "rv = nghttp2_session_update_recv_connection_window_size(session, readlen);"
    },
    {
        "line": 1097,
        "fullcodeline": "rv ="
    },
    {
        "line": 1108,
        "fullcodeline": "stream = nghttp2_session_get_stream(session, iframe->frame.hd.stream_id);"
    },
    {
        "line": 1119,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1121,
        "fullcodeline": "padlen = inbound_frame_compute_pad(iframe);"
    },
    {
        "line": 1131,
        "fullcodeline": "iframe->frame.data.padlen = (size_t)padlen;"
    },
    {
        "line": 1133,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_DATA;"
    },
    {
        "line": 1137,
        "fullcodeline": "stream = nghttp2_session_get_stream(session, iframe->frame.hd.stream_id);"
    },
    {
        "line": 1145,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_DATA]\\n\");"
    },
    {
        "line": 1147,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1148,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1149,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1151,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1247,
        "fullcodeline": "rv = session_process_data_frame(session);"
    },
    {
        "line": 1252,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1256,
        "fullcodeline": "DEBUGF(\"recv: [IB_IGN_DATA]\\n\");"
    },
    {
        "line": 1258,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1259,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1260,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1262,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1297,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1303,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_EXTENSION_PAYLOAD]\\n\");"
    },
    {
        "line": 1305,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1306,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1307,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1309,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1332,
        "fullcodeline": "rv = session_process_extension_frame(session);"
    },
    {
        "line": 1337,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1341,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_ALTSVC_PAYLOAD]\\n\");"
    },
    {
        "line": 1343,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1351,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1360,
        "fullcodeline": "rv = session_process_altsvc_frame(session);"
    },
    {
        "line": 1365,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1369,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_ORIGIN_PAYLOAD]\\n\");"
    },
    {
        "line": 1371,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1380,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1389,
        "fullcodeline": "rv = session_process_origin_frame(session);"
    },
    {
        "line": 1399,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 36,
        "fullcodeline": "if (memcmp(&NGHTTP2_CLIENT_MAGIC[NGHTTP2_CLIENT_MAGIC_LEN -"
    },
    {
        "line": 45,
        "fullcodeline": "if (iframe->payloadleft == 0) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (iframe->sbuf.pos[3] != NGHTTP2_SETTINGS ||"
    },
    {
        "line": 87,
        "fullcodeline": "int on_begin_frame_called = 0;"
    },
    {
        "line": 89,
        "fullcodeline": "DEBUGF(\"recv: [IB_READ_HEAD]\\n\");"
    },
    {
        "line": 91,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 92,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 98,
        "fullcodeline": "nghttp2_frame_unpack_frame_hd(&iframe->frame.hd, iframe->sbuf.pos);"
    },
    {
        "line": 101,
        "fullcodeline": "DEBUGF(\"recv: payloadlen=%zu, type=%u, flags=0x%02x, stream_id=%d\\n\","
    },
    {
        "line": 543,
        "fullcodeline": "iframe->payloadleft, nghttp2_buf_mark_avail(&iframe->sbuf));"
    },
    {
        "line": 545,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 795,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 797,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 800,
        "fullcodeline": "data_readlen = inbound_frame_effective_readlen("
    },
    {
        "line": 808,
        "fullcodeline": "trail_padlen = nghttp2_frame_trail_padlen(&iframe->frame, iframe->padlen);"
    },
    {
        "line": 810,
        "fullcodeline": "final = (iframe->frame.hd.flags & NGHTTP2_FLAG_END_HEADERS) &&"
    },
    {
        "line": 936,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 942,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 953,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 957,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 967,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 971,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 983,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1001,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1005,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1025,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 1035,
        "fullcodeline": "if (cont_hd.type != NGHTTP2_CONTINUATION ||"
    },
    {
        "line": 1059,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_EXPECT_CONTINUATION) {"
    },
    {
        "line": 1080,
        "fullcodeline": "iframe->payloadleft, nghttp2_buf_mark_avail(&iframe->sbuf));"
    },
    {
        "line": 1082,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 1088,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1092,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1098,
        "fullcodeline": "nghttp2_session_consume(session, iframe->frame.hd.stream_id, readlen);"
    },
    {
        "line": 1100,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1104,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1122,
        "fullcodeline": "if (padlen < 0) {"
    },
    {
        "line": 1139,
        "fullcodeline": "if (!stream) {"
    },
    {
        "line": 1154,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1248,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1265,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1301,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1312,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1328,
        "fullcodeline": "if (iframe->payloadleft > 0) {"
    },
    {
        "line": 1333,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1344,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1361,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1373,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1391,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1395,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 46,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 47,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_FIRST_SETTINGS;"
    },
    {
        "line": 62,
        "fullcodeline": "(iframe->sbuf.pos[4] & NGHTTP2_FLAG_ACK)) {"
    },
    {
        "line": 63,
        "fullcodeline": "rv = session_call_error_callback("
    },
    {
        "line": 73,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 94,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (iframe->frame.hd.length > session->local_settings.max_frame_size) {"
    },
    {
        "line": 516,
        "fullcodeline": "if (!on_begin_frame_called) {"
    },
    {
        "line": 581,
        "fullcodeline": "rv = session_process_headers_frame(session);"
    },
    {
        "line": 586,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 607,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 611,
        "fullcodeline": "rv = session_process_priority_frame(session);"
    },
    {
        "line": 620,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 624,
        "fullcodeline": "rv = session_process_rst_stream_frame(session);"
    },
    {
        "line": 633,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 666,
        "fullcodeline": "rv = session_process_push_promise_frame(session);"
    },
    {
        "line": 671,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 693,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 697,
        "fullcodeline": "rv = session_process_ping_frame(session);"
    },
    {
        "line": 706,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 732,
        "fullcodeline": "rv = session_process_window_update_frame(session);"
    },
    {
        "line": 741,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 777,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 798,
        "fullcodeline": "iframe->payloadleft - readlen);"
    },
    {
        "line": 803,
        "fullcodeline": "if (data_readlen == -1) {"
    },
    {
        "line": 813,
        "fullcodeline": "if (data_readlen > 0 || (data_readlen == 0 && final)) {"
    },
    {
        "line": 882,
        "fullcodeline": "if ((iframe->frame.hd.flags & NGHTTP2_FLAG_END_HEADERS) == 0) {"
    },
    {
        "line": 923,
        "fullcodeline": "session->hd_inflater.ctx.bad = 1;"
    },
    {
        "line": 958,
        "fullcodeline": "inbound_frame_set_settings_entry(iframe);"
    },
    {
        "line": 961,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH);"
    },
    {
        "line": 984,
        "fullcodeline": "iframe->lbuf.last = nghttp2_cpymem(iframe->lbuf.last, in, readlen);"
    },
    {
        "line": 986,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 987,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 994,
        "fullcodeline": "assert(nghttp2_buf_avail(&iframe->lbuf) > 0);"
    },
    {
        "line": 1036,
        "fullcodeline": "cont_hd.stream_id != iframe->frame.hd.stream_id) {"
    },
    {
        "line": 1037,
        "fullcodeline": "DEBUGF(\"recv: expected stream_id=%d, type=%d, but got stream_id=%d, \""
    },
    {
        "line": 1041,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 1054,
        "fullcodeline": "iframe->frame.hd.flags | (cont_hd.flags & NGHTTP2_FLAG_END_HEADERS));"
    },
    {
        "line": 1060,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 1062,
        "fullcodeline": "rv = session_call_on_begin_frame(session, &cont_hd);"
    },
    {
        "line": 1110,
        "fullcodeline": "rv = nghttp2_session_update_recv_stream_window_size("
    },
    {
        "line": 1123,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 1140,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1141,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_DATA;"
    },
    {
        "line": 1157,
        "fullcodeline": "rv = nghttp2_session_update_recv_connection_window_size(session,"
    },
    {
        "line": 1167,
        "fullcodeline": "rv = nghttp2_session_update_recv_stream_window_size("
    },
    {
        "line": 1175,
        "fullcodeline": "data_readlen = inbound_frame_effective_readlen("
    },
    {
        "line": 1183,
        "fullcodeline": "padlen = (ssize_t)readlen - data_readlen;"
    },
    {
        "line": 1199,
        "fullcodeline": "DEBUGF(\"recv: data_readlen=%zd\\n\", data_readlen);"
    },
    {
        "line": 1268,
        "fullcodeline": "rv = nghttp2_session_update_recv_connection_window_size(session,"
    },
    {
        "line": 1313,
        "fullcodeline": "rv = session_call_on_extension_chunk_recv_callback("
    },
    {
        "line": 1345,
        "fullcodeline": "iframe->lbuf.last = nghttp2_cpymem(iframe->lbuf.last, in, readlen);"
    },
    {
        "line": 1347,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1348,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1355,
        "fullcodeline": "assert(nghttp2_buf_avail(&iframe->lbuf) > 0);"
    },
    {
        "line": 1374,
        "fullcodeline": "iframe->lbuf.last = nghttp2_cpymem(iframe->lbuf.last, in, readlen);"
    },
    {
        "line": 1376,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1377,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1384,
        "fullcodeline": "assert(nghttp2_buf_avail(&iframe->lbuf) > 0);"
    },
    {
        "line": 58,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 69,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 80,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 106,
        "fullcodeline": "DEBUGF(\"recv: length is too large %zu > %u\\n\", iframe->frame.hd.length,"
    },
    {
        "line": 109,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 166,
        "fullcodeline": "DEBUGF(\"recv: HEADERS\\n\");"
    },
    {
        "line": 168,
        "fullcodeline": "iframe->frame.hd.flags &="
    },
    {
        "line": 172,
        "fullcodeline": "rv = inbound_frame_handle_pad(iframe, &iframe->frame.hd);"
    },
    {
        "line": 188,
        "fullcodeline": "pri_fieldlen = nghttp2_frame_priority_len(iframe->frame.hd.flags);"
    },
    {
        "line": 207,
        "fullcodeline": "rv = session_call_on_begin_frame(session, &iframe->frame.hd);"
    },
    {
        "line": 213,
        "fullcodeline": "on_begin_frame_called = 1;"
    },
    {
        "line": 215,
        "fullcodeline": "rv = session_process_headers_frame(session);"
    },
    {
        "line": 220,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 241,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 245,
        "fullcodeline": "DEBUGF(\"recv: PRIORITY\\n\");"
    },
    {
        "line": 247,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 257,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 259,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_PRIORITY_SPECLEN);"
    },
    {
        "line": 275,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 283,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 285,
        "fullcodeline": "inbound_frame_set_mark(iframe, 4);"
    },
    {
        "line": 289,
        "fullcodeline": "DEBUGF(\"recv: SETTINGS\\n\");"
    },
    {
        "line": 291,
        "fullcodeline": "iframe->frame.hd.flags &= NGHTTP2_FLAG_ACK;"
    },
    {
        "line": 301,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_SETTINGS;"
    },
    {
        "line": 337,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 339,
        "fullcodeline": "inbound_frame_set_mark(iframe, 0);"
    },
    {
        "line": 343,
        "fullcodeline": "DEBUGF(\"recv: PUSH_PROMISE\\n\");"
    },
    {
        "line": 345,
        "fullcodeline": "iframe->frame.hd.flags &="
    },
    {
        "line": 348,
        "fullcodeline": "rv = inbound_frame_handle_pad(iframe, &iframe->frame.hd);"
    },
    {
        "line": 370,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 372,
        "fullcodeline": "inbound_frame_set_mark(iframe, 4);"
    },
    {
        "line": 376,
        "fullcodeline": "DEBUGF(\"recv: PING\\n\");"
    },
    {
        "line": 378,
        "fullcodeline": "iframe->frame.hd.flags &= NGHTTP2_FLAG_ACK;"
    },
    {
        "line": 386,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 387,
        "fullcodeline": "inbound_frame_set_mark(iframe, 8);"
    },
    {
        "line": 391,
        "fullcodeline": "DEBUGF(\"recv: GOAWAY\\n\");"
    },
    {
        "line": 393,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 401,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 402,
        "fullcodeline": "inbound_frame_set_mark(iframe, 8);"
    },
    {
        "line": 406,
        "fullcodeline": "DEBUGF(\"recv: unexpected CONTINUATION\\n\");"
    },
    {
        "line": 410,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 418,
        "fullcodeline": "DEBUGF(\"recv: extension frame\\n\");"
    },
    {
        "line": 546,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 551,
        "fullcodeline": "if (iframe->padlen == 0 &&"
    },
    {
        "line": 582,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 588,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 592,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 602,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_HEADER_BLOCK) {"
    },
    {
        "line": 612,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 616,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 625,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 629,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 637,
        "fullcodeline": "if (iframe->padlen == 0 &&"
    },
    {
        "line": 667,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 673,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 677,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 688,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_HEADER_BLOCK) {"
    },
    {
        "line": 698,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 702,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 713,
        "fullcodeline": "debuglen = iframe->frame.hd.length - 8;"
    },
    {
        "line": 725,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 727,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_GOAWAY_DEBUG;"
    },
    {
        "line": 733,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 737,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 747,
        "fullcodeline": "origin_len = nghttp2_get_uint16(iframe->sbuf.pos);"
    },
    {
        "line": 749,
        "fullcodeline": "DEBUGF(\"recv: origin_len=%zu\\n\", origin_len);"
    },
    {
        "line": 769,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 771,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_ALTSVC_PAYLOAD;"
    },
    {
        "line": 801,
        "fullcodeline": "iframe, iframe->payloadleft - readlen, readlen);"
    },
    {
        "line": 805,
        "fullcodeline": "data_readlen = 0;"
    },
    {
        "line": 811,
        "fullcodeline": "iframe->payloadleft - (size_t)data_readlen == trail_padlen;"
    },
    {
        "line": 814,
        "fullcodeline": "size_t hd_proclen = 0;"
    },
    {
        "line": 816,
        "fullcodeline": "DEBUGF(\"recv: block final=%d\\n\", final);"
    },
    {
        "line": 818,
        "fullcodeline": "rv ="
    },
    {
        "line": 860,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 861,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 884,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_FRAME_HDLEN);"
    },
    {
        "line": 886,
        "fullcodeline": "iframe->padlen = 0;"
    },
    {
        "line": 972,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1006,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1026,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 1044,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1048,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1064,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1068,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 1083,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 1093,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1105,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1114,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1125,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1128,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1159,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1163,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1171,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1178,
        "fullcodeline": "if (data_readlen == -1) {"
    },
    {
        "line": 1185,
        "fullcodeline": "if (padlen > 0) {"
    },
    {
        "line": 1201,
        "fullcodeline": "if (data_readlen > 0) {"
    },
    {
        "line": 1270,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1274,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1278,
        "fullcodeline": "if (session->opt_flags & NGHTTP2_OPTMASK_NO_AUTO_WINDOW_UPDATE) {"
    },
    {
        "line": 1315,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1319,
        "fullcodeline": "if (rv != 0) {"
    },
    {
        "line": 1396,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 95,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 112,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 116,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 121,
        "fullcodeline": "DEBUGF(\"recv: DATA\\n\");"
    },
    {
        "line": 123,
        "fullcodeline": "iframe->frame.hd.flags &="
    },
    {
        "line": 127,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 129,
        "fullcodeline": "rv = session_on_data_received_fail_fast(session);"
    },
    {
        "line": 144,
        "fullcodeline": "rv = inbound_frame_handle_pad(iframe, &iframe->frame.hd);"
    },
    {
        "line": 161,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_DATA;"
    },
    {
        "line": 169,
        "fullcodeline": "(NGHTTP2_FLAG_END_STREAM | NGHTTP2_FLAG_END_HEADERS |"
    },
    {
        "line": 173,
        "fullcodeline": "if (rv < 0) {"
    },
    {
        "line": 183,
        "fullcodeline": "if (rv == 1) {"
    },
    {
        "line": 190,
        "fullcodeline": "if (pri_fieldlen > 0) {"
    },
    {
        "line": 209,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 216,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 222,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 226,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 236,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_HEADER_BLOCK) {"
    },
    {
        "line": 249,
        "fullcodeline": "if (iframe->payloadleft != NGHTTP2_PRIORITY_SPECLEN) {"
    },
    {
        "line": 277,
        "fullcodeline": "if (iframe->payloadleft != 4) {"
    },
    {
        "line": 293,
        "fullcodeline": "if ((iframe->frame.hd.length % NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH) ||"
    },
    {
        "line": 346,
        "fullcodeline": "(NGHTTP2_FLAG_END_HEADERS | NGHTTP2_FLAG_PADDED);"
    },
    {
        "line": 349,
        "fullcodeline": "if (rv < 0) {"
    },
    {
        "line": 359,
        "fullcodeline": "if (rv == 1) {"
    },
    {
        "line": 364,
        "fullcodeline": "if (iframe->payloadleft < 4) {"
    },
    {
        "line": 380,
        "fullcodeline": "if (iframe->payloadleft != 8) {"
    },
    {
        "line": 395,
        "fullcodeline": "if (iframe->payloadleft < 8) {"
    },
    {
        "line": 412,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 416,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 420,
        "fullcodeline": "if (check_ext_type_set(session->user_recv_ext_types,"
    },
    {
        "line": 552,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_PADDED)) {"
    },
    {
        "line": 553,
        "fullcodeline": "pri_fieldlen = nghttp2_frame_priority_len(iframe->frame.hd.flags);"
    },
    {
        "line": 554,
        "fullcodeline": "padlen = inbound_frame_compute_pad(iframe);"
    },
    {
        "line": 564,
        "fullcodeline": "iframe->frame.headers.padlen = (size_t)padlen;"
    },
    {
        "line": 593,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 598,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 603,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 638,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_PADDED)) {"
    },
    {
        "line": 639,
        "fullcodeline": "padlen = inbound_frame_compute_pad(iframe);"
    },
    {
        "line": 651,
        "fullcodeline": "iframe->frame.push_promise.padlen = (size_t)padlen;"
    },
    {
        "line": 659,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 661,
        "fullcodeline": "inbound_frame_set_mark(iframe, 4);"
    },
    {
        "line": 678,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 684,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 689,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 715,
        "fullcodeline": "if (debuglen > 0) {"
    },
    {
        "line": 751,
        "fullcodeline": "if (origin_len > iframe->payloadleft) {"
    },
    {
        "line": 757,
        "fullcodeline": "if (iframe->frame.hd.length > 2) {"
    },
    {
        "line": 819,
        "fullcodeline": "inflate_header_block(session, &iframe->frame, &hd_proclen,"
    },
    {
        "line": 823,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 827,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 831,
        "fullcodeline": "if (rv == NGHTTP2_ERR_PAUSE) {"
    },
    {
        "line": 838,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 863,
        "fullcodeline": "if (rv == NGHTTP2_ERR_HEADER_COMP) {"
    },
    {
        "line": 874,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 875,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 888,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_READ_HEADER_BLOCK) {"
    },
    {
        "line": 900,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1112,
        "fullcodeline": "iframe->payloadleft ||"
    },
    {
        "line": 1169,
        "fullcodeline": "iframe->payloadleft ||"
    },
    {
        "line": 1180,
        "fullcodeline": "data_readlen = 0;"
    },
    {
        "line": 1187,
        "fullcodeline": "rv = nghttp2_session_consume(session, iframe->frame.hd.stream_id,"
    },
    {
        "line": 1281,
        "fullcodeline": "rv = session_update_connection_consumed_size(session, readlen);"
    },
    {
        "line": 1314,
        "fullcodeline": "session, in - readlen, readlen);"
    },
    {
        "line": 1320,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1322,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 124,
        "fullcodeline": "(NGHTTP2_FLAG_END_STREAM | NGHTTP2_FLAG_PADDED);"
    },
    {
        "line": 130,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_PAYLOAD) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 145,
        "fullcodeline": "if (rv < 0) {"
    },
    {
        "line": 156,
        "fullcodeline": "if (rv == 1) {"
    },
    {
        "line": 174,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 184,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 197,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 199,
        "fullcodeline": "inbound_frame_set_mark(iframe, pri_fieldlen);"
    },
    {
        "line": 227,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 232,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 237,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 250,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 252,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 278,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 279,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 294,
        "fullcodeline": "((iframe->frame.hd.flags & NGHTTP2_FLAG_ACK) &&"
    },
    {
        "line": 296,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 297,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 308,
        "fullcodeline": "iframe->max_niv ="
    },
    {
        "line": 321,
        "fullcodeline": "iframe->iv = nghttp2_mem_malloc(mem, sizeof(nghttp2_settings_entry) *"
    },
    {
        "line": 328,
        "fullcodeline": "min_header_table_size_entry = &iframe->iv[iframe->max_niv - 1];"
    },
    {
        "line": 329,
        "fullcodeline": "min_header_table_size_entry->settings_id ="
    },
    {
        "line": 331,
        "fullcodeline": "min_header_table_size_entry->value = UINT32_MAX;"
    },
    {
        "line": 333,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH);"
    },
    {
        "line": 350,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 360,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 365,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 366,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 381,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 382,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 396,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 397,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 432,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 434,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_EXTENSION_PAYLOAD;"
    },
    {
        "line": 525,
        "fullcodeline": "rv = session_call_on_begin_frame(session, &iframe->frame.hd);"
    },
    {
        "line": 555,
        "fullcodeline": "if (padlen < 0 ||"
    },
    {
        "line": 566,
        "fullcodeline": "if (pri_fieldlen > 0) {"
    },
    {
        "line": 589,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 595,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 617,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 630,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 640,
        "fullcodeline": "if (padlen < 0 || (size_t)padlen + 4 /* promised stream id */"
    },
    {
        "line": 653,
        "fullcodeline": "if (iframe->payloadleft < 4) {"
    },
    {
        "line": 674,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 681,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 703,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 716,
        "fullcodeline": "iframe->raw_lbuf = nghttp2_mem_malloc(mem, debuglen);"
    },
    {
        "line": 722,
        "fullcodeline": "nghttp2_buf_wrap_init(&iframe->lbuf, iframe->raw_lbuf, debuglen);"
    },
    {
        "line": 738,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 752,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 753,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 758,
        "fullcodeline": "iframe->raw_lbuf ="
    },
    {
        "line": 765,
        "fullcodeline": "nghttp2_buf_wrap_init(&iframe->lbuf, iframe->raw_lbuf,"
    },
    {
        "line": 820,
        "fullcodeline": "(uint8_t *)in, (size_t)data_readlen, final,"
    },
    {
        "line": 821,
        "fullcodeline": "iframe->state == NGHTTP2_IB_READ_HEADER_BLOCK);"
    },
    {
        "line": 832,
        "fullcodeline": "in += hd_proclen;"
    },
    {
        "line": 833,
        "fullcodeline": "iframe->payloadleft -= hd_proclen;"
    },
    {
        "line": 842,
        "fullcodeline": "in += hd_proclen;"
    },
    {
        "line": 843,
        "fullcodeline": "iframe->payloadleft -= hd_proclen;"
    },
    {
        "line": 846,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 855,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 856,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 889,
        "fullcodeline": "iframe->state = NGHTTP2_IB_EXPECT_CONTINUATION;"
    },
    {
        "line": 894,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_READ_HEADER_BLOCK) {"
    },
    {
        "line": 1113,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_END_STREAM) == 0);"
    },
    {
        "line": 1164,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1170,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_END_STREAM) == 0);"
    },
    {
        "line": 1190,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1194,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1202,
        "fullcodeline": "if (session_enforce_http_messaging(session)) {"
    },
    {
        "line": 1275,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1283,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1287,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 134,
        "fullcodeline": "DEBUGF(\"recv: DATA not allowed stream_id=%d\\n\","
    },
    {
        "line": 136,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_DATA;"
    },
    {
        "line": 146,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 157,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_PAD_DATA;"
    },
    {
        "line": 177,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 180,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 191,
        "fullcodeline": "if (iframe->payloadleft < pri_fieldlen) {"
    },
    {
        "line": 223,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 229,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 295,
        "fullcodeline": "iframe->payloadleft > 0)) {"
    },
    {
        "line": 309,
        "fullcodeline": "iframe->frame.hd.length / NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH + 1;"
    },
    {
        "line": 311,
        "fullcodeline": "if (iframe->max_niv - 1 > session->max_settings) {"
    },
    {
        "line": 324,
        "fullcodeline": "if (!iframe->iv) {"
    },
    {
        "line": 353,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 356,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 527,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 556,
        "fullcodeline": "(size_t)padlen + pri_fieldlen > 1 + iframe->payloadleft) {"
    },
    {
        "line": 557,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 572,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 573,
        "fullcodeline": "inbound_frame_set_mark(iframe, pri_fieldlen);"
    },
    {
        "line": 642,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 654,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 655,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 718,
        "fullcodeline": "if (iframe->raw_lbuf == NULL) {"
    },
    {
        "line": 759,
        "fullcodeline": "nghttp2_mem_malloc(mem, iframe->frame.hd.length - 2);"
    },
    {
        "line": 761,
        "fullcodeline": "if (iframe->raw_lbuf == NULL) {"
    },
    {
        "line": 828,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 835,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 852,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 865,
        "fullcodeline": "if (iframe->payloadleft == 0) {"
    },
    {
        "line": 891,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_CONTINUATION;"
    },
    {
        "line": 895,
        "fullcodeline": "rv = session_after_header_block_received(session);"
    },
    {
        "line": 1188,
        "fullcodeline": "(size_t)padlen);"
    },
    {
        "line": 1229,
        "fullcodeline": "rv = session->callbacks.on_data_chunk_recv_callback("
    },
    {
        "line": 131,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 150,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 153,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 192,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 193,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 312,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 425,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 427,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 559,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 562,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 567,
        "fullcodeline": "if (iframe->payloadleft < pri_fieldlen) {"
    },
    {
        "line": 577,
        "fullcodeline": "inbound_frame_set_mark(iframe, 0);"
    },
    {
        "line": 641,
        "fullcodeline": "> 1 + iframe->payloadleft) {"
    },
    {
        "line": 645,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 648,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 866,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 896,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1195,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1203,
        "fullcodeline": "if (nghttp2_http_on_data_chunk(stream, (size_t)data_readlen) != 0) {"
    },
    {
        "line": 1232,
        "fullcodeline": "if (rv == NGHTTP2_ERR_PAUSE) {"
    },
    {
        "line": 1236,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1288,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 315,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 318,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 447,
        "fullcodeline": "DEBUGF(\"recv: ALTSVC\\n\");"
    },
    {
        "line": 449,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 464,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 466,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 467,
        "fullcodeline": "inbound_frame_set_mark(iframe, 2);"
    },
    {
        "line": 477,
        "fullcodeline": "DEBUGF(\"recv: ORIGIN\\n\");"
    },
    {
        "line": 488,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 503,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_ORIGIN_PAYLOAD;"
    },
    {
        "line": 507,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 509,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 568,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 569,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 848,
        "fullcodeline": "iframe->frame.hd.type == NGHTTP2_PUSH_PROMISE"
    },
    {
        "line": 868,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 869,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 1218,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 1223,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1224,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_DATA;"
    },
    {
        "line": 1231,
        "fullcodeline": "in - readlen, (size_t)data_readlen, session->user_data);"
    },
    {
        "line": 440,
        "fullcodeline": "if ((session->builtin_recv_ext_types & NGHTTP2_TYPEMASK_ALTSVC) =="
    },
    {
        "line": 458,
        "fullcodeline": "if (iframe->payloadleft < 2) {"
    },
    {
        "line": 471,
        "fullcodeline": "if (!(session->builtin_recv_ext_types & NGHTTP2_TYPEMASK_ORIGIN)) {"
    },
    {
        "line": 481,
        "fullcodeline": "if (session->server || iframe->frame.hd.stream_id ||"
    },
    {
        "line": 1204,
        "fullcodeline": "if (session->opt_flags & NGHTTP2_OPTMASK_NO_AUTO_WINDOW_UPDATE) {"
    },
    {
        "line": 1220,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1233,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 442,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 443,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 453,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 454,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 459,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 460,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 472,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 473,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 482,
        "fullcodeline": "(iframe->frame.hd.flags & 0xf0)) {"
    },
    {
        "line": 483,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 484,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 491,
        "fullcodeline": "iframe->raw_lbuf = nghttp2_mem_malloc(mem, iframe->payloadleft);"
    },
    {
        "line": 497,
        "fullcodeline": "nghttp2_buf_wrap_init(&iframe->lbuf, iframe->raw_lbuf,"
    },
    {
        "line": 1206,
        "fullcodeline": "rv = session_update_connection_consumed_size("
    },
    {
        "line": 493,
        "fullcodeline": "if (iframe->raw_lbuf == NULL) {"
    },
    {
        "line": 500,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1209,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1213,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_DATA) {"
    },
    {
        "line": 1207,
        "fullcodeline": "session, (size_t)data_readlen);"
    },
    {
        "line": 1214,
        "fullcodeline": "return (ssize_t)inlen;"
    }
]