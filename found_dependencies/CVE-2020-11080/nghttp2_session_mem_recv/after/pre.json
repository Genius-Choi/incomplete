[
    {
        "line": 3,
        "fullcodeline": "const uint8_t *first = in, *last = in + inlen;"
    },
    {
        "line": 4,
        "fullcodeline": "nghttp2_inbound_frame *iframe = &session->iframe;"
    },
    {
        "line": 8,
        "fullcodeline": "int busy = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "DEBUGF(\"recv: connection recv_window_size=%d, local_window=%d\\n\","
    },
    {
        "line": 17,
        "fullcodeline": "mem = &session->mem;"
    },
    {
        "line": 22,
        "fullcodeline": "rv = nghttp2_session_adjust_idle_stream(session);"
    },
    {
        "line": 23,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1417,
        "fullcodeline": "assert(in == last);"
    },
    {
        "line": 1419,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 27,
        "fullcodeline": "if (!nghttp2_session_want_read(session)) {"
    },
    {
        "line": 1414,
        "fullcodeline": "busy = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 34,
        "fullcodeline": "readlen = nghttp2_min(inlen, iframe->payloadleft);"
    },
    {
        "line": 42,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 43,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 54,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 55,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 83,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEAD;"
    },
    {
        "line": 544,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 545,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 546,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 548,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu, left=%zd\\n\", readlen,"
    },
    {
        "line": 913,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 914,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 915,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 917,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 935,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 941,
        "fullcodeline": "rv = session_handle_frame_size_error(session);"
    },
    {
        "line": 952,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 953,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 954,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 956,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 971,
        "fullcodeline": "rv = session_process_settings_frame(session);"
    },
    {
        "line": 981,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 987,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 996,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1005,
        "fullcodeline": "rv = session_process_goaway_frame(session);"
    },
    {
        "line": 1015,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1028,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 1029,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1035,
        "fullcodeline": "nghttp2_frame_unpack_frame_hd(&cont_hd, iframe->sbuf.pos);"
    },
    {
        "line": 1036,
        "fullcodeline": "iframe->payloadleft = cont_hd.length;"
    },
    {
        "line": 1038,
        "fullcodeline": "DEBUGF(\"recv: payloadlen=%zu, type=%u, flags=0x%02x, stream_id=%d\\n\","
    },
    {
        "line": 1063,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1081,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 1082,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1083,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1085,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu, left=%zu\\n\", readlen,"
    },
    {
        "line": 1093,
        "fullcodeline": "rv = nghttp2_session_update_recv_connection_window_size(session, readlen);"
    },
    {
        "line": 1103,
        "fullcodeline": "rv ="
    },
    {
        "line": 1114,
        "fullcodeline": "stream = nghttp2_session_get_stream(session, iframe->frame.hd.stream_id);"
    },
    {
        "line": 1125,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1127,
        "fullcodeline": "padlen = inbound_frame_compute_pad(iframe);"
    },
    {
        "line": 1139,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_DATA;"
    },
    {
        "line": 1143,
        "fullcodeline": "stream = nghttp2_session_get_stream(session, iframe->frame.hd.stream_id);"
    },
    {
        "line": 1153,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1154,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1155,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1157,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1253,
        "fullcodeline": "rv = session_process_data_frame(session);"
    },
    {
        "line": 1258,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1264,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1265,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1266,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1268,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1303,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1311,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1312,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1313,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1315,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1338,
        "fullcodeline": "rv = session_process_extension_frame(session);"
    },
    {
        "line": 1343,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1349,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1357,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1366,
        "fullcodeline": "rv = session_process_altsvc_frame(session);"
    },
    {
        "line": 1371,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1377,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 1386,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 1395,
        "fullcodeline": "rv = session_process_origin_frame(session);"
    },
    {
        "line": 1405,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1410,
        "fullcodeline": "if (!busy && in == last) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (iframe->payloadleft == 0) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 87,
        "fullcodeline": "int on_begin_frame_called = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "readlen = inbound_frame_buf_read(iframe, in, last);"
    },
    {
        "line": 92,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 98,
        "fullcodeline": "nghttp2_frame_unpack_frame_hd(&iframe->frame.hd, iframe->sbuf.pos);"
    },
    {
        "line": 99,
        "fullcodeline": "iframe->payloadleft = iframe->frame.hd.length;"
    },
    {
        "line": 101,
        "fullcodeline": "DEBUGF(\"recv: payloadlen=%zu, type=%u, flags=0x%02x, stream_id=%d\\n\","
    },
    {
        "line": 549,
        "fullcodeline": "iframe->payloadleft, nghttp2_buf_mark_avail(&iframe->sbuf));"
    },
    {
        "line": 551,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 801,
        "fullcodeline": "readlen = inbound_frame_payload_readlen(iframe, in, last);"
    },
    {
        "line": 803,
        "fullcodeline": "DEBUGF(\"recv: readlen=%zu, payloadleft=%zu\\n\", readlen,"
    },
    {
        "line": 806,
        "fullcodeline": "data_readlen = inbound_frame_effective_readlen("
    },
    {
        "line": 814,
        "fullcodeline": "trail_padlen = nghttp2_frame_trail_padlen(&iframe->frame, iframe->padlen);"
    },
    {
        "line": 816,
        "fullcodeline": "final = (iframe->frame.hd.flags & NGHTTP2_FLAG_END_HEADERS) &&"
    },
    {
        "line": 942,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 946,
        "fullcodeline": "assert(iframe->state == NGHTTP2_IB_IGN_ALL);"
    },
    {
        "line": 948,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 959,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 973,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 977,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 989,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1007,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1011,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1031,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 1059,
        "fullcodeline": "iframe->frame.hd.flags = (uint8_t)("
    },
    {
        "line": 1065,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_EXPECT_CONTINUATION) {"
    },
    {
        "line": 1086,
        "fullcodeline": "iframe->payloadleft, nghttp2_buf_mark_avail(&iframe->sbuf));"
    },
    {
        "line": 1088,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 1094,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1098,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1104,
        "fullcodeline": "nghttp2_session_consume(session, iframe->frame.hd.stream_id, readlen);"
    },
    {
        "line": 1106,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1110,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1128,
        "fullcodeline": "if (padlen < 0) {"
    },
    {
        "line": 1145,
        "fullcodeline": "if (!stream) {"
    },
    {
        "line": 1160,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1254,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1271,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1307,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1318,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1334,
        "fullcodeline": "if (iframe->payloadleft > 0) {"
    },
    {
        "line": 1339,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1350,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1367,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1379,
        "fullcodeline": "if (readlen > 0) {"
    },
    {
        "line": 1397,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1401,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (memcmp(&NGHTTP2_CLIENT_MAGIC[NGHTTP2_CLIENT_MAGIC_LEN -"
    },
    {
        "line": 46,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 47,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_FIRST_SETTINGS;"
    },
    {
        "line": 61,
        "fullcodeline": "if (iframe->sbuf.pos[3] != NGHTTP2_SETTINGS ||"
    },
    {
        "line": 62,
        "fullcodeline": "(iframe->sbuf.pos[4] & NGHTTP2_FLAG_ACK)) {"
    },
    {
        "line": 63,
        "fullcodeline": "rv = session_call_error_callback("
    },
    {
        "line": 73,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 94,
        "fullcodeline": "if (nghttp2_buf_mark_avail(&iframe->sbuf)) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (iframe->frame.hd.length > session->local_settings.max_frame_size) {"
    },
    {
        "line": 587,
        "fullcodeline": "rv = session_process_headers_frame(session);"
    },
    {
        "line": 592,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 613,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 617,
        "fullcodeline": "rv = session_process_priority_frame(session);"
    },
    {
        "line": 626,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 630,
        "fullcodeline": "rv = session_process_rst_stream_frame(session);"
    },
    {
        "line": 639,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 672,
        "fullcodeline": "rv = session_process_push_promise_frame(session);"
    },
    {
        "line": 677,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 699,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 703,
        "fullcodeline": "rv = session_process_ping_frame(session);"
    },
    {
        "line": 712,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 738,
        "fullcodeline": "rv = session_process_window_update_frame(session);"
    },
    {
        "line": 747,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 783,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 804,
        "fullcodeline": "iframe->payloadleft - readlen);"
    },
    {
        "line": 809,
        "fullcodeline": "if (data_readlen == -1) {"
    },
    {
        "line": 964,
        "fullcodeline": "inbound_frame_set_settings_entry(iframe);"
    },
    {
        "line": 967,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH);"
    },
    {
        "line": 990,
        "fullcodeline": "iframe->lbuf.last = nghttp2_cpymem(iframe->lbuf.last, in, readlen);"
    },
    {
        "line": 992,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 993,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1041,
        "fullcodeline": "if (cont_hd.type != NGHTTP2_CONTINUATION ||"
    },
    {
        "line": 1042,
        "fullcodeline": "cont_hd.stream_id != iframe->frame.hd.stream_id) {"
    },
    {
        "line": 1047,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 1060,
        "fullcodeline": "iframe->frame.hd.flags | (cont_hd.flags & NGHTTP2_FLAG_END_HEADERS));"
    },
    {
        "line": 1066,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 1068,
        "fullcodeline": "rv = session_call_on_begin_frame(session, &cont_hd);"
    },
    {
        "line": 1116,
        "fullcodeline": "rv = nghttp2_session_update_recv_stream_window_size("
    },
    {
        "line": 1129,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 1146,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1147,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_DATA;"
    },
    {
        "line": 1163,
        "fullcodeline": "rv = nghttp2_session_update_recv_connection_window_size(session,"
    },
    {
        "line": 1173,
        "fullcodeline": "rv = nghttp2_session_update_recv_stream_window_size("
    },
    {
        "line": 1181,
        "fullcodeline": "data_readlen = inbound_frame_effective_readlen("
    },
    {
        "line": 1189,
        "fullcodeline": "padlen = (ssize_t)readlen - data_readlen;"
    },
    {
        "line": 1205,
        "fullcodeline": "DEBUGF(\"recv: data_readlen=%zd\\n\", data_readlen);"
    },
    {
        "line": 1274,
        "fullcodeline": "rv = nghttp2_session_update_recv_connection_window_size(session,"
    },
    {
        "line": 1319,
        "fullcodeline": "rv = session_call_on_extension_chunk_recv_callback("
    },
    {
        "line": 1351,
        "fullcodeline": "iframe->lbuf.last = nghttp2_cpymem(iframe->lbuf.last, in, readlen);"
    },
    {
        "line": 1353,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1354,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 1380,
        "fullcodeline": "iframe->lbuf.last = nghttp2_cpymem(iframe->lbuf.last, in, readlen);"
    },
    {
        "line": 1382,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 1383,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 58,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 69,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 80,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 109,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 168,
        "fullcodeline": "iframe->frame.hd.flags &="
    },
    {
        "line": 172,
        "fullcodeline": "rv = inbound_frame_handle_pad(iframe, &iframe->frame.hd);"
    },
    {
        "line": 188,
        "fullcodeline": "pri_fieldlen = nghttp2_frame_priority_len(iframe->frame.hd.flags);"
    },
    {
        "line": 207,
        "fullcodeline": "rv = session_call_on_begin_frame(session, &iframe->frame.hd);"
    },
    {
        "line": 213,
        "fullcodeline": "on_begin_frame_called = 1;"
    },
    {
        "line": 215,
        "fullcodeline": "rv = session_process_headers_frame(session);"
    },
    {
        "line": 220,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 241,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_HEADER_BLOCK;"
    },
    {
        "line": 247,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 257,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 259,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_PRIORITY_SPECLEN);"
    },
    {
        "line": 275,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 283,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 285,
        "fullcodeline": "inbound_frame_set_mark(iframe, 4);"
    },
    {
        "line": 291,
        "fullcodeline": "iframe->frame.hd.flags &= NGHTTP2_FLAG_ACK;"
    },
    {
        "line": 307,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_SETTINGS;"
    },
    {
        "line": 343,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 345,
        "fullcodeline": "inbound_frame_set_mark(iframe, 0);"
    },
    {
        "line": 351,
        "fullcodeline": "iframe->frame.hd.flags &="
    },
    {
        "line": 354,
        "fullcodeline": "rv = inbound_frame_handle_pad(iframe, &iframe->frame.hd);"
    },
    {
        "line": 376,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 378,
        "fullcodeline": "inbound_frame_set_mark(iframe, 4);"
    },
    {
        "line": 384,
        "fullcodeline": "iframe->frame.hd.flags &= NGHTTP2_FLAG_ACK;"
    },
    {
        "line": 392,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 393,
        "fullcodeline": "inbound_frame_set_mark(iframe, 8);"
    },
    {
        "line": 399,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 407,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 408,
        "fullcodeline": "inbound_frame_set_mark(iframe, 8);"
    },
    {
        "line": 416,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 552,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 557,
        "fullcodeline": "if (iframe->padlen == 0 &&"
    },
    {
        "line": 588,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 594,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 598,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 608,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_HEADER_BLOCK) {"
    },
    {
        "line": 618,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 622,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 631,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 635,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 643,
        "fullcodeline": "if (iframe->padlen == 0 &&"
    },
    {
        "line": 673,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 679,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 683,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 694,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_HEADER_BLOCK) {"
    },
    {
        "line": 704,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 708,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 719,
        "fullcodeline": "debuglen = iframe->frame.hd.length - 8;"
    },
    {
        "line": 731,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 733,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_GOAWAY_DEBUG;"
    },
    {
        "line": 739,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 743,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 753,
        "fullcodeline": "origin_len = nghttp2_get_uint16(iframe->sbuf.pos);"
    },
    {
        "line": 755,
        "fullcodeline": "DEBUGF(\"recv: origin_len=%zu\\n\", origin_len);"
    },
    {
        "line": 775,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 777,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_ALTSVC_PAYLOAD;"
    },
    {
        "line": 807,
        "fullcodeline": "iframe, iframe->payloadleft - readlen, readlen);"
    },
    {
        "line": 811,
        "fullcodeline": "data_readlen = 0;"
    },
    {
        "line": 817,
        "fullcodeline": "iframe->payloadleft - (size_t)data_readlen == trail_padlen;"
    },
    {
        "line": 819,
        "fullcodeline": "if (data_readlen > 0 || (data_readlen == 0 && final)) {"
    },
    {
        "line": 820,
        "fullcodeline": "size_t hd_proclen = 0;"
    },
    {
        "line": 822,
        "fullcodeline": "DEBUGF(\"recv: block final=%d\\n\", final);"
    },
    {
        "line": 824,
        "fullcodeline": "rv ="
    },
    {
        "line": 866,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 867,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 888,
        "fullcodeline": "if ((iframe->frame.hd.flags & NGHTTP2_FLAG_END_HEADERS) == 0) {"
    },
    {
        "line": 890,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_FRAME_HDLEN);"
    },
    {
        "line": 892,
        "fullcodeline": "iframe->padlen = 0;"
    },
    {
        "line": 978,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1000,
        "fullcodeline": "assert(nghttp2_buf_avail(&iframe->lbuf) > 0);"
    },
    {
        "line": 1012,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1032,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 1050,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1054,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1070,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1074,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 1089,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 1099,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1111,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1120,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1131,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1134,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1165,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1169,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1177,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1184,
        "fullcodeline": "if (data_readlen == -1) {"
    },
    {
        "line": 1191,
        "fullcodeline": "if (padlen > 0) {"
    },
    {
        "line": 1207,
        "fullcodeline": "if (data_readlen > 0) {"
    },
    {
        "line": 1276,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1280,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1284,
        "fullcodeline": "if (session->opt_flags & NGHTTP2_OPTMASK_NO_AUTO_WINDOW_UPDATE) {"
    },
    {
        "line": 1321,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1361,
        "fullcodeline": "assert(nghttp2_buf_avail(&iframe->lbuf) > 0);"
    },
    {
        "line": 1390,
        "fullcodeline": "assert(nghttp2_buf_avail(&iframe->lbuf) > 0);"
    },
    {
        "line": 1402,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 95,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 112,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 116,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 123,
        "fullcodeline": "iframe->frame.hd.flags &="
    },
    {
        "line": 127,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 129,
        "fullcodeline": "rv = session_on_data_received_fail_fast(session);"
    },
    {
        "line": 144,
        "fullcodeline": "rv = inbound_frame_handle_pad(iframe, &iframe->frame.hd);"
    },
    {
        "line": 161,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_DATA;"
    },
    {
        "line": 169,
        "fullcodeline": "(NGHTTP2_FLAG_END_STREAM | NGHTTP2_FLAG_END_HEADERS |"
    },
    {
        "line": 173,
        "fullcodeline": "if (rv < 0) {"
    },
    {
        "line": 190,
        "fullcodeline": "if (pri_fieldlen > 0) {"
    },
    {
        "line": 209,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 216,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 222,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 226,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 236,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_HEADER_BLOCK) {"
    },
    {
        "line": 249,
        "fullcodeline": "if (iframe->payloadleft != NGHTTP2_PRIORITY_SPECLEN) {"
    },
    {
        "line": 277,
        "fullcodeline": "if (iframe->payloadleft != 4) {"
    },
    {
        "line": 352,
        "fullcodeline": "(NGHTTP2_FLAG_END_HEADERS | NGHTTP2_FLAG_PADDED);"
    },
    {
        "line": 355,
        "fullcodeline": "if (rv < 0) {"
    },
    {
        "line": 370,
        "fullcodeline": "if (iframe->payloadleft < 4) {"
    },
    {
        "line": 386,
        "fullcodeline": "if (iframe->payloadleft != 8) {"
    },
    {
        "line": 401,
        "fullcodeline": "if (iframe->payloadleft < 8) {"
    },
    {
        "line": 418,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 422,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 426,
        "fullcodeline": "if (check_ext_type_set(session->user_recv_ext_types,"
    },
    {
        "line": 558,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_PADDED)) {"
    },
    {
        "line": 559,
        "fullcodeline": "pri_fieldlen = nghttp2_frame_priority_len(iframe->frame.hd.flags);"
    },
    {
        "line": 560,
        "fullcodeline": "padlen = inbound_frame_compute_pad(iframe);"
    },
    {
        "line": 599,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 604,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 609,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 644,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_PADDED)) {"
    },
    {
        "line": 645,
        "fullcodeline": "padlen = inbound_frame_compute_pad(iframe);"
    },
    {
        "line": 665,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 667,
        "fullcodeline": "inbound_frame_set_mark(iframe, 4);"
    },
    {
        "line": 684,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 690,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 695,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 721,
        "fullcodeline": "if (debuglen > 0) {"
    },
    {
        "line": 757,
        "fullcodeline": "if (origin_len > iframe->payloadleft) {"
    },
    {
        "line": 763,
        "fullcodeline": "if (iframe->frame.hd.length > 2) {"
    },
    {
        "line": 825,
        "fullcodeline": "inflate_header_block(session, &iframe->frame, &hd_proclen,"
    },
    {
        "line": 829,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 833,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 837,
        "fullcodeline": "if (rv == NGHTTP2_ERR_PAUSE) {"
    },
    {
        "line": 844,
        "fullcodeline": "if (rv == NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE) {"
    },
    {
        "line": 869,
        "fullcodeline": "if (rv == NGHTTP2_ERR_HEADER_COMP) {"
    },
    {
        "line": 880,
        "fullcodeline": "in += readlen;"
    },
    {
        "line": 881,
        "fullcodeline": "iframe->payloadleft -= readlen;"
    },
    {
        "line": 894,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_READ_HEADER_BLOCK) {"
    },
    {
        "line": 906,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 1118,
        "fullcodeline": "iframe->payloadleft ||"
    },
    {
        "line": 1175,
        "fullcodeline": "iframe->payloadleft ||"
    },
    {
        "line": 1186,
        "fullcodeline": "data_readlen = 0;"
    },
    {
        "line": 1193,
        "fullcodeline": "rv = nghttp2_session_consume(session, iframe->frame.hd.stream_id,"
    },
    {
        "line": 1287,
        "fullcodeline": "rv = session_update_connection_consumed_size(session, readlen);"
    },
    {
        "line": 1320,
        "fullcodeline": "session, in - readlen, readlen);"
    },
    {
        "line": 1326,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1328,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 124,
        "fullcodeline": "(NGHTTP2_FLAG_END_STREAM | NGHTTP2_FLAG_PADDED);"
    },
    {
        "line": 130,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (rv == NGHTTP2_ERR_IGN_PAYLOAD) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 145,
        "fullcodeline": "if (rv < 0) {"
    },
    {
        "line": 174,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 184,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 197,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 199,
        "fullcodeline": "inbound_frame_set_mark(iframe, pri_fieldlen);"
    },
    {
        "line": 227,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 232,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 237,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 250,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 252,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 278,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 279,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 293,
        "fullcodeline": "if ((iframe->frame.hd.length % NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH) ||"
    },
    {
        "line": 294,
        "fullcodeline": "((iframe->frame.hd.flags & NGHTTP2_FLAG_ACK) &&"
    },
    {
        "line": 296,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 297,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 302,
        "fullcodeline": "if (session->obq_flood_counter_ >= session->max_outbound_ack &&"
    },
    {
        "line": 303,
        "fullcodeline": "!(iframe->frame.hd.flags & NGHTTP2_FLAG_ACK)) {"
    },
    {
        "line": 314,
        "fullcodeline": "iframe->max_niv ="
    },
    {
        "line": 327,
        "fullcodeline": "iframe->iv = nghttp2_mem_malloc(mem, sizeof(nghttp2_settings_entry) *"
    },
    {
        "line": 335,
        "fullcodeline": "min_header_table_size_entry->settings_id ="
    },
    {
        "line": 337,
        "fullcodeline": "min_header_table_size_entry->value = UINT32_MAX;"
    },
    {
        "line": 339,
        "fullcodeline": "inbound_frame_set_mark(iframe, NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH);"
    },
    {
        "line": 356,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 366,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 371,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 372,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 387,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 388,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 402,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 403,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 438,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 440,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_EXTENSION_PAYLOAD;"
    },
    {
        "line": 531,
        "fullcodeline": "rv = session_call_on_begin_frame(session, &iframe->frame.hd);"
    },
    {
        "line": 572,
        "fullcodeline": "if (pri_fieldlen > 0) {"
    },
    {
        "line": 595,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 601,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 623,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 636,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 659,
        "fullcodeline": "if (iframe->payloadleft < 4) {"
    },
    {
        "line": 680,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 687,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 709,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 722,
        "fullcodeline": "iframe->raw_lbuf = nghttp2_mem_malloc(mem, debuglen);"
    },
    {
        "line": 728,
        "fullcodeline": "nghttp2_buf_wrap_init(&iframe->lbuf, iframe->raw_lbuf, debuglen);"
    },
    {
        "line": 744,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 758,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 759,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 764,
        "fullcodeline": "iframe->raw_lbuf ="
    },
    {
        "line": 771,
        "fullcodeline": "nghttp2_buf_wrap_init(&iframe->lbuf, iframe->raw_lbuf,"
    },
    {
        "line": 827,
        "fullcodeline": "iframe->state == NGHTTP2_IB_READ_HEADER_BLOCK);"
    },
    {
        "line": 838,
        "fullcodeline": "in += hd_proclen;"
    },
    {
        "line": 848,
        "fullcodeline": "in += hd_proclen;"
    },
    {
        "line": 849,
        "fullcodeline": "iframe->payloadleft -= hd_proclen;"
    },
    {
        "line": 852,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 861,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 862,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_HEADER_BLOCK;"
    },
    {
        "line": 895,
        "fullcodeline": "iframe->state = NGHTTP2_IB_EXPECT_CONTINUATION;"
    },
    {
        "line": 900,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_READ_HEADER_BLOCK) {"
    },
    {
        "line": 1119,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_END_STREAM) == 0);"
    },
    {
        "line": 1170,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1176,
        "fullcodeline": "(iframe->frame.hd.flags & NGHTTP2_FLAG_END_STREAM) == 0);"
    },
    {
        "line": 1196,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1200,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 1208,
        "fullcodeline": "if (session_enforce_http_messaging(session)) {"
    },
    {
        "line": 1281,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1289,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1293,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_ALL) {"
    },
    {
        "line": 134,
        "fullcodeline": "DEBUGF(\"recv: DATA not allowed stream_id=%d\\n\","
    },
    {
        "line": 136,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_DATA;"
    },
    {
        "line": 146,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 157,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_PAD_DATA;"
    },
    {
        "line": 177,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 180,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 191,
        "fullcodeline": "if (iframe->payloadleft < pri_fieldlen) {"
    },
    {
        "line": 223,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 229,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 295,
        "fullcodeline": "iframe->payloadleft > 0)) {"
    },
    {
        "line": 317,
        "fullcodeline": "if (iframe->max_niv - 1 > session->max_settings) {"
    },
    {
        "line": 330,
        "fullcodeline": "if (!iframe->iv) {"
    },
    {
        "line": 359,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 362,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 533,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 561,
        "fullcodeline": "if (padlen < 0 ||"
    },
    {
        "line": 562,
        "fullcodeline": "(size_t)padlen + pri_fieldlen > 1 + iframe->payloadleft) {"
    },
    {
        "line": 563,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 578,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 579,
        "fullcodeline": "inbound_frame_set_mark(iframe, pri_fieldlen);"
    },
    {
        "line": 646,
        "fullcodeline": "if (padlen < 0 || (size_t)padlen + 4 /* promised stream id */"
    },
    {
        "line": 648,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 660,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 661,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 724,
        "fullcodeline": "if (iframe->raw_lbuf == NULL) {"
    },
    {
        "line": 765,
        "fullcodeline": "nghttp2_mem_malloc(mem, iframe->frame.hd.length - 2);"
    },
    {
        "line": 767,
        "fullcodeline": "if (iframe->raw_lbuf == NULL) {"
    },
    {
        "line": 834,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 841,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 858,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 871,
        "fullcodeline": "if (iframe->payloadleft == 0) {"
    },
    {
        "line": 897,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_CONTINUATION;"
    },
    {
        "line": 901,
        "fullcodeline": "rv = session_after_header_block_received(session);"
    },
    {
        "line": 1235,
        "fullcodeline": "rv = session->callbacks.on_data_chunk_recv_callback("
    },
    {
        "line": 131,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 150,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 153,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 192,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 193,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 315,
        "fullcodeline": "iframe->frame.hd.length / NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH + 1;"
    },
    {
        "line": 318,
        "fullcodeline": "rv = nghttp2_session_terminate_session_with_reason("
    },
    {
        "line": 431,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 433,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 565,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 568,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 573,
        "fullcodeline": "if (iframe->payloadleft < pri_fieldlen) {"
    },
    {
        "line": 583,
        "fullcodeline": "inbound_frame_set_mark(iframe, 0);"
    },
    {
        "line": 651,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 654,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 872,
        "fullcodeline": "session_inbound_frame_reset(session);"
    },
    {
        "line": 902,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1201,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 1238,
        "fullcodeline": "if (rv == NGHTTP2_ERR_PAUSE) {"
    },
    {
        "line": 1294,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 321,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 324,
        "fullcodeline": "return (ssize_t)inlen;"
    },
    {
        "line": 334,
        "fullcodeline": "min_header_table_size_entry = &iframe->iv[iframe->max_niv - 1];"
    },
    {
        "line": 455,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 470,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 472,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_NBYTE;"
    },
    {
        "line": 473,
        "fullcodeline": "inbound_frame_set_mark(iframe, 2);"
    },
    {
        "line": 494,
        "fullcodeline": "iframe->frame.hd.flags = NGHTTP2_FLAG_NONE;"
    },
    {
        "line": 509,
        "fullcodeline": "iframe->state = NGHTTP2_IB_READ_ORIGIN_PAYLOAD;"
    },
    {
        "line": 513,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 515,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 574,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 575,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 854,
        "fullcodeline": "iframe->frame.hd.type == NGHTTP2_PUSH_PROMISE"
    },
    {
        "line": 874,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 875,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 1209,
        "fullcodeline": "if (nghttp2_http_on_data_chunk(stream, (size_t)data_readlen) != 0) {"
    },
    {
        "line": 1224,
        "fullcodeline": "rv = nghttp2_session_add_rst_stream("
    },
    {
        "line": 1229,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1230,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_DATA;"
    },
    {
        "line": 1237,
        "fullcodeline": "in - readlen, (size_t)data_readlen, session->user_data);"
    },
    {
        "line": 464,
        "fullcodeline": "if (iframe->payloadleft < 2) {"
    },
    {
        "line": 1210,
        "fullcodeline": "if (session->opt_flags & NGHTTP2_OPTMASK_NO_AUTO_WINDOW_UPDATE) {"
    },
    {
        "line": 1226,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1239,
        "fullcodeline": "return in - first;"
    },
    {
        "line": 446,
        "fullcodeline": "if ((session->builtin_recv_ext_types & NGHTTP2_TYPEMASK_ALTSVC) =="
    },
    {
        "line": 448,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 449,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 459,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 460,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 465,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 466,
        "fullcodeline": "iframe->state = NGHTTP2_IB_FRAME_SIZE_ERROR;"
    },
    {
        "line": 477,
        "fullcodeline": "if (!(session->builtin_recv_ext_types & NGHTTP2_TYPEMASK_ORIGIN)) {"
    },
    {
        "line": 478,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 479,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 487,
        "fullcodeline": "if (session->server || iframe->frame.hd.stream_id ||"
    },
    {
        "line": 488,
        "fullcodeline": "(iframe->frame.hd.flags & 0xf0)) {"
    },
    {
        "line": 489,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 490,
        "fullcodeline": "iframe->state = NGHTTP2_IB_IGN_PAYLOAD;"
    },
    {
        "line": 497,
        "fullcodeline": "iframe->raw_lbuf = nghttp2_mem_malloc(mem, iframe->payloadleft);"
    },
    {
        "line": 503,
        "fullcodeline": "nghttp2_buf_wrap_init(&iframe->lbuf, iframe->raw_lbuf,"
    },
    {
        "line": 1212,
        "fullcodeline": "rv = session_update_connection_consumed_size("
    },
    {
        "line": 499,
        "fullcodeline": "if (iframe->raw_lbuf == NULL) {"
    },
    {
        "line": 506,
        "fullcodeline": "busy = 1;"
    },
    {
        "line": 1215,
        "fullcodeline": "if (nghttp2_is_fatal(rv)) {"
    },
    {
        "line": 1219,
        "fullcodeline": "if (iframe->state == NGHTTP2_IB_IGN_DATA) {"
    },
    {
        "line": 1220,
        "fullcodeline": "return (ssize_t)inlen;"
    }
]