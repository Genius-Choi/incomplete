[
    {
        "line": 7,
        "fullcodeline": "struct avi_reader_port *fport[PJMEDIA_AVI_MAX_NUM_STREAMS];"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned i, nstr = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "pj_status_t status = PJ_SUCCESS;"
    },
    {
        "line": 13,
        "fullcodeline": "PJ_ASSERT_RETURN(pool && filename && p_streams, PJ_EINVAL);"
    },
    {
        "line": 21,
        "fullcodeline": "fport[0] = create_avi_port(pool);"
    },
    {
        "line": 27,
        "fullcodeline": "fport[0]->fsize = pj_file_size(filename);"
    },
    {
        "line": 37,
        "fullcodeline": "status = pj_file_open(pool, filename, PJ_O_RDONLY, &fport[0]->fd);"
    },
    {
        "line": 42,
        "fullcodeline": "status = file_read(fport[0]->fd, &avi_hdr,"
    },
    {
        "line": 58,
        "fullcodeline": "PJ_LOG(5, (THIS_FILE, \"The AVI file has %d streams.\","
    },
    {
        "line": 126,
        "fullcodeline": "status = pj_file_setpos(fport[0]->fd, avi_hdr.avih_hdr.list_sz +"
    },
    {
        "line": 165,
        "fullcodeline": "status = pj_file_getpos(fport[0]->fd, &pos);"
    },
    {
        "line": 332,
        "fullcodeline": "*p_streams = pj_pool_alloc(pool, sizeof(pjmedia_avi_streams));"
    },
    {
        "line": 333,
        "fullcodeline": "(*p_streams)->num_streams = nstr;"
    },
    {
        "line": 334,
        "fullcodeline": "(*p_streams)->streams = pj_pool_calloc(pool, (*p_streams)->num_streams,"
    },
    {
        "line": 339,
        "fullcodeline": "PJ_LOG(4,(THIS_FILE,"
    },
    {
        "line": 16,
        "fullcodeline": "if (!pj_file_exists(filename)) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (!fport[0]) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (fport[0]->fsize <= sizeof(riff_hdr_t) + sizeof(avih_hdr_t) +"
    },
    {
        "line": 38,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 44,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 48,
        "fullcodeline": "if (!COMPARE_TAG(avi_hdr.riff_hdr.riff, PJMEDIA_AVI_RIFF_TAG) ||"
    },
    {
        "line": 62,
        "fullcodeline": "if (avi_hdr.avih_hdr.num_streams > PJMEDIA_AVI_MAX_NUM_STREAMS) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (avi_hdr.avih_hdr.flags & AVIF_MUSTUSEINDEX ||"
    },
    {
        "line": 81,
        "fullcodeline": "for (i = 0; i < avi_hdr.avih_hdr.num_streams; i++) {"
    },
    {
        "line": 128,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 166,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 169,
        "fullcodeline": "for (i = 0, nstr = 0; i < avi_hdr.avih_hdr.num_streams; i++) {"
    },
    {
        "line": 257,
        "fullcodeline": "if (nstr == 0) {"
    },
    {
        "line": 262,
        "fullcodeline": "for (i = 0; i < nstr; i++) {"
    },
    {
        "line": 336,
        "fullcodeline": "for (i = 0; i < nstr; i++)"
    },
    {
        "line": 350,
        "fullcodeline": "for (i = 1; i < nstr; i++)"
    },
    {
        "line": 352,
        "fullcodeline": "if (status == AVI_EOF)"
    },
    {
        "line": 52,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.avih_hdr.avih, PJMEDIA_AVI_AVIH_TAG))"
    },
    {
        "line": 54,
        "fullcodeline": "status = PJMEDIA_EINVALIMEDIATYPE;"
    },
    {
        "line": 63,
        "fullcodeline": "status = PJMEDIA_EAVIUNSUPP;"
    },
    {
        "line": 73,
        "fullcodeline": "avi_hdr.avih_hdr.pad > 1)"
    },
    {
        "line": 75,
        "fullcodeline": "PJ_LOG(3, (THIS_FILE, \"Warning!!! Possibly unsupported AVI format: \""
    },
    {
        "line": 82,
        "fullcodeline": "pj_size_t elem = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "status = file_read(fport[0]->fd, &avi_hdr.strl_hdr[i],"
    },
    {
        "line": 91,
        "fullcodeline": "elem = COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 99,
        "fullcodeline": "status = file_read2(fport[0]->fd, &avi_hdr.strf_hdr[i],"
    },
    {
        "line": 117,
        "fullcodeline": "size_to_read = avi_hdr.strl_hdr[i].list_sz - (sizeof(strl_hdr_t) -"
    },
    {
        "line": 119,
        "fullcodeline": "status = pj_file_setpos(fport[0]->fd, size_to_read, PJ_SEEK_CUR);"
    },
    {
        "line": 135,
        "fullcodeline": "int read = 0;"
    },
    {
        "line": 138,
        "fullcodeline": "status = file_read(fport[0]->fd, &ch, sizeof(pjmedia_avi_subchunk));"
    },
    {
        "line": 251,
        "fullcodeline": "fport[nstr]->stream_id = i;"
    },
    {
        "line": 252,
        "fullcodeline": "fport[nstr]->fmt_id = fmt_id;"
    },
    {
        "line": 254,
        "fullcodeline": "nstr++;"
    },
    {
        "line": 258,
        "fullcodeline": "status = PJMEDIA_EAVIUNSUPP;"
    },
    {
        "line": 266,
        "fullcodeline": "fport[i]->options = options;"
    },
    {
        "line": 267,
        "fullcodeline": "fport[i]->fsize = fport[0]->fsize;"
    },
    {
        "line": 269,
        "fullcodeline": "fport[i]->start_data = pos;"
    },
    {
        "line": 328,
        "fullcodeline": "pj_strdup2(pool, &fport[i]->base.info.name, filename);"
    },
    {
        "line": 51,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.avih_hdr.hdrl_tag, PJMEDIA_AVI_HDRL_TAG) ||"
    },
    {
        "line": 88,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 101,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 105,
        "fullcodeline": "if (elem == sizeof(strf_video_hdr_t))"
    },
    {
        "line": 120,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 139,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 143,
        "fullcodeline": "if (COMPARE_TAG(ch.id, PJMEDIA_AVI_LIST_TAG))"
    },
    {
        "line": 151,
        "fullcodeline": "if (ch.len < read) {"
    },
    {
        "line": 173,
        "fullcodeline": "if ((!COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 182,
        "fullcodeline": "if (COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 230,
        "fullcodeline": "if (nstr > 0) {"
    },
    {
        "line": 271,
        "fullcodeline": "if (COMPARE_TAG(strl_hdr->data_type, PJMEDIA_AVI_VIDS_TAG)) {"
    },
    {
        "line": 50,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.avih_hdr.list_tag, PJMEDIA_AVI_LIST_TAG) ||"
    },
    {
        "line": 94,
        "fullcodeline": "COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 106,
        "fullcodeline": "data_to_host2(&avi_hdr.strf_hdr[i],"
    },
    {
        "line": 145,
        "fullcodeline": "read = 4;"
    },
    {
        "line": 146,
        "fullcodeline": "status = file_read(fport[0]->fd, &ch, read);"
    },
    {
        "line": 152,
        "fullcodeline": "status = PJ_EINVAL;"
    },
    {
        "line": 177,
        "fullcodeline": "avi_hdr.strl_hdr[i].flags & AVISF_DISABLED)"
    },
    {
        "line": 232,
        "fullcodeline": "fport[nstr] = create_avi_port(pool);"
    },
    {
        "line": 239,
        "fullcodeline": "status = pj_file_open(pool, filename, PJ_O_RDONLY,"
    },
    {
        "line": 245,
        "fullcodeline": "status = pj_file_setpos(fport[nstr]->fd, pos, PJ_SEEK_SET);"
    },
    {
        "line": 276,
        "fullcodeline": "vfi = pjmedia_get_video_format_info("
    },
    {
        "line": 280,
        "fullcodeline": "fport[i]->bits_per_sample = (vfi ? vfi->bpp : 0);"
    },
    {
        "line": 282,
        "fullcodeline": "pjmedia_format_init_video(&fport[i]->base.info.fmt,"
    },
    {
        "line": 49,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.riff_hdr.avi, PJMEDIA_AVI_AVI_TAG) ||"
    },
    {
        "line": 147,
        "fullcodeline": "if (COMPARE_TAG(ch.id, PJMEDIA_AVI_MOVI_TAG))"
    },
    {
        "line": 175,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 187,
        "fullcodeline": "if (avi_hdr.strl_hdr[i].flags & AVISF_VIDEO_PALCHANGES) {"
    },
    {
        "line": 193,
        "fullcodeline": "for (j = sizeof(avi_fmts)/sizeof(avi_fmts[0])-1; j >= 0; j--) {"
    },
    {
        "line": 202,
        "fullcodeline": "if (j < 0) {"
    },
    {
        "line": 233,
        "fullcodeline": "if (!fport[nstr]) {"
    },
    {
        "line": 241,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 246,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 308,
        "fullcodeline": "fport[i]->bits_per_sample = strf_hdr->bits_per_sample;"
    },
    {
        "line": 310,
        "fullcodeline": "pjmedia_format_init_audio(&fport[i]->base.info.fmt,"
    },
    {
        "line": 110,
        "fullcodeline": "else if (elem == sizeof(strf_audio_hdr_t))"
    },
    {
        "line": 188,
        "fullcodeline": "PJ_LOG(4, (THIS_FILE, \"Unsupported video stream\"));"
    },
    {
        "line": 203,
        "fullcodeline": "PJ_LOG(4, (THIS_FILE, \"Unsupported video stream\"));"
    },
    {
        "line": 210,
        "fullcodeline": "if (hdr->fmt_tag == PJMEDIA_WAVE_FMT_TAG_PCM &&"
    },
    {
        "line": 234,
        "fullcodeline": "status = PJ_ENOMEM;"
    },
    {
        "line": 316,
        "fullcodeline": "strf_hdr->bytes_per_sec * 8,"
    },
    {
        "line": 317,
        "fullcodeline": "strf_hdr->bytes_per_sec * 8);"
    },
    {
        "line": 320,
        "fullcodeline": "if (fport[i]->fmt_id == PJMEDIA_FORMAT_PCMA ||"
    },
    {
        "line": 111,
        "fullcodeline": "data_to_host2(&avi_hdr.strf_hdr[i],"
    },
    {
        "line": 195,
        "fullcodeline": "if (fmt_id == avi_fmts[j].fmt_id) {"
    },
    {
        "line": 211,
        "fullcodeline": "hdr->bits_per_sample == 16)"
    },
    {
        "line": 213,
        "fullcodeline": "fmt_id = PJMEDIA_FORMAT_PCM;"
    },
    {
        "line": 321,
        "fullcodeline": "fport[i]->fmt_id == PJMEDIA_FORMAT_PCMU)"
    },
    {
        "line": 323,
        "fullcodeline": "fport[i]->base.info.fmt.id = PJMEDIA_FORMAT_PCM;"
    },
    {
        "line": 324,
        "fullcodeline": "fport[i]->base.info.fmt.det.aud.bits_per_sample = 16;"
    },
    {
        "line": 215,
        "fullcodeline": "else if (hdr->fmt_tag == PJMEDIA_WAVE_FMT_TAG_ALAW)"
    },
    {
        "line": 217,
        "fullcodeline": "fmt_id = PJMEDIA_FORMAT_PCMA;"
    },
    {
        "line": 219,
        "fullcodeline": "else if (hdr->fmt_tag == PJMEDIA_WAVE_FMT_TAG_ULAW)"
    },
    {
        "line": 221,
        "fullcodeline": "fmt_id = PJMEDIA_FORMAT_PCMU;"
    },
    {
        "line": 225,
        "fullcodeline": "PJ_LOG(4, (THIS_FILE, \"Unsupported audio stream\"));"
    }
]