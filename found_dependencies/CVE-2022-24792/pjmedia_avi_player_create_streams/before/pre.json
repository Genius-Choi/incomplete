[
    {
        "line": 7,
        "fullcodeline": "struct avi_reader_port *fport[PJMEDIA_AVI_MAX_NUM_STREAMS];"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned i, nstr = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "pj_status_t status = PJ_SUCCESS;"
    },
    {
        "line": 13,
        "fullcodeline": "PJ_ASSERT_RETURN(pool && filename && p_streams, PJ_EINVAL);"
    },
    {
        "line": 21,
        "fullcodeline": "fport[0] = create_avi_port(pool);"
    },
    {
        "line": 27,
        "fullcodeline": "fport[0]->fsize = pj_file_size(filename);"
    },
    {
        "line": 37,
        "fullcodeline": "status = pj_file_open(pool, filename, PJ_O_RDONLY, &fport[0]->fd);"
    },
    {
        "line": 42,
        "fullcodeline": "status = file_read(fport[0]->fd, &avi_hdr,"
    },
    {
        "line": 126,
        "fullcodeline": "status = pj_file_setpos(fport[0]->fd, avi_hdr.avih_hdr.list_sz +"
    },
    {
        "line": 156,
        "fullcodeline": "status = pj_file_getpos(fport[0]->fd, &pos);"
    },
    {
        "line": 324,
        "fullcodeline": "(*p_streams)->num_streams = nstr;"
    },
    {
        "line": 16,
        "fullcodeline": "if (!pj_file_exists(filename)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (fport[0]->fsize <= sizeof(riff_hdr_t) + sizeof(avih_hdr_t) +"
    },
    {
        "line": 38,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 44,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 58,
        "fullcodeline": "PJ_LOG(5, (THIS_FILE, \"The AVI file has %d streams.\","
    },
    {
        "line": 62,
        "fullcodeline": "if (avi_hdr.avih_hdr.num_streams > PJMEDIA_AVI_MAX_NUM_STREAMS) {"
    },
    {
        "line": 81,
        "fullcodeline": "for (i = 0; i < avi_hdr.avih_hdr.num_streams; i++) {"
    },
    {
        "line": 128,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 157,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 160,
        "fullcodeline": "for (i = 0, nstr = 0; i < avi_hdr.avih_hdr.num_streams; i++) {"
    },
    {
        "line": 248,
        "fullcodeline": "if (nstr == 0) {"
    },
    {
        "line": 253,
        "fullcodeline": "for (i = 0; i < nstr; i++) {"
    },
    {
        "line": 323,
        "fullcodeline": "*p_streams = pj_pool_alloc(pool, sizeof(pjmedia_avi_streams));"
    },
    {
        "line": 325,
        "fullcodeline": "(*p_streams)->streams = pj_pool_calloc(pool, (*p_streams)->num_streams,"
    },
    {
        "line": 327,
        "fullcodeline": "for (i = 0; i < nstr; i++)"
    },
    {
        "line": 330,
        "fullcodeline": "PJ_LOG(4,(THIS_FILE,"
    },
    {
        "line": 341,
        "fullcodeline": "for (i = 1; i < nstr; i++)"
    },
    {
        "line": 343,
        "fullcodeline": "if (status == AVI_EOF)"
    },
    {
        "line": 48,
        "fullcodeline": "if (!COMPARE_TAG(avi_hdr.riff_hdr.riff, PJMEDIA_AVI_RIFF_TAG) ||"
    },
    {
        "line": 52,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.avih_hdr.avih, PJMEDIA_AVI_AVIH_TAG))"
    },
    {
        "line": 54,
        "fullcodeline": "status = PJMEDIA_EINVALIMEDIATYPE;"
    },
    {
        "line": 63,
        "fullcodeline": "status = PJMEDIA_EAVIUNSUPP;"
    },
    {
        "line": 72,
        "fullcodeline": "if (avi_hdr.avih_hdr.flags & AVIF_MUSTUSEINDEX ||"
    },
    {
        "line": 73,
        "fullcodeline": "avi_hdr.avih_hdr.pad > 1)"
    },
    {
        "line": 86,
        "fullcodeline": "status = file_read(fport[0]->fd, &avi_hdr.strl_hdr[i],"
    },
    {
        "line": 91,
        "fullcodeline": "elem = COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 99,
        "fullcodeline": "status = file_read2(fport[0]->fd, &avi_hdr.strf_hdr[i],"
    },
    {
        "line": 117,
        "fullcodeline": "size_to_read = avi_hdr.strl_hdr[i].list_sz - (sizeof(strl_hdr_t) -"
    },
    {
        "line": 119,
        "fullcodeline": "status = pj_file_setpos(fport[0]->fd, size_to_read, PJ_SEEK_CUR);"
    },
    {
        "line": 135,
        "fullcodeline": "int read = 0;"
    },
    {
        "line": 137,
        "fullcodeline": "status = file_read(fport[0]->fd, &ch, sizeof(pjmedia_avi_subchunk));"
    },
    {
        "line": 150,
        "fullcodeline": "status = pj_file_setpos(fport[0]->fd, ch.len-read, PJ_SEEK_CUR);"
    },
    {
        "line": 242,
        "fullcodeline": "fport[nstr]->stream_id = i;"
    },
    {
        "line": 243,
        "fullcodeline": "fport[nstr]->fmt_id = fmt_id;"
    },
    {
        "line": 245,
        "fullcodeline": "nstr++;"
    },
    {
        "line": 249,
        "fullcodeline": "status = PJMEDIA_EAVIUNSUPP;"
    },
    {
        "line": 254,
        "fullcodeline": "strl_hdr_t *strl_hdr = &avi_hdr.strl_hdr[fport[i]->stream_id];"
    },
    {
        "line": 319,
        "fullcodeline": "pj_strdup2(pool, &fport[i]->base.info.name, filename);"
    },
    {
        "line": 326,
        "fullcodeline": "sizeof(pjmedia_port *));"
    },
    {
        "line": 51,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.avih_hdr.hdrl_tag, PJMEDIA_AVI_HDRL_TAG) ||"
    },
    {
        "line": 75,
        "fullcodeline": "PJ_LOG(3, (THIS_FILE, \"Warning!!! Possibly unsupported AVI format: \""
    },
    {
        "line": 88,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 101,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 105,
        "fullcodeline": "if (elem == sizeof(strf_video_hdr_t))"
    },
    {
        "line": 120,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 138,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 142,
        "fullcodeline": "if (COMPARE_TAG(ch.id, PJMEDIA_AVI_LIST_TAG))"
    },
    {
        "line": 151,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 173,
        "fullcodeline": "if (COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 221,
        "fullcodeline": "if (nstr > 0) {"
    },
    {
        "line": 50,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.avih_hdr.list_tag, PJMEDIA_AVI_LIST_TAG) ||"
    },
    {
        "line": 106,
        "fullcodeline": "data_to_host2(&avi_hdr.strf_hdr[i],"
    },
    {
        "line": 144,
        "fullcodeline": "read = 4;"
    },
    {
        "line": 164,
        "fullcodeline": "if ((!COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 168,
        "fullcodeline": "avi_hdr.strl_hdr[i].flags & AVISF_DISABLED)"
    },
    {
        "line": 183,
        "fullcodeline": "fmt_id = avi_hdr.strl_hdr[i].codec;"
    },
    {
        "line": 223,
        "fullcodeline": "fport[nstr] = create_avi_port(pool);"
    },
    {
        "line": 230,
        "fullcodeline": "status = pj_file_open(pool, filename, PJ_O_RDONLY,"
    },
    {
        "line": 236,
        "fullcodeline": "status = pj_file_setpos(fport[nstr]->fd, pos, PJ_SEEK_SET);"
    },
    {
        "line": 263,
        "fullcodeline": "strf_video_hdr_t *strf_hdr ="
    },
    {
        "line": 267,
        "fullcodeline": "vfi = pjmedia_get_video_format_info("
    },
    {
        "line": 273,
        "fullcodeline": "pjmedia_format_init_video(&fport[i]->base.info.fmt,"
    },
    {
        "line": 49,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.riff_hdr.avi, PJMEDIA_AVI_AVI_TAG) ||"
    },
    {
        "line": 94,
        "fullcodeline": "COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 145,
        "fullcodeline": "status = file_read(fport[0]->fd, &ch, read);"
    },
    {
        "line": 146,
        "fullcodeline": "if (COMPARE_TAG(ch.id, PJMEDIA_AVI_MOVI_TAG))"
    },
    {
        "line": 166,
        "fullcodeline": "!COMPARE_TAG(avi_hdr.strl_hdr[i].data_type,"
    },
    {
        "line": 178,
        "fullcodeline": "if (avi_hdr.strl_hdr[i].flags & AVISF_VIDEO_PALCHANGES) {"
    },
    {
        "line": 184,
        "fullcodeline": "for (j = sizeof(avi_fmts)/sizeof(avi_fmts[0])-1; j >= 0; j--) {"
    },
    {
        "line": 199,
        "fullcodeline": "strf_audio_hdr_t *hdr = (strf_audio_hdr_t*)"
    },
    {
        "line": 232,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 237,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 296,
        "fullcodeline": "strf_audio_hdr_t *strf_hdr ="
    },
    {
        "line": 301,
        "fullcodeline": "pjmedia_format_init_audio(&fport[i]->base.info.fmt,"
    },
    {
        "line": 110,
        "fullcodeline": "else if (elem == sizeof(strf_audio_hdr_t))"
    },
    {
        "line": 225,
        "fullcodeline": "status = PJ_ENOMEM;"
    },
    {
        "line": 307,
        "fullcodeline": "strf_hdr->bytes_per_sec * 8,"
    },
    {
        "line": 308,
        "fullcodeline": "strf_hdr->bytes_per_sec * 8);"
    },
    {
        "line": 111,
        "fullcodeline": "data_to_host2(&avi_hdr.strf_hdr[i],"
    },
    {
        "line": 179,
        "fullcodeline": "PJ_LOG(4, (THIS_FILE, \"Unsupported video stream\"));"
    },
    {
        "line": 186,
        "fullcodeline": "if (fmt_id == avi_fmts[j].fmt_id) {"
    },
    {
        "line": 194,
        "fullcodeline": "PJ_LOG(4, (THIS_FILE, \"Unsupported video stream\"));"
    },
    {
        "line": 201,
        "fullcodeline": "if (hdr->fmt_tag == PJMEDIA_WAVE_FMT_TAG_PCM &&"
    },
    {
        "line": 202,
        "fullcodeline": "hdr->bits_per_sample == 16)"
    },
    {
        "line": 204,
        "fullcodeline": "fmt_id = PJMEDIA_FORMAT_PCM;"
    },
    {
        "line": 311,
        "fullcodeline": "if (fport[i]->fmt_id == PJMEDIA_FORMAT_PCMA ||"
    },
    {
        "line": 312,
        "fullcodeline": "fport[i]->fmt_id == PJMEDIA_FORMAT_PCMU)"
    },
    {
        "line": 206,
        "fullcodeline": "else if (hdr->fmt_tag == PJMEDIA_WAVE_FMT_TAG_ALAW)"
    },
    {
        "line": 188,
        "fullcodeline": "fmt_id = avi_fmts[j].eff_fmt_id;"
    },
    {
        "line": 208,
        "fullcodeline": "fmt_id = PJMEDIA_FORMAT_PCMA;"
    },
    {
        "line": 210,
        "fullcodeline": "else if (hdr->fmt_tag == PJMEDIA_WAVE_FMT_TAG_ULAW)"
    },
    {
        "line": 212,
        "fullcodeline": "fmt_id = PJMEDIA_FORMAT_PCMU;"
    },
    {
        "line": 216,
        "fullcodeline": "PJ_LOG(4, (THIS_FILE, \"Unsupported audio stream\"));"
    }
]