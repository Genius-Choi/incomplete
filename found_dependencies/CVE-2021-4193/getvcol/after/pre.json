[
    {
        "line": 17,
        "fullcodeline": "int\t\tts = wp->w_buffer->b_p_ts;"
    },
    {
        "line": 20,
        "fullcodeline": "vcol = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "line = ptr = ml_get_buf(wp->w_buffer, pos->lnum, FALSE);"
    },
    {
        "line": 22,
        "fullcodeline": "if (pos->col == MAXCOL)"
    },
    {
        "line": 47,
        "fullcodeline": "if ((!wp->w_p_list || wp->w_lcs_chars.tab1 != NUL)"
    },
    {
        "line": 123,
        "fullcodeline": "if (start != NULL)"
    },
    {
        "line": 125,
        "fullcodeline": "if (end != NULL)"
    },
    {
        "line": 127,
        "fullcodeline": "if (cursor != NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "posptr = NULL;  // continue until the NUL"
    },
    {
        "line": 124,
        "fullcodeline": "*start = vcol + head;"
    },
    {
        "line": 126,
        "fullcodeline": "*end = vcol + incr - 1;"
    },
    {
        "line": 35,
        "fullcodeline": "posptr = ptr + pos->col;"
    },
    {
        "line": 129,
        "fullcodeline": "if (*ptr == TAB"
    },
    {
        "line": 29,
        "fullcodeline": "for (i = 0; i < pos->col; ++i)"
    },
    {
        "line": 55,
        "fullcodeline": "head = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "c = *ptr;"
    },
    {
        "line": 98,
        "fullcodeline": "vcol += incr;"
    },
    {
        "line": 99,
        "fullcodeline": "MB_PTR_ADV(ptr);"
    },
    {
        "line": 133,
        "fullcodeline": "&& !(VIsual_active"
    },
    {
        "line": 136,
        "fullcodeline": "*cursor = vcol + incr - 1;\t    // cursor at end"
    },
    {
        "line": 30,
        "fullcodeline": "if (ptr[i] == NUL)"
    },
    {
        "line": 38,
        "fullcodeline": "posptr -= (*mb_head_off)(line, posptr);"
    },
    {
        "line": 58,
        "fullcodeline": "if (c == NUL)"
    },
    {
        "line": 64,
        "fullcodeline": "if (c == TAB)"
    },
    {
        "line": 95,
        "fullcodeline": "if (posptr != NULL && ptr >= posptr) // character at pos->col"
    },
    {
        "line": 107,
        "fullcodeline": "head = 0;"
    },
    {
        "line": 108,
        "fullcodeline": "incr = win_lbr_chartabsize(wp, line, ptr, vcol, &head);"
    },
    {
        "line": 119,
        "fullcodeline": "vcol += incr;"
    },
    {
        "line": 120,
        "fullcodeline": "MB_PTR_ADV(ptr);"
    },
    {
        "line": 132,
        "fullcodeline": "&& !virtual_active()"
    },
    {
        "line": 32,
        "fullcodeline": "pos->col = i;"
    },
    {
        "line": 60,
        "fullcodeline": "incr = 1;\t// NUL at end of line only takes one column"
    },
    {
        "line": 68,
        "fullcodeline": "incr = ts - (vcol % ts);"
    },
    {
        "line": 110,
        "fullcodeline": "if (*ptr == NUL)"
    },
    {
        "line": 116,
        "fullcodeline": "if (posptr != NULL && ptr >= posptr) // character at pos->col"
    },
    {
        "line": 131,
        "fullcodeline": "&& !wp->w_p_list"
    },
    {
        "line": 134,
        "fullcodeline": "&& (*p_sel == 'e' || LTOREQ_POS(*pos, VIsual)))"
    },
    {
        "line": 112,
        "fullcodeline": "incr = 1;\t// NUL at end of line only takes one column"
    },
    {
        "line": 130,
        "fullcodeline": "&& (State & NORMAL)"
    },
    {
        "line": 76,
        "fullcodeline": "if (enc_utf8 && c >= 0x80)"
    },
    {
        "line": 84,
        "fullcodeline": "if (incr == 2 && wp->w_p_wrap && MB_BYTE2LEN(*ptr) > 1"
    },
    {
        "line": 92,
        "fullcodeline": "incr = g_chartab[c] & CT_CELL_MASK;"
    },
    {
        "line": 77,
        "fullcodeline": "incr = utf_ptr2cells(ptr);"
    },
    {
        "line": 85,
        "fullcodeline": "&& in_win_border(wp, vcol))"
    },
    {
        "line": 87,
        "fullcodeline": "++incr;"
    },
    {
        "line": 88,
        "fullcodeline": "head = 1;"
    },
    {
        "line": 79,
        "fullcodeline": "incr = g_chartab[c] & CT_CELL_MASK;"
    }
]