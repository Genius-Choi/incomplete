[
    {
        "line": 3,
        "fullcodeline": "int num_dims = num_spatial_dims + 2;"
    },
    {
        "line": 4,
        "fullcodeline": "int batch_dimension = GetTensorBatchDimIndex(num_dims, data_format);"
    },
    {
        "line": 5,
        "fullcodeline": "int feature_dimension = GetTensorFeatureDimIndex(num_dims, data_format);"
    },
    {
        "line": 6,
        "fullcodeline": "absl::InlinedVector<int64_t, 4> spatial_dimensions(num_spatial_dims);"
    },
    {
        "line": 7,
        "fullcodeline": "for (int spatial_dim = 0; spatial_dim < num_spatial_dims; ++spatial_dim) {"
    },
    {
        "line": 11,
        "fullcodeline": "return xla::TensorFormat(/*batch_dimension=*/batch_dimension,"
    },
    {
        "line": 8,
        "fullcodeline": "spatial_dimensions[spatial_dim] ="
    },
    {
        "line": 9,
        "fullcodeline": "GetTensorSpatialDimIndex(num_dims, data_format, spatial_dim);"
    }
]