[
    {
        "line": 4,
        "fullcodeline": "bool decode = false;"
    },
    {
        "line": 7,
        "fullcodeline": "if (!ignore_reg_unreg) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (dev->dev_ops->vdev_update_bar_map && decode)"
    },
    {
        "line": 15,
        "fullcodeline": "unregister_bar(dev, idx);"
    },
    {
        "line": 20,
        "fullcodeline": "dev->bar[idx].addr = addr;"
    },
    {
        "line": 23,
        "fullcodeline": "dev->bar[idx].addr &= ~0xffffffffUL;"
    },
    {
        "line": 24,
        "fullcodeline": "dev->bar[idx].addr |= addr;"
    },
    {
        "line": 27,
        "fullcodeline": "dev->bar[idx].addr &= 0xffffffff;"
    },
    {
        "line": 28,
        "fullcodeline": "dev->bar[idx].addr |= addr;"
    },
    {
        "line": 31,
        "fullcodeline": "assert(0);"
    },
    {
        "line": 35,
        "fullcodeline": "register_bar(dev, idx);"
    },
    {
        "line": 39,
        "fullcodeline": "dev->dev_ops->vdev_update_bar_map(ctx, dev, idx, orig_addr);"
    },
    {
        "line": 8,
        "fullcodeline": "if (dev->bar[idx].type == PCIBAR_IO)"
    },
    {
        "line": 9,
        "fullcodeline": "decode = porten(dev);"
    },
    {
        "line": 11,
        "fullcodeline": "decode = memen(dev);"
    }
]