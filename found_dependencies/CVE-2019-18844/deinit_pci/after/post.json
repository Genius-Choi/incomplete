[
    {
        "line": 12,
        "fullcodeline": "bzero(&mr, sizeof(struct mem_range));"
    },
    {
        "line": 13,
        "fullcodeline": "mr.name = \"PCI ECFG\";"
    },
    {
        "line": 14,
        "fullcodeline": "mr.base = PCI_EMUL_ECFG_BASE;"
    },
    {
        "line": 15,
        "fullcodeline": "mr.size = PCI_EMUL_ECFG_SIZE;"
    },
    {
        "line": 16,
        "fullcodeline": "unregister_mem(&mr);"
    },
    {
        "line": 19,
        "fullcodeline": "lowmem = vm_get_lowmem_size(ctx);"
    },
    {
        "line": 20,
        "fullcodeline": "bzero(&mr, sizeof(struct mem_range));"
    },
    {
        "line": 21,
        "fullcodeline": "mr.name = \"PCI hole (32-bit)\";"
    },
    {
        "line": 22,
        "fullcodeline": "mr.base = lowmem;"
    },
    {
        "line": 23,
        "fullcodeline": "mr.size = (4ULL * 1024 * 1024 * 1024) - lowmem;"
    },
    {
        "line": 24,
        "fullcodeline": "unregister_mem_fallback(&mr);"
    },
    {
        "line": 27,
        "fullcodeline": "bzero(&mr, sizeof(struct mem_range));"
    },
    {
        "line": 28,
        "fullcodeline": "mr.name = \"PCI hole (64-bit)\";"
    },
    {
        "line": 29,
        "fullcodeline": "mr.base = PCI_EMUL_MEMBASE64;"
    },
    {
        "line": 30,
        "fullcodeline": "mr.size = PCI_EMUL_MEMLIMIT64 - PCI_EMUL_MEMBASE64;"
    },
    {
        "line": 31,
        "fullcodeline": "unregister_mem_fallback(&mr);"
    },
    {
        "line": 33,
        "fullcodeline": "for (bus = 0; bus < MAXBUSES; bus++) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (bi == NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "for (slot = 0; slot < MAXSLOTS; slot++) {"
    },
    {
        "line": 40,
        "fullcodeline": "for (func = 0; func < MAXFUNCS; func++) {"
    },
    {
        "line": 44,
        "fullcodeline": "ops = pci_emul_finddev(fi->fi_name);"
    },
    {
        "line": 49,
        "fullcodeline": "pr_notice(\"pci deinit %s\\n\", fi->fi_name);"
    },
    {
        "line": 50,
        "fullcodeline": "pci_emul_deinit(ctx, ops, bus, slot,"
    },
    {
        "line": 42,
        "fullcodeline": "if (fi->fi_name == NULL)"
    },
    {
        "line": 45,
        "fullcodeline": "if (!ops) {"
    },
    {
        "line": 46,
        "fullcodeline": "pr_warn(\"No driver for device [%s]\\n\", fi->fi_name);"
    }
]