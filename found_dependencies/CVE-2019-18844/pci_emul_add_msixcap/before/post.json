[
    {
        "line": 6,
        "fullcodeline": "assert(msgnum >= 1 && msgnum <= MAX_MSIX_TABLE_ENTRIES);"
    },
    {
        "line": 7,
        "fullcodeline": "assert(barnum >= 0 && barnum <= PCIR_MAX_BAR_0);"
    },
    {
        "line": 9,
        "fullcodeline": "tab_size = msgnum * MSIX_TABLE_ENTRY_SIZE;"
    },
    {
        "line": 12,
        "fullcodeline": "tab_size = roundup2(tab_size, 4096);"
    },
    {
        "line": 14,
        "fullcodeline": "dev->msix.table_bar = barnum;"
    },
    {
        "line": 15,
        "fullcodeline": "dev->msix.pba_bar   = barnum;"
    },
    {
        "line": 16,
        "fullcodeline": "dev->msix.table_offset = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "dev->msix.table_count = msgnum;"
    },
    {
        "line": 18,
        "fullcodeline": "dev->msix.pba_offset = tab_size;"
    },
    {
        "line": 19,
        "fullcodeline": "dev->msix.pba_size = PBA_SIZE(msgnum);"
    },
    {
        "line": 21,
        "fullcodeline": "pci_msix_table_init(dev, msgnum);"
    },
    {
        "line": 23,
        "fullcodeline": "pci_populate_msixcap(&msixcap, msgnum, barnum, tab_size);"
    },
    {
        "line": 26,
        "fullcodeline": "pci_emul_alloc_bar(dev, barnum, PCIBAR_MEM32,"
    },
    {
        "line": 27,
        "fullcodeline": "tab_size + dev->msix.pba_size);"
    },
    {
        "line": 29,
        "fullcodeline": "return (pci_emul_add_capability(dev, (u_char *)&msixcap,"
    }
]