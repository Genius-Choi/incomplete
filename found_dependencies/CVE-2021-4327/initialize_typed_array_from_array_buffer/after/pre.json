[
    {
        "line": 5,
        "fullcodeline": "auto& vm = global_object.vm();"
    },
    {
        "line": 6,
        "fullcodeline": "auto element_size = typed_array.element_size();"
    },
    {
        "line": 7,
        "fullcodeline": "auto offset = byte_offset.to_index(global_object);"
    },
    {
        "line": 14,
        "fullcodeline": "size_t new_length { 0 };"
    },
    {
        "line": 21,
        "fullcodeline": "auto buffer_byte_length = array_buffer.byte_length();"
    },
    {
        "line": 56,
        "fullcodeline": "typed_array.set_viewed_array_buffer(&array_buffer);"
    },
    {
        "line": 57,
        "fullcodeline": "typed_array.set_byte_length(new_byte_length.value());"
    },
    {
        "line": 58,
        "fullcodeline": "typed_array.set_byte_offset(offset);"
    },
    {
        "line": 8,
        "fullcodeline": "if (vm.exception())"
    },
    {
        "line": 22,
        "fullcodeline": "Checked<size_t> new_byte_length;"
    },
    {
        "line": 51,
        "fullcodeline": "if (new_byte_length.has_overflow()) {"
    },
    {
        "line": 59,
        "fullcodeline": "typed_array.set_array_length(new_byte_length.value() / element_size);"
    },
    {
        "line": 10,
        "fullcodeline": "if (offset % element_size != 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (!length.is_undefined()) {"
    },
    {
        "line": 16,
        "fullcodeline": "new_length = length.to_index(global_object);"
    },
    {
        "line": 32,
        "fullcodeline": "new_byte_length = buffer_byte_length;"
    },
    {
        "line": 33,
        "fullcodeline": "new_byte_length -= offset;"
    },
    {
        "line": 11,
        "fullcodeline": "vm.throw_exception<RangeError>(global_object, ErrorType::TypedArrayInvalidByteOffset, typed_array.class_name(), element_size, offset);"
    },
    {
        "line": 17,
        "fullcodeline": "if (vm.exception())"
    },
    {
        "line": 28,
        "fullcodeline": "if (offset > buffer_byte_length) {"
    },
    {
        "line": 35,
        "fullcodeline": "new_byte_length = new_length;"
    },
    {
        "line": 36,
        "fullcodeline": "new_byte_length *= element_size;"
    },
    {
        "line": 39,
        "fullcodeline": "new_byte_end += offset;"
    },
    {
        "line": 52,
        "fullcodeline": "vm.throw_exception<RangeError>(global_object, ErrorType::InvalidLength, \"typed array\");"
    },
    {
        "line": 24,
        "fullcodeline": "if (buffer_byte_length % element_size != 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "Checked<size_t> new_byte_end = new_byte_length;"
    },
    {
        "line": 41,
        "fullcodeline": "if (new_byte_end.has_overflow()) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (new_byte_end.value() > buffer_byte_length) {"
    },
    {
        "line": 25,
        "fullcodeline": "vm.throw_exception<RangeError>(global_object, ErrorType::TypedArrayInvalidBufferLength, typed_array.class_name(), element_size, buffer_byte_length);"
    },
    {
        "line": 29,
        "fullcodeline": "vm.throw_exception<RangeError>(global_object, ErrorType::TypedArrayOutOfRangeByteOffset, offset, buffer_byte_length);"
    },
    {
        "line": 42,
        "fullcodeline": "vm.throw_exception<RangeError>(global_object, ErrorType::InvalidLength, \"typed array\");"
    },
    {
        "line": 47,
        "fullcodeline": "vm.throw_exception<RangeError>(global_object, ErrorType::TypedArrayOutOfRangeByteOffsetOrLength, offset, new_byte_end.value(), buffer_byte_length);"
    }
]