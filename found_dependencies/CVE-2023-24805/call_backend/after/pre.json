[
    {
        "line": 8,
        "fullcodeline": "char          *backend_argv[8];       // Arguments for called CUPS backend"
    },
    {
        "line": 9,
        "fullcodeline": "char\t\tscheme[1024],           // Scheme from URI"
    },
    {
        "line": 11,
        "fullcodeline": "backend_path[2048];\t// Backend path"
    },
    {
        "line": 15,
        "fullcodeline": "retval = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "scheme[0] = '\\0';"
    },
    {
        "line": 24,
        "fullcodeline": "strncat(scheme, uri, sizeof(scheme) - 1);"
    },
    {
        "line": 56,
        "fullcodeline": "backend_argv[0] = uri;"
    },
    {
        "line": 57,
        "fullcodeline": "backend_argv[1] = argv[1];"
    },
    {
        "line": 58,
        "fullcodeline": "backend_argv[2] = argv[2];"
    },
    {
        "line": 59,
        "fullcodeline": "backend_argv[3] = argv[3];"
    },
    {
        "line": 60,
        "fullcodeline": "backend_argv[4] = (argc == 6 ? \"1\" : argv[4]);"
    },
    {
        "line": 61,
        "fullcodeline": "backend_argv[5] = argv[5];"
    },
    {
        "line": 62,
        "fullcodeline": "backend_argv[6] = filename;"
    },
    {
        "line": 63,
        "fullcodeline": "backend_argv[7] = NULL;"
    },
    {
        "line": 65,
        "fullcodeline": "bytes = snprintf(backend_path, sizeof(backend_path),"
    },
    {
        "line": 79,
        "fullcodeline": "setenv(\"DEVICE_URI\", uri, 1);"
    },
    {
        "line": 81,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 87,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 25,
        "fullcodeline": "if ((ptr = strchr(scheme, ':')) != NULL)"
    },
    {
        "line": 33,
        "fullcodeline": "if (strchr(scheme, '/'))"
    },
    {
        "line": 39,
        "fullcodeline": "if (!strcmp(scheme, \".\") || !strcmp(scheme, \"..\"))"
    },
    {
        "line": 46,
        "fullcodeline": "if ((cups_serverbin = getenv(\"CUPS_SERVERBIN\")) == NULL)"
    },
    {
        "line": 49,
        "fullcodeline": "if (!strncasecmp(uri, \"file:\", 5) || uri[0] == '/')"
    },
    {
        "line": 67,
        "fullcodeline": "if (bytes < 0 || bytes >= sizeof(backend_path))"
    },
    {
        "line": 86,
        "fullcodeline": "(backend_argv[6] && backend_argv[6][0] ? backend_argv[6] : \"\"));"
    },
    {
        "line": 91,
        "fullcodeline": "if ((pid = fork()) == 0)"
    },
    {
        "line": 108,
        "fullcodeline": "if (wait_pid >= 0 && wait_status)"
    },
    {
        "line": 26,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 35,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 37,
        "fullcodeline": "exit (CUPS_BACKEND_FAILED);"
    },
    {
        "line": 41,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 44,
        "fullcodeline": "exit (CUPS_BACKEND_FAILED);"
    },
    {
        "line": 47,
        "fullcodeline": "cups_serverbin = CUPS_SERVERBIN;"
    },
    {
        "line": 51,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 53,
        "fullcodeline": "exit (CUPS_BACKEND_FAILED);"
    },
    {
        "line": 69,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 72,
        "fullcodeline": "exit (CUPS_BACKEND_FAILED);"
    },
    {
        "line": 85,
        "fullcodeline": "(backend_argv[6] && backend_argv[6][0] ? \" \" : \"\"),"
    },
    {
        "line": 93,
        "fullcodeline": "retval = execv(backend_path, backend_argv);"
    },
    {
        "line": 106,
        "fullcodeline": "while ((wait_pid = wait(&wait_status)) < 0 && errno == EINTR);"
    },
    {
        "line": 29,
        "fullcodeline": "fprintf(stderr,"
    },
    {
        "line": 31,
        "fullcodeline": "exit (CUPS_BACKEND_FAILED);"
    },
    {
        "line": 95,
        "fullcodeline": "if (retval == -1)"
    },
    {
        "line": 110,
        "fullcodeline": "if (WIFEXITED(wait_status))"
    },
    {
        "line": 100,
        "fullcodeline": "else if (pid < 0)"
    },
    {
        "line": 111,
        "fullcodeline": "retval = WEXITSTATUS(wait_status);"
    },
    {
        "line": 97,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 102,
        "fullcodeline": "fprintf(stderr, \"ERROR: Unable to fork for backend\\n\");"
    },
    {
        "line": 112,
        "fullcodeline": "else if (WTERMSIG(wait_status) != SIGTERM)"
    },
    {
        "line": 113,
        "fullcodeline": "retval = WTERMSIG(wait_status);"
    },
    {
        "line": 115,
        "fullcodeline": "retval = 0;"
    }
]