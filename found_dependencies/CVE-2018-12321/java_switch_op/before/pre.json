[
    {
        "line": 2,
        "fullcodeline": "ut8 op_byte = data[0];"
    },
    {
        "line": 3,
        "fullcodeline": "ut64 offset = addr - java_get_method_start ();"
    },
    {
        "line": 4,
        "fullcodeline": "ut8 pos = (offset+1)%4 ? 1 + 4 - (offset+1)%4 : 1;"
    },
    {
        "line": 6,
        "fullcodeline": "if (op_byte == 0xaa) {"
    },
    {
        "line": 11,
        "fullcodeline": "int min_val = (ut32)(UINT (data, pos + 4)),"
    },
    {
        "line": 12,
        "fullcodeline": "max_val = (ut32)(UINT (data, pos + 8));"
    },
    {
        "line": 14,
        "fullcodeline": "ut32 default_loc = (ut32) (UINT (data, pos)), cur_case = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "op->switch_op = r_anal_switch_op_new (addr, min_val, default_loc);"
    },
    {
        "line": 16,
        "fullcodeline": "RAnalCaseOp *caseop = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "pos += 12;"
    },
    {
        "line": 8,
        "fullcodeline": "if (pos + 8 > len) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (max_val > min_val && ((max_val - min_val)<(UT16_MAX/4))) {"
    },
    {
        "line": 20,
        "fullcodeline": "for (cur_case = 0; cur_case <= max_val - min_val; pos += 4, cur_case++) {"
    },
    {
        "line": 26,
        "fullcodeline": "int offset = (int)(ut32)(R_BIN_JAVA_UINT (data, pos));"
    },
    {
        "line": 27,
        "fullcodeline": "caseop = r_anal_switch_op_add_case (op->switch_op,"
    }
]