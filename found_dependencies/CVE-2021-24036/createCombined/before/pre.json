[
    {
        "line": 4,
        "fullcodeline": "size_t requiredStorage = offsetof(HeapFullStorage, align) + capacity;"
    },
    {
        "line": 5,
        "fullcodeline": "size_t mallocSize = goodMallocSize(requiredStorage);"
    },
    {
        "line": 6,
        "fullcodeline": "auto storage = static_cast<HeapFullStorage*>(checkedMalloc(mallocSize));"
    },
    {
        "line": 8,
        "fullcodeline": "new (&storage->hs.prefix) HeapPrefix(kIOBufInUse | kDataInUse, mallocSize);"
    },
    {
        "line": 9,
        "fullcodeline": "new (&storage->shared) SharedInfo(freeInternalBuf, storage);"
    },
    {
        "line": 15,
        "fullcodeline": "auto bufAddr = reinterpret_cast<uint8_t*>(&storage->align);"
    },
    {
        "line": 16,
        "fullcodeline": "uint8_t* storageEnd = reinterpret_cast<uint8_t*>(storage) + mallocSize;"
    },
    {
        "line": 17,
        "fullcodeline": "auto actualCapacity = size_t(storageEnd - bufAddr);"
    },
    {
        "line": 18,
        "fullcodeline": "unique_ptr<IOBuf> ret(new (&storage->hs.buf) IOBuf("
    },
    {
        "line": 12,
        "fullcodeline": "io_buf_alloc_cb(storage, mallocSize);"
    },
    {
        "line": 20,
        "fullcodeline": "packFlagsAndSharedInfo(0, &storage->shared),"
    }
]