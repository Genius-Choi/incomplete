[
    {
        "line": 10,
        "fullcodeline": "err = crypto_check_attr_type(tb, CRYPTO_ALG_TYPE_SHASH);"
    },
    {
        "line": 14,
        "fullcodeline": "salg = shash_attr_alg(tb[1], 0, 0);"
    },
    {
        "line": 17,
        "fullcodeline": "alg = &salg->base;"
    },
    {
        "line": 20,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 24,
        "fullcodeline": "ds = salg->digestsize;"
    },
    {
        "line": 25,
        "fullcodeline": "ss = salg->statesize;"
    },
    {
        "line": 30,
        "fullcodeline": "inst = shash_alloc_instance(\"hmac\", alg);"
    },
    {
        "line": 31,
        "fullcodeline": "err = PTR_ERR(inst);"
    },
    {
        "line": 35,
        "fullcodeline": "err = crypto_init_shash_spawn(shash_instance_ctx(inst), salg,"
    },
    {
        "line": 44,
        "fullcodeline": "ss = ALIGN(ss, alg->cra_alignmask + 1);"
    },
    {
        "line": 51,
        "fullcodeline": "inst->alg.base.cra_init = hmac_init_tfm;"
    },
    {
        "line": 52,
        "fullcodeline": "inst->alg.base.cra_exit = hmac_exit_tfm;"
    },
    {
        "line": 54,
        "fullcodeline": "inst->alg.init = hmac_init;"
    },
    {
        "line": 55,
        "fullcodeline": "inst->alg.update = hmac_update;"
    },
    {
        "line": 56,
        "fullcodeline": "inst->alg.final = hmac_final;"
    },
    {
        "line": 57,
        "fullcodeline": "inst->alg.finup = hmac_finup;"
    },
    {
        "line": 58,
        "fullcodeline": "inst->alg.export = hmac_export;"
    },
    {
        "line": 59,
        "fullcodeline": "inst->alg.import = hmac_import;"
    },
    {
        "line": 60,
        "fullcodeline": "inst->alg.setkey = hmac_setkey;"
    },
    {
        "line": 62,
        "fullcodeline": "err = shash_register_instance(tmpl, inst);"
    },
    {
        "line": 15,
        "fullcodeline": "if (IS_ERR(salg))"
    },
    {
        "line": 21,
        "fullcodeline": "if (crypto_shash_alg_has_setkey(salg))"
    },
    {
        "line": 32,
        "fullcodeline": "if (IS_ERR(inst))"
    },
    {
        "line": 26,
        "fullcodeline": "if (ds > alg->cra_blocksize ||"
    },
    {
        "line": 27,
        "fullcodeline": "ss < alg->cra_blocksize)"
    },
    {
        "line": 36,
        "fullcodeline": "shash_crypto_instance(inst));"
    },
    {
        "line": 48,
        "fullcodeline": "inst->alg.base.cra_ctxsize = sizeof(struct hmac_ctx) +"
    },
    {
        "line": 49,
        "fullcodeline": "ALIGN(ss * 2, crypto_tfm_ctx_alignment());"
    },
    {
        "line": 16,
        "fullcodeline": "return PTR_ERR(salg);"
    },
    {
        "line": 65,
        "fullcodeline": "shash_free_instance(shash_crypto_instance(inst));"
    }
]