[
    {
        "line": 4,
        "fullcodeline": "ConfigTagList tags = ServerInstance->Config->ConfTags(\"database\");"
    },
    {
        "line": 25,
        "fullcodeline": "Dispatcher->LockQueue();"
    },
    {
        "line": 26,
        "fullcodeline": "SQL::Error err(SQL::BAD_DBID);"
    },
    {
        "line": 47,
        "fullcodeline": "Dispatcher->UnlockQueue();"
    },
    {
        "line": 48,
        "fullcodeline": "connections.swap(conns);"
    },
    {
        "line": 5,
        "fullcodeline": "for(ConfigIter i = tags.first; i != tags.second; i++)"
    },
    {
        "line": 27,
        "fullcodeline": "for(ConnMap::iterator i = connections.begin(); i != connections.end(); i++)"
    },
    {
        "line": 9,
        "fullcodeline": "std::string id = i->second->getString(\"id\");"
    },
    {
        "line": 10,
        "fullcodeline": "ConnMap::iterator curr = connections.find(id);"
    },
    {
        "line": 29,
        "fullcodeline": "ServerInstance->Modules->DelService(*i->second);"
    },
    {
        "line": 31,
        "fullcodeline": "i->second->lock.Lock();"
    },
    {
        "line": 32,
        "fullcodeline": "i->second->lock.Unlock();"
    },
    {
        "line": 45,
        "fullcodeline": "delete i->second;"
    },
    {
        "line": 7,
        "fullcodeline": "if (!stdalgo::string::equalsci(i->second->getString(\"module\"), \"mysql\"))"
    },
    {
        "line": 11,
        "fullcodeline": "if (curr == connections.end())"
    },
    {
        "line": 34,
        "fullcodeline": "for (size_t j = qq.size(); j > 0; j--)"
    },
    {
        "line": 13,
        "fullcodeline": "SQLConnection* conn = new SQLConnection(this, i->second);"
    },
    {
        "line": 14,
        "fullcodeline": "conns.insert(std::make_pair(id, conn));"
    },
    {
        "line": 15,
        "fullcodeline": "ServerInstance->Modules->AddService(*conn);"
    },
    {
        "line": 36,
        "fullcodeline": "size_t k = j - 1;"
    },
    {
        "line": 19,
        "fullcodeline": "conns.insert(*curr);"
    },
    {
        "line": 20,
        "fullcodeline": "connections.erase(curr);"
    },
    {
        "line": 37,
        "fullcodeline": "if (qq[k].c == i->second)"
    },
    {
        "line": 39,
        "fullcodeline": "qq[k].q->OnError(err);"
    },
    {
        "line": 40,
        "fullcodeline": "delete qq[k].q;"
    },
    {
        "line": 41,
        "fullcodeline": "qq.erase(qq.begin() + k);"
    }
]