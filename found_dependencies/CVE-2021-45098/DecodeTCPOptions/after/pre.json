[
    {
        "line": 3,
        "fullcodeline": "uint8_t tcp_opt_cnt = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "TCPOpt tcp_opts[TCP_OPTMAX];"
    },
    {
        "line": 6,
        "fullcodeline": "uint16_t plen = pktlen;"
    },
    {
        "line": 9,
        "fullcodeline": "const uint8_t type = *pkt;"
    },
    {
        "line": 12,
        "fullcodeline": "if (type == TCP_OPT_EOL) {"
    },
    {
        "line": 14,
        "fullcodeline": "} else if (type == TCP_OPT_NOP) {"
    },
    {
        "line": 15,
        "fullcodeline": "pkt++;"
    },
    {
        "line": 16,
        "fullcodeline": "plen--;"
    },
    {
        "line": 24,
        "fullcodeline": "const uint8_t olen = *(pkt+1);"
    },
    {
        "line": 34,
        "fullcodeline": "tcp_opts[tcp_opt_cnt].type = type;"
    },
    {
        "line": 35,
        "fullcodeline": "tcp_opts[tcp_opt_cnt].len  = olen;"
    },
    {
        "line": 36,
        "fullcodeline": "tcp_opts[tcp_opt_cnt].data = (olen > 2) ? (pkt+2) : NULL;"
    },
    {
        "line": 159,
        "fullcodeline": "pkt += olen;"
    },
    {
        "line": 160,
        "fullcodeline": "plen -= olen;"
    },
    {
        "line": 161,
        "fullcodeline": "tcp_opt_cnt++;"
    },
    {
        "line": 20,
        "fullcodeline": "if (plen < 2) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (unlikely(olen > plen || olen < 2)) {"
    },
    {
        "line": 30,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p, TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 91,
        "fullcodeline": "SCLogDebug(\"SACK option, len %u\", olen);"
    },
    {
        "line": 107,
        "fullcodeline": "SCLogDebug(\"TFO option, len %u\", olen);"
    },
    {
        "line": 122,
        "fullcodeline": "SCLogDebug(\"TCP EXP option, len %u\", olen);"
    },
    {
        "line": 139,
        "fullcodeline": "SCLogDebug(\"MD5 option, len %u\", olen);"
    },
    {
        "line": 149,
        "fullcodeline": "SCLogDebug(\"AU option, len %u\", olen);"
    },
    {
        "line": 43,
        "fullcodeline": "if (olen != TCP_OPT_WS_LEN) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (olen != TCP_OPT_MSS_LEN) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (olen != TCP_OPT_SACKOK_LEN) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (olen != TCP_OPT_TS_LEN) {"
    },
    {
        "line": 92,
        "fullcodeline": "if ((olen != 2) &&"
    },
    {
        "line": 108,
        "fullcodeline": "if ((olen != 2) && (olen < TCP_OPT_TFO_MIN_LEN || olen > TCP_OPT_TFO_MAX_LEN ||"
    },
    {
        "line": 123,
        "fullcodeline": "if (olen == 4 || olen == 12) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (olen != 18) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (olen < 4) {"
    },
    {
        "line": 44,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 55,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 66,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 77,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 93,
        "fullcodeline": "(olen < TCP_OPT_SACK_MIN_LEN ||"
    },
    {
        "line": 97,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 110,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 124,
        "fullcodeline": "uint16_t magic = SCNtohs(*(uint16_t *)tcp_opts[tcp_opt_cnt].data);"
    },
    {
        "line": 141,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p,TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 151,
        "fullcodeline": "ENGINE_SET_INVALID_EVENT(p,TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 95,
        "fullcodeline": "!((olen - 2) % 8 == 0)))"
    },
    {
        "line": 109,
        "fullcodeline": "!(((olen - 2) & 0x1) == 0))) {"
    },
    {
        "line": 125,
        "fullcodeline": "if (magic == 0xf989) {"
    },
    {
        "line": 134,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_INVALID_LEN);"
    },
    {
        "line": 144,
        "fullcodeline": "p->tcpvars.md5_option_present = true;"
    },
    {
        "line": 154,
        "fullcodeline": "p->tcpvars.ao_option_present = true;"
    },
    {
        "line": 46,
        "fullcodeline": "if (p->tcpvars.ws.type != 0) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (p->tcpvars.mss.type != 0) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (p->tcpvars.sackok.type != 0) {"
    },
    {
        "line": 94,
        "fullcodeline": "olen > TCP_OPT_SACK_MAX_LEN ||"
    },
    {
        "line": 99,
        "fullcodeline": "if (p->tcpvars.sack.type != 0) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (p->tcpvars.tfo.type != 0) {"
    },
    {
        "line": 47,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_DUPLICATE);"
    },
    {
        "line": 58,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_DUPLICATE);"
    },
    {
        "line": 69,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_DUPLICATE);"
    },
    {
        "line": 80,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_DUPLICATE);"
    },
    {
        "line": 100,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_DUPLICATE);"
    },
    {
        "line": 113,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_DUPLICATE);"
    },
    {
        "line": 126,
        "fullcodeline": "if (p->tcpvars.tfo.type != 0) {"
    },
    {
        "line": 49,
        "fullcodeline": "SET_OPTS(p->tcpvars.ws, tcp_opts[tcp_opt_cnt]);"
    },
    {
        "line": 60,
        "fullcodeline": "SET_OPTS(p->tcpvars.mss, tcp_opts[tcp_opt_cnt]);"
    },
    {
        "line": 71,
        "fullcodeline": "SET_OPTS(p->tcpvars.sackok, tcp_opts[tcp_opt_cnt]);"
    },
    {
        "line": 82,
        "fullcodeline": "uint32_t values[2];"
    },
    {
        "line": 83,
        "fullcodeline": "memcpy(&values, tcp_opts[tcp_opt_cnt].data, sizeof(values));"
    },
    {
        "line": 84,
        "fullcodeline": "p->tcpvars.ts_val = SCNtohl(values[0]);"
    },
    {
        "line": 85,
        "fullcodeline": "p->tcpvars.ts_ecr = SCNtohl(values[1]);"
    },
    {
        "line": 86,
        "fullcodeline": "p->tcpvars.ts_set = true;"
    },
    {
        "line": 102,
        "fullcodeline": "SET_OPTS(p->tcpvars.sack, tcp_opts[tcp_opt_cnt]);"
    },
    {
        "line": 115,
        "fullcodeline": "SET_OPTS(p->tcpvars.tfo, tcp_opts[tcp_opt_cnt]);"
    },
    {
        "line": 127,
        "fullcodeline": "ENGINE_SET_EVENT(p,TCP_OPT_DUPLICATE);"
    },
    {
        "line": 129,
        "fullcodeline": "SET_OPTS(p->tcpvars.tfo, tcp_opts[tcp_opt_cnt]);"
    },
    {
        "line": 130,
        "fullcodeline": "p->tcpvars.tfo.type = TCP_OPT_TFO; // treat as regular TFO"
    }
]