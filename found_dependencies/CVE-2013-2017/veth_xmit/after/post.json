[
    {
        "line": 3,
        "fullcodeline": "struct net_device *rcv = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "priv = netdev_priv(dev);"
    },
    {
        "line": 9,
        "fullcodeline": "rcv = priv->peer;"
    },
    {
        "line": 10,
        "fullcodeline": "rcv_priv = netdev_priv(rcv);"
    },
    {
        "line": 12,
        "fullcodeline": "stats = this_cpu_ptr(priv->stats);"
    },
    {
        "line": 13,
        "fullcodeline": "rcv_stats = this_cpu_ptr(rcv_priv->stats);"
    },
    {
        "line": 21,
        "fullcodeline": "length = skb->len + ETH_HLEN;"
    },
    {
        "line": 25,
        "fullcodeline": "stats->tx_bytes += length;"
    },
    {
        "line": 26,
        "fullcodeline": "stats->tx_packets++;"
    },
    {
        "line": 28,
        "fullcodeline": "rcv_stats->rx_bytes += length;"
    },
    {
        "line": 29,
        "fullcodeline": "rcv_stats->rx_packets++;"
    },
    {
        "line": 34,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 35,
        "fullcodeline": "stats->tx_dropped++;"
    },
    {
        "line": 39,
        "fullcodeline": "rcv_stats->rx_dropped++;"
    },
    {
        "line": 15,
        "fullcodeline": "if (!(rcv->flags & IFF_UP))"
    },
    {
        "line": 18,
        "fullcodeline": "if (dev->features & NETIF_F_NO_CSUM)"
    },
    {
        "line": 22,
        "fullcodeline": "if (dev_forward_skb(rcv, skb) != NET_RX_SUCCESS)"
    },
    {
        "line": 19,
        "fullcodeline": "skb->ip_summed = rcv_priv->ip_summed;"
    }
]