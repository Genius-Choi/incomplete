[
    {
        "line": 5,
        "fullcodeline": "mutex_lock(&pmus_lock);"
    },
    {
        "line": 6,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 11,
        "fullcodeline": "pmu->type = -1;"
    },
    {
        "line": 14,
        "fullcodeline": "pmu->name = name;"
    },
    {
        "line": 23,
        "fullcodeline": "pmu->type = type;"
    },
    {
        "line": 32,
        "fullcodeline": "pmu->pmu_cpu_context = find_pmu_context(pmu->task_ctx_nr);"
    },
    {
        "line": 36,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 41,
        "fullcodeline": "for_each_possible_cpu(cpu) {"
    },
    {
        "line": 83,
        "fullcodeline": "list_add_rcu(&pmu->entry, &pmus);"
    },
    {
        "line": 84,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "mutex_unlock(&pmus_lock);"
    },
    {
        "line": 91,
        "fullcodeline": "device_del(pmu->dev);"
    },
    {
        "line": 92,
        "fullcodeline": "put_device(pmu->dev);"
    },
    {
        "line": 99,
        "fullcodeline": "free_percpu(pmu->pmu_disable_count);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!pmu->pmu_disable_count)"
    },
    {
        "line": 12,
        "fullcodeline": "if (!name)"
    },
    {
        "line": 16,
        "fullcodeline": "if (type < 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (!pmu->pmu_cpu_context)"
    },
    {
        "line": 44,
        "fullcodeline": "cpuctx = per_cpu_ptr(pmu->pmu_cpu_context, cpu);"
    },
    {
        "line": 45,
        "fullcodeline": "__perf_event_init_context(&cpuctx->ctx);"
    },
    {
        "line": 46,
        "fullcodeline": "lockdep_set_class(&cpuctx->ctx.mutex, &cpuctx_mutex);"
    },
    {
        "line": 47,
        "fullcodeline": "lockdep_set_class(&cpuctx->ctx.lock, &cpuctx_lock);"
    },
    {
        "line": 48,
        "fullcodeline": "cpuctx->ctx.type = cpu_context;"
    },
    {
        "line": 49,
        "fullcodeline": "cpuctx->ctx.pmu = pmu;"
    },
    {
        "line": 51,
        "fullcodeline": "__perf_cpu_hrtimer_init(cpuctx, cpu);"
    },
    {
        "line": 53,
        "fullcodeline": "INIT_LIST_HEAD(&cpuctx->rotation_list);"
    },
    {
        "line": 54,
        "fullcodeline": "cpuctx->unique_pmu = pmu;"
    },
    {
        "line": 58,
        "fullcodeline": "if (!pmu->start_txn) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (!pmu->pmu_enable) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (!pmu->event_idx)"
    },
    {
        "line": 95,
        "fullcodeline": "if (pmu->type >= PERF_TYPE_MAX)"
    },
    {
        "line": 17,
        "fullcodeline": "type = idr_alloc(&pmu_idr, pmu, PERF_TYPE_MAX, 0, GFP_KERNEL);"
    },
    {
        "line": 26,
        "fullcodeline": "ret = pmu_dev_alloc(pmu);"
    },
    {
        "line": 76,
        "fullcodeline": "pmu->pmu_enable  = perf_pmu_nop_void;"
    },
    {
        "line": 77,
        "fullcodeline": "pmu->pmu_disable = perf_pmu_nop_void;"
    },
    {
        "line": 81,
        "fullcodeline": "pmu->event_idx = perf_event_idx_default;"
    },
    {
        "line": 96,
        "fullcodeline": "idr_remove(&pmu_idr, pmu->type);"
    },
    {
        "line": 18,
        "fullcodeline": "if (type < 0) {"
    },
    {
        "line": 19,
        "fullcodeline": "ret = type;"
    },
    {
        "line": 65,
        "fullcodeline": "pmu->start_txn  = perf_pmu_start_txn;"
    },
    {
        "line": 66,
        "fullcodeline": "pmu->commit_txn = perf_pmu_commit_txn;"
    },
    {
        "line": 67,
        "fullcodeline": "pmu->cancel_txn = perf_pmu_cancel_txn;"
    },
    {
        "line": 69,
        "fullcodeline": "pmu->start_txn  = perf_pmu_nop_void;"
    },
    {
        "line": 70,
        "fullcodeline": "pmu->commit_txn = perf_pmu_nop_int;"
    },
    {
        "line": 71,
        "fullcodeline": "pmu->cancel_txn = perf_pmu_nop_void;"
    }
]