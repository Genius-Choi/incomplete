[
    {
        "line": 13,
        "fullcodeline": "err = -ENOMEM;"
    },
    {
        "line": 14,
        "fullcodeline": "ufs = kzalloc(sizeof(struct ovl_fs), GFP_KERNEL);"
    },
    {
        "line": 18,
        "fullcodeline": "err = ovl_parse_opt((char *) data, &ufs->config);"
    },
    {
        "line": 23,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 30,
        "fullcodeline": "err = -ENOMEM;"
    },
    {
        "line": 31,
        "fullcodeline": "oe = ovl_alloc_entry();"
    },
    {
        "line": 35,
        "fullcodeline": "err = ovl_mount_dir(ufs->config.upperdir, &upperpath);"
    },
    {
        "line": 39,
        "fullcodeline": "err = ovl_mount_dir(ufs->config.lowerdir, &lowerpath);"
    },
    {
        "line": 43,
        "fullcodeline": "err = ovl_mount_dir(ufs->config.workdir, &workpath);"
    },
    {
        "line": 47,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 74,
        "fullcodeline": "err = vfs_statfs(&lowerpath, &statfs);"
    },
    {
        "line": 79,
        "fullcodeline": "ufs->lower_namelen = statfs.f_namelen;"
    },
    {
        "line": 81,
        "fullcodeline": "ufs->upper_mnt = clone_private_mount(&upperpath);"
    },
    {
        "line": 82,
        "fullcodeline": "err = PTR_ERR(ufs->upper_mnt);"
    },
    {
        "line": 88,
        "fullcodeline": "ufs->lower_mnt = clone_private_mount(&lowerpath);"
    },
    {
        "line": 89,
        "fullcodeline": "err = PTR_ERR(ufs->lower_mnt);"
    },
    {
        "line": 95,
        "fullcodeline": "ufs->workdir = ovl_workdir_create(ufs->upper_mnt, workpath.dentry);"
    },
    {
        "line": 96,
        "fullcodeline": "err = PTR_ERR(ufs->workdir);"
    },
    {
        "line": 107,
        "fullcodeline": "ufs->lower_mnt->mnt_flags |= MNT_READONLY;"
    },
    {
        "line": 113,
        "fullcodeline": "sb->s_d_op = &ovl_dentry_operations;"
    },
    {
        "line": 115,
        "fullcodeline": "err = -ENOMEM;"
    },
    {
        "line": 116,
        "fullcodeline": "root_inode = ovl_new_inode(sb, S_IFDIR, oe);"
    },
    {
        "line": 120,
        "fullcodeline": "root_dentry = d_make_root(root_inode);"
    },
    {
        "line": 124,
        "fullcodeline": "mntput(upperpath.mnt);"
    },
    {
        "line": 125,
        "fullcodeline": "mntput(lowerpath.mnt);"
    },
    {
        "line": 126,
        "fullcodeline": "path_put(&workpath);"
    },
    {
        "line": 128,
        "fullcodeline": "oe->__upperdentry = upperpath.dentry;"
    },
    {
        "line": 129,
        "fullcodeline": "oe->lowerdentry = lowerpath.dentry;"
    },
    {
        "line": 131,
        "fullcodeline": "root_dentry->d_fsdata = oe;"
    },
    {
        "line": 133,
        "fullcodeline": "sb->s_magic = OVERLAYFS_SUPER_MAGIC;"
    },
    {
        "line": 134,
        "fullcodeline": "sb->s_op = &ovl_super_operations;"
    },
    {
        "line": 135,
        "fullcodeline": "sb->s_root = root_dentry;"
    },
    {
        "line": 136,
        "fullcodeline": "sb->s_fs_info = ufs;"
    },
    {
        "line": 141,
        "fullcodeline": "dput(ufs->workdir);"
    },
    {
        "line": 143,
        "fullcodeline": "mntput(ufs->lower_mnt);"
    },
    {
        "line": 145,
        "fullcodeline": "mntput(ufs->upper_mnt);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!ufs)"
    },
    {
        "line": 24,
        "fullcodeline": "if (!ufs->config.upperdir || !ufs->config.lowerdir ||"
    },
    {
        "line": 32,
        "fullcodeline": "if (oe == NULL)"
    },
    {
        "line": 48,
        "fullcodeline": "if (!S_ISDIR(upperpath.dentry->d_inode->i_mode) ||"
    },
    {
        "line": 55,
        "fullcodeline": "if (upperpath.mnt != workpath.mnt) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (!ovl_workdir_ok(workpath.dentry, upperpath.dentry)) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (!ovl_is_allowed_fs_type(upperpath.dentry)) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (!ovl_is_allowed_fs_type(lowerpath.dentry)) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (IS_ERR(ufs->upper_mnt)) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (IS_ERR(ufs->lower_mnt)) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (IS_ERR(ufs->workdir)) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (ufs->upper_mnt->mnt_sb->s_flags & MS_RDONLY)"
    },
    {
        "line": 117,
        "fullcodeline": "if (!root_inode)"
    },
    {
        "line": 121,
        "fullcodeline": "if (!root_dentry)"
    },
    {
        "line": 25,
        "fullcodeline": "!ufs->config.workdir) {"
    },
    {
        "line": 50,
        "fullcodeline": "!S_ISDIR(workpath.dentry->d_inode->i_mode)) {"
    },
    {
        "line": 98,
        "fullcodeline": "pr_err(\"overlayfs: failed to create directory %s/%s\\n\","
    },
    {
        "line": 111,
        "fullcodeline": "sb->s_flags |= MS_RDONLY;"
    },
    {
        "line": 49,
        "fullcodeline": "!S_ISDIR(lowerpath.dentry->d_inode->i_mode) ||"
    }
]