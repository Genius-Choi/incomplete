[
    {
        "line": 7,
        "fullcodeline": "const char *err = \"Getting sb failed\";"
    },
    {
        "line": 13,
        "fullcodeline": "sbi = kmem_cache_zalloc(ecryptfs_sb_info_cache, GFP_KERNEL);"
    },
    {
        "line": 19,
        "fullcodeline": "rc = ecryptfs_parse_options(sbi, raw_data, &check_ruid);"
    },
    {
        "line": 25,
        "fullcodeline": "s = sget(fs_type, NULL, set_anon_super, flags, NULL);"
    },
    {
        "line": 31,
        "fullcodeline": "rc = bdi_setup_and_register(&sbi->bdi, \"ecryptfs\", BDI_CAP_MAP_COPY);"
    },
    {
        "line": 35,
        "fullcodeline": "ecryptfs_set_superblock_private(s, sbi);"
    },
    {
        "line": 36,
        "fullcodeline": "s->s_bdi = &sbi->bdi;"
    },
    {
        "line": 39,
        "fullcodeline": "sbi = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "s->s_op = &ecryptfs_sops;"
    },
    {
        "line": 41,
        "fullcodeline": "s->s_d_op = &ecryptfs_dops;"
    },
    {
        "line": 43,
        "fullcodeline": "err = \"Reading sb failed\";"
    },
    {
        "line": 44,
        "fullcodeline": "rc = kern_path(dev_name, LOOKUP_FOLLOW | LOOKUP_DIRECTORY, &path);"
    },
    {
        "line": 66,
        "fullcodeline": "ecryptfs_set_superblock_lower(s, path.dentry->d_sb);"
    },
    {
        "line": 73,
        "fullcodeline": "s->s_flags = flags & ~MS_POSIXACL;"
    },
    {
        "line": 74,
        "fullcodeline": "s->s_flags |= path.dentry->d_sb->s_flags & (MS_RDONLY | MS_POSIXACL);"
    },
    {
        "line": 78,
        "fullcodeline": "s->s_magic = ECRYPTFS_SUPER_MAGIC;"
    },
    {
        "line": 80,
        "fullcodeline": "inode = ecryptfs_get_inode(path.dentry->d_inode, s);"
    },
    {
        "line": 81,
        "fullcodeline": "rc = PTR_ERR(inode);"
    },
    {
        "line": 85,
        "fullcodeline": "s->s_root = d_make_root(inode);"
    },
    {
        "line": 91,
        "fullcodeline": "rc = -ENOMEM;"
    },
    {
        "line": 92,
        "fullcodeline": "root_info = kmem_cache_zalloc(ecryptfs_dentry_info_cache, GFP_KERNEL);"
    },
    {
        "line": 97,
        "fullcodeline": "ecryptfs_set_dentry_private(s->s_root, root_info);"
    },
    {
        "line": 98,
        "fullcodeline": "root_info->lower_path = path;"
    },
    {
        "line": 100,
        "fullcodeline": "s->s_flags |= MS_ACTIVE;"
    },
    {
        "line": 104,
        "fullcodeline": "path_put(&path);"
    },
    {
        "line": 106,
        "fullcodeline": "deactivate_locked_super(s);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!sbi) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (IS_ERR(s)) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (path.dentry->d_sb->s_type == &ecryptfs_fs_type) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (check_ruid && !uid_eq(path.dentry->d_inode->i_uid, current_uid())) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (IS_ERR(inode))"
    },
    {
        "line": 86,
        "fullcodeline": "if (!s->s_root) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (!root_info)"
    },
    {
        "line": 101,
        "fullcodeline": "return dget(s->s_root);"
    },
    {
        "line": 113,
        "fullcodeline": "return ERR_PTR(rc);"
    },
    {
        "line": 15,
        "fullcodeline": "rc = -ENOMEM;"
    },
    {
        "line": 21,
        "fullcodeline": "err = \"Error parsing options\";"
    },
    {
        "line": 27,
        "fullcodeline": "rc = PTR_ERR(s);"
    },
    {
        "line": 46,
        "fullcodeline": "ecryptfs_printk(KERN_WARNING, \"kern_path() failed\\n\");"
    },
    {
        "line": 50,
        "fullcodeline": "rc = -EINVAL;"
    },
    {
        "line": 58,
        "fullcodeline": "rc = -EPERM;"
    },
    {
        "line": 87,
        "fullcodeline": "rc = -ENOMEM;"
    },
    {
        "line": 109,
        "fullcodeline": "ecryptfs_destroy_mount_crypt_stat(&sbi->mount_crypt_stat);"
    },
    {
        "line": 110,
        "fullcodeline": "kmem_cache_free(ecryptfs_sb_info_cache, sbi);"
    }
]