[
    {
        "line": 5,
        "fullcodeline": "PicContext *s = avctx->priv_data;"
    },
    {
        "line": 6,
        "fullcodeline": "AVFrame *frame = data;"
    },
    {
        "line": 11,
        "fullcodeline": "bytestream2_init(&s->g, avpkt->data, avpkt->size);"
    },
    {
        "line": 19,
        "fullcodeline": "s->width       = bytestream2_get_le16u(&s->g);"
    },
    {
        "line": 20,
        "fullcodeline": "s->height      = bytestream2_get_le16u(&s->g);"
    },
    {
        "line": 21,
        "fullcodeline": "bytestream2_skip(&s->g, 4);"
    },
    {
        "line": 22,
        "fullcodeline": "tmp            = bytestream2_get_byteu(&s->g);"
    },
    {
        "line": 23,
        "fullcodeline": "bits_per_plane = tmp & 0xF;"
    },
    {
        "line": 24,
        "fullcodeline": "s->nb_planes   = (tmp >> 4) + 1;"
    },
    {
        "line": 25,
        "fullcodeline": "bpp            = bits_per_plane * s->nb_planes;"
    },
    {
        "line": 42,
        "fullcodeline": "avctx->pix_fmt = AV_PIX_FMT_PAL8;"
    },
    {
        "line": 54,
        "fullcodeline": "memset(frame->data[0], 0, s->height * frame->linesize[0]);"
    },
    {
        "line": 55,
        "fullcodeline": "frame->pict_type           = AV_PICTURE_TYPE_I;"
    },
    {
        "line": 56,
        "fullcodeline": "frame->palette_has_changed = 1;"
    },
    {
        "line": 58,
        "fullcodeline": "pos_after_pal = bytestream2_tell(&s->g) + esize;"
    },
    {
        "line": 98,
        "fullcodeline": "memset(palette + npal, 0, AVPALETTE_SIZE - npal * 4);"
    },
    {
        "line": 100,
        "fullcodeline": "bytestream2_seek(&s->g, pos_after_pal, SEEK_SET);"
    },
    {
        "line": 102,
        "fullcodeline": "val = 0;"
    },
    {
        "line": 103,
        "fullcodeline": "y = s->height - 1;"
    },
    {
        "line": 156,
        "fullcodeline": "*got_frame      = 1;"
    },
    {
        "line": 13,
        "fullcodeline": "if (bytestream2_get_bytes_left(&s->g) < 11)"
    },
    {
        "line": 16,
        "fullcodeline": "if (bytestream2_get_le16u(&s->g) != 0x1234)"
    },
    {
        "line": 26,
        "fullcodeline": "if (bits_per_plane > 8 || bpp < 1 || bpp > 32) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (bytestream2_peek_byte(&s->g) == 0xFF || bpp == 1 || bpp == 4 || bpp == 8) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (av_image_check_size(s->width, s->height, 0, avctx) < 0)"
    },
    {
        "line": 46,
        "fullcodeline": "if (s->width != avctx->width && s->height != avctx->height) {"
    },
    {
        "line": 52,
        "fullcodeline": "if ((ret = ff_get_buffer(avctx, frame, 0)) < 0)"
    },
    {
        "line": 60,
        "fullcodeline": "if (etype == 1 && esize > 1 && bytestream2_peek_byte(&s->g) < 6) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (bytestream2_get_le16(&s->g)) {"
    },
    {
        "line": 27,
        "fullcodeline": "avpriv_request_sample(avctx, \"Unsupported bit depth\");"
    },
    {
        "line": 32,
        "fullcodeline": "bytestream2_skip(&s->g, 2);"
    },
    {
        "line": 33,
        "fullcodeline": "etype = bytestream2_get_le16(&s->g);"
    },
    {
        "line": 34,
        "fullcodeline": "esize = bytestream2_get_le16(&s->g);"
    },
    {
        "line": 47,
        "fullcodeline": "ret = ff_set_dimensions(avctx, s->width, s->height);"
    },
    {
        "line": 61,
        "fullcodeline": "int idx = bytestream2_get_byte(&s->g);"
    },
    {
        "line": 62,
        "fullcodeline": "npal = 4;"
    },
    {
        "line": 105,
        "fullcodeline": "x = 0;"
    },
    {
        "line": 106,
        "fullcodeline": "plane = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "if (bytestream2_get_bytes_left(&s->g) < esize)"
    },
    {
        "line": 38,
        "fullcodeline": "etype = -1;"
    },
    {
        "line": 39,
        "fullcodeline": "esize = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "return -1;"
    },
    {
        "line": 48,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 63,
        "fullcodeline": "for (i = 0; i < npal; i++)"
    },
    {
        "line": 107,
        "fullcodeline": "while (bytestream2_get_bytes_left(&s->g) >= 6) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (x < avctx->width) {"
    },
    {
        "line": 65,
        "fullcodeline": "} else if (etype == 2) {"
    },
    {
        "line": 110,
        "fullcodeline": "t1        = bytestream2_get_bytes_left(&s->g);"
    },
    {
        "line": 111,
        "fullcodeline": "t2        = bytestream2_get_le16(&s->g);"
    },
    {
        "line": 112,
        "fullcodeline": "stop_size = t1 - FFMIN(t1, t2);"
    },
    {
        "line": 114,
        "fullcodeline": "bytestream2_skip(&s->g, 2);"
    },
    {
        "line": 115,
        "fullcodeline": "marker    = bytestream2_get_byte(&s->g);"
    },
    {
        "line": 141,
        "fullcodeline": "int run = (y + 1) * avctx->width - x;"
    },
    {
        "line": 148,
        "fullcodeline": "while (y >= 0 && bytestream2_get_bytes_left(&s->g) > 0) {"
    },
    {
        "line": 66,
        "fullcodeline": "npal = FFMIN(esize, 16);"
    },
    {
        "line": 117,
        "fullcodeline": "while (plane < s->nb_planes &&"
    },
    {
        "line": 142,
        "fullcodeline": "if (bits_per_plane == 8)"
    },
    {
        "line": 149,
        "fullcodeline": "memcpy(frame->data[0] + y * frame->linesize[0], s->g.buffer, FFMIN(avctx->width, bytestream2_get_bytes_left(&s->g)));"
    },
    {
        "line": 150,
        "fullcodeline": "bytestream2_skip(&s->g, avctx->width);"
    },
    {
        "line": 151,
        "fullcodeline": "y--;"
    },
    {
        "line": 67,
        "fullcodeline": "for (i = 0; i < npal; i++) {"
    },
    {
        "line": 118,
        "fullcodeline": "bytestream2_get_bytes_left(&s->g) > stop_size) {"
    },
    {
        "line": 119,
        "fullcodeline": "int run = 1;"
    },
    {
        "line": 120,
        "fullcodeline": "val = bytestream2_get_byte(&s->g);"
    },
    {
        "line": 143,
        "fullcodeline": "picmemset_8bpp(s, frame, val, run, &x, &y);"
    },
    {
        "line": 68,
        "fullcodeline": "int pal_idx = bytestream2_get_byte(&s->g);"
    },
    {
        "line": 71,
        "fullcodeline": "} else if (etype == 3) {"
    },
    {
        "line": 121,
        "fullcodeline": "if (val == marker) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (!bytestream2_get_bytes_left(&s->g))"
    },
    {
        "line": 130,
        "fullcodeline": "if (bits_per_plane == 8) {"
    },
    {
        "line": 145,
        "fullcodeline": "picmemset(s, frame, val, run / (8 / bits_per_plane), &x, &y, &plane, bits_per_plane);"
    },
    {
        "line": 72,
        "fullcodeline": "npal = FFMIN(esize, 16);"
    },
    {
        "line": 122,
        "fullcodeline": "run = bytestream2_get_byte(&s->g);"
    },
    {
        "line": 125,
        "fullcodeline": "val = bytestream2_get_byte(&s->g);"
    },
    {
        "line": 131,
        "fullcodeline": "picmemset_8bpp(s, frame, val, run, &x, &y);"
    },
    {
        "line": 69,
        "fullcodeline": "palette[i]  = ff_cga_palette[FFMIN(pal_idx, 15)];"
    },
    {
        "line": 73,
        "fullcodeline": "for (i = 0; i < npal; i++) {"
    },
    {
        "line": 123,
        "fullcodeline": "if (run == 0)"
    },
    {
        "line": 132,
        "fullcodeline": "if (y < 0)"
    },
    {
        "line": 135,
        "fullcodeline": "picmemset(s, frame, val, run, &x, &y, &plane, bits_per_plane);"
    },
    {
        "line": 74,
        "fullcodeline": "int pal_idx = bytestream2_get_byte(&s->g);"
    },
    {
        "line": 77,
        "fullcodeline": "} else if (etype == 4 || etype == 5) {"
    },
    {
        "line": 124,
        "fullcodeline": "run = bytestream2_get_le16(&s->g);"
    },
    {
        "line": 78,
        "fullcodeline": "npal = FFMIN(esize / 3, 256);"
    },
    {
        "line": 75,
        "fullcodeline": "palette[i]  = ff_ega_palette[FFMIN(pal_idx, 63)];"
    },
    {
        "line": 79,
        "fullcodeline": "for (i = 0; i < npal; i++) {"
    },
    {
        "line": 80,
        "fullcodeline": "palette[i] = bytestream2_get_be24(&s->g) << 2;"
    },
    {
        "line": 81,
        "fullcodeline": "palette[i] |= 0xFFU << 24 | palette[i] >> 6 & 0x30303;"
    },
    {
        "line": 84,
        "fullcodeline": "if (bpp == 1) {"
    },
    {
        "line": 85,
        "fullcodeline": "npal = 2;"
    },
    {
        "line": 86,
        "fullcodeline": "palette[0] = 0xFF000000;"
    },
    {
        "line": 87,
        "fullcodeline": "palette[1] = 0xFFFFFFFF;"
    },
    {
        "line": 88,
        "fullcodeline": "} else if (bpp == 2) {"
    },
    {
        "line": 89,
        "fullcodeline": "npal = 4;"
    },
    {
        "line": 90,
        "fullcodeline": "for (i = 0; i < npal; i++)"
    },
    {
        "line": 93,
        "fullcodeline": "npal = 16;"
    },
    {
        "line": 94,
        "fullcodeline": "memcpy(palette, ff_cga_palette, npal * 4);"
    }
]