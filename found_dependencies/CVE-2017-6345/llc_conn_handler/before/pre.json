[
    {
        "line": 6,
        "fullcodeline": "llc_pdu_decode_sa(skb, saddr.mac);"
    },
    {
        "line": 7,
        "fullcodeline": "llc_pdu_decode_ssap(skb, &saddr.lsap);"
    },
    {
        "line": 8,
        "fullcodeline": "llc_pdu_decode_da(skb, daddr.mac);"
    },
    {
        "line": 9,
        "fullcodeline": "llc_pdu_decode_dsap(skb, &daddr.lsap);"
    },
    {
        "line": 11,
        "fullcodeline": "sk = __llc_lookup(sap, &saddr, &daddr);"
    },
    {
        "line": 15,
        "fullcodeline": "bh_lock_sock(sk);"
    },
    {
        "line": 49,
        "fullcodeline": "bh_unlock_sock(sk);"
    },
    {
        "line": 50,
        "fullcodeline": "sock_put(sk);"
    },
    {
        "line": 56,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!sk)"
    },
    {
        "line": 24,
        "fullcodeline": "if (unlikely(sk->sk_state == TCP_LISTEN)) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (!sock_owned_by_user(sk))"
    },
    {
        "line": 25,
        "fullcodeline": "struct sock *newsk = llc_create_incoming_sock(sk, skb->dev,"
    },
    {
        "line": 29,
        "fullcodeline": "skb_set_owner_r(skb, newsk);"
    },
    {
        "line": 41,
        "fullcodeline": "llc_conn_rcv(sk, skb);"
    },
    {
        "line": 27,
        "fullcodeline": "if (!newsk)"
    },
    {
        "line": 38,
        "fullcodeline": "skb->sk = sk;"
    },
    {
        "line": 43,
        "fullcodeline": "dprintk(\"%s: adding to backlog...\\n\", __func__);"
    },
    {
        "line": 44,
        "fullcodeline": "llc_set_backlog_type(skb, LLC_PACKET);"
    },
    {
        "line": 45,
        "fullcodeline": "if (sk_add_backlog(sk, skb, sk->sk_rcvbuf))"
    }
]