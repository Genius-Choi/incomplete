[
    {
        "line": 5,
        "fullcodeline": "int code = sip_method_unknown;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t n = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "*ss = (s + n);"
    },
    {
        "line": 48,
        "fullcodeline": "if (IS_NON_WS(s[n]))"
    },
    {
        "line": 52,
        "fullcodeline": "if (code == sip_method_unknown) {"
    },
    {
        "line": 67,
        "fullcodeline": "while (IS_LWS(s[n]))"
    },
    {
        "line": 68,
        "fullcodeline": "n++;"
    },
    {
        "line": 73,
        "fullcodeline": "return (sip_method_t)code;"
    },
    {
        "line": 50,
        "fullcodeline": "code = sip_method_unknown;"
    },
    {
        "line": 53,
        "fullcodeline": "name = s;"
    },
    {
        "line": 71,
        "fullcodeline": "if (return_name) *return_name = name;"
    },
    {
        "line": 11,
        "fullcodeline": "case 'A': if (MATCH(s, \"ACK\")) code = sip_method_ack; break;"
    },
    {
        "line": 12,
        "fullcodeline": "case 'B': if (MATCH(s, \"BYE\")) code = sip_method_bye; break;"
    },
    {
        "line": 14,
        "fullcodeline": "if (MATCH(s, \"CANCEL\"))"
    },
    {
        "line": 18,
        "fullcodeline": "if (MATCH(s, \"INVITE\"))"
    },
    {
        "line": 23,
        "fullcodeline": "case 'M': if (MATCH(s, \"MESSAGE\")) code = sip_method_message; break;"
    },
    {
        "line": 24,
        "fullcodeline": "case 'N': if (MATCH(s, \"NOTIFY\")) code = sip_method_notify; break;"
    },
    {
        "line": 25,
        "fullcodeline": "case 'O': if (MATCH(s, \"OPTIONS\")) code = sip_method_options; break;"
    },
    {
        "line": 27,
        "fullcodeline": "if (MATCH(s, \"PRACK\")) code = sip_method_prack;"
    },
    {
        "line": 31,
        "fullcodeline": "if (MATCH(s, \"REGISTER\"))"
    },
    {
        "line": 37,
        "fullcodeline": "if (MATCH(s, \"SUBSCRIBE\"))"
    },
    {
        "line": 41,
        "fullcodeline": "if (MATCH(s, \"UPDATE\"))"
    },
    {
        "line": 54,
        "fullcodeline": "for (n = 0; IS_UNRESERVED(s[n]); n++)"
    },
    {
        "line": 15,
        "fullcodeline": "code = sip_method_cancel;"
    },
    {
        "line": 19,
        "fullcodeline": "code = sip_method_invite;"
    },
    {
        "line": 32,
        "fullcodeline": "code = sip_method_register;"
    },
    {
        "line": 38,
        "fullcodeline": "code = sip_method_subscribe;"
    },
    {
        "line": 42,
        "fullcodeline": "code = sip_method_update;"
    },
    {
        "line": 57,
        "fullcodeline": "if (!IS_LWS(s[n]))"
    },
    {
        "line": 20,
        "fullcodeline": "else if (MATCH(s, \"INFO\"))"
    },
    {
        "line": 28,
        "fullcodeline": "else if (MATCH(s, \"PUBLISH\")) code = sip_method_publish;"
    },
    {
        "line": 33,
        "fullcodeline": "else if (MATCH(s, \"REFER\"))"
    },
    {
        "line": 60,
        "fullcodeline": "s[n++] = '\\0';"
    },
    {
        "line": 21,
        "fullcodeline": "code = sip_method_info;"
    },
    {
        "line": 34,
        "fullcodeline": "code = sip_method_refer;"
    }
]