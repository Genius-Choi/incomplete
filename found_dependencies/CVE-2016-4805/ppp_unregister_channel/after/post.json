[
    {
        "line": 3,
        "fullcodeline": "struct channel *pch = chan->ppp;"
    },
    {
        "line": 9,
        "fullcodeline": "chan->ppp = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "down_write(&pch->chan_sem);"
    },
    {
        "line": 16,
        "fullcodeline": "spin_lock_bh(&pch->downl);"
    },
    {
        "line": 17,
        "fullcodeline": "pch->chan = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "spin_unlock_bh(&pch->downl);"
    },
    {
        "line": 19,
        "fullcodeline": "up_write(&pch->chan_sem);"
    },
    {
        "line": 20,
        "fullcodeline": "ppp_disconnect_channel(pch);"
    },
    {
        "line": 22,
        "fullcodeline": "pn = ppp_pernet(pch->chan_net);"
    },
    {
        "line": 23,
        "fullcodeline": "spin_lock_bh(&pn->all_channels_lock);"
    },
    {
        "line": 24,
        "fullcodeline": "list_del(&pch->list);"
    },
    {
        "line": 25,
        "fullcodeline": "spin_unlock_bh(&pn->all_channels_lock);"
    },
    {
        "line": 26,
        "fullcodeline": "put_net(pch->chan_net);"
    },
    {
        "line": 27,
        "fullcodeline": "pch->chan_net = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "pch->file.dead = 1;"
    },
    {
        "line": 6,
        "fullcodeline": "if (!pch)"
    },
    {
        "line": 32,
        "fullcodeline": "ppp_destroy_channel(pch);"
    }
]