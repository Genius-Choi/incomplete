[
    {
        "line": 19,
        "fullcodeline": "ctx = (krb5_gss_ctx_id_rec *)context_handle;"
    },
    {
        "line": 30,
        "fullcodeline": "context = ctx->k5_context;"
    },
    {
        "line": 51,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "if (qop_req != 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (!ctx->established) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (conf_req_flag && kg_integ_only_iov(iov, iov_count)) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "*minor_status = (OM_uint32)G_UNKNOWN_QOP;"
    },
    {
        "line": 21,
        "fullcodeline": "*minor_status = KG_CTX_INCOMPLETE;"
    },
    {
        "line": 27,
        "fullcodeline": "conf_req_flag = FALSE;"
    },
    {
        "line": 33,
        "fullcodeline": "code = make_seal_token_v1_iov(context, ctx, conf_req_flag,"
    },
    {
        "line": 37,
        "fullcodeline": "code = gss_krb5int_make_seal_token_v3_iov(context, ctx, conf_req_flag,"
    },
    {
        "line": 41,
        "fullcodeline": "code = G_UNKNOWN_QOP;"
    },
    {
        "line": 46,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 47,
        "fullcodeline": "save_error_info(*minor_status, context);"
    }
]