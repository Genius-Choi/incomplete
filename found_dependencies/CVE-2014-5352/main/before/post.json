[
    {
        "line": 10,
        "fullcodeline": "unsigned char k1buf[32], k2buf[32], outbuf[44];"
    },
    {
        "line": 20,
        "fullcodeline": "context = (gss_ctx_id_t)&uctx;"
    },
    {
        "line": 21,
        "fullcodeline": "uctx.mech_type = &mech_krb5;"
    },
    {
        "line": 22,
        "fullcodeline": "uctx.internal_ctx_id = (gss_ctx_id_t)&kgctx;"
    },
    {
        "line": 23,
        "fullcodeline": "kgctx.k5_context = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "kgctx.have_acceptor_subkey = 1;"
    },
    {
        "line": 25,
        "fullcodeline": "kb1.contents = k1buf;"
    },
    {
        "line": 26,
        "fullcodeline": "kb2.contents = k2buf;"
    },
    {
        "line": 27,
        "fullcodeline": "for (i = 0; i < sizeof(tests) / sizeof(*tests); i++) {"
    },
    {
        "line": 30,
        "fullcodeline": "kb1.length = fromhex(tests[i].key1, k1buf);"
    },
    {
        "line": 31,
        "fullcodeline": "check_k5err(NULL, \"create_key\", krb5_k_create_key(NULL, &kb1, &k1));"
    },
    {
        "line": 32,
        "fullcodeline": "kgctx.subkey = k1;"
    },
    {
        "line": 34,
        "fullcodeline": "kb2.length = fromhex(tests[i].key2, k2buf);"
    },
    {
        "line": 35,
        "fullcodeline": "check_k5err(NULL, \"create_key\", krb5_k_create_key(NULL, &kb2, &k2));"
    },
    {
        "line": 36,
        "fullcodeline": "kgctx.acceptor_subkey = k2;"
    },
    {
        "line": 40,
        "fullcodeline": "in.length = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "in.value = NULL;"
    },
    {
        "line": 42,
        "fullcodeline": "major = gss_pseudo_random(&minor, context, GSS_C_PRF_KEY_PARTIAL, &in,"
    },
    {
        "line": 44,
        "fullcodeline": "check_gsserr(\"gss_pseudo_random\", major, minor);"
    },
    {
        "line": 45,
        "fullcodeline": "(void)fromhex(tests[i].out1, outbuf);"
    },
    {
        "line": 46,
        "fullcodeline": "assert(out.length == 44 && memcmp(out.value, outbuf, 44) == 0);"
    },
    {
        "line": 47,
        "fullcodeline": "(void)gss_release_buffer(&minor, &out);"
    },
    {
        "line": 51,
        "fullcodeline": "in.length = strlen(inputstr);"
    },
    {
        "line": 52,
        "fullcodeline": "in.value = (char *)inputstr;"
    },
    {
        "line": 53,
        "fullcodeline": "major = gss_pseudo_random(&minor, context, GSS_C_PRF_KEY_FULL, &in, 44,"
    },
    {
        "line": 55,
        "fullcodeline": "check_gsserr(\"gss_pseudo_random\", major, minor);"
    },
    {
        "line": 56,
        "fullcodeline": "(void)fromhex(tests[i].out2, outbuf);"
    },
    {
        "line": 57,
        "fullcodeline": "assert(out.length == 44 && memcmp(out.value, outbuf, 44) == 0);"
    },
    {
        "line": 58,
        "fullcodeline": "(void)gss_release_buffer(&minor, &out);"
    },
    {
        "line": 61,
        "fullcodeline": "major = gss_pseudo_random(&minor, context, GSS_C_PRF_KEY_FULL, &in, 0,"
    },
    {
        "line": 63,
        "fullcodeline": "check_gsserr(\"gss_pseudo_random\", major, minor);"
    },
    {
        "line": 64,
        "fullcodeline": "assert(out.length == 0);"
    },
    {
        "line": 65,
        "fullcodeline": "(void)gss_release_buffer(&minor, &out);"
    },
    {
        "line": 67,
        "fullcodeline": "krb5_k_free_key(NULL, k1);"
    },
    {
        "line": 68,
        "fullcodeline": "krb5_k_free_key(NULL, k2);"
    }
]