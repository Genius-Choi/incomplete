[
    {
        "line": 9,
        "fullcodeline": "krb5_key key = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "prf_out->length = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "prf_out->value = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "t.length = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "t.data = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "ns.length = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "ns.data = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "ctx = (krb5_gss_ctx_id_t)context;"
    },
    {
        "line": 51,
        "fullcodeline": "prf_out->value = k5alloc(desired_output_len, &code);"
    },
    {
        "line": 56,
        "fullcodeline": "prf_out->length = desired_output_len;"
    },
    {
        "line": 58,
        "fullcodeline": "code = krb5_c_prf_length(ctx->k5_context,"
    },
    {
        "line": 64,
        "fullcodeline": "ns.length = 4 + prf_in->length;"
    },
    {
        "line": 65,
        "fullcodeline": "ns.data = k5alloc(ns.length, &code);"
    },
    {
        "line": 71,
        "fullcodeline": "t.length = prflen;"
    },
    {
        "line": 72,
        "fullcodeline": "t.data = k5alloc(t.length, &code);"
    },
    {
        "line": 76,
        "fullcodeline": "memcpy(ns.data + 4, prf_in->value, prf_in->length);"
    },
    {
        "line": 77,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 78,
        "fullcodeline": "p = (unsigned char *)prf_out->value;"
    },
    {
        "line": 96,
        "fullcodeline": "krb5_free_data_contents(ctx->k5_context, &ns);"
    },
    {
        "line": 97,
        "fullcodeline": "krb5_free_data_contents(ctx->k5_context, &t);"
    },
    {
        "line": 99,
        "fullcodeline": "*minor_status = (OM_uint32)code;"
    },
    {
        "line": 43,
        "fullcodeline": "if (key == NULL) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (desired_output_len == 0)"
    },
    {
        "line": 52,
        "fullcodeline": "if (prf_out->value == NULL) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (code != 0)"
    },
    {
        "line": 66,
        "fullcodeline": "if (ns.data == NULL) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (t.data == NULL)"
    },
    {
        "line": 79,
        "fullcodeline": "while (desired_output_len > 0) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (code != 0)"
    },
    {
        "line": 100,
        "fullcodeline": "return (code == 0) ? GSS_S_COMPLETE : GSS_S_FAILURE;"
    },
    {
        "line": 36,
        "fullcodeline": "key = ctx->subkey;"
    },
    {
        "line": 39,
        "fullcodeline": "code = EINVAL;"
    },
    {
        "line": 44,
        "fullcodeline": "code = EINVAL;"
    },
    {
        "line": 53,
        "fullcodeline": "code = KG_INPUT_TOO_LONG;"
    },
    {
        "line": 59,
        "fullcodeline": "krb5_k_key_enctype(ctx->k5_context, key),"
    },
    {
        "line": 67,
        "fullcodeline": "code = KG_INPUT_TOO_LONG;"
    },
    {
        "line": 80,
        "fullcodeline": "store_32_be(i, ns.data);"
    },
    {
        "line": 82,
        "fullcodeline": "code = krb5_k_prf(ctx->k5_context, key, &ns, &t);"
    },
    {
        "line": 86,
        "fullcodeline": "memcpy(p, t.data, MIN(t.length, desired_output_len));"
    },
    {
        "line": 88,
        "fullcodeline": "p += t.length;"
    },
    {
        "line": 89,
        "fullcodeline": "desired_output_len -= t.length;"
    },
    {
        "line": 90,
        "fullcodeline": "i++;"
    },
    {
        "line": 95,
        "fullcodeline": "gss_release_buffer(&minor, prf_out);"
    },
    {
        "line": 83,
        "fullcodeline": "if (code != 0)"
    },
    {
        "line": 31,
        "fullcodeline": "key = ctx->acceptor_subkey;"
    }
]