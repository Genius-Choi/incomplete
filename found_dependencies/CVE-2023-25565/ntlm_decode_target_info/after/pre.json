[
    {
        "line": 10,
        "fullcodeline": "uint16_t av_id = (uint16_t)-1;"
    },
    {
        "line": 11,
        "fullcodeline": "uint16_t av_len = (uint16_t)-1;"
    },
    {
        "line": 12,
        "fullcodeline": "struct ntlm_buffer sh = { NULL, 0 };"
    },
    {
        "line": 13,
        "fullcodeline": "struct ntlm_buffer cb = { NULL, 0 };"
    },
    {
        "line": 14,
        "fullcodeline": "char *nb_computer = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "char *nb_domain = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "char *dns_computer = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "char *dns_domain = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "char *dns_tree = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "char *av_target = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "size_t data_offs = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "uint64_t timestamp = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "uint32_t flags = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "while (data_offs + 4 <= buffer->length) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (av_id != MSV_AV_EOL || av_len != 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "av_pair = (struct wire_av_pair *)&buffer->data[data_offs];"
    },
    {
        "line": 27,
        "fullcodeline": "data_offs += 4;"
    },
    {
        "line": 28,
        "fullcodeline": "av_id = le16toh(av_pair->av_id);"
    },
    {
        "line": 29,
        "fullcodeline": "av_len = le16toh(av_pair->av_len);"
    },
    {
        "line": 34,
        "fullcodeline": "data_offs += av_len;"
    },
    {
        "line": 95,
        "fullcodeline": "ret = ERR_DECODE;"
    },
    {
        "line": 100,
        "fullcodeline": "safefree(nb_computer);"
    },
    {
        "line": 101,
        "fullcodeline": "safefree(nb_domain);"
    },
    {
        "line": 102,
        "fullcodeline": "safefree(dns_computer);"
    },
    {
        "line": 103,
        "fullcodeline": "safefree(dns_domain);"
    },
    {
        "line": 104,
        "fullcodeline": "safefree(dns_tree);"
    },
    {
        "line": 105,
        "fullcodeline": "safefree(av_target);"
    },
    {
        "line": 30,
        "fullcodeline": "if (av_len > buffer->length - data_offs) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (av_id == MSV_AV_EOL) break;"
    },
    {
        "line": 31,
        "fullcodeline": "ret = ERR_DECODE;"
    },
    {
        "line": 39,
        "fullcodeline": "cb.data = av_pair->value;"
    },
    {
        "line": 40,
        "fullcodeline": "cb.length = av_len;"
    },
    {
        "line": 44,
        "fullcodeline": "ret = ntlm_decode_av_pair_u16l_str(ctx, av_pair, &av_target);"
    },
    {
        "line": 49,
        "fullcodeline": "sh.data = av_pair->value;"
    },
    {
        "line": 50,
        "fullcodeline": "sh.length = av_len;"
    },
    {
        "line": 54,
        "fullcodeline": "memcpy(&timestamp, av_pair->value, sizeof(timestamp));"
    },
    {
        "line": 55,
        "fullcodeline": "timestamp = le64toh(timestamp);"
    },
    {
        "line": 59,
        "fullcodeline": "memcpy(&flags, av_pair->value, sizeof(flags));"
    },
    {
        "line": 60,
        "fullcodeline": "flags = le32toh(flags);"
    },
    {
        "line": 64,
        "fullcodeline": "ret = ntlm_decode_av_pair_u16l_str(ctx, av_pair, &dns_tree);"
    },
    {
        "line": 69,
        "fullcodeline": "ret = ntlm_decode_av_pair_u16l_str(ctx, av_pair, &dns_domain);"
    },
    {
        "line": 74,
        "fullcodeline": "ret = ntlm_decode_av_pair_u16l_str(ctx, av_pair, &dns_computer);"
    },
    {
        "line": 79,
        "fullcodeline": "ret = ntlm_decode_av_pair_u16l_str(ctx, av_pair, &nb_domain);"
    },
    {
        "line": 84,
        "fullcodeline": "ret = ntlm_decode_av_pair_u16l_str(ctx, av_pair, &nb_computer);"
    },
    {
        "line": 38,
        "fullcodeline": "if (!av_cb) continue;"
    },
    {
        "line": 43,
        "fullcodeline": "if (!av_target_name) continue;"
    },
    {
        "line": 48,
        "fullcodeline": "if (!av_single_host) continue;"
    },
    {
        "line": 53,
        "fullcodeline": "if (!av_timestamp) continue;"
    },
    {
        "line": 58,
        "fullcodeline": "if (!av_flags) continue;"
    },
    {
        "line": 63,
        "fullcodeline": "if (!dns_tree_name) continue;"
    },
    {
        "line": 68,
        "fullcodeline": "if (!dns_domain_name) continue;"
    },
    {
        "line": 73,
        "fullcodeline": "if (!dns_computer_name) continue;"
    },
    {
        "line": 78,
        "fullcodeline": "if (!nb_domain_name) continue;"
    },
    {
        "line": 83,
        "fullcodeline": "if (!nb_computer_name) continue;"
    },
    {
        "line": 107,
        "fullcodeline": "if (nb_computer_name) *nb_computer_name = nb_computer;"
    },
    {
        "line": 108,
        "fullcodeline": "if (nb_domain_name) *nb_domain_name = nb_domain;"
    },
    {
        "line": 109,
        "fullcodeline": "if (dns_computer_name) *dns_computer_name = dns_computer;"
    },
    {
        "line": 110,
        "fullcodeline": "if (dns_domain_name) *dns_domain_name = dns_domain;"
    },
    {
        "line": 111,
        "fullcodeline": "if (dns_tree_name) *dns_tree_name = dns_tree;"
    },
    {
        "line": 112,
        "fullcodeline": "if (av_target_name) *av_target_name = av_target;"
    },
    {
        "line": 113,
        "fullcodeline": "if (av_timestamp) *av_timestamp = timestamp;"
    },
    {
        "line": 114,
        "fullcodeline": "if (av_single_host) *av_single_host = sh;"
    },
    {
        "line": 115,
        "fullcodeline": "if (av_flags) *av_flags = flags;"
    },
    {
        "line": 116,
        "fullcodeline": "if (av_cb) *av_cb = cb;"
    }
]