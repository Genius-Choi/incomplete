[
    {
        "line": 14,
        "fullcodeline": "struct tmpnode *found = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "ASSERT(RW_WRITE_HELD(&dir->tn_rwlock));"
    },
    {
        "line": 22,
        "fullcodeline": "ASSERT(dir->tn_type == VDIR);"
    },
    {
        "line": 99,
        "fullcodeline": "tdp = tmpfs_hash_lookup(name, dir, 1, &found);"
    },
    {
        "line": 28,
        "fullcodeline": "for (s = name; *s; s++)"
    },
    {
        "line": 32,
        "fullcodeline": "if (name[0] == '\\0')"
    },
    {
        "line": 39,
        "fullcodeline": "if (op == DE_LINK || op == DE_RENAME) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (dir->tn_nlink == 0) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (op == DE_RENAME) {"
    },
    {
        "line": 180,
        "fullcodeline": "if (error && (op == DE_LINK || op == DE_RENAME)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (*s == '/')"
    },
    {
        "line": 33,
        "fullcodeline": "panic(\"tdirenter: NULL name\");"
    },
    {
        "line": 42,
        "fullcodeline": "mutex_enter(&tp->tn_tlock);"
    },
    {
        "line": 56,
        "fullcodeline": "tp->tn_nlink++;"
    },
    {
        "line": 57,
        "fullcodeline": "gethrestime(&tp->tn_ctime);"
    },
    {
        "line": 58,
        "fullcodeline": "mutex_exit(&tp->tn_tlock);"
    },
    {
        "line": 72,
        "fullcodeline": "error = ENOENT;"
    },
    {
        "line": 102,
        "fullcodeline": "ASSERT(found);"
    },
    {
        "line": 184,
        "fullcodeline": "DECR_COUNT(&tp->tn_nlink, &tp->tn_tlock);"
    },
    {
        "line": 185,
        "fullcodeline": "gethrestime(&tp->tn_ctime);"
    },
    {
        "line": 40,
        "fullcodeline": "if (tp != dir)"
    },
    {
        "line": 43,
        "fullcodeline": "if (tp->tn_nlink == 0) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (tp->tn_nlink == MAXLINK) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (tp != dir)"
    },
    {
        "line": 84,
        "fullcodeline": "if (tp == dir) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (tp->tn_type == VDIR) {"
    },
    {
        "line": 41,
        "fullcodeline": "rw_enter(&tp->tn_rwlock, RW_WRITER);"
    },
    {
        "line": 44,
        "fullcodeline": "mutex_exit(&tp->tn_tlock);"
    },
    {
        "line": 51,
        "fullcodeline": "mutex_exit(&tp->tn_tlock);"
    },
    {
        "line": 60,
        "fullcodeline": "rw_exit(&tp->tn_rwlock);"
    },
    {
        "line": 85,
        "fullcodeline": "error = EINVAL;"
    },
    {
        "line": 115,
        "fullcodeline": "error = tdirrename(fromparent, tp,"
    },
    {
        "line": 124,
        "fullcodeline": "tmpnode_rele(found);"
    },
    {
        "line": 131,
        "fullcodeline": "error = EEXIST;"
    },
    {
        "line": 132,
        "fullcodeline": "tmpnode_rele(found);"
    },
    {
        "line": 141,
        "fullcodeline": "if (error = tmp_taccess(dir, VWRITE, cred))"
    },
    {
        "line": 143,
        "fullcodeline": "if (op == DE_CREATE || op == DE_MKDIR) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (error = tdiraddentry(dir, tp, name, op, fromparent)) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (tp != dir)"
    },
    {
        "line": 52,
        "fullcodeline": "if (tp != dir)"
    },
    {
        "line": 89,
        "fullcodeline": "if ((fromparent != dir) &&"
    },
    {
        "line": 117,
        "fullcodeline": "if (error == 0) {"
    },
    {
        "line": 147,
        "fullcodeline": "error = tdirmaketnode(dir, tm, va, op, &tp, cred);"
    },
    {
        "line": 46,
        "fullcodeline": "rw_exit(&tp->tn_rwlock);"
    },
    {
        "line": 53,
        "fullcodeline": "rw_exit(&tp->tn_rwlock);"
    },
    {
        "line": 90,
        "fullcodeline": "(error = tdircheckpath(tp, dir, cred))) {"
    },
    {
        "line": 107,
        "fullcodeline": "*tpp = found;"
    },
    {
        "line": 108,
        "fullcodeline": "error = EEXIST;"
    },
    {
        "line": 152,
        "fullcodeline": "if (op == DE_CREATE || op == DE_MKDIR) {"
    },
    {
        "line": 110,
        "fullcodeline": "tmpnode_rele(found);"
    },
    {
        "line": 118,
        "fullcodeline": "if (found != NULL) {"
    },
    {
        "line": 156,
        "fullcodeline": "rw_enter(&tp->tn_rwlock, RW_WRITER);"
    },
    {
        "line": 164,
        "fullcodeline": "mutex_enter(&tp->tn_tlock);"
    },
    {
        "line": 165,
        "fullcodeline": "tp->tn_nlink = 0;"
    },
    {
        "line": 166,
        "fullcodeline": "mutex_exit(&tp->tn_tlock);"
    },
    {
        "line": 167,
        "fullcodeline": "gethrestime(&tp->tn_ctime);"
    },
    {
        "line": 168,
        "fullcodeline": "rw_exit(&tp->tn_rwlock);"
    },
    {
        "line": 169,
        "fullcodeline": "tmpnode_rele(tp);"
    },
    {
        "line": 170,
        "fullcodeline": "tp = NULL;"
    },
    {
        "line": 119,
        "fullcodeline": "vnevent_rename_dest(TNTOV(found),"
    },
    {
        "line": 157,
        "fullcodeline": "if ((tp->tn_type) == VDIR) {"
    },
    {
        "line": 173,
        "fullcodeline": "*tpp = tp;"
    },
    {
        "line": 120,
        "fullcodeline": "TNTOV(dir), name, ctp);"
    },
    {
        "line": 158,
        "fullcodeline": "ASSERT(tdp == NULL);"
    },
    {
        "line": 162,
        "fullcodeline": "tdirtrunc(tp);"
    },
    {
        "line": 174,
        "fullcodeline": "} else if (op == DE_CREATE || op == DE_MKDIR) {"
    },
    {
        "line": 175,
        "fullcodeline": "tmpnode_rele(tp);"
    }
]