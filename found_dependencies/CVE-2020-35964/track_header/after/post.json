[
    {
        "line": 7,
        "fullcodeline": "AVIOContext pb0, *pb = &pb0;"
    },
    {
        "line": 9,
        "fullcodeline": "ffio_init_context(pb, buf, size, 0, NULL, NULL, NULL, NULL);"
    },
    {
        "line": 11,
        "fullcodeline": "ffio_read_varlen(pb); // track_header_len"
    },
    {
        "line": 12,
        "fullcodeline": "avio_r8(pb); // '1'"
    },
    {
        "line": 14,
        "fullcodeline": "val_1 = ffio_read_varlen(pb);"
    },
    {
        "line": 28,
        "fullcodeline": "avio_r8(pb); // num_streams"
    },
    {
        "line": 30,
        "fullcodeline": "off = avio_tell(pb);"
    },
    {
        "line": 31,
        "fullcodeline": "off += ffio_read_varlen(pb); // val_5"
    },
    {
        "line": 33,
        "fullcodeline": "avio_r8(pb); // '2'"
    },
    {
        "line": 34,
        "fullcodeline": "num_video = avio_r8(pb);"
    },
    {
        "line": 36,
        "fullcodeline": "avio_seek(pb, off, SEEK_SET);"
    },
    {
        "line": 70,
        "fullcodeline": "off = avio_tell(pb);"
    },
    {
        "line": 71,
        "fullcodeline": "off += ffio_read_varlen(pb); // val_10"
    },
    {
        "line": 72,
        "fullcodeline": "avio_r8(pb); // '4'"
    },
    {
        "line": 73,
        "fullcodeline": "viv->num_audio = avio_r8(pb);"
    },
    {
        "line": 74,
        "fullcodeline": "avio_seek(pb, off, SEEK_SET);"
    },
    {
        "line": 16,
        "fullcodeline": "for (i=0;i<val_1;i++) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (num_video != 1) {"
    },
    {
        "line": 42,
        "fullcodeline": "for (i = 0; i < num_video; i++) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (viv->num_audio != 1)"
    },
    {
        "line": 79,
        "fullcodeline": "for(i=0;i<viv->num_audio;i++) {"
    },
    {
        "line": 17,
        "fullcodeline": "int c = avio_r8(pb);"
    },
    {
        "line": 38,
        "fullcodeline": "av_log(s, AV_LOG_ERROR, \"number of video tracks %d is not 1\\n\", num_video);"
    },
    {
        "line": 43,
        "fullcodeline": "AVStream *st = avformat_new_stream(s, NULL);"
    },
    {
        "line": 49,
        "fullcodeline": "st->id = i;"
    },
    {
        "line": 51,
        "fullcodeline": "st->codecpar->codec_type = AVMEDIA_TYPE_VIDEO;"
    },
    {
        "line": 52,
        "fullcodeline": "st->codecpar->codec_id = AV_CODEC_ID_VP6;"
    },
    {
        "line": 54,
        "fullcodeline": "off = avio_tell(pb);"
    },
    {
        "line": 55,
        "fullcodeline": "off += ffio_read_varlen(pb);"
    },
    {
        "line": 56,
        "fullcodeline": "avio_r8(pb); // '3'"
    },
    {
        "line": 57,
        "fullcodeline": "avio_r8(pb); // val_7"
    },
    {
        "line": 58,
        "fullcodeline": "num = avio_rl32(pb); // frame_time"
    },
    {
        "line": 59,
        "fullcodeline": "den = avio_rl32(pb); // time_base"
    },
    {
        "line": 60,
        "fullcodeline": "avpriv_set_pts_info(st, 64, num, den);"
    },
    {
        "line": 61,
        "fullcodeline": "st->nb_frames = avio_rl32(pb); // n frames"
    },
    {
        "line": 62,
        "fullcodeline": "st->codecpar->width = avio_rl16(pb); // width"
    },
    {
        "line": 63,
        "fullcodeline": "st->codecpar->height = avio_rl16(pb); // height"
    },
    {
        "line": 64,
        "fullcodeline": "avio_r8(pb); // val_8"
    },
    {
        "line": 65,
        "fullcodeline": "avio_rl32(pb); // val_9"
    },
    {
        "line": 67,
        "fullcodeline": "avio_seek(pb, off, SEEK_SET);"
    },
    {
        "line": 77,
        "fullcodeline": "av_log(s, AV_LOG_WARNING, \"number of audio tracks %d is not 1\\n\", viv->num_audio);"
    },
    {
        "line": 81,
        "fullcodeline": "AVStream *st = avformat_new_stream(s, NULL);"
    },
    {
        "line": 85,
        "fullcodeline": "st->id = num_video + i;"
    },
    {
        "line": 87,
        "fullcodeline": "st->codecpar->codec_type = AVMEDIA_TYPE_AUDIO;"
    },
    {
        "line": 88,
        "fullcodeline": "st->codecpar->codec_id = AV_CODEC_ID_VORBIS;"
    },
    {
        "line": 90,
        "fullcodeline": "off = avio_tell(pb);"
    },
    {
        "line": 91,
        "fullcodeline": "off += ffio_read_varlen(pb); // length"
    },
    {
        "line": 92,
        "fullcodeline": "avio_r8(pb); // '5'"
    },
    {
        "line": 93,
        "fullcodeline": "avio_r8(pb); //codec_id"
    },
    {
        "line": 94,
        "fullcodeline": "avio_rl16(pb); //codec_subid"
    },
    {
        "line": 95,
        "fullcodeline": "st->codecpar->channels = avio_rl16(pb); // channels"
    },
    {
        "line": 96,
        "fullcodeline": "st->codecpar->sample_rate = avio_rl32(pb); // sample_rate"
    },
    {
        "line": 97,
        "fullcodeline": "avio_seek(pb, 10, SEEK_CUR); // data_1"
    },
    {
        "line": 98,
        "fullcodeline": "q = avio_r8(pb);"
    },
    {
        "line": 99,
        "fullcodeline": "avio_seek(pb, q, SEEK_CUR); // data_2"
    },
    {
        "line": 100,
        "fullcodeline": "avio_r8(pb); // zeropad"
    },
    {
        "line": 18,
        "fullcodeline": "if (avio_feof(pb))"
    },
    {
        "line": 20,
        "fullcodeline": "for (j=0;j<c;j++) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (!st)"
    },
    {
        "line": 82,
        "fullcodeline": "if (!st)"
    },
    {
        "line": 102,
        "fullcodeline": "if (avio_tell(pb) < off) {"
    },
    {
        "line": 23,
        "fullcodeline": "avio_r8(pb); // val_3"
    },
    {
        "line": 24,
        "fullcodeline": "avio_r8(pb); // val_4"
    },
    {
        "line": 104,
        "fullcodeline": "int xd_size = 1;"
    },
    {
        "line": 105,
        "fullcodeline": "int data_len[256];"
    },
    {
        "line": 106,
        "fullcodeline": "int offset = 1;"
    },
    {
        "line": 108,
        "fullcodeline": "ffio_read_varlen(pb); // val_13"
    },
    {
        "line": 109,
        "fullcodeline": "avio_r8(pb); // '19'"
    },
    {
        "line": 110,
        "fullcodeline": "ffio_read_varlen(pb); // len_3"
    },
    {
        "line": 111,
        "fullcodeline": "num_data = avio_r8(pb);"
    },
    {
        "line": 121,
        "fullcodeline": "ret = ff_alloc_extradata(st->codecpar, xd_size);"
    },
    {
        "line": 125,
        "fullcodeline": "p = st->codecpar->extradata;"
    },
    {
        "line": 126,
        "fullcodeline": "p[0] = 2;"
    },
    {
        "line": 21,
        "fullcodeline": "if (avio_feof(pb))"
    },
    {
        "line": 47,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 83,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 112,
        "fullcodeline": "for (j = 0; j < num_data; j++) {"
    },
    {
        "line": 122,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 128,
        "fullcodeline": "for (j = 0; j < num_data - 1; j++) {"
    },
    {
        "line": 134,
        "fullcodeline": "for (j = 0; j < num_data; j++) {"
    },
    {
        "line": 145,
        "fullcodeline": "if (offset < st->codecpar->extradata_size)"
    },
    {
        "line": 113,
        "fullcodeline": "uint64_t len = ffio_read_varlen(pb);"
    },
    {
        "line": 117,
        "fullcodeline": "data_len[j] = len;"
    },
    {
        "line": 118,
        "fullcodeline": "xd_size += len + 1 + len/255;"
    },
    {
        "line": 129,
        "fullcodeline": "unsigned delta = av_xiphlacing(&p[offset], data_len[j]);"
    },
    {
        "line": 130,
        "fullcodeline": "av_assert0(delta <= xd_size - offset);"
    },
    {
        "line": 131,
        "fullcodeline": "offset += delta;"
    },
    {
        "line": 135,
        "fullcodeline": "int ret = avio_read(pb, &p[offset], data_len[j]);"
    },
    {
        "line": 141,
        "fullcodeline": "av_assert0(data_len[j] <= xd_size - offset);"
    },
    {
        "line": 142,
        "fullcodeline": "offset += data_len[j];"
    },
    {
        "line": 146,
        "fullcodeline": "st->codecpar->extradata_size = offset;"
    },
    {
        "line": 114,
        "fullcodeline": "if (len > INT_MAX/2 - xd_size) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (ret < data_len[j]) {"
    },
    {
        "line": 137,
        "fullcodeline": "st->codecpar->extradata_size = 0;"
    }
]