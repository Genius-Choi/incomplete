[
    {
        "line": 2,
        "fullcodeline": "ShapeHandle input = c->input(0);"
    },
    {
        "line": 3,
        "fullcodeline": "ShapeHandle perm_shape = c->input(1);"
    },
    {
        "line": 4,
        "fullcodeline": "const Tensor* perm = c->input_tensor(1);"
    },
    {
        "line": 5,
        "fullcodeline": "DimensionHandle perm_elems = c->NumElements(perm_shape);"
    },
    {
        "line": 31,
        "fullcodeline": "std::vector<DimensionHandle> dims;"
    },
    {
        "line": 32,
        "fullcodeline": "dims.resize(rank);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!c->RankKnown(input) && !c->ValueKnown(perm_elems) && perm == nullptr) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (c->RankKnown(input)) {"
    },
    {
        "line": 33,
        "fullcodeline": "TF_RETURN_IF_ERROR(c->WithRank(input, rank, &input));"
    },
    {
        "line": 35,
        "fullcodeline": "TF_RETURN_IF_ERROR(c->WithRank(perm_shape, 1, &perm_shape));"
    },
    {
        "line": 36,
        "fullcodeline": "TF_RETURN_IF_ERROR(c->WithValue(perm_elems, rank, &perm_elems));"
    },
    {
        "line": 41,
        "fullcodeline": "if (perm != nullptr) {"
    },
    {
        "line": 63,
        "fullcodeline": "c->set_output(0, c->MakeShape(dims));"
    },
    {
        "line": 64,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 10,
        "fullcodeline": "c->set_output(0, c->UnknownShape());"
    },
    {
        "line": 17,
        "fullcodeline": "rank = c->Rank(input);"
    },
    {
        "line": 23,
        "fullcodeline": "if (!c->RankKnown(input) && rank < 2) {"
    },
    {
        "line": 11,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 28,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 42,
        "fullcodeline": "std::vector<int64_t> data;"
    },
    {
        "line": 43,
        "fullcodeline": "if (perm->dtype() == DT_INT32) {"
    },
    {
        "line": 49,
        "fullcodeline": "for (int32_t i = 0; i < rank; ++i) {"
    },
    {
        "line": 18,
        "fullcodeline": "} else if (c->ValueKnown(perm_elems)) {"
    },
    {
        "line": 44,
        "fullcodeline": "data = AsInt64<int32>(perm, rank);"
    },
    {
        "line": 50,
        "fullcodeline": "int64_t in_idx = data[i];"
    },
    {
        "line": 55,
        "fullcodeline": "dims[i] = c->Dim(input, in_idx);"
    },
    {
        "line": 58,
        "fullcodeline": "for (int i = 0; i < rank; ++i) {"
    },
    {
        "line": 19,
        "fullcodeline": "rank = c->Value(perm_elems);"
    },
    {
        "line": 46,
        "fullcodeline": "data = AsInt64<int64_t>(perm, rank);"
    },
    {
        "line": 51,
        "fullcodeline": "if (in_idx >= rank) {"
    },
    {
        "line": 59,
        "fullcodeline": "dims[i] = c->UnknownDim();"
    },
    {
        "line": 21,
        "fullcodeline": "rank = perm->NumElements();"
    },
    {
        "line": 52,
        "fullcodeline": "return errors::InvalidArgument(\"perm dim \", in_idx,"
    }
]