[
    {
        "line": 3,
        "fullcodeline": "uint32_t plen = packet_payloadlen(packet);"
    },
    {
        "line": 4,
        "fullcodeline": "u_char payload[MAX_SIP_PAYLOAD];"
    },
    {
        "line": 5,
        "fullcodeline": "regmatch_t pmatch[4];"
    },
    {
        "line": 6,
        "fullcodeline": "char cl_header[10];"
    },
    {
        "line": 15,
        "fullcodeline": "memset(payload, 0, MAX_SIP_PAYLOAD);"
    },
    {
        "line": 16,
        "fullcodeline": "memcpy(payload, packet_payload(packet), plen);"
    },
    {
        "line": 19,
        "fullcodeline": "memset(cl_header, 0, sizeof(cl_header));"
    },
    {
        "line": 33,
        "fullcodeline": "strncpy(cl_header, (const char *)payload +  pmatch[2].rm_so, (int)pmatch[2].rm_eo - pmatch[2].rm_so);"
    },
    {
        "line": 34,
        "fullcodeline": "content_len = atoi(cl_header);"
    },
    {
        "line": 43,
        "fullcodeline": "bodylen = (int) pmatch[1].rm_eo - pmatch[1].rm_so;"
    },
    {
        "line": 11,
        "fullcodeline": "if (plen == 0 || plen > MAX_SIP_PAYLOAD)"
    },
    {
        "line": 22,
        "fullcodeline": "if (regexec(&calls.reg_valid, (const char *) payload, 2, pmatch, 0) != 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (regexec(&calls.reg_cl, (const char *) payload, 4, pmatch, 0) != 0) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (regexec(&calls.reg_body, (const char *) payload, 2, pmatch, 0) != 0) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (content_len > bodylen) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (content_len < bodylen) {"
    },
    {
        "line": 57,
        "fullcodeline": "packet_set_payload(packet, payload, pmatch[1].rm_so + content_len);"
    },
    {
        "line": 52,
        "fullcodeline": "if (payload[pmatch[1].rm_so + content_len - 1] != '\\n')"
    },
    {
        "line": 54,
        "fullcodeline": "if (payload[pmatch[1].rm_so + content_len - 2] != '\\r')"
    }
]