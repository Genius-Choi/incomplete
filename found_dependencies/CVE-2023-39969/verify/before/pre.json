[
    {
        "line": 8,
        "fullcodeline": "bool has_signed_data = false, verified_signed_data = true, verified_checksum = true;"
    },
    {
        "line": 10,
        "fullcodeline": "auto certs = read_certs(pe);"
    },
    {
        "line": 39,
        "fullcodeline": "return has_signed_data && verified_signed_data && verified_checksum;"
    },
    {
        "line": 12,
        "fullcodeline": "const auto signed_data = cert.as_signed_data();"
    },
    {
        "line": 17,
        "fullcodeline": "auto embedded_checksum = signed_data->get_checksum();"
    },
    {
        "line": 19,
        "fullcodeline": "has_signed_data = true;"
    },
    {
        "line": 20,
        "fullcodeline": "verified_signed_data = verified_signed_data && signed_data->verify_signature();"
    },
    {
        "line": 21,
        "fullcodeline": "verified_checksum ="
    },
    {
        "line": 25,
        "fullcodeline": "const auto nested_signed_data = signed_data->get_nested_signed_data();"
    },
    {
        "line": 30,
        "fullcodeline": "auto nested_embedded_checksum = nested_signed_data->get_checksum();"
    },
    {
        "line": 32,
        "fullcodeline": "verified_signed_data = verified_signed_data && nested_signed_data->verify_signature();"
    },
    {
        "line": 33,
        "fullcodeline": "verified_checksum ="
    },
    {
        "line": 13,
        "fullcodeline": "if (!signed_data) {"
    },
    {
        "line": 22,
        "fullcodeline": "verified_checksum && std::get<std::string>(embedded_checksum) =="
    },
    {
        "line": 26,
        "fullcodeline": "if (!nested_signed_data) {"
    },
    {
        "line": 34,
        "fullcodeline": "verified_checksum &&"
    },
    {
        "line": 35,
        "fullcodeline": "std::get<std::string>(nested_embedded_checksum) =="
    },
    {
        "line": 23,
        "fullcodeline": "calculate_checksum(pe, std::get<checksum_kind>(embedded_checksum));"
    },
    {
        "line": 36,
        "fullcodeline": "calculate_checksum(pe, std::get<checksum_kind>(nested_embedded_checksum));"
    }
]