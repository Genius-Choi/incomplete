[
    {
        "line": 30,
        "fullcodeline": "mpt_free_fw_memory(ioc);"
    },
    {
        "line": 34,
        "fullcodeline": "newFwSize = ALIGN(karg.newImageSize, 4);"
    },
    {
        "line": 36,
        "fullcodeline": "mpt_alloc_fw_memory(ioc, newFwSize);"
    },
    {
        "line": 52,
        "fullcodeline": "ioc->facts.FWImageSize = newFwSize;"
    },
    {
        "line": 9,
        "fullcodeline": "if (copy_from_user(&karg, uarg, sizeof(struct mpt_ioctl_replace_fw))) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (((iocnum = mpt_verify_adapter(karg.hdr.iocnum, &ioc)) < 0) ||"
    },
    {
        "line": 27,
        "fullcodeline": "if (ioc->cached_fw == NULL)"
    },
    {
        "line": 37,
        "fullcodeline": "if (ioc->cached_fw == NULL)"
    },
    {
        "line": 42,
        "fullcodeline": "if (copy_from_user(ioc->cached_fw, uarg->newImage, newFwSize)) {"
    },
    {
        "line": 17,
        "fullcodeline": "(ioc == NULL)) {"
    },
    {
        "line": 46,
        "fullcodeline": "mpt_free_fw_memory(ioc);"
    },
    {
        "line": 13,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 20,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 38,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 47,
        "fullcodeline": "return -EFAULT;"
    }
]