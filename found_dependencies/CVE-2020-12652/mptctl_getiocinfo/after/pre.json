[
    {
        "line": 26,
        "fullcodeline": "karg = memdup_user(uarg, data_size);"
    },
    {
        "line": 59,
        "fullcodeline": "port = karg->hdr.port;"
    },
    {
        "line": 61,
        "fullcodeline": "karg->port = port;"
    },
    {
        "line": 62,
        "fullcodeline": "pdev = (struct pci_dev *) ioc->pcidev;"
    },
    {
        "line": 64,
        "fullcodeline": "karg->pciId = pdev->device;"
    },
    {
        "line": 65,
        "fullcodeline": "karg->hwRev = pdev->revision;"
    },
    {
        "line": 66,
        "fullcodeline": "karg->subSystemDevice = pdev->subsystem_device;"
    },
    {
        "line": 67,
        "fullcodeline": "karg->subSystemVendor = pdev->subsystem_vendor;"
    },
    {
        "line": 86,
        "fullcodeline": "karg->numDevices = 0;"
    },
    {
        "line": 101,
        "fullcodeline": "karg->FWVersion = ioc->facts.FWVersion.Word;"
    },
    {
        "line": 102,
        "fullcodeline": "karg->BIOSVersion = ioc->biosVersion;"
    },
    {
        "line": 106,
        "fullcodeline": "strncpy (karg->driverVersion, MPT_LINUX_PACKAGE_NAME, MPT_IOCTL_VERSION_LENGTH);"
    },
    {
        "line": 109,
        "fullcodeline": "karg->busChangeEvent = 0;"
    },
    {
        "line": 110,
        "fullcodeline": "karg->hostId = ioc->pfacts[port].PortSCSIID;"
    },
    {
        "line": 15,
        "fullcodeline": "if (data_size == sizeof(struct mpt_ioctl_iocinfo_rev0))"
    },
    {
        "line": 27,
        "fullcodeline": "if (IS_ERR(karg)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (ioc->bus_type == SAS)"
    },
    {
        "line": 55,
        "fullcodeline": "if (karg->hdr.port > 1) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (cim_rev == 1) {"
    },
    {
        "line": 111,
        "fullcodeline": "karg->rsvd[0] = karg->rsvd[1] = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "cim_rev = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "karg->adapterType = MPT_IOCTL_INTERFACE_SAS;"
    },
    {
        "line": 88,
        "fullcodeline": "shost_for_each_device(sdev, ioc->sh) {"
    },
    {
        "line": 30,
        "fullcodeline": "return PTR_ERR(karg);"
    },
    {
        "line": 39,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 57,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 73,
        "fullcodeline": "karg->pciInfo.u.bits.deviceNumber = PCI_SLOT( pdev->devfn );"
    },
    {
        "line": 74,
        "fullcodeline": "karg->pciInfo.u.bits.functionNumber = PCI_FUNC( pdev->devfn );"
    },
    {
        "line": 89,
        "fullcodeline": "vdevice = sdev->hostdata;"
    },
    {
        "line": 95,
        "fullcodeline": "karg->numDevices++;"
    },
    {
        "line": 120,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 17,
        "fullcodeline": "else if (data_size == sizeof(struct mpt_ioctl_iocinfo_rev1))"
    },
    {
        "line": 50,
        "fullcodeline": "else if (ioc->bus_type == FC)"
    },
    {
        "line": 92,
        "fullcodeline": "if (vdevice->vtarget->tflags &"
    },
    {
        "line": 18,
        "fullcodeline": "cim_rev = 1;"
    },
    {
        "line": 51,
        "fullcodeline": "karg->adapterType = MPT_IOCTL_INTERFACE_FC;"
    },
    {
        "line": 90,
        "fullcodeline": "if (vdevice == NULL || vdevice->vtarget == NULL)"
    },
    {
        "line": 53,
        "fullcodeline": "karg->adapterType = MPT_IOCTL_INTERFACE_SCSI;"
    },
    {
        "line": 79,
        "fullcodeline": "karg->pciInfo.u.bits.deviceNumber = PCI_SLOT( pdev->devfn );"
    },
    {
        "line": 80,
        "fullcodeline": "karg->pciInfo.u.bits.functionNumber = PCI_FUNC( pdev->devfn );"
    },
    {
        "line": 81,
        "fullcodeline": "karg->pciInfo.segmentID = pci_domain_nr(pdev->bus);"
    },
    {
        "line": 19,
        "fullcodeline": "else if (data_size == sizeof(struct mpt_ioctl_iocinfo))"
    },
    {
        "line": 20,
        "fullcodeline": "cim_rev = 2;"
    },
    {
        "line": 21,
        "fullcodeline": "else if (data_size == (sizeof(struct mpt_ioctl_iocinfo_rev0)+12))"
    },
    {
        "line": 22,
        "fullcodeline": "cim_rev = 0;\t/* obsolete */"
    },
    {
        "line": 24,
        "fullcodeline": "return -EFAULT;"
    }
]