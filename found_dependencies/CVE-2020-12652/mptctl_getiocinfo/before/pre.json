[
    {
        "line": 28,
        "fullcodeline": "karg = memdup_user(uarg, data_size);"
    },
    {
        "line": 69,
        "fullcodeline": "port = karg->hdr.port;"
    },
    {
        "line": 71,
        "fullcodeline": "karg->port = port;"
    },
    {
        "line": 72,
        "fullcodeline": "pdev = (struct pci_dev *) ioc->pcidev;"
    },
    {
        "line": 74,
        "fullcodeline": "karg->pciId = pdev->device;"
    },
    {
        "line": 75,
        "fullcodeline": "karg->hwRev = pdev->revision;"
    },
    {
        "line": 76,
        "fullcodeline": "karg->subSystemDevice = pdev->subsystem_device;"
    },
    {
        "line": 77,
        "fullcodeline": "karg->subSystemVendor = pdev->subsystem_vendor;"
    },
    {
        "line": 96,
        "fullcodeline": "karg->numDevices = 0;"
    },
    {
        "line": 111,
        "fullcodeline": "karg->FWVersion = ioc->facts.FWVersion.Word;"
    },
    {
        "line": 112,
        "fullcodeline": "karg->BIOSVersion = ioc->biosVersion;"
    },
    {
        "line": 116,
        "fullcodeline": "strncpy (karg->driverVersion, MPT_LINUX_PACKAGE_NAME, MPT_IOCTL_VERSION_LENGTH);"
    },
    {
        "line": 119,
        "fullcodeline": "karg->busChangeEvent = 0;"
    },
    {
        "line": 120,
        "fullcodeline": "karg->hostId = ioc->pfacts[port].PortSCSIID;"
    },
    {
        "line": 17,
        "fullcodeline": "if (data_size == sizeof(struct mpt_ioctl_iocinfo_rev0))"
    },
    {
        "line": 29,
        "fullcodeline": "if (IS_ERR(karg)) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (ioc->bus_type == SAS)"
    },
    {
        "line": 65,
        "fullcodeline": "if (karg->hdr.port > 1) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (cim_rev == 1) {"
    },
    {
        "line": 121,
        "fullcodeline": "karg->rsvd[0] = karg->rsvd[1] = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "cim_rev = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "if (((iocnum = mpt_verify_adapter(karg->hdr.iocnum, &ioc)) < 0) ||"
    },
    {
        "line": 36,
        "fullcodeline": "(ioc == NULL)) {"
    },
    {
        "line": 59,
        "fullcodeline": "karg->adapterType = MPT_IOCTL_INTERFACE_SAS;"
    },
    {
        "line": 98,
        "fullcodeline": "shost_for_each_device(sdev, ioc->sh) {"
    },
    {
        "line": 32,
        "fullcodeline": "return PTR_ERR(karg);"
    },
    {
        "line": 40,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 49,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 67,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 83,
        "fullcodeline": "karg->pciInfo.u.bits.deviceNumber = PCI_SLOT( pdev->devfn );"
    },
    {
        "line": 84,
        "fullcodeline": "karg->pciInfo.u.bits.functionNumber = PCI_FUNC( pdev->devfn );"
    },
    {
        "line": 99,
        "fullcodeline": "vdevice = sdev->hostdata;"
    },
    {
        "line": 105,
        "fullcodeline": "karg->numDevices++;"
    },
    {
        "line": 130,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 19,
        "fullcodeline": "else if (data_size == sizeof(struct mpt_ioctl_iocinfo_rev1))"
    },
    {
        "line": 60,
        "fullcodeline": "else if (ioc->bus_type == FC)"
    },
    {
        "line": 102,
        "fullcodeline": "if (vdevice->vtarget->tflags &"
    },
    {
        "line": 20,
        "fullcodeline": "cim_rev = 1;"
    },
    {
        "line": 61,
        "fullcodeline": "karg->adapterType = MPT_IOCTL_INTERFACE_FC;"
    },
    {
        "line": 100,
        "fullcodeline": "if (vdevice == NULL || vdevice->vtarget == NULL)"
    },
    {
        "line": 63,
        "fullcodeline": "karg->adapterType = MPT_IOCTL_INTERFACE_SCSI;"
    },
    {
        "line": 89,
        "fullcodeline": "karg->pciInfo.u.bits.deviceNumber = PCI_SLOT( pdev->devfn );"
    },
    {
        "line": 90,
        "fullcodeline": "karg->pciInfo.u.bits.functionNumber = PCI_FUNC( pdev->devfn );"
    },
    {
        "line": 91,
        "fullcodeline": "karg->pciInfo.segmentID = pci_domain_nr(pdev->bus);"
    },
    {
        "line": 21,
        "fullcodeline": "else if (data_size == sizeof(struct mpt_ioctl_iocinfo))"
    },
    {
        "line": 22,
        "fullcodeline": "cim_rev = 2;"
    },
    {
        "line": 23,
        "fullcodeline": "else if (data_size == (sizeof(struct mpt_ioctl_iocinfo_rev0)+12))"
    },
    {
        "line": 24,
        "fullcodeline": "cim_rev = 0;\t/* obsolete */"
    },
    {
        "line": 26,
        "fullcodeline": "return -EFAULT;"
    }
]