[
    {
        "line": 7,
        "fullcodeline": "MPT_SCSI_HOST \t\t*hd = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "int\t\t\ttmp, np, rc = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "data_sz = ioc->spi_data.sdp0length * 4;"
    },
    {
        "line": 48,
        "fullcodeline": "pg0_alloc = (SCSIDevicePage0_t *) pci_alloc_consistent(ioc->pcidev, data_sz, &page_dma);"
    },
    {
        "line": 91,
        "fullcodeline": "karg.message_rejects = -1;"
    },
    {
        "line": 92,
        "fullcodeline": "karg.phase_errors = -1;"
    },
    {
        "line": 93,
        "fullcodeline": "karg.parity_errors = -1;"
    },
    {
        "line": 94,
        "fullcodeline": "karg.select_timeouts = -1;"
    },
    {
        "line": 98,
        "fullcodeline": "hdr.PageVersion = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "hdr.PageLength = 0;"
    },
    {
        "line": 100,
        "fullcodeline": "hdr.PageNumber = 3;"
    },
    {
        "line": 101,
        "fullcodeline": "hdr.PageType = MPI_CONFIG_PAGETYPE_SCSI_DEVICE;"
    },
    {
        "line": 103,
        "fullcodeline": "cfg.cfghdr.hdr = &hdr;"
    },
    {
        "line": 104,
        "fullcodeline": "cfg.action = MPI_CONFIG_ACTION_PAGE_HEADER;"
    },
    {
        "line": 105,
        "fullcodeline": "cfg.dir = 0;"
    },
    {
        "line": 106,
        "fullcodeline": "cfg.timeout = 0;"
    },
    {
        "line": 107,
        "fullcodeline": "cfg.physAddr = -1;"
    },
    {
        "line": 125,
        "fullcodeline": "hd = shost_priv(ioc->sh);"
    },
    {
        "line": 16,
        "fullcodeline": "if (copy_from_user(&karg, uarg, sizeof(hp_target_info_t))) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (((iocnum = mpt_verify_adapter(karg.hdr.iocnum, &ioc)) < 0) ||"
    },
    {
        "line": 29,
        "fullcodeline": "if (karg.hdr.id >= MPT_MAX_FC_DEVICES)"
    },
    {
        "line": 36,
        "fullcodeline": "if ((ioc->bus_type == SAS) || (ioc->bus_type == FC))"
    },
    {
        "line": 39,
        "fullcodeline": "if ((ioc->spi_data.sdp0length == 0) || (ioc->sh == NULL))"
    },
    {
        "line": 108,
        "fullcodeline": "if ((mpt_config(ioc, &cfg) == 0) && (cfg.cfghdr.hdr->PageLength > 0)) {"
    },
    {
        "line": 126,
        "fullcodeline": "if (hd != NULL)"
    },
    {
        "line": 24,
        "fullcodeline": "(ioc == NULL)) {"
    },
    {
        "line": 51,
        "fullcodeline": "hdr.PageLength = data_sz;"
    },
    {
        "line": 52,
        "fullcodeline": "hdr.PageNumber = 0;"
    },
    {
        "line": 53,
        "fullcodeline": "hdr.PageType = MPI_CONFIG_PAGETYPE_SCSI_DEVICE;"
    },
    {
        "line": 55,
        "fullcodeline": "cfg.cfghdr.hdr = &hdr;"
    },
    {
        "line": 56,
        "fullcodeline": "cfg.action = MPI_CONFIG_ACTION_PAGE_READ_CURRENT;"
    },
    {
        "line": 57,
        "fullcodeline": "cfg.dir = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "cfg.timeout = 0;"
    },
    {
        "line": 59,
        "fullcodeline": "cfg.physAddr = page_dma;"
    },
    {
        "line": 61,
        "fullcodeline": "cfg.pageAddr = (karg.hdr.channel << 8) | karg.hdr.id;"
    },
    {
        "line": 86,
        "fullcodeline": "pci_free_consistent(ioc->pcidev, data_sz, (u8 *) pg0_alloc, page_dma);"
    },
    {
        "line": 110,
        "fullcodeline": "cfg.action = MPI_CONFIG_ACTION_PAGE_READ_CURRENT;"
    },
    {
        "line": 111,
        "fullcodeline": "data_sz = (int) cfg.cfghdr.hdr->PageLength * 4;"
    },
    {
        "line": 112,
        "fullcodeline": "pg3_alloc = (SCSIDevicePage3_t *) pci_alloc_consistent("
    },
    {
        "line": 20,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 27,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 30,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 43,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 63,
        "fullcodeline": "if ((rc = mpt_config(ioc, &cfg)) == 0) {"
    },
    {
        "line": 135,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 64,
        "fullcodeline": "np = le32_to_cpu(pg0_alloc->NegotiatedParameters);"
    },
    {
        "line": 65,
        "fullcodeline": "karg.negotiated_width = np & MPI_SCSIDEVPAGE0_NP_WIDE ?"
    },
    {
        "line": 115,
        "fullcodeline": "cfg.physAddr = page_dma;"
    },
    {
        "line": 116,
        "fullcodeline": "cfg.pageAddr = (karg.hdr.channel << 8) | karg.hdr.id;"
    },
    {
        "line": 122,
        "fullcodeline": "pci_free_consistent(ioc->pcidev, data_sz, (u8 *) pg3_alloc, page_dma);"
    },
    {
        "line": 68,
        "fullcodeline": "if (np & MPI_SCSIDEVPAGE0_NP_NEG_SYNC_OFFSET_MASK) {"
    },
    {
        "line": 117,
        "fullcodeline": "if ((rc = mpt_config(ioc, &cfg)) == 0) {"
    },
    {
        "line": 69,
        "fullcodeline": "tmp = (np & MPI_SCSIDEVPAGE0_NP_NEG_SYNC_PERIOD_MASK) >> 8;"
    },
    {
        "line": 118,
        "fullcodeline": "karg.message_rejects = (u32) le16_to_cpu(pg3_alloc->MsgRejectCount);"
    },
    {
        "line": 119,
        "fullcodeline": "karg.phase_errors = (u32) le16_to_cpu(pg3_alloc->PhaseErrorCount);"
    },
    {
        "line": 120,
        "fullcodeline": "karg.parity_errors = (u32) le16_to_cpu(pg3_alloc->ParityErrorCount);"
    },
    {
        "line": 70,
        "fullcodeline": "if (tmp < 0x09)"
    },
    {
        "line": 83,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ASYNC;"
    },
    {
        "line": 71,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ULTRA320;"
    },
    {
        "line": 72,
        "fullcodeline": "else if (tmp <= 0x09)"
    },
    {
        "line": 73,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ULTRA160;"
    },
    {
        "line": 74,
        "fullcodeline": "else if (tmp <= 0x0A)"
    },
    {
        "line": 75,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ULTRA2;"
    },
    {
        "line": 76,
        "fullcodeline": "else if (tmp <= 0x0C)"
    },
    {
        "line": 77,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ULTRA;"
    },
    {
        "line": 78,
        "fullcodeline": "else if (tmp <= 0x25)"
    },
    {
        "line": 79,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_FAST;"
    },
    {
        "line": 81,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ASYNC;"
    }
]