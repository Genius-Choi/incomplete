[
    {
        "line": 6,
        "fullcodeline": "MPT_SCSI_HOST \t\t*hd = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "int\t\t\ttmp, np, rc = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "data_sz = ioc->spi_data.sdp0length * 4;"
    },
    {
        "line": 40,
        "fullcodeline": "pg0_alloc = (SCSIDevicePage0_t *) pci_alloc_consistent(ioc->pcidev, data_sz, &page_dma);"
    },
    {
        "line": 90,
        "fullcodeline": "hdr.PageVersion = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "hdr.PageLength = 0;"
    },
    {
        "line": 92,
        "fullcodeline": "hdr.PageNumber = 3;"
    },
    {
        "line": 93,
        "fullcodeline": "hdr.PageType = MPI_CONFIG_PAGETYPE_SCSI_DEVICE;"
    },
    {
        "line": 96,
        "fullcodeline": "cfg.action = MPI_CONFIG_ACTION_PAGE_HEADER;"
    },
    {
        "line": 97,
        "fullcodeline": "cfg.dir = 0;"
    },
    {
        "line": 98,
        "fullcodeline": "cfg.timeout = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "cfg.physAddr = -1;"
    },
    {
        "line": 117,
        "fullcodeline": "hd = shost_priv(ioc->sh);"
    },
    {
        "line": 14,
        "fullcodeline": "if (copy_from_user(&karg, uarg, sizeof(hp_target_info_t))) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (karg.hdr.id >= MPT_MAX_FC_DEVICES)"
    },
    {
        "line": 34,
        "fullcodeline": "if (ioc->sh->host_no != karg.hdr.host)"
    },
    {
        "line": 83,
        "fullcodeline": "karg.message_rejects = -1;"
    },
    {
        "line": 84,
        "fullcodeline": "karg.phase_errors = -1;"
    },
    {
        "line": 85,
        "fullcodeline": "karg.parity_errors = -1;"
    },
    {
        "line": 86,
        "fullcodeline": "karg.select_timeouts = -1;"
    },
    {
        "line": 28,
        "fullcodeline": "if ((ioc->bus_type == SAS) || (ioc->bus_type == FC))"
    },
    {
        "line": 31,
        "fullcodeline": "if ((ioc->spi_data.sdp0length == 0) || (ioc->sh == NULL))"
    },
    {
        "line": 42,
        "fullcodeline": "hdr.PageVersion = ioc->spi_data.sdp0version;"
    },
    {
        "line": 43,
        "fullcodeline": "hdr.PageLength = data_sz;"
    },
    {
        "line": 44,
        "fullcodeline": "hdr.PageNumber = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "hdr.PageType = MPI_CONFIG_PAGETYPE_SCSI_DEVICE;"
    },
    {
        "line": 48,
        "fullcodeline": "cfg.action = MPI_CONFIG_ACTION_PAGE_READ_CURRENT;"
    },
    {
        "line": 49,
        "fullcodeline": "cfg.dir = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "cfg.timeout = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "cfg.physAddr = page_dma;"
    },
    {
        "line": 53,
        "fullcodeline": "cfg.pageAddr = (karg.hdr.channel << 8) | karg.hdr.id;"
    },
    {
        "line": 78,
        "fullcodeline": "pci_free_consistent(ioc->pcidev, data_sz, (u8 *) pg0_alloc, page_dma);"
    },
    {
        "line": 100,
        "fullcodeline": "if ((mpt_config(ioc, &cfg) == 0) && (cfg.cfghdr.hdr->PageLength > 0)) {"
    },
    {
        "line": 102,
        "fullcodeline": "cfg.action = MPI_CONFIG_ACTION_PAGE_READ_CURRENT;"
    },
    {
        "line": 103,
        "fullcodeline": "data_sz = (int) cfg.cfghdr.hdr->PageLength * 4;"
    },
    {
        "line": 104,
        "fullcodeline": "pg3_alloc = (SCSIDevicePage3_t *) pci_alloc_consistent("
    },
    {
        "line": 18,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 22,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 35,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 127,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 55,
        "fullcodeline": "if ((rc = mpt_config(ioc, &cfg)) == 0) {"
    },
    {
        "line": 56,
        "fullcodeline": "np = le32_to_cpu(pg0_alloc->NegotiatedParameters);"
    },
    {
        "line": 107,
        "fullcodeline": "cfg.physAddr = page_dma;"
    },
    {
        "line": 108,
        "fullcodeline": "cfg.pageAddr = (karg.hdr.channel << 8) | karg.hdr.id;"
    },
    {
        "line": 57,
        "fullcodeline": "karg.negotiated_width = np & MPI_SCSIDEVPAGE0_NP_WIDE ?"
    },
    {
        "line": 60,
        "fullcodeline": "if (np & MPI_SCSIDEVPAGE0_NP_NEG_SYNC_OFFSET_MASK) {"
    },
    {
        "line": 61,
        "fullcodeline": "tmp = (np & MPI_SCSIDEVPAGE0_NP_NEG_SYNC_PERIOD_MASK) >> 8;"
    },
    {
        "line": 109,
        "fullcodeline": "if ((rc = mpt_config(ioc, &cfg)) == 0) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (tmp < 0x09)"
    },
    {
        "line": 63,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ULTRA320;"
    },
    {
        "line": 110,
        "fullcodeline": "karg.message_rejects = (u32) le16_to_cpu(pg3_alloc->MsgRejectCount);"
    },
    {
        "line": 111,
        "fullcodeline": "karg.phase_errors = (u32) le16_to_cpu(pg3_alloc->PhaseErrorCount);"
    },
    {
        "line": 112,
        "fullcodeline": "karg.parity_errors = (u32) le16_to_cpu(pg3_alloc->ParityErrorCount);"
    },
    {
        "line": 64,
        "fullcodeline": "else if (tmp <= 0x09)"
    },
    {
        "line": 65,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ULTRA160;"
    },
    {
        "line": 66,
        "fullcodeline": "else if (tmp <= 0x0A)"
    },
    {
        "line": 67,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ULTRA2;"
    },
    {
        "line": 68,
        "fullcodeline": "else if (tmp <= 0x0C)"
    },
    {
        "line": 69,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_ULTRA;"
    },
    {
        "line": 71,
        "fullcodeline": "karg.negotiated_speed = HP_DEV_SPEED_FAST;"
    }
]