[
    {
        "line": 4,
        "fullcodeline": "struct ceph_x_authorizer *au = (void *)a;"
    },
    {
        "line": 6,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "void *p = au->reply_buf;"
    },
    {
        "line": 9,
        "fullcodeline": "void *end = p + sizeof(au->reply_buf);"
    },
    {
        "line": 11,
        "fullcodeline": "th = get_ticket_handler(ac, au->service);"
    },
    {
        "line": 14,
        "fullcodeline": "ret = ceph_x_decrypt(&th->session_key, &p, end, &reply, sizeof(reply));"
    },
    {
        "line": 24,
        "fullcodeline": "dout(\"verify_authorizer_reply nonce %llx got %llx ret %d\\n\","
    },
    {
        "line": 12,
        "fullcodeline": "if (IS_ERR(th))"
    },
    {
        "line": 15,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 17,
        "fullcodeline": "if (ret != sizeof(reply))"
    },
    {
        "line": 20,
        "fullcodeline": "if (au->nonce + 1 != le64_to_cpu(reply.nonce_plus_one))"
    },
    {
        "line": 25,
        "fullcodeline": "au->nonce, le64_to_cpu(reply.nonce_plus_one), ret);"
    },
    {
        "line": 21,
        "fullcodeline": "ret = -EPERM;"
    },
    {
        "line": 13,
        "fullcodeline": "return PTR_ERR(th);"
    },
    {
        "line": 18,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 23,
        "fullcodeline": "ret = 0;"
    }
]