[
    {
        "line": 6,
        "fullcodeline": "char                      pcre_str[2 * PATTERN_MAX] = \"^\";"
    },
    {
        "line": 9,
        "fullcodeline": "int                       brace_level = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "_Bool                     is_in_bracket = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "char                      l_pattern[2 * PATTERN_MAX];"
    },
    {
        "line": 18,
        "fullcodeline": "_Bool                     are_braces_paired = 1;"
    },
    {
        "line": 20,
        "fullcodeline": "int                       ret = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "strcpy(l_pattern, pattern);"
    },
    {
        "line": 23,
        "fullcodeline": "p_pcre = pcre_str + 1;"
    },
    {
        "line": 24,
        "fullcodeline": "pcre_str_end = pcre_str + 2 * PATTERN_MAX;"
    },
    {
        "line": 55,
        "fullcodeline": "re = pcre2_compile(\"^\\\\{[\\\\+\\\\-]?\\\\d+\\\\.\\\\.[\\\\+\\\\-]?\\\\d+\\\\}$\", PCRE2_ZERO_TERMINATED, 0,"
    },
    {
        "line": 60,
        "fullcodeline": "utarray_new(nums, &ut_int_pair_icd);"
    },
    {
        "line": 270,
        "fullcodeline": "*(p_pcre ++) = '$';"
    },
    {
        "line": 272,
        "fullcodeline": "pcre2_code_free(re); /* ^\\\\d+\\\\.\\\\.\\\\d+$ */"
    },
    {
        "line": 274,
        "fullcodeline": "re = pcre2_compile(pcre_str, PCRE2_ZERO_TERMINATED, 0, &error_code, &erroffset, NULL);"
    },
    {
        "line": 282,
        "fullcodeline": "pcre_match_data = pcre2_match_data_create_from_pattern(re, NULL);"
    },
    {
        "line": 283,
        "fullcodeline": "rc = pcre2_match(re, string, strlen(string), 0, 0, pcre_match_data, NULL);"
    },
    {
        "line": 296,
        "fullcodeline": "pcre_result = pcre2_get_ovector_pointer(pcre_match_data);"
    },
    {
        "line": 326,
        "fullcodeline": "pcre2_code_free(re);"
    },
    {
        "line": 327,
        "fullcodeline": "pcre2_match_data_free(pcre_match_data);"
    },
    {
        "line": 328,
        "fullcodeline": "utarray_free(nums);"
    },
    {
        "line": 28,
        "fullcodeline": "int     left_count = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "int     right_count = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "if (!re)        /* failed to compile */"
    },
    {
        "line": 62,
        "fullcodeline": "for (c = l_pattern; *c; ++ c)"
    },
    {
        "line": 276,
        "fullcodeline": "if (!re)        /* failed to compile */"
    },
    {
        "line": 285,
        "fullcodeline": "if (rc < 0)     /* failed to match */"
    },
    {
        "line": 298,
        "fullcodeline": "++ i, p = (int_pair *) utarray_next(nums, p))"
    },
    {
        "line": 321,
        "fullcodeline": "if (p != NULL)      /* numbers not matched */"
    },
    {
        "line": 30,
        "fullcodeline": "for (c = l_pattern; *c; ++ c)"
    },
    {
        "line": 50,
        "fullcodeline": "if (right_count != left_count)"
    },
    {
        "line": 278,
        "fullcodeline": "utarray_free(nums);"
    },
    {
        "line": 297,
        "fullcodeline": "for(p = (int_pair *) utarray_front(nums), i = 1; p;"
    },
    {
        "line": 300,
        "fullcodeline": "const char * substring_start = string + pcre_result[2 * i];"
    },
    {
        "line": 301,
        "fullcodeline": "size_t  substring_length = pcre_result[2 * i + 1] - pcre_result[2 * i];"
    },
    {
        "line": 309,
        "fullcodeline": "num_string = strndup(substring_start, substring_length);"
    },
    {
        "line": 314,
        "fullcodeline": "num = ec_atoi(num_string);"
    },
    {
        "line": 315,
        "fullcodeline": "free(num_string);"
    },
    {
        "line": 322,
        "fullcodeline": "ret = EC_GLOB_NOMATCH;"
    },
    {
        "line": 51,
        "fullcodeline": "are_braces_paired = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "return -1;"
    },
    {
        "line": 279,
        "fullcodeline": "return -1;"
    },
    {
        "line": 287,
        "fullcodeline": "if (rc == PCRE2_ERROR_NOMATCH)"
    },
    {
        "line": 306,
        "fullcodeline": "if (*substring_start == '0')"
    },
    {
        "line": 310,
        "fullcodeline": "if (num_string == NULL) {"
    },
    {
        "line": 317,
        "fullcodeline": "if (num < p->num1 || num > p->num2) /* not matched */"
    },
    {
        "line": 32,
        "fullcodeline": "if (*c == '\\\\' && *(c+1) != '\\0')"
    },
    {
        "line": 38,
        "fullcodeline": "if (*c == '}')"
    },
    {
        "line": 43,
        "fullcodeline": "if (right_count > left_count)"
    },
    {
        "line": 77,
        "fullcodeline": "STRING_CAT(p_pcre, \"[^/]\", pcre_str_end);"
    },
    {
        "line": 139,
        "fullcodeline": "is_in_bracket = 1;"
    },
    {
        "line": 151,
        "fullcodeline": "is_in_bracket = 0;"
    },
    {
        "line": 152,
        "fullcodeline": "*(p_pcre ++) = *c;"
    },
    {
        "line": 228,
        "fullcodeline": "++ brace_level;"
    },
    {
        "line": 229,
        "fullcodeline": "STRING_CAT(p_pcre, \"(?:\", pcre_str_end);"
    },
    {
        "line": 239,
        "fullcodeline": "-- brace_level;"
    },
    {
        "line": 240,
        "fullcodeline": "*(p_pcre ++) = ')';"
    },
    {
        "line": 266,
        "fullcodeline": "*(p_pcre ++) = *c;"
    },
    {
        "line": 288,
        "fullcodeline": "ret = EC_GLOB_NOMATCH;"
    },
    {
        "line": 311,
        "fullcodeline": "ret = -2;"
    },
    {
        "line": 34,
        "fullcodeline": "++ c;"
    },
    {
        "line": 39,
        "fullcodeline": "++ right_count;"
    },
    {
        "line": 45,
        "fullcodeline": "are_braces_paired = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "if (*(c+1) != '\\0')"
    },
    {
        "line": 80,
        "fullcodeline": "if (*(c+1) == '*')      /* case of ** */"
    },
    {
        "line": 98,
        "fullcodeline": "_Bool           has_slash = 0;"
    },
    {
        "line": 140,
        "fullcodeline": "if (*(c+1) == '!')     /* case of [!...] */"
    },
    {
        "line": 163,
        "fullcodeline": "if (!are_braces_paired)"
    },
    {
        "line": 172,
        "fullcodeline": "_Bool                    is_single = 1;"
    },
    {
        "line": 233,
        "fullcodeline": "if (!are_braces_paired)"
    },
    {
        "line": 244,
        "fullcodeline": "if (brace_level > 0)  /* , inside {...} */"
    },
    {
        "line": 252,
        "fullcodeline": "if (!strncmp(c, \"/**/\", 4))"
    },
    {
        "line": 263,
        "fullcodeline": "if (!isalnum(*c))"
    },
    {
        "line": 290,
        "fullcodeline": "ret = rc;"
    },
    {
        "line": 70,
        "fullcodeline": "*(p_pcre ++) = *c;"
    },
    {
        "line": 82,
        "fullcodeline": "STRING_CAT(p_pcre, \".*\", pcre_str_end);"
    },
    {
        "line": 83,
        "fullcodeline": "++ c;"
    },
    {
        "line": 92,
        "fullcodeline": "STRING_CAT(p_pcre, \"\\\\[\", pcre_str_end);"
    },
    {
        "line": 100,
        "fullcodeline": "for (cc = c; *cc && *cc != ']'; ++ cc)"
    },
    {
        "line": 142,
        "fullcodeline": "STRING_CAT(p_pcre, \"[^\", pcre_str_end);"
    },
    {
        "line": 143,
        "fullcodeline": "++ c;"
    },
    {
        "line": 157,
        "fullcodeline": "*(p_pcre ++) = *c;"
    },
    {
        "line": 165,
        "fullcodeline": "STRING_CAT(p_pcre, \"\\\\{\", pcre_str_end);"
    },
    {
        "line": 174,
        "fullcodeline": "for (cc = c + 1; *cc != '\\0' && *cc != '}'; ++ cc)"
    },
    {
        "line": 189,
        "fullcodeline": "if (*cc == '\\0')"
    },
    {
        "line": 235,
        "fullcodeline": "STRING_CAT(p_pcre, \"\\\\}\", pcre_str_end);"
    },
    {
        "line": 245,
        "fullcodeline": "*(p_pcre ++) = '|';"
    },
    {
        "line": 254,
        "fullcodeline": "STRING_CAT(p_pcre, \"(\\\\/|\\\\/.*\\\\/)\", pcre_str_end);"
    },
    {
        "line": 255,
        "fullcodeline": "c += 3;"
    },
    {
        "line": 264,
        "fullcodeline": "*(p_pcre ++) = '\\\\';"
    },
    {
        "line": 40,
        "fullcodeline": "else if (*c == '{')"
    },
    {
        "line": 73,
        "fullcodeline": "STRING_CAT(p_pcre, \"\\\\\\\\\", pcre_str_end);"
    },
    {
        "line": 86,
        "fullcodeline": "STRING_CAT(p_pcre, \"[^\\\\/]*\", pcre_str_end);"
    },
    {
        "line": 118,
        "fullcodeline": "char *           right_bracket = strchr(c, ']');"
    },
    {
        "line": 123,
        "fullcodeline": "strcat(p_pcre, \"\\\\\");"
    },
    {
        "line": 124,
        "fullcodeline": "strncat(p_pcre, c, right_bracket - c);"
    },
    {
        "line": 127,
        "fullcodeline": "p_pcre += strlen(p_pcre);"
    },
    {
        "line": 128,
        "fullcodeline": "c = right_bracket;"
    },
    {
        "line": 146,
        "fullcodeline": "*(p_pcre ++) = '[';"
    },
    {
        "line": 159,
        "fullcodeline": "STRING_CAT(p_pcre, \"\\\\-\", pcre_str_end);"
    },
    {
        "line": 190,
        "fullcodeline": "is_single = 0;"
    },
    {
        "line": 197,
        "fullcodeline": "pcre2_match_data *  match_data = pcre2_match_data_create_from_pattern(re, NULL);"
    },
    {
        "line": 200,
        "fullcodeline": "rc = pcre2_match(re, c, cc - c + 1, 0, 0, match_data, NULL);"
    },
    {
        "line": 202,
        "fullcodeline": "pcre2_match_data_free(match_data);"
    },
    {
        "line": 215,
        "fullcodeline": "double_dots = strstr(c, \"..\");"
    },
    {
        "line": 216,
        "fullcodeline": "pair.num1 = ec_atoi(c + 1);"
    },
    {
        "line": 217,
        "fullcodeline": "pair.num2 = ec_atoi(double_dots + 2);"
    },
    {
        "line": 219,
        "fullcodeline": "utarray_push_back(nums, &pair);"
    },
    {
        "line": 221,
        "fullcodeline": "STRING_CAT(p_pcre, \"([\\\\+\\\\-]?\\\\d+)\", pcre_str_end);"
    },
    {
        "line": 222,
        "fullcodeline": "c = cc;"
    },
    {
        "line": 247,
        "fullcodeline": "STRING_CAT(p_pcre, \"\\\\,\", pcre_str_end);"
    },
    {
        "line": 258,
        "fullcodeline": "STRING_CAT(p_pcre, \"\\\\/\", pcre_str_end);"
    },
    {
        "line": 41,
        "fullcodeline": "++ left_count;"
    },
    {
        "line": 69,
        "fullcodeline": "*(p_pcre ++) = *(c++);"
    },
    {
        "line": 102,
        "fullcodeline": "if (*cc == '\\\\' && *(cc+1) != '\\0')"
    },
    {
        "line": 108,
        "fullcodeline": "if (*cc == '/')"
    },
    {
        "line": 120,
        "fullcodeline": "if (!right_bracket)  /* The right bracket may not exist */"
    },
    {
        "line": 129,
        "fullcodeline": "if (!*c)"
    },
    {
        "line": 176,
        "fullcodeline": "if (*cc == '\\\\' && *(cc+1) != '\\0')"
    },
    {
        "line": 182,
        "fullcodeline": "if (*cc == ',')"
    },
    {
        "line": 204,
        "fullcodeline": "if (rc < 0)    /* not {num1..num2} case */"
    },
    {
        "line": 104,
        "fullcodeline": "++ cc;"
    },
    {
        "line": 110,
        "fullcodeline": "has_slash = 1;"
    },
    {
        "line": 121,
        "fullcodeline": "right_bracket = c + strlen(c);"
    },
    {
        "line": 126,
        "fullcodeline": "strcat(p_pcre, \"\\\\]\");"
    },
    {
        "line": 134,
        "fullcodeline": "c -= 1;"
    },
    {
        "line": 178,
        "fullcodeline": "++ cc;"
    },
    {
        "line": 184,
        "fullcodeline": "is_single = 0;"
    },
    {
        "line": 206,
        "fullcodeline": "STRING_CAT(p_pcre, \"\\\\{\", pcre_str_end);"
    },
    {
        "line": 208,
        "fullcodeline": "memmove(cc+1, cc, strlen(cc) + 1);"
    },
    {
        "line": 209,
        "fullcodeline": "*cc = '\\\\';"
    }
]