[
    {
        "line": 6,
        "fullcodeline": "signed char seen_r = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "pfd.fd = clientfd;"
    },
    {
        "line": 17,
        "fullcodeline": "pfd.events = POLLIN | POLLPRI | POLLERR | POLLHUP;"
    },
    {
        "line": 94,
        "fullcodeline": "die(421, LOG_WARNING, MSG_LINE_TOO_LONG);   /* don't remove this */"
    },
    {
        "line": 8,
        "fullcodeline": "if (scanned > (size_t) 0U) {       /* support pipelining */"
    },
    {
        "line": 19,
        "fullcodeline": "while (scanned < cmdsize) {"
    },
    {
        "line": 9,
        "fullcodeline": "readnbd -= scanned;"
    },
    {
        "line": 10,
        "fullcodeline": "memmove(cmd, cmd + scanned, readnbd);   /* safe */"
    },
    {
        "line": 11,
        "fullcodeline": "scanned = (size_t) 0U;"
    },
    {
        "line": 75,
        "fullcodeline": "seen_r = 0;"
    },
    {
        "line": 92,
        "fullcodeline": "scanned++;"
    },
    {
        "line": 20,
        "fullcodeline": "if (scanned >= readnbd) {      /* nothing left in the buffer */"
    },
    {
        "line": 60,
        "fullcodeline": "if (cmd[scanned] == '\\n') {"
    },
    {
        "line": 79,
        "fullcodeline": "if (ISCTRLCODE(cmd[scanned])) {"
    },
    {
        "line": 21,
        "fullcodeline": "pfd.revents = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "readnbd += readnb;"
    },
    {
        "line": 89,
        "fullcodeline": "cmd[scanned] = '_';"
    },
    {
        "line": 22,
        "fullcodeline": "while ((pollret = poll(&pfd, 1U, idletime * 1000UL)) < 0 &&"
    },
    {
        "line": 24,
        "fullcodeline": "if (pollret == 0) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (pollret <= 0 ||"
    },
    {
        "line": 31,
        "fullcodeline": "if ((pfd.revents & (POLLIN | POLLPRI)) == 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (readnbd >= cmdsize) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (readnb <= (ssize_t) 0) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (readnbd > cmdsize) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (seen_r != 0) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (++scanned >= readnbd) {   /* non-pipelined command */"
    },
    {
        "line": 80,
        "fullcodeline": "if (cmd[scanned] == '\\r') {"
    },
    {
        "line": 23,
        "fullcodeline": "errno == EINTR);"
    },
    {
        "line": 28,
        "fullcodeline": "(pfd.revents & (POLLERR | POLLHUP | POLLNVAL)) != 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "while ((readnb = read(clientfd, cmd + readnbd,"
    },
    {
        "line": 64,
        "fullcodeline": "cmd[scanned - 1U] = 0;"
    },
    {
        "line": 71,
        "fullcodeline": "scanned = readnbd = (size_t) 0U;"
    },
    {
        "line": 81,
        "fullcodeline": "seen_r = 1;"
    },
    {
        "line": 25,
        "fullcodeline": "return -1;"
    },
    {
        "line": 29,
        "fullcodeline": "return -2;"
    },
    {
        "line": 47,
        "fullcodeline": "errno == EINTR);"
    },
    {
        "line": 50,
        "fullcodeline": "return -2;"
    },
    {
        "line": 54,
        "fullcodeline": "return -2;"
    },
    {
        "line": 67,
        "fullcodeline": "cmd[scanned] = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "cmdsize - readnbd)) < (ssize_t) 0 &&"
    }
]