[
    {
        "line": 36,
        "fullcodeline": "user = User.get_by_username(username)"
    },
    {
        "line": 38,
        "fullcodeline": "max_failed_attempts = password_policy.get("
    },
    {
        "line": 55,
        "fullcodeline": "user.last_login_attempt = dt.datetime.now()"
    },
    {
        "line": 56,
        "fullcodeline": "user.save()"
    },
    {
        "line": 57,
        "fullcodeline": "sys.exit()"
    },
    {
        "line": 33,
        "fullcodeline": "if not user_exists:"
    },
    {
        "line": 34,
        "fullcodeline": "sys.exit()"
    },
    {
        "line": 44,
        "fullcodeline": "__notify_user_blocked(app, user, min_rem, mail, config, ip)"
    },
    {
        "line": 45,
        "fullcodeline": "sys.exit()"
    },
    {
        "line": 47,
        "fullcodeline": "not user.failed_login_attempts or"
    },
    {
        "line": 48,
        "fullcodeline": "user.failed_login_attempts >= max_failed_attempts"
    },
    {
        "line": 52,
        "fullcodeline": "user.failed_login_attempts = 1"
    },
    {
        "line": 54,
        "fullcodeline": "user.failed_login_attempts += 1"
    }
]