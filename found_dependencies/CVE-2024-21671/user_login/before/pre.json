[
    {
        "line": 25,
        "fullcodeline": "log.info(f\"Trying to login '{username}'\")"
    },
    {
        "line": 26,
        "fullcodeline": "failed_login_msg = \"Failed to login\""
    },
    {
        "line": 27,
        "fullcodeline": "if User.username_exists(username):"
    },
    {
        "line": 53,
        "fullcodeline": "return {\"msg\": failed_login_msg}, HTTPStatus.UNAUTHORIZED"
    },
    {
        "line": 28,
        "fullcodeline": "user = User.get_by_username(username)"
    },
    {
        "line": 29,
        "fullcodeline": "password_policy = config.get(\"password_policy\", {})"
    },
    {
        "line": 30,
        "fullcodeline": "max_failed_attempts = password_policy.get('max_failed_attempts', 5)"
    },
    {
        "line": 31,
        "fullcodeline": "inactivation_time = password_policy.get('inactivation_minutes', 15)"
    },
    {
        "line": 33,
        "fullcodeline": "is_blocked, min_rem = user.is_blocked(max_failed_attempts,"
    },
    {
        "line": 36,
        "fullcodeline": "notify_user_blocked(user, max_failed_attempts, min_rem, mail,"
    },
    {
        "line": 38,
        "fullcodeline": "return {\"msg\": failed_login_msg}, HTTPStatus.UNAUTHORIZED"
    },
    {
        "line": 39,
        "fullcodeline": "elif user.check_password(password):"
    },
    {
        "line": 40,
        "fullcodeline": "user.failed_login_attempts = 0"
    },
    {
        "line": 41,
        "fullcodeline": "user.save()"
    },
    {
        "line": 45,
        "fullcodeline": "user.failed_login_attempts = 1 \\"
    },
    {
        "line": 50,
        "fullcodeline": "user.last_login_attempt = dt.datetime.now()"
    },
    {
        "line": 42,
        "fullcodeline": "return user, HTTPStatus.OK"
    },
    {
        "line": 47,
        "fullcodeline": "not user.failed_login_attempts or"
    },
    {
        "line": 48,
        "fullcodeline": "user.failed_login_attempts >= max_failed_attempts"
    }
]