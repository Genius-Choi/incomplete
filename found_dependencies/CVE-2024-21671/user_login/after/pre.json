[
    {
        "line": 25,
        "fullcodeline": "log.info(\"Trying to login '%s'\", username)"
    },
    {
        "line": 26,
        "fullcodeline": "failed_login_msg = \"Failed to login\""
    },
    {
        "line": 31,
        "fullcodeline": "username_exists = User.username_exists(username)"
    },
    {
        "line": 32,
        "fullcodeline": "random_username = User.get_first_user().username"
    },
    {
        "line": 33,
        "fullcodeline": "user = User.get_by_username(username) if username_exists \\"
    },
    {
        "line": 36,
        "fullcodeline": "password_policy = config.get(\"password_policy\", {})"
    },
    {
        "line": 37,
        "fullcodeline": "max_failed_attempts = password_policy.get("
    },
    {
        "line": 40,
        "fullcodeline": "inactivation_time = password_policy.get("
    },
    {
        "line": 59,
        "fullcodeline": "t1 = Thread(target=__handle_failed_login, args=("
    },
    {
        "line": 44,
        "fullcodeline": "is_blocked, min_rem = user.is_blocked(max_failed_attempts,"
    },
    {
        "line": 47,
        "fullcodeline": "if user.check_password(password) and not is_blocked and username_exists:"
    },
    {
        "line": 66,
        "fullcodeline": "return {\"msg\": failed_login_msg}, HTTPStatus.UNAUTHORIZED"
    },
    {
        "line": 34,
        "fullcodeline": "else User.get_by_username(random_username)"
    },
    {
        "line": 52,
        "fullcodeline": "user.failed_login_attempts = 0"
    },
    {
        "line": 53,
        "fullcodeline": "user.save()"
    },
    {
        "line": 54,
        "fullcodeline": "return user, HTTPStatus.OK"
    },
    {
        "line": 60,
        "fullcodeline": "current_app._get_current_object(), username_exists, username,"
    }
]