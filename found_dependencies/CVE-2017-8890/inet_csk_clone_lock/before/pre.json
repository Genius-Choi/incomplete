[
    {
        "line": 5,
        "fullcodeline": "struct sock *newsk = sk_clone_lock(sk, priority);"
    },
    {
        "line": 8,
        "fullcodeline": "struct inet_connection_sock *newicsk = inet_csk(newsk);"
    },
    {
        "line": 10,
        "fullcodeline": "newsk->sk_state = TCP_SYN_RECV;"
    },
    {
        "line": 11,
        "fullcodeline": "newicsk->icsk_bind_hash = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "inet_sk(newsk)->inet_dport = inet_rsk(req)->ir_rmt_port;"
    },
    {
        "line": 14,
        "fullcodeline": "inet_sk(newsk)->inet_num = inet_rsk(req)->ir_num;"
    },
    {
        "line": 15,
        "fullcodeline": "inet_sk(newsk)->inet_sport = htons(inet_rsk(req)->ir_num);"
    },
    {
        "line": 16,
        "fullcodeline": "newsk->sk_write_space = sk_stream_write_space;"
    },
    {
        "line": 19,
        "fullcodeline": "sock_reset_flag(newsk, SOCK_RCU_FREE);"
    },
    {
        "line": 21,
        "fullcodeline": "newsk->sk_mark = inet_rsk(req)->ir_mark;"
    },
    {
        "line": 22,
        "fullcodeline": "atomic64_set(&newsk->sk_cookie,"
    },
    {
        "line": 25,
        "fullcodeline": "newicsk->icsk_retransmits = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "newicsk->icsk_backoff\t  = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "newicsk->icsk_probes_out  = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "memset(&newicsk->icsk_accept_queue, 0, sizeof(newicsk->icsk_accept_queue));"
    },
    {
        "line": 32,
        "fullcodeline": "security_inet_csk_clone(newsk, req);"
    },
    {
        "line": 23,
        "fullcodeline": "atomic64_read(&inet_rsk(req)->ir_cookie));"
    }
]