[
    {
        "line": 8,
        "fullcodeline": "parent = b->parent;"
    },
    {
        "line": 9,
        "fullcodeline": "assert(b->flags &"
    },
    {
        "line": 11,
        "fullcodeline": "b->flags &= ~CMARK_NODE__OPEN;"
    },
    {
        "line": 31,
        "fullcodeline": "cmark_strbuf *node_content = &b->content;"
    },
    {
        "line": 13,
        "fullcodeline": "if (parser->curline.size == 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "switch (S_type(b)) {"
    },
    {
        "line": 15,
        "fullcodeline": "b->end_line = parser->line_number;"
    },
    {
        "line": 16,
        "fullcodeline": "b->end_column = parser->last_line_length;"
    },
    {
        "line": 68,
        "fullcodeline": "b->as.code.literal = cmark_chunk_buf_detach(node_content);"
    },
    {
        "line": 72,
        "fullcodeline": "b->as.literal = cmark_chunk_buf_detach(node_content);"
    },
    {
        "line": 76,
        "fullcodeline": "b->as.list.tight = true; // tight by default"
    },
    {
        "line": 77,
        "fullcodeline": "item = b->first_child;"
    },
    {
        "line": 36,
        "fullcodeline": "has_content = resolve_reference_link_definitions(parser, b);"
    },
    {
        "line": 45,
        "fullcodeline": "if (!b->as.code.fenced) { // indented code"
    },
    {
        "line": 17,
        "fullcodeline": "} else if (S_type(b) == CMARK_NODE_DOCUMENT ||"
    },
    {
        "line": 37,
        "fullcodeline": "if (!has_content) {"
    },
    {
        "line": 46,
        "fullcodeline": "remove_trailing_blank_lines(node_content);"
    },
    {
        "line": 47,
        "fullcodeline": "cmark_strbuf_putc(node_content, '\\n');"
    },
    {
        "line": 87,
        "fullcodeline": "subitem = item->first_child;"
    },
    {
        "line": 99,
        "fullcodeline": "item = item->next;"
    },
    {
        "line": 19,
        "fullcodeline": "(S_type(b) == CMARK_NODE_HEADING && b->as.heading.setext)) {"
    },
    {
        "line": 20,
        "fullcodeline": "b->end_line = parser->line_number;"
    },
    {
        "line": 21,
        "fullcodeline": "b->end_column = parser->curline.size;"
    },
    {
        "line": 39,
        "fullcodeline": "cmark_node_free(b);"
    },
    {
        "line": 54,
        "fullcodeline": "assert(pos < node_content->size);"
    },
    {
        "line": 56,
        "fullcodeline": "cmark_strbuf tmp = CMARK_BUF_INIT(parser->mem);"
    },
    {
        "line": 57,
        "fullcodeline": "houdini_unescape_html_f(&tmp, node_content->ptr, pos);"
    },
    {
        "line": 58,
        "fullcodeline": "cmark_strbuf_trim(&tmp);"
    },
    {
        "line": 59,
        "fullcodeline": "cmark_strbuf_unescape(&tmp);"
    },
    {
        "line": 60,
        "fullcodeline": "b->as.code.info = cmark_chunk_buf_detach(&tmp);"
    },
    {
        "line": 66,
        "fullcodeline": "cmark_strbuf_drop(node_content, pos);"
    },
    {
        "line": 81,
        "fullcodeline": "if (S_last_line_blank(item) && item->next) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (!(b->as.list.tight)) {"
    },
    {
        "line": 18,
        "fullcodeline": "(S_type(b) == CMARK_NODE_CODE_BLOCK && b->as.code.fenced) ||"
    },
    {
        "line": 22,
        "fullcodeline": "if (b->end_column && parser->curline.ptr[b->end_column - 1] == '\\n')"
    },
    {
        "line": 24,
        "fullcodeline": "if (b->end_column && parser->curline.ptr[b->end_column - 1] == '\\r')"
    },
    {
        "line": 27,
        "fullcodeline": "b->end_line = parser->line_number - 1;"
    },
    {
        "line": 28,
        "fullcodeline": "b->end_column = parser->last_line_length;"
    },
    {
        "line": 50,
        "fullcodeline": "for (pos = 0; pos < node_content->size; ++pos) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (node_content->ptr[pos] == '\\r')"
    },
    {
        "line": 64,
        "fullcodeline": "if (node_content->ptr[pos] == '\\n')"
    },
    {
        "line": 82,
        "fullcodeline": "b->as.list.tight = false;"
    },
    {
        "line": 94,
        "fullcodeline": "subitem = subitem->next;"
    },
    {
        "line": 23,
        "fullcodeline": "b->end_column -= 1;"
    },
    {
        "line": 25,
        "fullcodeline": "b->end_column -= 1;"
    },
    {
        "line": 63,
        "fullcodeline": "pos += 1;"
    },
    {
        "line": 65,
        "fullcodeline": "pos += 1;"
    },
    {
        "line": 89,
        "fullcodeline": "if ((item->next || subitem->next) &&"
    },
    {
        "line": 51,
        "fullcodeline": "if (S_is_line_end_char(node_content->ptr[pos]))"
    },
    {
        "line": 90,
        "fullcodeline": "S_ends_with_blank_line(subitem)) {"
    },
    {
        "line": 91,
        "fullcodeline": "b->as.list.tight = false;"
    }
]