[
    {
        "line": 3,
        "fullcodeline": "bool should_continue = true;"
    },
    {
        "line": 4,
        "fullcodeline": "*all_matched = false;"
    },
    {
        "line": 5,
        "fullcodeline": "cmark_node *container = parser->root;"
    },
    {
        "line": 53,
        "fullcodeline": "*all_matched = true;"
    },
    {
        "line": 8,
        "fullcodeline": "while (S_last_child_is_open(container)) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (!*all_matched) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (!should_continue) {"
    },
    {
        "line": 9,
        "fullcodeline": "container = container->last_child;"
    },
    {
        "line": 10,
        "fullcodeline": "cont_type = S_type(container);"
    },
    {
        "line": 12,
        "fullcodeline": "S_find_first_nonspace(parser, input);"
    },
    {
        "line": 57,
        "fullcodeline": "container = container->parent; // back up to last matching node"
    },
    {
        "line": 61,
        "fullcodeline": "container = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "if (!parse_extension_block(parser, container, input))"
    },
    {
        "line": 22,
        "fullcodeline": "if (!parse_block_quote_prefix(parser, input))"
    },
    {
        "line": 26,
        "fullcodeline": "if (!parse_node_item_prefix(parser, input, container))"
    },
    {
        "line": 30,
        "fullcodeline": "if (!parse_code_block_prefix(parser, input, container, &should_continue))"
    },
    {
        "line": 37,
        "fullcodeline": "if (!parse_html_block_prefix(parser, container))"
    },
    {
        "line": 45,
        "fullcodeline": "if (!parse_footnote_definition_block_prefix(parser, input, container))"
    }
]