[
    {
        "line": 2,
        "fullcodeline": "char *uri = NULL, *proto = NULL, *method = NULL;"
    },
    {
        "line": 3,
        "fullcodeline": "int is_key = 1, key_len = 0, is_ws_after_key = 0, in_folding;"
    },
    {
        "line": 4,
        "fullcodeline": "char *value = NULL, *key = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int line = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "int request_line_stage = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "int done = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "const unsigned int http_header_strict = (con->conf.http_parseopts & HTTP_PARSEOPT_HEADER_STRICT);"
    },
    {
        "line": 15,
        "fullcodeline": "init_parse_header_state(&state);"
    },
    {
        "line": 67,
        "fullcodeline": "ilen = buffer_string_length(con->parse_request);"
    },
    {
        "line": 285,
        "fullcodeline": "in_folding = 0;"
    },
    {
        "line": 562,
        "fullcodeline": "con->header_len = i;"
    },
    {
        "line": 682,
        "fullcodeline": "con->keep_alive = 0;"
    },
    {
        "line": 683,
        "fullcodeline": "con->response.keep_alive = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "if (con->request_count > 1 &&"
    },
    {
        "line": 68,
        "fullcodeline": "for (i = 0, first = 0; i < ilen && line == 0; i++) {"
    },
    {
        "line": 287,
        "fullcodeline": "if (buffer_string_is_empty(con->request.uri)) {"
    },
    {
        "line": 311,
        "fullcodeline": "for (; i <= ilen && !done; i++) {"
    },
    {
        "line": 566,
        "fullcodeline": "if (con->request.http_version == HTTP_VERSION_1_1) {"
    },
    {
        "line": 600,
        "fullcodeline": "if (!buffer_is_empty(con->request.http_host) &&"
    },
    {
        "line": 615,
        "fullcodeline": "data_string *ds = (data_string *)array_get_element(con->request.headers, \"Transfer-Encoding\");"
    },
    {
        "line": 684,
        "fullcodeline": "if (!con->http_status) con->http_status = 400;"
    },
    {
        "line": 24,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"sdsdSb\","
    },
    {
        "line": 32,
        "fullcodeline": "con->request.request->ptr[1] == '\\n') {"
    },
    {
        "line": 41,
        "fullcodeline": "buffer_copy_string_len(con->parse_request, con->request.request->ptr + 2, buffer_string_length(con->request.request) - 2);"
    },
    {
        "line": 305,
        "fullcodeline": "buffer_copy_string_len(ds->key, CONST_STR_LEN(\"Host\"));"
    },
    {
        "line": 306,
        "fullcodeline": "buffer_copy_string_len(ds->value, state.reqline_host, state.reqline_hostlen);"
    },
    {
        "line": 307,
        "fullcodeline": "array_insert_unique(con->request.headers, (data_unset *)ds);"
    },
    {
        "line": 308,
        "fullcodeline": "con->request.http_host = ds->value;"
    },
    {
        "line": 312,
        "fullcodeline": "char *cur = con->parse_request->ptr + i;"
    },
    {
        "line": 601,
        "fullcodeline": "0 != http_request_host_policy(con, con->request.http_host, con->proto)) {"
    },
    {
        "line": 616,
        "fullcodeline": "if (NULL != ds) {"
    },
    {
        "line": 31,
        "fullcodeline": "con->request.request->ptr[0] == '\\r' &&"
    },
    {
        "line": 301,
        "fullcodeline": "if (NULL == (ds = (data_string *)array_get_unused_element(con->request.headers, TYPE_STRING))) {"
    },
    {
        "line": 567,
        "fullcodeline": "if (state.keep_alive_set != HTTP_CONNECTION_CLOSE) {"
    },
    {
        "line": 577,
        "fullcodeline": "if (con->request.http_host == NULL ||"
    },
    {
        "line": 632,
        "fullcodeline": "buffer_reset(ds->value); /* headers with empty values are ignored */"
    },
    {
        "line": 634,
        "fullcodeline": "state.con_length_set = 1;"
    },
    {
        "line": 635,
        "fullcodeline": "con->request.content_length = -1;"
    },
    {
        "line": 638,
        "fullcodeline": "ds = (data_string *)array_get_element(con->request.headers, \"Content-Length\");"
    },
    {
        "line": 647,
        "fullcodeline": "if (state.con_length_set && con->request.content_length != 0) {"
    },
    {
        "line": 657,
        "fullcodeline": "if (!state.con_length_set) {"
    },
    {
        "line": 674,
        "fullcodeline": "if (con->request.content_length != 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "} else if (con->request_count > 0 &&"
    },
    {
        "line": 280,
        "fullcodeline": "request_line_stage++;"
    },
    {
        "line": 289,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"no uri specified -> 400\");"
    },
    {
        "line": 290,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 302,
        "fullcodeline": "ds = data_string_init();"
    },
    {
        "line": 316,
        "fullcodeline": "int got_colon = 0;"
    },
    {
        "line": 571,
        "fullcodeline": "con->keep_alive = 1;"
    },
    {
        "line": 578,
        "fullcodeline": "buffer_string_is_empty(con->request.http_host)) {"
    },
    {
        "line": 589,
        "fullcodeline": "if (state.keep_alive_set == HTTP_CONNECTION_KEEPALIVE) {"
    },
    {
        "line": 604,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\","
    },
    {
        "line": 606,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 617,
        "fullcodeline": "if (con->request.http_version == HTTP_VERSION_1_0) {"
    },
    {
        "line": 623,
        "fullcodeline": "if (0 != strcasecmp(ds->value->ptr, \"chunked\")) {"
    },
    {
        "line": 639,
        "fullcodeline": "if (NULL != ds) buffer_reset(ds->value); /* headers with empty values are ignored */"
    },
    {
        "line": 649,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\","
    },
    {
        "line": 659,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\","
    },
    {
        "line": 662,
        "fullcodeline": "con->http_status = 411;"
    },
    {
        "line": 43,
        "fullcodeline": "con->request.request->ptr[1] == '\\n') {"
    },
    {
        "line": 55,
        "fullcodeline": "buffer_copy_string_len(con->parse_request, con->request.request->ptr + 1, buffer_string_length(con->request.request) - 1);"
    },
    {
        "line": 71,
        "fullcodeline": "if (con->parse_request->ptr[i+1] != '\\n') break;"
    },
    {
        "line": 76,
        "fullcodeline": "char *nuri = NULL;"
    },
    {
        "line": 79,
        "fullcodeline": "buffer_copy_string_len(con->request.request_line, con->parse_request->ptr, i);"
    },
    {
        "line": 89,
        "fullcodeline": "con->parse_request->ptr[i] = '\\0';"
    },
    {
        "line": 101,
        "fullcodeline": "proto = con->parse_request->ptr + first;"
    },
    {
        "line": 103,
        "fullcodeline": "*(uri - 1) = '\\0';"
    },
    {
        "line": 104,
        "fullcodeline": "*(proto - 1) = '\\0';"
    },
    {
        "line": 120,
        "fullcodeline": "con->request.http_method = r;"
    },
    {
        "line": 213,
        "fullcodeline": "jlen = buffer_string_length(con->request.uri);"
    },
    {
        "line": 249,
        "fullcodeline": "buffer_copy_buffer(con->request.orig_uri, con->request.uri);"
    },
    {
        "line": 251,
        "fullcodeline": "con->http_status = 0;"
    },
    {
        "line": 253,
        "fullcodeline": "line++;"
    },
    {
        "line": 254,
        "fullcodeline": "first = i+1;"
    },
    {
        "line": 573,
        "fullcodeline": "con->keep_alive = 0;"
    },
    {
        "line": 593,
        "fullcodeline": "con->keep_alive = 1;"
    },
    {
        "line": 618,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\","
    },
    {
        "line": 626,
        "fullcodeline": "con->http_status = 501; /* Not Implemented */"
    },
    {
        "line": 58,
        "fullcodeline": "buffer_copy_buffer(con->parse_request, con->request.request);"
    },
    {
        "line": 82,
        "fullcodeline": "if (con->parse_request->ptr[i] == '\\r') {"
    },
    {
        "line": 91,
        "fullcodeline": "if (request_line_stage != 2) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (HTTP_METHOD_UNSET == (r = get_http_method_key(method))) {"
    },
    {
        "line": 128,
        "fullcodeline": "if (0 == strncmp(proto, \"HTTP/\", sizeof(\"HTTP/\") - 1)) {"
    },
    {
        "line": 187,
        "fullcodeline": "if (*uri == '/') {"
    },
    {
        "line": 214,
        "fullcodeline": "if ((con->conf.http_parseopts & HTTP_PARSEOPT_URL_NORMALIZE_CTRLS_REJECT)) {"
    },
    {
        "line": 222,
        "fullcodeline": "if (j < jlen) {"
    },
    {
        "line": 261,
        "fullcodeline": "method = con->parse_request->ptr + first;"
    },
    {
        "line": 262,
        "fullcodeline": "first = i + 1;"
    },
    {
        "line": 266,
        "fullcodeline": "uri = con->parse_request->ptr + first;"
    },
    {
        "line": 267,
        "fullcodeline": "first = i + 1;"
    },
    {
        "line": 325,
        "fullcodeline": "is_key = 0;"
    },
    {
        "line": 327,
        "fullcodeline": "value = cur + 1;"
    },
    {
        "line": 332,
        "fullcodeline": "is_ws_after_key = 0;"
    },
    {
        "line": 371,
        "fullcodeline": "key_len = i - first;"
    },
    {
        "line": 581,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"HTTP/1.1 but Host missing -> 400\");"
    },
    {
        "line": 582,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 595,
        "fullcodeline": "con->keep_alive = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "http_request_missing_CR_before_LF(srv, con);"
    },
    {
        "line": 83,
        "fullcodeline": "con->parse_request->ptr[i] = '\\0';"
    },
    {
        "line": 84,
        "fullcodeline": "++i;"
    },
    {
        "line": 108,
        "fullcodeline": "con->http_status = 501;"
    },
    {
        "line": 129,
        "fullcodeline": "char * major = proto + sizeof(\"HTTP/\") - 1;"
    },
    {
        "line": 130,
        "fullcodeline": "char * minor = strchr(major, '.');"
    },
    {
        "line": 131,
        "fullcodeline": "char *err = NULL;"
    },
    {
        "line": 132,
        "fullcodeline": "int major_num = 0, minor_num = 0;"
    },
    {
        "line": 134,
        "fullcodeline": "int invalid_version = 0;"
    },
    {
        "line": 189,
        "fullcodeline": "buffer_copy_string_len(con->request.uri, uri, proto - uri - 1);"
    },
    {
        "line": 215,
        "fullcodeline": "j = jlen; /* URI will be checked in http_response_prepare() */"
    },
    {
        "line": 329,
        "fullcodeline": "if (is_ws_after_key == 0) {"
    },
    {
        "line": 362,
        "fullcodeline": "if (i == first) {"
    },
    {
        "line": 374,
        "fullcodeline": "for (j = 1; !got_colon; j++) {"
    },
    {
        "line": 404,
        "fullcodeline": "if (con->parse_request->ptr[i+1] == '\\n' && i == first) {"
    },
    {
        "line": 434,
        "fullcodeline": "if (http_header_strict ? (*cur < 32 || ((unsigned char)*cur) >= 127) : *cur == '\\0') {"
    },
    {
        "line": 136,
        "fullcodeline": "if (NULL == minor || /* no dot */"
    },
    {
        "line": 162,
        "fullcodeline": "if (major_num == 1 && minor_num == 1) {"
    },
    {
        "line": 272,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"overlong request line -> 400\");"
    },
    {
        "line": 273,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 330,
        "fullcodeline": "key_len = i - first;"
    },
    {
        "line": 352,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"sbsds\","
    },
    {
        "line": 355,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 363,
        "fullcodeline": "is_key = 0;"
    },
    {
        "line": 364,
        "fullcodeline": "in_folding = 1;"
    },
    {
        "line": 365,
        "fullcodeline": "value = cur;"
    },
    {
        "line": 406,
        "fullcodeline": "con->parse_request->ptr[i] = '\\0';"
    },
    {
        "line": 407,
        "fullcodeline": "con->parse_request->ptr[i+1] = '\\0';"
    },
    {
        "line": 409,
        "fullcodeline": "i++;"
    },
    {
        "line": 411,
        "fullcodeline": "done = 1;"
    },
    {
        "line": 425,
        "fullcodeline": "http_request_missing_CR_before_LF(srv, con);"
    },
    {
        "line": 453,
        "fullcodeline": "if (*cur == '\\n' || con->parse_request->ptr[i+1] == '\\n') {"
    },
    {
        "line": 546,
        "fullcodeline": "if (value == cur) value = cur+1;"
    },
    {
        "line": 549,
        "fullcodeline": "if (http_header_strict ? (*cur >= 0 && *cur < 32) : *cur == '\\0') {"
    },
    {
        "line": 93,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"incomplete request line -> 400\");"
    },
    {
        "line": 94,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 111,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"unknown http-method -> 501\");"
    },
    {
        "line": 112,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 138,
        "fullcodeline": "*(minor + 1) == '\\0' /* no minor */) {"
    },
    {
        "line": 139,
        "fullcodeline": "invalid_version = 1;"
    },
    {
        "line": 163,
        "fullcodeline": "con->request.http_version = con->conf.allow_http11 ? HTTP_VERSION_1_1 : HTTP_VERSION_1_0;"
    },
    {
        "line": 190,
        "fullcodeline": "} else if (0 == strncasecmp(uri, \"http://\", 7) &&"
    },
    {
        "line": 224,
        "fullcodeline": "unsigned char buf[2];"
    },
    {
        "line": 225,
        "fullcodeline": "buf[0] = con->request.uri->ptr[j];"
    },
    {
        "line": 226,
        "fullcodeline": "buf[1] = '\\0';"
    },
    {
        "line": 241,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 454,
        "fullcodeline": "data_string *ds = NULL;"
    },
    {
        "line": 466,
        "fullcodeline": "con->parse_request->ptr[i] = '\\0';"
    },
    {
        "line": 524,
        "fullcodeline": "first = i+1;"
    },
    {
        "line": 525,
        "fullcodeline": "is_key = 1;"
    },
    {
        "line": 526,
        "fullcodeline": "value = NULL;"
    },
    {
        "line": 533,
        "fullcodeline": "in_folding = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "http_request_missing_CR_before_LF(srv, con);"
    },
    {
        "line": 137,
        "fullcodeline": "minor == major || /* no major */"
    },
    {
        "line": 141,
        "fullcodeline": "*minor = '\\0';"
    },
    {
        "line": 142,
        "fullcodeline": "major_num = strtol(major, &err, 10);"
    },
    {
        "line": 146,
        "fullcodeline": "*minor++ = '.';"
    },
    {
        "line": 147,
        "fullcodeline": "minor_num = strtol(minor, &err, 10);"
    },
    {
        "line": 179,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"unknown protocol -> 400\");"
    },
    {
        "line": 180,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 191,
        "fullcodeline": "NULL != (nuri = strchr(uri + 7, '/'))) {"
    },
    {
        "line": 192,
        "fullcodeline": "state.reqline_host = uri + 7;"
    },
    {
        "line": 193,
        "fullcodeline": "state.reqline_hostlen = nuri - state.reqline_host;"
    },
    {
        "line": 195,
        "fullcodeline": "buffer_copy_string_len(con->request.uri, nuri, proto - nuri - 1);"
    },
    {
        "line": 228,
        "fullcodeline": "if (con->request.uri->ptr[j] > 32 &&"
    },
    {
        "line": 375,
        "fullcodeline": "switch(con->parse_request->ptr[j + i]) {"
    },
    {
        "line": 383,
        "fullcodeline": "i += j - 1;"
    },
    {
        "line": 384,
        "fullcodeline": "got_colon = 1;"
    },
    {
        "line": 385,
        "fullcodeline": "is_ws_after_key = 1; /* we already know the key length */"
    },
    {
        "line": 427,
        "fullcodeline": "} else if (i == first) {"
    },
    {
        "line": 436,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"sbsds\","
    },
    {
        "line": 439,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 455,
        "fullcodeline": "if (*cur == '\\n') {"
    },
    {
        "line": 144,
        "fullcodeline": "if (*err != '\\0') invalid_version = 1;"
    },
    {
        "line": 149,
        "fullcodeline": "if (*err != '\\0') invalid_version = 1;"
    },
    {
        "line": 154,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"unknown protocol -> 400\");"
    },
    {
        "line": 155,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 164,
        "fullcodeline": "} else if (major_num == 1 && minor_num == 0) {"
    },
    {
        "line": 217,
        "fullcodeline": "for (j = 0; j < jlen && request_uri_is_valid_char(con->request.uri->ptr[j]); j++) ;"
    },
    {
        "line": 219,
        "fullcodeline": "char *z = memchr(con->request.uri->ptr, '\\0', jlen);"
    },
    {
        "line": 220,
        "fullcodeline": "j = (NULL == z) ? jlen : (size_t)(z - con->request.uri->ptr);"
    },
    {
        "line": 229,
        "fullcodeline": "con->request.uri->ptr[j] != 127) {"
    },
    {
        "line": 231,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"ss\","
    },
    {
        "line": 414,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"CR without LF -> 400\");"
    },
    {
        "line": 415,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 428,
        "fullcodeline": "con->parse_request->ptr[i] = '\\0';"
    },
    {
        "line": 429,
        "fullcodeline": "done = 1;"
    },
    {
        "line": 551,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"sds\","
    },
    {
        "line": 165,
        "fullcodeline": "con->request.http_version = HTTP_VERSION_1_0;"
    },
    {
        "line": 196,
        "fullcodeline": "} else if (0 == strncasecmp(uri, \"https://\", 8) &&"
    },
    {
        "line": 236,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"sd\","
    },
    {
        "line": 392,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"WS character in key -> 400\");"
    },
    {
        "line": 393,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 461,
        "fullcodeline": "con->parse_request->ptr[i] = '\\0';"
    },
    {
        "line": 462,
        "fullcodeline": "++i;"
    },
    {
        "line": 478,
        "fullcodeline": "if (!key || !key_len) {"
    },
    {
        "line": 492,
        "fullcodeline": "if (NULL != (ds = (data_string *)array_get_element_klen(con->request.headers, key, key_len))) {"
    },
    {
        "line": 497,
        "fullcodeline": "key = con->parse_request->ptr + first;"
    },
    {
        "line": 499,
        "fullcodeline": "s_len = cur - value;"
    },
    {
        "line": 506,
        "fullcodeline": "value[s_len] = '\\0';"
    },
    {
        "line": 536,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"sbs\","
    },
    {
        "line": 552,
        "fullcodeline": "\"invalid char in header\", (int)*cur, \"-> 400\");"
    },
    {
        "line": 167,
        "fullcodeline": "con->http_status = 505;"
    },
    {
        "line": 197,
        "fullcodeline": "NULL != (nuri = strchr(uri + 8, '/'))) {"
    },
    {
        "line": 198,
        "fullcodeline": "state.reqline_host = uri + 8;"
    },
    {
        "line": 199,
        "fullcodeline": "state.reqline_hostlen = nuri - state.reqline_host;"
    },
    {
        "line": 201,
        "fullcodeline": "buffer_copy_string_len(con->request.uri, nuri, proto - nuri - 1);"
    },
    {
        "line": 457,
        "fullcodeline": "http_request_missing_CR_before_LF(srv, con);"
    },
    {
        "line": 493,
        "fullcodeline": "buffer_append_string(ds->value, value);"
    },
    {
        "line": 502,
        "fullcodeline": "for (; s_len > 0 &&"
    },
    {
        "line": 504,
        "fullcodeline": "value[s_len - 1] == '\\t'); s_len--);"
    },
    {
        "line": 508,
        "fullcodeline": "if (s_len > 0) {"
    },
    {
        "line": 503,
        "fullcodeline": "(value[s_len - 1] == ' ' ||"
    },
    {
        "line": 512,
        "fullcodeline": "buffer_copy_string_len(ds->key, key, key_len);"
    },
    {
        "line": 513,
        "fullcodeline": "buffer_copy_string_len(ds->value, value, s_len);"
    },
    {
        "line": 170,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"unknown HTTP version -> 505\");"
    },
    {
        "line": 171,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 202,
        "fullcodeline": "} else if (!http_header_strict"
    },
    {
        "line": 482,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\", \"WS at the start of first line -> 400\");"
    },
    {
        "line": 484,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 509,
        "fullcodeline": "if (NULL == (ds = (data_string *)array_get_unused_element(con->request.headers, TYPE_STRING))) {"
    },
    {
        "line": 515,
        "fullcodeline": "if (!parse_single_header(srv, con, &state, ds)) {"
    },
    {
        "line": 204,
        "fullcodeline": "|| (HTTP_METHOD_OPTIONS == con->request.http_method && uri[0] == '*' && uri[1] == '\\0')) {"
    },
    {
        "line": 206,
        "fullcodeline": "buffer_copy_string_len(con->request.uri, uri, proto - uri - 1);"
    },
    {
        "line": 510,
        "fullcodeline": "ds = data_string_init();"
    },
    {
        "line": 203,
        "fullcodeline": "|| (HTTP_METHOD_CONNECT == con->request.http_method && (uri[0] == ':' || light_isdigit(uri[0])))"
    },
    {
        "line": 208,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"ss\", \"request-URI parse error -> 400 for:\", uri);"
    }
]