[
    {
        "line": 2,
        "fullcodeline": "stat_cache_entry *sce = NULL;"
    },
    {
        "line": 3,
        "fullcodeline": "buffer *mtime = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "int allow_caching = (0 == con->http_status || 200 == con->http_status);"
    },
    {
        "line": 7,
        "fullcodeline": "if (HANDLER_ERROR == stat_cache_get_entry(srv, con, path, &sce)) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (NULL == array_get_element(con->response.headers, \"Content-Type\")) {"
    },
    {
        "line": 8,
        "fullcodeline": "con->http_status = (errno == ENOENT) ? 404 : 403;"
    },
    {
        "line": 10,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"sbsb\","
    },
    {
        "line": 30,
        "fullcodeline": "if (!S_ISREG(sce->st.st_mode)) {"
    },
    {
        "line": 47,
        "fullcodeline": "stat_cache_content_type_get(srv, con, path, sce);"
    },
    {
        "line": 64,
        "fullcodeline": "response_header_overwrite(srv, con, CONST_STR_LEN(\"Accept-Ranges\"), CONST_STR_LEN(\"bytes\"));"
    },
    {
        "line": 90,
        "fullcodeline": "if (con->request.http_range && con->conf.range_requests"
    },
    {
        "line": 92,
        "fullcodeline": "&& NULL == array_get_element(con->response.headers, \"Content-Encoding\")) {"
    },
    {
        "line": 137,
        "fullcodeline": "if (0 == sce->st.st_size || 0 == http_chunk_append_file(srv, con, path)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (buffer_string_is_empty(sce->content_type)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (NULL == (ds = (data_string *)array_get_element(con->response.headers, \"Last-Modified\"))) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (HANDLER_FINISHED == http_response_handle_cachable(srv, con, mtime)) {"
    },
    {
        "line": 91,
        "fullcodeline": "&& (200 == con->http_status || 0 == con->http_status)"
    },
    {
        "line": 55,
        "fullcodeline": "response_header_overwrite(srv, con, CONST_STR_LEN(\"Content-Type\"), CONST_STR_LEN(\"application/octet-stream\"));"
    },
    {
        "line": 68,
        "fullcodeline": "if (con->etag_flags != 0 && !buffer_string_is_empty(stat_cache_etag_get(sce, con->etag_flags))) {"
    },
    {
        "line": 79,
        "fullcodeline": "mtime = strftime_cache_get(srv, sce->st.st_mtime);"
    },
    {
        "line": 80,
        "fullcodeline": "response_header_overwrite(srv, con, CONST_STR_LEN(\"Last-Modified\"), CONST_BUF_LEN(mtime));"
    },
    {
        "line": 96,
        "fullcodeline": "if (NULL != (ds = (data_string *)array_get_element(con->request.headers, \"If-Range\"))) {"
    },
    {
        "line": 123,
        "fullcodeline": "con->file_finished = 1;"
    },
    {
        "line": 59,
        "fullcodeline": "response_header_overwrite(srv, con, CONST_STR_LEN(\"Content-Type\"), CONST_BUF_LEN(sce->content_type));"
    },
    {
        "line": 69,
        "fullcodeline": "if (NULL == array_get_element(con->response.headers, \"ETag\")) {"
    },
    {
        "line": 82,
        "fullcodeline": "mtime = ds->value;"
    },
    {
        "line": 71,
        "fullcodeline": "etag_mutate(con->physical.etag, sce->etag);"
    },
    {
        "line": 73,
        "fullcodeline": "response_header_overwrite(srv, con, CONST_STR_LEN(\"ETag\"), CONST_BUF_LEN(con->physical.etag));"
    },
    {
        "line": 125,
        "fullcodeline": "if (0 == http_response_parse_range(srv, con, path, sce)) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (!con->physical.etag) {"
    },
    {
        "line": 109,
        "fullcodeline": "} else if (!mtime) {"
    },
    {
        "line": 106,
        "fullcodeline": "} else if (!buffer_is_equal(ds->value, con->physical.etag)) {"
    },
    {
        "line": 116,
        "fullcodeline": "} else if (!buffer_is_equal(ds->value, mtime)) {"
    }
]