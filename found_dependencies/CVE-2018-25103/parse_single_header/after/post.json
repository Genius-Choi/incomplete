[
    {
        "line": 2,
        "fullcodeline": "int cmp = 0;"
    },
    {
        "line": 124,
        "fullcodeline": "array_insert_unique(con->request.headers, (data_unset *)ds);"
    },
    {
        "line": 128,
        "fullcodeline": "ds->free((data_unset *)ds);"
    },
    {
        "line": 132,
        "fullcodeline": "ds->free((data_unset *)ds);"
    },
    {
        "line": 5,
        "fullcodeline": "if (buffer_string_is_empty(ds->value)) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Connection\")))) {"
    },
    {
        "line": 21,
        "fullcodeline": "vals = srv->split_vals;"
    },
    {
        "line": 23,
        "fullcodeline": "array_reset(vals);"
    },
    {
        "line": 25,
        "fullcodeline": "http_request_split_value(vals, ds->value);"
    },
    {
        "line": 27,
        "fullcodeline": "for (vi = 0; vi < vals->used; vi++) {"
    },
    {
        "line": 41,
        "fullcodeline": "} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Content-Length\")))) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (0 == buffer_caseless_compare(CONST_BUF_LEN(dsv->value), CONST_STR_LEN(\"keep-alive\"))) {"
    },
    {
        "line": 56,
        "fullcodeline": "r = strtoll(ds->value->ptr, &err, 10);"
    },
    {
        "line": 31,
        "fullcodeline": "state->keep_alive_set = HTTP_CONNECTION_KEEPALIVE;"
    },
    {
        "line": 58,
        "fullcodeline": "if (*err == '\\0' && r >= 0) {"
    },
    {
        "line": 59,
        "fullcodeline": "state->con_length_set = 1;"
    },
    {
        "line": 60,
        "fullcodeline": "con->request.content_length = r;"
    },
    {
        "line": 66,
        "fullcodeline": "} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Content-Type\")))) {"
    },
    {
        "line": 34,
        "fullcodeline": "} else if (0 == buffer_caseless_compare(CONST_BUF_LEN(dsv->value), CONST_STR_LEN(\"close\"))) {"
    },
    {
        "line": 62,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"sbs\","
    },
    {
        "line": 35,
        "fullcodeline": "state->keep_alive_set = HTTP_CONNECTION_CLOSE;"
    },
    {
        "line": 47,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\","
    },
    {
        "line": 49,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 80,
        "fullcodeline": "} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"Host\")))) {"
    },
    {
        "line": 72,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\","
    },
    {
        "line": 74,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 96,
        "fullcodeline": "} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"If-Modified-Since\")))) {"
    },
    {
        "line": 85,
        "fullcodeline": "con->request.http_host = ds->value;"
    },
    {
        "line": 115,
        "fullcodeline": "} else if (cmp > 0 && 0 == (cmp = buffer_caseless_compare(CONST_BUF_LEN(ds->key), CONST_STR_LEN(\"If-None-Match\")))) {"
    },
    {
        "line": 102,
        "fullcodeline": "} else if (0 == strcasecmp(con->request.http_if_modified_since, ds->value->ptr)) {"
    },
    {
        "line": 88,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\","
    },
    {
        "line": 90,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    },
    {
        "line": 107,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"s\","
    },
    {
        "line": 109,
        "fullcodeline": "log_error_write(srv, __FILE__, __LINE__, \"Sb\","
    }
]