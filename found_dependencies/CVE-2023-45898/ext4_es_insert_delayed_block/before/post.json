[
    {
        "line": 5,
        "fullcodeline": "int err1 = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "int err2 = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "struct extent_status *es1 = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "struct extent_status *es2 = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "es_debug(\"add [%u/1) delayed to extent status tree of inode %lu\\n\","
    },
    {
        "line": 16,
        "fullcodeline": "newes.es_lblk = lblk;"
    },
    {
        "line": 17,
        "fullcodeline": "newes.es_len = 1;"
    },
    {
        "line": 18,
        "fullcodeline": "ext4_es_store_pblock_status(&newes, ~0, EXTENT_STATUS_DELAYED);"
    },
    {
        "line": 19,
        "fullcodeline": "trace_ext4_es_insert_delayed_block(inode, &newes, allocated);"
    },
    {
        "line": 21,
        "fullcodeline": "ext4_es_insert_extent_check(inode, &newes);"
    },
    {
        "line": 28,
        "fullcodeline": "write_lock(&EXT4_I(inode)->i_es_lock);"
    },
    {
        "line": 30,
        "fullcodeline": "err1 = __es_remove_extent(inode, lblk, lblk, NULL, es1);"
    },
    {
        "line": 34,
        "fullcodeline": "err2 = __es_insert_extent(inode, &newes, es2);"
    },
    {
        "line": 47,
        "fullcodeline": "write_unlock(&EXT4_I(inode)->i_es_lock);"
    },
    {
        "line": 51,
        "fullcodeline": "ext4_es_print_tree(inode);"
    },
    {
        "line": 52,
        "fullcodeline": "ext4_print_pending_tree(inode);"
    },
    {
        "line": 10,
        "fullcodeline": "if (EXT4_SB(inode->i_sb)->s_mount_state & EXT4_FC_REPLAY)"
    },
    {
        "line": 24,
        "fullcodeline": "if (err1 && !es1)"
    },
    {
        "line": 26,
        "fullcodeline": "if ((err1 || err2) && !es2)"
    },
    {
        "line": 31,
        "fullcodeline": "if (err1 != 0)"
    },
    {
        "line": 35,
        "fullcodeline": "if (err2 != 0)"
    },
    {
        "line": 42,
        "fullcodeline": "if (es1 && !es1->es_len)"
    },
    {
        "line": 44,
        "fullcodeline": "if (es2 && !es2->es_len)"
    },
    {
        "line": 48,
        "fullcodeline": "if (err1 || err2)"
    },
    {
        "line": 25,
        "fullcodeline": "es1 = __es_alloc_extent(true);"
    },
    {
        "line": 27,
        "fullcodeline": "es2 = __es_alloc_extent(true);"
    },
    {
        "line": 39,
        "fullcodeline": "__insert_pending(inode, lblk);"
    },
    {
        "line": 43,
        "fullcodeline": "__es_free_extent(es1);"
    },
    {
        "line": 45,
        "fullcodeline": "__es_free_extent(es2);"
    }
]