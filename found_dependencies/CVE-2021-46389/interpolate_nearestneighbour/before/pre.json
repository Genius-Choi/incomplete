[
    {
        "line": 4,
        "fullcodeline": "unsigned char *input = (unsigned char*) in.data;"
    },
    {
        "line": 6,
        "fullcodeline": "int channels = in.channels;"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned int width = in.width;"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned int height = in.height;"
    },
    {
        "line": 14,
        "fullcodeline": "bool new_buffer = false;"
    },
    {
        "line": 22,
        "fullcodeline": "float xscale = (float)width / (float)resampled_width;"
    },
    {
        "line": 23,
        "fullcodeline": "float yscale = (float)height / (float)resampled_height;"
    },
    {
        "line": 45,
        "fullcodeline": "in.width = resampled_width;"
    },
    {
        "line": 46,
        "fullcodeline": "in.height = resampled_height;"
    },
    {
        "line": 47,
        "fullcodeline": "in.dataLength = resampled_width * resampled_height * channels * (in.bpc/8);"
    },
    {
        "line": 48,
        "fullcodeline": "in.data = output;"
    },
    {
        "line": 15,
        "fullcodeline": "if( resampled_width*resampled_height > in.width*in.height ){"
    },
    {
        "line": 25,
        "fullcodeline": "for( unsigned int j=0; j<resampled_height; j++ ){"
    },
    {
        "line": 16,
        "fullcodeline": "new_buffer = true;"
    },
    {
        "line": 17,
        "fullcodeline": "output = new unsigned char[(unsigned long long)resampled_width*resampled_height*in.channels];"
    },
    {
        "line": 42,
        "fullcodeline": "if( new_buffer ) delete[] (unsigned char*) input;"
    },
    {
        "line": 19,
        "fullcodeline": "else output = (unsigned char*) in.data;"
    },
    {
        "line": 26,
        "fullcodeline": "for( unsigned int i=0; i<resampled_width; i++ ){"
    },
    {
        "line": 30,
        "fullcodeline": "unsigned long ii = (unsigned int) floorf(i*xscale);"
    },
    {
        "line": 31,
        "fullcodeline": "unsigned long jj = (unsigned int) floorf(j*yscale);"
    },
    {
        "line": 32,
        "fullcodeline": "unsigned long pyramid_index = (unsigned int) channels * ( ii + jj*width );"
    },
    {
        "line": 34,
        "fullcodeline": "unsigned long long resampled_index = (unsigned long long)(i + j*resampled_width)*channels;"
    },
    {
        "line": 35,
        "fullcodeline": "for( int k=0; k<in.channels; k++ ){"
    },
    {
        "line": 36,
        "fullcodeline": "output[resampled_index+k] = input[pyramid_index+k];"
    }
]