[
    {
        "line": 3,
        "fullcodeline": "AVFilterContext    *ctx = inlink->dst;"
    },
    {
        "line": 4,
        "fullcodeline": "FPSContext           *s = ctx->priv;"
    },
    {
        "line": 9,
        "fullcodeline": "s->frames_in++;"
    },
    {
        "line": 43,
        "fullcodeline": "delta = av_rescale_q_rnd(buf->pts - s->pts, inlink->time_base,"
    },
    {
        "line": 96,
        "fullcodeline": "flush_fifo(s->fifo);"
    },
    {
        "line": 98,
        "fullcodeline": "ret = write_to_fifo(s->fifo, buf);"
    },
    {
        "line": 99,
        "fullcodeline": "s->pts = s->first_pts + av_rescale_q(s->frames_out, outlink->time_base, inlink->time_base);"
    },
    {
        "line": 11,
        "fullcodeline": "if (s->pts == AV_NOPTS_VALUE) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (buf->pts == AV_NOPTS_VALUE) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (delta < 1) {"
    },
    {
        "line": 63,
        "fullcodeline": "for (i = 0; i < delta; i++) {"
    },
    {
        "line": 49,
        "fullcodeline": "int drop = av_fifo_size(s->fifo)/sizeof(AVFrame*);"
    },
    {
        "line": 51,
        "fullcodeline": "av_log(ctx, AV_LOG_DEBUG, \"Dropping %d frame(s).\\n\", drop);"
    },
    {
        "line": 52,
        "fullcodeline": "s->drop += drop;"
    },
    {
        "line": 54,
        "fullcodeline": "av_fifo_generic_read(s->fifo, &tmp, sizeof(tmp), NULL);"
    },
    {
        "line": 55,
        "fullcodeline": "flush_fifo(s->fifo);"
    },
    {
        "line": 56,
        "fullcodeline": "ret = write_to_fifo(s->fifo, tmp);"
    },
    {
        "line": 58,
        "fullcodeline": "av_frame_free(&buf);"
    },
    {
        "line": 65,
        "fullcodeline": "av_fifo_generic_read(s->fifo, &buf_out, sizeof(buf_out), NULL);"
    },
    {
        "line": 86,
        "fullcodeline": "buf_out->pts = av_rescale_q(s->first_pts, inlink->time_base,"
    },
    {
        "line": 94,
        "fullcodeline": "s->frames_out++;"
    },
    {
        "line": 12,
        "fullcodeline": "if (buf->pts != AV_NOPTS_VALUE) {"
    },
    {
        "line": 39,
        "fullcodeline": "return write_to_fifo(s->fifo, buf);"
    },
    {
        "line": 68,
        "fullcodeline": "if (!av_fifo_size(s->fifo) && i < delta - 1) {"
    },
    {
        "line": 89,
        "fullcodeline": "if ((ret = ff_filter_frame(outlink, buf_out)) < 0) {"
    },
    {
        "line": 13,
        "fullcodeline": "ret = write_to_fifo(s->fifo, buf);"
    },
    {
        "line": 69,
        "fullcodeline": "AVFrame *dup = av_frame_clone(buf_out);"
    },
    {
        "line": 71,
        "fullcodeline": "av_log(ctx, AV_LOG_DEBUG, \"Duplicating frame.\\n\");"
    },
    {
        "line": 83,
        "fullcodeline": "s->dup++;"
    },
    {
        "line": 90,
        "fullcodeline": "av_frame_free(&buf);"
    },
    {
        "line": 14,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 17,
        "fullcodeline": "if (s->start_time != DBL_MAX && s->start_time != AV_NOPTS_VALUE) {"
    },
    {
        "line": 29,
        "fullcodeline": "av_log(ctx, AV_LOG_WARNING, \"Discarding initial frame(s) with no \""
    },
    {
        "line": 31,
        "fullcodeline": "av_frame_free(&buf);"
    },
    {
        "line": 32,
        "fullcodeline": "s->drop++;"
    },
    {
        "line": 77,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "double first_pts = s->start_time * AV_TIME_BASE;"
    },
    {
        "line": 19,
        "fullcodeline": "first_pts = FFMIN(FFMAX(first_pts, INT64_MIN), INT64_MAX);"
    },
    {
        "line": 20,
        "fullcodeline": "s->first_pts = s->pts = av_rescale_q(first_pts, AV_TIME_BASE_Q,"
    },
    {
        "line": 73,
        "fullcodeline": "ret = write_to_fifo(s->fifo, dup);"
    },
    {
        "line": 78,
        "fullcodeline": "av_frame_free(&buf_out);"
    },
    {
        "line": 79,
        "fullcodeline": "av_frame_free(&buf);"
    },
    {
        "line": 26,
        "fullcodeline": "s->first_pts = s->pts = buf->pts;"
    },
    {
        "line": 75,
        "fullcodeline": "ret = AVERROR(ENOMEM);"
    }
]