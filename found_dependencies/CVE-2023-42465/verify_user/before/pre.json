[
    {
        "line": 5,
        "fullcodeline": "int ret, status, success = AUTH_FAILURE;"
    },
    {
        "line": 9,
        "fullcodeline": "debug_decl(verify_user, SUDOERS_DEBUG_AUTH);"
    },
    {
        "line": 22,
        "fullcodeline": "sigemptyset(&sa.sa_mask);"
    },
    {
        "line": 23,
        "fullcodeline": "sa.sa_flags = SA_RESTART;"
    },
    {
        "line": 24,
        "fullcodeline": "sa.sa_handler = SIG_DFL;"
    },
    {
        "line": 25,
        "fullcodeline": "(void) sigaction(SIGTSTP, &sa, &saved_sigtstp);"
    },
    {
        "line": 33,
        "fullcodeline": "sigemptyset(&mask);"
    },
    {
        "line": 34,
        "fullcodeline": "sigaddset(&mask, SIGINT);"
    },
    {
        "line": 35,
        "fullcodeline": "sigaddset(&mask, SIGQUIT);"
    },
    {
        "line": 36,
        "fullcodeline": "(void) sigprocmask(SIG_BLOCK, &mask, &omask);"
    },
    {
        "line": 102,
        "fullcodeline": "(void) sigaction(SIGTSTP, &saved_sigtstp, NULL);"
    },
    {
        "line": 103,
        "fullcodeline": "(void) sigprocmask(SIG_SETMASK, &omask, NULL);"
    },
    {
        "line": 126,
        "fullcodeline": "debug_return_int(ret);"
    },
    {
        "line": 12,
        "fullcodeline": "if (auth_switch[0].name == NULL) {"
    },
    {
        "line": 38,
        "fullcodeline": "for (ntries = 0; ntries < def_passwd_tries; ntries++) {"
    },
    {
        "line": 13,
        "fullcodeline": "audit_failure(ctx, ctx->runas.argv, N_(\"no authentication methods\"));"
    },
    {
        "line": 14,
        "fullcodeline": "log_warningx(ctx, SLOG_SEND_MAIL,"
    },
    {
        "line": 18,
        "fullcodeline": "debug_return_int(-1);"
    },
    {
        "line": 39,
        "fullcodeline": "int num_methods = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "char *pass = NULL;"
    },
    {
        "line": 107,
        "fullcodeline": "ret = true;"
    },
    {
        "line": 113,
        "fullcodeline": "log_auth_failure(ctx, validated, ntries);"
    },
    {
        "line": 114,
        "fullcodeline": "ret = false;"
    },
    {
        "line": 117,
        "fullcodeline": "SET(validated, FLAG_NO_USER_INPUT);"
    },
    {
        "line": 121,
        "fullcodeline": "log_auth_failure(ctx, validated, 0);"
    },
    {
        "line": 122,
        "fullcodeline": "ret = -1;"
    },
    {
        "line": 15,
        "fullcodeline": "N_(\"There are no authentication methods compiled into sudo!  \""
    },
    {
        "line": 43,
        "fullcodeline": "if (user_interrupted())"
    },
    {
        "line": 46,
        "fullcodeline": "if (ntries != 0)"
    },
    {
        "line": 50,
        "fullcodeline": "for (auth = auth_switch; auth->name; auth++) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (num_methods == 0) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (!standalone) {"
    },
    {
        "line": 84,
        "fullcodeline": "for (auth = auth_switch; auth->name; auth++) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (pass != NULL)"
    },
    {
        "line": 96,
        "fullcodeline": "if (success != AUTH_FAILURE)"
    },
    {
        "line": 111,
        "fullcodeline": "if (ntries != 0)"
    },
    {
        "line": 47,
        "fullcodeline": "pass_warn();"
    },
    {
        "line": 53,
        "fullcodeline": "num_methods++;"
    },
    {
        "line": 65,
        "fullcodeline": "audit_failure(ctx, ctx->runas.argv,"
    },
    {
        "line": 67,
        "fullcodeline": "log_warningx(ctx, SLOG_SEND_MAIL,"
    },
    {
        "line": 69,
        "fullcodeline": "debug_return_int(-1);"
    },
    {
        "line": 78,
        "fullcodeline": "pass = auth_getpass(prompt, SUDO_CONV_PROMPT_ECHO_OFF, callback);"
    },
    {
        "line": 88,
        "fullcodeline": "success = auth->status = (auth->verify)(ctx, pw,"
    },
    {
        "line": 94,
        "fullcodeline": "freezero(pass, strlen(pass));"
    },
    {
        "line": 112,
        "fullcodeline": "SET(validated, FLAG_BAD_PASSWORD);"
    },
    {
        "line": 51,
        "fullcodeline": "if (IS_DISABLED(auth))"
    },
    {
        "line": 54,
        "fullcodeline": "if (auth->setup != NULL) {"
    },
    {
        "line": 66,
        "fullcodeline": "N_(\"no authentication methods\"));"
    },
    {
        "line": 68,
        "fullcodeline": "N_(\"Unable to initialize authentication methods.\"));"
    },
    {
        "line": 74,
        "fullcodeline": "if (IS_NONINTERACTIVE(&auth_switch[0])) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (pass == NULL)"
    },
    {
        "line": 85,
        "fullcodeline": "if (IS_DISABLED(auth))"
    },
    {
        "line": 90,
        "fullcodeline": "if (success != AUTH_FAILURE)"
    },
    {
        "line": 55,
        "fullcodeline": "status = (auth->setup)(ctx, pw, &prompt, auth);"
    },
    {
        "line": 75,
        "fullcodeline": "success = AUTH_NONINTERACTIVE;"
    },
    {
        "line": 56,
        "fullcodeline": "if (status == AUTH_FAILURE)"
    },
    {
        "line": 89,
        "fullcodeline": "standalone ? prompt : pass, auth, callback);"
    },
    {
        "line": 57,
        "fullcodeline": "SET(auth->flags, FLAG_DISABLED);"
    },
    {
        "line": 58,
        "fullcodeline": "else if (status == AUTH_NONINTERACTIVE)"
    },
    {
        "line": 60,
        "fullcodeline": "else if (status == AUTH_ERROR || user_interrupted())"
    }
]