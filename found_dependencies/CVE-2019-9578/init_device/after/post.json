[
    {
        "line": 3,
        "fullcodeline": "unsigned char resp[1024];"
    },
    {
        "line": 4,
        "fullcodeline": "unsigned char nonce[8];"
    },
    {
        "line": 10,
        "fullcodeline": "dev->cid = CID_BROADCAST;"
    },
    {
        "line": 5,
        "fullcodeline": "if (obtain_nonce(nonce) != 0)"
    },
    {
        "line": 12,
        "fullcodeline": "if (u2fh_sendrecv"
    },
    {
        "line": 29,
        "fullcodeline": "dev->cid ="
    },
    {
        "line": 33,
        "fullcodeline": "offs += 4;"
    },
    {
        "line": 34,
        "fullcodeline": "dev->versionInterface = resp[offs++];"
    },
    {
        "line": 35,
        "fullcodeline": "dev->versionMajor = resp[offs++];"
    },
    {
        "line": 36,
        "fullcodeline": "dev->versionMinor = resp[offs++];"
    },
    {
        "line": 37,
        "fullcodeline": "dev->versionBuild = resp[offs++];"
    },
    {
        "line": 38,
        "fullcodeline": "dev->capFlags = resp[offs++];"
    },
    {
        "line": 18,
        "fullcodeline": "if (resplen < 17)"
    },
    {
        "line": 24,
        "fullcodeline": "if (memcmp (nonce, resp, sizeof (nonce)) != 0)"
    },
    {
        "line": 30,
        "fullcodeline": "resp[offs] << 24 | resp[offs + 1] << 16 | resp[offs +"
    },
    {
        "line": 31,
        "fullcodeline": "2] << 8 | resp[offs +"
    }
]