[
    {
        "line": 3,
        "fullcodeline": "const size_t bufferSize = 1024;"
    },
    {
        "line": 4,
        "fullcodeline": "char szBuffer[1024];"
    },
    {
        "line": 5,
        "fullcodeline": "char szTmp[256];"
    },
    {
        "line": 6,
        "fullcodeline": "char *pszValue = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "const char *pszWild = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "const char *pszSingle = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "const char *pszEscape = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "int  bCaseInsensitive = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "int nLength=0, i=0, iTmp=0;"
    },
    {
        "line": 19,
        "fullcodeline": "propIsLike = (FEPropertyIsLike *)psFilterNode->pOther;"
    },
    {
        "line": 20,
        "fullcodeline": "pszWild = propIsLike->pszWildCard;"
    },
    {
        "line": 21,
        "fullcodeline": "pszSingle = propIsLike->pszSingleChar;"
    },
    {
        "line": 22,
        "fullcodeline": "pszEscape = propIsLike->pszEscapeChar;"
    },
    {
        "line": 23,
        "fullcodeline": "bCaseInsensitive = propIsLike->bCaseInsensitive;"
    },
    {
        "line": 31,
        "fullcodeline": "szBuffer[0] = '\\0';"
    },
    {
        "line": 32,
        "fullcodeline": "sprintf(szTmp, \"%s\", \"(\\\"[\");"
    },
    {
        "line": 33,
        "fullcodeline": "szTmp[4] = '\\0';"
    },
    {
        "line": 35,
        "fullcodeline": "strlcat(szBuffer, szTmp, bufferSize);"
    },
    {
        "line": 38,
        "fullcodeline": "strlcat(szBuffer, psFilterNode->psLeftNode->pszValue, bufferSize);"
    },
    {
        "line": 39,
        "fullcodeline": "szBuffer[strlen(szBuffer)] = '\\0';"
    },
    {
        "line": 46,
        "fullcodeline": "szTmp[7] = '\\0';"
    },
    {
        "line": 47,
        "fullcodeline": "strlcat(szBuffer, szTmp, bufferSize);"
    },
    {
        "line": 48,
        "fullcodeline": "szBuffer[strlen(szBuffer)] = '\\0';"
    },
    {
        "line": 50,
        "fullcodeline": "pszValue = psFilterNode->psRightNode->pszValue;"
    },
    {
        "line": 51,
        "fullcodeline": "nLength = strlen(pszValue);"
    },
    {
        "line": 55,
        "fullcodeline": "iTmp =0;"
    },
    {
        "line": 79,
        "fullcodeline": "szTmp[iTmp] = '\"';"
    },
    {
        "line": 80,
        "fullcodeline": "szTmp[++iTmp] = '\\0';"
    },
    {
        "line": 82,
        "fullcodeline": "strlcat(szBuffer, szTmp, bufferSize);"
    },
    {
        "line": 83,
        "fullcodeline": "strlcat(szBuffer, \")\", bufferSize);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!psFilterNode || !psFilterNode->pOther || !psFilterNode->psLeftNode || !psFilterNode->psRightNode || !psFilterNode->psRightNode->pszValue)"
    },
    {
        "line": 60,
        "fullcodeline": "for (i=0; i<nLength; i++) {"
    },
    {
        "line": 84,
        "fullcodeline": "return msStrdup(szBuffer);"
    },
    {
        "line": 25,
        "fullcodeline": "if (!pszWild || strlen(pszWild) == 0 || !pszSingle || strlen(pszSingle) == 0 || !pszEscape || strlen(pszEscape) == 0)"
    },
    {
        "line": 43,
        "fullcodeline": "sprintf(szTmp, \"%s\", \"]\\\" ~* \\\"\");"
    },
    {
        "line": 56,
        "fullcodeline": "if (nLength > 0 && pszValue[0] != pszWild[0] && pszValue[0] != pszSingle[0] && pszValue[0] != pszEscape[0]) {"
    },
    {
        "line": 58,
        "fullcodeline": "iTmp++;"
    },
    {
        "line": 45,
        "fullcodeline": "sprintf(szTmp, \"%s\", \"]\\\" ~ \\\"\");"
    },
    {
        "line": 61,
        "fullcodeline": "if (pszValue[i] != pszWild[0] && pszValue[i] != pszSingle[0] && pszValue[i] != pszEscape[0]) {"
    },
    {
        "line": 63,
        "fullcodeline": "iTmp++;"
    },
    {
        "line": 52,
        "fullcodeline": "if( 1 + 2 * nLength + 1 + 1 >= sizeof(szTmp) )"
    },
    {
        "line": 65,
        "fullcodeline": "} else if (pszValue[i] == pszSingle[0]) {"
    },
    {
        "line": 67,
        "fullcodeline": "iTmp++;"
    },
    {
        "line": 69,
        "fullcodeline": "} else if (pszValue[i] == pszEscape[0]) {"
    },
    {
        "line": 71,
        "fullcodeline": "iTmp++;"
    },
    {
        "line": 73,
        "fullcodeline": "} else if (pszValue[i] == pszWild[0]) {"
    },
    {
        "line": 75,
        "fullcodeline": "szTmp[iTmp++] = '*';"
    },
    {
        "line": 74,
        "fullcodeline": "szTmp[iTmp++] = '.';"
    }
]