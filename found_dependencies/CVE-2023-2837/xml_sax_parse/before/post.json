[
    {
        "line": 3,
        "fullcodeline": "u32 i = 0;"
    },
    {
        "line": 209,
        "fullcodeline": "xml_sax_swap(parser);"
    },
    {
        "line": 10,
        "fullcodeline": "while (parser->current_pos<parser->line_size) {"
    },
    {
        "line": 211,
        "fullcodeline": "if (parser->sax_state==SAX_STATE_SYNTAX_ERROR)"
    },
    {
        "line": 14,
        "fullcodeline": "is_text = GF_FALSE;"
    },
    {
        "line": 11,
        "fullcodeline": "if (!force_parse && parser->suspended) goto exit;"
    },
    {
        "line": 18,
        "fullcodeline": "is_text = GF_TRUE;"
    },
    {
        "line": 20,
        "fullcodeline": "elt = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "i=0;"
    },
    {
        "line": 51,
        "fullcodeline": "is_end = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 53,
        "fullcodeline": "cdata_sep = 0;"
    },
    {
        "line": 123,
        "fullcodeline": "sep = parser->buffer[parser->elt_name_end-1];"
    },
    {
        "line": 124,
        "fullcodeline": "parser->buffer[parser->elt_name_end-1] = 0;"
    },
    {
        "line": 125,
        "fullcodeline": "elt = parser->buffer + parser->elt_name_start-1;"
    },
    {
        "line": 127,
        "fullcodeline": "parser->sax_state = SAX_STATE_ATT_NAME;"
    },
    {
        "line": 128,
        "fullcodeline": "assert(parser->elt_start_pos <= parser->file_pos + parser->current_pos);"
    },
    {
        "line": 129,
        "fullcodeline": "parser->elt_start_pos = parser->file_pos + parser->current_pos;"
    },
    {
        "line": 168,
        "fullcodeline": "parser->current_pos+=1+i;"
    },
    {
        "line": 169,
        "fullcodeline": "parser->buffer[parser->elt_name_end-1] = sep;"
    },
    {
        "line": 183,
        "fullcodeline": "xml_sax_parse_entity(parser);"
    },
    {
        "line": 186,
        "fullcodeline": "xml_sax_skip_doctype(parser);"
    },
    {
        "line": 189,
        "fullcodeline": "xml_sax_skip_xml_proc(parser);"
    },
    {
        "line": 192,
        "fullcodeline": "xml_sax_cdata(parser);"
    },
    {
        "line": 22,
        "fullcodeline": "while ((c = parser->buffer[parser->current_pos+i]) !='<') {"
    },
    {
        "line": 42,
        "fullcodeline": "if (is_text && i) {"
    },
    {
        "line": 120,
        "fullcodeline": "if (!parser->elt_name_end) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (!strncmp(elt, \"!--\", 3)) {"
    },
    {
        "line": 172,
        "fullcodeline": "if (!xml_sax_parse_comments(parser)) {"
    },
    {
        "line": 179,
        "fullcodeline": "if (xml_sax_parse_attribute(parser))"
    },
    {
        "line": 28,
        "fullcodeline": "i++;"
    },
    {
        "line": 43,
        "fullcodeline": "u32 has_esc = parser->text_check_escapes;"
    },
    {
        "line": 44,
        "fullcodeline": "xml_sax_store_text(parser, i);"
    },
    {
        "line": 45,
        "fullcodeline": "parser->text_check_escapes = has_esc;"
    },
    {
        "line": 46,
        "fullcodeline": "parser->sax_state = SAX_STATE_ELEMENT;"
    },
    {
        "line": 99,
        "fullcodeline": "parser->elt_name_start = parser->current_pos+1 + 1;"
    },
    {
        "line": 105,
        "fullcodeline": "xml_sax_flush_text(parser);"
    },
    {
        "line": 106,
        "fullcodeline": "parser->elt_end_pos = parser->file_pos + parser->current_pos + i;"
    },
    {
        "line": 116,
        "fullcodeline": "parser->current_pos+=2+i;"
    },
    {
        "line": 117,
        "fullcodeline": "parser->sax_state = SAX_STATE_TEXT_CONTENT;"
    },
    {
        "line": 132,
        "fullcodeline": "xml_sax_flush_text(parser);"
    },
    {
        "line": 133,
        "fullcodeline": "parser->sax_state = SAX_STATE_COMMENT;"
    },
    {
        "line": 173,
        "fullcodeline": "xml_sax_swap(parser);"
    },
    {
        "line": 23,
        "fullcodeline": "if ((parser->init_state==2) && (c ==']')) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (c=='\\n') parser->line++;"
    },
    {
        "line": 35,
        "fullcodeline": "if (parser->current_pos+i==parser->line_size) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (!strncmp(parser->buffer+parser->current_pos+1+i, \"!--\", 3)) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (!c) {"
    },
    {
        "line": 64,
        "fullcodeline": "if ((c=='\\t') || (c=='\\r') || (c==' ') ) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (parser->current_pos+1+i==parser->line_size) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (is_end==1) parser->elt_name_start ++;"
    },
    {
        "line": 101,
        "fullcodeline": "if (is_end==2) parser->elt_name_end = parser->current_pos+1+i;"
    },
    {
        "line": 107,
        "fullcodeline": "if (is_end==2) {"
    },
    {
        "line": 115,
        "fullcodeline": "if (parser->sax_state == SAX_STATE_SYNTAX_ERROR) break;"
    },
    {
        "line": 134,
        "fullcodeline": "if (i>3) parser->current_pos -= (i-3);"
    },
    {
        "line": 24,
        "fullcodeline": "parser->sax_state = SAX_STATE_ATT_NAME;"
    },
    {
        "line": 25,
        "fullcodeline": "parser->current_pos+=i+1;"
    },
    {
        "line": 55,
        "fullcodeline": "c = parser->buffer[parser->current_pos+1+i];"
    },
    {
        "line": 57,
        "fullcodeline": "parser->sax_state = SAX_STATE_COMMENT;"
    },
    {
        "line": 58,
        "fullcodeline": "i += 3;"
    },
    {
        "line": 108,
        "fullcodeline": "parser->sax_state = SAX_STATE_ELEMENT;"
    },
    {
        "line": 109,
        "fullcodeline": "xml_sax_node_start(parser);"
    },
    {
        "line": 110,
        "fullcodeline": "xml_sax_node_end(parser, GF_FALSE);"
    },
    {
        "line": 136,
        "fullcodeline": "else if (!strcmp(elt, \"?xml\")) parser->init_state = 1;"
    },
    {
        "line": 31,
        "fullcodeline": "if (c=='&') parser->text_check_escapes |= 1;"
    },
    {
        "line": 36,
        "fullcodeline": "if ((parser->line_size>=2*XML_INPUT_SIZE) && !parser->init_state)"
    },
    {
        "line": 48,
        "fullcodeline": "parser->current_pos += i;"
    },
    {
        "line": 49,
        "fullcodeline": "assert(parser->current_pos < parser->line_size);"
    },
    {
        "line": 102,
        "fullcodeline": "else parser->elt_name_end = parser->current_pos+1+i + 1;"
    },
    {
        "line": 112,
        "fullcodeline": "parser->elt_end_pos += parser->elt_name_end - parser->elt_name_start;"
    },
    {
        "line": 113,
        "fullcodeline": "xml_sax_node_end(parser, GF_TRUE);"
    },
    {
        "line": 37,
        "fullcodeline": "parser->sax_state = SAX_STATE_SYNTAX_ERROR;"
    },
    {
        "line": 68,
        "fullcodeline": "else if (c=='\\n') {"
    },
    {
        "line": 66,
        "fullcodeline": "else parser->current_pos++;"
    },
    {
        "line": 69,
        "fullcodeline": "parser->line++;"
    },
    {
        "line": 137,
        "fullcodeline": "else if (!strcmp(elt, \"!DOCTYPE\")) parser->init_state = 2;"
    },
    {
        "line": 32,
        "fullcodeline": "else if (c==';') parser->text_check_escapes |= 2;"
    },
    {
        "line": 73,
        "fullcodeline": "else if (c=='>') break;"
    },
    {
        "line": 71,
        "fullcodeline": "else parser->current_pos++;"
    },
    {
        "line": 138,
        "fullcodeline": "else if (!strcmp(elt, \"!ENTITY\")) parser->sax_state = SAX_STATE_ENTITY;"
    },
    {
        "line": 74,
        "fullcodeline": "else if (c=='=') break;"
    },
    {
        "line": 139,
        "fullcodeline": "else if (!strcmp(elt, \"!ATTLIST\") || !strcmp(elt, \"!ELEMENT\")) parser->sax_state = SAX_STATE_SKIP_DOCTYPE;"
    },
    {
        "line": 75,
        "fullcodeline": "else if (c=='[') {"
    },
    {
        "line": 76,
        "fullcodeline": "i++;"
    },
    {
        "line": 140,
        "fullcodeline": "else if (!strcmp(elt, \"![CDATA[\"))"
    },
    {
        "line": 77,
        "fullcodeline": "if (!cdata_sep) cdata_sep = 1;"
    },
    {
        "line": 141,
        "fullcodeline": "parser->sax_state = SAX_STATE_CDATA;"
    },
    {
        "line": 82,
        "fullcodeline": "else if (c=='/') {"
    },
    {
        "line": 83,
        "fullcodeline": "is_end = !i ? 1 : 2;"
    },
    {
        "line": 84,
        "fullcodeline": "i++;"
    },
    {
        "line": 142,
        "fullcodeline": "else if (elt[0]=='?') {"
    },
    {
        "line": 143,
        "fullcodeline": "i--;"
    },
    {
        "line": 144,
        "fullcodeline": "parser->sax_state = SAX_STATE_XML_PROC;"
    },
    {
        "line": 85,
        "fullcodeline": "} else if (c=='<') {"
    },
    {
        "line": 148,
        "fullcodeline": "xml_sax_flush_text(parser);"
    },
    {
        "line": 86,
        "fullcodeline": "if (parser->sax_state != SAX_STATE_COMMENT) {"
    },
    {
        "line": 91,
        "fullcodeline": "i++;"
    },
    {
        "line": 150,
        "fullcodeline": "parser->init_state = 0;"
    },
    {
        "line": 87,
        "fullcodeline": "parser->sax_state = SAX_STATE_SYNTAX_ERROR;"
    },
    {
        "line": 153,
        "fullcodeline": "if (gf_list_count(parser->entities)) {"
    },
    {
        "line": 156,
        "fullcodeline": "parser->buffer[parser->elt_name_end-1] = sep;"
    },
    {
        "line": 157,
        "fullcodeline": "orig_buf = gf_strdup(parser->buffer + parser->current_pos);"
    },
    {
        "line": 158,
        "fullcodeline": "parser->current_pos = 0;"
    },
    {
        "line": 159,
        "fullcodeline": "parser->line_size = 0;"
    },
    {
        "line": 160,
        "fullcodeline": "parser->elt_start_pos = 0;"
    },
    {
        "line": 161,
        "fullcodeline": "parser->sax_state = SAX_STATE_TEXT_CONTENT;"
    },
    {
        "line": 162,
        "fullcodeline": "e = gf_xml_sax_parse_intern(parser, orig_buf);"
    },
    {
        "line": 163,
        "fullcodeline": "gf_free(orig_buf);"
    }
]