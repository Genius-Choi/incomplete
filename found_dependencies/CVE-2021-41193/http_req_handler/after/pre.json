[
    {
        "line": 4,
        "fullcodeline": "struct mbuf *mb = mbuf_alloc(1024);"
    },
    {
        "line": 5,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "(void)arg;"
    },
    {
        "line": 8,
        "fullcodeline": "info(\"restsrv: request %r %r%r from %J\\n\","
    },
    {
        "line": 51,
        "fullcodeline": "mem_deref(mb);"
    },
    {
        "line": 10,
        "fullcodeline": "http_conn_peer(conn));"
    },
    {
        "line": 12,
        "fullcodeline": "if (0 == pl_strcasecmp(&msg->met, \"POST\") &&"
    },
    {
        "line": 13,
        "fullcodeline": "0 == pl_strcasecmp(&msg->path, \"/create\")) {"
    },
    {
        "line": 15,
        "fullcodeline": "handle_post_create(conn, msg->mb, (size_t)msg->clen);"
    },
    {
        "line": 45,
        "fullcodeline": "http_ereply(conn, 400, \"Bad Request\");"
    },
    {
        "line": 46,
        "fullcodeline": "warning(\"restsrv: response 400 Bad Request (%m)\\n\", err);"
    },
    {
        "line": 48,
        "fullcodeline": "http_conn_close(conn);"
    },
    {
        "line": 17,
        "fullcodeline": "else if (0 == pl_strcasecmp(&msg->met, \"PUT\") &&"
    },
    {
        "line": 18,
        "fullcodeline": "0 == pl_strcasecmp(&msg->path, \"/publish\")) {"
    },
    {
        "line": 20,
        "fullcodeline": "handle_put_publish(conn, msg, msg->mb, (size_t)msg->clen);"
    },
    {
        "line": 22,
        "fullcodeline": "else if (0 == pl_strcasecmp(&msg->met, \"PUT\") &&"
    },
    {
        "line": 23,
        "fullcodeline": "0 == pl_strcasecmp(&msg->path, \"/accept\")) {"
    },
    {
        "line": 25,
        "fullcodeline": "handle_put_accept(conn, msg, msg->mb, (size_t)msg->clen);"
    },
    {
        "line": 27,
        "fullcodeline": "else if (0 == pl_strcasecmp(&msg->met, \"GET\") &&"
    },
    {
        "line": 28,
        "fullcodeline": "0 == pl_strcasecmp(&msg->path, \"/publish\")) {"
    },
    {
        "line": 30,
        "fullcodeline": "handle_get_publish(conn, msg, msg->mb, (size_t)msg->clen);"
    },
    {
        "line": 32,
        "fullcodeline": "else if (0 == pl_strcasecmp(&msg->met, \"GET\") &&"
    },
    {
        "line": 33,
        "fullcodeline": "0 == pl_strcasecmp(&msg->path, \"/accept\")) {"
    },
    {
        "line": 35,
        "fullcodeline": "handle_get_accept(conn, msg, msg->mb, (size_t)msg->clen);"
    },
    {
        "line": 38,
        "fullcodeline": "warning(\"no such resource\\n\");"
    },
    {
        "line": 39,
        "fullcodeline": "err = ENOENT;"
    }
]