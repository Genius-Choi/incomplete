[
    {
        "line": 5,
        "fullcodeline": "char *json_str = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "size_t nservers = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "re_printf(\"config ready! err=%d\\n\");"
    },
    {
        "line": 20,
        "fullcodeline": "re_printf(\"CONFIG: %s\\n\", json_str);"
    },
    {
        "line": 22,
        "fullcodeline": "config_update(g_config, err, json_str, str_len(json_str));"
    },
    {
        "line": 23,
        "fullcodeline": "mem_deref(json_str);"
    },
    {
        "line": 25,
        "fullcodeline": "servers = config_get_iceservers(g_config, &nservers);"
    },
    {
        "line": 26,
        "fullcodeline": "re_printf(\"Probing: %d servers\\n\", nservers);"
    },
    {
        "line": 11,
        "fullcodeline": "if (err == ECONNABORTED)"
    },
    {
        "line": 14,
        "fullcodeline": "if (!err && jobj) {"
    },
    {
        "line": 28,
        "fullcodeline": "for (i = 0; i < nservers; ++i) {"
    },
    {
        "line": 15,
        "fullcodeline": "err = jzon_encode(&json_str, jobj);"
    },
    {
        "line": 29,
        "fullcodeline": "struct zapi_ice_server *turn = &servers[i];"
    },
    {
        "line": 32,
        "fullcodeline": "err = stun_uri_decode(&uri, turn->url);"
    },
    {
        "line": 44,
        "fullcodeline": "error(\"config request failed: %m\\n\", err);"
    },
    {
        "line": 34,
        "fullcodeline": "err = turn_dns_lookup(turn, &uri);"
    },
    {
        "line": 36,
        "fullcodeline": "start_netprobe(&uri.addr, uri.proto, uri.secure,"
    }
]