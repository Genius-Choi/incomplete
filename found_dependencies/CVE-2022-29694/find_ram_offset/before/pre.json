[
    {
        "line": 4,
        "fullcodeline": "ram_addr_t offset = RAM_ADDR_MAX, mingap = RAM_ADDR_MAX;"
    },
    {
        "line": 6,
        "fullcodeline": "assert(size != 0); /* it would hand out same offset multiple times */"
    },
    {
        "line": 12,
        "fullcodeline": "RAMBLOCK_FOREACH(block) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (QLIST_EMPTY(&uc->ram_list.blocks)) {"
    },
    {
        "line": 13,
        "fullcodeline": "ram_addr_t candidate, next = RAM_ADDR_MAX;"
    },
    {
        "line": 18,
        "fullcodeline": "candidate = block->offset + block->max_length;"
    },
    {
        "line": 19,
        "fullcodeline": "candidate = ROUND_UP(candidate, BITS_PER_LONG << TARGET_PAGE_BITS);"
    },
    {
        "line": 24,
        "fullcodeline": "RAMBLOCK_FOREACH(next_block) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (offset == RAM_ADDR_MAX) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (next_block->offset >= candidate) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (next - candidate >= size && next - candidate < mingap) {"
    },
    {
        "line": 35,
        "fullcodeline": "offset = candidate;"
    },
    {
        "line": 26,
        "fullcodeline": "next = MIN(next, next_block->offset);"
    },
    {
        "line": 36,
        "fullcodeline": "mingap = next - candidate;"
    }
]