[
    {
        "line": 5,
        "fullcodeline": "ram_addr_t max_size = size;"
    },
    {
        "line": 7,
        "fullcodeline": "size = HOST_PAGE_ALIGN(uc, size);"
    },
    {
        "line": 8,
        "fullcodeline": "max_size = HOST_PAGE_ALIGN(uc, max_size);"
    },
    {
        "line": 12,
        "fullcodeline": "new_block->mr = mr;"
    },
    {
        "line": 13,
        "fullcodeline": "new_block->used_length = size;"
    },
    {
        "line": 14,
        "fullcodeline": "new_block->max_length = max_size;"
    },
    {
        "line": 15,
        "fullcodeline": "assert(max_size >= size);"
    },
    {
        "line": 16,
        "fullcodeline": "new_block->page_size = uc->qemu_real_host_page_size;"
    },
    {
        "line": 17,
        "fullcodeline": "new_block->host = host;"
    },
    {
        "line": 22,
        "fullcodeline": "uc->invalid_addr = UC_ERR_OK;"
    },
    {
        "line": 23,
        "fullcodeline": "ram_block_add(mr->uc, new_block);"
    },
    {
        "line": 10,
        "fullcodeline": "if (new_block == NULL)"
    },
    {
        "line": 25,
        "fullcodeline": "if (uc->invalid_error != UC_ERR_OK) {"
    },
    {
        "line": 19,
        "fullcodeline": "new_block->flags |= RAM_PREALLOC;"
    },
    {
        "line": 26,
        "fullcodeline": "g_free(new_block);"
    }
]