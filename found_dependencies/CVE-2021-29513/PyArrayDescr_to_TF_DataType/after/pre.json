[
    {
        "line": 5,
        "fullcodeline": "Py_ssize_t pos = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "if (descr->fields == nullptr) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (PyDict_Next(descr->fields, &pos, &key, &value)) {"
    },
    {
        "line": 44,
        "fullcodeline": "return errors::Internal(\"Unsupported numpy data type\");"
    },
    {
        "line": 16,
        "fullcodeline": "const char* key_string ="
    },
    {
        "line": 22,
        "fullcodeline": "tensorflow::string key = key_string;"
    },
    {
        "line": 10,
        "fullcodeline": "return errors::Internal(\"Unexpected numpy data type\");"
    },
    {
        "line": 19,
        "fullcodeline": "if (!key_string) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (key == \"quint8\") {"
    },
    {
        "line": 42,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 17,
        "fullcodeline": "PyBytes_Check(key) ? PyBytes_AsString(key)"
    },
    {
        "line": 18,
        "fullcodeline": ": PyBytes_AsString(PyUnicode_AsASCIIString(key));"
    },
    {
        "line": 28,
        "fullcodeline": "*out_tf_datatype = TF_QUINT8;"
    },
    {
        "line": 20,
        "fullcodeline": "return errors::Internal(\"Corrupt numpy type descriptor\");"
    },
    {
        "line": 29,
        "fullcodeline": "} else if (key == \"qint8\") {"
    },
    {
        "line": 30,
        "fullcodeline": "*out_tf_datatype = TF_QINT8;"
    },
    {
        "line": 31,
        "fullcodeline": "} else if (key == \"qint16\") {"
    },
    {
        "line": 32,
        "fullcodeline": "*out_tf_datatype = TF_QINT16;"
    },
    {
        "line": 33,
        "fullcodeline": "} else if (key == \"quint16\") {"
    },
    {
        "line": 34,
        "fullcodeline": "*out_tf_datatype = TF_QUINT16;"
    },
    {
        "line": 35,
        "fullcodeline": "} else if (key == \"qint32\") {"
    },
    {
        "line": 36,
        "fullcodeline": "*out_tf_datatype = TF_QINT32;"
    },
    {
        "line": 38,
        "fullcodeline": "*out_tf_datatype = TF_RESOURCE;"
    },
    {
        "line": 40,
        "fullcodeline": "return errors::Internal(\"Unsupported numpy data type\");"
    }
]