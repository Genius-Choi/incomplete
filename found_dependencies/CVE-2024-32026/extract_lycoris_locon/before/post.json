[
    {
        "line": 50,
        "fullcodeline": "run_cmd = rf'\"{PYTHON}\" \"{scriptdir}/tools/lycoris_locon_extract.py\"'"
    },
    {
        "line": 55,
        "fullcodeline": "run_cmd += f\" --device {device}\""
    },
    {
        "line": 56,
        "fullcodeline": "run_cmd += f\" --mode {mode}\""
    },
    {
        "line": 57,
        "fullcodeline": "run_cmd += f\" --safetensors\""
    },
    {
        "line": 72,
        "fullcodeline": "run_cmd += f\" --sparsity {sparsity}\""
    },
    {
        "line": 75,
        "fullcodeline": "run_cmd += rf' \"{base_model}\"'"
    },
    {
        "line": 76,
        "fullcodeline": "run_cmd += rf' \"{db_model}\"'"
    },
    {
        "line": 77,
        "fullcodeline": "run_cmd += rf' \"{output_name}\"'"
    },
    {
        "line": 79,
        "fullcodeline": "log.info(run_cmd)"
    },
    {
        "line": 81,
        "fullcodeline": "env = os.environ.copy()"
    },
    {
        "line": 82,
        "fullcodeline": "env[\"PYTHONPATH\"] = ("
    },
    {
        "line": 87,
        "fullcodeline": "subprocess.run(run_cmd, shell=True, env=env)"
    },
    {
        "line": 89,
        "fullcodeline": "log.info(\"Done extracting...\")"
    },
    {
        "line": 22,
        "fullcodeline": "if db_model == \"\":"
    },
    {
        "line": 26,
        "fullcodeline": "if base_model == \"\":"
    },
    {
        "line": 31,
        "fullcodeline": "if not os.path.isfile(db_model):"
    },
    {
        "line": 35,
        "fullcodeline": "if not os.path.isfile(base_model):"
    },
    {
        "line": 39,
        "fullcodeline": "if os.path.dirname(output_name) == \"\":"
    },
    {
        "line": 45,
        "fullcodeline": "if os.path.normpath(db_model) == os.path.normpath(output_name):"
    },
    {
        "line": 58,
        "fullcodeline": "if mode == \"fixed\":"
    },
    {
        "line": 61,
        "fullcodeline": "if mode == \"threshold\":"
    },
    {
        "line": 64,
        "fullcodeline": "if mode == \"ratio\":"
    },
    {
        "line": 67,
        "fullcodeline": "if mode == \"quantile\":"
    },
    {
        "line": 83,
        "fullcodeline": "rf\"{scriptdir}{os.pathsep}{scriptdir}/sd-scripts{os.pathsep}{env.get('PYTHONPATH', '')}\""
    },
    {
        "line": 23,
        "fullcodeline": "msgbox(\"Invalid finetuned model file\")"
    },
    {
        "line": 27,
        "fullcodeline": "msgbox(\"Invalid base model file\")"
    },
    {
        "line": 32,
        "fullcodeline": "msgbox(\"The provided finetuned model is not a file\")"
    },
    {
        "line": 36,
        "fullcodeline": "msgbox(\"The provided base model is not a file\")"
    },
    {
        "line": 41,
        "fullcodeline": "output_name = os.path.join(os.path.dirname(db_model), output_name)"
    },
    {
        "line": 42,
        "fullcodeline": "if os.path.isdir(output_name):"
    },
    {
        "line": 44,
        "fullcodeline": "output_name = os.path.join(output_name, \"lora.safetensors\")"
    },
    {
        "line": 48,
        "fullcodeline": "output_name = f\"{path}_tmp{ext}\""
    },
    {
        "line": 52,
        "fullcodeline": "run_cmd += f\" --is_sdxl\""
    },
    {
        "line": 54,
        "fullcodeline": "run_cmd += f\" --is_v2\""
    },
    {
        "line": 59,
        "fullcodeline": "run_cmd += f\" --linear_dim {linear_dim}\""
    },
    {
        "line": 60,
        "fullcodeline": "run_cmd += f\" --conv_dim {conv_dim}\""
    },
    {
        "line": 62,
        "fullcodeline": "run_cmd += f\" --linear_threshold {linear_threshold}\""
    },
    {
        "line": 63,
        "fullcodeline": "run_cmd += f\" --conv_threshold {conv_threshold}\""
    },
    {
        "line": 65,
        "fullcodeline": "run_cmd += f\" --linear_ratio {linear_ratio}\""
    },
    {
        "line": 66,
        "fullcodeline": "run_cmd += f\" --conv_ratio {conv_ratio}\""
    },
    {
        "line": 68,
        "fullcodeline": "run_cmd += f\" --linear_quantile {linear_quantile}\""
    },
    {
        "line": 69,
        "fullcodeline": "run_cmd += f\" --conv_quantile {conv_quantile}\""
    },
    {
        "line": 71,
        "fullcodeline": "run_cmd += f\" --use_sparse_bias\""
    },
    {
        "line": 74,
        "fullcodeline": "run_cmd += f\" --disable_cp\""
    },
    {
        "line": 47,
        "fullcodeline": "path, ext = os.path.splitext(output_name)"
    }
]