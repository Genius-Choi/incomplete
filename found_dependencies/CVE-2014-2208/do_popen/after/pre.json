[
    {
        "line": 5,
        "fullcodeline": "lwp_read(fin, buf);"
    },
    {
        "line": 6,
        "fullcodeline": "bool read_only = (buf[0] == 'r');"
    },
    {
        "line": 8,
        "fullcodeline": "lwp_read(fin, buf);"
    },
    {
        "line": 10,
        "fullcodeline": "std::string old_cwd = Process::GetCurrentDirectory();"
    },
    {
        "line": 11,
        "fullcodeline": "lwp_read(fin, cwd);"
    },
    {
        "line": 21,
        "fullcodeline": "FILE *f = buf[0] ? ::popen(buf.c_str(), read_only ? \"r\" : \"w\") : nullptr;"
    },
    {
        "line": 13,
        "fullcodeline": "if (old_cwd != cwd) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (old_cwd != cwd && chdir(old_cwd.c_str())) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (f == nullptr) {"
    },
    {
        "line": 28,
        "fullcodeline": "Logger::Error(\"Light process failed popen: %d (%s).\", errno,"
    },
    {
        "line": 30,
        "fullcodeline": "lwp_write(fout, \"error\");"
    },
    {
        "line": 14,
        "fullcodeline": "if (chdir(cwd.c_str())) {"
    },
    {
        "line": 29,
        "fullcodeline": "folly::errnoStr(errno).c_str());"
    },
    {
        "line": 32,
        "fullcodeline": "lwp_write(fout, \"success\");"
    },
    {
        "line": 34,
        "fullcodeline": "int fd = fileno(f);"
    },
    {
        "line": 17,
        "fullcodeline": "Logger::Warning(\"Light Process failed chdir to %s.\", cwd.c_str());"
    }
]