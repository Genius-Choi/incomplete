[
    {
        "line": 3,
        "fullcodeline": "int id = GetId();"
    },
    {
        "line": 6,
        "fullcodeline": "fprintf(g_procs[id].m_fout, \"popen\\n%s\\n%s\\n%s\\n\", type, cmd, cwd);"
    },
    {
        "line": 7,
        "fullcodeline": "fflush(g_procs[id].m_fout);"
    },
    {
        "line": 9,
        "fullcodeline": "char buf[BUFFER_SIZE];"
    },
    {
        "line": 10,
        "fullcodeline": "read_buf(g_procs[id].m_fin, buf);"
    },
    {
        "line": 15,
        "fullcodeline": "int64_t fptr = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "read_buf(g_procs[id].m_fin, buf);"
    },
    {
        "line": 23,
        "fullcodeline": "int fd = recv_fd(g_procs[id].m_afdt_fd);"
    },
    {
        "line": 28,
        "fullcodeline": "FILE *f = fdopen(fd, type);"
    },
    {
        "line": 29,
        "fullcodeline": "g_procs[id].m_popenMap[(int64_t)f] = fptr;"
    },
    {
        "line": 11,
        "fullcodeline": "if (strncmp(buf, \"error\", 5) == 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (!fptr) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (fd < 0) {"
    },
    {
        "line": 19,
        "fullcodeline": "Logger::Error(\"Light process failed to return the file pointer.\");"
    },
    {
        "line": 25,
        "fullcodeline": "Logger::Error(\"Light process failed to send the file descriptor.\");"
    }
]