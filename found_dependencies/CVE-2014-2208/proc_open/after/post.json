[
    {
        "line": 5,
        "fullcodeline": "int id = GetId();"
    },
    {
        "line": 8,
        "fullcodeline": "always_assert(created.size() == desired.size());"
    },
    {
        "line": 11,
        "fullcodeline": "lwp_write(fout, \"proc_open\");"
    },
    {
        "line": 12,
        "fullcodeline": "lwp_write(fout, cmd);"
    },
    {
        "line": 13,
        "fullcodeline": "lwp_write(fout, cwd ? cwd : \"\");"
    },
    {
        "line": 14,
        "fullcodeline": "lwp_write_int32(fout, (int)env.size());"
    },
    {
        "line": 19,
        "fullcodeline": "lwp_write_int32(fout, (int)created.size());"
    },
    {
        "line": 23,
        "fullcodeline": "fflush(fout);"
    },
    {
        "line": 25,
        "fullcodeline": "bool error_send = false;"
    },
    {
        "line": 26,
        "fullcodeline": "int save_errno = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "lwp_read(fin, buf);"
    },
    {
        "line": 47,
        "fullcodeline": "always_assert(buf == \"success\");"
    },
    {
        "line": 48,
        "fullcodeline": "int64_t pid = -1;"
    },
    {
        "line": 49,
        "fullcodeline": "lwp_read_int64(fin, pid);"
    },
    {
        "line": 50,
        "fullcodeline": "always_assert(pid);"
    },
    {
        "line": 15,
        "fullcodeline": "for (unsigned int i = 0; i < env.size(); i++) {"
    },
    {
        "line": 20,
        "fullcodeline": "for (unsigned int i = 0; i < desired.size(); i++) {"
    },
    {
        "line": 27,
        "fullcodeline": "for (unsigned int i = 0; i < created.size(); i++) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (buf == \"error\") {"
    },
    {
        "line": 51,
        "fullcodeline": "return (pid_t)pid;"
    },
    {
        "line": 16,
        "fullcodeline": "lwp_write(fout, env[i]);"
    },
    {
        "line": 21,
        "fullcodeline": "lwp_write_int32(fout, desired[i]);"
    },
    {
        "line": 39,
        "fullcodeline": "lwp_read_int32(fin, errno);"
    },
    {
        "line": 28,
        "fullcodeline": "if (!send_fd(g_procs[id].m_afdt_fd, created[i])) {"
    },
    {
        "line": 45,
        "fullcodeline": "return -1;"
    },
    {
        "line": 29,
        "fullcodeline": "error_send = true;"
    },
    {
        "line": 30,
        "fullcodeline": "save_errno = errno;"
    },
    {
        "line": 43,
        "fullcodeline": "errno = save_errno;"
    }
]