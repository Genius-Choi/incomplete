[
    {
        "line": 7,
        "fullcodeline": "volatile JSAMPROW row = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "JSAMPROW rowptr[1];"
    },
    {
        "line": 11,
        "fullcodeline": "char comment[255];"
    },
    {
        "line": 13,
        "fullcodeline": "memset (&cinfo, 0, sizeof (cinfo));"
    },
    {
        "line": 14,
        "fullcodeline": "memset (&jerr, 0, sizeof (jerr));"
    },
    {
        "line": 16,
        "fullcodeline": "cinfo.err = jpeg_std_error (&jerr);"
    },
    {
        "line": 17,
        "fullcodeline": "cinfo.client_data = &jmpbufw;"
    },
    {
        "line": 26,
        "fullcodeline": "cinfo.err->error_exit = fatal_jpeg_error;"
    },
    {
        "line": 28,
        "fullcodeline": "jpeg_create_compress (&cinfo);"
    },
    {
        "line": 30,
        "fullcodeline": "cinfo.image_width = im->sx;"
    },
    {
        "line": 31,
        "fullcodeline": "cinfo.image_height = im->sy;"
    },
    {
        "line": 32,
        "fullcodeline": "cinfo.input_components = 3;\t/* # of color components per pixel */"
    },
    {
        "line": 33,
        "fullcodeline": "cinfo.in_color_space = JCS_RGB;\t/* colorspace of input image */"
    },
    {
        "line": 34,
        "fullcodeline": "jpeg_set_defaults (&cinfo);"
    },
    {
        "line": 36,
        "fullcodeline": "cinfo.density_unit = 1;"
    },
    {
        "line": 37,
        "fullcodeline": "cinfo.X_density = im->res_x;"
    },
    {
        "line": 38,
        "fullcodeline": "cinfo.Y_density = im->res_y;"
    },
    {
        "line": 49,
        "fullcodeline": "jpeg_gdIOCtx_dest (&cinfo, outfile);"
    },
    {
        "line": 51,
        "fullcodeline": "row = (JSAMPROW) safe_emalloc(cinfo.image_width * cinfo.input_components, sizeof(JSAMPLE), 0);"
    },
    {
        "line": 52,
        "fullcodeline": "memset(row, 0, cinfo.image_width * cinfo.input_components * sizeof(JSAMPLE));"
    },
    {
        "line": 53,
        "fullcodeline": "rowptr[0] = row;"
    },
    {
        "line": 55,
        "fullcodeline": "jpeg_start_compress (&cinfo, TRUE);"
    },
    {
        "line": 62,
        "fullcodeline": "jpeg_write_marker (&cinfo, JPEG_COM, (unsigned char *) comment, (unsigned int) strlen (comment));"
    },
    {
        "line": 113,
        "fullcodeline": "jpeg_finish_compress (&cinfo);"
    },
    {
        "line": 114,
        "fullcodeline": "jpeg_destroy_compress (&cinfo);"
    },
    {
        "line": 115,
        "fullcodeline": "gdFree (row);"
    },
    {
        "line": 18,
        "fullcodeline": "if (setjmp (jmpbufw.jmpbuf) != 0) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (quality >= 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (gdImageGetInterlaced (im)) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (quality >= 0) {"
    },
    {
        "line": 41,
        "fullcodeline": "jpeg_set_quality (&cinfo, quality, TRUE);"
    },
    {
        "line": 46,
        "fullcodeline": "jpeg_simple_progression (&cinfo);"
    },
    {
        "line": 58,
        "fullcodeline": "snprintf(comment, sizeof(comment)-1, \"CREATOR: gd-jpeg v%s (using IJG JPEG v%d), quality = %d\\n\", GD_JPEG_VERSION, JPEG_LIB_VERSION, quality);"
    },
    {
        "line": 60,
        "fullcodeline": "snprintf(comment, sizeof(comment)-1, \"CREATOR: gd-jpeg v%s (using IJG JPEG v%d), default quality\\n\", GD_JPEG_VERSION, JPEG_LIB_VERSION);"
    },
    {
        "line": 70,
        "fullcodeline": "for (i = 0; i < im->sy; i++) {"
    },
    {
        "line": 21,
        "fullcodeline": "gdFree (row);"
    },
    {
        "line": 79,
        "fullcodeline": "nlines = jpeg_write_scanlines (&cinfo, rowptr, 1);"
    },
    {
        "line": 85,
        "fullcodeline": "for (i = 0; i < im->sy; i++) {"
    },
    {
        "line": 71,
        "fullcodeline": "for (jidx = 0, j = 0; j < im->sx; j++) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (nlines != 1) {"
    },
    {
        "line": 106,
        "fullcodeline": "nlines = jpeg_write_scanlines (&cinfo, rowptr, 1);"
    },
    {
        "line": 74,
        "fullcodeline": "row[jidx++] = gdTrueColorGetRed (val);"
    },
    {
        "line": 75,
        "fullcodeline": "row[jidx++] = gdTrueColorGetGreen (val);"
    },
    {
        "line": 76,
        "fullcodeline": "row[jidx++] = gdTrueColorGetBlue (val);"
    },
    {
        "line": 81,
        "fullcodeline": "gd_error_ex(GD_WARNING, \"gd_jpeg: warning: jpeg_write_scanlines returns %u -- expected 1\", nlines);"
    },
    {
        "line": 86,
        "fullcodeline": "for (jidx = 0, j = 0; j < im->sx; j++) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (nlines != 1) {"
    },
    {
        "line": 108,
        "fullcodeline": "gd_error_ex(GD_WARNING, \"gd_jpeg: warning: jpeg_write_scanlines returns %u -- expected 1\", nlines);"
    }
]