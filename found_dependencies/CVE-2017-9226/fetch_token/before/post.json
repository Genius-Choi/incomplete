[
    {
        "line": 5,
        "fullcodeline": "OnigEncoding enc = env->enc;"
    },
    {
        "line": 6,
        "fullcodeline": "OnigSyntaxType* syn = env->syntax;"
    },
    {
        "line": 17,
        "fullcodeline": "tok->type  = TK_STRING;"
    },
    {
        "line": 18,
        "fullcodeline": "tok->base  = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "tok->backp = p;"
    },
    {
        "line": 21,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 631,
        "fullcodeline": "*src = p;"
    },
    {
        "line": 22,
        "fullcodeline": "if (IS_MC_ESC_CODE(c, syn)) {"
    },
    {
        "line": 13,
        "fullcodeline": "tok->type = TK_EOT;"
    },
    {
        "line": 25,
        "fullcodeline": "tok->backp = p;"
    },
    {
        "line": 26,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 28,
        "fullcodeline": "tok->u.c = c;"
    },
    {
        "line": 29,
        "fullcodeline": "tok->escaped = 1;"
    },
    {
        "line": 469,
        "fullcodeline": "tok->u.c = c;"
    },
    {
        "line": 470,
        "fullcodeline": "tok->escaped = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "tok->type = TK_OP_REPEAT;"
    },
    {
        "line": 34,
        "fullcodeline": "tok->u.repeat.lower = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "tok->u.repeat.upper = REPEAT_INFINITE;"
    },
    {
        "line": 41,
        "fullcodeline": "tok->type = TK_OP_REPEAT;"
    },
    {
        "line": 42,
        "fullcodeline": "tok->u.repeat.lower = 1;"
    },
    {
        "line": 43,
        "fullcodeline": "tok->u.repeat.upper = REPEAT_INFINITE;"
    },
    {
        "line": 49,
        "fullcodeline": "tok->type = TK_OP_REPEAT;"
    },
    {
        "line": 50,
        "fullcodeline": "tok->u.repeat.lower = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "tok->u.repeat.upper = 1;"
    },
    {
        "line": 79,
        "fullcodeline": "r = fetch_range_quantifier(&p, end, tok, env);"
    },
    {
        "line": 93,
        "fullcodeline": "tok->type = TK_ALT;"
    },
    {
        "line": 98,
        "fullcodeline": "tok->type = TK_SUBEXP_OPEN;"
    },
    {
        "line": 103,
        "fullcodeline": "tok->type = TK_SUBEXP_CLOSE;"
    },
    {
        "line": 108,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 109,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_WORD;"
    },
    {
        "line": 110,
        "fullcodeline": "tok->u.prop.not   = 0;"
    },
    {
        "line": 115,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 116,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_WORD;"
    },
    {
        "line": 117,
        "fullcodeline": "tok->u.prop.not   = 1;"
    },
    {
        "line": 122,
        "fullcodeline": "tok->type = TK_ANCHOR;"
    },
    {
        "line": 123,
        "fullcodeline": "tok->u.anchor = ANCHOR_WORD_BOUND;"
    },
    {
        "line": 128,
        "fullcodeline": "tok->type = TK_ANCHOR;"
    },
    {
        "line": 129,
        "fullcodeline": "tok->u.anchor = ANCHOR_NOT_WORD_BOUND;"
    },
    {
        "line": 148,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 149,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_SPACE;"
    },
    {
        "line": 150,
        "fullcodeline": "tok->u.prop.not   = 0;"
    },
    {
        "line": 155,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 156,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_SPACE;"
    },
    {
        "line": 157,
        "fullcodeline": "tok->u.prop.not   = 1;"
    },
    {
        "line": 162,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 163,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_DIGIT;"
    },
    {
        "line": 164,
        "fullcodeline": "tok->u.prop.not   = 0;"
    },
    {
        "line": 169,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 170,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_DIGIT;"
    },
    {
        "line": 171,
        "fullcodeline": "tok->u.prop.not   = 1;"
    },
    {
        "line": 176,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 177,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_XDIGIT;"
    },
    {
        "line": 178,
        "fullcodeline": "tok->u.prop.not   = 0;"
    },
    {
        "line": 183,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 184,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_XDIGIT;"
    },
    {
        "line": 185,
        "fullcodeline": "tok->u.prop.not   = 1;"
    },
    {
        "line": 191,
        "fullcodeline": "tok->type = TK_ANCHOR;"
    },
    {
        "line": 192,
        "fullcodeline": "tok->u.subtype = ANCHOR_BEGIN_BUF;"
    },
    {
        "line": 197,
        "fullcodeline": "tok->type = TK_ANCHOR;"
    },
    {
        "line": 198,
        "fullcodeline": "tok->u.subtype = ANCHOR_SEMI_END_BUF;"
    },
    {
        "line": 204,
        "fullcodeline": "tok->type = TK_ANCHOR;"
    },
    {
        "line": 205,
        "fullcodeline": "tok->u.subtype = ANCHOR_END_BUF;"
    },
    {
        "line": 210,
        "fullcodeline": "tok->type = TK_ANCHOR;"
    },
    {
        "line": 211,
        "fullcodeline": "tok->u.subtype = ANCHOR_BEGIN_POSITION;"
    },
    {
        "line": 227,
        "fullcodeline": "prev = p;"
    },
    {
        "line": 262,
        "fullcodeline": "prev = p;"
    },
    {
        "line": 278,
        "fullcodeline": "prev = p;"
    },
    {
        "line": 279,
        "fullcodeline": "num = onig_scan_unsigned_number(&p, end, enc);"
    },
    {
        "line": 308,
        "fullcodeline": "p = prev;"
    },
    {
        "line": 32,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF)) break;"
    },
    {
        "line": 40,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_PLUS_ONE_INF)) break;"
    },
    {
        "line": 48,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_QMARK_ZERO_ONE)) break;"
    },
    {
        "line": 53,
        "fullcodeline": "if (!PEND && PPEEK_IS('?') &&"
    },
    {
        "line": 78,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_BRACE_INTERVAL)) break;"
    },
    {
        "line": 80,
        "fullcodeline": "if (r < 0) return r;  /* error */"
    },
    {
        "line": 81,
        "fullcodeline": "if (r == 0) goto greedy_check;"
    },
    {
        "line": 92,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_VBAR_ALT)) break;"
    },
    {
        "line": 97,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_LPAREN_SUBEXP)) break;"
    },
    {
        "line": 102,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_LPAREN_SUBEXP)) break;"
    },
    {
        "line": 107,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_W_WORD)) break;"
    },
    {
        "line": 114,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_W_WORD)) break;"
    },
    {
        "line": 121,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_B_WORD_BOUND)) break;"
    },
    {
        "line": 127,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_B_WORD_BOUND)) break;"
    },
    {
        "line": 147,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_S_WHITE_SPACE)) break;"
    },
    {
        "line": 154,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_S_WHITE_SPACE)) break;"
    },
    {
        "line": 161,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_D_DIGIT)) break;"
    },
    {
        "line": 168,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_D_DIGIT)) break;"
    },
    {
        "line": 175,
        "fullcodeline": "if (! IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_H_XDIGIT)) break;"
    },
    {
        "line": 182,
        "fullcodeline": "if (! IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_H_XDIGIT)) break;"
    },
    {
        "line": 189,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR)) break;"
    },
    {
        "line": 196,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR)) break;"
    },
    {
        "line": 202,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR)) break;"
    },
    {
        "line": 209,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR)) break;"
    },
    {
        "line": 215,
        "fullcodeline": "if (! IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR)) break;"
    },
    {
        "line": 220,
        "fullcodeline": "if (! IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR)) break;"
    },
    {
        "line": 228,
        "fullcodeline": "if (PPEEK_IS('{') && IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_X_BRACE_HEX8)) {"
    },
    {
        "line": 263,
        "fullcodeline": "if (IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_U_HEX4)) {"
    },
    {
        "line": 280,
        "fullcodeline": "if (num < 0 || num > ONIG_MAX_BACKREF_NUM) {"
    },
    {
        "line": 284,
        "fullcodeline": "if (IS_SYNTAX_OP(syn, ONIG_SYN_OP_DECIMAL_BACKREF) &&"
    },
    {
        "line": 302,
        "fullcodeline": "if (c == '8' || c == '9') {"
    },
    {
        "line": 311,
        "fullcodeline": "if (IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_OCTAL3)) {"
    },
    {
        "line": 424,
        "fullcodeline": "if (IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE)) {"
    },
    {
        "line": 431,
        "fullcodeline": "if (!PEND && PPEEK_IS('{') &&"
    },
    {
        "line": 454,
        "fullcodeline": "num = fetch_escaped_value(&p, end, env, &c2);"
    },
    {
        "line": 496,
        "fullcodeline": "tok->type = TK_ANYCHAR;"
    },
    {
        "line": 504,
        "fullcodeline": "tok->type = TK_OP_REPEAT;"
    },
    {
        "line": 505,
        "fullcodeline": "tok->u.repeat.lower = 0;"
    },
    {
        "line": 506,
        "fullcodeline": "tok->u.repeat.upper = REPEAT_INFINITE;"
    },
    {
        "line": 515,
        "fullcodeline": "tok->type = TK_OP_REPEAT;"
    },
    {
        "line": 516,
        "fullcodeline": "tok->u.repeat.lower = 1;"
    },
    {
        "line": 517,
        "fullcodeline": "tok->u.repeat.upper = REPEAT_INFINITE;"
    },
    {
        "line": 526,
        "fullcodeline": "tok->type = TK_OP_REPEAT;"
    },
    {
        "line": 527,
        "fullcodeline": "tok->u.repeat.lower = 0;"
    },
    {
        "line": 528,
        "fullcodeline": "tok->u.repeat.upper = 1;"
    },
    {
        "line": 534,
        "fullcodeline": "r = fetch_range_quantifier(&p, end, tok, env);"
    },
    {
        "line": 548,
        "fullcodeline": "tok->type = TK_ALT;"
    },
    {
        "line": 573,
        "fullcodeline": "tok->type = TK_SUBEXP_OPEN;"
    },
    {
        "line": 578,
        "fullcodeline": "tok->type = TK_SUBEXP_CLOSE;"
    },
    {
        "line": 583,
        "fullcodeline": "tok->type = TK_ANCHOR;"
    },
    {
        "line": 584,
        "fullcodeline": "tok->u.subtype = (IS_SINGLELINE(env->option)"
    },
    {
        "line": 590,
        "fullcodeline": "tok->type = TK_ANCHOR;"
    },
    {
        "line": 591,
        "fullcodeline": "tok->u.subtype = (IS_SINGLELINE(env->option)"
    },
    {
        "line": 597,
        "fullcodeline": "tok->type = TK_CC_OPEN;"
    },
    {
        "line": 54,
        "fullcodeline": "IS_SYNTAX_OP(syn, ONIG_SYN_OP_QMARK_NON_GREEDY)) {"
    },
    {
        "line": 55,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 56,
        "fullcodeline": "tok->u.repeat.greedy     = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "tok->u.repeat.possessive = 0;"
    },
    {
        "line": 230,
        "fullcodeline": "num = scan_unsigned_hexadecimal_number(&p, end, 8, enc);"
    },
    {
        "line": 264,
        "fullcodeline": "num = scan_unsigned_hexadecimal_number(&p, end, 4, enc);"
    },
    {
        "line": 269,
        "fullcodeline": "tok->type   = TK_CODE_POINT;"
    },
    {
        "line": 270,
        "fullcodeline": "tok->base   = 16;"
    },
    {
        "line": 271,
        "fullcodeline": "tok->u.code = (OnigCodePoint )num;"
    },
    {
        "line": 285,
        "fullcodeline": "(num <= env->num_mem || num <= 9)) { /* This spec. from GNU regex */"
    },
    {
        "line": 291,
        "fullcodeline": "tok->type = TK_BACKREF;"
    },
    {
        "line": 292,
        "fullcodeline": "tok->u.backref.num     = 1;"
    },
    {
        "line": 293,
        "fullcodeline": "tok->u.backref.ref1    = num;"
    },
    {
        "line": 294,
        "fullcodeline": "tok->u.backref.by_name = 0;"
    },
    {
        "line": 304,
        "fullcodeline": "p = prev; PINC;"
    },
    {
        "line": 312,
        "fullcodeline": "prev = p;"
    },
    {
        "line": 313,
        "fullcodeline": "num = scan_unsigned_octal_number(&p, end, (c == '0' ? 2:3), enc);"
    },
    {
        "line": 318,
        "fullcodeline": "tok->type = TK_RAW_BYTE;"
    },
    {
        "line": 319,
        "fullcodeline": "tok->base = 8;"
    },
    {
        "line": 320,
        "fullcodeline": "tok->u.c  = num;"
    },
    {
        "line": 425,
        "fullcodeline": "tok->type = TK_QUOTE_OPEN;"
    },
    {
        "line": 432,
        "fullcodeline": "IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY)) {"
    },
    {
        "line": 434,
        "fullcodeline": "tok->type = TK_CHAR_PROPERTY;"
    },
    {
        "line": 435,
        "fullcodeline": "tok->u.prop.not = (c == 'P' ? 1 : 0);"
    },
    {
        "line": 455,
        "fullcodeline": "if (num < 0) return num;"
    },
    {
        "line": 457,
        "fullcodeline": "if (tok->u.c != c2) {"
    },
    {
        "line": 492,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_DOT_ANYCHAR)) break;"
    },
    {
        "line": 500,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ASTERISK_ZERO_INF)) break;"
    },
    {
        "line": 511,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_PLUS_ONE_INF)) break;"
    },
    {
        "line": 522,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_QMARK_ZERO_ONE)) break;"
    },
    {
        "line": 533,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_BRACE_INTERVAL)) break;"
    },
    {
        "line": 535,
        "fullcodeline": "if (r < 0) return r;  /* error */"
    },
    {
        "line": 536,
        "fullcodeline": "if (r == 0) goto greedy_check;"
    },
    {
        "line": 547,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_VBAR_ALT)) break;"
    },
    {
        "line": 552,
        "fullcodeline": "if (!PEND && PPEEK_IS('?') &&"
    },
    {
        "line": 572,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_LPAREN_SUBEXP)) break;"
    },
    {
        "line": 577,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_LPAREN_SUBEXP)) break;"
    },
    {
        "line": 582,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_LINE_ANCHOR)) break;"
    },
    {
        "line": 589,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_LINE_ANCHOR)) break;"
    },
    {
        "line": 596,
        "fullcodeline": "if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_BRACKET_CC)) break;"
    },
    {
        "line": 601,
        "fullcodeline": "if (*src > env->pattern)   /* /].../ is allowed. */"
    },
    {
        "line": 606,
        "fullcodeline": "if (IS_EXTEND(env->option)) {"
    },
    {
        "line": 618,
        "fullcodeline": "if (IS_EXTEND(env->option))"
    },
    {
        "line": 231,
        "fullcodeline": "if (num < 0) return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE;"
    },
    {
        "line": 232,
        "fullcodeline": "if (!PEND) {"
    },
    {
        "line": 237,
        "fullcodeline": "if ((p > prev + enclen(enc, prev)) && !PEND && PPEEK_IS('}')) {"
    },
    {
        "line": 265,
        "fullcodeline": "if (num < 0) return ONIGERR_TOO_BIG_NUMBER;"
    },
    {
        "line": 266,
        "fullcodeline": "if (p == prev) {  /* can't read nothing. */"
    },
    {
        "line": 286,
        "fullcodeline": "if (IS_SYNTAX_BV(syn, ONIG_SYN_STRICT_CHECK_BACKREF)) {"
    },
    {
        "line": 314,
        "fullcodeline": "if (num < 0) return ONIGERR_TOO_BIG_NUMBER;"
    },
    {
        "line": 315,
        "fullcodeline": "if (p == prev) {  /* can't read nothing. */"
    },
    {
        "line": 437,
        "fullcodeline": "if (!PEND &&"
    },
    {
        "line": 458,
        "fullcodeline": "tok->type = TK_CODE_POINT;"
    },
    {
        "line": 459,
        "fullcodeline": "tok->u.code = c2;"
    },
    {
        "line": 553,
        "fullcodeline": "IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_QMARK_GROUP_EFFECT)) {"
    },
    {
        "line": 602,
        "fullcodeline": "CLOSE_BRACKET_WITHOUT_ESC_WARN(env, (UChar* )\"]\");"
    },
    {
        "line": 61,
        "fullcodeline": "if (!PEND && PPEEK_IS('+') &&"
    },
    {
        "line": 82,
        "fullcodeline": "else if (r == 2) { /* {n} */"
    },
    {
        "line": 239,
        "fullcodeline": "tok->type   = TK_CODE_POINT;"
    },
    {
        "line": 240,
        "fullcodeline": "tok->u.code = (OnigCodePoint )num;"
    },
    {
        "line": 247,
        "fullcodeline": "else if (IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_X_HEX2)) {"
    },
    {
        "line": 267,
        "fullcodeline": "num = 0; /* but, it's not error */"
    },
    {
        "line": 316,
        "fullcodeline": "num = 0; /* but, it's not error */"
    },
    {
        "line": 322,
        "fullcodeline": "else if (c != '0') {"
    },
    {
        "line": 438,
        "fullcodeline": "IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT)) {"
    },
    {
        "line": 439,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 462,
        "fullcodeline": "p = tok->backp + enclen(enc, tok->backp);"
    },
    {
        "line": 555,
        "fullcodeline": "if (!PEND && PPEEK_IS('#')) {"
    },
    {
        "line": 607,
        "fullcodeline": "while (!PEND) {"
    },
    {
        "line": 62,
        "fullcodeline": "((IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT) &&"
    },
    {
        "line": 66,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 67,
        "fullcodeline": "tok->u.repeat.greedy     = 1;"
    },
    {
        "line": 68,
        "fullcodeline": "tok->u.repeat.possessive = 1;"
    },
    {
        "line": 233,
        "fullcodeline": "if (ONIGENC_IS_CODE_XDIGIT(enc, PPEEK))"
    },
    {
        "line": 244,
        "fullcodeline": "p = prev;"
    },
    {
        "line": 248,
        "fullcodeline": "num = scan_unsigned_hexadecimal_number(&p, end, 2, enc);"
    },
    {
        "line": 253,
        "fullcodeline": "tok->type = TK_RAW_BYTE;"
    },
    {
        "line": 254,
        "fullcodeline": "tok->base = 16;"
    },
    {
        "line": 255,
        "fullcodeline": "tok->u.c  = num;"
    },
    {
        "line": 287,
        "fullcodeline": "if (num > env->num_mem || IS_NULL(SCANENV_MEM_NODES(env)[num]))"
    },
    {
        "line": 440,
        "fullcodeline": "if (c == '^') {"
    },
    {
        "line": 537,
        "fullcodeline": "else if (r == 2) { /* {n} */"
    },
    {
        "line": 556,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 608,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 64,
        "fullcodeline": "(IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL) &&"
    },
    {
        "line": 71,
        "fullcodeline": "tok->u.repeat.greedy     = 1;"
    },
    {
        "line": 72,
        "fullcodeline": "tok->u.repeat.possessive = 0;"
    },
    {
        "line": 83,
        "fullcodeline": "if (IS_SYNTAX_BV(syn, ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY))"
    },
    {
        "line": 249,
        "fullcodeline": "if (num < 0) return ONIGERR_TOO_BIG_NUMBER;"
    },
    {
        "line": 250,
        "fullcodeline": "if (p == prev) {  /* can't read nothing. */"
    },
    {
        "line": 441,
        "fullcodeline": "tok->u.prop.not = (tok->u.prop.not == 0 ? 1 : 0);"
    },
    {
        "line": 609,
        "fullcodeline": "if (ONIGENC_IS_CODE_NEWLINE(enc, c))"
    },
    {
        "line": 63,
        "fullcodeline": "tok->type != TK_INTERVAL)  ||"
    },
    {
        "line": 65,
        "fullcodeline": "tok->type == TK_INTERVAL))) {"
    },
    {
        "line": 251,
        "fullcodeline": "num = 0; /* but, it's not error */"
    },
    {
        "line": 538,
        "fullcodeline": "if (IS_SYNTAX_BV(syn, ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY))"
    },
    {
        "line": 559,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 560,
        "fullcodeline": "if (c == MC_ESC(syn)) {"
    },
    {
        "line": 561,
        "fullcodeline": "if (!PEND) PFETCH(c);"
    },
    {
        "line": 564,
        "fullcodeline": "if (c == ')') break;"
    }
]