[
    {
        "line": 5,
        "fullcodeline": "OnigSyntaxType* syn = env->syntax;"
    },
    {
        "line": 6,
        "fullcodeline": "OnigEncoding enc = env->enc;"
    },
    {
        "line": 16,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 17,
        "fullcodeline": "tok->type = TK_CHAR;"
    },
    {
        "line": 18,
        "fullcodeline": "tok->base = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "tok->u.c  = c;"
    },
    {
        "line": 20,
        "fullcodeline": "tok->escaped = 0;"
    },
    {
        "line": 216,
        "fullcodeline": "*src = p;"
    },
    {
        "line": 22,
        "fullcodeline": "if (c == ']') {"
    },
    {
        "line": 12,
        "fullcodeline": "tok->type = TK_EOT;"
    },
    {
        "line": 23,
        "fullcodeline": "tok->type = TK_CC_CLOSE;"
    },
    {
        "line": 25,
        "fullcodeline": "else if (c == '-') {"
    },
    {
        "line": 26,
        "fullcodeline": "tok->type = TK_CC_RANGE;"
    },
    {
        "line": 28,
        "fullcodeline": "else if (c == MC_ESC(syn)) {"
    },
    {
        "line": 34,
        "fullcodeline": "PFETCH(c);"
    },
    {
        "line": 35,
        "fullcodeline": "tok->escaped = 1;"
    },
    {
        "line": 36,
        "fullcodeline": "tok->u.c = c;"
    },
    {
        "line": 29,
        "fullcodeline": "if (! IS_SYNTAX_BV(syn, ONIG_SYN_BACKSLASH_ESCAPE_IN_CC))"
    },
    {
        "line": 39,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 40,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_WORD;"
    },
    {
        "line": 41,
        "fullcodeline": "tok->u.prop.not   = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 45,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_WORD;"
    },
    {
        "line": 46,
        "fullcodeline": "tok->u.prop.not   = 1;"
    },
    {
        "line": 49,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 50,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_DIGIT;"
    },
    {
        "line": 51,
        "fullcodeline": "tok->u.prop.not   = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 55,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_DIGIT;"
    },
    {
        "line": 56,
        "fullcodeline": "tok->u.prop.not   = 1;"
    },
    {
        "line": 59,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 60,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_SPACE;"
    },
    {
        "line": 61,
        "fullcodeline": "tok->u.prop.not   = 0;"
    },
    {
        "line": 64,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 65,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_SPACE;"
    },
    {
        "line": 66,
        "fullcodeline": "tok->u.prop.not   = 1;"
    },
    {
        "line": 70,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 71,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_XDIGIT;"
    },
    {
        "line": 72,
        "fullcodeline": "tok->u.prop.not   = 0;"
    },
    {
        "line": 76,
        "fullcodeline": "tok->type = TK_CHAR_TYPE;"
    },
    {
        "line": 77,
        "fullcodeline": "tok->u.prop.ctype = ONIGENC_CTYPE_XDIGIT;"
    },
    {
        "line": 78,
        "fullcodeline": "tok->u.prop.not   = 1;"
    },
    {
        "line": 85,
        "fullcodeline": "c2 = PPEEK;"
    },
    {
        "line": 106,
        "fullcodeline": "prev = p;"
    },
    {
        "line": 143,
        "fullcodeline": "prev = p;"
    },
    {
        "line": 174,
        "fullcodeline": "num = fetch_escaped_value(&p, end, env, &c2);"
    },
    {
        "line": 183,
        "fullcodeline": "else if (c == '[') {"
    },
    {
        "line": 69,
        "fullcodeline": "if (! IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_H_XDIGIT)) break;"
    },
    {
        "line": 75,
        "fullcodeline": "if (! IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_H_XDIGIT)) break;"
    },
    {
        "line": 86,
        "fullcodeline": "if (c2 == '{' &&"
    },
    {
        "line": 107,
        "fullcodeline": "if (PPEEK_IS('{') && IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_X_BRACE_HEX8)) {"
    },
    {
        "line": 144,
        "fullcodeline": "if (IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_U_HEX4)) {"
    },
    {
        "line": 158,
        "fullcodeline": "if (IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_OCTAL3)) {"
    },
    {
        "line": 175,
        "fullcodeline": "if (num < 0) return num;"
    },
    {
        "line": 176,
        "fullcodeline": "if (tok->u.c != c2) {"
    },
    {
        "line": 87,
        "fullcodeline": "IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY)) {"
    },
    {
        "line": 89,
        "fullcodeline": "tok->type = TK_CHAR_PROPERTY;"
    },
    {
        "line": 90,
        "fullcodeline": "tok->u.prop.not = (c == 'P' ? 1 : 0);"
    },
    {
        "line": 109,
        "fullcodeline": "num = scan_unsigned_hexadecimal_number(&p, end, 8, enc);"
    },
    {
        "line": 145,
        "fullcodeline": "num = scan_unsigned_hexadecimal_number(&p, end, 4, enc);"
    },
    {
        "line": 150,
        "fullcodeline": "tok->type   = TK_CODE_POINT;"
    },
    {
        "line": 151,
        "fullcodeline": "tok->base   = 16;"
    },
    {
        "line": 152,
        "fullcodeline": "tok->u.code = (OnigCodePoint )num;"
    },
    {
        "line": 160,
        "fullcodeline": "prev = p;"
    },
    {
        "line": 161,
        "fullcodeline": "num = scan_unsigned_octal_number(&p, end, 3, enc);"
    },
    {
        "line": 166,
        "fullcodeline": "tok->type = TK_RAW_BYTE;"
    },
    {
        "line": 167,
        "fullcodeline": "tok->base = 8;"
    },
    {
        "line": 168,
        "fullcodeline": "tok->u.c  = num;"
    },
    {
        "line": 177,
        "fullcodeline": "tok->u.code = c2;"
    },
    {
        "line": 178,
        "fullcodeline": "tok->type   = TK_CODE_POINT;"
    },
    {
        "line": 184,
        "fullcodeline": "if (IS_SYNTAX_OP(syn, ONIG_SYN_OP_POSIX_BRACKET) && (PPEEK_IS(':'))) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (!PEND && IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT)) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (num < 0) return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE;"
    },
    {
        "line": 111,
        "fullcodeline": "if (!PEND) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (p > prev + enclen(enc, prev) && !PEND && (PPEEK_IS('}'))) {"
    },
    {
        "line": 146,
        "fullcodeline": "if (num < 0) return ONIGERR_TOO_BIG_NUMBER;"
    },
    {
        "line": 147,
        "fullcodeline": "if (p == prev) {  /* can't read nothing. */"
    },
    {
        "line": 162,
        "fullcodeline": "if (num < 0) return ONIGERR_TOO_BIG_NUMBER;"
    },
    {
        "line": 163,
        "fullcodeline": "if (p == prev) {  /* can't read nothing. */"
    },
    {
        "line": 185,
        "fullcodeline": "OnigCodePoint send[] = { (OnigCodePoint )':', (OnigCodePoint )']' };"
    },
    {
        "line": 186,
        "fullcodeline": "tok->backp = p; /* point at '[' is read */"
    },
    {
        "line": 207,
        "fullcodeline": "else if (c == '&') {"
    },
    {
        "line": 93,
        "fullcodeline": "PFETCH(c2);"
    },
    {
        "line": 112,
        "fullcodeline": "c2 = PPEEK;"
    },
    {
        "line": 119,
        "fullcodeline": "tok->type   = TK_CODE_POINT;"
    },
    {
        "line": 120,
        "fullcodeline": "tok->base   = 16;"
    },
    {
        "line": 121,
        "fullcodeline": "tok->u.code = (OnigCodePoint )num;"
    },
    {
        "line": 128,
        "fullcodeline": "else if (IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_X_HEX2)) {"
    },
    {
        "line": 148,
        "fullcodeline": "num = 0; /* but, it's not error */"
    },
    {
        "line": 164,
        "fullcodeline": "num = 0; /* but, it's not error */"
    },
    {
        "line": 188,
        "fullcodeline": "if (str_exist_check_with_esc(send, 2, p, end,"
    },
    {
        "line": 94,
        "fullcodeline": "if (c2 == '^') {"
    },
    {
        "line": 113,
        "fullcodeline": "if (ONIGENC_IS_CODE_XDIGIT(enc, c2))"
    },
    {
        "line": 125,
        "fullcodeline": "p = prev;"
    },
    {
        "line": 129,
        "fullcodeline": "num = scan_unsigned_hexadecimal_number(&p, end, 2, enc);"
    },
    {
        "line": 134,
        "fullcodeline": "tok->type = TK_RAW_BYTE;"
    },
    {
        "line": 135,
        "fullcodeline": "tok->base = 16;"
    },
    {
        "line": 136,
        "fullcodeline": "tok->u.c  = num;"
    },
    {
        "line": 189,
        "fullcodeline": "(OnigCodePoint )']', enc, syn)) {"
    },
    {
        "line": 190,
        "fullcodeline": "tok->type = TK_POSIX_BRACKET_OPEN;"
    },
    {
        "line": 199,
        "fullcodeline": "if (IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_CCLASS_SET_OP)) {"
    },
    {
        "line": 208,
        "fullcodeline": "if (IS_SYNTAX_OP2(syn, ONIG_SYN_OP2_CCLASS_SET_OP) &&"
    },
    {
        "line": 95,
        "fullcodeline": "tok->u.prop.not = (tok->u.prop.not == 0 ? 1 : 0);"
    },
    {
        "line": 130,
        "fullcodeline": "if (num < 0) return ONIGERR_TOO_BIG_NUMBER;"
    },
    {
        "line": 131,
        "fullcodeline": "if (p == prev) {  /* can't read nothing. */"
    },
    {
        "line": 200,
        "fullcodeline": "tok->type = TK_CC_CC_OPEN;"
    },
    {
        "line": 209,
        "fullcodeline": "!PEND && (PPEEK_IS('&'))) {"
    },
    {
        "line": 211,
        "fullcodeline": "tok->type = TK_CC_AND;"
    },
    {
        "line": 132,
        "fullcodeline": "num = 0; /* but, it's not error */"
    },
    {
        "line": 203,
        "fullcodeline": "CC_ESC_WARN(env, (UChar* )\"[\");"
    }
]