[
    {
        "line": 12,
        "fullcodeline": "vb=vbody; /* keep orignal vbody value, needed to set the error member"
    },
    {
        "line": 15,
        "fullcodeline": "vb->error=PARSE_ERROR;"
    },
    {
        "line": 17,
        "fullcodeline": "state=F_SIP;"
    },
    {
        "line": 18,
        "fullcodeline": "saved_state=0; /*it should generate error if it's used without set*/"
    },
    {
        "line": 19,
        "fullcodeline": "param_start=0;"
    },
    {
        "line": 685,
        "fullcodeline": "tmp++;"
    },
    {
        "line": 686,
        "fullcodeline": "c_nest=0;"
    },
    {
        "line": 1237,
        "fullcodeline": "LM_DBG(\"end of packet reached, state=%d\\n\", state);"
    },
    {
        "line": 1241,
        "fullcodeline": "state=saved_state;"
    },
    {
        "line": 1242,
        "fullcodeline": "LM_DBG(\"end of header reached, state=%d\\n\", state);"
    },
    {
        "line": 1272,
        "fullcodeline": "vb->error=PARSE_OK;"
    },
    {
        "line": 1273,
        "fullcodeline": "vb->bsize=tmp-buffer;"
    },
    {
        "line": 1284,
        "fullcodeline": "LM_DBG(\"next_via\\n\");"
    },
    {
        "line": 1285,
        "fullcodeline": "vb->error=PARSE_OK;"
    },
    {
        "line": 1286,
        "fullcodeline": "vb->bsize=tmp-buffer;"
    },
    {
        "line": 1295,
        "fullcodeline": "vb->next=pkg_malloc(sizeof(struct via_body));"
    },
    {
        "line": 1300,
        "fullcodeline": "vb=vb->next;"
    },
    {
        "line": 1301,
        "fullcodeline": "memset(vb, 0, sizeof(struct via_body));"
    },
    {
        "line": 1302,
        "fullcodeline": "buffer=tmp;"
    },
    {
        "line": 20,
        "fullcodeline": "for(tmp=buffer;tmp<end;tmp++){"
    },
    {
        "line": 688,
        "fullcodeline": "for(;*tmp;tmp++){"
    },
    {
        "line": 1296,
        "fullcodeline": "if (vb->next==0){"
    },
    {
        "line": 1306,
        "fullcodeline": "if (end>buffer){"
    },
    {
        "line": 1275,
        "fullcodeline": "vb->port=str2s(vb->port_str.s, vb->port_str.len, &err);"
    },
    {
        "line": 1288,
        "fullcodeline": "vb->port=str2s(vb->port_str.s, vb->port_str.len, &err);"
    },
    {
        "line": 1309,
        "fullcodeline": "if ((tmp>buffer)&&(tmp<end)){"
    },
    {
        "line": 1307,
        "fullcodeline": "LM_ERR(\" <%.*s>\\n\", (int)(end-buffer), ZSW(buffer));"
    },
    {
        "line": 1311,
        "fullcodeline": "(int)(tmp-buffer), ZSW(buffer) );"
    },
    {
        "line": 1278,
        "fullcodeline": "vb->port_str.len, ZSW(vb->port_str.s));"
    },
    {
        "line": 1291,
        "fullcodeline": "vb->port_str.len, ZSW(vb->port_str.s));"
    },
    {
        "line": 32,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 33,
        "fullcodeline": "vb->proto=PROTO_UDP;"
    },
    {
        "line": 34,
        "fullcodeline": "state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 38,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 39,
        "fullcodeline": "vb->proto=PROTO_TCP;"
    },
    {
        "line": 40,
        "fullcodeline": "state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 44,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 45,
        "fullcodeline": "vb->proto=PROTO_TLS;"
    },
    {
        "line": 46,
        "fullcodeline": "state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 50,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 51,
        "fullcodeline": "vb->proto=PROTO_SCTP;"
    },
    {
        "line": 52,
        "fullcodeline": "state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 57,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 58,
        "fullcodeline": "vb->proto=PROTO_WS;"
    },
    {
        "line": 59,
        "fullcodeline": "state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 63,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 64,
        "fullcodeline": "vb->proto=PROTO_WSS;"
    },
    {
        "line": 65,
        "fullcodeline": "state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 69,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 70,
        "fullcodeline": "vb->proto=PROTO_OTHER;"
    },
    {
        "line": 71,
        "fullcodeline": "state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 74,
        "fullcodeline": "vb->name.len=tmp-vb->name.s;"
    },
    {
        "line": 75,
        "fullcodeline": "state=L_VER;"
    },
    {
        "line": 78,
        "fullcodeline": "vb->version.len=tmp-vb->version.s;"
    },
    {
        "line": 79,
        "fullcodeline": "state=L_PROTO;"
    },
    {
        "line": 84,
        "fullcodeline": "state=saved_state;"
    },
    {
        "line": 87,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 98,
        "fullcodeline": "saved_state=state;"
    },
    {
        "line": 99,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 102,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 103,
        "fullcodeline": "vb->proto=PROTO_UDP;"
    },
    {
        "line": 104,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 105,
        "fullcodeline": "saved_state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 108,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 109,
        "fullcodeline": "vb->proto=PROTO_TCP;"
    },
    {
        "line": 110,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 111,
        "fullcodeline": "saved_state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 114,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 115,
        "fullcodeline": "vb->proto=PROTO_TLS;"
    },
    {
        "line": 116,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 117,
        "fullcodeline": "saved_state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 121,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 122,
        "fullcodeline": "vb->proto=PROTO_WS;"
    },
    {
        "line": 123,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 124,
        "fullcodeline": "saved_state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 127,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 128,
        "fullcodeline": "vb->proto=PROTO_WS;"
    },
    {
        "line": 129,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 130,
        "fullcodeline": "saved_state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 134,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 135,
        "fullcodeline": "vb->proto=PROTO_OTHER;"
    },
    {
        "line": 136,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 137,
        "fullcodeline": "saved_state=F_HOST; /* start looking for host*/"
    },
    {
        "line": 140,
        "fullcodeline": "vb->name.len=tmp-vb->name.s;"
    },
    {
        "line": 141,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 142,
        "fullcodeline": "saved_state=L_VER;"
    },
    {
        "line": 145,
        "fullcodeline": "vb->version.len=tmp-vb->version.s;"
    },
    {
        "line": 146,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 147,
        "fullcodeline": "saved_state=L_PROTO;"
    },
    {
        "line": 150,
        "fullcodeline": "state=F_CRLF;"
    },
    {
        "line": 157,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 168,
        "fullcodeline": "saved_state=state;"
    },
    {
        "line": 169,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 172,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 173,
        "fullcodeline": "vb->proto=PROTO_UDP;"
    },
    {
        "line": 174,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 175,
        "fullcodeline": "saved_state=F_HOST;"
    },
    {
        "line": 178,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 179,
        "fullcodeline": "vb->proto=PROTO_TCP;"
    },
    {
        "line": 180,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 181,
        "fullcodeline": "saved_state=F_HOST;"
    },
    {
        "line": 184,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 185,
        "fullcodeline": "vb->proto=PROTO_TLS;"
    },
    {
        "line": 186,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 187,
        "fullcodeline": "saved_state=F_HOST;"
    },
    {
        "line": 191,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 192,
        "fullcodeline": "vb->proto=PROTO_WS;"
    },
    {
        "line": 193,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 194,
        "fullcodeline": "saved_state=F_HOST;"
    },
    {
        "line": 197,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 198,
        "fullcodeline": "vb->proto=PROTO_WSS;"
    },
    {
        "line": 199,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 200,
        "fullcodeline": "saved_state=F_HOST;"
    },
    {
        "line": 203,
        "fullcodeline": "vb->transport.len=tmp-vb->transport.s;"
    },
    {
        "line": 204,
        "fullcodeline": "vb->proto=PROTO_OTHER;"
    },
    {
        "line": 205,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 206,
        "fullcodeline": "saved_state=F_HOST;"
    },
    {
        "line": 209,
        "fullcodeline": "vb->name.len=tmp-vb->name.s;"
    },
    {
        "line": 210,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 211,
        "fullcodeline": "saved_state=L_VER;"
    },
    {
        "line": 214,
        "fullcodeline": "vb->version.len=tmp-vb->version.s;"
    },
    {
        "line": 215,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 216,
        "fullcodeline": "saved_state=L_PROTO;"
    },
    {
        "line": 224,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 232,
        "fullcodeline": "vb->name.len=tmp-vb->name.s;"
    },
    {
        "line": 233,
        "fullcodeline": "state=F_VER;"
    },
    {
        "line": 236,
        "fullcodeline": "vb->version.len=tmp-vb->version.s;"
    },
    {
        "line": 237,
        "fullcodeline": "state=F_PROTO;"
    },
    {
        "line": 240,
        "fullcodeline": "state=F_VER;"
    },
    {
        "line": 243,
        "fullcodeline": "state=F_PROTO;"
    },
    {
        "line": 246,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 255,
        "fullcodeline": "state=SIP1;"
    },
    {
        "line": 256,
        "fullcodeline": "vb->name.s=tmp;"
    },
    {
        "line": 259,
        "fullcodeline": "state=FIN_TLS;"
    },
    {
        "line": 262,
        "fullcodeline": "state=SCTP1;"
    },
    {
        "line": 263,
        "fullcodeline": "vb->transport.s=tmp;"
    },
    {
        "line": 266,
        "fullcodeline": "state=WS_WSS;"
    },
    {
        "line": 269,
        "fullcodeline": "state=FIN_WSS;"
    },
    {
        "line": 286,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 289,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 297,
        "fullcodeline": "state=SIP2;"
    },
    {
        "line": 317,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 320,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 328,
        "fullcodeline": "state=FIN_SIP;"
    },
    {
        "line": 332,
        "fullcodeline": "state=FIN_UDP;"
    },
    {
        "line": 335,
        "fullcodeline": "state=FIN_TCP;"
    },
    {
        "line": 338,
        "fullcodeline": "state=FIN_SCTP;"
    },
    {
        "line": 355,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 358,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 366,
        "fullcodeline": "state=UDP1;"
    },
    {
        "line": 367,
        "fullcodeline": "vb->transport.s=tmp;"
    },
    {
        "line": 387,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 390,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 398,
        "fullcodeline": "state=UDP2;"
    },
    {
        "line": 417,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 420,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 428,
        "fullcodeline": "state=TCP_TLS1;"
    },
    {
        "line": 429,
        "fullcodeline": "vb->transport.s=tmp;"
    },
    {
        "line": 432,
        "fullcodeline": "state=SCTP3;"
    },
    {
        "line": 451,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 454,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 462,
        "fullcodeline": "state=TCP2;"
    },
    {
        "line": 465,
        "fullcodeline": "state=SCTP2;"
    },
    {
        "line": 483,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 486,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 494,
        "fullcodeline": "state=TLS2;"
    },
    {
        "line": 513,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 516,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 524,
        "fullcodeline": "state=WS1;"
    },
    {
        "line": 525,
        "fullcodeline": "vb->transport.s=tmp;"
    },
    {
        "line": 545,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 548,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 556,
        "fullcodeline": "state=VER1;"
    },
    {
        "line": 557,
        "fullcodeline": "vb->version.s=tmp;"
    },
    {
        "line": 577,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 580,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 587,
        "fullcodeline": "state=VER2;"
    },
    {
        "line": 607,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 610,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 617,
        "fullcodeline": "state=FIN_VER;"
    },
    {
        "line": 637,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 640,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 648,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 649,
        "fullcodeline": "vb->transport.s=tmp;"
    },
    {
        "line": 669,
        "fullcodeline": "state=OTHER_PROTO;"
    },
    {
        "line": 672,
        "fullcodeline": "LM_ERR(\"bad char <%c> on state %d\\n\", *tmp, state);"
    },
    {
        "line": 697,
        "fullcodeline": "vb->host.len=tmp-vb->host.s;"
    },
    {
        "line": 698,
        "fullcodeline": "state=L_PORT;"
    },
    {
        "line": 705,
        "fullcodeline": "vb->port_str.len=tmp-vb->port_str.s;"
    },
    {
        "line": 706,
        "fullcodeline": "state=L_PARAM;"
    },
    {
        "line": 713,
        "fullcodeline": "state=L_PARAM;"
    },
    {
        "line": 729,
        "fullcodeline": "state=saved_state;"
    },
    {
        "line": 732,
        "fullcodeline": "LM_CRIT(\"on <%c>, state=%d\\n\",*tmp, state);"
    },
    {
        "line": 749,
        "fullcodeline": "saved_state=state;"
    },
    {
        "line": 750,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 754,
        "fullcodeline": "vb->host.len=tmp-vb->host.s;"
    },
    {
        "line": 755,
        "fullcodeline": "saved_state=L_PORT;"
    },
    {
        "line": 756,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 760,
        "fullcodeline": "vb->port_str.len=tmp-vb->port_str.s;"
    },
    {
        "line": 761,
        "fullcodeline": "saved_state=L_PARAM;"
    },
    {
        "line": 762,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 766,
        "fullcodeline": "saved_state=L_PARAM;"
    },
    {
        "line": 767,
        "fullcodeline": "state=F_LF;"
    },
    {
        "line": 770,
        "fullcodeline": "state=F_CRLF;"
    },
    {
        "line": 777,
        "fullcodeline": "LM_CRIT(\"BUG on <%c>\\n\",*tmp);"
    },
    {
        "line": 794,
        "fullcodeline": "saved_state=state;"
    },
    {
        "line": 795,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 799,
        "fullcodeline": "vb->host.len=tmp-vb->host.s;"
    },
    {
        "line": 800,
        "fullcodeline": "saved_state=L_PORT;"
    },
    {
        "line": 801,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 805,
        "fullcodeline": "vb->port_str.len=tmp-vb->port_str.s;"
    },
    {
        "line": 806,
        "fullcodeline": "saved_state=L_PARAM;"
    },
    {
        "line": 807,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 811,
        "fullcodeline": "saved_state=L_PARAM;"
    },
    {
        "line": 812,
        "fullcodeline": "state=F_CR;"
    },
    {
        "line": 820,
        "fullcodeline": "LM_CRIT(\"on <%c>\\n\",*tmp);"
    },
    {
        "line": 828,
        "fullcodeline": "state=P_IP6HOST;"
    },
    {
        "line": 834,
        "fullcodeline": "vb->host.len=tmp-vb->host.s;"
    },
    {
        "line": 835,
        "fullcodeline": "state=F_PORT;"
    },
    {
        "line": 838,
        "fullcodeline": "state=F_PORT;"
    },
    {
        "line": 846,
        "fullcodeline": "LM_ERR(\"bad char <%c> in state %d\\n\","
    },
    {
        "line": 859,
        "fullcodeline": "vb->comment.s=tmp;"
    },
    {
        "line": 860,
        "fullcodeline": "state=P_COMMENT;"
    },
    {
        "line": 865,
        "fullcodeline": "LM_CRIT(\"on <%c> state %d\\n\", *tmp, state);"
    },
    {
        "line": 879,
        "fullcodeline": "vb->host.len=tmp-vb->host.s;"
    },
    {
        "line": 880,
        "fullcodeline": "state=F_PARAM;"
    },
    {
        "line": 881,
        "fullcodeline": "param_start=tmp+1;"
    },
    {
        "line": 885,
        "fullcodeline": "vb->port_str.len=tmp-vb->port_str.s;"
    },
    {
        "line": 889,
        "fullcodeline": "state=F_PARAM;"
    },
    {
        "line": 890,
        "fullcodeline": "param_start=tmp+1;"
    },
    {
        "line": 893,
        "fullcodeline": "LM_ERR(\" bad char <%c> in state %d\\n\","
    },
    {
        "line": 901,
        "fullcodeline": "state=F_PARAM;"
    },
    {
        "line": 902,
        "fullcodeline": "param_start=tmp+1;"
    },
    {
        "line": 906,
        "fullcodeline": "LM_ERR(\"bad char <%c> in next via\\n\", *tmp);"
    },
    {
        "line": 914,
        "fullcodeline": "vb->comment.s=tmp;"
    },
    {
        "line": 915,
        "fullcodeline": "state=P_COMMENT;"
    },
    {
        "line": 921,
        "fullcodeline": "LM_CRIT(\"on <%c> state %d\\n\", *tmp, state);"
    },
    {
        "line": 936,
        "fullcodeline": "vb->host.len=tmp-vb->host.s;"
    },
    {
        "line": 937,
        "fullcodeline": "state=F_VIA;"
    },
    {
        "line": 941,
        "fullcodeline": "vb->port_str.len=tmp-vb->port_str.s;"
    },
    {
        "line": 942,
        "fullcodeline": "state=F_VIA;"
    },
    {
        "line": 948,
        "fullcodeline": "state=F_VIA;"
    },
    {
        "line": 952,
        "fullcodeline": "LM_ERR(\"invalid char <%c> in state %d\\n\", *tmp,state);"
    },
    {
        "line": 963,
        "fullcodeline": "vb->comment.s=tmp;"
    },
    {
        "line": 964,
        "fullcodeline": "state=P_COMMENT;"
    },
    {
        "line": 969,
        "fullcodeline": "LM_CRIT(\"on <%c> state %d\\n\",*tmp, state);"
    },
    {
        "line": 981,
        "fullcodeline": "LM_ERR(\" on <%c> state %d\\n\", *tmp, state);"
    },
    {
        "line": 985,
        "fullcodeline": "vb->host.len=tmp-vb->host.s;"
    },
    {
        "line": 986,
        "fullcodeline": "state=F_COMMENT;"
    },
    {
        "line": 987,
        "fullcodeline": "c_nest++;"
    },
    {
        "line": 991,
        "fullcodeline": "vb->port_str.len=tmp-vb->port_str.s;"
    },
    {
        "line": 992,
        "fullcodeline": "state=F_COMMENT;"
    },
    {
        "line": 993,
        "fullcodeline": "c_nest++;"
    },
    {
        "line": 997,
        "fullcodeline": "vb->params.len=tmp-vb->params.s;"
    },
    {
        "line": 998,
        "fullcodeline": "state=F_COMMENT;"
    },
    {
        "line": 999,
        "fullcodeline": "c_nest++;"
    },
    {
        "line": 1004,
        "fullcodeline": "state=F_COMMENT;"
    },
    {
        "line": 1005,
        "fullcodeline": "vb->params.len=tmp-vb->params.s;"
    },
    {
        "line": 1006,
        "fullcodeline": "c_nest++;"
    },
    {
        "line": 1010,
        "fullcodeline": "c_nest++;"
    },
    {
        "line": 1018,
        "fullcodeline": "LM_CRIT(\"on <%c> state %d\\n\", *tmp, state);"
    },
    {
        "line": 1050,
        "fullcodeline": "LM_ERR(\" on <%c> state %d\\n\",*tmp, state);"
    },
    {
        "line": 1058,
        "fullcodeline": "LM_CRIT(\"on <%c> state %d\\n\", *tmp, state);"
    },
    {
        "line": 1065,
        "fullcodeline": "vb->host.s=tmp; /* mark start here (include [])*/"
    },
    {
        "line": 1066,
        "fullcodeline": "state=F_IP6HOST;"
    },
    {
        "line": 1069,
        "fullcodeline": "vb->comment.s=tmp;"
    },
    {
        "line": 1070,
        "fullcodeline": "state=P_COMMENT;"
    },
    {
        "line": 1080,
        "fullcodeline": "LM_ERR(\"on <%c> state %d\\n\",*tmp, state);"
    },
    {
        "line": 1088,
        "fullcodeline": "vb->host.len=(tmp-vb->host.s)+1; /* include \"]\" */"
    },
    {
        "line": 1089,
        "fullcodeline": "state=L_PORT;"
    },
    {
        "line": 1097,
        "fullcodeline": "vb->comment.s=tmp;"
    },
    {
        "line": 1098,
        "fullcodeline": "state=P_COMMENT;"
    },
    {
        "line": 1103,
        "fullcodeline": "LM_ERR(\"on <%c> state %d\\n\",*tmp, state);"
    },
    {
        "line": 1111,
        "fullcodeline": "state=P_HOST;"
    },
    {
        "line": 1112,
        "fullcodeline": "vb->host.s=tmp;"
    },
    {
        "line": 1121,
        "fullcodeline": "state=P_PORT;"
    },
    {
        "line": 1122,
        "fullcodeline": "vb->port_str.s=tmp;"
    },
    {
        "line": 1132,
        "fullcodeline": "param=pkg_malloc(sizeof(struct via_param));"
    },
    {
        "line": 1137,
        "fullcodeline": "memset(param,0, sizeof(struct via_param));"
    },
    {
        "line": 1138,
        "fullcodeline": "param->start=param_start;"
    },
    {
        "line": 1139,
        "fullcodeline": "tmp=parse_via_param(tmp, end, &state, &saved_state,"
    },
    {
        "line": 1170,
        "fullcodeline": "vb->last_param=param;"
    },
    {
        "line": 1206,
        "fullcodeline": "LM_ERR(\"on <%c> state %d (default)\\n\",*tmp, state);"
    },
    {
        "line": 1209,
        "fullcodeline": "state=P_COMMENT;"
    },
    {
        "line": 1210,
        "fullcodeline": "vb->comment.s=tmp;"
    },
    {
        "line": 1215,
        "fullcodeline": "state=P_IP6HOST;"
    },
    {
        "line": 1229,
        "fullcodeline": "LM_CRIT(\"invalid char <%c> in state %d\\n\",*tmp, state);"
    },
    {
        "line": 1116,
        "fullcodeline": "if ( (*tmp<'a' || *tmp>'z') && (*tmp<'A' || *tmp>'Z')"
    },
    {
        "line": 1126,
        "fullcodeline": "if ( *tmp<'0' || *tmp>'9' )"
    },
    {
        "line": 1131,
        "fullcodeline": "if(vb->params.s==0) vb->params.s=param_start;"
    },
    {
        "line": 1133,
        "fullcodeline": "if (param==0){"
    },
    {
        "line": 1193,
        "fullcodeline": "if (state==END_OF_HEADER){"
    },
    {
        "line": 1219,
        "fullcodeline": "if ( (*tmp<'a' || *tmp>'f') && (*tmp<'A' || *tmp>'F')"
    },
    {
        "line": 1027,
        "fullcodeline": "c_nest--;"
    },
    {
        "line": 1117,
        "fullcodeline": "&& (*tmp<'0' || *tmp>'9') && *tmp!='-' && *tmp!='.')"
    },
    {
        "line": 1144,
        "fullcodeline": "param_start=tmp+1;"
    },
    {
        "line": 1148,
        "fullcodeline": "vb->params.len=tmp - vb->params.s;"
    },
    {
        "line": 1151,
        "fullcodeline": "vb->params.len=param->start+param->size"
    },
    {
        "line": 1155,
        "fullcodeline": "vb->params.len=param->start+param->size"
    },
    {
        "line": 1163,
        "fullcodeline": "LM_ERR(\" after parse_via_param: invalid \""
    },
    {
        "line": 1168,
        "fullcodeline": "if (vb->last_param)\tvb->last_param->next=param;"
    },
    {
        "line": 1174,
        "fullcodeline": "vb->branch=param;"
    },
    {
        "line": 1177,
        "fullcodeline": "vb->received=param;"
    },
    {
        "line": 1180,
        "fullcodeline": "vb->rport=param;"
    },
    {
        "line": 1183,
        "fullcodeline": "vb->i=param;"
    },
    {
        "line": 1186,
        "fullcodeline": "vb->alias=param;"
    },
    {
        "line": 1189,
        "fullcodeline": "vb->maddr=param;"
    },
    {
        "line": 1220,
        "fullcodeline": "&& (*tmp<'0' || *tmp>'9') && *tmp!=':')"
    },
    {
        "line": 1028,
        "fullcodeline": "if(c_nest==0){"
    },
    {
        "line": 1169,
        "fullcodeline": "else\t\t\t\tvb->param_lst=param;"
    },
    {
        "line": 1029,
        "fullcodeline": "state=L_VIA;"
    },
    {
        "line": 1030,
        "fullcodeline": "vb->comment.len=tmp-vb->comment.s;"
    }
]