[
    {
        "line": 10,
        "fullcodeline": "result = calloc(size, sizeof *result);"
    },
    {
        "line": 11,
        "fullcodeline": "LY_CHECK_ERR_RETURN(!result, LOGMEM(mod->ctx), NULL);"
    },
    {
        "line": 6,
        "fullcodeline": "if (!size) {"
    },
    {
        "line": 13,
        "fullcodeline": "for (i = 0; i < size; i++) {"
    },
    {
        "line": 19,
        "fullcodeline": "result[i].expr = lydict_insert(mod->ctx, old[i].expr, 0);"
    },
    {
        "line": 20,
        "fullcodeline": "result[i].dsc = lydict_insert(mod->ctx, old[i].dsc, 0);"
    },
    {
        "line": 21,
        "fullcodeline": "result[i].ref = lydict_insert(mod->ctx, old[i].ref, 0);"
    },
    {
        "line": 22,
        "fullcodeline": "result[i].eapptag = lydict_insert(mod->ctx, old[i].eapptag, 0);"
    },
    {
        "line": 23,
        "fullcodeline": "result[i].emsg = lydict_insert(mod->ctx, old[i].emsg, 0);"
    },
    {
        "line": 15,
        "fullcodeline": "if (unres_schema_find(unres, -1, (void *)&old[i].ext, UNRES_EXT) == -1) {"
    },
    {
        "line": 17,
        "fullcodeline": "lys_ext_dup(mod->ctx, mod, old[i].ext, old[i].ext_size, &result[i], LYEXT_PAR_RESTR, &result[i].ext, shallow, unres);"
    }
]