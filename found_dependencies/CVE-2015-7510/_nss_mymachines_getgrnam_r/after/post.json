[
    {
        "line": 7,
        "fullcodeline": "_cleanup_bus_error_free_ sd_bus_error error = SD_BUS_ERROR_NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "_cleanup_bus_message_unref_ sd_bus_message* reply = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "_cleanup_bus_flush_close_unref_ sd_bus *bus = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "assert(name);"
    },
    {
        "line": 17,
        "fullcodeline": "assert(gr);"
    },
    {
        "line": 19,
        "fullcodeline": "p = startswith(name, \"vg-\");"
    },
    {
        "line": 23,
        "fullcodeline": "e = strrchr(p, '-');"
    },
    {
        "line": 30,
        "fullcodeline": "r = parse_gid(e + 1, &gid);"
    },
    {
        "line": 34,
        "fullcodeline": "machine = strndupa(p, e - p);"
    },
    {
        "line": 38,
        "fullcodeline": "r = sd_bus_open_system(&bus);"
    },
    {
        "line": 42,
        "fullcodeline": "r = sd_bus_call_method(bus,"
    },
    {
        "line": 58,
        "fullcodeline": "r = sd_bus_message_read(reply, \"u\", &mapped);"
    },
    {
        "line": 62,
        "fullcodeline": "l = sizeof(char*) + strlen(name) + 1;"
    },
    {
        "line": 68,
        "fullcodeline": "memzero(buffer, sizeof(char*));"
    },
    {
        "line": 69,
        "fullcodeline": "strcpy(buffer + sizeof(char*), name);"
    },
    {
        "line": 71,
        "fullcodeline": "gr->gr_name = buffer + sizeof(char*);"
    },
    {
        "line": 72,
        "fullcodeline": "gr->gr_gid = gid;"
    },
    {
        "line": 73,
        "fullcodeline": "gr->gr_passwd = (char*) \"*\"; /* locked */"
    },
    {
        "line": 74,
        "fullcodeline": "gr->gr_mem = (char**) buffer;"
    },
    {
        "line": 76,
        "fullcodeline": "*errnop = 0;"
    },
    {
        "line": 80,
        "fullcodeline": "*errnop = 0;"
    },
    {
        "line": 84,
        "fullcodeline": "*errnop = -r;"
    },
    {
        "line": 20,
        "fullcodeline": "if (!p)"
    },
    {
        "line": 24,
        "fullcodeline": "if (!e || e == p)"
    },
    {
        "line": 27,
        "fullcodeline": "if (e - p > HOST_NAME_MAX - 1)  /* -1 for the last dash */"
    },
    {
        "line": 31,
        "fullcodeline": "if (r < 0)"
    },
    {
        "line": 35,
        "fullcodeline": "if (!machine_name_is_valid(machine))"
    },
    {
        "line": 39,
        "fullcodeline": "if (r < 0)"
    },
    {
        "line": 51,
        "fullcodeline": "if (r < 0) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (r < 0)"
    },
    {
        "line": 63,
        "fullcodeline": "if (buflen < l) {"
    },
    {
        "line": 50,
        "fullcodeline": "machine, (uint32_t) gid);"
    },
    {
        "line": 64,
        "fullcodeline": "*errnop = ENOMEM;"
    },
    {
        "line": 52,
        "fullcodeline": "if (sd_bus_error_has_name(&error, BUS_ERROR_NO_SUCH_GROUP_MAPPING))"
    }
]