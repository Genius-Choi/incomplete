[
    {
        "line": 3,
        "fullcodeline": "struct mp_log *log = d->log;"
    },
    {
        "line": 4,
        "fullcodeline": "int error_count = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int count = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "mf_t *mf = talloc_zero(talloc_ctx, mf_t);"
    },
    {
        "line": 8,
        "fullcodeline": "mf->log = log;"
    },
    {
        "line": 66,
        "fullcodeline": "char *fname = talloc_size(mf, strlen(filename) + 32);"
    },
    {
        "line": 93,
        "fullcodeline": "mp_info(log, \"search expr: %s\\n\", filename);"
    },
    {
        "line": 105,
        "fullcodeline": "mp_info(log, \"number of files: %d\\n\", mf->nr_of_files);"
    },
    {
        "line": 10,
        "fullcodeline": "if (filename[0] == '@') {"
    },
    {
        "line": 45,
        "fullcodeline": "if (strchr(filename, ',')) {"
    },
    {
        "line": 95,
        "fullcodeline": "while (error_count < 5) {"
    },
    {
        "line": 11,
        "fullcodeline": "struct stream *s = stream_create(filename + 1,"
    },
    {
        "line": 42,
        "fullcodeline": "mp_info(log, \"%s is not indirect filelist\\n\", filename + 1);"
    },
    {
        "line": 46,
        "fullcodeline": "mp_info(log, \"filelist: %s\\n\", filename);"
    },
    {
        "line": 47,
        "fullcodeline": "bstr bfilename = bstr0(filename);"
    },
    {
        "line": 61,
        "fullcodeline": "mp_info(log, \"number of files: %d\\n\", mf->nr_of_files);"
    },
    {
        "line": 96,
        "fullcodeline": "sprintf(fname, filename, count++);"
    },
    {
        "line": 97,
        "fullcodeline": "if (!mp_path_exists(fname)) {"
    },
    {
        "line": 12,
        "fullcodeline": "d->stream_origin | STREAM_READ, d->cancel, d->global);"
    },
    {
        "line": 37,
        "fullcodeline": "free_stream(s);"
    },
    {
        "line": 39,
        "fullcodeline": "mp_info(log, \"number of files: %d\\n\", mf->nr_of_files);"
    },
    {
        "line": 51,
        "fullcodeline": "bstr_split_tok(bfilename, \",\", &bfname, &bfilename);"
    },
    {
        "line": 52,
        "fullcodeline": "char *fname2 = bstrdup0(mf, bfname);"
    },
    {
        "line": 59,
        "fullcodeline": "talloc_free(fname2);"
    },
    {
        "line": 98,
        "fullcodeline": "error_count++;"
    },
    {
        "line": 99,
        "fullcodeline": "mp_verbose(log, \"file not found: '%s'\\n\", fname);"
    },
    {
        "line": 54,
        "fullcodeline": "if (!mp_path_exists(fname2))"
    },
    {
        "line": 101,
        "fullcodeline": "mf_add(mf, fname);"
    },
    {
        "line": 15,
        "fullcodeline": "char buf[512];"
    },
    {
        "line": 16,
        "fullcodeline": "int len = stream_read_peek(s, buf, sizeof(buf));"
    },
    {
        "line": 19,
        "fullcodeline": "bstr data = (bstr){buf, len};"
    },
    {
        "line": 20,
        "fullcodeline": "int pos = bstrchr(data, '\\n');"
    },
    {
        "line": 21,
        "fullcodeline": "data = bstr_splice(data, 0, pos < 0 ? data.len : pos + 1);"
    },
    {
        "line": 22,
        "fullcodeline": "bstr fname = bstr_strip(data);"
    },
    {
        "line": 35,
        "fullcodeline": "stream_seek_skip(s, stream_tell(s) + data.len);"
    },
    {
        "line": 55,
        "fullcodeline": "mp_verbose(log, \"file not found: '%s'\\n\", fname2);"
    },
    {
        "line": 17,
        "fullcodeline": "if (!len)"
    },
    {
        "line": 57,
        "fullcodeline": "mf_add(mf, fname2);"
    },
    {
        "line": 28,
        "fullcodeline": "char *entry = bstrto0(mf, fname);"
    },
    {
        "line": 24,
        "fullcodeline": "if (bstrchr(fname, '\\0') >= 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (!mp_path_exists(entry)) {"
    },
    {
        "line": 25,
        "fullcodeline": "mp_err(log, \"invalid filename\\n\");"
    },
    {
        "line": 30,
        "fullcodeline": "mp_verbose(log, \"file not found: '%s'\\n\", entry);"
    },
    {
        "line": 32,
        "fullcodeline": "MP_TARRAY_APPEND(mf, mf->names, mf->nr_of_files, entry);"
    }
]