[
    {
        "line": 3,
        "fullcodeline": "struct sctp_transport *transport = (struct sctp_transport *) data;"
    },
    {
        "line": 4,
        "fullcodeline": "struct sctp_association *asoc = transport->asoc;"
    },
    {
        "line": 5,
        "fullcodeline": "struct sock *sk = asoc->base.sk;"
    },
    {
        "line": 6,
        "fullcodeline": "struct net *net = sock_net(sk);"
    },
    {
        "line": 8,
        "fullcodeline": "bh_lock_sock(sk);"
    },
    {
        "line": 25,
        "fullcodeline": "sctp_do_sm(net, SCTP_EVENT_T_OTHER,"
    },
    {
        "line": 30,
        "fullcodeline": "bh_unlock_sock(sk);"
    },
    {
        "line": 31,
        "fullcodeline": "sctp_association_put(asoc);"
    },
    {
        "line": 9,
        "fullcodeline": "if (sock_owned_by_user(sk)) {"
    },
    {
        "line": 26,
        "fullcodeline": "SCTP_ST_OTHER(SCTP_EVENT_ICMP_PROTO_UNREACH),"
    },
    {
        "line": 10,
        "fullcodeline": "pr_debug(\"%s: sock is busy\\n\", __func__);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!mod_timer(&transport->proto_unreach_timer,"
    },
    {
        "line": 15,
        "fullcodeline": "sctp_association_hold(asoc);"
    },
    {
        "line": 14,
        "fullcodeline": "jiffies + (HZ/20)))"
    }
]