[
    {
        "line": 20,
        "fullcodeline": "length=GetStringInfoLength(bim_profile);"
    },
    {
        "line": 23,
        "fullcodeline": "datum=GetStringInfoDatum(bim_profile);"
    },
    {
        "line": 21,
        "fullcodeline": "if (length < 16)"
    },
    {
        "line": 24,
        "fullcodeline": "for (p=datum; (p >= datum) && (p < (datum+length-16)); )"
    },
    {
        "line": 29,
        "fullcodeline": "q=(unsigned char *) p;"
    },
    {
        "line": 32,
        "fullcodeline": "p=PushLongPixel(MSBEndian,p,&long_sans);"
    },
    {
        "line": 33,
        "fullcodeline": "p=PushShortPixel(MSBEndian,p,&id);"
    },
    {
        "line": 34,
        "fullcodeline": "p=PushShortPixel(MSBEndian,p,&short_sans);"
    },
    {
        "line": 35,
        "fullcodeline": "p=PushLongPixel(MSBEndian,p,&count);"
    },
    {
        "line": 46,
        "fullcodeline": "p+=count;"
    },
    {
        "line": 30,
        "fullcodeline": "if (LocaleNCompare((const char *) p,\"8BIM\",4) != 0)"
    },
    {
        "line": 36,
        "fullcodeline": "if (id == 0x0000040f)"
    },
    {
        "line": 47,
        "fullcodeline": "if ((count & 0x01) != 0)"
    },
    {
        "line": 48,
        "fullcodeline": "p++;"
    },
    {
        "line": 38,
        "fullcodeline": "if ((q+PSDQuantum(count)+12) < (datum+length-16))"
    },
    {
        "line": 40,
        "fullcodeline": "(void) CopyMagickMemory(q,q+PSDQuantum(count)+12,length-"
    },
    {
        "line": 42,
        "fullcodeline": "SetStringInfoLength(bim_profile,length-(PSDQuantum(count)+12));"
    },
    {
        "line": 41,
        "fullcodeline": "(PSDQuantum(count)+12)-(q-datum));"
    }
]