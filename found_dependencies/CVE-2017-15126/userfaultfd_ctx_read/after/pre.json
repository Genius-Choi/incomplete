[
    {
        "line": 5,
        "fullcodeline": "DECLARE_WAITQUEUE(wait, current);"
    },
    {
        "line": 14,
        "fullcodeline": "LIST_HEAD(fork_event);"
    },
    {
        "line": 15,
        "fullcodeline": "struct userfaultfd_ctx *fork_nctx = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "spin_lock(&ctx->fd_wqh.lock);"
    },
    {
        "line": 19,
        "fullcodeline": "__add_wait_queue(&ctx->fd_wqh, &wait);"
    },
    {
        "line": 108,
        "fullcodeline": "__remove_wait_queue(&ctx->fd_wqh, &wait);"
    },
    {
        "line": 109,
        "fullcodeline": "__set_current_state(TASK_RUNNING);"
    },
    {
        "line": 110,
        "fullcodeline": "spin_unlock(&ctx->fd_wqh.lock);"
    },
    {
        "line": 112,
        "fullcodeline": "if (!ret && msg->event == UFFD_EVENT_FORK) {"
    },
    {
        "line": 21,
        "fullcodeline": "set_current_state(TASK_INTERRUPTIBLE);"
    },
    {
        "line": 22,
        "fullcodeline": "spin_lock(&ctx->fault_pending_wqh.lock);"
    },
    {
        "line": 23,
        "fullcodeline": "uwq = find_userfault(ctx);"
    },
    {
        "line": 66,
        "fullcodeline": "spin_unlock(&ctx->fault_pending_wqh.lock);"
    },
    {
        "line": 68,
        "fullcodeline": "spin_lock(&ctx->event_wqh.lock);"
    },
    {
        "line": 69,
        "fullcodeline": "uwq = find_userfault_evt(ctx);"
    },
    {
        "line": 94,
        "fullcodeline": "spin_unlock(&ctx->event_wqh.lock);"
    },
    {
        "line": 104,
        "fullcodeline": "spin_unlock(&ctx->fd_wqh.lock);"
    },
    {
        "line": 105,
        "fullcodeline": "schedule();"
    },
    {
        "line": 106,
        "fullcodeline": "spin_lock(&ctx->fd_wqh.lock);"
    },
    {
        "line": 113,
        "fullcodeline": "ret = resolve_userfault_fork(ctx, fork_nctx, msg);"
    },
    {
        "line": 114,
        "fullcodeline": "spin_lock(&ctx->event_wqh.lock);"
    },
    {
        "line": 160,
        "fullcodeline": "spin_unlock(&ctx->event_wqh.lock);"
    },
    {
        "line": 96,
        "fullcodeline": "if (signal_pending(current)) {"
    },
    {
        "line": 115,
        "fullcodeline": "if (!list_empty(&fork_event)) {"
    },
    {
        "line": 32,
        "fullcodeline": "write_seqcount_begin(&ctx->refile_seq);"
    },
    {
        "line": 55,
        "fullcodeline": "list_del(&uwq->wq.entry);"
    },
    {
        "line": 56,
        "fullcodeline": "__add_wait_queue(&ctx->fault_wqh, &uwq->wq);"
    },
    {
        "line": 58,
        "fullcodeline": "write_seqcount_end(&ctx->refile_seq);"
    },
    {
        "line": 61,
        "fullcodeline": "*msg = uwq->msg;"
    },
    {
        "line": 62,
        "fullcodeline": "spin_unlock(&ctx->fault_pending_wqh.lock);"
    },
    {
        "line": 63,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 71,
        "fullcodeline": "*msg = uwq->msg;"
    },
    {
        "line": 89,
        "fullcodeline": "userfaultfd_event_complete(ctx, uwq);"
    },
    {
        "line": 90,
        "fullcodeline": "spin_unlock(&ctx->event_wqh.lock);"
    },
    {
        "line": 91,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "ret = -ERESTARTSYS;"
    },
    {
        "line": 101,
        "fullcodeline": "ret = -EAGAIN;"
    },
    {
        "line": 120,
        "fullcodeline": "userfaultfd_ctx_put(fork_nctx);"
    },
    {
        "line": 135,
        "fullcodeline": "list_del(&uwq->wq.entry);"
    },
    {
        "line": 136,
        "fullcodeline": "__add_wait_queue(&ctx->event_wqh, &uwq->wq);"
    },
    {
        "line": 73,
        "fullcodeline": "if (uwq->msg.event == UFFD_EVENT_FORK) {"
    },
    {
        "line": 143,
        "fullcodeline": "if (likely(!ret))"
    },
    {
        "line": 74,
        "fullcodeline": "fork_nctx = (struct userfaultfd_ctx *)"
    },
    {
        "line": 77,
        "fullcodeline": "list_move(&uwq->wq.entry, &fork_event);"
    },
    {
        "line": 83,
        "fullcodeline": "userfaultfd_ctx_get(fork_nctx);"
    },
    {
        "line": 84,
        "fullcodeline": "spin_unlock(&ctx->event_wqh.lock);"
    },
    {
        "line": 85,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 144,
        "fullcodeline": "userfaultfd_event_complete(ctx, uwq);"
    },
    {
        "line": 158,
        "fullcodeline": "userfaultfd_ctx_put(fork_nctx);"
    },
    {
        "line": 75,
        "fullcodeline": "(unsigned long)"
    }
]