[
    {
        "line": 7,
        "fullcodeline": "struct hstate *h = hstate_inode(inode);"
    },
    {
        "line": 8,
        "fullcodeline": "struct hugepage_subpool *spool = subpool_inode(inode);"
    },
    {
        "line": 52,
        "fullcodeline": "ret = hugetlb_acct_memory(h, chg);"
    },
    {
        "line": 15,
        "fullcodeline": "if (vm_flags & VM_NORESERVE)"
    },
    {
        "line": 24,
        "fullcodeline": "if (!vma || vma->vm_flags & VM_MAYSHARE)"
    },
    {
        "line": 37,
        "fullcodeline": "if (chg < 0) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (hugepage_subpool_get_pages(spool, chg)) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 25,
        "fullcodeline": "chg = region_chg(&inode->i_mapping->private_list, from, to);"
    },
    {
        "line": 38,
        "fullcodeline": "ret = chg;"
    },
    {
        "line": 44,
        "fullcodeline": "ret = -ENOSPC;"
    },
    {
        "line": 69,
        "fullcodeline": "if (!vma || vma->vm_flags & VM_MAYSHARE)"
    },
    {
        "line": 27,
        "fullcodeline": "struct resv_map *resv_map = resv_map_alloc();"
    },
    {
        "line": 31,
        "fullcodeline": "chg = to - from;"
    },
    {
        "line": 33,
        "fullcodeline": "set_vma_resv_map(vma, resv_map);"
    },
    {
        "line": 34,
        "fullcodeline": "set_vma_resv_flags(vma, HPAGE_RESV_OWNER);"
    },
    {
        "line": 28,
        "fullcodeline": "if (!resv_map)"
    },
    {
        "line": 29,
        "fullcodeline": "return -ENOMEM;"
    }
]