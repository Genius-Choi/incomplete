[
    {
        "line": 6,
        "fullcodeline": "char premaster[48];"
    },
    {
        "line": 9,
        "fullcodeline": "rng = lib->crypto->create_rng(lib->crypto, RNG_STRONG);"
    },
    {
        "line": 18,
        "fullcodeline": "htoun16(premaster, this->hello_version);"
    },
    {
        "line": 29,
        "fullcodeline": "public = tls_find_public_key(this->server_auth, this->server);"
    },
    {
        "line": 46,
        "fullcodeline": "writer->write_data16(writer, encrypted);"
    },
    {
        "line": 49,
        "fullcodeline": "*type = TLS_CLIENT_KEY_EXCHANGE;"
    },
    {
        "line": 50,
        "fullcodeline": "this->state = STATE_KEY_EXCHANGE_SENT;"
    },
    {
        "line": 10,
        "fullcodeline": "if (!rng || !rng->get_bytes(rng, sizeof(premaster) - 2, premaster + 2))"
    },
    {
        "line": 30,
        "fullcodeline": "if (!public)"
    },
    {
        "line": 51,
        "fullcodeline": "this->crypto->append_handshake(this->crypto, *type, writer->get_buf(writer));"
    },
    {
        "line": 12,
        "fullcodeline": "DBG1(DBG_TLS, \"failed to generate TLS premaster secret\");"
    },
    {
        "line": 13,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_INTERNAL_ERROR);"
    },
    {
        "line": 14,
        "fullcodeline": "DESTROY_IF(rng);"
    },
    {
        "line": 20,
        "fullcodeline": "if (!this->crypto->derive_secrets(this->crypto, chunk_from_thing(premaster),"
    },
    {
        "line": 33,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_CERTIFICATE_UNKNOWN);"
    },
    {
        "line": 36,
        "fullcodeline": "if (!public->encrypt(public, ENCRYPT_RSA_PKCS1, NULL,"
    },
    {
        "line": 41,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_BAD_CERTIFICATE);"
    },
    {
        "line": 22,
        "fullcodeline": "chunk_from_thing(this->client_random),"
    },
    {
        "line": 23,
        "fullcodeline": "chunk_from_thing(this->server_random)))"
    },
    {
        "line": 37,
        "fullcodeline": "chunk_from_thing(premaster), &encrypted))"
    }
]