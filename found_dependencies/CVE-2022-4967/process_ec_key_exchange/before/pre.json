[
    {
        "line": 10,
        "fullcodeline": "chunk = reader->peek(reader);"
    },
    {
        "line": 32,
        "fullcodeline": "group = curve_to_ec_group(this, curve);"
    },
    {
        "line": 41,
        "fullcodeline": "public = tls_find_public_key(this->server_auth);"
    },
    {
        "line": 49,
        "fullcodeline": "chunk.len = 4 + pub.len;"
    },
    {
        "line": 50,
        "fullcodeline": "chunk = chunk_cat(\"ccc\", chunk_from_thing(this->client_random),"
    },
    {
        "line": 63,
        "fullcodeline": "this->dh = lib->crypto->create_dh(lib->crypto, group);"
    },
    {
        "line": 92,
        "fullcodeline": "this->state = STATE_KEY_EXCHANGE_RECEIVED;"
    },
    {
        "line": 11,
        "fullcodeline": "if (!reader->read_uint8(reader, &type))"
    },
    {
        "line": 17,
        "fullcodeline": "if (type != TLS_ECC_NAMED_CURVE)"
    },
    {
        "line": 33,
        "fullcodeline": "if (!group)"
    },
    {
        "line": 42,
        "fullcodeline": "if (!public)"
    },
    {
        "line": 64,
        "fullcodeline": "if (!this->dh)"
    },
    {
        "line": 13,
        "fullcodeline": "DBG1(DBG_TLS, \"received invalid Server Key Exchange\");"
    },
    {
        "line": 14,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_DECODE_ERROR);"
    },
    {
        "line": 19,
        "fullcodeline": "DBG1(DBG_TLS, \"ECDH curve type %N not supported\","
    },
    {
        "line": 24,
        "fullcodeline": "if (!reader->read_uint16(reader, &curve) ||"
    },
    {
        "line": 25,
        "fullcodeline": "!reader->read_data8(reader, &pub) || pub.len == 0)"
    },
    {
        "line": 35,
        "fullcodeline": "DBG1(DBG_TLS, \"ECDH curve %N not supported\","
    },
    {
        "line": 45,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_CERTIFICATE_UNKNOWN);"
    },
    {
        "line": 51,
        "fullcodeline": "chunk_from_thing(this->server_random), chunk);"
    },
    {
        "line": 52,
        "fullcodeline": "if (!this->crypto->verify(this->crypto, public, reader, chunk))"
    },
    {
        "line": 57,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_BAD_CERTIFICATE);"
    },
    {
        "line": 66,
        "fullcodeline": "DBG1(DBG_TLS, \"DH group %N not supported\","
    },
    {
        "line": 72,
        "fullcodeline": "if (group != CURVE_25519 &&"
    },
    {
        "line": 73,
        "fullcodeline": "group != CURVE_448)"
    },
    {
        "line": 82,
        "fullcodeline": "pub = chunk_skip(pub, 1);"
    },
    {
        "line": 85,
        "fullcodeline": "if (!this->dh->set_other_public_value(this->dh, pub))"
    },
    {
        "line": 75,
        "fullcodeline": "if (pub.ptr[0] != TLS_ANSI_UNCOMPRESSED)"
    },
    {
        "line": 77,
        "fullcodeline": "DBG1(DBG_TLS, \"DH point format '%N' not supported\","
    }
]