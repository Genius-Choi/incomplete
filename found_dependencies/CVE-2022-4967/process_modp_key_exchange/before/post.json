[
    {
        "line": 7,
        "fullcodeline": "chunk = reader->peek(reader);"
    },
    {
        "line": 23,
        "fullcodeline": "public = tls_find_public_key(this->server_auth);"
    },
    {
        "line": 31,
        "fullcodeline": "chunk.len = 2 + prime.len + 2 + generator.len + 2 + pub.len;"
    },
    {
        "line": 32,
        "fullcodeline": "chunk = chunk_cat(\"ccc\", chunk_from_thing(this->client_random),"
    },
    {
        "line": 42,
        "fullcodeline": "public->destroy(public);"
    },
    {
        "line": 43,
        "fullcodeline": "free(chunk.ptr);"
    },
    {
        "line": 45,
        "fullcodeline": "this->dh = lib->crypto->create_dh(lib->crypto, MODP_CUSTOM,"
    },
    {
        "line": 60,
        "fullcodeline": "this->state = STATE_KEY_EXCHANGE_RECEIVED;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!reader->read_data16(reader, &prime) ||"
    },
    {
        "line": 17,
        "fullcodeline": "if (prime.len < 1024 / 8)"
    },
    {
        "line": 24,
        "fullcodeline": "if (!public)"
    },
    {
        "line": 34,
        "fullcodeline": "if (!this->crypto->verify(this->crypto, public, reader, chunk))"
    },
    {
        "line": 47,
        "fullcodeline": "if (!this->dh)"
    },
    {
        "line": 53,
        "fullcodeline": "if (!this->dh->set_other_public_value(this->dh, pub))"
    },
    {
        "line": 10,
        "fullcodeline": "!reader->read_data16(reader, &pub))"
    },
    {
        "line": 12,
        "fullcodeline": "DBG1(DBG_TLS, \"received invalid Server Key Exchange\");"
    },
    {
        "line": 13,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_DECODE_ERROR);"
    },
    {
        "line": 19,
        "fullcodeline": "DBG1(DBG_TLS, \"short DH prime received (%zu bytes)\", prime.len);"
    },
    {
        "line": 20,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_INTERNAL_ERROR);"
    },
    {
        "line": 26,
        "fullcodeline": "DBG1(DBG_TLS, \"no TLS public key found for server '%Y'\", this->server);"
    },
    {
        "line": 27,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_CERTIFICATE_UNKNOWN);"
    },
    {
        "line": 33,
        "fullcodeline": "chunk_from_thing(this->server_random), chunk);"
    },
    {
        "line": 36,
        "fullcodeline": "public->destroy(public);"
    },
    {
        "line": 37,
        "fullcodeline": "free(chunk.ptr);"
    },
    {
        "line": 38,
        "fullcodeline": "DBG1(DBG_TLS, \"verifying DH parameters failed\");"
    },
    {
        "line": 39,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_BAD_CERTIFICATE);"
    },
    {
        "line": 49,
        "fullcodeline": "DBG1(DBG_TLS, \"custom DH parameters not supported\");"
    },
    {
        "line": 50,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_INTERNAL_ERROR);"
    },
    {
        "line": 55,
        "fullcodeline": "DBG1(DBG_TLS, \"applying DH public value failed\");"
    },
    {
        "line": 56,
        "fullcodeline": "this->alert->add(this->alert, TLS_FATAL, TLS_INTERNAL_ERROR);"
    },
    {
        "line": 9,
        "fullcodeline": "!reader->read_data16(reader, &generator) ||"
    }
]