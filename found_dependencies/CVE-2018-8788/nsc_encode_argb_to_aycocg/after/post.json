[
    {
        "line": 9,
        "fullcodeline": "BYTE* yplane = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "BYTE* coplane = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "BYTE* cgplane = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "BYTE* aplane = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "tempWidth = ROUND_UP_TO(context->width, 8);"
    },
    {
        "line": 23,
        "fullcodeline": "rw = (context->ChromaSubsamplingLevel ? tempWidth : context->width);"
    },
    {
        "line": 24,
        "fullcodeline": "ccl = context->ColorLossLevel;"
    },
    {
        "line": 19,
        "fullcodeline": "if (!context || data || (scanline == 0))"
    },
    {
        "line": 26,
        "fullcodeline": "if (context->priv->PlaneBuffersLength < rw * scanline)"
    },
    {
        "line": 29,
        "fullcodeline": "if (rw < scanline * 2)"
    },
    {
        "line": 32,
        "fullcodeline": "for (y = 0; y < context->height; y++)"
    },
    {
        "line": 157,
        "fullcodeline": "if (context->ChromaSubsamplingLevel && (y % 2) == 1)"
    },
    {
        "line": 34,
        "fullcodeline": "src = data + (context->height - 1 - y) * scanline;"
    },
    {
        "line": 35,
        "fullcodeline": "yplane = context->priv->PlaneBuffers[0] + y * rw;"
    },
    {
        "line": 36,
        "fullcodeline": "coplane = context->priv->PlaneBuffers[1] + y * rw;"
    },
    {
        "line": 37,
        "fullcodeline": "cgplane = context->priv->PlaneBuffers[2] + y * rw;"
    },
    {
        "line": 38,
        "fullcodeline": "aplane = context->priv->PlaneBuffers[3] + y * context->width;"
    },
    {
        "line": 159,
        "fullcodeline": "yplane = context->priv->PlaneBuffers[0] + y * rw;"
    },
    {
        "line": 160,
        "fullcodeline": "coplane = context->priv->PlaneBuffers[1] + y * rw;"
    },
    {
        "line": 161,
        "fullcodeline": "cgplane = context->priv->PlaneBuffers[2] + y * rw;"
    },
    {
        "line": 162,
        "fullcodeline": "CopyMemory(yplane, yplane - rw, rw);"
    },
    {
        "line": 163,
        "fullcodeline": "CopyMemory(coplane, coplane - rw, rw);"
    },
    {
        "line": 164,
        "fullcodeline": "CopyMemory(cgplane, cgplane - rw, rw);"
    },
    {
        "line": 40,
        "fullcodeline": "for (x = 0; x < context->width; x++)"
    },
    {
        "line": 149,
        "fullcodeline": "if (context->ChromaSubsamplingLevel && (x % 2) == 1)"
    },
    {
        "line": 142,
        "fullcodeline": "*yplane++ = (BYTE)((r_val >> 2) + (g_val >> 1) + (b_val >> 2));"
    },
    {
        "line": 144,
        "fullcodeline": "*coplane++ = (BYTE)((r_val - b_val) >> ccl);"
    },
    {
        "line": 145,
        "fullcodeline": "*cgplane++ = (BYTE)((-(r_val >> 1) + g_val - (b_val >> 1)) >> ccl);"
    },
    {
        "line": 146,
        "fullcodeline": "*aplane++ = a_val;"
    },
    {
        "line": 48,
        "fullcodeline": "src++;"
    },
    {
        "line": 49,
        "fullcodeline": "a_val = 0xFF;"
    },
    {
        "line": 63,
        "fullcodeline": "src++;"
    },
    {
        "line": 64,
        "fullcodeline": "a_val = 0xFF;"
    },
    {
        "line": 78,
        "fullcodeline": "a_val = 0xFF;"
    },
    {
        "line": 85,
        "fullcodeline": "a_val = 0xFF;"
    },
    {
        "line": 89,
        "fullcodeline": "b_val = (INT16)(((*(src + 1)) & 0xF8) | ((*(src + 1)) >> 5));"
    },
    {
        "line": 90,
        "fullcodeline": "g_val = (INT16)((((*(src + 1)) & 0x07) << 5) | (((*src) & 0xE0) >> 3));"
    },
    {
        "line": 91,
        "fullcodeline": "r_val = (INT16)((((*src) & 0x1F) << 3) | (((*src) >> 2) & 0x07));"
    },
    {
        "line": 92,
        "fullcodeline": "a_val = 0xFF;"
    },
    {
        "line": 93,
        "fullcodeline": "src += 2;"
    },
    {
        "line": 97,
        "fullcodeline": "r_val = (INT16)(((*(src + 1)) & 0xF8) | ((*(src + 1)) >> 5));"
    },
    {
        "line": 98,
        "fullcodeline": "g_val = (INT16)((((*(src + 1)) & 0x07) << 5) | (((*src) & 0xE0) >> 3));"
    },
    {
        "line": 99,
        "fullcodeline": "b_val = (INT16)((((*src) & 0x1F) << 3) | (((*src) >> 2) & 0x07));"
    },
    {
        "line": 100,
        "fullcodeline": "a_val = 0xFF;"
    },
    {
        "line": 101,
        "fullcodeline": "src += 2;"
    },
    {
        "line": 122,
        "fullcodeline": "a_val = 0xFF;"
    },
    {
        "line": 134,
        "fullcodeline": "a_val = 0xFF;"
    },
    {
        "line": 138,
        "fullcodeline": "r_val = g_val = b_val = a_val = 0;"
    },
    {
        "line": 151,
        "fullcodeline": "*yplane = *(yplane - 1);"
    },
    {
        "line": 152,
        "fullcodeline": "*coplane = *(coplane - 1);"
    },
    {
        "line": 153,
        "fullcodeline": "*cgplane = *(cgplane - 1);"
    },
    {
        "line": 108,
        "fullcodeline": "shift = (7 - (x % 8));"
    },
    {
        "line": 109,
        "fullcodeline": "idx = ((*src) >> shift) & 1;"
    },
    {
        "line": 110,
        "fullcodeline": "idx |= (((*(src + 1)) >> shift) & 1) << 1;"
    },
    {
        "line": 111,
        "fullcodeline": "idx |= (((*(src + 2)) >> shift) & 1) << 2;"
    },
    {
        "line": 112,
        "fullcodeline": "idx |= (((*(src + 3)) >> shift) & 1) << 3;"
    },
    {
        "line": 113,
        "fullcodeline": "idx *= 3;"
    },
    {
        "line": 127,
        "fullcodeline": "int idx = (*src) * 3;"
    },
    {
        "line": 131,
        "fullcodeline": "src++;"
    },
    {
        "line": 45,
        "fullcodeline": "b_val = *src++;"
    },
    {
        "line": 46,
        "fullcodeline": "g_val = *src++;"
    },
    {
        "line": 47,
        "fullcodeline": "r_val = *src++;"
    },
    {
        "line": 53,
        "fullcodeline": "b_val = *src++;"
    },
    {
        "line": 54,
        "fullcodeline": "g_val = *src++;"
    },
    {
        "line": 55,
        "fullcodeline": "r_val = *src++;"
    },
    {
        "line": 56,
        "fullcodeline": "a_val = *src++;"
    },
    {
        "line": 60,
        "fullcodeline": "r_val = *src++;"
    },
    {
        "line": 61,
        "fullcodeline": "g_val = *src++;"
    },
    {
        "line": 62,
        "fullcodeline": "b_val = *src++;"
    },
    {
        "line": 68,
        "fullcodeline": "r_val = *src++;"
    },
    {
        "line": 69,
        "fullcodeline": "g_val = *src++;"
    },
    {
        "line": 70,
        "fullcodeline": "b_val = *src++;"
    },
    {
        "line": 71,
        "fullcodeline": "a_val = *src++;"
    },
    {
        "line": 75,
        "fullcodeline": "b_val = *src++;"
    },
    {
        "line": 76,
        "fullcodeline": "g_val = *src++;"
    },
    {
        "line": 77,
        "fullcodeline": "r_val = *src++;"
    },
    {
        "line": 82,
        "fullcodeline": "r_val = *src++;"
    },
    {
        "line": 83,
        "fullcodeline": "g_val = *src++;"
    },
    {
        "line": 84,
        "fullcodeline": "b_val = *src++;"
    },
    {
        "line": 118,
        "fullcodeline": "if (shift == 0)"
    },
    {
        "line": 119,
        "fullcodeline": "src += 4;"
    },
    {
        "line": 115,
        "fullcodeline": "g_val = (INT16) context->palette[idx + 1];"
    },
    {
        "line": 116,
        "fullcodeline": "b_val = (INT16) context->palette[idx + 2];"
    },
    {
        "line": 129,
        "fullcodeline": "g_val = (INT16) context->palette[idx + 1];"
    },
    {
        "line": 130,
        "fullcodeline": "b_val = (INT16) context->palette[idx + 2];"
    }
]