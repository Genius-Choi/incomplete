[
    {
        "line": 5,
        "fullcodeline": "UINT16 rw = ROUND_UP_TO(context->width, 8);"
    },
    {
        "line": 6,
        "fullcodeline": "BYTE shift = context->ColorLossLevel - 1; /* colorloss recovery + YCoCg shift */"
    },
    {
        "line": 7,
        "fullcodeline": "BYTE* bmpdata = context->BitmapData;"
    },
    {
        "line": 9,
        "fullcodeline": "for (y = 0; y < context->height; y++)"
    },
    {
        "line": 14,
        "fullcodeline": "const BYTE* aplane = context->priv->PlaneBuffers[3] + y * context->width; /* A */"
    },
    {
        "line": 31,
        "fullcodeline": "for (x = 0; x < context->width; x++)"
    },
    {
        "line": 18,
        "fullcodeline": "yplane = context->priv->PlaneBuffers[0] + y * rw; /* Y */"
    },
    {
        "line": 19,
        "fullcodeline": "coplane = context->priv->PlaneBuffers[1] + (y >> 1) * (rw >>"
    },
    {
        "line": 21,
        "fullcodeline": "cgplane = context->priv->PlaneBuffers[2] + (y >> 1) * (rw >>"
    },
    {
        "line": 33,
        "fullcodeline": "INT16 y_val = (INT16) * yplane;"
    },
    {
        "line": 34,
        "fullcodeline": "INT16 co_val = (INT16)(INT8)(*coplane << shift);"
    },
    {
        "line": 35,
        "fullcodeline": "INT16 cg_val = (INT16)(INT8)(*cgplane << shift);"
    },
    {
        "line": 36,
        "fullcodeline": "INT16 r_val = y_val + co_val - cg_val;"
    },
    {
        "line": 37,
        "fullcodeline": "INT16 g_val = y_val + cg_val;"
    },
    {
        "line": 38,
        "fullcodeline": "INT16 b_val = y_val - co_val - cg_val;"
    },
    {
        "line": 39,
        "fullcodeline": "*bmpdata++ = MINMAX(b_val, 0, 0xFF);"
    },
    {
        "line": 40,
        "fullcodeline": "*bmpdata++ = MINMAX(g_val, 0, 0xFF);"
    },
    {
        "line": 41,
        "fullcodeline": "*bmpdata++ = MINMAX(r_val, 0, 0xFF);"
    },
    {
        "line": 43,
        "fullcodeline": "yplane++;"
    },
    {
        "line": 44,
        "fullcodeline": "coplane += (context->ChromaSubsamplingLevel ? x % 2 : 1);"
    },
    {
        "line": 45,
        "fullcodeline": "cgplane += (context->ChromaSubsamplingLevel ? x % 2 : 1);"
    },
    {
        "line": 46,
        "fullcodeline": "aplane++;"
    },
    {
        "line": 26,
        "fullcodeline": "yplane = context->priv->PlaneBuffers[0] + y * context->width; /* Y */"
    },
    {
        "line": 27,
        "fullcodeline": "coplane = context->priv->PlaneBuffers[1] + y * context->width; /* Co */"
    },
    {
        "line": 28,
        "fullcodeline": "cgplane = context->priv->PlaneBuffers[2] + y * context->width; /* Cg */"
    },
    {
        "line": 42,
        "fullcodeline": "*bmpdata++ = *aplane;"
    }
]