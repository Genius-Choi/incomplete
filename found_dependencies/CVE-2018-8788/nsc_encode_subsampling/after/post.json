[
    {
        "line": 11,
        "fullcodeline": "tempWidth = ROUND_UP_TO(context->width, 8);"
    },
    {
        "line": 12,
        "fullcodeline": "tempHeight = ROUND_UP_TO(context->height, 2);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!context)"
    },
    {
        "line": 14,
        "fullcodeline": "if (tempHeight == 0)"
    },
    {
        "line": 17,
        "fullcodeline": "if (tempWidth > context->priv->PlaneBuffersLength / tempHeight)"
    },
    {
        "line": 20,
        "fullcodeline": "for (y = 0; y < tempHeight >> 1; y++)"
    },
    {
        "line": 22,
        "fullcodeline": "BYTE* co_dst = context->priv->PlaneBuffers[1] + y * (tempWidth >> 1);"
    },
    {
        "line": 23,
        "fullcodeline": "BYTE* cg_dst = context->priv->PlaneBuffers[2] + y * (tempWidth >> 1);"
    },
    {
        "line": 24,
        "fullcodeline": "const INT8* co_src0 = (INT8*) context->priv->PlaneBuffers[1] + (y << 1) * tempWidth;"
    },
    {
        "line": 25,
        "fullcodeline": "const INT8* co_src1 = co_src0 + tempWidth;"
    },
    {
        "line": 26,
        "fullcodeline": "const INT8* cg_src0 = (INT8*) context->priv->PlaneBuffers[2] + (y << 1) * tempWidth;"
    },
    {
        "line": 27,
        "fullcodeline": "const INT8* cg_src1 = cg_src0 + tempWidth;"
    },
    {
        "line": 29,
        "fullcodeline": "for (x = 0; x < tempWidth >> 1; x++)"
    },
    {
        "line": 31,
        "fullcodeline": "*co_dst++ = (BYTE)(((INT16) * co_src0 + (INT16) * (co_src0 + 1) +"
    },
    {
        "line": 33,
        "fullcodeline": "*cg_dst++ = (BYTE)(((INT16) * cg_src0 + (INT16) * (cg_src0 + 1) +"
    },
    {
        "line": 35,
        "fullcodeline": "co_src0 += 2;"
    },
    {
        "line": 36,
        "fullcodeline": "co_src1 += 2;"
    },
    {
        "line": 37,
        "fullcodeline": "cg_src0 += 2;"
    },
    {
        "line": 38,
        "fullcodeline": "cg_src1 += 2;"
    },
    {
        "line": 32,
        "fullcodeline": "(INT16) * co_src1 + (INT16) * (co_src1 + 1)) >> 2);"
    },
    {
        "line": 34,
        "fullcodeline": "(INT16) * cg_src1 + (INT16) * (cg_src1 + 1)) >> 2);"
    }
]