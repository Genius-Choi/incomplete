[
    {
        "line": 13,
        "fullcodeline": "tempWidth = ROUND_UP_TO(context->width, 8);"
    },
    {
        "line": 14,
        "fullcodeline": "tempHeight = ROUND_UP_TO(context->height, 2);"
    },
    {
        "line": 16,
        "fullcodeline": "for (y = 0; y < tempHeight >> 1; y++)"
    },
    {
        "line": 18,
        "fullcodeline": "co_dst = context->priv->PlaneBuffers[1] + y * (tempWidth >> 1);"
    },
    {
        "line": 19,
        "fullcodeline": "cg_dst = context->priv->PlaneBuffers[2] + y * (tempWidth >> 1);"
    },
    {
        "line": 20,
        "fullcodeline": "co_src0 = (INT8*) context->priv->PlaneBuffers[1] + (y << 1) * tempWidth;"
    },
    {
        "line": 21,
        "fullcodeline": "co_src1 = co_src0 + tempWidth;"
    },
    {
        "line": 22,
        "fullcodeline": "cg_src0 = (INT8*) context->priv->PlaneBuffers[2] + (y << 1) * tempWidth;"
    },
    {
        "line": 23,
        "fullcodeline": "cg_src1 = cg_src0 + tempWidth;"
    },
    {
        "line": 25,
        "fullcodeline": "for (x = 0; x < tempWidth >> 1; x++)"
    },
    {
        "line": 27,
        "fullcodeline": "*co_dst++ = (BYTE)(((INT16) * co_src0 + (INT16) * (co_src0 + 1) +"
    },
    {
        "line": 29,
        "fullcodeline": "*cg_dst++ = (BYTE)(((INT16) * cg_src0 + (INT16) * (cg_src0 + 1) +"
    },
    {
        "line": 31,
        "fullcodeline": "co_src0 += 2;"
    },
    {
        "line": 32,
        "fullcodeline": "co_src1 += 2;"
    },
    {
        "line": 33,
        "fullcodeline": "cg_src0 += 2;"
    },
    {
        "line": 34,
        "fullcodeline": "cg_src1 += 2;"
    },
    {
        "line": 28,
        "fullcodeline": "(INT16) * co_src1 + (INT16) * (co_src1 + 1)) >> 2);"
    },
    {
        "line": 30,
        "fullcodeline": "(INT16) * cg_src1 + (INT16) * (cg_src1 + 1)) >> 2);"
    }
]