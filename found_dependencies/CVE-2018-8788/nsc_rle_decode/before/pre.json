[
    {
        "line": 6,
        "fullcodeline": "left = originalSize;"
    },
    {
        "line": 44,
        "fullcodeline": "*((UINT32*)out) = *((UINT32*)in);"
    },
    {
        "line": 8,
        "fullcodeline": "while (left > 4)"
    },
    {
        "line": 10,
        "fullcodeline": "value = *in++;"
    },
    {
        "line": 12,
        "fullcodeline": "if (left == 5)"
    },
    {
        "line": 14,
        "fullcodeline": "*out++ = value;"
    },
    {
        "line": 15,
        "fullcodeline": "left--;"
    },
    {
        "line": 17,
        "fullcodeline": "else if (value == *in)"
    },
    {
        "line": 19,
        "fullcodeline": "in++;"
    },
    {
        "line": 33,
        "fullcodeline": "FillMemory(out, len, value);"
    },
    {
        "line": 34,
        "fullcodeline": "out += len;"
    },
    {
        "line": 35,
        "fullcodeline": "left -= len;"
    },
    {
        "line": 21,
        "fullcodeline": "if (*in < 0xFF)"
    },
    {
        "line": 39,
        "fullcodeline": "*out++ = value;"
    },
    {
        "line": 40,
        "fullcodeline": "left--;"
    },
    {
        "line": 23,
        "fullcodeline": "len = (UINT32) * in++;"
    },
    {
        "line": 24,
        "fullcodeline": "len += 2;"
    },
    {
        "line": 28,
        "fullcodeline": "in++;"
    },
    {
        "line": 29,
        "fullcodeline": "len = *((UINT32*) in);"
    },
    {
        "line": 30,
        "fullcodeline": "in += 4;"
    }
]