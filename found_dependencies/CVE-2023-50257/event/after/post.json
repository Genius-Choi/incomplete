[
    {
        "line": 4,
        "fullcodeline": "bool restart = false;"
    },
    {
        "line": 8,
        "fullcodeline": "eprosima::shared_lock<eprosima::shared_mutex> lock(mp_PDP->mp_builtin->getDiscoveryMutex());"
    },
    {
        "line": 11,
        "fullcodeline": "std::unique_lock<std::recursive_mutex> pdp_lock(*mp_PDP->getMutex());"
    },
    {
        "line": 13,
        "fullcodeline": "part_proxy_data = mp_PDP->get_participant_proxy_data(server.guidPrefix);"
    },
    {
        "line": 37,
        "fullcodeline": "mp_PDP->_serverPing = true;"
    },
    {
        "line": 38,
        "fullcodeline": "mp_PDP->announceParticipantState(false);"
    },
    {
        "line": 39,
        "fullcodeline": "EPROSIMA_LOG_INFO(CLIENT_PDP_THREAD,"
    },
    {
        "line": 17,
        "fullcodeline": "if (nullptr != part_proxy_data)"
    },
    {
        "line": 40,
        "fullcodeline": "\"Client \" << mp_PDP->getRTPSParticipant()->getGuid() << \" PDP announcement\");"
    },
    {
        "line": 20,
        "fullcodeline": "if (!mp_EDP->areRemoteEndpointsMatched(part_proxy_data))"
    },
    {
        "line": 28,
        "fullcodeline": "restart = true;"
    },
    {
        "line": 22,
        "fullcodeline": "mp_EDP->assignRemoteEndpoints(*(part_proxy_data), true);"
    }
]