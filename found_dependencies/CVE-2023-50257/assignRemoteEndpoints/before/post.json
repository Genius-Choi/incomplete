[
    {
        "line": 4,
        "fullcodeline": "EPROSIMA_LOG_INFO(RTPS_EDP, \"New DPD received, adding remote endpoints to our SimpleEDP endpoints\");"
    },
    {
        "line": 5,
        "fullcodeline": "const NetworkFactory& network = mp_RTPSParticipant->network_factory();"
    },
    {
        "line": 6,
        "fullcodeline": "uint32_t endp = pdata.m_availableBuiltinEndpoints;"
    },
    {
        "line": 8,
        "fullcodeline": "bool use_multicast_locators = !mp_PDP->getRTPSParticipant()->getAttributes().builtin.avoid_builtin_multicast ||"
    },
    {
        "line": 11,
        "fullcodeline": "auto temp_reader_proxy_data = get_temporary_reader_proxies_pool().get();"
    },
    {
        "line": 13,
        "fullcodeline": "temp_reader_proxy_data->clear();"
    },
    {
        "line": 14,
        "fullcodeline": "temp_reader_proxy_data->m_expectsInlineQos = false;"
    },
    {
        "line": 16,
        "fullcodeline": "temp_reader_proxy_data->set_remote_locators(pdata.metatraffic_locators, network, use_multicast_locators);"
    },
    {
        "line": 17,
        "fullcodeline": "temp_reader_proxy_data->m_qos.m_durability.kind = TRANSIENT_LOCAL_DURABILITY_QOS;"
    },
    {
        "line": 18,
        "fullcodeline": "temp_reader_proxy_data->m_qos.m_reliability.kind = RELIABLE_RELIABILITY_QOS;"
    },
    {
        "line": 20,
        "fullcodeline": "auto temp_writer_proxy_data = get_temporary_writer_proxies_pool().get();"
    },
    {
        "line": 22,
        "fullcodeline": "temp_writer_proxy_data->clear();"
    },
    {
        "line": 24,
        "fullcodeline": "temp_writer_proxy_data->persistence_guid(pdata.get_persistence_guid());"
    },
    {
        "line": 25,
        "fullcodeline": "temp_writer_proxy_data->set_remote_locators(pdata.metatraffic_locators, network, use_multicast_locators);"
    },
    {
        "line": 26,
        "fullcodeline": "temp_writer_proxy_data->m_qos.m_durability.kind = TRANSIENT_LOCAL_DURABILITY_QOS;"
    },
    {
        "line": 27,
        "fullcodeline": "temp_writer_proxy_data->m_qos.m_reliability.kind = RELIABLE_RELIABILITY_QOS;"
    },
    {
        "line": 29,
        "fullcodeline": "auxendp = endp;"
    },
    {
        "line": 30,
        "fullcodeline": "auxendp &= DISC_BUILTIN_ENDPOINT_PUBLICATION_ANNOUNCER;"
    },
    {
        "line": 38,
        "fullcodeline": "auxendp = endp;"
    },
    {
        "line": 39,
        "fullcodeline": "auxendp &= DISC_BUILTIN_ENDPOINT_PUBLICATION_DETECTOR;"
    },
    {
        "line": 46,
        "fullcodeline": "auxendp = endp;"
    },
    {
        "line": 47,
        "fullcodeline": "auxendp &= DISC_BUILTIN_ENDPOINT_SUBSCRIPTION_ANNOUNCER;"
    },
    {
        "line": 55,
        "fullcodeline": "auxendp = endp;"
    },
    {
        "line": 56,
        "fullcodeline": "auxendp &= DISC_BUILTIN_ENDPOINT_SUBSCRIPTION_DETECTOR;"
    },
    {
        "line": 31,
        "fullcodeline": "if (auxendp != 0 && publications_reader_.first != nullptr) //Exist Pub Writer and i have pub reader"
    },
    {
        "line": 40,
        "fullcodeline": "if (auxendp != 0 && publications_writer_.first != nullptr) //Exist Pub Detector"
    },
    {
        "line": 48,
        "fullcodeline": "if (auxendp != 0 && subscriptions_reader_.first != nullptr) //Exist Pub Announcer"
    },
    {
        "line": 57,
        "fullcodeline": "if (auxendp != 0 && subscriptions_writer_.first != nullptr) //Exist Pub Announcer"
    },
    {
        "line": 15,
        "fullcodeline": "temp_reader_proxy_data->guid().guidPrefix = pdata.m_guid.guidPrefix;"
    },
    {
        "line": 23,
        "fullcodeline": "temp_writer_proxy_data->guid().guidPrefix = pdata.m_guid.guidPrefix;"
    },
    {
        "line": 33,
        "fullcodeline": "EPROSIMA_LOG_INFO(RTPS_EDP, \"Adding SEDP Pub Writer to my Pub Reader\");"
    },
    {
        "line": 34,
        "fullcodeline": "temp_writer_proxy_data->guid().entityId = c_EntityId_SEDPPubWriter;"
    },
    {
        "line": 35,
        "fullcodeline": "temp_writer_proxy_data->set_persistence_entity_id(c_EntityId_SEDPPubWriter);"
    },
    {
        "line": 36,
        "fullcodeline": "publications_reader_.first->matched_writer_add(*temp_writer_proxy_data);"
    },
    {
        "line": 42,
        "fullcodeline": "EPROSIMA_LOG_INFO(RTPS_EDP, \"Adding SEDP Pub Reader to my Pub Writer\");"
    },
    {
        "line": 43,
        "fullcodeline": "temp_reader_proxy_data->guid().entityId = c_EntityId_SEDPPubReader;"
    },
    {
        "line": 44,
        "fullcodeline": "publications_writer_.first->matched_reader_add(*temp_reader_proxy_data);"
    },
    {
        "line": 50,
        "fullcodeline": "EPROSIMA_LOG_INFO(RTPS_EDP, \"Adding SEDP Sub Writer to my Sub Reader\");"
    },
    {
        "line": 51,
        "fullcodeline": "temp_writer_proxy_data->guid().entityId = c_EntityId_SEDPSubWriter;"
    },
    {
        "line": 52,
        "fullcodeline": "temp_writer_proxy_data->set_persistence_entity_id(c_EntityId_SEDPSubWriter);"
    },
    {
        "line": 53,
        "fullcodeline": "subscriptions_reader_.first->matched_writer_add(*temp_writer_proxy_data);"
    },
    {
        "line": 59,
        "fullcodeline": "EPROSIMA_LOG_INFO(RTPS_EDP, \"Adding SEDP Sub Reader to my Sub Writer\");"
    },
    {
        "line": 60,
        "fullcodeline": "temp_reader_proxy_data->guid().entityId = c_EntityId_SEDPSubReader;"
    },
    {
        "line": 61,
        "fullcodeline": "subscriptions_writer_.first->matched_reader_add(*temp_reader_proxy_data);"
    }
]