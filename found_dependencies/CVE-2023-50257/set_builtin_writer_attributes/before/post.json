[
    {
        "line": 4,
        "fullcodeline": "const RTPSParticipantAttributes& pattr = mp_PDP->getRTPSParticipant()->getRTPSParticipantAttributes();"
    },
    {
        "line": 32,
        "fullcodeline": "attributes.endpoint.ignore_non_matching_locators = pattr.ignore_non_matching_locators;"
    },
    {
        "line": 35,
        "fullcodeline": "attributes.times.heartbeatPeriod = edp_heartbeat_period;"
    },
    {
        "line": 36,
        "fullcodeline": "attributes.times.nackResponseDelay = edp_nack_response_delay;"
    },
    {
        "line": 37,
        "fullcodeline": "attributes.times.nackSupressionDuration = edp_nack_supression_duration;"
    },
    {
        "line": 40,
        "fullcodeline": "attributes.endpoint.reliabilityKind = RELIABLE;"
    },
    {
        "line": 41,
        "fullcodeline": "attributes.endpoint.durabilityKind = TRANSIENT_LOCAL;"
    },
    {
        "line": 42,
        "fullcodeline": "attributes.endpoint.topicKind = WITH_KEY;"
    },
    {
        "line": 10,
        "fullcodeline": "if (attributes.matched_readers_allocation.initial > 1)"
    },
    {
        "line": 14,
        "fullcodeline": "if ((attributes.matched_readers_allocation.maximum > 1) &&"
    },
    {
        "line": 12,
        "fullcodeline": "attributes.matched_readers_allocation.initial--;"
    },
    {
        "line": 15,
        "fullcodeline": "(attributes.matched_readers_allocation.maximum < std::numeric_limits<size_t>::max()))"
    },
    {
        "line": 17,
        "fullcodeline": "attributes.matched_readers_allocation.maximum--;"
    },
    {
        "line": 24,
        "fullcodeline": "attributes.endpoint.unicastLocatorList.push_back(loc);"
    },
    {
        "line": 29,
        "fullcodeline": "attributes.endpoint.multicastLocatorList.push_back(loc);"
    },
    {
        "line": 31,
        "fullcodeline": "attributes.endpoint.external_unicast_locators = mp_PDP->builtin_attributes().metatraffic_external_unicast_locators;"
    }
]