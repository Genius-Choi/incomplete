[
    {
        "line": 4,
        "fullcodeline": "auto sentry = is_security_manager_initialized();"
    },
    {
        "line": 11,
        "fullcodeline": "auto& sec_attrs = participant_->security_attributes();"
    },
    {
        "line": 24,
        "fullcodeline": "AuthenticationStatus auth_status = AUTHENTICATION_INIT;"
    },
    {
        "line": 27,
        "fullcodeline": "bool undiscovered = false;"
    },
    {
        "line": 44,
        "fullcodeline": "bool notify_part_authorized = false;"
    },
    {
        "line": 122,
        "fullcodeline": "bool returnedValue = true;"
    },
    {
        "line": 131,
        "fullcodeline": "restore_discovered_participant_info(participant_data.m_guid, remote_participant_info);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!sentry)"
    },
    {
        "line": 12,
        "fullcodeline": "if (!sec_attrs.match(participant_data.security_attributes_, participant_data.plugin_security_attributes_))"
    },
    {
        "line": 17,
        "fullcodeline": "if (authentication_plugin_ == nullptr)"
    },
    {
        "line": 30,
        "fullcodeline": "std::lock_guard<shared_mutex> _(mutex_);"
    },
    {
        "line": 32,
        "fullcodeline": "auto map_ret = discovered_participants_.insert("
    },
    {
        "line": 40,
        "fullcodeline": "undiscovered = map_ret.second;"
    },
    {
        "line": 41,
        "fullcodeline": "remote_participant_info = map_ret.first->second->get_auth();"
    },
    {
        "line": 45,
        "fullcodeline": "if (undiscovered && remote_participant_info)"
    },
    {
        "line": 124,
        "fullcodeline": "if (remote_participant_info->auth_status_ == AUTHENTICATION_REQUEST_NOT_SEND)"
    },
    {
        "line": 19,
        "fullcodeline": "participant_->pdp()->notifyAboveRemoteEndpoints(participant_data, true);"
    },
    {
        "line": 48,
        "fullcodeline": "const GUID_t guid = participant_data.m_guid;"
    },
    {
        "line": 49,
        "fullcodeline": "remote_participant_info->event_.reset(new TimedEvent(participant_->getEventResource(),"
    },
    {
        "line": 57,
        "fullcodeline": "IdentityHandle* remote_identity_handle = nullptr;"
    },
    {
        "line": 60,
        "fullcodeline": "ValidationResult_t validation_ret = authentication_plugin_->validate_remote_identity(&remote_identity_handle,"
    },
    {
        "line": 94,
        "fullcodeline": "EPROSIMA_LOG_INFO(SECURITY, \"Discovered participant \" << participant_data.m_guid);"
    },
    {
        "line": 97,
        "fullcodeline": "match_builtin_endpoints(participant_data);"
    },
    {
        "line": 100,
        "fullcodeline": "remote_participant_info->auth_status_ = auth_status;"
    },
    {
        "line": 101,
        "fullcodeline": "remote_participant_info->identity_handle_ = remote_identity_handle;"
    },
    {
        "line": 127,
        "fullcodeline": "returnedValue = on_process_handshake(participant_data, remote_participant_info,"
    },
    {
        "line": 135,
        "fullcodeline": "notify_participant_authorized(participant_data);"
    },
    {
        "line": 33,
        "fullcodeline": "std::make_pair("
    },
    {
        "line": 105,
        "fullcodeline": "if (auth_status == AUTHENTICATION_OK)"
    },
    {
        "line": 35,
        "fullcodeline": "std::unique_ptr<DiscoveredParticipantInfo>("
    },
    {
        "line": 68,
        "fullcodeline": "assert(remote_identity_handle != nullptr);"
    },
    {
        "line": 69,
        "fullcodeline": "auth_status = AUTHENTICATION_OK;"
    },
    {
        "line": 72,
        "fullcodeline": "assert(remote_identity_handle != nullptr);"
    },
    {
        "line": 73,
        "fullcodeline": "auth_status = AUTHENTICATION_REQUEST_NOT_SEND;"
    },
    {
        "line": 76,
        "fullcodeline": "assert(remote_identity_handle != nullptr);"
    },
    {
        "line": 77,
        "fullcodeline": "auth_status = AUTHENTICATION_WAITING_REQUEST;"
    },
    {
        "line": 83,
        "fullcodeline": "on_validation_failed(participant_data, exception);"
    },
    {
        "line": 85,
        "fullcodeline": "std::lock_guard<shared_mutex> _(mutex_);"
    },
    {
        "line": 88,
        "fullcodeline": "discovered_participants_.erase(participant_data.m_guid);"
    },
    {
        "line": 108,
        "fullcodeline": "std::shared_ptr<SecretHandle> ss;"
    },
    {
        "line": 109,
        "fullcodeline": "notify_part_authorized = participant_authorized(participant_data, remote_participant_info, ss);"
    },
    {
        "line": 116,
        "fullcodeline": "if (!remote_participant_info)"
    },
    {
        "line": 36,
        "fullcodeline": "new DiscoveredParticipantInfo("
    }
]