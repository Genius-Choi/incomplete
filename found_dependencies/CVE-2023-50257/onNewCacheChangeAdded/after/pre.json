[
    {
        "line": 5,
        "fullcodeline": "CacheChange_t* change = const_cast<CacheChange_t*>(change_in);"
    },
    {
        "line": 6,
        "fullcodeline": "GUID_t writer_guid = change->writerGUID;"
    },
    {
        "line": 7,
        "fullcodeline": "EPROSIMA_LOG_INFO(RTPS_PDP, \"SPDP Message received from: \" << change_in->writerGUID);"
    },
    {
        "line": 22,
        "fullcodeline": "iHandle2GUID(guid, change->instanceHandle);"
    },
    {
        "line": 10,
        "fullcodeline": "if (change->instanceHandle == c_InstanceHandle_Unknown)"
    },
    {
        "line": 24,
        "fullcodeline": "if (change->kind == ALIVE)"
    },
    {
        "line": 36,
        "fullcodeline": "SequenceNumber_t seq_num = change->sequenceNumber;"
    },
    {
        "line": 50,
        "fullcodeline": "CDRMessage_t msg(change->serializedPayload);"
    },
    {
        "line": 51,
        "fullcodeline": "temp_participant_data_.clear();"
    },
    {
        "line": 12,
        "fullcodeline": "if (!this->get_key(change))"
    },
    {
        "line": 37,
        "fullcodeline": "reader->getMutex().unlock();"
    },
    {
        "line": 38,
        "fullcodeline": "std::unique_lock<std::recursive_mutex> lock(*parent_pdp_->getMutex());"
    },
    {
        "line": 39,
        "fullcodeline": "reader->getMutex().lock();"
    },
    {
        "line": 52,
        "fullcodeline": "if (temp_participant_data_.readFromCDRMessage(&msg, true, parent_pdp_->getRTPSParticipant()->network_factory(),"
    },
    {
        "line": 14,
        "fullcodeline": "EPROSIMA_LOG_WARNING(RTPS_PDP, \"Problem getting the key of the change, removing\");"
    },
    {
        "line": 15,
        "fullcodeline": "parent_pdp_->builtin_endpoints_->remove_from_pdp_reader_history(change);"
    },
    {
        "line": 27,
        "fullcodeline": "if (guid == parent_pdp_->getRTPSParticipant()->getGuid())"
    },
    {
        "line": 42,
        "fullcodeline": "if ((ALIVE != change->kind) || (seq_num != change->sequenceNumber) || (writer_guid != change->writerGUID))"
    },
    {
        "line": 53,
        "fullcodeline": "parent_pdp_->getRTPSParticipant()->has_shm_transport()))"
    },
    {
        "line": 56,
        "fullcodeline": "change->instanceHandle = temp_participant_data_.m_key;"
    },
    {
        "line": 57,
        "fullcodeline": "guid = temp_participant_data_.m_guid;"
    },
    {
        "line": 65,
        "fullcodeline": "const auto& pattr = parent_pdp_->getRTPSParticipant()->getAttributes();"
    },
    {
        "line": 66,
        "fullcodeline": "fastdds::rtps::ExternalLocatorsProcessor::filter_remote_locators(temp_participant_data_,"
    },
    {
        "line": 71,
        "fullcodeline": "ParticipantProxyData* pdata = nullptr;"
    },
    {
        "line": 81,
        "fullcodeline": "auto status = (pdata == nullptr) ? ParticipantDiscoveryInfo::DISCOVERED_PARTICIPANT :"
    },
    {
        "line": 180,
        "fullcodeline": "reader->getMutex().unlock();"
    },
    {
        "line": 181,
        "fullcodeline": "if (parent_pdp_->remove_remote_participant(guid, ParticipantDiscoveryInfo::REMOVED_PARTICIPANT))"
    },
    {
        "line": 187,
        "fullcodeline": "reader->getMutex().lock();"
    },
    {
        "line": 59,
        "fullcodeline": "if (parent_pdp_->getRTPSParticipant()->is_participant_ignored(guid.guidPrefix))"
    },
    {
        "line": 84,
        "fullcodeline": "if (pdata == nullptr)"
    },
    {
        "line": 175,
        "fullcodeline": "reader->getMutex().lock();"
    },
    {
        "line": 87,
        "fullcodeline": "pdata = parent_pdp_->createParticipantProxyData(temp_participant_data_, writer_guid);"
    },
    {
        "line": 183,
        "fullcodeline": "reader->getMutex().lock();"
    },
    {
        "line": 74,
        "fullcodeline": "if (guid == it->m_guid)"
    },
    {
        "line": 89,
        "fullcodeline": "reader->getMutex().unlock();"
    },
    {
        "line": 92,
        "fullcodeline": "if (pdata != nullptr)"
    },
    {
        "line": 136,
        "fullcodeline": "pdata->updateData(temp_participant_data_);"
    },
    {
        "line": 152,
        "fullcodeline": "RTPSParticipantListener* listener = parent_pdp_->getRTPSParticipant()->getListener();"
    },
    {
        "line": 99,
        "fullcodeline": "RTPSParticipantListener* listener = parent_pdp_->getRTPSParticipant()->getListener();"
    },
    {
        "line": 131,
        "fullcodeline": "parent_pdp_->assignRemoteEndpoints(pdata);"
    },
    {
        "line": 138,
        "fullcodeline": "reader->getMutex().unlock();"
    },
    {
        "line": 140,
        "fullcodeline": "EPROSIMA_LOG_INFO(RTPS_PDP_DISCOVERY, \"Update participant \""
    },
    {
        "line": 145,
        "fullcodeline": "if (parent_pdp_->updateInfoMatchesEDP())"
    },
    {
        "line": 153,
        "fullcodeline": "if (listener != nullptr)"
    },
    {
        "line": 94,
        "fullcodeline": "EPROSIMA_LOG_INFO(RTPS_PDP_DISCOVERY, \"New participant \""
    },
    {
        "line": 100,
        "fullcodeline": "if (listener != nullptr)"
    },
    {
        "line": 147,
        "fullcodeline": "parent_pdp_->mp_EDP->assignRemoteEndpoints(*pdata, true);"
    },
    {
        "line": 155,
        "fullcodeline": "bool should_be_ignored = false;"
    },
    {
        "line": 102,
        "fullcodeline": "bool should_be_ignored = false;"
    },
    {
        "line": 160,
        "fullcodeline": "info.status = status;"
    },
    {
        "line": 105,
        "fullcodeline": "ParticipantDiscoveryInfo info(*pdata);"
    },
    {
        "line": 106,
        "fullcodeline": "info.status = status;"
    },
    {
        "line": 158,
        "fullcodeline": "std::lock_guard<std::mutex> cb_lock(parent_pdp_->callback_mtx_);"
    },
    {
        "line": 163,
        "fullcodeline": "parent_pdp_->getRTPSParticipant()->getUserRTPSParticipant(),"
    },
    {
        "line": 164,
        "fullcodeline": "std::move(info),"
    },
    {
        "line": 104,
        "fullcodeline": "std::lock_guard<std::mutex> cb_lock(parent_pdp_->callback_mtx_);"
    },
    {
        "line": 110,
        "fullcodeline": "parent_pdp_->getRTPSParticipant()->getUserRTPSParticipant(),"
    },
    {
        "line": 111,
        "fullcodeline": "std::move(info),"
    },
    {
        "line": 169,
        "fullcodeline": "parent_pdp_->getRTPSParticipant()->ignore_participant(temp_participant_data_.m_guid.guidPrefix);"
    },
    {
        "line": 116,
        "fullcodeline": "parent_pdp_->getRTPSParticipant()->ignore_participant(guid.guidPrefix);"
    }
]