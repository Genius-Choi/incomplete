[
    {
        "line": 3,
        "fullcodeline": "disable_security_manager();"
    },
    {
        "line": 54,
        "fullcodeline": "std::lock_guard<shared_mutex> _(mutex_);"
    },
    {
        "line": 57,
        "fullcodeline": "delete_entities();"
    },
    {
        "line": 59,
        "fullcodeline": "writer_handles_.clear();"
    },
    {
        "line": 60,
        "fullcodeline": "reader_handles_.clear();"
    },
    {
        "line": 61,
        "fullcodeline": "discovered_participants_.clear();"
    },
    {
        "line": 63,
        "fullcodeline": "local_permissions_handle_ = nullptr;"
    },
    {
        "line": 64,
        "fullcodeline": "local_identity_handle_ = nullptr;"
    },
    {
        "line": 5,
        "fullcodeline": "if (authentication_plugin_ != nullptr)"
    },
    {
        "line": 66,
        "fullcodeline": "if (crypto_plugin_ != nullptr)"
    },
    {
        "line": 72,
        "fullcodeline": "if (access_plugin_ != nullptr)"
    },
    {
        "line": 78,
        "fullcodeline": "if (authentication_plugin_ != nullptr)"
    },
    {
        "line": 84,
        "fullcodeline": "if (logging_plugin_ != nullptr)"
    },
    {
        "line": 7,
        "fullcodeline": "shared_lock<shared_mutex> _(mutex_);"
    },
    {
        "line": 68,
        "fullcodeline": "delete crypto_plugin_;"
    },
    {
        "line": 69,
        "fullcodeline": "crypto_plugin_ = nullptr;"
    },
    {
        "line": 74,
        "fullcodeline": "delete access_plugin_;"
    },
    {
        "line": 75,
        "fullcodeline": "access_plugin_ = nullptr;"
    },
    {
        "line": 80,
        "fullcodeline": "delete authentication_plugin_;"
    },
    {
        "line": 81,
        "fullcodeline": "authentication_plugin_ = nullptr;"
    },
    {
        "line": 86,
        "fullcodeline": "delete logging_plugin_;"
    },
    {
        "line": 87,
        "fullcodeline": "logging_plugin_ = nullptr;"
    },
    {
        "line": 42,
        "fullcodeline": "if (local_permissions_handle_ != nullptr)"
    },
    {
        "line": 47,
        "fullcodeline": "if (local_identity_handle_ != nullptr)"
    },
    {
        "line": 16,
        "fullcodeline": "std::shared_ptr<ParticipantCryptoHandle> participant_crypto_handle = dp_it.second->get_participant_crypto();"
    },
    {
        "line": 22,
        "fullcodeline": "PermissionsHandle* permissions_handle = dp_it.second->get_permissions_handle();"
    },
    {
        "line": 28,
        "fullcodeline": "std::shared_ptr<SecretHandle> shared_secret_handle = dp_it.second->get_shared_secret();"
    },
    {
        "line": 34,
        "fullcodeline": "remove_discovered_participant_info(dp_it.second->get_auth());"
    },
    {
        "line": 39,
        "fullcodeline": "crypto_plugin_->cryptokeyfactory()->unregister_participant(local_participant_crypto_handle_, exception);"
    },
    {
        "line": 44,
        "fullcodeline": "access_plugin_->return_permissions_handle(local_permissions_handle_, exception);"
    },
    {
        "line": 49,
        "fullcodeline": "authentication_plugin_->return_identity_handle(local_identity_handle_, exception);"
    },
    {
        "line": 17,
        "fullcodeline": "if (participant_crypto_handle != nullptr)"
    },
    {
        "line": 23,
        "fullcodeline": "if (permissions_handle != nullptr)"
    },
    {
        "line": 29,
        "fullcodeline": "if (shared_secret_handle != nullptr)"
    },
    {
        "line": 19,
        "fullcodeline": "crypto_plugin_->cryptokeyfactory()->unregister_participant(participant_crypto_handle, exception);"
    },
    {
        "line": 25,
        "fullcodeline": "access_plugin_->return_permissions_handle(permissions_handle, exception);"
    },
    {
        "line": 31,
        "fullcodeline": "authentication_plugin_->return_sharedsecret_handle(shared_secret_handle, exception);"
    }
]