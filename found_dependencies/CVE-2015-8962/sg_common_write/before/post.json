[
    {
        "line": 5,
        "fullcodeline": "Sg_device *sdp = sfp->parentdp;"
    },
    {
        "line": 6,
        "fullcodeline": "sg_io_hdr_t *hp = &srp->header;"
    },
    {
        "line": 8,
        "fullcodeline": "srp->data.cmd_opcode = cmnd[0];\t/* hold opcode of command */"
    },
    {
        "line": 9,
        "fullcodeline": "hp->status = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "hp->masked_status = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "hp->msg_status = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "hp->info = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "hp->host_status = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "hp->driver_status = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "hp->resid = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "SCSI_LOG_TIMEOUT(4, sg_printk(KERN_INFO, sfp->parentdp,"
    },
    {
        "line": 20,
        "fullcodeline": "k = sg_start_req(srp, cmnd);"
    },
    {
        "line": 34,
        "fullcodeline": "hp->duration = jiffies_to_msecs(jiffies);"
    },
    {
        "line": 41,
        "fullcodeline": "srp->rq->timeout = timeout;"
    },
    {
        "line": 42,
        "fullcodeline": "kref_get(&sfp->f_ref); /* sg_rq_end_io() does kref_put(). */"
    },
    {
        "line": 43,
        "fullcodeline": "blk_execute_rq_nowait(sdp->device->request_queue, sdp->disk,"
    },
    {
        "line": 27,
        "fullcodeline": "if (atomic_read(&sdp->detaching)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (hp->interface_id != '\\0' &&\t/* v3 (or later) interface */"
    },
    {
        "line": 18,
        "fullcodeline": "(int) cmnd[0], (int) hp->cmd_len));"
    },
    {
        "line": 22,
        "fullcodeline": "SCSI_LOG_TIMEOUT(1, sg_printk(KERN_INFO, sfp->parentdp,"
    },
    {
        "line": 24,
        "fullcodeline": "sg_finish_rem_req(srp);"
    },
    {
        "line": 30,
        "fullcodeline": "sg_finish_rem_req(srp);"
    },
    {
        "line": 36,
        "fullcodeline": "(SG_FLAG_Q_AT_TAIL & hp->flags))"
    },
    {
        "line": 37,
        "fullcodeline": "at_head = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 39,
        "fullcodeline": "at_head = 1;"
    },
    {
        "line": 29,
        "fullcodeline": "blk_end_request_all(srp->rq, -EIO);"
    }
]