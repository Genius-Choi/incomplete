[
    {
        "line": 3,
        "fullcodeline": "if (!unparsedHandshakeData_.empty()) {"
    },
    {
        "line": 4,
        "fullcodeline": "auto param = decodeHandshakeMessage(unparsedHandshakeData_);"
    },
    {
        "line": 15,
        "fullcodeline": "auto message = read(socketBuf);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!message) {"
    },
    {
        "line": 6,
        "fullcodeline": "VLOG(8) << \"Received handshake message \""
    },
    {
        "line": 20,
        "fullcodeline": "if (!unparsedHandshakeData_.empty() &&"
    },
    {
        "line": 21,
        "fullcodeline": "message->type != ContentType::handshake) {"
    },
    {
        "line": 7,
        "fullcodeline": "<< toString(boost::apply_visitor(EventVisitor(), *param));"
    },
    {
        "line": 27,
        "fullcodeline": "auto alert = decode<Alert>(std::move(message->fragment));"
    },
    {
        "line": 45,
        "fullcodeline": "message->fragment->coalesce();"
    },
    {
        "line": 46,
        "fullcodeline": "constexpr size_t kExtraAlloc = 1024;"
    },
    {
        "line": 58,
        "fullcodeline": "handshakeMessage->append(message->fragment->length());"
    },
    {
        "line": 59,
        "fullcodeline": "unparsedHandshakeData_.append(std::move(handshakeMessage));"
    },
    {
        "line": 60,
        "fullcodeline": "auto param = decodeHandshakeMessage(unparsedHandshakeData_);"
    },
    {
        "line": 73,
        "fullcodeline": "return Param(AppData(std::move(message->fragment)));"
    },
    {
        "line": 28,
        "fullcodeline": "if (alert.description == AlertDescription::close_notify) {"
    },
    {
        "line": 35,
        "fullcodeline": "std::unique_ptr<folly::IOBuf> handshakeMessage ="
    },
    {
        "line": 36,
        "fullcodeline": "unparsedHandshakeData_.move();"
    },
    {
        "line": 47,
        "fullcodeline": "if (!handshakeMessage) {"
    },
    {
        "line": 55,
        "fullcodeline": "handshakeMessage->writableTail(),"
    },
    {
        "line": 56,
        "fullcodeline": "message->fragment->data(),"
    },
    {
        "line": 57,
        "fullcodeline": "message->fragment->length());"
    },
    {
        "line": 48,
        "fullcodeline": "handshakeMessage ="
    },
    {
        "line": 29,
        "fullcodeline": "return Param(CloseNotify(socketBuf.move()));"
    },
    {
        "line": 49,
        "fullcodeline": "folly::IOBuf::create(message->fragment->length() + kExtraAlloc);"
    },
    {
        "line": 62,
        "fullcodeline": "VLOG(8) << \"Received handshake message \""
    },
    {
        "line": 63,
        "fullcodeline": "<< toString(boost::apply_visitor(EventVisitor(), *param));"
    },
    {
        "line": 31,
        "fullcodeline": "return Param(std::move(alert));"
    },
    {
        "line": 50,
        "fullcodeline": "} else if (handshakeMessage->tailroom() < message->fragment->length()) {"
    },
    {
        "line": 51,
        "fullcodeline": "handshakeMessage->reserve("
    },
    {
        "line": 52,
        "fullcodeline": "0, message->fragment->length() + kExtraAlloc);"
    }
]