[
    {
        "line": 5,
        "fullcodeline": "data = \"private\""
    },
    {
        "line": 7,
        "fullcodeline": "private_file = tmp_path / \"private_file\""
    },
    {
        "line": 8,
        "fullcodeline": "private_file.write_text(data)"
    },
    {
        "line": 10,
        "fullcodeline": "safe_path = tmp_path / \"safe_dir\""
    },
    {
        "line": 11,
        "fullcodeline": "safe_path.mkdir()"
    },
    {
        "line": 13,
        "fullcodeline": "app = web.Application()"
    },
    {
        "line": 17,
        "fullcodeline": "client = await aiohttp_client(app)"
    },
    {
        "line": 19,
        "fullcodeline": "await client.start_server()"
    },
    {
        "line": 23,
        "fullcodeline": "writer.write(b\"GET /../private_file HTTP/1.1\\r\\n\\r\\n\")"
    },
    {
        "line": 24,
        "fullcodeline": "response = await reader.readuntil(b\"\\r\\n\\r\\n\")"
    },
    {
        "line": 25,
        "fullcodeline": "assert b\"404 Not Found\" in response"
    },
    {
        "line": 26,
        "fullcodeline": "writer.close()"
    },
    {
        "line": 27,
        "fullcodeline": "await writer.wait_closed()"
    },
    {
        "line": 28,
        "fullcodeline": "await client.close()"
    },
    {
        "line": 16,
        "fullcodeline": "app.router.add_static(\"/\", str(safe_path), follow_symlinks=True)"
    },
    {
        "line": 22,
        "fullcodeline": "reader, writer = await asyncio.open_connection(client.host, client.port)"
    }
]