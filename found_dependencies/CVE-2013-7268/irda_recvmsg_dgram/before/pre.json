[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct irda_sock *self = irda_sk(sk);"
    },
    {
        "line": 10,
        "fullcodeline": "IRDA_DEBUG(4, \"%s()\\n\", __func__);"
    },
    {
        "line": 12,
        "fullcodeline": "msg->msg_namelen = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "skb = skb_recv_datagram(sk, flags & ~MSG_DONTWAIT,"
    },
    {
        "line": 19,
        "fullcodeline": "skb_reset_transport_header(skb);"
    },
    {
        "line": 20,
        "fullcodeline": "copied = skb->len;"
    },
    {
        "line": 28,
        "fullcodeline": "skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied);"
    },
    {
        "line": 30,
        "fullcodeline": "skb_free_datagram(sk, skb);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!skb)"
    },
    {
        "line": 22,
        "fullcodeline": "if (copied > size) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (self->rx_flow == FLOW_STOP) {"
    },
    {
        "line": 15,
        "fullcodeline": "flags & MSG_DONTWAIT, &err);"
    },
    {
        "line": 23,
        "fullcodeline": "IRDA_DEBUG(2, \"%s(), Received truncated frame (%zd < %zd)!\\n\","
    },
    {
        "line": 25,
        "fullcodeline": "copied = size;"
    },
    {
        "line": 26,
        "fullcodeline": "msg->msg_flags |= MSG_TRUNC;"
    },
    {
        "line": 39,
        "fullcodeline": "if ((atomic_read(&sk->sk_rmem_alloc) << 2) <= sk->sk_rcvbuf) {"
    }
]