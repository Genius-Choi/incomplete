[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct alg_sock *ask = alg_sk(sk);"
    },
    {
        "line": 6,
        "fullcodeline": "struct hash_ctx *ctx = ask->private;"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned ds = crypto_ahash_digestsize(crypto_ahash_reqtfm(&ctx->req));"
    },
    {
        "line": 15,
        "fullcodeline": "msg->msg_namelen = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 27,
        "fullcodeline": "err = memcpy_toiovec(msg->msg_iov, ctx->result, len);"
    },
    {
        "line": 30,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 10,
        "fullcodeline": "if (len > ds)"
    },
    {
        "line": 32,
        "fullcodeline": "return err ?: len;"
    },
    {
        "line": 11,
        "fullcodeline": "len = ds;"
    },
    {
        "line": 19,
        "fullcodeline": "ctx->more = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "ahash_request_set_crypt(&ctx->req, NULL, ctx->result, 0);"
    },
    {
        "line": 21,
        "fullcodeline": "err = af_alg_wait_for_completion(crypto_ahash_final(&ctx->req),"
    },
    {
        "line": 12,
        "fullcodeline": "else if (len < ds)"
    },
    {
        "line": 13,
        "fullcodeline": "msg->msg_flags |= MSG_TRUNC;"
    }
]