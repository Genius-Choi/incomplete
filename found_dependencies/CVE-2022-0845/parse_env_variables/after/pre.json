[
    {
        "line": 16,
        "fullcodeline": "cls_arg_defaults = get_init_arguments_and_types(cls)"
    },
    {
        "line": 18,
        "fullcodeline": "env_args = {}"
    },
    {
        "line": 19,
        "fullcodeline": "for arg_name, _, _ in cls_arg_defaults:"
    },
    {
        "line": 28,
        "fullcodeline": "return Namespace(**env_args)"
    },
    {
        "line": 20,
        "fullcodeline": "env = template % {\"cls_name\": cls.__name__.upper(), \"cls_argument\": arg_name.upper()}"
    },
    {
        "line": 21,
        "fullcodeline": "val = os.environ.get(env)"
    },
    {
        "line": 22,
        "fullcodeline": "if not (val is None or val == \"\"):"
    },
    {
        "line": 27,
        "fullcodeline": "env_args[arg_name] = val"
    },
    {
        "line": 24,
        "fullcodeline": "with suppress(Exception):"
    },
    {
        "line": 26,
        "fullcodeline": "val = literal_eval(val)"
    }
]