[
    {
        "line": 2,
        "fullcodeline": "plugin_data *p = p_d;"
    },
    {
        "line": 9,
        "fullcodeline": "mod_alias_patch_connection(srv, con, p);"
    },
    {
        "line": 12,
        "fullcodeline": "basedir_len = buffer_string_length(con->physical.basedir);"
    },
    {
        "line": 14,
        "fullcodeline": "uri_len = buffer_string_length(con->physical.path) - basedir_len;"
    },
    {
        "line": 15,
        "fullcodeline": "uri_ptr = con->physical.path->ptr + basedir_len;"
    },
    {
        "line": 7,
        "fullcodeline": "if (buffer_is_empty(con->physical.path)) return HANDLER_GO_ON;"
    },
    {
        "line": 17,
        "fullcodeline": "for (k = 0; k < p->conf.alias->used; k++) {"
    },
    {
        "line": 13,
        "fullcodeline": "if ('/' == con->physical.basedir->ptr[basedir_len-1]) --basedir_len;"
    },
    {
        "line": 18,
        "fullcodeline": "data_string *ds = (data_string *)p->conf.alias->data[k];"
    },
    {
        "line": 19,
        "fullcodeline": "int alias_len = buffer_string_length(ds->key);"
    },
    {
        "line": 21,
        "fullcodeline": "if (alias_len > uri_len) continue;"
    },
    {
        "line": 22,
        "fullcodeline": "if (buffer_is_empty(ds->key)) continue;"
    },
    {
        "line": 29,
        "fullcodeline": "buffer_copy_buffer(con->physical.basedir, ds->value);"
    },
    {
        "line": 30,
        "fullcodeline": "buffer_copy_buffer(srv->tmp_buf, ds->value);"
    },
    {
        "line": 31,
        "fullcodeline": "buffer_append_string(srv->tmp_buf, uri_ptr + alias_len);"
    },
    {
        "line": 25,
        "fullcodeline": "strncasecmp(uri_ptr, ds->key->ptr, alias_len) :"
    },
    {
        "line": 26,
        "fullcodeline": "strncmp(uri_ptr, ds->key->ptr, alias_len))) {"
    }
]