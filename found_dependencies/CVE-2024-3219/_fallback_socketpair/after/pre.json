[
    {
        "line": 16,
        "fullcodeline": "lsock = socket(family, type, proto)"
    },
    {
        "line": 2,
        "fullcodeline": "if family == AF_INET:"
    },
    {
        "line": 9,
        "fullcodeline": "if type != SOCK_STREAM:"
    },
    {
        "line": 11,
        "fullcodeline": "if proto != 0:"
    },
    {
        "line": 53,
        "fullcodeline": "return (ssock, csock)"
    },
    {
        "line": 3,
        "fullcodeline": "host = _LOCALHOST"
    },
    {
        "line": 10,
        "fullcodeline": "raise ValueError(\"Only SOCK_STREAM socket type is supported\")"
    },
    {
        "line": 12,
        "fullcodeline": "raise ValueError(\"Only protocol zero is supported\")"
    },
    {
        "line": 18,
        "fullcodeline": "lsock.bind((host, 0))"
    },
    {
        "line": 19,
        "fullcodeline": "lsock.listen()"
    },
    {
        "line": 22,
        "fullcodeline": "csock = socket(family, type, proto)"
    },
    {
        "line": 4,
        "fullcodeline": "elif family == AF_INET6:"
    },
    {
        "line": 21,
        "fullcodeline": "addr, port = lsock.getsockname()[:2]"
    },
    {
        "line": 35,
        "fullcodeline": "lsock.close()"
    },
    {
        "line": 42,
        "fullcodeline": "ssock.getsockname() != csock.getpeername()"
    },
    {
        "line": 5,
        "fullcodeline": "host = _LOCALHOST_V6"
    },
    {
        "line": 7,
        "fullcodeline": "raise ValueError(\"Only AF_INET and AF_INET6 socket address families \""
    },
    {
        "line": 24,
        "fullcodeline": "csock.setblocking(False)"
    },
    {
        "line": 29,
        "fullcodeline": "csock.setblocking(True)"
    },
    {
        "line": 43,
        "fullcodeline": "or csock.getsockname() != ssock.getpeername()"
    },
    {
        "line": 45,
        "fullcodeline": "raise ConnectionError(\"Unexpected peer connection\")"
    },
    {
        "line": 49,
        "fullcodeline": "ssock.close()"
    },
    {
        "line": 50,
        "fullcodeline": "csock.close()"
    },
    {
        "line": 51,
        "fullcodeline": "raise"
    },
    {
        "line": 30,
        "fullcodeline": "ssock, _ = lsock.accept()"
    },
    {
        "line": 26,
        "fullcodeline": "csock.connect((addr, port))"
    },
    {
        "line": 32,
        "fullcodeline": "csock.close()"
    },
    {
        "line": 33,
        "fullcodeline": "raise"
    },
    {
        "line": 28,
        "fullcodeline": "pass"
    }
]