[
    {
        "line": 4,
        "fullcodeline": "struct adis *adis = iio_device_get_drvdata(indio_dev);"
    },
    {
        "line": 10,
        "fullcodeline": "kfree(adis->xfer);"
    },
    {
        "line": 11,
        "fullcodeline": "kfree(adis->buffer);"
    },
    {
        "line": 16,
        "fullcodeline": "scan_count = indio_dev->scan_bytes / 2;"
    },
    {
        "line": 18,
        "fullcodeline": "adis->xfer = kcalloc(scan_count + 1, sizeof(*adis->xfer), GFP_KERNEL);"
    },
    {
        "line": 22,
        "fullcodeline": "adis->buffer = kcalloc(indio_dev->scan_bytes, 2, GFP_KERNEL);"
    },
    {
        "line": 29,
        "fullcodeline": "rx = adis->buffer;"
    },
    {
        "line": 30,
        "fullcodeline": "tx = rx + scan_count;"
    },
    {
        "line": 32,
        "fullcodeline": "spi_message_init(&adis->msg);"
    },
    {
        "line": 47,
        "fullcodeline": "chan = indio_dev->channels;"
    },
    {
        "line": 13,
        "fullcodeline": "if (adis->burst && adis->burst->en)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!adis->xfer)"
    },
    {
        "line": 23,
        "fullcodeline": "if (!adis->buffer) {"
    },
    {
        "line": 34,
        "fullcodeline": "for (j = 0; j <= scan_count; j++) {"
    },
    {
        "line": 48,
        "fullcodeline": "for (i = 0; i < indio_dev->num_channels; i++, chan++) {"
    },
    {
        "line": 25,
        "fullcodeline": "adis->xfer = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "return adis_update_scan_mode_burst(indio_dev, scan_mask);"
    },
    {
        "line": 20,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 26,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 36,
        "fullcodeline": "if (j != scan_count)"
    },
    {
        "line": 40,
        "fullcodeline": "if (j < scan_count)"
    },
    {
        "line": 42,
        "fullcodeline": "if (j >= 1)"
    },
    {
        "line": 53,
        "fullcodeline": "*tx++ = cpu_to_be16(chan->address << 8);"
    },
    {
        "line": 43,
        "fullcodeline": "adis->xfer[j].rx_buf = &rx[j - 1];"
    },
    {
        "line": 49,
        "fullcodeline": "if (!test_bit(chan->scan_index, scan_mask))"
    },
    {
        "line": 52,
        "fullcodeline": "*tx++ = cpu_to_be16((chan->address + 2) << 8);"
    }
]