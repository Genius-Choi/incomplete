[
    {
        "line": 5,
        "fullcodeline": "void *value = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t size = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "error = reiserfs_xattr_set_handle(th, inode, name, value, size, 0);"
    },
    {
        "line": 41,
        "fullcodeline": "if (error == -ENODATA) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (!error)"
    },
    {
        "line": 11,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_ACCESS;"
    },
    {
        "line": 19,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_DEFAULT;"
    },
    {
        "line": 28,
        "fullcodeline": "value = reiserfs_posix_acl_to_disk(acl, &size);"
    },
    {
        "line": 42,
        "fullcodeline": "error = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 29,
        "fullcodeline": "if (IS_ERR(value))"
    },
    {
        "line": 43,
        "fullcodeline": "if (type == ACL_TYPE_ACCESS) {"
    },
    {
        "line": 13,
        "fullcodeline": "error = posix_acl_update_mode(inode, &inode->i_mode, &acl);"
    },
    {
        "line": 20,
        "fullcodeline": "if (!S_ISDIR(inode->i_mode))"
    },
    {
        "line": 44,
        "fullcodeline": "inode->i_ctime = CURRENT_TIME_SEC;"
    },
    {
        "line": 45,
        "fullcodeline": "mark_inode_dirty(inode);"
    },
    {
        "line": 21,
        "fullcodeline": "return acl ? -EACCES : 0;"
    },
    {
        "line": 30,
        "fullcodeline": "return (int)PTR_ERR(value);"
    }
]