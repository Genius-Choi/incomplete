[
    {
        "line": 5,
        "fullcodeline": "void *value = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t size = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "error = reiserfs_xattr_set_handle(th, inode, name, value, size, 0);"
    },
    {
        "line": 53,
        "fullcodeline": "kfree(value);"
    },
    {
        "line": 45,
        "fullcodeline": "if (error == -ENODATA) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (!error)"
    },
    {
        "line": 11,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_ACCESS;"
    },
    {
        "line": 23,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_DEFAULT;"
    },
    {
        "line": 32,
        "fullcodeline": "value = reiserfs_posix_acl_to_disk(acl, &size);"
    },
    {
        "line": 46,
        "fullcodeline": "error = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "set_cached_acl(inode, type, acl);"
    },
    {
        "line": 24,
        "fullcodeline": "if (!S_ISDIR(inode->i_mode))"
    },
    {
        "line": 28,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 33,
        "fullcodeline": "if (IS_ERR(value))"
    },
    {
        "line": 47,
        "fullcodeline": "if (type == ACL_TYPE_ACCESS) {"
    },
    {
        "line": 13,
        "fullcodeline": "error = posix_acl_equiv_mode(acl, &inode->i_mode);"
    },
    {
        "line": 48,
        "fullcodeline": "inode->i_ctime = CURRENT_TIME_SEC;"
    },
    {
        "line": 49,
        "fullcodeline": "mark_inode_dirty(inode);"
    },
    {
        "line": 14,
        "fullcodeline": "if (error < 0)"
    },
    {
        "line": 25,
        "fullcodeline": "return acl ? -EACCES : 0;"
    },
    {
        "line": 34,
        "fullcodeline": "return (int)PTR_ERR(value);"
    },
    {
        "line": 17,
        "fullcodeline": "if (error == 0)"
    },
    {
        "line": 18,
        "fullcodeline": "acl = NULL;"
    }
]