[
    {
        "line": 4,
        "fullcodeline": "int ret, size = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "char *value = NULL;"
    },
    {
        "line": 42,
        "fullcodeline": "ret = __btrfs_setxattr(trans, inode, name, value, size, 0);"
    },
    {
        "line": 44,
        "fullcodeline": "kfree(value);"
    },
    {
        "line": 46,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 10,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_ACCESS;"
    },
    {
        "line": 18,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_DEFAULT;"
    },
    {
        "line": 30,
        "fullcodeline": "size = posix_acl_xattr_size(acl->a_count);"
    },
    {
        "line": 31,
        "fullcodeline": "value = kmalloc(size, GFP_KERNEL);"
    },
    {
        "line": 37,
        "fullcodeline": "ret = posix_acl_to_xattr(&init_user_ns, acl, value, size);"
    },
    {
        "line": 47,
        "fullcodeline": "set_cached_acl(inode, type, acl);"
    },
    {
        "line": 21,
        "fullcodeline": "if (!S_ISDIR(inode->i_mode))"
    },
    {
        "line": 26,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 32,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 12,
        "fullcodeline": "ret = posix_acl_equiv_mode(acl, &inode->i_mode);"
    },
    {
        "line": 33,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 13,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 15,
        "fullcodeline": "if (ret == 0)"
    },
    {
        "line": 22,
        "fullcodeline": "return acl ? -EINVAL : 0;"
    },
    {
        "line": 16,
        "fullcodeline": "acl = NULL;"
    }
]