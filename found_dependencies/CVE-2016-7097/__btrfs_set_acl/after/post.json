[
    {
        "line": 4,
        "fullcodeline": "int ret, size = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "char *value = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "ret = __btrfs_setxattr(trans, inode, name, value, size, 0);"
    },
    {
        "line": 42,
        "fullcodeline": "kfree(value);"
    },
    {
        "line": 44,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 10,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_ACCESS;"
    },
    {
        "line": 16,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_DEFAULT;"
    },
    {
        "line": 28,
        "fullcodeline": "size = posix_acl_xattr_size(acl->a_count);"
    },
    {
        "line": 29,
        "fullcodeline": "value = kmalloc(size, GFP_KERNEL);"
    },
    {
        "line": 35,
        "fullcodeline": "ret = posix_acl_to_xattr(&init_user_ns, acl, value, size);"
    },
    {
        "line": 45,
        "fullcodeline": "set_cached_acl(inode, type, acl);"
    },
    {
        "line": 19,
        "fullcodeline": "if (!S_ISDIR(inode->i_mode))"
    },
    {
        "line": 24,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 30,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 12,
        "fullcodeline": "ret = posix_acl_update_mode(inode, &inode->i_mode, &acl);"
    },
    {
        "line": 31,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 20,
        "fullcodeline": "return acl ? -EINVAL : 0;"
    }
]