[
    {
        "line": 5,
        "fullcodeline": "void *value = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t size = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "error = ext4_xattr_set_handle(handle, inode, name_index, \"\","
    },
    {
        "line": 39,
        "fullcodeline": "kfree(value);"
    },
    {
        "line": 40,
        "fullcodeline": "if (!error)"
    },
    {
        "line": 11,
        "fullcodeline": "name_index = EXT4_XATTR_INDEX_POSIX_ACL_ACCESS;"
    },
    {
        "line": 22,
        "fullcodeline": "name_index = EXT4_XATTR_INDEX_POSIX_ACL_DEFAULT;"
    },
    {
        "line": 31,
        "fullcodeline": "value = ext4_acl_to_disk(acl, &size);"
    },
    {
        "line": 41,
        "fullcodeline": "set_cached_acl(inode, type, acl);"
    },
    {
        "line": 23,
        "fullcodeline": "if (!S_ISDIR(inode->i_mode))"
    },
    {
        "line": 28,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 32,
        "fullcodeline": "if (IS_ERR(value))"
    },
    {
        "line": 13,
        "fullcodeline": "error = posix_acl_update_mode(inode, &inode->i_mode, &acl);"
    },
    {
        "line": 16,
        "fullcodeline": "inode->i_ctime = ext4_current_time(inode);"
    },
    {
        "line": 17,
        "fullcodeline": "ext4_mark_inode_dirty(handle, inode);"
    },
    {
        "line": 24,
        "fullcodeline": "return acl ? -EACCES : 0;"
    },
    {
        "line": 33,
        "fullcodeline": "return (int)PTR_ERR(value);"
    }
]