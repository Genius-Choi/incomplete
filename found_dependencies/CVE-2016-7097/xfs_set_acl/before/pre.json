[
    {
        "line": 3,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "error = -E2BIG;"
    },
    {
        "line": 5,
        "fullcodeline": "if (!acl)"
    },
    {
        "line": 9,
        "fullcodeline": "if (acl->a_count > XFS_ACL_MAX_ENTRIES(XFS_M(inode->i_sb)))"
    },
    {
        "line": 12,
        "fullcodeline": "if (type == ACL_TYPE_ACCESS) {"
    },
    {
        "line": 29,
        "fullcodeline": "return __xfs_set_acl(inode, type, acl);"
    },
    {
        "line": 13,
        "fullcodeline": "umode_t mode = inode->i_mode;"
    },
    {
        "line": 14,
        "fullcodeline": "error = posix_acl_equiv_mode(acl, &mode);"
    },
    {
        "line": 23,
        "fullcodeline": "error = xfs_set_mode(inode, mode);"
    },
    {
        "line": 16,
        "fullcodeline": "if (error <= 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "acl = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "if (error < 0)"
    }
]