[
    {
        "line": 6,
        "fullcodeline": "int size = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "char *value = NULL;"
    },
    {
        "line": 38,
        "fullcodeline": "rc = __jfs_setxattr(tid, inode, ea_name, value, size, 0);"
    },
    {
        "line": 42,
        "fullcodeline": "if (!rc)"
    },
    {
        "line": 11,
        "fullcodeline": "ea_name = XATTR_NAME_POSIX_ACL_ACCESS;"
    },
    {
        "line": 23,
        "fullcodeline": "ea_name = XATTR_NAME_POSIX_ACL_DEFAULT;"
    },
    {
        "line": 30,
        "fullcodeline": "size = posix_acl_xattr_size(acl->a_count);"
    },
    {
        "line": 31,
        "fullcodeline": "value = kmalloc(size, GFP_KERNEL);"
    },
    {
        "line": 34,
        "fullcodeline": "rc = posix_acl_to_xattr(&init_user_ns, acl, value, size);"
    },
    {
        "line": 26,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 32,
        "fullcodeline": "if (!value)"
    },
    {
        "line": 35,
        "fullcodeline": "if (rc < 0)"
    },
    {
        "line": 13,
        "fullcodeline": "rc = posix_acl_equiv_mode(acl, &inode->i_mode);"
    },
    {
        "line": 16,
        "fullcodeline": "inode->i_ctime = CURRENT_TIME;"
    },
    {
        "line": 17,
        "fullcodeline": "mark_inode_dirty(inode);"
    },
    {
        "line": 14,
        "fullcodeline": "if (rc < 0)"
    },
    {
        "line": 33,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 19,
        "fullcodeline": "acl = NULL;"
    }
]