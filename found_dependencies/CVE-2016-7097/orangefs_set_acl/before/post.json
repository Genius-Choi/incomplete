[
    {
        "line": 3,
        "fullcodeline": "struct orangefs_inode_s *orangefs_inode = ORANGEFS_I(inode);"
    },
    {
        "line": 4,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "void *value = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t size = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "const char *name = NULL;"
    },
    {
        "line": 42,
        "fullcodeline": "gossip_debug(GOSSIP_ACL_DEBUG,"
    },
    {
        "line": 59,
        "fullcodeline": "gossip_debug(GOSSIP_ACL_DEBUG,"
    },
    {
        "line": 68,
        "fullcodeline": "error = orangefs_inode_setxattr(inode, name, value, size, 0);"
    },
    {
        "line": 71,
        "fullcodeline": "kfree(value);"
    },
    {
        "line": 44,
        "fullcodeline": "__func__, get_khandle_from_ino(inode),"
    },
    {
        "line": 72,
        "fullcodeline": "if (!error)"
    },
    {
        "line": 11,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_ACCESS;"
    },
    {
        "line": 35,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_DEFAULT;"
    },
    {
        "line": 38,
        "fullcodeline": "gossip_err(\"%s: invalid type %d!\\n\", __func__, type);"
    },
    {
        "line": 49,
        "fullcodeline": "size = posix_acl_xattr_size(acl->a_count);"
    },
    {
        "line": 50,
        "fullcodeline": "value = kmalloc(size, GFP_KERNEL);"
    },
    {
        "line": 54,
        "fullcodeline": "error = posix_acl_to_xattr(&init_user_ns, acl, value, size);"
    },
    {
        "line": 73,
        "fullcodeline": "set_cached_acl(inode, type, acl);"
    },
    {
        "line": 39,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 51,
        "fullcodeline": "if (!value)"
    },
    {
        "line": 55,
        "fullcodeline": "if (error < 0)"
    },
    {
        "line": 13,
        "fullcodeline": "umode_t mode = inode->i_mode;"
    },
    {
        "line": 18,
        "fullcodeline": "error = posix_acl_equiv_mode(acl, &mode);"
    },
    {
        "line": 28,
        "fullcodeline": "inode->i_mode = mode;"
    },
    {
        "line": 29,
        "fullcodeline": "mark_inode_dirty_sync(inode);"
    },
    {
        "line": 19,
        "fullcodeline": "if (error < 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (inode->i_mode != mode)"
    },
    {
        "line": 30,
        "fullcodeline": "if (error == 0)"
    },
    {
        "line": 52,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 20,
        "fullcodeline": "gossip_err(\"%s: posix_acl_equiv_mode err: %d\\n\","
    },
    {
        "line": 27,
        "fullcodeline": "SetModeFlag(orangefs_inode);"
    },
    {
        "line": 31,
        "fullcodeline": "acl = NULL;"
    }
]