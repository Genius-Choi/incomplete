[
    {
        "line": 3,
        "fullcodeline": "struct orangefs_inode_s *orangefs_inode = ORANGEFS_I(inode);"
    },
    {
        "line": 4,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "void *value = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t size = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "const char *name = NULL;"
    },
    {
        "line": 37,
        "fullcodeline": "gossip_debug(GOSSIP_ACL_DEBUG,"
    },
    {
        "line": 54,
        "fullcodeline": "gossip_debug(GOSSIP_ACL_DEBUG,"
    },
    {
        "line": 63,
        "fullcodeline": "error = orangefs_inode_setxattr(inode, name, value, size, 0);"
    },
    {
        "line": 66,
        "fullcodeline": "kfree(value);"
    },
    {
        "line": 39,
        "fullcodeline": "__func__, get_khandle_from_ino(inode),"
    },
    {
        "line": 67,
        "fullcodeline": "if (!error)"
    },
    {
        "line": 11,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_ACCESS;"
    },
    {
        "line": 30,
        "fullcodeline": "name = XATTR_NAME_POSIX_ACL_DEFAULT;"
    },
    {
        "line": 33,
        "fullcodeline": "gossip_err(\"%s: invalid type %d!\\n\", __func__, type);"
    },
    {
        "line": 44,
        "fullcodeline": "size = posix_acl_xattr_size(acl->a_count);"
    },
    {
        "line": 45,
        "fullcodeline": "value = kmalloc(size, GFP_KERNEL);"
    },
    {
        "line": 49,
        "fullcodeline": "error = posix_acl_to_xattr(&init_user_ns, acl, value, size);"
    },
    {
        "line": 68,
        "fullcodeline": "set_cached_acl(inode, type, acl);"
    },
    {
        "line": 34,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 46,
        "fullcodeline": "if (!value)"
    },
    {
        "line": 50,
        "fullcodeline": "if (error < 0)"
    },
    {
        "line": 15,
        "fullcodeline": "error = posix_acl_update_mode(inode, &mode, &acl);"
    },
    {
        "line": 25,
        "fullcodeline": "inode->i_mode = mode;"
    },
    {
        "line": 26,
        "fullcodeline": "mark_inode_dirty_sync(inode);"
    },
    {
        "line": 23,
        "fullcodeline": "if (inode->i_mode != mode)"
    },
    {
        "line": 47,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 17,
        "fullcodeline": "gossip_err(\"%s: posix_acl_update_mode err: %d\\n\","
    },
    {
        "line": 24,
        "fullcodeline": "SetModeFlag(orangefs_inode);"
    }
]