[
    {
        "line": 3,
        "fullcodeline": "struct client\t\t*clt = arg;"
    },
    {
        "line": 4,
        "fullcodeline": "struct evbuffer\t\t*src = EVBUFFER_INPUT(bev);"
    },
    {
        "line": 7,
        "fullcodeline": "struct range_data\t*r = &clt->clt_ranges;"
    },
    {
        "line": 10,
        "fullcodeline": "getmonotime(&clt->clt_tv_last);"
    },
    {
        "line": 89,
        "fullcodeline": "(*bev->errorcb)(bev, EVBUFFER_READ, bev->cbarg);"
    },
    {
        "line": 92,
        "fullcodeline": "server_close(clt, strerror(errno));"
    },
    {
        "line": 12,
        "fullcodeline": "if (r->range_toread > 0) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (EVBUFFER_LENGTH(EVBUFFER_OUTPUT(clt->clt_bev)) > (size_t)"
    },
    {
        "line": 13,
        "fullcodeline": "size = EVBUFFER_LENGTH(src);"
    },
    {
        "line": 31,
        "fullcodeline": "DPRINTF(\"%s: done, size %lu, to read %lld\", __func__,"
    },
    {
        "line": 62,
        "fullcodeline": "r->range_toread = range->end - range->start + 1;"
    },
    {
        "line": 68,
        "fullcodeline": "evbuffer_drain(src, EVBUFFER_LENGTH(src));"
    },
    {
        "line": 71,
        "fullcodeline": "r->range_index++;"
    },
    {
        "line": 83,
        "fullcodeline": "bufferevent_disable(clt->clt_srvbev, EV_READ);"
    },
    {
        "line": 84,
        "fullcodeline": "clt->clt_srvbev_throttled = 1;"
    },
    {
        "line": 14,
        "fullcodeline": "if (!size)"
    },
    {
        "line": 18,
        "fullcodeline": "if ((off_t)size > r->range_toread) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (r->range_toread < 1)"
    },
    {
        "line": 37,
        "fullcodeline": "if (r->range_index >= r->range_count) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (r->range_count > 1) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (lseek(clt->clt_fd, range->start, SEEK_SET) == -1)"
    },
    {
        "line": 19,
        "fullcodeline": "size = r->range_toread;"
    },
    {
        "line": 23,
        "fullcodeline": "r->range_toread = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "r->range_toread = TOREAD_HTTP_RANGE;"
    },
    {
        "line": 45,
        "fullcodeline": "r->range_toread = TOREAD_HTTP_NONE;"
    },
    {
        "line": 52,
        "fullcodeline": "media = r->range_media;"
    },
    {
        "line": 20,
        "fullcodeline": "if (server_bufferevent_write_chunk(clt, src, size)"
    },
    {
        "line": 27,
        "fullcodeline": "r->range_toread -= size;"
    },
    {
        "line": 38,
        "fullcodeline": "if (r->range_count > 1) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (server_bufferevent_printf(clt,"
    },
    {
        "line": 21,
        "fullcodeline": "== -1)"
    },
    {
        "line": 25,
        "fullcodeline": "if (server_bufferevent_write_buffer(clt, src) == -1)"
    },
    {
        "line": 59,
        "fullcodeline": "range->start, range->end, r->range_total) == -1)"
    },
    {
        "line": 40,
        "fullcodeline": "if (server_bufferevent_printf(clt,"
    },
    {
        "line": 42,
        "fullcodeline": "clt->clt_boundary) == -1)"
    }
]