[
    {
        "line": 5,
        "fullcodeline": "if (looks_like_command_line_option(url))"
    },
    {
        "line": 8,
        "fullcodeline": "if (submodule_url_is_relative(url)) {"
    },
    {
        "line": 17,
        "fullcodeline": "decoded = url_decode(url);"
    },
    {
        "line": 18,
        "fullcodeline": "has_nl = !!strchr(decoded, '\\n');"
    },
    {
        "line": 20,
        "fullcodeline": "free(decoded);"
    },
    {
        "line": 6,
        "fullcodeline": "return -1;"
    },
    {
        "line": 30,
        "fullcodeline": "if (count_leading_dotdots(url, &next) > 0 &&"
    },
    {
        "line": 31,
        "fullcodeline": "*next == ':')"
    },
    {
        "line": 35,
        "fullcodeline": "else if (url_to_curl_url(url, &curl_url)) {"
    },
    {
        "line": 22,
        "fullcodeline": "return -1;"
    },
    {
        "line": 32,
        "fullcodeline": "return -1;"
    },
    {
        "line": 36,
        "fullcodeline": "struct credential c = CREDENTIAL_INIT;"
    },
    {
        "line": 37,
        "fullcodeline": "int ret = credential_from_url_gently(&c, curl_url, 1);"
    },
    {
        "line": 38,
        "fullcodeline": "credential_clear(&c);"
    }
]