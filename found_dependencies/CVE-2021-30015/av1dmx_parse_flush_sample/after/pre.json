[
    {
        "line": 10,
        "fullcodeline": "gf_bs_get_content_no_truncate(ctx->state.bs, &ctx->state.frame_obus, &pck_size, &ctx->state.frame_obus_alloc);"
    },
    {
        "line": 17,
        "fullcodeline": "pck = gf_filter_pck_new_alloc(ctx->opid, pck_size, &output);"
    },
    {
        "line": 20,
        "fullcodeline": "gf_filter_pck_set_cts(pck, ctx->cts);"
    },
    {
        "line": 21,
        "fullcodeline": "gf_filter_pck_set_sap(pck, ctx->state.frame_state.key_frame ? GF_FILTER_SAP_1 : 0);"
    },
    {
        "line": 40,
        "fullcodeline": "av1dmx_update_cts(ctx);"
    },
    {
        "line": 41,
        "fullcodeline": "gf_av1_reset_state(&ctx->state, GF_FALSE);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!ctx->opid)"
    },
    {
        "line": 12,
        "fullcodeline": "if (!pck_size) {"
    },
    {
        "line": 13,
        "fullcodeline": "GF_LOG(GF_LOG_DEBUG, GF_LOG_CONTAINER, (\"[AV1Dmx] no frame OBU, skipping OBU\\n\"));"
    },
    {
        "line": 18,
        "fullcodeline": "if (ctx->src_pck) gf_filter_pck_merge_properties(ctx->src_pck, pck);"
    },
    {
        "line": 28,
        "fullcodeline": "flags = ( ctx->state.frame_state.key_frame) ? 2 : 1;"
    },
    {
        "line": 29,
        "fullcodeline": "flags <<= 2;"
    },
    {
        "line": 31,
        "fullcodeline": "flags |= ctx->state.frame_state.refresh_frame_flags ? 1 : 2;"
    },
    {
        "line": 32,
        "fullcodeline": "flags <<= 2;"
    },
    {
        "line": 35,
        "fullcodeline": "gf_filter_pck_set_dependency_flags(pck, flags);"
    }
]