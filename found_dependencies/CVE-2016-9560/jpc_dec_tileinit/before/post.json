[
    {
        "line": 41,
        "fullcodeline": "jpc_tsfb_band_t bnds[64];"
    },
    {
        "line": 46,
        "fullcodeline": "cp = tile->cp;"
    },
    {
        "line": 47,
        "fullcodeline": "tile->realmode = 0;"
    },
    {
        "line": 281,
        "fullcodeline": "jpc_pi_init(tile->pi);"
    },
    {
        "line": 48,
        "fullcodeline": "if (cp->mctid == JPC_MCT_ICT) {"
    },
    {
        "line": 52,
        "fullcodeline": "for (compno = 0, tcomp = tile->tcomps, cmpt = dec->cmpts; compno <"
    },
    {
        "line": 53,
        "fullcodeline": "dec->numcomps; ++compno, ++tcomp, ++cmpt) {"
    },
    {
        "line": 271,
        "fullcodeline": "if (!(tile->pi = jpc_dec_pi_create(dec, tile))) {"
    },
    {
        "line": 275,
        "fullcodeline": "for (pchgno = 0; pchgno < jpc_pchglist_numpchgs(tile->cp->pchglist);"
    },
    {
        "line": 276,
        "fullcodeline": "++pchgno) {"
    },
    {
        "line": 49,
        "fullcodeline": "tile->realmode = 1;"
    },
    {
        "line": 58,
        "fullcodeline": "tcomp->numrlvls = ccp->numrlvls;"
    },
    {
        "line": 277,
        "fullcodeline": "pchg = jpc_pchg_copy(jpc_pchglist_get(tile->cp->pchglist, pchgno));"
    },
    {
        "line": 278,
        "fullcodeline": "assert(pchg);"
    },
    {
        "line": 279,
        "fullcodeline": "jpc_pi_addpchg(tile->pi, pchg);"
    },
    {
        "line": 55,
        "fullcodeline": "if (ccp->qmfbid == JPC_COX_INS) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (!(tcomp->rlvls = jas_alloc2(tcomp->numrlvls,"
    },
    {
        "line": 63,
        "fullcodeline": "if (!(tcomp->data = jas_seq2d_create(JPC_CEILDIV(tile->xstart,"
    },
    {
        "line": 69,
        "fullcodeline": "if (!(tcomp->tsfb = jpc_cod_gettsfb(ccp->qmfbid,"
    },
    {
        "line": 74,
        "fullcodeline": "jpc_tsfb_getbands(tcomp->tsfb, jas_seq2d_xstart(tcomp->data),"
    },
    {
        "line": 78,
        "fullcodeline": "for (rlvlno = 0, rlvl = tcomp->rlvls; rlvlno < tcomp->numrlvls;"
    },
    {
        "line": 79,
        "fullcodeline": "++rlvlno, ++rlvl) {"
    },
    {
        "line": 272,
        "fullcodeline": "return -1;"
    },
    {
        "line": 56,
        "fullcodeline": "tile->realmode = 1;"
    },
    {
        "line": 75,
        "fullcodeline": "jas_seq2d_ystart(tcomp->data), jas_seq2d_xend(tcomp->data),"
    },
    {
        "line": 76,
        "fullcodeline": "jas_seq2d_yend(tcomp->data), bnds);"
    },
    {
        "line": 80,
        "fullcodeline": "rlvl->bands = 0;"
    },
    {
        "line": 81,
        "fullcodeline": "rlvl->xstart = JPC_CEILDIVPOW2(tcomp->xstart,"
    },
    {
        "line": 83,
        "fullcodeline": "rlvl->ystart = JPC_CEILDIVPOW2(tcomp->ystart,"
    },
    {
        "line": 85,
        "fullcodeline": "rlvl->xend = JPC_CEILDIVPOW2(tcomp->xend,"
    },
    {
        "line": 87,
        "fullcodeline": "rlvl->yend = JPC_CEILDIVPOW2(tcomp->yend,"
    },
    {
        "line": 91,
        "fullcodeline": "tlprcxstart = JPC_FLOORDIVPOW2(rlvl->xstart,"
    },
    {
        "line": 93,
        "fullcodeline": "tlprcystart = JPC_FLOORDIVPOW2(rlvl->ystart,"
    },
    {
        "line": 95,
        "fullcodeline": "brprcxend = JPC_CEILDIVPOW2(rlvl->xend,"
    },
    {
        "line": 97,
        "fullcodeline": "brprcyend = JPC_CEILDIVPOW2(rlvl->yend,"
    },
    {
        "line": 99,
        "fullcodeline": "rlvl->numhprcs = (brprcxend - tlprcxstart) >>"
    },
    {
        "line": 101,
        "fullcodeline": "rlvl->numvprcs = (brprcyend - tlprcystart) >>"
    },
    {
        "line": 103,
        "fullcodeline": "rlvl->numprcs = rlvl->numhprcs * rlvl->numvprcs;"
    },
    {
        "line": 127,
        "fullcodeline": "rlvl->cblkwidthexpn = JAS_MIN(ccp->cblkwidthexpn,"
    },
    {
        "line": 129,
        "fullcodeline": "rlvl->cblkheightexpn = JAS_MIN(ccp->cblkheightexpn,"
    },
    {
        "line": 132,
        "fullcodeline": "rlvl->numbands = (!rlvlno) ? 1 : 3;"
    },
    {
        "line": 61,
        "fullcodeline": "return -1;"
    },
    {
        "line": 67,
        "fullcodeline": "return -1;"
    },
    {
        "line": 71,
        "fullcodeline": "return -1;"
    },
    {
        "line": 105,
        "fullcodeline": "if (rlvl->xstart >= rlvl->xend || rlvl->ystart >= rlvl->yend) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (!rlvlno) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (!(rlvl->bands = jas_alloc2(rlvl->numbands,"
    },
    {
        "line": 138,
        "fullcodeline": "bandno < rlvl->numbands; ++bandno, ++band) {"
    },
    {
        "line": 64,
        "fullcodeline": "cmpt->hstep), JPC_CEILDIV(tile->ystart, cmpt->vstep),"
    },
    {
        "line": 65,
        "fullcodeline": "JPC_CEILDIV(tile->xend, cmpt->hstep), JPC_CEILDIV(tile->yend,"
    },
    {
        "line": 70,
        "fullcodeline": "tcomp->numrlvls - 1))) {"
    },
    {
        "line": 82,
        "fullcodeline": "tcomp->numrlvls - 1 - rlvlno);"
    },
    {
        "line": 84,
        "fullcodeline": "tcomp->numrlvls - 1 - rlvlno);"
    },
    {
        "line": 86,
        "fullcodeline": "tcomp->numrlvls - 1 - rlvlno);"
    },
    {
        "line": 88,
        "fullcodeline": "tcomp->numrlvls - 1 - rlvlno);"
    },
    {
        "line": 106,
        "fullcodeline": "rlvl->bands = 0;"
    },
    {
        "line": 107,
        "fullcodeline": "rlvl->numprcs = 0;"
    },
    {
        "line": 108,
        "fullcodeline": "rlvl->numhprcs = 0;"
    },
    {
        "line": 109,
        "fullcodeline": "rlvl->numvprcs = 0;"
    },
    {
        "line": 113,
        "fullcodeline": "tlcbgxstart = tlprcxstart;"
    },
    {
        "line": 114,
        "fullcodeline": "tlcbgystart = tlprcystart;"
    },
    {
        "line": 115,
        "fullcodeline": "brcbgxend = brprcxend;"
    },
    {
        "line": 116,
        "fullcodeline": "brcbgyend = brprcyend;"
    },
    {
        "line": 117,
        "fullcodeline": "rlvl->cbgwidthexpn = rlvl->prcwidthexpn;"
    },
    {
        "line": 118,
        "fullcodeline": "rlvl->cbgheightexpn = rlvl->prcheightexpn;"
    },
    {
        "line": 137,
        "fullcodeline": "for (bandno = 0, band = rlvl->bands;"
    },
    {
        "line": 139,
        "fullcodeline": "bndno = (!rlvlno) ? 0 : (3 * (rlvlno - 1) +"
    },
    {
        "line": 143,
        "fullcodeline": "band->orient = bnd->orient;"
    },
    {
        "line": 145,
        "fullcodeline": "band->analgain = JPC_NOMINALGAIN(ccp->qmfbid,"
    },
    {
        "line": 147,
        "fullcodeline": "band->absstepsize = jpc_calcabsstepsize(band->stepsize,"
    },
    {
        "line": 149,
        "fullcodeline": "band->numbps = ccp->numguardbits +"
    },
    {
        "line": 151,
        "fullcodeline": "band->roishift = (ccp->roishift + band->numbps >= JPC_PREC) ?"
    },
    {
        "line": 153,
        "fullcodeline": "band->data = 0;"
    },
    {
        "line": 154,
        "fullcodeline": "band->prcs = 0;"
    },
    {
        "line": 161,
        "fullcodeline": "jas_seq2d_bindsub(band->data, tcomp->data, bnd->locxstart,"
    },
    {
        "line": 163,
        "fullcodeline": "jas_seq2d_setshift(band->data, bnd->xstart, bnd->ystart);"
    },
    {
        "line": 165,
        "fullcodeline": "assert(rlvl->numprcs);"
    },
    {
        "line": 173,
        "fullcodeline": "cbgxstart = tlcbgxstart;"
    },
    {
        "line": 174,
        "fullcodeline": "cbgystart = tlcbgystart;"
    },
    {
        "line": 120,
        "fullcodeline": "tlcbgxstart = JPC_CEILDIVPOW2(tlprcxstart, 1);"
    },
    {
        "line": 121,
        "fullcodeline": "tlcbgystart = JPC_CEILDIVPOW2(tlprcystart, 1);"
    },
    {
        "line": 122,
        "fullcodeline": "brcbgxend = JPC_CEILDIVPOW2(brprcxend, 1);"
    },
    {
        "line": 123,
        "fullcodeline": "brcbgyend = JPC_CEILDIVPOW2(brprcyend, 1);"
    },
    {
        "line": 124,
        "fullcodeline": "rlvl->cbgwidthexpn = rlvl->prcwidthexpn - 1;"
    },
    {
        "line": 125,
        "fullcodeline": "rlvl->cbgheightexpn = rlvl->prcheightexpn - 1;"
    },
    {
        "line": 135,
        "fullcodeline": "return -1;"
    },
    {
        "line": 155,
        "fullcodeline": "if (bnd->xstart == bnd->xend || bnd->ystart == bnd->yend) {"
    },
    {
        "line": 158,
        "fullcodeline": "if (!(band->data = jas_seq2d_create(0, 0, 0, 0))) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (!(band->prcs = jas_alloc2(rlvl->numprcs,"
    },
    {
        "line": 176,
        "fullcodeline": "prccnt > 0; --prccnt, ++prc) {"
    },
    {
        "line": 146,
        "fullcodeline": "tcomp->numrlvls - 1, rlvlno, band->orient);"
    },
    {
        "line": 148,
        "fullcodeline": "cmpt->prec + band->analgain);"
    },
    {
        "line": 152,
        "fullcodeline": "(JPC_PREC - 1 - band->numbps) : ccp->roishift;"
    },
    {
        "line": 175,
        "fullcodeline": "for (prccnt = rlvl->numprcs, prc = band->prcs;"
    },
    {
        "line": 177,
        "fullcodeline": "cbgxend = cbgxstart + (1 << rlvl->cbgwidthexpn);"
    },
    {
        "line": 178,
        "fullcodeline": "cbgyend = cbgystart + (1 << rlvl->cbgheightexpn);"
    },
    {
        "line": 179,
        "fullcodeline": "prc->xstart = JAS_MAX(cbgxstart, JAS_CAST(uint_fast32_t,"
    },
    {
        "line": 181,
        "fullcodeline": "prc->ystart = JAS_MAX(cbgystart, JAS_CAST(uint_fast32_t,"
    },
    {
        "line": 183,
        "fullcodeline": "prc->xend = JAS_MIN(cbgxend, JAS_CAST(uint_fast32_t,"
    },
    {
        "line": 185,
        "fullcodeline": "prc->yend = JAS_MIN(cbgyend, JAS_CAST(uint_fast32_t,"
    },
    {
        "line": 259,
        "fullcodeline": "cbgxstart += 1 << rlvl->cbgwidthexpn;"
    },
    {
        "line": 150,
        "fullcodeline": "JPC_QCX_GETEXPN(band->stepsize) - 1;"
    },
    {
        "line": 159,
        "fullcodeline": "return -1;"
    },
    {
        "line": 169,
        "fullcodeline": "return -1;"
    },
    {
        "line": 187,
        "fullcodeline": "if (prc->xend > prc->xstart && prc->yend > prc->ystart) {"
    },
    {
        "line": 260,
        "fullcodeline": "if (cbgxstart >= brcbgxend) {"
    },
    {
        "line": 188,
        "fullcodeline": "tlcblkxstart = JPC_FLOORDIVPOW2(prc->xstart,"
    },
    {
        "line": 190,
        "fullcodeline": "tlcblkystart = JPC_FLOORDIVPOW2(prc->ystart,"
    },
    {
        "line": 192,
        "fullcodeline": "brcblkxend = JPC_CEILDIVPOW2(prc->xend,"
    },
    {
        "line": 194,
        "fullcodeline": "brcblkyend = JPC_CEILDIVPOW2(prc->yend,"
    },
    {
        "line": 196,
        "fullcodeline": "prc->numhcblks = (brcblkxend - tlcblkxstart) >>"
    },
    {
        "line": 198,
        "fullcodeline": "prc->numvcblks = (brcblkyend - tlcblkystart) >>"
    },
    {
        "line": 200,
        "fullcodeline": "prc->numcblks = prc->numhcblks * prc->numvcblks;"
    },
    {
        "line": 201,
        "fullcodeline": "assert(prc->numcblks > 0);"
    },
    {
        "line": 216,
        "fullcodeline": "cblkxstart = cbgxstart;"
    },
    {
        "line": 217,
        "fullcodeline": "cblkystart = cbgystart;"
    },
    {
        "line": 261,
        "fullcodeline": "cbgxstart = tlcbgxstart;"
    },
    {
        "line": 262,
        "fullcodeline": "cbgystart += 1 << rlvl->cbgheightexpn;"
    },
    {
        "line": 180,
        "fullcodeline": "jas_seq2d_xstart(band->data)));"
    },
    {
        "line": 182,
        "fullcodeline": "jas_seq2d_ystart(band->data)));"
    },
    {
        "line": 184,
        "fullcodeline": "jas_seq2d_xend(band->data)));"
    },
    {
        "line": 186,
        "fullcodeline": "jas_seq2d_yend(band->data)));"
    },
    {
        "line": 203,
        "fullcodeline": "if (!(prc->incltagtree = jpc_tagtree_create("
    },
    {
        "line": 207,
        "fullcodeline": "if (!(prc->numimsbstagtree = jpc_tagtree_create("
    },
    {
        "line": 211,
        "fullcodeline": "if (!(prc->cblks = jas_alloc2(prc->numcblks,"
    },
    {
        "line": 219,
        "fullcodeline": "cblkcnt > 0;) {"
    },
    {
        "line": 255,
        "fullcodeline": "prc->cblks = 0;"
    },
    {
        "line": 256,
        "fullcodeline": "prc->incltagtree = 0;"
    },
    {
        "line": 257,
        "fullcodeline": "prc->numimsbstagtree = 0;"
    },
    {
        "line": 218,
        "fullcodeline": "for (cblkcnt = prc->numcblks, cblk = prc->cblks;"
    },
    {
        "line": 220,
        "fullcodeline": "cblkxend = cblkxstart + (1 << rlvl->cblkwidthexpn);"
    },
    {
        "line": 221,
        "fullcodeline": "cblkyend = cblkystart + (1 << rlvl->cblkheightexpn);"
    },
    {
        "line": 222,
        "fullcodeline": "tmpxstart = JAS_MAX(cblkxstart, prc->xstart);"
    },
    {
        "line": 223,
        "fullcodeline": "tmpystart = JAS_MAX(cblkystart, prc->ystart);"
    },
    {
        "line": 224,
        "fullcodeline": "tmpxend = JAS_MIN(cblkxend, prc->xend);"
    },
    {
        "line": 225,
        "fullcodeline": "tmpyend = JAS_MIN(cblkyend, prc->yend);"
    },
    {
        "line": 247,
        "fullcodeline": "cblkxstart += 1 << rlvl->cblkwidthexpn;"
    },
    {
        "line": 205,
        "fullcodeline": "return -1;"
    },
    {
        "line": 209,
        "fullcodeline": "return -1;"
    },
    {
        "line": 213,
        "fullcodeline": "return -1;"
    },
    {
        "line": 226,
        "fullcodeline": "if (tmpxend > tmpxstart && tmpyend > tmpystart) {"
    },
    {
        "line": 248,
        "fullcodeline": "if (cblkxstart >= cbgxend) {"
    },
    {
        "line": 227,
        "fullcodeline": "cblk->firstpassno = -1;"
    },
    {
        "line": 228,
        "fullcodeline": "cblk->mqdec = 0;"
    },
    {
        "line": 229,
        "fullcodeline": "cblk->nulldec = 0;"
    },
    {
        "line": 230,
        "fullcodeline": "cblk->flags = 0;"
    },
    {
        "line": 231,
        "fullcodeline": "cblk->numpasses = 0;"
    },
    {
        "line": 232,
        "fullcodeline": "cblk->segs.head = 0;"
    },
    {
        "line": 233,
        "fullcodeline": "cblk->segs.tail = 0;"
    },
    {
        "line": 234,
        "fullcodeline": "cblk->curseg = 0;"
    },
    {
        "line": 235,
        "fullcodeline": "cblk->numimsbs = 0;"
    },
    {
        "line": 236,
        "fullcodeline": "cblk->numlenbits = 3;"
    },
    {
        "line": 237,
        "fullcodeline": "cblk->flags = 0;"
    },
    {
        "line": 242,
        "fullcodeline": "jas_seq2d_bindsub(cblk->data, band->data,"
    },
    {
        "line": 244,
        "fullcodeline": "++cblk;"
    },
    {
        "line": 245,
        "fullcodeline": "--cblkcnt;"
    },
    {
        "line": 249,
        "fullcodeline": "cblkxstart = cbgxstart;"
    },
    {
        "line": 250,
        "fullcodeline": "cblkystart += 1 << rlvl->cblkheightexpn;"
    },
    {
        "line": 238,
        "fullcodeline": "if (!(cblk->data = jas_seq2d_create(0, 0, 0,"
    },
    {
        "line": 240,
        "fullcodeline": "return -1;"
    }
]