[
    {
        "line": 5,
        "fullcodeline": "int\t\tsplit_ret = OK;"
    },
    {
        "line": 7,
        "fullcodeline": "int\t\topen_wins = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "setpcmark();"
    },
    {
        "line": 75,
        "fullcodeline": "++autocmd_no_enter;"
    },
    {
        "line": 76,
        "fullcodeline": "win_enter(lastwin, FALSE);"
    },
    {
        "line": 77,
        "fullcodeline": "++autocmd_no_leave;"
    },
    {
        "line": 169,
        "fullcodeline": "--autocmd_no_enter;"
    },
    {
        "line": 170,
        "fullcodeline": "win_enter(firstwin, FALSE);\t\t// back to first window"
    },
    {
        "line": 171,
        "fullcodeline": "--autocmd_no_leave;"
    },
    {
        "line": 14,
        "fullcodeline": "if (eap->addr_count == 0)\t// make as many windows as possible"
    },
    {
        "line": 18,
        "fullcodeline": "if (eap->cmdidx == CMD_unhide || eap->cmdidx == CMD_sunhide)"
    },
    {
        "line": 33,
        "fullcodeline": "if (had_tab > 0)"
    },
    {
        "line": 78,
        "fullcodeline": "for (buf = firstbuf; buf != NULL && open_wins < count; buf = buf->b_next)"
    },
    {
        "line": 176,
        "fullcodeline": "for (wp = lastwin; open_wins > count; )"
    },
    {
        "line": 15,
        "fullcodeline": "count = 9999;"
    },
    {
        "line": 19,
        "fullcodeline": "all = FALSE;"
    },
    {
        "line": 34,
        "fullcodeline": "goto_tabpage_tp(first_tabpage, TRUE, TRUE);"
    },
    {
        "line": 66,
        "fullcodeline": "goto_tabpage_tp(tpnext, TRUE, TRUE);"
    },
    {
        "line": 154,
        "fullcodeline": "ui_breakcheck();"
    },
    {
        "line": 178,
        "fullcodeline": "r = (buf_hide(wp->w_buffer) || !bufIsChanged(wp->w_buffer)"
    },
    {
        "line": 17,
        "fullcodeline": "count = eap->line2;\t// make as many windows as specified"
    },
    {
        "line": 21,
        "fullcodeline": "all = TRUE;"
    },
    {
        "line": 38,
        "fullcodeline": "for (wp = firstwin; wp != NULL; wp = wpnext)"
    },
    {
        "line": 64,
        "fullcodeline": "if (had_tab == 0 || tpnext == NULL)"
    },
    {
        "line": 81,
        "fullcodeline": "if ((!all && buf->b_ml.ml_mfp == NULL) || !buf->b_p_bl)"
    },
    {
        "line": 84,
        "fullcodeline": "if (had_tab != 0)"
    },
    {
        "line": 103,
        "fullcodeline": "if (wp == NULL && split_ret == OK)"
    },
    {
        "line": 166,
        "fullcodeline": "if (had_tab > 0 && tabpage_index(NULL) <= p_tpm)"
    },
    {
        "line": 180,
        "fullcodeline": "if (!win_valid(wp))"
    },
    {
        "line": 40,
        "fullcodeline": "wpnext = wp->w_next;"
    },
    {
        "line": 107,
        "fullcodeline": "set_bufref(&bufref, buf);"
    },
    {
        "line": 110,
        "fullcodeline": "p_ea_save = p_ea;"
    },
    {
        "line": 111,
        "fullcodeline": "p_ea = TRUE;\t\t// use space from all windows"
    },
    {
        "line": 112,
        "fullcodeline": "split_ret = win_split(0, WSP_ROOM | WSP_BELOW);"
    },
    {
        "line": 113,
        "fullcodeline": "++open_wins;"
    },
    {
        "line": 114,
        "fullcodeline": "p_ea = p_ea_save;"
    },
    {
        "line": 119,
        "fullcodeline": "swap_exists_action = SEA_DIALOG;"
    },
    {
        "line": 120,
        "fullcodeline": "set_curbuf(buf, DOBUF_GOTO);"
    },
    {
        "line": 157,
        "fullcodeline": "(void)vgetc();\t// only break the file loading, not the rest"
    },
    {
        "line": 167,
        "fullcodeline": "cmdmod.cmod_tab = 9999;"
    },
    {
        "line": 179,
        "fullcodeline": "|| autowrite(wp->w_buffer, FALSE) == OK);"
    },
    {
        "line": 183,
        "fullcodeline": "wp = lastwin;"
    },
    {
        "line": 41,
        "fullcodeline": "if ((wp->w_buffer->b_nwindows > 1"
    },
    {
        "line": 87,
        "fullcodeline": "if (buf->b_nwindows > 0)"
    },
    {
        "line": 115,
        "fullcodeline": "if (split_ret == FAIL)"
    },
    {
        "line": 121,
        "fullcodeline": "if (!bufref_valid(&bufref))"
    },
    {
        "line": 127,
        "fullcodeline": "if (swap_exists_action == SEA_QUIT)"
    },
    {
        "line": 49,
        "fullcodeline": "&& !win_unlisted(wp))"
    },
    {
        "line": 55,
        "fullcodeline": "wpnext = firstwin;"
    },
    {
        "line": 56,
        "fullcodeline": "tpnext = first_tabpage;"
    },
    {
        "line": 57,
        "fullcodeline": "open_wins = 0;"
    },
    {
        "line": 88,
        "fullcodeline": "wp = lastwin;\t    // buffer has a window, skip it"
    },
    {
        "line": 96,
        "fullcodeline": "if (wp->w_buffer == buf)"
    },
    {
        "line": 99,
        "fullcodeline": "if (wp != NULL)"
    },
    {
        "line": 124,
        "fullcodeline": "swap_exists_action = SEA_NONE;"
    },
    {
        "line": 138,
        "fullcodeline": "win_close(curwin, TRUE);"
    },
    {
        "line": 139,
        "fullcodeline": "--open_wins;"
    },
    {
        "line": 140,
        "fullcodeline": "swap_exists_action = SEA_NONE;"
    },
    {
        "line": 141,
        "fullcodeline": "swap_exists_did_quit = TRUE;"
    },
    {
        "line": 48,
        "fullcodeline": "&& !(wp->w_closing || wp->w_buffer->b_locked > 0)"
    },
    {
        "line": 51,
        "fullcodeline": "if (win_close(wp, FALSE) == FAIL)"
    },
    {
        "line": 60,
        "fullcodeline": "++open_wins;"
    },
    {
        "line": 90,
        "fullcodeline": "wp = NULL;"
    },
    {
        "line": 100,
        "fullcodeline": "win_move_after(wp, curwin);"
    },
    {
        "line": 151,
        "fullcodeline": "handle_swap_exists(NULL);"
    },
    {
        "line": 187,
        "fullcodeline": "win_close(wp, !buf_hide(wp->w_buffer));"
    },
    {
        "line": 188,
        "fullcodeline": "--open_wins;"
    },
    {
        "line": 189,
        "fullcodeline": "wp = lastwin;"
    },
    {
        "line": 47,
        "fullcodeline": "&& !ONE_WINDOW"
    },
    {
        "line": 193,
        "fullcodeline": "wp = wp->w_prev;"
    },
    {
        "line": 46,
        "fullcodeline": "|| (had_tab > 0 && wp != firstwin))"
    },
    {
        "line": 194,
        "fullcodeline": "if (wp == NULL)"
    },
    {
        "line": 42,
        "fullcodeline": "|| ((cmdmod.cmod_split & WSP_VERT)"
    },
    {
        "line": 43,
        "fullcodeline": "? wp->w_height + wp->w_status_height < Rows - p_ch"
    },
    {
        "line": 45,
        "fullcodeline": ": wp->w_width != Columns)"
    }
]