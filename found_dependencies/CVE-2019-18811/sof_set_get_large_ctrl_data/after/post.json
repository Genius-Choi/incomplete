[
    {
        "line": 8,
        "fullcodeline": "size_t offset = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "partdata = kzalloc(SOF_IPC_MSG_MAX_SIZE, GFP_KERNEL);"
    },
    {
        "line": 30,
        "fullcodeline": "msg_bytes = sparams->msg_bytes;"
    },
    {
        "line": 31,
        "fullcodeline": "pl_size = sparams->pl_size;"
    },
    {
        "line": 34,
        "fullcodeline": "memcpy(partdata, cdata, sparams->hdr_bytes);"
    },
    {
        "line": 66,
        "fullcodeline": "mutex_unlock(&sdev->ipc->tx_mutex);"
    },
    {
        "line": 68,
        "fullcodeline": "kfree(partdata);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!partdata)"
    },
    {
        "line": 25,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 40,
        "fullcodeline": "for (i = 0; i < sparams->num_msg; i++) {"
    },
    {
        "line": 20,
        "fullcodeline": "err = sof_get_ctrl_copy_params(cdata->type, cdata, partdata,"
    },
    {
        "line": 26,
        "fullcodeline": "kfree(partdata);"
    },
    {
        "line": 41,
        "fullcodeline": "send_bytes = min(msg_bytes, pl_size);"
    },
    {
        "line": 42,
        "fullcodeline": "partdata->num_elems = send_bytes;"
    },
    {
        "line": 43,
        "fullcodeline": "partdata->rhdr.hdr.size = sparams->hdr_bytes + send_bytes;"
    },
    {
        "line": 44,
        "fullcodeline": "partdata->msg_index = i;"
    },
    {
        "line": 45,
        "fullcodeline": "msg_bytes -= send_bytes;"
    },
    {
        "line": 46,
        "fullcodeline": "partdata->elems_remaining = msg_bytes;"
    },
    {
        "line": 51,
        "fullcodeline": "err = sof_ipc_tx_message_unlocked(sdev->ipc,"
    },
    {
        "line": 63,
        "fullcodeline": "offset += pl_size;"
    },
    {
        "line": 17,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 23,
        "fullcodeline": "err = sof_get_ctrl_copy_params(cdata->type, partdata, cdata,"
    },
    {
        "line": 57,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 60,
        "fullcodeline": "if (!send)"
    },
    {
        "line": 49,
        "fullcodeline": "memcpy(sparams->dst, sparams->src + offset, send_bytes);"
    },
    {
        "line": 61,
        "fullcodeline": "memcpy(sparams->dst + offset, sparams->src, send_bytes);"
    }
]