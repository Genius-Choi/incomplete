[
    {
        "line": 8,
        "fullcodeline": "char *start = strstr(fmtp, \"configuration=\");"
    },
    {
        "line": 9,
        "fullcodeline": "assert(start != NULL);"
    },
    {
        "line": 10,
        "fullcodeline": "start += sizeof(\"configuration=\") - 1;"
    },
    {
        "line": 11,
        "fullcodeline": "char *end = strchr(start, ';');"
    },
    {
        "line": 12,
        "fullcodeline": "assert(end != NULL);"
    },
    {
        "line": 13,
        "fullcodeline": "size_t len = end - start;"
    },
    {
        "line": 14,
        "fullcodeline": "char b64[len + 1];"
    },
    {
        "line": 15,
        "fullcodeline": "memcpy(b64, start, len);"
    },
    {
        "line": 16,
        "fullcodeline": "b64[len] = '\\0';"
    },
    {
        "line": 18,
        "fullcodeline": "int     i_max   = rtp_mtu (id) - 6; /* payload max in one packet */"
    },
    {
        "line": 23,
        "fullcodeline": "i_data = vlc_b64_decode_binary(&p_orig, b64);"
    },
    {
        "line": 29,
        "fullcodeline": "p_data = p_orig + 9;"
    },
    {
        "line": 30,
        "fullcodeline": "i_data -= 9;"
    },
    {
        "line": 32,
        "fullcodeline": "int i_count = ( i_data + i_max - 1 ) / i_max;"
    },
    {
        "line": 74,
        "fullcodeline": "free(p_orig);"
    },
    {
        "line": 4,
        "fullcodeline": "if (fmtp == NULL)"
    },
    {
        "line": 24,
        "fullcodeline": "if (i_data <= 9)"
    },
    {
        "line": 34,
        "fullcodeline": "for( int i = 0; i < i_count; i++ )"
    },
    {
        "line": 26,
        "fullcodeline": "free(p_orig);"
    },
    {
        "line": 36,
        "fullcodeline": "int           i_payload = __MIN( i_max, i_data );"
    },
    {
        "line": 37,
        "fullcodeline": "block_t *out = block_Alloc( 18 + i_payload );"
    },
    {
        "line": 56,
        "fullcodeline": "uint32_t header = ((XIPH_IDENT & 0xffffff) << 8) |"
    },
    {
        "line": 60,
        "fullcodeline": "rtp_packetize_common( id, out, 0, i_pts );"
    },
    {
        "line": 62,
        "fullcodeline": "SetDWBE( out->p_buffer + 12, header);"
    },
    {
        "line": 63,
        "fullcodeline": "SetWBE( out->p_buffer + 16, i_payload);"
    },
    {
        "line": 64,
        "fullcodeline": "memcpy( &out->p_buffer[18], p_data, i_payload );"
    },
    {
        "line": 66,
        "fullcodeline": "out->i_dts    = i_pts;"
    },
    {
        "line": 68,
        "fullcodeline": "rtp_packetize_send( id, out );"
    },
    {
        "line": 70,
        "fullcodeline": "p_data += i_payload;"
    },
    {
        "line": 71,
        "fullcodeline": "i_data -= i_payload;"
    },
    {
        "line": 40,
        "fullcodeline": "if (i_count == 1)"
    },
    {
        "line": 42,
        "fullcodeline": "fragtype = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "numpkts = 1;"
    },
    {
        "line": 47,
        "fullcodeline": "numpkts = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "(fragtype << 6) | (1 << 4) | numpkts;"
    },
    {
        "line": 48,
        "fullcodeline": "if (i == 0)"
    },
    {
        "line": 49,
        "fullcodeline": "fragtype = 1;"
    },
    {
        "line": 50,
        "fullcodeline": "else if (i == i_count - 1)"
    },
    {
        "line": 51,
        "fullcodeline": "fragtype = 3;"
    },
    {
        "line": 53,
        "fullcodeline": "fragtype = 2;"
    }
]