[
    {
        "line": 4,
        "fullcodeline": "from mlflow_test_plugin.request_header_provider import PluginRequestHeaderProvider"
    },
    {
        "line": 9,
        "fullcodeline": "with mock.patch.object("
    },
    {
        "line": 11,
        "fullcodeline": "), mock.patch.object("
    },
    {
        "line": 16,
        "fullcodeline": "host_only = MlflowHostCreds(\"http://my-host\", server_cert_path=\"/some/path\")"
    },
    {
        "line": 17,
        "fullcodeline": "expected_headers = {"
    },
    {
        "line": 23,
        "fullcodeline": "response = mock.MagicMock()"
    },
    {
        "line": 24,
        "fullcodeline": "response.status_code = 200"
    },
    {
        "line": 25,
        "fullcodeline": "request.return_value = response"
    },
    {
        "line": 26,
        "fullcodeline": "http_request(host_only, \"/my/endpoint\", \"GET\")"
    },
    {
        "line": 27,
        "fullcodeline": "request.assert_called_with("
    },
    {
        "line": 14,
        "fullcodeline": "return_value={_USER_AGENT: \"test_user_agent\"},"
    },
    {
        "line": 18,
        "fullcodeline": "_USER_AGENT: \"{} {}\".format("
    },
    {
        "line": 19,
        "fullcodeline": "DefaultRequestHeaderProvider().request_headers()[_USER_AGENT], \"test_user_agent\""
    }
]