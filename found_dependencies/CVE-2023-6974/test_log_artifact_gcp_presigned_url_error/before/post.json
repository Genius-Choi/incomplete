[
    {
        "line": 2,
        "fullcodeline": "mock_credential_info = ArtifactCredentialInfo("
    },
    {
        "line": 5,
        "fullcodeline": "with mock.patch("
    },
    {
        "line": 6,
        "fullcodeline": "f\"{DATABRICKS_ARTIFACT_REPOSITORY}._get_credential_infos\","
    },
    {
        "line": 7,
        "fullcodeline": "return_value=[mock_credential_info],"
    },
    {
        "line": 8,
        "fullcodeline": ") as get_credential_infos_mock, mock.patch("
    },
    {
        "line": 9,
        "fullcodeline": "\"requests.Session.request\", side_effect=MlflowException(\"MOCK ERROR\")"
    },
    {
        "line": 13,
        "fullcodeline": "get_credential_infos_mock.assert_called_with(GetCredentialsForWrite, MOCK_RUN_ID, ANY)"
    },
    {
        "line": 11,
        "fullcodeline": "with pytest.raises(MlflowException, match=\"MOCK ERROR\"):"
    },
    {
        "line": 12,
        "fullcodeline": "databricks_artifact_repo.log_artifact(test_file)"
    }
]